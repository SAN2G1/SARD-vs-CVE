command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4743522	File	data/converged/CVE-2019-16718~_radare2/libr_debug_p_native_windows_windows_message.c								
ANR	4743523	DeclStmt									
ANR	4743524	Decl							char	char * [ ]	msg_types_arr
ANR	4743525	Function	__free_window	249:0:6381:6471							
ANR	4743526	FunctionDef	__free_window (void * ptr)		4743525	0					
ANR	4743527	CompoundStatement		249:36:6417:6471	4743525	0					
ANR	4743528	IdentifierDeclStatement	window * win = ptr ;	250:1:6420:6437	4743525	0	True				
ANR	4743529	IdentifierDecl	* win = ptr		4743525	0					
ANR	4743530	IdentifierDeclType	window *		4743525	0					
ANR	4743531	Identifier	win		4743525	1					
ANR	4743532	AssignmentExpression	* win = ptr		4743525	2		=			
ANR	4743533	Identifier	ptr		4743525	0					
ANR	4743534	Identifier	ptr		4743525	1					
ANR	4743535	ExpressionStatement	free ( win -> name )	251:1:6440:6456	4743525	1	True				
ANR	4743536	CallExpression	free ( win -> name )		4743525	0					
ANR	4743537	Callee	free		4743525	0					
ANR	4743538	Identifier	free		4743525	0					
ANR	4743539	ArgumentList	win -> name		4743525	1					
ANR	4743540	Argument	win -> name		4743525	0					
ANR	4743541	PtrMemberAccess	win -> name		4743525	0					
ANR	4743542	Identifier	win		4743525	0					
ANR	4743543	Identifier	name		4743525	1					
ANR	4743544	ExpressionStatement	free ( win )	252:1:6459:6469	4743525	2	True				
ANR	4743545	CallExpression	free ( win )		4743525	0					
ANR	4743546	Callee	free		4743525	0					
ANR	4743547	Identifier	free		4743525	0					
ANR	4743548	ArgumentList	win		4743525	1					
ANR	4743549	Argument	win		4743525	0					
ANR	4743550	Identifier	win		4743525	0					
ANR	4743551	ReturnType	RListFree		4743525	1					
ANR	4743552	Identifier	__free_window		4743525	2					
ANR	4743553	ParameterList	void * ptr		4743525	3					
ANR	4743554	Parameter	void * ptr	249:25:6406:6414	4743525	0	True				
ANR	4743555	ParameterType	void *		4743525	0					
ANR	4743556	Identifier	ptr		4743525	1					
ANR	4743557	CFGEntryNode	ENTRY		4743525		True				
ANR	4743558	CFGExitNode	EXIT		4743525		True				
ANR	4743559	Symbol	win -> name		4743525						
ANR	4743560	Symbol	* win		4743525						
ANR	4743561	Symbol	win		4743525						
ANR	4743562	Symbol	ptr		4743525						
ANR	4743563	Function	__enum_childs	255:0:6474:7107							
ANR	4743564	FunctionDef	"__enum_childs (_In_ HWND hwnd , _In_ LPARAM lParam)"		4743563	0					
ANR	4743565	CompoundStatement		258:2:6551:7107	4743563	0					
ANR	4743566	IdentifierDeclStatement	RList * windows = lParam ;	259:1:6554:6577	4743563	0	True				
ANR	4743567	IdentifierDecl	* windows = lParam		4743563	0					
ANR	4743568	IdentifierDeclType	RList *		4743563	0					
ANR	4743569	Identifier	windows		4743563	1					
ANR	4743570	AssignmentExpression	* windows = lParam		4743563	2		=			
ANR	4743571	Identifier	lParam		4743563	0					
ANR	4743572	Identifier	lParam		4743563	1					
ANR	4743573	IdentifierDeclStatement	window * win = R_NEW0 ( window ) ;	260:1:6580:6609	4743563	1	True				
ANR	4743574	IdentifierDecl	* win = R_NEW0 ( window )		4743563	0					
ANR	4743575	IdentifierDeclType	window *		4743563	0					
ANR	4743576	Identifier	win		4743563	1					
ANR	4743577	AssignmentExpression	* win = R_NEW0 ( window )		4743563	2		=			
ANR	4743578	Identifier	win		4743563	0					
ANR	4743579	CallExpression	R_NEW0 ( window )		4743563	1					
ANR	4743580	Callee	R_NEW0		4743563	0					
ANR	4743581	Identifier	R_NEW0		4743563	0					
ANR	4743582	ArgumentList	window		4743563	1					
ANR	4743583	Argument	window		4743563	0					
ANR	4743584	Identifier	window		4743563	0					
ANR	4743585	IfStatement	if ( ! win )		4743563	2					
ANR	4743586	Condition	! win	261:5:6616:6619	4743563	0	True				
ANR	4743587	UnaryOperationExpression	! win		4743563	0					
ANR	4743588	UnaryOperator	!		4743563	0					
ANR	4743589	Identifier	win		4743563	1					
ANR	4743590	CompoundStatement		4:11:70:70	4743563	1					
ANR	4743591	ExpressionStatement	r_list_free ( windows )	262:2:6626:6647	4743563	0	True				
ANR	4743592	CallExpression	r_list_free ( windows )		4743563	0					
ANR	4743593	Callee	r_list_free		4743563	0					
ANR	4743594	Identifier	r_list_free		4743563	0					
ANR	4743595	ArgumentList	windows		4743563	1					
ANR	4743596	Argument	windows		4743563	0					
ANR	4743597	Identifier	windows		4743563	0					
ANR	4743598	ReturnStatement	return false ;	263:2:6651:6663	4743563	1	True				
ANR	4743599	Identifier	false		4743563	0					
ANR	4743600	ExpressionStatement	"win -> tid = GetWindowThreadProcessId ( hwnd , NULL )"	265:1:6669:6717	4743563	3	True				
ANR	4743601	AssignmentExpression	"win -> tid = GetWindowThreadProcessId ( hwnd , NULL )"		4743563	0		=			
ANR	4743602	PtrMemberAccess	win -> tid		4743563	0					
ANR	4743603	Identifier	win		4743563	0					
ANR	4743604	Identifier	tid		4743563	1					
ANR	4743605	CallExpression	"GetWindowThreadProcessId ( hwnd , NULL )"		4743563	1					
ANR	4743606	Callee	GetWindowThreadProcessId		4743563	0					
ANR	4743607	Identifier	GetWindowThreadProcessId		4743563	0					
ANR	4743608	ArgumentList	hwnd		4743563	1					
ANR	4743609	Argument	hwnd		4743563	0					
ANR	4743610	Identifier	hwnd		4743563	0					
ANR	4743611	Argument	NULL		4743563	1					
ANR	4743612	Identifier	NULL		4743563	0					
ANR	4743613	ExpressionStatement	win -> h = hwnd	266:1:6720:6733	4743563	4	True				
ANR	4743614	AssignmentExpression	win -> h = hwnd		4743563	0		=			
ANR	4743615	PtrMemberAccess	win -> h		4743563	0					
ANR	4743616	Identifier	win		4743563	0					
ANR	4743617	Identifier	h		4743563	1					
ANR	4743618	Identifier	hwnd		4743563	1					
ANR	4743619	IdentifierDeclStatement	const size_t sz = MAX_CLASS_NAME * sizeof ( TCHAR ) ;	267:1:6736:6785	4743563	5	True				
ANR	4743620	IdentifierDecl	sz = MAX_CLASS_NAME * sizeof ( TCHAR )		4743563	0					
ANR	4743621	IdentifierDeclType	const size_t		4743563	0					
ANR	4743622	Identifier	sz		4743563	1					
ANR	4743623	AssignmentExpression	sz = MAX_CLASS_NAME * sizeof ( TCHAR )		4743563	2		=			
ANR	4743624	Identifier	sz		4743563	0					
ANR	4743625	MultiplicativeExpression	MAX_CLASS_NAME * sizeof ( TCHAR )		4743563	1		*			
ANR	4743626	Identifier	MAX_CLASS_NAME		4743563	0					
ANR	4743627	SizeofExpression	sizeof ( TCHAR )		4743563	1					
ANR	4743628	Sizeof	sizeof		4743563	0					
ANR	4743629	SizeofOperand	TCHAR		4743563	1					
ANR	4743630	IdentifierDeclStatement	char * tmp = malloc ( sz ) ;	268:1:6788:6811	4743563	6	True				
ANR	4743631	IdentifierDecl	* tmp = malloc ( sz )		4743563	0					
ANR	4743632	IdentifierDeclType	char *		4743563	0					
ANR	4743633	Identifier	tmp		4743563	1					
ANR	4743634	AssignmentExpression	* tmp = malloc ( sz )		4743563	2		=			
ANR	4743635	Identifier	tmp		4743563	0					
ANR	4743636	CallExpression	malloc ( sz )		4743563	1					
ANR	4743637	Callee	malloc		4743563	0					
ANR	4743638	Identifier	malloc		4743563	0					
ANR	4743639	ArgumentList	sz		4743563	1					
ANR	4743640	Argument	sz		4743563	0					
ANR	4743641	Identifier	sz		4743563	0					
ANR	4743642	IfStatement	if ( ! tmp )		4743563	7					
ANR	4743643	Condition	! tmp	269:5:6818:6821	4743563	0	True				
ANR	4743644	UnaryOperationExpression	! tmp		4743563	0					
ANR	4743645	UnaryOperator	!		4743563	0					
ANR	4743646	Identifier	tmp		4743563	1					
ANR	4743647	CompoundStatement		12:11:272:272	4743563	1					
ANR	4743648	ExpressionStatement	r_list_free ( windows )	270:2:6828:6849	4743563	0	True				
ANR	4743649	CallExpression	r_list_free ( windows )		4743563	0					
ANR	4743650	Callee	r_list_free		4743563	0					
ANR	4743651	Identifier	r_list_free		4743563	0					
ANR	4743652	ArgumentList	windows		4743563	1					
ANR	4743653	Argument	windows		4743563	0					
ANR	4743654	Identifier	windows		4743563	0					
ANR	4743655	ReturnStatement	return false ;	271:2:6853:6865	4743563	1	True				
ANR	4743656	Identifier	false		4743563	0					
ANR	4743657	ExpressionStatement	"GetClassNameW ( hwnd , tmp , MAX_CLASS_NAME )"	273:1:6871:6912	4743563	8	True				
ANR	4743658	CallExpression	"GetClassNameW ( hwnd , tmp , MAX_CLASS_NAME )"		4743563	0					
ANR	4743659	Callee	GetClassNameW		4743563	0					
ANR	4743660	Identifier	GetClassNameW		4743563	0					
ANR	4743661	ArgumentList	hwnd		4743563	1					
ANR	4743662	Argument	hwnd		4743563	0					
ANR	4743663	Identifier	hwnd		4743563	0					
ANR	4743664	Argument	tmp		4743563	1					
ANR	4743665	Identifier	tmp		4743563	0					
ANR	4743666	Argument	MAX_CLASS_NAME		4743563	2					
ANR	4743667	Identifier	MAX_CLASS_NAME		4743563	0					
ANR	4743668	ExpressionStatement	"win -> proc = GetClassLongPtrW ( hwnd , GCLP_WNDPROC )"	274:1:6915:6964	4743563	9	True				
ANR	4743669	AssignmentExpression	"win -> proc = GetClassLongPtrW ( hwnd , GCLP_WNDPROC )"		4743563	0		=			
ANR	4743670	PtrMemberAccess	win -> proc		4743563	0					
ANR	4743671	Identifier	win		4743563	0					
ANR	4743672	Identifier	proc		4743563	1					
ANR	4743673	CallExpression	"GetClassLongPtrW ( hwnd , GCLP_WNDPROC )"		4743563	1					
ANR	4743674	Callee	GetClassLongPtrW		4743563	0					
ANR	4743675	Identifier	GetClassLongPtrW		4743563	0					
ANR	4743676	ArgumentList	hwnd		4743563	1					
ANR	4743677	Argument	hwnd		4743563	0					
ANR	4743678	Identifier	hwnd		4743563	0					
ANR	4743679	Argument	GCLP_WNDPROC		4743563	1					
ANR	4743680	Identifier	GCLP_WNDPROC		4743563	0					
ANR	4743681	ExpressionStatement	win -> name = r_utf16_to_utf8 ( tmp )	275:1:6967:7000	4743563	10	True				
ANR	4743682	AssignmentExpression	win -> name = r_utf16_to_utf8 ( tmp )		4743563	0		=			
ANR	4743683	PtrMemberAccess	win -> name		4743563	0					
ANR	4743684	Identifier	win		4743563	0					
ANR	4743685	Identifier	name		4743563	1					
ANR	4743686	CallExpression	r_utf16_to_utf8 ( tmp )		4743563	1					
ANR	4743687	Callee	r_utf16_to_utf8		4743563	0					
ANR	4743688	Identifier	r_utf16_to_utf8		4743563	0					
ANR	4743689	ArgumentList	tmp		4743563	1					
ANR	4743690	Argument	tmp		4743563	0					
ANR	4743691	Identifier	tmp		4743563	0					
ANR	4743692	IfStatement	if ( ! win -> name )		4743563	11					
ANR	4743693	Condition	! win -> name	276:5:7007:7016	4743563	0	True				
ANR	4743694	UnaryOperationExpression	! win -> name		4743563	0					
ANR	4743695	UnaryOperator	!		4743563	0					
ANR	4743696	PtrMemberAccess	win -> name		4743563	1					
ANR	4743697	Identifier	win		4743563	0					
ANR	4743698	Identifier	name		4743563	1					
ANR	4743699	CompoundStatement		19:17:467:467	4743563	1					
ANR	4743700	ExpressionStatement	"win -> name = strdup ( """" )"	277:2:7023:7046	4743563	0	True				
ANR	4743701	AssignmentExpression	"win -> name = strdup ( """" )"		4743563	0		=			
ANR	4743702	PtrMemberAccess	win -> name		4743563	0					
ANR	4743703	Identifier	win		4743563	0					
ANR	4743704	Identifier	name		4743563	1					
ANR	4743705	CallExpression	"strdup ( """" )"		4743563	1					
ANR	4743706	Callee	strdup		4743563	0					
ANR	4743707	Identifier	strdup		4743563	0					
ANR	4743708	ArgumentList	""""""		4743563	1					
ANR	4743709	Argument	""""""		4743563	0					
ANR	4743710	PrimaryExpression	""""""		4743563	0					
ANR	4743711	ExpressionStatement	free ( tmp )	279:1:7052:7062	4743563	12	True				
ANR	4743712	CallExpression	free ( tmp )		4743563	0					
ANR	4743713	Callee	free		4743563	0					
ANR	4743714	Identifier	free		4743563	0					
ANR	4743715	ArgumentList	tmp		4743563	1					
ANR	4743716	Argument	tmp		4743563	0					
ANR	4743717	Identifier	tmp		4743563	0					
ANR	4743718	ExpressionStatement	"r_list_push ( windows , win )"	280:1:7065:7091	4743563	13	True				
ANR	4743719	CallExpression	"r_list_push ( windows , win )"		4743563	0					
ANR	4743720	Callee	r_list_push		4743563	0					
ANR	4743721	Identifier	r_list_push		4743563	0					
ANR	4743722	ArgumentList	windows		4743563	1					
ANR	4743723	Argument	windows		4743563	0					
ANR	4743724	Identifier	windows		4743563	0					
ANR	4743725	Argument	win		4743563	1					
ANR	4743726	Identifier	win		4743563	0					
ANR	4743727	ReturnStatement	return true ;	281:1:7094:7105	4743563	14	True				
ANR	4743728	Identifier	true		4743563	0					
ANR	4743729	ReturnType	static BOOL CALLBACK		4743563	1					
ANR	4743730	Identifier	__enum_childs		4743563	2					
ANR	4743731	ParameterList	"_In_ HWND hwnd , _In_ LPARAM lParam"		4743563	3					
ANR	4743732	Parameter	_In_ HWND hwnd	256:1:6511:6526	4743563	0	True				
ANR	4743733	ParameterType	_In_ HWND		4743563	0					
ANR	4743734	Identifier	hwnd		4743563	1					
ANR	4743735	Parameter	_In_ LPARAM lParam	257:1:6530:6547	4743563	1	True				
ANR	4743736	ParameterType	_In_ LPARAM		4743563	0					
ANR	4743737	Identifier	lParam		4743563	1					
ANR	4743738	CFGEntryNode	ENTRY		4743563		True				
ANR	4743739	CFGExitNode	EXIT		4743563		True				
ANR	4743740	Symbol	lParam		4743563						
ANR	4743741	Symbol	malloc		4743563						
ANR	4743742	Symbol	win -> name		4743563						
ANR	4743743	Symbol	NULL		4743563						
ANR	4743744	Symbol	win -> tid		4743563						
ANR	4743745	Symbol	* win		4743563						
ANR	4743746	Symbol	sz		4743563						
ANR	4743747	Symbol	false		4743563						
ANR	4743748	Symbol	r_utf16_to_utf8		4743563						
ANR	4743749	Symbol	MAX_CLASS_NAME		4743563						
ANR	4743750	Symbol	windows		4743563						
ANR	4743751	Symbol	R_NEW0		4743563						
ANR	4743752	Symbol	hwnd		4743563						
ANR	4743753	Symbol	tmp		4743563						
ANR	4743754	Symbol	GetWindowThreadProcessId		4743563						
ANR	4743755	Symbol	true		4743563						
ANR	4743756	Symbol	win -> proc		4743563						
ANR	4743757	Symbol	win -> h		4743563						
ANR	4743758	Symbol	window		4743563						
ANR	4743759	Symbol	strdup		4743563						
ANR	4743760	Symbol	win		4743563						
ANR	4743761	Symbol	GetClassLongPtrW		4743563						
ANR	4743762	Symbol	GCLP_WNDPROC		4743563						
ANR	4743763	Function	__get_windows	284:0:7110:8065							
ANR	4743764	FunctionDef	__get_windows (RDebug * dbg)		4743763	0					
ANR	4743765	CompoundStatement		284:41:7151:8065	4743763	0					
ANR	4743766	ExpressionStatement	GetWindowLongPtrW	285:1:7154:7171	4743763	0	True				
ANR	4743767	Identifier	GetWindowLongPtrW		4743763	0					
ANR	4743768	IdentifierDeclStatement	RList * windows = r_list_newf ( ( RListFree ) __free_window ) ;	286:1:7174:7228	4743763	1	True				
ANR	4743769	IdentifierDecl	* windows = r_list_newf ( ( RListFree ) __free_window )		4743763	0					
ANR	4743770	IdentifierDeclType	RList *		4743763	0					
ANR	4743771	Identifier	windows		4743763	1					
ANR	4743772	AssignmentExpression	* windows = r_list_newf ( ( RListFree ) __free_window )		4743763	2		=			
ANR	4743773	Identifier	windows		4743763	0					
ANR	4743774	CallExpression	r_list_newf ( ( RListFree ) __free_window )		4743763	1					
ANR	4743775	Callee	r_list_newf		4743763	0					
ANR	4743776	Identifier	r_list_newf		4743763	0					
ANR	4743777	ArgumentList	( RListFree ) __free_window		4743763	1					
ANR	4743778	Argument	( RListFree ) __free_window		4743763	0					
ANR	4743779	CastExpression	( RListFree ) __free_window		4743763	0					
ANR	4743780	CastTarget	RListFree		4743763	0					
ANR	4743781	Identifier	__free_window		4743763	1					
ANR	4743782	IdentifierDeclStatement	HWND hCurWnd = NULL ;	287:1:7231:7250	4743763	2	True				
ANR	4743783	IdentifierDecl	hCurWnd = NULL		4743763	0					
ANR	4743784	IdentifierDeclType	HWND		4743763	0					
ANR	4743785	Identifier	hCurWnd		4743763	1					
ANR	4743786	AssignmentExpression	hCurWnd = NULL		4743763	2		=			
ANR	4743787	Identifier	NULL		4743763	0					
ANR	4743788	Identifier	NULL		4743763	1					
ANR	4743789	DoStatement	do		4743763	3					
ANR	4743790	CompoundStatement		8:2:187:245	4743763	0					
ANR	4743791	ExpressionStatement	"hCurWnd = FindWindowEx ( NULL , hCurWnd , NULL , NULL )"	289:2:7260:7310	4743763	0	True				
ANR	4743792	AssignmentExpression	"hCurWnd = FindWindowEx ( NULL , hCurWnd , NULL , NULL )"		4743763	0		=			
ANR	4743793	Identifier	hCurWnd		4743763	0					
ANR	4743794	CallExpression	"FindWindowEx ( NULL , hCurWnd , NULL , NULL )"		4743763	1					
ANR	4743795	Callee	FindWindowEx		4743763	0					
ANR	4743796	Identifier	FindWindowEx		4743763	0					
ANR	4743797	ArgumentList	NULL		4743763	1					
ANR	4743798	Argument	NULL		4743763	0					
ANR	4743799	Identifier	NULL		4743763	0					
ANR	4743800	Argument	hCurWnd		4743763	1					
ANR	4743801	Identifier	hCurWnd		4743763	0					
ANR	4743802	Argument	NULL		4743763	2					
ANR	4743803	Identifier	NULL		4743763	0					
ANR	4743804	Argument	NULL		4743763	3					
ANR	4743805	Identifier	NULL		4743763	0					
ANR	4743806	IdentifierDeclStatement	DWORD dwProcessID = 0 ;	290:2:7314:7335	4743763	1	True				
ANR	4743807	IdentifierDecl	dwProcessID = 0		4743763	0					
ANR	4743808	IdentifierDeclType	DWORD		4743763	0					
ANR	4743809	Identifier	dwProcessID		4743763	1					
ANR	4743810	AssignmentExpression	dwProcessID = 0		4743763	2		=			
ANR	4743811	Identifier	dwProcessID		4743763	0					
ANR	4743812	PrimaryExpression	0		4743763	1					
ANR	4743813	IdentifierDeclStatement	"int tid = GetWindowThreadProcessId ( hCurWnd , & dwProcessID ) ;"	291:2:7339:7397	4743763	2	True				
ANR	4743814	IdentifierDecl	"tid = GetWindowThreadProcessId ( hCurWnd , & dwProcessID )"		4743763	0					
ANR	4743815	IdentifierDeclType	int		4743763	0					
ANR	4743816	Identifier	tid		4743763	1					
ANR	4743817	AssignmentExpression	"tid = GetWindowThreadProcessId ( hCurWnd , & dwProcessID )"		4743763	2		=			
ANR	4743818	Identifier	tid		4743763	0					
ANR	4743819	CallExpression	"GetWindowThreadProcessId ( hCurWnd , & dwProcessID )"		4743763	1					
ANR	4743820	Callee	GetWindowThreadProcessId		4743763	0					
ANR	4743821	Identifier	GetWindowThreadProcessId		4743763	0					
ANR	4743822	ArgumentList	hCurWnd		4743763	1					
ANR	4743823	Argument	hCurWnd		4743763	0					
ANR	4743824	Identifier	hCurWnd		4743763	0					
ANR	4743825	Argument	& dwProcessID		4743763	1					
ANR	4743826	UnaryOperationExpression	& dwProcessID		4743763	0					
ANR	4743827	UnaryOperator	&		4743763	0					
ANR	4743828	Identifier	dwProcessID		4743763	1					
ANR	4743829	IfStatement	if ( dbg -> pid == dwProcessID )		4743763	3					
ANR	4743830	Condition	dbg -> pid == dwProcessID	292:6:7405:7427	4743763	0	True				
ANR	4743831	EqualityExpression	dbg -> pid == dwProcessID		4743763	0		==			
ANR	4743832	PtrMemberAccess	dbg -> pid		4743763	0					
ANR	4743833	Identifier	dbg		4743763	0					
ANR	4743834	Identifier	pid		4743763	1					
ANR	4743835	Identifier	dwProcessID		4743763	1					
ANR	4743836	CompoundStatement		19:3:530:553	4743763	1					
ANR	4743837	ExpressionStatement	"EnumChildWindows ( hCurWnd , __enum_childs , windows )"	293:3:7435:7485	4743763	0	True				
ANR	4743838	CallExpression	"EnumChildWindows ( hCurWnd , __enum_childs , windows )"		4743763	0					
ANR	4743839	Callee	EnumChildWindows		4743763	0					
ANR	4743840	Identifier	EnumChildWindows		4743763	0					
ANR	4743841	ArgumentList	hCurWnd		4743763	1					
ANR	4743842	Argument	hCurWnd		4743763	0					
ANR	4743843	Identifier	hCurWnd		4743763	0					
ANR	4743844	Argument	__enum_childs		4743763	1					
ANR	4743845	Identifier	__enum_childs		4743763	0					
ANR	4743846	Argument	windows		4743763	2					
ANR	4743847	Identifier	windows		4743763	0					
ANR	4743848	IdentifierDeclStatement	window * win = R_NEW0 ( window ) ;	294:3:7490:7519	4743763	1	True				
ANR	4743849	IdentifierDecl	* win = R_NEW0 ( window )		4743763	0					
ANR	4743850	IdentifierDeclType	window *		4743763	0					
ANR	4743851	Identifier	win		4743763	1					
ANR	4743852	AssignmentExpression	* win = R_NEW0 ( window )		4743763	2		=			
ANR	4743853	Identifier	win		4743763	0					
ANR	4743854	CallExpression	R_NEW0 ( window )		4743763	1					
ANR	4743855	Callee	R_NEW0		4743763	0					
ANR	4743856	Identifier	R_NEW0		4743763	0					
ANR	4743857	ArgumentList	window		4743763	1					
ANR	4743858	Argument	window		4743763	0					
ANR	4743859	Identifier	window		4743763	0					
ANR	4743860	IfStatement	if ( ! win )		4743763	2					
ANR	4743861	Condition	! win	295:7:7528:7531	4743763	0	True				
ANR	4743862	UnaryOperationExpression	! win		4743763	0					
ANR	4743863	UnaryOperator	!		4743763	0					
ANR	4743864	Identifier	win		4743763	1					
ANR	4743865	CompoundStatement		12:13:382:382	4743763	1					
ANR	4743866	ExpressionStatement	r_list_free ( windows )	296:4:7540:7561	4743763	0	True				
ANR	4743867	CallExpression	r_list_free ( windows )		4743763	0					
ANR	4743868	Callee	r_list_free		4743763	0					
ANR	4743869	Identifier	r_list_free		4743763	0					
ANR	4743870	ArgumentList	windows		4743763	1					
ANR	4743871	Argument	windows		4743763	0					
ANR	4743872	Identifier	windows		4743763	0					
ANR	4743873	ReturnStatement	return NULL ;	297:4:7567:7578	4743763	1	True				
ANR	4743874	Identifier	NULL		4743763	0					
ANR	4743875	ExpressionStatement	win -> tid = tid	299:3:7588:7602	4743763	3	True				
ANR	4743876	AssignmentExpression	win -> tid = tid		4743763	0		=			
ANR	4743877	PtrMemberAccess	win -> tid		4743763	0					
ANR	4743878	Identifier	win		4743763	0					
ANR	4743879	Identifier	tid		4743763	1					
ANR	4743880	Identifier	tid		4743763	1					
ANR	4743881	ExpressionStatement	win -> h = hCurWnd	300:3:7607:7623	4743763	4	True				
ANR	4743882	AssignmentExpression	win -> h = hCurWnd		4743763	0		=			
ANR	4743883	PtrMemberAccess	win -> h		4743763	0					
ANR	4743884	Identifier	win		4743763	0					
ANR	4743885	Identifier	h		4743763	1					
ANR	4743886	Identifier	hCurWnd		4743763	1					
ANR	4743887	IdentifierDeclStatement	const size_t sz = MAX_CLASS_NAME * sizeof ( WCHAR ) ;	301:3:7628:7677	4743763	5	True				
ANR	4743888	IdentifierDecl	sz = MAX_CLASS_NAME * sizeof ( WCHAR )		4743763	0					
ANR	4743889	IdentifierDeclType	const size_t		4743763	0					
ANR	4743890	Identifier	sz		4743763	1					
ANR	4743891	AssignmentExpression	sz = MAX_CLASS_NAME * sizeof ( WCHAR )		4743763	2		=			
ANR	4743892	Identifier	sz		4743763	0					
ANR	4743893	MultiplicativeExpression	MAX_CLASS_NAME * sizeof ( WCHAR )		4743763	1		*			
ANR	4743894	Identifier	MAX_CLASS_NAME		4743763	0					
ANR	4743895	SizeofExpression	sizeof ( WCHAR )		4743763	1					
ANR	4743896	Sizeof	sizeof		4743763	0					
ANR	4743897	SizeofOperand	WCHAR		4743763	1					
ANR	4743898	IdentifierDeclStatement	char * tmp = malloc ( sz ) ;	302:3:7682:7705	4743763	6	True				
ANR	4743899	IdentifierDecl	* tmp = malloc ( sz )		4743763	0					
ANR	4743900	IdentifierDeclType	char *		4743763	0					
ANR	4743901	Identifier	tmp		4743763	1					
ANR	4743902	AssignmentExpression	* tmp = malloc ( sz )		4743763	2		=			
ANR	4743903	Identifier	tmp		4743763	0					
ANR	4743904	CallExpression	malloc ( sz )		4743763	1					
ANR	4743905	Callee	malloc		4743763	0					
ANR	4743906	Identifier	malloc		4743763	0					
ANR	4743907	ArgumentList	sz		4743763	1					
ANR	4743908	Argument	sz		4743763	0					
ANR	4743909	Identifier	sz		4743763	0					
ANR	4743910	IfStatement	if ( ! tmp )		4743763	7					
ANR	4743911	Condition	! tmp	303:7:7714:7717	4743763	0	True				
ANR	4743912	UnaryOperationExpression	! tmp		4743763	0					
ANR	4743913	UnaryOperator	!		4743763	0					
ANR	4743914	Identifier	tmp		4743763	1					
ANR	4743915	CompoundStatement		20:13:568:568	4743763	1					
ANR	4743916	ExpressionStatement	r_list_free ( windows )	304:4:7726:7747	4743763	0	True				
ANR	4743917	CallExpression	r_list_free ( windows )		4743763	0					
ANR	4743918	Callee	r_list_free		4743763	0					
ANR	4743919	Identifier	r_list_free		4743763	0					
ANR	4743920	ArgumentList	windows		4743763	1					
ANR	4743921	Argument	windows		4743763	0					
ANR	4743922	Identifier	windows		4743763	0					
ANR	4743923	ReturnStatement	return NULL ;	305:4:7753:7764	4743763	1	True				
ANR	4743924	Identifier	NULL		4743763	0					
ANR	4743925	ExpressionStatement	"GetClassNameW ( hCurWnd , tmp , MAX_CLASS_NAME )"	307:3:7774:7818	4743763	8	True				
ANR	4743926	CallExpression	"GetClassNameW ( hCurWnd , tmp , MAX_CLASS_NAME )"		4743763	0					
ANR	4743927	Callee	GetClassNameW		4743763	0					
ANR	4743928	Identifier	GetClassNameW		4743763	0					
ANR	4743929	ArgumentList	hCurWnd		4743763	1					
ANR	4743930	Argument	hCurWnd		4743763	0					
ANR	4743931	Identifier	hCurWnd		4743763	0					
ANR	4743932	Argument	tmp		4743763	1					
ANR	4743933	Identifier	tmp		4743763	0					
ANR	4743934	Argument	MAX_CLASS_NAME		4743763	2					
ANR	4743935	Identifier	MAX_CLASS_NAME		4743763	0					
ANR	4743936	ExpressionStatement	"win -> proc = GetClassLongPtrW ( hCurWnd , GCLP_WNDPROC )"	308:3:7823:7875	4743763	9	True				
ANR	4743937	AssignmentExpression	"win -> proc = GetClassLongPtrW ( hCurWnd , GCLP_WNDPROC )"		4743763	0		=			
ANR	4743938	PtrMemberAccess	win -> proc		4743763	0					
ANR	4743939	Identifier	win		4743763	0					
ANR	4743940	Identifier	proc		4743763	1					
ANR	4743941	CallExpression	"GetClassLongPtrW ( hCurWnd , GCLP_WNDPROC )"		4743763	1					
ANR	4743942	Callee	GetClassLongPtrW		4743763	0					
ANR	4743943	Identifier	GetClassLongPtrW		4743763	0					
ANR	4743944	ArgumentList	hCurWnd		4743763	1					
ANR	4743945	Argument	hCurWnd		4743763	0					
ANR	4743946	Identifier	hCurWnd		4743763	0					
ANR	4743947	Argument	GCLP_WNDPROC		4743763	1					
ANR	4743948	Identifier	GCLP_WNDPROC		4743763	0					
ANR	4743949	ExpressionStatement	win -> name = r_utf16_to_utf8 ( tmp )	309:3:7880:7913	4743763	10	True				
ANR	4743950	AssignmentExpression	win -> name = r_utf16_to_utf8 ( tmp )		4743763	0		=			
ANR	4743951	PtrMemberAccess	win -> name		4743763	0					
ANR	4743952	Identifier	win		4743763	0					
ANR	4743953	Identifier	name		4743763	1					
ANR	4743954	CallExpression	r_utf16_to_utf8 ( tmp )		4743763	1					
ANR	4743955	Callee	r_utf16_to_utf8		4743763	0					
ANR	4743956	Identifier	r_utf16_to_utf8		4743763	0					
ANR	4743957	ArgumentList	tmp		4743763	1					
ANR	4743958	Argument	tmp		4743763	0					
ANR	4743959	Identifier	tmp		4743763	0					
ANR	4743960	IfStatement	if ( ! win -> name )		4743763	11					
ANR	4743961	Condition	! win -> name	310:7:7922:7931	4743763	0	True				
ANR	4743962	UnaryOperationExpression	! win -> name		4743763	0					
ANR	4743963	UnaryOperator	!		4743763	0					
ANR	4743964	PtrMemberAccess	win -> name		4743763	1					
ANR	4743965	Identifier	win		4743763	0					
ANR	4743966	Identifier	name		4743763	1					
ANR	4743967	CompoundStatement		27:19:782:782	4743763	1					
ANR	4743968	ExpressionStatement	"win -> name = strdup ( """" )"	311:4:7940:7963	4743763	0	True				
ANR	4743969	AssignmentExpression	"win -> name = strdup ( """" )"		4743763	0		=			
ANR	4743970	PtrMemberAccess	win -> name		4743763	0					
ANR	4743971	Identifier	win		4743763	0					
ANR	4743972	Identifier	name		4743763	1					
ANR	4743973	CallExpression	"strdup ( """" )"		4743763	1					
ANR	4743974	Callee	strdup		4743763	0					
ANR	4743975	Identifier	strdup		4743763	0					
ANR	4743976	ArgumentList	""""""		4743763	1					
ANR	4743977	Argument	""""""		4743763	0					
ANR	4743978	PrimaryExpression	""""""		4743763	0					
ANR	4743979	ExpressionStatement	free ( tmp )	313:3:7973:7983	4743763	12	True				
ANR	4743980	CallExpression	free ( tmp )		4743763	0					
ANR	4743981	Callee	free		4743763	0					
ANR	4743982	Identifier	free		4743763	0					
ANR	4743983	ArgumentList	tmp		4743763	1					
ANR	4743984	Argument	tmp		4743763	0					
ANR	4743985	Identifier	tmp		4743763	0					
ANR	4743986	ExpressionStatement	"r_list_push ( windows , win )"	314:3:7988:8014	4743763	13	True				
ANR	4743987	CallExpression	"r_list_push ( windows , win )"		4743763	0					
ANR	4743988	Callee	r_list_push		4743763	0					
ANR	4743989	Identifier	r_list_push		4743763	0					
ANR	4743990	ArgumentList	windows		4743763	1					
ANR	4743991	Argument	windows		4743763	0					
ANR	4743992	Identifier	windows		4743763	0					
ANR	4743993	Argument	win		4743763	1					
ANR	4743994	Identifier	win		4743763	0					
ANR	4743995	Condition	hCurWnd != NULL	316:10:8030:8044	4743763	1	True				
ANR	4743996	EqualityExpression	hCurWnd != NULL		4743763	0		!=			
ANR	4743997	Identifier	hCurWnd		4743763	0					
ANR	4743998	Identifier	NULL		4743763	1					
ANR	4743999	ReturnStatement	return windows ;	317:1:8049:8063	4743763	4	True				
ANR	4744000	Identifier	windows		4743763	0					
ANR	4744001	ReturnType	static RList *		4743763	1					
ANR	4744002	Identifier	__get_windows		4743763	2					
ANR	4744003	ParameterList	RDebug * dbg		4743763	3					
ANR	4744004	Parameter	RDebug * dbg	284:28:7138:7148	4743763	0	True				
ANR	4744005	ParameterType	RDebug *		4743763	0					
ANR	4744006	Identifier	dbg		4743763	1					
ANR	4744007	CFGEntryNode	ENTRY		4743763		True				
ANR	4744008	CFGExitNode	EXIT		4743763		True				
ANR	4744009	Symbol	* win		4743763						
ANR	4744010	Symbol	r_utf16_to_utf8		4743763						
ANR	4744011	Symbol	tid		4743763						
ANR	4744012	Symbol	tmp		4743763						
ANR	4744013	Symbol	hCurWnd		4743763						
ANR	4744014	Symbol	win -> proc		4743763						
ANR	4744015	Symbol	win -> h		4743763						
ANR	4744016	Symbol	dwProcessID		4743763						
ANR	4744017	Symbol	win		4743763						
ANR	4744018	Symbol	GCLP_WNDPROC		4743763						
ANR	4744019	Symbol	GetClassLongPtrW		4743763						
ANR	4744020	Symbol	malloc		4743763						
ANR	4744021	Symbol	win -> name		4743763						
ANR	4744022	Symbol	NULL		4743763						
ANR	4744023	Symbol	r_list_newf		4743763						
ANR	4744024	Symbol	win -> tid		4743763						
ANR	4744025	Symbol	sz		4743763						
ANR	4744026	Symbol	dbg		4743763						
ANR	4744027	Symbol	MAX_CLASS_NAME		4743763						
ANR	4744028	Symbol	windows		4743763						
ANR	4744029	Symbol	* dbg		4743763						
ANR	4744030	Symbol	& dwProcessID		4743763						
ANR	4744031	Symbol	R_NEW0		4743763						
ANR	4744032	Symbol	__free_window		4743763						
ANR	4744033	Symbol	__enum_childs		4743763						
ANR	4744034	Symbol	dbg -> pid		4743763						
ANR	4744035	Symbol	FindWindowEx		4743763						
ANR	4744036	Symbol	GetWindowThreadProcessId		4743763						
ANR	4744037	Symbol	window		4743763						
ANR	4744038	Symbol	strdup		4743763						
ANR	4744039	Function	__get_dispatchmessage_offset	321:0:8069:8850							
ANR	4744040	FunctionDef	__get_dispatchmessage_offset (RDebug * dbg)		4744039	0					
ANR	4744041	CompoundStatement		321:54:8123:8850	4744039	0					
ANR	4744042	IdentifierDeclStatement	RList * modlist = r_debug_modules_list ( dbg ) ;	322:1:8126:8169	4744039	0	True				
ANR	4744043	IdentifierDecl	* modlist = r_debug_modules_list ( dbg )		4744039	0					
ANR	4744044	IdentifierDeclType	RList *		4744039	0					
ANR	4744045	Identifier	modlist		4744039	1					
ANR	4744046	AssignmentExpression	* modlist = r_debug_modules_list ( dbg )		4744039	2		=			
ANR	4744047	Identifier	modlist		4744039	0					
ANR	4744048	CallExpression	r_debug_modules_list ( dbg )		4744039	1					
ANR	4744049	Callee	r_debug_modules_list		4744039	0					
ANR	4744050	Identifier	r_debug_modules_list		4744039	0					
ANR	4744051	ArgumentList	dbg		4744039	1					
ANR	4744052	Argument	dbg		4744039	0					
ANR	4744053	Identifier	dbg		4744039	0					
ANR	4744054	IdentifierDeclStatement	RListIter * it ;	323:1:8172:8185	4744039	1	True				
ANR	4744055	IdentifierDecl	* it		4744039	0					
ANR	4744056	IdentifierDeclType	RListIter *		4744039	0					
ANR	4744057	Identifier	it		4744039	1					
ANR	4744058	IdentifierDeclStatement	RDebugMap * mod ;	324:1:8188:8202	4744039	2	True				
ANR	4744059	IdentifierDecl	* mod		4744039	0					
ANR	4744060	IdentifierDeclType	RDebugMap *		4744039	0					
ANR	4744061	Identifier	mod		4744039	1					
ANR	4744062	IdentifierDeclStatement	bool found = false ;	325:1:8205:8223	4744039	3	True				
ANR	4744063	IdentifierDecl	found = false		4744039	0					
ANR	4744064	IdentifierDeclType	bool		4744039	0					
ANR	4744065	Identifier	found		4744039	1					
ANR	4744066	AssignmentExpression	found = false		4744039	2		=			
ANR	4744067	Identifier	false		4744039	0					
ANR	4744068	Identifier	false		4744039	1					
ANR	4744069	Statement	r_list_foreach	326:1:8226:8239	4744039	4	True				
ANR	4744070	Statement	(	326:16:8241:8241	4744039	5	True				
ANR	4744071	Statement	modlist	326:17:8242:8248	4744039	6	True				
ANR	4744072	Statement	","	326:24:8249:8249	4744039	7	True				
ANR	4744073	Statement	it	326:26:8251:8252	4744039	8	True				
ANR	4744074	Statement	","	326:28:8253:8253	4744039	9	True				
ANR	4744075	Statement	mod	326:30:8255:8257	4744039	10	True				
ANR	4744076	Statement	)	326:33:8258:8258	4744039	11	True				
ANR	4744077	CompoundStatement		6:35:136:136	4744039	12					
ANR	4744078	IfStatement	"if ( ! strnicmp ( mod -> name , ""user32.dll"" , sizeof ( ""user32.dll"" ) ) )"		4744039	0					
ANR	4744079	Condition	"! strnicmp ( mod -> name , ""user32.dll"" , sizeof ( ""user32.dll"" ) )"	327:6:8268:8325	4744039	0	True				
ANR	4744080	UnaryOperationExpression	"! strnicmp ( mod -> name , ""user32.dll"" , sizeof ( ""user32.dll"" ) )"		4744039	0					
ANR	4744081	UnaryOperator	!		4744039	0					
ANR	4744082	CallExpression	"strnicmp ( mod -> name , ""user32.dll"" , sizeof ( ""user32.dll"" ) )"		4744039	1					
ANR	4744083	Callee	strnicmp		4744039	0					
ANR	4744084	Identifier	strnicmp		4744039	0					
ANR	4744085	ArgumentList	mod -> name		4744039	1					
ANR	4744086	Argument	mod -> name		4744039	0					
ANR	4744087	PtrMemberAccess	mod -> name		4744039	0					
ANR	4744088	Identifier	mod		4744039	0					
ANR	4744089	Identifier	name		4744039	1					
ANR	4744090	Argument	"""user32.dll"""		4744039	1					
ANR	4744091	PrimaryExpression	"""user32.dll"""		4744039	0					
ANR	4744092	Argument	"sizeof ( ""user32.dll"" )"		4744039	2					
ANR	4744093	SizeofExpression	"sizeof ( ""user32.dll"" )"		4744039	0					
ANR	4744094	Sizeof	sizeof		4744039	0					
ANR	4744095	PrimaryExpression	"""user32.dll"""		4744039	1					
ANR	4744096	CompoundStatement		7:66:204:204	4744039	1					
ANR	4744097	ExpressionStatement	found = true	328:3:8333:8345	4744039	0	True				
ANR	4744098	AssignmentExpression	found = true		4744039	0		=			
ANR	4744099	Identifier	found		4744039	0					
ANR	4744100	Identifier	true		4744039	1					
ANR	4744101	BreakStatement	break ;	329:3:8350:8355	4744039	1	True				
ANR	4744102	IfStatement	if ( ! found )		4744039	13					
ANR	4744103	Condition	! found	332:5:8369:8374	4744039	0	True				
ANR	4744104	UnaryOperationExpression	! found		4744039	0					
ANR	4744105	UnaryOperator	!		4744039	0					
ANR	4744106	Identifier	found		4744039	1					
ANR	4744107	CompoundStatement		12:13:253:253	4744039	1					
ANR	4744108	ReturnStatement	return 0 ;	333:2:8381:8389	4744039	0	True				
ANR	4744109	PrimaryExpression	0		4744039	0					
ANR	4744110	IdentifierDeclStatement	"char * res = dbg -> corebind . cmdstr ( dbg -> corebind . core , ""f~DispatchMessageW"" ) ;"	335:1:8395:8469	4744039	14	True				
ANR	4744111	IdentifierDecl	"* res = dbg -> corebind . cmdstr ( dbg -> corebind . core , ""f~DispatchMessageW"" )"		4744039	0					
ANR	4744112	IdentifierDeclType	char *		4744039	0					
ANR	4744113	Identifier	res		4744039	1					
ANR	4744114	AssignmentExpression	"* res = dbg -> corebind . cmdstr ( dbg -> corebind . core , ""f~DispatchMessageW"" )"		4744039	2		=			
ANR	4744115	Identifier	res		4744039	0					
ANR	4744116	CallExpression	"dbg -> corebind . cmdstr ( dbg -> corebind . core , ""f~DispatchMessageW"" )"		4744039	1					
ANR	4744117	Callee	dbg -> corebind . cmdstr		4744039	0					
ANR	4744118	MemberAccess	dbg -> corebind . cmdstr		4744039	0					
ANR	4744119	PtrMemberAccess	dbg -> corebind		4744039	0					
ANR	4744120	Identifier	dbg		4744039	0					
ANR	4744121	Identifier	corebind		4744039	1					
ANR	4744122	Identifier	cmdstr		4744039	1					
ANR	4744123	ArgumentList	dbg -> corebind . core		4744039	1					
ANR	4744124	Argument	dbg -> corebind . core		4744039	0					
ANR	4744125	MemberAccess	dbg -> corebind . core		4744039	0					
ANR	4744126	PtrMemberAccess	dbg -> corebind		4744039	0					
ANR	4744127	Identifier	dbg		4744039	0					
ANR	4744128	Identifier	corebind		4744039	1					
ANR	4744129	Identifier	core		4744039	1					
ANR	4744130	Argument	"""f~DispatchMessageW"""		4744039	1					
ANR	4744131	PrimaryExpression	"""f~DispatchMessageW"""		4744039	0					
ANR	4744132	IfStatement	if ( ! * res )		4744039	15					
ANR	4744133	Condition	! * res	336:5:8476:8480	4744039	0	True				
ANR	4744134	UnaryOperationExpression	! * res		4744039	0					
ANR	4744135	UnaryOperator	!		4744039	0					
ANR	4744136	UnaryOperationExpression	* res		4744039	1					
ANR	4744137	UnaryOperator	*		4744039	0					
ANR	4744138	Identifier	res		4744039	1					
ANR	4744139	CompoundStatement		16:12:359:359	4744039	1					
ANR	4744140	ExpressionStatement	free ( res )	337:2:8487:8497	4744039	0	True				
ANR	4744141	CallExpression	free ( res )		4744039	0					
ANR	4744142	Callee	free		4744039	0					
ANR	4744143	Identifier	free		4744039	0					
ANR	4744144	ArgumentList	res		4744039	1					
ANR	4744145	Argument	res		4744039	0					
ANR	4744146	Identifier	res		4744039	0					
ANR	4744147	ReturnStatement	return 0 ;	338:2:8501:8509	4744039	1	True				
ANR	4744148	PrimaryExpression	0		4744039	0					
ANR	4744149	IdentifierDeclStatement	"char * line = strtok ( res , ""\\n"" ) ;"	340:1:8515:8546	4744039	16	True				
ANR	4744150	IdentifierDecl	"* line = strtok ( res , ""\\n"" )"		4744039	0					
ANR	4744151	IdentifierDeclType	char *		4744039	0					
ANR	4744152	Identifier	line		4744039	1					
ANR	4744153	AssignmentExpression	"* line = strtok ( res , ""\\n"" )"		4744039	2		=			
ANR	4744154	Identifier	line		4744039	0					
ANR	4744155	CallExpression	"strtok ( res , ""\\n"" )"		4744039	1					
ANR	4744156	Callee	strtok		4744039	0					
ANR	4744157	Identifier	strtok		4744039	0					
ANR	4744158	ArgumentList	res		4744039	1					
ANR	4744159	Argument	res		4744039	0					
ANR	4744160	Identifier	res		4744039	0					
ANR	4744161	Argument	"""\\n"""		4744039	1					
ANR	4744162	PrimaryExpression	"""\\n"""		4744039	0					
ANR	4744163	IdentifierDeclStatement	ut64 offset = 0 ;	341:1:8549:8564	4744039	17	True				
ANR	4744164	IdentifierDecl	offset = 0		4744039	0					
ANR	4744165	IdentifierDeclType	ut64		4744039	0					
ANR	4744166	Identifier	offset		4744039	1					
ANR	4744167	AssignmentExpression	offset = 0		4744039	2		=			
ANR	4744168	Identifier	offset		4744039	0					
ANR	4744169	PrimaryExpression	0		4744039	1					
ANR	4744170	DoStatement	do		4744039	18					
ANR	4744171	CompoundStatement		23:2:451:482	4744039	0					
ANR	4744172	IdentifierDeclStatement	"char * sym = strrchr ( line , ' ' ) ;"	343:2:8575:8606	4744039	0	True				
ANR	4744173	IdentifierDecl	"* sym = strrchr ( line , ' ' )"		4744039	0					
ANR	4744174	IdentifierDeclType	char *		4744039	0					
ANR	4744175	Identifier	sym		4744039	1					
ANR	4744176	AssignmentExpression	"* sym = strrchr ( line , ' ' )"		4744039	2		=			
ANR	4744177	Identifier	sym		4744039	0					
ANR	4744178	CallExpression	"strrchr ( line , ' ' )"		4744039	1					
ANR	4744179	Callee	strrchr		4744039	0					
ANR	4744180	Identifier	strrchr		4744039	0					
ANR	4744181	ArgumentList	line		4744039	1					
ANR	4744182	Argument	line		4744039	0					
ANR	4744183	Identifier	line		4744039	0					
ANR	4744184	Argument	' '		4744039	1					
ANR	4744185	PrimaryExpression	' '		4744039	0					
ANR	4744186	IfStatement	"if ( sym && r_str_startswith ( sym + 1 , ""sym.imp"" ) )"		4744039	1					
ANR	4744187	Condition	"sym && r_str_startswith ( sym + 1 , ""sym.imp"" )"	344:6:8614:8657	4744039	0	True				
ANR	4744188	AndExpression	"sym && r_str_startswith ( sym + 1 , ""sym.imp"" )"		4744039	0		&&			
ANR	4744189	Identifier	sym		4744039	0					
ANR	4744190	CallExpression	"r_str_startswith ( sym + 1 , ""sym.imp"" )"		4744039	1					
ANR	4744191	Callee	r_str_startswith		4744039	0					
ANR	4744192	Identifier	r_str_startswith		4744039	0					
ANR	4744193	ArgumentList	sym + 1		4744039	1					
ANR	4744194	Argument	sym + 1		4744039	0					
ANR	4744195	AdditiveExpression	sym + 1		4744039	0		+			
ANR	4744196	Identifier	sym		4744039	0					
ANR	4744197	PrimaryExpression	1		4744039	1					
ANR	4744198	Argument	"""sym.imp"""		4744039	1					
ANR	4744199	PrimaryExpression	"""sym.imp"""		4744039	0					
ANR	4744200	CompoundStatement		24:52:536:536	4744039	1					
ANR	4744201	ExpressionStatement	"offset = r_num_math ( NULL , line )"	345:3:8665:8697	4744039	0	True				
ANR	4744202	AssignmentExpression	"offset = r_num_math ( NULL , line )"		4744039	0		=			
ANR	4744203	Identifier	offset		4744039	0					
ANR	4744204	CallExpression	"r_num_math ( NULL , line )"		4744039	1					
ANR	4744205	Callee	r_num_math		4744039	0					
ANR	4744206	Identifier	r_num_math		4744039	0					
ANR	4744207	ArgumentList	NULL		4744039	1					
ANR	4744208	Argument	NULL		4744039	0					
ANR	4744209	Identifier	NULL		4744039	0					
ANR	4744210	Argument	line		4744039	1					
ANR	4744211	Identifier	line		4744039	0					
ANR	4744212	ExpressionStatement	"dbg -> iob . read_at ( dbg -> iob . io , offset , & offset , sizeof ( offset ) )"	346:3:8702:8766	4744039	1	True				
ANR	4744213	CallExpression	"dbg -> iob . read_at ( dbg -> iob . io , offset , & offset , sizeof ( offset ) )"		4744039	0					
ANR	4744214	Callee	dbg -> iob . read_at		4744039	0					
ANR	4744215	MemberAccess	dbg -> iob . read_at		4744039	0					
ANR	4744216	PtrMemberAccess	dbg -> iob		4744039	0					
ANR	4744217	Identifier	dbg		4744039	0					
ANR	4744218	Identifier	iob		4744039	1					
ANR	4744219	Identifier	read_at		4744039	1					
ANR	4744220	ArgumentList	dbg -> iob . io		4744039	1					
ANR	4744221	Argument	dbg -> iob . io		4744039	0					
ANR	4744222	MemberAccess	dbg -> iob . io		4744039	0					
ANR	4744223	PtrMemberAccess	dbg -> iob		4744039	0					
ANR	4744224	Identifier	dbg		4744039	0					
ANR	4744225	Identifier	iob		4744039	1					
ANR	4744226	Identifier	io		4744039	1					
ANR	4744227	Argument	offset		4744039	1					
ANR	4744228	Identifier	offset		4744039	0					
ANR	4744229	Argument	& offset		4744039	2					
ANR	4744230	UnaryOperationExpression	& offset		4744039	0					
ANR	4744231	UnaryOperator	&		4744039	0					
ANR	4744232	Identifier	offset		4744039	1					
ANR	4744233	Argument	sizeof ( offset )		4744039	3					
ANR	4744234	SizeofExpression	sizeof ( offset )		4744039	0					
ANR	4744235	Sizeof	sizeof		4744039	0					
ANR	4744236	SizeofOperand	offset		4744039	1					
ANR	4744237	BreakStatement	break ;	347:3:8771:8776	4744039	2	True				
ANR	4744238	Condition	"line = strtok ( NULL , ""\\n"" )"	349:10:8792:8817	4744039	1	True				
ANR	4744239	AssignmentExpression	"line = strtok ( NULL , ""\\n"" )"		4744039	0		=			
ANR	4744240	Identifier	line		4744039	0					
ANR	4744241	CallExpression	"strtok ( NULL , ""\\n"" )"		4744039	1					
ANR	4744242	Callee	strtok		4744039	0					
ANR	4744243	Identifier	strtok		4744039	0					
ANR	4744244	ArgumentList	NULL		4744039	1					
ANR	4744245	Argument	NULL		4744039	0					
ANR	4744246	Identifier	NULL		4744039	0					
ANR	4744247	Argument	"""\\n"""		4744039	1					
ANR	4744248	PrimaryExpression	"""\\n"""		4744039	0					
ANR	4744249	ExpressionStatement	free ( res )	350:1:8822:8832	4744039	19	True				
ANR	4744250	CallExpression	free ( res )		4744039	0					
ANR	4744251	Callee	free		4744039	0					
ANR	4744252	Identifier	free		4744039	0					
ANR	4744253	ArgumentList	res		4744039	1					
ANR	4744254	Argument	res		4744039	0					
ANR	4744255	Identifier	res		4744039	0					
ANR	4744256	ReturnStatement	return offset ;	351:1:8835:8848	4744039	20	True				
ANR	4744257	Identifier	offset		4744039	0					
ANR	4744258	ReturnType	static ut64		4744039	1					
ANR	4744259	Identifier	__get_dispatchmessage_offset		4744039	2					
ANR	4744260	ParameterList	RDebug * dbg		4744039	3					
ANR	4744261	Parameter	RDebug * dbg	321:41:8110:8120	4744039	0	True				
ANR	4744262	ParameterType	RDebug *		4744039	0					
ANR	4744263	Identifier	dbg		4744039	1					
ANR	4744264	CFGEntryNode	ENTRY		4744039		True				
ANR	4744265	CFGExitNode	EXIT		4744039		True				
ANR	4744266	CFGErrorNode	ERROR		4744039		True				
ANR	4744267	Symbol	dbg -> iob . io		4744039						
ANR	4744268	Symbol	mod		4744039						
ANR	4744269	Symbol	modlist		4744039						
ANR	4744270	Symbol	line		4744039						
ANR	4744271	Symbol	sym		4744039						
ANR	4744272	Symbol	* res		4744039						
ANR	4744273	Symbol	r_num_math		4744039						
ANR	4744274	Symbol	dbg -> corebind . core		4744039						
ANR	4744275	Symbol	found		4744039						
ANR	4744276	Symbol	dbg -> corebind . cmdstr		4744039						
ANR	4744277	Symbol	strnicmp		4744039						
ANR	4744278	Symbol	r_str_startswith		4744039						
ANR	4744279	Symbol	res		4744039						
ANR	4744280	Symbol	NULL		4744039						
ANR	4744281	Symbol	dbg -> iob		4744039						
ANR	4744282	Symbol	offset		4744039						
ANR	4744283	Symbol	r_debug_modules_list		4744039						
ANR	4744284	Symbol	& offset		4744039						
ANR	4744285	Symbol	dbg		4744039						
ANR	4744286	Symbol	false		4744039						
ANR	4744287	Symbol	mod -> name		4744039						
ANR	4744288	Symbol	strtok		4744039						
ANR	4744289	Symbol	it		4744039						
ANR	4744290	Symbol	* mod		4744039						
ANR	4744291	Symbol	* dbg		4744039						
ANR	4744292	Symbol	dbg -> corebind		4744039						
ANR	4744293	Symbol	strrchr		4744039						
ANR	4744294	Symbol	true		4744039						
ANR	4744295	Function	__init_msg_types	354:0:8853:9041							
ANR	4744296	FunctionDef	__init_msg_types (Sdb * * msg_types)		4744295	0					
ANR	4744297	CompoundStatement		354:46:8899:9041	4744295	0					
ANR	4744298	ExpressionStatement	* msg_types = sdb_new0 ( )	355:1:8902:8926	4744295	0	True				
ANR	4744299	AssignmentExpression	* msg_types = sdb_new0 ( )		4744295	0		=			
ANR	4744300	UnaryOperationExpression	* msg_types		4744295	0					
ANR	4744301	UnaryOperator	*		4744295	0					
ANR	4744302	Identifier	msg_types		4744295	1					
ANR	4744303	CallExpression	sdb_new0 ( )		4744295	1					
ANR	4744304	Callee	sdb_new0		4744295	0					
ANR	4744305	Identifier	sdb_new0		4744295	0					
ANR	4744306	ArgumentList			4744295	1					
ANR	4744307	IdentifierDeclStatement	int i ;	356:1:8929:8934	4744295	1	True				
ANR	4744308	IdentifierDecl	i		4744295	0					
ANR	4744309	IdentifierDeclType	int		4744295	0					
ANR	4744310	Identifier	i		4744295	1					
ANR	4744311	IdentifierDeclStatement	char * cur_type ;	357:1:8937:8951	4744295	2	True				
ANR	4744312	IdentifierDecl	* cur_type		4744295	0					
ANR	4744313	IdentifierDeclType	char *		4744295	0					
ANR	4744314	Identifier	cur_type		4744295	1					
ANR	4744315	ForStatement	for ( i = 0 ; cur_type = msg_types_arr [ i ] ; i ++ )		4744295	3					
ANR	4744316	ForInit	i = 0 ;	358:6:8959:8964	4744295	0	True				
ANR	4744317	AssignmentExpression	i = 0		4744295	0		=			
ANR	4744318	Identifier	i		4744295	0					
ANR	4744319	PrimaryExpression	0		4744295	1					
ANR	4744320	Condition	cur_type = msg_types_arr [ i ]	358:13:8966:8992	4744295	1	True				
ANR	4744321	AssignmentExpression	cur_type = msg_types_arr [ i ]		4744295	0		=			
ANR	4744322	Identifier	cur_type		4744295	0					
ANR	4744323	ArrayIndexing	msg_types_arr [ i ]		4744295	1					
ANR	4744324	Identifier	msg_types_arr		4744295	0					
ANR	4744325	Identifier	i		4744295	1					
ANR	4744326	PostIncDecOperationExpression	i ++	358:42:8995:8997	4744295	2	True				
ANR	4744327	Identifier	i		4744295	0					
ANR	4744328	IncDec	++		4744295	1					
ANR	4744329	CompoundStatement		5:47:100:100	4744295	3					
ANR	4744330	ExpressionStatement	"sdb_query ( * msg_types , cur_type )"	359:2:9004:9036	4744295	0	True				
ANR	4744331	CallExpression	"sdb_query ( * msg_types , cur_type )"		4744295	0					
ANR	4744332	Callee	sdb_query		4744295	0					
ANR	4744333	Identifier	sdb_query		4744295	0					
ANR	4744334	ArgumentList	* msg_types		4744295	1					
ANR	4744335	Argument	* msg_types		4744295	0					
ANR	4744336	UnaryOperationExpression	* msg_types		4744295	0					
ANR	4744337	UnaryOperator	*		4744295	0					
ANR	4744338	Identifier	msg_types		4744295	1					
ANR	4744339	Argument	cur_type		4744295	1					
ANR	4744340	Identifier	cur_type		4744295	0					
ANR	4744341	ReturnType	static void		4744295	1					
ANR	4744342	Identifier	__init_msg_types		4744295	2					
ANR	4744343	ParameterList	Sdb * * msg_types		4744295	3					
ANR	4744344	Parameter	Sdb * * msg_types	354:29:8882:8896	4744295	0	True				
ANR	4744345	ParameterType	Sdb * *		4744295	0					
ANR	4744346	Identifier	msg_types		4744295	1					
ANR	4744347	CFGEntryNode	ENTRY		4744295		True				
ANR	4744348	CFGExitNode	EXIT		4744295		True				
ANR	4744349	Symbol	sdb_new0		4744295						
ANR	4744350	Symbol	* msg_types		4744295						
ANR	4744351	Symbol	* i		4744295						
ANR	4744352	Symbol	msg_types		4744295						
ANR	4744353	Symbol	i		4744295						
ANR	4744354	Symbol	msg_types_arr		4744295						
ANR	4744355	Symbol	cur_type		4744295						
ANR	4744356	Symbol	* msg_types_arr		4744295						
ANR	4744357	Function	__get_msg_type	363:0:9044:9337							
ANR	4744358	FunctionDef	__get_msg_type (char * name)		4744357	0					
ANR	4744359	CompoundStatement		363:40:9084:9337	4744357	0					
ANR	4744360	Statement	static	364:1:9087:9092	4744357	0	True				
ANR	4744361	IdentifierDeclStatement	Sdb * msg_types = NULL ;	364:8:9094:9115	4744357	1	True				
ANR	4744362	IdentifierDecl	* msg_types = NULL		4744357	0					
ANR	4744363	IdentifierDeclType	Sdb *		4744357	0					
ANR	4744364	Identifier	msg_types		4744357	1					
ANR	4744365	AssignmentExpression	* msg_types = NULL		4744357	2		=			
ANR	4744366	Identifier	NULL		4744357	0					
ANR	4744367	Identifier	NULL		4744357	1					
ANR	4744368	IfStatement	if ( ! msg_types )		4744357	2					
ANR	4744369	Condition	! msg_types	365:5:9122:9131	4744357	0	True				
ANR	4744370	UnaryOperationExpression	! msg_types		4744357	0					
ANR	4744371	UnaryOperator	!		4744357	0					
ANR	4744372	Identifier	msg_types		4744357	1					
ANR	4744373	CompoundStatement		3:17:49:49	4744357	1					
ANR	4744374	ExpressionStatement	__init_msg_types ( & msg_types )	366:2:9138:9167	4744357	0	True				
ANR	4744375	CallExpression	__init_msg_types ( & msg_types )		4744357	0					
ANR	4744376	Callee	__init_msg_types		4744357	0					
ANR	4744377	Identifier	__init_msg_types		4744357	0					
ANR	4744378	ArgumentList	& msg_types		4744357	1					
ANR	4744379	Argument	& msg_types		4744357	0					
ANR	4744380	UnaryOperationExpression	& msg_types		4744357	0					
ANR	4744381	UnaryOperator	&		4744357	0					
ANR	4744382	Identifier	msg_types		4744357	1					
ANR	4744383	IdentifierDeclStatement	int found ;	368:1:9173:9182	4744357	3	True				
ANR	4744384	IdentifierDecl	found		4744357	0					
ANR	4744385	IdentifierDeclType	int		4744357	0					
ANR	4744386	Identifier	found		4744357	1					
ANR	4744387	IdentifierDeclStatement	"const char * type_str = sdb_const_get ( msg_types , name , & found ) ;"	369:1:9185:9247	4744357	4	True				
ANR	4744388	IdentifierDecl	"* type_str = sdb_const_get ( msg_types , name , & found )"		4744357	0					
ANR	4744389	IdentifierDeclType	const char *		4744357	0					
ANR	4744390	Identifier	type_str		4744357	1					
ANR	4744391	AssignmentExpression	"* type_str = sdb_const_get ( msg_types , name , & found )"		4744357	2		=			
ANR	4744392	Identifier	type_str		4744357	0					
ANR	4744393	CallExpression	"sdb_const_get ( msg_types , name , & found )"		4744357	1					
ANR	4744394	Callee	sdb_const_get		4744357	0					
ANR	4744395	Identifier	sdb_const_get		4744357	0					
ANR	4744396	ArgumentList	msg_types		4744357	1					
ANR	4744397	Argument	msg_types		4744357	0					
ANR	4744398	Identifier	msg_types		4744357	0					
ANR	4744399	Argument	name		4744357	1					
ANR	4744400	Identifier	name		4744357	0					
ANR	4744401	Argument	& found		4744357	2					
ANR	4744402	UnaryOperationExpression	& found		4744357	0					
ANR	4744403	UnaryOperator	&		4744357	0					
ANR	4744404	Identifier	found		4744357	1					
ANR	4744405	IfStatement	if ( found )		4744357	5					
ANR	4744406	Condition	found	370:5:9254:9258	4744357	0	True				
ANR	4744407	Identifier	found		4744357	0					
ANR	4744408	CompoundStatement		9:2:180:218	4744357	1					
ANR	4744409	IdentifierDeclStatement	"int type = r_num_math ( NULL , type_str ) ;"	371:2:9265:9303	4744357	0	True				
ANR	4744410	IdentifierDecl	"type = r_num_math ( NULL , type_str )"		4744357	0					
ANR	4744411	IdentifierDeclType	int		4744357	0					
ANR	4744412	Identifier	type		4744357	1					
ANR	4744413	AssignmentExpression	"type = r_num_math ( NULL , type_str )"		4744357	2		=			
ANR	4744414	Identifier	type		4744357	0					
ANR	4744415	CallExpression	"r_num_math ( NULL , type_str )"		4744357	1					
ANR	4744416	Callee	r_num_math		4744357	0					
ANR	4744417	Identifier	r_num_math		4744357	0					
ANR	4744418	ArgumentList	NULL		4744357	1					
ANR	4744419	Argument	NULL		4744357	0					
ANR	4744420	Identifier	NULL		4744357	0					
ANR	4744421	Argument	type_str		4744357	1					
ANR	4744422	Identifier	type_str		4744357	0					
ANR	4744423	ReturnStatement	return type ;	372:2:9307:9318	4744357	1	True				
ANR	4744424	Identifier	type		4744357	0					
ANR	4744425	ReturnStatement	return NULL ;	374:1:9324:9335	4744357	6	True				
ANR	4744426	Identifier	NULL		4744357	0					
ANR	4744427	ReturnType	static DWORD		4744357	1					
ANR	4744428	Identifier	__get_msg_type		4744357	2					
ANR	4744429	ParameterList	char * name		4744357	3					
ANR	4744430	Parameter	char * name	363:28:9072:9081	4744357	0	True				
ANR	4744431	ParameterType	char *		4744357	0					
ANR	4744432	Identifier	name		4744357	1					
ANR	4744433	CFGEntryNode	ENTRY		4744357		True				
ANR	4744434	CFGExitNode	EXIT		4744357		True				
ANR	4744435	Symbol	& found		4744357						
ANR	4744436	Symbol	NULL		4744357						
ANR	4744437	Symbol	found		4744357						
ANR	4744438	Symbol	& msg_types		4744357						
ANR	4744439	Symbol	name		4744357						
ANR	4744440	Symbol	msg_types		4744357						
ANR	4744441	Symbol	type_str		4744357						
ANR	4744442	Symbol	type		4744357						
ANR	4744443	Symbol	sdb_const_get		4744357						
ANR	4744444	Symbol	r_num_math		4744357						
ANR	4744445	Function	__print_windows	377:0:9340:9989							
ANR	4744446	FunctionDef	"__print_windows (RDebug * dbg , RList * windows)"		4744445	0					
ANR	4744447	CompoundStatement		377:57:9397:9989	4744445	0					
ANR	4744448	IdentifierDeclStatement	RTable * tbl = r_table_new ( ) ;	378:1:9400:9428	4744445	0	True				
ANR	4744449	IdentifierDecl	* tbl = r_table_new ( )		4744445	0					
ANR	4744450	IdentifierDeclType	RTable *		4744445	0					
ANR	4744451	Identifier	tbl		4744445	1					
ANR	4744452	AssignmentExpression	* tbl = r_table_new ( )		4744445	2		=			
ANR	4744453	Identifier	tbl		4744445	0					
ANR	4744454	CallExpression	r_table_new ( )		4744445	1					
ANR	4744455	Callee	r_table_new		4744445	0					
ANR	4744456	Identifier	r_table_new		4744445	0					
ANR	4744457	ArgumentList			4744445	1					
ANR	4744458	ExpressionStatement	"r_table_add_column ( tbl , r_table_type ( ""number"" ) , ""Handle"" , ST32_MAX )"	379:1:9431:9500	4744445	1	True				
ANR	4744459	CallExpression	"r_table_add_column ( tbl , r_table_type ( ""number"" ) , ""Handle"" , ST32_MAX )"		4744445	0					
ANR	4744460	Callee	r_table_add_column		4744445	0					
ANR	4744461	Identifier	r_table_add_column		4744445	0					
ANR	4744462	ArgumentList	tbl		4744445	1					
ANR	4744463	Argument	tbl		4744445	0					
ANR	4744464	Identifier	tbl		4744445	0					
ANR	4744465	Argument	"r_table_type ( ""number"" )"		4744445	1					
ANR	4744466	CallExpression	"r_table_type ( ""number"" )"		4744445	0					
ANR	4744467	Callee	r_table_type		4744445	0					
ANR	4744468	Identifier	r_table_type		4744445	0					
ANR	4744469	ArgumentList	"""number"""		4744445	1					
ANR	4744470	Argument	"""number"""		4744445	0					
ANR	4744471	PrimaryExpression	"""number"""		4744445	0					
ANR	4744472	Argument	"""Handle"""		4744445	2					
ANR	4744473	PrimaryExpression	"""Handle"""		4744445	0					
ANR	4744474	Argument	ST32_MAX		4744445	3					
ANR	4744475	Identifier	ST32_MAX		4744445	0					
ANR	4744476	ExpressionStatement	"r_table_add_column ( tbl , r_table_type ( ""number"" ) , ""TID"" , ST32_MAX )"	380:1:9503:9569	4744445	2	True				
ANR	4744477	CallExpression	"r_table_add_column ( tbl , r_table_type ( ""number"" ) , ""TID"" , ST32_MAX )"		4744445	0					
ANR	4744478	Callee	r_table_add_column		4744445	0					
ANR	4744479	Identifier	r_table_add_column		4744445	0					
ANR	4744480	ArgumentList	tbl		4744445	1					
ANR	4744481	Argument	tbl		4744445	0					
ANR	4744482	Identifier	tbl		4744445	0					
ANR	4744483	Argument	"r_table_type ( ""number"" )"		4744445	1					
ANR	4744484	CallExpression	"r_table_type ( ""number"" )"		4744445	0					
ANR	4744485	Callee	r_table_type		4744445	0					
ANR	4744486	Identifier	r_table_type		4744445	0					
ANR	4744487	ArgumentList	"""number"""		4744445	1					
ANR	4744488	Argument	"""number"""		4744445	0					
ANR	4744489	PrimaryExpression	"""number"""		4744445	0					
ANR	4744490	Argument	"""TID"""		4744445	2					
ANR	4744491	PrimaryExpression	"""TID"""		4744445	0					
ANR	4744492	Argument	ST32_MAX		4744445	3					
ANR	4744493	Identifier	ST32_MAX		4744445	0					
ANR	4744494	ExpressionStatement	"r_table_add_column ( tbl , r_table_type ( ""string"" ) , ""Class Name"" , ST32_MAX )"	381:1:9572:9645	4744445	3	True				
ANR	4744495	CallExpression	"r_table_add_column ( tbl , r_table_type ( ""string"" ) , ""Class Name"" , ST32_MAX )"		4744445	0					
ANR	4744496	Callee	r_table_add_column		4744445	0					
ANR	4744497	Identifier	r_table_add_column		4744445	0					
ANR	4744498	ArgumentList	tbl		4744445	1					
ANR	4744499	Argument	tbl		4744445	0					
ANR	4744500	Identifier	tbl		4744445	0					
ANR	4744501	Argument	"r_table_type ( ""string"" )"		4744445	1					
ANR	4744502	CallExpression	"r_table_type ( ""string"" )"		4744445	0					
ANR	4744503	Callee	r_table_type		4744445	0					
ANR	4744504	Identifier	r_table_type		4744445	0					
ANR	4744505	ArgumentList	"""string"""		4744445	1					
ANR	4744506	Argument	"""string"""		4744445	0					
ANR	4744507	PrimaryExpression	"""string"""		4744445	0					
ANR	4744508	Argument	"""Class Name"""		4744445	2					
ANR	4744509	PrimaryExpression	"""Class Name"""		4744445	0					
ANR	4744510	Argument	ST32_MAX		4744445	3					
ANR	4744511	Identifier	ST32_MAX		4744445	0					
ANR	4744512	IdentifierDeclStatement	RListIter * it ;	382:1:9648:9661	4744445	4	True				
ANR	4744513	IdentifierDecl	* it		4744445	0					
ANR	4744514	IdentifierDeclType	RListIter *		4744445	0					
ANR	4744515	Identifier	it		4744445	1					
ANR	4744516	IdentifierDeclStatement	window * win ;	383:1:9664:9675	4744445	5	True				
ANR	4744517	IdentifierDecl	* win		4744445	0					
ANR	4744518	IdentifierDeclType	window *		4744445	0					
ANR	4744519	Identifier	win		4744445	1					
ANR	4744520	Statement	r_list_foreach	384:1:9678:9691	4744445	6	True				
ANR	4744521	Statement	(	384:16:9693:9693	4744445	7	True				
ANR	4744522	Statement	windows	384:17:9694:9700	4744445	8	True				
ANR	4744523	Statement	","	384:24:9701:9701	4744445	9	True				
ANR	4744524	Statement	it	384:26:9703:9704	4744445	10	True				
ANR	4744525	Statement	","	384:28:9705:9705	4744445	11	True				
ANR	4744526	Statement	win	384:30:9707:9709	4744445	12	True				
ANR	4744527	Statement	)	384:33:9710:9710	4744445	13	True				
ANR	4744528	CompoundStatement		8:35:314:314	4744445	14					
ANR	4744529	Statement	char	385:2:9716:9719	4744445	0	True				
ANR	4744530	Statement	*	385:7:9721:9721	4744445	1	True				
ANR	4744531	Statement	handle	385:8:9722:9727	4744445	2	True				
ANR	4744532	Statement	=	385:15:9729:9729	4744445	3	True				
ANR	4744533	Statement	r_str_newf	385:17:9731:9740	4744445	4	True				
ANR	4744534	Statement	(	385:28:9742:9742	4744445	5	True				
ANR	4744535	Statement	"""0x%08"""	385:29:9743:9749	4744445	6	True				
ANR	4744536	Statement	PFMT32x	385:36:9750:9756	4744445	7	True				
ANR	4744537	Statement	""""""	385:43:9757:9758	4744445	8	True				
ANR	4744538	Statement	","	385:45:9759:9759	4744445	9	True				
ANR	4744539	Statement	win	385:47:9761:9763	4744445	10	True				
ANR	4744540	Statement	->	385:50:9764:9765	4744445	11	True				
ANR	4744541	Statement	h	385:52:9766:9766	4744445	12	True				
ANR	4744542	Statement	)	385:53:9767:9767	4744445	13	True				
ANR	4744543	ExpressionStatement		385:54:9768:9768	4744445	14	True				
ANR	4744544	Statement	char	386:2:9772:9775	4744445	15	True				
ANR	4744545	Statement	*	386:7:9777:9777	4744445	16	True				
ANR	4744546	Statement	tid	386:8:9778:9780	4744445	17	True				
ANR	4744547	Statement	=	386:12:9782:9782	4744445	18	True				
ANR	4744548	Statement	r_str_newf	386:14:9784:9793	4744445	19	True				
ANR	4744549	Statement	(	386:25:9795:9795	4744445	20	True				
ANR	4744550	Statement	"""%"""	386:26:9796:9798	4744445	21	True				
ANR	4744551	Statement	PFMT32u	386:29:9799:9805	4744445	22	True				
ANR	4744552	Statement	""""""	386:36:9806:9807	4744445	23	True				
ANR	4744553	Statement	","	386:38:9808:9808	4744445	24	True				
ANR	4744554	Statement	win	386:40:9810:9812	4744445	25	True				
ANR	4744555	Statement	->	386:43:9813:9814	4744445	26	True				
ANR	4744556	Statement	tid	386:45:9815:9817	4744445	27	True				
ANR	4744557	Statement	)	386:48:9818:9818	4744445	28	True				
ANR	4744558	ExpressionStatement		386:49:9819:9819	4744445	29	True				
ANR	4744559	ExpressionStatement	"r_table_add_row ( tbl , handle , tid , win -> name , NULL )"	387:2:9823:9874	4744445	30	True				
ANR	4744560	CallExpression	"r_table_add_row ( tbl , handle , tid , win -> name , NULL )"		4744445	0					
ANR	4744561	Callee	r_table_add_row		4744445	0					
ANR	4744562	Identifier	r_table_add_row		4744445	0					
ANR	4744563	ArgumentList	tbl		4744445	1					
ANR	4744564	Argument	tbl		4744445	0					
ANR	4744565	Identifier	tbl		4744445	0					
ANR	4744566	Argument	handle		4744445	1					
ANR	4744567	Identifier	handle		4744445	0					
ANR	4744568	Argument	tid		4744445	2					
ANR	4744569	Identifier	tid		4744445	0					
ANR	4744570	Argument	win -> name		4744445	3					
ANR	4744571	PtrMemberAccess	win -> name		4744445	0					
ANR	4744572	Identifier	win		4744445	0					
ANR	4744573	Identifier	name		4744445	1					
ANR	4744574	Argument	NULL		4744445	4					
ANR	4744575	Identifier	NULL		4744445	0					
ANR	4744576	ExpressionStatement	free ( handle )	388:2:9878:9891	4744445	31	True				
ANR	4744577	CallExpression	free ( handle )		4744445	0					
ANR	4744578	Callee	free		4744445	0					
ANR	4744579	Identifier	free		4744445	0					
ANR	4744580	ArgumentList	handle		4744445	1					
ANR	4744581	Argument	handle		4744445	0					
ANR	4744582	Identifier	handle		4744445	0					
ANR	4744583	IdentifierDeclStatement	char * t = r_table_tofancystring ( tbl ) ;	390:1:9897:9934	4744445	15	True				
ANR	4744584	IdentifierDecl	* t = r_table_tofancystring ( tbl )		4744445	0					
ANR	4744585	IdentifierDeclType	char *		4744445	0					
ANR	4744586	Identifier	t		4744445	1					
ANR	4744587	AssignmentExpression	* t = r_table_tofancystring ( tbl )		4744445	2		=			
ANR	4744588	Identifier	t		4744445	0					
ANR	4744589	CallExpression	r_table_tofancystring ( tbl )		4744445	1					
ANR	4744590	Callee	r_table_tofancystring		4744445	0					
ANR	4744591	Identifier	r_table_tofancystring		4744445	0					
ANR	4744592	ArgumentList	tbl		4744445	1					
ANR	4744593	Argument	tbl		4744445	0					
ANR	4744594	Identifier	tbl		4744445	0					
ANR	4744595	ExpressionStatement	dbg -> cb_printf ( t )	391:1:9937:9955	4744445	16	True				
ANR	4744596	CallExpression	dbg -> cb_printf ( t )		4744445	0					
ANR	4744597	Callee	dbg -> cb_printf		4744445	0					
ANR	4744598	PtrMemberAccess	dbg -> cb_printf		4744445	0					
ANR	4744599	Identifier	dbg		4744445	0					
ANR	4744600	Identifier	cb_printf		4744445	1					
ANR	4744601	ArgumentList	t		4744445	1					
ANR	4744602	Argument	t		4744445	0					
ANR	4744603	Identifier	t		4744445	0					
ANR	4744604	ExpressionStatement	free ( t )	392:1:9958:9966	4744445	17	True				
ANR	4744605	CallExpression	free ( t )		4744445	0					
ANR	4744606	Callee	free		4744445	0					
ANR	4744607	Identifier	free		4744445	0					
ANR	4744608	ArgumentList	t		4744445	1					
ANR	4744609	Argument	t		4744445	0					
ANR	4744610	Identifier	t		4744445	0					
ANR	4744611	ExpressionStatement	r_table_free ( tbl )	393:1:9969:9987	4744445	18	True				
ANR	4744612	CallExpression	r_table_free ( tbl )		4744445	0					
ANR	4744613	Callee	r_table_free		4744445	0					
ANR	4744614	Identifier	r_table_free		4744445	0					
ANR	4744615	ArgumentList	tbl		4744445	1					
ANR	4744616	Argument	tbl		4744445	0					
ANR	4744617	Identifier	tbl		4744445	0					
ANR	4744618	ReturnType	static void		4744445	1					
ANR	4744619	Identifier	__print_windows		4744445	2					
ANR	4744620	ParameterList	"RDebug * dbg , RList * windows"		4744445	3					
ANR	4744621	Parameter	RDebug * dbg	377:28:9368:9378	4744445	0	True				
ANR	4744622	ParameterType	RDebug *		4744445	0					
ANR	4744623	Identifier	dbg		4744445	1					
ANR	4744624	Parameter	RList * windows	377:41:9381:9394	4744445	1	True				
ANR	4744625	ParameterType	RList *		4744445	0					
ANR	4744626	Identifier	windows		4744445	1					
ANR	4744627	CFGEntryNode	ENTRY		4744445		True				
ANR	4744628	CFGExitNode	EXIT		4744445		True				
ANR	4744629	Symbol	win -> name		4744445						
ANR	4744630	Symbol	NULL		4744445						
ANR	4744631	Symbol	ST32_MAX		4744445						
ANR	4744632	Symbol	* win		4744445						
ANR	4744633	Symbol	dbg		4744445						
ANR	4744634	Symbol	handle		4744445						
ANR	4744635	Symbol	it		4744445						
ANR	4744636	Symbol	windows		4744445						
ANR	4744637	Symbol	tid		4744445						
ANR	4744638	Symbol	r_table_tofancystring		4744445						
ANR	4744639	Symbol	t		4744445						
ANR	4744640	Symbol	r_table_new		4744445						
ANR	4744641	Symbol	r_table_type		4744445						
ANR	4744642	Symbol	win		4744445						
ANR	4744643	Symbol	tbl		4744445						
ANR	4744644	Function	r_w32_print_windows	396:0:9992:10249							
ANR	4744645	FunctionDef	r_w32_print_windows (RDebug * dbg)		4744644	0					
ANR	4744646	CompoundStatement		396:44:10036:10249	4744644	0					
ANR	4744647	IdentifierDeclStatement	RList * windows = __get_windows ( dbg ) ;	397:1:10039:10075	4744644	0	True				
ANR	4744648	IdentifierDecl	* windows = __get_windows ( dbg )		4744644	0					
ANR	4744649	IdentifierDeclType	RList *		4744644	0					
ANR	4744650	Identifier	windows		4744644	1					
ANR	4744651	AssignmentExpression	* windows = __get_windows ( dbg )		4744644	2		=			
ANR	4744652	Identifier	windows		4744644	0					
ANR	4744653	CallExpression	__get_windows ( dbg )		4744644	1					
ANR	4744654	Callee	__get_windows		4744644	0					
ANR	4744655	Identifier	__get_windows		4744644	0					
ANR	4744656	ArgumentList	dbg		4744644	1					
ANR	4744657	Argument	dbg		4744644	0					
ANR	4744658	Identifier	dbg		4744644	0					
ANR	4744659	IfStatement	if ( windows )		4744644	1					
ANR	4744660	Condition	windows	398:5:10082:10088	4744644	0	True				
ANR	4744661	Identifier	windows		4744644	0					
ANR	4744662	CompoundStatement		3:14:54:54	4744644	1					
ANR	4744663	IfStatement	if ( ! windows -> length )		4744644	0					
ANR	4744664	Condition	! windows -> length	399:6:10099:10114	4744644	0	True				
ANR	4744665	UnaryOperationExpression	! windows -> length		4744644	0					
ANR	4744666	UnaryOperator	!		4744644	0					
ANR	4744667	PtrMemberAccess	windows -> length		4744644	1					
ANR	4744668	Identifier	windows		4744644	0					
ANR	4744669	Identifier	length		4744644	1					
ANR	4744670	CompoundStatement		4:24:80:80	4744644	1					
ANR	4744671	ExpressionStatement	"dbg -> cb_printf ( ""No windows for this process.\\n"" )"	400:3:10122:10171	4744644	0	True				
ANR	4744672	CallExpression	"dbg -> cb_printf ( ""No windows for this process.\\n"" )"		4744644	0					
ANR	4744673	Callee	dbg -> cb_printf		4744644	0					
ANR	4744674	PtrMemberAccess	dbg -> cb_printf		4744644	0					
ANR	4744675	Identifier	dbg		4744644	0					
ANR	4744676	Identifier	cb_printf		4744644	1					
ANR	4744677	ArgumentList	"""No windows for this process.\\n"""		4744644	1					
ANR	4744678	Argument	"""No windows for this process.\\n"""		4744644	0					
ANR	4744679	PrimaryExpression	"""No windows for this process.\\n"""		4744644	0					
ANR	4744680	ReturnStatement	return ;	401:3:10176:10182	4744644	1	True				
ANR	4744681	ExpressionStatement	"__print_windows ( dbg , windows )"	403:2:10190:10220	4744644	1	True				
ANR	4744682	CallExpression	"__print_windows ( dbg , windows )"		4744644	0					
ANR	4744683	Callee	__print_windows		4744644	0					
ANR	4744684	Identifier	__print_windows		4744644	0					
ANR	4744685	ArgumentList	dbg		4744644	1					
ANR	4744686	Argument	dbg		4744644	0					
ANR	4744687	Identifier	dbg		4744644	0					
ANR	4744688	Argument	windows		4744644	1					
ANR	4744689	Identifier	windows		4744644	0					
ANR	4744690	ExpressionStatement	r_list_free ( windows )	405:1:10226:10247	4744644	2	True				
ANR	4744691	CallExpression	r_list_free ( windows )		4744644	0					
ANR	4744692	Callee	r_list_free		4744644	0					
ANR	4744693	Identifier	r_list_free		4744644	0					
ANR	4744694	ArgumentList	windows		4744644	1					
ANR	4744695	Argument	windows		4744644	0					
ANR	4744696	Identifier	windows		4744644	0					
ANR	4744697	ReturnType	R_API void		4744644	1					
ANR	4744698	Identifier	r_w32_print_windows		4744644	2					
ANR	4744699	ParameterList	RDebug * dbg		4744644	3					
ANR	4744700	Parameter	RDebug * dbg	396:31:10023:10033	4744644	0	True				
ANR	4744701	ParameterType	RDebug *		4744644	0					
ANR	4744702	Identifier	dbg		4744644	1					
ANR	4744703	CFGEntryNode	ENTRY		4744644		True				
ANR	4744704	CFGExitNode	EXIT		4744644		True				
ANR	4744705	Symbol	__get_windows		4744644						
ANR	4744706	Symbol	windows -> length		4744644						
ANR	4744707	Symbol	* windows		4744644						
ANR	4744708	Symbol	dbg		4744644						
ANR	4744709	Symbol	windows		4744644						
ANR	4744710	Function	r_w32_add_winmsg_breakpoint	408:0:10252:11593							
ANR	4744711	FunctionDef	"r_w32_add_winmsg_breakpoint (RDebug * dbg , char * name)"		4744710	0					
ANR	4744712	CompoundStatement		408:64:10316:11593	4744710	0					
ANR	4744713	ExpressionStatement	"r_return_val_if_fail ( dbg && name , false )"	409:1:10319:10360	4744710	0	True				
ANR	4744714	CallExpression	"r_return_val_if_fail ( dbg && name , false )"		4744710	0					
ANR	4744715	Callee	r_return_val_if_fail		4744710	0					
ANR	4744716	Identifier	r_return_val_if_fail		4744710	0					
ANR	4744717	ArgumentList	dbg && name		4744710	1					
ANR	4744718	Argument	dbg && name		4744710	0					
ANR	4744719	AndExpression	dbg && name		4744710	0		&&			
ANR	4744720	Identifier	dbg		4744710	0					
ANR	4744721	Identifier	name		4744710	1					
ANR	4744722	Argument	false		4744710	1					
ANR	4744723	Identifier	false		4744710	0					
ANR	4744724	ExpressionStatement	r_str_trim ( name )	410:1:10363:10380	4744710	1	True				
ANR	4744725	CallExpression	r_str_trim ( name )		4744710	0					
ANR	4744726	Callee	r_str_trim		4744710	0					
ANR	4744727	Identifier	r_str_trim		4744710	0					
ANR	4744728	ArgumentList	name		4744710	1					
ANR	4744729	Argument	name		4744710	0					
ANR	4744730	Identifier	name		4744710	0					
ANR	4744731	IdentifierDeclStatement	"char * window_id = strchr ( name , ' ' ) ;"	411:1:10383:10419	4744710	2	True				
ANR	4744732	IdentifierDecl	"* window_id = strchr ( name , ' ' )"		4744710	0					
ANR	4744733	IdentifierDeclType	char *		4744710	0					
ANR	4744734	Identifier	window_id		4744710	1					
ANR	4744735	AssignmentExpression	"* window_id = strchr ( name , ' ' )"		4744710	2		=			
ANR	4744736	Identifier	window_id		4744710	0					
ANR	4744737	CallExpression	"strchr ( name , ' ' )"		4744710	1					
ANR	4744738	Callee	strchr		4744710	0					
ANR	4744739	Identifier	strchr		4744710	0					
ANR	4744740	ArgumentList	name		4744710	1					
ANR	4744741	Argument	name		4744710	0					
ANR	4744742	Identifier	name		4744710	0					
ANR	4744743	Argument	' '		4744710	1					
ANR	4744744	PrimaryExpression	' '		4744710	0					
ANR	4744745	IfStatement	if ( window_id )		4744710	3					
ANR	4744746	Condition	window_id	412:5:10426:10434	4744710	0	True				
ANR	4744747	Identifier	window_id		4744710	0					
ANR	4744748	CompoundStatement		5:16:120:120	4744710	1					
ANR	4744749	ExpressionStatement	* window_id = 0	413:2:10441:10455	4744710	0	True				
ANR	4744750	AssignmentExpression	* window_id = 0		4744710	0		=			
ANR	4744751	UnaryOperationExpression	* window_id		4744710	0					
ANR	4744752	UnaryOperator	*		4744710	0					
ANR	4744753	Identifier	window_id		4744710	1					
ANR	4744754	PrimaryExpression	0		4744710	1					
ANR	4744755	ExpressionStatement	window_id ++	414:2:10459:10470	4744710	1	True				
ANR	4744756	PostIncDecOperationExpression	window_id ++		4744710	0					
ANR	4744757	Identifier	window_id		4744710	0					
ANR	4744758	IncDec	++		4744710	1					
ANR	4744759	IdentifierDeclStatement	DWORD type = __get_msg_type ( name ) ;	416:1:10476:10510	4744710	4	True				
ANR	4744760	IdentifierDecl	type = __get_msg_type ( name )		4744710	0					
ANR	4744761	IdentifierDeclType	DWORD		4744710	0					
ANR	4744762	Identifier	type		4744710	1					
ANR	4744763	AssignmentExpression	type = __get_msg_type ( name )		4744710	2		=			
ANR	4744764	Identifier	type		4744710	0					
ANR	4744765	CallExpression	__get_msg_type ( name )		4744710	1					
ANR	4744766	Callee	__get_msg_type		4744710	0					
ANR	4744767	Identifier	__get_msg_type		4744710	0					
ANR	4744768	ArgumentList	name		4744710	1					
ANR	4744769	Argument	name		4744710	0					
ANR	4744770	Identifier	name		4744710	0					
ANR	4744771	IfStatement	if ( ! type )		4744710	5					
ANR	4744772	Condition	! type	417:5:10517:10521	4744710	0	True				
ANR	4744773	UnaryOperationExpression	! type		4744710	0					
ANR	4744774	UnaryOperator	!		4744710	0					
ANR	4744775	Identifier	type		4744710	1					
ANR	4744776	CompoundStatement		10:12:207:207	4744710	1					
ANR	4744777	ReturnStatement	return false ;	418:2:10528:10540	4744710	0	True				
ANR	4744778	Identifier	false		4744710	0					
ANR	4744779	IdentifierDeclStatement	ut64 offset = 0 ;	420:1:10546:10561	4744710	6	True				
ANR	4744780	IdentifierDecl	offset = 0		4744710	0					
ANR	4744781	IdentifierDeclType	ut64		4744710	0					
ANR	4744782	Identifier	offset		4744710	1					
ANR	4744783	AssignmentExpression	offset = 0		4744710	2		=			
ANR	4744784	Identifier	offset		4744710	0					
ANR	4744785	PrimaryExpression	0		4744710	1					
ANR	4744786	IfStatement	if ( window_id )		4744710	7					
ANR	4744787	Condition	window_id	421:5:10568:10576	4744710	0	True				
ANR	4744788	Identifier	window_id		4744710	0					
ANR	4744789	CompoundStatement		21:2:463:474	4744710	1					
ANR	4744790	IdentifierDeclStatement	RList * windows = __get_windows ( dbg ) ;	422:2:10583:10619	4744710	0	True				
ANR	4744791	IdentifierDecl	* windows = __get_windows ( dbg )		4744710	0					
ANR	4744792	IdentifierDeclType	RList *		4744710	0					
ANR	4744793	Identifier	windows		4744710	1					
ANR	4744794	AssignmentExpression	* windows = __get_windows ( dbg )		4744710	2		=			
ANR	4744795	Identifier	windows		4744710	0					
ANR	4744796	CallExpression	__get_windows ( dbg )		4744710	1					
ANR	4744797	Callee	__get_windows		4744710	0					
ANR	4744798	Identifier	__get_windows		4744710	0					
ANR	4744799	ArgumentList	dbg		4744710	1					
ANR	4744800	Argument	dbg		4744710	0					
ANR	4744801	Identifier	dbg		4744710	0					
ANR	4744802	IfStatement	if ( windows && ! windows -> length )		4744710	1					
ANR	4744803	Condition	windows && ! windows -> length	423:6:10627:10653	4744710	0	True				
ANR	4744804	AndExpression	windows && ! windows -> length		4744710	0		&&			
ANR	4744805	Identifier	windows		4744710	0					
ANR	4744806	UnaryOperationExpression	! windows -> length		4744710	1					
ANR	4744807	UnaryOperator	!		4744710	0					
ANR	4744808	PtrMemberAccess	windows -> length		4744710	1					
ANR	4744809	Identifier	windows		4744710	0					
ANR	4744810	Identifier	length		4744710	1					
ANR	4744811	CompoundStatement		16:35:339:339	4744710	1					
ANR	4744812	ExpressionStatement	"dbg -> cb_printf ( ""No windows for this process.\\n"" )"	424:3:10661:10710	4744710	0	True				
ANR	4744813	CallExpression	"dbg -> cb_printf ( ""No windows for this process.\\n"" )"		4744710	0					
ANR	4744814	Callee	dbg -> cb_printf		4744710	0					
ANR	4744815	PtrMemberAccess	dbg -> cb_printf		4744710	0					
ANR	4744816	Identifier	dbg		4744710	0					
ANR	4744817	Identifier	cb_printf		4744710	1					
ANR	4744818	ArgumentList	"""No windows for this process.\\n"""		4744710	1					
ANR	4744819	Argument	"""No windows for this process.\\n"""		4744710	0					
ANR	4744820	PrimaryExpression	"""No windows for this process.\\n"""		4744710	0					
ANR	4744821	IdentifierDeclStatement	"ut64 win_h = r_num_math ( NULL , window_id ) ;"	426:2:10718:10759	4744710	2	True				
ANR	4744822	IdentifierDecl	"win_h = r_num_math ( NULL , window_id )"		4744710	0					
ANR	4744823	IdentifierDeclType	ut64		4744710	0					
ANR	4744824	Identifier	win_h		4744710	1					
ANR	4744825	AssignmentExpression	"win_h = r_num_math ( NULL , window_id )"		4744710	2		=			
ANR	4744826	Identifier	win_h		4744710	0					
ANR	4744827	CallExpression	"r_num_math ( NULL , window_id )"		4744710	1					
ANR	4744828	Callee	r_num_math		4744710	0					
ANR	4744829	Identifier	r_num_math		4744710	0					
ANR	4744830	ArgumentList	NULL		4744710	1					
ANR	4744831	Argument	NULL		4744710	0					
ANR	4744832	Identifier	NULL		4744710	0					
ANR	4744833	Argument	window_id		4744710	1					
ANR	4744834	Identifier	window_id		4744710	0					
ANR	4744835	IdentifierDeclStatement	RListIter * it ;	427:2:10763:10776	4744710	3	True				
ANR	4744836	IdentifierDecl	* it		4744710	0					
ANR	4744837	IdentifierDeclType	RListIter *		4744710	0					
ANR	4744838	Identifier	it		4744710	1					
ANR	4744839	IdentifierDeclStatement	window * win ;	428:2:10780:10791	4744710	4	True				
ANR	4744840	IdentifierDecl	* win		4744710	0					
ANR	4744841	IdentifierDeclType	window *		4744710	0					
ANR	4744842	Identifier	win		4744710	1					
ANR	4744843	Statement	r_list_foreach	429:2:10795:10808	4744710	5	True				
ANR	4744844	Statement	(	429:17:10810:10810	4744710	6	True				
ANR	4744845	Statement	windows	429:18:10811:10817	4744710	7	True				
ANR	4744846	Statement	","	429:25:10818:10818	4744710	8	True				
ANR	4744847	Statement	it	429:27:10820:10821	4744710	9	True				
ANR	4744848	Statement	","	429:29:10822:10822	4744710	10	True				
ANR	4744849	Statement	win	429:31:10824:10826	4744710	11	True				
ANR	4744850	Statement	)	429:34:10827:10827	4744710	12	True				
ANR	4744851	CompoundStatement		22:36:512:512	4744710	13					
ANR	4744852	IfStatement	"if ( win -> h == win_h || ! strnicmp ( win -> name , window_id , strlen ( window_id ) ) )"		4744710	0					
ANR	4744853	Condition	"win -> h == win_h || ! strnicmp ( win -> name , window_id , strlen ( window_id ) )"	430:7:10838:10908	4744710	0	True				
ANR	4744854	OrExpression	"win -> h == win_h || ! strnicmp ( win -> name , window_id , strlen ( window_id ) )"		4744710	0		||			
ANR	4744855	EqualityExpression	win -> h == win_h		4744710	0		==			
ANR	4744856	PtrMemberAccess	win -> h		4744710	0					
ANR	4744857	Identifier	win		4744710	0					
ANR	4744858	Identifier	h		4744710	1					
ANR	4744859	Identifier	win_h		4744710	1					
ANR	4744860	UnaryOperationExpression	"! strnicmp ( win -> name , window_id , strlen ( window_id ) )"		4744710	1					
ANR	4744861	UnaryOperator	!		4744710	0					
ANR	4744862	CallExpression	"strnicmp ( win -> name , window_id , strlen ( window_id ) )"		4744710	1					
ANR	4744863	Callee	strnicmp		4744710	0					
ANR	4744864	Identifier	strnicmp		4744710	0					
ANR	4744865	ArgumentList	win -> name		4744710	1					
ANR	4744866	Argument	win -> name		4744710	0					
ANR	4744867	PtrMemberAccess	win -> name		4744710	0					
ANR	4744868	Identifier	win		4744710	0					
ANR	4744869	Identifier	name		4744710	1					
ANR	4744870	Argument	window_id		4744710	1					
ANR	4744871	Identifier	window_id		4744710	0					
ANR	4744872	Argument	strlen ( window_id )		4744710	2					
ANR	4744873	CallExpression	strlen ( window_id )		4744710	0					
ANR	4744874	Callee	strlen		4744710	0					
ANR	4744875	Identifier	strlen		4744710	0					
ANR	4744876	ArgumentList	window_id		4744710	1					
ANR	4744877	Argument	window_id		4744710	0					
ANR	4744878	Identifier	window_id		4744710	0					
ANR	4744879	CompoundStatement		23:80:594:594	4744710	1					
ANR	4744880	ExpressionStatement	offset = win -> proc	431:4:10917:10935	4744710	0	True				
ANR	4744881	AssignmentExpression	offset = win -> proc		4744710	0		=			
ANR	4744882	Identifier	offset		4744710	0					
ANR	4744883	PtrMemberAccess	win -> proc		4744710	1					
ANR	4744884	Identifier	win		4744710	0					
ANR	4744885	Identifier	proc		4744710	1					
ANR	4744886	BreakStatement	break ;	432:4:10941:10946	4744710	1	True				
ANR	4744887	IfStatement	if ( ! offset )		4744710	14					
ANR	4744888	Condition	! offset	435:6:10963:10969	4744710	0	True				
ANR	4744889	UnaryOperationExpression	! offset		4744710	0					
ANR	4744890	UnaryOperator	!		4744710	0					
ANR	4744891	Identifier	offset		4744710	1					
ANR	4744892	CompoundStatement		28:15:655:655	4744710	1					
ANR	4744893	ExpressionStatement	"dbg -> cb_printf ( ""Window not found, try these:\\n"" )"	436:3:10977:11026	4744710	0	True				
ANR	4744894	CallExpression	"dbg -> cb_printf ( ""Window not found, try these:\\n"" )"		4744710	0					
ANR	4744895	Callee	dbg -> cb_printf		4744710	0					
ANR	4744896	PtrMemberAccess	dbg -> cb_printf		4744710	0					
ANR	4744897	Identifier	dbg		4744710	0					
ANR	4744898	Identifier	cb_printf		4744710	1					
ANR	4744899	ArgumentList	"""Window not found, try these:\\n"""		4744710	1					
ANR	4744900	Argument	"""Window not found, try these:\\n"""		4744710	0					
ANR	4744901	PrimaryExpression	"""Window not found, try these:\\n"""		4744710	0					
ANR	4744902	ExpressionStatement	"__print_windows ( dbg , windows )"	437:3:11031:11061	4744710	1	True				
ANR	4744903	CallExpression	"__print_windows ( dbg , windows )"		4744710	0					
ANR	4744904	Callee	__print_windows		4744710	0					
ANR	4744905	Identifier	__print_windows		4744710	0					
ANR	4744906	ArgumentList	dbg		4744710	1					
ANR	4744907	Argument	dbg		4744710	0					
ANR	4744908	Identifier	dbg		4744710	0					
ANR	4744909	Argument	windows		4744710	1					
ANR	4744910	Identifier	windows		4744710	0					
ANR	4744911	ExpressionStatement	r_list_free ( windows )	439:2:11069:11090	4744710	15	True				
ANR	4744912	CallExpression	r_list_free ( windows )		4744710	0					
ANR	4744913	Callee	r_list_free		4744710	0					
ANR	4744914	Identifier	r_list_free		4744710	0					
ANR	4744915	ArgumentList	windows		4744710	1					
ANR	4744916	Argument	windows		4744710	0					
ANR	4744917	Identifier	windows		4744710	0					
ANR	4744918	ElseStatement	else		4744710	0					
ANR	4744919	CompoundStatement		33:8:783:783	4744710	0					
ANR	4744920	ExpressionStatement	offset = __get_dispatchmessage_offset ( dbg )	441:2:11104:11147	4744710	0	True				
ANR	4744921	AssignmentExpression	offset = __get_dispatchmessage_offset ( dbg )		4744710	0		=			
ANR	4744922	Identifier	offset		4744710	0					
ANR	4744923	CallExpression	__get_dispatchmessage_offset ( dbg )		4744710	1					
ANR	4744924	Callee	__get_dispatchmessage_offset		4744710	0					
ANR	4744925	Identifier	__get_dispatchmessage_offset		4744710	0					
ANR	4744926	ArgumentList	dbg		4744710	1					
ANR	4744927	Argument	dbg		4744710	0					
ANR	4744928	Identifier	dbg		4744710	0					
ANR	4744929	IfStatement	if ( ! offset )		4744710	8					
ANR	4744930	Condition	! offset	443:5:11157:11163	4744710	0	True				
ANR	4744931	UnaryOperationExpression	! offset		4744710	0					
ANR	4744932	UnaryOperator	!		4744710	0					
ANR	4744933	Identifier	offset		4744710	1					
ANR	4744934	CompoundStatement		36:14:849:849	4744710	1					
ANR	4744935	ReturnStatement	return false ;	444:2:11170:11182	4744710	0	True				
ANR	4744936	Identifier	false		4744710	0					
ANR	4744937	ExpressionStatement	"r_debug_bp_add ( dbg , offset , 0 , 0 , 0 , NULL , 0 )"	446:1:11188:11234	4744710	9	True				
ANR	4744938	CallExpression	"r_debug_bp_add ( dbg , offset , 0 , 0 , 0 , NULL , 0 )"		4744710	0					
ANR	4744939	Callee	r_debug_bp_add		4744710	0					
ANR	4744940	Identifier	r_debug_bp_add		4744710	0					
ANR	4744941	ArgumentList	dbg		4744710	1					
ANR	4744942	Argument	dbg		4744710	0					
ANR	4744943	Identifier	dbg		4744710	0					
ANR	4744944	Argument	offset		4744710	1					
ANR	4744945	Identifier	offset		4744710	0					
ANR	4744946	Argument	0		4744710	2					
ANR	4744947	PrimaryExpression	0		4744710	0					
ANR	4744948	Argument	0		4744710	3					
ANR	4744949	PrimaryExpression	0		4744710	0					
ANR	4744950	Argument	0		4744710	4					
ANR	4744951	PrimaryExpression	0		4744710	0					
ANR	4744952	Argument	NULL		4744710	5					
ANR	4744953	Identifier	NULL		4744710	0					
ANR	4744954	Argument	0		4744710	6					
ANR	4744955	PrimaryExpression	0		4744710	0					
ANR	4744956	IdentifierDeclStatement	char * cond ;	447:1:11237:11247	4744710	10	True				
ANR	4744957	IdentifierDecl	* cond		4744710	0					
ANR	4744958	IdentifierDeclType	char *		4744710	0					
ANR	4744959	Identifier	cond		4744710	1					
ANR	4744960	IfStatement	if ( window_id )		4744710	11					
ANR	4744961	Condition	window_id	448:5:11254:11262	4744710	0	True				
ANR	4744962	Identifier	window_id		4744710	0					
ANR	4744963	CompoundStatement		41:16:948:948	4744710	1					
ANR	4744964	ExpressionStatement	"cond = r_str_newf ( ""?= `ae %d,edx,-`"" , type )"	449:2:11269:11313	4744710	0	True				
ANR	4744965	AssignmentExpression	"cond = r_str_newf ( ""?= `ae %d,edx,-`"" , type )"		4744710	0		=			
ANR	4744966	Identifier	cond		4744710	0					
ANR	4744967	CallExpression	"r_str_newf ( ""?= `ae %d,edx,-`"" , type )"		4744710	1					
ANR	4744968	Callee	r_str_newf		4744710	0					
ANR	4744969	Identifier	r_str_newf		4744710	0					
ANR	4744970	ArgumentList	"""?= `ae %d,edx,-`"""		4744710	1					
ANR	4744971	Argument	"""?= `ae %d,edx,-`"""		4744710	0					
ANR	4744972	PrimaryExpression	"""?= `ae %d,edx,-`"""		4744710	0					
ANR	4744973	Argument	type		4744710	1					
ANR	4744974	Identifier	type		4744710	0					
ANR	4744975	ElseStatement	else		4744710	0					
ANR	4744976	CompoundStatement		44:2:1010:1019	4744710	0					
ANR	4744977	IdentifierDeclStatement	char * reg ;	451:2:11327:11336	4744710	0	True				
ANR	4744978	IdentifierDecl	* reg		4744710	0					
ANR	4744979	IdentifierDeclType	char *		4744710	0					
ANR	4744980	Identifier	reg		4744710	1					
ANR	4744981	IfStatement	if ( dbg -> bits == R_SYS_BITS_64 )		4744710	1					
ANR	4744982	Condition	dbg -> bits == R_SYS_BITS_64	452:6:11344:11369	4744710	0	True				
ANR	4744983	EqualityExpression	dbg -> bits == R_SYS_BITS_64		4744710	0		==			
ANR	4744984	PtrMemberAccess	dbg -> bits		4744710	0					
ANR	4744985	Identifier	dbg		4744710	0					
ANR	4744986	Identifier	bits		4744710	1					
ANR	4744987	Identifier	R_SYS_BITS_64		4744710	1					
ANR	4744988	CompoundStatement		45:34:1055:1055	4744710	1					
ANR	4744989	ExpressionStatement	"reg = ""rcx"""	453:3:11377:11388	4744710	0	True				
ANR	4744990	AssignmentExpression	"reg = ""rcx"""		4744710	0		=			
ANR	4744991	Identifier	reg		4744710	0					
ANR	4744992	PrimaryExpression	"""rcx"""		4744710	1					
ANR	4744993	ElseStatement	else		4744710	0					
ANR	4744994	CompoundStatement		47:9:1082:1082	4744710	0					
ANR	4744995	ExpressionStatement	"reg = ""ecx"""	455:3:11404:11415	4744710	0	True				
ANR	4744996	AssignmentExpression	"reg = ""ecx"""		4744710	0		=			
ANR	4744997	Identifier	reg		4744710	0					
ANR	4744998	PrimaryExpression	"""ecx"""		4744710	1					
ANR	4744999	ExpressionStatement	"cond = r_str_newf ( ""?= `ae %d,%s,%d,+,[4],-`"" , type , reg , dbg -> bits )"	457:2:11423:11491	4744710	2	True				
ANR	4745000	AssignmentExpression	"cond = r_str_newf ( ""?= `ae %d,%s,%d,+,[4],-`"" , type , reg , dbg -> bits )"		4744710	0		=			
ANR	4745001	Identifier	cond		4744710	0					
ANR	4745002	CallExpression	"r_str_newf ( ""?= `ae %d,%s,%d,+,[4],-`"" , type , reg , dbg -> bits )"		4744710	1					
ANR	4745003	Callee	r_str_newf		4744710	0					
ANR	4745004	Identifier	r_str_newf		4744710	0					
ANR	4745005	ArgumentList	"""?= `ae %d,%s,%d,+,[4],-`"""		4744710	1					
ANR	4745006	Argument	"""?= `ae %d,%s,%d,+,[4],-`"""		4744710	0					
ANR	4745007	PrimaryExpression	"""?= `ae %d,%s,%d,+,[4],-`"""		4744710	0					
ANR	4745008	Argument	type		4744710	1					
ANR	4745009	Identifier	type		4744710	0					
ANR	4745010	Argument	reg		4744710	2					
ANR	4745011	Identifier	reg		4744710	0					
ANR	4745012	Argument	dbg -> bits		4744710	3					
ANR	4745013	PtrMemberAccess	dbg -> bits		4744710	0					
ANR	4745014	Identifier	dbg		4744710	0					
ANR	4745015	Identifier	bits		4744710	1					
ANR	4745016	Statement	dbg	459:1:11497:11499	4744710	12	True				
ANR	4745017	Statement	->	459:4:11500:11501	4744710	13	True				
ANR	4745018	Statement	corebind	459:6:11502:11509	4744710	14	True				
ANR	4745019	Statement	.	459:14:11510:11510	4744710	15	True				
ANR	4745020	Statement	cmdf	459:15:11511:11514	4744710	16	True				
ANR	4745021	Statement	(	459:20:11516:11516	4744710	17	True				
ANR	4745022	Statement	dbg	459:21:11517:11519	4744710	18	True				
ANR	4745023	Statement	->	459:24:11520:11521	4744710	19	True				
ANR	4745024	Statement	corebind	459:26:11522:11529	4744710	20	True				
ANR	4745025	Statement	.	459:34:11530:11530	4744710	21	True				
ANR	4745026	Statement	core	459:35:11531:11534	4744710	22	True				
ANR	4745027	Statement	","	459:39:11535:11535	4744710	23	True				
ANR	4745028	Statement	"""\\""dbC 0x%"""	459:41:11537:11547	4744710	24	True				
ANR	4745029	Statement	PFMT64x	459:52:11548:11554	4744710	25	True				
ANR	4745030	Statement	""" %s\\"""""	459:59:11555:11561	4744710	26	True				
ANR	4745031	Statement	","	459:66:11562:11562	4744710	27	True				
ANR	4745032	Statement	offset	459:68:11564:11569	4744710	28	True				
ANR	4745033	Statement	","	459:74:11570:11570	4744710	29	True				
ANR	4745034	Statement	cond	459:76:11572:11575	4744710	30	True				
ANR	4745035	Statement	)	459:80:11576:11576	4744710	31	True				
ANR	4745036	ExpressionStatement		459:81:11577:11577	4744710	32	True				
ANR	4745037	ReturnStatement	return true ;	460:1:11580:11591	4744710	33	True				
ANR	4745038	Identifier	true		4744710	0					
ANR	4745039	ReturnType	R_API bool		4744710	1					
ANR	4745040	Identifier	r_w32_add_winmsg_breakpoint		4744710	2					
ANR	4745041	ParameterList	"RDebug * dbg , char * name"		4744710	3					
ANR	4745042	Parameter	RDebug * dbg	408:39:10291:10301	4744710	0	True				
ANR	4745043	ParameterType	RDebug *		4744710	0					
ANR	4745044	Identifier	dbg		4744710	1					
ANR	4745045	Parameter	char * name	408:52:10304:10313	4744710	1	True				
ANR	4745046	ParameterType	char *		4744710	0					
ANR	4745047	Identifier	name		4744710	1					
ANR	4745048	CFGEntryNode	ENTRY		4744710		True				
ANR	4745049	CFGExitNode	EXIT		4744710		True				
ANR	4745050	CFGErrorNode	ERROR		4744710		True				
ANR	4745051	Symbol	* windows		4744710						
ANR	4745052	Symbol	* win		4744710						
ANR	4745053	Symbol	strchr		4744710						
ANR	4745054	Symbol	dbg -> bits		4744710						
ANR	4745055	Symbol	r_str_newf		4744710						
ANR	4745056	Symbol	type		4744710						
ANR	4745057	Symbol	cond		4744710						
ANR	4745058	Symbol	r_num_math		4744710						
ANR	4745059	Symbol	* window_id		4744710						
ANR	4745060	Symbol	strlen		4744710						
ANR	4745061	Symbol	reg		4744710						
ANR	4745062	Symbol	win -> proc		4744710						
ANR	4745063	Symbol	window_id		4744710						
ANR	4745064	Symbol	win -> h		4744710						
ANR	4745065	Symbol	strnicmp		4744710						
ANR	4745066	Symbol	win		4744710						
ANR	4745067	Symbol	R_SYS_BITS_64		4744710						
ANR	4745068	Symbol	win -> name		4744710						
ANR	4745069	Symbol	NULL		4744710						
ANR	4745070	Symbol	offset		4744710						
ANR	4745071	Symbol	__get_dispatchmessage_offset		4744710						
ANR	4745072	Symbol	dbg		4744710						
ANR	4745073	Symbol	false		4744710						
ANR	4745074	Symbol	it		4744710						
ANR	4745075	Symbol	windows		4744710						
ANR	4745076	Symbol	* dbg		4744710						
ANR	4745077	Symbol	__get_msg_type		4744710						
ANR	4745078	Symbol	__get_windows		4744710						
ANR	4745079	Symbol	windows -> length		4744710						
ANR	4745080	Symbol	name		4744710						
ANR	4745081	Symbol	true		4744710						
ANR	4745082	Symbol	win_h		4744710						
