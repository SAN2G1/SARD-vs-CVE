command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6266417	File	data/converged/CVE-2019-16718~_radare2/strings.c								
ANR	6266418	ClassDef	<unnamed>	6:0:109:157							
ANR	6266419	DeclStmt									
ANR	6266420	Decl							char	char * [ 3 ]	encodings
ANR	6266421	Function	r_search_get_encoding	15:0:329:651							
ANR	6266422	FunctionDef	r_search_get_encoding (const char * name)		6266421	0					
ANR	6266423	CompoundStatement		15:50:379:651	6266421	0					
ANR	6266424	IdentifierDeclStatement	int i ;	16:1:382:387	6266421	0	True				
ANR	6266425	IdentifierDecl	i		6266421	0					
ANR	6266426	IdentifierDeclType	int		6266421	0					
ANR	6266427	Identifier	i		6266421	1					
ANR	6266428	IfStatement	if ( ! name || ! * name )		6266421	1					
ANR	6266429	Condition	! name || ! * name	17:5:394:408	6266421	0	True				
ANR	6266430	OrExpression	! name || ! * name		6266421	0		||			
ANR	6266431	UnaryOperationExpression	! name		6266421	0					
ANR	6266432	UnaryOperator	!		6266421	0					
ANR	6266433	Identifier	name		6266421	1					
ANR	6266434	UnaryOperationExpression	! * name		6266421	1					
ANR	6266435	UnaryOperator	!		6266421	0					
ANR	6266436	UnaryOperationExpression	* name		6266421	1					
ANR	6266437	UnaryOperator	*		6266421	0					
ANR	6266438	Identifier	name		6266421	1					
ANR	6266439	CompoundStatement		3:22:31:31	6266421	1					
ANR	6266440	ReturnStatement	return ENCODING_ASCII ;	18:2:415:436	6266421	0	True				
ANR	6266441	Identifier	ENCODING_ASCII		6266421	0					
ANR	6266442	IdentifierDeclStatement	ut32 lename = strlen ( name ) ;	20:1:442:469	6266421	2	True				
ANR	6266443	IdentifierDecl	lename = strlen ( name )		6266421	0					
ANR	6266444	IdentifierDeclType	ut32		6266421	0					
ANR	6266445	Identifier	lename		6266421	1					
ANR	6266446	AssignmentExpression	lename = strlen ( name )		6266421	2		=			
ANR	6266447	Identifier	lename		6266421	0					
ANR	6266448	CallExpression	strlen ( name )		6266421	1					
ANR	6266449	Callee	strlen		6266421	0					
ANR	6266450	Identifier	strlen		6266421	0					
ANR	6266451	ArgumentList	name		6266421	1					
ANR	6266452	Argument	name		6266421	0					
ANR	6266453	Identifier	name		6266421	0					
ANR	6266454	ForStatement	for ( i = 0 ; encodings [ i ] ; i ++ )		6266421	3					
ANR	6266455	ForInit	i = 0 ;	21:6:477:482	6266421	0	True				
ANR	6266456	AssignmentExpression	i = 0		6266421	0		=			
ANR	6266457	Identifier	i		6266421	0					
ANR	6266458	PrimaryExpression	0		6266421	1					
ANR	6266459	Condition	encodings [ i ]	21:13:484:495	6266421	1	True				
ANR	6266460	ArrayIndexing	encodings [ i ]		6266421	0					
ANR	6266461	Identifier	encodings		6266421	0					
ANR	6266462	Identifier	i		6266421	1					
ANR	6266463	PostIncDecOperationExpression	i ++	21:27:498:500	6266421	2	True				
ANR	6266464	Identifier	i		6266421	0					
ANR	6266465	IncDec	++		6266421	1					
ANR	6266466	CompoundStatement		8:2:127:174	6266421	3					
ANR	6266467	IdentifierDeclStatement	"ut32 sz = R_MIN ( strlen ( encodings [ i ] ) , lename ) ;"	22:2:507:554	6266421	0	True				
ANR	6266468	IdentifierDecl	"sz = R_MIN ( strlen ( encodings [ i ] ) , lename )"		6266421	0					
ANR	6266469	IdentifierDeclType	ut32		6266421	0					
ANR	6266470	Identifier	sz		6266421	1					
ANR	6266471	AssignmentExpression	"sz = R_MIN ( strlen ( encodings [ i ] ) , lename )"		6266421	2		=			
ANR	6266472	Identifier	sz		6266421	0					
ANR	6266473	CallExpression	"R_MIN ( strlen ( encodings [ i ] ) , lename )"		6266421	1					
ANR	6266474	Callee	R_MIN		6266421	0					
ANR	6266475	Identifier	R_MIN		6266421	0					
ANR	6266476	ArgumentList	strlen ( encodings [ i ] )		6266421	1					
ANR	6266477	Argument	strlen ( encodings [ i ] )		6266421	0					
ANR	6266478	CallExpression	strlen ( encodings [ i ] )		6266421	0					
ANR	6266479	Callee	strlen		6266421	0					
ANR	6266480	Identifier	strlen		6266421	0					
ANR	6266481	ArgumentList	encodings [ i ]		6266421	1					
ANR	6266482	Argument	encodings [ i ]		6266421	0					
ANR	6266483	ArrayIndexing	encodings [ i ]		6266421	0					
ANR	6266484	Identifier	encodings		6266421	0					
ANR	6266485	Identifier	i		6266421	1					
ANR	6266486	Argument	lename		6266421	1					
ANR	6266487	Identifier	lename		6266421	0					
ANR	6266488	IfStatement	"if ( ! r_str_ncasecmp ( name , encodings [ i ] , sz ) )"		6266421	1					
ANR	6266489	Condition	"! r_str_ncasecmp ( name , encodings [ i ] , sz )"	23:6:562:601	6266421	0	True				
ANR	6266490	UnaryOperationExpression	"! r_str_ncasecmp ( name , encodings [ i ] , sz )"		6266421	0					
ANR	6266491	UnaryOperator	!		6266421	0					
ANR	6266492	CallExpression	"r_str_ncasecmp ( name , encodings [ i ] , sz )"		6266421	1					
ANR	6266493	Callee	r_str_ncasecmp		6266421	0					
ANR	6266494	Identifier	r_str_ncasecmp		6266421	0					
ANR	6266495	ArgumentList	name		6266421	1					
ANR	6266496	Argument	name		6266421	0					
ANR	6266497	Identifier	name		6266421	0					
ANR	6266498	Argument	encodings [ i ]		6266421	1					
ANR	6266499	ArrayIndexing	encodings [ i ]		6266421	0					
ANR	6266500	Identifier	encodings		6266421	0					
ANR	6266501	Identifier	i		6266421	1					
ANR	6266502	Argument	sz		6266421	2					
ANR	6266503	Identifier	sz		6266421	0					
ANR	6266504	CompoundStatement		9:48:224:224	6266421	1					
ANR	6266505	ReturnStatement	return i ;	24:3:609:617	6266421	0	True				
ANR	6266506	Identifier	i		6266421	0					
ANR	6266507	ReturnStatement	return ENCODING_ASCII ;	27:1:628:649	6266421	4	True				
ANR	6266508	Identifier	ENCODING_ASCII		6266421	0					
ANR	6266509	ReturnType	R_API int		6266421	1					
ANR	6266510	Identifier	r_search_get_encoding		6266421	2					
ANR	6266511	ParameterList	const char * name		6266421	3					
ANR	6266512	Parameter	const char * name	15:32:361:376	6266421	0	True				
ANR	6266513	ParameterType	const char *		6266421	0					
ANR	6266514	Identifier	name		6266421	1					
ANR	6266515	CFGEntryNode	ENTRY		6266421		True				
ANR	6266516	CFGExitNode	EXIT		6266421		True				
ANR	6266517	Symbol	* name		6266421						
ANR	6266518	Symbol	strlen		6266421						
ANR	6266519	Symbol	ENCODING_ASCII		6266421						
ANR	6266520	Symbol	* encodings		6266421						
ANR	6266521	Symbol	* i		6266421						
ANR	6266522	Symbol	encodings		6266421						
ANR	6266523	Symbol	sz		6266421						
ANR	6266524	Symbol	name		6266421						
ANR	6266525	Symbol	i		6266421						
ANR	6266526	Symbol	lename		6266421						
ANR	6266527	Symbol	R_MIN		6266421						
ANR	6266528	Symbol	r_str_ncasecmp		6266421						
ANR	6266529	Function	is_encoded	30:0:654:1253							
ANR	6266530	FunctionDef	"is_encoded (int encoding , unsigned char c)"		6266529	0					
ANR	6266531	CompoundStatement		30:54:708:1253	6266529	0					
ANR	6266532	SwitchStatement	switch ( encoding )		6266529	0					
ANR	6266533	Condition	encoding	31:9:719:726	6266529	0	True				
ANR	6266534	Identifier	encoding		6266529	0					
ANR	6266535	CompoundStatement		2:19:20:20	6266529	1					
ANR	6266536	Label	case ENCODING_ASCII :	32:1:732:751	6266529	0	True				
ANR	6266537	Identifier	ENCODING_ASCII		6266529	0					
ANR	6266538	BreakStatement	break ;	33:2:755:760	6266529	1	True				
ANR	6266539	Label	case ENCODING_CP850 :	34:1:763:782	6266529	2	True				
ANR	6266540	Identifier	ENCODING_CP850		6266529	0					
ANR	6266541	SwitchStatement	switch ( c )		6266529	3					
ANR	6266542	Condition	c	35:10:794:794	6266529	0	True				
ANR	6266543	Identifier	c		6266529	0					
ANR	6266544	CompoundStatement		6:13:88:88	6266529	1					
ANR	6266545	Label	case 128 :	37:2:812:820	6266529	0	True				
ANR	6266546	Label	case 133 :	38:2:835:843	6266529	1	True				
ANR	6266547	Label	case 135 :	39:2:858:866	6266529	2	True				
ANR	6266548	Label	case 160 :	40:2:885:893	6266529	3	True				
ANR	6266549	Label	case 161 :	41:2:908:916	6266529	4	True				
ANR	6266550	Label	case 129 :	42:2:931:939	6266529	5	True				
ANR	6266551	Label	case 130 :	43:2:956:964	6266529	6	True				
ANR	6266552	Label	case 139 :	44:2:979:987	6266529	7	True				
ANR	6266553	Label	case 162 :	45:2:1004:1012	6266529	8	True				
ANR	6266554	Label	case 163 :	46:2:1027:1035	6266529	9	True				
ANR	6266555	Label	case 164 :	47:2:1050:1058	6266529	10	True				
ANR	6266556	Label	case 165 :	48:2:1070:1078	6266529	11	True				
ANR	6266557	Label	case 181 :	49:2:1093:1101	6266529	12	True				
ANR	6266558	Label	case 144 :	50:2:1116:1124	6266529	13	True				
ANR	6266559	Label	case 214 :	51:2:1139:1147	6266529	14	True				
ANR	6266560	Label	case 224 :	52:2:1162:1170	6266529	15	True				
ANR	6266561	Label	case 233 :	53:2:1185:1193	6266529	16	True				
ANR	6266562	ReturnStatement	return true ;	54:3:1209:1220	6266529	17	True				
ANR	6266563	Identifier	true		6266529	0					
ANR	6266564	BreakStatement	break ;	56:2:1228:1233	6266529	4	True				
ANR	6266565	ReturnStatement	return false ;	58:1:1239:1251	6266529	1	True				
ANR	6266566	Identifier	false		6266529	0					
ANR	6266567	ReturnType	static bool		6266529	1					
ANR	6266568	Identifier	is_encoded		6266529	2					
ANR	6266569	ParameterList	"int encoding , unsigned char c"		6266529	3					
ANR	6266570	Parameter	int encoding	30:23:677:688	6266529	0	True				
ANR	6266571	ParameterType	int		6266529	0					
ANR	6266572	Identifier	encoding		6266529	1					
ANR	6266573	Parameter	unsigned char c	30:37:691:705	6266529	1	True				
ANR	6266574	ParameterType	unsigned char		6266529	0					
ANR	6266575	Identifier	c		6266529	1					
ANR	6266576	CFGEntryNode	ENTRY		6266529		True				
ANR	6266577	CFGExitNode	EXIT		6266529		True				
ANR	6266578	Symbol	c		6266529						
ANR	6266579	Symbol	true		6266529						
ANR	6266580	Symbol	false		6266529						
ANR	6266581	Symbol	encoding		6266529						
ANR	6266582	Function	r_search_strings_update	61:0:1256:2409							
ANR	6266583	FunctionDef	"r_search_strings_update (RSearch * s , ut64 from , const ut8 * buf , int len)"		6266582	0					
ANR	6266584	CompoundStatement		61:82:1338:2409	6266582	0					
ANR	6266585	IdentifierDeclStatement	int i = 0 ;	62:1:1341:1350	6266582	0	True				
ANR	6266586	IdentifierDecl	i = 0		6266582	0					
ANR	6266587	IdentifierDeclType	int		6266582	0					
ANR	6266588	Identifier	i		6266582	1					
ANR	6266589	AssignmentExpression	i = 0		6266582	2		=			
ANR	6266590	Identifier	i		6266582	0					
ANR	6266591	PrimaryExpression	0		6266582	1					
ANR	6266592	IdentifierDeclStatement	int widechar = 0 ;	63:1:1353:1369	6266582	1	True				
ANR	6266593	IdentifierDecl	widechar = 0		6266582	0					
ANR	6266594	IdentifierDeclType	int		6266582	0					
ANR	6266595	Identifier	widechar		6266582	1					
ANR	6266596	AssignmentExpression	widechar = 0		6266582	2		=			
ANR	6266597	Identifier	widechar		6266582	0					
ANR	6266598	PrimaryExpression	0		6266582	1					
ANR	6266599	IdentifierDeclStatement	int matches = 0 ;	64:1:1372:1387	6266582	2	True				
ANR	6266600	IdentifierDecl	matches = 0		6266582	0					
ANR	6266601	IdentifierDeclType	int		6266582	0					
ANR	6266602	Identifier	matches		6266582	1					
ANR	6266603	AssignmentExpression	matches = 0		6266582	2		=			
ANR	6266604	Identifier	matches		6266582	0					
ANR	6266605	PrimaryExpression	0		6266582	1					
ANR	6266606	IdentifierDeclStatement	char str [ 4096 ] ;	65:1:1390:1404	6266582	3	True				
ANR	6266607	IdentifierDecl	str [ 4096 ]		6266582	0					
ANR	6266608	IdentifierDeclType	char [ 4096 ]		6266582	0					
ANR	6266609	Identifier	str		6266582	1					
ANR	6266610	PrimaryExpression	4096		6266582	2					
ANR	6266611	IdentifierDeclStatement	RListIter * iter ;	66:1:1407:1422	6266582	4	True				
ANR	6266612	IdentifierDecl	* iter		6266582	0					
ANR	6266613	IdentifierDeclType	RListIter *		6266582	0					
ANR	6266614	Identifier	iter		6266582	1					
ANR	6266615	IdentifierDeclStatement	RSearchKeyword * kw ;	67:1:1425:1443	6266582	5	True				
ANR	6266616	IdentifierDecl	* kw		6266582	0					
ANR	6266617	IdentifierDeclType	RSearchKeyword *		6266582	0					
ANR	6266618	Identifier	kw		6266582	1					
ANR	6266619	Statement	r_list_foreach	69:1:1447:1460	6266582	6	True				
ANR	6266620	Statement	(	69:16:1462:1462	6266582	7	True				
ANR	6266621	Statement	s	69:17:1463:1463	6266582	8	True				
ANR	6266622	Statement	->	69:18:1464:1465	6266582	9	True				
ANR	6266623	Statement	kws	69:20:1466:1468	6266582	10	True				
ANR	6266624	Statement	","	69:23:1469:1469	6266582	11	True				
ANR	6266625	Statement	iter	69:25:1471:1474	6266582	12	True				
ANR	6266626	Statement	","	69:29:1475:1475	6266582	13	True				
ANR	6266627	Statement	kw	69:31:1477:1478	6266582	14	True				
ANR	6266628	Statement	)	69:33:1479:1479	6266582	15	True				
ANR	6266629	CompoundStatement		9:35:142:142	6266582	16					
ANR	6266630	ForStatement	for ( i = 0 ; i < len ; i ++ )		6266582	0					
ANR	6266631	ForInit	i = 0 ;	70:7:1490:1495	6266582	0	True				
ANR	6266632	AssignmentExpression	i = 0		6266582	0		=			
ANR	6266633	Identifier	i		6266582	0					
ANR	6266634	PrimaryExpression	0		6266582	1					
ANR	6266635	Condition	i < len	70:14:1497:1503	6266582	1	True				
ANR	6266636	RelationalExpression	i < len		6266582	0		<			
ANR	6266637	Identifier	i		6266582	0					
ANR	6266638	Identifier	len		6266582	1					
ANR	6266639	PostIncDecOperationExpression	i ++	70:23:1506:1508	6266582	2	True				
ANR	6266640	Identifier	i		6266582	0					
ANR	6266641	IncDec	++		6266582	1					
ANR	6266642	CompoundStatement		11:3:177:193	6266582	3					
ANR	6266643	IdentifierDeclStatement	char ch = buf [ i ] ;	71:3:1516:1532	6266582	0	True				
ANR	6266644	IdentifierDecl	ch = buf [ i ]		6266582	0					
ANR	6266645	IdentifierDeclType	char		6266582	0					
ANR	6266646	Identifier	ch		6266582	1					
ANR	6266647	AssignmentExpression	ch = buf [ i ]		6266582	2		=			
ANR	6266648	Identifier	ch		6266582	0					
ANR	6266649	ArrayIndexing	buf [ i ]		6266582	1					
ANR	6266650	Identifier	buf		6266582	0					
ANR	6266651	Identifier	i		6266582	1					
ANR	6266652	IfStatement	"if ( IS_PRINTABLE ( ch ) || IS_WHITESPACE ( ch ) || is_encoded ( 0 , ch ) )"		6266582	1					
ANR	6266653	Condition	"IS_PRINTABLE ( ch ) || IS_WHITESPACE ( ch ) || is_encoded ( 0 , ch )"	73:7:1565:1623	6266582	0	True				
ANR	6266654	OrExpression	"IS_PRINTABLE ( ch ) || IS_WHITESPACE ( ch ) || is_encoded ( 0 , ch )"		6266582	0		||			
ANR	6266655	CallExpression	IS_PRINTABLE ( ch )		6266582	0					
ANR	6266656	Callee	IS_PRINTABLE		6266582	0					
ANR	6266657	Identifier	IS_PRINTABLE		6266582	0					
ANR	6266658	ArgumentList	ch		6266582	1					
ANR	6266659	Argument	ch		6266582	0					
ANR	6266660	Identifier	ch		6266582	0					
ANR	6266661	OrExpression	"IS_WHITESPACE ( ch ) || is_encoded ( 0 , ch )"		6266582	1		||			
ANR	6266662	CallExpression	IS_WHITESPACE ( ch )		6266582	0					
ANR	6266663	Callee	IS_WHITESPACE		6266582	0					
ANR	6266664	Identifier	IS_WHITESPACE		6266582	0					
ANR	6266665	ArgumentList	ch		6266582	1					
ANR	6266666	Argument	ch		6266582	0					
ANR	6266667	Identifier	ch		6266582	0					
ANR	6266668	CallExpression	"is_encoded ( 0 , ch )"		6266582	1					
ANR	6266669	Callee	is_encoded		6266582	0					
ANR	6266670	Identifier	is_encoded		6266582	0					
ANR	6266671	ArgumentList	0		6266582	1					
ANR	6266672	Argument	0		6266582	0					
ANR	6266673	PrimaryExpression	0		6266582	0					
ANR	6266674	Argument	ch		6266582	1					
ANR	6266675	Identifier	ch		6266582	0					
ANR	6266676	CompoundStatement		13:68:287:287	6266582	1					
ANR	6266677	ExpressionStatement	str [ matches ] = ch	74:4:1632:1649	6266582	0	True				
ANR	6266678	AssignmentExpression	str [ matches ] = ch		6266582	0		=			
ANR	6266679	ArrayIndexing	str [ matches ]		6266582	0					
ANR	6266680	Identifier	str		6266582	0					
ANR	6266681	Identifier	matches		6266582	1					
ANR	6266682	Identifier	ch		6266582	1					
ANR	6266683	IfStatement	if ( matches < sizeof ( str ) )		6266582	1					
ANR	6266684	Condition	matches < sizeof ( str )	75:8:1659:1680	6266582	0	True				
ANR	6266685	RelationalExpression	matches < sizeof ( str )		6266582	0		<			
ANR	6266686	Identifier	matches		6266582	0					
ANR	6266687	SizeofExpression	sizeof ( str )		6266582	1					
ANR	6266688	Sizeof	sizeof		6266582	0					
ANR	6266689	SizeofOperand	str		6266582	1					
ANR	6266690	CompoundStatement		15:32:344:344	6266582	1					
ANR	6266691	ExpressionStatement	matches ++	76:5:1690:1699	6266582	0	True				
ANR	6266692	PostIncDecOperationExpression	matches ++		6266582	0					
ANR	6266693	Identifier	matches		6266582	0					
ANR	6266694	IncDec	++		6266582	1					
ANR	6266695	ElseStatement	else		6266582	0					
ANR	6266696	CompoundStatement		18:10:378:378	6266582	0					
ANR	6266697	IfStatement	if ( matches && i + 2 < len && buf [ i + 2 ] == '\\0' && buf [ i ] == '\\0' && buf [ i + 1 ] != '\\0' )		6266582	0					
ANR	6266698	Condition	matches && i + 2 < len && buf [ i + 2 ] == '\\0' && buf [ i ] == '\\0' && buf [ i + 1 ] != '\\0'	80:8:1770:1843	6266582	0	True				
ANR	6266699	AndExpression	matches && i + 2 < len && buf [ i + 2 ] == '\\0' && buf [ i ] == '\\0' && buf [ i + 1 ] != '\\0'		6266582	0		&&			
ANR	6266700	Identifier	matches		6266582	0					
ANR	6266701	AndExpression	i + 2 < len && buf [ i + 2 ] == '\\0' && buf [ i ] == '\\0' && buf [ i + 1 ] != '\\0'		6266582	1		&&			
ANR	6266702	RelationalExpression	i + 2 < len		6266582	0		<			
ANR	6266703	AdditiveExpression	i + 2		6266582	0		+			
ANR	6266704	Identifier	i		6266582	0					
ANR	6266705	PrimaryExpression	2		6266582	1					
ANR	6266706	Identifier	len		6266582	1					
ANR	6266707	AndExpression	buf [ i + 2 ] == '\\0' && buf [ i ] == '\\0' && buf [ i + 1 ] != '\\0'		6266582	1		&&			
ANR	6266708	EqualityExpression	buf [ i + 2 ] == '\\0'		6266582	0		==			
ANR	6266709	ArrayIndexing	buf [ i + 2 ]		6266582	0					
ANR	6266710	Identifier	buf		6266582	0					
ANR	6266711	AdditiveExpression	i + 2		6266582	1		+			
ANR	6266712	Identifier	i		6266582	0					
ANR	6266713	PrimaryExpression	2		6266582	1					
ANR	6266714	PrimaryExpression	'\\0'		6266582	1					
ANR	6266715	AndExpression	buf [ i ] == '\\0' && buf [ i + 1 ] != '\\0'		6266582	1		&&			
ANR	6266716	EqualityExpression	buf [ i ] == '\\0'		6266582	0		==			
ANR	6266717	ArrayIndexing	buf [ i ]		6266582	0					
ANR	6266718	Identifier	buf		6266582	0					
ANR	6266719	Identifier	i		6266582	1					
ANR	6266720	PrimaryExpression	'\\0'		6266582	1					
ANR	6266721	EqualityExpression	buf [ i + 1 ] != '\\0'		6266582	1		!=			
ANR	6266722	ArrayIndexing	buf [ i + 1 ]		6266582	0					
ANR	6266723	Identifier	buf		6266582	0					
ANR	6266724	AdditiveExpression	i + 1		6266582	1		+			
ANR	6266725	Identifier	i		6266582	0					
ANR	6266726	PrimaryExpression	1		6266582	1					
ANR	6266727	PrimaryExpression	'\\0'		6266582	1					
ANR	6266728	CompoundStatement		20:84:507:507	6266582	1					
ANR	6266729	ReturnStatement	return 1 ;	82:5:1875:1883	6266582	0	True				
ANR	6266730	PrimaryExpression	1		6266582	0					
ANR	6266731	IfStatement	if ( matches >= s -> string_min && ( s -> string_max == 0 || matches <= s -> string_max ) )		6266582	1					
ANR	6266732	Condition	matches >= s -> string_min && ( s -> string_max == 0 || matches <= s -> string_max )	85:8:1961:2036	6266582	0	True				
ANR	6266733	AndExpression	matches >= s -> string_min && ( s -> string_max == 0 || matches <= s -> string_max )		6266582	0		&&			
ANR	6266734	RelationalExpression	matches >= s -> string_min		6266582	0		>=			
ANR	6266735	Identifier	matches		6266582	0					
ANR	6266736	PtrMemberAccess	s -> string_min		6266582	1					
ANR	6266737	Identifier	s		6266582	0					
ANR	6266738	Identifier	string_min		6266582	1					
ANR	6266739	OrExpression	s -> string_max == 0 || matches <= s -> string_max		6266582	1		||			
ANR	6266740	EqualityExpression	s -> string_max == 0		6266582	0		==			
ANR	6266741	PtrMemberAccess	s -> string_max		6266582	0					
ANR	6266742	Identifier	s		6266582	0					
ANR	6266743	Identifier	string_max		6266582	1					
ANR	6266744	PrimaryExpression	0		6266582	1					
ANR	6266745	RelationalExpression	matches <= s -> string_max		6266582	1		<=			
ANR	6266746	Identifier	matches		6266582	0					
ANR	6266747	PtrMemberAccess	s -> string_max		6266582	1					
ANR	6266748	Identifier	s		6266582	0					
ANR	6266749	Identifier	string_max		6266582	1					
ANR	6266750	CompoundStatement		27:5:733:754	6266582	1					
ANR	6266751	ExpressionStatement	str [ matches ] = '\\0'	86:5:2046:2065	6266582	0	True				
ANR	6266752	AssignmentExpression	str [ matches ] = '\\0'		6266582	0		=			
ANR	6266753	ArrayIndexing	str [ matches ]		6266582	0					
ANR	6266754	Identifier	str		6266582	0					
ANR	6266755	Identifier	matches		6266582	1					
ANR	6266756	PrimaryExpression	'\\0'		6266582	1					
ANR	6266757	IdentifierDeclStatement	int len = strlen ( str ) ;	87:5:2072:2093	6266582	1	True				
ANR	6266758	IdentifierDecl	len = strlen ( str )		6266582	0					
ANR	6266759	IdentifierDeclType	int		6266582	0					
ANR	6266760	Identifier	len		6266582	1					
ANR	6266761	AssignmentExpression	len = strlen ( str )		6266582	2		=			
ANR	6266762	Identifier	len		6266582	0					
ANR	6266763	CallExpression	strlen ( str )		6266582	1					
ANR	6266764	Callee	strlen		6266582	0					
ANR	6266765	Identifier	strlen		6266582	0					
ANR	6266766	ArgumentList	str		6266582	1					
ANR	6266767	Argument	str		6266582	0					
ANR	6266768	Identifier	str		6266582	0					
ANR	6266769	IfStatement	if ( len > 2 )		6266582	2					
ANR	6266770	Condition	len > 2	88:9:2104:2108	6266582	0	True				
ANR	6266771	RelationalExpression	len > 2		6266582	0		>			
ANR	6266772	Identifier	len		6266582	0					
ANR	6266773	PrimaryExpression	2		6266582	1					
ANR	6266774	CompoundStatement		28:16:772:772	6266582	1					
ANR	6266775	IfStatement	if ( widechar )		6266582	0					
ANR	6266776	Condition	widechar	89:10:2123:2130	6266582	0	True				
ANR	6266777	Identifier	widechar		6266582	0					
ANR	6266778	CompoundStatement		30:7:803:836	6266582	1					
ANR	6266779	IdentifierDeclStatement	ut64 off = ( ut64 ) from + i - ( len * 2 ) + 1 ;	90:7:2142:2175	6266582	0	True				
ANR	6266780	IdentifierDecl	off = ( ut64 ) from + i - ( len * 2 ) + 1		6266582	0					
ANR	6266781	IdentifierDeclType	ut64		6266582	0					
ANR	6266782	Identifier	off		6266582	1					
ANR	6266783	AssignmentExpression	off = ( ut64 ) from + i - ( len * 2 ) + 1		6266582	2		=			
ANR	6266784	Identifier	off		6266582	0					
ANR	6266785	AdditiveExpression	( ut64 ) from + i - ( len * 2 ) + 1		6266582	1		+			
ANR	6266786	CastExpression	( ut64 ) from		6266582	0					
ANR	6266787	CastTarget	ut64		6266582	0					
ANR	6266788	Identifier	from		6266582	1					
ANR	6266789	AdditiveExpression	i - ( len * 2 ) + 1		6266582	1		-			
ANR	6266790	Identifier	i		6266582	0					
ANR	6266791	AdditiveExpression	( len * 2 ) + 1		6266582	1		+			
ANR	6266792	MultiplicativeExpression	len * 2		6266582	0		*			
ANR	6266793	Identifier	len		6266582	0					
ANR	6266794	PrimaryExpression	2		6266582	1					
ANR	6266795	PrimaryExpression	1		6266582	1					
ANR	6266796	ExpressionStatement	"r_search_hit_new ( s , kw , off )"	91:7:2184:2213	6266582	1	True				
ANR	6266797	CallExpression	"r_search_hit_new ( s , kw , off )"		6266582	0					
ANR	6266798	Callee	r_search_hit_new		6266582	0					
ANR	6266799	Identifier	r_search_hit_new		6266582	0					
ANR	6266800	ArgumentList	s		6266582	1					
ANR	6266801	Argument	s		6266582	0					
ANR	6266802	Identifier	s		6266582	0					
ANR	6266803	Argument	kw		6266582	1					
ANR	6266804	Identifier	kw		6266582	0					
ANR	6266805	Argument	off		6266582	2					
ANR	6266806	Identifier	off		6266582	0					
ANR	6266807	ElseStatement	else		6266582	0					
ANR	6266808	CompoundStatement		33:7:898:929	6266582	0					
ANR	6266809	IdentifierDeclStatement	ut64 off = ( ut64 ) from + i - matches ;	93:7:2237:2268	6266582	0	True				
ANR	6266810	IdentifierDecl	off = ( ut64 ) from + i - matches		6266582	0					
ANR	6266811	IdentifierDeclType	ut64		6266582	0					
ANR	6266812	Identifier	off		6266582	1					
ANR	6266813	AssignmentExpression	off = ( ut64 ) from + i - matches		6266582	2		=			
ANR	6266814	Identifier	off		6266582	0					
ANR	6266815	AdditiveExpression	( ut64 ) from + i - matches		6266582	1		+			
ANR	6266816	CastExpression	( ut64 ) from		6266582	0					
ANR	6266817	CastTarget	ut64		6266582	0					
ANR	6266818	Identifier	from		6266582	1					
ANR	6266819	AdditiveExpression	i - matches		6266582	1		-			
ANR	6266820	Identifier	i		6266582	0					
ANR	6266821	Identifier	matches		6266582	1					
ANR	6266822	ExpressionStatement	"r_search_hit_new ( s , kw , off )"	94:7:2277:2306	6266582	1	True				
ANR	6266823	CallExpression	"r_search_hit_new ( s , kw , off )"		6266582	0					
ANR	6266824	Callee	r_search_hit_new		6266582	0					
ANR	6266825	Identifier	r_search_hit_new		6266582	0					
ANR	6266826	ArgumentList	s		6266582	1					
ANR	6266827	Argument	s		6266582	0					
ANR	6266828	Identifier	s		6266582	0					
ANR	6266829	Argument	kw		6266582	1					
ANR	6266830	Identifier	kw		6266582	0					
ANR	6266831	Argument	off		6266582	2					
ANR	6266832	Identifier	off		6266582	0					
ANR	6266833	ExpressionStatement	fflush ( stdout )	97:5:2328:2343	6266582	3	True				
ANR	6266834	CallExpression	fflush ( stdout )		6266582	0					
ANR	6266835	Callee	fflush		6266582	0					
ANR	6266836	Identifier	fflush		6266582	0					
ANR	6266837	ArgumentList	stdout		6266582	1					
ANR	6266838	Argument	stdout		6266582	0					
ANR	6266839	Identifier	stdout		6266582	0					
ANR	6266840	ExpressionStatement	matches = 0	99:4:2355:2366	6266582	2	True				
ANR	6266841	AssignmentExpression	matches = 0		6266582	0		=			
ANR	6266842	Identifier	matches		6266582	0					
ANR	6266843	PrimaryExpression	0		6266582	1					
ANR	6266844	ExpressionStatement	widechar = 0	100:4:2372:2384	6266582	3	True				
ANR	6266845	AssignmentExpression	widechar = 0		6266582	0		=			
ANR	6266846	Identifier	widechar		6266582	0					
ANR	6266847	PrimaryExpression	0		6266582	1					
ANR	6266848	ReturnStatement	return 0 ;	104:1:2399:2407	6266582	17	True				
ANR	6266849	PrimaryExpression	0		6266582	0					
ANR	6266850	ReturnType	R_API int		6266582	1					
ANR	6266851	Identifier	r_search_strings_update		6266582	2					
ANR	6266852	ParameterList	"RSearch * s , ut64 from , const ut8 * buf , int len"		6266582	3					
ANR	6266853	Parameter	RSearch * s	61:34:1290:1299	6266582	0	True				
ANR	6266854	ParameterType	RSearch *		6266582	0					
ANR	6266855	Identifier	s		6266582	1					
ANR	6266856	Parameter	ut64 from	61:46:1302:1310	6266582	1	True				
ANR	6266857	ParameterType	ut64		6266582	0					
ANR	6266858	Identifier	from		6266582	1					
ANR	6266859	Parameter	const ut8 * buf	61:57:1313:1326	6266582	2	True				
ANR	6266860	ParameterType	const ut8 *		6266582	0					
ANR	6266861	Identifier	buf		6266582	1					
ANR	6266862	Parameter	int len	61:73:1329:1335	6266582	3	True				
ANR	6266863	ParameterType	int		6266582	0					
ANR	6266864	Identifier	len		6266582	1					
ANR	6266865	CFGEntryNode	ENTRY		6266582		True				
ANR	6266866	CFGExitNode	EXIT		6266582		True				
ANR	6266867	Symbol	* buf		6266582						
ANR	6266868	Symbol	IS_PRINTABLE		6266582						
ANR	6266869	Symbol	* matches		6266582						
ANR	6266870	Symbol	stdout		6266582						
ANR	6266871	Symbol	ch		6266582						
ANR	6266872	Symbol	is_encoded		6266582						
ANR	6266873	Symbol	s -> string_max		6266582						
ANR	6266874	Symbol	i		6266582						
ANR	6266875	Symbol	iter		6266582						
ANR	6266876	Symbol	kw		6266582						
ANR	6266877	Symbol	matches		6266582						
ANR	6266878	Symbol	IS_WHITESPACE		6266582						
ANR	6266879	Symbol	off		6266582						
ANR	6266880	Symbol	str		6266582						
ANR	6266881	Symbol	strlen		6266582						
ANR	6266882	Symbol	buf		6266582						
ANR	6266883	Symbol	s		6266582						
ANR	6266884	Symbol	* i		6266582						
ANR	6266885	Symbol	len		6266582						
ANR	6266886	Symbol	widechar		6266582						
ANR	6266887	Symbol	s -> string_min		6266582						
ANR	6266888	Symbol	from		6266582						
ANR	6266889	Symbol	* str		6266582						
ANR	6266890	Symbol	* s		6266582						
