command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5008214	File	data/converged/CVE-2019-16718~_radare2/libr_parse_ctype.c								
ANR	5008215	ClassDef	r_parse_ctype_t	7:8:100:285							
ANR	5008216	DeclStmt									
ANR	5008217	Decl							mpc_parser_t	mpc_parser_t *	integerlit
ANR	5008218	DeclStmt									
ANR	5008219	Decl							mpc_parser_t	mpc_parser_t *	identifier
ANR	5008220	DeclStmt									
ANR	5008221	Decl							mpc_parser_t	mpc_parser_t *	qualifier
ANR	5008222	DeclStmt									
ANR	5008223	Decl							mpc_parser_t	mpc_parser_t *	pointer
ANR	5008224	DeclStmt									
ANR	5008225	Decl							mpc_parser_t	mpc_parser_t *	array
ANR	5008226	DeclStmt									
ANR	5008227	Decl							mpc_parser_t	mpc_parser_t *	type
ANR	5008228	DeclStmt									
ANR	5008229	Decl							r_parse_ctype_t	r_parse_ctype_t	RParseCType
ANR	5008230	DeclStmt									
ANR	5008231	Decl							const char	const char *	lang
ANR	5008232	Function	r_parse_ctype_new	28:0:760:1324							
ANR	5008233	FunctionDef	r_parse_ctype_new ()		5008232	0					
ANR	5008234	CompoundStatement		28:39:799:1324	5008232	0					
ANR	5008235	IdentifierDeclStatement	RParseCType * ctype = R_NEW ( RParseCType ) ;	29:1:802:842	5008232	0	True				
ANR	5008236	IdentifierDecl	* ctype = R_NEW ( RParseCType )		5008232	0					
ANR	5008237	IdentifierDeclType	RParseCType *		5008232	0					
ANR	5008238	Identifier	ctype		5008232	1					
ANR	5008239	AssignmentExpression	* ctype = R_NEW ( RParseCType )		5008232	2		=			
ANR	5008240	Identifier	ctype		5008232	0					
ANR	5008241	CallExpression	R_NEW ( RParseCType )		5008232	1					
ANR	5008242	Callee	R_NEW		5008232	0					
ANR	5008243	Identifier	R_NEW		5008232	0					
ANR	5008244	ArgumentList	RParseCType		5008232	1					
ANR	5008245	Argument	RParseCType		5008232	0					
ANR	5008246	Identifier	RParseCType		5008232	0					
ANR	5008247	IfStatement	if ( ! ctype )		5008232	1					
ANR	5008248	Condition	! ctype	30:5:849:854	5008232	0	True				
ANR	5008249	UnaryOperationExpression	! ctype		5008232	0					
ANR	5008250	UnaryOperator	!		5008232	0					
ANR	5008251	Identifier	ctype		5008232	1					
ANR	5008252	CompoundStatement		3:13:57:57	5008232	1					
ANR	5008253	ReturnStatement	return NULL ;	31:2:861:872	5008232	0	True				
ANR	5008254	Identifier	NULL		5008232	0					
ANR	5008255	ExpressionStatement	"ctype -> integerlit = mpc_new ( ""integerlit"" )"	34:1:879:921	5008232	2	True				
ANR	5008256	AssignmentExpression	"ctype -> integerlit = mpc_new ( ""integerlit"" )"		5008232	0		=			
ANR	5008257	PtrMemberAccess	ctype -> integerlit		5008232	0					
ANR	5008258	Identifier	ctype		5008232	0					
ANR	5008259	Identifier	integerlit		5008232	1					
ANR	5008260	CallExpression	"mpc_new ( ""integerlit"" )"		5008232	1					
ANR	5008261	Callee	mpc_new		5008232	0					
ANR	5008262	Identifier	mpc_new		5008232	0					
ANR	5008263	ArgumentList	"""integerlit"""		5008232	1					
ANR	5008264	Argument	"""integerlit"""		5008232	0					
ANR	5008265	PrimaryExpression	"""integerlit"""		5008232	0					
ANR	5008266	ExpressionStatement	"ctype -> identifier = mpc_new ( ""identifier"" )"	35:1:924:966	5008232	3	True				
ANR	5008267	AssignmentExpression	"ctype -> identifier = mpc_new ( ""identifier"" )"		5008232	0		=			
ANR	5008268	PtrMemberAccess	ctype -> identifier		5008232	0					
ANR	5008269	Identifier	ctype		5008232	0					
ANR	5008270	Identifier	identifier		5008232	1					
ANR	5008271	CallExpression	"mpc_new ( ""identifier"" )"		5008232	1					
ANR	5008272	Callee	mpc_new		5008232	0					
ANR	5008273	Identifier	mpc_new		5008232	0					
ANR	5008274	ArgumentList	"""identifier"""		5008232	1					
ANR	5008275	Argument	"""identifier"""		5008232	0					
ANR	5008276	PrimaryExpression	"""identifier"""		5008232	0					
ANR	5008277	ExpressionStatement	"ctype -> qualifier = mpc_new ( ""qualifier"" )"	36:1:969:1009	5008232	4	True				
ANR	5008278	AssignmentExpression	"ctype -> qualifier = mpc_new ( ""qualifier"" )"		5008232	0		=			
ANR	5008279	PtrMemberAccess	ctype -> qualifier		5008232	0					
ANR	5008280	Identifier	ctype		5008232	0					
ANR	5008281	Identifier	qualifier		5008232	1					
ANR	5008282	CallExpression	"mpc_new ( ""qualifier"" )"		5008232	1					
ANR	5008283	Callee	mpc_new		5008232	0					
ANR	5008284	Identifier	mpc_new		5008232	0					
ANR	5008285	ArgumentList	"""qualifier"""		5008232	1					
ANR	5008286	Argument	"""qualifier"""		5008232	0					
ANR	5008287	PrimaryExpression	"""qualifier"""		5008232	0					
ANR	5008288	ExpressionStatement	"ctype -> pointer = mpc_new ( ""pointer"" )"	37:1:1012:1048	5008232	5	True				
ANR	5008289	AssignmentExpression	"ctype -> pointer = mpc_new ( ""pointer"" )"		5008232	0		=			
ANR	5008290	PtrMemberAccess	ctype -> pointer		5008232	0					
ANR	5008291	Identifier	ctype		5008232	0					
ANR	5008292	Identifier	pointer		5008232	1					
ANR	5008293	CallExpression	"mpc_new ( ""pointer"" )"		5008232	1					
ANR	5008294	Callee	mpc_new		5008232	0					
ANR	5008295	Identifier	mpc_new		5008232	0					
ANR	5008296	ArgumentList	"""pointer"""		5008232	1					
ANR	5008297	Argument	"""pointer"""		5008232	0					
ANR	5008298	PrimaryExpression	"""pointer"""		5008232	0					
ANR	5008299	ExpressionStatement	"ctype -> array = mpc_new ( ""array"" )"	38:1:1051:1083	5008232	6	True				
ANR	5008300	AssignmentExpression	"ctype -> array = mpc_new ( ""array"" )"		5008232	0		=			
ANR	5008301	PtrMemberAccess	ctype -> array		5008232	0					
ANR	5008302	Identifier	ctype		5008232	0					
ANR	5008303	Identifier	array		5008232	1					
ANR	5008304	CallExpression	"mpc_new ( ""array"" )"		5008232	1					
ANR	5008305	Callee	mpc_new		5008232	0					
ANR	5008306	Identifier	mpc_new		5008232	0					
ANR	5008307	ArgumentList	"""array"""		5008232	1					
ANR	5008308	Argument	"""array"""		5008232	0					
ANR	5008309	PrimaryExpression	"""array"""		5008232	0					
ANR	5008310	ExpressionStatement	"ctype -> type = mpc_new ( ""type"" )"	39:1:1086:1116	5008232	7	True				
ANR	5008311	AssignmentExpression	"ctype -> type = mpc_new ( ""type"" )"		5008232	0		=			
ANR	5008312	PtrMemberAccess	ctype -> type		5008232	0					
ANR	5008313	Identifier	ctype		5008232	0					
ANR	5008314	Identifier	type		5008232	1					
ANR	5008315	CallExpression	"mpc_new ( ""type"" )"		5008232	1					
ANR	5008316	Callee	mpc_new		5008232	0					
ANR	5008317	Identifier	mpc_new		5008232	0					
ANR	5008318	ArgumentList	"""type"""		5008232	1					
ANR	5008319	Argument	"""type"""		5008232	0					
ANR	5008320	PrimaryExpression	"""type"""		5008232	0					
ANR	5008321	IdentifierDeclStatement	"mpc_err_t * err = mpca_lang ( MPCA_LANG_DEFAULT , lang , ALL_PARSERS ( ctype ) , NULL ) ;"	41:1:1120:1199	5008232	8	True				
ANR	5008322	IdentifierDecl	"* err = mpca_lang ( MPCA_LANG_DEFAULT , lang , ALL_PARSERS ( ctype ) , NULL )"		5008232	0					
ANR	5008323	IdentifierDeclType	mpc_err_t *		5008232	0					
ANR	5008324	Identifier	err		5008232	1					
ANR	5008325	AssignmentExpression	"* err = mpca_lang ( MPCA_LANG_DEFAULT , lang , ALL_PARSERS ( ctype ) , NULL )"		5008232	2		=			
ANR	5008326	Identifier	err		5008232	0					
ANR	5008327	CallExpression	"mpca_lang ( MPCA_LANG_DEFAULT , lang , ALL_PARSERS ( ctype ) , NULL )"		5008232	1					
ANR	5008328	Callee	mpca_lang		5008232	0					
ANR	5008329	Identifier	mpca_lang		5008232	0					
ANR	5008330	ArgumentList	MPCA_LANG_DEFAULT		5008232	1					
ANR	5008331	Argument	MPCA_LANG_DEFAULT		5008232	0					
ANR	5008332	Identifier	MPCA_LANG_DEFAULT		5008232	0					
ANR	5008333	Argument	lang		5008232	1					
ANR	5008334	Identifier	lang		5008232	0					
ANR	5008335	Argument	ALL_PARSERS ( ctype )		5008232	2					
ANR	5008336	CallExpression	ALL_PARSERS ( ctype )		5008232	0					
ANR	5008337	Callee	ALL_PARSERS		5008232	0					
ANR	5008338	Identifier	ALL_PARSERS		5008232	0					
ANR	5008339	ArgumentList	ctype		5008232	1					
ANR	5008340	Argument	ctype		5008232	0					
ANR	5008341	Identifier	ctype		5008232	0					
ANR	5008342	Argument	NULL		5008232	3					
ANR	5008343	Identifier	NULL		5008232	0					
ANR	5008344	IfStatement	if ( err )		5008232	9					
ANR	5008345	Condition	err	42:5:1206:1208	5008232	0	True				
ANR	5008346	Identifier	err		5008232	0					
ANR	5008347	CompoundStatement		15:10:411:411	5008232	1					
ANR	5008348	ExpressionStatement	mpc_err_print ( err )	43:2:1215:1234	5008232	0	True				
ANR	5008349	CallExpression	mpc_err_print ( err )		5008232	0					
ANR	5008350	Callee	mpc_err_print		5008232	0					
ANR	5008351	Identifier	mpc_err_print		5008232	0					
ANR	5008352	ArgumentList	err		5008232	1					
ANR	5008353	Argument	err		5008232	0					
ANR	5008354	Identifier	err		5008232	0					
ANR	5008355	ExpressionStatement	mpc_err_delete ( err )	44:2:1238:1258	5008232	1	True				
ANR	5008356	CallExpression	mpc_err_delete ( err )		5008232	0					
ANR	5008357	Callee	mpc_err_delete		5008232	0					
ANR	5008358	Identifier	mpc_err_delete		5008232	0					
ANR	5008359	ArgumentList	err		5008232	1					
ANR	5008360	Argument	err		5008232	0					
ANR	5008361	Identifier	err		5008232	0					
ANR	5008362	ExpressionStatement	r_parse_ctype_free ( ctype )	45:2:1262:1288	5008232	2	True				
ANR	5008363	CallExpression	r_parse_ctype_free ( ctype )		5008232	0					
ANR	5008364	Callee	r_parse_ctype_free		5008232	0					
ANR	5008365	Identifier	r_parse_ctype_free		5008232	0					
ANR	5008366	ArgumentList	ctype		5008232	1					
ANR	5008367	Argument	ctype		5008232	0					
ANR	5008368	Identifier	ctype		5008232	0					
ANR	5008369	ReturnStatement	return NULL ;	46:2:1292:1303	5008232	3	True				
ANR	5008370	Identifier	NULL		5008232	0					
ANR	5008371	ReturnStatement	return ctype ;	49:1:1310:1322	5008232	10	True				
ANR	5008372	Identifier	ctype		5008232	0					
ANR	5008373	ReturnType	R_API RParseCType *		5008232	1					
ANR	5008374	Identifier	r_parse_ctype_new		5008232	2					
ANR	5008375	ParameterList			5008232	3					
ANR	5008376	CFGEntryNode	ENTRY		5008232		True				
ANR	5008377	CFGExitNode	EXIT		5008232		True				
ANR	5008378	Symbol	ctype -> qualifier		5008232						
ANR	5008379	Symbol	ctype -> array		5008232						
ANR	5008380	Symbol	NULL		5008232						
ANR	5008381	Symbol	mpc_new		5008232						
ANR	5008382	Symbol	err		5008232						
ANR	5008383	Symbol	ctype -> identifier		5008232						
ANR	5008384	Symbol	MPCA_LANG_DEFAULT		5008232						
ANR	5008385	Symbol	* ctype		5008232						
ANR	5008386	Symbol	ctype -> type		5008232						
ANR	5008387	Symbol	mpca_lang		5008232						
ANR	5008388	Symbol	ctype -> integerlit		5008232						
ANR	5008389	Symbol	ALL_PARSERS		5008232						
ANR	5008390	Symbol	ctype		5008232						
ANR	5008391	Symbol	ctype -> pointer		5008232						
ANR	5008392	Symbol	RParseCType		5008232						
ANR	5008393	Symbol	R_NEW		5008232						
ANR	5008394	Symbol	lang		5008232						
ANR	5008395	Function	r_parse_ctype_free	52:0:1327:1477							
ANR	5008396	FunctionDef	r_parse_ctype_free (RParseCType * ctype)		5008395	0					
ANR	5008397	CompoundStatement		52:50:1377:1477	5008395	0					
ANR	5008398	IfStatement	if ( ! ctype )		5008395	0					
ANR	5008399	Condition	! ctype	53:5:1384:1389	5008395	0	True				
ANR	5008400	UnaryOperationExpression	! ctype		5008395	0					
ANR	5008401	UnaryOperator	!		5008395	0					
ANR	5008402	Identifier	ctype		5008395	1					
ANR	5008403	CompoundStatement		2:13:14:14	5008395	1					
ANR	5008404	ReturnStatement	return ;	54:2:1396:1402	5008395	0	True				
ANR	5008405	ExpressionStatement	"mpc_cleanup ( ALL_PARSERS_COUNT , ALL_PARSERS ( ctype ) )"	56:1:1408:1460	5008395	1	True				
ANR	5008406	CallExpression	"mpc_cleanup ( ALL_PARSERS_COUNT , ALL_PARSERS ( ctype ) )"		5008395	0					
ANR	5008407	Callee	mpc_cleanup		5008395	0					
ANR	5008408	Identifier	mpc_cleanup		5008395	0					
ANR	5008409	ArgumentList	ALL_PARSERS_COUNT		5008395	1					
ANR	5008410	Argument	ALL_PARSERS_COUNT		5008395	0					
ANR	5008411	Identifier	ALL_PARSERS_COUNT		5008395	0					
ANR	5008412	Argument	ALL_PARSERS ( ctype )		5008395	1					
ANR	5008413	CallExpression	ALL_PARSERS ( ctype )		5008395	0					
ANR	5008414	Callee	ALL_PARSERS		5008395	0					
ANR	5008415	Identifier	ALL_PARSERS		5008395	0					
ANR	5008416	ArgumentList	ctype		5008395	1					
ANR	5008417	Argument	ctype		5008395	0					
ANR	5008418	Identifier	ctype		5008395	0					
ANR	5008419	ExpressionStatement	free ( ctype )	57:1:1463:1475	5008395	2	True				
ANR	5008420	CallExpression	free ( ctype )		5008395	0					
ANR	5008421	Callee	free		5008395	0					
ANR	5008422	Identifier	free		5008395	0					
ANR	5008423	ArgumentList	ctype		5008395	1					
ANR	5008424	Argument	ctype		5008395	0					
ANR	5008425	Identifier	ctype		5008395	0					
ANR	5008426	ReturnType	R_API void		5008395	1					
ANR	5008427	Identifier	r_parse_ctype_free		5008395	2					
ANR	5008428	ParameterList	RParseCType * ctype		5008395	3					
ANR	5008429	Parameter	RParseCType * ctype	52:30:1357:1374	5008395	0	True				
ANR	5008430	ParameterType	RParseCType *		5008395	0					
ANR	5008431	Identifier	ctype		5008395	1					
ANR	5008432	CFGEntryNode	ENTRY		5008395		True				
ANR	5008433	CFGExitNode	EXIT		5008395		True				
ANR	5008434	Symbol	ALL_PARSERS_COUNT		5008395						
ANR	5008435	Symbol	ALL_PARSERS		5008395						
ANR	5008436	Symbol	ctype		5008395						
ANR	5008437	Function	is_qualifier_const	60:0:1480:1634							
ANR	5008438	FunctionDef	is_qualifier_const (mpc_ast_t * a)		5008437	0					
ANR	5008439	CompoundStatement		60:45:1525:1634	5008437	0					
ANR	5008440	ReturnStatement	"return strcmp ( a -> tag , ""qualifier|string"" ) == 0 && a -> contents && strcmp ( a -> contents , ""const"" ) == 0 ;"	61:1:1528:1632	5008437	0	True				
ANR	5008441	AndExpression	"strcmp ( a -> tag , ""qualifier|string"" ) == 0 && a -> contents && strcmp ( a -> contents , ""const"" ) == 0"		5008437	0		&&			
ANR	5008442	EqualityExpression	"strcmp ( a -> tag , ""qualifier|string"" ) == 0"		5008437	0		==			
ANR	5008443	CallExpression	"strcmp ( a -> tag , ""qualifier|string"" )"		5008437	0					
ANR	5008444	Callee	strcmp		5008437	0					
ANR	5008445	Identifier	strcmp		5008437	0					
ANR	5008446	ArgumentList	a -> tag		5008437	1					
ANR	5008447	Argument	a -> tag		5008437	0					
ANR	5008448	PtrMemberAccess	a -> tag		5008437	0					
ANR	5008449	Identifier	a		5008437	0					
ANR	5008450	Identifier	tag		5008437	1					
ANR	5008451	Argument	"""qualifier|string"""		5008437	1					
ANR	5008452	PrimaryExpression	"""qualifier|string"""		5008437	0					
ANR	5008453	PrimaryExpression	0		5008437	1					
ANR	5008454	AndExpression	"a -> contents && strcmp ( a -> contents , ""const"" ) == 0"		5008437	1		&&			
ANR	5008455	PtrMemberAccess	a -> contents		5008437	0					
ANR	5008456	Identifier	a		5008437	0					
ANR	5008457	Identifier	contents		5008437	1					
ANR	5008458	EqualityExpression	"strcmp ( a -> contents , ""const"" ) == 0"		5008437	1		==			
ANR	5008459	CallExpression	"strcmp ( a -> contents , ""const"" )"		5008437	0					
ANR	5008460	Callee	strcmp		5008437	0					
ANR	5008461	Identifier	strcmp		5008437	0					
ANR	5008462	ArgumentList	a -> contents		5008437	1					
ANR	5008463	Argument	a -> contents		5008437	0					
ANR	5008464	PtrMemberAccess	a -> contents		5008437	0					
ANR	5008465	Identifier	a		5008437	0					
ANR	5008466	Identifier	contents		5008437	1					
ANR	5008467	Argument	"""const"""		5008437	1					
ANR	5008468	PrimaryExpression	"""const"""		5008437	0					
ANR	5008469	PrimaryExpression	0		5008437	1					
ANR	5008470	ReturnType	static bool		5008437	1					
ANR	5008471	Identifier	is_qualifier_const		5008437	2					
ANR	5008472	ParameterList	mpc_ast_t * a		5008437	3					
ANR	5008473	Parameter	mpc_ast_t * a	60:31:1511:1522	5008437	0	True				
ANR	5008474	ParameterType	mpc_ast_t *		5008437	0					
ANR	5008475	Identifier	a		5008437	1					
ANR	5008476	CFGEntryNode	ENTRY		5008437		True				
ANR	5008477	CFGExitNode	EXIT		5008437		True				
ANR	5008478	Symbol	strcmp		5008437						
ANR	5008479	Symbol	a		5008437						
ANR	5008480	Symbol	a -> tag		5008437						
ANR	5008481	Symbol	* a		5008437						
ANR	5008482	Symbol	a -> contents		5008437						
ANR	5008483	Function	is_identifier_string	66:0:1637:1753							
ANR	5008484	FunctionDef	is_identifier_string (mpc_ast_t * a)		5008483	0					
ANR	5008485	CompoundStatement		66:47:1684:1753	5008483	0					
ANR	5008486	ReturnStatement	"return strcmp ( a -> tag , ""identifier|regex"" ) == 0 && a -> contents ;"	67:1:1687:1751	5008483	0	True				
ANR	5008487	AndExpression	"strcmp ( a -> tag , ""identifier|regex"" ) == 0 && a -> contents"		5008483	0		&&			
ANR	5008488	EqualityExpression	"strcmp ( a -> tag , ""identifier|regex"" ) == 0"		5008483	0		==			
ANR	5008489	CallExpression	"strcmp ( a -> tag , ""identifier|regex"" )"		5008483	0					
ANR	5008490	Callee	strcmp		5008483	0					
ANR	5008491	Identifier	strcmp		5008483	0					
ANR	5008492	ArgumentList	a -> tag		5008483	1					
ANR	5008493	Argument	a -> tag		5008483	0					
ANR	5008494	PtrMemberAccess	a -> tag		5008483	0					
ANR	5008495	Identifier	a		5008483	0					
ANR	5008496	Identifier	tag		5008483	1					
ANR	5008497	Argument	"""identifier|regex"""		5008483	1					
ANR	5008498	PrimaryExpression	"""identifier|regex"""		5008483	0					
ANR	5008499	PrimaryExpression	0		5008483	1					
ANR	5008500	PtrMemberAccess	a -> contents		5008483	1					
ANR	5008501	Identifier	a		5008483	0					
ANR	5008502	Identifier	contents		5008483	1					
ANR	5008503	ReturnType	static bool		5008483	1					
ANR	5008504	Identifier	is_identifier_string		5008483	2					
ANR	5008505	ParameterList	mpc_ast_t * a		5008483	3					
ANR	5008506	Parameter	mpc_ast_t * a	66:33:1670:1681	5008483	0	True				
ANR	5008507	ParameterType	mpc_ast_t *		5008483	0					
ANR	5008508	Identifier	a		5008483	1					
ANR	5008509	CFGEntryNode	ENTRY		5008483		True				
ANR	5008510	CFGExitNode	EXIT		5008483		True				
ANR	5008511	Symbol	strcmp		5008483						
ANR	5008512	Symbol	a		5008483						
ANR	5008513	Symbol	a -> tag		5008483						
ANR	5008514	Symbol	* a		5008483						
ANR	5008515	Symbol	a -> contents		5008483						
ANR	5008516	Function	is_identifier_kind	71:0:1756:2032							
ANR	5008517	FunctionDef	is_identifier_kind (mpc_ast_t * a)		5008516	0					
ANR	5008518	CompoundStatement		71:45:1801:2032	5008516	0					
ANR	5008519	ReturnStatement	"return strcmp ( a -> tag , ""identifier|>"" ) == 0 && a -> children_num == 2 && strcmp ( a -> children [ 0 ] -> tag , ""string"" ) == 0 && a -> children [ 0 ] -> contents && strcmp ( a -> children [ 1 ] -> tag , ""regex"" ) == 0 && a -> children [ 1 ] -> contents ;"	72:1:1804:2030	5008516	0	True				
ANR	5008520	AndExpression	"strcmp ( a -> tag , ""identifier|>"" ) == 0 && a -> children_num == 2 && strcmp ( a -> children [ 0 ] -> tag , ""string"" ) == 0 && a -> children [ 0 ] -> contents && strcmp ( a -> children [ 1 ] -> tag , ""regex"" ) == 0 && a -> children [ 1 ] -> contents"		5008516	0		&&			
ANR	5008521	EqualityExpression	"strcmp ( a -> tag , ""identifier|>"" ) == 0"		5008516	0		==			
ANR	5008522	CallExpression	"strcmp ( a -> tag , ""identifier|>"" )"		5008516	0					
ANR	5008523	Callee	strcmp		5008516	0					
ANR	5008524	Identifier	strcmp		5008516	0					
ANR	5008525	ArgumentList	a -> tag		5008516	1					
ANR	5008526	Argument	a -> tag		5008516	0					
ANR	5008527	PtrMemberAccess	a -> tag		5008516	0					
ANR	5008528	Identifier	a		5008516	0					
ANR	5008529	Identifier	tag		5008516	1					
ANR	5008530	Argument	"""identifier|>"""		5008516	1					
ANR	5008531	PrimaryExpression	"""identifier|>"""		5008516	0					
ANR	5008532	PrimaryExpression	0		5008516	1					
ANR	5008533	AndExpression	"a -> children_num == 2 && strcmp ( a -> children [ 0 ] -> tag , ""string"" ) == 0 && a -> children [ 0 ] -> contents && strcmp ( a -> children [ 1 ] -> tag , ""regex"" ) == 0 && a -> children [ 1 ] -> contents"		5008516	1		&&			
ANR	5008534	EqualityExpression	a -> children_num == 2		5008516	0		==			
ANR	5008535	PtrMemberAccess	a -> children_num		5008516	0					
ANR	5008536	Identifier	a		5008516	0					
ANR	5008537	Identifier	children_num		5008516	1					
ANR	5008538	PrimaryExpression	2		5008516	1					
ANR	5008539	AndExpression	"strcmp ( a -> children [ 0 ] -> tag , ""string"" ) == 0 && a -> children [ 0 ] -> contents && strcmp ( a -> children [ 1 ] -> tag , ""regex"" ) == 0 && a -> children [ 1 ] -> contents"		5008516	1		&&			
ANR	5008540	EqualityExpression	"strcmp ( a -> children [ 0 ] -> tag , ""string"" ) == 0"		5008516	0		==			
ANR	5008541	CallExpression	"strcmp ( a -> children [ 0 ] -> tag , ""string"" )"		5008516	0					
ANR	5008542	Callee	strcmp		5008516	0					
ANR	5008543	Identifier	strcmp		5008516	0					
ANR	5008544	ArgumentList	a -> children [ 0 ] -> tag		5008516	1					
ANR	5008545	Argument	a -> children [ 0 ] -> tag		5008516	0					
ANR	5008546	PtrMemberAccess	a -> children [ 0 ] -> tag		5008516	0					
ANR	5008547	ArrayIndexing	a -> children [ 0 ]		5008516	0					
ANR	5008548	PtrMemberAccess	a -> children		5008516	0					
ANR	5008549	Identifier	a		5008516	0					
ANR	5008550	Identifier	children		5008516	1					
ANR	5008551	PrimaryExpression	0		5008516	1					
ANR	5008552	Identifier	tag		5008516	1					
ANR	5008553	Argument	"""string"""		5008516	1					
ANR	5008554	PrimaryExpression	"""string"""		5008516	0					
ANR	5008555	PrimaryExpression	0		5008516	1					
ANR	5008556	AndExpression	"a -> children [ 0 ] -> contents && strcmp ( a -> children [ 1 ] -> tag , ""regex"" ) == 0 && a -> children [ 1 ] -> contents"		5008516	1		&&			
ANR	5008557	PtrMemberAccess	a -> children [ 0 ] -> contents		5008516	0					
ANR	5008558	ArrayIndexing	a -> children [ 0 ]		5008516	0					
ANR	5008559	PtrMemberAccess	a -> children		5008516	0					
ANR	5008560	Identifier	a		5008516	0					
ANR	5008561	Identifier	children		5008516	1					
ANR	5008562	PrimaryExpression	0		5008516	1					
ANR	5008563	Identifier	contents		5008516	1					
ANR	5008564	AndExpression	"strcmp ( a -> children [ 1 ] -> tag , ""regex"" ) == 0 && a -> children [ 1 ] -> contents"		5008516	1		&&			
ANR	5008565	EqualityExpression	"strcmp ( a -> children [ 1 ] -> tag , ""regex"" ) == 0"		5008516	0		==			
ANR	5008566	CallExpression	"strcmp ( a -> children [ 1 ] -> tag , ""regex"" )"		5008516	0					
ANR	5008567	Callee	strcmp		5008516	0					
ANR	5008568	Identifier	strcmp		5008516	0					
ANR	5008569	ArgumentList	a -> children [ 1 ] -> tag		5008516	1					
ANR	5008570	Argument	a -> children [ 1 ] -> tag		5008516	0					
ANR	5008571	PtrMemberAccess	a -> children [ 1 ] -> tag		5008516	0					
ANR	5008572	ArrayIndexing	a -> children [ 1 ]		5008516	0					
ANR	5008573	PtrMemberAccess	a -> children		5008516	0					
ANR	5008574	Identifier	a		5008516	0					
ANR	5008575	Identifier	children		5008516	1					
ANR	5008576	PrimaryExpression	1		5008516	1					
ANR	5008577	Identifier	tag		5008516	1					
ANR	5008578	Argument	"""regex"""		5008516	1					
ANR	5008579	PrimaryExpression	"""regex"""		5008516	0					
ANR	5008580	PrimaryExpression	0		5008516	1					
ANR	5008581	PtrMemberAccess	a -> children [ 1 ] -> contents		5008516	1					
ANR	5008582	ArrayIndexing	a -> children [ 1 ]		5008516	0					
ANR	5008583	PtrMemberAccess	a -> children		5008516	0					
ANR	5008584	Identifier	a		5008516	0					
ANR	5008585	Identifier	children		5008516	1					
ANR	5008586	PrimaryExpression	1		5008516	1					
ANR	5008587	Identifier	contents		5008516	1					
ANR	5008588	ReturnType	static bool		5008516	1					
ANR	5008589	Identifier	is_identifier_kind		5008516	2					
ANR	5008590	ParameterList	mpc_ast_t * a		5008516	3					
ANR	5008591	Parameter	mpc_ast_t * a	71:31:1787:1798	5008516	0	True				
ANR	5008592	ParameterType	mpc_ast_t *		5008516	0					
ANR	5008593	Identifier	a		5008516	1					
ANR	5008594	CFGEntryNode	ENTRY		5008516		True				
ANR	5008595	CFGExitNode	EXIT		5008516		True				
ANR	5008596	Symbol	* * * a		5008516						
ANR	5008597	Symbol	a -> children		5008516						
ANR	5008598	Symbol	strcmp		5008516						
ANR	5008599	Symbol	a		5008516						
ANR	5008600	Symbol	* * a -> children		5008516						
ANR	5008601	Symbol	a -> children [ 1 ] -> tag		5008516						
ANR	5008602	Symbol	* * a		5008516						
ANR	5008603	Symbol	* a		5008516						
ANR	5008604	Symbol	a -> children [ 1 ] -> contents		5008516						
ANR	5008605	Symbol	a -> tag		5008516						
ANR	5008606	Symbol	a -> children [ 0 ] -> tag		5008516						
ANR	5008607	Symbol	a -> children [ 0 ] -> contents		5008516						
ANR	5008608	Symbol	a -> children_num		5008516						
ANR	5008609	Symbol	* a -> children		5008516						
ANR	5008610	Function	is_non_const_pointer	80:0:2035:2183							
ANR	5008611	FunctionDef	is_non_const_pointer (mpc_ast_t * a)		5008610	0					
ANR	5008612	CompoundStatement		80:47:2082:2183	5008610	0					
ANR	5008613	ReturnStatement	"return strcmp ( a -> tag , ""pointer|char"" ) == 0 && a -> contents && strcmp ( a -> contents , ""*"" ) == 0 ;"	81:1:2085:2181	5008610	0	True				
ANR	5008614	AndExpression	"strcmp ( a -> tag , ""pointer|char"" ) == 0 && a -> contents && strcmp ( a -> contents , ""*"" ) == 0"		5008610	0		&&			
ANR	5008615	EqualityExpression	"strcmp ( a -> tag , ""pointer|char"" ) == 0"		5008610	0		==			
ANR	5008616	CallExpression	"strcmp ( a -> tag , ""pointer|char"" )"		5008610	0					
ANR	5008617	Callee	strcmp		5008610	0					
ANR	5008618	Identifier	strcmp		5008610	0					
ANR	5008619	ArgumentList	a -> tag		5008610	1					
ANR	5008620	Argument	a -> tag		5008610	0					
ANR	5008621	PtrMemberAccess	a -> tag		5008610	0					
ANR	5008622	Identifier	a		5008610	0					
ANR	5008623	Identifier	tag		5008610	1					
ANR	5008624	Argument	"""pointer|char"""		5008610	1					
ANR	5008625	PrimaryExpression	"""pointer|char"""		5008610	0					
ANR	5008626	PrimaryExpression	0		5008610	1					
ANR	5008627	AndExpression	"a -> contents && strcmp ( a -> contents , ""*"" ) == 0"		5008610	1		&&			
ANR	5008628	PtrMemberAccess	a -> contents		5008610	0					
ANR	5008629	Identifier	a		5008610	0					
ANR	5008630	Identifier	contents		5008610	1					
ANR	5008631	EqualityExpression	"strcmp ( a -> contents , ""*"" ) == 0"		5008610	1		==			
ANR	5008632	CallExpression	"strcmp ( a -> contents , ""*"" )"		5008610	0					
ANR	5008633	Callee	strcmp		5008610	0					
ANR	5008634	Identifier	strcmp		5008610	0					
ANR	5008635	ArgumentList	a -> contents		5008610	1					
ANR	5008636	Argument	a -> contents		5008610	0					
ANR	5008637	PtrMemberAccess	a -> contents		5008610	0					
ANR	5008638	Identifier	a		5008610	0					
ANR	5008639	Identifier	contents		5008610	1					
ANR	5008640	Argument	"""*"""		5008610	1					
ANR	5008641	PrimaryExpression	"""*"""		5008610	0					
ANR	5008642	PrimaryExpression	0		5008610	1					
ANR	5008643	ReturnType	static bool		5008610	1					
ANR	5008644	Identifier	is_non_const_pointer		5008610	2					
ANR	5008645	ParameterList	mpc_ast_t * a		5008610	3					
ANR	5008646	Parameter	mpc_ast_t * a	80:33:2068:2079	5008610	0	True				
ANR	5008647	ParameterType	mpc_ast_t *		5008610	0					
ANR	5008648	Identifier	a		5008610	1					
ANR	5008649	CFGEntryNode	ENTRY		5008610		True				
ANR	5008650	CFGExitNode	EXIT		5008610		True				
ANR	5008651	Symbol	strcmp		5008610						
ANR	5008652	Symbol	a		5008610						
ANR	5008653	Symbol	a -> tag		5008610						
ANR	5008654	Symbol	* a		5008610						
ANR	5008655	Symbol	a -> contents		5008610						
ANR	5008656	Function	is_const_pointer	86:0:2186:2467							
ANR	5008657	FunctionDef	is_const_pointer (mpc_ast_t * a)		5008656	0					
ANR	5008658	CompoundStatement		86:43:2229:2467	5008656	0					
ANR	5008659	ReturnStatement	"return strcmp ( a -> tag , ""pointer|>"" ) == 0 && a -> children_num == 2 && is_qualifier_const ( a -> children [ 0 ] ) && strcmp ( a -> children [ 1 ] -> tag , ""char"" ) == 0 && a -> children [ 1 ] -> contents && strcmp ( a -> children [ 1 ] -> contents , ""*"" ) == 0 ;"	87:1:2232:2465	5008656	0	True				
ANR	5008660	AndExpression	"strcmp ( a -> tag , ""pointer|>"" ) == 0 && a -> children_num == 2 && is_qualifier_const ( a -> children [ 0 ] ) && strcmp ( a -> children [ 1 ] -> tag , ""char"" ) == 0 && a -> children [ 1 ] -> contents && strcmp ( a -> children [ 1 ] -> contents , ""*"" ) == 0"		5008656	0		&&			
ANR	5008661	EqualityExpression	"strcmp ( a -> tag , ""pointer|>"" ) == 0"		5008656	0		==			
ANR	5008662	CallExpression	"strcmp ( a -> tag , ""pointer|>"" )"		5008656	0					
ANR	5008663	Callee	strcmp		5008656	0					
ANR	5008664	Identifier	strcmp		5008656	0					
ANR	5008665	ArgumentList	a -> tag		5008656	1					
ANR	5008666	Argument	a -> tag		5008656	0					
ANR	5008667	PtrMemberAccess	a -> tag		5008656	0					
ANR	5008668	Identifier	a		5008656	0					
ANR	5008669	Identifier	tag		5008656	1					
ANR	5008670	Argument	"""pointer|>"""		5008656	1					
ANR	5008671	PrimaryExpression	"""pointer|>"""		5008656	0					
ANR	5008672	PrimaryExpression	0		5008656	1					
ANR	5008673	AndExpression	"a -> children_num == 2 && is_qualifier_const ( a -> children [ 0 ] ) && strcmp ( a -> children [ 1 ] -> tag , ""char"" ) == 0 && a -> children [ 1 ] -> contents && strcmp ( a -> children [ 1 ] -> contents , ""*"" ) == 0"		5008656	1		&&			
ANR	5008674	EqualityExpression	a -> children_num == 2		5008656	0		==			
ANR	5008675	PtrMemberAccess	a -> children_num		5008656	0					
ANR	5008676	Identifier	a		5008656	0					
ANR	5008677	Identifier	children_num		5008656	1					
ANR	5008678	PrimaryExpression	2		5008656	1					
ANR	5008679	AndExpression	"is_qualifier_const ( a -> children [ 0 ] ) && strcmp ( a -> children [ 1 ] -> tag , ""char"" ) == 0 && a -> children [ 1 ] -> contents && strcmp ( a -> children [ 1 ] -> contents , ""*"" ) == 0"		5008656	1		&&			
ANR	5008680	CallExpression	is_qualifier_const ( a -> children [ 0 ] )		5008656	0					
ANR	5008681	Callee	is_qualifier_const		5008656	0					
ANR	5008682	Identifier	is_qualifier_const		5008656	0					
ANR	5008683	ArgumentList	a -> children [ 0 ]		5008656	1					
ANR	5008684	Argument	a -> children [ 0 ]		5008656	0					
ANR	5008685	ArrayIndexing	a -> children [ 0 ]		5008656	0					
ANR	5008686	PtrMemberAccess	a -> children		5008656	0					
ANR	5008687	Identifier	a		5008656	0					
ANR	5008688	Identifier	children		5008656	1					
ANR	5008689	PrimaryExpression	0		5008656	1					
ANR	5008690	AndExpression	"strcmp ( a -> children [ 1 ] -> tag , ""char"" ) == 0 && a -> children [ 1 ] -> contents && strcmp ( a -> children [ 1 ] -> contents , ""*"" ) == 0"		5008656	1		&&			
ANR	5008691	EqualityExpression	"strcmp ( a -> children [ 1 ] -> tag , ""char"" ) == 0"		5008656	0		==			
ANR	5008692	CallExpression	"strcmp ( a -> children [ 1 ] -> tag , ""char"" )"		5008656	0					
ANR	5008693	Callee	strcmp		5008656	0					
ANR	5008694	Identifier	strcmp		5008656	0					
ANR	5008695	ArgumentList	a -> children [ 1 ] -> tag		5008656	1					
ANR	5008696	Argument	a -> children [ 1 ] -> tag		5008656	0					
ANR	5008697	PtrMemberAccess	a -> children [ 1 ] -> tag		5008656	0					
ANR	5008698	ArrayIndexing	a -> children [ 1 ]		5008656	0					
ANR	5008699	PtrMemberAccess	a -> children		5008656	0					
ANR	5008700	Identifier	a		5008656	0					
ANR	5008701	Identifier	children		5008656	1					
ANR	5008702	PrimaryExpression	1		5008656	1					
ANR	5008703	Identifier	tag		5008656	1					
ANR	5008704	Argument	"""char"""		5008656	1					
ANR	5008705	PrimaryExpression	"""char"""		5008656	0					
ANR	5008706	PrimaryExpression	0		5008656	1					
ANR	5008707	AndExpression	"a -> children [ 1 ] -> contents && strcmp ( a -> children [ 1 ] -> contents , ""*"" ) == 0"		5008656	1		&&			
ANR	5008708	PtrMemberAccess	a -> children [ 1 ] -> contents		5008656	0					
ANR	5008709	ArrayIndexing	a -> children [ 1 ]		5008656	0					
ANR	5008710	PtrMemberAccess	a -> children		5008656	0					
ANR	5008711	Identifier	a		5008656	0					
ANR	5008712	Identifier	children		5008656	1					
ANR	5008713	PrimaryExpression	1		5008656	1					
ANR	5008714	Identifier	contents		5008656	1					
ANR	5008715	EqualityExpression	"strcmp ( a -> children [ 1 ] -> contents , ""*"" ) == 0"		5008656	1		==			
ANR	5008716	CallExpression	"strcmp ( a -> children [ 1 ] -> contents , ""*"" )"		5008656	0					
ANR	5008717	Callee	strcmp		5008656	0					
ANR	5008718	Identifier	strcmp		5008656	0					
ANR	5008719	ArgumentList	a -> children [ 1 ] -> contents		5008656	1					
ANR	5008720	Argument	a -> children [ 1 ] -> contents		5008656	0					
ANR	5008721	PtrMemberAccess	a -> children [ 1 ] -> contents		5008656	0					
ANR	5008722	ArrayIndexing	a -> children [ 1 ]		5008656	0					
ANR	5008723	PtrMemberAccess	a -> children		5008656	0					
ANR	5008724	Identifier	a		5008656	0					
ANR	5008725	Identifier	children		5008656	1					
ANR	5008726	PrimaryExpression	1		5008656	1					
ANR	5008727	Identifier	contents		5008656	1					
ANR	5008728	Argument	"""*"""		5008656	1					
ANR	5008729	PrimaryExpression	"""*"""		5008656	0					
ANR	5008730	PrimaryExpression	0		5008656	1					
ANR	5008731	ReturnType	static bool		5008656	1					
ANR	5008732	Identifier	is_const_pointer		5008656	2					
ANR	5008733	ParameterList	mpc_ast_t * a		5008656	3					
ANR	5008734	Parameter	mpc_ast_t * a	86:29:2215:2226	5008656	0	True				
ANR	5008735	ParameterType	mpc_ast_t *		5008656	0					
ANR	5008736	Identifier	a		5008656	1					
ANR	5008737	CFGEntryNode	ENTRY		5008656		True				
ANR	5008738	CFGExitNode	EXIT		5008656		True				
ANR	5008739	Symbol	* * * a		5008656						
ANR	5008740	Symbol	a -> children		5008656						
ANR	5008741	Symbol	strcmp		5008656						
ANR	5008742	Symbol	a		5008656						
ANR	5008743	Symbol	* * a -> children		5008656						
ANR	5008744	Symbol	a -> children [ 1 ] -> tag		5008656						
ANR	5008745	Symbol	* * a		5008656						
ANR	5008746	Symbol	* a		5008656						
ANR	5008747	Symbol	is_qualifier_const		5008656						
ANR	5008748	Symbol	a -> children [ 1 ] -> contents		5008656						
ANR	5008749	Symbol	a -> tag		5008656						
ANR	5008750	Symbol	a -> children_num		5008656						
ANR	5008751	Symbol	* a -> children		5008656						
ANR	5008752	Function	is_array	95:0:2470:2915							
ANR	5008753	FunctionDef	is_array (mpc_ast_t * a)		5008752	0					
ANR	5008754	CompoundStatement		95:35:2505:2915	5008752	0					
ANR	5008755	ReturnStatement	"return strcmp ( a -> tag , ""array|>"" ) == 0 && a -> children_num == 3 && strcmp ( a -> children [ 0 ] -> tag , ""char"" ) == 0 && a -> children [ 0 ] -> contents && strcmp ( a -> children [ 0 ] -> contents , ""["" ) == 0 && strcmp ( a -> children [ 1 ] -> tag , ""integerlit|regex"" ) == 0 && a -> children [ 1 ] -> contents && strcmp ( a -> children [ 2 ] -> tag , ""char"" ) == 0 && a -> children [ 2 ] -> contents && strcmp ( a -> children [ 2 ] -> contents , ""]"" ) == 0 ;"	96:1:2508:2913	5008752	0	True				
ANR	5008756	AndExpression	"strcmp ( a -> tag , ""array|>"" ) == 0 && a -> children_num == 3 && strcmp ( a -> children [ 0 ] -> tag , ""char"" ) == 0 && a -> children [ 0 ] -> contents && strcmp ( a -> children [ 0 ] -> contents , ""["" ) == 0 && strcmp ( a -> children [ 1 ] -> tag , ""integerlit|regex"" ) == 0 && a -> children [ 1 ] -> contents && strcmp ( a -> children [ 2 ] -> tag , ""char"" ) == 0 && a -> children [ 2 ] -> contents && strcmp ( a -> children [ 2 ] -> contents , ""]"" ) == 0"		5008752	0		&&			
ANR	5008757	EqualityExpression	"strcmp ( a -> tag , ""array|>"" ) == 0"		5008752	0		==			
ANR	5008758	CallExpression	"strcmp ( a -> tag , ""array|>"" )"		5008752	0					
ANR	5008759	Callee	strcmp		5008752	0					
ANR	5008760	Identifier	strcmp		5008752	0					
ANR	5008761	ArgumentList	a -> tag		5008752	1					
ANR	5008762	Argument	a -> tag		5008752	0					
ANR	5008763	PtrMemberAccess	a -> tag		5008752	0					
ANR	5008764	Identifier	a		5008752	0					
ANR	5008765	Identifier	tag		5008752	1					
ANR	5008766	Argument	"""array|>"""		5008752	1					
ANR	5008767	PrimaryExpression	"""array|>"""		5008752	0					
ANR	5008768	PrimaryExpression	0		5008752	1					
ANR	5008769	AndExpression	"a -> children_num == 3 && strcmp ( a -> children [ 0 ] -> tag , ""char"" ) == 0 && a -> children [ 0 ] -> contents && strcmp ( a -> children [ 0 ] -> contents , ""["" ) == 0 && strcmp ( a -> children [ 1 ] -> tag , ""integerlit|regex"" ) == 0 && a -> children [ 1 ] -> contents && strcmp ( a -> children [ 2 ] -> tag , ""char"" ) == 0 && a -> children [ 2 ] -> contents && strcmp ( a -> children [ 2 ] -> contents , ""]"" ) == 0"		5008752	1		&&			
ANR	5008770	EqualityExpression	a -> children_num == 3		5008752	0		==			
ANR	5008771	PtrMemberAccess	a -> children_num		5008752	0					
ANR	5008772	Identifier	a		5008752	0					
ANR	5008773	Identifier	children_num		5008752	1					
ANR	5008774	PrimaryExpression	3		5008752	1					
ANR	5008775	AndExpression	"strcmp ( a -> children [ 0 ] -> tag , ""char"" ) == 0 && a -> children [ 0 ] -> contents && strcmp ( a -> children [ 0 ] -> contents , ""["" ) == 0 && strcmp ( a -> children [ 1 ] -> tag , ""integerlit|regex"" ) == 0 && a -> children [ 1 ] -> contents && strcmp ( a -> children [ 2 ] -> tag , ""char"" ) == 0 && a -> children [ 2 ] -> contents && strcmp ( a -> children [ 2 ] -> contents , ""]"" ) == 0"		5008752	1		&&			
ANR	5008776	EqualityExpression	"strcmp ( a -> children [ 0 ] -> tag , ""char"" ) == 0"		5008752	0		==			
ANR	5008777	CallExpression	"strcmp ( a -> children [ 0 ] -> tag , ""char"" )"		5008752	0					
ANR	5008778	Callee	strcmp		5008752	0					
ANR	5008779	Identifier	strcmp		5008752	0					
ANR	5008780	ArgumentList	a -> children [ 0 ] -> tag		5008752	1					
ANR	5008781	Argument	a -> children [ 0 ] -> tag		5008752	0					
ANR	5008782	PtrMemberAccess	a -> children [ 0 ] -> tag		5008752	0					
ANR	5008783	ArrayIndexing	a -> children [ 0 ]		5008752	0					
ANR	5008784	PtrMemberAccess	a -> children		5008752	0					
ANR	5008785	Identifier	a		5008752	0					
ANR	5008786	Identifier	children		5008752	1					
ANR	5008787	PrimaryExpression	0		5008752	1					
ANR	5008788	Identifier	tag		5008752	1					
ANR	5008789	Argument	"""char"""		5008752	1					
ANR	5008790	PrimaryExpression	"""char"""		5008752	0					
ANR	5008791	PrimaryExpression	0		5008752	1					
ANR	5008792	AndExpression	"a -> children [ 0 ] -> contents && strcmp ( a -> children [ 0 ] -> contents , ""["" ) == 0 && strcmp ( a -> children [ 1 ] -> tag , ""integerlit|regex"" ) == 0 && a -> children [ 1 ] -> contents && strcmp ( a -> children [ 2 ] -> tag , ""char"" ) == 0 && a -> children [ 2 ] -> contents && strcmp ( a -> children [ 2 ] -> contents , ""]"" ) == 0"		5008752	1		&&			
ANR	5008793	PtrMemberAccess	a -> children [ 0 ] -> contents		5008752	0					
ANR	5008794	ArrayIndexing	a -> children [ 0 ]		5008752	0					
ANR	5008795	PtrMemberAccess	a -> children		5008752	0					
ANR	5008796	Identifier	a		5008752	0					
ANR	5008797	Identifier	children		5008752	1					
ANR	5008798	PrimaryExpression	0		5008752	1					
ANR	5008799	Identifier	contents		5008752	1					
ANR	5008800	AndExpression	"strcmp ( a -> children [ 0 ] -> contents , ""["" ) == 0 && strcmp ( a -> children [ 1 ] -> tag , ""integerlit|regex"" ) == 0 && a -> children [ 1 ] -> contents && strcmp ( a -> children [ 2 ] -> tag , ""char"" ) == 0 && a -> children [ 2 ] -> contents && strcmp ( a -> children [ 2 ] -> contents , ""]"" ) == 0"		5008752	1		&&			
ANR	5008801	EqualityExpression	"strcmp ( a -> children [ 0 ] -> contents , ""["" ) == 0"		5008752	0		==			
ANR	5008802	CallExpression	"strcmp ( a -> children [ 0 ] -> contents , ""["" )"		5008752	0					
ANR	5008803	Callee	strcmp		5008752	0					
ANR	5008804	Identifier	strcmp		5008752	0					
ANR	5008805	ArgumentList	a -> children [ 0 ] -> contents		5008752	1					
ANR	5008806	Argument	a -> children [ 0 ] -> contents		5008752	0					
ANR	5008807	PtrMemberAccess	a -> children [ 0 ] -> contents		5008752	0					
ANR	5008808	ArrayIndexing	a -> children [ 0 ]		5008752	0					
ANR	5008809	PtrMemberAccess	a -> children		5008752	0					
ANR	5008810	Identifier	a		5008752	0					
ANR	5008811	Identifier	children		5008752	1					
ANR	5008812	PrimaryExpression	0		5008752	1					
ANR	5008813	Identifier	contents		5008752	1					
ANR	5008814	Argument	"""["""		5008752	1					
ANR	5008815	PrimaryExpression	"""["""		5008752	0					
ANR	5008816	PrimaryExpression	0		5008752	1					
ANR	5008817	AndExpression	"strcmp ( a -> children [ 1 ] -> tag , ""integerlit|regex"" ) == 0 && a -> children [ 1 ] -> contents && strcmp ( a -> children [ 2 ] -> tag , ""char"" ) == 0 && a -> children [ 2 ] -> contents && strcmp ( a -> children [ 2 ] -> contents , ""]"" ) == 0"		5008752	1		&&			
ANR	5008818	EqualityExpression	"strcmp ( a -> children [ 1 ] -> tag , ""integerlit|regex"" ) == 0"		5008752	0		==			
ANR	5008819	CallExpression	"strcmp ( a -> children [ 1 ] -> tag , ""integerlit|regex"" )"		5008752	0					
ANR	5008820	Callee	strcmp		5008752	0					
ANR	5008821	Identifier	strcmp		5008752	0					
ANR	5008822	ArgumentList	a -> children [ 1 ] -> tag		5008752	1					
ANR	5008823	Argument	a -> children [ 1 ] -> tag		5008752	0					
ANR	5008824	PtrMemberAccess	a -> children [ 1 ] -> tag		5008752	0					
ANR	5008825	ArrayIndexing	a -> children [ 1 ]		5008752	0					
ANR	5008826	PtrMemberAccess	a -> children		5008752	0					
ANR	5008827	Identifier	a		5008752	0					
ANR	5008828	Identifier	children		5008752	1					
ANR	5008829	PrimaryExpression	1		5008752	1					
ANR	5008830	Identifier	tag		5008752	1					
ANR	5008831	Argument	"""integerlit|regex"""		5008752	1					
ANR	5008832	PrimaryExpression	"""integerlit|regex"""		5008752	0					
ANR	5008833	PrimaryExpression	0		5008752	1					
ANR	5008834	AndExpression	"a -> children [ 1 ] -> contents && strcmp ( a -> children [ 2 ] -> tag , ""char"" ) == 0 && a -> children [ 2 ] -> contents && strcmp ( a -> children [ 2 ] -> contents , ""]"" ) == 0"		5008752	1		&&			
ANR	5008835	PtrMemberAccess	a -> children [ 1 ] -> contents		5008752	0					
ANR	5008836	ArrayIndexing	a -> children [ 1 ]		5008752	0					
ANR	5008837	PtrMemberAccess	a -> children		5008752	0					
ANR	5008838	Identifier	a		5008752	0					
ANR	5008839	Identifier	children		5008752	1					
ANR	5008840	PrimaryExpression	1		5008752	1					
ANR	5008841	Identifier	contents		5008752	1					
ANR	5008842	AndExpression	"strcmp ( a -> children [ 2 ] -> tag , ""char"" ) == 0 && a -> children [ 2 ] -> contents && strcmp ( a -> children [ 2 ] -> contents , ""]"" ) == 0"		5008752	1		&&			
ANR	5008843	EqualityExpression	"strcmp ( a -> children [ 2 ] -> tag , ""char"" ) == 0"		5008752	0		==			
ANR	5008844	CallExpression	"strcmp ( a -> children [ 2 ] -> tag , ""char"" )"		5008752	0					
ANR	5008845	Callee	strcmp		5008752	0					
ANR	5008846	Identifier	strcmp		5008752	0					
ANR	5008847	ArgumentList	a -> children [ 2 ] -> tag		5008752	1					
ANR	5008848	Argument	a -> children [ 2 ] -> tag		5008752	0					
ANR	5008849	PtrMemberAccess	a -> children [ 2 ] -> tag		5008752	0					
ANR	5008850	ArrayIndexing	a -> children [ 2 ]		5008752	0					
ANR	5008851	PtrMemberAccess	a -> children		5008752	0					
ANR	5008852	Identifier	a		5008752	0					
ANR	5008853	Identifier	children		5008752	1					
ANR	5008854	PrimaryExpression	2		5008752	1					
ANR	5008855	Identifier	tag		5008752	1					
ANR	5008856	Argument	"""char"""		5008752	1					
ANR	5008857	PrimaryExpression	"""char"""		5008752	0					
ANR	5008858	PrimaryExpression	0		5008752	1					
ANR	5008859	AndExpression	"a -> children [ 2 ] -> contents && strcmp ( a -> children [ 2 ] -> contents , ""]"" ) == 0"		5008752	1		&&			
ANR	5008860	PtrMemberAccess	a -> children [ 2 ] -> contents		5008752	0					
ANR	5008861	ArrayIndexing	a -> children [ 2 ]		5008752	0					
ANR	5008862	PtrMemberAccess	a -> children		5008752	0					
ANR	5008863	Identifier	a		5008752	0					
ANR	5008864	Identifier	children		5008752	1					
ANR	5008865	PrimaryExpression	2		5008752	1					
ANR	5008866	Identifier	contents		5008752	1					
ANR	5008867	EqualityExpression	"strcmp ( a -> children [ 2 ] -> contents , ""]"" ) == 0"		5008752	1		==			
ANR	5008868	CallExpression	"strcmp ( a -> children [ 2 ] -> contents , ""]"" )"		5008752	0					
ANR	5008869	Callee	strcmp		5008752	0					
ANR	5008870	Identifier	strcmp		5008752	0					
ANR	5008871	ArgumentList	a -> children [ 2 ] -> contents		5008752	1					
ANR	5008872	Argument	a -> children [ 2 ] -> contents		5008752	0					
ANR	5008873	PtrMemberAccess	a -> children [ 2 ] -> contents		5008752	0					
ANR	5008874	ArrayIndexing	a -> children [ 2 ]		5008752	0					
ANR	5008875	PtrMemberAccess	a -> children		5008752	0					
ANR	5008876	Identifier	a		5008752	0					
ANR	5008877	Identifier	children		5008752	1					
ANR	5008878	PrimaryExpression	2		5008752	1					
ANR	5008879	Identifier	contents		5008752	1					
ANR	5008880	Argument	"""]"""		5008752	1					
ANR	5008881	PrimaryExpression	"""]"""		5008752	0					
ANR	5008882	PrimaryExpression	0		5008752	1					
ANR	5008883	ReturnType	static bool		5008752	1					
ANR	5008884	Identifier	is_array		5008752	2					
ANR	5008885	ParameterList	mpc_ast_t * a		5008752	3					
ANR	5008886	Parameter	mpc_ast_t * a	95:21:2491:2502	5008752	0	True				
ANR	5008887	ParameterType	mpc_ast_t *		5008752	0					
ANR	5008888	Identifier	a		5008752	1					
ANR	5008889	CFGEntryNode	ENTRY		5008752		True				
ANR	5008890	CFGExitNode	EXIT		5008752		True				
ANR	5008891	Symbol	a -> children		5008752						
ANR	5008892	Symbol	* * * a		5008752						
ANR	5008893	Symbol	strcmp		5008752						
ANR	5008894	Symbol	a		5008752						
ANR	5008895	Symbol	* * a -> children		5008752						
ANR	5008896	Symbol	a -> children [ 1 ] -> tag		5008752						
ANR	5008897	Symbol	* * a		5008752						
ANR	5008898	Symbol	* a		5008752						
ANR	5008899	Symbol	a -> children [ 2 ] -> tag		5008752						
ANR	5008900	Symbol	a -> children [ 2 ] -> contents		5008752						
ANR	5008901	Symbol	a -> children [ 1 ] -> contents		5008752						
ANR	5008902	Symbol	a -> tag		5008752						
ANR	5008903	Symbol	a -> children [ 0 ] -> tag		5008752						
ANR	5008904	Symbol	a -> children [ 0 ] -> contents		5008752						
ANR	5008905	Symbol	a -> children_num		5008752						
ANR	5008906	Symbol	* a -> children		5008752						
ANR	5008907	Function	ctype_convert_ast	108:0:2918:5825							
ANR	5008908	FunctionDef	ctype_convert_ast (mpc_ast_t * a)		5008907	0					
ANR	5008909	CompoundStatement		108:56:2974:5825	5008907	0					
ANR	5008910	IdentifierDeclStatement	bool is_const = false ;	109:1:2977:2998	5008907	0	True				
ANR	5008911	IdentifierDecl	is_const = false		5008907	0					
ANR	5008912	IdentifierDeclType	bool		5008907	0					
ANR	5008913	Identifier	is_const		5008907	1					
ANR	5008914	AssignmentExpression	is_const = false		5008907	2		=			
ANR	5008915	Identifier	false		5008907	0					
ANR	5008916	Identifier	false		5008907	1					
ANR	5008917	IdentifierDeclStatement	RParseCTypeType * cur = NULL ;	110:1:3001:3028	5008907	1	True				
ANR	5008918	IdentifierDecl	* cur = NULL		5008907	0					
ANR	5008919	IdentifierDeclType	RParseCTypeType *		5008907	0					
ANR	5008920	Identifier	cur		5008907	1					
ANR	5008921	AssignmentExpression	* cur = NULL		5008907	2		=			
ANR	5008922	Identifier	NULL		5008907	0					
ANR	5008923	Identifier	NULL		5008907	1					
ANR	5008924	IdentifierDeclStatement	int i ;	111:1:3031:3036	5008907	2	True				
ANR	5008925	IdentifierDecl	i		5008907	0					
ANR	5008926	IdentifierDeclType	int		5008907	0					
ANR	5008927	Identifier	i		5008907	1					
ANR	5008928	ForStatement	for ( i = 0 ; i < a -> children_num ; i ++ )		5008907	3					
ANR	5008929	ForInit	i = 0 ;	112:6:3044:3049	5008907	0	True				
ANR	5008930	AssignmentExpression	i = 0		5008907	0		=			
ANR	5008931	Identifier	i		5008907	0					
ANR	5008932	PrimaryExpression	0		5008907	1					
ANR	5008933	Condition	i < a -> children_num	112:13:3051:3069	5008907	1	True				
ANR	5008934	RelationalExpression	i < a -> children_num		5008907	0		<			
ANR	5008935	Identifier	i		5008907	0					
ANR	5008936	PtrMemberAccess	a -> children_num		5008907	1					
ANR	5008937	Identifier	a		5008907	0					
ANR	5008938	Identifier	children_num		5008907	1					
ANR	5008939	PostIncDecOperationExpression	i ++	112:34:3072:3074	5008907	2	True				
ANR	5008940	Identifier	i		5008907	0					
ANR	5008941	IncDec	++		5008907	1					
ANR	5008942	CompoundStatement		6:2:106:139	5008907	3					
ANR	5008943	IdentifierDeclStatement	mpc_ast_t * child = a -> children [ i ] ;	113:2:3081:3114	5008907	0	True				
ANR	5008944	IdentifierDecl	* child = a -> children [ i ]		5008907	0					
ANR	5008945	IdentifierDeclType	mpc_ast_t *		5008907	0					
ANR	5008946	Identifier	child		5008907	1					
ANR	5008947	AssignmentExpression	* child = a -> children [ i ]		5008907	2		=			
ANR	5008948	Identifier	child		5008907	0					
ANR	5008949	ArrayIndexing	a -> children [ i ]		5008907	1					
ANR	5008950	PtrMemberAccess	a -> children		5008907	0					
ANR	5008951	Identifier	a		5008907	0					
ANR	5008952	Identifier	children		5008907	1					
ANR	5008953	Identifier	i		5008907	1					
ANR	5008954	IfStatement	if ( is_qualifier_const ( child ) )		5008907	1					
ANR	5008955	Condition	is_qualifier_const ( child )	116:6:3134:3159	5008907	0	True				
ANR	5008956	CallExpression	is_qualifier_const ( child )		5008907	0					
ANR	5008957	Callee	is_qualifier_const		5008907	0					
ANR	5008958	Identifier	is_qualifier_const		5008907	0					
ANR	5008959	ArgumentList	child		5008907	1					
ANR	5008960	Argument	child		5008907	0					
ANR	5008961	Identifier	child		5008907	0					
ANR	5008962	CompoundStatement		9:34:187:187	5008907	1					
ANR	5008963	ExpressionStatement	is_const = true	117:3:3167:3182	5008907	0	True				
ANR	5008964	AssignmentExpression	is_const = true		5008907	0		=			
ANR	5008965	Identifier	is_const		5008907	0					
ANR	5008966	Identifier	true		5008907	1					
ANR	5008967	ElseStatement	else		5008907	0					
ANR	5008968	IfStatement	"if ( r_str_startswith ( child -> tag , ""identifier|"" ) )"		5008907	0					
ANR	5008969	Condition	"r_str_startswith ( child -> tag , ""identifier|"" )"	121:11:3239:3282	5008907	0	True				
ANR	5008970	CallExpression	"r_str_startswith ( child -> tag , ""identifier|"" )"		5008907	0					
ANR	5008971	Callee	r_str_startswith		5008907	0					
ANR	5008972	Identifier	r_str_startswith		5008907	0					
ANR	5008973	ArgumentList	child -> tag		5008907	1					
ANR	5008974	Argument	child -> tag		5008907	0					
ANR	5008975	PtrMemberAccess	child -> tag		5008907	0					
ANR	5008976	Identifier	child		5008907	0					
ANR	5008977	Identifier	tag		5008907	1					
ANR	5008978	Argument	"""identifier|"""		5008907	1					
ANR	5008979	PrimaryExpression	"""identifier|"""		5008907	0					
ANR	5008980	CompoundStatement		14:57:310:310	5008907	1					
ANR	5008981	IfStatement	if ( cur )		5008907	0					
ANR	5008982	Condition	cur	122:7:3294:3296	5008907	0	True				
ANR	5008983	Identifier	cur		5008907	0					
ANR	5008984	CompoundStatement		15:12:324:324	5008907	1					
ANR	5008985	GotoStatement	goto beach ;	124:4:3359:3369	5008907	0	True				
ANR	5008986	Identifier	beach		5008907	0					
ANR	5008987	ExpressionStatement	cur = R_NEW0 ( RParseCTypeType )	126:3:3379:3409	5008907	1	True				
ANR	5008988	AssignmentExpression	cur = R_NEW0 ( RParseCTypeType )		5008907	0		=			
ANR	5008989	Identifier	cur		5008907	0					
ANR	5008990	CallExpression	R_NEW0 ( RParseCTypeType )		5008907	1					
ANR	5008991	Callee	R_NEW0		5008907	0					
ANR	5008992	Identifier	R_NEW0		5008907	0					
ANR	5008993	ArgumentList	RParseCTypeType		5008907	1					
ANR	5008994	Argument	RParseCTypeType		5008907	0					
ANR	5008995	Identifier	RParseCTypeType		5008907	0					
ANR	5008996	IfStatement	if ( ! cur )		5008907	2					
ANR	5008997	Condition	! cur	127:7:3418:3421	5008907	0	True				
ANR	5008998	UnaryOperationExpression	! cur		5008907	0					
ANR	5008999	UnaryOperator	!		5008907	0					
ANR	5009000	Identifier	cur		5008907	1					
ANR	5009001	CompoundStatement		20:13:449:449	5008907	1					
ANR	5009002	GotoStatement	goto beach ;	128:4:3430:3440	5008907	0	True				
ANR	5009003	Identifier	beach		5008907	0					
ANR	5009004	ExpressionStatement	cur -> kind = R_PARSE_CTYPE_TYPE_KIND_IDENTIFIER	130:3:3450:3496	5008907	3	True				
ANR	5009005	AssignmentExpression	cur -> kind = R_PARSE_CTYPE_TYPE_KIND_IDENTIFIER		5008907	0		=			
ANR	5009006	PtrMemberAccess	cur -> kind		5008907	0					
ANR	5009007	Identifier	cur		5008907	0					
ANR	5009008	Identifier	kind		5008907	1					
ANR	5009009	Identifier	R_PARSE_CTYPE_TYPE_KIND_IDENTIFIER		5008907	1					
ANR	5009010	ExpressionStatement	cur -> identifier . is_const = is_const	131:3:3501:3536	5008907	4	True				
ANR	5009011	AssignmentExpression	cur -> identifier . is_const = is_const		5008907	0		=			
ANR	5009012	MemberAccess	cur -> identifier . is_const		5008907	0					
ANR	5009013	PtrMemberAccess	cur -> identifier		5008907	0					
ANR	5009014	Identifier	cur		5008907	0					
ANR	5009015	Identifier	identifier		5008907	1					
ANR	5009016	Identifier	is_const		5008907	1					
ANR	5009017	Identifier	is_const		5008907	1					
ANR	5009018	ExpressionStatement	cur -> identifier . kind = R_PARSE_CTYPE_IDENTIFIER_KIND_UNSPECIFIED	132:3:3541:3605	5008907	5	True				
ANR	5009019	AssignmentExpression	cur -> identifier . kind = R_PARSE_CTYPE_IDENTIFIER_KIND_UNSPECIFIED		5008907	0		=			
ANR	5009020	MemberAccess	cur -> identifier . kind		5008907	0					
ANR	5009021	PtrMemberAccess	cur -> identifier		5008907	0					
ANR	5009022	Identifier	cur		5008907	0					
ANR	5009023	Identifier	identifier		5008907	1					
ANR	5009024	Identifier	kind		5008907	1					
ANR	5009025	Identifier	R_PARSE_CTYPE_IDENTIFIER_KIND_UNSPECIFIED		5008907	1					
ANR	5009026	IfStatement	if ( is_identifier_string ( child ) )		5008907	6					
ANR	5009027	Condition	is_identifier_string ( child )	133:7:3614:3641	5008907	0	True				
ANR	5009028	CallExpression	is_identifier_string ( child )		5008907	0					
ANR	5009029	Callee	is_identifier_string		5008907	0					
ANR	5009030	Identifier	is_identifier_string		5008907	0					
ANR	5009031	ArgumentList	child		5008907	1					
ANR	5009032	Argument	child		5008907	0					
ANR	5009033	Identifier	child		5008907	0					
ANR	5009034	CompoundStatement		26:37:669:669	5008907	1					
ANR	5009035	ExpressionStatement	cur -> identifier . name = strdup ( child -> contents )	134:4:3650:3697	5008907	0	True				
ANR	5009036	AssignmentExpression	cur -> identifier . name = strdup ( child -> contents )		5008907	0		=			
ANR	5009037	MemberAccess	cur -> identifier . name		5008907	0					
ANR	5009038	PtrMemberAccess	cur -> identifier		5008907	0					
ANR	5009039	Identifier	cur		5008907	0					
ANR	5009040	Identifier	identifier		5008907	1					
ANR	5009041	Identifier	name		5008907	1					
ANR	5009042	CallExpression	strdup ( child -> contents )		5008907	1					
ANR	5009043	Callee	strdup		5008907	0					
ANR	5009044	Identifier	strdup		5008907	0					
ANR	5009045	ArgumentList	child -> contents		5008907	1					
ANR	5009046	Argument	child -> contents		5008907	0					
ANR	5009047	PtrMemberAccess	child -> contents		5008907	0					
ANR	5009048	Identifier	child		5008907	0					
ANR	5009049	Identifier	contents		5008907	1					
ANR	5009050	ElseStatement	else		5008907	0					
ANR	5009051	IfStatement	if ( is_identifier_kind ( child ) )		5008907	0					
ANR	5009052	Condition	is_identifier_kind ( child )	135:14:3713:3738	5008907	0	True				
ANR	5009053	CallExpression	is_identifier_kind ( child )		5008907	0					
ANR	5009054	Callee	is_identifier_kind		5008907	0					
ANR	5009055	Identifier	is_identifier_kind		5008907	0					
ANR	5009056	ArgumentList	child		5008907	1					
ANR	5009057	Argument	child		5008907	0					
ANR	5009058	Identifier	child		5008907	0					
ANR	5009059	CompoundStatement		28:42:766:766	5008907	1					
ANR	5009060	IfStatement	"if ( strcmp ( child -> children [ 0 ] -> contents , ""struct"" ) == 0 )"		5008907	0					
ANR	5009061	Condition	"strcmp ( child -> children [ 0 ] -> contents , ""struct"" ) == 0"	136:8:3751:3802	5008907	0	True				
ANR	5009062	EqualityExpression	"strcmp ( child -> children [ 0 ] -> contents , ""struct"" ) == 0"		5008907	0		==			
ANR	5009063	CallExpression	"strcmp ( child -> children [ 0 ] -> contents , ""struct"" )"		5008907	0					
ANR	5009064	Callee	strcmp		5008907	0					
ANR	5009065	Identifier	strcmp		5008907	0					
ANR	5009066	ArgumentList	child -> children [ 0 ] -> contents		5008907	1					
ANR	5009067	Argument	child -> children [ 0 ] -> contents		5008907	0					
ANR	5009068	PtrMemberAccess	child -> children [ 0 ] -> contents		5008907	0					
ANR	5009069	ArrayIndexing	child -> children [ 0 ]		5008907	0					
ANR	5009070	PtrMemberAccess	child -> children		5008907	0					
ANR	5009071	Identifier	child		5008907	0					
ANR	5009072	Identifier	children		5008907	1					
ANR	5009073	PrimaryExpression	0		5008907	1					
ANR	5009074	Identifier	contents		5008907	1					
ANR	5009075	Argument	"""struct"""		5008907	1					
ANR	5009076	PrimaryExpression	"""struct"""		5008907	0					
ANR	5009077	PrimaryExpression	0		5008907	1					
ANR	5009078	CompoundStatement		29:62:830:830	5008907	1					
ANR	5009079	ExpressionStatement	cur -> identifier . kind = R_PARSE_CTYPE_IDENTIFIER_KIND_STRUCT	137:5:3812:3871	5008907	0	True				
ANR	5009080	AssignmentExpression	cur -> identifier . kind = R_PARSE_CTYPE_IDENTIFIER_KIND_STRUCT		5008907	0		=			
ANR	5009081	MemberAccess	cur -> identifier . kind		5008907	0					
ANR	5009082	PtrMemberAccess	cur -> identifier		5008907	0					
ANR	5009083	Identifier	cur		5008907	0					
ANR	5009084	Identifier	identifier		5008907	1					
ANR	5009085	Identifier	kind		5008907	1					
ANR	5009086	Identifier	R_PARSE_CTYPE_IDENTIFIER_KIND_STRUCT		5008907	1					
ANR	5009087	ElseStatement	else		5008907	0					
ANR	5009088	IfStatement	"if ( strcmp ( child -> children [ 0 ] -> contents , ""union"" ) == 0 )"		5008907	0					
ANR	5009089	Condition	"strcmp ( child -> children [ 0 ] -> contents , ""union"" ) == 0"	138:15:3888:3938	5008907	0	True				
ANR	5009090	EqualityExpression	"strcmp ( child -> children [ 0 ] -> contents , ""union"" ) == 0"		5008907	0		==			
ANR	5009091	CallExpression	"strcmp ( child -> children [ 0 ] -> contents , ""union"" )"		5008907	0					
ANR	5009092	Callee	strcmp		5008907	0					
ANR	5009093	Identifier	strcmp		5008907	0					
ANR	5009094	ArgumentList	child -> children [ 0 ] -> contents		5008907	1					
ANR	5009095	Argument	child -> children [ 0 ] -> contents		5008907	0					
ANR	5009096	PtrMemberAccess	child -> children [ 0 ] -> contents		5008907	0					
ANR	5009097	ArrayIndexing	child -> children [ 0 ]		5008907	0					
ANR	5009098	PtrMemberAccess	child -> children		5008907	0					
ANR	5009099	Identifier	child		5008907	0					
ANR	5009100	Identifier	children		5008907	1					
ANR	5009101	PrimaryExpression	0		5008907	1					
ANR	5009102	Identifier	contents		5008907	1					
ANR	5009103	Argument	"""union"""		5008907	1					
ANR	5009104	PrimaryExpression	"""union"""		5008907	0					
ANR	5009105	PrimaryExpression	0		5008907	1					
ANR	5009106	CompoundStatement		31:68:966:966	5008907	1					
ANR	5009107	ExpressionStatement	cur -> identifier . kind = R_PARSE_CTYPE_IDENTIFIER_KIND_UNION	139:5:3948:4006	5008907	0	True				
ANR	5009108	AssignmentExpression	cur -> identifier . kind = R_PARSE_CTYPE_IDENTIFIER_KIND_UNION		5008907	0		=			
ANR	5009109	MemberAccess	cur -> identifier . kind		5008907	0					
ANR	5009110	PtrMemberAccess	cur -> identifier		5008907	0					
ANR	5009111	Identifier	cur		5008907	0					
ANR	5009112	Identifier	identifier		5008907	1					
ANR	5009113	Identifier	kind		5008907	1					
ANR	5009114	Identifier	R_PARSE_CTYPE_IDENTIFIER_KIND_UNION		5008907	1					
ANR	5009115	ElseStatement	else		5008907	0					
ANR	5009116	IfStatement	"if ( strcmp ( child -> children [ 0 ] -> contents , ""enum"" ) == 0 )"		5008907	0					
ANR	5009117	Condition	"strcmp ( child -> children [ 0 ] -> contents , ""enum"" ) == 0"	140:15:4023:4072	5008907	0	True				
ANR	5009118	EqualityExpression	"strcmp ( child -> children [ 0 ] -> contents , ""enum"" ) == 0"		5008907	0		==			
ANR	5009119	CallExpression	"strcmp ( child -> children [ 0 ] -> contents , ""enum"" )"		5008907	0					
ANR	5009120	Callee	strcmp		5008907	0					
ANR	5009121	Identifier	strcmp		5008907	0					
ANR	5009122	ArgumentList	child -> children [ 0 ] -> contents		5008907	1					
ANR	5009123	Argument	child -> children [ 0 ] -> contents		5008907	0					
ANR	5009124	PtrMemberAccess	child -> children [ 0 ] -> contents		5008907	0					
ANR	5009125	ArrayIndexing	child -> children [ 0 ]		5008907	0					
ANR	5009126	PtrMemberAccess	child -> children		5008907	0					
ANR	5009127	Identifier	child		5008907	0					
ANR	5009128	Identifier	children		5008907	1					
ANR	5009129	PrimaryExpression	0		5008907	1					
ANR	5009130	Identifier	contents		5008907	1					
ANR	5009131	Argument	"""enum"""		5008907	1					
ANR	5009132	PrimaryExpression	"""enum"""		5008907	0					
ANR	5009133	PrimaryExpression	0		5008907	1					
ANR	5009134	CompoundStatement		33:67:1100:1100	5008907	1					
ANR	5009135	ExpressionStatement	cur -> identifier . kind = R_PARSE_CTYPE_IDENTIFIER_KIND_ENUM	141:5:4082:4139	5008907	0	True				
ANR	5009136	AssignmentExpression	cur -> identifier . kind = R_PARSE_CTYPE_IDENTIFIER_KIND_ENUM		5008907	0		=			
ANR	5009137	MemberAccess	cur -> identifier . kind		5008907	0					
ANR	5009138	PtrMemberAccess	cur -> identifier		5008907	0					
ANR	5009139	Identifier	cur		5008907	0					
ANR	5009140	Identifier	identifier		5008907	1					
ANR	5009141	Identifier	kind		5008907	1					
ANR	5009142	Identifier	R_PARSE_CTYPE_IDENTIFIER_KIND_ENUM		5008907	1					
ANR	5009143	ExpressionStatement	cur -> identifier . name = strdup ( child -> children [ 1 ] -> contents )	143:4:4151:4211	5008907	1	True				
ANR	5009144	AssignmentExpression	cur -> identifier . name = strdup ( child -> children [ 1 ] -> contents )		5008907	0		=			
ANR	5009145	MemberAccess	cur -> identifier . name		5008907	0					
ANR	5009146	PtrMemberAccess	cur -> identifier		5008907	0					
ANR	5009147	Identifier	cur		5008907	0					
ANR	5009148	Identifier	identifier		5008907	1					
ANR	5009149	Identifier	name		5008907	1					
ANR	5009150	CallExpression	strdup ( child -> children [ 1 ] -> contents )		5008907	1					
ANR	5009151	Callee	strdup		5008907	0					
ANR	5009152	Identifier	strdup		5008907	0					
ANR	5009153	ArgumentList	child -> children [ 1 ] -> contents		5008907	1					
ANR	5009154	Argument	child -> children [ 1 ] -> contents		5008907	0					
ANR	5009155	PtrMemberAccess	child -> children [ 1 ] -> contents		5008907	0					
ANR	5009156	ArrayIndexing	child -> children [ 1 ]		5008907	0					
ANR	5009157	PtrMemberAccess	child -> children		5008907	0					
ANR	5009158	Identifier	child		5008907	0					
ANR	5009159	Identifier	children		5008907	1					
ANR	5009160	PrimaryExpression	1		5008907	1					
ANR	5009161	Identifier	contents		5008907	1					
ANR	5009162	ElseStatement	else		5008907	0					
ANR	5009163	CompoundStatement		37:10:1248:1248	5008907	0					
ANR	5009164	GotoStatement	goto beach ;	145:4:4229:4239	5008907	0	True				
ANR	5009165	Identifier	beach		5008907	0					
ANR	5009166	IfStatement	if ( ! cur -> identifier . name )		5008907	7					
ANR	5009167	Condition	! cur -> identifier . name	147:7:4253:4273	5008907	0	True				
ANR	5009168	UnaryOperationExpression	! cur -> identifier . name		5008907	0					
ANR	5009169	UnaryOperator	!		5008907	0					
ANR	5009170	MemberAccess	cur -> identifier . name		5008907	1					
ANR	5009171	PtrMemberAccess	cur -> identifier		5008907	0					
ANR	5009172	Identifier	cur		5008907	0					
ANR	5009173	Identifier	identifier		5008907	1					
ANR	5009174	Identifier	name		5008907	1					
ANR	5009175	CompoundStatement		40:30:1301:1301	5008907	1					
ANR	5009176	GotoStatement	goto beach ;	148:4:4282:4292	5008907	0	True				
ANR	5009177	Identifier	beach		5008907	0					
ANR	5009178	ExpressionStatement	is_const = false	150:3:4302:4318	5008907	8	True				
ANR	5009179	AssignmentExpression	is_const = false		5008907	0		=			
ANR	5009180	Identifier	is_const		5008907	0					
ANR	5009181	Identifier	false		5008907	1					
ANR	5009182	ElseStatement	else		5008907	0					
ANR	5009183	IfStatement	if ( is_identifier_string ( child ) )		5008907	0					
ANR	5009184	Condition	is_identifier_string ( child )	154:11:4354:4381	5008907	0	True				
ANR	5009185	CallExpression	is_identifier_string ( child )		5008907	0					
ANR	5009186	Callee	is_identifier_string		5008907	0					
ANR	5009187	Identifier	is_identifier_string		5008907	0					
ANR	5009188	ArgumentList	child		5008907	1					
ANR	5009189	Argument	child		5008907	0					
ANR	5009190	Identifier	child		5008907	0					
ANR	5009191	CompoundStatement		47:41:1409:1409	5008907	1					
ANR	5009192	IfStatement	if ( cur )		5008907	0					
ANR	5009193	Condition	cur	155:7:4393:4395	5008907	0	True				
ANR	5009194	Identifier	cur		5008907	0					
ANR	5009195	CompoundStatement		48:12:1423:1423	5008907	1					
ANR	5009196	GotoStatement	goto beach ;	157:4:4458:4468	5008907	0	True				
ANR	5009197	Identifier	beach		5008907	0					
ANR	5009198	ExpressionStatement	cur = R_NEW0 ( RParseCTypeType )	159:3:4478:4508	5008907	1	True				
ANR	5009199	AssignmentExpression	cur = R_NEW0 ( RParseCTypeType )		5008907	0		=			
ANR	5009200	Identifier	cur		5008907	0					
ANR	5009201	CallExpression	R_NEW0 ( RParseCTypeType )		5008907	1					
ANR	5009202	Callee	R_NEW0		5008907	0					
ANR	5009203	Identifier	R_NEW0		5008907	0					
ANR	5009204	ArgumentList	RParseCTypeType		5008907	1					
ANR	5009205	Argument	RParseCTypeType		5008907	0					
ANR	5009206	Identifier	RParseCTypeType		5008907	0					
ANR	5009207	IfStatement	if ( ! cur )		5008907	2					
ANR	5009208	Condition	! cur	160:7:4517:4520	5008907	0	True				
ANR	5009209	UnaryOperationExpression	! cur		5008907	0					
ANR	5009210	UnaryOperator	!		5008907	0					
ANR	5009211	Identifier	cur		5008907	1					
ANR	5009212	CompoundStatement		53:13:1548:1548	5008907	1					
ANR	5009213	GotoStatement	goto beach ;	161:4:4529:4539	5008907	0	True				
ANR	5009214	Identifier	beach		5008907	0					
ANR	5009215	ExpressionStatement	cur -> kind = R_PARSE_CTYPE_TYPE_KIND_IDENTIFIER	163:3:4549:4595	5008907	3	True				
ANR	5009216	AssignmentExpression	cur -> kind = R_PARSE_CTYPE_TYPE_KIND_IDENTIFIER		5008907	0		=			
ANR	5009217	PtrMemberAccess	cur -> kind		5008907	0					
ANR	5009218	Identifier	cur		5008907	0					
ANR	5009219	Identifier	kind		5008907	1					
ANR	5009220	Identifier	R_PARSE_CTYPE_TYPE_KIND_IDENTIFIER		5008907	1					
ANR	5009221	ExpressionStatement	cur -> identifier . kind = R_PARSE_CTYPE_IDENTIFIER_KIND_UNSPECIFIED	164:3:4600:4664	5008907	4	True				
ANR	5009222	AssignmentExpression	cur -> identifier . kind = R_PARSE_CTYPE_IDENTIFIER_KIND_UNSPECIFIED		5008907	0		=			
ANR	5009223	MemberAccess	cur -> identifier . kind		5008907	0					
ANR	5009224	PtrMemberAccess	cur -> identifier		5008907	0					
ANR	5009225	Identifier	cur		5008907	0					
ANR	5009226	Identifier	identifier		5008907	1					
ANR	5009227	Identifier	kind		5008907	1					
ANR	5009228	Identifier	R_PARSE_CTYPE_IDENTIFIER_KIND_UNSPECIFIED		5008907	1					
ANR	5009229	ExpressionStatement	cur -> identifier . is_const = is_const	165:3:4669:4704	5008907	5	True				
ANR	5009230	AssignmentExpression	cur -> identifier . is_const = is_const		5008907	0		=			
ANR	5009231	MemberAccess	cur -> identifier . is_const		5008907	0					
ANR	5009232	PtrMemberAccess	cur -> identifier		5008907	0					
ANR	5009233	Identifier	cur		5008907	0					
ANR	5009234	Identifier	identifier		5008907	1					
ANR	5009235	Identifier	is_const		5008907	1					
ANR	5009236	Identifier	is_const		5008907	1					
ANR	5009237	ExpressionStatement	cur -> identifier . name = strdup ( child -> contents )	166:3:4709:4756	5008907	6	True				
ANR	5009238	AssignmentExpression	cur -> identifier . name = strdup ( child -> contents )		5008907	0		=			
ANR	5009239	MemberAccess	cur -> identifier . name		5008907	0					
ANR	5009240	PtrMemberAccess	cur -> identifier		5008907	0					
ANR	5009241	Identifier	cur		5008907	0					
ANR	5009242	Identifier	identifier		5008907	1					
ANR	5009243	Identifier	name		5008907	1					
ANR	5009244	CallExpression	strdup ( child -> contents )		5008907	1					
ANR	5009245	Callee	strdup		5008907	0					
ANR	5009246	Identifier	strdup		5008907	0					
ANR	5009247	ArgumentList	child -> contents		5008907	1					
ANR	5009248	Argument	child -> contents		5008907	0					
ANR	5009249	PtrMemberAccess	child -> contents		5008907	0					
ANR	5009250	Identifier	child		5008907	0					
ANR	5009251	Identifier	contents		5008907	1					
ANR	5009252	IfStatement	if ( ! cur -> identifier . name )		5008907	7					
ANR	5009253	Condition	! cur -> identifier . name	167:7:4765:4785	5008907	0	True				
ANR	5009254	UnaryOperationExpression	! cur -> identifier . name		5008907	0					
ANR	5009255	UnaryOperator	!		5008907	0					
ANR	5009256	MemberAccess	cur -> identifier . name		5008907	1					
ANR	5009257	PtrMemberAccess	cur -> identifier		5008907	0					
ANR	5009258	Identifier	cur		5008907	0					
ANR	5009259	Identifier	identifier		5008907	1					
ANR	5009260	Identifier	name		5008907	1					
ANR	5009261	CompoundStatement		60:30:1813:1813	5008907	1					
ANR	5009262	GotoStatement	goto beach ;	168:4:4794:4804	5008907	0	True				
ANR	5009263	Identifier	beach		5008907	0					
ANR	5009264	ExpressionStatement	is_const = false	170:3:4814:4830	5008907	8	True				
ANR	5009265	AssignmentExpression	is_const = false		5008907	0		=			
ANR	5009266	Identifier	is_const		5008907	0					
ANR	5009267	Identifier	false		5008907	1					
ANR	5009268	ElseStatement	else		5008907	0					
ANR	5009269	IfStatement	if ( is_non_const_pointer ( child ) )		5008907	0					
ANR	5009270	Condition	is_non_const_pointer ( child )	174:11:4855:4882	5008907	0	True				
ANR	5009271	CallExpression	is_non_const_pointer ( child )		5008907	0					
ANR	5009272	Callee	is_non_const_pointer		5008907	0					
ANR	5009273	Identifier	is_non_const_pointer		5008907	0					
ANR	5009274	ArgumentList	child		5008907	1					
ANR	5009275	Argument	child		5008907	0					
ANR	5009276	Identifier	child		5008907	0					
ANR	5009277	CompoundStatement		68:3:1915:1966	5008907	1					
ANR	5009278	IdentifierDeclStatement	RParseCTypeType * pointer = R_NEW0 ( RParseCTypeType ) ;	175:3:4890:4941	5008907	0	True				
ANR	5009279	IdentifierDecl	* pointer = R_NEW0 ( RParseCTypeType )		5008907	0					
ANR	5009280	IdentifierDeclType	RParseCTypeType *		5008907	0					
ANR	5009281	Identifier	pointer		5008907	1					
ANR	5009282	AssignmentExpression	* pointer = R_NEW0 ( RParseCTypeType )		5008907	2		=			
ANR	5009283	Identifier	pointer		5008907	0					
ANR	5009284	CallExpression	R_NEW0 ( RParseCTypeType )		5008907	1					
ANR	5009285	Callee	R_NEW0		5008907	0					
ANR	5009286	Identifier	R_NEW0		5008907	0					
ANR	5009287	ArgumentList	RParseCTypeType		5008907	1					
ANR	5009288	Argument	RParseCTypeType		5008907	0					
ANR	5009289	Identifier	RParseCTypeType		5008907	0					
ANR	5009290	IfStatement	if ( ! pointer )		5008907	1					
ANR	5009291	Condition	! pointer	176:7:4950:4957	5008907	0	True				
ANR	5009292	UnaryOperationExpression	! pointer		5008907	0					
ANR	5009293	UnaryOperator	!		5008907	0					
ANR	5009294	Identifier	pointer		5008907	1					
ANR	5009295	CompoundStatement		69:17:1985:1985	5008907	1					
ANR	5009296	GotoStatement	goto beach ;	177:4:4966:4976	5008907	0	True				
ANR	5009297	Identifier	beach		5008907	0					
ANR	5009298	ExpressionStatement	pointer -> kind = R_PARSE_CTYPE_TYPE_KIND_POINTER	179:3:4986:5033	5008907	2	True				
ANR	5009299	AssignmentExpression	pointer -> kind = R_PARSE_CTYPE_TYPE_KIND_POINTER		5008907	0		=			
ANR	5009300	PtrMemberAccess	pointer -> kind		5008907	0					
ANR	5009301	Identifier	pointer		5008907	0					
ANR	5009302	Identifier	kind		5008907	1					
ANR	5009303	Identifier	R_PARSE_CTYPE_TYPE_KIND_POINTER		5008907	1					
ANR	5009304	ExpressionStatement	pointer -> pointer . is_const = false	180:3:5038:5071	5008907	3	True				
ANR	5009305	AssignmentExpression	pointer -> pointer . is_const = false		5008907	0		=			
ANR	5009306	MemberAccess	pointer -> pointer . is_const		5008907	0					
ANR	5009307	PtrMemberAccess	pointer -> pointer		5008907	0					
ANR	5009308	Identifier	pointer		5008907	0					
ANR	5009309	Identifier	pointer		5008907	1					
ANR	5009310	Identifier	is_const		5008907	1					
ANR	5009311	Identifier	false		5008907	1					
ANR	5009312	ExpressionStatement	pointer -> pointer . type = cur	181:3:5076:5103	5008907	4	True				
ANR	5009313	AssignmentExpression	pointer -> pointer . type = cur		5008907	0		=			
ANR	5009314	MemberAccess	pointer -> pointer . type		5008907	0					
ANR	5009315	PtrMemberAccess	pointer -> pointer		5008907	0					
ANR	5009316	Identifier	pointer		5008907	0					
ANR	5009317	Identifier	pointer		5008907	1					
ANR	5009318	Identifier	type		5008907	1					
ANR	5009319	Identifier	cur		5008907	1					
ANR	5009320	ExpressionStatement	cur = pointer	182:3:5108:5121	5008907	5	True				
ANR	5009321	AssignmentExpression	cur = pointer		5008907	0		=			
ANR	5009322	Identifier	cur		5008907	0					
ANR	5009323	Identifier	pointer		5008907	1					
ANR	5009324	ElseStatement	else		5008907	0					
ANR	5009325	IfStatement	if ( is_const_pointer ( child ) )		5008907	0					
ANR	5009326	Condition	is_const_pointer ( child )	186:11:5152:5175	5008907	0	True				
ANR	5009327	CallExpression	is_const_pointer ( child )		5008907	0					
ANR	5009328	Callee	is_const_pointer		5008907	0					
ANR	5009329	Identifier	is_const_pointer		5008907	0					
ANR	5009330	ArgumentList	child		5008907	1					
ANR	5009331	Argument	child		5008907	0					
ANR	5009332	Identifier	child		5008907	0					
ANR	5009333	CompoundStatement		80:3:2208:2259	5008907	1					
ANR	5009334	IdentifierDeclStatement	RParseCTypeType * pointer = R_NEW0 ( RParseCTypeType ) ;	187:3:5183:5234	5008907	0	True				
ANR	5009335	IdentifierDecl	* pointer = R_NEW0 ( RParseCTypeType )		5008907	0					
ANR	5009336	IdentifierDeclType	RParseCTypeType *		5008907	0					
ANR	5009337	Identifier	pointer		5008907	1					
ANR	5009338	AssignmentExpression	* pointer = R_NEW0 ( RParseCTypeType )		5008907	2		=			
ANR	5009339	Identifier	pointer		5008907	0					
ANR	5009340	CallExpression	R_NEW0 ( RParseCTypeType )		5008907	1					
ANR	5009341	Callee	R_NEW0		5008907	0					
ANR	5009342	Identifier	R_NEW0		5008907	0					
ANR	5009343	ArgumentList	RParseCTypeType		5008907	1					
ANR	5009344	Argument	RParseCTypeType		5008907	0					
ANR	5009345	Identifier	RParseCTypeType		5008907	0					
ANR	5009346	IfStatement	if ( ! pointer )		5008907	1					
ANR	5009347	Condition	! pointer	188:7:5243:5250	5008907	0	True				
ANR	5009348	UnaryOperationExpression	! pointer		5008907	0					
ANR	5009349	UnaryOperator	!		5008907	0					
ANR	5009350	Identifier	pointer		5008907	1					
ANR	5009351	CompoundStatement		81:17:2278:2278	5008907	1					
ANR	5009352	GotoStatement	goto beach ;	189:4:5259:5269	5008907	0	True				
ANR	5009353	Identifier	beach		5008907	0					
ANR	5009354	ExpressionStatement	pointer -> kind = R_PARSE_CTYPE_TYPE_KIND_POINTER	191:3:5279:5326	5008907	2	True				
ANR	5009355	AssignmentExpression	pointer -> kind = R_PARSE_CTYPE_TYPE_KIND_POINTER		5008907	0		=			
ANR	5009356	PtrMemberAccess	pointer -> kind		5008907	0					
ANR	5009357	Identifier	pointer		5008907	0					
ANR	5009358	Identifier	kind		5008907	1					
ANR	5009359	Identifier	R_PARSE_CTYPE_TYPE_KIND_POINTER		5008907	1					
ANR	5009360	ExpressionStatement	pointer -> pointer . is_const = true	192:3:5331:5363	5008907	3	True				
ANR	5009361	AssignmentExpression	pointer -> pointer . is_const = true		5008907	0		=			
ANR	5009362	MemberAccess	pointer -> pointer . is_const		5008907	0					
ANR	5009363	PtrMemberAccess	pointer -> pointer		5008907	0					
ANR	5009364	Identifier	pointer		5008907	0					
ANR	5009365	Identifier	pointer		5008907	1					
ANR	5009366	Identifier	is_const		5008907	1					
ANR	5009367	Identifier	true		5008907	1					
ANR	5009368	ExpressionStatement	pointer -> pointer . type = cur	193:3:5368:5395	5008907	4	True				
ANR	5009369	AssignmentExpression	pointer -> pointer . type = cur		5008907	0		=			
ANR	5009370	MemberAccess	pointer -> pointer . type		5008907	0					
ANR	5009371	PtrMemberAccess	pointer -> pointer		5008907	0					
ANR	5009372	Identifier	pointer		5008907	0					
ANR	5009373	Identifier	pointer		5008907	1					
ANR	5009374	Identifier	type		5008907	1					
ANR	5009375	Identifier	cur		5008907	1					
ANR	5009376	ExpressionStatement	cur = pointer	194:3:5400:5413	5008907	5	True				
ANR	5009377	AssignmentExpression	cur = pointer		5008907	0		=			
ANR	5009378	Identifier	cur		5008907	0					
ANR	5009379	Identifier	pointer		5008907	1					
ANR	5009380	ElseStatement	else		5008907	0					
ANR	5009381	IfStatement	if ( is_array ( child ) )		5008907	0					
ANR	5009382	Condition	is_array ( child )	198:11:5444:5459	5008907	0	True				
ANR	5009383	CallExpression	is_array ( child )		5008907	0					
ANR	5009384	Callee	is_array		5008907	0					
ANR	5009385	Identifier	is_array		5008907	0					
ANR	5009386	ArgumentList	child		5008907	1					
ANR	5009387	Argument	child		5008907	0					
ANR	5009388	Identifier	child		5008907	0					
ANR	5009389	CompoundStatement		92:3:2492:2541	5008907	1					
ANR	5009390	IdentifierDeclStatement	RParseCTypeType * array = R_NEW0 ( RParseCTypeType ) ;	199:3:5467:5516	5008907	0	True				
ANR	5009391	IdentifierDecl	* array = R_NEW0 ( RParseCTypeType )		5008907	0					
ANR	5009392	IdentifierDeclType	RParseCTypeType *		5008907	0					
ANR	5009393	Identifier	array		5008907	1					
ANR	5009394	AssignmentExpression	* array = R_NEW0 ( RParseCTypeType )		5008907	2		=			
ANR	5009395	Identifier	array		5008907	0					
ANR	5009396	CallExpression	R_NEW0 ( RParseCTypeType )		5008907	1					
ANR	5009397	Callee	R_NEW0		5008907	0					
ANR	5009398	Identifier	R_NEW0		5008907	0					
ANR	5009399	ArgumentList	RParseCTypeType		5008907	1					
ANR	5009400	Argument	RParseCTypeType		5008907	0					
ANR	5009401	Identifier	RParseCTypeType		5008907	0					
ANR	5009402	IfStatement	if ( ! array )		5008907	1					
ANR	5009403	Condition	! array	200:7:5525:5530	5008907	0	True				
ANR	5009404	UnaryOperationExpression	! array		5008907	0					
ANR	5009405	UnaryOperator	!		5008907	0					
ANR	5009406	Identifier	array		5008907	1					
ANR	5009407	CompoundStatement		93:15:2558:2558	5008907	1					
ANR	5009408	GotoStatement	goto beach ;	201:4:5539:5549	5008907	0	True				
ANR	5009409	Identifier	beach		5008907	0					
ANR	5009410	ExpressionStatement	array -> kind = R_PARSE_CTYPE_TYPE_KIND_ARRAY	203:3:5559:5602	5008907	2	True				
ANR	5009411	AssignmentExpression	array -> kind = R_PARSE_CTYPE_TYPE_KIND_ARRAY		5008907	0		=			
ANR	5009412	PtrMemberAccess	array -> kind		5008907	0					
ANR	5009413	Identifier	array		5008907	0					
ANR	5009414	Identifier	kind		5008907	1					
ANR	5009415	Identifier	R_PARSE_CTYPE_TYPE_KIND_ARRAY		5008907	1					
ANR	5009416	ExpressionStatement	"array -> array . count = strtoull ( child -> children [ 1 ] -> contents , NULL , 0 )"	204:3:5607:5676	5008907	3	True				
ANR	5009417	AssignmentExpression	"array -> array . count = strtoull ( child -> children [ 1 ] -> contents , NULL , 0 )"		5008907	0		=			
ANR	5009418	MemberAccess	array -> array . count		5008907	0					
ANR	5009419	PtrMemberAccess	array -> array		5008907	0					
ANR	5009420	Identifier	array		5008907	0					
ANR	5009421	Identifier	array		5008907	1					
ANR	5009422	Identifier	count		5008907	1					
ANR	5009423	CallExpression	"strtoull ( child -> children [ 1 ] -> contents , NULL , 0 )"		5008907	1					
ANR	5009424	Callee	strtoull		5008907	0					
ANR	5009425	Identifier	strtoull		5008907	0					
ANR	5009426	ArgumentList	child -> children [ 1 ] -> contents		5008907	1					
ANR	5009427	Argument	child -> children [ 1 ] -> contents		5008907	0					
ANR	5009428	PtrMemberAccess	child -> children [ 1 ] -> contents		5008907	0					
ANR	5009429	ArrayIndexing	child -> children [ 1 ]		5008907	0					
ANR	5009430	PtrMemberAccess	child -> children		5008907	0					
ANR	5009431	Identifier	child		5008907	0					
ANR	5009432	Identifier	children		5008907	1					
ANR	5009433	PrimaryExpression	1		5008907	1					
ANR	5009434	Identifier	contents		5008907	1					
ANR	5009435	Argument	NULL		5008907	1					
ANR	5009436	Identifier	NULL		5008907	0					
ANR	5009437	Argument	0		5008907	2					
ANR	5009438	PrimaryExpression	0		5008907	0					
ANR	5009439	ExpressionStatement	array -> array . type = cur	205:3:5681:5704	5008907	4	True				
ANR	5009440	AssignmentExpression	array -> array . type = cur		5008907	0		=			
ANR	5009441	MemberAccess	array -> array . type		5008907	0					
ANR	5009442	PtrMemberAccess	array -> array		5008907	0					
ANR	5009443	Identifier	array		5008907	0					
ANR	5009444	Identifier	array		5008907	1					
ANR	5009445	Identifier	type		5008907	1					
ANR	5009446	Identifier	cur		5008907	1					
ANR	5009447	ExpressionStatement	cur = array	206:3:5709:5720	5008907	5	True				
ANR	5009448	AssignmentExpression	cur = array		5008907	0		=			
ANR	5009449	Identifier	cur		5008907	0					
ANR	5009450	Identifier	array		5008907	1					
ANR	5009451	ElseStatement	else		5008907	0					
ANR	5009452	CompoundStatement		102:7:2759:2759	5008907	0					
ANR	5009453	GotoStatement	goto beach ;	210:3:5739:5749	5008907	0	True				
ANR	5009454	Identifier	beach		5008907	0					
ANR	5009455	ReturnStatement	return cur ;	214:1:5760:5770	5008907	4	True				
ANR	5009456	Identifier	cur		5008907	0					
ANR	5009457	Label	beach :	215:0:5772:5777	5008907	5	True				
ANR	5009458	Identifier	beach		5008907	0					
ANR	5009459	ExpressionStatement	r_parse_ctype_type_free ( cur )	216:1:5780:5809	5008907	6	True				
ANR	5009460	CallExpression	r_parse_ctype_type_free ( cur )		5008907	0					
ANR	5009461	Callee	r_parse_ctype_type_free		5008907	0					
ANR	5009462	Identifier	r_parse_ctype_type_free		5008907	0					
ANR	5009463	ArgumentList	cur		5008907	1					
ANR	5009464	Argument	cur		5008907	0					
ANR	5009465	Identifier	cur		5008907	0					
ANR	5009466	ReturnStatement	return NULL ;	217:1:5812:5823	5008907	7	True				
ANR	5009467	Identifier	NULL		5008907	0					
ANR	5009468	ReturnType	static RParseCTypeType *		5008907	1					
ANR	5009469	Identifier	ctype_convert_ast		5008907	2					
ANR	5009470	ParameterList	mpc_ast_t * a		5008907	3					
ANR	5009471	Parameter	mpc_ast_t * a	108:42:2960:2971	5008907	0	True				
ANR	5009472	ParameterType	mpc_ast_t *		5008907	0					
ANR	5009473	Identifier	a		5008907	1					
ANR	5009474	CFGEntryNode	ENTRY		5008907		True				
ANR	5009475	CFGExitNode	EXIT		5008907		True				
ANR	5009476	Symbol	a -> children		5008907						
ANR	5009477	Symbol	pointer -> pointer . is_const		5008907						
ANR	5009478	Symbol	is_const		5008907						
ANR	5009479	Symbol	is_identifier_string		5008907						
ANR	5009480	Symbol	array -> array . type		5008907						
ANR	5009481	Symbol	R_PARSE_CTYPE_IDENTIFIER_KIND_ENUM		5008907						
ANR	5009482	Symbol	* array		5008907						
ANR	5009483	Symbol	* cur		5008907						
ANR	5009484	Symbol	RParseCTypeType		5008907						
ANR	5009485	Symbol	cur -> kind		5008907						
ANR	5009486	Symbol	* child -> children		5008907						
ANR	5009487	Symbol	is_non_const_pointer		5008907						
ANR	5009488	Symbol	pointer -> pointer . type		5008907						
ANR	5009489	Symbol	strcmp		5008907						
ANR	5009490	Symbol	cur -> identifier . name		5008907						
ANR	5009491	Symbol	* child		5008907						
ANR	5009492	Symbol	* * * child		5008907						
ANR	5009493	Symbol	pointer		5008907						
ANR	5009494	Symbol	NULL		5008907						
ANR	5009495	Symbol	cur -> identifier . is_const		5008907						
ANR	5009496	Symbol	pointer -> pointer		5008907						
ANR	5009497	Symbol	R_PARSE_CTYPE_TYPE_KIND_POINTER		5008907						
ANR	5009498	Symbol	* * a		5008907						
ANR	5009499	Symbol	array -> array . count		5008907						
ANR	5009500	Symbol	cur -> identifier . kind		5008907						
ANR	5009501	Symbol	is_qualifier_const		5008907						
ANR	5009502	Symbol	R_NEW0		5008907						
ANR	5009503	Symbol	child -> tag		5008907						
ANR	5009504	Symbol	true		5008907						
ANR	5009505	Symbol	* pointer		5008907						
ANR	5009506	Symbol	child -> contents		5008907						
ANR	5009507	Symbol	R_PARSE_CTYPE_IDENTIFIER_KIND_UNSPECIFIED		5008907						
ANR	5009508	Symbol	child		5008907						
ANR	5009509	Symbol	R_PARSE_CTYPE_TYPE_KIND_IDENTIFIER		5008907						
ANR	5009510	Symbol	* * child -> children		5008907						
ANR	5009511	Symbol	cur		5008907						
ANR	5009512	Symbol	is_identifier_kind		5008907						
ANR	5009513	Symbol	R_PARSE_CTYPE_IDENTIFIER_KIND_UNION		5008907						
ANR	5009514	Symbol	child -> children		5008907						
ANR	5009515	Symbol	strtoull		5008907						
ANR	5009516	Symbol	* * child		5008907						
ANR	5009517	Symbol	is_const_pointer		5008907						
ANR	5009518	Symbol	array		5008907						
ANR	5009519	Symbol	* a -> children		5008907						
ANR	5009520	Symbol	child -> children [ 0 ] -> contents		5008907						
ANR	5009521	Symbol	r_str_startswith		5008907						
ANR	5009522	Symbol	a		5008907						
ANR	5009523	Symbol	false		5008907						
ANR	5009524	Symbol	i		5008907						
ANR	5009525	Symbol	R_PARSE_CTYPE_TYPE_KIND_ARRAY		5008907						
ANR	5009526	Symbol	* a		5008907						
ANR	5009527	Symbol	cur -> identifier		5008907						
ANR	5009528	Symbol	pointer -> kind		5008907						
ANR	5009529	Symbol	* i		5008907						
ANR	5009530	Symbol	R_PARSE_CTYPE_IDENTIFIER_KIND_STRUCT		5008907						
ANR	5009531	Symbol	is_array		5008907						
ANR	5009532	Symbol	array -> kind		5008907						
ANR	5009533	Symbol	array -> array		5008907						
ANR	5009534	Symbol	a -> children_num		5008907						
ANR	5009535	Symbol	strdup		5008907						
ANR	5009536	Symbol	child -> children [ 1 ] -> contents		5008907						
ANR	5009537	Function	r_parse_ctype_parse	220:0:5828:6277							
ANR	5009538	FunctionDef	"r_parse_ctype_parse (RParseCType * ctype , const char * str , char * * error)"		5009537	0					
ANR	5009539	CompoundStatement		220:94:5922:6277	5009537	0					
ANR	5009540	IdentifierDeclStatement	mpc_result_t r ;	221:1:5925:5939	5009537	0	True				
ANR	5009541	IdentifierDecl	r		5009537	0					
ANR	5009542	IdentifierDeclType	mpc_result_t		5009537	0					
ANR	5009543	Identifier	r		5009537	1					
ANR	5009544	IfStatement	"if ( mpc_parse ( ""<string>"" , str , ctype -> type , & r ) )"		5009537	1					
ANR	5009545	Condition	"mpc_parse ( ""<string>"" , str , ctype -> type , & r )"	222:5:5946:5989	5009537	0	True				
ANR	5009546	CallExpression	"mpc_parse ( ""<string>"" , str , ctype -> type , & r )"		5009537	0					
ANR	5009547	Callee	mpc_parse		5009537	0					
ANR	5009548	Identifier	mpc_parse		5009537	0					
ANR	5009549	ArgumentList	"""<string>"""		5009537	1					
ANR	5009550	Argument	"""<string>"""		5009537	0					
ANR	5009551	PrimaryExpression	"""<string>"""		5009537	0					
ANR	5009552	Argument	str		5009537	1					
ANR	5009553	Identifier	str		5009537	0					
ANR	5009554	Argument	ctype -> type		5009537	2					
ANR	5009555	PtrMemberAccess	ctype -> type		5009537	0					
ANR	5009556	Identifier	ctype		5009537	0					
ANR	5009557	Identifier	type		5009537	1					
ANR	5009558	Argument	& r		5009537	3					
ANR	5009559	UnaryOperationExpression	& r		5009537	0					
ANR	5009560	UnaryOperator	&		5009537	0					
ANR	5009561	Identifier	r		5009537	1					
ANR	5009562	CompoundStatement		4:2:73:124	5009537	1					
ANR	5009563	IdentifierDeclStatement	RParseCTypeType * ret = ctype_convert_ast ( r . output ) ;	223:2:5996:6047	5009537	0	True				
ANR	5009564	IdentifierDecl	* ret = ctype_convert_ast ( r . output )		5009537	0					
ANR	5009565	IdentifierDeclType	RParseCTypeType *		5009537	0					
ANR	5009566	Identifier	ret		5009537	1					
ANR	5009567	AssignmentExpression	* ret = ctype_convert_ast ( r . output )		5009537	2		=			
ANR	5009568	Identifier	ret		5009537	0					
ANR	5009569	CallExpression	ctype_convert_ast ( r . output )		5009537	1					
ANR	5009570	Callee	ctype_convert_ast		5009537	0					
ANR	5009571	Identifier	ctype_convert_ast		5009537	0					
ANR	5009572	ArgumentList	r . output		5009537	1					
ANR	5009573	Argument	r . output		5009537	0					
ANR	5009574	MemberAccess	r . output		5009537	0					
ANR	5009575	Identifier	r		5009537	0					
ANR	5009576	Identifier	output		5009537	1					
ANR	5009577	IfStatement	if ( error )		5009537	1					
ANR	5009578	Condition	error	224:6:6055:6059	5009537	0	True				
ANR	5009579	Identifier	error		5009537	0					
ANR	5009580	CompoundStatement		5:13:139:139	5009537	1					
ANR	5009581	ExpressionStatement	"* error = ! ret ? strdup ( ""internal error"" ) : NULL"	225:3:6067:6115	5009537	0	True				
ANR	5009582	AssignmentExpression	"* error = ! ret ? strdup ( ""internal error"" ) : NULL"		5009537	0		=			
ANR	5009583	UnaryOperationExpression	* error		5009537	0					
ANR	5009584	UnaryOperator	*		5009537	0					
ANR	5009585	Identifier	error		5009537	1					
ANR	5009586	ConditionalExpression	"! ret ? strdup ( ""internal error"" ) : NULL"		5009537	1					
ANR	5009587	Condition	! ret		5009537	0					
ANR	5009588	UnaryOperationExpression	! ret		5009537	0					
ANR	5009589	UnaryOperator	!		5009537	0					
ANR	5009590	Identifier	ret		5009537	1					
ANR	5009591	CallExpression	"strdup ( ""internal error"" )"		5009537	1					
ANR	5009592	Callee	strdup		5009537	0					
ANR	5009593	Identifier	strdup		5009537	0					
ANR	5009594	ArgumentList	"""internal error"""		5009537	1					
ANR	5009595	Argument	"""internal error"""		5009537	0					
ANR	5009596	PrimaryExpression	"""internal error"""		5009537	0					
ANR	5009597	Identifier	NULL		5009537	2					
ANR	5009598	ExpressionStatement	mpc_ast_delete ( r . output )	227:2:6123:6148	5009537	2	True				
ANR	5009599	CallExpression	mpc_ast_delete ( r . output )		5009537	0					
ANR	5009600	Callee	mpc_ast_delete		5009537	0					
ANR	5009601	Identifier	mpc_ast_delete		5009537	0					
ANR	5009602	ArgumentList	r . output		5009537	1					
ANR	5009603	Argument	r . output		5009537	0					
ANR	5009604	MemberAccess	r . output		5009537	0					
ANR	5009605	Identifier	r		5009537	0					
ANR	5009606	Identifier	output		5009537	1					
ANR	5009607	ReturnStatement	return ret ;	228:2:6152:6162	5009537	3	True				
ANR	5009608	Identifier	ret		5009537	0					
ANR	5009609	ElseStatement	else		5009537	0					
ANR	5009610	CompoundStatement		10:8:249:249	5009537	0					
ANR	5009611	IfStatement	if ( error )		5009537	0					
ANR	5009612	Condition	error	230:6:6180:6184	5009537	0	True				
ANR	5009613	Identifier	error		5009537	0					
ANR	5009614	CompoundStatement		11:13:264:264	5009537	1					
ANR	5009615	ExpressionStatement	* error = mpc_err_string ( r . error )	231:3:6192:6225	5009537	0	True				
ANR	5009616	AssignmentExpression	* error = mpc_err_string ( r . error )		5009537	0		=			
ANR	5009617	UnaryOperationExpression	* error		5009537	0					
ANR	5009618	UnaryOperator	*		5009537	0					
ANR	5009619	Identifier	error		5009537	1					
ANR	5009620	CallExpression	mpc_err_string ( r . error )		5009537	1					
ANR	5009621	Callee	mpc_err_string		5009537	0					
ANR	5009622	Identifier	mpc_err_string		5009537	0					
ANR	5009623	ArgumentList	r . error		5009537	1					
ANR	5009624	Argument	r . error		5009537	0					
ANR	5009625	MemberAccess	r . error		5009537	0					
ANR	5009626	Identifier	r		5009537	0					
ANR	5009627	Identifier	error		5009537	1					
ANR	5009628	ExpressionStatement	mpc_err_delete ( r . error )	233:2:6233:6257	5009537	1	True				
ANR	5009629	CallExpression	mpc_err_delete ( r . error )		5009537	0					
ANR	5009630	Callee	mpc_err_delete		5009537	0					
ANR	5009631	Identifier	mpc_err_delete		5009537	0					
ANR	5009632	ArgumentList	r . error		5009537	1					
ANR	5009633	Argument	r . error		5009537	0					
ANR	5009634	MemberAccess	r . error		5009537	0					
ANR	5009635	Identifier	r		5009537	0					
ANR	5009636	Identifier	error		5009537	1					
ANR	5009637	ReturnStatement	return NULL ;	234:2:6261:6272	5009537	2	True				
ANR	5009638	Identifier	NULL		5009537	0					
ANR	5009639	ReturnType	R_API RParseCTypeType *		5009537	1					
ANR	5009640	Identifier	r_parse_ctype_parse		5009537	2					
ANR	5009641	ParameterList	"RParseCType * ctype , const char * str , char * * error"		5009537	3					
ANR	5009642	Parameter	RParseCType * ctype	220:43:5871:5888	5009537	0	True				
ANR	5009643	ParameterType	RParseCType *		5009537	0					
ANR	5009644	Identifier	ctype		5009537	1					
ANR	5009645	Parameter	const char * str	220:63:5891:5905	5009537	1	True				
ANR	5009646	ParameterType	const char *		5009537	0					
ANR	5009647	Identifier	str		5009537	1					
ANR	5009648	Parameter	char * * error	220:80:5908:5919	5009537	2	True				
ANR	5009649	ParameterType	char * *		5009537	0					
ANR	5009650	Identifier	error		5009537	1					
ANR	5009651	CFGEntryNode	ENTRY		5009537		True				
ANR	5009652	CFGExitNode	EXIT		5009537		True				
ANR	5009653	Symbol	ret		5009537						
ANR	5009654	Symbol	NULL		5009537						
ANR	5009655	Symbol	error		5009537						
ANR	5009656	Symbol	* ctype		5009537						
ANR	5009657	Symbol	ctype -> type		5009537						
ANR	5009658	Symbol	str		5009537						
ANR	5009659	Symbol	mpc_parse		5009537						
ANR	5009660	Symbol	r . output		5009537						
ANR	5009661	Symbol	r		5009537						
ANR	5009662	Symbol	ctype		5009537						
ANR	5009663	Symbol	r . error		5009537						
ANR	5009664	Symbol	* error		5009537						
ANR	5009665	Symbol	& r		5009537						
ANR	5009666	Symbol	ctype_convert_ast		5009537						
ANR	5009667	Symbol	strdup		5009537						
ANR	5009668	Symbol	mpc_err_string		5009537						
ANR	5009669	Function	r_parse_ctype_type_free	238:0:6280:6678							
ANR	5009670	FunctionDef	r_parse_ctype_type_free (RParseCTypeType * type)		5009669	0					
ANR	5009671	CompoundStatement		238:58:6338:6678	5009669	0					
ANR	5009672	IfStatement	if ( ! type )		5009669	0					
ANR	5009673	Condition	! type	239:5:6345:6349	5009669	0	True				
ANR	5009674	UnaryOperationExpression	! type		5009669	0					
ANR	5009675	UnaryOperator	!		5009669	0					
ANR	5009676	Identifier	type		5009669	1					
ANR	5009677	CompoundStatement		2:12:13:13	5009669	1					
ANR	5009678	ReturnStatement	return ;	240:2:6356:6362	5009669	0	True				
ANR	5009679	SwitchStatement	switch ( type -> kind )		5009669	1					
ANR	5009680	Condition	type -> kind	242:9:6376:6385	5009669	0	True				
ANR	5009681	PtrMemberAccess	type -> kind		5009669	0					
ANR	5009682	Identifier	type		5009669	0					
ANR	5009683	Identifier	kind		5009669	1					
ANR	5009684	CompoundStatement		5:21:49:49	5009669	1					
ANR	5009685	Label	case R_PARSE_CTYPE_TYPE_KIND_IDENTIFIER :	243:1:6391:6430	5009669	0	True				
ANR	5009686	Identifier	R_PARSE_CTYPE_TYPE_KIND_IDENTIFIER		5009669	0					
ANR	5009687	ExpressionStatement	free ( type -> identifier . name )	244:2:6434:6462	5009669	1	True				
ANR	5009688	CallExpression	free ( type -> identifier . name )		5009669	0					
ANR	5009689	Callee	free		5009669	0					
ANR	5009690	Identifier	free		5009669	0					
ANR	5009691	ArgumentList	type -> identifier . name		5009669	1					
ANR	5009692	Argument	type -> identifier . name		5009669	0					
ANR	5009693	MemberAccess	type -> identifier . name		5009669	0					
ANR	5009694	PtrMemberAccess	type -> identifier		5009669	0					
ANR	5009695	Identifier	type		5009669	0					
ANR	5009696	Identifier	identifier		5009669	1					
ANR	5009697	Identifier	name		5009669	1					
ANR	5009698	BreakStatement	break ;	245:2:6466:6471	5009669	2	True				
ANR	5009699	Label	case R_PARSE_CTYPE_TYPE_KIND_POINTER :	246:1:6474:6510	5009669	3	True				
ANR	5009700	Identifier	R_PARSE_CTYPE_TYPE_KIND_POINTER		5009669	0					
ANR	5009701	ExpressionStatement	r_parse_ctype_type_free ( type -> pointer . type )	247:2:6514:6558	5009669	4	True				
ANR	5009702	CallExpression	r_parse_ctype_type_free ( type -> pointer . type )		5009669	0					
ANR	5009703	Callee	r_parse_ctype_type_free		5009669	0					
ANR	5009704	Identifier	r_parse_ctype_type_free		5009669	0					
ANR	5009705	ArgumentList	type -> pointer . type		5009669	1					
ANR	5009706	Argument	type -> pointer . type		5009669	0					
ANR	5009707	MemberAccess	type -> pointer . type		5009669	0					
ANR	5009708	PtrMemberAccess	type -> pointer		5009669	0					
ANR	5009709	Identifier	type		5009669	0					
ANR	5009710	Identifier	pointer		5009669	1					
ANR	5009711	Identifier	type		5009669	1					
ANR	5009712	BreakStatement	break ;	248:2:6562:6567	5009669	5	True				
ANR	5009713	Label	case R_PARSE_CTYPE_TYPE_KIND_ARRAY :	249:1:6570:6604	5009669	6	True				
ANR	5009714	Identifier	R_PARSE_CTYPE_TYPE_KIND_ARRAY		5009669	0					
ANR	5009715	ExpressionStatement	r_parse_ctype_type_free ( type -> array . type )	250:2:6608:6650	5009669	7	True				
ANR	5009716	CallExpression	r_parse_ctype_type_free ( type -> array . type )		5009669	0					
ANR	5009717	Callee	r_parse_ctype_type_free		5009669	0					
ANR	5009718	Identifier	r_parse_ctype_type_free		5009669	0					
ANR	5009719	ArgumentList	type -> array . type		5009669	1					
ANR	5009720	Argument	type -> array . type		5009669	0					
ANR	5009721	MemberAccess	type -> array . type		5009669	0					
ANR	5009722	PtrMemberAccess	type -> array		5009669	0					
ANR	5009723	Identifier	type		5009669	0					
ANR	5009724	Identifier	array		5009669	1					
ANR	5009725	Identifier	type		5009669	1					
ANR	5009726	BreakStatement	break ;	251:2:6654:6659	5009669	8	True				
ANR	5009727	ExpressionStatement	free ( type )	253:1:6665:6676	5009669	2	True				
ANR	5009728	CallExpression	free ( type )		5009669	0					
ANR	5009729	Callee	free		5009669	0					
ANR	5009730	Identifier	free		5009669	0					
ANR	5009731	ArgumentList	type		5009669	1					
ANR	5009732	Argument	type		5009669	0					
ANR	5009733	Identifier	type		5009669	0					
ANR	5009734	ReturnType	R_API void		5009669	1					
ANR	5009735	Identifier	r_parse_ctype_type_free		5009669	2					
ANR	5009736	ParameterList	RParseCTypeType * type		5009669	3					
ANR	5009737	Parameter	RParseCTypeType * type	238:35:6315:6335	5009669	0	True				
ANR	5009738	ParameterType	RParseCTypeType *		5009669	0					
ANR	5009739	Identifier	type		5009669	1					
ANR	5009740	CFGEntryNode	ENTRY		5009669		True				
ANR	5009741	CFGExitNode	EXIT		5009669		True				
ANR	5009742	Symbol	type -> pointer . type		5009669						
ANR	5009743	Symbol	type -> pointer		5009669						
ANR	5009744	Symbol	type -> kind		5009669						
ANR	5009745	Symbol	* type		5009669						
ANR	5009746	Symbol	type -> array		5009669						
ANR	5009747	Symbol	type		5009669						
ANR	5009748	Symbol	type -> identifier . name		5009669						
ANR	5009749	Symbol	type -> array . type		5009669						
ANR	5009750	Symbol	type -> identifier		5009669						
