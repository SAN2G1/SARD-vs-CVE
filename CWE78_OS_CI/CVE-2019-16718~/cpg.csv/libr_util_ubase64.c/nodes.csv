command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5259563	File	data/converged/CVE-2019-16718~_radare2/libr_util_ubase64.c								
ANR	5259564	DeclStmt									
ANR	5259565	Decl							const char	const char [ ]	cb64
ANR	5259566	DeclStmt									
ANR	5259567	Decl							const char	const char [ ]	cd64
ANR	5259568	Function	local_b64_encode	15:0:435:780							
ANR	5259569	FunctionDef	"local_b64_encode (const ut8 in [ 3 ] , char out [ 4 ] , int len)"		5259568	0					
ANR	5259570	CompoundStatement		15:68:503:780	5259568	0					
ANR	5259571	IfStatement	if ( len < 1 )		5259568	0					
ANR	5259572	Condition	len < 1	16:5:510:516	5259568	0	True				
ANR	5259573	RelationalExpression	len < 1		5259568	0		<			
ANR	5259574	Identifier	len		5259568	0					
ANR	5259575	PrimaryExpression	1		5259568	1					
ANR	5259576	CompoundStatement		2:14:15:15	5259568	1					
ANR	5259577	ReturnStatement	return ;	17:2:523:529	5259568	0	True				
ANR	5259578	ExpressionStatement	out [ 0 ] = cb64 [ in [ 0 ] >> 2 ]	19:1:535:560	5259568	1	True				
ANR	5259579	AssignmentExpression	out [ 0 ] = cb64 [ in [ 0 ] >> 2 ]		5259568	0		=			
ANR	5259580	ArrayIndexing	out [ 0 ]		5259568	0					
ANR	5259581	Identifier	out		5259568	0					
ANR	5259582	PrimaryExpression	0		5259568	1					
ANR	5259583	ArrayIndexing	cb64 [ in [ 0 ] >> 2 ]		5259568	1					
ANR	5259584	Identifier	cb64		5259568	0					
ANR	5259585	ShiftExpression	in [ 0 ] >> 2		5259568	1		>>			
ANR	5259586	ArrayIndexing	in [ 0 ]		5259568	0					
ANR	5259587	Identifier	in		5259568	0					
ANR	5259588	PrimaryExpression	0		5259568	1					
ANR	5259589	PrimaryExpression	2		5259568	1					
ANR	5259590	ExpressionStatement	out [ 1 ] = cb64 [ ( ( in [ 0 ] & 0x03 ) << 4 ) | ( ( len > 1 ) ? ( ( in [ 1 ] & 0xf0 ) >> 4 ) : 0 ) ]	20:1:563:639	5259568	2	True				
ANR	5259591	AssignmentExpression	out [ 1 ] = cb64 [ ( ( in [ 0 ] & 0x03 ) << 4 ) | ( ( len > 1 ) ? ( ( in [ 1 ] & 0xf0 ) >> 4 ) : 0 ) ]		5259568	0		=			
ANR	5259592	ArrayIndexing	out [ 1 ]		5259568	0					
ANR	5259593	Identifier	out		5259568	0					
ANR	5259594	PrimaryExpression	1		5259568	1					
ANR	5259595	ArrayIndexing	cb64 [ ( ( in [ 0 ] & 0x03 ) << 4 ) | ( ( len > 1 ) ? ( ( in [ 1 ] & 0xf0 ) >> 4 ) : 0 ) ]		5259568	1					
ANR	5259596	Identifier	cb64		5259568	0					
ANR	5259597	InclusiveOrExpression	( ( in [ 0 ] & 0x03 ) << 4 ) | ( ( len > 1 ) ? ( ( in [ 1 ] & 0xf0 ) >> 4 ) : 0 )		5259568	1		|			
ANR	5259598	ShiftExpression	( in [ 0 ] & 0x03 ) << 4		5259568	0		<<			
ANR	5259599	BitAndExpression	in [ 0 ] & 0x03		5259568	0		&			
ANR	5259600	ArrayIndexing	in [ 0 ]		5259568	0					
ANR	5259601	Identifier	in		5259568	0					
ANR	5259602	PrimaryExpression	0		5259568	1					
ANR	5259603	PrimaryExpression	0x03		5259568	1					
ANR	5259604	PrimaryExpression	4		5259568	1					
ANR	5259605	ConditionalExpression	( len > 1 ) ? ( ( in [ 1 ] & 0xf0 ) >> 4 ) : 0		5259568	1					
ANR	5259606	Condition	len > 1		5259568	0					
ANR	5259607	RelationalExpression	len > 1		5259568	0		>			
ANR	5259608	Identifier	len		5259568	0					
ANR	5259609	PrimaryExpression	1		5259568	1					
ANR	5259610	ShiftExpression	( in [ 1 ] & 0xf0 ) >> 4		5259568	1		>>			
ANR	5259611	BitAndExpression	in [ 1 ] & 0xf0		5259568	0		&			
ANR	5259612	ArrayIndexing	in [ 1 ]		5259568	0					
ANR	5259613	Identifier	in		5259568	0					
ANR	5259614	PrimaryExpression	1		5259568	1					
ANR	5259615	PrimaryExpression	0xf0		5259568	1					
ANR	5259616	PrimaryExpression	4		5259568	1					
ANR	5259617	PrimaryExpression	0		5259568	2					
ANR	5259618	ExpressionStatement	out [ 2 ] = ( len > 1 ? cb64 [ ( ( in [ 1 ] & 0x0f ) << 2 ) | ( len > 2 ? ( ( in [ 2 ] & 0xc0 ) >> 6 ) : 0 ) ] : '=' )	21:1:642:732	5259568	3	True				
ANR	5259619	AssignmentExpression	out [ 2 ] = ( len > 1 ? cb64 [ ( ( in [ 1 ] & 0x0f ) << 2 ) | ( len > 2 ? ( ( in [ 2 ] & 0xc0 ) >> 6 ) : 0 ) ] : '=' )		5259568	0		=			
ANR	5259620	ArrayIndexing	out [ 2 ]		5259568	0					
ANR	5259621	Identifier	out		5259568	0					
ANR	5259622	PrimaryExpression	2		5259568	1					
ANR	5259623	ConditionalExpression	len > 1 ? cb64 [ ( ( in [ 1 ] & 0x0f ) << 2 ) | ( len > 2 ? ( ( in [ 2 ] & 0xc0 ) >> 6 ) : 0 ) ] : '='		5259568	1					
ANR	5259624	Condition	len > 1		5259568	0					
ANR	5259625	RelationalExpression	len > 1		5259568	0		>			
ANR	5259626	Identifier	len		5259568	0					
ANR	5259627	PrimaryExpression	1		5259568	1					
ANR	5259628	ArrayIndexing	cb64 [ ( ( in [ 1 ] & 0x0f ) << 2 ) | ( len > 2 ? ( ( in [ 2 ] & 0xc0 ) >> 6 ) : 0 ) ]		5259568	1					
ANR	5259629	Identifier	cb64		5259568	0					
ANR	5259630	InclusiveOrExpression	( ( in [ 1 ] & 0x0f ) << 2 ) | ( len > 2 ? ( ( in [ 2 ] & 0xc0 ) >> 6 ) : 0 )		5259568	1		|			
ANR	5259631	ShiftExpression	( in [ 1 ] & 0x0f ) << 2		5259568	0		<<			
ANR	5259632	BitAndExpression	in [ 1 ] & 0x0f		5259568	0		&			
ANR	5259633	ArrayIndexing	in [ 1 ]		5259568	0					
ANR	5259634	Identifier	in		5259568	0					
ANR	5259635	PrimaryExpression	1		5259568	1					
ANR	5259636	PrimaryExpression	0x0f		5259568	1					
ANR	5259637	PrimaryExpression	2		5259568	1					
ANR	5259638	ConditionalExpression	len > 2 ? ( ( in [ 2 ] & 0xc0 ) >> 6 ) : 0		5259568	1					
ANR	5259639	Condition	len > 2		5259568	0					
ANR	5259640	RelationalExpression	len > 2		5259568	0		>			
ANR	5259641	Identifier	len		5259568	0					
ANR	5259642	PrimaryExpression	2		5259568	1					
ANR	5259643	ShiftExpression	( in [ 2 ] & 0xc0 ) >> 6		5259568	1		>>			
ANR	5259644	BitAndExpression	in [ 2 ] & 0xc0		5259568	0		&			
ANR	5259645	ArrayIndexing	in [ 2 ]		5259568	0					
ANR	5259646	Identifier	in		5259568	0					
ANR	5259647	PrimaryExpression	2		5259568	1					
ANR	5259648	PrimaryExpression	0xc0		5259568	1					
ANR	5259649	PrimaryExpression	6		5259568	1					
ANR	5259650	PrimaryExpression	0		5259568	2					
ANR	5259651	PrimaryExpression	'='		5259568	2					
ANR	5259652	ExpressionStatement	out [ 3 ] = ( len > 2 ? cb64 [ in [ 2 ] & 0x3f ] : '=' )	22:1:735:778	5259568	4	True				
ANR	5259653	AssignmentExpression	out [ 3 ] = ( len > 2 ? cb64 [ in [ 2 ] & 0x3f ] : '=' )		5259568	0		=			
ANR	5259654	ArrayIndexing	out [ 3 ]		5259568	0					
ANR	5259655	Identifier	out		5259568	0					
ANR	5259656	PrimaryExpression	3		5259568	1					
ANR	5259657	ConditionalExpression	len > 2 ? cb64 [ in [ 2 ] & 0x3f ] : '='		5259568	1					
ANR	5259658	Condition	len > 2		5259568	0					
ANR	5259659	RelationalExpression	len > 2		5259568	0		>			
ANR	5259660	Identifier	len		5259568	0					
ANR	5259661	PrimaryExpression	2		5259568	1					
ANR	5259662	ArrayIndexing	cb64 [ in [ 2 ] & 0x3f ]		5259568	1					
ANR	5259663	Identifier	cb64		5259568	0					
ANR	5259664	BitAndExpression	in [ 2 ] & 0x3f		5259568	1		&			
ANR	5259665	ArrayIndexing	in [ 2 ]		5259568	0					
ANR	5259666	Identifier	in		5259568	0					
ANR	5259667	PrimaryExpression	2		5259568	1					
ANR	5259668	PrimaryExpression	0x3f		5259568	1					
ANR	5259669	PrimaryExpression	'='		5259568	2					
ANR	5259670	ReturnType	static void		5259568	1					
ANR	5259671	Identifier	local_b64_encode		5259568	2					
ANR	5259672	ParameterList	"const ut8 in [ 3 ] , char out [ 4 ] , int len"		5259568	3					
ANR	5259673	Parameter	const ut8 in [ 3 ]	15:29:464:478	5259568	0	True				
ANR	5259674	ParameterType	const ut8 [ 3 ]		5259568	0					
ANR	5259675	Identifier	in		5259568	1					
ANR	5259676	Parameter	char out [ 4 ]	15:46:481:491	5259568	1	True				
ANR	5259677	ParameterType	char [ 4 ]		5259568	0					
ANR	5259678	Identifier	out		5259568	1					
ANR	5259679	Parameter	int len	15:59:494:500	5259568	2	True				
ANR	5259680	ParameterType	int		5259568	0					
ANR	5259681	Identifier	len		5259568	1					
ANR	5259682	CFGEntryNode	ENTRY		5259568		True				
ANR	5259683	CFGExitNode	EXIT		5259568		True				
ANR	5259684	Symbol	* * in		5259568						
ANR	5259685	Symbol	cb64		5259568						
ANR	5259686	Symbol	len		5259568						
ANR	5259687	Symbol	in		5259568						
ANR	5259688	Symbol	* in		5259568						
ANR	5259689	Symbol	* out		5259568						
ANR	5259690	Symbol	out		5259568						
ANR	5259691	Symbol	* cb64		5259568						
ANR	5259692	Symbol	* len		5259568						
ANR	5259693	Function	local_b64_decode	25:0:783:1179							
ANR	5259694	FunctionDef	"local_b64_decode (const char in [ 4 ] , ut8 out [ 3 ])"		5259693	0					
ANR	5259695	CompoundStatement		25:58:841:1179	5259693	0					
ANR	5259696	IdentifierDeclStatement	int len = 3 ;	26:1:844:855	5259693	0	True				
ANR	5259697	IdentifierDecl	len = 3		5259693	0					
ANR	5259698	IdentifierDeclType	int		5259693	0					
ANR	5259699	Identifier	len		5259693	1					
ANR	5259700	AssignmentExpression	len = 3		5259693	2		=			
ANR	5259701	Identifier	len		5259693	0					
ANR	5259702	PrimaryExpression	3		5259693	1					
ANR	5259703	IdentifierDeclStatement	"ut8 i , v [ 4 ] = { 0 } ;"	27:1:858:877	5259693	1	True				
ANR	5259704	IdentifierDecl	i		5259693	0					
ANR	5259705	IdentifierDeclType	ut8		5259693	0					
ANR	5259706	Identifier	i		5259693	1					
ANR	5259707	IdentifierDecl	v [ 4 ] = { 0 }		5259693	1					
ANR	5259708	IdentifierDeclType	ut8 [ 4 ]		5259693	0					
ANR	5259709	Identifier	v		5259693	1					
ANR	5259710	PrimaryExpression	4		5259693	2					
ANR	5259711	AssignmentExpression	v [ 4 ] = { 0 }		5259693	3		=			
ANR	5259712	Identifier	v		5259693	0					
ANR	5259713	InitializerList	0		5259693	1					
ANR	5259714	PrimaryExpression	0		5259693	0					
ANR	5259715	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		5259693	2					
ANR	5259716	ForInit	i = 0 ;	28:6:885:890	5259693	0	True				
ANR	5259717	AssignmentExpression	i = 0		5259693	0		=			
ANR	5259718	Identifier	i		5259693	0					
ANR	5259719	PrimaryExpression	0		5259693	1					
ANR	5259720	Condition	i < 4	28:13:892:896	5259693	1	True				
ANR	5259721	RelationalExpression	i < 4		5259693	0		<			
ANR	5259722	Identifier	i		5259693	0					
ANR	5259723	PrimaryExpression	4		5259693	1					
ANR	5259724	PostIncDecOperationExpression	i ++	28:20:899:901	5259693	2	True				
ANR	5259725	Identifier	i		5259693	0					
ANR	5259726	IncDec	++		5259693	1					
ANR	5259727	CompoundStatement		4:25:62:62	5259693	3					
ANR	5259728	IfStatement	if ( in [ i ] < 43 || in [ i ] > 122 )		5259693	0					
ANR	5259729	Condition	in [ i ] < 43 || in [ i ] > 122	29:6:912:936	5259693	0	True				
ANR	5259730	OrExpression	in [ i ] < 43 || in [ i ] > 122		5259693	0		||			
ANR	5259731	RelationalExpression	in [ i ] < 43		5259693	0		<			
ANR	5259732	ArrayIndexing	in [ i ]		5259693	0					
ANR	5259733	Identifier	in		5259693	0					
ANR	5259734	Identifier	i		5259693	1					
ANR	5259735	PrimaryExpression	43		5259693	1					
ANR	5259736	RelationalExpression	in [ i ] > 122		5259693	1		>			
ANR	5259737	ArrayIndexing	in [ i ]		5259693	0					
ANR	5259738	Identifier	in		5259693	0					
ANR	5259739	Identifier	i		5259693	1					
ANR	5259740	PrimaryExpression	122		5259693	1					
ANR	5259741	CompoundStatement		5:33:97:97	5259693	1					
ANR	5259742	ReturnStatement	return - 1 ;	30:3:944:953	5259693	0	True				
ANR	5259743	UnaryOperationExpression	- 1		5259693	0					
ANR	5259744	UnaryOperator	-		5259693	0					
ANR	5259745	PrimaryExpression	1		5259693	1					
ANR	5259746	ExpressionStatement	v [ i ] = cd64 [ in [ i ] - 43 ]	32:2:961:984	5259693	1	True				
ANR	5259747	AssignmentExpression	v [ i ] = cd64 [ in [ i ] - 43 ]		5259693	0		=			
ANR	5259748	ArrayIndexing	v [ i ]		5259693	0					
ANR	5259749	Identifier	v		5259693	0					
ANR	5259750	Identifier	i		5259693	1					
ANR	5259751	ArrayIndexing	cd64 [ in [ i ] - 43 ]		5259693	1					
ANR	5259752	Identifier	cd64		5259693	0					
ANR	5259753	AdditiveExpression	in [ i ] - 43		5259693	1		-			
ANR	5259754	ArrayIndexing	in [ i ]		5259693	0					
ANR	5259755	Identifier	in		5259693	0					
ANR	5259756	Identifier	i		5259693	1					
ANR	5259757	PrimaryExpression	43		5259693	1					
ANR	5259758	IfStatement	if ( v [ i ] == '$' )		5259693	2					
ANR	5259759	Condition	v [ i ] == '$'	33:6:992:1002	5259693	0	True				
ANR	5259760	EqualityExpression	v [ i ] == '$'		5259693	0		==			
ANR	5259761	ArrayIndexing	v [ i ]		5259693	0					
ANR	5259762	Identifier	v		5259693	0					
ANR	5259763	Identifier	i		5259693	1					
ANR	5259764	PrimaryExpression	'$'		5259693	1					
ANR	5259765	CompoundStatement		9:19:163:163	5259693	1					
ANR	5259766	ExpressionStatement	len = i ? i - 1 : - 1	34:3:1010:1028	5259693	0	True				
ANR	5259767	AssignmentExpression	len = i ? i - 1 : - 1		5259693	0		=			
ANR	5259768	Identifier	len		5259693	0					
ANR	5259769	ConditionalExpression	i ? i - 1 : - 1		5259693	1					
ANR	5259770	Condition	i		5259693	0					
ANR	5259771	Identifier	i		5259693	0					
ANR	5259772	AdditiveExpression	i - 1		5259693	1		-			
ANR	5259773	Identifier	i		5259693	0					
ANR	5259774	PrimaryExpression	1		5259693	1					
ANR	5259775	UnaryOperationExpression	- 1		5259693	2					
ANR	5259776	UnaryOperator	-		5259693	0					
ANR	5259777	PrimaryExpression	1		5259693	1					
ANR	5259778	BreakStatement	break ;	35:3:1033:1038	5259693	1	True				
ANR	5259779	ExpressionStatement	v [ i ] -= 62	37:2:1046:1056	5259693	3	True				
ANR	5259780	AssignmentExpression	v [ i ] -= 62		5259693	0		-=			
ANR	5259781	ArrayIndexing	v [ i ]		5259693	0					
ANR	5259782	Identifier	v		5259693	0					
ANR	5259783	Identifier	i		5259693	1					
ANR	5259784	PrimaryExpression	62		5259693	1					
ANR	5259785	ExpressionStatement	out [ 0 ] = v [ 0 ] << 2 | v [ 1 ] >> 4	39:1:1062:1092	5259693	3	True				
ANR	5259786	AssignmentExpression	out [ 0 ] = v [ 0 ] << 2 | v [ 1 ] >> 4		5259693	0		=			
ANR	5259787	ArrayIndexing	out [ 0 ]		5259693	0					
ANR	5259788	Identifier	out		5259693	0					
ANR	5259789	PrimaryExpression	0		5259693	1					
ANR	5259790	InclusiveOrExpression	v [ 0 ] << 2 | v [ 1 ] >> 4		5259693	1		|			
ANR	5259791	ShiftExpression	v [ 0 ] << 2		5259693	0		<<			
ANR	5259792	ArrayIndexing	v [ 0 ]		5259693	0					
ANR	5259793	Identifier	v		5259693	0					
ANR	5259794	PrimaryExpression	0		5259693	1					
ANR	5259795	PrimaryExpression	2		5259693	1					
ANR	5259796	ShiftExpression	v [ 1 ] >> 4		5259693	1		>>			
ANR	5259797	ArrayIndexing	v [ 1 ]		5259693	0					
ANR	5259798	Identifier	v		5259693	0					
ANR	5259799	PrimaryExpression	1		5259693	1					
ANR	5259800	PrimaryExpression	4		5259693	1					
ANR	5259801	ExpressionStatement	out [ 1 ] = v [ 1 ] << 4 | v [ 2 ] >> 2	40:1:1095:1125	5259693	4	True				
ANR	5259802	AssignmentExpression	out [ 1 ] = v [ 1 ] << 4 | v [ 2 ] >> 2		5259693	0		=			
ANR	5259803	ArrayIndexing	out [ 1 ]		5259693	0					
ANR	5259804	Identifier	out		5259693	0					
ANR	5259805	PrimaryExpression	1		5259693	1					
ANR	5259806	InclusiveOrExpression	v [ 1 ] << 4 | v [ 2 ] >> 2		5259693	1		|			
ANR	5259807	ShiftExpression	v [ 1 ] << 4		5259693	0		<<			
ANR	5259808	ArrayIndexing	v [ 1 ]		5259693	0					
ANR	5259809	Identifier	v		5259693	0					
ANR	5259810	PrimaryExpression	1		5259693	1					
ANR	5259811	PrimaryExpression	4		5259693	1					
ANR	5259812	ShiftExpression	v [ 2 ] >> 2		5259693	1		>>			
ANR	5259813	ArrayIndexing	v [ 2 ]		5259693	0					
ANR	5259814	Identifier	v		5259693	0					
ANR	5259815	PrimaryExpression	2		5259693	1					
ANR	5259816	PrimaryExpression	2		5259693	1					
ANR	5259817	ExpressionStatement	out [ 2 ] = ( ( v [ 2 ] << 6 ) & 0xc0 ) | v [ 3 ]	41:1:1128:1164	5259693	5	True				
ANR	5259818	AssignmentExpression	out [ 2 ] = ( ( v [ 2 ] << 6 ) & 0xc0 ) | v [ 3 ]		5259693	0		=			
ANR	5259819	ArrayIndexing	out [ 2 ]		5259693	0					
ANR	5259820	Identifier	out		5259693	0					
ANR	5259821	PrimaryExpression	2		5259693	1					
ANR	5259822	InclusiveOrExpression	( ( v [ 2 ] << 6 ) & 0xc0 ) | v [ 3 ]		5259693	1		|			
ANR	5259823	BitAndExpression	( v [ 2 ] << 6 ) & 0xc0		5259693	0		&			
ANR	5259824	ShiftExpression	v [ 2 ] << 6		5259693	0		<<			
ANR	5259825	ArrayIndexing	v [ 2 ]		5259693	0					
ANR	5259826	Identifier	v		5259693	0					
ANR	5259827	PrimaryExpression	2		5259693	1					
ANR	5259828	PrimaryExpression	6		5259693	1					
ANR	5259829	PrimaryExpression	0xc0		5259693	1					
ANR	5259830	ArrayIndexing	v [ 3 ]		5259693	1					
ANR	5259831	Identifier	v		5259693	0					
ANR	5259832	PrimaryExpression	3		5259693	1					
ANR	5259833	ReturnStatement	return len ;	42:1:1167:1177	5259693	6	True				
ANR	5259834	Identifier	len		5259693	0					
ANR	5259835	ReturnType	static int		5259693	1					
ANR	5259836	Identifier	local_b64_decode		5259693	2					
ANR	5259837	ParameterList	"const char in [ 4 ] , ut8 out [ 3 ]"		5259693	3					
ANR	5259838	Parameter	const char in [ 4 ]	25:28:811:826	5259693	0	True				
ANR	5259839	ParameterType	const char [ 4 ]		5259693	0					
ANR	5259840	Identifier	in		5259693	1					
ANR	5259841	Parameter	ut8 out [ 3 ]	25:46:829:838	5259693	1	True				
ANR	5259842	ParameterType	ut8 [ 3 ]		5259693	0					
ANR	5259843	Identifier	out		5259693	1					
ANR	5259844	CFGEntryNode	ENTRY		5259693		True				
ANR	5259845	CFGExitNode	EXIT		5259693		True				
ANR	5259846	Symbol	* v		5259693						
ANR	5259847	Symbol	* * i		5259693						
ANR	5259848	Symbol	in		5259693						
ANR	5259849	Symbol	* in		5259693						
ANR	5259850	Symbol	i		5259693						
ANR	5259851	Symbol	* cd64		5259693						
ANR	5259852	Symbol	out		5259693						
ANR	5259853	Symbol	cd64		5259693						
ANR	5259854	Symbol	* i		5259693						
ANR	5259855	Symbol	* * in		5259693						
ANR	5259856	Symbol	len		5259693						
ANR	5259857	Symbol	v		5259693						
ANR	5259858	Symbol	* out		5259693						
ANR	5259859	Function	r_base64_decode	45:0:1182:1547							
ANR	5259860	FunctionDef	"r_base64_decode (ut8 * bout , const char * bin , int len)"		5259859	0					
ANR	5259861	CompoundStatement		45:63:1245:1547	5259859	0					
ANR	5259862	IdentifierDeclStatement	"int in , out ;"	46:1:1248:1259	5259859	0	True				
ANR	5259863	IdentifierDecl	in		5259859	0					
ANR	5259864	IdentifierDeclType	int		5259859	0					
ANR	5259865	Identifier	in		5259859	1					
ANR	5259866	IdentifierDecl	out		5259859	1					
ANR	5259867	IdentifierDeclType	int		5259859	0					
ANR	5259868	Identifier	out		5259859	1					
ANR	5259869	IfStatement	if ( len < 0 )		5259859	1					
ANR	5259870	Condition	len < 0	47:5:1266:1272	5259859	0	True				
ANR	5259871	RelationalExpression	len < 0		5259859	0		<			
ANR	5259872	Identifier	len		5259859	0					
ANR	5259873	PrimaryExpression	0		5259859	1					
ANR	5259874	CompoundStatement		3:14:29:29	5259859	1					
ANR	5259875	ExpressionStatement	len = strlen ( bin )	48:2:1279:1297	5259859	0	True				
ANR	5259876	AssignmentExpression	len = strlen ( bin )		5259859	0		=			
ANR	5259877	Identifier	len		5259859	0					
ANR	5259878	CallExpression	strlen ( bin )		5259859	1					
ANR	5259879	Callee	strlen		5259859	0					
ANR	5259880	Identifier	strlen		5259859	0					
ANR	5259881	ArgumentList	bin		5259859	1					
ANR	5259882	Argument	bin		5259859	0					
ANR	5259883	Identifier	bin		5259859	0					
ANR	5259884	ForStatement	for ( in = out = 0 ; in + 3 < len ; in += 4 )		5259859	2					
ANR	5259885	ForInit	in = out = 0 ;	50:6:1308:1320	5259859	0	True				
ANR	5259886	AssignmentExpression	in = out = 0		5259859	0		=			
ANR	5259887	Identifier	in		5259859	0					
ANR	5259888	AssignmentExpression	out = 0		5259859	1		=			
ANR	5259889	Identifier	out		5259859	0					
ANR	5259890	PrimaryExpression	0		5259859	1					
ANR	5259891	Condition	in + 3 < len	50:20:1322:1333	5259859	1	True				
ANR	5259892	RelationalExpression	in + 3 < len		5259859	0		<			
ANR	5259893	AdditiveExpression	in + 3		5259859	0		+			
ANR	5259894	Identifier	in		5259859	0					
ANR	5259895	PrimaryExpression	3		5259859	1					
ANR	5259896	Identifier	len		5259859	1					
ANR	5259897	AssignmentExpression	in += 4	50:34:1336:1342	5259859	2	True	+=			
ANR	5259898	Identifier	in		5259859	0					
ANR	5259899	PrimaryExpression	4		5259859	1					
ANR	5259900	CompoundStatement		7:2:103:152	5259859	3					
ANR	5259901	IdentifierDeclStatement	"int ret = local_b64_decode ( bin + in , bout + out ) ;"	51:2:1349:1398	5259859	0	True				
ANR	5259902	IdentifierDecl	"ret = local_b64_decode ( bin + in , bout + out )"		5259859	0					
ANR	5259903	IdentifierDeclType	int		5259859	0					
ANR	5259904	Identifier	ret		5259859	1					
ANR	5259905	AssignmentExpression	"ret = local_b64_decode ( bin + in , bout + out )"		5259859	2		=			
ANR	5259906	Identifier	ret		5259859	0					
ANR	5259907	CallExpression	"local_b64_decode ( bin + in , bout + out )"		5259859	1					
ANR	5259908	Callee	local_b64_decode		5259859	0					
ANR	5259909	Identifier	local_b64_decode		5259859	0					
ANR	5259910	ArgumentList	bin + in		5259859	1					
ANR	5259911	Argument	bin + in		5259859	0					
ANR	5259912	AdditiveExpression	bin + in		5259859	0		+			
ANR	5259913	Identifier	bin		5259859	0					
ANR	5259914	Identifier	in		5259859	1					
ANR	5259915	Argument	bout + out		5259859	1					
ANR	5259916	AdditiveExpression	bout + out		5259859	0		+			
ANR	5259917	Identifier	bout		5259859	0					
ANR	5259918	Identifier	out		5259859	1					
ANR	5259919	IfStatement	if ( ret < 1 )		5259859	1					
ANR	5259920	Condition	ret < 1	52:6:1406:1412	5259859	0	True				
ANR	5259921	RelationalExpression	ret < 1		5259859	0		<			
ANR	5259922	Identifier	ret		5259859	0					
ANR	5259923	PrimaryExpression	1		5259859	1					
ANR	5259924	CompoundStatement		8:15:169:169	5259859	1					
ANR	5259925	ReturnStatement	return - 1 ;	53:3:1420:1429	5259859	0	True				
ANR	5259926	UnaryOperationExpression	- 1		5259859	0					
ANR	5259927	UnaryOperator	-		5259859	0					
ANR	5259928	PrimaryExpression	1		5259859	1					
ANR	5259929	ExpressionStatement	out += ret	55:2:1437:1447	5259859	2	True				
ANR	5259930	AssignmentExpression	out += ret		5259859	0		+=			
ANR	5259931	Identifier	out		5259859	0					
ANR	5259932	Identifier	ret		5259859	1					
ANR	5259933	ExpressionStatement	bout [ out ] = 0	57:1:1453:1466	5259859	3	True				
ANR	5259934	AssignmentExpression	bout [ out ] = 0		5259859	0		=			
ANR	5259935	ArrayIndexing	bout [ out ]		5259859	0					
ANR	5259936	Identifier	bout		5259859	0					
ANR	5259937	Identifier	out		5259859	1					
ANR	5259938	PrimaryExpression	0		5259859	1					
ANR	5259939	ReturnStatement	return ( in != out ) ? out : - 1 ;	59:1:1518:1545	5259859	4	True				
ANR	5259940	ConditionalExpression	( in != out ) ? out : - 1		5259859	0					
ANR	5259941	Condition	in != out		5259859	0					
ANR	5259942	EqualityExpression	in != out		5259859	0		!=			
ANR	5259943	Identifier	in		5259859	0					
ANR	5259944	Identifier	out		5259859	1					
ANR	5259945	Identifier	out		5259859	1					
ANR	5259946	UnaryOperationExpression	- 1		5259859	2					
ANR	5259947	UnaryOperator	-		5259859	0					
ANR	5259948	PrimaryExpression	1		5259859	1					
ANR	5259949	ReturnType	R_API int		5259859	1					
ANR	5259950	Identifier	r_base64_decode		5259859	2					
ANR	5259951	ParameterList	"ut8 * bout , const char * bin , int len"		5259859	3					
ANR	5259952	Parameter	ut8 * bout	45:26:1208:1216	5259859	0	True				
ANR	5259953	ParameterType	ut8 *		5259859	0					
ANR	5259954	Identifier	bout		5259859	1					
ANR	5259955	Parameter	const char * bin	45:37:1219:1233	5259859	1	True				
ANR	5259956	ParameterType	const char *		5259859	0					
ANR	5259957	Identifier	bin		5259859	1					
ANR	5259958	Parameter	int len	45:54:1236:1242	5259859	2	True				
ANR	5259959	ParameterType	int		5259859	0					
ANR	5259960	Identifier	len		5259859	1					
ANR	5259961	CFGEntryNode	ENTRY		5259859		True				
ANR	5259962	CFGExitNode	EXIT		5259859		True				
ANR	5259963	Symbol	ret		5259859						
ANR	5259964	Symbol	strlen		5259859						
ANR	5259965	Symbol	bout		5259859						
ANR	5259966	Symbol	local_b64_decode		5259859						
ANR	5259967	Symbol	len		5259859						
ANR	5259968	Symbol	in		5259859						
ANR	5259969	Symbol	bin		5259859						
ANR	5259970	Symbol	* out		5259859						
ANR	5259971	Symbol	* bout		5259859						
ANR	5259972	Symbol	out		5259859						
ANR	5259973	Function	r_base64_decode_dyn	62:0:1550:1816							
ANR	5259974	FunctionDef	"r_base64_decode_dyn (const char * in , int len)"		5259973	0					
ANR	5259975	CompoundStatement		62:56:1606:1816	5259973	0					
ANR	5259976	IdentifierDeclStatement	ut8 * bout ;	63:1:1609:1618	5259973	0	True				
ANR	5259977	IdentifierDecl	* bout		5259973	0					
ANR	5259978	IdentifierDeclType	ut8 *		5259973	0					
ANR	5259979	Identifier	bout		5259973	1					
ANR	5259980	IfStatement	if ( ! in )		5259973	1					
ANR	5259981	Condition	! in	64:5:1625:1627	5259973	0	True				
ANR	5259982	UnaryOperationExpression	! in		5259973	0					
ANR	5259983	UnaryOperator	!		5259973	0					
ANR	5259984	Identifier	in		5259973	1					
ANR	5259985	CompoundStatement		3:10:23:23	5259973	1					
ANR	5259986	ReturnStatement	return NULL ;	65:2:1634:1645	5259973	0	True				
ANR	5259987	Identifier	NULL		5259973	0					
ANR	5259988	IfStatement	if ( len < 0 )		5259973	2					
ANR	5259989	Condition	len < 0	67:5:1655:1661	5259973	0	True				
ANR	5259990	RelationalExpression	len < 0		5259973	0		<			
ANR	5259991	Identifier	len		5259973	0					
ANR	5259992	PrimaryExpression	0		5259973	1					
ANR	5259993	CompoundStatement		6:14:57:57	5259973	1					
ANR	5259994	ExpressionStatement	len = strlen ( in ) + 1	68:2:1668:1689	5259973	0	True				
ANR	5259995	AssignmentExpression	len = strlen ( in ) + 1		5259973	0		=			
ANR	5259996	Identifier	len		5259973	0					
ANR	5259997	AdditiveExpression	strlen ( in ) + 1		5259973	1		+			
ANR	5259998	CallExpression	strlen ( in )		5259973	0					
ANR	5259999	Callee	strlen		5259973	0					
ANR	5260000	Identifier	strlen		5259973	0					
ANR	5260001	ArgumentList	in		5259973	1					
ANR	5260002	Argument	in		5259973	0					
ANR	5260003	Identifier	in		5259973	0					
ANR	5260004	PrimaryExpression	1		5259973	1					
ANR	5260005	ExpressionStatement	"bout = calloc ( 4 , len + 1 )"	70:1:1695:1721	5259973	3	True				
ANR	5260006	AssignmentExpression	"bout = calloc ( 4 , len + 1 )"		5259973	0		=			
ANR	5260007	Identifier	bout		5259973	0					
ANR	5260008	CallExpression	"calloc ( 4 , len + 1 )"		5259973	1					
ANR	5260009	Callee	calloc		5259973	0					
ANR	5260010	Identifier	calloc		5259973	0					
ANR	5260011	ArgumentList	4		5259973	1					
ANR	5260012	Argument	4		5259973	0					
ANR	5260013	PrimaryExpression	4		5259973	0					
ANR	5260014	Argument	len + 1		5259973	1					
ANR	5260015	AdditiveExpression	len + 1		5259973	0		+			
ANR	5260016	Identifier	len		5259973	0					
ANR	5260017	PrimaryExpression	1		5259973	1					
ANR	5260018	IfStatement	"if ( r_base64_decode ( bout , in , len ) == - 1 )"		5259973	4					
ANR	5260019	Condition	"r_base64_decode ( bout , in , len ) == - 1"	71:5:1728:1764	5259973	0	True				
ANR	5260020	EqualityExpression	"r_base64_decode ( bout , in , len ) == - 1"		5259973	0		==			
ANR	5260021	CallExpression	"r_base64_decode ( bout , in , len )"		5259973	0					
ANR	5260022	Callee	r_base64_decode		5259973	0					
ANR	5260023	Identifier	r_base64_decode		5259973	0					
ANR	5260024	ArgumentList	bout		5259973	1					
ANR	5260025	Argument	bout		5259973	0					
ANR	5260026	Identifier	bout		5259973	0					
ANR	5260027	Argument	in		5259973	1					
ANR	5260028	Identifier	in		5259973	0					
ANR	5260029	Argument	len		5259973	2					
ANR	5260030	Identifier	len		5259973	0					
ANR	5260031	UnaryOperationExpression	- 1		5259973	1					
ANR	5260032	UnaryOperator	-		5259973	0					
ANR	5260033	PrimaryExpression	1		5259973	1					
ANR	5260034	CompoundStatement		10:44:160:160	5259973	1					
ANR	5260035	ExpressionStatement	free ( bout )	72:2:1771:1782	5259973	0	True				
ANR	5260036	CallExpression	free ( bout )		5259973	0					
ANR	5260037	Callee	free		5259973	0					
ANR	5260038	Identifier	free		5259973	0					
ANR	5260039	ArgumentList	bout		5259973	1					
ANR	5260040	Argument	bout		5259973	0					
ANR	5260041	Identifier	bout		5259973	0					
ANR	5260042	ReturnStatement	return NULL ;	73:2:1786:1797	5259973	1	True				
ANR	5260043	Identifier	NULL		5259973	0					
ANR	5260044	ReturnStatement	return bout ;	75:1:1803:1814	5259973	5	True				
ANR	5260045	Identifier	bout		5259973	0					
ANR	5260046	ReturnType	R_API ut8 *		5259973	1					
ANR	5260047	Identifier	r_base64_decode_dyn		5259973	2					
ANR	5260048	ParameterList	"const char * in , int len"		5259973	3					
ANR	5260049	Parameter	const char * in	62:31:1581:1594	5259973	0	True				
ANR	5260050	ParameterType	const char *		5259973	0					
ANR	5260051	Identifier	in		5259973	1					
ANR	5260052	Parameter	int len	62:47:1597:1603	5259973	1	True				
ANR	5260053	ParameterType	int		5259973	0					
ANR	5260054	Identifier	len		5259973	1					
ANR	5260055	CFGEntryNode	ENTRY		5259973		True				
ANR	5260056	CFGExitNode	EXIT		5259973		True				
ANR	5260057	Symbol	strlen		5259973						
ANR	5260058	Symbol	r_base64_decode		5259973						
ANR	5260059	Symbol	bout		5259973						
ANR	5260060	Symbol	NULL		5259973						
ANR	5260061	Symbol	len		5259973						
ANR	5260062	Symbol	in		5259973						
ANR	5260063	Symbol	calloc		5259973						
ANR	5260064	Function	r_base64_encode	78:0:1819:2121							
ANR	5260065	FunctionDef	"r_base64_encode (char * bout , const ut8 * bin , int len)"		5260064	0					
ANR	5260066	CompoundStatement		78:63:1882:2121	5260064	0					
ANR	5260067	IdentifierDeclStatement	"int in , out ;"	79:1:1885:1896	5260064	0	True				
ANR	5260068	IdentifierDecl	in		5260064	0					
ANR	5260069	IdentifierDeclType	int		5260064	0					
ANR	5260070	Identifier	in		5260064	1					
ANR	5260071	IdentifierDecl	out		5260064	1					
ANR	5260072	IdentifierDeclType	int		5260064	0					
ANR	5260073	Identifier	out		5260064	1					
ANR	5260074	IfStatement	if ( len < 0 )		5260064	1					
ANR	5260075	Condition	len < 0	80:5:1903:1909	5260064	0	True				
ANR	5260076	RelationalExpression	len < 0		5260064	0		<			
ANR	5260077	Identifier	len		5260064	0					
ANR	5260078	PrimaryExpression	0		5260064	1					
ANR	5260079	CompoundStatement		3:14:29:29	5260064	1					
ANR	5260080	ExpressionStatement	len = strlen ( ( const char * ) bin )	81:2:1916:1948	5260064	0	True				
ANR	5260081	AssignmentExpression	len = strlen ( ( const char * ) bin )		5260064	0		=			
ANR	5260082	Identifier	len		5260064	0					
ANR	5260083	CallExpression	strlen ( ( const char * ) bin )		5260064	1					
ANR	5260084	Callee	strlen		5260064	0					
ANR	5260085	Identifier	strlen		5260064	0					
ANR	5260086	ArgumentList	( const char * ) bin		5260064	1					
ANR	5260087	Argument	( const char * ) bin		5260064	0					
ANR	5260088	CastExpression	( const char * ) bin		5260064	0					
ANR	5260089	CastTarget	const char *		5260064	0					
ANR	5260090	Identifier	bin		5260064	1					
ANR	5260091	ForStatement	"for ( in = out = 0 ; in < len ; in += 3 , out += 4 )"		5260064	2					
ANR	5260092	ForInit	in = out = 0 ;	83:6:1959:1971	5260064	0	True				
ANR	5260093	AssignmentExpression	in = out = 0		5260064	0		=			
ANR	5260094	Identifier	in		5260064	0					
ANR	5260095	AssignmentExpression	out = 0		5260064	1		=			
ANR	5260096	Identifier	out		5260064	0					
ANR	5260097	PrimaryExpression	0		5260064	1					
ANR	5260098	Condition	in < len	83:20:1973:1980	5260064	1	True				
ANR	5260099	RelationalExpression	in < len		5260064	0		<			
ANR	5260100	Identifier	in		5260064	0					
ANR	5260101	Identifier	len		5260064	1					
ANR	5260102	Expression	"in += 3 , out += 4"	83:30:1983:1999	5260064	2	True				
ANR	5260103	AssignmentExpression	in += 3		5260064	0		+=			
ANR	5260104	Identifier	in		5260064	0					
ANR	5260105	PrimaryExpression	3		5260064	1					
ANR	5260106	AssignmentExpression	out += 4		5260064	1		+=			
ANR	5260107	Identifier	out		5260064	0					
ANR	5260108	PrimaryExpression	4		5260064	1					
ANR	5260109	CompoundStatement		6:49:119:119	5260064	3					
ANR	5260110	ExpressionStatement	"local_b64_encode ( bin + in , ( char * ) bout + out , ( len - in ) > 3 ? 3 : len - in )"	84:2:2006:2087	5260064	0	True				
ANR	5260111	CallExpression	"local_b64_encode ( bin + in , ( char * ) bout + out , ( len - in ) > 3 ? 3 : len - in )"		5260064	0					
ANR	5260112	Callee	local_b64_encode		5260064	0					
ANR	5260113	Identifier	local_b64_encode		5260064	0					
ANR	5260114	ArgumentList	bin + in		5260064	1					
ANR	5260115	Argument	bin + in		5260064	0					
ANR	5260116	AdditiveExpression	bin + in		5260064	0		+			
ANR	5260117	Identifier	bin		5260064	0					
ANR	5260118	Identifier	in		5260064	1					
ANR	5260119	Argument	( char * ) bout + out		5260064	1					
ANR	5260120	AdditiveExpression	( char * ) bout + out		5260064	0		+			
ANR	5260121	CastExpression	( char * ) bout		5260064	0					
ANR	5260122	CastTarget	char *		5260064	0					
ANR	5260123	Identifier	bout		5260064	1					
ANR	5260124	Identifier	out		5260064	1					
ANR	5260125	Argument	( len - in ) > 3 ? 3 : len - in		5260064	2					
ANR	5260126	ConditionalExpression	( len - in ) > 3 ? 3 : len - in		5260064	0					
ANR	5260127	Condition	( len - in ) > 3		5260064	0					
ANR	5260128	RelationalExpression	( len - in ) > 3		5260064	0		>			
ANR	5260129	AdditiveExpression	len - in		5260064	0		-			
ANR	5260130	Identifier	len		5260064	0					
ANR	5260131	Identifier	in		5260064	1					
ANR	5260132	PrimaryExpression	3		5260064	1					
ANR	5260133	PrimaryExpression	3		5260064	1					
ANR	5260134	AdditiveExpression	len - in		5260064	2		-			
ANR	5260135	Identifier	len		5260064	0					
ANR	5260136	Identifier	in		5260064	1					
ANR	5260137	ExpressionStatement	bout [ out ] = 0	87:1:2093:2106	5260064	3	True				
ANR	5260138	AssignmentExpression	bout [ out ] = 0		5260064	0		=			
ANR	5260139	ArrayIndexing	bout [ out ]		5260064	0					
ANR	5260140	Identifier	bout		5260064	0					
ANR	5260141	Identifier	out		5260064	1					
ANR	5260142	PrimaryExpression	0		5260064	1					
ANR	5260143	ReturnStatement	return out ;	88:1:2109:2119	5260064	4	True				
ANR	5260144	Identifier	out		5260064	0					
ANR	5260145	ReturnType	R_API int		5260064	1					
ANR	5260146	Identifier	r_base64_encode		5260064	2					
ANR	5260147	ParameterList	"char * bout , const ut8 * bin , int len"		5260064	3					
ANR	5260148	Parameter	char * bout	78:26:1845:1854	5260064	0	True				
ANR	5260149	ParameterType	char *		5260064	0					
ANR	5260150	Identifier	bout		5260064	1					
ANR	5260151	Parameter	const ut8 * bin	78:38:1857:1870	5260064	1	True				
ANR	5260152	ParameterType	const ut8 *		5260064	0					
ANR	5260153	Identifier	bin		5260064	1					
ANR	5260154	Parameter	int len	78:54:1873:1879	5260064	2	True				
ANR	5260155	ParameterType	int		5260064	0					
ANR	5260156	Identifier	len		5260064	1					
ANR	5260157	CFGEntryNode	ENTRY		5260064		True				
ANR	5260158	CFGExitNode	EXIT		5260064		True				
ANR	5260159	Symbol	strlen		5260064						
ANR	5260160	Symbol	bout		5260064						
ANR	5260161	Symbol	len		5260064						
ANR	5260162	Symbol	in		5260064						
ANR	5260163	Symbol	bin		5260064						
ANR	5260164	Symbol	* out		5260064						
ANR	5260165	Symbol	* bout		5260064						
ANR	5260166	Symbol	out		5260064						
ANR	5260167	Function	r_base64_encode_dyn	91:0:2124:2598							
ANR	5260168	FunctionDef	"r_base64_encode_dyn (const char * str , int len)"		5260167	0					
ANR	5260169	CompoundStatement		91:58:2182:2598	5260167	0					
ANR	5260170	IdentifierDeclStatement	char * bout ;	92:1:2185:2195	5260167	0	True				
ANR	5260171	IdentifierDecl	* bout		5260167	0					
ANR	5260172	IdentifierDeclType	char *		5260167	0					
ANR	5260173	Identifier	bout		5260167	1					
ANR	5260174	IdentifierDeclStatement	"int in , out ;"	93:1:2198:2209	5260167	1	True				
ANR	5260175	IdentifierDecl	in		5260167	0					
ANR	5260176	IdentifierDeclType	int		5260167	0					
ANR	5260177	Identifier	in		5260167	1					
ANR	5260178	IdentifierDecl	out		5260167	1					
ANR	5260179	IdentifierDeclType	int		5260167	0					
ANR	5260180	Identifier	out		5260167	1					
ANR	5260181	IfStatement	if ( ! str )		5260167	2					
ANR	5260182	Condition	! str	94:5:2216:2219	5260167	0	True				
ANR	5260183	UnaryOperationExpression	! str		5260167	0					
ANR	5260184	UnaryOperator	!		5260167	0					
ANR	5260185	Identifier	str		5260167	1					
ANR	5260186	CompoundStatement		4:11:39:39	5260167	1					
ANR	5260187	ReturnStatement	return NULL ;	95:2:2226:2237	5260167	0	True				
ANR	5260188	Identifier	NULL		5260167	0					
ANR	5260189	IfStatement	if ( len < 0 )		5260167	3					
ANR	5260190	Condition	len < 0	97:5:2247:2253	5260167	0	True				
ANR	5260191	RelationalExpression	len < 0		5260167	0		<			
ANR	5260192	Identifier	len		5260167	0					
ANR	5260193	PrimaryExpression	0		5260167	1					
ANR	5260194	CompoundStatement		7:14:73:73	5260167	1					
ANR	5260195	ExpressionStatement	len = strlen ( str )	98:2:2260:2278	5260167	0	True				
ANR	5260196	AssignmentExpression	len = strlen ( str )		5260167	0		=			
ANR	5260197	Identifier	len		5260167	0					
ANR	5260198	CallExpression	strlen ( str )		5260167	1					
ANR	5260199	Callee	strlen		5260167	0					
ANR	5260200	Identifier	strlen		5260167	0					
ANR	5260201	ArgumentList	str		5260167	1					
ANR	5260202	Argument	str		5260167	0					
ANR	5260203	Identifier	str		5260167	0					
ANR	5260204	IdentifierDeclStatement	const int olen = ( len * 4 ) + 2 ;	100:1:2284:2314	5260167	4	True				
ANR	5260205	IdentifierDecl	olen = ( len * 4 ) + 2		5260167	0					
ANR	5260206	IdentifierDeclType	const int		5260167	0					
ANR	5260207	Identifier	olen		5260167	1					
ANR	5260208	AssignmentExpression	olen = ( len * 4 ) + 2		5260167	2		=			
ANR	5260209	Identifier	olen		5260167	0					
ANR	5260210	AdditiveExpression	( len * 4 ) + 2		5260167	1		+			
ANR	5260211	MultiplicativeExpression	len * 4		5260167	0		*			
ANR	5260212	Identifier	len		5260167	0					
ANR	5260213	PrimaryExpression	4		5260167	1					
ANR	5260214	PrimaryExpression	2		5260167	1					
ANR	5260215	IfStatement	if ( olen < len )		5260167	5					
ANR	5260216	Condition	olen < len	101:5:2321:2330	5260167	0	True				
ANR	5260217	RelationalExpression	olen < len		5260167	0		<			
ANR	5260218	Identifier	olen		5260167	0					
ANR	5260219	Identifier	len		5260167	1					
ANR	5260220	CompoundStatement		11:17:150:150	5260167	1					
ANR	5260221	ReturnStatement	return NULL ;	102:2:2337:2348	5260167	0	True				
ANR	5260222	Identifier	NULL		5260167	0					
ANR	5260223	ExpressionStatement	bout = ( char * ) malloc ( olen )	104:1:2354:2382	5260167	6	True				
ANR	5260224	AssignmentExpression	bout = ( char * ) malloc ( olen )		5260167	0		=			
ANR	5260225	Identifier	bout		5260167	0					
ANR	5260226	CastExpression	( char * ) malloc ( olen )		5260167	1					
ANR	5260227	CastTarget	char *		5260167	0					
ANR	5260228	CallExpression	malloc ( olen )		5260167	1					
ANR	5260229	Callee	malloc		5260167	0					
ANR	5260230	Identifier	malloc		5260167	0					
ANR	5260231	ArgumentList	olen		5260167	1					
ANR	5260232	Argument	olen		5260167	0					
ANR	5260233	Identifier	olen		5260167	0					
ANR	5260234	IfStatement	if ( ! bout )		5260167	7					
ANR	5260235	Condition	! bout	105:5:2389:2393	5260167	0	True				
ANR	5260236	UnaryOperationExpression	! bout		5260167	0					
ANR	5260237	UnaryOperator	!		5260167	0					
ANR	5260238	Identifier	bout		5260167	1					
ANR	5260239	CompoundStatement		15:12:213:213	5260167	1					
ANR	5260240	ReturnStatement	return NULL ;	106:2:2400:2411	5260167	0	True				
ANR	5260241	Identifier	NULL		5260167	0					
ANR	5260242	ForStatement	"for ( in = out = 0 ; in < len ; in += 3 , out += 4 )"		5260167	8					
ANR	5260243	ForInit	in = out = 0 ;	108:6:2422:2434	5260167	0	True				
ANR	5260244	AssignmentExpression	in = out = 0		5260167	0		=			
ANR	5260245	Identifier	in		5260167	0					
ANR	5260246	AssignmentExpression	out = 0		5260167	1		=			
ANR	5260247	Identifier	out		5260167	0					
ANR	5260248	PrimaryExpression	0		5260167	1					
ANR	5260249	Condition	in < len	108:20:2436:2443	5260167	1	True				
ANR	5260250	RelationalExpression	in < len		5260167	0		<			
ANR	5260251	Identifier	in		5260167	0					
ANR	5260252	Identifier	len		5260167	1					
ANR	5260253	Expression	"in += 3 , out += 4"	108:30:2446:2462	5260167	2	True				
ANR	5260254	AssignmentExpression	in += 3		5260167	0		+=			
ANR	5260255	Identifier	in		5260167	0					
ANR	5260256	PrimaryExpression	3		5260167	1					
ANR	5260257	AssignmentExpression	out += 4		5260167	1		+=			
ANR	5260258	Identifier	out		5260167	0					
ANR	5260259	PrimaryExpression	4		5260167	1					
ANR	5260260	CompoundStatement		18:49:282:282	5260167	3					
ANR	5260261	ExpressionStatement	"local_b64_encode ( ( const ut8 * ) str + in , ( char * ) bout + out , ( len - in ) > 3 ? 3 : len - in )"	109:2:2469:2563	5260167	0	True				
ANR	5260262	CallExpression	"local_b64_encode ( ( const ut8 * ) str + in , ( char * ) bout + out , ( len - in ) > 3 ? 3 : len - in )"		5260167	0					
ANR	5260263	Callee	local_b64_encode		5260167	0					
ANR	5260264	Identifier	local_b64_encode		5260167	0					
ANR	5260265	ArgumentList	( const ut8 * ) str + in		5260167	1					
ANR	5260266	Argument	( const ut8 * ) str + in		5260167	0					
ANR	5260267	AdditiveExpression	( const ut8 * ) str + in		5260167	0		+			
ANR	5260268	CastExpression	( const ut8 * ) str		5260167	0					
ANR	5260269	CastTarget	const ut8 *		5260167	0					
ANR	5260270	Identifier	str		5260167	1					
ANR	5260271	Identifier	in		5260167	1					
ANR	5260272	Argument	( char * ) bout + out		5260167	1					
ANR	5260273	AdditiveExpression	( char * ) bout + out		5260167	0		+			
ANR	5260274	CastExpression	( char * ) bout		5260167	0					
ANR	5260275	CastTarget	char *		5260167	0					
ANR	5260276	Identifier	bout		5260167	1					
ANR	5260277	Identifier	out		5260167	1					
ANR	5260278	Argument	( len - in ) > 3 ? 3 : len - in		5260167	2					
ANR	5260279	ConditionalExpression	( len - in ) > 3 ? 3 : len - in		5260167	0					
ANR	5260280	Condition	( len - in ) > 3		5260167	0					
ANR	5260281	RelationalExpression	( len - in ) > 3		5260167	0		>			
ANR	5260282	AdditiveExpression	len - in		5260167	0		-			
ANR	5260283	Identifier	len		5260167	0					
ANR	5260284	Identifier	in		5260167	1					
ANR	5260285	PrimaryExpression	3		5260167	1					
ANR	5260286	PrimaryExpression	3		5260167	1					
ANR	5260287	AdditiveExpression	len - in		5260167	2		-			
ANR	5260288	Identifier	len		5260167	0					
ANR	5260289	Identifier	in		5260167	1					
ANR	5260290	ExpressionStatement	bout [ out ] = 0	112:1:2569:2582	5260167	9	True				
ANR	5260291	AssignmentExpression	bout [ out ] = 0		5260167	0		=			
ANR	5260292	ArrayIndexing	bout [ out ]		5260167	0					
ANR	5260293	Identifier	bout		5260167	0					
ANR	5260294	Identifier	out		5260167	1					
ANR	5260295	PrimaryExpression	0		5260167	1					
ANR	5260296	ReturnStatement	return bout ;	113:1:2585:2596	5260167	10	True				
ANR	5260297	Identifier	bout		5260167	0					
ANR	5260298	ReturnType	R_API char *		5260167	1					
ANR	5260299	Identifier	r_base64_encode_dyn		5260167	2					
ANR	5260300	ParameterList	"const char * str , int len"		5260167	3					
ANR	5260301	Parameter	const char * str	91:32:2156:2170	5260167	0	True				
ANR	5260302	ParameterType	const char *		5260167	0					
ANR	5260303	Identifier	str		5260167	1					
ANR	5260304	Parameter	int len	91:49:2173:2179	5260167	1	True				
ANR	5260305	ParameterType	int		5260167	0					
ANR	5260306	Identifier	len		5260167	1					
ANR	5260307	CFGEntryNode	ENTRY		5260167		True				
ANR	5260308	CFGExitNode	EXIT		5260167		True				
ANR	5260309	Symbol	str		5260167						
ANR	5260310	Symbol	strlen		5260167						
ANR	5260311	Symbol	malloc		5260167						
ANR	5260312	Symbol	bout		5260167						
ANR	5260313	Symbol	olen		5260167						
ANR	5260314	Symbol	NULL		5260167						
ANR	5260315	Symbol	len		5260167						
ANR	5260316	Symbol	in		5260167						
ANR	5260317	Symbol	* out		5260167						
ANR	5260318	Symbol	* bout		5260167						
ANR	5260319	Symbol	out		5260167						
