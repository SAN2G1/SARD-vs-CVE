command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5353689	File	data/converged/CVE-2019-16718~_radare2/mcore.c								
ANR	5353690	DeclStmt									
ANR	5353691	Decl							const char	const char * [ ]	mcore_ctrl_registers
ANR	5353692	ClassDef	mcore_mask	73:8:1948:2019							
ANR	5353693	DeclStmt									
ANR	5353694	Decl							ut16	ut16	mask
ANR	5353695	DeclStmt									
ANR	5353696	Decl							ut16	ut16	shift
ANR	5353697	DeclStmt									
ANR	5353698	Decl							ut16	ut16	type
ANR	5353699	DeclStmt									
ANR	5353700	Decl							mcore_mask	mcore_mask	mcore_mask_t
ANR	5353701	ClassDef	mcore_ops	79:8:2030:2161							
ANR	5353702	DeclStmt									
ANR	5353703	Decl							const char	const char *	name
ANR	5353704	DeclStmt									
ANR	5353705	Decl							ut16	ut16	cpu
ANR	5353706	DeclStmt									
ANR	5353707	Decl							ut16	ut16	mask
ANR	5353708	DeclStmt									
ANR	5353709	Decl							ut64	ut64	type
ANR	5353710	DeclStmt									
ANR	5353711	Decl							ut16	ut16	n_args
ANR	5353712	DeclStmt									
ANR	5353713	Decl							mcore_mask_t	mcore_mask_t [ ARGS_SIZE ]	args
ANR	5353714	DeclStmt									
ANR	5353715	Decl							mcore_ops	mcore_ops	mcore_ops_t
ANR	5353716	DeclStmt									
ANR	5353717	Decl							ut16	ut16 [ 4 ]	load_shift
ANR	5353718	DeclStmt									
ANR	5353719	Decl							mcore_ops_t	mcore_ops_t [ MCORE_INSTRS ]	mcore_instructions
ANR	5353720	Function	find_instruction	358:0:22579:23728							
ANR	5353721	FunctionDef	find_instruction (const ut8 * buffer)		5353720	0					
ANR	5353722	CompoundStatement		358:52:22631:23728	5353720	0					
ANR	5353723	IdentifierDeclStatement	ut32 i = 0 ;	359:1:22634:22644	5353720	0	True				
ANR	5353724	IdentifierDecl	i = 0		5353720	0					
ANR	5353725	IdentifierDeclType	ut32		5353720	0					
ANR	5353726	Identifier	i		5353720	1					
ANR	5353727	AssignmentExpression	i = 0		5353720	2		=			
ANR	5353728	Identifier	i		5353720	0					
ANR	5353729	PrimaryExpression	0		5353720	1					
ANR	5353730	IdentifierDeclStatement	mcore_ops_t * op_ptr = NULL ;	360:1:22647:22673	5353720	1	True				
ANR	5353731	IdentifierDecl	* op_ptr = NULL		5353720	0					
ANR	5353732	IdentifierDeclType	mcore_ops_t *		5353720	0					
ANR	5353733	Identifier	op_ptr		5353720	1					
ANR	5353734	AssignmentExpression	* op_ptr = NULL		5353720	2		=			
ANR	5353735	Identifier	NULL		5353720	0					
ANR	5353736	Identifier	NULL		5353720	1					
ANR	5353737	IdentifierDeclStatement	mcore_t * op = NULL ;	361:1:22676:22694	5353720	2	True				
ANR	5353738	IdentifierDecl	* op = NULL		5353720	0					
ANR	5353739	IdentifierDeclType	mcore_t *		5353720	0					
ANR	5353740	Identifier	op		5353720	1					
ANR	5353741	AssignmentExpression	* op = NULL		5353720	2		=			
ANR	5353742	Identifier	NULL		5353720	0					
ANR	5353743	Identifier	NULL		5353720	1					
ANR	5353744	IfStatement	if ( ! buffer || ! ( op = malloc ( sizeof ( mcore_t ) ) ) )		5353720	3					
ANR	5353745	Condition	! buffer || ! ( op = malloc ( sizeof ( mcore_t ) ) )	362:5:22701:22744	5353720	0	True				
ANR	5353746	OrExpression	! buffer || ! ( op = malloc ( sizeof ( mcore_t ) ) )		5353720	0		||			
ANR	5353747	UnaryOperationExpression	! buffer		5353720	0					
ANR	5353748	UnaryOperator	!		5353720	0					
ANR	5353749	Identifier	buffer		5353720	1					
ANR	5353750	UnaryOperationExpression	! ( op = malloc ( sizeof ( mcore_t ) ) )		5353720	1					
ANR	5353751	UnaryOperator	!		5353720	0					
ANR	5353752	AssignmentExpression	op = malloc ( sizeof ( mcore_t ) )		5353720	1		=			
ANR	5353753	Identifier	op		5353720	0					
ANR	5353754	CallExpression	malloc ( sizeof ( mcore_t ) )		5353720	1					
ANR	5353755	Callee	malloc		5353720	0					
ANR	5353756	Identifier	malloc		5353720	0					
ANR	5353757	ArgumentList	sizeof ( mcore_t )		5353720	1					
ANR	5353758	Argument	sizeof ( mcore_t )		5353720	0					
ANR	5353759	SizeofExpression	sizeof ( mcore_t )		5353720	0					
ANR	5353760	Sizeof	sizeof		5353720	0					
ANR	5353761	SizeofOperand	mcore_t		5353720	1					
ANR	5353762	CompoundStatement		5:51:115:115	5353720	1					
ANR	5353763	ReturnStatement	return NULL ;	363:2:22751:22762	5353720	0	True				
ANR	5353764	Identifier	NULL		5353720	0					
ANR	5353765	ExpressionStatement	"memset ( op , 0 , sizeof ( mcore_t ) )"	365:1:22768:22800	5353720	4	True				
ANR	5353766	CallExpression	"memset ( op , 0 , sizeof ( mcore_t ) )"		5353720	0					
ANR	5353767	Callee	memset		5353720	0					
ANR	5353768	Identifier	memset		5353720	0					
ANR	5353769	ArgumentList	op		5353720	1					
ANR	5353770	Argument	op		5353720	0					
ANR	5353771	Identifier	op		5353720	0					
ANR	5353772	Argument	0		5353720	1					
ANR	5353773	PrimaryExpression	0		5353720	0					
ANR	5353774	Argument	sizeof ( mcore_t )		5353720	2					
ANR	5353775	SizeofExpression	sizeof ( mcore_t )		5353720	0					
ANR	5353776	Sizeof	sizeof		5353720	0					
ANR	5353777	SizeofOperand	mcore_t		5353720	1					
ANR	5353778	IdentifierDeclStatement	ut32 count = sizeof ( mcore_instructions ) / sizeof ( mcore_ops_t ) ;	366:1:22803:22866	5353720	5	True				
ANR	5353779	IdentifierDecl	count = sizeof ( mcore_instructions ) / sizeof ( mcore_ops_t )		5353720	0					
ANR	5353780	IdentifierDeclType	ut32		5353720	0					
ANR	5353781	Identifier	count		5353720	1					
ANR	5353782	AssignmentExpression	count = sizeof ( mcore_instructions ) / sizeof ( mcore_ops_t )		5353720	2		=			
ANR	5353783	Identifier	count		5353720	0					
ANR	5353784	MultiplicativeExpression	sizeof ( mcore_instructions ) / sizeof ( mcore_ops_t )		5353720	1		/			
ANR	5353785	SizeofExpression	sizeof ( mcore_instructions )		5353720	0					
ANR	5353786	Sizeof	sizeof		5353720	0					
ANR	5353787	SizeofOperand	mcore_instructions		5353720	1					
ANR	5353788	SizeofExpression	sizeof ( mcore_ops_t )		5353720	1					
ANR	5353789	Sizeof	sizeof		5353720	0					
ANR	5353790	SizeofOperand	mcore_ops_t		5353720	1					
ANR	5353791	IdentifierDeclStatement	ut16 data = buffer [ 1 ] << 8 ;	367:1:22869:22895	5353720	6	True				
ANR	5353792	IdentifierDecl	data = buffer [ 1 ] << 8		5353720	0					
ANR	5353793	IdentifierDeclType	ut16		5353720	0					
ANR	5353794	Identifier	data		5353720	1					
ANR	5353795	AssignmentExpression	data = buffer [ 1 ] << 8		5353720	2		=			
ANR	5353796	Identifier	data		5353720	0					
ANR	5353797	ShiftExpression	buffer [ 1 ] << 8		5353720	1		<<			
ANR	5353798	ArrayIndexing	buffer [ 1 ]		5353720	0					
ANR	5353799	Identifier	buffer		5353720	0					
ANR	5353800	PrimaryExpression	1		5353720	1					
ANR	5353801	PrimaryExpression	8		5353720	1					
ANR	5353802	ExpressionStatement	data |= buffer [ 0 ]	368:1:22898:22915	5353720	7	True				
ANR	5353803	AssignmentExpression	data |= buffer [ 0 ]		5353720	0		|=			
ANR	5353804	Identifier	data		5353720	0					
ANR	5353805	ArrayIndexing	buffer [ 0 ]		5353720	1					
ANR	5353806	Identifier	buffer		5353720	0					
ANR	5353807	PrimaryExpression	0		5353720	1					
ANR	5353808	ExpressionStatement	op -> bytes = data	369:1:22918:22934	5353720	8	True				
ANR	5353809	AssignmentExpression	op -> bytes = data		5353720	0		=			
ANR	5353810	PtrMemberAccess	op -> bytes		5353720	0					
ANR	5353811	Identifier	op		5353720	0					
ANR	5353812	Identifier	bytes		5353720	1					
ANR	5353813	Identifier	data		5353720	1					
ANR	5353814	ExpressionStatement	op -> size = MCORE_INSTR_ALIGN	370:1:22937:22965	5353720	9	True				
ANR	5353815	AssignmentExpression	op -> size = MCORE_INSTR_ALIGN		5353720	0		=			
ANR	5353816	PtrMemberAccess	op -> size		5353720	0					
ANR	5353817	Identifier	op		5353720	0					
ANR	5353818	Identifier	size		5353720	1					
ANR	5353819	Identifier	MCORE_INSTR_ALIGN		5353720	1					
ANR	5353820	IfStatement	if ( data == 0 )		5353720	10					
ANR	5353821	Condition	data == 0	371:5:22972:22980	5353720	0	True				
ANR	5353822	EqualityExpression	data == 0		5353720	0		==			
ANR	5353823	Identifier	data		5353720	0					
ANR	5353824	PrimaryExpression	0		5353720	1					
ANR	5353825	CompoundStatement		14:16:351:351	5353720	1					
ANR	5353826	ExpressionStatement	op_ptr = & mcore_instructions [ 0 ]	372:2:22987:23018	5353720	0	True				
ANR	5353827	AssignmentExpression	op_ptr = & mcore_instructions [ 0 ]		5353720	0		=			
ANR	5353828	Identifier	op_ptr		5353720	0					
ANR	5353829	UnaryOperationExpression	& mcore_instructions [ 0 ]		5353720	1					
ANR	5353830	UnaryOperator	&		5353720	0					
ANR	5353831	ArrayIndexing	mcore_instructions [ 0 ]		5353720	1					
ANR	5353832	Identifier	mcore_instructions		5353720	0					
ANR	5353833	PrimaryExpression	0		5353720	1					
ANR	5353834	ElseStatement	else		5353720	0					
ANR	5353835	CompoundStatement		16:8:396:396	5353720	0					
ANR	5353836	ForStatement	for ( i = 1 ; i < count ; i ++ )		5353720	0					
ANR	5353837	ForInit	i = 1 ;	374:7:23037:23042	5353720	0	True				
ANR	5353838	AssignmentExpression	i = 1		5353720	0		=			
ANR	5353839	Identifier	i		5353720	0					
ANR	5353840	PrimaryExpression	1		5353720	1					
ANR	5353841	Condition	i < count	374:14:23044:23052	5353720	1	True				
ANR	5353842	RelationalExpression	i < count		5353720	0		<			
ANR	5353843	Identifier	i		5353720	0					
ANR	5353844	Identifier	count		5353720	1					
ANR	5353845	PostIncDecOperationExpression	i ++	374:25:23055:23057	5353720	2	True				
ANR	5353846	Identifier	i		5353720	0					
ANR	5353847	IncDec	++		5353720	1					
ANR	5353848	CompoundStatement		19:3:469:502	5353720	3					
ANR	5353849	ExpressionStatement	op_ptr = & mcore_instructions [ i ]	375:3:23065:23096	5353720	0	True				
ANR	5353850	AssignmentExpression	op_ptr = & mcore_instructions [ i ]		5353720	0		=			
ANR	5353851	Identifier	op_ptr		5353720	0					
ANR	5353852	UnaryOperationExpression	& mcore_instructions [ i ]		5353720	1					
ANR	5353853	UnaryOperator	&		5353720	0					
ANR	5353854	ArrayIndexing	mcore_instructions [ i ]		5353720	1					
ANR	5353855	Identifier	mcore_instructions		5353720	0					
ANR	5353856	Identifier	i		5353720	1					
ANR	5353857	IdentifierDeclStatement	ut16 masked = data & op_ptr -> mask ;	376:3:23101:23134	5353720	1	True				
ANR	5353858	IdentifierDecl	masked = data & op_ptr -> mask		5353720	0					
ANR	5353859	IdentifierDeclType	ut16		5353720	0					
ANR	5353860	Identifier	masked		5353720	1					
ANR	5353861	AssignmentExpression	masked = data & op_ptr -> mask		5353720	2		=			
ANR	5353862	Identifier	masked		5353720	0					
ANR	5353863	BitAndExpression	data & op_ptr -> mask		5353720	1		&			
ANR	5353864	Identifier	data		5353720	0					
ANR	5353865	PtrMemberAccess	op_ptr -> mask		5353720	1					
ANR	5353866	Identifier	op_ptr		5353720	0					
ANR	5353867	Identifier	mask		5353720	1					
ANR	5353868	IfStatement	if ( masked == data )		5353720	2					
ANR	5353869	Condition	masked == data	378:7:23184:23197	5353720	0	True				
ANR	5353870	EqualityExpression	masked == data		5353720	0		==			
ANR	5353871	Identifier	masked		5353720	0					
ANR	5353872	Identifier	data		5353720	1					
ANR	5353873	CompoundStatement		21:23:568:568	5353720	1					
ANR	5353874	BreakStatement	break ;	379:4:23206:23211	5353720	0	True				
ANR	5353875	IfStatement	if ( i >= count )		5353720	1					
ANR	5353876	Condition	i >= count	382:6:23228:23237	5353720	0	True				
ANR	5353877	RelationalExpression	i >= count		5353720	0		>=			
ANR	5353878	Identifier	i		5353720	0					
ANR	5353879	Identifier	count		5353720	1					
ANR	5353880	CompoundStatement		25:18:608:608	5353720	1					
ANR	5353881	ExpressionStatement	"op -> name = ""illegal"""	383:3:23245:23265	5353720	0	True				
ANR	5353882	AssignmentExpression	"op -> name = ""illegal"""		5353720	0		=			
ANR	5353883	PtrMemberAccess	op -> name		5353720	0					
ANR	5353884	Identifier	op		5353720	0					
ANR	5353885	Identifier	name		5353720	1					
ANR	5353886	PrimaryExpression	"""illegal"""		5353720	1					
ANR	5353887	ReturnStatement	return op ;	384:3:23270:23279	5353720	1	True				
ANR	5353888	Identifier	op		5353720	0					
ANR	5353889	Statement	if	388:1:23290:23291	5353720	11	True				
ANR	5353890	Statement	(	388:4:23293:23293	5353720	12	True				
ANR	5353891	Statement	!	388:5:23294:23294	5353720	13	True				
ANR	5353892	Statement	strncmp	388:6:23295:23301	5353720	14	True				
ANR	5353893	Statement	(	388:14:23303:23303	5353720	15	True				
ANR	5353894	Statement	op_ptr	388:15:23304:23309	5353720	16	True				
ANR	5353895	Statement	->	388:21:23310:23311	5353720	17	True				
ANR	5353896	Statement	name	388:23:23312:23315	5353720	18	True				
ANR	5353897	Statement	","	388:27:23316:23316	5353720	19	True				
ANR	5353898	Statement	"""lrw"""	388:29:23318:23322	5353720	20	True				
ANR	5353899	Statement	","	388:34:23323:23323	5353720	21	True				
ANR	5353900	Statement	3	388:36:23325:23325	5353720	22	True				
ANR	5353901	Statement	)	388:37:23326:23326	5353720	23	True				
ANR	5353902	Statement	&&	388:39:23328:23329	5353720	24	True				
ANR	5353903	Statement	(	388:42:23331:23331	5353720	25	True				
ANR	5353904	Statement	data	388:43:23332:23335	5353720	26	True				
ANR	5353905	Statement	&	388:48:23337:23337	5353720	27	True				
ANR	5353906	Statement	0	388:50:23339:23339	5353720	28	True				
ANR	5353907	Statement	b111100000000	388:51:23340:23352	5353720	29	True				
ANR	5353908	Statement	)	388:64:23353:23353	5353720	30	True				
ANR	5353909	Statement	==	388:66:23355:23356	5353720	31	True				
ANR	5353910	Statement	0	388:69:23358:23358	5353720	32	True				
ANR	5353911	Statement	b111100000000	388:70:23359:23371	5353720	33	True				
ANR	5353912	Statement	)	388:83:23372:23372	5353720	34	True				
ANR	5353913	CompoundStatement		31:85:742:742	5353720	35					
ANR	5353914	IfStatement	if ( i > 0 && i < MCORE_INSTRS )		5353720	0					
ANR	5353915	Condition	i > 0 && i < MCORE_INSTRS	390:6:23395:23418	5353720	0	True				
ANR	5353916	AndExpression	i > 0 && i < MCORE_INSTRS		5353720	0		&&			
ANR	5353917	RelationalExpression	i > 0		5353720	0		>			
ANR	5353918	Identifier	i		5353720	0					
ANR	5353919	PrimaryExpression	0		5353720	1					
ANR	5353920	RelationalExpression	i < MCORE_INSTRS		5353720	1		<			
ANR	5353921	Identifier	i		5353720	0					
ANR	5353922	Identifier	MCORE_INSTRS		5353720	1					
ANR	5353923	CompoundStatement		33:32:789:789	5353720	1					
ANR	5353924	ExpressionStatement	op_ptr = & mcore_instructions [ i + 1 ]	391:3:23426:23461	5353720	0	True				
ANR	5353925	AssignmentExpression	op_ptr = & mcore_instructions [ i + 1 ]		5353720	0		=			
ANR	5353926	Identifier	op_ptr		5353720	0					
ANR	5353927	UnaryOperationExpression	& mcore_instructions [ i + 1 ]		5353720	1					
ANR	5353928	UnaryOperator	&		5353720	0					
ANR	5353929	ArrayIndexing	mcore_instructions [ i + 1 ]		5353720	1					
ANR	5353930	Identifier	mcore_instructions		5353720	0					
ANR	5353931	AdditiveExpression	i + 1		5353720	1		+			
ANR	5353932	Identifier	i		5353720	0					
ANR	5353933	PrimaryExpression	1		5353720	1					
ANR	5353934	ExpressionStatement	op -> type = op_ptr -> type	394:1:23471:23494	5353720	36	True				
ANR	5353935	AssignmentExpression	op -> type = op_ptr -> type		5353720	0		=			
ANR	5353936	PtrMemberAccess	op -> type		5353720	0					
ANR	5353937	Identifier	op		5353720	0					
ANR	5353938	Identifier	type		5353720	1					
ANR	5353939	PtrMemberAccess	op_ptr -> type		5353720	1					
ANR	5353940	Identifier	op_ptr		5353720	0					
ANR	5353941	Identifier	type		5353720	1					
ANR	5353942	ExpressionStatement	op -> name = op_ptr -> name	395:1:23497:23520	5353720	37	True				
ANR	5353943	AssignmentExpression	op -> name = op_ptr -> name		5353720	0		=			
ANR	5353944	PtrMemberAccess	op -> name		5353720	0					
ANR	5353945	Identifier	op		5353720	0					
ANR	5353946	Identifier	name		5353720	1					
ANR	5353947	PtrMemberAccess	op_ptr -> name		5353720	1					
ANR	5353948	Identifier	op_ptr		5353720	0					
ANR	5353949	Identifier	name		5353720	1					
ANR	5353950	ExpressionStatement	op -> n_args = op_ptr -> n_args	396:1:23523:23550	5353720	38	True				
ANR	5353951	AssignmentExpression	op -> n_args = op_ptr -> n_args		5353720	0		=			
ANR	5353952	PtrMemberAccess	op -> n_args		5353720	0					
ANR	5353953	Identifier	op		5353720	0					
ANR	5353954	Identifier	n_args		5353720	1					
ANR	5353955	PtrMemberAccess	op_ptr -> n_args		5353720	1					
ANR	5353956	Identifier	op_ptr		5353720	0					
ANR	5353957	Identifier	n_args		5353720	1					
ANR	5353958	ForStatement	for ( i = 0 ; i < op_ptr -> n_args ; ++ i )		5353720	39					
ANR	5353959	ForInit	i = 0 ;	397:6:23558:23563	5353720	0	True				
ANR	5353960	AssignmentExpression	i = 0		5353720	0		=			
ANR	5353961	Identifier	i		5353720	0					
ANR	5353962	PrimaryExpression	0		5353720	1					
ANR	5353963	Condition	i < op_ptr -> n_args	397:13:23565:23582	5353720	1	True				
ANR	5353964	RelationalExpression	i < op_ptr -> n_args		5353720	0		<			
ANR	5353965	Identifier	i		5353720	0					
ANR	5353966	PtrMemberAccess	op_ptr -> n_args		5353720	1					
ANR	5353967	Identifier	op_ptr		5353720	0					
ANR	5353968	Identifier	n_args		5353720	1					
ANR	5353969	UnaryExpression	++ i	397:33:23585:23587	5353720	2	True				
ANR	5353970	IncDec	++		5353720	0					
ANR	5353971	Identifier	i		5353720	1					
ANR	5353972	CompoundStatement		40:38:958:958	5353720	3					
ANR	5353973	ExpressionStatement	op -> args [ i ] . value = ( data & op_ptr -> args [ i ] . mask ) >> op_ptr -> args [ i ] . shift	398:2:23594:23668	5353720	0	True				
ANR	5353974	AssignmentExpression	op -> args [ i ] . value = ( data & op_ptr -> args [ i ] . mask ) >> op_ptr -> args [ i ] . shift		5353720	0		=			
ANR	5353975	MemberAccess	op -> args [ i ] . value		5353720	0					
ANR	5353976	ArrayIndexing	op -> args [ i ]		5353720	0					
ANR	5353977	PtrMemberAccess	op -> args		5353720	0					
ANR	5353978	Identifier	op		5353720	0					
ANR	5353979	Identifier	args		5353720	1					
ANR	5353980	Identifier	i		5353720	1					
ANR	5353981	Identifier	value		5353720	1					
ANR	5353982	ShiftExpression	( data & op_ptr -> args [ i ] . mask ) >> op_ptr -> args [ i ] . shift		5353720	1		>>			
ANR	5353983	BitAndExpression	data & op_ptr -> args [ i ] . mask		5353720	0		&			
ANR	5353984	Identifier	data		5353720	0					
ANR	5353985	MemberAccess	op_ptr -> args [ i ] . mask		5353720	1					
ANR	5353986	ArrayIndexing	op_ptr -> args [ i ]		5353720	0					
ANR	5353987	PtrMemberAccess	op_ptr -> args		5353720	0					
ANR	5353988	Identifier	op_ptr		5353720	0					
ANR	5353989	Identifier	args		5353720	1					
ANR	5353990	Identifier	i		5353720	1					
ANR	5353991	Identifier	mask		5353720	1					
ANR	5353992	MemberAccess	op_ptr -> args [ i ] . shift		5353720	1					
ANR	5353993	ArrayIndexing	op_ptr -> args [ i ]		5353720	0					
ANR	5353994	PtrMemberAccess	op_ptr -> args		5353720	0					
ANR	5353995	Identifier	op_ptr		5353720	0					
ANR	5353996	Identifier	args		5353720	1					
ANR	5353997	Identifier	i		5353720	1					
ANR	5353998	Identifier	shift		5353720	1					
ANR	5353999	ExpressionStatement	op -> args [ i ] . type = op_ptr -> args [ i ] . type	399:2:23672:23711	5353720	1	True				
ANR	5354000	AssignmentExpression	op -> args [ i ] . type = op_ptr -> args [ i ] . type		5353720	0		=			
ANR	5354001	MemberAccess	op -> args [ i ] . type		5353720	0					
ANR	5354002	ArrayIndexing	op -> args [ i ]		5353720	0					
ANR	5354003	PtrMemberAccess	op -> args		5353720	0					
ANR	5354004	Identifier	op		5353720	0					
ANR	5354005	Identifier	args		5353720	1					
ANR	5354006	Identifier	i		5353720	1					
ANR	5354007	Identifier	type		5353720	1					
ANR	5354008	MemberAccess	op_ptr -> args [ i ] . type		5353720	1					
ANR	5354009	ArrayIndexing	op_ptr -> args [ i ]		5353720	0					
ANR	5354010	PtrMemberAccess	op_ptr -> args		5353720	0					
ANR	5354011	Identifier	op_ptr		5353720	0					
ANR	5354012	Identifier	args		5353720	1					
ANR	5354013	Identifier	i		5353720	1					
ANR	5354014	Identifier	type		5353720	1					
ANR	5354015	ReturnStatement	return op ;	401:1:23717:23726	5353720	40	True				
ANR	5354016	Identifier	op		5353720	0					
ANR	5354017	ReturnType	static mcore_t *		5353720	1					
ANR	5354018	Identifier	find_instruction		5353720	2					
ANR	5354019	ParameterList	const ut8 * buffer		5353720	3					
ANR	5354020	Parameter	const ut8 * buffer	358:33:22612:22628	5353720	0	True				
ANR	5354021	ParameterType	const ut8 *		5353720	0					
ANR	5354022	Identifier	buffer		5353720	1					
ANR	5354023	CFGEntryNode	ENTRY		5353720		True				
ANR	5354024	CFGExitNode	EXIT		5353720		True				
ANR	5354025	Symbol	data		5353720						
ANR	5354026	Symbol	* op		5353720						
ANR	5354027	Symbol	masked		5353720						
ANR	5354028	Symbol	op -> args [ i ] . value		5353720						
ANR	5354029	Symbol	op -> args		5353720						
ANR	5354030	Symbol	* * op		5353720						
ANR	5354031	Symbol	op_ptr -> args		5353720						
ANR	5354032	Symbol	op_ptr -> args [ i ] . type		5353720						
ANR	5354033	Symbol	op_ptr		5353720						
ANR	5354034	Symbol	op_ptr -> name		5353720						
ANR	5354035	Symbol	op_ptr -> n_args		5353720						
ANR	5354036	Symbol	buffer		5353720						
ANR	5354037	Symbol	MCORE_INSTR_ALIGN		5353720						
ANR	5354038	Symbol	op		5353720						
ANR	5354039	Symbol	malloc		5353720						
ANR	5354040	Symbol	* buffer		5353720						
ANR	5354041	Symbol	NULL		5353720						
ANR	5354042	Symbol	op_ptr -> args [ i ] . shift		5353720						
ANR	5354043	Symbol	op_ptr -> type		5353720						
ANR	5354044	Symbol	op -> type		5353720						
ANR	5354045	Symbol	op -> n_args		5353720						
ANR	5354046	Symbol	count		5353720						
ANR	5354047	Symbol	* * op_ptr		5353720						
ANR	5354048	Symbol	i		5353720						
ANR	5354049	Symbol	op -> name		5353720						
ANR	5354050	Symbol	op -> bytes		5353720						
ANR	5354051	Symbol	op_ptr -> mask		5353720						
ANR	5354052	Symbol	* i		5353720						
ANR	5354053	Symbol	op -> args [ i ] . type		5353720						
ANR	5354054	Symbol	op -> size		5353720						
ANR	5354055	Symbol	* op -> args		5353720						
ANR	5354056	Symbol	* op_ptr -> args		5353720						
ANR	5354057	Symbol	op_ptr -> args [ i ] . mask		5353720						
ANR	5354058	Symbol	MCORE_INSTRS		5353720						
ANR	5354059	Symbol	mcore_instructions		5353720						
ANR	5354060	Symbol	* op_ptr		5353720						
ANR	5354061	Function	mcore_init	404:0:23731:23924							
ANR	5354062	FunctionDef	"mcore_init (mcore_handle * handle , const ut8 * buffer , const ut32 size)"		5354061	0					
ANR	5354063	CompoundStatement		404:73:23804:23924	5354061	0					
ANR	5354064	IfStatement	if ( ! handle || ! buffer || size < 2 )		5354061	0					
ANR	5354065	Condition	! handle || ! buffer || size < 2	405:5:23811:23840	5354061	0	True				
ANR	5354066	OrExpression	! handle || ! buffer || size < 2		5354061	0		||			
ANR	5354067	UnaryOperationExpression	! handle		5354061	0					
ANR	5354068	UnaryOperator	!		5354061	0					
ANR	5354069	Identifier	handle		5354061	1					
ANR	5354070	OrExpression	! buffer || size < 2		5354061	1		||			
ANR	5354071	UnaryOperationExpression	! buffer		5354061	0					
ANR	5354072	UnaryOperator	!		5354061	0					
ANR	5354073	Identifier	buffer		5354061	1					
ANR	5354074	RelationalExpression	size < 2		5354061	1		<			
ANR	5354075	Identifier	size		5354061	0					
ANR	5354076	PrimaryExpression	2		5354061	1					
ANR	5354077	CompoundStatement		2:37:38:38	5354061	1					
ANR	5354078	ReturnStatement	return 1 ;	406:2:23847:23855	5354061	0	True				
ANR	5354079	PrimaryExpression	1		5354061	0					
ANR	5354080	ExpressionStatement	handle -> pos = buffer	408:1:23861:23881	5354061	1	True				
ANR	5354081	AssignmentExpression	handle -> pos = buffer		5354061	0		=			
ANR	5354082	PtrMemberAccess	handle -> pos		5354061	0					
ANR	5354083	Identifier	handle		5354061	0					
ANR	5354084	Identifier	pos		5354061	1					
ANR	5354085	Identifier	buffer		5354061	1					
ANR	5354086	ExpressionStatement	handle -> end = buffer + size	409:1:23884:23911	5354061	2	True				
ANR	5354087	AssignmentExpression	handle -> end = buffer + size		5354061	0		=			
ANR	5354088	PtrMemberAccess	handle -> end		5354061	0					
ANR	5354089	Identifier	handle		5354061	0					
ANR	5354090	Identifier	end		5354061	1					
ANR	5354091	AdditiveExpression	buffer + size		5354061	1		+			
ANR	5354092	Identifier	buffer		5354061	0					
ANR	5354093	Identifier	size		5354061	1					
ANR	5354094	ReturnStatement	return 0 ;	410:1:23914:23922	5354061	3	True				
ANR	5354095	PrimaryExpression	0		5354061	0					
ANR	5354096	ReturnType	int		5354061	1					
ANR	5354097	Identifier	mcore_init		5354061	2					
ANR	5354098	ParameterList	"mcore_handle * handle , const ut8 * buffer , const ut32 size"		5354061	3					
ANR	5354099	Parameter	mcore_handle * handle	404:15:23746:23765	5354061	0	True				
ANR	5354100	ParameterType	mcore_handle *		5354061	0					
ANR	5354101	Identifier	handle		5354061	1					
ANR	5354102	Parameter	const ut8 * buffer	404:37:23768:23784	5354061	1	True				
ANR	5354103	ParameterType	const ut8 *		5354061	0					
ANR	5354104	Identifier	buffer		5354061	1					
ANR	5354105	Parameter	const ut32 size	404:56:23787:23801	5354061	2	True				
ANR	5354106	ParameterType	const ut32		5354061	0					
ANR	5354107	Identifier	size		5354061	1					
ANR	5354108	CFGEntryNode	ENTRY		5354061		True				
ANR	5354109	CFGExitNode	EXIT		5354061		True				
ANR	5354110	Symbol	size		5354061						
ANR	5354111	Symbol	handle -> end		5354061						
ANR	5354112	Symbol	* handle		5354061						
ANR	5354113	Symbol	handle		5354061						
ANR	5354114	Symbol	buffer		5354061						
ANR	5354115	Symbol	handle -> pos		5354061						
ANR	5354116	Function	mcore_next	413:0:23927:24213							
ANR	5354117	FunctionDef	mcore_next (mcore_handle * handle)		5354116	0					
ANR	5354118	CompoundStatement		413:42:23969:24213	5354116	0					
ANR	5354119	IdentifierDeclStatement	mcore_t * op = NULL ;	414:1:23972:23990	5354116	0	True				
ANR	5354120	IdentifierDecl	* op = NULL		5354116	0					
ANR	5354121	IdentifierDeclType	mcore_t *		5354116	0					
ANR	5354122	Identifier	op		5354116	1					
ANR	5354123	AssignmentExpression	* op = NULL		5354116	2		=			
ANR	5354124	Identifier	NULL		5354116	0					
ANR	5354125	Identifier	NULL		5354116	1					
ANR	5354126	IfStatement	if ( ! handle || handle -> pos + MCORE_INSTR_ALIGN > handle -> end )		5354116	1					
ANR	5354127	Condition	! handle || handle -> pos + MCORE_INSTR_ALIGN > handle -> end	415:5:23997:24052	5354116	0	True				
ANR	5354128	OrExpression	! handle || handle -> pos + MCORE_INSTR_ALIGN > handle -> end		5354116	0		||			
ANR	5354129	UnaryOperationExpression	! handle		5354116	0					
ANR	5354130	UnaryOperator	!		5354116	0					
ANR	5354131	Identifier	handle		5354116	1					
ANR	5354132	RelationalExpression	handle -> pos + MCORE_INSTR_ALIGN > handle -> end		5354116	1		>			
ANR	5354133	AdditiveExpression	handle -> pos + MCORE_INSTR_ALIGN		5354116	0		+			
ANR	5354134	PtrMemberAccess	handle -> pos		5354116	0					
ANR	5354135	Identifier	handle		5354116	0					
ANR	5354136	Identifier	pos		5354116	1					
ANR	5354137	Identifier	MCORE_INSTR_ALIGN		5354116	1					
ANR	5354138	PtrMemberAccess	handle -> end		5354116	1					
ANR	5354139	Identifier	handle		5354116	0					
ANR	5354140	Identifier	end		5354116	1					
ANR	5354141	CompoundStatement		3:63:85:85	5354116	1					
ANR	5354142	ReturnStatement	return NULL ;	416:2:24059:24070	5354116	0	True				
ANR	5354143	Identifier	NULL		5354116	0					
ANR	5354144	IfStatement	if ( ! op && handle -> pos + 2 <= handle -> end )		5354116	2					
ANR	5354145	Condition	! op && handle -> pos + 2 <= handle -> end	419:5:24081:24117	5354116	0	True				
ANR	5354146	AndExpression	! op && handle -> pos + 2 <= handle -> end		5354116	0		&&			
ANR	5354147	UnaryOperationExpression	! op		5354116	0					
ANR	5354148	UnaryOperator	!		5354116	0					
ANR	5354149	Identifier	op		5354116	1					
ANR	5354150	RelationalExpression	handle -> pos + 2 <= handle -> end		5354116	1		<=			
ANR	5354151	AdditiveExpression	handle -> pos + 2		5354116	0		+			
ANR	5354152	PtrMemberAccess	handle -> pos		5354116	0					
ANR	5354153	Identifier	handle		5354116	0					
ANR	5354154	Identifier	pos		5354116	1					
ANR	5354155	PrimaryExpression	2		5354116	1					
ANR	5354156	PtrMemberAccess	handle -> end		5354116	1					
ANR	5354157	Identifier	handle		5354116	0					
ANR	5354158	Identifier	end		5354116	1					
ANR	5354159	CompoundStatement		7:44:150:150	5354116	1					
ANR	5354160	ExpressionStatement	op = find_instruction ( handle -> pos )	420:2:24124:24159	5354116	0	True				
ANR	5354161	AssignmentExpression	op = find_instruction ( handle -> pos )		5354116	0		=			
ANR	5354162	Identifier	op		5354116	0					
ANR	5354163	CallExpression	find_instruction ( handle -> pos )		5354116	1					
ANR	5354164	Callee	find_instruction		5354116	0					
ANR	5354165	Identifier	find_instruction		5354116	0					
ANR	5354166	ArgumentList	handle -> pos		5354116	1					
ANR	5354167	Argument	handle -> pos		5354116	0					
ANR	5354168	PtrMemberAccess	handle -> pos		5354116	0					
ANR	5354169	Identifier	handle		5354116	0					
ANR	5354170	Identifier	pos		5354116	1					
ANR	5354171	ExpressionStatement	handle -> pos += MCORE_INSTR_ALIGN	422:1:24165:24197	5354116	3	True				
ANR	5354172	AssignmentExpression	handle -> pos += MCORE_INSTR_ALIGN		5354116	0		+=			
ANR	5354173	PtrMemberAccess	handle -> pos		5354116	0					
ANR	5354174	Identifier	handle		5354116	0					
ANR	5354175	Identifier	pos		5354116	1					
ANR	5354176	Identifier	MCORE_INSTR_ALIGN		5354116	1					
ANR	5354177	ReturnStatement	return op ;	424:1:24202:24211	5354116	4	True				
ANR	5354178	Identifier	op		5354116	0					
ANR	5354179	ReturnType	mcore_t *		5354116	1					
ANR	5354180	Identifier	mcore_next		5354116	2					
ANR	5354181	ParameterList	mcore_handle * handle		5354116	3					
ANR	5354182	Parameter	mcore_handle * handle	413:20:23947:23966	5354116	0	True				
ANR	5354183	ParameterType	mcore_handle *		5354116	0					
ANR	5354184	Identifier	handle		5354116	1					
ANR	5354185	CFGEntryNode	ENTRY		5354116		True				
ANR	5354186	CFGExitNode	EXIT		5354116		True				
ANR	5354187	Symbol	MCORE_INSTR_ALIGN		5354116						
ANR	5354188	Symbol	op		5354116						
ANR	5354189	Symbol	NULL		5354116						
ANR	5354190	Symbol	handle -> end		5354116						
ANR	5354191	Symbol	* handle		5354116						
ANR	5354192	Symbol	find_instruction		5354116						
ANR	5354193	Symbol	handle		5354116						
ANR	5354194	Symbol	handle -> pos		5354116						
ANR	5354195	Function	mcore_free	427:0:24216:24265							
ANR	5354196	FunctionDef	mcore_free (mcore_t * instr)		5354195	0					
ANR	5354197	CompoundStatement		427:32:24248:24265	5354195	0					
ANR	5354198	ExpressionStatement	free ( instr )	428:1:24251:24263	5354195	0	True				
ANR	5354199	CallExpression	free ( instr )		5354195	0					
ANR	5354200	Callee	free		5354195	0					
ANR	5354201	Identifier	free		5354195	0					
ANR	5354202	ArgumentList	instr		5354195	1					
ANR	5354203	Argument	instr		5354195	0					
ANR	5354204	Identifier	instr		5354195	0					
ANR	5354205	ReturnType	void		5354195	1					
ANR	5354206	Identifier	mcore_free		5354195	2					
ANR	5354207	ParameterList	mcore_t * instr		5354195	3					
ANR	5354208	Parameter	mcore_t * instr	427:16:24232:24245	5354195	0	True				
ANR	5354209	ParameterType	mcore_t *		5354195	0					
ANR	5354210	Identifier	instr		5354195	1					
ANR	5354211	CFGEntryNode	ENTRY		5354195		True				
ANR	5354212	CFGExitNode	EXIT		5354195		True				
ANR	5354213	Symbol	instr		5354195						
ANR	5354214	Function	print_loop	431:0:24268:25544							
ANR	5354215	FunctionDef	"print_loop (char * str , int size , ut64 addr , mcore_t * instr)"		5354214	0					
ANR	5354216	CompoundStatement		431:64:24332:25544	5354214	0					
ANR	5354217	IdentifierDeclStatement	ut32 i ;	432:1:24335:24341	5354214	0	True				
ANR	5354218	IdentifierDecl	i		5354214	0					
ANR	5354219	IdentifierDeclType	ut32		5354214	0					
ANR	5354220	Identifier	i		5354214	1					
ANR	5354221	IdentifierDeclStatement	int bufsize = size ;	433:1:24344:24362	5354214	1	True				
ANR	5354222	IdentifierDecl	bufsize = size		5354214	0					
ANR	5354223	IdentifierDeclType	int		5354214	0					
ANR	5354224	Identifier	bufsize		5354214	1					
ANR	5354225	AssignmentExpression	bufsize = size		5354214	2		=			
ANR	5354226	Identifier	size		5354214	0					
ANR	5354227	Identifier	size		5354214	1					
ANR	5354228	IdentifierDeclStatement	"int add = snprintf ( str , bufsize , ""%s"" , instr -> name ) ;"	434:1:24365:24417	5354214	2	True				
ANR	5354229	IdentifierDecl	"add = snprintf ( str , bufsize , ""%s"" , instr -> name )"		5354214	0					
ANR	5354230	IdentifierDeclType	int		5354214	0					
ANR	5354231	Identifier	add		5354214	1					
ANR	5354232	AssignmentExpression	"add = snprintf ( str , bufsize , ""%s"" , instr -> name )"		5354214	2		=			
ANR	5354233	Identifier	add		5354214	0					
ANR	5354234	CallExpression	"snprintf ( str , bufsize , ""%s"" , instr -> name )"		5354214	1					
ANR	5354235	Callee	snprintf		5354214	0					
ANR	5354236	Identifier	snprintf		5354214	0					
ANR	5354237	ArgumentList	str		5354214	1					
ANR	5354238	Argument	str		5354214	0					
ANR	5354239	Identifier	str		5354214	0					
ANR	5354240	Argument	bufsize		5354214	1					
ANR	5354241	Identifier	bufsize		5354214	0					
ANR	5354242	Argument	"""%s"""		5354214	2					
ANR	5354243	PrimaryExpression	"""%s"""		5354214	0					
ANR	5354244	Argument	instr -> name		5354214	3					
ANR	5354245	PtrMemberAccess	instr -> name		5354214	0					
ANR	5354246	Identifier	instr		5354214	0					
ANR	5354247	Identifier	name		5354214	1					
ANR	5354248	ForStatement	for ( i = 0 ; add > 0 && i < instr -> n_args && add < bufsize ; ++ i )		5354214	3					
ANR	5354249	ForInit	i = 0 ;	435:6:24425:24430	5354214	0	True				
ANR	5354250	AssignmentExpression	i = 0		5354214	0		=			
ANR	5354251	Identifier	i		5354214	0					
ANR	5354252	PrimaryExpression	0		5354214	1					
ANR	5354253	Condition	add > 0 && i < instr -> n_args && add < bufsize	435:13:24432:24476	5354214	1	True				
ANR	5354254	AndExpression	add > 0 && i < instr -> n_args && add < bufsize		5354214	0		&&			
ANR	5354255	RelationalExpression	add > 0		5354214	0		>			
ANR	5354256	Identifier	add		5354214	0					
ANR	5354257	PrimaryExpression	0		5354214	1					
ANR	5354258	AndExpression	i < instr -> n_args && add < bufsize		5354214	1		&&			
ANR	5354259	RelationalExpression	i < instr -> n_args		5354214	0		<			
ANR	5354260	Identifier	i		5354214	0					
ANR	5354261	PtrMemberAccess	instr -> n_args		5354214	1					
ANR	5354262	Identifier	instr		5354214	0					
ANR	5354263	Identifier	n_args		5354214	1					
ANR	5354264	RelationalExpression	add < bufsize		5354214	1		<			
ANR	5354265	Identifier	add		5354214	0					
ANR	5354266	Identifier	bufsize		5354214	1					
ANR	5354267	UnaryExpression	++ i	435:60:24479:24481	5354214	2	True				
ANR	5354268	IncDec	++		5354214	0					
ANR	5354269	Identifier	i		5354214	1					
ANR	5354270	CompoundStatement		5:65:151:151	5354214	3					
ANR	5354271	IfStatement	if ( instr -> args [ i ] . type == TYPE_REG )		5354214	0					
ANR	5354272	Condition	instr -> args [ i ] . type == TYPE_REG	436:6:24492:24522	5354214	0	True				
ANR	5354273	EqualityExpression	instr -> args [ i ] . type == TYPE_REG		5354214	0		==			
ANR	5354274	MemberAccess	instr -> args [ i ] . type		5354214	0					
ANR	5354275	ArrayIndexing	instr -> args [ i ]		5354214	0					
ANR	5354276	PtrMemberAccess	instr -> args		5354214	0					
ANR	5354277	Identifier	instr		5354214	0					
ANR	5354278	Identifier	args		5354214	1					
ANR	5354279	Identifier	i		5354214	1					
ANR	5354280	Identifier	type		5354214	1					
ANR	5354281	Identifier	TYPE_REG		5354214	1					
ANR	5354282	CompoundStatement		6:39:192:192	5354214	1					
ANR	5354283	ExpressionStatement	"add += snprintf ( str + add , bufsize - add , "" r%u,"" , instr -> args [ i ] . value )"	437:3:24530:24603	5354214	0	True				
ANR	5354284	AssignmentExpression	"add += snprintf ( str + add , bufsize - add , "" r%u,"" , instr -> args [ i ] . value )"		5354214	0		+=			
ANR	5354285	Identifier	add		5354214	0					
ANR	5354286	CallExpression	"snprintf ( str + add , bufsize - add , "" r%u,"" , instr -> args [ i ] . value )"		5354214	1					
ANR	5354287	Callee	snprintf		5354214	0					
ANR	5354288	Identifier	snprintf		5354214	0					
ANR	5354289	ArgumentList	str + add		5354214	1					
ANR	5354290	Argument	str + add		5354214	0					
ANR	5354291	AdditiveExpression	str + add		5354214	0		+			
ANR	5354292	Identifier	str		5354214	0					
ANR	5354293	Identifier	add		5354214	1					
ANR	5354294	Argument	bufsize - add		5354214	1					
ANR	5354295	AdditiveExpression	bufsize - add		5354214	0		-			
ANR	5354296	Identifier	bufsize		5354214	0					
ANR	5354297	Identifier	add		5354214	1					
ANR	5354298	Argument	""" r%u,"""		5354214	2					
ANR	5354299	PrimaryExpression	""" r%u,"""		5354214	0					
ANR	5354300	Argument	instr -> args [ i ] . value		5354214	3					
ANR	5354301	MemberAccess	instr -> args [ i ] . value		5354214	0					
ANR	5354302	ArrayIndexing	instr -> args [ i ]		5354214	0					
ANR	5354303	PtrMemberAccess	instr -> args		5354214	0					
ANR	5354304	Identifier	instr		5354214	0					
ANR	5354305	Identifier	args		5354214	1					
ANR	5354306	Identifier	i		5354214	1					
ANR	5354307	Identifier	value		5354214	1					
ANR	5354308	ElseStatement	else		5354214	0					
ANR	5354309	IfStatement	if ( instr -> args [ i ] . type == TYPE_IMM )		5354214	0					
ANR	5354310	Condition	instr -> args [ i ] . type == TYPE_IMM	438:13:24618:24648	5354214	0	True				
ANR	5354311	EqualityExpression	instr -> args [ i ] . type == TYPE_IMM		5354214	0		==			
ANR	5354312	MemberAccess	instr -> args [ i ] . type		5354214	0					
ANR	5354313	ArrayIndexing	instr -> args [ i ]		5354214	0					
ANR	5354314	PtrMemberAccess	instr -> args		5354214	0					
ANR	5354315	Identifier	instr		5354214	0					
ANR	5354316	Identifier	args		5354214	1					
ANR	5354317	Identifier	i		5354214	1					
ANR	5354318	Identifier	type		5354214	1					
ANR	5354319	Identifier	TYPE_IMM		5354214	1					
ANR	5354320	CompoundStatement		8:46:318:318	5354214	1					
ANR	5354321	ExpressionStatement	"add += snprintf ( str + add , bufsize - add , "" 0x%x,"" , instr -> args [ i ] . value )"	439:3:24656:24730	5354214	0	True				
ANR	5354322	AssignmentExpression	"add += snprintf ( str + add , bufsize - add , "" 0x%x,"" , instr -> args [ i ] . value )"		5354214	0		+=			
ANR	5354323	Identifier	add		5354214	0					
ANR	5354324	CallExpression	"snprintf ( str + add , bufsize - add , "" 0x%x,"" , instr -> args [ i ] . value )"		5354214	1					
ANR	5354325	Callee	snprintf		5354214	0					
ANR	5354326	Identifier	snprintf		5354214	0					
ANR	5354327	ArgumentList	str + add		5354214	1					
ANR	5354328	Argument	str + add		5354214	0					
ANR	5354329	AdditiveExpression	str + add		5354214	0		+			
ANR	5354330	Identifier	str		5354214	0					
ANR	5354331	Identifier	add		5354214	1					
ANR	5354332	Argument	bufsize - add		5354214	1					
ANR	5354333	AdditiveExpression	bufsize - add		5354214	0		-			
ANR	5354334	Identifier	bufsize		5354214	0					
ANR	5354335	Identifier	add		5354214	1					
ANR	5354336	Argument	""" 0x%x,"""		5354214	2					
ANR	5354337	PrimaryExpression	""" 0x%x,"""		5354214	0					
ANR	5354338	Argument	instr -> args [ i ] . value		5354214	3					
ANR	5354339	MemberAccess	instr -> args [ i ] . value		5354214	0					
ANR	5354340	ArrayIndexing	instr -> args [ i ]		5354214	0					
ANR	5354341	PtrMemberAccess	instr -> args		5354214	0					
ANR	5354342	Identifier	instr		5354214	0					
ANR	5354343	Identifier	args		5354214	1					
ANR	5354344	Identifier	i		5354214	1					
ANR	5354345	Identifier	value		5354214	1					
ANR	5354346	ElseStatement	else		5354214	0					
ANR	5354347	IfStatement	if ( instr -> args [ i ] . type == TYPE_MEM )		5354214	0					
ANR	5354348	Condition	instr -> args [ i ] . type == TYPE_MEM	440:13:24745:24775	5354214	0	True				
ANR	5354349	EqualityExpression	instr -> args [ i ] . type == TYPE_MEM		5354214	0		==			
ANR	5354350	MemberAccess	instr -> args [ i ] . type		5354214	0					
ANR	5354351	ArrayIndexing	instr -> args [ i ]		5354214	0					
ANR	5354352	PtrMemberAccess	instr -> args		5354214	0					
ANR	5354353	Identifier	instr		5354214	0					
ANR	5354354	Identifier	args		5354214	1					
ANR	5354355	Identifier	i		5354214	1					
ANR	5354356	Identifier	type		5354214	1					
ANR	5354357	Identifier	TYPE_MEM		5354214	1					
ANR	5354358	CompoundStatement		10:46:445:445	5354214	1					
ANR	5354359	ExpressionStatement	"add += snprintf ( str + add , bufsize - add , "" 0x%x(r%d),"" , instr -> args [ i + 1 ] . value , instr -> args [ i ] . value )"	441:3:24783:24892	5354214	0	True				
ANR	5354360	AssignmentExpression	"add += snprintf ( str + add , bufsize - add , "" 0x%x(r%d),"" , instr -> args [ i + 1 ] . value , instr -> args [ i ] . value )"		5354214	0		+=			
ANR	5354361	Identifier	add		5354214	0					
ANR	5354362	CallExpression	"snprintf ( str + add , bufsize - add , "" 0x%x(r%d),"" , instr -> args [ i + 1 ] . value , instr -> args [ i ] . value )"		5354214	1					
ANR	5354363	Callee	snprintf		5354214	0					
ANR	5354364	Identifier	snprintf		5354214	0					
ANR	5354365	ArgumentList	str + add		5354214	1					
ANR	5354366	Argument	str + add		5354214	0					
ANR	5354367	AdditiveExpression	str + add		5354214	0		+			
ANR	5354368	Identifier	str		5354214	0					
ANR	5354369	Identifier	add		5354214	1					
ANR	5354370	Argument	bufsize - add		5354214	1					
ANR	5354371	AdditiveExpression	bufsize - add		5354214	0		-			
ANR	5354372	Identifier	bufsize		5354214	0					
ANR	5354373	Identifier	add		5354214	1					
ANR	5354374	Argument	""" 0x%x(r%d),"""		5354214	2					
ANR	5354375	PrimaryExpression	""" 0x%x(r%d),"""		5354214	0					
ANR	5354376	Argument	instr -> args [ i + 1 ] . value		5354214	3					
ANR	5354377	MemberAccess	instr -> args [ i + 1 ] . value		5354214	0					
ANR	5354378	ArrayIndexing	instr -> args [ i + 1 ]		5354214	0					
ANR	5354379	PtrMemberAccess	instr -> args		5354214	0					
ANR	5354380	Identifier	instr		5354214	0					
ANR	5354381	Identifier	args		5354214	1					
ANR	5354382	AdditiveExpression	i + 1		5354214	1		+			
ANR	5354383	Identifier	i		5354214	0					
ANR	5354384	PrimaryExpression	1		5354214	1					
ANR	5354385	Identifier	value		5354214	1					
ANR	5354386	Argument	instr -> args [ i ] . value		5354214	4					
ANR	5354387	MemberAccess	instr -> args [ i ] . value		5354214	0					
ANR	5354388	ArrayIndexing	instr -> args [ i ]		5354214	0					
ANR	5354389	PtrMemberAccess	instr -> args		5354214	0					
ANR	5354390	Identifier	instr		5354214	0					
ANR	5354391	Identifier	args		5354214	1					
ANR	5354392	Identifier	i		5354214	1					
ANR	5354393	Identifier	value		5354214	1					
ANR	5354394	ExpressionStatement	i ++	443:3:24897:24900	5354214	1	True				
ANR	5354395	PostIncDecOperationExpression	i ++		5354214	0					
ANR	5354396	Identifier	i		5354214	0					
ANR	5354397	IncDec	++		5354214	1					
ANR	5354398	ElseStatement	else		5354214	0					
ANR	5354399	IfStatement	if ( instr -> args [ i ] . type == TYPE_JMPI )		5354214	0					
ANR	5354400	Condition	instr -> args [ i ] . type == TYPE_JMPI	444:13:24915:24946	5354214	0	True				
ANR	5354401	EqualityExpression	instr -> args [ i ] . type == TYPE_JMPI		5354214	0		==			
ANR	5354402	MemberAccess	instr -> args [ i ] . type		5354214	0					
ANR	5354403	ArrayIndexing	instr -> args [ i ]		5354214	0					
ANR	5354404	PtrMemberAccess	instr -> args		5354214	0					
ANR	5354405	Identifier	instr		5354214	0					
ANR	5354406	Identifier	args		5354214	1					
ANR	5354407	Identifier	i		5354214	1					
ANR	5354408	Identifier	type		5354214	1					
ANR	5354409	Identifier	TYPE_JMPI		5354214	1					
ANR	5354410	CompoundStatement		15:3:621:682	5354214	1					
ANR	5354411	IdentifierDeclStatement	ut64 jump = addr + ( ( instr -> args [ i ] . value << 2 ) & 0xfffffffc ) ;	445:3:24954:25015	5354214	0	True				
ANR	5354412	IdentifierDecl	jump = addr + ( ( instr -> args [ i ] . value << 2 ) & 0xfffffffc )		5354214	0					
ANR	5354413	IdentifierDeclType	ut64		5354214	0					
ANR	5354414	Identifier	jump		5354214	1					
ANR	5354415	AssignmentExpression	jump = addr + ( ( instr -> args [ i ] . value << 2 ) & 0xfffffffc )		5354214	2		=			
ANR	5354416	Identifier	jump		5354214	0					
ANR	5354417	AdditiveExpression	addr + ( ( instr -> args [ i ] . value << 2 ) & 0xfffffffc )		5354214	1		+			
ANR	5354418	Identifier	addr		5354214	0					
ANR	5354419	BitAndExpression	( instr -> args [ i ] . value << 2 ) & 0xfffffffc		5354214	1		&			
ANR	5354420	ShiftExpression	instr -> args [ i ] . value << 2		5354214	0		<<			
ANR	5354421	MemberAccess	instr -> args [ i ] . value		5354214	0					
ANR	5354422	ArrayIndexing	instr -> args [ i ]		5354214	0					
ANR	5354423	PtrMemberAccess	instr -> args		5354214	0					
ANR	5354424	Identifier	instr		5354214	0					
ANR	5354425	Identifier	args		5354214	1					
ANR	5354426	Identifier	i		5354214	1					
ANR	5354427	Identifier	value		5354214	1					
ANR	5354428	PrimaryExpression	2		5354214	1					
ANR	5354429	PrimaryExpression	0xfffffffc		5354214	1					
ANR	5354430	Statement	add	446:3:25020:25022	5354214	1	True				
ANR	5354431	Statement	+=	446:7:25024:25025	5354214	2	True				
ANR	5354432	Statement	snprintf	446:10:25027:25034	5354214	3	True				
ANR	5354433	Statement	(	446:19:25036:25036	5354214	4	True				
ANR	5354434	Statement	str	446:20:25037:25039	5354214	5	True				
ANR	5354435	Statement	+	446:24:25041:25041	5354214	6	True				
ANR	5354436	Statement	add	446:26:25043:25045	5354214	7	True				
ANR	5354437	Statement	","	446:29:25046:25046	5354214	8	True				
ANR	5354438	Statement	bufsize	446:31:25048:25054	5354214	9	True				
ANR	5354439	Statement	-	446:39:25056:25056	5354214	10	True				
ANR	5354440	Statement	add	446:41:25058:25060	5354214	11	True				
ANR	5354441	Statement	","	446:44:25061:25061	5354214	12	True				
ANR	5354442	Statement	""" [0x%"""	446:46:25063:25069	5354214	13	True				
ANR	5354443	Statement	PFMT64x	446:54:25071:25077	5354214	14	True				
ANR	5354444	Statement	"""],"""	446:61:25078:25081	5354214	15	True				
ANR	5354445	Statement	","	446:65:25082:25082	5354214	16	True				
ANR	5354446	Statement	jump	446:67:25084:25087	5354214	17	True				
ANR	5354447	Statement	)	446:71:25088:25088	5354214	18	True				
ANR	5354448	ExpressionStatement		446:72:25089:25089	5354214	19	True				
ANR	5354449	ElseStatement	else		5354214	0					
ANR	5354450	IfStatement	if ( instr -> args [ i ] . type == TYPE_JMP )		5354214	0					
ANR	5354451	Condition	instr -> args [ i ] . type == TYPE_JMP	447:13:25104:25134	5354214	0	True				
ANR	5354452	EqualityExpression	instr -> args [ i ] . type == TYPE_JMP		5354214	0		==			
ANR	5354453	MemberAccess	instr -> args [ i ] . type		5354214	0					
ANR	5354454	ArrayIndexing	instr -> args [ i ]		5354214	0					
ANR	5354455	PtrMemberAccess	instr -> args		5354214	0					
ANR	5354456	Identifier	instr		5354214	0					
ANR	5354457	Identifier	args		5354214	1					
ANR	5354458	Identifier	i		5354214	1					
ANR	5354459	Identifier	type		5354214	1					
ANR	5354460	Identifier	TYPE_JMP		5354214	1					
ANR	5354461	CompoundStatement		18:3:809:852	5354214	1					
ANR	5354462	IdentifierDeclStatement	ut64 jump = addr + instr -> args [ i ] . value + 1 ;	448:3:25142:25185	5354214	0	True				
ANR	5354463	IdentifierDecl	jump = addr + instr -> args [ i ] . value + 1		5354214	0					
ANR	5354464	IdentifierDeclType	ut64		5354214	0					
ANR	5354465	Identifier	jump		5354214	1					
ANR	5354466	AssignmentExpression	jump = addr + instr -> args [ i ] . value + 1		5354214	2		=			
ANR	5354467	Identifier	jump		5354214	0					
ANR	5354468	AdditiveExpression	addr + instr -> args [ i ] . value + 1		5354214	1		+			
ANR	5354469	Identifier	addr		5354214	0					
ANR	5354470	AdditiveExpression	instr -> args [ i ] . value + 1		5354214	1		+			
ANR	5354471	MemberAccess	instr -> args [ i ] . value		5354214	0					
ANR	5354472	ArrayIndexing	instr -> args [ i ]		5354214	0					
ANR	5354473	PtrMemberAccess	instr -> args		5354214	0					
ANR	5354474	Identifier	instr		5354214	0					
ANR	5354475	Identifier	args		5354214	1					
ANR	5354476	Identifier	i		5354214	1					
ANR	5354477	Identifier	value		5354214	1					
ANR	5354478	PrimaryExpression	1		5354214	1					
ANR	5354479	Statement	add	449:3:25190:25192	5354214	1	True				
ANR	5354480	Statement	+=	449:7:25194:25195	5354214	2	True				
ANR	5354481	Statement	snprintf	449:10:25197:25204	5354214	3	True				
ANR	5354482	Statement	(	449:19:25206:25206	5354214	4	True				
ANR	5354483	Statement	str	449:20:25207:25209	5354214	5	True				
ANR	5354484	Statement	+	449:24:25211:25211	5354214	6	True				
ANR	5354485	Statement	add	449:26:25213:25215	5354214	7	True				
ANR	5354486	Statement	","	449:29:25216:25216	5354214	8	True				
ANR	5354487	Statement	bufsize	449:31:25218:25224	5354214	9	True				
ANR	5354488	Statement	-	449:39:25226:25226	5354214	10	True				
ANR	5354489	Statement	add	449:41:25228:25230	5354214	11	True				
ANR	5354490	Statement	","	449:44:25231:25231	5354214	12	True				
ANR	5354491	Statement	""" 0x%"""	449:46:25233:25238	5354214	13	True				
ANR	5354492	Statement	PFMT64x	449:53:25240:25246	5354214	14	True				
ANR	5354493	Statement	""","""	449:61:25248:25250	5354214	15	True				
ANR	5354494	Statement	","	449:64:25251:25251	5354214	16	True				
ANR	5354495	Statement	jump	449:66:25253:25256	5354214	17	True				
ANR	5354496	Statement	)	449:70:25257:25257	5354214	18	True				
ANR	5354497	ExpressionStatement		449:71:25258:25258	5354214	19	True				
ANR	5354498	ElseStatement	else		5354214	0					
ANR	5354499	IfStatement	if ( instr -> args [ i ] . type == TYPE_CTRL )		5354214	0					
ANR	5354500	Condition	instr -> args [ i ] . type == TYPE_CTRL	450:13:25273:25304	5354214	0	True				
ANR	5354501	EqualityExpression	instr -> args [ i ] . type == TYPE_CTRL		5354214	0		==			
ANR	5354502	MemberAccess	instr -> args [ i ] . type		5354214	0					
ANR	5354503	ArrayIndexing	instr -> args [ i ]		5354214	0					
ANR	5354504	PtrMemberAccess	instr -> args		5354214	0					
ANR	5354505	Identifier	instr		5354214	0					
ANR	5354506	Identifier	args		5354214	1					
ANR	5354507	Identifier	i		5354214	1					
ANR	5354508	Identifier	type		5354214	1					
ANR	5354509	Identifier	TYPE_CTRL		5354214	1					
ANR	5354510	CompoundStatement		21:3:979:1010	5354214	1					
ANR	5354511	IdentifierDeclStatement	ut32 pos = instr -> args [ i ] . value ;	451:3:25312:25343	5354214	0	True				
ANR	5354512	IdentifierDecl	pos = instr -> args [ i ] . value		5354214	0					
ANR	5354513	IdentifierDeclType	ut32		5354214	0					
ANR	5354514	Identifier	pos		5354214	1					
ANR	5354515	AssignmentExpression	pos = instr -> args [ i ] . value		5354214	2		=			
ANR	5354516	Identifier	pos		5354214	0					
ANR	5354517	MemberAccess	instr -> args [ i ] . value		5354214	1					
ANR	5354518	ArrayIndexing	instr -> args [ i ]		5354214	0					
ANR	5354519	PtrMemberAccess	instr -> args		5354214	0					
ANR	5354520	Identifier	instr		5354214	0					
ANR	5354521	Identifier	args		5354214	1					
ANR	5354522	Identifier	i		5354214	1					
ANR	5354523	Identifier	value		5354214	1					
ANR	5354524	IfStatement	if ( pos >= 32 )		5354214	1					
ANR	5354525	Condition	pos >= 32	452:7:25352:25360	5354214	0	True				
ANR	5354526	RelationalExpression	pos >= 32		5354214	0		>=			
ANR	5354527	Identifier	pos		5354214	0					
ANR	5354528	PrimaryExpression	32		5354214	1					
ANR	5354529	CompoundStatement		22:18:1030:1030	5354214	1					
ANR	5354530	ExpressionStatement	pos = 32	453:4:25369:25377	5354214	0	True				
ANR	5354531	AssignmentExpression	pos = 32		5354214	0		=			
ANR	5354532	Identifier	pos		5354214	0					
ANR	5354533	PrimaryExpression	32		5354214	1					
ANR	5354534	ExpressionStatement	"add += snprintf ( str + add , bufsize - add , "" %s,"" , mcore_ctrl_registers [ pos ] )"	455:3:25387:25464	5354214	2	True				
ANR	5354535	AssignmentExpression	"add += snprintf ( str + add , bufsize - add , "" %s,"" , mcore_ctrl_registers [ pos ] )"		5354214	0		+=			
ANR	5354536	Identifier	add		5354214	0					
ANR	5354537	CallExpression	"snprintf ( str + add , bufsize - add , "" %s,"" , mcore_ctrl_registers [ pos ] )"		5354214	1					
ANR	5354538	Callee	snprintf		5354214	0					
ANR	5354539	Identifier	snprintf		5354214	0					
ANR	5354540	ArgumentList	str + add		5354214	1					
ANR	5354541	Argument	str + add		5354214	0					
ANR	5354542	AdditiveExpression	str + add		5354214	0		+			
ANR	5354543	Identifier	str		5354214	0					
ANR	5354544	Identifier	add		5354214	1					
ANR	5354545	Argument	bufsize - add		5354214	1					
ANR	5354546	AdditiveExpression	bufsize - add		5354214	0		-			
ANR	5354547	Identifier	bufsize		5354214	0					
ANR	5354548	Identifier	add		5354214	1					
ANR	5354549	Argument	""" %s,"""		5354214	2					
ANR	5354550	PrimaryExpression	""" %s,"""		5354214	0					
ANR	5354551	Argument	mcore_ctrl_registers [ pos ]		5354214	3					
ANR	5354552	ArrayIndexing	mcore_ctrl_registers [ pos ]		5354214	0					
ANR	5354553	Identifier	mcore_ctrl_registers		5354214	0					
ANR	5354554	Identifier	pos		5354214	1					
ANR	5354555	IfStatement	if ( instr -> n_args )		5354214	4					
ANR	5354556	Condition	instr -> n_args	458:5:25478:25490	5354214	0	True				
ANR	5354557	PtrMemberAccess	instr -> n_args		5354214	0					
ANR	5354558	Identifier	instr		5354214	0					
ANR	5354559	Identifier	n_args		5354214	1					
ANR	5354560	CompoundStatement		28:20:1160:1160	5354214	1					
ANR	5354561	ExpressionStatement	* ( str + add - 1 ) = 0	460:2:25519:25539	5354214	0	True				
ANR	5354562	AssignmentExpression	* ( str + add - 1 ) = 0		5354214	0		=			
ANR	5354563	UnaryOperationExpression	* ( str + add - 1 )		5354214	0					
ANR	5354564	UnaryOperator	*		5354214	0					
ANR	5354565	AdditiveExpression	str + add - 1		5354214	1		+			
ANR	5354566	Identifier	str		5354214	0					
ANR	5354567	AdditiveExpression	add - 1		5354214	1		-			
ANR	5354568	Identifier	add		5354214	0					
ANR	5354569	PrimaryExpression	1		5354214	1					
ANR	5354570	PrimaryExpression	0		5354214	1					
ANR	5354571	ReturnType	void		5354214	1					
ANR	5354572	Identifier	print_loop		5354214	2					
ANR	5354573	ParameterList	"char * str , int size , ut64 addr , mcore_t * instr"		5354214	3					
ANR	5354574	Parameter	char * str	431:16:24284:24292	5354214	0	True				
ANR	5354575	ParameterType	char *		5354214	0					
ANR	5354576	Identifier	str		5354214	1					
ANR	5354577	Parameter	int size	431:27:24295:24302	5354214	1	True				
ANR	5354578	ParameterType	int		5354214	0					
ANR	5354579	Identifier	size		5354214	1					
ANR	5354580	Parameter	ut64 addr	431:37:24305:24313	5354214	2	True				
ANR	5354581	ParameterType	ut64		5354214	0					
ANR	5354582	Identifier	addr		5354214	1					
ANR	5354583	Parameter	mcore_t * instr	431:48:24316:24329	5354214	3	True				
ANR	5354584	ParameterType	mcore_t *		5354214	0					
ANR	5354585	Identifier	instr		5354214	1					
ANR	5354586	CFGEntryNode	ENTRY		5354214		True				
ANR	5354587	CFGExitNode	EXIT		5354214		True				
ANR	5354588	Symbol	TYPE_JMP		5354214						
ANR	5354589	Symbol	instr -> args [ i + 1 ] . value		5354214						
ANR	5354590	Symbol	TYPE_REG		5354214						
ANR	5354591	Symbol	instr -> n_args		5354214						
ANR	5354592	Symbol	TYPE_IMM		5354214						
ANR	5354593	Symbol	instr -> args [ i ] . value		5354214						
ANR	5354594	Symbol	instr -> args		5354214						
ANR	5354595	Symbol	pos		5354214						
ANR	5354596	Symbol	* ( str + add - 1 )		5354214						
ANR	5354597	Symbol	instr -> name		5354214						
ANR	5354598	Symbol	instr		5354214						
ANR	5354599	Symbol	TYPE_CTRL		5354214						
ANR	5354600	Symbol	TYPE_MEM		5354214						
ANR	5354601	Symbol	* str		5354214						
ANR	5354602	Symbol	addr		5354214						
ANR	5354603	Symbol	snprintf		5354214						
ANR	5354604	Symbol	jump		5354214						
ANR	5354605	Symbol	add		5354214						
ANR	5354606	Symbol	* instr -> args		5354214						
ANR	5354607	Symbol	bufsize		5354214						
ANR	5354608	Symbol	i		5354214						
ANR	5354609	Symbol	* instr		5354214						
ANR	5354610	Symbol	TYPE_JMPI		5354214						
ANR	5354611	Symbol	str		5354214						
ANR	5354612	Symbol	instr -> args [ i ] . type		5354214						
ANR	5354613	Symbol	* i		5354214						
ANR	5354614	Symbol	size		5354214						
ANR	5354615	Symbol	* add		5354214						
ANR	5354616	Symbol	* mcore_ctrl_registers		5354214						
ANR	5354617	Symbol	* * instr		5354214						
ANR	5354618	Symbol	* pos		5354214						
ANR	5354619	Symbol	mcore_ctrl_registers		5354214						
ANR	5354620	Function	mcore_snprint	464:0:25547:25990							
ANR	5354621	FunctionDef	"mcore_snprint (char * str , int size , ut64 addr , mcore_t * instr)"		5354620	0					
ANR	5354622	CompoundStatement		464:67:25614:25990	5354620	0					
ANR	5354623	IdentifierDeclStatement	ut32 imm ;	465:1:25617:25625	5354620	0	True				
ANR	5354624	IdentifierDecl	imm		5354620	0					
ANR	5354625	IdentifierDeclType	ut32		5354620	0					
ANR	5354626	Identifier	imm		5354620	1					
ANR	5354627	IfStatement	if ( ! instr || ! str )		5354620	1					
ANR	5354628	Condition	! instr || ! str	466:5:25632:25645	5354620	0	True				
ANR	5354629	OrExpression	! instr || ! str		5354620	0		||			
ANR	5354630	UnaryOperationExpression	! instr		5354620	0					
ANR	5354631	UnaryOperator	!		5354620	0					
ANR	5354632	Identifier	instr		5354620	1					
ANR	5354633	UnaryOperationExpression	! str		5354620	1					
ANR	5354634	UnaryOperator	!		5354620	0					
ANR	5354635	Identifier	str		5354620	1					
ANR	5354636	CompoundStatement		3:21:33:33	5354620	1					
ANR	5354637	ReturnStatement	return ;	467:2:25652:25658	5354620	0	True				
ANR	5354638	SwitchStatement	switch ( instr -> type )		5354620	2					
ANR	5354639	Condition	instr -> type	469:9:25672:25682	5354620	0	True				
ANR	5354640	PtrMemberAccess	instr -> type		5354620	0					
ANR	5354641	Identifier	instr		5354620	0					
ANR	5354642	Identifier	type		5354620	1					
ANR	5354643	CompoundStatement		6:22:70:70	5354620	1					
ANR	5354644	Label	case R_ANAL_OP_TYPE_LOAD :	470:1:25688:25712	5354620	0	True				
ANR	5354645	Identifier	R_ANAL_OP_TYPE_LOAD		5354620	0					
ANR	5354646	Label	case R_ANAL_OP_TYPE_STORE :	471:1:25715:25740	5354620	1	True				
ANR	5354647	Identifier	R_ANAL_OP_TYPE_STORE		5354620	0					
ANR	5354648	ExpressionStatement	imm = instr -> args [ 1 ] . value << load_shift [ instr -> args [ 3 ] . value ]	472:2:25744:25806	5354620	2	True				
ANR	5354649	AssignmentExpression	imm = instr -> args [ 1 ] . value << load_shift [ instr -> args [ 3 ] . value ]		5354620	0		=			
ANR	5354650	Identifier	imm		5354620	0					
ANR	5354651	ShiftExpression	instr -> args [ 1 ] . value << load_shift [ instr -> args [ 3 ] . value ]		5354620	1		<<			
ANR	5354652	MemberAccess	instr -> args [ 1 ] . value		5354620	0					
ANR	5354653	ArrayIndexing	instr -> args [ 1 ]		5354620	0					
ANR	5354654	PtrMemberAccess	instr -> args		5354620	0					
ANR	5354655	Identifier	instr		5354620	0					
ANR	5354656	Identifier	args		5354620	1					
ANR	5354657	PrimaryExpression	1		5354620	1					
ANR	5354658	Identifier	value		5354620	1					
ANR	5354659	ArrayIndexing	load_shift [ instr -> args [ 3 ] . value ]		5354620	1					
ANR	5354660	Identifier	load_shift		5354620	0					
ANR	5354661	MemberAccess	instr -> args [ 3 ] . value		5354620	1					
ANR	5354662	ArrayIndexing	instr -> args [ 3 ]		5354620	0					
ANR	5354663	PtrMemberAccess	instr -> args		5354620	0					
ANR	5354664	Identifier	instr		5354620	0					
ANR	5354665	Identifier	args		5354620	1					
ANR	5354666	PrimaryExpression	3		5354620	1					
ANR	5354667	Identifier	value		5354620	1					
ANR	5354668	ExpressionStatement	"snprintf ( str , size , ""%s r%u, (r%u, 0x%x)"" , instr -> name , instr -> args [ 2 ] . value , instr -> args [ 0 ] . value , imm )"	473:2:25810:25918	5354620	3	True				
ANR	5354669	CallExpression	"snprintf ( str , size , ""%s r%u, (r%u, 0x%x)"" , instr -> name , instr -> args [ 2 ] . value , instr -> args [ 0 ] . value , imm )"		5354620	0					
ANR	5354670	Callee	snprintf		5354620	0					
ANR	5354671	Identifier	snprintf		5354620	0					
ANR	5354672	ArgumentList	str		5354620	1					
ANR	5354673	Argument	str		5354620	0					
ANR	5354674	Identifier	str		5354620	0					
ANR	5354675	Argument	size		5354620	1					
ANR	5354676	Identifier	size		5354620	0					
ANR	5354677	Argument	"""%s r%u, (r%u, 0x%x)"""		5354620	2					
ANR	5354678	PrimaryExpression	"""%s r%u, (r%u, 0x%x)"""		5354620	0					
ANR	5354679	Argument	instr -> name		5354620	3					
ANR	5354680	PtrMemberAccess	instr -> name		5354620	0					
ANR	5354681	Identifier	instr		5354620	0					
ANR	5354682	Identifier	name		5354620	1					
ANR	5354683	Argument	instr -> args [ 2 ] . value		5354620	4					
ANR	5354684	MemberAccess	instr -> args [ 2 ] . value		5354620	0					
ANR	5354685	ArrayIndexing	instr -> args [ 2 ]		5354620	0					
ANR	5354686	PtrMemberAccess	instr -> args		5354620	0					
ANR	5354687	Identifier	instr		5354620	0					
ANR	5354688	Identifier	args		5354620	1					
ANR	5354689	PrimaryExpression	2		5354620	1					
ANR	5354690	Identifier	value		5354620	1					
ANR	5354691	Argument	instr -> args [ 0 ] . value		5354620	5					
ANR	5354692	MemberAccess	instr -> args [ 0 ] . value		5354620	0					
ANR	5354693	ArrayIndexing	instr -> args [ 0 ]		5354620	0					
ANR	5354694	PtrMemberAccess	instr -> args		5354620	0					
ANR	5354695	Identifier	instr		5354620	0					
ANR	5354696	Identifier	args		5354620	1					
ANR	5354697	PrimaryExpression	0		5354620	1					
ANR	5354698	Identifier	value		5354620	1					
ANR	5354699	Argument	imm		5354620	6					
ANR	5354700	Identifier	imm		5354620	0					
ANR	5354701	BreakStatement	break ;	475:2:25922:25927	5354620	4	True				
ANR	5354702	Label	default :	476:1:25930:25937	5354620	5	True				
ANR	5354703	Identifier	default		5354620	0					
ANR	5354704	ExpressionStatement	"print_loop ( str , size , addr , instr )"	477:2:25941:25976	5354620	6	True				
ANR	5354705	CallExpression	"print_loop ( str , size , addr , instr )"		5354620	0					
ANR	5354706	Callee	print_loop		5354620	0					
ANR	5354707	Identifier	print_loop		5354620	0					
ANR	5354708	ArgumentList	str		5354620	1					
ANR	5354709	Argument	str		5354620	0					
ANR	5354710	Identifier	str		5354620	0					
ANR	5354711	Argument	size		5354620	1					
ANR	5354712	Identifier	size		5354620	0					
ANR	5354713	Argument	addr		5354620	2					
ANR	5354714	Identifier	addr		5354620	0					
ANR	5354715	Argument	instr		5354620	3					
ANR	5354716	Identifier	instr		5354620	0					
ANR	5354717	BreakStatement	break ;	478:2:25980:25985	5354620	7	True				
ANR	5354718	ReturnType	void		5354620	1					
ANR	5354719	Identifier	mcore_snprint		5354620	2					
ANR	5354720	ParameterList	"char * str , int size , ut64 addr , mcore_t * instr"		5354620	3					
ANR	5354721	Parameter	char * str	464:19:25566:25574	5354620	0	True				
ANR	5354722	ParameterType	char *		5354620	0					
ANR	5354723	Identifier	str		5354620	1					
ANR	5354724	Parameter	int size	464:30:25577:25584	5354620	1	True				
ANR	5354725	ParameterType	int		5354620	0					
ANR	5354726	Identifier	size		5354620	1					
ANR	5354727	Parameter	ut64 addr	464:40:25587:25595	5354620	2	True				
ANR	5354728	ParameterType	ut64		5354620	0					
ANR	5354729	Identifier	addr		5354620	1					
ANR	5354730	Parameter	mcore_t * instr	464:51:25598:25611	5354620	3	True				
ANR	5354731	ParameterType	mcore_t *		5354620	0					
ANR	5354732	Identifier	instr		5354620	1					
ANR	5354733	CFGEntryNode	ENTRY		5354620		True				
ANR	5354734	CFGExitNode	EXIT		5354620		True				
ANR	5354735	Symbol	* instr -> args		5354620						
ANR	5354736	Symbol	instr -> args [ 1 ] . value		5354620						
ANR	5354737	Symbol	instr -> args [ 0 ] . value		5354620						
ANR	5354738	Symbol	load_shift		5354620						
ANR	5354739	Symbol	* * * instr		5354620						
ANR	5354740	Symbol	instr -> type		5354620						
ANR	5354741	Symbol	instr -> args [ 2 ] . value		5354620						
ANR	5354742	Symbol	imm		5354620						
ANR	5354743	Symbol	instr -> args [ 3 ] . value		5354620						
ANR	5354744	Symbol	* instr		5354620						
ANR	5354745	Symbol	* instr -> args [ 3 ] . value		5354620						
ANR	5354746	Symbol	str		5354620						
ANR	5354747	Symbol	* * instr -> args		5354620						
ANR	5354748	Symbol	instr -> args		5354620						
ANR	5354749	Symbol	size		5354620						
ANR	5354750	Symbol	instr -> name		5354620						
ANR	5354751	Symbol	instr		5354620						
ANR	5354752	Symbol	* load_shift		5354620						
ANR	5354753	Symbol	addr		5354620						
ANR	5354754	Symbol	* * instr		5354620						
