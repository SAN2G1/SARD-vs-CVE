command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5086298	File	data/converged/CVE-2019-16718~_radare2/libr_util_base91.c								
ANR	5086299	DeclStmt									
ANR	5086300	Decl							const char	const char [ ]	b91
ANR	5086301	Function	get_char_index	15:0:582:707							
ANR	5086302	FunctionDef	get_char_index (const char c)		5086301	0					
ANR	5086303	CompoundStatement		15:33:615:707	5086301	0					
ANR	5086304	IdentifierDeclStatement	int i ;	16:1:618:623	5086301	0	True				
ANR	5086305	IdentifierDecl	i		5086301	0					
ANR	5086306	IdentifierDeclType	int		5086301	0					
ANR	5086307	Identifier	i		5086301	1					
ANR	5086308	ForStatement	for ( i = 0 ; i < 91 ; i ++ )		5086301	1					
ANR	5086309	ForInit	i = 0 ;	17:6:631:636	5086301	0	True				
ANR	5086310	AssignmentExpression	i = 0		5086301	0		=			
ANR	5086311	Identifier	i		5086301	0					
ANR	5086312	PrimaryExpression	0		5086301	1					
ANR	5086313	Condition	i < 91	17:13:638:643	5086301	1	True				
ANR	5086314	RelationalExpression	i < 91		5086301	0		<			
ANR	5086315	Identifier	i		5086301	0					
ANR	5086316	PrimaryExpression	91		5086301	1					
ANR	5086317	PostIncDecOperationExpression	i ++	17:21:646:648	5086301	2	True				
ANR	5086318	Identifier	i		5086301	0					
ANR	5086319	IncDec	++		5086301	1					
ANR	5086320	CompoundStatement		3:27:36:36	5086301	3					
ANR	5086321	IfStatement	if ( b91 [ i ] == c )		5086301	0					
ANR	5086322	Condition	b91 [ i ] == c	18:6:660:670	5086301	0	True				
ANR	5086323	EqualityExpression	b91 [ i ] == c		5086301	0		==			
ANR	5086324	ArrayIndexing	b91 [ i ]		5086301	0					
ANR	5086325	Identifier	b91		5086301	0					
ANR	5086326	Identifier	i		5086301	1					
ANR	5086327	Identifier	c		5086301	1					
ANR	5086328	CompoundStatement		4:19:57:57	5086301	1					
ANR	5086329	ReturnStatement	return i ;	19:3:678:686	5086301	0	True				
ANR	5086330	Identifier	i		5086301	0					
ANR	5086331	ReturnStatement	return - 1 ;	22:1:696:705	5086301	2	True				
ANR	5086332	UnaryOperationExpression	- 1		5086301	0					
ANR	5086333	UnaryOperator	-		5086301	0					
ANR	5086334	PrimaryExpression	1		5086301	1					
ANR	5086335	ReturnType	int		5086301	1					
ANR	5086336	Identifier	get_char_index		5086301	2					
ANR	5086337	ParameterList	const char c		5086301	3					
ANR	5086338	Parameter	const char c	15:19:601:612	5086301	0	True				
ANR	5086339	ParameterType	const char		5086301	0					
ANR	5086340	Identifier	c		5086301	1					
ANR	5086341	CFGEntryNode	ENTRY		5086301		True				
ANR	5086342	CFGExitNode	EXIT		5086301		True				
ANR	5086343	Symbol	c		5086301						
ANR	5086344	Symbol	* i		5086301						
ANR	5086345	Symbol	i		5086301						
ANR	5086346	Symbol	* b91		5086301						
ANR	5086347	Symbol	b91		5086301						
ANR	5086348	Function	r_base91_decode	25:0:710:1308							
ANR	5086349	FunctionDef	"r_base91_decode (ut8 * bout , const char * bin , int len)"		5086348	0					
ANR	5086350	CompoundStatement		25:63:773:1308	5086348	0					
ANR	5086351	IdentifierDeclStatement	"int in , out ;"	26:1:776:787	5086348	0	True				
ANR	5086352	IdentifierDecl	in		5086348	0					
ANR	5086353	IdentifierDeclType	int		5086348	0					
ANR	5086354	Identifier	in		5086348	1					
ANR	5086355	IdentifierDecl	out		5086348	1					
ANR	5086356	IdentifierDeclType	int		5086348	0					
ANR	5086357	Identifier	out		5086348	1					
ANR	5086358	IdentifierDeclStatement	int v = - 1 ;	27:1:790:800	5086348	1	True				
ANR	5086359	IdentifierDecl	v = - 1		5086348	0					
ANR	5086360	IdentifierDeclType	int		5086348	0					
ANR	5086361	Identifier	v		5086348	1					
ANR	5086362	AssignmentExpression	v = - 1		5086348	2		=			
ANR	5086363	Identifier	v		5086348	0					
ANR	5086364	UnaryOperationExpression	- 1		5086348	1					
ANR	5086365	UnaryOperator	-		5086348	0					
ANR	5086366	PrimaryExpression	1		5086348	1					
ANR	5086367	IdentifierDeclStatement	int b = 0 ;	28:1:803:812	5086348	2	True				
ANR	5086368	IdentifierDecl	b = 0		5086348	0					
ANR	5086369	IdentifierDeclType	int		5086348	0					
ANR	5086370	Identifier	b		5086348	1					
ANR	5086371	AssignmentExpression	b = 0		5086348	2		=			
ANR	5086372	Identifier	b		5086348	0					
ANR	5086373	PrimaryExpression	0		5086348	1					
ANR	5086374	IdentifierDeclStatement	int n = 0 ;	29:1:815:824	5086348	3	True				
ANR	5086375	IdentifierDecl	n = 0		5086348	0					
ANR	5086376	IdentifierDeclType	int		5086348	0					
ANR	5086377	Identifier	n		5086348	1					
ANR	5086378	AssignmentExpression	n = 0		5086348	2		=			
ANR	5086379	Identifier	n		5086348	0					
ANR	5086380	PrimaryExpression	0		5086348	1					
ANR	5086381	IdentifierDeclStatement	int c ;	30:1:827:832	5086348	4	True				
ANR	5086382	IdentifierDecl	c		5086348	0					
ANR	5086383	IdentifierDeclType	int		5086348	0					
ANR	5086384	Identifier	c		5086348	1					
ANR	5086385	IfStatement	if ( len < 0 )		5086348	5					
ANR	5086386	Condition	len < 0	31:5:839:845	5086348	0	True				
ANR	5086387	RelationalExpression	len < 0		5086348	0		<			
ANR	5086388	Identifier	len		5086348	0					
ANR	5086389	PrimaryExpression	0		5086348	1					
ANR	5086390	CompoundStatement		7:14:74:74	5086348	1					
ANR	5086391	ExpressionStatement	len = strlen ( bin )	32:2:852:870	5086348	0	True				
ANR	5086392	AssignmentExpression	len = strlen ( bin )		5086348	0		=			
ANR	5086393	Identifier	len		5086348	0					
ANR	5086394	CallExpression	strlen ( bin )		5086348	1					
ANR	5086395	Callee	strlen		5086348	0					
ANR	5086396	Identifier	strlen		5086348	0					
ANR	5086397	ArgumentList	bin		5086348	1					
ANR	5086398	Argument	bin		5086348	0					
ANR	5086399	Identifier	bin		5086348	0					
ANR	5086400	ForStatement	for ( in = out = 0 ; in < len ; in ++ )		5086348	6					
ANR	5086401	ForInit	in = out = 0 ;	34:6:881:893	5086348	0	True				
ANR	5086402	AssignmentExpression	in = out = 0		5086348	0		=			
ANR	5086403	Identifier	in		5086348	0					
ANR	5086404	AssignmentExpression	out = 0		5086348	1		=			
ANR	5086405	Identifier	out		5086348	0					
ANR	5086406	PrimaryExpression	0		5086348	1					
ANR	5086407	Condition	in < len	34:20:895:902	5086348	1	True				
ANR	5086408	RelationalExpression	in < len		5086348	0		<			
ANR	5086409	Identifier	in		5086348	0					
ANR	5086410	Identifier	len		5086348	1					
ANR	5086411	PostIncDecOperationExpression	in ++	34:30:905:908	5086348	2	True				
ANR	5086412	Identifier	in		5086348	0					
ANR	5086413	IncDec	++		5086348	1					
ANR	5086414	CompoundStatement		10:36:137:137	5086348	3					
ANR	5086415	ExpressionStatement	c = get_char_index ( bin [ in ] )	35:2:915:942	5086348	0	True				
ANR	5086416	AssignmentExpression	c = get_char_index ( bin [ in ] )		5086348	0		=			
ANR	5086417	Identifier	c		5086348	0					
ANR	5086418	CallExpression	get_char_index ( bin [ in ] )		5086348	1					
ANR	5086419	Callee	get_char_index		5086348	0					
ANR	5086420	Identifier	get_char_index		5086348	0					
ANR	5086421	ArgumentList	bin [ in ]		5086348	1					
ANR	5086422	Argument	bin [ in ]		5086348	0					
ANR	5086423	ArrayIndexing	bin [ in ]		5086348	0					
ANR	5086424	Identifier	bin		5086348	0					
ANR	5086425	Identifier	in		5086348	1					
ANR	5086426	IfStatement	if ( c == - 1 )		5086348	1					
ANR	5086427	Condition	c == - 1	36:6:950:956	5086348	0	True				
ANR	5086428	EqualityExpression	c == - 1		5086348	0		==			
ANR	5086429	Identifier	c		5086348	0					
ANR	5086430	UnaryOperationExpression	- 1		5086348	1					
ANR	5086431	UnaryOperator	-		5086348	0					
ANR	5086432	PrimaryExpression	1		5086348	1					
ANR	5086433	CompoundStatement		12:15:185:185	5086348	1					
ANR	5086434	ContinueStatement	continue ;	37:3:964:972	5086348	0	True				
ANR	5086435	IfStatement	if ( v < 0 )		5086348	2					
ANR	5086436	Condition	v < 0	39:6:984:988	5086348	0	True				
ANR	5086437	RelationalExpression	v < 0		5086348	0		<			
ANR	5086438	Identifier	v		5086348	0					
ANR	5086439	PrimaryExpression	0		5086348	1					
ANR	5086440	CompoundStatement		15:13:217:217	5086348	1					
ANR	5086441	ExpressionStatement	v = c	40:3:996:1001	5086348	0	True				
ANR	5086442	AssignmentExpression	v = c		5086348	0		=			
ANR	5086443	Identifier	v		5086348	0					
ANR	5086444	Identifier	c		5086348	1					
ANR	5086445	ElseStatement	else		5086348	0					
ANR	5086446	CompoundStatement		17:9:238:238	5086348	0					
ANR	5086447	ExpressionStatement	v += c * 91	42:3:1017:1028	5086348	0	True				
ANR	5086448	AssignmentExpression	v += c * 91		5086348	0		+=			
ANR	5086449	Identifier	v		5086348	0					
ANR	5086450	MultiplicativeExpression	c * 91		5086348	1		*			
ANR	5086451	Identifier	c		5086348	0					
ANR	5086452	PrimaryExpression	91		5086348	1					
ANR	5086453	ExpressionStatement	b |= ( v << n )	43:3:1033:1046	5086348	1	True				
ANR	5086454	AssignmentExpression	b |= ( v << n )		5086348	0		|=			
ANR	5086455	Identifier	b		5086348	0					
ANR	5086456	ShiftExpression	v << n		5086348	1		<<			
ANR	5086457	Identifier	v		5086348	0					
ANR	5086458	Identifier	n		5086348	1					
ANR	5086459	IfStatement	if ( ( v & 8191 ) > 88 )		5086348	2					
ANR	5086460	Condition	( v & 8191 ) > 88	44:7:1055:1067	5086348	0	True				
ANR	5086461	RelationalExpression	( v & 8191 ) > 88		5086348	0		>			
ANR	5086462	BitAndExpression	v & 8191		5086348	0		&			
ANR	5086463	Identifier	v		5086348	0					
ANR	5086464	PrimaryExpression	8191		5086348	1					
ANR	5086465	PrimaryExpression	88		5086348	1					
ANR	5086466	CompoundStatement		20:22:296:296	5086348	1					
ANR	5086467	ExpressionStatement	n += 13	45:4:1076:1083	5086348	0	True				
ANR	5086468	AssignmentExpression	n += 13		5086348	0		+=			
ANR	5086469	Identifier	n		5086348	0					
ANR	5086470	PrimaryExpression	13		5086348	1					
ANR	5086471	ElseStatement	else		5086348	0					
ANR	5086472	CompoundStatement		22:10:321:321	5086348	0					
ANR	5086473	ExpressionStatement	n += 14	47:4:1101:1108	5086348	0	True				
ANR	5086474	AssignmentExpression	n += 14		5086348	0		+=			
ANR	5086475	Identifier	n		5086348	0					
ANR	5086476	PrimaryExpression	14		5086348	1					
ANR	5086477	WhileStatement	while ( true )		5086348	3					
ANR	5086478	Condition	true	49:10:1125:1128	5086348	0	True				
ANR	5086479	Identifier	true		5086348	0					
ANR	5086480	CompoundStatement		25:16:357:357	5086348	1					
ANR	5086481	ExpressionStatement	bout [ out ++ ] = b & 255	50:4:1137:1158	5086348	0	True				
ANR	5086482	AssignmentExpression	bout [ out ++ ] = b & 255		5086348	0		=			
ANR	5086483	ArrayIndexing	bout [ out ++ ]		5086348	0					
ANR	5086484	Identifier	bout		5086348	0					
ANR	5086485	PostIncDecOperationExpression	out ++		5086348	1					
ANR	5086486	Identifier	out		5086348	0					
ANR	5086487	IncDec	++		5086348	1					
ANR	5086488	BitAndExpression	b & 255		5086348	1		&			
ANR	5086489	Identifier	b		5086348	0					
ANR	5086490	PrimaryExpression	255		5086348	1					
ANR	5086491	ExpressionStatement	b >>= 8	51:4:1164:1171	5086348	1	True				
ANR	5086492	AssignmentExpression	b >>= 8		5086348	0		>>=			
ANR	5086493	Identifier	b		5086348	0					
ANR	5086494	PrimaryExpression	8		5086348	1					
ANR	5086495	ExpressionStatement	n -= 8	52:4:1177:1183	5086348	2	True				
ANR	5086496	AssignmentExpression	n -= 8		5086348	0		-=			
ANR	5086497	Identifier	n		5086348	0					
ANR	5086498	PrimaryExpression	8		5086348	1					
ANR	5086499	IfStatement	if ( n <= 7 )		5086348	3					
ANR	5086500	Condition	n <= 7	53:8:1193:1198	5086348	0	True				
ANR	5086501	RelationalExpression	n <= 7		5086348	0		<=			
ANR	5086502	Identifier	n		5086348	0					
ANR	5086503	PrimaryExpression	7		5086348	1					
ANR	5086504	CompoundStatement		29:16:427:427	5086348	1					
ANR	5086505	BreakStatement	break ;	54:5:1208:1213	5086348	0	True				
ANR	5086506	ExpressionStatement	v = - 1	57:3:1229:1235	5086348	4	True				
ANR	5086507	AssignmentExpression	v = - 1		5086348	0		=			
ANR	5086508	Identifier	v		5086348	0					
ANR	5086509	UnaryOperationExpression	- 1		5086348	1					
ANR	5086510	UnaryOperator	-		5086348	0					
ANR	5086511	PrimaryExpression	1		5086348	1					
ANR	5086512	IfStatement	if ( v + 1 )		5086348	7					
ANR	5086513	Condition	v + 1	60:5:1249:1251	5086348	0	True				
ANR	5086514	AdditiveExpression	v + 1		5086348	0		+			
ANR	5086515	Identifier	v		5086348	0					
ANR	5086516	PrimaryExpression	1		5086348	1					
ANR	5086517	CompoundStatement		36:10:480:480	5086348	1					
ANR	5086518	ExpressionStatement	bout [ out ++ ] = ( b | v << n ) & 255	61:2:1258:1290	5086348	0	True				
ANR	5086519	AssignmentExpression	bout [ out ++ ] = ( b | v << n ) & 255		5086348	0		=			
ANR	5086520	ArrayIndexing	bout [ out ++ ]		5086348	0					
ANR	5086521	Identifier	bout		5086348	0					
ANR	5086522	PostIncDecOperationExpression	out ++		5086348	1					
ANR	5086523	Identifier	out		5086348	0					
ANR	5086524	IncDec	++		5086348	1					
ANR	5086525	BitAndExpression	( b | v << n ) & 255		5086348	1		&			
ANR	5086526	InclusiveOrExpression	b | v << n		5086348	0		|			
ANR	5086527	Identifier	b		5086348	0					
ANR	5086528	ShiftExpression	v << n		5086348	1		<<			
ANR	5086529	Identifier	v		5086348	0					
ANR	5086530	Identifier	n		5086348	1					
ANR	5086531	PrimaryExpression	255		5086348	1					
ANR	5086532	ReturnStatement	return out ;	63:1:1296:1306	5086348	8	True				
ANR	5086533	Identifier	out		5086348	0					
ANR	5086534	ReturnType	R_API int		5086348	1					
ANR	5086535	Identifier	r_base91_decode		5086348	2					
ANR	5086536	ParameterList	"ut8 * bout , const char * bin , int len"		5086348	3					
ANR	5086537	Parameter	ut8 * bout	25:26:736:744	5086348	0	True				
ANR	5086538	ParameterType	ut8 *		5086348	0					
ANR	5086539	Identifier	bout		5086348	1					
ANR	5086540	Parameter	const char * bin	25:37:747:761	5086348	1	True				
ANR	5086541	ParameterType	const char *		5086348	0					
ANR	5086542	Identifier	bin		5086348	1					
ANR	5086543	Parameter	int len	25:54:764:770	5086348	2	True				
ANR	5086544	ParameterType	int		5086348	0					
ANR	5086545	Identifier	len		5086348	1					
ANR	5086546	CFGEntryNode	ENTRY		5086348		True				
ANR	5086547	CFGExitNode	EXIT		5086348		True				
ANR	5086548	Symbol	bout		5086348						
ANR	5086549	Symbol	b		5086348						
ANR	5086550	Symbol	c		5086348						
ANR	5086551	Symbol	in		5086348						
ANR	5086552	Symbol	bin		5086348						
ANR	5086553	Symbol	* in		5086348						
ANR	5086554	Symbol	n		5086348						
ANR	5086555	Symbol	* bin		5086348						
ANR	5086556	Symbol	out		5086348						
ANR	5086557	Symbol	strlen		5086348						
ANR	5086558	Symbol	len		5086348						
ANR	5086559	Symbol	v		5086348						
ANR	5086560	Symbol	true		5086348						
ANR	5086561	Symbol	get_char_index		5086348						
ANR	5086562	Symbol	* bout		5086348						
ANR	5086563	Function	r_base91_encode	66:0:1311:1873							
ANR	5086564	FunctionDef	"r_base91_encode (char * bout , const ut8 * bin , int len)"		5086563	0					
ANR	5086565	CompoundStatement		66:63:1374:1873	5086563	0					
ANR	5086566	IdentifierDeclStatement	"int in , out ;"	67:1:1377:1388	5086563	0	True				
ANR	5086567	IdentifierDecl	in		5086563	0					
ANR	5086568	IdentifierDeclType	int		5086563	0					
ANR	5086569	Identifier	in		5086563	1					
ANR	5086570	IdentifierDecl	out		5086563	1					
ANR	5086571	IdentifierDeclType	int		5086563	0					
ANR	5086572	Identifier	out		5086563	1					
ANR	5086573	IdentifierDeclStatement	int v = 0 ;	68:1:1391:1400	5086563	1	True				
ANR	5086574	IdentifierDecl	v = 0		5086563	0					
ANR	5086575	IdentifierDeclType	int		5086563	0					
ANR	5086576	Identifier	v		5086563	1					
ANR	5086577	AssignmentExpression	v = 0		5086563	2		=			
ANR	5086578	Identifier	v		5086563	0					
ANR	5086579	PrimaryExpression	0		5086563	1					
ANR	5086580	IdentifierDeclStatement	int b = 0 ;	69:1:1403:1412	5086563	2	True				
ANR	5086581	IdentifierDecl	b = 0		5086563	0					
ANR	5086582	IdentifierDeclType	int		5086563	0					
ANR	5086583	Identifier	b		5086563	1					
ANR	5086584	AssignmentExpression	b = 0		5086563	2		=			
ANR	5086585	Identifier	b		5086563	0					
ANR	5086586	PrimaryExpression	0		5086563	1					
ANR	5086587	IdentifierDeclStatement	int n = 0 ;	70:1:1415:1424	5086563	3	True				
ANR	5086588	IdentifierDecl	n = 0		5086563	0					
ANR	5086589	IdentifierDeclType	int		5086563	0					
ANR	5086590	Identifier	n		5086563	1					
ANR	5086591	AssignmentExpression	n = 0		5086563	2		=			
ANR	5086592	Identifier	n		5086563	0					
ANR	5086593	PrimaryExpression	0		5086563	1					
ANR	5086594	IfStatement	if ( len < 0 )		5086563	4					
ANR	5086595	Condition	len < 0	71:5:1431:1437	5086563	0	True				
ANR	5086596	RelationalExpression	len < 0		5086563	0		<			
ANR	5086597	Identifier	len		5086563	0					
ANR	5086598	PrimaryExpression	0		5086563	1					
ANR	5086599	CompoundStatement		6:14:65:65	5086563	1					
ANR	5086600	ExpressionStatement	len = strlen ( ( const char * ) bin )	72:2:1444:1476	5086563	0	True				
ANR	5086601	AssignmentExpression	len = strlen ( ( const char * ) bin )		5086563	0		=			
ANR	5086602	Identifier	len		5086563	0					
ANR	5086603	CallExpression	strlen ( ( const char * ) bin )		5086563	1					
ANR	5086604	Callee	strlen		5086563	0					
ANR	5086605	Identifier	strlen		5086563	0					
ANR	5086606	ArgumentList	( const char * ) bin		5086563	1					
ANR	5086607	Argument	( const char * ) bin		5086563	0					
ANR	5086608	CastExpression	( const char * ) bin		5086563	0					
ANR	5086609	CastTarget	const char *		5086563	0					
ANR	5086610	Identifier	bin		5086563	1					
ANR	5086611	ForStatement	for ( in = out = 0 ; in < len ; in ++ )		5086563	5					
ANR	5086612	ForInit	in = out = 0 ;	74:6:1487:1499	5086563	0	True				
ANR	5086613	AssignmentExpression	in = out = 0		5086563	0		=			
ANR	5086614	Identifier	in		5086563	0					
ANR	5086615	AssignmentExpression	out = 0		5086563	1		=			
ANR	5086616	Identifier	out		5086563	0					
ANR	5086617	PrimaryExpression	0		5086563	1					
ANR	5086618	Condition	in < len	74:20:1501:1508	5086563	1	True				
ANR	5086619	RelationalExpression	in < len		5086563	0		<			
ANR	5086620	Identifier	in		5086563	0					
ANR	5086621	Identifier	len		5086563	1					
ANR	5086622	PostIncDecOperationExpression	in ++	74:30:1511:1514	5086563	2	True				
ANR	5086623	Identifier	in		5086563	0					
ANR	5086624	IncDec	++		5086563	1					
ANR	5086625	CompoundStatement		9:36:142:142	5086563	3					
ANR	5086626	ExpressionStatement	b |= ( bin [ in ] << n )	75:2:1521:1540	5086563	0	True				
ANR	5086627	AssignmentExpression	b |= ( bin [ in ] << n )		5086563	0		|=			
ANR	5086628	Identifier	b		5086563	0					
ANR	5086629	ShiftExpression	bin [ in ] << n		5086563	1		<<			
ANR	5086630	ArrayIndexing	bin [ in ]		5086563	0					
ANR	5086631	Identifier	bin		5086563	0					
ANR	5086632	Identifier	in		5086563	1					
ANR	5086633	Identifier	n		5086563	1					
ANR	5086634	ExpressionStatement	n += 8	76:2:1544:1550	5086563	1	True				
ANR	5086635	AssignmentExpression	n += 8		5086563	0		+=			
ANR	5086636	Identifier	n		5086563	0					
ANR	5086637	PrimaryExpression	8		5086563	1					
ANR	5086638	IfStatement	if ( n > 13 )		5086563	2					
ANR	5086639	Condition	n > 13	77:6:1558:1563	5086563	0	True				
ANR	5086640	RelationalExpression	n > 13		5086563	0		>			
ANR	5086641	Identifier	n		5086563	0					
ANR	5086642	PrimaryExpression	13		5086563	1					
ANR	5086643	CompoundStatement		12:14:191:191	5086563	1					
ANR	5086644	ExpressionStatement	v = b & 8191	78:3:1571:1583	5086563	0	True				
ANR	5086645	AssignmentExpression	v = b & 8191		5086563	0		=			
ANR	5086646	Identifier	v		5086563	0					
ANR	5086647	BitAndExpression	b & 8191		5086563	1		&			
ANR	5086648	Identifier	b		5086563	0					
ANR	5086649	PrimaryExpression	8191		5086563	1					
ANR	5086650	IfStatement	if ( v > 88 )		5086563	1					
ANR	5086651	Condition	v > 88	79:7:1592:1597	5086563	0	True				
ANR	5086652	RelationalExpression	v > 88		5086563	0		>			
ANR	5086653	Identifier	v		5086563	0					
ANR	5086654	PrimaryExpression	88		5086563	1					
ANR	5086655	CompoundStatement		14:15:225:225	5086563	1					
ANR	5086656	ExpressionStatement	b >>= 13	80:4:1606:1614	5086563	0	True				
ANR	5086657	AssignmentExpression	b >>= 13		5086563	0		>>=			
ANR	5086658	Identifier	b		5086563	0					
ANR	5086659	PrimaryExpression	13		5086563	1					
ANR	5086660	ExpressionStatement	n -= 13	81:4:1620:1627	5086563	1	True				
ANR	5086661	AssignmentExpression	n -= 13		5086563	0		-=			
ANR	5086662	Identifier	n		5086563	0					
ANR	5086663	PrimaryExpression	13		5086563	1					
ANR	5086664	ElseStatement	else		5086563	0					
ANR	5086665	CompoundStatement		17:10:264:264	5086563	0					
ANR	5086666	ExpressionStatement	v = b & 16383	83:4:1645:1658	5086563	0	True				
ANR	5086667	AssignmentExpression	v = b & 16383		5086563	0		=			
ANR	5086668	Identifier	v		5086563	0					
ANR	5086669	BitAndExpression	b & 16383		5086563	1		&			
ANR	5086670	Identifier	b		5086563	0					
ANR	5086671	PrimaryExpression	16383		5086563	1					
ANR	5086672	ExpressionStatement	b >>= 14	84:4:1664:1672	5086563	1	True				
ANR	5086673	AssignmentExpression	b >>= 14		5086563	0		>>=			
ANR	5086674	Identifier	b		5086563	0					
ANR	5086675	PrimaryExpression	14		5086563	1					
ANR	5086676	ExpressionStatement	n -= 14	85:4:1678:1685	5086563	2	True				
ANR	5086677	AssignmentExpression	n -= 14		5086563	0		-=			
ANR	5086678	Identifier	n		5086563	0					
ANR	5086679	PrimaryExpression	14		5086563	1					
ANR	5086680	ExpressionStatement	bout [ out ++ ] = b91 [ v % 91 ]	87:3:1695:1720	5086563	2	True				
ANR	5086681	AssignmentExpression	bout [ out ++ ] = b91 [ v % 91 ]		5086563	0		=			
ANR	5086682	ArrayIndexing	bout [ out ++ ]		5086563	0					
ANR	5086683	Identifier	bout		5086563	0					
ANR	5086684	PostIncDecOperationExpression	out ++		5086563	1					
ANR	5086685	Identifier	out		5086563	0					
ANR	5086686	IncDec	++		5086563	1					
ANR	5086687	ArrayIndexing	b91 [ v % 91 ]		5086563	1					
ANR	5086688	Identifier	b91		5086563	0					
ANR	5086689	MultiplicativeExpression	v % 91		5086563	1		%			
ANR	5086690	Identifier	v		5086563	0					
ANR	5086691	PrimaryExpression	91		5086563	1					
ANR	5086692	ExpressionStatement	bout [ out ++ ] = b91 [ v / 91 ]	88:3:1725:1750	5086563	3	True				
ANR	5086693	AssignmentExpression	bout [ out ++ ] = b91 [ v / 91 ]		5086563	0		=			
ANR	5086694	ArrayIndexing	bout [ out ++ ]		5086563	0					
ANR	5086695	Identifier	bout		5086563	0					
ANR	5086696	PostIncDecOperationExpression	out ++		5086563	1					
ANR	5086697	Identifier	out		5086563	0					
ANR	5086698	IncDec	++		5086563	1					
ANR	5086699	ArrayIndexing	b91 [ v / 91 ]		5086563	1					
ANR	5086700	Identifier	b91		5086563	0					
ANR	5086701	MultiplicativeExpression	v / 91		5086563	1		/			
ANR	5086702	Identifier	v		5086563	0					
ANR	5086703	PrimaryExpression	91		5086563	1					
ANR	5086704	IfStatement	if ( n )		5086563	6					
ANR	5086705	Condition	n	91:5:1764:1764	5086563	0	True				
ANR	5086706	Identifier	n		5086563	0					
ANR	5086707	CompoundStatement		26:8:392:392	5086563	1					
ANR	5086708	ExpressionStatement	bout [ out ++ ] = b91 [ b % 91 ]	92:2:1771:1796	5086563	0	True				
ANR	5086709	AssignmentExpression	bout [ out ++ ] = b91 [ b % 91 ]		5086563	0		=			
ANR	5086710	ArrayIndexing	bout [ out ++ ]		5086563	0					
ANR	5086711	Identifier	bout		5086563	0					
ANR	5086712	PostIncDecOperationExpression	out ++		5086563	1					
ANR	5086713	Identifier	out		5086563	0					
ANR	5086714	IncDec	++		5086563	1					
ANR	5086715	ArrayIndexing	b91 [ b % 91 ]		5086563	1					
ANR	5086716	Identifier	b91		5086563	0					
ANR	5086717	MultiplicativeExpression	b % 91		5086563	1		%			
ANR	5086718	Identifier	b		5086563	0					
ANR	5086719	PrimaryExpression	91		5086563	1					
ANR	5086720	IfStatement	if ( n > 7 || b > 90 )		5086563	1					
ANR	5086721	Condition	n > 7 || b > 90	93:6:1804:1818	5086563	0	True				
ANR	5086722	OrExpression	n > 7 || b > 90		5086563	0		||			
ANR	5086723	RelationalExpression	n > 7		5086563	0		>			
ANR	5086724	Identifier	n		5086563	0					
ANR	5086725	PrimaryExpression	7		5086563	1					
ANR	5086726	RelationalExpression	b > 90		5086563	1		>			
ANR	5086727	Identifier	b		5086563	0					
ANR	5086728	PrimaryExpression	90		5086563	1					
ANR	5086729	CompoundStatement		28:23:446:446	5086563	1					
ANR	5086730	ExpressionStatement	bout [ out ++ ] = b91 [ b / 91 ]	94:3:1826:1851	5086563	0	True				
ANR	5086731	AssignmentExpression	bout [ out ++ ] = b91 [ b / 91 ]		5086563	0		=			
ANR	5086732	ArrayIndexing	bout [ out ++ ]		5086563	0					
ANR	5086733	Identifier	bout		5086563	0					
ANR	5086734	PostIncDecOperationExpression	out ++		5086563	1					
ANR	5086735	Identifier	out		5086563	0					
ANR	5086736	IncDec	++		5086563	1					
ANR	5086737	ArrayIndexing	b91 [ b / 91 ]		5086563	1					
ANR	5086738	Identifier	b91		5086563	0					
ANR	5086739	MultiplicativeExpression	b / 91		5086563	1		/			
ANR	5086740	Identifier	b		5086563	0					
ANR	5086741	PrimaryExpression	91		5086563	1					
ANR	5086742	ReturnStatement	return out ;	97:1:1861:1871	5086563	7	True				
ANR	5086743	Identifier	out		5086563	0					
ANR	5086744	ReturnType	R_API int		5086563	1					
ANR	5086745	Identifier	r_base91_encode		5086563	2					
ANR	5086746	ParameterList	"char * bout , const ut8 * bin , int len"		5086563	3					
ANR	5086747	Parameter	char * bout	66:26:1337:1346	5086563	0	True				
ANR	5086748	ParameterType	char *		5086563	0					
ANR	5086749	Identifier	bout		5086563	1					
ANR	5086750	Parameter	const ut8 * bin	66:38:1349:1362	5086563	1	True				
ANR	5086751	ParameterType	const ut8 *		5086563	0					
ANR	5086752	Identifier	bin		5086563	1					
ANR	5086753	Parameter	int len	66:54:1365:1371	5086563	2	True				
ANR	5086754	ParameterType	int		5086563	0					
ANR	5086755	Identifier	len		5086563	1					
ANR	5086756	CFGEntryNode	ENTRY		5086563		True				
ANR	5086757	CFGExitNode	EXIT		5086563		True				
ANR	5086758	Symbol	* v		5086563						
ANR	5086759	Symbol	bout		5086563						
ANR	5086760	Symbol	b		5086563						
ANR	5086761	Symbol	in		5086563						
ANR	5086762	Symbol	bin		5086563						
ANR	5086763	Symbol	* in		5086563						
ANR	5086764	Symbol	* b		5086563						
ANR	5086765	Symbol	n		5086563						
ANR	5086766	Symbol	* bin		5086563						
ANR	5086767	Symbol	out		5086563						
ANR	5086768	Symbol	strlen		5086563						
ANR	5086769	Symbol	len		5086563						
ANR	5086770	Symbol	v		5086563						
ANR	5086771	Symbol	* b91		5086563						
ANR	5086772	Symbol	b91		5086563						
ANR	5086773	Symbol	* bout		5086563						
