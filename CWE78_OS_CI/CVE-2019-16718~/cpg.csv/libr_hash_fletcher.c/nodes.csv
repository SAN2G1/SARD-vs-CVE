command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4812344	File	data/converged/CVE-2019-16718~_radare2/libr_hash_fletcher.c								
ANR	4812345	Function	r_hash_fletcher8	5:0:68:300							
ANR	4812346	FunctionDef	"r_hash_fletcher8 (const ut8 * d , size_t length)"		4812345	0					
ANR	4812347	CompoundStatement		5:57:125:300	4812345	0					
ANR	4812348	IdentifierDeclStatement	size_t i ;	6:1:128:136	4812345	0	True				
ANR	4812349	IdentifierDecl	i		4812345	0					
ANR	4812350	IdentifierDeclType	size_t		4812345	0					
ANR	4812351	Identifier	i		4812345	1					
ANR	4812352	IdentifierDeclStatement	ut16 a = 0 ;	7:1:139:149	4812345	1	True				
ANR	4812353	IdentifierDecl	a = 0		4812345	0					
ANR	4812354	IdentifierDeclType	ut16		4812345	0					
ANR	4812355	Identifier	a		4812345	1					
ANR	4812356	AssignmentExpression	a = 0		4812345	2		=			
ANR	4812357	Identifier	a		4812345	0					
ANR	4812358	PrimaryExpression	0		4812345	1					
ANR	4812359	IdentifierDeclStatement	ut16 b = 0 ;	8:1:152:162	4812345	2	True				
ANR	4812360	IdentifierDecl	b = 0		4812345	0					
ANR	4812361	IdentifierDeclType	ut16		4812345	0					
ANR	4812362	Identifier	b		4812345	1					
ANR	4812363	AssignmentExpression	b = 0		4812345	2		=			
ANR	4812364	Identifier	b		4812345	0					
ANR	4812365	PrimaryExpression	0		4812345	1					
ANR	4812366	ForStatement	for ( i = 0 ; i < length ; i ++ )		4812345	3					
ANR	4812367	ForInit	i = 0 ;	9:6:170:175	4812345	0	True				
ANR	4812368	AssignmentExpression	i = 0		4812345	0		=			
ANR	4812369	Identifier	i		4812345	0					
ANR	4812370	PrimaryExpression	0		4812345	1					
ANR	4812371	Condition	i < length	9:13:177:186	4812345	1	True				
ANR	4812372	RelationalExpression	i < length		4812345	0		<			
ANR	4812373	Identifier	i		4812345	0					
ANR	4812374	Identifier	length		4812345	1					
ANR	4812375	PostIncDecOperationExpression	i ++	9:25:189:191	4812345	2	True				
ANR	4812376	Identifier	i		4812345	0					
ANR	4812377	IncDec	++		4812345	1					
ANR	4812378	CompoundStatement		5:30:68:68	4812345	3					
ANR	4812379	ExpressionStatement	a += d [ i ]	10:2:198:207	4812345	0	True				
ANR	4812380	AssignmentExpression	a += d [ i ]		4812345	0		+=			
ANR	4812381	Identifier	a		4812345	0					
ANR	4812382	ArrayIndexing	d [ i ]		4812345	1					
ANR	4812383	Identifier	d		4812345	0					
ANR	4812384	Identifier	i		4812345	1					
ANR	4812385	ExpressionStatement	a = ( a & 0xff ) + ( a >> 8 )	11:2:211:236	4812345	1	True				
ANR	4812386	AssignmentExpression	a = ( a & 0xff ) + ( a >> 8 )		4812345	0		=			
ANR	4812387	Identifier	a		4812345	0					
ANR	4812388	AdditiveExpression	( a & 0xff ) + ( a >> 8 )		4812345	1		+			
ANR	4812389	BitAndExpression	a & 0xff		4812345	0		&			
ANR	4812390	Identifier	a		4812345	0					
ANR	4812391	PrimaryExpression	0xff		4812345	1					
ANR	4812392	ShiftExpression	a >> 8		4812345	1		>>			
ANR	4812393	Identifier	a		4812345	0					
ANR	4812394	PrimaryExpression	8		4812345	1					
ANR	4812395	ExpressionStatement	b += a	12:2:240:246	4812345	2	True				
ANR	4812396	AssignmentExpression	b += a		4812345	0		+=			
ANR	4812397	Identifier	b		4812345	0					
ANR	4812398	Identifier	a		4812345	1					
ANR	4812399	ExpressionStatement	b = ( b & 0xff ) + ( b >> 8 )	13:2:250:275	4812345	3	True				
ANR	4812400	AssignmentExpression	b = ( b & 0xff ) + ( b >> 8 )		4812345	0		=			
ANR	4812401	Identifier	b		4812345	0					
ANR	4812402	AdditiveExpression	( b & 0xff ) + ( b >> 8 )		4812345	1		+			
ANR	4812403	BitAndExpression	b & 0xff		4812345	0		&			
ANR	4812404	Identifier	b		4812345	0					
ANR	4812405	PrimaryExpression	0xff		4812345	1					
ANR	4812406	ShiftExpression	b >> 8		4812345	1		>>			
ANR	4812407	Identifier	b		4812345	0					
ANR	4812408	PrimaryExpression	8		4812345	1					
ANR	4812409	ReturnStatement	return ( a & 0xff ) ;	15:1:281:298	4812345	4	True				
ANR	4812410	BitAndExpression	a & 0xff		4812345	0		&			
ANR	4812411	Identifier	a		4812345	0					
ANR	4812412	PrimaryExpression	0xff		4812345	1					
ANR	4812413	ReturnType	R_API ut16		4812345	1					
ANR	4812414	Identifier	r_hash_fletcher8		4812345	2					
ANR	4812415	ParameterList	"const ut8 * d , size_t length"		4812345	3					
ANR	4812416	Parameter	const ut8 * d	5:28:96:107	4812345	0	True				
ANR	4812417	ParameterType	const ut8 *		4812345	0					
ANR	4812418	Identifier	d		4812345	1					
ANR	4812419	Parameter	size_t length	5:42:110:122	4812345	1	True				
ANR	4812420	ParameterType	size_t		4812345	0					
ANR	4812421	Identifier	length		4812345	1					
ANR	4812422	CFGEntryNode	ENTRY		4812345		True				
ANR	4812423	CFGExitNode	EXIT		4812345		True				
ANR	4812424	Symbol	a		4812345						
ANR	4812425	Symbol	b		4812345						
ANR	4812426	Symbol	* i		4812345						
ANR	4812427	Symbol	d		4812345						
ANR	4812428	Symbol	length		4812345						
ANR	4812429	Symbol	i		4812345						
ANR	4812430	Symbol	* d		4812345						
ANR	4812431	Function	r_hash_fletcher16	18:0:303:652							
ANR	4812432	FunctionDef	"r_hash_fletcher16 (const ut8 * data , size_t len)"		4812431	0					
ANR	4812433	CompoundStatement		18:58:361:652	4812431	0					
ANR	4812434	IdentifierDeclStatement	"ut32 c0 , c1 ;"	19:1:364:375	4812431	0	True				
ANR	4812435	IdentifierDecl	c0		4812431	0					
ANR	4812436	IdentifierDeclType	ut32		4812431	0					
ANR	4812437	Identifier	c0		4812431	1					
ANR	4812438	IdentifierDecl	c1		4812431	1					
ANR	4812439	IdentifierDeclType	ut32		4812431	0					
ANR	4812440	Identifier	c1		4812431	1					
ANR	4812441	IdentifierDeclStatement	size_t i ;	20:1:378:386	4812431	1	True				
ANR	4812442	IdentifierDecl	i		4812431	0					
ANR	4812443	IdentifierDeclType	size_t		4812431	0					
ANR	4812444	Identifier	i		4812431	1					
ANR	4812445	ForStatement	for ( c0 = c1 = 0 ; len >= 5802 ; len -= 5802 )		4812431	2					
ANR	4812446	ForInit	c0 = c1 = 0 ;	22:6:395:406	4812431	0	True				
ANR	4812447	AssignmentExpression	c0 = c1 = 0		4812431	0		=			
ANR	4812448	Identifier	c0		4812431	0					
ANR	4812449	AssignmentExpression	c1 = 0		4812431	1		=			
ANR	4812450	Identifier	c1		4812431	0					
ANR	4812451	PrimaryExpression	0		4812431	1					
ANR	4812452	Condition	len >= 5802	22:19:408:418	4812431	1	True				
ANR	4812453	RelationalExpression	len >= 5802		4812431	0		>=			
ANR	4812454	Identifier	len		4812431	0					
ANR	4812455	PrimaryExpression	5802		4812431	1					
ANR	4812456	AssignmentExpression	len -= 5802	22:32:421:431	4812431	2	True	-=			
ANR	4812457	Identifier	len		4812431	0					
ANR	4812458	PrimaryExpression	5802		4812431	1					
ANR	4812459	CompoundStatement		5:45:72:72	4812431	3					
ANR	4812460	ForStatement	for ( i = 0 ; i < 5802 ; ++ i )		4812431	0					
ANR	4812461	ForInit	i = 0 ;	23:7:443:448	4812431	0	True				
ANR	4812462	AssignmentExpression	i = 0		4812431	0		=			
ANR	4812463	Identifier	i		4812431	0					
ANR	4812464	PrimaryExpression	0		4812431	1					
ANR	4812465	Condition	i < 5802	23:14:450:457	4812431	1	True				
ANR	4812466	RelationalExpression	i < 5802		4812431	0		<			
ANR	4812467	Identifier	i		4812431	0					
ANR	4812468	PrimaryExpression	5802		4812431	1					
ANR	4812469	UnaryExpression	++ i	23:24:460:462	4812431	2	True				
ANR	4812470	IncDec	++		4812431	0					
ANR	4812471	Identifier	i		4812431	1					
ANR	4812472	CompoundStatement		6:29:103:103	4812431	3					
ANR	4812473	ExpressionStatement	c0 = c0 + * data ++	24:3:470:487	4812431	0	True				
ANR	4812474	AssignmentExpression	c0 = c0 + * data ++		4812431	0		=			
ANR	4812475	Identifier	c0		4812431	0					
ANR	4812476	AdditiveExpression	c0 + * data ++		4812431	1		+			
ANR	4812477	Identifier	c0		4812431	0					
ANR	4812478	UnaryOperationExpression	* data ++		4812431	1					
ANR	4812479	UnaryOperator	*		4812431	0					
ANR	4812480	PostIncDecOperationExpression	data ++		4812431	1					
ANR	4812481	Identifier	data		4812431	0					
ANR	4812482	IncDec	++		4812431	1					
ANR	4812483	ExpressionStatement	c1 = c1 + c0	25:3:492:504	4812431	1	True				
ANR	4812484	AssignmentExpression	c1 = c1 + c0		4812431	0		=			
ANR	4812485	Identifier	c1		4812431	0					
ANR	4812486	AdditiveExpression	c1 + c0		4812431	1		+			
ANR	4812487	Identifier	c1		4812431	0					
ANR	4812488	Identifier	c0		4812431	1					
ANR	4812489	ExpressionStatement	c0 %= 0xff	27:2:512:522	4812431	1	True				
ANR	4812490	AssignmentExpression	c0 %= 0xff		4812431	0		%=			
ANR	4812491	Identifier	c0		4812431	0					
ANR	4812492	PrimaryExpression	0xff		4812431	1					
ANR	4812493	ExpressionStatement	c1 %= 0xff	28:2:526:536	4812431	2	True				
ANR	4812494	AssignmentExpression	c1 %= 0xff		4812431	0		%=			
ANR	4812495	Identifier	c1		4812431	0					
ANR	4812496	PrimaryExpression	0xff		4812431	1					
ANR	4812497	ForStatement	for ( i = 0 ; i < len ; ++ i )		4812431	3					
ANR	4812498	ForInit	i = 0 ;	30:6:547:552	4812431	0	True				
ANR	4812499	AssignmentExpression	i = 0		4812431	0		=			
ANR	4812500	Identifier	i		4812431	0					
ANR	4812501	PrimaryExpression	0		4812431	1					
ANR	4812502	Condition	i < len	30:13:554:560	4812431	1	True				
ANR	4812503	RelationalExpression	i < len		4812431	0		<			
ANR	4812504	Identifier	i		4812431	0					
ANR	4812505	Identifier	len		4812431	1					
ANR	4812506	UnaryExpression	++ i	30:22:563:565	4812431	2	True				
ANR	4812507	IncDec	++		4812431	0					
ANR	4812508	Identifier	i		4812431	1					
ANR	4812509	CompoundStatement		13:27:206:206	4812431	3					
ANR	4812510	ExpressionStatement	c0 += * data ++	31:2:572:585	4812431	0	True				
ANR	4812511	AssignmentExpression	c0 += * data ++		4812431	0		+=			
ANR	4812512	Identifier	c0		4812431	0					
ANR	4812513	UnaryOperationExpression	* data ++		4812431	1					
ANR	4812514	UnaryOperator	*		4812431	0					
ANR	4812515	PostIncDecOperationExpression	data ++		4812431	1					
ANR	4812516	Identifier	data		4812431	0					
ANR	4812517	IncDec	++		4812431	1					
ANR	4812518	ExpressionStatement	c1 += c0	32:2:589:597	4812431	1	True				
ANR	4812519	AssignmentExpression	c1 += c0		4812431	0		+=			
ANR	4812520	Identifier	c1		4812431	0					
ANR	4812521	Identifier	c0		4812431	1					
ANR	4812522	ExpressionStatement	c0 %= 0xff	34:1:603:613	4812431	4	True				
ANR	4812523	AssignmentExpression	c0 %= 0xff		4812431	0		%=			
ANR	4812524	Identifier	c0		4812431	0					
ANR	4812525	PrimaryExpression	0xff		4812431	1					
ANR	4812526	ExpressionStatement	c1 %= 0xff	35:1:616:626	4812431	5	True				
ANR	4812527	AssignmentExpression	c1 %= 0xff		4812431	0		%=			
ANR	4812528	Identifier	c1		4812431	0					
ANR	4812529	PrimaryExpression	0xff		4812431	1					
ANR	4812530	ReturnStatement	return ( c1 << 8 | c0 ) ;	36:1:629:650	4812431	6	True				
ANR	4812531	InclusiveOrExpression	c1 << 8 | c0		4812431	0		|			
ANR	4812532	ShiftExpression	c1 << 8		4812431	0		<<			
ANR	4812533	Identifier	c1		4812431	0					
ANR	4812534	PrimaryExpression	8		4812431	1					
ANR	4812535	Identifier	c0		4812431	1					
ANR	4812536	ReturnType	R_API ut16		4812431	1					
ANR	4812537	Identifier	r_hash_fletcher16		4812431	2					
ANR	4812538	ParameterList	"const ut8 * data , size_t len"		4812431	3					
ANR	4812539	Parameter	const ut8 * data	18:29:332:346	4812431	0	True				
ANR	4812540	ParameterType	const ut8 *		4812431	0					
ANR	4812541	Identifier	data		4812431	1					
ANR	4812542	Parameter	size_t len	18:46:349:358	4812431	1	True				
ANR	4812543	ParameterType	size_t		4812431	0					
ANR	4812544	Identifier	len		4812431	1					
ANR	4812545	CFGEntryNode	ENTRY		4812431		True				
ANR	4812546	CFGExitNode	EXIT		4812431		True				
ANR	4812547	Symbol	data		4812431						
ANR	4812548	Symbol	len		4812431						
ANR	4812549	Symbol	* data ++		4812431						
ANR	4812550	Symbol	i		4812431						
ANR	4812551	Symbol	c0		4812431						
ANR	4812552	Symbol	c1		4812431						
ANR	4812553	Function	r_hash_fletcher32	39:0:655:1313							
ANR	4812554	FunctionDef	"r_hash_fletcher32 (const ut8 * data , size_t len)"		4812553	0					
ANR	4812555	CompoundStatement		39:58:713:1313	4812553	0					
ANR	4812556	IdentifierDeclStatement	"ut32 c0 , c1 ;"	40:1:716:727	4812553	0	True				
ANR	4812557	IdentifierDecl	c0		4812553	0					
ANR	4812558	IdentifierDeclType	ut32		4812553	0					
ANR	4812559	Identifier	c0		4812553	1					
ANR	4812560	IdentifierDecl	c1		4812553	1					
ANR	4812561	IdentifierDeclType	ut32		4812553	0					
ANR	4812562	Identifier	c1		4812553	1					
ANR	4812563	IdentifierDeclStatement	size_t i ;	41:1:730:738	4812553	1	True				
ANR	4812564	IdentifierDecl	i		4812553	0					
ANR	4812565	IdentifierDeclType	size_t		4812553	0					
ANR	4812566	Identifier	i		4812553	1					
ANR	4812567	IdentifierDeclStatement	ut8 word [ sizeof ( ut16 ) ] ;	42:1:741:764	4812553	2	True				
ANR	4812568	IdentifierDecl	word [ sizeof ( ut16 ) ]		4812553	0					
ANR	4812569	IdentifierDeclType	ut8 [ sizeof ( ut16 ) ]		4812553	0					
ANR	4812570	Identifier	word		4812553	1					
ANR	4812571	SizeofExpression	sizeof ( ut16 )		4812553	2					
ANR	4812572	Sizeof	sizeof		4812553	0					
ANR	4812573	SizeofOperand	ut16		4812553	1					
ANR	4812574	ForStatement	for ( c0 = c1 = 0 ; len >= 360 ; len -= 360 )		4812553	3					
ANR	4812575	ForInit	c0 = c1 = 0 ;	43:6:772:783	4812553	0	True				
ANR	4812576	AssignmentExpression	c0 = c1 = 0		4812553	0		=			
ANR	4812577	Identifier	c0		4812553	0					
ANR	4812578	AssignmentExpression	c1 = 0		4812553	1		=			
ANR	4812579	Identifier	c1		4812553	0					
ANR	4812580	PrimaryExpression	0		4812553	1					
ANR	4812581	Condition	len >= 360	43:19:785:794	4812553	1	True				
ANR	4812582	RelationalExpression	len >= 360		4812553	0		>=			
ANR	4812583	Identifier	len		4812553	0					
ANR	4812584	PrimaryExpression	360		4812553	1					
ANR	4812585	AssignmentExpression	len -= 360	43:31:797:806	4812553	2	True	-=			
ANR	4812586	Identifier	len		4812553	0					
ANR	4812587	PrimaryExpression	360		4812553	1					
ANR	4812588	CompoundStatement		5:43:95:95	4812553	3					
ANR	4812589	ForStatement	for ( i = 0 ; i < 360 ; i += 2 )		4812553	0					
ANR	4812590	ForInit	i = 0 ;	44:7:818:823	4812553	0	True				
ANR	4812591	AssignmentExpression	i = 0		4812553	0		=			
ANR	4812592	Identifier	i		4812553	0					
ANR	4812593	PrimaryExpression	0		4812553	1					
ANR	4812594	Condition	i < 360	44:14:825:831	4812553	1	True				
ANR	4812595	RelationalExpression	i < 360		4812553	0		<			
ANR	4812596	Identifier	i		4812553	0					
ANR	4812597	PrimaryExpression	360		4812553	1					
ANR	4812598	AssignmentExpression	i += 2	44:23:834:837	4812553	2	True	+=			
ANR	4812599	Identifier	i		4812553	0					
ANR	4812600	PrimaryExpression	2		4812553	1					
ANR	4812601	CompoundStatement		7:3:131:152	4812553	3					
ANR	4812602	IdentifierDeclStatement	size_t left = 360 - i ;	45:3:845:866	4812553	0	True				
ANR	4812603	IdentifierDecl	left = 360 - i		4812553	0					
ANR	4812604	IdentifierDeclType	size_t		4812553	0					
ANR	4812605	Identifier	left		4812553	1					
ANR	4812606	AssignmentExpression	left = 360 - i		4812553	2		=			
ANR	4812607	Identifier	left		4812553	0					
ANR	4812608	AdditiveExpression	360 - i		4812553	1		-			
ANR	4812609	PrimaryExpression	360		4812553	0					
ANR	4812610	Identifier	i		4812553	1					
ANR	4812611	ExpressionStatement	"memset ( word , 0 , sizeof ( word ) )"	46:3:871:902	4812553	1	True				
ANR	4812612	CallExpression	"memset ( word , 0 , sizeof ( word ) )"		4812553	0					
ANR	4812613	Callee	memset		4812553	0					
ANR	4812614	Identifier	memset		4812553	0					
ANR	4812615	ArgumentList	word		4812553	1					
ANR	4812616	Argument	word		4812553	0					
ANR	4812617	Identifier	word		4812553	0					
ANR	4812618	Argument	0		4812553	1					
ANR	4812619	PrimaryExpression	0		4812553	0					
ANR	4812620	Argument	sizeof ( word )		4812553	2					
ANR	4812621	SizeofExpression	sizeof ( word )		4812553	0					
ANR	4812622	Sizeof	sizeof		4812553	0					
ANR	4812623	SizeofOperand	word		4812553	1					
ANR	4812624	ExpressionStatement	"memcpy ( word , data , R_MIN ( sizeof ( word ) , left ) )"	47:3:907:955	4812553	2	True				
ANR	4812625	CallExpression	"memcpy ( word , data , R_MIN ( sizeof ( word ) , left ) )"		4812553	0					
ANR	4812626	Callee	memcpy		4812553	0					
ANR	4812627	Identifier	memcpy		4812553	0					
ANR	4812628	ArgumentList	word		4812553	1					
ANR	4812629	Argument	word		4812553	0					
ANR	4812630	Identifier	word		4812553	0					
ANR	4812631	Argument	data		4812553	1					
ANR	4812632	Identifier	data		4812553	0					
ANR	4812633	Argument	"R_MIN ( sizeof ( word ) , left )"		4812553	2					
ANR	4812634	CallExpression	"R_MIN ( sizeof ( word ) , left )"		4812553	0					
ANR	4812635	Callee	R_MIN		4812553	0					
ANR	4812636	Identifier	R_MIN		4812553	0					
ANR	4812637	ArgumentList	sizeof ( word )		4812553	1					
ANR	4812638	Argument	sizeof ( word )		4812553	0					
ANR	4812639	SizeofExpression	sizeof ( word )		4812553	0					
ANR	4812640	Sizeof	sizeof		4812553	0					
ANR	4812641	SizeofOperand	word		4812553	1					
ANR	4812642	Argument	left		4812553	1					
ANR	4812643	Identifier	left		4812553	0					
ANR	4812644	ExpressionStatement	c0 += r_read_le16 ( word )	48:3:960:984	4812553	3	True				
ANR	4812645	AssignmentExpression	c0 += r_read_le16 ( word )		4812553	0		+=			
ANR	4812646	Identifier	c0		4812553	0					
ANR	4812647	CallExpression	r_read_le16 ( word )		4812553	1					
ANR	4812648	Callee	r_read_le16		4812553	0					
ANR	4812649	Identifier	r_read_le16		4812553	0					
ANR	4812650	ArgumentList	word		4812553	1					
ANR	4812651	Argument	word		4812553	0					
ANR	4812652	Identifier	word		4812553	0					
ANR	4812653	ExpressionStatement	c1 += c0	49:3:989:997	4812553	4	True				
ANR	4812654	AssignmentExpression	c1 += c0		4812553	0		+=			
ANR	4812655	Identifier	c1		4812553	0					
ANR	4812656	Identifier	c0		4812553	1					
ANR	4812657	ExpressionStatement	data += 2	50:3:1002:1011	4812553	5	True				
ANR	4812658	AssignmentExpression	data += 2		4812553	0		+=			
ANR	4812659	Identifier	data		4812553	0					
ANR	4812660	PrimaryExpression	2		4812553	1					
ANR	4812661	ExpressionStatement	c0 %= UT16_MAX	52:2:1019:1033	4812553	1	True				
ANR	4812662	AssignmentExpression	c0 %= UT16_MAX		4812553	0		%=			
ANR	4812663	Identifier	c0		4812553	0					
ANR	4812664	Identifier	UT16_MAX		4812553	1					
ANR	4812665	ExpressionStatement	c1 %= UT16_MAX	53:2:1037:1051	4812553	2	True				
ANR	4812666	AssignmentExpression	c1 %= UT16_MAX		4812553	0		%=			
ANR	4812667	Identifier	c1		4812553	0					
ANR	4812668	Identifier	UT16_MAX		4812553	1					
ANR	4812669	ForStatement	for ( i = 0 ; i < len ; i += 2 )		4812553	4					
ANR	4812670	ForInit	i = 0 ;	55:6:1062:1067	4812553	0	True				
ANR	4812671	AssignmentExpression	i = 0		4812553	0		=			
ANR	4812672	Identifier	i		4812553	0					
ANR	4812673	PrimaryExpression	0		4812553	1					
ANR	4812674	Condition	i < len	55:13:1069:1075	4812553	1	True				
ANR	4812675	RelationalExpression	i < len		4812553	0		<			
ANR	4812676	Identifier	i		4812553	0					
ANR	4812677	Identifier	len		4812553	1					
ANR	4812678	AssignmentExpression	i += 2	55:22:1078:1081	4812553	2	True	+=			
ANR	4812679	Identifier	i		4812553	0					
ANR	4812680	PrimaryExpression	2		4812553	1					
ANR	4812681	CompoundStatement		18:2:374:395	4812553	3					
ANR	4812682	IdentifierDeclStatement	size_t left = len - i ;	56:2:1088:1109	4812553	0	True				
ANR	4812683	IdentifierDecl	left = len - i		4812553	0					
ANR	4812684	IdentifierDeclType	size_t		4812553	0					
ANR	4812685	Identifier	left		4812553	1					
ANR	4812686	AssignmentExpression	left = len - i		4812553	2		=			
ANR	4812687	Identifier	left		4812553	0					
ANR	4812688	AdditiveExpression	len - i		4812553	1		-			
ANR	4812689	Identifier	len		4812553	0					
ANR	4812690	Identifier	i		4812553	1					
ANR	4812691	ExpressionStatement	"memset ( word , 0 , sizeof ( word ) )"	57:2:1113:1144	4812553	1	True				
ANR	4812692	CallExpression	"memset ( word , 0 , sizeof ( word ) )"		4812553	0					
ANR	4812693	Callee	memset		4812553	0					
ANR	4812694	Identifier	memset		4812553	0					
ANR	4812695	ArgumentList	word		4812553	1					
ANR	4812696	Argument	word		4812553	0					
ANR	4812697	Identifier	word		4812553	0					
ANR	4812698	Argument	0		4812553	1					
ANR	4812699	PrimaryExpression	0		4812553	0					
ANR	4812700	Argument	sizeof ( word )		4812553	2					
ANR	4812701	SizeofExpression	sizeof ( word )		4812553	0					
ANR	4812702	Sizeof	sizeof		4812553	0					
ANR	4812703	SizeofOperand	word		4812553	1					
ANR	4812704	ExpressionStatement	"memcpy ( word , data , R_MIN ( sizeof ( word ) , left ) )"	58:2:1148:1196	4812553	2	True				
ANR	4812705	CallExpression	"memcpy ( word , data , R_MIN ( sizeof ( word ) , left ) )"		4812553	0					
ANR	4812706	Callee	memcpy		4812553	0					
ANR	4812707	Identifier	memcpy		4812553	0					
ANR	4812708	ArgumentList	word		4812553	1					
ANR	4812709	Argument	word		4812553	0					
ANR	4812710	Identifier	word		4812553	0					
ANR	4812711	Argument	data		4812553	1					
ANR	4812712	Identifier	data		4812553	0					
ANR	4812713	Argument	"R_MIN ( sizeof ( word ) , left )"		4812553	2					
ANR	4812714	CallExpression	"R_MIN ( sizeof ( word ) , left )"		4812553	0					
ANR	4812715	Callee	R_MIN		4812553	0					
ANR	4812716	Identifier	R_MIN		4812553	0					
ANR	4812717	ArgumentList	sizeof ( word )		4812553	1					
ANR	4812718	Argument	sizeof ( word )		4812553	0					
ANR	4812719	SizeofExpression	sizeof ( word )		4812553	0					
ANR	4812720	Sizeof	sizeof		4812553	0					
ANR	4812721	SizeofOperand	word		4812553	1					
ANR	4812722	Argument	left		4812553	1					
ANR	4812723	Identifier	left		4812553	0					
ANR	4812724	ExpressionStatement	c0 += r_read_le16 ( word )	59:2:1200:1224	4812553	3	True				
ANR	4812725	AssignmentExpression	c0 += r_read_le16 ( word )		4812553	0		+=			
ANR	4812726	Identifier	c0		4812553	0					
ANR	4812727	CallExpression	r_read_le16 ( word )		4812553	1					
ANR	4812728	Callee	r_read_le16		4812553	0					
ANR	4812729	Identifier	r_read_le16		4812553	0					
ANR	4812730	ArgumentList	word		4812553	1					
ANR	4812731	Argument	word		4812553	0					
ANR	4812732	Identifier	word		4812553	0					
ANR	4812733	ExpressionStatement	c1 += c0	60:2:1228:1236	4812553	4	True				
ANR	4812734	AssignmentExpression	c1 += c0		4812553	0		+=			
ANR	4812735	Identifier	c1		4812553	0					
ANR	4812736	Identifier	c0		4812553	1					
ANR	4812737	ExpressionStatement	data += 2	61:2:1240:1249	4812553	5	True				
ANR	4812738	AssignmentExpression	data += 2		4812553	0		+=			
ANR	4812739	Identifier	data		4812553	0					
ANR	4812740	PrimaryExpression	2		4812553	1					
ANR	4812741	ExpressionStatement	c0 %= UT16_MAX	63:1:1255:1269	4812553	5	True				
ANR	4812742	AssignmentExpression	c0 %= UT16_MAX		4812553	0		%=			
ANR	4812743	Identifier	c0		4812553	0					
ANR	4812744	Identifier	UT16_MAX		4812553	1					
ANR	4812745	ExpressionStatement	c1 %= UT16_MAX	64:1:1272:1286	4812553	6	True				
ANR	4812746	AssignmentExpression	c1 %= UT16_MAX		4812553	0		%=			
ANR	4812747	Identifier	c1		4812553	0					
ANR	4812748	Identifier	UT16_MAX		4812553	1					
ANR	4812749	ReturnStatement	return ( c1 << 16 | c0 ) ;	65:1:1289:1311	4812553	7	True				
ANR	4812750	InclusiveOrExpression	c1 << 16 | c0		4812553	0		|			
ANR	4812751	ShiftExpression	c1 << 16		4812553	0		<<			
ANR	4812752	Identifier	c1		4812553	0					
ANR	4812753	PrimaryExpression	16		4812553	1					
ANR	4812754	Identifier	c0		4812553	1					
ANR	4812755	ReturnType	R_API ut32		4812553	1					
ANR	4812756	Identifier	r_hash_fletcher32		4812553	2					
ANR	4812757	ParameterList	"const ut8 * data , size_t len"		4812553	3					
ANR	4812758	Parameter	const ut8 * data	39:29:684:698	4812553	0	True				
ANR	4812759	ParameterType	const ut8 *		4812553	0					
ANR	4812760	Identifier	data		4812553	1					
ANR	4812761	Parameter	size_t len	39:46:701:710	4812553	1	True				
ANR	4812762	ParameterType	size_t		4812553	0					
ANR	4812763	Identifier	len		4812553	1					
ANR	4812764	CFGEntryNode	ENTRY		4812553		True				
ANR	4812765	CFGExitNode	EXIT		4812553		True				
ANR	4812766	Symbol	data		4812553						
ANR	4812767	Symbol	len		4812553						
ANR	4812768	Symbol	left		4812553						
ANR	4812769	Symbol	i		4812553						
ANR	4812770	Symbol	R_MIN		4812553						
ANR	4812771	Symbol	UT16_MAX		4812553						
ANR	4812772	Symbol	c0		4812553						
ANR	4812773	Symbol	word		4812553						
ANR	4812774	Symbol	r_read_le16		4812553						
ANR	4812775	Symbol	c1		4812553						
ANR	4812776	Function	r_hash_fletcher64	68:0:1316:1754							
ANR	4812777	FunctionDef	"r_hash_fletcher64 (const ut8 * addr , size_t len)"		4812776	0					
ANR	4812778	CompoundStatement		68:58:1374:1754	4812776	0					
ANR	4812779	IdentifierDeclStatement	const ut8 * p32 = addr ;	69:1:1377:1398	4812776	0	True				
ANR	4812780	IdentifierDecl	* p32 = addr		4812776	0					
ANR	4812781	IdentifierDeclType	const ut8 *		4812776	0					
ANR	4812782	Identifier	p32		4812776	1					
ANR	4812783	AssignmentExpression	* p32 = addr		4812776	2		=			
ANR	4812784	Identifier	addr		4812776	0					
ANR	4812785	Identifier	addr		4812776	1					
ANR	4812786	IdentifierDeclStatement	const ut8 * p32end = addr + len ;	70:1:1401:1431	4812776	1	True				
ANR	4812787	IdentifierDecl	* p32end = addr + len		4812776	0					
ANR	4812788	IdentifierDeclType	const ut8 *		4812776	0					
ANR	4812789	Identifier	p32end		4812776	1					
ANR	4812790	AssignmentExpression	* p32end = addr + len		4812776	2		=			
ANR	4812791	Identifier	p32end		4812776	0					
ANR	4812792	AdditiveExpression	addr + len		4812776	1		+			
ANR	4812793	Identifier	addr		4812776	0					
ANR	4812794	Identifier	len		4812776	1					
ANR	4812795	IdentifierDeclStatement	ut32 lo32 = 0 ;	71:1:1434:1447	4812776	2	True				
ANR	4812796	IdentifierDecl	lo32 = 0		4812776	0					
ANR	4812797	IdentifierDeclType	ut32		4812776	0					
ANR	4812798	Identifier	lo32		4812776	1					
ANR	4812799	AssignmentExpression	lo32 = 0		4812776	2		=			
ANR	4812800	Identifier	lo32		4812776	0					
ANR	4812801	PrimaryExpression	0		4812776	1					
ANR	4812802	IdentifierDeclStatement	ut32 hi32 = 0 ;	72:1:1450:1463	4812776	3	True				
ANR	4812803	IdentifierDecl	hi32 = 0		4812776	0					
ANR	4812804	IdentifierDeclType	ut32		4812776	0					
ANR	4812805	Identifier	hi32		4812776	1					
ANR	4812806	AssignmentExpression	hi32 = 0		4812776	2		=			
ANR	4812807	Identifier	hi32		4812776	0					
ANR	4812808	PrimaryExpression	0		4812776	1					
ANR	4812809	IdentifierDeclStatement	ut8 word [ sizeof ( ut32 ) ] ;	74:1:1467:1490	4812776	4	True				
ANR	4812810	IdentifierDecl	word [ sizeof ( ut32 ) ]		4812776	0					
ANR	4812811	IdentifierDeclType	ut8 [ sizeof ( ut32 ) ]		4812776	0					
ANR	4812812	Identifier	word		4812776	1					
ANR	4812813	SizeofExpression	sizeof ( ut32 )		4812776	2					
ANR	4812814	Sizeof	sizeof		4812776	0					
ANR	4812815	SizeofOperand	ut32		4812776	1					
ANR	4812816	WhileStatement	while ( p32 < p32end )		4812776	5					
ANR	4812817	Condition	p32 < p32end	75:8:1500:1511	4812776	0	True				
ANR	4812818	RelationalExpression	p32 < p32end		4812776	0		<			
ANR	4812819	Identifier	p32		4812776	0					
ANR	4812820	Identifier	p32end		4812776	1					
ANR	4812821	CompoundStatement		12:2:259:286	4812776	1					
ANR	4812822	IdentifierDeclStatement	size_t left = p32end - p32 ;	76:2:1518:1544	4812776	0	True				
ANR	4812823	IdentifierDecl	left = p32end - p32		4812776	0					
ANR	4812824	IdentifierDeclType	size_t		4812776	0					
ANR	4812825	Identifier	left		4812776	1					
ANR	4812826	AssignmentExpression	left = p32end - p32		4812776	2		=			
ANR	4812827	Identifier	left		4812776	0					
ANR	4812828	AdditiveExpression	p32end - p32		4812776	1		-			
ANR	4812829	Identifier	p32end		4812776	0					
ANR	4812830	Identifier	p32		4812776	1					
ANR	4812831	ExpressionStatement	"memset ( word , 0 , sizeof ( word ) )"	77:2:1548:1579	4812776	1	True				
ANR	4812832	CallExpression	"memset ( word , 0 , sizeof ( word ) )"		4812776	0					
ANR	4812833	Callee	memset		4812776	0					
ANR	4812834	Identifier	memset		4812776	0					
ANR	4812835	ArgumentList	word		4812776	1					
ANR	4812836	Argument	word		4812776	0					
ANR	4812837	Identifier	word		4812776	0					
ANR	4812838	Argument	0		4812776	1					
ANR	4812839	PrimaryExpression	0		4812776	0					
ANR	4812840	Argument	sizeof ( word )		4812776	2					
ANR	4812841	SizeofExpression	sizeof ( word )		4812776	0					
ANR	4812842	Sizeof	sizeof		4812776	0					
ANR	4812843	SizeofOperand	word		4812776	1					
ANR	4812844	ExpressionStatement	"memcpy ( word , p32 , R_MIN ( sizeof ( word ) , left ) )"	78:2:1583:1630	4812776	2	True				
ANR	4812845	CallExpression	"memcpy ( word , p32 , R_MIN ( sizeof ( word ) , left ) )"		4812776	0					
ANR	4812846	Callee	memcpy		4812776	0					
ANR	4812847	Identifier	memcpy		4812776	0					
ANR	4812848	ArgumentList	word		4812776	1					
ANR	4812849	Argument	word		4812776	0					
ANR	4812850	Identifier	word		4812776	0					
ANR	4812851	Argument	p32		4812776	1					
ANR	4812852	Identifier	p32		4812776	0					
ANR	4812853	Argument	"R_MIN ( sizeof ( word ) , left )"		4812776	2					
ANR	4812854	CallExpression	"R_MIN ( sizeof ( word ) , left )"		4812776	0					
ANR	4812855	Callee	R_MIN		4812776	0					
ANR	4812856	Identifier	R_MIN		4812776	0					
ANR	4812857	ArgumentList	sizeof ( word )		4812776	1					
ANR	4812858	Argument	sizeof ( word )		4812776	0					
ANR	4812859	SizeofExpression	sizeof ( word )		4812776	0					
ANR	4812860	Sizeof	sizeof		4812776	0					
ANR	4812861	SizeofOperand	word		4812776	1					
ANR	4812862	Argument	left		4812776	1					
ANR	4812863	Identifier	left		4812776	0					
ANR	4812864	IdentifierDeclStatement	ut32 w = r_read_le32 ( word ) ;	79:2:1634:1661	4812776	3	True				
ANR	4812865	IdentifierDecl	w = r_read_le32 ( word )		4812776	0					
ANR	4812866	IdentifierDeclType	ut32		4812776	0					
ANR	4812867	Identifier	w		4812776	1					
ANR	4812868	AssignmentExpression	w = r_read_le32 ( word )		4812776	2		=			
ANR	4812869	Identifier	w		4812776	0					
ANR	4812870	CallExpression	r_read_le32 ( word )		4812776	1					
ANR	4812871	Callee	r_read_le32		4812776	0					
ANR	4812872	Identifier	r_read_le32		4812776	0					
ANR	4812873	ArgumentList	word		4812776	1					
ANR	4812874	Argument	word		4812776	0					
ANR	4812875	Identifier	word		4812776	0					
ANR	4812876	ExpressionStatement	lo32 += w	80:2:1665:1674	4812776	4	True				
ANR	4812877	AssignmentExpression	lo32 += w		4812776	0		+=			
ANR	4812878	Identifier	lo32		4812776	0					
ANR	4812879	Identifier	w		4812776	1					
ANR	4812880	ExpressionStatement	p32 += sizeof ( ut32 )	81:2:1678:1698	4812776	5	True				
ANR	4812881	AssignmentExpression	p32 += sizeof ( ut32 )		4812776	0		+=			
ANR	4812882	Identifier	p32		4812776	0					
ANR	4812883	SizeofExpression	sizeof ( ut32 )		4812776	1					
ANR	4812884	Sizeof	sizeof		4812776	0					
ANR	4812885	SizeofOperand	ut32		4812776	1					
ANR	4812886	ExpressionStatement	hi32 += lo32	82:2:1702:1714	4812776	6	True				
ANR	4812887	AssignmentExpression	hi32 += lo32		4812776	0		+=			
ANR	4812888	Identifier	hi32		4812776	0					
ANR	4812889	Identifier	lo32		4812776	1					
ANR	4812890	ReturnStatement	return ( ( ut64 ) hi32 << 32 ) | lo32 ;	84:1:1720:1752	4812776	6	True				
ANR	4812891	InclusiveOrExpression	( ( ut64 ) hi32 << 32 ) | lo32		4812776	0		|			
ANR	4812892	ShiftExpression	( ut64 ) hi32 << 32		4812776	0		<<			
ANR	4812893	CastExpression	( ut64 ) hi32		4812776	0					
ANR	4812894	CastTarget	ut64		4812776	0					
ANR	4812895	Identifier	hi32		4812776	1					
ANR	4812896	PrimaryExpression	32		4812776	1					
ANR	4812897	Identifier	lo32		4812776	1					
ANR	4812898	ReturnType	R_API ut64		4812776	1					
ANR	4812899	Identifier	r_hash_fletcher64		4812776	2					
ANR	4812900	ParameterList	"const ut8 * addr , size_t len"		4812776	3					
ANR	4812901	Parameter	const ut8 * addr	68:29:1345:1359	4812776	0	True				
ANR	4812902	ParameterType	const ut8 *		4812776	0					
ANR	4812903	Identifier	addr		4812776	1					
ANR	4812904	Parameter	size_t len	68:46:1362:1371	4812776	1	True				
ANR	4812905	ParameterType	size_t		4812776	0					
ANR	4812906	Identifier	len		4812776	1					
ANR	4812907	CFGEntryNode	ENTRY		4812776		True				
ANR	4812908	CFGExitNode	EXIT		4812776		True				
ANR	4812909	Symbol	lo32		4812776						
ANR	4812910	Symbol	hi32		4812776						
ANR	4812911	Symbol	r_read_le32		4812776						
ANR	4812912	Symbol	len		4812776						
ANR	4812913	Symbol	left		4812776						
ANR	4812914	Symbol	w		4812776						
ANR	4812915	Symbol	p32end		4812776						
ANR	4812916	Symbol	R_MIN		4812776						
ANR	4812917	Symbol	addr		4812776						
ANR	4812918	Symbol	word		4812776						
ANR	4812919	Symbol	p32		4812776						
