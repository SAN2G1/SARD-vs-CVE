command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4981552	File	data/converged/CVE-2019-16718~_radare2/libr_main_radiff2.c								
ANR	4981553	ClassDef	<unnamed>	14:0:240:385							
ANR	4981554	ClassDef	<unnamed>	26:0:389:631							
ANR	4981555	DeclStmt									
ANR	4981556	Decl							bool	bool	zignatures
ANR	4981557	DeclStmt									
ANR	4981558	Decl							char	char *	file
ANR	4981559	DeclStmt									
ANR	4981560	Decl							char	char *	file2
ANR	4981561	DeclStmt									
ANR	4981562	Decl							ut32	ut32	count
ANR	4981563	DeclStmt									
ANR	4981564	Decl							int	int	showcount
ANR	4981565	DeclStmt									
ANR	4981566	Decl							int	int	useva
ANR	4981567	DeclStmt									
ANR	4981568	Decl							int	int	delta
ANR	4981569	DeclStmt									
ANR	4981570	Decl							int	int	showbare
ANR	4981571	DeclStmt									
ANR	4981572	Decl							int	int	json_started
ANR	4981573	DeclStmt									
ANR	4981574	Decl							int	int	diffmode
ANR	4981575	DeclStmt									
ANR	4981576	Decl							bool	bool	disasm
ANR	4981577	DeclStmt									
ANR	4981578	Decl							bool	bool	pdc
ANR	4981579	DeclStmt									
ANR	4981580	Decl							bool	bool	quiet
ANR	4981581	DeclStmt									
ANR	4981582	Decl							RCore	RCore *	core
ANR	4981583	DeclStmt									
ANR	4981584	Decl							const char	const char *	arch
ANR	4981585	DeclStmt									
ANR	4981586	Decl							const char	const char *	runcmd
ANR	4981587	DeclStmt									
ANR	4981588	Decl							int	int	bits
ANR	4981589	DeclStmt									
ANR	4981590	Decl							int	int	anal_all
ANR	4981591	DeclStmt									
ANR	4981592	Decl							bool	bool	verbose
ANR	4981593	DeclStmt									
ANR	4981594	Decl							RList	RList *	evals
ANR	4981595	Function	opencore	59:0:1169:2339							
ANR	4981596	FunctionDef	opencore (const char * f)		4981595	0					
ANR	4981597	CompoundStatement		59:38:1207:2339	4981595	0					
ANR	4981598	IdentifierDeclStatement	RListIter * iter ;	60:1:1210:1225	4981595	0	True				
ANR	4981599	IdentifierDecl	* iter		4981595	0					
ANR	4981600	IdentifierDeclType	RListIter *		4981595	0					
ANR	4981601	Identifier	iter		4981595	1					
ANR	4981602	IdentifierDeclStatement	const ut64 baddr = UT64_MAX ;	61:1:1228:1255	4981595	1	True				
ANR	4981603	IdentifierDecl	baddr = UT64_MAX		4981595	0					
ANR	4981604	IdentifierDeclType	const ut64		4981595	0					
ANR	4981605	Identifier	baddr		4981595	1					
ANR	4981606	AssignmentExpression	baddr = UT64_MAX		4981595	2		=			
ANR	4981607	Identifier	UT64_MAX		4981595	0					
ANR	4981608	Identifier	UT64_MAX		4981595	1					
ANR	4981609	IdentifierDeclStatement	const char * e ;	62:1:1258:1271	4981595	2	True				
ANR	4981610	IdentifierDecl	* e		4981595	0					
ANR	4981611	IdentifierDeclType	const char *		4981595	0					
ANR	4981612	Identifier	e		4981595	1					
ANR	4981613	IdentifierDeclStatement	RCore * c = r_core_new ( ) ;	63:1:1274:1298	4981595	3	True				
ANR	4981614	IdentifierDecl	* c = r_core_new ( )		4981595	0					
ANR	4981615	IdentifierDeclType	RCore *		4981595	0					
ANR	4981616	Identifier	c		4981595	1					
ANR	4981617	AssignmentExpression	* c = r_core_new ( )		4981595	2		=			
ANR	4981618	Identifier	c		4981595	0					
ANR	4981619	CallExpression	r_core_new ( )		4981595	1					
ANR	4981620	Callee	r_core_new		4981595	0					
ANR	4981621	Identifier	r_core_new		4981595	0					
ANR	4981622	ArgumentList			4981595	1					
ANR	4981623	IfStatement	if ( ! c )		4981595	4					
ANR	4981624	Condition	! c	64:5:1305:1306	4981595	0	True				
ANR	4981625	UnaryOperationExpression	! c		4981595	0					
ANR	4981626	UnaryOperator	!		4981595	0					
ANR	4981627	Identifier	c		4981595	1					
ANR	4981628	CompoundStatement		6:9:101:101	4981595	1					
ANR	4981629	ReturnStatement	return NULL ;	65:2:1313:1324	4981595	0	True				
ANR	4981630	Identifier	NULL		4981595	0					
ANR	4981631	ExpressionStatement	"r_core_loadlibs ( c , R_CORE_LOADLIBS_ALL , NULL )"	67:1:1330:1376	4981595	5	True				
ANR	4981632	CallExpression	"r_core_loadlibs ( c , R_CORE_LOADLIBS_ALL , NULL )"		4981595	0					
ANR	4981633	Callee	r_core_loadlibs		4981595	0					
ANR	4981634	Identifier	r_core_loadlibs		4981595	0					
ANR	4981635	ArgumentList	c		4981595	1					
ANR	4981636	Argument	c		4981595	0					
ANR	4981637	Identifier	c		4981595	0					
ANR	4981638	Argument	R_CORE_LOADLIBS_ALL		4981595	1					
ANR	4981639	Identifier	R_CORE_LOADLIBS_ALL		4981595	0					
ANR	4981640	Argument	NULL		4981595	2					
ANR	4981641	Identifier	NULL		4981595	0					
ANR	4981642	ExpressionStatement	"r_config_set_i ( c -> config , ""io.va"" , useva )"	68:1:1379:1421	4981595	6	True				
ANR	4981643	CallExpression	"r_config_set_i ( c -> config , ""io.va"" , useva )"		4981595	0					
ANR	4981644	Callee	r_config_set_i		4981595	0					
ANR	4981645	Identifier	r_config_set_i		4981595	0					
ANR	4981646	ArgumentList	c -> config		4981595	1					
ANR	4981647	Argument	c -> config		4981595	0					
ANR	4981648	PtrMemberAccess	c -> config		4981595	0					
ANR	4981649	Identifier	c		4981595	0					
ANR	4981650	Identifier	config		4981595	1					
ANR	4981651	Argument	"""io.va"""		4981595	1					
ANR	4981652	PrimaryExpression	"""io.va"""		4981595	0					
ANR	4981653	Argument	useva		4981595	2					
ANR	4981654	Identifier	useva		4981595	0					
ANR	4981655	ExpressionStatement	"r_config_set_i ( c -> config , ""scr.interactive"" , false )"	69:1:1424:1476	4981595	7	True				
ANR	4981656	CallExpression	"r_config_set_i ( c -> config , ""scr.interactive"" , false )"		4981595	0					
ANR	4981657	Callee	r_config_set_i		4981595	0					
ANR	4981658	Identifier	r_config_set_i		4981595	0					
ANR	4981659	ArgumentList	c -> config		4981595	1					
ANR	4981660	Argument	c -> config		4981595	0					
ANR	4981661	PtrMemberAccess	c -> config		4981595	0					
ANR	4981662	Identifier	c		4981595	0					
ANR	4981663	Identifier	config		4981595	1					
ANR	4981664	Argument	"""scr.interactive"""		4981595	1					
ANR	4981665	PrimaryExpression	"""scr.interactive"""		4981595	0					
ANR	4981666	Argument	false		4981595	2					
ANR	4981667	Identifier	false		4981595	0					
ANR	4981668	Statement	r_list_foreach	70:1:1479:1492	4981595	8	True				
ANR	4981669	Statement	(	70:16:1494:1494	4981595	9	True				
ANR	4981670	Statement	evals	70:17:1495:1499	4981595	10	True				
ANR	4981671	Statement	","	70:22:1500:1500	4981595	11	True				
ANR	4981672	Statement	iter	70:24:1502:1505	4981595	12	True				
ANR	4981673	Statement	","	70:28:1506:1506	4981595	13	True				
ANR	4981674	Statement	e	70:30:1508:1508	4981595	14	True				
ANR	4981675	Statement	)	70:31:1509:1509	4981595	15	True				
ANR	4981676	CompoundStatement		12:33:303:303	4981595	16					
ANR	4981677	ExpressionStatement	"r_config_eval ( c -> config , e , false )"	71:2:1515:1550	4981595	0	True				
ANR	4981678	CallExpression	"r_config_eval ( c -> config , e , false )"		4981595	0					
ANR	4981679	Callee	r_config_eval		4981595	0					
ANR	4981680	Identifier	r_config_eval		4981595	0					
ANR	4981681	ArgumentList	c -> config		4981595	1					
ANR	4981682	Argument	c -> config		4981595	0					
ANR	4981683	PtrMemberAccess	c -> config		4981595	0					
ANR	4981684	Identifier	c		4981595	0					
ANR	4981685	Identifier	config		4981595	1					
ANR	4981686	Argument	e		4981595	1					
ANR	4981687	Identifier	e		4981595	0					
ANR	4981688	Argument	false		4981595	2					
ANR	4981689	Identifier	false		4981595	0					
ANR	4981690	IfStatement	if ( f )		4981595	17					
ANR	4981691	Condition	f	73:5:1560:1560	4981595	0	True				
ANR	4981692	Identifier	f		4981595	0					
ANR	4981693	CompoundStatement		15:8:355:355	4981595	1					
ANR	4981694	ExpressionStatement	f = r_acp_to_utf8 ( f )	75:2:1583:1604	4981595	0	True				
ANR	4981695	AssignmentExpression	f = r_acp_to_utf8 ( f )		4981595	0		=			
ANR	4981696	Identifier	f		4981595	0					
ANR	4981697	CallExpression	r_acp_to_utf8 ( f )		4981595	1					
ANR	4981698	Callee	r_acp_to_utf8		4981595	0					
ANR	4981699	Identifier	r_acp_to_utf8		4981595	0					
ANR	4981700	ArgumentList	f		4981595	1					
ANR	4981701	Argument	f		4981595	0					
ANR	4981702	Identifier	f		4981595	0					
ANR	4981703	IfStatement	"if ( ! r_core_file_open ( c , f , 0 , 0 ) )"		4981595	1					
ANR	4981704	Condition	"! r_core_file_open ( c , f , 0 , 0 )"	77:6:1619:1648	4981595	0	True				
ANR	4981705	UnaryOperationExpression	"! r_core_file_open ( c , f , 0 , 0 )"		4981595	0					
ANR	4981706	UnaryOperator	!		4981595	0					
ANR	4981707	CallExpression	"r_core_file_open ( c , f , 0 , 0 )"		4981595	1					
ANR	4981708	Callee	r_core_file_open		4981595	0					
ANR	4981709	Identifier	r_core_file_open		4981595	0					
ANR	4981710	ArgumentList	c		4981595	1					
ANR	4981711	Argument	c		4981595	0					
ANR	4981712	Identifier	c		4981595	0					
ANR	4981713	Argument	f		4981595	1					
ANR	4981714	Identifier	f		4981595	0					
ANR	4981715	Argument	0		4981595	2					
ANR	4981716	PrimaryExpression	0		4981595	0					
ANR	4981717	Argument	0		4981595	3					
ANR	4981718	PrimaryExpression	0		4981595	0					
ANR	4981719	CompoundStatement		19:38:443:443	4981595	1					
ANR	4981720	ExpressionStatement	r_core_free ( c )	78:3:1656:1671	4981595	0	True				
ANR	4981721	CallExpression	r_core_free ( c )		4981595	0					
ANR	4981722	Callee	r_core_free		4981595	0					
ANR	4981723	Identifier	r_core_free		4981595	0					
ANR	4981724	ArgumentList	c		4981595	1					
ANR	4981725	Argument	c		4981595	0					
ANR	4981726	Identifier	c		4981595	0					
ANR	4981727	ReturnStatement	return NULL ;	79:3:1676:1687	4981595	1	True				
ANR	4981728	Identifier	NULL		4981595	0					
ANR	4981729	ExpressionStatement	"( void ) r_core_bin_load ( c , NULL , baddr )"	81:2:1695:1734	4981595	2	True				
ANR	4981730	CastExpression	"( void ) r_core_bin_load ( c , NULL , baddr )"		4981595	0					
ANR	4981731	CastTarget	void		4981595	0					
ANR	4981732	CallExpression	"r_core_bin_load ( c , NULL , baddr )"		4981595	1					
ANR	4981733	Callee	r_core_bin_load		4981595	0					
ANR	4981734	Identifier	r_core_bin_load		4981595	0					
ANR	4981735	ArgumentList	c		4981595	1					
ANR	4981736	Argument	c		4981595	0					
ANR	4981737	Identifier	c		4981595	0					
ANR	4981738	Argument	NULL		4981595	1					
ANR	4981739	Identifier	NULL		4981595	0					
ANR	4981740	Argument	baddr		4981595	2					
ANR	4981741	Identifier	baddr		4981595	0					
ANR	4981742	ExpressionStatement	( void ) r_core_bin_update_arch_bits ( c )	82:2:1738:1776	4981595	3	True				
ANR	4981743	CastExpression	( void ) r_core_bin_update_arch_bits ( c )		4981595	0					
ANR	4981744	CastTarget	void		4981595	0					
ANR	4981745	CallExpression	r_core_bin_update_arch_bits ( c )		4981595	1					
ANR	4981746	Callee	r_core_bin_update_arch_bits		4981595	0					
ANR	4981747	Identifier	r_core_bin_update_arch_bits		4981595	0					
ANR	4981748	ArgumentList	c		4981595	1					
ANR	4981749	Argument	c		4981595	0					
ANR	4981750	Identifier	c		4981595	0					
ANR	4981751	IfStatement	if ( r_list_empty ( r_bin_get_sections ( c -> bin ) ) )		4981595	4					
ANR	4981752	Condition	r_list_empty ( r_bin_get_sections ( c -> bin ) )	85:6:1831:1872	4981595	0	True				
ANR	4981753	CallExpression	r_list_empty ( r_bin_get_sections ( c -> bin ) )		4981595	0					
ANR	4981754	Callee	r_list_empty		4981595	0					
ANR	4981755	Identifier	r_list_empty		4981595	0					
ANR	4981756	ArgumentList	r_bin_get_sections ( c -> bin )		4981595	1					
ANR	4981757	Argument	r_bin_get_sections ( c -> bin )		4981595	0					
ANR	4981758	CallExpression	r_bin_get_sections ( c -> bin )		4981595	0					
ANR	4981759	Callee	r_bin_get_sections		4981595	0					
ANR	4981760	Identifier	r_bin_get_sections		4981595	0					
ANR	4981761	ArgumentList	c -> bin		4981595	1					
ANR	4981762	Argument	c -> bin		4981595	0					
ANR	4981763	PtrMemberAccess	c -> bin		4981595	0					
ANR	4981764	Identifier	c		4981595	0					
ANR	4981765	Identifier	bin		4981595	1					
ANR	4981766	CompoundStatement		27:50:667:667	4981595	1					
ANR	4981767	ExpressionStatement	"r_config_set_i ( c -> config , ""io.va"" , false )"	86:3:1880:1922	4981595	0	True				
ANR	4981768	CallExpression	"r_config_set_i ( c -> config , ""io.va"" , false )"		4981595	0					
ANR	4981769	Callee	r_config_set_i		4981595	0					
ANR	4981770	Identifier	r_config_set_i		4981595	0					
ANR	4981771	ArgumentList	c -> config		4981595	1					
ANR	4981772	Argument	c -> config		4981595	0					
ANR	4981773	PtrMemberAccess	c -> config		4981595	0					
ANR	4981774	Identifier	c		4981595	0					
ANR	4981775	Identifier	config		4981595	1					
ANR	4981776	Argument	"""io.va"""		4981595	1					
ANR	4981777	PrimaryExpression	"""io.va"""		4981595	0					
ANR	4981778	Argument	false		4981595	2					
ANR	4981779	Identifier	false		4981595	0					
ANR	4981780	IfStatement	if ( anal_all )		4981595	5					
ANR	4981781	Condition	anal_all	89:6:1935:1942	4981595	0	True				
ANR	4981782	Identifier	anal_all		4981595	0					
ANR	4981783	CompoundStatement		32:3:742:765	4981595	1					
ANR	4981784	IdentifierDeclStatement	"const char * cmd = ""aac"" ;"	90:3:1950:1973	4981595	0	True				
ANR	4981785	IdentifierDecl	"* cmd = ""aac"""		4981595	0					
ANR	4981786	IdentifierDeclType	const char *		4981595	0					
ANR	4981787	Identifier	cmd		4981595	1					
ANR	4981788	AssignmentExpression	"* cmd = ""aac"""		4981595	2		=			
ANR	4981789	Identifier	cmd		4981595	0					
ANR	4981790	PrimaryExpression	"""aac"""		4981595	1					
ANR	4981791	SwitchStatement	switch ( anal_all )		4981595	1					
ANR	4981792	Condition	anal_all	91:11:1986:1993	4981595	0	True				
ANR	4981793	Identifier	anal_all		4981595	0					
ANR	4981794	CompoundStatement		33:21:788:788	4981595	1					
ANR	4981795	Label	case 1 :	92:3:2001:2007	4981595	0	True				
ANR	4981796	ExpressionStatement	"cmd = ""aaa"""	92:11:2009:2020	4981595	1	True				
ANR	4981797	AssignmentExpression	"cmd = ""aaa"""		4981595	0		=			
ANR	4981798	Identifier	cmd		4981595	0					
ANR	4981799	PrimaryExpression	"""aaa"""		4981595	1					
ANR	4981800	BreakStatement	break ;	92:24:2022:2027	4981595	2	True				
ANR	4981801	Label	case 2 :	93:3:2032:2038	4981595	3	True				
ANR	4981802	ExpressionStatement	"cmd = ""aaaa"""	93:11:2040:2052	4981595	4	True				
ANR	4981803	AssignmentExpression	"cmd = ""aaaa"""		4981595	0		=			
ANR	4981804	Identifier	cmd		4981595	0					
ANR	4981805	PrimaryExpression	"""aaaa"""		4981595	1					
ANR	4981806	BreakStatement	break ;	93:25:2054:2059	4981595	5	True				
ANR	4981807	ExpressionStatement	"r_core_cmd0 ( c , cmd )"	95:3:2069:2089	4981595	2	True				
ANR	4981808	CallExpression	"r_core_cmd0 ( c , cmd )"		4981595	0					
ANR	4981809	Callee	r_core_cmd0		4981595	0					
ANR	4981810	Identifier	r_core_cmd0		4981595	0					
ANR	4981811	ArgumentList	c		4981595	1					
ANR	4981812	Argument	c		4981595	0					
ANR	4981813	Identifier	c		4981595	0					
ANR	4981814	Argument	cmd		4981595	1					
ANR	4981815	Identifier	cmd		4981595	0					
ANR	4981816	IfStatement	if ( runcmd )		4981595	6					
ANR	4981817	Condition	runcmd	97:6:2101:2106	4981595	0	True				
ANR	4981818	Identifier	runcmd		4981595	0					
ANR	4981819	CompoundStatement		39:14:901:901	4981595	1					
ANR	4981820	ExpressionStatement	"r_core_cmd0 ( c , runcmd )"	98:3:2114:2137	4981595	0	True				
ANR	4981821	CallExpression	"r_core_cmd0 ( c , runcmd )"		4981595	0					
ANR	4981822	Callee	r_core_cmd0		4981595	0					
ANR	4981823	Identifier	r_core_cmd0		4981595	0					
ANR	4981824	ArgumentList	c		4981595	1					
ANR	4981825	Argument	c		4981595	0					
ANR	4981826	Identifier	c		4981595	0					
ANR	4981827	Argument	runcmd		4981595	1					
ANR	4981828	Identifier	runcmd		4981595	0					
ANR	4981829	IfStatement	if ( zignatures )		4981595	7					
ANR	4981830	Condition	zignatures	101:6:2175:2184	4981595	0	True				
ANR	4981831	Identifier	zignatures		4981595	0					
ANR	4981832	CompoundStatement		43:18:979:979	4981595	1					
ANR	4981833	ExpressionStatement	"r_core_cmd0 ( c , ""zg"" )"	102:3:2192:2213	4981595	0	True				
ANR	4981834	CallExpression	"r_core_cmd0 ( c , ""zg"" )"		4981595	0					
ANR	4981835	Callee	r_core_cmd0		4981595	0					
ANR	4981836	Identifier	r_core_cmd0		4981595	0					
ANR	4981837	ArgumentList	c		4981595	1					
ANR	4981838	Argument	c		4981595	0					
ANR	4981839	Identifier	c		4981595	0					
ANR	4981840	Argument	"""zg"""		4981595	1					
ANR	4981841	PrimaryExpression	"""zg"""		4981595	0					
ANR	4981842	ExpressionStatement	r_cons_flush ( )	104:2:2221:2236	4981595	8	True				
ANR	4981843	CallExpression	r_cons_flush ( )		4981595	0					
ANR	4981844	Callee	r_cons_flush		4981595	0					
ANR	4981845	Identifier	r_cons_flush		4981595	0					
ANR	4981846	ArgumentList			4981595	1					
ANR	4981847	ReturnStatement	return c ;	107:1:2329:2337	4981595	18	True				
ANR	4981848	Identifier	c		4981595	0					
ANR	4981849	ReturnType	static RCore *		4981595	1					
ANR	4981850	Identifier	opencore		4981595	2					
ANR	4981851	ParameterList	const char * f		4981595	3					
ANR	4981852	Parameter	const char * f	59:23:1192:1204	4981595	0	True				
ANR	4981853	ParameterType	const char *		4981595	0					
ANR	4981854	Identifier	f		4981595	1					
ANR	4981855	CFGEntryNode	ENTRY		4981595		True				
ANR	4981856	CFGExitNode	EXIT		4981595		True				
ANR	4981857	Symbol	baddr		4981595						
ANR	4981858	Symbol	c -> config		4981595						
ANR	4981859	Symbol	c		4981595						
ANR	4981860	Symbol	NULL		4981595						
ANR	4981861	Symbol	runcmd		4981595						
ANR	4981862	Symbol	zignatures		4981595						
ANR	4981863	Symbol	e		4981595						
ANR	4981864	Symbol	f		4981595						
ANR	4981865	Symbol	false		4981595						
ANR	4981866	Symbol	iter		4981595						
ANR	4981867	Symbol	c -> bin		4981595						
ANR	4981868	Symbol	r_core_new		4981595						
ANR	4981869	Symbol	r_core_file_open		4981595						
ANR	4981870	Symbol	* c		4981595						
ANR	4981871	Symbol	useva		4981595						
ANR	4981872	Symbol	r_acp_to_utf8		4981595						
ANR	4981873	Symbol	R_CORE_LOADLIBS_ALL		4981595						
ANR	4981874	Symbol	r_list_empty		4981595						
ANR	4981875	Symbol	cmd		4981595						
ANR	4981876	Symbol	UT64_MAX		4981595						
ANR	4981877	Symbol	r_bin_get_sections		4981595						
ANR	4981878	Symbol	anal_all		4981595						
ANR	4981879	Function	readstr	110:0:2342:2562							
ANR	4981880	FunctionDef	"readstr (char * s , int sz , const ut8 * buf , int len)"		4981879	0					
ANR	4981881	CompoundStatement		110:62:2404:2562	4981879	0					
ANR	4981882	ExpressionStatement	* s = 0	111:1:2407:2413	4981879	0	True				
ANR	4981883	AssignmentExpression	* s = 0		4981879	0		=			
ANR	4981884	UnaryOperationExpression	* s		4981879	0					
ANR	4981885	UnaryOperator	*		4981879	0					
ANR	4981886	Identifier	s		4981879	1					
ANR	4981887	PrimaryExpression	0		4981879	1					
ANR	4981888	IdentifierDeclStatement	"int last = R_MIN ( len , sz ) ;"	112:1:2416:2442	4981879	1	True				
ANR	4981889	IdentifierDecl	"last = R_MIN ( len , sz )"		4981879	0					
ANR	4981890	IdentifierDeclType	int		4981879	0					
ANR	4981891	Identifier	last		4981879	1					
ANR	4981892	AssignmentExpression	"last = R_MIN ( len , sz )"		4981879	2		=			
ANR	4981893	Identifier	last		4981879	0					
ANR	4981894	CallExpression	"R_MIN ( len , sz )"		4981879	1					
ANR	4981895	Callee	R_MIN		4981879	0					
ANR	4981896	Identifier	R_MIN		4981879	0					
ANR	4981897	ArgumentList	len		4981879	1					
ANR	4981898	Argument	len		4981879	0					
ANR	4981899	Identifier	len		4981879	0					
ANR	4981900	Argument	sz		4981879	1					
ANR	4981901	Identifier	sz		4981879	0					
ANR	4981902	IfStatement	if ( last < 1 )		4981879	2					
ANR	4981903	Condition	last < 1	113:5:2449:2456	4981879	0	True				
ANR	4981904	RelationalExpression	last < 1		4981879	0		<			
ANR	4981905	Identifier	last		4981879	0					
ANR	4981906	PrimaryExpression	1		4981879	1					
ANR	4981907	CompoundStatement		4:15:54:54	4981879	1					
ANR	4981908	ReturnStatement	return ;	114:2:2463:2469	4981879	0	True				
ANR	4981909	ExpressionStatement	s [ sz - 1 ] = 0	116:1:2475:2488	4981879	3	True				
ANR	4981910	AssignmentExpression	s [ sz - 1 ] = 0		4981879	0		=			
ANR	4981911	ArrayIndexing	s [ sz - 1 ]		4981879	0					
ANR	4981912	Identifier	s		4981879	0					
ANR	4981913	AdditiveExpression	sz - 1		4981879	1		-			
ANR	4981914	Identifier	sz		4981879	0					
ANR	4981915	PrimaryExpression	1		4981879	1					
ANR	4981916	PrimaryExpression	0		4981879	1					
ANR	4981917	WhileStatement	while ( * s && * s == '\\n' )		4981879	4					
ANR	4981918	Condition	* s && * s == '\\n'	117:8:2498:2513	4981879	0	True				
ANR	4981919	AndExpression	* s && * s == '\\n'		4981879	0		&&			
ANR	4981920	UnaryOperationExpression	* s		4981879	0					
ANR	4981921	UnaryOperator	*		4981879	0					
ANR	4981922	Identifier	s		4981879	1					
ANR	4981923	EqualityExpression	* s == '\\n'		4981879	1		==			
ANR	4981924	UnaryOperationExpression	* s		4981879	0					
ANR	4981925	UnaryOperator	*		4981879	0					
ANR	4981926	Identifier	s		4981879	1					
ANR	4981927	PrimaryExpression	'\\n'		4981879	1					
ANR	4981928	CompoundStatement		8:26:111:111	4981879	1					
ANR	4981929	ExpressionStatement	s ++	118:2:2520:2523	4981879	0	True				
ANR	4981930	PostIncDecOperationExpression	s ++		4981879	0					
ANR	4981931	Identifier	s		4981879	0					
ANR	4981932	IncDec	++		4981879	1					
ANR	4981933	ExpressionStatement	"strncpy ( s , ( char * ) buf , last )"	120:1:2529:2560	4981879	5	True				
ANR	4981934	CallExpression	"strncpy ( s , ( char * ) buf , last )"		4981879	0					
ANR	4981935	Callee	strncpy		4981879	0					
ANR	4981936	Identifier	strncpy		4981879	0					
ANR	4981937	ArgumentList	s		4981879	1					
ANR	4981938	Argument	s		4981879	0					
ANR	4981939	Identifier	s		4981879	0					
ANR	4981940	Argument	( char * ) buf		4981879	1					
ANR	4981941	CastExpression	( char * ) buf		4981879	0					
ANR	4981942	CastTarget	char *		4981879	0					
ANR	4981943	Identifier	buf		4981879	1					
ANR	4981944	Argument	last		4981879	2					
ANR	4981945	Identifier	last		4981879	0					
ANR	4981946	ReturnType	static void		4981879	1					
ANR	4981947	Identifier	readstr		4981879	2					
ANR	4981948	ParameterList	"char * s , int sz , const ut8 * buf , int len"		4981879	3					
ANR	4981949	Parameter	char * s	110:20:2362:2368	4981879	0	True				
ANR	4981950	ParameterType	char *		4981879	0					
ANR	4981951	Identifier	s		4981879	1					
ANR	4981952	Parameter	int sz	110:29:2371:2376	4981879	1	True				
ANR	4981953	ParameterType	int		4981879	0					
ANR	4981954	Identifier	sz		4981879	1					
ANR	4981955	Parameter	const ut8 * buf	110:37:2379:2392	4981879	2	True				
ANR	4981956	ParameterType	const ut8 *		4981879	0					
ANR	4981957	Identifier	buf		4981879	1					
ANR	4981958	Parameter	int len	110:53:2395:2401	4981879	3	True				
ANR	4981959	ParameterType	int		4981879	0					
ANR	4981960	Identifier	len		4981879	1					
ANR	4981961	CFGEntryNode	ENTRY		4981879		True				
ANR	4981962	CFGExitNode	EXIT		4981879		True				
ANR	4981963	Symbol	buf		4981879						
ANR	4981964	Symbol	s		4981879						
ANR	4981965	Symbol	len		4981879						
ANR	4981966	Symbol	last		4981879						
ANR	4981967	Symbol	sz		4981879						
ANR	4981968	Symbol	R_MIN		4981879						
ANR	4981969	Symbol	* s		4981879						
ANR	4981970	Symbol	* sz		4981879						
ANR	4981971	Function	cb	123:0:2565:6837							
ANR	4981972	FunctionDef	"cb (RDiff * d , void * user , RDiffOp * op)"		4981971	0					
ANR	4981973	CompoundStatement		123:49:2614:6837	4981971	0					
ANR	4981974	IdentifierDeclStatement	int i ;	124:1:2617:2622	4981971	0	True				
ANR	4981975	IdentifierDecl	i		4981971	0					
ANR	4981976	IdentifierDeclType	int		4981971	0					
ANR	4981977	Identifier	i		4981971	1					
ANR	4981978	IdentifierDeclStatement	char s [ 256 ] = { 0 } ;	125:1:2660:2677	4981971	1	True				
ANR	4981979	IdentifierDecl	s [ 256 ] = { 0 }		4981971	0					
ANR	4981980	IdentifierDeclType	char [ 256 ]		4981971	0					
ANR	4981981	Identifier	s		4981971	1					
ANR	4981982	PrimaryExpression	256		4981971	2					
ANR	4981983	AssignmentExpression	s [ 256 ] = { 0 }		4981971	3		=			
ANR	4981984	Identifier	s		4981971	0					
ANR	4981985	InitializerList	0		4981971	1					
ANR	4981986	PrimaryExpression	0		4981971	0					
ANR	4981987	IfStatement	if ( showcount )		4981971	2					
ANR	4981988	Condition	showcount	126:5:2684:2692	4981971	0	True				
ANR	4981989	Identifier	showcount		4981971	0					
ANR	4981990	CompoundStatement		4:16:80:80	4981971	1					
ANR	4981991	ExpressionStatement	count ++	127:2:2699:2706	4981971	0	True				
ANR	4981992	PostIncDecOperationExpression	count ++		4981971	0					
ANR	4981993	Identifier	count		4981971	0					
ANR	4981994	IncDec	++		4981971	1					
ANR	4981995	ReturnStatement	return 1 ;	128:2:2710:2718	4981971	1	True				
ANR	4981996	PrimaryExpression	1		4981971	0					
ANR	4981997	SwitchStatement	switch ( diffmode )		4981971	3					
ANR	4981998	Condition	diffmode	130:9:2732:2739	4981971	0	True				
ANR	4981999	Identifier	diffmode		4981971	0					
ANR	4982000	CompoundStatement		8:19:127:127	4981971	1					
ANR	4982001	Label	case 'U' :	131:1:2745:2753	4981971	0	True				
ANR	4982002	Label	case 'u' :	132:1:2792:2800	4981971	1	True				
ANR	4982003	IfStatement	if ( op -> a_len > 0 )		4981971	2					
ANR	4982004	Condition	op -> a_len > 0	133:6:2808:2820	4981971	0	True				
ANR	4982005	RelationalExpression	op -> a_len > 0		4981971	0		>			
ANR	4982006	PtrMemberAccess	op -> a_len		4981971	0					
ANR	4982007	Identifier	op		4981971	0					
ANR	4982008	Identifier	a_len		4981971	1					
ANR	4982009	PrimaryExpression	0		4981971	1					
ANR	4982010	CompoundStatement		11:21:208:208	4981971	1					
ANR	4982011	ExpressionStatement	"readstr ( s , sizeof ( s ) , op -> a_buf , op -> a_len )"	134:3:2828:2873	4981971	0	True				
ANR	4982012	CallExpression	"readstr ( s , sizeof ( s ) , op -> a_buf , op -> a_len )"		4981971	0					
ANR	4982013	Callee	readstr		4981971	0					
ANR	4982014	Identifier	readstr		4981971	0					
ANR	4982015	ArgumentList	s		4981971	1					
ANR	4982016	Argument	s		4981971	0					
ANR	4982017	Identifier	s		4981971	0					
ANR	4982018	Argument	sizeof ( s )		4981971	1					
ANR	4982019	SizeofExpression	sizeof ( s )		4981971	0					
ANR	4982020	Sizeof	sizeof		4981971	0					
ANR	4982021	SizeofOperand	s		4981971	1					
ANR	4982022	Argument	op -> a_buf		4981971	2					
ANR	4982023	PtrMemberAccess	op -> a_buf		4981971	0					
ANR	4982024	Identifier	op		4981971	0					
ANR	4982025	Identifier	a_buf		4981971	1					
ANR	4982026	Argument	op -> a_len		4981971	3					
ANR	4982027	PtrMemberAccess	op -> a_len		4981971	0					
ANR	4982028	Identifier	op		4981971	0					
ANR	4982029	Identifier	a_len		4981971	1					
ANR	4982030	IfStatement	if ( * s )		4981971	1					
ANR	4982031	Condition	* s	135:7:2882:2883	4981971	0	True				
ANR	4982032	UnaryOperationExpression	* s		4981971	0					
ANR	4982033	UnaryOperator	*		4981971	0					
ANR	4982034	Identifier	s		4981971	1					
ANR	4982035	CompoundStatement		22:4:511:558	4981971	1					
ANR	4982036	IfStatement	if ( ! quiet )		4981971	0					
ANR	4982037	Condition	! quiet	136:8:2896:2901	4981971	0	True				
ANR	4982038	UnaryOperationExpression	! quiet		4981971	0					
ANR	4982039	UnaryOperator	!		4981971	0					
ANR	4982040	Identifier	quiet		4981971	1					
ANR	4982041	CompoundStatement		14:16:289:289	4981971	1					
ANR	4982042	ExpressionStatement	printf ( Color_RED )	137:5:2911:2929	4981971	0	True				
ANR	4982043	CallExpression	printf ( Color_RED )		4981971	0					
ANR	4982044	Callee	printf		4981971	0					
ANR	4982045	Identifier	printf		4981971	0					
ANR	4982046	ArgumentList	Color_RED		4981971	1					
ANR	4982047	Argument	Color_RED		4981971	0					
ANR	4982048	Identifier	Color_RED		4981971	0					
ANR	4982049	Statement	printf	139:4:2941:2946	4981971	1	True				
ANR	4982050	Statement	(	139:11:2948:2948	4981971	2	True				
ANR	4982051	Statement	"""-0x%08"""	139:12:2949:2956	4981971	3	True				
ANR	4982052	Statement	PFMT64x	139:20:2957:2963	4981971	4	True				
ANR	4982053	Statement	""":"""	139:27:2964:2966	4981971	5	True				
ANR	4982054	Statement	","	139:30:2967:2967	4981971	6	True				
ANR	4982055	Statement	op	139:32:2969:2970	4981971	7	True				
ANR	4982056	Statement	->	139:34:2971:2972	4981971	8	True				
ANR	4982057	Statement	a_off	139:36:2973:2977	4981971	9	True				
ANR	4982058	Statement	)	139:41:2978:2978	4981971	10	True				
ANR	4982059	ExpressionStatement		139:42:2979:2979	4981971	11	True				
ANR	4982060	IdentifierDeclStatement	int len = op -> a_len ;	140:4:2985:3004	4981971	12	True				
ANR	4982061	IdentifierDecl	len = op -> a_len		4981971	0					
ANR	4982062	IdentifierDeclType	int		4981971	0					
ANR	4982063	Identifier	len		4981971	1					
ANR	4982064	AssignmentExpression	len = op -> a_len		4981971	2		=			
ANR	4982065	Identifier	len		4981971	0					
ANR	4982066	PtrMemberAccess	op -> a_len		4981971	1					
ANR	4982067	Identifier	op		4981971	0					
ANR	4982068	Identifier	a_len		4981971	1					
ANR	4982069	ForStatement	for ( i = 0 ; i < len ; i ++ )		4981971	13					
ANR	4982070	ForInit	i = 0 ;	141:9:3057:3062	4981971	0	True				
ANR	4982071	AssignmentExpression	i = 0		4981971	0		=			
ANR	4982072	Identifier	i		4981971	0					
ANR	4982073	PrimaryExpression	0		4981971	1					
ANR	4982074	Condition	i < len	141:16:3064:3070	4981971	1	True				
ANR	4982075	RelationalExpression	i < len		4981971	0		<			
ANR	4982076	Identifier	i		4981971	0					
ANR	4982077	Identifier	len		4981971	1					
ANR	4982078	PostIncDecOperationExpression	i ++	141:25:3073:3075	4981971	2	True				
ANR	4982079	Identifier	i		4981971	0					
ANR	4982080	IncDec	++		4981971	1					
ANR	4982081	CompoundStatement		19:30:463:463	4981971	3					
ANR	4982082	ExpressionStatement	"printf ( ""%02x"" , op -> a_buf [ i ] )"	142:5:3085:3114	4981971	0	True				
ANR	4982083	CallExpression	"printf ( ""%02x"" , op -> a_buf [ i ] )"		4981971	0					
ANR	4982084	Callee	printf		4981971	0					
ANR	4982085	Identifier	printf		4981971	0					
ANR	4982086	ArgumentList	"""%02x"""		4981971	1					
ANR	4982087	Argument	"""%02x"""		4981971	0					
ANR	4982088	PrimaryExpression	"""%02x"""		4981971	0					
ANR	4982089	Argument	op -> a_buf [ i ]		4981971	1					
ANR	4982090	ArrayIndexing	op -> a_buf [ i ]		4981971	0					
ANR	4982091	PtrMemberAccess	op -> a_buf		4981971	0					
ANR	4982092	Identifier	op		4981971	0					
ANR	4982093	Identifier	a_buf		4981971	1					
ANR	4982094	Identifier	i		4981971	1					
ANR	4982095	IdentifierDeclStatement	char * p = r_str_escape ( ( const char * ) op -> a_buf ) ;	144:4:3126:3173	4981971	14	True				
ANR	4982096	IdentifierDecl	* p = r_str_escape ( ( const char * ) op -> a_buf )		4981971	0					
ANR	4982097	IdentifierDeclType	char *		4981971	0					
ANR	4982098	Identifier	p		4981971	1					
ANR	4982099	AssignmentExpression	* p = r_str_escape ( ( const char * ) op -> a_buf )		4981971	2		=			
ANR	4982100	Identifier	p		4981971	0					
ANR	4982101	CallExpression	r_str_escape ( ( const char * ) op -> a_buf )		4981971	1					
ANR	4982102	Callee	r_str_escape		4981971	0					
ANR	4982103	Identifier	r_str_escape		4981971	0					
ANR	4982104	ArgumentList	( const char * ) op -> a_buf		4981971	1					
ANR	4982105	Argument	( const char * ) op -> a_buf		4981971	0					
ANR	4982106	CastExpression	( const char * ) op -> a_buf		4981971	0					
ANR	4982107	CastTarget	const char *		4981971	0					
ANR	4982108	PtrMemberAccess	op -> a_buf		4981971	1					
ANR	4982109	Identifier	op		4981971	0					
ANR	4982110	Identifier	a_buf		4981971	1					
ANR	4982111	ExpressionStatement	"printf ( "" \\""%s\\""\\n"" , p )"	145:4:3179:3202	4981971	15	True				
ANR	4982112	CallExpression	"printf ( "" \\""%s\\""\\n"" , p )"		4981971	0					
ANR	4982113	Callee	printf		4981971	0					
ANR	4982114	Identifier	printf		4981971	0					
ANR	4982115	ArgumentList	""" \\""%s\\""\\n"""		4981971	1					
ANR	4982116	Argument	""" \\""%s\\""\\n"""		4981971	0					
ANR	4982117	PrimaryExpression	""" \\""%s\\""\\n"""		4981971	0					
ANR	4982118	Argument	p		4981971	1					
ANR	4982119	Identifier	p		4981971	0					
ANR	4982120	ExpressionStatement	free ( p )	146:4:3208:3216	4981971	16	True				
ANR	4982121	CallExpression	free ( p )		4981971	0					
ANR	4982122	Callee	free		4981971	0					
ANR	4982123	Identifier	free		4981971	0					
ANR	4982124	ArgumentList	p		4981971	1					
ANR	4982125	Argument	p		4981971	0					
ANR	4982126	Identifier	p		4981971	0					
ANR	4982127	IfStatement	if ( ! quiet )		4981971	17					
ANR	4982128	Condition	! quiet	147:8:3226:3231	4981971	0	True				
ANR	4982129	UnaryOperationExpression	! quiet		4981971	0					
ANR	4982130	UnaryOperator	!		4981971	0					
ANR	4982131	Identifier	quiet		4981971	1					
ANR	4982132	CompoundStatement		25:16:619:619	4981971	1					
ANR	4982133	ExpressionStatement	printf ( Color_RESET )	148:5:3241:3261	4981971	0	True				
ANR	4982134	CallExpression	printf ( Color_RESET )		4981971	0					
ANR	4982135	Callee	printf		4981971	0					
ANR	4982136	Identifier	printf		4981971	0					
ANR	4982137	ArgumentList	Color_RESET		4981971	1					
ANR	4982138	Argument	Color_RESET		4981971	0					
ANR	4982139	Identifier	Color_RESET		4981971	0					
ANR	4982140	IfStatement	if ( op -> b_len > 0 )		4981971	3					
ANR	4982141	Condition	op -> b_len > 0	152:6:3284:3296	4981971	0	True				
ANR	4982142	RelationalExpression	op -> b_len > 0		4981971	0		>			
ANR	4982143	PtrMemberAccess	op -> b_len		4981971	0					
ANR	4982144	Identifier	op		4981971	0					
ANR	4982145	Identifier	b_len		4981971	1					
ANR	4982146	PrimaryExpression	0		4981971	1					
ANR	4982147	CompoundStatement		30:21:684:684	4981971	1					
ANR	4982148	ExpressionStatement	"readstr ( s , sizeof ( s ) , op -> b_buf , op -> b_len )"	153:3:3304:3349	4981971	0	True				
ANR	4982149	CallExpression	"readstr ( s , sizeof ( s ) , op -> b_buf , op -> b_len )"		4981971	0					
ANR	4982150	Callee	readstr		4981971	0					
ANR	4982151	Identifier	readstr		4981971	0					
ANR	4982152	ArgumentList	s		4981971	1					
ANR	4982153	Argument	s		4981971	0					
ANR	4982154	Identifier	s		4981971	0					
ANR	4982155	Argument	sizeof ( s )		4981971	1					
ANR	4982156	SizeofExpression	sizeof ( s )		4981971	0					
ANR	4982157	Sizeof	sizeof		4981971	0					
ANR	4982158	SizeofOperand	s		4981971	1					
ANR	4982159	Argument	op -> b_buf		4981971	2					
ANR	4982160	PtrMemberAccess	op -> b_buf		4981971	0					
ANR	4982161	Identifier	op		4981971	0					
ANR	4982162	Identifier	b_buf		4981971	1					
ANR	4982163	Argument	op -> b_len		4981971	3					
ANR	4982164	PtrMemberAccess	op -> b_len		4981971	0					
ANR	4982165	Identifier	op		4981971	0					
ANR	4982166	Identifier	b_len		4981971	1					
ANR	4982167	IfStatement	if ( * s )		4981971	1					
ANR	4982168	Condition	* s	154:7:3358:3359	4981971	0	True				
ANR	4982169	UnaryOperationExpression	* s		4981971	0					
ANR	4982170	UnaryOperator	*		4981971	0					
ANR	4982171	Identifier	s		4981971	1					
ANR	4982172	CompoundStatement		32:11:747:747	4981971	1					
ANR	4982173	IfStatement	if ( ! quiet )		4981971	0					
ANR	4982174	Condition	! quiet	155:8:3372:3377	4981971	0	True				
ANR	4982175	UnaryOperationExpression	! quiet		4981971	0					
ANR	4982176	UnaryOperator	!		4981971	0					
ANR	4982177	Identifier	quiet		4981971	1					
ANR	4982178	CompoundStatement		33:16:765:765	4981971	1					
ANR	4982179	ExpressionStatement	printf ( Color_GREEN )	156:5:3387:3407	4981971	0	True				
ANR	4982180	CallExpression	printf ( Color_GREEN )		4981971	0					
ANR	4982181	Callee	printf		4981971	0					
ANR	4982182	Identifier	printf		4981971	0					
ANR	4982183	ArgumentList	Color_GREEN		4981971	1					
ANR	4982184	Argument	Color_GREEN		4981971	0					
ANR	4982185	Identifier	Color_GREEN		4981971	0					
ANR	4982186	Statement	printf	158:4:3419:3424	4981971	1	True				
ANR	4982187	Statement	(	158:11:3426:3426	4981971	2	True				
ANR	4982188	Statement	"""+0x%08"""	158:12:3427:3434	4981971	3	True				
ANR	4982189	Statement	PFMT64x	158:20:3435:3441	4981971	4	True				
ANR	4982190	Statement	""":"""	158:27:3442:3444	4981971	5	True				
ANR	4982191	Statement	","	158:30:3445:3445	4981971	6	True				
ANR	4982192	Statement	op	158:32:3447:3448	4981971	7	True				
ANR	4982193	Statement	->	158:34:3449:3450	4981971	8	True				
ANR	4982194	Statement	b_off	158:36:3451:3455	4981971	9	True				
ANR	4982195	Statement	)	158:41:3456:3456	4981971	10	True				
ANR	4982196	ExpressionStatement		158:42:3457:3457	4981971	11	True				
ANR	4982197	ForStatement	for ( i = 0 ; i < op -> b_len ; i ++ )		4981971	12					
ANR	4982198	ForInit	i = 0 ;	159:9:3468:3473	4981971	0	True				
ANR	4982199	AssignmentExpression	i = 0		4981971	0		=			
ANR	4982200	Identifier	i		4981971	0					
ANR	4982201	PrimaryExpression	0		4981971	1					
ANR	4982202	Condition	i < op -> b_len	159:16:3475:3487	4981971	1	True				
ANR	4982203	RelationalExpression	i < op -> b_len		4981971	0		<			
ANR	4982204	Identifier	i		4981971	0					
ANR	4982205	PtrMemberAccess	op -> b_len		4981971	1					
ANR	4982206	Identifier	op		4981971	0					
ANR	4982207	Identifier	b_len		4981971	1					
ANR	4982208	PostIncDecOperationExpression	i ++	159:31:3490:3492	4981971	2	True				
ANR	4982209	Identifier	i		4981971	0					
ANR	4982210	IncDec	++		4981971	1					
ANR	4982211	CompoundStatement		37:36:880:880	4981971	3					
ANR	4982212	ExpressionStatement	"printf ( ""%02x"" , op -> b_buf [ i ] )"	160:5:3502:3531	4981971	0	True				
ANR	4982213	CallExpression	"printf ( ""%02x"" , op -> b_buf [ i ] )"		4981971	0					
ANR	4982214	Callee	printf		4981971	0					
ANR	4982215	Identifier	printf		4981971	0					
ANR	4982216	ArgumentList	"""%02x"""		4981971	1					
ANR	4982217	Argument	"""%02x"""		4981971	0					
ANR	4982218	PrimaryExpression	"""%02x"""		4981971	0					
ANR	4982219	Argument	op -> b_buf [ i ]		4981971	1					
ANR	4982220	ArrayIndexing	op -> b_buf [ i ]		4981971	0					
ANR	4982221	PtrMemberAccess	op -> b_buf		4981971	0					
ANR	4982222	Identifier	op		4981971	0					
ANR	4982223	Identifier	b_buf		4981971	1					
ANR	4982224	Identifier	i		4981971	1					
ANR	4982225	IfStatement	if ( ! quiet )		4981971	13					
ANR	4982226	Condition	! quiet	162:8:3547:3552	4981971	0	True				
ANR	4982227	UnaryOperationExpression	! quiet		4981971	0					
ANR	4982228	UnaryOperator	!		4981971	0					
ANR	4982229	Identifier	quiet		4981971	1					
ANR	4982230	CompoundStatement		41:5:947:993	4981971	1					
ANR	4982231	IdentifierDeclStatement	char * p = r_str_escape ( ( const char * ) op -> b_buf ) ;	163:5:3562:3608	4981971	0	True				
ANR	4982232	IdentifierDecl	* p = r_str_escape ( ( const char * ) op -> b_buf )		4981971	0					
ANR	4982233	IdentifierDeclType	char *		4981971	0					
ANR	4982234	Identifier	p		4981971	1					
ANR	4982235	AssignmentExpression	* p = r_str_escape ( ( const char * ) op -> b_buf )		4981971	2		=			
ANR	4982236	Identifier	p		4981971	0					
ANR	4982237	CallExpression	r_str_escape ( ( const char * ) op -> b_buf )		4981971	1					
ANR	4982238	Callee	r_str_escape		4981971	0					
ANR	4982239	Identifier	r_str_escape		4981971	0					
ANR	4982240	ArgumentList	( const char * ) op -> b_buf		4981971	1					
ANR	4982241	Argument	( const char * ) op -> b_buf		4981971	0					
ANR	4982242	CastExpression	( const char * ) op -> b_buf		4981971	0					
ANR	4982243	CastTarget	const char *		4981971	0					
ANR	4982244	PtrMemberAccess	op -> b_buf		4981971	1					
ANR	4982245	Identifier	op		4981971	0					
ANR	4982246	Identifier	b_buf		4981971	1					
ANR	4982247	ExpressionStatement	"printf ( "" \\""%s\\""\\n"" , p )"	164:5:3615:3638	4981971	1	True				
ANR	4982248	CallExpression	"printf ( "" \\""%s\\""\\n"" , p )"		4981971	0					
ANR	4982249	Callee	printf		4981971	0					
ANR	4982250	Identifier	printf		4981971	0					
ANR	4982251	ArgumentList	""" \\""%s\\""\\n"""		4981971	1					
ANR	4982252	Argument	""" \\""%s\\""\\n"""		4981971	0					
ANR	4982253	PrimaryExpression	""" \\""%s\\""\\n"""		4981971	0					
ANR	4982254	Argument	p		4981971	1					
ANR	4982255	Identifier	p		4981971	0					
ANR	4982256	ExpressionStatement	free ( p )	165:5:3645:3653	4981971	2	True				
ANR	4982257	CallExpression	free ( p )		4981971	0					
ANR	4982258	Callee	free		4981971	0					
ANR	4982259	Identifier	free		4981971	0					
ANR	4982260	ArgumentList	p		4981971	1					
ANR	4982261	Argument	p		4981971	0					
ANR	4982262	Identifier	p		4981971	0					
ANR	4982263	ExpressionStatement	printf ( Color_RESET )	166:5:3660:3680	4981971	3	True				
ANR	4982264	CallExpression	printf ( Color_RESET )		4981971	0					
ANR	4982265	Callee	printf		4981971	0					
ANR	4982266	Identifier	printf		4981971	0					
ANR	4982267	ArgumentList	Color_RESET		4981971	1					
ANR	4982268	Argument	Color_RESET		4981971	0					
ANR	4982269	Identifier	Color_RESET		4981971	0					
ANR	4982270	ElseStatement	else		4981971	0					
ANR	4982271	CompoundStatement		45:11:1078:1078	4981971	0					
ANR	4982272	ExpressionStatement	"printf ( ""\\n"" )"	168:5:3700:3713	4981971	0	True				
ANR	4982273	CallExpression	"printf ( ""\\n"" )"		4981971	0					
ANR	4982274	Callee	printf		4981971	0					
ANR	4982275	Identifier	printf		4981971	0					
ANR	4982276	ArgumentList	"""\\n"""		4981971	1					
ANR	4982277	Argument	"""\\n"""		4981971	0					
ANR	4982278	PrimaryExpression	"""\\n"""		4981971	0					
ANR	4982279	BreakStatement	break ;	172:2:3732:3737	4981971	4	True				
ANR	4982280	Label	case 'r' :	173:1:3740:3748	4981971	5	True				
ANR	4982281	IfStatement	if ( disasm )		4981971	6					
ANR	4982282	Condition	disasm	174:6:3756:3761	4981971	0	True				
ANR	4982283	Identifier	disasm		4981971	0					
ANR	4982284	CompoundStatement		52:14:1149:1149	4981971	1					
ANR	4982285	ExpressionStatement	"eprintf ( ""r2cmds (-r) + disasm (-D) not yet implemented\\n"" )"	175:3:3769:3828	4981971	0	True				
ANR	4982286	CallExpression	"eprintf ( ""r2cmds (-r) + disasm (-D) not yet implemented\\n"" )"		4981971	0					
ANR	4982287	Callee	eprintf		4981971	0					
ANR	4982288	Identifier	eprintf		4981971	0					
ANR	4982289	ArgumentList	"""r2cmds (-r) + disasm (-D) not yet implemented\\n"""		4981971	1					
ANR	4982290	Argument	"""r2cmds (-r) + disasm (-D) not yet implemented\\n"""		4981971	0					
ANR	4982291	PrimaryExpression	"""r2cmds (-r) + disasm (-D) not yet implemented\\n"""		4981971	0					
ANR	4982292	IfStatement	if ( op -> a_len == op -> b_len )		4981971	7					
ANR	4982293	Condition	op -> a_len == op -> b_len	177:6:3840:3861	4981971	0	True				
ANR	4982294	EqualityExpression	op -> a_len == op -> b_len		4981971	0		==			
ANR	4982295	PtrMemberAccess	op -> a_len		4981971	0					
ANR	4982296	Identifier	op		4981971	0					
ANR	4982297	Identifier	a_len		4981971	1					
ANR	4982298	PtrMemberAccess	op -> b_len		4981971	1					
ANR	4982299	Identifier	op		4981971	0					
ANR	4982300	Identifier	b_len		4981971	1					
ANR	4982301	CompoundStatement		55:30:1249:1249	4981971	1					
ANR	4982302	ExpressionStatement	"printf ( ""wx "" )"	178:3:3869:3883	4981971	0	True				
ANR	4982303	CallExpression	"printf ( ""wx "" )"		4981971	0					
ANR	4982304	Callee	printf		4981971	0					
ANR	4982305	Identifier	printf		4981971	0					
ANR	4982306	ArgumentList	"""wx """		4981971	1					
ANR	4982307	Argument	"""wx """		4981971	0					
ANR	4982308	PrimaryExpression	"""wx """		4981971	0					
ANR	4982309	ForStatement	for ( i = 0 ; i < op -> b_len ; i ++ )		4981971	1					
ANR	4982310	ForInit	i = 0 ;	179:8:3893:3898	4981971	0	True				
ANR	4982311	AssignmentExpression	i = 0		4981971	0		=			
ANR	4982312	Identifier	i		4981971	0					
ANR	4982313	PrimaryExpression	0		4981971	1					
ANR	4982314	Condition	i < op -> b_len	179:15:3900:3912	4981971	1	True				
ANR	4982315	RelationalExpression	i < op -> b_len		4981971	0		<			
ANR	4982316	Identifier	i		4981971	0					
ANR	4982317	PtrMemberAccess	op -> b_len		4981971	1					
ANR	4982318	Identifier	op		4981971	0					
ANR	4982319	Identifier	b_len		4981971	1					
ANR	4982320	PostIncDecOperationExpression	i ++	179:30:3915:3917	4981971	2	True				
ANR	4982321	Identifier	i		4981971	0					
ANR	4982322	IncDec	++		4981971	1					
ANR	4982323	CompoundStatement		57:35:1305:1305	4981971	3					
ANR	4982324	ExpressionStatement	"printf ( ""%02x"" , op -> b_buf [ i ] )"	180:4:3926:3955	4981971	0	True				
ANR	4982325	CallExpression	"printf ( ""%02x"" , op -> b_buf [ i ] )"		4981971	0					
ANR	4982326	Callee	printf		4981971	0					
ANR	4982327	Identifier	printf		4981971	0					
ANR	4982328	ArgumentList	"""%02x"""		4981971	1					
ANR	4982329	Argument	"""%02x"""		4981971	0					
ANR	4982330	PrimaryExpression	"""%02x"""		4981971	0					
ANR	4982331	Argument	op -> b_buf [ i ]		4981971	1					
ANR	4982332	ArrayIndexing	op -> b_buf [ i ]		4981971	0					
ANR	4982333	PtrMemberAccess	op -> b_buf		4981971	0					
ANR	4982334	Identifier	op		4981971	0					
ANR	4982335	Identifier	b_buf		4981971	1					
ANR	4982336	Identifier	i		4981971	1					
ANR	4982337	Statement	printf	182:3:3965:3970	4981971	2	True				
ANR	4982338	Statement	(	182:10:3972:3972	4981971	3	True				
ANR	4982339	Statement	""" @ 0x%08"""	182:11:3973:3982	4981971	4	True				
ANR	4982340	Statement	PFMT64x	182:21:3983:3989	4981971	5	True				
ANR	4982341	Statement	"""\\n"""	182:29:3991:3994	4981971	6	True				
ANR	4982342	Statement	","	182:33:3995:3995	4981971	7	True				
ANR	4982343	Statement	op	182:35:3997:3998	4981971	8	True				
ANR	4982344	Statement	->	182:37:3999:4000	4981971	9	True				
ANR	4982345	Statement	b_off	182:39:4001:4005	4981971	10	True				
ANR	4982346	Statement	)	182:44:4006:4006	4981971	11	True				
ANR	4982347	ExpressionStatement		182:45:4007:4007	4981971	12	True				
ANR	4982348	ElseStatement	else		4981971	0					
ANR	4982349	CompoundStatement		61:9:1403:1403	4981971	0					
ANR	4982350	IfStatement	if ( op -> a_len > 0 )		4981971	0					
ANR	4982351	Condition	op -> a_len > 0	184:7:4027:4039	4981971	0	True				
ANR	4982352	RelationalExpression	op -> a_len > 0		4981971	0		>			
ANR	4982353	PtrMemberAccess	op -> a_len		4981971	0					
ANR	4982354	Identifier	op		4981971	0					
ANR	4982355	Identifier	a_len		4981971	1					
ANR	4982356	PrimaryExpression	0		4981971	1					
ANR	4982357	CompoundStatement		62:22:1427:1427	4981971	1					
ANR	4982358	Statement	printf	185:4:4048:4053	4981971	0	True				
ANR	4982359	Statement	(	185:11:4055:4055	4981971	1	True				
ANR	4982360	Statement	"""r-%d @ 0x%08"""	185:12:4056:4069	4981971	2	True				
ANR	4982361	Statement	PFMT64x	185:26:4070:4076	4981971	3	True				
ANR	4982362	Statement	"""\\n"""	185:34:4078:4081	4981971	4	True				
ANR	4982363	Statement	","	185:38:4082:4082	4981971	5	True				
ANR	4982364	Statement	op	186:5:4089:4090	4981971	6	True				
ANR	4982365	Statement	->	186:7:4091:4092	4981971	7	True				
ANR	4982366	Statement	a_len	186:9:4093:4097	4981971	8	True				
ANR	4982367	Statement	","	186:14:4098:4098	4981971	9	True				
ANR	4982368	Statement	op	186:16:4100:4101	4981971	10	True				
ANR	4982369	Statement	->	186:18:4102:4103	4981971	11	True				
ANR	4982370	Statement	a_off	186:20:4104:4108	4981971	12	True				
ANR	4982371	Statement	+	186:26:4110:4110	4981971	13	True				
ANR	4982372	Statement	delta	186:28:4112:4116	4981971	14	True				
ANR	4982373	Statement	)	186:33:4117:4117	4981971	15	True				
ANR	4982374	ExpressionStatement		186:34:4118:4118	4981971	16	True				
ANR	4982375	IfStatement	if ( op -> b_len > 0 )		4981971	1					
ANR	4982376	Condition	op -> b_len > 0	188:7:4132:4144	4981971	0	True				
ANR	4982377	RelationalExpression	op -> b_len > 0		4981971	0		>			
ANR	4982378	PtrMemberAccess	op -> b_len		4981971	0					
ANR	4982379	Identifier	op		4981971	0					
ANR	4982380	Identifier	b_len		4981971	1					
ANR	4982381	PrimaryExpression	0		4981971	1					
ANR	4982382	CompoundStatement		66:22:1532:1532	4981971	1					
ANR	4982383	Statement	printf	189:4:4153:4158	4981971	0	True				
ANR	4982384	Statement	(	189:11:4160:4160	4981971	1	True				
ANR	4982385	Statement	"""r+%d @ 0x%08"""	189:12:4161:4174	4981971	2	True				
ANR	4982386	Statement	PFMT64x	189:26:4175:4181	4981971	3	True				
ANR	4982387	Statement	"""\\n"""	189:34:4183:4186	4981971	4	True				
ANR	4982388	Statement	","	189:38:4187:4187	4981971	5	True				
ANR	4982389	Statement	op	190:5:4194:4195	4981971	6	True				
ANR	4982390	Statement	->	190:7:4196:4197	4981971	7	True				
ANR	4982391	Statement	b_len	190:9:4198:4202	4981971	8	True				
ANR	4982392	Statement	","	190:14:4203:4203	4981971	9	True				
ANR	4982393	Statement	op	190:16:4205:4206	4981971	10	True				
ANR	4982394	Statement	->	190:18:4207:4208	4981971	11	True				
ANR	4982395	Statement	b_off	190:20:4209:4213	4981971	12	True				
ANR	4982396	Statement	+	190:26:4215:4215	4981971	13	True				
ANR	4982397	Statement	delta	190:28:4217:4221	4981971	14	True				
ANR	4982398	Statement	)	190:33:4222:4222	4981971	15	True				
ANR	4982399	ExpressionStatement		190:34:4223:4223	4981971	16	True				
ANR	4982400	ExpressionStatement	"printf ( ""wx "" )"	191:4:4229:4243	4981971	17	True				
ANR	4982401	CallExpression	"printf ( ""wx "" )"		4981971	0					
ANR	4982402	Callee	printf		4981971	0					
ANR	4982403	Identifier	printf		4981971	0					
ANR	4982404	ArgumentList	"""wx """		4981971	1					
ANR	4982405	Argument	"""wx """		4981971	0					
ANR	4982406	PrimaryExpression	"""wx """		4981971	0					
ANR	4982407	ForStatement	for ( i = 0 ; i < op -> b_len ; i ++ )		4981971	18					
ANR	4982408	ForInit	i = 0 ;	192:9:4254:4259	4981971	0	True				
ANR	4982409	AssignmentExpression	i = 0		4981971	0		=			
ANR	4982410	Identifier	i		4981971	0					
ANR	4982411	PrimaryExpression	0		4981971	1					
ANR	4982412	Condition	i < op -> b_len	192:16:4261:4273	4981971	1	True				
ANR	4982413	RelationalExpression	i < op -> b_len		4981971	0		<			
ANR	4982414	Identifier	i		4981971	0					
ANR	4982415	PtrMemberAccess	op -> b_len		4981971	1					
ANR	4982416	Identifier	op		4981971	0					
ANR	4982417	Identifier	b_len		4981971	1					
ANR	4982418	PostIncDecOperationExpression	i ++	192:31:4276:4278	4981971	2	True				
ANR	4982419	Identifier	i		4981971	0					
ANR	4982420	IncDec	++		4981971	1					
ANR	4982421	CompoundStatement		70:36:1666:1666	4981971	3					
ANR	4982422	ExpressionStatement	"printf ( ""%02x"" , op -> b_buf [ i ] )"	193:5:4288:4317	4981971	0	True				
ANR	4982423	CallExpression	"printf ( ""%02x"" , op -> b_buf [ i ] )"		4981971	0					
ANR	4982424	Callee	printf		4981971	0					
ANR	4982425	Identifier	printf		4981971	0					
ANR	4982426	ArgumentList	"""%02x"""		4981971	1					
ANR	4982427	Argument	"""%02x"""		4981971	0					
ANR	4982428	PrimaryExpression	"""%02x"""		4981971	0					
ANR	4982429	Argument	op -> b_buf [ i ]		4981971	1					
ANR	4982430	ArrayIndexing	op -> b_buf [ i ]		4981971	0					
ANR	4982431	PtrMemberAccess	op -> b_buf		4981971	0					
ANR	4982432	Identifier	op		4981971	0					
ANR	4982433	Identifier	b_buf		4981971	1					
ANR	4982434	Identifier	i		4981971	1					
ANR	4982435	Statement	printf	195:4:4329:4334	4981971	19	True				
ANR	4982436	Statement	(	195:11:4336:4336	4981971	20	True				
ANR	4982437	Statement	""" @ 0x%08"""	195:12:4337:4346	4981971	21	True				
ANR	4982438	Statement	PFMT64x	195:22:4347:4353	4981971	22	True				
ANR	4982439	Statement	"""\\n"""	195:30:4355:4358	4981971	23	True				
ANR	4982440	Statement	","	195:34:4359:4359	4981971	24	True				
ANR	4982441	Statement	op	195:36:4361:4362	4981971	25	True				
ANR	4982442	Statement	->	195:38:4363:4364	4981971	26	True				
ANR	4982443	Statement	b_off	195:40:4365:4369	4981971	27	True				
ANR	4982444	Statement	+	195:46:4371:4371	4981971	28	True				
ANR	4982445	Statement	delta	195:48:4373:4377	4981971	29	True				
ANR	4982446	Statement	)	195:53:4378:4378	4981971	30	True				
ANR	4982447	ExpressionStatement		195:54:4379:4379	4981971	31	True				
ANR	4982448	ExpressionStatement	delta += ( op -> b_off - op -> a_off )	197:3:4389:4421	4981971	2	True				
ANR	4982449	AssignmentExpression	delta += ( op -> b_off - op -> a_off )		4981971	0		+=			
ANR	4982450	Identifier	delta		4981971	0					
ANR	4982451	AdditiveExpression	op -> b_off - op -> a_off		4981971	1		-			
ANR	4982452	PtrMemberAccess	op -> b_off		4981971	0					
ANR	4982453	Identifier	op		4981971	0					
ANR	4982454	Identifier	b_off		4981971	1					
ANR	4982455	PtrMemberAccess	op -> a_off		4981971	1					
ANR	4982456	Identifier	op		4981971	0					
ANR	4982457	Identifier	a_off		4981971	1					
ANR	4982458	ReturnStatement	return 1 ;	199:2:4429:4437	4981971	8	True				
ANR	4982459	PrimaryExpression	1		4981971	0					
ANR	4982460	Label	case 'j' :	200:1:4440:4448	4981971	9	True				
ANR	4982461	IfStatement	if ( disasm )		4981971	10					
ANR	4982462	Condition	disasm	201:6:4456:4461	4981971	0	True				
ANR	4982463	Identifier	disasm		4981971	0					
ANR	4982464	CompoundStatement		79:14:1849:1849	4981971	1					
ANR	4982465	ExpressionStatement	"eprintf ( ""JSON (-j) + disasm (-D) not yet implemented\\n"" )"	202:3:4469:4526	4981971	0	True				
ANR	4982466	CallExpression	"eprintf ( ""JSON (-j) + disasm (-D) not yet implemented\\n"" )"		4981971	0					
ANR	4982467	Callee	eprintf		4981971	0					
ANR	4982468	Identifier	eprintf		4981971	0					
ANR	4982469	ArgumentList	"""JSON (-j) + disasm (-D) not yet implemented\\n"""		4981971	1					
ANR	4982470	Argument	"""JSON (-j) + disasm (-D) not yet implemented\\n"""		4981971	0					
ANR	4982471	PrimaryExpression	"""JSON (-j) + disasm (-D) not yet implemented\\n"""		4981971	0					
ANR	4982472	IfStatement	if ( json_started )		4981971	11					
ANR	4982473	Condition	json_started	204:6:4538:4549	4981971	0	True				
ANR	4982474	Identifier	json_started		4981971	0					
ANR	4982475	CompoundStatement		82:20:1937:1937	4981971	1					
ANR	4982476	ExpressionStatement	"printf ( "",\\n"" )"	205:3:4557:4571	4981971	0	True				
ANR	4982477	CallExpression	"printf ( "",\\n"" )"		4981971	0					
ANR	4982478	Callee	printf		4981971	0					
ANR	4982479	Identifier	printf		4981971	0					
ANR	4982480	ArgumentList	""",\\n"""		4981971	1					
ANR	4982481	Argument	""",\\n"""		4981971	0					
ANR	4982482	PrimaryExpression	""",\\n"""		4981971	0					
ANR	4982483	ExpressionStatement	json_started = 1	207:2:4579:4595	4981971	12	True				
ANR	4982484	AssignmentExpression	json_started = 1		4981971	0		=			
ANR	4982485	Identifier	json_started		4981971	0					
ANR	4982486	PrimaryExpression	1		4981971	1					
ANR	4982487	Statement	printf	208:2:4599:4604	4981971	13	True				
ANR	4982488	Statement	(	208:9:4606:4606	4981971	14	True				
ANR	4982489	Statement	"""{\\""offset\\"":%"""	208:10:4607:4621	4981971	15	True				
ANR	4982490	Statement	PFMT64d	208:25:4622:4628	4981971	16	True				
ANR	4982491	Statement	""","""	208:33:4630:4632	4981971	17	True				
ANR	4982492	Statement	","	208:36:4633:4633	4981971	18	True				
ANR	4982493	Statement	op	208:38:4635:4636	4981971	19	True				
ANR	4982494	Statement	->	208:40:4637:4638	4981971	20	True				
ANR	4982495	Statement	a_off	208:42:4639:4643	4981971	21	True				
ANR	4982496	Statement	)	208:47:4644:4644	4981971	22	True				
ANR	4982497	ExpressionStatement		208:48:4645:4645	4981971	23	True				
ANR	4982498	ExpressionStatement	"printf ( ""\\""from\\"":\\"""" )"	209:2:4649:4671	4981971	24	True				
ANR	4982499	CallExpression	"printf ( ""\\""from\\"":\\"""" )"		4981971	0					
ANR	4982500	Callee	printf		4981971	0					
ANR	4982501	Identifier	printf		4981971	0					
ANR	4982502	ArgumentList	"""\\""from\\"":\\"""""		4981971	1					
ANR	4982503	Argument	"""\\""from\\"":\\"""""		4981971	0					
ANR	4982504	PrimaryExpression	"""\\""from\\"":\\"""""		4981971	0					
ANR	4982505	ForStatement	for ( i = 0 ; i < op -> a_len ; i ++ )		4981971	25					
ANR	4982506	ForInit	i = 0 ;	210:7:4680:4685	4981971	0	True				
ANR	4982507	AssignmentExpression	i = 0		4981971	0		=			
ANR	4982508	Identifier	i		4981971	0					
ANR	4982509	PrimaryExpression	0		4981971	1					
ANR	4982510	Condition	i < op -> a_len	210:14:4687:4699	4981971	1	True				
ANR	4982511	RelationalExpression	i < op -> a_len		4981971	0		<			
ANR	4982512	Identifier	i		4981971	0					
ANR	4982513	PtrMemberAccess	op -> a_len		4981971	1					
ANR	4982514	Identifier	op		4981971	0					
ANR	4982515	Identifier	a_len		4981971	1					
ANR	4982516	PostIncDecOperationExpression	i ++	210:29:4702:4704	4981971	2	True				
ANR	4982517	Identifier	i		4981971	0					
ANR	4982518	IncDec	++		4981971	1					
ANR	4982519	CompoundStatement		88:34:2092:2092	4981971	3					
ANR	4982520	ExpressionStatement	"printf ( ""%02x"" , op -> a_buf [ i ] )"	211:3:4712:4741	4981971	0	True				
ANR	4982521	CallExpression	"printf ( ""%02x"" , op -> a_buf [ i ] )"		4981971	0					
ANR	4982522	Callee	printf		4981971	0					
ANR	4982523	Identifier	printf		4981971	0					
ANR	4982524	ArgumentList	"""%02x"""		4981971	1					
ANR	4982525	Argument	"""%02x"""		4981971	0					
ANR	4982526	PrimaryExpression	"""%02x"""		4981971	0					
ANR	4982527	Argument	op -> a_buf [ i ]		4981971	1					
ANR	4982528	ArrayIndexing	op -> a_buf [ i ]		4981971	0					
ANR	4982529	PtrMemberAccess	op -> a_buf		4981971	0					
ANR	4982530	Identifier	op		4981971	0					
ANR	4982531	Identifier	a_buf		4981971	1					
ANR	4982532	Identifier	i		4981971	1					
ANR	4982533	ExpressionStatement	"printf ( ""\\"", \\""to\\"":\\"""" )"	213:2:4749:4773	4981971	26	True				
ANR	4982534	CallExpression	"printf ( ""\\"", \\""to\\"":\\"""" )"		4981971	0					
ANR	4982535	Callee	printf		4981971	0					
ANR	4982536	Identifier	printf		4981971	0					
ANR	4982537	ArgumentList	"""\\"", \\""to\\"":\\"""""		4981971	1					
ANR	4982538	Argument	"""\\"", \\""to\\"":\\"""""		4981971	0					
ANR	4982539	PrimaryExpression	"""\\"", \\""to\\"":\\"""""		4981971	0					
ANR	4982540	ForStatement	for ( i = 0 ; i < op -> b_len ; i ++ )		4981971	27					
ANR	4982541	ForInit	i = 0 ;	214:7:4782:4787	4981971	0	True				
ANR	4982542	AssignmentExpression	i = 0		4981971	0		=			
ANR	4982543	Identifier	i		4981971	0					
ANR	4982544	PrimaryExpression	0		4981971	1					
ANR	4982545	Condition	i < op -> b_len	214:14:4789:4801	4981971	1	True				
ANR	4982546	RelationalExpression	i < op -> b_len		4981971	0		<			
ANR	4982547	Identifier	i		4981971	0					
ANR	4982548	PtrMemberAccess	op -> b_len		4981971	1					
ANR	4982549	Identifier	op		4981971	0					
ANR	4982550	Identifier	b_len		4981971	1					
ANR	4982551	PostIncDecOperationExpression	i ++	214:29:4804:4806	4981971	2	True				
ANR	4982552	Identifier	i		4981971	0					
ANR	4982553	IncDec	++		4981971	1					
ANR	4982554	CompoundStatement		92:34:2194:2194	4981971	3					
ANR	4982555	ExpressionStatement	"printf ( ""%02x"" , op -> b_buf [ i ] )"	215:3:4814:4843	4981971	0	True				
ANR	4982556	CallExpression	"printf ( ""%02x"" , op -> b_buf [ i ] )"		4981971	0					
ANR	4982557	Callee	printf		4981971	0					
ANR	4982558	Identifier	printf		4981971	0					
ANR	4982559	ArgumentList	"""%02x"""		4981971	1					
ANR	4982560	Argument	"""%02x"""		4981971	0					
ANR	4982561	PrimaryExpression	"""%02x"""		4981971	0					
ANR	4982562	Argument	op -> b_buf [ i ]		4981971	1					
ANR	4982563	ArrayIndexing	op -> b_buf [ i ]		4981971	0					
ANR	4982564	PtrMemberAccess	op -> b_buf		4981971	0					
ANR	4982565	Identifier	op		4981971	0					
ANR	4982566	Identifier	b_buf		4981971	1					
ANR	4982567	Identifier	i		4981971	1					
ANR	4982568	ExpressionStatement	"printf ( ""\\""}"" )"	217:2:4851:4865	4981971	28	True				
ANR	4982569	CallExpression	"printf ( ""\\""}"" )"		4981971	0					
ANR	4982570	Callee	printf		4981971	0					
ANR	4982571	Identifier	printf		4981971	0					
ANR	4982572	ArgumentList	"""\\""}"""		4981971	1					
ANR	4982573	Argument	"""\\""}"""		4981971	0					
ANR	4982574	PrimaryExpression	"""\\""}"""		4981971	0					
ANR	4982575	ReturnStatement	return 1 ;	218:2:4879:4887	4981971	29	True				
ANR	4982576	PrimaryExpression	1		4981971	0					
ANR	4982577	Label	case 0 :	219:1:4890:4896	4981971	30	True				
ANR	4982578	Label	default :	220:1:4899:4906	4981971	31	True				
ANR	4982579	Identifier	default		4981971	0					
ANR	4982580	IfStatement	if ( disasm )		4981971	32					
ANR	4982581	Condition	disasm	221:6:4914:4919	4981971	0	True				
ANR	4982582	Identifier	disasm		4981971	0					
ANR	4982583	CompoundStatement		100:3:2312:2317	4981971	1					
ANR	4982584	IdentifierDeclStatement	int i ;	222:3:4927:4932	4981971	0	True				
ANR	4982585	IdentifierDecl	i		4981971	0					
ANR	4982586	IdentifierDeclType	int		4981971	0					
ANR	4982587	Identifier	i		4981971	1					
ANR	4982588	Statement	printf	223:3:4937:4942	4981971	1	True				
ANR	4982589	Statement	(	223:10:4944:4944	4981971	2	True				
ANR	4982590	Statement	"""--- 0x%08"""	223:11:4945:4955	4981971	3	True				
ANR	4982591	Statement	PFMT64x	223:22:4956:4962	4981971	4	True				
ANR	4982592	Statement	"""  """	223:30:4964:4967	4981971	5	True				
ANR	4982593	Statement	","	223:34:4968:4968	4981971	6	True				
ANR	4982594	Statement	op	223:36:4970:4971	4981971	7	True				
ANR	4982595	Statement	->	223:38:4972:4973	4981971	8	True				
ANR	4982596	Statement	a_off	223:40:4974:4978	4981971	9	True				
ANR	4982597	Statement	)	223:45:4979:4979	4981971	10	True				
ANR	4982598	ExpressionStatement		223:46:4980:4980	4981971	11	True				
ANR	4982599	IfStatement	if ( ! core )		4981971	12					
ANR	4982600	Condition	! core	224:7:4989:4993	4981971	0	True				
ANR	4982601	UnaryOperationExpression	! core		4981971	0					
ANR	4982602	UnaryOperator	!		4981971	0					
ANR	4982603	Identifier	core		4981971	1					
ANR	4982604	CompoundStatement		102:14:2381:2381	4981971	1					
ANR	4982605	ExpressionStatement	core = opencore ( file )	225:4:5002:5024	4981971	0	True				
ANR	4982606	AssignmentExpression	core = opencore ( file )		4981971	0		=			
ANR	4982607	Identifier	core		4981971	0					
ANR	4982608	CallExpression	opencore ( file )		4981971	1					
ANR	4982609	Callee	opencore		4981971	0					
ANR	4982610	Identifier	opencore		4981971	0					
ANR	4982611	ArgumentList	file		4981971	1					
ANR	4982612	Argument	file		4981971	0					
ANR	4982613	Identifier	file		4981971	0					
ANR	4982614	IfStatement	if ( arch )		4981971	1					
ANR	4982615	Condition	arch	226:8:5034:5037	4981971	0	True				
ANR	4982616	Identifier	arch		4981971	0					
ANR	4982617	CompoundStatement		104:14:2425:2425	4981971	1					
ANR	4982618	ExpressionStatement	"r_config_set ( core -> config , ""asm.arch"" , arch )"	227:5:5047:5092	4981971	0	True				
ANR	4982619	CallExpression	"r_config_set ( core -> config , ""asm.arch"" , arch )"		4981971	0					
ANR	4982620	Callee	r_config_set		4981971	0					
ANR	4982621	Identifier	r_config_set		4981971	0					
ANR	4982622	ArgumentList	core -> config		4981971	1					
ANR	4982623	Argument	core -> config		4981971	0					
ANR	4982624	PtrMemberAccess	core -> config		4981971	0					
ANR	4982625	Identifier	core		4981971	0					
ANR	4982626	Identifier	config		4981971	1					
ANR	4982627	Argument	"""asm.arch"""		4981971	1					
ANR	4982628	PrimaryExpression	"""asm.arch"""		4981971	0					
ANR	4982629	Argument	arch		4981971	2					
ANR	4982630	Identifier	arch		4981971	0					
ANR	4982631	IfStatement	if ( bits )		4981971	2					
ANR	4982632	Condition	bits	229:8:5108:5111	4981971	0	True				
ANR	4982633	Identifier	bits		4981971	0					
ANR	4982634	CompoundStatement		107:14:2499:2499	4981971	1					
ANR	4982635	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.bits"" , bits )"	230:5:5121:5168	4981971	0	True				
ANR	4982636	CallExpression	"r_config_set_i ( core -> config , ""asm.bits"" , bits )"		4981971	0					
ANR	4982637	Callee	r_config_set_i		4981971	0					
ANR	4982638	Identifier	r_config_set_i		4981971	0					
ANR	4982639	ArgumentList	core -> config		4981971	1					
ANR	4982640	Argument	core -> config		4981971	0					
ANR	4982641	PtrMemberAccess	core -> config		4981971	0					
ANR	4982642	Identifier	core		4981971	0					
ANR	4982643	Identifier	config		4981971	1					
ANR	4982644	Argument	"""asm.bits"""		4981971	1					
ANR	4982645	PrimaryExpression	"""asm.bits"""		4981971	0					
ANR	4982646	Argument	bits		4981971	2					
ANR	4982647	Identifier	bits		4981971	0					
ANR	4982648	ForStatement	for ( i = 0 ; i < op -> a_len ; i ++ )		4981971	13					
ANR	4982649	ForInit	i = 0 ;	233:8:5189:5194	4981971	0	True				
ANR	4982650	AssignmentExpression	i = 0		4981971	0		=			
ANR	4982651	Identifier	i		4981971	0					
ANR	4982652	PrimaryExpression	0		4981971	1					
ANR	4982653	Condition	i < op -> a_len	233:15:5196:5208	4981971	1	True				
ANR	4982654	RelationalExpression	i < op -> a_len		4981971	0		<			
ANR	4982655	Identifier	i		4981971	0					
ANR	4982656	PtrMemberAccess	op -> a_len		4981971	1					
ANR	4982657	Identifier	op		4981971	0					
ANR	4982658	Identifier	a_len		4981971	1					
ANR	4982659	PostIncDecOperationExpression	i ++	233:30:5211:5213	4981971	2	True				
ANR	4982660	Identifier	i		4981971	0					
ANR	4982661	IncDec	++		4981971	1					
ANR	4982662	CompoundStatement		111:35:2601:2601	4981971	3					
ANR	4982663	ExpressionStatement	"printf ( ""%02x"" , op -> a_buf [ i ] )"	234:4:5222:5251	4981971	0	True				
ANR	4982664	CallExpression	"printf ( ""%02x"" , op -> a_buf [ i ] )"		4981971	0					
ANR	4982665	Callee	printf		4981971	0					
ANR	4982666	Identifier	printf		4981971	0					
ANR	4982667	ArgumentList	"""%02x"""		4981971	1					
ANR	4982668	Argument	"""%02x"""		4981971	0					
ANR	4982669	PrimaryExpression	"""%02x"""		4981971	0					
ANR	4982670	Argument	op -> a_buf [ i ]		4981971	1					
ANR	4982671	ArrayIndexing	op -> a_buf [ i ]		4981971	0					
ANR	4982672	PtrMemberAccess	op -> a_buf		4981971	0					
ANR	4982673	Identifier	op		4981971	0					
ANR	4982674	Identifier	a_buf		4981971	1					
ANR	4982675	Identifier	i		4981971	1					
ANR	4982676	ExpressionStatement	"printf ( ""\\n"" )"	236:3:5261:5274	4981971	14	True				
ANR	4982677	CallExpression	"printf ( ""\\n"" )"		4981971	0					
ANR	4982678	Callee	printf		4981971	0					
ANR	4982679	Identifier	printf		4981971	0					
ANR	4982680	ArgumentList	"""\\n"""		4981971	1					
ANR	4982681	Argument	"""\\n"""		4981971	0					
ANR	4982682	PrimaryExpression	"""\\n"""		4981971	0					
ANR	4982683	IfStatement	if ( core )		4981971	15					
ANR	4982684	Condition	core	237:7:5283:5286	4981971	0	True				
ANR	4982685	Identifier	core		4981971	0					
ANR	4982686	CompoundStatement		118:4:2789:2827	4981971	1					
ANR	4982687	IdentifierDeclStatement	"int len = R_MAX ( 4 , op -> a_len ) ;"	238:4:5295:5325	4981971	0	True				
ANR	4982688	IdentifierDecl	"len = R_MAX ( 4 , op -> a_len )"		4981971	0					
ANR	4982689	IdentifierDeclType	int		4981971	0					
ANR	4982690	Identifier	len		4981971	1					
ANR	4982691	AssignmentExpression	"len = R_MAX ( 4 , op -> a_len )"		4981971	2		=			
ANR	4982692	Identifier	len		4981971	0					
ANR	4982693	CallExpression	"R_MAX ( 4 , op -> a_len )"		4981971	1					
ANR	4982694	Callee	R_MAX		4981971	0					
ANR	4982695	Identifier	R_MAX		4981971	0					
ANR	4982696	ArgumentList	4		4981971	1					
ANR	4982697	Argument	4		4981971	0					
ANR	4982698	PrimaryExpression	4		4981971	0					
ANR	4982699	Argument	op -> a_len		4981971	1					
ANR	4982700	PtrMemberAccess	op -> a_len		4981971	0					
ANR	4982701	Identifier	op		4981971	0					
ANR	4982702	Identifier	a_len		4981971	1					
ANR	4982703	IdentifierDeclStatement	"RAsmCode * ac = r_asm_mdisassemble ( core -> assembler , op -> a_buf , len ) ;"	239:4:5331:5398	4981971	1	True				
ANR	4982704	IdentifierDecl	"* ac = r_asm_mdisassemble ( core -> assembler , op -> a_buf , len )"		4981971	0					
ANR	4982705	IdentifierDeclType	RAsmCode *		4981971	0					
ANR	4982706	Identifier	ac		4981971	1					
ANR	4982707	AssignmentExpression	"* ac = r_asm_mdisassemble ( core -> assembler , op -> a_buf , len )"		4981971	2		=			
ANR	4982708	Identifier	ac		4981971	0					
ANR	4982709	CallExpression	"r_asm_mdisassemble ( core -> assembler , op -> a_buf , len )"		4981971	1					
ANR	4982710	Callee	r_asm_mdisassemble		4981971	0					
ANR	4982711	Identifier	r_asm_mdisassemble		4981971	0					
ANR	4982712	ArgumentList	core -> assembler		4981971	1					
ANR	4982713	Argument	core -> assembler		4981971	0					
ANR	4982714	PtrMemberAccess	core -> assembler		4981971	0					
ANR	4982715	Identifier	core		4981971	0					
ANR	4982716	Identifier	assembler		4981971	1					
ANR	4982717	Argument	op -> a_buf		4981971	1					
ANR	4982718	PtrMemberAccess	op -> a_buf		4981971	0					
ANR	4982719	Identifier	op		4981971	0					
ANR	4982720	Identifier	a_buf		4981971	1					
ANR	4982721	Argument	len		4981971	2					
ANR	4982722	Identifier	len		4981971	0					
ANR	4982723	IdentifierDeclStatement	char * acbufasm = strdup ( ac -> assembly ) ;	240:4:5404:5442	4981971	2	True				
ANR	4982724	IdentifierDecl	* acbufasm = strdup ( ac -> assembly )		4981971	0					
ANR	4982725	IdentifierDeclType	char *		4981971	0					
ANR	4982726	Identifier	acbufasm		4981971	1					
ANR	4982727	AssignmentExpression	* acbufasm = strdup ( ac -> assembly )		4981971	2		=			
ANR	4982728	Identifier	acbufasm		4981971	0					
ANR	4982729	CallExpression	strdup ( ac -> assembly )		4981971	1					
ANR	4982730	Callee	strdup		4981971	0					
ANR	4982731	Identifier	strdup		4981971	0					
ANR	4982732	ArgumentList	ac -> assembly		4981971	1					
ANR	4982733	Argument	ac -> assembly		4981971	0					
ANR	4982734	PtrMemberAccess	ac -> assembly		4981971	0					
ANR	4982735	Identifier	ac		4981971	0					
ANR	4982736	Identifier	assembly		4981971	1					
ANR	4982737	IfStatement	if ( quiet )		4981971	3					
ANR	4982738	Condition	quiet	241:8:5452:5456	4981971	0	True				
ANR	4982739	Identifier	quiet		4981971	0					
ANR	4982740	CompoundStatement		120:5:2851:2899	4981971	1					
ANR	4982741	IdentifierDeclStatement	"char * bufasm = r_str_prefix_all ( acbufasm , ""- "" ) ;"	242:5:5466:5514	4981971	0	True				
ANR	4982742	IdentifierDecl	"* bufasm = r_str_prefix_all ( acbufasm , ""- "" )"		4981971	0					
ANR	4982743	IdentifierDeclType	char *		4981971	0					
ANR	4982744	Identifier	bufasm		4981971	1					
ANR	4982745	AssignmentExpression	"* bufasm = r_str_prefix_all ( acbufasm , ""- "" )"		4981971	2		=			
ANR	4982746	Identifier	bufasm		4981971	0					
ANR	4982747	CallExpression	"r_str_prefix_all ( acbufasm , ""- "" )"		4981971	1					
ANR	4982748	Callee	r_str_prefix_all		4981971	0					
ANR	4982749	Identifier	r_str_prefix_all		4981971	0					
ANR	4982750	ArgumentList	acbufasm		4981971	1					
ANR	4982751	Argument	acbufasm		4981971	0					
ANR	4982752	Identifier	acbufasm		4981971	0					
ANR	4982753	Argument	"""- """		4981971	1					
ANR	4982754	PrimaryExpression	"""- """		4981971	0					
ANR	4982755	ExpressionStatement	"printf ( ""%s\\n"" , bufasm )"	243:5:5521:5544	4981971	1	True				
ANR	4982756	CallExpression	"printf ( ""%s\\n"" , bufasm )"		4981971	0					
ANR	4982757	Callee	printf		4981971	0					
ANR	4982758	Identifier	printf		4981971	0					
ANR	4982759	ArgumentList	"""%s\\n"""		4981971	1					
ANR	4982760	Argument	"""%s\\n"""		4981971	0					
ANR	4982761	PrimaryExpression	"""%s\\n"""		4981971	0					
ANR	4982762	Argument	bufasm		4981971	1					
ANR	4982763	Identifier	bufasm		4981971	0					
ANR	4982764	ExpressionStatement	free ( bufasm )	244:5:5551:5564	4981971	2	True				
ANR	4982765	CallExpression	free ( bufasm )		4981971	0					
ANR	4982766	Callee	free		4981971	0					
ANR	4982767	Identifier	free		4981971	0					
ANR	4982768	ArgumentList	bufasm		4981971	1					
ANR	4982769	Argument	bufasm		4981971	0					
ANR	4982770	Identifier	bufasm		4981971	0					
ANR	4982771	ExpressionStatement	free ( acbufasm )	245:5:5571:5586	4981971	3	True				
ANR	4982772	CallExpression	free ( acbufasm )		4981971	0					
ANR	4982773	Callee	free		4981971	0					
ANR	4982774	Identifier	free		4981971	0					
ANR	4982775	ArgumentList	acbufasm		4981971	1					
ANR	4982776	Argument	acbufasm		4981971	0					
ANR	4982777	Identifier	acbufasm		4981971	0					
ANR	4982778	ElseStatement	else		4981971	0					
ANR	4982779	CompoundStatement		124:11:2984:2984	4981971	0					
ANR	4982780	Statement	char	247:5:5606:5609	4981971	0	True				
ANR	4982781	Statement	*	247:10:5611:5611	4981971	1	True				
ANR	4982782	Statement	bufasm	247:11:5612:5617	4981971	2	True				
ANR	4982783	Statement	=	247:18:5619:5619	4981971	3	True				
ANR	4982784	Statement	r_str_prefix_all	247:20:5621:5636	4981971	4	True				
ANR	4982785	Statement	(	247:37:5638:5638	4981971	5	True				
ANR	4982786	Statement	acbufasm	247:38:5639:5646	4981971	6	True				
ANR	4982787	Statement	","	247:46:5647:5647	4981971	7	True				
ANR	4982788	Statement	Color_RED	247:48:5649:5657	4981971	8	True				
ANR	4982789	Statement	"""- """	247:57:5658:5661	4981971	9	True				
ANR	4982790	Statement	)	247:61:5662:5662	4981971	10	True				
ANR	4982791	ExpressionStatement		247:62:5663:5663	4981971	11	True				
ANR	4982792	Statement	printf	248:5:5670:5675	4981971	12	True				
ANR	4982793	Statement	(	248:12:5677:5677	4981971	13	True				
ANR	4982794	Statement	"""%s"""	248:13:5678:5681	4981971	14	True				
ANR	4982795	Statement	Color_RESET	248:17:5682:5692	4981971	15	True				
ANR	4982796	Statement	","	248:28:5693:5693	4981971	16	True				
ANR	4982797	Statement	bufasm	248:30:5695:5700	4981971	17	True				
ANR	4982798	Statement	)	248:36:5701:5701	4981971	18	True				
ANR	4982799	ExpressionStatement		248:37:5702:5702	4981971	19	True				
ANR	4982800	ExpressionStatement	free ( bufasm )	249:5:5709:5722	4981971	20	True				
ANR	4982801	CallExpression	free ( bufasm )		4981971	0					
ANR	4982802	Callee	free		4981971	0					
ANR	4982803	Identifier	free		4981971	0					
ANR	4982804	ArgumentList	bufasm		4981971	1					
ANR	4982805	Argument	bufasm		4981971	0					
ANR	4982806	Identifier	bufasm		4981971	0					
ANR	4982807	ExpressionStatement	free ( acbufasm )	250:5:5729:5744	4981971	21	True				
ANR	4982808	CallExpression	free ( acbufasm )		4981971	0					
ANR	4982809	Callee	free		4981971	0					
ANR	4982810	Identifier	free		4981971	0					
ANR	4982811	ArgumentList	acbufasm		4981971	1					
ANR	4982812	Argument	acbufasm		4981971	0					
ANR	4982813	Identifier	acbufasm		4981971	0					
ANR	4982814	ElseStatement	else		4981971	0					
ANR	4982815	CompoundStatement		132:9:3180:3180	4981971	0					
ANR	4982816	Statement	printf	255:3:5800:5805	4981971	0	True				
ANR	4982817	Statement	(	255:10:5807:5807	4981971	1	True				
ANR	4982818	Statement	"""0x%08"""	255:11:5808:5814	4981971	2	True				
ANR	4982819	Statement	PFMT64x	255:18:5815:5821	4981971	3	True				
ANR	4982820	Statement	""" """	255:26:5823:5825	4981971	4	True				
ANR	4982821	Statement	","	255:29:5826:5826	4981971	5	True				
ANR	4982822	Statement	op	255:31:5828:5829	4981971	6	True				
ANR	4982823	Statement	->	255:33:5830:5831	4981971	7	True				
ANR	4982824	Statement	a_off	255:35:5832:5836	4981971	8	True				
ANR	4982825	Statement	)	255:40:5837:5837	4981971	9	True				
ANR	4982826	ExpressionStatement		255:41:5838:5838	4981971	10	True				
ANR	4982827	ForStatement	for ( i = 0 ; i < op -> a_len ; i ++ )		4981971	11					
ANR	4982828	ForInit	i = 0 ;	256:8:5848:5853	4981971	0	True				
ANR	4982829	AssignmentExpression	i = 0		4981971	0		=			
ANR	4982830	Identifier	i		4981971	0					
ANR	4982831	PrimaryExpression	0		4981971	1					
ANR	4982832	Condition	i < op -> a_len	256:15:5855:5867	4981971	1	True				
ANR	4982833	RelationalExpression	i < op -> a_len		4981971	0		<			
ANR	4982834	Identifier	i		4981971	0					
ANR	4982835	PtrMemberAccess	op -> a_len		4981971	1					
ANR	4982836	Identifier	op		4981971	0					
ANR	4982837	Identifier	a_len		4981971	1					
ANR	4982838	PostIncDecOperationExpression	i ++	256:30:5870:5872	4981971	2	True				
ANR	4982839	Identifier	i		4981971	0					
ANR	4982840	IncDec	++		4981971	1					
ANR	4982841	CompoundStatement		134:35:3260:3260	4981971	3					
ANR	4982842	ExpressionStatement	"printf ( ""%02x"" , op -> a_buf [ i ] )"	257:4:5881:5910	4981971	0	True				
ANR	4982843	CallExpression	"printf ( ""%02x"" , op -> a_buf [ i ] )"		4981971	0					
ANR	4982844	Callee	printf		4981971	0					
ANR	4982845	Identifier	printf		4981971	0					
ANR	4982846	ArgumentList	"""%02x"""		4981971	1					
ANR	4982847	Argument	"""%02x"""		4981971	0					
ANR	4982848	PrimaryExpression	"""%02x"""		4981971	0					
ANR	4982849	Argument	op -> a_buf [ i ]		4981971	1					
ANR	4982850	ArrayIndexing	op -> a_buf [ i ]		4981971	0					
ANR	4982851	PtrMemberAccess	op -> a_buf		4981971	0					
ANR	4982852	Identifier	op		4981971	0					
ANR	4982853	Identifier	a_buf		4981971	1					
ANR	4982854	Identifier	i		4981971	1					
ANR	4982855	IfStatement	if ( disasm )		4981971	33					
ANR	4982856	Condition	disasm	260:6:5927:5932	4981971	0	True				
ANR	4982857	Identifier	disasm		4981971	0					
ANR	4982858	CompoundStatement		139:3:3325:3330	4981971	1					
ANR	4982859	IdentifierDeclStatement	int i ;	261:3:5940:5945	4981971	0	True				
ANR	4982860	IdentifierDecl	i		4981971	0					
ANR	4982861	IdentifierDeclType	int		4981971	0					
ANR	4982862	Identifier	i		4981971	1					
ANR	4982863	Statement	printf	262:3:5950:5955	4981971	1	True				
ANR	4982864	Statement	(	262:10:5957:5957	4981971	2	True				
ANR	4982865	Statement	"""+++ 0x%08"""	262:11:5958:5968	4981971	3	True				
ANR	4982866	Statement	PFMT64x	262:22:5969:5975	4981971	4	True				
ANR	4982867	Statement	"""  """	262:30:5977:5980	4981971	5	True				
ANR	4982868	Statement	","	262:34:5981:5981	4981971	6	True				
ANR	4982869	Statement	op	262:36:5983:5984	4981971	7	True				
ANR	4982870	Statement	->	262:38:5985:5986	4981971	8	True				
ANR	4982871	Statement	b_off	262:40:5987:5991	4981971	9	True				
ANR	4982872	Statement	)	262:45:5992:5992	4981971	10	True				
ANR	4982873	ExpressionStatement		262:46:5993:5993	4981971	11	True				
ANR	4982874	IfStatement	if ( ! core )		4981971	12					
ANR	4982875	Condition	! core	263:7:6002:6006	4981971	0	True				
ANR	4982876	UnaryOperationExpression	! core		4981971	0					
ANR	4982877	UnaryOperator	!		4981971	0					
ANR	4982878	Identifier	core		4981971	1					
ANR	4982879	CompoundStatement		141:14:3394:3394	4981971	1					
ANR	4982880	ExpressionStatement	core = opencore ( NULL )	264:4:6015:6037	4981971	0	True				
ANR	4982881	AssignmentExpression	core = opencore ( NULL )		4981971	0		=			
ANR	4982882	Identifier	core		4981971	0					
ANR	4982883	CallExpression	opencore ( NULL )		4981971	1					
ANR	4982884	Callee	opencore		4981971	0					
ANR	4982885	Identifier	opencore		4981971	0					
ANR	4982886	ArgumentList	NULL		4981971	1					
ANR	4982887	Argument	NULL		4981971	0					
ANR	4982888	Identifier	NULL		4981971	0					
ANR	4982889	ForStatement	for ( i = 0 ; i < op -> b_len ; i ++ )		4981971	13					
ANR	4982890	ForInit	i = 0 ;	266:8:6052:6057	4981971	0	True				
ANR	4982891	AssignmentExpression	i = 0		4981971	0		=			
ANR	4982892	Identifier	i		4981971	0					
ANR	4982893	PrimaryExpression	0		4981971	1					
ANR	4982894	Condition	i < op -> b_len	266:15:6059:6071	4981971	1	True				
ANR	4982895	RelationalExpression	i < op -> b_len		4981971	0		<			
ANR	4982896	Identifier	i		4981971	0					
ANR	4982897	PtrMemberAccess	op -> b_len		4981971	1					
ANR	4982898	Identifier	op		4981971	0					
ANR	4982899	Identifier	b_len		4981971	1					
ANR	4982900	PostIncDecOperationExpression	i ++	266:30:6074:6076	4981971	2	True				
ANR	4982901	Identifier	i		4981971	0					
ANR	4982902	IncDec	++		4981971	1					
ANR	4982903	CompoundStatement		144:35:3464:3464	4981971	3					
ANR	4982904	ExpressionStatement	"printf ( ""%02x"" , op -> b_buf [ i ] )"	267:4:6085:6114	4981971	0	True				
ANR	4982905	CallExpression	"printf ( ""%02x"" , op -> b_buf [ i ] )"		4981971	0					
ANR	4982906	Callee	printf		4981971	0					
ANR	4982907	Identifier	printf		4981971	0					
ANR	4982908	ArgumentList	"""%02x"""		4981971	1					
ANR	4982909	Argument	"""%02x"""		4981971	0					
ANR	4982910	PrimaryExpression	"""%02x"""		4981971	0					
ANR	4982911	Argument	op -> b_buf [ i ]		4981971	1					
ANR	4982912	ArrayIndexing	op -> b_buf [ i ]		4981971	0					
ANR	4982913	PtrMemberAccess	op -> b_buf		4981971	0					
ANR	4982914	Identifier	op		4981971	0					
ANR	4982915	Identifier	b_buf		4981971	1					
ANR	4982916	Identifier	i		4981971	1					
ANR	4982917	ExpressionStatement	"printf ( ""\\n"" )"	269:3:6124:6137	4981971	14	True				
ANR	4982918	CallExpression	"printf ( ""\\n"" )"		4981971	0					
ANR	4982919	Callee	printf		4981971	0					
ANR	4982920	Identifier	printf		4981971	0					
ANR	4982921	ArgumentList	"""\\n"""		4981971	1					
ANR	4982922	Argument	"""\\n"""		4981971	0					
ANR	4982923	PrimaryExpression	"""\\n"""		4981971	0					
ANR	4982924	IfStatement	if ( core )		4981971	15					
ANR	4982925	Condition	core	270:7:6146:6149	4981971	0	True				
ANR	4982926	Identifier	core		4981971	0					
ANR	4982927	CompoundStatement		151:4:3652:3690	4981971	1					
ANR	4982928	IdentifierDeclStatement	"int len = R_MAX ( 4 , op -> b_len ) ;"	271:4:6158:6188	4981971	0	True				
ANR	4982929	IdentifierDecl	"len = R_MAX ( 4 , op -> b_len )"		4981971	0					
ANR	4982930	IdentifierDeclType	int		4981971	0					
ANR	4982931	Identifier	len		4981971	1					
ANR	4982932	AssignmentExpression	"len = R_MAX ( 4 , op -> b_len )"		4981971	2		=			
ANR	4982933	Identifier	len		4981971	0					
ANR	4982934	CallExpression	"R_MAX ( 4 , op -> b_len )"		4981971	1					
ANR	4982935	Callee	R_MAX		4981971	0					
ANR	4982936	Identifier	R_MAX		4981971	0					
ANR	4982937	ArgumentList	4		4981971	1					
ANR	4982938	Argument	4		4981971	0					
ANR	4982939	PrimaryExpression	4		4981971	0					
ANR	4982940	Argument	op -> b_len		4981971	1					
ANR	4982941	PtrMemberAccess	op -> b_len		4981971	0					
ANR	4982942	Identifier	op		4981971	0					
ANR	4982943	Identifier	b_len		4981971	1					
ANR	4982944	IdentifierDeclStatement	"RAsmCode * ac = r_asm_mdisassemble ( core -> assembler , op -> b_buf , len ) ;"	272:4:6194:6261	4981971	1	True				
ANR	4982945	IdentifierDecl	"* ac = r_asm_mdisassemble ( core -> assembler , op -> b_buf , len )"		4981971	0					
ANR	4982946	IdentifierDeclType	RAsmCode *		4981971	0					
ANR	4982947	Identifier	ac		4981971	1					
ANR	4982948	AssignmentExpression	"* ac = r_asm_mdisassemble ( core -> assembler , op -> b_buf , len )"		4981971	2		=			
ANR	4982949	Identifier	ac		4981971	0					
ANR	4982950	CallExpression	"r_asm_mdisassemble ( core -> assembler , op -> b_buf , len )"		4981971	1					
ANR	4982951	Callee	r_asm_mdisassemble		4981971	0					
ANR	4982952	Identifier	r_asm_mdisassemble		4981971	0					
ANR	4982953	ArgumentList	core -> assembler		4981971	1					
ANR	4982954	Argument	core -> assembler		4981971	0					
ANR	4982955	PtrMemberAccess	core -> assembler		4981971	0					
ANR	4982956	Identifier	core		4981971	0					
ANR	4982957	Identifier	assembler		4981971	1					
ANR	4982958	Argument	op -> b_buf		4981971	1					
ANR	4982959	PtrMemberAccess	op -> b_buf		4981971	0					
ANR	4982960	Identifier	op		4981971	0					
ANR	4982961	Identifier	b_buf		4981971	1					
ANR	4982962	Argument	len		4981971	2					
ANR	4982963	Identifier	len		4981971	0					
ANR	4982964	IdentifierDeclStatement	char * acbufasm = strdup ( ac -> assembly ) ;	273:4:6267:6305	4981971	2	True				
ANR	4982965	IdentifierDecl	* acbufasm = strdup ( ac -> assembly )		4981971	0					
ANR	4982966	IdentifierDeclType	char *		4981971	0					
ANR	4982967	Identifier	acbufasm		4981971	1					
ANR	4982968	AssignmentExpression	* acbufasm = strdup ( ac -> assembly )		4981971	2		=			
ANR	4982969	Identifier	acbufasm		4981971	0					
ANR	4982970	CallExpression	strdup ( ac -> assembly )		4981971	1					
ANR	4982971	Callee	strdup		4981971	0					
ANR	4982972	Identifier	strdup		4981971	0					
ANR	4982973	ArgumentList	ac -> assembly		4981971	1					
ANR	4982974	Argument	ac -> assembly		4981971	0					
ANR	4982975	PtrMemberAccess	ac -> assembly		4981971	0					
ANR	4982976	Identifier	ac		4981971	0					
ANR	4982977	Identifier	assembly		4981971	1					
ANR	4982978	IfStatement	if ( quiet )		4981971	3					
ANR	4982979	Condition	quiet	274:8:6315:6319	4981971	0	True				
ANR	4982980	Identifier	quiet		4981971	0					
ANR	4982981	CompoundStatement		153:5:3714:3762	4981971	1					
ANR	4982982	IdentifierDeclStatement	"char * bufasm = r_str_prefix_all ( acbufasm , ""+ "" ) ;"	275:5:6329:6377	4981971	0	True				
ANR	4982983	IdentifierDecl	"* bufasm = r_str_prefix_all ( acbufasm , ""+ "" )"		4981971	0					
ANR	4982984	IdentifierDeclType	char *		4981971	0					
ANR	4982985	Identifier	bufasm		4981971	1					
ANR	4982986	AssignmentExpression	"* bufasm = r_str_prefix_all ( acbufasm , ""+ "" )"		4981971	2		=			
ANR	4982987	Identifier	bufasm		4981971	0					
ANR	4982988	CallExpression	"r_str_prefix_all ( acbufasm , ""+ "" )"		4981971	1					
ANR	4982989	Callee	r_str_prefix_all		4981971	0					
ANR	4982990	Identifier	r_str_prefix_all		4981971	0					
ANR	4982991	ArgumentList	acbufasm		4981971	1					
ANR	4982992	Argument	acbufasm		4981971	0					
ANR	4982993	Identifier	acbufasm		4981971	0					
ANR	4982994	Argument	"""+ """		4981971	1					
ANR	4982995	PrimaryExpression	"""+ """		4981971	0					
ANR	4982996	ExpressionStatement	"printf ( ""%s\\n"" , bufasm )"	276:5:6384:6407	4981971	1	True				
ANR	4982997	CallExpression	"printf ( ""%s\\n"" , bufasm )"		4981971	0					
ANR	4982998	Callee	printf		4981971	0					
ANR	4982999	Identifier	printf		4981971	0					
ANR	4983000	ArgumentList	"""%s\\n"""		4981971	1					
ANR	4983001	Argument	"""%s\\n"""		4981971	0					
ANR	4983002	PrimaryExpression	"""%s\\n"""		4981971	0					
ANR	4983003	Argument	bufasm		4981971	1					
ANR	4983004	Identifier	bufasm		4981971	0					
ANR	4983005	ExpressionStatement	free ( bufasm )	277:5:6414:6427	4981971	2	True				
ANR	4983006	CallExpression	free ( bufasm )		4981971	0					
ANR	4983007	Callee	free		4981971	0					
ANR	4983008	Identifier	free		4981971	0					
ANR	4983009	ArgumentList	bufasm		4981971	1					
ANR	4983010	Argument	bufasm		4981971	0					
ANR	4983011	Identifier	bufasm		4981971	0					
ANR	4983012	ExpressionStatement	free ( acbufasm )	278:5:6434:6449	4981971	3	True				
ANR	4983013	CallExpression	free ( acbufasm )		4981971	0					
ANR	4983014	Callee	free		4981971	0					
ANR	4983015	Identifier	free		4981971	0					
ANR	4983016	ArgumentList	acbufasm		4981971	1					
ANR	4983017	Argument	acbufasm		4981971	0					
ANR	4983018	Identifier	acbufasm		4981971	0					
ANR	4983019	ElseStatement	else		4981971	0					
ANR	4983020	CompoundStatement		157:11:3847:3847	4981971	0					
ANR	4983021	Statement	char	280:5:6469:6472	4981971	0	True				
ANR	4983022	Statement	*	280:10:6474:6474	4981971	1	True				
ANR	4983023	Statement	bufasm	280:11:6475:6480	4981971	2	True				
ANR	4983024	Statement	=	280:18:6482:6482	4981971	3	True				
ANR	4983025	Statement	r_str_prefix_all	280:20:6484:6499	4981971	4	True				
ANR	4983026	Statement	(	280:37:6501:6501	4981971	5	True				
ANR	4983027	Statement	acbufasm	280:38:6502:6509	4981971	6	True				
ANR	4983028	Statement	","	280:46:6510:6510	4981971	7	True				
ANR	4983029	Statement	Color_GREEN	280:48:6512:6522	4981971	8	True				
ANR	4983030	Statement	"""+ """	280:59:6523:6526	4981971	9	True				
ANR	4983031	Statement	)	280:63:6527:6527	4981971	10	True				
ANR	4983032	ExpressionStatement		280:64:6528:6528	4981971	11	True				
ANR	4983033	Statement	printf	281:5:6535:6540	4981971	12	True				
ANR	4983034	Statement	(	281:12:6542:6542	4981971	13	True				
ANR	4983035	Statement	"""%s\\n"""	281:13:6543:6548	4981971	14	True				
ANR	4983036	Statement	Color_RESET	281:20:6550:6560	4981971	15	True				
ANR	4983037	Statement	","	281:31:6561:6561	4981971	16	True				
ANR	4983038	Statement	bufasm	281:33:6563:6568	4981971	17	True				
ANR	4983039	Statement	)	281:39:6569:6569	4981971	18	True				
ANR	4983040	ExpressionStatement		281:40:6570:6570	4981971	19	True				
ANR	4983041	ExpressionStatement	free ( bufasm )	282:5:6577:6590	4981971	20	True				
ANR	4983042	CallExpression	free ( bufasm )		4981971	0					
ANR	4983043	Callee	free		4981971	0					
ANR	4983044	Identifier	free		4981971	0					
ANR	4983045	ArgumentList	bufasm		4981971	1					
ANR	4983046	Argument	bufasm		4981971	0					
ANR	4983047	Identifier	bufasm		4981971	0					
ANR	4983048	ExpressionStatement	free ( acbufasm )	283:5:6597:6612	4981971	21	True				
ANR	4983049	CallExpression	free ( acbufasm )		4981971	0					
ANR	4983050	Callee	free		4981971	0					
ANR	4983051	Identifier	free		4981971	0					
ANR	4983052	ArgumentList	acbufasm		4981971	1					
ANR	4983053	Argument	acbufasm		4981971	0					
ANR	4983054	Identifier	acbufasm		4981971	0					
ANR	4983055	ElseStatement	else		4981971	0					
ANR	4983056	CompoundStatement		165:9:4048:4048	4981971	0					
ANR	4983057	ExpressionStatement	"printf ( "" => "" )"	288:3:6668:6683	4981971	0	True				
ANR	4983058	CallExpression	"printf ( "" => "" )"		4981971	0					
ANR	4983059	Callee	printf		4981971	0					
ANR	4983060	Identifier	printf		4981971	0					
ANR	4983061	ArgumentList	""" => """		4981971	1					
ANR	4983062	Argument	""" => """		4981971	0					
ANR	4983063	PrimaryExpression	""" => """		4981971	0					
ANR	4983064	ForStatement	for ( i = 0 ; i < op -> b_len ; i ++ )		4981971	1					
ANR	4983065	ForInit	i = 0 ;	289:8:6693:6698	4981971	0	True				
ANR	4983066	AssignmentExpression	i = 0		4981971	0		=			
ANR	4983067	Identifier	i		4981971	0					
ANR	4983068	PrimaryExpression	0		4981971	1					
ANR	4983069	Condition	i < op -> b_len	289:15:6700:6712	4981971	1	True				
ANR	4983070	RelationalExpression	i < op -> b_len		4981971	0		<			
ANR	4983071	Identifier	i		4981971	0					
ANR	4983072	PtrMemberAccess	op -> b_len		4981971	1					
ANR	4983073	Identifier	op		4981971	0					
ANR	4983074	Identifier	b_len		4981971	1					
ANR	4983075	PostIncDecOperationExpression	i ++	289:30:6715:6717	4981971	2	True				
ANR	4983076	Identifier	i		4981971	0					
ANR	4983077	IncDec	++		4981971	1					
ANR	4983078	CompoundStatement		167:35:4105:4105	4981971	3					
ANR	4983079	ExpressionStatement	"printf ( ""%02x"" , op -> b_buf [ i ] )"	290:4:6726:6755	4981971	0	True				
ANR	4983080	CallExpression	"printf ( ""%02x"" , op -> b_buf [ i ] )"		4981971	0					
ANR	4983081	Callee	printf		4981971	0					
ANR	4983082	Identifier	printf		4981971	0					
ANR	4983083	ArgumentList	"""%02x"""		4981971	1					
ANR	4983084	Argument	"""%02x"""		4981971	0					
ANR	4983085	PrimaryExpression	"""%02x"""		4981971	0					
ANR	4983086	Argument	op -> b_buf [ i ]		4981971	1					
ANR	4983087	ArrayIndexing	op -> b_buf [ i ]		4981971	0					
ANR	4983088	PtrMemberAccess	op -> b_buf		4981971	0					
ANR	4983089	Identifier	op		4981971	0					
ANR	4983090	Identifier	b_buf		4981971	1					
ANR	4983091	Identifier	i		4981971	1					
ANR	4983092	Statement	printf	292:3:6765:6770	4981971	2	True				
ANR	4983093	Statement	(	292:10:6772:6772	4981971	3	True				
ANR	4983094	Statement	""" 0x%08"""	292:11:6773:6780	4981971	4	True				
ANR	4983095	Statement	PFMT64x	292:19:6781:6787	4981971	5	True				
ANR	4983096	Statement	"""\\n"""	292:27:6789:6792	4981971	6	True				
ANR	4983097	Statement	","	292:31:6793:6793	4981971	7	True				
ANR	4983098	Statement	op	292:33:6795:6796	4981971	8	True				
ANR	4983099	Statement	->	292:35:6797:6798	4981971	9	True				
ANR	4983100	Statement	b_off	292:37:6799:6803	4981971	10	True				
ANR	4983101	Statement	)	292:42:6804:6804	4981971	11	True				
ANR	4983102	ExpressionStatement		292:43:6805:6805	4981971	12	True				
ANR	4983103	ReturnStatement	return 1 ;	294:2:6813:6821	4981971	34	True				
ANR	4983104	PrimaryExpression	1		4981971	0					
ANR	4983105	ReturnStatement	return 0 ;	296:1:6827:6835	4981971	4	True				
ANR	4983106	PrimaryExpression	0		4981971	0					
ANR	4983107	ReturnType	static int		4981971	1					
ANR	4983108	Identifier	cb		4981971	2					
ANR	4983109	ParameterList	"RDiff * d , void * user , RDiffOp * op"		4981971	3					
ANR	4983110	Parameter	RDiff * d	123:14:2579:2586	4981971	0	True				
ANR	4983111	ParameterType	RDiff *		4981971	0					
ANR	4983112	Identifier	d		4981971	1					
ANR	4983113	Parameter	void * user	123:24:2589:2598	4981971	1	True				
ANR	4983114	ParameterType	void *		4981971	0					
ANR	4983115	Identifier	user		4981971	1					
ANR	4983116	Parameter	RDiffOp * op	123:36:2601:2611	4981971	2	True				
ANR	4983117	ParameterType	RDiffOp *		4981971	0					
ANR	4983118	Identifier	op		4981971	1					
ANR	4983119	CFGEntryNode	ENTRY		4981971		True				
ANR	4983120	CFGExitNode	EXIT		4981971		True				
ANR	4983121	Symbol	* op -> b_buf		4981971						
ANR	4983122	Symbol	Color_GREEN		4981971						
ANR	4983123	Symbol	* op		4981971						
ANR	4983124	Symbol	ac -> assembly		4981971						
ANR	4983125	Symbol	Color_RESET		4981971						
ANR	4983126	Symbol	delta		4981971						
ANR	4983127	Symbol	* core		4981971						
ANR	4983128	Symbol	core -> assembler		4981971						
ANR	4983129	Symbol	op -> a_buf		4981971						
ANR	4983130	Symbol	* ac		4981971						
ANR	4983131	Symbol	* op -> a_buf		4981971						
ANR	4983132	Symbol	* * op		4981971						
ANR	4983133	Symbol	disasm		4981971						
ANR	4983134	Symbol	op -> a_off		4981971						
ANR	4983135	Symbol	r_str_prefix_all		4981971						
ANR	4983136	Symbol	file		4981971						
ANR	4983137	Symbol	len		4981971						
ANR	4983138	Symbol	op -> b_buf		4981971						
ANR	4983139	Symbol	quiet		4981971						
ANR	4983140	Symbol	opencore		4981971						
ANR	4983141	Symbol	op -> b_off		4981971						
ANR	4983142	Symbol	core -> config		4981971						
ANR	4983143	Symbol	op		4981971						
ANR	4983144	Symbol	ac		4981971						
ANR	4983145	Symbol	NULL		4981971						
ANR	4983146	Symbol	d		4981971						
ANR	4983147	Symbol	count		4981971						
ANR	4983148	Symbol	bits		4981971						
ANR	4983149	Symbol	i		4981971						
ANR	4983150	Symbol	op -> a_len		4981971						
ANR	4983151	Symbol	diffmode		4981971						
ANR	4983152	Symbol	json_started		4981971						
ANR	4983153	Symbol	r_str_escape		4981971						
ANR	4983154	Symbol	p		4981971						
ANR	4983155	Symbol	showcount		4981971						
ANR	4983156	Symbol	core		4981971						
ANR	4983157	Symbol	s		4981971						
ANR	4983158	Symbol	* i		4981971						
ANR	4983159	Symbol	bufasm		4981971						
ANR	4983160	Symbol	op -> b_len		4981971						
ANR	4983161	Symbol	R_MAX		4981971						
ANR	4983162	Symbol	arch		4981971						
ANR	4983163	Symbol	strdup		4981971						
ANR	4983164	Symbol	Color_RED		4981971						
ANR	4983165	Symbol	r_asm_mdisassemble		4981971						
ANR	4983166	Symbol	acbufasm		4981971						
ANR	4983167	Symbol	user		4981971						
ANR	4983168	Symbol	* s		4981971						
ANR	4983169	DeclStmt									
ANR	4983170	Decl							ut64	ut64	gdiff_start
ANR	4983171	Function	print_bytes	301:0:6870:7052							
ANR	4983172	FunctionDef	"print_bytes (const void * p , size_t len , bool big_endian)"		4983171	0					
ANR	4983173	CompoundStatement		301:61:6931:7052	4983171	0					
ANR	4983174	IdentifierDeclStatement	size_t i ;	302:1:6934:6942	4983171	0	True				
ANR	4983175	IdentifierDecl	i		4983171	0					
ANR	4983176	IdentifierDeclType	size_t		4983171	0					
ANR	4983177	Identifier	i		4983171	1					
ANR	4983178	ForStatement	for ( i = 0 ; i < len ; ++ i )		4983171	1					
ANR	4983179	ForInit	i = 0 ;	303:6:6950:6955	4983171	0	True				
ANR	4983180	AssignmentExpression	i = 0		4983171	0		=			
ANR	4983181	Identifier	i		4983171	0					
ANR	4983182	PrimaryExpression	0		4983171	1					
ANR	4983183	Condition	i < len	303:13:6957:6963	4983171	1	True				
ANR	4983184	RelationalExpression	i < len		4983171	0		<			
ANR	4983185	Identifier	i		4983171	0					
ANR	4983186	Identifier	len		4983171	1					
ANR	4983187	UnaryExpression	++ i	303:22:6966:6968	4983171	2	True				
ANR	4983188	IncDec	++		4983171	0					
ANR	4983189	Identifier	i		4983171	1					
ANR	4983190	CompoundStatement		4:2:43:94	4983171	3					
ANR	4983191	IdentifierDeclStatement	ut8 ch = ( ( ut8 * ) p ) [ big_endian ? ( len - i - 1 ) : i ] ;	304:2:6975:7026	4983171	0	True				
ANR	4983192	IdentifierDecl	ch = ( ( ut8 * ) p ) [ big_endian ? ( len - i - 1 ) : i ]		4983171	0					
ANR	4983193	IdentifierDeclType	ut8		4983171	0					
ANR	4983194	Identifier	ch		4983171	1					
ANR	4983195	AssignmentExpression	ch = ( ( ut8 * ) p ) [ big_endian ? ( len - i - 1 ) : i ]		4983171	2		=			
ANR	4983196	Identifier	ch		4983171	0					
ANR	4983197	ArrayIndexing	( ( ut8 * ) p ) [ big_endian ? ( len - i - 1 ) : i ]		4983171	1					
ANR	4983198	CastExpression	( ut8 * ) p		4983171	0					
ANR	4983199	CastTarget	ut8 *		4983171	0					
ANR	4983200	Identifier	p		4983171	1					
ANR	4983201	ConditionalExpression	big_endian ? ( len - i - 1 ) : i		4983171	1					
ANR	4983202	Condition	big_endian		4983171	0					
ANR	4983203	Identifier	big_endian		4983171	0					
ANR	4983204	AdditiveExpression	len - i - 1		4983171	1		-			
ANR	4983205	Identifier	len		4983171	0					
ANR	4983206	AdditiveExpression	i - 1		4983171	1		-			
ANR	4983207	Identifier	i		4983171	0					
ANR	4983208	PrimaryExpression	1		4983171	1					
ANR	4983209	Identifier	i		4983171	2					
ANR	4983210	ExpressionStatement	"write ( 1 , & ch , 1 )"	305:2:7030:7047	4983171	1	True				
ANR	4983211	CallExpression	"write ( 1 , & ch , 1 )"		4983171	0					
ANR	4983212	Callee	write		4983171	0					
ANR	4983213	Identifier	write		4983171	0					
ANR	4983214	ArgumentList	1		4983171	1					
ANR	4983215	Argument	1		4983171	0					
ANR	4983216	PrimaryExpression	1		4983171	0					
ANR	4983217	Argument	& ch		4983171	1					
ANR	4983218	UnaryOperationExpression	& ch		4983171	0					
ANR	4983219	UnaryOperator	&		4983171	0					
ANR	4983220	Identifier	ch		4983171	1					
ANR	4983221	Argument	1		4983171	2					
ANR	4983222	PrimaryExpression	1		4983171	0					
ANR	4983223	ReturnType	void		4983171	1					
ANR	4983224	Identifier	print_bytes		4983171	2					
ANR	4983225	ParameterList	"const void * p , size_t len , bool big_endian"		4983171	3					
ANR	4983226	Parameter	const void * p	301:17:6887:6899	4983171	0	True				
ANR	4983227	ParameterType	const void *		4983171	0					
ANR	4983228	Identifier	p		4983171	1					
ANR	4983229	Parameter	size_t len	301:32:6902:6911	4983171	1	True				
ANR	4983230	ParameterType	size_t		4983171	0					
ANR	4983231	Identifier	len		4983171	1					
ANR	4983232	Parameter	bool big_endian	301:44:6914:6928	4983171	2	True				
ANR	4983233	ParameterType	bool		4983171	0					
ANR	4983234	Identifier	big_endian		4983171	1					
ANR	4983235	CFGEntryNode	ENTRY		4983171		True				
ANR	4983236	CFGExitNode	EXIT		4983171		True				
ANR	4983237	Symbol	p		4983171						
ANR	4983238	Symbol	* i		4983171						
ANR	4983239	Symbol	len		4983171						
ANR	4983240	Symbol	big_endian		4983171						
ANR	4983241	Symbol	ch		4983171						
ANR	4983242	Symbol	i		4983171						
ANR	4983243	Symbol	* big_endian		4983171						
ANR	4983244	Symbol	* p		4983171						
ANR	4983245	Symbol	& ch		4983171						
ANR	4983246	Symbol	* len		4983171						
ANR	4983247	Function	bcb	309:0:7055:9889							
ANR	4983248	FunctionDef	"bcb (RDiff * d , void * user , RDiffOp * op)"		4983247	0					
ANR	4983249	CompoundStatement		309:50:7105:9889	4983247	0					
ANR	4983250	IdentifierDeclStatement	ut64 offset_diff = op -> a_off - gdiff_start ;	310:1:7108:7150	4983247	0	True				
ANR	4983251	IdentifierDecl	offset_diff = op -> a_off - gdiff_start		4983247	0					
ANR	4983252	IdentifierDeclType	ut64		4983247	0					
ANR	4983253	Identifier	offset_diff		4983247	1					
ANR	4983254	AssignmentExpression	offset_diff = op -> a_off - gdiff_start		4983247	2		=			
ANR	4983255	Identifier	offset_diff		4983247	0					
ANR	4983256	AdditiveExpression	op -> a_off - gdiff_start		4983247	1		-			
ANR	4983257	PtrMemberAccess	op -> a_off		4983247	0					
ANR	4983258	Identifier	op		4983247	0					
ANR	4983259	Identifier	a_off		4983247	1					
ANR	4983260	Identifier	gdiff_start		4983247	1					
ANR	4983261	IdentifierDeclStatement	unsigned char opcode ;	311:1:7153:7173	4983247	1	True				
ANR	4983262	IdentifierDecl	opcode		4983247	0					
ANR	4983263	IdentifierDeclType	unsigned char		4983247	0					
ANR	4983264	Identifier	opcode		4983247	1					
ANR	4983265	IdentifierDeclStatement	unsigned short USAddr = 0 ;	312:1:7176:7201	4983247	2	True				
ANR	4983266	IdentifierDecl	USAddr = 0		4983247	0					
ANR	4983267	IdentifierDeclType	unsigned short		4983247	0					
ANR	4983268	Identifier	USAddr		4983247	1					
ANR	4983269	AssignmentExpression	USAddr = 0		4983247	2		=			
ANR	4983270	Identifier	USAddr		4983247	0					
ANR	4983271	PrimaryExpression	0		4983247	1					
ANR	4983272	IdentifierDeclStatement	int IAddr = 0 ;	313:1:7204:7217	4983247	3	True				
ANR	4983273	IdentifierDecl	IAddr = 0		4983247	0					
ANR	4983274	IdentifierDeclType	int		4983247	0					
ANR	4983275	Identifier	IAddr		4983247	1					
ANR	4983276	AssignmentExpression	IAddr = 0		4983247	2		=			
ANR	4983277	Identifier	IAddr		4983247	0					
ANR	4983278	PrimaryExpression	0		4983247	1					
ANR	4983279	IdentifierDeclStatement	unsigned char UCLen = 0 ;	314:1:7220:7243	4983247	4	True				
ANR	4983280	IdentifierDecl	UCLen = 0		4983247	0					
ANR	4983281	IdentifierDeclType	unsigned char		4983247	0					
ANR	4983282	Identifier	UCLen		4983247	1					
ANR	4983283	AssignmentExpression	UCLen = 0		4983247	2		=			
ANR	4983284	Identifier	UCLen		4983247	0					
ANR	4983285	PrimaryExpression	0		4983247	1					
ANR	4983286	IdentifierDeclStatement	unsigned short USLen = 0 ;	315:1:7246:7270	4983247	5	True				
ANR	4983287	IdentifierDecl	USLen = 0		4983247	0					
ANR	4983288	IdentifierDeclType	unsigned short		4983247	0					
ANR	4983289	Identifier	USLen		4983247	1					
ANR	4983290	AssignmentExpression	USLen = 0		4983247	2		=			
ANR	4983291	Identifier	USLen		4983247	0					
ANR	4983292	PrimaryExpression	0		4983247	1					
ANR	4983293	IdentifierDeclStatement	int ILen = 0 ;	316:1:7273:7285	4983247	6	True				
ANR	4983294	IdentifierDecl	ILen = 0		4983247	0					
ANR	4983295	IdentifierDeclType	int		4983247	0					
ANR	4983296	Identifier	ILen		4983247	1					
ANR	4983297	AssignmentExpression	ILen = 0		4983247	2		=			
ANR	4983298	Identifier	ILen		4983247	0					
ANR	4983299	PrimaryExpression	0		4983247	1					
ANR	4983300	IfStatement	if ( offset_diff > 0 )		4983247	7					
ANR	4983301	Condition	offset_diff > 0	319:5:7331:7345	4983247	0	True				
ANR	4983302	RelationalExpression	offset_diff > 0		4983247	0		>			
ANR	4983303	Identifier	offset_diff		4983247	0					
ANR	4983304	PrimaryExpression	0		4983247	1					
ANR	4983305	CompoundStatement		11:22:242:242	4983247	1					
ANR	4983306	IfStatement	if ( gdiff_start <= USHRT_MAX )		4983247	0					
ANR	4983307	Condition	gdiff_start <= USHRT_MAX	322:6:7384:7407	4983247	0	True				
ANR	4983308	RelationalExpression	gdiff_start <= USHRT_MAX		4983247	0		<=			
ANR	4983309	Identifier	gdiff_start		4983247	0					
ANR	4983310	Identifier	USHRT_MAX		4983247	1					
ANR	4983311	CompoundStatement		14:32:304:304	4983247	1					
ANR	4983312	ExpressionStatement	opcode = 249	323:3:7415:7427	4983247	0	True				
ANR	4983313	AssignmentExpression	opcode = 249		4983247	0		=			
ANR	4983314	Identifier	opcode		4983247	0					
ANR	4983315	PrimaryExpression	249		4983247	1					
ANR	4983316	ExpressionStatement	USAddr = ( unsigned short ) gdiff_start	324:3:7432:7469	4983247	1	True				
ANR	4983317	AssignmentExpression	USAddr = ( unsigned short ) gdiff_start		4983247	0		=			
ANR	4983318	Identifier	USAddr		4983247	0					
ANR	4983319	CastExpression	( unsigned short ) gdiff_start		4983247	1					
ANR	4983320	CastTarget	unsigned short		4983247	0					
ANR	4983321	Identifier	gdiff_start		4983247	1					
ANR	4983322	ElseStatement	else		4983247	0					
ANR	4983323	IfStatement	if ( gdiff_start <= INT_MAX )		4983247	0					
ANR	4983324	Condition	gdiff_start <= INT_MAX	325:13:7484:7505	4983247	0	True				
ANR	4983325	RelationalExpression	gdiff_start <= INT_MAX		4983247	0		<=			
ANR	4983326	Identifier	gdiff_start		4983247	0					
ANR	4983327	Identifier	INT_MAX		4983247	1					
ANR	4983328	CompoundStatement		17:37:402:402	4983247	1					
ANR	4983329	ExpressionStatement	opcode = 252	326:3:7513:7525	4983247	0	True				
ANR	4983330	AssignmentExpression	opcode = 252		4983247	0		=			
ANR	4983331	Identifier	opcode		4983247	0					
ANR	4983332	PrimaryExpression	252		4983247	1					
ANR	4983333	ExpressionStatement	IAddr = ( int ) gdiff_start	327:3:7530:7555	4983247	1	True				
ANR	4983334	AssignmentExpression	IAddr = ( int ) gdiff_start		4983247	0		=			
ANR	4983335	Identifier	IAddr		4983247	0					
ANR	4983336	CastExpression	( int ) gdiff_start		4983247	1					
ANR	4983337	CastTarget	int		4983247	0					
ANR	4983338	Identifier	gdiff_start		4983247	1					
ANR	4983339	ElseStatement	else		4983247	0					
ANR	4983340	CompoundStatement		20:9:460:460	4983247	0					
ANR	4983341	ExpressionStatement	opcode = 255	329:3:7571:7583	4983247	0	True				
ANR	4983342	AssignmentExpression	opcode = 255		4983247	0		=			
ANR	4983343	Identifier	opcode		4983247	0					
ANR	4983344	PrimaryExpression	255		4983247	1					
ANR	4983345	IfStatement	if ( opcode != 255 && offset_diff <= UCHAR_MAX )		4983247	1					
ANR	4983346	Condition	opcode != 255 && offset_diff <= UCHAR_MAX	333:6:7621:7661	4983247	0	True				
ANR	4983347	AndExpression	opcode != 255 && offset_diff <= UCHAR_MAX		4983247	0		&&			
ANR	4983348	EqualityExpression	opcode != 255		4983247	0		!=			
ANR	4983349	Identifier	opcode		4983247	0					
ANR	4983350	PrimaryExpression	255		4983247	1					
ANR	4983351	RelationalExpression	offset_diff <= UCHAR_MAX		4983247	1		<=			
ANR	4983352	Identifier	offset_diff		4983247	0					
ANR	4983353	Identifier	UCHAR_MAX		4983247	1					
ANR	4983354	CompoundStatement		25:49:558:558	4983247	1					
ANR	4983355	ExpressionStatement	UCLen = ( unsigned char ) offset_diff	334:3:7669:7704	4983247	0	True				
ANR	4983356	AssignmentExpression	UCLen = ( unsigned char ) offset_diff		4983247	0		=			
ANR	4983357	Identifier	UCLen		4983247	0					
ANR	4983358	CastExpression	( unsigned char ) offset_diff		4983247	1					
ANR	4983359	CastTarget	unsigned char		4983247	0					
ANR	4983360	Identifier	offset_diff		4983247	1					
ANR	4983361	ElseStatement	else		4983247	0					
ANR	4983362	IfStatement	if ( opcode != 255 && offset_diff <= USHRT_MAX )		4983247	0					
ANR	4983363	Condition	opcode != 255 && offset_diff <= USHRT_MAX	335:13:7719:7759	4983247	0	True				
ANR	4983364	AndExpression	opcode != 255 && offset_diff <= USHRT_MAX		4983247	0		&&			
ANR	4983365	EqualityExpression	opcode != 255		4983247	0		!=			
ANR	4983366	Identifier	opcode		4983247	0					
ANR	4983367	PrimaryExpression	255		4983247	1					
ANR	4983368	RelationalExpression	offset_diff <= USHRT_MAX		4983247	1		<=			
ANR	4983369	Identifier	offset_diff		4983247	0					
ANR	4983370	Identifier	USHRT_MAX		4983247	1					
ANR	4983371	CompoundStatement		27:56:656:656	4983247	1					
ANR	4983372	ExpressionStatement	USLen = ( unsigned short ) offset_diff	336:3:7767:7803	4983247	0	True				
ANR	4983373	AssignmentExpression	USLen = ( unsigned short ) offset_diff		4983247	0		=			
ANR	4983374	Identifier	USLen		4983247	0					
ANR	4983375	CastExpression	( unsigned short ) offset_diff		4983247	1					
ANR	4983376	CastTarget	unsigned short		4983247	0					
ANR	4983377	Identifier	offset_diff		4983247	1					
ANR	4983378	ExpressionStatement	opcode += 1	337:3:7808:7819	4983247	1	True				
ANR	4983379	AssignmentExpression	opcode += 1		4983247	0		+=			
ANR	4983380	Identifier	opcode		4983247	0					
ANR	4983381	PrimaryExpression	1		4983247	1					
ANR	4983382	ElseStatement	else		4983247	0					
ANR	4983383	IfStatement	if ( opcode != 255 && offset_diff <= INT_MAX )		4983247	0					
ANR	4983384	Condition	opcode != 255 && offset_diff <= INT_MAX	338:13:7834:7872	4983247	0	True				
ANR	4983385	AndExpression	opcode != 255 && offset_diff <= INT_MAX		4983247	0		&&			
ANR	4983386	EqualityExpression	opcode != 255		4983247	0		!=			
ANR	4983387	Identifier	opcode		4983247	0					
ANR	4983388	PrimaryExpression	255		4983247	1					
ANR	4983389	RelationalExpression	offset_diff <= INT_MAX		4983247	1		<=			
ANR	4983390	Identifier	offset_diff		4983247	0					
ANR	4983391	Identifier	INT_MAX		4983247	1					
ANR	4983392	CompoundStatement		30:54:769:769	4983247	1					
ANR	4983393	ExpressionStatement	ILen = ( int ) offset_diff	339:3:7880:7904	4983247	0	True				
ANR	4983394	AssignmentExpression	ILen = ( int ) offset_diff		4983247	0		=			
ANR	4983395	Identifier	ILen		4983247	0					
ANR	4983396	CastExpression	( int ) offset_diff		4983247	1					
ANR	4983397	CastTarget	int		4983247	0					
ANR	4983398	Identifier	offset_diff		4983247	1					
ANR	4983399	ExpressionStatement	opcode += 2	340:3:7909:7920	4983247	1	True				
ANR	4983400	AssignmentExpression	opcode += 2		4983247	0		+=			
ANR	4983401	Identifier	opcode		4983247	0					
ANR	4983402	PrimaryExpression	2		4983247	1					
ANR	4983403	ElseStatement	else		4983247	0					
ANR	4983404	IfStatement	if ( offset_diff > INT_MAX )		4983247	0					
ANR	4983405	Condition	offset_diff > INT_MAX	341:13:7935:7955	4983247	0	True				
ANR	4983406	RelationalExpression	offset_diff > INT_MAX		4983247	0		>			
ANR	4983407	Identifier	offset_diff		4983247	0					
ANR	4983408	Identifier	INT_MAX		4983247	1					
ANR	4983409	CompoundStatement		36:3:917:925	4983247	1					
ANR	4983410	IdentifierDeclStatement	int times = offset_diff / INT_MAX ;	342:3:7963:7996	4983247	0	True				
ANR	4983411	IdentifierDecl	times = offset_diff / INT_MAX		4983247	0					
ANR	4983412	IdentifierDeclType	int		4983247	0					
ANR	4983413	Identifier	times		4983247	1					
ANR	4983414	AssignmentExpression	times = offset_diff / INT_MAX		4983247	2		=			
ANR	4983415	Identifier	times		4983247	0					
ANR	4983416	MultiplicativeExpression	offset_diff / INT_MAX		4983247	1		/			
ANR	4983417	Identifier	offset_diff		4983247	0					
ANR	4983418	Identifier	INT_MAX		4983247	1					
ANR	4983419	IdentifierDeclStatement	int max = INT_MAX ;	343:3:8001:8018	4983247	1	True				
ANR	4983420	IdentifierDecl	max = INT_MAX		4983247	0					
ANR	4983421	IdentifierDeclType	int		4983247	0					
ANR	4983422	Identifier	max		4983247	1					
ANR	4983423	AssignmentExpression	max = INT_MAX		4983247	2		=			
ANR	4983424	Identifier	INT_MAX		4983247	0					
ANR	4983425	Identifier	INT_MAX		4983247	1					
ANR	4983426	IdentifierDeclStatement	size_t i ;	344:3:8023:8031	4983247	2	True				
ANR	4983427	IdentifierDecl	i		4983247	0					
ANR	4983428	IdentifierDeclType	size_t		4983247	0					
ANR	4983429	Identifier	i		4983247	1					
ANR	4983430	ForStatement	for ( i = 0 ; i < times ; i ++ )		4983247	3					
ANR	4983431	ForInit	i = 0 ;	345:8:8041:8046	4983247	0	True				
ANR	4983432	AssignmentExpression	i = 0		4983247	0		=			
ANR	4983433	Identifier	i		4983247	0					
ANR	4983434	PrimaryExpression	0		4983247	1					
ANR	4983435	Condition	i < times	345:15:8048:8056	4983247	1	True				
ANR	4983436	RelationalExpression	i < times		4983247	0		<			
ANR	4983437	Identifier	i		4983247	0					
ANR	4983438	Identifier	times		4983247	1					
ANR	4983439	PostIncDecOperationExpression	i ++	345:26:8059:8061	4983247	2	True				
ANR	4983440	Identifier	i		4983247	0					
ANR	4983441	IncDec	++		4983247	1					
ANR	4983442	CompoundStatement		37:31:958:958	4983247	3					
ANR	4983443	ExpressionStatement	"print_bytes ( & opcode , sizeof ( opcode ) , true )"	346:4:8070:8114	4983247	0	True				
ANR	4983444	CallExpression	"print_bytes ( & opcode , sizeof ( opcode ) , true )"		4983247	0					
ANR	4983445	Callee	print_bytes		4983247	0					
ANR	4983446	Identifier	print_bytes		4983247	0					
ANR	4983447	ArgumentList	& opcode		4983247	1					
ANR	4983448	Argument	& opcode		4983247	0					
ANR	4983449	UnaryOperationExpression	& opcode		4983247	0					
ANR	4983450	UnaryOperator	&		4983247	0					
ANR	4983451	Identifier	opcode		4983247	1					
ANR	4983452	Argument	sizeof ( opcode )		4983247	1					
ANR	4983453	SizeofExpression	sizeof ( opcode )		4983247	0					
ANR	4983454	Sizeof	sizeof		4983247	0					
ANR	4983455	SizeofOperand	opcode		4983247	1					
ANR	4983456	Argument	true		4983247	2					
ANR	4983457	Identifier	true		4983247	0					
ANR	4983458	ExpressionStatement	"print_bytes ( & max , sizeof ( max ) , true )"	349:4:8236:8274	4983247	1	True				
ANR	4983459	CallExpression	"print_bytes ( & max , sizeof ( max ) , true )"		4983247	0					
ANR	4983460	Callee	print_bytes		4983247	0					
ANR	4983461	Identifier	print_bytes		4983247	0					
ANR	4983462	ArgumentList	& max		4983247	1					
ANR	4983463	Argument	& max		4983247	0					
ANR	4983464	UnaryOperationExpression	& max		4983247	0					
ANR	4983465	UnaryOperator	&		4983247	0					
ANR	4983466	Identifier	max		4983247	1					
ANR	4983467	Argument	sizeof ( max )		4983247	1					
ANR	4983468	SizeofExpression	sizeof ( max )		4983247	0					
ANR	4983469	Sizeof	sizeof		4983247	0					
ANR	4983470	SizeofOperand	max		4983247	1					
ANR	4983471	Argument	true		4983247	2					
ANR	4983472	Identifier	true		4983247	0					
ANR	4983473	ExpressionStatement	"print_bytes ( & opcode , sizeof ( opcode ) , true )"	354:2:8315:8359	4983247	2	True				
ANR	4983474	CallExpression	"print_bytes ( & opcode , sizeof ( opcode ) , true )"		4983247	0					
ANR	4983475	Callee	print_bytes		4983247	0					
ANR	4983476	Identifier	print_bytes		4983247	0					
ANR	4983477	ArgumentList	& opcode		4983247	1					
ANR	4983478	Argument	& opcode		4983247	0					
ANR	4983479	UnaryOperationExpression	& opcode		4983247	0					
ANR	4983480	UnaryOperator	&		4983247	0					
ANR	4983481	Identifier	opcode		4983247	1					
ANR	4983482	Argument	sizeof ( opcode )		4983247	1					
ANR	4983483	SizeofExpression	sizeof ( opcode )		4983247	0					
ANR	4983484	Sizeof	sizeof		4983247	0					
ANR	4983485	SizeofOperand	opcode		4983247	1					
ANR	4983486	Argument	true		4983247	2					
ANR	4983487	Identifier	true		4983247	0					
ANR	4983488	IfStatement	if ( opcode <= 251 )		4983247	3					
ANR	4983489	Condition	opcode <= 251	357:6:8397:8409	4983247	0	True				
ANR	4983490	RelationalExpression	opcode <= 251		4983247	0		<=			
ANR	4983491	Identifier	opcode		4983247	0					
ANR	4983492	PrimaryExpression	251		4983247	1					
ANR	4983493	CompoundStatement		49:21:1306:1306	4983247	1					
ANR	4983494	ExpressionStatement	"print_bytes ( & USAddr , sizeof ( USAddr ) , true )"	358:3:8417:8461	4983247	0	True				
ANR	4983495	CallExpression	"print_bytes ( & USAddr , sizeof ( USAddr ) , true )"		4983247	0					
ANR	4983496	Callee	print_bytes		4983247	0					
ANR	4983497	Identifier	print_bytes		4983247	0					
ANR	4983498	ArgumentList	& USAddr		4983247	1					
ANR	4983499	Argument	& USAddr		4983247	0					
ANR	4983500	UnaryOperationExpression	& USAddr		4983247	0					
ANR	4983501	UnaryOperator	&		4983247	0					
ANR	4983502	Identifier	USAddr		4983247	1					
ANR	4983503	Argument	sizeof ( USAddr )		4983247	1					
ANR	4983504	SizeofExpression	sizeof ( USAddr )		4983247	0					
ANR	4983505	Sizeof	sizeof		4983247	0					
ANR	4983506	SizeofOperand	USAddr		4983247	1					
ANR	4983507	Argument	true		4983247	2					
ANR	4983508	Identifier	true		4983247	0					
ANR	4983509	ElseStatement	else		4983247	0					
ANR	4983510	IfStatement	if ( opcode < 255 )		4983247	0					
ANR	4983511	Condition	opcode < 255	359:13:8476:8487	4983247	0	True				
ANR	4983512	RelationalExpression	opcode < 255		4983247	0		<			
ANR	4983513	Identifier	opcode		4983247	0					
ANR	4983514	PrimaryExpression	255		4983247	1					
ANR	4983515	CompoundStatement		51:27:1384:1384	4983247	1					
ANR	4983516	ExpressionStatement	"print_bytes ( & IAddr , sizeof ( IAddr ) , true )"	360:3:8495:8537	4983247	0	True				
ANR	4983517	CallExpression	"print_bytes ( & IAddr , sizeof ( IAddr ) , true )"		4983247	0					
ANR	4983518	Callee	print_bytes		4983247	0					
ANR	4983519	Identifier	print_bytes		4983247	0					
ANR	4983520	ArgumentList	& IAddr		4983247	1					
ANR	4983521	Argument	& IAddr		4983247	0					
ANR	4983522	UnaryOperationExpression	& IAddr		4983247	0					
ANR	4983523	UnaryOperator	&		4983247	0					
ANR	4983524	Identifier	IAddr		4983247	1					
ANR	4983525	Argument	sizeof ( IAddr )		4983247	1					
ANR	4983526	SizeofExpression	sizeof ( IAddr )		4983247	0					
ANR	4983527	Sizeof	sizeof		4983247	0					
ANR	4983528	SizeofOperand	IAddr		4983247	1					
ANR	4983529	Argument	true		4983247	2					
ANR	4983530	Identifier	true		4983247	0					
ANR	4983531	ElseStatement	else		4983247	0					
ANR	4983532	CompoundStatement		53:9:1442:1442	4983247	0					
ANR	4983533	ExpressionStatement	"print_bytes ( & gdiff_start , sizeof ( gdiff_start ) , true )"	362:3:8553:8607	4983247	0	True				
ANR	4983534	CallExpression	"print_bytes ( & gdiff_start , sizeof ( gdiff_start ) , true )"		4983247	0					
ANR	4983535	Callee	print_bytes		4983247	0					
ANR	4983536	Identifier	print_bytes		4983247	0					
ANR	4983537	ArgumentList	& gdiff_start		4983247	1					
ANR	4983538	Argument	& gdiff_start		4983247	0					
ANR	4983539	UnaryOperationExpression	& gdiff_start		4983247	0					
ANR	4983540	UnaryOperator	&		4983247	0					
ANR	4983541	Identifier	gdiff_start		4983247	1					
ANR	4983542	Argument	sizeof ( gdiff_start )		4983247	1					
ANR	4983543	SizeofExpression	sizeof ( gdiff_start )		4983247	0					
ANR	4983544	Sizeof	sizeof		4983247	0					
ANR	4983545	SizeofOperand	gdiff_start		4983247	1					
ANR	4983546	Argument	true		4983247	2					
ANR	4983547	Identifier	true		4983247	0					
ANR	4983548	SwitchStatement	switch ( opcode )		4983247	4					
ANR	4983549	Condition	opcode	366:10:8651:8656	4983247	0	True				
ANR	4983550	Identifier	opcode		4983247	0					
ANR	4983551	CompoundStatement		58:18:1553:1553	4983247	1					
ANR	4983552	Label	case 249 :	367:2:8663:8671	4983247	0	True				
ANR	4983553	Label	case 252 :	368:2:8675:8683	4983247	1	True				
ANR	4983554	ExpressionStatement	"print_bytes ( & UCLen , sizeof ( UCLen ) , true )"	369:3:8688:8730	4983247	2	True				
ANR	4983555	CallExpression	"print_bytes ( & UCLen , sizeof ( UCLen ) , true )"		4983247	0					
ANR	4983556	Callee	print_bytes		4983247	0					
ANR	4983557	Identifier	print_bytes		4983247	0					
ANR	4983558	ArgumentList	& UCLen		4983247	1					
ANR	4983559	Argument	& UCLen		4983247	0					
ANR	4983560	UnaryOperationExpression	& UCLen		4983247	0					
ANR	4983561	UnaryOperator	&		4983247	0					
ANR	4983562	Identifier	UCLen		4983247	1					
ANR	4983563	Argument	sizeof ( UCLen )		4983247	1					
ANR	4983564	SizeofExpression	sizeof ( UCLen )		4983247	0					
ANR	4983565	Sizeof	sizeof		4983247	0					
ANR	4983566	SizeofOperand	UCLen		4983247	1					
ANR	4983567	Argument	true		4983247	2					
ANR	4983568	Identifier	true		4983247	0					
ANR	4983569	BreakStatement	break ;	370:3:8735:8740	4983247	3	True				
ANR	4983570	Label	case 250 :	371:2:8744:8752	4983247	4	True				
ANR	4983571	Label	case 253 :	372:2:8756:8764	4983247	5	True				
ANR	4983572	ExpressionStatement	"print_bytes ( & USLen , sizeof ( USLen ) , true )"	373:3:8769:8811	4983247	6	True				
ANR	4983573	CallExpression	"print_bytes ( & USLen , sizeof ( USLen ) , true )"		4983247	0					
ANR	4983574	Callee	print_bytes		4983247	0					
ANR	4983575	Identifier	print_bytes		4983247	0					
ANR	4983576	ArgumentList	& USLen		4983247	1					
ANR	4983577	Argument	& USLen		4983247	0					
ANR	4983578	UnaryOperationExpression	& USLen		4983247	0					
ANR	4983579	UnaryOperator	&		4983247	0					
ANR	4983580	Identifier	USLen		4983247	1					
ANR	4983581	Argument	sizeof ( USLen )		4983247	1					
ANR	4983582	SizeofExpression	sizeof ( USLen )		4983247	0					
ANR	4983583	Sizeof	sizeof		4983247	0					
ANR	4983584	SizeofOperand	USLen		4983247	1					
ANR	4983585	Argument	true		4983247	2					
ANR	4983586	Identifier	true		4983247	0					
ANR	4983587	BreakStatement	break ;	374:3:8816:8821	4983247	7	True				
ANR	4983588	Label	case 251 :	375:2:8825:8833	4983247	8	True				
ANR	4983589	Label	case 254 :	376:2:8837:8845	4983247	9	True				
ANR	4983590	Label	case 255 :	377:2:8849:8857	4983247	10	True				
ANR	4983591	ExpressionStatement	"print_bytes ( & ILen , sizeof ( ILen ) , true )"	378:3:8862:8902	4983247	11	True				
ANR	4983592	CallExpression	"print_bytes ( & ILen , sizeof ( ILen ) , true )"		4983247	0					
ANR	4983593	Callee	print_bytes		4983247	0					
ANR	4983594	Identifier	print_bytes		4983247	0					
ANR	4983595	ArgumentList	& ILen		4983247	1					
ANR	4983596	Argument	& ILen		4983247	0					
ANR	4983597	UnaryOperationExpression	& ILen		4983247	0					
ANR	4983598	UnaryOperator	&		4983247	0					
ANR	4983599	Identifier	ILen		4983247	1					
ANR	4983600	Argument	sizeof ( ILen )		4983247	1					
ANR	4983601	SizeofExpression	sizeof ( ILen )		4983247	0					
ANR	4983602	Sizeof	sizeof		4983247	0					
ANR	4983603	SizeofOperand	ILen		4983247	1					
ANR	4983604	Argument	true		4983247	2					
ANR	4983605	Identifier	true		4983247	0					
ANR	4983606	BreakStatement	break ;	379:3:8907:8912	4983247	12	True				
ANR	4983607	IfStatement	if ( op -> b_len <= 246 )		4983247	8					
ANR	4983608	Condition	op -> b_len <= 246	384:5:8946:8961	4983247	0	True				
ANR	4983609	RelationalExpression	op -> b_len <= 246		4983247	0		<=			
ANR	4983610	PtrMemberAccess	op -> b_len		4983247	0					
ANR	4983611	Identifier	op		4983247	0					
ANR	4983612	Identifier	b_len		4983247	1					
ANR	4983613	PrimaryExpression	246		4983247	1					
ANR	4983614	CompoundStatement		77:2:1862:1882	4983247	1					
ANR	4983615	IdentifierDeclStatement	ut8 data = op -> b_len ;	385:2:8968:8988	4983247	0	True				
ANR	4983616	IdentifierDecl	data = op -> b_len		4983247	0					
ANR	4983617	IdentifierDeclType	ut8		4983247	0					
ANR	4983618	Identifier	data		4983247	1					
ANR	4983619	AssignmentExpression	data = op -> b_len		4983247	2		=			
ANR	4983620	Identifier	data		4983247	0					
ANR	4983621	PtrMemberAccess	op -> b_len		4983247	1					
ANR	4983622	Identifier	op		4983247	0					
ANR	4983623	Identifier	b_len		4983247	1					
ANR	4983624	ExpressionStatement	"write ( 1 , & data , 1 )"	386:2:8992:9011	4983247	1	True				
ANR	4983625	CallExpression	"write ( 1 , & data , 1 )"		4983247	0					
ANR	4983626	Callee	write		4983247	0					
ANR	4983627	Identifier	write		4983247	0					
ANR	4983628	ArgumentList	1		4983247	1					
ANR	4983629	Argument	1		4983247	0					
ANR	4983630	PrimaryExpression	1		4983247	0					
ANR	4983631	Argument	& data		4983247	1					
ANR	4983632	UnaryOperationExpression	& data		4983247	0					
ANR	4983633	UnaryOperator	&		4983247	0					
ANR	4983634	Identifier	data		4983247	1					
ANR	4983635	Argument	1		4983247	2					
ANR	4983636	PrimaryExpression	1		4983247	0					
ANR	4983637	ElseStatement	else		4983247	0					
ANR	4983638	IfStatement	if ( op -> b_len <= USHRT_MAX )		4983247	0					
ANR	4983639	Condition	op -> b_len <= USHRT_MAX	387:12:9025:9046	4983247	0	True				
ANR	4983640	RelationalExpression	op -> b_len <= USHRT_MAX		4983247	0		<=			
ANR	4983641	PtrMemberAccess	op -> b_len		4983247	0					
ANR	4983642	Identifier	op		4983247	0					
ANR	4983643	Identifier	b_len		4983247	1					
ANR	4983644	Identifier	USHRT_MAX		4983247	1					
ANR	4983645	CompoundStatement		81:2:1975:1989	4983247	1					
ANR	4983646	ExpressionStatement	USLen = ( ut16 ) op -> b_len	388:2:9053:9077	4983247	0	True				
ANR	4983647	AssignmentExpression	USLen = ( ut16 ) op -> b_len		4983247	0		=			
ANR	4983648	Identifier	USLen		4983247	0					
ANR	4983649	CastExpression	( ut16 ) op -> b_len		4983247	1					
ANR	4983650	CastTarget	ut16		4983247	0					
ANR	4983651	PtrMemberAccess	op -> b_len		4983247	1					
ANR	4983652	Identifier	op		4983247	0					
ANR	4983653	Identifier	b_len		4983247	1					
ANR	4983654	IdentifierDeclStatement	ut8 data = 247 ;	389:2:9081:9095	4983247	1	True				
ANR	4983655	IdentifierDecl	data = 247		4983247	0					
ANR	4983656	IdentifierDeclType	ut8		4983247	0					
ANR	4983657	Identifier	data		4983247	1					
ANR	4983658	AssignmentExpression	data = 247		4983247	2		=			
ANR	4983659	Identifier	data		4983247	0					
ANR	4983660	PrimaryExpression	247		4983247	1					
ANR	4983661	ExpressionStatement	"write ( 1 , & data , 1 )"	390:2:9099:9118	4983247	2	True				
ANR	4983662	CallExpression	"write ( 1 , & data , 1 )"		4983247	0					
ANR	4983663	Callee	write		4983247	0					
ANR	4983664	Identifier	write		4983247	0					
ANR	4983665	ArgumentList	1		4983247	1					
ANR	4983666	Argument	1		4983247	0					
ANR	4983667	PrimaryExpression	1		4983247	0					
ANR	4983668	Argument	& data		4983247	1					
ANR	4983669	UnaryOperationExpression	& data		4983247	0					
ANR	4983670	UnaryOperator	&		4983247	0					
ANR	4983671	Identifier	data		4983247	1					
ANR	4983672	Argument	1		4983247	2					
ANR	4983673	PrimaryExpression	1		4983247	0					
ANR	4983674	ExpressionStatement	"print_bytes ( & USLen , sizeof ( USLen ) , true )"	391:2:9122:9164	4983247	3	True				
ANR	4983675	CallExpression	"print_bytes ( & USLen , sizeof ( USLen ) , true )"		4983247	0					
ANR	4983676	Callee	print_bytes		4983247	0					
ANR	4983677	Identifier	print_bytes		4983247	0					
ANR	4983678	ArgumentList	& USLen		4983247	1					
ANR	4983679	Argument	& USLen		4983247	0					
ANR	4983680	UnaryOperationExpression	& USLen		4983247	0					
ANR	4983681	UnaryOperator	&		4983247	0					
ANR	4983682	Identifier	USLen		4983247	1					
ANR	4983683	Argument	sizeof ( USLen )		4983247	1					
ANR	4983684	SizeofExpression	sizeof ( USLen )		4983247	0					
ANR	4983685	Sizeof	sizeof		4983247	0					
ANR	4983686	SizeofOperand	USLen		4983247	1					
ANR	4983687	Argument	true		4983247	2					
ANR	4983688	Identifier	true		4983247	0					
ANR	4983689	ElseStatement	else		4983247	0					
ANR	4983690	IfStatement	if ( op -> b_len <= INT_MAX )		4983247	0					
ANR	4983691	Condition	op -> b_len <= INT_MAX	392:12:9178:9197	4983247	0	True				
ANR	4983692	RelationalExpression	op -> b_len <= INT_MAX		4983247	0		<=			
ANR	4983693	PtrMemberAccess	op -> b_len		4983247	0					
ANR	4983694	Identifier	op		4983247	0					
ANR	4983695	Identifier	b_len		4983247	1					
ANR	4983696	Identifier	INT_MAX		4983247	1					
ANR	4983697	CompoundStatement		85:2:2098:2112	4983247	1					
ANR	4983698	IdentifierDeclStatement	ut8 data = 248 ;	393:2:9204:9218	4983247	0	True				
ANR	4983699	IdentifierDecl	data = 248		4983247	0					
ANR	4983700	IdentifierDeclType	ut8		4983247	0					
ANR	4983701	Identifier	data		4983247	1					
ANR	4983702	AssignmentExpression	data = 248		4983247	2		=			
ANR	4983703	Identifier	data		4983247	0					
ANR	4983704	PrimaryExpression	248		4983247	1					
ANR	4983705	ExpressionStatement	"write ( 1 , & data , 1 )"	394:2:9222:9241	4983247	1	True				
ANR	4983706	CallExpression	"write ( 1 , & data , 1 )"		4983247	0					
ANR	4983707	Callee	write		4983247	0					
ANR	4983708	Identifier	write		4983247	0					
ANR	4983709	ArgumentList	1		4983247	1					
ANR	4983710	Argument	1		4983247	0					
ANR	4983711	PrimaryExpression	1		4983247	0					
ANR	4983712	Argument	& data		4983247	1					
ANR	4983713	UnaryOperationExpression	& data		4983247	0					
ANR	4983714	UnaryOperator	&		4983247	0					
ANR	4983715	Identifier	data		4983247	1					
ANR	4983716	Argument	1		4983247	2					
ANR	4983717	PrimaryExpression	1		4983247	0					
ANR	4983718	ExpressionStatement	ILen = ( int ) op -> b_len	395:2:9245:9267	4983247	2	True				
ANR	4983719	AssignmentExpression	ILen = ( int ) op -> b_len		4983247	0		=			
ANR	4983720	Identifier	ILen		4983247	0					
ANR	4983721	CastExpression	( int ) op -> b_len		4983247	1					
ANR	4983722	CastTarget	int		4983247	0					
ANR	4983723	PtrMemberAccess	op -> b_len		4983247	1					
ANR	4983724	Identifier	op		4983247	0					
ANR	4983725	Identifier	b_len		4983247	1					
ANR	4983726	ExpressionStatement	"print_bytes ( & ILen , sizeof ( ILen ) , true )"	396:2:9271:9311	4983247	3	True				
ANR	4983727	CallExpression	"print_bytes ( & ILen , sizeof ( ILen ) , true )"		4983247	0					
ANR	4983728	Callee	print_bytes		4983247	0					
ANR	4983729	Identifier	print_bytes		4983247	0					
ANR	4983730	ArgumentList	& ILen		4983247	1					
ANR	4983731	Argument	& ILen		4983247	0					
ANR	4983732	UnaryOperationExpression	& ILen		4983247	0					
ANR	4983733	UnaryOperator	&		4983247	0					
ANR	4983734	Identifier	ILen		4983247	1					
ANR	4983735	Argument	sizeof ( ILen )		4983247	1					
ANR	4983736	SizeofExpression	sizeof ( ILen )		4983247	0					
ANR	4983737	Sizeof	sizeof		4983247	0					
ANR	4983738	SizeofOperand	ILen		4983247	1					
ANR	4983739	Argument	true		4983247	2					
ANR	4983740	Identifier	true		4983247	0					
ANR	4983741	ElseStatement	else		4983247	0					
ANR	4983742	CompoundStatement		104:2:2603:2630	4983247	0					
ANR	4983743	IdentifierDeclStatement	int times = op -> b_len / INT_MAX ;	399:2:9398:9429	4983247	0	True				
ANR	4983744	IdentifierDecl	times = op -> b_len / INT_MAX		4983247	0					
ANR	4983745	IdentifierDeclType	int		4983247	0					
ANR	4983746	Identifier	times		4983247	1					
ANR	4983747	AssignmentExpression	times = op -> b_len / INT_MAX		4983247	2		=			
ANR	4983748	Identifier	times		4983247	0					
ANR	4983749	MultiplicativeExpression	op -> b_len / INT_MAX		4983247	1		/			
ANR	4983750	PtrMemberAccess	op -> b_len		4983247	0					
ANR	4983751	Identifier	op		4983247	0					
ANR	4983752	Identifier	b_len		4983247	1					
ANR	4983753	Identifier	INT_MAX		4983247	1					
ANR	4983754	IdentifierDeclStatement	int max = INT_MAX ;	400:2:9433:9450	4983247	1	True				
ANR	4983755	IdentifierDecl	max = INT_MAX		4983247	0					
ANR	4983756	IdentifierDeclType	int		4983247	0					
ANR	4983757	Identifier	max		4983247	1					
ANR	4983758	AssignmentExpression	max = INT_MAX		4983247	2		=			
ANR	4983759	Identifier	INT_MAX		4983247	0					
ANR	4983760	Identifier	INT_MAX		4983247	1					
ANR	4983761	IdentifierDeclStatement	size_t i ;	401:2:9454:9462	4983247	2	True				
ANR	4983762	IdentifierDecl	i		4983247	0					
ANR	4983763	IdentifierDeclType	size_t		4983247	0					
ANR	4983764	Identifier	i		4983247	1					
ANR	4983765	ForStatement	for ( i = 0 ; i < times ; i ++ )		4983247	3					
ANR	4983766	ForInit	i = 0 ;	402:6:9470:9475	4983247	0	True				
ANR	4983767	AssignmentExpression	i = 0		4983247	0		=			
ANR	4983768	Identifier	i		4983247	0					
ANR	4983769	PrimaryExpression	0		4983247	1					
ANR	4983770	Condition	i < times	402:12:9476:9484	4983247	1	True				
ANR	4983771	RelationalExpression	i < times		4983247	0		<			
ANR	4983772	Identifier	i		4983247	0					
ANR	4983773	Identifier	times		4983247	1					
ANR	4983774	PostIncDecOperationExpression	i ++	402:23:9487:9489	4983247	2	True				
ANR	4983775	Identifier	i		4983247	0					
ANR	4983776	IncDec	++		4983247	1					
ANR	4983777	CompoundStatement		95:3:2391:2405	4983247	3					
ANR	4983778	IdentifierDeclStatement	ut8 data = 248 ;	403:3:9497:9511	4983247	0	True				
ANR	4983779	IdentifierDecl	data = 248		4983247	0					
ANR	4983780	IdentifierDeclType	ut8		4983247	0					
ANR	4983781	Identifier	data		4983247	1					
ANR	4983782	AssignmentExpression	data = 248		4983247	2		=			
ANR	4983783	Identifier	data		4983247	0					
ANR	4983784	PrimaryExpression	248		4983247	1					
ANR	4983785	ExpressionStatement	"write ( 1 , & data , 1 )"	404:3:9516:9535	4983247	1	True				
ANR	4983786	CallExpression	"write ( 1 , & data , 1 )"		4983247	0					
ANR	4983787	Callee	write		4983247	0					
ANR	4983788	Identifier	write		4983247	0					
ANR	4983789	ArgumentList	1		4983247	1					
ANR	4983790	Argument	1		4983247	0					
ANR	4983791	PrimaryExpression	1		4983247	0					
ANR	4983792	Argument	& data		4983247	1					
ANR	4983793	UnaryOperationExpression	& data		4983247	0					
ANR	4983794	UnaryOperator	&		4983247	0					
ANR	4983795	Identifier	data		4983247	1					
ANR	4983796	Argument	1		4983247	2					
ANR	4983797	PrimaryExpression	1		4983247	0					
ANR	4983798	ExpressionStatement	"print_bytes ( & max , sizeof ( max ) , true )"	405:3:9540:9578	4983247	2	True				
ANR	4983799	CallExpression	"print_bytes ( & max , sizeof ( max ) , true )"		4983247	0					
ANR	4983800	Callee	print_bytes		4983247	0					
ANR	4983801	Identifier	print_bytes		4983247	0					
ANR	4983802	ArgumentList	& max		4983247	1					
ANR	4983803	Argument	& max		4983247	0					
ANR	4983804	UnaryOperationExpression	& max		4983247	0					
ANR	4983805	UnaryOperator	&		4983247	0					
ANR	4983806	Identifier	max		4983247	1					
ANR	4983807	Argument	sizeof ( max )		4983247	1					
ANR	4983808	SizeofExpression	sizeof ( max )		4983247	0					
ANR	4983809	Sizeof	sizeof		4983247	0					
ANR	4983810	SizeofOperand	max		4983247	1					
ANR	4983811	Argument	true		4983247	2					
ANR	4983812	Identifier	true		4983247	0					
ANR	4983813	ExpressionStatement	"print_bytes ( op -> b_buf , max , false )"	406:3:9583:9618	4983247	3	True				
ANR	4983814	CallExpression	"print_bytes ( op -> b_buf , max , false )"		4983247	0					
ANR	4983815	Callee	print_bytes		4983247	0					
ANR	4983816	Identifier	print_bytes		4983247	0					
ANR	4983817	ArgumentList	op -> b_buf		4983247	1					
ANR	4983818	Argument	op -> b_buf		4983247	0					
ANR	4983819	PtrMemberAccess	op -> b_buf		4983247	0					
ANR	4983820	Identifier	op		4983247	0					
ANR	4983821	Identifier	b_buf		4983247	1					
ANR	4983822	Argument	max		4983247	1					
ANR	4983823	Identifier	max		4983247	0					
ANR	4983824	Argument	false		4983247	2					
ANR	4983825	Identifier	false		4983247	0					
ANR	4983826	ExpressionStatement	op -> b_buf += max	407:3:9623:9639	4983247	4	True				
ANR	4983827	AssignmentExpression	op -> b_buf += max		4983247	0		+=			
ANR	4983828	PtrMemberAccess	op -> b_buf		4983247	0					
ANR	4983829	Identifier	op		4983247	0					
ANR	4983830	Identifier	b_buf		4983247	1					
ANR	4983831	Identifier	max		4983247	1					
ANR	4983832	ExpressionStatement	op -> b_len = op -> b_len % max	409:2:9647:9674	4983247	4	True				
ANR	4983833	AssignmentExpression	op -> b_len = op -> b_len % max		4983247	0		=			
ANR	4983834	PtrMemberAccess	op -> b_len		4983247	0					
ANR	4983835	Identifier	op		4983247	0					
ANR	4983836	Identifier	b_len		4983247	1					
ANR	4983837	MultiplicativeExpression	op -> b_len % max		4983247	1		%			
ANR	4983838	PtrMemberAccess	op -> b_len		4983247	0					
ANR	4983839	Identifier	op		4983247	0					
ANR	4983840	Identifier	b_len		4983247	1					
ANR	4983841	Identifier	max		4983247	1					
ANR	4983842	IdentifierDeclStatement	int remain_size = op -> b_len ;	412:2:9709:9736	4983247	5	True				
ANR	4983843	IdentifierDecl	remain_size = op -> b_len		4983247	0					
ANR	4983844	IdentifierDeclType	int		4983247	0					
ANR	4983845	Identifier	remain_size		4983247	1					
ANR	4983846	AssignmentExpression	remain_size = op -> b_len		4983247	2		=			
ANR	4983847	Identifier	remain_size		4983247	0					
ANR	4983848	PtrMemberAccess	op -> b_len		4983247	1					
ANR	4983849	Identifier	op		4983247	0					
ANR	4983850	Identifier	b_len		4983247	1					
ANR	4983851	ExpressionStatement	"print_bytes ( & remain_size , sizeof ( remain_size ) , true )"	413:2:9740:9792	4983247	6	True				
ANR	4983852	CallExpression	"print_bytes ( & remain_size , sizeof ( remain_size ) , true )"		4983247	0					
ANR	4983853	Callee	print_bytes		4983247	0					
ANR	4983854	Identifier	print_bytes		4983247	0					
ANR	4983855	ArgumentList	& remain_size		4983247	1					
ANR	4983856	Argument	& remain_size		4983247	0					
ANR	4983857	UnaryOperationExpression	& remain_size		4983247	0					
ANR	4983858	UnaryOperator	&		4983247	0					
ANR	4983859	Identifier	remain_size		4983247	1					
ANR	4983860	Argument	sizeof ( remain_size )		4983247	1					
ANR	4983861	SizeofExpression	sizeof ( remain_size )		4983247	0					
ANR	4983862	Sizeof	sizeof		4983247	0					
ANR	4983863	SizeofOperand	remain_size		4983247	1					
ANR	4983864	Argument	true		4983247	2					
ANR	4983865	Identifier	true		4983247	0					
ANR	4983866	ExpressionStatement	"print_bytes ( op -> b_buf , op -> b_len , false )"	415:1:9798:9838	4983247	9	True				
ANR	4983867	CallExpression	"print_bytes ( op -> b_buf , op -> b_len , false )"		4983247	0					
ANR	4983868	Callee	print_bytes		4983247	0					
ANR	4983869	Identifier	print_bytes		4983247	0					
ANR	4983870	ArgumentList	op -> b_buf		4983247	1					
ANR	4983871	Argument	op -> b_buf		4983247	0					
ANR	4983872	PtrMemberAccess	op -> b_buf		4983247	0					
ANR	4983873	Identifier	op		4983247	0					
ANR	4983874	Identifier	b_buf		4983247	1					
ANR	4983875	Argument	op -> b_len		4983247	1					
ANR	4983876	PtrMemberAccess	op -> b_len		4983247	0					
ANR	4983877	Identifier	op		4983247	0					
ANR	4983878	Identifier	b_len		4983247	1					
ANR	4983879	Argument	false		4983247	2					
ANR	4983880	Identifier	false		4983247	0					
ANR	4983881	ExpressionStatement	gdiff_start = op -> b_off + op -> b_len	416:1:9841:9876	4983247	10	True				
ANR	4983882	AssignmentExpression	gdiff_start = op -> b_off + op -> b_len		4983247	0		=			
ANR	4983883	Identifier	gdiff_start		4983247	0					
ANR	4983884	AdditiveExpression	op -> b_off + op -> b_len		4983247	1		+			
ANR	4983885	PtrMemberAccess	op -> b_off		4983247	0					
ANR	4983886	Identifier	op		4983247	0					
ANR	4983887	Identifier	b_off		4983247	1					
ANR	4983888	PtrMemberAccess	op -> b_len		4983247	1					
ANR	4983889	Identifier	op		4983247	0					
ANR	4983890	Identifier	b_len		4983247	1					
ANR	4983891	ReturnStatement	return 0 ;	417:1:9879:9887	4983247	11	True				
ANR	4983892	PrimaryExpression	0		4983247	0					
ANR	4983893	ReturnType	static int		4983247	1					
ANR	4983894	Identifier	bcb		4983247	2					
ANR	4983895	ParameterList	"RDiff * d , void * user , RDiffOp * op"		4983247	3					
ANR	4983896	Parameter	RDiff * d	309:15:7070:7077	4983247	0	True				
ANR	4983897	ParameterType	RDiff *		4983247	0					
ANR	4983898	Identifier	d		4983247	1					
ANR	4983899	Parameter	void * user	309:25:7080:7089	4983247	1	True				
ANR	4983900	ParameterType	void *		4983247	0					
ANR	4983901	Identifier	user		4983247	1					
ANR	4983902	Parameter	RDiffOp * op	309:37:7092:7102	4983247	2	True				
ANR	4983903	ParameterType	RDiffOp *		4983247	0					
ANR	4983904	Identifier	op		4983247	1					
ANR	4983905	CFGEntryNode	ENTRY		4983247		True				
ANR	4983906	CFGExitNode	EXIT		4983247		True				
ANR	4983907	Symbol	& USLen		4983247						
ANR	4983908	Symbol	USLen		4983247						
ANR	4983909	Symbol	* op		4983247						
ANR	4983910	Symbol	data		4983247						
ANR	4983911	Symbol	USHRT_MAX		4983247						
ANR	4983912	Symbol	& IAddr		4983247						
ANR	4983913	Symbol	opcode		4983247						
ANR	4983914	Symbol	& max		4983247						
ANR	4983915	Symbol	op -> a_off		4983247						
ANR	4983916	Symbol	times		4983247						
ANR	4983917	Symbol	& gdiff_start		4983247						
ANR	4983918	Symbol	USAddr		4983247						
ANR	4983919	Symbol	INT_MAX		4983247						
ANR	4983920	Symbol	& USAddr		4983247						
ANR	4983921	Symbol	op -> b_buf		4983247						
ANR	4983922	Symbol	op -> b_off		4983247						
ANR	4983923	Symbol	op		4983247						
ANR	4983924	Symbol	d		4983247						
ANR	4983925	Symbol	max		4983247						
ANR	4983926	Symbol	false		4983247						
ANR	4983927	Symbol	i		4983247						
ANR	4983928	Symbol	UCLen		4983247						
ANR	4983929	Symbol	ILen		4983247						
ANR	4983930	Symbol	& data		4983247						
ANR	4983931	Symbol	remain_size		4983247						
ANR	4983932	Symbol	gdiff_start		4983247						
ANR	4983933	Symbol	UCHAR_MAX		4983247						
ANR	4983934	Symbol	op -> b_len		4983247						
ANR	4983935	Symbol	offset_diff		4983247						
ANR	4983936	Symbol	true		4983247						
ANR	4983937	Symbol	& UCLen		4983247						
ANR	4983938	Symbol	& remain_size		4983247						
ANR	4983939	Symbol	IAddr		4983247						
ANR	4983940	Symbol	& ILen		4983247						
ANR	4983941	Symbol	user		4983247						
ANR	4983942	Symbol	& opcode		4983247						
ANR	4983943	Function	show_help	420:0:9892:12389							
ANR	4983944	FunctionDef	show_help (int v)		4983943	0					
ANR	4983945	CompoundStatement		420:28:9920:12389	4983943	0					
ANR	4983946	ExpressionStatement	"printf ( ""Usage: radiff2 [-abBcCdjrspOxuUvV] [-A[A]] [-g sym] [-m graph_mode][-t %%] [file] [file]\\n"" )"	421:1:9923:10024	4983943	0	True				
ANR	4983947	CallExpression	"printf ( ""Usage: radiff2 [-abBcCdjrspOxuUvV] [-A[A]] [-g sym] [-m graph_mode][-t %%] [file] [file]\\n"" )"		4983943	0					
ANR	4983948	Callee	printf		4983943	0					
ANR	4983949	Identifier	printf		4983943	0					
ANR	4983950	ArgumentList	"""Usage: radiff2 [-abBcCdjrspOxuUvV] [-A[A]] [-g sym] [-m graph_mode][-t %%] [file] [file]\\n"""		4983943	1					
ANR	4983951	Argument	"""Usage: radiff2 [-abBcCdjrspOxuUvV] [-A[A]] [-g sym] [-m graph_mode][-t %%] [file] [file]\\n"""		4983943	0					
ANR	4983952	PrimaryExpression	"""Usage: radiff2 [-abBcCdjrspOxuUvV] [-A[A]] [-g sym] [-m graph_mode][-t %%] [file] [file]\\n"""		4983943	0					
ANR	4983953	IfStatement	if ( v )		4983943	1					
ANR	4983954	Condition	v	422:5:10031:10031	4983943	0	True				
ANR	4983955	Identifier	v		4983943	0					
ANR	4983956	CompoundStatement		3:8:113:113	4983943	1					
ANR	4983957	Statement	printf	423:2:10038:10043	4983943	0	True				
ANR	4983958	Statement	(	423:9:10045:10045	4983943	1	True				
ANR	4983959	Statement	"""  -a [arch]  specify architecture plugin to use (x86, arm, ..)\\n"""	424:3:10050:10115	4983943	2	True				
ANR	4983960	Statement	"""  -A [-A]    run aaa or aaaa after loading each binary (see -C)\\n"""	425:3:10120:10186	4983943	3	True				
ANR	4983961	Statement	"""  -b [bits]  specify register size for arch (16 (thumb), 32, 64, ..)\\n"""	426:3:10191:10262	4983943	4	True				
ANR	4983962	Statement	"""  -B         output in binary diff (GDIFF)\\n"""	427:3:10267:10312	4983943	5	True				
ANR	4983963	Statement	"""  -c         count of changes\\n"""	428:3:10317:10349	4983943	6	True				
ANR	4983964	Statement	"""  -C         graphdiff code (columns: off-A, match-ratio, off-B) (see -A)\\n"""	429:3:10354:10430	4983943	7	True				
ANR	4983965	Statement	"""  -d         use delta diffing\\n"""	430:3:10435:10468	4983943	8	True				
ANR	4983966	Statement	"""  -D         show disasm instead of hexpairs\\n"""	431:3:10473:10520	4983943	9	True				
ANR	4983967	Statement	"""  -e [k=v]   set eval config var value for all RCore instances\\n"""	432:3:10525:10590	4983943	10	True				
ANR	4983968	Statement	"""  -g [sym|off1,off2]   graph diff of given symbol, or between two offsets\\n"""	433:3:10595:10671	4983943	11	True				
ANR	4983969	Statement	"""  -G [cmd]   run an r2 command on every RCore instance created\\n"""	434:3:10676:10741	4983943	12	True				
ANR	4983970	Statement	"""  -i         diff imports of target files (see -u, -U and -z)\\n"""	435:3:10746:10810	4983943	13	True				
ANR	4983971	Statement	"""  -j         output in json format\\n"""	436:3:10815:10852	4983943	14	True				
ANR	4983972	Statement	"""  -n         print bare addresses only (diff.bare=1)\\n"""	437:3:10857:10912	4983943	15	True				
ANR	4983973	Statement	"""  -m [aditsjJ]  choose the graph output mode\\n"""	438:24:10938:10985	4983943	16	True				
ANR	4983974	Statement	"""  -O         code diffing with opcode bytes only\\n"""	439:3:10990:11041	4983943	17	True				
ANR	4983975	Statement	"""  -p         use physical addressing (io.va=0)\\n"""	440:3:11046:11095	4983943	18	True				
ANR	4983976	Statement	"""  -q         quiet mode (disable colors, reduce output)\\n"""	441:3:11100:11158	4983943	19	True				
ANR	4983977	Statement	"""  -r         output in radare commands\\n"""	442:3:11163:11204	4983943	20	True				
ANR	4983978	Statement	"""  -s         compute edit distance (no substitution, Eugene W. Myers' O(ND) diff algorithm)\\n"""	443:3:11209:11303	4983943	21	True				
ANR	4983979	Statement	"""  -ss        compute Levenshtein edit distance (substitution is allowed, O(N^2))\\n"""	444:3:11308:11391	4983943	22	True				
ANR	4983980	Statement	"""  -S [name]  sort code diff (name, namelen, addr, size, type, dist) (only for -C or -g)\\n"""	445:3:11396:11486	4983943	23	True				
ANR	4983981	Statement	"""  -t [0-100] set threshold for code diff (default is 70%%)\\n"""	446:3:11491:11552	4983943	24	True				
ANR	4983982	Statement	"""  -x         show two column hexdump diffing\\n"""	447:3:11557:11604	4983943	25	True				
ANR	4983983	Statement	"""  -u         unified output (---+++)\\n"""	448:3:11609:11648	4983943	26	True				
ANR	4983984	Statement	"""  -U         unified output using system 'diff'\\n"""	449:3:11653:11703	4983943	27	True				
ANR	4983985	Statement	"""  -v         show version information\\n"""	450:3:11708:11748	4983943	28	True				
ANR	4983986	Statement	"""  -V         be verbose (current only for -s)\\n"""	451:3:11753:11801	4983943	29	True				
ANR	4983987	Statement	"""  -z         diff on extracted strings\\n"""	452:3:11806:11847	4983943	30	True				
ANR	4983988	Statement	"""  -Z         diff code comparing zignatures\\n\\n"""	453:3:11852:11900	4983943	31	True				
ANR	4983989	Statement	"""Graph Output formats: (-m [mode])\\n"""	454:23:11925:11961	4983943	32	True				
ANR	4983990	Statement	"""  <blank/a>  Ascii art\\n"""	455:10:11973:11998	4983943	33	True				
ANR	4983991	Statement	"""  s          r2 commands\\n"""	456:17:12017:12044	4983943	34	True				
ANR	4983992	Statement	"""  d          Graphviz dot\\n"""	457:10:12056:12084	4983943	35	True				
ANR	4983993	Statement	"""  g          Graph Modelling Language (gml)\\n"""	458:17:12103:12149	4983943	36	True				
ANR	4983994	Statement	"""  j          json\\n"""	459:10:12161:12181	4983943	37	True				
ANR	4983995	Statement	"""  J          json with disarm\\n"""	460:17:12200:12232	4983943	38	True				
ANR	4983996	Statement	"""  k          SDB key-value\\n"""	461:10:12244:12273	4983943	39	True				
ANR	4983997	Statement	"""  t          Tiny ascii art\\n"""	462:17:12292:12322	4983943	40	True				
ANR	4983998	Statement	"""  i          Interactive ascii art\\n"""	463:10:12334:12371	4983943	41	True				
ANR	4983999	Statement	)	463:48:12372:12372	4983943	42	True				
ANR	4984000	ExpressionStatement		463:49:12373:12373	4983943	43	True				
ANR	4984001	ReturnStatement	return 1 ;	465:1:12379:12387	4983943	2	True				
ANR	4984002	PrimaryExpression	1		4983943	0					
ANR	4984003	ReturnType	static int		4983943	1					
ANR	4984004	Identifier	show_help		4983943	2					
ANR	4984005	ParameterList	int v		4983943	3					
ANR	4984006	Parameter	int v	420:21:9913:9917	4983943	0	True				
ANR	4984007	ParameterType	int		4983943	0					
ANR	4984008	Identifier	v		4983943	1					
ANR	4984009	CFGEntryNode	ENTRY		4983943		True				
ANR	4984010	CFGExitNode	EXIT		4983943		True				
ANR	4984011	Symbol	v		4983943						
ANR	4984012	Function	dump_cols	469:0:12415:14837							
ANR	4984013	FunctionDef	"dump_cols (ut8 * a , int as , ut8 * b , int bs , int w)"		4984012	0					
ANR	4984014	CompoundStatement		469:61:12476:14837	4984012	0					
ANR	4984015	IdentifierDeclStatement	"ut32 sz = R_MIN ( as , bs ) ;"	470:1:12479:12503	4984012	0	True				
ANR	4984016	IdentifierDecl	"sz = R_MIN ( as , bs )"		4984012	0					
ANR	4984017	IdentifierDeclType	ut32		4984012	0					
ANR	4984018	Identifier	sz		4984012	1					
ANR	4984019	AssignmentExpression	"sz = R_MIN ( as , bs )"		4984012	2		=			
ANR	4984020	Identifier	sz		4984012	0					
ANR	4984021	CallExpression	"R_MIN ( as , bs )"		4984012	1					
ANR	4984022	Callee	R_MIN		4984012	0					
ANR	4984023	Identifier	R_MIN		4984012	0					
ANR	4984024	ArgumentList	as		4984012	1					
ANR	4984025	Argument	as		4984012	0					
ANR	4984026	Identifier	as		4984012	0					
ANR	4984027	Argument	bs		4984012	1					
ANR	4984028	Identifier	bs		4984012	0					
ANR	4984029	IdentifierDeclStatement	"ut32 i , j ;"	471:1:12506:12515	4984012	1	True				
ANR	4984030	IdentifierDecl	i		4984012	0					
ANR	4984031	IdentifierDeclType	ut32		4984012	0					
ANR	4984032	Identifier	i		4984012	1					
ANR	4984033	IdentifierDecl	j		4984012	1					
ANR	4984034	IdentifierDeclType	ut32		4984012	0					
ANR	4984035	Identifier	j		4984012	1					
ANR	4984036	IdentifierDeclStatement	int ctx = DUMP_CONTEXT ;	472:1:12518:12540	4984012	2	True				
ANR	4984037	IdentifierDecl	ctx = DUMP_CONTEXT		4984012	0					
ANR	4984038	IdentifierDeclType	int		4984012	0					
ANR	4984039	Identifier	ctx		4984012	1					
ANR	4984040	AssignmentExpression	ctx = DUMP_CONTEXT		4984012	2		=			
ANR	4984041	Identifier	DUMP_CONTEXT		4984012	0					
ANR	4984042	Identifier	DUMP_CONTEXT		4984012	1					
ANR	4984043	IdentifierDeclStatement	int pad = 0 ;	473:1:12543:12554	4984012	3	True				
ANR	4984044	IdentifierDecl	pad = 0		4984012	0					
ANR	4984045	IdentifierDeclType	int		4984012	0					
ANR	4984046	Identifier	pad		4984012	1					
ANR	4984047	AssignmentExpression	pad = 0		4984012	2		=			
ANR	4984048	Identifier	pad		4984012	0					
ANR	4984049	PrimaryExpression	0		4984012	1					
ANR	4984050	IfStatement	if ( ! a || ! b || as < 0 || bs < 0 )		4984012	4					
ANR	4984051	Condition	! a || ! b || as < 0 || bs < 0	474:5:12561:12588	4984012	0	True				
ANR	4984052	OrExpression	! a || ! b || as < 0 || bs < 0		4984012	0		||			
ANR	4984053	UnaryOperationExpression	! a		4984012	0					
ANR	4984054	UnaryOperator	!		4984012	0					
ANR	4984055	Identifier	a		4984012	1					
ANR	4984056	OrExpression	! b || as < 0 || bs < 0		4984012	1		||			
ANR	4984057	UnaryOperationExpression	! b		4984012	0					
ANR	4984058	UnaryOperator	!		4984012	0					
ANR	4984059	Identifier	b		4984012	1					
ANR	4984060	OrExpression	as < 0 || bs < 0		4984012	1		||			
ANR	4984061	RelationalExpression	as < 0		4984012	0		<			
ANR	4984062	Identifier	as		4984012	0					
ANR	4984063	PrimaryExpression	0		4984012	1					
ANR	4984064	RelationalExpression	bs < 0		4984012	1		<			
ANR	4984065	Identifier	bs		4984012	0					
ANR	4984066	PrimaryExpression	0		4984012	1					
ANR	4984067	CompoundStatement		6:35:114:114	4984012	1					
ANR	4984068	ReturnStatement	return ;	475:2:12595:12601	4984012	0	True				
ANR	4984069	SwitchStatement	switch ( w )		4984012	5					
ANR	4984070	Condition	w	477:9:12615:12615	4984012	0	True				
ANR	4984071	Identifier	w		4984012	0					
ANR	4984072	CompoundStatement		9:12:141:141	4984012	1					
ANR	4984073	Label	case 8 :	478:1:12621:12627	4984012	0	True				
ANR	4984074	ExpressionStatement	"r_cons_printf ( ""  offset     0 1 2 3 4 5 6 7 01234567    0 1 2 3 4 5 6 7 01234567\\n"" )"	479:2:12631:12716	4984012	1	True				
ANR	4984075	CallExpression	"r_cons_printf ( ""  offset     0 1 2 3 4 5 6 7 01234567    0 1 2 3 4 5 6 7 01234567\\n"" )"		4984012	0					
ANR	4984076	Callee	r_cons_printf		4984012	0					
ANR	4984077	Identifier	r_cons_printf		4984012	0					
ANR	4984078	ArgumentList	"""  offset     0 1 2 3 4 5 6 7 01234567    0 1 2 3 4 5 6 7 01234567\\n"""		4984012	1					
ANR	4984079	Argument	"""  offset     0 1 2 3 4 5 6 7 01234567    0 1 2 3 4 5 6 7 01234567\\n"""		4984012	0					
ANR	4984080	PrimaryExpression	"""  offset     0 1 2 3 4 5 6 7 01234567    0 1 2 3 4 5 6 7 01234567\\n"""		4984012	0					
ANR	4984081	BreakStatement	break ;	480:2:12720:12725	4984012	2	True				
ANR	4984082	Label	case 16 :	481:1:12728:12735	4984012	3	True				
ANR	4984083	Statement	r_cons_printf	482:2:12739:12751	4984012	4	True				
ANR	4984084	Statement	(	482:16:12753:12753	4984012	5	True				
ANR	4984085	Statement	"""  offset     """	482:17:12754:12768	4984012	6	True				
ANR	4984086	Statement	"""0 1 2 3 4 5 6 7 8 9 A B C D E F 0123456789ABCDEF    """	483:3:12773:12826	4984012	7	True				
ANR	4984087	Statement	"""0 1 2 3 4 5 6 7 8 9 A B C D E F 0123456789ABCDEF\\n"""	484:3:12831:12882	4984012	8	True				
ANR	4984088	Statement	)	484:55:12883:12883	4984012	9	True				
ANR	4984089	ExpressionStatement		484:56:12884:12884	4984012	10	True				
ANR	4984090	BreakStatement	break ;	485:2:12888:12893	4984012	11	True				
ANR	4984091	Label	default :	486:1:12896:12903	4984012	12	True				
ANR	4984092	Identifier	default		4984012	0					
ANR	4984093	ExpressionStatement	"eprintf ( ""Invalid column width\\n"" )"	487:2:12907:12941	4984012	13	True				
ANR	4984094	CallExpression	"eprintf ( ""Invalid column width\\n"" )"		4984012	0					
ANR	4984095	Callee	eprintf		4984012	0					
ANR	4984096	Identifier	eprintf		4984012	0					
ANR	4984097	ArgumentList	"""Invalid column width\\n"""		4984012	1					
ANR	4984098	Argument	"""Invalid column width\\n"""		4984012	0					
ANR	4984099	PrimaryExpression	"""Invalid column width\\n"""		4984012	0					
ANR	4984100	ReturnStatement	return ;	488:2:12945:12951	4984012	14	True				
ANR	4984101	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	490:1:12957:12987	4984012	6	True				
ANR	4984102	CallExpression	"r_cons_break_push ( NULL , NULL )"		4984012	0					
ANR	4984103	Callee	r_cons_break_push		4984012	0					
ANR	4984104	Identifier	r_cons_break_push		4984012	0					
ANR	4984105	ArgumentList	NULL		4984012	1					
ANR	4984106	Argument	NULL		4984012	0					
ANR	4984107	Identifier	NULL		4984012	0					
ANR	4984108	Argument	NULL		4984012	1					
ANR	4984109	Identifier	NULL		4984012	0					
ANR	4984110	ForStatement	for ( i = 0 ; i < sz ; i += w )		4984012	7					
ANR	4984111	ForInit	i = 0 ;	491:6:12995:13000	4984012	0	True				
ANR	4984112	AssignmentExpression	i = 0		4984012	0		=			
ANR	4984113	Identifier	i		4984012	0					
ANR	4984114	PrimaryExpression	0		4984012	1					
ANR	4984115	Condition	i < sz	491:13:13002:13007	4984012	1	True				
ANR	4984116	RelationalExpression	i < sz		4984012	0		<			
ANR	4984117	Identifier	i		4984012	0					
ANR	4984118	Identifier	sz		4984012	1					
ANR	4984119	AssignmentExpression	i += w	491:21:13010:13015	4984012	2	True	+=			
ANR	4984120	Identifier	i		4984012	0					
ANR	4984121	Identifier	w		4984012	1					
ANR	4984122	CompoundStatement		31:2:649:684	4984012	3					
ANR	4984123	IfStatement	if ( r_cons_is_breaked ( ) )		4984012	0					
ANR	4984124	Condition	r_cons_is_breaked ( )	492:6:13026:13044	4984012	0	True				
ANR	4984125	CallExpression	r_cons_is_breaked ( )		4984012	0					
ANR	4984126	Callee	r_cons_is_breaked		4984012	0					
ANR	4984127	Identifier	r_cons_is_breaked		4984012	0					
ANR	4984128	ArgumentList			4984012	1					
ANR	4984129	CompoundStatement		24:27:570:570	4984012	1					
ANR	4984130	BreakStatement	break ;	493:3:13052:13057	4984012	0	True				
ANR	4984131	IfStatement	if ( i + w >= sz )		4984012	1					
ANR	4984132	Condition	i + w >= sz	495:6:13069:13079	4984012	0	True				
ANR	4984133	RelationalExpression	i + w >= sz		4984012	0		>=			
ANR	4984134	AdditiveExpression	i + w		4984012	0		+			
ANR	4984135	Identifier	i		4984012	0					
ANR	4984136	Identifier	w		4984012	1					
ANR	4984137	Identifier	sz		4984012	1					
ANR	4984138	CompoundStatement		27:19:605:605	4984012	1					
ANR	4984139	ExpressionStatement	pad = w - sz + i	496:3:13087:13103	4984012	0	True				
ANR	4984140	AssignmentExpression	pad = w - sz + i		4984012	0		=			
ANR	4984141	Identifier	pad		4984012	0					
ANR	4984142	AdditiveExpression	w - sz + i		4984012	1		-			
ANR	4984143	Identifier	w		4984012	0					
ANR	4984144	AdditiveExpression	sz + i		4984012	1		+			
ANR	4984145	Identifier	sz		4984012	0					
ANR	4984146	Identifier	i		4984012	1					
ANR	4984147	ExpressionStatement	w = sz - i	497:3:13108:13118	4984012	1	True				
ANR	4984148	AssignmentExpression	w = sz - i		4984012	0		=			
ANR	4984149	Identifier	w		4984012	0					
ANR	4984150	AdditiveExpression	sz - i		4984012	1		-			
ANR	4984151	Identifier	sz		4984012	0					
ANR	4984152	Identifier	i		4984012	1					
ANR	4984153	IdentifierDeclStatement	"bool eq = ! memcmp ( a + i , b + i , w ) ;"	499:2:13126:13161	4984012	2	True				
ANR	4984154	IdentifierDecl	"eq = ! memcmp ( a + i , b + i , w )"		4984012	0					
ANR	4984155	IdentifierDeclType	bool		4984012	0					
ANR	4984156	Identifier	eq		4984012	1					
ANR	4984157	AssignmentExpression	"eq = ! memcmp ( a + i , b + i , w )"		4984012	2		=			
ANR	4984158	Identifier	eq		4984012	0					
ANR	4984159	UnaryOperationExpression	"! memcmp ( a + i , b + i , w )"		4984012	1					
ANR	4984160	UnaryOperator	!		4984012	0					
ANR	4984161	CallExpression	"memcmp ( a + i , b + i , w )"		4984012	1					
ANR	4984162	Callee	memcmp		4984012	0					
ANR	4984163	Identifier	memcmp		4984012	0					
ANR	4984164	ArgumentList	a + i		4984012	1					
ANR	4984165	Argument	a + i		4984012	0					
ANR	4984166	AdditiveExpression	a + i		4984012	0		+			
ANR	4984167	Identifier	a		4984012	0					
ANR	4984168	Identifier	i		4984012	1					
ANR	4984169	Argument	b + i		4984012	1					
ANR	4984170	AdditiveExpression	b + i		4984012	0		+			
ANR	4984171	Identifier	b		4984012	0					
ANR	4984172	Identifier	i		4984012	1					
ANR	4984173	Argument	w		4984012	2					
ANR	4984174	Identifier	w		4984012	0					
ANR	4984175	IfStatement	if ( eq )		4984012	3					
ANR	4984176	Condition	eq	500:6:13169:13170	4984012	0	True				
ANR	4984177	Identifier	eq		4984012	0					
ANR	4984178	CompoundStatement		32:10:696:696	4984012	1					
ANR	4984179	ExpressionStatement	ctx --	501:3:13178:13183	4984012	0	True				
ANR	4984180	PostIncDecOperationExpression	ctx --		4984012	0					
ANR	4984181	Identifier	ctx		4984012	0					
ANR	4984182	IncDec	--		4984012	1					
ANR	4984183	IfStatement	if ( ctx == - 1 )		4984012	1					
ANR	4984184	Condition	ctx == - 1	502:7:13192:13200	4984012	0	True				
ANR	4984185	EqualityExpression	ctx == - 1		4984012	0		==			
ANR	4984186	Identifier	ctx		4984012	0					
ANR	4984187	UnaryOperationExpression	- 1		4984012	1					
ANR	4984188	UnaryOperator	-		4984012	0					
ANR	4984189	PrimaryExpression	1		4984012	1					
ANR	4984190	CompoundStatement		34:18:726:726	4984012	1					
ANR	4984191	ExpressionStatement	"r_cons_printf ( ""...\\n"" )"	503:4:13209:13232	4984012	0	True				
ANR	4984192	CallExpression	"r_cons_printf ( ""...\\n"" )"		4984012	0					
ANR	4984193	Callee	r_cons_printf		4984012	0					
ANR	4984194	Identifier	r_cons_printf		4984012	0					
ANR	4984195	ArgumentList	"""...\\n"""		4984012	1					
ANR	4984196	Argument	"""...\\n"""		4984012	0					
ANR	4984197	PrimaryExpression	"""...\\n"""		4984012	0					
ANR	4984198	ContinueStatement	continue ;	504:4:13238:13246	4984012	1	True				
ANR	4984199	IfStatement	if ( ctx < 0 )		4984012	2					
ANR	4984200	Condition	ctx < 0	506:7:13260:13266	4984012	0	True				
ANR	4984201	RelationalExpression	ctx < 0		4984012	0		<			
ANR	4984202	Identifier	ctx		4984012	0					
ANR	4984203	PrimaryExpression	0		4984012	1					
ANR	4984204	CompoundStatement		38:16:792:792	4984012	1					
ANR	4984205	ExpressionStatement	ctx = - 1	507:4:13275:13283	4984012	0	True				
ANR	4984206	AssignmentExpression	ctx = - 1		4984012	0		=			
ANR	4984207	Identifier	ctx		4984012	0					
ANR	4984208	UnaryOperationExpression	- 1		4984012	1					
ANR	4984209	UnaryOperator	-		4984012	0					
ANR	4984210	PrimaryExpression	1		4984012	1					
ANR	4984211	ContinueStatement	continue ;	508:4:13289:13297	4984012	1	True				
ANR	4984212	ElseStatement	else		4984012	0					
ANR	4984213	CompoundStatement		42:9:836:836	4984012	0					
ANR	4984214	ExpressionStatement	ctx = DUMP_CONTEXT	511:3:13318:13336	4984012	0	True				
ANR	4984215	AssignmentExpression	ctx = DUMP_CONTEXT		4984012	0		=			
ANR	4984216	Identifier	ctx		4984012	0					
ANR	4984217	Identifier	DUMP_CONTEXT		4984012	1					
ANR	4984218	ExpressionStatement	r_cons_printf ( eq ? Color_GREEN : Color_RED )	513:2:13344:13386	4984012	4	True				
ANR	4984219	CallExpression	r_cons_printf ( eq ? Color_GREEN : Color_RED )		4984012	0					
ANR	4984220	Callee	r_cons_printf		4984012	0					
ANR	4984221	Identifier	r_cons_printf		4984012	0					
ANR	4984222	ArgumentList	eq ? Color_GREEN : Color_RED		4984012	1					
ANR	4984223	Argument	eq ? Color_GREEN : Color_RED		4984012	0					
ANR	4984224	ConditionalExpression	eq ? Color_GREEN : Color_RED		4984012	0					
ANR	4984225	Condition	eq		4984012	0					
ANR	4984226	Identifier	eq		4984012	0					
ANR	4984227	Identifier	Color_GREEN		4984012	1					
ANR	4984228	Identifier	Color_RED		4984012	2					
ANR	4984229	ExpressionStatement	"r_cons_printf ( ""0x%08x%c "" , i , eq ? ' ' : '!' )"	514:2:13390:13434	4984012	5	True				
ANR	4984230	CallExpression	"r_cons_printf ( ""0x%08x%c "" , i , eq ? ' ' : '!' )"		4984012	0					
ANR	4984231	Callee	r_cons_printf		4984012	0					
ANR	4984232	Identifier	r_cons_printf		4984012	0					
ANR	4984233	ArgumentList	"""0x%08x%c """		4984012	1					
ANR	4984234	Argument	"""0x%08x%c """		4984012	0					
ANR	4984235	PrimaryExpression	"""0x%08x%c """		4984012	0					
ANR	4984236	Argument	i		4984012	1					
ANR	4984237	Identifier	i		4984012	0					
ANR	4984238	Argument	eq ? ' ' : '!'		4984012	2					
ANR	4984239	ConditionalExpression	eq ? ' ' : '!'		4984012	0					
ANR	4984240	Condition	eq		4984012	0					
ANR	4984241	Identifier	eq		4984012	0					
ANR	4984242	PrimaryExpression	' '		4984012	1					
ANR	4984243	PrimaryExpression	'!'		4984012	2					
ANR	4984244	ExpressionStatement	r_cons_printf ( Color_RESET )	515:2:13438:13465	4984012	6	True				
ANR	4984245	CallExpression	r_cons_printf ( Color_RESET )		4984012	0					
ANR	4984246	Callee	r_cons_printf		4984012	0					
ANR	4984247	Identifier	r_cons_printf		4984012	0					
ANR	4984248	ArgumentList	Color_RESET		4984012	1					
ANR	4984249	Argument	Color_RESET		4984012	0					
ANR	4984250	Identifier	Color_RESET		4984012	0					
ANR	4984251	ForStatement	for ( j = 0 ; j < w ; j ++ )		4984012	7					
ANR	4984252	ForInit	j = 0 ;	516:7:13474:13479	4984012	0	True				
ANR	4984253	AssignmentExpression	j = 0		4984012	0		=			
ANR	4984254	Identifier	j		4984012	0					
ANR	4984255	PrimaryExpression	0		4984012	1					
ANR	4984256	Condition	j < w	516:14:13481:13485	4984012	1	True				
ANR	4984257	RelationalExpression	j < w		4984012	0		<			
ANR	4984258	Identifier	j		4984012	0					
ANR	4984259	Identifier	w		4984012	1					
ANR	4984260	PostIncDecOperationExpression	j ++	516:21:13488:13490	4984012	2	True				
ANR	4984261	Identifier	j		4984012	0					
ANR	4984262	IncDec	++		4984012	1					
ANR	4984263	CompoundStatement		49:3:1021:1052	4984012	3					
ANR	4984264	IdentifierDeclStatement	bool eq2 = a [ i + j ] == b [ i + j ] ;	517:3:13498:13529	4984012	0	True				
ANR	4984265	IdentifierDecl	eq2 = a [ i + j ] == b [ i + j ]		4984012	0					
ANR	4984266	IdentifierDeclType	bool		4984012	0					
ANR	4984267	Identifier	eq2		4984012	1					
ANR	4984268	AssignmentExpression	eq2 = a [ i + j ] == b [ i + j ]		4984012	2		=			
ANR	4984269	Identifier	eq2		4984012	0					
ANR	4984270	EqualityExpression	a [ i + j ] == b [ i + j ]		4984012	1		==			
ANR	4984271	ArrayIndexing	a [ i + j ]		4984012	0					
ANR	4984272	Identifier	a		4984012	0					
ANR	4984273	AdditiveExpression	i + j		4984012	1		+			
ANR	4984274	Identifier	i		4984012	0					
ANR	4984275	Identifier	j		4984012	1					
ANR	4984276	ArrayIndexing	b [ i + j ]		4984012	1					
ANR	4984277	Identifier	b		4984012	0					
ANR	4984278	AdditiveExpression	i + j		4984012	1		+			
ANR	4984279	Identifier	i		4984012	0					
ANR	4984280	Identifier	j		4984012	1					
ANR	4984281	IfStatement	if ( ! eq )		4984012	1					
ANR	4984282	Condition	! eq	518:7:13538:13540	4984012	0	True				
ANR	4984283	UnaryOperationExpression	! eq		4984012	0					
ANR	4984284	UnaryOperator	!		4984012	0					
ANR	4984285	Identifier	eq		4984012	1					
ANR	4984286	CompoundStatement		50:12:1066:1066	4984012	1					
ANR	4984287	ExpressionStatement	r_cons_printf ( eq2 ? Color_GREEN : Color_RED )	519:4:13549:13592	4984012	0	True				
ANR	4984288	CallExpression	r_cons_printf ( eq2 ? Color_GREEN : Color_RED )		4984012	0					
ANR	4984289	Callee	r_cons_printf		4984012	0					
ANR	4984290	Identifier	r_cons_printf		4984012	0					
ANR	4984291	ArgumentList	eq2 ? Color_GREEN : Color_RED		4984012	1					
ANR	4984292	Argument	eq2 ? Color_GREEN : Color_RED		4984012	0					
ANR	4984293	ConditionalExpression	eq2 ? Color_GREEN : Color_RED		4984012	0					
ANR	4984294	Condition	eq2		4984012	0					
ANR	4984295	Identifier	eq2		4984012	0					
ANR	4984296	Identifier	Color_GREEN		4984012	1					
ANR	4984297	Identifier	Color_RED		4984012	2					
ANR	4984298	ExpressionStatement	"r_cons_printf ( ""%02x"" , a [ i + j ] )"	521:3:13602:13634	4984012	2	True				
ANR	4984299	CallExpression	"r_cons_printf ( ""%02x"" , a [ i + j ] )"		4984012	0					
ANR	4984300	Callee	r_cons_printf		4984012	0					
ANR	4984301	Identifier	r_cons_printf		4984012	0					
ANR	4984302	ArgumentList	"""%02x"""		4984012	1					
ANR	4984303	Argument	"""%02x"""		4984012	0					
ANR	4984304	PrimaryExpression	"""%02x"""		4984012	0					
ANR	4984305	Argument	a [ i + j ]		4984012	1					
ANR	4984306	ArrayIndexing	a [ i + j ]		4984012	0					
ANR	4984307	Identifier	a		4984012	0					
ANR	4984308	AdditiveExpression	i + j		4984012	1		+			
ANR	4984309	Identifier	i		4984012	0					
ANR	4984310	Identifier	j		4984012	1					
ANR	4984311	IfStatement	if ( ! eq )		4984012	3					
ANR	4984312	Condition	! eq	522:7:13643:13645	4984012	0	True				
ANR	4984313	UnaryOperationExpression	! eq		4984012	0					
ANR	4984314	UnaryOperator	!		4984012	0					
ANR	4984315	Identifier	eq		4984012	1					
ANR	4984316	CompoundStatement		54:12:1171:1171	4984012	1					
ANR	4984317	ExpressionStatement	r_cons_printf ( Color_RESET )	523:4:13654:13681	4984012	0	True				
ANR	4984318	CallExpression	r_cons_printf ( Color_RESET )		4984012	0					
ANR	4984319	Callee	r_cons_printf		4984012	0					
ANR	4984320	Identifier	r_cons_printf		4984012	0					
ANR	4984321	ArgumentList	Color_RESET		4984012	1					
ANR	4984322	Argument	Color_RESET		4984012	0					
ANR	4984323	Identifier	Color_RESET		4984012	0					
ANR	4984324	ForStatement	for ( j = 0 ; j < pad ; j ++ )		4984012	8					
ANR	4984325	ForInit	j = 0 ;	526:7:13699:13704	4984012	0	True				
ANR	4984326	AssignmentExpression	j = 0		4984012	0		=			
ANR	4984327	Identifier	j		4984012	0					
ANR	4984328	PrimaryExpression	0		4984012	1					
ANR	4984329	Condition	j < pad	526:14:13706:13712	4984012	1	True				
ANR	4984330	RelationalExpression	j < pad		4984012	0		<			
ANR	4984331	Identifier	j		4984012	0					
ANR	4984332	Identifier	pad		4984012	1					
ANR	4984333	PostIncDecOperationExpression	j ++	526:23:13715:13717	4984012	2	True				
ANR	4984334	Identifier	j		4984012	0					
ANR	4984335	IncDec	++		4984012	1					
ANR	4984336	CompoundStatement		58:28:1243:1243	4984012	3					
ANR	4984337	ExpressionStatement	"r_cons_printf ( ""  "" )"	527:3:13725:13745	4984012	0	True				
ANR	4984338	CallExpression	"r_cons_printf ( ""  "" )"		4984012	0					
ANR	4984339	Callee	r_cons_printf		4984012	0					
ANR	4984340	Identifier	r_cons_printf		4984012	0					
ANR	4984341	ArgumentList	"""  """		4984012	1					
ANR	4984342	Argument	"""  """		4984012	0					
ANR	4984343	PrimaryExpression	"""  """		4984012	0					
ANR	4984344	ExpressionStatement	"r_cons_printf ( "" "" )"	529:2:13753:13772	4984012	9	True				
ANR	4984345	CallExpression	"r_cons_printf ( "" "" )"		4984012	0					
ANR	4984346	Callee	r_cons_printf		4984012	0					
ANR	4984347	Identifier	r_cons_printf		4984012	0					
ANR	4984348	ArgumentList	""" """		4984012	1					
ANR	4984349	Argument	""" """		4984012	0					
ANR	4984350	PrimaryExpression	""" """		4984012	0					
ANR	4984351	ForStatement	for ( j = 0 ; j < w ; j ++ )		4984012	10					
ANR	4984352	ForInit	j = 0 ;	530:7:13781:13786	4984012	0	True				
ANR	4984353	AssignmentExpression	j = 0		4984012	0		=			
ANR	4984354	Identifier	j		4984012	0					
ANR	4984355	PrimaryExpression	0		4984012	1					
ANR	4984356	Condition	j < w	530:14:13788:13792	4984012	1	True				
ANR	4984357	RelationalExpression	j < w		4984012	0		<			
ANR	4984358	Identifier	j		4984012	0					
ANR	4984359	Identifier	w		4984012	1					
ANR	4984360	PostIncDecOperationExpression	j ++	530:21:13795:13797	4984012	2	True				
ANR	4984361	Identifier	j		4984012	0					
ANR	4984362	IncDec	++		4984012	1					
ANR	4984363	CompoundStatement		63:3:1328:1359	4984012	3					
ANR	4984364	IdentifierDeclStatement	bool eq2 = a [ i + j ] == b [ i + j ] ;	531:3:13805:13836	4984012	0	True				
ANR	4984365	IdentifierDecl	eq2 = a [ i + j ] == b [ i + j ]		4984012	0					
ANR	4984366	IdentifierDeclType	bool		4984012	0					
ANR	4984367	Identifier	eq2		4984012	1					
ANR	4984368	AssignmentExpression	eq2 = a [ i + j ] == b [ i + j ]		4984012	2		=			
ANR	4984369	Identifier	eq2		4984012	0					
ANR	4984370	EqualityExpression	a [ i + j ] == b [ i + j ]		4984012	1		==			
ANR	4984371	ArrayIndexing	a [ i + j ]		4984012	0					
ANR	4984372	Identifier	a		4984012	0					
ANR	4984373	AdditiveExpression	i + j		4984012	1		+			
ANR	4984374	Identifier	i		4984012	0					
ANR	4984375	Identifier	j		4984012	1					
ANR	4984376	ArrayIndexing	b [ i + j ]		4984012	1					
ANR	4984377	Identifier	b		4984012	0					
ANR	4984378	AdditiveExpression	i + j		4984012	1		+			
ANR	4984379	Identifier	i		4984012	0					
ANR	4984380	Identifier	j		4984012	1					
ANR	4984381	IfStatement	if ( ! eq )		4984012	1					
ANR	4984382	Condition	! eq	532:7:13845:13847	4984012	0	True				
ANR	4984383	UnaryOperationExpression	! eq		4984012	0					
ANR	4984384	UnaryOperator	!		4984012	0					
ANR	4984385	Identifier	eq		4984012	1					
ANR	4984386	CompoundStatement		64:12:1373:1373	4984012	1					
ANR	4984387	ExpressionStatement	r_cons_printf ( eq2 ? Color_GREEN : Color_RED )	533:4:13856:13899	4984012	0	True				
ANR	4984388	CallExpression	r_cons_printf ( eq2 ? Color_GREEN : Color_RED )		4984012	0					
ANR	4984389	Callee	r_cons_printf		4984012	0					
ANR	4984390	Identifier	r_cons_printf		4984012	0					
ANR	4984391	ArgumentList	eq2 ? Color_GREEN : Color_RED		4984012	1					
ANR	4984392	Argument	eq2 ? Color_GREEN : Color_RED		4984012	0					
ANR	4984393	ConditionalExpression	eq2 ? Color_GREEN : Color_RED		4984012	0					
ANR	4984394	Condition	eq2		4984012	0					
ANR	4984395	Identifier	eq2		4984012	0					
ANR	4984396	Identifier	Color_GREEN		4984012	1					
ANR	4984397	Identifier	Color_RED		4984012	2					
ANR	4984398	ExpressionStatement	"r_cons_printf ( ""%c"" , IS_PRINTABLE ( a [ i + j ] ) ? a [ i + j ] : '.' )"	535:3:13909:13969	4984012	2	True				
ANR	4984399	CallExpression	"r_cons_printf ( ""%c"" , IS_PRINTABLE ( a [ i + j ] ) ? a [ i + j ] : '.' )"		4984012	0					
ANR	4984400	Callee	r_cons_printf		4984012	0					
ANR	4984401	Identifier	r_cons_printf		4984012	0					
ANR	4984402	ArgumentList	"""%c"""		4984012	1					
ANR	4984403	Argument	"""%c"""		4984012	0					
ANR	4984404	PrimaryExpression	"""%c"""		4984012	0					
ANR	4984405	Argument	IS_PRINTABLE ( a [ i + j ] ) ? a [ i + j ] : '.'		4984012	1					
ANR	4984406	ConditionalExpression	IS_PRINTABLE ( a [ i + j ] ) ? a [ i + j ] : '.'		4984012	0					
ANR	4984407	Condition	IS_PRINTABLE ( a [ i + j ] )		4984012	0					
ANR	4984408	CallExpression	IS_PRINTABLE ( a [ i + j ] )		4984012	0					
ANR	4984409	Callee	IS_PRINTABLE		4984012	0					
ANR	4984410	Identifier	IS_PRINTABLE		4984012	0					
ANR	4984411	ArgumentList	a [ i + j ]		4984012	1					
ANR	4984412	Argument	a [ i + j ]		4984012	0					
ANR	4984413	ArrayIndexing	a [ i + j ]		4984012	0					
ANR	4984414	Identifier	a		4984012	0					
ANR	4984415	AdditiveExpression	i + j		4984012	1		+			
ANR	4984416	Identifier	i		4984012	0					
ANR	4984417	Identifier	j		4984012	1					
ANR	4984418	ArrayIndexing	a [ i + j ]		4984012	1					
ANR	4984419	Identifier	a		4984012	0					
ANR	4984420	AdditiveExpression	i + j		4984012	1		+			
ANR	4984421	Identifier	i		4984012	0					
ANR	4984422	Identifier	j		4984012	1					
ANR	4984423	PrimaryExpression	'.'		4984012	2					
ANR	4984424	IfStatement	if ( ! eq )		4984012	3					
ANR	4984425	Condition	! eq	536:7:13978:13980	4984012	0	True				
ANR	4984426	UnaryOperationExpression	! eq		4984012	0					
ANR	4984427	UnaryOperator	!		4984012	0					
ANR	4984428	Identifier	eq		4984012	1					
ANR	4984429	CompoundStatement		68:12:1506:1506	4984012	1					
ANR	4984430	ExpressionStatement	r_cons_printf ( Color_RESET )	537:4:13989:14016	4984012	0	True				
ANR	4984431	CallExpression	r_cons_printf ( Color_RESET )		4984012	0					
ANR	4984432	Callee	r_cons_printf		4984012	0					
ANR	4984433	Identifier	r_cons_printf		4984012	0					
ANR	4984434	ArgumentList	Color_RESET		4984012	1					
ANR	4984435	Argument	Color_RESET		4984012	0					
ANR	4984436	Identifier	Color_RESET		4984012	0					
ANR	4984437	ForStatement	for ( j = 0 ; j < pad ; j ++ )		4984012	11					
ANR	4984438	ForInit	j = 0 ;	540:7:14034:14039	4984012	0	True				
ANR	4984439	AssignmentExpression	j = 0		4984012	0		=			
ANR	4984440	Identifier	j		4984012	0					
ANR	4984441	PrimaryExpression	0		4984012	1					
ANR	4984442	Condition	j < pad	540:14:14041:14047	4984012	1	True				
ANR	4984443	RelationalExpression	j < pad		4984012	0		<			
ANR	4984444	Identifier	j		4984012	0					
ANR	4984445	Identifier	pad		4984012	1					
ANR	4984446	PostIncDecOperationExpression	j ++	540:23:14050:14052	4984012	2	True				
ANR	4984447	Identifier	j		4984012	0					
ANR	4984448	IncDec	++		4984012	1					
ANR	4984449	CompoundStatement		72:28:1578:1578	4984012	3					
ANR	4984450	ExpressionStatement	"r_cons_printf ( "" "" )"	541:3:14060:14079	4984012	0	True				
ANR	4984451	CallExpression	"r_cons_printf ( "" "" )"		4984012	0					
ANR	4984452	Callee	r_cons_printf		4984012	0					
ANR	4984453	Identifier	r_cons_printf		4984012	0					
ANR	4984454	ArgumentList	""" """		4984012	1					
ANR	4984455	Argument	""" """		4984012	0					
ANR	4984456	PrimaryExpression	""" """		4984012	0					
ANR	4984457	ExpressionStatement	"r_cons_printf ( ""   "" )"	543:2:14087:14108	4984012	12	True				
ANR	4984458	CallExpression	"r_cons_printf ( ""   "" )"		4984012	0					
ANR	4984459	Callee	r_cons_printf		4984012	0					
ANR	4984460	Identifier	r_cons_printf		4984012	0					
ANR	4984461	ArgumentList	"""   """		4984012	1					
ANR	4984462	Argument	"""   """		4984012	0					
ANR	4984463	PrimaryExpression	"""   """		4984012	0					
ANR	4984464	ForStatement	for ( j = 0 ; j < w ; j ++ )		4984012	13					
ANR	4984465	ForInit	j = 0 ;	544:7:14117:14122	4984012	0	True				
ANR	4984466	AssignmentExpression	j = 0		4984012	0		=			
ANR	4984467	Identifier	j		4984012	0					
ANR	4984468	PrimaryExpression	0		4984012	1					
ANR	4984469	Condition	j < w	544:14:14124:14128	4984012	1	True				
ANR	4984470	RelationalExpression	j < w		4984012	0		<			
ANR	4984471	Identifier	j		4984012	0					
ANR	4984472	Identifier	w		4984012	1					
ANR	4984473	PostIncDecOperationExpression	j ++	544:21:14131:14133	4984012	2	True				
ANR	4984474	Identifier	j		4984012	0					
ANR	4984475	IncDec	++		4984012	1					
ANR	4984476	CompoundStatement		77:3:1664:1695	4984012	3					
ANR	4984477	IdentifierDeclStatement	bool eq2 = a [ i + j ] == b [ i + j ] ;	545:3:14141:14172	4984012	0	True				
ANR	4984478	IdentifierDecl	eq2 = a [ i + j ] == b [ i + j ]		4984012	0					
ANR	4984479	IdentifierDeclType	bool		4984012	0					
ANR	4984480	Identifier	eq2		4984012	1					
ANR	4984481	AssignmentExpression	eq2 = a [ i + j ] == b [ i + j ]		4984012	2		=			
ANR	4984482	Identifier	eq2		4984012	0					
ANR	4984483	EqualityExpression	a [ i + j ] == b [ i + j ]		4984012	1		==			
ANR	4984484	ArrayIndexing	a [ i + j ]		4984012	0					
ANR	4984485	Identifier	a		4984012	0					
ANR	4984486	AdditiveExpression	i + j		4984012	1		+			
ANR	4984487	Identifier	i		4984012	0					
ANR	4984488	Identifier	j		4984012	1					
ANR	4984489	ArrayIndexing	b [ i + j ]		4984012	1					
ANR	4984490	Identifier	b		4984012	0					
ANR	4984491	AdditiveExpression	i + j		4984012	1		+			
ANR	4984492	Identifier	i		4984012	0					
ANR	4984493	Identifier	j		4984012	1					
ANR	4984494	IfStatement	if ( ! eq )		4984012	1					
ANR	4984495	Condition	! eq	546:7:14181:14183	4984012	0	True				
ANR	4984496	UnaryOperationExpression	! eq		4984012	0					
ANR	4984497	UnaryOperator	!		4984012	0					
ANR	4984498	Identifier	eq		4984012	1					
ANR	4984499	CompoundStatement		78:12:1709:1709	4984012	1					
ANR	4984500	ExpressionStatement	r_cons_printf ( eq2 ? Color_GREEN : Color_RED )	547:4:14192:14235	4984012	0	True				
ANR	4984501	CallExpression	r_cons_printf ( eq2 ? Color_GREEN : Color_RED )		4984012	0					
ANR	4984502	Callee	r_cons_printf		4984012	0					
ANR	4984503	Identifier	r_cons_printf		4984012	0					
ANR	4984504	ArgumentList	eq2 ? Color_GREEN : Color_RED		4984012	1					
ANR	4984505	Argument	eq2 ? Color_GREEN : Color_RED		4984012	0					
ANR	4984506	ConditionalExpression	eq2 ? Color_GREEN : Color_RED		4984012	0					
ANR	4984507	Condition	eq2		4984012	0					
ANR	4984508	Identifier	eq2		4984012	0					
ANR	4984509	Identifier	Color_GREEN		4984012	1					
ANR	4984510	Identifier	Color_RED		4984012	2					
ANR	4984511	ExpressionStatement	"r_cons_printf ( ""%02x"" , b [ i + j ] )"	549:3:14245:14277	4984012	2	True				
ANR	4984512	CallExpression	"r_cons_printf ( ""%02x"" , b [ i + j ] )"		4984012	0					
ANR	4984513	Callee	r_cons_printf		4984012	0					
ANR	4984514	Identifier	r_cons_printf		4984012	0					
ANR	4984515	ArgumentList	"""%02x"""		4984012	1					
ANR	4984516	Argument	"""%02x"""		4984012	0					
ANR	4984517	PrimaryExpression	"""%02x"""		4984012	0					
ANR	4984518	Argument	b [ i + j ]		4984012	1					
ANR	4984519	ArrayIndexing	b [ i + j ]		4984012	0					
ANR	4984520	Identifier	b		4984012	0					
ANR	4984521	AdditiveExpression	i + j		4984012	1		+			
ANR	4984522	Identifier	i		4984012	0					
ANR	4984523	Identifier	j		4984012	1					
ANR	4984524	IfStatement	if ( ! eq )		4984012	3					
ANR	4984525	Condition	! eq	550:7:14286:14288	4984012	0	True				
ANR	4984526	UnaryOperationExpression	! eq		4984012	0					
ANR	4984527	UnaryOperator	!		4984012	0					
ANR	4984528	Identifier	eq		4984012	1					
ANR	4984529	CompoundStatement		82:12:1814:1814	4984012	1					
ANR	4984530	ExpressionStatement	r_cons_printf ( Color_RESET )	551:4:14297:14324	4984012	0	True				
ANR	4984531	CallExpression	r_cons_printf ( Color_RESET )		4984012	0					
ANR	4984532	Callee	r_cons_printf		4984012	0					
ANR	4984533	Identifier	r_cons_printf		4984012	0					
ANR	4984534	ArgumentList	Color_RESET		4984012	1					
ANR	4984535	Argument	Color_RESET		4984012	0					
ANR	4984536	Identifier	Color_RESET		4984012	0					
ANR	4984537	ForStatement	for ( j = 0 ; j < pad ; j ++ )		4984012	14					
ANR	4984538	ForInit	j = 0 ;	554:7:14342:14347	4984012	0	True				
ANR	4984539	AssignmentExpression	j = 0		4984012	0		=			
ANR	4984540	Identifier	j		4984012	0					
ANR	4984541	PrimaryExpression	0		4984012	1					
ANR	4984542	Condition	j < pad	554:14:14349:14355	4984012	1	True				
ANR	4984543	RelationalExpression	j < pad		4984012	0		<			
ANR	4984544	Identifier	j		4984012	0					
ANR	4984545	Identifier	pad		4984012	1					
ANR	4984546	PostIncDecOperationExpression	j ++	554:23:14358:14360	4984012	2	True				
ANR	4984547	Identifier	j		4984012	0					
ANR	4984548	IncDec	++		4984012	1					
ANR	4984549	CompoundStatement		86:28:1886:1886	4984012	3					
ANR	4984550	ExpressionStatement	"r_cons_printf ( ""  "" )"	555:3:14368:14388	4984012	0	True				
ANR	4984551	CallExpression	"r_cons_printf ( ""  "" )"		4984012	0					
ANR	4984552	Callee	r_cons_printf		4984012	0					
ANR	4984553	Identifier	r_cons_printf		4984012	0					
ANR	4984554	ArgumentList	"""  """		4984012	1					
ANR	4984555	Argument	"""  """		4984012	0					
ANR	4984556	PrimaryExpression	"""  """		4984012	0					
ANR	4984557	ExpressionStatement	"r_cons_printf ( "" "" )"	557:2:14396:14415	4984012	15	True				
ANR	4984558	CallExpression	"r_cons_printf ( "" "" )"		4984012	0					
ANR	4984559	Callee	r_cons_printf		4984012	0					
ANR	4984560	Identifier	r_cons_printf		4984012	0					
ANR	4984561	ArgumentList	""" """		4984012	1					
ANR	4984562	Argument	""" """		4984012	0					
ANR	4984563	PrimaryExpression	""" """		4984012	0					
ANR	4984564	ForStatement	for ( j = 0 ; j < w ; j ++ )		4984012	16					
ANR	4984565	ForInit	j = 0 ;	558:7:14424:14429	4984012	0	True				
ANR	4984566	AssignmentExpression	j = 0		4984012	0		=			
ANR	4984567	Identifier	j		4984012	0					
ANR	4984568	PrimaryExpression	0		4984012	1					
ANR	4984569	Condition	j < w	558:14:14431:14435	4984012	1	True				
ANR	4984570	RelationalExpression	j < w		4984012	0		<			
ANR	4984571	Identifier	j		4984012	0					
ANR	4984572	Identifier	w		4984012	1					
ANR	4984573	PostIncDecOperationExpression	j ++	558:21:14438:14440	4984012	2	True				
ANR	4984574	Identifier	j		4984012	0					
ANR	4984575	IncDec	++		4984012	1					
ANR	4984576	CompoundStatement		91:3:1971:2002	4984012	3					
ANR	4984577	IdentifierDeclStatement	bool eq2 = a [ i + j ] == b [ i + j ] ;	559:3:14448:14479	4984012	0	True				
ANR	4984578	IdentifierDecl	eq2 = a [ i + j ] == b [ i + j ]		4984012	0					
ANR	4984579	IdentifierDeclType	bool		4984012	0					
ANR	4984580	Identifier	eq2		4984012	1					
ANR	4984581	AssignmentExpression	eq2 = a [ i + j ] == b [ i + j ]		4984012	2		=			
ANR	4984582	Identifier	eq2		4984012	0					
ANR	4984583	EqualityExpression	a [ i + j ] == b [ i + j ]		4984012	1		==			
ANR	4984584	ArrayIndexing	a [ i + j ]		4984012	0					
ANR	4984585	Identifier	a		4984012	0					
ANR	4984586	AdditiveExpression	i + j		4984012	1		+			
ANR	4984587	Identifier	i		4984012	0					
ANR	4984588	Identifier	j		4984012	1					
ANR	4984589	ArrayIndexing	b [ i + j ]		4984012	1					
ANR	4984590	Identifier	b		4984012	0					
ANR	4984591	AdditiveExpression	i + j		4984012	1		+			
ANR	4984592	Identifier	i		4984012	0					
ANR	4984593	Identifier	j		4984012	1					
ANR	4984594	IfStatement	if ( ! eq )		4984012	1					
ANR	4984595	Condition	! eq	560:7:14488:14490	4984012	0	True				
ANR	4984596	UnaryOperationExpression	! eq		4984012	0					
ANR	4984597	UnaryOperator	!		4984012	0					
ANR	4984598	Identifier	eq		4984012	1					
ANR	4984599	CompoundStatement		92:12:2016:2016	4984012	1					
ANR	4984600	ExpressionStatement	r_cons_printf ( eq2 ? Color_GREEN : Color_RED )	561:4:14499:14542	4984012	0	True				
ANR	4984601	CallExpression	r_cons_printf ( eq2 ? Color_GREEN : Color_RED )		4984012	0					
ANR	4984602	Callee	r_cons_printf		4984012	0					
ANR	4984603	Identifier	r_cons_printf		4984012	0					
ANR	4984604	ArgumentList	eq2 ? Color_GREEN : Color_RED		4984012	1					
ANR	4984605	Argument	eq2 ? Color_GREEN : Color_RED		4984012	0					
ANR	4984606	ConditionalExpression	eq2 ? Color_GREEN : Color_RED		4984012	0					
ANR	4984607	Condition	eq2		4984012	0					
ANR	4984608	Identifier	eq2		4984012	0					
ANR	4984609	Identifier	Color_GREEN		4984012	1					
ANR	4984610	Identifier	Color_RED		4984012	2					
ANR	4984611	ExpressionStatement	"r_cons_printf ( ""%c"" , IS_PRINTABLE ( b [ i + j ] ) ? b [ i + j ] : '.' )"	563:3:14552:14612	4984012	2	True				
ANR	4984612	CallExpression	"r_cons_printf ( ""%c"" , IS_PRINTABLE ( b [ i + j ] ) ? b [ i + j ] : '.' )"		4984012	0					
ANR	4984613	Callee	r_cons_printf		4984012	0					
ANR	4984614	Identifier	r_cons_printf		4984012	0					
ANR	4984615	ArgumentList	"""%c"""		4984012	1					
ANR	4984616	Argument	"""%c"""		4984012	0					
ANR	4984617	PrimaryExpression	"""%c"""		4984012	0					
ANR	4984618	Argument	IS_PRINTABLE ( b [ i + j ] ) ? b [ i + j ] : '.'		4984012	1					
ANR	4984619	ConditionalExpression	IS_PRINTABLE ( b [ i + j ] ) ? b [ i + j ] : '.'		4984012	0					
ANR	4984620	Condition	IS_PRINTABLE ( b [ i + j ] )		4984012	0					
ANR	4984621	CallExpression	IS_PRINTABLE ( b [ i + j ] )		4984012	0					
ANR	4984622	Callee	IS_PRINTABLE		4984012	0					
ANR	4984623	Identifier	IS_PRINTABLE		4984012	0					
ANR	4984624	ArgumentList	b [ i + j ]		4984012	1					
ANR	4984625	Argument	b [ i + j ]		4984012	0					
ANR	4984626	ArrayIndexing	b [ i + j ]		4984012	0					
ANR	4984627	Identifier	b		4984012	0					
ANR	4984628	AdditiveExpression	i + j		4984012	1		+			
ANR	4984629	Identifier	i		4984012	0					
ANR	4984630	Identifier	j		4984012	1					
ANR	4984631	ArrayIndexing	b [ i + j ]		4984012	1					
ANR	4984632	Identifier	b		4984012	0					
ANR	4984633	AdditiveExpression	i + j		4984012	1		+			
ANR	4984634	Identifier	i		4984012	0					
ANR	4984635	Identifier	j		4984012	1					
ANR	4984636	PrimaryExpression	'.'		4984012	2					
ANR	4984637	IfStatement	if ( ! eq )		4984012	3					
ANR	4984638	Condition	! eq	564:7:14621:14623	4984012	0	True				
ANR	4984639	UnaryOperationExpression	! eq		4984012	0					
ANR	4984640	UnaryOperator	!		4984012	0					
ANR	4984641	Identifier	eq		4984012	1					
ANR	4984642	CompoundStatement		96:12:2149:2149	4984012	1					
ANR	4984643	ExpressionStatement	r_cons_printf ( Color_RESET )	565:4:14632:14659	4984012	0	True				
ANR	4984644	CallExpression	r_cons_printf ( Color_RESET )		4984012	0					
ANR	4984645	Callee	r_cons_printf		4984012	0					
ANR	4984646	Identifier	r_cons_printf		4984012	0					
ANR	4984647	ArgumentList	Color_RESET		4984012	1					
ANR	4984648	Argument	Color_RESET		4984012	0					
ANR	4984649	Identifier	Color_RESET		4984012	0					
ANR	4984650	ExpressionStatement	"r_cons_printf ( ""\\n"" )"	568:2:14672:14692	4984012	17	True				
ANR	4984651	CallExpression	"r_cons_printf ( ""\\n"" )"		4984012	0					
ANR	4984652	Callee	r_cons_printf		4984012	0					
ANR	4984653	Identifier	r_cons_printf		4984012	0					
ANR	4984654	ArgumentList	"""\\n"""		4984012	1					
ANR	4984655	Argument	"""\\n"""		4984012	0					
ANR	4984656	PrimaryExpression	"""\\n"""		4984012	0					
ANR	4984657	ExpressionStatement	r_cons_flush ( )	569:2:14696:14711	4984012	18	True				
ANR	4984658	CallExpression	r_cons_flush ( )		4984012	0					
ANR	4984659	Callee	r_cons_flush		4984012	0					
ANR	4984660	Identifier	r_cons_flush		4984012	0					
ANR	4984661	ArgumentList			4984012	1					
ANR	4984662	ExpressionStatement	r_cons_break_end ( )	571:1:14717:14736	4984012	8	True				
ANR	4984663	CallExpression	r_cons_break_end ( )		4984012	0					
ANR	4984664	Callee	r_cons_break_end		4984012	0					
ANR	4984665	Identifier	r_cons_break_end		4984012	0					
ANR	4984666	ArgumentList			4984012	1					
ANR	4984667	Statement	r_cons_printf	572:1:14739:14751	4984012	9	True				
ANR	4984668	Statement	(	572:15:14753:14753	4984012	10	True				
ANR	4984669	Statement	"""\\n"""	572:16:14754:14757	4984012	11	True				
ANR	4984670	Statement	Color_RESET	572:20:14758:14768	4984012	12	True				
ANR	4984671	Statement	)	572:31:14769:14769	4984012	13	True				
ANR	4984672	ExpressionStatement		572:32:14770:14770	4984012	14	True				
ANR	4984673	ExpressionStatement	r_cons_flush ( )	573:1:14773:14788	4984012	15	True				
ANR	4984674	CallExpression	r_cons_flush ( )		4984012	0					
ANR	4984675	Callee	r_cons_flush		4984012	0					
ANR	4984676	Identifier	r_cons_flush		4984012	0					
ANR	4984677	ArgumentList			4984012	1					
ANR	4984678	IfStatement	if ( as != bs )		4984012	16					
ANR	4984679	Condition	as != bs	574:5:14795:14802	4984012	0	True				
ANR	4984680	EqualityExpression	as != bs		4984012	0		!=			
ANR	4984681	Identifier	as		4984012	0					
ANR	4984682	Identifier	bs		4984012	1					
ANR	4984683	CompoundStatement		106:15:2328:2328	4984012	1					
ANR	4984684	ExpressionStatement	"r_cons_printf ( ""...\\n"" )"	575:2:14809:14832	4984012	0	True				
ANR	4984685	CallExpression	"r_cons_printf ( ""...\\n"" )"		4984012	0					
ANR	4984686	Callee	r_cons_printf		4984012	0					
ANR	4984687	Identifier	r_cons_printf		4984012	0					
ANR	4984688	ArgumentList	"""...\\n"""		4984012	1					
ANR	4984689	Argument	"""...\\n"""		4984012	0					
ANR	4984690	PrimaryExpression	"""...\\n"""		4984012	0					
ANR	4984691	ReturnType	static void		4984012	1					
ANR	4984692	Identifier	dump_cols		4984012	2					
ANR	4984693	ParameterList	"ut8 * a , int as , ut8 * b , int bs , int w"		4984012	3					
ANR	4984694	Parameter	ut8 * a	469:22:12437:12442	4984012	0	True				
ANR	4984695	ParameterType	ut8 *		4984012	0					
ANR	4984696	Identifier	a		4984012	1					
ANR	4984697	Parameter	int as	469:30:12445:12450	4984012	1	True				
ANR	4984698	ParameterType	int		4984012	0					
ANR	4984699	Identifier	as		4984012	1					
ANR	4984700	Parameter	ut8 * b	469:38:12453:12458	4984012	2	True				
ANR	4984701	ParameterType	ut8 *		4984012	0					
ANR	4984702	Identifier	b		4984012	1					
ANR	4984703	Parameter	int bs	469:46:12461:12466	4984012	3	True				
ANR	4984704	ParameterType	int		4984012	0					
ANR	4984705	Identifier	bs		4984012	1					
ANR	4984706	Parameter	int w	469:54:12469:12473	4984012	4	True				
ANR	4984707	ParameterType	int		4984012	0					
ANR	4984708	Identifier	w		4984012	1					
ANR	4984709	CFGEntryNode	ENTRY		4984012		True				
ANR	4984710	CFGExitNode	EXIT		4984012		True				
ANR	4984711	Symbol	Color_GREEN		4984012						
ANR	4984712	Symbol	IS_PRINTABLE		4984012						
ANR	4984713	Symbol	eq2		4984012						
ANR	4984714	Symbol	Color_RESET		4984012						
ANR	4984715	Symbol	bs		4984012						
ANR	4984716	Symbol	pad		4984012						
ANR	4984717	Symbol	r_cons_is_breaked		4984012						
ANR	4984718	Symbol	memcmp		4984012						
ANR	4984719	Symbol	a		4984012						
ANR	4984720	Symbol	b		4984012						
ANR	4984721	Symbol	NULL		4984012						
ANR	4984722	Symbol	ctx		4984012						
ANR	4984723	Symbol	sz		4984012						
ANR	4984724	Symbol	i		4984012						
ANR	4984725	Symbol	R_MIN		4984012						
ANR	4984726	Symbol	j		4984012						
ANR	4984727	Symbol	* a		4984012						
ANR	4984728	Symbol	eq		4984012						
ANR	4984729	Symbol	* b		4984012						
ANR	4984730	Symbol	DUMP_CONTEXT		4984012						
ANR	4984731	Symbol	as		4984012						
ANR	4984732	Symbol	* i		4984012						
ANR	4984733	Symbol	* j		4984012						
ANR	4984734	Symbol	w		4984012						
ANR	4984735	Symbol	Color_RED		4984012						
ANR	4984736	Function	handle_sha256	579:0:14840:15144							
ANR	4984737	FunctionDef	"handle_sha256 (const ut8 * block , int len)"		4984736	0					
ANR	4984738	CompoundStatement		579:53:14893:15144	4984736	0					
ANR	4984739	IdentifierDeclStatement	int i = 0 ;	580:1:14896:14905	4984736	0	True				
ANR	4984740	IdentifierDecl	i = 0		4984736	0					
ANR	4984741	IdentifierDeclType	int		4984736	0					
ANR	4984742	Identifier	i		4984736	1					
ANR	4984743	AssignmentExpression	i = 0		4984736	2		=			
ANR	4984744	Identifier	i		4984736	0					
ANR	4984745	PrimaryExpression	0		4984736	1					
ANR	4984746	IdentifierDeclStatement	"RHash * ctx = r_hash_new ( true , R_HASH_SHA256 ) ;"	581:1:14908:14953	4984736	1	True				
ANR	4984747	IdentifierDecl	"* ctx = r_hash_new ( true , R_HASH_SHA256 )"		4984736	0					
ANR	4984748	IdentifierDeclType	RHash *		4984736	0					
ANR	4984749	Identifier	ctx		4984736	1					
ANR	4984750	AssignmentExpression	"* ctx = r_hash_new ( true , R_HASH_SHA256 )"		4984736	2		=			
ANR	4984751	Identifier	ctx		4984736	0					
ANR	4984752	CallExpression	"r_hash_new ( true , R_HASH_SHA256 )"		4984736	1					
ANR	4984753	Callee	r_hash_new		4984736	0					
ANR	4984754	Identifier	r_hash_new		4984736	0					
ANR	4984755	ArgumentList	true		4984736	1					
ANR	4984756	Argument	true		4984736	0					
ANR	4984757	Identifier	true		4984736	0					
ANR	4984758	Argument	R_HASH_SHA256		4984736	1					
ANR	4984759	Identifier	R_HASH_SHA256		4984736	0					
ANR	4984760	IdentifierDeclStatement	"const ut8 * c = r_hash_do_sha256 ( ctx , block , len ) ;"	582:1:14956:15005	4984736	2	True				
ANR	4984761	IdentifierDecl	"* c = r_hash_do_sha256 ( ctx , block , len )"		4984736	0					
ANR	4984762	IdentifierDeclType	const ut8 *		4984736	0					
ANR	4984763	Identifier	c		4984736	1					
ANR	4984764	AssignmentExpression	"* c = r_hash_do_sha256 ( ctx , block , len )"		4984736	2		=			
ANR	4984765	Identifier	c		4984736	0					
ANR	4984766	CallExpression	"r_hash_do_sha256 ( ctx , block , len )"		4984736	1					
ANR	4984767	Callee	r_hash_do_sha256		4984736	0					
ANR	4984768	Identifier	r_hash_do_sha256		4984736	0					
ANR	4984769	ArgumentList	ctx		4984736	1					
ANR	4984770	Argument	ctx		4984736	0					
ANR	4984771	Identifier	ctx		4984736	0					
ANR	4984772	Argument	block		4984736	1					
ANR	4984773	Identifier	block		4984736	0					
ANR	4984774	Argument	len		4984736	2					
ANR	4984775	Identifier	len		4984736	0					
ANR	4984776	IfStatement	if ( ! c )		4984736	3					
ANR	4984777	Condition	! c	583:5:15012:15013	4984736	0	True				
ANR	4984778	UnaryOperationExpression	! c		4984736	0					
ANR	4984779	UnaryOperator	!		4984736	0					
ANR	4984780	Identifier	c		4984736	1					
ANR	4984781	CompoundStatement		5:9:122:122	4984736	1					
ANR	4984782	ExpressionStatement	r_hash_free ( ctx )	584:2:15020:15037	4984736	0	True				
ANR	4984783	CallExpression	r_hash_free ( ctx )		4984736	0					
ANR	4984784	Callee	r_hash_free		4984736	0					
ANR	4984785	Identifier	r_hash_free		4984736	0					
ANR	4984786	ArgumentList	ctx		4984736	1					
ANR	4984787	Argument	ctx		4984736	0					
ANR	4984788	Identifier	ctx		4984736	0					
ANR	4984789	ReturnStatement	return ;	585:2:15041:15047	4984736	1	True				
ANR	4984790	ForStatement	for ( i = 0 ; i < R_HASH_SIZE_SHA256 ; i ++ )		4984736	4					
ANR	4984791	ForInit	i = 0 ;	587:6:15058:15063	4984736	0	True				
ANR	4984792	AssignmentExpression	i = 0		4984736	0		=			
ANR	4984793	Identifier	i		4984736	0					
ANR	4984794	PrimaryExpression	0		4984736	1					
ANR	4984795	Condition	i < R_HASH_SIZE_SHA256	587:13:15065:15086	4984736	1	True				
ANR	4984796	RelationalExpression	i < R_HASH_SIZE_SHA256		4984736	0		<			
ANR	4984797	Identifier	i		4984736	0					
ANR	4984798	Identifier	R_HASH_SIZE_SHA256		4984736	1					
ANR	4984799	PostIncDecOperationExpression	i ++	587:37:15089:15091	4984736	2	True				
ANR	4984800	Identifier	i		4984736	0					
ANR	4984801	IncDec	++		4984736	1					
ANR	4984802	CompoundStatement		9:42:200:200	4984736	3					
ANR	4984803	ExpressionStatement	"printf ( ""%02x"" , c [ i ] )"	588:2:15098:15119	4984736	0	True				
ANR	4984804	CallExpression	"printf ( ""%02x"" , c [ i ] )"		4984736	0					
ANR	4984805	Callee	printf		4984736	0					
ANR	4984806	Identifier	printf		4984736	0					
ANR	4984807	ArgumentList	"""%02x"""		4984736	1					
ANR	4984808	Argument	"""%02x"""		4984736	0					
ANR	4984809	PrimaryExpression	"""%02x"""		4984736	0					
ANR	4984810	Argument	c [ i ]		4984736	1					
ANR	4984811	ArrayIndexing	c [ i ]		4984736	0					
ANR	4984812	Identifier	c		4984736	0					
ANR	4984813	Identifier	i		4984736	1					
ANR	4984814	ExpressionStatement	r_hash_free ( ctx )	590:1:15125:15142	4984736	5	True				
ANR	4984815	CallExpression	r_hash_free ( ctx )		4984736	0					
ANR	4984816	Callee	r_hash_free		4984736	0					
ANR	4984817	Identifier	r_hash_free		4984736	0					
ANR	4984818	ArgumentList	ctx		4984736	1					
ANR	4984819	Argument	ctx		4984736	0					
ANR	4984820	Identifier	ctx		4984736	0					
ANR	4984821	ReturnType	static void		4984736	1					
ANR	4984822	Identifier	handle_sha256		4984736	2					
ANR	4984823	ParameterList	"const ut8 * block , int len"		4984736	3					
ANR	4984824	Parameter	const ut8 * block	579:26:14866:14881	4984736	0	True				
ANR	4984825	ParameterType	const ut8 *		4984736	0					
ANR	4984826	Identifier	block		4984736	1					
ANR	4984827	Parameter	int len	579:44:14884:14890	4984736	1	True				
ANR	4984828	ParameterType	int		4984736	0					
ANR	4984829	Identifier	len		4984736	1					
ANR	4984830	CFGEntryNode	ENTRY		4984736		True				
ANR	4984831	CFGExitNode	EXIT		4984736		True				
ANR	4984832	Symbol	R_HASH_SHA256		4984736						
ANR	4984833	Symbol	c		4984736						
ANR	4984834	Symbol	* i		4984736						
ANR	4984835	Symbol	len		4984736						
ANR	4984836	Symbol	ctx		4984736						
ANR	4984837	Symbol	true		4984736						
ANR	4984838	Symbol	i		4984736						
ANR	4984839	Symbol	block		4984736						
ANR	4984840	Symbol	R_HASH_SIZE_SHA256		4984736						
ANR	4984841	Symbol	* c		4984736						
ANR	4984842	Symbol	r_hash_do_sha256		4984736						
ANR	4984843	Symbol	r_hash_new		4984736						
ANR	4984844	Function	slurp	593:0:15147:15878							
ANR	4984845	FunctionDef	"slurp (RCore * * c , const char * file , int * sz)"		4984844	0					
ANR	4984846	CompoundStatement		593:56:15203:15878	4984844	0					
ANR	4984847	IdentifierDeclStatement	RIODesc * d ;	594:1:15206:15216	4984844	0	True				
ANR	4984848	IdentifierDecl	* d		4984844	0					
ANR	4984849	IdentifierDeclType	RIODesc *		4984844	0					
ANR	4984850	Identifier	d		4984844	1					
ANR	4984851	IdentifierDeclStatement	RIO * io ;	595:1:15219:15226	4984844	1	True				
ANR	4984852	IdentifierDecl	* io		4984844	0					
ANR	4984853	IdentifierDeclType	RIO *		4984844	0					
ANR	4984854	Identifier	io		4984844	1					
ANR	4984855	IfStatement	"if ( c && file && strstr ( file , ""://"" ) )"		4984844	2					
ANR	4984856	Condition	"c && file && strstr ( file , ""://"" )"	596:5:15233:15265	4984844	0	True				
ANR	4984857	AndExpression	"c && file && strstr ( file , ""://"" )"		4984844	0		&&			
ANR	4984858	Identifier	c		4984844	0					
ANR	4984859	AndExpression	"file && strstr ( file , ""://"" )"		4984844	1		&&			
ANR	4984860	Identifier	file		4984844	0					
ANR	4984861	CallExpression	"strstr ( file , ""://"" )"		4984844	1					
ANR	4984862	Callee	strstr		4984844	0					
ANR	4984863	Identifier	strstr		4984844	0					
ANR	4984864	ArgumentList	file		4984844	1					
ANR	4984865	Argument	file		4984844	0					
ANR	4984866	Identifier	file		4984844	0					
ANR	4984867	Argument	"""://"""		4984844	1					
ANR	4984868	PrimaryExpression	"""://"""		4984844	0					
ANR	4984869	CompoundStatement		6:2:88:97	4984844	1					
ANR	4984870	IdentifierDeclStatement	ut8 * data = NULL ;	597:2:15272:15288	4984844	0	True				
ANR	4984871	IdentifierDecl	* data = NULL		4984844	0					
ANR	4984872	IdentifierDeclType	ut8 *		4984844	0					
ANR	4984873	Identifier	data		4984844	1					
ANR	4984874	AssignmentExpression	* data = NULL		4984844	2		=			
ANR	4984875	Identifier	NULL		4984844	0					
ANR	4984876	Identifier	NULL		4984844	1					
ANR	4984877	IdentifierDeclStatement	ut64 size ;	598:2:15292:15301	4984844	1	True				
ANR	4984878	IdentifierDecl	size		4984844	0					
ANR	4984879	IdentifierDeclType	ut64		4984844	0					
ANR	4984880	Identifier	size		4984844	1					
ANR	4984881	IfStatement	if ( ! * c )		4984844	2					
ANR	4984882	Condition	! * c	599:6:15309:15311	4984844	0	True				
ANR	4984883	UnaryOperationExpression	! * c		4984844	0					
ANR	4984884	UnaryOperator	!		4984844	0					
ANR	4984885	UnaryOperationExpression	* c		4984844	1					
ANR	4984886	UnaryOperator	*		4984844	0					
ANR	4984887	Identifier	c		4984844	1					
ANR	4984888	CompoundStatement		7:11:110:110	4984844	1					
ANR	4984889	ExpressionStatement	* c = opencore ( NULL )	600:3:15319:15339	4984844	0	True				
ANR	4984890	AssignmentExpression	* c = opencore ( NULL )		4984844	0		=			
ANR	4984891	UnaryOperationExpression	* c		4984844	0					
ANR	4984892	UnaryOperator	*		4984844	0					
ANR	4984893	Identifier	c		4984844	1					
ANR	4984894	CallExpression	opencore ( NULL )		4984844	1					
ANR	4984895	Callee	opencore		4984844	0					
ANR	4984896	Identifier	opencore		4984844	0					
ANR	4984897	ArgumentList	NULL		4984844	1					
ANR	4984898	Argument	NULL		4984844	0					
ANR	4984899	Identifier	NULL		4984844	0					
ANR	4984900	IfStatement	if ( ! * c )		4984844	3					
ANR	4984901	Condition	! * c	602:6:15351:15353	4984844	0	True				
ANR	4984902	UnaryOperationExpression	! * c		4984844	0					
ANR	4984903	UnaryOperator	!		4984844	0					
ANR	4984904	UnaryOperationExpression	* c		4984844	1					
ANR	4984905	UnaryOperator	*		4984844	0					
ANR	4984906	Identifier	c		4984844	1					
ANR	4984907	CompoundStatement		10:11:152:152	4984844	1					
ANR	4984908	ExpressionStatement	"eprintf ( ""opencore failed\\n"" )"	603:3:15361:15390	4984844	0	True				
ANR	4984909	CallExpression	"eprintf ( ""opencore failed\\n"" )"		4984844	0					
ANR	4984910	Callee	eprintf		4984844	0					
ANR	4984911	Identifier	eprintf		4984844	0					
ANR	4984912	ArgumentList	"""opencore failed\\n"""		4984844	1					
ANR	4984913	Argument	"""opencore failed\\n"""		4984844	0					
ANR	4984914	PrimaryExpression	"""opencore failed\\n"""		4984844	0					
ANR	4984915	ReturnStatement	return NULL ;	604:3:15395:15406	4984844	1	True				
ANR	4984916	Identifier	NULL		4984844	0					
ANR	4984917	ExpressionStatement	io = ( * c ) -> io	606:2:15414:15427	4984844	4	True				
ANR	4984918	AssignmentExpression	io = ( * c ) -> io		4984844	0		=			
ANR	4984919	Identifier	io		4984844	0					
ANR	4984920	PtrMemberAccess	( * c ) -> io		4984844	1					
ANR	4984921	UnaryOperationExpression	* c		4984844	0					
ANR	4984922	UnaryOperator	*		4984844	0					
ANR	4984923	Identifier	c		4984844	1					
ANR	4984924	Identifier	io		4984844	1					
ANR	4984925	ExpressionStatement	"d = r_io_open ( io , file , 0 , 0 )"	607:2:15431:15461	4984844	5	True				
ANR	4984926	AssignmentExpression	"d = r_io_open ( io , file , 0 , 0 )"		4984844	0		=			
ANR	4984927	Identifier	d		4984844	0					
ANR	4984928	CallExpression	"r_io_open ( io , file , 0 , 0 )"		4984844	1					
ANR	4984929	Callee	r_io_open		4984844	0					
ANR	4984930	Identifier	r_io_open		4984844	0					
ANR	4984931	ArgumentList	io		4984844	1					
ANR	4984932	Argument	io		4984844	0					
ANR	4984933	Identifier	io		4984844	0					
ANR	4984934	Argument	file		4984844	1					
ANR	4984935	Identifier	file		4984844	0					
ANR	4984936	Argument	0		4984844	2					
ANR	4984937	PrimaryExpression	0		4984844	0					
ANR	4984938	Argument	0		4984844	3					
ANR	4984939	PrimaryExpression	0		4984844	0					
ANR	4984940	IfStatement	if ( ! d )		4984844	6					
ANR	4984941	Condition	! d	608:6:15469:15470	4984844	0	True				
ANR	4984942	UnaryOperationExpression	! d		4984844	0					
ANR	4984943	UnaryOperator	!		4984844	0					
ANR	4984944	Identifier	d		4984844	1					
ANR	4984945	CompoundStatement		16:10:269:269	4984844	1					
ANR	4984946	ReturnStatement	return NULL ;	609:3:15478:15489	4984844	0	True				
ANR	4984947	Identifier	NULL		4984844	0					
ANR	4984948	ExpressionStatement	size = r_io_size ( io )	611:2:15497:15518	4984844	7	True				
ANR	4984949	AssignmentExpression	size = r_io_size ( io )		4984844	0		=			
ANR	4984950	Identifier	size		4984844	0					
ANR	4984951	CallExpression	r_io_size ( io )		4984844	1					
ANR	4984952	Callee	r_io_size		4984844	0					
ANR	4984953	Identifier	r_io_size		4984844	0					
ANR	4984954	ArgumentList	io		4984844	1					
ANR	4984955	Argument	io		4984844	0					
ANR	4984956	Identifier	io		4984844	0					
ANR	4984957	IfStatement	if ( size > 0 && size < ST32_MAX )		4984844	8					
ANR	4984958	Condition	size > 0 && size < ST32_MAX	612:6:15526:15552	4984844	0	True				
ANR	4984959	AndExpression	size > 0 && size < ST32_MAX		4984844	0		&&			
ANR	4984960	RelationalExpression	size > 0		4984844	0		>			
ANR	4984961	Identifier	size		4984844	0					
ANR	4984962	PrimaryExpression	0		4984844	1					
ANR	4984963	RelationalExpression	size < ST32_MAX		4984844	1		<			
ANR	4984964	Identifier	size		4984844	0					
ANR	4984965	Identifier	ST32_MAX		4984844	1					
ANR	4984966	CompoundStatement		20:35:351:351	4984844	1					
ANR	4984967	ExpressionStatement	"data = calloc ( 1 , size )"	613:3:15560:15583	4984844	0	True				
ANR	4984968	AssignmentExpression	"data = calloc ( 1 , size )"		4984844	0		=			
ANR	4984969	Identifier	data		4984844	0					
ANR	4984970	CallExpression	"calloc ( 1 , size )"		4984844	1					
ANR	4984971	Callee	calloc		4984844	0					
ANR	4984972	Identifier	calloc		4984844	0					
ANR	4984973	ArgumentList	1		4984844	1					
ANR	4984974	Argument	1		4984844	0					
ANR	4984975	PrimaryExpression	1		4984844	0					
ANR	4984976	Argument	size		4984844	1					
ANR	4984977	Identifier	size		4984844	0					
ANR	4984978	IfStatement	"if ( r_io_read_at ( io , 0 , data , size ) )"		4984844	1					
ANR	4984979	Condition	"r_io_read_at ( io , 0 , data , size )"	614:7:15592:15623	4984844	0	True				
ANR	4984980	CallExpression	"r_io_read_at ( io , 0 , data , size )"		4984844	0					
ANR	4984981	Callee	r_io_read_at		4984844	0					
ANR	4984982	Identifier	r_io_read_at		4984844	0					
ANR	4984983	ArgumentList	io		4984844	1					
ANR	4984984	Argument	io		4984844	0					
ANR	4984985	Identifier	io		4984844	0					
ANR	4984986	Argument	0		4984844	1					
ANR	4984987	PrimaryExpression	0		4984844	0					
ANR	4984988	Argument	data		4984844	2					
ANR	4984989	Identifier	data		4984844	0					
ANR	4984990	Argument	size		4984844	3					
ANR	4984991	Identifier	size		4984844	0					
ANR	4984992	CompoundStatement		22:41:422:422	4984844	1					
ANR	4984993	IfStatement	if ( sz )		4984844	0					
ANR	4984994	Condition	sz	615:8:15636:15637	4984844	0	True				
ANR	4984995	Identifier	sz		4984844	0					
ANR	4984996	CompoundStatement		23:12:436:436	4984844	1					
ANR	4984997	ExpressionStatement	* sz = size	616:5:15647:15657	4984844	0	True				
ANR	4984998	AssignmentExpression	* sz = size		4984844	0		=			
ANR	4984999	UnaryOperationExpression	* sz		4984844	0					
ANR	4985000	UnaryOperator	*		4984844	0					
ANR	4985001	Identifier	sz		4984844	1					
ANR	4985002	Identifier	size		4984844	1					
ANR	4985003	ElseStatement	else		4984844	0					
ANR	4985004	CompoundStatement		26:10:471:471	4984844	0					
ANR	4985005	ExpressionStatement	"eprintf ( ""slurp: read error\\n"" )"	619:4:15681:15712	4984844	0	True				
ANR	4985006	CallExpression	"eprintf ( ""slurp: read error\\n"" )"		4984844	0					
ANR	4985007	Callee	eprintf		4984844	0					
ANR	4985008	Identifier	eprintf		4984844	0					
ANR	4985009	ArgumentList	"""slurp: read error\\n"""		4984844	1					
ANR	4985010	Argument	"""slurp: read error\\n"""		4984844	0					
ANR	4985011	PrimaryExpression	"""slurp: read error\\n"""		4984844	0					
ANR	4985012	ExpressionStatement	R_FREE ( data )	620:4:15718:15731	4984844	1	True				
ANR	4985013	CallExpression	R_FREE ( data )		4984844	0					
ANR	4985014	Callee	R_FREE		4984844	0					
ANR	4985015	Identifier	R_FREE		4984844	0					
ANR	4985016	ArgumentList	data		4984844	1					
ANR	4985017	Argument	data		4984844	0					
ANR	4985018	Identifier	data		4984844	0					
ANR	4985019	ElseStatement	else		4984844	0					
ANR	4985020	CompoundStatement		30:9:543:543	4984844	0					
ANR	4985021	ExpressionStatement	"eprintf ( ""slurp: Invalid file size\\n"" )"	623:3:15752:15790	4984844	0	True				
ANR	4985022	CallExpression	"eprintf ( ""slurp: Invalid file size\\n"" )"		4984844	0					
ANR	4985023	Callee	eprintf		4984844	0					
ANR	4985024	Identifier	eprintf		4984844	0					
ANR	4985025	ArgumentList	"""slurp: Invalid file size\\n"""		4984844	1					
ANR	4985026	Argument	"""slurp: Invalid file size\\n"""		4984844	0					
ANR	4985027	PrimaryExpression	"""slurp: Invalid file size\\n"""		4984844	0					
ANR	4985028	ExpressionStatement	r_io_desc_close ( d )	625:2:15798:15817	4984844	9	True				
ANR	4985029	CallExpression	r_io_desc_close ( d )		4984844	0					
ANR	4985030	Callee	r_io_desc_close		4984844	0					
ANR	4985031	Identifier	r_io_desc_close		4984844	0					
ANR	4985032	ArgumentList	d		4984844	1					
ANR	4985033	Argument	d		4984844	0					
ANR	4985034	Identifier	d		4984844	0					
ANR	4985035	ReturnStatement	return data ;	626:2:15821:15832	4984844	10	True				
ANR	4985036	Identifier	data		4984844	0					
ANR	4985037	ReturnStatement	"return ( ut8 * ) r_file_slurp ( file , sz ) ;"	628:1:15838:15876	4984844	3	True				
ANR	4985038	CastExpression	"( ut8 * ) r_file_slurp ( file , sz )"		4984844	0					
ANR	4985039	CastTarget	ut8 *		4984844	0					
ANR	4985040	CallExpression	"r_file_slurp ( file , sz )"		4984844	1					
ANR	4985041	Callee	r_file_slurp		4984844	0					
ANR	4985042	Identifier	r_file_slurp		4984844	0					
ANR	4985043	ArgumentList	file		4984844	1					
ANR	4985044	Argument	file		4984844	0					
ANR	4985045	Identifier	file		4984844	0					
ANR	4985046	Argument	sz		4984844	1					
ANR	4985047	Identifier	sz		4984844	0					
ANR	4985048	ReturnType	static ut8 *		4984844	1					
ANR	4985049	Identifier	slurp		4984844	2					
ANR	4985050	ParameterList	"RCore * * c , const char * file , int * sz"		4984844	3					
ANR	4985051	Parameter	RCore * * c	593:18:15165:15173	4984844	0	True				
ANR	4985052	ParameterType	RCore * *		4984844	0					
ANR	4985053	Identifier	c		4984844	1					
ANR	4985054	Parameter	const char * file	593:29:15176:15191	4984844	1	True				
ANR	4985055	ParameterType	const char *		4984844	0					
ANR	4985056	Identifier	file		4984844	1					
ANR	4985057	Parameter	int * sz	593:47:15194:15200	4984844	2	True				
ANR	4985058	ParameterType	int *		4984844	0					
ANR	4985059	Identifier	sz		4984844	1					
ANR	4985060	CFGEntryNode	ENTRY		4984844		True				
ANR	4985061	CFGExitNode	EXIT		4984844		True				
ANR	4985062	Symbol	r_file_slurp		4984844						
ANR	4985063	Symbol	c		4984844						
ANR	4985064	Symbol	NULL		4984844						
ANR	4985065	Symbol	d		4984844						
ANR	4985066	Symbol	data		4984844						
ANR	4985067	Symbol	ST32_MAX		4984844						
ANR	4985068	Symbol	io		4984844						
ANR	4985069	Symbol	r_io_open		4984844						
ANR	4985070	Symbol	sz		4984844						
ANR	4985071	Symbol	* * c		4984844						
ANR	4985072	Symbol	r_io_read_at		4984844						
ANR	4985073	Symbol	calloc		4984844						
ANR	4985074	Symbol	* c		4984844						
ANR	4985075	Symbol	* sz		4984844						
ANR	4985076	Symbol	file		4984844						
ANR	4985077	Symbol	size		4984844						
ANR	4985078	Symbol	strstr		4984844						
ANR	4985079	Symbol	opencore		4984844						
ANR	4985080	Symbol	( * c ) -> io		4984844						
ANR	4985081	Symbol	r_io_size		4984844						
ANR	4985082	Function	import_cmp	631:0:15881:15982							
ANR	4985083	FunctionDef	"import_cmp (const RBinImport * a , const RBinImport * b)"		4985082	0					
ANR	4985084	CompoundStatement		631:64:15945:15982	4985082	0					
ANR	4985085	ReturnStatement	"return strcmp ( a -> name , b -> name ) ;"	632:1:15948:15980	4985082	0	True				
ANR	4985086	CallExpression	"strcmp ( a -> name , b -> name )"		4985082	0					
ANR	4985087	Callee	strcmp		4985082	0					
ANR	4985088	Identifier	strcmp		4985082	0					
ANR	4985089	ArgumentList	a -> name		4985082	1					
ANR	4985090	Argument	a -> name		4985082	0					
ANR	4985091	PtrMemberAccess	a -> name		4985082	0					
ANR	4985092	Identifier	a		4985082	0					
ANR	4985093	Identifier	name		4985082	1					
ANR	4985094	Argument	b -> name		4985082	1					
ANR	4985095	PtrMemberAccess	b -> name		4985082	0					
ANR	4985096	Identifier	b		4985082	0					
ANR	4985097	Identifier	name		4985082	1					
ANR	4985098	ReturnType	static int		4985082	1					
ANR	4985099	Identifier	import_cmp		4985082	2					
ANR	4985100	ParameterList	"const RBinImport * a , const RBinImport * b"		4985082	3					
ANR	4985101	Parameter	const RBinImport * a	631:22:15903:15921	4985082	0	True				
ANR	4985102	ParameterType	const RBinImport *		4985082	0					
ANR	4985103	Identifier	a		4985082	1					
ANR	4985104	Parameter	const RBinImport * b	631:43:15924:15942	4985082	1	True				
ANR	4985105	ParameterType	const RBinImport *		4985082	0					
ANR	4985106	Identifier	b		4985082	1					
ANR	4985107	CFGEntryNode	ENTRY		4985082		True				
ANR	4985108	CFGExitNode	EXIT		4985082		True				
ANR	4985109	Symbol	strcmp		4985082						
ANR	4985110	Symbol	a		4985082						
ANR	4985111	Symbol	b		4985082						
ANR	4985112	Symbol	a -> name		4985082						
ANR	4985113	Symbol	* a		4985082						
ANR	4985114	Symbol	* b		4985082						
ANR	4985115	Symbol	b -> name		4985082						
ANR	4985116	Function	get_imports	635:0:15985:16743							
ANR	4985117	FunctionDef	"get_imports (RCore * c , int * len)"		4985116	0					
ANR	4985118	CompoundStatement		635:44:16029:16743	4985116	0					
ANR	4985119	IdentifierDeclStatement	RListIter * iter ;	636:1:16032:16047	4985116	0	True				
ANR	4985120	IdentifierDecl	* iter		4985116	0					
ANR	4985121	IdentifierDeclType	RListIter *		4985116	0					
ANR	4985122	Identifier	iter		4985116	1					
ANR	4985123	IdentifierDeclStatement	"RBinImport * str , * old = NULL ;"	637:1:16050:16078	4985116	1	True				
ANR	4985124	IdentifierDecl	* str		4985116	0					
ANR	4985125	IdentifierDeclType	RBinImport *		4985116	0					
ANR	4985126	Identifier	str		4985116	1					
ANR	4985127	IdentifierDecl	* old = NULL		4985116	1					
ANR	4985128	IdentifierDeclType	RBinImport *		4985116	0					
ANR	4985129	Identifier	old		4985116	1					
ANR	4985130	AssignmentExpression	* old = NULL		4985116	2		=			
ANR	4985131	Identifier	NULL		4985116	0					
ANR	4985132	Identifier	NULL		4985116	1					
ANR	4985133	IdentifierDeclStatement	"ut8 * buf , * ptr ;"	638:1:16081:16095	4985116	2	True				
ANR	4985134	IdentifierDecl	* buf		4985116	0					
ANR	4985135	IdentifierDeclType	ut8 *		4985116	0					
ANR	4985136	Identifier	buf		4985116	1					
ANR	4985137	IdentifierDecl	* ptr		4985116	1					
ANR	4985138	IdentifierDeclType	ut8 *		4985116	0					
ANR	4985139	Identifier	ptr		4985116	1					
ANR	4985140	IfStatement	if ( ! c || ! len )		4985116	3					
ANR	4985141	Condition	! c || ! len	640:5:16103:16112	4985116	0	True				
ANR	4985142	OrExpression	! c || ! len		4985116	0		||			
ANR	4985143	UnaryOperationExpression	! c		4985116	0					
ANR	4985144	UnaryOperator	!		4985116	0					
ANR	4985145	Identifier	c		4985116	1					
ANR	4985146	UnaryOperationExpression	! len		4985116	1					
ANR	4985147	UnaryOperator	!		4985116	0					
ANR	4985148	Identifier	len		4985116	1					
ANR	4985149	CompoundStatement		6:17:85:85	4985116	1					
ANR	4985150	ReturnStatement	return NULL ;	641:2:16119:16130	4985116	0	True				
ANR	4985151	Identifier	NULL		4985116	0					
ANR	4985152	IdentifierDeclStatement	RList * list = r_bin_get_imports ( c -> bin ) ;	644:1:16137:16177	4985116	4	True				
ANR	4985153	IdentifierDecl	* list = r_bin_get_imports ( c -> bin )		4985116	0					
ANR	4985154	IdentifierDeclType	RList *		4985116	0					
ANR	4985155	Identifier	list		4985116	1					
ANR	4985156	AssignmentExpression	* list = r_bin_get_imports ( c -> bin )		4985116	2		=			
ANR	4985157	Identifier	list		4985116	0					
ANR	4985158	CallExpression	r_bin_get_imports ( c -> bin )		4985116	1					
ANR	4985159	Callee	r_bin_get_imports		4985116	0					
ANR	4985160	Identifier	r_bin_get_imports		4985116	0					
ANR	4985161	ArgumentList	c -> bin		4985116	1					
ANR	4985162	Argument	c -> bin		4985116	0					
ANR	4985163	PtrMemberAccess	c -> bin		4985116	0					
ANR	4985164	Identifier	c		4985116	0					
ANR	4985165	Identifier	bin		4985116	1					
ANR	4985166	ExpressionStatement	"r_list_sort ( list , ( RListComparator ) import_cmp )"	645:1:16180:16228	4985116	5	True				
ANR	4985167	CallExpression	"r_list_sort ( list , ( RListComparator ) import_cmp )"		4985116	0					
ANR	4985168	Callee	r_list_sort		4985116	0					
ANR	4985169	Identifier	r_list_sort		4985116	0					
ANR	4985170	ArgumentList	list		4985116	1					
ANR	4985171	Argument	list		4985116	0					
ANR	4985172	Identifier	list		4985116	0					
ANR	4985173	Argument	( RListComparator ) import_cmp		4985116	1					
ANR	4985174	CastExpression	( RListComparator ) import_cmp		4985116	0					
ANR	4985175	CastTarget	RListComparator		4985116	0					
ANR	4985176	Identifier	import_cmp		4985116	1					
ANR	4985177	ExpressionStatement	* len = 0	647:1:16232:16240	4985116	6	True				
ANR	4985178	AssignmentExpression	* len = 0		4985116	0		=			
ANR	4985179	UnaryOperationExpression	* len		4985116	0					
ANR	4985180	UnaryOperator	*		4985116	0					
ANR	4985181	Identifier	len		4985116	1					
ANR	4985182	PrimaryExpression	0		4985116	1					
ANR	4985183	Statement	r_list_foreach	649:1:16244:16257	4985116	7	True				
ANR	4985184	Statement	(	649:16:16259:16259	4985116	8	True				
ANR	4985185	Statement	list	649:17:16260:16263	4985116	9	True				
ANR	4985186	Statement	","	649:21:16264:16264	4985116	10	True				
ANR	4985187	Statement	iter	649:23:16266:16269	4985116	11	True				
ANR	4985188	Statement	","	649:27:16270:16270	4985116	12	True				
ANR	4985189	Statement	str	649:29:16272:16274	4985116	13	True				
ANR	4985190	Statement	)	649:32:16275:16275	4985116	14	True				
ANR	4985191	CompoundStatement		15:34:247:247	4985116	15					
ANR	4985192	IfStatement	"if ( ! old || ( old && import_cmp ( old , str ) != 0 ) )"		4985116	0					
ANR	4985193	Condition	"! old || ( old && import_cmp ( old , str ) != 0 )"	650:6:16285:16327	4985116	0	True				
ANR	4985194	OrExpression	"! old || ( old && import_cmp ( old , str ) != 0 )"		4985116	0		||			
ANR	4985195	UnaryOperationExpression	! old		4985116	0					
ANR	4985196	UnaryOperator	!		4985116	0					
ANR	4985197	Identifier	old		4985116	1					
ANR	4985198	AndExpression	"old && import_cmp ( old , str ) != 0"		4985116	1		&&			
ANR	4985199	Identifier	old		4985116	0					
ANR	4985200	EqualityExpression	"import_cmp ( old , str ) != 0"		4985116	1		!=			
ANR	4985201	CallExpression	"import_cmp ( old , str )"		4985116	0					
ANR	4985202	Callee	import_cmp		4985116	0					
ANR	4985203	Identifier	import_cmp		4985116	0					
ANR	4985204	ArgumentList	old		4985116	1					
ANR	4985205	Argument	old		4985116	0					
ANR	4985206	Identifier	old		4985116	0					
ANR	4985207	Argument	str		4985116	1					
ANR	4985208	Identifier	str		4985116	0					
ANR	4985209	PrimaryExpression	0		4985116	1					
ANR	4985210	CompoundStatement		16:51:300:300	4985116	1					
ANR	4985211	ExpressionStatement	* len += strlen ( str -> name ) + 1	651:3:16335:16365	4985116	0	True				
ANR	4985212	AssignmentExpression	* len += strlen ( str -> name ) + 1		4985116	0		+=			
ANR	4985213	UnaryOperationExpression	* len		4985116	0					
ANR	4985214	UnaryOperator	*		4985116	0					
ANR	4985215	Identifier	len		4985116	1					
ANR	4985216	AdditiveExpression	strlen ( str -> name ) + 1		4985116	1		+			
ANR	4985217	CallExpression	strlen ( str -> name )		4985116	0					
ANR	4985218	Callee	strlen		4985116	0					
ANR	4985219	Identifier	strlen		4985116	0					
ANR	4985220	ArgumentList	str -> name		4985116	1					
ANR	4985221	Argument	str -> name		4985116	0					
ANR	4985222	PtrMemberAccess	str -> name		4985116	0					
ANR	4985223	Identifier	str		4985116	0					
ANR	4985224	Identifier	name		4985116	1					
ANR	4985225	PrimaryExpression	1		4985116	1					
ANR	4985226	ExpressionStatement	old = str	652:3:16370:16379	4985116	1	True				
ANR	4985227	AssignmentExpression	old = str		4985116	0		=			
ANR	4985228	Identifier	old		4985116	0					
ANR	4985229	Identifier	str		4985116	1					
ANR	4985230	ExpressionStatement	ptr = buf = malloc ( * len + 1 )	655:1:16389:16418	4985116	16	True				
ANR	4985231	AssignmentExpression	ptr = buf = malloc ( * len + 1 )		4985116	0		=			
ANR	4985232	Identifier	ptr		4985116	0					
ANR	4985233	AssignmentExpression	buf = malloc ( * len + 1 )		4985116	1		=			
ANR	4985234	Identifier	buf		4985116	0					
ANR	4985235	CallExpression	malloc ( * len + 1 )		4985116	1					
ANR	4985236	Callee	malloc		4985116	0					
ANR	4985237	Identifier	malloc		4985116	0					
ANR	4985238	ArgumentList	* len + 1		4985116	1					
ANR	4985239	Argument	* len + 1		4985116	0					
ANR	4985240	AdditiveExpression	* len + 1		4985116	0		+			
ANR	4985241	UnaryOperationExpression	* len		4985116	0					
ANR	4985242	UnaryOperator	*		4985116	0					
ANR	4985243	Identifier	len		4985116	1					
ANR	4985244	PrimaryExpression	1		4985116	1					
ANR	4985245	IfStatement	if ( ! ptr )		4985116	17					
ANR	4985246	Condition	! ptr	656:5:16425:16428	4985116	0	True				
ANR	4985247	UnaryOperationExpression	! ptr		4985116	0					
ANR	4985248	UnaryOperator	!		4985116	0					
ANR	4985249	Identifier	ptr		4985116	1					
ANR	4985250	CompoundStatement		22:11:401:401	4985116	1					
ANR	4985251	ReturnStatement	return NULL ;	657:2:16435:16446	4985116	0	True				
ANR	4985252	Identifier	NULL		4985116	0					
ANR	4985253	ExpressionStatement	old = NULL	660:1:16453:16463	4985116	18	True				
ANR	4985254	AssignmentExpression	old = NULL		4985116	0		=			
ANR	4985255	Identifier	old		4985116	0					
ANR	4985256	Identifier	NULL		4985116	1					
ANR	4985257	Statement	r_list_foreach	662:1:16467:16480	4985116	19	True				
ANR	4985258	Statement	(	662:16:16482:16482	4985116	20	True				
ANR	4985259	Statement	list	662:17:16483:16486	4985116	21	True				
ANR	4985260	Statement	","	662:21:16487:16487	4985116	22	True				
ANR	4985261	Statement	iter	662:23:16489:16492	4985116	23	True				
ANR	4985262	Statement	","	662:27:16493:16493	4985116	24	True				
ANR	4985263	Statement	str	662:29:16495:16497	4985116	25	True				
ANR	4985264	Statement	)	662:32:16498:16498	4985116	26	True				
ANR	4985265	CompoundStatement		32:2:530:562	4985116	27					
ANR	4985266	IfStatement	"if ( old && ! import_cmp ( old , str ) )"		4985116	0					
ANR	4985267	Condition	"old && ! import_cmp ( old , str )"	663:6:16508:16536	4985116	0	True				
ANR	4985268	AndExpression	"old && ! import_cmp ( old , str )"		4985116	0		&&			
ANR	4985269	Identifier	old		4985116	0					
ANR	4985270	UnaryOperationExpression	"! import_cmp ( old , str )"		4985116	1					
ANR	4985271	UnaryOperator	!		4985116	0					
ANR	4985272	CallExpression	"import_cmp ( old , str )"		4985116	1					
ANR	4985273	Callee	import_cmp		4985116	0					
ANR	4985274	Identifier	import_cmp		4985116	0					
ANR	4985275	ArgumentList	old		4985116	1					
ANR	4985276	Argument	old		4985116	0					
ANR	4985277	Identifier	old		4985116	0					
ANR	4985278	Argument	str		4985116	1					
ANR	4985279	Identifier	str		4985116	0					
ANR	4985280	CompoundStatement		29:37:509:509	4985116	1					
ANR	4985281	ContinueStatement	continue ;	664:3:16544:16552	4985116	0	True				
ANR	4985282	IdentifierDeclStatement	int namelen = strlen ( str -> name ) ;	666:2:16560:16592	4985116	1	True				
ANR	4985283	IdentifierDecl	namelen = strlen ( str -> name )		4985116	0					
ANR	4985284	IdentifierDeclType	int		4985116	0					
ANR	4985285	Identifier	namelen		4985116	1					
ANR	4985286	AssignmentExpression	namelen = strlen ( str -> name )		4985116	2		=			
ANR	4985287	Identifier	namelen		4985116	0					
ANR	4985288	CallExpression	strlen ( str -> name )		4985116	1					
ANR	4985289	Callee	strlen		4985116	0					
ANR	4985290	Identifier	strlen		4985116	0					
ANR	4985291	ArgumentList	str -> name		4985116	1					
ANR	4985292	Argument	str -> name		4985116	0					
ANR	4985293	PtrMemberAccess	str -> name		4985116	0					
ANR	4985294	Identifier	str		4985116	0					
ANR	4985295	Identifier	name		4985116	1					
ANR	4985296	ExpressionStatement	"memcpy ( ptr , str -> name , namelen )"	667:2:16596:16628	4985116	2	True				
ANR	4985297	CallExpression	"memcpy ( ptr , str -> name , namelen )"		4985116	0					
ANR	4985298	Callee	memcpy		4985116	0					
ANR	4985299	Identifier	memcpy		4985116	0					
ANR	4985300	ArgumentList	ptr		4985116	1					
ANR	4985301	Argument	ptr		4985116	0					
ANR	4985302	Identifier	ptr		4985116	0					
ANR	4985303	Argument	str -> name		4985116	1					
ANR	4985304	PtrMemberAccess	str -> name		4985116	0					
ANR	4985305	Identifier	str		4985116	0					
ANR	4985306	Identifier	name		4985116	1					
ANR	4985307	Argument	namelen		4985116	2					
ANR	4985308	Identifier	namelen		4985116	0					
ANR	4985309	ExpressionStatement	ptr += namelen	668:2:16632:16646	4985116	3	True				
ANR	4985310	AssignmentExpression	ptr += namelen		4985116	0		+=			
ANR	4985311	Identifier	ptr		4985116	0					
ANR	4985312	Identifier	namelen		4985116	1					
ANR	4985313	ExpressionStatement	* ptr ++ = '\\n'	669:2:16650:16663	4985116	4	True				
ANR	4985314	AssignmentExpression	* ptr ++ = '\\n'		4985116	0		=			
ANR	4985315	UnaryOperationExpression	* ptr ++		4985116	0					
ANR	4985316	UnaryOperator	*		4985116	0					
ANR	4985317	PostIncDecOperationExpression	ptr ++		4985116	1					
ANR	4985318	Identifier	ptr		4985116	0					
ANR	4985319	IncDec	++		4985116	1					
ANR	4985320	PrimaryExpression	'\\n'		4985116	1					
ANR	4985321	ExpressionStatement	old = str	670:2:16667:16676	4985116	5	True				
ANR	4985322	AssignmentExpression	old = str		4985116	0		=			
ANR	4985323	Identifier	old		4985116	0					
ANR	4985324	Identifier	str		4985116	1					
ANR	4985325	ExpressionStatement	* ptr = 0	672:1:16682:16690	4985116	28	True				
ANR	4985326	AssignmentExpression	* ptr = 0		4985116	0		=			
ANR	4985327	UnaryOperationExpression	* ptr		4985116	0					
ANR	4985328	UnaryOperator	*		4985116	0					
ANR	4985329	Identifier	ptr		4985116	1					
ANR	4985330	PrimaryExpression	0		4985116	1					
ANR	4985331	ExpressionStatement	* len = strlen ( ( const char * ) buf )	674:1:16694:16728	4985116	29	True				
ANR	4985332	AssignmentExpression	* len = strlen ( ( const char * ) buf )		4985116	0		=			
ANR	4985333	UnaryOperationExpression	* len		4985116	0					
ANR	4985334	UnaryOperator	*		4985116	0					
ANR	4985335	Identifier	len		4985116	1					
ANR	4985336	CallExpression	strlen ( ( const char * ) buf )		4985116	1					
ANR	4985337	Callee	strlen		4985116	0					
ANR	4985338	Identifier	strlen		4985116	0					
ANR	4985339	ArgumentList	( const char * ) buf		4985116	1					
ANR	4985340	Argument	( const char * ) buf		4985116	0					
ANR	4985341	CastExpression	( const char * ) buf		4985116	0					
ANR	4985342	CastTarget	const char *		4985116	0					
ANR	4985343	Identifier	buf		4985116	1					
ANR	4985344	ReturnStatement	return buf ;	675:1:16731:16741	4985116	30	True				
ANR	4985345	Identifier	buf		4985116	0					
ANR	4985346	ReturnType	static ut8 *		4985116	1					
ANR	4985347	Identifier	get_imports		4985116	2					
ANR	4985348	ParameterList	"RCore * c , int * len"		4985116	3					
ANR	4985349	Parameter	RCore * c	635:24:16009:16016	4985116	0	True				
ANR	4985350	ParameterType	RCore *		4985116	0					
ANR	4985351	Identifier	c		4985116	1					
ANR	4985352	Parameter	int * len	635:34:16019:16026	4985116	1	True				
ANR	4985353	ParameterType	int *		4985116	0					
ANR	4985354	Identifier	len		4985116	1					
ANR	4985355	CFGEntryNode	ENTRY		4985116		True				
ANR	4985356	CFGExitNode	EXIT		4985116		True				
ANR	4985357	CFGErrorNode	ERROR		4985116		True				
ANR	4985358	Symbol	malloc		4985116						
ANR	4985359	Symbol	c		4985116						
ANR	4985360	Symbol	NULL		4985116						
ANR	4985361	Symbol	old		4985116						
ANR	4985362	Symbol	* ptr ++		4985116						
ANR	4985363	Symbol	iter		4985116						
ANR	4985364	Symbol	namelen		4985116						
ANR	4985365	Symbol	c -> bin		4985116						
ANR	4985366	Symbol	list		4985116						
ANR	4985367	Symbol	* c		4985116						
ANR	4985368	Symbol	ptr		4985116						
ANR	4985369	Symbol	str		4985116						
ANR	4985370	Symbol	strlen		4985116						
ANR	4985371	Symbol	buf		4985116						
ANR	4985372	Symbol	r_bin_get_imports		4985116						
ANR	4985373	Symbol	len		4985116						
ANR	4985374	Symbol	str -> name		4985116						
ANR	4985375	Symbol	* ptr		4985116						
ANR	4985376	Symbol	* str		4985116						
ANR	4985377	Symbol	import_cmp		4985116						
ANR	4985378	Symbol	* len		4985116						
ANR	4985379	Function	bs_cmp	678:0:16746:16911							
ANR	4985380	FunctionDef	"bs_cmp (const RBinString * a , const RBinString * b)"		4985379	0					
ANR	4985381	CompoundStatement		678:60:16806:16911	4985379	0					
ANR	4985382	IdentifierDeclStatement	int diff = a -> length - b -> length ;	679:1:16809:16841	4985379	0	True				
ANR	4985383	IdentifierDecl	diff = a -> length - b -> length		4985379	0					
ANR	4985384	IdentifierDeclType	int		4985379	0					
ANR	4985385	Identifier	diff		4985379	1					
ANR	4985386	AssignmentExpression	diff = a -> length - b -> length		4985379	2		=			
ANR	4985387	Identifier	diff		4985379	0					
ANR	4985388	AdditiveExpression	a -> length - b -> length		4985379	1		-			
ANR	4985389	PtrMemberAccess	a -> length		4985379	0					
ANR	4985390	Identifier	a		4985379	0					
ANR	4985391	Identifier	length		4985379	1					
ANR	4985392	PtrMemberAccess	b -> length		4985379	1					
ANR	4985393	Identifier	b		4985379	0					
ANR	4985394	Identifier	length		4985379	1					
ANR	4985395	ReturnStatement	"return diff == 0 ? strncmp ( a -> string , b -> string , a -> length ) : diff ;"	680:1:16844:16909	4985379	1	True				
ANR	4985396	ConditionalExpression	"diff == 0 ? strncmp ( a -> string , b -> string , a -> length ) : diff"		4985379	0					
ANR	4985397	Condition	diff == 0		4985379	0					
ANR	4985398	EqualityExpression	diff == 0		4985379	0		==			
ANR	4985399	Identifier	diff		4985379	0					
ANR	4985400	PrimaryExpression	0		4985379	1					
ANR	4985401	CallExpression	"strncmp ( a -> string , b -> string , a -> length )"		4985379	1					
ANR	4985402	Callee	strncmp		4985379	0					
ANR	4985403	Identifier	strncmp		4985379	0					
ANR	4985404	ArgumentList	a -> string		4985379	1					
ANR	4985405	Argument	a -> string		4985379	0					
ANR	4985406	PtrMemberAccess	a -> string		4985379	0					
ANR	4985407	Identifier	a		4985379	0					
ANR	4985408	Identifier	string		4985379	1					
ANR	4985409	Argument	b -> string		4985379	1					
ANR	4985410	PtrMemberAccess	b -> string		4985379	0					
ANR	4985411	Identifier	b		4985379	0					
ANR	4985412	Identifier	string		4985379	1					
ANR	4985413	Argument	a -> length		4985379	2					
ANR	4985414	PtrMemberAccess	a -> length		4985379	0					
ANR	4985415	Identifier	a		4985379	0					
ANR	4985416	Identifier	length		4985379	1					
ANR	4985417	Identifier	diff		4985379	2					
ANR	4985418	ReturnType	static int		4985379	1					
ANR	4985419	Identifier	bs_cmp		4985379	2					
ANR	4985420	ParameterList	"const RBinString * a , const RBinString * b"		4985379	3					
ANR	4985421	Parameter	const RBinString * a	678:18:16764:16782	4985379	0	True				
ANR	4985422	ParameterType	const RBinString *		4985379	0					
ANR	4985423	Identifier	a		4985379	1					
ANR	4985424	Parameter	const RBinString * b	678:39:16785:16803	4985379	1	True				
ANR	4985425	ParameterType	const RBinString *		4985379	0					
ANR	4985426	Identifier	b		4985379	1					
ANR	4985427	CFGEntryNode	ENTRY		4985379		True				
ANR	4985428	CFGExitNode	EXIT		4985379		True				
ANR	4985429	Symbol	a		4985379						
ANR	4985430	Symbol	strncmp		4985379						
ANR	4985431	Symbol	b		4985379						
ANR	4985432	Symbol	a -> string		4985379						
ANR	4985433	Symbol	b -> string		4985379						
ANR	4985434	Symbol	b -> length		4985379						
ANR	4985435	Symbol	diff		4985379						
ANR	4985436	Symbol	* a		4985379						
ANR	4985437	Symbol	* b		4985379						
ANR	4985438	Symbol	a -> length		4985379						
ANR	4985439	Function	get_strings	683:0:16914:17594							
ANR	4985440	FunctionDef	"get_strings (RCore * c , int * len)"		4985439	0					
ANR	4985441	CompoundStatement		683:44:16958:17594	4985439	0					
ANR	4985442	IdentifierDeclStatement	RList * list = r_bin_get_strings ( c -> bin ) ;	684:1:16961:17001	4985439	0	True				
ANR	4985443	IdentifierDecl	* list = r_bin_get_strings ( c -> bin )		4985439	0					
ANR	4985444	IdentifierDeclType	RList *		4985439	0					
ANR	4985445	Identifier	list		4985439	1					
ANR	4985446	AssignmentExpression	* list = r_bin_get_strings ( c -> bin )		4985439	2		=			
ANR	4985447	Identifier	list		4985439	0					
ANR	4985448	CallExpression	r_bin_get_strings ( c -> bin )		4985439	1					
ANR	4985449	Callee	r_bin_get_strings		4985439	0					
ANR	4985450	Identifier	r_bin_get_strings		4985439	0					
ANR	4985451	ArgumentList	c -> bin		4985439	1					
ANR	4985452	Argument	c -> bin		4985439	0					
ANR	4985453	PtrMemberAccess	c -> bin		4985439	0					
ANR	4985454	Identifier	c		4985439	0					
ANR	4985455	Identifier	bin		4985439	1					
ANR	4985456	IdentifierDeclStatement	RListIter * iter ;	685:1:17004:17019	4985439	1	True				
ANR	4985457	IdentifierDecl	* iter		4985439	0					
ANR	4985458	IdentifierDeclType	RListIter *		4985439	0					
ANR	4985459	Identifier	iter		4985439	1					
ANR	4985460	IdentifierDeclStatement	"RBinString * str , * old = NULL ;"	686:1:17022:17050	4985439	2	True				
ANR	4985461	IdentifierDecl	* str		4985439	0					
ANR	4985462	IdentifierDeclType	RBinString *		4985439	0					
ANR	4985463	Identifier	str		4985439	1					
ANR	4985464	IdentifierDecl	* old = NULL		4985439	1					
ANR	4985465	IdentifierDeclType	RBinString *		4985439	0					
ANR	4985466	Identifier	old		4985439	1					
ANR	4985467	AssignmentExpression	* old = NULL		4985439	2		=			
ANR	4985468	Identifier	NULL		4985439	0					
ANR	4985469	Identifier	NULL		4985439	1					
ANR	4985470	IdentifierDeclStatement	"ut8 * buf , * ptr ;"	687:1:17053:17067	4985439	3	True				
ANR	4985471	IdentifierDecl	* buf		4985439	0					
ANR	4985472	IdentifierDeclType	ut8 *		4985439	0					
ANR	4985473	Identifier	buf		4985439	1					
ANR	4985474	IdentifierDecl	* ptr		4985439	1					
ANR	4985475	IdentifierDeclType	ut8 *		4985439	0					
ANR	4985476	Identifier	ptr		4985439	1					
ANR	4985477	ExpressionStatement	"r_list_sort ( list , ( RListComparator ) bs_cmp )"	689:1:17071:17115	4985439	4	True				
ANR	4985478	CallExpression	"r_list_sort ( list , ( RListComparator ) bs_cmp )"		4985439	0					
ANR	4985479	Callee	r_list_sort		4985439	0					
ANR	4985480	Identifier	r_list_sort		4985439	0					
ANR	4985481	ArgumentList	list		4985439	1					
ANR	4985482	Argument	list		4985439	0					
ANR	4985483	Identifier	list		4985439	0					
ANR	4985484	Argument	( RListComparator ) bs_cmp		4985439	1					
ANR	4985485	CastExpression	( RListComparator ) bs_cmp		4985439	0					
ANR	4985486	CastTarget	RListComparator		4985439	0					
ANR	4985487	Identifier	bs_cmp		4985439	1					
ANR	4985488	ExpressionStatement	* len = 0	691:1:17119:17127	4985439	5	True				
ANR	4985489	AssignmentExpression	* len = 0		4985439	0		=			
ANR	4985490	UnaryOperationExpression	* len		4985439	0					
ANR	4985491	UnaryOperator	*		4985439	0					
ANR	4985492	Identifier	len		4985439	1					
ANR	4985493	PrimaryExpression	0		4985439	1					
ANR	4985494	Statement	r_list_foreach	693:1:17131:17144	4985439	6	True				
ANR	4985495	Statement	(	693:16:17146:17146	4985439	7	True				
ANR	4985496	Statement	list	693:17:17147:17150	4985439	8	True				
ANR	4985497	Statement	","	693:21:17151:17151	4985439	9	True				
ANR	4985498	Statement	iter	693:23:17153:17156	4985439	10	True				
ANR	4985499	Statement	","	693:27:17157:17157	4985439	11	True				
ANR	4985500	Statement	str	693:29:17159:17161	4985439	12	True				
ANR	4985501	Statement	)	693:32:17162:17162	4985439	13	True				
ANR	4985502	CompoundStatement		11:34:205:205	4985439	14					
ANR	4985503	IfStatement	"if ( ! old || ( old && bs_cmp ( old , str ) != 0 ) )"		4985439	0					
ANR	4985504	Condition	"! old || ( old && bs_cmp ( old , str ) != 0 )"	694:6:17172:17210	4985439	0	True				
ANR	4985505	OrExpression	"! old || ( old && bs_cmp ( old , str ) != 0 )"		4985439	0		||			
ANR	4985506	UnaryOperationExpression	! old		4985439	0					
ANR	4985507	UnaryOperator	!		4985439	0					
ANR	4985508	Identifier	old		4985439	1					
ANR	4985509	AndExpression	"old && bs_cmp ( old , str ) != 0"		4985439	1		&&			
ANR	4985510	Identifier	old		4985439	0					
ANR	4985511	EqualityExpression	"bs_cmp ( old , str ) != 0"		4985439	1		!=			
ANR	4985512	CallExpression	"bs_cmp ( old , str )"		4985439	0					
ANR	4985513	Callee	bs_cmp		4985439	0					
ANR	4985514	Identifier	bs_cmp		4985439	0					
ANR	4985515	ArgumentList	old		4985439	1					
ANR	4985516	Argument	old		4985439	0					
ANR	4985517	Identifier	old		4985439	0					
ANR	4985518	Argument	str		4985439	1					
ANR	4985519	Identifier	str		4985439	0					
ANR	4985520	PrimaryExpression	0		4985439	1					
ANR	4985521	CompoundStatement		12:47:254:254	4985439	1					
ANR	4985522	ExpressionStatement	* len += str -> length + 1	695:3:17218:17241	4985439	0	True				
ANR	4985523	AssignmentExpression	* len += str -> length + 1		4985439	0		+=			
ANR	4985524	UnaryOperationExpression	* len		4985439	0					
ANR	4985525	UnaryOperator	*		4985439	0					
ANR	4985526	Identifier	len		4985439	1					
ANR	4985527	AdditiveExpression	str -> length + 1		4985439	1		+			
ANR	4985528	PtrMemberAccess	str -> length		4985439	0					
ANR	4985529	Identifier	str		4985439	0					
ANR	4985530	Identifier	length		4985439	1					
ANR	4985531	PrimaryExpression	1		4985439	1					
ANR	4985532	ExpressionStatement	old = str	696:3:17246:17255	4985439	1	True				
ANR	4985533	AssignmentExpression	old = str		4985439	0		=			
ANR	4985534	Identifier	old		4985439	0					
ANR	4985535	Identifier	str		4985439	1					
ANR	4985536	ExpressionStatement	ptr = buf = malloc ( * len + 1 )	700:1:17266:17295	4985439	15	True				
ANR	4985537	AssignmentExpression	ptr = buf = malloc ( * len + 1 )		4985439	0		=			
ANR	4985538	Identifier	ptr		4985439	0					
ANR	4985539	AssignmentExpression	buf = malloc ( * len + 1 )		4985439	1		=			
ANR	4985540	Identifier	buf		4985439	0					
ANR	4985541	CallExpression	malloc ( * len + 1 )		4985439	1					
ANR	4985542	Callee	malloc		4985439	0					
ANR	4985543	Identifier	malloc		4985439	0					
ANR	4985544	ArgumentList	* len + 1		4985439	1					
ANR	4985545	Argument	* len + 1		4985439	0					
ANR	4985546	AdditiveExpression	* len + 1		4985439	0		+			
ANR	4985547	UnaryOperationExpression	* len		4985439	0					
ANR	4985548	UnaryOperator	*		4985439	0					
ANR	4985549	Identifier	len		4985439	1					
ANR	4985550	PrimaryExpression	1		4985439	1					
ANR	4985551	IfStatement	if ( ! ptr )		4985439	16					
ANR	4985552	Condition	! ptr	701:5:17302:17305	4985439	0	True				
ANR	4985553	UnaryOperationExpression	! ptr		4985439	0					
ANR	4985554	UnaryOperator	!		4985439	0					
ANR	4985555	Identifier	ptr		4985439	1					
ANR	4985556	CompoundStatement		19:11:349:349	4985439	1					
ANR	4985557	ReturnStatement	return NULL ;	702:2:17312:17323	4985439	0	True				
ANR	4985558	Identifier	NULL		4985439	0					
ANR	4985559	ExpressionStatement	old = NULL	705:1:17330:17340	4985439	17	True				
ANR	4985560	AssignmentExpression	old = NULL		4985439	0		=			
ANR	4985561	Identifier	old		4985439	0					
ANR	4985562	Identifier	NULL		4985439	1					
ANR	4985563	Statement	r_list_foreach	707:1:17344:17357	4985439	18	True				
ANR	4985564	Statement	(	707:16:17359:17359	4985439	19	True				
ANR	4985565	Statement	list	707:17:17360:17363	4985439	20	True				
ANR	4985566	Statement	","	707:21:17364:17364	4985439	21	True				
ANR	4985567	Statement	iter	707:23:17366:17369	4985439	22	True				
ANR	4985568	Statement	","	707:27:17370:17370	4985439	23	True				
ANR	4985569	Statement	str	707:29:17372:17374	4985439	24	True				
ANR	4985570	Statement	)	707:32:17375:17375	4985439	25	True				
ANR	4985571	CompoundStatement		25:34:418:418	4985439	26					
ANR	4985572	IfStatement	"if ( old && bs_cmp ( old , str ) == 0 )"		4985439	0					
ANR	4985573	Condition	"old && bs_cmp ( old , str ) == 0"	708:6:17385:17413	4985439	0	True				
ANR	4985574	AndExpression	"old && bs_cmp ( old , str ) == 0"		4985439	0		&&			
ANR	4985575	Identifier	old		4985439	0					
ANR	4985576	EqualityExpression	"bs_cmp ( old , str ) == 0"		4985439	1		==			
ANR	4985577	CallExpression	"bs_cmp ( old , str )"		4985439	0					
ANR	4985578	Callee	bs_cmp		4985439	0					
ANR	4985579	Identifier	bs_cmp		4985439	0					
ANR	4985580	ArgumentList	old		4985439	1					
ANR	4985581	Argument	old		4985439	0					
ANR	4985582	Identifier	old		4985439	0					
ANR	4985583	Argument	str		4985439	1					
ANR	4985584	Identifier	str		4985439	0					
ANR	4985585	PrimaryExpression	0		4985439	1					
ANR	4985586	CompoundStatement		26:37:457:457	4985439	1					
ANR	4985587	ContinueStatement	continue ;	709:3:17421:17429	4985439	0	True				
ANR	4985588	ExpressionStatement	"memcpy ( ptr , str -> string , str -> length )"	711:2:17437:17475	4985439	1	True				
ANR	4985589	CallExpression	"memcpy ( ptr , str -> string , str -> length )"		4985439	0					
ANR	4985590	Callee	memcpy		4985439	0					
ANR	4985591	Identifier	memcpy		4985439	0					
ANR	4985592	ArgumentList	ptr		4985439	1					
ANR	4985593	Argument	ptr		4985439	0					
ANR	4985594	Identifier	ptr		4985439	0					
ANR	4985595	Argument	str -> string		4985439	1					
ANR	4985596	PtrMemberAccess	str -> string		4985439	0					
ANR	4985597	Identifier	str		4985439	0					
ANR	4985598	Identifier	string		4985439	1					
ANR	4985599	Argument	str -> length		4985439	2					
ANR	4985600	PtrMemberAccess	str -> length		4985439	0					
ANR	4985601	Identifier	str		4985439	0					
ANR	4985602	Identifier	length		4985439	1					
ANR	4985603	ExpressionStatement	ptr += str -> length	712:2:17479:17497	4985439	2	True				
ANR	4985604	AssignmentExpression	ptr += str -> length		4985439	0		+=			
ANR	4985605	Identifier	ptr		4985439	0					
ANR	4985606	PtrMemberAccess	str -> length		4985439	1					
ANR	4985607	Identifier	str		4985439	0					
ANR	4985608	Identifier	length		4985439	1					
ANR	4985609	ExpressionStatement	* ptr ++ = '\\n'	713:2:17501:17514	4985439	3	True				
ANR	4985610	AssignmentExpression	* ptr ++ = '\\n'		4985439	0		=			
ANR	4985611	UnaryOperationExpression	* ptr ++		4985439	0					
ANR	4985612	UnaryOperator	*		4985439	0					
ANR	4985613	PostIncDecOperationExpression	ptr ++		4985439	1					
ANR	4985614	Identifier	ptr		4985439	0					
ANR	4985615	IncDec	++		4985439	1					
ANR	4985616	PrimaryExpression	'\\n'		4985439	1					
ANR	4985617	ExpressionStatement	old = str	714:2:17518:17527	4985439	4	True				
ANR	4985618	AssignmentExpression	old = str		4985439	0		=			
ANR	4985619	Identifier	old		4985439	0					
ANR	4985620	Identifier	str		4985439	1					
ANR	4985621	ExpressionStatement	* ptr = 0	716:1:17533:17541	4985439	27	True				
ANR	4985622	AssignmentExpression	* ptr = 0		4985439	0		=			
ANR	4985623	UnaryOperationExpression	* ptr		4985439	0					
ANR	4985624	UnaryOperator	*		4985439	0					
ANR	4985625	Identifier	ptr		4985439	1					
ANR	4985626	PrimaryExpression	0		4985439	1					
ANR	4985627	ExpressionStatement	* len = strlen ( ( const char * ) buf )	718:1:17545:17579	4985439	28	True				
ANR	4985628	AssignmentExpression	* len = strlen ( ( const char * ) buf )		4985439	0		=			
ANR	4985629	UnaryOperationExpression	* len		4985439	0					
ANR	4985630	UnaryOperator	*		4985439	0					
ANR	4985631	Identifier	len		4985439	1					
ANR	4985632	CallExpression	strlen ( ( const char * ) buf )		4985439	1					
ANR	4985633	Callee	strlen		4985439	0					
ANR	4985634	Identifier	strlen		4985439	0					
ANR	4985635	ArgumentList	( const char * ) buf		4985439	1					
ANR	4985636	Argument	( const char * ) buf		4985439	0					
ANR	4985637	CastExpression	( const char * ) buf		4985439	0					
ANR	4985638	CastTarget	const char *		4985439	0					
ANR	4985639	Identifier	buf		4985439	1					
ANR	4985640	ReturnStatement	return buf ;	719:1:17582:17592	4985439	29	True				
ANR	4985641	Identifier	buf		4985439	0					
ANR	4985642	ReturnType	static ut8 *		4985439	1					
ANR	4985643	Identifier	get_strings		4985439	2					
ANR	4985644	ParameterList	"RCore * c , int * len"		4985439	3					
ANR	4985645	Parameter	RCore * c	683:24:16938:16945	4985439	0	True				
ANR	4985646	ParameterType	RCore *		4985439	0					
ANR	4985647	Identifier	c		4985439	1					
ANR	4985648	Parameter	int * len	683:34:16948:16955	4985439	1	True				
ANR	4985649	ParameterType	int *		4985439	0					
ANR	4985650	Identifier	len		4985439	1					
ANR	4985651	CFGEntryNode	ENTRY		4985439		True				
ANR	4985652	CFGExitNode	EXIT		4985439		True				
ANR	4985653	CFGErrorNode	ERROR		4985439		True				
ANR	4985654	Symbol	str -> length		4985439						
ANR	4985655	Symbol	malloc		4985439						
ANR	4985656	Symbol	c		4985439						
ANR	4985657	Symbol	NULL		4985439						
ANR	4985658	Symbol	bs_cmp		4985439						
ANR	4985659	Symbol	old		4985439						
ANR	4985660	Symbol	* ptr ++		4985439						
ANR	4985661	Symbol	iter		4985439						
ANR	4985662	Symbol	c -> bin		4985439						
ANR	4985663	Symbol	list		4985439						
ANR	4985664	Symbol	* c		4985439						
ANR	4985665	Symbol	r_bin_get_strings		4985439						
ANR	4985666	Symbol	ptr		4985439						
ANR	4985667	Symbol	str		4985439						
ANR	4985668	Symbol	strlen		4985439						
ANR	4985669	Symbol	buf		4985439						
ANR	4985670	Symbol	len		4985439						
ANR	4985671	Symbol	* ptr		4985439						
ANR	4985672	Symbol	* str		4985439						
ANR	4985673	Symbol	str -> string		4985439						
ANR	4985674	Symbol	* len		4985439						
ANR	4985675	Function	get_graph_commands	722:0:17597:18116							
ANR	4985676	FunctionDef	"get_graph_commands (RCore * c , ut64 off)"		4985675	0					
ANR	4985677	CompoundStatement		722:52:17649:18116	4985675	0					
ANR	4985678	IdentifierDeclStatement	bool tmp_html = r_cons_singleton ( ) -> is_html ;	723:8:17659:17703	4985675	0	True				
ANR	4985679	IdentifierDecl	tmp_html = r_cons_singleton ( ) -> is_html		4985675	0					
ANR	4985680	IdentifierDeclType	bool		4985675	0					
ANR	4985681	Identifier	tmp_html		4985675	1					
ANR	4985682	AssignmentExpression	tmp_html = r_cons_singleton ( ) -> is_html		4985675	2		=			
ANR	4985683	Identifier	tmp_html		4985675	0					
ANR	4985684	PtrMemberAccess	r_cons_singleton ( ) -> is_html		4985675	1					
ANR	4985685	CallExpression	r_cons_singleton ( )		4985675	0					
ANR	4985686	Callee	r_cons_singleton		4985675	0					
ANR	4985687	Identifier	r_cons_singleton		4985675	0					
ANR	4985688	ArgumentList			4985675	1					
ANR	4985689	Identifier	is_html		4985675	1					
ANR	4985690	ExpressionStatement	r_cons_singleton ( ) -> is_html = false	724:8:17713:17749	4985675	1	True				
ANR	4985691	AssignmentExpression	r_cons_singleton ( ) -> is_html = false		4985675	0		=			
ANR	4985692	PtrMemberAccess	r_cons_singleton ( ) -> is_html		4985675	0					
ANR	4985693	CallExpression	r_cons_singleton ( )		4985675	0					
ANR	4985694	Callee	r_cons_singleton		4985675	0					
ANR	4985695	Identifier	r_cons_singleton		4985675	0					
ANR	4985696	ArgumentList			4985675	1					
ANR	4985697	Identifier	is_html		4985675	1					
ANR	4985698	Identifier	false		4985675	1					
ANR	4985699	ExpressionStatement	r_cons_push ( )	725:8:17759:17773	4985675	2	True				
ANR	4985700	CallExpression	r_cons_push ( )		4985675	0					
ANR	4985701	Callee	r_cons_push		4985675	0					
ANR	4985702	Identifier	r_cons_push		4985675	0					
ANR	4985703	ArgumentList			4985675	1					
ANR	4985704	ExpressionStatement	"r_core_anal_graph ( c , off , R_CORE_ANAL_GRAPHBODY | R_CORE_ANAL_GRAPHDIFF | R_CORE_ANAL_STAR )"	726:8:17783:17876	4985675	3	True				
ANR	4985705	CallExpression	"r_core_anal_graph ( c , off , R_CORE_ANAL_GRAPHBODY | R_CORE_ANAL_GRAPHDIFF | R_CORE_ANAL_STAR )"		4985675	0					
ANR	4985706	Callee	r_core_anal_graph		4985675	0					
ANR	4985707	Identifier	r_core_anal_graph		4985675	0					
ANR	4985708	ArgumentList	c		4985675	1					
ANR	4985709	Argument	c		4985675	0					
ANR	4985710	Identifier	c		4985675	0					
ANR	4985711	Argument	off		4985675	1					
ANR	4985712	Identifier	off		4985675	0					
ANR	4985713	Argument	R_CORE_ANAL_GRAPHBODY | R_CORE_ANAL_GRAPHDIFF | R_CORE_ANAL_STAR		4985675	2					
ANR	4985714	InclusiveOrExpression	R_CORE_ANAL_GRAPHBODY | R_CORE_ANAL_GRAPHDIFF | R_CORE_ANAL_STAR		4985675	0		|			
ANR	4985715	Identifier	R_CORE_ANAL_GRAPHBODY		4985675	0					
ANR	4985716	InclusiveOrExpression	R_CORE_ANAL_GRAPHDIFF | R_CORE_ANAL_STAR		4985675	1		|			
ANR	4985717	Identifier	R_CORE_ANAL_GRAPHDIFF		4985675	0					
ANR	4985718	Identifier	R_CORE_ANAL_STAR		4985675	1					
ANR	4985719	IdentifierDeclStatement	const char * static_str = r_cons_get_buffer ( ) ;	727:8:17886:17931	4985675	4	True				
ANR	4985720	IdentifierDecl	* static_str = r_cons_get_buffer ( )		4985675	0					
ANR	4985721	IdentifierDeclType	const char *		4985675	0					
ANR	4985722	Identifier	static_str		4985675	1					
ANR	4985723	AssignmentExpression	* static_str = r_cons_get_buffer ( )		4985675	2		=			
ANR	4985724	Identifier	static_str		4985675	0					
ANR	4985725	CallExpression	r_cons_get_buffer ( )		4985675	1					
ANR	4985726	Callee	r_cons_get_buffer		4985675	0					
ANR	4985727	Identifier	r_cons_get_buffer		4985675	0					
ANR	4985728	ArgumentList			4985675	1					
ANR	4985729	IdentifierDeclStatement	"char * retstr = strdup ( static_str ? static_str : """" ) ;"	728:8:17941:17991	4985675	5	True				
ANR	4985730	IdentifierDecl	"* retstr = strdup ( static_str ? static_str : """" )"		4985675	0					
ANR	4985731	IdentifierDeclType	char *		4985675	0					
ANR	4985732	Identifier	retstr		4985675	1					
ANR	4985733	AssignmentExpression	"* retstr = strdup ( static_str ? static_str : """" )"		4985675	2		=			
ANR	4985734	Identifier	retstr		4985675	0					
ANR	4985735	CallExpression	"strdup ( static_str ? static_str : """" )"		4985675	1					
ANR	4985736	Callee	strdup		4985675	0					
ANR	4985737	Identifier	strdup		4985675	0					
ANR	4985738	ArgumentList	"static_str ? static_str : """""		4985675	1					
ANR	4985739	Argument	"static_str ? static_str : """""		4985675	0					
ANR	4985740	ConditionalExpression	"static_str ? static_str : """""		4985675	0					
ANR	4985741	Condition	static_str		4985675	0					
ANR	4985742	Identifier	static_str		4985675	0					
ANR	4985743	Identifier	static_str		4985675	1					
ANR	4985744	PrimaryExpression	""""""		4985675	2					
ANR	4985745	ExpressionStatement	r_cons_pop ( )	729:8:18001:18014	4985675	6	True				
ANR	4985746	CallExpression	r_cons_pop ( )		4985675	0					
ANR	4985747	Callee	r_cons_pop		4985675	0					
ANR	4985748	Identifier	r_cons_pop		4985675	0					
ANR	4985749	ArgumentList			4985675	1					
ANR	4985750	ExpressionStatement	r_cons_echo ( NULL )	730:8:18024:18042	4985675	7	True				
ANR	4985751	CallExpression	r_cons_echo ( NULL )		4985675	0					
ANR	4985752	Callee	r_cons_echo		4985675	0					
ANR	4985753	Identifier	r_cons_echo		4985675	0					
ANR	4985754	ArgumentList	NULL		4985675	1					
ANR	4985755	Argument	NULL		4985675	0					
ANR	4985756	Identifier	NULL		4985675	0					
ANR	4985757	ExpressionStatement	r_cons_singleton ( ) -> is_html = tmp_html	731:8:18052:18091	4985675	8	True				
ANR	4985758	AssignmentExpression	r_cons_singleton ( ) -> is_html = tmp_html		4985675	0		=			
ANR	4985759	PtrMemberAccess	r_cons_singleton ( ) -> is_html		4985675	0					
ANR	4985760	CallExpression	r_cons_singleton ( )		4985675	0					
ANR	4985761	Callee	r_cons_singleton		4985675	0					
ANR	4985762	Identifier	r_cons_singleton		4985675	0					
ANR	4985763	ArgumentList			4985675	1					
ANR	4985764	Identifier	is_html		4985675	1					
ANR	4985765	Identifier	tmp_html		4985675	1					
ANR	4985766	ReturnStatement	return retstr ;	732:8:18101:18114	4985675	9	True				
ANR	4985767	Identifier	retstr		4985675	0					
ANR	4985768	ReturnType	static char *		4985675	1					
ANR	4985769	Identifier	get_graph_commands		4985675	2					
ANR	4985770	ParameterList	"RCore * c , ut64 off"		4985675	3					
ANR	4985771	Parameter	RCore * c	722:32:17629:17636	4985675	0	True				
ANR	4985772	ParameterType	RCore *		4985675	0					
ANR	4985773	Identifier	c		4985675	1					
ANR	4985774	Parameter	ut64 off	722:42:17639:17646	4985675	1	True				
ANR	4985775	ParameterType	ut64		4985675	0					
ANR	4985776	Identifier	off		4985675	1					
ANR	4985777	CFGEntryNode	ENTRY		4985675		True				
ANR	4985778	CFGExitNode	EXIT		4985675		True				
ANR	4985779	Symbol	c		4985675						
ANR	4985780	Symbol	NULL		4985675						
ANR	4985781	Symbol	false		4985675						
ANR	4985782	Symbol	R_CORE_ANAL_GRAPHDIFF		4985675						
ANR	4985783	Symbol	tmp_html		4985675						
ANR	4985784	Symbol	R_CORE_ANAL_STAR		4985675						
ANR	4985785	Symbol	r_cons_get_buffer		4985675						
ANR	4985786	Symbol	R_CORE_ANAL_GRAPHBODY		4985675						
ANR	4985787	Symbol	off		4985675						
ANR	4985788	Symbol	r_cons_singleton ( ) -> is_html		4985675						
ANR	4985789	Symbol	static_str		4985675						
ANR	4985790	Symbol	r_cons_singleton		4985675						
ANR	4985791	Symbol	strdup		4985675						
ANR	4985792	Symbol	* r_cons_singleton		4985675						
ANR	4985793	Symbol	retstr		4985675						
ANR	4985794	Function	__generate_graph	735:0:18119:19078							
ANR	4985795	FunctionDef	"__generate_graph (RCore * c , ut64 off)"		4985794	0					
ANR	4985796	CompoundStatement		735:50:18169:19078	4985794	0					
ANR	4985797	ExpressionStatement	r_return_if_fail ( c )	736:8:18179:18199	4985794	0	True				
ANR	4985798	CallExpression	r_return_if_fail ( c )		4985794	0					
ANR	4985799	Callee	r_return_if_fail		4985794	0					
ANR	4985800	Identifier	r_return_if_fail		4985794	0					
ANR	4985801	ArgumentList	c		4985794	1					
ANR	4985802	Argument	c		4985794	0					
ANR	4985803	Identifier	c		4985794	0					
ANR	4985804	IdentifierDeclStatement	"char * ptr = get_graph_commands ( c , off ) ;"	737:8:18209:18248	4985794	1	True				
ANR	4985805	IdentifierDecl	"* ptr = get_graph_commands ( c , off )"		4985794	0					
ANR	4985806	IdentifierDeclType	char *		4985794	0					
ANR	4985807	Identifier	ptr		4985794	1					
ANR	4985808	AssignmentExpression	"* ptr = get_graph_commands ( c , off )"		4985794	2		=			
ANR	4985809	Identifier	ptr		4985794	0					
ANR	4985810	CallExpression	"get_graph_commands ( c , off )"		4985794	1					
ANR	4985811	Callee	get_graph_commands		4985794	0					
ANR	4985812	Identifier	get_graph_commands		4985794	0					
ANR	4985813	ArgumentList	c		4985794	1					
ANR	4985814	Argument	c		4985794	0					
ANR	4985815	Identifier	c		4985794	0					
ANR	4985816	Argument	off		4985794	1					
ANR	4985817	Identifier	off		4985794	0					
ANR	4985818	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	738:8:18258:18288	4985794	2	True				
ANR	4985819	CallExpression	"r_cons_break_push ( NULL , NULL )"		4985794	0					
ANR	4985820	Callee	r_cons_break_push		4985794	0					
ANR	4985821	Identifier	r_cons_break_push		4985794	0					
ANR	4985822	ArgumentList	NULL		4985794	1					
ANR	4985823	Argument	NULL		4985794	0					
ANR	4985824	Identifier	NULL		4985794	0					
ANR	4985825	Argument	NULL		4985794	1					
ANR	4985826	Identifier	NULL		4985794	0					
ANR	4985827	IfStatement	if ( ptr )		4985794	3					
ANR	4985828	Condition	ptr	739:12:18302:18304	4985794	0	True				
ANR	4985829	Identifier	ptr		4985794	0					
ANR	4985830	CompoundStatement		5:17:137:137	4985794	1					
ANR	4985831	ForStatement	for ( ; ; )		4985794	0					
ANR	4985832	CompoundStatement		10:24:307:337	4985794	0					
ANR	4985833	IfStatement	if ( r_cons_is_breaked ( ) )		4985794	0					
ANR	4985834	Condition	r_cons_is_breaked ( )	741:28:18364:18383	4985794	0	True				
ANR	4985835	CallExpression	r_cons_is_breaked ( )		4985794	0					
ANR	4985836	Callee	r_cons_is_breaked		4985794	0					
ANR	4985837	Identifier	r_cons_is_breaked		4985794	0					
ANR	4985838	ArgumentList			4985794	1					
ANR	4985839	CompoundStatement		7:50:216:216	4985794	1					
ANR	4985840	BreakStatement	break ;	742:32:18420:18425	4985794	0	True				
ANR	4985841	IdentifierDeclStatement	"char * eol = strchr ( ptr , '\\n' ) ;"	744:24:18477:18507	4985794	1	True				
ANR	4985842	IdentifierDecl	"* eol = strchr ( ptr , '\\n' )"		4985794	0					
ANR	4985843	IdentifierDeclType	char *		4985794	0					
ANR	4985844	Identifier	eol		4985794	1					
ANR	4985845	AssignmentExpression	"* eol = strchr ( ptr , '\\n' )"		4985794	2		=			
ANR	4985846	Identifier	eol		4985794	0					
ANR	4985847	CallExpression	"strchr ( ptr , '\\n' )"		4985794	1					
ANR	4985848	Callee	strchr		4985794	0					
ANR	4985849	Identifier	strchr		4985794	0					
ANR	4985850	ArgumentList	ptr		4985794	1					
ANR	4985851	Argument	ptr		4985794	0					
ANR	4985852	Identifier	ptr		4985794	0					
ANR	4985853	Argument	'\\n'		4985794	1					
ANR	4985854	PrimaryExpression	'\\n'		4985794	0					
ANR	4985855	IfStatement	if ( eol )		4985794	2					
ANR	4985856	Condition	eol	745:28:18537:18539	4985794	0	True				
ANR	4985857	Identifier	eol		4985794	0					
ANR	4985858	CompoundStatement		11:33:372:372	4985794	1					
ANR	4985859	ExpressionStatement	* eol = '\\0'	746:32:18576:18587	4985794	0	True				
ANR	4985860	AssignmentExpression	* eol = '\\0'		4985794	0		=			
ANR	4985861	UnaryOperationExpression	* eol		4985794	0					
ANR	4985862	UnaryOperator	*		4985794	0					
ANR	4985863	Identifier	eol		4985794	1					
ANR	4985864	PrimaryExpression	'\\0'		4985794	1					
ANR	4985865	IfStatement	if ( * ptr )		4985794	3					
ANR	4985866	Condition	* ptr	748:28:18643:18646	4985794	0	True				
ANR	4985867	UnaryOperationExpression	* ptr		4985794	0					
ANR	4985868	UnaryOperator	*		4985794	0					
ANR	4985869	Identifier	ptr		4985794	1					
ANR	4985870	CompoundStatement		15:32:513:535	4985794	1					
ANR	4985871	IdentifierDeclStatement	char * p = strdup ( ptr ) ;	749:32:18683:18705	4985794	0	True				
ANR	4985872	IdentifierDecl	* p = strdup ( ptr )		4985794	0					
ANR	4985873	IdentifierDeclType	char *		4985794	0					
ANR	4985874	Identifier	p		4985794	1					
ANR	4985875	AssignmentExpression	* p = strdup ( ptr )		4985794	2		=			
ANR	4985876	Identifier	p		4985794	0					
ANR	4985877	CallExpression	strdup ( ptr )		4985794	1					
ANR	4985878	Callee	strdup		4985794	0					
ANR	4985879	Identifier	strdup		4985794	0					
ANR	4985880	ArgumentList	ptr		4985794	1					
ANR	4985881	Argument	ptr		4985794	0					
ANR	4985882	Identifier	ptr		4985794	0					
ANR	4985883	ExpressionStatement	r_return_if_fail ( p )	750:32:18739:18759	4985794	1	True				
ANR	4985884	CallExpression	r_return_if_fail ( p )		4985794	0					
ANR	4985885	Callee	r_return_if_fail		4985794	0					
ANR	4985886	Identifier	r_return_if_fail		4985794	0					
ANR	4985887	ArgumentList	p		4985794	1					
ANR	4985888	Argument	p		4985794	0					
ANR	4985889	Identifier	p		4985794	0					
ANR	4985890	ExpressionStatement	"r_core_cmd0 ( c , p )"	751:32:18793:18811	4985794	2	True				
ANR	4985891	CallExpression	"r_core_cmd0 ( c , p )"		4985794	0					
ANR	4985892	Callee	r_core_cmd0		4985794	0					
ANR	4985893	Identifier	r_core_cmd0		4985794	0					
ANR	4985894	ArgumentList	c		4985794	1					
ANR	4985895	Argument	c		4985794	0					
ANR	4985896	Identifier	c		4985794	0					
ANR	4985897	Argument	p		4985794	1					
ANR	4985898	Identifier	p		4985794	0					
ANR	4985899	ExpressionStatement	free ( p )	752:32:18845:18853	4985794	3	True				
ANR	4985900	CallExpression	free ( p )		4985794	0					
ANR	4985901	Callee	free		4985794	0					
ANR	4985902	Identifier	free		4985794	0					
ANR	4985903	ArgumentList	p		4985794	1					
ANR	4985904	Argument	p		4985794	0					
ANR	4985905	Identifier	p		4985794	0					
ANR	4985906	IfStatement	if ( ! eol )		4985794	4					
ANR	4985907	Condition	! eol	754:28:18909:18912	4985794	0	True				
ANR	4985908	UnaryOperationExpression	! eol		4985794	0					
ANR	4985909	UnaryOperator	!		4985794	0					
ANR	4985910	Identifier	eol		4985794	1					
ANR	4985911	CompoundStatement		20:34:745:745	4985794	1					
ANR	4985912	BreakStatement	break ;	755:32:18949:18954	4985794	0	True				
ANR	4985913	ExpressionStatement	ptr = eol + 1	757:24:19006:19019	4985794	5	True				
ANR	4985914	AssignmentExpression	ptr = eol + 1		4985794	0		=			
ANR	4985915	Identifier	ptr		4985794	0					
ANR	4985916	AdditiveExpression	eol + 1		4985794	1		+			
ANR	4985917	Identifier	eol		4985794	0					
ANR	4985918	PrimaryExpression	1		4985794	1					
ANR	4985919	ExpressionStatement	r_cons_break_pop ( )	760:8:19057:19076	4985794	4	True				
ANR	4985920	CallExpression	r_cons_break_pop ( )		4985794	0					
ANR	4985921	Callee	r_cons_break_pop		4985794	0					
ANR	4985922	Identifier	r_cons_break_pop		4985794	0					
ANR	4985923	ArgumentList			4985794	1					
ANR	4985924	ReturnType	static void		4985794	1					
ANR	4985925	Identifier	__generate_graph		4985794	2					
ANR	4985926	ParameterList	"RCore * c , ut64 off"		4985794	3					
ANR	4985927	Parameter	RCore * c	735:30:18149:18156	4985794	0	True				
ANR	4985928	ParameterType	RCore *		4985794	0					
ANR	4985929	Identifier	c		4985794	1					
ANR	4985930	Parameter	ut64 off	735:40:18159:18166	4985794	1	True				
ANR	4985931	ParameterType	ut64		4985794	0					
ANR	4985932	Identifier	off		4985794	1					
ANR	4985933	CFGEntryNode	ENTRY		4985794		True				
ANR	4985934	CFGExitNode	EXIT		4985794		True				
ANR	4985935	InfiniteForNode	true		4985794		True				
ANR	4985936	Symbol	p		4985794						
ANR	4985937	Symbol	r_cons_is_breaked		4985794						
ANR	4985938	Symbol	c		4985794						
ANR	4985939	Symbol	NULL		4985794						
ANR	4985940	Symbol	eol		4985794						
ANR	4985941	Symbol	* eol		4985794						
ANR	4985942	Symbol	* ptr		4985794						
ANR	4985943	Symbol	strchr		4985794						
ANR	4985944	Symbol	strdup		4985794						
ANR	4985945	Symbol	get_graph_commands		4985794						
ANR	4985946	Symbol	off		4985794						
ANR	4985947	Symbol	ptr		4985794						
ANR	4985948	Function	__print_diff_graph	763:0:19081:20705							
ANR	4985949	FunctionDef	"__print_diff_graph (RCore * c , ut64 off , int gmode)"		4985948	0					
ANR	4985950	CompoundStatement		763:62:19143:20705	4985948	0					
ANR	4985951	IdentifierDeclStatement	int opts = R_CORE_ANAL_GRAPHBODY | R_CORE_ANAL_GRAPHDIFF ;	764:8:19153:19209	4985948	0	True				
ANR	4985952	IdentifierDecl	opts = R_CORE_ANAL_GRAPHBODY | R_CORE_ANAL_GRAPHDIFF		4985948	0					
ANR	4985953	IdentifierDeclType	int		4985948	0					
ANR	4985954	Identifier	opts		4985948	1					
ANR	4985955	AssignmentExpression	opts = R_CORE_ANAL_GRAPHBODY | R_CORE_ANAL_GRAPHDIFF		4985948	2		=			
ANR	4985956	Identifier	opts		4985948	0					
ANR	4985957	InclusiveOrExpression	R_CORE_ANAL_GRAPHBODY | R_CORE_ANAL_GRAPHDIFF		4985948	1		|			
ANR	4985958	Identifier	R_CORE_ANAL_GRAPHBODY		4985948	0					
ANR	4985959	Identifier	R_CORE_ANAL_GRAPHDIFF		4985948	1					
ANR	4985960	IdentifierDeclStatement	"int use_utf8 = r_config_get_i ( c -> config , ""scr.utf8"" ) ;"	765:8:19219:19272	4985948	1	True				
ANR	4985961	IdentifierDecl	"use_utf8 = r_config_get_i ( c -> config , ""scr.utf8"" )"		4985948	0					
ANR	4985962	IdentifierDeclType	int		4985948	0					
ANR	4985963	Identifier	use_utf8		4985948	1					
ANR	4985964	AssignmentExpression	"use_utf8 = r_config_get_i ( c -> config , ""scr.utf8"" )"		4985948	2		=			
ANR	4985965	Identifier	use_utf8		4985948	0					
ANR	4985966	CallExpression	"r_config_get_i ( c -> config , ""scr.utf8"" )"		4985948	1					
ANR	4985967	Callee	r_config_get_i		4985948	0					
ANR	4985968	Identifier	r_config_get_i		4985948	0					
ANR	4985969	ArgumentList	c -> config		4985948	1					
ANR	4985970	Argument	c -> config		4985948	0					
ANR	4985971	PtrMemberAccess	c -> config		4985948	0					
ANR	4985972	Identifier	c		4985948	0					
ANR	4985973	Identifier	config		4985948	1					
ANR	4985974	Argument	"""scr.utf8"""		4985948	1					
ANR	4985975	PrimaryExpression	"""scr.utf8"""		4985948	0					
ANR	4985976	ExpressionStatement	r_agraph_reset ( c -> graph )	766:8:19282:19306	4985948	2	True				
ANR	4985977	CallExpression	r_agraph_reset ( c -> graph )		4985948	0					
ANR	4985978	Callee	r_agraph_reset		4985948	0					
ANR	4985979	Identifier	r_agraph_reset		4985948	0					
ANR	4985980	ArgumentList	c -> graph		4985948	1					
ANR	4985981	Argument	c -> graph		4985948	0					
ANR	4985982	PtrMemberAccess	c -> graph		4985948	0					
ANR	4985983	Identifier	c		4985948	0					
ANR	4985984	Identifier	graph		4985948	1					
ANR	4985985	SwitchStatement	switch ( gmode )		4985948	3					
ANR	4985986	Condition	gmode	767:16:19324:19328	4985948	0	True				
ANR	4985987	Identifier	gmode		4985948	0					
ANR	4985988	CompoundStatement		5:23:187:187	4985948	1					
ANR	4985989	Label	case GRAPH_DOT_MODE :	768:8:19341:19360	4985948	0	True				
ANR	4985990	Identifier	GRAPH_DOT_MODE		4985948	0					
ANR	4985991	ExpressionStatement	"r_core_anal_graph ( c , off , opts )"	769:16:19378:19410	4985948	1	True				
ANR	4985992	CallExpression	"r_core_anal_graph ( c , off , opts )"		4985948	0					
ANR	4985993	Callee	r_core_anal_graph		4985948	0					
ANR	4985994	Identifier	r_core_anal_graph		4985948	0					
ANR	4985995	ArgumentList	c		4985948	1					
ANR	4985996	Argument	c		4985948	0					
ANR	4985997	Identifier	c		4985948	0					
ANR	4985998	Argument	off		4985948	1					
ANR	4985999	Identifier	off		4985948	0					
ANR	4986000	Argument	opts		4985948	2					
ANR	4986001	Identifier	opts		4985948	0					
ANR	4986002	BreakStatement	break ;	770:16:19428:19433	4985948	2	True				
ANR	4986003	Label	case GRAPH_STAR_MODE :	771:8:19443:19463	4985948	3	True				
ANR	4986004	Identifier	GRAPH_STAR_MODE		4985948	0					
ANR	4986005	ExpressionStatement	"r_core_anal_graph ( c , off , opts | R_CORE_ANAL_STAR )"	772:16:19481:19533	4985948	4	True				
ANR	4986006	CallExpression	"r_core_anal_graph ( c , off , opts | R_CORE_ANAL_STAR )"		4985948	0					
ANR	4986007	Callee	r_core_anal_graph		4985948	0					
ANR	4986008	Identifier	r_core_anal_graph		4985948	0					
ANR	4986009	ArgumentList	c		4985948	1					
ANR	4986010	Argument	c		4985948	0					
ANR	4986011	Identifier	c		4985948	0					
ANR	4986012	Argument	off		4985948	1					
ANR	4986013	Identifier	off		4985948	0					
ANR	4986014	Argument	opts | R_CORE_ANAL_STAR		4985948	2					
ANR	4986015	InclusiveOrExpression	opts | R_CORE_ANAL_STAR		4985948	0		|			
ANR	4986016	Identifier	opts		4985948	0					
ANR	4986017	Identifier	R_CORE_ANAL_STAR		4985948	1					
ANR	4986018	BreakStatement	break ;	773:16:19551:19556	4985948	5	True				
ANR	4986019	Label	case GRAPH_TINY_MODE :	774:8:19566:19586	4985948	6	True				
ANR	4986020	Identifier	GRAPH_TINY_MODE		4985948	0					
ANR	4986021	ExpressionStatement	"__generate_graph ( c , off )"	775:16:19604:19629	4985948	7	True				
ANR	4986022	CallExpression	"__generate_graph ( c , off )"		4985948	0					
ANR	4986023	Callee	__generate_graph		4985948	0					
ANR	4986024	Identifier	__generate_graph		4985948	0					
ANR	4986025	ArgumentList	c		4985948	1					
ANR	4986026	Argument	c		4985948	0					
ANR	4986027	Identifier	c		4985948	0					
ANR	4986028	Argument	off		4985948	1					
ANR	4986029	Identifier	off		4985948	0					
ANR	4986030	ExpressionStatement	"r_core_agraph_print ( c , use_utf8 , ""t"" )"	776:16:19647:19685	4985948	8	True				
ANR	4986031	CallExpression	"r_core_agraph_print ( c , use_utf8 , ""t"" )"		4985948	0					
ANR	4986032	Callee	r_core_agraph_print		4985948	0					
ANR	4986033	Identifier	r_core_agraph_print		4985948	0					
ANR	4986034	ArgumentList	c		4985948	1					
ANR	4986035	Argument	c		4985948	0					
ANR	4986036	Identifier	c		4985948	0					
ANR	4986037	Argument	use_utf8		4985948	1					
ANR	4986038	Identifier	use_utf8		4985948	0					
ANR	4986039	Argument	"""t"""		4985948	2					
ANR	4986040	PrimaryExpression	"""t"""		4985948	0					
ANR	4986041	BreakStatement	break ;	777:16:19703:19708	4985948	9	True				
ANR	4986042	Label	case GRAPH_INTERACTIVE_MODE :	778:8:19718:19745	4985948	10	True				
ANR	4986043	Identifier	GRAPH_INTERACTIVE_MODE		4985948	0					
ANR	4986044	ExpressionStatement	"__generate_graph ( c , off )"	779:16:19763:19788	4985948	11	True				
ANR	4986045	CallExpression	"__generate_graph ( c , off )"		4985948	0					
ANR	4986046	Callee	__generate_graph		4985948	0					
ANR	4986047	Identifier	__generate_graph		4985948	0					
ANR	4986048	ArgumentList	c		4985948	1					
ANR	4986049	Argument	c		4985948	0					
ANR	4986050	Identifier	c		4985948	0					
ANR	4986051	Argument	off		4985948	1					
ANR	4986052	Identifier	off		4985948	0					
ANR	4986053	ExpressionStatement	"r_core_agraph_print ( c , use_utf8 , ""v"" )"	780:16:19806:19844	4985948	12	True				
ANR	4986054	CallExpression	"r_core_agraph_print ( c , use_utf8 , ""v"" )"		4985948	0					
ANR	4986055	Callee	r_core_agraph_print		4985948	0					
ANR	4986056	Identifier	r_core_agraph_print		4985948	0					
ANR	4986057	ArgumentList	c		4985948	1					
ANR	4986058	Argument	c		4985948	0					
ANR	4986059	Identifier	c		4985948	0					
ANR	4986060	Argument	use_utf8		4985948	1					
ANR	4986061	Identifier	use_utf8		4985948	0					
ANR	4986062	Argument	"""v"""		4985948	2					
ANR	4986063	PrimaryExpression	"""v"""		4985948	0					
ANR	4986064	ExpressionStatement	r_cons_reset_colors ( )	781:16:19862:19884	4985948	13	True				
ANR	4986065	CallExpression	r_cons_reset_colors ( )		4985948	0					
ANR	4986066	Callee	r_cons_reset_colors		4985948	0					
ANR	4986067	Identifier	r_cons_reset_colors		4985948	0					
ANR	4986068	ArgumentList			4985948	1					
ANR	4986069	BreakStatement	break ;	782:16:19902:19907	4985948	14	True				
ANR	4986070	Label	case GRAPH_SDB_MODE :	783:8:19917:19936	4985948	15	True				
ANR	4986071	Identifier	GRAPH_SDB_MODE		4985948	0					
ANR	4986072	ExpressionStatement	"__generate_graph ( c , off )"	784:16:19954:19979	4985948	16	True				
ANR	4986073	CallExpression	"__generate_graph ( c , off )"		4985948	0					
ANR	4986074	Callee	__generate_graph		4985948	0					
ANR	4986075	Identifier	__generate_graph		4985948	0					
ANR	4986076	ArgumentList	c		4985948	1					
ANR	4986077	Argument	c		4985948	0					
ANR	4986078	Identifier	c		4985948	0					
ANR	4986079	Argument	off		4985948	1					
ANR	4986080	Identifier	off		4985948	0					
ANR	4986081	ExpressionStatement	"r_core_agraph_print ( c , use_utf8 , ""k"" )"	785:16:19997:20035	4985948	17	True				
ANR	4986082	CallExpression	"r_core_agraph_print ( c , use_utf8 , ""k"" )"		4985948	0					
ANR	4986083	Callee	r_core_agraph_print		4985948	0					
ANR	4986084	Identifier	r_core_agraph_print		4985948	0					
ANR	4986085	ArgumentList	c		4985948	1					
ANR	4986086	Argument	c		4985948	0					
ANR	4986087	Identifier	c		4985948	0					
ANR	4986088	Argument	use_utf8		4985948	1					
ANR	4986089	Identifier	use_utf8		4985948	0					
ANR	4986090	Argument	"""k"""		4985948	2					
ANR	4986091	PrimaryExpression	"""k"""		4985948	0					
ANR	4986092	BreakStatement	break ;	786:16:20053:20058	4985948	18	True				
ANR	4986093	Label	case GRAPH_GML_MODE :	787:8:20068:20087	4985948	19	True				
ANR	4986094	Identifier	GRAPH_GML_MODE		4985948	0					
ANR	4986095	ExpressionStatement	"__generate_graph ( c , off )"	788:16:20105:20130	4985948	20	True				
ANR	4986096	CallExpression	"__generate_graph ( c , off )"		4985948	0					
ANR	4986097	Callee	__generate_graph		4985948	0					
ANR	4986098	Identifier	__generate_graph		4985948	0					
ANR	4986099	ArgumentList	c		4985948	1					
ANR	4986100	Argument	c		4985948	0					
ANR	4986101	Identifier	c		4985948	0					
ANR	4986102	Argument	off		4985948	1					
ANR	4986103	Identifier	off		4985948	0					
ANR	4986104	ExpressionStatement	"r_core_agraph_print ( c , use_utf8 , ""g"" )"	789:16:20148:20186	4985948	21	True				
ANR	4986105	CallExpression	"r_core_agraph_print ( c , use_utf8 , ""g"" )"		4985948	0					
ANR	4986106	Callee	r_core_agraph_print		4985948	0					
ANR	4986107	Identifier	r_core_agraph_print		4985948	0					
ANR	4986108	ArgumentList	c		4985948	1					
ANR	4986109	Argument	c		4985948	0					
ANR	4986110	Identifier	c		4985948	0					
ANR	4986111	Argument	use_utf8		4985948	1					
ANR	4986112	Identifier	use_utf8		4985948	0					
ANR	4986113	Argument	"""g"""		4985948	2					
ANR	4986114	PrimaryExpression	"""g"""		4985948	0					
ANR	4986115	BreakStatement	break ;	790:16:20204:20209	4985948	22	True				
ANR	4986116	Label	case GRAPH_JSON_MODE :	791:8:20219:20239	4985948	23	True				
ANR	4986117	Identifier	GRAPH_JSON_MODE		4985948	0					
ANR	4986118	ExpressionStatement	"r_core_anal_graph ( c , off , opts | R_CORE_ANAL_JSON )"	792:16:20257:20308	4985948	24	True				
ANR	4986119	CallExpression	"r_core_anal_graph ( c , off , opts | R_CORE_ANAL_JSON )"		4985948	0					
ANR	4986120	Callee	r_core_anal_graph		4985948	0					
ANR	4986121	Identifier	r_core_anal_graph		4985948	0					
ANR	4986122	ArgumentList	c		4985948	1					
ANR	4986123	Argument	c		4985948	0					
ANR	4986124	Identifier	c		4985948	0					
ANR	4986125	Argument	off		4985948	1					
ANR	4986126	Identifier	off		4985948	0					
ANR	4986127	Argument	opts | R_CORE_ANAL_JSON		4985948	2					
ANR	4986128	InclusiveOrExpression	opts | R_CORE_ANAL_JSON		4985948	0		|			
ANR	4986129	Identifier	opts		4985948	0					
ANR	4986130	Identifier	R_CORE_ANAL_JSON		4985948	1					
ANR	4986131	BreakStatement	break ;	793:16:20326:20331	4985948	25	True				
ANR	4986132	Label	case GRAPH_JSON_DIS_MODE :	794:8:20341:20365	4985948	26	True				
ANR	4986133	Identifier	GRAPH_JSON_DIS_MODE		4985948	0					
ANR	4986134	ExpressionStatement	"r_core_anal_graph ( c , off , opts | R_CORE_ANAL_JSON | R_CORE_ANAL_JSON_FORMAT_DISASM )"	795:16:20383:20467	4985948	27	True				
ANR	4986135	CallExpression	"r_core_anal_graph ( c , off , opts | R_CORE_ANAL_JSON | R_CORE_ANAL_JSON_FORMAT_DISASM )"		4985948	0					
ANR	4986136	Callee	r_core_anal_graph		4985948	0					
ANR	4986137	Identifier	r_core_anal_graph		4985948	0					
ANR	4986138	ArgumentList	c		4985948	1					
ANR	4986139	Argument	c		4985948	0					
ANR	4986140	Identifier	c		4985948	0					
ANR	4986141	Argument	off		4985948	1					
ANR	4986142	Identifier	off		4985948	0					
ANR	4986143	Argument	opts | R_CORE_ANAL_JSON | R_CORE_ANAL_JSON_FORMAT_DISASM		4985948	2					
ANR	4986144	InclusiveOrExpression	opts | R_CORE_ANAL_JSON | R_CORE_ANAL_JSON_FORMAT_DISASM		4985948	0		|			
ANR	4986145	Identifier	opts		4985948	0					
ANR	4986146	InclusiveOrExpression	R_CORE_ANAL_JSON | R_CORE_ANAL_JSON_FORMAT_DISASM		4985948	1		|			
ANR	4986147	Identifier	R_CORE_ANAL_JSON		4985948	0					
ANR	4986148	Identifier	R_CORE_ANAL_JSON_FORMAT_DISASM		4985948	1					
ANR	4986149	BreakStatement	break ;	796:16:20485:20490	4985948	28	True				
ANR	4986150	Label	case GRAPH_DEFAULT_MODE :	797:8:20500:20523	4985948	29	True				
ANR	4986151	Identifier	GRAPH_DEFAULT_MODE		4985948	0					
ANR	4986152	Label	default :	798:8:20533:20540	4985948	30	True				
ANR	4986153	Identifier	default		4985948	0					
ANR	4986154	ExpressionStatement	"__generate_graph ( c , off )"	799:16:20558:20583	4985948	31	True				
ANR	4986155	CallExpression	"__generate_graph ( c , off )"		4985948	0					
ANR	4986156	Callee	__generate_graph		4985948	0					
ANR	4986157	Identifier	__generate_graph		4985948	0					
ANR	4986158	ArgumentList	c		4985948	1					
ANR	4986159	Argument	c		4985948	0					
ANR	4986160	Identifier	c		4985948	0					
ANR	4986161	Argument	off		4985948	1					
ANR	4986162	Identifier	off		4985948	0					
ANR	4986163	ExpressionStatement	"r_core_agraph_print ( c , use_utf8 , """" )"	800:16:20601:20638	4985948	32	True				
ANR	4986164	CallExpression	"r_core_agraph_print ( c , use_utf8 , """" )"		4985948	0					
ANR	4986165	Callee	r_core_agraph_print		4985948	0					
ANR	4986166	Identifier	r_core_agraph_print		4985948	0					
ANR	4986167	ArgumentList	c		4985948	1					
ANR	4986168	Argument	c		4985948	0					
ANR	4986169	Identifier	c		4985948	0					
ANR	4986170	Argument	use_utf8		4985948	1					
ANR	4986171	Identifier	use_utf8		4985948	0					
ANR	4986172	Argument	""""""		4985948	2					
ANR	4986173	PrimaryExpression	""""""		4985948	0					
ANR	4986174	ExpressionStatement	r_cons_reset_colors ( )	801:16:20656:20678	4985948	33	True				
ANR	4986175	CallExpression	r_cons_reset_colors ( )		4985948	0					
ANR	4986176	Callee	r_cons_reset_colors		4985948	0					
ANR	4986177	Identifier	r_cons_reset_colors		4985948	0					
ANR	4986178	ArgumentList			4985948	1					
ANR	4986179	BreakStatement	break ;	802:8:20688:20693	4985948	34	True				
ANR	4986180	ReturnType	static void		4985948	1					
ANR	4986181	Identifier	__print_diff_graph		4985948	2					
ANR	4986182	ParameterList	"RCore * c , ut64 off , int gmode"		4985948	3					
ANR	4986183	Parameter	RCore * c	763:31:19112:19119	4985948	0	True				
ANR	4986184	ParameterType	RCore *		4985948	0					
ANR	4986185	Identifier	c		4985948	1					
ANR	4986186	Parameter	ut64 off	763:41:19122:19129	4985948	1	True				
ANR	4986187	ParameterType	ut64		4985948	0					
ANR	4986188	Identifier	off		4985948	1					
ANR	4986189	Parameter	int gmode	763:51:19132:19140	4985948	2	True				
ANR	4986190	ParameterType	int		4985948	0					
ANR	4986191	Identifier	gmode		4985948	1					
ANR	4986192	CFGEntryNode	ENTRY		4985948		True				
ANR	4986193	CFGExitNode	EXIT		4985948		True				
ANR	4986194	Symbol	c -> config		4985948						
ANR	4986195	Symbol	c		4985948						
ANR	4986196	Symbol	R_CORE_ANAL_GRAPHDIFF		4985948						
ANR	4986197	Symbol	use_utf8		4985948						
ANR	4986198	Symbol	R_CORE_ANAL_STAR		4985948						
ANR	4986199	Symbol	R_CORE_ANAL_GRAPHBODY		4985948						
ANR	4986200	Symbol	* c		4985948						
ANR	4986201	Symbol	off		4985948						
ANR	4986202	Symbol	gmode		4985948						
ANR	4986203	Symbol	opts		4985948						
ANR	4986204	Symbol	R_CORE_ANAL_JSON_FORMAT_DISASM		4985948						
ANR	4986205	Symbol	r_config_get_i		4985948						
ANR	4986206	Symbol	R_CORE_ANAL_JSON		4985948						
ANR	4986207	Symbol	c -> graph		4985948						
ANR	4986208	Function	r_main_radiff2	806:0:20708:28999							
ANR	4986209	FunctionDef	"r_main_radiff2 (int argc , char * * argv)"		4986208	0					
ANR	4986210	CompoundStatement		806:48:20756:28999	4986208	0					
ANR	4986211	IdentifierDeclStatement	const char * columnSort = NULL ;	807:1:20759:20788	4986208	0	True				
ANR	4986212	IdentifierDecl	* columnSort = NULL		4986208	0					
ANR	4986213	IdentifierDeclType	const char *		4986208	0					
ANR	4986214	Identifier	columnSort		4986208	1					
ANR	4986215	AssignmentExpression	* columnSort = NULL		4986208	2		=			
ANR	4986216	Identifier	NULL		4986208	0					
ANR	4986217	Identifier	NULL		4986208	1					
ANR	4986218	IdentifierDeclStatement	const char * addr = NULL ;	808:1:20791:20814	4986208	1	True				
ANR	4986219	IdentifierDecl	* addr = NULL		4986208	0					
ANR	4986220	IdentifierDeclType	const char *		4986208	0					
ANR	4986221	Identifier	addr		4986208	1					
ANR	4986222	AssignmentExpression	* addr = NULL		4986208	2		=			
ANR	4986223	Identifier	NULL		4986208	0					
ANR	4986224	Identifier	NULL		4986208	1					
ANR	4986225	IdentifierDeclStatement	"RCore * c = NULL , * c2 = NULL ;"	809:1:20817:20844	4986208	2	True				
ANR	4986226	IdentifierDecl	* c = NULL		4986208	0					
ANR	4986227	IdentifierDeclType	RCore *		4986208	0					
ANR	4986228	Identifier	c		4986208	1					
ANR	4986229	AssignmentExpression	* c = NULL		4986208	2		=			
ANR	4986230	Identifier	NULL		4986208	0					
ANR	4986231	Identifier	NULL		4986208	1					
ANR	4986232	IdentifierDecl	* c2 = NULL		4986208	1					
ANR	4986233	IdentifierDeclType	RCore *		4986208	0					
ANR	4986234	Identifier	c2		4986208	1					
ANR	4986235	AssignmentExpression	* c2 = NULL		4986208	2		=			
ANR	4986236	Identifier	NULL		4986208	0					
ANR	4986237	Identifier	NULL		4986208	1					
ANR	4986238	IdentifierDeclStatement	RDiff * d ;	810:1:20847:20855	4986208	3	True				
ANR	4986239	IdentifierDecl	* d		4986208	0					
ANR	4986240	IdentifierDeclType	RDiff *		4986208	0					
ANR	4986241	Identifier	d		4986208	1					
ANR	4986242	IdentifierDeclStatement	"ut8 * bufa = NULL , * bufb = NULL ;"	811:1:20858:20888	4986208	4	True				
ANR	4986243	IdentifierDecl	* bufa = NULL		4986208	0					
ANR	4986244	IdentifierDeclType	ut8 *		4986208	0					
ANR	4986245	Identifier	bufa		4986208	1					
ANR	4986246	AssignmentExpression	* bufa = NULL		4986208	2		=			
ANR	4986247	Identifier	NULL		4986208	0					
ANR	4986248	Identifier	NULL		4986208	1					
ANR	4986249	IdentifierDecl	* bufb = NULL		4986208	1					
ANR	4986250	IdentifierDeclType	ut8 *		4986208	0					
ANR	4986251	Identifier	bufb		4986208	1					
ANR	4986252	AssignmentExpression	* bufb = NULL		4986208	2		=			
ANR	4986253	Identifier	NULL		4986208	0					
ANR	4986254	Identifier	NULL		4986208	1					
ANR	4986255	IdentifierDeclStatement	"int o , sza , szb , delta = 0 ;"	812:1:20891:20935	4986208	5	True				
ANR	4986256	IdentifierDecl	o		4986208	0					
ANR	4986257	IdentifierDeclType	int		4986208	0					
ANR	4986258	Identifier	o		4986208	1					
ANR	4986259	IdentifierDecl	sza		4986208	1					
ANR	4986260	IdentifierDeclType	int		4986208	0					
ANR	4986261	Identifier	sza		4986208	1					
ANR	4986262	IdentifierDecl	szb		4986208	2					
ANR	4986263	IdentifierDeclType	int		4986208	0					
ANR	4986264	Identifier	szb		4986208	1					
ANR	4986265	IdentifierDecl	delta = 0		4986208	3					
ANR	4986266	IdentifierDeclType	int		4986208	0					
ANR	4986267	Identifier	delta		4986208	1					
ANR	4986268	AssignmentExpression	delta = 0		4986208	2		=			
ANR	4986269	Identifier	delta		4986208	0					
ANR	4986270	PrimaryExpression	0		4986208	1					
ANR	4986271	IdentifierDeclStatement	int mode = MODE_DIFF ;	813:1:20938:20958	4986208	6	True				
ANR	4986272	IdentifierDecl	mode = MODE_DIFF		4986208	0					
ANR	4986273	IdentifierDeclType	int		4986208	0					
ANR	4986274	Identifier	mode		4986208	1					
ANR	4986275	AssignmentExpression	mode = MODE_DIFF		4986208	2		=			
ANR	4986276	Identifier	MODE_DIFF		4986208	0					
ANR	4986277	Identifier	MODE_DIFF		4986208	1					
ANR	4986278	IdentifierDeclStatement	int gmode = GRAPH_DEFAULT_MODE ;	814:1:20961:20991	4986208	7	True				
ANR	4986279	IdentifierDecl	gmode = GRAPH_DEFAULT_MODE		4986208	0					
ANR	4986280	IdentifierDeclType	int		4986208	0					
ANR	4986281	Identifier	gmode		4986208	1					
ANR	4986282	AssignmentExpression	gmode = GRAPH_DEFAULT_MODE		4986208	2		=			
ANR	4986283	Identifier	GRAPH_DEFAULT_MODE		4986208	0					
ANR	4986284	Identifier	GRAPH_DEFAULT_MODE		4986208	1					
ANR	4986285	IdentifierDeclStatement	int diffops = 0 ;	815:1:20994:21009	4986208	8	True				
ANR	4986286	IdentifierDecl	diffops = 0		4986208	0					
ANR	4986287	IdentifierDeclType	int		4986208	0					
ANR	4986288	Identifier	diffops		4986208	1					
ANR	4986289	AssignmentExpression	diffops = 0		4986208	2		=			
ANR	4986290	Identifier	diffops		4986208	0					
ANR	4986291	PrimaryExpression	0		4986208	1					
ANR	4986292	IdentifierDeclStatement	int threshold = - 1 ;	816:1:21012:21030	4986208	9	True				
ANR	4986293	IdentifierDecl	threshold = - 1		4986208	0					
ANR	4986294	IdentifierDeclType	int		4986208	0					
ANR	4986295	Identifier	threshold		4986208	1					
ANR	4986296	AssignmentExpression	threshold = - 1		4986208	2		=			
ANR	4986297	Identifier	threshold		4986208	0					
ANR	4986298	UnaryOperationExpression	- 1		4986208	1					
ANR	4986299	UnaryOperator	-		4986208	0					
ANR	4986300	PrimaryExpression	1		4986208	1					
ANR	4986301	IdentifierDeclStatement	double sim = 0.0 ;	817:1:21033:21049	4986208	10	True				
ANR	4986302	IdentifierDecl	sim = 0.0		4986208	0					
ANR	4986303	IdentifierDeclType	double		4986208	0					
ANR	4986304	Identifier	sim		4986208	1					
ANR	4986305	AssignmentExpression	sim = 0.0		4986208	2		=			
ANR	4986306	Identifier	sim		4986208	0					
ANR	4986307	PrimaryExpression	0.0		4986208	1					
ANR	4986308	ExpressionStatement	evals = r_list_newf ( NULL )	818:1:21052:21078	4986208	11	True				
ANR	4986309	AssignmentExpression	evals = r_list_newf ( NULL )		4986208	0		=			
ANR	4986310	Identifier	evals		4986208	0					
ANR	4986311	CallExpression	r_list_newf ( NULL )		4986208	1					
ANR	4986312	Callee	r_list_newf		4986208	0					
ANR	4986313	Identifier	r_list_newf		4986208	0					
ANR	4986314	ArgumentList	NULL		4986208	1					
ANR	4986315	Argument	NULL		4986208	0					
ANR	4986316	Identifier	NULL		4986208	0					
ANR	4986317	WhileStatement	"while ( ( o = r_getopt ( argc , argv , ""Aa:b:BCDe:npg:m:G:OijrhcdsS:uUvVxt:zqZ"" ) ) != - 1 )"		4986208	12					
ANR	4986318	Condition	"( o = r_getopt ( argc , argv , ""Aa:b:BCDe:npg:m:G:OijrhcdsS:uUvVxt:zqZ"" ) ) != - 1"	820:8:21089:21163	4986208	0	True				
ANR	4986319	EqualityExpression	"( o = r_getopt ( argc , argv , ""Aa:b:BCDe:npg:m:G:OijrhcdsS:uUvVxt:zqZ"" ) ) != - 1"		4986208	0		!=			
ANR	4986320	AssignmentExpression	"o = r_getopt ( argc , argv , ""Aa:b:BCDe:npg:m:G:OijrhcdsS:uUvVxt:zqZ"" )"		4986208	0		=			
ANR	4986321	Identifier	o		4986208	0					
ANR	4986322	CallExpression	"r_getopt ( argc , argv , ""Aa:b:BCDe:npg:m:G:OijrhcdsS:uUvVxt:zqZ"" )"		4986208	1					
ANR	4986323	Callee	r_getopt		4986208	0					
ANR	4986324	Identifier	r_getopt		4986208	0					
ANR	4986325	ArgumentList	argc		4986208	1					
ANR	4986326	Argument	argc		4986208	0					
ANR	4986327	Identifier	argc		4986208	0					
ANR	4986328	Argument	argv		4986208	1					
ANR	4986329	Identifier	argv		4986208	0					
ANR	4986330	Argument	"""Aa:b:BCDe:npg:m:G:OijrhcdsS:uUvVxt:zqZ"""		4986208	2					
ANR	4986331	PrimaryExpression	"""Aa:b:BCDe:npg:m:G:OijrhcdsS:uUvVxt:zqZ"""		4986208	0					
ANR	4986332	UnaryOperationExpression	- 1		4986208	1					
ANR	4986333	UnaryOperator	-		4986208	0					
ANR	4986334	PrimaryExpression	1		4986208	1					
ANR	4986335	CompoundStatement		15:85:409:409	4986208	1					
ANR	4986336	SwitchStatement	switch ( o )		4986208	0					
ANR	4986337	Condition	o	821:10:21178:21178	4986208	0	True				
ANR	4986338	Identifier	o		4986208	0					
ANR	4986339	CompoundStatement		16:13:424:424	4986208	1					
ANR	4986340	Label	case 'a' :	822:2:21185:21193	4986208	0	True				
ANR	4986341	ExpressionStatement	arch = r_optarg	823:3:21198:21213	4986208	1	True				
ANR	4986342	AssignmentExpression	arch = r_optarg		4986208	0		=			
ANR	4986343	Identifier	arch		4986208	0					
ANR	4986344	Identifier	r_optarg		4986208	1					
ANR	4986345	BreakStatement	break ;	824:3:21218:21223	4986208	2	True				
ANR	4986346	Label	case 'A' :	825:2:21227:21235	4986208	3	True				
ANR	4986347	ExpressionStatement	anal_all ++	826:3:21240:21250	4986208	4	True				
ANR	4986348	PostIncDecOperationExpression	anal_all ++		4986208	0					
ANR	4986349	Identifier	anal_all		4986208	0					
ANR	4986350	IncDec	++		4986208	1					
ANR	4986351	BreakStatement	break ;	827:3:21255:21260	4986208	5	True				
ANR	4986352	Label	case 'b' :	828:2:21264:21272	4986208	6	True				
ANR	4986353	ExpressionStatement	bits = atoi ( r_optarg )	829:3:21277:21299	4986208	7	True				
ANR	4986354	AssignmentExpression	bits = atoi ( r_optarg )		4986208	0		=			
ANR	4986355	Identifier	bits		4986208	0					
ANR	4986356	CallExpression	atoi ( r_optarg )		4986208	1					
ANR	4986357	Callee	atoi		4986208	0					
ANR	4986358	Identifier	atoi		4986208	0					
ANR	4986359	ArgumentList	r_optarg		4986208	1					
ANR	4986360	Argument	r_optarg		4986208	0					
ANR	4986361	Identifier	r_optarg		4986208	0					
ANR	4986362	BreakStatement	break ;	830:3:21304:21309	4986208	8	True				
ANR	4986363	Label	case 'B' :	831:2:21313:21321	4986208	9	True				
ANR	4986364	ExpressionStatement	diffmode = 'B'	832:3:21326:21340	4986208	10	True				
ANR	4986365	AssignmentExpression	diffmode = 'B'		4986208	0		=			
ANR	4986366	Identifier	diffmode		4986208	0					
ANR	4986367	PrimaryExpression	'B'		4986208	1					
ANR	4986368	BreakStatement	break ;	833:3:21345:21350	4986208	11	True				
ANR	4986369	Label	case 'e' :	834:2:21354:21362	4986208	12	True				
ANR	4986370	ExpressionStatement	"r_list_append ( evals , r_optarg )"	835:3:21367:21398	4986208	13	True				
ANR	4986371	CallExpression	"r_list_append ( evals , r_optarg )"		4986208	0					
ANR	4986372	Callee	r_list_append		4986208	0					
ANR	4986373	Identifier	r_list_append		4986208	0					
ANR	4986374	ArgumentList	evals		4986208	1					
ANR	4986375	Argument	evals		4986208	0					
ANR	4986376	Identifier	evals		4986208	0					
ANR	4986377	Argument	r_optarg		4986208	1					
ANR	4986378	Identifier	r_optarg		4986208	0					
ANR	4986379	BreakStatement	break ;	836:3:21403:21408	4986208	14	True				
ANR	4986380	Label	case 'p' :	837:2:21412:21420	4986208	15	True				
ANR	4986381	ExpressionStatement	useva = false	838:3:21425:21438	4986208	16	True				
ANR	4986382	AssignmentExpression	useva = false		4986208	0		=			
ANR	4986383	Identifier	useva		4986208	0					
ANR	4986384	Identifier	false		4986208	1					
ANR	4986385	BreakStatement	break ;	839:3:21443:21448	4986208	17	True				
ANR	4986386	Label	case 'r' :	840:2:21452:21460	4986208	18	True				
ANR	4986387	ExpressionStatement	diffmode = 'r'	841:3:21465:21479	4986208	19	True				
ANR	4986388	AssignmentExpression	diffmode = 'r'		4986208	0		=			
ANR	4986389	Identifier	diffmode		4986208	0					
ANR	4986390	PrimaryExpression	'r'		4986208	1					
ANR	4986391	BreakStatement	break ;	842:3:21484:21489	4986208	20	True				
ANR	4986392	Label	case 'g' :	843:2:21493:21501	4986208	21	True				
ANR	4986393	ExpressionStatement	mode = MODE_GRAPH	844:3:21506:21523	4986208	22	True				
ANR	4986394	AssignmentExpression	mode = MODE_GRAPH		4986208	0		=			
ANR	4986395	Identifier	mode		4986208	0					
ANR	4986396	Identifier	MODE_GRAPH		4986208	1					
ANR	4986397	ExpressionStatement	addr = r_optarg	845:3:21528:21543	4986208	23	True				
ANR	4986398	AssignmentExpression	addr = r_optarg		4986208	0		=			
ANR	4986399	Identifier	addr		4986208	0					
ANR	4986400	Identifier	r_optarg		4986208	1					
ANR	4986401	BreakStatement	break ;	846:3:21548:21553	4986208	24	True				
ANR	4986402	Label	case 'm' :	847:2:21557:21565	4986208	25	True				
ANR	4986403	CompoundStatement		43:10:821:841	4986208	26					
ANR	4986404	IdentifierDeclStatement	char * tmp = r_optarg ;	848:10:21578:21598	4986208	0	True				
ANR	4986405	IdentifierDecl	* tmp = r_optarg		4986208	0					
ANR	4986406	IdentifierDeclType	char *		4986208	0					
ANR	4986407	Identifier	tmp		4986208	1					
ANR	4986408	AssignmentExpression	* tmp = r_optarg		4986208	2		=			
ANR	4986409	Identifier	r_optarg		4986208	0					
ANR	4986410	Identifier	r_optarg		4986208	1					
ANR	4986411	SwitchStatement	switch ( tmp [ 0 ] )		4986208	1					
ANR	4986412	Condition	tmp [ 0 ]	849:17:21617:21622	4986208	0	True				
ANR	4986413	ArrayIndexing	tmp [ 0 ]		4986208	0					
ANR	4986414	Identifier	tmp		4986208	0					
ANR	4986415	PrimaryExpression	0		4986208	1					
ANR	4986416	CompoundStatement		44:25:868:868	4986208	1					
ANR	4986417	Label	case 'i' :	850:17:21644:21652	4986208	0	True				
ANR	4986418	ExpressionStatement	gmode = GRAPH_INTERACTIVE_MODE	850:27:21654:21684	4986208	1	True				
ANR	4986419	AssignmentExpression	gmode = GRAPH_INTERACTIVE_MODE		4986208	0		=			
ANR	4986420	Identifier	gmode		4986208	0					
ANR	4986421	Identifier	GRAPH_INTERACTIVE_MODE		4986208	1					
ANR	4986422	BreakStatement	break ;	850:59:21686:21691	4986208	2	True				
ANR	4986423	Label	case 'k' :	851:17:21710:21718	4986208	3	True				
ANR	4986424	ExpressionStatement	gmode = GRAPH_SDB_MODE	851:27:21720:21742	4986208	4	True				
ANR	4986425	AssignmentExpression	gmode = GRAPH_SDB_MODE		4986208	0		=			
ANR	4986426	Identifier	gmode		4986208	0					
ANR	4986427	Identifier	GRAPH_SDB_MODE		4986208	1					
ANR	4986428	BreakStatement	break ;	851:51:21744:21749	4986208	5	True				
ANR	4986429	Label	case 'j' :	852:17:21768:21776	4986208	6	True				
ANR	4986430	ExpressionStatement	gmode = GRAPH_JSON_MODE	852:27:21778:21801	4986208	7	True				
ANR	4986431	AssignmentExpression	gmode = GRAPH_JSON_MODE		4986208	0		=			
ANR	4986432	Identifier	gmode		4986208	0					
ANR	4986433	Identifier	GRAPH_JSON_MODE		4986208	1					
ANR	4986434	BreakStatement	break ;	852:52:21803:21808	4986208	8	True				
ANR	4986435	Label	case 'J' :	853:17:21827:21835	4986208	9	True				
ANR	4986436	ExpressionStatement	gmode = GRAPH_JSON_DIS_MODE	853:27:21837:21864	4986208	10	True				
ANR	4986437	AssignmentExpression	gmode = GRAPH_JSON_DIS_MODE		4986208	0		=			
ANR	4986438	Identifier	gmode		4986208	0					
ANR	4986439	Identifier	GRAPH_JSON_DIS_MODE		4986208	1					
ANR	4986440	BreakStatement	break ;	853:56:21866:21871	4986208	11	True				
ANR	4986441	Label	case 't' :	854:17:21890:21898	4986208	12	True				
ANR	4986442	ExpressionStatement	gmode = GRAPH_TINY_MODE	854:27:21900:21923	4986208	13	True				
ANR	4986443	AssignmentExpression	gmode = GRAPH_TINY_MODE		4986208	0		=			
ANR	4986444	Identifier	gmode		4986208	0					
ANR	4986445	Identifier	GRAPH_TINY_MODE		4986208	1					
ANR	4986446	BreakStatement	break ;	854:52:21925:21930	4986208	14	True				
ANR	4986447	Label	case 'd' :	855:17:21949:21957	4986208	15	True				
ANR	4986448	ExpressionStatement	gmode = GRAPH_DOT_MODE	855:27:21959:21981	4986208	16	True				
ANR	4986449	AssignmentExpression	gmode = GRAPH_DOT_MODE		4986208	0		=			
ANR	4986450	Identifier	gmode		4986208	0					
ANR	4986451	Identifier	GRAPH_DOT_MODE		4986208	1					
ANR	4986452	BreakStatement	break ;	855:51:21983:21988	4986208	17	True				
ANR	4986453	Label	case 's' :	856:17:22007:22015	4986208	18	True				
ANR	4986454	ExpressionStatement	gmode = GRAPH_STAR_MODE	856:27:22017:22040	4986208	19	True				
ANR	4986455	AssignmentExpression	gmode = GRAPH_STAR_MODE		4986208	0		=			
ANR	4986456	Identifier	gmode		4986208	0					
ANR	4986457	Identifier	GRAPH_STAR_MODE		4986208	1					
ANR	4986458	BreakStatement	break ;	856:52:22042:22047	4986208	20	True				
ANR	4986459	Label	case 'g' :	857:17:22066:22074	4986208	21	True				
ANR	4986460	ExpressionStatement	gmode = GRAPH_GML_MODE	857:27:22076:22098	4986208	22	True				
ANR	4986461	AssignmentExpression	gmode = GRAPH_GML_MODE		4986208	0		=			
ANR	4986462	Identifier	gmode		4986208	0					
ANR	4986463	Identifier	GRAPH_GML_MODE		4986208	1					
ANR	4986464	BreakStatement	break ;	857:51:22100:22105	4986208	23	True				
ANR	4986465	Label	case 'a' :	858:17:22124:22132	4986208	24	True				
ANR	4986466	Label	default :	859:24:22158:22165	4986208	25	True				
ANR	4986467	Identifier	default		4986208	0					
ANR	4986468	ExpressionStatement	gmode = GRAPH_DEFAULT_MODE	859:33:22167:22193	4986208	26	True				
ANR	4986469	AssignmentExpression	gmode = GRAPH_DEFAULT_MODE		4986208	0		=			
ANR	4986470	Identifier	gmode		4986208	0					
ANR	4986471	Identifier	GRAPH_DEFAULT_MODE		4986208	1					
ANR	4986472	BreakStatement	break ;	859:61:22195:22200	4986208	27	True				
ANR	4986473	BreakStatement	break ;	861:10:22224:22229	4986208	27	True				
ANR	4986474	Label	case 'G' :	862:2:22233:22241	4986208	28	True				
ANR	4986475	ExpressionStatement	runcmd = r_optarg	863:3:22246:22263	4986208	29	True				
ANR	4986476	AssignmentExpression	runcmd = r_optarg		4986208	0		=			
ANR	4986477	Identifier	runcmd		4986208	0					
ANR	4986478	Identifier	r_optarg		4986208	1					
ANR	4986479	BreakStatement	break ;	864:3:22268:22273	4986208	30	True				
ANR	4986480	Label	case 'c' :	865:2:22277:22285	4986208	31	True				
ANR	4986481	ExpressionStatement	showcount = 1	866:3:22290:22303	4986208	32	True				
ANR	4986482	AssignmentExpression	showcount = 1		4986208	0		=			
ANR	4986483	Identifier	showcount		4986208	0					
ANR	4986484	PrimaryExpression	1		4986208	1					
ANR	4986485	BreakStatement	break ;	867:3:22308:22313	4986208	33	True				
ANR	4986486	Label	case 'C' :	868:2:22317:22325	4986208	34	True				
ANR	4986487	ExpressionStatement	mode = MODE_CODE	869:3:22330:22346	4986208	35	True				
ANR	4986488	AssignmentExpression	mode = MODE_CODE		4986208	0		=			
ANR	4986489	Identifier	mode		4986208	0					
ANR	4986490	Identifier	MODE_CODE		4986208	1					
ANR	4986491	BreakStatement	break ;	870:3:22351:22356	4986208	36	True				
ANR	4986492	Label	case 'i' :	871:2:22360:22368	4986208	37	True				
ANR	4986493	ExpressionStatement	mode = MODE_DIFF_IMPORTS	872:3:22373:22397	4986208	38	True				
ANR	4986494	AssignmentExpression	mode = MODE_DIFF_IMPORTS		4986208	0		=			
ANR	4986495	Identifier	mode		4986208	0					
ANR	4986496	Identifier	MODE_DIFF_IMPORTS		4986208	1					
ANR	4986497	BreakStatement	break ;	873:3:22402:22407	4986208	39	True				
ANR	4986498	Label	case 'n' :	874:2:22411:22419	4986208	40	True				
ANR	4986499	ExpressionStatement	showbare = true	875:3:22424:22439	4986208	41	True				
ANR	4986500	AssignmentExpression	showbare = true		4986208	0		=			
ANR	4986501	Identifier	showbare		4986208	0					
ANR	4986502	Identifier	true		4986208	1					
ANR	4986503	BreakStatement	break ;	876:3:22444:22449	4986208	42	True				
ANR	4986504	Label	case 'O' :	877:2:22453:22461	4986208	43	True				
ANR	4986505	ExpressionStatement	diffops = 1	878:3:22466:22477	4986208	44	True				
ANR	4986506	AssignmentExpression	diffops = 1		4986208	0		=			
ANR	4986507	Identifier	diffops		4986208	0					
ANR	4986508	PrimaryExpression	1		4986208	1					
ANR	4986509	BreakStatement	break ;	879:3:22482:22487	4986208	45	True				
ANR	4986510	Label	case 't' :	880:2:22491:22499	4986208	46	True				
ANR	4986511	ExpressionStatement	threshold = atoi ( r_optarg )	881:3:22504:22531	4986208	47	True				
ANR	4986512	AssignmentExpression	threshold = atoi ( r_optarg )		4986208	0		=			
ANR	4986513	Identifier	threshold		4986208	0					
ANR	4986514	CallExpression	atoi ( r_optarg )		4986208	1					
ANR	4986515	Callee	atoi		4986208	0					
ANR	4986516	Identifier	atoi		4986208	0					
ANR	4986517	ArgumentList	r_optarg		4986208	1					
ANR	4986518	Argument	r_optarg		4986208	0					
ANR	4986519	Identifier	r_optarg		4986208	0					
ANR	4986520	ExpressionStatement	"printf ( ""%s\\n"" , r_optarg )"	882:3:22536:22561	4986208	48	True				
ANR	4986521	CallExpression	"printf ( ""%s\\n"" , r_optarg )"		4986208	0					
ANR	4986522	Callee	printf		4986208	0					
ANR	4986523	Identifier	printf		4986208	0					
ANR	4986524	ArgumentList	"""%s\\n"""		4986208	1					
ANR	4986525	Argument	"""%s\\n"""		4986208	0					
ANR	4986526	PrimaryExpression	"""%s\\n"""		4986208	0					
ANR	4986527	Argument	r_optarg		4986208	1					
ANR	4986528	Identifier	r_optarg		4986208	0					
ANR	4986529	BreakStatement	break ;	883:3:22566:22571	4986208	49	True				
ANR	4986530	Label	case 'd' :	884:2:22575:22583	4986208	50	True				
ANR	4986531	ExpressionStatement	delta = 1	885:3:22588:22597	4986208	51	True				
ANR	4986532	AssignmentExpression	delta = 1		4986208	0		=			
ANR	4986533	Identifier	delta		4986208	0					
ANR	4986534	PrimaryExpression	1		4986208	1					
ANR	4986535	BreakStatement	break ;	886:3:22602:22607	4986208	52	True				
ANR	4986536	Label	case 'D' :	887:2:22611:22619	4986208	53	True				
ANR	4986537	IfStatement	if ( disasm )		4986208	54					
ANR	4986538	Condition	disasm	888:7:22628:22633	4986208	0	True				
ANR	4986539	Identifier	disasm		4986208	0					
ANR	4986540	CompoundStatement		83:15:1879:1879	4986208	1					
ANR	4986541	ExpressionStatement	pdc = true	889:4:22642:22652	4986208	0	True				
ANR	4986542	AssignmentExpression	pdc = true		4986208	0		=			
ANR	4986543	Identifier	pdc		4986208	0					
ANR	4986544	Identifier	true		4986208	1					
ANR	4986545	ExpressionStatement	disasm = false	890:4:22658:22672	4986208	1	True				
ANR	4986546	AssignmentExpression	disasm = false		4986208	0		=			
ANR	4986547	Identifier	disasm		4986208	0					
ANR	4986548	Identifier	false		4986208	1					
ANR	4986549	ExpressionStatement	mode = MODE_CODE	891:4:22678:22694	4986208	2	True				
ANR	4986550	AssignmentExpression	mode = MODE_CODE		4986208	0		=			
ANR	4986551	Identifier	mode		4986208	0					
ANR	4986552	Identifier	MODE_CODE		4986208	1					
ANR	4986553	ElseStatement	else		4986208	0					
ANR	4986554	CompoundStatement		87:10:1949:1949	4986208	0					
ANR	4986555	ExpressionStatement	disasm = true	893:4:22712:22725	4986208	0	True				
ANR	4986556	AssignmentExpression	disasm = true		4986208	0		=			
ANR	4986557	Identifier	disasm		4986208	0					
ANR	4986558	Identifier	true		4986208	1					
ANR	4986559	BreakStatement	break ;	895:3:22735:22740	4986208	55	True				
ANR	4986560	Label	case 'h' :	896:2:22744:22752	4986208	56	True				
ANR	4986561	ReturnStatement	return show_help ( 1 ) ;	897:3:22757:22777	4986208	57	True				
ANR	4986562	CallExpression	show_help ( 1 )		4986208	0					
ANR	4986563	Callee	show_help		4986208	0					
ANR	4986564	Identifier	show_help		4986208	0					
ANR	4986565	ArgumentList	1		4986208	1					
ANR	4986566	Argument	1		4986208	0					
ANR	4986567	PrimaryExpression	1		4986208	0					
ANR	4986568	Label	case 's' :	898:2:22781:22789	4986208	58	True				
ANR	4986569	IfStatement	if ( mode == MODE_DIST )		4986208	59					
ANR	4986570	Condition	mode == MODE_DIST	899:7:22798:22814	4986208	0	True				
ANR	4986571	EqualityExpression	mode == MODE_DIST		4986208	0		==			
ANR	4986572	Identifier	mode		4986208	0					
ANR	4986573	Identifier	MODE_DIST		4986208	1					
ANR	4986574	CompoundStatement		94:26:2060:2060	4986208	1					
ANR	4986575	ExpressionStatement	mode = MODE_DIST_LEVENSTEIN	900:4:22823:22850	4986208	0	True				
ANR	4986576	AssignmentExpression	mode = MODE_DIST_LEVENSTEIN		4986208	0		=			
ANR	4986577	Identifier	mode		4986208	0					
ANR	4986578	Identifier	MODE_DIST_LEVENSTEIN		4986208	1					
ANR	4986579	ElseStatement	else		4986208	0					
ANR	4986580	IfStatement	if ( mode == MODE_DIST_LEVENSTEIN )		4986208	0					
ANR	4986581	Condition	mode == MODE_DIST_LEVENSTEIN	901:14:22866:22893	4986208	0	True				
ANR	4986582	EqualityExpression	mode == MODE_DIST_LEVENSTEIN		4986208	0		==			
ANR	4986583	Identifier	mode		4986208	0					
ANR	4986584	Identifier	MODE_DIST_LEVENSTEIN		4986208	1					
ANR	4986585	CompoundStatement		96:44:2139:2139	4986208	1					
ANR	4986586	ExpressionStatement	mode = MODE_DIST_MYERS	902:4:22902:22924	4986208	0	True				
ANR	4986587	AssignmentExpression	mode = MODE_DIST_MYERS		4986208	0		=			
ANR	4986588	Identifier	mode		4986208	0					
ANR	4986589	Identifier	MODE_DIST_MYERS		4986208	1					
ANR	4986590	ElseStatement	else		4986208	0					
ANR	4986591	CompoundStatement		98:10:2179:2179	4986208	0					
ANR	4986592	ExpressionStatement	mode = MODE_DIST	904:4:22942:22958	4986208	0	True				
ANR	4986593	AssignmentExpression	mode = MODE_DIST		4986208	0		=			
ANR	4986594	Identifier	mode		4986208	0					
ANR	4986595	Identifier	MODE_DIST		4986208	1					
ANR	4986596	BreakStatement	break ;	906:3:22968:22973	4986208	60	True				
ANR	4986597	Label	case 'S' :	907:2:22977:22985	4986208	61	True				
ANR	4986598	ExpressionStatement	columnSort = r_optarg	908:3:22990:23011	4986208	62	True				
ANR	4986599	AssignmentExpression	columnSort = r_optarg		4986208	0		=			
ANR	4986600	Identifier	columnSort		4986208	0					
ANR	4986601	Identifier	r_optarg		4986208	1					
ANR	4986602	BreakStatement	break ;	909:3:23016:23021	4986208	63	True				
ANR	4986603	Label	case 'x' :	910:2:23025:23033	4986208	64	True				
ANR	4986604	ExpressionStatement	mode = MODE_COLS	911:3:23038:23054	4986208	65	True				
ANR	4986605	AssignmentExpression	mode = MODE_COLS		4986208	0		=			
ANR	4986606	Identifier	mode		4986208	0					
ANR	4986607	Identifier	MODE_COLS		4986208	1					
ANR	4986608	BreakStatement	break ;	912:3:23059:23064	4986208	66	True				
ANR	4986609	Label	case 'u' :	913:2:23068:23076	4986208	67	True				
ANR	4986610	ExpressionStatement	diffmode = 'u'	914:3:23081:23095	4986208	68	True				
ANR	4986611	AssignmentExpression	diffmode = 'u'		4986208	0		=			
ANR	4986612	Identifier	diffmode		4986208	0					
ANR	4986613	PrimaryExpression	'u'		4986208	1					
ANR	4986614	BreakStatement	break ;	915:3:23100:23105	4986208	69	True				
ANR	4986615	Label	case 'U' :	916:2:23109:23117	4986208	70	True				
ANR	4986616	ExpressionStatement	diffmode = 'U'	917:3:23122:23136	4986208	71	True				
ANR	4986617	AssignmentExpression	diffmode = 'U'		4986208	0		=			
ANR	4986618	Identifier	diffmode		4986208	0					
ANR	4986619	PrimaryExpression	'U'		4986208	1					
ANR	4986620	BreakStatement	break ;	918:3:23141:23146	4986208	72	True				
ANR	4986621	Label	case 'v' :	919:2:23150:23158	4986208	73	True				
ANR	4986622	ReturnStatement	"return r_main_version_print ( ""radiff2"" ) ;"	920:3:23163:23202	4986208	74	True				
ANR	4986623	CallExpression	"r_main_version_print ( ""radiff2"" )"		4986208	0					
ANR	4986624	Callee	r_main_version_print		4986208	0					
ANR	4986625	Identifier	r_main_version_print		4986208	0					
ANR	4986626	ArgumentList	"""radiff2"""		4986208	1					
ANR	4986627	Argument	"""radiff2"""		4986208	0					
ANR	4986628	PrimaryExpression	"""radiff2"""		4986208	0					
ANR	4986629	Label	case 'q' :	921:2:23206:23214	4986208	75	True				
ANR	4986630	ExpressionStatement	quiet = true	922:3:23219:23231	4986208	76	True				
ANR	4986631	AssignmentExpression	quiet = true		4986208	0		=			
ANR	4986632	Identifier	quiet		4986208	0					
ANR	4986633	Identifier	true		4986208	1					
ANR	4986634	BreakStatement	break ;	923:3:23236:23241	4986208	77	True				
ANR	4986635	Label	case 'V' :	924:2:23245:23253	4986208	78	True				
ANR	4986636	ExpressionStatement	verbose = true	925:3:23258:23272	4986208	79	True				
ANR	4986637	AssignmentExpression	verbose = true		4986208	0		=			
ANR	4986638	Identifier	verbose		4986208	0					
ANR	4986639	Identifier	true		4986208	1					
ANR	4986640	BreakStatement	break ;	926:3:23277:23282	4986208	80	True				
ANR	4986641	Label	case 'j' :	927:2:23286:23294	4986208	81	True				
ANR	4986642	ExpressionStatement	diffmode = 'j'	928:3:23299:23313	4986208	82	True				
ANR	4986643	AssignmentExpression	diffmode = 'j'		4986208	0		=			
ANR	4986644	Identifier	diffmode		4986208	0					
ANR	4986645	PrimaryExpression	'j'		4986208	1					
ANR	4986646	BreakStatement	break ;	929:3:23318:23323	4986208	83	True				
ANR	4986647	Label	case 'z' :	930:2:23327:23335	4986208	84	True				
ANR	4986648	ExpressionStatement	mode = MODE_DIFF_STRS	931:3:23340:23361	4986208	85	True				
ANR	4986649	AssignmentExpression	mode = MODE_DIFF_STRS		4986208	0		=			
ANR	4986650	Identifier	mode		4986208	0					
ANR	4986651	Identifier	MODE_DIFF_STRS		4986208	1					
ANR	4986652	BreakStatement	break ;	932:3:23366:23371	4986208	86	True				
ANR	4986653	Label	case 'Z' :	933:2:23375:23383	4986208	87	True				
ANR	4986654	ExpressionStatement	zignatures = true	934:3:23388:23405	4986208	88	True				
ANR	4986655	AssignmentExpression	zignatures = true		4986208	0		=			
ANR	4986656	Identifier	zignatures		4986208	0					
ANR	4986657	Identifier	true		4986208	1					
ANR	4986658	BreakStatement	break ;	935:3:23410:23415	4986208	89	True				
ANR	4986659	Label	default :	936:2:23419:23426	4986208	90	True				
ANR	4986660	Identifier	default		4986208	0					
ANR	4986661	ReturnStatement	return show_help ( 0 ) ;	937:3:23431:23451	4986208	91	True				
ANR	4986662	CallExpression	show_help ( 0 )		4986208	0					
ANR	4986663	Callee	show_help		4986208	0					
ANR	4986664	Identifier	show_help		4986208	0					
ANR	4986665	ArgumentList	0		4986208	1					
ANR	4986666	Argument	0		4986208	0					
ANR	4986667	PrimaryExpression	0		4986208	0					
ANR	4986668	IfStatement	if ( argc < 3 || r_optind + 2 > argc )		4986208	13					
ANR	4986669	Condition	argc < 3 || r_optind + 2 > argc	941:5:23466:23496	4986208	0	True				
ANR	4986670	OrExpression	argc < 3 || r_optind + 2 > argc		4986208	0		||			
ANR	4986671	RelationalExpression	argc < 3		4986208	0		<			
ANR	4986672	Identifier	argc		4986208	0					
ANR	4986673	PrimaryExpression	3		4986208	1					
ANR	4986674	RelationalExpression	r_optind + 2 > argc		4986208	1		>			
ANR	4986675	AdditiveExpression	r_optind + 2		4986208	0		+			
ANR	4986676	Identifier	r_optind		4986208	0					
ANR	4986677	PrimaryExpression	2		4986208	1					
ANR	4986678	Identifier	argc		4986208	1					
ANR	4986679	CompoundStatement		136:38:2742:2742	4986208	1					
ANR	4986680	ReturnStatement	return show_help ( 0 ) ;	942:2:23503:23523	4986208	0	True				
ANR	4986681	CallExpression	show_help ( 0 )		4986208	0					
ANR	4986682	Callee	show_help		4986208	0					
ANR	4986683	Identifier	show_help		4986208	0					
ANR	4986684	ArgumentList	0		4986208	1					
ANR	4986685	Argument	0		4986208	0					
ANR	4986686	PrimaryExpression	0		4986208	0					
ANR	4986687	ExpressionStatement	file = ( r_optind < argc ) ? argv [ r_optind ] : NULL	944:1:23529:23575	4986208	14	True				
ANR	4986688	AssignmentExpression	file = ( r_optind < argc ) ? argv [ r_optind ] : NULL		4986208	0		=			
ANR	4986689	Identifier	file		4986208	0					
ANR	4986690	ConditionalExpression	( r_optind < argc ) ? argv [ r_optind ] : NULL		4986208	1					
ANR	4986691	Condition	r_optind < argc		4986208	0					
ANR	4986692	RelationalExpression	r_optind < argc		4986208	0		<			
ANR	4986693	Identifier	r_optind		4986208	0					
ANR	4986694	Identifier	argc		4986208	1					
ANR	4986695	ArrayIndexing	argv [ r_optind ]		4986208	1					
ANR	4986696	Identifier	argv		4986208	0					
ANR	4986697	Identifier	r_optind		4986208	1					
ANR	4986698	Identifier	NULL		4986208	2					
ANR	4986699	ExpressionStatement	file2 = ( r_optind + 1 < argc ) ? argv [ r_optind + 1 ] : NULL	945:1:23578:23633	4986208	15	True				
ANR	4986700	AssignmentExpression	file2 = ( r_optind + 1 < argc ) ? argv [ r_optind + 1 ] : NULL		4986208	0		=			
ANR	4986701	Identifier	file2		4986208	0					
ANR	4986702	ConditionalExpression	( r_optind + 1 < argc ) ? argv [ r_optind + 1 ] : NULL		4986208	1					
ANR	4986703	Condition	r_optind + 1 < argc		4986208	0					
ANR	4986704	RelationalExpression	r_optind + 1 < argc		4986208	0		<			
ANR	4986705	AdditiveExpression	r_optind + 1		4986208	0		+			
ANR	4986706	Identifier	r_optind		4986208	0					
ANR	4986707	PrimaryExpression	1		4986208	1					
ANR	4986708	Identifier	argc		4986208	1					
ANR	4986709	ArrayIndexing	argv [ r_optind + 1 ]		4986208	1					
ANR	4986710	Identifier	argv		4986208	0					
ANR	4986711	AdditiveExpression	r_optind + 1		4986208	1		+			
ANR	4986712	Identifier	r_optind		4986208	0					
ANR	4986713	PrimaryExpression	1		4986208	1					
ANR	4986714	Identifier	NULL		4986208	2					
ANR	4986715	SwitchStatement	switch ( mode )		4986208	16					
ANR	4986716	Condition	mode	947:9:23645:23648	4986208	0	True				
ANR	4986717	Identifier	mode		4986208	0					
ANR	4986718	CompoundStatement		142:15:2894:2894	4986208	1					
ANR	4986719	Label	case MODE_GRAPH :	948:1:23654:23669	4986208	0	True				
ANR	4986720	Identifier	MODE_GRAPH		4986208	0					
ANR	4986721	Label	case MODE_CODE :	949:1:23672:23686	4986208	1	True				
ANR	4986722	Identifier	MODE_CODE		4986208	0					
ANR	4986723	Label	case MODE_DIFF_STRS :	950:1:23689:23708	4986208	2	True				
ANR	4986724	Identifier	MODE_DIFF_STRS		4986208	0					
ANR	4986725	Label	case MODE_DIFF_IMPORTS :	951:1:23711:23733	4986208	3	True				
ANR	4986726	Identifier	MODE_DIFF_IMPORTS		4986208	0					
ANR	4986727	ExpressionStatement	c = opencore ( file )	952:2:23737:23756	4986208	4	True				
ANR	4986728	AssignmentExpression	c = opencore ( file )		4986208	0		=			
ANR	4986729	Identifier	c		4986208	0					
ANR	4986730	CallExpression	opencore ( file )		4986208	1					
ANR	4986731	Callee	opencore		4986208	0					
ANR	4986732	Identifier	opencore		4986208	0					
ANR	4986733	ArgumentList	file		4986208	1					
ANR	4986734	Argument	file		4986208	0					
ANR	4986735	Identifier	file		4986208	0					
ANR	4986736	IfStatement	if ( ! c )		4986208	5					
ANR	4986737	Condition	! c	953:6:23764:23765	4986208	0	True				
ANR	4986738	UnaryOperationExpression	! c		4986208	0					
ANR	4986739	UnaryOperator	!		4986208	0					
ANR	4986740	Identifier	c		4986208	1					
ANR	4986741	CompoundStatement		148:10:3011:3011	4986208	1					
ANR	4986742	ExpressionStatement	"eprintf ( ""Cannot open '%s'\\n"" , r_str_get ( file ) )"	954:3:23773:23821	4986208	0	True				
ANR	4986743	CallExpression	"eprintf ( ""Cannot open '%s'\\n"" , r_str_get ( file ) )"		4986208	0					
ANR	4986744	Callee	eprintf		4986208	0					
ANR	4986745	Identifier	eprintf		4986208	0					
ANR	4986746	ArgumentList	"""Cannot open '%s'\\n"""		4986208	1					
ANR	4986747	Argument	"""Cannot open '%s'\\n"""		4986208	0					
ANR	4986748	PrimaryExpression	"""Cannot open '%s'\\n"""		4986208	0					
ANR	4986749	Argument	r_str_get ( file )		4986208	1					
ANR	4986750	CallExpression	r_str_get ( file )		4986208	0					
ANR	4986751	Callee	r_str_get		4986208	0					
ANR	4986752	Identifier	r_str_get		4986208	0					
ANR	4986753	ArgumentList	file		4986208	1					
ANR	4986754	Argument	file		4986208	0					
ANR	4986755	Identifier	file		4986208	0					
ANR	4986756	ExpressionStatement	c2 = opencore ( file2 )	956:2:23829:23850	4986208	6	True				
ANR	4986757	AssignmentExpression	c2 = opencore ( file2 )		4986208	0		=			
ANR	4986758	Identifier	c2		4986208	0					
ANR	4986759	CallExpression	opencore ( file2 )		4986208	1					
ANR	4986760	Callee	opencore		4986208	0					
ANR	4986761	Identifier	opencore		4986208	0					
ANR	4986762	ArgumentList	file2		4986208	1					
ANR	4986763	Argument	file2		4986208	0					
ANR	4986764	Identifier	file2		4986208	0					
ANR	4986765	IfStatement	if ( ! c || ! c2 )		4986208	7					
ANR	4986766	Condition	! c || ! c2	957:6:23858:23866	4986208	0	True				
ANR	4986767	OrExpression	! c || ! c2		4986208	0		||			
ANR	4986768	UnaryOperationExpression	! c		4986208	0					
ANR	4986769	UnaryOperator	!		4986208	0					
ANR	4986770	Identifier	c		4986208	1					
ANR	4986771	UnaryOperationExpression	! c2		4986208	1					
ANR	4986772	UnaryOperator	!		4986208	0					
ANR	4986773	Identifier	c2		4986208	1					
ANR	4986774	CompoundStatement		152:17:3112:3112	4986208	1					
ANR	4986775	ExpressionStatement	"eprintf ( ""Cannot open '%s'\\n"" , r_str_get ( file2 ) )"	958:3:23874:23923	4986208	0	True				
ANR	4986776	CallExpression	"eprintf ( ""Cannot open '%s'\\n"" , r_str_get ( file2 ) )"		4986208	0					
ANR	4986777	Callee	eprintf		4986208	0					
ANR	4986778	Identifier	eprintf		4986208	0					
ANR	4986779	ArgumentList	"""Cannot open '%s'\\n"""		4986208	1					
ANR	4986780	Argument	"""Cannot open '%s'\\n"""		4986208	0					
ANR	4986781	PrimaryExpression	"""Cannot open '%s'\\n"""		4986208	0					
ANR	4986782	Argument	r_str_get ( file2 )		4986208	1					
ANR	4986783	CallExpression	r_str_get ( file2 )		4986208	0					
ANR	4986784	Callee	r_str_get		4986208	0					
ANR	4986785	Identifier	r_str_get		4986208	0					
ANR	4986786	ArgumentList	file2		4986208	1					
ANR	4986787	Argument	file2		4986208	0					
ANR	4986788	Identifier	file2		4986208	0					
ANR	4986789	ReturnStatement	return 1 ;	959:3:23928:23936	4986208	1	True				
ANR	4986790	PrimaryExpression	1		4986208	0					
ANR	4986791	ExpressionStatement	c -> c2 = c2	961:2:23944:23954	4986208	8	True				
ANR	4986792	AssignmentExpression	c -> c2 = c2		4986208	0		=			
ANR	4986793	PtrMemberAccess	c -> c2		4986208	0					
ANR	4986794	Identifier	c		4986208	0					
ANR	4986795	Identifier	c2		4986208	1					
ANR	4986796	Identifier	c2		4986208	1					
ANR	4986797	ExpressionStatement	c2 -> c2 = c	962:2:23958:23968	4986208	9	True				
ANR	4986798	AssignmentExpression	c2 -> c2 = c		4986208	0		=			
ANR	4986799	PtrMemberAccess	c2 -> c2		4986208	0					
ANR	4986800	Identifier	c2		4986208	0					
ANR	4986801	Identifier	c2		4986208	1					
ANR	4986802	Identifier	c		4986208	1					
ANR	4986803	IfStatement	if ( arch )		4986208	10					
ANR	4986804	Condition	arch	963:6:23976:23979	4986208	0	True				
ANR	4986805	Identifier	arch		4986208	0					
ANR	4986806	CompoundStatement		158:12:3225:3225	4986208	1					
ANR	4986807	ExpressionStatement	"r_config_set ( c -> config , ""asm.arch"" , arch )"	964:3:23987:24029	4986208	0	True				
ANR	4986808	CallExpression	"r_config_set ( c -> config , ""asm.arch"" , arch )"		4986208	0					
ANR	4986809	Callee	r_config_set		4986208	0					
ANR	4986810	Identifier	r_config_set		4986208	0					
ANR	4986811	ArgumentList	c -> config		4986208	1					
ANR	4986812	Argument	c -> config		4986208	0					
ANR	4986813	PtrMemberAccess	c -> config		4986208	0					
ANR	4986814	Identifier	c		4986208	0					
ANR	4986815	Identifier	config		4986208	1					
ANR	4986816	Argument	"""asm.arch"""		4986208	1					
ANR	4986817	PrimaryExpression	"""asm.arch"""		4986208	0					
ANR	4986818	Argument	arch		4986208	2					
ANR	4986819	Identifier	arch		4986208	0					
ANR	4986820	ExpressionStatement	"r_config_set ( c2 -> config , ""asm.arch"" , arch )"	965:3:24034:24077	4986208	1	True				
ANR	4986821	CallExpression	"r_config_set ( c2 -> config , ""asm.arch"" , arch )"		4986208	0					
ANR	4986822	Callee	r_config_set		4986208	0					
ANR	4986823	Identifier	r_config_set		4986208	0					
ANR	4986824	ArgumentList	c2 -> config		4986208	1					
ANR	4986825	Argument	c2 -> config		4986208	0					
ANR	4986826	PtrMemberAccess	c2 -> config		4986208	0					
ANR	4986827	Identifier	c2		4986208	0					
ANR	4986828	Identifier	config		4986208	1					
ANR	4986829	Argument	"""asm.arch"""		4986208	1					
ANR	4986830	PrimaryExpression	"""asm.arch"""		4986208	0					
ANR	4986831	Argument	arch		4986208	2					
ANR	4986832	Identifier	arch		4986208	0					
ANR	4986833	IfStatement	if ( bits )		4986208	11					
ANR	4986834	Condition	bits	967:6:24089:24092	4986208	0	True				
ANR	4986835	Identifier	bits		4986208	0					
ANR	4986836	CompoundStatement		162:12:3338:3338	4986208	1					
ANR	4986837	ExpressionStatement	"r_config_set_i ( c -> config , ""asm.bits"" , bits )"	968:3:24100:24144	4986208	0	True				
ANR	4986838	CallExpression	"r_config_set_i ( c -> config , ""asm.bits"" , bits )"		4986208	0					
ANR	4986839	Callee	r_config_set_i		4986208	0					
ANR	4986840	Identifier	r_config_set_i		4986208	0					
ANR	4986841	ArgumentList	c -> config		4986208	1					
ANR	4986842	Argument	c -> config		4986208	0					
ANR	4986843	PtrMemberAccess	c -> config		4986208	0					
ANR	4986844	Identifier	c		4986208	0					
ANR	4986845	Identifier	config		4986208	1					
ANR	4986846	Argument	"""asm.bits"""		4986208	1					
ANR	4986847	PrimaryExpression	"""asm.bits"""		4986208	0					
ANR	4986848	Argument	bits		4986208	2					
ANR	4986849	Identifier	bits		4986208	0					
ANR	4986850	ExpressionStatement	"r_config_set_i ( c2 -> config , ""asm.bits"" , bits )"	969:3:24149:24194	4986208	1	True				
ANR	4986851	CallExpression	"r_config_set_i ( c2 -> config , ""asm.bits"" , bits )"		4986208	0					
ANR	4986852	Callee	r_config_set_i		4986208	0					
ANR	4986853	Identifier	r_config_set_i		4986208	0					
ANR	4986854	ArgumentList	c2 -> config		4986208	1					
ANR	4986855	Argument	c2 -> config		4986208	0					
ANR	4986856	PtrMemberAccess	c2 -> config		4986208	0					
ANR	4986857	Identifier	c2		4986208	0					
ANR	4986858	Identifier	config		4986208	1					
ANR	4986859	Argument	"""asm.bits"""		4986208	1					
ANR	4986860	PrimaryExpression	"""asm.bits"""		4986208	0					
ANR	4986861	Argument	bits		4986208	2					
ANR	4986862	Identifier	bits		4986208	0					
ANR	4986863	IfStatement	if ( columnSort )		4986208	12					
ANR	4986864	Condition	columnSort	971:6:24206:24215	4986208	0	True				
ANR	4986865	Identifier	columnSort		4986208	0					
ANR	4986866	CompoundStatement		166:18:3461:3461	4986208	1					
ANR	4986867	ExpressionStatement	"r_config_set ( c -> config , ""diff.sort"" , columnSort )"	972:3:24223:24272	4986208	0	True				
ANR	4986868	CallExpression	"r_config_set ( c -> config , ""diff.sort"" , columnSort )"		4986208	0					
ANR	4986869	Callee	r_config_set		4986208	0					
ANR	4986870	Identifier	r_config_set		4986208	0					
ANR	4986871	ArgumentList	c -> config		4986208	1					
ANR	4986872	Argument	c -> config		4986208	0					
ANR	4986873	PtrMemberAccess	c -> config		4986208	0					
ANR	4986874	Identifier	c		4986208	0					
ANR	4986875	Identifier	config		4986208	1					
ANR	4986876	Argument	"""diff.sort"""		4986208	1					
ANR	4986877	PrimaryExpression	"""diff.sort"""		4986208	0					
ANR	4986878	Argument	columnSort		4986208	2					
ANR	4986879	Identifier	columnSort		4986208	0					
ANR	4986880	ExpressionStatement	"r_config_set ( c2 -> config , ""diff.sort"" , columnSort )"	973:3:24277:24327	4986208	1	True				
ANR	4986881	CallExpression	"r_config_set ( c2 -> config , ""diff.sort"" , columnSort )"		4986208	0					
ANR	4986882	Callee	r_config_set		4986208	0					
ANR	4986883	Identifier	r_config_set		4986208	0					
ANR	4986884	ArgumentList	c2 -> config		4986208	1					
ANR	4986885	Argument	c2 -> config		4986208	0					
ANR	4986886	PtrMemberAccess	c2 -> config		4986208	0					
ANR	4986887	Identifier	c2		4986208	0					
ANR	4986888	Identifier	config		4986208	1					
ANR	4986889	Argument	"""diff.sort"""		4986208	1					
ANR	4986890	PrimaryExpression	"""diff.sort"""		4986208	0					
ANR	4986891	Argument	columnSort		4986208	2					
ANR	4986892	Identifier	columnSort		4986208	0					
ANR	4986893	ExpressionStatement	"r_config_set_i ( c -> config , ""diff.bare"" , showbare )"	975:2:24335:24384	4986208	13	True				
ANR	4986894	CallExpression	"r_config_set_i ( c -> config , ""diff.bare"" , showbare )"		4986208	0					
ANR	4986895	Callee	r_config_set_i		4986208	0					
ANR	4986896	Identifier	r_config_set_i		4986208	0					
ANR	4986897	ArgumentList	c -> config		4986208	1					
ANR	4986898	Argument	c -> config		4986208	0					
ANR	4986899	PtrMemberAccess	c -> config		4986208	0					
ANR	4986900	Identifier	c		4986208	0					
ANR	4986901	Identifier	config		4986208	1					
ANR	4986902	Argument	"""diff.bare"""		4986208	1					
ANR	4986903	PrimaryExpression	"""diff.bare"""		4986208	0					
ANR	4986904	Argument	showbare		4986208	2					
ANR	4986905	Identifier	showbare		4986208	0					
ANR	4986906	ExpressionStatement	"r_config_set_i ( c2 -> config , ""diff.bare"" , showbare )"	976:2:24388:24438	4986208	14	True				
ANR	4986907	CallExpression	"r_config_set_i ( c2 -> config , ""diff.bare"" , showbare )"		4986208	0					
ANR	4986908	Callee	r_config_set_i		4986208	0					
ANR	4986909	Identifier	r_config_set_i		4986208	0					
ANR	4986910	ArgumentList	c2 -> config		4986208	1					
ANR	4986911	Argument	c2 -> config		4986208	0					
ANR	4986912	PtrMemberAccess	c2 -> config		4986208	0					
ANR	4986913	Identifier	c2		4986208	0					
ANR	4986914	Identifier	config		4986208	1					
ANR	4986915	Argument	"""diff.bare"""		4986208	1					
ANR	4986916	PrimaryExpression	"""diff.bare"""		4986208	0					
ANR	4986917	Argument	showbare		4986208	2					
ANR	4986918	Identifier	showbare		4986208	0					
ANR	4986919	ExpressionStatement	"r_anal_diff_setup_i ( c -> anal , diffops , threshold , threshold )"	977:2:24442:24502	4986208	15	True				
ANR	4986920	CallExpression	"r_anal_diff_setup_i ( c -> anal , diffops , threshold , threshold )"		4986208	0					
ANR	4986921	Callee	r_anal_diff_setup_i		4986208	0					
ANR	4986922	Identifier	r_anal_diff_setup_i		4986208	0					
ANR	4986923	ArgumentList	c -> anal		4986208	1					
ANR	4986924	Argument	c -> anal		4986208	0					
ANR	4986925	PtrMemberAccess	c -> anal		4986208	0					
ANR	4986926	Identifier	c		4986208	0					
ANR	4986927	Identifier	anal		4986208	1					
ANR	4986928	Argument	diffops		4986208	1					
ANR	4986929	Identifier	diffops		4986208	0					
ANR	4986930	Argument	threshold		4986208	2					
ANR	4986931	Identifier	threshold		4986208	0					
ANR	4986932	Argument	threshold		4986208	3					
ANR	4986933	Identifier	threshold		4986208	0					
ANR	4986934	ExpressionStatement	"r_anal_diff_setup_i ( c2 -> anal , diffops , threshold , threshold )"	978:2:24506:24567	4986208	16	True				
ANR	4986935	CallExpression	"r_anal_diff_setup_i ( c2 -> anal , diffops , threshold , threshold )"		4986208	0					
ANR	4986936	Callee	r_anal_diff_setup_i		4986208	0					
ANR	4986937	Identifier	r_anal_diff_setup_i		4986208	0					
ANR	4986938	ArgumentList	c2 -> anal		4986208	1					
ANR	4986939	Argument	c2 -> anal		4986208	0					
ANR	4986940	PtrMemberAccess	c2 -> anal		4986208	0					
ANR	4986941	Identifier	c2		4986208	0					
ANR	4986942	Identifier	anal		4986208	1					
ANR	4986943	Argument	diffops		4986208	1					
ANR	4986944	Identifier	diffops		4986208	0					
ANR	4986945	Argument	threshold		4986208	2					
ANR	4986946	Identifier	threshold		4986208	0					
ANR	4986947	Argument	threshold		4986208	3					
ANR	4986948	Identifier	threshold		4986208	0					
ANR	4986949	IfStatement	if ( pdc )		4986208	17					
ANR	4986950	Condition	pdc	979:6:24575:24577	4986208	0	True				
ANR	4986951	Identifier	pdc		4986208	0					
ANR	4986952	CompoundStatement		187:3:4220:4259	4986208	1					
ANR	4986953	IfStatement	if ( ! addr )		4986208	0					
ANR	4986954	Condition	! addr	980:7:24589:24593	4986208	0	True				
ANR	4986955	UnaryOperationExpression	! addr		4986208	0					
ANR	4986956	UnaryOperator	!		4986208	0					
ANR	4986957	Identifier	addr		4986208	1					
ANR	4986958	CompoundStatement		175:14:3839:3839	4986208	1					
ANR	4986959	ExpressionStatement	"addr = ""main"""	982:4:24625:24638	4986208	0	True				
ANR	4986960	AssignmentExpression	"addr = ""main"""		4986208	0		=			
ANR	4986961	Identifier	addr		4986208	0					
ANR	4986962	PrimaryExpression	"""main"""		4986208	1					
ANR	4986963	ExpressionStatement	"r_config_set_i ( c -> config , ""scr.color"" , COLOR_MODE_DISABLED )"	985:3:24691:24751	4986208	1	True				
ANR	4986964	CallExpression	"r_config_set_i ( c -> config , ""scr.color"" , COLOR_MODE_DISABLED )"		4986208	0					
ANR	4986965	Callee	r_config_set_i		4986208	0					
ANR	4986966	Identifier	r_config_set_i		4986208	0					
ANR	4986967	ArgumentList	c -> config		4986208	1					
ANR	4986968	Argument	c -> config		4986208	0					
ANR	4986969	PtrMemberAccess	c -> config		4986208	0					
ANR	4986970	Identifier	c		4986208	0					
ANR	4986971	Identifier	config		4986208	1					
ANR	4986972	Argument	"""scr.color"""		4986208	1					
ANR	4986973	PrimaryExpression	"""scr.color"""		4986208	0					
ANR	4986974	Argument	COLOR_MODE_DISABLED		4986208	2					
ANR	4986975	Identifier	COLOR_MODE_DISABLED		4986208	0					
ANR	4986976	ExpressionStatement	"r_config_set_i ( c2 -> config , ""scr.color"" , COLOR_MODE_DISABLED )"	986:3:24756:24817	4986208	2	True				
ANR	4986977	CallExpression	"r_config_set_i ( c2 -> config , ""scr.color"" , COLOR_MODE_DISABLED )"		4986208	0					
ANR	4986978	Callee	r_config_set_i		4986208	0					
ANR	4986979	Identifier	r_config_set_i		4986208	0					
ANR	4986980	ArgumentList	c2 -> config		4986208	1					
ANR	4986981	Argument	c2 -> config		4986208	0					
ANR	4986982	PtrMemberAccess	c2 -> config		4986208	0					
ANR	4986983	Identifier	c2		4986208	0					
ANR	4986984	Identifier	config		4986208	1					
ANR	4986985	Argument	"""scr.color"""		4986208	1					
ANR	4986986	PrimaryExpression	"""scr.color"""		4986208	0					
ANR	4986987	Argument	COLOR_MODE_DISABLED		4986208	2					
ANR	4986988	Identifier	COLOR_MODE_DISABLED		4986208	0					
ANR	4986989	IdentifierDeclStatement	"ut64 addra = r_num_math ( c -> num , addr ) ;"	988:3:24823:24861	4986208	3	True				
ANR	4986990	IdentifierDecl	"addra = r_num_math ( c -> num , addr )"		4986208	0					
ANR	4986991	IdentifierDeclType	ut64		4986208	0					
ANR	4986992	Identifier	addra		4986208	1					
ANR	4986993	AssignmentExpression	"addra = r_num_math ( c -> num , addr )"		4986208	2		=			
ANR	4986994	Identifier	addra		4986208	0					
ANR	4986995	CallExpression	"r_num_math ( c -> num , addr )"		4986208	1					
ANR	4986996	Callee	r_num_math		4986208	0					
ANR	4986997	Identifier	r_num_math		4986208	0					
ANR	4986998	ArgumentList	c -> num		4986208	1					
ANR	4986999	Argument	c -> num		4986208	0					
ANR	4987000	PtrMemberAccess	c -> num		4986208	0					
ANR	4987001	Identifier	c		4986208	0					
ANR	4987002	Identifier	num		4986208	1					
ANR	4987003	Argument	addr		4986208	1					
ANR	4987004	Identifier	addr		4986208	0					
ANR	4987005	Statement	bufa	989:3:24866:24869	4986208	4	True				
ANR	4987006	Statement	=	989:8:24871:24871	4986208	5	True				
ANR	4987007	Statement	(	989:10:24873:24873	4986208	6	True				
ANR	4987008	Statement	ut8	989:11:24874:24876	4986208	7	True				
ANR	4987009	Statement	*	989:15:24878:24878	4986208	8	True				
ANR	4987010	Statement	)	989:16:24879:24879	4986208	9	True				
ANR	4987011	Statement	r_core_cmd_strf	989:18:24881:24895	4986208	10	True				
ANR	4987012	Statement	(	989:34:24897:24897	4986208	11	True				
ANR	4987013	Statement	c	989:35:24898:24898	4986208	12	True				
ANR	4987014	Statement	","	989:36:24899:24899	4986208	13	True				
ANR	4987015	Statement	"""af;pdc @ 0x%08"""	989:38:24901:24916	4986208	14	True				
ANR	4987016	Statement	PFMT64x	989:54:24917:24923	4986208	15	True				
ANR	4987017	Statement	","	989:61:24924:24924	4986208	16	True				
ANR	4987018	Statement	addra	989:63:24926:24930	4986208	17	True				
ANR	4987019	Statement	)	989:68:24931:24931	4986208	18	True				
ANR	4987020	ExpressionStatement		989:69:24932:24932	4986208	19	True				
ANR	4987021	ExpressionStatement	sza = strlen ( ( const char * ) bufa )	990:3:24937:24971	4986208	20	True				
ANR	4987022	AssignmentExpression	sza = strlen ( ( const char * ) bufa )		4986208	0		=			
ANR	4987023	Identifier	sza		4986208	0					
ANR	4987024	CallExpression	strlen ( ( const char * ) bufa )		4986208	1					
ANR	4987025	Callee	strlen		4986208	0					
ANR	4987026	Identifier	strlen		4986208	0					
ANR	4987027	ArgumentList	( const char * ) bufa		4986208	1					
ANR	4987028	Argument	( const char * ) bufa		4986208	0					
ANR	4987029	CastExpression	( const char * ) bufa		4986208	0					
ANR	4987030	CastTarget	const char *		4986208	0					
ANR	4987031	Identifier	bufa		4986208	1					
ANR	4987032	IdentifierDeclStatement	"ut64 addrb = r_num_math ( c2 -> num , addr ) ;"	992:3:24977:25016	4986208	21	True				
ANR	4987033	IdentifierDecl	"addrb = r_num_math ( c2 -> num , addr )"		4986208	0					
ANR	4987034	IdentifierDeclType	ut64		4986208	0					
ANR	4987035	Identifier	addrb		4986208	1					
ANR	4987036	AssignmentExpression	"addrb = r_num_math ( c2 -> num , addr )"		4986208	2		=			
ANR	4987037	Identifier	addrb		4986208	0					
ANR	4987038	CallExpression	"r_num_math ( c2 -> num , addr )"		4986208	1					
ANR	4987039	Callee	r_num_math		4986208	0					
ANR	4987040	Identifier	r_num_math		4986208	0					
ANR	4987041	ArgumentList	c2 -> num		4986208	1					
ANR	4987042	Argument	c2 -> num		4986208	0					
ANR	4987043	PtrMemberAccess	c2 -> num		4986208	0					
ANR	4987044	Identifier	c2		4986208	0					
ANR	4987045	Identifier	num		4986208	1					
ANR	4987046	Argument	addr		4986208	1					
ANR	4987047	Identifier	addr		4986208	0					
ANR	4987048	Statement	bufb	993:3:25021:25024	4986208	22	True				
ANR	4987049	Statement	=	993:8:25026:25026	4986208	23	True				
ANR	4987050	Statement	(	993:10:25028:25028	4986208	24	True				
ANR	4987051	Statement	ut8	993:11:25029:25031	4986208	25	True				
ANR	4987052	Statement	*	993:15:25033:25033	4986208	26	True				
ANR	4987053	Statement	)	993:16:25034:25034	4986208	27	True				
ANR	4987054	Statement	r_core_cmd_strf	993:18:25036:25050	4986208	28	True				
ANR	4987055	Statement	(	993:34:25052:25052	4986208	29	True				
ANR	4987056	Statement	c2	993:35:25053:25054	4986208	30	True				
ANR	4987057	Statement	","	993:37:25055:25055	4986208	31	True				
ANR	4987058	Statement	"""af;pdc @ 0x%08"""	993:39:25057:25072	4986208	32	True				
ANR	4987059	Statement	PFMT64x	993:55:25073:25079	4986208	33	True				
ANR	4987060	Statement	","	993:62:25080:25080	4986208	34	True				
ANR	4987061	Statement	addrb	993:64:25082:25086	4986208	35	True				
ANR	4987062	Statement	)	993:69:25087:25087	4986208	36	True				
ANR	4987063	ExpressionStatement		993:70:25088:25088	4986208	37	True				
ANR	4987064	ExpressionStatement	szb = strlen ( ( const char * ) bufb )	994:3:25093:25127	4986208	38	True				
ANR	4987065	AssignmentExpression	szb = strlen ( ( const char * ) bufb )		4986208	0		=			
ANR	4987066	Identifier	szb		4986208	0					
ANR	4987067	CallExpression	strlen ( ( const char * ) bufb )		4986208	1					
ANR	4987068	Callee	strlen		4986208	0					
ANR	4987069	Identifier	strlen		4986208	0					
ANR	4987070	ArgumentList	( const char * ) bufb		4986208	1					
ANR	4987071	Argument	( const char * ) bufb		4986208	0					
ANR	4987072	CastExpression	( const char * ) bufb		4986208	0					
ANR	4987073	CastTarget	const char *		4986208	0					
ANR	4987074	Identifier	bufb		4986208	1					
ANR	4987075	ExpressionStatement	mode = MODE_DIFF	995:3:25132:25148	4986208	39	True				
ANR	4987076	AssignmentExpression	mode = MODE_DIFF		4986208	0		=			
ANR	4987077	Identifier	mode		4986208	0					
ANR	4987078	Identifier	MODE_DIFF		4986208	1					
ANR	4987079	ElseStatement	else		4986208	0					
ANR	4987080	IfStatement	if ( mode == MODE_GRAPH )		4986208	0					
ANR	4987081	Condition	mode == MODE_GRAPH	996:13:25163:25180	4986208	0	True				
ANR	4987082	EqualityExpression	mode == MODE_GRAPH		4986208	0		==			
ANR	4987083	Identifier	mode		4986208	0					
ANR	4987084	Identifier	MODE_GRAPH		4986208	1					
ANR	4987085	CompoundStatement		197:3:4572:4606	4986208	1					
ANR	4987086	IdentifierDeclStatement	"int depth = r_config_get_i ( c -> config , ""anal.depth"" ) ;"	997:3:25188:25240	4986208	0	True				
ANR	4987087	IdentifierDecl	"depth = r_config_get_i ( c -> config , ""anal.depth"" )"		4986208	0					
ANR	4987088	IdentifierDeclType	int		4986208	0					
ANR	4987089	Identifier	depth		4986208	1					
ANR	4987090	AssignmentExpression	"depth = r_config_get_i ( c -> config , ""anal.depth"" )"		4986208	2		=			
ANR	4987091	Identifier	depth		4986208	0					
ANR	4987092	CallExpression	"r_config_get_i ( c -> config , ""anal.depth"" )"		4986208	1					
ANR	4987093	Callee	r_config_get_i		4986208	0					
ANR	4987094	Identifier	r_config_get_i		4986208	0					
ANR	4987095	ArgumentList	c -> config		4986208	1					
ANR	4987096	Argument	c -> config		4986208	0					
ANR	4987097	PtrMemberAccess	c -> config		4986208	0					
ANR	4987098	Identifier	c		4986208	0					
ANR	4987099	Identifier	config		4986208	1					
ANR	4987100	Argument	"""anal.depth"""		4986208	1					
ANR	4987101	PrimaryExpression	"""anal.depth"""		4986208	0					
ANR	4987102	IfStatement	if ( depth < 1 )		4986208	1					
ANR	4987103	Condition	depth < 1	998:7:25249:25257	4986208	0	True				
ANR	4987104	RelationalExpression	depth < 1		4986208	0		<			
ANR	4987105	Identifier	depth		4986208	0					
ANR	4987106	PrimaryExpression	1		4986208	1					
ANR	4987107	CompoundStatement		193:18:4503:4503	4986208	1					
ANR	4987108	ExpressionStatement	depth = 64	999:4:25266:25276	4986208	0	True				
ANR	4987109	AssignmentExpression	depth = 64		4986208	0		=			
ANR	4987110	Identifier	depth		4986208	0					
ANR	4987111	PrimaryExpression	64		4986208	1					
ANR	4987112	IdentifierDeclStatement	"char * words = strdup ( addr ? addr : ""0"" ) ;"	1001:3:25286:25324	4986208	2	True				
ANR	4987113	IdentifierDecl	"* words = strdup ( addr ? addr : ""0"" )"		4986208	0					
ANR	4987114	IdentifierDeclType	char *		4986208	0					
ANR	4987115	Identifier	words		4986208	1					
ANR	4987116	AssignmentExpression	"* words = strdup ( addr ? addr : ""0"" )"		4986208	2		=			
ANR	4987117	Identifier	words		4986208	0					
ANR	4987118	CallExpression	"strdup ( addr ? addr : ""0"" )"		4986208	1					
ANR	4987119	Callee	strdup		4986208	0					
ANR	4987120	Identifier	strdup		4986208	0					
ANR	4987121	ArgumentList	"addr ? addr : ""0"""		4986208	1					
ANR	4987122	Argument	"addr ? addr : ""0"""		4986208	0					
ANR	4987123	ConditionalExpression	"addr ? addr : ""0"""		4986208	0					
ANR	4987124	Condition	addr		4986208	0					
ANR	4987125	Identifier	addr		4986208	0					
ANR	4987126	Identifier	addr		4986208	1					
ANR	4987127	PrimaryExpression	"""0"""		4986208	2					
ANR	4987128	IdentifierDeclStatement	"char * second = strstr ( words , "","" ) ;"	1002:3:25329:25363	4986208	3	True				
ANR	4987129	IdentifierDecl	"* second = strstr ( words , "","" )"		4986208	0					
ANR	4987130	IdentifierDeclType	char *		4986208	0					
ANR	4987131	Identifier	second		4986208	1					
ANR	4987132	AssignmentExpression	"* second = strstr ( words , "","" )"		4986208	2		=			
ANR	4987133	Identifier	second		4986208	0					
ANR	4987134	CallExpression	"strstr ( words , "","" )"		4986208	1					
ANR	4987135	Callee	strstr		4986208	0					
ANR	4987136	Identifier	strstr		4986208	0					
ANR	4987137	ArgumentList	words		4986208	1					
ANR	4987138	Argument	words		4986208	0					
ANR	4987139	Identifier	words		4986208	0					
ANR	4987140	Argument	""","""		4986208	1					
ANR	4987141	PrimaryExpression	""","""		4986208	0					
ANR	4987142	IfStatement	if ( second )		4986208	4					
ANR	4987143	Condition	second	1003:7:25372:25377	4986208	0	True				
ANR	4987144	Identifier	second		4986208	0					
ANR	4987145	CompoundStatement		200:4:4648:4685	4986208	1					
ANR	4987146	ExpressionStatement	* second ++ = 0	1004:4:25386:25399	4986208	0	True				
ANR	4987147	AssignmentExpression	* second ++ = 0		4986208	0		=			
ANR	4987148	UnaryOperationExpression	* second ++		4986208	0					
ANR	4987149	UnaryOperator	*		4986208	0					
ANR	4987150	PostIncDecOperationExpression	second ++		4986208	1					
ANR	4987151	Identifier	second		4986208	0					
ANR	4987152	IncDec	++		4986208	1					
ANR	4987153	PrimaryExpression	0		4986208	1					
ANR	4987154	IdentifierDeclStatement	"ut64 off = r_num_math ( c -> num , words ) ;"	1005:4:25405:25442	4986208	1	True				
ANR	4987155	IdentifierDecl	"off = r_num_math ( c -> num , words )"		4986208	0					
ANR	4987156	IdentifierDeclType	ut64		4986208	0					
ANR	4987157	Identifier	off		4986208	1					
ANR	4987158	AssignmentExpression	"off = r_num_math ( c -> num , words )"		4986208	2		=			
ANR	4987159	Identifier	off		4986208	0					
ANR	4987160	CallExpression	"r_num_math ( c -> num , words )"		4986208	1					
ANR	4987161	Callee	r_num_math		4986208	0					
ANR	4987162	Identifier	r_num_math		4986208	0					
ANR	4987163	ArgumentList	c -> num		4986208	1					
ANR	4987164	Argument	c -> num		4986208	0					
ANR	4987165	PtrMemberAccess	c -> num		4986208	0					
ANR	4987166	Identifier	c		4986208	0					
ANR	4987167	Identifier	num		4986208	1					
ANR	4987168	Argument	words		4986208	1					
ANR	4987169	Identifier	words		4986208	0					
ANR	4987170	ExpressionStatement	"r_core_anal_fcn ( c , off , UT64_MAX , R_ANAL_REF_TYPE_NULL , depth )"	1007:4:25495:25558	4986208	2	True				
ANR	4987171	CallExpression	"r_core_anal_fcn ( c , off , UT64_MAX , R_ANAL_REF_TYPE_NULL , depth )"		4986208	0					
ANR	4987172	Callee	r_core_anal_fcn		4986208	0					
ANR	4987173	Identifier	r_core_anal_fcn		4986208	0					
ANR	4987174	ArgumentList	c		4986208	1					
ANR	4987175	Argument	c		4986208	0					
ANR	4987176	Identifier	c		4986208	0					
ANR	4987177	Argument	off		4986208	1					
ANR	4987178	Identifier	off		4986208	0					
ANR	4987179	Argument	UT64_MAX		4986208	2					
ANR	4987180	Identifier	UT64_MAX		4986208	0					
ANR	4987181	Argument	R_ANAL_REF_TYPE_NULL		4986208	3					
ANR	4987182	Identifier	R_ANAL_REF_TYPE_NULL		4986208	0					
ANR	4987183	Argument	depth		4986208	4					
ANR	4987184	Identifier	depth		4986208	0					
ANR	4987185	ExpressionStatement	"r_core_anal_fcn ( c2 , r_num_math ( c2 -> num , second ) , UT64_MAX , R_ANAL_REF_TYPE_NULL , depth )"	1008:4:25564:25658	4986208	3	True				
ANR	4987186	CallExpression	"r_core_anal_fcn ( c2 , r_num_math ( c2 -> num , second ) , UT64_MAX , R_ANAL_REF_TYPE_NULL , depth )"		4986208	0					
ANR	4987187	Callee	r_core_anal_fcn		4986208	0					
ANR	4987188	Identifier	r_core_anal_fcn		4986208	0					
ANR	4987189	ArgumentList	c2		4986208	1					
ANR	4987190	Argument	c2		4986208	0					
ANR	4987191	Identifier	c2		4986208	0					
ANR	4987192	Argument	"r_num_math ( c2 -> num , second )"		4986208	1					
ANR	4987193	CallExpression	"r_num_math ( c2 -> num , second )"		4986208	0					
ANR	4987194	Callee	r_num_math		4986208	0					
ANR	4987195	Identifier	r_num_math		4986208	0					
ANR	4987196	ArgumentList	c2 -> num		4986208	1					
ANR	4987197	Argument	c2 -> num		4986208	0					
ANR	4987198	PtrMemberAccess	c2 -> num		4986208	0					
ANR	4987199	Identifier	c2		4986208	0					
ANR	4987200	Identifier	num		4986208	1					
ANR	4987201	Argument	second		4986208	1					
ANR	4987202	Identifier	second		4986208	0					
ANR	4987203	Argument	UT64_MAX		4986208	2					
ANR	4987204	Identifier	UT64_MAX		4986208	0					
ANR	4987205	Argument	R_ANAL_REF_TYPE_NULL		4986208	3					
ANR	4987206	Identifier	R_ANAL_REF_TYPE_NULL		4986208	0					
ANR	4987207	Argument	depth		4986208	4					
ANR	4987208	Identifier	depth		4986208	0					
ANR	4987209	ExpressionStatement	"r_core_gdiff ( c , c2 )"	1010:4:25664:25684	4986208	4	True				
ANR	4987210	CallExpression	"r_core_gdiff ( c , c2 )"		4986208	0					
ANR	4987211	Callee	r_core_gdiff		4986208	0					
ANR	4987212	Identifier	r_core_gdiff		4986208	0					
ANR	4987213	ArgumentList	c		4986208	1					
ANR	4987214	Argument	c		4986208	0					
ANR	4987215	Identifier	c		4986208	0					
ANR	4987216	Argument	c2		4986208	1					
ANR	4987217	Identifier	c2		4986208	0					
ANR	4987218	ExpressionStatement	"__print_diff_graph ( c , off , gmode )"	1011:4:25690:25724	4986208	5	True				
ANR	4987219	CallExpression	"__print_diff_graph ( c , off , gmode )"		4986208	0					
ANR	4987220	Callee	__print_diff_graph		4986208	0					
ANR	4987221	Identifier	__print_diff_graph		4986208	0					
ANR	4987222	ArgumentList	c		4986208	1					
ANR	4987223	Argument	c		4986208	0					
ANR	4987224	Identifier	c		4986208	0					
ANR	4987225	Argument	off		4986208	1					
ANR	4987226	Identifier	off		4986208	0					
ANR	4987227	Argument	gmode		4986208	2					
ANR	4987228	Identifier	gmode		4986208	0					
ANR	4987229	ElseStatement	else		4986208	0					
ANR	4987230	CompoundStatement		207:10:4979:4979	4986208	0					
ANR	4987231	ExpressionStatement	"r_core_anal_fcn ( c , r_num_math ( c -> num , words ) , UT64_MAX , R_ANAL_REF_TYPE_NULL , depth )"	1013:4:25742:25833	4986208	0	True				
ANR	4987232	CallExpression	"r_core_anal_fcn ( c , r_num_math ( c -> num , words ) , UT64_MAX , R_ANAL_REF_TYPE_NULL , depth )"		4986208	0					
ANR	4987233	Callee	r_core_anal_fcn		4986208	0					
ANR	4987234	Identifier	r_core_anal_fcn		4986208	0					
ANR	4987235	ArgumentList	c		4986208	1					
ANR	4987236	Argument	c		4986208	0					
ANR	4987237	Identifier	c		4986208	0					
ANR	4987238	Argument	"r_num_math ( c -> num , words )"		4986208	1					
ANR	4987239	CallExpression	"r_num_math ( c -> num , words )"		4986208	0					
ANR	4987240	Callee	r_num_math		4986208	0					
ANR	4987241	Identifier	r_num_math		4986208	0					
ANR	4987242	ArgumentList	c -> num		4986208	1					
ANR	4987243	Argument	c -> num		4986208	0					
ANR	4987244	PtrMemberAccess	c -> num		4986208	0					
ANR	4987245	Identifier	c		4986208	0					
ANR	4987246	Identifier	num		4986208	1					
ANR	4987247	Argument	words		4986208	1					
ANR	4987248	Identifier	words		4986208	0					
ANR	4987249	Argument	UT64_MAX		4986208	2					
ANR	4987250	Identifier	UT64_MAX		4986208	0					
ANR	4987251	Argument	R_ANAL_REF_TYPE_NULL		4986208	3					
ANR	4987252	Identifier	R_ANAL_REF_TYPE_NULL		4986208	0					
ANR	4987253	Argument	depth		4986208	4					
ANR	4987254	Identifier	depth		4986208	0					
ANR	4987255	ExpressionStatement	"r_core_anal_fcn ( c2 , r_num_math ( c2 -> num , words ) , UT64_MAX , R_ANAL_REF_TYPE_NULL , depth )"	1015:4:25839:25932	4986208	1	True				
ANR	4987256	CallExpression	"r_core_anal_fcn ( c2 , r_num_math ( c2 -> num , words ) , UT64_MAX , R_ANAL_REF_TYPE_NULL , depth )"		4986208	0					
ANR	4987257	Callee	r_core_anal_fcn		4986208	0					
ANR	4987258	Identifier	r_core_anal_fcn		4986208	0					
ANR	4987259	ArgumentList	c2		4986208	1					
ANR	4987260	Argument	c2		4986208	0					
ANR	4987261	Identifier	c2		4986208	0					
ANR	4987262	Argument	"r_num_math ( c2 -> num , words )"		4986208	1					
ANR	4987263	CallExpression	"r_num_math ( c2 -> num , words )"		4986208	0					
ANR	4987264	Callee	r_num_math		4986208	0					
ANR	4987265	Identifier	r_num_math		4986208	0					
ANR	4987266	ArgumentList	c2 -> num		4986208	1					
ANR	4987267	Argument	c2 -> num		4986208	0					
ANR	4987268	PtrMemberAccess	c2 -> num		4986208	0					
ANR	4987269	Identifier	c2		4986208	0					
ANR	4987270	Identifier	num		4986208	1					
ANR	4987271	Argument	words		4986208	1					
ANR	4987272	Identifier	words		4986208	0					
ANR	4987273	Argument	UT64_MAX		4986208	2					
ANR	4987274	Identifier	UT64_MAX		4986208	0					
ANR	4987275	Argument	R_ANAL_REF_TYPE_NULL		4986208	3					
ANR	4987276	Identifier	R_ANAL_REF_TYPE_NULL		4986208	0					
ANR	4987277	Argument	depth		4986208	4					
ANR	4987278	Identifier	depth		4986208	0					
ANR	4987279	ExpressionStatement	"r_core_gdiff ( c , c2 )"	1017:4:25938:25958	4986208	2	True				
ANR	4987280	CallExpression	"r_core_gdiff ( c , c2 )"		4986208	0					
ANR	4987281	Callee	r_core_gdiff		4986208	0					
ANR	4987282	Identifier	r_core_gdiff		4986208	0					
ANR	4987283	ArgumentList	c		4986208	1					
ANR	4987284	Argument	c		4986208	0					
ANR	4987285	Identifier	c		4986208	0					
ANR	4987286	Argument	c2		4986208	1					
ANR	4987287	Identifier	c2		4986208	0					
ANR	4987288	ExpressionStatement	"__print_diff_graph ( c , r_num_math ( c -> num , addr ) , gmode )"	1018:4:25964:26020	4986208	3	True				
ANR	4987289	CallExpression	"__print_diff_graph ( c , r_num_math ( c -> num , addr ) , gmode )"		4986208	0					
ANR	4987290	Callee	__print_diff_graph		4986208	0					
ANR	4987291	Identifier	__print_diff_graph		4986208	0					
ANR	4987292	ArgumentList	c		4986208	1					
ANR	4987293	Argument	c		4986208	0					
ANR	4987294	Identifier	c		4986208	0					
ANR	4987295	Argument	"r_num_math ( c -> num , addr )"		4986208	1					
ANR	4987296	CallExpression	"r_num_math ( c -> num , addr )"		4986208	0					
ANR	4987297	Callee	r_num_math		4986208	0					
ANR	4987298	Identifier	r_num_math		4986208	0					
ANR	4987299	ArgumentList	c -> num		4986208	1					
ANR	4987300	Argument	c -> num		4986208	0					
ANR	4987301	PtrMemberAccess	c -> num		4986208	0					
ANR	4987302	Identifier	c		4986208	0					
ANR	4987303	Identifier	num		4986208	1					
ANR	4987304	Argument	addr		4986208	1					
ANR	4987305	Identifier	addr		4986208	0					
ANR	4987306	Argument	gmode		4986208	2					
ANR	4987307	Identifier	gmode		4986208	0					
ANR	4987308	ExpressionStatement	free ( words )	1020:3:26030:26042	4986208	5	True				
ANR	4987309	CallExpression	free ( words )		4986208	0					
ANR	4987310	Callee	free		4986208	0					
ANR	4987311	Identifier	free		4986208	0					
ANR	4987312	ArgumentList	words		4986208	1					
ANR	4987313	Argument	words		4986208	0					
ANR	4987314	Identifier	words		4986208	0					
ANR	4987315	ElseStatement	else		4986208	0					
ANR	4987316	IfStatement	if ( mode == MODE_CODE )		4986208	0					
ANR	4987317	Condition	mode == MODE_CODE	1021:13:26057:26073	4986208	0	True				
ANR	4987318	EqualityExpression	mode == MODE_CODE		4986208	0		==			
ANR	4987319	Identifier	mode		4986208	0					
ANR	4987320	Identifier	MODE_CODE		4986208	1					
ANR	4987321	CompoundStatement		216:32:5319:5319	4986208	1					
ANR	4987322	IfStatement	if ( zignatures )		4986208	0					
ANR	4987323	Condition	zignatures	1022:7:26085:26094	4986208	0	True				
ANR	4987324	Identifier	zignatures		4986208	0					
ANR	4987325	CompoundStatement		217:19:5340:5340	4986208	1					
ANR	4987326	ExpressionStatement	"r_core_cmd0 ( c , ""z~?"" )"	1023:4:26103:26125	4986208	0	True				
ANR	4987327	CallExpression	"r_core_cmd0 ( c , ""z~?"" )"		4986208	0					
ANR	4987328	Callee	r_core_cmd0		4986208	0					
ANR	4987329	Identifier	r_core_cmd0		4986208	0					
ANR	4987330	ArgumentList	c		4986208	1					
ANR	4987331	Argument	c		4986208	0					
ANR	4987332	Identifier	c		4986208	0					
ANR	4987333	Argument	"""z~?"""		4986208	1					
ANR	4987334	PrimaryExpression	"""z~?"""		4986208	0					
ANR	4987335	ExpressionStatement	"r_core_cmd0 ( c2 , ""z~?"" )"	1024:4:26131:26154	4986208	1	True				
ANR	4987336	CallExpression	"r_core_cmd0 ( c2 , ""z~?"" )"		4986208	0					
ANR	4987337	Callee	r_core_cmd0		4986208	0					
ANR	4987338	Identifier	r_core_cmd0		4986208	0					
ANR	4987339	ArgumentList	c2		4986208	1					
ANR	4987340	Argument	c2		4986208	0					
ANR	4987341	Identifier	c2		4986208	0					
ANR	4987342	Argument	"""z~?"""		4986208	1					
ANR	4987343	PrimaryExpression	"""z~?"""		4986208	0					
ANR	4987344	ExpressionStatement	"r_core_zdiff ( c , c2 )"	1025:4:26160:26180	4986208	2	True				
ANR	4987345	CallExpression	"r_core_zdiff ( c , c2 )"		4986208	0					
ANR	4987346	Callee	r_core_zdiff		4986208	0					
ANR	4987347	Identifier	r_core_zdiff		4986208	0					
ANR	4987348	ArgumentList	c		4986208	1					
ANR	4987349	Argument	c		4986208	0					
ANR	4987350	Identifier	c		4986208	0					
ANR	4987351	Argument	c2		4986208	1					
ANR	4987352	Identifier	c2		4986208	0					
ANR	4987353	ElseStatement	else		4986208	0					
ANR	4987354	CompoundStatement		221:10:5435:5435	4986208	0					
ANR	4987355	ExpressionStatement	"r_core_gdiff ( c , c2 )"	1027:4:26198:26218	4986208	0	True				
ANR	4987356	CallExpression	"r_core_gdiff ( c , c2 )"		4986208	0					
ANR	4987357	Callee	r_core_gdiff		4986208	0					
ANR	4987358	Identifier	r_core_gdiff		4986208	0					
ANR	4987359	ArgumentList	c		4986208	1					
ANR	4987360	Argument	c		4986208	0					
ANR	4987361	Identifier	c		4986208	0					
ANR	4987362	Argument	c2		4986208	1					
ANR	4987363	Identifier	c2		4986208	0					
ANR	4987364	ExpressionStatement	"r_core_diff_show ( c , c2 )"	1028:4:26224:26248	4986208	1	True				
ANR	4987365	CallExpression	"r_core_diff_show ( c , c2 )"		4986208	0					
ANR	4987366	Callee	r_core_diff_show		4986208	0					
ANR	4987367	Identifier	r_core_diff_show		4986208	0					
ANR	4987368	ArgumentList	c		4986208	1					
ANR	4987369	Argument	c		4986208	0					
ANR	4987370	Identifier	c		4986208	0					
ANR	4987371	Argument	c2		4986208	1					
ANR	4987372	Identifier	c2		4986208	0					
ANR	4987373	ElseStatement	else		4986208	0					
ANR	4987374	IfStatement	if ( mode == MODE_DIFF_IMPORTS )		4986208	0					
ANR	4987375	Condition	mode == MODE_DIFF_IMPORTS	1030:13:26268:26292	4986208	0	True				
ANR	4987376	EqualityExpression	mode == MODE_DIFF_IMPORTS		4986208	0		==			
ANR	4987377	Identifier	mode		4986208	0					
ANR	4987378	Identifier	MODE_DIFF_IMPORTS		4986208	1					
ANR	4987379	CompoundStatement		225:40:5538:5538	4986208	1					
ANR	4987380	ExpressionStatement	"bufa = get_imports ( c , & sza )"	1031:3:26300:26328	4986208	0	True				
ANR	4987381	AssignmentExpression	"bufa = get_imports ( c , & sza )"		4986208	0		=			
ANR	4987382	Identifier	bufa		4986208	0					
ANR	4987383	CallExpression	"get_imports ( c , & sza )"		4986208	1					
ANR	4987384	Callee	get_imports		4986208	0					
ANR	4987385	Identifier	get_imports		4986208	0					
ANR	4987386	ArgumentList	c		4986208	1					
ANR	4987387	Argument	c		4986208	0					
ANR	4987388	Identifier	c		4986208	0					
ANR	4987389	Argument	& sza		4986208	1					
ANR	4987390	UnaryOperationExpression	& sza		4986208	0					
ANR	4987391	UnaryOperator	&		4986208	0					
ANR	4987392	Identifier	sza		4986208	1					
ANR	4987393	ExpressionStatement	"bufb = get_imports ( c2 , & szb )"	1032:3:26333:26362	4986208	1	True				
ANR	4987394	AssignmentExpression	"bufb = get_imports ( c2 , & szb )"		4986208	0		=			
ANR	4987395	Identifier	bufb		4986208	0					
ANR	4987396	CallExpression	"get_imports ( c2 , & szb )"		4986208	1					
ANR	4987397	Callee	get_imports		4986208	0					
ANR	4987398	Identifier	get_imports		4986208	0					
ANR	4987399	ArgumentList	c2		4986208	1					
ANR	4987400	Argument	c2		4986208	0					
ANR	4987401	Identifier	c2		4986208	0					
ANR	4987402	Argument	& szb		4986208	1					
ANR	4987403	UnaryOperationExpression	& szb		4986208	0					
ANR	4987404	UnaryOperator	&		4986208	0					
ANR	4987405	Identifier	szb		4986208	1					
ANR	4987406	ElseStatement	else		4986208	0					
ANR	4987407	IfStatement	if ( mode == MODE_DIFF_STRS )		4986208	0					
ANR	4987408	Condition	mode == MODE_DIFF_STRS	1033:13:26377:26398	4986208	0	True				
ANR	4987409	EqualityExpression	mode == MODE_DIFF_STRS		4986208	0		==			
ANR	4987410	Identifier	mode		4986208	0					
ANR	4987411	Identifier	MODE_DIFF_STRS		4986208	1					
ANR	4987412	CompoundStatement		228:37:5644:5644	4986208	1					
ANR	4987413	ExpressionStatement	"bufa = get_strings ( c , & sza )"	1034:3:26406:26434	4986208	0	True				
ANR	4987414	AssignmentExpression	"bufa = get_strings ( c , & sza )"		4986208	0		=			
ANR	4987415	Identifier	bufa		4986208	0					
ANR	4987416	CallExpression	"get_strings ( c , & sza )"		4986208	1					
ANR	4987417	Callee	get_strings		4986208	0					
ANR	4987418	Identifier	get_strings		4986208	0					
ANR	4987419	ArgumentList	c		4986208	1					
ANR	4987420	Argument	c		4986208	0					
ANR	4987421	Identifier	c		4986208	0					
ANR	4987422	Argument	& sza		4986208	1					
ANR	4987423	UnaryOperationExpression	& sza		4986208	0					
ANR	4987424	UnaryOperator	&		4986208	0					
ANR	4987425	Identifier	sza		4986208	1					
ANR	4987426	ExpressionStatement	"bufb = get_strings ( c2 , & szb )"	1035:3:26439:26468	4986208	1	True				
ANR	4987427	AssignmentExpression	"bufb = get_strings ( c2 , & szb )"		4986208	0		=			
ANR	4987428	Identifier	bufb		4986208	0					
ANR	4987429	CallExpression	"get_strings ( c2 , & szb )"		4986208	1					
ANR	4987430	Callee	get_strings		4986208	0					
ANR	4987431	Identifier	get_strings		4986208	0					
ANR	4987432	ArgumentList	c2		4986208	1					
ANR	4987433	Argument	c2		4986208	0					
ANR	4987434	Identifier	c2		4986208	0					
ANR	4987435	Argument	& szb		4986208	1					
ANR	4987436	UnaryOperationExpression	& szb		4986208	0					
ANR	4987437	UnaryOperator	&		4986208	0					
ANR	4987438	Identifier	szb		4986208	1					
ANR	4987439	IfStatement	if ( mode == MODE_CODE || mode == MODE_GRAPH )		4986208	18					
ANR	4987440	Condition	mode == MODE_CODE || mode == MODE_GRAPH	1037:6:26480:26518	4986208	0	True				
ANR	4987441	OrExpression	mode == MODE_CODE || mode == MODE_GRAPH		4986208	0		||			
ANR	4987442	EqualityExpression	mode == MODE_CODE		4986208	0		==			
ANR	4987443	Identifier	mode		4986208	0					
ANR	4987444	Identifier	MODE_CODE		4986208	1					
ANR	4987445	EqualityExpression	mode == MODE_GRAPH		4986208	1		==			
ANR	4987446	Identifier	mode		4986208	0					
ANR	4987447	Identifier	MODE_GRAPH		4986208	1					
ANR	4987448	CompoundStatement		232:47:5764:5764	4986208	1					
ANR	4987449	ExpressionStatement	r_cons_flush ( )	1038:3:26526:26541	4986208	0	True				
ANR	4987450	CallExpression	r_cons_flush ( )		4986208	0					
ANR	4987451	Callee	r_cons_flush		4986208	0					
ANR	4987452	Identifier	r_cons_flush		4986208	0					
ANR	4987453	ArgumentList			4986208	1					
ANR	4987454	ExpressionStatement	r_core_free ( c )	1040:2:26549:26564	4986208	19	True				
ANR	4987455	CallExpression	r_core_free ( c )		4986208	0					
ANR	4987456	Callee	r_core_free		4986208	0					
ANR	4987457	Identifier	r_core_free		4986208	0					
ANR	4987458	ArgumentList	c		4986208	1					
ANR	4987459	Argument	c		4986208	0					
ANR	4987460	Identifier	c		4986208	0					
ANR	4987461	ExpressionStatement	r_core_free ( c2 )	1041:2:26568:26584	4986208	20	True				
ANR	4987462	CallExpression	r_core_free ( c2 )		4986208	0					
ANR	4987463	Callee	r_core_free		4986208	0					
ANR	4987464	Identifier	r_core_free		4986208	0					
ANR	4987465	ArgumentList	c2		4986208	1					
ANR	4987466	Argument	c2		4986208	0					
ANR	4987467	Identifier	c2		4986208	0					
ANR	4987468	IfStatement	if ( mode == MODE_CODE || mode == MODE_GRAPH )		4986208	21					
ANR	4987469	Condition	mode == MODE_CODE || mode == MODE_GRAPH	1043:6:26593:26631	4986208	0	True				
ANR	4987470	OrExpression	mode == MODE_CODE || mode == MODE_GRAPH		4986208	0		||			
ANR	4987471	EqualityExpression	mode == MODE_CODE		4986208	0		==			
ANR	4987472	Identifier	mode		4986208	0					
ANR	4987473	Identifier	MODE_CODE		4986208	1					
ANR	4987474	EqualityExpression	mode == MODE_GRAPH		4986208	1		==			
ANR	4987475	Identifier	mode		4986208	0					
ANR	4987476	Identifier	MODE_GRAPH		4986208	1					
ANR	4987477	CompoundStatement		238:47:5877:5877	4986208	1					
ANR	4987478	ReturnStatement	return 0 ;	1044:3:26639:26647	4986208	0	True				
ANR	4987479	PrimaryExpression	0		4986208	0					
ANR	4987480	BreakStatement	break ;	1046:2:26655:26660	4986208	22	True				
ANR	4987481	Label	default :	1047:1:26663:26670	4986208	23	True				
ANR	4987482	Identifier	default		4986208	0					
ANR	4987483	ExpressionStatement	"bufa = slurp ( & c , file , & sza )"	1048:2:26674:26703	4986208	24	True				
ANR	4987484	AssignmentExpression	"bufa = slurp ( & c , file , & sza )"		4986208	0		=			
ANR	4987485	Identifier	bufa		4986208	0					
ANR	4987486	CallExpression	"slurp ( & c , file , & sza )"		4986208	1					
ANR	4987487	Callee	slurp		4986208	0					
ANR	4987488	Identifier	slurp		4986208	0					
ANR	4987489	ArgumentList	& c		4986208	1					
ANR	4987490	Argument	& c		4986208	0					
ANR	4987491	UnaryOperationExpression	& c		4986208	0					
ANR	4987492	UnaryOperator	&		4986208	0					
ANR	4987493	Identifier	c		4986208	1					
ANR	4987494	Argument	file		4986208	1					
ANR	4987495	Identifier	file		4986208	0					
ANR	4987496	Argument	& sza		4986208	2					
ANR	4987497	UnaryOperationExpression	& sza		4986208	0					
ANR	4987498	UnaryOperator	&		4986208	0					
ANR	4987499	Identifier	sza		4986208	1					
ANR	4987500	IfStatement	if ( ! bufa )		4986208	25					
ANR	4987501	Condition	! bufa	1049:6:26711:26715	4986208	0	True				
ANR	4987502	UnaryOperationExpression	! bufa		4986208	0					
ANR	4987503	UnaryOperator	!		4986208	0					
ANR	4987504	Identifier	bufa		4986208	1					
ANR	4987505	CompoundStatement		244:13:5961:5961	4986208	1					
ANR	4987506	ExpressionStatement	"eprintf ( ""radiff2: Cannot open %s\\n"" , r_str_get ( file ) )"	1050:3:26723:26778	4986208	0	True				
ANR	4987507	CallExpression	"eprintf ( ""radiff2: Cannot open %s\\n"" , r_str_get ( file ) )"		4986208	0					
ANR	4987508	Callee	eprintf		4986208	0					
ANR	4987509	Identifier	eprintf		4986208	0					
ANR	4987510	ArgumentList	"""radiff2: Cannot open %s\\n"""		4986208	1					
ANR	4987511	Argument	"""radiff2: Cannot open %s\\n"""		4986208	0					
ANR	4987512	PrimaryExpression	"""radiff2: Cannot open %s\\n"""		4986208	0					
ANR	4987513	Argument	r_str_get ( file )		4986208	1					
ANR	4987514	CallExpression	r_str_get ( file )		4986208	0					
ANR	4987515	Callee	r_str_get		4986208	0					
ANR	4987516	Identifier	r_str_get		4986208	0					
ANR	4987517	ArgumentList	file		4986208	1					
ANR	4987518	Argument	file		4986208	0					
ANR	4987519	Identifier	file		4986208	0					
ANR	4987520	ReturnStatement	return 1 ;	1051:3:26783:26791	4986208	1	True				
ANR	4987521	PrimaryExpression	1		4986208	0					
ANR	4987522	ExpressionStatement	"bufb = slurp ( & c , file2 , & szb )"	1053:2:26799:26829	4986208	26	True				
ANR	4987523	AssignmentExpression	"bufb = slurp ( & c , file2 , & szb )"		4986208	0		=			
ANR	4987524	Identifier	bufb		4986208	0					
ANR	4987525	CallExpression	"slurp ( & c , file2 , & szb )"		4986208	1					
ANR	4987526	Callee	slurp		4986208	0					
ANR	4987527	Identifier	slurp		4986208	0					
ANR	4987528	ArgumentList	& c		4986208	1					
ANR	4987529	Argument	& c		4986208	0					
ANR	4987530	UnaryOperationExpression	& c		4986208	0					
ANR	4987531	UnaryOperator	&		4986208	0					
ANR	4987532	Identifier	c		4986208	1					
ANR	4987533	Argument	file2		4986208	1					
ANR	4987534	Identifier	file2		4986208	0					
ANR	4987535	Argument	& szb		4986208	2					
ANR	4987536	UnaryOperationExpression	& szb		4986208	0					
ANR	4987537	UnaryOperator	&		4986208	0					
ANR	4987538	Identifier	szb		4986208	1					
ANR	4987539	IfStatement	if ( ! bufb )		4986208	27					
ANR	4987540	Condition	! bufb	1054:6:26837:26841	4986208	0	True				
ANR	4987541	UnaryOperationExpression	! bufb		4986208	0					
ANR	4987542	UnaryOperator	!		4986208	0					
ANR	4987543	Identifier	bufb		4986208	1					
ANR	4987544	CompoundStatement		249:13:6087:6087	4986208	1					
ANR	4987545	ExpressionStatement	"eprintf ( ""radiff2: Cannot open: %s\\n"" , r_str_get ( file2 ) )"	1055:3:26849:26906	4986208	0	True				
ANR	4987546	CallExpression	"eprintf ( ""radiff2: Cannot open: %s\\n"" , r_str_get ( file2 ) )"		4986208	0					
ANR	4987547	Callee	eprintf		4986208	0					
ANR	4987548	Identifier	eprintf		4986208	0					
ANR	4987549	ArgumentList	"""radiff2: Cannot open: %s\\n"""		4986208	1					
ANR	4987550	Argument	"""radiff2: Cannot open: %s\\n"""		4986208	0					
ANR	4987551	PrimaryExpression	"""radiff2: Cannot open: %s\\n"""		4986208	0					
ANR	4987552	Argument	r_str_get ( file2 )		4986208	1					
ANR	4987553	CallExpression	r_str_get ( file2 )		4986208	0					
ANR	4987554	Callee	r_str_get		4986208	0					
ANR	4987555	Identifier	r_str_get		4986208	0					
ANR	4987556	ArgumentList	file2		4986208	1					
ANR	4987557	Argument	file2		4986208	0					
ANR	4987558	Identifier	file2		4986208	0					
ANR	4987559	ExpressionStatement	free ( bufa )	1056:3:26911:26922	4986208	1	True				
ANR	4987560	CallExpression	free ( bufa )		4986208	0					
ANR	4987561	Callee	free		4986208	0					
ANR	4987562	Identifier	free		4986208	0					
ANR	4987563	ArgumentList	bufa		4986208	1					
ANR	4987564	Argument	bufa		4986208	0					
ANR	4987565	Identifier	bufa		4986208	0					
ANR	4987566	ReturnStatement	return 1 ;	1057:3:26927:26935	4986208	2	True				
ANR	4987567	PrimaryExpression	1		4986208	0					
ANR	4987568	IfStatement	if ( sza != szb )		4986208	28					
ANR	4987569	Condition	sza != szb	1059:6:26947:26956	4986208	0	True				
ANR	4987570	EqualityExpression	sza != szb		4986208	0		!=			
ANR	4987571	Identifier	sza		4986208	0					
ANR	4987572	Identifier	szb		4986208	1					
ANR	4987573	CompoundStatement		254:18:6202:6202	4986208	1					
ANR	4987574	ExpressionStatement	"eprintf ( ""File size differs %d vs %d\\n"" , sza , szb )"	1060:3:26964:27014	4986208	0	True				
ANR	4987575	CallExpression	"eprintf ( ""File size differs %d vs %d\\n"" , sza , szb )"		4986208	0					
ANR	4987576	Callee	eprintf		4986208	0					
ANR	4987577	Identifier	eprintf		4986208	0					
ANR	4987578	ArgumentList	"""File size differs %d vs %d\\n"""		4986208	1					
ANR	4987579	Argument	"""File size differs %d vs %d\\n"""		4986208	0					
ANR	4987580	PrimaryExpression	"""File size differs %d vs %d\\n"""		4986208	0					
ANR	4987581	Argument	sza		4986208	1					
ANR	4987582	Identifier	sza		4986208	0					
ANR	4987583	Argument	szb		4986208	2					
ANR	4987584	Identifier	szb		4986208	0					
ANR	4987585	BreakStatement	break ;	1062:2:27022:27027	4986208	29	True				
ANR	4987586	ExpressionStatement	( void ) r_cons_new ( )	1066:1:27055:27074	4986208	17	True				
ANR	4987587	CastExpression	( void ) r_cons_new ( )		4986208	0					
ANR	4987588	CastTarget	void		4986208	0					
ANR	4987589	CallExpression	r_cons_new ( )		4986208	1					
ANR	4987590	Callee	r_cons_new		4986208	0					
ANR	4987591	Identifier	r_cons_new		4986208	0					
ANR	4987592	ArgumentList			4986208	1					
ANR	4987593	SwitchStatement	switch ( mode )		4986208	18					
ANR	4987594	Condition	mode	1068:9:27086:27089	4986208	0	True				
ANR	4987595	Identifier	mode		4986208	0					
ANR	4987596	CompoundStatement		263:15:6335:6335	4986208	1					
ANR	4987597	Label	case MODE_COLS :	1069:1:27095:27109	4986208	0	True				
ANR	4987598	Identifier	MODE_COLS		4986208	0					
ANR	4987599	IfStatement	if ( ! c && ! r_list_empty ( evals ) )		4986208	1					
ANR	4987600	Condition	! c && ! r_list_empty ( evals )	1070:6:27117:27143	4986208	0	True				
ANR	4987601	AndExpression	! c && ! r_list_empty ( evals )		4986208	0		&&			
ANR	4987602	UnaryOperationExpression	! c		4986208	0					
ANR	4987603	UnaryOperator	!		4986208	0					
ANR	4987604	Identifier	c		4986208	1					
ANR	4987605	UnaryOperationExpression	! r_list_empty ( evals )		4986208	1					
ANR	4987606	UnaryOperator	!		4986208	0					
ANR	4987607	CallExpression	r_list_empty ( evals )		4986208	1					
ANR	4987608	Callee	r_list_empty		4986208	0					
ANR	4987609	Identifier	r_list_empty		4986208	0					
ANR	4987610	ArgumentList	evals		4986208	1					
ANR	4987611	Argument	evals		4986208	0					
ANR	4987612	Identifier	evals		4986208	0					
ANR	4987613	CompoundStatement		265:35:6389:6389	4986208	1					
ANR	4987614	ExpressionStatement	c = opencore ( NULL )	1071:3:27151:27170	4986208	0	True				
ANR	4987615	AssignmentExpression	c = opencore ( NULL )		4986208	0		=			
ANR	4987616	Identifier	c		4986208	0					
ANR	4987617	CallExpression	opencore ( NULL )		4986208	1					
ANR	4987618	Callee	opencore		4986208	0					
ANR	4987619	Identifier	opencore		4986208	0					
ANR	4987620	ArgumentList	NULL		4986208	1					
ANR	4987621	Argument	NULL		4986208	0					
ANR	4987622	Identifier	NULL		4986208	0					
ANR	4987623	ExpressionStatement	"dump_cols ( bufa , sza , bufb , szb , ( r_cons_get_size ( NULL ) > 112 ) ? 16 : 8 )"	1073:2:27178:27249	4986208	2	True				
ANR	4987624	CallExpression	"dump_cols ( bufa , sza , bufb , szb , ( r_cons_get_size ( NULL ) > 112 ) ? 16 : 8 )"		4986208	0					
ANR	4987625	Callee	dump_cols		4986208	0					
ANR	4987626	Identifier	dump_cols		4986208	0					
ANR	4987627	ArgumentList	bufa		4986208	1					
ANR	4987628	Argument	bufa		4986208	0					
ANR	4987629	Identifier	bufa		4986208	0					
ANR	4987630	Argument	sza		4986208	1					
ANR	4987631	Identifier	sza		4986208	0					
ANR	4987632	Argument	bufb		4986208	2					
ANR	4987633	Identifier	bufb		4986208	0					
ANR	4987634	Argument	szb		4986208	3					
ANR	4987635	Identifier	szb		4986208	0					
ANR	4987636	Argument	( r_cons_get_size ( NULL ) > 112 ) ? 16 : 8		4986208	4					
ANR	4987637	ConditionalExpression	( r_cons_get_size ( NULL ) > 112 ) ? 16 : 8		4986208	0					
ANR	4987638	Condition	r_cons_get_size ( NULL ) > 112		4986208	0					
ANR	4987639	RelationalExpression	r_cons_get_size ( NULL ) > 112		4986208	0		>			
ANR	4987640	CallExpression	r_cons_get_size ( NULL )		4986208	0					
ANR	4987641	Callee	r_cons_get_size		4986208	0					
ANR	4987642	Identifier	r_cons_get_size		4986208	0					
ANR	4987643	ArgumentList	NULL		4986208	1					
ANR	4987644	Argument	NULL		4986208	0					
ANR	4987645	Identifier	NULL		4986208	0					
ANR	4987646	PrimaryExpression	112		4986208	1					
ANR	4987647	PrimaryExpression	16		4986208	1					
ANR	4987648	PrimaryExpression	8		4986208	2					
ANR	4987649	BreakStatement	break ;	1074:2:27253:27258	4986208	3	True				
ANR	4987650	Label	case MODE_DIFF :	1075:1:27261:27275	4986208	4	True				
ANR	4987651	Identifier	MODE_DIFF		4986208	0					
ANR	4987652	Label	case MODE_DIFF_STRS :	1076:1:27278:27297	4986208	5	True				
ANR	4987653	Identifier	MODE_DIFF_STRS		4986208	0					
ANR	4987654	Label	case MODE_DIFF_IMPORTS :	1077:1:27300:27322	4986208	6	True				
ANR	4987655	Identifier	MODE_DIFF_IMPORTS		4986208	0					
ANR	4987656	ExpressionStatement	d = r_diff_new ( )	1078:2:27326:27343	4986208	7	True				
ANR	4987657	AssignmentExpression	d = r_diff_new ( )		4986208	0		=			
ANR	4987658	Identifier	d		4986208	0					
ANR	4987659	CallExpression	r_diff_new ( )		4986208	1					
ANR	4987660	Callee	r_diff_new		4986208	0					
ANR	4987661	Identifier	r_diff_new		4986208	0					
ANR	4987662	ArgumentList			4986208	1					
ANR	4987663	ExpressionStatement	"r_diff_set_delta ( d , delta )"	1079:2:27347:27374	4986208	8	True				
ANR	4987664	CallExpression	"r_diff_set_delta ( d , delta )"		4986208	0					
ANR	4987665	Callee	r_diff_set_delta		4986208	0					
ANR	4987666	Identifier	r_diff_set_delta		4986208	0					
ANR	4987667	ArgumentList	d		4986208	1					
ANR	4987668	Argument	d		4986208	0					
ANR	4987669	Identifier	d		4986208	0					
ANR	4987670	Argument	delta		4986208	1					
ANR	4987671	Identifier	delta		4986208	0					
ANR	4987672	IfStatement	if ( diffmode == 'j' )		4986208	9					
ANR	4987673	Condition	diffmode == 'j'	1080:6:27382:27396	4986208	0	True				
ANR	4987674	EqualityExpression	diffmode == 'j'		4986208	0		==			
ANR	4987675	Identifier	diffmode		4986208	0					
ANR	4987676	PrimaryExpression	'j'		4986208	1					
ANR	4987677	CompoundStatement		275:23:6642:6642	4986208	1					
ANR	4987678	ExpressionStatement	"printf ( ""{\\""files\\"":[{\\""filename\\"":\\""%s\\"", \\""size\\"":%d, \\""sha256\\"":\\"""" , file , sza )"	1081:3:27404:27486	4986208	0	True				
ANR	4987679	CallExpression	"printf ( ""{\\""files\\"":[{\\""filename\\"":\\""%s\\"", \\""size\\"":%d, \\""sha256\\"":\\"""" , file , sza )"		4986208	0					
ANR	4987680	Callee	printf		4986208	0					
ANR	4987681	Identifier	printf		4986208	0					
ANR	4987682	ArgumentList	"""{\\""files\\"":[{\\""filename\\"":\\""%s\\"", \\""size\\"":%d, \\""sha256\\"":\\"""""		4986208	1					
ANR	4987683	Argument	"""{\\""files\\"":[{\\""filename\\"":\\""%s\\"", \\""size\\"":%d, \\""sha256\\"":\\"""""		4986208	0					
ANR	4987684	PrimaryExpression	"""{\\""files\\"":[{\\""filename\\"":\\""%s\\"", \\""size\\"":%d, \\""sha256\\"":\\"""""		4986208	0					
ANR	4987685	Argument	file		4986208	1					
ANR	4987686	Identifier	file		4986208	0					
ANR	4987687	Argument	sza		4986208	2					
ANR	4987688	Identifier	sza		4986208	0					
ANR	4987689	ExpressionStatement	"handle_sha256 ( bufa , sza )"	1082:3:27491:27516	4986208	1	True				
ANR	4987690	CallExpression	"handle_sha256 ( bufa , sza )"		4986208	0					
ANR	4987691	Callee	handle_sha256		4986208	0					
ANR	4987692	Identifier	handle_sha256		4986208	0					
ANR	4987693	ArgumentList	bufa		4986208	1					
ANR	4987694	Argument	bufa		4986208	0					
ANR	4987695	Identifier	bufa		4986208	0					
ANR	4987696	Argument	sza		4986208	1					
ANR	4987697	Identifier	sza		4986208	0					
ANR	4987698	ExpressionStatement	"printf ( ""\\""},\\n{\\""filename\\"":\\""%s\\"", \\""size\\"":%d, \\""sha256\\"":\\"""" , file2 , szb )"	1083:3:27521:27598	4986208	2	True				
ANR	4987699	CallExpression	"printf ( ""\\""},\\n{\\""filename\\"":\\""%s\\"", \\""size\\"":%d, \\""sha256\\"":\\"""" , file2 , szb )"		4986208	0					
ANR	4987700	Callee	printf		4986208	0					
ANR	4987701	Identifier	printf		4986208	0					
ANR	4987702	ArgumentList	"""\\""},\\n{\\""filename\\"":\\""%s\\"", \\""size\\"":%d, \\""sha256\\"":\\"""""		4986208	1					
ANR	4987703	Argument	"""\\""},\\n{\\""filename\\"":\\""%s\\"", \\""size\\"":%d, \\""sha256\\"":\\"""""		4986208	0					
ANR	4987704	PrimaryExpression	"""\\""},\\n{\\""filename\\"":\\""%s\\"", \\""size\\"":%d, \\""sha256\\"":\\"""""		4986208	0					
ANR	4987705	Argument	file2		4986208	1					
ANR	4987706	Identifier	file2		4986208	0					
ANR	4987707	Argument	szb		4986208	2					
ANR	4987708	Identifier	szb		4986208	0					
ANR	4987709	ExpressionStatement	"handle_sha256 ( bufb , szb )"	1084:3:27603:27628	4986208	3	True				
ANR	4987710	CallExpression	"handle_sha256 ( bufb , szb )"		4986208	0					
ANR	4987711	Callee	handle_sha256		4986208	0					
ANR	4987712	Identifier	handle_sha256		4986208	0					
ANR	4987713	ArgumentList	bufb		4986208	1					
ANR	4987714	Argument	bufb		4986208	0					
ANR	4987715	Identifier	bufb		4986208	0					
ANR	4987716	Argument	szb		4986208	1					
ANR	4987717	Identifier	szb		4986208	0					
ANR	4987718	ExpressionStatement	"printf ( ""\\""}],\\n"" )"	1085:3:27633:27651	4986208	4	True				
ANR	4987719	CallExpression	"printf ( ""\\""}],\\n"" )"		4986208	0					
ANR	4987720	Callee	printf		4986208	0					
ANR	4987721	Identifier	printf		4986208	0					
ANR	4987722	ArgumentList	"""\\""}],\\n"""		4986208	1					
ANR	4987723	Argument	"""\\""}],\\n"""		4986208	0					
ANR	4987724	PrimaryExpression	"""\\""}],\\n"""		4986208	0					
ANR	4987725	ExpressionStatement	"printf ( ""\\""changes\\"":["" )"	1086:3:27656:27680	4986208	5	True				
ANR	4987726	CallExpression	"printf ( ""\\""changes\\"":["" )"		4986208	0					
ANR	4987727	Callee	printf		4986208	0					
ANR	4987728	Identifier	printf		4986208	0					
ANR	4987729	ArgumentList	"""\\""changes\\"":["""		4986208	1					
ANR	4987730	Argument	"""\\""changes\\"":["""		4986208	0					
ANR	4987731	PrimaryExpression	"""\\""changes\\"":["""		4986208	0					
ANR	4987732	IfStatement	if ( diffmode == 'B' )		4986208	10					
ANR	4987733	Condition	diffmode == 'B'	1088:6:27692:27706	4986208	0	True				
ANR	4987734	EqualityExpression	diffmode == 'B'		4986208	0		==			
ANR	4987735	Identifier	diffmode		4986208	0					
ANR	4987736	PrimaryExpression	'B'		4986208	1					
ANR	4987737	CompoundStatement		283:23:6952:6952	4986208	1					
ANR	4987738	ExpressionStatement	"write ( 1 , ""\\xd1\\xff\\xd1\\xff"" , 4 )"	1089:3:27714:27746	4986208	0	True				
ANR	4987739	CallExpression	"write ( 1 , ""\\xd1\\xff\\xd1\\xff"" , 4 )"		4986208	0					
ANR	4987740	Callee	write		4986208	0					
ANR	4987741	Identifier	write		4986208	0					
ANR	4987742	ArgumentList	1		4986208	1					
ANR	4987743	Argument	1		4986208	0					
ANR	4987744	PrimaryExpression	1		4986208	0					
ANR	4987745	Argument	"""\\xd1\\xff\\xd1\\xff"""		4986208	1					
ANR	4987746	PrimaryExpression	"""\\xd1\\xff\\xd1\\xff"""		4986208	0					
ANR	4987747	Argument	4		4986208	2					
ANR	4987748	PrimaryExpression	4		4986208	0					
ANR	4987749	ExpressionStatement	"write ( 1 , ""\\x04"" , 1 )"	1090:3:27751:27771	4986208	1	True				
ANR	4987750	CallExpression	"write ( 1 , ""\\x04"" , 1 )"		4986208	0					
ANR	4987751	Callee	write		4986208	0					
ANR	4987752	Identifier	write		4986208	0					
ANR	4987753	ArgumentList	1		4986208	1					
ANR	4987754	Argument	1		4986208	0					
ANR	4987755	PrimaryExpression	1		4986208	0					
ANR	4987756	Argument	"""\\x04"""		4986208	1					
ANR	4987757	PrimaryExpression	"""\\x04"""		4986208	0					
ANR	4987758	Argument	1		4986208	2					
ANR	4987759	PrimaryExpression	1		4986208	0					
ANR	4987760	IfStatement	if ( diffmode == 'U' )		4986208	11					
ANR	4987761	Condition	diffmode == 'U'	1092:6:27783:27797	4986208	0	True				
ANR	4987762	EqualityExpression	diffmode == 'U'		4986208	0		==			
ANR	4987763	Identifier	diffmode		4986208	0					
ANR	4987764	PrimaryExpression	'U'		4986208	1					
ANR	4987765	CompoundStatement		288:3:7048:7109	4986208	1					
ANR	4987766	IdentifierDeclStatement	"char * res = r_diff_buffers_unified ( d , bufa , sza , bufb , szb ) ;"	1093:3:27805:27866	4986208	0	True				
ANR	4987767	IdentifierDecl	"* res = r_diff_buffers_unified ( d , bufa , sza , bufb , szb )"		4986208	0					
ANR	4987768	IdentifierDeclType	char *		4986208	0					
ANR	4987769	Identifier	res		4986208	1					
ANR	4987770	AssignmentExpression	"* res = r_diff_buffers_unified ( d , bufa , sza , bufb , szb )"		4986208	2		=			
ANR	4987771	Identifier	res		4986208	0					
ANR	4987772	CallExpression	"r_diff_buffers_unified ( d , bufa , sza , bufb , szb )"		4986208	1					
ANR	4987773	Callee	r_diff_buffers_unified		4986208	0					
ANR	4987774	Identifier	r_diff_buffers_unified		4986208	0					
ANR	4987775	ArgumentList	d		4986208	1					
ANR	4987776	Argument	d		4986208	0					
ANR	4987777	Identifier	d		4986208	0					
ANR	4987778	Argument	bufa		4986208	1					
ANR	4987779	Identifier	bufa		4986208	0					
ANR	4987780	Argument	sza		4986208	2					
ANR	4987781	Identifier	sza		4986208	0					
ANR	4987782	Argument	bufb		4986208	3					
ANR	4987783	Identifier	bufb		4986208	0					
ANR	4987784	Argument	szb		4986208	4					
ANR	4987785	Identifier	szb		4986208	0					
ANR	4987786	ExpressionStatement	"printf ( ""%s"" , res )"	1094:3:27871:27889	4986208	1	True				
ANR	4987787	CallExpression	"printf ( ""%s"" , res )"		4986208	0					
ANR	4987788	Callee	printf		4986208	0					
ANR	4987789	Identifier	printf		4986208	0					
ANR	4987790	ArgumentList	"""%s"""		4986208	1					
ANR	4987791	Argument	"""%s"""		4986208	0					
ANR	4987792	PrimaryExpression	"""%s"""		4986208	0					
ANR	4987793	Argument	res		4986208	1					
ANR	4987794	Identifier	res		4986208	0					
ANR	4987795	ExpressionStatement	free ( res )	1095:3:27894:27904	4986208	2	True				
ANR	4987796	CallExpression	free ( res )		4986208	0					
ANR	4987797	Callee	free		4986208	0					
ANR	4987798	Identifier	free		4986208	0					
ANR	4987799	ArgumentList	res		4986208	1					
ANR	4987800	Argument	res		4986208	0					
ANR	4987801	Identifier	res		4986208	0					
ANR	4987802	ElseStatement	else		4986208	0					
ANR	4987803	IfStatement	if ( diffmode == 'B' )		4986208	0					
ANR	4987804	Condition	diffmode == 'B'	1096:13:27919:27933	4986208	0	True				
ANR	4987805	EqualityExpression	diffmode == 'B'		4986208	0		==			
ANR	4987806	Identifier	diffmode		4986208	0					
ANR	4987807	PrimaryExpression	'B'		4986208	1					
ANR	4987808	CompoundStatement		291:30:7179:7179	4986208	1					
ANR	4987809	ExpressionStatement	"r_diff_set_callback ( d , & bcb , 0 )"	1097:3:27941:27973	4986208	0	True				
ANR	4987810	CallExpression	"r_diff_set_callback ( d , & bcb , 0 )"		4986208	0					
ANR	4987811	Callee	r_diff_set_callback		4986208	0					
ANR	4987812	Identifier	r_diff_set_callback		4986208	0					
ANR	4987813	ArgumentList	d		4986208	1					
ANR	4987814	Argument	d		4986208	0					
ANR	4987815	Identifier	d		4986208	0					
ANR	4987816	Argument	& bcb		4986208	1					
ANR	4987817	UnaryOperationExpression	& bcb		4986208	0					
ANR	4987818	UnaryOperator	&		4986208	0					
ANR	4987819	Identifier	bcb		4986208	1					
ANR	4987820	Argument	0		4986208	2					
ANR	4987821	PrimaryExpression	0		4986208	0					
ANR	4987822	ExpressionStatement	"r_diff_buffers ( d , bufa , sza , bufb , szb )"	1098:3:27978:28018	4986208	1	True				
ANR	4987823	CallExpression	"r_diff_buffers ( d , bufa , sza , bufb , szb )"		4986208	0					
ANR	4987824	Callee	r_diff_buffers		4986208	0					
ANR	4987825	Identifier	r_diff_buffers		4986208	0					
ANR	4987826	ArgumentList	d		4986208	1					
ANR	4987827	Argument	d		4986208	0					
ANR	4987828	Identifier	d		4986208	0					
ANR	4987829	Argument	bufa		4986208	1					
ANR	4987830	Identifier	bufa		4986208	0					
ANR	4987831	Argument	sza		4986208	2					
ANR	4987832	Identifier	sza		4986208	0					
ANR	4987833	Argument	bufb		4986208	3					
ANR	4987834	Identifier	bufb		4986208	0					
ANR	4987835	Argument	szb		4986208	4					
ANR	4987836	Identifier	szb		4986208	0					
ANR	4987837	ExpressionStatement	"write ( 1 , ""\\x00"" , 1 )"	1099:3:28023:28043	4986208	2	True				
ANR	4987838	CallExpression	"write ( 1 , ""\\x00"" , 1 )"		4986208	0					
ANR	4987839	Callee	write		4986208	0					
ANR	4987840	Identifier	write		4986208	0					
ANR	4987841	ArgumentList	1		4986208	1					
ANR	4987842	Argument	1		4986208	0					
ANR	4987843	PrimaryExpression	1		4986208	0					
ANR	4987844	Argument	"""\\x00"""		4986208	1					
ANR	4987845	PrimaryExpression	"""\\x00"""		4986208	0					
ANR	4987846	Argument	1		4986208	2					
ANR	4987847	PrimaryExpression	1		4986208	0					
ANR	4987848	ElseStatement	else		4986208	0					
ANR	4987849	CompoundStatement		295:9:7297:7297	4986208	0					
ANR	4987850	ExpressionStatement	"r_diff_set_callback ( d , & cb , 0 )"	1101:3:28059:28090	4986208	0	True				
ANR	4987851	CallExpression	"r_diff_set_callback ( d , & cb , 0 )"		4986208	0					
ANR	4987852	Callee	r_diff_set_callback		4986208	0					
ANR	4987853	Identifier	r_diff_set_callback		4986208	0					
ANR	4987854	ArgumentList	d		4986208	1					
ANR	4987855	Argument	d		4986208	0					
ANR	4987856	Identifier	d		4986208	0					
ANR	4987857	Argument	& cb		4986208	1					
ANR	4987858	UnaryOperationExpression	& cb		4986208	0					
ANR	4987859	UnaryOperator	&		4986208	0					
ANR	4987860	Identifier	cb		4986208	1					
ANR	4987861	Argument	0		4986208	2					
ANR	4987862	PrimaryExpression	0		4986208	0					
ANR	4987863	ExpressionStatement	"r_diff_buffers ( d , bufa , sza , bufb , szb )"	1102:3:28125:28165	4986208	1	True				
ANR	4987864	CallExpression	"r_diff_buffers ( d , bufa , sza , bufb , szb )"		4986208	0					
ANR	4987865	Callee	r_diff_buffers		4986208	0					
ANR	4987866	Identifier	r_diff_buffers		4986208	0					
ANR	4987867	ArgumentList	d		4986208	1					
ANR	4987868	Argument	d		4986208	0					
ANR	4987869	Identifier	d		4986208	0					
ANR	4987870	Argument	bufa		4986208	1					
ANR	4987871	Identifier	bufa		4986208	0					
ANR	4987872	Argument	sza		4986208	2					
ANR	4987873	Identifier	sza		4986208	0					
ANR	4987874	Argument	bufb		4986208	3					
ANR	4987875	Identifier	bufb		4986208	0					
ANR	4987876	Argument	szb		4986208	4					
ANR	4987877	Identifier	szb		4986208	0					
ANR	4987878	IfStatement	if ( diffmode == 'j' )		4986208	12					
ANR	4987879	Condition	diffmode == 'j'	1104:6:28177:28191	4986208	0	True				
ANR	4987880	EqualityExpression	diffmode == 'j'		4986208	0		==			
ANR	4987881	Identifier	diffmode		4986208	0					
ANR	4987882	PrimaryExpression	'j'		4986208	1					
ANR	4987883	CompoundStatement		299:23:7437:7437	4986208	1					
ANR	4987884	ExpressionStatement	"printf ( ""]\\n"" )"	1105:3:28199:28213	4986208	0	True				
ANR	4987885	CallExpression	"printf ( ""]\\n"" )"		4986208	0					
ANR	4987886	Callee	printf		4986208	0					
ANR	4987887	Identifier	printf		4986208	0					
ANR	4987888	ArgumentList	"""]\\n"""		4986208	1					
ANR	4987889	Argument	"""]\\n"""		4986208	0					
ANR	4987890	PrimaryExpression	"""]\\n"""		4986208	0					
ANR	4987891	ExpressionStatement	r_diff_free ( d )	1107:2:28221:28236	4986208	13	True				
ANR	4987892	CallExpression	r_diff_free ( d )		4986208	0					
ANR	4987893	Callee	r_diff_free		4986208	0					
ANR	4987894	Identifier	r_diff_free		4986208	0					
ANR	4987895	ArgumentList	d		4986208	1					
ANR	4987896	Argument	d		4986208	0					
ANR	4987897	Identifier	d		4986208	0					
ANR	4987898	BreakStatement	break ;	1108:2:28240:28245	4986208	14	True				
ANR	4987899	Label	case MODE_DIST :	1109:1:28248:28262	4986208	15	True				
ANR	4987900	Identifier	MODE_DIST		4986208	0					
ANR	4987901	Label	case MODE_DIST_MYERS :	1110:1:28265:28285	4986208	16	True				
ANR	4987902	Identifier	MODE_DIST_MYERS		4986208	0					
ANR	4987903	Label	case MODE_DIST_LEVENSTEIN :	1111:1:28288:28313	4986208	17	True				
ANR	4987904	Identifier	MODE_DIST_LEVENSTEIN		4986208	0					
ANR	4987905	CompoundStatement		308:3:7565:7589	4986208	18					
ANR	4987906	IdentifierDeclStatement	RDiff * d = r_diff_new ( ) ;	1113:3:28322:28346	4986208	0	True				
ANR	4987907	IdentifierDecl	* d = r_diff_new ( )		4986208	0					
ANR	4987908	IdentifierDeclType	RDiff *		4986208	0					
ANR	4987909	Identifier	d		4986208	1					
ANR	4987910	AssignmentExpression	* d = r_diff_new ( )		4986208	2		=			
ANR	4987911	Identifier	d		4986208	0					
ANR	4987912	CallExpression	r_diff_new ( )		4986208	1					
ANR	4987913	Callee	r_diff_new		4986208	0					
ANR	4987914	Identifier	r_diff_new		4986208	0					
ANR	4987915	ArgumentList			4986208	1					
ANR	4987916	IfStatement	if ( d )		4986208	1					
ANR	4987917	Condition	d	1114:7:28355:28355	4986208	0	True				
ANR	4987918	Identifier	d		4986208	0					
ANR	4987919	CompoundStatement		309:10:7601:7601	4986208	1					
ANR	4987920	ExpressionStatement	d -> verbose = verbose	1115:4:28364:28384	4986208	0	True				
ANR	4987921	AssignmentExpression	d -> verbose = verbose		4986208	0		=			
ANR	4987922	PtrMemberAccess	d -> verbose		4986208	0					
ANR	4987923	Identifier	d		4986208	0					
ANR	4987924	Identifier	verbose		4986208	1					
ANR	4987925	Identifier	verbose		4986208	1					
ANR	4987926	IfStatement	if ( mode == MODE_DIST_LEVENSTEIN )		4986208	1					
ANR	4987927	Condition	mode == MODE_DIST_LEVENSTEIN	1116:8:28394:28421	4986208	0	True				
ANR	4987928	EqualityExpression	mode == MODE_DIST_LEVENSTEIN		4986208	0		==			
ANR	4987929	Identifier	mode		4986208	0					
ANR	4987930	Identifier	MODE_DIST_LEVENSTEIN		4986208	1					
ANR	4987931	CompoundStatement		311:38:7667:7667	4986208	1					
ANR	4987932	ExpressionStatement	d -> type = 'l'	1117:5:28431:28444	4986208	0	True				
ANR	4987933	AssignmentExpression	d -> type = 'l'		4986208	0		=			
ANR	4987934	PtrMemberAccess	d -> type		4986208	0					
ANR	4987935	Identifier	d		4986208	0					
ANR	4987936	Identifier	type		4986208	1					
ANR	4987937	PrimaryExpression	'l'		4986208	1					
ANR	4987938	ElseStatement	else		4986208	0					
ANR	4987939	IfStatement	if ( mode == MODE_DIST_MYERS )		4986208	0					
ANR	4987940	Condition	mode == MODE_DIST_MYERS	1118:15:28461:28483	4986208	0	True				
ANR	4987941	EqualityExpression	mode == MODE_DIST_MYERS		4986208	0		==			
ANR	4987942	Identifier	mode		4986208	0					
ANR	4987943	Identifier	MODE_DIST_MYERS		4986208	1					
ANR	4987944	CompoundStatement		313:40:7729:7729	4986208	1					
ANR	4987945	ExpressionStatement	d -> type = 'm'	1119:5:28493:28506	4986208	0	True				
ANR	4987946	AssignmentExpression	d -> type = 'm'		4986208	0		=			
ANR	4987947	PtrMemberAccess	d -> type		4986208	0					
ANR	4987948	Identifier	d		4986208	0					
ANR	4987949	Identifier	type		4986208	1					
ANR	4987950	PrimaryExpression	'm'		4986208	1					
ANR	4987951	ElseStatement	else		4986208	0					
ANR	4987952	CompoundStatement		315:11:7762:7762	4986208	0					
ANR	4987953	ExpressionStatement	d -> type = 0	1121:5:28526:28537	4986208	0	True				
ANR	4987954	AssignmentExpression	d -> type = 0		4986208	0		=			
ANR	4987955	PtrMemberAccess	d -> type		4986208	0					
ANR	4987956	Identifier	d		4986208	0					
ANR	4987957	Identifier	type		4986208	1					
ANR	4987958	PrimaryExpression	0		4986208	1					
ANR	4987959	ExpressionStatement	"r_diff_buffers_distance ( d , bufa , sza , bufb , szb , & count , & sim )"	1123:4:28549:28612	4986208	2	True				
ANR	4987960	CallExpression	"r_diff_buffers_distance ( d , bufa , sza , bufb , szb , & count , & sim )"		4986208	0					
ANR	4987961	Callee	r_diff_buffers_distance		4986208	0					
ANR	4987962	Identifier	r_diff_buffers_distance		4986208	0					
ANR	4987963	ArgumentList	d		4986208	1					
ANR	4987964	Argument	d		4986208	0					
ANR	4987965	Identifier	d		4986208	0					
ANR	4987966	Argument	bufa		4986208	1					
ANR	4987967	Identifier	bufa		4986208	0					
ANR	4987968	Argument	sza		4986208	2					
ANR	4987969	Identifier	sza		4986208	0					
ANR	4987970	Argument	bufb		4986208	3					
ANR	4987971	Identifier	bufb		4986208	0					
ANR	4987972	Argument	szb		4986208	4					
ANR	4987973	Identifier	szb		4986208	0					
ANR	4987974	Argument	& count		4986208	5					
ANR	4987975	UnaryOperationExpression	& count		4986208	0					
ANR	4987976	UnaryOperator	&		4986208	0					
ANR	4987977	Identifier	count		4986208	1					
ANR	4987978	Argument	& sim		4986208	6					
ANR	4987979	UnaryOperationExpression	& sim		4986208	0					
ANR	4987980	UnaryOperator	&		4986208	0					
ANR	4987981	Identifier	sim		4986208	1					
ANR	4987982	ExpressionStatement	r_diff_free ( d )	1124:4:28618:28633	4986208	3	True				
ANR	4987983	CallExpression	r_diff_free ( d )		4986208	0					
ANR	4987984	Callee	r_diff_free		4986208	0					
ANR	4987985	Identifier	r_diff_free		4986208	0					
ANR	4987986	ArgumentList	d		4986208	1					
ANR	4987987	Argument	d		4986208	0					
ANR	4987988	Identifier	d		4986208	0					
ANR	4987989	ExpressionStatement	"printf ( ""similarity: %.3f\\n"" , sim )"	1127:2:28646:28680	4986208	19	True				
ANR	4987990	CallExpression	"printf ( ""similarity: %.3f\\n"" , sim )"		4986208	0					
ANR	4987991	Callee	printf		4986208	0					
ANR	4987992	Identifier	printf		4986208	0					
ANR	4987993	ArgumentList	"""similarity: %.3f\\n"""		4986208	1					
ANR	4987994	Argument	"""similarity: %.3f\\n"""		4986208	0					
ANR	4987995	PrimaryExpression	"""similarity: %.3f\\n"""		4986208	0					
ANR	4987996	Argument	sim		4986208	1					
ANR	4987997	Identifier	sim		4986208	0					
ANR	4987998	ExpressionStatement	"printf ( ""distance: %d\\n"" , count )"	1128:2:28684:28716	4986208	20	True				
ANR	4987999	CallExpression	"printf ( ""distance: %d\\n"" , count )"		4986208	0					
ANR	4988000	Callee	printf		4986208	0					
ANR	4988001	Identifier	printf		4986208	0					
ANR	4988002	ArgumentList	"""distance: %d\\n"""		4986208	1					
ANR	4988003	Argument	"""distance: %d\\n"""		4986208	0					
ANR	4988004	PrimaryExpression	"""distance: %d\\n"""		4986208	0					
ANR	4988005	Argument	count		4986208	1					
ANR	4988006	Identifier	count		4986208	0					
ANR	4988007	BreakStatement	break ;	1129:2:28720:28725	4986208	21	True				
ANR	4988008	ExpressionStatement	r_cons_free ( )	1131:1:28731:28745	4986208	19	True				
ANR	4988009	CallExpression	r_cons_free ( )		4986208	0					
ANR	4988010	Callee	r_cons_free		4986208	0					
ANR	4988011	Identifier	r_cons_free		4986208	0					
ANR	4988012	ArgumentList			4986208	1					
ANR	4988013	IfStatement	if ( diffmode == 'j' && showcount )		4986208	20					
ANR	4988014	Condition	diffmode == 'j' && showcount	1133:5:28753:28780	4986208	0	True				
ANR	4988015	AndExpression	diffmode == 'j' && showcount		4986208	0		&&			
ANR	4988016	EqualityExpression	diffmode == 'j'		4986208	0		==			
ANR	4988017	Identifier	diffmode		4986208	0					
ANR	4988018	PrimaryExpression	'j'		4986208	1					
ANR	4988019	Identifier	showcount		4986208	1					
ANR	4988020	CompoundStatement		328:35:8026:8026	4986208	1					
ANR	4988021	ExpressionStatement	"printf ( "",\\""count\\"":%d}\\n"" , count )"	1134:2:28787:28821	4986208	0	True				
ANR	4988022	CallExpression	"printf ( "",\\""count\\"":%d}\\n"" , count )"		4986208	0					
ANR	4988023	Callee	printf		4986208	0					
ANR	4988024	Identifier	printf		4986208	0					
ANR	4988025	ArgumentList	""",\\""count\\"":%d}\\n"""		4986208	1					
ANR	4988026	Argument	""",\\""count\\"":%d}\\n"""		4986208	0					
ANR	4988027	PrimaryExpression	""",\\""count\\"":%d}\\n"""		4986208	0					
ANR	4988028	Argument	count		4986208	1					
ANR	4988029	Identifier	count		4986208	0					
ANR	4988030	ElseStatement	else		4986208	0					
ANR	4988031	IfStatement	if ( showcount && diffmode != 'j' )		4986208	0					
ANR	4988032	Condition	showcount && diffmode != 'j'	1135:12:28835:28862	4986208	0	True				
ANR	4988033	AndExpression	showcount && diffmode != 'j'		4986208	0		&&			
ANR	4988034	Identifier	showcount		4986208	0					
ANR	4988035	EqualityExpression	diffmode != 'j'		4986208	1		!=			
ANR	4988036	Identifier	diffmode		4986208	0					
ANR	4988037	PrimaryExpression	'j'		4986208	1					
ANR	4988038	CompoundStatement		330:42:8108:8108	4986208	1					
ANR	4988039	ExpressionStatement	"printf ( ""%d\\n"" , count )"	1136:2:28869:28891	4986208	0	True				
ANR	4988040	CallExpression	"printf ( ""%d\\n"" , count )"		4986208	0					
ANR	4988041	Callee	printf		4986208	0					
ANR	4988042	Identifier	printf		4986208	0					
ANR	4988043	ArgumentList	"""%d\\n"""		4986208	1					
ANR	4988044	Argument	"""%d\\n"""		4986208	0					
ANR	4988045	PrimaryExpression	"""%d\\n"""		4986208	0					
ANR	4988046	Argument	count		4986208	1					
ANR	4988047	Identifier	count		4986208	0					
ANR	4988048	ElseStatement	else		4986208	0					
ANR	4988049	IfStatement	if ( ! showcount && diffmode == 'j' )		4986208	0					
ANR	4988050	Condition	! showcount && diffmode == 'j'	1137:12:28905:28933	4986208	0	True				
ANR	4988051	AndExpression	! showcount && diffmode == 'j'		4986208	0		&&			
ANR	4988052	UnaryOperationExpression	! showcount		4986208	0					
ANR	4988053	UnaryOperator	!		4986208	0					
ANR	4988054	Identifier	showcount		4986208	1					
ANR	4988055	EqualityExpression	diffmode == 'j'		4986208	1		==			
ANR	4988056	Identifier	diffmode		4986208	0					
ANR	4988057	PrimaryExpression	'j'		4986208	1					
ANR	4988058	CompoundStatement		332:43:8179:8179	4986208	1					
ANR	4988059	ExpressionStatement	"printf ( ""}\\n"" )"	1138:2:28940:28954	4986208	0	True				
ANR	4988060	CallExpression	"printf ( ""}\\n"" )"		4986208	0					
ANR	4988061	Callee	printf		4986208	0					
ANR	4988062	Identifier	printf		4986208	0					
ANR	4988063	ArgumentList	"""}\\n"""		4986208	1					
ANR	4988064	Argument	"""}\\n"""		4986208	0					
ANR	4988065	PrimaryExpression	"""}\\n"""		4986208	0					
ANR	4988066	ExpressionStatement	free ( bufa )	1140:1:28960:28971	4986208	21	True				
ANR	4988067	CallExpression	free ( bufa )		4986208	0					
ANR	4988068	Callee	free		4986208	0					
ANR	4988069	Identifier	free		4986208	0					
ANR	4988070	ArgumentList	bufa		4986208	1					
ANR	4988071	Argument	bufa		4986208	0					
ANR	4988072	Identifier	bufa		4986208	0					
ANR	4988073	ExpressionStatement	free ( bufb )	1141:1:28974:28985	4986208	22	True				
ANR	4988074	CallExpression	free ( bufb )		4986208	0					
ANR	4988075	Callee	free		4986208	0					
ANR	4988076	Identifier	free		4986208	0					
ANR	4988077	ArgumentList	bufb		4986208	1					
ANR	4988078	Argument	bufb		4986208	0					
ANR	4988079	Identifier	bufb		4986208	0					
ANR	4988080	ReturnStatement	return 0 ;	1143:1:28989:28997	4986208	23	True				
ANR	4988081	PrimaryExpression	0		4986208	0					
ANR	4988082	ReturnType	R_API int		4986208	1					
ANR	4988083	Identifier	r_main_radiff2		4986208	2					
ANR	4988084	ParameterList	"int argc , char * * argv"		4986208	3					
ANR	4988085	Parameter	int argc	806:25:20733:20740	4986208	0	True				
ANR	4988086	ParameterType	int		4986208	0					
ANR	4988087	Identifier	argc		4986208	1					
ANR	4988088	Parameter	char * * argv	806:35:20743:20753	4986208	1	True				
ANR	4988089	ParameterType	char * *		4986208	0					
ANR	4988090	Identifier	argv		4986208	1					
ANR	4988091	CFGEntryNode	ENTRY		4986208		True				
ANR	4988092	CFGExitNode	EXIT		4986208		True				
ANR	4988093	Symbol	GRAPH_JSON_DIS_MODE		4986208						
ANR	4988094	Symbol	COLOR_MODE_DISABLED		4986208						
ANR	4988095	Symbol	delta		4986208						
ANR	4988096	Symbol	R_ANAL_REF_TYPE_NULL		4986208						
ANR	4988097	Symbol	MODE_DIFF_IMPORTS		4986208						
ANR	4988098	Symbol	addrb		4986208						
ANR	4988099	Symbol	addra		4986208						
ANR	4988100	Symbol	tmp		4986208						
ANR	4988101	Symbol	opencore		4986208						
ANR	4988102	Symbol	anal_all		4986208						
ANR	4988103	Symbol	c -> config		4986208						
ANR	4988104	Symbol	zignatures		4986208						
ANR	4988105	Symbol	r_list_newf		4986208						
ANR	4988106	Symbol	bits		4986208						
ANR	4988107	Symbol	c2 -> anal		4986208						
ANR	4988108	Symbol	r_diff_buffers_unified		4986208						
ANR	4988109	Symbol	c2		4986208						
ANR	4988110	Symbol	r_getopt		4986208						
ANR	4988111	Symbol	r_config_get_i		4986208						
ANR	4988112	Symbol	r_optind		4986208						
ANR	4988113	Symbol	r_list_empty		4986208						
ANR	4988114	Symbol	c -> c2		4986208						
ANR	4988115	Symbol	GRAPH_SDB_MODE		4986208						
ANR	4988116	Symbol	* tmp		4986208						
ANR	4988117	Symbol	GRAPH_JSON_MODE		4986208						
ANR	4988118	Symbol	GRAPH_DOT_MODE		4986208						
ANR	4988119	Symbol	MODE_DIST_MYERS		4986208						
ANR	4988120	Symbol	file		4986208						
ANR	4988121	Symbol	gmode		4986208						
ANR	4988122	Symbol	MODE_CODE		4986208						
ANR	4988123	Symbol	quiet		4986208						
ANR	4988124	Symbol	MODE_COLS		4986208						
ANR	4988125	Symbol	bufa		4986208						
ANR	4988126	Symbol	atoi		4986208						
ANR	4988127	Symbol	& bcb		4986208						
ANR	4988128	Symbol	bufb		4986208						
ANR	4988129	Symbol	c		4986208						
ANR	4988130	Symbol	d		4986208						
ANR	4988131	Symbol	diffops		4986208						
ANR	4988132	Symbol	words		4986208						
ANR	4988133	Symbol	diffmode		4986208						
ANR	4988134	Symbol	off		4986208						
ANR	4988135	Symbol	o		4986208						
ANR	4988136	Symbol	verbose		4986208						
ANR	4988137	Symbol	MODE_DIFF		4986208						
ANR	4988138	Symbol	depth		4986208						
ANR	4988139	Symbol	arch		4986208						
ANR	4988140	Symbol	& cb		4986208						
ANR	4988141	Symbol	threshold		4986208						
ANR	4988142	Symbol	* argv		4986208						
ANR	4988143	Symbol	GRAPH_STAR_MODE		4986208						
ANR	4988144	Symbol	disasm		4986208						
ANR	4988145	Symbol	second		4986208						
ANR	4988146	Symbol	mode		4986208						
ANR	4988147	Symbol	evals		4986208						
ANR	4988148	Symbol	MODE_DIST		4986208						
ANR	4988149	Symbol	strlen		4986208						
ANR	4988150	Symbol	d -> type		4986208						
ANR	4988151	Symbol	columnSort		4986208						
ANR	4988152	Symbol	r_str_get		4986208						
ANR	4988153	Symbol	res		4986208						
ANR	4988154	Symbol	NULL		4986208						
ANR	4988155	Symbol	r_cons_get_size		4986208						
ANR	4988156	Symbol	MODE_DIFF_STRS		4986208						
ANR	4988157	Symbol	GRAPH_INTERACTIVE_MODE		4986208						
ANR	4988158	Symbol	count		4986208						
ANR	4988159	Symbol	MODE_GRAPH		4986208						
ANR	4988160	Symbol	r_optarg		4986208						
ANR	4988161	Symbol	strstr		4986208						
ANR	4988162	Symbol	true		4986208						
ANR	4988163	Symbol	c -> anal		4986208						
ANR	4988164	Symbol	c2 -> config		4986208						
ANR	4988165	Symbol	& szb		4986208						
ANR	4988166	Symbol	r_diff_new		4986208						
ANR	4988167	Symbol	d -> verbose		4986208						
ANR	4988168	Symbol	& sza		4986208						
ANR	4988169	Symbol	show_help		4986208						
ANR	4988170	Symbol	argv		4986208						
ANR	4988171	Symbol	r_num_math		4986208						
ANR	4988172	Symbol	GRAPH_GML_MODE		4986208						
ANR	4988173	Symbol	useva		4986208						
ANR	4988174	Symbol	c2 -> num		4986208						
ANR	4988175	Symbol	sim		4986208						
ANR	4988176	Symbol	get_imports		4986208						
ANR	4988177	Symbol	szb		4986208						
ANR	4988178	Symbol	sza		4986208						
ANR	4988179	Symbol	addr		4986208						
ANR	4988180	Symbol	UT64_MAX		4986208						
ANR	4988181	Symbol	argc		4986208						
ANR	4988182	Symbol	* second ++		4986208						
ANR	4988183	Symbol	runcmd		4986208						
ANR	4988184	Symbol	GRAPH_DEFAULT_MODE		4986208						
ANR	4988185	Symbol	false		4986208						
ANR	4988186	Symbol	& c		4986208						
ANR	4988187	Symbol	c -> num		4986208						
ANR	4988188	Symbol	* c		4986208						
ANR	4988189	Symbol	pdc		4986208						
ANR	4988190	Symbol	* d		4986208						
ANR	4988191	Symbol	r_main_version_print		4986208						
ANR	4988192	Symbol	c2 -> c2		4986208						
ANR	4988193	Symbol	showcount		4986208						
ANR	4988194	Symbol	* r_optind		4986208						
ANR	4988195	Symbol	* c2		4986208						
ANR	4988196	Symbol	file2		4986208						
ANR	4988197	Symbol	& count		4986208						
ANR	4988198	Symbol	& sim		4986208						
ANR	4988199	Symbol	showbare		4986208						
ANR	4988200	Symbol	MODE_DIST_LEVENSTEIN		4986208						
ANR	4988201	Symbol	strdup		4986208						
ANR	4988202	Symbol	slurp		4986208						
ANR	4988203	Symbol	GRAPH_TINY_MODE		4986208						
ANR	4988204	Symbol	get_strings		4986208						
