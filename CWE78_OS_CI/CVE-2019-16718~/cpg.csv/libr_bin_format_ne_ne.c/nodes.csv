command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3640578	File	data/converged/CVE-2019-16718~_radare2/libr_bin_format_ne_ne.c								
ANR	3640579	Function	__get_target_os	3:0:17:328							
ANR	3640580	FunctionDef	__get_target_os (r_bin_ne_obj_t * bin)		3640579	0					
ANR	3640581	CompoundStatement		3:50:67:328	3640579	0					
ANR	3640582	SwitchStatement	switch ( bin -> ne_header -> targOS )		3640579	0					
ANR	3640583	Condition	bin -> ne_header -> targOS	4:9:78:99	3640579	0	True				
ANR	3640584	PtrMemberAccess	bin -> ne_header -> targOS		3640579	0					
ANR	3640585	PtrMemberAccess	bin -> ne_header		3640579	0					
ANR	3640586	Identifier	bin		3640579	0					
ANR	3640587	Identifier	ne_header		3640579	1					
ANR	3640588	Identifier	targOS		3640579	1					
ANR	3640589	CompoundStatement		2:33:34:34	3640579	1					
ANR	3640590	Label	case 1 :	5:1:105:111	3640579	0	True				
ANR	3640591	ReturnStatement	"return ""OS/2"" ;"	6:2:115:128	3640579	1	True				
ANR	3640592	PrimaryExpression	"""OS/2"""		3640579	0					
ANR	3640593	Label	case 2 :	7:1:131:137	3640579	2	True				
ANR	3640594	ReturnStatement	"return ""Windows"" ;"	8:2:141:157	3640579	3	True				
ANR	3640595	PrimaryExpression	"""Windows"""		3640579	0					
ANR	3640596	Label	case 3 :	9:1:160:166	3640579	4	True				
ANR	3640597	ReturnStatement	"return ""European MS-DOS 4.x"" ;"	10:2:170:198	3640579	5	True				
ANR	3640598	PrimaryExpression	"""European MS-DOS 4.x"""		3640579	0					
ANR	3640599	Label	case 4 :	11:1:201:207	3640579	6	True				
ANR	3640600	ReturnStatement	"return ""Windows 386"" ;"	12:2:211:231	3640579	7	True				
ANR	3640601	PrimaryExpression	"""Windows 386"""		3640579	0					
ANR	3640602	Label	case 5 :	13:1:234:240	3640579	8	True				
ANR	3640603	ReturnStatement	"return ""BOSS (Borland Operating System Services)"" ;"	14:2:244:293	3640579	9	True				
ANR	3640604	PrimaryExpression	"""BOSS (Borland Operating System Services)"""		3640579	0					
ANR	3640605	Label	default :	15:1:296:303	3640579	10	True				
ANR	3640606	Identifier	default		3640579	0					
ANR	3640607	ReturnStatement	"return ""Unknown"" ;"	16:2:307:323	3640579	11	True				
ANR	3640608	PrimaryExpression	"""Unknown"""		3640579	0					
ANR	3640609	ReturnType	static char *		3640579	1					
ANR	3640610	Identifier	__get_target_os		3640579	2					
ANR	3640611	ParameterList	r_bin_ne_obj_t * bin		3640579	3					
ANR	3640612	Parameter	r_bin_ne_obj_t * bin	3:29:46:64	3640579	0	True				
ANR	3640613	ParameterType	r_bin_ne_obj_t *		3640579	0					
ANR	3640614	Identifier	bin		3640579	1					
ANR	3640615	CFGEntryNode	ENTRY		3640579		True				
ANR	3640616	CFGExitNode	EXIT		3640579		True				
ANR	3640617	Symbol	bin		3640579						
ANR	3640618	Symbol	bin -> ne_header -> targOS		3640579						
ANR	3640619	Symbol	* bin -> ne_header		3640579						
ANR	3640620	Symbol	* * bin		3640579						
ANR	3640621	Symbol	bin -> ne_header		3640579						
ANR	3640622	Symbol	* bin		3640579						
ANR	3640623	Function	__translate_perms	20:0:331:551							
ANR	3640624	FunctionDef	__translate_perms (int flags)		3640623	0					
ANR	3640625	CompoundStatement		20:40:371:551	3640623	0					
ANR	3640626	IdentifierDeclStatement	int perms = 0 ;	21:1:374:387	3640623	0	True				
ANR	3640627	IdentifierDecl	perms = 0		3640623	0					
ANR	3640628	IdentifierDeclType	int		3640623	0					
ANR	3640629	Identifier	perms		3640623	1					
ANR	3640630	AssignmentExpression	perms = 0		3640623	2		=			
ANR	3640631	Identifier	perms		3640623	0					
ANR	3640632	PrimaryExpression	0		3640623	1					
ANR	3640633	IfStatement	if ( flags & IS_RX )		3640623	1					
ANR	3640634	Condition	flags & IS_RX	22:5:394:406	3640623	0	True				
ANR	3640635	BitAndExpression	flags & IS_RX		3640623	0		&			
ANR	3640636	Identifier	flags		3640623	0					
ANR	3640637	Identifier	IS_RX		3640623	1					
ANR	3640638	CompoundStatement		3:20:37:37	3640623	1					
ANR	3640639	IfStatement	if ( flags & IS_DATA )		3640623	0					
ANR	3640640	Condition	flags & IS_DATA	23:6:417:431	3640623	0	True				
ANR	3640641	BitAndExpression	flags & IS_DATA		3640623	0		&			
ANR	3640642	Identifier	flags		3640623	0					
ANR	3640643	Identifier	IS_DATA		3640623	1					
ANR	3640644	CompoundStatement		4:23:62:62	3640623	1					
ANR	3640645	ExpressionStatement	perms = R_PERM_R	24:3:439:455	3640623	0	True				
ANR	3640646	AssignmentExpression	perms = R_PERM_R		3640623	0		=			
ANR	3640647	Identifier	perms		3640623	0					
ANR	3640648	Identifier	R_PERM_R		3640623	1					
ANR	3640649	ElseStatement	else		3640623	0					
ANR	3640650	CompoundStatement		6:9:94:94	3640623	0					
ANR	3640651	ExpressionStatement	perms = R_PERM_X	26:3:471:487	3640623	0	True				
ANR	3640652	AssignmentExpression	perms = R_PERM_X		3640623	0		=			
ANR	3640653	Identifier	perms		3640623	0					
ANR	3640654	Identifier	R_PERM_X		3640623	1					
ANR	3640655	IfStatement	if ( ! perms )		3640623	2					
ANR	3640656	Condition	! perms	29:5:501:506	3640623	0	True				
ANR	3640657	UnaryOperationExpression	! perms		3640623	0					
ANR	3640658	UnaryOperator	!		3640623	0					
ANR	3640659	Identifier	perms		3640623	1					
ANR	3640660	CompoundStatement		10:13:137:137	3640623	1					
ANR	3640661	ExpressionStatement	perms = R_PERM_RWX	30:2:513:531	3640623	0	True				
ANR	3640662	AssignmentExpression	perms = R_PERM_RWX		3640623	0		=			
ANR	3640663	Identifier	perms		3640623	0					
ANR	3640664	Identifier	R_PERM_RWX		3640623	1					
ANR	3640665	ReturnStatement	return perms ;	32:1:537:549	3640623	3	True				
ANR	3640666	Identifier	perms		3640623	0					
ANR	3640667	ReturnType	static int		3640623	1					
ANR	3640668	Identifier	__translate_perms		3640623	2					
ANR	3640669	ParameterList	int flags		3640623	3					
ANR	3640670	Parameter	int flags	20:29:360:368	3640623	0	True				
ANR	3640671	ParameterType	int		3640623	0					
ANR	3640672	Identifier	flags		3640623	1					
ANR	3640673	CFGEntryNode	ENTRY		3640623		True				
ANR	3640674	CFGExitNode	EXIT		3640623		True				
ANR	3640675	Symbol	IS_RX		3640623						
ANR	3640676	Symbol	R_PERM_X		3640623						
ANR	3640677	Symbol	R_PERM_R		3640623						
ANR	3640678	Symbol	flags		3640623						
ANR	3640679	Symbol	perms		3640623						
ANR	3640680	Symbol	IS_DATA		3640623						
ANR	3640681	Symbol	R_PERM_RWX		3640623						
ANR	3640682	Function	__read_nonnull_str_at	35:0:554:835							
ANR	3640683	FunctionDef	"__read_nonnull_str_at (RBuffer * buf , ut64 offset)"		3640682	0					
ANR	3640684	CompoundStatement		35:62:616:835	3640682	0					
ANR	3640685	IdentifierDeclStatement	"ut8 sz = r_buf_read8_at ( buf , offset ) ;"	36:1:619:656	3640682	0	True				
ANR	3640686	IdentifierDecl	"sz = r_buf_read8_at ( buf , offset )"		3640682	0					
ANR	3640687	IdentifierDeclType	ut8		3640682	0					
ANR	3640688	Identifier	sz		3640682	1					
ANR	3640689	AssignmentExpression	"sz = r_buf_read8_at ( buf , offset )"		3640682	2		=			
ANR	3640690	Identifier	sz		3640682	0					
ANR	3640691	CallExpression	"r_buf_read8_at ( buf , offset )"		3640682	1					
ANR	3640692	Callee	r_buf_read8_at		3640682	0					
ANR	3640693	Identifier	r_buf_read8_at		3640682	0					
ANR	3640694	ArgumentList	buf		3640682	1					
ANR	3640695	Argument	buf		3640682	0					
ANR	3640696	Identifier	buf		3640682	0					
ANR	3640697	Argument	offset		3640682	1					
ANR	3640698	Identifier	offset		3640682	0					
ANR	3640699	IfStatement	if ( ! sz )		3640682	1					
ANR	3640700	Condition	! sz	37:5:663:665	3640682	0	True				
ANR	3640701	UnaryOperationExpression	! sz		3640682	0					
ANR	3640702	UnaryOperator	!		3640682	0					
ANR	3640703	Identifier	sz		3640682	1					
ANR	3640704	CompoundStatement		3:10:51:51	3640682	1					
ANR	3640705	ReturnStatement	return NULL ;	38:2:672:683	3640682	0	True				
ANR	3640706	Identifier	NULL		3640682	0					
ANR	3640707	IdentifierDeclStatement	char * str = malloc ( ( ut64 ) sz + 1 ) ;	40:1:689:722	3640682	2	True				
ANR	3640708	IdentifierDecl	* str = malloc ( ( ut64 ) sz + 1 )		3640682	0					
ANR	3640709	IdentifierDeclType	char *		3640682	0					
ANR	3640710	Identifier	str		3640682	1					
ANR	3640711	AssignmentExpression	* str = malloc ( ( ut64 ) sz + 1 )		3640682	2		=			
ANR	3640712	Identifier	str		3640682	0					
ANR	3640713	CallExpression	malloc ( ( ut64 ) sz + 1 )		3640682	1					
ANR	3640714	Callee	malloc		3640682	0					
ANR	3640715	Identifier	malloc		3640682	0					
ANR	3640716	ArgumentList	( ut64 ) sz + 1		3640682	1					
ANR	3640717	Argument	( ut64 ) sz + 1		3640682	0					
ANR	3640718	AdditiveExpression	( ut64 ) sz + 1		3640682	0		+			
ANR	3640719	CastExpression	( ut64 ) sz		3640682	0					
ANR	3640720	CastTarget	ut64		3640682	0					
ANR	3640721	Identifier	sz		3640682	1					
ANR	3640722	PrimaryExpression	1		3640682	1					
ANR	3640723	IfStatement	if ( ! str )		3640682	3					
ANR	3640724	Condition	! str	41:5:729:732	3640682	0	True				
ANR	3640725	UnaryOperationExpression	! str		3640682	0					
ANR	3640726	UnaryOperator	!		3640682	0					
ANR	3640727	Identifier	str		3640682	1					
ANR	3640728	CompoundStatement		7:11:118:118	3640682	1					
ANR	3640729	ReturnStatement	return NULL ;	42:2:739:750	3640682	0	True				
ANR	3640730	Identifier	NULL		3640682	0					
ANR	3640731	ExpressionStatement	"r_buf_read_at ( buf , offset + 1 , ( ut8 * ) str , sz )"	44:1:756:803	3640682	4	True				
ANR	3640732	CallExpression	"r_buf_read_at ( buf , offset + 1 , ( ut8 * ) str , sz )"		3640682	0					
ANR	3640733	Callee	r_buf_read_at		3640682	0					
ANR	3640734	Identifier	r_buf_read_at		3640682	0					
ANR	3640735	ArgumentList	buf		3640682	1					
ANR	3640736	Argument	buf		3640682	0					
ANR	3640737	Identifier	buf		3640682	0					
ANR	3640738	Argument	offset + 1		3640682	1					
ANR	3640739	AdditiveExpression	offset + 1		3640682	0		+			
ANR	3640740	Identifier	offset		3640682	0					
ANR	3640741	PrimaryExpression	1		3640682	1					
ANR	3640742	Argument	( ut8 * ) str		3640682	2					
ANR	3640743	CastExpression	( ut8 * ) str		3640682	0					
ANR	3640744	CastTarget	ut8 *		3640682	0					
ANR	3640745	Identifier	str		3640682	1					
ANR	3640746	Argument	sz		3640682	3					
ANR	3640747	Identifier	sz		3640682	0					
ANR	3640748	ExpressionStatement	str [ sz ] = '\\0'	45:1:806:820	3640682	5	True				
ANR	3640749	AssignmentExpression	str [ sz ] = '\\0'		3640682	0		=			
ANR	3640750	ArrayIndexing	str [ sz ]		3640682	0					
ANR	3640751	Identifier	str		3640682	0					
ANR	3640752	Identifier	sz		3640682	1					
ANR	3640753	PrimaryExpression	'\\0'		3640682	1					
ANR	3640754	ReturnStatement	return str ;	46:1:823:833	3640682	6	True				
ANR	3640755	Identifier	str		3640682	0					
ANR	3640756	ReturnType	static char *		3640682	1					
ANR	3640757	Identifier	__read_nonnull_str_at		3640682	2					
ANR	3640758	ParameterList	"RBuffer * buf , ut64 offset"		3640682	3					
ANR	3640759	Parameter	RBuffer * buf	35:35:589:600	3640682	0	True				
ANR	3640760	ParameterType	RBuffer *		3640682	0					
ANR	3640761	Identifier	buf		3640682	1					
ANR	3640762	Parameter	ut64 offset	35:49:603:613	3640682	1	True				
ANR	3640763	ParameterType	ut64		3640682	0					
ANR	3640764	Identifier	offset		3640682	1					
ANR	3640765	CFGEntryNode	ENTRY		3640682		True				
ANR	3640766	CFGExitNode	EXIT		3640682		True				
ANR	3640767	Symbol	str		3640682						
ANR	3640768	Symbol	malloc		3640682						
ANR	3640769	Symbol	buf		3640682						
ANR	3640770	Symbol	NULL		3640682						
ANR	3640771	Symbol	offset		3640682						
ANR	3640772	Symbol	r_buf_read8_at		3640682						
ANR	3640773	Symbol	sz		3640682						
ANR	3640774	Symbol	* str		3640682						
ANR	3640775	Symbol	* sz		3640682						
ANR	3640776	Function	__func_name_from_ord	49:0:838:1303							
ANR	3640777	FunctionDef	"__func_name_from_ord (char * module , ut16 ordinal)"		3640776	0					
ANR	3640778	CompoundStatement		49:62:900:1303	3640776	0					
ANR	3640779	IdentifierDeclStatement	"char * path = r_str_newf ( R_JOIN_4_PATHS ( ""%s"" , R2_SDB_FORMAT , ""dll"" , ""%s.sdb"" ) , r_sys_prefix ( NULL ) , module ) ;"	50:1:903:1011	3640776	0	True				
ANR	3640780	IdentifierDecl	"* path = r_str_newf ( R_JOIN_4_PATHS ( ""%s"" , R2_SDB_FORMAT , ""dll"" , ""%s.sdb"" ) , r_sys_prefix ( NULL ) , module )"		3640776	0					
ANR	3640781	IdentifierDeclType	char *		3640776	0					
ANR	3640782	Identifier	path		3640776	1					
ANR	3640783	AssignmentExpression	"* path = r_str_newf ( R_JOIN_4_PATHS ( ""%s"" , R2_SDB_FORMAT , ""dll"" , ""%s.sdb"" ) , r_sys_prefix ( NULL ) , module )"		3640776	2		=			
ANR	3640784	Identifier	path		3640776	0					
ANR	3640785	CallExpression	"r_str_newf ( R_JOIN_4_PATHS ( ""%s"" , R2_SDB_FORMAT , ""dll"" , ""%s.sdb"" ) , r_sys_prefix ( NULL ) , module )"		3640776	1					
ANR	3640786	Callee	r_str_newf		3640776	0					
ANR	3640787	Identifier	r_str_newf		3640776	0					
ANR	3640788	ArgumentList	"R_JOIN_4_PATHS ( ""%s"" , R2_SDB_FORMAT , ""dll"" , ""%s.sdb"" )"		3640776	1					
ANR	3640789	Argument	"R_JOIN_4_PATHS ( ""%s"" , R2_SDB_FORMAT , ""dll"" , ""%s.sdb"" )"		3640776	0					
ANR	3640790	CallExpression	"R_JOIN_4_PATHS ( ""%s"" , R2_SDB_FORMAT , ""dll"" , ""%s.sdb"" )"		3640776	0					
ANR	3640791	Callee	R_JOIN_4_PATHS		3640776	0					
ANR	3640792	Identifier	R_JOIN_4_PATHS		3640776	0					
ANR	3640793	ArgumentList	"""%s"""		3640776	1					
ANR	3640794	Argument	"""%s"""		3640776	0					
ANR	3640795	PrimaryExpression	"""%s"""		3640776	0					
ANR	3640796	Argument	R2_SDB_FORMAT		3640776	1					
ANR	3640797	Identifier	R2_SDB_FORMAT		3640776	0					
ANR	3640798	Argument	"""dll"""		3640776	2					
ANR	3640799	PrimaryExpression	"""dll"""		3640776	0					
ANR	3640800	Argument	"""%s.sdb"""		3640776	3					
ANR	3640801	PrimaryExpression	"""%s.sdb"""		3640776	0					
ANR	3640802	Argument	r_sys_prefix ( NULL )		3640776	1					
ANR	3640803	CallExpression	r_sys_prefix ( NULL )		3640776	0					
ANR	3640804	Callee	r_sys_prefix		3640776	0					
ANR	3640805	Identifier	r_sys_prefix		3640776	0					
ANR	3640806	ArgumentList	NULL		3640776	1					
ANR	3640807	Argument	NULL		3640776	0					
ANR	3640808	Identifier	NULL		3640776	0					
ANR	3640809	Argument	module		3640776	2					
ANR	3640810	Identifier	module		3640776	0					
ANR	3640811	IdentifierDeclStatement	"char * ord = r_str_newf ( ""%d"" , ordinal ) ;"	51:1:1014:1052	3640776	1	True				
ANR	3640812	IdentifierDecl	"* ord = r_str_newf ( ""%d"" , ordinal )"		3640776	0					
ANR	3640813	IdentifierDeclType	char *		3640776	0					
ANR	3640814	Identifier	ord		3640776	1					
ANR	3640815	AssignmentExpression	"* ord = r_str_newf ( ""%d"" , ordinal )"		3640776	2		=			
ANR	3640816	Identifier	ord		3640776	0					
ANR	3640817	CallExpression	"r_str_newf ( ""%d"" , ordinal )"		3640776	1					
ANR	3640818	Callee	r_str_newf		3640776	0					
ANR	3640819	Identifier	r_str_newf		3640776	0					
ANR	3640820	ArgumentList	"""%d"""		3640776	1					
ANR	3640821	Argument	"""%d"""		3640776	0					
ANR	3640822	PrimaryExpression	"""%d"""		3640776	0					
ANR	3640823	Argument	ordinal		3640776	1					
ANR	3640824	Identifier	ordinal		3640776	0					
ANR	3640825	IdentifierDeclStatement	char * name ;	52:1:1055:1065	3640776	2	True				
ANR	3640826	IdentifierDecl	* name		3640776	0					
ANR	3640827	IdentifierDeclType	char *		3640776	0					
ANR	3640828	Identifier	name		3640776	1					
ANR	3640829	IfStatement	if ( r_file_exists ( path ) )		3640776	3					
ANR	3640830	Condition	r_file_exists ( path )	53:5:1072:1091	3640776	0	True				
ANR	3640831	CallExpression	r_file_exists ( path )		3640776	0					
ANR	3640832	Callee	r_file_exists		3640776	0					
ANR	3640833	Identifier	r_file_exists		3640776	0					
ANR	3640834	ArgumentList	path		3640776	1					
ANR	3640835	Argument	path		3640776	0					
ANR	3640836	Identifier	path		3640776	0					
ANR	3640837	CompoundStatement		6:2:197:231	3640776	1					
ANR	3640838	IdentifierDeclStatement	"Sdb * sdb = sdb_new ( NULL , path , 0 ) ;"	54:2:1098:1132	3640776	0	True				
ANR	3640839	IdentifierDecl	"* sdb = sdb_new ( NULL , path , 0 )"		3640776	0					
ANR	3640840	IdentifierDeclType	Sdb *		3640776	0					
ANR	3640841	Identifier	sdb		3640776	1					
ANR	3640842	AssignmentExpression	"* sdb = sdb_new ( NULL , path , 0 )"		3640776	2		=			
ANR	3640843	Identifier	sdb		3640776	0					
ANR	3640844	CallExpression	"sdb_new ( NULL , path , 0 )"		3640776	1					
ANR	3640845	Callee	sdb_new		3640776	0					
ANR	3640846	Identifier	sdb_new		3640776	0					
ANR	3640847	ArgumentList	NULL		3640776	1					
ANR	3640848	Argument	NULL		3640776	0					
ANR	3640849	Identifier	NULL		3640776	0					
ANR	3640850	Argument	path		3640776	1					
ANR	3640851	Identifier	path		3640776	0					
ANR	3640852	Argument	0		3640776	2					
ANR	3640853	PrimaryExpression	0		3640776	0					
ANR	3640854	ExpressionStatement	"name = sdb_get ( sdb , ord , NULL )"	55:2:1136:1167	3640776	1	True				
ANR	3640855	AssignmentExpression	"name = sdb_get ( sdb , ord , NULL )"		3640776	0		=			
ANR	3640856	Identifier	name		3640776	0					
ANR	3640857	CallExpression	"sdb_get ( sdb , ord , NULL )"		3640776	1					
ANR	3640858	Callee	sdb_get		3640776	0					
ANR	3640859	Identifier	sdb_get		3640776	0					
ANR	3640860	ArgumentList	sdb		3640776	1					
ANR	3640861	Argument	sdb		3640776	0					
ANR	3640862	Identifier	sdb		3640776	0					
ANR	3640863	Argument	ord		3640776	1					
ANR	3640864	Identifier	ord		3640776	0					
ANR	3640865	Argument	NULL		3640776	2					
ANR	3640866	Identifier	NULL		3640776	0					
ANR	3640867	IfStatement	if ( ! name )		3640776	2					
ANR	3640868	Condition	! name	56:6:1175:1179	3640776	0	True				
ANR	3640869	UnaryOperationExpression	! name		3640776	0					
ANR	3640870	UnaryOperator	!		3640776	0					
ANR	3640871	Identifier	name		3640776	1					
ANR	3640872	CompoundStatement		8:13:281:281	3640776	1					
ANR	3640873	ExpressionStatement	name = ord	57:3:1187:1197	3640776	0	True				
ANR	3640874	AssignmentExpression	name = ord		3640776	0		=			
ANR	3640875	Identifier	name		3640776	0					
ANR	3640876	Identifier	ord		3640776	1					
ANR	3640877	ElseStatement	else		3640776	0					
ANR	3640878	CompoundStatement		10:9:307:307	3640776	0					
ANR	3640879	ExpressionStatement	free ( ord )	59:3:1213:1223	3640776	0	True				
ANR	3640880	CallExpression	free ( ord )		3640776	0					
ANR	3640881	Callee	free		3640776	0					
ANR	3640882	Identifier	free		3640776	0					
ANR	3640883	ArgumentList	ord		3640776	1					
ANR	3640884	Argument	ord		3640776	0					
ANR	3640885	Identifier	ord		3640776	0					
ANR	3640886	ExpressionStatement	sdb_close ( sdb )	61:2:1231:1246	3640776	3	True				
ANR	3640887	CallExpression	sdb_close ( sdb )		3640776	0					
ANR	3640888	Callee	sdb_close		3640776	0					
ANR	3640889	Identifier	sdb_close		3640776	0					
ANR	3640890	ArgumentList	sdb		3640776	1					
ANR	3640891	Argument	sdb		3640776	0					
ANR	3640892	Identifier	sdb		3640776	0					
ANR	3640893	ExpressionStatement	free ( sdb )	62:2:1250:1260	3640776	4	True				
ANR	3640894	CallExpression	free ( sdb )		3640776	0					
ANR	3640895	Callee	free		3640776	0					
ANR	3640896	Identifier	free		3640776	0					
ANR	3640897	ArgumentList	sdb		3640776	1					
ANR	3640898	Argument	sdb		3640776	0					
ANR	3640899	Identifier	sdb		3640776	0					
ANR	3640900	ElseStatement	else		3640776	0					
ANR	3640901	CompoundStatement		15:8:369:369	3640776	0					
ANR	3640902	ExpressionStatement	name = ord	64:2:1274:1284	3640776	0	True				
ANR	3640903	AssignmentExpression	name = ord		3640776	0		=			
ANR	3640904	Identifier	name		3640776	0					
ANR	3640905	Identifier	ord		3640776	1					
ANR	3640906	ReturnStatement	return name ;	66:1:1290:1301	3640776	4	True				
ANR	3640907	Identifier	name		3640776	0					
ANR	3640908	ReturnType	static char *		3640776	1					
ANR	3640909	Identifier	__func_name_from_ord		3640776	2					
ANR	3640910	ParameterList	"char * module , ut16 ordinal"		3640776	3					
ANR	3640911	Parameter	char * module	49:34:872:883	3640776	0	True				
ANR	3640912	ParameterType	char *		3640776	0					
ANR	3640913	Identifier	module		3640776	1					
ANR	3640914	Parameter	ut16 ordinal	49:48:886:897	3640776	1	True				
ANR	3640915	ParameterType	ut16		3640776	0					
ANR	3640916	Identifier	ordinal		3640776	1					
ANR	3640917	CFGEntryNode	ENTRY		3640776		True				
ANR	3640918	CFGExitNode	EXIT		3640776		True				
ANR	3640919	Symbol	ord		3640776						
ANR	3640920	Symbol	R_JOIN_4_PATHS		3640776						
ANR	3640921	Symbol	NULL		3640776						
ANR	3640922	Symbol	module		3640776						
ANR	3640923	Symbol	sdb_get		3640776						
ANR	3640924	Symbol	r_str_newf		3640776						
ANR	3640925	Symbol	r_sys_prefix		3640776						
ANR	3640926	Symbol	sdb		3640776						
ANR	3640927	Symbol	path		3640776						
ANR	3640928	Symbol	sdb_new		3640776						
ANR	3640929	Symbol	R2_SDB_FORMAT		3640776						
ANR	3640930	Symbol	name		3640776						
ANR	3640931	Symbol	r_file_exists		3640776						
ANR	3640932	Symbol	ordinal		3640776						
ANR	3640933	Function	r_bin_ne_get_segments	69:0:1306:2048							
ANR	3640934	FunctionDef	r_bin_ne_get_segments (r_bin_ne_obj_t * bin)		3640933	0					
ANR	3640935	CompoundStatement		69:50:1356:2048	3640933	0					
ANR	3640936	IdentifierDeclStatement	int i ;	70:1:1359:1364	3640933	0	True				
ANR	3640937	IdentifierDecl	i		3640933	0					
ANR	3640938	IdentifierDeclType	int		3640933	0					
ANR	3640939	Identifier	i		3640933	1					
ANR	3640940	IfStatement	if ( ! bin )		3640933	1					
ANR	3640941	Condition	! bin	71:5:1371:1374	3640933	0	True				
ANR	3640942	UnaryOperationExpression	! bin		3640933	0					
ANR	3640943	UnaryOperator	!		3640933	0					
ANR	3640944	Identifier	bin		3640933	1					
ANR	3640945	CompoundStatement		3:11:20:20	3640933	1					
ANR	3640946	ReturnStatement	return NULL ;	72:2:1381:1392	3640933	0	True				
ANR	3640947	Identifier	NULL		3640933	0					
ANR	3640948	IdentifierDeclStatement	RList * segments = r_list_newf ( free ) ;	74:1:1398:1434	3640933	2	True				
ANR	3640949	IdentifierDecl	* segments = r_list_newf ( free )		3640933	0					
ANR	3640950	IdentifierDeclType	RList *		3640933	0					
ANR	3640951	Identifier	segments		3640933	1					
ANR	3640952	AssignmentExpression	* segments = r_list_newf ( free )		3640933	2		=			
ANR	3640953	Identifier	segments		3640933	0					
ANR	3640954	CallExpression	r_list_newf ( free )		3640933	1					
ANR	3640955	Callee	r_list_newf		3640933	0					
ANR	3640956	Identifier	r_list_newf		3640933	0					
ANR	3640957	ArgumentList	free		3640933	1					
ANR	3640958	Argument	free		3640933	0					
ANR	3640959	Identifier	free		3640933	0					
ANR	3640960	ForStatement	for ( i = 0 ; i < bin -> ne_header -> SegCount ; i ++ )		3640933	3					
ANR	3640961	ForInit	i = 0 ;	75:6:1442:1447	3640933	0	True				
ANR	3640962	AssignmentExpression	i = 0		3640933	0		=			
ANR	3640963	Identifier	i		3640933	0					
ANR	3640964	PrimaryExpression	0		3640933	1					
ANR	3640965	Condition	i < bin -> ne_header -> SegCount	75:13:1449:1476	3640933	1	True				
ANR	3640966	RelationalExpression	i < bin -> ne_header -> SegCount		3640933	0		<			
ANR	3640967	Identifier	i		3640933	0					
ANR	3640968	PtrMemberAccess	bin -> ne_header -> SegCount		3640933	1					
ANR	3640969	PtrMemberAccess	bin -> ne_header		3640933	0					
ANR	3640970	Identifier	bin		3640933	0					
ANR	3640971	Identifier	ne_header		3640933	1					
ANR	3640972	Identifier	SegCount		3640933	1					
ANR	3640973	PostIncDecOperationExpression	i ++	75:43:1479:1481	3640933	2	True				
ANR	3640974	Identifier	i		3640933	0					
ANR	3640975	IncDec	++		3640933	1					
ANR	3640976	CompoundStatement		9:2:173:226	3640933	3					
ANR	3640977	IdentifierDeclStatement	RBinSection * bs = R_NEW0 ( RBinSection ) ;	76:2:1488:1526	3640933	0	True				
ANR	3640978	IdentifierDecl	* bs = R_NEW0 ( RBinSection )		3640933	0					
ANR	3640979	IdentifierDeclType	RBinSection *		3640933	0					
ANR	3640980	Identifier	bs		3640933	1					
ANR	3640981	AssignmentExpression	* bs = R_NEW0 ( RBinSection )		3640933	2		=			
ANR	3640982	Identifier	bs		3640933	0					
ANR	3640983	CallExpression	R_NEW0 ( RBinSection )		3640933	1					
ANR	3640984	Callee	R_NEW0		3640933	0					
ANR	3640985	Identifier	R_NEW0		3640933	0					
ANR	3640986	ArgumentList	RBinSection		3640933	1					
ANR	3640987	Argument	RBinSection		3640933	0					
ANR	3640988	Identifier	RBinSection		3640933	0					
ANR	3640989	IdentifierDeclStatement	NE_image_segment_entry * se = & bin -> segment_entries [ i ] ;	77:2:1530:1583	3640933	1	True				
ANR	3640990	IdentifierDecl	* se = & bin -> segment_entries [ i ]		3640933	0					
ANR	3640991	IdentifierDeclType	NE_image_segment_entry *		3640933	0					
ANR	3640992	Identifier	se		3640933	1					
ANR	3640993	AssignmentExpression	* se = & bin -> segment_entries [ i ]		3640933	2		=			
ANR	3640994	Identifier	se		3640933	0					
ANR	3640995	UnaryOperationExpression	& bin -> segment_entries [ i ]		3640933	1					
ANR	3640996	UnaryOperator	&		3640933	0					
ANR	3640997	ArrayIndexing	bin -> segment_entries [ i ]		3640933	1					
ANR	3640998	PtrMemberAccess	bin -> segment_entries		3640933	0					
ANR	3640999	Identifier	bin		3640933	0					
ANR	3641000	Identifier	segment_entries		3640933	1					
ANR	3641001	Identifier	i		3640933	1					
ANR	3641002	IfStatement	if ( ! bs )		3640933	2					
ANR	3641003	Condition	! bs	78:6:1591:1593	3640933	0	True				
ANR	3641004	UnaryOperationExpression	! bs		3640933	0					
ANR	3641005	UnaryOperator	!		3640933	0					
ANR	3641006	Identifier	bs		3640933	1					
ANR	3641007	CompoundStatement		10:11:239:239	3640933	1					
ANR	3641008	ReturnStatement	return segments ;	79:3:1601:1616	3640933	0	True				
ANR	3641009	Identifier	segments		3640933	0					
ANR	3641010	ExpressionStatement	bs -> size = se -> length	81:2:1624:1645	3640933	3	True				
ANR	3641011	AssignmentExpression	bs -> size = se -> length		3640933	0		=			
ANR	3641012	PtrMemberAccess	bs -> size		3640933	0					
ANR	3641013	Identifier	bs		3640933	0					
ANR	3641014	Identifier	size		3640933	1					
ANR	3641015	PtrMemberAccess	se -> length		3640933	1					
ANR	3641016	Identifier	se		3640933	0					
ANR	3641017	Identifier	length		3640933	1					
ANR	3641018	ExpressionStatement	bs -> vsize = se -> minAllocSz ? se -> minAllocSz : 64000	82:2:1649:1700	3640933	4	True				
ANR	3641019	AssignmentExpression	bs -> vsize = se -> minAllocSz ? se -> minAllocSz : 64000		3640933	0		=			
ANR	3641020	PtrMemberAccess	bs -> vsize		3640933	0					
ANR	3641021	Identifier	bs		3640933	0					
ANR	3641022	Identifier	vsize		3640933	1					
ANR	3641023	ConditionalExpression	se -> minAllocSz ? se -> minAllocSz : 64000		3640933	1					
ANR	3641024	Condition	se -> minAllocSz		3640933	0					
ANR	3641025	PtrMemberAccess	se -> minAllocSz		3640933	0					
ANR	3641026	Identifier	se		3640933	0					
ANR	3641027	Identifier	minAllocSz		3640933	1					
ANR	3641028	PtrMemberAccess	se -> minAllocSz		3640933	1					
ANR	3641029	Identifier	se		3640933	0					
ANR	3641030	Identifier	minAllocSz		3640933	1					
ANR	3641031	PrimaryExpression	64000		3640933	2					
ANR	3641032	ExpressionStatement	bs -> bits = 16	83:2:1704:1717	3640933	5	True				
ANR	3641033	AssignmentExpression	bs -> bits = 16		3640933	0		=			
ANR	3641034	PtrMemberAccess	bs -> bits		3640933	0					
ANR	3641035	Identifier	bs		3640933	0					
ANR	3641036	Identifier	bits		3640933	1					
ANR	3641037	PrimaryExpression	16		3640933	1					
ANR	3641038	ExpressionStatement	bs -> is_data = se -> flags & IS_DATA	84:2:1721:1754	3640933	6	True				
ANR	3641039	AssignmentExpression	bs -> is_data = se -> flags & IS_DATA		3640933	0		=			
ANR	3641040	PtrMemberAccess	bs -> is_data		3640933	0					
ANR	3641041	Identifier	bs		3640933	0					
ANR	3641042	Identifier	is_data		3640933	1					
ANR	3641043	BitAndExpression	se -> flags & IS_DATA		3640933	1		&			
ANR	3641044	PtrMemberAccess	se -> flags		3640933	0					
ANR	3641045	Identifier	se		3640933	0					
ANR	3641046	Identifier	flags		3640933	1					
ANR	3641047	Identifier	IS_DATA		3640933	1					
ANR	3641048	ExpressionStatement	bs -> perm = __translate_perms ( se -> flags )	85:2:1758:1798	3640933	7	True				
ANR	3641049	AssignmentExpression	bs -> perm = __translate_perms ( se -> flags )		3640933	0		=			
ANR	3641050	PtrMemberAccess	bs -> perm		3640933	0					
ANR	3641051	Identifier	bs		3640933	0					
ANR	3641052	Identifier	perm		3640933	1					
ANR	3641053	CallExpression	__translate_perms ( se -> flags )		3640933	1					
ANR	3641054	Callee	__translate_perms		3640933	0					
ANR	3641055	Identifier	__translate_perms		3640933	0					
ANR	3641056	ArgumentList	se -> flags		3640933	1					
ANR	3641057	Argument	se -> flags		3640933	0					
ANR	3641058	PtrMemberAccess	se -> flags		3640933	0					
ANR	3641059	Identifier	se		3640933	0					
ANR	3641060	Identifier	flags		3640933	1					
ANR	3641061	ExpressionStatement	bs -> paddr = ( ut64 ) se -> offset * bin -> alignment	86:2:1802:1847	3640933	8	True				
ANR	3641062	AssignmentExpression	bs -> paddr = ( ut64 ) se -> offset * bin -> alignment		3640933	0		=			
ANR	3641063	PtrMemberAccess	bs -> paddr		3640933	0					
ANR	3641064	Identifier	bs		3640933	0					
ANR	3641065	Identifier	paddr		3640933	1					
ANR	3641066	MultiplicativeExpression	( ut64 ) se -> offset * bin -> alignment		3640933	1		*			
ANR	3641067	CastExpression	( ut64 ) se -> offset		3640933	0					
ANR	3641068	CastTarget	ut64		3640933	0					
ANR	3641069	PtrMemberAccess	se -> offset		3640933	1					
ANR	3641070	Identifier	se		3640933	0					
ANR	3641071	Identifier	offset		3640933	1					
ANR	3641072	PtrMemberAccess	bin -> alignment		3640933	1					
ANR	3641073	Identifier	bin		3640933	0					
ANR	3641074	Identifier	alignment		3640933	1					
ANR	3641075	ExpressionStatement	"bs -> name = r_str_newf ( ""%s.%d"" , se -> flags & IS_MOVEABLE ? ""MOVEABLE"" : ""FIXED"" , bs -> paddr )"	87:2:1851:1941	3640933	9	True				
ANR	3641076	AssignmentExpression	"bs -> name = r_str_newf ( ""%s.%d"" , se -> flags & IS_MOVEABLE ? ""MOVEABLE"" : ""FIXED"" , bs -> paddr )"		3640933	0		=			
ANR	3641077	PtrMemberAccess	bs -> name		3640933	0					
ANR	3641078	Identifier	bs		3640933	0					
ANR	3641079	Identifier	name		3640933	1					
ANR	3641080	CallExpression	"r_str_newf ( ""%s.%d"" , se -> flags & IS_MOVEABLE ? ""MOVEABLE"" : ""FIXED"" , bs -> paddr )"		3640933	1					
ANR	3641081	Callee	r_str_newf		3640933	0					
ANR	3641082	Identifier	r_str_newf		3640933	0					
ANR	3641083	ArgumentList	"""%s.%d"""		3640933	1					
ANR	3641084	Argument	"""%s.%d"""		3640933	0					
ANR	3641085	PrimaryExpression	"""%s.%d"""		3640933	0					
ANR	3641086	Argument	"se -> flags & IS_MOVEABLE ? ""MOVEABLE"" : ""FIXED"""		3640933	1					
ANR	3641087	ConditionalExpression	"se -> flags & IS_MOVEABLE ? ""MOVEABLE"" : ""FIXED"""		3640933	0					
ANR	3641088	Condition	se -> flags & IS_MOVEABLE		3640933	0					
ANR	3641089	BitAndExpression	se -> flags & IS_MOVEABLE		3640933	0		&			
ANR	3641090	PtrMemberAccess	se -> flags		3640933	0					
ANR	3641091	Identifier	se		3640933	0					
ANR	3641092	Identifier	flags		3640933	1					
ANR	3641093	Identifier	IS_MOVEABLE		3640933	1					
ANR	3641094	PrimaryExpression	"""MOVEABLE"""		3640933	1					
ANR	3641095	PrimaryExpression	"""FIXED"""		3640933	2					
ANR	3641096	Argument	bs -> paddr		3640933	2					
ANR	3641097	PtrMemberAccess	bs -> paddr		3640933	0					
ANR	3641098	Identifier	bs		3640933	0					
ANR	3641099	Identifier	paddr		3640933	1					
ANR	3641100	ExpressionStatement	bs -> is_segment = true	88:2:1945:1966	3640933	10	True				
ANR	3641101	AssignmentExpression	bs -> is_segment = true		3640933	0		=			
ANR	3641102	PtrMemberAccess	bs -> is_segment		3640933	0					
ANR	3641103	Identifier	bs		3640933	0					
ANR	3641104	Identifier	is_segment		3640933	1					
ANR	3641105	Identifier	true		3640933	1					
ANR	3641106	ExpressionStatement	"r_list_append ( segments , bs )"	89:2:1970:1998	3640933	11	True				
ANR	3641107	CallExpression	"r_list_append ( segments , bs )"		3640933	0					
ANR	3641108	Callee	r_list_append		3640933	0					
ANR	3641109	Identifier	r_list_append		3640933	0					
ANR	3641110	ArgumentList	segments		3640933	1					
ANR	3641111	Argument	segments		3640933	0					
ANR	3641112	Identifier	segments		3640933	0					
ANR	3641113	Argument	bs		3640933	1					
ANR	3641114	Identifier	bs		3640933	0					
ANR	3641115	ExpressionStatement	bin -> segments = segments	91:1:2004:2028	3640933	4	True				
ANR	3641116	AssignmentExpression	bin -> segments = segments		3640933	0		=			
ANR	3641117	PtrMemberAccess	bin -> segments		3640933	0					
ANR	3641118	Identifier	bin		3640933	0					
ANR	3641119	Identifier	segments		3640933	1					
ANR	3641120	Identifier	segments		3640933	1					
ANR	3641121	ReturnStatement	return segments ;	92:1:2031:2046	3640933	5	True				
ANR	3641122	Identifier	segments		3640933	0					
ANR	3641123	ReturnType	RList *		3640933	1					
ANR	3641124	Identifier	r_bin_ne_get_segments		3640933	2					
ANR	3641125	ParameterList	r_bin_ne_obj_t * bin		3640933	3					
ANR	3641126	Parameter	r_bin_ne_obj_t * bin	69:29:1335:1353	3640933	0	True				
ANR	3641127	ParameterType	r_bin_ne_obj_t *		3640933	0					
ANR	3641128	Identifier	bin		3640933	1					
ANR	3641129	CFGEntryNode	ENTRY		3640933		True				
ANR	3641130	CFGExitNode	EXIT		3640933		True				
ANR	3641131	Symbol	bin -> alignment		3640933						
ANR	3641132	Symbol	bs -> paddr		3640933						
ANR	3641133	Symbol	bin		3640933						
ANR	3641134	Symbol	bs -> vsize		3640933						
ANR	3641135	Symbol	bs -> is_segment		3640933						
ANR	3641136	Symbol	* bin -> ne_header		3640933						
ANR	3641137	Symbol	r_str_newf		3640933						
ANR	3641138	Symbol	bs -> perm		3640933						
ANR	3641139	Symbol	* bin		3640933						
ANR	3641140	Symbol	segments		3640933						
ANR	3641141	Symbol	bs		3640933						
ANR	3641142	Symbol	se -> offset		3640933						
ANR	3641143	Symbol	se		3640933						
ANR	3641144	Symbol	* bs		3640933						
ANR	3641145	Symbol	* * bin		3640933						
ANR	3641146	Symbol	* se		3640933						
ANR	3641147	Symbol	free		3640933						
ANR	3641148	Symbol	bs -> is_data		3640933						
ANR	3641149	Symbol	se -> flags		3640933						
ANR	3641150	Symbol	NULL		3640933						
ANR	3641151	Symbol	r_list_newf		3640933						
ANR	3641152	Symbol	bin -> segments		3640933						
ANR	3641153	Symbol	i		3640933						
ANR	3641154	Symbol	bin -> ne_header		3640933						
ANR	3641155	Symbol	bin -> ne_header -> SegCount		3640933						
ANR	3641156	Symbol	bs -> bits		3640933						
ANR	3641157	Symbol	R_NEW0		3640933						
ANR	3641158	Symbol	bs -> name		3640933						
ANR	3641159	Symbol	se -> minAllocSz		3640933						
ANR	3641160	Symbol	true		3640933						
ANR	3641161	Symbol	RBinSection		3640933						
ANR	3641162	Symbol	bin -> segment_entries		3640933						
ANR	3641163	Symbol	se -> length		3640933						
ANR	3641164	Symbol	IS_DATA		3640933						
ANR	3641165	Symbol	__translate_perms		3640933						
ANR	3641166	Symbol	IS_MOVEABLE		3640933						
ANR	3641167	Symbol	bs -> size		3640933						
ANR	3641168	Function	__find_symbol_by_paddr	95:0:2051:2186							
ANR	3641169	FunctionDef	"__find_symbol_by_paddr (const void * paddr , const void * sym)"		3641168	0					
ANR	3641170	CompoundStatement		95:71:2122:2186	3641168	0					
ANR	3641171	ReturnStatement	return ( int ) ! ( * ( ut64 * ) paddr == ( ( RBinSymbol * ) sym ) -> paddr ) ;	96:1:2125:2184	3641168	0	True				
ANR	3641172	CastExpression	( int ) ! ( * ( ut64 * ) paddr == ( ( RBinSymbol * ) sym ) -> paddr )		3641168	0					
ANR	3641173	CastTarget	int		3641168	0					
ANR	3641174	UnaryOperationExpression	! ( * ( ut64 * ) paddr == ( ( RBinSymbol * ) sym ) -> paddr )		3641168	1					
ANR	3641175	UnaryOperator	!		3641168	0					
ANR	3641176	EqualityExpression	* ( ut64 * ) paddr == ( ( RBinSymbol * ) sym ) -> paddr		3641168	1		==			
ANR	3641177	UnaryOperationExpression	* ( ut64 * ) paddr		3641168	0					
ANR	3641178	UnaryOperator	*		3641168	0					
ANR	3641179	CastExpression	( ut64 * ) paddr		3641168	1					
ANR	3641180	CastTarget	ut64 *		3641168	0					
ANR	3641181	Identifier	paddr		3641168	1					
ANR	3641182	PtrMemberAccess	( ( RBinSymbol * ) sym ) -> paddr		3641168	1					
ANR	3641183	CastExpression	( RBinSymbol * ) sym		3641168	0					
ANR	3641184	CastTarget	RBinSymbol *		3641168	0					
ANR	3641185	Identifier	sym		3641168	1					
ANR	3641186	Identifier	paddr		3641168	1					
ANR	3641187	ReturnType	static int		3641168	1					
ANR	3641188	Identifier	__find_symbol_by_paddr		3641168	2					
ANR	3641189	ParameterList	"const void * paddr , const void * sym"		3641168	3					
ANR	3641190	Parameter	const void * paddr	95:35:2086:2102	3641168	0	True				
ANR	3641191	ParameterType	const void *		3641168	0					
ANR	3641192	Identifier	paddr		3641168	1					
ANR	3641193	Parameter	const void * sym	95:54:2105:2119	3641168	1	True				
ANR	3641194	ParameterType	const void *		3641168	0					
ANR	3641195	Identifier	sym		3641168	1					
ANR	3641196	CFGEntryNode	ENTRY		3641168		True				
ANR	3641197	CFGExitNode	EXIT		3641168		True				
ANR	3641198	Symbol	( ( RBinSymbol * ) sym ) -> paddr		3641168						
ANR	3641199	Symbol	* sym		3641168						
ANR	3641200	Symbol	* ( ut64 * ) paddr		3641168						
ANR	3641201	Symbol	* paddr		3641168						
ANR	3641202	Symbol	paddr		3641168						
ANR	3641203	Symbol	sym		3641168						
ANR	3641204	Function	r_bin_ne_get_symbols	99:0:2189:3795							
ANR	3641205	FunctionDef	r_bin_ne_get_symbols (r_bin_ne_obj_t * bin)		3641204	0					
ANR	3641206	CompoundStatement		99:49:2238:3795	3641204	0					
ANR	3641207	IdentifierDeclStatement	RBinSymbol * sym ;	100:1:2241:2256	3641204	0	True				
ANR	3641208	IdentifierDecl	* sym		3641204	0					
ANR	3641209	IdentifierDeclType	RBinSymbol *		3641204	0					
ANR	3641210	Identifier	sym		3641204	1					
ANR	3641211	IdentifierDeclStatement	ut16 off = bin -> ne_header -> ResidNamTable + bin -> header_offset ;	101:1:2259:2320	3641204	1	True				
ANR	3641212	IdentifierDecl	off = bin -> ne_header -> ResidNamTable + bin -> header_offset		3641204	0					
ANR	3641213	IdentifierDeclType	ut16		3641204	0					
ANR	3641214	Identifier	off		3641204	1					
ANR	3641215	AssignmentExpression	off = bin -> ne_header -> ResidNamTable + bin -> header_offset		3641204	2		=			
ANR	3641216	Identifier	off		3641204	0					
ANR	3641217	AdditiveExpression	bin -> ne_header -> ResidNamTable + bin -> header_offset		3641204	1		+			
ANR	3641218	PtrMemberAccess	bin -> ne_header -> ResidNamTable		3641204	0					
ANR	3641219	PtrMemberAccess	bin -> ne_header		3641204	0					
ANR	3641220	Identifier	bin		3641204	0					
ANR	3641221	Identifier	ne_header		3641204	1					
ANR	3641222	Identifier	ResidNamTable		3641204	1					
ANR	3641223	PtrMemberAccess	bin -> header_offset		3641204	1					
ANR	3641224	Identifier	bin		3641204	0					
ANR	3641225	Identifier	header_offset		3641204	1					
ANR	3641226	IdentifierDeclStatement	RList * symbols = r_list_newf ( free ) ;	102:1:2323:2358	3641204	2	True				
ANR	3641227	IdentifierDecl	* symbols = r_list_newf ( free )		3641204	0					
ANR	3641228	IdentifierDeclType	RList *		3641204	0					
ANR	3641229	Identifier	symbols		3641204	1					
ANR	3641230	AssignmentExpression	* symbols = r_list_newf ( free )		3641204	2		=			
ANR	3641231	Identifier	symbols		3641204	0					
ANR	3641232	CallExpression	r_list_newf ( free )		3641204	1					
ANR	3641233	Callee	r_list_newf		3641204	0					
ANR	3641234	Identifier	r_list_newf		3641204	0					
ANR	3641235	ArgumentList	free		3641204	1					
ANR	3641236	Argument	free		3641204	0					
ANR	3641237	Identifier	free		3641204	0					
ANR	3641238	IfStatement	if ( ! symbols )		3641204	3					
ANR	3641239	Condition	! symbols	103:5:2365:2372	3641204	0	True				
ANR	3641240	UnaryOperationExpression	! symbols		3641204	0					
ANR	3641241	UnaryOperator	!		3641204	0					
ANR	3641242	Identifier	symbols		3641204	1					
ANR	3641243	CompoundStatement		5:15:136:136	3641204	1					
ANR	3641244	ReturnStatement	return NULL ;	104:2:2379:2390	3641204	0	True				
ANR	3641245	Identifier	NULL		3641204	0					
ANR	3641246	IdentifierDeclStatement	RList * entries = r_bin_ne_get_entrypoints ( bin ) ;	106:1:2396:2443	3641204	4	True				
ANR	3641247	IdentifierDecl	* entries = r_bin_ne_get_entrypoints ( bin )		3641204	0					
ANR	3641248	IdentifierDeclType	RList *		3641204	0					
ANR	3641249	Identifier	entries		3641204	1					
ANR	3641250	AssignmentExpression	* entries = r_bin_ne_get_entrypoints ( bin )		3641204	2		=			
ANR	3641251	Identifier	entries		3641204	0					
ANR	3641252	CallExpression	r_bin_ne_get_entrypoints ( bin )		3641204	1					
ANR	3641253	Callee	r_bin_ne_get_entrypoints		3641204	0					
ANR	3641254	Identifier	r_bin_ne_get_entrypoints		3641204	0					
ANR	3641255	ArgumentList	bin		3641204	1					
ANR	3641256	Argument	bin		3641204	0					
ANR	3641257	Identifier	bin		3641204	0					
ANR	3641258	IdentifierDeclStatement	"bool resident = true , first = true ;"	107:1:2446:2480	3641204	5	True				
ANR	3641259	IdentifierDecl	resident = true		3641204	0					
ANR	3641260	IdentifierDeclType	bool		3641204	0					
ANR	3641261	Identifier	resident		3641204	1					
ANR	3641262	AssignmentExpression	resident = true		3641204	2		=			
ANR	3641263	Identifier	true		3641204	0					
ANR	3641264	Identifier	true		3641204	1					
ANR	3641265	IdentifierDecl	first = true		3641204	1					
ANR	3641266	IdentifierDeclType	bool		3641204	0					
ANR	3641267	Identifier	first		3641204	1					
ANR	3641268	AssignmentExpression	first = true		3641204	2		=			
ANR	3641269	Identifier	true		3641204	0					
ANR	3641270	Identifier	true		3641204	1					
ANR	3641271	WhileStatement	while ( true )		3641204	6					
ANR	3641272	Condition	true	108:8:2490:2493	3641204	0	True				
ANR	3641273	Identifier	true		3641204	0					
ANR	3641274	CompoundStatement		43:2:900:951	3641204	1					
ANR	3641275	IdentifierDeclStatement	"ut8 sz = r_buf_read8_at ( bin -> buf , off ) ;"	109:2:2500:2539	3641204	0	True				
ANR	3641276	IdentifierDecl	"sz = r_buf_read8_at ( bin -> buf , off )"		3641204	0					
ANR	3641277	IdentifierDeclType	ut8		3641204	0					
ANR	3641278	Identifier	sz		3641204	1					
ANR	3641279	AssignmentExpression	"sz = r_buf_read8_at ( bin -> buf , off )"		3641204	2		=			
ANR	3641280	Identifier	sz		3641204	0					
ANR	3641281	CallExpression	"r_buf_read8_at ( bin -> buf , off )"		3641204	1					
ANR	3641282	Callee	r_buf_read8_at		3641204	0					
ANR	3641283	Identifier	r_buf_read8_at		3641204	0					
ANR	3641284	ArgumentList	bin -> buf		3641204	1					
ANR	3641285	Argument	bin -> buf		3641204	0					
ANR	3641286	PtrMemberAccess	bin -> buf		3641204	0					
ANR	3641287	Identifier	bin		3641204	0					
ANR	3641288	Identifier	buf		3641204	1					
ANR	3641289	Argument	off		3641204	1					
ANR	3641290	Identifier	off		3641204	0					
ANR	3641291	IfStatement	if ( ! sz )		3641204	1					
ANR	3641292	Condition	! sz	110:6:2547:2549	3641204	0	True				
ANR	3641293	UnaryOperationExpression	! sz		3641204	0					
ANR	3641294	UnaryOperator	!		3641204	0					
ANR	3641295	Identifier	sz		3641204	1					
ANR	3641296	CompoundStatement		12:11:313:313	3641204	1					
ANR	3641297	ExpressionStatement	first = true	111:3:2557:2569	3641204	0	True				
ANR	3641298	AssignmentExpression	first = true		3641204	0		=			
ANR	3641299	Identifier	first		3641204	0					
ANR	3641300	Identifier	true		3641204	1					
ANR	3641301	IfStatement	if ( resident )		3641204	1					
ANR	3641302	Condition	resident	112:7:2578:2585	3641204	0	True				
ANR	3641303	Identifier	resident		3641204	0					
ANR	3641304	CompoundStatement		14:17:349:349	3641204	1					
ANR	3641305	ExpressionStatement	resident = false	113:4:2594:2610	3641204	0	True				
ANR	3641306	AssignmentExpression	resident = false		3641204	0		=			
ANR	3641307	Identifier	resident		3641204	0					
ANR	3641308	Identifier	false		3641204	1					
ANR	3641309	ExpressionStatement	off = bin -> ne_header -> OffStartNonResTab	114:4:2616:2655	3641204	1	True				
ANR	3641310	AssignmentExpression	off = bin -> ne_header -> OffStartNonResTab		3641204	0		=			
ANR	3641311	Identifier	off		3641204	0					
ANR	3641312	PtrMemberAccess	bin -> ne_header -> OffStartNonResTab		3641204	1					
ANR	3641313	PtrMemberAccess	bin -> ne_header		3641204	0					
ANR	3641314	Identifier	bin		3641204	0					
ANR	3641315	Identifier	ne_header		3641204	1					
ANR	3641316	Identifier	OffStartNonResTab		3641204	1					
ANR	3641317	ExpressionStatement	"sz = r_buf_read8_at ( bin -> buf , off )"	115:4:2661:2696	3641204	2	True				
ANR	3641318	AssignmentExpression	"sz = r_buf_read8_at ( bin -> buf , off )"		3641204	0		=			
ANR	3641319	Identifier	sz		3641204	0					
ANR	3641320	CallExpression	"r_buf_read8_at ( bin -> buf , off )"		3641204	1					
ANR	3641321	Callee	r_buf_read8_at		3641204	0					
ANR	3641322	Identifier	r_buf_read8_at		3641204	0					
ANR	3641323	ArgumentList	bin -> buf		3641204	1					
ANR	3641324	Argument	bin -> buf		3641204	0					
ANR	3641325	PtrMemberAccess	bin -> buf		3641204	0					
ANR	3641326	Identifier	bin		3641204	0					
ANR	3641327	Identifier	buf		3641204	1					
ANR	3641328	Argument	off		3641204	1					
ANR	3641329	Identifier	off		3641204	0					
ANR	3641330	IfStatement	if ( ! sz )		3641204	3					
ANR	3641331	Condition	! sz	116:8:2706:2708	3641204	0	True				
ANR	3641332	UnaryOperationExpression	! sz		3641204	0					
ANR	3641333	UnaryOperator	!		3641204	0					
ANR	3641334	Identifier	sz		3641204	1					
ANR	3641335	CompoundStatement		18:13:472:472	3641204	1					
ANR	3641336	BreakStatement	break ;	117:5:2718:2723	3641204	0	True				
ANR	3641337	ElseStatement	else		3641204	0					
ANR	3641338	CompoundStatement		21:10:502:502	3641204	0					
ANR	3641339	BreakStatement	break ;	120:4:2747:2752	3641204	0	True				
ANR	3641340	IdentifierDeclStatement	char * name = malloc ( ( ut64 ) sz + 1 ) ;	123:2:2765:2799	3641204	2	True				
ANR	3641341	IdentifierDecl	* name = malloc ( ( ut64 ) sz + 1 )		3641204	0					
ANR	3641342	IdentifierDeclType	char *		3641204	0					
ANR	3641343	Identifier	name		3641204	1					
ANR	3641344	AssignmentExpression	* name = malloc ( ( ut64 ) sz + 1 )		3641204	2		=			
ANR	3641345	Identifier	name		3641204	0					
ANR	3641346	CallExpression	malloc ( ( ut64 ) sz + 1 )		3641204	1					
ANR	3641347	Callee	malloc		3641204	0					
ANR	3641348	Identifier	malloc		3641204	0					
ANR	3641349	ArgumentList	( ut64 ) sz + 1		3641204	1					
ANR	3641350	Argument	( ut64 ) sz + 1		3641204	0					
ANR	3641351	AdditiveExpression	( ut64 ) sz + 1		3641204	0		+			
ANR	3641352	CastExpression	( ut64 ) sz		3641204	0					
ANR	3641353	CastTarget	ut64		3641204	0					
ANR	3641354	Identifier	sz		3641204	1					
ANR	3641355	PrimaryExpression	1		3641204	1					
ANR	3641356	IfStatement	if ( ! name )		3641204	3					
ANR	3641357	Condition	! name	124:6:2807:2811	3641204	0	True				
ANR	3641358	UnaryOperationExpression	! name		3641204	0					
ANR	3641359	UnaryOperator	!		3641204	0					
ANR	3641360	Identifier	name		3641204	1					
ANR	3641361	CompoundStatement		26:13:575:575	3641204	1					
ANR	3641362	BreakStatement	break ;	125:3:2819:2824	3641204	0	True				
ANR	3641363	ExpressionStatement	off ++	127:2:2832:2837	3641204	4	True				
ANR	3641364	PostIncDecOperationExpression	off ++		3641204	0					
ANR	3641365	Identifier	off		3641204	0					
ANR	3641366	IncDec	++		3641204	1					
ANR	3641367	ExpressionStatement	"r_buf_read_at ( bin -> buf , off , ( ut8 * ) name , sz )"	128:2:2841:2887	3641204	5	True				
ANR	3641368	CallExpression	"r_buf_read_at ( bin -> buf , off , ( ut8 * ) name , sz )"		3641204	0					
ANR	3641369	Callee	r_buf_read_at		3641204	0					
ANR	3641370	Identifier	r_buf_read_at		3641204	0					
ANR	3641371	ArgumentList	bin -> buf		3641204	1					
ANR	3641372	Argument	bin -> buf		3641204	0					
ANR	3641373	PtrMemberAccess	bin -> buf		3641204	0					
ANR	3641374	Identifier	bin		3641204	0					
ANR	3641375	Identifier	buf		3641204	1					
ANR	3641376	Argument	off		3641204	1					
ANR	3641377	Identifier	off		3641204	0					
ANR	3641378	Argument	( ut8 * ) name		3641204	2					
ANR	3641379	CastExpression	( ut8 * ) name		3641204	0					
ANR	3641380	CastTarget	ut8 *		3641204	0					
ANR	3641381	Identifier	name		3641204	1					
ANR	3641382	Argument	sz		3641204	3					
ANR	3641383	Identifier	sz		3641204	0					
ANR	3641384	ExpressionStatement	name [ sz ] = '\\0'	129:2:2891:2906	3641204	6	True				
ANR	3641385	AssignmentExpression	name [ sz ] = '\\0'		3641204	0		=			
ANR	3641386	ArrayIndexing	name [ sz ]		3641204	0					
ANR	3641387	Identifier	name		3641204	0					
ANR	3641388	Identifier	sz		3641204	1					
ANR	3641389	PrimaryExpression	'\\0'		3641204	1					
ANR	3641390	ExpressionStatement	off += sz	130:2:2910:2919	3641204	7	True				
ANR	3641391	AssignmentExpression	off += sz		3641204	0		+=			
ANR	3641392	Identifier	off		3641204	0					
ANR	3641393	Identifier	sz		3641204	1					
ANR	3641394	ExpressionStatement	sym = R_NEW0 ( RBinSymbol )	131:2:2923:2948	3641204	8	True				
ANR	3641395	AssignmentExpression	sym = R_NEW0 ( RBinSymbol )		3641204	0		=			
ANR	3641396	Identifier	sym		3641204	0					
ANR	3641397	CallExpression	R_NEW0 ( RBinSymbol )		3641204	1					
ANR	3641398	Callee	R_NEW0		3641204	0					
ANR	3641399	Identifier	R_NEW0		3641204	0					
ANR	3641400	ArgumentList	RBinSymbol		3641204	1					
ANR	3641401	Argument	RBinSymbol		3641204	0					
ANR	3641402	Identifier	RBinSymbol		3641204	0					
ANR	3641403	IfStatement	if ( ! sym )		3641204	9					
ANR	3641404	Condition	! sym	132:6:2956:2959	3641204	0	True				
ANR	3641405	UnaryOperationExpression	! sym		3641204	0					
ANR	3641406	UnaryOperator	!		3641204	0					
ANR	3641407	Identifier	sym		3641204	1					
ANR	3641408	CompoundStatement		34:12:723:723	3641204	1					
ANR	3641409	BreakStatement	break ;	133:3:2967:2972	3641204	0	True				
ANR	3641410	ExpressionStatement	sym -> name = name	135:2:2980:2996	3641204	10	True				
ANR	3641411	AssignmentExpression	sym -> name = name		3641204	0		=			
ANR	3641412	PtrMemberAccess	sym -> name		3641204	0					
ANR	3641413	Identifier	sym		3641204	0					
ANR	3641414	Identifier	name		3641204	1					
ANR	3641415	Identifier	name		3641204	1					
ANR	3641416	IfStatement	if ( ! first )		3641204	11					
ANR	3641417	Condition	! first	136:6:3004:3009	3641204	0	True				
ANR	3641418	UnaryOperationExpression	! first		3641204	0					
ANR	3641419	UnaryOperator	!		3641204	0					
ANR	3641420	Identifier	first		3641204	1					
ANR	3641421	CompoundStatement		38:14:773:773	3641204	1					
ANR	3641422	ExpressionStatement	sym -> bind = r_str_const ( R_BIN_BIND_GLOBAL_STR )	137:3:3017:3064	3641204	0	True				
ANR	3641423	AssignmentExpression	sym -> bind = r_str_const ( R_BIN_BIND_GLOBAL_STR )		3641204	0		=			
ANR	3641424	PtrMemberAccess	sym -> bind		3641204	0					
ANR	3641425	Identifier	sym		3641204	0					
ANR	3641426	Identifier	bind		3641204	1					
ANR	3641427	CallExpression	r_str_const ( R_BIN_BIND_GLOBAL_STR )		3641204	1					
ANR	3641428	Callee	r_str_const		3641204	0					
ANR	3641429	Identifier	r_str_const		3641204	0					
ANR	3641430	ArgumentList	R_BIN_BIND_GLOBAL_STR		3641204	1					
ANR	3641431	Argument	R_BIN_BIND_GLOBAL_STR		3641204	0					
ANR	3641432	Identifier	R_BIN_BIND_GLOBAL_STR		3641204	0					
ANR	3641433	IdentifierDeclStatement	"ut16 entry_off = r_buf_read_le16_at ( bin -> buf , off ) ;"	139:2:3072:3123	3641204	12	True				
ANR	3641434	IdentifierDecl	"entry_off = r_buf_read_le16_at ( bin -> buf , off )"		3641204	0					
ANR	3641435	IdentifierDeclType	ut16		3641204	0					
ANR	3641436	Identifier	entry_off		3641204	1					
ANR	3641437	AssignmentExpression	"entry_off = r_buf_read_le16_at ( bin -> buf , off )"		3641204	2		=			
ANR	3641438	Identifier	entry_off		3641204	0					
ANR	3641439	CallExpression	"r_buf_read_le16_at ( bin -> buf , off )"		3641204	1					
ANR	3641440	Callee	r_buf_read_le16_at		3641204	0					
ANR	3641441	Identifier	r_buf_read_le16_at		3641204	0					
ANR	3641442	ArgumentList	bin -> buf		3641204	1					
ANR	3641443	Argument	bin -> buf		3641204	0					
ANR	3641444	PtrMemberAccess	bin -> buf		3641204	0					
ANR	3641445	Identifier	bin		3641204	0					
ANR	3641446	Identifier	buf		3641204	1					
ANR	3641447	Argument	off		3641204	1					
ANR	3641448	Identifier	off		3641204	0					
ANR	3641449	ExpressionStatement	off += 2	140:2:3127:3135	3641204	13	True				
ANR	3641450	AssignmentExpression	off += 2		3641204	0		+=			
ANR	3641451	Identifier	off		3641204	0					
ANR	3641452	PrimaryExpression	2		3641204	1					
ANR	3641453	IdentifierDeclStatement	"RBinAddr * entry = r_list_get_n ( entries , entry_off ) ;"	141:2:3139:3190	3641204	14	True				
ANR	3641454	IdentifierDecl	"* entry = r_list_get_n ( entries , entry_off )"		3641204	0					
ANR	3641455	IdentifierDeclType	RBinAddr *		3641204	0					
ANR	3641456	Identifier	entry		3641204	1					
ANR	3641457	AssignmentExpression	"* entry = r_list_get_n ( entries , entry_off )"		3641204	2		=			
ANR	3641458	Identifier	entry		3641204	0					
ANR	3641459	CallExpression	"r_list_get_n ( entries , entry_off )"		3641204	1					
ANR	3641460	Callee	r_list_get_n		3641204	0					
ANR	3641461	Identifier	r_list_get_n		3641204	0					
ANR	3641462	ArgumentList	entries		3641204	1					
ANR	3641463	Argument	entries		3641204	0					
ANR	3641464	Identifier	entries		3641204	0					
ANR	3641465	Argument	entry_off		3641204	1					
ANR	3641466	Identifier	entry_off		3641204	0					
ANR	3641467	IfStatement	if ( entry )		3641204	15					
ANR	3641468	Condition	entry	142:6:3198:3202	3641204	0	True				
ANR	3641469	Identifier	entry		3641204	0					
ANR	3641470	CompoundStatement		44:13:966:966	3641204	1					
ANR	3641471	ExpressionStatement	sym -> paddr = entry -> paddr	143:3:3210:3235	3641204	0	True				
ANR	3641472	AssignmentExpression	sym -> paddr = entry -> paddr		3641204	0		=			
ANR	3641473	PtrMemberAccess	sym -> paddr		3641204	0					
ANR	3641474	Identifier	sym		3641204	0					
ANR	3641475	Identifier	paddr		3641204	1					
ANR	3641476	PtrMemberAccess	entry -> paddr		3641204	1					
ANR	3641477	Identifier	entry		3641204	0					
ANR	3641478	Identifier	paddr		3641204	1					
ANR	3641479	ElseStatement	else		3641204	0					
ANR	3641480	CompoundStatement		46:9:1007:1007	3641204	0					
ANR	3641481	ExpressionStatement	sym -> paddr = - 1	145:3:3251:3266	3641204	0	True				
ANR	3641482	AssignmentExpression	sym -> paddr = - 1		3641204	0		=			
ANR	3641483	PtrMemberAccess	sym -> paddr		3641204	0					
ANR	3641484	Identifier	sym		3641204	0					
ANR	3641485	Identifier	paddr		3641204	1					
ANR	3641486	UnaryOperationExpression	- 1		3641204	1					
ANR	3641487	UnaryOperator	-		3641204	0					
ANR	3641488	PrimaryExpression	1		3641204	1					
ANR	3641489	ExpressionStatement	sym -> ordinal = entry_off	147:2:3274:3298	3641204	16	True				
ANR	3641490	AssignmentExpression	sym -> ordinal = entry_off		3641204	0		=			
ANR	3641491	PtrMemberAccess	sym -> ordinal		3641204	0					
ANR	3641492	Identifier	sym		3641204	0					
ANR	3641493	Identifier	ordinal		3641204	1					
ANR	3641494	Identifier	entry_off		3641204	1					
ANR	3641495	ExpressionStatement	"r_list_append ( symbols , sym )"	148:2:3302:3330	3641204	17	True				
ANR	3641496	CallExpression	"r_list_append ( symbols , sym )"		3641204	0					
ANR	3641497	Callee	r_list_append		3641204	0					
ANR	3641498	Identifier	r_list_append		3641204	0					
ANR	3641499	ArgumentList	symbols		3641204	1					
ANR	3641500	Argument	symbols		3641204	0					
ANR	3641501	Identifier	symbols		3641204	0					
ANR	3641502	Argument	sym		3641204	1					
ANR	3641503	Identifier	sym		3641204	0					
ANR	3641504	ExpressionStatement	first = false	149:2:3334:3347	3641204	18	True				
ANR	3641505	AssignmentExpression	first = false		3641204	0		=			
ANR	3641506	Identifier	first		3641204	0					
ANR	3641507	Identifier	false		3641204	1					
ANR	3641508	IdentifierDeclStatement	RListIter * it ;	151:1:3353:3366	3641204	7	True				
ANR	3641509	IdentifierDecl	* it		3641204	0					
ANR	3641510	IdentifierDeclType	RListIter *		3641204	0					
ANR	3641511	Identifier	it		3641204	1					
ANR	3641512	IdentifierDeclStatement	RBinAddr * en ;	152:1:3369:3381	3641204	8	True				
ANR	3641513	IdentifierDecl	* en		3641204	0					
ANR	3641514	IdentifierDeclType	RBinAddr *		3641204	0					
ANR	3641515	Identifier	en		3641204	1					
ANR	3641516	IdentifierDeclStatement	int i = 1 ;	153:1:3384:3393	3641204	9	True				
ANR	3641517	IdentifierDecl	i = 1		3641204	0					
ANR	3641518	IdentifierDeclType	int		3641204	0					
ANR	3641519	Identifier	i		3641204	1					
ANR	3641520	AssignmentExpression	i = 1		3641204	2		=			
ANR	3641521	Identifier	i		3641204	0					
ANR	3641522	PrimaryExpression	1		3641204	1					
ANR	3641523	Statement	r_list_foreach	154:1:3396:3409	3641204	10	True				
ANR	3641524	Statement	(	154:16:3411:3411	3641204	11	True				
ANR	3641525	Statement	entries	154:17:3412:3418	3641204	12	True				
ANR	3641526	Statement	","	154:24:3419:3419	3641204	13	True				
ANR	3641527	Statement	it	154:26:3421:3422	3641204	14	True				
ANR	3641528	Statement	","	154:28:3423:3423	3641204	15	True				
ANR	3641529	Statement	en	154:30:3425:3426	3641204	16	True				
ANR	3641530	Statement	)	154:32:3427:3427	3641204	17	True				
ANR	3641531	CompoundStatement		56:34:1190:1190	3641204	18					
ANR	3641532	IfStatement	"if ( ! r_list_find ( symbols , & en -> paddr , __find_symbol_by_paddr ) )"		3641204	0					
ANR	3641533	Condition	"! r_list_find ( symbols , & en -> paddr , __find_symbol_by_paddr )"	155:6:3437:3494	3641204	0	True				
ANR	3641534	UnaryOperationExpression	"! r_list_find ( symbols , & en -> paddr , __find_symbol_by_paddr )"		3641204	0					
ANR	3641535	UnaryOperator	!		3641204	0					
ANR	3641536	CallExpression	"r_list_find ( symbols , & en -> paddr , __find_symbol_by_paddr )"		3641204	1					
ANR	3641537	Callee	r_list_find		3641204	0					
ANR	3641538	Identifier	r_list_find		3641204	0					
ANR	3641539	ArgumentList	symbols		3641204	1					
ANR	3641540	Argument	symbols		3641204	0					
ANR	3641541	Identifier	symbols		3641204	0					
ANR	3641542	Argument	& en -> paddr		3641204	1					
ANR	3641543	UnaryOperationExpression	& en -> paddr		3641204	0					
ANR	3641544	UnaryOperator	&		3641204	0					
ANR	3641545	PtrMemberAccess	en -> paddr		3641204	1					
ANR	3641546	Identifier	en		3641204	0					
ANR	3641547	Identifier	paddr		3641204	1					
ANR	3641548	Argument	__find_symbol_by_paddr		3641204	2					
ANR	3641549	Identifier	__find_symbol_by_paddr		3641204	0					
ANR	3641550	CompoundStatement		57:66:1258:1258	3641204	1					
ANR	3641551	ExpressionStatement	sym = R_NEW0 ( RBinSymbol )	156:3:3502:3527	3641204	0	True				
ANR	3641552	AssignmentExpression	sym = R_NEW0 ( RBinSymbol )		3641204	0		=			
ANR	3641553	Identifier	sym		3641204	0					
ANR	3641554	CallExpression	R_NEW0 ( RBinSymbol )		3641204	1					
ANR	3641555	Callee	R_NEW0		3641204	0					
ANR	3641556	Identifier	R_NEW0		3641204	0					
ANR	3641557	ArgumentList	RBinSymbol		3641204	1					
ANR	3641558	Argument	RBinSymbol		3641204	0					
ANR	3641559	Identifier	RBinSymbol		3641204	0					
ANR	3641560	IfStatement	if ( ! sym )		3641204	1					
ANR	3641561	Condition	! sym	157:7:3536:3539	3641204	0	True				
ANR	3641562	UnaryOperationExpression	! sym		3641204	0					
ANR	3641563	UnaryOperator	!		3641204	0					
ANR	3641564	Identifier	sym		3641204	1					
ANR	3641565	CompoundStatement		59:13:1303:1303	3641204	1					
ANR	3641566	BreakStatement	break ;	158:4:3548:3553	3641204	0	True				
ANR	3641567	ExpressionStatement	"sym -> name = r_str_newf ( ""entry%d"" , i - 1 )"	160:3:3563:3604	3641204	2	True				
ANR	3641568	AssignmentExpression	"sym -> name = r_str_newf ( ""entry%d"" , i - 1 )"		3641204	0		=			
ANR	3641569	PtrMemberAccess	sym -> name		3641204	0					
ANR	3641570	Identifier	sym		3641204	0					
ANR	3641571	Identifier	name		3641204	1					
ANR	3641572	CallExpression	"r_str_newf ( ""entry%d"" , i - 1 )"		3641204	1					
ANR	3641573	Callee	r_str_newf		3641204	0					
ANR	3641574	Identifier	r_str_newf		3641204	0					
ANR	3641575	ArgumentList	"""entry%d"""		3641204	1					
ANR	3641576	Argument	"""entry%d"""		3641204	0					
ANR	3641577	PrimaryExpression	"""entry%d"""		3641204	0					
ANR	3641578	Argument	i - 1		3641204	1					
ANR	3641579	AdditiveExpression	i - 1		3641204	0		-			
ANR	3641580	Identifier	i		3641204	0					
ANR	3641581	PrimaryExpression	1		3641204	1					
ANR	3641582	ExpressionStatement	sym -> paddr = en -> paddr	161:3:3609:3631	3641204	3	True				
ANR	3641583	AssignmentExpression	sym -> paddr = en -> paddr		3641204	0		=			
ANR	3641584	PtrMemberAccess	sym -> paddr		3641204	0					
ANR	3641585	Identifier	sym		3641204	0					
ANR	3641586	Identifier	paddr		3641204	1					
ANR	3641587	PtrMemberAccess	en -> paddr		3641204	1					
ANR	3641588	Identifier	en		3641204	0					
ANR	3641589	Identifier	paddr		3641204	1					
ANR	3641590	ExpressionStatement	sym -> bind = r_str_const ( R_BIN_BIND_GLOBAL_STR )	162:3:3636:3683	3641204	4	True				
ANR	3641591	AssignmentExpression	sym -> bind = r_str_const ( R_BIN_BIND_GLOBAL_STR )		3641204	0		=			
ANR	3641592	PtrMemberAccess	sym -> bind		3641204	0					
ANR	3641593	Identifier	sym		3641204	0					
ANR	3641594	Identifier	bind		3641204	1					
ANR	3641595	CallExpression	r_str_const ( R_BIN_BIND_GLOBAL_STR )		3641204	1					
ANR	3641596	Callee	r_str_const		3641204	0					
ANR	3641597	Identifier	r_str_const		3641204	0					
ANR	3641598	ArgumentList	R_BIN_BIND_GLOBAL_STR		3641204	1					
ANR	3641599	Argument	R_BIN_BIND_GLOBAL_STR		3641204	0					
ANR	3641600	Identifier	R_BIN_BIND_GLOBAL_STR		3641204	0					
ANR	3641601	ExpressionStatement	sym -> ordinal = i	163:3:3688:3704	3641204	5	True				
ANR	3641602	AssignmentExpression	sym -> ordinal = i		3641204	0		=			
ANR	3641603	PtrMemberAccess	sym -> ordinal		3641204	0					
ANR	3641604	Identifier	sym		3641204	0					
ANR	3641605	Identifier	ordinal		3641204	1					
ANR	3641606	Identifier	i		3641204	1					
ANR	3641607	ExpressionStatement	"r_list_append ( symbols , sym )"	164:3:3709:3737	3641204	6	True				
ANR	3641608	CallExpression	"r_list_append ( symbols , sym )"		3641204	0					
ANR	3641609	Callee	r_list_append		3641204	0					
ANR	3641610	Identifier	r_list_append		3641204	0					
ANR	3641611	ArgumentList	symbols		3641204	1					
ANR	3641612	Argument	symbols		3641204	0					
ANR	3641613	Identifier	symbols		3641204	0					
ANR	3641614	Argument	sym		3641204	1					
ANR	3641615	Identifier	sym		3641204	0					
ANR	3641616	ExpressionStatement	i ++	166:2:3745:3748	3641204	1	True				
ANR	3641617	PostIncDecOperationExpression	i ++		3641204	0					
ANR	3641618	Identifier	i		3641204	0					
ANR	3641619	IncDec	++		3641204	1					
ANR	3641620	ExpressionStatement	bin -> symbols = symbols	168:1:3754:3776	3641204	19	True				
ANR	3641621	AssignmentExpression	bin -> symbols = symbols		3641204	0		=			
ANR	3641622	PtrMemberAccess	bin -> symbols		3641204	0					
ANR	3641623	Identifier	bin		3641204	0					
ANR	3641624	Identifier	symbols		3641204	1					
ANR	3641625	Identifier	symbols		3641204	1					
ANR	3641626	ReturnStatement	return symbols ;	169:1:3779:3793	3641204	20	True				
ANR	3641627	Identifier	symbols		3641204	0					
ANR	3641628	ReturnType	RList *		3641204	1					
ANR	3641629	Identifier	r_bin_ne_get_symbols		3641204	2					
ANR	3641630	ParameterList	r_bin_ne_obj_t * bin		3641204	3					
ANR	3641631	Parameter	r_bin_ne_obj_t * bin	99:28:2217:2235	3641204	0	True				
ANR	3641632	ParameterType	r_bin_ne_obj_t *		3641204	0					
ANR	3641633	Identifier	bin		3641204	1					
ANR	3641634	CFGEntryNode	ENTRY		3641204		True				
ANR	3641635	CFGExitNode	EXIT		3641204		True				
ANR	3641636	CFGErrorNode	ERROR		3641204		True				
ANR	3641637	Symbol	sym -> bind		3641204						
ANR	3641638	Symbol	sym -> ordinal		3641204						
ANR	3641639	Symbol	bin		3641204						
ANR	3641640	Symbol	& en -> paddr		3641204						
ANR	3641641	Symbol	r_bin_ne_get_entrypoints		3641204						
ANR	3641642	Symbol	* sz		3641204						
ANR	3641643	Symbol	entry -> paddr		3641204						
ANR	3641644	Symbol	bin -> ne_header -> ResidNamTable		3641204						
ANR	3641645	Symbol	bin -> header_offset		3641204						
ANR	3641646	Symbol	resident		3641204						
ANR	3641647	Symbol	NULL		3641204						
ANR	3641648	Symbol	r_list_newf		3641204						
ANR	3641649	Symbol	r_list_get_n		3641204						
ANR	3641650	Symbol	en		3641204						
ANR	3641651	Symbol	it		3641204						
ANR	3641652	Symbol	R_NEW0		3641204						
ANR	3641653	Symbol	* sym		3641204						
ANR	3641654	Symbol	entry		3641204						
ANR	3641655	Symbol	r_list_find		3641204						
ANR	3641656	Symbol	entries		3641204						
ANR	3641657	Symbol	bin -> ne_header -> OffStartNonResTab		3641204						
ANR	3641658	Symbol	sym -> name		3641204						
ANR	3641659	Symbol	true		3641204						
ANR	3641660	Symbol	name		3641204						
ANR	3641661	Symbol	__find_symbol_by_paddr		3641204						
ANR	3641662	Symbol	RBinSymbol		3641204						
ANR	3641663	Symbol	sym		3641204						
ANR	3641664	Symbol	bin -> buf		3641204						
ANR	3641665	Symbol	* bin -> ne_header		3641204						
ANR	3641666	Symbol	r_str_newf		3641204						
ANR	3641667	Symbol	* en		3641204						
ANR	3641668	Symbol	* bin		3641204						
ANR	3641669	Symbol	symbols		3641204						
ANR	3641670	Symbol	entry_off		3641204						
ANR	3641671	Symbol	* * bin		3641204						
ANR	3641672	Symbol	free		3641204						
ANR	3641673	Symbol	r_buf_read_le16_at		3641204						
ANR	3641674	Symbol	* entry		3641204						
ANR	3641675	Symbol	* name		3641204						
ANR	3641676	Symbol	r_str_const		3641204						
ANR	3641677	Symbol	malloc		3641204						
ANR	3641678	Symbol	bin -> symbols		3641204						
ANR	3641679	Symbol	r_buf_read8_at		3641204						
ANR	3641680	Symbol	sz		3641204						
ANR	3641681	Symbol	false		3641204						
ANR	3641682	Symbol	sym -> paddr		3641204						
ANR	3641683	Symbol	en -> paddr		3641204						
ANR	3641684	Symbol	i		3641204						
ANR	3641685	Symbol	off		3641204						
ANR	3641686	Symbol	bin -> ne_header		3641204						
ANR	3641687	Symbol	R_BIN_BIND_GLOBAL_STR		3641204						
ANR	3641688	Symbol	first		3641204						
ANR	3641689	Function	__resource_type_str	172:0:3798:4904							
ANR	3641690	FunctionDef	__resource_type_str (int type)		3641689	0					
ANR	3641691	CompoundStatement		172:43:3841:4904	3641689	0					
ANR	3641692	IdentifierDeclStatement	char * typeName ;	173:1:3844:3858	3641689	0	True				
ANR	3641693	IdentifierDecl	* typeName		3641689	0					
ANR	3641694	IdentifierDeclType	char *		3641689	0					
ANR	3641695	Identifier	typeName		3641689	1					
ANR	3641696	SwitchStatement	switch ( type )		3641689	1					
ANR	3641697	Condition	type	174:9:3869:3872	3641689	0	True				
ANR	3641698	Identifier	type		3641689	0					
ANR	3641699	CompoundStatement		3:15:33:33	3641689	1					
ANR	3641700	Label	case 1 :	175:1:3878:3884	3641689	0	True				
ANR	3641701	ExpressionStatement	"typeName = ""CURSOR"""	176:2:3888:3907	3641689	1	True				
ANR	3641702	AssignmentExpression	"typeName = ""CURSOR"""		3641689	0		=			
ANR	3641703	Identifier	typeName		3641689	0					
ANR	3641704	PrimaryExpression	"""CURSOR"""		3641689	1					
ANR	3641705	BreakStatement	break ;	177:2:3911:3916	3641689	2	True				
ANR	3641706	Label	case 2 :	178:1:3919:3925	3641689	3	True				
ANR	3641707	ExpressionStatement	"typeName = ""BITMAP"""	179:2:3929:3948	3641689	4	True				
ANR	3641708	AssignmentExpression	"typeName = ""BITMAP"""		3641689	0		=			
ANR	3641709	Identifier	typeName		3641689	0					
ANR	3641710	PrimaryExpression	"""BITMAP"""		3641689	1					
ANR	3641711	BreakStatement	break ;	180:2:3952:3957	3641689	5	True				
ANR	3641712	Label	case 3 :	181:1:3960:3966	3641689	6	True				
ANR	3641713	ExpressionStatement	"typeName = ""ICON"""	182:2:3970:3987	3641689	7	True				
ANR	3641714	AssignmentExpression	"typeName = ""ICON"""		3641689	0		=			
ANR	3641715	Identifier	typeName		3641689	0					
ANR	3641716	PrimaryExpression	"""ICON"""		3641689	1					
ANR	3641717	BreakStatement	break ;	183:2:3991:3996	3641689	8	True				
ANR	3641718	Label	case 4 :	184:1:3999:4005	3641689	9	True				
ANR	3641719	ExpressionStatement	"typeName = ""MENU"""	185:2:4009:4026	3641689	10	True				
ANR	3641720	AssignmentExpression	"typeName = ""MENU"""		3641689	0		=			
ANR	3641721	Identifier	typeName		3641689	0					
ANR	3641722	PrimaryExpression	"""MENU"""		3641689	1					
ANR	3641723	BreakStatement	break ;	186:2:4030:4035	3641689	11	True				
ANR	3641724	Label	case 5 :	187:1:4038:4044	3641689	12	True				
ANR	3641725	ExpressionStatement	"typeName = ""DIALOG"""	188:2:4048:4067	3641689	13	True				
ANR	3641726	AssignmentExpression	"typeName = ""DIALOG"""		3641689	0		=			
ANR	3641727	Identifier	typeName		3641689	0					
ANR	3641728	PrimaryExpression	"""DIALOG"""		3641689	1					
ANR	3641729	BreakStatement	break ;	189:2:4071:4076	3641689	14	True				
ANR	3641730	Label	case 6 :	190:1:4079:4085	3641689	15	True				
ANR	3641731	ExpressionStatement	"typeName = ""STRING"""	191:2:4089:4108	3641689	16	True				
ANR	3641732	AssignmentExpression	"typeName = ""STRING"""		3641689	0		=			
ANR	3641733	Identifier	typeName		3641689	0					
ANR	3641734	PrimaryExpression	"""STRING"""		3641689	1					
ANR	3641735	BreakStatement	break ;	192:2:4112:4117	3641689	17	True				
ANR	3641736	Label	case 7 :	193:1:4120:4126	3641689	18	True				
ANR	3641737	ExpressionStatement	"typeName = ""FONTDIR"""	194:2:4130:4150	3641689	19	True				
ANR	3641738	AssignmentExpression	"typeName = ""FONTDIR"""		3641689	0		=			
ANR	3641739	Identifier	typeName		3641689	0					
ANR	3641740	PrimaryExpression	"""FONTDIR"""		3641689	1					
ANR	3641741	BreakStatement	break ;	195:2:4154:4159	3641689	20	True				
ANR	3641742	Label	case 8 :	196:1:4162:4168	3641689	21	True				
ANR	3641743	ExpressionStatement	"typeName = ""FONT"""	197:2:4172:4189	3641689	22	True				
ANR	3641744	AssignmentExpression	"typeName = ""FONT"""		3641689	0		=			
ANR	3641745	Identifier	typeName		3641689	0					
ANR	3641746	PrimaryExpression	"""FONT"""		3641689	1					
ANR	3641747	BreakStatement	break ;	198:2:4193:4198	3641689	23	True				
ANR	3641748	Label	case 9 :	199:1:4201:4207	3641689	24	True				
ANR	3641749	ExpressionStatement	"typeName = ""ACCELERATOR"""	200:2:4211:4235	3641689	25	True				
ANR	3641750	AssignmentExpression	"typeName = ""ACCELERATOR"""		3641689	0		=			
ANR	3641751	Identifier	typeName		3641689	0					
ANR	3641752	PrimaryExpression	"""ACCELERATOR"""		3641689	1					
ANR	3641753	BreakStatement	break ;	201:2:4239:4244	3641689	26	True				
ANR	3641754	Label	case 10 :	202:1:4247:4254	3641689	27	True				
ANR	3641755	ExpressionStatement	"typeName = ""RCDATA"""	203:2:4258:4277	3641689	28	True				
ANR	3641756	AssignmentExpression	"typeName = ""RCDATA"""		3641689	0		=			
ANR	3641757	Identifier	typeName		3641689	0					
ANR	3641758	PrimaryExpression	"""RCDATA"""		3641689	1					
ANR	3641759	BreakStatement	break ;	204:2:4281:4286	3641689	29	True				
ANR	3641760	Label	case 11 :	205:1:4289:4296	3641689	30	True				
ANR	3641761	ExpressionStatement	"typeName = ""MESSAGETABLE"""	206:2:4300:4325	3641689	31	True				
ANR	3641762	AssignmentExpression	"typeName = ""MESSAGETABLE"""		3641689	0		=			
ANR	3641763	Identifier	typeName		3641689	0					
ANR	3641764	PrimaryExpression	"""MESSAGETABLE"""		3641689	1					
ANR	3641765	BreakStatement	break ;	207:2:4329:4334	3641689	32	True				
ANR	3641766	Label	case 12 :	208:1:4337:4344	3641689	33	True				
ANR	3641767	ExpressionStatement	"typeName = ""GROUP_CURSOR"""	209:2:4348:4373	3641689	34	True				
ANR	3641768	AssignmentExpression	"typeName = ""GROUP_CURSOR"""		3641689	0		=			
ANR	3641769	Identifier	typeName		3641689	0					
ANR	3641770	PrimaryExpression	"""GROUP_CURSOR"""		3641689	1					
ANR	3641771	BreakStatement	break ;	210:2:4377:4382	3641689	35	True				
ANR	3641772	Label	case 14 :	211:1:4385:4392	3641689	36	True				
ANR	3641773	ExpressionStatement	"typeName = ""GROUP_ICON"""	212:2:4396:4419	3641689	37	True				
ANR	3641774	AssignmentExpression	"typeName = ""GROUP_ICON"""		3641689	0		=			
ANR	3641775	Identifier	typeName		3641689	0					
ANR	3641776	PrimaryExpression	"""GROUP_ICON"""		3641689	1					
ANR	3641777	BreakStatement	break ;	213:2:4423:4428	3641689	38	True				
ANR	3641778	Label	case 15 :	214:1:4431:4438	3641689	39	True				
ANR	3641779	ExpressionStatement	"typeName = ""NAMETABLE"""	215:2:4442:4464	3641689	40	True				
ANR	3641780	AssignmentExpression	"typeName = ""NAMETABLE"""		3641689	0		=			
ANR	3641781	Identifier	typeName		3641689	0					
ANR	3641782	PrimaryExpression	"""NAMETABLE"""		3641689	1					
ANR	3641783	BreakStatement	break ;	216:2:4468:4473	3641689	41	True				
ANR	3641784	Label	case 16 :	217:1:4476:4483	3641689	42	True				
ANR	3641785	ExpressionStatement	"typeName = ""VERSION"""	218:2:4487:4507	3641689	43	True				
ANR	3641786	AssignmentExpression	"typeName = ""VERSION"""		3641689	0		=			
ANR	3641787	Identifier	typeName		3641689	0					
ANR	3641788	PrimaryExpression	"""VERSION"""		3641689	1					
ANR	3641789	BreakStatement	break ;	219:2:4511:4516	3641689	44	True				
ANR	3641790	Label	case 17 :	220:1:4519:4526	3641689	45	True				
ANR	3641791	ExpressionStatement	"typeName = ""DLGINCLUDE"""	221:2:4530:4553	3641689	46	True				
ANR	3641792	AssignmentExpression	"typeName = ""DLGINCLUDE"""		3641689	0		=			
ANR	3641793	Identifier	typeName		3641689	0					
ANR	3641794	PrimaryExpression	"""DLGINCLUDE"""		3641689	1					
ANR	3641795	BreakStatement	break ;	222:2:4557:4562	3641689	47	True				
ANR	3641796	Label	case 19 :	223:1:4565:4572	3641689	48	True				
ANR	3641797	ExpressionStatement	"typeName = ""PLUGPLAY"""	224:2:4576:4597	3641689	49	True				
ANR	3641798	AssignmentExpression	"typeName = ""PLUGPLAY"""		3641689	0		=			
ANR	3641799	Identifier	typeName		3641689	0					
ANR	3641800	PrimaryExpression	"""PLUGPLAY"""		3641689	1					
ANR	3641801	BreakStatement	break ;	225:2:4601:4606	3641689	50	True				
ANR	3641802	Label	case 20 :	226:1:4609:4616	3641689	51	True				
ANR	3641803	ExpressionStatement	"typeName = ""VXD"""	227:2:4620:4636	3641689	52	True				
ANR	3641804	AssignmentExpression	"typeName = ""VXD"""		3641689	0		=			
ANR	3641805	Identifier	typeName		3641689	0					
ANR	3641806	PrimaryExpression	"""VXD"""		3641689	1					
ANR	3641807	BreakStatement	break ;	228:2:4640:4645	3641689	53	True				
ANR	3641808	Label	case 21 :	229:1:4648:4655	3641689	54	True				
ANR	3641809	ExpressionStatement	"typeName = ""ANICURSOR"""	230:2:4659:4681	3641689	55	True				
ANR	3641810	AssignmentExpression	"typeName = ""ANICURSOR"""		3641689	0		=			
ANR	3641811	Identifier	typeName		3641689	0					
ANR	3641812	PrimaryExpression	"""ANICURSOR"""		3641689	1					
ANR	3641813	BreakStatement	break ;	231:2:4685:4690	3641689	56	True				
ANR	3641814	Label	case 22 :	232:1:4693:4700	3641689	57	True				
ANR	3641815	ExpressionStatement	"typeName = ""ANIICON"""	233:2:4704:4724	3641689	58	True				
ANR	3641816	AssignmentExpression	"typeName = ""ANIICON"""		3641689	0		=			
ANR	3641817	Identifier	typeName		3641689	0					
ANR	3641818	PrimaryExpression	"""ANIICON"""		3641689	1					
ANR	3641819	BreakStatement	break ;	234:2:4728:4733	3641689	59	True				
ANR	3641820	Label	case 23 :	235:1:4736:4743	3641689	60	True				
ANR	3641821	ExpressionStatement	"typeName = ""HTML"""	236:2:4747:4764	3641689	61	True				
ANR	3641822	AssignmentExpression	"typeName = ""HTML"""		3641689	0		=			
ANR	3641823	Identifier	typeName		3641689	0					
ANR	3641824	PrimaryExpression	"""HTML"""		3641689	1					
ANR	3641825	BreakStatement	break ;	237:2:4768:4773	3641689	62	True				
ANR	3641826	Label	case 24 :	238:1:4776:4783	3641689	63	True				
ANR	3641827	ExpressionStatement	"typeName = ""MANIFEST"""	239:2:4787:4808	3641689	64	True				
ANR	3641828	AssignmentExpression	"typeName = ""MANIFEST"""		3641689	0		=			
ANR	3641829	Identifier	typeName		3641689	0					
ANR	3641830	PrimaryExpression	"""MANIFEST"""		3641689	1					
ANR	3641831	BreakStatement	break ;	240:2:4812:4817	3641689	65	True				
ANR	3641832	Label	default :	241:1:4820:4827	3641689	66	True				
ANR	3641833	Identifier	default		3641689	0					
ANR	3641834	ReturnStatement	"return r_str_newf ( ""UNKNOWN (%d)"" , type ) ;"	242:2:4832:4872	3641689	67	True				
ANR	3641835	CallExpression	"r_str_newf ( ""UNKNOWN (%d)"" , type )"		3641689	0					
ANR	3641836	Callee	r_str_newf		3641689	0					
ANR	3641837	Identifier	r_str_newf		3641689	0					
ANR	3641838	ArgumentList	"""UNKNOWN (%d)"""		3641689	1					
ANR	3641839	Argument	"""UNKNOWN (%d)"""		3641689	0					
ANR	3641840	PrimaryExpression	"""UNKNOWN (%d)"""		3641689	0					
ANR	3641841	Argument	type		3641689	1					
ANR	3641842	Identifier	type		3641689	0					
ANR	3641843	ReturnStatement	return strdup ( typeName ) ;	244:1:4878:4902	3641689	2	True				
ANR	3641844	CallExpression	strdup ( typeName )		3641689	0					
ANR	3641845	Callee	strdup		3641689	0					
ANR	3641846	Identifier	strdup		3641689	0					
ANR	3641847	ArgumentList	typeName		3641689	1					
ANR	3641848	Argument	typeName		3641689	0					
ANR	3641849	Identifier	typeName		3641689	0					
ANR	3641850	ReturnType	static char *		3641689	1					
ANR	3641851	Identifier	__resource_type_str		3641689	2					
ANR	3641852	ParameterList	int type		3641689	3					
ANR	3641853	Parameter	int type	172:33:3831:3838	3641689	0	True				
ANR	3641854	ParameterType	int		3641689	0					
ANR	3641855	Identifier	type		3641689	1					
ANR	3641856	CFGEntryNode	ENTRY		3641689		True				
ANR	3641857	CFGExitNode	EXIT		3641689		True				
ANR	3641858	Symbol	typeName		3641689						
ANR	3641859	Symbol	r_str_newf		3641689						
ANR	3641860	Symbol	strdup		3641689						
ANR	3641861	Symbol	type		3641689						
ANR	3641862	Function	__free_resource_entry	247:0:4907:5043							
ANR	3641863	FunctionDef	__free_resource_entry (void * entry)		3641862	0					
ANR	3641864	CompoundStatement		247:47:4954:5043	3641862	0					
ANR	3641865	IdentifierDeclStatement	r_ne_resource_entry * en = ( r_ne_resource_entry * ) entry ;	248:1:4957:5011	3641862	0	True				
ANR	3641866	IdentifierDecl	* en = ( r_ne_resource_entry * ) entry		3641862	0					
ANR	3641867	IdentifierDeclType	r_ne_resource_entry *		3641862	0					
ANR	3641868	Identifier	en		3641862	1					
ANR	3641869	AssignmentExpression	* en = ( r_ne_resource_entry * ) entry		3641862	2		=			
ANR	3641870	Identifier	en		3641862	0					
ANR	3641871	CastExpression	( r_ne_resource_entry * ) entry		3641862	1					
ANR	3641872	CastTarget	r_ne_resource_entry *		3641862	0					
ANR	3641873	Identifier	entry		3641862	1					
ANR	3641874	ExpressionStatement	free ( en -> name )	249:1:5014:5029	3641862	1	True				
ANR	3641875	CallExpression	free ( en -> name )		3641862	0					
ANR	3641876	Callee	free		3641862	0					
ANR	3641877	Identifier	free		3641862	0					
ANR	3641878	ArgumentList	en -> name		3641862	1					
ANR	3641879	Argument	en -> name		3641862	0					
ANR	3641880	PtrMemberAccess	en -> name		3641862	0					
ANR	3641881	Identifier	en		3641862	0					
ANR	3641882	Identifier	name		3641862	1					
ANR	3641883	ExpressionStatement	free ( en )	250:1:5032:5041	3641862	2	True				
ANR	3641884	CallExpression	free ( en )		3641862	0					
ANR	3641885	Callee	free		3641862	0					
ANR	3641886	Identifier	free		3641862	0					
ANR	3641887	ArgumentList	en		3641862	1					
ANR	3641888	Argument	en		3641862	0					
ANR	3641889	Identifier	en		3641862	0					
ANR	3641890	ReturnType	static void		3641862	1					
ANR	3641891	Identifier	__free_resource_entry		3641862	2					
ANR	3641892	ParameterList	void * entry		3641862	3					
ANR	3641893	Parameter	void * entry	247:34:4941:4951	3641862	0	True				
ANR	3641894	ParameterType	void *		3641862	0					
ANR	3641895	Identifier	entry		3641862	1					
ANR	3641896	CFGEntryNode	ENTRY		3641862		True				
ANR	3641897	CFGExitNode	EXIT		3641862		True				
ANR	3641898	Symbol	entry		3641862						
ANR	3641899	Symbol	en -> name		3641862						
ANR	3641900	Symbol	en		3641862						
ANR	3641901	Symbol	* en		3641862						
ANR	3641902	Function	__free_resource	253:0:5046:5200							
ANR	3641903	FunctionDef	__free_resource (void * resource)		3641902	0					
ANR	3641904	CompoundStatement		253:44:5090:5200	3641902	0					
ANR	3641905	IdentifierDeclStatement	r_ne_resource * res = ( r_ne_resource * ) resource ;	254:1:5093:5139	3641902	0	True				
ANR	3641906	IdentifierDecl	* res = ( r_ne_resource * ) resource		3641902	0					
ANR	3641907	IdentifierDeclType	r_ne_resource *		3641902	0					
ANR	3641908	Identifier	res		3641902	1					
ANR	3641909	AssignmentExpression	* res = ( r_ne_resource * ) resource		3641902	2		=			
ANR	3641910	Identifier	res		3641902	0					
ANR	3641911	CastExpression	( r_ne_resource * ) resource		3641902	1					
ANR	3641912	CastTarget	r_ne_resource *		3641902	0					
ANR	3641913	Identifier	resource		3641902	1					
ANR	3641914	ExpressionStatement	free ( res -> name )	255:1:5142:5158	3641902	1	True				
ANR	3641915	CallExpression	free ( res -> name )		3641902	0					
ANR	3641916	Callee	free		3641902	0					
ANR	3641917	Identifier	free		3641902	0					
ANR	3641918	ArgumentList	res -> name		3641902	1					
ANR	3641919	Argument	res -> name		3641902	0					
ANR	3641920	PtrMemberAccess	res -> name		3641902	0					
ANR	3641921	Identifier	res		3641902	0					
ANR	3641922	Identifier	name		3641902	1					
ANR	3641923	ExpressionStatement	r_list_free ( res -> entry )	256:1:5161:5185	3641902	2	True				
ANR	3641924	CallExpression	r_list_free ( res -> entry )		3641902	0					
ANR	3641925	Callee	r_list_free		3641902	0					
ANR	3641926	Identifier	r_list_free		3641902	0					
ANR	3641927	ArgumentList	res -> entry		3641902	1					
ANR	3641928	Argument	res -> entry		3641902	0					
ANR	3641929	PtrMemberAccess	res -> entry		3641902	0					
ANR	3641930	Identifier	res		3641902	0					
ANR	3641931	Identifier	entry		3641902	1					
ANR	3641932	ExpressionStatement	free ( res )	257:1:5188:5198	3641902	3	True				
ANR	3641933	CallExpression	free ( res )		3641902	0					
ANR	3641934	Callee	free		3641902	0					
ANR	3641935	Identifier	free		3641902	0					
ANR	3641936	ArgumentList	res		3641902	1					
ANR	3641937	Argument	res		3641902	0					
ANR	3641938	Identifier	res		3641902	0					
ANR	3641939	ReturnType	static void		3641902	1					
ANR	3641940	Identifier	__free_resource		3641902	2					
ANR	3641941	ParameterList	void * resource		3641902	3					
ANR	3641942	Parameter	void * resource	253:28:5074:5087	3641902	0	True				
ANR	3641943	ParameterType	void *		3641902	0					
ANR	3641944	Identifier	resource		3641902	1					
ANR	3641945	CFGEntryNode	ENTRY		3641902		True				
ANR	3641946	CFGExitNode	EXIT		3641902		True				
ANR	3641947	Symbol	res		3641902						
ANR	3641948	Symbol	res -> entry		3641902						
ANR	3641949	Symbol	resource		3641902						
ANR	3641950	Symbol	* res		3641902						
ANR	3641951	Symbol	res -> name		3641902						
ANR	3641952	Function	__ne_get_resources	260:0:5203:6732							
ANR	3641953	FunctionDef	__ne_get_resources (r_bin_ne_obj_t * bin)		3641952	0					
ANR	3641954	CompoundStatement		260:52:5255:6732	3641952	0					
ANR	3641955	IfStatement	if ( ! bin -> resources )		3641952	0					
ANR	3641956	Condition	! bin -> resources	261:5:5262:5276	3641952	0	True				
ANR	3641957	UnaryOperationExpression	! bin -> resources		3641952	0					
ANR	3641958	UnaryOperator	!		3641952	0					
ANR	3641959	PtrMemberAccess	bin -> resources		3641952	1					
ANR	3641960	Identifier	bin		3641952	0					
ANR	3641961	Identifier	resources		3641952	1					
ANR	3641962	CompoundStatement		2:22:23:23	3641952	1					
ANR	3641963	ExpressionStatement	bin -> resources = r_list_newf ( __free_resource )	262:2:5283:5329	3641952	0	True				
ANR	3641964	AssignmentExpression	bin -> resources = r_list_newf ( __free_resource )		3641952	0		=			
ANR	3641965	PtrMemberAccess	bin -> resources		3641952	0					
ANR	3641966	Identifier	bin		3641952	0					
ANR	3641967	Identifier	resources		3641952	1					
ANR	3641968	CallExpression	r_list_newf ( __free_resource )		3641952	1					
ANR	3641969	Callee	r_list_newf		3641952	0					
ANR	3641970	Identifier	r_list_newf		3641952	0					
ANR	3641971	ArgumentList	__free_resource		3641952	1					
ANR	3641972	Argument	__free_resource		3641952	0					
ANR	3641973	Identifier	__free_resource		3641952	0					
ANR	3641974	IdentifierDeclStatement	ut16 resoff = bin -> ne_header -> ResTableOffset + bin -> header_offset ;	264:1:5335:5400	3641952	1	True				
ANR	3641975	IdentifierDecl	resoff = bin -> ne_header -> ResTableOffset + bin -> header_offset		3641952	0					
ANR	3641976	IdentifierDeclType	ut16		3641952	0					
ANR	3641977	Identifier	resoff		3641952	1					
ANR	3641978	AssignmentExpression	resoff = bin -> ne_header -> ResTableOffset + bin -> header_offset		3641952	2		=			
ANR	3641979	Identifier	resoff		3641952	0					
ANR	3641980	AdditiveExpression	bin -> ne_header -> ResTableOffset + bin -> header_offset		3641952	1		+			
ANR	3641981	PtrMemberAccess	bin -> ne_header -> ResTableOffset		3641952	0					
ANR	3641982	PtrMemberAccess	bin -> ne_header		3641952	0					
ANR	3641983	Identifier	bin		3641952	0					
ANR	3641984	Identifier	ne_header		3641952	1					
ANR	3641985	Identifier	ResTableOffset		3641952	1					
ANR	3641986	PtrMemberAccess	bin -> header_offset		3641952	1					
ANR	3641987	Identifier	bin		3641952	0					
ANR	3641988	Identifier	header_offset		3641952	1					
ANR	3641989	IdentifierDeclStatement	"ut16 alignment = r_buf_read_le16_at ( bin -> buf , resoff ) ;"	265:1:5403:5457	3641952	2	True				
ANR	3641990	IdentifierDecl	"alignment = r_buf_read_le16_at ( bin -> buf , resoff )"		3641952	0					
ANR	3641991	IdentifierDeclType	ut16		3641952	0					
ANR	3641992	Identifier	alignment		3641952	1					
ANR	3641993	AssignmentExpression	"alignment = r_buf_read_le16_at ( bin -> buf , resoff )"		3641952	2		=			
ANR	3641994	Identifier	alignment		3641952	0					
ANR	3641995	CallExpression	"r_buf_read_le16_at ( bin -> buf , resoff )"		3641952	1					
ANR	3641996	Callee	r_buf_read_le16_at		3641952	0					
ANR	3641997	Identifier	r_buf_read_le16_at		3641952	0					
ANR	3641998	ArgumentList	bin -> buf		3641952	1					
ANR	3641999	Argument	bin -> buf		3641952	0					
ANR	3642000	PtrMemberAccess	bin -> buf		3641952	0					
ANR	3642001	Identifier	bin		3641952	0					
ANR	3642002	Identifier	buf		3641952	1					
ANR	3642003	Argument	resoff		3641952	1					
ANR	3642004	Identifier	resoff		3641952	0					
ANR	3642005	IdentifierDeclStatement	ut32 off = resoff + 2 ;	266:1:5460:5481	3641952	3	True				
ANR	3642006	IdentifierDecl	off = resoff + 2		3641952	0					
ANR	3642007	IdentifierDeclType	ut32		3641952	0					
ANR	3642008	Identifier	off		3641952	1					
ANR	3642009	AssignmentExpression	off = resoff + 2		3641952	2		=			
ANR	3642010	Identifier	off		3641952	0					
ANR	3642011	AdditiveExpression	resoff + 2		3641952	1		+			
ANR	3642012	Identifier	resoff		3641952	0					
ANR	3642013	PrimaryExpression	2		3641952	1					
ANR	3642014	WhileStatement	while ( true )		3641952	4					
ANR	3642015	Condition	true	267:8:5491:5494	3641952	0	True				
ANR	3642016	Identifier	true		3641952	0					
ANR	3642017	CompoundStatement		28:2:802:807	3641952	1					
ANR	3642018	IdentifierDeclStatement	NE_image_typeinfo_entry ti = { 0 } ;	268:2:5501:5533	3641952	0	True				
ANR	3642019	IdentifierDecl	ti = { 0 }		3641952	0					
ANR	3642020	IdentifierDeclType	NE_image_typeinfo_entry		3641952	0					
ANR	3642021	Identifier	ti		3641952	1					
ANR	3642022	AssignmentExpression	ti = { 0 }		3641952	2		=			
ANR	3642023	Identifier	ti		3641952	0					
ANR	3642024	InitializerList	0		3641952	1					
ANR	3642025	PrimaryExpression	0		3641952	0					
ANR	3642026	IdentifierDeclStatement	r_ne_resource * res = R_NEW0 ( r_ne_resource ) ;	269:2:5537:5580	3641952	1	True				
ANR	3642027	IdentifierDecl	* res = R_NEW0 ( r_ne_resource )		3641952	0					
ANR	3642028	IdentifierDeclType	r_ne_resource *		3641952	0					
ANR	3642029	Identifier	res		3641952	1					
ANR	3642030	AssignmentExpression	* res = R_NEW0 ( r_ne_resource )		3641952	2		=			
ANR	3642031	Identifier	res		3641952	0					
ANR	3642032	CallExpression	R_NEW0 ( r_ne_resource )		3641952	1					
ANR	3642033	Callee	R_NEW0		3641952	0					
ANR	3642034	Identifier	R_NEW0		3641952	0					
ANR	3642035	ArgumentList	r_ne_resource		3641952	1					
ANR	3642036	Argument	r_ne_resource		3641952	0					
ANR	3642037	Identifier	r_ne_resource		3641952	0					
ANR	3642038	IfStatement	if ( ! res )		3641952	2					
ANR	3642039	Condition	! res	270:6:5588:5591	3641952	0	True				
ANR	3642040	UnaryOperationExpression	! res		3641952	0					
ANR	3642041	UnaryOperator	!		3641952	0					
ANR	3642042	Identifier	res		3641952	1					
ANR	3642043	CompoundStatement		11:12:338:338	3641952	1					
ANR	3642044	BreakStatement	break ;	271:3:5599:5604	3641952	0	True				
ANR	3642045	ExpressionStatement	res -> entry = r_list_newf ( __free_resource_entry )	273:2:5612:5660	3641952	3	True				
ANR	3642046	AssignmentExpression	res -> entry = r_list_newf ( __free_resource_entry )		3641952	0		=			
ANR	3642047	PtrMemberAccess	res -> entry		3641952	0					
ANR	3642048	Identifier	res		3641952	0					
ANR	3642049	Identifier	entry		3641952	1					
ANR	3642050	CallExpression	r_list_newf ( __free_resource_entry )		3641952	1					
ANR	3642051	Callee	r_list_newf		3641952	0					
ANR	3642052	Identifier	r_list_newf		3641952	0					
ANR	3642053	ArgumentList	__free_resource_entry		3641952	1					
ANR	3642054	Argument	__free_resource_entry		3641952	0					
ANR	3642055	Identifier	__free_resource_entry		3641952	0					
ANR	3642056	IfStatement	if ( ! res -> entry )		3641952	4					
ANR	3642057	Condition	! res -> entry	274:6:5668:5678	3641952	0	True				
ANR	3642058	UnaryOperationExpression	! res -> entry		3641952	0					
ANR	3642059	UnaryOperator	!		3641952	0					
ANR	3642060	PtrMemberAccess	res -> entry		3641952	1					
ANR	3642061	Identifier	res		3641952	0					
ANR	3642062	Identifier	entry		3641952	1					
ANR	3642063	CompoundStatement		15:19:425:425	3641952	1					
ANR	3642064	BreakStatement	break ;	275:3:5686:5691	3641952	0	True				
ANR	3642065	ExpressionStatement	"r_buf_read_at ( bin -> buf , off , ( ut8 * ) & ti , sizeof ( ti ) )"	277:2:5699:5753	3641952	5	True				
ANR	3642066	CallExpression	"r_buf_read_at ( bin -> buf , off , ( ut8 * ) & ti , sizeof ( ti ) )"		3641952	0					
ANR	3642067	Callee	r_buf_read_at		3641952	0					
ANR	3642068	Identifier	r_buf_read_at		3641952	0					
ANR	3642069	ArgumentList	bin -> buf		3641952	1					
ANR	3642070	Argument	bin -> buf		3641952	0					
ANR	3642071	PtrMemberAccess	bin -> buf		3641952	0					
ANR	3642072	Identifier	bin		3641952	0					
ANR	3642073	Identifier	buf		3641952	1					
ANR	3642074	Argument	off		3641952	1					
ANR	3642075	Identifier	off		3641952	0					
ANR	3642076	Argument	( ut8 * ) & ti		3641952	2					
ANR	3642077	CastExpression	( ut8 * ) & ti		3641952	0					
ANR	3642078	CastTarget	ut8 *		3641952	0					
ANR	3642079	UnaryOperationExpression	& ti		3641952	1					
ANR	3642080	UnaryOperator	&		3641952	0					
ANR	3642081	Identifier	ti		3641952	1					
ANR	3642082	Argument	sizeof ( ti )		3641952	3					
ANR	3642083	SizeofExpression	sizeof ( ti )		3641952	0					
ANR	3642084	Sizeof	sizeof		3641952	0					
ANR	3642085	SizeofOperand	ti		3641952	1					
ANR	3642086	IfStatement	if ( ! ti . rtTypeID )		3641952	6					
ANR	3642087	Condition	! ti . rtTypeID	278:6:5761:5772	3641952	0	True				
ANR	3642088	UnaryOperationExpression	! ti . rtTypeID		3641952	0					
ANR	3642089	UnaryOperator	!		3641952	0					
ANR	3642090	MemberAccess	ti . rtTypeID		3641952	1					
ANR	3642091	Identifier	ti		3641952	0					
ANR	3642092	Identifier	rtTypeID		3641952	1					
ANR	3642093	CompoundStatement		19:20:519:519	3641952	1					
ANR	3642094	BreakStatement	break ;	279:3:5780:5785	3641952	0	True				
ANR	3642095	ElseStatement	else		3641952	0					
ANR	3642096	IfStatement	if ( ti . rtTypeID & 0x8000 )		3641952	0					
ANR	3642097	Condition	ti . rtTypeID & 0x8000	280:13:5800:5819	3641952	0	True				
ANR	3642098	BitAndExpression	ti . rtTypeID & 0x8000		3641952	0		&			
ANR	3642099	MemberAccess	ti . rtTypeID		3641952	0					
ANR	3642100	Identifier	ti		3641952	0					
ANR	3642101	Identifier	rtTypeID		3641952	1					
ANR	3642102	PrimaryExpression	0x8000		3641952	1					
ANR	3642103	CompoundStatement		21:35:566:566	3641952	1					
ANR	3642104	ExpressionStatement	res -> name = __resource_type_str ( ti . rtTypeID & ~0x8000 )	281:3:5827:5882	3641952	0	True				
ANR	3642105	AssignmentExpression	res -> name = __resource_type_str ( ti . rtTypeID & ~0x8000 )		3641952	0		=			
ANR	3642106	PtrMemberAccess	res -> name		3641952	0					
ANR	3642107	Identifier	res		3641952	0					
ANR	3642108	Identifier	name		3641952	1					
ANR	3642109	CallExpression	__resource_type_str ( ti . rtTypeID & ~0x8000 )		3641952	1					
ANR	3642110	Callee	__resource_type_str		3641952	0					
ANR	3642111	Identifier	__resource_type_str		3641952	0					
ANR	3642112	ArgumentList	ti . rtTypeID & ~0x8000		3641952	1					
ANR	3642113	Argument	ti . rtTypeID & ~0x8000		3641952	0					
ANR	3642114	BitAndExpression	ti . rtTypeID & ~0x8000		3641952	0		&			
ANR	3642115	MemberAccess	ti . rtTypeID		3641952	0					
ANR	3642116	Identifier	ti		3641952	0					
ANR	3642117	Identifier	rtTypeID		3641952	1					
ANR	3642118	Identifier	~0x8000		3641952	1					
ANR	3642119	ElseStatement	else		3641952	0					
ANR	3642120	CompoundStatement		23:9:637:637	3641952	0					
ANR	3642121	ExpressionStatement	"res -> name = __read_nonnull_str_at ( bin -> buf , ( ut64 ) resoff + ti . rtTypeID )"	284:3:5935:6007	3641952	0	True				
ANR	3642122	AssignmentExpression	"res -> name = __read_nonnull_str_at ( bin -> buf , ( ut64 ) resoff + ti . rtTypeID )"		3641952	0		=			
ANR	3642123	PtrMemberAccess	res -> name		3641952	0					
ANR	3642124	Identifier	res		3641952	0					
ANR	3642125	Identifier	name		3641952	1					
ANR	3642126	CallExpression	"__read_nonnull_str_at ( bin -> buf , ( ut64 ) resoff + ti . rtTypeID )"		3641952	1					
ANR	3642127	Callee	__read_nonnull_str_at		3641952	0					
ANR	3642128	Identifier	__read_nonnull_str_at		3641952	0					
ANR	3642129	ArgumentList	bin -> buf		3641952	1					
ANR	3642130	Argument	bin -> buf		3641952	0					
ANR	3642131	PtrMemberAccess	bin -> buf		3641952	0					
ANR	3642132	Identifier	bin		3641952	0					
ANR	3642133	Identifier	buf		3641952	1					
ANR	3642134	Argument	( ut64 ) resoff + ti . rtTypeID		3641952	1					
ANR	3642135	AdditiveExpression	( ut64 ) resoff + ti . rtTypeID		3641952	0		+			
ANR	3642136	CastExpression	( ut64 ) resoff		3641952	0					
ANR	3642137	CastTarget	ut64		3641952	0					
ANR	3642138	Identifier	resoff		3641952	1					
ANR	3642139	MemberAccess	ti . rtTypeID		3641952	1					
ANR	3642140	Identifier	ti		3641952	0					
ANR	3642141	Identifier	rtTypeID		3641952	1					
ANR	3642142	ExpressionStatement	off += sizeof ( NE_image_typeinfo_entry )	286:2:6015:6054	3641952	7	True				
ANR	3642143	AssignmentExpression	off += sizeof ( NE_image_typeinfo_entry )		3641952	0		+=			
ANR	3642144	Identifier	off		3641952	0					
ANR	3642145	SizeofExpression	sizeof ( NE_image_typeinfo_entry )		3641952	1					
ANR	3642146	Sizeof	sizeof		3641952	0					
ANR	3642147	SizeofOperand	NE_image_typeinfo_entry		3641952	1					
ANR	3642148	IdentifierDeclStatement	int i ;	287:2:6058:6063	3641952	8	True				
ANR	3642149	IdentifierDecl	i		3641952	0					
ANR	3642150	IdentifierDeclType	int		3641952	0					
ANR	3642151	Identifier	i		3641952	1					
ANR	3642152	ForStatement	for ( i = 0 ; i < ti . rtResourceCount ; i ++ )		3641952	9					
ANR	3642153	ForInit	i = 0 ;	288:7:6072:6077	3641952	0	True				
ANR	3642154	AssignmentExpression	i = 0		3641952	0		=			
ANR	3642155	Identifier	i		3641952	0					
ANR	3642156	PrimaryExpression	0		3641952	1					
ANR	3642157	Condition	i < ti . rtResourceCount	288:14:6079:6100	3641952	1	True				
ANR	3642158	RelationalExpression	i < ti . rtResourceCount		3641952	0		<			
ANR	3642159	Identifier	i		3641952	0					
ANR	3642160	MemberAccess	ti . rtResourceCount		3641952	1					
ANR	3642161	Identifier	ti		3641952	0					
ANR	3642162	Identifier	rtResourceCount		3641952	1					
ANR	3642163	PostIncDecOperationExpression	i ++	288:38:6103:6105	3641952	2	True				
ANR	3642164	Identifier	i		3641952	0					
ANR	3642165	IncDec	++		3641952	1					
ANR	3642166	CompoundStatement		31:3:888:943	3641952	3					
ANR	3642167	IdentifierDeclStatement	NE_image_nameinfo_entry ni ;	289:3:6113:6139	3641952	0	True				
ANR	3642168	IdentifierDecl	ni		3641952	0					
ANR	3642169	IdentifierDeclType	NE_image_nameinfo_entry		3641952	0					
ANR	3642170	Identifier	ni		3641952	1					
ANR	3642171	IdentifierDeclStatement	r_ne_resource_entry * ren = R_NEW0 ( r_ne_resource_entry ) ;	290:3:6144:6199	3641952	1	True				
ANR	3642172	IdentifierDecl	* ren = R_NEW0 ( r_ne_resource_entry )		3641952	0					
ANR	3642173	IdentifierDeclType	r_ne_resource_entry *		3641952	0					
ANR	3642174	Identifier	ren		3641952	1					
ANR	3642175	AssignmentExpression	* ren = R_NEW0 ( r_ne_resource_entry )		3641952	2		=			
ANR	3642176	Identifier	ren		3641952	0					
ANR	3642177	CallExpression	R_NEW0 ( r_ne_resource_entry )		3641952	1					
ANR	3642178	Callee	R_NEW0		3641952	0					
ANR	3642179	Identifier	R_NEW0		3641952	0					
ANR	3642180	ArgumentList	r_ne_resource_entry		3641952	1					
ANR	3642181	Argument	r_ne_resource_entry		3641952	0					
ANR	3642182	Identifier	r_ne_resource_entry		3641952	0					
ANR	3642183	IfStatement	if ( ! ren )		3641952	2					
ANR	3642184	Condition	! ren	291:7:6208:6211	3641952	0	True				
ANR	3642185	UnaryOperationExpression	! ren		3641952	0					
ANR	3642186	UnaryOperator	!		3641952	0					
ANR	3642187	Identifier	ren		3641952	1					
ANR	3642188	CompoundStatement		32:13:958:958	3641952	1					
ANR	3642189	BreakStatement	break ;	292:4:6220:6225	3641952	0	True				
ANR	3642190	ExpressionStatement	"r_buf_read_at ( bin -> buf , off , ( ut8 * ) & ni , sizeof ( NE_image_nameinfo_entry ) )"	294:3:6235:6310	3641952	3	True				
ANR	3642191	CallExpression	"r_buf_read_at ( bin -> buf , off , ( ut8 * ) & ni , sizeof ( NE_image_nameinfo_entry ) )"		3641952	0					
ANR	3642192	Callee	r_buf_read_at		3641952	0					
ANR	3642193	Identifier	r_buf_read_at		3641952	0					
ANR	3642194	ArgumentList	bin -> buf		3641952	1					
ANR	3642195	Argument	bin -> buf		3641952	0					
ANR	3642196	PtrMemberAccess	bin -> buf		3641952	0					
ANR	3642197	Identifier	bin		3641952	0					
ANR	3642198	Identifier	buf		3641952	1					
ANR	3642199	Argument	off		3641952	1					
ANR	3642200	Identifier	off		3641952	0					
ANR	3642201	Argument	( ut8 * ) & ni		3641952	2					
ANR	3642202	CastExpression	( ut8 * ) & ni		3641952	0					
ANR	3642203	CastTarget	ut8 *		3641952	0					
ANR	3642204	UnaryOperationExpression	& ni		3641952	1					
ANR	3642205	UnaryOperator	&		3641952	0					
ANR	3642206	Identifier	ni		3641952	1					
ANR	3642207	Argument	sizeof ( NE_image_nameinfo_entry )		3641952	3					
ANR	3642208	SizeofExpression	sizeof ( NE_image_nameinfo_entry )		3641952	0					
ANR	3642209	Sizeof	sizeof		3641952	0					
ANR	3642210	SizeofOperand	NE_image_nameinfo_entry		3641952	1					
ANR	3642211	ExpressionStatement	ren -> offset = ni . rnOffset << alignment	295:3:6315:6353	3641952	4	True				
ANR	3642212	AssignmentExpression	ren -> offset = ni . rnOffset << alignment		3641952	0		=			
ANR	3642213	PtrMemberAccess	ren -> offset		3641952	0					
ANR	3642214	Identifier	ren		3641952	0					
ANR	3642215	Identifier	offset		3641952	1					
ANR	3642216	ShiftExpression	ni . rnOffset << alignment		3641952	1		<<			
ANR	3642217	MemberAccess	ni . rnOffset		3641952	0					
ANR	3642218	Identifier	ni		3641952	0					
ANR	3642219	Identifier	rnOffset		3641952	1					
ANR	3642220	Identifier	alignment		3641952	1					
ANR	3642221	ExpressionStatement	ren -> size = ni . rnLength	296:3:6358:6381	3641952	5	True				
ANR	3642222	AssignmentExpression	ren -> size = ni . rnLength		3641952	0		=			
ANR	3642223	PtrMemberAccess	ren -> size		3641952	0					
ANR	3642224	Identifier	ren		3641952	0					
ANR	3642225	Identifier	size		3641952	1					
ANR	3642226	MemberAccess	ni . rnLength		3641952	1					
ANR	3642227	Identifier	ni		3641952	0					
ANR	3642228	Identifier	rnLength		3641952	1					
ANR	3642229	IfStatement	if ( ni . rnID & 0x8000 )		3641952	6					
ANR	3642230	Condition	ni . rnID & 0x8000	297:7:6390:6405	3641952	0	True				
ANR	3642231	BitAndExpression	ni . rnID & 0x8000		3641952	0		&			
ANR	3642232	MemberAccess	ni . rnID		3641952	0					
ANR	3642233	Identifier	ni		3641952	0					
ANR	3642234	Identifier	rnID		3641952	1					
ANR	3642235	PrimaryExpression	0x8000		3641952	1					
ANR	3642236	CompoundStatement		38:25:1152:1152	3641952	1					
ANR	3642237	ExpressionStatement	"ren -> name = r_str_newf ( ""%d"" , ni . rnID & ~0x8000 )"	298:4:6414:6462	3641952	0	True				
ANR	3642238	AssignmentExpression	"ren -> name = r_str_newf ( ""%d"" , ni . rnID & ~0x8000 )"		3641952	0		=			
ANR	3642239	PtrMemberAccess	ren -> name		3641952	0					
ANR	3642240	Identifier	ren		3641952	0					
ANR	3642241	Identifier	name		3641952	1					
ANR	3642242	CallExpression	"r_str_newf ( ""%d"" , ni . rnID & ~0x8000 )"		3641952	1					
ANR	3642243	Callee	r_str_newf		3641952	0					
ANR	3642244	Identifier	r_str_newf		3641952	0					
ANR	3642245	ArgumentList	"""%d"""		3641952	1					
ANR	3642246	Argument	"""%d"""		3641952	0					
ANR	3642247	PrimaryExpression	"""%d"""		3641952	0					
ANR	3642248	Argument	ni . rnID & ~0x8000		3641952	1					
ANR	3642249	BitAndExpression	ni . rnID & ~0x8000		3641952	0		&			
ANR	3642250	MemberAccess	ni . rnID		3641952	0					
ANR	3642251	Identifier	ni		3641952	0					
ANR	3642252	Identifier	rnID		3641952	1					
ANR	3642253	Identifier	~0x8000		3641952	1					
ANR	3642254	ElseStatement	else		3641952	0					
ANR	3642255	CompoundStatement		40:10:1218:1218	3641952	0					
ANR	3642256	ExpressionStatement	"ren -> name = __read_nonnull_str_at ( bin -> buf , ( ut64 ) resoff + ni . rnID )"	301:4:6517:6585	3641952	0	True				
ANR	3642257	AssignmentExpression	"ren -> name = __read_nonnull_str_at ( bin -> buf , ( ut64 ) resoff + ni . rnID )"		3641952	0		=			
ANR	3642258	PtrMemberAccess	ren -> name		3641952	0					
ANR	3642259	Identifier	ren		3641952	0					
ANR	3642260	Identifier	name		3641952	1					
ANR	3642261	CallExpression	"__read_nonnull_str_at ( bin -> buf , ( ut64 ) resoff + ni . rnID )"		3641952	1					
ANR	3642262	Callee	__read_nonnull_str_at		3641952	0					
ANR	3642263	Identifier	__read_nonnull_str_at		3641952	0					
ANR	3642264	ArgumentList	bin -> buf		3641952	1					
ANR	3642265	Argument	bin -> buf		3641952	0					
ANR	3642266	PtrMemberAccess	bin -> buf		3641952	0					
ANR	3642267	Identifier	bin		3641952	0					
ANR	3642268	Identifier	buf		3641952	1					
ANR	3642269	Argument	( ut64 ) resoff + ni . rnID		3641952	1					
ANR	3642270	AdditiveExpression	( ut64 ) resoff + ni . rnID		3641952	0		+			
ANR	3642271	CastExpression	( ut64 ) resoff		3641952	0					
ANR	3642272	CastTarget	ut64		3641952	0					
ANR	3642273	Identifier	resoff		3641952	1					
ANR	3642274	MemberAccess	ni . rnID		3641952	1					
ANR	3642275	Identifier	ni		3641952	0					
ANR	3642276	Identifier	rnID		3641952	1					
ANR	3642277	ExpressionStatement	"r_list_append ( res -> entry , ren )"	303:3:6595:6626	3641952	7	True				
ANR	3642278	CallExpression	"r_list_append ( res -> entry , ren )"		3641952	0					
ANR	3642279	Callee	r_list_append		3641952	0					
ANR	3642280	Identifier	r_list_append		3641952	0					
ANR	3642281	ArgumentList	res -> entry		3641952	1					
ANR	3642282	Argument	res -> entry		3641952	0					
ANR	3642283	PtrMemberAccess	res -> entry		3641952	0					
ANR	3642284	Identifier	res		3641952	0					
ANR	3642285	Identifier	entry		3641952	1					
ANR	3642286	Argument	ren		3641952	1					
ANR	3642287	Identifier	ren		3641952	0					
ANR	3642288	ExpressionStatement	off += sizeof ( NE_image_nameinfo_entry )	304:3:6631:6670	3641952	8	True				
ANR	3642289	AssignmentExpression	off += sizeof ( NE_image_nameinfo_entry )		3641952	0		+=			
ANR	3642290	Identifier	off		3641952	0					
ANR	3642291	SizeofExpression	sizeof ( NE_image_nameinfo_entry )		3641952	1					
ANR	3642292	Sizeof	sizeof		3641952	0					
ANR	3642293	SizeofOperand	NE_image_nameinfo_entry		3641952	1					
ANR	3642294	ExpressionStatement	"r_list_append ( bin -> resources , res )"	306:2:6678:6713	3641952	10	True				
ANR	3642295	CallExpression	"r_list_append ( bin -> resources , res )"		3641952	0					
ANR	3642296	Callee	r_list_append		3641952	0					
ANR	3642297	Identifier	r_list_append		3641952	0					
ANR	3642298	ArgumentList	bin -> resources		3641952	1					
ANR	3642299	Argument	bin -> resources		3641952	0					
ANR	3642300	PtrMemberAccess	bin -> resources		3641952	0					
ANR	3642301	Identifier	bin		3641952	0					
ANR	3642302	Identifier	resources		3641952	1					
ANR	3642303	Argument	res		3641952	1					
ANR	3642304	Identifier	res		3641952	0					
ANR	3642305	ReturnStatement	return true ;	308:1:6719:6730	3641952	5	True				
ANR	3642306	Identifier	true		3641952	0					
ANR	3642307	ReturnType	static bool		3641952	1					
ANR	3642308	Identifier	__ne_get_resources		3641952	2					
ANR	3642309	ParameterList	r_bin_ne_obj_t * bin		3641952	3					
ANR	3642310	Parameter	r_bin_ne_obj_t * bin	260:31:5234:5252	3641952	0	True				
ANR	3642311	ParameterType	r_bin_ne_obj_t *		3641952	0					
ANR	3642312	Identifier	bin		3641952	1					
ANR	3642313	CFGEntryNode	ENTRY		3641952		True				
ANR	3642314	CFGExitNode	EXIT		3641952		True				
ANR	3642315	Symbol	resoff		3641952						
ANR	3642316	Symbol	r_ne_resource_entry		3641952						
ANR	3642317	Symbol	* ren		3641952						
ANR	3642318	Symbol	bin		3641952						
ANR	3642319	Symbol	bin -> buf		3641952						
ANR	3642320	Symbol	* bin -> ne_header		3641952						
ANR	3642321	Symbol	* res		3641952						
ANR	3642322	Symbol	r_str_newf		3641952						
ANR	3642323	Symbol	ren -> name		3641952						
ANR	3642324	Symbol	* bin		3641952						
ANR	3642325	Symbol	ni . rnID		3641952						
ANR	3642326	Symbol	~0x8000		3641952						
ANR	3642327	Symbol	__resource_type_str		3641952						
ANR	3642328	Symbol	res -> entry		3641952						
ANR	3642329	Symbol	ren -> size		3641952						
ANR	3642330	Symbol	bin -> header_offset		3641952						
ANR	3642331	Symbol	__read_nonnull_str_at		3641952						
ANR	3642332	Symbol	ren		3641952						
ANR	3642333	Symbol	* * bin		3641952						
ANR	3642334	Symbol	r_buf_read_le16_at		3641952						
ANR	3642335	Symbol	r_ne_resource		3641952						
ANR	3642336	Symbol	ni . rnLength		3641952						
ANR	3642337	Symbol	res		3641952						
ANR	3642338	Symbol	& ni		3641952						
ANR	3642339	Symbol	r_list_newf		3641952						
ANR	3642340	Symbol	bin -> ne_header -> ResTableOffset		3641952						
ANR	3642341	Symbol	i		3641952						
ANR	3642342	Symbol	ni . rnOffset		3641952						
ANR	3642343	Symbol	res -> name		3641952						
ANR	3642344	Symbol	ti . rtTypeID		3641952						
ANR	3642345	Symbol	ren -> offset		3641952						
ANR	3642346	Symbol	__free_resource		3641952						
ANR	3642347	Symbol	bin -> ne_header		3641952						
ANR	3642348	Symbol	off		3641952						
ANR	3642349	Symbol	R_NEW0		3641952						
ANR	3642350	Symbol	bin -> resources		3641952						
ANR	3642351	Symbol	ti		3641952						
ANR	3642352	Symbol	true		3641952						
ANR	3642353	Symbol	ni		3641952						
ANR	3642354	Symbol	alignment		3641952						
ANR	3642355	Symbol	__free_resource_entry		3641952						
ANR	3642356	Symbol	ti . rtResourceCount		3641952						
ANR	3642357	Symbol	& ti		3641952						
ANR	3642358	Function	r_bin_ne_get_imports	311:0:6735:7404							
ANR	3642359	FunctionDef	r_bin_ne_get_imports (r_bin_ne_obj_t * bin)		3642358	0					
ANR	3642360	CompoundStatement		311:49:6784:7404	3642358	0					
ANR	3642361	IdentifierDeclStatement	RList * imports = r_list_newf ( free ) ;	312:1:6787:6822	3642358	0	True				
ANR	3642362	IdentifierDecl	* imports = r_list_newf ( free )		3642358	0					
ANR	3642363	IdentifierDeclType	RList *		3642358	0					
ANR	3642364	Identifier	imports		3642358	1					
ANR	3642365	AssignmentExpression	* imports = r_list_newf ( free )		3642358	2		=			
ANR	3642366	Identifier	imports		3642358	0					
ANR	3642367	CallExpression	r_list_newf ( free )		3642358	1					
ANR	3642368	Callee	r_list_newf		3642358	0					
ANR	3642369	Identifier	r_list_newf		3642358	0					
ANR	3642370	ArgumentList	free		3642358	1					
ANR	3642371	Argument	free		3642358	0					
ANR	3642372	Identifier	free		3642358	0					
ANR	3642373	IfStatement	if ( ! imports )		3642358	1					
ANR	3642374	Condition	! imports	313:5:6829:6836	3642358	0	True				
ANR	3642375	UnaryOperationExpression	! imports		3642358	0					
ANR	3642376	UnaryOperator	!		3642358	0					
ANR	3642377	Identifier	imports		3642358	1					
ANR	3642378	CompoundStatement		3:15:54:54	3642358	1					
ANR	3642379	ReturnStatement	return NULL ;	314:2:6843:6854	3642358	0	True				
ANR	3642380	Identifier	NULL		3642358	0					
ANR	3642381	IdentifierDeclStatement	ut16 off = bin -> ne_header -> ImportNameTable + bin -> header_offset + 1 ;	316:1:6860:6927	3642358	2	True				
ANR	3642382	IdentifierDecl	off = bin -> ne_header -> ImportNameTable + bin -> header_offset + 1		3642358	0					
ANR	3642383	IdentifierDeclType	ut16		3642358	0					
ANR	3642384	Identifier	off		3642358	1					
ANR	3642385	AssignmentExpression	off = bin -> ne_header -> ImportNameTable + bin -> header_offset + 1		3642358	2		=			
ANR	3642386	Identifier	off		3642358	0					
ANR	3642387	AdditiveExpression	bin -> ne_header -> ImportNameTable + bin -> header_offset + 1		3642358	1		+			
ANR	3642388	PtrMemberAccess	bin -> ne_header -> ImportNameTable		3642358	0					
ANR	3642389	PtrMemberAccess	bin -> ne_header		3642358	0					
ANR	3642390	Identifier	bin		3642358	0					
ANR	3642391	Identifier	ne_header		3642358	1					
ANR	3642392	Identifier	ImportNameTable		3642358	1					
ANR	3642393	AdditiveExpression	bin -> header_offset + 1		3642358	1		+			
ANR	3642394	PtrMemberAccess	bin -> header_offset		3642358	0					
ANR	3642395	Identifier	bin		3642358	0					
ANR	3642396	Identifier	header_offset		3642358	1					
ANR	3642397	PrimaryExpression	1		3642358	1					
ANR	3642398	IdentifierDeclStatement	int i ;	317:1:6930:6935	3642358	3	True				
ANR	3642399	IdentifierDecl	i		3642358	0					
ANR	3642400	IdentifierDeclType	int		3642358	0					
ANR	3642401	Identifier	i		3642358	1					
ANR	3642402	ForStatement	for ( i = 0 ; i < bin -> ne_header -> ModRefs ; i ++ )		3642358	4					
ANR	3642403	ForInit	i = 0 ;	318:6:6943:6948	3642358	0	True				
ANR	3642404	AssignmentExpression	i = 0		3642358	0		=			
ANR	3642405	Identifier	i		3642358	0					
ANR	3642406	PrimaryExpression	0		3642358	1					
ANR	3642407	Condition	i < bin -> ne_header -> ModRefs	318:13:6950:6976	3642358	1	True				
ANR	3642408	RelationalExpression	i < bin -> ne_header -> ModRefs		3642358	0		<			
ANR	3642409	Identifier	i		3642358	0					
ANR	3642410	PtrMemberAccess	bin -> ne_header -> ModRefs		3642358	1					
ANR	3642411	PtrMemberAccess	bin -> ne_header		3642358	0					
ANR	3642412	Identifier	bin		3642358	0					
ANR	3642413	Identifier	ne_header		3642358	1					
ANR	3642414	Identifier	ModRefs		3642358	1					
ANR	3642415	PostIncDecOperationExpression	i ++	318:42:6979:6981	3642358	2	True				
ANR	3642416	Identifier	i		3642358	0					
ANR	3642417	IncDec	++		3642358	1					
ANR	3642418	CompoundStatement		18:2:351:385	3642358	3					
ANR	3642419	IdentifierDeclStatement	RBinImport * imp = R_NEW0 ( RBinImport ) ;	319:2:6988:7025	3642358	0	True				
ANR	3642420	IdentifierDecl	* imp = R_NEW0 ( RBinImport )		3642358	0					
ANR	3642421	IdentifierDeclType	RBinImport *		3642358	0					
ANR	3642422	Identifier	imp		3642358	1					
ANR	3642423	AssignmentExpression	* imp = R_NEW0 ( RBinImport )		3642358	2		=			
ANR	3642424	Identifier	imp		3642358	0					
ANR	3642425	CallExpression	R_NEW0 ( RBinImport )		3642358	1					
ANR	3642426	Callee	R_NEW0		3642358	0					
ANR	3642427	Identifier	R_NEW0		3642358	0					
ANR	3642428	ArgumentList	RBinImport		3642358	1					
ANR	3642429	Argument	RBinImport		3642358	0					
ANR	3642430	Identifier	RBinImport		3642358	0					
ANR	3642431	IfStatement	if ( ! imp )		3642358	1					
ANR	3642432	Condition	! imp	320:6:7033:7036	3642358	0	True				
ANR	3642433	UnaryOperationExpression	! imp		3642358	0					
ANR	3642434	UnaryOperator	!		3642358	0					
ANR	3642435	Identifier	imp		3642358	1					
ANR	3642436	CompoundStatement		10:12:254:254	3642358	1					
ANR	3642437	BreakStatement	break ;	321:3:7044:7049	3642358	0	True				
ANR	3642438	IdentifierDeclStatement	"ut8 sz = r_buf_read8_at ( bin -> buf , off ) ;"	323:2:7057:7096	3642358	2	True				
ANR	3642439	IdentifierDecl	"sz = r_buf_read8_at ( bin -> buf , off )"		3642358	0					
ANR	3642440	IdentifierDeclType	ut8		3642358	0					
ANR	3642441	Identifier	sz		3642358	1					
ANR	3642442	AssignmentExpression	"sz = r_buf_read8_at ( bin -> buf , off )"		3642358	2		=			
ANR	3642443	Identifier	sz		3642358	0					
ANR	3642444	CallExpression	"r_buf_read8_at ( bin -> buf , off )"		3642358	1					
ANR	3642445	Callee	r_buf_read8_at		3642358	0					
ANR	3642446	Identifier	r_buf_read8_at		3642358	0					
ANR	3642447	ArgumentList	bin -> buf		3642358	1					
ANR	3642448	Argument	bin -> buf		3642358	0					
ANR	3642449	PtrMemberAccess	bin -> buf		3642358	0					
ANR	3642450	Identifier	bin		3642358	0					
ANR	3642451	Identifier	buf		3642358	1					
ANR	3642452	Argument	off		3642358	1					
ANR	3642453	Identifier	off		3642358	0					
ANR	3642454	IfStatement	if ( ! sz )		3642358	3					
ANR	3642455	Condition	! sz	324:6:7104:7106	3642358	0	True				
ANR	3642456	UnaryOperationExpression	! sz		3642358	0					
ANR	3642457	UnaryOperator	!		3642358	0					
ANR	3642458	Identifier	sz		3642358	1					
ANR	3642459	CompoundStatement		14:11:324:324	3642358	1					
ANR	3642460	BreakStatement	break ;	325:3:7114:7119	3642358	0	True				
ANR	3642461	ExpressionStatement	off ++	327:2:7127:7132	3642358	4	True				
ANR	3642462	PostIncDecOperationExpression	off ++		3642358	0					
ANR	3642463	Identifier	off		3642358	0					
ANR	3642464	IncDec	++		3642358	1					
ANR	3642465	IdentifierDeclStatement	char * name = malloc ( ( ut64 ) sz + 1 ) ;	328:2:7136:7170	3642358	5	True				
ANR	3642466	IdentifierDecl	* name = malloc ( ( ut64 ) sz + 1 )		3642358	0					
ANR	3642467	IdentifierDeclType	char *		3642358	0					
ANR	3642468	Identifier	name		3642358	1					
ANR	3642469	AssignmentExpression	* name = malloc ( ( ut64 ) sz + 1 )		3642358	2		=			
ANR	3642470	Identifier	name		3642358	0					
ANR	3642471	CallExpression	malloc ( ( ut64 ) sz + 1 )		3642358	1					
ANR	3642472	Callee	malloc		3642358	0					
ANR	3642473	Identifier	malloc		3642358	0					
ANR	3642474	ArgumentList	( ut64 ) sz + 1		3642358	1					
ANR	3642475	Argument	( ut64 ) sz + 1		3642358	0					
ANR	3642476	AdditiveExpression	( ut64 ) sz + 1		3642358	0		+			
ANR	3642477	CastExpression	( ut64 ) sz		3642358	0					
ANR	3642478	CastTarget	ut64		3642358	0					
ANR	3642479	Identifier	sz		3642358	1					
ANR	3642480	PrimaryExpression	1		3642358	1					
ANR	3642481	IfStatement	if ( ! name )		3642358	6					
ANR	3642482	Condition	! name	329:6:7178:7182	3642358	0	True				
ANR	3642483	UnaryOperationExpression	! name		3642358	0					
ANR	3642484	UnaryOperator	!		3642358	0					
ANR	3642485	Identifier	name		3642358	1					
ANR	3642486	CompoundStatement		19:13:400:400	3642358	1					
ANR	3642487	BreakStatement	break ;	330:3:7190:7195	3642358	0	True				
ANR	3642488	ExpressionStatement	"r_buf_read_at ( bin -> buf , off , ( ut8 * ) name , sz )"	332:2:7203:7249	3642358	7	True				
ANR	3642489	CallExpression	"r_buf_read_at ( bin -> buf , off , ( ut8 * ) name , sz )"		3642358	0					
ANR	3642490	Callee	r_buf_read_at		3642358	0					
ANR	3642491	Identifier	r_buf_read_at		3642358	0					
ANR	3642492	ArgumentList	bin -> buf		3642358	1					
ANR	3642493	Argument	bin -> buf		3642358	0					
ANR	3642494	PtrMemberAccess	bin -> buf		3642358	0					
ANR	3642495	Identifier	bin		3642358	0					
ANR	3642496	Identifier	buf		3642358	1					
ANR	3642497	Argument	off		3642358	1					
ANR	3642498	Identifier	off		3642358	0					
ANR	3642499	Argument	( ut8 * ) name		3642358	2					
ANR	3642500	CastExpression	( ut8 * ) name		3642358	0					
ANR	3642501	CastTarget	ut8 *		3642358	0					
ANR	3642502	Identifier	name		3642358	1					
ANR	3642503	Argument	sz		3642358	3					
ANR	3642504	Identifier	sz		3642358	0					
ANR	3642505	ExpressionStatement	name [ sz ] = '\\0'	333:2:7253:7268	3642358	8	True				
ANR	3642506	AssignmentExpression	name [ sz ] = '\\0'		3642358	0		=			
ANR	3642507	ArrayIndexing	name [ sz ]		3642358	0					
ANR	3642508	Identifier	name		3642358	0					
ANR	3642509	Identifier	sz		3642358	1					
ANR	3642510	PrimaryExpression	'\\0'		3642358	1					
ANR	3642511	ExpressionStatement	imp -> name = name	334:2:7272:7288	3642358	9	True				
ANR	3642512	AssignmentExpression	imp -> name = name		3642358	0		=			
ANR	3642513	PtrMemberAccess	imp -> name		3642358	0					
ANR	3642514	Identifier	imp		3642358	0					
ANR	3642515	Identifier	name		3642358	1					
ANR	3642516	Identifier	name		3642358	1					
ANR	3642517	ExpressionStatement	imp -> ordinal = i + 1	335:2:7292:7312	3642358	10	True				
ANR	3642518	AssignmentExpression	imp -> ordinal = i + 1		3642358	0		=			
ANR	3642519	PtrMemberAccess	imp -> ordinal		3642358	0					
ANR	3642520	Identifier	imp		3642358	0					
ANR	3642521	Identifier	ordinal		3642358	1					
ANR	3642522	AdditiveExpression	i + 1		3642358	1		+			
ANR	3642523	Identifier	i		3642358	0					
ANR	3642524	PrimaryExpression	1		3642358	1					
ANR	3642525	ExpressionStatement	"r_list_append ( imports , imp )"	336:2:7316:7344	3642358	11	True				
ANR	3642526	CallExpression	"r_list_append ( imports , imp )"		3642358	0					
ANR	3642527	Callee	r_list_append		3642358	0					
ANR	3642528	Identifier	r_list_append		3642358	0					
ANR	3642529	ArgumentList	imports		3642358	1					
ANR	3642530	Argument	imports		3642358	0					
ANR	3642531	Identifier	imports		3642358	0					
ANR	3642532	Argument	imp		3642358	1					
ANR	3642533	Identifier	imp		3642358	0					
ANR	3642534	ExpressionStatement	off += sz	337:2:7348:7357	3642358	12	True				
ANR	3642535	AssignmentExpression	off += sz		3642358	0		+=			
ANR	3642536	Identifier	off		3642358	0					
ANR	3642537	Identifier	sz		3642358	1					
ANR	3642538	ExpressionStatement	bin -> imports = imports	339:1:7363:7385	3642358	5	True				
ANR	3642539	AssignmentExpression	bin -> imports = imports		3642358	0		=			
ANR	3642540	PtrMemberAccess	bin -> imports		3642358	0					
ANR	3642541	Identifier	bin		3642358	0					
ANR	3642542	Identifier	imports		3642358	1					
ANR	3642543	Identifier	imports		3642358	1					
ANR	3642544	ReturnStatement	return imports ;	340:1:7388:7402	3642358	6	True				
ANR	3642545	Identifier	imports		3642358	0					
ANR	3642546	ReturnType	RList *		3642358	1					
ANR	3642547	Identifier	r_bin_ne_get_imports		3642358	2					
ANR	3642548	ParameterList	r_bin_ne_obj_t * bin		3642358	3					
ANR	3642549	Parameter	r_bin_ne_obj_t * bin	311:28:6763:6781	3642358	0	True				
ANR	3642550	ParameterType	r_bin_ne_obj_t *		3642358	0					
ANR	3642551	Identifier	bin		3642358	1					
ANR	3642552	CFGEntryNode	ENTRY		3642358		True				
ANR	3642553	CFGExitNode	EXIT		3642358		True				
ANR	3642554	Symbol	bin		3642358						
ANR	3642555	Symbol	bin -> buf		3642358						
ANR	3642556	Symbol	bin -> imports		3642358						
ANR	3642557	Symbol	bin -> ne_header -> ImportNameTable		3642358						
ANR	3642558	Symbol	* bin -> ne_header		3642358						
ANR	3642559	Symbol	* imp		3642358						
ANR	3642560	Symbol	imp		3642358						
ANR	3642561	Symbol	* bin		3642358						
ANR	3642562	Symbol	* sz		3642358						
ANR	3642563	Symbol	imp -> ordinal		3642358						
ANR	3642564	Symbol	bin -> header_offset		3642358						
ANR	3642565	Symbol	* * bin		3642358						
ANR	3642566	Symbol	free		3642358						
ANR	3642567	Symbol	bin -> ne_header -> ModRefs		3642358						
ANR	3642568	Symbol	RBinImport		3642358						
ANR	3642569	Symbol	* name		3642358						
ANR	3642570	Symbol	malloc		3642358						
ANR	3642571	Symbol	imports		3642358						
ANR	3642572	Symbol	NULL		3642358						
ANR	3642573	Symbol	r_list_newf		3642358						
ANR	3642574	Symbol	imp -> name		3642358						
ANR	3642575	Symbol	r_buf_read8_at		3642358						
ANR	3642576	Symbol	sz		3642358						
ANR	3642577	Symbol	i		3642358						
ANR	3642578	Symbol	bin -> ne_header		3642358						
ANR	3642579	Symbol	off		3642358						
ANR	3642580	Symbol	R_NEW0		3642358						
ANR	3642581	Symbol	name		3642358						
ANR	3642582	Function	r_bin_ne_get_entrypoints	343:0:7407:8915							
ANR	3642583	FunctionDef	r_bin_ne_get_entrypoints (r_bin_ne_obj_t * bin)		3642582	0					
ANR	3642584	CompoundStatement		343:53:7460:8915	3642582	0					
ANR	3642585	IdentifierDeclStatement	RList * entries = r_list_newf ( free ) ;	344:1:7463:7498	3642582	0	True				
ANR	3642586	IdentifierDecl	* entries = r_list_newf ( free )		3642582	0					
ANR	3642587	IdentifierDeclType	RList *		3642582	0					
ANR	3642588	Identifier	entries		3642582	1					
ANR	3642589	AssignmentExpression	* entries = r_list_newf ( free )		3642582	2		=			
ANR	3642590	Identifier	entries		3642582	0					
ANR	3642591	CallExpression	r_list_newf ( free )		3642582	1					
ANR	3642592	Callee	r_list_newf		3642582	0					
ANR	3642593	Identifier	r_list_newf		3642582	0					
ANR	3642594	ArgumentList	free		3642582	1					
ANR	3642595	Argument	free		3642582	0					
ANR	3642596	Identifier	free		3642582	0					
ANR	3642597	IfStatement	if ( ! entries )		3642582	1					
ANR	3642598	Condition	! entries	345:5:7505:7512	3642582	0	True				
ANR	3642599	UnaryOperationExpression	! entries		3642582	0					
ANR	3642600	UnaryOperator	!		3642582	0					
ANR	3642601	Identifier	entries		3642582	1					
ANR	3642602	CompoundStatement		3:15:54:54	3642582	1					
ANR	3642603	ReturnStatement	return NULL ;	346:2:7519:7530	3642582	0	True				
ANR	3642604	Identifier	NULL		3642582	0					
ANR	3642605	IdentifierDeclStatement	RBinAddr * entry = R_NEW0 ( RBinAddr ) ;	348:1:7536:7571	3642582	2	True				
ANR	3642606	IdentifierDecl	* entry = R_NEW0 ( RBinAddr )		3642582	0					
ANR	3642607	IdentifierDeclType	RBinAddr *		3642582	0					
ANR	3642608	Identifier	entry		3642582	1					
ANR	3642609	AssignmentExpression	* entry = R_NEW0 ( RBinAddr )		3642582	2		=			
ANR	3642610	Identifier	entry		3642582	0					
ANR	3642611	CallExpression	R_NEW0 ( RBinAddr )		3642582	1					
ANR	3642612	Callee	R_NEW0		3642582	0					
ANR	3642613	Identifier	R_NEW0		3642582	0					
ANR	3642614	ArgumentList	RBinAddr		3642582	1					
ANR	3642615	Argument	RBinAddr		3642582	0					
ANR	3642616	Identifier	RBinAddr		3642582	0					
ANR	3642617	IfStatement	if ( ! entry )		3642582	3					
ANR	3642618	Condition	! entry	349:5:7578:7583	3642582	0	True				
ANR	3642619	UnaryOperationExpression	! entry		3642582	0					
ANR	3642620	UnaryOperator	!		3642582	0					
ANR	3642621	Identifier	entry		3642582	1					
ANR	3642622	CompoundStatement		7:13:125:125	3642582	1					
ANR	3642623	ExpressionStatement	r_list_free ( entries )	350:2:7590:7611	3642582	0	True				
ANR	3642624	CallExpression	r_list_free ( entries )		3642582	0					
ANR	3642625	Callee	r_list_free		3642582	0					
ANR	3642626	Identifier	r_list_free		3642582	0					
ANR	3642627	ArgumentList	entries		3642582	1					
ANR	3642628	Argument	entries		3642582	0					
ANR	3642629	Identifier	entries		3642582	0					
ANR	3642630	ReturnStatement	return NULL ;	351:2:7615:7626	3642582	1	True				
ANR	3642631	Identifier	NULL		3642582	0					
ANR	3642632	IdentifierDeclStatement	RList * segments = r_bin_ne_get_segments ( bin ) ;	353:1:7632:7677	3642582	4	True				
ANR	3642633	IdentifierDecl	* segments = r_bin_ne_get_segments ( bin )		3642582	0					
ANR	3642634	IdentifierDeclType	RList *		3642582	0					
ANR	3642635	Identifier	segments		3642582	1					
ANR	3642636	AssignmentExpression	* segments = r_bin_ne_get_segments ( bin )		3642582	2		=			
ANR	3642637	Identifier	segments		3642582	0					
ANR	3642638	CallExpression	r_bin_ne_get_segments ( bin )		3642582	1					
ANR	3642639	Callee	r_bin_ne_get_segments		3642582	0					
ANR	3642640	Identifier	r_bin_ne_get_segments		3642582	0					
ANR	3642641	ArgumentList	bin		3642582	1					
ANR	3642642	Argument	bin		3642582	0					
ANR	3642643	Identifier	bin		3642582	0					
ANR	3642644	IfStatement	if ( ! segments )		3642582	5					
ANR	3642645	Condition	! segments	354:5:7684:7692	3642582	0	True				
ANR	3642646	UnaryOperationExpression	! segments		3642582	0					
ANR	3642647	UnaryOperator	!		3642582	0					
ANR	3642648	Identifier	segments		3642582	1					
ANR	3642649	CompoundStatement		12:16:234:234	3642582	1					
ANR	3642650	ExpressionStatement	r_list_free ( entries )	355:2:7699:7720	3642582	0	True				
ANR	3642651	CallExpression	r_list_free ( entries )		3642582	0					
ANR	3642652	Callee	r_list_free		3642582	0					
ANR	3642653	Identifier	r_list_free		3642582	0					
ANR	3642654	ArgumentList	entries		3642582	1					
ANR	3642655	Argument	entries		3642582	0					
ANR	3642656	Identifier	entries		3642582	0					
ANR	3642657	ReturnStatement	return NULL ;	356:2:7724:7735	3642582	1	True				
ANR	3642658	Identifier	NULL		3642582	0					
ANR	3642659	ExpressionStatement	entry -> bits = 16	358:1:7741:7757	3642582	6	True				
ANR	3642660	AssignmentExpression	entry -> bits = 16		3642582	0		=			
ANR	3642661	PtrMemberAccess	entry -> bits		3642582	0					
ANR	3642662	Identifier	entry		3642582	0					
ANR	3642663	Identifier	bits		3642582	1					
ANR	3642664	PrimaryExpression	16		3642582	1					
ANR	3642665	ExpressionStatement	"entry -> paddr = bin -> ne_header -> ipEntryPoint + ( ( RBinSection * ) r_list_get_n ( segments , bin -> ne_header -> csEntryPoint - 1 ) ) -> paddr"	359:1:7760:7887	3642582	7	True				
ANR	3642666	AssignmentExpression	"entry -> paddr = bin -> ne_header -> ipEntryPoint + ( ( RBinSection * ) r_list_get_n ( segments , bin -> ne_header -> csEntryPoint - 1 ) ) -> paddr"		3642582	0		=			
ANR	3642667	PtrMemberAccess	entry -> paddr		3642582	0					
ANR	3642668	Identifier	entry		3642582	0					
ANR	3642669	Identifier	paddr		3642582	1					
ANR	3642670	AdditiveExpression	"bin -> ne_header -> ipEntryPoint + ( ( RBinSection * ) r_list_get_n ( segments , bin -> ne_header -> csEntryPoint - 1 ) ) -> paddr"		3642582	1		+			
ANR	3642671	PtrMemberAccess	bin -> ne_header -> ipEntryPoint		3642582	0					
ANR	3642672	PtrMemberAccess	bin -> ne_header		3642582	0					
ANR	3642673	Identifier	bin		3642582	0					
ANR	3642674	Identifier	ne_header		3642582	1					
ANR	3642675	Identifier	ipEntryPoint		3642582	1					
ANR	3642676	PtrMemberAccess	"( ( RBinSection * ) r_list_get_n ( segments , bin -> ne_header -> csEntryPoint - 1 ) ) -> paddr"		3642582	1					
ANR	3642677	CastExpression	"( RBinSection * ) r_list_get_n ( segments , bin -> ne_header -> csEntryPoint - 1 )"		3642582	0					
ANR	3642678	CastTarget	RBinSection *		3642582	0					
ANR	3642679	CallExpression	"r_list_get_n ( segments , bin -> ne_header -> csEntryPoint - 1 )"		3642582	1					
ANR	3642680	Callee	r_list_get_n		3642582	0					
ANR	3642681	Identifier	r_list_get_n		3642582	0					
ANR	3642682	ArgumentList	segments		3642582	1					
ANR	3642683	Argument	segments		3642582	0					
ANR	3642684	Identifier	segments		3642582	0					
ANR	3642685	Argument	bin -> ne_header -> csEntryPoint - 1		3642582	1					
ANR	3642686	AdditiveExpression	bin -> ne_header -> csEntryPoint - 1		3642582	0		-			
ANR	3642687	PtrMemberAccess	bin -> ne_header -> csEntryPoint		3642582	0					
ANR	3642688	PtrMemberAccess	bin -> ne_header		3642582	0					
ANR	3642689	Identifier	bin		3642582	0					
ANR	3642690	Identifier	ne_header		3642582	1					
ANR	3642691	Identifier	csEntryPoint		3642582	1					
ANR	3642692	PrimaryExpression	1		3642582	1					
ANR	3642693	Identifier	paddr		3642582	1					
ANR	3642694	ExpressionStatement	"r_list_append ( entries , entry )"	360:1:7890:7920	3642582	8	True				
ANR	3642695	CallExpression	"r_list_append ( entries , entry )"		3642582	0					
ANR	3642696	Callee	r_list_append		3642582	0					
ANR	3642697	Identifier	r_list_append		3642582	0					
ANR	3642698	ArgumentList	entries		3642582	1					
ANR	3642699	Argument	entries		3642582	0					
ANR	3642700	Identifier	entries		3642582	0					
ANR	3642701	Argument	entry		3642582	1					
ANR	3642702	Identifier	entry		3642582	0					
ANR	3642703	IdentifierDeclStatement	int off = 0 ;	362:1:7925:7936	3642582	9	True				
ANR	3642704	IdentifierDecl	off = 0		3642582	0					
ANR	3642705	IdentifierDeclType	int		3642582	0					
ANR	3642706	Identifier	off		3642582	1					
ANR	3642707	AssignmentExpression	off = 0		3642582	2		=			
ANR	3642708	Identifier	off		3642582	0					
ANR	3642709	PrimaryExpression	0		3642582	1					
ANR	3642710	WhileStatement	while ( off < bin -> ne_header -> EntryTableLength )		3642582	10					
ANR	3642711	Condition	off < bin -> ne_header -> EntryTableLength	363:8:7946:7983	3642582	0	True				
ANR	3642712	RelationalExpression	off < bin -> ne_header -> EntryTableLength		3642582	0		<			
ANR	3642713	Identifier	off		3642582	0					
ANR	3642714	PtrMemberAccess	bin -> ne_header -> EntryTableLength		3642582	1					
ANR	3642715	PtrMemberAccess	bin -> ne_header		3642582	0					
ANR	3642716	Identifier	bin		3642582	0					
ANR	3642717	Identifier	ne_header		3642582	1					
ANR	3642718	Identifier	EntryTableLength		3642582	1					
ANR	3642719	CompoundStatement		29:2:695:700	3642582	1					
ANR	3642720	IdentifierDeclStatement	ut8 bundle_length = * ( ut8 * ) ( bin -> entry_table + off ) ;	364:2:7990:8042	3642582	0	True				
ANR	3642721	IdentifierDecl	bundle_length = * ( ut8 * ) ( bin -> entry_table + off )		3642582	0					
ANR	3642722	IdentifierDeclType	ut8		3642582	0					
ANR	3642723	Identifier	bundle_length		3642582	1					
ANR	3642724	AssignmentExpression	bundle_length = * ( ut8 * ) ( bin -> entry_table + off )		3642582	2		=			
ANR	3642725	Identifier	bundle_length		3642582	0					
ANR	3642726	UnaryOperationExpression	* ( ut8 * ) ( bin -> entry_table + off )		3642582	1					
ANR	3642727	UnaryOperator	*		3642582	0					
ANR	3642728	CastExpression	( ut8 * ) ( bin -> entry_table + off )		3642582	1					
ANR	3642729	CastTarget	ut8 *		3642582	0					
ANR	3642730	AdditiveExpression	bin -> entry_table + off		3642582	1		+			
ANR	3642731	PtrMemberAccess	bin -> entry_table		3642582	0					
ANR	3642732	Identifier	bin		3642582	0					
ANR	3642733	Identifier	entry_table		3642582	1					
ANR	3642734	Identifier	off		3642582	1					
ANR	3642735	IfStatement	if ( ! bundle_length )		3642582	1					
ANR	3642736	Condition	! bundle_length	365:6:8050:8063	3642582	0	True				
ANR	3642737	UnaryOperationExpression	! bundle_length		3642582	0					
ANR	3642738	UnaryOperator	!		3642582	0					
ANR	3642739	Identifier	bundle_length		3642582	1					
ANR	3642740	CompoundStatement		23:22:605:605	3642582	1					
ANR	3642741	BreakStatement	break ;	366:3:8071:8076	3642582	0	True				
ANR	3642742	ExpressionStatement	off ++	368:2:8084:8089	3642582	2	True				
ANR	3642743	PostIncDecOperationExpression	off ++		3642582	0					
ANR	3642744	Identifier	off		3642582	0					
ANR	3642745	IncDec	++		3642582	1					
ANR	3642746	IdentifierDeclStatement	ut8 bundle_type = * ( ut8 * ) ( bin -> entry_table + off ) ;	369:2:8093:8143	3642582	3	True				
ANR	3642747	IdentifierDecl	bundle_type = * ( ut8 * ) ( bin -> entry_table + off )		3642582	0					
ANR	3642748	IdentifierDeclType	ut8		3642582	0					
ANR	3642749	Identifier	bundle_type		3642582	1					
ANR	3642750	AssignmentExpression	bundle_type = * ( ut8 * ) ( bin -> entry_table + off )		3642582	2		=			
ANR	3642751	Identifier	bundle_type		3642582	0					
ANR	3642752	UnaryOperationExpression	* ( ut8 * ) ( bin -> entry_table + off )		3642582	1					
ANR	3642753	UnaryOperator	*		3642582	0					
ANR	3642754	CastExpression	( ut8 * ) ( bin -> entry_table + off )		3642582	1					
ANR	3642755	CastTarget	ut8 *		3642582	0					
ANR	3642756	AdditiveExpression	bin -> entry_table + off		3642582	1		+			
ANR	3642757	PtrMemberAccess	bin -> entry_table		3642582	0					
ANR	3642758	Identifier	bin		3642582	0					
ANR	3642759	Identifier	entry_table		3642582	1					
ANR	3642760	Identifier	off		3642582	1					
ANR	3642761	ExpressionStatement	off ++	370:2:8147:8152	3642582	4	True				
ANR	3642762	PostIncDecOperationExpression	off ++		3642582	0					
ANR	3642763	Identifier	off		3642582	0					
ANR	3642764	IncDec	++		3642582	1					
ANR	3642765	IdentifierDeclStatement	int i ;	371:2:8156:8161	3642582	5	True				
ANR	3642766	IdentifierDecl	i		3642582	0					
ANR	3642767	IdentifierDeclType	int		3642582	0					
ANR	3642768	Identifier	i		3642582	1					
ANR	3642769	ForStatement	for ( i = 0 ; i < bundle_length ; i ++ )		3642582	6					
ANR	3642770	ForInit	i = 0 ;	372:7:8170:8175	3642582	0	True				
ANR	3642771	AssignmentExpression	i = 0		3642582	0		=			
ANR	3642772	Identifier	i		3642582	0					
ANR	3642773	PrimaryExpression	0		3642582	1					
ANR	3642774	Condition	i < bundle_length	372:14:8177:8193	3642582	1	True				
ANR	3642775	RelationalExpression	i < bundle_length		3642582	0		<			
ANR	3642776	Identifier	i		3642582	0					
ANR	3642777	Identifier	bundle_length		3642582	1					
ANR	3642778	PostIncDecOperationExpression	i ++	372:33:8196:8198	3642582	2	True				
ANR	3642779	Identifier	i		3642582	0					
ANR	3642780	IncDec	++		3642582	1					
ANR	3642781	CompoundStatement		30:38:740:740	3642582	3					
ANR	3642782	ExpressionStatement	entry = R_NEW0 ( RBinAddr )	373:3:8206:8231	3642582	0	True				
ANR	3642783	AssignmentExpression	entry = R_NEW0 ( RBinAddr )		3642582	0		=			
ANR	3642784	Identifier	entry		3642582	0					
ANR	3642785	CallExpression	R_NEW0 ( RBinAddr )		3642582	1					
ANR	3642786	Callee	R_NEW0		3642582	0					
ANR	3642787	Identifier	R_NEW0		3642582	0					
ANR	3642788	ArgumentList	RBinAddr		3642582	1					
ANR	3642789	Argument	RBinAddr		3642582	0					
ANR	3642790	Identifier	RBinAddr		3642582	0					
ANR	3642791	IfStatement	if ( ! entry )		3642582	1					
ANR	3642792	Condition	! entry	374:7:8240:8245	3642582	0	True				
ANR	3642793	UnaryOperationExpression	! entry		3642582	0					
ANR	3642794	UnaryOperator	!		3642582	0					
ANR	3642795	Identifier	entry		3642582	1					
ANR	3642796	CompoundStatement		32:15:787:787	3642582	1					
ANR	3642797	ExpressionStatement	r_list_free ( entries )	375:4:8254:8275	3642582	0	True				
ANR	3642798	CallExpression	r_list_free ( entries )		3642582	0					
ANR	3642799	Callee	r_list_free		3642582	0					
ANR	3642800	Identifier	r_list_free		3642582	0					
ANR	3642801	ArgumentList	entries		3642582	1					
ANR	3642802	Argument	entries		3642582	0					
ANR	3642803	Identifier	entries		3642582	0					
ANR	3642804	ReturnStatement	return NULL ;	376:4:8281:8292	3642582	1	True				
ANR	3642805	Identifier	NULL		3642582	0					
ANR	3642806	ExpressionStatement	off ++	378:3:8302:8307	3642582	2	True				
ANR	3642807	PostIncDecOperationExpression	off ++		3642582	0					
ANR	3642808	Identifier	off		3642582	0					
ANR	3642809	IncDec	++		3642582	1					
ANR	3642810	IfStatement	if ( ! bundle_type )		3642582	3					
ANR	3642811	Condition	! bundle_type	379:7:8316:8327	3642582	0	True				
ANR	3642812	UnaryOperationExpression	! bundle_type		3642582	0					
ANR	3642813	UnaryOperator	!		3642582	0					
ANR	3642814	Identifier	bundle_type		3642582	1					
ANR	3642815	CompoundStatement		37:21:869:869	3642582	1					
ANR	3642816	ExpressionStatement	off --	380:4:8344:8349	3642582	0	True				
ANR	3642817	PostIncDecOperationExpression	off --		3642582	0					
ANR	3642818	Identifier	off		3642582	0					
ANR	3642819	IncDec	--		3642582	1					
ANR	3642820	ExpressionStatement	free ( entry )	381:4:8355:8367	3642582	1	True				
ANR	3642821	CallExpression	free ( entry )		3642582	0					
ANR	3642822	Callee	free		3642582	0					
ANR	3642823	Identifier	free		3642582	0					
ANR	3642824	ArgumentList	entry		3642582	1					
ANR	3642825	Argument	entry		3642582	0					
ANR	3642826	Identifier	entry		3642582	0					
ANR	3642827	BreakStatement	break ;	382:4:8373:8378	3642582	2	True				
ANR	3642828	ElseStatement	else		3642582	0					
ANR	3642829	IfStatement	if ( bundle_type == 0xFF )		3642582	0					
ANR	3642830	Condition	bundle_type == 0xFF	383:14:8394:8412	3642582	0	True				
ANR	3642831	EqualityExpression	bundle_type == 0xFF		3642582	0		==			
ANR	3642832	Identifier	bundle_type		3642582	0					
ANR	3642833	PrimaryExpression	0xFF		3642582	1					
ANR	3642834	CompoundStatement		45:4:1041:1088	3642582	1					
ANR	3642835	ExpressionStatement	off += 2	384:4:8433:8441	3642582	0	True				
ANR	3642836	AssignmentExpression	off += 2		3642582	0		+=			
ANR	3642837	Identifier	off		3642582	0					
ANR	3642838	PrimaryExpression	2		3642582	1					
ANR	3642839	IdentifierDeclStatement	ut8 segnum = * ( bin -> entry_table + off ) ;	385:4:8447:8485	3642582	1	True				
ANR	3642840	IdentifierDecl	segnum = * ( bin -> entry_table + off )		3642582	0					
ANR	3642841	IdentifierDeclType	ut8		3642582	0					
ANR	3642842	Identifier	segnum		3642582	1					
ANR	3642843	AssignmentExpression	segnum = * ( bin -> entry_table + off )		3642582	2		=			
ANR	3642844	Identifier	segnum		3642582	0					
ANR	3642845	UnaryOperationExpression	* ( bin -> entry_table + off )		3642582	1					
ANR	3642846	UnaryOperator	*		3642582	0					
ANR	3642847	AdditiveExpression	bin -> entry_table + off		3642582	1		+			
ANR	3642848	PtrMemberAccess	bin -> entry_table		3642582	0					
ANR	3642849	Identifier	bin		3642582	0					
ANR	3642850	Identifier	entry_table		3642582	1					
ANR	3642851	Identifier	off		3642582	1					
ANR	3642852	ExpressionStatement	off ++	386:4:8491:8496	3642582	2	True				
ANR	3642853	PostIncDecOperationExpression	off ++		3642582	0					
ANR	3642854	Identifier	off		3642582	0					
ANR	3642855	IncDec	++		3642582	1					
ANR	3642856	IdentifierDeclStatement	ut16 segoff = * ( ut16 * ) ( bin -> entry_table + off ) ;	387:4:8502:8549	3642582	3	True				
ANR	3642857	IdentifierDecl	segoff = * ( ut16 * ) ( bin -> entry_table + off )		3642582	0					
ANR	3642858	IdentifierDeclType	ut16		3642582	0					
ANR	3642859	Identifier	segoff		3642582	1					
ANR	3642860	AssignmentExpression	segoff = * ( ut16 * ) ( bin -> entry_table + off )		3642582	2		=			
ANR	3642861	Identifier	segoff		3642582	0					
ANR	3642862	UnaryOperationExpression	* ( ut16 * ) ( bin -> entry_table + off )		3642582	1					
ANR	3642863	UnaryOperator	*		3642582	0					
ANR	3642864	CastExpression	( ut16 * ) ( bin -> entry_table + off )		3642582	1					
ANR	3642865	CastTarget	ut16 *		3642582	0					
ANR	3642866	AdditiveExpression	bin -> entry_table + off		3642582	1		+			
ANR	3642867	PtrMemberAccess	bin -> entry_table		3642582	0					
ANR	3642868	Identifier	bin		3642582	0					
ANR	3642869	Identifier	entry_table		3642582	1					
ANR	3642870	Identifier	off		3642582	1					
ANR	3642871	ExpressionStatement	entry -> paddr = ( ut64 ) bin -> segment_entries [ segnum - 1 ] . offset * bin -> alignment + segoff	388:4:8555:8641	3642582	4	True				
ANR	3642872	AssignmentExpression	entry -> paddr = ( ut64 ) bin -> segment_entries [ segnum - 1 ] . offset * bin -> alignment + segoff		3642582	0		=			
ANR	3642873	PtrMemberAccess	entry -> paddr		3642582	0					
ANR	3642874	Identifier	entry		3642582	0					
ANR	3642875	Identifier	paddr		3642582	1					
ANR	3642876	AdditiveExpression	( ut64 ) bin -> segment_entries [ segnum - 1 ] . offset * bin -> alignment + segoff		3642582	1		+			
ANR	3642877	MultiplicativeExpression	( ut64 ) bin -> segment_entries [ segnum - 1 ] . offset * bin -> alignment		3642582	0		*			
ANR	3642878	CastExpression	( ut64 ) bin -> segment_entries [ segnum - 1 ] . offset		3642582	0					
ANR	3642879	CastTarget	ut64		3642582	0					
ANR	3642880	MemberAccess	bin -> segment_entries [ segnum - 1 ] . offset		3642582	1					
ANR	3642881	ArrayIndexing	bin -> segment_entries [ segnum - 1 ]		3642582	0					
ANR	3642882	PtrMemberAccess	bin -> segment_entries		3642582	0					
ANR	3642883	Identifier	bin		3642582	0					
ANR	3642884	Identifier	segment_entries		3642582	1					
ANR	3642885	AdditiveExpression	segnum - 1		3642582	1		-			
ANR	3642886	Identifier	segnum		3642582	0					
ANR	3642887	PrimaryExpression	1		3642582	1					
ANR	3642888	Identifier	offset		3642582	1					
ANR	3642889	PtrMemberAccess	bin -> alignment		3642582	1					
ANR	3642890	Identifier	bin		3642582	0					
ANR	3642891	Identifier	alignment		3642582	1					
ANR	3642892	Identifier	segoff		3642582	1					
ANR	3642893	ElseStatement	else		3642582	0					
ANR	3642894	CompoundStatement		47:10:1192:1192	3642582	0					
ANR	3642895	ExpressionStatement	entry -> paddr = ( ut64 ) bin -> segment_entries [ bundle_type - 1 ] . offset * bin -> alignment + * ( ut16 * ) ( bin -> entry_table + off )	390:4:8668:8786	3642582	0	True				
ANR	3642896	AssignmentExpression	entry -> paddr = ( ut64 ) bin -> segment_entries [ bundle_type - 1 ] . offset * bin -> alignment + * ( ut16 * ) ( bin -> entry_table + off )		3642582	0		=			
ANR	3642897	PtrMemberAccess	entry -> paddr		3642582	0					
ANR	3642898	Identifier	entry		3642582	0					
ANR	3642899	Identifier	paddr		3642582	1					
ANR	3642900	AdditiveExpression	( ut64 ) bin -> segment_entries [ bundle_type - 1 ] . offset * bin -> alignment + * ( ut16 * ) ( bin -> entry_table + off )		3642582	1		+			
ANR	3642901	MultiplicativeExpression	( ut64 ) bin -> segment_entries [ bundle_type - 1 ] . offset * bin -> alignment		3642582	0		*			
ANR	3642902	CastExpression	( ut64 ) bin -> segment_entries [ bundle_type - 1 ] . offset		3642582	0					
ANR	3642903	CastTarget	ut64		3642582	0					
ANR	3642904	MemberAccess	bin -> segment_entries [ bundle_type - 1 ] . offset		3642582	1					
ANR	3642905	ArrayIndexing	bin -> segment_entries [ bundle_type - 1 ]		3642582	0					
ANR	3642906	PtrMemberAccess	bin -> segment_entries		3642582	0					
ANR	3642907	Identifier	bin		3642582	0					
ANR	3642908	Identifier	segment_entries		3642582	1					
ANR	3642909	AdditiveExpression	bundle_type - 1		3642582	1		-			
ANR	3642910	Identifier	bundle_type		3642582	0					
ANR	3642911	PrimaryExpression	1		3642582	1					
ANR	3642912	Identifier	offset		3642582	1					
ANR	3642913	PtrMemberAccess	bin -> alignment		3642582	1					
ANR	3642914	Identifier	bin		3642582	0					
ANR	3642915	Identifier	alignment		3642582	1					
ANR	3642916	UnaryOperationExpression	* ( ut16 * ) ( bin -> entry_table + off )		3642582	1					
ANR	3642917	UnaryOperator	*		3642582	0					
ANR	3642918	CastExpression	( ut16 * ) ( bin -> entry_table + off )		3642582	1					
ANR	3642919	CastTarget	ut16 *		3642582	0					
ANR	3642920	AdditiveExpression	bin -> entry_table + off		3642582	1		+			
ANR	3642921	PtrMemberAccess	bin -> entry_table		3642582	0					
ANR	3642922	Identifier	bin		3642582	0					
ANR	3642923	Identifier	entry_table		3642582	1					
ANR	3642924	Identifier	off		3642582	1					
ANR	3642925	ExpressionStatement	off += 2	392:3:8796:8804	3642582	4	True				
ANR	3642926	AssignmentExpression	off += 2		3642582	0		+=			
ANR	3642927	Identifier	off		3642582	0					
ANR	3642928	PrimaryExpression	2		3642582	1					
ANR	3642929	ExpressionStatement	"r_list_append ( entries , entry )"	393:3:8809:8839	3642582	5	True				
ANR	3642930	CallExpression	"r_list_append ( entries , entry )"		3642582	0					
ANR	3642931	Callee	r_list_append		3642582	0					
ANR	3642932	Identifier	r_list_append		3642582	0					
ANR	3642933	ArgumentList	entries		3642582	1					
ANR	3642934	Argument	entries		3642582	0					
ANR	3642935	Identifier	entries		3642582	0					
ANR	3642936	Argument	entry		3642582	1					
ANR	3642937	Identifier	entry		3642582	0					
ANR	3642938	ExpressionStatement	r_list_free ( segments )	396:1:8849:8871	3642582	11	True				
ANR	3642939	CallExpression	r_list_free ( segments )		3642582	0					
ANR	3642940	Callee	r_list_free		3642582	0					
ANR	3642941	Identifier	r_list_free		3642582	0					
ANR	3642942	ArgumentList	segments		3642582	1					
ANR	3642943	Argument	segments		3642582	0					
ANR	3642944	Identifier	segments		3642582	0					
ANR	3642945	ExpressionStatement	bin -> entries = entries	397:1:8874:8896	3642582	12	True				
ANR	3642946	AssignmentExpression	bin -> entries = entries		3642582	0		=			
ANR	3642947	PtrMemberAccess	bin -> entries		3642582	0					
ANR	3642948	Identifier	bin		3642582	0					
ANR	3642949	Identifier	entries		3642582	1					
ANR	3642950	Identifier	entries		3642582	1					
ANR	3642951	ReturnStatement	return entries ;	398:1:8899:8913	3642582	13	True				
ANR	3642952	Identifier	entries		3642582	0					
ANR	3642953	ReturnType	RList *		3642582	1					
ANR	3642954	Identifier	r_bin_ne_get_entrypoints		3642582	2					
ANR	3642955	ParameterList	r_bin_ne_obj_t * bin		3642582	3					
ANR	3642956	Parameter	r_bin_ne_obj_t * bin	343:32:7439:7457	3642582	0	True				
ANR	3642957	ParameterType	r_bin_ne_obj_t *		3642582	0					
ANR	3642958	Identifier	bin		3642582	1					
ANR	3642959	CFGEntryNode	ENTRY		3642582		True				
ANR	3642960	CFGExitNode	EXIT		3642582		True				
ANR	3642961	Symbol	bin -> ne_header -> csEntryPoint		3642582						
ANR	3642962	Symbol	bundle_length		3642582						
ANR	3642963	Symbol	* ( ut16 * ) ( bin -> entry_table + off )		3642582						
ANR	3642964	Symbol	bin -> alignment		3642582						
ANR	3642965	Symbol	bin		3642582						
ANR	3642966	Symbol	segoff		3642582						
ANR	3642967	Symbol	bin -> ne_header -> EntryTableLength		3642582						
ANR	3642968	Symbol	* bin -> ne_header		3642582						
ANR	3642969	Symbol	bin -> ne_header -> ipEntryPoint		3642582						
ANR	3642970	Symbol	* bin		3642582						
ANR	3642971	Symbol	bin -> entries		3642582						
ANR	3642972	Symbol	segments		3642582						
ANR	3642973	Symbol	"( ( RBinSection * ) r_list_get_n ( segments , bin -> ne_header -> csEntryPoint - 1 ) ) -> paddr"		3642582						
ANR	3642974	Symbol	bin -> entry_table		3642582						
ANR	3642975	Symbol	entry -> paddr		3642582						
ANR	3642976	Symbol	* ( bin -> entry_table + off )		3642582						
ANR	3642977	Symbol	* off		3642582						
ANR	3642978	Symbol	* * bin		3642582						
ANR	3642979	Symbol	free		3642582						
ANR	3642980	Symbol	* entry		3642582						
ANR	3642981	Symbol	bin -> segment_entries [ segnum - 1 ] . offset		3642582						
ANR	3642982	Symbol	NULL		3642582						
ANR	3642983	Symbol	* bin -> segment_entries		3642582						
ANR	3642984	Symbol	r_list_newf		3642582						
ANR	3642985	Symbol	r_list_get_n		3642582						
ANR	3642986	Symbol	i		3642582						
ANR	3642987	Symbol	segnum		3642582						
ANR	3642988	Symbol	bin -> ne_header		3642582						
ANR	3642989	Symbol	off		3642582						
ANR	3642990	Symbol	entry		3642582						
ANR	3642991	Symbol	R_NEW0		3642582						
ANR	3642992	Symbol	bundle_type		3642582						
ANR	3642993	Symbol	entries		3642582						
ANR	3642994	Symbol	* segnum		3642582						
ANR	3642995	Symbol	RBinAddr		3642582						
ANR	3642996	Symbol	* bin -> entry_table		3642582						
ANR	3642997	Symbol	entry -> bits		3642582						
ANR	3642998	Symbol	* bundle_type		3642582						
ANR	3642999	Symbol	bin -> segment_entries [ bundle_type - 1 ] . offset		3642582						
ANR	3643000	Symbol	* r_list_get_n		3642582						
ANR	3643001	Symbol	* ( ut8 * ) ( bin -> entry_table + off )		3642582						
ANR	3643002	Symbol	bin -> segment_entries		3642582						
ANR	3643003	Symbol	r_bin_ne_get_segments		3642582						
ANR	3643004	Function	r_bin_ne_get_relocs	401:0:8918:12442							
ANR	3643005	FunctionDef	r_bin_ne_get_relocs (r_bin_ne_obj_t * bin)		3643004	0					
ANR	3643006	CompoundStatement		401:48:8966:12442	3643004	0					
ANR	3643007	IdentifierDeclStatement	RList * segments = bin -> segments ;	402:1:8969:9000	3643004	0	True				
ANR	3643008	IdentifierDecl	* segments = bin -> segments		3643004	0					
ANR	3643009	IdentifierDeclType	RList *		3643004	0					
ANR	3643010	Identifier	segments		3643004	1					
ANR	3643011	AssignmentExpression	* segments = bin -> segments		3643004	2		=			
ANR	3643012	Identifier	segments		3643004	0					
ANR	3643013	PtrMemberAccess	bin -> segments		3643004	1					
ANR	3643014	Identifier	bin		3643004	0					
ANR	3643015	Identifier	segments		3643004	1					
ANR	3643016	IfStatement	if ( ! segments )		3643004	1					
ANR	3643017	Condition	! segments	403:5:9007:9015	3643004	0	True				
ANR	3643018	UnaryOperationExpression	! segments		3643004	0					
ANR	3643019	UnaryOperator	!		3643004	0					
ANR	3643020	Identifier	segments		3643004	1					
ANR	3643021	CompoundStatement		3:16:51:51	3643004	1					
ANR	3643022	ReturnStatement	return NULL ;	404:2:9022:9033	3643004	0	True				
ANR	3643023	Identifier	NULL		3643004	0					
ANR	3643024	IdentifierDeclStatement	RList * entries = bin -> entries ;	406:1:9039:9068	3643004	2	True				
ANR	3643025	IdentifierDecl	* entries = bin -> entries		3643004	0					
ANR	3643026	IdentifierDeclType	RList *		3643004	0					
ANR	3643027	Identifier	entries		3643004	1					
ANR	3643028	AssignmentExpression	* entries = bin -> entries		3643004	2		=			
ANR	3643029	Identifier	entries		3643004	0					
ANR	3643030	PtrMemberAccess	bin -> entries		3643004	1					
ANR	3643031	Identifier	bin		3643004	0					
ANR	3643032	Identifier	entries		3643004	1					
ANR	3643033	IfStatement	if ( ! entries )		3643004	3					
ANR	3643034	Condition	! entries	407:5:9075:9082	3643004	0	True				
ANR	3643035	UnaryOperationExpression	! entries		3643004	0					
ANR	3643036	UnaryOperator	!		3643004	0					
ANR	3643037	Identifier	entries		3643004	1					
ANR	3643038	CompoundStatement		7:15:118:118	3643004	1					
ANR	3643039	ReturnStatement	return NULL ;	408:2:9089:9100	3643004	0	True				
ANR	3643040	Identifier	NULL		3643004	0					
ANR	3643041	IdentifierDeclStatement	RList * symbols = bin -> symbols ;	410:1:9106:9135	3643004	4	True				
ANR	3643042	IdentifierDecl	* symbols = bin -> symbols		3643004	0					
ANR	3643043	IdentifierDeclType	RList *		3643004	0					
ANR	3643044	Identifier	symbols		3643004	1					
ANR	3643045	AssignmentExpression	* symbols = bin -> symbols		3643004	2		=			
ANR	3643046	Identifier	symbols		3643004	0					
ANR	3643047	PtrMemberAccess	bin -> symbols		3643004	1					
ANR	3643048	Identifier	bin		3643004	0					
ANR	3643049	Identifier	symbols		3643004	1					
ANR	3643050	IfStatement	if ( ! symbols )		3643004	5					
ANR	3643051	Condition	! symbols	411:5:9142:9149	3643004	0	True				
ANR	3643052	UnaryOperationExpression	! symbols		3643004	0					
ANR	3643053	UnaryOperator	!		3643004	0					
ANR	3643054	Identifier	symbols		3643004	1					
ANR	3643055	CompoundStatement		11:15:185:185	3643004	1					
ANR	3643056	ReturnStatement	return NULL ;	412:2:9156:9167	3643004	0	True				
ANR	3643057	Identifier	NULL		3643004	0					
ANR	3643058	IdentifierDeclStatement	ut16 * modref = malloc ( bin -> ne_header -> ModRefs * sizeof ( ut16 ) ) ;	415:1:9174:9237	3643004	6	True				
ANR	3643059	IdentifierDecl	* modref = malloc ( bin -> ne_header -> ModRefs * sizeof ( ut16 ) )		3643004	0					
ANR	3643060	IdentifierDeclType	ut16 *		3643004	0					
ANR	3643061	Identifier	modref		3643004	1					
ANR	3643062	AssignmentExpression	* modref = malloc ( bin -> ne_header -> ModRefs * sizeof ( ut16 ) )		3643004	2		=			
ANR	3643063	Identifier	modref		3643004	0					
ANR	3643064	CallExpression	malloc ( bin -> ne_header -> ModRefs * sizeof ( ut16 ) )		3643004	1					
ANR	3643065	Callee	malloc		3643004	0					
ANR	3643066	Identifier	malloc		3643004	0					
ANR	3643067	ArgumentList	bin -> ne_header -> ModRefs * sizeof ( ut16 )		3643004	1					
ANR	3643068	Argument	bin -> ne_header -> ModRefs * sizeof ( ut16 )		3643004	0					
ANR	3643069	MultiplicativeExpression	bin -> ne_header -> ModRefs * sizeof ( ut16 )		3643004	0		*			
ANR	3643070	PtrMemberAccess	bin -> ne_header -> ModRefs		3643004	0					
ANR	3643071	PtrMemberAccess	bin -> ne_header		3643004	0					
ANR	3643072	Identifier	bin		3643004	0					
ANR	3643073	Identifier	ne_header		3643004	1					
ANR	3643074	Identifier	ModRefs		3643004	1					
ANR	3643075	SizeofExpression	sizeof ( ut16 )		3643004	1					
ANR	3643076	Sizeof	sizeof		3643004	0					
ANR	3643077	SizeofOperand	ut16		3643004	1					
ANR	3643078	IfStatement	if ( ! modref )		3643004	7					
ANR	3643079	Condition	! modref	416:5:9244:9250	3643004	0	True				
ANR	3643080	UnaryOperationExpression	! modref		3643004	0					
ANR	3643081	UnaryOperator	!		3643004	0					
ANR	3643082	Identifier	modref		3643004	1					
ANR	3643083	CompoundStatement		16:14:286:286	3643004	1					
ANR	3643084	ReturnStatement	return NULL ;	417:2:9257:9268	3643004	0	True				
ANR	3643085	Identifier	NULL		3643004	0					
ANR	3643086	ExpressionStatement	"r_buf_read_at ( bin -> buf , ( ut64 ) bin -> ne_header -> ModRefTable + bin -> header_offset , ( ut8 * ) modref , bin -> ne_header -> ModRefs * sizeof ( ut16 ) )"	419:1:9274:9410	3643004	8	True				
ANR	3643087	CallExpression	"r_buf_read_at ( bin -> buf , ( ut64 ) bin -> ne_header -> ModRefTable + bin -> header_offset , ( ut8 * ) modref , bin -> ne_header -> ModRefs * sizeof ( ut16 ) )"		3643004	0					
ANR	3643088	Callee	r_buf_read_at		3643004	0					
ANR	3643089	Identifier	r_buf_read_at		3643004	0					
ANR	3643090	ArgumentList	bin -> buf		3643004	1					
ANR	3643091	Argument	bin -> buf		3643004	0					
ANR	3643092	PtrMemberAccess	bin -> buf		3643004	0					
ANR	3643093	Identifier	bin		3643004	0					
ANR	3643094	Identifier	buf		3643004	1					
ANR	3643095	Argument	( ut64 ) bin -> ne_header -> ModRefTable + bin -> header_offset		3643004	1					
ANR	3643096	AdditiveExpression	( ut64 ) bin -> ne_header -> ModRefTable + bin -> header_offset		3643004	0		+			
ANR	3643097	CastExpression	( ut64 ) bin -> ne_header -> ModRefTable		3643004	0					
ANR	3643098	CastTarget	ut64		3643004	0					
ANR	3643099	PtrMemberAccess	bin -> ne_header -> ModRefTable		3643004	1					
ANR	3643100	PtrMemberAccess	bin -> ne_header		3643004	0					
ANR	3643101	Identifier	bin		3643004	0					
ANR	3643102	Identifier	ne_header		3643004	1					
ANR	3643103	Identifier	ModRefTable		3643004	1					
ANR	3643104	PtrMemberAccess	bin -> header_offset		3643004	1					
ANR	3643105	Identifier	bin		3643004	0					
ANR	3643106	Identifier	header_offset		3643004	1					
ANR	3643107	Argument	( ut8 * ) modref		3643004	2					
ANR	3643108	CastExpression	( ut8 * ) modref		3643004	0					
ANR	3643109	CastTarget	ut8 *		3643004	0					
ANR	3643110	Identifier	modref		3643004	1					
ANR	3643111	Argument	bin -> ne_header -> ModRefs * sizeof ( ut16 )		3643004	3					
ANR	3643112	MultiplicativeExpression	bin -> ne_header -> ModRefs * sizeof ( ut16 )		3643004	0		*			
ANR	3643113	PtrMemberAccess	bin -> ne_header -> ModRefs		3643004	0					
ANR	3643114	PtrMemberAccess	bin -> ne_header		3643004	0					
ANR	3643115	Identifier	bin		3643004	0					
ANR	3643116	Identifier	ne_header		3643004	1					
ANR	3643117	Identifier	ModRefs		3643004	1					
ANR	3643118	SizeofExpression	sizeof ( ut16 )		3643004	1					
ANR	3643119	Sizeof	sizeof		3643004	0					
ANR	3643120	SizeofOperand	ut16		3643004	1					
ANR	3643121	IdentifierDeclStatement	RList * relocs = r_list_newf ( free ) ;	421:1:9414:9448	3643004	9	True				
ANR	3643122	IdentifierDecl	* relocs = r_list_newf ( free )		3643004	0					
ANR	3643123	IdentifierDeclType	RList *		3643004	0					
ANR	3643124	Identifier	relocs		3643004	1					
ANR	3643125	AssignmentExpression	* relocs = r_list_newf ( free )		3643004	2		=			
ANR	3643126	Identifier	relocs		3643004	0					
ANR	3643127	CallExpression	r_list_newf ( free )		3643004	1					
ANR	3643128	Callee	r_list_newf		3643004	0					
ANR	3643129	Identifier	r_list_newf		3643004	0					
ANR	3643130	ArgumentList	free		3643004	1					
ANR	3643131	Argument	free		3643004	0					
ANR	3643132	Identifier	free		3643004	0					
ANR	3643133	IfStatement	if ( ! relocs )		3643004	10					
ANR	3643134	Condition	! relocs	422:5:9455:9461	3643004	0	True				
ANR	3643135	UnaryOperationExpression	! relocs		3643004	0					
ANR	3643136	UnaryOperator	!		3643004	0					
ANR	3643137	Identifier	relocs		3643004	1					
ANR	3643138	CompoundStatement		22:14:497:497	3643004	1					
ANR	3643139	ExpressionStatement	free ( modref )	423:2:9468:9481	3643004	0	True				
ANR	3643140	CallExpression	free ( modref )		3643004	0					
ANR	3643141	Callee	free		3643004	0					
ANR	3643142	Identifier	free		3643004	0					
ANR	3643143	ArgumentList	modref		3643004	1					
ANR	3643144	Argument	modref		3643004	0					
ANR	3643145	Identifier	modref		3643004	0					
ANR	3643146	ReturnStatement	return NULL ;	424:2:9485:9496	3643004	1	True				
ANR	3643147	Identifier	NULL		3643004	0					
ANR	3643148	IdentifierDeclStatement	RListIter * it ;	427:1:9503:9516	3643004	11	True				
ANR	3643149	IdentifierDecl	* it		3643004	0					
ANR	3643150	IdentifierDeclType	RListIter *		3643004	0					
ANR	3643151	Identifier	it		3643004	1					
ANR	3643152	IdentifierDeclStatement	RBinSection * seg ;	428:1:9519:9535	3643004	12	True				
ANR	3643153	IdentifierDecl	* seg		3643004	0					
ANR	3643154	IdentifierDeclType	RBinSection *		3643004	0					
ANR	3643155	Identifier	seg		3643004	1					
ANR	3643156	IdentifierDeclStatement	int index = - 1 ;	429:1:9538:9552	3643004	13	True				
ANR	3643157	IdentifierDecl	index = - 1		3643004	0					
ANR	3643158	IdentifierDeclType	int		3643004	0					
ANR	3643159	Identifier	index		3643004	1					
ANR	3643160	AssignmentExpression	index = - 1		3643004	2		=			
ANR	3643161	Identifier	index		3643004	0					
ANR	3643162	UnaryOperationExpression	- 1		3643004	1					
ANR	3643163	UnaryOperator	-		3643004	0					
ANR	3643164	PrimaryExpression	1		3643004	1					
ANR	3643165	Statement	r_list_foreach	430:1:9555:9568	3643004	14	True				
ANR	3643166	Statement	(	430:16:9570:9570	3643004	15	True				
ANR	3643167	Statement	segments	430:17:9571:9578	3643004	16	True				
ANR	3643168	Statement	","	430:25:9579:9579	3643004	17	True				
ANR	3643169	Statement	it	430:27:9581:9582	3643004	18	True				
ANR	3643170	Statement	","	430:29:9583:9583	3643004	19	True				
ANR	3643171	Statement	seg	430:31:9585:9587	3643004	20	True				
ANR	3643172	Statement	)	430:34:9588:9588	3643004	21	True				
ANR	3643173	CompoundStatement		36:2:763:811	3643004	22					
ANR	3643174	ExpressionStatement	index ++	431:2:9594:9601	3643004	0	True				
ANR	3643175	PostIncDecOperationExpression	index ++		3643004	0					
ANR	3643176	Identifier	index		3643004	0					
ANR	3643177	IncDec	++		3643004	1					
ANR	3643178	IfStatement	if ( ! ( bin -> segment_entries [ index ] . flags & RELOCINFO ) )		3643004	1					
ANR	3643179	Condition	! ( bin -> segment_entries [ index ] . flags & RELOCINFO )	432:6:9609:9656	3643004	0	True				
ANR	3643180	UnaryOperationExpression	! ( bin -> segment_entries [ index ] . flags & RELOCINFO )		3643004	0					
ANR	3643181	UnaryOperator	!		3643004	0					
ANR	3643182	BitAndExpression	bin -> segment_entries [ index ] . flags & RELOCINFO		3643004	1		&			
ANR	3643183	MemberAccess	bin -> segment_entries [ index ] . flags		3643004	0					
ANR	3643184	ArrayIndexing	bin -> segment_entries [ index ]		3643004	0					
ANR	3643185	PtrMemberAccess	bin -> segment_entries		3643004	0					
ANR	3643186	Identifier	bin		3643004	0					
ANR	3643187	Identifier	segment_entries		3643004	1					
ANR	3643188	Identifier	index		3643004	1					
ANR	3643189	Identifier	flags		3643004	1					
ANR	3643190	Identifier	RELOCINFO		3643004	1					
ANR	3643191	CompoundStatement		32:56:692:692	3643004	1					
ANR	3643192	ContinueStatement	continue ;	433:3:9664:9672	3643004	0	True				
ANR	3643193	IdentifierDeclStatement	"ut32 off , start = off = seg -> paddr + seg -> size ;"	435:2:9680:9726	3643004	2	True				
ANR	3643194	IdentifierDecl	off		3643004	0					
ANR	3643195	IdentifierDeclType	ut32		3643004	0					
ANR	3643196	Identifier	off		3643004	1					
ANR	3643197	IdentifierDecl	start = off = seg -> paddr + seg -> size		3643004	1					
ANR	3643198	IdentifierDeclType	ut32		3643004	0					
ANR	3643199	Identifier	start		3643004	1					
ANR	3643200	AssignmentExpression	start = off = seg -> paddr + seg -> size		3643004	2		=			
ANR	3643201	Identifier	start		3643004	0					
ANR	3643202	AssignmentExpression	off = seg -> paddr + seg -> size		3643004	1		=			
ANR	3643203	Identifier	off		3643004	0					
ANR	3643204	AdditiveExpression	seg -> paddr + seg -> size		3643004	1		+			
ANR	3643205	PtrMemberAccess	seg -> paddr		3643004	0					
ANR	3643206	Identifier	seg		3643004	0					
ANR	3643207	Identifier	paddr		3643004	1					
ANR	3643208	PtrMemberAccess	seg -> size		3643004	1					
ANR	3643209	Identifier	seg		3643004	0					
ANR	3643210	Identifier	size		3643004	1					
ANR	3643211	IdentifierDeclStatement	"ut16 length = r_buf_read_le16_at ( bin -> buf , off ) ;"	436:2:9730:9778	3643004	3	True				
ANR	3643212	IdentifierDecl	"length = r_buf_read_le16_at ( bin -> buf , off )"		3643004	0					
ANR	3643213	IdentifierDeclType	ut16		3643004	0					
ANR	3643214	Identifier	length		3643004	1					
ANR	3643215	AssignmentExpression	"length = r_buf_read_le16_at ( bin -> buf , off )"		3643004	2		=			
ANR	3643216	Identifier	length		3643004	0					
ANR	3643217	CallExpression	"r_buf_read_le16_at ( bin -> buf , off )"		3643004	1					
ANR	3643218	Callee	r_buf_read_le16_at		3643004	0					
ANR	3643219	Identifier	r_buf_read_le16_at		3643004	0					
ANR	3643220	ArgumentList	bin -> buf		3643004	1					
ANR	3643221	Argument	bin -> buf		3643004	0					
ANR	3643222	PtrMemberAccess	bin -> buf		3643004	0					
ANR	3643223	Identifier	bin		3643004	0					
ANR	3643224	Identifier	buf		3643004	1					
ANR	3643225	Argument	off		3643004	1					
ANR	3643226	Identifier	off		3643004	0					
ANR	3643227	IfStatement	if ( ! length )		3643004	4					
ANR	3643228	Condition	! length	437:6:9786:9792	3643004	0	True				
ANR	3643229	UnaryOperationExpression	! length		3643004	0					
ANR	3643230	UnaryOperator	!		3643004	0					
ANR	3643231	Identifier	length		3643004	1					
ANR	3643232	CompoundStatement		37:15:828:828	3643004	1					
ANR	3643233	ContinueStatement	continue ;	438:3:9800:9808	3643004	0	True				
ANR	3643234	ExpressionStatement	off += 2	440:2:9816:9824	3643004	5	True				
ANR	3643235	AssignmentExpression	off += 2		3643004	0		+=			
ANR	3643236	Identifier	off		3643004	0					
ANR	3643237	PrimaryExpression	2		3643004	1					
ANR	3643238	WhileStatement	while ( off < start + length * sizeof ( NE_image_reloc_item ) )		3643004	6					
ANR	3643239	Condition	off < start + length * sizeof ( NE_image_reloc_item )	441:9:9835:9885	3643004	0	True				
ANR	3643240	RelationalExpression	off < start + length * sizeof ( NE_image_reloc_item )		3643004	0		<			
ANR	3643241	Identifier	off		3643004	0					
ANR	3643242	AdditiveExpression	start + length * sizeof ( NE_image_reloc_item )		3643004	1		+			
ANR	3643243	Identifier	start		3643004	0					
ANR	3643244	MultiplicativeExpression	length * sizeof ( NE_image_reloc_item )		3643004	1		*			
ANR	3643245	Identifier	length		3643004	0					
ANR	3643246	SizeofExpression	sizeof ( NE_image_reloc_item )		3643004	1					
ANR	3643247	Sizeof	sizeof		3643004	0					
ANR	3643248	SizeofOperand	NE_image_reloc_item		3643004	1					
ANR	3643249	CompoundStatement		66:3:1446:1457	3643004	1					
ANR	3643250	IdentifierDeclStatement	RBinReloc * reloc = R_NEW0 ( RBinReloc ) ;	442:3:9893:9930	3643004	0	True				
ANR	3643251	IdentifierDecl	* reloc = R_NEW0 ( RBinReloc )		3643004	0					
ANR	3643252	IdentifierDeclType	RBinReloc *		3643004	0					
ANR	3643253	Identifier	reloc		3643004	1					
ANR	3643254	AssignmentExpression	* reloc = R_NEW0 ( RBinReloc )		3643004	2		=			
ANR	3643255	Identifier	reloc		3643004	0					
ANR	3643256	CallExpression	R_NEW0 ( RBinReloc )		3643004	1					
ANR	3643257	Callee	R_NEW0		3643004	0					
ANR	3643258	Identifier	R_NEW0		3643004	0					
ANR	3643259	ArgumentList	RBinReloc		3643004	1					
ANR	3643260	Argument	RBinReloc		3643004	0					
ANR	3643261	Identifier	RBinReloc		3643004	0					
ANR	3643262	IfStatement	if ( ! reloc )		3643004	1					
ANR	3643263	Condition	! reloc	443:7:9939:9944	3643004	0	True				
ANR	3643264	UnaryOperationExpression	! reloc		3643004	0					
ANR	3643265	UnaryOperator	!		3643004	0					
ANR	3643266	Identifier	reloc		3643004	1					
ANR	3643267	CompoundStatement		43:15:980:980	3643004	1					
ANR	3643268	ReturnStatement	return NULL ;	444:4:9953:9964	3643004	0	True				
ANR	3643269	Identifier	NULL		3643004	0					
ANR	3643270	IdentifierDeclStatement	NE_image_reloc_item rel ;	446:3:9974:9997	3643004	2	True				
ANR	3643271	IdentifierDecl	rel		3643004	0					
ANR	3643272	IdentifierDeclType	NE_image_reloc_item		3643004	0					
ANR	3643273	Identifier	rel		3643004	1					
ANR	3643274	ExpressionStatement	"r_buf_read_at ( bin -> buf , off , ( ut8 * ) & rel , sizeof ( rel ) )"	447:3:10002:10058	3643004	3	True				
ANR	3643275	CallExpression	"r_buf_read_at ( bin -> buf , off , ( ut8 * ) & rel , sizeof ( rel ) )"		3643004	0					
ANR	3643276	Callee	r_buf_read_at		3643004	0					
ANR	3643277	Identifier	r_buf_read_at		3643004	0					
ANR	3643278	ArgumentList	bin -> buf		3643004	1					
ANR	3643279	Argument	bin -> buf		3643004	0					
ANR	3643280	PtrMemberAccess	bin -> buf		3643004	0					
ANR	3643281	Identifier	bin		3643004	0					
ANR	3643282	Identifier	buf		3643004	1					
ANR	3643283	Argument	off		3643004	1					
ANR	3643284	Identifier	off		3643004	0					
ANR	3643285	Argument	( ut8 * ) & rel		3643004	2					
ANR	3643286	CastExpression	( ut8 * ) & rel		3643004	0					
ANR	3643287	CastTarget	ut8 *		3643004	0					
ANR	3643288	UnaryOperationExpression	& rel		3643004	1					
ANR	3643289	UnaryOperator	&		3643004	0					
ANR	3643290	Identifier	rel		3643004	1					
ANR	3643291	Argument	sizeof ( rel )		3643004	3					
ANR	3643292	SizeofExpression	sizeof ( rel )		3643004	0					
ANR	3643293	Sizeof	sizeof		3643004	0					
ANR	3643294	SizeofOperand	rel		3643004	1					
ANR	3643295	ExpressionStatement	reloc -> paddr = seg -> paddr + rel . offset	448:3:10063:10101	3643004	4	True				
ANR	3643296	AssignmentExpression	reloc -> paddr = seg -> paddr + rel . offset		3643004	0		=			
ANR	3643297	PtrMemberAccess	reloc -> paddr		3643004	0					
ANR	3643298	Identifier	reloc		3643004	0					
ANR	3643299	Identifier	paddr		3643004	1					
ANR	3643300	AdditiveExpression	seg -> paddr + rel . offset		3643004	1		+			
ANR	3643301	PtrMemberAccess	seg -> paddr		3643004	0					
ANR	3643302	Identifier	seg		3643004	0					
ANR	3643303	Identifier	paddr		3643004	1					
ANR	3643304	MemberAccess	rel . offset		3643004	1					
ANR	3643305	Identifier	rel		3643004	0					
ANR	3643306	Identifier	offset		3643004	1					
ANR	3643307	SwitchStatement	switch ( rel . type )		3643004	5					
ANR	3643308	Condition	rel . type	449:11:10114:10121	3643004	0	True				
ANR	3643309	MemberAccess	rel . type		3643004	0					
ANR	3643310	Identifier	rel		3643004	0					
ANR	3643311	Identifier	type		3643004	1					
ANR	3643312	CompoundStatement		49:21:1157:1157	3643004	1					
ANR	3643313	Label	case LOBYTE :	450:3:10129:10140	3643004	0	True				
ANR	3643314	Identifier	LOBYTE		3643004	0					
ANR	3643315	ExpressionStatement	reloc -> type = R_BIN_RELOC_8	451:4:10146:10173	3643004	1	True				
ANR	3643316	AssignmentExpression	reloc -> type = R_BIN_RELOC_8		3643004	0		=			
ANR	3643317	PtrMemberAccess	reloc -> type		3643004	0					
ANR	3643318	Identifier	reloc		3643004	0					
ANR	3643319	Identifier	type		3643004	1					
ANR	3643320	Identifier	R_BIN_RELOC_8		3643004	1					
ANR	3643321	BreakStatement	break ;	452:4:10179:10184	3643004	2	True				
ANR	3643322	Label	case SEL_16 :	453:3:10189:10200	3643004	3	True				
ANR	3643323	Identifier	SEL_16		3643004	0					
ANR	3643324	Label	case OFF_16 :	454:3:10205:10216	3643004	4	True				
ANR	3643325	Identifier	OFF_16		3643004	0					
ANR	3643326	ExpressionStatement	reloc -> type = R_BIN_RELOC_16	455:4:10222:10250	3643004	5	True				
ANR	3643327	AssignmentExpression	reloc -> type = R_BIN_RELOC_16		3643004	0		=			
ANR	3643328	PtrMemberAccess	reloc -> type		3643004	0					
ANR	3643329	Identifier	reloc		3643004	0					
ANR	3643330	Identifier	type		3643004	1					
ANR	3643331	Identifier	R_BIN_RELOC_16		3643004	1					
ANR	3643332	BreakStatement	break ;	456:4:10256:10261	3643004	6	True				
ANR	3643333	Label	case POI_32 :	457:3:10266:10277	3643004	7	True				
ANR	3643334	Identifier	POI_32		3643004	0					
ANR	3643335	Label	case OFF_32 :	458:3:10282:10293	3643004	8	True				
ANR	3643336	Identifier	OFF_32		3643004	0					
ANR	3643337	ExpressionStatement	reloc -> type = R_BIN_RELOC_32	459:4:10299:10327	3643004	9	True				
ANR	3643338	AssignmentExpression	reloc -> type = R_BIN_RELOC_32		3643004	0		=			
ANR	3643339	PtrMemberAccess	reloc -> type		3643004	0					
ANR	3643340	Identifier	reloc		3643004	0					
ANR	3643341	Identifier	type		3643004	1					
ANR	3643342	Identifier	R_BIN_RELOC_32		3643004	1					
ANR	3643343	BreakStatement	break ;	460:4:10333:10338	3643004	10	True				
ANR	3643344	Label	case POI_48 :	461:3:10343:10354	3643004	11	True				
ANR	3643345	Identifier	POI_48		3643004	0					
ANR	3643346	ExpressionStatement	reloc -> type = R_BIN_RELOC_64	462:4:10360:10388	3643004	12	True				
ANR	3643347	AssignmentExpression	reloc -> type = R_BIN_RELOC_64		3643004	0		=			
ANR	3643348	PtrMemberAccess	reloc -> type		3643004	0					
ANR	3643349	Identifier	reloc		3643004	0					
ANR	3643350	Identifier	type		3643004	1					
ANR	3643351	Identifier	R_BIN_RELOC_64		3643004	1					
ANR	3643352	BreakStatement	break ;	463:4:10394:10399	3643004	13	True				
ANR	3643353	IdentifierDeclStatement	ut32 offset ;	466:3:10413:10424	3643004	6	True				
ANR	3643354	IdentifierDecl	offset		3643004	0					
ANR	3643355	IdentifierDeclType	ut32		3643004	0					
ANR	3643356	Identifier	offset		3643004	1					
ANR	3643357	IfStatement	if ( rel . flags & ( IMPORTED_ORD | IMPORTED_NAME ) )		3643004	7					
ANR	3643358	Condition	rel . flags & ( IMPORTED_ORD | IMPORTED_NAME )	467:7:10433:10474	3643004	0	True				
ANR	3643359	BitAndExpression	rel . flags & ( IMPORTED_ORD | IMPORTED_NAME )		3643004	0		&			
ANR	3643360	MemberAccess	rel . flags		3643004	0					
ANR	3643361	Identifier	rel		3643004	0					
ANR	3643362	Identifier	flags		3643004	1					
ANR	3643363	InclusiveOrExpression	IMPORTED_ORD | IMPORTED_NAME		3643004	1		|			
ANR	3643364	Identifier	IMPORTED_ORD		3643004	0					
ANR	3643365	Identifier	IMPORTED_NAME		3643004	1					
ANR	3643366	CompoundStatement		72:4:1593:1603	3643004	1					
ANR	3643367	IdentifierDeclStatement	RBinImport * imp = R_NEW0 ( RBinImport ) ;	468:4:10483:10520	3643004	0	True				
ANR	3643368	IdentifierDecl	* imp = R_NEW0 ( RBinImport )		3643004	0					
ANR	3643369	IdentifierDeclType	RBinImport *		3643004	0					
ANR	3643370	Identifier	imp		3643004	1					
ANR	3643371	AssignmentExpression	* imp = R_NEW0 ( RBinImport )		3643004	2		=			
ANR	3643372	Identifier	imp		3643004	0					
ANR	3643373	CallExpression	R_NEW0 ( RBinImport )		3643004	1					
ANR	3643374	Callee	R_NEW0		3643004	0					
ANR	3643375	Identifier	R_NEW0		3643004	0					
ANR	3643376	ArgumentList	RBinImport		3643004	1					
ANR	3643377	Argument	RBinImport		3643004	0					
ANR	3643378	Identifier	RBinImport		3643004	0					
ANR	3643379	IfStatement	if ( ! imp )		3643004	1					
ANR	3643380	Condition	! imp	469:8:10530:10533	3643004	0	True				
ANR	3643381	UnaryOperationExpression	! imp		3643004	0					
ANR	3643382	UnaryOperator	!		3643004	0					
ANR	3643383	Identifier	imp		3643004	1					
ANR	3643384	CompoundStatement		69:14:1569:1569	3643004	1					
ANR	3643385	BreakStatement	break ;	470:5:10543:10548	3643004	0	True				
ANR	3643386	IdentifierDeclStatement	char * name ;	472:4:10560:10570	3643004	2	True				
ANR	3643387	IdentifierDecl	* name		3643004	0					
ANR	3643388	IdentifierDeclType	char *		3643004	0					
ANR	3643389	Identifier	name		3643004	1					
ANR	3643390	IfStatement	if ( rel . index > bin -> ne_header -> ModRefs )		3643004	3					
ANR	3643391	Condition	rel . index > bin -> ne_header -> ModRefs	473:8:10580:10614	3643004	0	True				
ANR	3643392	RelationalExpression	rel . index > bin -> ne_header -> ModRefs		3643004	0		>			
ANR	3643393	MemberAccess	rel . index		3643004	0					
ANR	3643394	Identifier	rel		3643004	0					
ANR	3643395	Identifier	index		3643004	1					
ANR	3643396	PtrMemberAccess	bin -> ne_header -> ModRefs		3643004	1					
ANR	3643397	PtrMemberAccess	bin -> ne_header		3643004	0					
ANR	3643398	Identifier	bin		3643004	0					
ANR	3643399	Identifier	ne_header		3643004	1					
ANR	3643400	Identifier	ModRefs		3643004	1					
ANR	3643401	CompoundStatement		73:45:1650:1650	3643004	1					
ANR	3643402	ExpressionStatement	"name = r_str_newf ( ""UnknownModule%d_%x"" , rel . index , off )"	474:5:10624:10680	3643004	0	True				
ANR	3643403	AssignmentExpression	"name = r_str_newf ( ""UnknownModule%d_%x"" , rel . index , off )"		3643004	0		=			
ANR	3643404	Identifier	name		3643004	0					
ANR	3643405	CallExpression	"r_str_newf ( ""UnknownModule%d_%x"" , rel . index , off )"		3643004	1					
ANR	3643406	Callee	r_str_newf		3643004	0					
ANR	3643407	Identifier	r_str_newf		3643004	0					
ANR	3643408	ArgumentList	"""UnknownModule%d_%x"""		3643004	1					
ANR	3643409	Argument	"""UnknownModule%d_%x"""		3643004	0					
ANR	3643410	PrimaryExpression	"""UnknownModule%d_%x"""		3643004	0					
ANR	3643411	Argument	rel . index		3643004	1					
ANR	3643412	MemberAccess	rel . index		3643004	0					
ANR	3643413	Identifier	rel		3643004	0					
ANR	3643414	Identifier	index		3643004	1					
ANR	3643415	Argument	off		3643004	2					
ANR	3643416	Identifier	off		3643004	0					
ANR	3643417	ElseStatement	else		3643004	0					
ANR	3643418	CompoundStatement		75:11:1734:1734	3643004	0					
ANR	3643419	ExpressionStatement	offset = modref [ rel . index - 1 ] + bin -> header_offset + bin -> ne_header -> ImportNameTable	476:5:10708:10793	3643004	0	True				
ANR	3643420	AssignmentExpression	offset = modref [ rel . index - 1 ] + bin -> header_offset + bin -> ne_header -> ImportNameTable		3643004	0		=			
ANR	3643421	Identifier	offset		3643004	0					
ANR	3643422	AdditiveExpression	modref [ rel . index - 1 ] + bin -> header_offset + bin -> ne_header -> ImportNameTable		3643004	1		+			
ANR	3643423	ArrayIndexing	modref [ rel . index - 1 ]		3643004	0					
ANR	3643424	Identifier	modref		3643004	0					
ANR	3643425	AdditiveExpression	rel . index - 1		3643004	1		-			
ANR	3643426	MemberAccess	rel . index		3643004	0					
ANR	3643427	Identifier	rel		3643004	0					
ANR	3643428	Identifier	index		3643004	1					
ANR	3643429	PrimaryExpression	1		3643004	1					
ANR	3643430	AdditiveExpression	bin -> header_offset + bin -> ne_header -> ImportNameTable		3643004	1		+			
ANR	3643431	PtrMemberAccess	bin -> header_offset		3643004	0					
ANR	3643432	Identifier	bin		3643004	0					
ANR	3643433	Identifier	header_offset		3643004	1					
ANR	3643434	PtrMemberAccess	bin -> ne_header -> ImportNameTable		3643004	1					
ANR	3643435	PtrMemberAccess	bin -> ne_header		3643004	0					
ANR	3643436	Identifier	bin		3643004	0					
ANR	3643437	Identifier	ne_header		3643004	1					
ANR	3643438	Identifier	ImportNameTable		3643004	1					
ANR	3643439	ExpressionStatement	"name = __read_nonnull_str_at ( bin -> buf , offset )"	477:5:10800:10847	3643004	1	True				
ANR	3643440	AssignmentExpression	"name = __read_nonnull_str_at ( bin -> buf , offset )"		3643004	0		=			
ANR	3643441	Identifier	name		3643004	0					
ANR	3643442	CallExpression	"__read_nonnull_str_at ( bin -> buf , offset )"		3643004	1					
ANR	3643443	Callee	__read_nonnull_str_at		3643004	0					
ANR	3643444	Identifier	__read_nonnull_str_at		3643004	0					
ANR	3643445	ArgumentList	bin -> buf		3643004	1					
ANR	3643446	Argument	bin -> buf		3643004	0					
ANR	3643447	PtrMemberAccess	bin -> buf		3643004	0					
ANR	3643448	Identifier	bin		3643004	0					
ANR	3643449	Identifier	buf		3643004	1					
ANR	3643450	Argument	offset		3643004	1					
ANR	3643451	Identifier	offset		3643004	0					
ANR	3643452	IfStatement	if ( rel . flags & IMPORTED_ORD )		3643004	4					
ANR	3643453	Condition	rel . flags & IMPORTED_ORD	479:8:10863:10886	3643004	0	True				
ANR	3643454	BitAndExpression	rel . flags & IMPORTED_ORD		3643004	0		&			
ANR	3643455	MemberAccess	rel . flags		3643004	0					
ANR	3643456	Identifier	rel		3643004	0					
ANR	3643457	Identifier	flags		3643004	1					
ANR	3643458	Identifier	IMPORTED_ORD		3643004	1					
ANR	3643459	CompoundStatement		79:34:1922:1922	3643004	1					
ANR	3643460	ExpressionStatement	imp -> ordinal = rel . func_ord	480:5:10896:10923	3643004	0	True				
ANR	3643461	AssignmentExpression	imp -> ordinal = rel . func_ord		3643004	0		=			
ANR	3643462	PtrMemberAccess	imp -> ordinal		3643004	0					
ANR	3643463	Identifier	imp		3643004	0					
ANR	3643464	Identifier	ordinal		3643004	1					
ANR	3643465	MemberAccess	rel . func_ord		3643004	1					
ANR	3643466	Identifier	rel		3643004	0					
ANR	3643467	Identifier	func_ord		3643004	1					
ANR	3643468	ExpressionStatement	"imp -> name = r_str_newf ( ""%s.%s"" , name , __func_name_from_ord ( name , rel . func_ord ) )"	481:5:10930:11010	3643004	1	True				
ANR	3643469	AssignmentExpression	"imp -> name = r_str_newf ( ""%s.%s"" , name , __func_name_from_ord ( name , rel . func_ord ) )"		3643004	0		=			
ANR	3643470	PtrMemberAccess	imp -> name		3643004	0					
ANR	3643471	Identifier	imp		3643004	0					
ANR	3643472	Identifier	name		3643004	1					
ANR	3643473	CallExpression	"r_str_newf ( ""%s.%s"" , name , __func_name_from_ord ( name , rel . func_ord ) )"		3643004	1					
ANR	3643474	Callee	r_str_newf		3643004	0					
ANR	3643475	Identifier	r_str_newf		3643004	0					
ANR	3643476	ArgumentList	"""%s.%s"""		3643004	1					
ANR	3643477	Argument	"""%s.%s"""		3643004	0					
ANR	3643478	PrimaryExpression	"""%s.%s"""		3643004	0					
ANR	3643479	Argument	name		3643004	1					
ANR	3643480	Identifier	name		3643004	0					
ANR	3643481	Argument	"__func_name_from_ord ( name , rel . func_ord )"		3643004	2					
ANR	3643482	CallExpression	"__func_name_from_ord ( name , rel . func_ord )"		3643004	0					
ANR	3643483	Callee	__func_name_from_ord		3643004	0					
ANR	3643484	Identifier	__func_name_from_ord		3643004	0					
ANR	3643485	ArgumentList	name		3643004	1					
ANR	3643486	Argument	name		3643004	0					
ANR	3643487	Identifier	name		3643004	0					
ANR	3643488	Argument	rel . func_ord		3643004	1					
ANR	3643489	MemberAccess	rel . func_ord		3643004	0					
ANR	3643490	Identifier	rel		3643004	0					
ANR	3643491	Identifier	func_ord		3643004	1					
ANR	3643492	ElseStatement	else		3643004	0					
ANR	3643493	CompoundStatement		84:5:2146:2199	3643004	0					
ANR	3643494	ExpressionStatement	offset = bin -> header_offset + bin -> ne_header -> ImportNameTable + rel . name_off	483:5:11030:11106	3643004	0	True				
ANR	3643495	AssignmentExpression	offset = bin -> header_offset + bin -> ne_header -> ImportNameTable + rel . name_off		3643004	0		=			
ANR	3643496	Identifier	offset		3643004	0					
ANR	3643497	AdditiveExpression	bin -> header_offset + bin -> ne_header -> ImportNameTable + rel . name_off		3643004	1		+			
ANR	3643498	PtrMemberAccess	bin -> header_offset		3643004	0					
ANR	3643499	Identifier	bin		3643004	0					
ANR	3643500	Identifier	header_offset		3643004	1					
ANR	3643501	AdditiveExpression	bin -> ne_header -> ImportNameTable + rel . name_off		3643004	1		+			
ANR	3643502	PtrMemberAccess	bin -> ne_header -> ImportNameTable		3643004	0					
ANR	3643503	PtrMemberAccess	bin -> ne_header		3643004	0					
ANR	3643504	Identifier	bin		3643004	0					
ANR	3643505	Identifier	ne_header		3643004	1					
ANR	3643506	Identifier	ImportNameTable		3643004	1					
ANR	3643507	MemberAccess	rel . name_off		3643004	1					
ANR	3643508	Identifier	rel		3643004	0					
ANR	3643509	Identifier	name_off		3643004	1					
ANR	3643510	IdentifierDeclStatement	"char * func = __read_nonnull_str_at ( bin -> buf , offset ) ;"	484:5:11113:11166	3643004	1	True				
ANR	3643511	IdentifierDecl	"* func = __read_nonnull_str_at ( bin -> buf , offset )"		3643004	0					
ANR	3643512	IdentifierDeclType	char *		3643004	0					
ANR	3643513	Identifier	func		3643004	1					
ANR	3643514	AssignmentExpression	"* func = __read_nonnull_str_at ( bin -> buf , offset )"		3643004	2		=			
ANR	3643515	Identifier	func		3643004	0					
ANR	3643516	CallExpression	"__read_nonnull_str_at ( bin -> buf , offset )"		3643004	1					
ANR	3643517	Callee	__read_nonnull_str_at		3643004	0					
ANR	3643518	Identifier	__read_nonnull_str_at		3643004	0					
ANR	3643519	ArgumentList	bin -> buf		3643004	1					
ANR	3643520	Argument	bin -> buf		3643004	0					
ANR	3643521	PtrMemberAccess	bin -> buf		3643004	0					
ANR	3643522	Identifier	bin		3643004	0					
ANR	3643523	Identifier	buf		3643004	1					
ANR	3643524	Argument	offset		3643004	1					
ANR	3643525	Identifier	offset		3643004	0					
ANR	3643526	ExpressionStatement	"imp -> name = r_str_newf ( ""%s.%s"" , name , func )"	485:5:11173:11217	3643004	2	True				
ANR	3643527	AssignmentExpression	"imp -> name = r_str_newf ( ""%s.%s"" , name , func )"		3643004	0		=			
ANR	3643528	PtrMemberAccess	imp -> name		3643004	0					
ANR	3643529	Identifier	imp		3643004	0					
ANR	3643530	Identifier	name		3643004	1					
ANR	3643531	CallExpression	"r_str_newf ( ""%s.%s"" , name , func )"		3643004	1					
ANR	3643532	Callee	r_str_newf		3643004	0					
ANR	3643533	Identifier	r_str_newf		3643004	0					
ANR	3643534	ArgumentList	"""%s.%s"""		3643004	1					
ANR	3643535	Argument	"""%s.%s"""		3643004	0					
ANR	3643536	PrimaryExpression	"""%s.%s"""		3643004	0					
ANR	3643537	Argument	name		3643004	1					
ANR	3643538	Identifier	name		3643004	0					
ANR	3643539	Argument	func		3643004	2					
ANR	3643540	Identifier	func		3643004	0					
ANR	3643541	ExpressionStatement	free ( func )	486:5:11224:11235	3643004	3	True				
ANR	3643542	CallExpression	free ( func )		3643004	0					
ANR	3643543	Callee	free		3643004	0					
ANR	3643544	Identifier	free		3643004	0					
ANR	3643545	ArgumentList	func		3643004	1					
ANR	3643546	Argument	func		3643004	0					
ANR	3643547	Identifier	func		3643004	0					
ANR	3643548	ExpressionStatement	free ( name )	488:4:11247:11258	3643004	5	True				
ANR	3643549	CallExpression	free ( name )		3643004	0					
ANR	3643550	Callee	free		3643004	0					
ANR	3643551	Identifier	free		3643004	0					
ANR	3643552	ArgumentList	name		3643004	1					
ANR	3643553	Argument	name		3643004	0					
ANR	3643554	Identifier	name		3643004	0					
ANR	3643555	ExpressionStatement	reloc -> import = imp	489:4:11264:11283	3643004	6	True				
ANR	3643556	AssignmentExpression	reloc -> import = imp		3643004	0		=			
ANR	3643557	PtrMemberAccess	reloc -> import		3643004	0					
ANR	3643558	Identifier	reloc		3643004	0					
ANR	3643559	Identifier	import		3643004	1					
ANR	3643560	Identifier	imp		3643004	1					
ANR	3643561	ElseStatement	else		3643004	0					
ANR	3643562	IfStatement	if ( rel . flags & OSFIXUP )		3643004	0					
ANR	3643563	Condition	rel . flags & OSFIXUP	490:14:11299:11317	3643004	0	True				
ANR	3643564	BitAndExpression	rel . flags & OSFIXUP		3643004	0		&			
ANR	3643565	MemberAccess	rel . flags		3643004	0					
ANR	3643566	Identifier	rel		3643004	0					
ANR	3643567	Identifier	flags		3643004	1					
ANR	3643568	Identifier	OSFIXUP		3643004	1					
ANR	3643569	CompoundStatement		90:35:2353:2353	3643004	1					
ANR	3643570	ElseStatement	else		3643004	0					
ANR	3643571	CompoundStatement		110:4:2809:2823	3643004	0					
ANR	3643572	IfStatement	"if ( strstr ( seg -> name , ""FIXED"" ) )"		3643004	0					
ANR	3643573	Condition	"strstr ( seg -> name , ""FIXED"" )"	493:8:11354:11380	3643004	0	True				
ANR	3643574	CallExpression	"strstr ( seg -> name , ""FIXED"" )"		3643004	0					
ANR	3643575	Callee	strstr		3643004	0					
ANR	3643576	Identifier	strstr		3643004	0					
ANR	3643577	ArgumentList	seg -> name		3643004	1					
ANR	3643578	Argument	seg -> name		3643004	0					
ANR	3643579	PtrMemberAccess	seg -> name		3643004	0					
ANR	3643580	Identifier	seg		3643004	0					
ANR	3643581	Identifier	name		3643004	1					
ANR	3643582	Argument	"""FIXED"""		3643004	1					
ANR	3643583	PrimaryExpression	"""FIXED"""		3643004	0					
ANR	3643584	CompoundStatement		94:5:2423:2479	3643004	1					
ANR	3643585	IdentifierDeclStatement	"RBinSection * s = r_list_get_n ( segments , rel . segnum - 1 ) ;"	494:5:11390:11446	3643004	0	True				
ANR	3643586	IdentifierDecl	"* s = r_list_get_n ( segments , rel . segnum - 1 )"		3643004	0					
ANR	3643587	IdentifierDeclType	RBinSection *		3643004	0					
ANR	3643588	Identifier	s		3643004	1					
ANR	3643589	AssignmentExpression	"* s = r_list_get_n ( segments , rel . segnum - 1 )"		3643004	2		=			
ANR	3643590	Identifier	s		3643004	0					
ANR	3643591	CallExpression	"r_list_get_n ( segments , rel . segnum - 1 )"		3643004	1					
ANR	3643592	Callee	r_list_get_n		3643004	0					
ANR	3643593	Identifier	r_list_get_n		3643004	0					
ANR	3643594	ArgumentList	segments		3643004	1					
ANR	3643595	Argument	segments		3643004	0					
ANR	3643596	Identifier	segments		3643004	0					
ANR	3643597	Argument	rel . segnum - 1		3643004	1					
ANR	3643598	AdditiveExpression	rel . segnum - 1		3643004	0		-			
ANR	3643599	MemberAccess	rel . segnum		3643004	0					
ANR	3643600	Identifier	rel		3643004	0					
ANR	3643601	Identifier	segnum		3643004	1					
ANR	3643602	PrimaryExpression	1		3643004	1					
ANR	3643603	IfStatement	if ( s )		3643004	1					
ANR	3643604	Condition	s	495:9:11457:11457	3643004	0	True				
ANR	3643605	Identifier	s		3643004	0					
ANR	3643606	CompoundStatement		95:12:2493:2493	3643004	1					
ANR	3643607	ExpressionStatement	offset = s -> paddr + rel . segoff	496:6:11468:11498	3643004	0	True				
ANR	3643608	AssignmentExpression	offset = s -> paddr + rel . segoff		3643004	0		=			
ANR	3643609	Identifier	offset		3643004	0					
ANR	3643610	AdditiveExpression	s -> paddr + rel . segoff		3643004	1		+			
ANR	3643611	PtrMemberAccess	s -> paddr		3643004	0					
ANR	3643612	Identifier	s		3643004	0					
ANR	3643613	Identifier	paddr		3643004	1					
ANR	3643614	MemberAccess	rel . segoff		3643004	1					
ANR	3643615	Identifier	rel		3643004	0					
ANR	3643616	Identifier	segoff		3643004	1					
ANR	3643617	ElseStatement	else		3643004	0					
ANR	3643618	CompoundStatement		97:12:2545:2545	3643004	0					
ANR	3643619	ExpressionStatement	offset = - 1	498:6:11520:11531	3643004	0	True				
ANR	3643620	AssignmentExpression	offset = - 1		3643004	0		=			
ANR	3643621	Identifier	offset		3643004	0					
ANR	3643622	UnaryOperationExpression	- 1		3643004	1					
ANR	3643623	UnaryOperator	-		3643004	0					
ANR	3643624	PrimaryExpression	1		3643004	1					
ANR	3643625	ElseStatement	else		3643004	0					
ANR	3643626	CompoundStatement		101:5:2591:2654	3643004	0					
ANR	3643627	IdentifierDeclStatement	"RBinAddr * entry = r_list_get_n ( entries , rel . entry_ordinal - 1 ) ;"	501:5:11558:11621	3643004	0	True				
ANR	3643628	IdentifierDecl	"* entry = r_list_get_n ( entries , rel . entry_ordinal - 1 )"		3643004	0					
ANR	3643629	IdentifierDeclType	RBinAddr *		3643004	0					
ANR	3643630	Identifier	entry		3643004	1					
ANR	3643631	AssignmentExpression	"* entry = r_list_get_n ( entries , rel . entry_ordinal - 1 )"		3643004	2		=			
ANR	3643632	Identifier	entry		3643004	0					
ANR	3643633	CallExpression	"r_list_get_n ( entries , rel . entry_ordinal - 1 )"		3643004	1					
ANR	3643634	Callee	r_list_get_n		3643004	0					
ANR	3643635	Identifier	r_list_get_n		3643004	0					
ANR	3643636	ArgumentList	entries		3643004	1					
ANR	3643637	Argument	entries		3643004	0					
ANR	3643638	Identifier	entries		3643004	0					
ANR	3643639	Argument	rel . entry_ordinal - 1		3643004	1					
ANR	3643640	AdditiveExpression	rel . entry_ordinal - 1		3643004	0		-			
ANR	3643641	MemberAccess	rel . entry_ordinal		3643004	0					
ANR	3643642	Identifier	rel		3643004	0					
ANR	3643643	Identifier	entry_ordinal		3643004	1					
ANR	3643644	PrimaryExpression	1		3643004	1					
ANR	3643645	IfStatement	if ( entry )		3643004	1					
ANR	3643646	Condition	entry	502:9:11632:11636	3643004	0	True				
ANR	3643647	Identifier	entry		3643004	0					
ANR	3643648	CompoundStatement		102:16:2672:2672	3643004	1					
ANR	3643649	ExpressionStatement	offset = entry -> paddr	503:6:11647:11668	3643004	0	True				
ANR	3643650	AssignmentExpression	offset = entry -> paddr		3643004	0		=			
ANR	3643651	Identifier	offset		3643004	0					
ANR	3643652	PtrMemberAccess	entry -> paddr		3643004	1					
ANR	3643653	Identifier	entry		3643004	0					
ANR	3643654	Identifier	paddr		3643004	1					
ANR	3643655	ElseStatement	else		3643004	0					
ANR	3643656	CompoundStatement		104:12:2715:2715	3643004	0					
ANR	3643657	ExpressionStatement	offset = - 1	505:6:11690:11701	3643004	0	True				
ANR	3643658	AssignmentExpression	offset = - 1		3643004	0		=			
ANR	3643659	Identifier	offset		3643004	0					
ANR	3643660	UnaryOperationExpression	- 1		3643004	1					
ANR	3643661	UnaryOperator	-		3643004	0					
ANR	3643662	PrimaryExpression	1		3643004	1					
ANR	3643663	ExpressionStatement	reloc -> addend = offset	508:4:11720:11742	3643004	1	True				
ANR	3643664	AssignmentExpression	reloc -> addend = offset		3643004	0		=			
ANR	3643665	PtrMemberAccess	reloc -> addend		3643004	0					
ANR	3643666	Identifier	reloc		3643004	0					
ANR	3643667	Identifier	addend		3643004	1					
ANR	3643668	Identifier	offset		3643004	1					
ANR	3643669	IdentifierDeclStatement	RBinSymbol * sym = NULL ;	509:4:11748:11770	3643004	2	True				
ANR	3643670	IdentifierDecl	* sym = NULL		3643004	0					
ANR	3643671	IdentifierDeclType	RBinSymbol *		3643004	0					
ANR	3643672	Identifier	sym		3643004	1					
ANR	3643673	AssignmentExpression	* sym = NULL		3643004	2		=			
ANR	3643674	Identifier	NULL		3643004	0					
ANR	3643675	Identifier	NULL		3643004	1					
ANR	3643676	IdentifierDeclStatement	RListIter * sit ;	510:4:11776:11790	3643004	3	True				
ANR	3643677	IdentifierDecl	* sit		3643004	0					
ANR	3643678	IdentifierDeclType	RListIter *		3643004	0					
ANR	3643679	Identifier	sit		3643004	1					
ANR	3643680	Statement	r_list_foreach	511:4:11796:11809	3643004	4	True				
ANR	3643681	Statement	(	511:19:11811:11811	3643004	5	True				
ANR	3643682	Statement	symbols	511:20:11812:11818	3643004	6	True				
ANR	3643683	Statement	","	511:27:11819:11819	3643004	7	True				
ANR	3643684	Statement	sit	511:29:11821:11823	3643004	8	True				
ANR	3643685	Statement	","	511:32:11824:11824	3643004	9	True				
ANR	3643686	Statement	sym	511:34:11826:11828	3643004	10	True				
ANR	3643687	Statement	)	511:37:11829:11829	3643004	11	True				
ANR	3643688	CompoundStatement		111:39:2864:2864	3643004	12					
ANR	3643689	IfStatement	if ( sym -> paddr == reloc -> addend )		3643004	0					
ANR	3643690	Condition	sym -> paddr == reloc -> addend	512:9:11842:11868	3643004	0	True				
ANR	3643691	EqualityExpression	sym -> paddr == reloc -> addend		3643004	0		==			
ANR	3643692	PtrMemberAccess	sym -> paddr		3643004	0					
ANR	3643693	Identifier	sym		3643004	0					
ANR	3643694	Identifier	paddr		3643004	1					
ANR	3643695	PtrMemberAccess	reloc -> addend		3643004	1					
ANR	3643696	Identifier	reloc		3643004	0					
ANR	3643697	Identifier	addend		3643004	1					
ANR	3643698	CompoundStatement		112:38:2904:2904	3643004	1					
ANR	3643699	ExpressionStatement	reloc -> symbol = sym	513:6:11879:11898	3643004	0	True				
ANR	3643700	AssignmentExpression	reloc -> symbol = sym		3643004	0		=			
ANR	3643701	PtrMemberAccess	reloc -> symbol		3643004	0					
ANR	3643702	Identifier	reloc		3643004	0					
ANR	3643703	Identifier	symbol		3643004	1					
ANR	3643704	Identifier	sym		3643004	1					
ANR	3643705	BreakStatement	break ;	514:6:11906:11911	3643004	1	True				
ANR	3643706	IfStatement	if ( rel . flags & ADDITIVE )		3643004	8					
ANR	3643707	Condition	rel . flags & ADDITIVE	519:7:11939:11958	3643004	0	True				
ANR	3643708	BitAndExpression	rel . flags & ADDITIVE		3643004	0		&			
ANR	3643709	MemberAccess	rel . flags		3643004	0					
ANR	3643710	Identifier	rel		3643004	0					
ANR	3643711	Identifier	flags		3643004	1					
ANR	3643712	Identifier	ADDITIVE		3643004	1					
ANR	3643713	CompoundStatement		119:29:2994:2994	3643004	1					
ANR	3643714	ExpressionStatement	reloc -> additive = 1	520:4:11967:11986	3643004	0	True				
ANR	3643715	AssignmentExpression	reloc -> additive = 1		3643004	0		=			
ANR	3643716	PtrMemberAccess	reloc -> additive		3643004	0					
ANR	3643717	Identifier	reloc		3643004	0					
ANR	3643718	Identifier	additive		3643004	1					
ANR	3643719	PrimaryExpression	1		3643004	1					
ANR	3643720	ExpressionStatement	"r_list_append ( relocs , reloc )"	521:4:11992:12021	3643004	1	True				
ANR	3643721	CallExpression	"r_list_append ( relocs , reloc )"		3643004	0					
ANR	3643722	Callee	r_list_append		3643004	0					
ANR	3643723	Identifier	r_list_append		3643004	0					
ANR	3643724	ArgumentList	relocs		3643004	1					
ANR	3643725	Argument	relocs		3643004	0					
ANR	3643726	Identifier	relocs		3643004	0					
ANR	3643727	Argument	reloc		3643004	1					
ANR	3643728	Identifier	reloc		3643004	0					
ANR	3643729	ElseStatement	else		3643004	0					
ANR	3643730	CompoundStatement		122:10:3066:3066	3643004	0					
ANR	3643731	DoStatement	do		3643004	0					
ANR	3643732	CompoundStatement		127:5:3183:3205	3643004	0					
ANR	3643733	ExpressionStatement	"r_list_append ( relocs , reloc )"	524:5:12049:12078	3643004	0	True				
ANR	3643734	CallExpression	"r_list_append ( relocs , reloc )"		3643004	0					
ANR	3643735	Callee	r_list_append		3643004	0					
ANR	3643736	Identifier	r_list_append		3643004	0					
ANR	3643737	ArgumentList	relocs		3643004	1					
ANR	3643738	Argument	relocs		3643004	0					
ANR	3643739	Identifier	relocs		3643004	0					
ANR	3643740	Argument	reloc		3643004	1					
ANR	3643741	Identifier	reloc		3643004	0					
ANR	3643742	ExpressionStatement	"offset = r_buf_read_le16_at ( bin -> buf , reloc -> paddr )"	526:5:12091:12143	3643004	1	True				
ANR	3643743	AssignmentExpression	"offset = r_buf_read_le16_at ( bin -> buf , reloc -> paddr )"		3643004	0		=			
ANR	3643744	Identifier	offset		3643004	0					
ANR	3643745	CallExpression	"r_buf_read_le16_at ( bin -> buf , reloc -> paddr )"		3643004	1					
ANR	3643746	Callee	r_buf_read_le16_at		3643004	0					
ANR	3643747	Identifier	r_buf_read_le16_at		3643004	0					
ANR	3643748	ArgumentList	bin -> buf		3643004	1					
ANR	3643749	Argument	bin -> buf		3643004	0					
ANR	3643750	PtrMemberAccess	bin -> buf		3643004	0					
ANR	3643751	Identifier	bin		3643004	0					
ANR	3643752	Identifier	buf		3643004	1					
ANR	3643753	Argument	reloc -> paddr		3643004	1					
ANR	3643754	PtrMemberAccess	reloc -> paddr		3643004	0					
ANR	3643755	Identifier	reloc		3643004	0					
ANR	3643756	Identifier	paddr		3643004	1					
ANR	3643757	IdentifierDeclStatement	RBinReloc * tmp = reloc ;	527:5:12150:12172	3643004	2	True				
ANR	3643758	IdentifierDecl	* tmp = reloc		3643004	0					
ANR	3643759	IdentifierDeclType	RBinReloc *		3643004	0					
ANR	3643760	Identifier	tmp		3643004	1					
ANR	3643761	AssignmentExpression	* tmp = reloc		3643004	2		=			
ANR	3643762	Identifier	reloc		3643004	0					
ANR	3643763	Identifier	reloc		3643004	1					
ANR	3643764	ExpressionStatement	reloc = R_NEW0 ( RBinReloc )	528:5:12179:12205	3643004	3	True				
ANR	3643765	AssignmentExpression	reloc = R_NEW0 ( RBinReloc )		3643004	0		=			
ANR	3643766	Identifier	reloc		3643004	0					
ANR	3643767	CallExpression	R_NEW0 ( RBinReloc )		3643004	1					
ANR	3643768	Callee	R_NEW0		3643004	0					
ANR	3643769	Identifier	R_NEW0		3643004	0					
ANR	3643770	ArgumentList	RBinReloc		3643004	1					
ANR	3643771	Argument	RBinReloc		3643004	0					
ANR	3643772	Identifier	RBinReloc		3643004	0					
ANR	3643773	IfStatement	if ( ! reloc )		3643004	4					
ANR	3643774	Condition	! reloc	529:9:12216:12221	3643004	0	True				
ANR	3643775	UnaryOperationExpression	! reloc		3643004	0					
ANR	3643776	UnaryOperator	!		3643004	0					
ANR	3643777	Identifier	reloc		3643004	1					
ANR	3643778	CompoundStatement		129:17:3257:3257	3643004	1					
ANR	3643779	BreakStatement	break ;	530:6:12232:12237	3643004	0	True				
ANR	3643780	ExpressionStatement	* reloc = * tmp	532:5:12251:12264	3643004	5	True				
ANR	3643781	AssignmentExpression	* reloc = * tmp		3643004	0		=			
ANR	3643782	UnaryOperationExpression	* reloc		3643004	0					
ANR	3643783	UnaryOperator	*		3643004	0					
ANR	3643784	Identifier	reloc		3643004	1					
ANR	3643785	UnaryOperationExpression	* tmp		3643004	1					
ANR	3643786	UnaryOperator	*		3643004	0					
ANR	3643787	Identifier	tmp		3643004	1					
ANR	3643788	ExpressionStatement	reloc -> paddr = seg -> paddr + offset	533:5:12271:12305	3643004	6	True				
ANR	3643789	AssignmentExpression	reloc -> paddr = seg -> paddr + offset		3643004	0		=			
ANR	3643790	PtrMemberAccess	reloc -> paddr		3643004	0					
ANR	3643791	Identifier	reloc		3643004	0					
ANR	3643792	Identifier	paddr		3643004	1					
ANR	3643793	AdditiveExpression	seg -> paddr + offset		3643004	1		+			
ANR	3643794	PtrMemberAccess	seg -> paddr		3643004	0					
ANR	3643795	Identifier	seg		3643004	0					
ANR	3643796	Identifier	paddr		3643004	1					
ANR	3643797	Identifier	offset		3643004	1					
ANR	3643798	Condition	offset != 0xFFFF	534:13:12320:12335	3643004	1	True				
ANR	3643799	EqualityExpression	offset != 0xFFFF		3643004	0		!=			
ANR	3643800	Identifier	offset		3643004	0					
ANR	3643801	PrimaryExpression	0xFFFF		3643004	1					
ANR	3643802	ExpressionStatement	free ( reloc )	535:4:12343:12355	3643004	1	True				
ANR	3643803	CallExpression	free ( reloc )		3643004	0					
ANR	3643804	Callee	free		3643004	0					
ANR	3643805	Identifier	free		3643004	0					
ANR	3643806	ArgumentList	reloc		3643004	1					
ANR	3643807	Argument	reloc		3643004	0					
ANR	3643808	Identifier	reloc		3643004	0					
ANR	3643809	ExpressionStatement	off += sizeof ( NE_image_reloc_item )	538:3:12366:12401	3643004	9	True				
ANR	3643810	AssignmentExpression	off += sizeof ( NE_image_reloc_item )		3643004	0		+=			
ANR	3643811	Identifier	off		3643004	0					
ANR	3643812	SizeofExpression	sizeof ( NE_image_reloc_item )		3643004	1					
ANR	3643813	Sizeof	sizeof		3643004	0					
ANR	3643814	SizeofOperand	NE_image_reloc_item		3643004	1					
ANR	3643815	ExpressionStatement	free ( modref )	541:1:12411:12424	3643004	23	True				
ANR	3643816	CallExpression	free ( modref )		3643004	0					
ANR	3643817	Callee	free		3643004	0					
ANR	3643818	Identifier	free		3643004	0					
ANR	3643819	ArgumentList	modref		3643004	1					
ANR	3643820	Argument	modref		3643004	0					
ANR	3643821	Identifier	modref		3643004	0					
ANR	3643822	ReturnStatement	return relocs ;	542:1:12427:12440	3643004	24	True				
ANR	3643823	Identifier	relocs		3643004	0					
ANR	3643824	ReturnType	RList *		3643004	1					
ANR	3643825	Identifier	r_bin_ne_get_relocs		3643004	2					
ANR	3643826	ParameterList	r_bin_ne_obj_t * bin		3643004	3					
ANR	3643827	Parameter	r_bin_ne_obj_t * bin	401:27:8945:8963	3643004	0	True				
ANR	3643828	ParameterType	r_bin_ne_obj_t *		3643004	0					
ANR	3643829	Identifier	bin		3643004	1					
ANR	3643830	CFGEntryNode	ENTRY		3643004		True				
ANR	3643831	CFGExitNode	EXIT		3643004		True				
ANR	3643832	CFGErrorNode	ERROR		3643004		True				
ANR	3643833	Symbol	* modref		3643004						
ANR	3643834	Symbol	bin		3643004						
ANR	3643835	Symbol	reloc -> addend		3643004						
ANR	3643836	Symbol	* index		3643004						
ANR	3643837	Symbol	bin -> ne_header -> ImportNameTable		3643004						
ANR	3643838	Symbol	* imp		3643004						
ANR	3643839	Symbol	reloc -> paddr		3643004						
ANR	3643840	Symbol	bin -> entries		3643004						
ANR	3643841	Symbol	rel . flags		3643004						
ANR	3643842	Symbol	entry -> paddr		3643004						
ANR	3643843	Symbol	rel . index		3643004						
ANR	3643844	Symbol	imp -> ordinal		3643004						
ANR	3643845	Symbol	tmp		3643004						
ANR	3643846	Symbol	RBinReloc		3643004						
ANR	3643847	Symbol	bin -> header_offset		3643004						
ANR	3643848	Symbol	rel		3643004						
ANR	3643849	Symbol	modref		3643004						
ANR	3643850	Symbol	reloc -> import		3643004						
ANR	3643851	Symbol	* rel . index		3643004						
ANR	3643852	Symbol	R_BIN_RELOC_64		3643004						
ANR	3643853	Symbol	rel . type		3643004						
ANR	3643854	Symbol	NULL		3643004						
ANR	3643855	Symbol	* bin -> segment_entries		3643004						
ANR	3643856	Symbol	rel . name_off		3643004						
ANR	3643857	Symbol	offset		3643004						
ANR	3643858	Symbol	r_list_newf		3643004						
ANR	3643859	Symbol	imp -> name		3643004						
ANR	3643860	Symbol	reloc -> symbol		3643004						
ANR	3643861	Symbol	index		3643004						
ANR	3643862	Symbol	r_list_get_n		3643004						
ANR	3643863	Symbol	it		3643004						
ANR	3643864	Symbol	relocs		3643004						
ANR	3643865	Symbol	RELOCINFO		3643004						
ANR	3643866	Symbol	R_NEW0		3643004						
ANR	3643867	Symbol	entry		3643004						
ANR	3643868	Symbol	* sym		3643004						
ANR	3643869	Symbol	entries		3643004						
ANR	3643870	Symbol	__func_name_from_ord		3643004						
ANR	3643871	Symbol	strstr		3643004						
ANR	3643872	Symbol	& rel		3643004						
ANR	3643873	Symbol	rel . offset		3643004						
ANR	3643874	Symbol	name		3643004						
ANR	3643875	Symbol	R_BIN_RELOC_32		3643004						
ANR	3643876	Symbol	* seg		3643004						
ANR	3643877	Symbol	* tmp		3643004						
ANR	3643878	Symbol	* rel		3643004						
ANR	3643879	Symbol	ADDITIVE		3643004						
ANR	3643880	Symbol	bin -> buf		3643004						
ANR	3643881	Symbol	sym		3643004						
ANR	3643882	Symbol	R_BIN_RELOC_8		3643004						
ANR	3643883	Symbol	OSFIXUP		3643004						
ANR	3643884	Symbol	* bin -> ne_header		3643004						
ANR	3643885	Symbol	rel . segoff		3643004						
ANR	3643886	Symbol	reloc -> type		3643004						
ANR	3643887	Symbol	r_str_newf		3643004						
ANR	3643888	Symbol	imp		3643004						
ANR	3643889	Symbol	* bin		3643004						
ANR	3643890	Symbol	symbols		3643004						
ANR	3643891	Symbol	segments		3643004						
ANR	3643892	Symbol	seg -> name		3643004						
ANR	3643893	Symbol	reloc -> additive		3643004						
ANR	3643894	Symbol	seg		3643004						
ANR	3643895	Symbol	bin -> segment_entries [ index ] . flags		3643004						
ANR	3643896	Symbol	IMPORTED_NAME		3643004						
ANR	3643897	Symbol	bin -> ne_header -> ModRefTable		3643004						
ANR	3643898	Symbol	__read_nonnull_str_at		3643004						
ANR	3643899	Symbol	* * bin		3643004						
ANR	3643900	Symbol	reloc		3643004						
ANR	3643901	Symbol	free		3643004						
ANR	3643902	Symbol	r_buf_read_le16_at		3643004						
ANR	3643903	Symbol	bin -> ne_header -> ModRefs		3643004						
ANR	3643904	Symbol	IMPORTED_ORD		3643004						
ANR	3643905	Symbol	* entry		3643004						
ANR	3643906	Symbol	sit		3643004						
ANR	3643907	Symbol	RBinImport		3643004						
ANR	3643908	Symbol	malloc		3643004						
ANR	3643909	Symbol	* reloc		3643004						
ANR	3643910	Symbol	bin -> symbols		3643004						
ANR	3643911	Symbol	seg -> size		3643004						
ANR	3643912	Symbol	bin -> segments		3643004						
ANR	3643913	Symbol	rel . entry_ordinal		3643004						
ANR	3643914	Symbol	start		3643004						
ANR	3643915	Symbol	length		3643004						
ANR	3643916	Symbol	sym -> paddr		3643004						
ANR	3643917	Symbol	s -> paddr		3643004						
ANR	3643918	Symbol	bin -> ne_header		3643004						
ANR	3643919	Symbol	off		3643004						
ANR	3643920	Symbol	rel . segnum		3643004						
ANR	3643921	Symbol	seg -> paddr		3643004						
ANR	3643922	Symbol	s		3643004						
ANR	3643923	Symbol	func		3643004						
ANR	3643924	Symbol	R_BIN_RELOC_16		3643004						
ANR	3643925	Symbol	bin -> segment_entries		3643004						
ANR	3643926	Symbol	rel . func_ord		3643004						
ANR	3643927	Symbol	* s		3643004						
ANR	3643928	Function	__init	545:0:12445:13446							
ANR	3643929	FunctionDef	"__init (RBuffer * buf , r_bin_ne_obj_t * bin)"		3643928	0					
ANR	3643930	CompoundStatement		545:47:12492:13446	3643928	0					
ANR	3643931	ExpressionStatement	"bin -> header_offset = r_buf_read_le16_at ( buf , 0x3c )"	546:1:12495:12546	3643928	0	True				
ANR	3643932	AssignmentExpression	"bin -> header_offset = r_buf_read_le16_at ( buf , 0x3c )"		3643928	0		=			
ANR	3643933	PtrMemberAccess	bin -> header_offset		3643928	0					
ANR	3643934	Identifier	bin		3643928	0					
ANR	3643935	Identifier	header_offset		3643928	1					
ANR	3643936	CallExpression	"r_buf_read_le16_at ( buf , 0x3c )"		3643928	1					
ANR	3643937	Callee	r_buf_read_le16_at		3643928	0					
ANR	3643938	Identifier	r_buf_read_le16_at		3643928	0					
ANR	3643939	ArgumentList	buf		3643928	1					
ANR	3643940	Argument	buf		3643928	0					
ANR	3643941	Identifier	buf		3643928	0					
ANR	3643942	Argument	0x3c		3643928	1					
ANR	3643943	PrimaryExpression	0x3c		3643928	0					
ANR	3643944	ExpressionStatement	bin -> ne_header = R_NEW0 ( NE_image_header )	547:1:12549:12590	3643928	1	True				
ANR	3643945	AssignmentExpression	bin -> ne_header = R_NEW0 ( NE_image_header )		3643928	0		=			
ANR	3643946	PtrMemberAccess	bin -> ne_header		3643928	0					
ANR	3643947	Identifier	bin		3643928	0					
ANR	3643948	Identifier	ne_header		3643928	1					
ANR	3643949	CallExpression	R_NEW0 ( NE_image_header )		3643928	1					
ANR	3643950	Callee	R_NEW0		3643928	0					
ANR	3643951	Identifier	R_NEW0		3643928	0					
ANR	3643952	ArgumentList	NE_image_header		3643928	1					
ANR	3643953	Argument	NE_image_header		3643928	0					
ANR	3643954	Identifier	NE_image_header		3643928	0					
ANR	3643955	IfStatement	if ( ! bin -> ne_header )		3643928	2					
ANR	3643956	Condition	! bin -> ne_header	548:5:12597:12611	3643928	0	True				
ANR	3643957	UnaryOperationExpression	! bin -> ne_header		3643928	0					
ANR	3643958	UnaryOperator	!		3643928	0					
ANR	3643959	PtrMemberAccess	bin -> ne_header		3643928	1					
ANR	3643960	Identifier	bin		3643928	0					
ANR	3643961	Identifier	ne_header		3643928	1					
ANR	3643962	CompoundStatement		4:22:121:121	3643928	1					
ANR	3643963	ReturnStatement	return ;	549:2:12618:12624	3643928	0	True				
ANR	3643964	ExpressionStatement	bin -> buf = buf	551:1:12630:12644	3643928	3	True				
ANR	3643965	AssignmentExpression	bin -> buf = buf		3643928	0		=			
ANR	3643966	PtrMemberAccess	bin -> buf		3643928	0					
ANR	3643967	Identifier	bin		3643928	0					
ANR	3643968	Identifier	buf		3643928	1					
ANR	3643969	Identifier	buf		3643928	1					
ANR	3643970	ExpressionStatement	"r_buf_read_at ( buf , bin -> header_offset , ( ut8 * ) bin -> ne_header , sizeof ( NE_image_header ) )"	552:1:12647:12735	3643928	4	True				
ANR	3643971	CallExpression	"r_buf_read_at ( buf , bin -> header_offset , ( ut8 * ) bin -> ne_header , sizeof ( NE_image_header ) )"		3643928	0					
ANR	3643972	Callee	r_buf_read_at		3643928	0					
ANR	3643973	Identifier	r_buf_read_at		3643928	0					
ANR	3643974	ArgumentList	buf		3643928	1					
ANR	3643975	Argument	buf		3643928	0					
ANR	3643976	Identifier	buf		3643928	0					
ANR	3643977	Argument	bin -> header_offset		3643928	1					
ANR	3643978	PtrMemberAccess	bin -> header_offset		3643928	0					
ANR	3643979	Identifier	bin		3643928	0					
ANR	3643980	Identifier	header_offset		3643928	1					
ANR	3643981	Argument	( ut8 * ) bin -> ne_header		3643928	2					
ANR	3643982	CastExpression	( ut8 * ) bin -> ne_header		3643928	0					
ANR	3643983	CastTarget	ut8 *		3643928	0					
ANR	3643984	PtrMemberAccess	bin -> ne_header		3643928	1					
ANR	3643985	Identifier	bin		3643928	0					
ANR	3643986	Identifier	ne_header		3643928	1					
ANR	3643987	Argument	sizeof ( NE_image_header )		3643928	3					
ANR	3643988	SizeofExpression	sizeof ( NE_image_header )		3643928	0					
ANR	3643989	Sizeof	sizeof		3643928	0					
ANR	3643990	SizeofOperand	NE_image_header		3643928	1					
ANR	3643991	ExpressionStatement	bin -> alignment = 1 << bin -> ne_header -> FileAlnSzShftCnt	553:1:12738:12792	3643928	5	True				
ANR	3643992	AssignmentExpression	bin -> alignment = 1 << bin -> ne_header -> FileAlnSzShftCnt		3643928	0		=			
ANR	3643993	PtrMemberAccess	bin -> alignment		3643928	0					
ANR	3643994	Identifier	bin		3643928	0					
ANR	3643995	Identifier	alignment		3643928	1					
ANR	3643996	ShiftExpression	1 << bin -> ne_header -> FileAlnSzShftCnt		3643928	1		<<			
ANR	3643997	PrimaryExpression	1		3643928	0					
ANR	3643998	PtrMemberAccess	bin -> ne_header -> FileAlnSzShftCnt		3643928	1					
ANR	3643999	PtrMemberAccess	bin -> ne_header		3643928	0					
ANR	3644000	Identifier	bin		3643928	0					
ANR	3644001	Identifier	ne_header		3643928	1					
ANR	3644002	Identifier	FileAlnSzShftCnt		3643928	1					
ANR	3644003	IfStatement	if ( ! bin -> alignment )		3643928	6					
ANR	3644004	Condition	! bin -> alignment	554:5:12799:12813	3643928	0	True				
ANR	3644005	UnaryOperationExpression	! bin -> alignment		3643928	0					
ANR	3644006	UnaryOperator	!		3643928	0					
ANR	3644007	PtrMemberAccess	bin -> alignment		3643928	1					
ANR	3644008	Identifier	bin		3643928	0					
ANR	3644009	Identifier	alignment		3643928	1					
ANR	3644010	CompoundStatement		10:22:323:323	3643928	1					
ANR	3644011	ExpressionStatement	bin -> alignment = 1 << 9	555:2:12820:12843	3643928	0	True				
ANR	3644012	AssignmentExpression	bin -> alignment = 1 << 9		3643928	0		=			
ANR	3644013	PtrMemberAccess	bin -> alignment		3643928	0					
ANR	3644014	Identifier	bin		3643928	0					
ANR	3644015	Identifier	alignment		3643928	1					
ANR	3644016	ShiftExpression	1 << 9		3643928	1		<<			
ANR	3644017	PrimaryExpression	1		3643928	0					
ANR	3644018	PrimaryExpression	9		3643928	1					
ANR	3644019	ExpressionStatement	bin -> os = __get_target_os ( bin )	557:1:12849:12880	3643928	7	True				
ANR	3644020	AssignmentExpression	bin -> os = __get_target_os ( bin )		3643928	0		=			
ANR	3644021	PtrMemberAccess	bin -> os		3643928	0					
ANR	3644022	Identifier	bin		3643928	0					
ANR	3644023	Identifier	os		3643928	1					
ANR	3644024	CallExpression	__get_target_os ( bin )		3643928	1					
ANR	3644025	Callee	__get_target_os		3643928	0					
ANR	3644026	Identifier	__get_target_os		3643928	0					
ANR	3644027	ArgumentList	bin		3643928	1					
ANR	3644028	Argument	bin		3643928	0					
ANR	3644029	Identifier	bin		3643928	0					
ANR	3644030	IdentifierDeclStatement	ut16 offset = bin -> ne_header -> SegTableOffset + bin -> header_offset ;	559:1:12884:12949	3643928	8	True				
ANR	3644031	IdentifierDecl	offset = bin -> ne_header -> SegTableOffset + bin -> header_offset		3643928	0					
ANR	3644032	IdentifierDeclType	ut16		3643928	0					
ANR	3644033	Identifier	offset		3643928	1					
ANR	3644034	AssignmentExpression	offset = bin -> ne_header -> SegTableOffset + bin -> header_offset		3643928	2		=			
ANR	3644035	Identifier	offset		3643928	0					
ANR	3644036	AdditiveExpression	bin -> ne_header -> SegTableOffset + bin -> header_offset		3643928	1		+			
ANR	3644037	PtrMemberAccess	bin -> ne_header -> SegTableOffset		3643928	0					
ANR	3644038	PtrMemberAccess	bin -> ne_header		3643928	0					
ANR	3644039	Identifier	bin		3643928	0					
ANR	3644040	Identifier	ne_header		3643928	1					
ANR	3644041	Identifier	SegTableOffset		3643928	1					
ANR	3644042	PtrMemberAccess	bin -> header_offset		3643928	1					
ANR	3644043	Identifier	bin		3643928	0					
ANR	3644044	Identifier	header_offset		3643928	1					
ANR	3644045	IdentifierDeclStatement	ut16 size = bin -> ne_header -> SegCount * sizeof ( NE_image_segment_entry ) ;	560:1:12952:13022	3643928	9	True				
ANR	3644046	IdentifierDecl	size = bin -> ne_header -> SegCount * sizeof ( NE_image_segment_entry )		3643928	0					
ANR	3644047	IdentifierDeclType	ut16		3643928	0					
ANR	3644048	Identifier	size		3643928	1					
ANR	3644049	AssignmentExpression	size = bin -> ne_header -> SegCount * sizeof ( NE_image_segment_entry )		3643928	2		=			
ANR	3644050	Identifier	size		3643928	0					
ANR	3644051	MultiplicativeExpression	bin -> ne_header -> SegCount * sizeof ( NE_image_segment_entry )		3643928	1		*			
ANR	3644052	PtrMemberAccess	bin -> ne_header -> SegCount		3643928	0					
ANR	3644053	PtrMemberAccess	bin -> ne_header		3643928	0					
ANR	3644054	Identifier	bin		3643928	0					
ANR	3644055	Identifier	ne_header		3643928	1					
ANR	3644056	Identifier	SegCount		3643928	1					
ANR	3644057	SizeofExpression	sizeof ( NE_image_segment_entry )		3643928	1					
ANR	3644058	Sizeof	sizeof		3643928	0					
ANR	3644059	SizeofOperand	NE_image_segment_entry		3643928	1					
ANR	3644060	ExpressionStatement	"bin -> segment_entries = calloc ( 1 , size )"	561:1:13025:13064	3643928	10	True				
ANR	3644061	AssignmentExpression	"bin -> segment_entries = calloc ( 1 , size )"		3643928	0		=			
ANR	3644062	PtrMemberAccess	bin -> segment_entries		3643928	0					
ANR	3644063	Identifier	bin		3643928	0					
ANR	3644064	Identifier	segment_entries		3643928	1					
ANR	3644065	CallExpression	"calloc ( 1 , size )"		3643928	1					
ANR	3644066	Callee	calloc		3643928	0					
ANR	3644067	Identifier	calloc		3643928	0					
ANR	3644068	ArgumentList	1		3643928	1					
ANR	3644069	Argument	1		3643928	0					
ANR	3644070	PrimaryExpression	1		3643928	0					
ANR	3644071	Argument	size		3643928	1					
ANR	3644072	Identifier	size		3643928	0					
ANR	3644073	IfStatement	if ( ! bin -> segment_entries )		3643928	11					
ANR	3644074	Condition	! bin -> segment_entries	562:5:13071:13091	3643928	0	True				
ANR	3644075	UnaryOperationExpression	! bin -> segment_entries		3643928	0					
ANR	3644076	UnaryOperator	!		3643928	0					
ANR	3644077	PtrMemberAccess	bin -> segment_entries		3643928	1					
ANR	3644078	Identifier	bin		3643928	0					
ANR	3644079	Identifier	segment_entries		3643928	1					
ANR	3644080	CompoundStatement		18:28:601:601	3643928	1					
ANR	3644081	ReturnStatement	return ;	563:2:13098:13104	3643928	0	True				
ANR	3644082	ExpressionStatement	"r_buf_read_at ( buf , offset , ( ut8 * ) bin -> segment_entries , size )"	565:1:13110:13172	3643928	12	True				
ANR	3644083	CallExpression	"r_buf_read_at ( buf , offset , ( ut8 * ) bin -> segment_entries , size )"		3643928	0					
ANR	3644084	Callee	r_buf_read_at		3643928	0					
ANR	3644085	Identifier	r_buf_read_at		3643928	0					
ANR	3644086	ArgumentList	buf		3643928	1					
ANR	3644087	Argument	buf		3643928	0					
ANR	3644088	Identifier	buf		3643928	0					
ANR	3644089	Argument	offset		3643928	1					
ANR	3644090	Identifier	offset		3643928	0					
ANR	3644091	Argument	( ut8 * ) bin -> segment_entries		3643928	2					
ANR	3644092	CastExpression	( ut8 * ) bin -> segment_entries		3643928	0					
ANR	3644093	CastTarget	ut8 *		3643928	0					
ANR	3644094	PtrMemberAccess	bin -> segment_entries		3643928	1					
ANR	3644095	Identifier	bin		3643928	0					
ANR	3644096	Identifier	segment_entries		3643928	1					
ANR	3644097	Argument	size		3643928	3					
ANR	3644098	Identifier	size		3643928	0					
ANR	3644099	ExpressionStatement	"bin -> entry_table = calloc ( 1 , bin -> ne_header -> EntryTableLength )"	566:1:13175:13238	3643928	13	True				
ANR	3644100	AssignmentExpression	"bin -> entry_table = calloc ( 1 , bin -> ne_header -> EntryTableLength )"		3643928	0		=			
ANR	3644101	PtrMemberAccess	bin -> entry_table		3643928	0					
ANR	3644102	Identifier	bin		3643928	0					
ANR	3644103	Identifier	entry_table		3643928	1					
ANR	3644104	CallExpression	"calloc ( 1 , bin -> ne_header -> EntryTableLength )"		3643928	1					
ANR	3644105	Callee	calloc		3643928	0					
ANR	3644106	Identifier	calloc		3643928	0					
ANR	3644107	ArgumentList	1		3643928	1					
ANR	3644108	Argument	1		3643928	0					
ANR	3644109	PrimaryExpression	1		3643928	0					
ANR	3644110	Argument	bin -> ne_header -> EntryTableLength		3643928	1					
ANR	3644111	PtrMemberAccess	bin -> ne_header -> EntryTableLength		3643928	0					
ANR	3644112	PtrMemberAccess	bin -> ne_header		3643928	0					
ANR	3644113	Identifier	bin		3643928	0					
ANR	3644114	Identifier	ne_header		3643928	1					
ANR	3644115	Identifier	EntryTableLength		3643928	1					
ANR	3644116	ExpressionStatement	"r_buf_read_at ( buf , ( ut64 ) bin -> header_offset + bin -> ne_header -> EntryTableOffset , bin -> entry_table , bin -> ne_header -> EntryTableLength )"	567:1:13241:13373	3643928	14	True				
ANR	3644117	CallExpression	"r_buf_read_at ( buf , ( ut64 ) bin -> header_offset + bin -> ne_header -> EntryTableOffset , bin -> entry_table , bin -> ne_header -> EntryTableLength )"		3643928	0					
ANR	3644118	Callee	r_buf_read_at		3643928	0					
ANR	3644119	Identifier	r_buf_read_at		3643928	0					
ANR	3644120	ArgumentList	buf		3643928	1					
ANR	3644121	Argument	buf		3643928	0					
ANR	3644122	Identifier	buf		3643928	0					
ANR	3644123	Argument	( ut64 ) bin -> header_offset + bin -> ne_header -> EntryTableOffset		3643928	1					
ANR	3644124	AdditiveExpression	( ut64 ) bin -> header_offset + bin -> ne_header -> EntryTableOffset		3643928	0		+			
ANR	3644125	CastExpression	( ut64 ) bin -> header_offset		3643928	0					
ANR	3644126	CastTarget	ut64		3643928	0					
ANR	3644127	PtrMemberAccess	bin -> header_offset		3643928	1					
ANR	3644128	Identifier	bin		3643928	0					
ANR	3644129	Identifier	header_offset		3643928	1					
ANR	3644130	PtrMemberAccess	bin -> ne_header -> EntryTableOffset		3643928	1					
ANR	3644131	PtrMemberAccess	bin -> ne_header		3643928	0					
ANR	3644132	Identifier	bin		3643928	0					
ANR	3644133	Identifier	ne_header		3643928	1					
ANR	3644134	Identifier	EntryTableOffset		3643928	1					
ANR	3644135	Argument	bin -> entry_table		3643928	2					
ANR	3644136	PtrMemberAccess	bin -> entry_table		3643928	0					
ANR	3644137	Identifier	bin		3643928	0					
ANR	3644138	Identifier	entry_table		3643928	1					
ANR	3644139	Argument	bin -> ne_header -> EntryTableLength		3643928	3					
ANR	3644140	PtrMemberAccess	bin -> ne_header -> EntryTableLength		3643928	0					
ANR	3644141	PtrMemberAccess	bin -> ne_header		3643928	0					
ANR	3644142	Identifier	bin		3643928	0					
ANR	3644143	Identifier	ne_header		3643928	1					
ANR	3644144	Identifier	EntryTableLength		3643928	1					
ANR	3644145	ExpressionStatement	bin -> imports = r_bin_ne_get_imports ( bin )	568:1:13376:13417	3643928	15	True				
ANR	3644146	AssignmentExpression	bin -> imports = r_bin_ne_get_imports ( bin )		3643928	0		=			
ANR	3644147	PtrMemberAccess	bin -> imports		3643928	0					
ANR	3644148	Identifier	bin		3643928	0					
ANR	3644149	Identifier	imports		3643928	1					
ANR	3644150	CallExpression	r_bin_ne_get_imports ( bin )		3643928	1					
ANR	3644151	Callee	r_bin_ne_get_imports		3643928	0					
ANR	3644152	Identifier	r_bin_ne_get_imports		3643928	0					
ANR	3644153	ArgumentList	bin		3643928	1					
ANR	3644154	Argument	bin		3643928	0					
ANR	3644155	Identifier	bin		3643928	0					
ANR	3644156	ExpressionStatement	__ne_get_resources ( bin )	569:1:13420:13444	3643928	16	True				
ANR	3644157	CallExpression	__ne_get_resources ( bin )		3643928	0					
ANR	3644158	Callee	__ne_get_resources		3643928	0					
ANR	3644159	Identifier	__ne_get_resources		3643928	0					
ANR	3644160	ArgumentList	bin		3643928	1					
ANR	3644161	Argument	bin		3643928	0					
ANR	3644162	Identifier	bin		3643928	0					
ANR	3644163	ReturnType	void		3643928	1					
ANR	3644164	Identifier	__init		3643928	2					
ANR	3644165	ParameterList	"RBuffer * buf , r_bin_ne_obj_t * bin"		3643928	3					
ANR	3644166	Parameter	RBuffer * buf	545:12:12457:12468	3643928	0	True				
ANR	3644167	ParameterType	RBuffer *		3643928	0					
ANR	3644168	Identifier	buf		3643928	1					
ANR	3644169	Parameter	r_bin_ne_obj_t * bin	545:26:12471:12489	3643928	1	True				
ANR	3644170	ParameterType	r_bin_ne_obj_t *		3643928	0					
ANR	3644171	Identifier	bin		3643928	1					
ANR	3644172	CFGEntryNode	ENTRY		3643928		True				
ANR	3644173	CFGExitNode	EXIT		3643928		True				
ANR	3644174	Symbol	bin -> alignment		3643928						
ANR	3644175	Symbol	__get_target_os		3643928						
ANR	3644176	Symbol	bin		3643928						
ANR	3644177	Symbol	bin -> buf		3643928						
ANR	3644178	Symbol	bin -> imports		3643928						
ANR	3644179	Symbol	bin -> ne_header -> EntryTableLength		3643928						
ANR	3644180	Symbol	* bin -> ne_header		3643928						
ANR	3644181	Symbol	calloc		3643928						
ANR	3644182	Symbol	* bin		3643928						
ANR	3644183	Symbol	bin -> ne_header -> SegTableOffset		3643928						
ANR	3644184	Symbol	bin -> entry_table		3643928						
ANR	3644185	Symbol	r_bin_ne_get_imports		3643928						
ANR	3644186	Symbol	bin -> header_offset		3643928						
ANR	3644187	Symbol	* * bin		3643928						
ANR	3644188	Symbol	r_buf_read_le16_at		3643928						
ANR	3644189	Symbol	offset		3643928						
ANR	3644190	Symbol	bin -> ne_header		3643928						
ANR	3644191	Symbol	NE_image_header		3643928						
ANR	3644192	Symbol	bin -> ne_header -> SegCount		3643928						
ANR	3644193	Symbol	R_NEW0		3643928						
ANR	3644194	Symbol	buf		3643928						
ANR	3644195	Symbol	size		3643928						
ANR	3644196	Symbol	bin -> ne_header -> FileAlnSzShftCnt		3643928						
ANR	3644197	Symbol	bin -> os		3643928						
ANR	3644198	Symbol	bin -> segment_entries		3643928						
ANR	3644199	Symbol	bin -> ne_header -> EntryTableOffset		3643928						
ANR	3644200	Function	r_bin_ne_free	572:0:13449:13665							
ANR	3644201	FunctionDef	r_bin_ne_free (r_bin_ne_obj_t * bin)		3644200	0					
ANR	3644202	CompoundStatement		572:40:13489:13665	3644200	0					
ANR	3644203	ExpressionStatement	r_list_free ( bin -> imports )	573:1:13492:13518	3644200	0	True				
ANR	3644204	CallExpression	r_list_free ( bin -> imports )		3644200	0					
ANR	3644205	Callee	r_list_free		3644200	0					
ANR	3644206	Identifier	r_list_free		3644200	0					
ANR	3644207	ArgumentList	bin -> imports		3644200	1					
ANR	3644208	Argument	bin -> imports		3644200	0					
ANR	3644209	PtrMemberAccess	bin -> imports		3644200	0					
ANR	3644210	Identifier	bin		3644200	0					
ANR	3644211	Identifier	imports		3644200	1					
ANR	3644212	ExpressionStatement	r_list_free ( bin -> resources )	574:1:13521:13549	3644200	1	True				
ANR	3644213	CallExpression	r_list_free ( bin -> resources )		3644200	0					
ANR	3644214	Callee	r_list_free		3644200	0					
ANR	3644215	Identifier	r_list_free		3644200	0					
ANR	3644216	ArgumentList	bin -> resources		3644200	1					
ANR	3644217	Argument	bin -> resources		3644200	0					
ANR	3644218	PtrMemberAccess	bin -> resources		3644200	0					
ANR	3644219	Identifier	bin		3644200	0					
ANR	3644220	Identifier	resources		3644200	1					
ANR	3644221	ExpressionStatement	free ( bin -> entry_table )	575:1:13552:13575	3644200	2	True				
ANR	3644222	CallExpression	free ( bin -> entry_table )		3644200	0					
ANR	3644223	Callee	free		3644200	0					
ANR	3644224	Identifier	free		3644200	0					
ANR	3644225	ArgumentList	bin -> entry_table		3644200	1					
ANR	3644226	Argument	bin -> entry_table		3644200	0					
ANR	3644227	PtrMemberAccess	bin -> entry_table		3644200	0					
ANR	3644228	Identifier	bin		3644200	0					
ANR	3644229	Identifier	entry_table		3644200	1					
ANR	3644230	ExpressionStatement	free ( bin -> ne_header )	576:1:13578:13599	3644200	3	True				
ANR	3644231	CallExpression	free ( bin -> ne_header )		3644200	0					
ANR	3644232	Callee	free		3644200	0					
ANR	3644233	Identifier	free		3644200	0					
ANR	3644234	ArgumentList	bin -> ne_header		3644200	1					
ANR	3644235	Argument	bin -> ne_header		3644200	0					
ANR	3644236	PtrMemberAccess	bin -> ne_header		3644200	0					
ANR	3644237	Identifier	bin		3644200	0					
ANR	3644238	Identifier	ne_header		3644200	1					
ANR	3644239	ExpressionStatement	free ( bin -> resident_name_table )	577:1:13602:13633	3644200	4	True				
ANR	3644240	CallExpression	free ( bin -> resident_name_table )		3644200	0					
ANR	3644241	Callee	free		3644200	0					
ANR	3644242	Identifier	free		3644200	0					
ANR	3644243	ArgumentList	bin -> resident_name_table		3644200	1					
ANR	3644244	Argument	bin -> resident_name_table		3644200	0					
ANR	3644245	PtrMemberAccess	bin -> resident_name_table		3644200	0					
ANR	3644246	Identifier	bin		3644200	0					
ANR	3644247	Identifier	resident_name_table		3644200	1					
ANR	3644248	ExpressionStatement	free ( bin -> segment_entries )	578:1:13636:13663	3644200	5	True				
ANR	3644249	CallExpression	free ( bin -> segment_entries )		3644200	0					
ANR	3644250	Callee	free		3644200	0					
ANR	3644251	Identifier	free		3644200	0					
ANR	3644252	ArgumentList	bin -> segment_entries		3644200	1					
ANR	3644253	Argument	bin -> segment_entries		3644200	0					
ANR	3644254	PtrMemberAccess	bin -> segment_entries		3644200	0					
ANR	3644255	Identifier	bin		3644200	0					
ANR	3644256	Identifier	segment_entries		3644200	1					
ANR	3644257	ReturnType	void		3644200	1					
ANR	3644258	Identifier	r_bin_ne_free		3644200	2					
ANR	3644259	ParameterList	r_bin_ne_obj_t * bin		3644200	3					
ANR	3644260	Parameter	r_bin_ne_obj_t * bin	572:19:13468:13486	3644200	0	True				
ANR	3644261	ParameterType	r_bin_ne_obj_t *		3644200	0					
ANR	3644262	Identifier	bin		3644200	1					
ANR	3644263	CFGEntryNode	ENTRY		3644200		True				
ANR	3644264	CFGExitNode	EXIT		3644200		True				
ANR	3644265	Symbol	bin -> entry_table		3644200						
ANR	3644266	Symbol	bin -> resources		3644200						
ANR	3644267	Symbol	bin -> resident_name_table		3644200						
ANR	3644268	Symbol	bin		3644200						
ANR	3644269	Symbol	bin -> imports		3644200						
ANR	3644270	Symbol	bin -> segment_entries		3644200						
ANR	3644271	Symbol	* bin		3644200						
ANR	3644272	Symbol	bin -> ne_header		3644200						
ANR	3644273	Function	r_bin_ne_new_buf	581:0:13668:13842							
ANR	3644274	FunctionDef	"r_bin_ne_new_buf (RBuffer * buf , bool verbose)"		3644273	0					
ANR	3644275	CompoundStatement		581:61:13729:13842	3644273	0					
ANR	3644276	IdentifierDeclStatement	r_bin_ne_obj_t * bin = R_NEW0 ( r_bin_ne_obj_t ) ;	582:1:13732:13777	3644273	0	True				
ANR	3644277	IdentifierDecl	* bin = R_NEW0 ( r_bin_ne_obj_t )		3644273	0					
ANR	3644278	IdentifierDeclType	r_bin_ne_obj_t *		3644273	0					
ANR	3644279	Identifier	bin		3644273	1					
ANR	3644280	AssignmentExpression	* bin = R_NEW0 ( r_bin_ne_obj_t )		3644273	2		=			
ANR	3644281	Identifier	bin		3644273	0					
ANR	3644282	CallExpression	R_NEW0 ( r_bin_ne_obj_t )		3644273	1					
ANR	3644283	Callee	R_NEW0		3644273	0					
ANR	3644284	Identifier	R_NEW0		3644273	0					
ANR	3644285	ArgumentList	r_bin_ne_obj_t		3644273	1					
ANR	3644286	Argument	r_bin_ne_obj_t		3644273	0					
ANR	3644287	Identifier	r_bin_ne_obj_t		3644273	0					
ANR	3644288	IfStatement	if ( ! bin )		3644273	1					
ANR	3644289	Condition	! bin	583:5:13784:13787	3644273	0	True				
ANR	3644290	UnaryOperationExpression	! bin		3644273	0					
ANR	3644291	UnaryOperator	!		3644273	0					
ANR	3644292	Identifier	bin		3644273	1					
ANR	3644293	CompoundStatement		3:11:60:60	3644273	1					
ANR	3644294	ReturnStatement	return NULL ;	584:2:13794:13805	3644273	0	True				
ANR	3644295	Identifier	NULL		3644273	0					
ANR	3644296	ExpressionStatement	"__init ( buf , bin )"	586:1:13811:13827	3644273	2	True				
ANR	3644297	CallExpression	"__init ( buf , bin )"		3644273	0					
ANR	3644298	Callee	__init		3644273	0					
ANR	3644299	Identifier	__init		3644273	0					
ANR	3644300	ArgumentList	buf		3644273	1					
ANR	3644301	Argument	buf		3644273	0					
ANR	3644302	Identifier	buf		3644273	0					
ANR	3644303	Argument	bin		3644273	1					
ANR	3644304	Identifier	bin		3644273	0					
ANR	3644305	ReturnStatement	return bin ;	587:1:13830:13840	3644273	3	True				
ANR	3644306	Identifier	bin		3644273	0					
ANR	3644307	ReturnType	r_bin_ne_obj_t *		3644273	1					
ANR	3644308	Identifier	r_bin_ne_new_buf		3644273	2					
ANR	3644309	ParameterList	"RBuffer * buf , bool verbose"		3644273	3					
ANR	3644310	Parameter	RBuffer * buf	581:33:13701:13712	3644273	0	True				
ANR	3644311	ParameterType	RBuffer *		3644273	0					
ANR	3644312	Identifier	buf		3644273	1					
ANR	3644313	Parameter	bool verbose	581:47:13715:13726	3644273	1	True				
ANR	3644314	ParameterType	bool		3644273	0					
ANR	3644315	Identifier	verbose		3644273	1					
ANR	3644316	CFGEntryNode	ENTRY		3644273		True				
ANR	3644317	CFGExitNode	EXIT		3644273		True				
ANR	3644318	Symbol	R_NEW0		3644273						
ANR	3644319	Symbol	buf		3644273						
ANR	3644320	Symbol	NULL		3644273						
ANR	3644321	Symbol	bin		3644273						
ANR	3644322	Symbol	r_bin_ne_obj_t		3644273						
ANR	3644323	Symbol	verbose		3644273						
