command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2467701	File	data/converged/CVE-2019-16718~_radare2/libr_anal_p_anal_wasm.c								
ANR	2467702	DeclStmt									
ANR	2467703	Decl							ut64	ut64	scope_hint
ANR	2467704	DeclStmt									
ANR	2467705	Decl							ut64	ut64	addr_old
ANR	2467706	Function	get_cf_offset	20:0:492:947							
ANR	2467707	FunctionDef	"get_cf_offset (RAnal * anal , const ut8 * data , int len)"		2467706	0					
ANR	2467708	CompoundStatement		20:65:557:947	2467706	0					
ANR	2467709	IdentifierDeclStatement	ut32 fcn_id ;	21:1:560:571	2467706	0	True				
ANR	2467710	IdentifierDecl	fcn_id		2467706	0					
ANR	2467711	IdentifierDeclType	ut32		2467706	0					
ANR	2467712	Identifier	fcn_id		2467706	1					
ANR	2467713	IfStatement	"if ( ! read_u32_leb128 ( & data [ 1 ] , & data [ len - 1 ] , & fcn_id ) )"		2467706	1					
ANR	2467714	Condition	"! read_u32_leb128 ( & data [ 1 ] , & data [ len - 1 ] , & fcn_id )"	23:5:579:630	2467706	0	True				
ANR	2467715	UnaryOperationExpression	"! read_u32_leb128 ( & data [ 1 ] , & data [ len - 1 ] , & fcn_id )"		2467706	0					
ANR	2467716	UnaryOperator	!		2467706	0					
ANR	2467717	CallExpression	"read_u32_leb128 ( & data [ 1 ] , & data [ len - 1 ] , & fcn_id )"		2467706	1					
ANR	2467718	Callee	read_u32_leb128		2467706	0					
ANR	2467719	Identifier	read_u32_leb128		2467706	0					
ANR	2467720	ArgumentList	& data [ 1 ]		2467706	1					
ANR	2467721	Argument	& data [ 1 ]		2467706	0					
ANR	2467722	UnaryOperationExpression	& data [ 1 ]		2467706	0					
ANR	2467723	UnaryOperator	&		2467706	0					
ANR	2467724	ArrayIndexing	data [ 1 ]		2467706	1					
ANR	2467725	Identifier	data		2467706	0					
ANR	2467726	PrimaryExpression	1		2467706	1					
ANR	2467727	Argument	& data [ len - 1 ]		2467706	1					
ANR	2467728	UnaryOperationExpression	& data [ len - 1 ]		2467706	0					
ANR	2467729	UnaryOperator	&		2467706	0					
ANR	2467730	ArrayIndexing	data [ len - 1 ]		2467706	1					
ANR	2467731	Identifier	data		2467706	0					
ANR	2467732	AdditiveExpression	len - 1		2467706	1		-			
ANR	2467733	Identifier	len		2467706	0					
ANR	2467734	PrimaryExpression	1		2467706	1					
ANR	2467735	Argument	& fcn_id		2467706	2					
ANR	2467736	UnaryOperationExpression	& fcn_id		2467706	0					
ANR	2467737	UnaryOperator	&		2467706	0					
ANR	2467738	Identifier	fcn_id		2467706	1					
ANR	2467739	CompoundStatement		4:59:75:75	2467706	1					
ANR	2467740	ReturnStatement	return UT64_MAX ;	24:2:637:652	2467706	0	True				
ANR	2467741	Identifier	UT64_MAX		2467706	0					
ANR	2467742	ExpressionStatement	r_cons_push ( )	26:1:658:672	2467706	2	True				
ANR	2467743	CallExpression	r_cons_push ( )		2467706	0					
ANR	2467744	Callee	r_cons_push		2467706	0					
ANR	2467745	Identifier	r_cons_push		2467706	0					
ANR	2467746	ArgumentList			2467706	1					
ANR	2467747	IdentifierDeclStatement	"char * s = anal -> coreb . cmdstrf ( anal -> coreb . core , ""is~FUNC[2:%u]"" , fcn_id ) ;"	29:1:769:842	2467706	3	True				
ANR	2467748	IdentifierDecl	"* s = anal -> coreb . cmdstrf ( anal -> coreb . core , ""is~FUNC[2:%u]"" , fcn_id )"		2467706	0					
ANR	2467749	IdentifierDeclType	char *		2467706	0					
ANR	2467750	Identifier	s		2467706	1					
ANR	2467751	AssignmentExpression	"* s = anal -> coreb . cmdstrf ( anal -> coreb . core , ""is~FUNC[2:%u]"" , fcn_id )"		2467706	2		=			
ANR	2467752	Identifier	s		2467706	0					
ANR	2467753	CallExpression	"anal -> coreb . cmdstrf ( anal -> coreb . core , ""is~FUNC[2:%u]"" , fcn_id )"		2467706	1					
ANR	2467754	Callee	anal -> coreb . cmdstrf		2467706	0					
ANR	2467755	MemberAccess	anal -> coreb . cmdstrf		2467706	0					
ANR	2467756	PtrMemberAccess	anal -> coreb		2467706	0					
ANR	2467757	Identifier	anal		2467706	0					
ANR	2467758	Identifier	coreb		2467706	1					
ANR	2467759	Identifier	cmdstrf		2467706	1					
ANR	2467760	ArgumentList	anal -> coreb . core		2467706	1					
ANR	2467761	Argument	anal -> coreb . core		2467706	0					
ANR	2467762	MemberAccess	anal -> coreb . core		2467706	0					
ANR	2467763	PtrMemberAccess	anal -> coreb		2467706	0					
ANR	2467764	Identifier	anal		2467706	0					
ANR	2467765	Identifier	coreb		2467706	1					
ANR	2467766	Identifier	core		2467706	1					
ANR	2467767	Argument	"""is~FUNC[2:%u]"""		2467706	1					
ANR	2467768	PrimaryExpression	"""is~FUNC[2:%u]"""		2467706	0					
ANR	2467769	Argument	fcn_id		2467706	2					
ANR	2467770	Identifier	fcn_id		2467706	0					
ANR	2467771	ExpressionStatement	r_cons_pop ( )	30:1:845:858	2467706	4	True				
ANR	2467772	CallExpression	r_cons_pop ( )		2467706	0					
ANR	2467773	Callee	r_cons_pop		2467706	0					
ANR	2467774	Identifier	r_cons_pop		2467706	0					
ANR	2467775	ArgumentList			2467706	1					
ANR	2467776	IfStatement	if ( s )		2467706	5					
ANR	2467777	Condition	s	31:5:865:865	2467706	0	True				
ANR	2467778	Identifier	s		2467706	0					
ANR	2467779	CompoundStatement		13:2:314:342	2467706	1					
ANR	2467780	IdentifierDeclStatement	"ut64 n = r_num_get ( NULL , s ) ;"	32:2:872:900	2467706	0	True				
ANR	2467781	IdentifierDecl	"n = r_num_get ( NULL , s )"		2467706	0					
ANR	2467782	IdentifierDeclType	ut64		2467706	0					
ANR	2467783	Identifier	n		2467706	1					
ANR	2467784	AssignmentExpression	"n = r_num_get ( NULL , s )"		2467706	2		=			
ANR	2467785	Identifier	n		2467706	0					
ANR	2467786	CallExpression	"r_num_get ( NULL , s )"		2467706	1					
ANR	2467787	Callee	r_num_get		2467706	0					
ANR	2467788	Identifier	r_num_get		2467706	0					
ANR	2467789	ArgumentList	NULL		2467706	1					
ANR	2467790	Argument	NULL		2467706	0					
ANR	2467791	Identifier	NULL		2467706	0					
ANR	2467792	Argument	s		2467706	1					
ANR	2467793	Identifier	s		2467706	0					
ANR	2467794	ExpressionStatement	free ( s )	33:2:904:912	2467706	1	True				
ANR	2467795	CallExpression	free ( s )		2467706	0					
ANR	2467796	Callee	free		2467706	0					
ANR	2467797	Identifier	free		2467706	0					
ANR	2467798	ArgumentList	s		2467706	1					
ANR	2467799	Argument	s		2467706	0					
ANR	2467800	Identifier	s		2467706	0					
ANR	2467801	ReturnStatement	return n ;	34:2:916:924	2467706	2	True				
ANR	2467802	Identifier	n		2467706	0					
ANR	2467803	ReturnStatement	return UT64_MAX ;	36:1:930:945	2467706	6	True				
ANR	2467804	Identifier	UT64_MAX		2467706	0					
ANR	2467805	ReturnType	static ut64		2467706	1					
ANR	2467806	Identifier	get_cf_offset		2467706	2					
ANR	2467807	ParameterList	"RAnal * anal , const ut8 * data , int len"		2467706	3					
ANR	2467808	Parameter	RAnal * anal	20:26:518:528	2467706	0	True				
ANR	2467809	ParameterType	RAnal *		2467706	0					
ANR	2467810	Identifier	anal		2467706	1					
ANR	2467811	Parameter	const ut8 * data	20:39:531:545	2467706	1	True				
ANR	2467812	ParameterType	const ut8 *		2467706	0					
ANR	2467813	Identifier	data		2467706	1					
ANR	2467814	Parameter	int len	20:56:548:554	2467706	2	True				
ANR	2467815	ParameterType	int		2467706	0					
ANR	2467816	Identifier	len		2467706	1					
ANR	2467817	CFGEntryNode	ENTRY		2467706		True				
ANR	2467818	CFGExitNode	EXIT		2467706		True				
ANR	2467819	Symbol	read_u32_leb128		2467706						
ANR	2467820	Symbol	NULL		2467706						
ANR	2467821	Symbol	data		2467706						
ANR	2467822	Symbol	& fcn_id		2467706						
ANR	2467823	Symbol	anal -> coreb . core		2467706						
ANR	2467824	Symbol	n		2467706						
ANR	2467825	Symbol	* anal		2467706						
ANR	2467826	Symbol	s		2467706						
ANR	2467827	Symbol	len		2467706						
ANR	2467828	Symbol	anal -> coreb . cmdstrf		2467706						
ANR	2467829	Symbol	anal		2467706						
ANR	2467830	Symbol	anal -> coreb		2467706						
ANR	2467831	Symbol	r_num_get		2467706						
ANR	2467832	Symbol	UT64_MAX		2467706						
ANR	2467833	Symbol	fcn_id		2467706						
ANR	2467834	Function	advance_till_scope_end	39:0:950:2023							
ANR	2467835	FunctionDef	"advance_till_scope_end (RAnal * anal , RAnalOp * op , ut64 address , ut32 expected_type , ut32 depth , bool use_else)"		2467834	0					
ANR	2467836	CompoundStatement		39:122:1072:2023	2467834	0					
ANR	2467837	IdentifierDeclStatement	ut8 buffer [ 16 ] ;	40:1:1075:1089	2467834	0	True				
ANR	2467838	IdentifierDecl	buffer [ 16 ]		2467834	0					
ANR	2467839	IdentifierDeclType	ut8 [ 16 ]		2467834	0					
ANR	2467840	Identifier	buffer		2467834	1					
ANR	2467841	PrimaryExpression	16		2467834	2					
ANR	2467842	IdentifierDeclStatement	ut8 * ptr = buffer ;	41:1:1092:1109	2467834	1	True				
ANR	2467843	IdentifierDecl	* ptr = buffer		2467834	0					
ANR	2467844	IdentifierDeclType	ut8 *		2467834	0					
ANR	2467845	Identifier	ptr		2467834	1					
ANR	2467846	AssignmentExpression	* ptr = buffer		2467834	2		=			
ANR	2467847	Identifier	buffer		2467834	0					
ANR	2467848	Identifier	buffer		2467834	1					
ANR	2467849	IdentifierDeclStatement	ut8 * end = ptr + sizeof ( buffer ) ;	42:1:1112:1144	2467834	2	True				
ANR	2467850	IdentifierDecl	* end = ptr + sizeof ( buffer )		2467834	0					
ANR	2467851	IdentifierDeclType	ut8 *		2467834	0					
ANR	2467852	Identifier	end		2467834	1					
ANR	2467853	AssignmentExpression	* end = ptr + sizeof ( buffer )		2467834	2		=			
ANR	2467854	Identifier	end		2467834	0					
ANR	2467855	AdditiveExpression	ptr + sizeof ( buffer )		2467834	1		+			
ANR	2467856	Identifier	ptr		2467834	0					
ANR	2467857	SizeofExpression	sizeof ( buffer )		2467834	1					
ANR	2467858	Sizeof	sizeof		2467834	0					
ANR	2467859	SizeofOperand	buffer		2467834	1					
ANR	2467860	IdentifierDeclStatement	WasmOp wop = { { 0 } } ;	43:1:1147:1165	2467834	3	True				
ANR	2467861	IdentifierDecl	wop = { { 0 } }		2467834	0					
ANR	2467862	IdentifierDeclType	WasmOp		2467834	0					
ANR	2467863	Identifier	wop		2467834	1					
ANR	2467864	AssignmentExpression	wop = { { 0 } }		2467834	2		=			
ANR	2467865	Identifier	wop		2467834	0					
ANR	2467866	InitializerList	0		2467834	1					
ANR	2467867	InitializerList	0		2467834	0					
ANR	2467868	PrimaryExpression	0		2467834	0					
ANR	2467869	IdentifierDeclStatement	int size = 0 ;	44:1:1168:1180	2467834	4	True				
ANR	2467870	IdentifierDecl	size = 0		2467834	0					
ANR	2467871	IdentifierDeclType	int		2467834	0					
ANR	2467872	Identifier	size		2467834	1					
ANR	2467873	AssignmentExpression	size = 0		2467834	2		=			
ANR	2467874	Identifier	size		2467834	0					
ANR	2467875	PrimaryExpression	0		2467834	1					
ANR	2467876	WhileStatement	"while ( anal -> iob . read_at ( anal -> iob . io , address , buffer , sizeof ( buffer ) ) )"		2467834	5					
ANR	2467877	Condition	"anal -> iob . read_at ( anal -> iob . io , address , buffer , sizeof ( buffer ) )"	45:8:1190:1255	2467834	0	True				
ANR	2467878	CallExpression	"anal -> iob . read_at ( anal -> iob . io , address , buffer , sizeof ( buffer ) )"		2467834	0					
ANR	2467879	Callee	anal -> iob . read_at		2467834	0					
ANR	2467880	MemberAccess	anal -> iob . read_at		2467834	0					
ANR	2467881	PtrMemberAccess	anal -> iob		2467834	0					
ANR	2467882	Identifier	anal		2467834	0					
ANR	2467883	Identifier	iob		2467834	1					
ANR	2467884	Identifier	read_at		2467834	1					
ANR	2467885	ArgumentList	anal -> iob . io		2467834	1					
ANR	2467886	Argument	anal -> iob . io		2467834	0					
ANR	2467887	MemberAccess	anal -> iob . io		2467834	0					
ANR	2467888	PtrMemberAccess	anal -> iob		2467834	0					
ANR	2467889	Identifier	anal		2467834	0					
ANR	2467890	Identifier	iob		2467834	1					
ANR	2467891	Identifier	io		2467834	1					
ANR	2467892	Argument	address		2467834	1					
ANR	2467893	Identifier	address		2467834	0					
ANR	2467894	Argument	buffer		2467834	2					
ANR	2467895	Identifier	buffer		2467834	0					
ANR	2467896	Argument	sizeof ( buffer )		2467834	3					
ANR	2467897	SizeofExpression	sizeof ( buffer )		2467834	0					
ANR	2467898	Sizeof	sizeof		2467834	0					
ANR	2467899	SizeofOperand	buffer		2467834	1					
ANR	2467900	CompoundStatement		7:76:185:185	2467834	1					
ANR	2467901	ExpressionStatement	"size = wasm_dis ( & wop , ptr , end - ptr )"	46:2:1262:1300	2467834	0	True				
ANR	2467902	AssignmentExpression	"size = wasm_dis ( & wop , ptr , end - ptr )"		2467834	0		=			
ANR	2467903	Identifier	size		2467834	0					
ANR	2467904	CallExpression	"wasm_dis ( & wop , ptr , end - ptr )"		2467834	1					
ANR	2467905	Callee	wasm_dis		2467834	0					
ANR	2467906	Identifier	wasm_dis		2467834	0					
ANR	2467907	ArgumentList	& wop		2467834	1					
ANR	2467908	Argument	& wop		2467834	0					
ANR	2467909	UnaryOperationExpression	& wop		2467834	0					
ANR	2467910	UnaryOperator	&		2467834	0					
ANR	2467911	Identifier	wop		2467834	1					
ANR	2467912	Argument	ptr		2467834	1					
ANR	2467913	Identifier	ptr		2467834	0					
ANR	2467914	Argument	end - ptr		2467834	2					
ANR	2467915	AdditiveExpression	end - ptr		2467834	0		-			
ANR	2467916	Identifier	end		2467834	0					
ANR	2467917	Identifier	ptr		2467834	1					
ANR	2467918	IfStatement	if ( ! wop . txt || ( wop . type == WASM_TYPE_OP_CORE && wop . op . core == WASM_OP_TRAP ) )		2467834	1					
ANR	2467919	Condition	! wop . txt || ( wop . type == WASM_TYPE_OP_CORE && wop . op . core == WASM_OP_TRAP )	47:6:1308:1381	2467834	0	True				
ANR	2467920	OrExpression	! wop . txt || ( wop . type == WASM_TYPE_OP_CORE && wop . op . core == WASM_OP_TRAP )		2467834	0		||			
ANR	2467921	UnaryOperationExpression	! wop . txt		2467834	0					
ANR	2467922	UnaryOperator	!		2467834	0					
ANR	2467923	MemberAccess	wop . txt		2467834	1					
ANR	2467924	Identifier	wop		2467834	0					
ANR	2467925	Identifier	txt		2467834	1					
ANR	2467926	AndExpression	wop . type == WASM_TYPE_OP_CORE && wop . op . core == WASM_OP_TRAP		2467834	1		&&			
ANR	2467927	EqualityExpression	wop . type == WASM_TYPE_OP_CORE		2467834	0		==			
ANR	2467928	MemberAccess	wop . type		2467834	0					
ANR	2467929	Identifier	wop		2467834	0					
ANR	2467930	Identifier	type		2467834	1					
ANR	2467931	Identifier	WASM_TYPE_OP_CORE		2467834	1					
ANR	2467932	EqualityExpression	wop . op . core == WASM_OP_TRAP		2467834	1		==			
ANR	2467933	MemberAccess	wop . op . core		2467834	0					
ANR	2467934	MemberAccess	wop . op		2467834	0					
ANR	2467935	Identifier	wop		2467834	0					
ANR	2467936	Identifier	op		2467834	1					
ANR	2467937	Identifier	core		2467834	1					
ANR	2467938	Identifier	WASM_OP_TRAP		2467834	1					
ANR	2467939	CompoundStatement		9:82:311:311	2467834	1					
ANR	2467940	BreakStatement	break ;	49:3:1417:1422	2467834	0	True				
ANR	2467941	IfStatement	if ( wop . type == WASM_TYPE_OP_CORE )		2467834	2					
ANR	2467942	Condition	wop . type == WASM_TYPE_OP_CORE	51:6:1434:1462	2467834	0	True				
ANR	2467943	EqualityExpression	wop . type == WASM_TYPE_OP_CORE		2467834	0		==			
ANR	2467944	MemberAccess	wop . type		2467834	0					
ANR	2467945	Identifier	wop		2467834	0					
ANR	2467946	Identifier	type		2467834	1					
ANR	2467947	Identifier	WASM_TYPE_OP_CORE		2467834	1					
ANR	2467948	CompoundStatement		14:3:397:428	2467834	1					
ANR	2467949	IdentifierDeclStatement	WasmOpCodes wopop = wop . op . core ;	52:3:1470:1501	2467834	0	True				
ANR	2467950	IdentifierDecl	wopop = wop . op . core		2467834	0					
ANR	2467951	IdentifierDeclType	WasmOpCodes		2467834	0					
ANR	2467952	Identifier	wopop		2467834	1					
ANR	2467953	AssignmentExpression	wopop = wop . op . core		2467834	2		=			
ANR	2467954	Identifier	wopop		2467834	0					
ANR	2467955	MemberAccess	wop . op . core		2467834	1					
ANR	2467956	MemberAccess	wop . op		2467834	0					
ANR	2467957	Identifier	wop		2467834	0					
ANR	2467958	Identifier	op		2467834	1					
ANR	2467959	Identifier	core		2467834	1					
ANR	2467960	IfStatement	if ( wopop == WASM_OP_LOOP || wopop == WASM_OP_BLOCK || wopop == WASM_OP_IF )		2467834	1					
ANR	2467961	Condition	wopop == WASM_OP_LOOP || wopop == WASM_OP_BLOCK || wopop == WASM_OP_IF	53:7:1510:1579	2467834	0	True				
ANR	2467962	OrExpression	wopop == WASM_OP_LOOP || wopop == WASM_OP_BLOCK || wopop == WASM_OP_IF		2467834	0		||			
ANR	2467963	EqualityExpression	wopop == WASM_OP_LOOP		2467834	0		==			
ANR	2467964	Identifier	wopop		2467834	0					
ANR	2467965	Identifier	WASM_OP_LOOP		2467834	1					
ANR	2467966	OrExpression	wopop == WASM_OP_BLOCK || wopop == WASM_OP_IF		2467834	1		||			
ANR	2467967	EqualityExpression	wopop == WASM_OP_BLOCK		2467834	0		==			
ANR	2467968	Identifier	wopop		2467834	0					
ANR	2467969	Identifier	WASM_OP_BLOCK		2467834	1					
ANR	2467970	EqualityExpression	wopop == WASM_OP_IF		2467834	1		==			
ANR	2467971	Identifier	wopop		2467834	0					
ANR	2467972	Identifier	WASM_OP_IF		2467834	1					
ANR	2467973	CompoundStatement		15:79:509:509	2467834	1					
ANR	2467974	ExpressionStatement	depth ++	54:4:1588:1595	2467834	0	True				
ANR	2467975	PostIncDecOperationExpression	depth ++		2467834	0					
ANR	2467976	Identifier	depth		2467834	0					
ANR	2467977	IncDec	++		2467834	1					
ANR	2467978	IfStatement	if ( use_else && wopop == WASM_OP_ELSE && ! depth )		2467834	2					
ANR	2467979	Condition	use_else && wopop == WASM_OP_ELSE && ! depth	56:7:1609:1651	2467834	0	True				
ANR	2467980	AndExpression	use_else && wopop == WASM_OP_ELSE && ! depth		2467834	0		&&			
ANR	2467981	Identifier	use_else		2467834	0					
ANR	2467982	AndExpression	wopop == WASM_OP_ELSE && ! depth		2467834	1		&&			
ANR	2467983	EqualityExpression	wopop == WASM_OP_ELSE		2467834	0		==			
ANR	2467984	Identifier	wopop		2467834	0					
ANR	2467985	Identifier	WASM_OP_ELSE		2467834	1					
ANR	2467986	UnaryOperationExpression	! depth		2467834	1					
ANR	2467987	UnaryOperator	!		2467834	0					
ANR	2467988	Identifier	depth		2467834	1					
ANR	2467989	CompoundStatement		18:52:581:581	2467834	1					
ANR	2467990	ExpressionStatement	op -> type = expected_type	57:4:1660:1684	2467834	0	True				
ANR	2467991	AssignmentExpression	op -> type = expected_type		2467834	0		=			
ANR	2467992	PtrMemberAccess	op -> type		2467834	0					
ANR	2467993	Identifier	op		2467834	0					
ANR	2467994	Identifier	type		2467834	1					
ANR	2467995	Identifier	expected_type		2467834	1					
ANR	2467996	ExpressionStatement	op -> jump = address + 1	58:4:1690:1712	2467834	1	True				
ANR	2467997	AssignmentExpression	op -> jump = address + 1		2467834	0		=			
ANR	2467998	PtrMemberAccess	op -> jump		2467834	0					
ANR	2467999	Identifier	op		2467834	0					
ANR	2468000	Identifier	jump		2467834	1					
ANR	2468001	AdditiveExpression	address + 1		2467834	1		+			
ANR	2468002	Identifier	address		2467834	0					
ANR	2468003	PrimaryExpression	1		2467834	1					
ANR	2468004	ReturnStatement	return true ;	59:4:1736:1747	2467834	2	True				
ANR	2468005	Identifier	true		2467834	0					
ANR	2468006	ElseStatement	else		2467834	0					
ANR	2468007	IfStatement	if ( wopop == WASM_OP_END && depth > 0 )		2467834	0					
ANR	2468008	Condition	wopop == WASM_OP_END && depth > 0	60:14:1763:1795	2467834	0	True				
ANR	2468009	AndExpression	wopop == WASM_OP_END && depth > 0		2467834	0		&&			
ANR	2468010	EqualityExpression	wopop == WASM_OP_END		2467834	0		==			
ANR	2468011	Identifier	wopop		2467834	0					
ANR	2468012	Identifier	WASM_OP_END		2467834	1					
ANR	2468013	RelationalExpression	depth > 0		2467834	1		>			
ANR	2468014	Identifier	depth		2467834	0					
ANR	2468015	PrimaryExpression	0		2467834	1					
ANR	2468016	CompoundStatement		22:49:725:725	2467834	1					
ANR	2468017	ExpressionStatement	depth --	62:4:1849:1856	2467834	0	True				
ANR	2468018	PostIncDecOperationExpression	depth --		2467834	0					
ANR	2468019	Identifier	depth		2467834	0					
ANR	2468020	IncDec	--		2467834	1					
ANR	2468021	ElseStatement	else		2467834	0					
ANR	2468022	IfStatement	if ( wopop == WASM_OP_END && ! depth )		2467834	0					
ANR	2468023	Condition	wopop == WASM_OP_END && ! depth	63:14:1872:1901	2467834	0	True				
ANR	2468024	AndExpression	wopop == WASM_OP_END && ! depth		2467834	0		&&			
ANR	2468025	EqualityExpression	wopop == WASM_OP_END		2467834	0		==			
ANR	2468026	Identifier	wopop		2467834	0					
ANR	2468027	Identifier	WASM_OP_END		2467834	1					
ANR	2468028	UnaryOperationExpression	! depth		2467834	1					
ANR	2468029	UnaryOperator	!		2467834	0					
ANR	2468030	Identifier	depth		2467834	1					
ANR	2468031	CompoundStatement		25:46:831:831	2467834	1					
ANR	2468032	ExpressionStatement	op -> type = expected_type	64:4:1910:1934	2467834	0	True				
ANR	2468033	AssignmentExpression	op -> type = expected_type		2467834	0		=			
ANR	2468034	PtrMemberAccess	op -> type		2467834	0					
ANR	2468035	Identifier	op		2467834	0					
ANR	2468036	Identifier	type		2467834	1					
ANR	2468037	Identifier	expected_type		2467834	1					
ANR	2468038	ExpressionStatement	op -> jump = address	65:4:1940:1958	2467834	1	True				
ANR	2468039	AssignmentExpression	op -> jump = address		2467834	0		=			
ANR	2468040	PtrMemberAccess	op -> jump		2467834	0					
ANR	2468041	Identifier	op		2467834	0					
ANR	2468042	Identifier	jump		2467834	1					
ANR	2468043	Identifier	address		2467834	1					
ANR	2468044	ReturnStatement	return true ;	66:4:1964:1975	2467834	2	True				
ANR	2468045	Identifier	true		2467834	0					
ANR	2468046	ExpressionStatement	address += size	69:2:1988:2003	2467834	3	True				
ANR	2468047	AssignmentExpression	address += size		2467834	0		+=			
ANR	2468048	Identifier	address		2467834	0					
ANR	2468049	Identifier	size		2467834	1					
ANR	2468050	ReturnStatement	return false ;	71:1:2009:2021	2467834	6	True				
ANR	2468051	Identifier	false		2467834	0					
ANR	2468052	ReturnType	static bool		2467834	1					
ANR	2468053	Identifier	advance_till_scope_end		2467834	2					
ANR	2468054	ParameterList	"RAnal * anal , RAnalOp * op , ut64 address , ut32 expected_type , ut32 depth , bool use_else"		2467834	3					
ANR	2468055	Parameter	RAnal * anal	39:35:985:995	2467834	0	True				
ANR	2468056	ParameterType	RAnal *		2467834	0					
ANR	2468057	Identifier	anal		2467834	1					
ANR	2468058	Parameter	RAnalOp * op	39:48:998:1008	2467834	1	True				
ANR	2468059	ParameterType	RAnalOp *		2467834	0					
ANR	2468060	Identifier	op		2467834	1					
ANR	2468061	Parameter	ut64 address	39:61:1011:1022	2467834	2	True				
ANR	2468062	ParameterType	ut64		2467834	0					
ANR	2468063	Identifier	address		2467834	1					
ANR	2468064	Parameter	ut32 expected_type	39:75:1025:1042	2467834	3	True				
ANR	2468065	ParameterType	ut32		2467834	0					
ANR	2468066	Identifier	expected_type		2467834	1					
ANR	2468067	Parameter	ut32 depth	39:95:1045:1054	2467834	4	True				
ANR	2468068	ParameterType	ut32		2467834	0					
ANR	2468069	Identifier	depth		2467834	1					
ANR	2468070	Parameter	bool use_else	39:107:1057:1069	2467834	5	True				
ANR	2468071	ParameterType	bool		2467834	0					
ANR	2468072	Identifier	use_else		2467834	1					
ANR	2468073	CFGEntryNode	ENTRY		2467834		True				
ANR	2468074	CFGExitNode	EXIT		2467834		True				
ANR	2468075	Symbol	WASM_OP_END		2467834						
ANR	2468076	Symbol	* op		2467834						
ANR	2468077	Symbol	expected_type		2467834						
ANR	2468078	Symbol	* anal		2467834						
ANR	2468079	Symbol	WASM_OP_IF		2467834						
ANR	2468080	Symbol	anal -> iob . read_at		2467834						
ANR	2468081	Symbol	WASM_TYPE_OP_CORE		2467834						
ANR	2468082	Symbol	wop		2467834						
ANR	2468083	Symbol	op -> jump		2467834						
ANR	2468084	Symbol	end		2467834						
ANR	2468085	Symbol	buffer		2467834						
ANR	2468086	Symbol	anal -> iob . io		2467834						
ANR	2468087	Symbol	WASM_OP_BLOCK		2467834						
ANR	2468088	Symbol	op		2467834						
ANR	2468089	Symbol	wasm_dis		2467834						
ANR	2468090	Symbol	address		2467834						
ANR	2468091	Symbol	op -> type		2467834						
ANR	2468092	Symbol	WASM_OP_TRAP		2467834						
ANR	2468093	Symbol	wop . type		2467834						
ANR	2468094	Symbol	use_else		2467834						
ANR	2468095	Symbol	wop . op . core		2467834						
ANR	2468096	Symbol	false		2467834						
ANR	2468097	Symbol	wop . txt		2467834						
ANR	2468098	Symbol	WASM_OP_ELSE		2467834						
ANR	2468099	Symbol	wop . op		2467834						
ANR	2468100	Symbol	ptr		2467834						
ANR	2468101	Symbol	depth		2467834						
ANR	2468102	Symbol	size		2467834						
ANR	2468103	Symbol	WASM_OP_LOOP		2467834						
ANR	2468104	Symbol	anal		2467834						
ANR	2468105	Symbol	wopop		2467834						
ANR	2468106	Symbol	true		2467834						
ANR	2468107	Symbol	& wop		2467834						
ANR	2468108	Symbol	anal -> iob		2467834						
ANR	2468109	Function	wasm_op	75:0:2055:12504							
ANR	2468110	FunctionDef	"wasm_op (RAnal * anal , RAnalOp * op , ut64 addr , const ut8 * data , int len , RAnalOpMask mask)"		2468109	0					
ANR	2468111	CompoundStatement		75:100:2155:12504	2468109	0					
ANR	2468112	IdentifierDeclStatement	WasmOp wop = { { 0 } } ;	76:1:2158:2176	2468109	0	True				
ANR	2468113	IdentifierDecl	wop = { { 0 } }		2468109	0					
ANR	2468114	IdentifierDeclType	WasmOp		2468109	0					
ANR	2468115	Identifier	wop		2468109	1					
ANR	2468116	AssignmentExpression	wop = { { 0 } }		2468109	2		=			
ANR	2468117	Identifier	wop		2468109	0					
ANR	2468118	InitializerList	0		2468109	1					
ANR	2468119	InitializerList	0		2468109	0					
ANR	2468120	PrimaryExpression	0		2468109	0					
ANR	2468121	IdentifierDeclStatement	RAnalHint * hint = NULL ;	77:1:2179:2201	2468109	1	True				
ANR	2468122	IdentifierDecl	* hint = NULL		2468109	0					
ANR	2468123	IdentifierDeclType	RAnalHint *		2468109	0					
ANR	2468124	Identifier	hint		2468109	1					
ANR	2468125	AssignmentExpression	* hint = NULL		2468109	2		=			
ANR	2468126	Identifier	NULL		2468109	0					
ANR	2468127	Identifier	NULL		2468109	1					
ANR	2468128	ExpressionStatement	"memset ( op , '\\0' , sizeof ( RAnalOp ) )"	78:1:2204:2239	2468109	2	True				
ANR	2468129	CallExpression	"memset ( op , '\\0' , sizeof ( RAnalOp ) )"		2468109	0					
ANR	2468130	Callee	memset		2468109	0					
ANR	2468131	Identifier	memset		2468109	0					
ANR	2468132	ArgumentList	op		2468109	1					
ANR	2468133	Argument	op		2468109	0					
ANR	2468134	Identifier	op		2468109	0					
ANR	2468135	Argument	'\\0'		2468109	1					
ANR	2468136	PrimaryExpression	'\\0'		2468109	0					
ANR	2468137	Argument	sizeof ( RAnalOp )		2468109	2					
ANR	2468138	SizeofExpression	sizeof ( RAnalOp )		2468109	0					
ANR	2468139	Sizeof	sizeof		2468109	0					
ANR	2468140	SizeofOperand	RAnalOp		2468109	1					
ANR	2468141	IdentifierDeclStatement	"int ret = wasm_dis ( & wop , data , len ) ;"	79:1:2242:2278	2468109	3	True				
ANR	2468142	IdentifierDecl	"ret = wasm_dis ( & wop , data , len )"		2468109	0					
ANR	2468143	IdentifierDeclType	int		2468109	0					
ANR	2468144	Identifier	ret		2468109	1					
ANR	2468145	AssignmentExpression	"ret = wasm_dis ( & wop , data , len )"		2468109	2		=			
ANR	2468146	Identifier	ret		2468109	0					
ANR	2468147	CallExpression	"wasm_dis ( & wop , data , len )"		2468109	1					
ANR	2468148	Callee	wasm_dis		2468109	0					
ANR	2468149	Identifier	wasm_dis		2468109	0					
ANR	2468150	ArgumentList	& wop		2468109	1					
ANR	2468151	Argument	& wop		2468109	0					
ANR	2468152	UnaryOperationExpression	& wop		2468109	0					
ANR	2468153	UnaryOperator	&		2468109	0					
ANR	2468154	Identifier	wop		2468109	1					
ANR	2468155	Argument	data		2468109	1					
ANR	2468156	Identifier	data		2468109	0					
ANR	2468157	Argument	len		2468109	2					
ANR	2468158	Identifier	len		2468109	0					
ANR	2468159	ExpressionStatement	op -> jump = UT64_MAX	80:1:2281:2300	2468109	4	True				
ANR	2468160	AssignmentExpression	op -> jump = UT64_MAX		2468109	0		=			
ANR	2468161	PtrMemberAccess	op -> jump		2468109	0					
ANR	2468162	Identifier	op		2468109	0					
ANR	2468163	Identifier	jump		2468109	1					
ANR	2468164	Identifier	UT64_MAX		2468109	1					
ANR	2468165	ExpressionStatement	op -> fail = UT64_MAX	81:1:2303:2322	2468109	5	True				
ANR	2468166	AssignmentExpression	op -> fail = UT64_MAX		2468109	0		=			
ANR	2468167	PtrMemberAccess	op -> fail		2468109	0					
ANR	2468168	Identifier	op		2468109	0					
ANR	2468169	Identifier	fail		2468109	1					
ANR	2468170	Identifier	UT64_MAX		2468109	1					
ANR	2468171	ExpressionStatement	op -> ptr = op -> val = UT64_MAX	82:1:2325:2353	2468109	6	True				
ANR	2468172	AssignmentExpression	op -> ptr = op -> val = UT64_MAX		2468109	0		=			
ANR	2468173	PtrMemberAccess	op -> ptr		2468109	0					
ANR	2468174	Identifier	op		2468109	0					
ANR	2468175	Identifier	ptr		2468109	1					
ANR	2468176	AssignmentExpression	op -> val = UT64_MAX		2468109	1		=			
ANR	2468177	PtrMemberAccess	op -> val		2468109	0					
ANR	2468178	Identifier	op		2468109	0					
ANR	2468179	Identifier	val		2468109	1					
ANR	2468180	Identifier	UT64_MAX		2468109	1					
ANR	2468181	ExpressionStatement	op -> size = ret	83:1:2356:2370	2468109	7	True				
ANR	2468182	AssignmentExpression	op -> size = ret		2468109	0		=			
ANR	2468183	PtrMemberAccess	op -> size		2468109	0					
ANR	2468184	Identifier	op		2468109	0					
ANR	2468185	Identifier	size		2468109	1					
ANR	2468186	Identifier	ret		2468109	1					
ANR	2468187	ExpressionStatement	op -> addr = addr	84:1:2373:2388	2468109	8	True				
ANR	2468188	AssignmentExpression	op -> addr = addr		2468109	0		=			
ANR	2468189	PtrMemberAccess	op -> addr		2468109	0					
ANR	2468190	Identifier	op		2468109	0					
ANR	2468191	Identifier	addr		2468109	1					
ANR	2468192	Identifier	addr		2468109	1					
ANR	2468193	ExpressionStatement	op -> sign = true	85:1:2391:2406	2468109	9	True				
ANR	2468194	AssignmentExpression	op -> sign = true		2468109	0		=			
ANR	2468195	PtrMemberAccess	op -> sign		2468109	0					
ANR	2468196	Identifier	op		2468109	0					
ANR	2468197	Identifier	sign		2468109	1					
ANR	2468198	Identifier	true		2468109	1					
ANR	2468199	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_UNK	86:1:2409:2438	2468109	10	True				
ANR	2468200	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_UNK		2468109	0		=			
ANR	2468201	PtrMemberAccess	op -> type		2468109	0					
ANR	2468202	Identifier	op		2468109	0					
ANR	2468203	Identifier	type		2468109	1					
ANR	2468204	Identifier	R_ANAL_OP_TYPE_UNK		2468109	1					
ANR	2468205	SwitchStatement	switch ( wop . type )		2468109	11					
ANR	2468206	Condition	wop . type	87:9:2449:2456	2468109	0	True				
ANR	2468207	MemberAccess	wop . type		2468109	0					
ANR	2468208	Identifier	wop		2468109	0					
ANR	2468209	Identifier	type		2468109	1					
ANR	2468210	CompoundStatement		13:19:303:303	2468109	1					
ANR	2468211	Label	case WASM_TYPE_OP_CORE :	88:2:2463:2485	2468109	0	True				
ANR	2468212	Identifier	WASM_TYPE_OP_CORE		2468109	0					
ANR	2468213	ExpressionStatement	op -> id = wop . op . core	89:3:2490:2510	2468109	1	True				
ANR	2468214	AssignmentExpression	op -> id = wop . op . core		2468109	0		=			
ANR	2468215	PtrMemberAccess	op -> id		2468109	0					
ANR	2468216	Identifier	op		2468109	0					
ANR	2468217	Identifier	id		2468109	1					
ANR	2468218	MemberAccess	wop . op . core		2468109	1					
ANR	2468219	MemberAccess	wop . op		2468109	0					
ANR	2468220	Identifier	wop		2468109	0					
ANR	2468221	Identifier	op		2468109	1					
ANR	2468222	Identifier	core		2468109	1					
ANR	2468223	BreakStatement	break ;	90:3:2515:2520	2468109	2	True				
ANR	2468224	Label	case WASM_TYPE_OP_ATOMIC :	91:2:2524:2548	2468109	3	True				
ANR	2468225	Identifier	WASM_TYPE_OP_ATOMIC		2468109	0					
ANR	2468226	ExpressionStatement	op -> id = ( 0xfe << 8 ) | wop . op . atomic	92:3:2553:2589	2468109	4	True				
ANR	2468227	AssignmentExpression	op -> id = ( 0xfe << 8 ) | wop . op . atomic		2468109	0		=			
ANR	2468228	PtrMemberAccess	op -> id		2468109	0					
ANR	2468229	Identifier	op		2468109	0					
ANR	2468230	Identifier	id		2468109	1					
ANR	2468231	InclusiveOrExpression	( 0xfe << 8 ) | wop . op . atomic		2468109	1		|			
ANR	2468232	ShiftExpression	0xfe << 8		2468109	0		<<			
ANR	2468233	PrimaryExpression	0xfe		2468109	0					
ANR	2468234	PrimaryExpression	8		2468109	1					
ANR	2468235	MemberAccess	wop . op . atomic		2468109	1					
ANR	2468236	MemberAccess	wop . op		2468109	0					
ANR	2468237	Identifier	wop		2468109	0					
ANR	2468238	Identifier	op		2468109	1					
ANR	2468239	Identifier	atomic		2468109	1					
ANR	2468240	BreakStatement	break ;	93:3:2594:2599	2468109	5	True				
ANR	2468241	IfStatement	"if ( ! wop . txt || ! strncmp ( wop . txt , ""invalid"" , 7 ) )"		2468109	12					
ANR	2468242	Condition	"! wop . txt || ! strncmp ( wop . txt , ""invalid"" , 7 )"	96:5:2610:2653	2468109	0	True				
ANR	2468243	OrExpression	"! wop . txt || ! strncmp ( wop . txt , ""invalid"" , 7 )"		2468109	0		||			
ANR	2468244	UnaryOperationExpression	! wop . txt		2468109	0					
ANR	2468245	UnaryOperator	!		2468109	0					
ANR	2468246	MemberAccess	wop . txt		2468109	1					
ANR	2468247	Identifier	wop		2468109	0					
ANR	2468248	Identifier	txt		2468109	1					
ANR	2468249	UnaryOperationExpression	"! strncmp ( wop . txt , ""invalid"" , 7 )"		2468109	1					
ANR	2468250	UnaryOperator	!		2468109	0					
ANR	2468251	CallExpression	"strncmp ( wop . txt , ""invalid"" , 7 )"		2468109	1					
ANR	2468252	Callee	strncmp		2468109	0					
ANR	2468253	Identifier	strncmp		2468109	0					
ANR	2468254	ArgumentList	wop . txt		2468109	1					
ANR	2468255	Argument	wop . txt		2468109	0					
ANR	2468256	MemberAccess	wop . txt		2468109	0					
ANR	2468257	Identifier	wop		2468109	0					
ANR	2468258	Identifier	txt		2468109	1					
ANR	2468259	Argument	"""invalid"""		2468109	1					
ANR	2468260	PrimaryExpression	"""invalid"""		2468109	0					
ANR	2468261	Argument	7		2468109	2					
ANR	2468262	PrimaryExpression	7		2468109	0					
ANR	2468263	CompoundStatement		22:51:500:500	2468109	1					
ANR	2468264	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_ILL	97:2:2660:2689	2468109	0	True				
ANR	2468265	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_ILL		2468109	0		=			
ANR	2468266	PtrMemberAccess	op -> type		2468109	0					
ANR	2468267	Identifier	op		2468109	0					
ANR	2468268	Identifier	type		2468109	1					
ANR	2468269	Identifier	R_ANAL_OP_TYPE_ILL		2468109	1					
ANR	2468270	ExpressionStatement	free ( wop . txt )	98:2:2693:2707	2468109	1	True				
ANR	2468271	CallExpression	free ( wop . txt )		2468109	0					
ANR	2468272	Callee	free		2468109	0					
ANR	2468273	Identifier	free		2468109	0					
ANR	2468274	ArgumentList	wop . txt		2468109	1					
ANR	2468275	Argument	wop . txt		2468109	0					
ANR	2468276	MemberAccess	wop . txt		2468109	0					
ANR	2468277	Identifier	wop		2468109	0					
ANR	2468278	Identifier	txt		2468109	1					
ANR	2468279	ReturnStatement	return - 1 ;	99:2:2711:2720	2468109	2	True				
ANR	2468280	UnaryOperationExpression	- 1		2468109	0					
ANR	2468281	UnaryOperator	-		2468109	0					
ANR	2468282	PrimaryExpression	1		2468109	1					
ANR	2468283	IfStatement	if ( addr_old == addr && ( wop . type != WASM_TYPE_OP_CORE || wop . op . core != WASM_OP_END ) )		2468109	13					
ANR	2468284	Condition	addr_old == addr && ( wop . type != WASM_TYPE_OP_CORE || wop . op . core != WASM_OP_END )	102:5:2731:2811	2468109	0	True				
ANR	2468285	AndExpression	addr_old == addr && ( wop . type != WASM_TYPE_OP_CORE || wop . op . core != WASM_OP_END )		2468109	0		&&			
ANR	2468286	EqualityExpression	addr_old == addr		2468109	0		==			
ANR	2468287	Identifier	addr_old		2468109	0					
ANR	2468288	Identifier	addr		2468109	1					
ANR	2468289	OrExpression	wop . type != WASM_TYPE_OP_CORE || wop . op . core != WASM_OP_END		2468109	1		||			
ANR	2468290	EqualityExpression	wop . type != WASM_TYPE_OP_CORE		2468109	0		!=			
ANR	2468291	MemberAccess	wop . type		2468109	0					
ANR	2468292	Identifier	wop		2468109	0					
ANR	2468293	Identifier	type		2468109	1					
ANR	2468294	Identifier	WASM_TYPE_OP_CORE		2468109	1					
ANR	2468295	EqualityExpression	wop . op . core != WASM_OP_END		2468109	1		!=			
ANR	2468296	MemberAccess	wop . op . core		2468109	0					
ANR	2468297	MemberAccess	wop . op		2468109	0					
ANR	2468298	Identifier	wop		2468109	0					
ANR	2468299	Identifier	op		2468109	1					
ANR	2468300	Identifier	core		2468109	1					
ANR	2468301	Identifier	WASM_OP_END		2468109	1					
ANR	2468302	CompoundStatement		28:88:658:658	2468109	1					
ANR	2468303	GotoStatement	goto anal_end ;	103:2:2818:2831	2468109	0	True				
ANR	2468304	Identifier	anal_end		2468109	0					
ANR	2468305	SwitchStatement	switch ( wop . type )		2468109	14					
ANR	2468306	Condition	wop . type	106:9:2846:2853	2468109	0	True				
ANR	2468307	MemberAccess	wop . type		2468109	0					
ANR	2468308	Identifier	wop		2468109	0					
ANR	2468309	Identifier	type		2468109	1					
ANR	2468310	CompoundStatement		32:19:700:700	2468109	1					
ANR	2468311	Label	case WASM_TYPE_OP_CORE :	107:1:2859:2881	2468109	0	True				
ANR	2468312	Identifier	WASM_TYPE_OP_CORE		2468109	0					
ANR	2468313	SwitchStatement	switch ( wop . op . core )		2468109	1					
ANR	2468314	Condition	wop . op . core	108:10:2893:2903	2468109	0	True				
ANR	2468315	MemberAccess	wop . op . core		2468109	0					
ANR	2468316	MemberAccess	wop . op		2468109	0					
ANR	2468317	Identifier	wop		2468109	0					
ANR	2468318	Identifier	op		2468109	1					
ANR	2468319	Identifier	core		2468109	1					
ANR	2468320	CompoundStatement		34:23:750:750	2468109	1					
ANR	2468321	Label	case WASM_OP_LOOP :	110:2:2964:2981	2468109	0	True				
ANR	2468322	Identifier	WASM_OP_LOOP		2468109	0					
ANR	2468323	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_NOP	111:3:2986:3015	2468109	1	True				
ANR	2468324	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_NOP		2468109	0		=			
ANR	2468325	PtrMemberAccess	op -> type		2468109	0					
ANR	2468326	Identifier	op		2468109	0					
ANR	2468327	Identifier	type		2468109	1					
ANR	2468328	Identifier	R_ANAL_OP_TYPE_NOP		2468109	1					
ANR	2468329	IfStatement	"if ( ! ( hint = r_anal_hint_get ( anal , addr ) ) )"		2468109	2					
ANR	2468330	Condition	"! ( hint = r_anal_hint_get ( anal , addr ) )"	112:7:3024:3061	2468109	0	True				
ANR	2468331	UnaryOperationExpression	"! ( hint = r_anal_hint_get ( anal , addr ) )"		2468109	0					
ANR	2468332	UnaryOperator	!		2468109	0					
ANR	2468333	AssignmentExpression	"hint = r_anal_hint_get ( anal , addr )"		2468109	1		=			
ANR	2468334	Identifier	hint		2468109	0					
ANR	2468335	CallExpression	"r_anal_hint_get ( anal , addr )"		2468109	1					
ANR	2468336	Callee	r_anal_hint_get		2468109	0					
ANR	2468337	Identifier	r_anal_hint_get		2468109	0					
ANR	2468338	ArgumentList	anal		2468109	1					
ANR	2468339	Argument	anal		2468109	0					
ANR	2468340	Identifier	anal		2468109	0					
ANR	2468341	Argument	addr		2468109	1					
ANR	2468342	Identifier	addr		2468109	0					
ANR	2468343	CompoundStatement		38:47:908:908	2468109	1					
ANR	2468344	ExpressionStatement	scope_hint --	113:4:3070:3082	2468109	0	True				
ANR	2468345	PostIncDecOperationExpression	scope_hint --		2468109	0					
ANR	2468346	Identifier	scope_hint		2468109	0					
ANR	2468347	IncDec	--		2468109	1					
ANR	2468348	ExpressionStatement	"r_anal_hint_set_opcode ( anal , scope_hint , ""loop"" )"	114:4:3088:3137	2468109	1	True				
ANR	2468349	CallExpression	"r_anal_hint_set_opcode ( anal , scope_hint , ""loop"" )"		2468109	0					
ANR	2468350	Callee	r_anal_hint_set_opcode		2468109	0					
ANR	2468351	Identifier	r_anal_hint_set_opcode		2468109	0					
ANR	2468352	ArgumentList	anal		2468109	1					
ANR	2468353	Argument	anal		2468109	0					
ANR	2468354	Identifier	anal		2468109	0					
ANR	2468355	Argument	scope_hint		2468109	1					
ANR	2468356	Identifier	scope_hint		2468109	0					
ANR	2468357	Argument	"""loop"""		2468109	2					
ANR	2468358	PrimaryExpression	"""loop"""		2468109	0					
ANR	2468359	ExpressionStatement	"r_anal_hint_set_jump ( anal , scope_hint , addr )"	115:4:3143:3188	2468109	2	True				
ANR	2468360	CallExpression	"r_anal_hint_set_jump ( anal , scope_hint , addr )"		2468109	0					
ANR	2468361	Callee	r_anal_hint_set_jump		2468109	0					
ANR	2468362	Identifier	r_anal_hint_set_jump		2468109	0					
ANR	2468363	ArgumentList	anal		2468109	1					
ANR	2468364	Argument	anal		2468109	0					
ANR	2468365	Identifier	anal		2468109	0					
ANR	2468366	Argument	scope_hint		2468109	1					
ANR	2468367	Identifier	scope_hint		2468109	0					
ANR	2468368	Argument	addr		2468109	2					
ANR	2468369	Identifier	addr		2468109	0					
ANR	2468370	BreakStatement	break ;	117:3:3198:3203	2468109	3	True				
ANR	2468371	Label	case WASM_OP_BLOCK :	118:2:3207:3225	2468109	4	True				
ANR	2468372	Identifier	WASM_OP_BLOCK		2468109	0					
ANR	2468373	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_NOP	119:3:3230:3259	2468109	5	True				
ANR	2468374	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_NOP		2468109	0		=			
ANR	2468375	PtrMemberAccess	op -> type		2468109	0					
ANR	2468376	Identifier	op		2468109	0					
ANR	2468377	Identifier	type		2468109	1					
ANR	2468378	Identifier	R_ANAL_OP_TYPE_NOP		2468109	1					
ANR	2468379	IfStatement	"if ( ! ( hint = r_anal_hint_get ( anal , addr ) ) )"		2468109	6					
ANR	2468380	Condition	"! ( hint = r_anal_hint_get ( anal , addr ) )"	120:7:3268:3305	2468109	0	True				
ANR	2468381	UnaryOperationExpression	"! ( hint = r_anal_hint_get ( anal , addr ) )"		2468109	0					
ANR	2468382	UnaryOperator	!		2468109	0					
ANR	2468383	AssignmentExpression	"hint = r_anal_hint_get ( anal , addr )"		2468109	1		=			
ANR	2468384	Identifier	hint		2468109	0					
ANR	2468385	CallExpression	"r_anal_hint_get ( anal , addr )"		2468109	1					
ANR	2468386	Callee	r_anal_hint_get		2468109	0					
ANR	2468387	Identifier	r_anal_hint_get		2468109	0					
ANR	2468388	ArgumentList	anal		2468109	1					
ANR	2468389	Argument	anal		2468109	0					
ANR	2468390	Identifier	anal		2468109	0					
ANR	2468391	Argument	addr		2468109	1					
ANR	2468392	Identifier	addr		2468109	0					
ANR	2468393	CompoundStatement		46:47:1152:1152	2468109	1					
ANR	2468394	ExpressionStatement	scope_hint --	121:4:3314:3326	2468109	0	True				
ANR	2468395	PostIncDecOperationExpression	scope_hint --		2468109	0					
ANR	2468396	Identifier	scope_hint		2468109	0					
ANR	2468397	IncDec	--		2468109	1					
ANR	2468398	ExpressionStatement	"r_anal_hint_set_opcode ( anal , scope_hint , ""block"" )"	122:4:3332:3382	2468109	1	True				
ANR	2468399	CallExpression	"r_anal_hint_set_opcode ( anal , scope_hint , ""block"" )"		2468109	0					
ANR	2468400	Callee	r_anal_hint_set_opcode		2468109	0					
ANR	2468401	Identifier	r_anal_hint_set_opcode		2468109	0					
ANR	2468402	ArgumentList	anal		2468109	1					
ANR	2468403	Argument	anal		2468109	0					
ANR	2468404	Identifier	anal		2468109	0					
ANR	2468405	Argument	scope_hint		2468109	1					
ANR	2468406	Identifier	scope_hint		2468109	0					
ANR	2468407	Argument	"""block"""		2468109	2					
ANR	2468408	PrimaryExpression	"""block"""		2468109	0					
ANR	2468409	ExpressionStatement	"r_anal_hint_set_jump ( anal , scope_hint , addr )"	123:4:3388:3433	2468109	2	True				
ANR	2468410	CallExpression	"r_anal_hint_set_jump ( anal , scope_hint , addr )"		2468109	0					
ANR	2468411	Callee	r_anal_hint_set_jump		2468109	0					
ANR	2468412	Identifier	r_anal_hint_set_jump		2468109	0					
ANR	2468413	ArgumentList	anal		2468109	1					
ANR	2468414	Argument	anal		2468109	0					
ANR	2468415	Identifier	anal		2468109	0					
ANR	2468416	Argument	scope_hint		2468109	1					
ANR	2468417	Identifier	scope_hint		2468109	0					
ANR	2468418	Argument	addr		2468109	2					
ANR	2468419	Identifier	addr		2468109	0					
ANR	2468420	BreakStatement	break ;	125:3:3443:3448	2468109	7	True				
ANR	2468421	Label	case WASM_OP_IF :	126:2:3452:3467	2468109	8	True				
ANR	2468422	Identifier	WASM_OP_IF		2468109	0					
ANR	2468423	IfStatement	"if ( ! ( hint = r_anal_hint_get ( anal , addr ) ) )"		2468109	9					
ANR	2468424	Condition	"! ( hint = r_anal_hint_get ( anal , addr ) )"	127:7:3476:3513	2468109	0	True				
ANR	2468425	UnaryOperationExpression	"! ( hint = r_anal_hint_get ( anal , addr ) )"		2468109	0					
ANR	2468426	UnaryOperator	!		2468109	0					
ANR	2468427	AssignmentExpression	"hint = r_anal_hint_get ( anal , addr )"		2468109	1		=			
ANR	2468428	Identifier	hint		2468109	0					
ANR	2468429	CallExpression	"r_anal_hint_get ( anal , addr )"		2468109	1					
ANR	2468430	Callee	r_anal_hint_get		2468109	0					
ANR	2468431	Identifier	r_anal_hint_get		2468109	0					
ANR	2468432	ArgumentList	anal		2468109	1					
ANR	2468433	Argument	anal		2468109	0					
ANR	2468434	Identifier	anal		2468109	0					
ANR	2468435	Argument	addr		2468109	1					
ANR	2468436	Identifier	addr		2468109	0					
ANR	2468437	CompoundStatement		53:47:1360:1360	2468109	1					
ANR	2468438	ExpressionStatement	scope_hint --	128:4:3522:3534	2468109	0	True				
ANR	2468439	PostIncDecOperationExpression	scope_hint --		2468109	0					
ANR	2468440	Identifier	scope_hint		2468109	0					
ANR	2468441	IncDec	--		2468109	1					
ANR	2468442	ExpressionStatement	"r_anal_hint_set_opcode ( anal , scope_hint , ""if"" )"	129:4:3540:3587	2468109	1	True				
ANR	2468443	CallExpression	"r_anal_hint_set_opcode ( anal , scope_hint , ""if"" )"		2468109	0					
ANR	2468444	Callee	r_anal_hint_set_opcode		2468109	0					
ANR	2468445	Identifier	r_anal_hint_set_opcode		2468109	0					
ANR	2468446	ArgumentList	anal		2468109	1					
ANR	2468447	Argument	anal		2468109	0					
ANR	2468448	Identifier	anal		2468109	0					
ANR	2468449	Argument	scope_hint		2468109	1					
ANR	2468450	Identifier	scope_hint		2468109	0					
ANR	2468451	Argument	"""if"""		2468109	2					
ANR	2468452	PrimaryExpression	"""if"""		2468109	0					
ANR	2468453	ExpressionStatement	"r_anal_hint_set_jump ( anal , scope_hint , addr )"	130:4:3593:3638	2468109	2	True				
ANR	2468454	CallExpression	"r_anal_hint_set_jump ( anal , scope_hint , addr )"		2468109	0					
ANR	2468455	Callee	r_anal_hint_set_jump		2468109	0					
ANR	2468456	Identifier	r_anal_hint_set_jump		2468109	0					
ANR	2468457	ArgumentList	anal		2468109	1					
ANR	2468458	Argument	anal		2468109	0					
ANR	2468459	Identifier	anal		2468109	0					
ANR	2468460	Argument	scope_hint		2468109	1					
ANR	2468461	Identifier	scope_hint		2468109	0					
ANR	2468462	Argument	addr		2468109	2					
ANR	2468463	Identifier	addr		2468109	0					
ANR	2468464	IfStatement	"if ( advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_CJMP , 0 , true ) )"		2468109	3					
ANR	2468465	Condition	"advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_CJMP , 0 , true )"	131:8:3648:3727	2468109	0	True				
ANR	2468466	CallExpression	"advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_CJMP , 0 , true )"		2468109	0					
ANR	2468467	Callee	advance_till_scope_end		2468109	0					
ANR	2468468	Identifier	advance_till_scope_end		2468109	0					
ANR	2468469	ArgumentList	anal		2468109	1					
ANR	2468470	Argument	anal		2468109	0					
ANR	2468471	Identifier	anal		2468109	0					
ANR	2468472	Argument	op		2468109	1					
ANR	2468473	Identifier	op		2468109	0					
ANR	2468474	Argument	addr + op -> size		2468109	2					
ANR	2468475	AdditiveExpression	addr + op -> size		2468109	0		+			
ANR	2468476	Identifier	addr		2468109	0					
ANR	2468477	PtrMemberAccess	op -> size		2468109	1					
ANR	2468478	Identifier	op		2468109	0					
ANR	2468479	Identifier	size		2468109	1					
ANR	2468480	Argument	R_ANAL_OP_TYPE_CJMP		2468109	3					
ANR	2468481	Identifier	R_ANAL_OP_TYPE_CJMP		2468109	0					
ANR	2468482	Argument	0		2468109	4					
ANR	2468483	PrimaryExpression	0		2468109	0					
ANR	2468484	Argument	true		2468109	5					
ANR	2468485	Identifier	true		2468109	0					
ANR	2468486	CompoundStatement		57:90:1574:1574	2468109	1					
ANR	2468487	ExpressionStatement	op -> fail = addr + op -> size	132:5:3737:3763	2468109	0	True				
ANR	2468488	AssignmentExpression	op -> fail = addr + op -> size		2468109	0		=			
ANR	2468489	PtrMemberAccess	op -> fail		2468109	0					
ANR	2468490	Identifier	op		2468109	0					
ANR	2468491	Identifier	fail		2468109	1					
ANR	2468492	AdditiveExpression	addr + op -> size		2468109	1		+			
ANR	2468493	Identifier	addr		2468109	0					
ANR	2468494	PtrMemberAccess	op -> size		2468109	1					
ANR	2468495	Identifier	op		2468109	0					
ANR	2468496	Identifier	size		2468109	1					
ANR	2468497	ElseStatement	else		2468109	0					
ANR	2468498	CompoundStatement		60:10:1625:1625	2468109	0					
ANR	2468499	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_CJMP	135:4:3787:3817	2468109	0	True				
ANR	2468500	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_CJMP		2468109	0		=			
ANR	2468501	PtrMemberAccess	op -> type		2468109	0					
ANR	2468502	Identifier	op		2468109	0					
ANR	2468503	Identifier	type		2468109	1					
ANR	2468504	Identifier	R_ANAL_OP_TYPE_CJMP		2468109	1					
ANR	2468505	ExpressionStatement	op -> jump = hint -> jump	136:4:3823:3844	2468109	1	True				
ANR	2468506	AssignmentExpression	op -> jump = hint -> jump		2468109	0		=			
ANR	2468507	PtrMemberAccess	op -> jump		2468109	0					
ANR	2468508	Identifier	op		2468109	0					
ANR	2468509	Identifier	jump		2468109	1					
ANR	2468510	PtrMemberAccess	hint -> jump		2468109	1					
ANR	2468511	Identifier	hint		2468109	0					
ANR	2468512	Identifier	jump		2468109	1					
ANR	2468513	ExpressionStatement	op -> fail = addr + op -> size	137:4:3850:3876	2468109	2	True				
ANR	2468514	AssignmentExpression	op -> fail = addr + op -> size		2468109	0		=			
ANR	2468515	PtrMemberAccess	op -> fail		2468109	0					
ANR	2468516	Identifier	op		2468109	0					
ANR	2468517	Identifier	fail		2468109	1					
ANR	2468518	AdditiveExpression	addr + op -> size		2468109	1		+			
ANR	2468519	Identifier	addr		2468109	0					
ANR	2468520	PtrMemberAccess	op -> size		2468109	1					
ANR	2468521	Identifier	op		2468109	0					
ANR	2468522	Identifier	size		2468109	1					
ANR	2468523	BreakStatement	break ;	139:3:3886:3891	2468109	10	True				
ANR	2468524	Label	case WASM_OP_ELSE :	140:2:3895:3912	2468109	11	True				
ANR	2468525	Identifier	WASM_OP_ELSE		2468109	0					
ANR	2468526	IfStatement	"if ( ! ( hint = r_anal_hint_get ( anal , addr ) ) )"		2468109	12					
ANR	2468527	Condition	"! ( hint = r_anal_hint_get ( anal , addr ) )"	142:7:3948:3985	2468109	0	True				
ANR	2468528	UnaryOperationExpression	"! ( hint = r_anal_hint_get ( anal , addr ) )"		2468109	0					
ANR	2468529	UnaryOperator	!		2468109	0					
ANR	2468530	AssignmentExpression	"hint = r_anal_hint_get ( anal , addr )"		2468109	1		=			
ANR	2468531	Identifier	hint		2468109	0					
ANR	2468532	CallExpression	"r_anal_hint_get ( anal , addr )"		2468109	1					
ANR	2468533	Callee	r_anal_hint_get		2468109	0					
ANR	2468534	Identifier	r_anal_hint_get		2468109	0					
ANR	2468535	ArgumentList	anal		2468109	1					
ANR	2468536	Argument	anal		2468109	0					
ANR	2468537	Identifier	anal		2468109	0					
ANR	2468538	Argument	addr		2468109	1					
ANR	2468539	Identifier	addr		2468109	0					
ANR	2468540	CompoundStatement		68:47:1832:1832	2468109	1					
ANR	2468541	ExpressionStatement	"advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_JMP , 0 , true )"	143:4:3994:4073	2468109	0	True				
ANR	2468542	CallExpression	"advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_JMP , 0 , true )"		2468109	0					
ANR	2468543	Callee	advance_till_scope_end		2468109	0					
ANR	2468544	Identifier	advance_till_scope_end		2468109	0					
ANR	2468545	ArgumentList	anal		2468109	1					
ANR	2468546	Argument	anal		2468109	0					
ANR	2468547	Identifier	anal		2468109	0					
ANR	2468548	Argument	op		2468109	1					
ANR	2468549	Identifier	op		2468109	0					
ANR	2468550	Argument	addr + op -> size		2468109	2					
ANR	2468551	AdditiveExpression	addr + op -> size		2468109	0		+			
ANR	2468552	Identifier	addr		2468109	0					
ANR	2468553	PtrMemberAccess	op -> size		2468109	1					
ANR	2468554	Identifier	op		2468109	0					
ANR	2468555	Identifier	size		2468109	1					
ANR	2468556	Argument	R_ANAL_OP_TYPE_JMP		2468109	3					
ANR	2468557	Identifier	R_ANAL_OP_TYPE_JMP		2468109	0					
ANR	2468558	Argument	0		2468109	4					
ANR	2468559	PrimaryExpression	0		2468109	0					
ANR	2468560	Argument	true		2468109	5					
ANR	2468561	Identifier	true		2468109	0					
ANR	2468562	ElseStatement	else		2468109	0					
ANR	2468563	CompoundStatement		70:10:1929:1929	2468109	0					
ANR	2468564	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_JMP	145:4:4091:4120	2468109	0	True				
ANR	2468565	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_JMP		2468109	0		=			
ANR	2468566	PtrMemberAccess	op -> type		2468109	0					
ANR	2468567	Identifier	op		2468109	0					
ANR	2468568	Identifier	type		2468109	1					
ANR	2468569	Identifier	R_ANAL_OP_TYPE_JMP		2468109	1					
ANR	2468570	ExpressionStatement	op -> jump = hint -> jump	146:4:4126:4147	2468109	1	True				
ANR	2468571	AssignmentExpression	op -> jump = hint -> jump		2468109	0		=			
ANR	2468572	PtrMemberAccess	op -> jump		2468109	0					
ANR	2468573	Identifier	op		2468109	0					
ANR	2468574	Identifier	jump		2468109	1					
ANR	2468575	PtrMemberAccess	hint -> jump		2468109	1					
ANR	2468576	Identifier	hint		2468109	0					
ANR	2468577	Identifier	jump		2468109	1					
ANR	2468578	BreakStatement	break ;	148:3:4157:4162	2468109	13	True				
ANR	2468579	Label	case WASM_OP_BR :	149:2:4166:4181	2468109	14	True				
ANR	2468580	Identifier	WASM_OP_BR		2468109	0					
ANR	2468581	CompoundStatement		78:4:2065:2073	2468109	15					
ANR	2468582	IdentifierDeclStatement	RAnalHint * hint2 = NULL ;	151:4:4192:4215	2468109	0	True				
ANR	2468583	IdentifierDecl	* hint2 = NULL		2468109	0					
ANR	2468584	IdentifierDeclType	RAnalHint *		2468109	0					
ANR	2468585	Identifier	hint2		2468109	1					
ANR	2468586	AssignmentExpression	* hint2 = NULL		2468109	2		=			
ANR	2468587	Identifier	NULL		2468109	0					
ANR	2468588	Identifier	NULL		2468109	1					
ANR	2468589	IdentifierDeclStatement	ut32 val ;	152:4:4221:4229	2468109	1	True				
ANR	2468590	IdentifierDecl	val		2468109	0					
ANR	2468591	IdentifierDeclType	ut32		2468109	0					
ANR	2468592	Identifier	val		2468109	1					
ANR	2468593	ExpressionStatement	"read_u32_leb128 ( data + 1 , data + len , & val )"	153:4:4235:4279	2468109	2	True				
ANR	2468594	CallExpression	"read_u32_leb128 ( data + 1 , data + len , & val )"		2468109	0					
ANR	2468595	Callee	read_u32_leb128		2468109	0					
ANR	2468596	Identifier	read_u32_leb128		2468109	0					
ANR	2468597	ArgumentList	data + 1		2468109	1					
ANR	2468598	Argument	data + 1		2468109	0					
ANR	2468599	AdditiveExpression	data + 1		2468109	0		+			
ANR	2468600	Identifier	data		2468109	0					
ANR	2468601	PrimaryExpression	1		2468109	1					
ANR	2468602	Argument	data + len		2468109	1					
ANR	2468603	AdditiveExpression	data + len		2468109	0		+			
ANR	2468604	Identifier	data		2468109	0					
ANR	2468605	Identifier	len		2468109	1					
ANR	2468606	Argument	& val		2468109	2					
ANR	2468607	UnaryOperationExpression	& val		2468109	0					
ANR	2468608	UnaryOperator	&		2468109	0					
ANR	2468609	Identifier	val		2468109	1					
ANR	2468610	IfStatement	"if ( ( hint2 = r_anal_hint_get ( anal , addr ) ) && hint2 -> jump != UT64_MAX )"		2468109	3					
ANR	2468611	Condition	"( hint2 = r_anal_hint_get ( anal , addr ) ) && hint2 -> jump != UT64_MAX"	154:8:4289:4353	2468109	0	True				
ANR	2468612	AndExpression	"( hint2 = r_anal_hint_get ( anal , addr ) ) && hint2 -> jump != UT64_MAX"		2468109	0		&&			
ANR	2468613	AssignmentExpression	"hint2 = r_anal_hint_get ( anal , addr )"		2468109	0		=			
ANR	2468614	Identifier	hint2		2468109	0					
ANR	2468615	CallExpression	"r_anal_hint_get ( anal , addr )"		2468109	1					
ANR	2468616	Callee	r_anal_hint_get		2468109	0					
ANR	2468617	Identifier	r_anal_hint_get		2468109	0					
ANR	2468618	ArgumentList	anal		2468109	1					
ANR	2468619	Argument	anal		2468109	0					
ANR	2468620	Identifier	anal		2468109	0					
ANR	2468621	Argument	addr		2468109	1					
ANR	2468622	Identifier	addr		2468109	0					
ANR	2468623	EqualityExpression	hint2 -> jump != UT64_MAX		2468109	1		!=			
ANR	2468624	PtrMemberAccess	hint2 -> jump		2468109	0					
ANR	2468625	Identifier	hint2		2468109	0					
ANR	2468626	Identifier	jump		2468109	1					
ANR	2468627	Identifier	UT64_MAX		2468109	1					
ANR	2468628	CompoundStatement		80:75:2200:2200	2468109	1					
ANR	2468629	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_JMP	155:5:4363:4392	2468109	0	True				
ANR	2468630	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_JMP		2468109	0		=			
ANR	2468631	PtrMemberAccess	op -> type		2468109	0					
ANR	2468632	Identifier	op		2468109	0					
ANR	2468633	Identifier	type		2468109	1					
ANR	2468634	Identifier	R_ANAL_OP_TYPE_JMP		2468109	1					
ANR	2468635	ExpressionStatement	op -> jump = hint2 -> jump	156:5:4399:4421	2468109	1	True				
ANR	2468636	AssignmentExpression	op -> jump = hint2 -> jump		2468109	0		=			
ANR	2468637	PtrMemberAccess	op -> jump		2468109	0					
ANR	2468638	Identifier	op		2468109	0					
ANR	2468639	Identifier	jump		2468109	1					
ANR	2468640	PtrMemberAccess	hint2 -> jump		2468109	1					
ANR	2468641	Identifier	hint2		2468109	0					
ANR	2468642	Identifier	jump		2468109	1					
ANR	2468643	ElseStatement	else		2468109	0					
ANR	2468644	IfStatement	"if ( ( hint = r_anal_hint_get ( anal , scope_hint ) ) )"		2468109	0					
ANR	2468645	Condition	"hint = r_anal_hint_get ( anal , scope_hint )"	157:15:4438:4480	2468109	0	True				
ANR	2468646	AssignmentExpression	"hint = r_anal_hint_get ( anal , scope_hint )"		2468109	0		=			
ANR	2468647	Identifier	hint		2468109	0					
ANR	2468648	CallExpression	"r_anal_hint_get ( anal , scope_hint )"		2468109	1					
ANR	2468649	Callee	r_anal_hint_get		2468109	0					
ANR	2468650	Identifier	r_anal_hint_get		2468109	0					
ANR	2468651	ArgumentList	anal		2468109	1					
ANR	2468652	Argument	anal		2468109	0					
ANR	2468653	Identifier	anal		2468109	0					
ANR	2468654	Argument	scope_hint		2468109	1					
ANR	2468655	Identifier	scope_hint		2468109	0					
ANR	2468656	CompoundStatement		83:60:2327:2327	2468109	1					
ANR	2468657	IfStatement	"if ( hint -> opcode && ! strncmp ( ""loop"" , hint -> opcode , 4 ) )"		2468109	0					
ANR	2468658	Condition	"hint -> opcode && ! strncmp ( ""loop"" , hint -> opcode , 4 )"	158:9:4494:4543	2468109	0	True				
ANR	2468659	AndExpression	"hint -> opcode && ! strncmp ( ""loop"" , hint -> opcode , 4 )"		2468109	0		&&			
ANR	2468660	PtrMemberAccess	hint -> opcode		2468109	0					
ANR	2468661	Identifier	hint		2468109	0					
ANR	2468662	Identifier	opcode		2468109	1					
ANR	2468663	UnaryOperationExpression	"! strncmp ( ""loop"" , hint -> opcode , 4 )"		2468109	1					
ANR	2468664	UnaryOperator	!		2468109	0					
ANR	2468665	CallExpression	"strncmp ( ""loop"" , hint -> opcode , 4 )"		2468109	1					
ANR	2468666	Callee	strncmp		2468109	0					
ANR	2468667	Identifier	strncmp		2468109	0					
ANR	2468668	ArgumentList	"""loop"""		2468109	1					
ANR	2468669	Argument	"""loop"""		2468109	0					
ANR	2468670	PrimaryExpression	"""loop"""		2468109	0					
ANR	2468671	Argument	hint -> opcode		2468109	1					
ANR	2468672	PtrMemberAccess	hint -> opcode		2468109	0					
ANR	2468673	Identifier	hint		2468109	0					
ANR	2468674	Identifier	opcode		2468109	1					
ANR	2468675	Argument	4		2468109	2					
ANR	2468676	PrimaryExpression	4		2468109	0					
ANR	2468677	CompoundStatement		84:61:2390:2390	2468109	1					
ANR	2468678	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_JMP	159:6:4554:4583	2468109	0	True				
ANR	2468679	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_JMP		2468109	0		=			
ANR	2468680	PtrMemberAccess	op -> type		2468109	0					
ANR	2468681	Identifier	op		2468109	0					
ANR	2468682	Identifier	type		2468109	1					
ANR	2468683	Identifier	R_ANAL_OP_TYPE_JMP		2468109	1					
ANR	2468684	ExpressionStatement	op -> jump = hint -> jump	160:6:4591:4612	2468109	1	True				
ANR	2468685	AssignmentExpression	op -> jump = hint -> jump		2468109	0		=			
ANR	2468686	PtrMemberAccess	op -> jump		2468109	0					
ANR	2468687	Identifier	op		2468109	0					
ANR	2468688	Identifier	jump		2468109	1					
ANR	2468689	PtrMemberAccess	hint -> jump		2468109	1					
ANR	2468690	Identifier	hint		2468109	0					
ANR	2468691	Identifier	jump		2468109	1					
ANR	2468692	ExpressionStatement	"r_anal_hint_set_jump ( anal , addr , op -> jump )"	161:6:4620:4663	2468109	2	True				
ANR	2468693	CallExpression	"r_anal_hint_set_jump ( anal , addr , op -> jump )"		2468109	0					
ANR	2468694	Callee	r_anal_hint_set_jump		2468109	0					
ANR	2468695	Identifier	r_anal_hint_set_jump		2468109	0					
ANR	2468696	ArgumentList	anal		2468109	1					
ANR	2468697	Argument	anal		2468109	0					
ANR	2468698	Identifier	anal		2468109	0					
ANR	2468699	Argument	addr		2468109	1					
ANR	2468700	Identifier	addr		2468109	0					
ANR	2468701	Argument	op -> jump		2468109	2					
ANR	2468702	PtrMemberAccess	op -> jump		2468109	0					
ANR	2468703	Identifier	op		2468109	0					
ANR	2468704	Identifier	jump		2468109	1					
ANR	2468705	ElseStatement	else		2468109	0					
ANR	2468706	CompoundStatement		88:12:2521:2521	2468109	0					
ANR	2468707	IfStatement	"if ( advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_JMP , val , false ) )"		2468109	0					
ANR	2468708	Condition	"advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_JMP , val , false )"	163:10:4689:4770	2468109	0	True				
ANR	2468709	CallExpression	"advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_JMP , val , false )"		2468109	0					
ANR	2468710	Callee	advance_till_scope_end		2468109	0					
ANR	2468711	Identifier	advance_till_scope_end		2468109	0					
ANR	2468712	ArgumentList	anal		2468109	1					
ANR	2468713	Argument	anal		2468109	0					
ANR	2468714	Identifier	anal		2468109	0					
ANR	2468715	Argument	op		2468109	1					
ANR	2468716	Identifier	op		2468109	0					
ANR	2468717	Argument	addr + op -> size		2468109	2					
ANR	2468718	AdditiveExpression	addr + op -> size		2468109	0		+			
ANR	2468719	Identifier	addr		2468109	0					
ANR	2468720	PtrMemberAccess	op -> size		2468109	1					
ANR	2468721	Identifier	op		2468109	0					
ANR	2468722	Identifier	size		2468109	1					
ANR	2468723	Argument	R_ANAL_OP_TYPE_JMP		2468109	3					
ANR	2468724	Identifier	R_ANAL_OP_TYPE_JMP		2468109	0					
ANR	2468725	Argument	val		2468109	4					
ANR	2468726	Identifier	val		2468109	0					
ANR	2468727	Argument	false		2468109	5					
ANR	2468728	Identifier	false		2468109	0					
ANR	2468729	CompoundStatement		89:94:2617:2617	2468109	1					
ANR	2468730	ExpressionStatement	"r_anal_hint_set_jump ( anal , addr , op -> jump )"	164:7:4782:4825	2468109	0	True				
ANR	2468731	CallExpression	"r_anal_hint_set_jump ( anal , addr , op -> jump )"		2468109	0					
ANR	2468732	Callee	r_anal_hint_set_jump		2468109	0					
ANR	2468733	Identifier	r_anal_hint_set_jump		2468109	0					
ANR	2468734	ArgumentList	anal		2468109	1					
ANR	2468735	Argument	anal		2468109	0					
ANR	2468736	Identifier	anal		2468109	0					
ANR	2468737	Argument	addr		2468109	1					
ANR	2468738	Identifier	addr		2468109	0					
ANR	2468739	Argument	op -> jump		2468109	2					
ANR	2468740	PtrMemberAccess	op -> jump		2468109	0					
ANR	2468741	Identifier	op		2468109	0					
ANR	2468742	Identifier	jump		2468109	1					
ANR	2468743	ElseStatement	else		2468109	0					
ANR	2468744	CompoundStatement		93:11:2697:2697	2468109	0					
ANR	2468745	IfStatement	"if ( advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_JMP , val , false ) )"		2468109	0					
ANR	2468746	Condition	"advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_JMP , val , false )"	168:9:4864:4945	2468109	0	True				
ANR	2468747	CallExpression	"advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_JMP , val , false )"		2468109	0					
ANR	2468748	Callee	advance_till_scope_end		2468109	0					
ANR	2468749	Identifier	advance_till_scope_end		2468109	0					
ANR	2468750	ArgumentList	anal		2468109	1					
ANR	2468751	Argument	anal		2468109	0					
ANR	2468752	Identifier	anal		2468109	0					
ANR	2468753	Argument	op		2468109	1					
ANR	2468754	Identifier	op		2468109	0					
ANR	2468755	Argument	addr + op -> size		2468109	2					
ANR	2468756	AdditiveExpression	addr + op -> size		2468109	0		+			
ANR	2468757	Identifier	addr		2468109	0					
ANR	2468758	PtrMemberAccess	op -> size		2468109	1					
ANR	2468759	Identifier	op		2468109	0					
ANR	2468760	Identifier	size		2468109	1					
ANR	2468761	Argument	R_ANAL_OP_TYPE_JMP		2468109	3					
ANR	2468762	Identifier	R_ANAL_OP_TYPE_JMP		2468109	0					
ANR	2468763	Argument	val		2468109	4					
ANR	2468764	Identifier	val		2468109	0					
ANR	2468765	Argument	false		2468109	5					
ANR	2468766	Identifier	false		2468109	0					
ANR	2468767	CompoundStatement		94:93:2792:2792	2468109	1					
ANR	2468768	ExpressionStatement	"eprintf ( ""[wasm] cannot find jump type for br (using block type)\\n"" )"	169:6:4956:5024	2468109	0	True				
ANR	2468769	CallExpression	"eprintf ( ""[wasm] cannot find jump type for br (using block type)\\n"" )"		2468109	0					
ANR	2468770	Callee	eprintf		2468109	0					
ANR	2468771	Identifier	eprintf		2468109	0					
ANR	2468772	ArgumentList	"""[wasm] cannot find jump type for br (using block type)\\n"""		2468109	1					
ANR	2468773	Argument	"""[wasm] cannot find jump type for br (using block type)\\n"""		2468109	0					
ANR	2468774	PrimaryExpression	"""[wasm] cannot find jump type for br (using block type)\\n"""		2468109	0					
ANR	2468775	ExpressionStatement	"r_anal_hint_set_jump ( anal , addr , op -> jump )"	170:6:5032:5075	2468109	1	True				
ANR	2468776	CallExpression	"r_anal_hint_set_jump ( anal , addr , op -> jump )"		2468109	0					
ANR	2468777	Callee	r_anal_hint_set_jump		2468109	0					
ANR	2468778	Identifier	r_anal_hint_set_jump		2468109	0					
ANR	2468779	ArgumentList	anal		2468109	1					
ANR	2468780	Argument	anal		2468109	0					
ANR	2468781	Identifier	anal		2468109	0					
ANR	2468782	Argument	addr		2468109	1					
ANR	2468783	Identifier	addr		2468109	0					
ANR	2468784	Argument	op -> jump		2468109	2					
ANR	2468785	PtrMemberAccess	op -> jump		2468109	0					
ANR	2468786	Identifier	op		2468109	0					
ANR	2468787	Identifier	jump		2468109	1					
ANR	2468788	ElseStatement	else		2468109	0					
ANR	2468789	CompoundStatement		97:12:2933:2933	2468109	0					
ANR	2468790	ExpressionStatement	"eprintf ( ""[wasm] cannot find jump for br\\n"" )"	172:6:5097:5141	2468109	0	True				
ANR	2468791	CallExpression	"eprintf ( ""[wasm] cannot find jump for br\\n"" )"		2468109	0					
ANR	2468792	Callee	eprintf		2468109	0					
ANR	2468793	Identifier	eprintf		2468109	0					
ANR	2468794	ArgumentList	"""[wasm] cannot find jump for br\\n"""		2468109	1					
ANR	2468795	Argument	"""[wasm] cannot find jump for br\\n"""		2468109	0					
ANR	2468796	PrimaryExpression	"""[wasm] cannot find jump for br\\n"""		2468109	0					
ANR	2468797	ExpressionStatement	r_anal_hint_free ( hint2 )	175:4:5160:5184	2468109	4	True				
ANR	2468798	CallExpression	r_anal_hint_free ( hint2 )		2468109	0					
ANR	2468799	Callee	r_anal_hint_free		2468109	0					
ANR	2468800	Identifier	r_anal_hint_free		2468109	0					
ANR	2468801	ArgumentList	hint2		2468109	1					
ANR	2468802	Argument	hint2		2468109	0					
ANR	2468803	Identifier	hint2		2468109	0					
ANR	2468804	BreakStatement	break ;	177:3:5194:5199	2468109	16	True				
ANR	2468805	Label	case WASM_OP_BRIF :	178:2:5203:5220	2468109	17	True				
ANR	2468806	Identifier	WASM_OP_BRIF		2468109	0					
ANR	2468807	CompoundStatement		107:4:3104:3112	2468109	18					
ANR	2468808	IdentifierDeclStatement	RAnalHint * hint2 = NULL ;	180:4:5231:5254	2468109	0	True				
ANR	2468809	IdentifierDecl	* hint2 = NULL		2468109	0					
ANR	2468810	IdentifierDeclType	RAnalHint *		2468109	0					
ANR	2468811	Identifier	hint2		2468109	1					
ANR	2468812	AssignmentExpression	* hint2 = NULL		2468109	2		=			
ANR	2468813	Identifier	NULL		2468109	0					
ANR	2468814	Identifier	NULL		2468109	1					
ANR	2468815	IdentifierDeclStatement	ut32 val ;	181:4:5260:5268	2468109	1	True				
ANR	2468816	IdentifierDecl	val		2468109	0					
ANR	2468817	IdentifierDeclType	ut32		2468109	0					
ANR	2468818	Identifier	val		2468109	1					
ANR	2468819	ExpressionStatement	"read_u32_leb128 ( data + 1 , data + len , & val )"	182:4:5274:5318	2468109	2	True				
ANR	2468820	CallExpression	"read_u32_leb128 ( data + 1 , data + len , & val )"		2468109	0					
ANR	2468821	Callee	read_u32_leb128		2468109	0					
ANR	2468822	Identifier	read_u32_leb128		2468109	0					
ANR	2468823	ArgumentList	data + 1		2468109	1					
ANR	2468824	Argument	data + 1		2468109	0					
ANR	2468825	AdditiveExpression	data + 1		2468109	0		+			
ANR	2468826	Identifier	data		2468109	0					
ANR	2468827	PrimaryExpression	1		2468109	1					
ANR	2468828	Argument	data + len		2468109	1					
ANR	2468829	AdditiveExpression	data + len		2468109	0		+			
ANR	2468830	Identifier	data		2468109	0					
ANR	2468831	Identifier	len		2468109	1					
ANR	2468832	Argument	& val		2468109	2					
ANR	2468833	UnaryOperationExpression	& val		2468109	0					
ANR	2468834	UnaryOperator	&		2468109	0					
ANR	2468835	Identifier	val		2468109	1					
ANR	2468836	IfStatement	"if ( ( hint2 = r_anal_hint_get ( anal , addr ) ) && hint2 -> jump != UT64_MAX )"		2468109	3					
ANR	2468837	Condition	"( hint2 = r_anal_hint_get ( anal , addr ) ) && hint2 -> jump != UT64_MAX"	183:8:5328:5392	2468109	0	True				
ANR	2468838	AndExpression	"( hint2 = r_anal_hint_get ( anal , addr ) ) && hint2 -> jump != UT64_MAX"		2468109	0		&&			
ANR	2468839	AssignmentExpression	"hint2 = r_anal_hint_get ( anal , addr )"		2468109	0		=			
ANR	2468840	Identifier	hint2		2468109	0					
ANR	2468841	CallExpression	"r_anal_hint_get ( anal , addr )"		2468109	1					
ANR	2468842	Callee	r_anal_hint_get		2468109	0					
ANR	2468843	Identifier	r_anal_hint_get		2468109	0					
ANR	2468844	ArgumentList	anal		2468109	1					
ANR	2468845	Argument	anal		2468109	0					
ANR	2468846	Identifier	anal		2468109	0					
ANR	2468847	Argument	addr		2468109	1					
ANR	2468848	Identifier	addr		2468109	0					
ANR	2468849	EqualityExpression	hint2 -> jump != UT64_MAX		2468109	1		!=			
ANR	2468850	PtrMemberAccess	hint2 -> jump		2468109	0					
ANR	2468851	Identifier	hint2		2468109	0					
ANR	2468852	Identifier	jump		2468109	1					
ANR	2468853	Identifier	UT64_MAX		2468109	1					
ANR	2468854	CompoundStatement		109:75:3239:3239	2468109	1					
ANR	2468855	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_CJMP	184:5:5402:5432	2468109	0	True				
ANR	2468856	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_CJMP		2468109	0		=			
ANR	2468857	PtrMemberAccess	op -> type		2468109	0					
ANR	2468858	Identifier	op		2468109	0					
ANR	2468859	Identifier	type		2468109	1					
ANR	2468860	Identifier	R_ANAL_OP_TYPE_CJMP		2468109	1					
ANR	2468861	ExpressionStatement	op -> jump = hint2 -> jump	185:5:5439:5461	2468109	1	True				
ANR	2468862	AssignmentExpression	op -> jump = hint2 -> jump		2468109	0		=			
ANR	2468863	PtrMemberAccess	op -> jump		2468109	0					
ANR	2468864	Identifier	op		2468109	0					
ANR	2468865	Identifier	jump		2468109	1					
ANR	2468866	PtrMemberAccess	hint2 -> jump		2468109	1					
ANR	2468867	Identifier	hint2		2468109	0					
ANR	2468868	Identifier	jump		2468109	1					
ANR	2468869	ExpressionStatement	op -> fail = addr + op -> size	186:5:5468:5494	2468109	2	True				
ANR	2468870	AssignmentExpression	op -> fail = addr + op -> size		2468109	0		=			
ANR	2468871	PtrMemberAccess	op -> fail		2468109	0					
ANR	2468872	Identifier	op		2468109	0					
ANR	2468873	Identifier	fail		2468109	1					
ANR	2468874	AdditiveExpression	addr + op -> size		2468109	1		+			
ANR	2468875	Identifier	addr		2468109	0					
ANR	2468876	PtrMemberAccess	op -> size		2468109	1					
ANR	2468877	Identifier	op		2468109	0					
ANR	2468878	Identifier	size		2468109	1					
ANR	2468879	ElseStatement	else		2468109	0					
ANR	2468880	IfStatement	"if ( ( hint = r_anal_hint_get ( anal , scope_hint ) ) )"		2468109	0					
ANR	2468881	Condition	"hint = r_anal_hint_get ( anal , scope_hint )"	187:15:5511:5553	2468109	0	True				
ANR	2468882	AssignmentExpression	"hint = r_anal_hint_get ( anal , scope_hint )"		2468109	0		=			
ANR	2468883	Identifier	hint		2468109	0					
ANR	2468884	CallExpression	"r_anal_hint_get ( anal , scope_hint )"		2468109	1					
ANR	2468885	Callee	r_anal_hint_get		2468109	0					
ANR	2468886	Identifier	r_anal_hint_get		2468109	0					
ANR	2468887	ArgumentList	anal		2468109	1					
ANR	2468888	Argument	anal		2468109	0					
ANR	2468889	Identifier	anal		2468109	0					
ANR	2468890	Argument	scope_hint		2468109	1					
ANR	2468891	Identifier	scope_hint		2468109	0					
ANR	2468892	CompoundStatement		113:60:3400:3400	2468109	1					
ANR	2468893	IfStatement	"if ( hint -> opcode && ! strncmp ( ""loop"" , hint -> opcode , 4 ) )"		2468109	0					
ANR	2468894	Condition	"hint -> opcode && ! strncmp ( ""loop"" , hint -> opcode , 4 )"	188:9:5567:5616	2468109	0	True				
ANR	2468895	AndExpression	"hint -> opcode && ! strncmp ( ""loop"" , hint -> opcode , 4 )"		2468109	0		&&			
ANR	2468896	PtrMemberAccess	hint -> opcode		2468109	0					
ANR	2468897	Identifier	hint		2468109	0					
ANR	2468898	Identifier	opcode		2468109	1					
ANR	2468899	UnaryOperationExpression	"! strncmp ( ""loop"" , hint -> opcode , 4 )"		2468109	1					
ANR	2468900	UnaryOperator	!		2468109	0					
ANR	2468901	CallExpression	"strncmp ( ""loop"" , hint -> opcode , 4 )"		2468109	1					
ANR	2468902	Callee	strncmp		2468109	0					
ANR	2468903	Identifier	strncmp		2468109	0					
ANR	2468904	ArgumentList	"""loop"""		2468109	1					
ANR	2468905	Argument	"""loop"""		2468109	0					
ANR	2468906	PrimaryExpression	"""loop"""		2468109	0					
ANR	2468907	Argument	hint -> opcode		2468109	1					
ANR	2468908	PtrMemberAccess	hint -> opcode		2468109	0					
ANR	2468909	Identifier	hint		2468109	0					
ANR	2468910	Identifier	opcode		2468109	1					
ANR	2468911	Argument	4		2468109	2					
ANR	2468912	PrimaryExpression	4		2468109	0					
ANR	2468913	CompoundStatement		114:61:3463:3463	2468109	1					
ANR	2468914	ExpressionStatement	op -> fail = addr + op -> size	189:6:5627:5653	2468109	0	True				
ANR	2468915	AssignmentExpression	op -> fail = addr + op -> size		2468109	0		=			
ANR	2468916	PtrMemberAccess	op -> fail		2468109	0					
ANR	2468917	Identifier	op		2468109	0					
ANR	2468918	Identifier	fail		2468109	1					
ANR	2468919	AdditiveExpression	addr + op -> size		2468109	1		+			
ANR	2468920	Identifier	addr		2468109	0					
ANR	2468921	PtrMemberAccess	op -> size		2468109	1					
ANR	2468922	Identifier	op		2468109	0					
ANR	2468923	Identifier	size		2468109	1					
ANR	2468924	ExpressionStatement	op -> jump = hint -> jump	190:6:5661:5682	2468109	1	True				
ANR	2468925	AssignmentExpression	op -> jump = hint -> jump		2468109	0		=			
ANR	2468926	PtrMemberAccess	op -> jump		2468109	0					
ANR	2468927	Identifier	op		2468109	0					
ANR	2468928	Identifier	jump		2468109	1					
ANR	2468929	PtrMemberAccess	hint -> jump		2468109	1					
ANR	2468930	Identifier	hint		2468109	0					
ANR	2468931	Identifier	jump		2468109	1					
ANR	2468932	ExpressionStatement	"r_anal_hint_set_jump ( anal , addr , op -> jump )"	191:6:5690:5733	2468109	2	True				
ANR	2468933	CallExpression	"r_anal_hint_set_jump ( anal , addr , op -> jump )"		2468109	0					
ANR	2468934	Callee	r_anal_hint_set_jump		2468109	0					
ANR	2468935	Identifier	r_anal_hint_set_jump		2468109	0					
ANR	2468936	ArgumentList	anal		2468109	1					
ANR	2468937	Argument	anal		2468109	0					
ANR	2468938	Identifier	anal		2468109	0					
ANR	2468939	Argument	addr		2468109	1					
ANR	2468940	Identifier	addr		2468109	0					
ANR	2468941	Argument	op -> jump		2468109	2					
ANR	2468942	PtrMemberAccess	op -> jump		2468109	0					
ANR	2468943	Identifier	op		2468109	0					
ANR	2468944	Identifier	jump		2468109	1					
ANR	2468945	ElseStatement	else		2468109	0					
ANR	2468946	CompoundStatement		118:12:3591:3591	2468109	0					
ANR	2468947	IfStatement	"if ( advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_CJMP , val , false ) )"		2468109	0					
ANR	2468948	Condition	"advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_CJMP , val , false )"	193:10:5759:5841	2468109	0	True				
ANR	2468949	CallExpression	"advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_CJMP , val , false )"		2468109	0					
ANR	2468950	Callee	advance_till_scope_end		2468109	0					
ANR	2468951	Identifier	advance_till_scope_end		2468109	0					
ANR	2468952	ArgumentList	anal		2468109	1					
ANR	2468953	Argument	anal		2468109	0					
ANR	2468954	Identifier	anal		2468109	0					
ANR	2468955	Argument	op		2468109	1					
ANR	2468956	Identifier	op		2468109	0					
ANR	2468957	Argument	addr + op -> size		2468109	2					
ANR	2468958	AdditiveExpression	addr + op -> size		2468109	0		+			
ANR	2468959	Identifier	addr		2468109	0					
ANR	2468960	PtrMemberAccess	op -> size		2468109	1					
ANR	2468961	Identifier	op		2468109	0					
ANR	2468962	Identifier	size		2468109	1					
ANR	2468963	Argument	R_ANAL_OP_TYPE_CJMP		2468109	3					
ANR	2468964	Identifier	R_ANAL_OP_TYPE_CJMP		2468109	0					
ANR	2468965	Argument	val		2468109	4					
ANR	2468966	Identifier	val		2468109	0					
ANR	2468967	Argument	false		2468109	5					
ANR	2468968	Identifier	false		2468109	0					
ANR	2468969	CompoundStatement		119:95:3688:3688	2468109	1					
ANR	2468970	ExpressionStatement	op -> fail = addr + op -> size	194:7:5853:5879	2468109	0	True				
ANR	2468971	AssignmentExpression	op -> fail = addr + op -> size		2468109	0		=			
ANR	2468972	PtrMemberAccess	op -> fail		2468109	0					
ANR	2468973	Identifier	op		2468109	0					
ANR	2468974	Identifier	fail		2468109	1					
ANR	2468975	AdditiveExpression	addr + op -> size		2468109	1		+			
ANR	2468976	Identifier	addr		2468109	0					
ANR	2468977	PtrMemberAccess	op -> size		2468109	1					
ANR	2468978	Identifier	op		2468109	0					
ANR	2468979	Identifier	size		2468109	1					
ANR	2468980	ExpressionStatement	"r_anal_hint_set_jump ( anal , addr , op -> jump )"	195:7:5888:5931	2468109	1	True				
ANR	2468981	CallExpression	"r_anal_hint_set_jump ( anal , addr , op -> jump )"		2468109	0					
ANR	2468982	Callee	r_anal_hint_set_jump		2468109	0					
ANR	2468983	Identifier	r_anal_hint_set_jump		2468109	0					
ANR	2468984	ArgumentList	anal		2468109	1					
ANR	2468985	Argument	anal		2468109	0					
ANR	2468986	Identifier	anal		2468109	0					
ANR	2468987	Argument	addr		2468109	1					
ANR	2468988	Identifier	addr		2468109	0					
ANR	2468989	Argument	op -> jump		2468109	2					
ANR	2468990	PtrMemberAccess	op -> jump		2468109	0					
ANR	2468991	Identifier	op		2468109	0					
ANR	2468992	Identifier	jump		2468109	1					
ANR	2468993	ElseStatement	else		2468109	0					
ANR	2468994	CompoundStatement		124:11:3803:3803	2468109	0					
ANR	2468995	IfStatement	"if ( advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_CJMP , val , false ) )"		2468109	0					
ANR	2468996	Condition	"advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_CJMP , val , false )"	199:9:5970:6052	2468109	0	True				
ANR	2468997	CallExpression	"advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_CJMP , val , false )"		2468109	0					
ANR	2468998	Callee	advance_till_scope_end		2468109	0					
ANR	2468999	Identifier	advance_till_scope_end		2468109	0					
ANR	2469000	ArgumentList	anal		2468109	1					
ANR	2469001	Argument	anal		2468109	0					
ANR	2469002	Identifier	anal		2468109	0					
ANR	2469003	Argument	op		2468109	1					
ANR	2469004	Identifier	op		2468109	0					
ANR	2469005	Argument	addr + op -> size		2468109	2					
ANR	2469006	AdditiveExpression	addr + op -> size		2468109	0		+			
ANR	2469007	Identifier	addr		2468109	0					
ANR	2469008	PtrMemberAccess	op -> size		2468109	1					
ANR	2469009	Identifier	op		2468109	0					
ANR	2469010	Identifier	size		2468109	1					
ANR	2469011	Argument	R_ANAL_OP_TYPE_CJMP		2468109	3					
ANR	2469012	Identifier	R_ANAL_OP_TYPE_CJMP		2468109	0					
ANR	2469013	Argument	val		2468109	4					
ANR	2469014	Identifier	val		2468109	0					
ANR	2469015	Argument	false		2468109	5					
ANR	2469016	Identifier	false		2468109	0					
ANR	2469017	CompoundStatement		125:94:3899:3899	2468109	1					
ANR	2469018	ExpressionStatement	"eprintf ( ""[wasm] cannot find jump type for br_if (using block type)\\n"" )"	200:6:6063:6134	2468109	0	True				
ANR	2469019	CallExpression	"eprintf ( ""[wasm] cannot find jump type for br_if (using block type)\\n"" )"		2468109	0					
ANR	2469020	Callee	eprintf		2468109	0					
ANR	2469021	Identifier	eprintf		2468109	0					
ANR	2469022	ArgumentList	"""[wasm] cannot find jump type for br_if (using block type)\\n"""		2468109	1					
ANR	2469023	Argument	"""[wasm] cannot find jump type for br_if (using block type)\\n"""		2468109	0					
ANR	2469024	PrimaryExpression	"""[wasm] cannot find jump type for br_if (using block type)\\n"""		2468109	0					
ANR	2469025	ExpressionStatement	op -> fail = addr + op -> size	201:6:6142:6168	2468109	1	True				
ANR	2469026	AssignmentExpression	op -> fail = addr + op -> size		2468109	0		=			
ANR	2469027	PtrMemberAccess	op -> fail		2468109	0					
ANR	2469028	Identifier	op		2468109	0					
ANR	2469029	Identifier	fail		2468109	1					
ANR	2469030	AdditiveExpression	addr + op -> size		2468109	1		+			
ANR	2469031	Identifier	addr		2468109	0					
ANR	2469032	PtrMemberAccess	op -> size		2468109	1					
ANR	2469033	Identifier	op		2468109	0					
ANR	2469034	Identifier	size		2468109	1					
ANR	2469035	ExpressionStatement	"r_anal_hint_set_jump ( anal , addr , op -> jump )"	202:6:6176:6219	2468109	2	True				
ANR	2469036	CallExpression	"r_anal_hint_set_jump ( anal , addr , op -> jump )"		2468109	0					
ANR	2469037	Callee	r_anal_hint_set_jump		2468109	0					
ANR	2469038	Identifier	r_anal_hint_set_jump		2468109	0					
ANR	2469039	ArgumentList	anal		2468109	1					
ANR	2469040	Argument	anal		2468109	0					
ANR	2469041	Identifier	anal		2468109	0					
ANR	2469042	Argument	addr		2468109	1					
ANR	2469043	Identifier	addr		2468109	0					
ANR	2469044	Argument	op -> jump		2468109	2					
ANR	2469045	PtrMemberAccess	op -> jump		2468109	0					
ANR	2469046	Identifier	op		2468109	0					
ANR	2469047	Identifier	jump		2468109	1					
ANR	2469048	ElseStatement	else		2468109	0					
ANR	2469049	CompoundStatement		129:12:4077:4077	2468109	0					
ANR	2469050	ExpressionStatement	"eprintf ( ""[wasm] cannot find jump for br_if\\n"" )"	204:6:6241:6288	2468109	0	True				
ANR	2469051	CallExpression	"eprintf ( ""[wasm] cannot find jump for br_if\\n"" )"		2468109	0					
ANR	2469052	Callee	eprintf		2468109	0					
ANR	2469053	Identifier	eprintf		2468109	0					
ANR	2469054	ArgumentList	"""[wasm] cannot find jump for br_if\\n"""		2468109	1					
ANR	2469055	Argument	"""[wasm] cannot find jump for br_if\\n"""		2468109	0					
ANR	2469056	PrimaryExpression	"""[wasm] cannot find jump for br_if\\n"""		2468109	0					
ANR	2469057	ExpressionStatement	r_anal_hint_free ( hint2 )	207:4:6307:6331	2468109	4	True				
ANR	2469058	CallExpression	r_anal_hint_free ( hint2 )		2468109	0					
ANR	2469059	Callee	r_anal_hint_free		2468109	0					
ANR	2469060	Identifier	r_anal_hint_free		2468109	0					
ANR	2469061	ArgumentList	hint2		2468109	1					
ANR	2469062	Argument	hint2		2468109	0					
ANR	2469063	Identifier	hint2		2468109	0					
ANR	2469064	BreakStatement	break ;	209:3:6341:6346	2468109	19	True				
ANR	2469065	Label	case WASM_OP_END :	210:2:6350:6366	2468109	20	True				
ANR	2469066	Identifier	WASM_OP_END		2468109	0					
ANR	2469067	CompoundStatement		137:3:4215:4215	2468109	21					
ANR	2469068	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_NOP	212:4:6377:6406	2468109	0	True				
ANR	2469069	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_NOP		2468109	0		=			
ANR	2469070	PtrMemberAccess	op -> type		2468109	0					
ANR	2469071	Identifier	op		2468109	0					
ANR	2469072	Identifier	type		2468109	1					
ANR	2469073	Identifier	R_ANAL_OP_TYPE_NOP		2468109	1					
ANR	2469074	IfStatement	if ( scope_hint < UT64_MAX )		2468109	1					
ANR	2469075	Condition	scope_hint < UT64_MAX	213:8:6416:6436	2468109	0	True				
ANR	2469076	RelationalExpression	scope_hint < UT64_MAX		2468109	0		<			
ANR	2469077	Identifier	scope_hint		2468109	0					
ANR	2469078	Identifier	UT64_MAX		2468109	1					
ANR	2469079	CompoundStatement		139:31:4283:4283	2468109	1					
ANR	2469080	ExpressionStatement	"hint = r_anal_hint_get ( anal , scope_hint )"	214:5:6446:6487	2468109	0	True				
ANR	2469081	AssignmentExpression	"hint = r_anal_hint_get ( anal , scope_hint )"		2468109	0		=			
ANR	2469082	Identifier	hint		2468109	0					
ANR	2469083	CallExpression	"r_anal_hint_get ( anal , scope_hint )"		2468109	1					
ANR	2469084	Callee	r_anal_hint_get		2468109	0					
ANR	2469085	Identifier	r_anal_hint_get		2468109	0					
ANR	2469086	ArgumentList	anal		2468109	1					
ANR	2469087	Argument	anal		2468109	0					
ANR	2469088	Identifier	anal		2468109	0					
ANR	2469089	Argument	scope_hint		2468109	1					
ANR	2469090	Identifier	scope_hint		2468109	0					
ANR	2469091	IfStatement	"if ( hint && ! strncmp ( ""loop"" , hint -> opcode , 4 ) )"		2468109	1					
ANR	2469092	Condition	"hint && ! strncmp ( ""loop"" , hint -> opcode , 4 )"	215:9:6498:6539	2468109	0	True				
ANR	2469093	AndExpression	"hint && ! strncmp ( ""loop"" , hint -> opcode , 4 )"		2468109	0		&&			
ANR	2469094	Identifier	hint		2468109	0					
ANR	2469095	UnaryOperationExpression	"! strncmp ( ""loop"" , hint -> opcode , 4 )"		2468109	1					
ANR	2469096	UnaryOperator	!		2468109	0					
ANR	2469097	CallExpression	"strncmp ( ""loop"" , hint -> opcode , 4 )"		2468109	1					
ANR	2469098	Callee	strncmp		2468109	0					
ANR	2469099	Identifier	strncmp		2468109	0					
ANR	2469100	ArgumentList	"""loop"""		2468109	1					
ANR	2469101	Argument	"""loop"""		2468109	0					
ANR	2469102	PrimaryExpression	"""loop"""		2468109	0					
ANR	2469103	Argument	hint -> opcode		2468109	1					
ANR	2469104	PtrMemberAccess	hint -> opcode		2468109	0					
ANR	2469105	Identifier	hint		2468109	0					
ANR	2469106	Identifier	opcode		2468109	1					
ANR	2469107	Argument	4		2468109	2					
ANR	2469108	PrimaryExpression	4		2468109	0					
ANR	2469109	CompoundStatement		141:53:4386:4386	2468109	1					
ANR	2469110	ExpressionStatement	"r_anal_hint_set_jump ( anal , addr , op -> jump )"	216:6:6550:6593	2468109	0	True				
ANR	2469111	CallExpression	"r_anal_hint_set_jump ( anal , addr , op -> jump )"		2468109	0					
ANR	2469112	Callee	r_anal_hint_set_jump		2468109	0					
ANR	2469113	Identifier	r_anal_hint_set_jump		2468109	0					
ANR	2469114	ArgumentList	anal		2468109	1					
ANR	2469115	Argument	anal		2468109	0					
ANR	2469116	Identifier	anal		2468109	0					
ANR	2469117	Argument	addr		2468109	1					
ANR	2469118	Identifier	addr		2468109	0					
ANR	2469119	Argument	op -> jump		2468109	2					
ANR	2469120	PtrMemberAccess	op -> jump		2468109	0					
ANR	2469121	Identifier	op		2468109	0					
ANR	2469122	Identifier	jump		2468109	1					
ANR	2469123	ExpressionStatement	"r_anal_hint_set_jump ( anal , op -> jump , addr )"	217:6:6601:6644	2468109	1	True				
ANR	2469124	CallExpression	"r_anal_hint_set_jump ( anal , op -> jump , addr )"		2468109	0					
ANR	2469125	Callee	r_anal_hint_set_jump		2468109	0					
ANR	2469126	Identifier	r_anal_hint_set_jump		2468109	0					
ANR	2469127	ArgumentList	anal		2468109	1					
ANR	2469128	Argument	anal		2468109	0					
ANR	2469129	Identifier	anal		2468109	0					
ANR	2469130	Argument	op -> jump		2468109	1					
ANR	2469131	PtrMemberAccess	op -> jump		2468109	0					
ANR	2469132	Identifier	op		2468109	0					
ANR	2469133	Identifier	jump		2468109	1					
ANR	2469134	Argument	addr		2468109	2					
ANR	2469135	Identifier	addr		2468109	0					
ANR	2469136	ElseStatement	else		2468109	0					
ANR	2469137	IfStatement	"if ( hint && ! strncmp ( ""block"" , hint -> opcode , 5 ) )"		2468109	0					
ANR	2469138	Condition	"hint && ! strncmp ( ""block"" , hint -> opcode , 5 )"	218:16:6662:6704	2468109	0	True				
ANR	2469139	AndExpression	"hint && ! strncmp ( ""block"" , hint -> opcode , 5 )"		2468109	0		&&			
ANR	2469140	Identifier	hint		2468109	0					
ANR	2469141	UnaryOperationExpression	"! strncmp ( ""block"" , hint -> opcode , 5 )"		2468109	1					
ANR	2469142	UnaryOperator	!		2468109	0					
ANR	2469143	CallExpression	"strncmp ( ""block"" , hint -> opcode , 5 )"		2468109	1					
ANR	2469144	Callee	strncmp		2468109	0					
ANR	2469145	Identifier	strncmp		2468109	0					
ANR	2469146	ArgumentList	"""block"""		2468109	1					
ANR	2469147	Argument	"""block"""		2468109	0					
ANR	2469148	PrimaryExpression	"""block"""		2468109	0					
ANR	2469149	Argument	hint -> opcode		2468109	1					
ANR	2469150	PtrMemberAccess	hint -> opcode		2468109	0					
ANR	2469151	Identifier	hint		2468109	0					
ANR	2469152	Identifier	opcode		2468109	1					
ANR	2469153	Argument	5		2468109	2					
ANR	2469154	PrimaryExpression	5		2468109	0					
ANR	2469155	CompoundStatement		144:61:4551:4551	2468109	1					
ANR	2469156	ExpressionStatement	"r_anal_hint_set_jump ( anal , hint -> jump , addr )"	220:6:6738:6783	2468109	0	True				
ANR	2469157	CallExpression	"r_anal_hint_set_jump ( anal , hint -> jump , addr )"		2468109	0					
ANR	2469158	Callee	r_anal_hint_set_jump		2468109	0					
ANR	2469159	Identifier	r_anal_hint_set_jump		2468109	0					
ANR	2469160	ArgumentList	anal		2468109	1					
ANR	2469161	Argument	anal		2468109	0					
ANR	2469162	Identifier	anal		2468109	0					
ANR	2469163	Argument	hint -> jump		2468109	1					
ANR	2469164	PtrMemberAccess	hint -> jump		2468109	0					
ANR	2469165	Identifier	hint		2468109	0					
ANR	2469166	Identifier	jump		2468109	1					
ANR	2469167	Argument	addr		2468109	2					
ANR	2469168	Identifier	addr		2468109	0					
ANR	2469169	ExpressionStatement	"r_anal_hint_set_jump ( anal , addr , UT64_MAX )"	221:6:6791:6834	2468109	1	True				
ANR	2469170	CallExpression	"r_anal_hint_set_jump ( anal , addr , UT64_MAX )"		2468109	0					
ANR	2469171	Callee	r_anal_hint_set_jump		2468109	0					
ANR	2469172	Identifier	r_anal_hint_set_jump		2468109	0					
ANR	2469173	ArgumentList	anal		2468109	1					
ANR	2469174	Argument	anal		2468109	0					
ANR	2469175	Identifier	anal		2468109	0					
ANR	2469176	Argument	addr		2468109	1					
ANR	2469177	Identifier	addr		2468109	0					
ANR	2469178	Argument	UT64_MAX		2468109	2					
ANR	2469179	Identifier	UT64_MAX		2468109	0					
ANR	2469180	IfStatement	if ( hint )		2468109	2					
ANR	2469181	Condition	hint	223:9:6852:6855	2468109	0	True				
ANR	2469182	Identifier	hint		2468109	0					
ANR	2469183	CompoundStatement		149:15:4702:4702	2468109	1					
ANR	2469184	ExpressionStatement	"r_anal_hint_set_opcode ( anal , scope_hint , ""invalid"" )"	224:6:6866:6918	2468109	0	True				
ANR	2469185	CallExpression	"r_anal_hint_set_opcode ( anal , scope_hint , ""invalid"" )"		2468109	0					
ANR	2469186	Callee	r_anal_hint_set_opcode		2468109	0					
ANR	2469187	Identifier	r_anal_hint_set_opcode		2468109	0					
ANR	2469188	ArgumentList	anal		2468109	1					
ANR	2469189	Argument	anal		2468109	0					
ANR	2469190	Identifier	anal		2468109	0					
ANR	2469191	Argument	scope_hint		2468109	1					
ANR	2469192	Identifier	scope_hint		2468109	0					
ANR	2469193	Argument	"""invalid"""		2468109	2					
ANR	2469194	PrimaryExpression	"""invalid"""		2468109	0					
ANR	2469195	ExpressionStatement	"r_anal_hint_set_jump ( anal , scope_hint , UT64_MAX )"	225:6:6926:6975	2468109	1	True				
ANR	2469196	CallExpression	"r_anal_hint_set_jump ( anal , scope_hint , UT64_MAX )"		2468109	0					
ANR	2469197	Callee	r_anal_hint_set_jump		2468109	0					
ANR	2469198	Identifier	r_anal_hint_set_jump		2468109	0					
ANR	2469199	ArgumentList	anal		2468109	1					
ANR	2469200	Argument	anal		2468109	0					
ANR	2469201	Identifier	anal		2468109	0					
ANR	2469202	Argument	scope_hint		2468109	1					
ANR	2469203	Identifier	scope_hint		2468109	0					
ANR	2469204	Argument	UT64_MAX		2468109	2					
ANR	2469205	Identifier	UT64_MAX		2468109	0					
ANR	2469206	ExpressionStatement	"r_anal_hint_del ( anal , scope_hint , 1 )"	226:6:6983:7020	2468109	2	True				
ANR	2469207	CallExpression	"r_anal_hint_del ( anal , scope_hint , 1 )"		2468109	0					
ANR	2469208	Callee	r_anal_hint_del		2468109	0					
ANR	2469209	Identifier	r_anal_hint_del		2468109	0					
ANR	2469210	ArgumentList	anal		2468109	1					
ANR	2469211	Argument	anal		2468109	0					
ANR	2469212	Identifier	anal		2468109	0					
ANR	2469213	Argument	scope_hint		2468109	1					
ANR	2469214	Identifier	scope_hint		2468109	0					
ANR	2469215	Argument	1		2468109	2					
ANR	2469216	PrimaryExpression	1		2468109	0					
ANR	2469217	ExpressionStatement	scope_hint ++	227:6:7028:7040	2468109	3	True				
ANR	2469218	PostIncDecOperationExpression	scope_hint ++		2468109	0					
ANR	2469219	Identifier	scope_hint		2468109	0					
ANR	2469220	IncDec	++		2468109	1					
ANR	2469221	ElseStatement	else		2468109	0					
ANR	2469222	CompoundStatement		154:12:4898:4898	2468109	0					
ANR	2469223	ExpressionStatement	op -> eob = true	230:6:7107:7121	2468109	0	True				
ANR	2469224	AssignmentExpression	op -> eob = true		2468109	0		=			
ANR	2469225	PtrMemberAccess	op -> eob		2468109	0					
ANR	2469226	Identifier	op		2468109	0					
ANR	2469227	Identifier	eob		2468109	1					
ANR	2469228	Identifier	true		2468109	1					
ANR	2469229	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_RET	231:6:7129:7158	2468109	1	True				
ANR	2469230	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_RET		2468109	0		=			
ANR	2469231	PtrMemberAccess	op -> type		2468109	0					
ANR	2469232	Identifier	op		2468109	0					
ANR	2469233	Identifier	type		2468109	1					
ANR	2469234	Identifier	R_ANAL_OP_TYPE_RET		2468109	1					
ANR	2469235	ExpressionStatement	scope_hint = UT64_MAX	232:6:7166:7187	2468109	2	True				
ANR	2469236	AssignmentExpression	scope_hint = UT64_MAX		2468109	0		=			
ANR	2469237	Identifier	scope_hint		2468109	0					
ANR	2469238	Identifier	UT64_MAX		2468109	1					
ANR	2469239	ElseStatement	else		2468109	0					
ANR	2469240	CompoundStatement		160:11:5051:5051	2468109	0					
ANR	2469241	IfStatement	"if ( ! ( hint = r_anal_hint_get ( anal , addr ) ) )"		2468109	0					
ANR	2469242	Condition	"! ( hint = r_anal_hint_get ( anal , addr ) )"	235:9:7218:7255	2468109	0	True				
ANR	2469243	UnaryOperationExpression	"! ( hint = r_anal_hint_get ( anal , addr ) )"		2468109	0					
ANR	2469244	UnaryOperator	!		2468109	0					
ANR	2469245	AssignmentExpression	"hint = r_anal_hint_get ( anal , addr )"		2468109	1		=			
ANR	2469246	Identifier	hint		2468109	0					
ANR	2469247	CallExpression	"r_anal_hint_get ( anal , addr )"		2468109	1					
ANR	2469248	Callee	r_anal_hint_get		2468109	0					
ANR	2469249	Identifier	r_anal_hint_get		2468109	0					
ANR	2469250	ArgumentList	anal		2468109	1					
ANR	2469251	Argument	anal		2468109	0					
ANR	2469252	Identifier	anal		2468109	0					
ANR	2469253	Argument	addr		2468109	1					
ANR	2469254	Identifier	addr		2468109	0					
ANR	2469255	CompoundStatement		161:49:5102:5102	2468109	1					
ANR	2469256	ExpressionStatement	op -> eob = true	237:6:7311:7325	2468109	0	True				
ANR	2469257	AssignmentExpression	op -> eob = true		2468109	0		=			
ANR	2469258	PtrMemberAccess	op -> eob		2468109	0					
ANR	2469259	Identifier	op		2468109	0					
ANR	2469260	Identifier	eob		2468109	1					
ANR	2469261	Identifier	true		2468109	1					
ANR	2469262	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_RET	238:6:7333:7362	2468109	1	True				
ANR	2469263	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_RET		2468109	0		=			
ANR	2469264	PtrMemberAccess	op -> type		2468109	0					
ANR	2469265	Identifier	op		2468109	0					
ANR	2469266	Identifier	type		2468109	1					
ANR	2469267	Identifier	R_ANAL_OP_TYPE_RET		2468109	1					
ANR	2469268	BreakStatement	break ;	242:3:7385:7390	2468109	22	True				
ANR	2469269	Label	case WASM_OP_I32REMS :	243:2:7394:7414	2468109	23	True				
ANR	2469270	Identifier	WASM_OP_I32REMS		2468109	0					
ANR	2469271	Label	case WASM_OP_I32REMU :	244:2:7418:7438	2468109	24	True				
ANR	2469272	Identifier	WASM_OP_I32REMU		2468109	0					
ANR	2469273	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_MOD	245:3:7443:7472	2468109	25	True				
ANR	2469274	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_MOD		2468109	0		=			
ANR	2469275	PtrMemberAccess	op -> type		2468109	0					
ANR	2469276	Identifier	op		2468109	0					
ANR	2469277	Identifier	type		2468109	1					
ANR	2469278	Identifier	R_ANAL_OP_TYPE_MOD		2468109	1					
ANR	2469279	BreakStatement	break ;	246:3:7477:7482	2468109	26	True				
ANR	2469280	Label	case WASM_OP_GETLOCAL :	247:2:7486:7507	2468109	27	True				
ANR	2469281	Identifier	WASM_OP_GETLOCAL		2468109	0					
ANR	2469282	Label	case WASM_OP_I32LOAD :	248:2:7511:7531	2468109	28	True				
ANR	2469283	Identifier	WASM_OP_I32LOAD		2468109	0					
ANR	2469284	Label	case WASM_OP_I64LOAD :	249:2:7535:7555	2468109	29	True				
ANR	2469285	Identifier	WASM_OP_I64LOAD		2468109	0					
ANR	2469286	Label	case WASM_OP_F32LOAD :	250:2:7559:7579	2468109	30	True				
ANR	2469287	Identifier	WASM_OP_F32LOAD		2468109	0					
ANR	2469288	Label	case WASM_OP_F64LOAD :	251:2:7583:7603	2468109	31	True				
ANR	2469289	Identifier	WASM_OP_F64LOAD		2468109	0					
ANR	2469290	Label	case WASM_OP_I32LOAD8S :	252:2:7607:7629	2468109	32	True				
ANR	2469291	Identifier	WASM_OP_I32LOAD8S		2468109	0					
ANR	2469292	Label	case WASM_OP_I32LOAD8U :	253:2:7633:7655	2468109	33	True				
ANR	2469293	Identifier	WASM_OP_I32LOAD8U		2468109	0					
ANR	2469294	Label	case WASM_OP_I32LOAD16S :	254:2:7659:7682	2468109	34	True				
ANR	2469295	Identifier	WASM_OP_I32LOAD16S		2468109	0					
ANR	2469296	Label	case WASM_OP_I32LOAD16U :	255:2:7686:7709	2468109	35	True				
ANR	2469297	Identifier	WASM_OP_I32LOAD16U		2468109	0					
ANR	2469298	Label	case WASM_OP_I64LOAD8S :	256:2:7713:7735	2468109	36	True				
ANR	2469299	Identifier	WASM_OP_I64LOAD8S		2468109	0					
ANR	2469300	Label	case WASM_OP_I64LOAD8U :	257:2:7739:7761	2468109	37	True				
ANR	2469301	Identifier	WASM_OP_I64LOAD8U		2468109	0					
ANR	2469302	Label	case WASM_OP_I64LOAD16S :	258:2:7765:7788	2468109	38	True				
ANR	2469303	Identifier	WASM_OP_I64LOAD16S		2468109	0					
ANR	2469304	Label	case WASM_OP_I64LOAD16U :	259:2:7792:7815	2468109	39	True				
ANR	2469305	Identifier	WASM_OP_I64LOAD16U		2468109	0					
ANR	2469306	Label	case WASM_OP_I64LOAD32S :	260:2:7819:7842	2468109	40	True				
ANR	2469307	Identifier	WASM_OP_I64LOAD32S		2468109	0					
ANR	2469308	Label	case WASM_OP_I64LOAD32U :	261:2:7846:7869	2468109	41	True				
ANR	2469309	Identifier	WASM_OP_I64LOAD32U		2468109	0					
ANR	2469310	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_LOAD	262:3:7874:7904	2468109	42	True				
ANR	2469311	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_LOAD		2468109	0		=			
ANR	2469312	PtrMemberAccess	op -> type		2468109	0					
ANR	2469313	Identifier	op		2468109	0					
ANR	2469314	Identifier	type		2468109	1					
ANR	2469315	Identifier	R_ANAL_OP_TYPE_LOAD		2468109	1					
ANR	2469316	BreakStatement	break ;	263:3:7909:7914	2468109	43	True				
ANR	2469317	Label	case WASM_OP_SETLOCAL :	264:2:7918:7939	2468109	44	True				
ANR	2469318	Identifier	WASM_OP_SETLOCAL		2468109	0					
ANR	2469319	Label	case WASM_OP_TEELOCAL :	265:2:7943:7964	2468109	45	True				
ANR	2469320	Identifier	WASM_OP_TEELOCAL		2468109	0					
ANR	2469321	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_STORE	266:3:7969:8000	2468109	46	True				
ANR	2469322	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_STORE		2468109	0		=			
ANR	2469323	PtrMemberAccess	op -> type		2468109	0					
ANR	2469324	Identifier	op		2468109	0					
ANR	2469325	Identifier	type		2468109	1					
ANR	2469326	Identifier	R_ANAL_OP_TYPE_STORE		2468109	1					
ANR	2469327	BreakStatement	break ;	267:3:8005:8010	2468109	47	True				
ANR	2469328	Label	case WASM_OP_I32EQZ :	268:2:8014:8033	2468109	48	True				
ANR	2469329	Identifier	WASM_OP_I32EQZ		2468109	0					
ANR	2469330	Label	case WASM_OP_I32EQ :	269:2:8037:8055	2468109	49	True				
ANR	2469331	Identifier	WASM_OP_I32EQ		2468109	0					
ANR	2469332	Label	case WASM_OP_I32NE :	270:2:8059:8077	2468109	50	True				
ANR	2469333	Identifier	WASM_OP_I32NE		2468109	0					
ANR	2469334	Label	case WASM_OP_I32LTS :	271:2:8081:8100	2468109	51	True				
ANR	2469335	Identifier	WASM_OP_I32LTS		2468109	0					
ANR	2469336	Label	case WASM_OP_I32LTU :	272:2:8104:8123	2468109	52	True				
ANR	2469337	Identifier	WASM_OP_I32LTU		2468109	0					
ANR	2469338	Label	case WASM_OP_I32GTS :	273:2:8127:8146	2468109	53	True				
ANR	2469339	Identifier	WASM_OP_I32GTS		2468109	0					
ANR	2469340	Label	case WASM_OP_I32GTU :	274:2:8150:8169	2468109	54	True				
ANR	2469341	Identifier	WASM_OP_I32GTU		2468109	0					
ANR	2469342	Label	case WASM_OP_I32LES :	275:2:8173:8192	2468109	55	True				
ANR	2469343	Identifier	WASM_OP_I32LES		2468109	0					
ANR	2469344	Label	case WASM_OP_I32LEU :	276:2:8196:8215	2468109	56	True				
ANR	2469345	Identifier	WASM_OP_I32LEU		2468109	0					
ANR	2469346	Label	case WASM_OP_I32GES :	277:2:8219:8238	2468109	57	True				
ANR	2469347	Identifier	WASM_OP_I32GES		2468109	0					
ANR	2469348	Label	case WASM_OP_I32GEU :	278:2:8242:8261	2468109	58	True				
ANR	2469349	Identifier	WASM_OP_I32GEU		2468109	0					
ANR	2469350	Label	case WASM_OP_I64EQZ :	279:2:8265:8284	2468109	59	True				
ANR	2469351	Identifier	WASM_OP_I64EQZ		2468109	0					
ANR	2469352	Label	case WASM_OP_I64EQ :	280:2:8288:8306	2468109	60	True				
ANR	2469353	Identifier	WASM_OP_I64EQ		2468109	0					
ANR	2469354	Label	case WASM_OP_I64NE :	281:2:8310:8328	2468109	61	True				
ANR	2469355	Identifier	WASM_OP_I64NE		2468109	0					
ANR	2469356	Label	case WASM_OP_I64LTS :	282:2:8332:8351	2468109	62	True				
ANR	2469357	Identifier	WASM_OP_I64LTS		2468109	0					
ANR	2469358	Label	case WASM_OP_I64LTU :	283:2:8355:8374	2468109	63	True				
ANR	2469359	Identifier	WASM_OP_I64LTU		2468109	0					
ANR	2469360	Label	case WASM_OP_I64GTS :	284:2:8378:8397	2468109	64	True				
ANR	2469361	Identifier	WASM_OP_I64GTS		2468109	0					
ANR	2469362	Label	case WASM_OP_I64GTU :	285:2:8401:8420	2468109	65	True				
ANR	2469363	Identifier	WASM_OP_I64GTU		2468109	0					
ANR	2469364	Label	case WASM_OP_I64LES :	286:2:8424:8443	2468109	66	True				
ANR	2469365	Identifier	WASM_OP_I64LES		2468109	0					
ANR	2469366	Label	case WASM_OP_I64LEU :	287:2:8447:8466	2468109	67	True				
ANR	2469367	Identifier	WASM_OP_I64LEU		2468109	0					
ANR	2469368	Label	case WASM_OP_I64GES :	288:2:8470:8489	2468109	68	True				
ANR	2469369	Identifier	WASM_OP_I64GES		2468109	0					
ANR	2469370	Label	case WASM_OP_I64GEU :	289:2:8493:8512	2468109	69	True				
ANR	2469371	Identifier	WASM_OP_I64GEU		2468109	0					
ANR	2469372	Label	case WASM_OP_F32EQ :	290:2:8516:8534	2468109	70	True				
ANR	2469373	Identifier	WASM_OP_F32EQ		2468109	0					
ANR	2469374	Label	case WASM_OP_F32NE :	291:2:8538:8556	2468109	71	True				
ANR	2469375	Identifier	WASM_OP_F32NE		2468109	0					
ANR	2469376	Label	case WASM_OP_F32LT :	292:2:8560:8578	2468109	72	True				
ANR	2469377	Identifier	WASM_OP_F32LT		2468109	0					
ANR	2469378	Label	case WASM_OP_F32GT :	293:2:8582:8600	2468109	73	True				
ANR	2469379	Identifier	WASM_OP_F32GT		2468109	0					
ANR	2469380	Label	case WASM_OP_F32LE :	294:2:8604:8622	2468109	74	True				
ANR	2469381	Identifier	WASM_OP_F32LE		2468109	0					
ANR	2469382	Label	case WASM_OP_F32GE :	295:2:8626:8644	2468109	75	True				
ANR	2469383	Identifier	WASM_OP_F32GE		2468109	0					
ANR	2469384	Label	case WASM_OP_F64EQ :	296:2:8648:8666	2468109	76	True				
ANR	2469385	Identifier	WASM_OP_F64EQ		2468109	0					
ANR	2469386	Label	case WASM_OP_F64NE :	297:2:8670:8688	2468109	77	True				
ANR	2469387	Identifier	WASM_OP_F64NE		2468109	0					
ANR	2469388	Label	case WASM_OP_F64LT :	298:2:8692:8710	2468109	78	True				
ANR	2469389	Identifier	WASM_OP_F64LT		2468109	0					
ANR	2469390	Label	case WASM_OP_F64GT :	299:2:8714:8732	2468109	79	True				
ANR	2469391	Identifier	WASM_OP_F64GT		2468109	0					
ANR	2469392	Label	case WASM_OP_F64LE :	300:2:8736:8754	2468109	80	True				
ANR	2469393	Identifier	WASM_OP_F64LE		2468109	0					
ANR	2469394	Label	case WASM_OP_F64GE :	301:2:8758:8776	2468109	81	True				
ANR	2469395	Identifier	WASM_OP_F64GE		2468109	0					
ANR	2469396	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_CMP	302:3:8781:8810	2468109	82	True				
ANR	2469397	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_CMP		2468109	0		=			
ANR	2469398	PtrMemberAccess	op -> type		2468109	0					
ANR	2469399	Identifier	op		2468109	0					
ANR	2469400	Identifier	type		2468109	1					
ANR	2469401	Identifier	R_ANAL_OP_TYPE_CMP		2468109	1					
ANR	2469402	BreakStatement	break ;	303:3:8815:8820	2468109	83	True				
ANR	2469403	Label	case WASM_OP_I64OR :	304:2:8824:8842	2468109	84	True				
ANR	2469404	Identifier	WASM_OP_I64OR		2468109	0					
ANR	2469405	Label	case WASM_OP_I32OR :	305:2:8846:8864	2468109	85	True				
ANR	2469406	Identifier	WASM_OP_I32OR		2468109	0					
ANR	2469407	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_OR	306:3:8869:8897	2468109	86	True				
ANR	2469408	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_OR		2468109	0		=			
ANR	2469409	PtrMemberAccess	op -> type		2468109	0					
ANR	2469410	Identifier	op		2468109	0					
ANR	2469411	Identifier	type		2468109	1					
ANR	2469412	Identifier	R_ANAL_OP_TYPE_OR		2468109	1					
ANR	2469413	BreakStatement	break ;	307:3:8902:8907	2468109	87	True				
ANR	2469414	Label	case WASM_OP_I64XOR :	308:2:8911:8930	2468109	88	True				
ANR	2469415	Identifier	WASM_OP_I64XOR		2468109	0					
ANR	2469416	Label	case WASM_OP_I32XOR :	309:2:8934:8953	2468109	89	True				
ANR	2469417	Identifier	WASM_OP_I32XOR		2468109	0					
ANR	2469418	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_XOR	310:3:8958:8987	2468109	90	True				
ANR	2469419	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_XOR		2468109	0		=			
ANR	2469420	PtrMemberAccess	op -> type		2468109	0					
ANR	2469421	Identifier	op		2468109	0					
ANR	2469422	Identifier	type		2468109	1					
ANR	2469423	Identifier	R_ANAL_OP_TYPE_XOR		2468109	1					
ANR	2469424	BreakStatement	break ;	311:3:8992:8997	2468109	91	True				
ANR	2469425	Label	case WASM_OP_I32CONST :	312:2:9001:9022	2468109	92	True				
ANR	2469426	Identifier	WASM_OP_I32CONST		2468109	0					
ANR	2469427	Label	case WASM_OP_I64CONST :	313:2:9026:9047	2468109	93	True				
ANR	2469428	Identifier	WASM_OP_I64CONST		2468109	0					
ANR	2469429	Label	case WASM_OP_F32CONST :	314:2:9051:9072	2468109	94	True				
ANR	2469430	Identifier	WASM_OP_F32CONST		2468109	0					
ANR	2469431	Label	case WASM_OP_F64CONST :	315:2:9076:9097	2468109	95	True				
ANR	2469432	Identifier	WASM_OP_F64CONST		2468109	0					
ANR	2469433	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_MOV	316:3:9102:9131	2468109	96	True				
ANR	2469434	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_MOV		2468109	0		=			
ANR	2469435	PtrMemberAccess	op -> type		2468109	0					
ANR	2469436	Identifier	op		2468109	0					
ANR	2469437	Identifier	type		2468109	1					
ANR	2469438	Identifier	R_ANAL_OP_TYPE_MOV		2468109	1					
ANR	2469439	CompoundStatement		244:4:6986:7003	2468109	97					
ANR	2469440	IdentifierDeclStatement	ut8 arg = data [ 1 ] ;	318:4:9142:9159	2468109	0	True				
ANR	2469441	IdentifierDecl	arg = data [ 1 ]		2468109	0					
ANR	2469442	IdentifierDeclType	ut8		2468109	0					
ANR	2469443	Identifier	arg		2468109	1					
ANR	2469444	AssignmentExpression	arg = data [ 1 ]		2468109	2		=			
ANR	2469445	Identifier	arg		2468109	0					
ANR	2469446	ArrayIndexing	data [ 1 ]		2468109	1					
ANR	2469447	Identifier	data		2468109	0					
ANR	2469448	PrimaryExpression	1		2468109	1					
ANR	2469449	ExpressionStatement	"r_strbuf_setf ( & op -> esil , ""4,sp,-=,%d,sp,=[4]"" , arg )"	319:4:9165:9217	2468109	1	True				
ANR	2469450	CallExpression	"r_strbuf_setf ( & op -> esil , ""4,sp,-=,%d,sp,=[4]"" , arg )"		2468109	0					
ANR	2469451	Callee	r_strbuf_setf		2468109	0					
ANR	2469452	Identifier	r_strbuf_setf		2468109	0					
ANR	2469453	ArgumentList	& op -> esil		2468109	1					
ANR	2469454	Argument	& op -> esil		2468109	0					
ANR	2469455	UnaryOperationExpression	& op -> esil		2468109	0					
ANR	2469456	UnaryOperator	&		2468109	0					
ANR	2469457	PtrMemberAccess	op -> esil		2468109	1					
ANR	2469458	Identifier	op		2468109	0					
ANR	2469459	Identifier	esil		2468109	1					
ANR	2469460	Argument	"""4,sp,-=,%d,sp,=[4]"""		2468109	1					
ANR	2469461	PrimaryExpression	"""4,sp,-=,%d,sp,=[4]"""		2468109	0					
ANR	2469462	Argument	arg		2468109	2					
ANR	2469463	Identifier	arg		2468109	0					
ANR	2469464	BreakStatement	break ;	321:3:9227:9232	2468109	98	True				
ANR	2469465	Label	case WASM_OP_I64ADD :	322:2:9236:9255	2468109	99	True				
ANR	2469466	Identifier	WASM_OP_I64ADD		2468109	0					
ANR	2469467	Label	case WASM_OP_I32ADD :	323:2:9259:9278	2468109	100	True				
ANR	2469468	Identifier	WASM_OP_I32ADD		2468109	0					
ANR	2469469	Label	case WASM_OP_F32ADD :	324:2:9282:9301	2468109	101	True				
ANR	2469470	Identifier	WASM_OP_F32ADD		2468109	0					
ANR	2469471	Label	case WASM_OP_F64ADD :	325:2:9305:9324	2468109	102	True				
ANR	2469472	Identifier	WASM_OP_F64ADD		2468109	0					
ANR	2469473	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_ADD	326:3:9329:9358	2468109	103	True				
ANR	2469474	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_ADD		2468109	0		=			
ANR	2469475	PtrMemberAccess	op -> type		2468109	0					
ANR	2469476	Identifier	op		2468109	0					
ANR	2469477	Identifier	type		2468109	1					
ANR	2469478	Identifier	R_ANAL_OP_TYPE_ADD		2468109	1					
ANR	2469479	BreakStatement	break ;	327:3:9363:9368	2468109	104	True				
ANR	2469480	Label	case WASM_OP_I64SUB :	328:2:9372:9391	2468109	105	True				
ANR	2469481	Identifier	WASM_OP_I64SUB		2468109	0					
ANR	2469482	Label	case WASM_OP_I32SUB :	329:2:9395:9414	2468109	106	True				
ANR	2469483	Identifier	WASM_OP_I32SUB		2468109	0					
ANR	2469484	Label	case WASM_OP_F32SUB :	330:2:9418:9437	2468109	107	True				
ANR	2469485	Identifier	WASM_OP_F32SUB		2468109	0					
ANR	2469486	Label	case WASM_OP_F64SUB :	331:2:9441:9460	2468109	108	True				
ANR	2469487	Identifier	WASM_OP_F64SUB		2468109	0					
ANR	2469488	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_SUB	332:3:9465:9494	2468109	109	True				
ANR	2469489	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_SUB		2468109	0		=			
ANR	2469490	PtrMemberAccess	op -> type		2468109	0					
ANR	2469491	Identifier	op		2468109	0					
ANR	2469492	Identifier	type		2468109	1					
ANR	2469493	Identifier	R_ANAL_OP_TYPE_SUB		2468109	1					
ANR	2469494	BreakStatement	break ;	333:3:9499:9504	2468109	110	True				
ANR	2469495	Label	case WASM_OP_NOP :	334:2:9508:9524	2468109	111	True				
ANR	2469496	Identifier	WASM_OP_NOP		2468109	0					
ANR	2469497	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_NOP	335:3:9529:9558	2468109	112	True				
ANR	2469498	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_NOP		2468109	0		=			
ANR	2469499	PtrMemberAccess	op -> type		2468109	0					
ANR	2469500	Identifier	op		2468109	0					
ANR	2469501	Identifier	type		2468109	1					
ANR	2469502	Identifier	R_ANAL_OP_TYPE_NOP		2468109	1					
ANR	2469503	ExpressionStatement	"r_strbuf_setf ( & op -> esil , """" )"	336:3:9563:9592	2468109	113	True				
ANR	2469504	CallExpression	"r_strbuf_setf ( & op -> esil , """" )"		2468109	0					
ANR	2469505	Callee	r_strbuf_setf		2468109	0					
ANR	2469506	Identifier	r_strbuf_setf		2468109	0					
ANR	2469507	ArgumentList	& op -> esil		2468109	1					
ANR	2469508	Argument	& op -> esil		2468109	0					
ANR	2469509	UnaryOperationExpression	& op -> esil		2468109	0					
ANR	2469510	UnaryOperator	&		2468109	0					
ANR	2469511	PtrMemberAccess	op -> esil		2468109	1					
ANR	2469512	Identifier	op		2468109	0					
ANR	2469513	Identifier	esil		2468109	1					
ANR	2469514	Argument	""""""		2468109	1					
ANR	2469515	PrimaryExpression	""""""		2468109	0					
ANR	2469516	BreakStatement	break ;	337:3:9597:9602	2468109	114	True				
ANR	2469517	Label	case WASM_OP_CALL :	338:2:9606:9623	2468109	115	True				
ANR	2469518	Identifier	WASM_OP_CALL		2468109	0					
ANR	2469519	Label	case WASM_OP_CALLINDIRECT :	339:2:9627:9652	2468109	116	True				
ANR	2469520	Identifier	WASM_OP_CALLINDIRECT		2468109	0					
ANR	2469521	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_CALL	340:3:9657:9687	2468109	117	True				
ANR	2469522	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_CALL		2468109	0		=			
ANR	2469523	PtrMemberAccess	op -> type		2468109	0					
ANR	2469524	Identifier	op		2468109	0					
ANR	2469525	Identifier	type		2468109	1					
ANR	2469526	Identifier	R_ANAL_OP_TYPE_CALL		2468109	1					
ANR	2469527	ExpressionStatement	"op -> jump = get_cf_offset ( anal , data , len )"	341:3:9692:9734	2468109	118	True				
ANR	2469528	AssignmentExpression	"op -> jump = get_cf_offset ( anal , data , len )"		2468109	0		=			
ANR	2469529	PtrMemberAccess	op -> jump		2468109	0					
ANR	2469530	Identifier	op		2468109	0					
ANR	2469531	Identifier	jump		2468109	1					
ANR	2469532	CallExpression	"get_cf_offset ( anal , data , len )"		2468109	1					
ANR	2469533	Callee	get_cf_offset		2468109	0					
ANR	2469534	Identifier	get_cf_offset		2468109	0					
ANR	2469535	ArgumentList	anal		2468109	1					
ANR	2469536	Argument	anal		2468109	0					
ANR	2469537	Identifier	anal		2468109	0					
ANR	2469538	Argument	data		2468109	1					
ANR	2469539	Identifier	data		2468109	0					
ANR	2469540	Argument	len		2468109	2					
ANR	2469541	Identifier	len		2468109	0					
ANR	2469542	ExpressionStatement	op -> fail = addr + op -> size	342:3:9739:9765	2468109	119	True				
ANR	2469543	AssignmentExpression	op -> fail = addr + op -> size		2468109	0		=			
ANR	2469544	PtrMemberAccess	op -> fail		2468109	0					
ANR	2469545	Identifier	op		2468109	0					
ANR	2469546	Identifier	fail		2468109	1					
ANR	2469547	AdditiveExpression	addr + op -> size		2468109	1		+			
ANR	2469548	Identifier	addr		2468109	0					
ANR	2469549	PtrMemberAccess	op -> size		2468109	1					
ANR	2469550	Identifier	op		2468109	0					
ANR	2469551	Identifier	size		2468109	1					
ANR	2469552	IfStatement	if ( op -> jump != UT64_MAX )		2468109	120					
ANR	2469553	Condition	op -> jump != UT64_MAX	343:7:9774:9793	2468109	0	True				
ANR	2469554	EqualityExpression	op -> jump != UT64_MAX		2468109	0		!=			
ANR	2469555	PtrMemberAccess	op -> jump		2468109	0					
ANR	2469556	Identifier	op		2468109	0					
ANR	2469557	Identifier	jump		2468109	1					
ANR	2469558	Identifier	UT64_MAX		2468109	1					
ANR	2469559	CompoundStatement		269:29:7640:7640	2468109	1					
ANR	2469560	ExpressionStatement	op -> ptr = op -> jump	344:4:9802:9820	2468109	0	True				
ANR	2469561	AssignmentExpression	op -> ptr = op -> jump		2468109	0		=			
ANR	2469562	PtrMemberAccess	op -> ptr		2468109	0					
ANR	2469563	Identifier	op		2468109	0					
ANR	2469564	Identifier	ptr		2468109	1					
ANR	2469565	PtrMemberAccess	op -> jump		2468109	1					
ANR	2469566	Identifier	op		2468109	0					
ANR	2469567	Identifier	jump		2468109	1					
ANR	2469568	Statement	r_strbuf_setf	346:3:9830:9842	2468109	121	True				
ANR	2469569	Statement	(	346:17:9844:9844	2468109	122	True				
ANR	2469570	Statement	&	346:18:9845:9845	2468109	123	True				
ANR	2469571	Statement	op	346:19:9846:9847	2468109	124	True				
ANR	2469572	Statement	->	346:21:9848:9849	2468109	125	True				
ANR	2469573	Statement	esil	346:23:9850:9853	2468109	126	True				
ANR	2469574	Statement	","	346:27:9854:9854	2468109	127	True				
ANR	2469575	Statement	"""4,sp,-=,0x%"""	346:29:9856:9868	2468109	128	True				
ANR	2469576	Statement	PFMT64x	346:42:9869:9875	2468109	129	True				
ANR	2469577	Statement	""",sp,=[4],0x%"""	346:49:9876:9889	2468109	130	True				
ANR	2469578	Statement	PFMT64x	346:63:9890:9896	2468109	131	True				
ANR	2469579	Statement	""",pc,="""	346:70:9897:9903	2468109	132	True				
ANR	2469580	Statement	","	346:77:9904:9904	2468109	133	True				
ANR	2469581	Statement	op	346:79:9906:9907	2468109	134	True				
ANR	2469582	Statement	->	346:81:9908:9909	2468109	135	True				
ANR	2469583	Statement	fail	346:83:9910:9913	2468109	136	True				
ANR	2469584	Statement	","	346:87:9914:9914	2468109	137	True				
ANR	2469585	Statement	op	346:89:9916:9917	2468109	138	True				
ANR	2469586	Statement	->	346:91:9918:9919	2468109	139	True				
ANR	2469587	Statement	jump	346:93:9920:9923	2468109	140	True				
ANR	2469588	Statement	)	346:97:9924:9924	2468109	141	True				
ANR	2469589	ExpressionStatement		346:98:9925:9925	2468109	142	True				
ANR	2469590	BreakStatement	break ;	347:3:9930:9935	2468109	143	True				
ANR	2469591	Label	case WASM_OP_RETURN :	348:2:9939:9958	2468109	144	True				
ANR	2469592	Identifier	WASM_OP_RETURN		2468109	0					
ANR	2469593	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_CRET	350:3:10022:10052	2468109	145	True				
ANR	2469594	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_CRET		2468109	0		=			
ANR	2469595	PtrMemberAccess	op -> type		2468109	0					
ANR	2469596	Identifier	op		2468109	0					
ANR	2469597	Identifier	type		2468109	1					
ANR	2469598	Identifier	R_ANAL_OP_TYPE_CRET		2468109	1					
ANR	2469599	Label	default :	351:2:10056:10063	2468109	146	True				
ANR	2469600	Identifier	default		2468109	0					
ANR	2469601	BreakStatement	break ;	352:3:10068:10073	2468109	147	True				
ANR	2469602	BreakStatement	break ;	354:2:10081:10086	2468109	2	True				
ANR	2469603	Label	case WASM_TYPE_OP_ATOMIC :	355:1:10089:10113	2468109	3	True				
ANR	2469604	Identifier	WASM_TYPE_OP_ATOMIC		2468109	0					
ANR	2469605	SwitchStatement	switch ( wop . op . atomic )		2468109	4					
ANR	2469606	Condition	wop . op . atomic	356:10:10125:10137	2468109	0	True				
ANR	2469607	MemberAccess	wop . op . atomic		2468109	0					
ANR	2469608	MemberAccess	wop . op		2468109	0					
ANR	2469609	Identifier	wop		2468109	0					
ANR	2469610	Identifier	op		2468109	1					
ANR	2469611	Identifier	atomic		2468109	1					
ANR	2469612	CompoundStatement		282:25:7984:7984	2468109	1					
ANR	2469613	Label	case WASM_OP_I32ATOMICLOAD :	357:2:10144:10170	2468109	0	True				
ANR	2469614	Identifier	WASM_OP_I32ATOMICLOAD		2468109	0					
ANR	2469615	Label	case WASM_OP_I64ATOMICLOAD :	358:2:10174:10200	2468109	1	True				
ANR	2469616	Identifier	WASM_OP_I64ATOMICLOAD		2468109	0					
ANR	2469617	Label	case WASM_OP_I32ATOMICLOAD8U :	359:2:10204:10232	2468109	2	True				
ANR	2469618	Identifier	WASM_OP_I32ATOMICLOAD8U		2468109	0					
ANR	2469619	Label	case WASM_OP_I32ATOMICLOAD16U :	360:2:10236:10265	2468109	3	True				
ANR	2469620	Identifier	WASM_OP_I32ATOMICLOAD16U		2468109	0					
ANR	2469621	Label	case WASM_OP_I64ATOMICLOAD8U :	361:2:10269:10297	2468109	4	True				
ANR	2469622	Identifier	WASM_OP_I64ATOMICLOAD8U		2468109	0					
ANR	2469623	Label	case WASM_OP_I64ATOMICLOAD16U :	362:2:10301:10330	2468109	5	True				
ANR	2469624	Identifier	WASM_OP_I64ATOMICLOAD16U		2468109	0					
ANR	2469625	Label	case WASM_OP_I64ATOMICLOAD32U :	363:2:10334:10363	2468109	6	True				
ANR	2469626	Identifier	WASM_OP_I64ATOMICLOAD32U		2468109	0					
ANR	2469627	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_LOAD	364:3:10368:10398	2468109	7	True				
ANR	2469628	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_LOAD		2468109	0		=			
ANR	2469629	PtrMemberAccess	op -> type		2468109	0					
ANR	2469630	Identifier	op		2468109	0					
ANR	2469631	Identifier	type		2468109	1					
ANR	2469632	Identifier	R_ANAL_OP_TYPE_LOAD		2468109	1					
ANR	2469633	BreakStatement	break ;	365:3:10403:10408	2468109	8	True				
ANR	2469634	Label	case WASM_OP_I32ATOMICSTORE :	366:2:10412:10439	2468109	9	True				
ANR	2469635	Identifier	WASM_OP_I32ATOMICSTORE		2468109	0					
ANR	2469636	Label	case WASM_OP_I64ATOMICSTORE :	367:2:10443:10470	2468109	10	True				
ANR	2469637	Identifier	WASM_OP_I64ATOMICSTORE		2468109	0					
ANR	2469638	Label	case WASM_OP_I32ATOMICSTORE8 :	368:2:10474:10502	2468109	11	True				
ANR	2469639	Identifier	WASM_OP_I32ATOMICSTORE8		2468109	0					
ANR	2469640	Label	case WASM_OP_I32ATOMICSTORE16 :	369:2:10506:10535	2468109	12	True				
ANR	2469641	Identifier	WASM_OP_I32ATOMICSTORE16		2468109	0					
ANR	2469642	Label	case WASM_OP_I64ATOMICSTORE8 :	370:2:10539:10567	2468109	13	True				
ANR	2469643	Identifier	WASM_OP_I64ATOMICSTORE8		2468109	0					
ANR	2469644	Label	case WASM_OP_I64ATOMICSTORE16 :	371:2:10571:10600	2468109	14	True				
ANR	2469645	Identifier	WASM_OP_I64ATOMICSTORE16		2468109	0					
ANR	2469646	Label	case WASM_OP_I64ATOMICSTORE32 :	372:2:10604:10633	2468109	15	True				
ANR	2469647	Identifier	WASM_OP_I64ATOMICSTORE32		2468109	0					
ANR	2469648	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_STORE	373:3:10638:10669	2468109	16	True				
ANR	2469649	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_STORE		2468109	0		=			
ANR	2469650	PtrMemberAccess	op -> type		2468109	0					
ANR	2469651	Identifier	op		2468109	0					
ANR	2469652	Identifier	type		2468109	1					
ANR	2469653	Identifier	R_ANAL_OP_TYPE_STORE		2468109	1					
ANR	2469654	BreakStatement	break ;	374:3:10674:10679	2468109	17	True				
ANR	2469655	Label	case WASM_OP_I32ATOMICRMWADD :	375:2:10683:10711	2468109	18	True				
ANR	2469656	Identifier	WASM_OP_I32ATOMICRMWADD		2468109	0					
ANR	2469657	Label	case WASM_OP_I64ATOMICRMWADD :	376:2:10715:10743	2468109	19	True				
ANR	2469658	Identifier	WASM_OP_I64ATOMICRMWADD		2468109	0					
ANR	2469659	Label	case WASM_OP_I32ATOMICRMW8UADD :	377:2:10747:10777	2468109	20	True				
ANR	2469660	Identifier	WASM_OP_I32ATOMICRMW8UADD		2468109	0					
ANR	2469661	Label	case WASM_OP_I32ATOMICRMW16UADD :	378:2:10781:10812	2468109	21	True				
ANR	2469662	Identifier	WASM_OP_I32ATOMICRMW16UADD		2468109	0					
ANR	2469663	Label	case WASM_OP_I64ATOMICRMW8UADD :	379:2:10816:10846	2468109	22	True				
ANR	2469664	Identifier	WASM_OP_I64ATOMICRMW8UADD		2468109	0					
ANR	2469665	Label	case WASM_OP_I64ATOMICRMW16UADD :	380:2:10850:10881	2468109	23	True				
ANR	2469666	Identifier	WASM_OP_I64ATOMICRMW16UADD		2468109	0					
ANR	2469667	Label	case WASM_OP_I64ATOMICRMW32UADD :	381:2:10885:10916	2468109	24	True				
ANR	2469668	Identifier	WASM_OP_I64ATOMICRMW32UADD		2468109	0					
ANR	2469669	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_ADD	382:3:10921:10950	2468109	25	True				
ANR	2469670	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_ADD		2468109	0		=			
ANR	2469671	PtrMemberAccess	op -> type		2468109	0					
ANR	2469672	Identifier	op		2468109	0					
ANR	2469673	Identifier	type		2468109	1					
ANR	2469674	Identifier	R_ANAL_OP_TYPE_ADD		2468109	1					
ANR	2469675	BreakStatement	break ;	383:3:10955:10960	2468109	26	True				
ANR	2469676	Label	case WASM_OP_I32ATOMICRMW8USUB :	384:2:10964:10994	2468109	27	True				
ANR	2469677	Identifier	WASM_OP_I32ATOMICRMW8USUB		2468109	0					
ANR	2469678	Label	case WASM_OP_I32ATOMICRMW16USUB :	385:2:10998:11029	2468109	28	True				
ANR	2469679	Identifier	WASM_OP_I32ATOMICRMW16USUB		2468109	0					
ANR	2469680	Label	case WASM_OP_I32ATOMICRMWSUB :	386:2:11033:11061	2468109	29	True				
ANR	2469681	Identifier	WASM_OP_I32ATOMICRMWSUB		2468109	0					
ANR	2469682	Label	case WASM_OP_I64ATOMICRMW8USUB :	387:2:11065:11095	2468109	30	True				
ANR	2469683	Identifier	WASM_OP_I64ATOMICRMW8USUB		2468109	0					
ANR	2469684	Label	case WASM_OP_I64ATOMICRMW16USUB :	388:2:11099:11130	2468109	31	True				
ANR	2469685	Identifier	WASM_OP_I64ATOMICRMW16USUB		2468109	0					
ANR	2469686	Label	case WASM_OP_I64ATOMICRMW32USUB :	389:2:11134:11165	2468109	32	True				
ANR	2469687	Identifier	WASM_OP_I64ATOMICRMW32USUB		2468109	0					
ANR	2469688	Label	case WASM_OP_I64ATOMICRMWSUB :	390:2:11169:11197	2468109	33	True				
ANR	2469689	Identifier	WASM_OP_I64ATOMICRMWSUB		2468109	0					
ANR	2469690	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_SUB	391:3:11202:11231	2468109	34	True				
ANR	2469691	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_SUB		2468109	0		=			
ANR	2469692	PtrMemberAccess	op -> type		2468109	0					
ANR	2469693	Identifier	op		2468109	0					
ANR	2469694	Identifier	type		2468109	1					
ANR	2469695	Identifier	R_ANAL_OP_TYPE_SUB		2468109	1					
ANR	2469696	BreakStatement	break ;	392:3:11236:11241	2468109	35	True				
ANR	2469697	Label	case WASM_OP_I32ATOMICRMWAND :	393:2:11245:11273	2468109	36	True				
ANR	2469698	Identifier	WASM_OP_I32ATOMICRMWAND		2468109	0					
ANR	2469699	Label	case WASM_OP_I64ATOMICRMWAND :	394:2:11277:11305	2468109	37	True				
ANR	2469700	Identifier	WASM_OP_I64ATOMICRMWAND		2468109	0					
ANR	2469701	Label	case WASM_OP_I32ATOMICRMW8UAND :	395:2:11309:11339	2468109	38	True				
ANR	2469702	Identifier	WASM_OP_I32ATOMICRMW8UAND		2468109	0					
ANR	2469703	Label	case WASM_OP_I32ATOMICRMW16UAND :	396:2:11343:11374	2468109	39	True				
ANR	2469704	Identifier	WASM_OP_I32ATOMICRMW16UAND		2468109	0					
ANR	2469705	Label	case WASM_OP_I64ATOMICRMW8UAND :	397:2:11378:11408	2468109	40	True				
ANR	2469706	Identifier	WASM_OP_I64ATOMICRMW8UAND		2468109	0					
ANR	2469707	Label	case WASM_OP_I64ATOMICRMW16UAND :	398:2:11412:11443	2468109	41	True				
ANR	2469708	Identifier	WASM_OP_I64ATOMICRMW16UAND		2468109	0					
ANR	2469709	Label	case WASM_OP_I64ATOMICRMW32UAND :	399:2:11447:11478	2468109	42	True				
ANR	2469710	Identifier	WASM_OP_I64ATOMICRMW32UAND		2468109	0					
ANR	2469711	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_AND	400:3:11483:11512	2468109	43	True				
ANR	2469712	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_AND		2468109	0		=			
ANR	2469713	PtrMemberAccess	op -> type		2468109	0					
ANR	2469714	Identifier	op		2468109	0					
ANR	2469715	Identifier	type		2468109	1					
ANR	2469716	Identifier	R_ANAL_OP_TYPE_AND		2468109	1					
ANR	2469717	BreakStatement	break ;	401:3:11517:11522	2468109	44	True				
ANR	2469718	Label	case WASM_OP_I32ATOMICRMWOR :	402:2:11526:11553	2468109	45	True				
ANR	2469719	Identifier	WASM_OP_I32ATOMICRMWOR		2468109	0					
ANR	2469720	Label	case WASM_OP_I64ATOMICRMWOR :	403:2:11557:11584	2468109	46	True				
ANR	2469721	Identifier	WASM_OP_I64ATOMICRMWOR		2468109	0					
ANR	2469722	Label	case WASM_OP_I32ATOMICRMW8UOR :	404:2:11588:11617	2468109	47	True				
ANR	2469723	Identifier	WASM_OP_I32ATOMICRMW8UOR		2468109	0					
ANR	2469724	Label	case WASM_OP_I32ATOMICRMW16UOR :	405:2:11621:11651	2468109	48	True				
ANR	2469725	Identifier	WASM_OP_I32ATOMICRMW16UOR		2468109	0					
ANR	2469726	Label	case WASM_OP_I64ATOMICRMW8UOR :	406:2:11655:11684	2468109	49	True				
ANR	2469727	Identifier	WASM_OP_I64ATOMICRMW8UOR		2468109	0					
ANR	2469728	Label	case WASM_OP_I64ATOMICRMW16UOR :	407:2:11688:11718	2468109	50	True				
ANR	2469729	Identifier	WASM_OP_I64ATOMICRMW16UOR		2468109	0					
ANR	2469730	Label	case WASM_OP_I64ATOMICRMW32UOR :	408:2:11722:11752	2468109	51	True				
ANR	2469731	Identifier	WASM_OP_I64ATOMICRMW32UOR		2468109	0					
ANR	2469732	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_OR	409:3:11757:11785	2468109	52	True				
ANR	2469733	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_OR		2468109	0		=			
ANR	2469734	PtrMemberAccess	op -> type		2468109	0					
ANR	2469735	Identifier	op		2468109	0					
ANR	2469736	Identifier	type		2468109	1					
ANR	2469737	Identifier	R_ANAL_OP_TYPE_OR		2468109	1					
ANR	2469738	BreakStatement	break ;	410:3:11790:11795	2468109	53	True				
ANR	2469739	Label	case WASM_OP_I32ATOMICRMWXOR :	411:2:11799:11827	2468109	54	True				
ANR	2469740	Identifier	WASM_OP_I32ATOMICRMWXOR		2468109	0					
ANR	2469741	Label	case WASM_OP_I64ATOMICRMWXOR :	412:2:11831:11859	2468109	55	True				
ANR	2469742	Identifier	WASM_OP_I64ATOMICRMWXOR		2468109	0					
ANR	2469743	Label	case WASM_OP_I32ATOMICRMW8UXOR :	413:2:11863:11893	2468109	56	True				
ANR	2469744	Identifier	WASM_OP_I32ATOMICRMW8UXOR		2468109	0					
ANR	2469745	Label	case WASM_OP_I32ATOMICRMW16UXOR :	414:2:11897:11928	2468109	57	True				
ANR	2469746	Identifier	WASM_OP_I32ATOMICRMW16UXOR		2468109	0					
ANR	2469747	Label	case WASM_OP_I64ATOMICRMW8UXOR :	415:2:11932:11962	2468109	58	True				
ANR	2469748	Identifier	WASM_OP_I64ATOMICRMW8UXOR		2468109	0					
ANR	2469749	Label	case WASM_OP_I64ATOMICRMW16UXOR :	416:2:11966:11997	2468109	59	True				
ANR	2469750	Identifier	WASM_OP_I64ATOMICRMW16UXOR		2468109	0					
ANR	2469751	Label	case WASM_OP_I64ATOMICRMW32UXOR :	417:2:12001:12032	2468109	60	True				
ANR	2469752	Identifier	WASM_OP_I64ATOMICRMW32UXOR		2468109	0					
ANR	2469753	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_XOR	418:3:12037:12066	2468109	61	True				
ANR	2469754	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_XOR		2468109	0		=			
ANR	2469755	PtrMemberAccess	op -> type		2468109	0					
ANR	2469756	Identifier	op		2468109	0					
ANR	2469757	Identifier	type		2468109	1					
ANR	2469758	Identifier	R_ANAL_OP_TYPE_XOR		2468109	1					
ANR	2469759	BreakStatement	break ;	419:3:12071:12076	2468109	62	True				
ANR	2469760	Label	case WASM_OP_I32ATOMICRMWXCHG :	420:2:12080:12109	2468109	63	True				
ANR	2469761	Identifier	WASM_OP_I32ATOMICRMWXCHG		2468109	0					
ANR	2469762	Label	case WASM_OP_I64ATOMICRMWXCHG :	421:2:12113:12142	2468109	64	True				
ANR	2469763	Identifier	WASM_OP_I64ATOMICRMWXCHG		2468109	0					
ANR	2469764	Label	case WASM_OP_I32ATOMICRMW8UXCHG :	422:2:12146:12177	2468109	65	True				
ANR	2469765	Identifier	WASM_OP_I32ATOMICRMW8UXCHG		2468109	0					
ANR	2469766	Label	case WASM_OP_I32ATOMICRMW16UXCHG :	423:2:12181:12213	2468109	66	True				
ANR	2469767	Identifier	WASM_OP_I32ATOMICRMW16UXCHG		2468109	0					
ANR	2469768	Label	case WASM_OP_I64ATOMICRMW8UXCHG :	424:2:12217:12248	2468109	67	True				
ANR	2469769	Identifier	WASM_OP_I64ATOMICRMW8UXCHG		2468109	0					
ANR	2469770	Label	case WASM_OP_I64ATOMICRMW16UXCHG :	425:2:12252:12284	2468109	68	True				
ANR	2469771	Identifier	WASM_OP_I64ATOMICRMW16UXCHG		2468109	0					
ANR	2469772	Label	case WASM_OP_I64ATOMICRMW32UXCHG :	426:2:12288:12320	2468109	69	True				
ANR	2469773	Identifier	WASM_OP_I64ATOMICRMW32UXCHG		2468109	0					
ANR	2469774	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_XCHG	427:3:12325:12355	2468109	70	True				
ANR	2469775	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_XCHG		2468109	0		=			
ANR	2469776	PtrMemberAccess	op -> type		2468109	0					
ANR	2469777	Identifier	op		2468109	0					
ANR	2469778	Identifier	type		2468109	1					
ANR	2469779	Identifier	R_ANAL_OP_TYPE_XCHG		2468109	1					
ANR	2469780	BreakStatement	break ;	428:3:12360:12365	2468109	71	True				
ANR	2469781	Label	default :	429:2:12369:12376	2468109	72	True				
ANR	2469782	Identifier	default		2468109	0					
ANR	2469783	BreakStatement	break ;	430:3:12381:12386	2468109	73	True				
ANR	2469784	Label	default :	432:1:12393:12400	2468109	5	True				
ANR	2469785	Identifier	default		2468109	0					
ANR	2469786	BreakStatement	break ;	433:2:12404:12409	2468109	6	True				
ANR	2469787	Label	anal_end :	436:0:12415:12423	2468109	15	True				
ANR	2469788	Identifier	anal_end		2468109	0					
ANR	2469789	ExpressionStatement	addr_old = addr	437:1:12426:12441	2468109	16	True				
ANR	2469790	AssignmentExpression	addr_old = addr		2468109	0		=			
ANR	2469791	Identifier	addr_old		2468109	0					
ANR	2469792	Identifier	addr		2468109	1					
ANR	2469793	ExpressionStatement	free ( wop . txt )	438:1:12444:12458	2468109	17	True				
ANR	2469794	CallExpression	free ( wop . txt )		2468109	0					
ANR	2469795	Callee	free		2468109	0					
ANR	2469796	Identifier	free		2468109	0					
ANR	2469797	ArgumentList	wop . txt		2468109	1					
ANR	2469798	Argument	wop . txt		2468109	0					
ANR	2469799	MemberAccess	wop . txt		2468109	0					
ANR	2469800	Identifier	wop		2468109	0					
ANR	2469801	Identifier	txt		2468109	1					
ANR	2469802	ExpressionStatement	r_anal_hint_free ( hint )	439:1:12461:12484	2468109	18	True				
ANR	2469803	CallExpression	r_anal_hint_free ( hint )		2468109	0					
ANR	2469804	Callee	r_anal_hint_free		2468109	0					
ANR	2469805	Identifier	r_anal_hint_free		2468109	0					
ANR	2469806	ArgumentList	hint		2468109	1					
ANR	2469807	Argument	hint		2468109	0					
ANR	2469808	Identifier	hint		2468109	0					
ANR	2469809	ReturnStatement	return op -> size ;	440:1:12487:12502	2468109	19	True				
ANR	2469810	PtrMemberAccess	op -> size		2468109	0					
ANR	2469811	Identifier	op		2468109	0					
ANR	2469812	Identifier	size		2468109	1					
ANR	2469813	ReturnType	static int		2468109	1					
ANR	2469814	Identifier	wasm_op		2468109	2					
ANR	2469815	ParameterList	"RAnal * anal , RAnalOp * op , ut64 addr , const ut8 * data , int len , RAnalOpMask mask"		2468109	3					
ANR	2469816	Parameter	RAnal * anal	75:19:2074:2084	2468109	0	True				
ANR	2469817	ParameterType	RAnal *		2468109	0					
ANR	2469818	Identifier	anal		2468109	1					
ANR	2469819	Parameter	RAnalOp * op	75:32:2087:2097	2468109	1	True				
ANR	2469820	ParameterType	RAnalOp *		2468109	0					
ANR	2469821	Identifier	op		2468109	1					
ANR	2469822	Parameter	ut64 addr	75:45:2100:2108	2468109	2	True				
ANR	2469823	ParameterType	ut64		2468109	0					
ANR	2469824	Identifier	addr		2468109	1					
ANR	2469825	Parameter	const ut8 * data	75:56:2111:2125	2468109	3	True				
ANR	2469826	ParameterType	const ut8 *		2468109	0					
ANR	2469827	Identifier	data		2468109	1					
ANR	2469828	Parameter	int len	75:73:2128:2134	2468109	4	True				
ANR	2469829	ParameterType	int		2468109	0					
ANR	2469830	Identifier	len		2468109	1					
ANR	2469831	Parameter	RAnalOpMask mask	75:82:2137:2152	2468109	5	True				
ANR	2469832	ParameterType	RAnalOpMask		2468109	0					
ANR	2469833	Identifier	mask		2468109	1					
ANR	2469834	CFGEntryNode	ENTRY		2468109		True				
ANR	2469835	CFGExitNode	EXIT		2468109		True				
ANR	2469836	Symbol	addr_old		2468109						
ANR	2469837	Symbol	& val		2468109						
ANR	2469838	Symbol	data		2468109						
ANR	2469839	Symbol	* op		2468109						
ANR	2469840	Symbol	scope_hint		2468109						
ANR	2469841	Symbol	R_ANAL_OP_TYPE_OR		2468109						
ANR	2469842	Symbol	R_ANAL_OP_TYPE_STORE		2468109						
ANR	2469843	Symbol	R_ANAL_OP_TYPE_UNK		2468109						
ANR	2469844	Symbol	strncmp		2468109						
ANR	2469845	Symbol	op -> eob		2468109						
ANR	2469846	Symbol	len		2468109						
ANR	2469847	Symbol	WASM_TYPE_OP_CORE		2468109						
ANR	2469848	Symbol	wop		2468109						
ANR	2469849	Symbol	R_ANAL_OP_TYPE_XCHG		2468109						
ANR	2469850	Symbol	advance_till_scope_end		2468109						
ANR	2469851	Symbol	ret		2468109						
ANR	2469852	Symbol	val		2468109						
ANR	2469853	Symbol	wasm_dis		2468109						
ANR	2469854	Symbol	wop . op . atomic		2468109						
ANR	2469855	Symbol	R_ANAL_OP_TYPE_CJMP		2468109						
ANR	2469856	Symbol	* hint		2468109						
ANR	2469857	Symbol	NULL		2468109						
ANR	2469858	Symbol	op -> ptr		2468109						
ANR	2469859	Symbol	op -> sign		2468109						
ANR	2469860	Symbol	op -> type		2468109						
ANR	2469861	Symbol	wop . op . core		2468109						
ANR	2469862	Symbol	wop . txt		2468109						
ANR	2469863	Symbol	R_ANAL_OP_TYPE_MOV		2468109						
ANR	2469864	Symbol	R_ANAL_OP_TYPE_JMP		2468109						
ANR	2469865	Symbol	anal		2468109						
ANR	2469866	Symbol	R_ANAL_OP_TYPE_CALL		2468109						
ANR	2469867	Symbol	R_ANAL_OP_TYPE_CRET		2468109						
ANR	2469868	Symbol	hint		2468109						
ANR	2469869	Symbol	true		2468109						
ANR	2469870	Symbol	& wop		2468109						
ANR	2469871	Symbol	R_ANAL_OP_TYPE_MOD		2468109						
ANR	2469872	Symbol	R_ANAL_OP_TYPE_SUB		2468109						
ANR	2469873	Symbol	get_cf_offset		2468109						
ANR	2469874	Symbol	& op -> esil		2468109						
ANR	2469875	Symbol	WASM_OP_END		2468109						
ANR	2469876	Symbol	hint2 -> jump		2468109						
ANR	2469877	Symbol	R_ANAL_OP_TYPE_LOAD		2468109						
ANR	2469878	Symbol	op -> fail		2468109						
ANR	2469879	Symbol	hint -> jump		2468109						
ANR	2469880	Symbol	hint -> opcode		2468109						
ANR	2469881	Symbol	R_ANAL_OP_TYPE_ILL		2468109						
ANR	2469882	Symbol	arg		2468109						
ANR	2469883	Symbol	op -> jump		2468109						
ANR	2469884	Symbol	addr		2468109						
ANR	2469885	Symbol	UT64_MAX		2468109						
ANR	2469886	Symbol	* hint2		2468109						
ANR	2469887	Symbol	mask		2468109						
ANR	2469888	Symbol	R_ANAL_OP_TYPE_RET		2468109						
ANR	2469889	Symbol	R_ANAL_OP_TYPE_ADD		2468109						
ANR	2469890	Symbol	op		2468109						
ANR	2469891	Symbol	hint2		2468109						
ANR	2469892	Symbol	op -> addr		2468109						
ANR	2469893	Symbol	op -> id		2468109						
ANR	2469894	Symbol	R_ANAL_OP_TYPE_XOR		2468109						
ANR	2469895	Symbol	wop . type		2468109						
ANR	2469896	Symbol	false		2468109						
ANR	2469897	Symbol	R_ANAL_OP_TYPE_AND		2468109						
ANR	2469898	Symbol	op -> val		2468109						
ANR	2469899	Symbol	r_anal_hint_get		2468109						
ANR	2469900	Symbol	wop . op		2468109						
ANR	2469901	Symbol	R_ANAL_OP_TYPE_NOP		2468109						
ANR	2469902	Symbol	op -> size		2468109						
ANR	2469903	Symbol	R_ANAL_OP_TYPE_CMP		2468109						
ANR	2469904	Symbol	* data		2468109						
ANR	2469905	Function	archinfo	443:0:12507:12557							
ANR	2469906	FunctionDef	"archinfo (RAnal * a , int q)"		2469905	0					
ANR	2469907	CompoundStatement		443:37:12544:12557	2469905	0					
ANR	2469908	ReturnStatement	return 1 ;	444:1:12547:12555	2469905	0	True				
ANR	2469909	PrimaryExpression	1		2469905	0					
ANR	2469910	ReturnType	static int		2469905	1					
ANR	2469911	Identifier	archinfo		2469905	2					
ANR	2469912	ParameterList	"RAnal * a , int q"		2469905	3					
ANR	2469913	Parameter	RAnal * a	443:20:12527:12534	2469905	0	True				
ANR	2469914	ParameterType	RAnal *		2469905	0					
ANR	2469915	Identifier	a		2469905	1					
ANR	2469916	Parameter	int q	443:30:12537:12541	2469905	1	True				
ANR	2469917	ParameterType	int		2469905	0					
ANR	2469918	Identifier	q		2469905	1					
ANR	2469919	CFGEntryNode	ENTRY		2469905		True				
ANR	2469920	CFGExitNode	EXIT		2469905		True				
ANR	2469921	Symbol	a		2469905						
ANR	2469922	Symbol	q		2469905						
ANR	2469923	Function	get_reg_profile	447:0:12560:12789							
ANR	2469924	FunctionDef	get_reg_profile (RAnal * anal)		2469923	0					
ANR	2469925	CompoundStatement		447:42:12602:12789	2469923	0					
ANR	2469926	Statement	return	448:1:12605:12610	2469923	0	True				
ANR	2469927	Statement	strdup	448:8:12612:12617	2469923	1	True				
ANR	2469928	Statement	(	448:15:12619:12619	2469923	2	True				
ANR	2469929	Statement	"""=PC\\tpc\\n"""	449:2:12623:12632	2469923	3	True				
ANR	2469930	Statement	"""=BP\\tbp\\n"""	450:2:12636:12645	2469923	4	True				
ANR	2469931	Statement	"""=SP\\tsp\\n"""	451:2:12649:12658	2469923	5	True				
ANR	2469932	Statement	"""gpr\\tsp\\t.32\\t0\\t0\\n"""	452:2:12662:12679	2469923	6	True				
ANR	2469933	Statement	"""gpr\\tpc\\t.32\\t4\\t0\\n"""	453:2:12700:12717	2469923	7	True				
ANR	2469934	Statement	"""gpr\\tbp\\t.32\\t8\\t0\\n"""	454:2:12740:12757	2469923	8	True				
ANR	2469935	Statement	)	455:1:12786:12786	2469923	9	True				
ANR	2469936	ExpressionStatement		455:2:12787:12787	2469923	10	True				
ANR	2469937	ReturnType	static char *		2469923	1					
ANR	2469938	Identifier	get_reg_profile		2469923	2					
ANR	2469939	ParameterList	RAnal * anal		2469923	3					
ANR	2469940	Parameter	RAnal * anal	447:29:12589:12599	2469923	0	True				
ANR	2469941	ParameterType	RAnal *		2469923	0					
ANR	2469942	Identifier	anal		2469923	1					
ANR	2469943	CFGEntryNode	ENTRY		2469923		True				
ANR	2469944	CFGExitNode	EXIT		2469923		True				
ANR	2469945	Symbol	anal		2469923						
ANR	2469946	DeclStmt									
ANR	2469947	Decl							RAnalPlugin	RAnalPlugin	r_anal_plugin_wasm
ANR	2469948	DeclStmt									
ANR	2469949	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
