command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5169153	File	data/converged/CVE-2019-16718~_radare2/libr_util_print.c								
ANR	5169154	DeclStmt									
ANR	5169155	Decl							const char	const char [ 16 ]	hex
ANR	5169156	Function	nullprinter	14:0:293:349							
ANR	5169157	FunctionDef	nullprinter (const char * a)		5169156	0					
ANR	5169158	CompoundStatement		14:43:336:349	5169156	0					
ANR	5169159	ReturnStatement	return 0 ;	15:1:339:347	5169156	0	True				
ANR	5169160	PrimaryExpression	0		5169156	0					
ANR	5169161	ReturnType	static int		5169156	1					
ANR	5169162	Identifier	nullprinter		5169156	2					
ANR	5169163	ParameterList	const char * a		5169156	3					
ANR	5169164	Parameter	const char * a	14:23:316:328	5169156	0	True				
ANR	5169165	ParameterType	const char *		5169156	0					
ANR	5169166	Identifier	a		5169156	1					
ANR	5169167	CFGEntryNode	ENTRY		5169156		True				
ANR	5169168	CFGExitNode	EXIT		5169156		True				
ANR	5169169	Symbol	a		5169156						
ANR	5169170	Function	libc_printf	18:0:352:487							
ANR	5169171	FunctionDef	libc_printf (const char * format)		5169170	0					
ANR	5169172	CompoundStatement		18:48:400:487	5169170	0					
ANR	5169173	IdentifierDeclStatement	va_list ap ;	19:1:403:413	5169170	0	True				
ANR	5169174	IdentifierDecl	ap		5169170	0					
ANR	5169175	IdentifierDeclType	va_list		5169170	0					
ANR	5169176	Identifier	ap		5169170	1					
ANR	5169177	ExpressionStatement	"va_start ( ap , format )"	20:1:416:437	5169170	1	True				
ANR	5169178	CallExpression	"va_start ( ap , format )"		5169170	0					
ANR	5169179	Callee	va_start		5169170	0					
ANR	5169180	Identifier	va_start		5169170	0					
ANR	5169181	ArgumentList	ap		5169170	1					
ANR	5169182	Argument	ap		5169170	0					
ANR	5169183	Identifier	ap		5169170	0					
ANR	5169184	Argument	format		5169170	1					
ANR	5169185	Identifier	format		5169170	0					
ANR	5169186	ExpressionStatement	"vprintf ( format , ap )"	21:1:440:460	5169170	2	True				
ANR	5169187	CallExpression	"vprintf ( format , ap )"		5169170	0					
ANR	5169188	Callee	vprintf		5169170	0					
ANR	5169189	Identifier	vprintf		5169170	0					
ANR	5169190	ArgumentList	format		5169170	1					
ANR	5169191	Argument	format		5169170	0					
ANR	5169192	Identifier	format		5169170	0					
ANR	5169193	Argument	ap		5169170	1					
ANR	5169194	Identifier	ap		5169170	0					
ANR	5169195	ExpressionStatement	va_end ( ap )	22:1:463:474	5169170	3	True				
ANR	5169196	CallExpression	va_end ( ap )		5169170	0					
ANR	5169197	Callee	va_end		5169170	0					
ANR	5169198	Identifier	va_end		5169170	0					
ANR	5169199	ArgumentList	ap		5169170	1					
ANR	5169200	Argument	ap		5169170	0					
ANR	5169201	Identifier	ap		5169170	0					
ANR	5169202	ReturnStatement	return 0 ;	23:1:477:485	5169170	4	True				
ANR	5169203	PrimaryExpression	0		5169170	0					
ANR	5169204	ReturnType	static int		5169170	1					
ANR	5169205	Identifier	libc_printf		5169170	2					
ANR	5169206	ParameterList	const char * format		5169170	3					
ANR	5169207	Parameter	const char * format	18:23:375:392	5169170	0	True				
ANR	5169208	ParameterType	const char *		5169170	0					
ANR	5169209	Identifier	format		5169170	1					
ANR	5169210	CFGEntryNode	ENTRY		5169170		True				
ANR	5169211	CFGExitNode	EXIT		5169170		True				
ANR	5169212	Symbol	format		5169170						
ANR	5169213	Symbol	ap		5169170						
ANR	5169214	Function	libc_eprintf	26:0:490:635							
ANR	5169215	FunctionDef	libc_eprintf (const char * format)		5169214	0					
ANR	5169216	CompoundStatement		26:49:539:635	5169214	0					
ANR	5169217	IdentifierDeclStatement	va_list ap ;	27:1:542:552	5169214	0	True				
ANR	5169218	IdentifierDecl	ap		5169214	0					
ANR	5169219	IdentifierDeclType	va_list		5169214	0					
ANR	5169220	Identifier	ap		5169214	1					
ANR	5169221	ExpressionStatement	"va_start ( ap , format )"	28:1:555:576	5169214	1	True				
ANR	5169222	CallExpression	"va_start ( ap , format )"		5169214	0					
ANR	5169223	Callee	va_start		5169214	0					
ANR	5169224	Identifier	va_start		5169214	0					
ANR	5169225	ArgumentList	ap		5169214	1					
ANR	5169226	Argument	ap		5169214	0					
ANR	5169227	Identifier	ap		5169214	0					
ANR	5169228	Argument	format		5169214	1					
ANR	5169229	Identifier	format		5169214	0					
ANR	5169230	ExpressionStatement	"vfprintf ( stderr , format , ap )"	29:1:579:608	5169214	2	True				
ANR	5169231	CallExpression	"vfprintf ( stderr , format , ap )"		5169214	0					
ANR	5169232	Callee	vfprintf		5169214	0					
ANR	5169233	Identifier	vfprintf		5169214	0					
ANR	5169234	ArgumentList	stderr		5169214	1					
ANR	5169235	Argument	stderr		5169214	0					
ANR	5169236	Identifier	stderr		5169214	0					
ANR	5169237	Argument	format		5169214	1					
ANR	5169238	Identifier	format		5169214	0					
ANR	5169239	Argument	ap		5169214	2					
ANR	5169240	Identifier	ap		5169214	0					
ANR	5169241	ExpressionStatement	va_end ( ap )	30:1:611:622	5169214	3	True				
ANR	5169242	CallExpression	va_end ( ap )		5169214	0					
ANR	5169243	Callee	va_end		5169214	0					
ANR	5169244	Identifier	va_end		5169214	0					
ANR	5169245	ArgumentList	ap		5169214	1					
ANR	5169246	Argument	ap		5169214	0					
ANR	5169247	Identifier	ap		5169214	0					
ANR	5169248	ReturnStatement	return 0 ;	31:1:625:633	5169214	4	True				
ANR	5169249	PrimaryExpression	0		5169214	0					
ANR	5169250	ReturnType	static int		5169214	1					
ANR	5169251	Identifier	libc_eprintf		5169214	2					
ANR	5169252	ParameterList	const char * format		5169214	3					
ANR	5169253	Parameter	const char * format	26:24:514:531	5169214	0	True				
ANR	5169254	ParameterType	const char *		5169214	0					
ANR	5169255	Identifier	format		5169214	1					
ANR	5169256	CFGEntryNode	ENTRY		5169214		True				
ANR	5169257	CFGExitNode	EXIT		5169214		True				
ANR	5169258	Symbol	format		5169214						
ANR	5169259	Symbol	stderr		5169214						
ANR	5169260	Symbol	ap		5169214						
ANR	5169261	DeclStmt									
ANR	5169262	Decl							RPrintIsInterruptedCallback	RPrintIsInterruptedCallback	is_interrupted_cb
ANR	5169263	Function	r_print_portionbar	36:0:700:1471							
ANR	5169264	FunctionDef	"r_print_portionbar (RPrint * p , const ut64 * portions , int n_portions)"		5169263	0					
ANR	5169265	CompoundStatement		36:79:779:1471	5169263	0					
ANR	5169266	IdentifierDeclStatement	const int use_color = p -> flags & R_PRINT_FLAGS_COLOR ;	37:1:782:834	5169263	0	True				
ANR	5169267	IdentifierDecl	use_color = p -> flags & R_PRINT_FLAGS_COLOR		5169263	0					
ANR	5169268	IdentifierDeclType	const int		5169263	0					
ANR	5169269	Identifier	use_color		5169263	1					
ANR	5169270	AssignmentExpression	use_color = p -> flags & R_PRINT_FLAGS_COLOR		5169263	2		=			
ANR	5169271	Identifier	use_color		5169263	0					
ANR	5169272	BitAndExpression	p -> flags & R_PRINT_FLAGS_COLOR		5169263	1		&			
ANR	5169273	PtrMemberAccess	p -> flags		5169263	0					
ANR	5169274	Identifier	p		5169263	0					
ANR	5169275	Identifier	flags		5169263	1					
ANR	5169276	Identifier	R_PRINT_FLAGS_COLOR		5169263	1					
ANR	5169277	IdentifierDeclStatement	"int i , j ;"	38:1:837:845	5169263	1	True				
ANR	5169278	IdentifierDecl	i		5169263	0					
ANR	5169279	IdentifierDeclType	int		5169263	0					
ANR	5169280	Identifier	i		5169263	1					
ANR	5169281	IdentifierDecl	j		5169263	1					
ANR	5169282	IdentifierDeclType	int		5169263	0					
ANR	5169283	Identifier	j		5169263	1					
ANR	5169284	Statement	ut64	39:1:848:851	5169263	2	True				
ANR	5169285	Statement	total	39:6:853:857	5169263	3	True				
ANR	5169286	Statement	=	39:12:859:859	5169263	4	True				
ANR	5169287	Statement	0L	39:14:861:862	5169263	5	True				
ANR	5169288	ExpressionStatement	L	39:16:863:864	5169263	6	True				
ANR	5169289	Identifier	L		5169263	0					
ANR	5169290	ForStatement	for ( i = 0 ; i < n_portions ; i ++ )		5169263	7					
ANR	5169291	ForInit	i = 0 ;	40:6:872:877	5169263	0	True				
ANR	5169292	AssignmentExpression	i = 0		5169263	0		=			
ANR	5169293	Identifier	i		5169263	0					
ANR	5169294	PrimaryExpression	0		5169263	1					
ANR	5169295	Condition	i < n_portions	40:13:879:892	5169263	1	True				
ANR	5169296	RelationalExpression	i < n_portions		5169263	0		<			
ANR	5169297	Identifier	i		5169263	0					
ANR	5169298	Identifier	n_portions		5169263	1					
ANR	5169299	PostIncDecOperationExpression	i ++	40:29:895:897	5169263	2	True				
ANR	5169300	Identifier	i		5169263	0					
ANR	5169301	IncDec	++		5169263	1					
ANR	5169302	CompoundStatement		6:2:124:154	5169263	3					
ANR	5169303	IdentifierDeclStatement	ut64 sum = total + portions [ i ] ;	41:2:904:934	5169263	0	True				
ANR	5169304	IdentifierDecl	sum = total + portions [ i ]		5169263	0					
ANR	5169305	IdentifierDeclType	ut64		5169263	0					
ANR	5169306	Identifier	sum		5169263	1					
ANR	5169307	AssignmentExpression	sum = total + portions [ i ]		5169263	2		=			
ANR	5169308	Identifier	sum		5169263	0					
ANR	5169309	AdditiveExpression	total + portions [ i ]		5169263	1		+			
ANR	5169310	Identifier	total		5169263	0					
ANR	5169311	ArrayIndexing	portions [ i ]		5169263	1					
ANR	5169312	Identifier	portions		5169263	0					
ANR	5169313	Identifier	i		5169263	1					
ANR	5169314	IfStatement	if ( total > sum )		5169263	1					
ANR	5169315	Condition	total > sum	42:6:942:952	5169263	0	True				
ANR	5169316	RelationalExpression	total > sum		5169263	0		>			
ANR	5169317	Identifier	total		5169263	0					
ANR	5169318	Identifier	sum		5169263	1					
ANR	5169319	CompoundStatement		7:19:175:175	5169263	1					
ANR	5169320	ExpressionStatement	"eprintf ( ""portionbar overflow aborted\\n"" )"	43:3:960:1001	5169263	0	True				
ANR	5169321	CallExpression	"eprintf ( ""portionbar overflow aborted\\n"" )"		5169263	0					
ANR	5169322	Callee	eprintf		5169263	0					
ANR	5169323	Identifier	eprintf		5169263	0					
ANR	5169324	ArgumentList	"""portionbar overflow aborted\\n"""		5169263	1					
ANR	5169325	Argument	"""portionbar overflow aborted\\n"""		5169263	0					
ANR	5169326	PrimaryExpression	"""portionbar overflow aborted\\n"""		5169263	0					
ANR	5169327	ReturnStatement	return ;	44:3:1006:1012	5169263	1	True				
ANR	5169328	ExpressionStatement	total = sum	46:2:1020:1031	5169263	2	True				
ANR	5169329	AssignmentExpression	total = sum		5169263	0		=			
ANR	5169330	Identifier	total		5169263	0					
ANR	5169331	Identifier	sum		5169263	1					
ANR	5169332	ExpressionStatement	"p -> cb_printf ( ""["" )"	48:1:1037:1055	5169263	8	True				
ANR	5169333	CallExpression	"p -> cb_printf ( ""["" )"		5169263	0					
ANR	5169334	Callee	p -> cb_printf		5169263	0					
ANR	5169335	PtrMemberAccess	p -> cb_printf		5169263	0					
ANR	5169336	Identifier	p		5169263	0					
ANR	5169337	Identifier	cb_printf		5169263	1					
ANR	5169338	ArgumentList	"""["""		5169263	1					
ANR	5169339	Argument	"""["""		5169263	0					
ANR	5169340	PrimaryExpression	"""["""		5169263	0					
ANR	5169341	IfStatement	if ( total == 0 )		5169263	9					
ANR	5169342	Condition	total == 0	49:5:1062:1071	5169263	0	True				
ANR	5169343	EqualityExpression	total == 0		5169263	0		==			
ANR	5169344	Identifier	total		5169263	0					
ANR	5169345	PrimaryExpression	0		5169263	1					
ANR	5169346	CompoundStatement		14:17:294:294	5169263	1					
ANR	5169347	ExpressionStatement	total = 1	50:2:1078:1087	5169263	0	True				
ANR	5169348	AssignmentExpression	total = 1		5169263	0		=			
ANR	5169349	Identifier	total		5169263	0					
ANR	5169350	PrimaryExpression	1		5169263	1					
ANR	5169351	ForStatement	for ( i = 0 ; i < n_portions ; i ++ )		5169263	10					
ANR	5169352	ForInit	i = 0 ;	52:6:1098:1103	5169263	0	True				
ANR	5169353	AssignmentExpression	i = 0		5169263	0		=			
ANR	5169354	Identifier	i		5169263	0					
ANR	5169355	PrimaryExpression	0		5169263	1					
ANR	5169356	Condition	i < n_portions	52:13:1105:1118	5169263	1	True				
ANR	5169357	RelationalExpression	i < n_portions		5169263	0		<			
ANR	5169358	Identifier	i		5169263	0					
ANR	5169359	Identifier	n_portions		5169263	1					
ANR	5169360	PostIncDecOperationExpression	i ++	52:29:1121:1123	5169263	2	True				
ANR	5169361	Identifier	i		5169263	0					
ANR	5169362	IncDec	++		5169263	1					
ANR	5169363	CompoundStatement		18:2:350:384	5169263	3					
ANR	5169364	IdentifierDeclStatement	int pc = portions [ i ] * 100 / total ;	53:2:1130:1164	5169263	0	True				
ANR	5169365	IdentifierDecl	pc = portions [ i ] * 100 / total		5169263	0					
ANR	5169366	IdentifierDeclType	int		5169263	0					
ANR	5169367	Identifier	pc		5169263	1					
ANR	5169368	AssignmentExpression	pc = portions [ i ] * 100 / total		5169263	2		=			
ANR	5169369	Identifier	pc		5169263	0					
ANR	5169370	MultiplicativeExpression	portions [ i ] * 100 / total		5169263	1		*			
ANR	5169371	ArrayIndexing	portions [ i ]		5169263	0					
ANR	5169372	Identifier	portions		5169263	0					
ANR	5169373	Identifier	i		5169263	1					
ANR	5169374	MultiplicativeExpression	100 / total		5169263	1		/			
ANR	5169375	PrimaryExpression	100		5169263	0					
ANR	5169376	Identifier	total		5169263	1					
ANR	5169377	ExpressionStatement	pc = pc * p -> width / 100	55:2:1201:1225	5169263	1	True				
ANR	5169378	AssignmentExpression	pc = pc * p -> width / 100		5169263	0		=			
ANR	5169379	Identifier	pc		5169263	0					
ANR	5169380	MultiplicativeExpression	pc * p -> width / 100		5169263	1		*			
ANR	5169381	Identifier	pc		5169263	0					
ANR	5169382	MultiplicativeExpression	p -> width / 100		5169263	1		/			
ANR	5169383	PtrMemberAccess	p -> width		5169263	0					
ANR	5169384	Identifier	p		5169263	0					
ANR	5169385	Identifier	width		5169263	1					
ANR	5169386	PrimaryExpression	100		5169263	1					
ANR	5169387	IfStatement	if ( use_color )		5169263	2					
ANR	5169388	Condition	use_color	56:6:1233:1241	5169263	0	True				
ANR	5169389	Identifier	use_color		5169263	0					
ANR	5169390	CompoundStatement		21:17:464:464	5169263	1					
ANR	5169391	ExpressionStatement	"p -> cb_printf ( ""\\x1b[%dm"" , 31 + ( i % 8 ) )"	57:3:1249:1288	5169263	0	True				
ANR	5169392	CallExpression	"p -> cb_printf ( ""\\x1b[%dm"" , 31 + ( i % 8 ) )"		5169263	0					
ANR	5169393	Callee	p -> cb_printf		5169263	0					
ANR	5169394	PtrMemberAccess	p -> cb_printf		5169263	0					
ANR	5169395	Identifier	p		5169263	0					
ANR	5169396	Identifier	cb_printf		5169263	1					
ANR	5169397	ArgumentList	"""\\x1b[%dm"""		5169263	1					
ANR	5169398	Argument	"""\\x1b[%dm"""		5169263	0					
ANR	5169399	PrimaryExpression	"""\\x1b[%dm"""		5169263	0					
ANR	5169400	Argument	31 + ( i % 8 )		5169263	1					
ANR	5169401	AdditiveExpression	31 + ( i % 8 )		5169263	0		+			
ANR	5169402	PrimaryExpression	31		5169263	0					
ANR	5169403	MultiplicativeExpression	i % 8		5169263	1		%			
ANR	5169404	Identifier	i		5169263	0					
ANR	5169405	PrimaryExpression	8		5169263	1					
ANR	5169406	IfStatement	if ( pc == 0 )		5169263	3					
ANR	5169407	Condition	pc == 0	59:6:1300:1306	5169263	0	True				
ANR	5169408	EqualityExpression	pc == 0		5169263	0		==			
ANR	5169409	Identifier	pc		5169263	0					
ANR	5169410	PrimaryExpression	0		5169263	1					
ANR	5169411	CompoundStatement		24:15:529:529	5169263	1					
ANR	5169412	ExpressionStatement	pc = 1	60:3:1314:1320	5169263	0	True				
ANR	5169413	AssignmentExpression	pc = 1		5169263	0		=			
ANR	5169414	Identifier	pc		5169263	0					
ANR	5169415	PrimaryExpression	1		5169263	1					
ANR	5169416	ForStatement	for ( j = 0 ; j < pc ; j ++ )		5169263	4					
ANR	5169417	ForInit	j = 0 ;	62:7:1333:1338	5169263	0	True				
ANR	5169418	AssignmentExpression	j = 0		5169263	0		=			
ANR	5169419	Identifier	j		5169263	0					
ANR	5169420	PrimaryExpression	0		5169263	1					
ANR	5169421	Condition	j < pc	62:14:1340:1345	5169263	1	True				
ANR	5169422	RelationalExpression	j < pc		5169263	0		<			
ANR	5169423	Identifier	j		5169263	0					
ANR	5169424	Identifier	pc		5169263	1					
ANR	5169425	PostIncDecOperationExpression	j ++	62:22:1348:1350	5169263	2	True				
ANR	5169426	Identifier	j		5169263	0					
ANR	5169427	IncDec	++		5169263	1					
ANR	5169428	CompoundStatement		27:27:573:573	5169263	3					
ANR	5169429	ExpressionStatement	"p -> cb_printf ( ""%c"" , 'A' + i )"	63:3:1358:1385	5169263	0	True				
ANR	5169430	CallExpression	"p -> cb_printf ( ""%c"" , 'A' + i )"		5169263	0					
ANR	5169431	Callee	p -> cb_printf		5169263	0					
ANR	5169432	PtrMemberAccess	p -> cb_printf		5169263	0					
ANR	5169433	Identifier	p		5169263	0					
ANR	5169434	Identifier	cb_printf		5169263	1					
ANR	5169435	ArgumentList	"""%c"""		5169263	1					
ANR	5169436	Argument	"""%c"""		5169263	0					
ANR	5169437	PrimaryExpression	"""%c"""		5169263	0					
ANR	5169438	Argument	'A' + i		5169263	1					
ANR	5169439	AdditiveExpression	'A' + i		5169263	0		+			
ANR	5169440	PrimaryExpression	'A'		5169263	0					
ANR	5169441	Identifier	i		5169263	1					
ANR	5169442	IfStatement	if ( use_color )		5169263	5					
ANR	5169443	Condition	use_color	65:6:1397:1405	5169263	0	True				
ANR	5169444	Identifier	use_color		5169263	0					
ANR	5169445	CompoundStatement		30:17:628:628	5169263	1					
ANR	5169446	ExpressionStatement	p -> cb_printf ( Color_RESET )	66:3:1413:1439	5169263	0	True				
ANR	5169447	CallExpression	p -> cb_printf ( Color_RESET )		5169263	0					
ANR	5169448	Callee	p -> cb_printf		5169263	0					
ANR	5169449	PtrMemberAccess	p -> cb_printf		5169263	0					
ANR	5169450	Identifier	p		5169263	0					
ANR	5169451	Identifier	cb_printf		5169263	1					
ANR	5169452	ArgumentList	Color_RESET		5169263	1					
ANR	5169453	Argument	Color_RESET		5169263	0					
ANR	5169454	Identifier	Color_RESET		5169263	0					
ANR	5169455	ExpressionStatement	"p -> cb_printf ( ""]\\n"" )"	69:1:1449:1469	5169263	11	True				
ANR	5169456	CallExpression	"p -> cb_printf ( ""]\\n"" )"		5169263	0					
ANR	5169457	Callee	p -> cb_printf		5169263	0					
ANR	5169458	PtrMemberAccess	p -> cb_printf		5169263	0					
ANR	5169459	Identifier	p		5169263	0					
ANR	5169460	Identifier	cb_printf		5169263	1					
ANR	5169461	ArgumentList	"""]\\n"""		5169263	1					
ANR	5169462	Argument	"""]\\n"""		5169263	0					
ANR	5169463	PrimaryExpression	"""]\\n"""		5169263	0					
ANR	5169464	ReturnType	R_API void		5169263	1					
ANR	5169465	Identifier	r_print_portionbar		5169263	2					
ANR	5169466	ParameterList	"RPrint * p , const ut64 * portions , int n_portions"		5169263	3					
ANR	5169467	Parameter	RPrint * p	36:30:730:738	5169263	0	True				
ANR	5169468	ParameterType	RPrint *		5169263	0					
ANR	5169469	Identifier	p		5169263	1					
ANR	5169470	Parameter	const ut64 * portions	36:41:741:760	5169263	1	True				
ANR	5169471	ParameterType	const ut64 *		5169263	0					
ANR	5169472	Identifier	portions		5169263	1					
ANR	5169473	Parameter	int n_portions	36:63:763:776	5169263	2	True				
ANR	5169474	ParameterType	int		5169263	0					
ANR	5169475	Identifier	n_portions		5169263	1					
ANR	5169476	CFGEntryNode	ENTRY		5169263		True				
ANR	5169477	CFGExitNode	EXIT		5169263		True				
ANR	5169478	Symbol	Color_RESET		5169263						
ANR	5169479	Symbol	i		5169263						
ANR	5169480	Symbol	j		5169263						
ANR	5169481	Symbol	sum		5169263						
ANR	5169482	Symbol	* portions		5169263						
ANR	5169483	Symbol	use_color		5169263						
ANR	5169484	Symbol	p		5169263						
ANR	5169485	Symbol	total		5169263						
ANR	5169486	Symbol	* i		5169263						
ANR	5169487	Symbol	pc		5169263						
ANR	5169488	Symbol	R_PRINT_FLAGS_COLOR		5169263						
ANR	5169489	Symbol	p -> width		5169263						
ANR	5169490	Symbol	p -> flags		5169263						
ANR	5169491	Symbol	n_portions		5169263						
ANR	5169492	Symbol	* p		5169263						
ANR	5169493	Symbol	portions		5169263						
ANR	5169494	Function	r_print_columns	72:0:1474:2911							
ANR	5169495	FunctionDef	"r_print_columns (RPrint * p , const ut8 * buf , int len , int height)"		5169494	0					
ANR	5169496	CompoundStatement		72:76:1550:2911	5169494	0					
ANR	5169497	IdentifierDeclStatement	"int i , j , cols = 78 ;"	73:1:1553:1572	5169494	0	True				
ANR	5169498	IdentifierDecl	i		5169494	0					
ANR	5169499	IdentifierDeclType	int		5169494	0					
ANR	5169500	Identifier	i		5169494	1					
ANR	5169501	IdentifierDecl	j		5169494	1					
ANR	5169502	IdentifierDeclType	int		5169494	0					
ANR	5169503	Identifier	j		5169494	1					
ANR	5169504	IdentifierDecl	cols = 78		5169494	2					
ANR	5169505	IdentifierDeclType	int		5169494	0					
ANR	5169506	Identifier	cols		5169494	1					
ANR	5169507	AssignmentExpression	cols = 78		5169494	2		=			
ANR	5169508	Identifier	cols		5169494	0					
ANR	5169509	PrimaryExpression	78		5169494	1					
ANR	5169510	IdentifierDeclStatement	int rows = height > 0 ? height : 10 ;	74:1:1575:1610	5169494	1	True				
ANR	5169511	IdentifierDecl	rows = height > 0 ? height : 10		5169494	0					
ANR	5169512	IdentifierDeclType	int		5169494	0					
ANR	5169513	Identifier	rows		5169494	1					
ANR	5169514	AssignmentExpression	rows = height > 0 ? height : 10		5169494	2		=			
ANR	5169515	Identifier	rows		5169494	0					
ANR	5169516	ConditionalExpression	height > 0 ? height : 10		5169494	1					
ANR	5169517	Condition	height > 0		5169494	0					
ANR	5169518	RelationalExpression	height > 0		5169494	0		>			
ANR	5169519	Identifier	height		5169494	0					
ANR	5169520	PrimaryExpression	0		5169494	1					
ANR	5169521	Identifier	height		5169494	1					
ANR	5169522	PrimaryExpression	10		5169494	2					
ANR	5169523	IdentifierDeclStatement	bool colors = p -> flags & R_PRINT_FLAGS_COLOR ;	76:1:1642:1686	5169494	2	True				
ANR	5169524	IdentifierDecl	colors = p -> flags & R_PRINT_FLAGS_COLOR		5169494	0					
ANR	5169525	IdentifierDeclType	bool		5169494	0					
ANR	5169526	Identifier	colors		5169494	1					
ANR	5169527	AssignmentExpression	colors = p -> flags & R_PRINT_FLAGS_COLOR		5169494	2		=			
ANR	5169528	Identifier	colors		5169494	0					
ANR	5169529	BitAndExpression	p -> flags & R_PRINT_FLAGS_COLOR		5169494	1		&			
ANR	5169530	PtrMemberAccess	p -> flags		5169494	0					
ANR	5169531	Identifier	p		5169494	0					
ANR	5169532	Identifier	flags		5169494	1					
ANR	5169533	Identifier	R_PRINT_FLAGS_COLOR		5169494	1					
ANR	5169534	IdentifierDeclStatement	RConsPrintablePalette * pal = & p -> cons -> context -> pal ;	77:1:1689:1740	5169494	3	True				
ANR	5169535	IdentifierDecl	* pal = & p -> cons -> context -> pal		5169494	0					
ANR	5169536	IdentifierDeclType	RConsPrintablePalette *		5169494	0					
ANR	5169537	Identifier	pal		5169494	1					
ANR	5169538	AssignmentExpression	* pal = & p -> cons -> context -> pal		5169494	2		=			
ANR	5169539	Identifier	pal		5169494	0					
ANR	5169540	UnaryOperationExpression	& p -> cons -> context -> pal		5169494	1					
ANR	5169541	UnaryOperator	&		5169494	0					
ANR	5169542	PtrMemberAccess	p -> cons -> context -> pal		5169494	1					
ANR	5169543	PtrMemberAccess	p -> cons -> context		5169494	0					
ANR	5169544	PtrMemberAccess	p -> cons		5169494	0					
ANR	5169545	Identifier	p		5169494	0					
ANR	5169546	Identifier	cons		5169494	1					
ANR	5169547	Identifier	context		5169494	1					
ANR	5169548	Identifier	pal		5169494	1					
ANR	5169549	IdentifierDeclStatement	"const char * vline = p -> cons -> use_utf8 ? RUNE_LINE_VERT : ""|"" ;"	78:1:1743:1803	5169494	4	True				
ANR	5169550	IdentifierDecl	"* vline = p -> cons -> use_utf8 ? RUNE_LINE_VERT : ""|"""		5169494	0					
ANR	5169551	IdentifierDeclType	const char *		5169494	0					
ANR	5169552	Identifier	vline		5169494	1					
ANR	5169553	AssignmentExpression	"* vline = p -> cons -> use_utf8 ? RUNE_LINE_VERT : ""|"""		5169494	2		=			
ANR	5169554	Identifier	vline		5169494	0					
ANR	5169555	ConditionalExpression	"p -> cons -> use_utf8 ? RUNE_LINE_VERT : ""|"""		5169494	1					
ANR	5169556	Condition	p -> cons -> use_utf8		5169494	0					
ANR	5169557	PtrMemberAccess	p -> cons -> use_utf8		5169494	0					
ANR	5169558	PtrMemberAccess	p -> cons		5169494	0					
ANR	5169559	Identifier	p		5169494	0					
ANR	5169560	Identifier	cons		5169494	1					
ANR	5169561	Identifier	use_utf8		5169494	1					
ANR	5169562	Identifier	RUNE_LINE_VERT		5169494	1					
ANR	5169563	PrimaryExpression	"""|"""		5169494	2					
ANR	5169564	IdentifierDeclStatement	"const char * block = p -> cons -> use_utf8 ? UTF_BLOCK : ""#"" ;"	79:1:1806:1861	5169494	5	True				
ANR	5169565	IdentifierDecl	"* block = p -> cons -> use_utf8 ? UTF_BLOCK : ""#"""		5169494	0					
ANR	5169566	IdentifierDeclType	const char *		5169494	0					
ANR	5169567	Identifier	block		5169494	1					
ANR	5169568	AssignmentExpression	"* block = p -> cons -> use_utf8 ? UTF_BLOCK : ""#"""		5169494	2		=			
ANR	5169569	Identifier	block		5169494	0					
ANR	5169570	ConditionalExpression	"p -> cons -> use_utf8 ? UTF_BLOCK : ""#"""		5169494	1					
ANR	5169571	Condition	p -> cons -> use_utf8		5169494	0					
ANR	5169572	PtrMemberAccess	p -> cons -> use_utf8		5169494	0					
ANR	5169573	PtrMemberAccess	p -> cons		5169494	0					
ANR	5169574	Identifier	p		5169494	0					
ANR	5169575	Identifier	cons		5169494	1					
ANR	5169576	Identifier	use_utf8		5169494	1					
ANR	5169577	Identifier	UTF_BLOCK		5169494	1					
ANR	5169578	PrimaryExpression	"""#"""		5169494	2					
ANR	5169579	IdentifierDeclStatement	const char * kol [ 5 ] ;	80:1:1864:1882	5169494	6	True				
ANR	5169580	IdentifierDecl	* kol [ 5 ]		5169494	0					
ANR	5169581	IdentifierDeclType	const char * [ 5 ]		5169494	0					
ANR	5169582	Identifier	kol		5169494	1					
ANR	5169583	PrimaryExpression	5		5169494	2					
ANR	5169584	ExpressionStatement	kol [ 0 ] = pal -> call	81:1:1885:1903	5169494	7	True				
ANR	5169585	AssignmentExpression	kol [ 0 ] = pal -> call		5169494	0		=			
ANR	5169586	ArrayIndexing	kol [ 0 ]		5169494	0					
ANR	5169587	Identifier	kol		5169494	0					
ANR	5169588	PrimaryExpression	0		5169494	1					
ANR	5169589	PtrMemberAccess	pal -> call		5169494	1					
ANR	5169590	Identifier	pal		5169494	0					
ANR	5169591	Identifier	call		5169494	1					
ANR	5169592	ExpressionStatement	kol [ 1 ] = pal -> jmp	82:1:1906:1923	5169494	8	True				
ANR	5169593	AssignmentExpression	kol [ 1 ] = pal -> jmp		5169494	0		=			
ANR	5169594	ArrayIndexing	kol [ 1 ]		5169494	0					
ANR	5169595	Identifier	kol		5169494	0					
ANR	5169596	PrimaryExpression	1		5169494	1					
ANR	5169597	PtrMemberAccess	pal -> jmp		5169494	1					
ANR	5169598	Identifier	pal		5169494	0					
ANR	5169599	Identifier	jmp		5169494	1					
ANR	5169600	ExpressionStatement	kol [ 2 ] = pal -> cjmp	83:1:1926:1944	5169494	9	True				
ANR	5169601	AssignmentExpression	kol [ 2 ] = pal -> cjmp		5169494	0		=			
ANR	5169602	ArrayIndexing	kol [ 2 ]		5169494	0					
ANR	5169603	Identifier	kol		5169494	0					
ANR	5169604	PrimaryExpression	2		5169494	1					
ANR	5169605	PtrMemberAccess	pal -> cjmp		5169494	1					
ANR	5169606	Identifier	pal		5169494	0					
ANR	5169607	Identifier	cjmp		5169494	1					
ANR	5169608	ExpressionStatement	kol [ 3 ] = pal -> mov	84:1:1947:1964	5169494	10	True				
ANR	5169609	AssignmentExpression	kol [ 3 ] = pal -> mov		5169494	0		=			
ANR	5169610	ArrayIndexing	kol [ 3 ]		5169494	0					
ANR	5169611	Identifier	kol		5169494	0					
ANR	5169612	PrimaryExpression	3		5169494	1					
ANR	5169613	PtrMemberAccess	pal -> mov		5169494	1					
ANR	5169614	Identifier	pal		5169494	0					
ANR	5169615	Identifier	mov		5169494	1					
ANR	5169616	ExpressionStatement	kol [ 4 ] = pal -> nop	85:1:1967:1984	5169494	11	True				
ANR	5169617	AssignmentExpression	kol [ 4 ] = pal -> nop		5169494	0		=			
ANR	5169618	ArrayIndexing	kol [ 4 ]		5169494	0					
ANR	5169619	Identifier	kol		5169494	0					
ANR	5169620	PrimaryExpression	4		5169494	1					
ANR	5169621	PtrMemberAccess	pal -> nop		5169494	1					
ANR	5169622	Identifier	pal		5169494	0					
ANR	5169623	Identifier	nop		5169494	1					
ANR	5169624	IfStatement	if ( colors )		5169494	12					
ANR	5169625	Condition	colors	86:5:1991:1996	5169494	0	True				
ANR	5169626	Identifier	colors		5169494	0					
ANR	5169627	CompoundStatement		15:13:448:448	5169494	1					
ANR	5169628	ForStatement	for ( i = 0 ; i < rows ; i ++ )		5169494	0					
ANR	5169629	ForInit	i = 0 ;	87:7:2008:2013	5169494	0	True				
ANR	5169630	AssignmentExpression	i = 0		5169494	0		=			
ANR	5169631	Identifier	i		5169494	0					
ANR	5169632	PrimaryExpression	0		5169494	1					
ANR	5169633	Condition	i < rows	87:14:2015:2022	5169494	1	True				
ANR	5169634	RelationalExpression	i < rows		5169494	0		<			
ANR	5169635	Identifier	i		5169494	0					
ANR	5169636	Identifier	rows		5169494	1					
ANR	5169637	PostIncDecOperationExpression	i ++	87:24:2025:2027	5169494	2	True				
ANR	5169638	Identifier	i		5169494	0					
ANR	5169639	IncDec	++		5169494	1					
ANR	5169640	CompoundStatement		17:3:484:517	5169494	3					
ANR	5169641	IdentifierDeclStatement	int threshold = i * ( 0xff / rows ) ;	88:3:2035:2068	5169494	0	True				
ANR	5169642	IdentifierDecl	threshold = i * ( 0xff / rows )		5169494	0					
ANR	5169643	IdentifierDeclType	int		5169494	0					
ANR	5169644	Identifier	threshold		5169494	1					
ANR	5169645	AssignmentExpression	threshold = i * ( 0xff / rows )		5169494	2		=			
ANR	5169646	Identifier	threshold		5169494	0					
ANR	5169647	MultiplicativeExpression	i * ( 0xff / rows )		5169494	1		*			
ANR	5169648	Identifier	i		5169494	0					
ANR	5169649	MultiplicativeExpression	0xff / rows		5169494	1		/			
ANR	5169650	PrimaryExpression	0xff		5169494	0					
ANR	5169651	Identifier	rows		5169494	1					
ANR	5169652	ForStatement	for ( j = 0 ; j < cols ; j ++ )		5169494	1					
ANR	5169653	ForInit	j = 0 ;	89:8:2078:2083	5169494	0	True				
ANR	5169654	AssignmentExpression	j = 0		5169494	0		=			
ANR	5169655	Identifier	j		5169494	0					
ANR	5169656	PrimaryExpression	0		5169494	1					
ANR	5169657	Condition	j < cols	89:15:2085:2092	5169494	1	True				
ANR	5169658	RelationalExpression	j < cols		5169494	0		<			
ANR	5169659	Identifier	j		5169494	0					
ANR	5169660	Identifier	cols		5169494	1					
ANR	5169661	PostIncDecOperationExpression	j ++	89:25:2095:2097	5169494	2	True				
ANR	5169662	Identifier	j		5169494	0					
ANR	5169663	IncDec	++		5169494	1					
ANR	5169664	CompoundStatement		19:4:555:581	5169494	3					
ANR	5169665	IdentifierDeclStatement	int realJ = j * len / cols ;	90:4:2106:2132	5169494	0	True				
ANR	5169666	IdentifierDecl	realJ = j * len / cols		5169494	0					
ANR	5169667	IdentifierDeclType	int		5169494	0					
ANR	5169668	Identifier	realJ		5169494	1					
ANR	5169669	AssignmentExpression	realJ = j * len / cols		5169494	2		=			
ANR	5169670	Identifier	realJ		5169494	0					
ANR	5169671	MultiplicativeExpression	j * len / cols		5169494	1		*			
ANR	5169672	Identifier	j		5169494	0					
ANR	5169673	MultiplicativeExpression	len / cols		5169494	1		/			
ANR	5169674	Identifier	len		5169494	0					
ANR	5169675	Identifier	cols		5169494	1					
ANR	5169676	IfStatement	if ( 255 - buf [ realJ ] < threshold || ( i + 1 == rows ) )		5169494	1					
ANR	5169677	Condition	255 - buf [ realJ ] < threshold || ( i + 1 == rows )	91:9:2143:2189	5169494	0	True				
ANR	5169678	OrExpression	255 - buf [ realJ ] < threshold || ( i + 1 == rows )		5169494	0		||			
ANR	5169679	RelationalExpression	255 - buf [ realJ ] < threshold		5169494	0		<			
ANR	5169680	AdditiveExpression	255 - buf [ realJ ]		5169494	0		-			
ANR	5169681	PrimaryExpression	255		5169494	0					
ANR	5169682	ArrayIndexing	buf [ realJ ]		5169494	1					
ANR	5169683	Identifier	buf		5169494	0					
ANR	5169684	Identifier	realJ		5169494	1					
ANR	5169685	Identifier	threshold		5169494	1					
ANR	5169686	EqualityExpression	i + 1 == rows		5169494	1		==			
ANR	5169687	AdditiveExpression	i + 1		5169494	0		+			
ANR	5169688	Identifier	i		5169494	0					
ANR	5169689	PrimaryExpression	1		5169494	1					
ANR	5169690	Identifier	rows		5169494	1					
ANR	5169691	CompoundStatement		21:5:648:671	5169494	1					
ANR	5169692	IdentifierDeclStatement	int koli = i * 5 / rows ;	92:5:2199:2222	5169494	0	True				
ANR	5169693	IdentifierDecl	koli = i * 5 / rows		5169494	0					
ANR	5169694	IdentifierDeclType	int		5169494	0					
ANR	5169695	Identifier	koli		5169494	1					
ANR	5169696	AssignmentExpression	koli = i * 5 / rows		5169494	2		=			
ANR	5169697	Identifier	koli		5169494	0					
ANR	5169698	MultiplicativeExpression	i * 5 / rows		5169494	1		*			
ANR	5169699	Identifier	i		5169494	0					
ANR	5169700	MultiplicativeExpression	5 / rows		5169494	1		/			
ANR	5169701	PrimaryExpression	5		5169494	0					
ANR	5169702	Identifier	rows		5169494	1					
ANR	5169703	IfStatement	if ( p -> histblock )		5169494	1					
ANR	5169704	Condition	p -> histblock	93:9:2233:2244	5169494	0	True				
ANR	5169705	PtrMemberAccess	p -> histblock		5169494	0					
ANR	5169706	Identifier	p		5169494	0					
ANR	5169707	Identifier	histblock		5169494	1					
ANR	5169708	CompoundStatement		22:23:696:696	5169494	1					
ANR	5169709	ExpressionStatement	"p -> cb_printf ( ""%s%s%s"" , kol [ koli ] , block , Color_RESET )"	94:6:2255:2309	5169494	0	True				
ANR	5169710	CallExpression	"p -> cb_printf ( ""%s%s%s"" , kol [ koli ] , block , Color_RESET )"		5169494	0					
ANR	5169711	Callee	p -> cb_printf		5169494	0					
ANR	5169712	PtrMemberAccess	p -> cb_printf		5169494	0					
ANR	5169713	Identifier	p		5169494	0					
ANR	5169714	Identifier	cb_printf		5169494	1					
ANR	5169715	ArgumentList	"""%s%s%s"""		5169494	1					
ANR	5169716	Argument	"""%s%s%s"""		5169494	0					
ANR	5169717	PrimaryExpression	"""%s%s%s"""		5169494	0					
ANR	5169718	Argument	kol [ koli ]		5169494	1					
ANR	5169719	ArrayIndexing	kol [ koli ]		5169494	0					
ANR	5169720	Identifier	kol		5169494	0					
ANR	5169721	Identifier	koli		5169494	1					
ANR	5169722	Argument	block		5169494	2					
ANR	5169723	Identifier	block		5169494	0					
ANR	5169724	Argument	Color_RESET		5169494	3					
ANR	5169725	Identifier	Color_RESET		5169494	0					
ANR	5169726	ElseStatement	else		5169494	0					
ANR	5169727	CompoundStatement		24:12:772:772	5169494	0					
ANR	5169728	ExpressionStatement	"p -> cb_printf ( ""%s%s%s"" , kol [ koli ] , vline , Color_RESET )"	96:6:2331:2385	5169494	0	True				
ANR	5169729	CallExpression	"p -> cb_printf ( ""%s%s%s"" , kol [ koli ] , vline , Color_RESET )"		5169494	0					
ANR	5169730	Callee	p -> cb_printf		5169494	0					
ANR	5169731	PtrMemberAccess	p -> cb_printf		5169494	0					
ANR	5169732	Identifier	p		5169494	0					
ANR	5169733	Identifier	cb_printf		5169494	1					
ANR	5169734	ArgumentList	"""%s%s%s"""		5169494	1					
ANR	5169735	Argument	"""%s%s%s"""		5169494	0					
ANR	5169736	PrimaryExpression	"""%s%s%s"""		5169494	0					
ANR	5169737	Argument	kol [ koli ]		5169494	1					
ANR	5169738	ArrayIndexing	kol [ koli ]		5169494	0					
ANR	5169739	Identifier	kol		5169494	0					
ANR	5169740	Identifier	koli		5169494	1					
ANR	5169741	Argument	vline		5169494	2					
ANR	5169742	Identifier	vline		5169494	0					
ANR	5169743	Argument	Color_RESET		5169494	3					
ANR	5169744	Identifier	Color_RESET		5169494	0					
ANR	5169745	ElseStatement	else		5169494	0					
ANR	5169746	CompoundStatement		27:11:854:854	5169494	0					
ANR	5169747	ExpressionStatement	"p -> cb_printf ( "" "" )"	99:5:2412:2430	5169494	0	True				
ANR	5169748	CallExpression	"p -> cb_printf ( "" "" )"		5169494	0					
ANR	5169749	Callee	p -> cb_printf		5169494	0					
ANR	5169750	PtrMemberAccess	p -> cb_printf		5169494	0					
ANR	5169751	Identifier	p		5169494	0					
ANR	5169752	Identifier	cb_printf		5169494	1					
ANR	5169753	ArgumentList	""" """		5169494	1					
ANR	5169754	Argument	""" """		5169494	0					
ANR	5169755	PrimaryExpression	""" """		5169494	0					
ANR	5169756	ExpressionStatement	"p -> cb_printf ( ""\\n"" )"	102:3:2446:2465	5169494	2	True				
ANR	5169757	CallExpression	"p -> cb_printf ( ""\\n"" )"		5169494	0					
ANR	5169758	Callee	p -> cb_printf		5169494	0					
ANR	5169759	PtrMemberAccess	p -> cb_printf		5169494	0					
ANR	5169760	Identifier	p		5169494	0					
ANR	5169761	Identifier	cb_printf		5169494	1					
ANR	5169762	ArgumentList	"""\\n"""		5169494	1					
ANR	5169763	Argument	"""\\n"""		5169494	0					
ANR	5169764	PrimaryExpression	"""\\n"""		5169494	0					
ANR	5169765	ReturnStatement	return ;	104:2:2473:2479	5169494	1	True				
ANR	5169766	ForStatement	for ( i = 0 ; i < rows ; i ++ )		5169494	13					
ANR	5169767	ForInit	i = 0 ;	107:6:2491:2496	5169494	0	True				
ANR	5169768	AssignmentExpression	i = 0		5169494	0		=			
ANR	5169769	Identifier	i		5169494	0					
ANR	5169770	PrimaryExpression	0		5169494	1					
ANR	5169771	Condition	i < rows	107:13:2498:2503	5169494	1	True				
ANR	5169772	RelationalExpression	i < rows		5169494	0		<			
ANR	5169773	Identifier	i		5169494	0					
ANR	5169774	Identifier	rows		5169494	1					
ANR	5169775	PostIncDecOperationExpression	i ++	107:21:2506:2508	5169494	2	True				
ANR	5169776	Identifier	i		5169494	0					
ANR	5169777	IncDec	++		5169494	1					
ANR	5169778	CompoundStatement		37:2:964:997	5169494	3					
ANR	5169779	IdentifierDeclStatement	int threshold = i * ( 0xff / rows ) ;	108:2:2515:2548	5169494	0	True				
ANR	5169780	IdentifierDecl	threshold = i * ( 0xff / rows )		5169494	0					
ANR	5169781	IdentifierDeclType	int		5169494	0					
ANR	5169782	Identifier	threshold		5169494	1					
ANR	5169783	AssignmentExpression	threshold = i * ( 0xff / rows )		5169494	2		=			
ANR	5169784	Identifier	threshold		5169494	0					
ANR	5169785	MultiplicativeExpression	i * ( 0xff / rows )		5169494	1		*			
ANR	5169786	Identifier	i		5169494	0					
ANR	5169787	MultiplicativeExpression	0xff / rows		5169494	1		/			
ANR	5169788	PrimaryExpression	0xff		5169494	0					
ANR	5169789	Identifier	rows		5169494	1					
ANR	5169790	ForStatement	for ( j = 0 ; j < cols ; j ++ )		5169494	1					
ANR	5169791	ForInit	j = 0 ;	109:7:2557:2562	5169494	0	True				
ANR	5169792	AssignmentExpression	j = 0		5169494	0		=			
ANR	5169793	Identifier	j		5169494	0					
ANR	5169794	PrimaryExpression	0		5169494	1					
ANR	5169795	Condition	j < cols	109:14:2564:2571	5169494	1	True				
ANR	5169796	RelationalExpression	j < cols		5169494	0		<			
ANR	5169797	Identifier	j		5169494	0					
ANR	5169798	Identifier	cols		5169494	1					
ANR	5169799	PostIncDecOperationExpression	j ++	109:24:2574:2576	5169494	2	True				
ANR	5169800	Identifier	j		5169494	0					
ANR	5169801	IncDec	++		5169494	1					
ANR	5169802	CompoundStatement		39:3:1033:1059	5169494	3					
ANR	5169803	IdentifierDeclStatement	int realJ = j * len / cols ;	110:3:2584:2610	5169494	0	True				
ANR	5169804	IdentifierDecl	realJ = j * len / cols		5169494	0					
ANR	5169805	IdentifierDeclType	int		5169494	0					
ANR	5169806	Identifier	realJ		5169494	1					
ANR	5169807	AssignmentExpression	realJ = j * len / cols		5169494	2		=			
ANR	5169808	Identifier	realJ		5169494	0					
ANR	5169809	MultiplicativeExpression	j * len / cols		5169494	1		*			
ANR	5169810	Identifier	j		5169494	0					
ANR	5169811	MultiplicativeExpression	len / cols		5169494	1		/			
ANR	5169812	Identifier	len		5169494	0					
ANR	5169813	Identifier	cols		5169494	1					
ANR	5169814	IfStatement	if ( 255 - buf [ realJ ] < threshold )		5169494	1					
ANR	5169815	Condition	255 - buf [ realJ ] < threshold	111:7:2619:2646	5169494	0	True				
ANR	5169816	RelationalExpression	255 - buf [ realJ ] < threshold		5169494	0		<			
ANR	5169817	AdditiveExpression	255 - buf [ realJ ]		5169494	0		-			
ANR	5169818	PrimaryExpression	255		5169494	0					
ANR	5169819	ArrayIndexing	buf [ realJ ]		5169494	1					
ANR	5169820	Identifier	buf		5169494	0					
ANR	5169821	Identifier	realJ		5169494	1					
ANR	5169822	Identifier	threshold		5169494	1					
ANR	5169823	CompoundStatement		40:37:1098:1098	5169494	1					
ANR	5169824	IfStatement	if ( p -> histblock )		5169494	0					
ANR	5169825	Condition	p -> histblock	112:8:2659:2670	5169494	0	True				
ANR	5169826	PtrMemberAccess	p -> histblock		5169494	0					
ANR	5169827	Identifier	p		5169494	0					
ANR	5169828	Identifier	histblock		5169494	1					
ANR	5169829	CompoundStatement		41:22:1122:1122	5169494	1					
ANR	5169830	ExpressionStatement	"p -> cb_printf ( ""%s%s%s"" , Color_BGGRAY , block , Color_RESET )"	113:5:2680:2737	5169494	0	True				
ANR	5169831	CallExpression	"p -> cb_printf ( ""%s%s%s"" , Color_BGGRAY , block , Color_RESET )"		5169494	0					
ANR	5169832	Callee	p -> cb_printf		5169494	0					
ANR	5169833	PtrMemberAccess	p -> cb_printf		5169494	0					
ANR	5169834	Identifier	p		5169494	0					
ANR	5169835	Identifier	cb_printf		5169494	1					
ANR	5169836	ArgumentList	"""%s%s%s"""		5169494	1					
ANR	5169837	Argument	"""%s%s%s"""		5169494	0					
ANR	5169838	PrimaryExpression	"""%s%s%s"""		5169494	0					
ANR	5169839	Argument	Color_BGGRAY		5169494	1					
ANR	5169840	Identifier	Color_BGGRAY		5169494	0					
ANR	5169841	Argument	block		5169494	2					
ANR	5169842	Identifier	block		5169494	0					
ANR	5169843	Argument	Color_RESET		5169494	3					
ANR	5169844	Identifier	Color_RESET		5169494	0					
ANR	5169845	ElseStatement	else		5169494	0					
ANR	5169846	CompoundStatement		43:11:1199:1199	5169494	0					
ANR	5169847	ExpressionStatement	p -> cb_printf ( vline )	115:5:2757:2777	5169494	0	True				
ANR	5169848	CallExpression	p -> cb_printf ( vline )		5169494	0					
ANR	5169849	Callee	p -> cb_printf		5169494	0					
ANR	5169850	PtrMemberAccess	p -> cb_printf		5169494	0					
ANR	5169851	Identifier	p		5169494	0					
ANR	5169852	Identifier	cb_printf		5169494	1					
ANR	5169853	ArgumentList	vline		5169494	1					
ANR	5169854	Argument	vline		5169494	0					
ANR	5169855	Identifier	vline		5169494	0					
ANR	5169856	ElseStatement	else		5169494	0					
ANR	5169857	IfStatement	if ( i + 1 == rows )		5169494	0					
ANR	5169858	Condition	i + 1 == rows	117:14:2799:2811	5169494	0	True				
ANR	5169859	EqualityExpression	i + 1 == rows		5169494	0		==			
ANR	5169860	AdditiveExpression	i + 1		5169494	0		+			
ANR	5169861	Identifier	i		5169494	0					
ANR	5169862	PrimaryExpression	1		5169494	1					
ANR	5169863	Identifier	rows		5169494	1					
ANR	5169864	CompoundStatement		46:29:1263:1263	5169494	1					
ANR	5169865	ExpressionStatement	"p -> cb_printf ( ""_"" )"	118:4:2820:2838	5169494	0	True				
ANR	5169866	CallExpression	"p -> cb_printf ( ""_"" )"		5169494	0					
ANR	5169867	Callee	p -> cb_printf		5169494	0					
ANR	5169868	PtrMemberAccess	p -> cb_printf		5169494	0					
ANR	5169869	Identifier	p		5169494	0					
ANR	5169870	Identifier	cb_printf		5169494	1					
ANR	5169871	ArgumentList	"""_"""		5169494	1					
ANR	5169872	Argument	"""_"""		5169494	0					
ANR	5169873	PrimaryExpression	"""_"""		5169494	0					
ANR	5169874	ElseStatement	else		5169494	0					
ANR	5169875	CompoundStatement		48:10:1299:1299	5169494	0					
ANR	5169876	ExpressionStatement	"p -> cb_printf ( "" "" )"	120:4:2856:2874	5169494	0	True				
ANR	5169877	CallExpression	"p -> cb_printf ( "" "" )"		5169494	0					
ANR	5169878	Callee	p -> cb_printf		5169494	0					
ANR	5169879	PtrMemberAccess	p -> cb_printf		5169494	0					
ANR	5169880	Identifier	p		5169494	0					
ANR	5169881	Identifier	cb_printf		5169494	1					
ANR	5169882	ArgumentList	""" """		5169494	1					
ANR	5169883	Argument	""" """		5169494	0					
ANR	5169884	PrimaryExpression	""" """		5169494	0					
ANR	5169885	ExpressionStatement	"p -> cb_printf ( ""\\n"" )"	123:2:2887:2906	5169494	2	True				
ANR	5169886	CallExpression	"p -> cb_printf ( ""\\n"" )"		5169494	0					
ANR	5169887	Callee	p -> cb_printf		5169494	0					
ANR	5169888	PtrMemberAccess	p -> cb_printf		5169494	0					
ANR	5169889	Identifier	p		5169494	0					
ANR	5169890	Identifier	cb_printf		5169494	1					
ANR	5169891	ArgumentList	"""\\n"""		5169494	1					
ANR	5169892	Argument	"""\\n"""		5169494	0					
ANR	5169893	PrimaryExpression	"""\\n"""		5169494	0					
ANR	5169894	ReturnType	R_API void		5169494	1					
ANR	5169895	Identifier	r_print_columns		5169494	2					
ANR	5169896	ParameterList	"RPrint * p , const ut8 * buf , int len , int height"		5169494	3					
ANR	5169897	Parameter	RPrint * p	72:28:1502:1510	5169494	0	True				
ANR	5169898	ParameterType	RPrint *		5169494	0					
ANR	5169899	Identifier	p		5169494	1					
ANR	5169900	Parameter	const ut8 * buf	72:39:1513:1526	5169494	1	True				
ANR	5169901	ParameterType	const ut8 *		5169494	0					
ANR	5169902	Identifier	buf		5169494	1					
ANR	5169903	Parameter	int len	72:55:1529:1535	5169494	2	True				
ANR	5169904	ParameterType	int		5169494	0					
ANR	5169905	Identifier	len		5169494	1					
ANR	5169906	Parameter	int height	72:64:1538:1547	5169494	3	True				
ANR	5169907	ParameterType	int		5169494	0					
ANR	5169908	Identifier	height		5169494	1					
ANR	5169909	CFGEntryNode	ENTRY		5169494		True				
ANR	5169910	CFGExitNode	EXIT		5169494		True				
ANR	5169911	Symbol	UTF_BLOCK		5169494						
ANR	5169912	Symbol	* pal		5169494						
ANR	5169913	Symbol	RUNE_LINE_VERT		5169494						
ANR	5169914	Symbol	pal -> cjmp		5169494						
ANR	5169915	Symbol	Color_RESET		5169494						
ANR	5169916	Symbol	kol		5169494						
ANR	5169917	Symbol	threshold		5169494						
ANR	5169918	Symbol	Color_BGGRAY		5169494						
ANR	5169919	Symbol	colors		5169494						
ANR	5169920	Symbol	& p -> cons -> context -> pal		5169494						
ANR	5169921	Symbol	pal -> mov		5169494						
ANR	5169922	Symbol	koli		5169494						
ANR	5169923	Symbol	len		5169494						
ANR	5169924	Symbol	p -> cons -> use_utf8		5169494						
ANR	5169925	Symbol	R_PRINT_FLAGS_COLOR		5169494						
ANR	5169926	Symbol	realJ		5169494						
ANR	5169927	Symbol	pal		5169494						
ANR	5169928	Symbol	* p -> cons		5169494						
ANR	5169929	Symbol	block		5169494						
ANR	5169930	Symbol	pal -> jmp		5169494						
ANR	5169931	Symbol	* * p		5169494						
ANR	5169932	Symbol	vline		5169494						
ANR	5169933	Symbol	p -> cons		5169494						
ANR	5169934	Symbol	pal -> nop		5169494						
ANR	5169935	Symbol	cols		5169494						
ANR	5169936	Symbol	height		5169494						
ANR	5169937	Symbol	* realJ		5169494						
ANR	5169938	Symbol	* buf		5169494						
ANR	5169939	Symbol	i		5169494						
ANR	5169940	Symbol	j		5169494						
ANR	5169941	Symbol	rows		5169494						
ANR	5169942	Symbol	p		5169494						
ANR	5169943	Symbol	buf		5169494						
ANR	5169944	Symbol	* kol		5169494						
ANR	5169945	Symbol	pal -> call		5169494						
ANR	5169946	Symbol	* koli		5169494						
ANR	5169947	Symbol	p -> flags		5169494						
ANR	5169948	Symbol	* p		5169494						
ANR	5169949	Symbol	p -> cons -> context		5169494						
ANR	5169950	Symbol	p -> histblock		5169494						
ANR	5169951	Function	r_util_lines_getline	127:0:2914:3279							
ANR	5169952	FunctionDef	"r_util_lines_getline (ut64 * lines_cache , int lines_cache_sz , ut64 off)"		5169951	0					
ANR	5169953	CompoundStatement		127:80:2994:3279	5169951	0					
ANR	5169954	IdentifierDeclStatement	int imax = lines_cache_sz ;	128:1:2997:3022	5169951	0	True				
ANR	5169955	IdentifierDecl	imax = lines_cache_sz		5169951	0					
ANR	5169956	IdentifierDeclType	int		5169951	0					
ANR	5169957	Identifier	imax		5169951	1					
ANR	5169958	AssignmentExpression	imax = lines_cache_sz		5169951	2		=			
ANR	5169959	Identifier	lines_cache_sz		5169951	0					
ANR	5169960	Identifier	lines_cache_sz		5169951	1					
ANR	5169961	IdentifierDeclStatement	int imin = 0 ;	129:1:3025:3037	5169951	1	True				
ANR	5169962	IdentifierDecl	imin = 0		5169951	0					
ANR	5169963	IdentifierDeclType	int		5169951	0					
ANR	5169964	Identifier	imin		5169951	1					
ANR	5169965	AssignmentExpression	imin = 0		5169951	2		=			
ANR	5169966	Identifier	imin		5169951	0					
ANR	5169967	PrimaryExpression	0		5169951	1					
ANR	5169968	IdentifierDeclStatement	int imid = 0 ;	130:1:3040:3052	5169951	2	True				
ANR	5169969	IdentifierDecl	imid = 0		5169951	0					
ANR	5169970	IdentifierDeclType	int		5169951	0					
ANR	5169971	Identifier	imid		5169951	1					
ANR	5169972	AssignmentExpression	imid = 0		5169951	2		=			
ANR	5169973	Identifier	imid		5169951	0					
ANR	5169974	PrimaryExpression	0		5169951	1					
ANR	5169975	WhileStatement	while ( imin <= imax )		5169951	3					
ANR	5169976	Condition	imin <= imax	132:8:3063:3074	5169951	0	True				
ANR	5169977	RelationalExpression	imin <= imax		5169951	0		<=			
ANR	5169978	Identifier	imin		5169951	0					
ANR	5169979	Identifier	imax		5169951	1					
ANR	5169980	CompoundStatement		6:22:82:82	5169951	1					
ANR	5169981	ExpressionStatement	imid = imin + ( ( imax - imin ) / 2 )	133:2:3081:3114	5169951	0	True				
ANR	5169982	AssignmentExpression	imid = imin + ( ( imax - imin ) / 2 )		5169951	0		=			
ANR	5169983	Identifier	imid		5169951	0					
ANR	5169984	AdditiveExpression	imin + ( ( imax - imin ) / 2 )		5169951	1		+			
ANR	5169985	Identifier	imin		5169951	0					
ANR	5169986	MultiplicativeExpression	( imax - imin ) / 2		5169951	1		/			
ANR	5169987	AdditiveExpression	imax - imin		5169951	0		-			
ANR	5169988	Identifier	imax		5169951	0					
ANR	5169989	Identifier	imin		5169951	1					
ANR	5169990	PrimaryExpression	2		5169951	1					
ANR	5169991	IfStatement	if ( lines_cache [ imid ] == off )		5169951	1					
ANR	5169992	Condition	lines_cache [ imid ] == off	134:6:3122:3145	5169951	0	True				
ANR	5169993	EqualityExpression	lines_cache [ imid ] == off		5169951	0		==			
ANR	5169994	ArrayIndexing	lines_cache [ imid ]		5169951	0					
ANR	5169995	Identifier	lines_cache		5169951	0					
ANR	5169996	Identifier	imid		5169951	1					
ANR	5169997	Identifier	off		5169951	1					
ANR	5169998	CompoundStatement		8:32:153:153	5169951	1					
ANR	5169999	ReturnStatement	return imid + 1 ;	135:3:3153:3168	5169951	0	True				
ANR	5170000	AdditiveExpression	imid + 1		5169951	0		+			
ANR	5170001	Identifier	imid		5169951	0					
ANR	5170002	PrimaryExpression	1		5169951	1					
ANR	5170003	IfStatement	if ( lines_cache [ imid ] < off )		5169951	2					
ANR	5170004	Condition	lines_cache [ imid ] < off	137:6:3180:3202	5169951	0	True				
ANR	5170005	RelationalExpression	lines_cache [ imid ] < off		5169951	0		<			
ANR	5170006	ArrayIndexing	lines_cache [ imid ]		5169951	0					
ANR	5170007	Identifier	lines_cache		5169951	0					
ANR	5170008	Identifier	imid		5169951	1					
ANR	5170009	Identifier	off		5169951	1					
ANR	5170010	CompoundStatement		11:31:210:210	5169951	1					
ANR	5170011	ExpressionStatement	imin = imid + 1	138:3:3210:3225	5169951	0	True				
ANR	5170012	AssignmentExpression	imin = imid + 1		5169951	0		=			
ANR	5170013	Identifier	imin		5169951	0					
ANR	5170014	AdditiveExpression	imid + 1		5169951	1		+			
ANR	5170015	Identifier	imid		5169951	0					
ANR	5170016	PrimaryExpression	1		5169951	1					
ANR	5170017	ElseStatement	else		5169951	0					
ANR	5170018	CompoundStatement		13:9:241:241	5169951	0					
ANR	5170019	ExpressionStatement	imax = imid - 1	140:3:3241:3256	5169951	0	True				
ANR	5170020	AssignmentExpression	imax = imid - 1		5169951	0		=			
ANR	5170021	Identifier	imax		5169951	0					
ANR	5170022	AdditiveExpression	imid - 1		5169951	1		-			
ANR	5170023	Identifier	imid		5169951	0					
ANR	5170024	PrimaryExpression	1		5169951	1					
ANR	5170025	ReturnStatement	return imin ;	143:1:3266:3277	5169951	4	True				
ANR	5170026	Identifier	imin		5169951	0					
ANR	5170027	ReturnType	R_API int		5169951	1					
ANR	5170028	Identifier	r_util_lines_getline		5169951	2					
ANR	5170029	ParameterList	"ut64 * lines_cache , int lines_cache_sz , ut64 off"		5169951	3					
ANR	5170030	Parameter	ut64 * lines_cache	127:31:2945:2961	5169951	0	True				
ANR	5170031	ParameterType	ut64 *		5169951	0					
ANR	5170032	Identifier	lines_cache		5169951	1					
ANR	5170033	Parameter	int lines_cache_sz	127:50:2964:2981	5169951	1	True				
ANR	5170034	ParameterType	int		5169951	0					
ANR	5170035	Identifier	lines_cache_sz		5169951	1					
ANR	5170036	Parameter	ut64 off	127:70:2984:2991	5169951	2	True				
ANR	5170037	ParameterType	ut64		5169951	0					
ANR	5170038	Identifier	off		5169951	1					
ANR	5170039	CFGEntryNode	ENTRY		5169951		True				
ANR	5170040	CFGExitNode	EXIT		5169951		True				
ANR	5170041	Symbol	lines_cache		5169951						
ANR	5170042	Symbol	imin		5169951						
ANR	5170043	Symbol	imax		5169951						
ANR	5170044	Symbol	* imid		5169951						
ANR	5170045	Symbol	* lines_cache		5169951						
ANR	5170046	Symbol	lines_cache_sz		5169951						
ANR	5170047	Symbol	off		5169951						
ANR	5170048	Symbol	imid		5169951						
ANR	5170049	Function	r_print_is_interrupted	146:0:3282:3395							
ANR	5170050	FunctionDef	r_print_is_interrupted ()		5170049	0					
ANR	5170051	CompoundStatement		146:36:3318:3395	5170049	0					
ANR	5170052	IfStatement	if ( is_interrupted_cb )		5170049	0					
ANR	5170053	Condition	is_interrupted_cb	147:5:3325:3341	5170049	0	True				
ANR	5170054	Identifier	is_interrupted_cb		5170049	0					
ANR	5170055	CompoundStatement		2:24:25:25	5170049	1					
ANR	5170056	ReturnStatement	return is_interrupted_cb ( ) ;	148:2:3348:3375	5170049	0	True				
ANR	5170057	CallExpression	is_interrupted_cb ( )		5170049	0					
ANR	5170058	Callee	is_interrupted_cb		5170049	0					
ANR	5170059	Identifier	is_interrupted_cb		5170049	0					
ANR	5170060	ArgumentList			5170049	1					
ANR	5170061	ReturnStatement	return false ;	150:1:3381:3393	5170049	1	True				
ANR	5170062	Identifier	false		5170049	0					
ANR	5170063	ReturnType	R_API bool		5170049	1					
ANR	5170064	Identifier	r_print_is_interrupted		5170049	2					
ANR	5170065	ParameterList			5170049	3					
ANR	5170066	CFGEntryNode	ENTRY		5170049		True				
ANR	5170067	CFGExitNode	EXIT		5170049		True				
ANR	5170068	Symbol	false		5170049						
ANR	5170069	Symbol	is_interrupted_cb		5170049						
ANR	5170070	Function	r_print_set_is_interrupted_cb	153:0:3398:3498							
ANR	5170071	FunctionDef	r_print_set_is_interrupted_cb (RPrintIsInterruptedCallback cb)		5170070	0					
ANR	5170072	CompoundStatement		153:73:3471:3498	5170070	0					
ANR	5170073	ExpressionStatement	is_interrupted_cb = cb	154:1:3474:3496	5170070	0	True				
ANR	5170074	AssignmentExpression	is_interrupted_cb = cb		5170070	0		=			
ANR	5170075	Identifier	is_interrupted_cb		5170070	0					
ANR	5170076	Identifier	cb		5170070	1					
ANR	5170077	ReturnType	R_API void		5170070	1					
ANR	5170078	Identifier	r_print_set_is_interrupted_cb		5170070	2					
ANR	5170079	ParameterList	RPrintIsInterruptedCallback cb		5170070	3					
ANR	5170080	Parameter	RPrintIsInterruptedCallback cb	153:41:3439:3468	5170070	0	True				
ANR	5170081	ParameterType	RPrintIsInterruptedCallback		5170070	0					
ANR	5170082	Identifier	cb		5170070	1					
ANR	5170083	CFGEntryNode	ENTRY		5170070		True				
ANR	5170084	CFGExitNode	EXIT		5170070		True				
ANR	5170085	Symbol	cb		5170070						
ANR	5170086	Symbol	is_interrupted_cb		5170070						
ANR	5170087	Function	r_print_mute	157:0:3501:3789							
ANR	5170088	FunctionDef	"r_print_mute (RPrint * p , int x)"		5170087	0					
ANR	5170089	CompoundStatement		157:42:3543:3789	5170087	0					
ANR	5170090	IfStatement	if ( x )		5170087	0					
ANR	5170091	Condition	x	158:5:3550:3550	5170087	0	True				
ANR	5170092	Identifier	x		5170087	0					
ANR	5170093	CompoundStatement		2:8:9:9	5170087	1					
ANR	5170094	IfStatement	if ( p -> cb_printf == & nullprinter )		5170087	0					
ANR	5170095	Condition	p -> cb_printf == & nullprinter	159:6:3561:3588	5170087	0	True				
ANR	5170096	EqualityExpression	p -> cb_printf == & nullprinter		5170087	0		==			
ANR	5170097	PtrMemberAccess	p -> cb_printf		5170087	0					
ANR	5170098	Identifier	p		5170087	0					
ANR	5170099	Identifier	cb_printf		5170087	1					
ANR	5170100	UnaryOperationExpression	& nullprinter		5170087	1					
ANR	5170101	UnaryOperator	&		5170087	0					
ANR	5170102	Identifier	nullprinter		5170087	1					
ANR	5170103	CompoundStatement		3:36:47:47	5170087	1					
ANR	5170104	ReturnStatement	return false ;	160:3:3596:3608	5170087	0	True				
ANR	5170105	Identifier	false		5170087	0					
ANR	5170106	ExpressionStatement	p -> oprintf = p -> cb_printf	162:2:3616:3641	5170087	1	True				
ANR	5170107	AssignmentExpression	p -> oprintf = p -> cb_printf		5170087	0		=			
ANR	5170108	PtrMemberAccess	p -> oprintf		5170087	0					
ANR	5170109	Identifier	p		5170087	0					
ANR	5170110	Identifier	oprintf		5170087	1					
ANR	5170111	PtrMemberAccess	p -> cb_printf		5170087	1					
ANR	5170112	Identifier	p		5170087	0					
ANR	5170113	Identifier	cb_printf		5170087	1					
ANR	5170114	ExpressionStatement	p -> cb_printf = nullprinter	163:2:3645:3671	5170087	2	True				
ANR	5170115	AssignmentExpression	p -> cb_printf = nullprinter		5170087	0		=			
ANR	5170116	PtrMemberAccess	p -> cb_printf		5170087	0					
ANR	5170117	Identifier	p		5170087	0					
ANR	5170118	Identifier	cb_printf		5170087	1					
ANR	5170119	Identifier	nullprinter		5170087	1					
ANR	5170120	ReturnStatement	return true ;	164:2:3675:3686	5170087	3	True				
ANR	5170121	Identifier	true		5170087	0					
ANR	5170122	IfStatement	if ( p -> cb_printf == nullprinter )		5170087	1					
ANR	5170123	Condition	p -> cb_printf == nullprinter	166:5:3696:3722	5170087	0	True				
ANR	5170124	EqualityExpression	p -> cb_printf == nullprinter		5170087	0		==			
ANR	5170125	PtrMemberAccess	p -> cb_printf		5170087	0					
ANR	5170126	Identifier	p		5170087	0					
ANR	5170127	Identifier	cb_printf		5170087	1					
ANR	5170128	Identifier	nullprinter		5170087	1					
ANR	5170129	CompoundStatement		10:34:181:181	5170087	1					
ANR	5170130	ExpressionStatement	p -> cb_printf = p -> oprintf	167:2:3729:3754	5170087	0	True				
ANR	5170131	AssignmentExpression	p -> cb_printf = p -> oprintf		5170087	0		=			
ANR	5170132	PtrMemberAccess	p -> cb_printf		5170087	0					
ANR	5170133	Identifier	p		5170087	0					
ANR	5170134	Identifier	cb_printf		5170087	1					
ANR	5170135	PtrMemberAccess	p -> oprintf		5170087	1					
ANR	5170136	Identifier	p		5170087	0					
ANR	5170137	Identifier	oprintf		5170087	1					
ANR	5170138	ReturnStatement	return true ;	168:2:3758:3769	5170087	1	True				
ANR	5170139	Identifier	true		5170087	0					
ANR	5170140	ReturnStatement	return false ;	170:1:3775:3787	5170087	2	True				
ANR	5170141	Identifier	false		5170087	0					
ANR	5170142	ReturnType	R_API bool		5170087	1					
ANR	5170143	Identifier	r_print_mute		5170087	2					
ANR	5170144	ParameterList	"RPrint * p , int x"		5170087	3					
ANR	5170145	Parameter	RPrint * p	157:24:3525:3533	5170087	0	True				
ANR	5170146	ParameterType	RPrint *		5170087	0					
ANR	5170147	Identifier	p		5170087	1					
ANR	5170148	Parameter	int x	157:35:3536:3540	5170087	1	True				
ANR	5170149	ParameterType	int		5170087	0					
ANR	5170150	Identifier	x		5170087	1					
ANR	5170151	CFGEntryNode	ENTRY		5170087		True				
ANR	5170152	CFGExitNode	EXIT		5170087		True				
ANR	5170153	Symbol	p		5170087						
ANR	5170154	Symbol	& nullprinter		5170087						
ANR	5170155	Symbol	nullprinter		5170087						
ANR	5170156	Symbol	p -> oprintf		5170087						
ANR	5170157	Symbol	x		5170087						
ANR	5170158	Symbol	false		5170087						
ANR	5170159	Symbol	true		5170087						
ANR	5170160	Symbol	* p		5170087						
ANR	5170161	Symbol	p -> cb_printf		5170087						
ANR	5170162	Function	r_print_stereogram_private	173:0:3792:4962							
ANR	5170163	FunctionDef	"r_print_stereogram_private (const char * bump , int w , int h , char * out , int size)"		5170162	0					
ANR	5170164	CompoundStatement		173:91:3883:4962	5170162	0					
ANR	5170165	Statement	static	174:1:3886:3891	5170162	0	True				
ANR	5170166	IdentifierDeclStatement	char data [ 32768 ] ;	174:8:3893:3909	5170162	1	True				
ANR	5170167	IdentifierDecl	data [ 32768 ]		5170162	0					
ANR	5170168	IdentifierDeclType	char [ 32768 ]		5170162	0					
ANR	5170169	Identifier	data		5170162	1					
ANR	5170170	PrimaryExpression	32768		5170162	2					
ANR	5170171	IdentifierDeclStatement	"const char * string = ""Az+|.-=/^@_pT"" ;"	175:1:3919:3955	5170162	2	True				
ANR	5170172	IdentifierDecl	"* string = ""Az+|.-=/^@_pT"""		5170162	0					
ANR	5170173	IdentifierDeclType	const char *		5170162	0					
ANR	5170174	Identifier	string		5170162	1					
ANR	5170175	AssignmentExpression	"* string = ""Az+|.-=/^@_pT"""		5170162	2		=			
ANR	5170176	Identifier	string		5170162	0					
ANR	5170177	PrimaryExpression	"""Az+|.-=/^@_pT"""		5170162	1					
ANR	5170178	IdentifierDeclStatement	const int string_len = strlen ( string ) ;	176:1:3958:3996	5170162	3	True				
ANR	5170179	IdentifierDecl	string_len = strlen ( string )		5170162	0					
ANR	5170180	IdentifierDeclType	const int		5170162	0					
ANR	5170181	Identifier	string_len		5170162	1					
ANR	5170182	AssignmentExpression	string_len = strlen ( string )		5170162	2		=			
ANR	5170183	Identifier	string_len		5170162	0					
ANR	5170184	CallExpression	strlen ( string )		5170162	1					
ANR	5170185	Callee	strlen		5170162	0					
ANR	5170186	Identifier	strlen		5170162	0					
ANR	5170187	ArgumentList	string		5170162	1					
ANR	5170188	Argument	string		5170162	0					
ANR	5170189	Identifier	string		5170162	0					
ANR	5170190	IdentifierDeclStatement	"int x , y , s , l = 0 , l2 = 0 , ch ;"	178:1:4000:4030	5170162	4	True				
ANR	5170191	IdentifierDecl	x		5170162	0					
ANR	5170192	IdentifierDeclType	int		5170162	0					
ANR	5170193	Identifier	x		5170162	1					
ANR	5170194	IdentifierDecl	y		5170162	1					
ANR	5170195	IdentifierDeclType	int		5170162	0					
ANR	5170196	Identifier	y		5170162	1					
ANR	5170197	IdentifierDecl	s		5170162	2					
ANR	5170198	IdentifierDeclType	int		5170162	0					
ANR	5170199	Identifier	s		5170162	1					
ANR	5170200	IdentifierDecl	l = 0		5170162	3					
ANR	5170201	IdentifierDeclType	int		5170162	0					
ANR	5170202	Identifier	l		5170162	1					
ANR	5170203	AssignmentExpression	l = 0		5170162	2		=			
ANR	5170204	Identifier	l		5170162	0					
ANR	5170205	PrimaryExpression	0		5170162	1					
ANR	5170206	IdentifierDecl	l2 = 0		5170162	4					
ANR	5170207	IdentifierDeclType	int		5170162	0					
ANR	5170208	Identifier	l2		5170162	1					
ANR	5170209	AssignmentExpression	l2 = 0		5170162	2		=			
ANR	5170210	Identifier	l2		5170162	0					
ANR	5170211	PrimaryExpression	0		5170162	1					
ANR	5170212	IdentifierDecl	ch		5170162	5					
ANR	5170213	IdentifierDeclType	int		5170162	0					
ANR	5170214	Identifier	ch		5170162	1					
ANR	5170215	IdentifierDeclStatement	int skip = 7 ;	179:1:4033:4045	5170162	5	True				
ANR	5170216	IdentifierDecl	skip = 7		5170162	0					
ANR	5170217	IdentifierDeclType	int		5170162	0					
ANR	5170218	Identifier	skip		5170162	1					
ANR	5170219	AssignmentExpression	skip = 7		5170162	2		=			
ANR	5170220	Identifier	skip		5170162	0					
ANR	5170221	PrimaryExpression	7		5170162	1					
ANR	5170222	IdentifierDeclStatement	"int bumpi = 0 , outi = 0 ;"	180:1:4048:4071	5170162	6	True				
ANR	5170223	IdentifierDecl	bumpi = 0		5170162	0					
ANR	5170224	IdentifierDeclType	int		5170162	0					
ANR	5170225	Identifier	bumpi		5170162	1					
ANR	5170226	AssignmentExpression	bumpi = 0		5170162	2		=			
ANR	5170227	Identifier	bumpi		5170162	0					
ANR	5170228	PrimaryExpression	0		5170162	1					
ANR	5170229	IdentifierDecl	outi = 0		5170162	1					
ANR	5170230	IdentifierDeclType	int		5170162	0					
ANR	5170231	Identifier	outi		5170162	1					
ANR	5170232	AssignmentExpression	outi = 0		5170162	2		=			
ANR	5170233	Identifier	outi		5170162	0					
ANR	5170234	PrimaryExpression	0		5170162	1					
ANR	5170235	IfStatement	if ( ! bump || ! out )		5170162	7					
ANR	5170236	Condition	! bump || ! out	181:5:4078:4090	5170162	0	True				
ANR	5170237	OrExpression	! bump || ! out		5170162	0		||			
ANR	5170238	UnaryOperationExpression	! bump		5170162	0					
ANR	5170239	UnaryOperator	!		5170162	0					
ANR	5170240	Identifier	bump		5170162	1					
ANR	5170241	UnaryOperationExpression	! out		5170162	1					
ANR	5170242	UnaryOperator	!		5170162	0					
ANR	5170243	Identifier	out		5170162	1					
ANR	5170244	CompoundStatement		9:20:209:209	5170162	1					
ANR	5170245	ReturnStatement	return 0 ;	182:2:4097:4105	5170162	0	True				
ANR	5170246	PrimaryExpression	0		5170162	0					
ANR	5170247	ForStatement	for ( y = 0 ; bump [ bumpi ] && outi < size ; y ++ )		5170162	8					
ANR	5170248	ForInit	y = 0 ;	184:6:4116:4121	5170162	0	True				
ANR	5170249	AssignmentExpression	y = 0		5170162	0		=			
ANR	5170250	Identifier	y		5170162	0					
ANR	5170251	PrimaryExpression	0		5170162	1					
ANR	5170252	Condition	bump [ bumpi ] && outi < size	184:13:4123:4148	5170162	1	True				
ANR	5170253	AndExpression	bump [ bumpi ] && outi < size		5170162	0		&&			
ANR	5170254	ArrayIndexing	bump [ bumpi ]		5170162	0					
ANR	5170255	Identifier	bump		5170162	0					
ANR	5170256	Identifier	bumpi		5170162	1					
ANR	5170257	RelationalExpression	outi < size		5170162	1		<			
ANR	5170258	Identifier	outi		5170162	0					
ANR	5170259	Identifier	size		5170162	1					
ANR	5170260	PostIncDecOperationExpression	y ++	184:41:4151:4153	5170162	2	True				
ANR	5170261	Identifier	y		5170162	0					
ANR	5170262	IncDec	++		5170162	1					
ANR	5170263	CompoundStatement		12:46:272:272	5170162	3					
ANR	5170264	ExpressionStatement	l = l2 = 0	185:2:4160:4170	5170162	0	True				
ANR	5170265	AssignmentExpression	l = l2 = 0		5170162	0		=			
ANR	5170266	Identifier	l		5170162	0					
ANR	5170267	AssignmentExpression	l2 = 0		5170162	1		=			
ANR	5170268	Identifier	l2		5170162	0					
ANR	5170269	PrimaryExpression	0		5170162	1					
ANR	5170270	ForStatement	for ( x = 0 ; bump [ bumpi ] && outi < size && x < w ; x ++ )		5170162	1					
ANR	5170271	ForInit	x = 0 ;	186:7:4179:4184	5170162	0	True				
ANR	5170272	AssignmentExpression	x = 0		5170162	0		=			
ANR	5170273	Identifier	x		5170162	0					
ANR	5170274	PrimaryExpression	0		5170162	1					
ANR	5170275	Condition	bump [ bumpi ] && outi < size && x < w	186:14:4186:4220	5170162	1	True				
ANR	5170276	AndExpression	bump [ bumpi ] && outi < size && x < w		5170162	0		&&			
ANR	5170277	ArrayIndexing	bump [ bumpi ]		5170162	0					
ANR	5170278	Identifier	bump		5170162	0					
ANR	5170279	Identifier	bumpi		5170162	1					
ANR	5170280	AndExpression	outi < size && x < w		5170162	1		&&			
ANR	5170281	RelationalExpression	outi < size		5170162	0		<			
ANR	5170282	Identifier	outi		5170162	0					
ANR	5170283	Identifier	size		5170162	1					
ANR	5170284	RelationalExpression	x < w		5170162	1		<			
ANR	5170285	Identifier	x		5170162	0					
ANR	5170286	Identifier	w		5170162	1					
ANR	5170287	PostIncDecOperationExpression	x ++	186:51:4223:4225	5170162	2	True				
ANR	5170288	Identifier	x		5170162	0					
ANR	5170289	IncDec	++		5170162	1					
ANR	5170290	CompoundStatement		14:56:344:344	5170162	3					
ANR	5170291	ExpressionStatement	ch = string [ x % string_len ]	187:3:4233:4260	5170162	0	True				
ANR	5170292	AssignmentExpression	ch = string [ x % string_len ]		5170162	0		=			
ANR	5170293	Identifier	ch		5170162	0					
ANR	5170294	ArrayIndexing	string [ x % string_len ]		5170162	1					
ANR	5170295	Identifier	string		5170162	0					
ANR	5170296	MultiplicativeExpression	x % string_len		5170162	1		%			
ANR	5170297	Identifier	x		5170162	0					
ANR	5170298	Identifier	string_len		5170162	1					
ANR	5170299	IfStatement	if ( ! l && x > skip )		5170162	1					
ANR	5170300	Condition	! l && x > skip	188:7:4269:4282	5170162	0	True				
ANR	5170301	AndExpression	! l && x > skip		5170162	0		&&			
ANR	5170302	UnaryOperationExpression	! l		5170162	0					
ANR	5170303	UnaryOperator	!		5170162	0					
ANR	5170304	Identifier	l		5170162	1					
ANR	5170305	RelationalExpression	x > skip		5170162	1		>			
ANR	5170306	Identifier	x		5170162	0					
ANR	5170307	Identifier	skip		5170162	1					
ANR	5170308	CompoundStatement		16:23:401:401	5170162	1					
ANR	5170309	ExpressionStatement	s = bump [ bumpi ++ ]	189:4:4291:4308	5170162	0	True				
ANR	5170310	AssignmentExpression	s = bump [ bumpi ++ ]		5170162	0		=			
ANR	5170311	Identifier	s		5170162	0					
ANR	5170312	ArrayIndexing	bump [ bumpi ++ ]		5170162	1					
ANR	5170313	Identifier	bump		5170162	0					
ANR	5170314	PostIncDecOperationExpression	bumpi ++		5170162	1					
ANR	5170315	Identifier	bumpi		5170162	0					
ANR	5170316	IncDec	++		5170162	1					
ANR	5170317	IfStatement	if ( s >= '0' && s <= '9' )		5170162	1					
ANR	5170318	Condition	s >= '0' && s <= '9'	190:8:4318:4337	5170162	0	True				
ANR	5170319	AndExpression	s >= '0' && s <= '9'		5170162	0		&&			
ANR	5170320	RelationalExpression	s >= '0'		5170162	0		>=			
ANR	5170321	Identifier	s		5170162	0					
ANR	5170322	PrimaryExpression	'0'		5170162	1					
ANR	5170323	RelationalExpression	s <= '9'		5170162	1		<=			
ANR	5170324	Identifier	s		5170162	0					
ANR	5170325	PrimaryExpression	'9'		5170162	1					
ANR	5170326	CompoundStatement		18:30:456:456	5170162	1					
ANR	5170327	ExpressionStatement	s = '0' - s	191:5:4347:4358	5170162	0	True				
ANR	5170328	AssignmentExpression	s = '0' - s		5170162	0		=			
ANR	5170329	Identifier	s		5170162	0					
ANR	5170330	AdditiveExpression	'0' - s		5170162	1		-			
ANR	5170331	PrimaryExpression	'0'		5170162	0					
ANR	5170332	Identifier	s		5170162	1					
ANR	5170333	ElseStatement	else		5170162	0					
ANR	5170334	CompoundStatement		20:11:487:487	5170162	0					
ANR	5170335	SwitchStatement	switch ( s )		5170162	0					
ANR	5170336	Condition	s	193:13:4386:4386	5170162	0	True				
ANR	5170337	Identifier	s		5170162	0					
ANR	5170338	CompoundStatement		21:16:505:505	5170162	1					
ANR	5170339	Label	case 0 :	194:5:4396:4402	5170162	0	True				
ANR	5170340	ExpressionStatement	bumpi --	195:6:4410:4417	5170162	1	True				
ANR	5170341	PostIncDecOperationExpression	bumpi --		5170162	0					
ANR	5170342	Identifier	bumpi		5170162	0					
ANR	5170343	IncDec	--		5170162	1					
ANR	5170344	Label	case '\\n' :	197:5:4444:4453	5170162	2	True				
ANR	5170345	ExpressionStatement	s = 0	198:6:4461:4466	5170162	3	True				
ANR	5170346	AssignmentExpression	s = 0		5170162	0		=			
ANR	5170347	Identifier	s		5170162	0					
ANR	5170348	PrimaryExpression	0		5170162	1					
ANR	5170349	ExpressionStatement	l = 1	199:6:4474:4479	5170162	4	True				
ANR	5170350	AssignmentExpression	l = 1		5170162	0		=			
ANR	5170351	Identifier	l		5170162	0					
ANR	5170352	PrimaryExpression	1		5170162	1					
ANR	5170353	BreakStatement	break ;	200:6:4487:4492	5170162	5	True				
ANR	5170354	Label	case ' ' :	201:5:4499:4507	5170162	6	True				
ANR	5170355	ExpressionStatement	s = 0	202:6:4515:4520	5170162	7	True				
ANR	5170356	AssignmentExpression	s = 0		5170162	0		=			
ANR	5170357	Identifier	s		5170162	0					
ANR	5170358	PrimaryExpression	0		5170162	1					
ANR	5170359	BreakStatement	break ;	203:6:4528:4533	5170162	8	True				
ANR	5170360	Label	default :	204:5:4540:4547	5170162	9	True				
ANR	5170361	Identifier	default		5170162	0					
ANR	5170362	ExpressionStatement	s = - 2	205:6:4555:4561	5170162	10	True				
ANR	5170363	AssignmentExpression	s = - 2		5170162	0		=			
ANR	5170364	Identifier	s		5170162	0					
ANR	5170365	UnaryOperationExpression	- 2		5170162	1					
ANR	5170366	UnaryOperator	-		5170162	0					
ANR	5170367	PrimaryExpression	2		5170162	1					
ANR	5170368	BreakStatement	break ;	206:6:4569:4574	5170162	11	True				
ANR	5170369	ElseStatement	else		5170162	0					
ANR	5170370	CompoundStatement		37:10:715:715	5170162	0					
ANR	5170371	ExpressionStatement	s = 0	210:4:4605:4610	5170162	0	True				
ANR	5170372	AssignmentExpression	s = 0		5170162	0		=			
ANR	5170373	Identifier	s		5170162	0					
ANR	5170374	PrimaryExpression	0		5170162	1					
ANR	5170375	ExpressionStatement	s += skip	212:3:4620:4629	5170162	2	True				
ANR	5170376	AssignmentExpression	s += skip		5170162	0		+=			
ANR	5170377	Identifier	s		5170162	0					
ANR	5170378	Identifier	skip		5170162	1					
ANR	5170379	ExpressionStatement	s = x - s	213:3:4634:4643	5170162	3	True				
ANR	5170380	AssignmentExpression	s = x - s		5170162	0		=			
ANR	5170381	Identifier	s		5170162	0					
ANR	5170382	AdditiveExpression	x - s		5170162	1		-			
ANR	5170383	Identifier	x		5170162	0					
ANR	5170384	Identifier	s		5170162	1					
ANR	5170385	IfStatement	if ( s >= 0 )		5170162	4					
ANR	5170386	Condition	s >= 0	214:7:4652:4657	5170162	0	True				
ANR	5170387	RelationalExpression	s >= 0		5170162	0		>=			
ANR	5170388	Identifier	s		5170162	0					
ANR	5170389	PrimaryExpression	0		5170162	1					
ANR	5170390	CompoundStatement		42:15:776:776	5170162	1					
ANR	5170391	ExpressionStatement	ch = data [ s ]	215:4:4666:4678	5170162	0	True				
ANR	5170392	AssignmentExpression	ch = data [ s ]		5170162	0		=			
ANR	5170393	Identifier	ch		5170162	0					
ANR	5170394	ArrayIndexing	data [ s ]		5170162	1					
ANR	5170395	Identifier	data		5170162	0					
ANR	5170396	Identifier	s		5170162	1					
ANR	5170397	IfStatement	if ( ! ch )		5170162	5					
ANR	5170398	Condition	! ch	217:7:4692:4694	5170162	0	True				
ANR	5170399	UnaryOperationExpression	! ch		5170162	0					
ANR	5170400	UnaryOperator	!		5170162	0					
ANR	5170401	Identifier	ch		5170162	1					
ANR	5170402	CompoundStatement		45:12:813:813	5170162	1					
ANR	5170403	ExpressionStatement	ch = * string	218:4:4703:4715	5170162	0	True				
ANR	5170404	AssignmentExpression	ch = * string		5170162	0		=			
ANR	5170405	Identifier	ch		5170162	0					
ANR	5170406	UnaryOperationExpression	* string		5170162	1					
ANR	5170407	UnaryOperator	*		5170162	0					
ANR	5170408	Identifier	string		5170162	1					
ANR	5170409	ExpressionStatement	data [ x ] = ch	220:3:4725:4737	5170162	6	True				
ANR	5170410	AssignmentExpression	data [ x ] = ch		5170162	0		=			
ANR	5170411	ArrayIndexing	data [ x ]		5170162	0					
ANR	5170412	Identifier	data		5170162	0					
ANR	5170413	Identifier	x		5170162	1					
ANR	5170414	Identifier	ch		5170162	1					
ANR	5170415	IfStatement	if ( outi >= size )		5170162	7					
ANR	5170416	Condition	outi >= size	221:7:4746:4757	5170162	0	True				
ANR	5170417	RelationalExpression	outi >= size		5170162	0		>=			
ANR	5170418	Identifier	outi		5170162	0					
ANR	5170419	Identifier	size		5170162	1					
ANR	5170420	CompoundStatement		49:21:876:876	5170162	1					
ANR	5170421	BreakStatement	break ;	222:4:4766:4771	5170162	0	True				
ANR	5170422	ExpressionStatement	out [ outi ++ ] = ch	224:3:4781:4797	5170162	8	True				
ANR	5170423	AssignmentExpression	out [ outi ++ ] = ch		5170162	0		=			
ANR	5170424	ArrayIndexing	out [ outi ++ ]		5170162	0					
ANR	5170425	Identifier	out		5170162	0					
ANR	5170426	PostIncDecOperationExpression	outi ++		5170162	1					
ANR	5170427	Identifier	outi		5170162	0					
ANR	5170428	IncDec	++		5170162	1					
ANR	5170429	Identifier	ch		5170162	1					
ANR	5170430	ExpressionStatement	out [ outi ++ ] = '\\n'	226:2:4805:4823	5170162	2	True				
ANR	5170431	AssignmentExpression	out [ outi ++ ] = '\\n'		5170162	0		=			
ANR	5170432	ArrayIndexing	out [ outi ++ ]		5170162	0					
ANR	5170433	Identifier	out		5170162	0					
ANR	5170434	PostIncDecOperationExpression	outi ++		5170162	1					
ANR	5170435	Identifier	outi		5170162	0					
ANR	5170436	IncDec	++		5170162	1					
ANR	5170437	PrimaryExpression	'\\n'		5170162	1					
ANR	5170438	ExpressionStatement	s = 'a'	227:2:4827:4834	5170162	3	True				
ANR	5170439	AssignmentExpression	s = 'a'		5170162	0		=			
ANR	5170440	Identifier	s		5170162	0					
ANR	5170441	PrimaryExpression	'a'		5170162	1					
ANR	5170442	WhileStatement	while ( ! l && s != '\\n' )		5170162	4					
ANR	5170443	Condition	! l && s != '\\n'	228:9:4845:4859	5170162	0	True				
ANR	5170444	AndExpression	! l && s != '\\n'		5170162	0		&&			
ANR	5170445	UnaryOperationExpression	! l		5170162	0					
ANR	5170446	UnaryOperator	!		5170162	0					
ANR	5170447	Identifier	l		5170162	1					
ANR	5170448	EqualityExpression	s != '\\n'		5170162	1		!=			
ANR	5170449	Identifier	s		5170162	0					
ANR	5170450	PrimaryExpression	'\\n'		5170162	1					
ANR	5170451	CompoundStatement		56:26:978:978	5170162	1					
ANR	5170452	ExpressionStatement	s = bump [ bumpi ++ ]	229:3:4867:4884	5170162	0	True				
ANR	5170453	AssignmentExpression	s = bump [ bumpi ++ ]		5170162	0		=			
ANR	5170454	Identifier	s		5170162	0					
ANR	5170455	ArrayIndexing	bump [ bumpi ++ ]		5170162	1					
ANR	5170456	Identifier	bump		5170162	0					
ANR	5170457	PostIncDecOperationExpression	bumpi ++		5170162	1					
ANR	5170458	Identifier	bumpi		5170162	0					
ANR	5170459	IncDec	++		5170162	1					
ANR	5170460	IfStatement	if ( ! s )		5170162	1					
ANR	5170461	Condition	! s	230:7:4893:4894	5170162	0	True				
ANR	5170462	UnaryOperationExpression	! s		5170162	0					
ANR	5170463	UnaryOperator	!		5170162	0					
ANR	5170464	Identifier	s		5170162	1					
ANR	5170465	CompoundStatement		58:11:1013:1013	5170162	1					
ANR	5170466	ExpressionStatement	bumpi --	231:4:4903:4910	5170162	0	True				
ANR	5170467	PostIncDecOperationExpression	bumpi --		5170162	0					
ANR	5170468	Identifier	bumpi		5170162	0					
ANR	5170469	IncDec	--		5170162	1					
ANR	5170470	BreakStatement	break ;	232:4:4916:4921	5170162	1	True				
ANR	5170471	ExpressionStatement	out [ outi ] = 0	236:1:4936:4949	5170162	9	True				
ANR	5170472	AssignmentExpression	out [ outi ] = 0		5170162	0		=			
ANR	5170473	ArrayIndexing	out [ outi ]		5170162	0					
ANR	5170474	Identifier	out		5170162	0					
ANR	5170475	Identifier	outi		5170162	1					
ANR	5170476	PrimaryExpression	0		5170162	1					
ANR	5170477	ReturnStatement	return 1 ;	237:1:4952:4960	5170162	10	True				
ANR	5170478	PrimaryExpression	1		5170162	0					
ANR	5170479	ReturnType	static int		5170162	1					
ANR	5170480	Identifier	r_print_stereogram_private		5170162	2					
ANR	5170481	ParameterList	"const char * bump , int w , int h , char * out , int size"		5170162	3					
ANR	5170482	Parameter	const char * bump	173:38:3830:3845	5170162	0	True				
ANR	5170483	ParameterType	const char *		5170162	0					
ANR	5170484	Identifier	bump		5170162	1					
ANR	5170485	Parameter	int w	173:56:3848:3852	5170162	1	True				
ANR	5170486	ParameterType	int		5170162	0					
ANR	5170487	Identifier	w		5170162	1					
ANR	5170488	Parameter	int h	173:63:3855:3859	5170162	2	True				
ANR	5170489	ParameterType	int		5170162	0					
ANR	5170490	Identifier	h		5170162	1					
ANR	5170491	Parameter	char * out	173:70:3862:3870	5170162	3	True				
ANR	5170492	ParameterType	char *		5170162	0					
ANR	5170493	Identifier	out		5170162	1					
ANR	5170494	Parameter	int size	173:81:3873:3880	5170162	4	True				
ANR	5170495	ParameterType	int		5170162	0					
ANR	5170496	Identifier	size		5170162	1					
ANR	5170497	CFGEntryNode	ENTRY		5170162		True				
ANR	5170498	CFGExitNode	EXIT		5170162		True				
ANR	5170499	Symbol	* bumpi		5170162						
ANR	5170500	Symbol	* x		5170162						
ANR	5170501	Symbol	data		5170162						
ANR	5170502	Symbol	string		5170162						
ANR	5170503	Symbol	l2		5170162						
ANR	5170504	Symbol	* string		5170162						
ANR	5170505	Symbol	skip		5170162						
ANR	5170506	Symbol	out		5170162						
ANR	5170507	Symbol	strlen		5170162						
ANR	5170508	Symbol	bump		5170162						
ANR	5170509	Symbol	* string_len		5170162						
ANR	5170510	Symbol	ch		5170162						
ANR	5170511	Symbol	string_len		5170162						
ANR	5170512	Symbol	h		5170162						
ANR	5170513	Symbol	bumpi		5170162						
ANR	5170514	Symbol	l		5170162						
ANR	5170515	Symbol	outi		5170162						
ANR	5170516	Symbol	* bump		5170162						
ANR	5170517	Symbol	s		5170162						
ANR	5170518	Symbol	* outi		5170162						
ANR	5170519	Symbol	size		5170162						
ANR	5170520	Symbol	w		5170162						
ANR	5170521	Symbol	x		5170162						
ANR	5170522	Symbol	* out		5170162						
ANR	5170523	Symbol	y		5170162						
ANR	5170524	Symbol	* s		5170162						
ANR	5170525	Symbol	* data		5170162						
ANR	5170526	Function	r_print_stereogram	240:0:4965:5323							
ANR	5170527	FunctionDef	"r_print_stereogram (const char * bump , int w , int h)"		5170526	0					
ANR	5170528	CompoundStatement		240:63:5028:5323	5170526	0					
ANR	5170529	IdentifierDeclStatement	ut64 size ;	241:1:5031:5040	5170526	0	True				
ANR	5170530	IdentifierDecl	size		5170526	0					
ANR	5170531	IdentifierDeclType	ut64		5170526	0					
ANR	5170532	Identifier	size		5170526	1					
ANR	5170533	IdentifierDeclStatement	char * out ;	242:1:5043:5052	5170526	1	True				
ANR	5170534	IdentifierDecl	* out		5170526	0					
ANR	5170535	IdentifierDeclType	char *		5170526	0					
ANR	5170536	Identifier	out		5170526	1					
ANR	5170537	IfStatement	if ( w < 1 || h < 1 )		5170526	2					
ANR	5170538	Condition	w < 1 || h < 1	243:5:5059:5072	5170526	0	True				
ANR	5170539	OrExpression	w < 1 || h < 1		5170526	0		||			
ANR	5170540	RelationalExpression	w < 1		5170526	0		<			
ANR	5170541	Identifier	w		5170526	0					
ANR	5170542	PrimaryExpression	1		5170526	1					
ANR	5170543	RelationalExpression	h < 1		5170526	1		<			
ANR	5170544	Identifier	h		5170526	0					
ANR	5170545	PrimaryExpression	1		5170526	1					
ANR	5170546	CompoundStatement		4:21:46:46	5170526	1					
ANR	5170547	ReturnStatement	return NULL ;	244:2:5079:5090	5170526	0	True				
ANR	5170548	Identifier	NULL		5170526	0					
ANR	5170549	ExpressionStatement	size = w * ( ut64 ) h * 2	246:1:5096:5119	5170526	3	True				
ANR	5170550	AssignmentExpression	size = w * ( ut64 ) h * 2		5170526	0		=			
ANR	5170551	Identifier	size		5170526	0					
ANR	5170552	MultiplicativeExpression	w * ( ut64 ) h * 2		5170526	1		*			
ANR	5170553	Identifier	w		5170526	0					
ANR	5170554	MultiplicativeExpression	( ut64 ) h * 2		5170526	1		*			
ANR	5170555	CastExpression	( ut64 ) h		5170526	0					
ANR	5170556	CastTarget	ut64		5170526	0					
ANR	5170557	Identifier	h		5170526	1					
ANR	5170558	PrimaryExpression	2		5170526	1					
ANR	5170559	IfStatement	if ( size > UT32_MAX )		5170526	4					
ANR	5170560	Condition	size > UT32_MAX	247:5:5126:5140	5170526	0	True				
ANR	5170561	RelationalExpression	size > UT32_MAX		5170526	0		>			
ANR	5170562	Identifier	size		5170526	0					
ANR	5170563	Identifier	UT32_MAX		5170526	1					
ANR	5170564	CompoundStatement		8:22:114:114	5170526	1					
ANR	5170565	ReturnStatement	return NULL ;	248:2:5147:5158	5170526	0	True				
ANR	5170566	Identifier	NULL		5170526	0					
ANR	5170567	ExpressionStatement	"out = calloc ( 1 , size * 2 )"	250:1:5164:5190	5170526	5	True				
ANR	5170568	AssignmentExpression	"out = calloc ( 1 , size * 2 )"		5170526	0		=			
ANR	5170569	Identifier	out		5170526	0					
ANR	5170570	CallExpression	"calloc ( 1 , size * 2 )"		5170526	1					
ANR	5170571	Callee	calloc		5170526	0					
ANR	5170572	Identifier	calloc		5170526	0					
ANR	5170573	ArgumentList	1		5170526	1					
ANR	5170574	Argument	1		5170526	0					
ANR	5170575	PrimaryExpression	1		5170526	0					
ANR	5170576	Argument	size * 2		5170526	1					
ANR	5170577	MultiplicativeExpression	size * 2		5170526	0		*			
ANR	5170578	Identifier	size		5170526	0					
ANR	5170579	PrimaryExpression	2		5170526	1					
ANR	5170580	IfStatement	if ( ! out )		5170526	6					
ANR	5170581	Condition	! out	251:5:5197:5200	5170526	0	True				
ANR	5170582	UnaryOperationExpression	! out		5170526	0					
ANR	5170583	UnaryOperator	!		5170526	0					
ANR	5170584	Identifier	out		5170526	1					
ANR	5170585	CompoundStatement		12:11:174:174	5170526	1					
ANR	5170586	ReturnStatement	return NULL ;	252:2:5207:5218	5170526	0	True				
ANR	5170587	Identifier	NULL		5170526	0					
ANR	5170588	ExpressionStatement	"( void ) r_print_stereogram_private ( bump , w , h , out , size )"	255:1:5251:5308	5170526	7	True				
ANR	5170589	CastExpression	"( void ) r_print_stereogram_private ( bump , w , h , out , size )"		5170526	0					
ANR	5170590	CastTarget	void		5170526	0					
ANR	5170591	CallExpression	"r_print_stereogram_private ( bump , w , h , out , size )"		5170526	1					
ANR	5170592	Callee	r_print_stereogram_private		5170526	0					
ANR	5170593	Identifier	r_print_stereogram_private		5170526	0					
ANR	5170594	ArgumentList	bump		5170526	1					
ANR	5170595	Argument	bump		5170526	0					
ANR	5170596	Identifier	bump		5170526	0					
ANR	5170597	Argument	w		5170526	1					
ANR	5170598	Identifier	w		5170526	0					
ANR	5170599	Argument	h		5170526	2					
ANR	5170600	Identifier	h		5170526	0					
ANR	5170601	Argument	out		5170526	3					
ANR	5170602	Identifier	out		5170526	0					
ANR	5170603	Argument	size		5170526	4					
ANR	5170604	Identifier	size		5170526	0					
ANR	5170605	ReturnStatement	return out ;	256:1:5311:5321	5170526	8	True				
ANR	5170606	Identifier	out		5170526	0					
ANR	5170607	ReturnType	R_API char *		5170526	1					
ANR	5170608	Identifier	r_print_stereogram		5170526	2					
ANR	5170609	ParameterList	"const char * bump , int w , int h"		5170526	3					
ANR	5170610	Parameter	const char * bump	240:31:4996:5011	5170526	0	True				
ANR	5170611	ParameterType	const char *		5170526	0					
ANR	5170612	Identifier	bump		5170526	1					
ANR	5170613	Parameter	int w	240:49:5014:5018	5170526	1	True				
ANR	5170614	ParameterType	int		5170526	0					
ANR	5170615	Identifier	w		5170526	1					
ANR	5170616	Parameter	int h	240:56:5021:5025	5170526	2	True				
ANR	5170617	ParameterType	int		5170526	0					
ANR	5170618	Identifier	h		5170526	1					
ANR	5170619	CFGEntryNode	ENTRY		5170526		True				
ANR	5170620	CFGExitNode	EXIT		5170526		True				
ANR	5170621	Symbol	UT32_MAX		5170526						
ANR	5170622	Symbol	NULL		5170526						
ANR	5170623	Symbol	size		5170526						
ANR	5170624	Symbol	w		5170526						
ANR	5170625	Symbol	bump		5170526						
ANR	5170626	Symbol	h		5170526						
ANR	5170627	Symbol	calloc		5170526						
ANR	5170628	Symbol	out		5170526						
ANR	5170629	Function	r_print_stereogram_bytes	260:0:5356:5974							
ANR	5170630	FunctionDef	"r_print_stereogram_bytes (const ut8 * buf , int len)"		5170629	0					
ANR	5170631	CompoundStatement		260:62:5418:5974	5170629	0					
ANR	5170632	IdentifierDeclStatement	"int i , bumpi ;"	261:1:5421:5433	5170629	0	True				
ANR	5170633	IdentifierDecl	i		5170629	0					
ANR	5170634	IdentifierDeclType	int		5170629	0					
ANR	5170635	Identifier	i		5170629	1					
ANR	5170636	IdentifierDecl	bumpi		5170629	1					
ANR	5170637	IdentifierDeclType	int		5170629	0					
ANR	5170638	Identifier	bumpi		5170629	1					
ANR	5170639	IdentifierDeclStatement	char * ret ;	262:1:5436:5445	5170629	1	True				
ANR	5170640	IdentifierDecl	* ret		5170629	0					
ANR	5170641	IdentifierDeclType	char *		5170629	0					
ANR	5170642	Identifier	ret		5170629	1					
ANR	5170643	IdentifierDeclStatement	int scr_width = 80 ;	263:1:5448:5466	5170629	2	True				
ANR	5170644	IdentifierDecl	scr_width = 80		5170629	0					
ANR	5170645	IdentifierDeclType	int		5170629	0					
ANR	5170646	Identifier	scr_width		5170629	1					
ANR	5170647	AssignmentExpression	scr_width = 80		5170629	2		=			
ANR	5170648	Identifier	scr_width		5170629	0					
ANR	5170649	PrimaryExpression	80		5170629	1					
ANR	5170650	IfStatement	if ( ! buf || len < 1 )		5170629	3					
ANR	5170651	Condition	! buf || len < 1	264:5:5473:5487	5170629	0	True				
ANR	5170652	OrExpression	! buf || len < 1		5170629	0		||			
ANR	5170653	UnaryOperationExpression	! buf		5170629	0					
ANR	5170654	UnaryOperator	!		5170629	0					
ANR	5170655	Identifier	buf		5170629	1					
ANR	5170656	RelationalExpression	len < 1		5170629	1		<			
ANR	5170657	Identifier	len		5170629	0					
ANR	5170658	PrimaryExpression	1		5170629	1					
ANR	5170659	CompoundStatement		5:22:71:71	5170629	1					
ANR	5170660	ReturnStatement	return NULL ;	265:2:5494:5505	5170629	0	True				
ANR	5170661	Identifier	NULL		5170629	0					
ANR	5170662	IdentifierDeclStatement	int cols = scr_width ;	268:1:5554:5574	5170629	4	True				
ANR	5170663	IdentifierDecl	cols = scr_width		5170629	0					
ANR	5170664	IdentifierDeclType	int		5170629	0					
ANR	5170665	Identifier	cols		5170629	1					
ANR	5170666	AssignmentExpression	cols = scr_width		5170629	2		=			
ANR	5170667	Identifier	scr_width		5170629	0					
ANR	5170668	Identifier	scr_width		5170629	1					
ANR	5170669	IdentifierDeclStatement	int rows = len / cols ;	269:1:5577:5598	5170629	5	True				
ANR	5170670	IdentifierDecl	rows = len / cols		5170629	0					
ANR	5170671	IdentifierDeclType	int		5170629	0					
ANR	5170672	Identifier	rows		5170629	1					
ANR	5170673	AssignmentExpression	rows = len / cols		5170629	2		=			
ANR	5170674	Identifier	rows		5170629	0					
ANR	5170675	MultiplicativeExpression	len / cols		5170629	1		/			
ANR	5170676	Identifier	len		5170629	0					
ANR	5170677	Identifier	cols		5170629	1					
ANR	5170678	IdentifierDeclStatement	int size = ( 2 + cols ) * rows ;	271:1:5602:5630	5170629	6	True				
ANR	5170679	IdentifierDecl	size = ( 2 + cols ) * rows		5170629	0					
ANR	5170680	IdentifierDeclType	int		5170629	0					
ANR	5170681	Identifier	size		5170629	1					
ANR	5170682	AssignmentExpression	size = ( 2 + cols ) * rows		5170629	2		=			
ANR	5170683	Identifier	size		5170629	0					
ANR	5170684	MultiplicativeExpression	( 2 + cols ) * rows		5170629	1		*			
ANR	5170685	AdditiveExpression	2 + cols		5170629	0		+			
ANR	5170686	PrimaryExpression	2		5170629	0					
ANR	5170687	Identifier	cols		5170629	1					
ANR	5170688	Identifier	rows		5170629	1					
ANR	5170689	IdentifierDeclStatement	char * bump = malloc ( size + 1 ) ;	272:1:5633:5663	5170629	7	True				
ANR	5170690	IdentifierDecl	* bump = malloc ( size + 1 )		5170629	0					
ANR	5170691	IdentifierDeclType	char *		5170629	0					
ANR	5170692	Identifier	bump		5170629	1					
ANR	5170693	AssignmentExpression	* bump = malloc ( size + 1 )		5170629	2		=			
ANR	5170694	Identifier	bump		5170629	0					
ANR	5170695	CallExpression	malloc ( size + 1 )		5170629	1					
ANR	5170696	Callee	malloc		5170629	0					
ANR	5170697	Identifier	malloc		5170629	0					
ANR	5170698	ArgumentList	size + 1		5170629	1					
ANR	5170699	Argument	size + 1		5170629	0					
ANR	5170700	AdditiveExpression	size + 1		5170629	0		+			
ANR	5170701	Identifier	size		5170629	0					
ANR	5170702	PrimaryExpression	1		5170629	1					
ANR	5170703	IfStatement	if ( ! bump )		5170629	8					
ANR	5170704	Condition	! bump	273:5:5690:5694	5170629	0	True				
ANR	5170705	UnaryOperationExpression	! bump		5170629	0					
ANR	5170706	UnaryOperator	!		5170629	0					
ANR	5170707	Identifier	bump		5170629	1					
ANR	5170708	CompoundStatement		14:12:278:278	5170629	1					
ANR	5170709	ReturnStatement	return NULL ;	274:2:5701:5712	5170629	0	True				
ANR	5170710	Identifier	NULL		5170629	0					
ANR	5170711	ForStatement	for ( i = bumpi = 0 ; bumpi < size && i < len ; i ++ )		5170629	9					
ANR	5170712	ForInit	i = bumpi = 0 ;	276:6:5723:5736	5170629	0	True				
ANR	5170713	AssignmentExpression	i = bumpi = 0		5170629	0		=			
ANR	5170714	Identifier	i		5170629	0					
ANR	5170715	AssignmentExpression	bumpi = 0		5170629	1		=			
ANR	5170716	Identifier	bumpi		5170629	0					
ANR	5170717	PrimaryExpression	0		5170629	1					
ANR	5170718	Condition	bumpi < size && i < len	276:21:5738:5760	5170629	1	True				
ANR	5170719	AndExpression	bumpi < size && i < len		5170629	0		&&			
ANR	5170720	RelationalExpression	bumpi < size		5170629	0		<			
ANR	5170721	Identifier	bumpi		5170629	0					
ANR	5170722	Identifier	size		5170629	1					
ANR	5170723	RelationalExpression	i < len		5170629	1		<			
ANR	5170724	Identifier	i		5170629	0					
ANR	5170725	Identifier	len		5170629	1					
ANR	5170726	PostIncDecOperationExpression	i ++	276:46:5763:5765	5170629	2	True				
ANR	5170727	Identifier	i		5170629	0					
ANR	5170728	IncDec	++		5170629	1					
ANR	5170729	CompoundStatement		18:2:353:372	5170629	3					
ANR	5170730	IdentifierDeclStatement	int v = buf [ i ] / 26 ;	277:2:5772:5791	5170629	0	True				
ANR	5170731	IdentifierDecl	v = buf [ i ] / 26		5170629	0					
ANR	5170732	IdentifierDeclType	int		5170629	0					
ANR	5170733	Identifier	v		5170629	1					
ANR	5170734	AssignmentExpression	v = buf [ i ] / 26		5170629	2		=			
ANR	5170735	Identifier	v		5170629	0					
ANR	5170736	MultiplicativeExpression	buf [ i ] / 26		5170629	1		/			
ANR	5170737	ArrayIndexing	buf [ i ]		5170629	0					
ANR	5170738	Identifier	buf		5170629	0					
ANR	5170739	Identifier	i		5170629	1					
ANR	5170740	PrimaryExpression	26		5170629	1					
ANR	5170741	IfStatement	if ( i && ! ( i % scr_width ) )		5170629	1					
ANR	5170742	Condition	i && ! ( i % scr_width )	278:6:5799:5819	5170629	0	True				
ANR	5170743	AndExpression	i && ! ( i % scr_width )		5170629	0		&&			
ANR	5170744	Identifier	i		5170629	0					
ANR	5170745	UnaryOperationExpression	! ( i % scr_width )		5170629	1					
ANR	5170746	UnaryOperator	!		5170629	0					
ANR	5170747	MultiplicativeExpression	i % scr_width		5170629	1		%			
ANR	5170748	Identifier	i		5170629	0					
ANR	5170749	Identifier	scr_width		5170629	1					
ANR	5170750	CompoundStatement		19:29:403:403	5170629	1					
ANR	5170751	ExpressionStatement	bump [ bumpi ++ ] = '\\n'	279:3:5827:5847	5170629	0	True				
ANR	5170752	AssignmentExpression	bump [ bumpi ++ ] = '\\n'		5170629	0		=			
ANR	5170753	ArrayIndexing	bump [ bumpi ++ ]		5170629	0					
ANR	5170754	Identifier	bump		5170629	0					
ANR	5170755	PostIncDecOperationExpression	bumpi ++		5170629	1					
ANR	5170756	Identifier	bumpi		5170629	0					
ANR	5170757	IncDec	++		5170629	1					
ANR	5170758	PrimaryExpression	'\\n'		5170629	1					
ANR	5170759	ExpressionStatement	bump [ bumpi ++ ] = '0' + v	281:2:5855:5878	5170629	2	True				
ANR	5170760	AssignmentExpression	bump [ bumpi ++ ] = '0' + v		5170629	0		=			
ANR	5170761	ArrayIndexing	bump [ bumpi ++ ]		5170629	0					
ANR	5170762	Identifier	bump		5170629	0					
ANR	5170763	PostIncDecOperationExpression	bumpi ++		5170629	1					
ANR	5170764	Identifier	bumpi		5170629	0					
ANR	5170765	IncDec	++		5170629	1					
ANR	5170766	AdditiveExpression	'0' + v		5170629	1		+			
ANR	5170767	PrimaryExpression	'0'		5170629	0					
ANR	5170768	Identifier	v		5170629	1					
ANR	5170769	ExpressionStatement	bump [ bumpi ] = 0	283:1:5884:5899	5170629	10	True				
ANR	5170770	AssignmentExpression	bump [ bumpi ] = 0		5170629	0		=			
ANR	5170771	ArrayIndexing	bump [ bumpi ]		5170629	0					
ANR	5170772	Identifier	bump		5170629	0					
ANR	5170773	Identifier	bumpi		5170629	1					
ANR	5170774	PrimaryExpression	0		5170629	1					
ANR	5170775	ExpressionStatement	"ret = r_print_stereogram ( bump , cols , rows )"	284:1:5902:5945	5170629	11	True				
ANR	5170776	AssignmentExpression	"ret = r_print_stereogram ( bump , cols , rows )"		5170629	0		=			
ANR	5170777	Identifier	ret		5170629	0					
ANR	5170778	CallExpression	"r_print_stereogram ( bump , cols , rows )"		5170629	1					
ANR	5170779	Callee	r_print_stereogram		5170629	0					
ANR	5170780	Identifier	r_print_stereogram		5170629	0					
ANR	5170781	ArgumentList	bump		5170629	1					
ANR	5170782	Argument	bump		5170629	0					
ANR	5170783	Identifier	bump		5170629	0					
ANR	5170784	Argument	cols		5170629	1					
ANR	5170785	Identifier	cols		5170629	0					
ANR	5170786	Argument	rows		5170629	2					
ANR	5170787	Identifier	rows		5170629	0					
ANR	5170788	ExpressionStatement	free ( bump )	285:1:5948:5959	5170629	12	True				
ANR	5170789	CallExpression	free ( bump )		5170629	0					
ANR	5170790	Callee	free		5170629	0					
ANR	5170791	Identifier	free		5170629	0					
ANR	5170792	ArgumentList	bump		5170629	1					
ANR	5170793	Argument	bump		5170629	0					
ANR	5170794	Identifier	bump		5170629	0					
ANR	5170795	ReturnStatement	return ret ;	286:1:5962:5972	5170629	13	True				
ANR	5170796	Identifier	ret		5170629	0					
ANR	5170797	ReturnType	R_API char *		5170629	1					
ANR	5170798	Identifier	r_print_stereogram_bytes		5170629	2					
ANR	5170799	ParameterList	"const ut8 * buf , int len"		5170629	3					
ANR	5170800	Parameter	const ut8 * buf	260:37:5393:5406	5170629	0	True				
ANR	5170801	ParameterType	const ut8 *		5170629	0					
ANR	5170802	Identifier	buf		5170629	1					
ANR	5170803	Parameter	int len	260:53:5409:5415	5170629	1	True				
ANR	5170804	ParameterType	int		5170629	0					
ANR	5170805	Identifier	len		5170629	1					
ANR	5170806	CFGEntryNode	ENTRY		5170629		True				
ANR	5170807	CFGExitNode	EXIT		5170629		True				
ANR	5170808	Symbol	ret		5170629						
ANR	5170809	Symbol	malloc		5170629						
ANR	5170810	Symbol	* bumpi		5170629						
ANR	5170811	Symbol	* buf		5170629						
ANR	5170812	Symbol	NULL		5170629						
ANR	5170813	Symbol	r_print_stereogram		5170629						
ANR	5170814	Symbol	bumpi		5170629						
ANR	5170815	Symbol	i		5170629						
ANR	5170816	Symbol	rows		5170629						
ANR	5170817	Symbol	* bump		5170629						
ANR	5170818	Symbol	buf		5170629						
ANR	5170819	Symbol	* i		5170629						
ANR	5170820	Symbol	len		5170629						
ANR	5170821	Symbol	size		5170629						
ANR	5170822	Symbol	v		5170629						
ANR	5170823	Symbol	bump		5170629						
ANR	5170824	Symbol	scr_width		5170629						
ANR	5170825	Symbol	cols		5170629						
ANR	5170826	Function	r_print_stereogram_print	289:0:5977:6315							
ANR	5170827	FunctionDef	"r_print_stereogram_print (RPrint * p , const char * ret)"		5170826	0					
ANR	5170828	CompoundStatement		289:64:6041:6315	5170826	0					
ANR	5170829	IdentifierDeclStatement	int i ;	290:1:6044:6049	5170826	0	True				
ANR	5170830	IdentifierDecl	i		5170826	0					
ANR	5170831	IdentifierDeclType	int		5170826	0					
ANR	5170832	Identifier	i		5170826	1					
ANR	5170833	IdentifierDeclStatement	const int use_color = p -> flags & R_PRINT_FLAGS_COLOR ;	291:1:6052:6104	5170826	1	True				
ANR	5170834	IdentifierDecl	use_color = p -> flags & R_PRINT_FLAGS_COLOR		5170826	0					
ANR	5170835	IdentifierDeclType	const int		5170826	0					
ANR	5170836	Identifier	use_color		5170826	1					
ANR	5170837	AssignmentExpression	use_color = p -> flags & R_PRINT_FLAGS_COLOR		5170826	2		=			
ANR	5170838	Identifier	use_color		5170826	0					
ANR	5170839	BitAndExpression	p -> flags & R_PRINT_FLAGS_COLOR		5170826	1		&			
ANR	5170840	PtrMemberAccess	p -> flags		5170826	0					
ANR	5170841	Identifier	p		5170826	0					
ANR	5170842	Identifier	flags		5170826	1					
ANR	5170843	Identifier	R_PRINT_FLAGS_COLOR		5170826	1					
ANR	5170844	IfStatement	if ( ! ret )		5170826	2					
ANR	5170845	Condition	! ret	292:5:6111:6114	5170826	0	True				
ANR	5170846	UnaryOperationExpression	! ret		5170826	0					
ANR	5170847	UnaryOperator	!		5170826	0					
ANR	5170848	Identifier	ret		5170826	1					
ANR	5170849	CompoundStatement		4:11:75:75	5170826	1					
ANR	5170850	ReturnStatement	return ;	293:2:6121:6127	5170826	0	True				
ANR	5170851	IfStatement	if ( use_color )		5170826	3					
ANR	5170852	Condition	use_color	295:5:6137:6145	5170826	0	True				
ANR	5170853	Identifier	use_color		5170826	0					
ANR	5170854	CompoundStatement		7:16:106:106	5170826	1					
ANR	5170855	ForStatement	for ( i = 0 ; ret [ i ] ; i ++ )		5170826	0					
ANR	5170856	ForInit	i = 0 ;	296:7:6157:6162	5170826	0	True				
ANR	5170857	AssignmentExpression	i = 0		5170826	0		=			
ANR	5170858	Identifier	i		5170826	0					
ANR	5170859	PrimaryExpression	0		5170826	1					
ANR	5170860	Condition	ret [ i ]	296:14:6164:6169	5170826	1	True				
ANR	5170861	ArrayIndexing	ret [ i ]		5170826	0					
ANR	5170862	Identifier	ret		5170826	0					
ANR	5170863	Identifier	i		5170826	1					
ANR	5170864	PostIncDecOperationExpression	i ++	296:22:6172:6174	5170826	2	True				
ANR	5170865	Identifier	i		5170826	0					
ANR	5170866	IncDec	++		5170826	1					
ANR	5170867	CompoundStatement		8:27:135:135	5170826	3					
ANR	5170868	ExpressionStatement	"p -> cb_printf ( ""\\x1b[%dm%c"" , 30 + ( ret [ i ] % 8 ) , ret [ i ] )"	297:3:6182:6236	5170826	0	True				
ANR	5170869	CallExpression	"p -> cb_printf ( ""\\x1b[%dm%c"" , 30 + ( ret [ i ] % 8 ) , ret [ i ] )"		5170826	0					
ANR	5170870	Callee	p -> cb_printf		5170826	0					
ANR	5170871	PtrMemberAccess	p -> cb_printf		5170826	0					
ANR	5170872	Identifier	p		5170826	0					
ANR	5170873	Identifier	cb_printf		5170826	1					
ANR	5170874	ArgumentList	"""\\x1b[%dm%c"""		5170826	1					
ANR	5170875	Argument	"""\\x1b[%dm%c"""		5170826	0					
ANR	5170876	PrimaryExpression	"""\\x1b[%dm%c"""		5170826	0					
ANR	5170877	Argument	30 + ( ret [ i ] % 8 )		5170826	1					
ANR	5170878	AdditiveExpression	30 + ( ret [ i ] % 8 )		5170826	0		+			
ANR	5170879	PrimaryExpression	30		5170826	0					
ANR	5170880	MultiplicativeExpression	ret [ i ] % 8		5170826	1		%			
ANR	5170881	ArrayIndexing	ret [ i ]		5170826	0					
ANR	5170882	Identifier	ret		5170826	0					
ANR	5170883	Identifier	i		5170826	1					
ANR	5170884	PrimaryExpression	8		5170826	1					
ANR	5170885	Argument	ret [ i ]		5170826	2					
ANR	5170886	ArrayIndexing	ret [ i ]		5170826	0					
ANR	5170887	Identifier	ret		5170826	0					
ANR	5170888	Identifier	i		5170826	1					
ANR	5170889	ExpressionStatement	"p -> cb_printf ( ""\\x1b[0m\\n"" )"	299:2:6244:6270	5170826	1	True				
ANR	5170890	CallExpression	"p -> cb_printf ( ""\\x1b[0m\\n"" )"		5170826	0					
ANR	5170891	Callee	p -> cb_printf		5170826	0					
ANR	5170892	PtrMemberAccess	p -> cb_printf		5170826	0					
ANR	5170893	Identifier	p		5170826	0					
ANR	5170894	Identifier	cb_printf		5170826	1					
ANR	5170895	ArgumentList	"""\\x1b[0m\\n"""		5170826	1					
ANR	5170896	Argument	"""\\x1b[0m\\n"""		5170826	0					
ANR	5170897	PrimaryExpression	"""\\x1b[0m\\n"""		5170826	0					
ANR	5170898	ElseStatement	else		5170826	0					
ANR	5170899	CompoundStatement		12:8:238:238	5170826	0					
ANR	5170900	ExpressionStatement	"p -> cb_printf ( ""%s\\n"" , ret )"	301:2:6284:6310	5170826	0	True				
ANR	5170901	CallExpression	"p -> cb_printf ( ""%s\\n"" , ret )"		5170826	0					
ANR	5170902	Callee	p -> cb_printf		5170826	0					
ANR	5170903	PtrMemberAccess	p -> cb_printf		5170826	0					
ANR	5170904	Identifier	p		5170826	0					
ANR	5170905	Identifier	cb_printf		5170826	1					
ANR	5170906	ArgumentList	"""%s\\n"""		5170826	1					
ANR	5170907	Argument	"""%s\\n"""		5170826	0					
ANR	5170908	PrimaryExpression	"""%s\\n"""		5170826	0					
ANR	5170909	Argument	ret		5170826	1					
ANR	5170910	Identifier	ret		5170826	0					
ANR	5170911	ReturnType	R_API void		5170826	1					
ANR	5170912	Identifier	r_print_stereogram_print		5170826	2					
ANR	5170913	ParameterList	"RPrint * p , const char * ret"		5170826	3					
ANR	5170914	Parameter	RPrint * p	289:36:6013:6021	5170826	0	True				
ANR	5170915	ParameterType	RPrint *		5170826	0					
ANR	5170916	Identifier	p		5170826	1					
ANR	5170917	Parameter	const char * ret	289:47:6024:6038	5170826	1	True				
ANR	5170918	ParameterType	const char *		5170826	0					
ANR	5170919	Identifier	ret		5170826	1					
ANR	5170920	CFGEntryNode	ENTRY		5170826		True				
ANR	5170921	CFGExitNode	EXIT		5170826		True				
ANR	5170922	Symbol	p		5170826						
ANR	5170923	Symbol	ret		5170826						
ANR	5170924	Symbol	* i		5170826						
ANR	5170925	Symbol	R_PRINT_FLAGS_COLOR		5170826						
ANR	5170926	Symbol	i		5170826						
ANR	5170927	Symbol	p -> flags		5170826						
ANR	5170928	Symbol	* p		5170826						
ANR	5170929	Symbol	* ret		5170826						
ANR	5170930	Symbol	use_color		5170826						
ANR	5170931	Function	r_print_new	305:0:6318:7360							
ANR	5170932	FunctionDef	r_print_new ()		5170931	0					
ANR	5170933	CompoundStatement		305:28:6346:7360	5170931	0					
ANR	5170934	IdentifierDeclStatement	RPrint * p = R_NEW0 ( RPrint ) ;	306:1:6349:6376	5170931	0	True				
ANR	5170935	IdentifierDecl	* p = R_NEW0 ( RPrint )		5170931	0					
ANR	5170936	IdentifierDeclType	RPrint *		5170931	0					
ANR	5170937	Identifier	p		5170931	1					
ANR	5170938	AssignmentExpression	* p = R_NEW0 ( RPrint )		5170931	2		=			
ANR	5170939	Identifier	p		5170931	0					
ANR	5170940	CallExpression	R_NEW0 ( RPrint )		5170931	1					
ANR	5170941	Callee	R_NEW0		5170931	0					
ANR	5170942	Identifier	R_NEW0		5170931	0					
ANR	5170943	ArgumentList	RPrint		5170931	1					
ANR	5170944	Argument	RPrint		5170931	0					
ANR	5170945	Identifier	RPrint		5170931	0					
ANR	5170946	IfStatement	if ( ! p )		5170931	1					
ANR	5170947	Condition	! p	307:5:6383:6384	5170931	0	True				
ANR	5170948	UnaryOperationExpression	! p		5170931	0					
ANR	5170949	UnaryOperator	!		5170931	0					
ANR	5170950	Identifier	p		5170931	1					
ANR	5170951	CompoundStatement		3:9:40:40	5170931	1					
ANR	5170952	ReturnStatement	return NULL ;	308:2:6391:6402	5170931	0	True				
ANR	5170953	Identifier	NULL		5170931	0					
ANR	5170954	ExpressionStatement	"strcpy ( p -> datefmt , ""%Y-%m-%d %H:%M:%S %z"" )"	310:1:6408:6451	5170931	2	True				
ANR	5170955	CallExpression	"strcpy ( p -> datefmt , ""%Y-%m-%d %H:%M:%S %z"" )"		5170931	0					
ANR	5170956	Callee	strcpy		5170931	0					
ANR	5170957	Identifier	strcpy		5170931	0					
ANR	5170958	ArgumentList	p -> datefmt		5170931	1					
ANR	5170959	Argument	p -> datefmt		5170931	0					
ANR	5170960	PtrMemberAccess	p -> datefmt		5170931	0					
ANR	5170961	Identifier	p		5170931	0					
ANR	5170962	Identifier	datefmt		5170931	1					
ANR	5170963	Argument	"""%Y-%m-%d %H:%M:%S %z"""		5170931	1					
ANR	5170964	PrimaryExpression	"""%Y-%m-%d %H:%M:%S %z"""		5170931	0					
ANR	5170965	ExpressionStatement	r_io_bind_init ( p -> iob )	311:1:6454:6477	5170931	3	True				
ANR	5170966	CallExpression	r_io_bind_init ( p -> iob )		5170931	0					
ANR	5170967	Callee	r_io_bind_init		5170931	0					
ANR	5170968	Identifier	r_io_bind_init		5170931	0					
ANR	5170969	ArgumentList	p -> iob		5170931	1					
ANR	5170970	Argument	p -> iob		5170931	0					
ANR	5170971	PtrMemberAccess	p -> iob		5170931	0					
ANR	5170972	Identifier	p		5170931	0					
ANR	5170973	Identifier	iob		5170931	1					
ANR	5170974	ExpressionStatement	p -> pairs = true	312:1:6480:6495	5170931	4	True				
ANR	5170975	AssignmentExpression	p -> pairs = true		5170931	0		=			
ANR	5170976	PtrMemberAccess	p -> pairs		5170931	0					
ANR	5170977	Identifier	p		5170931	0					
ANR	5170978	Identifier	pairs		5170931	1					
ANR	5170979	Identifier	true		5170931	1					
ANR	5170980	ExpressionStatement	p -> resetbg = true	313:1:6498:6515	5170931	5	True				
ANR	5170981	AssignmentExpression	p -> resetbg = true		5170931	0		=			
ANR	5170982	PtrMemberAccess	p -> resetbg		5170931	0					
ANR	5170983	Identifier	p		5170931	0					
ANR	5170984	Identifier	resetbg		5170931	1					
ANR	5170985	Identifier	true		5170931	1					
ANR	5170986	ExpressionStatement	p -> cb_printf = libc_printf	314:1:6518:6544	5170931	6	True				
ANR	5170987	AssignmentExpression	p -> cb_printf = libc_printf		5170931	0		=			
ANR	5170988	PtrMemberAccess	p -> cb_printf		5170931	0					
ANR	5170989	Identifier	p		5170931	0					
ANR	5170990	Identifier	cb_printf		5170931	1					
ANR	5170991	Identifier	libc_printf		5170931	1					
ANR	5170992	ExpressionStatement	p -> cb_eprintf = libc_eprintf	315:1:6547:6575	5170931	7	True				
ANR	5170993	AssignmentExpression	p -> cb_eprintf = libc_eprintf		5170931	0		=			
ANR	5170994	PtrMemberAccess	p -> cb_eprintf		5170931	0					
ANR	5170995	Identifier	p		5170931	0					
ANR	5170996	Identifier	cb_eprintf		5170931	1					
ANR	5170997	Identifier	libc_eprintf		5170931	1					
ANR	5170998	ExpressionStatement	p -> oprintf = nullprinter	316:1:6578:6602	5170931	8	True				
ANR	5170999	AssignmentExpression	p -> oprintf = nullprinter		5170931	0		=			
ANR	5171000	PtrMemberAccess	p -> oprintf		5170931	0					
ANR	5171001	Identifier	p		5170931	0					
ANR	5171002	Identifier	oprintf		5170931	1					
ANR	5171003	Identifier	nullprinter		5170931	1					
ANR	5171004	ExpressionStatement	p -> bits = 32	317:1:6605:6617	5170931	9	True				
ANR	5171005	AssignmentExpression	p -> bits = 32		5170931	0		=			
ANR	5171006	PtrMemberAccess	p -> bits		5170931	0					
ANR	5171007	Identifier	p		5170931	0					
ANR	5171008	Identifier	bits		5170931	1					
ANR	5171009	PrimaryExpression	32		5170931	1					
ANR	5171010	ExpressionStatement	p -> stride = 0	318:1:6620:6633	5170931	10	True				
ANR	5171011	AssignmentExpression	p -> stride = 0		5170931	0		=			
ANR	5171012	PtrMemberAccess	p -> stride		5170931	0					
ANR	5171013	Identifier	p		5170931	0					
ANR	5171014	Identifier	stride		5170931	1					
ANR	5171015	PrimaryExpression	0		5170931	1					
ANR	5171016	ExpressionStatement	p -> bytespace = 0	319:1:6636:6652	5170931	11	True				
ANR	5171017	AssignmentExpression	p -> bytespace = 0		5170931	0		=			
ANR	5171018	PtrMemberAccess	p -> bytespace		5170931	0					
ANR	5171019	Identifier	p		5170931	0					
ANR	5171020	Identifier	bytespace		5170931	1					
ANR	5171021	PrimaryExpression	0		5170931	1					
ANR	5171022	ExpressionStatement	p -> interrupt = 0	320:1:6655:6671	5170931	12	True				
ANR	5171023	AssignmentExpression	p -> interrupt = 0		5170931	0		=			
ANR	5171024	PtrMemberAccess	p -> interrupt		5170931	0					
ANR	5171025	Identifier	p		5170931	0					
ANR	5171026	Identifier	interrupt		5170931	1					
ANR	5171027	PrimaryExpression	0		5170931	1					
ANR	5171028	ExpressionStatement	p -> big_endian = false	321:1:6674:6695	5170931	13	True				
ANR	5171029	AssignmentExpression	p -> big_endian = false		5170931	0		=			
ANR	5171030	PtrMemberAccess	p -> big_endian		5170931	0					
ANR	5171031	Identifier	p		5170931	0					
ANR	5171032	Identifier	big_endian		5170931	1					
ANR	5171033	Identifier	false		5170931	1					
ANR	5171034	ExpressionStatement	p -> datezone = 0	322:1:6698:6713	5170931	14	True				
ANR	5171035	AssignmentExpression	p -> datezone = 0		5170931	0		=			
ANR	5171036	PtrMemberAccess	p -> datezone		5170931	0					
ANR	5171037	Identifier	p		5170931	0					
ANR	5171038	Identifier	datezone		5170931	1					
ANR	5171039	PrimaryExpression	0		5170931	1					
ANR	5171040	ExpressionStatement	p -> col = 0	323:1:6716:6726	5170931	15	True				
ANR	5171041	AssignmentExpression	p -> col = 0		5170931	0		=			
ANR	5171042	PtrMemberAccess	p -> col		5170931	0					
ANR	5171043	Identifier	p		5170931	0					
ANR	5171044	Identifier	col		5170931	1					
ANR	5171045	PrimaryExpression	0		5170931	1					
ANR	5171046	ExpressionStatement	p -> width = 78	324:1:6729:6742	5170931	16	True				
ANR	5171047	AssignmentExpression	p -> width = 78		5170931	0		=			
ANR	5171048	PtrMemberAccess	p -> width		5170931	0					
ANR	5171049	Identifier	p		5170931	0					
ANR	5171050	Identifier	width		5170931	1					
ANR	5171051	PrimaryExpression	78		5170931	1					
ANR	5171052	ExpressionStatement	p -> cols = 16	325:1:6745:6757	5170931	17	True				
ANR	5171053	AssignmentExpression	p -> cols = 16		5170931	0		=			
ANR	5171054	PtrMemberAccess	p -> cols		5170931	0					
ANR	5171055	Identifier	p		5170931	0					
ANR	5171056	Identifier	cols		5170931	1					
ANR	5171057	PrimaryExpression	16		5170931	1					
ANR	5171058	ExpressionStatement	p -> cur_enabled = false	326:1:6760:6782	5170931	18	True				
ANR	5171059	AssignmentExpression	p -> cur_enabled = false		5170931	0		=			
ANR	5171060	PtrMemberAccess	p -> cur_enabled		5170931	0					
ANR	5171061	Identifier	p		5170931	0					
ANR	5171062	Identifier	cur_enabled		5170931	1					
ANR	5171063	Identifier	false		5170931	1					
ANR	5171064	ExpressionStatement	p -> cur = p -> ocur = - 1	327:1:6785:6806	5170931	19	True				
ANR	5171065	AssignmentExpression	p -> cur = p -> ocur = - 1		5170931	0		=			
ANR	5171066	PtrMemberAccess	p -> cur		5170931	0					
ANR	5171067	Identifier	p		5170931	0					
ANR	5171068	Identifier	cur		5170931	1					
ANR	5171069	AssignmentExpression	p -> ocur = - 1		5170931	1		=			
ANR	5171070	PtrMemberAccess	p -> ocur		5170931	0					
ANR	5171071	Identifier	p		5170931	0					
ANR	5171072	Identifier	ocur		5170931	1					
ANR	5171073	UnaryOperationExpression	- 1		5170931	1					
ANR	5171074	UnaryOperator	-		5170931	0					
ANR	5171075	PrimaryExpression	1		5170931	1					
ANR	5171076	ExpressionStatement	p -> formats = sdb_new0 ( )	328:1:6809:6833	5170931	20	True				
ANR	5171077	AssignmentExpression	p -> formats = sdb_new0 ( )		5170931	0		=			
ANR	5171078	PtrMemberAccess	p -> formats		5170931	0					
ANR	5171079	Identifier	p		5170931	0					
ANR	5171080	Identifier	formats		5170931	1					
ANR	5171081	CallExpression	sdb_new0 ( )		5170931	1					
ANR	5171082	Callee	sdb_new0		5170931	0					
ANR	5171083	Identifier	sdb_new0		5170931	0					
ANR	5171084	ArgumentList			5170931	1					
ANR	5171085	ExpressionStatement	p -> addrmod = 4	329:1:6836:6850	5170931	21	True				
ANR	5171086	AssignmentExpression	p -> addrmod = 4		5170931	0		=			
ANR	5171087	PtrMemberAccess	p -> addrmod		5170931	0					
ANR	5171088	Identifier	p		5170931	0					
ANR	5171089	Identifier	addrmod		5170931	1					
ANR	5171090	PrimaryExpression	4		5170931	1					
ANR	5171091	ExpressionStatement	p -> flags = R_PRINT_FLAGS_COLOR | R_PRINT_FLAGS_OFFSET | R_PRINT_FLAGS_HEADER | R_PRINT_FLAGS_ADDRMOD	330:1:6853:6961	5170931	22	True				
ANR	5171092	AssignmentExpression	p -> flags = R_PRINT_FLAGS_COLOR | R_PRINT_FLAGS_OFFSET | R_PRINT_FLAGS_HEADER | R_PRINT_FLAGS_ADDRMOD		5170931	0		=			
ANR	5171093	PtrMemberAccess	p -> flags		5170931	0					
ANR	5171094	Identifier	p		5170931	0					
ANR	5171095	Identifier	flags		5170931	1					
ANR	5171096	InclusiveOrExpression	R_PRINT_FLAGS_COLOR | R_PRINT_FLAGS_OFFSET | R_PRINT_FLAGS_HEADER | R_PRINT_FLAGS_ADDRMOD		5170931	1		|			
ANR	5171097	Identifier	R_PRINT_FLAGS_COLOR		5170931	0					
ANR	5171098	InclusiveOrExpression	R_PRINT_FLAGS_OFFSET | R_PRINT_FLAGS_HEADER | R_PRINT_FLAGS_ADDRMOD		5170931	1		|			
ANR	5171099	Identifier	R_PRINT_FLAGS_OFFSET		5170931	0					
ANR	5171100	InclusiveOrExpression	R_PRINT_FLAGS_HEADER | R_PRINT_FLAGS_ADDRMOD		5170931	1		|			
ANR	5171101	Identifier	R_PRINT_FLAGS_HEADER		5170931	0					
ANR	5171102	Identifier	R_PRINT_FLAGS_ADDRMOD		5170931	1					
ANR	5171103	ExpressionStatement	p -> seggrn = 4	335:1:6964:6977	5170931	23	True				
ANR	5171104	AssignmentExpression	p -> seggrn = 4		5170931	0		=			
ANR	5171105	PtrMemberAccess	p -> seggrn		5170931	0					
ANR	5171106	Identifier	p		5170931	0					
ANR	5171107	Identifier	seggrn		5170931	1					
ANR	5171108	PrimaryExpression	4		5170931	1					
ANR	5171109	ExpressionStatement	p -> zoom = R_NEW0 ( RPrintZoom )	336:1:6980:7009	5170931	24	True				
ANR	5171110	AssignmentExpression	p -> zoom = R_NEW0 ( RPrintZoom )		5170931	0		=			
ANR	5171111	PtrMemberAccess	p -> zoom		5170931	0					
ANR	5171112	Identifier	p		5170931	0					
ANR	5171113	Identifier	zoom		5170931	1					
ANR	5171114	CallExpression	R_NEW0 ( RPrintZoom )		5170931	1					
ANR	5171115	Callee	R_NEW0		5170931	0					
ANR	5171116	Identifier	R_NEW0		5170931	0					
ANR	5171117	ArgumentList	RPrintZoom		5170931	1					
ANR	5171118	Argument	RPrintZoom		5170931	0					
ANR	5171119	Identifier	RPrintZoom		5170931	0					
ANR	5171120	ExpressionStatement	p -> reg = NULL	337:1:7012:7025	5170931	25	True				
ANR	5171121	AssignmentExpression	p -> reg = NULL		5170931	0		=			
ANR	5171122	PtrMemberAccess	p -> reg		5170931	0					
ANR	5171123	Identifier	p		5170931	0					
ANR	5171124	Identifier	reg		5170931	1					
ANR	5171125	Identifier	NULL		5170931	1					
ANR	5171126	ExpressionStatement	p -> get_register = NULL	338:1:7028:7050	5170931	26	True				
ANR	5171127	AssignmentExpression	p -> get_register = NULL		5170931	0		=			
ANR	5171128	PtrMemberAccess	p -> get_register		5170931	0					
ANR	5171129	Identifier	p		5170931	0					
ANR	5171130	Identifier	get_register		5170931	1					
ANR	5171131	Identifier	NULL		5170931	1					
ANR	5171132	ExpressionStatement	p -> get_register_value = NULL	339:1:7053:7081	5170931	27	True				
ANR	5171133	AssignmentExpression	p -> get_register_value = NULL		5170931	0		=			
ANR	5171134	PtrMemberAccess	p -> get_register_value		5170931	0					
ANR	5171135	Identifier	p		5170931	0					
ANR	5171136	Identifier	get_register_value		5170931	1					
ANR	5171137	Identifier	NULL		5170931	1					
ANR	5171138	ExpressionStatement	p -> lines_cache = NULL	340:1:7084:7105	5170931	28	True				
ANR	5171139	AssignmentExpression	p -> lines_cache = NULL		5170931	0		=			
ANR	5171140	PtrMemberAccess	p -> lines_cache		5170931	0					
ANR	5171141	Identifier	p		5170931	0					
ANR	5171142	Identifier	lines_cache		5170931	1					
ANR	5171143	Identifier	NULL		5170931	1					
ANR	5171144	ExpressionStatement	p -> calc_row_offsets = true	341:1:7108:7134	5170931	29	True				
ANR	5171145	AssignmentExpression	p -> calc_row_offsets = true		5170931	0		=			
ANR	5171146	PtrMemberAccess	p -> calc_row_offsets		5170931	0					
ANR	5171147	Identifier	p		5170931	0					
ANR	5171148	Identifier	calc_row_offsets		5170931	1					
ANR	5171149	Identifier	true		5170931	1					
ANR	5171150	ExpressionStatement	p -> row_offsets_sz = 0	342:1:7137:7158	5170931	30	True				
ANR	5171151	AssignmentExpression	p -> row_offsets_sz = 0		5170931	0		=			
ANR	5171152	PtrMemberAccess	p -> row_offsets_sz		5170931	0					
ANR	5171153	Identifier	p		5170931	0					
ANR	5171154	Identifier	row_offsets_sz		5170931	1					
ANR	5171155	PrimaryExpression	0		5170931	1					
ANR	5171156	ExpressionStatement	p -> row_offsets = NULL	343:1:7161:7182	5170931	31	True				
ANR	5171157	AssignmentExpression	p -> row_offsets = NULL		5170931	0		=			
ANR	5171158	PtrMemberAccess	p -> row_offsets		5170931	0					
ANR	5171159	Identifier	p		5170931	0					
ANR	5171160	Identifier	row_offsets		5170931	1					
ANR	5171161	Identifier	NULL		5170931	1					
ANR	5171162	ExpressionStatement	p -> vflush = true	344:1:7185:7201	5170931	32	True				
ANR	5171163	AssignmentExpression	p -> vflush = true		5170931	0		=			
ANR	5171164	PtrMemberAccess	p -> vflush		5170931	0					
ANR	5171165	Identifier	p		5170931	0					
ANR	5171166	Identifier	vflush		5170931	1					
ANR	5171167	Identifier	true		5170931	1					
ANR	5171168	ExpressionStatement	p -> screen_bounds = 0	345:1:7204:7224	5170931	33	True				
ANR	5171169	AssignmentExpression	p -> screen_bounds = 0		5170931	0		=			
ANR	5171170	PtrMemberAccess	p -> screen_bounds		5170931	0					
ANR	5171171	Identifier	p		5170931	0					
ANR	5171172	Identifier	screen_bounds		5170931	1					
ANR	5171173	PrimaryExpression	0		5170931	1					
ANR	5171174	ExpressionStatement	p -> esc_bslash = false	346:1:7227:7248	5170931	34	True				
ANR	5171175	AssignmentExpression	p -> esc_bslash = false		5170931	0		=			
ANR	5171176	PtrMemberAccess	p -> esc_bslash		5170931	0					
ANR	5171177	Identifier	p		5170931	0					
ANR	5171178	Identifier	esc_bslash		5170931	1					
ANR	5171179	Identifier	false		5170931	1					
ANR	5171180	ExpressionStatement	p -> strconv_mode = NULL	347:1:7251:7273	5170931	35	True				
ANR	5171181	AssignmentExpression	p -> strconv_mode = NULL		5170931	0		=			
ANR	5171182	PtrMemberAccess	p -> strconv_mode		5170931	0					
ANR	5171183	Identifier	p		5170931	0					
ANR	5171184	Identifier	strconv_mode		5170931	1					
ANR	5171185	Identifier	NULL		5170931	1					
ANR	5171186	ExpressionStatement	"memset ( & p -> consbind , 0 , sizeof ( p -> consbind ) )"	348:1:7276:7322	5170931	36	True				
ANR	5171187	CallExpression	"memset ( & p -> consbind , 0 , sizeof ( p -> consbind ) )"		5170931	0					
ANR	5171188	Callee	memset		5170931	0					
ANR	5171189	Identifier	memset		5170931	0					
ANR	5171190	ArgumentList	& p -> consbind		5170931	1					
ANR	5171191	Argument	& p -> consbind		5170931	0					
ANR	5171192	UnaryOperationExpression	& p -> consbind		5170931	0					
ANR	5171193	UnaryOperator	&		5170931	0					
ANR	5171194	PtrMemberAccess	p -> consbind		5170931	1					
ANR	5171195	Identifier	p		5170931	0					
ANR	5171196	Identifier	consbind		5170931	1					
ANR	5171197	Argument	0		5170931	1					
ANR	5171198	PrimaryExpression	0		5170931	0					
ANR	5171199	Argument	sizeof ( p -> consbind )		5170931	2					
ANR	5171200	SizeofExpression	sizeof ( p -> consbind )		5170931	0					
ANR	5171201	Sizeof	sizeof		5170931	0					
ANR	5171202	PtrMemberAccess	p -> consbind		5170931	1					
ANR	5171203	Identifier	p		5170931	0					
ANR	5171204	Identifier	consbind		5170931	1					
ANR	5171205	ExpressionStatement	p -> io_unalloc_ch = '.'	349:1:7325:7347	5170931	37	True				
ANR	5171206	AssignmentExpression	p -> io_unalloc_ch = '.'		5170931	0		=			
ANR	5171207	PtrMemberAccess	p -> io_unalloc_ch		5170931	0					
ANR	5171208	Identifier	p		5170931	0					
ANR	5171209	Identifier	io_unalloc_ch		5170931	1					
ANR	5171210	PrimaryExpression	'.'		5170931	1					
ANR	5171211	ReturnStatement	return p ;	350:1:7350:7358	5170931	38	True				
ANR	5171212	Identifier	p		5170931	0					
ANR	5171213	ReturnType	R_API RPrint *		5170931	1					
ANR	5171214	Identifier	r_print_new		5170931	2					
ANR	5171215	ParameterList			5170931	3					
ANR	5171216	CFGEntryNode	ENTRY		5170931		True				
ANR	5171217	CFGExitNode	EXIT		5170931		True				
ANR	5171218	Symbol	p -> ocur		5170931						
ANR	5171219	Symbol	R_PRINT_FLAGS_ADDRMOD		5170931						
ANR	5171220	Symbol	p -> cur		5170931						
ANR	5171221	Symbol	p -> stride		5170931						
ANR	5171222	Symbol	p -> formats		5170931						
ANR	5171223	Symbol	p -> oprintf		5170931						
ANR	5171224	Symbol	p -> get_register_value		5170931						
ANR	5171225	Symbol	p -> datefmt		5170931						
ANR	5171226	Symbol	p -> width		5170931						
ANR	5171227	Symbol	p -> seggrn		5170931						
ANR	5171228	Symbol	p -> cols		5170931						
ANR	5171229	Symbol	NULL		5170931						
ANR	5171230	Symbol	p -> pairs		5170931						
ANR	5171231	Symbol	p -> bits		5170931						
ANR	5171232	Symbol	p -> vflush		5170931						
ANR	5171233	Symbol	p -> lines_cache		5170931						
ANR	5171234	Symbol	& p -> consbind		5170931						
ANR	5171235	Symbol	R_NEW0		5170931						
ANR	5171236	Symbol	RPrintZoom		5170931						
ANR	5171237	Symbol	p -> io_unalloc_ch		5170931						
ANR	5171238	Symbol	p -> iob		5170931						
ANR	5171239	Symbol	p -> addrmod		5170931						
ANR	5171240	Symbol	p -> strconv_mode		5170931						
ANR	5171241	Symbol	true		5170931						
ANR	5171242	Symbol	p -> get_register		5170931						
ANR	5171243	Symbol	p -> resetbg		5170931						
ANR	5171244	Symbol	nullprinter		5170931						
ANR	5171245	Symbol	p -> cur_enabled		5170931						
ANR	5171246	Symbol	p -> datezone		5170931						
ANR	5171247	Symbol	p -> screen_bounds		5170931						
ANR	5171248	Symbol	p -> interrupt		5170931						
ANR	5171249	Symbol	p -> cb_eprintf		5170931						
ANR	5171250	Symbol	p -> col		5170931						
ANR	5171251	Symbol	libc_printf		5170931						
ANR	5171252	Symbol	R_PRINT_FLAGS_OFFSET		5170931						
ANR	5171253	Symbol	R_PRINT_FLAGS_COLOR		5170931						
ANR	5171254	Symbol	p -> reg		5170931						
ANR	5171255	Symbol	p -> esc_bslash		5170931						
ANR	5171256	Symbol	p -> cb_printf		5170931						
ANR	5171257	Symbol	R_PRINT_FLAGS_HEADER		5170931						
ANR	5171258	Symbol	sdb_new0		5170931						
ANR	5171259	Symbol	p -> zoom		5170931						
ANR	5171260	Symbol	false		5170931						
ANR	5171261	Symbol	p		5170931						
ANR	5171262	Symbol	RPrint		5170931						
ANR	5171263	Symbol	p -> calc_row_offsets		5170931						
ANR	5171264	Symbol	libc_eprintf		5170931						
ANR	5171265	Symbol	p -> big_endian		5170931						
ANR	5171266	Symbol	p -> row_offsets		5170931						
ANR	5171267	Symbol	p -> bytespace		5170931						
ANR	5171268	Symbol	p -> row_offsets_sz		5170931						
ANR	5171269	Symbol	p -> flags		5170931						
ANR	5171270	Symbol	* p		5170931						
ANR	5171271	Symbol	p -> consbind		5170931						
ANR	5171272	Function	r_print_free	353:0:7363:7658							
ANR	5171273	FunctionDef	r_print_free (RPrint * p)		5171272	0					
ANR	5171274	CompoundStatement		353:38:7401:7658	5171272	0					
ANR	5171275	IfStatement	if ( ! p )		5171272	0					
ANR	5171276	Condition	! p	354:5:7408:7409	5171272	0	True				
ANR	5171277	UnaryOperationExpression	! p		5171272	0					
ANR	5171278	UnaryOperator	!		5171272	0					
ANR	5171279	Identifier	p		5171272	1					
ANR	5171280	CompoundStatement		2:9:10:10	5171272	1					
ANR	5171281	ReturnStatement	return NULL ;	355:2:7416:7427	5171272	0	True				
ANR	5171282	Identifier	NULL		5171272	0					
ANR	5171283	ExpressionStatement	sdb_free ( p -> formats )	357:1:7433:7454	5171272	1	True				
ANR	5171284	CallExpression	sdb_free ( p -> formats )		5171272	0					
ANR	5171285	Callee	sdb_free		5171272	0					
ANR	5171286	Identifier	sdb_free		5171272	0					
ANR	5171287	ArgumentList	p -> formats		5171272	1					
ANR	5171288	Argument	p -> formats		5171272	0					
ANR	5171289	PtrMemberAccess	p -> formats		5171272	0					
ANR	5171290	Identifier	p		5171272	0					
ANR	5171291	Identifier	formats		5171272	1					
ANR	5171292	ExpressionStatement	p -> formats = NULL	358:1:7457:7474	5171272	2	True				
ANR	5171293	AssignmentExpression	p -> formats = NULL		5171272	0		=			
ANR	5171294	PtrMemberAccess	p -> formats		5171272	0					
ANR	5171295	Identifier	p		5171272	0					
ANR	5171296	Identifier	formats		5171272	1					
ANR	5171297	Identifier	NULL		5171272	1					
ANR	5171298	ExpressionStatement	R_FREE ( p -> strconv_mode )	359:1:7477:7501	5171272	3	True				
ANR	5171299	CallExpression	R_FREE ( p -> strconv_mode )		5171272	0					
ANR	5171300	Callee	R_FREE		5171272	0					
ANR	5171301	Identifier	R_FREE		5171272	0					
ANR	5171302	ArgumentList	p -> strconv_mode		5171272	1					
ANR	5171303	Argument	p -> strconv_mode		5171272	0					
ANR	5171304	PtrMemberAccess	p -> strconv_mode		5171272	0					
ANR	5171305	Identifier	p		5171272	0					
ANR	5171306	Identifier	strconv_mode		5171272	1					
ANR	5171307	IfStatement	if ( p -> zoom )		5171272	4					
ANR	5171308	Condition	p -> zoom	360:5:7508:7514	5171272	0	True				
ANR	5171309	PtrMemberAccess	p -> zoom		5171272	0					
ANR	5171310	Identifier	p		5171272	0					
ANR	5171311	Identifier	zoom		5171272	1					
ANR	5171312	CompoundStatement		8:14:115:115	5171272	1					
ANR	5171313	ExpressionStatement	free ( p -> zoom -> buf )	361:2:7521:7540	5171272	0	True				
ANR	5171314	CallExpression	free ( p -> zoom -> buf )		5171272	0					
ANR	5171315	Callee	free		5171272	0					
ANR	5171316	Identifier	free		5171272	0					
ANR	5171317	ArgumentList	p -> zoom -> buf		5171272	1					
ANR	5171318	Argument	p -> zoom -> buf		5171272	0					
ANR	5171319	PtrMemberAccess	p -> zoom -> buf		5171272	0					
ANR	5171320	PtrMemberAccess	p -> zoom		5171272	0					
ANR	5171321	Identifier	p		5171272	0					
ANR	5171322	Identifier	zoom		5171272	1					
ANR	5171323	Identifier	buf		5171272	1					
ANR	5171324	ExpressionStatement	free ( p -> zoom )	362:2:7544:7558	5171272	1	True				
ANR	5171325	CallExpression	free ( p -> zoom )		5171272	0					
ANR	5171326	Callee	free		5171272	0					
ANR	5171327	Identifier	free		5171272	0					
ANR	5171328	ArgumentList	p -> zoom		5171272	1					
ANR	5171329	Argument	p -> zoom		5171272	0					
ANR	5171330	PtrMemberAccess	p -> zoom		5171272	0					
ANR	5171331	Identifier	p		5171272	0					
ANR	5171332	Identifier	zoom		5171272	1					
ANR	5171333	ExpressionStatement	p -> zoom = NULL	363:2:7562:7576	5171272	2	True				
ANR	5171334	AssignmentExpression	p -> zoom = NULL		5171272	0		=			
ANR	5171335	PtrMemberAccess	p -> zoom		5171272	0					
ANR	5171336	Identifier	p		5171272	0					
ANR	5171337	Identifier	zoom		5171272	1					
ANR	5171338	Identifier	NULL		5171272	1					
ANR	5171339	ExpressionStatement	R_FREE ( p -> lines_cache )	365:1:7582:7605	5171272	5	True				
ANR	5171340	CallExpression	R_FREE ( p -> lines_cache )		5171272	0					
ANR	5171341	Callee	R_FREE		5171272	0					
ANR	5171342	Identifier	R_FREE		5171272	0					
ANR	5171343	ArgumentList	p -> lines_cache		5171272	1					
ANR	5171344	Argument	p -> lines_cache		5171272	0					
ANR	5171345	PtrMemberAccess	p -> lines_cache		5171272	0					
ANR	5171346	Identifier	p		5171272	0					
ANR	5171347	Identifier	lines_cache		5171272	1					
ANR	5171348	ExpressionStatement	R_FREE ( p -> row_offsets )	366:1:7608:7631	5171272	6	True				
ANR	5171349	CallExpression	R_FREE ( p -> row_offsets )		5171272	0					
ANR	5171350	Callee	R_FREE		5171272	0					
ANR	5171351	Identifier	R_FREE		5171272	0					
ANR	5171352	ArgumentList	p -> row_offsets		5171272	1					
ANR	5171353	Argument	p -> row_offsets		5171272	0					
ANR	5171354	PtrMemberAccess	p -> row_offsets		5171272	0					
ANR	5171355	Identifier	p		5171272	0					
ANR	5171356	Identifier	row_offsets		5171272	1					
ANR	5171357	ExpressionStatement	free ( p )	367:1:7634:7642	5171272	7	True				
ANR	5171358	CallExpression	free ( p )		5171272	0					
ANR	5171359	Callee	free		5171272	0					
ANR	5171360	Identifier	free		5171272	0					
ANR	5171361	ArgumentList	p		5171272	1					
ANR	5171362	Argument	p		5171272	0					
ANR	5171363	Identifier	p		5171272	0					
ANR	5171364	ReturnStatement	return NULL ;	368:1:7645:7656	5171272	8	True				
ANR	5171365	Identifier	NULL		5171272	0					
ANR	5171366	ReturnType	R_API RPrint *		5171272	1					
ANR	5171367	Identifier	r_print_free		5171272	2					
ANR	5171368	ParameterList	RPrint * p		5171272	3					
ANR	5171369	Parameter	RPrint * p	353:27:7390:7398	5171272	0	True				
ANR	5171370	ParameterType	RPrint *		5171272	0					
ANR	5171371	Identifier	p		5171272	1					
ANR	5171372	CFGEntryNode	ENTRY		5171272		True				
ANR	5171373	CFGExitNode	EXIT		5171272		True				
ANR	5171374	Symbol	p		5171272						
ANR	5171375	Symbol	p -> formats		5171272						
ANR	5171376	Symbol	NULL		5171272						
ANR	5171377	Symbol	p -> row_offsets		5171272						
ANR	5171378	Symbol	p -> strconv_mode		5171272						
ANR	5171379	Symbol	p -> zoom		5171272						
ANR	5171380	Symbol	p -> zoom -> buf		5171272						
ANR	5171381	Symbol	* p -> zoom		5171272						
ANR	5171382	Symbol	* p		5171272						
ANR	5171383	Symbol	* * p		5171272						
ANR	5171384	Symbol	p -> lines_cache		5171272						
ANR	5171385	Function	r_print_set_flags	372:0:7692:7766							
ANR	5171386	FunctionDef	"r_print_set_flags (RPrint * p , int _flags)"		5171385	0					
ANR	5171387	CompoundStatement		372:52:7744:7766	5171385	0					
ANR	5171388	ExpressionStatement	p -> flags = _flags	373:1:7747:7764	5171385	0	True				
ANR	5171389	AssignmentExpression	p -> flags = _flags		5171385	0		=			
ANR	5171390	PtrMemberAccess	p -> flags		5171385	0					
ANR	5171391	Identifier	p		5171385	0					
ANR	5171392	Identifier	flags		5171385	1					
ANR	5171393	Identifier	_flags		5171385	1					
ANR	5171394	ReturnType	R_API void		5171385	1					
ANR	5171395	Identifier	r_print_set_flags		5171385	2					
ANR	5171396	ParameterList	"RPrint * p , int _flags"		5171385	3					
ANR	5171397	Parameter	RPrint * p	372:29:7721:7729	5171385	0	True				
ANR	5171398	ParameterType	RPrint *		5171385	0					
ANR	5171399	Identifier	p		5171385	1					
ANR	5171400	Parameter	int _flags	372:40:7732:7741	5171385	1	True				
ANR	5171401	ParameterType	int		5171385	0					
ANR	5171402	Identifier	_flags		5171385	1					
ANR	5171403	CFGEntryNode	ENTRY		5171385		True				
ANR	5171404	CFGExitNode	EXIT		5171385		True				
ANR	5171405	Symbol	p		5171385						
ANR	5171406	Symbol	_flags		5171385						
ANR	5171407	Symbol	p -> flags		5171385						
ANR	5171408	Symbol	* p		5171385						
ANR	5171409	Function	r_print_unset_flags	376:0:7769:7867							
ANR	5171410	FunctionDef	"r_print_unset_flags (RPrint * p , int flags)"		5171409	0					
ANR	5171411	CompoundStatement		376:53:7822:7867	5171409	0					
ANR	5171412	ExpressionStatement	p -> flags = p -> flags & ( p -> flags ^ flags )	377:1:7825:7865	5171409	0	True				
ANR	5171413	AssignmentExpression	p -> flags = p -> flags & ( p -> flags ^ flags )		5171409	0		=			
ANR	5171414	PtrMemberAccess	p -> flags		5171409	0					
ANR	5171415	Identifier	p		5171409	0					
ANR	5171416	Identifier	flags		5171409	1					
ANR	5171417	BitAndExpression	p -> flags & ( p -> flags ^ flags )		5171409	1		&			
ANR	5171418	PtrMemberAccess	p -> flags		5171409	0					
ANR	5171419	Identifier	p		5171409	0					
ANR	5171420	Identifier	flags		5171409	1					
ANR	5171421	ExclusiveOrExpression	p -> flags ^ flags		5171409	1		^			
ANR	5171422	PtrMemberAccess	p -> flags		5171409	0					
ANR	5171423	Identifier	p		5171409	0					
ANR	5171424	Identifier	flags		5171409	1					
ANR	5171425	Identifier	flags		5171409	1					
ANR	5171426	ReturnType	R_API void		5171409	1					
ANR	5171427	Identifier	r_print_unset_flags		5171409	2					
ANR	5171428	ParameterList	"RPrint * p , int flags"		5171409	3					
ANR	5171429	Parameter	RPrint * p	376:31:7800:7808	5171409	0	True				
ANR	5171430	ParameterType	RPrint *		5171409	0					
ANR	5171431	Identifier	p		5171409	1					
ANR	5171432	Parameter	int flags	376:42:7811:7819	5171409	1	True				
ANR	5171433	ParameterType	int		5171409	0					
ANR	5171434	Identifier	flags		5171409	1					
ANR	5171435	CFGEntryNode	ENTRY		5171409		True				
ANR	5171436	CFGExitNode	EXIT		5171409		True				
ANR	5171437	Symbol	p		5171409						
ANR	5171438	Symbol	flags		5171409						
ANR	5171439	Symbol	p -> flags		5171409						
ANR	5171440	Symbol	* p		5171409						
ANR	5171441	Function	r_print_set_cursor	380:0:7870:8074							
ANR	5171442	FunctionDef	"r_print_set_cursor (RPrint * p , int enable , int ocursor , int cursor)"		5171441	0					
ANR	5171443	CompoundStatement		380:78:7948:8074	5171441	0					
ANR	5171444	IfStatement	if ( ! p )		5171441	0					
ANR	5171445	Condition	! p	381:5:7955:7956	5171441	0	True				
ANR	5171446	UnaryOperationExpression	! p		5171441	0					
ANR	5171447	UnaryOperator	!		5171441	0					
ANR	5171448	Identifier	p		5171441	1					
ANR	5171449	CompoundStatement		2:9:10:10	5171441	1					
ANR	5171450	ReturnStatement	return ;	382:2:7963:7969	5171441	0	True				
ANR	5171451	ExpressionStatement	p -> cur_enabled = enable	384:1:7975:7998	5171441	1	True				
ANR	5171452	AssignmentExpression	p -> cur_enabled = enable		5171441	0		=			
ANR	5171453	PtrMemberAccess	p -> cur_enabled		5171441	0					
ANR	5171454	Identifier	p		5171441	0					
ANR	5171455	Identifier	cur_enabled		5171441	1					
ANR	5171456	Identifier	enable		5171441	1					
ANR	5171457	ExpressionStatement	p -> ocur = ocursor	385:1:8001:8018	5171441	2	True				
ANR	5171458	AssignmentExpression	p -> ocur = ocursor		5171441	0		=			
ANR	5171459	PtrMemberAccess	p -> ocur		5171441	0					
ANR	5171460	Identifier	p		5171441	0					
ANR	5171461	Identifier	ocur		5171441	1					
ANR	5171462	Identifier	ocursor		5171441	1					
ANR	5171463	IfStatement	if ( cursor < 0 )		5171441	3					
ANR	5171464	Condition	cursor < 0	386:5:8025:8034	5171441	0	True				
ANR	5171465	RelationalExpression	cursor < 0		5171441	0		<			
ANR	5171466	Identifier	cursor		5171441	0					
ANR	5171467	PrimaryExpression	0		5171441	1					
ANR	5171468	CompoundStatement		7:17:88:88	5171441	1					
ANR	5171469	ExpressionStatement	cursor = 0	387:2:8041:8051	5171441	0	True				
ANR	5171470	AssignmentExpression	cursor = 0		5171441	0		=			
ANR	5171471	Identifier	cursor		5171441	0					
ANR	5171472	PrimaryExpression	0		5171441	1					
ANR	5171473	ExpressionStatement	p -> cur = cursor	389:1:8057:8072	5171441	4	True				
ANR	5171474	AssignmentExpression	p -> cur = cursor		5171441	0		=			
ANR	5171475	PtrMemberAccess	p -> cur		5171441	0					
ANR	5171476	Identifier	p		5171441	0					
ANR	5171477	Identifier	cur		5171441	1					
ANR	5171478	Identifier	cursor		5171441	1					
ANR	5171479	ReturnType	R_API void		5171441	1					
ANR	5171480	Identifier	r_print_set_cursor		5171441	2					
ANR	5171481	ParameterList	"RPrint * p , int enable , int ocursor , int cursor"		5171441	3					
ANR	5171482	Parameter	RPrint * p	380:30:7900:7908	5171441	0	True				
ANR	5171483	ParameterType	RPrint *		5171441	0					
ANR	5171484	Identifier	p		5171441	1					
ANR	5171485	Parameter	int enable	380:41:7911:7920	5171441	1	True				
ANR	5171486	ParameterType	int		5171441	0					
ANR	5171487	Identifier	enable		5171441	1					
ANR	5171488	Parameter	int ocursor	380:53:7923:7933	5171441	2	True				
ANR	5171489	ParameterType	int		5171441	0					
ANR	5171490	Identifier	ocursor		5171441	1					
ANR	5171491	Parameter	int cursor	380:66:7936:7945	5171441	3	True				
ANR	5171492	ParameterType	int		5171441	0					
ANR	5171493	Identifier	cursor		5171441	1					
ANR	5171494	CFGEntryNode	ENTRY		5171441		True				
ANR	5171495	CFGExitNode	EXIT		5171441		True				
ANR	5171496	Symbol	p		5171441						
ANR	5171497	Symbol	cursor		5171441						
ANR	5171498	Symbol	p -> ocur		5171441						
ANR	5171499	Symbol	enable		5171441						
ANR	5171500	Symbol	p -> cur_enabled		5171441						
ANR	5171501	Symbol	* p		5171441						
ANR	5171502	Symbol	ocursor		5171441						
ANR	5171503	Symbol	p -> cur		5171441						
ANR	5171504	Function	r_print_have_cursor	392:0:8077:8479							
ANR	5171505	FunctionDef	"r_print_have_cursor (RPrint * p , int cur , int len)"		5171504	0					
ANR	5171506	CompoundStatement		392:60:8137:8479	5171504	0					
ANR	5171507	IfStatement	if ( ! p || ! p -> cur_enabled )		5171504	0					
ANR	5171508	Condition	! p || ! p -> cur_enabled	393:5:8144:8164	5171504	0	True				
ANR	5171509	OrExpression	! p || ! p -> cur_enabled		5171504	0		||			
ANR	5171510	UnaryOperationExpression	! p		5171504	0					
ANR	5171511	UnaryOperator	!		5171504	0					
ANR	5171512	Identifier	p		5171504	1					
ANR	5171513	UnaryOperationExpression	! p -> cur_enabled		5171504	1					
ANR	5171514	UnaryOperator	!		5171504	0					
ANR	5171515	PtrMemberAccess	p -> cur_enabled		5171504	1					
ANR	5171516	Identifier	p		5171504	0					
ANR	5171517	Identifier	cur_enabled		5171504	1					
ANR	5171518	CompoundStatement		2:28:29:29	5171504	1					
ANR	5171519	ReturnStatement	return false ;	394:2:8171:8183	5171504	0	True				
ANR	5171520	Identifier	false		5171504	0					
ANR	5171521	IfStatement	if ( p -> ocur != - 1 )		5171504	1					
ANR	5171522	Condition	p -> ocur != - 1	396:5:8193:8205	5171504	0	True				
ANR	5171523	EqualityExpression	p -> ocur != - 1		5171504	0		!=			
ANR	5171524	PtrMemberAccess	p -> ocur		5171504	0					
ANR	5171525	Identifier	p		5171504	0					
ANR	5171526	Identifier	ocur		5171504	1					
ANR	5171527	UnaryOperationExpression	- 1		5171504	1					
ANR	5171528	UnaryOperator	-		5171504	0					
ANR	5171529	PrimaryExpression	1		5171504	1					
ANR	5171530	CompoundStatement		7:2:96:111	5171504	1					
ANR	5171531	IdentifierDeclStatement	int from = p -> ocur ;	397:2:8212:8230	5171504	0	True				
ANR	5171532	IdentifierDecl	from = p -> ocur		5171504	0					
ANR	5171533	IdentifierDeclType	int		5171504	0					
ANR	5171534	Identifier	from		5171504	1					
ANR	5171535	AssignmentExpression	from = p -> ocur		5171504	2		=			
ANR	5171536	Identifier	from		5171504	0					
ANR	5171537	PtrMemberAccess	p -> ocur		5171504	1					
ANR	5171538	Identifier	p		5171504	0					
ANR	5171539	Identifier	ocur		5171504	1					
ANR	5171540	IdentifierDeclStatement	int to = p -> cur ;	398:2:8234:8249	5171504	1	True				
ANR	5171541	IdentifierDecl	to = p -> cur		5171504	0					
ANR	5171542	IdentifierDeclType	int		5171504	0					
ANR	5171543	Identifier	to		5171504	1					
ANR	5171544	AssignmentExpression	to = p -> cur		5171504	2		=			
ANR	5171545	Identifier	to		5171504	0					
ANR	5171546	PtrMemberAccess	p -> cur		5171504	1					
ANR	5171547	Identifier	p		5171504	0					
ANR	5171548	Identifier	cur		5171504	1					
ANR	5171549	ExpressionStatement	"r_num_minmax_swap_i ( & from , & to )"	399:2:8253:8285	5171504	2	True				
ANR	5171550	CallExpression	"r_num_minmax_swap_i ( & from , & to )"		5171504	0					
ANR	5171551	Callee	r_num_minmax_swap_i		5171504	0					
ANR	5171552	Identifier	r_num_minmax_swap_i		5171504	0					
ANR	5171553	ArgumentList	& from		5171504	1					
ANR	5171554	Argument	& from		5171504	0					
ANR	5171555	UnaryOperationExpression	& from		5171504	0					
ANR	5171556	UnaryOperator	&		5171504	0					
ANR	5171557	Identifier	from		5171504	1					
ANR	5171558	Argument	& to		5171504	1					
ANR	5171559	UnaryOperationExpression	& to		5171504	0					
ANR	5171560	UnaryOperator	&		5171504	0					
ANR	5171561	Identifier	to		5171504	1					
ANR	5171562	DoStatement	do		5171504	3					
ANR	5171563	CompoundStatement		9:5:154:154	5171504	0					
ANR	5171564	IfStatement	if ( cur + len - 1 >= from && cur + len - 1 <= to )		5171504	0					
ANR	5171565	Condition	cur + len - 1 >= from && cur + len - 1 <= to	401:7:8301:8344	5171504	0	True				
ANR	5171566	AndExpression	cur + len - 1 >= from && cur + len - 1 <= to		5171504	0		&&			
ANR	5171567	RelationalExpression	cur + len - 1 >= from		5171504	0		>=			
ANR	5171568	AdditiveExpression	cur + len - 1		5171504	0		+			
ANR	5171569	Identifier	cur		5171504	0					
ANR	5171570	AdditiveExpression	len - 1		5171504	1		-			
ANR	5171571	Identifier	len		5171504	0					
ANR	5171572	PrimaryExpression	1		5171504	1					
ANR	5171573	Identifier	from		5171504	1					
ANR	5171574	RelationalExpression	cur + len - 1 <= to		5171504	1		<=			
ANR	5171575	AdditiveExpression	cur + len - 1		5171504	0		+			
ANR	5171576	Identifier	cur		5171504	0					
ANR	5171577	AdditiveExpression	len - 1		5171504	1		-			
ANR	5171578	Identifier	len		5171504	0					
ANR	5171579	PrimaryExpression	1		5171504	1					
ANR	5171580	Identifier	to		5171504	1					
ANR	5171581	CompoundStatement		10:53:209:209	5171504	1					
ANR	5171582	ReturnStatement	return true ;	402:4:8353:8364	5171504	0	True				
ANR	5171583	Identifier	true		5171504	0					
ANR	5171584	Condition	-- len	404:11:8382:8386	5171504	1	True				
ANR	5171585	UnaryExpression	-- len		5171504	0					
ANR	5171586	IncDec	--		5171504	0					
ANR	5171587	Identifier	len		5171504	1					
ANR	5171588	ElseStatement	else		5171504	0					
ANR	5171589	IfStatement	if ( p -> cur >= cur && p -> cur <= cur + len - 1 )		5171504	0					
ANR	5171590	Condition	p -> cur >= cur && p -> cur <= cur + len - 1	405:12:8402:8441	5171504	0	True				
ANR	5171591	AndExpression	p -> cur >= cur && p -> cur <= cur + len - 1		5171504	0		&&			
ANR	5171592	RelationalExpression	p -> cur >= cur		5171504	0		>=			
ANR	5171593	PtrMemberAccess	p -> cur		5171504	0					
ANR	5171594	Identifier	p		5171504	0					
ANR	5171595	Identifier	cur		5171504	1					
ANR	5171596	Identifier	cur		5171504	1					
ANR	5171597	RelationalExpression	p -> cur <= cur + len - 1		5171504	1		<=			
ANR	5171598	PtrMemberAccess	p -> cur		5171504	0					
ANR	5171599	Identifier	p		5171504	0					
ANR	5171600	Identifier	cur		5171504	1					
ANR	5171601	AdditiveExpression	cur + len - 1		5171504	1		+			
ANR	5171602	Identifier	cur		5171504	0					
ANR	5171603	AdditiveExpression	len - 1		5171504	1		-			
ANR	5171604	Identifier	len		5171504	0					
ANR	5171605	PrimaryExpression	1		5171504	1					
ANR	5171606	CompoundStatement		14:54:306:306	5171504	1					
ANR	5171607	ReturnStatement	return true ;	406:2:8448:8459	5171504	0	True				
ANR	5171608	Identifier	true		5171504	0					
ANR	5171609	ReturnStatement	return false ;	408:1:8465:8477	5171504	2	True				
ANR	5171610	Identifier	false		5171504	0					
ANR	5171611	ReturnType	R_API bool		5171504	1					
ANR	5171612	Identifier	r_print_have_cursor		5171504	2					
ANR	5171613	ParameterList	"RPrint * p , int cur , int len"		5171504	3					
ANR	5171614	Parameter	RPrint * p	392:31:8108:8116	5171504	0	True				
ANR	5171615	ParameterType	RPrint *		5171504	0					
ANR	5171616	Identifier	p		5171504	1					
ANR	5171617	Parameter	int cur	392:42:8119:8125	5171504	1	True				
ANR	5171618	ParameterType	int		5171504	0					
ANR	5171619	Identifier	cur		5171504	1					
ANR	5171620	Parameter	int len	392:51:8128:8134	5171504	2	True				
ANR	5171621	ParameterType	int		5171504	0					
ANR	5171622	Identifier	len		5171504	1					
ANR	5171623	CFGEntryNode	ENTRY		5171504		True				
ANR	5171624	CFGExitNode	EXIT		5171504		True				
ANR	5171625	Symbol	cur		5171504						
ANR	5171626	Symbol	p -> ocur		5171504						
ANR	5171627	Symbol	& to		5171504						
ANR	5171628	Symbol	p -> cur_enabled		5171504						
ANR	5171629	Symbol	false		5171504						
ANR	5171630	Symbol	p -> cur		5171504						
ANR	5171631	Symbol	& from		5171504						
ANR	5171632	Symbol	p		5171504						
ANR	5171633	Symbol	len		5171504						
ANR	5171634	Symbol	true		5171504						
ANR	5171635	Symbol	* p		5171504						
ANR	5171636	Symbol	from		5171504						
ANR	5171637	Symbol	to		5171504						
ANR	5171638	Function	r_print_cursor_pointer	411:0:8482:8730							
ANR	5171639	FunctionDef	"r_print_cursor_pointer (RPrint * p , int cur , int len)"		5171638	0					
ANR	5171640	CompoundStatement		411:63:8545:8730	5171638	0					
ANR	5171641	ExpressionStatement	"r_return_val_if_fail ( p , false )"	412:1:8548:8579	5171638	0	True				
ANR	5171642	CallExpression	"r_return_val_if_fail ( p , false )"		5171638	0					
ANR	5171643	Callee	r_return_val_if_fail		5171638	0					
ANR	5171644	Identifier	r_return_val_if_fail		5171638	0					
ANR	5171645	ArgumentList	p		5171638	1					
ANR	5171646	Argument	p		5171638	0					
ANR	5171647	Identifier	p		5171638	0					
ANR	5171648	Argument	false		5171638	1					
ANR	5171649	Identifier	false		5171638	0					
ANR	5171650	IfStatement	if ( ! p -> cur_enabled )		5171638	1					
ANR	5171651	Condition	! p -> cur_enabled	413:5:8586:8600	5171638	0	True				
ANR	5171652	UnaryOperationExpression	! p -> cur_enabled		5171638	0					
ANR	5171653	UnaryOperator	!		5171638	0					
ANR	5171654	PtrMemberAccess	p -> cur_enabled		5171638	1					
ANR	5171655	Identifier	p		5171638	0					
ANR	5171656	Identifier	cur_enabled		5171638	1					
ANR	5171657	CompoundStatement		3:22:57:57	5171638	1					
ANR	5171658	ReturnStatement	return false ;	414:2:8607:8619	5171638	0	True				
ANR	5171659	Identifier	false		5171638	0					
ANR	5171660	IdentifierDeclStatement	int to = p -> cur ;	416:1:8625:8640	5171638	2	True				
ANR	5171661	IdentifierDecl	to = p -> cur		5171638	0					
ANR	5171662	IdentifierDeclType	int		5171638	0					
ANR	5171663	Identifier	to		5171638	1					
ANR	5171664	AssignmentExpression	to = p -> cur		5171638	2		=			
ANR	5171665	Identifier	to		5171638	0					
ANR	5171666	PtrMemberAccess	p -> cur		5171638	1					
ANR	5171667	Identifier	p		5171638	0					
ANR	5171668	Identifier	cur		5171638	1					
ANR	5171669	DoStatement	do		5171638	3					
ANR	5171670	CompoundStatement		7:4:100:100	5171638	0					
ANR	5171671	IfStatement	if ( cur + len - 1 == to )		5171638	0					
ANR	5171672	Condition	cur + len - 1 == to	418:6:8654:8672	5171638	0	True				
ANR	5171673	EqualityExpression	cur + len - 1 == to		5171638	0		==			
ANR	5171674	AdditiveExpression	cur + len - 1		5171638	0		+			
ANR	5171675	Identifier	cur		5171638	0					
ANR	5171676	AdditiveExpression	len - 1		5171638	1		-			
ANR	5171677	Identifier	len		5171638	0					
ANR	5171678	PrimaryExpression	1		5171638	1					
ANR	5171679	Identifier	to		5171638	1					
ANR	5171680	CompoundStatement		8:27:129:129	5171638	1					
ANR	5171681	ReturnStatement	return true ;	419:3:8680:8691	5171638	0	True				
ANR	5171682	Identifier	true		5171638	0					
ANR	5171683	Condition	-- len	421:10:8707:8711	5171638	1	True				
ANR	5171684	UnaryExpression	-- len		5171638	0					
ANR	5171685	IncDec	--		5171638	0					
ANR	5171686	Identifier	len		5171638	1					
ANR	5171687	ReturnStatement	return false ;	422:1:8716:8728	5171638	4	True				
ANR	5171688	Identifier	false		5171638	0					
ANR	5171689	ReturnType	R_API bool		5171638	1					
ANR	5171690	Identifier	r_print_cursor_pointer		5171638	2					
ANR	5171691	ParameterList	"RPrint * p , int cur , int len"		5171638	3					
ANR	5171692	Parameter	RPrint * p	411:34:8516:8524	5171638	0	True				
ANR	5171693	ParameterType	RPrint *		5171638	0					
ANR	5171694	Identifier	p		5171638	1					
ANR	5171695	Parameter	int cur	411:45:8527:8533	5171638	1	True				
ANR	5171696	ParameterType	int		5171638	0					
ANR	5171697	Identifier	cur		5171638	1					
ANR	5171698	Parameter	int len	411:54:8536:8542	5171638	2	True				
ANR	5171699	ParameterType	int		5171638	0					
ANR	5171700	Identifier	len		5171638	1					
ANR	5171701	CFGEntryNode	ENTRY		5171638		True				
ANR	5171702	CFGExitNode	EXIT		5171638		True				
ANR	5171703	Symbol	p		5171638						
ANR	5171704	Symbol	cur		5171638						
ANR	5171705	Symbol	len		5171638						
ANR	5171706	Symbol	p -> cur_enabled		5171638						
ANR	5171707	Symbol	false		5171638						
ANR	5171708	Symbol	true		5171638						
ANR	5171709	Symbol	* p		5171638						
ANR	5171710	Symbol	to		5171638						
ANR	5171711	Symbol	p -> cur		5171638						
ANR	5171712	Function	r_print_cursor	425:0:8733:8891							
ANR	5171713	FunctionDef	"r_print_cursor (RPrint * p , int cur , int len , int set)"		5171712	0					
ANR	5171714	CompoundStatement		425:64:8797:8891	5171712	0					
ANR	5171715	IfStatement	"if ( r_print_have_cursor ( p , cur , len ) )"		5171712	0					
ANR	5171716	Condition	"r_print_have_cursor ( p , cur , len )"	426:5:8804:8836	5171712	0	True				
ANR	5171717	CallExpression	"r_print_have_cursor ( p , cur , len )"		5171712	0					
ANR	5171718	Callee	r_print_have_cursor		5171712	0					
ANR	5171719	Identifier	r_print_have_cursor		5171712	0					
ANR	5171720	ArgumentList	p		5171712	1					
ANR	5171721	Argument	p		5171712	0					
ANR	5171722	Identifier	p		5171712	0					
ANR	5171723	Argument	cur		5171712	1					
ANR	5171724	Identifier	cur		5171712	0					
ANR	5171725	Argument	len		5171712	2					
ANR	5171726	Identifier	len		5171712	0					
ANR	5171727	CompoundStatement		2:40:41:41	5171712	1					
ANR	5171728	ExpressionStatement	"p -> cb_printf ( ""%s"" , R_CONS_INVERT ( set , 1 ) )"	427:2:8843:8886	5171712	0	True				
ANR	5171729	CallExpression	"p -> cb_printf ( ""%s"" , R_CONS_INVERT ( set , 1 ) )"		5171712	0					
ANR	5171730	Callee	p -> cb_printf		5171712	0					
ANR	5171731	PtrMemberAccess	p -> cb_printf		5171712	0					
ANR	5171732	Identifier	p		5171712	0					
ANR	5171733	Identifier	cb_printf		5171712	1					
ANR	5171734	ArgumentList	"""%s"""		5171712	1					
ANR	5171735	Argument	"""%s"""		5171712	0					
ANR	5171736	PrimaryExpression	"""%s"""		5171712	0					
ANR	5171737	Argument	"R_CONS_INVERT ( set , 1 )"		5171712	1					
ANR	5171738	CallExpression	"R_CONS_INVERT ( set , 1 )"		5171712	0					
ANR	5171739	Callee	R_CONS_INVERT		5171712	0					
ANR	5171740	Identifier	R_CONS_INVERT		5171712	0					
ANR	5171741	ArgumentList	set		5171712	1					
ANR	5171742	Argument	set		5171712	0					
ANR	5171743	Identifier	set		5171712	0					
ANR	5171744	Argument	1		5171712	1					
ANR	5171745	PrimaryExpression	1		5171712	0					
ANR	5171746	ReturnType	R_API void		5171712	1					
ANR	5171747	Identifier	r_print_cursor		5171712	2					
ANR	5171748	ParameterList	"RPrint * p , int cur , int len , int set"		5171712	3					
ANR	5171749	Parameter	RPrint * p	425:26:8759:8767	5171712	0	True				
ANR	5171750	ParameterType	RPrint *		5171712	0					
ANR	5171751	Identifier	p		5171712	1					
ANR	5171752	Parameter	int cur	425:37:8770:8776	5171712	1	True				
ANR	5171753	ParameterType	int		5171712	0					
ANR	5171754	Identifier	cur		5171712	1					
ANR	5171755	Parameter	int len	425:46:8779:8785	5171712	2	True				
ANR	5171756	ParameterType	int		5171712	0					
ANR	5171757	Identifier	len		5171712	1					
ANR	5171758	Parameter	int set	425:55:8788:8794	5171712	3	True				
ANR	5171759	ParameterType	int		5171712	0					
ANR	5171760	Identifier	set		5171712	1					
ANR	5171761	CFGEntryNode	ENTRY		5171712		True				
ANR	5171762	CFGExitNode	EXIT		5171712		True				
ANR	5171763	Symbol	p		5171712						
ANR	5171764	Symbol	cur		5171712						
ANR	5171765	Symbol	set		5171712						
ANR	5171766	Symbol	len		5171712						
ANR	5171767	Symbol	r_print_have_cursor		5171712						
ANR	5171768	Symbol	R_CONS_INVERT		5171712						
ANR	5171769	Function	r_print_addr	431:0:8894:11423							
ANR	5171770	FunctionDef	"r_print_addr (RPrint * p , ut64 addr)"		5171769	0					
ANR	5171771	CompoundStatement		431:46:8940:11423	5171769	0					
ANR	5171772	IdentifierDeclStatement	char space [ 32 ] = { 0 } ;	432:1:8943:8968	5171769	0	True				
ANR	5171773	IdentifierDecl	space [ 32 ] = { 0 }		5171769	0					
ANR	5171774	IdentifierDeclType	char [ 32 ]		5171769	0					
ANR	5171775	Identifier	space		5171769	1					
ANR	5171776	PrimaryExpression	32		5171769	2					
ANR	5171777	AssignmentExpression	space [ 32 ] = { 0 }		5171769	3		=			
ANR	5171778	Identifier	space		5171769	0					
ANR	5171779	InitializerList	0		5171769	1					
ANR	5171780	PrimaryExpression	0		5171769	0					
ANR	5171781	IdentifierDeclStatement	"const char * white = """" ;"	435:1:8971:8993	5171769	1	True				
ANR	5171782	IdentifierDecl	"* white = """""		5171769	0					
ANR	5171783	IdentifierDeclType	const char *		5171769	0					
ANR	5171784	Identifier	white		5171769	1					
ANR	5171785	AssignmentExpression	"* white = """""		5171769	2		=			
ANR	5171786	Identifier	white		5171769	0					
ANR	5171787	PrimaryExpression	""""""		5171769	1					
ANR	5171788	Statement	define	436:1:8996:9001	5171769	2	True				
ANR	5171789	Statement	PREOFF	436:8:9003:9008	5171769	3	True				
ANR	5171790	Statement	(	436:14:9009:9009	5171769	4	True				
ANR	5171791	Statement	x	436:15:9010:9010	5171769	5	True				
ANR	5171792	Statement	)	436:16:9011:9011	5171769	6	True				
ANR	5171793	Statement	(	436:18:9013:9013	5171769	7	True				
ANR	5171794	Statement	p	436:19:9014:9014	5171769	8	True				
ANR	5171795	Statement	&&	436:21:9016:9017	5171769	9	True				
ANR	5171796	Statement	p	436:24:9019:9019	5171769	10	True				
ANR	5171797	Statement	->	436:25:9020:9021	5171769	11	True				
ANR	5171798	Statement	cons	436:27:9022:9025	5171769	12	True				
ANR	5171799	Statement	&&	436:32:9027:9028	5171769	13	True				
ANR	5171800	Statement	p	436:35:9030:9030	5171769	14	True				
ANR	5171801	Statement	->	436:36:9031:9032	5171769	15	True				
ANR	5171802	Statement	cons	436:38:9033:9036	5171769	16	True				
ANR	5171803	Statement	->	436:42:9037:9038	5171769	17	True				
ANR	5171804	Statement	context	436:44:9039:9045	5171769	18	True				
ANR	5171805	Statement	&&	436:52:9047:9048	5171769	19	True				
ANR	5171806	Statement	p	436:55:9050:9050	5171769	20	True				
ANR	5171807	Statement	->	436:56:9051:9052	5171769	21	True				
ANR	5171808	Statement	cons	436:58:9053:9056	5171769	22	True				
ANR	5171809	Statement	->	436:62:9057:9058	5171769	23	True				
ANR	5171810	Statement	context	436:64:9059:9065	5171769	24	True				
ANR	5171811	Statement	->	436:71:9066:9067	5171769	25	True				
ANR	5171812	Statement	pal	436:73:9068:9070	5171769	26	True				
ANR	5171813	Statement	.	436:76:9071:9071	5171769	27	True				
ANR	5171814	Statement	x	436:77:9072:9072	5171769	28	True				
ANR	5171815	Statement	)	436:78:9073:9073	5171769	29	True				
ANR	5171816	Statement	?	436:79:9074:9074	5171769	30	True				
ANR	5171817	Statement	p	436:81:9076:9076	5171769	31	True				
ANR	5171818	Statement	->	436:82:9077:9078	5171769	32	True				
ANR	5171819	Statement	cons	436:84:9079:9082	5171769	33	True				
ANR	5171820	Statement	->	436:88:9083:9084	5171769	34	True				
ANR	5171821	Statement	context	436:90:9085:9091	5171769	35	True				
ANR	5171822	Statement	->	436:97:9092:9093	5171769	36	True				
ANR	5171823	Statement	pal	436:99:9094:9096	5171769	37	True				
ANR	5171824	Statement	.	436:102:9097:9097	5171769	38	True				
ANR	5171825	IdentifierDeclStatement	x PrintfCallback printfmt = ( PrintfCallback ) ( p ? p -> cb_printf : libc_printf ) ;	436:103:9098:9174	5171769	39	True				
ANR	5171826	IdentifierDecl	printfmt = ( PrintfCallback ) ( p ? p -> cb_printf : libc_printf )		5171769	0					
ANR	5171827	IdentifierDeclType	x PrintfCallback		5171769	0					
ANR	5171828	Identifier	printfmt		5171769	1					
ANR	5171829	AssignmentExpression	printfmt = ( PrintfCallback ) ( p ? p -> cb_printf : libc_printf )		5171769	2		=			
ANR	5171830	Identifier	printfmt		5171769	0					
ANR	5171831	CastExpression	( PrintfCallback ) ( p ? p -> cb_printf : libc_printf )		5171769	1					
ANR	5171832	CastTarget	PrintfCallback		5171769	0					
ANR	5171833	ConditionalExpression	p ? p -> cb_printf : libc_printf		5171769	1					
ANR	5171834	Condition	p		5171769	0					
ANR	5171835	Identifier	p		5171769	0					
ANR	5171836	PtrMemberAccess	p -> cb_printf		5171769	1					
ANR	5171837	Identifier	p		5171769	0					
ANR	5171838	Identifier	cb_printf		5171769	1					
ANR	5171839	Identifier	libc_printf		5171769	2					
ANR	5171840	IdentifierDeclStatement	bool use_segoff = p ? ( p -> flags & R_PRINT_FLAGS_SEGOFF ) : false ;	438:1:9177:9238	5171769	40	True				
ANR	5171841	IdentifierDecl	use_segoff = p ? ( p -> flags & R_PRINT_FLAGS_SEGOFF ) : false		5171769	0					
ANR	5171842	IdentifierDeclType	bool		5171769	0					
ANR	5171843	Identifier	use_segoff		5171769	1					
ANR	5171844	AssignmentExpression	use_segoff = p ? ( p -> flags & R_PRINT_FLAGS_SEGOFF ) : false		5171769	2		=			
ANR	5171845	Identifier	use_segoff		5171769	0					
ANR	5171846	ConditionalExpression	p ? ( p -> flags & R_PRINT_FLAGS_SEGOFF ) : false		5171769	1					
ANR	5171847	Condition	p		5171769	0					
ANR	5171848	Identifier	p		5171769	0					
ANR	5171849	BitAndExpression	p -> flags & R_PRINT_FLAGS_SEGOFF		5171769	1		&			
ANR	5171850	PtrMemberAccess	p -> flags		5171769	0					
ANR	5171851	Identifier	p		5171769	0					
ANR	5171852	Identifier	flags		5171769	1					
ANR	5171853	Identifier	R_PRINT_FLAGS_SEGOFF		5171769	1					
ANR	5171854	Identifier	false		5171769	2					
ANR	5171855	IdentifierDeclStatement	bool use_color = p ? ( p -> flags & R_PRINT_FLAGS_COLOR ) : false ;	439:1:9241:9300	5171769	41	True				
ANR	5171856	IdentifierDecl	use_color = p ? ( p -> flags & R_PRINT_FLAGS_COLOR ) : false		5171769	0					
ANR	5171857	IdentifierDeclType	bool		5171769	0					
ANR	5171858	Identifier	use_color		5171769	1					
ANR	5171859	AssignmentExpression	use_color = p ? ( p -> flags & R_PRINT_FLAGS_COLOR ) : false		5171769	2		=			
ANR	5171860	Identifier	use_color		5171769	0					
ANR	5171861	ConditionalExpression	p ? ( p -> flags & R_PRINT_FLAGS_COLOR ) : false		5171769	1					
ANR	5171862	Condition	p		5171769	0					
ANR	5171863	Identifier	p		5171769	0					
ANR	5171864	BitAndExpression	p -> flags & R_PRINT_FLAGS_COLOR		5171769	1		&			
ANR	5171865	PtrMemberAccess	p -> flags		5171769	0					
ANR	5171866	Identifier	p		5171769	0					
ANR	5171867	Identifier	flags		5171769	1					
ANR	5171868	Identifier	R_PRINT_FLAGS_COLOR		5171769	1					
ANR	5171869	Identifier	false		5171769	2					
ANR	5171870	IdentifierDeclStatement	bool dec = p ? ( p -> flags & R_PRINT_FLAGS_ADDRDEC ) : false ;	440:1:9303:9358	5171769	42	True				
ANR	5171871	IdentifierDecl	dec = p ? ( p -> flags & R_PRINT_FLAGS_ADDRDEC ) : false		5171769	0					
ANR	5171872	IdentifierDeclType	bool		5171769	0					
ANR	5171873	Identifier	dec		5171769	1					
ANR	5171874	AssignmentExpression	dec = p ? ( p -> flags & R_PRINT_FLAGS_ADDRDEC ) : false		5171769	2		=			
ANR	5171875	Identifier	dec		5171769	0					
ANR	5171876	ConditionalExpression	p ? ( p -> flags & R_PRINT_FLAGS_ADDRDEC ) : false		5171769	1					
ANR	5171877	Condition	p		5171769	0					
ANR	5171878	Identifier	p		5171769	0					
ANR	5171879	BitAndExpression	p -> flags & R_PRINT_FLAGS_ADDRDEC		5171769	1		&			
ANR	5171880	PtrMemberAccess	p -> flags		5171769	0					
ANR	5171881	Identifier	p		5171769	0					
ANR	5171882	Identifier	flags		5171769	1					
ANR	5171883	Identifier	R_PRINT_FLAGS_ADDRDEC		5171769	1					
ANR	5171884	Identifier	false		5171769	2					
ANR	5171885	IdentifierDeclStatement	bool mod = p ? ( p -> flags & R_PRINT_FLAGS_ADDRMOD ) : false ;	441:1:9361:9416	5171769	43	True				
ANR	5171886	IdentifierDecl	mod = p ? ( p -> flags & R_PRINT_FLAGS_ADDRMOD ) : false		5171769	0					
ANR	5171887	IdentifierDeclType	bool		5171769	0					
ANR	5171888	Identifier	mod		5171769	1					
ANR	5171889	AssignmentExpression	mod = p ? ( p -> flags & R_PRINT_FLAGS_ADDRMOD ) : false		5171769	2		=			
ANR	5171890	Identifier	mod		5171769	0					
ANR	5171891	ConditionalExpression	p ? ( p -> flags & R_PRINT_FLAGS_ADDRMOD ) : false		5171769	1					
ANR	5171892	Condition	p		5171769	0					
ANR	5171893	Identifier	p		5171769	0					
ANR	5171894	BitAndExpression	p -> flags & R_PRINT_FLAGS_ADDRMOD		5171769	1		&			
ANR	5171895	PtrMemberAccess	p -> flags		5171769	0					
ANR	5171896	Identifier	p		5171769	0					
ANR	5171897	Identifier	flags		5171769	1					
ANR	5171898	Identifier	R_PRINT_FLAGS_ADDRMOD		5171769	1					
ANR	5171899	Identifier	false		5171769	2					
ANR	5171900	IdentifierDeclStatement	"char ch = p ? ( ( p -> addrmod && mod ) ? ( ( addr % p -> addrmod ) ? ' ' : ',' ) : ' ' ) : ' ' ;"	442:1:9419:9496	5171769	44	True				
ANR	5171901	IdentifierDecl	"ch = p ? ( ( p -> addrmod && mod ) ? ( ( addr % p -> addrmod ) ? ' ' : ',' ) : ' ' ) : ' '"		5171769	0					
ANR	5171902	IdentifierDeclType	char		5171769	0					
ANR	5171903	Identifier	ch		5171769	1					
ANR	5171904	AssignmentExpression	"ch = p ? ( ( p -> addrmod && mod ) ? ( ( addr % p -> addrmod ) ? ' ' : ',' ) : ' ' ) : ' '"		5171769	2		=			
ANR	5171905	Identifier	ch		5171769	0					
ANR	5171906	ConditionalExpression	"p ? ( ( p -> addrmod && mod ) ? ( ( addr % p -> addrmod ) ? ' ' : ',' ) : ' ' ) : ' '"		5171769	1					
ANR	5171907	Condition	p		5171769	0					
ANR	5171908	Identifier	p		5171769	0					
ANR	5171909	ConditionalExpression	"( p -> addrmod && mod ) ? ( ( addr % p -> addrmod ) ? ' ' : ',' ) : ' '"		5171769	1					
ANR	5171910	Condition	p -> addrmod && mod		5171769	0					
ANR	5171911	AndExpression	p -> addrmod && mod		5171769	0		&&			
ANR	5171912	PtrMemberAccess	p -> addrmod		5171769	0					
ANR	5171913	Identifier	p		5171769	0					
ANR	5171914	Identifier	addrmod		5171769	1					
ANR	5171915	Identifier	mod		5171769	1					
ANR	5171916	ConditionalExpression	"( addr % p -> addrmod ) ? ' ' : ','"		5171769	1					
ANR	5171917	Condition	addr % p -> addrmod		5171769	0					
ANR	5171918	MultiplicativeExpression	addr % p -> addrmod		5171769	0		%			
ANR	5171919	Identifier	addr		5171769	0					
ANR	5171920	PtrMemberAccess	p -> addrmod		5171769	1					
ANR	5171921	Identifier	p		5171769	0					
ANR	5171922	Identifier	addrmod		5171769	1					
ANR	5171923	PrimaryExpression	' '		5171769	1					
ANR	5171924	PrimaryExpression	"','"		5171769	2					
ANR	5171925	PrimaryExpression	' '		5171769	2					
ANR	5171926	PrimaryExpression	' '		5171769	2					
ANR	5171927	IfStatement	if ( p && p -> flags & R_PRINT_FLAGS_COMPACT && p -> col == 1 )		5171769	45					
ANR	5171928	Condition	p && p -> flags & R_PRINT_FLAGS_COMPACT && p -> col == 1	443:5:9503:9554	5171769	0	True				
ANR	5171929	AndExpression	p && p -> flags & R_PRINT_FLAGS_COMPACT && p -> col == 1		5171769	0		&&			
ANR	5171930	Identifier	p		5171769	0					
ANR	5171931	AndExpression	p -> flags & R_PRINT_FLAGS_COMPACT && p -> col == 1		5171769	1		&&			
ANR	5171932	BitAndExpression	p -> flags & R_PRINT_FLAGS_COMPACT		5171769	0		&			
ANR	5171933	PtrMemberAccess	p -> flags		5171769	0					
ANR	5171934	Identifier	p		5171769	0					
ANR	5171935	Identifier	flags		5171769	1					
ANR	5171936	Identifier	R_PRINT_FLAGS_COMPACT		5171769	1					
ANR	5171937	EqualityExpression	p -> col == 1		5171769	1		==			
ANR	5171938	PtrMemberAccess	p -> col		5171769	0					
ANR	5171939	Identifier	p		5171769	0					
ANR	5171940	Identifier	col		5171769	1					
ANR	5171941	PrimaryExpression	1		5171769	1					
ANR	5171942	CompoundStatement		13:59:616:616	5171769	1					
ANR	5171943	ExpressionStatement	ch = '|'	444:2:9561:9569	5171769	0	True				
ANR	5171944	AssignmentExpression	ch = '|'		5171769	0		=			
ANR	5171945	Identifier	ch		5171769	0					
ANR	5171946	PrimaryExpression	'|'		5171769	1					
ANR	5171947	IfStatement	if ( p && p -> pava )		5171769	46					
ANR	5171948	Condition	p && p -> pava	446:5:9579:9590	5171769	0	True				
ANR	5171949	AndExpression	p && p -> pava		5171769	0		&&			
ANR	5171950	Identifier	p		5171769	0					
ANR	5171951	PtrMemberAccess	p -> pava		5171769	1					
ANR	5171952	Identifier	p		5171769	0					
ANR	5171953	Identifier	pava		5171769	1					
ANR	5171954	CompoundStatement		17:2:656:694	5171769	1					
ANR	5171955	IdentifierDeclStatement	"ut64 va = p -> iob . p2v ( p -> iob . io , addr ) ;"	447:2:9597:9635	5171769	0	True				
ANR	5171956	IdentifierDecl	"va = p -> iob . p2v ( p -> iob . io , addr )"		5171769	0					
ANR	5171957	IdentifierDeclType	ut64		5171769	0					
ANR	5171958	Identifier	va		5171769	1					
ANR	5171959	AssignmentExpression	"va = p -> iob . p2v ( p -> iob . io , addr )"		5171769	2		=			
ANR	5171960	Identifier	va		5171769	0					
ANR	5171961	CallExpression	"p -> iob . p2v ( p -> iob . io , addr )"		5171769	1					
ANR	5171962	Callee	p -> iob . p2v		5171769	0					
ANR	5171963	MemberAccess	p -> iob . p2v		5171769	0					
ANR	5171964	PtrMemberAccess	p -> iob		5171769	0					
ANR	5171965	Identifier	p		5171769	0					
ANR	5171966	Identifier	iob		5171769	1					
ANR	5171967	Identifier	p2v		5171769	1					
ANR	5171968	ArgumentList	p -> iob . io		5171769	1					
ANR	5171969	Argument	p -> iob . io		5171769	0					
ANR	5171970	MemberAccess	p -> iob . io		5171769	0					
ANR	5171971	PtrMemberAccess	p -> iob		5171769	0					
ANR	5171972	Identifier	p		5171769	0					
ANR	5171973	Identifier	iob		5171769	1					
ANR	5171974	Identifier	io		5171769	1					
ANR	5171975	Argument	addr		5171769	1					
ANR	5171976	Identifier	addr		5171769	0					
ANR	5171977	IfStatement	if ( va != UT64_MAX )		5171769	1					
ANR	5171978	Condition	va != UT64_MAX	448:6:9643:9656	5171769	0	True				
ANR	5171979	EqualityExpression	va != UT64_MAX		5171769	0		!=			
ANR	5171980	Identifier	va		5171769	0					
ANR	5171981	Identifier	UT64_MAX		5171769	1					
ANR	5171982	CompoundStatement		18:22:718:718	5171769	1					
ANR	5171983	ExpressionStatement	addr = va	449:3:9664:9673	5171769	0	True				
ANR	5171984	AssignmentExpression	addr = va		5171769	0		=			
ANR	5171985	Identifier	addr		5171769	0					
ANR	5171986	Identifier	va		5171769	1					
ANR	5171987	IfStatement	if ( use_segoff )		5171769	47					
ANR	5171988	Condition	use_segoff	452:5:9687:9696	5171769	0	True				
ANR	5171989	Identifier	use_segoff		5171769	0					
ANR	5171990	CompoundStatement		23:2:762:771	5171769	1					
ANR	5171991	IdentifierDeclStatement	"ut32 s , a ;"	453:2:9703:9712	5171769	0	True				
ANR	5171992	IdentifierDecl	s		5171769	0					
ANR	5171993	IdentifierDeclType	ut32		5171769	0					
ANR	5171994	Identifier	s		5171769	1					
ANR	5171995	IdentifierDecl	a		5171769	1					
ANR	5171996	IdentifierDeclType	ut32		5171769	0					
ANR	5171997	Identifier	a		5171769	1					
ANR	5171998	ExpressionStatement	a = addr & 0xffff	454:2:9716:9733	5171769	1	True				
ANR	5171999	AssignmentExpression	a = addr & 0xffff		5171769	0		=			
ANR	5172000	Identifier	a		5171769	0					
ANR	5172001	BitAndExpression	addr & 0xffff		5171769	1		&			
ANR	5172002	Identifier	addr		5171769	0					
ANR	5172003	PrimaryExpression	0xffff		5171769	1					
ANR	5172004	ExpressionStatement	s = ( addr - a ) >> ( p ? p -> seggrn : 0 )	455:2:9737:9772	5171769	2	True				
ANR	5172005	AssignmentExpression	s = ( addr - a ) >> ( p ? p -> seggrn : 0 )		5171769	0		=			
ANR	5172006	Identifier	s		5171769	0					
ANR	5172007	ShiftExpression	( addr - a ) >> ( p ? p -> seggrn : 0 )		5171769	1		>>			
ANR	5172008	AdditiveExpression	addr - a		5171769	0		-			
ANR	5172009	Identifier	addr		5171769	0					
ANR	5172010	Identifier	a		5171769	1					
ANR	5172011	ConditionalExpression	p ? p -> seggrn : 0		5171769	1					
ANR	5172012	Condition	p		5171769	0					
ANR	5172013	Identifier	p		5171769	0					
ANR	5172014	PtrMemberAccess	p -> seggrn		5171769	1					
ANR	5172015	Identifier	p		5171769	0					
ANR	5172016	Identifier	seggrn		5171769	1					
ANR	5172017	PrimaryExpression	0		5171769	2					
ANR	5172018	IfStatement	if ( dec )		5171769	3					
ANR	5172019	Condition	dec	456:6:9780:9782	5171769	0	True				
ANR	5172020	Identifier	dec		5171769	0					
ANR	5172021	CompoundStatement		26:11:844:844	5171769	1					
ANR	5172022	ExpressionStatement	"snprintf ( space , sizeof ( space ) , ""%d:%d"" , s & 0xffff , a & 0xffff )"	457:3:9790:9855	5171769	0	True				
ANR	5172023	CallExpression	"snprintf ( space , sizeof ( space ) , ""%d:%d"" , s & 0xffff , a & 0xffff )"		5171769	0					
ANR	5172024	Callee	snprintf		5171769	0					
ANR	5172025	Identifier	snprintf		5171769	0					
ANR	5172026	ArgumentList	space		5171769	1					
ANR	5172027	Argument	space		5171769	0					
ANR	5172028	Identifier	space		5171769	0					
ANR	5172029	Argument	sizeof ( space )		5171769	1					
ANR	5172030	SizeofExpression	sizeof ( space )		5171769	0					
ANR	5172031	Sizeof	sizeof		5171769	0					
ANR	5172032	SizeofOperand	space		5171769	1					
ANR	5172033	Argument	"""%d:%d"""		5171769	2					
ANR	5172034	PrimaryExpression	"""%d:%d"""		5171769	0					
ANR	5172035	Argument	s & 0xffff		5171769	3					
ANR	5172036	BitAndExpression	s & 0xffff		5171769	0		&			
ANR	5172037	Identifier	s		5171769	0					
ANR	5172038	PrimaryExpression	0xffff		5171769	1					
ANR	5172039	Argument	a & 0xffff		5171769	4					
ANR	5172040	BitAndExpression	a & 0xffff		5171769	0		&			
ANR	5172041	Identifier	a		5171769	0					
ANR	5172042	PrimaryExpression	0xffff		5171769	1					
ANR	5172043	ExpressionStatement	"white = r_str_pad ( ' ' , 9 - strlen ( space ) )"	458:3:9860:9903	5171769	1	True				
ANR	5172044	AssignmentExpression	"white = r_str_pad ( ' ' , 9 - strlen ( space ) )"		5171769	0		=			
ANR	5172045	Identifier	white		5171769	0					
ANR	5172046	CallExpression	"r_str_pad ( ' ' , 9 - strlen ( space ) )"		5171769	1					
ANR	5172047	Callee	r_str_pad		5171769	0					
ANR	5172048	Identifier	r_str_pad		5171769	0					
ANR	5172049	ArgumentList	' '		5171769	1					
ANR	5172050	Argument	' '		5171769	0					
ANR	5172051	PrimaryExpression	' '		5171769	0					
ANR	5172052	Argument	9 - strlen ( space )		5171769	1					
ANR	5172053	AdditiveExpression	9 - strlen ( space )		5171769	0		-			
ANR	5172054	PrimaryExpression	9		5171769	0					
ANR	5172055	CallExpression	strlen ( space )		5171769	1					
ANR	5172056	Callee	strlen		5171769	0					
ANR	5172057	Identifier	strlen		5171769	0					
ANR	5172058	ArgumentList	space		5171769	1					
ANR	5172059	Argument	space		5171769	0					
ANR	5172060	Identifier	space		5171769	0					
ANR	5172061	IfStatement	if ( use_color )		5171769	4					
ANR	5172062	Condition	use_color	460:6:9915:9923	5171769	0	True				
ANR	5172063	Identifier	use_color		5171769	0					
ANR	5172064	CompoundStatement		32:3:1041:1070	5171769	1					
ANR	5172065	Statement	const	461:3:9931:9935	5171769	0	True				
ANR	5172066	Statement	char	461:9:9937:9940	5171769	1	True				
ANR	5172067	Statement	*	461:14:9942:9942	5171769	2	True				
ANR	5172068	Statement	pre	461:15:9943:9945	5171769	3	True				
ANR	5172069	Statement	=	461:19:9947:9947	5171769	4	True				
ANR	5172070	Statement	PREOFF	461:21:9949:9954	5171769	5	True				
ANR	5172071	Statement	(	461:28:9956:9956	5171769	6	True				
ANR	5172072	Statement	offset	461:29:9957:9962	5171769	7	True				
ANR	5172073	Statement	)	461:35:9963:9963	5171769	8	True				
ANR	5172074	Statement	:	461:36:9964:9964	5171769	9	True				
ANR	5172075	ExpressionStatement	Color_GREEN	461:38:9966:9977	5171769	10	True				
ANR	5172076	Identifier	Color_GREEN		5171769	0					
ANR	5172077	IdentifierDeclStatement	const char * fin = Color_RESET ;	462:3:9982:10011	5171769	11	True				
ANR	5172078	IdentifierDecl	* fin = Color_RESET		5171769	0					
ANR	5172079	IdentifierDeclType	const char *		5171769	0					
ANR	5172080	Identifier	fin		5171769	1					
ANR	5172081	AssignmentExpression	* fin = Color_RESET		5171769	2		=			
ANR	5172082	Identifier	Color_RESET		5171769	0					
ANR	5172083	Identifier	Color_RESET		5171769	1					
ANR	5172084	IfStatement	if ( dec )		5171769	12					
ANR	5172085	Condition	dec	463:7:10020:10022	5171769	0	True				
ANR	5172086	Identifier	dec		5171769	0					
ANR	5172087	CompoundStatement		33:12:1084:1084	5171769	1					
ANR	5172088	ExpressionStatement	"printfmt ( ""%s%s%s%s%c"" , pre , white , space , fin , ch )"	464:4:10031:10082	5171769	0	True				
ANR	5172089	CallExpression	"printfmt ( ""%s%s%s%s%c"" , pre , white , space , fin , ch )"		5171769	0					
ANR	5172090	Callee	printfmt		5171769	0					
ANR	5172091	Identifier	printfmt		5171769	0					
ANR	5172092	ArgumentList	"""%s%s%s%s%c"""		5171769	1					
ANR	5172093	Argument	"""%s%s%s%s%c"""		5171769	0					
ANR	5172094	PrimaryExpression	"""%s%s%s%s%c"""		5171769	0					
ANR	5172095	Argument	pre		5171769	1					
ANR	5172096	Identifier	pre		5171769	0					
ANR	5172097	Argument	white		5171769	2					
ANR	5172098	Identifier	white		5171769	0					
ANR	5172099	Argument	space		5171769	3					
ANR	5172100	Identifier	space		5171769	0					
ANR	5172101	Argument	fin		5171769	4					
ANR	5172102	Identifier	fin		5171769	0					
ANR	5172103	Argument	ch		5171769	5					
ANR	5172104	Identifier	ch		5171769	0					
ANR	5172105	ElseStatement	else		5171769	0					
ANR	5172106	CompoundStatement		35:10:1153:1153	5171769	0					
ANR	5172107	ExpressionStatement	"printfmt ( ""%s%04x:%04x%s%c"" , pre , s & 0xffff , a & 0xffff , fin , ch )"	466:4:10100:10166	5171769	0	True				
ANR	5172108	CallExpression	"printfmt ( ""%s%04x:%04x%s%c"" , pre , s & 0xffff , a & 0xffff , fin , ch )"		5171769	0					
ANR	5172109	Callee	printfmt		5171769	0					
ANR	5172110	Identifier	printfmt		5171769	0					
ANR	5172111	ArgumentList	"""%s%04x:%04x%s%c"""		5171769	1					
ANR	5172112	Argument	"""%s%04x:%04x%s%c"""		5171769	0					
ANR	5172113	PrimaryExpression	"""%s%04x:%04x%s%c"""		5171769	0					
ANR	5172114	Argument	pre		5171769	1					
ANR	5172115	Identifier	pre		5171769	0					
ANR	5172116	Argument	s & 0xffff		5171769	2					
ANR	5172117	BitAndExpression	s & 0xffff		5171769	0		&			
ANR	5172118	Identifier	s		5171769	0					
ANR	5172119	PrimaryExpression	0xffff		5171769	1					
ANR	5172120	Argument	a & 0xffff		5171769	3					
ANR	5172121	BitAndExpression	a & 0xffff		5171769	0		&			
ANR	5172122	Identifier	a		5171769	0					
ANR	5172123	PrimaryExpression	0xffff		5171769	1					
ANR	5172124	Argument	fin		5171769	4					
ANR	5172125	Identifier	fin		5171769	0					
ANR	5172126	Argument	ch		5171769	5					
ANR	5172127	Identifier	ch		5171769	0					
ANR	5172128	ElseStatement	else		5171769	0					
ANR	5172129	CompoundStatement		38:9:1241:1241	5171769	0					
ANR	5172130	IfStatement	if ( dec )		5171769	0					
ANR	5172131	Condition	dec	469:7:10191:10193	5171769	0	True				
ANR	5172132	Identifier	dec		5171769	0					
ANR	5172133	CompoundStatement		39:12:1255:1255	5171769	1					
ANR	5172134	ExpressionStatement	"printfmt ( ""%s%s%c"" , white , space , ch )"	470:4:10202:10239	5171769	0	True				
ANR	5172135	CallExpression	"printfmt ( ""%s%s%c"" , white , space , ch )"		5171769	0					
ANR	5172136	Callee	printfmt		5171769	0					
ANR	5172137	Identifier	printfmt		5171769	0					
ANR	5172138	ArgumentList	"""%s%s%c"""		5171769	1					
ANR	5172139	Argument	"""%s%s%c"""		5171769	0					
ANR	5172140	PrimaryExpression	"""%s%s%c"""		5171769	0					
ANR	5172141	Argument	white		5171769	1					
ANR	5172142	Identifier	white		5171769	0					
ANR	5172143	Argument	space		5171769	2					
ANR	5172144	Identifier	space		5171769	0					
ANR	5172145	Argument	ch		5171769	3					
ANR	5172146	Identifier	ch		5171769	0					
ANR	5172147	ElseStatement	else		5171769	0					
ANR	5172148	CompoundStatement		41:10:1310:1310	5171769	0					
ANR	5172149	ExpressionStatement	"printfmt ( ""%04x:%04x%c"" , s & 0xffff , a & 0xffff , ch )"	472:4:10257:10309	5171769	0	True				
ANR	5172150	CallExpression	"printfmt ( ""%04x:%04x%c"" , s & 0xffff , a & 0xffff , ch )"		5171769	0					
ANR	5172151	Callee	printfmt		5171769	0					
ANR	5172152	Identifier	printfmt		5171769	0					
ANR	5172153	ArgumentList	"""%04x:%04x%c"""		5171769	1					
ANR	5172154	Argument	"""%04x:%04x%c"""		5171769	0					
ANR	5172155	PrimaryExpression	"""%04x:%04x%c"""		5171769	0					
ANR	5172156	Argument	s & 0xffff		5171769	1					
ANR	5172157	BitAndExpression	s & 0xffff		5171769	0		&			
ANR	5172158	Identifier	s		5171769	0					
ANR	5172159	PrimaryExpression	0xffff		5171769	1					
ANR	5172160	Argument	a & 0xffff		5171769	2					
ANR	5172161	BitAndExpression	a & 0xffff		5171769	0		&			
ANR	5172162	Identifier	a		5171769	0					
ANR	5172163	PrimaryExpression	0xffff		5171769	1					
ANR	5172164	Argument	ch		5171769	3					
ANR	5172165	Identifier	ch		5171769	0					
ANR	5172166	ElseStatement	else		5171769	0					
ANR	5172167	CompoundStatement		45:8:1387:1387	5171769	0					
ANR	5172168	IfStatement	if ( dec )		5171769	0					
ANR	5172169	Condition	dec	476:6:10336:10338	5171769	0	True				
ANR	5172170	Identifier	dec		5171769	0					
ANR	5172171	CompoundStatement		48:3:1461:1499	5171769	1					
ANR	5172172	Statement	snprintf	477:3:10346:10353	5171769	0	True				
ANR	5172173	Statement	(	477:12:10355:10355	5171769	1	True				
ANR	5172174	Statement	space	477:13:10356:10360	5171769	2	True				
ANR	5172175	Statement	","	477:18:10361:10361	5171769	3	True				
ANR	5172176	Statement	sizeof	477:20:10363:10368	5171769	4	True				
ANR	5172177	Statement	(	477:27:10370:10370	5171769	5	True				
ANR	5172178	Statement	space	477:28:10371:10375	5171769	6	True				
ANR	5172179	Statement	)	477:33:10376:10376	5171769	7	True				
ANR	5172180	Statement	","	477:34:10377:10377	5171769	8	True				
ANR	5172181	Statement	"""%"""	477:36:10379:10381	5171769	9	True				
ANR	5172182	Statement	PFMT64d	477:40:10383:10389	5171769	10	True				
ANR	5172183	Statement	","	477:47:10390:10390	5171769	11	True				
ANR	5172184	Statement	addr	477:49:10392:10395	5171769	12	True				
ANR	5172185	Statement	)	477:53:10396:10396	5171769	13	True				
ANR	5172186	ExpressionStatement		477:54:10397:10397	5171769	14	True				
ANR	5172187	IdentifierDeclStatement	"int w = R_MAX ( 10 - strlen ( space ) , 0 ) ;"	478:3:10402:10440	5171769	15	True				
ANR	5172188	IdentifierDecl	"w = R_MAX ( 10 - strlen ( space ) , 0 )"		5171769	0					
ANR	5172189	IdentifierDeclType	int		5171769	0					
ANR	5172190	Identifier	w		5171769	1					
ANR	5172191	AssignmentExpression	"w = R_MAX ( 10 - strlen ( space ) , 0 )"		5171769	2		=			
ANR	5172192	Identifier	w		5171769	0					
ANR	5172193	CallExpression	"R_MAX ( 10 - strlen ( space ) , 0 )"		5171769	1					
ANR	5172194	Callee	R_MAX		5171769	0					
ANR	5172195	Identifier	R_MAX		5171769	0					
ANR	5172196	ArgumentList	10 - strlen ( space )		5171769	1					
ANR	5172197	Argument	10 - strlen ( space )		5171769	0					
ANR	5172198	AdditiveExpression	10 - strlen ( space )		5171769	0		-			
ANR	5172199	PrimaryExpression	10		5171769	0					
ANR	5172200	CallExpression	strlen ( space )		5171769	1					
ANR	5172201	Callee	strlen		5171769	0					
ANR	5172202	Identifier	strlen		5171769	0					
ANR	5172203	ArgumentList	space		5171769	1					
ANR	5172204	Argument	space		5171769	0					
ANR	5172205	Identifier	space		5171769	0					
ANR	5172206	Argument	0		5171769	1					
ANR	5172207	PrimaryExpression	0		5171769	0					
ANR	5172208	ExpressionStatement	"white = r_str_pad ( ' ' , w )"	479:3:10445:10471	5171769	16	True				
ANR	5172209	AssignmentExpression	"white = r_str_pad ( ' ' , w )"		5171769	0		=			
ANR	5172210	Identifier	white		5171769	0					
ANR	5172211	CallExpression	"r_str_pad ( ' ' , w )"		5171769	1					
ANR	5172212	Callee	r_str_pad		5171769	0					
ANR	5172213	Identifier	r_str_pad		5171769	0					
ANR	5172214	ArgumentList	' '		5171769	1					
ANR	5172215	Argument	' '		5171769	0					
ANR	5172216	PrimaryExpression	' '		5171769	0					
ANR	5172217	Argument	w		5171769	1					
ANR	5172218	Identifier	w		5171769	0					
ANR	5172219	IfStatement	if ( use_color )		5171769	1					
ANR	5172220	Condition	use_color	481:6:10483:10491	5171769	0	True				
ANR	5172221	Identifier	use_color		5171769	0					
ANR	5172222	CompoundStatement		53:3:1609:1638	5171769	1					
ANR	5172223	Statement	const	482:3:10499:10503	5171769	0	True				
ANR	5172224	Statement	char	482:9:10505:10508	5171769	1	True				
ANR	5172225	Statement	*	482:14:10510:10510	5171769	2	True				
ANR	5172226	Statement	pre	482:15:10511:10513	5171769	3	True				
ANR	5172227	Statement	=	482:19:10515:10515	5171769	4	True				
ANR	5172228	Statement	PREOFF	482:21:10517:10522	5171769	5	True				
ANR	5172229	Statement	(	482:28:10524:10524	5171769	6	True				
ANR	5172230	Statement	offset	482:29:10525:10530	5171769	7	True				
ANR	5172231	Statement	)	482:35:10531:10531	5171769	8	True				
ANR	5172232	Statement	:	482:36:10532:10532	5171769	9	True				
ANR	5172233	ExpressionStatement	Color_GREEN	482:38:10534:10545	5171769	10	True				
ANR	5172234	Identifier	Color_GREEN		5171769	0					
ANR	5172235	IdentifierDeclStatement	const char * fin = Color_RESET ;	483:3:10550:10579	5171769	11	True				
ANR	5172236	IdentifierDecl	* fin = Color_RESET		5171769	0					
ANR	5172237	IdentifierDeclType	const char *		5171769	0					
ANR	5172238	Identifier	fin		5171769	1					
ANR	5172239	AssignmentExpression	* fin = Color_RESET		5171769	2		=			
ANR	5172240	Identifier	Color_RESET		5171769	0					
ANR	5172241	Identifier	Color_RESET		5171769	1					
ANR	5172242	IfStatement	if ( p && p -> flags & R_PRINT_FLAGS_RAINBOW )		5171769	12					
ANR	5172243	Condition	p && p -> flags & R_PRINT_FLAGS_RAINBOW	484:7:10588:10624	5171769	0	True				
ANR	5172244	AndExpression	p && p -> flags & R_PRINT_FLAGS_RAINBOW		5171769	0		&&			
ANR	5172245	Identifier	p		5171769	0					
ANR	5172246	BitAndExpression	p -> flags & R_PRINT_FLAGS_RAINBOW		5171769	1		&			
ANR	5172247	PtrMemberAccess	p -> flags		5171769	0					
ANR	5172248	Identifier	p		5171769	0					
ANR	5172249	Identifier	flags		5171769	1					
ANR	5172250	Identifier	R_PRINT_FLAGS_RAINBOW		5171769	1					
ANR	5172251	CompoundStatement		54:46:1686:1686	5171769	1					
ANR	5172252	IfStatement	if ( p -> cons && p -> cons -> rgbstr )		5171769	0					
ANR	5172253	Condition	p -> cons && p -> cons -> rgbstr	486:8:10685:10710	5171769	0	True				
ANR	5172254	AndExpression	p -> cons && p -> cons -> rgbstr		5171769	0		&&			
ANR	5172255	PtrMemberAccess	p -> cons		5171769	0					
ANR	5172256	Identifier	p		5171769	0					
ANR	5172257	Identifier	cons		5171769	1					
ANR	5172258	PtrMemberAccess	p -> cons -> rgbstr		5171769	1					
ANR	5172259	PtrMemberAccess	p -> cons		5171769	0					
ANR	5172260	Identifier	p		5171769	0					
ANR	5172261	Identifier	cons		5171769	1					
ANR	5172262	Identifier	rgbstr		5171769	1					
ANR	5172263	CompoundStatement		57:12:1786:1801	5171769	1					
ANR	5172264	Statement	static	487:5:10720:10725	5171769	0	True				
ANR	5172265	IdentifierDeclStatement	char rgbstr [ 32 ] ;	487:12:10727:10742	5171769	1	True				
ANR	5172266	IdentifierDecl	rgbstr [ 32 ]		5171769	0					
ANR	5172267	IdentifierDeclType	char [ 32 ]		5171769	0					
ANR	5172268	Identifier	rgbstr		5171769	1					
ANR	5172269	PrimaryExpression	32		5171769	2					
ANR	5172270	ExpressionStatement	"pre = p -> cons -> rgbstr ( rgbstr , sizeof ( rgbstr ) , addr )"	488:5:10749:10802	5171769	2	True				
ANR	5172271	AssignmentExpression	"pre = p -> cons -> rgbstr ( rgbstr , sizeof ( rgbstr ) , addr )"		5171769	0		=			
ANR	5172272	Identifier	pre		5171769	0					
ANR	5172273	CallExpression	"p -> cons -> rgbstr ( rgbstr , sizeof ( rgbstr ) , addr )"		5171769	1					
ANR	5172274	Callee	p -> cons -> rgbstr		5171769	0					
ANR	5172275	PtrMemberAccess	p -> cons -> rgbstr		5171769	0					
ANR	5172276	PtrMemberAccess	p -> cons		5171769	0					
ANR	5172277	Identifier	p		5171769	0					
ANR	5172278	Identifier	cons		5171769	1					
ANR	5172279	Identifier	rgbstr		5171769	1					
ANR	5172280	ArgumentList	rgbstr		5171769	1					
ANR	5172281	Argument	rgbstr		5171769	0					
ANR	5172282	Identifier	rgbstr		5171769	0					
ANR	5172283	Argument	sizeof ( rgbstr )		5171769	1					
ANR	5172284	SizeofExpression	sizeof ( rgbstr )		5171769	0					
ANR	5172285	Sizeof	sizeof		5171769	0					
ANR	5172286	SizeofOperand	rgbstr		5171769	1					
ANR	5172287	Argument	addr		5171769	2					
ANR	5172288	Identifier	addr		5171769	0					
ANR	5172289	IfStatement	if ( dec )		5171769	13					
ANR	5172290	Condition	dec	491:7:10822:10824	5171769	0	True				
ANR	5172291	Identifier	dec		5171769	0					
ANR	5172292	CompoundStatement		61:12:1886:1886	5171769	1					
ANR	5172293	Statement	printfmt	492:4:10833:10840	5171769	0	True				
ANR	5172294	Statement	(	492:13:10842:10842	5171769	1	True				
ANR	5172295	Statement	"""%s%s%"""	492:14:10843:10849	5171769	2	True				
ANR	5172296	Statement	PFMT64d	492:22:10851:10857	5171769	3	True				
ANR	5172297	Statement	"""%s%c"""	492:30:10859:10864	5171769	4	True				
ANR	5172298	Statement	","	492:36:10865:10865	5171769	5	True				
ANR	5172299	Statement	pre	492:38:10867:10869	5171769	6	True				
ANR	5172300	Statement	","	492:41:10870:10870	5171769	7	True				
ANR	5172301	Statement	white	492:43:10872:10876	5171769	8	True				
ANR	5172302	Statement	","	492:48:10877:10877	5171769	9	True				
ANR	5172303	Statement	addr	492:50:10879:10882	5171769	10	True				
ANR	5172304	Statement	","	492:54:10883:10883	5171769	11	True				
ANR	5172305	Statement	fin	492:56:10885:10887	5171769	12	True				
ANR	5172306	Statement	","	492:59:10888:10888	5171769	13	True				
ANR	5172307	Statement	ch	492:61:10890:10891	5171769	14	True				
ANR	5172308	Statement	)	492:63:10892:10892	5171769	15	True				
ANR	5172309	ExpressionStatement		492:64:10893:10893	5171769	16	True				
ANR	5172310	ElseStatement	else		5171769	0					
ANR	5172311	CompoundStatement		63:10:1964:1964	5171769	0					
ANR	5172312	IfStatement	if ( p && p -> wide_offsets )		5171769	0					
ANR	5172313	Condition	p && p -> wide_offsets	494:8:10915:10934	5171769	0	True				
ANR	5172314	AndExpression	p && p -> wide_offsets		5171769	0		&&			
ANR	5172315	Identifier	p		5171769	0					
ANR	5172316	PtrMemberAccess	p -> wide_offsets		5171769	1					
ANR	5172317	Identifier	p		5171769	0					
ANR	5172318	Identifier	wide_offsets		5171769	1					
ANR	5172319	CompoundStatement		64:30:1996:1996	5171769	1					
ANR	5172320	Statement	printfmt	496:5:10987:10994	5171769	0	True				
ANR	5172321	Statement	(	496:14:10996:10996	5171769	1	True				
ANR	5172322	Statement	"""%s0x%016"""	496:15:10997:11006	5171769	2	True				
ANR	5172323	Statement	PFMT64x	496:26:11008:11014	5171769	3	True				
ANR	5172324	Statement	"""%s%c"""	496:34:11016:11021	5171769	4	True				
ANR	5172325	Statement	","	496:40:11022:11022	5171769	5	True				
ANR	5172326	Statement	pre	496:42:11024:11026	5171769	6	True				
ANR	5172327	Statement	","	496:45:11027:11027	5171769	7	True				
ANR	5172328	Statement	addr	496:47:11029:11032	5171769	8	True				
ANR	5172329	Statement	","	496:51:11033:11033	5171769	9	True				
ANR	5172330	Statement	fin	496:53:11035:11037	5171769	10	True				
ANR	5172331	Statement	","	496:56:11038:11038	5171769	11	True				
ANR	5172332	Statement	ch	496:58:11040:11041	5171769	12	True				
ANR	5172333	Statement	)	496:60:11042:11042	5171769	13	True				
ANR	5172334	ExpressionStatement		496:61:11043:11043	5171769	14	True				
ANR	5172335	ElseStatement	else		5171769	0					
ANR	5172336	CompoundStatement		67:11:2115:2115	5171769	0					
ANR	5172337	Statement	printfmt	498:5:11063:11070	5171769	0	True				
ANR	5172338	Statement	(	498:14:11072:11072	5171769	1	True				
ANR	5172339	Statement	"""%s0x%08"""	498:15:11073:11081	5171769	2	True				
ANR	5172340	Statement	PFMT64x	498:25:11083:11089	5171769	3	True				
ANR	5172341	Statement	"""%s%c"""	498:33:11091:11096	5171769	4	True				
ANR	5172342	Statement	","	498:39:11097:11097	5171769	5	True				
ANR	5172343	Statement	pre	498:41:11099:11101	5171769	6	True				
ANR	5172344	Statement	","	498:44:11102:11102	5171769	7	True				
ANR	5172345	Statement	addr	498:46:11104:11107	5171769	8	True				
ANR	5172346	Statement	","	498:50:11108:11108	5171769	9	True				
ANR	5172347	Statement	fin	498:52:11110:11112	5171769	10	True				
ANR	5172348	Statement	","	498:55:11113:11113	5171769	11	True				
ANR	5172349	Statement	ch	498:57:11115:11116	5171769	12	True				
ANR	5172350	Statement	)	498:59:11117:11117	5171769	13	True				
ANR	5172351	ExpressionStatement		498:60:11118:11118	5171769	14	True				
ANR	5172352	ElseStatement	else		5171769	0					
ANR	5172353	CompoundStatement		71:9:2199:2199	5171769	0					
ANR	5172354	IfStatement	if ( dec )		5171769	0					
ANR	5172355	Condition	dec	502:7:11149:11151	5171769	0	True				
ANR	5172356	Identifier	dec		5171769	0					
ANR	5172357	CompoundStatement		72:12:2213:2213	5171769	1					
ANR	5172358	Statement	printfmt	503:4:11160:11167	5171769	0	True				
ANR	5172359	Statement	(	503:13:11169:11169	5171769	1	True				
ANR	5172360	Statement	"""%s%"""	503:14:11170:11174	5171769	2	True				
ANR	5172361	Statement	PFMT64d	503:20:11176:11182	5171769	3	True				
ANR	5172362	Statement	"""%c"""	503:28:11184:11187	5171769	4	True				
ANR	5172363	Statement	","	503:32:11188:11188	5171769	5	True				
ANR	5172364	Statement	white	503:34:11190:11194	5171769	6	True				
ANR	5172365	Statement	","	503:39:11195:11195	5171769	7	True				
ANR	5172366	Statement	addr	503:41:11197:11200	5171769	8	True				
ANR	5172367	Statement	","	503:45:11201:11201	5171769	9	True				
ANR	5172368	Statement	ch	503:47:11203:11204	5171769	10	True				
ANR	5172369	Statement	)	503:49:11205:11205	5171769	11	True				
ANR	5172370	ExpressionStatement		503:50:11206:11206	5171769	12	True				
ANR	5172371	ElseStatement	else		5171769	0					
ANR	5172372	CompoundStatement		74:10:2277:2277	5171769	0					
ANR	5172373	IfStatement	if ( p && p -> wide_offsets )		5171769	0					
ANR	5172374	Condition	p && p -> wide_offsets	505:8:11228:11247	5171769	0	True				
ANR	5172375	AndExpression	p && p -> wide_offsets		5171769	0		&&			
ANR	5172376	Identifier	p		5171769	0					
ANR	5172377	PtrMemberAccess	p -> wide_offsets		5171769	1					
ANR	5172378	Identifier	p		5171769	0					
ANR	5172379	Identifier	wide_offsets		5171769	1					
ANR	5172380	CompoundStatement		75:30:2309:2309	5171769	1					
ANR	5172381	Statement	printfmt	507:5:11300:11307	5171769	0	True				
ANR	5172382	Statement	(	507:14:11309:11309	5171769	1	True				
ANR	5172383	Statement	"""0x%016"""	507:15:11310:11317	5171769	2	True				
ANR	5172384	Statement	PFMT64x	507:24:11319:11325	5171769	3	True				
ANR	5172385	Statement	"""%c"""	507:32:11327:11330	5171769	4	True				
ANR	5172386	Statement	","	507:36:11331:11331	5171769	5	True				
ANR	5172387	Statement	addr	507:38:11333:11336	5171769	6	True				
ANR	5172388	Statement	","	507:42:11337:11337	5171769	7	True				
ANR	5172389	Statement	ch	507:44:11339:11340	5171769	8	True				
ANR	5172390	Statement	)	507:46:11341:11341	5171769	9	True				
ANR	5172391	ExpressionStatement		507:47:11342:11342	5171769	10	True				
ANR	5172392	ElseStatement	else		5171769	0					
ANR	5172393	CompoundStatement		78:11:2414:2414	5171769	0					
ANR	5172394	Statement	printfmt	509:5:11362:11369	5171769	0	True				
ANR	5172395	Statement	(	509:14:11371:11371	5171769	1	True				
ANR	5172396	Statement	"""0x%08"""	509:15:11372:11378	5171769	2	True				
ANR	5172397	Statement	PFMT64x	509:23:11380:11386	5171769	3	True				
ANR	5172398	Statement	"""%c"""	509:31:11388:11391	5171769	4	True				
ANR	5172399	Statement	","	509:35:11392:11392	5171769	5	True				
ANR	5172400	Statement	addr	509:37:11394:11397	5171769	6	True				
ANR	5172401	Statement	","	509:41:11398:11398	5171769	7	True				
ANR	5172402	Statement	ch	509:43:11400:11401	5171769	8	True				
ANR	5172403	Statement	)	509:45:11402:11402	5171769	9	True				
ANR	5172404	ExpressionStatement		509:46:11403:11403	5171769	10	True				
ANR	5172405	ReturnType	R_API void		5171769	1					
ANR	5172406	Identifier	r_print_addr		5171769	2					
ANR	5172407	ParameterList	"RPrint * p , ut64 addr"		5171769	3					
ANR	5172408	Parameter	RPrint * p	431:24:8918:8926	5171769	0	True				
ANR	5172409	ParameterType	RPrint *		5171769	0					
ANR	5172410	Identifier	p		5171769	1					
ANR	5172411	Parameter	ut64 addr	431:35:8929:8937	5171769	1	True				
ANR	5172412	ParameterType	ut64		5171769	0					
ANR	5172413	Identifier	addr		5171769	1					
ANR	5172414	CFGEntryNode	ENTRY		5171769		True				
ANR	5172415	CFGExitNode	EXIT		5171769		True				
ANR	5172416	Symbol	R_PRINT_FLAGS_ADDRDEC		5171769						
ANR	5172417	Symbol	R_PRINT_FLAGS_ADDRMOD		5171769						
ANR	5172418	Symbol	dec		5171769						
ANR	5172419	Symbol	mod		5171769						
ANR	5172420	Symbol	Color_RESET		5171769						
ANR	5172421	Symbol	fin		5171769						
ANR	5172422	Symbol	space		5171769						
ANR	5172423	Symbol	p -> col		5171769						
ANR	5172424	Symbol	p -> iob . io		5171769						
ANR	5172425	Symbol	strlen		5171769						
ANR	5172426	Symbol	libc_printf		5171769						
ANR	5172427	Symbol	R_PRINT_FLAGS_SEGOFF		5171769						
ANR	5172428	Symbol	white		5171769						
ANR	5172429	Symbol	R_PRINT_FLAGS_RAINBOW		5171769						
ANR	5172430	Symbol	R_PRINT_FLAGS_COLOR		5171769						
ANR	5172431	Symbol	* p -> cons		5171769						
ANR	5172432	Symbol	* * p		5171769						
ANR	5172433	Symbol	addr		5171769						
ANR	5172434	Symbol	UT64_MAX		5171769						
ANR	5172435	Symbol	p -> seggrn		5171769						
ANR	5172436	Symbol	p -> cons		5171769						
ANR	5172437	Symbol	p -> cb_printf		5171769						
ANR	5172438	Symbol	use_segoff		5171769						
ANR	5172439	Symbol	p -> iob . p2v		5171769						
ANR	5172440	Symbol	a		5171769						
ANR	5172441	Symbol	pre		5171769						
ANR	5172442	Symbol	r_str_pad		5171769						
ANR	5172443	Symbol	ch		5171769						
ANR	5172444	Symbol	rgbstr		5171769						
ANR	5172445	Symbol	false		5171769						
ANR	5172446	Symbol	p -> pava		5171769						
ANR	5172447	Symbol	R_PRINT_FLAGS_COMPACT		5171769						
ANR	5172448	Symbol	va		5171769						
ANR	5172449	Symbol	use_color		5171769						
ANR	5172450	Symbol	p		5171769						
ANR	5172451	Symbol	p -> cons -> rgbstr		5171769						
ANR	5172452	Symbol	p -> iob		5171769						
ANR	5172453	Symbol	s		5171769						
ANR	5172454	Symbol	p -> addrmod		5171769						
ANR	5172455	Symbol	w		5171769						
ANR	5172456	Symbol	R_MAX		5171769						
ANR	5172457	Symbol	p -> flags		5171769						
ANR	5172458	Symbol	* p		5171769						
ANR	5172459	Symbol	printfmt		5171769						
ANR	5172460	Symbol	p -> wide_offsets		5171769						
ANR	5172461	Function	r_print_hexpair	516:0:11426:13480							
ANR	5172462	FunctionDef	"r_print_hexpair (RPrint * p , const char * str , int n)"		5172461	0					
ANR	5172463	CompoundStatement		516:63:11489:13480	5172461	0					
ANR	5172464	IdentifierDeclStatement	"const char * s , * lastcol = Color_WHITE ;"	517:1:11492:11529	5172461	0	True				
ANR	5172465	IdentifierDecl	* s		5172461	0					
ANR	5172466	IdentifierDeclType	const char *		5172461	0					
ANR	5172467	Identifier	s		5172461	1					
ANR	5172468	IdentifierDecl	* lastcol = Color_WHITE		5172461	1					
ANR	5172469	IdentifierDeclType	const char *		5172461	0					
ANR	5172470	Identifier	lastcol		5172461	1					
ANR	5172471	AssignmentExpression	* lastcol = Color_WHITE		5172461	2		=			
ANR	5172472	Identifier	Color_WHITE		5172461	0					
ANR	5172473	Identifier	Color_WHITE		5172461	1					
ANR	5172474	IdentifierDeclStatement	"char * d , * dst = ( char * ) calloc ( ( strlen ( str ) + 2 ) , 32 ) ;"	518:1:11532:11588	5172461	1	True				
ANR	5172475	IdentifierDecl	* d		5172461	0					
ANR	5172476	IdentifierDeclType	char *		5172461	0					
ANR	5172477	Identifier	d		5172461	1					
ANR	5172478	IdentifierDecl	"* dst = ( char * ) calloc ( ( strlen ( str ) + 2 ) , 32 )"		5172461	1					
ANR	5172479	IdentifierDeclType	char *		5172461	0					
ANR	5172480	Identifier	dst		5172461	1					
ANR	5172481	AssignmentExpression	"* dst = ( char * ) calloc ( ( strlen ( str ) + 2 ) , 32 )"		5172461	2		=			
ANR	5172482	Identifier	dst		5172461	0					
ANR	5172483	CastExpression	"( char * ) calloc ( ( strlen ( str ) + 2 ) , 32 )"		5172461	1					
ANR	5172484	CastTarget	char *		5172461	0					
ANR	5172485	CallExpression	"calloc ( ( strlen ( str ) + 2 ) , 32 )"		5172461	1					
ANR	5172486	Callee	calloc		5172461	0					
ANR	5172487	Identifier	calloc		5172461	0					
ANR	5172488	ArgumentList	strlen ( str ) + 2		5172461	1					
ANR	5172489	Argument	strlen ( str ) + 2		5172461	0					
ANR	5172490	AdditiveExpression	strlen ( str ) + 2		5172461	0		+			
ANR	5172491	CallExpression	strlen ( str )		5172461	0					
ANR	5172492	Callee	strlen		5172461	0					
ANR	5172493	Identifier	strlen		5172461	0					
ANR	5172494	ArgumentList	str		5172461	1					
ANR	5172495	Argument	str		5172461	0					
ANR	5172496	Identifier	str		5172461	0					
ANR	5172497	PrimaryExpression	2		5172461	1					
ANR	5172498	Argument	32		5172461	1					
ANR	5172499	PrimaryExpression	32		5172461	0					
ANR	5172500	IdentifierDeclStatement	int colors = p -> flags & R_PRINT_FLAGS_COLOR ;	519:1:11591:11634	5172461	2	True				
ANR	5172501	IdentifierDecl	colors = p -> flags & R_PRINT_FLAGS_COLOR		5172461	0					
ANR	5172502	IdentifierDeclType	int		5172461	0					
ANR	5172503	Identifier	colors		5172461	1					
ANR	5172504	AssignmentExpression	colors = p -> flags & R_PRINT_FLAGS_COLOR		5172461	2		=			
ANR	5172505	Identifier	colors		5172461	0					
ANR	5172506	BitAndExpression	p -> flags & R_PRINT_FLAGS_COLOR		5172461	1		&			
ANR	5172507	PtrMemberAccess	p -> flags		5172461	0					
ANR	5172508	Identifier	p		5172461	0					
ANR	5172509	Identifier	flags		5172461	1					
ANR	5172510	Identifier	R_PRINT_FLAGS_COLOR		5172461	1					
ANR	5172511	IdentifierDeclStatement	"const char * color_0x00 = """" ;"	520:1:11637:11664	5172461	3	True				
ANR	5172512	IdentifierDecl	"* color_0x00 = """""		5172461	0					
ANR	5172513	IdentifierDeclType	const char *		5172461	0					
ANR	5172514	Identifier	color_0x00		5172461	1					
ANR	5172515	AssignmentExpression	"* color_0x00 = """""		5172461	2		=			
ANR	5172516	Identifier	color_0x00		5172461	0					
ANR	5172517	PrimaryExpression	""""""		5172461	1					
ANR	5172518	IdentifierDeclStatement	"const char * color_0x7f = """" ;"	521:1:11667:11694	5172461	4	True				
ANR	5172519	IdentifierDecl	"* color_0x7f = """""		5172461	0					
ANR	5172520	IdentifierDeclType	const char *		5172461	0					
ANR	5172521	Identifier	color_0x7f		5172461	1					
ANR	5172522	AssignmentExpression	"* color_0x7f = """""		5172461	2		=			
ANR	5172523	Identifier	color_0x7f		5172461	0					
ANR	5172524	PrimaryExpression	""""""		5172461	1					
ANR	5172525	IdentifierDeclStatement	"const char * color_0xff = """" ;"	522:1:11697:11724	5172461	5	True				
ANR	5172526	IdentifierDecl	"* color_0xff = """""		5172461	0					
ANR	5172527	IdentifierDeclType	const char *		5172461	0					
ANR	5172528	Identifier	color_0xff		5172461	1					
ANR	5172529	AssignmentExpression	"* color_0xff = """""		5172461	2		=			
ANR	5172530	Identifier	color_0xff		5172461	0					
ANR	5172531	PrimaryExpression	""""""		5172461	1					
ANR	5172532	IdentifierDeclStatement	"const char * color_text = """" ;"	523:1:11727:11754	5172461	6	True				
ANR	5172533	IdentifierDecl	"* color_text = """""		5172461	0					
ANR	5172534	IdentifierDeclType	const char *		5172461	0					
ANR	5172535	Identifier	color_text		5172461	1					
ANR	5172536	AssignmentExpression	"* color_text = """""		5172461	2		=			
ANR	5172537	Identifier	color_text		5172461	0					
ANR	5172538	PrimaryExpression	""""""		5172461	1					
ANR	5172539	IdentifierDeclStatement	"const char * color_other = """" ;"	524:1:11757:11785	5172461	7	True				
ANR	5172540	IdentifierDecl	"* color_other = """""		5172461	0					
ANR	5172541	IdentifierDeclType	const char *		5172461	0					
ANR	5172542	Identifier	color_other		5172461	1					
ANR	5172543	AssignmentExpression	"* color_other = """""		5172461	2		=			
ANR	5172544	Identifier	color_other		5172461	0					
ANR	5172545	PrimaryExpression	""""""		5172461	1					
ANR	5172546	IdentifierDeclStatement	int bs = p -> bytespace ;	525:1:11788:11809	5172461	8	True				
ANR	5172547	IdentifierDecl	bs = p -> bytespace		5172461	0					
ANR	5172548	IdentifierDeclType	int		5172461	0					
ANR	5172549	Identifier	bs		5172461	1					
ANR	5172550	AssignmentExpression	bs = p -> bytespace		5172461	2		=			
ANR	5172551	Identifier	bs		5172461	0					
ANR	5172552	PtrMemberAccess	p -> bytespace		5172461	1					
ANR	5172553	Identifier	p		5172461	0					
ANR	5172554	Identifier	bytespace		5172461	1					
ANR	5172555	IdentifierDeclStatement	"int cur = R_MIN ( p -> cur , p -> ocur ) ;"	528:1:11922:11955	5172461	9	True				
ANR	5172556	IdentifierDecl	"cur = R_MIN ( p -> cur , p -> ocur )"		5172461	0					
ANR	5172557	IdentifierDeclType	int		5172461	0					
ANR	5172558	Identifier	cur		5172461	1					
ANR	5172559	AssignmentExpression	"cur = R_MIN ( p -> cur , p -> ocur )"		5172461	2		=			
ANR	5172560	Identifier	cur		5172461	0					
ANR	5172561	CallExpression	"R_MIN ( p -> cur , p -> ocur )"		5172461	1					
ANR	5172562	Callee	R_MIN		5172461	0					
ANR	5172563	Identifier	R_MIN		5172461	0					
ANR	5172564	ArgumentList	p -> cur		5172461	1					
ANR	5172565	Argument	p -> cur		5172461	0					
ANR	5172566	PtrMemberAccess	p -> cur		5172461	0					
ANR	5172567	Identifier	p		5172461	0					
ANR	5172568	Identifier	cur		5172461	1					
ANR	5172569	Argument	p -> ocur		5172461	1					
ANR	5172570	PtrMemberAccess	p -> ocur		5172461	0					
ANR	5172571	Identifier	p		5172461	0					
ANR	5172572	Identifier	ocur		5172461	1					
ANR	5172573	IdentifierDeclStatement	"int ocur = R_MAX ( p -> cur , p -> ocur ) ;"	529:1:11958:11992	5172461	10	True				
ANR	5172574	IdentifierDecl	"ocur = R_MAX ( p -> cur , p -> ocur )"		5172461	0					
ANR	5172575	IdentifierDeclType	int		5172461	0					
ANR	5172576	Identifier	ocur		5172461	1					
ANR	5172577	AssignmentExpression	"ocur = R_MAX ( p -> cur , p -> ocur )"		5172461	2		=			
ANR	5172578	Identifier	ocur		5172461	0					
ANR	5172579	CallExpression	"R_MAX ( p -> cur , p -> ocur )"		5172461	1					
ANR	5172580	Callee	R_MAX		5172461	0					
ANR	5172581	Identifier	R_MAX		5172461	0					
ANR	5172582	ArgumentList	p -> cur		5172461	1					
ANR	5172583	Argument	p -> cur		5172461	0					
ANR	5172584	PtrMemberAccess	p -> cur		5172461	0					
ANR	5172585	Identifier	p		5172461	0					
ANR	5172586	Identifier	cur		5172461	1					
ANR	5172587	Argument	p -> ocur		5172461	1					
ANR	5172588	PtrMemberAccess	p -> ocur		5172461	0					
ANR	5172589	Identifier	p		5172461	0					
ANR	5172590	Identifier	ocur		5172461	1					
ANR	5172591	IdentifierDeclStatement	"int ch , i ;"	530:1:11995:12004	5172461	11	True				
ANR	5172592	IdentifierDecl	ch		5172461	0					
ANR	5172593	IdentifierDeclType	int		5172461	0					
ANR	5172594	Identifier	ch		5172461	1					
ANR	5172595	IdentifierDecl	i		5172461	1					
ANR	5172596	IdentifierDeclType	int		5172461	0					
ANR	5172597	Identifier	i		5172461	1					
ANR	5172598	IfStatement	if ( colors )		5172461	12					
ANR	5172599	Condition	colors	532:5:12012:12017	5172461	0	True				
ANR	5172600	Identifier	colors		5172461	0					
ANR	5172601	CompoundStatement		17:13:530:530	5172461	1					
ANR	5172602	Statement	define	533:1:12023:12028	5172461	0	True				
ANR	5172603	Statement	P	533:8:12030:12030	5172461	1	True				
ANR	5172604	Statement	(	533:9:12031:12031	5172461	2	True				
ANR	5172605	Statement	x	533:10:12032:12032	5172461	3	True				
ANR	5172606	Statement	)	533:11:12033:12033	5172461	4	True				
ANR	5172607	Statement	(	533:13:12035:12035	5172461	5	True				
ANR	5172608	Statement	p	533:14:12036:12036	5172461	6	True				
ANR	5172609	Statement	->	533:15:12037:12038	5172461	7	True				
ANR	5172610	Statement	cons	533:17:12039:12042	5172461	8	True				
ANR	5172611	Statement	&&	533:22:12044:12045	5172461	9	True				
ANR	5172612	Statement	p	533:25:12047:12047	5172461	10	True				
ANR	5172613	Statement	->	533:26:12048:12049	5172461	11	True				
ANR	5172614	Statement	cons	533:28:12050:12053	5172461	12	True				
ANR	5172615	Statement	->	533:32:12054:12055	5172461	13	True				
ANR	5172616	Statement	context	533:34:12056:12062	5172461	14	True				
ANR	5172617	Statement	->	533:41:12063:12064	5172461	15	True				
ANR	5172618	Statement	pal	533:43:12065:12067	5172461	16	True				
ANR	5172619	Statement	.	533:46:12068:12068	5172461	17	True				
ANR	5172620	Statement	x	533:47:12069:12069	5172461	18	True				
ANR	5172621	Statement	)	533:48:12070:12070	5172461	19	True				
ANR	5172622	Statement	?	533:49:12071:12071	5172461	20	True				
ANR	5172623	Statement	p	533:51:12073:12073	5172461	21	True				
ANR	5172624	Statement	->	533:52:12074:12075	5172461	22	True				
ANR	5172625	Statement	cons	533:54:12076:12079	5172461	23	True				
ANR	5172626	Statement	->	533:58:12080:12081	5172461	24	True				
ANR	5172627	Statement	context	533:60:12082:12088	5172461	25	True				
ANR	5172628	Statement	->	533:67:12089:12090	5172461	26	True				
ANR	5172629	Statement	pal	533:69:12091:12093	5172461	27	True				
ANR	5172630	Statement	.	533:72:12094:12094	5172461	28	True				
ANR	5172631	Statement	x	533:73:12095:12095	5172461	29	True				
ANR	5172632	Statement	color_0x00	534:2:12099:12108	5172461	30	True				
ANR	5172633	Statement	=	534:13:12110:12110	5172461	31	True				
ANR	5172634	Statement	P	534:15:12112:12112	5172461	32	True				
ANR	5172635	Statement	(	534:17:12114:12114	5172461	33	True				
ANR	5172636	Statement	b0x00	534:18:12115:12119	5172461	34	True				
ANR	5172637	Statement	)	534:23:12120:12120	5172461	35	True				
ANR	5172638	Statement	:	534:24:12121:12121	5172461	36	True				
ANR	5172639	ExpressionStatement	Color_GREEN	534:26:12123:12134	5172461	37	True				
ANR	5172640	Identifier	Color_GREEN		5172461	0					
ANR	5172641	Statement	color_0x7f	535:2:12138:12147	5172461	38	True				
ANR	5172642	Statement	=	535:13:12149:12149	5172461	39	True				
ANR	5172643	Statement	P	535:15:12151:12151	5172461	40	True				
ANR	5172644	Statement	(	535:17:12153:12153	5172461	41	True				
ANR	5172645	Statement	b0x7f	535:18:12154:12158	5172461	42	True				
ANR	5172646	Statement	)	535:23:12159:12159	5172461	43	True				
ANR	5172647	Statement	:	535:24:12160:12160	5172461	44	True				
ANR	5172648	ExpressionStatement	Color_YELLOW	535:26:12162:12174	5172461	45	True				
ANR	5172649	Identifier	Color_YELLOW		5172461	0					
ANR	5172650	Statement	color_0xff	536:2:12178:12187	5172461	46	True				
ANR	5172651	Statement	=	536:13:12189:12189	5172461	47	True				
ANR	5172652	Statement	P	536:15:12191:12191	5172461	48	True				
ANR	5172653	Statement	(	536:17:12193:12193	5172461	49	True				
ANR	5172654	Statement	b0xff	536:18:12194:12198	5172461	50	True				
ANR	5172655	Statement	)	536:23:12199:12199	5172461	51	True				
ANR	5172656	Statement	:	536:24:12200:12200	5172461	52	True				
ANR	5172657	ExpressionStatement	Color_RED	536:26:12202:12211	5172461	53	True				
ANR	5172658	Identifier	Color_RED		5172461	0					
ANR	5172659	Statement	color_text	537:2:12215:12224	5172461	54	True				
ANR	5172660	Statement	=	537:13:12226:12226	5172461	55	True				
ANR	5172661	Statement	P	537:15:12228:12228	5172461	56	True				
ANR	5172662	Statement	(	537:17:12230:12230	5172461	57	True				
ANR	5172663	Statement	btext	537:18:12231:12235	5172461	58	True				
ANR	5172664	Statement	)	537:23:12236:12236	5172461	59	True				
ANR	5172665	Statement	:	537:24:12237:12237	5172461	60	True				
ANR	5172666	ExpressionStatement	Color_MAGENTA	537:26:12239:12252	5172461	61	True				
ANR	5172667	Identifier	Color_MAGENTA		5172461	0					
ANR	5172668	Statement	color_other	538:2:12256:12266	5172461	62	True				
ANR	5172669	Statement	=	538:14:12268:12268	5172461	63	True				
ANR	5172670	Statement	P	538:16:12270:12270	5172461	64	True				
ANR	5172671	Statement	(	538:18:12272:12272	5172461	65	True				
ANR	5172672	Statement	other	538:19:12273:12277	5172461	66	True				
ANR	5172673	Statement	)	538:24:12278:12278	5172461	67	True				
ANR	5172674	Statement	:	538:25:12279:12279	5172461	68	True				
ANR	5172675	ExpressionStatement	""""""	538:27:12281:12283	5172461	69	True				
ANR	5172676	PrimaryExpression	""""""		5172461	0					
ANR	5172677	IfStatement	if ( p -> cur_enabled && cur == - 1 )		5172461	13					
ANR	5172678	Condition	p -> cur_enabled && cur == - 1	540:5:12293:12319	5172461	0	True				
ANR	5172679	AndExpression	p -> cur_enabled && cur == - 1		5172461	0		&&			
ANR	5172680	PtrMemberAccess	p -> cur_enabled		5172461	0					
ANR	5172681	Identifier	p		5172461	0					
ANR	5172682	Identifier	cur_enabled		5172461	1					
ANR	5172683	EqualityExpression	cur == - 1		5172461	1		==			
ANR	5172684	Identifier	cur		5172461	0					
ANR	5172685	UnaryOperationExpression	- 1		5172461	1					
ANR	5172686	UnaryOperator	-		5172461	0					
ANR	5172687	PrimaryExpression	1		5172461	1					
ANR	5172688	CompoundStatement		25:34:832:832	5172461	1					
ANR	5172689	ExpressionStatement	cur = ocur	541:2:12326:12336	5172461	0	True				
ANR	5172690	AssignmentExpression	cur = ocur		5172461	0		=			
ANR	5172691	Identifier	cur		5172461	0					
ANR	5172692	Identifier	ocur		5172461	1					
ANR	5172693	ExpressionStatement	ocur ++	543:1:12342:12348	5172461	14	True				
ANR	5172694	PostIncDecOperationExpression	ocur ++		5172461	0					
ANR	5172695	Identifier	ocur		5172461	0					
ANR	5172696	IncDec	++		5172461	1					
ANR	5172697	ExpressionStatement	d = dst	544:1:12351:12358	5172461	15	True				
ANR	5172698	AssignmentExpression	d = dst		5172461	0		=			
ANR	5172699	Identifier	d		5172461	0					
ANR	5172700	Identifier	dst		5172461	1					
ANR	5172701	Statement	define	547:1:12419:12424	5172461	16	True				
ANR	5172702	Statement	memcat	547:8:12426:12431	5172461	17	True				
ANR	5172703	Statement	(	547:14:12432:12432	5172461	18	True				
ANR	5172704	Statement	x	547:15:12433:12433	5172461	19	True				
ANR	5172705	Statement	","	547:16:12434:12434	5172461	20	True				
ANR	5172706	Statement	y	547:18:12436:12436	5172461	21	True				
ANR	5172707	Statement	)	547:19:12437:12437	5172461	22	True				
ANR	5172708	CompoundStatement		33:1:951:951	5172461	23					
ANR	5172709	ExpressionStatement	"memcpy ( x , y , strlen ( y ) )"	549:2:12447:12472	5172461	0	True				
ANR	5172710	CallExpression	"memcpy ( x , y , strlen ( y ) )"		5172461	0					
ANR	5172711	Callee	memcpy		5172461	0					
ANR	5172712	Identifier	memcpy		5172461	0					
ANR	5172713	ArgumentList	x		5172461	1					
ANR	5172714	Argument	x		5172461	0					
ANR	5172715	Identifier	x		5172461	0					
ANR	5172716	Argument	y		5172461	1					
ANR	5172717	Identifier	y		5172461	0					
ANR	5172718	Argument	strlen ( y )		5172461	2					
ANR	5172719	CallExpression	strlen ( y )		5172461	0					
ANR	5172720	Callee	strlen		5172461	0					
ANR	5172721	Identifier	strlen		5172461	0					
ANR	5172722	ArgumentList	y		5172461	1					
ANR	5172723	Argument	y		5172461	0					
ANR	5172724	Identifier	y		5172461	0					
ANR	5172725	ExpressionStatement	( x ) += strlen ( y )	550:2:12477:12494	5172461	1	True				
ANR	5172726	AssignmentExpression	( x ) += strlen ( y )		5172461	0		+=			
ANR	5172727	Identifier	x		5172461	0					
ANR	5172728	CallExpression	strlen ( y )		5172461	1					
ANR	5172729	Callee	strlen		5172461	0					
ANR	5172730	Identifier	strlen		5172461	0					
ANR	5172731	ArgumentList	y		5172461	1					
ANR	5172732	Argument	y		5172461	0					
ANR	5172733	Identifier	y		5172461	0					
ANR	5172734	ForStatement	"for ( s = str , i = 0 ; s [ 0 ] ; i ++ )"		5172461	24					
ANR	5172735	ForInit	"s = str , i = 0 ;"	552:6:12506:12520	5172461	0	True				
ANR	5172736	Expression	"s = str , i = 0"		5172461	0					
ANR	5172737	AssignmentExpression	s = str		5172461	0		=			
ANR	5172738	Identifier	s		5172461	0					
ANR	5172739	Identifier	str		5172461	1					
ANR	5172740	AssignmentExpression	i = 0		5172461	1		=			
ANR	5172741	Identifier	i		5172461	0					
ANR	5172742	PrimaryExpression	0		5172461	1					
ANR	5172743	Condition	s [ 0 ]	552:22:12522:12525	5172461	1	True				
ANR	5172744	ArrayIndexing	s [ 0 ]		5172461	0					
ANR	5172745	Identifier	s		5172461	0					
ANR	5172746	PrimaryExpression	0		5172461	1					
ANR	5172747	PostIncDecOperationExpression	i ++	552:28:12528:12530	5172461	2	True				
ANR	5172748	Identifier	i		5172461	0					
ANR	5172749	IncDec	++		5172461	1					
ANR	5172750	CompoundStatement		38:2:1047:1060	5172461	3					
ANR	5172751	IdentifierDeclStatement	int d_inc = 2 ;	553:2:12537:12550	5172461	0	True				
ANR	5172752	IdentifierDecl	d_inc = 2		5172461	0					
ANR	5172753	IdentifierDeclType	int		5172461	0					
ANR	5172754	Identifier	d_inc		5172461	1					
ANR	5172755	AssignmentExpression	d_inc = 2		5172461	2		=			
ANR	5172756	Identifier	d_inc		5172461	0					
ANR	5172757	PrimaryExpression	2		5172461	1					
ANR	5172758	IfStatement	if ( p -> cur_enabled )		5172461	1					
ANR	5172759	Condition	p -> cur_enabled	554:6:12558:12571	5172461	0	True				
ANR	5172760	PtrMemberAccess	p -> cur_enabled		5172461	0					
ANR	5172761	Identifier	p		5172461	0					
ANR	5172762	Identifier	cur_enabled		5172461	1					
ANR	5172763	CompoundStatement		39:22:1084:1084	5172461	1					
ANR	5172764	IfStatement	if ( i == ocur - n )		5172461	0					
ANR	5172765	Condition	i == ocur - n	555:7:12583:12595	5172461	0	True				
ANR	5172766	EqualityExpression	i == ocur - n		5172461	0		==			
ANR	5172767	Identifier	i		5172461	0					
ANR	5172768	AdditiveExpression	ocur - n		5172461	1		-			
ANR	5172769	Identifier	ocur		5172461	0					
ANR	5172770	Identifier	n		5172461	1					
ANR	5172771	CompoundStatement		40:22:1108:1108	5172461	1					
ANR	5172772	ExpressionStatement	"memcat ( d , Color_RESET )"	556:4:12604:12627	5172461	0	True				
ANR	5172773	CallExpression	"memcat ( d , Color_RESET )"		5172461	0					
ANR	5172774	Callee	memcat		5172461	0					
ANR	5172775	Identifier	memcat		5172461	0					
ANR	5172776	ArgumentList	d		5172461	1					
ANR	5172777	Argument	d		5172461	0					
ANR	5172778	Identifier	d		5172461	0					
ANR	5172779	Argument	Color_RESET		5172461	1					
ANR	5172780	Identifier	Color_RESET		5172461	0					
ANR	5172781	IfStatement	if ( colors )		5172461	1					
ANR	5172782	Condition	colors	558:7:12641:12646	5172461	0	True				
ANR	5172783	Identifier	colors		5172461	0					
ANR	5172784	CompoundStatement		43:15:1159:1159	5172461	1					
ANR	5172785	ExpressionStatement	"memcat ( d , lastcol )"	559:4:12655:12674	5172461	0	True				
ANR	5172786	CallExpression	"memcat ( d , lastcol )"		5172461	0					
ANR	5172787	Callee	memcat		5172461	0					
ANR	5172788	Identifier	memcat		5172461	0					
ANR	5172789	ArgumentList	d		5172461	1					
ANR	5172790	Argument	d		5172461	0					
ANR	5172791	Identifier	d		5172461	0					
ANR	5172792	Argument	lastcol		5172461	1					
ANR	5172793	Identifier	lastcol		5172461	0					
ANR	5172794	IfStatement	if ( i >= cur - n && i < ocur - n )		5172461	2					
ANR	5172795	Condition	i >= cur - n && i < ocur - n	561:7:12688:12715	5172461	0	True				
ANR	5172796	AndExpression	i >= cur - n && i < ocur - n		5172461	0		&&			
ANR	5172797	RelationalExpression	i >= cur - n		5172461	0		>=			
ANR	5172798	Identifier	i		5172461	0					
ANR	5172799	AdditiveExpression	cur - n		5172461	1		-			
ANR	5172800	Identifier	cur		5172461	0					
ANR	5172801	Identifier	n		5172461	1					
ANR	5172802	RelationalExpression	i < ocur - n		5172461	1		<			
ANR	5172803	Identifier	i		5172461	0					
ANR	5172804	AdditiveExpression	ocur - n		5172461	1		-			
ANR	5172805	Identifier	ocur		5172461	0					
ANR	5172806	Identifier	n		5172461	1					
ANR	5172807	CompoundStatement		46:37:1228:1228	5172461	1					
ANR	5172808	ExpressionStatement	"memcat ( d , Color_INVERT )"	562:4:12724:12748	5172461	0	True				
ANR	5172809	CallExpression	"memcat ( d , Color_INVERT )"		5172461	0					
ANR	5172810	Callee	memcat		5172461	0					
ANR	5172811	Identifier	memcat		5172461	0					
ANR	5172812	ArgumentList	d		5172461	1					
ANR	5172813	Argument	d		5172461	0					
ANR	5172814	Identifier	d		5172461	0					
ANR	5172815	Argument	Color_INVERT		5172461	1					
ANR	5172816	Identifier	Color_INVERT		5172461	0					
ANR	5172817	IfStatement	if ( colors )		5172461	2					
ANR	5172818	Condition	colors	565:6:12765:12770	5172461	0	True				
ANR	5172819	Identifier	colors		5172461	0					
ANR	5172820	CompoundStatement		50:14:1283:1283	5172461	1					
ANR	5172821	IfStatement	if ( s [ 0 ] == '0' && s [ 1 ] == '0' )		5172461	0					
ANR	5172822	Condition	s [ 0 ] == '0' && s [ 1 ] == '0'	566:7:12782:12807	5172461	0	True				
ANR	5172823	AndExpression	s [ 0 ] == '0' && s [ 1 ] == '0'		5172461	0		&&			
ANR	5172824	EqualityExpression	s [ 0 ] == '0'		5172461	0		==			
ANR	5172825	ArrayIndexing	s [ 0 ]		5172461	0					
ANR	5172826	Identifier	s		5172461	0					
ANR	5172827	PrimaryExpression	0		5172461	1					
ANR	5172828	PrimaryExpression	'0'		5172461	1					
ANR	5172829	EqualityExpression	s [ 1 ] == '0'		5172461	1		==			
ANR	5172830	ArrayIndexing	s [ 1 ]		5172461	0					
ANR	5172831	Identifier	s		5172461	0					
ANR	5172832	PrimaryExpression	1		5172461	1					
ANR	5172833	PrimaryExpression	'0'		5172461	1					
ANR	5172834	CompoundStatement		51:35:1320:1320	5172461	1					
ANR	5172835	ExpressionStatement	lastcol = color_0x00	567:4:12816:12836	5172461	0	True				
ANR	5172836	AssignmentExpression	lastcol = color_0x00		5172461	0		=			
ANR	5172837	Identifier	lastcol		5172461	0					
ANR	5172838	Identifier	color_0x00		5172461	1					
ANR	5172839	ElseStatement	else		5172461	0					
ANR	5172840	IfStatement	if ( s [ 0 ] == '7' && s [ 1 ] == 'f' )		5172461	0					
ANR	5172841	Condition	s [ 0 ] == '7' && s [ 1 ] == 'f'	568:14:12852:12877	5172461	0	True				
ANR	5172842	AndExpression	s [ 0 ] == '7' && s [ 1 ] == 'f'		5172461	0		&&			
ANR	5172843	EqualityExpression	s [ 0 ] == '7'		5172461	0		==			
ANR	5172844	ArrayIndexing	s [ 0 ]		5172461	0					
ANR	5172845	Identifier	s		5172461	0					
ANR	5172846	PrimaryExpression	0		5172461	1					
ANR	5172847	PrimaryExpression	'7'		5172461	1					
ANR	5172848	EqualityExpression	s [ 1 ] == 'f'		5172461	1		==			
ANR	5172849	ArrayIndexing	s [ 1 ]		5172461	0					
ANR	5172850	Identifier	s		5172461	0					
ANR	5172851	PrimaryExpression	1		5172461	1					
ANR	5172852	PrimaryExpression	'f'		5172461	1					
ANR	5172853	CompoundStatement		53:42:1390:1390	5172461	1					
ANR	5172854	ExpressionStatement	lastcol = color_0x7f	569:4:12886:12906	5172461	0	True				
ANR	5172855	AssignmentExpression	lastcol = color_0x7f		5172461	0		=			
ANR	5172856	Identifier	lastcol		5172461	0					
ANR	5172857	Identifier	color_0x7f		5172461	1					
ANR	5172858	ElseStatement	else		5172461	0					
ANR	5172859	IfStatement	if ( s [ 0 ] == 'f' && s [ 1 ] == 'f' )		5172461	0					
ANR	5172860	Condition	s [ 0 ] == 'f' && s [ 1 ] == 'f'	570:14:12922:12947	5172461	0	True				
ANR	5172861	AndExpression	s [ 0 ] == 'f' && s [ 1 ] == 'f'		5172461	0		&&			
ANR	5172862	EqualityExpression	s [ 0 ] == 'f'		5172461	0		==			
ANR	5172863	ArrayIndexing	s [ 0 ]		5172461	0					
ANR	5172864	Identifier	s		5172461	0					
ANR	5172865	PrimaryExpression	0		5172461	1					
ANR	5172866	PrimaryExpression	'f'		5172461	1					
ANR	5172867	EqualityExpression	s [ 1 ] == 'f'		5172461	1		==			
ANR	5172868	ArrayIndexing	s [ 1 ]		5172461	0					
ANR	5172869	Identifier	s		5172461	0					
ANR	5172870	PrimaryExpression	1		5172461	1					
ANR	5172871	PrimaryExpression	'f'		5172461	1					
ANR	5172872	CompoundStatement		55:42:1460:1460	5172461	1					
ANR	5172873	ExpressionStatement	lastcol = color_0xff	571:4:12956:12976	5172461	0	True				
ANR	5172874	AssignmentExpression	lastcol = color_0xff		5172461	0		=			
ANR	5172875	Identifier	lastcol		5172461	0					
ANR	5172876	Identifier	color_0xff		5172461	1					
ANR	5172877	ElseStatement	else		5172461	0					
ANR	5172878	CompoundStatement		57:10:1498:1498	5172461	0					
ANR	5172879	ExpressionStatement	ch = r_hex_pair2bin ( s )	573:4:12994:13017	5172461	0	True				
ANR	5172880	AssignmentExpression	ch = r_hex_pair2bin ( s )		5172461	0		=			
ANR	5172881	Identifier	ch		5172461	0					
ANR	5172882	CallExpression	r_hex_pair2bin ( s )		5172461	1					
ANR	5172883	Callee	r_hex_pair2bin		5172461	0					
ANR	5172884	Identifier	r_hex_pair2bin		5172461	0					
ANR	5172885	ArgumentList	s		5172461	1					
ANR	5172886	Argument	s		5172461	0					
ANR	5172887	Identifier	s		5172461	0					
ANR	5172888	IfStatement	if ( ch == - 1 )		5172461	1					
ANR	5172889	Condition	ch == - 1	574:8:13027:13034	5172461	0	True				
ANR	5172890	EqualityExpression	ch == - 1		5172461	0		==			
ANR	5172891	Identifier	ch		5172461	0					
ANR	5172892	UnaryOperationExpression	- 1		5172461	1					
ANR	5172893	UnaryOperator	-		5172461	0					
ANR	5172894	PrimaryExpression	1		5172461	1					
ANR	5172895	CompoundStatement		59:18:1547:1547	5172461	1					
ANR	5172896	BreakStatement	break ;	575:5:13044:13049	5172461	0	True				
ANR	5172897	IfStatement	if ( IS_PRINTABLE ( ch ) )		5172461	2					
ANR	5172898	Condition	IS_PRINTABLE ( ch )	577:8:13065:13081	5172461	0	True				
ANR	5172899	CallExpression	IS_PRINTABLE ( ch )		5172461	0					
ANR	5172900	Callee	IS_PRINTABLE		5172461	0					
ANR	5172901	Identifier	IS_PRINTABLE		5172461	0					
ANR	5172902	ArgumentList	ch		5172461	1					
ANR	5172903	Argument	ch		5172461	0					
ANR	5172904	Identifier	ch		5172461	0					
ANR	5172905	CompoundStatement		62:27:1594:1594	5172461	1					
ANR	5172906	ExpressionStatement	lastcol = color_text	578:5:13091:13111	5172461	0	True				
ANR	5172907	AssignmentExpression	lastcol = color_text		5172461	0		=			
ANR	5172908	Identifier	lastcol		5172461	0					
ANR	5172909	Identifier	color_text		5172461	1					
ANR	5172910	ElseStatement	else		5172461	0					
ANR	5172911	CompoundStatement		64:11:1634:1634	5172461	0					
ANR	5172912	ExpressionStatement	lastcol = color_other	580:5:13131:13152	5172461	0	True				
ANR	5172913	AssignmentExpression	lastcol = color_other		5172461	0		=			
ANR	5172914	Identifier	lastcol		5172461	0					
ANR	5172915	Identifier	color_other		5172461	1					
ANR	5172916	ExpressionStatement	"memcat ( d , lastcol )"	583:3:13168:13187	5172461	1	True				
ANR	5172917	CallExpression	"memcat ( d , lastcol )"		5172461	0					
ANR	5172918	Callee	memcat		5172461	0					
ANR	5172919	Identifier	memcat		5172461	0					
ANR	5172920	ArgumentList	d		5172461	1					
ANR	5172921	Argument	d		5172461	0					
ANR	5172922	Identifier	d		5172461	0					
ANR	5172923	Argument	lastcol		5172461	1					
ANR	5172924	Identifier	lastcol		5172461	0					
ANR	5172925	IfStatement	if ( s [ 0 ] == '.' )		5172461	3					
ANR	5172926	Condition	s [ 0 ] == '.'	585:6:13199:13209	5172461	0	True				
ANR	5172927	EqualityExpression	s [ 0 ] == '.'		5172461	0		==			
ANR	5172928	ArrayIndexing	s [ 0 ]		5172461	0					
ANR	5172929	Identifier	s		5172461	0					
ANR	5172930	PrimaryExpression	0		5172461	1					
ANR	5172931	PrimaryExpression	'.'		5172461	1					
ANR	5172932	CompoundStatement		70:19:1722:1722	5172461	1					
ANR	5172933	ExpressionStatement	d_inc = 1	586:3:13217:13226	5172461	0	True				
ANR	5172934	AssignmentExpression	d_inc = 1		5172461	0		=			
ANR	5172935	Identifier	d_inc		5172461	0					
ANR	5172936	PrimaryExpression	1		5172461	1					
ANR	5172937	ExpressionStatement	"memcpy ( d , s , d_inc )"	588:2:13234:13254	5172461	4	True				
ANR	5172938	CallExpression	"memcpy ( d , s , d_inc )"		5172461	0					
ANR	5172939	Callee	memcpy		5172461	0					
ANR	5172940	Identifier	memcpy		5172461	0					
ANR	5172941	ArgumentList	d		5172461	1					
ANR	5172942	Argument	d		5172461	0					
ANR	5172943	Identifier	d		5172461	0					
ANR	5172944	Argument	s		5172461	1					
ANR	5172945	Identifier	s		5172461	0					
ANR	5172946	Argument	d_inc		5172461	2					
ANR	5172947	Identifier	d_inc		5172461	0					
ANR	5172948	ExpressionStatement	d += d_inc	589:2:13258:13268	5172461	5	True				
ANR	5172949	AssignmentExpression	d += d_inc		5172461	0		+=			
ANR	5172950	Identifier	d		5172461	0					
ANR	5172951	Identifier	d_inc		5172461	1					
ANR	5172952	ExpressionStatement	s += d_inc	590:2:13272:13282	5172461	6	True				
ANR	5172953	AssignmentExpression	s += d_inc		5172461	0		+=			
ANR	5172954	Identifier	s		5172461	0					
ANR	5172955	Identifier	d_inc		5172461	1					
ANR	5172956	IfStatement	if ( bs )		5172461	7					
ANR	5172957	Condition	bs	591:6:13290:13291	5172461	0	True				
ANR	5172958	Identifier	bs		5172461	0					
ANR	5172959	CompoundStatement		76:10:1804:1804	5172461	1					
ANR	5172960	ExpressionStatement	"memcat ( d , "" "" )"	592:3:13299:13314	5172461	0	True				
ANR	5172961	CallExpression	"memcat ( d , "" "" )"		5172461	0					
ANR	5172962	Callee	memcat		5172461	0					
ANR	5172963	Identifier	memcat		5172461	0					
ANR	5172964	ArgumentList	d		5172461	1					
ANR	5172965	Argument	d		5172461	0					
ANR	5172966	Identifier	d		5172461	0					
ANR	5172967	Argument	""" """		5172461	1					
ANR	5172968	PrimaryExpression	""" """		5172461	0					
ANR	5172969	IfStatement	if ( colors || p -> cur_enabled )		5172461	25					
ANR	5172970	Condition	colors || p -> cur_enabled	595:5:13328:13351	5172461	0	True				
ANR	5172971	OrExpression	colors || p -> cur_enabled		5172461	0		||			
ANR	5172972	Identifier	colors		5172461	0					
ANR	5172973	PtrMemberAccess	p -> cur_enabled		5172461	1					
ANR	5172974	Identifier	p		5172461	0					
ANR	5172975	Identifier	cur_enabled		5172461	1					
ANR	5172976	CompoundStatement		80:31:1864:1864	5172461	1					
ANR	5172977	IfStatement	if ( p -> resetbg )		5172461	0					
ANR	5172978	Condition	p -> resetbg	596:6:13362:13371	5172461	0	True				
ANR	5172979	PtrMemberAccess	p -> resetbg		5172461	0					
ANR	5172980	Identifier	p		5172461	0					
ANR	5172981	Identifier	resetbg		5172461	1					
ANR	5172982	CompoundStatement		81:18:1884:1884	5172461	1					
ANR	5172983	ExpressionStatement	"memcat ( d , Color_RESET )"	597:3:13379:13402	5172461	0	True				
ANR	5172984	CallExpression	"memcat ( d , Color_RESET )"		5172461	0					
ANR	5172985	Callee	memcat		5172461	0					
ANR	5172986	Identifier	memcat		5172461	0					
ANR	5172987	ArgumentList	d		5172461	1					
ANR	5172988	Argument	d		5172461	0					
ANR	5172989	Identifier	d		5172461	0					
ANR	5172990	Argument	Color_RESET		5172461	1					
ANR	5172991	Identifier	Color_RESET		5172461	0					
ANR	5172992	ElseStatement	else		5172461	0					
ANR	5172993	CompoundStatement		83:9:1923:1923	5172461	0					
ANR	5172994	ExpressionStatement	"memcat ( d , Color_RESET_NOBG )"	599:3:13418:13446	5172461	0	True				
ANR	5172995	CallExpression	"memcat ( d , Color_RESET_NOBG )"		5172461	0					
ANR	5172996	Callee	memcat		5172461	0					
ANR	5172997	Identifier	memcat		5172461	0					
ANR	5172998	ArgumentList	d		5172461	1					
ANR	5172999	Argument	d		5172461	0					
ANR	5173000	Identifier	d		5172461	0					
ANR	5173001	Argument	Color_RESET_NOBG		5172461	1					
ANR	5173002	Identifier	Color_RESET_NOBG		5172461	0					
ANR	5173003	ExpressionStatement	* d = '\\0'	602:1:13456:13465	5172461	26	True				
ANR	5173004	AssignmentExpression	* d = '\\0'		5172461	0		=			
ANR	5173005	UnaryOperationExpression	* d		5172461	0					
ANR	5173006	UnaryOperator	*		5172461	0					
ANR	5173007	Identifier	d		5172461	1					
ANR	5173008	PrimaryExpression	'\\0'		5172461	1					
ANR	5173009	ReturnStatement	return dst ;	603:1:13468:13478	5172461	27	True				
ANR	5173010	Identifier	dst		5172461	0					
ANR	5173011	ReturnType	R_API char *		5172461	1					
ANR	5173012	Identifier	r_print_hexpair		5172461	2					
ANR	5173013	ParameterList	"RPrint * p , const char * str , int n"		5172461	3					
ANR	5173014	Parameter	RPrint * p	516:28:11454:11462	5172461	0	True				
ANR	5173015	ParameterType	RPrint *		5172461	0					
ANR	5173016	Identifier	p		5172461	1					
ANR	5173017	Parameter	const char * str	516:39:11465:11479	5172461	1	True				
ANR	5173018	ParameterType	const char *		5172461	0					
ANR	5173019	Identifier	str		5172461	1					
ANR	5173020	Parameter	int n	516:56:11482:11486	5172461	2	True				
ANR	5173021	ParameterType	int		5172461	0					
ANR	5173022	Identifier	n		5172461	1					
ANR	5173023	CFGEntryNode	ENTRY		5172461		True				
ANR	5173024	CFGExitNode	EXIT		5172461		True				
ANR	5173025	Symbol	p -> ocur		5172461						
ANR	5173026	Symbol	cur		5172461						
ANR	5173027	Symbol	p -> resetbg		5172461						
ANR	5173028	Symbol	ocur		5172461						
ANR	5173029	Symbol	IS_PRINTABLE		5172461						
ANR	5173030	Symbol	dst		5172461						
ANR	5173031	Symbol	p -> cur_enabled		5172461						
ANR	5173032	Symbol	Color_RESET		5172461						
ANR	5173033	Symbol	calloc		5172461						
ANR	5173034	Symbol	color_other		5172461						
ANR	5173035	Symbol	colors		5172461						
ANR	5173036	Symbol	Color_WHITE		5172461						
ANR	5173037	Symbol	p -> cur		5172461						
ANR	5173038	Symbol	strlen		5172461						
ANR	5173039	Symbol	bs		5172461						
ANR	5173040	Symbol	color_text		5172461						
ANR	5173041	Symbol	R_PRINT_FLAGS_COLOR		5172461						
ANR	5173042	Symbol	Color_INVERT		5172461						
ANR	5173043	Symbol	lastcol		5172461						
ANR	5173044	Symbol	d		5172461						
ANR	5173045	Symbol	color_0x00		5172461						
ANR	5173046	Symbol	color_0xff		5172461						
ANR	5173047	Symbol	ch		5172461						
ANR	5173048	Symbol	r_hex_pair2bin		5172461						
ANR	5173049	Symbol	i		5172461						
ANR	5173050	Symbol	R_MIN		5172461						
ANR	5173051	Symbol	n		5172461						
ANR	5173052	Symbol	d_inc		5172461						
ANR	5173053	Symbol	* d		5172461						
ANR	5173054	Symbol	p		5172461						
ANR	5173055	Symbol	str		5172461						
ANR	5173056	Symbol	s		5172461						
ANR	5173057	Symbol	color_0x7f		5172461						
ANR	5173058	Symbol	p -> bytespace		5172461						
ANR	5173059	Symbol	R_MAX		5172461						
ANR	5173060	Symbol	x		5172461						
ANR	5173061	Symbol	p -> flags		5172461						
ANR	5173062	Symbol	y		5172461						
ANR	5173063	Symbol	* p		5172461						
ANR	5173064	Symbol	Color_RESET_NOBG		5172461						
ANR	5173065	Symbol	* s		5172461						
ANR	5173066	DeclStmt									
ANR	5173067	Decl							char	char [ 64 ]	colorbuffer
ANR	5173068	Function	r_print_byte_color	608:6:13593:14195							
ANR	5173069	FunctionDef	"r_print_byte_color (RPrint * p , int ch)"		5173068	0					
ANR	5173070	CompoundStatement		608:56:13643:14195	5173068	0					
ANR	5173071	IfStatement	if ( p -> flags & R_PRINT_FLAGS_RAINBOW )		5173068	0					
ANR	5173072	Condition	p -> flags & R_PRINT_FLAGS_RAINBOW	609:5:13650:13681	5173068	0	True				
ANR	5173073	BitAndExpression	p -> flags & R_PRINT_FLAGS_RAINBOW		5173068	0		&			
ANR	5173074	PtrMemberAccess	p -> flags		5173068	0					
ANR	5173075	Identifier	p		5173068	0					
ANR	5173076	Identifier	flags		5173068	1					
ANR	5173077	Identifier	R_PRINT_FLAGS_RAINBOW		5173068	1					
ANR	5173078	CompoundStatement		4:2:62:112	5173068	1					
ANR	5173079	IdentifierDeclStatement	int bg = ( p -> flags & R_PRINT_FLAGS_NONHEX ) ? 48 : 38 ;	611:2:13706:13756	5173068	0	True				
ANR	5173080	IdentifierDecl	bg = ( p -> flags & R_PRINT_FLAGS_NONHEX ) ? 48 : 38		5173068	0					
ANR	5173081	IdentifierDeclType	int		5173068	0					
ANR	5173082	Identifier	bg		5173068	1					
ANR	5173083	AssignmentExpression	bg = ( p -> flags & R_PRINT_FLAGS_NONHEX ) ? 48 : 38		5173068	2		=			
ANR	5173084	Identifier	bg		5173068	0					
ANR	5173085	ConditionalExpression	( p -> flags & R_PRINT_FLAGS_NONHEX ) ? 48 : 38		5173068	1					
ANR	5173086	Condition	p -> flags & R_PRINT_FLAGS_NONHEX		5173068	0					
ANR	5173087	BitAndExpression	p -> flags & R_PRINT_FLAGS_NONHEX		5173068	0		&			
ANR	5173088	PtrMemberAccess	p -> flags		5173068	0					
ANR	5173089	Identifier	p		5173068	0					
ANR	5173090	Identifier	flags		5173068	1					
ANR	5173091	Identifier	R_PRINT_FLAGS_NONHEX		5173068	1					
ANR	5173092	PrimaryExpression	48		5173068	1					
ANR	5173093	PrimaryExpression	38		5173068	2					
ANR	5173094	ExpressionStatement	"snprintf ( colorbuffer , sizeof ( colorbuffer ) , ""\\033[%d;5;%dm"" , bg , ch )"	612:2:13760:13829	5173068	1	True				
ANR	5173095	CallExpression	"snprintf ( colorbuffer , sizeof ( colorbuffer ) , ""\\033[%d;5;%dm"" , bg , ch )"		5173068	0					
ANR	5173096	Callee	snprintf		5173068	0					
ANR	5173097	Identifier	snprintf		5173068	0					
ANR	5173098	ArgumentList	colorbuffer		5173068	1					
ANR	5173099	Argument	colorbuffer		5173068	0					
ANR	5173100	Identifier	colorbuffer		5173068	0					
ANR	5173101	Argument	sizeof ( colorbuffer )		5173068	1					
ANR	5173102	SizeofExpression	sizeof ( colorbuffer )		5173068	0					
ANR	5173103	Sizeof	sizeof		5173068	0					
ANR	5173104	SizeofOperand	colorbuffer		5173068	1					
ANR	5173105	Argument	"""\\033[%d;5;%dm"""		5173068	2					
ANR	5173106	PrimaryExpression	"""\\033[%d;5;%dm"""		5173068	0					
ANR	5173107	Argument	bg		5173068	3					
ANR	5173108	Identifier	bg		5173068	0					
ANR	5173109	Argument	ch		5173068	4					
ANR	5173110	Identifier	ch		5173068	0					
ANR	5173111	ReturnStatement	return colorbuffer ;	613:2:13833:13851	5173068	2	True				
ANR	5173112	Identifier	colorbuffer		5173068	0					
ANR	5173113	IdentifierDeclStatement	const bool use_color = p -> flags & R_PRINT_FLAGS_COLOR ;	615:1:13857:13910	5173068	1	True				
ANR	5173114	IdentifierDecl	use_color = p -> flags & R_PRINT_FLAGS_COLOR		5173068	0					
ANR	5173115	IdentifierDeclType	const bool		5173068	0					
ANR	5173116	Identifier	use_color		5173068	1					
ANR	5173117	AssignmentExpression	use_color = p -> flags & R_PRINT_FLAGS_COLOR		5173068	2		=			
ANR	5173118	Identifier	use_color		5173068	0					
ANR	5173119	BitAndExpression	p -> flags & R_PRINT_FLAGS_COLOR		5173068	1		&			
ANR	5173120	PtrMemberAccess	p -> flags		5173068	0					
ANR	5173121	Identifier	p		5173068	0					
ANR	5173122	Identifier	flags		5173068	1					
ANR	5173123	Identifier	R_PRINT_FLAGS_COLOR		5173068	1					
ANR	5173124	IfStatement	if ( ! use_color )		5173068	2					
ANR	5173125	Condition	! use_color	616:5:13917:13926	5173068	0	True				
ANR	5173126	UnaryOperationExpression	! use_color		5173068	0					
ANR	5173127	UnaryOperator	!		5173068	0					
ANR	5173128	Identifier	use_color		5173068	1					
ANR	5173129	CompoundStatement		9:17:285:285	5173068	1					
ANR	5173130	ReturnStatement	return NULL ;	617:2:13933:13944	5173068	0	True				
ANR	5173131	Identifier	NULL		5173068	0					
ANR	5173132	SwitchStatement	switch ( ch )		5173068	3					
ANR	5173133	Condition	ch	619:9:13958:13959	5173068	0	True				
ANR	5173134	Identifier	ch		5173068	0					
ANR	5173135	CompoundStatement		12:13:318:318	5173068	1					
ANR	5173136	Label	case 0x00 :	620:1:13965:13974	5173068	0	True				
ANR	5173137	Statement	return	620:12:13976:13981	5173068	1	True				
ANR	5173138	Statement	P	620:19:13983:13983	5173068	2	True				
ANR	5173139	Statement	(	620:21:13985:13985	5173068	3	True				
ANR	5173140	Statement	b0x00	620:22:13986:13990	5173068	4	True				
ANR	5173141	Statement	)	620:27:13991:13991	5173068	5	True				
ANR	5173142	Statement	:	620:28:13992:13992	5173068	6	True				
ANR	5173143	ExpressionStatement	Color_GREEN	620:30:13994:14005	5173068	7	True				
ANR	5173144	Identifier	Color_GREEN		5173068	0					
ANR	5173145	Label	case 0x7F :	621:1:14008:14017	5173068	8	True				
ANR	5173146	Statement	return	621:12:14019:14024	5173068	9	True				
ANR	5173147	Statement	P	621:19:14026:14026	5173068	10	True				
ANR	5173148	Statement	(	621:21:14028:14028	5173068	11	True				
ANR	5173149	Statement	b0x7f	621:22:14029:14033	5173068	12	True				
ANR	5173150	Statement	)	621:27:14034:14034	5173068	13	True				
ANR	5173151	Statement	:	621:28:14035:14035	5173068	14	True				
ANR	5173152	ExpressionStatement	Color_YELLOW	621:30:14037:14049	5173068	15	True				
ANR	5173153	Identifier	Color_YELLOW		5173068	0					
ANR	5173154	Label	case 0xFF :	622:1:14052:14061	5173068	16	True				
ANR	5173155	Statement	return	622:12:14063:14068	5173068	17	True				
ANR	5173156	Statement	P	622:19:14070:14070	5173068	18	True				
ANR	5173157	Statement	(	622:21:14072:14072	5173068	19	True				
ANR	5173158	Statement	b0xff	622:22:14073:14077	5173068	20	True				
ANR	5173159	Statement	)	622:27:14078:14078	5173068	21	True				
ANR	5173160	Statement	:	622:28:14079:14079	5173068	22	True				
ANR	5173161	ExpressionStatement	Color_RED	622:30:14081:14090	5173068	23	True				
ANR	5173162	Identifier	Color_RED		5173068	0					
ANR	5173163	Label	default :	623:1:14093:14100	5173068	24	True				
ANR	5173164	Identifier	default		5173068	0					
ANR	5173165	Statement	return	623:10:14102:14107	5173068	25	True				
ANR	5173166	Statement	IS_PRINTABLE	623:17:14109:14120	5173068	26	True				
ANR	5173167	Statement	(	623:30:14122:14122	5173068	27	True				
ANR	5173168	Statement	ch	623:31:14123:14124	5173068	28	True				
ANR	5173169	Statement	)	623:33:14125:14125	5173068	29	True				
ANR	5173170	Statement	?	623:34:14126:14126	5173068	30	True				
ANR	5173171	Statement	P	623:36:14128:14128	5173068	31	True				
ANR	5173172	Statement	(	623:38:14130:14130	5173068	32	True				
ANR	5173173	Statement	btext	623:39:14131:14135	5173068	33	True				
ANR	5173174	Statement	)	623:44:14136:14136	5173068	34	True				
ANR	5173175	Statement	:	623:45:14137:14137	5173068	35	True				
ANR	5173176	Label	Color_MAGENTA :	623:47:14139:14152	5173068	36	True				
ANR	5173177	Identifier	Color_MAGENTA		5173068	0					
ANR	5173178	Statement	P	623:62:14154:14154	5173068	37	True				
ANR	5173179	Statement	(	623:64:14156:14156	5173068	38	True				
ANR	5173180	Statement	other	623:65:14157:14161	5173068	39	True				
ANR	5173181	Statement	)	623:70:14162:14162	5173068	40	True				
ANR	5173182	Statement	:	623:71:14163:14163	5173068	41	True				
ANR	5173183	ExpressionStatement	Color_WHITE	623:73:14165:14176	5173068	42	True				
ANR	5173184	Identifier	Color_WHITE		5173068	0					
ANR	5173185	ReturnStatement	return NULL ;	625:1:14182:14193	5173068	4	True				
ANR	5173186	Identifier	NULL		5173068	0					
ANR	5173187	ReturnType	const char *		5173068	1					
ANR	5173188	Identifier	r_print_byte_color		5173068	2					
ANR	5173189	ParameterList	"RPrint * p , int ch"		5173068	3					
ANR	5173190	Parameter	RPrint * p	608:37:13624:13632	5173068	0	True				
ANR	5173191	ParameterType	RPrint *		5173068	0					
ANR	5173192	Identifier	p		5173068	1					
ANR	5173193	Parameter	int ch	608:48:13635:13640	5173068	1	True				
ANR	5173194	ParameterType	int		5173068	0					
ANR	5173195	Identifier	ch		5173068	1					
ANR	5173196	CFGEntryNode	ENTRY		5173068		True				
ANR	5173197	CFGExitNode	EXIT		5173068		True				
ANR	5173198	Symbol	p		5173068						
ANR	5173199	Symbol	NULL		5173068						
ANR	5173200	Symbol	ch		5173068						
ANR	5173201	Symbol	bg		5173068						
ANR	5173202	Symbol	R_PRINT_FLAGS_RAINBOW		5173068						
ANR	5173203	Symbol	R_PRINT_FLAGS_COLOR		5173068						
ANR	5173204	Symbol	p -> flags		5173068						
ANR	5173205	Symbol	* p		5173068						
ANR	5173206	Symbol	use_color		5173068						
ANR	5173207	Symbol	R_PRINT_FLAGS_NONHEX		5173068						
ANR	5173208	Symbol	colorbuffer		5173068						
ANR	5173209	Function	r_print_byte	628:0:14198:14756							
ANR	5173210	FunctionDef	"r_print_byte (RPrint * p , const char * fmt , int idx , ut8 ch)"		5173209	0					
ANR	5173211	CompoundStatement		628:69:14267:14756	5173209	0					
ANR	5173212	IdentifierDeclStatement	PrintfCallback printfmt = ( PrintfCallback ) ( p ? p -> cb_printf : libc_printf ) ;	629:1:14270:14343	5173209	0	True				
ANR	5173213	IdentifierDecl	printfmt = ( PrintfCallback ) ( p ? p -> cb_printf : libc_printf )		5173209	0					
ANR	5173214	IdentifierDeclType	PrintfCallback		5173209	0					
ANR	5173215	Identifier	printfmt		5173209	1					
ANR	5173216	AssignmentExpression	printfmt = ( PrintfCallback ) ( p ? p -> cb_printf : libc_printf )		5173209	2		=			
ANR	5173217	Identifier	printfmt		5173209	0					
ANR	5173218	CastExpression	( PrintfCallback ) ( p ? p -> cb_printf : libc_printf )		5173209	1					
ANR	5173219	CastTarget	PrintfCallback		5173209	0					
ANR	5173220	ConditionalExpression	p ? p -> cb_printf : libc_printf		5173209	1					
ANR	5173221	Condition	p		5173209	0					
ANR	5173222	Identifier	p		5173209	0					
ANR	5173223	PtrMemberAccess	p -> cb_printf		5173209	1					
ANR	5173224	Identifier	p		5173209	0					
ANR	5173225	Identifier	cb_printf		5173209	1					
ANR	5173226	Identifier	libc_printf		5173209	2					
ANR	5173227	IdentifierDeclStatement	ut8 rch = ch ;	630:1:14346:14358	5173209	1	True				
ANR	5173228	IdentifierDecl	rch = ch		5173209	0					
ANR	5173229	IdentifierDeclType	ut8		5173209	0					
ANR	5173230	Identifier	rch		5173209	1					
ANR	5173231	AssignmentExpression	rch = ch		5173209	2		=			
ANR	5173232	Identifier	ch		5173209	0					
ANR	5173233	Identifier	ch		5173209	1					
ANR	5173234	IfStatement	if ( ! IS_PRINTABLE ( ch ) && fmt [ 0 ] == '%' && fmt [ 1 ] == 'c' )		5173209	2					
ANR	5173235	Condition	! IS_PRINTABLE ( ch ) && fmt [ 0 ] == '%' && fmt [ 1 ] == 'c'	631:5:14365:14416	5173209	0	True				
ANR	5173236	AndExpression	! IS_PRINTABLE ( ch ) && fmt [ 0 ] == '%' && fmt [ 1 ] == 'c'		5173209	0		&&			
ANR	5173237	UnaryOperationExpression	! IS_PRINTABLE ( ch )		5173209	0					
ANR	5173238	UnaryOperator	!		5173209	0					
ANR	5173239	CallExpression	IS_PRINTABLE ( ch )		5173209	1					
ANR	5173240	Callee	IS_PRINTABLE		5173209	0					
ANR	5173241	Identifier	IS_PRINTABLE		5173209	0					
ANR	5173242	ArgumentList	ch		5173209	1					
ANR	5173243	Argument	ch		5173209	0					
ANR	5173244	Identifier	ch		5173209	0					
ANR	5173245	AndExpression	fmt [ 0 ] == '%' && fmt [ 1 ] == 'c'		5173209	1		&&			
ANR	5173246	EqualityExpression	fmt [ 0 ] == '%'		5173209	0		==			
ANR	5173247	ArrayIndexing	fmt [ 0 ]		5173209	0					
ANR	5173248	Identifier	fmt		5173209	0					
ANR	5173249	PrimaryExpression	0		5173209	1					
ANR	5173250	PrimaryExpression	'%'		5173209	1					
ANR	5173251	EqualityExpression	fmt [ 1 ] == 'c'		5173209	1		==			
ANR	5173252	ArrayIndexing	fmt [ 1 ]		5173209	0					
ANR	5173253	Identifier	fmt		5173209	0					
ANR	5173254	PrimaryExpression	1		5173209	1					
ANR	5173255	PrimaryExpression	'c'		5173209	1					
ANR	5173256	CompoundStatement		4:59:151:151	5173209	1					
ANR	5173257	ExpressionStatement	rch = '.'	632:2:14423:14432	5173209	0	True				
ANR	5173258	AssignmentExpression	rch = '.'		5173209	0		=			
ANR	5173259	Identifier	rch		5173209	0					
ANR	5173260	PrimaryExpression	'.'		5173209	1					
ANR	5173261	ExpressionStatement	"r_print_cursor ( p , idx , 1 , 1 )"	634:1:14438:14467	5173209	3	True				
ANR	5173262	CallExpression	"r_print_cursor ( p , idx , 1 , 1 )"		5173209	0					
ANR	5173263	Callee	r_print_cursor		5173209	0					
ANR	5173264	Identifier	r_print_cursor		5173209	0					
ANR	5173265	ArgumentList	p		5173209	1					
ANR	5173266	Argument	p		5173209	0					
ANR	5173267	Identifier	p		5173209	0					
ANR	5173268	Argument	idx		5173209	1					
ANR	5173269	Identifier	idx		5173209	0					
ANR	5173270	Argument	1		5173209	2					
ANR	5173271	PrimaryExpression	1		5173209	0					
ANR	5173272	Argument	1		5173209	3					
ANR	5173273	PrimaryExpression	1		5173209	0					
ANR	5173274	IfStatement	if ( p && p -> flags & R_PRINT_FLAGS_COLOR )		5173209	4					
ANR	5173275	Condition	p && p -> flags & R_PRINT_FLAGS_COLOR	635:5:14474:14508	5173209	0	True				
ANR	5173276	AndExpression	p && p -> flags & R_PRINT_FLAGS_COLOR		5173209	0		&&			
ANR	5173277	Identifier	p		5173209	0					
ANR	5173278	BitAndExpression	p -> flags & R_PRINT_FLAGS_COLOR		5173209	1		&			
ANR	5173279	PtrMemberAccess	p -> flags		5173209	0					
ANR	5173280	Identifier	p		5173209	0					
ANR	5173281	Identifier	flags		5173209	1					
ANR	5173282	Identifier	R_PRINT_FLAGS_COLOR		5173209	1					
ANR	5173283	CompoundStatement		9:2:247:297	5173209	1					
ANR	5173284	IdentifierDeclStatement	"const char * bytecolor = r_print_byte_color ( p , ch ) ;"	636:2:14515:14565	5173209	0	True				
ANR	5173285	IdentifierDecl	"* bytecolor = r_print_byte_color ( p , ch )"		5173209	0					
ANR	5173286	IdentifierDeclType	const char *		5173209	0					
ANR	5173287	Identifier	bytecolor		5173209	1					
ANR	5173288	AssignmentExpression	"* bytecolor = r_print_byte_color ( p , ch )"		5173209	2		=			
ANR	5173289	Identifier	bytecolor		5173209	0					
ANR	5173290	CallExpression	"r_print_byte_color ( p , ch )"		5173209	1					
ANR	5173291	Callee	r_print_byte_color		5173209	0					
ANR	5173292	Identifier	r_print_byte_color		5173209	0					
ANR	5173293	ArgumentList	p		5173209	1					
ANR	5173294	Argument	p		5173209	0					
ANR	5173295	Identifier	p		5173209	0					
ANR	5173296	Argument	ch		5173209	1					
ANR	5173297	Identifier	ch		5173209	0					
ANR	5173298	IfStatement	if ( bytecolor )		5173209	1					
ANR	5173299	Condition	bytecolor	637:6:14573:14581	5173209	0	True				
ANR	5173300	Identifier	bytecolor		5173209	0					
ANR	5173301	CompoundStatement		10:17:316:316	5173209	1					
ANR	5173302	ExpressionStatement	printfmt ( bytecolor )	638:3:14589:14609	5173209	0	True				
ANR	5173303	CallExpression	printfmt ( bytecolor )		5173209	0					
ANR	5173304	Callee	printfmt		5173209	0					
ANR	5173305	Identifier	printfmt		5173209	0					
ANR	5173306	ArgumentList	bytecolor		5173209	1					
ANR	5173307	Argument	bytecolor		5173209	0					
ANR	5173308	Identifier	bytecolor		5173209	0					
ANR	5173309	ExpressionStatement	"printfmt ( fmt , rch )"	640:2:14617:14636	5173209	2	True				
ANR	5173310	CallExpression	"printfmt ( fmt , rch )"		5173209	0					
ANR	5173311	Callee	printfmt		5173209	0					
ANR	5173312	Identifier	printfmt		5173209	0					
ANR	5173313	ArgumentList	fmt		5173209	1					
ANR	5173314	Argument	fmt		5173209	0					
ANR	5173315	Identifier	fmt		5173209	0					
ANR	5173316	Argument	rch		5173209	1					
ANR	5173317	Identifier	rch		5173209	0					
ANR	5173318	IfStatement	if ( bytecolor )		5173209	3					
ANR	5173319	Condition	bytecolor	641:6:14644:14652	5173209	0	True				
ANR	5173320	Identifier	bytecolor		5173209	0					
ANR	5173321	CompoundStatement		14:17:387:387	5173209	1					
ANR	5173322	ExpressionStatement	printfmt ( Color_RESET )	642:3:14660:14682	5173209	0	True				
ANR	5173323	CallExpression	printfmt ( Color_RESET )		5173209	0					
ANR	5173324	Callee	printfmt		5173209	0					
ANR	5173325	Identifier	printfmt		5173209	0					
ANR	5173326	ArgumentList	Color_RESET		5173209	1					
ANR	5173327	Argument	Color_RESET		5173209	0					
ANR	5173328	Identifier	Color_RESET		5173209	0					
ANR	5173329	ElseStatement	else		5173209	0					
ANR	5173330	CompoundStatement		17:8:428:428	5173209	0					
ANR	5173331	ExpressionStatement	"printfmt ( fmt , rch )"	645:2:14700:14719	5173209	0	True				
ANR	5173332	CallExpression	"printfmt ( fmt , rch )"		5173209	0					
ANR	5173333	Callee	printfmt		5173209	0					
ANR	5173334	Identifier	printfmt		5173209	0					
ANR	5173335	ArgumentList	fmt		5173209	1					
ANR	5173336	Argument	fmt		5173209	0					
ANR	5173337	Identifier	fmt		5173209	0					
ANR	5173338	Argument	rch		5173209	1					
ANR	5173339	Identifier	rch		5173209	0					
ANR	5173340	ExpressionStatement	"r_print_cursor ( p , idx , 1 , 0 )"	647:1:14725:14754	5173209	5	True				
ANR	5173341	CallExpression	"r_print_cursor ( p , idx , 1 , 0 )"		5173209	0					
ANR	5173342	Callee	r_print_cursor		5173209	0					
ANR	5173343	Identifier	r_print_cursor		5173209	0					
ANR	5173344	ArgumentList	p		5173209	1					
ANR	5173345	Argument	p		5173209	0					
ANR	5173346	Identifier	p		5173209	0					
ANR	5173347	Argument	idx		5173209	1					
ANR	5173348	Identifier	idx		5173209	0					
ANR	5173349	Argument	1		5173209	2					
ANR	5173350	PrimaryExpression	1		5173209	0					
ANR	5173351	Argument	0		5173209	3					
ANR	5173352	PrimaryExpression	0		5173209	0					
ANR	5173353	ReturnType	R_API void		5173209	1					
ANR	5173354	Identifier	r_print_byte		5173209	2					
ANR	5173355	ParameterList	"RPrint * p , const char * fmt , int idx , ut8 ch"		5173209	3					
ANR	5173356	Parameter	RPrint * p	628:24:14222:14230	5173209	0	True				
ANR	5173357	ParameterType	RPrint *		5173209	0					
ANR	5173358	Identifier	p		5173209	1					
ANR	5173359	Parameter	const char * fmt	628:35:14233:14247	5173209	1	True				
ANR	5173360	ParameterType	const char *		5173209	0					
ANR	5173361	Identifier	fmt		5173209	1					
ANR	5173362	Parameter	int idx	628:52:14250:14256	5173209	2	True				
ANR	5173363	ParameterType	int		5173209	0					
ANR	5173364	Identifier	idx		5173209	1					
ANR	5173365	Parameter	ut8 ch	628:61:14259:14264	5173209	3	True				
ANR	5173366	ParameterType	ut8		5173209	0					
ANR	5173367	Identifier	ch		5173209	1					
ANR	5173368	CFGEntryNode	ENTRY		5173209		True				
ANR	5173369	CFGExitNode	EXIT		5173209		True				
ANR	5173370	Symbol	IS_PRINTABLE		5173209						
ANR	5173371	Symbol	ch		5173209						
ANR	5173372	Symbol	* fmt		5173209						
ANR	5173373	Symbol	Color_RESET		5173209						
ANR	5173374	Symbol	fmt		5173209						
ANR	5173375	Symbol	bytecolor		5173209						
ANR	5173376	Symbol	p		5173209						
ANR	5173377	Symbol	libc_printf		5173209						
ANR	5173378	Symbol	r_print_byte_color		5173209						
ANR	5173379	Symbol	rch		5173209						
ANR	5173380	Symbol	R_PRINT_FLAGS_COLOR		5173209						
ANR	5173381	Symbol	p -> flags		5173209						
ANR	5173382	Symbol	* p		5173209						
ANR	5173383	Symbol	printfmt		5173209						
ANR	5173384	Symbol	idx		5173209						
ANR	5173385	Symbol	p -> cb_printf		5173209						
ANR	5173386	Function	r_print_string	650:0:14759:15943							
ANR	5173387	FunctionDef	"r_print_string (RPrint * p , ut64 seek , const ut8 * buf , int len , int options)"		5173386	0					
ANR	5173388	CompoundStatement		650:85:14844:15943	5173386	0					
ANR	5173389	IdentifierDeclStatement	int i ;	651:1:14847:14852	5173386	0	True				
ANR	5173390	IdentifierDecl	i		5173386	0					
ANR	5173391	IdentifierDeclType	int		5173386	0					
ANR	5173392	Identifier	i		5173386	1					
ANR	5173393	IdentifierDeclStatement	bool wide = ( options & R_PRINT_STRING_WIDE ) ;	652:1:14855:14898	5173386	1	True				
ANR	5173394	IdentifierDecl	wide = ( options & R_PRINT_STRING_WIDE )		5173386	0					
ANR	5173395	IdentifierDeclType	bool		5173386	0					
ANR	5173396	Identifier	wide		5173386	1					
ANR	5173397	AssignmentExpression	wide = ( options & R_PRINT_STRING_WIDE )		5173386	2		=			
ANR	5173398	Identifier	wide		5173386	0					
ANR	5173399	BitAndExpression	options & R_PRINT_STRING_WIDE		5173386	1		&			
ANR	5173400	Identifier	options		5173386	0					
ANR	5173401	Identifier	R_PRINT_STRING_WIDE		5173386	1					
ANR	5173402	IdentifierDeclStatement	bool wide32 = ( options & R_PRINT_STRING_WIDE32 ) ;	653:1:14901:14948	5173386	2	True				
ANR	5173403	IdentifierDecl	wide32 = ( options & R_PRINT_STRING_WIDE32 )		5173386	0					
ANR	5173404	IdentifierDeclType	bool		5173386	0					
ANR	5173405	Identifier	wide32		5173386	1					
ANR	5173406	AssignmentExpression	wide32 = ( options & R_PRINT_STRING_WIDE32 )		5173386	2		=			
ANR	5173407	Identifier	wide32		5173386	0					
ANR	5173408	BitAndExpression	options & R_PRINT_STRING_WIDE32		5173386	1		&			
ANR	5173409	Identifier	options		5173386	0					
ANR	5173410	Identifier	R_PRINT_STRING_WIDE32		5173386	1					
ANR	5173411	IdentifierDeclStatement	bool zeroend = ( options & R_PRINT_STRING_ZEROEND ) ;	654:1:14951:15000	5173386	3	True				
ANR	5173412	IdentifierDecl	zeroend = ( options & R_PRINT_STRING_ZEROEND )		5173386	0					
ANR	5173413	IdentifierDeclType	bool		5173386	0					
ANR	5173414	Identifier	zeroend		5173386	1					
ANR	5173415	AssignmentExpression	zeroend = ( options & R_PRINT_STRING_ZEROEND )		5173386	2		=			
ANR	5173416	Identifier	zeroend		5173386	0					
ANR	5173417	BitAndExpression	options & R_PRINT_STRING_ZEROEND		5173386	1		&			
ANR	5173418	Identifier	options		5173386	0					
ANR	5173419	Identifier	R_PRINT_STRING_ZEROEND		5173386	1					
ANR	5173420	IdentifierDeclStatement	bool wrap = ( options & R_PRINT_STRING_WRAP ) ;	655:1:15003:15046	5173386	4	True				
ANR	5173421	IdentifierDecl	wrap = ( options & R_PRINT_STRING_WRAP )		5173386	0					
ANR	5173422	IdentifierDeclType	bool		5173386	0					
ANR	5173423	Identifier	wrap		5173386	1					
ANR	5173424	AssignmentExpression	wrap = ( options & R_PRINT_STRING_WRAP )		5173386	2		=			
ANR	5173425	Identifier	wrap		5173386	0					
ANR	5173426	BitAndExpression	options & R_PRINT_STRING_WRAP		5173386	1		&			
ANR	5173427	Identifier	options		5173386	0					
ANR	5173428	Identifier	R_PRINT_STRING_WRAP		5173386	1					
ANR	5173429	IdentifierDeclStatement	bool urlencode = ( options & R_PRINT_STRING_URLENCODE ) ;	656:1:15049:15102	5173386	5	True				
ANR	5173430	IdentifierDecl	urlencode = ( options & R_PRINT_STRING_URLENCODE )		5173386	0					
ANR	5173431	IdentifierDeclType	bool		5173386	0					
ANR	5173432	Identifier	urlencode		5173386	1					
ANR	5173433	AssignmentExpression	urlencode = ( options & R_PRINT_STRING_URLENCODE )		5173386	2		=			
ANR	5173434	Identifier	urlencode		5173386	0					
ANR	5173435	BitAndExpression	options & R_PRINT_STRING_URLENCODE		5173386	1		&			
ANR	5173436	Identifier	options		5173386	0					
ANR	5173437	Identifier	R_PRINT_STRING_URLENCODE		5173386	1					
ANR	5173438	IdentifierDeclStatement	bool esc_nl = ( options & R_PRINT_STRING_ESC_NL ) ;	657:1:15105:15152	5173386	6	True				
ANR	5173439	IdentifierDecl	esc_nl = ( options & R_PRINT_STRING_ESC_NL )		5173386	0					
ANR	5173440	IdentifierDeclType	bool		5173386	0					
ANR	5173441	Identifier	esc_nl		5173386	1					
ANR	5173442	AssignmentExpression	esc_nl = ( options & R_PRINT_STRING_ESC_NL )		5173386	2		=			
ANR	5173443	Identifier	esc_nl		5173386	0					
ANR	5173444	BitAndExpression	options & R_PRINT_STRING_ESC_NL		5173386	1		&			
ANR	5173445	Identifier	options		5173386	0					
ANR	5173446	Identifier	R_PRINT_STRING_ESC_NL		5173386	1					
ANR	5173447	ExpressionStatement	p -> interrupt = 0	658:1:15155:15171	5173386	7	True				
ANR	5173448	AssignmentExpression	p -> interrupt = 0		5173386	0		=			
ANR	5173449	PtrMemberAccess	p -> interrupt		5173386	0					
ANR	5173450	Identifier	p		5173386	0					
ANR	5173451	Identifier	interrupt		5173386	1					
ANR	5173452	PrimaryExpression	0		5173386	1					
ANR	5173453	IdentifierDeclStatement	int col = 0 ;	659:1:15174:15185	5173386	8	True				
ANR	5173454	IdentifierDecl	col = 0		5173386	0					
ANR	5173455	IdentifierDeclType	int		5173386	0					
ANR	5173456	Identifier	col		5173386	1					
ANR	5173457	AssignmentExpression	col = 0		5173386	2		=			
ANR	5173458	Identifier	col		5173386	0					
ANR	5173459	PrimaryExpression	0		5173386	1					
ANR	5173460	ExpressionStatement	i = 0	660:1:15188:15193	5173386	9	True				
ANR	5173461	AssignmentExpression	i = 0		5173386	0		=			
ANR	5173462	Identifier	i		5173386	0					
ANR	5173463	PrimaryExpression	0		5173386	1					
ANR	5173464	ForStatement	for ( ; ! p -> interrupt && i < len ; i ++ )		5173386	10					
ANR	5173465	Condition	! p -> interrupt && i < len	661:8:15203:15226	5173386	0	True				
ANR	5173466	AndExpression	! p -> interrupt && i < len		5173386	0		&&			
ANR	5173467	UnaryOperationExpression	! p -> interrupt		5173386	0					
ANR	5173468	UnaryOperator	!		5173386	0					
ANR	5173469	PtrMemberAccess	p -> interrupt		5173386	1					
ANR	5173470	Identifier	p		5173386	0					
ANR	5173471	Identifier	interrupt		5173386	1					
ANR	5173472	RelationalExpression	i < len		5173386	1		<			
ANR	5173473	Identifier	i		5173386	0					
ANR	5173474	Identifier	len		5173386	1					
ANR	5173475	PostIncDecOperationExpression	i ++	661:34:15229:15231	5173386	1	True				
ANR	5173476	Identifier	i		5173386	0					
ANR	5173477	IncDec	++		5173386	1					
ANR	5173478	CompoundStatement		24:2:574:588	5173386	2					
ANR	5173479	IfStatement	if ( wide32 )		5173386	0					
ANR	5173480	Condition	wide32	662:6:15242:15247	5173386	0	True				
ANR	5173481	Identifier	wide32		5173386	0					
ANR	5173482	CompoundStatement		14:3:410:419	5173386	1					
ANR	5173483	IdentifierDeclStatement	int j = i ;	663:3:15255:15264	5173386	0	True				
ANR	5173484	IdentifierDecl	j = i		5173386	0					
ANR	5173485	IdentifierDeclType	int		5173386	0					
ANR	5173486	Identifier	j		5173386	1					
ANR	5173487	AssignmentExpression	j = i		5173386	2		=			
ANR	5173488	Identifier	i		5173386	0					
ANR	5173489	Identifier	i		5173386	1					
ANR	5173490	WhileStatement	while ( buf [ j ] == '\\0' && j < ( i + 3 ) )		5173386	1					
ANR	5173491	Condition	buf [ j ] == '\\0' && j < ( i + 3 )	664:10:15276:15304	5173386	0	True				
ANR	5173492	AndExpression	buf [ j ] == '\\0' && j < ( i + 3 )		5173386	0		&&			
ANR	5173493	EqualityExpression	buf [ j ] == '\\0'		5173386	0		==			
ANR	5173494	ArrayIndexing	buf [ j ]		5173386	0					
ANR	5173495	Identifier	buf		5173386	0					
ANR	5173496	Identifier	j		5173386	1					
ANR	5173497	PrimaryExpression	'\\0'		5173386	1					
ANR	5173498	RelationalExpression	j < ( i + 3 )		5173386	1		<			
ANR	5173499	Identifier	j		5173386	0					
ANR	5173500	AdditiveExpression	i + 3		5173386	1		+			
ANR	5173501	Identifier	i		5173386	0					
ANR	5173502	PrimaryExpression	3		5173386	1					
ANR	5173503	CompoundStatement		15:41:462:462	5173386	1					
ANR	5173504	ExpressionStatement	j ++	665:4:15313:15316	5173386	0	True				
ANR	5173505	PostIncDecOperationExpression	j ++		5173386	0					
ANR	5173506	Identifier	j		5173386	0					
ANR	5173507	IncDec	++		5173386	1					
ANR	5173508	ExpressionStatement	i = j	667:3:15326:15331	5173386	2	True				
ANR	5173509	AssignmentExpression	i = j		5173386	0		=			
ANR	5173510	Identifier	i		5173386	0					
ANR	5173511	Identifier	j		5173386	1					
ANR	5173512	IfStatement	if ( zeroend && buf [ i ] == '\\0' )		5173386	1					
ANR	5173513	Condition	zeroend && buf [ i ] == '\\0'	669:6:15343:15367	5173386	0	True				
ANR	5173514	AndExpression	zeroend && buf [ i ] == '\\0'		5173386	0		&&			
ANR	5173515	Identifier	zeroend		5173386	0					
ANR	5173516	EqualityExpression	buf [ i ] == '\\0'		5173386	1		==			
ANR	5173517	ArrayIndexing	buf [ i ]		5173386	0					
ANR	5173518	Identifier	buf		5173386	0					
ANR	5173519	Identifier	i		5173386	1					
ANR	5173520	PrimaryExpression	'\\0'		5173386	1					
ANR	5173521	CompoundStatement		20:33:525:525	5173386	1					
ANR	5173522	BreakStatement	break ;	670:3:15375:15380	5173386	0	True				
ANR	5173523	ExpressionStatement	"r_print_cursor ( p , i , 1 , 1 )"	672:2:15388:15415	5173386	2	True				
ANR	5173524	CallExpression	"r_print_cursor ( p , i , 1 , 1 )"		5173386	0					
ANR	5173525	Callee	r_print_cursor		5173386	0					
ANR	5173526	Identifier	r_print_cursor		5173386	0					
ANR	5173527	ArgumentList	p		5173386	1					
ANR	5173528	Argument	p		5173386	0					
ANR	5173529	Identifier	p		5173386	0					
ANR	5173530	Argument	i		5173386	1					
ANR	5173531	Identifier	i		5173386	0					
ANR	5173532	Argument	1		5173386	2					
ANR	5173533	PrimaryExpression	1		5173386	0					
ANR	5173534	Argument	1		5173386	3					
ANR	5173535	PrimaryExpression	1		5173386	0					
ANR	5173536	IdentifierDeclStatement	ut8 b = buf [ i ] ;	673:2:15419:15433	5173386	3	True				
ANR	5173537	IdentifierDecl	b = buf [ i ]		5173386	0					
ANR	5173538	IdentifierDeclType	ut8		5173386	0					
ANR	5173539	Identifier	b		5173386	1					
ANR	5173540	AssignmentExpression	b = buf [ i ]		5173386	2		=			
ANR	5173541	Identifier	b		5173386	0					
ANR	5173542	ArrayIndexing	buf [ i ]		5173386	1					
ANR	5173543	Identifier	buf		5173386	0					
ANR	5173544	Identifier	i		5173386	1					
ANR	5173545	IfStatement	if ( b == '\\n' )		5173386	4					
ANR	5173546	Condition	b == '\\n'	674:6:15441:15449	5173386	0	True				
ANR	5173547	EqualityExpression	b == '\\n'		5173386	0		==			
ANR	5173548	Identifier	b		5173386	0					
ANR	5173549	PrimaryExpression	'\\n'		5173386	1					
ANR	5173550	CompoundStatement		25:17:607:607	5173386	1					
ANR	5173551	ExpressionStatement	col = 0	675:3:15457:15464	5173386	0	True				
ANR	5173552	AssignmentExpression	col = 0		5173386	0		=			
ANR	5173553	Identifier	col		5173386	0					
ANR	5173554	PrimaryExpression	0		5173386	1					
ANR	5173555	ExpressionStatement	col ++	677:2:15472:15477	5173386	5	True				
ANR	5173556	PostIncDecOperationExpression	col ++		5173386	0					
ANR	5173557	Identifier	col		5173386	0					
ANR	5173558	IncDec	++		5173386	1					
ANR	5173559	IfStatement	if ( urlencode )		5173386	6					
ANR	5173560	Condition	urlencode	678:6:15485:15493	5173386	0	True				
ANR	5173561	Identifier	urlencode		5173386	0					
ANR	5173562	CompoundStatement		29:17:651:651	5173386	1					
ANR	5173563	ExpressionStatement	"p -> cb_printf ( ""%%%02x"" , b )"	680:3:15545:15571	5173386	0	True				
ANR	5173564	CallExpression	"p -> cb_printf ( ""%%%02x"" , b )"		5173386	0					
ANR	5173565	Callee	p -> cb_printf		5173386	0					
ANR	5173566	PtrMemberAccess	p -> cb_printf		5173386	0					
ANR	5173567	Identifier	p		5173386	0					
ANR	5173568	Identifier	cb_printf		5173386	1					
ANR	5173569	ArgumentList	"""%%%02x"""		5173386	1					
ANR	5173570	Argument	"""%%%02x"""		5173386	0					
ANR	5173571	PrimaryExpression	"""%%%02x"""		5173386	0					
ANR	5173572	Argument	b		5173386	1					
ANR	5173573	Identifier	b		5173386	0					
ANR	5173574	ElseStatement	else		5173386	0					
ANR	5173575	CompoundStatement		32:9:737:737	5173386	0					
ANR	5173576	IfStatement	if ( b == '\\\\' )		5173386	0					
ANR	5173577	Condition	b == '\\\\'	682:7:15591:15599	5173386	0	True				
ANR	5173578	EqualityExpression	b == '\\\\'		5173386	0		==			
ANR	5173579	Identifier	b		5173386	0					
ANR	5173580	PrimaryExpression	'\\\\'		5173386	1					
ANR	5173581	CompoundStatement		33:18:757:757	5173386	1					
ANR	5173582	ExpressionStatement	"p -> cb_printf ( ""\\\\\\\\"" )"	683:4:15608:15629	5173386	0	True				
ANR	5173583	CallExpression	"p -> cb_printf ( ""\\\\\\\\"" )"		5173386	0					
ANR	5173584	Callee	p -> cb_printf		5173386	0					
ANR	5173585	PtrMemberAccess	p -> cb_printf		5173386	0					
ANR	5173586	Identifier	p		5173386	0					
ANR	5173587	Identifier	cb_printf		5173386	1					
ANR	5173588	ArgumentList	"""\\\\\\\\"""		5173386	1					
ANR	5173589	Argument	"""\\\\\\\\"""		5173386	0					
ANR	5173590	PrimaryExpression	"""\\\\\\\\"""		5173386	0					
ANR	5173591	ElseStatement	else		5173386	0					
ANR	5173592	IfStatement	if ( ( b == '\\n' && ! esc_nl ) || IS_PRINTABLE ( b ) )		5173386	0					
ANR	5173593	Condition	( b == '\\n' && ! esc_nl ) || IS_PRINTABLE ( b )	684:14:15645:15686	5173386	0	True				
ANR	5173594	OrExpression	( b == '\\n' && ! esc_nl ) || IS_PRINTABLE ( b )		5173386	0		||			
ANR	5173595	AndExpression	b == '\\n' && ! esc_nl		5173386	0		&&			
ANR	5173596	EqualityExpression	b == '\\n'		5173386	0		==			
ANR	5173597	Identifier	b		5173386	0					
ANR	5173598	PrimaryExpression	'\\n'		5173386	1					
ANR	5173599	UnaryOperationExpression	! esc_nl		5173386	1					
ANR	5173600	UnaryOperator	!		5173386	0					
ANR	5173601	Identifier	esc_nl		5173386	1					
ANR	5173602	CallExpression	IS_PRINTABLE ( b )		5173386	1					
ANR	5173603	Callee	IS_PRINTABLE		5173386	0					
ANR	5173604	Identifier	IS_PRINTABLE		5173386	0					
ANR	5173605	ArgumentList	b		5173386	1					
ANR	5173606	Argument	b		5173386	0					
ANR	5173607	Identifier	b		5173386	0					
ANR	5173608	CompoundStatement		35:58:844:844	5173386	1					
ANR	5173609	ExpressionStatement	"p -> cb_printf ( ""%c"" , b )"	685:4:15695:15717	5173386	0	True				
ANR	5173610	CallExpression	"p -> cb_printf ( ""%c"" , b )"		5173386	0					
ANR	5173611	Callee	p -> cb_printf		5173386	0					
ANR	5173612	PtrMemberAccess	p -> cb_printf		5173386	0					
ANR	5173613	Identifier	p		5173386	0					
ANR	5173614	Identifier	cb_printf		5173386	1					
ANR	5173615	ArgumentList	"""%c"""		5173386	1					
ANR	5173616	Argument	"""%c"""		5173386	0					
ANR	5173617	PrimaryExpression	"""%c"""		5173386	0					
ANR	5173618	Argument	b		5173386	1					
ANR	5173619	Identifier	b		5173386	0					
ANR	5173620	ElseStatement	else		5173386	0					
ANR	5173621	CompoundStatement		37:10:884:884	5173386	0					
ANR	5173622	ExpressionStatement	"p -> cb_printf ( ""\\\\x%02x"" , b )"	687:4:15735:15762	5173386	0	True				
ANR	5173623	CallExpression	"p -> cb_printf ( ""\\\\x%02x"" , b )"		5173386	0					
ANR	5173624	Callee	p -> cb_printf		5173386	0					
ANR	5173625	PtrMemberAccess	p -> cb_printf		5173386	0					
ANR	5173626	Identifier	p		5173386	0					
ANR	5173627	Identifier	cb_printf		5173386	1					
ANR	5173628	ArgumentList	"""\\\\x%02x"""		5173386	1					
ANR	5173629	Argument	"""\\\\x%02x"""		5173386	0					
ANR	5173630	PrimaryExpression	"""\\\\x%02x"""		5173386	0					
ANR	5173631	Argument	b		5173386	1					
ANR	5173632	Identifier	b		5173386	0					
ANR	5173633	ExpressionStatement	"r_print_cursor ( p , i , 1 , 0 )"	690:2:15775:15802	5173386	7	True				
ANR	5173634	CallExpression	"r_print_cursor ( p , i , 1 , 0 )"		5173386	0					
ANR	5173635	Callee	r_print_cursor		5173386	0					
ANR	5173636	Identifier	r_print_cursor		5173386	0					
ANR	5173637	ArgumentList	p		5173386	1					
ANR	5173638	Argument	p		5173386	0					
ANR	5173639	Identifier	p		5173386	0					
ANR	5173640	Argument	i		5173386	1					
ANR	5173641	Identifier	i		5173386	0					
ANR	5173642	Argument	1		5173386	2					
ANR	5173643	PrimaryExpression	1		5173386	0					
ANR	5173644	Argument	0		5173386	3					
ANR	5173645	PrimaryExpression	0		5173386	0					
ANR	5173646	IfStatement	if ( wrap && col + 1 >= p -> width )		5173386	8					
ANR	5173647	Condition	wrap && col + 1 >= p -> width	691:6:15810:15836	5173386	0	True				
ANR	5173648	AndExpression	wrap && col + 1 >= p -> width		5173386	0		&&			
ANR	5173649	Identifier	wrap		5173386	0					
ANR	5173650	RelationalExpression	col + 1 >= p -> width		5173386	1		>=			
ANR	5173651	AdditiveExpression	col + 1		5173386	0		+			
ANR	5173652	Identifier	col		5173386	0					
ANR	5173653	PrimaryExpression	1		5173386	1					
ANR	5173654	PtrMemberAccess	p -> width		5173386	1					
ANR	5173655	Identifier	p		5173386	0					
ANR	5173656	Identifier	width		5173386	1					
ANR	5173657	CompoundStatement		42:35:994:994	5173386	1					
ANR	5173658	ExpressionStatement	"p -> cb_printf ( ""\\n"" )"	692:3:15844:15863	5173386	0	True				
ANR	5173659	CallExpression	"p -> cb_printf ( ""\\n"" )"		5173386	0					
ANR	5173660	Callee	p -> cb_printf		5173386	0					
ANR	5173661	PtrMemberAccess	p -> cb_printf		5173386	0					
ANR	5173662	Identifier	p		5173386	0					
ANR	5173663	Identifier	cb_printf		5173386	1					
ANR	5173664	ArgumentList	"""\\n"""		5173386	1					
ANR	5173665	Argument	"""\\n"""		5173386	0					
ANR	5173666	PrimaryExpression	"""\\n"""		5173386	0					
ANR	5173667	ExpressionStatement	col = 0	693:3:15868:15875	5173386	1	True				
ANR	5173668	AssignmentExpression	col = 0		5173386	0		=			
ANR	5173669	Identifier	col		5173386	0					
ANR	5173670	PrimaryExpression	0		5173386	1					
ANR	5173671	IfStatement	if ( wide )		5173386	9					
ANR	5173672	Condition	wide	695:6:15887:15890	5173386	0	True				
ANR	5173673	Identifier	wide		5173386	0					
ANR	5173674	CompoundStatement		46:12:1048:1048	5173386	1					
ANR	5173675	ExpressionStatement	i ++	696:3:15898:15901	5173386	0	True				
ANR	5173676	PostIncDecOperationExpression	i ++		5173386	0					
ANR	5173677	Identifier	i		5173386	0					
ANR	5173678	IncDec	++		5173386	1					
ANR	5173679	ExpressionStatement	"p -> cb_printf ( ""\\n"" )"	699:1:15911:15930	5173386	11	True				
ANR	5173680	CallExpression	"p -> cb_printf ( ""\\n"" )"		5173386	0					
ANR	5173681	Callee	p -> cb_printf		5173386	0					
ANR	5173682	PtrMemberAccess	p -> cb_printf		5173386	0					
ANR	5173683	Identifier	p		5173386	0					
ANR	5173684	Identifier	cb_printf		5173386	1					
ANR	5173685	ArgumentList	"""\\n"""		5173386	1					
ANR	5173686	Argument	"""\\n"""		5173386	0					
ANR	5173687	PrimaryExpression	"""\\n"""		5173386	0					
ANR	5173688	ReturnStatement	return i ;	700:1:15933:15941	5173386	12	True				
ANR	5173689	Identifier	i		5173386	0					
ANR	5173690	ReturnType	R_API int		5173386	1					
ANR	5173691	Identifier	r_print_string		5173386	2					
ANR	5173692	ParameterList	"RPrint * p , ut64 seek , const ut8 * buf , int len , int options"		5173386	3					
ANR	5173693	Parameter	RPrint * p	650:25:14784:14792	5173386	0	True				
ANR	5173694	ParameterType	RPrint *		5173386	0					
ANR	5173695	Identifier	p		5173386	1					
ANR	5173696	Parameter	ut64 seek	650:36:14795:14803	5173386	1	True				
ANR	5173697	ParameterType	ut64		5173386	0					
ANR	5173698	Identifier	seek		5173386	1					
ANR	5173699	Parameter	const ut8 * buf	650:47:14806:14819	5173386	2	True				
ANR	5173700	ParameterType	const ut8 *		5173386	0					
ANR	5173701	Identifier	buf		5173386	1					
ANR	5173702	Parameter	int len	650:63:14822:14828	5173386	3	True				
ANR	5173703	ParameterType	int		5173386	0					
ANR	5173704	Identifier	len		5173386	1					
ANR	5173705	Parameter	int options	650:72:14831:14841	5173386	4	True				
ANR	5173706	ParameterType	int		5173386	0					
ANR	5173707	Identifier	options		5173386	1					
ANR	5173708	CFGEntryNode	ENTRY		5173386		True				
ANR	5173709	CFGExitNode	EXIT		5173386		True				
ANR	5173710	Symbol	col		5173386						
ANR	5173711	Symbol	IS_PRINTABLE		5173386						
ANR	5173712	Symbol	R_PRINT_STRING_WIDE32		5173386						
ANR	5173713	Symbol	urlencode		5173386						
ANR	5173714	Symbol	R_PRINT_STRING_WIDE		5173386						
ANR	5173715	Symbol	p -> interrupt		5173386						
ANR	5173716	Symbol	seek		5173386						
ANR	5173717	Symbol	R_PRINT_STRING_ZEROEND		5173386						
ANR	5173718	Symbol	len		5173386						
ANR	5173719	Symbol	esc_nl		5173386						
ANR	5173720	Symbol	options		5173386						
ANR	5173721	Symbol	p -> width		5173386						
ANR	5173722	Symbol	* buf		5173386						
ANR	5173723	Symbol	b		5173386						
ANR	5173724	Symbol	wide		5173386						
ANR	5173725	Symbol	i		5173386						
ANR	5173726	Symbol	j		5173386						
ANR	5173727	Symbol	R_PRINT_STRING_ESC_NL		5173386						
ANR	5173728	Symbol	p		5173386						
ANR	5173729	Symbol	buf		5173386						
ANR	5173730	Symbol	R_PRINT_STRING_URLENCODE		5173386						
ANR	5173731	Symbol	* i		5173386						
ANR	5173732	Symbol	* j		5173386						
ANR	5173733	Symbol	wide32		5173386						
ANR	5173734	Symbol	* p		5173386						
ANR	5173735	Symbol	R_PRINT_STRING_WRAP		5173386						
ANR	5173736	Symbol	wrap		5173386						
ANR	5173737	Symbol	zeroend		5173386						
ANR	5173738	Function	r_print_hexpairs	703:0:15946:16097							
ANR	5173739	FunctionDef	"r_print_hexpairs (RPrint * p , ut64 addr , const ut8 * buf , int len)"		5173738	0					
ANR	5173740	CompoundStatement		703:75:16021:16097	5173738	0					
ANR	5173741	IdentifierDeclStatement	int i ;	704:1:16024:16029	5173738	0	True				
ANR	5173742	IdentifierDecl	i		5173738	0					
ANR	5173743	IdentifierDeclType	int		5173738	0					
ANR	5173744	Identifier	i		5173738	1					
ANR	5173745	ForStatement	for ( i = 0 ; i < len ; i ++ )		5173738	1					
ANR	5173746	ForInit	i = 0 ;	705:6:16037:16042	5173738	0	True				
ANR	5173747	AssignmentExpression	i = 0		5173738	0		=			
ANR	5173748	Identifier	i		5173738	0					
ANR	5173749	PrimaryExpression	0		5173738	1					
ANR	5173750	Condition	i < len	705:13:16044:16050	5173738	1	True				
ANR	5173751	RelationalExpression	i < len		5173738	0		<			
ANR	5173752	Identifier	i		5173738	0					
ANR	5173753	Identifier	len		5173738	1					
ANR	5173754	PostIncDecOperationExpression	i ++	705:22:16053:16055	5173738	2	True				
ANR	5173755	Identifier	i		5173738	0					
ANR	5173756	IncDec	++		5173738	1					
ANR	5173757	CompoundStatement		3:27:36:36	5173738	3					
ANR	5173758	ExpressionStatement	"p -> cb_printf ( ""%02x "" , buf [ i ] )"	706:2:16062:16092	5173738	0	True				
ANR	5173759	CallExpression	"p -> cb_printf ( ""%02x "" , buf [ i ] )"		5173738	0					
ANR	5173760	Callee	p -> cb_printf		5173738	0					
ANR	5173761	PtrMemberAccess	p -> cb_printf		5173738	0					
ANR	5173762	Identifier	p		5173738	0					
ANR	5173763	Identifier	cb_printf		5173738	1					
ANR	5173764	ArgumentList	"""%02x """		5173738	1					
ANR	5173765	Argument	"""%02x """		5173738	0					
ANR	5173766	PrimaryExpression	"""%02x """		5173738	0					
ANR	5173767	Argument	buf [ i ]		5173738	1					
ANR	5173768	ArrayIndexing	buf [ i ]		5173738	0					
ANR	5173769	Identifier	buf		5173738	0					
ANR	5173770	Identifier	i		5173738	1					
ANR	5173771	ReturnType	R_API void		5173738	1					
ANR	5173772	Identifier	r_print_hexpairs		5173738	2					
ANR	5173773	ParameterList	"RPrint * p , ut64 addr , const ut8 * buf , int len"		5173738	3					
ANR	5173774	Parameter	RPrint * p	703:28:15974:15982	5173738	0	True				
ANR	5173775	ParameterType	RPrint *		5173738	0					
ANR	5173776	Identifier	p		5173738	1					
ANR	5173777	Parameter	ut64 addr	703:39:15985:15993	5173738	1	True				
ANR	5173778	ParameterType	ut64		5173738	0					
ANR	5173779	Identifier	addr		5173738	1					
ANR	5173780	Parameter	const ut8 * buf	703:50:15996:16009	5173738	2	True				
ANR	5173781	ParameterType	const ut8 *		5173738	0					
ANR	5173782	Identifier	buf		5173738	1					
ANR	5173783	Parameter	int len	703:66:16012:16018	5173738	3	True				
ANR	5173784	ParameterType	int		5173738	0					
ANR	5173785	Identifier	len		5173738	1					
ANR	5173786	CFGEntryNode	ENTRY		5173738		True				
ANR	5173787	CFGExitNode	EXIT		5173738		True				
ANR	5173788	Symbol	p		5173738						
ANR	5173789	Symbol	buf		5173738						
ANR	5173790	Symbol	* buf		5173738						
ANR	5173791	Symbol	* i		5173738						
ANR	5173792	Symbol	len		5173738						
ANR	5173793	Symbol	i		5173738						
ANR	5173794	Symbol	addr		5173738						
ANR	5173795	Function	checkSparse	710:0:16100:16305							
ANR	5173796	FunctionDef	"checkSparse (const ut8 * p , int len , int ch)"		5173795	0					
ANR	5173797	CompoundStatement		710:55:16155:16305	5173795	0					
ANR	5173798	IdentifierDeclStatement	int i ;	711:1:16158:16163	5173795	0	True				
ANR	5173799	IdentifierDecl	i		5173795	0					
ANR	5173800	IdentifierDeclType	int		5173795	0					
ANR	5173801	Identifier	i		5173795	1					
ANR	5173802	IdentifierDeclStatement	ut8 q = * p ;	712:1:16166:16176	5173795	1	True				
ANR	5173803	IdentifierDecl	q = * p		5173795	0					
ANR	5173804	IdentifierDeclType	ut8		5173795	0					
ANR	5173805	Identifier	q		5173795	1					
ANR	5173806	AssignmentExpression	q = * p		5173795	2		=			
ANR	5173807	Identifier	q		5173795	0					
ANR	5173808	UnaryOperationExpression	* p		5173795	1					
ANR	5173809	UnaryOperator	*		5173795	0					
ANR	5173810	Identifier	p		5173795	1					
ANR	5173811	IfStatement	if ( ch && ch != q )		5173795	2					
ANR	5173812	Condition	ch && ch != q	713:5:16183:16195	5173795	0	True				
ANR	5173813	AndExpression	ch && ch != q		5173795	0		&&			
ANR	5173814	Identifier	ch		5173795	0					
ANR	5173815	EqualityExpression	ch != q		5173795	1		!=			
ANR	5173816	Identifier	ch		5173795	0					
ANR	5173817	Identifier	q		5173795	1					
ANR	5173818	CompoundStatement		4:20:42:42	5173795	1					
ANR	5173819	ReturnStatement	return false ;	714:2:16202:16214	5173795	0	True				
ANR	5173820	Identifier	false		5173795	0					
ANR	5173821	ForStatement	for ( i = 1 ; i < len ; i ++ )		5173795	3					
ANR	5173822	ForInit	i = 1 ;	716:6:16225:16230	5173795	0	True				
ANR	5173823	AssignmentExpression	i = 1		5173795	0		=			
ANR	5173824	Identifier	i		5173795	0					
ANR	5173825	PrimaryExpression	1		5173795	1					
ANR	5173826	Condition	i < len	716:13:16232:16238	5173795	1	True				
ANR	5173827	RelationalExpression	i < len		5173795	0		<			
ANR	5173828	Identifier	i		5173795	0					
ANR	5173829	Identifier	len		5173795	1					
ANR	5173830	PostIncDecOperationExpression	i ++	716:22:16241:16243	5173795	2	True				
ANR	5173831	Identifier	i		5173795	0					
ANR	5173832	IncDec	++		5173795	1					
ANR	5173833	CompoundStatement		7:27:90:90	5173795	3					
ANR	5173834	IfStatement	if ( p [ i ] != q )		5173795	0					
ANR	5173835	Condition	p [ i ] != q	717:6:16254:16262	5173795	0	True				
ANR	5173836	EqualityExpression	p [ i ] != q		5173795	0		!=			
ANR	5173837	ArrayIndexing	p [ i ]		5173795	0					
ANR	5173838	Identifier	p		5173795	0					
ANR	5173839	Identifier	i		5173795	1					
ANR	5173840	Identifier	q		5173795	1					
ANR	5173841	CompoundStatement		8:17:109:109	5173795	1					
ANR	5173842	ReturnStatement	return false ;	718:3:16270:16282	5173795	0	True				
ANR	5173843	Identifier	false		5173795	0					
ANR	5173844	ReturnStatement	return true ;	721:1:16292:16303	5173795	4	True				
ANR	5173845	Identifier	true		5173795	0					
ANR	5173846	ReturnType	static bool		5173795	1					
ANR	5173847	Identifier	checkSparse		5173795	2					
ANR	5173848	ParameterList	"const ut8 * p , int len , int ch"		5173795	3					
ANR	5173849	Parameter	const ut8 * p	710:24:16124:16135	5173795	0	True				
ANR	5173850	ParameterType	const ut8 *		5173795	0					
ANR	5173851	Identifier	p		5173795	1					
ANR	5173852	Parameter	int len	710:38:16138:16144	5173795	1	True				
ANR	5173853	ParameterType	int		5173795	0					
ANR	5173854	Identifier	len		5173795	1					
ANR	5173855	Parameter	int ch	710:47:16147:16152	5173795	2	True				
ANR	5173856	ParameterType	int		5173795	0					
ANR	5173857	Identifier	ch		5173795	1					
ANR	5173858	CFGEntryNode	ENTRY		5173795		True				
ANR	5173859	CFGExitNode	EXIT		5173795		True				
ANR	5173860	Symbol	p		5173795						
ANR	5173861	Symbol	q		5173795						
ANR	5173862	Symbol	* i		5173795						
ANR	5173863	Symbol	len		5173795						
ANR	5173864	Symbol	ch		5173795						
ANR	5173865	Symbol	false		5173795						
ANR	5173866	Symbol	true		5173795						
ANR	5173867	Symbol	i		5173795						
ANR	5173868	Symbol	* p		5173795						
ANR	5173869	Function	isAllZeros	724:0:16308:16454							
ANR	5173870	FunctionDef	"isAllZeros (const ut8 * buf , int len)"		5173869	0					
ANR	5173871	CompoundStatement		724:48:16356:16454	5173869	0					
ANR	5173872	IdentifierDeclStatement	int i ;	725:1:16359:16364	5173869	0	True				
ANR	5173873	IdentifierDecl	i		5173869	0					
ANR	5173874	IdentifierDeclType	int		5173869	0					
ANR	5173875	Identifier	i		5173869	1					
ANR	5173876	ForStatement	for ( i = 0 ; i < len ; i ++ )		5173869	1					
ANR	5173877	ForInit	i = 0 ;	726:6:16372:16377	5173869	0	True				
ANR	5173878	AssignmentExpression	i = 0		5173869	0		=			
ANR	5173879	Identifier	i		5173869	0					
ANR	5173880	PrimaryExpression	0		5173869	1					
ANR	5173881	Condition	i < len	726:13:16379:16385	5173869	1	True				
ANR	5173882	RelationalExpression	i < len		5173869	0		<			
ANR	5173883	Identifier	i		5173869	0					
ANR	5173884	Identifier	len		5173869	1					
ANR	5173885	PostIncDecOperationExpression	i ++	726:22:16388:16390	5173869	2	True				
ANR	5173886	Identifier	i		5173869	0					
ANR	5173887	IncDec	++		5173869	1					
ANR	5173888	CompoundStatement		3:27:36:36	5173869	3					
ANR	5173889	IfStatement	if ( buf [ i ] != 0 )		5173869	0					
ANR	5173890	Condition	buf [ i ] != 0	727:6:16401:16411	5173869	0	True				
ANR	5173891	EqualityExpression	buf [ i ] != 0		5173869	0		!=			
ANR	5173892	ArrayIndexing	buf [ i ]		5173869	0					
ANR	5173893	Identifier	buf		5173869	0					
ANR	5173894	Identifier	i		5173869	1					
ANR	5173895	PrimaryExpression	0		5173869	1					
ANR	5173896	CompoundStatement		4:19:57:57	5173869	1					
ANR	5173897	ReturnStatement	return false ;	728:3:16419:16431	5173869	0	True				
ANR	5173898	Identifier	false		5173869	0					
ANR	5173899	ReturnStatement	return true ;	731:1:16441:16452	5173869	2	True				
ANR	5173900	Identifier	true		5173869	0					
ANR	5173901	ReturnType	static bool		5173869	1					
ANR	5173902	Identifier	isAllZeros		5173869	2					
ANR	5173903	ParameterList	"const ut8 * buf , int len"		5173869	3					
ANR	5173904	Parameter	const ut8 * buf	724:23:16331:16344	5173869	0	True				
ANR	5173905	ParameterType	const ut8 *		5173869	0					
ANR	5173906	Identifier	buf		5173869	1					
ANR	5173907	Parameter	int len	724:39:16347:16353	5173869	1	True				
ANR	5173908	ParameterType	int		5173869	0					
ANR	5173909	Identifier	len		5173869	1					
ANR	5173910	CFGEntryNode	ENTRY		5173869		True				
ANR	5173911	CFGExitNode	EXIT		5173869		True				
ANR	5173912	Symbol	buf		5173869						
ANR	5173913	Symbol	* buf		5173869						
ANR	5173914	Symbol	* i		5173869						
ANR	5173915	Symbol	len		5173869						
ANR	5173916	Symbol	false		5173869						
ANR	5173917	Symbol	true		5173869						
ANR	5173918	Symbol	i		5173869						
ANR	5173919	Function	r_print_hexii	734:77:16534:17606							
ANR	5173920	FunctionDef	"r_print_hexii (RPrint * rp , ut64 addr , const ut8 * buf , int len , int step)"		5173919	0					
ANR	5173921	CompoundStatement		735:83:16619:17606	5173919	0					
ANR	5173922	IdentifierDeclStatement	PrintfCallback p = ( PrintfCallback ) rp -> cb_printf ;	736:1:16622:16671	5173919	0	True				
ANR	5173923	IdentifierDecl	p = ( PrintfCallback ) rp -> cb_printf		5173919	0					
ANR	5173924	IdentifierDeclType	PrintfCallback		5173919	0					
ANR	5173925	Identifier	p		5173919	1					
ANR	5173926	AssignmentExpression	p = ( PrintfCallback ) rp -> cb_printf		5173919	2		=			
ANR	5173927	Identifier	p		5173919	0					
ANR	5173928	CastExpression	( PrintfCallback ) rp -> cb_printf		5173919	1					
ANR	5173929	CastTarget	PrintfCallback		5173919	0					
ANR	5173930	PtrMemberAccess	rp -> cb_printf		5173919	1					
ANR	5173931	Identifier	rp		5173919	0					
ANR	5173932	Identifier	cb_printf		5173919	1					
ANR	5173933	IdentifierDeclStatement	bool c = rp -> flags & R_PRINT_FLAGS_COLOR ;	737:1:16674:16714	5173919	1	True				
ANR	5173934	IdentifierDecl	c = rp -> flags & R_PRINT_FLAGS_COLOR		5173919	0					
ANR	5173935	IdentifierDeclType	bool		5173919	0					
ANR	5173936	Identifier	c		5173919	1					
ANR	5173937	AssignmentExpression	c = rp -> flags & R_PRINT_FLAGS_COLOR		5173919	2		=			
ANR	5173938	Identifier	c		5173919	0					
ANR	5173939	BitAndExpression	rp -> flags & R_PRINT_FLAGS_COLOR		5173919	1		&			
ANR	5173940	PtrMemberAccess	rp -> flags		5173919	0					
ANR	5173941	Identifier	rp		5173919	0					
ANR	5173942	Identifier	flags		5173919	1					
ANR	5173943	Identifier	R_PRINT_FLAGS_COLOR		5173919	1					
ANR	5173944	Statement	const	738:1:16717:16721	5173919	2	True				
ANR	5173945	Statement	char	738:7:16723:16726	5173919	3	True				
ANR	5173946	Statement	*	738:12:16728:16728	5173919	4	True				
ANR	5173947	Statement	color_0xff	738:13:16729:16738	5173919	5	True				
ANR	5173948	Statement	=	738:24:16740:16740	5173919	6	True				
ANR	5173949	Statement	c	738:26:16742:16742	5173919	7	True				
ANR	5173950	Statement	?	738:27:16743:16743	5173919	8	True				
ANR	5173951	Statement	(	738:29:16745:16745	5173919	9	True				
ANR	5173952	Statement	Pal	738:30:16746:16748	5173919	10	True				
ANR	5173953	Statement	(	738:34:16750:16750	5173919	11	True				
ANR	5173954	Statement	rp	738:35:16751:16752	5173919	12	True				
ANR	5173955	Statement	","	738:37:16753:16753	5173919	13	True				
ANR	5173956	Statement	b0xff	738:39:16755:16759	5173919	14	True				
ANR	5173957	Statement	)	738:44:16760:16760	5173919	15	True				
ANR	5173958	Statement	:	738:45:16761:16761	5173919	16	True				
ANR	5173959	Statement	Color_RED	738:47:16763:16771	5173919	17	True				
ANR	5173960	Statement	)	738:56:16772:16772	5173919	18	True				
ANR	5173961	Statement	:	738:57:16773:16773	5173919	19	True				
ANR	5173962	ExpressionStatement	""""""	738:59:16775:16777	5173919	20	True				
ANR	5173963	PrimaryExpression	""""""		5173919	0					
ANR	5173964	Statement	const	739:1:16780:16784	5173919	21	True				
ANR	5173965	Statement	char	739:7:16786:16789	5173919	22	True				
ANR	5173966	Statement	*	739:12:16791:16791	5173919	23	True				
ANR	5173967	Statement	color_text	739:13:16792:16801	5173919	24	True				
ANR	5173968	Statement	=	739:24:16803:16803	5173919	25	True				
ANR	5173969	Statement	c	739:26:16805:16805	5173919	26	True				
ANR	5173970	Statement	?	739:27:16806:16806	5173919	27	True				
ANR	5173971	Statement	(	739:29:16808:16808	5173919	28	True				
ANR	5173972	Statement	Pal	739:30:16809:16811	5173919	29	True				
ANR	5173973	Statement	(	739:34:16813:16813	5173919	30	True				
ANR	5173974	Statement	rp	739:35:16814:16815	5173919	31	True				
ANR	5173975	Statement	","	739:37:16816:16816	5173919	32	True				
ANR	5173976	Statement	btext	739:39:16818:16822	5173919	33	True				
ANR	5173977	Statement	)	739:44:16823:16823	5173919	34	True				
ANR	5173978	Statement	:	739:45:16824:16824	5173919	35	True				
ANR	5173979	Statement	Color_MAGENTA	739:47:16826:16838	5173919	36	True				
ANR	5173980	Statement	)	739:60:16839:16839	5173919	37	True				
ANR	5173981	Statement	:	739:61:16840:16840	5173919	38	True				
ANR	5173982	ExpressionStatement	""""""	739:63:16842:16844	5173919	39	True				
ANR	5173983	PrimaryExpression	""""""		5173919	0					
ANR	5173984	Statement	const	740:1:16847:16851	5173919	40	True				
ANR	5173985	Statement	char	740:7:16853:16856	5173919	41	True				
ANR	5173986	Statement	*	740:12:16858:16858	5173919	42	True				
ANR	5173987	Statement	color_other	740:13:16859:16869	5173919	43	True				
ANR	5173988	Statement	=	740:25:16871:16871	5173919	44	True				
ANR	5173989	Statement	c	740:27:16873:16873	5173919	45	True				
ANR	5173990	Statement	?	740:28:16874:16874	5173919	46	True				
ANR	5173991	Statement	(	740:30:16876:16876	5173919	47	True				
ANR	5173992	Statement	Pal	740:31:16877:16879	5173919	48	True				
ANR	5173993	Statement	(	740:35:16881:16881	5173919	49	True				
ANR	5173994	Statement	rp	740:36:16882:16883	5173919	50	True				
ANR	5173995	Statement	","	740:38:16884:16884	5173919	51	True				
ANR	5173996	Statement	other	740:40:16886:16890	5173919	52	True				
ANR	5173997	Statement	)	740:45:16891:16891	5173919	53	True				
ANR	5173998	Statement	:	740:46:16892:16892	5173919	54	True				
ANR	5173999	Statement	Color_WHITE	740:48:16894:16904	5173919	55	True				
ANR	5174000	Statement	)	740:59:16905:16905	5173919	56	True				
ANR	5174001	Statement	:	740:60:16906:16906	5173919	57	True				
ANR	5174002	ExpressionStatement	""""""	740:62:16908:16910	5173919	58	True				
ANR	5174003	PrimaryExpression	""""""		5173919	0					
ANR	5174004	IdentifierDeclStatement	"const char * color_reset = c ? Color_RESET : """" ;"	741:1:16913:16957	5173919	59	True				
ANR	5174005	IdentifierDecl	"* color_reset = c ? Color_RESET : """""		5173919	0					
ANR	5174006	IdentifierDeclType	const char *		5173919	0					
ANR	5174007	Identifier	color_reset		5173919	1					
ANR	5174008	AssignmentExpression	"* color_reset = c ? Color_RESET : """""		5173919	2		=			
ANR	5174009	Identifier	color_reset		5173919	0					
ANR	5174010	ConditionalExpression	"c ? Color_RESET : """""		5173919	1					
ANR	5174011	Condition	c		5173919	0					
ANR	5174012	Identifier	c		5173919	0					
ANR	5174013	Identifier	Color_RESET		5173919	1					
ANR	5174014	PrimaryExpression	""""""		5173919	2					
ANR	5174015	IdentifierDeclStatement	"int i , j ;"	742:1:16960:16968	5173919	60	True				
ANR	5174016	IdentifierDecl	i		5173919	0					
ANR	5174017	IdentifierDeclType	int		5173919	0					
ANR	5174018	Identifier	i		5173919	1					
ANR	5174019	IdentifierDecl	j		5173919	1					
ANR	5174020	IdentifierDeclType	int		5173919	0					
ANR	5174021	Identifier	j		5173919	1					
ANR	5174022	IfStatement	if ( rp -> flags & R_PRINT_FLAGS_HEADER )		5173919	61					
ANR	5174023	Condition	rp -> flags & R_PRINT_FLAGS_HEADER	744:5:16976:17007	5173919	0	True				
ANR	5174024	BitAndExpression	rp -> flags & R_PRINT_FLAGS_HEADER		5173919	0		&			
ANR	5174025	PtrMemberAccess	rp -> flags		5173919	0					
ANR	5174026	Identifier	rp		5173919	0					
ANR	5174027	Identifier	flags		5173919	1					
ANR	5174028	Identifier	R_PRINT_FLAGS_HEADER		5173919	1					
ANR	5174029	CompoundStatement		10:39:390:390	5173919	1					
ANR	5174030	ExpressionStatement	"p ( ""         "" )"	745:2:17014:17029	5173919	0	True				
ANR	5174031	CallExpression	"p ( ""         "" )"		5173919	0					
ANR	5174032	Callee	p		5173919	0					
ANR	5174033	Identifier	p		5173919	0					
ANR	5174034	ArgumentList	"""         """		5173919	1					
ANR	5174035	Argument	"""         """		5173919	0					
ANR	5174036	PrimaryExpression	"""         """		5173919	0					
ANR	5174037	ForStatement	for ( i = 0 ; i < step ; i ++ )		5173919	1					
ANR	5174038	ForInit	i = 0 ;	746:7:17038:17043	5173919	0	True				
ANR	5174039	AssignmentExpression	i = 0		5173919	0		=			
ANR	5174040	Identifier	i		5173919	0					
ANR	5174041	PrimaryExpression	0		5173919	1					
ANR	5174042	Condition	i < step	746:14:17045:17052	5173919	1	True				
ANR	5174043	RelationalExpression	i < step		5173919	0		<			
ANR	5174044	Identifier	i		5173919	0					
ANR	5174045	Identifier	step		5173919	1					
ANR	5174046	PostIncDecOperationExpression	i ++	746:24:17055:17057	5173919	2	True				
ANR	5174047	Identifier	i		5173919	0					
ANR	5174048	IncDec	++		5173919	1					
ANR	5174049	CompoundStatement		12:29:440:440	5173919	3					
ANR	5174050	ExpressionStatement	"p ( ""%3X"" , i )"	747:3:17065:17077	5173919	0	True				
ANR	5174051	CallExpression	"p ( ""%3X"" , i )"		5173919	0					
ANR	5174052	Callee	p		5173919	0					
ANR	5174053	Identifier	p		5173919	0					
ANR	5174054	ArgumentList	"""%3X"""		5173919	1					
ANR	5174055	Argument	"""%3X"""		5173919	0					
ANR	5174056	PrimaryExpression	"""%3X"""		5173919	0					
ANR	5174057	Argument	i		5173919	1					
ANR	5174058	Identifier	i		5173919	0					
ANR	5174059	ExpressionStatement	"p ( ""\\n"" )"	749:2:17085:17093	5173919	2	True				
ANR	5174060	CallExpression	"p ( ""\\n"" )"		5173919	0					
ANR	5174061	Callee	p		5173919	0					
ANR	5174062	Identifier	p		5173919	0					
ANR	5174063	ArgumentList	"""\\n"""		5173919	1					
ANR	5174064	Argument	"""\\n"""		5173919	0					
ANR	5174065	PrimaryExpression	"""\\n"""		5173919	0					
ANR	5174066	ForStatement	for ( i = 0 ; i < len ; i += step )		5173919	62					
ANR	5174067	ForInit	i = 0 ;	752:6:17105:17110	5173919	0	True				
ANR	5174068	AssignmentExpression	i = 0		5173919	0		=			
ANR	5174069	Identifier	i		5173919	0					
ANR	5174070	PrimaryExpression	0		5173919	1					
ANR	5174071	Condition	i < len	752:13:17112:17118	5173919	1	True				
ANR	5174072	RelationalExpression	i < len		5173919	0		<			
ANR	5174073	Identifier	i		5173919	0					
ANR	5174074	Identifier	len		5173919	1					
ANR	5174075	AssignmentExpression	i += step	752:22:17121:17129	5173919	2	True	+=			
ANR	5174076	Identifier	i		5173919	0					
ANR	5174077	Identifier	step		5173919	1					
ANR	5174078	CompoundStatement		19:2:516:549	5173919	3					
ANR	5174079	IdentifierDeclStatement	"int inc = R_MIN ( step , ( len - i ) ) ;"	753:2:17136:17169	5173919	0	True				
ANR	5174080	IdentifierDecl	"inc = R_MIN ( step , ( len - i ) )"		5173919	0					
ANR	5174081	IdentifierDeclType	int		5173919	0					
ANR	5174082	Identifier	inc		5173919	1					
ANR	5174083	AssignmentExpression	"inc = R_MIN ( step , ( len - i ) )"		5173919	2		=			
ANR	5174084	Identifier	inc		5173919	0					
ANR	5174085	CallExpression	"R_MIN ( step , ( len - i ) )"		5173919	1					
ANR	5174086	Callee	R_MIN		5173919	0					
ANR	5174087	Identifier	R_MIN		5173919	0					
ANR	5174088	ArgumentList	step		5173919	1					
ANR	5174089	Argument	step		5173919	0					
ANR	5174090	Identifier	step		5173919	0					
ANR	5174091	Argument	len - i		5173919	1					
ANR	5174092	AdditiveExpression	len - i		5173919	0		-			
ANR	5174093	Identifier	len		5173919	0					
ANR	5174094	Identifier	i		5173919	1					
ANR	5174095	IfStatement	"if ( isAllZeros ( buf + i , inc ) )"		5173919	1					
ANR	5174096	Condition	"isAllZeros ( buf + i , inc )"	754:6:17177:17201	5173919	0	True				
ANR	5174097	CallExpression	"isAllZeros ( buf + i , inc )"		5173919	0					
ANR	5174098	Callee	isAllZeros		5173919	0					
ANR	5174099	Identifier	isAllZeros		5173919	0					
ANR	5174100	ArgumentList	buf + i		5173919	1					
ANR	5174101	Argument	buf + i		5173919	0					
ANR	5174102	AdditiveExpression	buf + i		5173919	0		+			
ANR	5174103	Identifier	buf		5173919	0					
ANR	5174104	Identifier	i		5173919	1					
ANR	5174105	Argument	inc		5173919	1					
ANR	5174106	Identifier	inc		5173919	0					
ANR	5174107	CompoundStatement		20:33:584:584	5173919	1					
ANR	5174108	ContinueStatement	continue ;	755:3:17209:17217	5173919	0	True				
ANR	5174109	ExpressionStatement	"p ( ""%8X:"" , addr + i )"	757:2:17225:17245	5173919	2	True				
ANR	5174110	CallExpression	"p ( ""%8X:"" , addr + i )"		5173919	0					
ANR	5174111	Callee	p		5173919	0					
ANR	5174112	Identifier	p		5173919	0					
ANR	5174113	ArgumentList	"""%8X:"""		5173919	1					
ANR	5174114	Argument	"""%8X:"""		5173919	0					
ANR	5174115	PrimaryExpression	"""%8X:"""		5173919	0					
ANR	5174116	Argument	addr + i		5173919	1					
ANR	5174117	AdditiveExpression	addr + i		5173919	0		+			
ANR	5174118	Identifier	addr		5173919	0					
ANR	5174119	Identifier	i		5173919	1					
ANR	5174120	ForStatement	for ( j = 0 ; j < inc ; j ++ )		5173919	3					
ANR	5174121	ForInit	j = 0 ;	758:7:17254:17259	5173919	0	True				
ANR	5174122	AssignmentExpression	j = 0		5173919	0		=			
ANR	5174123	Identifier	j		5173919	0					
ANR	5174124	PrimaryExpression	0		5173919	1					
ANR	5174125	Condition	j < inc	758:14:17261:17267	5173919	1	True				
ANR	5174126	RelationalExpression	j < inc		5173919	0		<			
ANR	5174127	Identifier	j		5173919	0					
ANR	5174128	Identifier	inc		5173919	1					
ANR	5174129	PostIncDecOperationExpression	j ++	758:23:17270:17272	5173919	2	True				
ANR	5174130	Identifier	j		5173919	0					
ANR	5174131	IncDec	++		5173919	1					
ANR	5174132	CompoundStatement		25:3:660:679	5173919	3					
ANR	5174133	IdentifierDeclStatement	ut8 ch = buf [ i + j ] ;	759:3:17280:17299	5173919	0	True				
ANR	5174134	IdentifierDecl	ch = buf [ i + j ]		5173919	0					
ANR	5174135	IdentifierDeclType	ut8		5173919	0					
ANR	5174136	Identifier	ch		5173919	1					
ANR	5174137	AssignmentExpression	ch = buf [ i + j ]		5173919	2		=			
ANR	5174138	Identifier	ch		5173919	0					
ANR	5174139	ArrayIndexing	buf [ i + j ]		5173919	1					
ANR	5174140	Identifier	buf		5173919	0					
ANR	5174141	AdditiveExpression	i + j		5173919	1		+			
ANR	5174142	Identifier	i		5173919	0					
ANR	5174143	Identifier	j		5173919	1					
ANR	5174144	IfStatement	if ( ch == 0x00 )		5173919	1					
ANR	5174145	Condition	ch == 0x00	760:7:17308:17317	5173919	0	True				
ANR	5174146	EqualityExpression	ch == 0x00		5173919	0		==			
ANR	5174147	Identifier	ch		5173919	0					
ANR	5174148	PrimaryExpression	0x00		5173919	1					
ANR	5174149	CompoundStatement		26:19:700:700	5173919	1					
ANR	5174150	ExpressionStatement	"p ( ""   "" )"	761:4:17326:17335	5173919	0	True				
ANR	5174151	CallExpression	"p ( ""   "" )"		5173919	0					
ANR	5174152	Callee	p		5173919	0					
ANR	5174153	Identifier	p		5173919	0					
ANR	5174154	ArgumentList	"""   """		5173919	1					
ANR	5174155	Argument	"""   """		5173919	0					
ANR	5174156	PrimaryExpression	"""   """		5173919	0					
ANR	5174157	ElseStatement	else		5173919	0					
ANR	5174158	IfStatement	if ( ch == 0xff )		5173919	0					
ANR	5174159	Condition	ch == 0xff	762:14:17351:17360	5173919	0	True				
ANR	5174160	EqualityExpression	ch == 0xff		5173919	0		==			
ANR	5174161	Identifier	ch		5173919	0					
ANR	5174162	PrimaryExpression	0xff		5173919	1					
ANR	5174163	CompoundStatement		28:26:743:743	5173919	1					
ANR	5174164	ExpressionStatement	"p ( ""%s ##%s"" , color_0xff , color_reset )"	763:4:17369:17407	5173919	0	True				
ANR	5174165	CallExpression	"p ( ""%s ##%s"" , color_0xff , color_reset )"		5173919	0					
ANR	5174166	Callee	p		5173919	0					
ANR	5174167	Identifier	p		5173919	0					
ANR	5174168	ArgumentList	"""%s ##%s"""		5173919	1					
ANR	5174169	Argument	"""%s ##%s"""		5173919	0					
ANR	5174170	PrimaryExpression	"""%s ##%s"""		5173919	0					
ANR	5174171	Argument	color_0xff		5173919	1					
ANR	5174172	Identifier	color_0xff		5173919	0					
ANR	5174173	Argument	color_reset		5173919	2					
ANR	5174174	Identifier	color_reset		5173919	0					
ANR	5174175	ElseStatement	else		5173919	0					
ANR	5174176	IfStatement	if ( IS_PRINTABLE ( ch ) )		5173919	0					
ANR	5174177	Condition	IS_PRINTABLE ( ch )	764:14:17423:17439	5173919	0	True				
ANR	5174178	CallExpression	IS_PRINTABLE ( ch )		5173919	0					
ANR	5174179	Callee	IS_PRINTABLE		5173919	0					
ANR	5174180	Identifier	IS_PRINTABLE		5173919	0					
ANR	5174181	ArgumentList	ch		5173919	1					
ANR	5174182	Argument	ch		5173919	0					
ANR	5174183	Identifier	ch		5173919	0					
ANR	5174184	CompoundStatement		30:33:822:822	5173919	1					
ANR	5174185	ExpressionStatement	"p ( ""%s .%c%s"" , color_text , ch , color_reset )"	765:4:17448:17491	5173919	0	True				
ANR	5174186	CallExpression	"p ( ""%s .%c%s"" , color_text , ch , color_reset )"		5173919	0					
ANR	5174187	Callee	p		5173919	0					
ANR	5174188	Identifier	p		5173919	0					
ANR	5174189	ArgumentList	"""%s .%c%s"""		5173919	1					
ANR	5174190	Argument	"""%s .%c%s"""		5173919	0					
ANR	5174191	PrimaryExpression	"""%s .%c%s"""		5173919	0					
ANR	5174192	Argument	color_text		5173919	1					
ANR	5174193	Identifier	color_text		5173919	0					
ANR	5174194	Argument	ch		5173919	2					
ANR	5174195	Identifier	ch		5173919	0					
ANR	5174196	Argument	color_reset		5173919	3					
ANR	5174197	Identifier	color_reset		5173919	0					
ANR	5174198	ElseStatement	else		5173919	0					
ANR	5174199	CompoundStatement		32:10:883:883	5173919	0					
ANR	5174200	ExpressionStatement	"p ( ""%s %02x%s"" , color_other , ch , color_reset )"	767:4:17509:17554	5173919	0	True				
ANR	5174201	CallExpression	"p ( ""%s %02x%s"" , color_other , ch , color_reset )"		5173919	0					
ANR	5174202	Callee	p		5173919	0					
ANR	5174203	Identifier	p		5173919	0					
ANR	5174204	ArgumentList	"""%s %02x%s"""		5173919	1					
ANR	5174205	Argument	"""%s %02x%s"""		5173919	0					
ANR	5174206	PrimaryExpression	"""%s %02x%s"""		5173919	0					
ANR	5174207	Argument	color_other		5173919	1					
ANR	5174208	Identifier	color_other		5173919	0					
ANR	5174209	Argument	ch		5173919	2					
ANR	5174210	Identifier	ch		5173919	0					
ANR	5174211	Argument	color_reset		5173919	3					
ANR	5174212	Identifier	color_reset		5173919	0					
ANR	5174213	ExpressionStatement	"p ( ""\\n"" )"	770:2:17567:17575	5173919	4	True				
ANR	5174214	CallExpression	"p ( ""\\n"" )"		5173919	0					
ANR	5174215	Callee	p		5173919	0					
ANR	5174216	Identifier	p		5173919	0					
ANR	5174217	ArgumentList	"""\\n"""		5173919	1					
ANR	5174218	Argument	"""\\n"""		5173919	0					
ANR	5174219	PrimaryExpression	"""\\n"""		5173919	0					
ANR	5174220	ExpressionStatement	"p ( ""%8X ]\\n"" , addr + i )"	772:1:17581:17604	5173919	63	True				
ANR	5174221	CallExpression	"p ( ""%8X ]\\n"" , addr + i )"		5173919	0					
ANR	5174222	Callee	p		5173919	0					
ANR	5174223	Identifier	p		5173919	0					
ANR	5174224	ArgumentList	"""%8X ]\\n"""		5173919	1					
ANR	5174225	Argument	"""%8X ]\\n"""		5173919	0					
ANR	5174226	PrimaryExpression	"""%8X ]\\n"""		5173919	0					
ANR	5174227	Argument	addr + i		5173919	1					
ANR	5174228	AdditiveExpression	addr + i		5173919	0		+			
ANR	5174229	Identifier	addr		5173919	0					
ANR	5174230	Identifier	i		5173919	1					
ANR	5174231	ReturnType	y R_API void		5173919	1					
ANR	5174232	Identifier	r_print_hexii		5173919	2					
ANR	5174233	ParameterList	"RPrint * rp , ut64 addr , const ut8 * buf , int len , int step"		5173919	3					
ANR	5174234	Parameter	RPrint * rp	735:25:16561:16570	5173919	0	True				
ANR	5174235	ParameterType	RPrint *		5173919	0					
ANR	5174236	Identifier	rp		5173919	1					
ANR	5174237	Parameter	ut64 addr	735:37:16573:16581	5173919	1	True				
ANR	5174238	ParameterType	ut64		5173919	0					
ANR	5174239	Identifier	addr		5173919	1					
ANR	5174240	Parameter	const ut8 * buf	735:48:16584:16597	5173919	2	True				
ANR	5174241	ParameterType	const ut8 *		5173919	0					
ANR	5174242	Identifier	buf		5173919	1					
ANR	5174243	Parameter	int len	735:64:16600:16606	5173919	3	True				
ANR	5174244	ParameterType	int		5173919	0					
ANR	5174245	Identifier	len		5173919	1					
ANR	5174246	Parameter	int step	735:73:16609:16616	5173919	4	True				
ANR	5174247	ParameterType	int		5173919	0					
ANR	5174248	Identifier	step		5173919	1					
ANR	5174249	CFGEntryNode	ENTRY		5173919		True				
ANR	5174250	CFGExitNode	EXIT		5173919		True				
ANR	5174251	Symbol	IS_PRINTABLE		5173919						
ANR	5174252	Symbol	Color_RESET		5173919						
ANR	5174253	Symbol	color_other		5173919						
ANR	5174254	Symbol	color_reset		5173919						
ANR	5174255	Symbol	len		5173919						
ANR	5174256	Symbol	color_text		5173919						
ANR	5174257	Symbol	R_PRINT_FLAGS_COLOR		5173919						
ANR	5174258	Symbol	addr		5173919						
ANR	5174259	Symbol	R_PRINT_FLAGS_HEADER		5173919						
ANR	5174260	Symbol	inc		5173919						
ANR	5174261	Symbol	* buf		5173919						
ANR	5174262	Symbol	c		5173919						
ANR	5174263	Symbol	color_0xff		5173919						
ANR	5174264	Symbol	ch		5173919						
ANR	5174265	Symbol	* rp		5173919						
ANR	5174266	Symbol	i		5173919						
ANR	5174267	Symbol	j		5173919						
ANR	5174268	Symbol	R_MIN		5173919						
ANR	5174269	Symbol	isAllZeros		5173919						
ANR	5174270	Symbol	p		5173919						
ANR	5174271	Symbol	buf		5173919						
ANR	5174272	Symbol	rp -> flags		5173919						
ANR	5174273	Symbol	* i		5173919						
ANR	5174274	Symbol	* j		5173919						
ANR	5174275	Symbol	rp -> cb_printf		5173919						
ANR	5174276	Symbol	step		5173919						
ANR	5174277	Symbol	rp		5173919						
ANR	5174278	Function	r_print_set_screenbounds	777:0:17757:18141							
ANR	5174279	FunctionDef	"r_print_set_screenbounds (RPrint * p , ut64 addr)"		5174278	0					
ANR	5174280	CompoundStatement		777:58:17815:18141	5174278	0					
ANR	5174281	IdentifierDeclStatement	"int r , rc ;"	778:1:17818:17827	5174278	0	True				
ANR	5174282	IdentifierDecl	r		5174278	0					
ANR	5174283	IdentifierDeclType	int		5174278	0					
ANR	5174284	Identifier	r		5174278	1					
ANR	5174285	IdentifierDecl	rc		5174278	1					
ANR	5174286	IdentifierDeclType	int		5174278	0					
ANR	5174287	Identifier	rc		5174278	1					
ANR	5174288	ExpressionStatement	r_return_if_fail ( p )	780:1:17831:17851	5174278	1	True				
ANR	5174289	CallExpression	r_return_if_fail ( p )		5174278	0					
ANR	5174290	Callee	r_return_if_fail		5174278	0					
ANR	5174291	Identifier	r_return_if_fail		5174278	0					
ANR	5174292	ArgumentList	p		5174278	1					
ANR	5174293	Argument	p		5174278	0					
ANR	5174294	Identifier	p		5174278	0					
ANR	5174295	IfStatement	if ( ! p -> screen_bounds )		5174278	2					
ANR	5174296	Condition	! p -> screen_bounds	782:5:17859:17875	5174278	0	True				
ANR	5174297	UnaryOperationExpression	! p -> screen_bounds		5174278	0					
ANR	5174298	UnaryOperator	!		5174278	0					
ANR	5174299	PtrMemberAccess	p -> screen_bounds		5174278	1					
ANR	5174300	Identifier	p		5174278	0					
ANR	5174301	Identifier	screen_bounds		5174278	1					
ANR	5174302	CompoundStatement		6:24:62:62	5174278	1					
ANR	5174303	ReturnStatement	return ;	783:2:17882:17888	5174278	0	True				
ANR	5174304	IfStatement	if ( ! p -> consbind . get_size )		5174278	3					
ANR	5174305	Condition	! p -> consbind . get_size	785:5:17898:17918	5174278	0	True				
ANR	5174306	UnaryOperationExpression	! p -> consbind . get_size		5174278	0					
ANR	5174307	UnaryOperator	!		5174278	0					
ANR	5174308	MemberAccess	p -> consbind . get_size		5174278	1					
ANR	5174309	PtrMemberAccess	p -> consbind		5174278	0					
ANR	5174310	Identifier	p		5174278	0					
ANR	5174311	Identifier	consbind		5174278	1					
ANR	5174312	Identifier	get_size		5174278	1					
ANR	5174313	CompoundStatement		9:28:105:105	5174278	1					
ANR	5174314	ReturnStatement	return ;	786:2:17925:17931	5174278	0	True				
ANR	5174315	IfStatement	if ( ! p -> consbind . get_cursor )		5174278	4					
ANR	5174316	Condition	! p -> consbind . get_cursor	788:5:17941:17963	5174278	0	True				
ANR	5174317	UnaryOperationExpression	! p -> consbind . get_cursor		5174278	0					
ANR	5174318	UnaryOperator	!		5174278	0					
ANR	5174319	MemberAccess	p -> consbind . get_cursor		5174278	1					
ANR	5174320	PtrMemberAccess	p -> consbind		5174278	0					
ANR	5174321	Identifier	p		5174278	0					
ANR	5174322	Identifier	consbind		5174278	1					
ANR	5174323	Identifier	get_cursor		5174278	1					
ANR	5174324	CompoundStatement		12:30:150:150	5174278	1					
ANR	5174325	ReturnStatement	return ;	789:2:17970:17976	5174278	0	True				
ANR	5174326	IfStatement	if ( p -> screen_bounds == 1 )		5174278	5					
ANR	5174327	Condition	p -> screen_bounds == 1	792:5:17987:18007	5174278	0	True				
ANR	5174328	EqualityExpression	p -> screen_bounds == 1		5174278	0		==			
ANR	5174329	PtrMemberAccess	p -> screen_bounds		5174278	0					
ANR	5174330	Identifier	p		5174278	0					
ANR	5174331	Identifier	screen_bounds		5174278	1					
ANR	5174332	PrimaryExpression	1		5174278	1					
ANR	5174333	CompoundStatement		16:28:194:194	5174278	1					
ANR	5174334	ExpressionStatement	( void ) p -> consbind . get_size ( & r )	793:2:18014:18045	5174278	0	True				
ANR	5174335	CastExpression	( void ) p -> consbind . get_size ( & r )		5174278	0					
ANR	5174336	CastTarget	void		5174278	0					
ANR	5174337	CallExpression	p -> consbind . get_size ( & r )		5174278	1					
ANR	5174338	Callee	p -> consbind . get_size		5174278	0					
ANR	5174339	MemberAccess	p -> consbind . get_size		5174278	0					
ANR	5174340	PtrMemberAccess	p -> consbind		5174278	0					
ANR	5174341	Identifier	p		5174278	0					
ANR	5174342	Identifier	consbind		5174278	1					
ANR	5174343	Identifier	get_size		5174278	1					
ANR	5174344	ArgumentList	& r		5174278	1					
ANR	5174345	Argument	& r		5174278	0					
ANR	5174346	UnaryOperationExpression	& r		5174278	0					
ANR	5174347	UnaryOperator	&		5174278	0					
ANR	5174348	Identifier	r		5174278	1					
ANR	5174349	ExpressionStatement	( void ) p -> consbind . get_cursor ( & rc )	794:2:18049:18083	5174278	1	True				
ANR	5174350	CastExpression	( void ) p -> consbind . get_cursor ( & rc )		5174278	0					
ANR	5174351	CastTarget	void		5174278	0					
ANR	5174352	CallExpression	p -> consbind . get_cursor ( & rc )		5174278	1					
ANR	5174353	Callee	p -> consbind . get_cursor		5174278	0					
ANR	5174354	MemberAccess	p -> consbind . get_cursor		5174278	0					
ANR	5174355	PtrMemberAccess	p -> consbind		5174278	0					
ANR	5174356	Identifier	p		5174278	0					
ANR	5174357	Identifier	consbind		5174278	1					
ANR	5174358	Identifier	get_cursor		5174278	1					
ANR	5174359	ArgumentList	& rc		5174278	1					
ANR	5174360	Argument	& rc		5174278	0					
ANR	5174361	UnaryOperationExpression	& rc		5174278	0					
ANR	5174362	UnaryOperator	&		5174278	0					
ANR	5174363	Identifier	rc		5174278	1					
ANR	5174364	IfStatement	if ( rc > r - 1 )		5174278	2					
ANR	5174365	Condition	rc > r - 1	796:6:18092:18101	5174278	0	True				
ANR	5174366	RelationalExpression	rc > r - 1		5174278	0		>			
ANR	5174367	Identifier	rc		5174278	0					
ANR	5174368	AdditiveExpression	r - 1		5174278	1		-			
ANR	5174369	Identifier	r		5174278	0					
ANR	5174370	PrimaryExpression	1		5174278	1					
ANR	5174371	CompoundStatement		20:18:288:288	5174278	1					
ANR	5174372	ExpressionStatement	p -> screen_bounds = addr	797:3:18109:18132	5174278	0	True				
ANR	5174373	AssignmentExpression	p -> screen_bounds = addr		5174278	0		=			
ANR	5174374	PtrMemberAccess	p -> screen_bounds		5174278	0					
ANR	5174375	Identifier	p		5174278	0					
ANR	5174376	Identifier	screen_bounds		5174278	1					
ANR	5174377	Identifier	addr		5174278	1					
ANR	5174378	ReturnType	R_API void		5174278	1					
ANR	5174379	Identifier	r_print_set_screenbounds		5174278	2					
ANR	5174380	ParameterList	"RPrint * p , ut64 addr"		5174278	3					
ANR	5174381	Parameter	RPrint * p	777:36:17793:17801	5174278	0	True				
ANR	5174382	ParameterType	RPrint *		5174278	0					
ANR	5174383	Identifier	p		5174278	1					
ANR	5174384	Parameter	ut64 addr	777:47:17804:17812	5174278	1	True				
ANR	5174385	ParameterType	ut64		5174278	0					
ANR	5174386	Identifier	addr		5174278	1					
ANR	5174387	CFGEntryNode	ENTRY		5174278		True				
ANR	5174388	CFGExitNode	EXIT		5174278		True				
ANR	5174389	Symbol	p		5174278						
ANR	5174390	Symbol	rc		5174278						
ANR	5174391	Symbol	r		5174278						
ANR	5174392	Symbol	p -> screen_bounds		5174278						
ANR	5174393	Symbol	p -> consbind . get_cursor		5174278						
ANR	5174394	Symbol	& r		5174278						
ANR	5174395	Symbol	* p		5174278						
ANR	5174396	Symbol	& rc		5174278						
ANR	5174397	Symbol	addr		5174278						
ANR	5174398	Symbol	p -> consbind . get_size		5174278						
ANR	5174399	Symbol	p -> consbind		5174278						
ANR	5174400	Function	r_print_section	802:0:18144:18446							
ANR	5174401	FunctionDef	"r_print_section (RPrint * p , ut64 at)"		5174400	0					
ANR	5174402	CompoundStatement		802:47:18191:18446	5174400	0					
ANR	5174403	IdentifierDeclStatement	bool use_section = p && p -> flags & R_PRINT_FLAGS_SECTION ;	803:1:18194:18250	5174400	0	True				
ANR	5174404	IdentifierDecl	use_section = p && p -> flags & R_PRINT_FLAGS_SECTION		5174400	0					
ANR	5174405	IdentifierDeclType	bool		5174400	0					
ANR	5174406	Identifier	use_section		5174400	1					
ANR	5174407	AssignmentExpression	use_section = p && p -> flags & R_PRINT_FLAGS_SECTION		5174400	2		=			
ANR	5174408	Identifier	use_section		5174400	0					
ANR	5174409	AndExpression	p && p -> flags & R_PRINT_FLAGS_SECTION		5174400	1		&&			
ANR	5174410	Identifier	p		5174400	0					
ANR	5174411	BitAndExpression	p -> flags & R_PRINT_FLAGS_SECTION		5174400	1		&			
ANR	5174412	PtrMemberAccess	p -> flags		5174400	0					
ANR	5174413	Identifier	p		5174400	0					
ANR	5174414	Identifier	flags		5174400	1					
ANR	5174415	Identifier	R_PRINT_FLAGS_SECTION		5174400	1					
ANR	5174416	IfStatement	if ( use_section )		5174400	1					
ANR	5174417	Condition	use_section	804:5:18257:18267	5174400	0	True				
ANR	5174418	Identifier	use_section		5174400	0					
ANR	5174419	CompoundStatement		8:2:171:202	5174400	1					
ANR	5174420	IdentifierDeclStatement	"const char * s = p -> get_section_name ( p -> user , at ) ;"	805:2:18274:18323	5174400	0	True				
ANR	5174421	IdentifierDecl	"* s = p -> get_section_name ( p -> user , at )"		5174400	0					
ANR	5174422	IdentifierDeclType	const char *		5174400	0					
ANR	5174423	Identifier	s		5174400	1					
ANR	5174424	AssignmentExpression	"* s = p -> get_section_name ( p -> user , at )"		5174400	2		=			
ANR	5174425	Identifier	s		5174400	0					
ANR	5174426	CallExpression	"p -> get_section_name ( p -> user , at )"		5174400	1					
ANR	5174427	Callee	p -> get_section_name		5174400	0					
ANR	5174428	PtrMemberAccess	p -> get_section_name		5174400	0					
ANR	5174429	Identifier	p		5174400	0					
ANR	5174430	Identifier	get_section_name		5174400	1					
ANR	5174431	ArgumentList	p -> user		5174400	1					
ANR	5174432	Argument	p -> user		5174400	0					
ANR	5174433	PtrMemberAccess	p -> user		5174400	0					
ANR	5174434	Identifier	p		5174400	0					
ANR	5174435	Identifier	user		5174400	1					
ANR	5174436	Argument	at		5174400	1					
ANR	5174437	Identifier	at		5174400	0					
ANR	5174438	IfStatement	if ( ! s )		5174400	1					
ANR	5174439	Condition	! s	806:6:18331:18332	5174400	0	True				
ANR	5174440	UnaryOperationExpression	! s		5174400	0					
ANR	5174441	UnaryOperator	!		5174400	0					
ANR	5174442	Identifier	s		5174400	1					
ANR	5174443	CompoundStatement		5:10:143:143	5174400	1					
ANR	5174444	ExpressionStatement	"s = strdup ( """" )"	807:3:18340:18355	5174400	0	True				
ANR	5174445	AssignmentExpression	"s = strdup ( """" )"		5174400	0		=			
ANR	5174446	Identifier	s		5174400	0					
ANR	5174447	CallExpression	"strdup ( """" )"		5174400	1					
ANR	5174448	Callee	strdup		5174400	0					
ANR	5174449	Identifier	strdup		5174400	0					
ANR	5174450	ArgumentList	""""""		5174400	1					
ANR	5174451	Argument	""""""		5174400	0					
ANR	5174452	PrimaryExpression	""""""		5174400	0					
ANR	5174453	IdentifierDeclStatement	"char * tail = r_str_ndup ( s , 19 ) ;"	809:2:18363:18394	5174400	2	True				
ANR	5174454	IdentifierDecl	"* tail = r_str_ndup ( s , 19 )"		5174400	0					
ANR	5174455	IdentifierDeclType	char *		5174400	0					
ANR	5174456	Identifier	tail		5174400	1					
ANR	5174457	AssignmentExpression	"* tail = r_str_ndup ( s , 19 )"		5174400	2		=			
ANR	5174458	Identifier	tail		5174400	0					
ANR	5174459	CallExpression	"r_str_ndup ( s , 19 )"		5174400	1					
ANR	5174460	Callee	r_str_ndup		5174400	0					
ANR	5174461	Identifier	r_str_ndup		5174400	0					
ANR	5174462	ArgumentList	s		5174400	1					
ANR	5174463	Argument	s		5174400	0					
ANR	5174464	Identifier	s		5174400	0					
ANR	5174465	Argument	19		5174400	1					
ANR	5174466	PrimaryExpression	19		5174400	0					
ANR	5174467	ExpressionStatement	"p -> cb_printf ( ""%20s "" , tail )"	810:2:18398:18426	5174400	3	True				
ANR	5174468	CallExpression	"p -> cb_printf ( ""%20s "" , tail )"		5174400	0					
ANR	5174469	Callee	p -> cb_printf		5174400	0					
ANR	5174470	PtrMemberAccess	p -> cb_printf		5174400	0					
ANR	5174471	Identifier	p		5174400	0					
ANR	5174472	Identifier	cb_printf		5174400	1					
ANR	5174473	ArgumentList	"""%20s """		5174400	1					
ANR	5174474	Argument	"""%20s """		5174400	0					
ANR	5174475	PrimaryExpression	"""%20s """		5174400	0					
ANR	5174476	Argument	tail		5174400	1					
ANR	5174477	Identifier	tail		5174400	0					
ANR	5174478	ExpressionStatement	free ( tail )	811:2:18430:18441	5174400	4	True				
ANR	5174479	CallExpression	free ( tail )		5174400	0					
ANR	5174480	Callee	free		5174400	0					
ANR	5174481	Identifier	free		5174400	0					
ANR	5174482	ArgumentList	tail		5174400	1					
ANR	5174483	Argument	tail		5174400	0					
ANR	5174484	Identifier	tail		5174400	0					
ANR	5174485	ReturnType	R_API void		5174400	1					
ANR	5174486	Identifier	r_print_section		5174400	2					
ANR	5174487	ParameterList	"RPrint * p , ut64 at"		5174400	3					
ANR	5174488	Parameter	RPrint * p	802:27:18171:18179	5174400	0	True				
ANR	5174489	ParameterType	RPrint *		5174400	0					
ANR	5174490	Identifier	p		5174400	1					
ANR	5174491	Parameter	ut64 at	802:38:18182:18188	5174400	1	True				
ANR	5174492	ParameterType	ut64		5174400	0					
ANR	5174493	Identifier	at		5174400	1					
ANR	5174494	CFGEntryNode	ENTRY		5174400		True				
ANR	5174495	CFGExitNode	EXIT		5174400		True				
ANR	5174496	Symbol	p		5174400						
ANR	5174497	Symbol	p -> get_section_name		5174400						
ANR	5174498	Symbol	at		5174400						
ANR	5174499	Symbol	s		5174400						
ANR	5174500	Symbol	tail		5174400						
ANR	5174501	Symbol	r_str_ndup		5174400						
ANR	5174502	Symbol	p -> flags		5174400						
ANR	5174503	Symbol	* p		5174400						
ANR	5174504	Symbol	strdup		5174400						
ANR	5174505	Symbol	R_PRINT_FLAGS_SECTION		5174400						
ANR	5174506	Symbol	p -> user		5174400						
ANR	5174507	Symbol	use_section		5174400						
ANR	5174508	Function	r_print_hexdump	815:0:18449:31316							
ANR	5174509	FunctionDef	"r_print_hexdump (RPrint * p , ut64 addr , const ut8 * buf , int len , int base , int step , int zoomsz)"		5174508	0					
ANR	5174510	CompoundStatement		815:106:18555:31316	5174508	0					
ANR	5174511	IdentifierDeclStatement	PrintfCallback printfmt = ( PrintfCallback ) printf ;	816:1:18558:18607	5174508	0	True				
ANR	5174512	IdentifierDecl	printfmt = ( PrintfCallback ) printf		5174508	0					
ANR	5174513	IdentifierDeclType	PrintfCallback		5174508	0					
ANR	5174514	Identifier	printfmt		5174508	1					
ANR	5174515	AssignmentExpression	printfmt = ( PrintfCallback ) printf		5174508	2		=			
ANR	5174516	Identifier	printfmt		5174508	0					
ANR	5174517	CastExpression	( PrintfCallback ) printf		5174508	1					
ANR	5174518	CastTarget	PrintfCallback		5174508	0					
ANR	5174519	Identifier	printf		5174508	1					
ANR	5174520	IdentifierDeclStatement	bool c = p -> flags & R_PRINT_FLAGS_COLOR ;	817:1:18610:18649	5174508	1	True				
ANR	5174521	IdentifierDecl	c = p -> flags & R_PRINT_FLAGS_COLOR		5174508	0					
ANR	5174522	IdentifierDeclType	bool		5174508	0					
ANR	5174523	Identifier	c		5174508	1					
ANR	5174524	AssignmentExpression	c = p -> flags & R_PRINT_FLAGS_COLOR		5174508	2		=			
ANR	5174525	Identifier	c		5174508	0					
ANR	5174526	BitAndExpression	p -> flags & R_PRINT_FLAGS_COLOR		5174508	1		&			
ANR	5174527	PtrMemberAccess	p -> flags		5174508	0					
ANR	5174528	Identifier	p		5174508	0					
ANR	5174529	Identifier	flags		5174508	1					
ANR	5174530	Identifier	R_PRINT_FLAGS_COLOR		5174508	1					
ANR	5174531	Statement	const	818:1:18652:18656	5174508	2	True				
ANR	5174532	Statement	char	818:7:18658:18661	5174508	3	True				
ANR	5174533	Statement	*	818:12:18663:18663	5174508	4	True				
ANR	5174534	Statement	color_title	818:13:18664:18674	5174508	5	True				
ANR	5174535	Statement	=	818:25:18676:18676	5174508	6	True				
ANR	5174536	Statement	c	818:27:18678:18678	5174508	7	True				
ANR	5174537	Statement	?	818:28:18679:18679	5174508	8	True				
ANR	5174538	Statement	(	818:30:18681:18681	5174508	9	True				
ANR	5174539	Statement	Pal	818:31:18682:18684	5174508	10	True				
ANR	5174540	Statement	(	818:35:18686:18686	5174508	11	True				
ANR	5174541	Statement	p	818:36:18687:18687	5174508	12	True				
ANR	5174542	Statement	","	818:37:18688:18688	5174508	13	True				
ANR	5174543	Statement	offset	818:39:18690:18695	5174508	14	True				
ANR	5174544	Statement	)	818:45:18696:18696	5174508	15	True				
ANR	5174545	Statement	:	818:46:18697:18697	5174508	16	True				
ANR	5174546	Statement	Color_MAGENTA	818:48:18699:18711	5174508	17	True				
ANR	5174547	Statement	)	818:61:18712:18712	5174508	18	True				
ANR	5174548	Statement	:	818:62:18713:18713	5174508	19	True				
ANR	5174549	ExpressionStatement	""""""	818:64:18715:18717	5174508	20	True				
ANR	5174550	PrimaryExpression	""""""		5174508	0					
ANR	5174551	IdentifierDeclStatement	"int i , j , k , inc = p ? p -> cols : 16 ;"	819:1:18720:18754	5174508	21	True				
ANR	5174552	IdentifierDecl	i		5174508	0					
ANR	5174553	IdentifierDeclType	int		5174508	0					
ANR	5174554	Identifier	i		5174508	1					
ANR	5174555	IdentifierDecl	j		5174508	1					
ANR	5174556	IdentifierDeclType	int		5174508	0					
ANR	5174557	Identifier	j		5174508	1					
ANR	5174558	IdentifierDecl	k		5174508	2					
ANR	5174559	IdentifierDeclType	int		5174508	0					
ANR	5174560	Identifier	k		5174508	1					
ANR	5174561	IdentifierDecl	inc = p ? p -> cols : 16		5174508	3					
ANR	5174562	IdentifierDeclType	int		5174508	0					
ANR	5174563	Identifier	inc		5174508	1					
ANR	5174564	AssignmentExpression	inc = p ? p -> cols : 16		5174508	2		=			
ANR	5174565	Identifier	inc		5174508	0					
ANR	5174566	ConditionalExpression	p ? p -> cols : 16		5174508	1					
ANR	5174567	Condition	p		5174508	0					
ANR	5174568	Identifier	p		5174508	0					
ANR	5174569	PtrMemberAccess	p -> cols		5174508	1					
ANR	5174570	Identifier	p		5174508	0					
ANR	5174571	Identifier	cols		5174508	1					
ANR	5174572	PrimaryExpression	16		5174508	2					
ANR	5174573	IdentifierDeclStatement	int sparse_char = 0 ;	820:1:18757:18776	5174508	22	True				
ANR	5174574	IdentifierDecl	sparse_char = 0		5174508	0					
ANR	5174575	IdentifierDeclType	int		5174508	0					
ANR	5174576	Identifier	sparse_char		5174508	1					
ANR	5174577	AssignmentExpression	sparse_char = 0		5174508	2		=			
ANR	5174578	Identifier	sparse_char		5174508	0					
ANR	5174579	PrimaryExpression	0		5174508	1					
ANR	5174580	IdentifierDeclStatement	int stride = 0 ;	821:1:18779:18793	5174508	23	True				
ANR	5174581	IdentifierDecl	stride = 0		5174508	0					
ANR	5174582	IdentifierDeclType	int		5174508	0					
ANR	5174583	Identifier	stride		5174508	1					
ANR	5174584	AssignmentExpression	stride = 0		5174508	2		=			
ANR	5174585	Identifier	stride		5174508	0					
ANR	5174586	PrimaryExpression	0		5174508	1					
ANR	5174587	IdentifierDeclStatement	int col = 0 ;	822:1:18796:18807	5174508	24	True				
ANR	5174588	IdentifierDecl	col = 0		5174508	0					
ANR	5174589	IdentifierDeclType	int		5174508	0					
ANR	5174590	Identifier	col		5174508	1					
ANR	5174591	AssignmentExpression	col = 0		5174508	2		=			
ANR	5174592	Identifier	col		5174508	0					
ANR	5174593	PrimaryExpression	0		5174508	1					
ANR	5174594	IdentifierDeclStatement	int use_sparse = 0 ;	823:1:18854:18872	5174508	25	True				
ANR	5174595	IdentifierDecl	use_sparse = 0		5174508	0					
ANR	5174596	IdentifierDeclType	int		5174508	0					
ANR	5174597	Identifier	use_sparse		5174508	1					
ANR	5174598	AssignmentExpression	use_sparse = 0		5174508	2		=			
ANR	5174599	Identifier	use_sparse		5174508	0					
ANR	5174600	PrimaryExpression	0		5174508	1					
ANR	5174601	IdentifierDeclStatement	bool use_header = true ;	824:1:18875:18897	5174508	26	True				
ANR	5174602	IdentifierDecl	use_header = true		5174508	0					
ANR	5174603	IdentifierDeclType	bool		5174508	0					
ANR	5174604	Identifier	use_header		5174508	1					
ANR	5174605	AssignmentExpression	use_header = true		5174508	2		=			
ANR	5174606	Identifier	true		5174508	0					
ANR	5174607	Identifier	true		5174508	1					
ANR	5174608	IdentifierDeclStatement	bool use_hdroff = true ;	825:1:18900:18922	5174508	27	True				
ANR	5174609	IdentifierDecl	use_hdroff = true		5174508	0					
ANR	5174610	IdentifierDeclType	bool		5174508	0					
ANR	5174611	Identifier	use_hdroff		5174508	1					
ANR	5174612	AssignmentExpression	use_hdroff = true		5174508	2		=			
ANR	5174613	Identifier	true		5174508	0					
ANR	5174614	Identifier	true		5174508	1					
ANR	5174615	IdentifierDeclStatement	bool use_pair = true ;	826:1:18925:18945	5174508	28	True				
ANR	5174616	IdentifierDecl	use_pair = true		5174508	0					
ANR	5174617	IdentifierDeclType	bool		5174508	0					
ANR	5174618	Identifier	use_pair		5174508	1					
ANR	5174619	AssignmentExpression	use_pair = true		5174508	2		=			
ANR	5174620	Identifier	true		5174508	0					
ANR	5174621	Identifier	true		5174508	1					
ANR	5174622	IdentifierDeclStatement	bool use_offset = true ;	827:1:18948:18970	5174508	29	True				
ANR	5174623	IdentifierDecl	use_offset = true		5174508	0					
ANR	5174624	IdentifierDeclType	bool		5174508	0					
ANR	5174625	Identifier	use_offset		5174508	1					
ANR	5174626	AssignmentExpression	use_offset = true		5174508	2		=			
ANR	5174627	Identifier	true		5174508	0					
ANR	5174628	Identifier	true		5174508	1					
ANR	5174629	IdentifierDeclStatement	bool compact = false ;	828:1:18973:18993	5174508	30	True				
ANR	5174630	IdentifierDecl	compact = false		5174508	0					
ANR	5174631	IdentifierDeclType	bool		5174508	0					
ANR	5174632	Identifier	compact		5174508	1					
ANR	5174633	AssignmentExpression	compact = false		5174508	2		=			
ANR	5174634	Identifier	false		5174508	0					
ANR	5174635	Identifier	false		5174508	1					
ANR	5174636	IdentifierDeclStatement	int use_segoff = 0 ;	829:1:18996:19014	5174508	31	True				
ANR	5174637	IdentifierDecl	use_segoff = 0		5174508	0					
ANR	5174638	IdentifierDeclType	int		5174508	0					
ANR	5174639	Identifier	use_segoff		5174508	1					
ANR	5174640	AssignmentExpression	use_segoff = 0		5174508	2		=			
ANR	5174641	Identifier	use_segoff		5174508	0					
ANR	5174642	PrimaryExpression	0		5174508	1					
ANR	5174643	IdentifierDeclStatement	int pairs = 0 ;	830:1:19017:19030	5174508	32	True				
ANR	5174644	IdentifierDecl	pairs = 0		5174508	0					
ANR	5174645	IdentifierDeclType	int		5174508	0					
ANR	5174646	Identifier	pairs		5174508	1					
ANR	5174647	AssignmentExpression	pairs = 0		5174508	2		=			
ANR	5174648	Identifier	pairs		5174508	0					
ANR	5174649	PrimaryExpression	0		5174508	1					
ANR	5174650	IdentifierDeclStatement	"const char * bytefmt = ""%02x"" ;"	831:1:19033:19061	5174508	33	True				
ANR	5174651	IdentifierDecl	"* bytefmt = ""%02x"""		5174508	0					
ANR	5174652	IdentifierDeclType	const char *		5174508	0					
ANR	5174653	Identifier	bytefmt		5174508	1					
ANR	5174654	AssignmentExpression	"* bytefmt = ""%02x"""		5174508	2		=			
ANR	5174655	Identifier	bytefmt		5174508	0					
ANR	5174656	PrimaryExpression	"""%02x"""		5174508	1					
ANR	5174657	IdentifierDeclStatement	"const char * pre = """" ;"	832:1:19064:19084	5174508	34	True				
ANR	5174658	IdentifierDecl	"* pre = """""		5174508	0					
ANR	5174659	IdentifierDeclType	const char *		5174508	0					
ANR	5174660	Identifier	pre		5174508	1					
ANR	5174661	AssignmentExpression	"* pre = """""		5174508	2		=			
ANR	5174662	Identifier	pre		5174508	0					
ANR	5174663	PrimaryExpression	""""""		5174508	1					
ANR	5174664	IdentifierDeclStatement	int last_sparse = 0 ;	833:1:19087:19106	5174508	35	True				
ANR	5174665	IdentifierDecl	last_sparse = 0		5174508	0					
ANR	5174666	IdentifierDeclType	int		5174508	0					
ANR	5174667	Identifier	last_sparse		5174508	1					
ANR	5174668	AssignmentExpression	last_sparse = 0		5174508	2		=			
ANR	5174669	Identifier	last_sparse		5174508	0					
ANR	5174670	PrimaryExpression	0		5174508	1					
ANR	5174671	IdentifierDeclStatement	bool use_hexa = true ;	834:1:19109:19129	5174508	36	True				
ANR	5174672	IdentifierDecl	use_hexa = true		5174508	0					
ANR	5174673	IdentifierDeclType	bool		5174508	0					
ANR	5174674	Identifier	use_hexa		5174508	1					
ANR	5174675	AssignmentExpression	use_hexa = true		5174508	2		=			
ANR	5174676	Identifier	true		5174508	0					
ANR	5174677	Identifier	true		5174508	1					
ANR	5174678	IdentifierDeclStatement	bool use_align = false ;	835:1:19132:19154	5174508	37	True				
ANR	5174679	IdentifierDecl	use_align = false		5174508	0					
ANR	5174680	IdentifierDeclType	bool		5174508	0					
ANR	5174681	Identifier	use_align		5174508	1					
ANR	5174682	AssignmentExpression	use_align = false		5174508	2		=			
ANR	5174683	Identifier	false		5174508	0					
ANR	5174684	Identifier	false		5174508	1					
ANR	5174685	IdentifierDeclStatement	bool use_unalloc = false ;	836:1:19157:19181	5174508	38	True				
ANR	5174686	IdentifierDecl	use_unalloc = false		5174508	0					
ANR	5174687	IdentifierDeclType	bool		5174508	0					
ANR	5174688	Identifier	use_unalloc		5174508	1					
ANR	5174689	AssignmentExpression	use_unalloc = false		5174508	2		=			
ANR	5174690	Identifier	false		5174508	0					
ANR	5174691	Identifier	false		5174508	1					
ANR	5174692	IdentifierDeclStatement	"const char * a , * b ;"	837:1:19184:19201	5174508	39	True				
ANR	5174693	IdentifierDecl	* a		5174508	0					
ANR	5174694	IdentifierDeclType	const char *		5174508	0					
ANR	5174695	Identifier	a		5174508	1					
ANR	5174696	IdentifierDecl	* b		5174508	1					
ANR	5174697	IdentifierDeclType	const char *		5174508	0					
ANR	5174698	Identifier	b		5174508	1					
ANR	5174699	IdentifierDeclStatement	int K = 0 ;	838:1:19204:19213	5174508	40	True				
ANR	5174700	IdentifierDecl	K = 0		5174508	0					
ANR	5174701	IdentifierDeclType	int		5174508	0					
ANR	5174702	Identifier	K		5174508	1					
ANR	5174703	AssignmentExpression	K = 0		5174508	2		=			
ANR	5174704	Identifier	K		5174508	0					
ANR	5174705	PrimaryExpression	0		5174508	1					
ANR	5174706	IdentifierDeclStatement	bool hex_style = false ;	839:1:19216:19238	5174508	41	True				
ANR	5174707	IdentifierDecl	hex_style = false		5174508	0					
ANR	5174708	IdentifierDeclType	bool		5174508	0					
ANR	5174709	Identifier	hex_style		5174508	1					
ANR	5174710	AssignmentExpression	hex_style = false		5174508	2		=			
ANR	5174711	Identifier	false		5174508	0					
ANR	5174712	Identifier	false		5174508	1					
ANR	5174713	IdentifierDeclStatement	int rowbytes = p -> cols ;	840:1:19241:19263	5174508	42	True				
ANR	5174714	IdentifierDecl	rowbytes = p -> cols		5174508	0					
ANR	5174715	IdentifierDeclType	int		5174508	0					
ANR	5174716	Identifier	rowbytes		5174508	1					
ANR	5174717	AssignmentExpression	rowbytes = p -> cols		5174508	2		=			
ANR	5174718	Identifier	rowbytes		5174508	0					
ANR	5174719	PtrMemberAccess	p -> cols		5174508	1					
ANR	5174720	Identifier	p		5174508	0					
ANR	5174721	Identifier	cols		5174508	1					
ANR	5174722	ExpressionStatement	len = len - ( len % step )	842:1:19267:19291	5174508	43	True				
ANR	5174723	AssignmentExpression	len = len - ( len % step )		5174508	0		=			
ANR	5174724	Identifier	len		5174508	0					
ANR	5174725	AdditiveExpression	len - ( len % step )		5174508	1		-			
ANR	5174726	Identifier	len		5174508	0					
ANR	5174727	MultiplicativeExpression	len % step		5174508	1		%			
ANR	5174728	Identifier	len		5174508	0					
ANR	5174729	Identifier	step		5174508	1					
ANR	5174730	IfStatement	if ( p )		5174508	44					
ANR	5174731	Condition	p	843:5:19298:19298	5174508	0	True				
ANR	5174732	Identifier	p		5174508	0					
ANR	5174733	CompoundStatement		29:8:745:745	5174508	1					
ANR	5174734	ExpressionStatement	pairs = p -> pairs	844:2:19305:19321	5174508	0	True				
ANR	5174735	AssignmentExpression	pairs = p -> pairs		5174508	0		=			
ANR	5174736	Identifier	pairs		5174508	0					
ANR	5174737	PtrMemberAccess	p -> pairs		5174508	1					
ANR	5174738	Identifier	p		5174508	0					
ANR	5174739	Identifier	pairs		5174508	1					
ANR	5174740	ExpressionStatement	use_sparse = p -> flags & R_PRINT_FLAGS_SPARSE	845:2:19325:19369	5174508	1	True				
ANR	5174741	AssignmentExpression	use_sparse = p -> flags & R_PRINT_FLAGS_SPARSE		5174508	0		=			
ANR	5174742	Identifier	use_sparse		5174508	0					
ANR	5174743	BitAndExpression	p -> flags & R_PRINT_FLAGS_SPARSE		5174508	1		&			
ANR	5174744	PtrMemberAccess	p -> flags		5174508	0					
ANR	5174745	Identifier	p		5174508	0					
ANR	5174746	Identifier	flags		5174508	1					
ANR	5174747	Identifier	R_PRINT_FLAGS_SPARSE		5174508	1					
ANR	5174748	ExpressionStatement	use_header = p -> flags & R_PRINT_FLAGS_HEADER	846:2:19373:19417	5174508	2	True				
ANR	5174749	AssignmentExpression	use_header = p -> flags & R_PRINT_FLAGS_HEADER		5174508	0		=			
ANR	5174750	Identifier	use_header		5174508	0					
ANR	5174751	BitAndExpression	p -> flags & R_PRINT_FLAGS_HEADER		5174508	1		&			
ANR	5174752	PtrMemberAccess	p -> flags		5174508	0					
ANR	5174753	Identifier	p		5174508	0					
ANR	5174754	Identifier	flags		5174508	1					
ANR	5174755	Identifier	R_PRINT_FLAGS_HEADER		5174508	1					
ANR	5174756	ExpressionStatement	use_hdroff = p -> flags & R_PRINT_FLAGS_HDROFF	847:2:19421:19465	5174508	3	True				
ANR	5174757	AssignmentExpression	use_hdroff = p -> flags & R_PRINT_FLAGS_HDROFF		5174508	0		=			
ANR	5174758	Identifier	use_hdroff		5174508	0					
ANR	5174759	BitAndExpression	p -> flags & R_PRINT_FLAGS_HDROFF		5174508	1		&			
ANR	5174760	PtrMemberAccess	p -> flags		5174508	0					
ANR	5174761	Identifier	p		5174508	0					
ANR	5174762	Identifier	flags		5174508	1					
ANR	5174763	Identifier	R_PRINT_FLAGS_HDROFF		5174508	1					
ANR	5174764	ExpressionStatement	use_segoff = p -> flags & R_PRINT_FLAGS_SEGOFF	848:2:19469:19513	5174508	4	True				
ANR	5174765	AssignmentExpression	use_segoff = p -> flags & R_PRINT_FLAGS_SEGOFF		5174508	0		=			
ANR	5174766	Identifier	use_segoff		5174508	0					
ANR	5174767	BitAndExpression	p -> flags & R_PRINT_FLAGS_SEGOFF		5174508	1		&			
ANR	5174768	PtrMemberAccess	p -> flags		5174508	0					
ANR	5174769	Identifier	p		5174508	0					
ANR	5174770	Identifier	flags		5174508	1					
ANR	5174771	Identifier	R_PRINT_FLAGS_SEGOFF		5174508	1					
ANR	5174772	ExpressionStatement	use_align = p -> flags & R_PRINT_FLAGS_ALIGN	849:2:19517:19559	5174508	5	True				
ANR	5174773	AssignmentExpression	use_align = p -> flags & R_PRINT_FLAGS_ALIGN		5174508	0		=			
ANR	5174774	Identifier	use_align		5174508	0					
ANR	5174775	BitAndExpression	p -> flags & R_PRINT_FLAGS_ALIGN		5174508	1		&			
ANR	5174776	PtrMemberAccess	p -> flags		5174508	0					
ANR	5174777	Identifier	p		5174508	0					
ANR	5174778	Identifier	flags		5174508	1					
ANR	5174779	Identifier	R_PRINT_FLAGS_ALIGN		5174508	1					
ANR	5174780	ExpressionStatement	use_offset = p -> flags & R_PRINT_FLAGS_OFFSET	850:2:19563:19607	5174508	6	True				
ANR	5174781	AssignmentExpression	use_offset = p -> flags & R_PRINT_FLAGS_OFFSET		5174508	0		=			
ANR	5174782	Identifier	use_offset		5174508	0					
ANR	5174783	BitAndExpression	p -> flags & R_PRINT_FLAGS_OFFSET		5174508	1		&			
ANR	5174784	PtrMemberAccess	p -> flags		5174508	0					
ANR	5174785	Identifier	p		5174508	0					
ANR	5174786	Identifier	flags		5174508	1					
ANR	5174787	Identifier	R_PRINT_FLAGS_OFFSET		5174508	1					
ANR	5174788	ExpressionStatement	hex_style = p -> flags & R_PRINT_FLAGS_STYLE	851:2:19611:19653	5174508	7	True				
ANR	5174789	AssignmentExpression	hex_style = p -> flags & R_PRINT_FLAGS_STYLE		5174508	0		=			
ANR	5174790	Identifier	hex_style		5174508	0					
ANR	5174791	BitAndExpression	p -> flags & R_PRINT_FLAGS_STYLE		5174508	1		&			
ANR	5174792	PtrMemberAccess	p -> flags		5174508	0					
ANR	5174793	Identifier	p		5174508	0					
ANR	5174794	Identifier	flags		5174508	1					
ANR	5174795	Identifier	R_PRINT_FLAGS_STYLE		5174508	1					
ANR	5174796	ExpressionStatement	use_hexa = ! ( p -> flags & R_PRINT_FLAGS_NONHEX )	852:2:19657:19702	5174508	8	True				
ANR	5174797	AssignmentExpression	use_hexa = ! ( p -> flags & R_PRINT_FLAGS_NONHEX )		5174508	0		=			
ANR	5174798	Identifier	use_hexa		5174508	0					
ANR	5174799	UnaryOperationExpression	! ( p -> flags & R_PRINT_FLAGS_NONHEX )		5174508	1					
ANR	5174800	UnaryOperator	!		5174508	0					
ANR	5174801	BitAndExpression	p -> flags & R_PRINT_FLAGS_NONHEX		5174508	1		&			
ANR	5174802	PtrMemberAccess	p -> flags		5174508	0					
ANR	5174803	Identifier	p		5174508	0					
ANR	5174804	Identifier	flags		5174508	1					
ANR	5174805	Identifier	R_PRINT_FLAGS_NONHEX		5174508	1					
ANR	5174806	ExpressionStatement	use_unalloc = p -> flags & R_PRINT_FLAGS_UNALLOC	853:2:19706:19752	5174508	9	True				
ANR	5174807	AssignmentExpression	use_unalloc = p -> flags & R_PRINT_FLAGS_UNALLOC		5174508	0		=			
ANR	5174808	Identifier	use_unalloc		5174508	0					
ANR	5174809	BitAndExpression	p -> flags & R_PRINT_FLAGS_UNALLOC		5174508	1		&			
ANR	5174810	PtrMemberAccess	p -> flags		5174508	0					
ANR	5174811	Identifier	p		5174508	0					
ANR	5174812	Identifier	flags		5174508	1					
ANR	5174813	Identifier	R_PRINT_FLAGS_UNALLOC		5174508	1					
ANR	5174814	ExpressionStatement	compact = p -> flags & R_PRINT_FLAGS_COMPACT	854:2:19756:19798	5174508	10	True				
ANR	5174815	AssignmentExpression	compact = p -> flags & R_PRINT_FLAGS_COMPACT		5174508	0		=			
ANR	5174816	Identifier	compact		5174508	0					
ANR	5174817	BitAndExpression	p -> flags & R_PRINT_FLAGS_COMPACT		5174508	1		&			
ANR	5174818	PtrMemberAccess	p -> flags		5174508	0					
ANR	5174819	Identifier	p		5174508	0					
ANR	5174820	Identifier	flags		5174508	1					
ANR	5174821	Identifier	R_PRINT_FLAGS_COMPACT		5174508	1					
ANR	5174822	ExpressionStatement	inc = p -> cols	855:2:19802:19815	5174508	11	True				
ANR	5174823	AssignmentExpression	inc = p -> cols		5174508	0		=			
ANR	5174824	Identifier	inc		5174508	0					
ANR	5174825	PtrMemberAccess	p -> cols		5174508	1					
ANR	5174826	Identifier	p		5174508	0					
ANR	5174827	Identifier	cols		5174508	1					
ANR	5174828	ExpressionStatement	col = p -> col	856:2:19832:19844	5174508	12	True				
ANR	5174829	AssignmentExpression	col = p -> col		5174508	0		=			
ANR	5174830	Identifier	col		5174508	0					
ANR	5174831	PtrMemberAccess	p -> col		5174508	1					
ANR	5174832	Identifier	p		5174508	0					
ANR	5174833	Identifier	col		5174508	1					
ANR	5174834	ExpressionStatement	printfmt = ( PrintfCallback ) p -> cb_printf	857:2:19848:19888	5174508	13	True				
ANR	5174835	AssignmentExpression	printfmt = ( PrintfCallback ) p -> cb_printf		5174508	0		=			
ANR	5174836	Identifier	printfmt		5174508	0					
ANR	5174837	CastExpression	( PrintfCallback ) p -> cb_printf		5174508	1					
ANR	5174838	CastTarget	PrintfCallback		5174508	0					
ANR	5174839	PtrMemberAccess	p -> cb_printf		5174508	1					
ANR	5174840	Identifier	p		5174508	0					
ANR	5174841	Identifier	cb_printf		5174508	1					
ANR	5174842	ExpressionStatement	stride = p -> stride	858:2:19892:19910	5174508	14	True				
ANR	5174843	AssignmentExpression	stride = p -> stride		5174508	0		=			
ANR	5174844	Identifier	stride		5174508	0					
ANR	5174845	PtrMemberAccess	p -> stride		5174508	1					
ANR	5174846	Identifier	p		5174508	0					
ANR	5174847	Identifier	stride		5174508	1					
ANR	5174848	IfStatement	if ( ! use_hexa )		5174508	45					
ANR	5174849	Condition	! use_hexa	860:5:19920:19928	5174508	0	True				
ANR	5174850	UnaryOperationExpression	! use_hexa		5174508	0					
ANR	5174851	UnaryOperator	!		5174508	0					
ANR	5174852	Identifier	use_hexa		5174508	1					
ANR	5174853	CompoundStatement		46:16:1375:1375	5174508	1					
ANR	5174854	ExpressionStatement	inc *= 4	861:2:19935:19943	5174508	0	True				
ANR	5174855	AssignmentExpression	inc *= 4		5174508	0		*=			
ANR	5174856	Identifier	inc		5174508	0					
ANR	5174857	PrimaryExpression	4		5174508	1					
ANR	5174858	IfStatement	if ( step < 1 )		5174508	46					
ANR	5174859	Condition	step < 1	863:5:19953:19960	5174508	0	True				
ANR	5174860	RelationalExpression	step < 1		5174508	0		<			
ANR	5174861	Identifier	step		5174508	0					
ANR	5174862	PrimaryExpression	1		5174508	1					
ANR	5174863	CompoundStatement		49:15:1407:1407	5174508	1					
ANR	5174864	ExpressionStatement	step = 1	864:2:19967:19975	5174508	0	True				
ANR	5174865	AssignmentExpression	step = 1		5174508	0		=			
ANR	5174866	Identifier	step		5174508	0					
ANR	5174867	PrimaryExpression	1		5174508	1					
ANR	5174868	IfStatement	if ( inc < 1 )		5174508	47					
ANR	5174869	Condition	inc < 1	866:5:19985:19991	5174508	0	True				
ANR	5174870	RelationalExpression	inc < 1		5174508	0		<			
ANR	5174871	Identifier	inc		5174508	0					
ANR	5174872	PrimaryExpression	1		5174508	1					
ANR	5174873	CompoundStatement		52:14:1438:1438	5174508	1					
ANR	5174874	ExpressionStatement	inc = 1	867:2:19998:20005	5174508	0	True				
ANR	5174875	AssignmentExpression	inc = 1		5174508	0		=			
ANR	5174876	Identifier	inc		5174508	0					
ANR	5174877	PrimaryExpression	1		5174508	1					
ANR	5174878	IfStatement	if ( zoomsz < 1 )		5174508	48					
ANR	5174879	Condition	zoomsz < 1	869:5:20015:20024	5174508	0	True				
ANR	5174880	RelationalExpression	zoomsz < 1		5174508	0		<			
ANR	5174881	Identifier	zoomsz		5174508	0					
ANR	5174882	PrimaryExpression	1		5174508	1					
ANR	5174883	CompoundStatement		55:17:1471:1471	5174508	1					
ANR	5174884	ExpressionStatement	zoomsz = 1	870:2:20031:20041	5174508	0	True				
ANR	5174885	AssignmentExpression	zoomsz = 1		5174508	0		=			
ANR	5174886	Identifier	zoomsz		5174508	0					
ANR	5174887	PrimaryExpression	1		5174508	1					
ANR	5174888	SwitchStatement	switch ( base )		5174508	49					
ANR	5174889	Condition	base	872:9:20055:20058	5174508	0	True				
ANR	5174890	Identifier	base		5174508	0					
ANR	5174891	CompoundStatement		58:15:1505:1505	5174508	1					
ANR	5174892	Statement	case	873:1:20064:20067	5174508	0	True				
ANR	5174893	Statement	-	873:6:20069:20069	5174508	1	True				
ANR	5174894	Label	10 :	873:7:20070:20072	5174508	2	True				
ANR	5174895	ExpressionStatement	"bytefmt = ""0x%08x """	874:2:20076:20095	5174508	3	True				
ANR	5174896	AssignmentExpression	"bytefmt = ""0x%08x """		5174508	0		=			
ANR	5174897	Identifier	bytefmt		5174508	0					
ANR	5174898	PrimaryExpression	"""0x%08x """		5174508	1					
ANR	5174899	ExpressionStatement	"pre = "" """	875:2:20099:20108	5174508	4	True				
ANR	5174900	AssignmentExpression	"pre = "" """		5174508	0		=			
ANR	5174901	Identifier	pre		5174508	0					
ANR	5174902	PrimaryExpression	""" """		5174508	1					
ANR	5174903	IfStatement	if ( inc < 4 )		5174508	5					
ANR	5174904	Condition	inc < 4	876:6:20116:20122	5174508	0	True				
ANR	5174905	RelationalExpression	inc < 4		5174508	0		<			
ANR	5174906	Identifier	inc		5174508	0					
ANR	5174907	PrimaryExpression	4		5174508	1					
ANR	5174908	CompoundStatement		62:15:1569:1569	5174508	1					
ANR	5174909	ExpressionStatement	inc = 4	877:3:20130:20137	5174508	0	True				
ANR	5174910	AssignmentExpression	inc = 4		5174508	0		=			
ANR	5174911	Identifier	inc		5174508	0					
ANR	5174912	PrimaryExpression	4		5174508	1					
ANR	5174913	BreakStatement	break ;	879:2:20145:20150	5174508	6	True				
ANR	5174914	Statement	case	880:1:20153:20156	5174508	7	True				
ANR	5174915	Statement	-	880:6:20158:20158	5174508	8	True				
ANR	5174916	Label	1 :	880:7:20159:20160	5174508	9	True				
ANR	5174917	ExpressionStatement	"bytefmt = ""0x%08x """	881:2:20164:20183	5174508	10	True				
ANR	5174918	AssignmentExpression	"bytefmt = ""0x%08x """		5174508	0		=			
ANR	5174919	Identifier	bytefmt		5174508	0					
ANR	5174920	PrimaryExpression	"""0x%08x """		5174508	1					
ANR	5174921	ExpressionStatement	"pre = ""  """	882:2:20187:20197	5174508	11	True				
ANR	5174922	AssignmentExpression	"pre = ""  """		5174508	0		=			
ANR	5174923	Identifier	pre		5174508	0					
ANR	5174924	PrimaryExpression	"""  """		5174508	1					
ANR	5174925	IfStatement	if ( inc < 4 )		5174508	12					
ANR	5174926	Condition	inc < 4	883:6:20205:20211	5174508	0	True				
ANR	5174927	RelationalExpression	inc < 4		5174508	0		<			
ANR	5174928	Identifier	inc		5174508	0					
ANR	5174929	PrimaryExpression	4		5174508	1					
ANR	5174930	CompoundStatement		69:15:1658:1658	5174508	1					
ANR	5174931	ExpressionStatement	inc = 4	884:3:20219:20226	5174508	0	True				
ANR	5174932	AssignmentExpression	inc = 4		5174508	0		=			
ANR	5174933	Identifier	inc		5174508	0					
ANR	5174934	PrimaryExpression	4		5174508	1					
ANR	5174935	BreakStatement	break ;	886:2:20234:20239	5174508	13	True				
ANR	5174936	Label	case 8 :	887:1:20242:20248	5174508	14	True				
ANR	5174937	ExpressionStatement	"bytefmt = ""%03o"""	888:2:20252:20268	5174508	15	True				
ANR	5174938	AssignmentExpression	"bytefmt = ""%03o"""		5174508	0		=			
ANR	5174939	Identifier	bytefmt		5174508	0					
ANR	5174940	PrimaryExpression	"""%03o"""		5174508	1					
ANR	5174941	ExpressionStatement	"pre = "" """	889:2:20272:20281	5174508	16	True				
ANR	5174942	AssignmentExpression	"pre = "" """		5174508	0		=			
ANR	5174943	Identifier	pre		5174508	0					
ANR	5174944	PrimaryExpression	""" """		5174508	1					
ANR	5174945	BreakStatement	break ;	890:2:20285:20290	5174508	17	True				
ANR	5174946	Label	case 10 :	891:1:20293:20300	5174508	18	True				
ANR	5174947	ExpressionStatement	"bytefmt = ""%3d"""	892:2:20304:20319	5174508	19	True				
ANR	5174948	AssignmentExpression	"bytefmt = ""%3d"""		5174508	0		=			
ANR	5174949	Identifier	bytefmt		5174508	0					
ANR	5174950	PrimaryExpression	"""%3d"""		5174508	1					
ANR	5174951	ExpressionStatement	"pre = "" """	893:2:20323:20332	5174508	20	True				
ANR	5174952	AssignmentExpression	"pre = "" """		5174508	0		=			
ANR	5174953	Identifier	pre		5174508	0					
ANR	5174954	PrimaryExpression	""" """		5174508	1					
ANR	5174955	BreakStatement	break ;	894:2:20336:20341	5174508	21	True				
ANR	5174956	Label	case 32 :	895:1:20344:20351	5174508	22	True				
ANR	5174957	ExpressionStatement	"bytefmt = ""0x%08x """	896:2:20355:20374	5174508	23	True				
ANR	5174958	AssignmentExpression	"bytefmt = ""0x%08x """		5174508	0		=			
ANR	5174959	Identifier	bytefmt		5174508	0					
ANR	5174960	PrimaryExpression	"""0x%08x """		5174508	1					
ANR	5174961	ExpressionStatement	"pre = "" """	897:2:20378:20387	5174508	24	True				
ANR	5174962	AssignmentExpression	"pre = "" """		5174508	0		=			
ANR	5174963	Identifier	pre		5174508	0					
ANR	5174964	PrimaryExpression	""" """		5174508	1					
ANR	5174965	IfStatement	if ( inc < 4 )		5174508	25					
ANR	5174966	Condition	inc < 4	898:6:20395:20401	5174508	0	True				
ANR	5174967	RelationalExpression	inc < 4		5174508	0		<			
ANR	5174968	Identifier	inc		5174508	0					
ANR	5174969	PrimaryExpression	4		5174508	1					
ANR	5174970	CompoundStatement		84:15:1848:1848	5174508	1					
ANR	5174971	ExpressionStatement	inc = 4	899:3:20409:20416	5174508	0	True				
ANR	5174972	AssignmentExpression	inc = 4		5174508	0		=			
ANR	5174973	Identifier	inc		5174508	0					
ANR	5174974	PrimaryExpression	4		5174508	1					
ANR	5174975	BreakStatement	break ;	901:2:20424:20429	5174508	26	True				
ANR	5174976	Label	case 64 :	902:1:20432:20439	5174508	27	True				
ANR	5174977	ExpressionStatement	"bytefmt = ""0x%016x """	903:2:20443:20463	5174508	28	True				
ANR	5174978	AssignmentExpression	"bytefmt = ""0x%016x """		5174508	0		=			
ANR	5174979	Identifier	bytefmt		5174508	0					
ANR	5174980	PrimaryExpression	"""0x%016x """		5174508	1					
ANR	5174981	ExpressionStatement	"pre = "" """	904:2:20467:20476	5174508	29	True				
ANR	5174982	AssignmentExpression	"pre = "" """		5174508	0		=			
ANR	5174983	Identifier	pre		5174508	0					
ANR	5174984	PrimaryExpression	""" """		5174508	1					
ANR	5174985	IfStatement	if ( inc < 8 )		5174508	30					
ANR	5174986	Condition	inc < 8	905:6:20484:20490	5174508	0	True				
ANR	5174987	RelationalExpression	inc < 8		5174508	0		<			
ANR	5174988	Identifier	inc		5174508	0					
ANR	5174989	PrimaryExpression	8		5174508	1					
ANR	5174990	CompoundStatement		91:15:1937:1937	5174508	1					
ANR	5174991	ExpressionStatement	inc = 8	906:3:20498:20505	5174508	0	True				
ANR	5174992	AssignmentExpression	inc = 8		5174508	0		=			
ANR	5174993	Identifier	inc		5174508	0					
ANR	5174994	PrimaryExpression	8		5174508	1					
ANR	5174995	BreakStatement	break ;	908:2:20513:20518	5174508	31	True				
ANR	5174996	IdentifierDeclStatement	"const char * space = hex_style ? ""."" : "" "" ;"	910:1:20524:20563	5174508	50	True				
ANR	5174997	IdentifierDecl	"* space = hex_style ? ""."" : "" """		5174508	0					
ANR	5174998	IdentifierDeclType	const char *		5174508	0					
ANR	5174999	Identifier	space		5174508	1					
ANR	5175000	AssignmentExpression	"* space = hex_style ? ""."" : "" """		5174508	2		=			
ANR	5175001	Identifier	space		5174508	0					
ANR	5175002	ConditionalExpression	"hex_style ? ""."" : "" """		5174508	1					
ANR	5175003	Condition	hex_style		5174508	0					
ANR	5175004	Identifier	hex_style		5174508	0					
ANR	5175005	PrimaryExpression	"""."""		5174508	1					
ANR	5175006	PrimaryExpression	""" """		5174508	2					
ANR	5175007	IfStatement	if ( step == 1 && base < 0 )		5174508	51					
ANR	5175008	Condition	step == 1 && base < 0	912:5:20614:20634	5174508	0	True				
ANR	5175009	AndExpression	step == 1 && base < 0		5174508	0		&&			
ANR	5175010	EqualityExpression	step == 1		5174508	0		==			
ANR	5175011	Identifier	step		5174508	0					
ANR	5175012	PrimaryExpression	1		5174508	1					
ANR	5175013	RelationalExpression	base < 0		5174508	1		<			
ANR	5175014	Identifier	base		5174508	0					
ANR	5175015	PrimaryExpression	0		5174508	1					
ANR	5175016	CompoundStatement		98:28:2081:2081	5174508	1					
ANR	5175017	ExpressionStatement	use_header = false	913:2:20641:20659	5174508	0	True				
ANR	5175018	AssignmentExpression	use_header = false		5174508	0		=			
ANR	5175019	Identifier	use_header		5174508	0					
ANR	5175020	Identifier	false		5174508	1					
ANR	5175021	IfStatement	if ( use_header )		5174508	52					
ANR	5175022	Condition	use_header	915:5:20669:20678	5174508	0	True				
ANR	5175023	Identifier	use_header		5174508	0					
ANR	5175024	CompoundStatement		101:17:2125:2125	5174508	1					
ANR	5175025	IfStatement	if ( c )		5174508	0					
ANR	5175026	Condition	c	916:6:20689:20689	5174508	0	True				
ANR	5175027	Identifier	c		5174508	0					
ANR	5175028	CompoundStatement		102:9:2136:2136	5174508	1					
ANR	5175029	ExpressionStatement	printfmt ( color_title )	917:3:20697:20719	5174508	0	True				
ANR	5175030	CallExpression	printfmt ( color_title )		5174508	0					
ANR	5175031	Callee	printfmt		5174508	0					
ANR	5175032	Identifier	printfmt		5174508	0					
ANR	5175033	ArgumentList	color_title		5174508	1					
ANR	5175034	Argument	color_title		5174508	0					
ANR	5175035	Identifier	color_title		5174508	0					
ANR	5175036	IfStatement	if ( base < 32 )		5174508	1					
ANR	5175037	Condition	base < 32	919:6:20731:20739	5174508	0	True				
ANR	5175038	RelationalExpression	base < 32		5174508	0		<			
ANR	5175039	Identifier	base		5174508	0					
ANR	5175040	PrimaryExpression	32		5174508	1					
ANR	5175041	CompoundStatement		106:3:2191:2222	5174508	1					
ANR	5175042	IdentifierDeclStatement	ut32 opad = ( ut32 ) ( addr >> 32 ) ;	920:3:20747:20778	5174508	0	True				
ANR	5175043	IdentifierDecl	opad = ( ut32 ) ( addr >> 32 )		5174508	0					
ANR	5175044	IdentifierDeclType	ut32		5174508	0					
ANR	5175045	Identifier	opad		5174508	1					
ANR	5175046	AssignmentExpression	opad = ( ut32 ) ( addr >> 32 )		5174508	2		=			
ANR	5175047	Identifier	opad		5174508	0					
ANR	5175048	CastExpression	( ut32 ) ( addr >> 32 )		5174508	1					
ANR	5175049	CastTarget	ut32		5174508	0					
ANR	5175050	ShiftExpression	addr >> 32		5174508	1		>>			
ANR	5175051	Identifier	addr		5174508	0					
ANR	5175052	PrimaryExpression	32		5174508	1					
ANR	5175053	CompoundStatement		109:4:2283:2296	5174508	1					
ANR	5175054	IdentifierDeclStatement	"int i , delta ;"	922:4:20821:20833	5174508	0	True				
ANR	5175055	IdentifierDecl	i		5174508	0					
ANR	5175056	IdentifierDeclType	int		5174508	0					
ANR	5175057	Identifier	i		5174508	1					
ANR	5175058	IdentifierDecl	delta		5174508	1					
ANR	5175059	IdentifierDeclType	int		5174508	0					
ANR	5175060	Identifier	delta		5174508	1					
ANR	5175061	IdentifierDeclStatement	char soff [ 32 ] ;	923:4:20839:20852	5174508	1	True				
ANR	5175062	IdentifierDecl	soff [ 32 ]		5174508	0					
ANR	5175063	IdentifierDeclType	char [ 32 ]		5174508	0					
ANR	5175064	Identifier	soff		5174508	1					
ANR	5175065	PrimaryExpression	32		5174508	2					
ANR	5175066	IfStatement	if ( hex_style )		5174508	2					
ANR	5175067	Condition	hex_style	924:8:20862:20870	5174508	0	True				
ANR	5175068	Identifier	hex_style		5174508	0					
ANR	5175069	CompoundStatement		110:19:2317:2317	5174508	1					
ANR	5175070	ExpressionStatement	"printfmt ( ""..offset.."" )"	925:5:20880:20903	5174508	0	True				
ANR	5175071	CallExpression	"printfmt ( ""..offset.."" )"		5174508	0					
ANR	5175072	Callee	printfmt		5174508	0					
ANR	5175073	Identifier	printfmt		5174508	0					
ANR	5175074	ArgumentList	"""..offset.."""		5174508	1					
ANR	5175075	Argument	"""..offset.."""		5174508	0					
ANR	5175076	PrimaryExpression	"""..offset.."""		5174508	0					
ANR	5175077	ElseStatement	else		5174508	0					
ANR	5175078	CompoundStatement		112:11:2360:2360	5174508	0					
ANR	5175079	ExpressionStatement	"printfmt ( ""- offset -"" )"	927:5:20923:20946	5174508	0	True				
ANR	5175080	CallExpression	"printfmt ( ""- offset -"" )"		5174508	0					
ANR	5175081	Callee	printfmt		5174508	0					
ANR	5175082	Identifier	printfmt		5174508	0					
ANR	5175083	ArgumentList	"""- offset -"""		5174508	1					
ANR	5175084	Argument	"""- offset -"""		5174508	0					
ANR	5175085	PrimaryExpression	"""- offset -"""		5174508	0					
ANR	5175086	IfStatement	if ( p -> wide_offsets )		5174508	1					
ANR	5175087	Condition	p -> wide_offsets	928:9:20957:20971	5174508	0	True				
ANR	5175088	PtrMemberAccess	p -> wide_offsets		5174508	0					
ANR	5175089	Identifier	p		5174508	0					
ANR	5175090	Identifier	wide_offsets		5174508	1					
ANR	5175091	CompoundStatement		114:26:2418:2418	5174508	1					
ANR	5175092	ExpressionStatement	"printfmt ( ""       "" )"	929:6:20982:21002	5174508	0	True				
ANR	5175093	CallExpression	"printfmt ( ""       "" )"		5174508	0					
ANR	5175094	Callee	printfmt		5174508	0					
ANR	5175095	Identifier	printfmt		5174508	0					
ANR	5175096	ArgumentList	"""       """		5174508	1					
ANR	5175097	Argument	"""       """		5174508	0					
ANR	5175098	PrimaryExpression	"""       """		5174508	0					
ANR	5175099	IfStatement	if ( use_segoff )		5174508	3					
ANR	5175100	Condition	use_segoff	932:8:21025:21034	5174508	0	True				
ANR	5175101	Identifier	use_segoff		5174508	0					
ANR	5175102	CompoundStatement		119:5:2488:2497	5174508	1					
ANR	5175103	IdentifierDeclStatement	"ut32 s , a ;"	933:5:21044:21053	5174508	0	True				
ANR	5175104	IdentifierDecl	s		5174508	0					
ANR	5175105	IdentifierDeclType	ut32		5174508	0					
ANR	5175106	Identifier	s		5174508	1					
ANR	5175107	IdentifierDecl	a		5174508	1					
ANR	5175108	IdentifierDeclType	ut32		5174508	0					
ANR	5175109	Identifier	a		5174508	1					
ANR	5175110	ExpressionStatement	a = addr & 0xffff	934:5:21060:21077	5174508	1	True				
ANR	5175111	AssignmentExpression	a = addr & 0xffff		5174508	0		=			
ANR	5175112	Identifier	a		5174508	0					
ANR	5175113	BitAndExpression	addr & 0xffff		5174508	1		&			
ANR	5175114	Identifier	addr		5174508	0					
ANR	5175115	PrimaryExpression	0xffff		5174508	1					
ANR	5175116	ExpressionStatement	s = ( ( addr - a ) >> p -> seggrn ) & 0xffff	935:5:21084:21122	5174508	2	True				
ANR	5175117	AssignmentExpression	s = ( ( addr - a ) >> p -> seggrn ) & 0xffff		5174508	0		=			
ANR	5175118	Identifier	s		5174508	0					
ANR	5175119	BitAndExpression	( ( addr - a ) >> p -> seggrn ) & 0xffff		5174508	1		&			
ANR	5175120	ShiftExpression	( addr - a ) >> p -> seggrn		5174508	0		>>			
ANR	5175121	AdditiveExpression	addr - a		5174508	0		-			
ANR	5175122	Identifier	addr		5174508	0					
ANR	5175123	Identifier	a		5174508	1					
ANR	5175124	PtrMemberAccess	p -> seggrn		5174508	1					
ANR	5175125	Identifier	p		5174508	0					
ANR	5175126	Identifier	seggrn		5174508	1					
ANR	5175127	PrimaryExpression	0xffff		5174508	1					
ANR	5175128	ExpressionStatement	"snprintf ( soff , sizeof ( soff ) , ""%04x:%04x "" , s , a )"	936:5:21129:21179	5174508	3	True				
ANR	5175129	CallExpression	"snprintf ( soff , sizeof ( soff ) , ""%04x:%04x "" , s , a )"		5174508	0					
ANR	5175130	Callee	snprintf		5174508	0					
ANR	5175131	Identifier	snprintf		5174508	0					
ANR	5175132	ArgumentList	soff		5174508	1					
ANR	5175133	Argument	soff		5174508	0					
ANR	5175134	Identifier	soff		5174508	0					
ANR	5175135	Argument	sizeof ( soff )		5174508	1					
ANR	5175136	SizeofExpression	sizeof ( soff )		5174508	0					
ANR	5175137	Sizeof	sizeof		5174508	0					
ANR	5175138	SizeofOperand	soff		5174508	1					
ANR	5175139	Argument	"""%04x:%04x """		5174508	2					
ANR	5175140	PrimaryExpression	"""%04x:%04x """		5174508	0					
ANR	5175141	Argument	s		5174508	3					
ANR	5175142	Identifier	s		5174508	0					
ANR	5175143	Argument	a		5174508	4					
ANR	5175144	Identifier	a		5174508	0					
ANR	5175145	ExpressionStatement	delta = strlen ( soff ) - 10	937:5:21186:21212	5174508	4	True				
ANR	5175146	AssignmentExpression	delta = strlen ( soff ) - 10		5174508	0		=			
ANR	5175147	Identifier	delta		5174508	0					
ANR	5175148	AdditiveExpression	strlen ( soff ) - 10		5174508	1		-			
ANR	5175149	CallExpression	strlen ( soff )		5174508	0					
ANR	5175150	Callee	strlen		5174508	0					
ANR	5175151	Identifier	strlen		5174508	0					
ANR	5175152	ArgumentList	soff		5174508	1					
ANR	5175153	Argument	soff		5174508	0					
ANR	5175154	Identifier	soff		5174508	0					
ANR	5175155	PrimaryExpression	10		5174508	1					
ANR	5175156	ElseStatement	else		5174508	0					
ANR	5175157	CompoundStatement		124:11:2669:2669	5174508	0					
ANR	5175158	Statement	snprintf	939:5:21232:21239	5174508	0	True				
ANR	5175159	Statement	(	939:14:21241:21241	5174508	1	True				
ANR	5175160	Statement	soff	939:15:21242:21245	5174508	2	True				
ANR	5175161	Statement	","	939:19:21246:21246	5174508	3	True				
ANR	5175162	Statement	sizeof	939:21:21248:21253	5174508	4	True				
ANR	5175163	Statement	(	939:28:21255:21255	5174508	5	True				
ANR	5175164	Statement	soff	939:29:21256:21259	5174508	6	True				
ANR	5175165	Statement	)	939:33:21260:21260	5174508	7	True				
ANR	5175166	Statement	","	939:34:21261:21261	5174508	8	True				
ANR	5175167	Statement	"""0x%08"""	939:36:21263:21269	5174508	9	True				
ANR	5175168	Statement	PFMT64x	939:44:21271:21277	5174508	10	True				
ANR	5175169	Statement	","	939:51:21278:21278	5174508	11	True				
ANR	5175170	Statement	addr	939:53:21280:21283	5174508	12	True				
ANR	5175171	Statement	)	939:57:21284:21284	5174508	13	True				
ANR	5175172	ExpressionStatement		939:58:21285:21285	5174508	14	True				
ANR	5175173	ExpressionStatement	delta = strlen ( soff ) - 9	940:5:21292:21317	5174508	15	True				
ANR	5175174	AssignmentExpression	delta = strlen ( soff ) - 9		5174508	0		=			
ANR	5175175	Identifier	delta		5174508	0					
ANR	5175176	AdditiveExpression	strlen ( soff ) - 9		5174508	1		-			
ANR	5175177	CallExpression	strlen ( soff )		5174508	0					
ANR	5175178	Callee	strlen		5174508	0					
ANR	5175179	Identifier	strlen		5174508	0					
ANR	5175180	ArgumentList	soff		5174508	1					
ANR	5175181	Argument	soff		5174508	0					
ANR	5175182	Identifier	soff		5174508	0					
ANR	5175183	PrimaryExpression	9		5174508	1					
ANR	5175184	IfStatement	if ( compact )		5174508	4					
ANR	5175185	Condition	compact	942:8:21333:21339	5174508	0	True				
ANR	5175186	Identifier	compact		5174508	0					
ANR	5175187	CompoundStatement		128:17:2786:2786	5174508	1					
ANR	5175188	ExpressionStatement	delta --	943:5:21349:21356	5174508	0	True				
ANR	5175189	PostIncDecOperationExpression	delta --		5174508	0					
ANR	5175190	Identifier	delta		5174508	0					
ANR	5175191	IncDec	--		5174508	1					
ANR	5175192	ForStatement	for ( i = 0 ; i < delta ; i ++ )		5174508	5					
ANR	5175193	ForInit	i = 0 ;	945:9:21373:21378	5174508	0	True				
ANR	5175194	AssignmentExpression	i = 0		5174508	0		=			
ANR	5175195	Identifier	i		5174508	0					
ANR	5175196	PrimaryExpression	0		5174508	1					
ANR	5175197	Condition	i < delta	945:16:21380:21388	5174508	1	True				
ANR	5175198	RelationalExpression	i < delta		5174508	0		<			
ANR	5175199	Identifier	i		5174508	0					
ANR	5175200	Identifier	delta		5174508	1					
ANR	5175201	PostIncDecOperationExpression	i ++	945:27:21391:21393	5174508	2	True				
ANR	5175202	Identifier	i		5174508	0					
ANR	5175203	IncDec	++		5174508	1					
ANR	5175204	CompoundStatement		131:32:2840:2840	5174508	3					
ANR	5175205	ExpressionStatement	printfmt ( space )	946:5:21403:21419	5174508	0	True				
ANR	5175206	CallExpression	printfmt ( space )		5174508	0					
ANR	5175207	Callee	printfmt		5174508	0					
ANR	5175208	Identifier	printfmt		5174508	0					
ANR	5175209	ArgumentList	space		5174508	1					
ANR	5175210	Argument	space		5174508	0					
ANR	5175211	Identifier	space		5174508	0					
ANR	5175212	ExpressionStatement	"printfmt ( ( col == 1 ) ? ""|"" : space )"	950:3:21481:21514	5174508	2	True				
ANR	5175213	CallExpression	"printfmt ( ( col == 1 ) ? ""|"" : space )"		5174508	0					
ANR	5175214	Callee	printfmt		5174508	0					
ANR	5175215	Identifier	printfmt		5174508	0					
ANR	5175216	ArgumentList	"( col == 1 ) ? ""|"" : space"		5174508	1					
ANR	5175217	Argument	"( col == 1 ) ? ""|"" : space"		5174508	0					
ANR	5175218	ConditionalExpression	"( col == 1 ) ? ""|"" : space"		5174508	0					
ANR	5175219	Condition	col == 1		5174508	0					
ANR	5175220	EqualityExpression	col == 1		5174508	0		==			
ANR	5175221	Identifier	col		5174508	0					
ANR	5175222	PrimaryExpression	1		5174508	1					
ANR	5175223	PrimaryExpression	"""|"""		5174508	1					
ANR	5175224	Identifier	space		5174508	2					
ANR	5175225	ExpressionStatement	opad >>= 4	951:3:21519:21529	5174508	3	True				
ANR	5175226	AssignmentExpression	opad >>= 4		5174508	0		>>=			
ANR	5175227	Identifier	opad		5174508	0					
ANR	5175228	PrimaryExpression	4		5174508	1					
ANR	5175229	IfStatement	if ( use_hdroff )		5174508	4					
ANR	5175230	Condition	use_hdroff	952:7:21538:21547	5174508	0	True				
ANR	5175231	Identifier	use_hdroff		5174508	0					
ANR	5175232	CompoundStatement		138:20:2995:2995	5174508	1					
ANR	5175233	ExpressionStatement	k = addr & 0xf	953:4:21557:21571	5174508	0	True				
ANR	5175234	AssignmentExpression	k = addr & 0xf		5174508	0		=			
ANR	5175235	Identifier	k		5174508	0					
ANR	5175236	BitAndExpression	addr & 0xf		5174508	1		&			
ANR	5175237	Identifier	addr		5174508	0					
ANR	5175238	PrimaryExpression	0xf		5174508	1					
ANR	5175239	ExpressionStatement	K = ( addr >> 4 ) & 0xf	954:4:21577:21598	5174508	1	True				
ANR	5175240	AssignmentExpression	K = ( addr >> 4 ) & 0xf		5174508	0		=			
ANR	5175241	Identifier	K		5174508	0					
ANR	5175242	BitAndExpression	( addr >> 4 ) & 0xf		5174508	1		&			
ANR	5175243	ShiftExpression	addr >> 4		5174508	0		>>			
ANR	5175244	Identifier	addr		5174508	0					
ANR	5175245	PrimaryExpression	4		5174508	1					
ANR	5175246	PrimaryExpression	0xf		5174508	1					
ANR	5175247	ElseStatement	else		5174508	0					
ANR	5175248	CompoundStatement		141:10:3054:3054	5174508	0					
ANR	5175249	ExpressionStatement	k = 0	956:4:21616:21621	5174508	0	True				
ANR	5175250	AssignmentExpression	k = 0		5174508	0		=			
ANR	5175251	Identifier	k		5174508	0					
ANR	5175252	PrimaryExpression	0		5174508	1					
ANR	5175253	IfStatement	if ( use_hexa )		5174508	5					
ANR	5175254	Condition	use_hexa	958:7:21675:21682	5174508	0	True				
ANR	5175255	Identifier	use_hexa		5174508	0					
ANR	5175256	CompoundStatement		144:17:3129:3129	5174508	1					
ANR	5175257	ForStatement	for ( i = 0 ; i < inc ; i ++ )		5174508	0					
ANR	5175258	ForInit	i = 0 ;	960:9:21743:21748	5174508	0	True				
ANR	5175259	AssignmentExpression	i = 0		5174508	0		=			
ANR	5175260	Identifier	i		5174508	0					
ANR	5175261	PrimaryExpression	0		5174508	1					
ANR	5175262	Condition	i < inc	960:16:21750:21756	5174508	1	True				
ANR	5175263	RelationalExpression	i < inc		5174508	0		<			
ANR	5175264	Identifier	i		5174508	0					
ANR	5175265	Identifier	inc		5174508	1					
ANR	5175266	PostIncDecOperationExpression	i ++	960:25:21759:21761	5174508	2	True				
ANR	5175267	Identifier	i		5174508	0					
ANR	5175268	IncDec	++		5174508	1					
ANR	5175269	CompoundStatement		146:30:3208:3208	5174508	3					
ANR	5175270	ExpressionStatement	printfmt ( pre )	961:5:21771:21785	5174508	0	True				
ANR	5175271	CallExpression	printfmt ( pre )		5174508	0					
ANR	5175272	Callee	printfmt		5174508	0					
ANR	5175273	Identifier	printfmt		5174508	0					
ANR	5175274	ArgumentList	pre		5174508	1					
ANR	5175275	Argument	pre		5174508	0					
ANR	5175276	Identifier	pre		5174508	0					
ANR	5175277	IfStatement	if ( base < 0 )		5174508	1					
ANR	5175278	Condition	base < 0	962:9:21796:21803	5174508	0	True				
ANR	5175279	RelationalExpression	base < 0		5174508	0		<			
ANR	5175280	Identifier	base		5174508	0					
ANR	5175281	PrimaryExpression	0		5174508	1					
ANR	5175282	CompoundStatement		148:19:3250:3250	5174508	1					
ANR	5175283	IfStatement	if ( i & 1 )		5174508	0					
ANR	5175284	Condition	i & 1	963:10:21818:21822	5174508	0	True				
ANR	5175285	BitAndExpression	i & 1		5174508	0		&			
ANR	5175286	Identifier	i		5174508	0					
ANR	5175287	PrimaryExpression	1		5174508	1					
ANR	5175288	CompoundStatement		149:17:3269:3269	5174508	1					
ANR	5175289	ExpressionStatement	printfmt ( space )	964:7:21834:21850	5174508	0	True				
ANR	5175290	CallExpression	printfmt ( space )		5174508	0					
ANR	5175291	Callee	printfmt		5174508	0					
ANR	5175292	Identifier	printfmt		5174508	0					
ANR	5175293	ArgumentList	space		5174508	1					
ANR	5175294	Argument	space		5174508	0					
ANR	5175295	Identifier	space		5174508	0					
ANR	5175296	IfStatement	if ( use_hdroff )		5174508	2					
ANR	5175297	Condition	use_hdroff	967:10:21877:21886	5174508	0	True				
ANR	5175298	Identifier	use_hdroff		5174508	0					
ANR	5175299	CompoundStatement		153:22:3333:3333	5174508	1					
ANR	5175300	IfStatement	if ( use_pair )		5174508	0					
ANR	5175301	Condition	use_pair	968:10:21901:21908	5174508	0	True				
ANR	5175302	Identifier	use_pair		5174508	0					
ANR	5175303	CompoundStatement		154:20:3355:3355	5174508	1					
ANR	5175304	ExpressionStatement	"printfmt ( ""%c%c"" , hex [ ( ( ( i + k ) >> 4 ) + K ) % 16 ] , hex [ ( i + k ) % 16 ] )"	969:7:21920:22004	5174508	0	True				
ANR	5175305	CallExpression	"printfmt ( ""%c%c"" , hex [ ( ( ( i + k ) >> 4 ) + K ) % 16 ] , hex [ ( i + k ) % 16 ] )"		5174508	0					
ANR	5175306	Callee	printfmt		5174508	0					
ANR	5175307	Identifier	printfmt		5174508	0					
ANR	5175308	ArgumentList	"""%c%c"""		5174508	1					
ANR	5175309	Argument	"""%c%c"""		5174508	0					
ANR	5175310	PrimaryExpression	"""%c%c"""		5174508	0					
ANR	5175311	Argument	hex [ ( ( ( i + k ) >> 4 ) + K ) % 16 ]		5174508	1					
ANR	5175312	ArrayIndexing	hex [ ( ( ( i + k ) >> 4 ) + K ) % 16 ]		5174508	0					
ANR	5175313	Identifier	hex		5174508	0					
ANR	5175314	MultiplicativeExpression	( ( ( i + k ) >> 4 ) + K ) % 16		5174508	1		%			
ANR	5175315	AdditiveExpression	( ( i + k ) >> 4 ) + K		5174508	0		+			
ANR	5175316	ShiftExpression	( i + k ) >> 4		5174508	0		>>			
ANR	5175317	AdditiveExpression	i + k		5174508	0		+			
ANR	5175318	Identifier	i		5174508	0					
ANR	5175319	Identifier	k		5174508	1					
ANR	5175320	PrimaryExpression	4		5174508	1					
ANR	5175321	Identifier	K		5174508	1					
ANR	5175322	PrimaryExpression	16		5174508	1					
ANR	5175323	Argument	hex [ ( i + k ) % 16 ]		5174508	2					
ANR	5175324	ArrayIndexing	hex [ ( i + k ) % 16 ]		5174508	0					
ANR	5175325	Identifier	hex		5174508	0					
ANR	5175326	MultiplicativeExpression	( i + k ) % 16		5174508	1		%			
ANR	5175327	AdditiveExpression	i + k		5174508	0		+			
ANR	5175328	Identifier	i		5174508	0					
ANR	5175329	Identifier	k		5174508	1					
ANR	5175330	PrimaryExpression	16		5174508	1					
ANR	5175331	ElseStatement	else		5174508	0					
ANR	5175332	CompoundStatement		158:13:3463:3463	5174508	0					
ANR	5175333	ExpressionStatement	"printfmt ( "" %c"" , hex [ ( i + k ) % 16 ] )"	973:7:22028:22063	5174508	0	True				
ANR	5175334	CallExpression	"printfmt ( "" %c"" , hex [ ( i + k ) % 16 ] )"		5174508	0					
ANR	5175335	Callee	printfmt		5174508	0					
ANR	5175336	Identifier	printfmt		5174508	0					
ANR	5175337	ArgumentList	""" %c"""		5174508	1					
ANR	5175338	Argument	""" %c"""		5174508	0					
ANR	5175339	PrimaryExpression	""" %c"""		5174508	0					
ANR	5175340	Argument	hex [ ( i + k ) % 16 ]		5174508	1					
ANR	5175341	ArrayIndexing	hex [ ( i + k ) % 16 ]		5174508	0					
ANR	5175342	Identifier	hex		5174508	0					
ANR	5175343	MultiplicativeExpression	( i + k ) % 16		5174508	1		%			
ANR	5175344	AdditiveExpression	i + k		5174508	0		+			
ANR	5175345	Identifier	i		5174508	0					
ANR	5175346	Identifier	k		5174508	1					
ANR	5175347	PrimaryExpression	16		5174508	1					
ANR	5175348	ElseStatement	else		5174508	0					
ANR	5175349	CompoundStatement		161:12:3529:3529	5174508	0					
ANR	5175350	ExpressionStatement	"printfmt ( "" %c"" , hex [ ( i + k ) % 16 ] )"	976:6:22093:22128	5174508	0	True				
ANR	5175351	CallExpression	"printfmt ( "" %c"" , hex [ ( i + k ) % 16 ] )"		5174508	0					
ANR	5175352	Callee	printfmt		5174508	0					
ANR	5175353	Identifier	printfmt		5174508	0					
ANR	5175354	ArgumentList	""" %c"""		5174508	1					
ANR	5175355	Argument	""" %c"""		5174508	0					
ANR	5175356	PrimaryExpression	""" %c"""		5174508	0					
ANR	5175357	Argument	hex [ ( i + k ) % 16 ]		5174508	1					
ANR	5175358	ArrayIndexing	hex [ ( i + k ) % 16 ]		5174508	0					
ANR	5175359	Identifier	hex		5174508	0					
ANR	5175360	MultiplicativeExpression	( i + k ) % 16		5174508	1		%			
ANR	5175361	AdditiveExpression	i + k		5174508	0		+			
ANR	5175362	Identifier	i		5174508	0					
ANR	5175363	Identifier	k		5174508	1					
ANR	5175364	PrimaryExpression	16		5174508	1					
ANR	5175365	IfStatement	if ( i & 1 || ! pairs )		5174508	3					
ANR	5175366	Condition	i & 1 || ! pairs	978:9:22146:22160	5174508	0	True				
ANR	5175367	OrExpression	i & 1 || ! pairs		5174508	0		||			
ANR	5175368	BitAndExpression	i & 1		5174508	0		&			
ANR	5175369	Identifier	i		5174508	0					
ANR	5175370	PrimaryExpression	1		5174508	1					
ANR	5175371	UnaryOperationExpression	! pairs		5174508	1					
ANR	5175372	UnaryOperator	!		5174508	0					
ANR	5175373	Identifier	pairs		5174508	1					
ANR	5175374	CompoundStatement		164:26:3607:3607	5174508	1					
ANR	5175375	IfStatement	if ( ! compact )		5174508	0					
ANR	5175376	Condition	! compact	979:10:22175:22182	5174508	0	True				
ANR	5175377	UnaryOperationExpression	! compact		5174508	0					
ANR	5175378	UnaryOperator	!		5174508	0					
ANR	5175379	Identifier	compact		5174508	1					
ANR	5175380	CompoundStatement		165:20:3629:3629	5174508	1					
ANR	5175381	ExpressionStatement	"printfmt ( col != 1 ? space : ( ( i + 1 ) < inc ) ? space : ""|"" )"	980:7:22194:22249	5174508	0	True				
ANR	5175382	CallExpression	"printfmt ( col != 1 ? space : ( ( i + 1 ) < inc ) ? space : ""|"" )"		5174508	0					
ANR	5175383	Callee	printfmt		5174508	0					
ANR	5175384	Identifier	printfmt		5174508	0					
ANR	5175385	ArgumentList	"col != 1 ? space : ( ( i + 1 ) < inc ) ? space : ""|"""		5174508	1					
ANR	5175386	Argument	"col != 1 ? space : ( ( i + 1 ) < inc ) ? space : ""|"""		5174508	0					
ANR	5175387	ConditionalExpression	"col != 1 ? space : ( ( i + 1 ) < inc ) ? space : ""|"""		5174508	0					
ANR	5175388	Condition	col != 1		5174508	0					
ANR	5175389	EqualityExpression	col != 1		5174508	0		!=			
ANR	5175390	Identifier	col		5174508	0					
ANR	5175391	PrimaryExpression	1		5174508	1					
ANR	5175392	Identifier	space		5174508	1					
ANR	5175393	ConditionalExpression	"( ( i + 1 ) < inc ) ? space : ""|"""		5174508	2					
ANR	5175394	Condition	( i + 1 ) < inc		5174508	0					
ANR	5175395	RelationalExpression	( i + 1 ) < inc		5174508	0		<			
ANR	5175396	AdditiveExpression	i + 1		5174508	0		+			
ANR	5175397	Identifier	i		5174508	0					
ANR	5175398	PrimaryExpression	1		5174508	1					
ANR	5175399	Identifier	inc		5174508	1					
ANR	5175400	Identifier	space		5174508	1					
ANR	5175401	PrimaryExpression	"""|"""		5174508	2					
ANR	5175402	IfStatement	if ( compact )		5174508	6					
ANR	5175403	Condition	compact	986:7:22306:22312	5174508	0	True				
ANR	5175404	Identifier	compact		5174508	0					
ANR	5175405	CompoundStatement		172:16:3759:3759	5174508	1					
ANR	5175406	ExpressionStatement	"printfmt ( col > 0 ? ""|"" : space )"	987:4:22321:22351	5174508	0	True				
ANR	5175407	CallExpression	"printfmt ( col > 0 ? ""|"" : space )"		5174508	0					
ANR	5175408	Callee	printfmt		5174508	0					
ANR	5175409	Identifier	printfmt		5174508	0					
ANR	5175410	ArgumentList	"col > 0 ? ""|"" : space"		5174508	1					
ANR	5175411	Argument	"col > 0 ? ""|"" : space"		5174508	0					
ANR	5175412	ConditionalExpression	"col > 0 ? ""|"" : space"		5174508	0					
ANR	5175413	Condition	col > 0		5174508	0					
ANR	5175414	RelationalExpression	col > 0		5174508	0		>			
ANR	5175415	Identifier	col		5174508	0					
ANR	5175416	PrimaryExpression	0		5174508	1					
ANR	5175417	PrimaryExpression	"""|"""		5174508	1					
ANR	5175418	Identifier	space		5174508	2					
ANR	5175419	ElseStatement	else		5174508	0					
ANR	5175420	CompoundStatement		174:10:3807:3807	5174508	0					
ANR	5175421	ExpressionStatement	"printfmt ( col == 2 ? ""|"" : space )"	989:4:22369:22400	5174508	0	True				
ANR	5175422	CallExpression	"printfmt ( col == 2 ? ""|"" : space )"		5174508	0					
ANR	5175423	Callee	printfmt		5174508	0					
ANR	5175424	Identifier	printfmt		5174508	0					
ANR	5175425	ArgumentList	"col == 2 ? ""|"" : space"		5174508	1					
ANR	5175426	Argument	"col == 2 ? ""|"" : space"		5174508	0					
ANR	5175427	ConditionalExpression	"col == 2 ? ""|"" : space"		5174508	0					
ANR	5175428	Condition	col == 2		5174508	0					
ANR	5175429	EqualityExpression	col == 2		5174508	0		==			
ANR	5175430	Identifier	col		5174508	0					
ANR	5175431	PrimaryExpression	2		5174508	1					
ANR	5175432	PrimaryExpression	"""|"""		5174508	1					
ANR	5175433	Identifier	space		5174508	2					
ANR	5175434	IfStatement	if ( ! p || ! ( p -> flags & R_PRINT_FLAGS_NONASCII ) )		5174508	7					
ANR	5175435	Condition	! p || ! ( p -> flags & R_PRINT_FLAGS_NONASCII )	991:7:22414:22455	5174508	0	True				
ANR	5175436	OrExpression	! p || ! ( p -> flags & R_PRINT_FLAGS_NONASCII )		5174508	0		||			
ANR	5175437	UnaryOperationExpression	! p		5174508	0					
ANR	5175438	UnaryOperator	!		5174508	0					
ANR	5175439	Identifier	p		5174508	1					
ANR	5175440	UnaryOperationExpression	! ( p -> flags & R_PRINT_FLAGS_NONASCII )		5174508	1					
ANR	5175441	UnaryOperator	!		5174508	0					
ANR	5175442	BitAndExpression	p -> flags & R_PRINT_FLAGS_NONASCII		5174508	1		&			
ANR	5175443	PtrMemberAccess	p -> flags		5174508	0					
ANR	5175444	Identifier	p		5174508	0					
ANR	5175445	Identifier	flags		5174508	1					
ANR	5175446	Identifier	R_PRINT_FLAGS_NONASCII		5174508	1					
ANR	5175447	CompoundStatement		177:51:3902:3902	5174508	1					
ANR	5175448	ForStatement	for ( i = 0 ; i < inc ; i ++ )		5174508	0					
ANR	5175449	ForInit	i = 0 ;	992:9:22469:22474	5174508	0	True				
ANR	5175450	AssignmentExpression	i = 0		5174508	0		=			
ANR	5175451	Identifier	i		5174508	0					
ANR	5175452	PrimaryExpression	0		5174508	1					
ANR	5175453	Condition	i < inc	992:16:22476:22482	5174508	1	True				
ANR	5175454	RelationalExpression	i < inc		5174508	0		<			
ANR	5175455	Identifier	i		5174508	0					
ANR	5175456	Identifier	inc		5174508	1					
ANR	5175457	PostIncDecOperationExpression	i ++	992:25:22485:22487	5174508	2	True				
ANR	5175458	Identifier	i		5174508	0					
ANR	5175459	IncDec	++		5174508	1					
ANR	5175460	CompoundStatement		178:30:3934:3934	5174508	3					
ANR	5175461	ExpressionStatement	"printfmt ( ""%c"" , hex [ ( i + k ) % 16 ] )"	993:5:22497:22531	5174508	0	True				
ANR	5175462	CallExpression	"printfmt ( ""%c"" , hex [ ( i + k ) % 16 ] )"		5174508	0					
ANR	5175463	Callee	printfmt		5174508	0					
ANR	5175464	Identifier	printfmt		5174508	0					
ANR	5175465	ArgumentList	"""%c"""		5174508	1					
ANR	5175466	Argument	"""%c"""		5174508	0					
ANR	5175467	PrimaryExpression	"""%c"""		5174508	0					
ANR	5175468	Argument	hex [ ( i + k ) % 16 ]		5174508	1					
ANR	5175469	ArrayIndexing	hex [ ( i + k ) % 16 ]		5174508	0					
ANR	5175470	Identifier	hex		5174508	0					
ANR	5175471	MultiplicativeExpression	( i + k ) % 16		5174508	1		%			
ANR	5175472	AdditiveExpression	i + k		5174508	0		+			
ANR	5175473	Identifier	i		5174508	0					
ANR	5175474	Identifier	k		5174508	1					
ANR	5175475	PrimaryExpression	16		5174508	1					
ANR	5175476	IfStatement	if ( col == 2 )		5174508	8					
ANR	5175477	Condition	col == 2	996:7:22551:22558	5174508	0	True				
ANR	5175478	EqualityExpression	col == 2		5174508	0		==			
ANR	5175479	Identifier	col		5174508	0					
ANR	5175480	PrimaryExpression	2		5174508	1					
ANR	5175481	CompoundStatement		182:17:4005:4005	5174508	1					
ANR	5175482	ExpressionStatement	"printfmt ( ""|"" )"	997:4:22567:22581	5174508	0	True				
ANR	5175483	CallExpression	"printfmt ( ""|"" )"		5174508	0					
ANR	5175484	Callee	printfmt		5174508	0					
ANR	5175485	Identifier	printfmt		5174508	0					
ANR	5175486	ArgumentList	"""|"""		5174508	1					
ANR	5175487	Argument	"""|"""		5174508	0					
ANR	5175488	PrimaryExpression	"""|"""		5174508	0					
ANR	5175489	IfStatement	if ( p && p -> use_comments && ! compact )		5174508	9					
ANR	5175490	Condition	p && p -> use_comments && ! compact	1000:7:22624:22655	5174508	0	True				
ANR	5175491	AndExpression	p && p -> use_comments && ! compact		5174508	0		&&			
ANR	5175492	Identifier	p		5174508	0					
ANR	5175493	AndExpression	p -> use_comments && ! compact		5174508	1		&&			
ANR	5175494	PtrMemberAccess	p -> use_comments		5174508	0					
ANR	5175495	Identifier	p		5174508	0					
ANR	5175496	Identifier	use_comments		5174508	1					
ANR	5175497	UnaryOperationExpression	! compact		5174508	1					
ANR	5175498	UnaryOperator	!		5174508	0					
ANR	5175499	Identifier	compact		5174508	1					
ANR	5175500	CompoundStatement		186:41:4102:4102	5174508	1					
ANR	5175501	IfStatement	if ( col != 2 )		5174508	0					
ANR	5175502	Condition	col != 2	1001:8:22668:22675	5174508	0	True				
ANR	5175503	EqualityExpression	col != 2		5174508	0		!=			
ANR	5175504	Identifier	col		5174508	0					
ANR	5175505	PrimaryExpression	2		5174508	1					
ANR	5175506	CompoundStatement		187:18:4122:4122	5174508	1					
ANR	5175507	ExpressionStatement	"printfmt ( "" "" )"	1002:5:22685:22699	5174508	0	True				
ANR	5175508	CallExpression	"printfmt ( "" "" )"		5174508	0					
ANR	5175509	Callee	printfmt		5174508	0					
ANR	5175510	Identifier	printfmt		5174508	0					
ANR	5175511	ArgumentList	""" """		5174508	1					
ANR	5175512	Argument	""" """		5174508	0					
ANR	5175513	PrimaryExpression	""" """		5174508	0					
ANR	5175514	IfStatement	if ( ! hex_style )		5174508	1					
ANR	5175515	Condition	! hex_style	1004:8:22715:22724	5174508	0	True				
ANR	5175516	UnaryOperationExpression	! hex_style		5174508	0					
ANR	5175517	UnaryOperator	!		5174508	0					
ANR	5175518	Identifier	hex_style		5174508	1					
ANR	5175519	CompoundStatement		190:20:4171:4171	5174508	1					
ANR	5175520	ExpressionStatement	"printfmt ( "" comment"" )"	1005:5:22734:22755	5174508	0	True				
ANR	5175521	CallExpression	"printfmt ( "" comment"" )"		5174508	0					
ANR	5175522	Callee	printfmt		5174508	0					
ANR	5175523	Identifier	printfmt		5174508	0					
ANR	5175524	ArgumentList	""" comment"""		5174508	1					
ANR	5175525	Argument	""" comment"""		5174508	0					
ANR	5175526	PrimaryExpression	""" comment"""		5174508	0					
ANR	5175527	ExpressionStatement	"printfmt ( ""\\n"" )"	1008:3:22771:22786	5174508	10	True				
ANR	5175528	CallExpression	"printfmt ( ""\\n"" )"		5174508	0					
ANR	5175529	Callee	printfmt		5174508	0					
ANR	5175530	Identifier	printfmt		5174508	0					
ANR	5175531	ArgumentList	"""\\n"""		5174508	1					
ANR	5175532	Argument	"""\\n"""		5174508	0					
ANR	5175533	PrimaryExpression	"""\\n"""		5174508	0					
ANR	5175534	IfStatement	if ( c )		5174508	2					
ANR	5175535	Condition	c	1011:6:22799:22799	5174508	0	True				
ANR	5175536	Identifier	c		5174508	0					
ANR	5175537	CompoundStatement		197:9:4246:4246	5174508	1					
ANR	5175538	ExpressionStatement	printfmt ( Color_RESET )	1012:3:22807:22829	5174508	0	True				
ANR	5175539	CallExpression	printfmt ( Color_RESET )		5174508	0					
ANR	5175540	Callee	printfmt		5174508	0					
ANR	5175541	Identifier	printfmt		5174508	0					
ANR	5175542	ArgumentList	Color_RESET		5174508	1					
ANR	5175543	Argument	Color_RESET		5174508	0					
ANR	5175544	Identifier	Color_RESET		5174508	0					
ANR	5175545	IfStatement	if ( p )		5174508	53					
ANR	5175546	Condition	p	1016:5:22844:22844	5174508	0	True				
ANR	5175547	Identifier	p		5174508	0					
ANR	5175548	CompoundStatement		202:8:4291:4291	5174508	1					
ANR	5175549	ExpressionStatement	p -> interrupt = 0	1017:2:22851:22867	5174508	0	True				
ANR	5175550	AssignmentExpression	p -> interrupt = 0		5174508	0		=			
ANR	5175551	PtrMemberAccess	p -> interrupt		5174508	0					
ANR	5175552	Identifier	p		5174508	0					
ANR	5175553	Identifier	interrupt		5174508	1					
ANR	5175554	PrimaryExpression	0		5174508	1					
ANR	5175555	ExpressionStatement	"r_print_set_screenbounds ( p , addr )"	1020:1:22896:22930	5174508	54	True				
ANR	5175556	CallExpression	"r_print_set_screenbounds ( p , addr )"		5174508	0					
ANR	5175557	Callee	r_print_set_screenbounds		5174508	0					
ANR	5175558	Identifier	r_print_set_screenbounds		5174508	0					
ANR	5175559	ArgumentList	p		5174508	1					
ANR	5175560	Argument	p		5174508	0					
ANR	5175561	Identifier	p		5174508	0					
ANR	5175562	Argument	addr		5174508	1					
ANR	5175563	Identifier	addr		5174508	0					
ANR	5175564	IdentifierDeclStatement	int rows = 0 ;	1021:1:22933:22945	5174508	55	True				
ANR	5175565	IdentifierDecl	rows = 0		5174508	0					
ANR	5175566	IdentifierDeclType	int		5174508	0					
ANR	5175567	Identifier	rows		5174508	1					
ANR	5175568	AssignmentExpression	rows = 0		5174508	2		=			
ANR	5175569	Identifier	rows		5174508	0					
ANR	5175570	PrimaryExpression	0		5174508	1					
ANR	5175571	IdentifierDeclStatement	int bytes = 0 ;	1022:1:22948:22961	5174508	56	True				
ANR	5175572	IdentifierDecl	bytes = 0		5174508	0					
ANR	5175573	IdentifierDeclType	int		5174508	0					
ANR	5175574	Identifier	bytes		5174508	1					
ANR	5175575	AssignmentExpression	bytes = 0		5174508	2		=			
ANR	5175576	Identifier	bytes		5174508	0					
ANR	5175577	PrimaryExpression	0		5174508	1					
ANR	5175578	IdentifierDeclStatement	bool printValue = true ;	1023:1:22964:22986	5174508	57	True				
ANR	5175579	IdentifierDecl	printValue = true		5174508	0					
ANR	5175580	IdentifierDeclType	bool		5174508	0					
ANR	5175581	Identifier	printValue		5174508	1					
ANR	5175582	AssignmentExpression	printValue = true		5174508	2		=			
ANR	5175583	Identifier	true		5174508	0					
ANR	5175584	Identifier	true		5174508	1					
ANR	5175585	IdentifierDeclStatement	bool oPrintValue = true ;	1024:1:22989:23012	5174508	58	True				
ANR	5175586	IdentifierDecl	oPrintValue = true		5174508	0					
ANR	5175587	IdentifierDeclType	bool		5174508	0					
ANR	5175588	Identifier	oPrintValue		5174508	1					
ANR	5175589	AssignmentExpression	oPrintValue = true		5174508	2		=			
ANR	5175590	Identifier	true		5174508	0					
ANR	5175591	Identifier	true		5174508	1					
ANR	5175592	IdentifierDeclStatement	bool isPxr = ( p && p -> flags & R_PRINT_FLAGS_REFS ) ;	1025:1:23015:23064	5174508	59	True				
ANR	5175593	IdentifierDecl	isPxr = ( p && p -> flags & R_PRINT_FLAGS_REFS )		5174508	0					
ANR	5175594	IdentifierDeclType	bool		5174508	0					
ANR	5175595	Identifier	isPxr		5174508	1					
ANR	5175596	AssignmentExpression	isPxr = ( p && p -> flags & R_PRINT_FLAGS_REFS )		5174508	2		=			
ANR	5175597	Identifier	isPxr		5174508	0					
ANR	5175598	AndExpression	p && p -> flags & R_PRINT_FLAGS_REFS		5174508	1		&&			
ANR	5175599	Identifier	p		5174508	0					
ANR	5175600	BitAndExpression	p -> flags & R_PRINT_FLAGS_REFS		5174508	1		&			
ANR	5175601	PtrMemberAccess	p -> flags		5174508	0					
ANR	5175602	Identifier	p		5174508	0					
ANR	5175603	Identifier	flags		5174508	1					
ANR	5175604	Identifier	R_PRINT_FLAGS_REFS		5174508	1					
ANR	5175605	ForStatement	for ( i = j = 0 ; i < len ; i += ( stride ? stride : inc ) )		5174508	60					
ANR	5175606	ForInit	i = j = 0 ;	1027:6:23073:23082	5174508	0	True				
ANR	5175607	AssignmentExpression	i = j = 0		5174508	0		=			
ANR	5175608	Identifier	i		5174508	0					
ANR	5175609	AssignmentExpression	j = 0		5174508	1		=			
ANR	5175610	Identifier	j		5174508	0					
ANR	5175611	PrimaryExpression	0		5174508	1					
ANR	5175612	Condition	i < len	1027:17:23084:23090	5174508	1	True				
ANR	5175613	RelationalExpression	i < len		5174508	0		<			
ANR	5175614	Identifier	i		5174508	0					
ANR	5175615	Identifier	len		5174508	1					
ANR	5175616	AssignmentExpression	i += ( stride ? stride : inc )	1027:26:23093:23118	5174508	2	True	+=			
ANR	5175617	Identifier	i		5174508	0					
ANR	5175618	ConditionalExpression	stride ? stride : inc		5174508	1					
ANR	5175619	Condition	stride		5174508	0					
ANR	5175620	Identifier	stride		5174508	0					
ANR	5175621	Identifier	stride		5174508	1					
ANR	5175622	Identifier	inc		5174508	2					
ANR	5175623	CompoundStatement		251:2:5462:5491	5174508	3					
ANR	5175624	IfStatement	if ( p && p -> cons && p -> cons -> context && p -> cons -> context -> breaked )		5174508	0					
ANR	5175625	Condition	p && p -> cons && p -> cons -> context && p -> cons -> context -> breaked	1028:6:23129:23189	5174508	0	True				
ANR	5175626	AndExpression	p && p -> cons && p -> cons -> context && p -> cons -> context -> breaked		5174508	0		&&			
ANR	5175627	Identifier	p		5174508	0					
ANR	5175628	AndExpression	p -> cons && p -> cons -> context && p -> cons -> context -> breaked		5174508	1		&&			
ANR	5175629	PtrMemberAccess	p -> cons		5174508	0					
ANR	5175630	Identifier	p		5174508	0					
ANR	5175631	Identifier	cons		5174508	1					
ANR	5175632	AndExpression	p -> cons -> context && p -> cons -> context -> breaked		5174508	1		&&			
ANR	5175633	PtrMemberAccess	p -> cons -> context		5174508	0					
ANR	5175634	PtrMemberAccess	p -> cons		5174508	0					
ANR	5175635	Identifier	p		5174508	0					
ANR	5175636	Identifier	cons		5174508	1					
ANR	5175637	Identifier	context		5174508	1					
ANR	5175638	PtrMemberAccess	p -> cons -> context -> breaked		5174508	1					
ANR	5175639	PtrMemberAccess	p -> cons -> context		5174508	0					
ANR	5175640	PtrMemberAccess	p -> cons		5174508	0					
ANR	5175641	Identifier	p		5174508	0					
ANR	5175642	Identifier	cons		5174508	1					
ANR	5175643	Identifier	context		5174508	1					
ANR	5175644	Identifier	breaked		5174508	1					
ANR	5175645	CompoundStatement		214:69:4636:4636	5174508	1					
ANR	5175646	BreakStatement	break ;	1029:3:23197:23202	5174508	0	True				
ANR	5175647	ExpressionStatement	rowbytes = inc	1031:2:23210:23224	5174508	1	True				
ANR	5175648	AssignmentExpression	rowbytes = inc		5174508	0		=			
ANR	5175649	Identifier	rowbytes		5174508	0					
ANR	5175650	Identifier	inc		5174508	1					
ANR	5175651	IfStatement	if ( use_align )		5174508	2					
ANR	5175652	Condition	use_align	1032:6:23232:23240	5174508	0	True				
ANR	5175653	Identifier	use_align		5174508	0					
ANR	5175654	CompoundStatement		219:3:4692:4754	5174508	1					
ANR	5175655	IdentifierDeclStatement	"int sz = ( p && p -> offsize ) ? p -> offsize ( p -> user , addr + j ) : - 1 ;"	1033:3:23248:23310	5174508	0	True				
ANR	5175656	IdentifierDecl	"sz = ( p && p -> offsize ) ? p -> offsize ( p -> user , addr + j ) : - 1"		5174508	0					
ANR	5175657	IdentifierDeclType	int		5174508	0					
ANR	5175658	Identifier	sz		5174508	1					
ANR	5175659	AssignmentExpression	"sz = ( p && p -> offsize ) ? p -> offsize ( p -> user , addr + j ) : - 1"		5174508	2		=			
ANR	5175660	Identifier	sz		5174508	0					
ANR	5175661	ConditionalExpression	"( p && p -> offsize ) ? p -> offsize ( p -> user , addr + j ) : - 1"		5174508	1					
ANR	5175662	Condition	p && p -> offsize		5174508	0					
ANR	5175663	AndExpression	p && p -> offsize		5174508	0		&&			
ANR	5175664	Identifier	p		5174508	0					
ANR	5175665	PtrMemberAccess	p -> offsize		5174508	1					
ANR	5175666	Identifier	p		5174508	0					
ANR	5175667	Identifier	offsize		5174508	1					
ANR	5175668	CallExpression	"p -> offsize ( p -> user , addr + j )"		5174508	1					
ANR	5175669	Callee	p -> offsize		5174508	0					
ANR	5175670	PtrMemberAccess	p -> offsize		5174508	0					
ANR	5175671	Identifier	p		5174508	0					
ANR	5175672	Identifier	offsize		5174508	1					
ANR	5175673	ArgumentList	p -> user		5174508	1					
ANR	5175674	Argument	p -> user		5174508	0					
ANR	5175675	PtrMemberAccess	p -> user		5174508	0					
ANR	5175676	Identifier	p		5174508	0					
ANR	5175677	Identifier	user		5174508	1					
ANR	5175678	Argument	addr + j		5174508	1					
ANR	5175679	AdditiveExpression	addr + j		5174508	0		+			
ANR	5175680	Identifier	addr		5174508	0					
ANR	5175681	Identifier	j		5174508	1					
ANR	5175682	UnaryOperationExpression	- 1		5174508	2					
ANR	5175683	UnaryOperator	-		5174508	0					
ANR	5175684	PrimaryExpression	1		5174508	1					
ANR	5175685	IfStatement	if ( sz > 0 )		5174508	1					
ANR	5175686	Condition	sz > 0	1034:7:23319:23324	5174508	0	True				
ANR	5175687	RelationalExpression	sz > 0		5174508	0		>			
ANR	5175688	Identifier	sz		5174508	0					
ANR	5175689	PrimaryExpression	0		5174508	1					
ANR	5175690	CompoundStatement		220:15:4771:4771	5174508	1					
ANR	5175691	ExpressionStatement	rowbytes = sz	1035:4:23364:23377	5174508	0	True				
ANR	5175692	AssignmentExpression	rowbytes = sz		5174508	0		=			
ANR	5175693	Identifier	rowbytes		5174508	0					
ANR	5175694	Identifier	sz		5174508	1					
ANR	5175695	IfStatement	if ( use_sparse )		5174508	3					
ANR	5175696	Condition	use_sparse	1039:6:23395:23404	5174508	0	True				
ANR	5175697	Identifier	use_sparse		5174508	0					
ANR	5175698	CompoundStatement		225:18:4851:4851	5174508	1					
ANR	5175699	IfStatement	"if ( checkSparse ( buf + i , inc , sparse_char ) )"		5174508	0					
ANR	5175700	Condition	"checkSparse ( buf + i , inc , sparse_char )"	1040:7:23416:23454	5174508	0	True				
ANR	5175701	CallExpression	"checkSparse ( buf + i , inc , sparse_char )"		5174508	0					
ANR	5175702	Callee	checkSparse		5174508	0					
ANR	5175703	Identifier	checkSparse		5174508	0					
ANR	5175704	ArgumentList	buf + i		5174508	1					
ANR	5175705	Argument	buf + i		5174508	0					
ANR	5175706	AdditiveExpression	buf + i		5174508	0		+			
ANR	5175707	Identifier	buf		5174508	0					
ANR	5175708	Identifier	i		5174508	1					
ANR	5175709	Argument	inc		5174508	1					
ANR	5175710	Identifier	inc		5174508	0					
ANR	5175711	Argument	sparse_char		5174508	2					
ANR	5175712	Identifier	sparse_char		5174508	0					
ANR	5175713	CompoundStatement		226:48:4901:4901	5174508	1					
ANR	5175714	IfStatement	"if ( i + inc >= len || checkSparse ( buf + i + inc , inc , sparse_char ) )"		5174508	0					
ANR	5175715	Condition	"i + inc >= len || checkSparse ( buf + i + inc , inc , sparse_char )"	1041:8:23467:23529	5174508	0	True				
ANR	5175716	OrExpression	"i + inc >= len || checkSparse ( buf + i + inc , inc , sparse_char )"		5174508	0		||			
ANR	5175717	RelationalExpression	i + inc >= len		5174508	0		>=			
ANR	5175718	AdditiveExpression	i + inc		5174508	0		+			
ANR	5175719	Identifier	i		5174508	0					
ANR	5175720	Identifier	inc		5174508	1					
ANR	5175721	Identifier	len		5174508	1					
ANR	5175722	CallExpression	"checkSparse ( buf + i + inc , inc , sparse_char )"		5174508	1					
ANR	5175723	Callee	checkSparse		5174508	0					
ANR	5175724	Identifier	checkSparse		5174508	0					
ANR	5175725	ArgumentList	buf + i + inc		5174508	1					
ANR	5175726	Argument	buf + i + inc		5174508	0					
ANR	5175727	AdditiveExpression	buf + i + inc		5174508	0		+			
ANR	5175728	Identifier	buf		5174508	0					
ANR	5175729	AdditiveExpression	i + inc		5174508	1		+			
ANR	5175730	Identifier	i		5174508	0					
ANR	5175731	Identifier	inc		5174508	1					
ANR	5175732	Argument	inc		5174508	1					
ANR	5175733	Identifier	inc		5174508	0					
ANR	5175734	Argument	sparse_char		5174508	2					
ANR	5175735	Identifier	sparse_char		5174508	0					
ANR	5175736	CompoundStatement		227:73:4976:4976	5174508	1					
ANR	5175737	IfStatement	"if ( i + inc + inc >= len || checkSparse ( buf + i + inc + inc , inc , sparse_char ) )"		5174508	0					
ANR	5175738	Condition	"i + inc + inc >= len || checkSparse ( buf + i + inc + inc , inc , sparse_char )"	1042:9:23543:23622	5174508	0	True				
ANR	5175739	OrExpression	"i + inc + inc >= len || checkSparse ( buf + i + inc + inc , inc , sparse_char )"		5174508	0		||			
ANR	5175740	RelationalExpression	i + inc + inc >= len		5174508	0		>=			
ANR	5175741	AdditiveExpression	i + inc + inc		5174508	0		+			
ANR	5175742	Identifier	i		5174508	0					
ANR	5175743	AdditiveExpression	inc + inc		5174508	1		+			
ANR	5175744	Identifier	inc		5174508	0					
ANR	5175745	Identifier	inc		5174508	1					
ANR	5175746	Identifier	len		5174508	1					
ANR	5175747	CallExpression	"checkSparse ( buf + i + inc + inc , inc , sparse_char )"		5174508	1					
ANR	5175748	Callee	checkSparse		5174508	0					
ANR	5175749	Identifier	checkSparse		5174508	0					
ANR	5175750	ArgumentList	buf + i + inc + inc		5174508	1					
ANR	5175751	Argument	buf + i + inc + inc		5174508	0					
ANR	5175752	AdditiveExpression	buf + i + inc + inc		5174508	0		+			
ANR	5175753	Identifier	buf		5174508	0					
ANR	5175754	AdditiveExpression	i + inc + inc		5174508	1		+			
ANR	5175755	Identifier	i		5174508	0					
ANR	5175756	AdditiveExpression	inc + inc		5174508	1		+			
ANR	5175757	Identifier	inc		5174508	0					
ANR	5175758	Identifier	inc		5174508	1					
ANR	5175759	Argument	inc		5174508	1					
ANR	5175760	Identifier	inc		5174508	0					
ANR	5175761	Argument	sparse_char		5174508	2					
ANR	5175762	Identifier	sparse_char		5174508	0					
ANR	5175763	CompoundStatement		229:58:5069:5069	5174508	1					
ANR	5175764	ExpressionStatement	sparse_char = buf [ j ]	1044:6:23633:23653	5174508	0	True				
ANR	5175765	AssignmentExpression	sparse_char = buf [ j ]		5174508	0		=			
ANR	5175766	Identifier	sparse_char		5174508	0					
ANR	5175767	ArrayIndexing	buf [ j ]		5174508	1					
ANR	5175768	Identifier	buf		5174508	0					
ANR	5175769	Identifier	j		5174508	1					
ANR	5175770	ExpressionStatement	last_sparse ++	1045:6:23661:23674	5174508	1	True				
ANR	5175771	PostIncDecOperationExpression	last_sparse ++		5174508	0					
ANR	5175772	Identifier	last_sparse		5174508	0					
ANR	5175773	IncDec	++		5174508	1					
ANR	5175774	IfStatement	if ( last_sparse == 2 )		5174508	2					
ANR	5175775	Condition	last_sparse == 2	1046:10:23686:23701	5174508	0	True				
ANR	5175776	EqualityExpression	last_sparse == 2		5174508	0		==			
ANR	5175777	Identifier	last_sparse		5174508	0					
ANR	5175778	PrimaryExpression	2		5174508	1					
ANR	5175779	CompoundStatement		232:28:5148:5148	5174508	1					
ANR	5175780	ExpressionStatement	"printfmt ( "" ...\\n"" )"	1047:7:23713:23732	5174508	0	True				
ANR	5175781	CallExpression	"printfmt ( "" ...\\n"" )"		5174508	0					
ANR	5175782	Callee	printfmt		5174508	0					
ANR	5175783	Identifier	printfmt		5174508	0					
ANR	5175784	ArgumentList	""" ...\\n"""		5174508	1					
ANR	5175785	Argument	""" ...\\n"""		5174508	0					
ANR	5175786	PrimaryExpression	""" ...\\n"""		5174508	0					
ANR	5175787	ContinueStatement	continue ;	1048:7:23741:23749	5174508	1	True				
ANR	5175788	IfStatement	if ( last_sparse > 2 )		5174508	3					
ANR	5175789	Condition	last_sparse > 2	1050:10:23769:23783	5174508	0	True				
ANR	5175790	RelationalExpression	last_sparse > 2		5174508	0		>			
ANR	5175791	Identifier	last_sparse		5174508	0					
ANR	5175792	PrimaryExpression	2		5174508	1					
ANR	5175793	CompoundStatement		236:27:5230:5230	5174508	1					
ANR	5175794	ContinueStatement	continue ;	1051:7:23795:23803	5174508	0	True				
ANR	5175795	ElseStatement	else		5174508	0					
ANR	5175796	CompoundStatement		241:10:5280:5280	5174508	0					
ANR	5175797	ExpressionStatement	last_sparse = 0	1056:4:23842:23857	5174508	0	True				
ANR	5175798	AssignmentExpression	last_sparse = 0		5174508	0		=			
ANR	5175799	Identifier	last_sparse		5174508	0					
ANR	5175800	PrimaryExpression	0		5174508	1					
ANR	5175801	IdentifierDeclStatement	ut64 at = addr + ( j * zoomsz ) ;	1059:2:23870:23899	5174508	4	True				
ANR	5175802	IdentifierDecl	at = addr + ( j * zoomsz )		5174508	0					
ANR	5175803	IdentifierDeclType	ut64		5174508	0					
ANR	5175804	Identifier	at		5174508	1					
ANR	5175805	AssignmentExpression	at = addr + ( j * zoomsz )		5174508	2		=			
ANR	5175806	Identifier	at		5174508	0					
ANR	5175807	AdditiveExpression	addr + ( j * zoomsz )		5174508	1		+			
ANR	5175808	Identifier	addr		5174508	0					
ANR	5175809	MultiplicativeExpression	j * zoomsz		5174508	1		*			
ANR	5175810	Identifier	j		5174508	0					
ANR	5175811	Identifier	zoomsz		5174508	1					
ANR	5175812	IfStatement	if ( use_offset && ! isPxr )		5174508	5					
ANR	5175813	Condition	use_offset && ! isPxr	1060:6:23907:23926	5174508	0	True				
ANR	5175814	AndExpression	use_offset && ! isPxr		5174508	0		&&			
ANR	5175815	Identifier	use_offset		5174508	0					
ANR	5175816	UnaryOperationExpression	! isPxr		5174508	1					
ANR	5175817	UnaryOperator	!		5174508	0					
ANR	5175818	Identifier	isPxr		5174508	1					
ANR	5175819	CompoundStatement		246:28:5373:5373	5174508	1					
ANR	5175820	ExpressionStatement	"r_print_section ( p , at )"	1061:3:23934:23957	5174508	0	True				
ANR	5175821	CallExpression	"r_print_section ( p , at )"		5174508	0					
ANR	5175822	Callee	r_print_section		5174508	0					
ANR	5175823	Identifier	r_print_section		5174508	0					
ANR	5175824	ArgumentList	p		5174508	1					
ANR	5175825	Argument	p		5174508	0					
ANR	5175826	Identifier	p		5174508	0					
ANR	5175827	Argument	at		5174508	1					
ANR	5175828	Identifier	at		5174508	0					
ANR	5175829	ExpressionStatement	"r_print_addr ( p , at )"	1062:3:23962:23982	5174508	1	True				
ANR	5175830	CallExpression	"r_print_addr ( p , at )"		5174508	0					
ANR	5175831	Callee	r_print_addr		5174508	0					
ANR	5175832	Identifier	r_print_addr		5174508	0					
ANR	5175833	ArgumentList	p		5174508	1					
ANR	5175834	Argument	p		5174508	0					
ANR	5175835	Identifier	p		5174508	0					
ANR	5175836	Argument	at		5174508	1					
ANR	5175837	Identifier	at		5174508	0					
ANR	5175838	IdentifierDeclStatement	int row_have_cursor = - 1 ;	1064:2:23990:24014	5174508	6	True				
ANR	5175839	IdentifierDecl	row_have_cursor = - 1		5174508	0					
ANR	5175840	IdentifierDeclType	int		5174508	0					
ANR	5175841	Identifier	row_have_cursor		5174508	1					
ANR	5175842	AssignmentExpression	row_have_cursor = - 1		5174508	2		=			
ANR	5175843	Identifier	row_have_cursor		5174508	0					
ANR	5175844	UnaryOperationExpression	- 1		5174508	1					
ANR	5175845	UnaryOperator	-		5174508	0					
ANR	5175846	PrimaryExpression	1		5174508	1					
ANR	5175847	IdentifierDeclStatement	ut64 row_have_addr = UT64_MAX ;	1065:2:24018:24047	5174508	7	True				
ANR	5175848	IdentifierDecl	row_have_addr = UT64_MAX		5174508	0					
ANR	5175849	IdentifierDeclType	ut64		5174508	0					
ANR	5175850	Identifier	row_have_addr		5174508	1					
ANR	5175851	AssignmentExpression	row_have_addr = UT64_MAX		5174508	2		=			
ANR	5175852	Identifier	UT64_MAX		5174508	0					
ANR	5175853	Identifier	UT64_MAX		5174508	1					
ANR	5175854	IfStatement	if ( use_hexa )		5174508	8					
ANR	5175855	Condition	use_hexa	1066:6:24055:24062	5174508	0	True				
ANR	5175856	Identifier	use_hexa		5174508	0					
ANR	5175857	CompoundStatement		252:16:5509:5509	5174508	1					
ANR	5175858	IfStatement	if ( ! compact && ! isPxr )		5174508	0					
ANR	5175859	Condition	! compact && ! isPxr	1067:7:24074:24091	5174508	0	True				
ANR	5175860	AndExpression	! compact && ! isPxr		5174508	0		&&			
ANR	5175861	UnaryOperationExpression	! compact		5174508	0					
ANR	5175862	UnaryOperator	!		5174508	0					
ANR	5175863	Identifier	compact		5174508	1					
ANR	5175864	UnaryOperationExpression	! isPxr		5174508	1					
ANR	5175865	UnaryOperator	!		5174508	0					
ANR	5175866	Identifier	isPxr		5174508	1					
ANR	5175867	CompoundStatement		253:27:5538:5538	5174508	1					
ANR	5175868	ExpressionStatement	"printfmt ( ( col == 1 ) ? ""|"" : "" "" )"	1068:4:24100:24131	5174508	0	True				
ANR	5175869	CallExpression	"printfmt ( ( col == 1 ) ? ""|"" : "" "" )"		5174508	0					
ANR	5175870	Callee	printfmt		5174508	0					
ANR	5175871	Identifier	printfmt		5174508	0					
ANR	5175872	ArgumentList	"( col == 1 ) ? ""|"" : "" """		5174508	1					
ANR	5175873	Argument	"( col == 1 ) ? ""|"" : "" """		5174508	0					
ANR	5175874	ConditionalExpression	"( col == 1 ) ? ""|"" : "" """		5174508	0					
ANR	5175875	Condition	col == 1		5174508	0					
ANR	5175876	EqualityExpression	col == 1		5174508	0		==			
ANR	5175877	Identifier	col		5174508	0					
ANR	5175878	PrimaryExpression	1		5174508	1					
ANR	5175879	PrimaryExpression	"""|"""		5174508	1					
ANR	5175880	PrimaryExpression	""" """		5174508	2					
ANR	5175881	ForStatement	for ( j = i ; j < i + inc ; j ++ )		5174508	1					
ANR	5175882	ForInit	j = i ;	1070:8:24146:24151	5174508	0	True				
ANR	5175883	AssignmentExpression	j = i		5174508	0		=			
ANR	5175884	Identifier	j		5174508	0					
ANR	5175885	Identifier	i		5174508	1					
ANR	5175886	Condition	j < i + inc	1070:15:24153:24163	5174508	1	True				
ANR	5175887	RelationalExpression	j < i + inc		5174508	0		<			
ANR	5175888	Identifier	j		5174508	0					
ANR	5175889	AdditiveExpression	i + inc		5174508	1		+			
ANR	5175890	Identifier	i		5174508	0					
ANR	5175891	Identifier	inc		5174508	1					
ANR	5175892	PostIncDecOperationExpression	j ++	1070:28:24166:24168	5174508	2	True				
ANR	5175893	Identifier	j		5174508	0					
ANR	5175894	IncDec	++		5174508	1					
ANR	5175895	CompoundStatement		287:4:6369:6451	5174508	3					
ANR	5175896	IfStatement	if ( j != i && use_align && rowbytes == inc )		5174508	0					
ANR	5175897	Condition	j != i && use_align && rowbytes == inc	1071:8:24181:24216	5174508	0	True				
ANR	5175898	AndExpression	j != i && use_align && rowbytes == inc		5174508	0		&&			
ANR	5175899	EqualityExpression	j != i		5174508	0		!=			
ANR	5175900	Identifier	j		5174508	0					
ANR	5175901	Identifier	i		5174508	1					
ANR	5175902	AndExpression	use_align && rowbytes == inc		5174508	1		&&			
ANR	5175903	Identifier	use_align		5174508	0					
ANR	5175904	EqualityExpression	rowbytes == inc		5174508	1		==			
ANR	5175905	Identifier	rowbytes		5174508	0					
ANR	5175906	Identifier	inc		5174508	1					
ANR	5175907	CompoundStatement		258:5:5670:5709	5174508	1					
ANR	5175908	IdentifierDeclStatement	"int sz = p -> offsize ( p -> user , addr + j ) ;"	1072:5:24226:24265	5174508	0	True				
ANR	5175909	IdentifierDecl	"sz = p -> offsize ( p -> user , addr + j )"		5174508	0					
ANR	5175910	IdentifierDeclType	int		5174508	0					
ANR	5175911	Identifier	sz		5174508	1					
ANR	5175912	AssignmentExpression	"sz = p -> offsize ( p -> user , addr + j )"		5174508	2		=			
ANR	5175913	Identifier	sz		5174508	0					
ANR	5175914	CallExpression	"p -> offsize ( p -> user , addr + j )"		5174508	1					
ANR	5175915	Callee	p -> offsize		5174508	0					
ANR	5175916	PtrMemberAccess	p -> offsize		5174508	0					
ANR	5175917	Identifier	p		5174508	0					
ANR	5175918	Identifier	offsize		5174508	1					
ANR	5175919	ArgumentList	p -> user		5174508	1					
ANR	5175920	Argument	p -> user		5174508	0					
ANR	5175921	PtrMemberAccess	p -> user		5174508	0					
ANR	5175922	Identifier	p		5174508	0					
ANR	5175923	Identifier	user		5174508	1					
ANR	5175924	Argument	addr + j		5174508	1					
ANR	5175925	AdditiveExpression	addr + j		5174508	0		+			
ANR	5175926	Identifier	addr		5174508	0					
ANR	5175927	Identifier	j		5174508	1					
ANR	5175928	IfStatement	if ( sz >= 0 )		5174508	1					
ANR	5175929	Condition	sz >= 0	1073:9:24276:24282	5174508	0	True				
ANR	5175930	RelationalExpression	sz >= 0		5174508	0		>=			
ANR	5175931	Identifier	sz		5174508	0					
ANR	5175932	PrimaryExpression	0		5174508	1					
ANR	5175933	CompoundStatement		259:18:5729:5729	5174508	1					
ANR	5175934	ExpressionStatement	rowbytes = bytes	1074:6:24293:24309	5174508	0	True				
ANR	5175935	AssignmentExpression	rowbytes = bytes		5174508	0		=			
ANR	5175936	Identifier	rowbytes		5174508	0					
ANR	5175937	Identifier	bytes		5174508	1					
ANR	5175938	IfStatement	if ( row_have_cursor == - 1 )		5174508	1					
ANR	5175939	Condition	row_have_cursor == - 1	1077:8:24332:24352	5174508	0	True				
ANR	5175940	EqualityExpression	row_have_cursor == - 1		5174508	0		==			
ANR	5175941	Identifier	row_have_cursor		5174508	0					
ANR	5175942	UnaryOperationExpression	- 1		5174508	1					
ANR	5175943	UnaryOperator	-		5174508	0					
ANR	5175944	PrimaryExpression	1		5174508	1					
ANR	5175945	CompoundStatement		263:31:5799:5799	5174508	1					
ANR	5175946	IfStatement	"if ( r_print_cursor_pointer ( p , j , 1 ) )"		5174508	0					
ANR	5175947	Condition	"r_print_cursor_pointer ( p , j , 1 )"	1078:9:24366:24397	5174508	0	True				
ANR	5175948	CallExpression	"r_print_cursor_pointer ( p , j , 1 )"		5174508	0					
ANR	5175949	Callee	r_print_cursor_pointer		5174508	0					
ANR	5175950	Identifier	r_print_cursor_pointer		5174508	0					
ANR	5175951	ArgumentList	p		5174508	1					
ANR	5175952	Argument	p		5174508	0					
ANR	5175953	Identifier	p		5174508	0					
ANR	5175954	Argument	j		5174508	1					
ANR	5175955	Identifier	j		5174508	0					
ANR	5175956	Argument	1		5174508	2					
ANR	5175957	PrimaryExpression	1		5174508	0					
ANR	5175958	CompoundStatement		264:43:5844:5844	5174508	1					
ANR	5175959	ExpressionStatement	row_have_cursor = j - i	1079:6:24408:24431	5174508	0	True				
ANR	5175960	AssignmentExpression	row_have_cursor = j - i		5174508	0		=			
ANR	5175961	Identifier	row_have_cursor		5174508	0					
ANR	5175962	AdditiveExpression	j - i		5174508	1		-			
ANR	5175963	Identifier	j		5174508	0					
ANR	5175964	Identifier	i		5174508	1					
ANR	5175965	ExpressionStatement	row_have_addr = addr + j	1080:6:24439:24463	5174508	1	True				
ANR	5175966	AssignmentExpression	row_have_addr = addr + j		5174508	0		=			
ANR	5175967	Identifier	row_have_addr		5174508	0					
ANR	5175968	AdditiveExpression	addr + j		5174508	1		+			
ANR	5175969	Identifier	addr		5174508	0					
ANR	5175970	Identifier	j		5174508	1					
ANR	5175971	IfStatement	if ( ! compact && ( ( j >= len ) || bytes >= rowbytes ) )		5174508	2					
ANR	5175972	Condition	! compact && ( ( j >= len ) || bytes >= rowbytes )	1083:8:24486:24530	5174508	0	True				
ANR	5175973	AndExpression	! compact && ( ( j >= len ) || bytes >= rowbytes )		5174508	0		&&			
ANR	5175974	UnaryOperationExpression	! compact		5174508	0					
ANR	5175975	UnaryOperator	!		5174508	0					
ANR	5175976	Identifier	compact		5174508	1					
ANR	5175977	OrExpression	( j >= len ) || bytes >= rowbytes		5174508	1		||			
ANR	5175978	RelationalExpression	j >= len		5174508	0		>=			
ANR	5175979	Identifier	j		5174508	0					
ANR	5175980	Identifier	len		5174508	1					
ANR	5175981	RelationalExpression	bytes >= rowbytes		5174508	1		>=			
ANR	5175982	Identifier	bytes		5174508	0					
ANR	5175983	Identifier	rowbytes		5174508	1					
ANR	5175984	CompoundStatement		269:55:5977:5977	5174508	1					
ANR	5175985	IfStatement	if ( col == 1 )		5174508	0					
ANR	5175986	Condition	col == 1	1084:9:24544:24551	5174508	0	True				
ANR	5175987	EqualityExpression	col == 1		5174508	0		==			
ANR	5175988	Identifier	col		5174508	0					
ANR	5175989	PrimaryExpression	1		5174508	1					
ANR	5175990	CompoundStatement		270:19:5998:5998	5174508	1					
ANR	5175991	IfStatement	if ( j + 1 >= inc + i )		5174508	0					
ANR	5175992	Condition	j + 1 >= inc + i	1085:10:24566:24581	5174508	0	True				
ANR	5175993	RelationalExpression	j + 1 >= inc + i		5174508	0		>=			
ANR	5175994	AdditiveExpression	j + 1		5174508	0		+			
ANR	5175995	Identifier	j		5174508	0					
ANR	5175996	PrimaryExpression	1		5174508	1					
ANR	5175997	AdditiveExpression	inc + i		5174508	1		+			
ANR	5175998	Identifier	inc		5174508	0					
ANR	5175999	Identifier	i		5174508	1					
ANR	5176000	CompoundStatement		271:28:6028:6028	5174508	1					
ANR	5176001	ExpressionStatement	"printfmt ( j % 2 ? ""  |"" : ""| "" )"	1086:7:24593:24622	5174508	0	True				
ANR	5176002	CallExpression	"printfmt ( j % 2 ? ""  |"" : ""| "" )"		5174508	0					
ANR	5176003	Callee	printfmt		5174508	0					
ANR	5176004	Identifier	printfmt		5174508	0					
ANR	5176005	ArgumentList	"j % 2 ? ""  |"" : ""| """		5174508	1					
ANR	5176006	Argument	"j % 2 ? ""  |"" : ""| """		5174508	0					
ANR	5176007	ConditionalExpression	"j % 2 ? ""  |"" : ""| """		5174508	0					
ANR	5176008	Condition	j % 2		5174508	0					
ANR	5176009	MultiplicativeExpression	j % 2		5174508	0		%			
ANR	5176010	Identifier	j		5174508	0					
ANR	5176011	PrimaryExpression	2		5174508	1					
ANR	5176012	PrimaryExpression	"""  |"""		5174508	1					
ANR	5176013	PrimaryExpression	"""| """		5174508	2					
ANR	5176014	ElseStatement	else		5174508	0					
ANR	5176015	CompoundStatement		273:13:6081:6081	5174508	0					
ANR	5176016	ExpressionStatement	"printfmt ( j % 2 ? ""   "" : ""  "" )"	1088:7:24646:24675	5174508	0	True				
ANR	5176017	CallExpression	"printfmt ( j % 2 ? ""   "" : ""  "" )"		5174508	0					
ANR	5176018	Callee	printfmt		5174508	0					
ANR	5176019	Identifier	printfmt		5174508	0					
ANR	5176020	ArgumentList	"j % 2 ? ""   "" : ""  """		5174508	1					
ANR	5176021	Argument	"j % 2 ? ""   "" : ""  """		5174508	0					
ANR	5176022	ConditionalExpression	"j % 2 ? ""   "" : ""  """		5174508	0					
ANR	5176023	Condition	j % 2		5174508	0					
ANR	5176024	MultiplicativeExpression	j % 2		5174508	0		%			
ANR	5176025	Identifier	j		5174508	0					
ANR	5176026	PrimaryExpression	2		5174508	1					
ANR	5176027	PrimaryExpression	"""   """		5174508	1					
ANR	5176028	PrimaryExpression	"""  """		5174508	2					
ANR	5176029	ElseStatement	else		5174508	0					
ANR	5176030	CompoundStatement		276:12:6141:6141	5174508	0					
ANR	5176031	IfStatement	if ( base == 32 )		5174508	0					
ANR	5176032	Condition	base == 32	1091:10:24709:24718	5174508	0	True				
ANR	5176033	EqualityExpression	base == 32		5174508	0		==			
ANR	5176034	Identifier	base		5174508	0					
ANR	5176035	PrimaryExpression	32		5174508	1					
ANR	5176036	CompoundStatement		277:22:6165:6165	5174508	1					
ANR	5176037	ExpressionStatement	"printfmt ( ( j % 4 ) ? ""   "" : ""  "" )"	1092:7:24730:24759	5174508	0	True				
ANR	5176038	CallExpression	"printfmt ( ( j % 4 ) ? ""   "" : ""  "" )"		5174508	0					
ANR	5176039	Callee	printfmt		5174508	0					
ANR	5176040	Identifier	printfmt		5174508	0					
ANR	5176041	ArgumentList	"( j % 4 ) ? ""   "" : ""  """		5174508	1					
ANR	5176042	Argument	"( j % 4 ) ? ""   "" : ""  """		5174508	0					
ANR	5176043	ConditionalExpression	"( j % 4 ) ? ""   "" : ""  """		5174508	0					
ANR	5176044	Condition	j % 4		5174508	0					
ANR	5176045	MultiplicativeExpression	j % 4		5174508	0		%			
ANR	5176046	Identifier	j		5174508	0					
ANR	5176047	PrimaryExpression	4		5174508	1					
ANR	5176048	PrimaryExpression	"""   """		5174508	1					
ANR	5176049	PrimaryExpression	"""  """		5174508	2					
ANR	5176050	ElseStatement	else		5174508	0					
ANR	5176051	IfStatement	if ( base == 10 )		5174508	0					
ANR	5176052	Condition	base == 10	1093:17:24778:24787	5174508	0	True				
ANR	5176053	EqualityExpression	base == 10		5174508	0		==			
ANR	5176054	Identifier	base		5174508	0					
ANR	5176055	PrimaryExpression	10		5174508	1					
ANR	5176056	CompoundStatement		279:29:6234:6234	5174508	1					
ANR	5176057	ExpressionStatement	"printfmt ( j % 2 ? ""     "" : ""  "" )"	1094:7:24799:24830	5174508	0	True				
ANR	5176058	CallExpression	"printfmt ( j % 2 ? ""     "" : ""  "" )"		5174508	0					
ANR	5176059	Callee	printfmt		5174508	0					
ANR	5176060	Identifier	printfmt		5174508	0					
ANR	5176061	ArgumentList	"j % 2 ? ""     "" : ""  """		5174508	1					
ANR	5176062	Argument	"j % 2 ? ""     "" : ""  """		5174508	0					
ANR	5176063	ConditionalExpression	"j % 2 ? ""     "" : ""  """		5174508	0					
ANR	5176064	Condition	j % 2		5174508	0					
ANR	5176065	MultiplicativeExpression	j % 2		5174508	0		%			
ANR	5176066	Identifier	j		5174508	0					
ANR	5176067	PrimaryExpression	2		5174508	1					
ANR	5176068	PrimaryExpression	"""     """		5174508	1					
ANR	5176069	PrimaryExpression	"""  """		5174508	2					
ANR	5176070	ElseStatement	else		5174508	0					
ANR	5176071	CompoundStatement		281:13:6289:6289	5174508	0					
ANR	5176072	ExpressionStatement	"printfmt ( j % 2 ? ""   "" : ""  "" )"	1096:7:24854:24883	5174508	0	True				
ANR	5176073	CallExpression	"printfmt ( j % 2 ? ""   "" : ""  "" )"		5174508	0					
ANR	5176074	Callee	printfmt		5174508	0					
ANR	5176075	Identifier	printfmt		5174508	0					
ANR	5176076	ArgumentList	"j % 2 ? ""   "" : ""  """		5174508	1					
ANR	5176077	Argument	"j % 2 ? ""   "" : ""  """		5174508	0					
ANR	5176078	ConditionalExpression	"j % 2 ? ""   "" : ""  """		5174508	0					
ANR	5176079	Condition	j % 2		5174508	0					
ANR	5176080	MultiplicativeExpression	j % 2		5174508	0		%			
ANR	5176081	Identifier	j		5174508	0					
ANR	5176082	PrimaryExpression	2		5174508	1					
ANR	5176083	PrimaryExpression	"""   """		5174508	1					
ANR	5176084	PrimaryExpression	"""  """		5174508	2					
ANR	5176085	ContinueStatement	continue ;	1099:5:24905:24913	5174508	1	True				
ANR	5176086	IdentifierDeclStatement	"const char * hl = ( hex_style && p -> offname ( p -> user , addr + j ) ) ? Color_INVERT : NULL ;"	1101:4:24925:25007	5174508	3	True				
ANR	5176087	IdentifierDecl	"* hl = ( hex_style && p -> offname ( p -> user , addr + j ) ) ? Color_INVERT : NULL"		5174508	0					
ANR	5176088	IdentifierDeclType	const char *		5174508	0					
ANR	5176089	Identifier	hl		5174508	1					
ANR	5176090	AssignmentExpression	"* hl = ( hex_style && p -> offname ( p -> user , addr + j ) ) ? Color_INVERT : NULL"		5174508	2		=			
ANR	5176091	Identifier	hl		5174508	0					
ANR	5176092	ConditionalExpression	"( hex_style && p -> offname ( p -> user , addr + j ) ) ? Color_INVERT : NULL"		5174508	1					
ANR	5176093	Condition	"hex_style && p -> offname ( p -> user , addr + j )"		5174508	0					
ANR	5176094	AndExpression	"hex_style && p -> offname ( p -> user , addr + j )"		5174508	0		&&			
ANR	5176095	Identifier	hex_style		5174508	0					
ANR	5176096	CallExpression	"p -> offname ( p -> user , addr + j )"		5174508	1					
ANR	5176097	Callee	p -> offname		5174508	0					
ANR	5176098	PtrMemberAccess	p -> offname		5174508	0					
ANR	5176099	Identifier	p		5174508	0					
ANR	5176100	Identifier	offname		5174508	1					
ANR	5176101	ArgumentList	p -> user		5174508	1					
ANR	5176102	Argument	p -> user		5174508	0					
ANR	5176103	PtrMemberAccess	p -> user		5174508	0					
ANR	5176104	Identifier	p		5174508	0					
ANR	5176105	Identifier	user		5174508	1					
ANR	5176106	Argument	addr + j		5174508	1					
ANR	5176107	AdditiveExpression	addr + j		5174508	0		+			
ANR	5176108	Identifier	addr		5174508	0					
ANR	5176109	Identifier	j		5174508	1					
ANR	5176110	Identifier	Color_INVERT		5174508	1					
ANR	5176111	Identifier	NULL		5174508	2					
ANR	5176112	IfStatement	if ( hl )		5174508	4					
ANR	5176113	Condition	hl	1102:8:25017:25018	5174508	0	True				
ANR	5176114	Identifier	hl		5174508	0					
ANR	5176115	CompoundStatement		288:12:6465:6465	5174508	1					
ANR	5176116	ExpressionStatement	printfmt ( hl )	1103:5:25028:25041	5174508	0	True				
ANR	5176117	CallExpression	printfmt ( hl )		5174508	0					
ANR	5176118	Callee	printfmt		5174508	0					
ANR	5176119	Identifier	printfmt		5174508	0					
ANR	5176120	ArgumentList	hl		5174508	1					
ANR	5176121	Argument	hl		5174508	0					
ANR	5176122	Identifier	hl		5174508	0					
ANR	5176123	IfStatement	if ( p && ( base == 32 || base == 64 ) )		5174508	5					
ANR	5176124	Condition	p && ( base == 32 || base == 64 )	1105:8:25057:25087	5174508	0	True				
ANR	5176125	AndExpression	p && ( base == 32 || base == 64 )		5174508	0		&&			
ANR	5176126	Identifier	p		5174508	0					
ANR	5176127	OrExpression	base == 32 || base == 64		5174508	1		||			
ANR	5176128	EqualityExpression	base == 32		5174508	0		==			
ANR	5176129	Identifier	base		5174508	0					
ANR	5176130	PrimaryExpression	32		5174508	1					
ANR	5176131	EqualityExpression	base == 64		5174508	1		==			
ANR	5176132	Identifier	base		5174508	0					
ANR	5176133	PrimaryExpression	64		5174508	1					
ANR	5176134	CompoundStatement		323:5:7373:7393	5174508	1					
ANR	5176135	IdentifierDeclStatement	int left = len - i ;	1106:5:25097:25115	5174508	0	True				
ANR	5176136	IdentifierDecl	left = len - i		5174508	0					
ANR	5176137	IdentifierDeclType	int		5174508	0					
ANR	5176138	Identifier	left		5174508	1					
ANR	5176139	AssignmentExpression	left = len - i		5174508	2		=			
ANR	5176140	Identifier	left		5174508	0					
ANR	5176141	AdditiveExpression	len - i		5174508	1		-			
ANR	5176142	Identifier	len		5174508	0					
ANR	5176143	Identifier	i		5174508	1					
ANR	5176144	IdentifierDeclStatement	ut64 n = 0 ;	1109:5:25214:25224	5174508	1	True				
ANR	5176145	IdentifierDecl	n = 0		5174508	0					
ANR	5176146	IdentifierDeclType	ut64		5174508	0					
ANR	5176147	Identifier	n		5174508	1					
ANR	5176148	AssignmentExpression	n = 0		5174508	2		=			
ANR	5176149	Identifier	n		5174508	0					
ANR	5176150	PrimaryExpression	0		5174508	1					
ANR	5176151	IdentifierDeclStatement	size_t sz_n = ( base == 64 ) ? sizeof ( ut64 ) : ( step == 2 ) ? sizeof ( ut16 ) : sizeof ( ut32 ) ;	1110:5:25231:25332	5174508	2	True				
ANR	5176152	IdentifierDecl	sz_n = ( base == 64 ) ? sizeof ( ut64 ) : ( step == 2 ) ? sizeof ( ut16 ) : sizeof ( ut32 )		5174508	0					
ANR	5176153	IdentifierDeclType	size_t		5174508	0					
ANR	5176154	Identifier	sz_n		5174508	1					
ANR	5176155	AssignmentExpression	sz_n = ( base == 64 ) ? sizeof ( ut64 ) : ( step == 2 ) ? sizeof ( ut16 ) : sizeof ( ut32 )		5174508	2		=			
ANR	5176156	Identifier	sz_n		5174508	0					
ANR	5176157	ConditionalExpression	( base == 64 ) ? sizeof ( ut64 ) : ( step == 2 ) ? sizeof ( ut16 ) : sizeof ( ut32 )		5174508	1					
ANR	5176158	Condition	base == 64		5174508	0					
ANR	5176159	EqualityExpression	base == 64		5174508	0		==			
ANR	5176160	Identifier	base		5174508	0					
ANR	5176161	PrimaryExpression	64		5174508	1					
ANR	5176162	SizeofExpression	sizeof ( ut64 )		5174508	1					
ANR	5176163	Sizeof	sizeof		5174508	0					
ANR	5176164	SizeofOperand	ut64		5174508	1					
ANR	5176165	ConditionalExpression	( step == 2 ) ? sizeof ( ut16 ) : sizeof ( ut32 )		5174508	2					
ANR	5176166	Condition	step == 2		5174508	0					
ANR	5176167	EqualityExpression	step == 2		5174508	0		==			
ANR	5176168	Identifier	step		5174508	0					
ANR	5176169	PrimaryExpression	2		5174508	1					
ANR	5176170	SizeofExpression	sizeof ( ut16 )		5174508	1					
ANR	5176171	Sizeof	sizeof		5174508	0					
ANR	5176172	SizeofOperand	ut16		5174508	1					
ANR	5176173	SizeofExpression	sizeof ( ut32 )		5174508	2					
ANR	5176174	Sizeof	sizeof		5174508	0					
ANR	5176175	SizeofOperand	ut32		5174508	1					
ANR	5176176	ExpressionStatement	"sz_n = R_MIN ( left , sz_n )"	1113:5:25339:25364	5174508	3	True				
ANR	5176177	AssignmentExpression	"sz_n = R_MIN ( left , sz_n )"		5174508	0		=			
ANR	5176178	Identifier	sz_n		5174508	0					
ANR	5176179	CallExpression	"R_MIN ( left , sz_n )"		5174508	1					
ANR	5176180	Callee	R_MIN		5174508	0					
ANR	5176181	Identifier	R_MIN		5174508	0					
ANR	5176182	ArgumentList	left		5174508	1					
ANR	5176183	Argument	left		5174508	0					
ANR	5176184	Identifier	left		5174508	0					
ANR	5176185	Argument	sz_n		5174508	1					
ANR	5176186	Identifier	sz_n		5174508	0					
ANR	5176187	IfStatement	if ( j + sz_n > len )		5174508	4					
ANR	5176188	Condition	j + sz_n > len	1114:9:25375:25388	5174508	0	True				
ANR	5176189	RelationalExpression	j + sz_n > len		5174508	0		>			
ANR	5176190	AdditiveExpression	j + sz_n		5174508	0		+			
ANR	5176191	Identifier	j		5174508	0					
ANR	5176192	Identifier	sz_n		5174508	1					
ANR	5176193	Identifier	len		5174508	1					
ANR	5176194	CompoundStatement		300:25:6835:6835	5174508	1					
ANR	5176195	ExpressionStatement	j += sz_n	1116:6:25412:25421	5174508	0	True				
ANR	5176196	AssignmentExpression	j += sz_n		5174508	0		+=			
ANR	5176197	Identifier	j		5174508	0					
ANR	5176198	Identifier	sz_n		5174508	1					
ANR	5176199	ContinueStatement	continue ;	1117:6:25429:25437	5174508	1	True				
ANR	5176200	ExpressionStatement	"r_mem_swaporcopy ( ( ut8 * ) & n , buf + j , sz_n , p && p -> big_endian )"	1119:5:25451:25515	5174508	5	True				
ANR	5176201	CallExpression	"r_mem_swaporcopy ( ( ut8 * ) & n , buf + j , sz_n , p && p -> big_endian )"		5174508	0					
ANR	5176202	Callee	r_mem_swaporcopy		5174508	0					
ANR	5176203	Identifier	r_mem_swaporcopy		5174508	0					
ANR	5176204	ArgumentList	( ut8 * ) & n		5174508	1					
ANR	5176205	Argument	( ut8 * ) & n		5174508	0					
ANR	5176206	CastExpression	( ut8 * ) & n		5174508	0					
ANR	5176207	CastTarget	ut8 *		5174508	0					
ANR	5176208	UnaryOperationExpression	& n		5174508	1					
ANR	5176209	UnaryOperator	&		5174508	0					
ANR	5176210	Identifier	n		5174508	1					
ANR	5176211	Argument	buf + j		5174508	1					
ANR	5176212	AdditiveExpression	buf + j		5174508	0		+			
ANR	5176213	Identifier	buf		5174508	0					
ANR	5176214	Identifier	j		5174508	1					
ANR	5176215	Argument	sz_n		5174508	2					
ANR	5176216	Identifier	sz_n		5174508	0					
ANR	5176217	Argument	p && p -> big_endian		5174508	3					
ANR	5176218	AndExpression	p && p -> big_endian		5174508	0		&&			
ANR	5176219	Identifier	p		5174508	0					
ANR	5176220	PtrMemberAccess	p -> big_endian		5174508	1					
ANR	5176221	Identifier	p		5174508	0					
ANR	5176222	Identifier	big_endian		5174508	1					
ANR	5176223	ExpressionStatement	"r_print_cursor ( p , j , sz_n , 1 )"	1120:5:25522:25552	5174508	6	True				
ANR	5176224	CallExpression	"r_print_cursor ( p , j , sz_n , 1 )"		5174508	0					
ANR	5176225	Callee	r_print_cursor		5174508	0					
ANR	5176226	Identifier	r_print_cursor		5174508	0					
ANR	5176227	ArgumentList	p		5174508	1					
ANR	5176228	Argument	p		5174508	0					
ANR	5176229	Identifier	p		5174508	0					
ANR	5176230	Argument	j		5174508	1					
ANR	5176231	Identifier	j		5174508	0					
ANR	5176232	Argument	sz_n		5174508	2					
ANR	5176233	Identifier	sz_n		5174508	0					
ANR	5176234	Argument	1		5174508	3					
ANR	5176235	PrimaryExpression	1		5174508	0					
ANR	5176236	IfStatement	if ( p && p -> colorfor )		5174508	7					
ANR	5176237	Condition	p && p -> colorfor	1122:9:25587:25602	5174508	0	True				
ANR	5176238	AndExpression	p && p -> colorfor		5174508	0		&&			
ANR	5176239	Identifier	p		5174508	0					
ANR	5176240	PtrMemberAccess	p -> colorfor		5174508	1					
ANR	5176241	Identifier	p		5174508	0					
ANR	5176242	Identifier	colorfor		5174508	1					
ANR	5176243	CompoundStatement		308:27:7049:7049	5174508	1					
ANR	5176244	IfStatement	"if ( ! p -> iob . addr_is_mapped ( p -> iob . io , addr + j ) )"		5174508	0					
ANR	5176245	Condition	"! p -> iob . addr_is_mapped ( p -> iob . io , addr + j )"	1123:10:25617:25660	5174508	0	True				
ANR	5176246	UnaryOperationExpression	"! p -> iob . addr_is_mapped ( p -> iob . io , addr + j )"		5174508	0					
ANR	5176247	UnaryOperator	!		5174508	0					
ANR	5176248	CallExpression	"p -> iob . addr_is_mapped ( p -> iob . io , addr + j )"		5174508	1					
ANR	5176249	Callee	p -> iob . addr_is_mapped		5174508	0					
ANR	5176250	MemberAccess	p -> iob . addr_is_mapped		5174508	0					
ANR	5176251	PtrMemberAccess	p -> iob		5174508	0					
ANR	5176252	Identifier	p		5174508	0					
ANR	5176253	Identifier	iob		5174508	1					
ANR	5176254	Identifier	addr_is_mapped		5174508	1					
ANR	5176255	ArgumentList	p -> iob . io		5174508	1					
ANR	5176256	Argument	p -> iob . io		5174508	0					
ANR	5176257	MemberAccess	p -> iob . io		5174508	0					
ANR	5176258	PtrMemberAccess	p -> iob		5174508	0					
ANR	5176259	Identifier	p		5174508	0					
ANR	5176260	Identifier	iob		5174508	1					
ANR	5176261	Identifier	io		5174508	1					
ANR	5176262	Argument	addr + j		5174508	1					
ANR	5176263	AdditiveExpression	addr + j		5174508	0		+			
ANR	5176264	Identifier	addr		5174508	0					
ANR	5176265	Identifier	j		5174508	1					
ANR	5176266	CompoundStatement		309:56:7107:7107	5174508	1					
ANR	5176267	ExpressionStatement	a = p -> cons -> context -> pal . ai_unmap	1124:7:25672:25706	5174508	0	True				
ANR	5176268	AssignmentExpression	a = p -> cons -> context -> pal . ai_unmap		5174508	0		=			
ANR	5176269	Identifier	a		5174508	0					
ANR	5176270	MemberAccess	p -> cons -> context -> pal . ai_unmap		5174508	1					
ANR	5176271	PtrMemberAccess	p -> cons -> context -> pal		5174508	0					
ANR	5176272	PtrMemberAccess	p -> cons -> context		5174508	0					
ANR	5176273	PtrMemberAccess	p -> cons		5174508	0					
ANR	5176274	Identifier	p		5174508	0					
ANR	5176275	Identifier	cons		5174508	1					
ANR	5176276	Identifier	context		5174508	1					
ANR	5176277	Identifier	pal		5174508	1					
ANR	5176278	Identifier	ai_unmap		5174508	1					
ANR	5176279	ElseStatement	else		5174508	0					
ANR	5176280	CompoundStatement		311:13:7165:7165	5174508	0					
ANR	5176281	ExpressionStatement	"a = p -> colorfor ( p -> user , n , true )"	1126:7:25730:25764	5174508	0	True				
ANR	5176282	AssignmentExpression	"a = p -> colorfor ( p -> user , n , true )"		5174508	0		=			
ANR	5176283	Identifier	a		5174508	0					
ANR	5176284	CallExpression	"p -> colorfor ( p -> user , n , true )"		5174508	1					
ANR	5176285	Callee	p -> colorfor		5174508	0					
ANR	5176286	PtrMemberAccess	p -> colorfor		5174508	0					
ANR	5176287	Identifier	p		5174508	0					
ANR	5176288	Identifier	colorfor		5174508	1					
ANR	5176289	ArgumentList	p -> user		5174508	1					
ANR	5176290	Argument	p -> user		5174508	0					
ANR	5176291	PtrMemberAccess	p -> user		5174508	0					
ANR	5176292	Identifier	p		5174508	0					
ANR	5176293	Identifier	user		5174508	1					
ANR	5176294	Argument	n		5174508	1					
ANR	5176295	Identifier	n		5174508	0					
ANR	5176296	Argument	true		5174508	2					
ANR	5176297	Identifier	true		5174508	0					
ANR	5176298	IfStatement	if ( a && * a )		5174508	1					
ANR	5176299	Condition	a && * a	1128:10:25784:25790	5174508	0	True				
ANR	5176300	AndExpression	a && * a		5174508	0		&&			
ANR	5176301	Identifier	a		5174508	0					
ANR	5176302	UnaryOperationExpression	* a		5174508	1					
ANR	5176303	UnaryOperator	*		5174508	0					
ANR	5176304	Identifier	a		5174508	1					
ANR	5176305	CompoundStatement		314:19:7237:7237	5174508	1					
ANR	5176306	ExpressionStatement	b = Color_RESET	1129:7:25802:25817	5174508	0	True				
ANR	5176307	AssignmentExpression	b = Color_RESET		5174508	0		=			
ANR	5176308	Identifier	b		5174508	0					
ANR	5176309	Identifier	Color_RESET		5174508	1					
ANR	5176310	ElseStatement	else		5174508	0					
ANR	5176311	CompoundStatement		316:13:7276:7276	5174508	0					
ANR	5176312	ExpressionStatement	"a = b = """""	1131:7:25841:25851	5174508	0	True				
ANR	5176313	AssignmentExpression	"a = b = """""		5174508	0		=			
ANR	5176314	Identifier	a		5174508	0					
ANR	5176315	AssignmentExpression	"b = """""		5174508	1		=			
ANR	5176316	Identifier	b		5174508	0					
ANR	5176317	PrimaryExpression	""""""		5174508	1					
ANR	5176318	ElseStatement	else		5174508	0					
ANR	5176319	CompoundStatement		319:12:7317:7317	5174508	0					
ANR	5176320	ExpressionStatement	"a = b = """""	1134:6:25881:25891	5174508	0	True				
ANR	5176321	AssignmentExpression	"a = b = """""		5174508	0		=			
ANR	5176322	Identifier	a		5174508	0					
ANR	5176323	AssignmentExpression	"b = """""		5174508	1		=			
ANR	5176324	Identifier	b		5174508	0					
ANR	5176325	PrimaryExpression	""""""		5174508	1					
ANR	5176326	ExpressionStatement	printValue = true	1136:5:25905:25922	5174508	8	True				
ANR	5176327	AssignmentExpression	printValue = true		5174508	0		=			
ANR	5176328	Identifier	printValue		5174508	0					
ANR	5176329	Identifier	true		5174508	1					
ANR	5176330	IdentifierDeclStatement	bool hasNull = false ;	1137:5:25929:25949	5174508	9	True				
ANR	5176331	IdentifierDecl	hasNull = false		5174508	0					
ANR	5176332	IdentifierDeclType	bool		5174508	0					
ANR	5176333	Identifier	hasNull		5174508	1					
ANR	5176334	AssignmentExpression	hasNull = false		5174508	2		=			
ANR	5176335	Identifier	false		5174508	0					
ANR	5176336	Identifier	false		5174508	1					
ANR	5176337	IfStatement	if ( isPxr )		5174508	10					
ANR	5176338	Condition	isPxr	1138:9:25960:25964	5174508	0	True				
ANR	5176339	Identifier	isPxr		5174508	0					
ANR	5176340	CompoundStatement		324:16:7411:7411	5174508	1					
ANR	5176341	IfStatement	if ( n == 0 )		5174508	0					
ANR	5176342	Condition	n == 0	1139:10:25979:25984	5174508	0	True				
ANR	5176343	EqualityExpression	n == 0		5174508	0		==			
ANR	5176344	Identifier	n		5174508	0					
ANR	5176345	PrimaryExpression	0		5174508	1					
ANR	5176346	CompoundStatement		325:18:7431:7431	5174508	1					
ANR	5176347	IfStatement	if ( oPrintValue )		5174508	0					
ANR	5176348	Condition	oPrintValue	1140:11:26000:26010	5174508	0	True				
ANR	5176349	Identifier	oPrintValue		5174508	0					
ANR	5176350	CompoundStatement		326:24:7457:7457	5174508	1					
ANR	5176351	ExpressionStatement	hasNull = true	1141:8:26023:26037	5174508	0	True				
ANR	5176352	AssignmentExpression	hasNull = true		5174508	0		=			
ANR	5176353	Identifier	hasNull		5174508	0					
ANR	5176354	Identifier	true		5174508	1					
ANR	5176355	ExpressionStatement	printValue = false	1143:7:26055:26073	5174508	1	True				
ANR	5176356	AssignmentExpression	printValue = false		5174508	0		=			
ANR	5176357	Identifier	printValue		5174508	0					
ANR	5176358	Identifier	false		5174508	1					
ANR	5176359	IfStatement	if ( printValue )		5174508	11					
ANR	5176360	Condition	printValue	1146:9:26099:26108	5174508	0	True				
ANR	5176361	Identifier	printValue		5174508	0					
ANR	5176362	CompoundStatement		332:21:7555:7555	5174508	1					
ANR	5176363	IfStatement	if ( use_offset && ! hasNull && isPxr )		5174508	0					
ANR	5176364	Condition	use_offset && ! hasNull && isPxr	1147:10:26123:26153	5174508	0	True				
ANR	5176365	AndExpression	use_offset && ! hasNull && isPxr		5174508	0		&&			
ANR	5176366	Identifier	use_offset		5174508	0					
ANR	5176367	AndExpression	! hasNull && isPxr		5174508	1		&&			
ANR	5176368	UnaryOperationExpression	! hasNull		5174508	0					
ANR	5176369	UnaryOperator	!		5174508	0					
ANR	5176370	Identifier	hasNull		5174508	1					
ANR	5176371	Identifier	isPxr		5174508	1					
ANR	5176372	CompoundStatement		333:43:7600:7600	5174508	1					
ANR	5176373	ExpressionStatement	"r_print_section ( p , at )"	1148:7:26165:26188	5174508	0	True				
ANR	5176374	CallExpression	"r_print_section ( p , at )"		5174508	0					
ANR	5176375	Callee	r_print_section		5174508	0					
ANR	5176376	Identifier	r_print_section		5174508	0					
ANR	5176377	ArgumentList	p		5174508	1					
ANR	5176378	Argument	p		5174508	0					
ANR	5176379	Identifier	p		5174508	0					
ANR	5176380	Argument	at		5174508	1					
ANR	5176381	Identifier	at		5174508	0					
ANR	5176382	ExpressionStatement	"r_print_addr ( p , addr + j * zoomsz )"	1149:7:26197:26232	5174508	1	True				
ANR	5176383	CallExpression	"r_print_addr ( p , addr + j * zoomsz )"		5174508	0					
ANR	5176384	Callee	r_print_addr		5174508	0					
ANR	5176385	Identifier	r_print_addr		5174508	0					
ANR	5176386	ArgumentList	p		5174508	1					
ANR	5176387	Argument	p		5174508	0					
ANR	5176388	Identifier	p		5174508	0					
ANR	5176389	Argument	addr + j * zoomsz		5174508	1					
ANR	5176390	AdditiveExpression	addr + j * zoomsz		5174508	0		+			
ANR	5176391	Identifier	addr		5174508	0					
ANR	5176392	MultiplicativeExpression	j * zoomsz		5174508	1		*			
ANR	5176393	Identifier	j		5174508	0					
ANR	5176394	Identifier	zoomsz		5174508	1					
ANR	5176395	IfStatement	if ( base == 64 )		5174508	1					
ANR	5176396	Condition	base == 64	1151:10:26252:26261	5174508	0	True				
ANR	5176397	EqualityExpression	base == 64		5174508	0		==			
ANR	5176398	Identifier	base		5174508	0					
ANR	5176399	PrimaryExpression	64		5174508	1					
ANR	5176400	CompoundStatement		337:22:7708:7708	5174508	1					
ANR	5176401	Statement	printfmt	1152:7:26273:26280	5174508	0	True				
ANR	5176402	Statement	(	1152:16:26282:26282	5174508	1	True				
ANR	5176403	Statement	"""%s0x%016"""	1152:17:26283:26292	5174508	2	True				
ANR	5176404	Statement	PFMT64x	1152:28:26294:26300	5174508	3	True				
ANR	5176405	Statement	"""%s  """	1152:36:26302:26307	5174508	4	True				
ANR	5176406	Statement	","	1152:42:26308:26308	5174508	5	True				
ANR	5176407	Statement	a	1152:44:26310:26310	5174508	6	True				
ANR	5176408	Statement	","	1152:45:26311:26311	5174508	7	True				
ANR	5176409	Statement	(	1152:47:26313:26313	5174508	8	True				
ANR	5176410	Statement	ut64	1152:48:26314:26317	5174508	9	True				
ANR	5176411	Statement	)	1152:52:26318:26318	5174508	10	True				
ANR	5176412	Statement	n	1152:54:26320:26320	5174508	11	True				
ANR	5176413	Statement	","	1152:55:26321:26321	5174508	12	True				
ANR	5176414	Statement	b	1152:57:26323:26323	5174508	13	True				
ANR	5176415	Statement	)	1152:58:26324:26324	5174508	14	True				
ANR	5176416	ExpressionStatement		1152:59:26325:26325	5174508	15	True				
ANR	5176417	ElseStatement	else		5174508	0					
ANR	5176418	IfStatement	if ( step == 2 )		5174508	0					
ANR	5176419	Condition	step == 2	1153:17:26344:26352	5174508	0	True				
ANR	5176420	EqualityExpression	step == 2		5174508	0		==			
ANR	5176421	Identifier	step		5174508	0					
ANR	5176422	PrimaryExpression	2		5174508	1					
ANR	5176423	CompoundStatement		339:28:7799:7799	5174508	1					
ANR	5176424	ExpressionStatement	"printfmt ( ""%s0x%04x%s "" , a , ( ut16 ) n , b )"	1154:7:26364:26404	5174508	0	True				
ANR	5176425	CallExpression	"printfmt ( ""%s0x%04x%s "" , a , ( ut16 ) n , b )"		5174508	0					
ANR	5176426	Callee	printfmt		5174508	0					
ANR	5176427	Identifier	printfmt		5174508	0					
ANR	5176428	ArgumentList	"""%s0x%04x%s """		5174508	1					
ANR	5176429	Argument	"""%s0x%04x%s """		5174508	0					
ANR	5176430	PrimaryExpression	"""%s0x%04x%s """		5174508	0					
ANR	5176431	Argument	a		5174508	1					
ANR	5176432	Identifier	a		5174508	0					
ANR	5176433	Argument	( ut16 ) n		5174508	2					
ANR	5176434	CastExpression	( ut16 ) n		5174508	0					
ANR	5176435	CastTarget	ut16		5174508	0					
ANR	5176436	Identifier	n		5174508	1					
ANR	5176437	Argument	b		5174508	3					
ANR	5176438	Identifier	b		5174508	0					
ANR	5176439	ElseStatement	else		5174508	0					
ANR	5176440	CompoundStatement		341:13:7863:7863	5174508	0					
ANR	5176441	ExpressionStatement	"printfmt ( ""%s0x%08x%s "" , a , ( ut32 ) n , b )"	1156:7:26428:26468	5174508	0	True				
ANR	5176442	CallExpression	"printfmt ( ""%s0x%08x%s "" , a , ( ut32 ) n , b )"		5174508	0					
ANR	5176443	Callee	printfmt		5174508	0					
ANR	5176444	Identifier	printfmt		5174508	0					
ANR	5176445	ArgumentList	"""%s0x%08x%s """		5174508	1					
ANR	5176446	Argument	"""%s0x%08x%s """		5174508	0					
ANR	5176447	PrimaryExpression	"""%s0x%08x%s """		5174508	0					
ANR	5176448	Argument	a		5174508	1					
ANR	5176449	Identifier	a		5174508	0					
ANR	5176450	Argument	( ut32 ) n		5174508	2					
ANR	5176451	CastExpression	( ut32 ) n		5174508	0					
ANR	5176452	CastTarget	ut32		5174508	0					
ANR	5176453	Identifier	n		5174508	1					
ANR	5176454	Argument	b		5174508	3					
ANR	5176455	Identifier	b		5174508	0					
ANR	5176456	ElseStatement	else		5174508	0					
ANR	5176457	CompoundStatement		344:12:7934:7934	5174508	0					
ANR	5176458	IfStatement	if ( hasNull )		5174508	0					
ANR	5176459	Condition	hasNull	1159:10:26502:26508	5174508	0	True				
ANR	5176460	Identifier	hasNull		5174508	0					
ANR	5176461	CompoundStatement		346:7:7964:8010	5174508	1					
ANR	5176462	IdentifierDeclStatement	"const char * n = p -> offname ( p -> user , addr + j ) ;"	1160:7:26520:26566	5174508	0	True				
ANR	5176463	IdentifierDecl	"* n = p -> offname ( p -> user , addr + j )"		5174508	0					
ANR	5176464	IdentifierDeclType	const char *		5174508	0					
ANR	5176465	Identifier	n		5174508	1					
ANR	5176466	AssignmentExpression	"* n = p -> offname ( p -> user , addr + j )"		5174508	2		=			
ANR	5176467	Identifier	n		5174508	0					
ANR	5176468	CallExpression	"p -> offname ( p -> user , addr + j )"		5174508	1					
ANR	5176469	Callee	p -> offname		5174508	0					
ANR	5176470	PtrMemberAccess	p -> offname		5174508	0					
ANR	5176471	Identifier	p		5174508	0					
ANR	5176472	Identifier	offname		5174508	1					
ANR	5176473	ArgumentList	p -> user		5174508	1					
ANR	5176474	Argument	p -> user		5174508	0					
ANR	5176475	PtrMemberAccess	p -> user		5174508	0					
ANR	5176476	Identifier	p		5174508	0					
ANR	5176477	Identifier	user		5174508	1					
ANR	5176478	Argument	addr + j		5174508	1					
ANR	5176479	AdditiveExpression	addr + j		5174508	0		+			
ANR	5176480	Identifier	addr		5174508	0					
ANR	5176481	Identifier	j		5174508	1					
ANR	5176482	ExpressionStatement	"r_print_section ( p , at )"	1161:7:26575:26598	5174508	1	True				
ANR	5176483	CallExpression	"r_print_section ( p , at )"		5174508	0					
ANR	5176484	Callee	r_print_section		5174508	0					
ANR	5176485	Identifier	r_print_section		5174508	0					
ANR	5176486	ArgumentList	p		5174508	1					
ANR	5176487	Argument	p		5174508	0					
ANR	5176488	Identifier	p		5174508	0					
ANR	5176489	Argument	at		5174508	1					
ANR	5176490	Identifier	at		5174508	0					
ANR	5176491	ExpressionStatement	"r_print_addr ( p , addr + j * zoomsz )"	1162:7:26607:26642	5174508	2	True				
ANR	5176492	CallExpression	"r_print_addr ( p , addr + j * zoomsz )"		5174508	0					
ANR	5176493	Callee	r_print_addr		5174508	0					
ANR	5176494	Identifier	r_print_addr		5174508	0					
ANR	5176495	ArgumentList	p		5174508	1					
ANR	5176496	Argument	p		5174508	0					
ANR	5176497	Identifier	p		5174508	0					
ANR	5176498	Argument	addr + j * zoomsz		5174508	1					
ANR	5176499	AdditiveExpression	addr + j * zoomsz		5174508	0		+			
ANR	5176500	Identifier	addr		5174508	0					
ANR	5176501	MultiplicativeExpression	j * zoomsz		5174508	1		*			
ANR	5176502	Identifier	j		5174508	0					
ANR	5176503	Identifier	zoomsz		5174508	1					
ANR	5176504	ExpressionStatement	"printfmt ( ""..[ null bytes ]..   00000000 %s\\n"" , n ? n : """" )"	1163:7:26651:26708	5174508	3	True				
ANR	5176505	CallExpression	"printfmt ( ""..[ null bytes ]..   00000000 %s\\n"" , n ? n : """" )"		5174508	0					
ANR	5176506	Callee	printfmt		5174508	0					
ANR	5176507	Identifier	printfmt		5174508	0					
ANR	5176508	ArgumentList	"""..[ null bytes ]..   00000000 %s\\n"""		5174508	1					
ANR	5176509	Argument	"""..[ null bytes ]..   00000000 %s\\n"""		5174508	0					
ANR	5176510	PrimaryExpression	"""..[ null bytes ]..   00000000 %s\\n"""		5174508	0					
ANR	5176511	Argument	"n ? n : """""		5174508	1					
ANR	5176512	ConditionalExpression	"n ? n : """""		5174508	0					
ANR	5176513	Condition	n		5174508	0					
ANR	5176514	Identifier	n		5174508	0					
ANR	5176515	Identifier	n		5174508	1					
ANR	5176516	PrimaryExpression	""""""		5174508	2					
ANR	5176517	ExpressionStatement	"r_print_cursor ( p , j , sz_n , 0 )"	1166:5:26730:26760	5174508	12	True				
ANR	5176518	CallExpression	"r_print_cursor ( p , j , sz_n , 0 )"		5174508	0					
ANR	5176519	Callee	r_print_cursor		5174508	0					
ANR	5176520	Identifier	r_print_cursor		5174508	0					
ANR	5176521	ArgumentList	p		5174508	1					
ANR	5176522	Argument	p		5174508	0					
ANR	5176523	Identifier	p		5174508	0					
ANR	5176524	Argument	j		5174508	1					
ANR	5176525	Identifier	j		5174508	0					
ANR	5176526	Argument	sz_n		5174508	2					
ANR	5176527	Identifier	sz_n		5174508	0					
ANR	5176528	Argument	0		5174508	3					
ANR	5176529	PrimaryExpression	0		5174508	0					
ANR	5176530	ExpressionStatement	oPrintValue = printValue	1167:5:26767:26791	5174508	13	True				
ANR	5176531	AssignmentExpression	oPrintValue = printValue		5174508	0		=			
ANR	5176532	Identifier	oPrintValue		5174508	0					
ANR	5176533	Identifier	printValue		5174508	1					
ANR	5176534	ExpressionStatement	j += step - 1	1168:5:26798:26811	5174508	14	True				
ANR	5176535	AssignmentExpression	j += step - 1		5174508	0		+=			
ANR	5176536	Identifier	j		5174508	0					
ANR	5176537	AdditiveExpression	step - 1		5174508	1		-			
ANR	5176538	Identifier	step		5174508	0					
ANR	5176539	PrimaryExpression	1		5174508	1					
ANR	5176540	ElseStatement	else		5174508	0					
ANR	5176541	IfStatement	if ( base == - 8 )		5174508	0					
ANR	5176542	Condition	base == - 8	1169:15:26828:26837	5174508	0	True				
ANR	5176543	EqualityExpression	base == - 8		5174508	0		==			
ANR	5176544	Identifier	base		5174508	0					
ANR	5176545	UnaryOperationExpression	- 8		5174508	1					
ANR	5176546	UnaryOperator	-		5174508	0					
ANR	5176547	PrimaryExpression	8		5174508	1					
ANR	5176548	CompoundStatement		356:5:8291:8347	5174508	1					
ANR	5176549	IdentifierDeclStatement	"long long w = r_read_ble64 ( buf + j , p && p -> big_endian ) ;"	1170:5:26847:26903	5174508	0	True				
ANR	5176550	IdentifierDecl	"w = r_read_ble64 ( buf + j , p && p -> big_endian )"		5174508	0					
ANR	5176551	IdentifierDeclType	long long		5174508	0					
ANR	5176552	Identifier	w		5174508	1					
ANR	5176553	AssignmentExpression	"w = r_read_ble64 ( buf + j , p && p -> big_endian )"		5174508	2		=			
ANR	5176554	Identifier	w		5174508	0					
ANR	5176555	CallExpression	"r_read_ble64 ( buf + j , p && p -> big_endian )"		5174508	1					
ANR	5176556	Callee	r_read_ble64		5174508	0					
ANR	5176557	Identifier	r_read_ble64		5174508	0					
ANR	5176558	ArgumentList	buf + j		5174508	1					
ANR	5176559	Argument	buf + j		5174508	0					
ANR	5176560	AdditiveExpression	buf + j		5174508	0		+			
ANR	5176561	Identifier	buf		5174508	0					
ANR	5176562	Identifier	j		5174508	1					
ANR	5176563	Argument	p && p -> big_endian		5174508	1					
ANR	5176564	AndExpression	p && p -> big_endian		5174508	0		&&			
ANR	5176565	Identifier	p		5174508	0					
ANR	5176566	PtrMemberAccess	p -> big_endian		5174508	1					
ANR	5176567	Identifier	p		5174508	0					
ANR	5176568	Identifier	big_endian		5174508	1					
ANR	5176569	ExpressionStatement	"r_print_cursor ( p , j , 8 , 1 )"	1171:5:26910:26937	5174508	1	True				
ANR	5176570	CallExpression	"r_print_cursor ( p , j , 8 , 1 )"		5174508	0					
ANR	5176571	Callee	r_print_cursor		5174508	0					
ANR	5176572	Identifier	r_print_cursor		5174508	0					
ANR	5176573	ArgumentList	p		5174508	1					
ANR	5176574	Argument	p		5174508	0					
ANR	5176575	Identifier	p		5174508	0					
ANR	5176576	Argument	j		5174508	1					
ANR	5176577	Identifier	j		5174508	0					
ANR	5176578	Argument	8		5174508	2					
ANR	5176579	PrimaryExpression	8		5174508	0					
ANR	5176580	Argument	1		5174508	3					
ANR	5176581	PrimaryExpression	1		5174508	0					
ANR	5176582	Statement	printfmt	1172:5:26944:26951	5174508	2	True				
ANR	5176583	Statement	(	1172:14:26953:26953	5174508	3	True				
ANR	5176584	Statement	"""%23"""	1172:15:26954:26958	5174508	4	True				
ANR	5176585	Statement	PFMT64d	1172:21:26960:26966	5174508	5	True				
ANR	5176586	Statement	""" """	1172:29:26968:26970	5174508	6	True				
ANR	5176587	Statement	","	1172:32:26971:26971	5174508	7	True				
ANR	5176588	Statement	w	1172:34:26973:26973	5174508	8	True				
ANR	5176589	Statement	)	1172:35:26974:26974	5174508	9	True				
ANR	5176590	ExpressionStatement		1172:36:26975:26975	5174508	10	True				
ANR	5176591	ExpressionStatement	"r_print_cursor ( p , j , 8 , 0 )"	1173:5:26982:27009	5174508	11	True				
ANR	5176592	CallExpression	"r_print_cursor ( p , j , 8 , 0 )"		5174508	0					
ANR	5176593	Callee	r_print_cursor		5174508	0					
ANR	5176594	Identifier	r_print_cursor		5174508	0					
ANR	5176595	ArgumentList	p		5174508	1					
ANR	5176596	Argument	p		5174508	0					
ANR	5176597	Identifier	p		5174508	0					
ANR	5176598	Argument	j		5174508	1					
ANR	5176599	Identifier	j		5174508	0					
ANR	5176600	Argument	8		5174508	2					
ANR	5176601	PrimaryExpression	8		5174508	0					
ANR	5176602	Argument	0		5174508	3					
ANR	5176603	PrimaryExpression	0		5174508	0					
ANR	5176604	ExpressionStatement	j += 7	1174:5:27016:27022	5174508	12	True				
ANR	5176605	AssignmentExpression	j += 7		5174508	0		+=			
ANR	5176606	Identifier	j		5174508	0					
ANR	5176607	PrimaryExpression	7		5174508	1					
ANR	5176608	ElseStatement	else		5174508	0					
ANR	5176609	IfStatement	if ( base == - 1 )		5174508	0					
ANR	5176610	Condition	base == - 1	1175:15:27039:27048	5174508	0	True				
ANR	5176611	EqualityExpression	base == - 1		5174508	0		==			
ANR	5176612	Identifier	base		5174508	0					
ANR	5176613	UnaryOperationExpression	- 1		5174508	1					
ANR	5176614	UnaryOperator	-		5174508	0					
ANR	5176615	PrimaryExpression	1		5174508	1					
ANR	5176616	CompoundStatement		362:5:8502:8531	5174508	1					
ANR	5176617	IdentifierDeclStatement	st8 w = r_read_ble8 ( buf + j ) ;	1176:5:27058:27087	5174508	0	True				
ANR	5176618	IdentifierDecl	w = r_read_ble8 ( buf + j )		5174508	0					
ANR	5176619	IdentifierDeclType	st8		5174508	0					
ANR	5176620	Identifier	w		5174508	1					
ANR	5176621	AssignmentExpression	w = r_read_ble8 ( buf + j )		5174508	2		=			
ANR	5176622	Identifier	w		5174508	0					
ANR	5176623	CallExpression	r_read_ble8 ( buf + j )		5174508	1					
ANR	5176624	Callee	r_read_ble8		5174508	0					
ANR	5176625	Identifier	r_read_ble8		5174508	0					
ANR	5176626	ArgumentList	buf + j		5174508	1					
ANR	5176627	Argument	buf + j		5174508	0					
ANR	5176628	AdditiveExpression	buf + j		5174508	0		+			
ANR	5176629	Identifier	buf		5174508	0					
ANR	5176630	Identifier	j		5174508	1					
ANR	5176631	ExpressionStatement	"r_print_cursor ( p , j , 1 , 1 )"	1177:5:27094:27121	5174508	1	True				
ANR	5176632	CallExpression	"r_print_cursor ( p , j , 1 , 1 )"		5174508	0					
ANR	5176633	Callee	r_print_cursor		5174508	0					
ANR	5176634	Identifier	r_print_cursor		5174508	0					
ANR	5176635	ArgumentList	p		5174508	1					
ANR	5176636	Argument	p		5174508	0					
ANR	5176637	Identifier	p		5174508	0					
ANR	5176638	Argument	j		5174508	1					
ANR	5176639	Identifier	j		5174508	0					
ANR	5176640	Argument	1		5174508	2					
ANR	5176641	PrimaryExpression	1		5174508	0					
ANR	5176642	Argument	1		5174508	3					
ANR	5176643	PrimaryExpression	1		5174508	0					
ANR	5176644	ExpressionStatement	"printfmt ( ""%4d "" , w )"	1178:5:27128:27148	5174508	2	True				
ANR	5176645	CallExpression	"printfmt ( ""%4d "" , w )"		5174508	0					
ANR	5176646	Callee	printfmt		5174508	0					
ANR	5176647	Identifier	printfmt		5174508	0					
ANR	5176648	ArgumentList	"""%4d """		5174508	1					
ANR	5176649	Argument	"""%4d """		5174508	0					
ANR	5176650	PrimaryExpression	"""%4d """		5174508	0					
ANR	5176651	Argument	w		5174508	1					
ANR	5176652	Identifier	w		5174508	0					
ANR	5176653	ExpressionStatement	"r_print_cursor ( p , j , 1 , 0 )"	1179:5:27155:27182	5174508	3	True				
ANR	5176654	CallExpression	"r_print_cursor ( p , j , 1 , 0 )"		5174508	0					
ANR	5176655	Callee	r_print_cursor		5174508	0					
ANR	5176656	Identifier	r_print_cursor		5174508	0					
ANR	5176657	ArgumentList	p		5174508	1					
ANR	5176658	Argument	p		5174508	0					
ANR	5176659	Identifier	p		5174508	0					
ANR	5176660	Argument	j		5174508	1					
ANR	5176661	Identifier	j		5174508	0					
ANR	5176662	Argument	1		5174508	2					
ANR	5176663	PrimaryExpression	1		5174508	0					
ANR	5176664	Argument	0		5174508	3					
ANR	5176665	PrimaryExpression	0		5174508	0					
ANR	5176666	ElseStatement	else		5174508	0					
ANR	5176667	IfStatement	if ( base == - 10 )		5174508	0					
ANR	5176668	Condition	base == - 10	1180:15:27199:27209	5174508	0	True				
ANR	5176669	EqualityExpression	base == - 10		5174508	0		==			
ANR	5176670	Identifier	base		5174508	0					
ANR	5176671	UnaryOperationExpression	- 10		5174508	1					
ANR	5176672	UnaryOperator	-		5174508	0					
ANR	5176673	PrimaryExpression	10		5174508	1					
ANR	5176674	CompoundStatement		366:28:8656:8656	5174508	1					
ANR	5176675	IfStatement	if ( j + 1 < len )		5174508	0					
ANR	5176676	Condition	j + 1 < len	1181:9:27223:27233	5174508	0	True				
ANR	5176677	RelationalExpression	j + 1 < len		5174508	0		<			
ANR	5176678	AdditiveExpression	j + 1		5174508	0		+			
ANR	5176679	Identifier	j		5174508	0					
ANR	5176680	PrimaryExpression	1		5174508	1					
ANR	5176681	Identifier	len		5174508	1					
ANR	5176682	CompoundStatement		368:6:8688:8739	5174508	1					
ANR	5176683	IdentifierDeclStatement	"st16 w = r_read_ble16 ( buf + j , p && p -> big_endian ) ;"	1182:6:27244:27295	5174508	0	True				
ANR	5176684	IdentifierDecl	"w = r_read_ble16 ( buf + j , p && p -> big_endian )"		5174508	0					
ANR	5176685	IdentifierDeclType	st16		5174508	0					
ANR	5176686	Identifier	w		5174508	1					
ANR	5176687	AssignmentExpression	"w = r_read_ble16 ( buf + j , p && p -> big_endian )"		5174508	2		=			
ANR	5176688	Identifier	w		5174508	0					
ANR	5176689	CallExpression	"r_read_ble16 ( buf + j , p && p -> big_endian )"		5174508	1					
ANR	5176690	Callee	r_read_ble16		5174508	0					
ANR	5176691	Identifier	r_read_ble16		5174508	0					
ANR	5176692	ArgumentList	buf + j		5174508	1					
ANR	5176693	Argument	buf + j		5174508	0					
ANR	5176694	AdditiveExpression	buf + j		5174508	0		+			
ANR	5176695	Identifier	buf		5174508	0					
ANR	5176696	Identifier	j		5174508	1					
ANR	5176697	Argument	p && p -> big_endian		5174508	1					
ANR	5176698	AndExpression	p && p -> big_endian		5174508	0		&&			
ANR	5176699	Identifier	p		5174508	0					
ANR	5176700	PtrMemberAccess	p -> big_endian		5174508	1					
ANR	5176701	Identifier	p		5174508	0					
ANR	5176702	Identifier	big_endian		5174508	1					
ANR	5176703	ExpressionStatement	"r_print_cursor ( p , j , 2 , 1 )"	1183:6:27303:27330	5174508	1	True				
ANR	5176704	CallExpression	"r_print_cursor ( p , j , 2 , 1 )"		5174508	0					
ANR	5176705	Callee	r_print_cursor		5174508	0					
ANR	5176706	Identifier	r_print_cursor		5174508	0					
ANR	5176707	ArgumentList	p		5174508	1					
ANR	5176708	Argument	p		5174508	0					
ANR	5176709	Identifier	p		5174508	0					
ANR	5176710	Argument	j		5174508	1					
ANR	5176711	Identifier	j		5174508	0					
ANR	5176712	Argument	2		5174508	2					
ANR	5176713	PrimaryExpression	2		5174508	0					
ANR	5176714	Argument	1		5174508	3					
ANR	5176715	PrimaryExpression	1		5174508	0					
ANR	5176716	ExpressionStatement	"printfmt ( ""%7d "" , w )"	1184:6:27338:27358	5174508	2	True				
ANR	5176717	CallExpression	"printfmt ( ""%7d "" , w )"		5174508	0					
ANR	5176718	Callee	printfmt		5174508	0					
ANR	5176719	Identifier	printfmt		5174508	0					
ANR	5176720	ArgumentList	"""%7d """		5174508	1					
ANR	5176721	Argument	"""%7d """		5174508	0					
ANR	5176722	PrimaryExpression	"""%7d """		5174508	0					
ANR	5176723	Argument	w		5174508	1					
ANR	5176724	Identifier	w		5174508	0					
ANR	5176725	ExpressionStatement	"r_print_cursor ( p , j , 2 , 0 )"	1185:6:27366:27393	5174508	3	True				
ANR	5176726	CallExpression	"r_print_cursor ( p , j , 2 , 0 )"		5174508	0					
ANR	5176727	Callee	r_print_cursor		5174508	0					
ANR	5176728	Identifier	r_print_cursor		5174508	0					
ANR	5176729	ArgumentList	p		5174508	1					
ANR	5176730	Argument	p		5174508	0					
ANR	5176731	Identifier	p		5174508	0					
ANR	5176732	Argument	j		5174508	1					
ANR	5176733	Identifier	j		5174508	0					
ANR	5176734	Argument	2		5174508	2					
ANR	5176735	PrimaryExpression	2		5174508	0					
ANR	5176736	Argument	0		5174508	3					
ANR	5176737	PrimaryExpression	0		5174508	0					
ANR	5176738	ExpressionStatement	j += 1	1187:5:27407:27413	5174508	1	True				
ANR	5176739	AssignmentExpression	j += 1		5174508	0		+=			
ANR	5176740	Identifier	j		5174508	0					
ANR	5176741	PrimaryExpression	1		5174508	1					
ANR	5176742	ElseStatement	else		5174508	0					
ANR	5176743	IfStatement	if ( base == 10 )		5174508	0					
ANR	5176744	Condition	base == 10	1188:15:27430:27439	5174508	0	True				
ANR	5176745	EqualityExpression	base == 10		5174508	0		==			
ANR	5176746	Identifier	base		5174508	0					
ANR	5176747	PrimaryExpression	10		5174508	1					
ANR	5176748	CompoundStatement		374:27:8886:8886	5174508	1					
ANR	5176749	IfStatement	if ( j + 3 < len )		5174508	0					
ANR	5176750	Condition	j + 3 < len	1189:9:27462:27472	5174508	0	True				
ANR	5176751	RelationalExpression	j + 3 < len		5174508	0		<			
ANR	5176752	AdditiveExpression	j + 3		5174508	0		+			
ANR	5176753	Identifier	j		5174508	0					
ANR	5176754	PrimaryExpression	3		5174508	1					
ANR	5176755	Identifier	len		5174508	1					
ANR	5176756	CompoundStatement		376:6:8927:8977	5174508	1					
ANR	5176757	IdentifierDeclStatement	"int w = r_read_ble32 ( buf + j , p && p -> big_endian ) ;"	1190:6:27483:27533	5174508	0	True				
ANR	5176758	IdentifierDecl	"w = r_read_ble32 ( buf + j , p && p -> big_endian )"		5174508	0					
ANR	5176759	IdentifierDeclType	int		5174508	0					
ANR	5176760	Identifier	w		5174508	1					
ANR	5176761	AssignmentExpression	"w = r_read_ble32 ( buf + j , p && p -> big_endian )"		5174508	2		=			
ANR	5176762	Identifier	w		5174508	0					
ANR	5176763	CallExpression	"r_read_ble32 ( buf + j , p && p -> big_endian )"		5174508	1					
ANR	5176764	Callee	r_read_ble32		5174508	0					
ANR	5176765	Identifier	r_read_ble32		5174508	0					
ANR	5176766	ArgumentList	buf + j		5174508	1					
ANR	5176767	Argument	buf + j		5174508	0					
ANR	5176768	AdditiveExpression	buf + j		5174508	0		+			
ANR	5176769	Identifier	buf		5174508	0					
ANR	5176770	Identifier	j		5174508	1					
ANR	5176771	Argument	p && p -> big_endian		5174508	1					
ANR	5176772	AndExpression	p && p -> big_endian		5174508	0		&&			
ANR	5176773	Identifier	p		5174508	0					
ANR	5176774	PtrMemberAccess	p -> big_endian		5174508	1					
ANR	5176775	Identifier	p		5174508	0					
ANR	5176776	Identifier	big_endian		5174508	1					
ANR	5176777	ExpressionStatement	"r_print_cursor ( p , j , 4 , 1 )"	1191:6:27541:27568	5174508	1	True				
ANR	5176778	CallExpression	"r_print_cursor ( p , j , 4 , 1 )"		5174508	0					
ANR	5176779	Callee	r_print_cursor		5174508	0					
ANR	5176780	Identifier	r_print_cursor		5174508	0					
ANR	5176781	ArgumentList	p		5174508	1					
ANR	5176782	Argument	p		5174508	0					
ANR	5176783	Identifier	p		5174508	0					
ANR	5176784	Argument	j		5174508	1					
ANR	5176785	Identifier	j		5174508	0					
ANR	5176786	Argument	4		5174508	2					
ANR	5176787	PrimaryExpression	4		5174508	0					
ANR	5176788	Argument	1		5174508	3					
ANR	5176789	PrimaryExpression	1		5174508	0					
ANR	5176790	ExpressionStatement	"printfmt ( ""%13d "" , w )"	1192:6:27576:27597	5174508	2	True				
ANR	5176791	CallExpression	"printfmt ( ""%13d "" , w )"		5174508	0					
ANR	5176792	Callee	printfmt		5174508	0					
ANR	5176793	Identifier	printfmt		5174508	0					
ANR	5176794	ArgumentList	"""%13d """		5174508	1					
ANR	5176795	Argument	"""%13d """		5174508	0					
ANR	5176796	PrimaryExpression	"""%13d """		5174508	0					
ANR	5176797	Argument	w		5174508	1					
ANR	5176798	Identifier	w		5174508	0					
ANR	5176799	ExpressionStatement	"r_print_cursor ( p , j , 4 , 0 )"	1193:6:27605:27632	5174508	3	True				
ANR	5176800	CallExpression	"r_print_cursor ( p , j , 4 , 0 )"		5174508	0					
ANR	5176801	Callee	r_print_cursor		5174508	0					
ANR	5176802	Identifier	r_print_cursor		5174508	0					
ANR	5176803	ArgumentList	p		5174508	1					
ANR	5176804	Argument	p		5174508	0					
ANR	5176805	Identifier	p		5174508	0					
ANR	5176806	Argument	j		5174508	1					
ANR	5176807	Identifier	j		5174508	0					
ANR	5176808	Argument	4		5174508	2					
ANR	5176809	PrimaryExpression	4		5174508	0					
ANR	5176810	Argument	0		5174508	3					
ANR	5176811	PrimaryExpression	0		5174508	0					
ANR	5176812	ExpressionStatement	j += 3	1195:5:27646:27652	5174508	1	True				
ANR	5176813	AssignmentExpression	j += 3		5174508	0		+=			
ANR	5176814	Identifier	j		5174508	0					
ANR	5176815	PrimaryExpression	3		5174508	1					
ANR	5176816	ElseStatement	else		5174508	0					
ANR	5176817	CompoundStatement		382:11:9109:9109	5174508	0					
ANR	5176818	IfStatement	if ( j >= len )		5174508	0					
ANR	5176819	Condition	j >= len	1197:9:27676:27683	5174508	0	True				
ANR	5176820	RelationalExpression	j >= len		5174508	0		>=			
ANR	5176821	Identifier	j		5174508	0					
ANR	5176822	Identifier	len		5174508	1					
ANR	5176823	CompoundStatement		383:19:9130:9130	5174508	1					
ANR	5176824	BreakStatement	break ;	1198:6:27694:27699	5174508	0	True				
ANR	5176825	IfStatement	"if ( use_unalloc && ! p -> iob . is_valid_offset ( p -> iob . io , addr + j , false ) )"		5174508	1					
ANR	5176826	Condition	"use_unalloc && ! p -> iob . is_valid_offset ( p -> iob . io , addr + j , false )"	1200:9:27717:27783	5174508	0	True				
ANR	5176827	AndExpression	"use_unalloc && ! p -> iob . is_valid_offset ( p -> iob . io , addr + j , false )"		5174508	0		&&			
ANR	5176828	Identifier	use_unalloc		5174508	0					
ANR	5176829	UnaryOperationExpression	"! p -> iob . is_valid_offset ( p -> iob . io , addr + j , false )"		5174508	1					
ANR	5176830	UnaryOperator	!		5174508	0					
ANR	5176831	CallExpression	"p -> iob . is_valid_offset ( p -> iob . io , addr + j , false )"		5174508	1					
ANR	5176832	Callee	p -> iob . is_valid_offset		5174508	0					
ANR	5176833	MemberAccess	p -> iob . is_valid_offset		5174508	0					
ANR	5176834	PtrMemberAccess	p -> iob		5174508	0					
ANR	5176835	Identifier	p		5174508	0					
ANR	5176836	Identifier	iob		5174508	1					
ANR	5176837	Identifier	is_valid_offset		5174508	1					
ANR	5176838	ArgumentList	p -> iob . io		5174508	1					
ANR	5176839	Argument	p -> iob . io		5174508	0					
ANR	5176840	MemberAccess	p -> iob . io		5174508	0					
ANR	5176841	PtrMemberAccess	p -> iob		5174508	0					
ANR	5176842	Identifier	p		5174508	0					
ANR	5176843	Identifier	iob		5174508	1					
ANR	5176844	Identifier	io		5174508	1					
ANR	5176845	Argument	addr + j		5174508	1					
ANR	5176846	AdditiveExpression	addr + j		5174508	0		+			
ANR	5176847	Identifier	addr		5174508	0					
ANR	5176848	Identifier	j		5174508	1					
ANR	5176849	Argument	false		5174508	2					
ANR	5176850	Identifier	false		5174508	0					
ANR	5176851	CompoundStatement		388:6:9272:9305	5174508	1					
ANR	5176852	IdentifierDeclStatement	char ch = p -> io_unalloc_ch ;	1201:6:27794:27820	5174508	0	True				
ANR	5176853	IdentifierDecl	ch = p -> io_unalloc_ch		5174508	0					
ANR	5176854	IdentifierDeclType	char		5174508	0					
ANR	5176855	Identifier	ch		5174508	1					
ANR	5176856	AssignmentExpression	ch = p -> io_unalloc_ch		5174508	2		=			
ANR	5176857	Identifier	ch		5174508	0					
ANR	5176858	PtrMemberAccess	p -> io_unalloc_ch		5174508	1					
ANR	5176859	Identifier	p		5174508	0					
ANR	5176860	Identifier	io_unalloc_ch		5174508	1					
ANR	5176861	IdentifierDeclStatement	"char dbl_ch_str [ ] = { ch , ch , 0 } ;"	1202:6:27828:27861	5174508	1	True				
ANR	5176862	IdentifierDecl	"dbl_ch_str [ ] = { ch , ch , 0 }"		5174508	0					
ANR	5176863	IdentifierDeclType	char [ ]		5174508	0					
ANR	5176864	Identifier	dbl_ch_str		5174508	1					
ANR	5176865	AssignmentExpression	"dbl_ch_str [ ] = { ch , ch , 0 }"		5174508	2		=			
ANR	5176866	Identifier	dbl_ch_str		5174508	0					
ANR	5176867	InitializerList	ch		5174508	1					
ANR	5176868	Identifier	ch		5174508	0					
ANR	5176869	Identifier	ch		5174508	1					
ANR	5176870	PrimaryExpression	0		5174508	2					
ANR	5176871	ExpressionStatement	p -> cb_printf ( dbl_ch_str )	1203:6:27869:27894	5174508	2	True				
ANR	5176872	CallExpression	p -> cb_printf ( dbl_ch_str )		5174508	0					
ANR	5176873	Callee	p -> cb_printf		5174508	0					
ANR	5176874	PtrMemberAccess	p -> cb_printf		5174508	0					
ANR	5176875	Identifier	p		5174508	0					
ANR	5176876	Identifier	cb_printf		5174508	1					
ANR	5176877	ArgumentList	dbl_ch_str		5174508	1					
ANR	5176878	Argument	dbl_ch_str		5174508	0					
ANR	5176879	Identifier	dbl_ch_str		5174508	0					
ANR	5176880	ElseStatement	else		5174508	0					
ANR	5176881	CompoundStatement		390:12:9352:9352	5174508	0					
ANR	5176882	ExpressionStatement	"r_print_byte ( p , bytefmt , j , buf [ j ] )"	1205:6:27916:27952	5174508	0	True				
ANR	5176883	CallExpression	"r_print_byte ( p , bytefmt , j , buf [ j ] )"		5174508	0					
ANR	5176884	Callee	r_print_byte		5174508	0					
ANR	5176885	Identifier	r_print_byte		5174508	0					
ANR	5176886	ArgumentList	p		5174508	1					
ANR	5176887	Argument	p		5174508	0					
ANR	5176888	Identifier	p		5174508	0					
ANR	5176889	Argument	bytefmt		5174508	1					
ANR	5176890	Identifier	bytefmt		5174508	0					
ANR	5176891	Argument	j		5174508	2					
ANR	5176892	Identifier	j		5174508	0					
ANR	5176893	Argument	buf [ j ]		5174508	3					
ANR	5176894	ArrayIndexing	buf [ j ]		5174508	0					
ANR	5176895	Identifier	buf		5174508	0					
ANR	5176896	Identifier	j		5174508	1					
ANR	5176897	IfStatement	if ( pairs && ! compact && ( inc & 1 ) )		5174508	2					
ANR	5176898	Condition	pairs && ! compact && ( inc & 1 )	1207:9:27970:27999	5174508	0	True				
ANR	5176899	AndExpression	pairs && ! compact && ( inc & 1 )		5174508	0		&&			
ANR	5176900	Identifier	pairs		5174508	0					
ANR	5176901	AndExpression	! compact && ( inc & 1 )		5174508	1		&&			
ANR	5176902	UnaryOperationExpression	! compact		5174508	0					
ANR	5176903	UnaryOperator	!		5174508	0					
ANR	5176904	Identifier	compact		5174508	1					
ANR	5176905	BitAndExpression	inc & 1		5174508	1		&			
ANR	5176906	Identifier	inc		5174508	0					
ANR	5176907	PrimaryExpression	1		5174508	1					
ANR	5176908	CompoundStatement		394:6:9454:9498	5174508	1					
ANR	5176909	IdentifierDeclStatement	bool mustspace = ( rows % 2 ) ? ! ( j & 1 ) : ( j & 1 ) ;	1208:6:28010:28054	5174508	0	True				
ANR	5176910	IdentifierDecl	mustspace = ( rows % 2 ) ? ! ( j & 1 ) : ( j & 1 )		5174508	0					
ANR	5176911	IdentifierDeclType	bool		5174508	0					
ANR	5176912	Identifier	mustspace		5174508	1					
ANR	5176913	AssignmentExpression	mustspace = ( rows % 2 ) ? ! ( j & 1 ) : ( j & 1 )		5174508	2		=			
ANR	5176914	Identifier	mustspace		5174508	0					
ANR	5176915	ConditionalExpression	( rows % 2 ) ? ! ( j & 1 ) : ( j & 1 )		5174508	1					
ANR	5176916	Condition	rows % 2		5174508	0					
ANR	5176917	MultiplicativeExpression	rows % 2		5174508	0		%			
ANR	5176918	Identifier	rows		5174508	0					
ANR	5176919	PrimaryExpression	2		5174508	1					
ANR	5176920	UnaryOperationExpression	! ( j & 1 )		5174508	1					
ANR	5176921	UnaryOperator	!		5174508	0					
ANR	5176922	BitAndExpression	j & 1		5174508	1		&			
ANR	5176923	Identifier	j		5174508	0					
ANR	5176924	PrimaryExpression	1		5174508	1					
ANR	5176925	BitAndExpression	j & 1		5174508	2		&			
ANR	5176926	Identifier	j		5174508	0					
ANR	5176927	PrimaryExpression	1		5174508	1					
ANR	5176928	IfStatement	if ( mustspace )		5174508	1					
ANR	5176929	Condition	mustspace	1209:10:28066:28074	5174508	0	True				
ANR	5176930	Identifier	mustspace		5174508	0					
ANR	5176931	CompoundStatement		395:21:9521:9521	5174508	1					
ANR	5176932	ExpressionStatement	"printfmt ( "" "" )"	1210:7:28086:28100	5174508	0	True				
ANR	5176933	CallExpression	"printfmt ( "" "" )"		5174508	0					
ANR	5176934	Callee	printfmt		5174508	0					
ANR	5176935	Identifier	printfmt		5174508	0					
ANR	5176936	ArgumentList	""" """		5174508	1					
ANR	5176937	Argument	""" """		5174508	0					
ANR	5176938	PrimaryExpression	""" """		5174508	0					
ANR	5176939	ElseStatement	else		5174508	0					
ANR	5176940	IfStatement	if ( bytes % 2 || ! pairs )		5174508	0					
ANR	5176941	Condition	bytes % 2 || ! pairs	1212:16:28126:28144	5174508	0	True				
ANR	5176942	OrExpression	bytes % 2 || ! pairs		5174508	0		||			
ANR	5176943	MultiplicativeExpression	bytes % 2		5174508	0		%			
ANR	5176944	Identifier	bytes		5174508	0					
ANR	5176945	PrimaryExpression	2		5174508	1					
ANR	5176946	UnaryOperationExpression	! pairs		5174508	1					
ANR	5176947	UnaryOperator	!		5174508	0					
ANR	5176948	Identifier	pairs		5174508	1					
ANR	5176949	CompoundStatement		398:37:9591:9591	5174508	1					
ANR	5176950	IfStatement	if ( col == 1 )		5174508	0					
ANR	5176951	Condition	col == 1	1213:10:28159:28166	5174508	0	True				
ANR	5176952	EqualityExpression	col == 1		5174508	0		==			
ANR	5176953	Identifier	col		5174508	0					
ANR	5176954	PrimaryExpression	1		5174508	1					
ANR	5176955	CompoundStatement		399:20:9613:9613	5174508	1					
ANR	5176956	IfStatement	if ( j + 1 < inc + i )		5174508	0					
ANR	5176957	Condition	j + 1 < inc + i	1214:11:28182:28196	5174508	0	True				
ANR	5176958	RelationalExpression	j + 1 < inc + i		5174508	0		<			
ANR	5176959	AdditiveExpression	j + 1		5174508	0		+			
ANR	5176960	Identifier	j		5174508	0					
ANR	5176961	PrimaryExpression	1		5174508	1					
ANR	5176962	AdditiveExpression	inc + i		5174508	1		+			
ANR	5176963	Identifier	inc		5174508	0					
ANR	5176964	Identifier	i		5174508	1					
ANR	5176965	CompoundStatement		400:28:9643:9643	5174508	1					
ANR	5176966	IfStatement	if ( ! compact )		5174508	0					
ANR	5176967	Condition	! compact	1215:12:28213:28220	5174508	0	True				
ANR	5176968	UnaryOperationExpression	! compact		5174508	0					
ANR	5176969	UnaryOperator	!		5174508	0					
ANR	5176970	Identifier	compact		5174508	1					
ANR	5176971	CompoundStatement		401:22:9667:9667	5174508	1					
ANR	5176972	ExpressionStatement	"printfmt ( "" "" )"	1216:9:28234:28248	5174508	0	True				
ANR	5176973	CallExpression	"printfmt ( "" "" )"		5174508	0					
ANR	5176974	Callee	printfmt		5174508	0					
ANR	5176975	Identifier	printfmt		5174508	0					
ANR	5176976	ArgumentList	""" """		5174508	1					
ANR	5176977	Argument	""" """		5174508	0					
ANR	5176978	PrimaryExpression	""" """		5174508	0					
ANR	5176979	ElseStatement	else		5174508	0					
ANR	5176980	CompoundStatement		404:14:9718:9718	5174508	0					
ANR	5176981	ExpressionStatement	"printfmt ( ""|"" )"	1219:8:28284:28298	5174508	0	True				
ANR	5176982	CallExpression	"printfmt ( ""|"" )"		5174508	0					
ANR	5176983	Callee	printfmt		5174508	0					
ANR	5176984	Identifier	printfmt		5174508	0					
ANR	5176985	ArgumentList	"""|"""		5174508	1					
ANR	5176986	Argument	"""|"""		5174508	0					
ANR	5176987	PrimaryExpression	"""|"""		5174508	0					
ANR	5176988	ElseStatement	else		5174508	0					
ANR	5176989	CompoundStatement		407:13:9766:9766	5174508	0					
ANR	5176990	IfStatement	if ( ! compact )		5174508	0					
ANR	5176991	Condition	! compact	1222:11:28335:28342	5174508	0	True				
ANR	5176992	UnaryOperationExpression	! compact		5174508	0					
ANR	5176993	UnaryOperator	!		5174508	0					
ANR	5176994	Identifier	compact		5174508	1					
ANR	5176995	CompoundStatement		408:21:9789:9789	5174508	1					
ANR	5176996	ExpressionStatement	"printfmt ( "" "" )"	1223:8:28355:28369	5174508	0	True				
ANR	5176997	CallExpression	"printfmt ( "" "" )"		5174508	0					
ANR	5176998	Callee	printfmt		5174508	0					
ANR	5176999	Identifier	printfmt		5174508	0					
ANR	5177000	ArgumentList	""" """		5174508	1					
ANR	5177001	Argument	""" """		5174508	0					
ANR	5177002	PrimaryExpression	""" """		5174508	0					
ANR	5177003	IfStatement	if ( hl )		5174508	6					
ANR	5177004	Condition	hl	1228:8:28409:28410	5174508	0	True				
ANR	5177005	Identifier	hl		5174508	0					
ANR	5177006	CompoundStatement		414:12:9857:9857	5174508	1					
ANR	5177007	ExpressionStatement	printfmt ( Color_RESET )	1229:5:28420:28442	5174508	0	True				
ANR	5177008	CallExpression	printfmt ( Color_RESET )		5174508	0					
ANR	5177009	Callee	printfmt		5174508	0					
ANR	5177010	Identifier	printfmt		5174508	0					
ANR	5177011	ArgumentList	Color_RESET		5174508	1					
ANR	5177012	Argument	Color_RESET		5174508	0					
ANR	5177013	Identifier	Color_RESET		5174508	0					
ANR	5177014	ExpressionStatement	bytes ++	1231:4:28454:28461	5174508	7	True				
ANR	5177015	PostIncDecOperationExpression	bytes ++		5174508	0					
ANR	5177016	Identifier	bytes		5174508	0					
ANR	5177017	IncDec	++		5174508	1					
ANR	5177018	IfStatement	if ( printValue )		5174508	9					
ANR	5177019	Condition	printValue	1234:6:28478:28487	5174508	0	True				
ANR	5177020	Identifier	printValue		5174508	0					
ANR	5177021	CompoundStatement		455:3:10772:10788	5174508	1					
ANR	5177022	IfStatement	if ( compact )		5174508	0					
ANR	5177023	Condition	compact	1235:7:28499:28505	5174508	0	True				
ANR	5177024	Identifier	compact		5174508	0					
ANR	5177025	CompoundStatement		421:16:9952:9952	5174508	1					
ANR	5177026	IfStatement	if ( col == 0 )		5174508	0					
ANR	5177027	Condition	col == 0	1236:8:28518:28525	5174508	0	True				
ANR	5177028	EqualityExpression	col == 0		5174508	0		==			
ANR	5177029	Identifier	col		5174508	0					
ANR	5177030	PrimaryExpression	0		5174508	1					
ANR	5177031	CompoundStatement		422:18:9972:9972	5174508	1					
ANR	5177032	ExpressionStatement	"printfmt ( "" "" )"	1237:5:28535:28549	5174508	0	True				
ANR	5177033	CallExpression	"printfmt ( "" "" )"		5174508	0					
ANR	5177034	Callee	printfmt		5174508	0					
ANR	5177035	Identifier	printfmt		5174508	0					
ANR	5177036	ArgumentList	""" """		5174508	1					
ANR	5177037	Argument	""" """		5174508	0					
ANR	5177038	PrimaryExpression	""" """		5174508	0					
ANR	5177039	ElseStatement	else		5174508	0					
ANR	5177040	IfStatement	if ( col == 1 )		5174508	0					
ANR	5177041	Condition	col == 1	1238:15:28566:28573	5174508	0	True				
ANR	5177042	EqualityExpression	col == 1		5174508	0		==			
ANR	5177043	Identifier	col		5174508	0					
ANR	5177044	PrimaryExpression	1		5174508	1					
ANR	5177045	CompoundStatement		424:25:10020:10020	5174508	1					
ANR	5177046	ElseStatement	else		5174508	0					
ANR	5177047	CompoundStatement		426:11:10056:10056	5174508	0					
ANR	5177048	ExpressionStatement	"printfmt ( ( col == 2 ) ? ""|"" : """" )"	1241:5:28619:28649	5174508	0	True				
ANR	5177049	CallExpression	"printfmt ( ( col == 2 ) ? ""|"" : """" )"		5174508	0					
ANR	5177050	Callee	printfmt		5174508	0					
ANR	5177051	Identifier	printfmt		5174508	0					
ANR	5177052	ArgumentList	"( col == 2 ) ? ""|"" : """""		5174508	1					
ANR	5177053	Argument	"( col == 2 ) ? ""|"" : """""		5174508	0					
ANR	5177054	ConditionalExpression	"( col == 2 ) ? ""|"" : """""		5174508	0					
ANR	5177055	Condition	col == 2		5174508	0					
ANR	5177056	EqualityExpression	col == 2		5174508	0		==			
ANR	5177057	Identifier	col		5174508	0					
ANR	5177058	PrimaryExpression	2		5174508	1					
ANR	5177059	PrimaryExpression	"""|"""		5174508	1					
ANR	5177060	PrimaryExpression	""""""		5174508	2					
ANR	5177061	ElseStatement	else		5174508	0					
ANR	5177062	CompoundStatement		429:10:10111:10111	5174508	0					
ANR	5177063	ExpressionStatement	"printfmt ( ( col == 2 ) ? ""|"" : "" "" )"	1244:4:28673:28704	5174508	0	True				
ANR	5177064	CallExpression	"printfmt ( ( col == 2 ) ? ""|"" : "" "" )"		5174508	0					
ANR	5177065	Callee	printfmt		5174508	0					
ANR	5177066	Identifier	printfmt		5174508	0					
ANR	5177067	ArgumentList	"( col == 2 ) ? ""|"" : "" """		5174508	1					
ANR	5177068	Argument	"( col == 2 ) ? ""|"" : "" """		5174508	0					
ANR	5177069	ConditionalExpression	"( col == 2 ) ? ""|"" : "" """		5174508	0					
ANR	5177070	Condition	col == 2		5174508	0					
ANR	5177071	EqualityExpression	col == 2		5174508	0		==			
ANR	5177072	Identifier	col		5174508	0					
ANR	5177073	PrimaryExpression	2		5174508	1					
ANR	5177074	PrimaryExpression	"""|"""		5174508	1					
ANR	5177075	PrimaryExpression	""" """		5174508	2					
ANR	5177076	IfStatement	if ( ! p || ! ( p -> flags & R_PRINT_FLAGS_NONASCII ) )		5174508	1					
ANR	5177077	Condition	! p || ! ( p -> flags & R_PRINT_FLAGS_NONASCII )	1246:7:28718:28759	5174508	0	True				
ANR	5177078	OrExpression	! p || ! ( p -> flags & R_PRINT_FLAGS_NONASCII )		5174508	0		||			
ANR	5177079	UnaryOperationExpression	! p		5174508	0					
ANR	5177080	UnaryOperator	!		5174508	0					
ANR	5177081	Identifier	p		5174508	1					
ANR	5177082	UnaryOperationExpression	! ( p -> flags & R_PRINT_FLAGS_NONASCII )		5174508	1					
ANR	5177083	UnaryOperator	!		5174508	0					
ANR	5177084	BitAndExpression	p -> flags & R_PRINT_FLAGS_NONASCII		5174508	1		&			
ANR	5177085	PtrMemberAccess	p -> flags		5174508	0					
ANR	5177086	Identifier	p		5174508	0					
ANR	5177087	Identifier	flags		5174508	1					
ANR	5177088	Identifier	R_PRINT_FLAGS_NONASCII		5174508	1					
ANR	5177089	CompoundStatement		432:51:10206:10206	5174508	1					
ANR	5177090	ExpressionStatement	bytes = 0	1247:4:28768:28777	5174508	0	True				
ANR	5177091	AssignmentExpression	bytes = 0		5174508	0		=			
ANR	5177092	Identifier	bytes		5174508	0					
ANR	5177093	PrimaryExpression	0		5174508	1					
ANR	5177094	ForStatement	for ( j = i ; j < i + inc ; j ++ )		5174508	1					
ANR	5177095	ForInit	j = i ;	1248:9:28788:28793	5174508	0	True				
ANR	5177096	AssignmentExpression	j = i		5174508	0		=			
ANR	5177097	Identifier	j		5174508	0					
ANR	5177098	Identifier	i		5174508	1					
ANR	5177099	Condition	j < i + inc	1248:16:28795:28805	5174508	1	True				
ANR	5177100	RelationalExpression	j < i + inc		5174508	0		<			
ANR	5177101	Identifier	j		5174508	0					
ANR	5177102	AdditiveExpression	i + inc		5174508	1		+			
ANR	5177103	Identifier	i		5174508	0					
ANR	5177104	Identifier	inc		5174508	1					
ANR	5177105	PostIncDecOperationExpression	j ++	1248:29:28808:28810	5174508	2	True				
ANR	5177106	Identifier	j		5174508	0					
ANR	5177107	IncDec	++		5174508	1					
ANR	5177108	CompoundStatement		445:5:10536:10640	5174508	3					
ANR	5177109	IfStatement	if ( j != i && use_align && bytes >= rowbytes )		5174508	0					
ANR	5177110	Condition	j != i && use_align && bytes >= rowbytes	1249:9:28824:28862	5174508	0	True				
ANR	5177111	AndExpression	j != i && use_align && bytes >= rowbytes		5174508	0		&&			
ANR	5177112	EqualityExpression	j != i		5174508	0		!=			
ANR	5177113	Identifier	j		5174508	0					
ANR	5177114	Identifier	i		5174508	1					
ANR	5177115	AndExpression	use_align && bytes >= rowbytes		5174508	1		&&			
ANR	5177116	Identifier	use_align		5174508	0					
ANR	5177117	RelationalExpression	bytes >= rowbytes		5174508	1		>=			
ANR	5177118	Identifier	bytes		5174508	0					
ANR	5177119	Identifier	rowbytes		5174508	1					
ANR	5177120	CompoundStatement		436:6:10317:10379	5174508	1					
ANR	5177121	IdentifierDeclStatement	"int sz = ( p && p -> offsize ) ? p -> offsize ( p -> user , addr + j ) : - 1 ;"	1250:6:28873:28935	5174508	0	True				
ANR	5177122	IdentifierDecl	"sz = ( p && p -> offsize ) ? p -> offsize ( p -> user , addr + j ) : - 1"		5174508	0					
ANR	5177123	IdentifierDeclType	int		5174508	0					
ANR	5177124	Identifier	sz		5174508	1					
ANR	5177125	AssignmentExpression	"sz = ( p && p -> offsize ) ? p -> offsize ( p -> user , addr + j ) : - 1"		5174508	2		=			
ANR	5177126	Identifier	sz		5174508	0					
ANR	5177127	ConditionalExpression	"( p && p -> offsize ) ? p -> offsize ( p -> user , addr + j ) : - 1"		5174508	1					
ANR	5177128	Condition	p && p -> offsize		5174508	0					
ANR	5177129	AndExpression	p && p -> offsize		5174508	0		&&			
ANR	5177130	Identifier	p		5174508	0					
ANR	5177131	PtrMemberAccess	p -> offsize		5174508	1					
ANR	5177132	Identifier	p		5174508	0					
ANR	5177133	Identifier	offsize		5174508	1					
ANR	5177134	CallExpression	"p -> offsize ( p -> user , addr + j )"		5174508	1					
ANR	5177135	Callee	p -> offsize		5174508	0					
ANR	5177136	PtrMemberAccess	p -> offsize		5174508	0					
ANR	5177137	Identifier	p		5174508	0					
ANR	5177138	Identifier	offsize		5174508	1					
ANR	5177139	ArgumentList	p -> user		5174508	1					
ANR	5177140	Argument	p -> user		5174508	0					
ANR	5177141	PtrMemberAccess	p -> user		5174508	0					
ANR	5177142	Identifier	p		5174508	0					
ANR	5177143	Identifier	user		5174508	1					
ANR	5177144	Argument	addr + j		5174508	1					
ANR	5177145	AdditiveExpression	addr + j		5174508	0		+			
ANR	5177146	Identifier	addr		5174508	0					
ANR	5177147	Identifier	j		5174508	1					
ANR	5177148	UnaryOperationExpression	- 1		5174508	2					
ANR	5177149	UnaryOperator	-		5174508	0					
ANR	5177150	PrimaryExpression	1		5174508	1					
ANR	5177151	IfStatement	if ( sz >= 0 )		5174508	1					
ANR	5177152	Condition	sz >= 0	1251:10:28947:28953	5174508	0	True				
ANR	5177153	RelationalExpression	sz >= 0		5174508	0		>=			
ANR	5177154	Identifier	sz		5174508	0					
ANR	5177155	PrimaryExpression	0		5174508	1					
ANR	5177156	CompoundStatement		437:19:10400:10400	5174508	1					
ANR	5177157	ExpressionStatement	"printfmt ( "" "" )"	1252:7:28965:28979	5174508	0	True				
ANR	5177158	CallExpression	"printfmt ( "" "" )"		5174508	0					
ANR	5177159	Callee	printfmt		5174508	0					
ANR	5177160	Identifier	printfmt		5174508	0					
ANR	5177161	ArgumentList	""" """		5174508	1					
ANR	5177162	Argument	""" """		5174508	0					
ANR	5177163	PrimaryExpression	""" """		5174508	0					
ANR	5177164	BreakStatement	break ;	1253:7:28988:28993	5174508	1	True				
ANR	5177165	IfStatement	if ( j >= len || ( use_align && bytes >= rowbytes ) )		5174508	1					
ANR	5177166	Condition	j >= len || ( use_align && bytes >= rowbytes )	1256:9:29019:29062	5174508	0	True				
ANR	5177167	OrExpression	j >= len || ( use_align && bytes >= rowbytes )		5174508	0		||			
ANR	5177168	RelationalExpression	j >= len		5174508	0		>=			
ANR	5177169	Identifier	j		5174508	0					
ANR	5177170	Identifier	len		5174508	1					
ANR	5177171	AndExpression	use_align && bytes >= rowbytes		5174508	1		&&			
ANR	5177172	Identifier	use_align		5174508	0					
ANR	5177173	RelationalExpression	bytes >= rowbytes		5174508	1		>=			
ANR	5177174	Identifier	bytes		5174508	0					
ANR	5177175	Identifier	rowbytes		5174508	1					
ANR	5177176	CompoundStatement		442:55:10509:10509	5174508	1					
ANR	5177177	BreakStatement	break ;	1257:6:29073:29078	5174508	0	True				
ANR	5177178	IdentifierDeclStatement	"ut8 ch = ( use_unalloc && p && ! p -> iob . is_valid_offset ( p -> iob . io , addr + j , false ) ) ? ' ' : buf [ j ] ;"	1259:5:29092:29196	5174508	2	True				
ANR	5177179	IdentifierDecl	"ch = ( use_unalloc && p && ! p -> iob . is_valid_offset ( p -> iob . io , addr + j , false ) ) ? ' ' : buf [ j ]"		5174508	0					
ANR	5177180	IdentifierDeclType	ut8		5174508	0					
ANR	5177181	Identifier	ch		5174508	1					
ANR	5177182	AssignmentExpression	"ch = ( use_unalloc && p && ! p -> iob . is_valid_offset ( p -> iob . io , addr + j , false ) ) ? ' ' : buf [ j ]"		5174508	2		=			
ANR	5177183	Identifier	ch		5174508	0					
ANR	5177184	ConditionalExpression	"( use_unalloc && p && ! p -> iob . is_valid_offset ( p -> iob . io , addr + j , false ) ) ? ' ' : buf [ j ]"		5174508	1					
ANR	5177185	Condition	"use_unalloc && p && ! p -> iob . is_valid_offset ( p -> iob . io , addr + j , false )"		5174508	0					
ANR	5177186	AndExpression	"use_unalloc && p && ! p -> iob . is_valid_offset ( p -> iob . io , addr + j , false )"		5174508	0		&&			
ANR	5177187	Identifier	use_unalloc		5174508	0					
ANR	5177188	AndExpression	"p && ! p -> iob . is_valid_offset ( p -> iob . io , addr + j , false )"		5174508	1		&&			
ANR	5177189	Identifier	p		5174508	0					
ANR	5177190	UnaryOperationExpression	"! p -> iob . is_valid_offset ( p -> iob . io , addr + j , false )"		5174508	1					
ANR	5177191	UnaryOperator	!		5174508	0					
ANR	5177192	CallExpression	"p -> iob . is_valid_offset ( p -> iob . io , addr + j , false )"		5174508	1					
ANR	5177193	Callee	p -> iob . is_valid_offset		5174508	0					
ANR	5177194	MemberAccess	p -> iob . is_valid_offset		5174508	0					
ANR	5177195	PtrMemberAccess	p -> iob		5174508	0					
ANR	5177196	Identifier	p		5174508	0					
ANR	5177197	Identifier	iob		5174508	1					
ANR	5177198	Identifier	is_valid_offset		5174508	1					
ANR	5177199	ArgumentList	p -> iob . io		5174508	1					
ANR	5177200	Argument	p -> iob . io		5174508	0					
ANR	5177201	MemberAccess	p -> iob . io		5174508	0					
ANR	5177202	PtrMemberAccess	p -> iob		5174508	0					
ANR	5177203	Identifier	p		5174508	0					
ANR	5177204	Identifier	iob		5174508	1					
ANR	5177205	Identifier	io		5174508	1					
ANR	5177206	Argument	addr + j		5174508	1					
ANR	5177207	AdditiveExpression	addr + j		5174508	0		+			
ANR	5177208	Identifier	addr		5174508	0					
ANR	5177209	Identifier	j		5174508	1					
ANR	5177210	Argument	false		5174508	2					
ANR	5177211	Identifier	false		5174508	0					
ANR	5177212	PrimaryExpression	' '		5174508	1					
ANR	5177213	ArrayIndexing	buf [ j ]		5174508	2					
ANR	5177214	Identifier	buf		5174508	0					
ANR	5177215	Identifier	j		5174508	1					
ANR	5177216	ExpressionStatement	"r_print_byte ( p , ""%c"" , j , ch )"	1261:5:29203:29232	5174508	3	True				
ANR	5177217	CallExpression	"r_print_byte ( p , ""%c"" , j , ch )"		5174508	0					
ANR	5177218	Callee	r_print_byte		5174508	0					
ANR	5177219	Identifier	r_print_byte		5174508	0					
ANR	5177220	ArgumentList	p		5174508	1					
ANR	5177221	Argument	p		5174508	0					
ANR	5177222	Identifier	p		5174508	0					
ANR	5177223	Argument	"""%c"""		5174508	1					
ANR	5177224	PrimaryExpression	"""%c"""		5174508	0					
ANR	5177225	Argument	j		5174508	2					
ANR	5177226	Identifier	j		5174508	0					
ANR	5177227	Argument	ch		5174508	3					
ANR	5177228	Identifier	ch		5174508	0					
ANR	5177229	ExpressionStatement	bytes ++	1262:5:29239:29246	5174508	4	True				
ANR	5177230	PostIncDecOperationExpression	bytes ++		5174508	0					
ANR	5177231	Identifier	bytes		5174508	0					
ANR	5177232	IncDec	++		5174508	1					
ANR	5177233	IfStatement	if ( col == 2 )		5174508	2					
ANR	5177234	Condition	col == 2	1266:7:29288:29295	5174508	0	True				
ANR	5177235	EqualityExpression	col == 2		5174508	0		==			
ANR	5177236	Identifier	col		5174508	0					
ANR	5177237	PrimaryExpression	2		5174508	1					
ANR	5177238	CompoundStatement		452:17:10742:10742	5174508	1					
ANR	5177239	ExpressionStatement	"printfmt ( ""|"" )"	1267:4:29304:29318	5174508	0	True				
ANR	5177240	CallExpression	"printfmt ( ""|"" )"		5174508	0					
ANR	5177241	Callee	printfmt		5174508	0					
ANR	5177242	Identifier	printfmt		5174508	0					
ANR	5177243	ArgumentList	"""|"""		5174508	1					
ANR	5177244	Argument	"""|"""		5174508	0					
ANR	5177245	PrimaryExpression	"""|"""		5174508	0					
ANR	5177246	IdentifierDeclStatement	bool eol = false ;	1269:3:29328:29344	5174508	3	True				
ANR	5177247	IdentifierDecl	eol = false		5174508	0					
ANR	5177248	IdentifierDeclType	bool		5174508	0					
ANR	5177249	Identifier	eol		5174508	1					
ANR	5177250	AssignmentExpression	eol = false		5174508	2		=			
ANR	5177251	Identifier	false		5174508	0					
ANR	5177252	Identifier	false		5174508	1					
ANR	5177253	IfStatement	if ( ! eol && p && p -> flags & R_PRINT_FLAGS_REFS )		5174508	4					
ANR	5177254	Condition	! eol && p && p -> flags & R_PRINT_FLAGS_REFS	1270:7:29353:29394	5174508	0	True				
ANR	5177255	AndExpression	! eol && p && p -> flags & R_PRINT_FLAGS_REFS		5174508	0		&&			
ANR	5177256	UnaryOperationExpression	! eol		5174508	0					
ANR	5177257	UnaryOperator	!		5174508	0					
ANR	5177258	Identifier	eol		5174508	1					
ANR	5177259	AndExpression	p && p -> flags & R_PRINT_FLAGS_REFS		5174508	1		&&			
ANR	5177260	Identifier	p		5174508	0					
ANR	5177261	BitAndExpression	p -> flags & R_PRINT_FLAGS_REFS		5174508	1		&			
ANR	5177262	PtrMemberAccess	p -> flags		5174508	0					
ANR	5177263	Identifier	p		5174508	0					
ANR	5177264	Identifier	flags		5174508	1					
ANR	5177265	Identifier	R_PRINT_FLAGS_REFS		5174508	1					
ANR	5177266	CompoundStatement		457:4:10847:10859	5174508	1					
ANR	5177267	IdentifierDeclStatement	ut64 off = 0 ;	1271:4:29403:29415	5174508	0	True				
ANR	5177268	IdentifierDecl	off = 0		5174508	0					
ANR	5177269	IdentifierDeclType	ut64		5174508	0					
ANR	5177270	Identifier	off		5174508	1					
ANR	5177271	AssignmentExpression	off = 0		5174508	2		=			
ANR	5177272	Identifier	off		5174508	0					
ANR	5177273	PrimaryExpression	0		5174508	1					
ANR	5177274	IfStatement	if ( i + 8 < len )		5174508	1					
ANR	5177275	Condition	i + 8 < len	1272:8:29425:29435	5174508	0	True				
ANR	5177276	RelationalExpression	i + 8 < len		5174508	0		<			
ANR	5177277	AdditiveExpression	i + 8		5174508	0		+			
ANR	5177278	Identifier	i		5174508	0					
ANR	5177279	PrimaryExpression	8		5174508	1					
ANR	5177280	Identifier	len		5174508	1					
ANR	5177281	CompoundStatement		459:5:10889:10919	5174508	1					
ANR	5177282	IdentifierDeclStatement	ut64 * foo = ( ut64 * ) ( buf + i ) ;	1273:5:29445:29475	5174508	0	True				
ANR	5177283	IdentifierDecl	* foo = ( ut64 * ) ( buf + i )		5174508	0					
ANR	5177284	IdentifierDeclType	ut64 *		5174508	0					
ANR	5177285	Identifier	foo		5174508	1					
ANR	5177286	AssignmentExpression	* foo = ( ut64 * ) ( buf + i )		5174508	2		=			
ANR	5177287	Identifier	foo		5174508	0					
ANR	5177288	CastExpression	( ut64 * ) ( buf + i )		5174508	1					
ANR	5177289	CastTarget	ut64 *		5174508	0					
ANR	5177290	AdditiveExpression	buf + i		5174508	1		+			
ANR	5177291	Identifier	buf		5174508	0					
ANR	5177292	Identifier	i		5174508	1					
ANR	5177293	ExpressionStatement	off = * foo	1274:5:29482:29492	5174508	1	True				
ANR	5177294	AssignmentExpression	off = * foo		5174508	0		=			
ANR	5177295	Identifier	off		5174508	0					
ANR	5177296	UnaryOperationExpression	* foo		5174508	1					
ANR	5177297	UnaryOperator	*		5174508	0					
ANR	5177298	Identifier	foo		5174508	1					
ANR	5177299	IfStatement	if ( base == 32 )		5174508	2					
ANR	5177300	Condition	base == 32	1276:8:29508:29517	5174508	0	True				
ANR	5177301	EqualityExpression	base == 32		5174508	0		==			
ANR	5177302	Identifier	base		5174508	0					
ANR	5177303	PrimaryExpression	32		5174508	1					
ANR	5177304	CompoundStatement		462:20:10964:10964	5174508	1					
ANR	5177305	ExpressionStatement	off &= UT32_MAX	1277:5:29527:29542	5174508	0	True				
ANR	5177306	AssignmentExpression	off &= UT32_MAX		5174508	0		&=			
ANR	5177307	Identifier	off		5174508	0					
ANR	5177308	Identifier	UT32_MAX		5174508	1					
ANR	5177309	IfStatement	if ( p -> hasrefs )		5174508	3					
ANR	5177310	Condition	p -> hasrefs	1279:8:29558:29567	5174508	0	True				
ANR	5177311	PtrMemberAccess	p -> hasrefs		5174508	0					
ANR	5177312	Identifier	p		5174508	0					
ANR	5177313	Identifier	hasrefs		5174508	1					
ANR	5177314	CompoundStatement		466:5:11021:11071	5174508	1					
ANR	5177315	IdentifierDeclStatement	"char * rstr = p -> hasrefs ( p -> user , addr + i , false ) ;"	1280:5:29577:29627	5174508	0	True				
ANR	5177316	IdentifierDecl	"* rstr = p -> hasrefs ( p -> user , addr + i , false )"		5174508	0					
ANR	5177317	IdentifierDeclType	char *		5174508	0					
ANR	5177318	Identifier	rstr		5174508	1					
ANR	5177319	AssignmentExpression	"* rstr = p -> hasrefs ( p -> user , addr + i , false )"		5174508	2		=			
ANR	5177320	Identifier	rstr		5174508	0					
ANR	5177321	CallExpression	"p -> hasrefs ( p -> user , addr + i , false )"		5174508	1					
ANR	5177322	Callee	p -> hasrefs		5174508	0					
ANR	5177323	PtrMemberAccess	p -> hasrefs		5174508	0					
ANR	5177324	Identifier	p		5174508	0					
ANR	5177325	Identifier	hasrefs		5174508	1					
ANR	5177326	ArgumentList	p -> user		5174508	1					
ANR	5177327	Argument	p -> user		5174508	0					
ANR	5177328	PtrMemberAccess	p -> user		5174508	0					
ANR	5177329	Identifier	p		5174508	0					
ANR	5177330	Identifier	user		5174508	1					
ANR	5177331	Argument	addr + i		5174508	1					
ANR	5177332	AdditiveExpression	addr + i		5174508	0		+			
ANR	5177333	Identifier	addr		5174508	0					
ANR	5177334	Identifier	i		5174508	1					
ANR	5177335	Argument	false		5174508	2					
ANR	5177336	Identifier	false		5174508	0					
ANR	5177337	IfStatement	if ( rstr && * rstr )		5174508	1					
ANR	5177338	Condition	rstr && * rstr	1281:9:29638:29650	5174508	0	True				
ANR	5177339	AndExpression	rstr && * rstr		5174508	0		&&			
ANR	5177340	Identifier	rstr		5174508	0					
ANR	5177341	UnaryOperationExpression	* rstr		5174508	1					
ANR	5177342	UnaryOperator	*		5174508	0					
ANR	5177343	Identifier	rstr		5174508	1					
ANR	5177344	CompoundStatement		467:24:11097:11097	5174508	1					
ANR	5177345	ExpressionStatement	"printfmt ( "" @%s"" , rstr )"	1282:6:29661:29684	5174508	0	True				
ANR	5177346	CallExpression	"printfmt ( "" @%s"" , rstr )"		5174508	0					
ANR	5177347	Callee	printfmt		5174508	0					
ANR	5177348	Identifier	printfmt		5174508	0					
ANR	5177349	ArgumentList	""" @%s"""		5174508	1					
ANR	5177350	Argument	""" @%s"""		5174508	0					
ANR	5177351	PrimaryExpression	""" @%s"""		5174508	0					
ANR	5177352	Argument	rstr		5174508	1					
ANR	5177353	Identifier	rstr		5174508	0					
ANR	5177354	ExpressionStatement	free ( rstr )	1284:5:29698:29709	5174508	2	True				
ANR	5177355	CallExpression	free ( rstr )		5174508	0					
ANR	5177356	Callee	free		5174508	0					
ANR	5177357	Identifier	free		5174508	0					
ANR	5177358	ArgumentList	rstr		5174508	1					
ANR	5177359	Argument	rstr		5174508	0					
ANR	5177360	Identifier	rstr		5174508	0					
ANR	5177361	ExpressionStatement	"rstr = p -> hasrefs ( p -> user , off , true )"	1285:5:29716:29754	5174508	3	True				
ANR	5177362	AssignmentExpression	"rstr = p -> hasrefs ( p -> user , off , true )"		5174508	0		=			
ANR	5177363	Identifier	rstr		5174508	0					
ANR	5177364	CallExpression	"p -> hasrefs ( p -> user , off , true )"		5174508	1					
ANR	5177365	Callee	p -> hasrefs		5174508	0					
ANR	5177366	PtrMemberAccess	p -> hasrefs		5174508	0					
ANR	5177367	Identifier	p		5174508	0					
ANR	5177368	Identifier	hasrefs		5174508	1					
ANR	5177369	ArgumentList	p -> user		5174508	1					
ANR	5177370	Argument	p -> user		5174508	0					
ANR	5177371	PtrMemberAccess	p -> user		5174508	0					
ANR	5177372	Identifier	p		5174508	0					
ANR	5177373	Identifier	user		5174508	1					
ANR	5177374	Argument	off		5174508	1					
ANR	5177375	Identifier	off		5174508	0					
ANR	5177376	Argument	true		5174508	2					
ANR	5177377	Identifier	true		5174508	0					
ANR	5177378	IfStatement	if ( rstr && * rstr )		5174508	4					
ANR	5177379	Condition	rstr && * rstr	1286:9:29765:29777	5174508	0	True				
ANR	5177380	AndExpression	rstr && * rstr		5174508	0		&&			
ANR	5177381	Identifier	rstr		5174508	0					
ANR	5177382	UnaryOperationExpression	* rstr		5174508	1					
ANR	5177383	UnaryOperator	*		5174508	0					
ANR	5177384	Identifier	rstr		5174508	1					
ANR	5177385	CompoundStatement		472:24:11224:11224	5174508	1					
ANR	5177386	ExpressionStatement	"printfmt ( ""%s"" , rstr )"	1287:6:29788:29809	5174508	0	True				
ANR	5177387	CallExpression	"printfmt ( ""%s"" , rstr )"		5174508	0					
ANR	5177388	Callee	printfmt		5174508	0					
ANR	5177389	Identifier	printfmt		5174508	0					
ANR	5177390	ArgumentList	"""%s"""		5174508	1					
ANR	5177391	Argument	"""%s"""		5174508	0					
ANR	5177392	PrimaryExpression	"""%s"""		5174508	0					
ANR	5177393	Argument	rstr		5174508	1					
ANR	5177394	Identifier	rstr		5174508	0					
ANR	5177395	ExpressionStatement	free ( rstr )	1289:5:29823:29834	5174508	5	True				
ANR	5177396	CallExpression	free ( rstr )		5174508	0					
ANR	5177397	Callee	free		5174508	0					
ANR	5177398	Identifier	free		5174508	0					
ANR	5177399	ArgumentList	rstr		5174508	1					
ANR	5177400	Argument	rstr		5174508	0					
ANR	5177401	Identifier	rstr		5174508	0					
ANR	5177402	IfStatement	if ( ! eol && p && p -> use_comments )		5174508	5					
ANR	5177403	Condition	! eol && p && p -> use_comments	1292:7:29854:29881	5174508	0	True				
ANR	5177404	AndExpression	! eol && p && p -> use_comments		5174508	0		&&			
ANR	5177405	UnaryOperationExpression	! eol		5174508	0					
ANR	5177406	UnaryOperator	!		5174508	0					
ANR	5177407	Identifier	eol		5174508	1					
ANR	5177408	AndExpression	p && p -> use_comments		5174508	1		&&			
ANR	5177409	Identifier	p		5174508	0					
ANR	5177410	PtrMemberAccess	p -> use_comments		5174508	1					
ANR	5177411	Identifier	p		5174508	0					
ANR	5177412	Identifier	use_comments		5174508	1					
ANR	5177413	CompoundStatement		478:37:11328:11328	5174508	1					
ANR	5177414	ForStatement	for ( ; j < i + inc ; j ++ )		5174508	0					
ANR	5177415	Condition	j < i + inc	1293:11:29897:29907	5174508	0	True				
ANR	5177416	RelationalExpression	j < i + inc		5174508	0		<			
ANR	5177417	Identifier	j		5174508	0					
ANR	5177418	AdditiveExpression	i + inc		5174508	1		+			
ANR	5177419	Identifier	i		5174508	0					
ANR	5177420	Identifier	inc		5174508	1					
ANR	5177421	PostIncDecOperationExpression	j ++	1293:24:29910:29912	5174508	1	True				
ANR	5177422	Identifier	j		5174508	0					
ANR	5177423	IncDec	++		5174508	1					
ANR	5177424	CompoundStatement		479:29:11359:11359	5174508	2					
ANR	5177425	ExpressionStatement	"printfmt ( "" "" )"	1294:5:29922:29936	5174508	0	True				
ANR	5177426	CallExpression	"printfmt ( "" "" )"		5174508	0					
ANR	5177427	Callee	printfmt		5174508	0					
ANR	5177428	Identifier	printfmt		5174508	0					
ANR	5177429	ArgumentList	""" """		5174508	1					
ANR	5177430	Argument	""" """		5174508	0					
ANR	5177431	PrimaryExpression	""" """		5174508	0					
ANR	5177432	ForStatement	for ( j = i ; j < i + inc ; j ++ )		5174508	1					
ANR	5177433	ForInit	j = i ;	1296:9:29953:29958	5174508	0	True				
ANR	5177434	AssignmentExpression	j = i		5174508	0		=			
ANR	5177435	Identifier	j		5174508	0					
ANR	5177436	Identifier	i		5174508	1					
ANR	5177437	Condition	j < i + inc	1296:16:29960:29970	5174508	1	True				
ANR	5177438	RelationalExpression	j < i + inc		5174508	0		<			
ANR	5177439	Identifier	j		5174508	0					
ANR	5177440	AdditiveExpression	i + inc		5174508	1		+			
ANR	5177441	Identifier	i		5174508	0					
ANR	5177442	Identifier	inc		5174508	1					
ANR	5177443	PostIncDecOperationExpression	j ++	1296:29:29973:29975	5174508	2	True				
ANR	5177444	Identifier	j		5174508	0					
ANR	5177445	IncDec	++		5174508	1					
ANR	5177446	CompoundStatement		494:5:11768:11819	5174508	3					
ANR	5177447	IfStatement	if ( use_align && ( j - i ) >= rowbytes )		5174508	0					
ANR	5177448	Condition	use_align && ( j - i ) >= rowbytes	1297:9:29989:30018	5174508	0	True				
ANR	5177449	AndExpression	use_align && ( j - i ) >= rowbytes		5174508	0		&&			
ANR	5177450	Identifier	use_align		5174508	0					
ANR	5177451	RelationalExpression	( j - i ) >= rowbytes		5174508	1		>=			
ANR	5177452	AdditiveExpression	j - i		5174508	0		-			
ANR	5177453	Identifier	j		5174508	0					
ANR	5177454	Identifier	i		5174508	1					
ANR	5177455	Identifier	rowbytes		5174508	1					
ANR	5177456	CompoundStatement		483:41:11465:11465	5174508	1					
ANR	5177457	BreakStatement	break ;	1298:6:30029:30034	5174508	0	True				
ANR	5177458	IfStatement	if ( p && p -> offname )		5174508	1					
ANR	5177459	Condition	p && p -> offname	1300:9:30052:30066	5174508	0	True				
ANR	5177460	AndExpression	p && p -> offname		5174508	0		&&			
ANR	5177461	Identifier	p		5174508	0					
ANR	5177462	PtrMemberAccess	p -> offname		5174508	1					
ANR	5177463	Identifier	p		5174508	0					
ANR	5177464	Identifier	offname		5174508	1					
ANR	5177465	CompoundStatement		486:26:11513:11513	5174508	1					
ANR	5177466	ExpressionStatement	"a = p -> offname ( p -> user , addr + j )"	1301:6:30077:30111	5174508	0	True				
ANR	5177467	AssignmentExpression	"a = p -> offname ( p -> user , addr + j )"		5174508	0		=			
ANR	5177468	Identifier	a		5174508	0					
ANR	5177469	CallExpression	"p -> offname ( p -> user , addr + j )"		5174508	1					
ANR	5177470	Callee	p -> offname		5174508	0					
ANR	5177471	PtrMemberAccess	p -> offname		5174508	0					
ANR	5177472	Identifier	p		5174508	0					
ANR	5177473	Identifier	offname		5174508	1					
ANR	5177474	ArgumentList	p -> user		5174508	1					
ANR	5177475	Argument	p -> user		5174508	0					
ANR	5177476	PtrMemberAccess	p -> user		5174508	0					
ANR	5177477	Identifier	p		5174508	0					
ANR	5177478	Identifier	user		5174508	1					
ANR	5177479	Argument	addr + j		5174508	1					
ANR	5177480	AdditiveExpression	addr + j		5174508	0		+			
ANR	5177481	Identifier	addr		5174508	0					
ANR	5177482	Identifier	j		5174508	1					
ANR	5177483	IfStatement	if ( p -> colorfor && a && * a )		5174508	1					
ANR	5177484	Condition	p -> colorfor && a && * a	1302:10:30123:30144	5174508	0	True				
ANR	5177485	AndExpression	p -> colorfor && a && * a		5174508	0		&&			
ANR	5177486	PtrMemberAccess	p -> colorfor		5174508	0					
ANR	5177487	Identifier	p		5174508	0					
ANR	5177488	Identifier	colorfor		5174508	1					
ANR	5177489	AndExpression	a && * a		5174508	1		&&			
ANR	5177490	Identifier	a		5174508	0					
ANR	5177491	UnaryOperationExpression	* a		5174508	1					
ANR	5177492	UnaryOperator	*		5174508	0					
ANR	5177493	Identifier	a		5174508	1					
ANR	5177494	CompoundStatement		489:7:11600:11657	5174508	1					
ANR	5177495	IdentifierDeclStatement	"const char * color = p -> colorfor ( p -> user , addr + j , true ) ;"	1303:7:30156:30213	5174508	0	True				
ANR	5177496	IdentifierDecl	"* color = p -> colorfor ( p -> user , addr + j , true )"		5174508	0					
ANR	5177497	IdentifierDeclType	const char *		5174508	0					
ANR	5177498	Identifier	color		5174508	1					
ANR	5177499	AssignmentExpression	"* color = p -> colorfor ( p -> user , addr + j , true )"		5174508	2		=			
ANR	5177500	Identifier	color		5174508	0					
ANR	5177501	CallExpression	"p -> colorfor ( p -> user , addr + j , true )"		5174508	1					
ANR	5177502	Callee	p -> colorfor		5174508	0					
ANR	5177503	PtrMemberAccess	p -> colorfor		5174508	0					
ANR	5177504	Identifier	p		5174508	0					
ANR	5177505	Identifier	colorfor		5174508	1					
ANR	5177506	ArgumentList	p -> user		5174508	1					
ANR	5177507	Argument	p -> user		5174508	0					
ANR	5177508	PtrMemberAccess	p -> user		5174508	0					
ANR	5177509	Identifier	p		5174508	0					
ANR	5177510	Identifier	user		5174508	1					
ANR	5177511	Argument	addr + j		5174508	1					
ANR	5177512	AdditiveExpression	addr + j		5174508	0		+			
ANR	5177513	Identifier	addr		5174508	0					
ANR	5177514	Identifier	j		5174508	1					
ANR	5177515	Argument	true		5174508	2					
ANR	5177516	Identifier	true		5174508	0					
ANR	5177517	ExpressionStatement	"printfmt ( ""%s  ; %s%s"" , color ? color : """" , a , color ? Color_RESET : """" )"	1304:7:30222:30302	5174508	1	True				
ANR	5177518	CallExpression	"printfmt ( ""%s  ; %s%s"" , color ? color : """" , a , color ? Color_RESET : """" )"		5174508	0					
ANR	5177519	Callee	printfmt		5174508	0					
ANR	5177520	Identifier	printfmt		5174508	0					
ANR	5177521	ArgumentList	"""%s  ; %s%s"""		5174508	1					
ANR	5177522	Argument	"""%s  ; %s%s"""		5174508	0					
ANR	5177523	PrimaryExpression	"""%s  ; %s%s"""		5174508	0					
ANR	5177524	Argument	"color ? color : """""		5174508	1					
ANR	5177525	ConditionalExpression	"color ? color : """""		5174508	0					
ANR	5177526	Condition	color		5174508	0					
ANR	5177527	Identifier	color		5174508	0					
ANR	5177528	Identifier	color		5174508	1					
ANR	5177529	PrimaryExpression	""""""		5174508	2					
ANR	5177530	Argument	a		5174508	2					
ANR	5177531	Identifier	a		5174508	0					
ANR	5177532	Argument	"color ? Color_RESET : """""		5174508	3					
ANR	5177533	ConditionalExpression	"color ? Color_RESET : """""		5174508	0					
ANR	5177534	Condition	color		5174508	0					
ANR	5177535	Identifier	color		5174508	0					
ANR	5177536	Identifier	Color_RESET		5174508	1					
ANR	5177537	PrimaryExpression	""""""		5174508	2					
ANR	5177538	IdentifierDeclStatement	"char * comment = p -> get_comments ( p -> user , addr + j ) ;"	1308:5:30324:30375	5174508	2	True				
ANR	5177539	IdentifierDecl	"* comment = p -> get_comments ( p -> user , addr + j )"		5174508	0					
ANR	5177540	IdentifierDeclType	char *		5174508	0					
ANR	5177541	Identifier	comment		5174508	1					
ANR	5177542	AssignmentExpression	"* comment = p -> get_comments ( p -> user , addr + j )"		5174508	2		=			
ANR	5177543	Identifier	comment		5174508	0					
ANR	5177544	CallExpression	"p -> get_comments ( p -> user , addr + j )"		5174508	1					
ANR	5177545	Callee	p -> get_comments		5174508	0					
ANR	5177546	PtrMemberAccess	p -> get_comments		5174508	0					
ANR	5177547	Identifier	p		5174508	0					
ANR	5177548	Identifier	get_comments		5174508	1					
ANR	5177549	ArgumentList	p -> user		5174508	1					
ANR	5177550	Argument	p -> user		5174508	0					
ANR	5177551	PtrMemberAccess	p -> user		5174508	0					
ANR	5177552	Identifier	p		5174508	0					
ANR	5177553	Identifier	user		5174508	1					
ANR	5177554	Argument	addr + j		5174508	1					
ANR	5177555	AdditiveExpression	addr + j		5174508	0		+			
ANR	5177556	Identifier	addr		5174508	0					
ANR	5177557	Identifier	j		5174508	1					
ANR	5177558	IfStatement	if ( comment )		5174508	3					
ANR	5177559	Condition	comment	1309:9:30386:30392	5174508	0	True				
ANR	5177560	Identifier	comment		5174508	0					
ANR	5177561	CompoundStatement		495:18:11839:11839	5174508	1					
ANR	5177562	IfStatement	if ( p && p -> colorfor )		5174508	0					
ANR	5177563	Condition	p && p -> colorfor	1310:10:30407:30422	5174508	0	True				
ANR	5177564	AndExpression	p && p -> colorfor		5174508	0		&&			
ANR	5177565	Identifier	p		5174508	0					
ANR	5177566	PtrMemberAccess	p -> colorfor		5174508	1					
ANR	5177567	Identifier	p		5174508	0					
ANR	5177568	Identifier	colorfor		5174508	1					
ANR	5177569	CompoundStatement		496:28:11869:11869	5174508	1					
ANR	5177570	ExpressionStatement	"a = p -> colorfor ( p -> user , addr + j , true )"	1311:7:30434:30475	5174508	0	True				
ANR	5177571	AssignmentExpression	"a = p -> colorfor ( p -> user , addr + j , true )"		5174508	0		=			
ANR	5177572	Identifier	a		5174508	0					
ANR	5177573	CallExpression	"p -> colorfor ( p -> user , addr + j , true )"		5174508	1					
ANR	5177574	Callee	p -> colorfor		5174508	0					
ANR	5177575	PtrMemberAccess	p -> colorfor		5174508	0					
ANR	5177576	Identifier	p		5174508	0					
ANR	5177577	Identifier	colorfor		5174508	1					
ANR	5177578	ArgumentList	p -> user		5174508	1					
ANR	5177579	Argument	p -> user		5174508	0					
ANR	5177580	PtrMemberAccess	p -> user		5174508	0					
ANR	5177581	Identifier	p		5174508	0					
ANR	5177582	Identifier	user		5174508	1					
ANR	5177583	Argument	addr + j		5174508	1					
ANR	5177584	AdditiveExpression	addr + j		5174508	0		+			
ANR	5177585	Identifier	addr		5174508	0					
ANR	5177586	Identifier	j		5174508	1					
ANR	5177587	Argument	true		5174508	2					
ANR	5177588	Identifier	true		5174508	0					
ANR	5177589	IfStatement	if ( a && * a )		5174508	1					
ANR	5177590	Condition	a && * a	1312:11:30488:30494	5174508	0	True				
ANR	5177591	AndExpression	a && * a		5174508	0		&&			
ANR	5177592	Identifier	a		5174508	0					
ANR	5177593	UnaryOperationExpression	* a		5174508	1					
ANR	5177594	UnaryOperator	*		5174508	0					
ANR	5177595	Identifier	a		5174508	1					
ANR	5177596	CompoundStatement		498:20:11941:11941	5174508	1					
ANR	5177597	ExpressionStatement	b = Color_RESET	1313:8:30507:30522	5174508	0	True				
ANR	5177598	AssignmentExpression	b = Color_RESET		5174508	0		=			
ANR	5177599	Identifier	b		5174508	0					
ANR	5177600	Identifier	Color_RESET		5174508	1					
ANR	5177601	ElseStatement	else		5174508	0					
ANR	5177602	CompoundStatement		500:14:11982:11982	5174508	0					
ANR	5177603	ExpressionStatement	"a = b = """""	1315:8:30548:30558	5174508	0	True				
ANR	5177604	AssignmentExpression	"a = b = """""		5174508	0		=			
ANR	5177605	Identifier	a		5174508	0					
ANR	5177606	AssignmentExpression	"b = """""		5174508	1		=			
ANR	5177607	Identifier	b		5174508	0					
ANR	5177608	PrimaryExpression	""""""		5174508	1					
ANR	5177609	ElseStatement	else		5174508	0					
ANR	5177610	CompoundStatement		503:13:12026:12026	5174508	0					
ANR	5177611	ExpressionStatement	"a = b = """""	1318:7:30591:30601	5174508	0	True				
ANR	5177612	AssignmentExpression	"a = b = """""		5174508	0		=			
ANR	5177613	Identifier	a		5174508	0					
ANR	5177614	AssignmentExpression	"b = """""		5174508	1		=			
ANR	5177615	Identifier	b		5174508	0					
ANR	5177616	PrimaryExpression	""""""		5174508	1					
ANR	5177617	ExpressionStatement	"printfmt ( ""%s  ; %s"" , a , comment )"	1320:6:30617:30650	5174508	1	True				
ANR	5177618	CallExpression	"printfmt ( ""%s  ; %s"" , a , comment )"		5174508	0					
ANR	5177619	Callee	printfmt		5174508	0					
ANR	5177620	Identifier	printfmt		5174508	0					
ANR	5177621	ArgumentList	"""%s  ; %s"""		5174508	1					
ANR	5177622	Argument	"""%s  ; %s"""		5174508	0					
ANR	5177623	PrimaryExpression	"""%s  ; %s"""		5174508	0					
ANR	5177624	Argument	a		5174508	1					
ANR	5177625	Identifier	a		5174508	0					
ANR	5177626	Argument	comment		5174508	2					
ANR	5177627	Identifier	comment		5174508	0					
ANR	5177628	ExpressionStatement	free ( comment )	1321:6:30658:30672	5174508	2	True				
ANR	5177629	CallExpression	free ( comment )		5174508	0					
ANR	5177630	Callee	free		5174508	0					
ANR	5177631	Identifier	free		5174508	0					
ANR	5177632	ArgumentList	comment		5174508	1					
ANR	5177633	Argument	comment		5174508	0					
ANR	5177634	Identifier	comment		5174508	0					
ANR	5177635	IfStatement	if ( use_align && rowbytes < inc && bytes >= rowbytes )		5174508	6					
ANR	5177636	Condition	use_align && rowbytes < inc && bytes >= rowbytes	1325:7:30699:30746	5174508	0	True				
ANR	5177637	AndExpression	use_align && rowbytes < inc && bytes >= rowbytes		5174508	0		&&			
ANR	5177638	Identifier	use_align		5174508	0					
ANR	5177639	AndExpression	rowbytes < inc && bytes >= rowbytes		5174508	1		&&			
ANR	5177640	RelationalExpression	rowbytes < inc		5174508	0		<			
ANR	5177641	Identifier	rowbytes		5174508	0					
ANR	5177642	Identifier	inc		5174508	1					
ANR	5177643	RelationalExpression	bytes >= rowbytes		5174508	1		>=			
ANR	5177644	Identifier	bytes		5174508	0					
ANR	5177645	Identifier	rowbytes		5174508	1					
ANR	5177646	CompoundStatement		511:57:12193:12193	5174508	1					
ANR	5177647	ExpressionStatement	i -= ( inc - bytes )	1326:4:30755:30773	5174508	0	True				
ANR	5177648	AssignmentExpression	i -= ( inc - bytes )		5174508	0		-=			
ANR	5177649	Identifier	i		5174508	0					
ANR	5177650	AdditiveExpression	inc - bytes		5174508	1		-			
ANR	5177651	Identifier	inc		5174508	0					
ANR	5177652	Identifier	bytes		5174508	1					
ANR	5177653	ExpressionStatement	"printfmt ( ""\\n"" )"	1328:3:30783:30798	5174508	7	True				
ANR	5177654	CallExpression	"printfmt ( ""\\n"" )"		5174508	0					
ANR	5177655	Callee	printfmt		5174508	0					
ANR	5177656	Identifier	printfmt		5174508	0					
ANR	5177657	ArgumentList	"""\\n"""		5174508	1					
ANR	5177658	Argument	"""\\n"""		5174508	0					
ANR	5177659	PrimaryExpression	"""\\n"""		5174508	0					
ANR	5177660	ExpressionStatement	rows ++	1330:2:30806:30812	5174508	10	True				
ANR	5177661	PostIncDecOperationExpression	rows ++		5174508	0					
ANR	5177662	Identifier	rows		5174508	0					
ANR	5177663	IncDec	++		5174508	1					
ANR	5177664	ExpressionStatement	bytes = 0	1331:2:30816:30825	5174508	11	True				
ANR	5177665	AssignmentExpression	bytes = 0		5174508	0		=			
ANR	5177666	Identifier	bytes		5174508	0					
ANR	5177667	PrimaryExpression	0		5174508	1					
ANR	5177668	IfStatement	if ( p && p -> cfmt && * p -> cfmt )		5174508	12					
ANR	5177669	Condition	p && p -> cfmt && * p -> cfmt	1332:6:30833:30856	5174508	0	True				
ANR	5177670	AndExpression	p && p -> cfmt && * p -> cfmt		5174508	0		&&			
ANR	5177671	Identifier	p		5174508	0					
ANR	5177672	AndExpression	p -> cfmt && * p -> cfmt		5174508	1		&&			
ANR	5177673	PtrMemberAccess	p -> cfmt		5174508	0					
ANR	5177674	Identifier	p		5174508	0					
ANR	5177675	Identifier	cfmt		5174508	1					
ANR	5177676	UnaryOperationExpression	* p -> cfmt		5174508	1					
ANR	5177677	UnaryOperator	*		5174508	0					
ANR	5177678	PtrMemberAccess	p -> cfmt		5174508	1					
ANR	5177679	Identifier	p		5174508	0					
ANR	5177680	Identifier	cfmt		5174508	1					
ANR	5177681	CompoundStatement		518:32:12303:12303	5174508	1					
ANR	5177682	IfStatement	if ( row_have_cursor != - 1 )		5174508	0					
ANR	5177683	Condition	row_have_cursor != - 1	1333:7:30868:30888	5174508	0	True				
ANR	5177684	EqualityExpression	row_have_cursor != - 1		5174508	0		!=			
ANR	5177685	Identifier	row_have_cursor		5174508	0					
ANR	5177686	UnaryOperationExpression	- 1		5174508	1					
ANR	5177687	UnaryOperator	-		5174508	0					
ANR	5177688	PrimaryExpression	1		5174508	1					
ANR	5177689	CompoundStatement		520:4:12341:12350	5174508	1					
ANR	5177690	IdentifierDeclStatement	int i = 0 ;	1334:4:30897:30906	5174508	0	True				
ANR	5177691	IdentifierDecl	i = 0		5174508	0					
ANR	5177692	IdentifierDeclType	int		5174508	0					
ANR	5177693	Identifier	i		5174508	1					
ANR	5177694	AssignmentExpression	i = 0		5174508	2		=			
ANR	5177695	Identifier	i		5174508	0					
ANR	5177696	PrimaryExpression	0		5174508	1					
ANR	5177697	ExpressionStatement	"printfmt ( "" _________"" )"	1335:4:30912:30935	5174508	1	True				
ANR	5177698	CallExpression	"printfmt ( "" _________"" )"		5174508	0					
ANR	5177699	Callee	printfmt		5174508	0					
ANR	5177700	Identifier	printfmt		5174508	0					
ANR	5177701	ArgumentList	""" _________"""		5174508	1					
ANR	5177702	Argument	""" _________"""		5174508	0					
ANR	5177703	PrimaryExpression	""" _________"""		5174508	0					
ANR	5177704	IfStatement	if ( ! compact )		5174508	2					
ANR	5177705	Condition	! compact	1336:8:30945:30952	5174508	0	True				
ANR	5177706	UnaryOperationExpression	! compact		5174508	0					
ANR	5177707	UnaryOperator	!		5174508	0					
ANR	5177708	Identifier	compact		5174508	1					
ANR	5177709	CompoundStatement		522:18:12399:12399	5174508	1					
ANR	5177710	ExpressionStatement	"printfmt ( ""_"" )"	1337:5:30962:30976	5174508	0	True				
ANR	5177711	CallExpression	"printfmt ( ""_"" )"		5174508	0					
ANR	5177712	Callee	printfmt		5174508	0					
ANR	5177713	Identifier	printfmt		5174508	0					
ANR	5177714	ArgumentList	"""_"""		5174508	1					
ANR	5177715	Argument	"""_"""		5174508	0					
ANR	5177716	PrimaryExpression	"""_"""		5174508	0					
ANR	5177717	ForStatement	for ( i = 0 ; i < row_have_cursor ; i ++ )		5174508	3					
ANR	5177718	ForInit	i = 0 ;	1339:9:30993:30998	5174508	0	True				
ANR	5177719	AssignmentExpression	i = 0		5174508	0		=			
ANR	5177720	Identifier	i		5174508	0					
ANR	5177721	PrimaryExpression	0		5174508	1					
ANR	5177722	Condition	i < row_have_cursor	1339:16:31000:31018	5174508	1	True				
ANR	5177723	RelationalExpression	i < row_have_cursor		5174508	0		<			
ANR	5177724	Identifier	i		5174508	0					
ANR	5177725	Identifier	row_have_cursor		5174508	1					
ANR	5177726	PostIncDecOperationExpression	i ++	1339:37:31021:31023	5174508	2	True				
ANR	5177727	Identifier	i		5174508	0					
ANR	5177728	IncDec	++		5174508	1					
ANR	5177729	CompoundStatement		525:42:12470:12470	5174508	3					
ANR	5177730	IfStatement	if ( ! pairs || ( ! compact && i % 2 ) )		5174508	0					
ANR	5177731	Condition	! pairs || ( ! compact && i % 2 )	1340:9:31037:31065	5174508	0	True				
ANR	5177732	OrExpression	! pairs || ( ! compact && i % 2 )		5174508	0		||			
ANR	5177733	UnaryOperationExpression	! pairs		5174508	0					
ANR	5177734	UnaryOperator	!		5174508	0					
ANR	5177735	Identifier	pairs		5174508	1					
ANR	5177736	AndExpression	! compact && i % 2		5174508	1		&&			
ANR	5177737	UnaryOperationExpression	! compact		5174508	0					
ANR	5177738	UnaryOperator	!		5174508	0					
ANR	5177739	Identifier	compact		5174508	1					
ANR	5177740	MultiplicativeExpression	i % 2		5174508	1		%			
ANR	5177741	Identifier	i		5174508	0					
ANR	5177742	PrimaryExpression	2		5174508	1					
ANR	5177743	CompoundStatement		526:40:12512:12512	5174508	1					
ANR	5177744	ExpressionStatement	"printfmt ( ""___"" )"	1341:6:31076:31092	5174508	0	True				
ANR	5177745	CallExpression	"printfmt ( ""___"" )"		5174508	0					
ANR	5177746	Callee	printfmt		5174508	0					
ANR	5177747	Identifier	printfmt		5174508	0					
ANR	5177748	ArgumentList	"""___"""		5174508	1					
ANR	5177749	Argument	"""___"""		5174508	0					
ANR	5177750	PrimaryExpression	"""___"""		5174508	0					
ANR	5177751	ElseStatement	else		5174508	0					
ANR	5177752	CompoundStatement		528:12:12550:12550	5174508	0					
ANR	5177753	ExpressionStatement	"printfmt ( ""__"" )"	1343:6:31114:31129	5174508	0	True				
ANR	5177754	CallExpression	"printfmt ( ""__"" )"		5174508	0					
ANR	5177755	Callee	printfmt		5174508	0					
ANR	5177756	Identifier	printfmt		5174508	0					
ANR	5177757	ArgumentList	"""__"""		5174508	1					
ANR	5177758	Argument	"""__"""		5174508	0					
ANR	5177759	PrimaryExpression	"""__"""		5174508	0					
ANR	5177760	ExpressionStatement	"printfmt ( ""__|\\n"" )"	1346:4:31148:31166	5174508	4	True				
ANR	5177761	CallExpression	"printfmt ( ""__|\\n"" )"		5174508	0					
ANR	5177762	Callee	printfmt		5174508	0					
ANR	5177763	Identifier	printfmt		5174508	0					
ANR	5177764	ArgumentList	"""__|\\n"""		5174508	1					
ANR	5177765	Argument	"""__|\\n"""		5174508	0					
ANR	5177766	PrimaryExpression	"""__|\\n"""		5174508	0					
ANR	5177767	ExpressionStatement	"printfmt ( ""| cmd.hexcursor = %s\\n"" , p -> cfmt )"	1347:4:31172:31216	5174508	5	True				
ANR	5177768	CallExpression	"printfmt ( ""| cmd.hexcursor = %s\\n"" , p -> cfmt )"		5174508	0					
ANR	5177769	Callee	printfmt		5174508	0					
ANR	5177770	Identifier	printfmt		5174508	0					
ANR	5177771	ArgumentList	"""| cmd.hexcursor = %s\\n"""		5174508	1					
ANR	5177772	Argument	"""| cmd.hexcursor = %s\\n"""		5174508	0					
ANR	5177773	PrimaryExpression	"""| cmd.hexcursor = %s\\n"""		5174508	0					
ANR	5177774	Argument	p -> cfmt		5174508	1					
ANR	5177775	PtrMemberAccess	p -> cfmt		5174508	0					
ANR	5177776	Identifier	p		5174508	0					
ANR	5177777	Identifier	cfmt		5174508	1					
ANR	5177778	Statement	p	1348:4:31222:31222	5174508	6	True				
ANR	5177779	Statement	->	1348:5:31223:31224	5174508	7	True				
ANR	5177780	Statement	coreb	1348:7:31225:31229	5174508	8	True				
ANR	5177781	Statement	.	1348:12:31230:31230	5174508	9	True				
ANR	5177782	Statement	cmdf	1348:13:31231:31234	5174508	10	True				
ANR	5177783	Statement	(	1348:18:31236:31236	5174508	11	True				
ANR	5177784	Statement	p	1348:19:31237:31237	5174508	12	True				
ANR	5177785	Statement	->	1348:20:31238:31239	5174508	13	True				
ANR	5177786	Statement	coreb	1348:22:31240:31244	5174508	14	True				
ANR	5177787	Statement	.	1348:27:31245:31245	5174508	15	True				
ANR	5177788	Statement	core	1348:28:31246:31249	5174508	16	True				
ANR	5177789	Statement	","	1348:32:31250:31250	5174508	17	True				
ANR	5177790	Statement	"""%s @ 0x%08"""	1349:6:31258:31269	5174508	18	True				
ANR	5177791	Statement	PFMT64x	1349:18:31270:31276	5174508	19	True				
ANR	5177792	Statement	","	1349:25:31277:31277	5174508	20	True				
ANR	5177793	Statement	p	1349:27:31279:31279	5174508	21	True				
ANR	5177794	Statement	->	1349:28:31280:31281	5174508	22	True				
ANR	5177795	Statement	cfmt	1349:30:31282:31285	5174508	23	True				
ANR	5177796	Statement	","	1349:34:31286:31286	5174508	24	True				
ANR	5177797	Statement	row_have_addr	1349:36:31288:31300	5174508	25	True				
ANR	5177798	Statement	)	1349:49:31301:31301	5174508	26	True				
ANR	5177799	ExpressionStatement		1349:50:31302:31302	5174508	27	True				
ANR	5177800	ReturnType	R_API void		5174508	1					
ANR	5177801	Identifier	r_print_hexdump		5174508	2					
ANR	5177802	ParameterList	"RPrint * p , ut64 addr , const ut8 * buf , int len , int base , int step , int zoomsz"		5174508	3					
ANR	5177803	Parameter	RPrint * p	815:27:18476:18484	5174508	0	True				
ANR	5177804	ParameterType	RPrint *		5174508	0					
ANR	5177805	Identifier	p		5174508	1					
ANR	5177806	Parameter	ut64 addr	815:38:18487:18495	5174508	1	True				
ANR	5177807	ParameterType	ut64		5174508	0					
ANR	5177808	Identifier	addr		5174508	1					
ANR	5177809	Parameter	const ut8 * buf	815:49:18498:18511	5174508	2	True				
ANR	5177810	ParameterType	const ut8 *		5174508	0					
ANR	5177811	Identifier	buf		5174508	1					
ANR	5177812	Parameter	int len	815:65:18514:18520	5174508	3	True				
ANR	5177813	ParameterType	int		5174508	0					
ANR	5177814	Identifier	len		5174508	1					
ANR	5177815	Parameter	int base	815:74:18523:18530	5174508	4	True				
ANR	5177816	ParameterType	int		5174508	0					
ANR	5177817	Identifier	base		5174508	1					
ANR	5177818	Parameter	int step	815:84:18533:18540	5174508	5	True				
ANR	5177819	ParameterType	int		5174508	0					
ANR	5177820	Identifier	step		5174508	1					
ANR	5177821	Parameter	int zoomsz	815:94:18543:18552	5174508	6	True				
ANR	5177822	ParameterType	int		5174508	0					
ANR	5177823	Identifier	zoomsz		5174508	1					
ANR	5177824	CFGEntryNode	ENTRY		5174508		True				
ANR	5177825	CFGExitNode	EXIT		5174508		True				
ANR	5177826	Symbol	eol		5174508						
ANR	5177827	Symbol	hl		5174508						
ANR	5177828	Symbol	zoomsz		5174508						
ANR	5177829	Symbol	r_print_cursor_pointer		5174508						
ANR	5177830	Symbol	delta		5174508						
ANR	5177831	Symbol	r_read_ble8		5174508						
ANR	5177832	Symbol	stride		5174508						
ANR	5177833	Symbol	use_unalloc		5174508						
ANR	5177834	Symbol	p -> stride		5174508						
ANR	5177835	Symbol	* rstr		5174508						
ANR	5177836	Symbol	R_PRINT_FLAGS_NONASCII		5174508						
ANR	5177837	Symbol	len		5174508						
ANR	5177838	Symbol	rowbytes		5174508						
ANR	5177839	Symbol	p -> offname		5174508						
ANR	5177840	Symbol	hex		5174508						
ANR	5177841	Symbol	* p -> cons		5174508						
ANR	5177842	Symbol	isPxr		5174508						
ANR	5177843	Symbol	p -> cols		5174508						
ANR	5177844	Symbol	use_segoff		5174508						
ANR	5177845	Symbol	p -> iob . addr_is_mapped		5174508						
ANR	5177846	Symbol	* buf		5174508						
ANR	5177847	Symbol	R_PRINT_FLAGS_HDROFF		5174508						
ANR	5177848	Symbol	p -> iob . is_valid_offset		5174508						
ANR	5177849	Symbol	soff		5174508						
ANR	5177850	Symbol	oPrintValue		5174508						
ANR	5177851	Symbol	dbl_ch_str		5174508						
ANR	5177852	Symbol	* * * p		5174508						
ANR	5177853	Symbol	R_PRINT_FLAGS_REFS		5174508						
ANR	5177854	Symbol	at		5174508						
ANR	5177855	Symbol	p -> iob		5174508						
ANR	5177856	Symbol	* p -> cfmt		5174508						
ANR	5177857	Symbol	left		5174508						
ANR	5177858	Symbol	* p -> cons -> context		5174508						
ANR	5177859	Symbol	use_hexa		5174508						
ANR	5177860	Symbol	Color_RESET		5174508						
ANR	5177861	Symbol	rstr		5174508						
ANR	5177862	Symbol	K		5174508						
ANR	5177863	Symbol	p -> interrupt		5174508						
ANR	5177864	Symbol	R_PRINT_FLAGS_SEGOFF		5174508						
ANR	5177865	Symbol	sparse_char		5174508						
ANR	5177866	Symbol	R_PRINT_FLAGS_COLOR		5174508						
ANR	5177867	Symbol	Color_INVERT		5174508						
ANR	5177868	Symbol	* * p		5174508						
ANR	5177869	Symbol	r_read_ble32		5174508						
ANR	5177870	Symbol	a		5174508						
ANR	5177871	Symbol	b		5174508						
ANR	5177872	Symbol	R_PRINT_FLAGS_STYLE		5174508						
ANR	5177873	Symbol	c		5174508						
ANR	5177874	Symbol	ch		5174508						
ANR	5177875	Symbol	sz		5174508						
ANR	5177876	Symbol	r_read_ble16		5174508						
ANR	5177877	Symbol	i		5174508						
ANR	5177878	Symbol	mustspace		5174508						
ANR	5177879	Symbol	j		5174508						
ANR	5177880	Symbol	R_MIN		5174508						
ANR	5177881	Symbol	k		5174508						
ANR	5177882	Symbol	n		5174508						
ANR	5177883	Symbol	off		5174508						
ANR	5177884	Symbol	p		5174508						
ANR	5177885	Symbol	buf		5174508						
ANR	5177886	Symbol	s		5174508						
ANR	5177887	Symbol	w		5174508						
ANR	5177888	Symbol	p -> flags		5174508						
ANR	5177889	Symbol	* hex		5174508						
ANR	5177890	Symbol	printValue		5174508						
ANR	5177891	Symbol	color_title		5174508						
ANR	5177892	Symbol	p -> user		5174508						
ANR	5177893	Symbol	UT32_MAX		5174508						
ANR	5177894	Symbol	col		5174508						
ANR	5177895	Symbol	compact		5174508						
ANR	5177896	Symbol	p -> cons -> context -> pal . ai_unmap		5174508						
ANR	5177897	Symbol	use_offset		5174508						
ANR	5177898	Symbol	use_pair		5174508						
ANR	5177899	Symbol	pairs		5174508						
ANR	5177900	Symbol	R_PRINT_FLAGS_NONHEX		5174508						
ANR	5177901	Symbol	space		5174508						
ANR	5177902	Symbol	use_header		5174508						
ANR	5177903	Symbol	p -> iob . io		5174508						
ANR	5177904	Symbol	* foo		5174508						
ANR	5177905	Symbol	strlen		5174508						
ANR	5177906	Symbol	p -> use_comments		5174508						
ANR	5177907	Symbol	p -> hasrefs		5174508						
ANR	5177908	Symbol	p -> offsize		5174508						
ANR	5177909	Symbol	* * p -> cons		5174508						
ANR	5177910	Symbol	R_PRINT_FLAGS_ALIGN		5174508						
ANR	5177911	Symbol	p -> seggrn		5174508						
ANR	5177912	Symbol	R_PRINT_FLAGS_UNALLOC		5174508						
ANR	5177913	Symbol	sz_n		5174508						
ANR	5177914	Symbol	pre		5174508						
ANR	5177915	Symbol	p -> pairs		5174508						
ANR	5177916	Symbol	NULL		5174508						
ANR	5177917	Symbol	use_align		5174508						
ANR	5177918	Symbol	bytefmt		5174508						
ANR	5177919	Symbol	p -> cons -> context -> pal		5174508						
ANR	5177920	Symbol	row_have_addr		5174508						
ANR	5177921	Symbol	p -> io_unalloc_ch		5174508						
ANR	5177922	Symbol	use_hdroff		5174508						
ANR	5177923	Symbol	p -> get_comments		5174508						
ANR	5177924	Symbol	true		5174508						
ANR	5177925	Symbol	hex_style		5174508						
ANR	5177926	Symbol	printfmt		5174508						
ANR	5177927	Symbol	p -> wide_offsets		5174508						
ANR	5177928	Symbol	color		5174508						
ANR	5177929	Symbol	hasNull		5174508						
ANR	5177930	Symbol	p -> cons -> context -> breaked		5174508						
ANR	5177931	Symbol	foo		5174508						
ANR	5177932	Symbol	printf		5174508						
ANR	5177933	Symbol	p -> col		5174508						
ANR	5177934	Symbol	* K		5174508						
ANR	5177935	Symbol	R_PRINT_FLAGS_OFFSET		5174508						
ANR	5177936	Symbol	checkSparse		5174508						
ANR	5177937	Symbol	addr		5174508						
ANR	5177938	Symbol	p -> cons		5174508						
ANR	5177939	Symbol	UT64_MAX		5174508						
ANR	5177940	Symbol	inc		5174508						
ANR	5177941	Symbol	R_PRINT_FLAGS_HEADER		5174508						
ANR	5177942	Symbol	p -> cb_printf		5174508						
ANR	5177943	Symbol	p -> cfmt		5174508						
ANR	5177944	Symbol	false		5174508						
ANR	5177945	Symbol	R_PRINT_FLAGS_COMPACT		5174508						
ANR	5177946	Symbol	* a		5174508						
ANR	5177947	Symbol	R_PRINT_FLAGS_SPARSE		5174508						
ANR	5177948	Symbol	rows		5174508						
ANR	5177949	Symbol	opad		5174508						
ANR	5177950	Symbol	row_have_cursor		5174508						
ANR	5177951	Symbol	use_sparse		5174508						
ANR	5177952	Symbol	p -> colorfor		5174508						
ANR	5177953	Symbol	last_sparse		5174508						
ANR	5177954	Symbol	* i		5174508						
ANR	5177955	Symbol	p -> big_endian		5174508						
ANR	5177956	Symbol	* j		5174508						
ANR	5177957	Symbol	& n		5174508						
ANR	5177958	Symbol	* k		5174508						
ANR	5177959	Symbol	bytes		5174508						
ANR	5177960	Symbol	step		5174508						
ANR	5177961	Symbol	* p		5174508						
ANR	5177962	Symbol	comment		5174508						
ANR	5177963	Symbol	p -> cons -> context		5174508						
ANR	5177964	Symbol	r_read_ble64		5174508						
ANR	5177965	Symbol	base		5174508						
ANR	5177966	Function	r_print_hexdump_simple	1355:0:31319:31429							
ANR	5177967	FunctionDef	"r_print_hexdump_simple (const ut8 * buf , int len)"		5177966	0					
ANR	5177968	CompoundStatement		1355:59:31378:31429	5177966	0					
ANR	5177969	ExpressionStatement	"r_print_hexdump ( NULL , 0 , buf , len , 16 , 16 , 0 )"	1356:1:31381:31427	5177966	0	True				
ANR	5177970	CallExpression	"r_print_hexdump ( NULL , 0 , buf , len , 16 , 16 , 0 )"		5177966	0					
ANR	5177971	Callee	r_print_hexdump		5177966	0					
ANR	5177972	Identifier	r_print_hexdump		5177966	0					
ANR	5177973	ArgumentList	NULL		5177966	1					
ANR	5177974	Argument	NULL		5177966	0					
ANR	5177975	Identifier	NULL		5177966	0					
ANR	5177976	Argument	0		5177966	1					
ANR	5177977	PrimaryExpression	0		5177966	0					
ANR	5177978	Argument	buf		5177966	2					
ANR	5177979	Identifier	buf		5177966	0					
ANR	5177980	Argument	len		5177966	3					
ANR	5177981	Identifier	len		5177966	0					
ANR	5177982	Argument	16		5177966	4					
ANR	5177983	PrimaryExpression	16		5177966	0					
ANR	5177984	Argument	16		5177966	5					
ANR	5177985	PrimaryExpression	16		5177966	0					
ANR	5177986	Argument	0		5177966	6					
ANR	5177987	PrimaryExpression	0		5177966	0					
ANR	5177988	ReturnType	R_API void		5177966	1					
ANR	5177989	Identifier	r_print_hexdump_simple		5177966	2					
ANR	5177990	ParameterList	"const ut8 * buf , int len"		5177966	3					
ANR	5177991	Parameter	const ut8 * buf	1355:34:31353:31366	5177966	0	True				
ANR	5177992	ParameterType	const ut8 *		5177966	0					
ANR	5177993	Identifier	buf		5177966	1					
ANR	5177994	Parameter	int len	1355:50:31369:31375	5177966	1	True				
ANR	5177995	ParameterType	int		5177966	0					
ANR	5177996	Identifier	len		5177966	1					
ANR	5177997	CFGEntryNode	ENTRY		5177966		True				
ANR	5177998	CFGExitNode	EXIT		5177966		True				
ANR	5177999	Symbol	buf		5177966						
ANR	5178000	Symbol	NULL		5177966						
ANR	5178001	Symbol	len		5177966						
ANR	5178002	Function	getbytediff	1359:0:31432:31754							
ANR	5178003	FunctionDef	"getbytediff (RPrint * p , char * fmt , ut8 a , ut8 b)"		5178002	0					
ANR	5178004	CompoundStatement		1359:67:31499:31754	5178002	0					
ANR	5178005	IfStatement	if ( * fmt )		5178002	0					
ANR	5178006	Condition	* fmt	1360:5:31506:31509	5178002	0	True				
ANR	5178007	UnaryOperationExpression	* fmt		5178002	0					
ANR	5178008	UnaryOperator	*		5178002	0					
ANR	5178009	Identifier	fmt		5178002	1					
ANR	5178010	CompoundStatement		2:11:12:12	5178002	1					
ANR	5178011	IfStatement	if ( a == b )		5178002	0					
ANR	5178012	Condition	a == b	1361:6:31520:31525	5178002	0	True				
ANR	5178013	EqualityExpression	a == b		5178002	0		==			
ANR	5178014	Identifier	a		5178002	0					
ANR	5178015	Identifier	b		5178002	1					
ANR	5178016	CompoundStatement		3:14:28:28	5178002	1					
ANR	5178017	Statement	sprintf	1362:3:31533:31539	5178002	0	True				
ANR	5178018	Statement	(	1362:11:31541:31541	5178002	1	True				
ANR	5178019	Statement	fmt	1362:12:31542:31544	5178002	2	True				
ANR	5178020	Statement	","	1362:15:31545:31545	5178002	3	True				
ANR	5178021	Statement	"""%s%02x"""	1362:17:31547:31554	5178002	4	True				
ANR	5178022	Statement	Color_RESET	1362:26:31556:31566	5178002	5	True				
ANR	5178023	Statement	","	1362:37:31567:31567	5178002	6	True				
ANR	5178024	Statement	p	1362:39:31569:31569	5178002	7	True				
ANR	5178025	Statement	->	1362:40:31570:31571	5178002	8	True				
ANR	5178026	Statement	cons	1362:42:31572:31575	5178002	9	True				
ANR	5178027	Statement	->	1362:46:31576:31577	5178002	10	True				
ANR	5178028	Statement	context	1362:48:31578:31584	5178002	11	True				
ANR	5178029	Statement	->	1362:55:31585:31586	5178002	12	True				
ANR	5178030	Statement	pal	1362:57:31587:31589	5178002	13	True				
ANR	5178031	Statement	.	1362:60:31590:31590	5178002	14	True				
ANR	5178032	Statement	graph_true	1362:61:31591:31600	5178002	15	True				
ANR	5178033	Statement	","	1362:71:31601:31601	5178002	16	True				
ANR	5178034	Statement	a	1362:73:31603:31603	5178002	17	True				
ANR	5178035	Statement	)	1362:74:31604:31604	5178002	18	True				
ANR	5178036	ExpressionStatement		1362:75:31605:31605	5178002	19	True				
ANR	5178037	ElseStatement	else		5178002	0					
ANR	5178038	CompoundStatement		5:9:116:116	5178002	0					
ANR	5178039	Statement	sprintf	1364:3:31621:31627	5178002	0	True				
ANR	5178040	Statement	(	1364:11:31629:31629	5178002	1	True				
ANR	5178041	Statement	fmt	1364:12:31630:31632	5178002	2	True				
ANR	5178042	Statement	","	1364:15:31633:31633	5178002	3	True				
ANR	5178043	Statement	"""%s%02x"""	1364:17:31635:31642	5178002	4	True				
ANR	5178044	Statement	Color_RESET	1364:26:31644:31654	5178002	5	True				
ANR	5178045	Statement	","	1364:37:31655:31655	5178002	6	True				
ANR	5178046	Statement	p	1364:39:31657:31657	5178002	7	True				
ANR	5178047	Statement	->	1364:40:31658:31659	5178002	8	True				
ANR	5178048	Statement	cons	1364:42:31660:31663	5178002	9	True				
ANR	5178049	Statement	->	1364:46:31664:31665	5178002	10	True				
ANR	5178050	Statement	context	1364:48:31666:31672	5178002	11	True				
ANR	5178051	Statement	->	1364:55:31673:31674	5178002	12	True				
ANR	5178052	Statement	pal	1364:57:31675:31677	5178002	13	True				
ANR	5178053	Statement	.	1364:60:31678:31678	5178002	14	True				
ANR	5178054	Statement	graph_false	1364:61:31679:31689	5178002	15	True				
ANR	5178055	Statement	","	1364:72:31690:31690	5178002	16	True				
ANR	5178056	Statement	a	1364:74:31692:31692	5178002	17	True				
ANR	5178057	Statement	)	1364:75:31693:31693	5178002	18	True				
ANR	5178058	ExpressionStatement		1364:76:31694:31694	5178002	19	True				
ANR	5178059	ElseStatement	else		5178002	0					
ANR	5178060	CompoundStatement		8:8:208:208	5178002	0					
ANR	5178061	ExpressionStatement	"sprintf ( fmt , ""%02x"" , a )"	1367:2:31712:31736	5178002	0	True				
ANR	5178062	CallExpression	"sprintf ( fmt , ""%02x"" , a )"		5178002	0					
ANR	5178063	Callee	sprintf		5178002	0					
ANR	5178064	Identifier	sprintf		5178002	0					
ANR	5178065	ArgumentList	fmt		5178002	1					
ANR	5178066	Argument	fmt		5178002	0					
ANR	5178067	Identifier	fmt		5178002	0					
ANR	5178068	Argument	"""%02x"""		5178002	1					
ANR	5178069	PrimaryExpression	"""%02x"""		5178002	0					
ANR	5178070	Argument	a		5178002	2					
ANR	5178071	Identifier	a		5178002	0					
ANR	5178072	ReturnStatement	return fmt ;	1369:1:31742:31752	5178002	1	True				
ANR	5178073	Identifier	fmt		5178002	0					
ANR	5178074	ReturnType	static const char *		5178002	1					
ANR	5178075	Identifier	getbytediff		5178002	2					
ANR	5178076	ParameterList	"RPrint * p , char * fmt , ut8 a , ut8 b"		5178002	3					
ANR	5178077	Parameter	RPrint * p	1359:31:31463:31471	5178002	0	True				
ANR	5178078	ParameterType	RPrint *		5178002	0					
ANR	5178079	Identifier	p		5178002	1					
ANR	5178080	Parameter	char * fmt	1359:42:31474:31482	5178002	1	True				
ANR	5178081	ParameterType	char *		5178002	0					
ANR	5178082	Identifier	fmt		5178002	1					
ANR	5178083	Parameter	ut8 a	1359:53:31485:31489	5178002	2	True				
ANR	5178084	ParameterType	ut8		5178002	0					
ANR	5178085	Identifier	a		5178002	1					
ANR	5178086	Parameter	ut8 b	1359:60:31492:31496	5178002	3	True				
ANR	5178087	ParameterType	ut8		5178002	0					
ANR	5178088	Identifier	b		5178002	1					
ANR	5178089	CFGEntryNode	ENTRY		5178002		True				
ANR	5178090	CFGExitNode	EXIT		5178002		True				
ANR	5178091	Symbol	p		5178002						
ANR	5178092	Symbol	a		5178002						
ANR	5178093	Symbol	b		5178002						
ANR	5178094	Symbol	* fmt		5178002						
ANR	5178095	Symbol	fmt		5178002						
ANR	5178096	Function	getchardiff	1372:0:31757:32148							
ANR	5178097	FunctionDef	"getchardiff (RPrint * p , char * fmt , ut8 a , ut8 b)"		5178096	0					
ANR	5178098	CompoundStatement		1372:67:31824:32148	5178096	0					
ANR	5178099	IdentifierDeclStatement	char ch = IS_PRINTABLE ( a ) ? a : '.' ;	1373:1:31827:31861	5178096	0	True				
ANR	5178100	IdentifierDecl	ch = IS_PRINTABLE ( a ) ? a : '.'		5178096	0					
ANR	5178101	IdentifierDeclType	char		5178096	0					
ANR	5178102	Identifier	ch		5178096	1					
ANR	5178103	AssignmentExpression	ch = IS_PRINTABLE ( a ) ? a : '.'		5178096	2		=			
ANR	5178104	Identifier	ch		5178096	0					
ANR	5178105	ConditionalExpression	IS_PRINTABLE ( a ) ? a : '.'		5178096	1					
ANR	5178106	Condition	IS_PRINTABLE ( a )		5178096	0					
ANR	5178107	CallExpression	IS_PRINTABLE ( a )		5178096	0					
ANR	5178108	Callee	IS_PRINTABLE		5178096	0					
ANR	5178109	Identifier	IS_PRINTABLE		5178096	0					
ANR	5178110	ArgumentList	a		5178096	1					
ANR	5178111	Argument	a		5178096	0					
ANR	5178112	Identifier	a		5178096	0					
ANR	5178113	Identifier	a		5178096	1					
ANR	5178114	PrimaryExpression	'.'		5178096	2					
ANR	5178115	IfStatement	if ( * fmt )		5178096	1					
ANR	5178116	Condition	* fmt	1374:5:31868:31871	5178096	0	True				
ANR	5178117	UnaryOperationExpression	* fmt		5178096	0					
ANR	5178118	UnaryOperator	*		5178096	0					
ANR	5178119	Identifier	fmt		5178096	1					
ANR	5178120	CompoundStatement		3:11:49:49	5178096	1					
ANR	5178121	IfStatement	if ( a == b )		5178096	0					
ANR	5178122	Condition	a == b	1375:6:31882:31887	5178096	0	True				
ANR	5178123	EqualityExpression	a == b		5178096	0		==			
ANR	5178124	Identifier	a		5178096	0					
ANR	5178125	Identifier	b		5178096	1					
ANR	5178126	CompoundStatement		4:14:65:65	5178096	1					
ANR	5178127	Statement	sprintf	1376:3:31895:31901	5178096	0	True				
ANR	5178128	Statement	(	1376:11:31903:31903	5178096	1	True				
ANR	5178129	Statement	fmt	1376:12:31904:31906	5178096	2	True				
ANR	5178130	Statement	","	1376:15:31907:31907	5178096	3	True				
ANR	5178131	Statement	"""%s%c"""	1376:17:31909:31914	5178096	4	True				
ANR	5178132	Statement	Color_RESET	1376:24:31916:31926	5178096	5	True				
ANR	5178133	Statement	","	1376:35:31927:31927	5178096	6	True				
ANR	5178134	Statement	p	1376:37:31929:31929	5178096	7	True				
ANR	5178135	Statement	->	1376:38:31930:31931	5178096	8	True				
ANR	5178136	Statement	cons	1376:40:31932:31935	5178096	9	True				
ANR	5178137	Statement	->	1376:44:31936:31937	5178096	10	True				
ANR	5178138	Statement	context	1376:46:31938:31944	5178096	11	True				
ANR	5178139	Statement	->	1376:53:31945:31946	5178096	12	True				
ANR	5178140	Statement	pal	1376:55:31947:31949	5178096	13	True				
ANR	5178141	Statement	.	1376:58:31950:31950	5178096	14	True				
ANR	5178142	Statement	graph_true	1376:59:31951:31960	5178096	15	True				
ANR	5178143	Statement	","	1376:69:31961:31961	5178096	16	True				
ANR	5178144	Statement	ch	1376:71:31963:31964	5178096	17	True				
ANR	5178145	Statement	)	1376:73:31965:31965	5178096	18	True				
ANR	5178146	ExpressionStatement		1376:74:31966:31966	5178096	19	True				
ANR	5178147	ElseStatement	else		5178096	0					
ANR	5178148	CompoundStatement		6:9:152:152	5178096	0					
ANR	5178149	Statement	sprintf	1378:3:31982:31988	5178096	0	True				
ANR	5178150	Statement	(	1378:11:31990:31990	5178096	1	True				
ANR	5178151	Statement	fmt	1378:12:31991:31993	5178096	2	True				
ANR	5178152	Statement	","	1378:15:31994:31994	5178096	3	True				
ANR	5178153	Statement	"""%s%c"""	1378:17:31996:32001	5178096	4	True				
ANR	5178154	Statement	Color_RESET	1378:24:32003:32013	5178096	5	True				
ANR	5178155	Statement	","	1378:35:32014:32014	5178096	6	True				
ANR	5178156	Statement	p	1378:37:32016:32016	5178096	7	True				
ANR	5178157	Statement	->	1378:38:32017:32018	5178096	8	True				
ANR	5178158	Statement	cons	1378:40:32019:32022	5178096	9	True				
ANR	5178159	Statement	->	1378:44:32023:32024	5178096	10	True				
ANR	5178160	Statement	context	1378:46:32025:32031	5178096	11	True				
ANR	5178161	Statement	->	1378:53:32032:32033	5178096	12	True				
ANR	5178162	Statement	pal	1378:55:32034:32036	5178096	13	True				
ANR	5178163	Statement	.	1378:58:32037:32037	5178096	14	True				
ANR	5178164	Statement	graph_false	1378:59:32038:32048	5178096	15	True				
ANR	5178165	Statement	","	1378:70:32049:32049	5178096	16	True				
ANR	5178166	Statement	ch	1378:72:32051:32052	5178096	17	True				
ANR	5178167	Statement	)	1378:74:32053:32053	5178096	18	True				
ANR	5178168	ExpressionStatement		1378:75:32054:32054	5178096	19	True				
ANR	5178169	ElseStatement	else		5178096	0					
ANR	5178170	CompoundStatement		9:8:243:243	5178096	0					
ANR	5178171	ExpressionStatement	"sprintf ( fmt , ""%c"" , ch )"	1381:2:32072:32095	5178096	0	True				
ANR	5178172	CallExpression	"sprintf ( fmt , ""%c"" , ch )"		5178096	0					
ANR	5178173	Callee	sprintf		5178096	0					
ANR	5178174	Identifier	sprintf		5178096	0					
ANR	5178175	ArgumentList	fmt		5178096	1					
ANR	5178176	Argument	fmt		5178096	0					
ANR	5178177	Identifier	fmt		5178096	0					
ANR	5178178	Argument	"""%c"""		5178096	1					
ANR	5178179	PrimaryExpression	"""%c"""		5178096	0					
ANR	5178180	Argument	ch		5178096	2					
ANR	5178181	Identifier	ch		5178096	0					
ANR	5178182	ReturnStatement	return fmt ;	1384:1:32136:32146	5178096	2	True				
ANR	5178183	Identifier	fmt		5178096	0					
ANR	5178184	ReturnType	static const char *		5178096	1					
ANR	5178185	Identifier	getchardiff		5178096	2					
ANR	5178186	ParameterList	"RPrint * p , char * fmt , ut8 a , ut8 b"		5178096	3					
ANR	5178187	Parameter	RPrint * p	1372:31:31788:31796	5178096	0	True				
ANR	5178188	ParameterType	RPrint *		5178096	0					
ANR	5178189	Identifier	p		5178096	1					
ANR	5178190	Parameter	char * fmt	1372:42:31799:31807	5178096	1	True				
ANR	5178191	ParameterType	char *		5178096	0					
ANR	5178192	Identifier	fmt		5178096	1					
ANR	5178193	Parameter	ut8 a	1372:53:31810:31814	5178096	2	True				
ANR	5178194	ParameterType	ut8		5178096	0					
ANR	5178195	Identifier	a		5178096	1					
ANR	5178196	Parameter	ut8 b	1372:60:31817:31821	5178096	3	True				
ANR	5178197	ParameterType	ut8		5178096	0					
ANR	5178198	Identifier	b		5178096	1					
ANR	5178199	CFGEntryNode	ENTRY		5178096		True				
ANR	5178200	CFGExitNode	EXIT		5178096		True				
ANR	5178201	Symbol	p		5178096						
ANR	5178202	Symbol	a		5178096						
ANR	5178203	Symbol	b		5178096						
ANR	5178204	Symbol	IS_PRINTABLE		5178096						
ANR	5178205	Symbol	ch		5178096						
ANR	5178206	Symbol	* fmt		5178096						
ANR	5178207	Symbol	fmt		5178096						
ANR	5178208	Function	M	1390:0:32276:32434							
ANR	5178209	FunctionDef	"M (const ut8 * b , int len)"		5178208	0					
ANR	5178210	CompoundStatement		1390:37:32313:32434	5178208	0					
ANR	5178211	IdentifierDeclStatement	ut8 * r = malloc ( len + 16 ) ;	1391:1:32316:32342	5178208	0	True				
ANR	5178212	IdentifierDecl	* r = malloc ( len + 16 )		5178208	0					
ANR	5178213	IdentifierDeclType	ut8 *		5178208	0					
ANR	5178214	Identifier	r		5178208	1					
ANR	5178215	AssignmentExpression	* r = malloc ( len + 16 )		5178208	2		=			
ANR	5178216	Identifier	r		5178208	0					
ANR	5178217	CallExpression	malloc ( len + 16 )		5178208	1					
ANR	5178218	Callee	malloc		5178208	0					
ANR	5178219	Identifier	malloc		5178208	0					
ANR	5178220	ArgumentList	len + 16		5178208	1					
ANR	5178221	Argument	len + 16		5178208	0					
ANR	5178222	AdditiveExpression	len + 16		5178208	0		+			
ANR	5178223	Identifier	len		5178208	0					
ANR	5178224	PrimaryExpression	16		5178208	1					
ANR	5178225	IfStatement	if ( ! r )		5178208	1					
ANR	5178226	Condition	! r	1392:5:32349:32350	5178208	0	True				
ANR	5178227	UnaryOperationExpression	! r		5178208	0					
ANR	5178228	UnaryOperator	!		5178208	0					
ANR	5178229	Identifier	r		5178208	1					
ANR	5178230	CompoundStatement		3:9:39:39	5178208	1					
ANR	5178231	ReturnStatement	return NULL ;	1393:2:32357:32368	5178208	0	True				
ANR	5178232	Identifier	NULL		5178208	0					
ANR	5178233	ExpressionStatement	"memset ( r , 0xff , len + 16 )"	1395:1:32374:32400	5178208	2	True				
ANR	5178234	CallExpression	"memset ( r , 0xff , len + 16 )"		5178208	0					
ANR	5178235	Callee	memset		5178208	0					
ANR	5178236	Identifier	memset		5178208	0					
ANR	5178237	ArgumentList	r		5178208	1					
ANR	5178238	Argument	r		5178208	0					
ANR	5178239	Identifier	r		5178208	0					
ANR	5178240	Argument	0xff		5178208	1					
ANR	5178241	PrimaryExpression	0xff		5178208	0					
ANR	5178242	Argument	len + 16		5178208	2					
ANR	5178243	AdditiveExpression	len + 16		5178208	0		+			
ANR	5178244	Identifier	len		5178208	0					
ANR	5178245	PrimaryExpression	16		5178208	1					
ANR	5178246	ExpressionStatement	"memcpy ( r , b , len )"	1396:1:32403:32421	5178208	3	True				
ANR	5178247	CallExpression	"memcpy ( r , b , len )"		5178208	0					
ANR	5178248	Callee	memcpy		5178208	0					
ANR	5178249	Identifier	memcpy		5178208	0					
ANR	5178250	ArgumentList	r		5178208	1					
ANR	5178251	Argument	r		5178208	0					
ANR	5178252	Identifier	r		5178208	0					
ANR	5178253	Argument	b		5178208	1					
ANR	5178254	Identifier	b		5178208	0					
ANR	5178255	Argument	len		5178208	2					
ANR	5178256	Identifier	len		5178208	0					
ANR	5178257	ReturnStatement	return r ;	1397:1:32424:32432	5178208	4	True				
ANR	5178258	Identifier	r		5178208	0					
ANR	5178259	ReturnType	static ut8 *		5178208	1					
ANR	5178260	Identifier	M		5178208	2					
ANR	5178261	ParameterList	"const ut8 * b , int len"		5178208	3					
ANR	5178262	Parameter	const ut8 * b	1390:14:32290:32301	5178208	0	True				
ANR	5178263	ParameterType	const ut8 *		5178208	0					
ANR	5178264	Identifier	b		5178208	1					
ANR	5178265	Parameter	int len	1390:28:32304:32310	5178208	1	True				
ANR	5178266	ParameterType	int		5178208	0					
ANR	5178267	Identifier	len		5178208	1					
ANR	5178268	CFGEntryNode	ENTRY		5178208		True				
ANR	5178269	CFGExitNode	EXIT		5178208		True				
ANR	5178270	Symbol	malloc		5178208						
ANR	5178271	Symbol	b		5178208						
ANR	5178272	Symbol	r		5178208						
ANR	5178273	Symbol	NULL		5178208						
ANR	5178274	Symbol	len		5178208						
ANR	5178275	Function	r_print_hexdiff	1401:0:32469:33895							
ANR	5178276	FunctionDef	"r_print_hexdiff (RPrint * p , ut64 aa , const ut8 * _a , ut64 ba , const ut8 * _b , int len , int scndcol)"		5178275	0					
ANR	5178277	CompoundStatement		1401:108:32577:33895	5178275	0					
ANR	5178278	IdentifierDeclStatement	"ut8 * a , * b ;"	1402:1:32580:32590	5178275	0	True				
ANR	5178279	IdentifierDecl	* a		5178275	0					
ANR	5178280	IdentifierDeclType	ut8 *		5178275	0					
ANR	5178281	Identifier	a		5178275	1					
ANR	5178282	IdentifierDecl	* b		5178275	1					
ANR	5178283	IdentifierDeclType	ut8 *		5178275	0					
ANR	5178284	Identifier	b		5178275	1					
ANR	5178285	IdentifierDeclStatement	"char linediff , fmt [ 64 ] ;"	1403:1:32593:32615	5178275	1	True				
ANR	5178286	IdentifierDecl	linediff		5178275	0					
ANR	5178287	IdentifierDeclType	char		5178275	0					
ANR	5178288	Identifier	linediff		5178275	1					
ANR	5178289	IdentifierDecl	fmt [ 64 ]		5178275	1					
ANR	5178290	IdentifierDeclType	char [ 64 ]		5178275	0					
ANR	5178291	Identifier	fmt		5178275	1					
ANR	5178292	PrimaryExpression	64		5178275	2					
ANR	5178293	IdentifierDeclStatement	int color = p -> flags & R_PRINT_FLAGS_COLOR ;	1404:1:32618:32660	5178275	2	True				
ANR	5178294	IdentifierDecl	color = p -> flags & R_PRINT_FLAGS_COLOR		5178275	0					
ANR	5178295	IdentifierDeclType	int		5178275	0					
ANR	5178296	Identifier	color		5178275	1					
ANR	5178297	AssignmentExpression	color = p -> flags & R_PRINT_FLAGS_COLOR		5178275	2		=			
ANR	5178298	Identifier	color		5178275	0					
ANR	5178299	BitAndExpression	p -> flags & R_PRINT_FLAGS_COLOR		5178275	1		&			
ANR	5178300	PtrMemberAccess	p -> flags		5178275	0					
ANR	5178301	Identifier	p		5178275	0					
ANR	5178302	Identifier	flags		5178275	1					
ANR	5178303	Identifier	R_PRINT_FLAGS_COLOR		5178275	1					
ANR	5178304	IdentifierDeclStatement	int diffskip = p -> flags & R_PRINT_FLAGS_DIFFOUT ;	1405:1:32663:32710	5178275	3	True				
ANR	5178305	IdentifierDecl	diffskip = p -> flags & R_PRINT_FLAGS_DIFFOUT		5178275	0					
ANR	5178306	IdentifierDeclType	int		5178275	0					
ANR	5178307	Identifier	diffskip		5178275	1					
ANR	5178308	AssignmentExpression	diffskip = p -> flags & R_PRINT_FLAGS_DIFFOUT		5178275	2		=			
ANR	5178309	Identifier	diffskip		5178275	0					
ANR	5178310	BitAndExpression	p -> flags & R_PRINT_FLAGS_DIFFOUT		5178275	1		&			
ANR	5178311	PtrMemberAccess	p -> flags		5178275	0					
ANR	5178312	Identifier	p		5178275	0					
ANR	5178313	Identifier	flags		5178275	1					
ANR	5178314	Identifier	R_PRINT_FLAGS_DIFFOUT		5178275	1					
ANR	5178315	IdentifierDeclStatement	"int i , j , min ;"	1406:1:32713:32726	5178275	4	True				
ANR	5178316	IdentifierDecl	i		5178275	0					
ANR	5178317	IdentifierDeclType	int		5178275	0					
ANR	5178318	Identifier	i		5178275	1					
ANR	5178319	IdentifierDecl	j		5178275	1					
ANR	5178320	IdentifierDeclType	int		5178275	0					
ANR	5178321	Identifier	j		5178275	1					
ANR	5178322	IdentifierDecl	min		5178275	2					
ANR	5178323	IdentifierDeclType	int		5178275	0					
ANR	5178324	Identifier	min		5178275	1					
ANR	5178325	IfStatement	"if ( ! ( ( a = M ( _a , len ) ) ) )"		5178275	5					
ANR	5178326	Condition	"! ( ( a = M ( _a , len ) ) )"	1407:5:32733:32752	5178275	0	True				
ANR	5178327	UnaryOperationExpression	"! ( ( a = M ( _a , len ) ) )"		5178275	0					
ANR	5178328	UnaryOperator	!		5178275	0					
ANR	5178329	AssignmentExpression	"a = M ( _a , len )"		5178275	1		=			
ANR	5178330	Identifier	a		5178275	0					
ANR	5178331	CallExpression	"M ( _a , len )"		5178275	1					
ANR	5178332	Callee	M		5178275	0					
ANR	5178333	Identifier	M		5178275	0					
ANR	5178334	ArgumentList	_a		5178275	1					
ANR	5178335	Argument	_a		5178275	0					
ANR	5178336	Identifier	_a		5178275	0					
ANR	5178337	Argument	len		5178275	1					
ANR	5178338	Identifier	len		5178275	0					
ANR	5178339	CompoundStatement		7:27:177:177	5178275	1					
ANR	5178340	ReturnStatement	return ;	1408:2:32759:32765	5178275	0	True				
ANR	5178341	IfStatement	"if ( ! ( ( b = M ( _b , len ) ) ) )"		5178275	6					
ANR	5178342	Condition	"! ( ( b = M ( _b , len ) ) )"	1410:5:32775:32794	5178275	0	True				
ANR	5178343	UnaryOperationExpression	"! ( ( b = M ( _b , len ) ) )"		5178275	0					
ANR	5178344	UnaryOperator	!		5178275	0					
ANR	5178345	AssignmentExpression	"b = M ( _b , len )"		5178275	1		=			
ANR	5178346	Identifier	b		5178275	0					
ANR	5178347	CallExpression	"M ( _b , len )"		5178275	1					
ANR	5178348	Callee	M		5178275	0					
ANR	5178349	Identifier	M		5178275	0					
ANR	5178350	ArgumentList	_b		5178275	1					
ANR	5178351	Argument	_b		5178275	0					
ANR	5178352	Identifier	_b		5178275	0					
ANR	5178353	Argument	len		5178275	1					
ANR	5178354	Identifier	len		5178275	0					
ANR	5178355	CompoundStatement		10:27:219:219	5178275	1					
ANR	5178356	ExpressionStatement	free ( a )	1411:2:32801:32809	5178275	0	True				
ANR	5178357	CallExpression	free ( a )		5178275	0					
ANR	5178358	Callee	free		5178275	0					
ANR	5178359	Identifier	free		5178275	0					
ANR	5178360	ArgumentList	a		5178275	1					
ANR	5178361	Argument	a		5178275	0					
ANR	5178362	Identifier	a		5178275	0					
ANR	5178363	ReturnStatement	return ;	1412:2:32813:32819	5178275	1	True				
ANR	5178364	ForStatement	for ( i = 0 ; i < len ; i += 16 )		5178275	7					
ANR	5178365	ForInit	i = 0 ;	1414:6:32830:32835	5178275	0	True				
ANR	5178366	AssignmentExpression	i = 0		5178275	0		=			
ANR	5178367	Identifier	i		5178275	0					
ANR	5178368	PrimaryExpression	0		5178275	1					
ANR	5178369	Condition	i < len	1414:13:32837:32843	5178275	1	True				
ANR	5178370	RelationalExpression	i < len		5178275	0		<			
ANR	5178371	Identifier	i		5178275	0					
ANR	5178372	Identifier	len		5178275	1					
ANR	5178373	AssignmentExpression	i += 16	1414:22:32846:32852	5178275	2	True	+=			
ANR	5178374	Identifier	i		5178275	0					
ANR	5178375	PrimaryExpression	16		5178275	1					
ANR	5178376	CompoundStatement		14:31:277:277	5178275	3					
ANR	5178377	ExpressionStatement	"min = R_MIN ( 16 , len - i )"	1415:2:32859:32884	5178275	0	True				
ANR	5178378	AssignmentExpression	"min = R_MIN ( 16 , len - i )"		5178275	0		=			
ANR	5178379	Identifier	min		5178275	0					
ANR	5178380	CallExpression	"R_MIN ( 16 , len - i )"		5178275	1					
ANR	5178381	Callee	R_MIN		5178275	0					
ANR	5178382	Identifier	R_MIN		5178275	0					
ANR	5178383	ArgumentList	16		5178275	1					
ANR	5178384	Argument	16		5178275	0					
ANR	5178385	PrimaryExpression	16		5178275	0					
ANR	5178386	Argument	len - i		5178275	1					
ANR	5178387	AdditiveExpression	len - i		5178275	0		-			
ANR	5178388	Identifier	len		5178275	0					
ANR	5178389	Identifier	i		5178275	1					
ANR	5178390	ExpressionStatement	"linediff = ( memcmp ( a + i , b + i , min ) ) ? '!' : '|'"	1416:2:32888:32937	5178275	1	True				
ANR	5178391	AssignmentExpression	"linediff = ( memcmp ( a + i , b + i , min ) ) ? '!' : '|'"		5178275	0		=			
ANR	5178392	Identifier	linediff		5178275	0					
ANR	5178393	ConditionalExpression	"( memcmp ( a + i , b + i , min ) ) ? '!' : '|'"		5178275	1					
ANR	5178394	Condition	"memcmp ( a + i , b + i , min )"		5178275	0					
ANR	5178395	CallExpression	"memcmp ( a + i , b + i , min )"		5178275	0					
ANR	5178396	Callee	memcmp		5178275	0					
ANR	5178397	Identifier	memcmp		5178275	0					
ANR	5178398	ArgumentList	a + i		5178275	1					
ANR	5178399	Argument	a + i		5178275	0					
ANR	5178400	AdditiveExpression	a + i		5178275	0		+			
ANR	5178401	Identifier	a		5178275	0					
ANR	5178402	Identifier	i		5178275	1					
ANR	5178403	Argument	b + i		5178275	1					
ANR	5178404	AdditiveExpression	b + i		5178275	0		+			
ANR	5178405	Identifier	b		5178275	0					
ANR	5178406	Identifier	i		5178275	1					
ANR	5178407	Argument	min		5178275	2					
ANR	5178408	Identifier	min		5178275	0					
ANR	5178409	PrimaryExpression	'!'		5178275	1					
ANR	5178410	PrimaryExpression	'|'		5178275	2					
ANR	5178411	IfStatement	if ( diffskip && linediff == '|' )		5178275	2					
ANR	5178412	Condition	diffskip && linediff == '|'	1417:6:32945:32971	5178275	0	True				
ANR	5178413	AndExpression	diffskip && linediff == '|'		5178275	0		&&			
ANR	5178414	Identifier	diffskip		5178275	0					
ANR	5178415	EqualityExpression	linediff == '|'		5178275	1		==			
ANR	5178416	Identifier	linediff		5178275	0					
ANR	5178417	PrimaryExpression	'|'		5178275	1					
ANR	5178418	CompoundStatement		17:35:396:396	5178275	1					
ANR	5178419	ContinueStatement	continue ;	1418:3:32979:32987	5178275	0	True				
ANR	5178420	Statement	p	1420:2:32995:32995	5178275	3	True				
ANR	5178421	Statement	->	1420:3:32996:32997	5178275	4	True				
ANR	5178422	Statement	cb_printf	1420:5:32998:33006	5178275	5	True				
ANR	5178423	Statement	(	1420:15:33008:33008	5178275	6	True				
ANR	5178424	Statement	"""0x%08"""	1420:16:33009:33015	5178275	7	True				
ANR	5178425	Statement	PFMT64x	1420:24:33017:33023	5178275	8	True				
ANR	5178426	Statement	""" """	1420:32:33025:33027	5178275	9	True				
ANR	5178427	Statement	","	1420:35:33028:33028	5178275	10	True				
ANR	5178428	Statement	aa	1420:37:33030:33031	5178275	11	True				
ANR	5178429	Statement	+	1420:40:33033:33033	5178275	12	True				
ANR	5178430	Statement	i	1420:42:33035:33035	5178275	13	True				
ANR	5178431	Statement	)	1420:43:33036:33036	5178275	14	True				
ANR	5178432	ExpressionStatement		1420:44:33037:33037	5178275	15	True				
ANR	5178433	ForStatement	for ( j = 0 ; j < min ; j ++ )		5178275	16					
ANR	5178434	ForInit	j = 0 ;	1421:7:33046:33051	5178275	0	True				
ANR	5178435	AssignmentExpression	j = 0		5178275	0		=			
ANR	5178436	Identifier	j		5178275	0					
ANR	5178437	PrimaryExpression	0		5178275	1					
ANR	5178438	Condition	j < min	1421:14:33053:33059	5178275	1	True				
ANR	5178439	RelationalExpression	j < min		5178275	0		<			
ANR	5178440	Identifier	j		5178275	0					
ANR	5178441	Identifier	min		5178275	1					
ANR	5178442	PostIncDecOperationExpression	j ++	1421:23:33062:33064	5178275	2	True				
ANR	5178443	Identifier	j		5178275	0					
ANR	5178444	IncDec	++		5178275	1					
ANR	5178445	CompoundStatement		21:28:489:489	5178275	3					
ANR	5178446	ExpressionStatement	* fmt = color	1422:3:33072:33084	5178275	0	True				
ANR	5178447	AssignmentExpression	* fmt = color		5178275	0		=			
ANR	5178448	UnaryOperationExpression	* fmt		5178275	0					
ANR	5178449	UnaryOperator	*		5178275	0					
ANR	5178450	Identifier	fmt		5178275	1					
ANR	5178451	Identifier	color		5178275	1					
ANR	5178452	ExpressionStatement	"r_print_cursor ( p , i + j , 1 , 1 )"	1423:3:33089:33120	5178275	1	True				
ANR	5178453	CallExpression	"r_print_cursor ( p , i + j , 1 , 1 )"		5178275	0					
ANR	5178454	Callee	r_print_cursor		5178275	0					
ANR	5178455	Identifier	r_print_cursor		5178275	0					
ANR	5178456	ArgumentList	p		5178275	1					
ANR	5178457	Argument	p		5178275	0					
ANR	5178458	Identifier	p		5178275	0					
ANR	5178459	Argument	i + j		5178275	1					
ANR	5178460	AdditiveExpression	i + j		5178275	0		+			
ANR	5178461	Identifier	i		5178275	0					
ANR	5178462	Identifier	j		5178275	1					
ANR	5178463	Argument	1		5178275	2					
ANR	5178464	PrimaryExpression	1		5178275	0					
ANR	5178465	Argument	1		5178275	3					
ANR	5178466	PrimaryExpression	1		5178275	0					
ANR	5178467	ExpressionStatement	"p -> cb_printf ( BD ( a , b ) )"	1424:3:33125:33149	5178275	2	True				
ANR	5178468	CallExpression	"p -> cb_printf ( BD ( a , b ) )"		5178275	0					
ANR	5178469	Callee	p -> cb_printf		5178275	0					
ANR	5178470	PtrMemberAccess	p -> cb_printf		5178275	0					
ANR	5178471	Identifier	p		5178275	0					
ANR	5178472	Identifier	cb_printf		5178275	1					
ANR	5178473	ArgumentList	"BD ( a , b )"		5178275	1					
ANR	5178474	Argument	"BD ( a , b )"		5178275	0					
ANR	5178475	CallExpression	"BD ( a , b )"		5178275	0					
ANR	5178476	Callee	BD		5178275	0					
ANR	5178477	Identifier	BD		5178275	0					
ANR	5178478	ArgumentList	a		5178275	1					
ANR	5178479	Argument	a		5178275	0					
ANR	5178480	Identifier	a		5178275	0					
ANR	5178481	Argument	b		5178275	1					
ANR	5178482	Identifier	b		5178275	0					
ANR	5178483	ExpressionStatement	"r_print_cursor ( p , i + j , 1 , 0 )"	1425:3:33154:33185	5178275	3	True				
ANR	5178484	CallExpression	"r_print_cursor ( p , i + j , 1 , 0 )"		5178275	0					
ANR	5178485	Callee	r_print_cursor		5178275	0					
ANR	5178486	Identifier	r_print_cursor		5178275	0					
ANR	5178487	ArgumentList	p		5178275	1					
ANR	5178488	Argument	p		5178275	0					
ANR	5178489	Identifier	p		5178275	0					
ANR	5178490	Argument	i + j		5178275	1					
ANR	5178491	AdditiveExpression	i + j		5178275	0		+			
ANR	5178492	Identifier	i		5178275	0					
ANR	5178493	Identifier	j		5178275	1					
ANR	5178494	Argument	1		5178275	2					
ANR	5178495	PrimaryExpression	1		5178275	0					
ANR	5178496	Argument	0		5178275	3					
ANR	5178497	PrimaryExpression	0		5178275	0					
ANR	5178498	ExpressionStatement	"p -> cb_printf ( "" "" )"	1427:2:33193:33211	5178275	17	True				
ANR	5178499	CallExpression	"p -> cb_printf ( "" "" )"		5178275	0					
ANR	5178500	Callee	p -> cb_printf		5178275	0					
ANR	5178501	PtrMemberAccess	p -> cb_printf		5178275	0					
ANR	5178502	Identifier	p		5178275	0					
ANR	5178503	Identifier	cb_printf		5178275	1					
ANR	5178504	ArgumentList	""" """		5178275	1					
ANR	5178505	Argument	""" """		5178275	0					
ANR	5178506	PrimaryExpression	""" """		5178275	0					
ANR	5178507	ForStatement	for ( j = 0 ; j < min ; j ++ )		5178275	18					
ANR	5178508	ForInit	j = 0 ;	1428:7:33220:33225	5178275	0	True				
ANR	5178509	AssignmentExpression	j = 0		5178275	0		=			
ANR	5178510	Identifier	j		5178275	0					
ANR	5178511	PrimaryExpression	0		5178275	1					
ANR	5178512	Condition	j < min	1428:14:33227:33233	5178275	1	True				
ANR	5178513	RelationalExpression	j < min		5178275	0		<			
ANR	5178514	Identifier	j		5178275	0					
ANR	5178515	Identifier	min		5178275	1					
ANR	5178516	PostIncDecOperationExpression	j ++	1428:23:33236:33238	5178275	2	True				
ANR	5178517	Identifier	j		5178275	0					
ANR	5178518	IncDec	++		5178275	1					
ANR	5178519	CompoundStatement		28:28:663:663	5178275	3					
ANR	5178520	ExpressionStatement	* fmt = color	1429:3:33246:33258	5178275	0	True				
ANR	5178521	AssignmentExpression	* fmt = color		5178275	0		=			
ANR	5178522	UnaryOperationExpression	* fmt		5178275	0					
ANR	5178523	UnaryOperator	*		5178275	0					
ANR	5178524	Identifier	fmt		5178275	1					
ANR	5178525	Identifier	color		5178275	1					
ANR	5178526	ExpressionStatement	"r_print_cursor ( p , i + j , 1 , 1 )"	1430:3:33263:33294	5178275	1	True				
ANR	5178527	CallExpression	"r_print_cursor ( p , i + j , 1 , 1 )"		5178275	0					
ANR	5178528	Callee	r_print_cursor		5178275	0					
ANR	5178529	Identifier	r_print_cursor		5178275	0					
ANR	5178530	ArgumentList	p		5178275	1					
ANR	5178531	Argument	p		5178275	0					
ANR	5178532	Identifier	p		5178275	0					
ANR	5178533	Argument	i + j		5178275	1					
ANR	5178534	AdditiveExpression	i + j		5178275	0		+			
ANR	5178535	Identifier	i		5178275	0					
ANR	5178536	Identifier	j		5178275	1					
ANR	5178537	Argument	1		5178275	2					
ANR	5178538	PrimaryExpression	1		5178275	0					
ANR	5178539	Argument	1		5178275	3					
ANR	5178540	PrimaryExpression	1		5178275	0					
ANR	5178541	ExpressionStatement	"p -> cb_printf ( ""%s"" , CD ( a , b ) )"	1431:3:33299:33329	5178275	2	True				
ANR	5178542	CallExpression	"p -> cb_printf ( ""%s"" , CD ( a , b ) )"		5178275	0					
ANR	5178543	Callee	p -> cb_printf		5178275	0					
ANR	5178544	PtrMemberAccess	p -> cb_printf		5178275	0					
ANR	5178545	Identifier	p		5178275	0					
ANR	5178546	Identifier	cb_printf		5178275	1					
ANR	5178547	ArgumentList	"""%s"""		5178275	1					
ANR	5178548	Argument	"""%s"""		5178275	0					
ANR	5178549	PrimaryExpression	"""%s"""		5178275	0					
ANR	5178550	Argument	"CD ( a , b )"		5178275	1					
ANR	5178551	CallExpression	"CD ( a , b )"		5178275	0					
ANR	5178552	Callee	CD		5178275	0					
ANR	5178553	Identifier	CD		5178275	0					
ANR	5178554	ArgumentList	a		5178275	1					
ANR	5178555	Argument	a		5178275	0					
ANR	5178556	Identifier	a		5178275	0					
ANR	5178557	Argument	b		5178275	1					
ANR	5178558	Identifier	b		5178275	0					
ANR	5178559	ExpressionStatement	"r_print_cursor ( p , i + j , 1 , 0 )"	1432:3:33334:33365	5178275	3	True				
ANR	5178560	CallExpression	"r_print_cursor ( p , i + j , 1 , 0 )"		5178275	0					
ANR	5178561	Callee	r_print_cursor		5178275	0					
ANR	5178562	Identifier	r_print_cursor		5178275	0					
ANR	5178563	ArgumentList	p		5178275	1					
ANR	5178564	Argument	p		5178275	0					
ANR	5178565	Identifier	p		5178275	0					
ANR	5178566	Argument	i + j		5178275	1					
ANR	5178567	AdditiveExpression	i + j		5178275	0		+			
ANR	5178568	Identifier	i		5178275	0					
ANR	5178569	Identifier	j		5178275	1					
ANR	5178570	Argument	1		5178275	2					
ANR	5178571	PrimaryExpression	1		5178275	0					
ANR	5178572	Argument	0		5178275	3					
ANR	5178573	PrimaryExpression	0		5178275	0					
ANR	5178574	IfStatement	if ( scndcol )		5178275	19					
ANR	5178575	Condition	scndcol	1434:6:33377:33383	5178275	0	True				
ANR	5178576	Identifier	scndcol		5178275	0					
ANR	5178577	CompoundStatement		34:15:808:808	5178275	1					
ANR	5178578	Statement	p	1435:3:33391:33391	5178275	0	True				
ANR	5178579	Statement	->	1435:4:33392:33393	5178275	1	True				
ANR	5178580	Statement	cb_printf	1435:6:33394:33402	5178275	2	True				
ANR	5178581	Statement	(	1435:16:33404:33404	5178275	3	True				
ANR	5178582	Statement	""" %c 0x%08"""	1435:17:33405:33415	5178275	4	True				
ANR	5178583	Statement	PFMT64x	1435:29:33417:33423	5178275	5	True				
ANR	5178584	Statement	""" """	1435:37:33425:33427	5178275	6	True				
ANR	5178585	Statement	","	1435:40:33428:33428	5178275	7	True				
ANR	5178586	Statement	linediff	1435:42:33430:33437	5178275	8	True				
ANR	5178587	Statement	","	1435:50:33438:33438	5178275	9	True				
ANR	5178588	Statement	ba	1435:52:33440:33441	5178275	10	True				
ANR	5178589	Statement	+	1435:55:33443:33443	5178275	11	True				
ANR	5178590	Statement	i	1435:57:33445:33445	5178275	12	True				
ANR	5178591	Statement	)	1435:58:33446:33446	5178275	13	True				
ANR	5178592	ExpressionStatement		1435:59:33447:33447	5178275	14	True				
ANR	5178593	ForStatement	for ( j = 0 ; j < min ; j ++ )		5178275	15					
ANR	5178594	ForInit	j = 0 ;	1436:8:33457:33462	5178275	0	True				
ANR	5178595	AssignmentExpression	j = 0		5178275	0		=			
ANR	5178596	Identifier	j		5178275	0					
ANR	5178597	PrimaryExpression	0		5178275	1					
ANR	5178598	Condition	j < min	1436:15:33464:33470	5178275	1	True				
ANR	5178599	RelationalExpression	j < min		5178275	0		<			
ANR	5178600	Identifier	j		5178275	0					
ANR	5178601	Identifier	min		5178275	1					
ANR	5178602	PostIncDecOperationExpression	j ++	1436:24:33473:33475	5178275	2	True				
ANR	5178603	Identifier	j		5178275	0					
ANR	5178604	IncDec	++		5178275	1					
ANR	5178605	CompoundStatement		36:29:900:900	5178275	3					
ANR	5178606	ExpressionStatement	* fmt = color	1437:4:33484:33496	5178275	0	True				
ANR	5178607	AssignmentExpression	* fmt = color		5178275	0		=			
ANR	5178608	UnaryOperationExpression	* fmt		5178275	0					
ANR	5178609	UnaryOperator	*		5178275	0					
ANR	5178610	Identifier	fmt		5178275	1					
ANR	5178611	Identifier	color		5178275	1					
ANR	5178612	ExpressionStatement	"r_print_cursor ( p , i + j , 1 , 1 )"	1438:4:33502:33533	5178275	1	True				
ANR	5178613	CallExpression	"r_print_cursor ( p , i + j , 1 , 1 )"		5178275	0					
ANR	5178614	Callee	r_print_cursor		5178275	0					
ANR	5178615	Identifier	r_print_cursor		5178275	0					
ANR	5178616	ArgumentList	p		5178275	1					
ANR	5178617	Argument	p		5178275	0					
ANR	5178618	Identifier	p		5178275	0					
ANR	5178619	Argument	i + j		5178275	1					
ANR	5178620	AdditiveExpression	i + j		5178275	0		+			
ANR	5178621	Identifier	i		5178275	0					
ANR	5178622	Identifier	j		5178275	1					
ANR	5178623	Argument	1		5178275	2					
ANR	5178624	PrimaryExpression	1		5178275	0					
ANR	5178625	Argument	1		5178275	3					
ANR	5178626	PrimaryExpression	1		5178275	0					
ANR	5178627	ExpressionStatement	"p -> cb_printf ( BD ( b , a ) )"	1439:4:33539:33563	5178275	2	True				
ANR	5178628	CallExpression	"p -> cb_printf ( BD ( b , a ) )"		5178275	0					
ANR	5178629	Callee	p -> cb_printf		5178275	0					
ANR	5178630	PtrMemberAccess	p -> cb_printf		5178275	0					
ANR	5178631	Identifier	p		5178275	0					
ANR	5178632	Identifier	cb_printf		5178275	1					
ANR	5178633	ArgumentList	"BD ( b , a )"		5178275	1					
ANR	5178634	Argument	"BD ( b , a )"		5178275	0					
ANR	5178635	CallExpression	"BD ( b , a )"		5178275	0					
ANR	5178636	Callee	BD		5178275	0					
ANR	5178637	Identifier	BD		5178275	0					
ANR	5178638	ArgumentList	b		5178275	1					
ANR	5178639	Argument	b		5178275	0					
ANR	5178640	Identifier	b		5178275	0					
ANR	5178641	Argument	a		5178275	1					
ANR	5178642	Identifier	a		5178275	0					
ANR	5178643	ExpressionStatement	"r_print_cursor ( p , i + j , 1 , 0 )"	1440:4:33569:33600	5178275	3	True				
ANR	5178644	CallExpression	"r_print_cursor ( p , i + j , 1 , 0 )"		5178275	0					
ANR	5178645	Callee	r_print_cursor		5178275	0					
ANR	5178646	Identifier	r_print_cursor		5178275	0					
ANR	5178647	ArgumentList	p		5178275	1					
ANR	5178648	Argument	p		5178275	0					
ANR	5178649	Identifier	p		5178275	0					
ANR	5178650	Argument	i + j		5178275	1					
ANR	5178651	AdditiveExpression	i + j		5178275	0		+			
ANR	5178652	Identifier	i		5178275	0					
ANR	5178653	Identifier	j		5178275	1					
ANR	5178654	Argument	1		5178275	2					
ANR	5178655	PrimaryExpression	1		5178275	0					
ANR	5178656	Argument	0		5178275	3					
ANR	5178657	PrimaryExpression	0		5178275	0					
ANR	5178658	ExpressionStatement	"p -> cb_printf ( "" "" )"	1442:3:33610:33628	5178275	16	True				
ANR	5178659	CallExpression	"p -> cb_printf ( "" "" )"		5178275	0					
ANR	5178660	Callee	p -> cb_printf		5178275	0					
ANR	5178661	PtrMemberAccess	p -> cb_printf		5178275	0					
ANR	5178662	Identifier	p		5178275	0					
ANR	5178663	Identifier	cb_printf		5178275	1					
ANR	5178664	ArgumentList	""" """		5178275	1					
ANR	5178665	Argument	""" """		5178275	0					
ANR	5178666	PrimaryExpression	""" """		5178275	0					
ANR	5178667	ForStatement	for ( j = 0 ; j < min ; j ++ )		5178275	17					
ANR	5178668	ForInit	j = 0 ;	1443:8:33638:33643	5178275	0	True				
ANR	5178669	AssignmentExpression	j = 0		5178275	0		=			
ANR	5178670	Identifier	j		5178275	0					
ANR	5178671	PrimaryExpression	0		5178275	1					
ANR	5178672	Condition	j < min	1443:15:33645:33651	5178275	1	True				
ANR	5178673	RelationalExpression	j < min		5178275	0		<			
ANR	5178674	Identifier	j		5178275	0					
ANR	5178675	Identifier	min		5178275	1					
ANR	5178676	PostIncDecOperationExpression	j ++	1443:24:33654:33656	5178275	2	True				
ANR	5178677	Identifier	j		5178275	0					
ANR	5178678	IncDec	++		5178275	1					
ANR	5178679	CompoundStatement		43:29:1081:1081	5178275	3					
ANR	5178680	ExpressionStatement	* fmt = color	1444:4:33665:33677	5178275	0	True				
ANR	5178681	AssignmentExpression	* fmt = color		5178275	0		=			
ANR	5178682	UnaryOperationExpression	* fmt		5178275	0					
ANR	5178683	UnaryOperator	*		5178275	0					
ANR	5178684	Identifier	fmt		5178275	1					
ANR	5178685	Identifier	color		5178275	1					
ANR	5178686	ExpressionStatement	"r_print_cursor ( p , i + j , 1 , 1 )"	1445:4:33683:33714	5178275	1	True				
ANR	5178687	CallExpression	"r_print_cursor ( p , i + j , 1 , 1 )"		5178275	0					
ANR	5178688	Callee	r_print_cursor		5178275	0					
ANR	5178689	Identifier	r_print_cursor		5178275	0					
ANR	5178690	ArgumentList	p		5178275	1					
ANR	5178691	Argument	p		5178275	0					
ANR	5178692	Identifier	p		5178275	0					
ANR	5178693	Argument	i + j		5178275	1					
ANR	5178694	AdditiveExpression	i + j		5178275	0		+			
ANR	5178695	Identifier	i		5178275	0					
ANR	5178696	Identifier	j		5178275	1					
ANR	5178697	Argument	1		5178275	2					
ANR	5178698	PrimaryExpression	1		5178275	0					
ANR	5178699	Argument	1		5178275	3					
ANR	5178700	PrimaryExpression	1		5178275	0					
ANR	5178701	ExpressionStatement	"p -> cb_printf ( ""%s"" , CD ( b , a ) )"	1446:4:33720:33750	5178275	2	True				
ANR	5178702	CallExpression	"p -> cb_printf ( ""%s"" , CD ( b , a ) )"		5178275	0					
ANR	5178703	Callee	p -> cb_printf		5178275	0					
ANR	5178704	PtrMemberAccess	p -> cb_printf		5178275	0					
ANR	5178705	Identifier	p		5178275	0					
ANR	5178706	Identifier	cb_printf		5178275	1					
ANR	5178707	ArgumentList	"""%s"""		5178275	1					
ANR	5178708	Argument	"""%s"""		5178275	0					
ANR	5178709	PrimaryExpression	"""%s"""		5178275	0					
ANR	5178710	Argument	"CD ( b , a )"		5178275	1					
ANR	5178711	CallExpression	"CD ( b , a )"		5178275	0					
ANR	5178712	Callee	CD		5178275	0					
ANR	5178713	Identifier	CD		5178275	0					
ANR	5178714	ArgumentList	b		5178275	1					
ANR	5178715	Argument	b		5178275	0					
ANR	5178716	Identifier	b		5178275	0					
ANR	5178717	Argument	a		5178275	1					
ANR	5178718	Identifier	a		5178275	0					
ANR	5178719	ExpressionStatement	"r_print_cursor ( p , i + j , 1 , 0 )"	1447:4:33756:33787	5178275	3	True				
ANR	5178720	CallExpression	"r_print_cursor ( p , i + j , 1 , 0 )"		5178275	0					
ANR	5178721	Callee	r_print_cursor		5178275	0					
ANR	5178722	Identifier	r_print_cursor		5178275	0					
ANR	5178723	ArgumentList	p		5178275	1					
ANR	5178724	Argument	p		5178275	0					
ANR	5178725	Identifier	p		5178275	0					
ANR	5178726	Argument	i + j		5178275	1					
ANR	5178727	AdditiveExpression	i + j		5178275	0		+			
ANR	5178728	Identifier	i		5178275	0					
ANR	5178729	Identifier	j		5178275	1					
ANR	5178730	Argument	1		5178275	2					
ANR	5178731	PrimaryExpression	1		5178275	0					
ANR	5178732	Argument	0		5178275	3					
ANR	5178733	PrimaryExpression	0		5178275	0					
ANR	5178734	ExpressionStatement	"p -> cb_printf ( ""\\n"" )"	1449:3:33797:33816	5178275	18	True				
ANR	5178735	CallExpression	"p -> cb_printf ( ""\\n"" )"		5178275	0					
ANR	5178736	Callee	p -> cb_printf		5178275	0					
ANR	5178737	PtrMemberAccess	p -> cb_printf		5178275	0					
ANR	5178738	Identifier	p		5178275	0					
ANR	5178739	Identifier	cb_printf		5178275	1					
ANR	5178740	ArgumentList	"""\\n"""		5178275	1					
ANR	5178741	Argument	"""\\n"""		5178275	0					
ANR	5178742	PrimaryExpression	"""\\n"""		5178275	0					
ANR	5178743	ElseStatement	else		5178275	0					
ANR	5178744	CompoundStatement		50:9:1249:1249	5178275	0					
ANR	5178745	ExpressionStatement	"p -> cb_printf ( "" %c\\n"" , linediff )"	1451:3:33832:33864	5178275	0	True				
ANR	5178746	CallExpression	"p -> cb_printf ( "" %c\\n"" , linediff )"		5178275	0					
ANR	5178747	Callee	p -> cb_printf		5178275	0					
ANR	5178748	PtrMemberAccess	p -> cb_printf		5178275	0					
ANR	5178749	Identifier	p		5178275	0					
ANR	5178750	Identifier	cb_printf		5178275	1					
ANR	5178751	ArgumentList	""" %c\\n"""		5178275	1					
ANR	5178752	Argument	""" %c\\n"""		5178275	0					
ANR	5178753	PrimaryExpression	""" %c\\n"""		5178275	0					
ANR	5178754	Argument	linediff		5178275	1					
ANR	5178755	Identifier	linediff		5178275	0					
ANR	5178756	ExpressionStatement	free ( a )	1454:1:33874:33882	5178275	8	True				
ANR	5178757	CallExpression	free ( a )		5178275	0					
ANR	5178758	Callee	free		5178275	0					
ANR	5178759	Identifier	free		5178275	0					
ANR	5178760	ArgumentList	a		5178275	1					
ANR	5178761	Argument	a		5178275	0					
ANR	5178762	Identifier	a		5178275	0					
ANR	5178763	ExpressionStatement	free ( b )	1455:1:33885:33893	5178275	9	True				
ANR	5178764	CallExpression	free ( b )		5178275	0					
ANR	5178765	Callee	free		5178275	0					
ANR	5178766	Identifier	free		5178275	0					
ANR	5178767	ArgumentList	b		5178275	1					
ANR	5178768	Argument	b		5178275	0					
ANR	5178769	Identifier	b		5178275	0					
ANR	5178770	ReturnType	R_API void		5178275	1					
ANR	5178771	Identifier	r_print_hexdiff		5178275	2					
ANR	5178772	ParameterList	"RPrint * p , ut64 aa , const ut8 * _a , ut64 ba , const ut8 * _b , int len , int scndcol"		5178275	3					
ANR	5178773	Parameter	RPrint * p	1401:27:32496:32504	5178275	0	True				
ANR	5178774	ParameterType	RPrint *		5178275	0					
ANR	5178775	Identifier	p		5178275	1					
ANR	5178776	Parameter	ut64 aa	1401:38:32507:32513	5178275	1	True				
ANR	5178777	ParameterType	ut64		5178275	0					
ANR	5178778	Identifier	aa		5178275	1					
ANR	5178779	Parameter	const ut8 * _a	1401:47:32516:32528	5178275	2	True				
ANR	5178780	ParameterType	const ut8 *		5178275	0					
ANR	5178781	Identifier	_a		5178275	1					
ANR	5178782	Parameter	ut64 ba	1401:62:32531:32537	5178275	3	True				
ANR	5178783	ParameterType	ut64		5178275	0					
ANR	5178784	Identifier	ba		5178275	1					
ANR	5178785	Parameter	const ut8 * _b	1401:71:32540:32552	5178275	4	True				
ANR	5178786	ParameterType	const ut8 *		5178275	0					
ANR	5178787	Identifier	_b		5178275	1					
ANR	5178788	Parameter	int len	1401:86:32555:32561	5178275	5	True				
ANR	5178789	ParameterType	int		5178275	0					
ANR	5178790	Identifier	len		5178275	1					
ANR	5178791	Parameter	int scndcol	1401:95:32564:32574	5178275	6	True				
ANR	5178792	ParameterType	int		5178275	0					
ANR	5178793	Identifier	scndcol		5178275	1					
ANR	5178794	CFGEntryNode	ENTRY		5178275		True				
ANR	5178795	CFGExitNode	EXIT		5178275		True				
ANR	5178796	Symbol	diffskip		5178275						
ANR	5178797	Symbol	BD		5178275						
ANR	5178798	Symbol	color		5178275						
ANR	5178799	Symbol	* fmt		5178275						
ANR	5178800	Symbol	fmt		5178275						
ANR	5178801	Symbol	M		5178275						
ANR	5178802	Symbol	min		5178275						
ANR	5178803	Symbol	memcmp		5178275						
ANR	5178804	Symbol	len		5178275						
ANR	5178805	Symbol	R_PRINT_FLAGS_COLOR		5178275						
ANR	5178806	Symbol	linediff		5178275						
ANR	5178807	Symbol	aa		5178275						
ANR	5178808	Symbol	a		5178275						
ANR	5178809	Symbol	CD		5178275						
ANR	5178810	Symbol	_a		5178275						
ANR	5178811	Symbol	b		5178275						
ANR	5178812	Symbol	_b		5178275						
ANR	5178813	Symbol	scndcol		5178275						
ANR	5178814	Symbol	i		5178275						
ANR	5178815	Symbol	j		5178275						
ANR	5178816	Symbol	R_MIN		5178275						
ANR	5178817	Symbol	p		5178275						
ANR	5178818	Symbol	p -> flags		5178275						
ANR	5178819	Symbol	* p		5178275						
ANR	5178820	Symbol	R_PRINT_FLAGS_DIFFOUT		5178275						
ANR	5178821	Symbol	ba		5178275						
ANR	5178822	Function	r_print_bytes	1458:0:33898:34173							
ANR	5178823	FunctionDef	"r_print_bytes (RPrint * p , const ut8 * buf , int len , const char * fmt)"		5178822	0					
ANR	5178824	CompoundStatement		1458:78:33976:34173	5178822	0					
ANR	5178825	IdentifierDeclStatement	int i ;	1459:1:33979:33984	5178822	0	True				
ANR	5178826	IdentifierDecl	i		5178822	0					
ANR	5178827	IdentifierDeclType	int		5178822	0					
ANR	5178828	Identifier	i		5178822	1					
ANR	5178829	IfStatement	if ( p )		5178822	1					
ANR	5178830	Condition	p	1460:5:33991:33991	5178822	0	True				
ANR	5178831	Identifier	p		5178822	0					
ANR	5178832	CompoundStatement		3:8:17:17	5178822	1					
ANR	5178833	ForStatement	for ( i = 0 ; i < len ; i ++ )		5178822	0					
ANR	5178834	ForInit	i = 0 ;	1461:7:34003:34008	5178822	0	True				
ANR	5178835	AssignmentExpression	i = 0		5178822	0		=			
ANR	5178836	Identifier	i		5178822	0					
ANR	5178837	PrimaryExpression	0		5178822	1					
ANR	5178838	Condition	i < len	1461:14:34010:34016	5178822	1	True				
ANR	5178839	RelationalExpression	i < len		5178822	0		<			
ANR	5178840	Identifier	i		5178822	0					
ANR	5178841	Identifier	len		5178822	1					
ANR	5178842	PostIncDecOperationExpression	i ++	1461:23:34019:34021	5178822	2	True				
ANR	5178843	Identifier	i		5178822	0					
ANR	5178844	IncDec	++		5178822	1					
ANR	5178845	CompoundStatement		4:28:47:47	5178822	3					
ANR	5178846	ExpressionStatement	"p -> cb_printf ( fmt , buf [ i ] )"	1462:3:34029:34055	5178822	0	True				
ANR	5178847	CallExpression	"p -> cb_printf ( fmt , buf [ i ] )"		5178822	0					
ANR	5178848	Callee	p -> cb_printf		5178822	0					
ANR	5178849	PtrMemberAccess	p -> cb_printf		5178822	0					
ANR	5178850	Identifier	p		5178822	0					
ANR	5178851	Identifier	cb_printf		5178822	1					
ANR	5178852	ArgumentList	fmt		5178822	1					
ANR	5178853	Argument	fmt		5178822	0					
ANR	5178854	Identifier	fmt		5178822	0					
ANR	5178855	Argument	buf [ i ]		5178822	1					
ANR	5178856	ArrayIndexing	buf [ i ]		5178822	0					
ANR	5178857	Identifier	buf		5178822	0					
ANR	5178858	Identifier	i		5178822	1					
ANR	5178859	ExpressionStatement	"p -> cb_printf ( ""\\n"" )"	1464:2:34063:34082	5178822	1	True				
ANR	5178860	CallExpression	"p -> cb_printf ( ""\\n"" )"		5178822	0					
ANR	5178861	Callee	p -> cb_printf		5178822	0					
ANR	5178862	PtrMemberAccess	p -> cb_printf		5178822	0					
ANR	5178863	Identifier	p		5178822	0					
ANR	5178864	Identifier	cb_printf		5178822	1					
ANR	5178865	ArgumentList	"""\\n"""		5178822	1					
ANR	5178866	Argument	"""\\n"""		5178822	0					
ANR	5178867	PrimaryExpression	"""\\n"""		5178822	0					
ANR	5178868	ElseStatement	else		5178822	0					
ANR	5178869	CompoundStatement		8:8:115:115	5178822	0					
ANR	5178870	ForStatement	for ( i = 0 ; i < len ; i ++ )		5178822	0					
ANR	5178871	ForInit	i = 0 ;	1466:7:34101:34106	5178822	0	True				
ANR	5178872	AssignmentExpression	i = 0		5178822	0		=			
ANR	5178873	Identifier	i		5178822	0					
ANR	5178874	PrimaryExpression	0		5178822	1					
ANR	5178875	Condition	i < len	1466:14:34108:34114	5178822	1	True				
ANR	5178876	RelationalExpression	i < len		5178822	0		<			
ANR	5178877	Identifier	i		5178822	0					
ANR	5178878	Identifier	len		5178822	1					
ANR	5178879	PostIncDecOperationExpression	i ++	1466:23:34117:34119	5178822	2	True				
ANR	5178880	Identifier	i		5178822	0					
ANR	5178881	IncDec	++		5178822	1					
ANR	5178882	CompoundStatement		9:28:145:145	5178822	3					
ANR	5178883	ExpressionStatement	"printf ( fmt , buf [ i ] )"	1467:3:34127:34147	5178822	0	True				
ANR	5178884	CallExpression	"printf ( fmt , buf [ i ] )"		5178822	0					
ANR	5178885	Callee	printf		5178822	0					
ANR	5178886	Identifier	printf		5178822	0					
ANR	5178887	ArgumentList	fmt		5178822	1					
ANR	5178888	Argument	fmt		5178822	0					
ANR	5178889	Identifier	fmt		5178822	0					
ANR	5178890	Argument	buf [ i ]		5178822	1					
ANR	5178891	ArrayIndexing	buf [ i ]		5178822	0					
ANR	5178892	Identifier	buf		5178822	0					
ANR	5178893	Identifier	i		5178822	1					
ANR	5178894	ExpressionStatement	"printf ( ""\\n"" )"	1469:2:34155:34168	5178822	1	True				
ANR	5178895	CallExpression	"printf ( ""\\n"" )"		5178822	0					
ANR	5178896	Callee	printf		5178822	0					
ANR	5178897	Identifier	printf		5178822	0					
ANR	5178898	ArgumentList	"""\\n"""		5178822	1					
ANR	5178899	Argument	"""\\n"""		5178822	0					
ANR	5178900	PrimaryExpression	"""\\n"""		5178822	0					
ANR	5178901	ReturnType	R_API void		5178822	1					
ANR	5178902	Identifier	r_print_bytes		5178822	2					
ANR	5178903	ParameterList	"RPrint * p , const ut8 * buf , int len , const char * fmt"		5178822	3					
ANR	5178904	Parameter	RPrint * p	1458:25:33923:33931	5178822	0	True				
ANR	5178905	ParameterType	RPrint *		5178822	0					
ANR	5178906	Identifier	p		5178822	1					
ANR	5178907	Parameter	const ut8 * buf	1458:36:33934:33947	5178822	1	True				
ANR	5178908	ParameterType	const ut8 *		5178822	0					
ANR	5178909	Identifier	buf		5178822	1					
ANR	5178910	Parameter	int len	1458:52:33950:33956	5178822	2	True				
ANR	5178911	ParameterType	int		5178822	0					
ANR	5178912	Identifier	len		5178822	1					
ANR	5178913	Parameter	const char * fmt	1458:61:33959:33973	5178822	3	True				
ANR	5178914	ParameterType	const char *		5178822	0					
ANR	5178915	Identifier	fmt		5178822	1					
ANR	5178916	CFGEntryNode	ENTRY		5178822		True				
ANR	5178917	CFGExitNode	EXIT		5178822		True				
ANR	5178918	Symbol	p		5178822						
ANR	5178919	Symbol	buf		5178822						
ANR	5178920	Symbol	* buf		5178822						
ANR	5178921	Symbol	* i		5178822						
ANR	5178922	Symbol	len		5178822						
ANR	5178923	Symbol	i		5178822						
ANR	5178924	Symbol	fmt		5178822						
ANR	5178925	Function	r_print_raw	1473:0:34176:35521							
ANR	5178926	FunctionDef	"r_print_raw (RPrint * p , ut64 addr , const ut8 * buf , int len , int offlines)"		5178925	0					
ANR	5178927	CompoundStatement		1473:84:34260:35521	5178925	0					
ANR	5178928	IfStatement	if ( offlines == 2 )		5178925	0					
ANR	5178929	Condition	offlines == 2	1474:5:34267:34279	5178925	0	True				
ANR	5178930	EqualityExpression	offlines == 2		5178925	0		==			
ANR	5178931	Identifier	offlines		5178925	0					
ANR	5178932	PrimaryExpression	2		5178925	1					
ANR	5178933	CompoundStatement		4:2:57:64	5178925	1					
ANR	5178934	IdentifierDeclStatement	"int i , j , cols = p -> cols * 4 ;"	1475:2:34286:34314	5178925	0	True				
ANR	5178935	IdentifierDecl	i		5178925	0					
ANR	5178936	IdentifierDeclType	int		5178925	0					
ANR	5178937	Identifier	i		5178925	1					
ANR	5178938	IdentifierDecl	j		5178925	1					
ANR	5178939	IdentifierDeclType	int		5178925	0					
ANR	5178940	Identifier	j		5178925	1					
ANR	5178941	IdentifierDecl	cols = p -> cols * 4		5178925	2					
ANR	5178942	IdentifierDeclType	int		5178925	0					
ANR	5178943	Identifier	cols		5178925	1					
ANR	5178944	AssignmentExpression	cols = p -> cols * 4		5178925	2		=			
ANR	5178945	Identifier	cols		5178925	0					
ANR	5178946	MultiplicativeExpression	p -> cols * 4		5178925	1		*			
ANR	5178947	PtrMemberAccess	p -> cols		5178925	0					
ANR	5178948	Identifier	p		5178925	0					
ANR	5178949	Identifier	cols		5178925	1					
ANR	5178950	PrimaryExpression	4		5178925	1					
ANR	5178951	IdentifierDeclStatement	char ch ;	1476:2:34318:34325	5178925	1	True				
ANR	5178952	IdentifierDecl	ch		5178925	0					
ANR	5178953	IdentifierDeclType	char		5178925	0					
ANR	5178954	Identifier	ch		5178925	1					
ANR	5178955	ForStatement	for ( i = 0 ; i < len ; i += cols )		5178925	2					
ANR	5178956	ForInit	i = 0 ;	1477:7:34334:34339	5178925	0	True				
ANR	5178957	AssignmentExpression	i = 0		5178925	0		=			
ANR	5178958	Identifier	i		5178925	0					
ANR	5178959	PrimaryExpression	0		5178925	1					
ANR	5178960	Condition	i < len	1477:14:34341:34347	5178925	1	True				
ANR	5178961	RelationalExpression	i < len		5178925	0		<			
ANR	5178962	Identifier	i		5178925	0					
ANR	5178963	Identifier	len		5178925	1					
ANR	5178964	AssignmentExpression	i += cols	1477:23:34350:34358	5178925	2	True	+=			
ANR	5178965	Identifier	i		5178925	0					
ANR	5178966	Identifier	cols		5178925	1					
ANR	5178967	CompoundStatement		5:34:100:100	5178925	3					
ANR	5178968	ExpressionStatement	"p -> cb_printf ( ""0x%08x  "" , addr + i )"	1478:3:34366:34401	5178925	0	True				
ANR	5178969	CallExpression	"p -> cb_printf ( ""0x%08x  "" , addr + i )"		5178925	0					
ANR	5178970	Callee	p -> cb_printf		5178925	0					
ANR	5178971	PtrMemberAccess	p -> cb_printf		5178925	0					
ANR	5178972	Identifier	p		5178925	0					
ANR	5178973	Identifier	cb_printf		5178925	1					
ANR	5178974	ArgumentList	"""0x%08x  """		5178925	1					
ANR	5178975	Argument	"""0x%08x  """		5178925	0					
ANR	5178976	PrimaryExpression	"""0x%08x  """		5178925	0					
ANR	5178977	Argument	addr + i		5178925	1					
ANR	5178978	AdditiveExpression	addr + i		5178925	0		+			
ANR	5178979	Identifier	addr		5178925	0					
ANR	5178980	Identifier	i		5178925	1					
ANR	5178981	ForStatement	for ( j = 0 ; j < cols ; j ++ )		5178925	1					
ANR	5178982	ForInit	j = 0 ;	1479:8:34411:34416	5178925	0	True				
ANR	5178983	AssignmentExpression	j = 0		5178925	0		=			
ANR	5178984	Identifier	j		5178925	0					
ANR	5178985	PrimaryExpression	0		5178925	1					
ANR	5178986	Condition	j < cols	1479:15:34418:34425	5178925	1	True				
ANR	5178987	RelationalExpression	j < cols		5178925	0		<			
ANR	5178988	Identifier	j		5178925	0					
ANR	5178989	Identifier	cols		5178925	1					
ANR	5178990	PostIncDecOperationExpression	j ++	1479:25:34428:34430	5178925	2	True				
ANR	5178991	Identifier	j		5178925	0					
ANR	5178992	IncDec	++		5178925	1					
ANR	5178993	CompoundStatement		7:30:172:172	5178925	3					
ANR	5178994	IfStatement	if ( ( i + j ) >= len )		5178925	0					
ANR	5178995	Condition	( i + j ) >= len	1480:8:34443:34456	5178925	0	True				
ANR	5178996	RelationalExpression	( i + j ) >= len		5178925	0		>=			
ANR	5178997	AdditiveExpression	i + j		5178925	0		+			
ANR	5178998	Identifier	i		5178925	0					
ANR	5178999	Identifier	j		5178925	1					
ANR	5179000	Identifier	len		5178925	1					
ANR	5179001	CompoundStatement		8:24:198:198	5178925	1					
ANR	5179002	BreakStatement	break ;	1481:5:34466:34471	5178925	0	True				
ANR	5179003	ExpressionStatement	ch = buf [ i + j ]	1483:4:34483:34498	5178925	1	True				
ANR	5179004	AssignmentExpression	ch = buf [ i + j ]		5178925	0		=			
ANR	5179005	Identifier	ch		5178925	0					
ANR	5179006	ArrayIndexing	buf [ i + j ]		5178925	1					
ANR	5179007	Identifier	buf		5178925	0					
ANR	5179008	AdditiveExpression	i + j		5178925	1		+			
ANR	5179009	Identifier	i		5178925	0					
ANR	5179010	Identifier	j		5178925	1					
ANR	5179011	IfStatement	if ( p -> cur_enabled )		5178925	2					
ANR	5179012	Condition	p -> cur_enabled	1484:8:34508:34521	5178925	0	True				
ANR	5179013	PtrMemberAccess	p -> cur_enabled		5178925	0					
ANR	5179014	Identifier	p		5178925	0					
ANR	5179015	Identifier	cur_enabled		5178925	1					
ANR	5179016	CompoundStatement		12:24:263:263	5178925	1					
ANR	5179017	ExpressionStatement	"r_print_cursor ( p , i + j , 1 , 1 )"	1485:5:34531:34562	5178925	0	True				
ANR	5179018	CallExpression	"r_print_cursor ( p , i + j , 1 , 1 )"		5178925	0					
ANR	5179019	Callee	r_print_cursor		5178925	0					
ANR	5179020	Identifier	r_print_cursor		5178925	0					
ANR	5179021	ArgumentList	p		5178925	1					
ANR	5179022	Argument	p		5178925	0					
ANR	5179023	Identifier	p		5178925	0					
ANR	5179024	Argument	i + j		5178925	1					
ANR	5179025	AdditiveExpression	i + j		5178925	0		+			
ANR	5179026	Identifier	i		5178925	0					
ANR	5179027	Identifier	j		5178925	1					
ANR	5179028	Argument	1		5178925	2					
ANR	5179029	PrimaryExpression	1		5178925	0					
ANR	5179030	Argument	1		5178925	3					
ANR	5179031	PrimaryExpression	1		5178925	0					
ANR	5179032	ExpressionStatement	"p -> cb_printf ( ""%c"" , IS_PRINTABLE ( ch ) ? ch : ' ' )"	1486:5:34569:34616	5178925	1	True				
ANR	5179033	CallExpression	"p -> cb_printf ( ""%c"" , IS_PRINTABLE ( ch ) ? ch : ' ' )"		5178925	0					
ANR	5179034	Callee	p -> cb_printf		5178925	0					
ANR	5179035	PtrMemberAccess	p -> cb_printf		5178925	0					
ANR	5179036	Identifier	p		5178925	0					
ANR	5179037	Identifier	cb_printf		5178925	1					
ANR	5179038	ArgumentList	"""%c"""		5178925	1					
ANR	5179039	Argument	"""%c"""		5178925	0					
ANR	5179040	PrimaryExpression	"""%c"""		5178925	0					
ANR	5179041	Argument	IS_PRINTABLE ( ch ) ? ch : ' '		5178925	1					
ANR	5179042	ConditionalExpression	IS_PRINTABLE ( ch ) ? ch : ' '		5178925	0					
ANR	5179043	Condition	IS_PRINTABLE ( ch )		5178925	0					
ANR	5179044	CallExpression	IS_PRINTABLE ( ch )		5178925	0					
ANR	5179045	Callee	IS_PRINTABLE		5178925	0					
ANR	5179046	Identifier	IS_PRINTABLE		5178925	0					
ANR	5179047	ArgumentList	ch		5178925	1					
ANR	5179048	Argument	ch		5178925	0					
ANR	5179049	Identifier	ch		5178925	0					
ANR	5179050	Identifier	ch		5178925	1					
ANR	5179051	PrimaryExpression	' '		5178925	2					
ANR	5179052	ExpressionStatement	"r_print_cursor ( p , i + j , 1 , 0 )"	1487:5:34623:34654	5178925	2	True				
ANR	5179053	CallExpression	"r_print_cursor ( p , i + j , 1 , 0 )"		5178925	0					
ANR	5179054	Callee	r_print_cursor		5178925	0					
ANR	5179055	Identifier	r_print_cursor		5178925	0					
ANR	5179056	ArgumentList	p		5178925	1					
ANR	5179057	Argument	p		5178925	0					
ANR	5179058	Identifier	p		5178925	0					
ANR	5179059	Argument	i + j		5178925	1					
ANR	5179060	AdditiveExpression	i + j		5178925	0		+			
ANR	5179061	Identifier	i		5178925	0					
ANR	5179062	Identifier	j		5178925	1					
ANR	5179063	Argument	1		5178925	2					
ANR	5179064	PrimaryExpression	1		5178925	0					
ANR	5179065	Argument	0		5178925	3					
ANR	5179066	PrimaryExpression	0		5178925	0					
ANR	5179067	ElseStatement	else		5178925	0					
ANR	5179068	CompoundStatement		16:11:406:406	5178925	0					
ANR	5179069	ExpressionStatement	"p -> cb_printf ( ""%c"" , IS_PRINTABLE ( ch ) ? ch : ' ' )"	1489:5:34674:34721	5178925	0	True				
ANR	5179070	CallExpression	"p -> cb_printf ( ""%c"" , IS_PRINTABLE ( ch ) ? ch : ' ' )"		5178925	0					
ANR	5179071	Callee	p -> cb_printf		5178925	0					
ANR	5179072	PtrMemberAccess	p -> cb_printf		5178925	0					
ANR	5179073	Identifier	p		5178925	0					
ANR	5179074	Identifier	cb_printf		5178925	1					
ANR	5179075	ArgumentList	"""%c"""		5178925	1					
ANR	5179076	Argument	"""%c"""		5178925	0					
ANR	5179077	PrimaryExpression	"""%c"""		5178925	0					
ANR	5179078	Argument	IS_PRINTABLE ( ch ) ? ch : ' '		5178925	1					
ANR	5179079	ConditionalExpression	IS_PRINTABLE ( ch ) ? ch : ' '		5178925	0					
ANR	5179080	Condition	IS_PRINTABLE ( ch )		5178925	0					
ANR	5179081	CallExpression	IS_PRINTABLE ( ch )		5178925	0					
ANR	5179082	Callee	IS_PRINTABLE		5178925	0					
ANR	5179083	Identifier	IS_PRINTABLE		5178925	0					
ANR	5179084	ArgumentList	ch		5178925	1					
ANR	5179085	Argument	ch		5178925	0					
ANR	5179086	Identifier	ch		5178925	0					
ANR	5179087	Identifier	ch		5178925	1					
ANR	5179088	PrimaryExpression	' '		5178925	2					
ANR	5179089	ExpressionStatement	"p -> cb_printf ( ""\\n"" )"	1492:3:34737:34756	5178925	2	True				
ANR	5179090	CallExpression	"p -> cb_printf ( ""\\n"" )"		5178925	0					
ANR	5179091	Callee	p -> cb_printf		5178925	0					
ANR	5179092	PtrMemberAccess	p -> cb_printf		5178925	0					
ANR	5179093	Identifier	p		5178925	0					
ANR	5179094	Identifier	cb_printf		5178925	1					
ANR	5179095	ArgumentList	"""\\n"""		5178925	1					
ANR	5179096	Argument	"""\\n"""		5178925	0					
ANR	5179097	PrimaryExpression	"""\\n"""		5178925	0					
ANR	5179098	ElseStatement	else		5178925	0					
ANR	5179099	IfStatement	if ( offlines )		5178925	0					
ANR	5179100	Condition	offlines	1494:12:34774:34781	5178925	0	True				
ANR	5179101	Identifier	offlines		5178925	0					
ANR	5179102	CompoundStatement		25:2:559:605	5178925	1					
ANR	5179103	IdentifierDeclStatement	"const ut8 * o , * q ;"	1495:2:34788:34804	5178925	0	True				
ANR	5179104	IdentifierDecl	* o		5178925	0					
ANR	5179105	IdentifierDeclType	const ut8 *		5178925	0					
ANR	5179106	Identifier	o		5178925	1					
ANR	5179107	IdentifierDecl	* q		5178925	1					
ANR	5179108	IdentifierDeclType	const ut8 *		5178925	0					
ANR	5179109	Identifier	q		5178925	1					
ANR	5179110	IdentifierDeclStatement	ut64 off ;	1496:2:34808:34816	5178925	1	True				
ANR	5179111	IdentifierDecl	off		5178925	0					
ANR	5179112	IdentifierDeclType	ut64		5178925	0					
ANR	5179113	Identifier	off		5178925	1					
ANR	5179114	IdentifierDeclStatement	"int i , linenum_abs , mustbreak = 0 , linenum = 1 ;"	1497:2:34820:34866	5178925	2	True				
ANR	5179115	IdentifierDecl	i		5178925	0					
ANR	5179116	IdentifierDeclType	int		5178925	0					
ANR	5179117	Identifier	i		5178925	1					
ANR	5179118	IdentifierDecl	linenum_abs		5178925	1					
ANR	5179119	IdentifierDeclType	int		5178925	0					
ANR	5179120	Identifier	linenum_abs		5178925	1					
ANR	5179121	IdentifierDecl	mustbreak = 0		5178925	2					
ANR	5179122	IdentifierDeclType	int		5178925	0					
ANR	5179123	Identifier	mustbreak		5178925	1					
ANR	5179124	AssignmentExpression	mustbreak = 0		5178925	2		=			
ANR	5179125	Identifier	mustbreak		5178925	0					
ANR	5179126	PrimaryExpression	0		5178925	1					
ANR	5179127	IdentifierDecl	linenum = 1		5178925	3					
ANR	5179128	IdentifierDeclType	int		5178925	0					
ANR	5179129	Identifier	linenum		5178925	1					
ANR	5179130	AssignmentExpression	linenum = 1		5178925	2		=			
ANR	5179131	Identifier	linenum		5178925	0					
ANR	5179132	PrimaryExpression	1		5178925	1					
ANR	5179133	ExpressionStatement	o = q = buf	1498:2:34870:34881	5178925	3	True				
ANR	5179134	AssignmentExpression	o = q = buf		5178925	0		=			
ANR	5179135	Identifier	o		5178925	0					
ANR	5179136	AssignmentExpression	q = buf		5178925	1		=			
ANR	5179137	Identifier	q		5178925	0					
ANR	5179138	Identifier	buf		5178925	1					
ANR	5179139	ExpressionStatement	i = 0	1499:2:34885:34890	5178925	4	True				
ANR	5179140	AssignmentExpression	i = 0		5178925	0		=			
ANR	5179141	Identifier	i		5178925	0					
ANR	5179142	PrimaryExpression	0		5178925	1					
ANR	5179143	DoStatement	do		5178925	5					
ANR	5179144	CompoundStatement		28:5:636:636	5178925	0					
ANR	5179145	ExpressionStatement	off = addr + ( int ) ( size_t ) ( q - buf )	1501:3:34902:34939	5178925	0	True				
ANR	5179146	AssignmentExpression	off = addr + ( int ) ( size_t ) ( q - buf )		5178925	0		=			
ANR	5179147	Identifier	off		5178925	0					
ANR	5179148	AdditiveExpression	addr + ( int ) ( size_t ) ( q - buf )		5178925	1		+			
ANR	5179149	Identifier	addr		5178925	0					
ANR	5179150	CastExpression	( int ) ( size_t ) ( q - buf )		5178925	1					
ANR	5179151	CastTarget	int		5178925	0					
ANR	5179152	CastExpression	( size_t ) ( q - buf )		5178925	1					
ANR	5179153	CastTarget	size_t		5178925	0					
ANR	5179154	AdditiveExpression	q - buf		5178925	1		-			
ANR	5179155	Identifier	q		5178925	0					
ANR	5179156	Identifier	buf		5178925	1					
ANR	5179157	ExpressionStatement	"linenum_abs = r_util_lines_getline ( p -> lines_cache , p -> lines_cache_sz , off )"	1502:3:34944:35019	5178925	1	True				
ANR	5179158	AssignmentExpression	"linenum_abs = r_util_lines_getline ( p -> lines_cache , p -> lines_cache_sz , off )"		5178925	0		=			
ANR	5179159	Identifier	linenum_abs		5178925	0					
ANR	5179160	CallExpression	"r_util_lines_getline ( p -> lines_cache , p -> lines_cache_sz , off )"		5178925	1					
ANR	5179161	Callee	r_util_lines_getline		5178925	0					
ANR	5179162	Identifier	r_util_lines_getline		5178925	0					
ANR	5179163	ArgumentList	p -> lines_cache		5178925	1					
ANR	5179164	Argument	p -> lines_cache		5178925	0					
ANR	5179165	PtrMemberAccess	p -> lines_cache		5178925	0					
ANR	5179166	Identifier	p		5178925	0					
ANR	5179167	Identifier	lines_cache		5178925	1					
ANR	5179168	Argument	p -> lines_cache_sz		5178925	1					
ANR	5179169	PtrMemberAccess	p -> lines_cache_sz		5178925	0					
ANR	5179170	Identifier	p		5178925	0					
ANR	5179171	Identifier	lines_cache_sz		5178925	1					
ANR	5179172	Argument	off		5178925	2					
ANR	5179173	Identifier	off		5178925	0					
ANR	5179174	IfStatement	if ( p -> lines_cache_sz > 0 && p -> lines_abs )		5178925	2					
ANR	5179175	Condition	p -> lines_cache_sz > 0 && p -> lines_abs	1503:7:35028:35064	5178925	0	True				
ANR	5179176	AndExpression	p -> lines_cache_sz > 0 && p -> lines_abs		5178925	0		&&			
ANR	5179177	RelationalExpression	p -> lines_cache_sz > 0		5178925	0		>			
ANR	5179178	PtrMemberAccess	p -> lines_cache_sz		5178925	0					
ANR	5179179	Identifier	p		5178925	0					
ANR	5179180	Identifier	lines_cache_sz		5178925	1					
ANR	5179181	PrimaryExpression	0		5178925	1					
ANR	5179182	PtrMemberAccess	p -> lines_abs		5178925	1					
ANR	5179183	Identifier	p		5178925	0					
ANR	5179184	Identifier	lines_abs		5178925	1					
ANR	5179185	CompoundStatement		31:46:806:806	5178925	1					
ANR	5179186	Statement	p	1504:4:35073:35073	5178925	0	True				
ANR	5179187	Statement	->	1504:5:35074:35075	5178925	1	True				
ANR	5179188	Statement	cb_printf	1504:7:35076:35084	5178925	2	True				
ANR	5179189	Statement	(	1504:17:35086:35086	5178925	3	True				
ANR	5179190	Statement	"""%d 0x%08"""	1504:18:35087:35096	5178925	4	True				
ANR	5179191	Statement	PFMT64x	1504:29:35098:35104	5178925	5	True				
ANR	5179192	Statement	""" """	1504:37:35106:35108	5178925	6	True				
ANR	5179193	Statement	","	1504:40:35109:35109	5178925	7	True				
ANR	5179194	Statement	linenum_abs	1504:42:35111:35121	5178925	8	True				
ANR	5179195	Statement	","	1504:53:35122:35122	5178925	9	True				
ANR	5179196	Statement	off	1504:55:35124:35126	5178925	10	True				
ANR	5179197	Statement	)	1504:58:35127:35127	5178925	11	True				
ANR	5179198	ExpressionStatement		1504:59:35128:35128	5178925	12	True				
ANR	5179199	ElseStatement	else		5178925	0					
ANR	5179200	CompoundStatement		33:10:879:879	5178925	0					
ANR	5179201	Statement	p	1506:4:35146:35146	5178925	0	True				
ANR	5179202	Statement	->	1506:5:35147:35148	5178925	1	True				
ANR	5179203	Statement	cb_printf	1506:7:35149:35157	5178925	2	True				
ANR	5179204	Statement	(	1506:17:35159:35159	5178925	3	True				
ANR	5179205	Statement	"""+%d 0x%08"""	1506:18:35160:35170	5178925	4	True				
ANR	5179206	Statement	PFMT64x	1506:30:35172:35178	5178925	5	True				
ANR	5179207	Statement	""" """	1506:38:35180:35182	5178925	6	True				
ANR	5179208	Statement	","	1506:41:35183:35183	5178925	7	True				
ANR	5179209	Statement	linenum	1506:43:35185:35191	5178925	8	True				
ANR	5179210	Statement	","	1506:50:35192:35192	5178925	9	True				
ANR	5179211	Statement	off	1506:52:35194:35196	5178925	10	True				
ANR	5179212	Statement	)	1506:55:35197:35197	5178925	11	True				
ANR	5179213	ExpressionStatement		1506:56:35198:35198	5178925	12	True				
ANR	5179214	ForStatement	"for ( ; i < len && * q && * q != '\\n' ; q ++ , i ++ )"		5178925	3					
ANR	5179215	Condition	i < len && * q && * q != '\\n'	1508:10:35215:35241	5178925	0	True				
ANR	5179216	AndExpression	i < len && * q && * q != '\\n'		5178925	0		&&			
ANR	5179217	RelationalExpression	i < len		5178925	0		<			
ANR	5179218	Identifier	i		5178925	0					
ANR	5179219	Identifier	len		5178925	1					
ANR	5179220	AndExpression	* q && * q != '\\n'		5178925	1		&&			
ANR	5179221	UnaryOperationExpression	* q		5178925	0					
ANR	5179222	UnaryOperator	*		5178925	0					
ANR	5179223	Identifier	q		5178925	1					
ANR	5179224	EqualityExpression	* q != '\\n'		5178925	1		!=			
ANR	5179225	UnaryOperationExpression	* q		5178925	0					
ANR	5179226	UnaryOperator	*		5178925	0					
ANR	5179227	Identifier	q		5178925	1					
ANR	5179228	PrimaryExpression	'\\n'		5178925	1					
ANR	5179229	Expression	"q ++ , i ++"	1508:39:35244:35251	5178925	1	True				
ANR	5179230	PostIncDecOperationExpression	q ++		5178925	0					
ANR	5179231	Identifier	q		5178925	0					
ANR	5179232	IncDec	++		5178925	1					
ANR	5179233	PostIncDecOperationExpression	i ++		5178925	1					
ANR	5179234	Identifier	i		5178925	0					
ANR	5179235	IncDec	++		5178925	1					
ANR	5179236	CompoundStatement		36:49:993:993	5178925	2					
ANR	5179237	IfStatement	if ( ( i + 1 ) >= len || ! * q )		5178925	4					
ANR	5179238	Condition	( i + 1 ) >= len || ! * q	1511:7:35285:35305	5178925	0	True				
ANR	5179239	OrExpression	( i + 1 ) >= len || ! * q		5178925	0		||			
ANR	5179240	RelationalExpression	( i + 1 ) >= len		5178925	0		>=			
ANR	5179241	AdditiveExpression	i + 1		5178925	0		+			
ANR	5179242	Identifier	i		5178925	0					
ANR	5179243	PrimaryExpression	1		5178925	1					
ANR	5179244	Identifier	len		5178925	1					
ANR	5179245	UnaryOperationExpression	! * q		5178925	1					
ANR	5179246	UnaryOperator	!		5178925	0					
ANR	5179247	UnaryOperationExpression	* q		5178925	1					
ANR	5179248	UnaryOperator	*		5178925	0					
ANR	5179249	Identifier	q		5178925	1					
ANR	5179250	CompoundStatement		39:30:1047:1047	5178925	1					
ANR	5179251	ExpressionStatement	mustbreak = 1	1512:4:35314:35327	5178925	0	True				
ANR	5179252	AssignmentExpression	mustbreak = 1		5178925	0		=			
ANR	5179253	Identifier	mustbreak		5178925	0					
ANR	5179254	PrimaryExpression	1		5178925	1					
ANR	5179255	IfStatement	if ( ( q - o ) > 0 )		5178925	5					
ANR	5179256	Condition	( q - o ) > 0	1514:7:35341:35351	5178925	0	True				
ANR	5179257	RelationalExpression	( q - o ) > 0		5178925	0		>			
ANR	5179258	AdditiveExpression	q - o		5178925	0		-			
ANR	5179259	Identifier	q		5178925	0					
ANR	5179260	Identifier	o		5178925	1					
ANR	5179261	PrimaryExpression	0		5178925	1					
ANR	5179262	CompoundStatement		42:20:1093:1093	5178925	1					
ANR	5179263	ExpressionStatement	"p -> write ( o , ( int ) ( size_t ) ( q - o ) )"	1515:4:35360:35396	5178925	0	True				
ANR	5179264	CallExpression	"p -> write ( o , ( int ) ( size_t ) ( q - o ) )"		5178925	0					
ANR	5179265	Callee	p -> write		5178925	0					
ANR	5179266	PtrMemberAccess	p -> write		5178925	0					
ANR	5179267	Identifier	p		5178925	0					
ANR	5179268	Identifier	write		5178925	1					
ANR	5179269	ArgumentList	o		5178925	1					
ANR	5179270	Argument	o		5178925	0					
ANR	5179271	Identifier	o		5178925	0					
ANR	5179272	Argument	( int ) ( size_t ) ( q - o )		5178925	1					
ANR	5179273	CastExpression	( int ) ( size_t ) ( q - o )		5178925	0					
ANR	5179274	CastTarget	int		5178925	0					
ANR	5179275	CastExpression	( size_t ) ( q - o )		5178925	1					
ANR	5179276	CastTarget	size_t		5178925	0					
ANR	5179277	AdditiveExpression	q - o		5178925	1		-			
ANR	5179278	Identifier	q		5178925	0					
ANR	5179279	Identifier	o		5178925	1					
ANR	5179280	ExpressionStatement	"p -> cb_printf ( ""\\n"" )"	1517:3:35406:35425	5178925	6	True				
ANR	5179281	CallExpression	"p -> cb_printf ( ""\\n"" )"		5178925	0					
ANR	5179282	Callee	p -> cb_printf		5178925	0					
ANR	5179283	PtrMemberAccess	p -> cb_printf		5178925	0					
ANR	5179284	Identifier	p		5178925	0					
ANR	5179285	Identifier	cb_printf		5178925	1					
ANR	5179286	ArgumentList	"""\\n"""		5178925	1					
ANR	5179287	Argument	"""\\n"""		5178925	0					
ANR	5179288	PrimaryExpression	"""\\n"""		5178925	0					
ANR	5179289	ExpressionStatement	linenum ++	1518:3:35430:35439	5178925	7	True				
ANR	5179290	PostIncDecOperationExpression	linenum ++		5178925	0					
ANR	5179291	Identifier	linenum		5178925	0					
ANR	5179292	IncDec	++		5178925	1					
ANR	5179293	ExpressionStatement	o = ++ q	1519:3:35444:35451	5178925	8	True				
ANR	5179294	AssignmentExpression	o = ++ q		5178925	0		=			
ANR	5179295	Identifier	o		5178925	0					
ANR	5179296	UnaryExpression	++ q		5178925	1					
ANR	5179297	IncDec	++		5178925	0					
ANR	5179298	Identifier	q		5178925	1					
ANR	5179299	ExpressionStatement	i ++	1520:3:35456:35459	5178925	9	True				
ANR	5179300	PostIncDecOperationExpression	i ++		5178925	0					
ANR	5179301	Identifier	i		5178925	0					
ANR	5179302	IncDec	++		5178925	1					
ANR	5179303	Condition	! mustbreak	1521:11:35472:35481	5178925	1	True				
ANR	5179304	UnaryOperationExpression	! mustbreak		5178925	0					
ANR	5179305	UnaryOperator	!		5178925	0					
ANR	5179306	Identifier	mustbreak		5178925	1					
ANR	5179307	ElseStatement	else		5178925	0					
ANR	5179308	CompoundStatement		50:8:1232:1232	5178925	0					
ANR	5179309	ExpressionStatement	"p -> write ( buf , len )"	1523:2:35497:35516	5178925	0	True				
ANR	5179310	CallExpression	"p -> write ( buf , len )"		5178925	0					
ANR	5179311	Callee	p -> write		5178925	0					
ANR	5179312	PtrMemberAccess	p -> write		5178925	0					
ANR	5179313	Identifier	p		5178925	0					
ANR	5179314	Identifier	write		5178925	1					
ANR	5179315	ArgumentList	buf		5178925	1					
ANR	5179316	Argument	buf		5178925	0					
ANR	5179317	Identifier	buf		5178925	0					
ANR	5179318	Argument	len		5178925	1					
ANR	5179319	Identifier	len		5178925	0					
ANR	5179320	ReturnType	R_API void		5178925	1					
ANR	5179321	Identifier	r_print_raw		5178925	2					
ANR	5179322	ParameterList	"RPrint * p , ut64 addr , const ut8 * buf , int len , int offlines"		5178925	3					
ANR	5179323	Parameter	RPrint * p	1473:23:34199:34207	5178925	0	True				
ANR	5179324	ParameterType	RPrint *		5178925	0					
ANR	5179325	Identifier	p		5178925	1					
ANR	5179326	Parameter	ut64 addr	1473:34:34210:34218	5178925	1	True				
ANR	5179327	ParameterType	ut64		5178925	0					
ANR	5179328	Identifier	addr		5178925	1					
ANR	5179329	Parameter	const ut8 * buf	1473:45:34221:34234	5178925	2	True				
ANR	5179330	ParameterType	const ut8 *		5178925	0					
ANR	5179331	Identifier	buf		5178925	1					
ANR	5179332	Parameter	int len	1473:61:34237:34243	5178925	3	True				
ANR	5179333	ParameterType	int		5178925	0					
ANR	5179334	Identifier	len		5178925	1					
ANR	5179335	Parameter	int offlines	1473:70:34246:34257	5178925	4	True				
ANR	5179336	ParameterType	int		5178925	0					
ANR	5179337	Identifier	offlines		5178925	1					
ANR	5179338	CFGEntryNode	ENTRY		5178925		True				
ANR	5179339	CFGExitNode	EXIT		5178925		True				
ANR	5179340	Symbol	IS_PRINTABLE		5178925						
ANR	5179341	Symbol	p -> lines_abs		5178925						
ANR	5179342	Symbol	p -> cur_enabled		5178925						
ANR	5179343	Symbol	mustbreak		5178925						
ANR	5179344	Symbol	len		5178925						
ANR	5179345	Symbol	linenum		5178925						
ANR	5179346	Symbol	r_util_lines_getline		5178925						
ANR	5179347	Symbol	addr		5178925						
ANR	5179348	Symbol	cols		5178925						
ANR	5179349	Symbol	p -> cols		5178925						
ANR	5179350	Symbol	linenum_abs		5178925						
ANR	5179351	Symbol	* buf		5178925						
ANR	5179352	Symbol	ch		5178925						
ANR	5179353	Symbol	i		5178925						
ANR	5179354	Symbol	j		5178925						
ANR	5179355	Symbol	p -> lines_cache_sz		5178925						
ANR	5179356	Symbol	off		5178925						
ANR	5179357	Symbol	p -> lines_cache		5178925						
ANR	5179358	Symbol	o		5178925						
ANR	5179359	Symbol	p		5178925						
ANR	5179360	Symbol	q		5178925						
ANR	5179361	Symbol	buf		5178925						
ANR	5179362	Symbol	* i		5178925						
ANR	5179363	Symbol	* j		5178925						
ANR	5179364	Symbol	* p		5178925						
ANR	5179365	Symbol	* q		5178925						
ANR	5179366	Symbol	offlines		5178925						
ANR	5179367	Function	r_print_c	1527:0:35524:35931							
ANR	5179368	FunctionDef	"r_print_c (RPrint * p , const ut8 * str , int len)"		5179367	0					
ANR	5179369	CompoundStatement		1527:57:35581:35931	5179367	0					
ANR	5179370	IdentifierDeclStatement	"int i , inc = p -> width / 6 ;"	1528:1:35584:35609	5179367	0	True				
ANR	5179371	IdentifierDecl	i		5179367	0					
ANR	5179372	IdentifierDeclType	int		5179367	0					
ANR	5179373	Identifier	i		5179367	1					
ANR	5179374	IdentifierDecl	inc = p -> width / 6		5179367	1					
ANR	5179375	IdentifierDeclType	int		5179367	0					
ANR	5179376	Identifier	inc		5179367	1					
ANR	5179377	AssignmentExpression	inc = p -> width / 6		5179367	2		=			
ANR	5179378	Identifier	inc		5179367	0					
ANR	5179379	MultiplicativeExpression	p -> width / 6		5179367	1		/			
ANR	5179380	PtrMemberAccess	p -> width		5179367	0					
ANR	5179381	Identifier	p		5179367	0					
ANR	5179382	Identifier	width		5179367	1					
ANR	5179383	PrimaryExpression	6		5179367	1					
ANR	5179384	Statement	p	1529:1:35612:35612	5179367	1	True				
ANR	5179385	Statement	->	1529:2:35613:35614	5179367	2	True				
ANR	5179386	Statement	cb_printf	1529:4:35615:35623	5179367	3	True				
ANR	5179387	Statement	(	1529:14:35625:35625	5179367	4	True				
ANR	5179388	Statement	"""#define _BUFFER_SIZE %d\\n"""	1529:15:35626:35652	5179367	5	True				
ANR	5179389	Statement	"""unsigned char buffer[_BUFFER_SIZE] = {\\n"""	1530:1:35655:35696	5179367	6	True				
ANR	5179390	Statement	","	1530:43:35697:35697	5179367	7	True				
ANR	5179391	Statement	len	1531:1:35700:35702	5179367	8	True				
ANR	5179392	Statement	)	1531:4:35703:35703	5179367	9	True				
ANR	5179393	ExpressionStatement		1531:5:35704:35704	5179367	10	True				
ANR	5179394	ExpressionStatement	p -> interrupt = 0	1532:1:35707:35723	5179367	11	True				
ANR	5179395	AssignmentExpression	p -> interrupt = 0		5179367	0		=			
ANR	5179396	PtrMemberAccess	p -> interrupt		5179367	0					
ANR	5179397	Identifier	p		5179367	0					
ANR	5179398	Identifier	interrupt		5179367	1					
ANR	5179399	PrimaryExpression	0		5179367	1					
ANR	5179400	ForStatement	for ( i = 0 ; ! p -> interrupt && i < len ; )		5179367	12					
ANR	5179401	ForInit	i = 0 ;	1533:6:35731:35736	5179367	0	True				
ANR	5179402	AssignmentExpression	i = 0		5179367	0		=			
ANR	5179403	Identifier	i		5179367	0					
ANR	5179404	PrimaryExpression	0		5179367	1					
ANR	5179405	Condition	! p -> interrupt && i < len	1533:13:35738:35761	5179367	1	True				
ANR	5179406	AndExpression	! p -> interrupt && i < len		5179367	0		&&			
ANR	5179407	UnaryOperationExpression	! p -> interrupt		5179367	0					
ANR	5179408	UnaryOperator	!		5179367	0					
ANR	5179409	PtrMemberAccess	p -> interrupt		5179367	1					
ANR	5179410	Identifier	p		5179367	0					
ANR	5179411	Identifier	interrupt		5179367	1					
ANR	5179412	RelationalExpression	i < len		5179367	1		<			
ANR	5179413	Identifier	i		5179367	0					
ANR	5179414	Identifier	len		5179367	1					
ANR	5179415	CompoundStatement		7:40:183:183	5179367	2					
ANR	5179416	ExpressionStatement	"r_print_byte ( p , ""0x%02x"" , i , str [ i ] )"	1534:2:35769:35806	5179367	0	True				
ANR	5179417	CallExpression	"r_print_byte ( p , ""0x%02x"" , i , str [ i ] )"		5179367	0					
ANR	5179418	Callee	r_print_byte		5179367	0					
ANR	5179419	Identifier	r_print_byte		5179367	0					
ANR	5179420	ArgumentList	p		5179367	1					
ANR	5179421	Argument	p		5179367	0					
ANR	5179422	Identifier	p		5179367	0					
ANR	5179423	Argument	"""0x%02x"""		5179367	1					
ANR	5179424	PrimaryExpression	"""0x%02x"""		5179367	0					
ANR	5179425	Argument	i		5179367	2					
ANR	5179426	Identifier	i		5179367	0					
ANR	5179427	Argument	str [ i ]		5179367	3					
ANR	5179428	ArrayIndexing	str [ i ]		5179367	0					
ANR	5179429	Identifier	str		5179367	0					
ANR	5179430	Identifier	i		5179367	1					
ANR	5179431	IfStatement	if ( ++ i < len )		5179367	1					
ANR	5179432	Condition	++ i < len	1535:6:35814:35822	5179367	0	True				
ANR	5179433	RelationalExpression	++ i < len		5179367	0		<			
ANR	5179434	UnaryExpression	++ i		5179367	0					
ANR	5179435	IncDec	++		5179367	0					
ANR	5179436	Identifier	i		5179367	1					
ANR	5179437	Identifier	len		5179367	1					
ANR	5179438	CompoundStatement		9:17:243:243	5179367	1					
ANR	5179439	ExpressionStatement	"p -> cb_printf ( "", "" )"	1536:3:35830:35849	5179367	0	True				
ANR	5179440	CallExpression	"p -> cb_printf ( "", "" )"		5179367	0					
ANR	5179441	Callee	p -> cb_printf		5179367	0					
ANR	5179442	PtrMemberAccess	p -> cb_printf		5179367	0					
ANR	5179443	Identifier	p		5179367	0					
ANR	5179444	Identifier	cb_printf		5179367	1					
ANR	5179445	ArgumentList	""", """		5179367	1					
ANR	5179446	Argument	""", """		5179367	0					
ANR	5179447	PrimaryExpression	""", """		5179367	0					
ANR	5179448	IfStatement	if ( ! ( i % inc ) )		5179367	2					
ANR	5179449	Condition	! ( i % inc )	1538:6:35861:35870	5179367	0	True				
ANR	5179450	UnaryOperationExpression	! ( i % inc )		5179367	0					
ANR	5179451	UnaryOperator	!		5179367	0					
ANR	5179452	MultiplicativeExpression	i % inc		5179367	1		%			
ANR	5179453	Identifier	i		5179367	0					
ANR	5179454	Identifier	inc		5179367	1					
ANR	5179455	CompoundStatement		12:18:291:291	5179367	1					
ANR	5179456	ExpressionStatement	"p -> cb_printf ( ""\\n"" )"	1539:3:35878:35897	5179367	0	True				
ANR	5179457	CallExpression	"p -> cb_printf ( ""\\n"" )"		5179367	0					
ANR	5179458	Callee	p -> cb_printf		5179367	0					
ANR	5179459	PtrMemberAccess	p -> cb_printf		5179367	0					
ANR	5179460	Identifier	p		5179367	0					
ANR	5179461	Identifier	cb_printf		5179367	1					
ANR	5179462	ArgumentList	"""\\n"""		5179367	1					
ANR	5179463	Argument	"""\\n"""		5179367	0					
ANR	5179464	PrimaryExpression	"""\\n"""		5179367	0					
ANR	5179465	ExpressionStatement	"p -> cb_printf ( "" };\\n"" )"	1542:1:35907:35929	5179367	13	True				
ANR	5179466	CallExpression	"p -> cb_printf ( "" };\\n"" )"		5179367	0					
ANR	5179467	Callee	p -> cb_printf		5179367	0					
ANR	5179468	PtrMemberAccess	p -> cb_printf		5179367	0					
ANR	5179469	Identifier	p		5179367	0					
ANR	5179470	Identifier	cb_printf		5179367	1					
ANR	5179471	ArgumentList	""" };\\n"""		5179367	1					
ANR	5179472	Argument	""" };\\n"""		5179367	0					
ANR	5179473	PrimaryExpression	""" };\\n"""		5179367	0					
ANR	5179474	ReturnType	R_API void		5179367	1					
ANR	5179475	Identifier	r_print_c		5179367	2					
ANR	5179476	ParameterList	"RPrint * p , const ut8 * str , int len"		5179367	3					
ANR	5179477	Parameter	RPrint * p	1527:21:35545:35553	5179367	0	True				
ANR	5179478	ParameterType	RPrint *		5179367	0					
ANR	5179479	Identifier	p		5179367	1					
ANR	5179480	Parameter	const ut8 * str	1527:32:35556:35569	5179367	1	True				
ANR	5179481	ParameterType	const ut8 *		5179367	0					
ANR	5179482	Identifier	str		5179367	1					
ANR	5179483	Parameter	int len	1527:48:35572:35578	5179367	2	True				
ANR	5179484	ParameterType	int		5179367	0					
ANR	5179485	Identifier	len		5179367	1					
ANR	5179486	CFGEntryNode	ENTRY		5179367		True				
ANR	5179487	CFGExitNode	EXIT		5179367		True				
ANR	5179488	Symbol	p		5179367						
ANR	5179489	Symbol	str		5179367						
ANR	5179490	Symbol	* i		5179367						
ANR	5179491	Symbol	len		5179367						
ANR	5179492	Symbol	p -> width		5179367						
ANR	5179493	Symbol	i		5179367						
ANR	5179494	Symbol	* p		5179367						
ANR	5179495	Symbol	p -> interrupt		5179367						
ANR	5179496	Symbol	* str		5179367						
ANR	5179497	Symbol	inc		5179367						
ANR	5179498	DeclStmt									
ANR	5179499	Decl							RPrint	RPrint	staticp
ANR	5179500	Function	r_print_progressbar	1551:0:36033:36515							
ANR	5179501	FunctionDef	"r_print_progressbar (RPrint * p , int _pc , int _cols)"		5179500	0					
ANR	5179502	CompoundStatement		1551:62:36095:36515	5179500	0					
ANR	5179503	IdentifierDeclStatement	double pc = _pc ;	1552:1:36098:36113	5179500	0	True				
ANR	5179504	IdentifierDecl	pc = _pc		5179500	0					
ANR	5179505	IdentifierDeclType	double		5179500	0					
ANR	5179506	Identifier	pc		5179500	1					
ANR	5179507	AssignmentExpression	pc = _pc		5179500	2		=			
ANR	5179508	Identifier	_pc		5179500	0					
ANR	5179509	Identifier	_pc		5179500	1					
ANR	5179510	IdentifierDeclStatement	"int i , cols = ( _cols == - 1 ) ? 78 : _cols ;"	1554:1:36149:36187	5179500	1	True				
ANR	5179511	IdentifierDecl	i		5179500	0					
ANR	5179512	IdentifierDeclType	int		5179500	0					
ANR	5179513	Identifier	i		5179500	1					
ANR	5179514	IdentifierDecl	cols = ( _cols == - 1 ) ? 78 : _cols		5179500	1					
ANR	5179515	IdentifierDeclType	int		5179500	0					
ANR	5179516	Identifier	cols		5179500	1					
ANR	5179517	AssignmentExpression	cols = ( _cols == - 1 ) ? 78 : _cols		5179500	2		=			
ANR	5179518	Identifier	cols		5179500	0					
ANR	5179519	ConditionalExpression	( _cols == - 1 ) ? 78 : _cols		5179500	1					
ANR	5179520	Condition	_cols == - 1		5179500	0					
ANR	5179521	EqualityExpression	_cols == - 1		5179500	0		==			
ANR	5179522	Identifier	_cols		5179500	0					
ANR	5179523	UnaryOperationExpression	- 1		5179500	1					
ANR	5179524	UnaryOperator	-		5179500	0					
ANR	5179525	PrimaryExpression	1		5179500	1					
ANR	5179526	PrimaryExpression	78		5179500	1					
ANR	5179527	Identifier	_cols		5179500	2					
ANR	5179528	IfStatement	if ( ! p )		5179500	2					
ANR	5179529	Condition	! p	1555:5:36194:36195	5179500	0	True				
ANR	5179530	UnaryOperationExpression	! p		5179500	0					
ANR	5179531	UnaryOperator	!		5179500	0					
ANR	5179532	Identifier	p		5179500	1					
ANR	5179533	CompoundStatement		5:9:102:102	5179500	1					
ANR	5179534	ExpressionStatement	p = & staticp	1556:2:36202:36214	5179500	0	True				
ANR	5179535	AssignmentExpression	p = & staticp		5179500	0		=			
ANR	5179536	Identifier	p		5179500	0					
ANR	5179537	UnaryOperationExpression	& staticp		5179500	1					
ANR	5179538	UnaryOperator	&		5179500	0					
ANR	5179539	Identifier	staticp		5179500	1					
ANR	5179540	ExpressionStatement	"pc = R_MAX ( 0 , R_MIN ( 100 , pc ) )"	1558:1:36220:36251	5179500	3	True				
ANR	5179541	AssignmentExpression	"pc = R_MAX ( 0 , R_MIN ( 100 , pc ) )"		5179500	0		=			
ANR	5179542	Identifier	pc		5179500	0					
ANR	5179543	CallExpression	"R_MAX ( 0 , R_MIN ( 100 , pc ) )"		5179500	1					
ANR	5179544	Callee	R_MAX		5179500	0					
ANR	5179545	Identifier	R_MAX		5179500	0					
ANR	5179546	ArgumentList	0		5179500	1					
ANR	5179547	Argument	0		5179500	0					
ANR	5179548	PrimaryExpression	0		5179500	0					
ANR	5179549	Argument	"R_MIN ( 100 , pc )"		5179500	1					
ANR	5179550	CallExpression	"R_MIN ( 100 , pc )"		5179500	0					
ANR	5179551	Callee	R_MIN		5179500	0					
ANR	5179552	Identifier	R_MIN		5179500	0					
ANR	5179553	ArgumentList	100		5179500	1					
ANR	5179554	Argument	100		5179500	0					
ANR	5179555	PrimaryExpression	100		5179500	0					
ANR	5179556	Argument	pc		5179500	1					
ANR	5179557	Identifier	pc		5179500	0					
ANR	5179558	IfStatement	if ( p -> flags & R_PRINT_FLAGS_HEADER )		5179500	4					
ANR	5179559	Condition	p -> flags & R_PRINT_FLAGS_HEADER	1559:5:36258:36288	5179500	0	True				
ANR	5179560	BitAndExpression	p -> flags & R_PRINT_FLAGS_HEADER		5179500	0		&			
ANR	5179561	PtrMemberAccess	p -> flags		5179500	0					
ANR	5179562	Identifier	p		5179500	0					
ANR	5179563	Identifier	flags		5179500	1					
ANR	5179564	Identifier	R_PRINT_FLAGS_HEADER		5179500	1					
ANR	5179565	CompoundStatement		9:38:195:195	5179500	1					
ANR	5179566	ExpressionStatement	"p -> cb_printf ( ""%4d%% "" , pc )"	1560:2:36295:36322	5179500	0	True				
ANR	5179567	CallExpression	"p -> cb_printf ( ""%4d%% "" , pc )"		5179500	0					
ANR	5179568	Callee	p -> cb_printf		5179500	0					
ANR	5179569	PtrMemberAccess	p -> cb_printf		5179500	0					
ANR	5179570	Identifier	p		5179500	0					
ANR	5179571	Identifier	cb_printf		5179500	1					
ANR	5179572	ArgumentList	"""%4d%% """		5179500	1					
ANR	5179573	Argument	"""%4d%% """		5179500	0					
ANR	5179574	PrimaryExpression	"""%4d%% """		5179500	0					
ANR	5179575	Argument	pc		5179500	1					
ANR	5179576	Identifier	pc		5179500	0					
ANR	5179577	ExpressionStatement	cols -= 15	1562:1:36328:36338	5179500	5	True				
ANR	5179578	AssignmentExpression	cols -= 15		5179500	0		-=			
ANR	5179579	Identifier	cols		5179500	0					
ANR	5179580	PrimaryExpression	15		5179500	1					
ANR	5179581	ExpressionStatement	"p -> cb_printf ( ""["" )"	1563:1:36341:36359	5179500	6	True				
ANR	5179582	CallExpression	"p -> cb_printf ( ""["" )"		5179500	0					
ANR	5179583	Callee	p -> cb_printf		5179500	0					
ANR	5179584	PtrMemberAccess	p -> cb_printf		5179500	0					
ANR	5179585	Identifier	p		5179500	0					
ANR	5179586	Identifier	cb_printf		5179500	1					
ANR	5179587	ArgumentList	"""["""		5179500	1					
ANR	5179588	Argument	"""["""		5179500	0					
ANR	5179589	PrimaryExpression	"""["""		5179500	0					
ANR	5179590	ForStatement	for ( i = cols * pc / 100 ; i ; i -- )		5179500	7					
ANR	5179591	ForInit	i = cols * pc / 100 ;	1564:6:36367:36386	5179500	0	True				
ANR	5179592	AssignmentExpression	i = cols * pc / 100		5179500	0		=			
ANR	5179593	Identifier	i		5179500	0					
ANR	5179594	MultiplicativeExpression	cols * pc / 100		5179500	1		*			
ANR	5179595	Identifier	cols		5179500	0					
ANR	5179596	MultiplicativeExpression	pc / 100		5179500	1		/			
ANR	5179597	Identifier	pc		5179500	0					
ANR	5179598	PrimaryExpression	100		5179500	1					
ANR	5179599	Condition	i	1564:27:36388:36388	5179500	1	True				
ANR	5179600	Identifier	i		5179500	0					
ANR	5179601	PostIncDecOperationExpression	i --	1564:30:36391:36393	5179500	2	True				
ANR	5179602	Identifier	i		5179500	0					
ANR	5179603	IncDec	--		5179500	1					
ANR	5179604	CompoundStatement		14:35:300:300	5179500	3					
ANR	5179605	ExpressionStatement	"p -> cb_printf ( ""#"" )"	1565:2:36400:36418	5179500	0	True				
ANR	5179606	CallExpression	"p -> cb_printf ( ""#"" )"		5179500	0					
ANR	5179607	Callee	p -> cb_printf		5179500	0					
ANR	5179608	PtrMemberAccess	p -> cb_printf		5179500	0					
ANR	5179609	Identifier	p		5179500	0					
ANR	5179610	Identifier	cb_printf		5179500	1					
ANR	5179611	ArgumentList	"""#"""		5179500	1					
ANR	5179612	Argument	"""#"""		5179500	0					
ANR	5179613	PrimaryExpression	"""#"""		5179500	0					
ANR	5179614	ForStatement	for ( i = cols - ( cols * pc / 100 ) ; i ; i -- )		5179500	8					
ANR	5179615	ForInit	i = cols - ( cols * pc / 100 ) ;	1567:6:36429:36457	5179500	0	True				
ANR	5179616	AssignmentExpression	i = cols - ( cols * pc / 100 )		5179500	0		=			
ANR	5179617	Identifier	i		5179500	0					
ANR	5179618	AdditiveExpression	cols - ( cols * pc / 100 )		5179500	1		-			
ANR	5179619	Identifier	cols		5179500	0					
ANR	5179620	MultiplicativeExpression	cols * pc / 100		5179500	1		*			
ANR	5179621	Identifier	cols		5179500	0					
ANR	5179622	MultiplicativeExpression	pc / 100		5179500	1		/			
ANR	5179623	Identifier	pc		5179500	0					
ANR	5179624	PrimaryExpression	100		5179500	1					
ANR	5179625	Condition	i	1567:36:36459:36459	5179500	1	True				
ANR	5179626	Identifier	i		5179500	0					
ANR	5179627	PostIncDecOperationExpression	i --	1567:39:36462:36464	5179500	2	True				
ANR	5179628	Identifier	i		5179500	0					
ANR	5179629	IncDec	--		5179500	1					
ANR	5179630	CompoundStatement		17:44:371:371	5179500	3					
ANR	5179631	ExpressionStatement	"p -> cb_printf ( ""-"" )"	1568:2:36471:36489	5179500	0	True				
ANR	5179632	CallExpression	"p -> cb_printf ( ""-"" )"		5179500	0					
ANR	5179633	Callee	p -> cb_printf		5179500	0					
ANR	5179634	PtrMemberAccess	p -> cb_printf		5179500	0					
ANR	5179635	Identifier	p		5179500	0					
ANR	5179636	Identifier	cb_printf		5179500	1					
ANR	5179637	ArgumentList	"""-"""		5179500	1					
ANR	5179638	Argument	"""-"""		5179500	0					
ANR	5179639	PrimaryExpression	"""-"""		5179500	0					
ANR	5179640	ExpressionStatement	"p -> cb_printf ( ""]"" )"	1570:1:36495:36513	5179500	9	True				
ANR	5179641	CallExpression	"p -> cb_printf ( ""]"" )"		5179500	0					
ANR	5179642	Callee	p -> cb_printf		5179500	0					
ANR	5179643	PtrMemberAccess	p -> cb_printf		5179500	0					
ANR	5179644	Identifier	p		5179500	0					
ANR	5179645	Identifier	cb_printf		5179500	1					
ANR	5179646	ArgumentList	"""]"""		5179500	1					
ANR	5179647	Argument	"""]"""		5179500	0					
ANR	5179648	PrimaryExpression	"""]"""		5179500	0					
ANR	5179649	ReturnType	R_API void		5179500	1					
ANR	5179650	Identifier	r_print_progressbar		5179500	2					
ANR	5179651	ParameterList	"RPrint * p , int _pc , int _cols"		5179500	3					
ANR	5179652	Parameter	RPrint * p	1551:31:36064:36072	5179500	0	True				
ANR	5179653	ParameterType	RPrint *		5179500	0					
ANR	5179654	Identifier	p		5179500	1					
ANR	5179655	Parameter	int _pc	1551:42:36075:36081	5179500	1	True				
ANR	5179656	ParameterType	int		5179500	0					
ANR	5179657	Identifier	_pc		5179500	1					
ANR	5179658	Parameter	int _cols	1551:51:36084:36092	5179500	2	True				
ANR	5179659	ParameterType	int		5179500	0					
ANR	5179660	Identifier	_cols		5179500	1					
ANR	5179661	CFGEntryNode	ENTRY		5179500		True				
ANR	5179662	CFGExitNode	EXIT		5179500		True				
ANR	5179663	Symbol	p		5179500						
ANR	5179664	Symbol	& staticp		5179500						
ANR	5179665	Symbol	_pc		5179500						
ANR	5179666	Symbol	pc		5179500						
ANR	5179667	Symbol	R_MAX		5179500						
ANR	5179668	Symbol	i		5179500						
ANR	5179669	Symbol	p -> flags		5179500						
ANR	5179670	Symbol	R_MIN		5179500						
ANR	5179671	Symbol	* p		5179500						
ANR	5179672	Symbol	_cols		5179500						
ANR	5179673	Symbol	cols		5179500						
ANR	5179674	Symbol	R_PRINT_FLAGS_HEADER		5179500						
ANR	5179675	Function	r_print_rangebar	1573:0:36518:37215							
ANR	5179676	FunctionDef	"r_print_rangebar (RPrint * p , ut64 startA , ut64 endA , ut64 min , ut64 max , int cols)"		5179675	0					
ANR	5179677	CompoundStatement		1573:93:36611:37215	5179675	0					
ANR	5179678	IdentifierDeclStatement	const bool show_colors = p -> flags & R_PRINT_FLAGS_COLOR ;	1574:1:36614:36669	5179675	0	True				
ANR	5179679	IdentifierDecl	show_colors = p -> flags & R_PRINT_FLAGS_COLOR		5179675	0					
ANR	5179680	IdentifierDeclType	const bool		5179675	0					
ANR	5179681	Identifier	show_colors		5179675	1					
ANR	5179682	AssignmentExpression	show_colors = p -> flags & R_PRINT_FLAGS_COLOR		5179675	2		=			
ANR	5179683	Identifier	show_colors		5179675	0					
ANR	5179684	BitAndExpression	p -> flags & R_PRINT_FLAGS_COLOR		5179675	1		&			
ANR	5179685	PtrMemberAccess	p -> flags		5179675	0					
ANR	5179686	Identifier	p		5179675	0					
ANR	5179687	Identifier	flags		5179675	1					
ANR	5179688	Identifier	R_PRINT_FLAGS_COLOR		5179675	1					
ANR	5179689	IdentifierDeclStatement	int j = 0 ;	1575:1:36672:36681	5179675	1	True				
ANR	5179690	IdentifierDecl	j = 0		5179675	0					
ANR	5179691	IdentifierDeclType	int		5179675	0					
ANR	5179692	Identifier	j		5179675	1					
ANR	5179693	AssignmentExpression	j = 0		5179675	2		=			
ANR	5179694	Identifier	j		5179675	0					
ANR	5179695	PrimaryExpression	0		5179675	1					
ANR	5179696	ExpressionStatement	"p -> cb_printf ( ""|"" )"	1576:1:36684:36702	5179675	2	True				
ANR	5179697	CallExpression	"p -> cb_printf ( ""|"" )"		5179675	0					
ANR	5179698	Callee	p -> cb_printf		5179675	0					
ANR	5179699	PtrMemberAccess	p -> cb_printf		5179675	0					
ANR	5179700	Identifier	p		5179675	0					
ANR	5179701	Identifier	cb_printf		5179675	1					
ANR	5179702	ArgumentList	"""|"""		5179675	1					
ANR	5179703	Argument	"""|"""		5179675	0					
ANR	5179704	PrimaryExpression	"""|"""		5179675	0					
ANR	5179705	IfStatement	if ( cols < 1 )		5179675	3					
ANR	5179706	Condition	cols < 1	1577:5:36709:36716	5179675	0	True				
ANR	5179707	RelationalExpression	cols < 1		5179675	0		<			
ANR	5179708	Identifier	cols		5179675	0					
ANR	5179709	PrimaryExpression	1		5179675	1					
ANR	5179710	CompoundStatement		5:15:107:107	5179675	1					
ANR	5179711	ExpressionStatement	cols = 1	1578:2:36723:36731	5179675	0	True				
ANR	5179712	AssignmentExpression	cols = 1		5179675	0		=			
ANR	5179713	Identifier	cols		5179675	0					
ANR	5179714	PrimaryExpression	1		5179675	1					
ANR	5179715	IdentifierDeclStatement	int mul = ( max - min ) / cols ;	1580:1:36737:36765	5179675	4	True				
ANR	5179716	IdentifierDecl	mul = ( max - min ) / cols		5179675	0					
ANR	5179717	IdentifierDeclType	int		5179675	0					
ANR	5179718	Identifier	mul		5179675	1					
ANR	5179719	AssignmentExpression	mul = ( max - min ) / cols		5179675	2		=			
ANR	5179720	Identifier	mul		5179675	0					
ANR	5179721	MultiplicativeExpression	( max - min ) / cols		5179675	1		/			
ANR	5179722	AdditiveExpression	max - min		5179675	0		-			
ANR	5179723	Identifier	max		5179675	0					
ANR	5179724	Identifier	min		5179675	1					
ANR	5179725	Identifier	cols		5179675	1					
ANR	5179726	IdentifierDeclStatement	bool isFirst = true ;	1581:1:36768:36787	5179675	5	True				
ANR	5179727	IdentifierDecl	isFirst = true		5179675	0					
ANR	5179728	IdentifierDeclType	bool		5179675	0					
ANR	5179729	Identifier	isFirst		5179675	1					
ANR	5179730	AssignmentExpression	isFirst = true		5179675	2		=			
ANR	5179731	Identifier	true		5179675	0					
ANR	5179732	Identifier	true		5179675	1					
ANR	5179733	ForStatement	for ( j = 0 ; j < cols ; j ++ )		5179675	6					
ANR	5179734	ForInit	j = 0 ;	1582:6:36795:36800	5179675	0	True				
ANR	5179735	AssignmentExpression	j = 0		5179675	0		=			
ANR	5179736	Identifier	j		5179675	0					
ANR	5179737	PrimaryExpression	0		5179675	1					
ANR	5179738	Condition	j < cols	1582:13:36802:36809	5179675	1	True				
ANR	5179739	RelationalExpression	j < cols		5179675	0		<			
ANR	5179740	Identifier	j		5179675	0					
ANR	5179741	Identifier	cols		5179675	1					
ANR	5179742	PostIncDecOperationExpression	j ++	1582:23:36812:36814	5179675	2	True				
ANR	5179743	Identifier	j		5179675	0					
ANR	5179744	IncDec	++		5179675	1					
ANR	5179745	CompoundStatement		12:2:242:275	5179675	3					
ANR	5179746	IdentifierDeclStatement	ut64 startB = min + ( j * mul ) ;	1583:2:36821:36850	5179675	0	True				
ANR	5179747	IdentifierDecl	startB = min + ( j * mul )		5179675	0					
ANR	5179748	IdentifierDeclType	ut64		5179675	0					
ANR	5179749	Identifier	startB		5179675	1					
ANR	5179750	AssignmentExpression	startB = min + ( j * mul )		5179675	2		=			
ANR	5179751	Identifier	startB		5179675	0					
ANR	5179752	AdditiveExpression	min + ( j * mul )		5179675	1		+			
ANR	5179753	Identifier	min		5179675	0					
ANR	5179754	MultiplicativeExpression	j * mul		5179675	1		*			
ANR	5179755	Identifier	j		5179675	0					
ANR	5179756	Identifier	mul		5179675	1					
ANR	5179757	IdentifierDeclStatement	ut64 endB = min + ( ( j + 1 ) * mul ) ;	1584:2:36854:36887	5179675	1	True				
ANR	5179758	IdentifierDecl	endB = min + ( ( j + 1 ) * mul )		5179675	0					
ANR	5179759	IdentifierDeclType	ut64		5179675	0					
ANR	5179760	Identifier	endB		5179675	1					
ANR	5179761	AssignmentExpression	endB = min + ( ( j + 1 ) * mul )		5179675	2		=			
ANR	5179762	Identifier	endB		5179675	0					
ANR	5179763	AdditiveExpression	min + ( ( j + 1 ) * mul )		5179675	1		+			
ANR	5179764	Identifier	min		5179675	0					
ANR	5179765	MultiplicativeExpression	( j + 1 ) * mul		5179675	1		*			
ANR	5179766	AdditiveExpression	j + 1		5179675	0		+			
ANR	5179767	Identifier	j		5179675	0					
ANR	5179768	PrimaryExpression	1		5179675	1					
ANR	5179769	Identifier	mul		5179675	1					
ANR	5179770	IfStatement	if ( startA <= endB && endA >= startB )		5179675	2					
ANR	5179771	Condition	startA <= endB && endA >= startB	1585:6:36895:36926	5179675	0	True				
ANR	5179772	AndExpression	startA <= endB && endA >= startB		5179675	0		&&			
ANR	5179773	RelationalExpression	startA <= endB		5179675	0		<=			
ANR	5179774	Identifier	startA		5179675	0					
ANR	5179775	Identifier	endB		5179675	1					
ANR	5179776	RelationalExpression	endA >= startB		5179675	1		>=			
ANR	5179777	Identifier	endA		5179675	0					
ANR	5179778	Identifier	startB		5179675	1					
ANR	5179779	CompoundStatement		13:40:317:317	5179675	1					
ANR	5179780	IfStatement	if ( show_colors & isFirst )		5179675	0					
ANR	5179781	Condition	show_colors & isFirst	1586:7:36938:36958	5179675	0	True				
ANR	5179782	BitAndExpression	show_colors & isFirst		5179675	0		&			
ANR	5179783	Identifier	show_colors		5179675	0					
ANR	5179784	Identifier	isFirst		5179675	1					
ANR	5179785	CompoundStatement		14:30:349:349	5179675	1					
ANR	5179786	Statement	p	1587:4:36967:36967	5179675	0	True				
ANR	5179787	Statement	->	1587:5:36968:36969	5179675	1	True				
ANR	5179788	Statement	cb_printf	1587:7:36970:36978	5179675	2	True				
ANR	5179789	Statement	(	1587:17:36980:36980	5179675	3	True				
ANR	5179790	Statement	Color_GREEN	1587:18:36981:36991	5179675	4	True				
ANR	5179791	Statement	"""#"""	1587:30:36993:36995	5179675	5	True				
ANR	5179792	Statement	)	1587:33:36996:36996	5179675	6	True				
ANR	5179793	ExpressionStatement		1587:34:36997:36997	5179675	7	True				
ANR	5179794	ExpressionStatement	isFirst = false	1588:4:37003:37018	5179675	8	True				
ANR	5179795	AssignmentExpression	isFirst = false		5179675	0		=			
ANR	5179796	Identifier	isFirst		5179675	0					
ANR	5179797	Identifier	false		5179675	1					
ANR	5179798	ElseStatement	else		5179675	0					
ANR	5179799	CompoundStatement		17:10:418:418	5179675	0					
ANR	5179800	ExpressionStatement	"p -> cb_printf ( ""#"" )"	1590:4:37036:37054	5179675	0	True				
ANR	5179801	CallExpression	"p -> cb_printf ( ""#"" )"		5179675	0					
ANR	5179802	Callee	p -> cb_printf		5179675	0					
ANR	5179803	PtrMemberAccess	p -> cb_printf		5179675	0					
ANR	5179804	Identifier	p		5179675	0					
ANR	5179805	Identifier	cb_printf		5179675	1					
ANR	5179806	ArgumentList	"""#"""		5179675	1					
ANR	5179807	Argument	"""#"""		5179675	0					
ANR	5179808	PrimaryExpression	"""#"""		5179675	0					
ANR	5179809	ElseStatement	else		5179675	0					
ANR	5179810	CompoundStatement		20:9:458:458	5179675	0					
ANR	5179811	IfStatement	if ( isFirst )		5179675	0					
ANR	5179812	Condition	isFirst	1593:7:37079:37085	5179675	0	True				
ANR	5179813	Identifier	isFirst		5179675	0					
ANR	5179814	CompoundStatement		21:16:476:476	5179675	1					
ANR	5179815	ExpressionStatement	"p -> cb_printf ( ""-"" )"	1594:4:37094:37112	5179675	0	True				
ANR	5179816	CallExpression	"p -> cb_printf ( ""-"" )"		5179675	0					
ANR	5179817	Callee	p -> cb_printf		5179675	0					
ANR	5179818	PtrMemberAccess	p -> cb_printf		5179675	0					
ANR	5179819	Identifier	p		5179675	0					
ANR	5179820	Identifier	cb_printf		5179675	1					
ANR	5179821	ArgumentList	"""-"""		5179675	1					
ANR	5179822	Argument	"""-"""		5179675	0					
ANR	5179823	PrimaryExpression	"""-"""		5179675	0					
ANR	5179824	ElseStatement	else		5179675	0					
ANR	5179825	CompoundStatement		23:10:512:512	5179675	0					
ANR	5179826	Statement	p	1596:4:37130:37130	5179675	0	True				
ANR	5179827	Statement	->	1596:5:37131:37132	5179675	1	True				
ANR	5179828	Statement	cb_printf	1596:7:37133:37141	5179675	2	True				
ANR	5179829	Statement	(	1596:17:37143:37143	5179675	3	True				
ANR	5179830	Statement	Color_RESET	1596:18:37144:37154	5179675	4	True				
ANR	5179831	Statement	"""-"""	1596:30:37156:37158	5179675	5	True				
ANR	5179832	Statement	)	1596:33:37159:37159	5179675	6	True				
ANR	5179833	ExpressionStatement		1596:34:37160:37160	5179675	7	True				
ANR	5179834	ExpressionStatement	isFirst = true	1597:4:37166:37180	5179675	8	True				
ANR	5179835	AssignmentExpression	isFirst = true		5179675	0		=			
ANR	5179836	Identifier	isFirst		5179675	0					
ANR	5179837	Identifier	true		5179675	1					
ANR	5179838	ExpressionStatement	"p -> cb_printf ( ""|"" )"	1601:1:37195:37213	5179675	7	True				
ANR	5179839	CallExpression	"p -> cb_printf ( ""|"" )"		5179675	0					
ANR	5179840	Callee	p -> cb_printf		5179675	0					
ANR	5179841	PtrMemberAccess	p -> cb_printf		5179675	0					
ANR	5179842	Identifier	p		5179675	0					
ANR	5179843	Identifier	cb_printf		5179675	1					
ANR	5179844	ArgumentList	"""|"""		5179675	1					
ANR	5179845	Argument	"""|"""		5179675	0					
ANR	5179846	PrimaryExpression	"""|"""		5179675	0					
ANR	5179847	ReturnType	R_API void		5179675	1					
ANR	5179848	Identifier	r_print_rangebar		5179675	2					
ANR	5179849	ParameterList	"RPrint * p , ut64 startA , ut64 endA , ut64 min , ut64 max , int cols"		5179675	3					
ANR	5179850	Parameter	RPrint * p	1573:28:36546:36554	5179675	0	True				
ANR	5179851	ParameterType	RPrint *		5179675	0					
ANR	5179852	Identifier	p		5179675	1					
ANR	5179853	Parameter	ut64 startA	1573:39:36557:36567	5179675	1	True				
ANR	5179854	ParameterType	ut64		5179675	0					
ANR	5179855	Identifier	startA		5179675	1					
ANR	5179856	Parameter	ut64 endA	1573:52:36570:36578	5179675	2	True				
ANR	5179857	ParameterType	ut64		5179675	0					
ANR	5179858	Identifier	endA		5179675	1					
ANR	5179859	Parameter	ut64 min	1573:63:36581:36588	5179675	3	True				
ANR	5179860	ParameterType	ut64		5179675	0					
ANR	5179861	Identifier	min		5179675	1					
ANR	5179862	Parameter	ut64 max	1573:73:36591:36598	5179675	4	True				
ANR	5179863	ParameterType	ut64		5179675	0					
ANR	5179864	Identifier	max		5179675	1					
ANR	5179865	Parameter	int cols	1573:83:36601:36608	5179675	5	True				
ANR	5179866	ParameterType	int		5179675	0					
ANR	5179867	Identifier	cols		5179675	1					
ANR	5179868	CFGEntryNode	ENTRY		5179675		True				
ANR	5179869	CFGExitNode	EXIT		5179675		True				
ANR	5179870	Symbol	max		5179675						
ANR	5179871	Symbol	mul		5179675						
ANR	5179872	Symbol	endB		5179675						
ANR	5179873	Symbol	false		5179675						
ANR	5179874	Symbol	endA		5179675						
ANR	5179875	Symbol	show_colors		5179675						
ANR	5179876	Symbol	j		5179675						
ANR	5179877	Symbol	startB		5179675						
ANR	5179878	Symbol	p		5179675						
ANR	5179879	Symbol	isFirst		5179675						
ANR	5179880	Symbol	startA		5179675						
ANR	5179881	Symbol	min		5179675						
ANR	5179882	Symbol	R_PRINT_FLAGS_COLOR		5179675						
ANR	5179883	Symbol	true		5179675						
ANR	5179884	Symbol	p -> flags		5179675						
ANR	5179885	Symbol	* p		5179675						
ANR	5179886	Symbol	cols		5179675						
ANR	5179887	Function	r_print_zoom_buf	1604:0:37218:38367							
ANR	5179888	FunctionDef	"r_print_zoom_buf (RPrint * p , void * user , RPrintZoomCallback cb , ut64 from , ut64 to , int len , int maxlen)"		5179887	0					
ANR	5179889	CompoundStatement		1604:115:37333:38367	5179887	0					
ANR	5179890	Statement	static	1605:1:37336:37341	5179887	0	True				
ANR	5179891	IdentifierDeclStatement	int mode = - 1 ;	1605:8:37343:37356	5179887	1	True				
ANR	5179892	IdentifierDecl	mode = - 1		5179887	0					
ANR	5179893	IdentifierDeclType	int		5179887	0					
ANR	5179894	Identifier	mode		5179887	1					
ANR	5179895	AssignmentExpression	mode = - 1		5179887	2		=			
ANR	5179896	Identifier	mode		5179887	0					
ANR	5179897	UnaryOperationExpression	- 1		5179887	1					
ANR	5179898	UnaryOperator	-		5179887	0					
ANR	5179899	PrimaryExpression	1		5179887	1					
ANR	5179900	IdentifierDeclStatement	"ut8 * bufz = NULL , * bufz2 = NULL ;"	1606:1:37359:37390	5179887	2	True				
ANR	5179901	IdentifierDecl	* bufz = NULL		5179887	0					
ANR	5179902	IdentifierDeclType	ut8 *		5179887	0					
ANR	5179903	Identifier	bufz		5179887	1					
ANR	5179904	AssignmentExpression	* bufz = NULL		5179887	2		=			
ANR	5179905	Identifier	NULL		5179887	0					
ANR	5179906	Identifier	NULL		5179887	1					
ANR	5179907	IdentifierDecl	* bufz2 = NULL		5179887	1					
ANR	5179908	IdentifierDeclType	ut8 *		5179887	0					
ANR	5179909	Identifier	bufz2		5179887	1					
ANR	5179910	AssignmentExpression	* bufz2 = NULL		5179887	2		=			
ANR	5179911	Identifier	NULL		5179887	0					
ANR	5179912	Identifier	NULL		5179887	1					
ANR	5179913	IdentifierDeclStatement	"int i , j = 0 ;"	1607:1:37393:37405	5179887	3	True				
ANR	5179914	IdentifierDecl	i		5179887	0					
ANR	5179915	IdentifierDeclType	int		5179887	0					
ANR	5179916	Identifier	i		5179887	1					
ANR	5179917	IdentifierDecl	j = 0		5179887	1					
ANR	5179918	IdentifierDeclType	int		5179887	0					
ANR	5179919	Identifier	j		5179887	1					
ANR	5179920	AssignmentExpression	j = 0		5179887	2		=			
ANR	5179921	Identifier	j		5179887	0					
ANR	5179922	PrimaryExpression	0		5179887	1					
ANR	5179923	IdentifierDeclStatement	ut64 size = ( to - from ) ;	1608:1:37408:37431	5179887	4	True				
ANR	5179924	IdentifierDecl	size = ( to - from )		5179887	0					
ANR	5179925	IdentifierDeclType	ut64		5179887	0					
ANR	5179926	Identifier	size		5179887	1					
ANR	5179927	AssignmentExpression	size = ( to - from )		5179887	2		=			
ANR	5179928	Identifier	size		5179887	0					
ANR	5179929	AdditiveExpression	to - from		5179887	1		-			
ANR	5179930	Identifier	to		5179887	0					
ANR	5179931	Identifier	from		5179887	1					
ANR	5179932	ExpressionStatement	size = len ? size / len : 0	1609:1:37434:37459	5179887	5	True				
ANR	5179933	AssignmentExpression	size = len ? size / len : 0		5179887	0		=			
ANR	5179934	Identifier	size		5179887	0					
ANR	5179935	ConditionalExpression	len ? size / len : 0		5179887	1					
ANR	5179936	Condition	len		5179887	0					
ANR	5179937	Identifier	len		5179887	0					
ANR	5179938	MultiplicativeExpression	size / len		5179887	1		/			
ANR	5179939	Identifier	size		5179887	0					
ANR	5179940	Identifier	len		5179887	1					
ANR	5179941	PrimaryExpression	0		5179887	2					
ANR	5179942	IfStatement	if ( maxlen < 2 )		5179887	6					
ANR	5179943	Condition	maxlen < 2	1611:5:37467:37476	5179887	0	True				
ANR	5179944	RelationalExpression	maxlen < 2		5179887	0		<			
ANR	5179945	Identifier	maxlen		5179887	0					
ANR	5179946	PrimaryExpression	2		5179887	1					
ANR	5179947	CompoundStatement		8:17:145:145	5179887	1					
ANR	5179948	ExpressionStatement	maxlen = 1024 * 1024	1612:2:37483:37503	5179887	0	True				
ANR	5179949	AssignmentExpression	maxlen = 1024 * 1024		5179887	0		=			
ANR	5179950	Identifier	maxlen		5179887	0					
ANR	5179951	MultiplicativeExpression	1024 * 1024		5179887	1		*			
ANR	5179952	PrimaryExpression	1024		5179887	0					
ANR	5179953	PrimaryExpression	1024		5179887	1					
ANR	5179954	IfStatement	if ( size > maxlen )		5179887	7					
ANR	5179955	Condition	size > maxlen	1614:5:37513:37525	5179887	0	True				
ANR	5179956	RelationalExpression	size > maxlen		5179887	0		>			
ANR	5179957	Identifier	size		5179887	0					
ANR	5179958	Identifier	maxlen		5179887	1					
ANR	5179959	CompoundStatement		11:20:194:194	5179887	1					
ANR	5179960	ExpressionStatement	size = maxlen	1615:2:37532:37545	5179887	0	True				
ANR	5179961	AssignmentExpression	size = maxlen		5179887	0		=			
ANR	5179962	Identifier	size		5179887	0					
ANR	5179963	Identifier	maxlen		5179887	1					
ANR	5179964	IfStatement	if ( size < 1 )		5179887	8					
ANR	5179965	Condition	size < 1	1617:5:37555:37562	5179887	0	True				
ANR	5179966	RelationalExpression	size < 1		5179887	0		<			
ANR	5179967	Identifier	size		5179887	0					
ANR	5179968	PrimaryExpression	1		5179887	1					
ANR	5179969	CompoundStatement		14:15:231:231	5179887	1					
ANR	5179970	ExpressionStatement	size = 1	1618:2:37569:37577	5179887	0	True				
ANR	5179971	AssignmentExpression	size = 1		5179887	0		=			
ANR	5179972	Identifier	size		5179887	0					
ANR	5179973	PrimaryExpression	1		5179887	1					
ANR	5179974	IfStatement	if ( len < 1 )		5179887	9					
ANR	5179975	Condition	len < 1	1620:5:37587:37593	5179887	0	True				
ANR	5179976	RelationalExpression	len < 1		5179887	0		<			
ANR	5179977	Identifier	len		5179887	0					
ANR	5179978	PrimaryExpression	1		5179887	1					
ANR	5179979	CompoundStatement		17:14:262:262	5179887	1					
ANR	5179980	ExpressionStatement	len = 1	1621:2:37600:37607	5179887	0	True				
ANR	5179981	AssignmentExpression	len = 1		5179887	0		=			
ANR	5179982	Identifier	len		5179887	0					
ANR	5179983	PrimaryExpression	1		5179887	1					
ANR	5179984	IfStatement	if ( mode == p -> zoom -> mode && from == p -> zoom -> from && to == p -> zoom -> to && size == p -> zoom -> size )		5179887	10					
ANR	5179985	Condition	mode == p -> zoom -> mode && from == p -> zoom -> from && to == p -> zoom -> to && size == p -> zoom -> size	1624:5:37618:37709	5179887	0	True				
ANR	5179986	AndExpression	mode == p -> zoom -> mode && from == p -> zoom -> from && to == p -> zoom -> to && size == p -> zoom -> size		5179887	0		&&			
ANR	5179987	EqualityExpression	mode == p -> zoom -> mode		5179887	0		==			
ANR	5179988	Identifier	mode		5179887	0					
ANR	5179989	PtrMemberAccess	p -> zoom -> mode		5179887	1					
ANR	5179990	PtrMemberAccess	p -> zoom		5179887	0					
ANR	5179991	Identifier	p		5179887	0					
ANR	5179992	Identifier	zoom		5179887	1					
ANR	5179993	Identifier	mode		5179887	1					
ANR	5179994	AndExpression	from == p -> zoom -> from && to == p -> zoom -> to && size == p -> zoom -> size		5179887	1		&&			
ANR	5179995	EqualityExpression	from == p -> zoom -> from		5179887	0		==			
ANR	5179996	Identifier	from		5179887	0					
ANR	5179997	PtrMemberAccess	p -> zoom -> from		5179887	1					
ANR	5179998	PtrMemberAccess	p -> zoom		5179887	0					
ANR	5179999	Identifier	p		5179887	0					
ANR	5180000	Identifier	zoom		5179887	1					
ANR	5180001	Identifier	from		5179887	1					
ANR	5180002	AndExpression	to == p -> zoom -> to && size == p -> zoom -> size		5179887	1		&&			
ANR	5180003	EqualityExpression	to == p -> zoom -> to		5179887	0		==			
ANR	5180004	Identifier	to		5179887	0					
ANR	5180005	PtrMemberAccess	p -> zoom -> to		5179887	1					
ANR	5180006	PtrMemberAccess	p -> zoom		5179887	0					
ANR	5180007	Identifier	p		5179887	0					
ANR	5180008	Identifier	zoom		5179887	1					
ANR	5180009	Identifier	to		5179887	1					
ANR	5180010	EqualityExpression	size == p -> zoom -> size		5179887	1		==			
ANR	5180011	Identifier	size		5179887	0					
ANR	5180012	PtrMemberAccess	p -> zoom -> size		5179887	1					
ANR	5180013	PtrMemberAccess	p -> zoom		5179887	0					
ANR	5180014	Identifier	p		5179887	0					
ANR	5180015	Identifier	zoom		5179887	1					
ANR	5180016	Identifier	size		5179887	1					
ANR	5180017	CompoundStatement		21:99:378:378	5179887	1					
ANR	5180018	ExpressionStatement	bufz = p -> zoom -> buf	1626:2:37736:37755	5179887	0	True				
ANR	5180019	AssignmentExpression	bufz = p -> zoom -> buf		5179887	0		=			
ANR	5180020	Identifier	bufz		5179887	0					
ANR	5180021	PtrMemberAccess	p -> zoom -> buf		5179887	1					
ANR	5180022	PtrMemberAccess	p -> zoom		5179887	0					
ANR	5180023	Identifier	p		5179887	0					
ANR	5180024	Identifier	zoom		5179887	1					
ANR	5180025	Identifier	buf		5179887	1					
ANR	5180026	ExpressionStatement	size = p -> zoom -> size	1627:2:37759:37779	5179887	1	True				
ANR	5180027	AssignmentExpression	size = p -> zoom -> size		5179887	0		=			
ANR	5180028	Identifier	size		5179887	0					
ANR	5180029	PtrMemberAccess	p -> zoom -> size		5179887	1					
ANR	5180030	PtrMemberAccess	p -> zoom		5179887	0					
ANR	5180031	Identifier	p		5179887	0					
ANR	5180032	Identifier	zoom		5179887	1					
ANR	5180033	Identifier	size		5179887	1					
ANR	5180034	ElseStatement	else		5179887	0					
ANR	5180035	CompoundStatement		25:8:455:455	5179887	0					
ANR	5180036	ExpressionStatement	mode = p -> zoom -> mode	1629:2:37793:37813	5179887	0	True				
ANR	5180037	AssignmentExpression	mode = p -> zoom -> mode		5179887	0		=			
ANR	5180038	Identifier	mode		5179887	0					
ANR	5180039	PtrMemberAccess	p -> zoom -> mode		5179887	1					
ANR	5180040	PtrMemberAccess	p -> zoom		5179887	0					
ANR	5180041	Identifier	p		5179887	0					
ANR	5180042	Identifier	zoom		5179887	1					
ANR	5180043	Identifier	mode		5179887	1					
ANR	5180044	ExpressionStatement	"bufz = ( ut8 * ) calloc ( 1 , len )"	1630:2:37817:37847	5179887	1	True				
ANR	5180045	AssignmentExpression	"bufz = ( ut8 * ) calloc ( 1 , len )"		5179887	0		=			
ANR	5180046	Identifier	bufz		5179887	0					
ANR	5180047	CastExpression	"( ut8 * ) calloc ( 1 , len )"		5179887	1					
ANR	5180048	CastTarget	ut8 *		5179887	0					
ANR	5180049	CallExpression	"calloc ( 1 , len )"		5179887	1					
ANR	5180050	Callee	calloc		5179887	0					
ANR	5180051	Identifier	calloc		5179887	0					
ANR	5180052	ArgumentList	1		5179887	1					
ANR	5180053	Argument	1		5179887	0					
ANR	5180054	PrimaryExpression	1		5179887	0					
ANR	5180055	Argument	len		5179887	1					
ANR	5180056	Identifier	len		5179887	0					
ANR	5180057	IfStatement	if ( ! bufz )		5179887	2					
ANR	5180058	Condition	! bufz	1631:6:37855:37859	5179887	0	True				
ANR	5180059	UnaryOperationExpression	! bufz		5179887	0					
ANR	5180060	UnaryOperator	!		5179887	0					
ANR	5180061	Identifier	bufz		5179887	1					
ANR	5180062	CompoundStatement		28:13:528:528	5179887	1					
ANR	5180063	ReturnStatement	return ;	1632:3:37867:37873	5179887	0	True				
ANR	5180064	ExpressionStatement	"bufz2 = ( ut8 * ) calloc ( 1 , size )"	1634:2:37881:37913	5179887	3	True				
ANR	5180065	AssignmentExpression	"bufz2 = ( ut8 * ) calloc ( 1 , size )"		5179887	0		=			
ANR	5180066	Identifier	bufz2		5179887	0					
ANR	5180067	CastExpression	"( ut8 * ) calloc ( 1 , size )"		5179887	1					
ANR	5180068	CastTarget	ut8 *		5179887	0					
ANR	5180069	CallExpression	"calloc ( 1 , size )"		5179887	1					
ANR	5180070	Callee	calloc		5179887	0					
ANR	5180071	Identifier	calloc		5179887	0					
ANR	5180072	ArgumentList	1		5179887	1					
ANR	5180073	Argument	1		5179887	0					
ANR	5180074	PrimaryExpression	1		5179887	0					
ANR	5180075	Argument	size		5179887	1					
ANR	5180076	Identifier	size		5179887	0					
ANR	5180077	IfStatement	if ( ! bufz2 )		5179887	4					
ANR	5180078	Condition	! bufz2	1635:6:37921:37926	5179887	0	True				
ANR	5180079	UnaryOperationExpression	! bufz2		5179887	0					
ANR	5180080	UnaryOperator	!		5179887	0					
ANR	5180081	Identifier	bufz2		5179887	1					
ANR	5180082	CompoundStatement		32:14:595:595	5179887	1					
ANR	5180083	ExpressionStatement	free ( bufz )	1636:3:37934:37945	5179887	0	True				
ANR	5180084	CallExpression	free ( bufz )		5179887	0					
ANR	5180085	Callee	free		5179887	0					
ANR	5180086	Identifier	free		5179887	0					
ANR	5180087	ArgumentList	bufz		5179887	1					
ANR	5180088	Argument	bufz		5179887	0					
ANR	5180089	Identifier	bufz		5179887	0					
ANR	5180090	ReturnStatement	return ;	1637:3:37950:37956	5179887	1	True				
ANR	5180091	ForStatement	for ( i = 0 ; i < len ; i ++ )		5179887	5					
ANR	5180092	ForInit	i = 0 ;	1641:7:38004:38009	5179887	0	True				
ANR	5180093	AssignmentExpression	i = 0		5179887	0		=			
ANR	5180094	Identifier	i		5179887	0					
ANR	5180095	PrimaryExpression	0		5179887	1					
ANR	5180096	Condition	i < len	1641:14:38011:38017	5179887	1	True				
ANR	5180097	RelationalExpression	i < len		5179887	0		<			
ANR	5180098	Identifier	i		5179887	0					
ANR	5180099	Identifier	len		5179887	1					
ANR	5180100	PostIncDecOperationExpression	i ++	1641:23:38020:38022	5179887	2	True				
ANR	5180101	Identifier	i		5179887	0					
ANR	5180102	IncDec	++		5179887	1					
ANR	5180103	CompoundStatement		38:28:691:691	5179887	3					
ANR	5180104	IfStatement	if ( p -> cons -> context -> breaked )		5179887	0					
ANR	5180105	Condition	p -> cons -> context -> breaked	1642:7:38034:38058	5179887	0	True				
ANR	5180106	PtrMemberAccess	p -> cons -> context -> breaked		5179887	0					
ANR	5180107	PtrMemberAccess	p -> cons -> context		5179887	0					
ANR	5180108	PtrMemberAccess	p -> cons		5179887	0					
ANR	5180109	Identifier	p		5179887	0					
ANR	5180110	Identifier	cons		5179887	1					
ANR	5180111	Identifier	context		5179887	1					
ANR	5180112	Identifier	breaked		5179887	1					
ANR	5180113	CompoundStatement		39:34:727:727	5179887	1					
ANR	5180114	BreakStatement	break ;	1643:4:38067:38072	5179887	0	True				
ANR	5180115	ExpressionStatement	"p -> iob . read_at ( p -> iob . io , from + j , bufz2 , size )"	1645:3:38082:38131	5179887	1	True				
ANR	5180116	CallExpression	"p -> iob . read_at ( p -> iob . io , from + j , bufz2 , size )"		5179887	0					
ANR	5180117	Callee	p -> iob . read_at		5179887	0					
ANR	5180118	MemberAccess	p -> iob . read_at		5179887	0					
ANR	5180119	PtrMemberAccess	p -> iob		5179887	0					
ANR	5180120	Identifier	p		5179887	0					
ANR	5180121	Identifier	iob		5179887	1					
ANR	5180122	Identifier	read_at		5179887	1					
ANR	5180123	ArgumentList	p -> iob . io		5179887	1					
ANR	5180124	Argument	p -> iob . io		5179887	0					
ANR	5180125	MemberAccess	p -> iob . io		5179887	0					
ANR	5180126	PtrMemberAccess	p -> iob		5179887	0					
ANR	5180127	Identifier	p		5179887	0					
ANR	5180128	Identifier	iob		5179887	1					
ANR	5180129	Identifier	io		5179887	1					
ANR	5180130	Argument	from + j		5179887	1					
ANR	5180131	AdditiveExpression	from + j		5179887	0		+			
ANR	5180132	Identifier	from		5179887	0					
ANR	5180133	Identifier	j		5179887	1					
ANR	5180134	Argument	bufz2		5179887	2					
ANR	5180135	Identifier	bufz2		5179887	0					
ANR	5180136	Argument	size		5179887	3					
ANR	5180137	Identifier	size		5179887	0					
ANR	5180138	ExpressionStatement	"bufz [ i ] = cb ( user , p -> zoom -> mode , from + j , bufz2 , size )"	1646:3:38136:38193	5179887	2	True				
ANR	5180139	AssignmentExpression	"bufz [ i ] = cb ( user , p -> zoom -> mode , from + j , bufz2 , size )"		5179887	0		=			
ANR	5180140	ArrayIndexing	bufz [ i ]		5179887	0					
ANR	5180141	Identifier	bufz		5179887	0					
ANR	5180142	Identifier	i		5179887	1					
ANR	5180143	CallExpression	"cb ( user , p -> zoom -> mode , from + j , bufz2 , size )"		5179887	1					
ANR	5180144	Callee	cb		5179887	0					
ANR	5180145	Identifier	cb		5179887	0					
ANR	5180146	ArgumentList	user		5179887	1					
ANR	5180147	Argument	user		5179887	0					
ANR	5180148	Identifier	user		5179887	0					
ANR	5180149	Argument	p -> zoom -> mode		5179887	1					
ANR	5180150	PtrMemberAccess	p -> zoom -> mode		5179887	0					
ANR	5180151	PtrMemberAccess	p -> zoom		5179887	0					
ANR	5180152	Identifier	p		5179887	0					
ANR	5180153	Identifier	zoom		5179887	1					
ANR	5180154	Identifier	mode		5179887	1					
ANR	5180155	Argument	from + j		5179887	2					
ANR	5180156	AdditiveExpression	from + j		5179887	0		+			
ANR	5180157	Identifier	from		5179887	0					
ANR	5180158	Identifier	j		5179887	1					
ANR	5180159	Argument	bufz2		5179887	3					
ANR	5180160	Identifier	bufz2		5179887	0					
ANR	5180161	Argument	size		5179887	4					
ANR	5180162	Identifier	size		5179887	0					
ANR	5180163	ExpressionStatement	j += size	1647:3:38198:38207	5179887	3	True				
ANR	5180164	AssignmentExpression	j += size		5179887	0		+=			
ANR	5180165	Identifier	j		5179887	0					
ANR	5180166	Identifier	size		5179887	1					
ANR	5180167	ExpressionStatement	free ( bufz2 )	1649:2:38215:38227	5179887	6	True				
ANR	5180168	CallExpression	free ( bufz2 )		5179887	0					
ANR	5180169	Callee	free		5179887	0					
ANR	5180170	Identifier	free		5179887	0					
ANR	5180171	ArgumentList	bufz2		5179887	1					
ANR	5180172	Argument	bufz2		5179887	0					
ANR	5180173	Identifier	bufz2		5179887	0					
ANR	5180174	ExpressionStatement	free ( p -> zoom -> buf )	1651:2:38244:38263	5179887	7	True				
ANR	5180175	CallExpression	free ( p -> zoom -> buf )		5179887	0					
ANR	5180176	Callee	free		5179887	0					
ANR	5180177	Identifier	free		5179887	0					
ANR	5180178	ArgumentList	p -> zoom -> buf		5179887	1					
ANR	5180179	Argument	p -> zoom -> buf		5179887	0					
ANR	5180180	PtrMemberAccess	p -> zoom -> buf		5179887	0					
ANR	5180181	PtrMemberAccess	p -> zoom		5179887	0					
ANR	5180182	Identifier	p		5179887	0					
ANR	5180183	Identifier	zoom		5179887	1					
ANR	5180184	Identifier	buf		5179887	1					
ANR	5180185	ExpressionStatement	p -> zoom -> buf = bufz	1652:2:38267:38286	5179887	8	True				
ANR	5180186	AssignmentExpression	p -> zoom -> buf = bufz		5179887	0		=			
ANR	5180187	PtrMemberAccess	p -> zoom -> buf		5179887	0					
ANR	5180188	PtrMemberAccess	p -> zoom		5179887	0					
ANR	5180189	Identifier	p		5179887	0					
ANR	5180190	Identifier	zoom		5179887	1					
ANR	5180191	Identifier	buf		5179887	1					
ANR	5180192	Identifier	bufz		5179887	1					
ANR	5180193	ExpressionStatement	p -> zoom -> from = from	1653:2:38290:38310	5179887	9	True				
ANR	5180194	AssignmentExpression	p -> zoom -> from = from		5179887	0		=			
ANR	5180195	PtrMemberAccess	p -> zoom -> from		5179887	0					
ANR	5180196	PtrMemberAccess	p -> zoom		5179887	0					
ANR	5180197	Identifier	p		5179887	0					
ANR	5180198	Identifier	zoom		5179887	1					
ANR	5180199	Identifier	from		5179887	1					
ANR	5180200	Identifier	from		5179887	1					
ANR	5180201	ExpressionStatement	p -> zoom -> to = to	1654:2:38314:38330	5179887	10	True				
ANR	5180202	AssignmentExpression	p -> zoom -> to = to		5179887	0		=			
ANR	5180203	PtrMemberAccess	p -> zoom -> to		5179887	0					
ANR	5180204	PtrMemberAccess	p -> zoom		5179887	0					
ANR	5180205	Identifier	p		5179887	0					
ANR	5180206	Identifier	zoom		5179887	1					
ANR	5180207	Identifier	to		5179887	1					
ANR	5180208	Identifier	to		5179887	1					
ANR	5180209	ExpressionStatement	p -> zoom -> size = len	1655:2:38334:38353	5179887	11	True				
ANR	5180210	AssignmentExpression	p -> zoom -> size = len		5179887	0		=			
ANR	5180211	PtrMemberAccess	p -> zoom -> size		5179887	0					
ANR	5180212	PtrMemberAccess	p -> zoom		5179887	0					
ANR	5180213	Identifier	p		5179887	0					
ANR	5180214	Identifier	zoom		5179887	1					
ANR	5180215	Identifier	size		5179887	1					
ANR	5180216	Identifier	len		5179887	1					
ANR	5180217	ReturnType	R_API void		5179887	1					
ANR	5180218	Identifier	r_print_zoom_buf		5179887	2					
ANR	5180219	ParameterList	"RPrint * p , void * user , RPrintZoomCallback cb , ut64 from , ut64 to , int len , int maxlen"		5179887	3					
ANR	5180220	Parameter	RPrint * p	1604:28:37246:37254	5179887	0	True				
ANR	5180221	ParameterType	RPrint *		5179887	0					
ANR	5180222	Identifier	p		5179887	1					
ANR	5180223	Parameter	void * user	1604:39:37257:37266	5179887	1	True				
ANR	5180224	ParameterType	void *		5179887	0					
ANR	5180225	Identifier	user		5179887	1					
ANR	5180226	Parameter	RPrintZoomCallback cb	1604:51:37269:37289	5179887	2	True				
ANR	5180227	ParameterType	RPrintZoomCallback		5179887	0					
ANR	5180228	Identifier	cb		5179887	1					
ANR	5180229	Parameter	ut64 from	1604:74:37292:37300	5179887	3	True				
ANR	5180230	ParameterType	ut64		5179887	0					
ANR	5180231	Identifier	from		5179887	1					
ANR	5180232	Parameter	ut64 to	1604:85:37303:37309	5179887	4	True				
ANR	5180233	ParameterType	ut64		5179887	0					
ANR	5180234	Identifier	to		5179887	1					
ANR	5180235	Parameter	int len	1604:94:37312:37318	5179887	5	True				
ANR	5180236	ParameterType	int		5179887	0					
ANR	5180237	Identifier	len		5179887	1					
ANR	5180238	Parameter	int maxlen	1604:103:37321:37330	5179887	6	True				
ANR	5180239	ParameterType	int		5179887	0					
ANR	5180240	Identifier	maxlen		5179887	1					
ANR	5180241	CFGEntryNode	ENTRY		5179887		True				
ANR	5180242	CFGExitNode	EXIT		5179887		True				
ANR	5180243	Symbol	* bufz		5179887						
ANR	5180244	Symbol	p -> zoom -> size		5179887						
ANR	5180245	Symbol	p -> cons -> context -> breaked		5179887						
ANR	5180246	Symbol	bufz		5179887						
ANR	5180247	Symbol	calloc		5179887						
ANR	5180248	Symbol	p -> iob . io		5179887						
ANR	5180249	Symbol	mode		5179887						
ANR	5180250	Symbol	len		5179887						
ANR	5180251	Symbol	* * p -> cons		5179887						
ANR	5180252	Symbol	from		5179887						
ANR	5180253	Symbol	* p -> cons		5179887						
ANR	5180254	Symbol	* * p		5179887						
ANR	5180255	Symbol	p -> cons		5179887						
ANR	5180256	Symbol	cb		5179887						
ANR	5180257	Symbol	p -> zoom -> mode		5179887						
ANR	5180258	Symbol	NULL		5179887						
ANR	5180259	Symbol	p -> zoom		5179887						
ANR	5180260	Symbol	p -> zoom -> buf		5179887						
ANR	5180261	Symbol	i		5179887						
ANR	5180262	Symbol	j		5179887						
ANR	5180263	Symbol	p -> zoom -> from		5179887						
ANR	5180264	Symbol	p		5179887						
ANR	5180265	Symbol	bufz2		5179887						
ANR	5180266	Symbol	* * * p		5179887						
ANR	5180267	Symbol	p -> iob		5179887						
ANR	5180268	Symbol	* i		5179887						
ANR	5180269	Symbol	size		5179887						
ANR	5180270	Symbol	* p -> zoom		5179887						
ANR	5180271	Symbol	* p		5179887						
ANR	5180272	Symbol	to		5179887						
ANR	5180273	Symbol	p -> cons -> context		5179887						
ANR	5180274	Symbol	user		5179887						
ANR	5180275	Symbol	* p -> cons -> context		5179887						
ANR	5180276	Symbol	maxlen		5179887						
ANR	5180277	Symbol	p -> zoom -> to		5179887						
ANR	5180278	Function	r_print_zoom	1659:0:38370:38734							
ANR	5180279	FunctionDef	"r_print_zoom (RPrint * p , void * user , RPrintZoomCallback cb , ut64 from , ut64 to , int len , int maxlen)"		5180278	0					
ANR	5180280	CompoundStatement		1659:111:38481:38734	5180278	0					
ANR	5180281	IdentifierDeclStatement	ut64 size = ( to - from ) ;	1660:1:38484:38507	5180278	0	True				
ANR	5180282	IdentifierDecl	size = ( to - from )		5180278	0					
ANR	5180283	IdentifierDeclType	ut64		5180278	0					
ANR	5180284	Identifier	size		5180278	1					
ANR	5180285	AssignmentExpression	size = ( to - from )		5180278	2		=			
ANR	5180286	Identifier	size		5180278	0					
ANR	5180287	AdditiveExpression	to - from		5180278	1		-			
ANR	5180288	Identifier	to		5180278	0					
ANR	5180289	Identifier	from		5180278	1					
ANR	5180290	ExpressionStatement	"r_print_zoom_buf ( p , user , cb , from , to , len , maxlen )"	1661:1:38510:38563	5180278	1	True				
ANR	5180291	CallExpression	"r_print_zoom_buf ( p , user , cb , from , to , len , maxlen )"		5180278	0					
ANR	5180292	Callee	r_print_zoom_buf		5180278	0					
ANR	5180293	Identifier	r_print_zoom_buf		5180278	0					
ANR	5180294	ArgumentList	p		5180278	1					
ANR	5180295	Argument	p		5180278	0					
ANR	5180296	Identifier	p		5180278	0					
ANR	5180297	Argument	user		5180278	1					
ANR	5180298	Identifier	user		5180278	0					
ANR	5180299	Argument	cb		5180278	2					
ANR	5180300	Identifier	cb		5180278	0					
ANR	5180301	Argument	from		5180278	3					
ANR	5180302	Identifier	from		5180278	0					
ANR	5180303	Argument	to		5180278	4					
ANR	5180304	Identifier	to		5180278	0					
ANR	5180305	Argument	len		5180278	5					
ANR	5180306	Identifier	len		5180278	0					
ANR	5180307	Argument	maxlen		5180278	6					
ANR	5180308	Identifier	maxlen		5180278	0					
ANR	5180309	ExpressionStatement	size = len ? size / len : 0	1662:1:38566:38591	5180278	2	True				
ANR	5180310	AssignmentExpression	size = len ? size / len : 0		5180278	0		=			
ANR	5180311	Identifier	size		5180278	0					
ANR	5180312	ConditionalExpression	len ? size / len : 0		5180278	1					
ANR	5180313	Condition	len		5180278	0					
ANR	5180314	Identifier	len		5180278	0					
ANR	5180315	MultiplicativeExpression	size / len		5180278	1		/			
ANR	5180316	Identifier	size		5180278	0					
ANR	5180317	Identifier	len		5180278	1					
ANR	5180318	PrimaryExpression	0		5180278	2					
ANR	5180319	ExpressionStatement	p -> flags &= ~R_PRINT_FLAGS_HEADER	1663:1:38594:38627	5180278	3	True				
ANR	5180320	AssignmentExpression	p -> flags &= ~R_PRINT_FLAGS_HEADER		5180278	0		&=			
ANR	5180321	PtrMemberAccess	p -> flags		5180278	0					
ANR	5180322	Identifier	p		5180278	0					
ANR	5180323	Identifier	flags		5180278	1					
ANR	5180324	Identifier	~R_PRINT_FLAGS_HEADER		5180278	1					
ANR	5180325	ExpressionStatement	"r_print_hexdump ( p , from , p -> zoom -> buf , p -> zoom -> size , 16 , 1 , size )"	1664:1:38630:38697	5180278	4	True				
ANR	5180326	CallExpression	"r_print_hexdump ( p , from , p -> zoom -> buf , p -> zoom -> size , 16 , 1 , size )"		5180278	0					
ANR	5180327	Callee	r_print_hexdump		5180278	0					
ANR	5180328	Identifier	r_print_hexdump		5180278	0					
ANR	5180329	ArgumentList	p		5180278	1					
ANR	5180330	Argument	p		5180278	0					
ANR	5180331	Identifier	p		5180278	0					
ANR	5180332	Argument	from		5180278	1					
ANR	5180333	Identifier	from		5180278	0					
ANR	5180334	Argument	p -> zoom -> buf		5180278	2					
ANR	5180335	PtrMemberAccess	p -> zoom -> buf		5180278	0					
ANR	5180336	PtrMemberAccess	p -> zoom		5180278	0					
ANR	5180337	Identifier	p		5180278	0					
ANR	5180338	Identifier	zoom		5180278	1					
ANR	5180339	Identifier	buf		5180278	1					
ANR	5180340	Argument	p -> zoom -> size		5180278	3					
ANR	5180341	PtrMemberAccess	p -> zoom -> size		5180278	0					
ANR	5180342	PtrMemberAccess	p -> zoom		5180278	0					
ANR	5180343	Identifier	p		5180278	0					
ANR	5180344	Identifier	zoom		5180278	1					
ANR	5180345	Identifier	size		5180278	1					
ANR	5180346	Argument	16		5180278	4					
ANR	5180347	PrimaryExpression	16		5180278	0					
ANR	5180348	Argument	1		5180278	5					
ANR	5180349	PrimaryExpression	1		5180278	0					
ANR	5180350	Argument	size		5180278	6					
ANR	5180351	Identifier	size		5180278	0					
ANR	5180352	ExpressionStatement	p -> flags |= R_PRINT_FLAGS_HEADER	1665:1:38700:38732	5180278	5	True				
ANR	5180353	AssignmentExpression	p -> flags |= R_PRINT_FLAGS_HEADER		5180278	0		|=			
ANR	5180354	PtrMemberAccess	p -> flags		5180278	0					
ANR	5180355	Identifier	p		5180278	0					
ANR	5180356	Identifier	flags		5180278	1					
ANR	5180357	Identifier	R_PRINT_FLAGS_HEADER		5180278	1					
ANR	5180358	ReturnType	R_API void		5180278	1					
ANR	5180359	Identifier	r_print_zoom		5180278	2					
ANR	5180360	ParameterList	"RPrint * p , void * user , RPrintZoomCallback cb , ut64 from , ut64 to , int len , int maxlen"		5180278	3					
ANR	5180361	Parameter	RPrint * p	1659:24:38394:38402	5180278	0	True				
ANR	5180362	ParameterType	RPrint *		5180278	0					
ANR	5180363	Identifier	p		5180278	1					
ANR	5180364	Parameter	void * user	1659:35:38405:38414	5180278	1	True				
ANR	5180365	ParameterType	void *		5180278	0					
ANR	5180366	Identifier	user		5180278	1					
ANR	5180367	Parameter	RPrintZoomCallback cb	1659:47:38417:38437	5180278	2	True				
ANR	5180368	ParameterType	RPrintZoomCallback		5180278	0					
ANR	5180369	Identifier	cb		5180278	1					
ANR	5180370	Parameter	ut64 from	1659:70:38440:38448	5180278	3	True				
ANR	5180371	ParameterType	ut64		5180278	0					
ANR	5180372	Identifier	from		5180278	1					
ANR	5180373	Parameter	ut64 to	1659:81:38451:38457	5180278	4	True				
ANR	5180374	ParameterType	ut64		5180278	0					
ANR	5180375	Identifier	to		5180278	1					
ANR	5180376	Parameter	int len	1659:90:38460:38466	5180278	5	True				
ANR	5180377	ParameterType	int		5180278	0					
ANR	5180378	Identifier	len		5180278	1					
ANR	5180379	Parameter	int maxlen	1659:99:38469:38478	5180278	6	True				
ANR	5180380	ParameterType	int		5180278	0					
ANR	5180381	Identifier	maxlen		5180278	1					
ANR	5180382	CFGEntryNode	ENTRY		5180278		True				
ANR	5180383	CFGExitNode	EXIT		5180278		True				
ANR	5180384	Symbol	~R_PRINT_FLAGS_HEADER		5180278						
ANR	5180385	Symbol	p -> zoom		5180278						
ANR	5180386	Symbol	p -> zoom -> buf		5180278						
ANR	5180387	Symbol	p -> zoom -> size		5180278						
ANR	5180388	Symbol	p		5180278						
ANR	5180389	Symbol	len		5180278						
ANR	5180390	Symbol	size		5180278						
ANR	5180391	Symbol	* p -> zoom		5180278						
ANR	5180392	Symbol	p -> flags		5180278						
ANR	5180393	Symbol	from		5180278						
ANR	5180394	Symbol	* p		5180278						
ANR	5180395	Symbol	to		5180278						
ANR	5180396	Symbol	* * p		5180278						
ANR	5180397	Symbol	user		5180278						
ANR	5180398	Symbol	maxlen		5180278						
ANR	5180399	Symbol	cb		5180278						
ANR	5180400	Symbol	R_PRINT_FLAGS_HEADER		5180278						
ANR	5180401	Function	printHistBlock	1668:0:38737:39580							
ANR	5180402	FunctionDef	"printHistBlock (RPrint * p , int k , int cols)"		5180401	0					
ANR	5180403	CompoundStatement		1668:63:38800:39580	5180401	0					
ANR	5180404	IdentifierDeclStatement	RConsPrintablePalette * pal = & p -> cons -> context -> pal ;	1669:1:38803:38854	5180401	0	True				
ANR	5180405	IdentifierDecl	* pal = & p -> cons -> context -> pal		5180401	0					
ANR	5180406	IdentifierDeclType	RConsPrintablePalette *		5180401	0					
ANR	5180407	Identifier	pal		5180401	1					
ANR	5180408	AssignmentExpression	* pal = & p -> cons -> context -> pal		5180401	2		=			
ANR	5180409	Identifier	pal		5180401	0					
ANR	5180410	UnaryOperationExpression	& p -> cons -> context -> pal		5180401	1					
ANR	5180411	UnaryOperator	&		5180401	0					
ANR	5180412	PtrMemberAccess	p -> cons -> context -> pal		5180401	1					
ANR	5180413	PtrMemberAccess	p -> cons -> context		5180401	0					
ANR	5180414	PtrMemberAccess	p -> cons		5180401	0					
ANR	5180415	Identifier	p		5180401	0					
ANR	5180416	Identifier	cons		5180401	1					
ANR	5180417	Identifier	context		5180401	1					
ANR	5180418	Identifier	pal		5180401	1					
ANR	5180419	IdentifierDeclStatement	"const char * h_line = p -> cons -> use_utf8 ? RUNE_LONG_LINE_HORIZ : ""-"" ;"	1670:1:38857:38924	5180401	1	True				
ANR	5180420	IdentifierDecl	"* h_line = p -> cons -> use_utf8 ? RUNE_LONG_LINE_HORIZ : ""-"""		5180401	0					
ANR	5180421	IdentifierDeclType	const char *		5180401	0					
ANR	5180422	Identifier	h_line		5180401	1					
ANR	5180423	AssignmentExpression	"* h_line = p -> cons -> use_utf8 ? RUNE_LONG_LINE_HORIZ : ""-"""		5180401	2		=			
ANR	5180424	Identifier	h_line		5180401	0					
ANR	5180425	ConditionalExpression	"p -> cons -> use_utf8 ? RUNE_LONG_LINE_HORIZ : ""-"""		5180401	1					
ANR	5180426	Condition	p -> cons -> use_utf8		5180401	0					
ANR	5180427	PtrMemberAccess	p -> cons -> use_utf8		5180401	0					
ANR	5180428	PtrMemberAccess	p -> cons		5180401	0					
ANR	5180429	Identifier	p		5180401	0					
ANR	5180430	Identifier	cons		5180401	1					
ANR	5180431	Identifier	use_utf8		5180401	1					
ANR	5180432	Identifier	RUNE_LONG_LINE_HORIZ		5180401	1					
ANR	5180433	PrimaryExpression	"""-"""		5180401	2					
ANR	5180434	IdentifierDeclStatement	"const char * block = p -> cons -> use_utf8 ? UTF_BLOCK : ""#"" ;"	1671:1:38927:38982	5180401	2	True				
ANR	5180435	IdentifierDecl	"* block = p -> cons -> use_utf8 ? UTF_BLOCK : ""#"""		5180401	0					
ANR	5180436	IdentifierDeclType	const char *		5180401	0					
ANR	5180437	Identifier	block		5180401	1					
ANR	5180438	AssignmentExpression	"* block = p -> cons -> use_utf8 ? UTF_BLOCK : ""#"""		5180401	2		=			
ANR	5180439	Identifier	block		5180401	0					
ANR	5180440	ConditionalExpression	"p -> cons -> use_utf8 ? UTF_BLOCK : ""#"""		5180401	1					
ANR	5180441	Condition	p -> cons -> use_utf8		5180401	0					
ANR	5180442	PtrMemberAccess	p -> cons -> use_utf8		5180401	0					
ANR	5180443	PtrMemberAccess	p -> cons		5180401	0					
ANR	5180444	Identifier	p		5180401	0					
ANR	5180445	Identifier	cons		5180401	1					
ANR	5180446	Identifier	use_utf8		5180401	1					
ANR	5180447	Identifier	UTF_BLOCK		5180401	1					
ANR	5180448	PrimaryExpression	"""#"""		5180401	2					
ANR	5180449	IdentifierDeclStatement	const char * kol [ 5 ] ;	1672:1:38985:39003	5180401	3	True				
ANR	5180450	IdentifierDecl	* kol [ 5 ]		5180401	0					
ANR	5180451	IdentifierDeclType	const char * [ 5 ]		5180401	0					
ANR	5180452	Identifier	kol		5180401	1					
ANR	5180453	PrimaryExpression	5		5180401	2					
ANR	5180454	ExpressionStatement	kol [ 0 ] = pal -> nop	1673:1:39006:39023	5180401	4	True				
ANR	5180455	AssignmentExpression	kol [ 0 ] = pal -> nop		5180401	0		=			
ANR	5180456	ArrayIndexing	kol [ 0 ]		5180401	0					
ANR	5180457	Identifier	kol		5180401	0					
ANR	5180458	PrimaryExpression	0		5180401	1					
ANR	5180459	PtrMemberAccess	pal -> nop		5180401	1					
ANR	5180460	Identifier	pal		5180401	0					
ANR	5180461	Identifier	nop		5180401	1					
ANR	5180462	ExpressionStatement	kol [ 1 ] = pal -> mov	1674:1:39026:39043	5180401	5	True				
ANR	5180463	AssignmentExpression	kol [ 1 ] = pal -> mov		5180401	0		=			
ANR	5180464	ArrayIndexing	kol [ 1 ]		5180401	0					
ANR	5180465	Identifier	kol		5180401	0					
ANR	5180466	PrimaryExpression	1		5180401	1					
ANR	5180467	PtrMemberAccess	pal -> mov		5180401	1					
ANR	5180468	Identifier	pal		5180401	0					
ANR	5180469	Identifier	mov		5180401	1					
ANR	5180470	ExpressionStatement	kol [ 2 ] = pal -> cjmp	1675:1:39046:39064	5180401	6	True				
ANR	5180471	AssignmentExpression	kol [ 2 ] = pal -> cjmp		5180401	0		=			
ANR	5180472	ArrayIndexing	kol [ 2 ]		5180401	0					
ANR	5180473	Identifier	kol		5180401	0					
ANR	5180474	PrimaryExpression	2		5180401	1					
ANR	5180475	PtrMemberAccess	pal -> cjmp		5180401	1					
ANR	5180476	Identifier	pal		5180401	0					
ANR	5180477	Identifier	cjmp		5180401	1					
ANR	5180478	ExpressionStatement	kol [ 3 ] = pal -> jmp	1676:1:39067:39084	5180401	7	True				
ANR	5180479	AssignmentExpression	kol [ 3 ] = pal -> jmp		5180401	0		=			
ANR	5180480	ArrayIndexing	kol [ 3 ]		5180401	0					
ANR	5180481	Identifier	kol		5180401	0					
ANR	5180482	PrimaryExpression	3		5180401	1					
ANR	5180483	PtrMemberAccess	pal -> jmp		5180401	1					
ANR	5180484	Identifier	pal		5180401	0					
ANR	5180485	Identifier	jmp		5180401	1					
ANR	5180486	ExpressionStatement	kol [ 4 ] = pal -> call	1677:1:39087:39105	5180401	8	True				
ANR	5180487	AssignmentExpression	kol [ 4 ] = pal -> call		5180401	0		=			
ANR	5180488	ArrayIndexing	kol [ 4 ]		5180401	0					
ANR	5180489	Identifier	kol		5180401	0					
ANR	5180490	PrimaryExpression	4		5180401	1					
ANR	5180491	PtrMemberAccess	pal -> call		5180401	1					
ANR	5180492	Identifier	pal		5180401	0					
ANR	5180493	Identifier	call		5180401	1					
ANR	5180494	IfStatement	if ( cols < 1 )		5180401	9					
ANR	5180495	Condition	cols < 1	1678:5:39112:39119	5180401	0	True				
ANR	5180496	RelationalExpression	cols < 1		5180401	0		<			
ANR	5180497	Identifier	cols		5180401	0					
ANR	5180498	PrimaryExpression	1		5180401	1					
ANR	5180499	CompoundStatement		11:15:321:321	5180401	1					
ANR	5180500	ExpressionStatement	cols = 1	1679:2:39126:39134	5180401	0	True				
ANR	5180501	AssignmentExpression	cols = 1		5180401	0		=			
ANR	5180502	Identifier	cols		5180401	0					
ANR	5180503	PrimaryExpression	1		5180401	1					
ANR	5180504	IdentifierDeclStatement	const bool show_colors = ( p && ( p -> flags & R_PRINT_FLAGS_COLOR ) ) ;	1681:1:39140:39204	5180401	10	True				
ANR	5180505	IdentifierDecl	show_colors = ( p && ( p -> flags & R_PRINT_FLAGS_COLOR ) )		5180401	0					
ANR	5180506	IdentifierDeclType	const bool		5180401	0					
ANR	5180507	Identifier	show_colors		5180401	1					
ANR	5180508	AssignmentExpression	show_colors = ( p && ( p -> flags & R_PRINT_FLAGS_COLOR ) )		5180401	2		=			
ANR	5180509	Identifier	show_colors		5180401	0					
ANR	5180510	AndExpression	p && ( p -> flags & R_PRINT_FLAGS_COLOR )		5180401	1		&&			
ANR	5180511	Identifier	p		5180401	0					
ANR	5180512	BitAndExpression	p -> flags & R_PRINT_FLAGS_COLOR		5180401	1		&			
ANR	5180513	PtrMemberAccess	p -> flags		5180401	0					
ANR	5180514	Identifier	p		5180401	0					
ANR	5180515	Identifier	flags		5180401	1					
ANR	5180516	Identifier	R_PRINT_FLAGS_COLOR		5180401	1					
ANR	5180517	IfStatement	if ( show_colors )		5180401	11					
ANR	5180518	Condition	show_colors	1682:5:39211:39221	5180401	0	True				
ANR	5180519	Identifier	show_colors		5180401	0					
ANR	5180520	CompoundStatement		17:2:463:489	5180401	1					
ANR	5180521	IdentifierDeclStatement	int idx = ( int ) ( ( k * 4 ) / cols ) ;	1683:2:39228:39260	5180401	0	True				
ANR	5180522	IdentifierDecl	idx = ( int ) ( ( k * 4 ) / cols )		5180401	0					
ANR	5180523	IdentifierDeclType	int		5180401	0					
ANR	5180524	Identifier	idx		5180401	1					
ANR	5180525	AssignmentExpression	idx = ( int ) ( ( k * 4 ) / cols )		5180401	2		=			
ANR	5180526	Identifier	idx		5180401	0					
ANR	5180527	CastExpression	( int ) ( ( k * 4 ) / cols )		5180401	1					
ANR	5180528	CastTarget	int		5180401	0					
ANR	5180529	MultiplicativeExpression	( k * 4 ) / cols		5180401	1		/			
ANR	5180530	MultiplicativeExpression	k * 4		5180401	0		*			
ANR	5180531	Identifier	k		5180401	0					
ANR	5180532	PrimaryExpression	4		5180401	1					
ANR	5180533	Identifier	cols		5180401	1					
ANR	5180534	IdentifierDeclStatement	const char * str = kol [ idx ] ;	1684:2:39264:39290	5180401	1	True				
ANR	5180535	IdentifierDecl	* str = kol [ idx ]		5180401	0					
ANR	5180536	IdentifierDeclType	const char *		5180401	0					
ANR	5180537	Identifier	str		5180401	1					
ANR	5180538	AssignmentExpression	* str = kol [ idx ]		5180401	2		=			
ANR	5180539	Identifier	str		5180401	0					
ANR	5180540	ArrayIndexing	kol [ idx ]		5180401	1					
ANR	5180541	Identifier	kol		5180401	0					
ANR	5180542	Identifier	idx		5180401	1					
ANR	5180543	IfStatement	if ( p -> histblock )		5180401	2					
ANR	5180544	Condition	p -> histblock	1685:6:39298:39309	5180401	0	True				
ANR	5180545	PtrMemberAccess	p -> histblock		5180401	0					
ANR	5180546	Identifier	p		5180401	0					
ANR	5180547	Identifier	histblock		5180401	1					
ANR	5180548	CompoundStatement		18:20:511:511	5180401	1					
ANR	5180549	ExpressionStatement	"p -> cb_printf ( ""%s%s%s"" , str , block , Color_RESET )"	1686:3:39317:39365	5180401	0	True				
ANR	5180550	CallExpression	"p -> cb_printf ( ""%s%s%s"" , str , block , Color_RESET )"		5180401	0					
ANR	5180551	Callee	p -> cb_printf		5180401	0					
ANR	5180552	PtrMemberAccess	p -> cb_printf		5180401	0					
ANR	5180553	Identifier	p		5180401	0					
ANR	5180554	Identifier	cb_printf		5180401	1					
ANR	5180555	ArgumentList	"""%s%s%s"""		5180401	1					
ANR	5180556	Argument	"""%s%s%s"""		5180401	0					
ANR	5180557	PrimaryExpression	"""%s%s%s"""		5180401	0					
ANR	5180558	Argument	str		5180401	1					
ANR	5180559	Identifier	str		5180401	0					
ANR	5180560	Argument	block		5180401	2					
ANR	5180561	Identifier	block		5180401	0					
ANR	5180562	Argument	Color_RESET		5180401	3					
ANR	5180563	Identifier	Color_RESET		5180401	0					
ANR	5180564	ElseStatement	else		5180401	0					
ANR	5180565	CompoundStatement		20:9:575:575	5180401	0					
ANR	5180566	ExpressionStatement	"p -> cb_printf ( ""%s%s%s"" , str , h_line , Color_RESET )"	1688:3:39381:39430	5180401	0	True				
ANR	5180567	CallExpression	"p -> cb_printf ( ""%s%s%s"" , str , h_line , Color_RESET )"		5180401	0					
ANR	5180568	Callee	p -> cb_printf		5180401	0					
ANR	5180569	PtrMemberAccess	p -> cb_printf		5180401	0					
ANR	5180570	Identifier	p		5180401	0					
ANR	5180571	Identifier	cb_printf		5180401	1					
ANR	5180572	ArgumentList	"""%s%s%s"""		5180401	1					
ANR	5180573	Argument	"""%s%s%s"""		5180401	0					
ANR	5180574	PrimaryExpression	"""%s%s%s"""		5180401	0					
ANR	5180575	Argument	str		5180401	1					
ANR	5180576	Identifier	str		5180401	0					
ANR	5180577	Argument	h_line		5180401	2					
ANR	5180578	Identifier	h_line		5180401	0					
ANR	5180579	Argument	Color_RESET		5180401	3					
ANR	5180580	Identifier	Color_RESET		5180401	0					
ANR	5180581	ElseStatement	else		5180401	0					
ANR	5180582	CompoundStatement		23:8:643:643	5180401	0					
ANR	5180583	IfStatement	if ( p -> histblock )		5180401	0					
ANR	5180584	Condition	p -> histblock	1691:6:39452:39463	5180401	0	True				
ANR	5180585	PtrMemberAccess	p -> histblock		5180401	0					
ANR	5180586	Identifier	p		5180401	0					
ANR	5180587	Identifier	histblock		5180401	1					
ANR	5180588	CompoundStatement		24:20:665:665	5180401	1					
ANR	5180589	ExpressionStatement	"p -> cb_printf ( ""%s%s%s"" , Color_BGGRAY , block , Color_RESET )"	1692:3:39471:39528	5180401	0	True				
ANR	5180590	CallExpression	"p -> cb_printf ( ""%s%s%s"" , Color_BGGRAY , block , Color_RESET )"		5180401	0					
ANR	5180591	Callee	p -> cb_printf		5180401	0					
ANR	5180592	PtrMemberAccess	p -> cb_printf		5180401	0					
ANR	5180593	Identifier	p		5180401	0					
ANR	5180594	Identifier	cb_printf		5180401	1					
ANR	5180595	ArgumentList	"""%s%s%s"""		5180401	1					
ANR	5180596	Argument	"""%s%s%s"""		5180401	0					
ANR	5180597	PrimaryExpression	"""%s%s%s"""		5180401	0					
ANR	5180598	Argument	Color_BGGRAY		5180401	1					
ANR	5180599	Identifier	Color_BGGRAY		5180401	0					
ANR	5180600	Argument	block		5180401	2					
ANR	5180601	Identifier	block		5180401	0					
ANR	5180602	Argument	Color_RESET		5180401	3					
ANR	5180603	Identifier	Color_RESET		5180401	0					
ANR	5180604	ElseStatement	else		5180401	0					
ANR	5180605	CompoundStatement		26:9:738:738	5180401	0					
ANR	5180606	ExpressionStatement	"p -> cb_printf ( ""%s"" , h_line )"	1694:3:39544:39571	5180401	0	True				
ANR	5180607	CallExpression	"p -> cb_printf ( ""%s"" , h_line )"		5180401	0					
ANR	5180608	Callee	p -> cb_printf		5180401	0					
ANR	5180609	PtrMemberAccess	p -> cb_printf		5180401	0					
ANR	5180610	Identifier	p		5180401	0					
ANR	5180611	Identifier	cb_printf		5180401	1					
ANR	5180612	ArgumentList	"""%s"""		5180401	1					
ANR	5180613	Argument	"""%s"""		5180401	0					
ANR	5180614	PrimaryExpression	"""%s"""		5180401	0					
ANR	5180615	Argument	h_line		5180401	1					
ANR	5180616	Identifier	h_line		5180401	0					
ANR	5180617	ReturnType	static inline void		5180401	1					
ANR	5180618	Identifier	printHistBlock		5180401	2					
ANR	5180619	ParameterList	"RPrint * p , int k , int cols"		5180401	3					
ANR	5180620	Parameter	RPrint * p	1668:35:38772:38780	5180401	0	True				
ANR	5180621	ParameterType	RPrint *		5180401	0					
ANR	5180622	Identifier	p		5180401	1					
ANR	5180623	Parameter	int k	1668:46:38783:38787	5180401	1	True				
ANR	5180624	ParameterType	int		5180401	0					
ANR	5180625	Identifier	k		5180401	1					
ANR	5180626	Parameter	int cols	1668:53:38790:38797	5180401	2	True				
ANR	5180627	ParameterType	int		5180401	0					
ANR	5180628	Identifier	cols		5180401	1					
ANR	5180629	CFGEntryNode	ENTRY		5180401		True				
ANR	5180630	CFGExitNode	EXIT		5180401		True				
ANR	5180631	Symbol	UTF_BLOCK		5180401						
ANR	5180632	Symbol	* pal		5180401						
ANR	5180633	Symbol	pal -> cjmp		5180401						
ANR	5180634	Symbol	Color_RESET		5180401						
ANR	5180635	Symbol	kol		5180401						
ANR	5180636	Symbol	Color_BGGRAY		5180401						
ANR	5180637	Symbol	h_line		5180401						
ANR	5180638	Symbol	& p -> cons -> context -> pal		5180401						
ANR	5180639	Symbol	pal -> mov		5180401						
ANR	5180640	Symbol	p -> cons -> use_utf8		5180401						
ANR	5180641	Symbol	R_PRINT_FLAGS_COLOR		5180401						
ANR	5180642	Symbol	* idx		5180401						
ANR	5180643	Symbol	pal		5180401						
ANR	5180644	Symbol	* p -> cons		5180401						
ANR	5180645	Symbol	block		5180401						
ANR	5180646	Symbol	pal -> jmp		5180401						
ANR	5180647	Symbol	* * p		5180401						
ANR	5180648	Symbol	p -> cons		5180401						
ANR	5180649	Symbol	pal -> nop		5180401						
ANR	5180650	Symbol	cols		5180401						
ANR	5180651	Symbol	show_colors		5180401						
ANR	5180652	Symbol	k		5180401						
ANR	5180653	Symbol	p		5180401						
ANR	5180654	Symbol	str		5180401						
ANR	5180655	Symbol	RUNE_LONG_LINE_HORIZ		5180401						
ANR	5180656	Symbol	* kol		5180401						
ANR	5180657	Symbol	pal -> call		5180401						
ANR	5180658	Symbol	p -> flags		5180401						
ANR	5180659	Symbol	* p		5180401						
ANR	5180660	Symbol	p -> cons -> context		5180401						
ANR	5180661	Symbol	idx		5180401						
ANR	5180662	Symbol	p -> histblock		5180401						
ANR	5180663	Function	r_print_fill	1699:0:39583:41542							
ANR	5180664	FunctionDef	"r_print_fill (RPrint * p , const ut8 * arr , int size , ut64 addr , int step)"		5180663	0					
ANR	5180665	CompoundStatement		1699:82:39665:41542	5180663	0					
ANR	5180666	ExpressionStatement	r_return_if_fail ( p && arr )	1700:1:39668:39695	5180663	0	True				
ANR	5180667	CallExpression	r_return_if_fail ( p && arr )		5180663	0					
ANR	5180668	Callee	r_return_if_fail		5180663	0					
ANR	5180669	Identifier	r_return_if_fail		5180663	0					
ANR	5180670	ArgumentList	p && arr		5180663	1					
ANR	5180671	Argument	p && arr		5180663	0					
ANR	5180672	AndExpression	p && arr		5180663	0		&&			
ANR	5180673	Identifier	p		5180663	0					
ANR	5180674	Identifier	arr		5180663	1					
ANR	5180675	IdentifierDeclStatement	const bool show_colors = ( p && ( p -> flags & R_PRINT_FLAGS_COLOR ) ) ;	1701:1:39698:39762	5180663	1	True				
ANR	5180676	IdentifierDecl	show_colors = ( p && ( p -> flags & R_PRINT_FLAGS_COLOR ) )		5180663	0					
ANR	5180677	IdentifierDeclType	const bool		5180663	0					
ANR	5180678	Identifier	show_colors		5180663	1					
ANR	5180679	AssignmentExpression	show_colors = ( p && ( p -> flags & R_PRINT_FLAGS_COLOR ) )		5180663	2		=			
ANR	5180680	Identifier	show_colors		5180663	0					
ANR	5180681	AndExpression	p && ( p -> flags & R_PRINT_FLAGS_COLOR )		5180663	1		&&			
ANR	5180682	Identifier	p		5180663	0					
ANR	5180683	BitAndExpression	p -> flags & R_PRINT_FLAGS_COLOR		5180663	1		&			
ANR	5180684	PtrMemberAccess	p -> flags		5180663	0					
ANR	5180685	Identifier	p		5180663	0					
ANR	5180686	Identifier	flags		5180663	1					
ANR	5180687	Identifier	R_PRINT_FLAGS_COLOR		5180663	1					
ANR	5180688	IdentifierDeclStatement	bool useUtf8 = p -> cons -> use_utf8 ;	1702:1:39765:39797	5180663	2	True				
ANR	5180689	IdentifierDecl	useUtf8 = p -> cons -> use_utf8		5180663	0					
ANR	5180690	IdentifierDeclType	bool		5180663	0					
ANR	5180691	Identifier	useUtf8		5180663	1					
ANR	5180692	AssignmentExpression	useUtf8 = p -> cons -> use_utf8		5180663	2		=			
ANR	5180693	Identifier	useUtf8		5180663	0					
ANR	5180694	PtrMemberAccess	p -> cons -> use_utf8		5180663	1					
ANR	5180695	PtrMemberAccess	p -> cons		5180663	0					
ANR	5180696	Identifier	p		5180663	0					
ANR	5180697	Identifier	cons		5180663	1					
ANR	5180698	Identifier	use_utf8		5180663	1					
ANR	5180699	IdentifierDeclStatement	"const char * v_line = useUtf8 ? RUNE_LINE_VERT : ""|"" ;"	1703:1:39800:39851	5180663	3	True				
ANR	5180700	IdentifierDecl	"* v_line = useUtf8 ? RUNE_LINE_VERT : ""|"""		5180663	0					
ANR	5180701	IdentifierDeclType	const char *		5180663	0					
ANR	5180702	Identifier	v_line		5180663	1					
ANR	5180703	AssignmentExpression	"* v_line = useUtf8 ? RUNE_LINE_VERT : ""|"""		5180663	2		=			
ANR	5180704	Identifier	v_line		5180663	0					
ANR	5180705	ConditionalExpression	"useUtf8 ? RUNE_LINE_VERT : ""|"""		5180663	1					
ANR	5180706	Condition	useUtf8		5180663	0					
ANR	5180707	Identifier	useUtf8		5180663	0					
ANR	5180708	Identifier	RUNE_LINE_VERT		5180663	1					
ANR	5180709	PrimaryExpression	"""|"""		5180663	2					
ANR	5180710	IdentifierDeclStatement	"int i = 0 , j ;"	1704:1:39854:39866	5180663	4	True				
ANR	5180711	IdentifierDecl	i = 0		5180663	0					
ANR	5180712	IdentifierDeclType	int		5180663	0					
ANR	5180713	Identifier	i		5180663	1					
ANR	5180714	AssignmentExpression	i = 0		5180663	2		=			
ANR	5180715	Identifier	i		5180663	0					
ANR	5180716	PrimaryExpression	0		5180663	1					
ANR	5180717	IdentifierDecl	j		5180663	1					
ANR	5180718	IdentifierDeclType	int		5180663	0					
ANR	5180719	Identifier	j		5180663	1					
ANR	5180720	Statement	define	1707:1:39871:39876	5180663	5	True				
ANR	5180721	Statement	INC	1707:8:39878:39880	5180663	6	True				
ANR	5180722	Statement	5	1707:12:39882:39882	5180663	7	True				
ANR	5180723	IfStatement	if ( arr [ 0 ] > 1 )		5180663	8					
ANR	5180724	Condition	arr [ 0 ] > 1	1709:5:39901:39910	5180663	0	True				
ANR	5180725	RelationalExpression	arr [ 0 ] > 1		5180663	0		>			
ANR	5180726	ArrayIndexing	arr [ 0 ]		5180663	0					
ANR	5180727	Identifier	arr		5180663	0					
ANR	5180728	PrimaryExpression	0		5180663	1					
ANR	5180729	PrimaryExpression	1		5180663	1					
ANR	5180730	CompoundStatement		11:17:247:247	5180663	1					
ANR	5180731	ExpressionStatement	"p -> cb_printf ( ""         "" )"	1710:2:39917:39943	5180663	0	True				
ANR	5180732	CallExpression	"p -> cb_printf ( ""         "" )"		5180663	0					
ANR	5180733	Callee	p -> cb_printf		5180663	0					
ANR	5180734	PtrMemberAccess	p -> cb_printf		5180663	0					
ANR	5180735	Identifier	p		5180663	0					
ANR	5180736	Identifier	cb_printf		5180663	1					
ANR	5180737	ArgumentList	"""         """		5180663	1					
ANR	5180738	Argument	"""         """		5180663	0					
ANR	5180739	PrimaryExpression	"""         """		5180663	0					
ANR	5180740	IfStatement	if ( addr != UT64_MAX && step > 0 )		5180663	1					
ANR	5180741	Condition	addr != UT64_MAX && step > 0	1711:6:39951:39978	5180663	0	True				
ANR	5180742	AndExpression	addr != UT64_MAX && step > 0		5180663	0		&&			
ANR	5180743	EqualityExpression	addr != UT64_MAX		5180663	0		!=			
ANR	5180744	Identifier	addr		5180663	0					
ANR	5180745	Identifier	UT64_MAX		5180663	1					
ANR	5180746	RelationalExpression	step > 0		5180663	1		>			
ANR	5180747	Identifier	step		5180663	0					
ANR	5180748	PrimaryExpression	0		5180663	1					
ANR	5180749	CompoundStatement		13:36:315:315	5180663	1					
ANR	5180750	ExpressionStatement	"p -> cb_printf ( ""           "" )"	1712:3:39986:40014	5180663	0	True				
ANR	5180751	CallExpression	"p -> cb_printf ( ""           "" )"		5180663	0					
ANR	5180752	Callee	p -> cb_printf		5180663	0					
ANR	5180753	PtrMemberAccess	p -> cb_printf		5180663	0					
ANR	5180754	Identifier	p		5180663	0					
ANR	5180755	Identifier	cb_printf		5180663	1					
ANR	5180756	ArgumentList	"""           """		5180663	1					
ANR	5180757	Argument	"""           """		5180663	0					
ANR	5180758	PrimaryExpression	"""           """		5180663	0					
ANR	5180759	IfStatement	if ( arr [ 0 ] > 1 )		5180663	2					
ANR	5180760	Condition	arr [ 0 ] > 1	1714:6:40026:40035	5180663	0	True				
ANR	5180761	RelationalExpression	arr [ 0 ] > 1		5180663	0		>			
ANR	5180762	ArrayIndexing	arr [ 0 ]		5180663	0					
ANR	5180763	Identifier	arr		5180663	0					
ANR	5180764	PrimaryExpression	0		5180663	1					
ANR	5180765	PrimaryExpression	1		5180663	1					
ANR	5180766	CompoundStatement		16:18:372:372	5180663	1					
ANR	5180767	ForStatement	for ( i = 0 ; i < arr [ 0 ] ; i += INC )		5180663	0					
ANR	5180768	ForInit	i = 0 ;	1715:8:40048:40053	5180663	0	True				
ANR	5180769	AssignmentExpression	i = 0		5180663	0		=			
ANR	5180770	Identifier	i		5180663	0					
ANR	5180771	PrimaryExpression	0		5180663	1					
ANR	5180772	Condition	i < arr [ 0 ]	1715:15:40055:40064	5180663	1	True				
ANR	5180773	RelationalExpression	i < arr [ 0 ]		5180663	0		<			
ANR	5180774	Identifier	i		5180663	0					
ANR	5180775	ArrayIndexing	arr [ 0 ]		5180663	1					
ANR	5180776	Identifier	arr		5180663	0					
ANR	5180777	PrimaryExpression	0		5180663	1					
ANR	5180778	AssignmentExpression	i += INC	1715:27:40067:40074	5180663	2	True	+=			
ANR	5180779	Identifier	i		5180663	0					
ANR	5180780	Identifier	INC		5180663	1					
ANR	5180781	CompoundStatement		17:37:411:411	5180663	3					
ANR	5180782	ExpressionStatement	p -> cb_printf ( h_line )	1716:4:40083:40104	5180663	0	True				
ANR	5180783	CallExpression	p -> cb_printf ( h_line )		5180663	0					
ANR	5180784	Callee	p -> cb_printf		5180663	0					
ANR	5180785	PtrMemberAccess	p -> cb_printf		5180663	0					
ANR	5180786	Identifier	p		5180663	0					
ANR	5180787	Identifier	cb_printf		5180663	1					
ANR	5180788	ArgumentList	h_line		5180663	1					
ANR	5180789	Argument	h_line		5180663	0					
ANR	5180790	Identifier	h_line		5180663	0					
ANR	5180791	ExpressionStatement	"p -> cb_printf ( ""\\n"" )"	1719:2:40117:40136	5180663	3	True				
ANR	5180792	CallExpression	"p -> cb_printf ( ""\\n"" )"		5180663	0					
ANR	5180793	Callee	p -> cb_printf		5180663	0					
ANR	5180794	PtrMemberAccess	p -> cb_printf		5180663	0					
ANR	5180795	Identifier	p		5180663	0					
ANR	5180796	Identifier	cb_printf		5180663	1					
ANR	5180797	ArgumentList	"""\\n"""		5180663	1					
ANR	5180798	Argument	"""\\n"""		5180663	0					
ANR	5180799	PrimaryExpression	"""\\n"""		5180663	0					
ANR	5180800	IdentifierDeclStatement	int cols = 0 ;	1723:1:40176:40188	5180663	9	True				
ANR	5180801	IdentifierDecl	cols = 0		5180663	0					
ANR	5180802	IdentifierDeclType	int		5180663	0					
ANR	5180803	Identifier	cols		5180663	1					
ANR	5180804	AssignmentExpression	cols = 0		5180663	2		=			
ANR	5180805	Identifier	cols		5180663	0					
ANR	5180806	PrimaryExpression	0		5180663	1					
ANR	5180807	ForStatement	for ( i = 0 ; i < size ; i ++ )		5180663	10					
ANR	5180808	ForInit	i = 0 ;	1724:6:40196:40201	5180663	0	True				
ANR	5180809	AssignmentExpression	i = 0		5180663	0		=			
ANR	5180810	Identifier	i		5180663	0					
ANR	5180811	PrimaryExpression	0		5180663	1					
ANR	5180812	Condition	i < size	1724:13:40203:40210	5180663	1	True				
ANR	5180813	RelationalExpression	i < size		5180663	0		<			
ANR	5180814	Identifier	i		5180663	0					
ANR	5180815	Identifier	size		5180663	1					
ANR	5180816	PostIncDecOperationExpression	i ++	1724:23:40213:40215	5180663	2	True				
ANR	5180817	Identifier	i		5180663	0					
ANR	5180818	IncDec	++		5180663	1					
ANR	5180819	CompoundStatement		26:28:552:552	5180663	3					
ANR	5180820	ExpressionStatement	cols = arr [ i ] > cols ? arr [ i ] : cols	1725:2:40222:40258	5180663	0	True				
ANR	5180821	AssignmentExpression	cols = arr [ i ] > cols ? arr [ i ] : cols		5180663	0		=			
ANR	5180822	Identifier	cols		5180663	0					
ANR	5180823	ConditionalExpression	arr [ i ] > cols ? arr [ i ] : cols		5180663	1					
ANR	5180824	Condition	arr [ i ] > cols		5180663	0					
ANR	5180825	RelationalExpression	arr [ i ] > cols		5180663	0		>			
ANR	5180826	ArrayIndexing	arr [ i ]		5180663	0					
ANR	5180827	Identifier	arr		5180663	0					
ANR	5180828	Identifier	i		5180663	1					
ANR	5180829	Identifier	cols		5180663	1					
ANR	5180830	ArrayIndexing	arr [ i ]		5180663	1					
ANR	5180831	Identifier	arr		5180663	0					
ANR	5180832	Identifier	i		5180663	1					
ANR	5180833	Identifier	cols		5180663	2					
ANR	5180834	ExpressionStatement	cols /= 5	1727:1:40264:40273	5180663	11	True				
ANR	5180835	AssignmentExpression	cols /= 5		5180663	0		/=			
ANR	5180836	Identifier	cols		5180663	0					
ANR	5180837	PrimaryExpression	5		5180663	1					
ANR	5180838	ForStatement	for ( i = 0 ; i < size ; i ++ )		5180663	12					
ANR	5180839	ForInit	i = 0 ;	1728:6:40281:40286	5180663	0	True				
ANR	5180840	AssignmentExpression	i = 0		5180663	0		=			
ANR	5180841	Identifier	i		5180663	0					
ANR	5180842	PrimaryExpression	0		5180663	1					
ANR	5180843	Condition	i < size	1728:13:40288:40295	5180663	1	True				
ANR	5180844	RelationalExpression	i < size		5180663	0		<			
ANR	5180845	Identifier	i		5180663	0					
ANR	5180846	Identifier	size		5180663	1					
ANR	5180847	PostIncDecOperationExpression	i ++	1728:23:40298:40300	5180663	2	True				
ANR	5180848	Identifier	i		5180663	0					
ANR	5180849	IncDec	++		5180663	1					
ANR	5180850	CompoundStatement		32:2:685:704	5180663	3					
ANR	5180851	IdentifierDeclStatement	ut8 next = ( i + 1 < size ) ? arr [ i + 1 ] : 0 ;	1729:2:40307:40347	5180663	0	True				
ANR	5180852	IdentifierDecl	next = ( i + 1 < size ) ? arr [ i + 1 ] : 0		5180663	0					
ANR	5180853	IdentifierDeclType	ut8		5180663	0					
ANR	5180854	Identifier	next		5180663	1					
ANR	5180855	AssignmentExpression	next = ( i + 1 < size ) ? arr [ i + 1 ] : 0		5180663	2		=			
ANR	5180856	Identifier	next		5180663	0					
ANR	5180857	ConditionalExpression	( i + 1 < size ) ? arr [ i + 1 ] : 0		5180663	1					
ANR	5180858	Condition	i + 1 < size		5180663	0					
ANR	5180859	RelationalExpression	i + 1 < size		5180663	0		<			
ANR	5180860	AdditiveExpression	i + 1		5180663	0		+			
ANR	5180861	Identifier	i		5180663	0					
ANR	5180862	PrimaryExpression	1		5180663	1					
ANR	5180863	Identifier	size		5180663	1					
ANR	5180864	ArrayIndexing	arr [ i + 1 ]		5180663	1					
ANR	5180865	Identifier	arr		5180663	0					
ANR	5180866	AdditiveExpression	i + 1		5180663	1		+			
ANR	5180867	Identifier	i		5180663	0					
ANR	5180868	PrimaryExpression	1		5180663	1					
ANR	5180869	PrimaryExpression	0		5180663	2					
ANR	5180870	IdentifierDeclStatement	"int base = 0 , k = 0 ;"	1730:2:40351:40370	5180663	1	True				
ANR	5180871	IdentifierDecl	base = 0		5180663	0					
ANR	5180872	IdentifierDeclType	int		5180663	0					
ANR	5180873	Identifier	base		5180663	1					
ANR	5180874	AssignmentExpression	base = 0		5180663	2		=			
ANR	5180875	Identifier	base		5180663	0					
ANR	5180876	PrimaryExpression	0		5180663	1					
ANR	5180877	IdentifierDecl	k = 0		5180663	1					
ANR	5180878	IdentifierDeclType	int		5180663	0					
ANR	5180879	Identifier	k		5180663	1					
ANR	5180880	AssignmentExpression	k = 0		5180663	2		=			
ANR	5180881	Identifier	k		5180663	0					
ANR	5180882	PrimaryExpression	0		5180663	1					
ANR	5180883	IfStatement	if ( addr != UT64_MAX && step > 0 )		5180663	2					
ANR	5180884	Condition	addr != UT64_MAX && step > 0	1731:6:40378:40405	5180663	0	True				
ANR	5180885	AndExpression	addr != UT64_MAX && step > 0		5180663	0		&&			
ANR	5180886	EqualityExpression	addr != UT64_MAX		5180663	0		!=			
ANR	5180887	Identifier	addr		5180663	0					
ANR	5180888	Identifier	UT64_MAX		5180663	1					
ANR	5180889	RelationalExpression	step > 0		5180663	1		>			
ANR	5180890	Identifier	step		5180663	0					
ANR	5180891	PrimaryExpression	0		5180663	1					
ANR	5180892	CompoundStatement		34:3:747:774	5180663	1					
ANR	5180893	IdentifierDeclStatement	ut64 at = addr + ( i * step ) ;	1732:3:40413:40440	5180663	0	True				
ANR	5180894	IdentifierDecl	at = addr + ( i * step )		5180663	0					
ANR	5180895	IdentifierDeclType	ut64		5180663	0					
ANR	5180896	Identifier	at		5180663	1					
ANR	5180897	AssignmentExpression	at = addr + ( i * step )		5180663	2		=			
ANR	5180898	Identifier	at		5180663	0					
ANR	5180899	AdditiveExpression	addr + ( i * step )		5180663	1		+			
ANR	5180900	Identifier	addr		5180663	0					
ANR	5180901	MultiplicativeExpression	i * step		5180663	1		*			
ANR	5180902	Identifier	i		5180663	0					
ANR	5180903	Identifier	step		5180663	1					
ANR	5180904	IfStatement	if ( p -> cur_enabled )		5180663	1					
ANR	5180905	Condition	p -> cur_enabled	1733:7:40449:40462	5180663	0	True				
ANR	5180906	PtrMemberAccess	p -> cur_enabled		5180663	0					
ANR	5180907	Identifier	p		5180663	0					
ANR	5180908	Identifier	cur_enabled		5180663	1					
ANR	5180909	CompoundStatement		35:23:799:799	5180663	1					
ANR	5180910	IfStatement	if ( i == p -> cur )		5180663	0					
ANR	5180911	Condition	i == p -> cur	1734:8:40475:40485	5180663	0	True				
ANR	5180912	EqualityExpression	i == p -> cur		5180663	0		==			
ANR	5180913	Identifier	i		5180663	0					
ANR	5180914	PtrMemberAccess	p -> cur		5180663	1					
ANR	5180915	Identifier	p		5180663	0					
ANR	5180916	Identifier	cur		5180663	1					
ANR	5180917	CompoundStatement		36:21:822:822	5180663	1					
ANR	5180918	Statement	p	1735:5:40495:40495	5180663	0	True				
ANR	5180919	Statement	->	1735:6:40496:40497	5180663	1	True				
ANR	5180920	Statement	cb_printf	1735:8:40498:40506	5180663	2	True				
ANR	5180921	Statement	(	1735:18:40508:40508	5180663	3	True				
ANR	5180922	Statement	Color_INVERT	1735:19:40509:40520	5180663	4	True				
ANR	5180923	Statement	"""> 0x%08"""	1735:31:40521:40529	5180663	5	True				
ANR	5180924	Statement	PFMT64x	1735:41:40531:40537	5180663	6	True				
ANR	5180925	Statement	""" """	1735:49:40539:40541	5180663	7	True				
ANR	5180926	Statement	Color_RESET	1735:52:40542:40552	5180663	8	True				
ANR	5180927	Statement	","	1735:63:40553:40553	5180663	9	True				
ANR	5180928	Statement	at	1735:65:40555:40556	5180663	10	True				
ANR	5180929	Statement	)	1735:67:40557:40557	5180663	11	True				
ANR	5180930	ExpressionStatement		1735:68:40558:40558	5180663	12	True				
ANR	5180931	IfStatement	if ( p -> num )		5180663	13					
ANR	5180932	Condition	p -> num	1736:9:40569:40574	5180663	0	True				
ANR	5180933	PtrMemberAccess	p -> num		5180663	0					
ANR	5180934	Identifier	p		5180663	0					
ANR	5180935	Identifier	num		5180663	1					
ANR	5180936	CompoundStatement		38:17:911:911	5180663	1					
ANR	5180937	ExpressionStatement	p -> num -> value = at	1737:6:40585:40603	5180663	0	True				
ANR	5180938	AssignmentExpression	p -> num -> value = at		5180663	0		=			
ANR	5180939	PtrMemberAccess	p -> num -> value		5180663	0					
ANR	5180940	PtrMemberAccess	p -> num		5180663	0					
ANR	5180941	Identifier	p		5180663	0					
ANR	5180942	Identifier	num		5180663	1					
ANR	5180943	Identifier	value		5180663	1					
ANR	5180944	Identifier	at		5180663	1					
ANR	5180945	ElseStatement	else		5180663	0					
ANR	5180946	CompoundStatement		41:11:957:957	5180663	0					
ANR	5180947	Statement	p	1740:5:40630:40630	5180663	0	True				
ANR	5180948	Statement	->	1740:6:40631:40632	5180663	1	True				
ANR	5180949	Statement	cb_printf	1740:8:40633:40641	5180663	2	True				
ANR	5180950	Statement	(	1740:18:40643:40643	5180663	3	True				
ANR	5180951	Statement	"""  0x%08"""	1740:19:40644:40652	5180663	4	True				
ANR	5180952	Statement	PFMT64x	1740:29:40654:40660	5180663	5	True				
ANR	5180953	Statement	""" """	1740:37:40662:40664	5180663	6	True				
ANR	5180954	Statement	","	1740:40:40665:40665	5180663	7	True				
ANR	5180955	Statement	at	1740:42:40667:40668	5180663	8	True				
ANR	5180956	Statement	)	1740:44:40669:40669	5180663	9	True				
ANR	5180957	ExpressionStatement		1740:45:40670:40670	5180663	10	True				
ANR	5180958	ElseStatement	else		5180663	0					
ANR	5180959	CompoundStatement		44:10:1022:1022	5180663	0					
ANR	5180960	Statement	p	1743:4:40694:40694	5180663	0	True				
ANR	5180961	Statement	->	1743:5:40695:40696	5180663	1	True				
ANR	5180962	Statement	cb_printf	1743:7:40697:40705	5180663	2	True				
ANR	5180963	Statement	(	1743:17:40707:40707	5180663	3	True				
ANR	5180964	Statement	"""0x%08"""	1743:18:40708:40714	5180663	4	True				
ANR	5180965	Statement	PFMT64x	1743:26:40716:40722	5180663	5	True				
ANR	5180966	Statement	""" """	1743:34:40724:40726	5180663	6	True				
ANR	5180967	Statement	","	1743:37:40727:40727	5180663	7	True				
ANR	5180968	Statement	at	1743:39:40729:40730	5180663	8	True				
ANR	5180969	Statement	)	1743:41:40731:40731	5180663	9	True				
ANR	5180970	ExpressionStatement		1743:42:40732:40732	5180663	10	True				
ANR	5180971	ExpressionStatement	"p -> cb_printf ( ""%03x %04x %s"" , i , arr [ i ] , v_line )"	1745:3:40742:40790	5180663	2	True				
ANR	5180972	CallExpression	"p -> cb_printf ( ""%03x %04x %s"" , i , arr [ i ] , v_line )"		5180663	0					
ANR	5180973	Callee	p -> cb_printf		5180663	0					
ANR	5180974	PtrMemberAccess	p -> cb_printf		5180663	0					
ANR	5180975	Identifier	p		5180663	0					
ANR	5180976	Identifier	cb_printf		5180663	1					
ANR	5180977	ArgumentList	"""%03x %04x %s"""		5180663	1					
ANR	5180978	Argument	"""%03x %04x %s"""		5180663	0					
ANR	5180979	PrimaryExpression	"""%03x %04x %s"""		5180663	0					
ANR	5180980	Argument	i		5180663	1					
ANR	5180981	Identifier	i		5180663	0					
ANR	5180982	Argument	arr [ i ]		5180663	2					
ANR	5180983	ArrayIndexing	arr [ i ]		5180663	0					
ANR	5180984	Identifier	arr		5180663	0					
ANR	5180985	Identifier	i		5180663	1					
ANR	5180986	Argument	v_line		5180663	3					
ANR	5180987	Identifier	v_line		5180663	0					
ANR	5180988	ElseStatement	else		5180663	0					
ANR	5180989	CompoundStatement		48:9:1135:1135	5180663	0					
ANR	5180990	ExpressionStatement	p -> cb_printf ( v_line )	1747:3:40806:40827	5180663	0	True				
ANR	5180991	CallExpression	p -> cb_printf ( v_line )		5180663	0					
ANR	5180992	Callee	p -> cb_printf		5180663	0					
ANR	5180993	PtrMemberAccess	p -> cb_printf		5180663	0					
ANR	5180994	Identifier	p		5180663	0					
ANR	5180995	Identifier	cb_printf		5180663	1					
ANR	5180996	ArgumentList	v_line		5180663	1					
ANR	5180997	Argument	v_line		5180663	0					
ANR	5180998	Identifier	v_line		5180663	0					
ANR	5180999	IfStatement	if ( next < INC )		5180663	3					
ANR	5181000	Condition	next < INC	1749:6:40839:40848	5180663	0	True				
ANR	5181001	RelationalExpression	next < INC		5180663	0		<			
ANR	5181002	Identifier	next		5180663	0					
ANR	5181003	Identifier	INC		5180663	1					
ANR	5181004	CompoundStatement		51:18:1185:1185	5180663	1					
ANR	5181005	ExpressionStatement	base = 1	1750:3:40856:40864	5180663	0	True				
ANR	5181006	AssignmentExpression	base = 1		5180663	0		=			
ANR	5181007	Identifier	base		5180663	0					
ANR	5181008	PrimaryExpression	1		5180663	1					
ANR	5181009	IfStatement	if ( next < arr [ i ] )		5180663	4					
ANR	5181010	Condition	next < arr [ i ]	1752:6:40876:40888	5180663	0	True				
ANR	5181011	RelationalExpression	next < arr [ i ]		5180663	0		<			
ANR	5181012	Identifier	next		5180663	0					
ANR	5181013	ArrayIndexing	arr [ i ]		5180663	1					
ANR	5181014	Identifier	arr		5180663	0					
ANR	5181015	Identifier	i		5180663	1					
ANR	5181016	CompoundStatement		54:21:1225:1225	5180663	1					
ANR	5181017	IfStatement	if ( arr [ i ] > INC )		5180663	0					
ANR	5181018	Condition	arr [ i ] > INC	1753:7:40900:40911	5180663	0	True				
ANR	5181019	RelationalExpression	arr [ i ] > INC		5180663	0		>			
ANR	5181020	ArrayIndexing	arr [ i ]		5180663	0					
ANR	5181021	Identifier	arr		5180663	0					
ANR	5181022	Identifier	i		5180663	1					
ANR	5181023	Identifier	INC		5180663	1					
ANR	5181024	CompoundStatement		55:21:1248:1248	5180663	1					
ANR	5181025	ForStatement	for ( j = 0 ; j < next + base ; j += INC )		5180663	0					
ANR	5181026	ForInit	j = 0 ;	1754:9:40925:40930	5180663	0	True				
ANR	5181027	AssignmentExpression	j = 0		5180663	0		=			
ANR	5181028	Identifier	j		5180663	0					
ANR	5181029	PrimaryExpression	0		5180663	1					
ANR	5181030	Condition	j < next + base	1754:16:40932:40946	5180663	1	True				
ANR	5181031	RelationalExpression	j < next + base		5180663	0		<			
ANR	5181032	Identifier	j		5180663	0					
ANR	5181033	AdditiveExpression	next + base		5180663	1		+			
ANR	5181034	Identifier	next		5180663	0					
ANR	5181035	Identifier	base		5180663	1					
ANR	5181036	AssignmentExpression	j += INC	1754:33:40949:40956	5180663	2	True	+=			
ANR	5181037	Identifier	j		5180663	0					
ANR	5181038	Identifier	INC		5180663	1					
ANR	5181039	CompoundStatement		56:43:1293:1293	5180663	3					
ANR	5181040	ExpressionStatement	"printHistBlock ( p , k , cols )"	1755:5:40966:40993	5180663	0	True				
ANR	5181041	CallExpression	"printHistBlock ( p , k , cols )"		5180663	0					
ANR	5181042	Callee	printHistBlock		5180663	0					
ANR	5181043	Identifier	printHistBlock		5180663	0					
ANR	5181044	ArgumentList	p		5180663	1					
ANR	5181045	Argument	p		5180663	0					
ANR	5181046	Identifier	p		5180663	0					
ANR	5181047	Argument	k		5180663	1					
ANR	5181048	Identifier	k		5180663	0					
ANR	5181049	Argument	cols		5180663	2					
ANR	5181050	Identifier	cols		5180663	0					
ANR	5181051	ExpressionStatement	k ++	1756:5:41000:41003	5180663	1	True				
ANR	5181052	PostIncDecOperationExpression	k ++		5180663	0					
ANR	5181053	Identifier	k		5180663	0					
ANR	5181054	IncDec	++		5180663	1					
ANR	5181055	ForStatement	for ( j = next + INC ; j + base < arr [ i ] ; j += INC )		5180663	1					
ANR	5181056	ForInit	j = next + INC ;	1759:8:41024:41038	5180663	0	True				
ANR	5181057	AssignmentExpression	j = next + INC		5180663	0		=			
ANR	5181058	Identifier	j		5180663	0					
ANR	5181059	AdditiveExpression	next + INC		5180663	1		+			
ANR	5181060	Identifier	next		5180663	0					
ANR	5181061	Identifier	INC		5180663	1					
ANR	5181062	Condition	j + base < arr [ i ]	1759:24:41040:41056	5180663	1	True				
ANR	5181063	RelationalExpression	j + base < arr [ i ]		5180663	0		<			
ANR	5181064	AdditiveExpression	j + base		5180663	0		+			
ANR	5181065	Identifier	j		5180663	0					
ANR	5181066	Identifier	base		5180663	1					
ANR	5181067	ArrayIndexing	arr [ i ]		5180663	1					
ANR	5181068	Identifier	arr		5180663	0					
ANR	5181069	Identifier	i		5180663	1					
ANR	5181070	AssignmentExpression	j += INC	1759:43:41059:41066	5180663	2	True	+=			
ANR	5181071	Identifier	j		5180663	0					
ANR	5181072	Identifier	INC		5180663	1					
ANR	5181073	CompoundStatement		61:53:1403:1403	5180663	3					
ANR	5181074	ExpressionStatement	"printHistBlock ( p , k , cols )"	1760:4:41075:41102	5180663	0	True				
ANR	5181075	CallExpression	"printHistBlock ( p , k , cols )"		5180663	0					
ANR	5181076	Callee	printHistBlock		5180663	0					
ANR	5181077	Identifier	printHistBlock		5180663	0					
ANR	5181078	ArgumentList	p		5180663	1					
ANR	5181079	Argument	p		5180663	0					
ANR	5181080	Identifier	p		5180663	0					
ANR	5181081	Argument	k		5180663	1					
ANR	5181082	Identifier	k		5180663	0					
ANR	5181083	Argument	cols		5180663	2					
ANR	5181084	Identifier	cols		5180663	0					
ANR	5181085	ExpressionStatement	k ++	1761:4:41108:41111	5180663	1	True				
ANR	5181086	PostIncDecOperationExpression	k ++		5180663	0					
ANR	5181087	Identifier	k		5180663	0					
ANR	5181088	IncDec	++		5180663	1					
ANR	5181089	ElseStatement	else		5180663	0					
ANR	5181090	CompoundStatement		65:9:1461:1461	5180663	0					
ANR	5181091	ExpressionStatement	"printHistBlock ( p , k , cols )"	1764:3:41132:41159	5180663	0	True				
ANR	5181092	CallExpression	"printHistBlock ( p , k , cols )"		5180663	0					
ANR	5181093	Callee	printHistBlock		5180663	0					
ANR	5181094	Identifier	printHistBlock		5180663	0					
ANR	5181095	ArgumentList	p		5180663	1					
ANR	5181096	Argument	p		5180663	0					
ANR	5181097	Identifier	p		5180663	0					
ANR	5181098	Argument	k		5180663	1					
ANR	5181099	Identifier	k		5180663	0					
ANR	5181100	Argument	cols		5180663	2					
ANR	5181101	Identifier	cols		5180663	0					
ANR	5181102	ExpressionStatement	k ++	1765:3:41164:41167	5180663	1	True				
ANR	5181103	PostIncDecOperationExpression	k ++		5180663	0					
ANR	5181104	Identifier	k		5180663	0					
ANR	5181105	IncDec	++		5180663	1					
ANR	5181106	IfStatement	if ( i + 1 == size )		5180663	5					
ANR	5181107	Condition	i + 1 == size	1767:6:41179:41191	5180663	0	True				
ANR	5181108	EqualityExpression	i + 1 == size		5180663	0		==			
ANR	5181109	AdditiveExpression	i + 1		5180663	0		+			
ANR	5181110	Identifier	i		5180663	0					
ANR	5181111	PrimaryExpression	1		5180663	1					
ANR	5181112	Identifier	size		5180663	1					
ANR	5181113	CompoundStatement		69:21:1528:1528	5180663	1					
ANR	5181114	ForStatement	for ( j = arr [ i ] + INC + base ; j + base < next ; j += INC )		5180663	0					
ANR	5181115	ForInit	j = arr [ i ] + INC + base ;	1768:8:41204:41227	5180663	0	True				
ANR	5181116	AssignmentExpression	j = arr [ i ] + INC + base		5180663	0		=			
ANR	5181117	Identifier	j		5180663	0					
ANR	5181118	AdditiveExpression	arr [ i ] + INC + base		5180663	1		+			
ANR	5181119	ArrayIndexing	arr [ i ]		5180663	0					
ANR	5181120	Identifier	arr		5180663	0					
ANR	5181121	Identifier	i		5180663	1					
ANR	5181122	AdditiveExpression	INC + base		5180663	1		+			
ANR	5181123	Identifier	INC		5180663	0					
ANR	5181124	Identifier	base		5180663	1					
ANR	5181125	Condition	j + base < next	1768:33:41229:41243	5180663	1	True				
ANR	5181126	RelationalExpression	j + base < next		5180663	0		<			
ANR	5181127	AdditiveExpression	j + base		5180663	0		+			
ANR	5181128	Identifier	j		5180663	0					
ANR	5181129	Identifier	base		5180663	1					
ANR	5181130	Identifier	next		5180663	1					
ANR	5181131	AssignmentExpression	j += INC	1768:50:41246:41253	5180663	2	True	+=			
ANR	5181132	Identifier	j		5180663	0					
ANR	5181133	Identifier	INC		5180663	1					
ANR	5181134	CompoundStatement		70:60:1590:1590	5180663	3					
ANR	5181135	ExpressionStatement	"printHistBlock ( p , k , cols )"	1769:4:41262:41289	5180663	0	True				
ANR	5181136	CallExpression	"printHistBlock ( p , k , cols )"		5180663	0					
ANR	5181137	Callee	printHistBlock		5180663	0					
ANR	5181138	Identifier	printHistBlock		5180663	0					
ANR	5181139	ArgumentList	p		5180663	1					
ANR	5181140	Argument	p		5180663	0					
ANR	5181141	Identifier	p		5180663	0					
ANR	5181142	Argument	k		5180663	1					
ANR	5181143	Identifier	k		5180663	0					
ANR	5181144	Argument	cols		5180663	2					
ANR	5181145	Identifier	cols		5180663	0					
ANR	5181146	ExpressionStatement	k ++	1770:4:41295:41298	5180663	1	True				
ANR	5181147	PostIncDecOperationExpression	k ++		5180663	0					
ANR	5181148	Identifier	k		5180663	0					
ANR	5181149	IncDec	++		5180663	1					
ANR	5181150	ElseStatement	else		5180663	0					
ANR	5181151	IfStatement	if ( arr [ i + 1 ] > arr [ i ] )		5180663	0					
ANR	5181152	Condition	arr [ i + 1 ] > arr [ i ]	1772:13:41318:41336	5180663	0	True				
ANR	5181153	RelationalExpression	arr [ i + 1 ] > arr [ i ]		5180663	0		>			
ANR	5181154	ArrayIndexing	arr [ i + 1 ]		5180663	0					
ANR	5181155	Identifier	arr		5180663	0					
ANR	5181156	AdditiveExpression	i + 1		5180663	1		+			
ANR	5181157	Identifier	i		5180663	0					
ANR	5181158	PrimaryExpression	1		5180663	1					
ANR	5181159	ArrayIndexing	arr [ i ]		5180663	1					
ANR	5181160	Identifier	arr		5180663	0					
ANR	5181161	Identifier	i		5180663	1					
ANR	5181162	CompoundStatement		74:34:1673:1673	5180663	1					
ANR	5181163	ForStatement	for ( j = arr [ i ] + INC + base ; j + base < next ; j += INC )		5180663	0					
ANR	5181164	ForInit	j = arr [ i ] + INC + base ;	1773:8:41349:41372	5180663	0	True				
ANR	5181165	AssignmentExpression	j = arr [ i ] + INC + base		5180663	0		=			
ANR	5181166	Identifier	j		5180663	0					
ANR	5181167	AdditiveExpression	arr [ i ] + INC + base		5180663	1		+			
ANR	5181168	ArrayIndexing	arr [ i ]		5180663	0					
ANR	5181169	Identifier	arr		5180663	0					
ANR	5181170	Identifier	i		5180663	1					
ANR	5181171	AdditiveExpression	INC + base		5180663	1		+			
ANR	5181172	Identifier	INC		5180663	0					
ANR	5181173	Identifier	base		5180663	1					
ANR	5181174	Condition	j + base < next	1773:33:41374:41388	5180663	1	True				
ANR	5181175	RelationalExpression	j + base < next		5180663	0		<			
ANR	5181176	AdditiveExpression	j + base		5180663	0		+			
ANR	5181177	Identifier	j		5180663	0					
ANR	5181178	Identifier	base		5180663	1					
ANR	5181179	Identifier	next		5180663	1					
ANR	5181180	AssignmentExpression	j += INC	1773:50:41391:41398	5180663	2	True	+=			
ANR	5181181	Identifier	j		5180663	0					
ANR	5181182	Identifier	INC		5180663	1					
ANR	5181183	CompoundStatement		75:60:1735:1735	5180663	3					
ANR	5181184	ExpressionStatement	"printHistBlock ( p , k , cols )"	1774:4:41407:41434	5180663	0	True				
ANR	5181185	CallExpression	"printHistBlock ( p , k , cols )"		5180663	0					
ANR	5181186	Callee	printHistBlock		5180663	0					
ANR	5181187	Identifier	printHistBlock		5180663	0					
ANR	5181188	ArgumentList	p		5180663	1					
ANR	5181189	Argument	p		5180663	0					
ANR	5181190	Identifier	p		5180663	0					
ANR	5181191	Argument	k		5180663	1					
ANR	5181192	Identifier	k		5180663	0					
ANR	5181193	Argument	cols		5180663	2					
ANR	5181194	Identifier	cols		5180663	0					
ANR	5181195	ExpressionStatement	k ++	1775:4:41440:41443	5180663	1	True				
ANR	5181196	PostIncDecOperationExpression	k ++		5180663	0					
ANR	5181197	Identifier	k		5180663	0					
ANR	5181198	IncDec	++		5180663	1					
ANR	5181199	IfStatement	if ( show_colors )		5180663	6					
ANR	5181200	Condition	show_colors	1778:6:41460:41470	5180663	0	True				
ANR	5181201	Identifier	show_colors		5180663	0					
ANR	5181202	CompoundStatement		80:19:1807:1807	5180663	1					
ANR	5181203	ExpressionStatement	"p -> cb_printf ( ""%s"" , Color_RESET )"	1779:3:41478:41510	5180663	0	True				
ANR	5181204	CallExpression	"p -> cb_printf ( ""%s"" , Color_RESET )"		5180663	0					
ANR	5181205	Callee	p -> cb_printf		5180663	0					
ANR	5181206	PtrMemberAccess	p -> cb_printf		5180663	0					
ANR	5181207	Identifier	p		5180663	0					
ANR	5181208	Identifier	cb_printf		5180663	1					
ANR	5181209	ArgumentList	"""%s"""		5180663	1					
ANR	5181210	Argument	"""%s"""		5180663	0					
ANR	5181211	PrimaryExpression	"""%s"""		5180663	0					
ANR	5181212	Argument	Color_RESET		5180663	1					
ANR	5181213	Identifier	Color_RESET		5180663	0					
ANR	5181214	ExpressionStatement	"p -> cb_printf ( ""\\n"" )"	1781:2:41518:41537	5180663	7	True				
ANR	5181215	CallExpression	"p -> cb_printf ( ""\\n"" )"		5180663	0					
ANR	5181216	Callee	p -> cb_printf		5180663	0					
ANR	5181217	PtrMemberAccess	p -> cb_printf		5180663	0					
ANR	5181218	Identifier	p		5180663	0					
ANR	5181219	Identifier	cb_printf		5180663	1					
ANR	5181220	ArgumentList	"""\\n"""		5180663	1					
ANR	5181221	Argument	"""\\n"""		5180663	0					
ANR	5181222	PrimaryExpression	"""\\n"""		5180663	0					
ANR	5181223	ReturnType	R_API void		5180663	1					
ANR	5181224	Identifier	r_print_fill		5180663	2					
ANR	5181225	ParameterList	"RPrint * p , const ut8 * arr , int size , ut64 addr , int step"		5180663	3					
ANR	5181226	Parameter	RPrint * p	1699:24:39607:39615	5180663	0	True				
ANR	5181227	ParameterType	RPrint *		5180663	0					
ANR	5181228	Identifier	p		5180663	1					
ANR	5181229	Parameter	const ut8 * arr	1699:35:39618:39631	5180663	1	True				
ANR	5181230	ParameterType	const ut8 *		5180663	0					
ANR	5181231	Identifier	arr		5180663	1					
ANR	5181232	Parameter	int size	1699:51:39634:39641	5180663	2	True				
ANR	5181233	ParameterType	int		5180663	0					
ANR	5181234	Identifier	size		5180663	1					
ANR	5181235	Parameter	ut64 addr	1699:61:39644:39652	5180663	3	True				
ANR	5181236	ParameterType	ut64		5180663	0					
ANR	5181237	Identifier	addr		5180663	1					
ANR	5181238	Parameter	int step	1699:72:39655:39662	5180663	4	True				
ANR	5181239	ParameterType	int		5180663	0					
ANR	5181240	Identifier	step		5180663	1					
ANR	5181241	CFGEntryNode	ENTRY		5180663		True				
ANR	5181242	CFGExitNode	EXIT		5180663		True				
ANR	5181243	Symbol	next		5180663						
ANR	5181244	Symbol	p -> cur_enabled		5180663						
ANR	5181245	Symbol	RUNE_LINE_VERT		5180663						
ANR	5181246	Symbol	p -> num		5180663						
ANR	5181247	Symbol	Color_RESET		5180663						
ANR	5181248	Symbol	h_line		5180663						
ANR	5181249	Symbol	p -> cur		5180663						
ANR	5181250	Symbol	v_line		5180663						
ANR	5181251	Symbol	* p -> num		5180663						
ANR	5181252	Symbol	p -> cons -> use_utf8		5180663						
ANR	5181253	Symbol	R_PRINT_FLAGS_COLOR		5180663						
ANR	5181254	Symbol	* p -> cons		5180663						
ANR	5181255	Symbol	* * p		5180663						
ANR	5181256	Symbol	addr		5180663						
ANR	5181257	Symbol	p -> cons		5180663						
ANR	5181258	Symbol	UT64_MAX		5180663						
ANR	5181259	Symbol	cols		5180663						
ANR	5181260	Symbol	arr		5180663						
ANR	5181261	Symbol	i		5180663						
ANR	5181262	Symbol	show_colors		5180663						
ANR	5181263	Symbol	j		5180663						
ANR	5181264	Symbol	k		5180663						
ANR	5181265	Symbol	p		5180663						
ANR	5181266	Symbol	* i		5180663						
ANR	5181267	Symbol	at		5180663						
ANR	5181268	Symbol	size		5180663						
ANR	5181269	Symbol	* arr		5180663						
ANR	5181270	Symbol	useUtf8		5180663						
ANR	5181271	Symbol	p -> flags		5180663						
ANR	5181272	Symbol	p -> num -> value		5180663						
ANR	5181273	Symbol	step		5180663						
ANR	5181274	Symbol	* p		5180663						
ANR	5181275	Symbol	INC		5180663						
ANR	5181276	Symbol	base		5180663						
ANR	5181277	Function	r_print_2bpp_row	1785:0:41545:42327							
ANR	5181278	FunctionDef	"r_print_2bpp_row (RPrint * p , ut8 * buf)"		5181277	0					
ANR	5181279	CompoundStatement		1785:49:41594:42327	5181277	0					
ANR	5181280	IdentifierDeclStatement	const bool useColor = p ? ( p -> flags & R_PRINT_FLAGS_COLOR ) : false ;	1786:1:41597:41661	5181277	0	True				
ANR	5181281	IdentifierDecl	useColor = p ? ( p -> flags & R_PRINT_FLAGS_COLOR ) : false		5181277	0					
ANR	5181282	IdentifierDeclType	const bool		5181277	0					
ANR	5181283	Identifier	useColor		5181277	1					
ANR	5181284	AssignmentExpression	useColor = p ? ( p -> flags & R_PRINT_FLAGS_COLOR ) : false		5181277	2		=			
ANR	5181285	Identifier	useColor		5181277	0					
ANR	5181286	ConditionalExpression	p ? ( p -> flags & R_PRINT_FLAGS_COLOR ) : false		5181277	1					
ANR	5181287	Condition	p		5181277	0					
ANR	5181288	Identifier	p		5181277	0					
ANR	5181289	BitAndExpression	p -> flags & R_PRINT_FLAGS_COLOR		5181277	1		&			
ANR	5181290	PtrMemberAccess	p -> flags		5181277	0					
ANR	5181291	Identifier	p		5181277	0					
ANR	5181292	Identifier	flags		5181277	1					
ANR	5181293	Identifier	R_PRINT_FLAGS_COLOR		5181277	1					
ANR	5181294	Identifier	false		5181277	2					
ANR	5181295	IdentifierDeclStatement	"int i , c = 0 ;"	1787:1:41664:41676	5181277	1	True				
ANR	5181296	IdentifierDecl	i		5181277	0					
ANR	5181297	IdentifierDeclType	int		5181277	0					
ANR	5181298	Identifier	i		5181277	1					
ANR	5181299	IdentifierDecl	c = 0		5181277	1					
ANR	5181300	IdentifierDeclType	int		5181277	0					
ANR	5181301	Identifier	c		5181277	1					
ANR	5181302	AssignmentExpression	c = 0		5181277	2		=			
ANR	5181303	Identifier	c		5181277	0					
ANR	5181304	PrimaryExpression	0		5181277	1					
ANR	5181305	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		5181277	2					
ANR	5181306	ForInit	i = 0 ;	1788:6:41684:41689	5181277	0	True				
ANR	5181307	AssignmentExpression	i = 0		5181277	0		=			
ANR	5181308	Identifier	i		5181277	0					
ANR	5181309	PrimaryExpression	0		5181277	1					
ANR	5181310	Condition	i < 8	1788:13:41691:41695	5181277	1	True				
ANR	5181311	RelationalExpression	i < 8		5181277	0		<			
ANR	5181312	Identifier	i		5181277	0					
ANR	5181313	PrimaryExpression	8		5181277	1					
ANR	5181314	PostIncDecOperationExpression	i ++	1788:20:41698:41700	5181277	2	True				
ANR	5181315	Identifier	i		5181277	0					
ANR	5181316	IncDec	++		5181277	1					
ANR	5181317	CompoundStatement		4:25:108:108	5181277	3					
ANR	5181318	IfStatement	if ( buf [ 1 ] & ( ( 1 << 7 ) >> i ) )		5181277	0					
ANR	5181319	Condition	buf [ 1 ] & ( ( 1 << 7 ) >> i )	1789:6:41711:41734	5181277	0	True				
ANR	5181320	BitAndExpression	buf [ 1 ] & ( ( 1 << 7 ) >> i )		5181277	0		&			
ANR	5181321	ArrayIndexing	buf [ 1 ]		5181277	0					
ANR	5181322	Identifier	buf		5181277	0					
ANR	5181323	PrimaryExpression	1		5181277	1					
ANR	5181324	ShiftExpression	( 1 << 7 ) >> i		5181277	1		>>			
ANR	5181325	ShiftExpression	1 << 7		5181277	0		<<			
ANR	5181326	PrimaryExpression	1		5181277	0					
ANR	5181327	PrimaryExpression	7		5181277	1					
ANR	5181328	Identifier	i		5181277	1					
ANR	5181329	CompoundStatement		5:32:142:142	5181277	1					
ANR	5181330	ExpressionStatement	c = 2	1790:3:41742:41747	5181277	0	True				
ANR	5181331	AssignmentExpression	c = 2		5181277	0		=			
ANR	5181332	Identifier	c		5181277	0					
ANR	5181333	PrimaryExpression	2		5181277	1					
ANR	5181334	IfStatement	if ( buf [ 0 ] & ( ( 1 << 7 ) >> i ) )		5181277	1					
ANR	5181335	Condition	buf [ 0 ] & ( ( 1 << 7 ) >> i )	1792:6:41759:41782	5181277	0	True				
ANR	5181336	BitAndExpression	buf [ 0 ] & ( ( 1 << 7 ) >> i )		5181277	0		&			
ANR	5181337	ArrayIndexing	buf [ 0 ]		5181277	0					
ANR	5181338	Identifier	buf		5181277	0					
ANR	5181339	PrimaryExpression	0		5181277	1					
ANR	5181340	ShiftExpression	( 1 << 7 ) >> i		5181277	1		>>			
ANR	5181341	ShiftExpression	1 << 7		5181277	0		<<			
ANR	5181342	PrimaryExpression	1		5181277	0					
ANR	5181343	PrimaryExpression	7		5181277	1					
ANR	5181344	Identifier	i		5181277	1					
ANR	5181345	CompoundStatement		8:32:190:190	5181277	1					
ANR	5181346	ExpressionStatement	c ++	1793:3:41790:41793	5181277	0	True				
ANR	5181347	PostIncDecOperationExpression	c ++		5181277	0					
ANR	5181348	Identifier	c		5181277	0					
ANR	5181349	IncDec	++		5181277	1					
ANR	5181350	IfStatement	if ( useColor )		5181277	2					
ANR	5181351	Condition	useColor	1795:6:41805:41812	5181277	0	True				
ANR	5181352	Identifier	useColor		5181277	0					
ANR	5181353	CompoundStatement		12:3:225:241	5181277	1					
ANR	5181354	IdentifierDeclStatement	"char * color = """" ;"	1796:3:41820:41836	5181277	0	True				
ANR	5181355	IdentifierDecl	"* color = """""		5181277	0					
ANR	5181356	IdentifierDeclType	char *		5181277	0					
ANR	5181357	Identifier	color		5181277	1					
ANR	5181358	AssignmentExpression	"* color = """""		5181277	2		=			
ANR	5181359	Identifier	color		5181277	0					
ANR	5181360	PrimaryExpression	""""""		5181277	1					
ANR	5181361	SwitchStatement	switch ( c )		5181277	1					
ANR	5181362	Condition	c	1797:11:41849:41849	5181277	0	True				
ANR	5181363	Identifier	c		5181277	0					
ANR	5181364	CompoundStatement		13:14:257:257	5181277	1					
ANR	5181365	Label	case 0 :	1798:3:41857:41863	5181277	0	True				
ANR	5181366	ExpressionStatement	color = Color_BGWHITE	1799:4:41869:41890	5181277	1	True				
ANR	5181367	AssignmentExpression	color = Color_BGWHITE		5181277	0		=			
ANR	5181368	Identifier	color		5181277	0					
ANR	5181369	Identifier	Color_BGWHITE		5181277	1					
ANR	5181370	BreakStatement	break ;	1800:4:41896:41901	5181277	2	True				
ANR	5181371	Label	case 1 :	1801:3:41906:41912	5181277	3	True				
ANR	5181372	ExpressionStatement	color = Color_BGRED	1802:4:41918:41937	5181277	4	True				
ANR	5181373	AssignmentExpression	color = Color_BGRED		5181277	0		=			
ANR	5181374	Identifier	color		5181277	0					
ANR	5181375	Identifier	Color_BGRED		5181277	1					
ANR	5181376	BreakStatement	break ;	1803:4:41943:41948	5181277	5	True				
ANR	5181377	Label	case 2 :	1804:3:41953:41959	5181277	6	True				
ANR	5181378	ExpressionStatement	color = Color_BGBLUE	1805:4:41965:41985	5181277	7	True				
ANR	5181379	AssignmentExpression	color = Color_BGBLUE		5181277	0		=			
ANR	5181380	Identifier	color		5181277	0					
ANR	5181381	Identifier	Color_BGBLUE		5181277	1					
ANR	5181382	BreakStatement	break ;	1806:4:41991:41996	5181277	8	True				
ANR	5181383	Label	case 3 :	1807:3:42001:42007	5181277	9	True				
ANR	5181384	ExpressionStatement	color = Color_BGBLACK	1808:4:42013:42034	5181277	10	True				
ANR	5181385	AssignmentExpression	color = Color_BGBLACK		5181277	0		=			
ANR	5181386	Identifier	color		5181277	0					
ANR	5181387	Identifier	Color_BGBLACK		5181277	1					
ANR	5181388	BreakStatement	break ;	1809:4:42040:42045	5181277	11	True				
ANR	5181389	IfStatement	if ( p )		5181277	2					
ANR	5181390	Condition	p	1811:7:42059:42059	5181277	0	True				
ANR	5181391	Identifier	p		5181277	0					
ANR	5181392	CompoundStatement		27:10:467:467	5181277	1					
ANR	5181393	ExpressionStatement	"p -> cb_printf ( ""%s  "" , color )"	1812:4:42068:42096	5181277	0	True				
ANR	5181394	CallExpression	"p -> cb_printf ( ""%s  "" , color )"		5181277	0					
ANR	5181395	Callee	p -> cb_printf		5181277	0					
ANR	5181396	PtrMemberAccess	p -> cb_printf		5181277	0					
ANR	5181397	Identifier	p		5181277	0					
ANR	5181398	Identifier	cb_printf		5181277	1					
ANR	5181399	ArgumentList	"""%s  """		5181277	1					
ANR	5181400	Argument	"""%s  """		5181277	0					
ANR	5181401	PrimaryExpression	"""%s  """		5181277	0					
ANR	5181402	Argument	color		5181277	1					
ANR	5181403	Identifier	color		5181277	0					
ANR	5181404	ElseStatement	else		5181277	0					
ANR	5181405	CompoundStatement		29:10:513:513	5181277	0					
ANR	5181406	ExpressionStatement	"printf ( ""%s  "" , color )"	1814:4:42114:42136	5181277	0	True				
ANR	5181407	CallExpression	"printf ( ""%s  "" , color )"		5181277	0					
ANR	5181408	Callee	printf		5181277	0					
ANR	5181409	Identifier	printf		5181277	0					
ANR	5181410	ArgumentList	"""%s  """		5181277	1					
ANR	5181411	Argument	"""%s  """		5181277	0					
ANR	5181412	PrimaryExpression	"""%s  """		5181277	0					
ANR	5181413	Argument	color		5181277	1					
ANR	5181414	Identifier	color		5181277	0					
ANR	5181415	ElseStatement	else		5181277	0					
ANR	5181416	CompoundStatement		34:3:593:621	5181277	0					
ANR	5181417	IdentifierDeclStatement	"const char * chstr = ""#=-."" ;"	1817:3:42157:42183	5181277	0	True				
ANR	5181418	IdentifierDecl	"* chstr = ""#=-."""		5181277	0					
ANR	5181419	IdentifierDeclType	const char *		5181277	0					
ANR	5181420	Identifier	chstr		5181277	1					
ANR	5181421	AssignmentExpression	"* chstr = ""#=-."""		5181277	2		=			
ANR	5181422	Identifier	chstr		5181277	0					
ANR	5181423	PrimaryExpression	"""#=-."""		5181277	1					
ANR	5181424	IdentifierDeclStatement	const char ch = chstr [ c % 4 ] ;	1818:3:42188:42216	5181277	1	True				
ANR	5181425	IdentifierDecl	ch = chstr [ c % 4 ]		5181277	0					
ANR	5181426	IdentifierDeclType	const char		5181277	0					
ANR	5181427	Identifier	ch		5181277	1					
ANR	5181428	AssignmentExpression	ch = chstr [ c % 4 ]		5181277	2		=			
ANR	5181429	Identifier	ch		5181277	0					
ANR	5181430	ArrayIndexing	chstr [ c % 4 ]		5181277	1					
ANR	5181431	Identifier	chstr		5181277	0					
ANR	5181432	MultiplicativeExpression	c % 4		5181277	1		%			
ANR	5181433	Identifier	c		5181277	0					
ANR	5181434	PrimaryExpression	4		5181277	1					
ANR	5181435	IfStatement	if ( p )		5181277	2					
ANR	5181436	Condition	p	1819:7:42225:42225	5181277	0	True				
ANR	5181437	Identifier	p		5181277	0					
ANR	5181438	CompoundStatement		35:10:633:633	5181277	1					
ANR	5181439	ExpressionStatement	"p -> cb_printf ( ""%c%c"" , ch , ch )"	1820:4:42234:42263	5181277	0	True				
ANR	5181440	CallExpression	"p -> cb_printf ( ""%c%c"" , ch , ch )"		5181277	0					
ANR	5181441	Callee	p -> cb_printf		5181277	0					
ANR	5181442	PtrMemberAccess	p -> cb_printf		5181277	0					
ANR	5181443	Identifier	p		5181277	0					
ANR	5181444	Identifier	cb_printf		5181277	1					
ANR	5181445	ArgumentList	"""%c%c"""		5181277	1					
ANR	5181446	Argument	"""%c%c"""		5181277	0					
ANR	5181447	PrimaryExpression	"""%c%c"""		5181277	0					
ANR	5181448	Argument	ch		5181277	1					
ANR	5181449	Identifier	ch		5181277	0					
ANR	5181450	Argument	ch		5181277	2					
ANR	5181451	Identifier	ch		5181277	0					
ANR	5181452	ElseStatement	else		5181277	0					
ANR	5181453	CompoundStatement		37:10:680:680	5181277	0					
ANR	5181454	ExpressionStatement	"printf ( ""%c%c"" , ch , ch )"	1822:4:42281:42304	5181277	0	True				
ANR	5181455	CallExpression	"printf ( ""%c%c"" , ch , ch )"		5181277	0					
ANR	5181456	Callee	printf		5181277	0					
ANR	5181457	Identifier	printf		5181277	0					
ANR	5181458	ArgumentList	"""%c%c"""		5181277	1					
ANR	5181459	Argument	"""%c%c"""		5181277	0					
ANR	5181460	PrimaryExpression	"""%c%c"""		5181277	0					
ANR	5181461	Argument	ch		5181277	1					
ANR	5181462	Identifier	ch		5181277	0					
ANR	5181463	Argument	ch		5181277	2					
ANR	5181464	Identifier	ch		5181277	0					
ANR	5181465	ExpressionStatement	c = 0	1825:2:42317:42322	5181277	3	True				
ANR	5181466	AssignmentExpression	c = 0		5181277	0		=			
ANR	5181467	Identifier	c		5181277	0					
ANR	5181468	PrimaryExpression	0		5181277	1					
ANR	5181469	ReturnType	R_API void		5181277	1					
ANR	5181470	Identifier	r_print_2bpp_row		5181277	2					
ANR	5181471	ParameterList	"RPrint * p , ut8 * buf"		5181277	3					
ANR	5181472	Parameter	RPrint * p	1785:28:41573:41581	5181277	0	True				
ANR	5181473	ParameterType	RPrint *		5181277	0					
ANR	5181474	Identifier	p		5181277	1					
ANR	5181475	Parameter	ut8 * buf	1785:39:41584:41591	5181277	1	True				
ANR	5181476	ParameterType	ut8 *		5181277	0					
ANR	5181477	Identifier	buf		5181277	1					
ANR	5181478	CFGEntryNode	ENTRY		5181277		True				
ANR	5181479	CFGExitNode	EXIT		5181277		True				
ANR	5181480	Symbol	* buf		5181277						
ANR	5181481	Symbol	c		5181277						
ANR	5181482	Symbol	color		5181277						
ANR	5181483	Symbol	ch		5181277						
ANR	5181484	Symbol	false		5181277						
ANR	5181485	Symbol	Color_BGBLACK		5181277						
ANR	5181486	Symbol	chstr		5181277						
ANR	5181487	Symbol	i		5181277						
ANR	5181488	Symbol	Color_BGRED		5181277						
ANR	5181489	Symbol	* c		5181277						
ANR	5181490	Symbol	useColor		5181277						
ANR	5181491	Symbol	p		5181277						
ANR	5181492	Symbol	buf		5181277						
ANR	5181493	Symbol	* chstr		5181277						
ANR	5181494	Symbol	Color_BGWHITE		5181277						
ANR	5181495	Symbol	Color_BGBLUE		5181277						
ANR	5181496	Symbol	R_PRINT_FLAGS_COLOR		5181277						
ANR	5181497	Symbol	p -> flags		5181277						
ANR	5181498	Symbol	* p		5181277						
ANR	5181499	Function	r_print_2bpp_tiles	1829:0:42330:42728							
ANR	5181500	FunctionDef	"r_print_2bpp_tiles (RPrint * p , ut8 * buf , ut32 tiles)"		5181499	0					
ANR	5181501	CompoundStatement		1829:63:42393:42728	5181499	0					
ANR	5181502	IdentifierDeclStatement	"int i , r ;"	1830:1:42396:42404	5181499	0	True				
ANR	5181503	IdentifierDecl	i		5181499	0					
ANR	5181504	IdentifierDeclType	int		5181499	0					
ANR	5181505	Identifier	i		5181499	1					
ANR	5181506	IdentifierDecl	r		5181499	1					
ANR	5181507	IdentifierDeclType	int		5181499	0					
ANR	5181508	Identifier	r		5181499	1					
ANR	5181509	IdentifierDeclStatement	const bool useColor = p ? ( p -> flags & R_PRINT_FLAGS_COLOR ) : false ;	1831:1:42407:42471	5181499	1	True				
ANR	5181510	IdentifierDecl	useColor = p ? ( p -> flags & R_PRINT_FLAGS_COLOR ) : false		5181499	0					
ANR	5181511	IdentifierDeclType	const bool		5181499	0					
ANR	5181512	Identifier	useColor		5181499	1					
ANR	5181513	AssignmentExpression	useColor = p ? ( p -> flags & R_PRINT_FLAGS_COLOR ) : false		5181499	2		=			
ANR	5181514	Identifier	useColor		5181499	0					
ANR	5181515	ConditionalExpression	p ? ( p -> flags & R_PRINT_FLAGS_COLOR ) : false		5181499	1					
ANR	5181516	Condition	p		5181499	0					
ANR	5181517	Identifier	p		5181499	0					
ANR	5181518	BitAndExpression	p -> flags & R_PRINT_FLAGS_COLOR		5181499	1		&			
ANR	5181519	PtrMemberAccess	p -> flags		5181499	0					
ANR	5181520	Identifier	p		5181499	0					
ANR	5181521	Identifier	flags		5181499	1					
ANR	5181522	Identifier	R_PRINT_FLAGS_COLOR		5181499	1					
ANR	5181523	Identifier	false		5181499	2					
ANR	5181524	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		5181499	2					
ANR	5181525	ForInit	i = 0 ;	1832:6:42479:42484	5181499	0	True				
ANR	5181526	AssignmentExpression	i = 0		5181499	0		=			
ANR	5181527	Identifier	i		5181499	0					
ANR	5181528	PrimaryExpression	0		5181499	1					
ANR	5181529	Condition	i < 8	1832:13:42486:42490	5181499	1	True				
ANR	5181530	RelationalExpression	i < 8		5181499	0		<			
ANR	5181531	Identifier	i		5181499	0					
ANR	5181532	PrimaryExpression	8		5181499	1					
ANR	5181533	PostIncDecOperationExpression	i ++	1832:20:42493:42495	5181499	2	True				
ANR	5181534	Identifier	i		5181499	0					
ANR	5181535	IncDec	++		5181499	1					
ANR	5181536	CompoundStatement		4:25:104:104	5181499	3					
ANR	5181537	ForStatement	for ( r = 0 ; r < tiles ; r ++ )		5181499	0					
ANR	5181538	ForInit	r = 0 ;	1833:7:42507:42512	5181499	0	True				
ANR	5181539	AssignmentExpression	r = 0		5181499	0		=			
ANR	5181540	Identifier	r		5181499	0					
ANR	5181541	PrimaryExpression	0		5181499	1					
ANR	5181542	Condition	r < tiles	1833:14:42514:42522	5181499	1	True				
ANR	5181543	RelationalExpression	r < tiles		5181499	0		<			
ANR	5181544	Identifier	r		5181499	0					
ANR	5181545	Identifier	tiles		5181499	1					
ANR	5181546	PostIncDecOperationExpression	r ++	1833:25:42525:42527	5181499	2	True				
ANR	5181547	Identifier	r		5181499	0					
ANR	5181548	IncDec	++		5181499	1					
ANR	5181549	CompoundStatement		5:30:136:136	5181499	3					
ANR	5181550	ExpressionStatement	"r_print_2bpp_row ( p , buf + 2 * i + r * 16 )"	1834:3:42535:42577	5181499	0	True				
ANR	5181551	CallExpression	"r_print_2bpp_row ( p , buf + 2 * i + r * 16 )"		5181499	0					
ANR	5181552	Callee	r_print_2bpp_row		5181499	0					
ANR	5181553	Identifier	r_print_2bpp_row		5181499	0					
ANR	5181554	ArgumentList	p		5181499	1					
ANR	5181555	Argument	p		5181499	0					
ANR	5181556	Identifier	p		5181499	0					
ANR	5181557	Argument	buf + 2 * i + r * 16		5181499	1					
ANR	5181558	AdditiveExpression	buf + 2 * i + r * 16		5181499	0		+			
ANR	5181559	Identifier	buf		5181499	0					
ANR	5181560	AdditiveExpression	2 * i + r * 16		5181499	1		+			
ANR	5181561	MultiplicativeExpression	2 * i		5181499	0		*			
ANR	5181562	PrimaryExpression	2		5181499	0					
ANR	5181563	Identifier	i		5181499	1					
ANR	5181564	MultiplicativeExpression	r * 16		5181499	1		*			
ANR	5181565	Identifier	r		5181499	0					
ANR	5181566	PrimaryExpression	16		5181499	1					
ANR	5181567	IfStatement	if ( p )		5181499	1					
ANR	5181568	Condition	p	1836:6:42589:42589	5181499	0	True				
ANR	5181569	Identifier	p		5181499	0					
ANR	5181570	CompoundStatement		8:9:198:198	5181499	1					
ANR	5181571	IfStatement	if ( useColor )		5181499	0					
ANR	5181572	Condition	useColor	1837:7:42601:42608	5181499	0	True				
ANR	5181573	Identifier	useColor		5181499	0					
ANR	5181574	CompoundStatement		9:17:217:217	5181499	1					
ANR	5181575	Statement	p	1838:4:42617:42617	5181499	0	True				
ANR	5181576	Statement	->	1838:5:42618:42619	5181499	1	True				
ANR	5181577	Statement	cb_printf	1838:7:42620:42628	5181499	2	True				
ANR	5181578	Statement	(	1838:17:42630:42630	5181499	3	True				
ANR	5181579	Statement	Color_RESET	1838:18:42631:42641	5181499	4	True				
ANR	5181580	Statement	"""\\n"""	1838:30:42643:42646	5181499	5	True				
ANR	5181581	Statement	)	1838:34:42647:42647	5181499	6	True				
ANR	5181582	ExpressionStatement		1838:35:42648:42648	5181499	7	True				
ANR	5181583	ElseStatement	else		5181499	0					
ANR	5181584	CompoundStatement		11:10:266:266	5181499	0					
ANR	5181585	ExpressionStatement	"p -> cb_printf ( ""\\n"" )"	1840:4:42666:42685	5181499	0	True				
ANR	5181586	CallExpression	"p -> cb_printf ( ""\\n"" )"		5181499	0					
ANR	5181587	Callee	p -> cb_printf		5181499	0					
ANR	5181588	PtrMemberAccess	p -> cb_printf		5181499	0					
ANR	5181589	Identifier	p		5181499	0					
ANR	5181590	Identifier	cb_printf		5181499	1					
ANR	5181591	ArgumentList	"""\\n"""		5181499	1					
ANR	5181592	Argument	"""\\n"""		5181499	0					
ANR	5181593	PrimaryExpression	"""\\n"""		5181499	0					
ANR	5181594	ElseStatement	else		5181499	0					
ANR	5181595	CompoundStatement		14:9:307:307	5181499	0					
ANR	5181596	ExpressionStatement	"printf ( ""\\n"" )"	1843:3:42706:42719	5181499	0	True				
ANR	5181597	CallExpression	"printf ( ""\\n"" )"		5181499	0					
ANR	5181598	Callee	printf		5181499	0					
ANR	5181599	Identifier	printf		5181499	0					
ANR	5181600	ArgumentList	"""\\n"""		5181499	1					
ANR	5181601	Argument	"""\\n"""		5181499	0					
ANR	5181602	PrimaryExpression	"""\\n"""		5181499	0					
ANR	5181603	ReturnType	R_API void		5181499	1					
ANR	5181604	Identifier	r_print_2bpp_tiles		5181499	2					
ANR	5181605	ParameterList	"RPrint * p , ut8 * buf , ut32 tiles"		5181499	3					
ANR	5181606	Parameter	RPrint * p	1829:30:42360:42368	5181499	0	True				
ANR	5181607	ParameterType	RPrint *		5181499	0					
ANR	5181608	Identifier	p		5181499	1					
ANR	5181609	Parameter	ut8 * buf	1829:41:42371:42378	5181499	1	True				
ANR	5181610	ParameterType	ut8 *		5181499	0					
ANR	5181611	Identifier	buf		5181499	1					
ANR	5181612	Parameter	ut32 tiles	1829:51:42381:42390	5181499	2	True				
ANR	5181613	ParameterType	ut32		5181499	0					
ANR	5181614	Identifier	tiles		5181499	1					
ANR	5181615	CFGEntryNode	ENTRY		5181499		True				
ANR	5181616	CFGExitNode	EXIT		5181499		True				
ANR	5181617	Symbol	p		5181499						
ANR	5181618	Symbol	tiles		5181499						
ANR	5181619	Symbol	buf		5181499						
ANR	5181620	Symbol	r		5181499						
ANR	5181621	Symbol	R_PRINT_FLAGS_COLOR		5181499						
ANR	5181622	Symbol	false		5181499						
ANR	5181623	Symbol	i		5181499						
ANR	5181624	Symbol	p -> flags		5181499						
ANR	5181625	Symbol	* p		5181499						
ANR	5181626	Symbol	useColor		5181499						
ANR	5181627	Function	r_print_color_op_type	1848:6:42737:44819							
ANR	5181628	FunctionDef	"r_print_color_op_type (RPrint * p , ut32 anal_type)"		5181627	0					
ANR	5181629	CompoundStatement		1848:67:42798:44819	5181627	0					
ANR	5181630	IdentifierDeclStatement	RConsPrintablePalette * pal = & p -> cons -> context -> pal ;	1849:1:42801:42852	5181627	0	True				
ANR	5181631	IdentifierDecl	* pal = & p -> cons -> context -> pal		5181627	0					
ANR	5181632	IdentifierDeclType	RConsPrintablePalette *		5181627	0					
ANR	5181633	Identifier	pal		5181627	1					
ANR	5181634	AssignmentExpression	* pal = & p -> cons -> context -> pal		5181627	2		=			
ANR	5181635	Identifier	pal		5181627	0					
ANR	5181636	UnaryOperationExpression	& p -> cons -> context -> pal		5181627	1					
ANR	5181637	UnaryOperator	&		5181627	0					
ANR	5181638	PtrMemberAccess	p -> cons -> context -> pal		5181627	1					
ANR	5181639	PtrMemberAccess	p -> cons -> context		5181627	0					
ANR	5181640	PtrMemberAccess	p -> cons		5181627	0					
ANR	5181641	Identifier	p		5181627	0					
ANR	5181642	Identifier	cons		5181627	1					
ANR	5181643	Identifier	context		5181627	1					
ANR	5181644	Identifier	pal		5181627	1					
ANR	5181645	SwitchStatement	switch ( anal_type & R_ANAL_OP_TYPE_MASK )		5181627	1					
ANR	5181646	Condition	anal_type & R_ANAL_OP_TYPE_MASK	1850:9:42863:42893	5181627	0	True				
ANR	5181647	BitAndExpression	anal_type & R_ANAL_OP_TYPE_MASK		5181627	0		&			
ANR	5181648	Identifier	anal_type		5181627	0					
ANR	5181649	Identifier	R_ANAL_OP_TYPE_MASK		5181627	1					
ANR	5181650	CompoundStatement		3:42:97:97	5181627	1					
ANR	5181651	Label	case R_ANAL_OP_TYPE_NOP :	1851:1:42899:42922	5181627	0	True				
ANR	5181652	Identifier	R_ANAL_OP_TYPE_NOP		5181627	0					
ANR	5181653	ReturnStatement	return pal -> nop ;	1852:2:42926:42941	5181627	1	True				
ANR	5181654	PtrMemberAccess	pal -> nop		5181627	0					
ANR	5181655	Identifier	pal		5181627	0					
ANR	5181656	Identifier	nop		5181627	1					
ANR	5181657	Label	case R_ANAL_OP_TYPE_ADD :	1853:1:42944:42967	5181627	2	True				
ANR	5181658	Identifier	R_ANAL_OP_TYPE_ADD		5181627	0					
ANR	5181659	Label	case R_ANAL_OP_TYPE_SUB :	1854:1:42970:42993	5181627	3	True				
ANR	5181660	Identifier	R_ANAL_OP_TYPE_SUB		5181627	0					
ANR	5181661	Label	case R_ANAL_OP_TYPE_MUL :	1855:1:42996:43019	5181627	4	True				
ANR	5181662	Identifier	R_ANAL_OP_TYPE_MUL		5181627	0					
ANR	5181663	Label	case R_ANAL_OP_TYPE_DIV :	1856:1:43022:43045	5181627	5	True				
ANR	5181664	Identifier	R_ANAL_OP_TYPE_DIV		5181627	0					
ANR	5181665	Label	case R_ANAL_OP_TYPE_MOD :	1857:1:43048:43071	5181627	6	True				
ANR	5181666	Identifier	R_ANAL_OP_TYPE_MOD		5181627	0					
ANR	5181667	Label	case R_ANAL_OP_TYPE_LENGTH :	1858:1:43074:43100	5181627	7	True				
ANR	5181668	Identifier	R_ANAL_OP_TYPE_LENGTH		5181627	0					
ANR	5181669	ReturnStatement	return pal -> math ;	1859:2:43104:43120	5181627	8	True				
ANR	5181670	PtrMemberAccess	pal -> math		5181627	0					
ANR	5181671	Identifier	pal		5181627	0					
ANR	5181672	Identifier	math		5181627	1					
ANR	5181673	Label	case R_ANAL_OP_TYPE_AND :	1860:1:43123:43146	5181627	9	True				
ANR	5181674	Identifier	R_ANAL_OP_TYPE_AND		5181627	0					
ANR	5181675	Label	case R_ANAL_OP_TYPE_OR :	1861:1:43149:43171	5181627	10	True				
ANR	5181676	Identifier	R_ANAL_OP_TYPE_OR		5181627	0					
ANR	5181677	Label	case R_ANAL_OP_TYPE_XOR :	1862:1:43174:43197	5181627	11	True				
ANR	5181678	Identifier	R_ANAL_OP_TYPE_XOR		5181627	0					
ANR	5181679	Label	case R_ANAL_OP_TYPE_NOT :	1863:1:43200:43223	5181627	12	True				
ANR	5181680	Identifier	R_ANAL_OP_TYPE_NOT		5181627	0					
ANR	5181681	Label	case R_ANAL_OP_TYPE_SHL :	1864:1:43226:43249	5181627	13	True				
ANR	5181682	Identifier	R_ANAL_OP_TYPE_SHL		5181627	0					
ANR	5181683	Label	case R_ANAL_OP_TYPE_SAL :	1865:1:43252:43275	5181627	14	True				
ANR	5181684	Identifier	R_ANAL_OP_TYPE_SAL		5181627	0					
ANR	5181685	Label	case R_ANAL_OP_TYPE_SAR :	1866:1:43278:43301	5181627	15	True				
ANR	5181686	Identifier	R_ANAL_OP_TYPE_SAR		5181627	0					
ANR	5181687	Label	case R_ANAL_OP_TYPE_SHR :	1867:1:43304:43327	5181627	16	True				
ANR	5181688	Identifier	R_ANAL_OP_TYPE_SHR		5181627	0					
ANR	5181689	Label	case R_ANAL_OP_TYPE_ROL :	1868:1:43330:43353	5181627	17	True				
ANR	5181690	Identifier	R_ANAL_OP_TYPE_ROL		5181627	0					
ANR	5181691	Label	case R_ANAL_OP_TYPE_ROR :	1869:1:43356:43379	5181627	18	True				
ANR	5181692	Identifier	R_ANAL_OP_TYPE_ROR		5181627	0					
ANR	5181693	Label	case R_ANAL_OP_TYPE_CPL :	1870:1:43382:43405	5181627	19	True				
ANR	5181694	Identifier	R_ANAL_OP_TYPE_CPL		5181627	0					
ANR	5181695	ReturnStatement	return pal -> bin ;	1871:2:43409:43424	5181627	20	True				
ANR	5181696	PtrMemberAccess	pal -> bin		5181627	0					
ANR	5181697	Identifier	pal		5181627	0					
ANR	5181698	Identifier	bin		5181627	1					
ANR	5181699	Label	case R_ANAL_OP_TYPE_IO :	1872:1:43427:43449	5181627	21	True				
ANR	5181700	Identifier	R_ANAL_OP_TYPE_IO		5181627	0					
ANR	5181701	ReturnStatement	return pal -> swi ;	1873:2:43453:43468	5181627	22	True				
ANR	5181702	PtrMemberAccess	pal -> swi		5181627	0					
ANR	5181703	Identifier	pal		5181627	0					
ANR	5181704	Identifier	swi		5181627	1					
ANR	5181705	Label	case R_ANAL_OP_TYPE_JMP :	1874:1:43471:43494	5181627	23	True				
ANR	5181706	Identifier	R_ANAL_OP_TYPE_JMP		5181627	0					
ANR	5181707	Label	case R_ANAL_OP_TYPE_UJMP :	1875:1:43497:43521	5181627	24	True				
ANR	5181708	Identifier	R_ANAL_OP_TYPE_UJMP		5181627	0					
ANR	5181709	ReturnStatement	return pal -> ujmp ;	1876:2:43525:43541	5181627	25	True				
ANR	5181710	PtrMemberAccess	pal -> ujmp		5181627	0					
ANR	5181711	Identifier	pal		5181627	0					
ANR	5181712	Identifier	ujmp		5181627	1					
ANR	5181713	Label	case R_ANAL_OP_TYPE_IJMP :	1877:1:43544:43568	5181627	26	True				
ANR	5181714	Identifier	R_ANAL_OP_TYPE_IJMP		5181627	0					
ANR	5181715	Label	case R_ANAL_OP_TYPE_RJMP :	1878:1:43571:43595	5181627	27	True				
ANR	5181716	Identifier	R_ANAL_OP_TYPE_RJMP		5181627	0					
ANR	5181717	Label	case R_ANAL_OP_TYPE_IRJMP :	1879:1:43598:43623	5181627	28	True				
ANR	5181718	Identifier	R_ANAL_OP_TYPE_IRJMP		5181627	0					
ANR	5181719	Label	case R_ANAL_OP_TYPE_MJMP :	1880:1:43626:43650	5181627	29	True				
ANR	5181720	Identifier	R_ANAL_OP_TYPE_MJMP		5181627	0					
ANR	5181721	ReturnStatement	return pal -> jmp ;	1881:2:43654:43669	5181627	30	True				
ANR	5181722	PtrMemberAccess	pal -> jmp		5181627	0					
ANR	5181723	Identifier	pal		5181627	0					
ANR	5181724	Identifier	jmp		5181627	1					
ANR	5181725	Label	case R_ANAL_OP_TYPE_CJMP :	1882:1:43672:43696	5181627	31	True				
ANR	5181726	Identifier	R_ANAL_OP_TYPE_CJMP		5181627	0					
ANR	5181727	Label	case R_ANAL_OP_TYPE_UCJMP :	1883:1:43699:43724	5181627	32	True				
ANR	5181728	Identifier	R_ANAL_OP_TYPE_UCJMP		5181627	0					
ANR	5181729	Label	case R_ANAL_OP_TYPE_SWITCH :	1884:1:43727:43753	5181627	33	True				
ANR	5181730	Identifier	R_ANAL_OP_TYPE_SWITCH		5181627	0					
ANR	5181731	ReturnStatement	return pal -> cjmp ;	1885:2:43757:43773	5181627	34	True				
ANR	5181732	PtrMemberAccess	pal -> cjmp		5181627	0					
ANR	5181733	Identifier	pal		5181627	0					
ANR	5181734	Identifier	cjmp		5181627	1					
ANR	5181735	Label	case R_ANAL_OP_TYPE_CMP :	1886:1:43776:43799	5181627	35	True				
ANR	5181736	Identifier	R_ANAL_OP_TYPE_CMP		5181627	0					
ANR	5181737	Label	case R_ANAL_OP_TYPE_ACMP :	1887:1:43802:43826	5181627	36	True				
ANR	5181738	Identifier	R_ANAL_OP_TYPE_ACMP		5181627	0					
ANR	5181739	ReturnStatement	return pal -> cmp ;	1888:2:43830:43845	5181627	37	True				
ANR	5181740	PtrMemberAccess	pal -> cmp		5181627	0					
ANR	5181741	Identifier	pal		5181627	0					
ANR	5181742	Identifier	cmp		5181627	1					
ANR	5181743	Label	case R_ANAL_OP_TYPE_UCALL :	1889:1:43848:43873	5181627	38	True				
ANR	5181744	Identifier	R_ANAL_OP_TYPE_UCALL		5181627	0					
ANR	5181745	ReturnStatement	return pal -> ucall ;	1890:2:43877:43894	5181627	39	True				
ANR	5181746	PtrMemberAccess	pal -> ucall		5181627	0					
ANR	5181747	Identifier	pal		5181627	0					
ANR	5181748	Identifier	ucall		5181627	1					
ANR	5181749	Label	case R_ANAL_OP_TYPE_ICALL :	1891:1:43897:43922	5181627	40	True				
ANR	5181750	Identifier	R_ANAL_OP_TYPE_ICALL		5181627	0					
ANR	5181751	Label	case R_ANAL_OP_TYPE_RCALL :	1892:1:43925:43950	5181627	41	True				
ANR	5181752	Identifier	R_ANAL_OP_TYPE_RCALL		5181627	0					
ANR	5181753	Label	case R_ANAL_OP_TYPE_IRCALL :	1893:1:43953:43979	5181627	42	True				
ANR	5181754	Identifier	R_ANAL_OP_TYPE_IRCALL		5181627	0					
ANR	5181755	Label	case R_ANAL_OP_TYPE_UCCALL :	1894:1:43982:44008	5181627	43	True				
ANR	5181756	Identifier	R_ANAL_OP_TYPE_UCCALL		5181627	0					
ANR	5181757	Label	case R_ANAL_OP_TYPE_CALL :	1895:1:44011:44035	5181627	44	True				
ANR	5181758	Identifier	R_ANAL_OP_TYPE_CALL		5181627	0					
ANR	5181759	Label	case R_ANAL_OP_TYPE_CCALL :	1896:1:44038:44063	5181627	45	True				
ANR	5181760	Identifier	R_ANAL_OP_TYPE_CCALL		5181627	0					
ANR	5181761	ReturnStatement	return pal -> call ;	1897:2:44067:44083	5181627	46	True				
ANR	5181762	PtrMemberAccess	pal -> call		5181627	0					
ANR	5181763	Identifier	pal		5181627	0					
ANR	5181764	Identifier	call		5181627	1					
ANR	5181765	Label	case R_ANAL_OP_TYPE_NEW :	1898:1:44086:44109	5181627	47	True				
ANR	5181766	Identifier	R_ANAL_OP_TYPE_NEW		5181627	0					
ANR	5181767	Label	case R_ANAL_OP_TYPE_SWI :	1899:1:44112:44135	5181627	48	True				
ANR	5181768	Identifier	R_ANAL_OP_TYPE_SWI		5181627	0					
ANR	5181769	ReturnStatement	return pal -> swi ;	1900:2:44139:44154	5181627	49	True				
ANR	5181770	PtrMemberAccess	pal -> swi		5181627	0					
ANR	5181771	Identifier	pal		5181627	0					
ANR	5181772	Identifier	swi		5181627	1					
ANR	5181773	Label	case R_ANAL_OP_TYPE_ILL :	1901:1:44157:44180	5181627	50	True				
ANR	5181774	Identifier	R_ANAL_OP_TYPE_ILL		5181627	0					
ANR	5181775	Label	case R_ANAL_OP_TYPE_TRAP :	1902:1:44183:44207	5181627	51	True				
ANR	5181776	Identifier	R_ANAL_OP_TYPE_TRAP		5181627	0					
ANR	5181777	ReturnStatement	return pal -> trap ;	1903:2:44211:44227	5181627	52	True				
ANR	5181778	PtrMemberAccess	pal -> trap		5181627	0					
ANR	5181779	Identifier	pal		5181627	0					
ANR	5181780	Identifier	trap		5181627	1					
ANR	5181781	Label	case R_ANAL_OP_TYPE_CRET :	1904:1:44230:44254	5181627	53	True				
ANR	5181782	Identifier	R_ANAL_OP_TYPE_CRET		5181627	0					
ANR	5181783	Label	case R_ANAL_OP_TYPE_RET :	1905:1:44257:44280	5181627	54	True				
ANR	5181784	Identifier	R_ANAL_OP_TYPE_RET		5181627	0					
ANR	5181785	ReturnStatement	return pal -> ret ;	1906:2:44284:44299	5181627	55	True				
ANR	5181786	PtrMemberAccess	pal -> ret		5181627	0					
ANR	5181787	Identifier	pal		5181627	0					
ANR	5181788	Identifier	ret		5181627	1					
ANR	5181789	Label	case R_ANAL_OP_TYPE_CAST :	1907:1:44302:44326	5181627	56	True				
ANR	5181790	Identifier	R_ANAL_OP_TYPE_CAST		5181627	0					
ANR	5181791	Label	case R_ANAL_OP_TYPE_MOV :	1908:1:44329:44352	5181627	57	True				
ANR	5181792	Identifier	R_ANAL_OP_TYPE_MOV		5181627	0					
ANR	5181793	Label	case R_ANAL_OP_TYPE_LEA :	1909:1:44355:44378	5181627	58	True				
ANR	5181794	Identifier	R_ANAL_OP_TYPE_LEA		5181627	0					
ANR	5181795	Label	case R_ANAL_OP_TYPE_CMOV :	1910:1:44381:44405	5181627	59	True				
ANR	5181796	Identifier	R_ANAL_OP_TYPE_CMOV		5181627	0					
ANR	5181797	ReturnStatement	return pal -> mov ;	1911:2:44438:44453	5181627	60	True				
ANR	5181798	PtrMemberAccess	pal -> mov		5181627	0					
ANR	5181799	Identifier	pal		5181627	0					
ANR	5181800	Identifier	mov		5181627	1					
ANR	5181801	Label	case R_ANAL_OP_TYPE_PUSH :	1912:1:44456:44480	5181627	61	True				
ANR	5181802	Identifier	R_ANAL_OP_TYPE_PUSH		5181627	0					
ANR	5181803	Label	case R_ANAL_OP_TYPE_UPUSH :	1913:1:44483:44508	5181627	62	True				
ANR	5181804	Identifier	R_ANAL_OP_TYPE_UPUSH		5181627	0					
ANR	5181805	Label	case R_ANAL_OP_TYPE_RPUSH :	1914:1:44511:44536	5181627	63	True				
ANR	5181806	Identifier	R_ANAL_OP_TYPE_RPUSH		5181627	0					
ANR	5181807	Label	case R_ANAL_OP_TYPE_LOAD :	1915:1:44539:44563	5181627	64	True				
ANR	5181808	Identifier	R_ANAL_OP_TYPE_LOAD		5181627	0					
ANR	5181809	ReturnStatement	return pal -> push ;	1916:2:44567:44583	5181627	65	True				
ANR	5181810	PtrMemberAccess	pal -> push		5181627	0					
ANR	5181811	Identifier	pal		5181627	0					
ANR	5181812	Identifier	push		5181627	1					
ANR	5181813	Label	case R_ANAL_OP_TYPE_POP :	1917:1:44586:44609	5181627	66	True				
ANR	5181814	Identifier	R_ANAL_OP_TYPE_POP		5181627	0					
ANR	5181815	Label	case R_ANAL_OP_TYPE_STORE :	1918:1:44612:44637	5181627	67	True				
ANR	5181816	Identifier	R_ANAL_OP_TYPE_STORE		5181627	0					
ANR	5181817	ReturnStatement	return pal -> pop ;	1919:2:44641:44656	5181627	68	True				
ANR	5181818	PtrMemberAccess	pal -> pop		5181627	0					
ANR	5181819	Identifier	pal		5181627	0					
ANR	5181820	Identifier	pop		5181627	1					
ANR	5181821	Label	case R_ANAL_OP_TYPE_CRYPTO :	1920:1:44659:44685	5181627	69	True				
ANR	5181822	Identifier	R_ANAL_OP_TYPE_CRYPTO		5181627	0					
ANR	5181823	ReturnStatement	return pal -> crypto ;	1921:2:44689:44707	5181627	70	True				
ANR	5181824	PtrMemberAccess	pal -> crypto		5181627	0					
ANR	5181825	Identifier	pal		5181627	0					
ANR	5181826	Identifier	crypto		5181627	1					
ANR	5181827	Label	case R_ANAL_OP_TYPE_NULL :	1922:1:44710:44734	5181627	71	True				
ANR	5181828	Identifier	R_ANAL_OP_TYPE_NULL		5181627	0					
ANR	5181829	ReturnStatement	return pal -> other ;	1923:2:44738:44755	5181627	72	True				
ANR	5181830	PtrMemberAccess	pal -> other		5181627	0					
ANR	5181831	Identifier	pal		5181627	0					
ANR	5181832	Identifier	other		5181627	1					
ANR	5181833	Label	case R_ANAL_OP_TYPE_UNK :	1924:1:44758:44781	5181627	73	True				
ANR	5181834	Identifier	R_ANAL_OP_TYPE_UNK		5181627	0					
ANR	5181835	Label	default :	1925:1:44784:44791	5181627	74	True				
ANR	5181836	Identifier	default		5181627	0					
ANR	5181837	ReturnStatement	return pal -> invalid ;	1926:2:44795:44814	5181627	75	True				
ANR	5181838	PtrMemberAccess	pal -> invalid		5181627	0					
ANR	5181839	Identifier	pal		5181627	0					
ANR	5181840	Identifier	invalid		5181627	1					
ANR	5181841	ReturnType	const char *		5181627	1					
ANR	5181842	Identifier	r_print_color_op_type		5181627	2					
ANR	5181843	ParameterList	"RPrint * p , ut32 anal_type"		5181627	3					
ANR	5181844	Parameter	RPrint * p	1848:40:42771:42779	5181627	0	True				
ANR	5181845	ParameterType	RPrint *		5181627	0					
ANR	5181846	Identifier	p		5181627	1					
ANR	5181847	Parameter	ut32 anal_type	1848:51:42782:42795	5181627	1	True				
ANR	5181848	ParameterType	ut32		5181627	0					
ANR	5181849	Identifier	anal_type		5181627	1					
ANR	5181850	CFGEntryNode	ENTRY		5181627		True				
ANR	5181851	CFGExitNode	EXIT		5181627		True				
ANR	5181852	Symbol	R_ANAL_OP_TYPE_MASK		5181627						
ANR	5181853	Symbol	* pal		5181627						
ANR	5181854	Symbol	pal -> push		5181627						
ANR	5181855	Symbol	pal -> cjmp		5181627						
ANR	5181856	Symbol	pal -> invalid		5181627						
ANR	5181857	Symbol	pal -> ret		5181627						
ANR	5181858	Symbol	& p -> cons -> context -> pal		5181627						
ANR	5181859	Symbol	pal -> trap		5181627						
ANR	5181860	Symbol	pal -> mov		5181627						
ANR	5181861	Symbol	pal -> crypto		5181627						
ANR	5181862	Symbol	* p -> cons		5181627						
ANR	5181863	Symbol	pal		5181627						
ANR	5181864	Symbol	pal -> jmp		5181627						
ANR	5181865	Symbol	* * p		5181627						
ANR	5181866	Symbol	p -> cons		5181627						
ANR	5181867	Symbol	pal -> nop		5181627						
ANR	5181868	Symbol	pal -> pop		5181627						
ANR	5181869	Symbol	pal -> swi		5181627						
ANR	5181870	Symbol	pal -> bin		5181627						
ANR	5181871	Symbol	pal -> cmp		5181627						
ANR	5181872	Symbol	pal -> ujmp		5181627						
ANR	5181873	Symbol	pal -> other		5181627						
ANR	5181874	Symbol	anal_type		5181627						
ANR	5181875	Symbol	p		5181627						
ANR	5181876	Symbol	pal -> ucall		5181627						
ANR	5181877	Symbol	pal -> math		5181627						
ANR	5181878	Symbol	pal -> call		5181627						
ANR	5181879	Symbol	* p		5181627						
ANR	5181880	Symbol	p -> cons -> context		5181627						
ANR	5181881	DeclStmt									
ANR	5181882	Decl							char	char [ COLORIZE_BUFSIZE ]	o
ANR	5181883	Function	issymbol	1934:0:44938:45218							
ANR	5181884	FunctionDef	issymbol (char c)		5181883	0					
ANR	5181885	CompoundStatement		1934:29:44967:45218	5181883	0					
ANR	5181886	SwitchStatement	switch ( c )		5181883	0					
ANR	5181887	Condition	c	1935:9:44978:44978	5181883	0	True				
ANR	5181888	Identifier	c		5181883	0					
ANR	5181889	CompoundStatement		2:12:13:13	5181883	1					
ANR	5181890	Label	case '+' :	1936:1:44984:44992	5181883	0	True				
ANR	5181891	Label	case '-' :	1937:1:44995:45003	5181883	1	True				
ANR	5181892	Label	case '>' :	1939:1:45043:45051	5181883	2	True				
ANR	5181893	Label	case '<' :	1940:1:45054:45062	5181883	3	True				
ANR	5181894	Label	case '(' :	1941:1:45065:45073	5181883	4	True				
ANR	5181895	Label	case ')' :	1942:1:45076:45084	5181883	5	True				
ANR	5181896	Label	case '*' :	1943:1:45087:45095	5181883	6	True				
ANR	5181897	Label	case '%' :	1944:1:45098:45106	5181883	7	True				
ANR	5181898	Label	case ']' :	1945:1:45109:45117	5181883	8	True				
ANR	5181899	Label	case '[' :	1946:1:45120:45128	5181883	9	True				
ANR	5181900	Label	"case ',' :"	1947:1:45131:45139	5181883	10	True				
ANR	5181901	Label	case ' ' :	1948:1:45142:45150	5181883	11	True				
ANR	5181902	Label	case '{' :	1949:1:45153:45161	5181883	12	True				
ANR	5181903	Label	case '}' :	1950:1:45164:45172	5181883	13	True				
ANR	5181904	ReturnStatement	return true ;	1951:2:45176:45187	5181883	14	True				
ANR	5181905	Identifier	true		5181883	0					
ANR	5181906	Label	default :	1952:1:45190:45197	5181883	15	True				
ANR	5181907	Identifier	default		5181883	0					
ANR	5181908	ReturnStatement	return false ;	1953:2:45201:45213	5181883	16	True				
ANR	5181909	Identifier	false		5181883	0					
ANR	5181910	ReturnType	static bool		5181883	1					
ANR	5181911	Identifier	issymbol		5181883	2					
ANR	5181912	ParameterList	char c		5181883	3					
ANR	5181913	Parameter	char c	1934:21:44959:44964	5181883	0	True				
ANR	5181914	ParameterType	char		5181883	0					
ANR	5181915	Identifier	c		5181883	1					
ANR	5181916	CFGEntryNode	ENTRY		5181883		True				
ANR	5181917	CFGExitNode	EXIT		5181883		True				
ANR	5181918	Symbol	c		5181883						
ANR	5181919	Symbol	true		5181883						
ANR	5181920	Symbol	false		5181883						
ANR	5181921	Function	check_arg_name	1957:0:45221:45564							
ANR	5181922	FunctionDef	"check_arg_name (RPrint * print , char * p , ut64 func_addr)"		5181921	0					
ANR	5181923	CompoundStatement		1957:68:45289:45564	5181921	0					
ANR	5181924	IfStatement	if ( func_addr && print -> exists_var )		5181921	0					
ANR	5181925	Condition	func_addr && print -> exists_var	1958:5:45296:45325	5181921	0	True				
ANR	5181926	AndExpression	func_addr && print -> exists_var		5181921	0		&&			
ANR	5181927	Identifier	func_addr		5181921	0					
ANR	5181928	PtrMemberAccess	print -> exists_var		5181921	1					
ANR	5181929	Identifier	print		5181921	0					
ANR	5181930	Identifier	exists_var		5181921	1					
ANR	5181931	CompoundStatement		9:2:176:226	5181921	1					
ANR	5181932	IdentifierDeclStatement	int z ;	1959:2:45332:45337	5181921	0	True				
ANR	5181933	IdentifierDecl	z		5181921	0					
ANR	5181934	IdentifierDeclType	int		5181921	0					
ANR	5181935	Identifier	z		5181921	1					
ANR	5181936	ForStatement	for ( z = 0 ; p [ z ] && ( IS_ALPHA ( p [ z ] ) || IS_DIGIT ( p [ z ] ) || p [ z ] == '_' ) ; z ++ )		5181921	1					
ANR	5181937	ForInit	z = 0 ;	1960:7:45346:45351	5181921	0	True				
ANR	5181938	AssignmentExpression	z = 0		5181921	0		=			
ANR	5181939	Identifier	z		5181921	0					
ANR	5181940	PrimaryExpression	0		5181921	1					
ANR	5181941	Condition	p [ z ] && ( IS_ALPHA ( p [ z ] ) || IS_DIGIT ( p [ z ] ) || p [ z ] == '_' )	1960:14:45353:45411	5181921	1	True				
ANR	5181942	AndExpression	p [ z ] && ( IS_ALPHA ( p [ z ] ) || IS_DIGIT ( p [ z ] ) || p [ z ] == '_' )		5181921	0		&&			
ANR	5181943	ArrayIndexing	p [ z ]		5181921	0					
ANR	5181944	Identifier	p		5181921	0					
ANR	5181945	Identifier	z		5181921	1					
ANR	5181946	OrExpression	IS_ALPHA ( p [ z ] ) || IS_DIGIT ( p [ z ] ) || p [ z ] == '_'		5181921	1		||			
ANR	5181947	CallExpression	IS_ALPHA ( p [ z ] )		5181921	0					
ANR	5181948	Callee	IS_ALPHA		5181921	0					
ANR	5181949	Identifier	IS_ALPHA		5181921	0					
ANR	5181950	ArgumentList	p [ z ]		5181921	1					
ANR	5181951	Argument	p [ z ]		5181921	0					
ANR	5181952	ArrayIndexing	p [ z ]		5181921	0					
ANR	5181953	Identifier	p		5181921	0					
ANR	5181954	Identifier	z		5181921	1					
ANR	5181955	OrExpression	IS_DIGIT ( p [ z ] ) || p [ z ] == '_'		5181921	1		||			
ANR	5181956	CallExpression	IS_DIGIT ( p [ z ] )		5181921	0					
ANR	5181957	Callee	IS_DIGIT		5181921	0					
ANR	5181958	Identifier	IS_DIGIT		5181921	0					
ANR	5181959	ArgumentList	p [ z ]		5181921	1					
ANR	5181960	Argument	p [ z ]		5181921	0					
ANR	5181961	ArrayIndexing	p [ z ]		5181921	0					
ANR	5181962	Identifier	p		5181921	0					
ANR	5181963	Identifier	z		5181921	1					
ANR	5181964	EqualityExpression	p [ z ] == '_'		5181921	1		==			
ANR	5181965	ArrayIndexing	p [ z ]		5181921	0					
ANR	5181966	Identifier	p		5181921	0					
ANR	5181967	Identifier	z		5181921	1					
ANR	5181968	PrimaryExpression	'_'		5181921	1					
ANR	5181969	PostIncDecOperationExpression	z ++	1960:75:45414:45416	5181921	2	True				
ANR	5181970	Identifier	z		5181921	0					
ANR	5181971	IncDec	++		5181921	1					
ANR	5181972	CompoundStatement		4:80:129:129	5181921	3					
ANR	5181973	ExpressionStatement		1961:3:45424:45424	5181921	0	True				
ANR	5181974	IdentifierDeclStatement	char tmp = p [ z ] ;	1963:2:45432:45447	5181921	2	True				
ANR	5181975	IdentifierDecl	tmp = p [ z ]		5181921	0					
ANR	5181976	IdentifierDeclType	char		5181921	0					
ANR	5181977	Identifier	tmp		5181921	1					
ANR	5181978	AssignmentExpression	tmp = p [ z ]		5181921	2		=			
ANR	5181979	Identifier	tmp		5181921	0					
ANR	5181980	ArrayIndexing	p [ z ]		5181921	1					
ANR	5181981	Identifier	p		5181921	0					
ANR	5181982	Identifier	z		5181921	1					
ANR	5181983	ExpressionStatement	p [ z ] = '\\0'	1964:2:45451:45462	5181921	3	True				
ANR	5181984	AssignmentExpression	p [ z ] = '\\0'		5181921	0		=			
ANR	5181985	ArrayIndexing	p [ z ]		5181921	0					
ANR	5181986	Identifier	p		5181921	0					
ANR	5181987	Identifier	z		5181921	1					
ANR	5181988	PrimaryExpression	'\\0'		5181921	1					
ANR	5181989	IdentifierDeclStatement	"bool ret = print -> exists_var ( print , func_addr , p ) ;"	1965:2:45466:45516	5181921	4	True				
ANR	5181990	IdentifierDecl	"ret = print -> exists_var ( print , func_addr , p )"		5181921	0					
ANR	5181991	IdentifierDeclType	bool		5181921	0					
ANR	5181992	Identifier	ret		5181921	1					
ANR	5181993	AssignmentExpression	"ret = print -> exists_var ( print , func_addr , p )"		5181921	2		=			
ANR	5181994	Identifier	ret		5181921	0					
ANR	5181995	CallExpression	"print -> exists_var ( print , func_addr , p )"		5181921	1					
ANR	5181996	Callee	print -> exists_var		5181921	0					
ANR	5181997	PtrMemberAccess	print -> exists_var		5181921	0					
ANR	5181998	Identifier	print		5181921	0					
ANR	5181999	Identifier	exists_var		5181921	1					
ANR	5182000	ArgumentList	print		5181921	1					
ANR	5182001	Argument	print		5181921	0					
ANR	5182002	Identifier	print		5181921	0					
ANR	5182003	Argument	func_addr		5181921	1					
ANR	5182004	Identifier	func_addr		5181921	0					
ANR	5182005	Argument	p		5181921	2					
ANR	5182006	Identifier	p		5181921	0					
ANR	5182007	ExpressionStatement	p [ z ] = tmp	1966:2:45520:45530	5181921	5	True				
ANR	5182008	AssignmentExpression	p [ z ] = tmp		5181921	0		=			
ANR	5182009	ArrayIndexing	p [ z ]		5181921	0					
ANR	5182010	Identifier	p		5181921	0					
ANR	5182011	Identifier	z		5181921	1					
ANR	5182012	Identifier	tmp		5181921	1					
ANR	5182013	ReturnStatement	return ret ;	1967:2:45534:45544	5181921	6	True				
ANR	5182014	Identifier	ret		5181921	0					
ANR	5182015	ReturnStatement	return false ;	1969:1:45550:45562	5181921	1	True				
ANR	5182016	Identifier	false		5181921	0					
ANR	5182017	ReturnType	static bool		5181921	1					
ANR	5182018	Identifier	check_arg_name		5181921	2					
ANR	5182019	ParameterList	"RPrint * print , char * p , ut64 func_addr"		5181921	3					
ANR	5182020	Parameter	RPrint * print	1957:28:45249:45261	5181921	0	True				
ANR	5182021	ParameterType	RPrint *		5181921	0					
ANR	5182022	Identifier	print		5181921	1					
ANR	5182023	Parameter	char * p	1957:43:45264:45270	5181921	1	True				
ANR	5182024	ParameterType	char *		5181921	0					
ANR	5182025	Identifier	p		5181921	1					
ANR	5182026	Parameter	ut64 func_addr	1957:52:45273:45286	5181921	2	True				
ANR	5182027	ParameterType	ut64		5181921	0					
ANR	5182028	Identifier	func_addr		5181921	1					
ANR	5182029	CFGEntryNode	ENTRY		5181921		True				
ANR	5182030	CFGExitNode	EXIT		5181921		True				
ANR	5182031	Symbol	ret		5181921						
ANR	5182032	Symbol	* z		5181921						
ANR	5182033	Symbol	IS_ALPHA		5181921						
ANR	5182034	Symbol	false		5181921						
ANR	5182035	Symbol	print -> exists_var		5181921						
ANR	5182036	Symbol	IS_DIGIT		5181921						
ANR	5182037	Symbol	p		5181921						
ANR	5182038	Symbol	print		5181921						
ANR	5182039	Symbol	tmp		5181921						
ANR	5182040	Symbol	* print		5181921						
ANR	5182041	Symbol	z		5181921						
ANR	5182042	Symbol	* p		5181921						
ANR	5182043	Symbol	func_addr		5181921						
ANR	5182044	Function	ishexprefix	1972:0:45567:45640							
ANR	5182045	FunctionDef	ishexprefix (char * p)		5182044	0					
ANR	5182046	CompoundStatement		1972:33:45600:45640	5182044	0					
ANR	5182047	ReturnStatement	return ( p [ 0 ] == '0' && p [ 1 ] == 'x' ) ;	1973:1:45603:45638	5182044	0	True				
ANR	5182048	AndExpression	p [ 0 ] == '0' && p [ 1 ] == 'x'		5182044	0		&&			
ANR	5182049	EqualityExpression	p [ 0 ] == '0'		5182044	0		==			
ANR	5182050	ArrayIndexing	p [ 0 ]		5182044	0					
ANR	5182051	Identifier	p		5182044	0					
ANR	5182052	PrimaryExpression	0		5182044	1					
ANR	5182053	PrimaryExpression	'0'		5182044	1					
ANR	5182054	EqualityExpression	p [ 1 ] == 'x'		5182044	1		==			
ANR	5182055	ArrayIndexing	p [ 1 ]		5182044	0					
ANR	5182056	Identifier	p		5182044	0					
ANR	5182057	PrimaryExpression	1		5182044	1					
ANR	5182058	PrimaryExpression	'x'		5182044	1					
ANR	5182059	ReturnType	static bool		5182044	1					
ANR	5182060	Identifier	ishexprefix		5182044	2					
ANR	5182061	ParameterList	char * p		5182044	3					
ANR	5182062	Parameter	char * p	1972:24:45591:45597	5182044	0	True				
ANR	5182063	ParameterType	char *		5182044	0					
ANR	5182064	Identifier	p		5182044	1					
ANR	5182065	CFGEntryNode	ENTRY		5182044		True				
ANR	5182066	CFGExitNode	EXIT		5182044		True				
ANR	5182067	Symbol	p		5182044						
ANR	5182068	Symbol	* p		5182044						
ANR	5182069	Function	r_print_colorize_opcode	1976:0:45643:49969							
ANR	5182070	FunctionDef	"r_print_colorize_opcode (RPrint * print , char * p , const char * reg , const char * num , bool partial_reset , ut64 func_addr)"		5182069	0					
ANR	5182071	CompoundStatement		1976:130:45773:49969	5182069	0					
ANR	5182072	IdentifierDeclStatement	"int i , j , k , is_mod , is_float = 0 , is_arg = 0 ;"	1977:1:45776:45821	5182069	0	True				
ANR	5182073	IdentifierDecl	i		5182069	0					
ANR	5182074	IdentifierDeclType	int		5182069	0					
ANR	5182075	Identifier	i		5182069	1					
ANR	5182076	IdentifierDecl	j		5182069	1					
ANR	5182077	IdentifierDeclType	int		5182069	0					
ANR	5182078	Identifier	j		5182069	1					
ANR	5182079	IdentifierDecl	k		5182069	2					
ANR	5182080	IdentifierDeclType	int		5182069	0					
ANR	5182081	Identifier	k		5182069	1					
ANR	5182082	IdentifierDecl	is_mod		5182069	3					
ANR	5182083	IdentifierDeclType	int		5182069	0					
ANR	5182084	Identifier	is_mod		5182069	1					
ANR	5182085	IdentifierDecl	is_float = 0		5182069	4					
ANR	5182086	IdentifierDeclType	int		5182069	0					
ANR	5182087	Identifier	is_float		5182069	1					
ANR	5182088	AssignmentExpression	is_float = 0		5182069	2		=			
ANR	5182089	Identifier	is_float		5182069	0					
ANR	5182090	PrimaryExpression	0		5182069	1					
ANR	5182091	IdentifierDecl	is_arg = 0		5182069	5					
ANR	5182092	IdentifierDeclType	int		5182069	0					
ANR	5182093	Identifier	is_arg		5182069	1					
ANR	5182094	AssignmentExpression	is_arg = 0		5182069	2		=			
ANR	5182095	Identifier	is_arg		5182069	0					
ANR	5182096	PrimaryExpression	0		5182069	1					
ANR	5182097	IdentifierDeclStatement	char * reset = partial_reset ? Color_RESET_NOBG : Color_RESET ;	1978:1:45824:45884	5182069	1	True				
ANR	5182098	IdentifierDecl	* reset = partial_reset ? Color_RESET_NOBG : Color_RESET		5182069	0					
ANR	5182099	IdentifierDeclType	char *		5182069	0					
ANR	5182100	Identifier	reset		5182069	1					
ANR	5182101	AssignmentExpression	* reset = partial_reset ? Color_RESET_NOBG : Color_RESET		5182069	2		=			
ANR	5182102	Identifier	reset		5182069	0					
ANR	5182103	ConditionalExpression	partial_reset ? Color_RESET_NOBG : Color_RESET		5182069	1					
ANR	5182104	Condition	partial_reset		5182069	0					
ANR	5182105	Identifier	partial_reset		5182069	0					
ANR	5182106	Identifier	Color_RESET_NOBG		5182069	1					
ANR	5182107	Identifier	Color_RESET		5182069	2					
ANR	5182108	IdentifierDeclStatement	ut32 c_reset = strlen ( reset ) ;	1979:1:45887:45916	5182069	2	True				
ANR	5182109	IdentifierDecl	c_reset = strlen ( reset )		5182069	0					
ANR	5182110	IdentifierDeclType	ut32		5182069	0					
ANR	5182111	Identifier	c_reset		5182069	1					
ANR	5182112	AssignmentExpression	c_reset = strlen ( reset )		5182069	2		=			
ANR	5182113	Identifier	c_reset		5182069	0					
ANR	5182114	CallExpression	strlen ( reset )		5182069	1					
ANR	5182115	Callee	strlen		5182069	0					
ANR	5182116	Identifier	strlen		5182069	0					
ANR	5182117	ArgumentList	reset		5182069	1					
ANR	5182118	Argument	reset		5182069	0					
ANR	5182119	Identifier	reset		5182069	0					
ANR	5182120	IdentifierDeclStatement	int is_jmp = p && ( * p == 'j' || ( ( * p == 'c' ) && ( p [ 1 ] == 'a' ) ) ) ? 1 : 0 ;	1980:1:45919:45988	5182069	3	True				
ANR	5182121	IdentifierDecl	is_jmp = p && ( * p == 'j' || ( ( * p == 'c' ) && ( p [ 1 ] == 'a' ) ) ) ? 1 : 0		5182069	0					
ANR	5182122	IdentifierDeclType	int		5182069	0					
ANR	5182123	Identifier	is_jmp		5182069	1					
ANR	5182124	AssignmentExpression	is_jmp = p && ( * p == 'j' || ( ( * p == 'c' ) && ( p [ 1 ] == 'a' ) ) ) ? 1 : 0		5182069	2		=			
ANR	5182125	Identifier	is_jmp		5182069	0					
ANR	5182126	ConditionalExpression	p && ( * p == 'j' || ( ( * p == 'c' ) && ( p [ 1 ] == 'a' ) ) ) ? 1 : 0		5182069	1					
ANR	5182127	Condition	p && ( * p == 'j' || ( ( * p == 'c' ) && ( p [ 1 ] == 'a' ) ) )		5182069	0					
ANR	5182128	AndExpression	p && ( * p == 'j' || ( ( * p == 'c' ) && ( p [ 1 ] == 'a' ) ) )		5182069	0		&&			
ANR	5182129	Identifier	p		5182069	0					
ANR	5182130	OrExpression	* p == 'j' || ( ( * p == 'c' ) && ( p [ 1 ] == 'a' ) )		5182069	1		||			
ANR	5182131	EqualityExpression	* p == 'j'		5182069	0		==			
ANR	5182132	UnaryOperationExpression	* p		5182069	0					
ANR	5182133	UnaryOperator	*		5182069	0					
ANR	5182134	Identifier	p		5182069	1					
ANR	5182135	PrimaryExpression	'j'		5182069	1					
ANR	5182136	AndExpression	( * p == 'c' ) && ( p [ 1 ] == 'a' )		5182069	1		&&			
ANR	5182137	EqualityExpression	* p == 'c'		5182069	0		==			
ANR	5182138	UnaryOperationExpression	* p		5182069	0					
ANR	5182139	UnaryOperator	*		5182069	0					
ANR	5182140	Identifier	p		5182069	1					
ANR	5182141	PrimaryExpression	'c'		5182069	1					
ANR	5182142	EqualityExpression	p [ 1 ] == 'a'		5182069	1		==			
ANR	5182143	ArrayIndexing	p [ 1 ]		5182069	0					
ANR	5182144	Identifier	p		5182069	0					
ANR	5182145	PrimaryExpression	1		5182069	1					
ANR	5182146	PrimaryExpression	'a'		5182069	1					
ANR	5182147	PrimaryExpression	1		5182069	1					
ANR	5182148	PrimaryExpression	0		5182069	2					
ANR	5182149	IdentifierDeclStatement	ut32 opcode_sz = p && * p ? strlen ( p ) * 10 + 1 : 0 ;	1981:1:45991:46039	5182069	4	True				
ANR	5182150	IdentifierDecl	opcode_sz = p && * p ? strlen ( p ) * 10 + 1 : 0		5182069	0					
ANR	5182151	IdentifierDeclType	ut32		5182069	0					
ANR	5182152	Identifier	opcode_sz		5182069	1					
ANR	5182153	AssignmentExpression	opcode_sz = p && * p ? strlen ( p ) * 10 + 1 : 0		5182069	2		=			
ANR	5182154	Identifier	opcode_sz		5182069	0					
ANR	5182155	ConditionalExpression	p && * p ? strlen ( p ) * 10 + 1 : 0		5182069	1					
ANR	5182156	Condition	p && * p		5182069	0					
ANR	5182157	AndExpression	p && * p		5182069	0		&&			
ANR	5182158	Identifier	p		5182069	0					
ANR	5182159	UnaryOperationExpression	* p		5182069	1					
ANR	5182160	UnaryOperator	*		5182069	0					
ANR	5182161	Identifier	p		5182069	1					
ANR	5182162	AdditiveExpression	strlen ( p ) * 10 + 1		5182069	1		+			
ANR	5182163	MultiplicativeExpression	strlen ( p ) * 10		5182069	0		*			
ANR	5182164	CallExpression	strlen ( p )		5182069	0					
ANR	5182165	Callee	strlen		5182069	0					
ANR	5182166	Identifier	strlen		5182069	0					
ANR	5182167	ArgumentList	p		5182069	1					
ANR	5182168	Argument	p		5182069	0					
ANR	5182169	Identifier	p		5182069	0					
ANR	5182170	PrimaryExpression	10		5182069	1					
ANR	5182171	PrimaryExpression	1		5182069	1					
ANR	5182172	PrimaryExpression	0		5182069	2					
ANR	5182173	IdentifierDeclStatement	char previous = '\\0' ;	1982:1:46042:46062	5182069	5	True				
ANR	5182174	IdentifierDecl	previous = '\\0'		5182069	0					
ANR	5182175	IdentifierDeclType	char		5182069	0					
ANR	5182176	Identifier	previous		5182069	1					
ANR	5182177	AssignmentExpression	previous = '\\0'		5182069	2		=			
ANR	5182178	Identifier	previous		5182069	0					
ANR	5182179	PrimaryExpression	'\\0'		5182069	1					
ANR	5182180	IdentifierDeclStatement	const char * color_flag = print -> cons -> context -> pal . flag ;	1983:1:46065:46120	5182069	6	True				
ANR	5182181	IdentifierDecl	* color_flag = print -> cons -> context -> pal . flag		5182069	0					
ANR	5182182	IdentifierDeclType	const char *		5182069	0					
ANR	5182183	Identifier	color_flag		5182069	1					
ANR	5182184	AssignmentExpression	* color_flag = print -> cons -> context -> pal . flag		5182069	2		=			
ANR	5182185	Identifier	color_flag		5182069	0					
ANR	5182186	MemberAccess	print -> cons -> context -> pal . flag		5182069	1					
ANR	5182187	PtrMemberAccess	print -> cons -> context -> pal		5182069	0					
ANR	5182188	PtrMemberAccess	print -> cons -> context		5182069	0					
ANR	5182189	PtrMemberAccess	print -> cons		5182069	0					
ANR	5182190	Identifier	print		5182069	0					
ANR	5182191	Identifier	cons		5182069	1					
ANR	5182192	Identifier	context		5182069	1					
ANR	5182193	Identifier	pal		5182069	1					
ANR	5182194	Identifier	flag		5182069	1					
ANR	5182195	IfStatement	if ( ! p || ! * p )		5182069	7					
ANR	5182196	Condition	! p || ! * p	1985:5:46128:46136	5182069	0	True				
ANR	5182197	OrExpression	! p || ! * p		5182069	0		||			
ANR	5182198	UnaryOperationExpression	! p		5182069	0					
ANR	5182199	UnaryOperator	!		5182069	0					
ANR	5182200	Identifier	p		5182069	1					
ANR	5182201	UnaryOperationExpression	! * p		5182069	1					
ANR	5182202	UnaryOperator	!		5182069	0					
ANR	5182203	UnaryOperationExpression	* p		5182069	1					
ANR	5182204	UnaryOperator	*		5182069	0					
ANR	5182205	Identifier	p		5182069	1					
ANR	5182206	CompoundStatement		10:16:365:365	5182069	1					
ANR	5182207	ReturnStatement	return NULL ;	1986:2:46143:46154	5182069	0	True				
ANR	5182208	Identifier	NULL		5182069	0					
ANR	5182209	IfStatement	if ( is_jmp )		5182069	8					
ANR	5182210	Condition	is_jmp	1988:5:46164:46169	5182069	0	True				
ANR	5182211	Identifier	is_jmp		5182069	0					
ANR	5182212	CompoundStatement		13:13:398:398	5182069	1					
ANR	5182213	ReturnStatement	return strdup ( p ) ;	1989:2:46176:46193	5182069	0	True				
ANR	5182214	CallExpression	strdup ( p )		5182069	0					
ANR	5182215	Callee	strdup		5182069	0					
ANR	5182216	Identifier	strdup		5182069	0					
ANR	5182217	ArgumentList	p		5182069	1					
ANR	5182218	Argument	p		5182069	0					
ANR	5182219	Identifier	p		5182069	0					
ANR	5182220	ExpressionStatement	r_str_trim_head_tail ( p )	1991:1:46199:46223	5182069	9	True				
ANR	5182221	CallExpression	r_str_trim_head_tail ( p )		5182069	0					
ANR	5182222	Callee	r_str_trim_head_tail		5182069	0					
ANR	5182223	Identifier	r_str_trim_head_tail		5182069	0					
ANR	5182224	ArgumentList	p		5182069	1					
ANR	5182225	Argument	p		5182069	0					
ANR	5182226	Identifier	p		5182069	0					
ANR	5182227	IfStatement	if ( opcode_sz > COLORIZE_BUFSIZE )		5182069	10					
ANR	5182228	Condition	opcode_sz > COLORIZE_BUFSIZE	1992:5:46230:46257	5182069	0	True				
ANR	5182229	RelationalExpression	opcode_sz > COLORIZE_BUFSIZE		5182069	0		>			
ANR	5182230	Identifier	opcode_sz		5182069	0					
ANR	5182231	Identifier	COLORIZE_BUFSIZE		5182069	1					
ANR	5182232	CompoundStatement		17:35:486:486	5182069	1					
ANR	5182233	ReturnStatement	return strdup ( p ) ;	1994:2:46308:46325	5182069	0	True				
ANR	5182234	CallExpression	strdup ( p )		5182069	0					
ANR	5182235	Callee	strdup		5182069	0					
ANR	5182236	Identifier	strdup		5182069	0					
ANR	5182237	ArgumentList	p		5182069	1					
ANR	5182238	Argument	p		5182069	0					
ANR	5182239	Identifier	p		5182069	0					
ANR	5182240	ExpressionStatement	"memset ( o , 0 , COLORIZE_BUFSIZE )"	1997:1:46332:46363	5182069	11	True				
ANR	5182241	CallExpression	"memset ( o , 0 , COLORIZE_BUFSIZE )"		5182069	0					
ANR	5182242	Callee	memset		5182069	0					
ANR	5182243	Identifier	memset		5182069	0					
ANR	5182244	ArgumentList	o		5182069	1					
ANR	5182245	Argument	o		5182069	0					
ANR	5182246	Identifier	o		5182069	0					
ANR	5182247	Argument	0		5182069	1					
ANR	5182248	PrimaryExpression	0		5182069	0					
ANR	5182249	Argument	COLORIZE_BUFSIZE		5182069	2					
ANR	5182250	Identifier	COLORIZE_BUFSIZE		5182069	0					
ANR	5182251	ForStatement	"for ( i = j = 0 ; p [ i ] ; i ++ , j ++ )"		5182069	12					
ANR	5182252	ForInit	i = j = 0 ;	1998:6:46371:46380	5182069	0	True				
ANR	5182253	AssignmentExpression	i = j = 0		5182069	0		=			
ANR	5182254	Identifier	i		5182069	0					
ANR	5182255	AssignmentExpression	j = 0		5182069	1		=			
ANR	5182256	Identifier	j		5182069	0					
ANR	5182257	PrimaryExpression	0		5182069	1					
ANR	5182258	Condition	p [ i ]	1998:17:46382:46385	5182069	1	True				
ANR	5182259	ArrayIndexing	p [ i ]		5182069	0					
ANR	5182260	Identifier	p		5182069	0					
ANR	5182261	Identifier	i		5182069	1					
ANR	5182262	Expression	"i ++ , j ++"	1998:23:46388:46395	5182069	2	True				
ANR	5182263	PostIncDecOperationExpression	i ++		5182069	0					
ANR	5182264	Identifier	i		5182069	0					
ANR	5182265	IncDec	++		5182069	1					
ANR	5182266	PostIncDecOperationExpression	j ++		5182069	1					
ANR	5182267	Identifier	j		5182069	0					
ANR	5182268	IncDec	++		5182069	1					
ANR	5182269	CompoundStatement		23:33:624:624	5182069	3					
ANR	5182270	IfStatement	if ( ( ishexprefix ( & p [ i ] ) && previous != ':' ) || ( isdigit ( ( ut8 ) p [ i ] ) && issymbol ( previous ) ) )		5182069	0					
ANR	5182271	Condition	( ishexprefix ( & p [ i ] ) && previous != ':' ) || ( isdigit ( ( ut8 ) p [ i ] ) && issymbol ( previous ) )	2000:6:46431:46527	5182069	0	True				
ANR	5182272	OrExpression	( ishexprefix ( & p [ i ] ) && previous != ':' ) || ( isdigit ( ( ut8 ) p [ i ] ) && issymbol ( previous ) )		5182069	0		||			
ANR	5182273	AndExpression	ishexprefix ( & p [ i ] ) && previous != ':'		5182069	0		&&			
ANR	5182274	CallExpression	ishexprefix ( & p [ i ] )		5182069	0					
ANR	5182275	Callee	ishexprefix		5182069	0					
ANR	5182276	Identifier	ishexprefix		5182069	0					
ANR	5182277	ArgumentList	& p [ i ]		5182069	1					
ANR	5182278	Argument	& p [ i ]		5182069	0					
ANR	5182279	UnaryOperationExpression	& p [ i ]		5182069	0					
ANR	5182280	UnaryOperator	&		5182069	0					
ANR	5182281	ArrayIndexing	p [ i ]		5182069	1					
ANR	5182282	Identifier	p		5182069	0					
ANR	5182283	Identifier	i		5182069	1					
ANR	5182284	EqualityExpression	previous != ':'		5182069	1		!=			
ANR	5182285	Identifier	previous		5182069	0					
ANR	5182286	PrimaryExpression	':'		5182069	1					
ANR	5182287	AndExpression	isdigit ( ( ut8 ) p [ i ] ) && issymbol ( previous )		5182069	1		&&			
ANR	5182288	CallExpression	isdigit ( ( ut8 ) p [ i ] )		5182069	0					
ANR	5182289	Callee	isdigit		5182069	0					
ANR	5182290	Identifier	isdigit		5182069	0					
ANR	5182291	ArgumentList	( ut8 ) p [ i ]		5182069	1					
ANR	5182292	Argument	( ut8 ) p [ i ]		5182069	0					
ANR	5182293	CastExpression	( ut8 ) p [ i ]		5182069	0					
ANR	5182294	CastTarget	ut8		5182069	0					
ANR	5182295	ArrayIndexing	p [ i ]		5182069	1					
ANR	5182296	Identifier	p		5182069	0					
ANR	5182297	Identifier	i		5182069	1					
ANR	5182298	CallExpression	issymbol ( previous )		5182069	1					
ANR	5182299	Callee	issymbol		5182069	0					
ANR	5182300	Identifier	issymbol		5182069	0					
ANR	5182301	ArgumentList	previous		5182069	1					
ANR	5182302	Argument	previous		5182069	0					
ANR	5182303	Identifier	previous		5182069	0					
ANR	5182304	CompoundStatement		33:3:935:959	5182069	1					
ANR	5182305	IdentifierDeclStatement	const char * num2 = num ;	2002:3:46535:46557	5182069	0	True				
ANR	5182306	IdentifierDecl	* num2 = num		5182069	0					
ANR	5182307	IdentifierDeclType	const char *		5182069	0					
ANR	5182308	Identifier	num2		5182069	1					
ANR	5182309	AssignmentExpression	* num2 = num		5182069	2		=			
ANR	5182310	Identifier	num		5182069	0					
ANR	5182311	Identifier	num		5182069	1					
ANR	5182312	IdentifierDeclStatement	"ut64 n = r_num_get ( NULL , p + i ) ;"	2003:3:46562:46594	5182069	1	True				
ANR	5182313	IdentifierDecl	"n = r_num_get ( NULL , p + i )"		5182069	0					
ANR	5182314	IdentifierDeclType	ut64		5182069	0					
ANR	5182315	Identifier	n		5182069	1					
ANR	5182316	AssignmentExpression	"n = r_num_get ( NULL , p + i )"		5182069	2		=			
ANR	5182317	Identifier	n		5182069	0					
ANR	5182318	CallExpression	"r_num_get ( NULL , p + i )"		5182069	1					
ANR	5182319	Callee	r_num_get		5182069	0					
ANR	5182320	Identifier	r_num_get		5182069	0					
ANR	5182321	ArgumentList	NULL		5182069	1					
ANR	5182322	Argument	NULL		5182069	0					
ANR	5182323	Identifier	NULL		5182069	0					
ANR	5182324	Argument	p + i		5182069	1					
ANR	5182325	AdditiveExpression	p + i		5182069	0		+			
ANR	5182326	Identifier	p		5182069	0					
ANR	5182327	Identifier	i		5182069	1					
ANR	5182328	IdentifierDeclStatement	"const char * name = print -> offname ( print -> user , n ) ? color_flag : NULL ;"	2004:3:46599:46667	5182069	2	True				
ANR	5182329	IdentifierDecl	"* name = print -> offname ( print -> user , n ) ? color_flag : NULL"		5182069	0					
ANR	5182330	IdentifierDeclType	const char *		5182069	0					
ANR	5182331	Identifier	name		5182069	1					
ANR	5182332	AssignmentExpression	"* name = print -> offname ( print -> user , n ) ? color_flag : NULL"		5182069	2		=			
ANR	5182333	Identifier	name		5182069	0					
ANR	5182334	ConditionalExpression	"print -> offname ( print -> user , n ) ? color_flag : NULL"		5182069	1					
ANR	5182335	Condition	"print -> offname ( print -> user , n )"		5182069	0					
ANR	5182336	CallExpression	"print -> offname ( print -> user , n )"		5182069	0					
ANR	5182337	Callee	print -> offname		5182069	0					
ANR	5182338	PtrMemberAccess	print -> offname		5182069	0					
ANR	5182339	Identifier	print		5182069	0					
ANR	5182340	Identifier	offname		5182069	1					
ANR	5182341	ArgumentList	print -> user		5182069	1					
ANR	5182342	Argument	print -> user		5182069	0					
ANR	5182343	PtrMemberAccess	print -> user		5182069	0					
ANR	5182344	Identifier	print		5182069	0					
ANR	5182345	Identifier	user		5182069	1					
ANR	5182346	Argument	n		5182069	1					
ANR	5182347	Identifier	n		5182069	0					
ANR	5182348	Identifier	color_flag		5182069	1					
ANR	5182349	Identifier	NULL		5182069	2					
ANR	5182350	IfStatement	if ( name )		5182069	3					
ANR	5182351	Condition	name	2005:7:46676:46679	5182069	0	True				
ANR	5182352	Identifier	name		5182069	0					
ANR	5182353	CompoundStatement		30:13:908:908	5182069	1					
ANR	5182354	ExpressionStatement	num2 = name	2006:4:46688:46699	5182069	0	True				
ANR	5182355	AssignmentExpression	num2 = name		5182069	0		=			
ANR	5182356	Identifier	num2		5182069	0					
ANR	5182357	Identifier	name		5182069	1					
ANR	5182358	IdentifierDeclStatement	int nlen = strlen ( num2 ) ;	2008:3:46709:46733	5182069	4	True				
ANR	5182359	IdentifierDecl	nlen = strlen ( num2 )		5182069	0					
ANR	5182360	IdentifierDeclType	int		5182069	0					
ANR	5182361	Identifier	nlen		5182069	1					
ANR	5182362	AssignmentExpression	nlen = strlen ( num2 )		5182069	2		=			
ANR	5182363	Identifier	nlen		5182069	0					
ANR	5182364	CallExpression	strlen ( num2 )		5182069	1					
ANR	5182365	Callee	strlen		5182069	0					
ANR	5182366	Identifier	strlen		5182069	0					
ANR	5182367	ArgumentList	num2		5182069	1					
ANR	5182368	Argument	num2		5182069	0					
ANR	5182369	Identifier	num2		5182069	0					
ANR	5182370	IfStatement	if ( nlen + j >= sizeof ( o ) )		5182069	5					
ANR	5182371	Condition	nlen + j >= sizeof ( o )	2009:7:46742:46763	5182069	0	True				
ANR	5182372	RelationalExpression	nlen + j >= sizeof ( o )		5182069	0		>=			
ANR	5182373	AdditiveExpression	nlen + j		5182069	0		+			
ANR	5182374	Identifier	nlen		5182069	0					
ANR	5182375	Identifier	j		5182069	1					
ANR	5182376	SizeofExpression	sizeof ( o )		5182069	1					
ANR	5182377	Sizeof	sizeof		5182069	0					
ANR	5182378	SizeofOperand	o		5182069	1					
ANR	5182379	CompoundStatement		34:31:992:992	5182069	1					
ANR	5182380	ExpressionStatement	"eprintf ( ""Colorize buffer is too small\\n"" )"	2010:4:46772:46814	5182069	0	True				
ANR	5182381	CallExpression	"eprintf ( ""Colorize buffer is too small\\n"" )"		5182069	0					
ANR	5182382	Callee	eprintf		5182069	0					
ANR	5182383	Identifier	eprintf		5182069	0					
ANR	5182384	ArgumentList	"""Colorize buffer is too small\\n"""		5182069	1					
ANR	5182385	Argument	"""Colorize buffer is too small\\n"""		5182069	0					
ANR	5182386	PrimaryExpression	"""Colorize buffer is too small\\n"""		5182069	0					
ANR	5182387	BreakStatement	break ;	2011:4:46820:46825	5182069	1	True				
ANR	5182388	ExpressionStatement	"memcpy ( o + j , num2 , nlen + 1 )"	2013:3:46835:46865	5182069	6	True				
ANR	5182389	CallExpression	"memcpy ( o + j , num2 , nlen + 1 )"		5182069	0					
ANR	5182390	Callee	memcpy		5182069	0					
ANR	5182391	Identifier	memcpy		5182069	0					
ANR	5182392	ArgumentList	o + j		5182069	1					
ANR	5182393	Argument	o + j		5182069	0					
ANR	5182394	AdditiveExpression	o + j		5182069	0		+			
ANR	5182395	Identifier	o		5182069	0					
ANR	5182396	Identifier	j		5182069	1					
ANR	5182397	Argument	num2		5182069	1					
ANR	5182398	Identifier	num2		5182069	0					
ANR	5182399	Argument	nlen + 1		5182069	2					
ANR	5182400	AdditiveExpression	nlen + 1		5182069	0		+			
ANR	5182401	Identifier	nlen		5182069	0					
ANR	5182402	PrimaryExpression	1		5182069	1					
ANR	5182403	ExpressionStatement	j += nlen	2014:3:46870:46879	5182069	7	True				
ANR	5182404	AssignmentExpression	j += nlen		5182069	0		+=			
ANR	5182405	Identifier	j		5182069	0					
ANR	5182406	Identifier	nlen		5182069	1					
ANR	5182407	ExpressionStatement	previous = p [ i ]	2016:2:46887:46902	5182069	1	True				
ANR	5182408	AssignmentExpression	previous = p [ i ]		5182069	0		=			
ANR	5182409	Identifier	previous		5182069	0					
ANR	5182410	ArrayIndexing	p [ i ]		5182069	1					
ANR	5182411	Identifier	p		5182069	0					
ANR	5182412	Identifier	i		5182069	1					
ANR	5182413	IfStatement	if ( j + 100 >= COLORIZE_BUFSIZE )		5182069	2					
ANR	5182414	Condition	j + 100 >= COLORIZE_BUFSIZE	2017:6:46910:46936	5182069	0	True				
ANR	5182415	RelationalExpression	j + 100 >= COLORIZE_BUFSIZE		5182069	0		>=			
ANR	5182416	AdditiveExpression	j + 100		5182069	0		+			
ANR	5182417	Identifier	j		5182069	0					
ANR	5182418	PrimaryExpression	100		5182069	1					
ANR	5182419	Identifier	COLORIZE_BUFSIZE		5182069	1					
ANR	5182420	CompoundStatement		42:35:1165:1165	5182069	1					
ANR	5182421	ExpressionStatement	"eprintf ( ""r_print_colorize_opcode(): buffer overflow!\\n"" )"	2018:3:46944:47001	5182069	0	True				
ANR	5182422	CallExpression	"eprintf ( ""r_print_colorize_opcode(): buffer overflow!\\n"" )"		5182069	0					
ANR	5182423	Callee	eprintf		5182069	0					
ANR	5182424	Identifier	eprintf		5182069	0					
ANR	5182425	ArgumentList	"""r_print_colorize_opcode(): buffer overflow!\\n"""		5182069	1					
ANR	5182426	Argument	"""r_print_colorize_opcode(): buffer overflow!\\n"""		5182069	0					
ANR	5182427	PrimaryExpression	"""r_print_colorize_opcode(): buffer overflow!\\n"""		5182069	0					
ANR	5182428	ReturnStatement	return strdup ( p ) ;	2019:3:47006:47023	5182069	1	True				
ANR	5182429	CallExpression	strdup ( p )		5182069	0					
ANR	5182430	Callee	strdup		5182069	0					
ANR	5182431	Identifier	strdup		5182069	0					
ANR	5182432	ArgumentList	p		5182069	1					
ANR	5182433	Argument	p		5182069	0					
ANR	5182434	Identifier	p		5182069	0					
ANR	5182435	SwitchStatement	switch ( p [ i ] )		5182069	3					
ANR	5182436	Condition	p [ i ]	2021:10:47039:47042	5182069	0	True				
ANR	5182437	ArrayIndexing	p [ i ]		5182069	0					
ANR	5182438	Identifier	p		5182069	0					
ANR	5182439	Identifier	i		5182069	1					
ANR	5182440	CompoundStatement		46:16:1271:1271	5182069	1					
ANR	5182441	Label	case 0x1b :	2024:2:47134:47143	5182069	0	True				
ANR	5182442	Statement	define	2025:1:47146:47151	5182069	1	True				
ANR	5182443	Statement	STRIP_ANSI	2025:8:47153:47162	5182069	2	True				
ANR	5182444	Statement	1	2025:19:47164:47164	5182069	3	True				
ANR	5182445	ForStatement	for ( ++ i ; p [ i ] && p [ i ] != 'm' ; i ++ )		5182069	4					
ANR	5182446	ForInit	++ i ;	2028:8:47213:47216	5182069	0	True				
ANR	5182447	UnaryExpression	++ i		5182069	0					
ANR	5182448	IncDec	++		5182069	0					
ANR	5182449	Identifier	i		5182069	1					
ANR	5182450	Condition	p [ i ] && p [ i ] != 'm'	2028:13:47218:47236	5182069	1	True				
ANR	5182451	AndExpression	p [ i ] && p [ i ] != 'm'		5182069	0		&&			
ANR	5182452	ArrayIndexing	p [ i ]		5182069	0					
ANR	5182453	Identifier	p		5182069	0					
ANR	5182454	Identifier	i		5182069	1					
ANR	5182455	EqualityExpression	p [ i ] != 'm'		5182069	1		!=			
ANR	5182456	ArrayIndexing	p [ i ]		5182069	0					
ANR	5182457	Identifier	p		5182069	0					
ANR	5182458	Identifier	i		5182069	1					
ANR	5182459	PrimaryExpression	'm'		5182069	1					
ANR	5182460	PostIncDecOperationExpression	i ++	2028:34:47239:47241	5182069	2	True				
ANR	5182461	Identifier	i		5182069	0					
ANR	5182462	IncDec	++		5182069	1					
ANR	5182463	CompoundStatement		53:39:1470:1470	5182069	3					
ANR	5182464	ExpressionStatement	o [ j ] = p [ i ]	2029:4:47250:47261	5182069	0	True				
ANR	5182465	AssignmentExpression	o [ j ] = p [ i ]		5182069	0		=			
ANR	5182466	ArrayIndexing	o [ j ]		5182069	0					
ANR	5182467	Identifier	o		5182069	0					
ANR	5182468	Identifier	j		5182069	1					
ANR	5182469	ArrayIndexing	p [ i ]		5182069	1					
ANR	5182470	Identifier	p		5182069	0					
ANR	5182471	Identifier	i		5182069	1					
ANR	5182472	ExpressionStatement	j --	2031:3:47271:47274	5182069	5	True				
ANR	5182473	PostIncDecOperationExpression	j --		5182069	0					
ANR	5182474	Identifier	j		5182069	0					
ANR	5182475	IncDec	--		5182069	1					
ANR	5182476	ContinueStatement	continue ;	2032:3:47279:47287	5182069	6	True				
ANR	5182477	Label	case '+' :	2040:2:47410:47418	5182069	7	True				
ANR	5182478	Label	case '-' :	2041:2:47422:47430	5182069	8	True				
ANR	5182479	Label	case '/' :	2042:2:47434:47442	5182069	9	True				
ANR	5182480	Label	case '>' :	2043:2:47446:47454	5182069	10	True				
ANR	5182481	Label	case '<' :	2044:2:47458:47466	5182069	11	True				
ANR	5182482	Label	case '(' :	2045:2:47470:47478	5182069	12	True				
ANR	5182483	Label	case ')' :	2046:2:47482:47490	5182069	13	True				
ANR	5182484	Label	case '*' :	2047:2:47494:47502	5182069	14	True				
ANR	5182485	Label	case '%' :	2048:2:47506:47514	5182069	15	True				
ANR	5182486	Label	case ']' :	2049:2:47518:47526	5182069	16	True				
ANR	5182487	Label	case '[' :	2050:2:47530:47538	5182069	17	True				
ANR	5182488	Label	"case ',' :"	2051:2:47542:47550	5182069	18	True				
ANR	5182489	IfStatement	if ( is_float )		5182069	19					
ANR	5182490	Condition	is_float	2053:7:47590:47597	5182069	0	True				
ANR	5182491	Identifier	is_float		5182069	0					
ANR	5182492	CompoundStatement		78:17:1826:1826	5182069	1					
ANR	5182493	ExpressionStatement	is_float = 0	2055:4:47650:47662	5182069	0	True				
ANR	5182494	AssignmentExpression	is_float = 0		5182069	0		=			
ANR	5182495	Identifier	is_float		5182069	0					
ANR	5182496	PrimaryExpression	0		5182069	1					
ANR	5182497	ElseStatement	else		5182069	0					
ANR	5182498	IfStatement	if ( is_arg )		5182069	0					
ANR	5182499	Condition	is_arg	2056:14:47678:47683	5182069	0	True				
ANR	5182500	Identifier	is_arg		5182069	0					
ANR	5182501	CompoundStatement		87:4:2061:2122	5182069	1					
ANR	5182502	IfStatement	if ( c_reset + j + 10 >= COLORIZE_BUFSIZE )		5182069	0					
ANR	5182503	Condition	c_reset + j + 10 >= COLORIZE_BUFSIZE	2057:8:47696:47731	5182069	0	True				
ANR	5182504	RelationalExpression	c_reset + j + 10 >= COLORIZE_BUFSIZE		5182069	0		>=			
ANR	5182505	AdditiveExpression	c_reset + j + 10		5182069	0		+			
ANR	5182506	Identifier	c_reset		5182069	0					
ANR	5182507	AdditiveExpression	j + 10		5182069	1		+			
ANR	5182508	Identifier	j		5182069	0					
ANR	5182509	PrimaryExpression	10		5182069	1					
ANR	5182510	Identifier	COLORIZE_BUFSIZE		5182069	1					
ANR	5182511	CompoundStatement		82:46:1960:1960	5182069	1					
ANR	5182512	ExpressionStatement	"eprintf ( ""r_print_colorize_opcode(): buffer overflow!\\n"" )"	2058:5:47741:47798	5182069	0	True				
ANR	5182513	CallExpression	"eprintf ( ""r_print_colorize_opcode(): buffer overflow!\\n"" )"		5182069	0					
ANR	5182514	Callee	eprintf		5182069	0					
ANR	5182515	Identifier	eprintf		5182069	0					
ANR	5182516	ArgumentList	"""r_print_colorize_opcode(): buffer overflow!\\n"""		5182069	1					
ANR	5182517	Argument	"""r_print_colorize_opcode(): buffer overflow!\\n"""		5182069	0					
ANR	5182518	PrimaryExpression	"""r_print_colorize_opcode(): buffer overflow!\\n"""		5182069	0					
ANR	5182519	ReturnStatement	return strdup ( p ) ;	2059:5:47805:47822	5182069	1	True				
ANR	5182520	CallExpression	strdup ( p )		5182069	0					
ANR	5182521	Callee	strdup		5182069	0					
ANR	5182522	Identifier	strdup		5182069	0					
ANR	5182523	ArgumentList	p		5182069	1					
ANR	5182524	Argument	p		5182069	0					
ANR	5182525	Identifier	p		5182069	0					
ANR	5182526	IdentifierDeclStatement	"bool found_var = check_arg_name ( print , p + i + 1 , func_addr ) ;"	2062:4:47835:47896	5182069	1	True				
ANR	5182527	IdentifierDecl	"found_var = check_arg_name ( print , p + i + 1 , func_addr )"		5182069	0					
ANR	5182528	IdentifierDeclType	bool		5182069	0					
ANR	5182529	Identifier	found_var		5182069	1					
ANR	5182530	AssignmentExpression	"found_var = check_arg_name ( print , p + i + 1 , func_addr )"		5182069	2		=			
ANR	5182531	Identifier	found_var		5182069	0					
ANR	5182532	CallExpression	"check_arg_name ( print , p + i + 1 , func_addr )"		5182069	1					
ANR	5182533	Callee	check_arg_name		5182069	0					
ANR	5182534	Identifier	check_arg_name		5182069	0					
ANR	5182535	ArgumentList	print		5182069	1					
ANR	5182536	Argument	print		5182069	0					
ANR	5182537	Identifier	print		5182069	0					
ANR	5182538	Argument	p + i + 1		5182069	1					
ANR	5182539	AdditiveExpression	p + i + 1		5182069	0		+			
ANR	5182540	Identifier	p		5182069	0					
ANR	5182541	AdditiveExpression	i + 1		5182069	1		+			
ANR	5182542	Identifier	i		5182069	0					
ANR	5182543	PrimaryExpression	1		5182069	1					
ANR	5182544	Argument	func_addr		5182069	2					
ANR	5182545	Identifier	func_addr		5182069	0					
ANR	5182546	ExpressionStatement	"strcpy ( o + j , reset )"	2063:4:47902:47923	5182069	2	True				
ANR	5182547	CallExpression	"strcpy ( o + j , reset )"		5182069	0					
ANR	5182548	Callee	strcpy		5182069	0					
ANR	5182549	Identifier	strcpy		5182069	0					
ANR	5182550	ArgumentList	o + j		5182069	1					
ANR	5182551	Argument	o + j		5182069	0					
ANR	5182552	AdditiveExpression	o + j		5182069	0		+			
ANR	5182553	Identifier	o		5182069	0					
ANR	5182554	Identifier	j		5182069	1					
ANR	5182555	Argument	reset		5182069	1					
ANR	5182556	Identifier	reset		5182069	0					
ANR	5182557	ExpressionStatement	j += strlen ( reset )	2064:4:47929:47948	5182069	3	True				
ANR	5182558	AssignmentExpression	j += strlen ( reset )		5182069	0		+=			
ANR	5182559	Identifier	j		5182069	0					
ANR	5182560	CallExpression	strlen ( reset )		5182069	1					
ANR	5182561	Callee	strlen		5182069	0					
ANR	5182562	Identifier	strlen		5182069	0					
ANR	5182563	ArgumentList	reset		5182069	1					
ANR	5182564	Argument	reset		5182069	0					
ANR	5182565	Identifier	reset		5182069	0					
ANR	5182566	ExpressionStatement	o [ j ] = p [ i ]	2065:4:47954:47965	5182069	4	True				
ANR	5182567	AssignmentExpression	o [ j ] = p [ i ]		5182069	0		=			
ANR	5182568	ArrayIndexing	o [ j ]		5182069	0					
ANR	5182569	Identifier	o		5182069	0					
ANR	5182570	Identifier	j		5182069	1					
ANR	5182571	ArrayIndexing	p [ i ]		5182069	1					
ANR	5182572	Identifier	p		5182069	0					
ANR	5182573	Identifier	i		5182069	1					
ANR	5182574	IfStatement	if ( ! ( p [ i + 1 ] == '$' || ( ( p [ i + 1 ] > '0' ) && ( p [ i + 1 ] < '9' ) ) ) )		5182069	5					
ANR	5182575	Condition	! ( p [ i + 1 ] == '$' || ( ( p [ i + 1 ] > '0' ) && ( p [ i + 1 ] < '9' ) ) )	2066:8:47975:48028	5182069	0	True				
ANR	5182576	UnaryOperationExpression	! ( p [ i + 1 ] == '$' || ( ( p [ i + 1 ] > '0' ) && ( p [ i + 1 ] < '9' ) ) )		5182069	0					
ANR	5182577	UnaryOperator	!		5182069	0					
ANR	5182578	OrExpression	p [ i + 1 ] == '$' || ( ( p [ i + 1 ] > '0' ) && ( p [ i + 1 ] < '9' ) )		5182069	1		||			
ANR	5182579	EqualityExpression	p [ i + 1 ] == '$'		5182069	0		==			
ANR	5182580	ArrayIndexing	p [ i + 1 ]		5182069	0					
ANR	5182581	Identifier	p		5182069	0					
ANR	5182582	AdditiveExpression	i + 1		5182069	1		+			
ANR	5182583	Identifier	i		5182069	0					
ANR	5182584	PrimaryExpression	1		5182069	1					
ANR	5182585	PrimaryExpression	'$'		5182069	1					
ANR	5182586	AndExpression	( p [ i + 1 ] > '0' ) && ( p [ i + 1 ] < '9' )		5182069	1		&&			
ANR	5182587	RelationalExpression	p [ i + 1 ] > '0'		5182069	0		>			
ANR	5182588	ArrayIndexing	p [ i + 1 ]		5182069	0					
ANR	5182589	Identifier	p		5182069	0					
ANR	5182590	AdditiveExpression	i + 1		5182069	1		+			
ANR	5182591	Identifier	i		5182069	0					
ANR	5182592	PrimaryExpression	1		5182069	1					
ANR	5182593	PrimaryExpression	'0'		5182069	1					
ANR	5182594	RelationalExpression	p [ i + 1 ] < '9'		5182069	1		<			
ANR	5182595	ArrayIndexing	p [ i + 1 ]		5182069	0					
ANR	5182596	Identifier	p		5182069	0					
ANR	5182597	AdditiveExpression	i + 1		5182069	1		+			
ANR	5182598	Identifier	i		5182069	0					
ANR	5182599	PrimaryExpression	1		5182069	1					
ANR	5182600	PrimaryExpression	'9'		5182069	1					
ANR	5182601	CompoundStatement		93:5:2348:2379	5182069	1					
ANR	5182602	IdentifierDeclStatement	const char * color = found_var ? print -> cons -> context -> pal . func_var_type : reg ;	2067:5:48038:48115	5182069	0	True				
ANR	5182603	IdentifierDecl	* color = found_var ? print -> cons -> context -> pal . func_var_type : reg		5182069	0					
ANR	5182604	IdentifierDeclType	const char *		5182069	0					
ANR	5182605	Identifier	color		5182069	1					
ANR	5182606	AssignmentExpression	* color = found_var ? print -> cons -> context -> pal . func_var_type : reg		5182069	2		=			
ANR	5182607	Identifier	color		5182069	0					
ANR	5182608	ConditionalExpression	found_var ? print -> cons -> context -> pal . func_var_type : reg		5182069	1					
ANR	5182609	Condition	found_var		5182069	0					
ANR	5182610	Identifier	found_var		5182069	0					
ANR	5182611	MemberAccess	print -> cons -> context -> pal . func_var_type		5182069	1					
ANR	5182612	PtrMemberAccess	print -> cons -> context -> pal		5182069	0					
ANR	5182613	PtrMemberAccess	print -> cons -> context		5182069	0					
ANR	5182614	PtrMemberAccess	print -> cons		5182069	0					
ANR	5182615	Identifier	print		5182069	0					
ANR	5182616	Identifier	cons		5182069	1					
ANR	5182617	Identifier	context		5182069	1					
ANR	5182618	Identifier	pal		5182069	1					
ANR	5182619	Identifier	func_var_type		5182069	1					
ANR	5182620	Identifier	reg		5182069	2					
ANR	5182621	IdentifierDeclStatement	ut32 color_len = strlen ( color ) ;	2068:5:48122:48153	5182069	1	True				
ANR	5182622	IdentifierDecl	color_len = strlen ( color )		5182069	0					
ANR	5182623	IdentifierDeclType	ut32		5182069	0					
ANR	5182624	Identifier	color_len		5182069	1					
ANR	5182625	AssignmentExpression	color_len = strlen ( color )		5182069	2		=			
ANR	5182626	Identifier	color_len		5182069	0					
ANR	5182627	CallExpression	strlen ( color )		5182069	1					
ANR	5182628	Callee	strlen		5182069	0					
ANR	5182629	Identifier	strlen		5182069	0					
ANR	5182630	ArgumentList	color		5182069	1					
ANR	5182631	Argument	color		5182069	0					
ANR	5182632	Identifier	color		5182069	0					
ANR	5182633	IfStatement	if ( color_len + j + 10 >= COLORIZE_BUFSIZE )		5182069	2					
ANR	5182634	Condition	color_len + j + 10 >= COLORIZE_BUFSIZE	2069:9:48164:48201	5182069	0	True				
ANR	5182635	RelationalExpression	color_len + j + 10 >= COLORIZE_BUFSIZE		5182069	0		>=			
ANR	5182636	AdditiveExpression	color_len + j + 10		5182069	0		+			
ANR	5182637	Identifier	color_len		5182069	0					
ANR	5182638	AdditiveExpression	j + 10		5182069	1		+			
ANR	5182639	Identifier	j		5182069	0					
ANR	5182640	PrimaryExpression	10		5182069	1					
ANR	5182641	Identifier	COLORIZE_BUFSIZE		5182069	1					
ANR	5182642	CompoundStatement		94:49:2430:2430	5182069	1					
ANR	5182643	ExpressionStatement	"eprintf ( ""r_print_colorize_opcode(): buffer overflow!\\n"" )"	2070:6:48212:48269	5182069	0	True				
ANR	5182644	CallExpression	"eprintf ( ""r_print_colorize_opcode(): buffer overflow!\\n"" )"		5182069	0					
ANR	5182645	Callee	eprintf		5182069	0					
ANR	5182646	Identifier	eprintf		5182069	0					
ANR	5182647	ArgumentList	"""r_print_colorize_opcode(): buffer overflow!\\n"""		5182069	1					
ANR	5182648	Argument	"""r_print_colorize_opcode(): buffer overflow!\\n"""		5182069	0					
ANR	5182649	PrimaryExpression	"""r_print_colorize_opcode(): buffer overflow!\\n"""		5182069	0					
ANR	5182650	ReturnStatement	return strdup ( p ) ;	2071:6:48277:48294	5182069	1	True				
ANR	5182651	CallExpression	strdup ( p )		5182069	0					
ANR	5182652	Callee	strdup		5182069	0					
ANR	5182653	Identifier	strdup		5182069	0					
ANR	5182654	ArgumentList	p		5182069	1					
ANR	5182655	Argument	p		5182069	0					
ANR	5182656	Identifier	p		5182069	0					
ANR	5182657	ExpressionStatement	"strcpy ( o + j + 1 , color )"	2073:5:48308:48333	5182069	3	True				
ANR	5182658	CallExpression	"strcpy ( o + j + 1 , color )"		5182069	0					
ANR	5182659	Callee	strcpy		5182069	0					
ANR	5182660	Identifier	strcpy		5182069	0					
ANR	5182661	ArgumentList	o + j + 1		5182069	1					
ANR	5182662	Argument	o + j + 1		5182069	0					
ANR	5182663	AdditiveExpression	o + j + 1		5182069	0		+			
ANR	5182664	Identifier	o		5182069	0					
ANR	5182665	AdditiveExpression	j + 1		5182069	1		+			
ANR	5182666	Identifier	j		5182069	0					
ANR	5182667	PrimaryExpression	1		5182069	1					
ANR	5182668	Argument	color		5182069	1					
ANR	5182669	Identifier	color		5182069	0					
ANR	5182670	ExpressionStatement	j += strlen ( color )	2074:5:48340:48359	5182069	4	True				
ANR	5182671	AssignmentExpression	j += strlen ( color )		5182069	0		+=			
ANR	5182672	Identifier	j		5182069	0					
ANR	5182673	CallExpression	strlen ( color )		5182069	1					
ANR	5182674	Callee	strlen		5182069	0					
ANR	5182675	Identifier	strlen		5182069	0					
ANR	5182676	ArgumentList	color		5182069	1					
ANR	5182677	Argument	color		5182069	0					
ANR	5182678	Identifier	color		5182069	0					
ANR	5182679	ContinueStatement	continue ;	2076:4:48371:48379	5182069	6	True				
ANR	5182680	BreakStatement	break ;	2078:3:48389:48394	5182069	20	True				
ANR	5182681	Label	case ' ' :	2079:2:48398:48406	5182069	21	True				
ANR	5182682	ExpressionStatement	is_arg = 1	2080:3:48411:48421	5182069	22	True				
ANR	5182683	AssignmentExpression	is_arg = 1		5182069	0		=			
ANR	5182684	Identifier	is_arg		5182069	0					
ANR	5182685	PrimaryExpression	1		5182069	1					
ANR	5182686	ExpressionStatement	is_mod = 0	2082:3:48469:48479	5182069	23	True				
ANR	5182687	AssignmentExpression	is_mod = 0		5182069	0		=			
ANR	5182688	Identifier	is_mod		5182069	0					
ANR	5182689	PrimaryExpression	0		5182069	1					
ANR	5182690	ExpressionStatement	is_float = 0	2083:3:48484:48496	5182069	24	True				
ANR	5182691	AssignmentExpression	is_float = 0		5182069	0		=			
ANR	5182692	Identifier	is_float		5182069	0					
ANR	5182693	PrimaryExpression	0		5182069	1					
ANR	5182694	ForStatement	for ( k = i + 1 ; p [ k ] ; k ++ )		5182069	25					
ANR	5182695	ForInit	k = i + 1 ;	2084:8:48506:48515	5182069	0	True				
ANR	5182696	AssignmentExpression	k = i + 1		5182069	0		=			
ANR	5182697	Identifier	k		5182069	0					
ANR	5182698	AdditiveExpression	i + 1		5182069	1		+			
ANR	5182699	Identifier	i		5182069	0					
ANR	5182700	PrimaryExpression	1		5182069	1					
ANR	5182701	Condition	p [ k ]	2084:19:48517:48520	5182069	1	True				
ANR	5182702	ArrayIndexing	p [ k ]		5182069	0					
ANR	5182703	Identifier	p		5182069	0					
ANR	5182704	Identifier	k		5182069	1					
ANR	5182705	PostIncDecOperationExpression	k ++	2084:25:48523:48525	5182069	2	True				
ANR	5182706	Identifier	k		5182069	0					
ANR	5182707	IncDec	++		5182069	1					
ANR	5182708	CompoundStatement		109:30:2754:2754	5182069	3					
ANR	5182709	IfStatement	if ( p [ k ] == 'e' && p [ k + 1 ] == '+' )		5182069	0					
ANR	5182710	Condition	p [ k ] == 'e' && p [ k + 1 ] == '+'	2085:8:48538:48567	5182069	0	True				
ANR	5182711	AndExpression	p [ k ] == 'e' && p [ k + 1 ] == '+'		5182069	0		&&			
ANR	5182712	EqualityExpression	p [ k ] == 'e'		5182069	0		==			
ANR	5182713	ArrayIndexing	p [ k ]		5182069	0					
ANR	5182714	Identifier	p		5182069	0					
ANR	5182715	Identifier	k		5182069	1					
ANR	5182716	PrimaryExpression	'e'		5182069	1					
ANR	5182717	EqualityExpression	p [ k + 1 ] == '+'		5182069	1		==			
ANR	5182718	ArrayIndexing	p [ k + 1 ]		5182069	0					
ANR	5182719	Identifier	p		5182069	0					
ANR	5182720	AdditiveExpression	k + 1		5182069	1		+			
ANR	5182721	Identifier	k		5182069	0					
ANR	5182722	PrimaryExpression	1		5182069	1					
ANR	5182723	PrimaryExpression	'+'		5182069	1					
ANR	5182724	CompoundStatement		110:40:2796:2796	5182069	1					
ANR	5182725	ExpressionStatement	is_float = 1	2086:5:48577:48589	5182069	0	True				
ANR	5182726	AssignmentExpression	is_float = 1		5182069	0		=			
ANR	5182727	Identifier	is_float		5182069	0					
ANR	5182728	PrimaryExpression	1		5182069	1					
ANR	5182729	BreakStatement	break ;	2087:5:48596:48601	5182069	1	True				
ANR	5182730	IfStatement	if ( p [ k ] == ' ' )		5182069	1					
ANR	5182731	Condition	p [ k ] == ' '	2089:8:48617:48627	5182069	0	True				
ANR	5182732	EqualityExpression	p [ k ] == ' '		5182069	0		==			
ANR	5182733	ArrayIndexing	p [ k ]		5182069	0					
ANR	5182734	Identifier	p		5182069	0					
ANR	5182735	Identifier	k		5182069	1					
ANR	5182736	PrimaryExpression	' '		5182069	1					
ANR	5182737	CompoundStatement		114:21:2856:2856	5182069	1					
ANR	5182738	BreakStatement	break ;	2090:5:48637:48642	5182069	0	True				
ANR	5182739	IfStatement	"if ( p [ k ] == ',' )"		5182069	2					
ANR	5182740	Condition	"p [ k ] == ','"	2092:8:48658:48668	5182069	0	True				
ANR	5182741	EqualityExpression	"p [ k ] == ','"		5182069	0		==			
ANR	5182742	ArrayIndexing	p [ k ]		5182069	0					
ANR	5182743	Identifier	p		5182069	0					
ANR	5182744	Identifier	k		5182069	1					
ANR	5182745	PrimaryExpression	"','"		5182069	1					
ANR	5182746	CompoundStatement		117:21:2897:2897	5182069	1					
ANR	5182747	ExpressionStatement	is_mod = 1	2093:5:48678:48688	5182069	0	True				
ANR	5182748	AssignmentExpression	is_mod = 1		5182069	0		=			
ANR	5182749	Identifier	is_mod		5182069	0					
ANR	5182750	PrimaryExpression	1		5182069	1					
ANR	5182751	BreakStatement	break ;	2094:5:48695:48700	5182069	1	True				
ANR	5182752	IfStatement	if ( is_float )		5182069	26					
ANR	5182753	Condition	is_float	2097:7:48720:48727	5182069	0	True				
ANR	5182754	Identifier	is_float		5182069	0					
ANR	5182755	CompoundStatement		122:17:2956:2956	5182069	1					
ANR	5182756	ExpressionStatement	"strcpy ( o + j , num )"	2098:4:48736:48755	5182069	0	True				
ANR	5182757	CallExpression	"strcpy ( o + j , num )"		5182069	0					
ANR	5182758	Callee	strcpy		5182069	0					
ANR	5182759	Identifier	strcpy		5182069	0					
ANR	5182760	ArgumentList	o + j		5182069	1					
ANR	5182761	Argument	o + j		5182069	0					
ANR	5182762	AdditiveExpression	o + j		5182069	0		+			
ANR	5182763	Identifier	o		5182069	0					
ANR	5182764	Identifier	j		5182069	1					
ANR	5182765	Argument	num		5182069	1					
ANR	5182766	Identifier	num		5182069	0					
ANR	5182767	ExpressionStatement	j += strlen ( num )	2099:4:48761:48778	5182069	1	True				
ANR	5182768	AssignmentExpression	j += strlen ( num )		5182069	0		+=			
ANR	5182769	Identifier	j		5182069	0					
ANR	5182770	CallExpression	strlen ( num )		5182069	1					
ANR	5182771	Callee	strlen		5182069	0					
ANR	5182772	Identifier	strlen		5182069	0					
ANR	5182773	ArgumentList	num		5182069	1					
ANR	5182774	Argument	num		5182069	0					
ANR	5182775	Identifier	num		5182069	0					
ANR	5182776	IfStatement	if ( ! p [ k ] )		5182069	27					
ANR	5182777	Condition	! p [ k ]	2101:7:48792:48796	5182069	0	True				
ANR	5182778	UnaryOperationExpression	! p [ k ]		5182069	0					
ANR	5182779	UnaryOperator	!		5182069	0					
ANR	5182780	ArrayIndexing	p [ k ]		5182069	1					
ANR	5182781	Identifier	p		5182069	0					
ANR	5182782	Identifier	k		5182069	1					
ANR	5182783	CompoundStatement		126:14:3025:3025	5182069	1					
ANR	5182784	ExpressionStatement	is_mod = 1	2102:4:48805:48815	5182069	0	True				
ANR	5182785	AssignmentExpression	is_mod = 1		5182069	0		=			
ANR	5182786	Identifier	is_mod		5182069	0					
ANR	5182787	PrimaryExpression	1		5182069	1					
ANR	5182788	IfStatement	if ( is_mod )		5182069	28					
ANR	5182789	Condition	is_mod	2104:7:48829:48834	5182069	0	True				
ANR	5182790	Identifier	is_mod		5182069	0					
ANR	5182791	CompoundStatement		131:4:3095:3122	5182069	1					
ANR	5182792	IdentifierDeclStatement	ut32 reg_len = strlen ( reg ) ;	2106:4:48869:48896	5182069	0	True				
ANR	5182793	IdentifierDecl	reg_len = strlen ( reg )		5182069	0					
ANR	5182794	IdentifierDeclType	ut32		5182069	0					
ANR	5182795	Identifier	reg_len		5182069	1					
ANR	5182796	AssignmentExpression	reg_len = strlen ( reg )		5182069	2		=			
ANR	5182797	Identifier	reg_len		5182069	0					
ANR	5182798	CallExpression	strlen ( reg )		5182069	1					
ANR	5182799	Callee	strlen		5182069	0					
ANR	5182800	Identifier	strlen		5182069	0					
ANR	5182801	ArgumentList	reg		5182069	1					
ANR	5182802	Argument	reg		5182069	0					
ANR	5182803	Identifier	reg		5182069	0					
ANR	5182804	IfStatement	if ( reg_len + j + 10 >= COLORIZE_BUFSIZE )		5182069	1					
ANR	5182805	Condition	reg_len + j + 10 >= COLORIZE_BUFSIZE	2108:8:49002:49037	5182069	0	True				
ANR	5182806	RelationalExpression	reg_len + j + 10 >= COLORIZE_BUFSIZE		5182069	0		>=			
ANR	5182807	AdditiveExpression	reg_len + j + 10		5182069	0		+			
ANR	5182808	Identifier	reg_len		5182069	0					
ANR	5182809	AdditiveExpression	j + 10		5182069	1		+			
ANR	5182810	Identifier	j		5182069	0					
ANR	5182811	PrimaryExpression	10		5182069	1					
ANR	5182812	Identifier	COLORIZE_BUFSIZE		5182069	1					
ANR	5182813	CompoundStatement		133:46:3266:3266	5182069	1					
ANR	5182814	ExpressionStatement	"eprintf ( ""r_print_colorize_opcode(): buffer overflow!\\n"" )"	2109:5:49047:49104	5182069	0	True				
ANR	5182815	CallExpression	"eprintf ( ""r_print_colorize_opcode(): buffer overflow!\\n"" )"		5182069	0					
ANR	5182816	Callee	eprintf		5182069	0					
ANR	5182817	Identifier	eprintf		5182069	0					
ANR	5182818	ArgumentList	"""r_print_colorize_opcode(): buffer overflow!\\n"""		5182069	1					
ANR	5182819	Argument	"""r_print_colorize_opcode(): buffer overflow!\\n"""		5182069	0					
ANR	5182820	PrimaryExpression	"""r_print_colorize_opcode(): buffer overflow!\\n"""		5182069	0					
ANR	5182821	ReturnStatement	return strdup ( p ) ;	2110:5:49111:49128	5182069	1	True				
ANR	5182822	CallExpression	strdup ( p )		5182069	0					
ANR	5182823	Callee	strdup		5182069	0					
ANR	5182824	Identifier	strdup		5182069	0					
ANR	5182825	ArgumentList	p		5182069	1					
ANR	5182826	Argument	p		5182069	0					
ANR	5182827	Identifier	p		5182069	0					
ANR	5182828	ExpressionStatement	"strcpy ( o + j , reg )"	2112:4:49140:49159	5182069	2	True				
ANR	5182829	CallExpression	"strcpy ( o + j , reg )"		5182069	0					
ANR	5182830	Callee	strcpy		5182069	0					
ANR	5182831	Identifier	strcpy		5182069	0					
ANR	5182832	ArgumentList	o + j		5182069	1					
ANR	5182833	Argument	o + j		5182069	0					
ANR	5182834	AdditiveExpression	o + j		5182069	0		+			
ANR	5182835	Identifier	o		5182069	0					
ANR	5182836	Identifier	j		5182069	1					
ANR	5182837	Argument	reg		5182069	1					
ANR	5182838	Identifier	reg		5182069	0					
ANR	5182839	ExpressionStatement	j += strlen ( reg )	2113:4:49165:49182	5182069	3	True				
ANR	5182840	AssignmentExpression	j += strlen ( reg )		5182069	0		+=			
ANR	5182841	Identifier	j		5182069	0					
ANR	5182842	CallExpression	strlen ( reg )		5182069	1					
ANR	5182843	Callee	strlen		5182069	0					
ANR	5182844	Identifier	strlen		5182069	0					
ANR	5182845	ArgumentList	reg		5182069	1					
ANR	5182846	Argument	reg		5182069	0					
ANR	5182847	Identifier	reg		5182069	0					
ANR	5182848	BreakStatement	break ;	2115:3:49192:49197	5182069	29	True				
ANR	5182849	Label	case '0' :	2116:2:49201:49209	5182069	30	True				
ANR	5182850	IfStatement	if ( p [ i + 1 ] == 'x' )		5182069	31					
ANR	5182851	Condition	p [ i + 1 ] == 'x'	2117:7:49232:49246	5182069	0	True				
ANR	5182852	EqualityExpression	p [ i + 1 ] == 'x'		5182069	0		==			
ANR	5182853	ArrayIndexing	p [ i + 1 ]		5182069	0					
ANR	5182854	Identifier	p		5182069	0					
ANR	5182855	AdditiveExpression	i + 1		5182069	1		+			
ANR	5182856	Identifier	i		5182069	0					
ANR	5182857	PrimaryExpression	1		5182069	1					
ANR	5182858	PrimaryExpression	'x'		5182069	1					
ANR	5182859	CompoundStatement		142:24:3475:3475	5182069	1					
ANR	5182860	IfStatement	if ( print -> flags & R_PRINT_FLAGS_SECSUB )		5182069	0					
ANR	5182861	Condition	print -> flags & R_PRINT_FLAGS_SECSUB	2118:8:49259:49293	5182069	0	True				
ANR	5182862	BitAndExpression	print -> flags & R_PRINT_FLAGS_SECSUB		5182069	0		&			
ANR	5182863	PtrMemberAccess	print -> flags		5182069	0					
ANR	5182864	Identifier	print		5182069	0					
ANR	5182865	Identifier	flags		5182069	1					
ANR	5182866	Identifier	R_PRINT_FLAGS_SECSUB		5182069	1					
ANR	5182867	CompoundStatement		144:5:3529:3602	5182069	1					
ANR	5182868	IdentifierDeclStatement	"RIOMap * map = print -> iob . map_get ( print -> iob . io , r_num_get ( NULL , p + i ) ) ;"	2119:5:49303:49376	5182069	0	True				
ANR	5182869	IdentifierDecl	"* map = print -> iob . map_get ( print -> iob . io , r_num_get ( NULL , p + i ) )"		5182069	0					
ANR	5182870	IdentifierDeclType	RIOMap *		5182069	0					
ANR	5182871	Identifier	map		5182069	1					
ANR	5182872	AssignmentExpression	"* map = print -> iob . map_get ( print -> iob . io , r_num_get ( NULL , p + i ) )"		5182069	2		=			
ANR	5182873	Identifier	map		5182069	0					
ANR	5182874	CallExpression	"print -> iob . map_get ( print -> iob . io , r_num_get ( NULL , p + i ) )"		5182069	1					
ANR	5182875	Callee	print -> iob . map_get		5182069	0					
ANR	5182876	MemberAccess	print -> iob . map_get		5182069	0					
ANR	5182877	PtrMemberAccess	print -> iob		5182069	0					
ANR	5182878	Identifier	print		5182069	0					
ANR	5182879	Identifier	iob		5182069	1					
ANR	5182880	Identifier	map_get		5182069	1					
ANR	5182881	ArgumentList	print -> iob . io		5182069	1					
ANR	5182882	Argument	print -> iob . io		5182069	0					
ANR	5182883	MemberAccess	print -> iob . io		5182069	0					
ANR	5182884	PtrMemberAccess	print -> iob		5182069	0					
ANR	5182885	Identifier	print		5182069	0					
ANR	5182886	Identifier	iob		5182069	1					
ANR	5182887	Identifier	io		5182069	1					
ANR	5182888	Argument	"r_num_get ( NULL , p + i )"		5182069	1					
ANR	5182889	CallExpression	"r_num_get ( NULL , p + i )"		5182069	0					
ANR	5182890	Callee	r_num_get		5182069	0					
ANR	5182891	Identifier	r_num_get		5182069	0					
ANR	5182892	ArgumentList	NULL		5182069	1					
ANR	5182893	Argument	NULL		5182069	0					
ANR	5182894	Identifier	NULL		5182069	0					
ANR	5182895	Argument	p + i		5182069	1					
ANR	5182896	AdditiveExpression	p + i		5182069	0		+			
ANR	5182897	Identifier	p		5182069	0					
ANR	5182898	Identifier	i		5182069	1					
ANR	5182899	IfStatement	if ( map && map -> name )		5182069	1					
ANR	5182900	Condition	map && map -> name	2120:9:49387:49402	5182069	0	True				
ANR	5182901	AndExpression	map && map -> name		5182069	0		&&			
ANR	5182902	Identifier	map		5182069	0					
ANR	5182903	PtrMemberAccess	map -> name		5182069	1					
ANR	5182904	Identifier	map		5182069	0					
ANR	5182905	Identifier	name		5182069	1					
ANR	5182906	CompoundStatement		145:27:3631:3631	5182069	1					
ANR	5182907	IfStatement	if ( strlen ( map -> name ) + j + 1 >= COLORIZE_BUFSIZE )		5182069	0					
ANR	5182908	Condition	strlen ( map -> name ) + j + 1 >= COLORIZE_BUFSIZE	2121:10:49417:49462	5182069	0	True				
ANR	5182909	RelationalExpression	strlen ( map -> name ) + j + 1 >= COLORIZE_BUFSIZE		5182069	0		>=			
ANR	5182910	AdditiveExpression	strlen ( map -> name ) + j + 1		5182069	0		+			
ANR	5182911	CallExpression	strlen ( map -> name )		5182069	0					
ANR	5182912	Callee	strlen		5182069	0					
ANR	5182913	Identifier	strlen		5182069	0					
ANR	5182914	ArgumentList	map -> name		5182069	1					
ANR	5182915	Argument	map -> name		5182069	0					
ANR	5182916	PtrMemberAccess	map -> name		5182069	0					
ANR	5182917	Identifier	map		5182069	0					
ANR	5182918	Identifier	name		5182069	1					
ANR	5182919	AdditiveExpression	j + 1		5182069	1		+			
ANR	5182920	Identifier	j		5182069	0					
ANR	5182921	PrimaryExpression	1		5182069	1					
ANR	5182922	Identifier	COLORIZE_BUFSIZE		5182069	1					
ANR	5182923	CompoundStatement		146:58:3691:3691	5182069	1					
ANR	5182924	ExpressionStatement	"eprintf ( ""stop before overflow\\n"" )"	2122:7:49474:49508	5182069	0	True				
ANR	5182925	CallExpression	"eprintf ( ""stop before overflow\\n"" )"		5182069	0					
ANR	5182926	Callee	eprintf		5182069	0					
ANR	5182927	Identifier	eprintf		5182069	0					
ANR	5182928	ArgumentList	"""stop before overflow\\n"""		5182069	1					
ANR	5182929	Argument	"""stop before overflow\\n"""		5182069	0					
ANR	5182930	PrimaryExpression	"""stop before overflow\\n"""		5182069	0					
ANR	5182931	BreakStatement	break ;	2123:7:49517:49522	5182069	1	True				
ANR	5182932	ExpressionStatement	"strcpy ( o + j , map -> name )"	2125:6:49538:49563	5182069	1	True				
ANR	5182933	CallExpression	"strcpy ( o + j , map -> name )"		5182069	0					
ANR	5182934	Callee	strcpy		5182069	0					
ANR	5182935	Identifier	strcpy		5182069	0					
ANR	5182936	ArgumentList	o + j		5182069	1					
ANR	5182937	Argument	o + j		5182069	0					
ANR	5182938	AdditiveExpression	o + j		5182069	0		+			
ANR	5182939	Identifier	o		5182069	0					
ANR	5182940	Identifier	j		5182069	1					
ANR	5182941	Argument	map -> name		5182069	1					
ANR	5182942	PtrMemberAccess	map -> name		5182069	0					
ANR	5182943	Identifier	map		5182069	0					
ANR	5182944	Identifier	name		5182069	1					
ANR	5182945	ExpressionStatement	j += strlen ( o + j )	2126:6:49571:49590	5182069	2	True				
ANR	5182946	AssignmentExpression	j += strlen ( o + j )		5182069	0		+=			
ANR	5182947	Identifier	j		5182069	0					
ANR	5182948	CallExpression	strlen ( o + j )		5182069	1					
ANR	5182949	Callee	strlen		5182069	0					
ANR	5182950	Identifier	strlen		5182069	0					
ANR	5182951	ArgumentList	o + j		5182069	1					
ANR	5182952	Argument	o + j		5182069	0					
ANR	5182953	AdditiveExpression	o + j		5182069	0		+			
ANR	5182954	Identifier	o		5182069	0					
ANR	5182955	Identifier	j		5182069	1					
ANR	5182956	ExpressionStatement	"strcpy ( o + j , ""."" )"	2127:6:49598:49617	5182069	3	True				
ANR	5182957	CallExpression	"strcpy ( o + j , ""."" )"		5182069	0					
ANR	5182958	Callee	strcpy		5182069	0					
ANR	5182959	Identifier	strcpy		5182069	0					
ANR	5182960	ArgumentList	o + j		5182069	1					
ANR	5182961	Argument	o + j		5182069	0					
ANR	5182962	AdditiveExpression	o + j		5182069	0		+			
ANR	5182963	Identifier	o		5182069	0					
ANR	5182964	Identifier	j		5182069	1					
ANR	5182965	Argument	"""."""		5182069	1					
ANR	5182966	PrimaryExpression	"""."""		5182069	0					
ANR	5182967	ExpressionStatement	j ++	2128:6:49625:49628	5182069	4	True				
ANR	5182968	PostIncDecOperationExpression	j ++		5182069	0					
ANR	5182969	Identifier	j		5182069	0					
ANR	5182970	IncDec	++		5182069	1					
ANR	5182971	BreakStatement	break ;	2132:3:49651:49656	5182069	32	True				
ANR	5182972	ExpressionStatement	o [ j ] = p [ i ]	2134:2:49664:49675	5182069	4	True				
ANR	5182973	AssignmentExpression	o [ j ] = p [ i ]		5182069	0		=			
ANR	5182974	ArrayIndexing	o [ j ]		5182069	0					
ANR	5182975	Identifier	o		5182069	0					
ANR	5182976	Identifier	j		5182069	1					
ANR	5182977	ArrayIndexing	p [ i ]		5182069	1					
ANR	5182978	Identifier	p		5182069	0					
ANR	5182979	Identifier	i		5182069	1					
ANR	5182980	IfStatement	if ( j + 20 >= opcode_sz )		5182069	13					
ANR	5182981	Condition	j + 20 >= opcode_sz	2137:5:49711:49729	5182069	0	True				
ANR	5182982	RelationalExpression	j + 20 >= opcode_sz		5182069	0		>=			
ANR	5182983	AdditiveExpression	j + 20		5182069	0		+			
ANR	5182984	Identifier	j		5182069	0					
ANR	5182985	PrimaryExpression	20		5182069	1					
ANR	5182986	Identifier	opcode_sz		5182069	1					
ANR	5182987	CompoundStatement		163:2:3962:3975	5182069	1					
ANR	5182988	IdentifierDeclStatement	char * t_o = o ;	2138:2:49736:49749	5182069	0	True				
ANR	5182989	IdentifierDecl	* t_o = o		5182069	0					
ANR	5182990	IdentifierDeclType	char *		5182069	0					
ANR	5182991	Identifier	t_o		5182069	1					
ANR	5182992	AssignmentExpression	* t_o = o		5182069	2		=			
ANR	5182993	Identifier	o		5182069	0					
ANR	5182994	Identifier	o		5182069	1					
ANR	5182995	ExpressionStatement	"memmove ( o , t_o , opcode_sz )"	2140:2:49788:49815	5182069	1	True				
ANR	5182996	CallExpression	"memmove ( o , t_o , opcode_sz )"		5182069	0					
ANR	5182997	Callee	memmove		5182069	0					
ANR	5182998	Identifier	memmove		5182069	0					
ANR	5182999	ArgumentList	o		5182069	1					
ANR	5183000	Argument	o		5182069	0					
ANR	5183001	Identifier	o		5182069	0					
ANR	5183002	Argument	t_o		5182069	1					
ANR	5183003	Identifier	t_o		5182069	0					
ANR	5183004	Argument	opcode_sz		5182069	2					
ANR	5183005	Identifier	opcode_sz		5182069	0					
ANR	5183006	ExpressionStatement	"strcpy ( o + j , reset )"	2143:1:49841:49862	5182069	14	True				
ANR	5183007	CallExpression	"strcpy ( o + j , reset )"		5182069	0					
ANR	5183008	Callee	strcpy		5182069	0					
ANR	5183009	Identifier	strcpy		5182069	0					
ANR	5183010	ArgumentList	o + j		5182069	1					
ANR	5183011	Argument	o + j		5182069	0					
ANR	5183012	AdditiveExpression	o + j		5182069	0		+			
ANR	5183013	Identifier	o		5182069	0					
ANR	5183014	Identifier	j		5182069	1					
ANR	5183015	Argument	reset		5182069	1					
ANR	5183016	Identifier	reset		5182069	0					
ANR	5183017	ReturnStatement	return strdup ( o ) ;	2145:1:49950:49967	5182069	15	True				
ANR	5183018	CallExpression	strdup ( o )		5182069	0					
ANR	5183019	Callee	strdup		5182069	0					
ANR	5183020	Identifier	strdup		5182069	0					
ANR	5183021	ArgumentList	o		5182069	1					
ANR	5183022	Argument	o		5182069	0					
ANR	5183023	Identifier	o		5182069	0					
ANR	5183024	ReturnType	R_API char *		5182069	1					
ANR	5183025	Identifier	r_print_colorize_opcode		5182069	2					
ANR	5183026	ParameterList	"RPrint * print , char * p , const char * reg , const char * num , bool partial_reset , ut64 func_addr"		5182069	3					
ANR	5183027	Parameter	RPrint * print	1976:36:45679:45691	5182069	0	True				
ANR	5183028	ParameterType	RPrint *		5182069	0					
ANR	5183029	Identifier	print		5182069	1					
ANR	5183030	Parameter	char * p	1976:51:45694:45700	5182069	1	True				
ANR	5183031	ParameterType	char *		5182069	0					
ANR	5183032	Identifier	p		5182069	1					
ANR	5183033	Parameter	const char * reg	1976:60:45703:45717	5182069	2	True				
ANR	5183034	ParameterType	const char *		5182069	0					
ANR	5183035	Identifier	reg		5182069	1					
ANR	5183036	Parameter	const char * num	1976:77:45720:45734	5182069	3	True				
ANR	5183037	ParameterType	const char *		5182069	0					
ANR	5183038	Identifier	num		5182069	1					
ANR	5183039	Parameter	bool partial_reset	1976:94:45737:45754	5182069	4	True				
ANR	5183040	ParameterType	bool		5182069	0					
ANR	5183041	Identifier	partial_reset		5182069	1					
ANR	5183042	Parameter	ut64 func_addr	1976:114:45757:45770	5182069	5	True				
ANR	5183043	ParameterType	ut64		5182069	0					
ANR	5183044	Identifier	func_addr		5182069	1					
ANR	5183045	CFGEntryNode	ENTRY		5182069		True				
ANR	5183046	CFGExitNode	EXIT		5182069		True				
ANR	5183047	Symbol	check_arg_name		5182069						
ANR	5183048	Symbol	print -> cons -> context -> pal . func_var_type		5182069						
ANR	5183049	Symbol	* map		5182069						
ANR	5183050	Symbol	num		5182069						
ANR	5183051	Symbol	color_flag		5182069						
ANR	5183052	Symbol	strlen		5182069						
ANR	5183053	Symbol	reg		5182069						
ANR	5183054	Symbol	print -> cons -> context -> pal		5182069						
ANR	5183055	Symbol	* print -> cons -> context		5182069						
ANR	5183056	Symbol	* * * print		5182069						
ANR	5183057	Symbol	* * print -> cons		5182069						
ANR	5183058	Symbol	r_num_get		5182069						
ANR	5183059	Symbol	isdigit		5182069						
ANR	5183060	Symbol	print -> iob . map_get		5182069						
ANR	5183061	Symbol	NULL		5182069						
ANR	5183062	Symbol	issymbol		5182069						
ANR	5183063	Symbol	COLORIZE_BUFSIZE		5182069						
ANR	5183064	Symbol	R_PRINT_FLAGS_SECSUB		5182069						
ANR	5183065	Symbol	opcode_sz		5182069						
ANR	5183066	Symbol	color_len		5182069						
ANR	5183067	Symbol	is_float		5182069						
ANR	5183068	Symbol	* print -> cons		5182069						
ANR	5183069	Symbol	name		5182069						
ANR	5183070	Symbol	reset		5182069						
ANR	5183071	Symbol	Color_RESET_NOBG		5182069						
ANR	5183072	Symbol	is_mod		5182069						
ANR	5183073	Symbol	color		5182069						
ANR	5183074	Symbol	Color_RESET		5182069						
ANR	5183075	Symbol	partial_reset		5182069						
ANR	5183076	Symbol	print -> iob		5182069						
ANR	5183077	Symbol	reg_len		5182069						
ANR	5183078	Symbol	map -> name		5182069						
ANR	5183079	Symbol	nlen		5182069						
ANR	5183080	Symbol	is_jmp		5182069						
ANR	5183081	Symbol	print -> user		5182069						
ANR	5183082	Symbol	map		5182069						
ANR	5183083	Symbol	num2		5182069						
ANR	5183084	Symbol	* * print		5182069						
ANR	5183085	Symbol	previous		5182069						
ANR	5183086	Symbol	print -> cons		5182069						
ANR	5183087	Symbol	t_o		5182069						
ANR	5183088	Symbol	c_reset		5182069						
ANR	5183089	Symbol	found_var		5182069						
ANR	5183090	Symbol	i		5182069						
ANR	5183091	Symbol	print -> iob . io		5182069						
ANR	5183092	Symbol	j		5182069						
ANR	5183093	Symbol	print -> offname		5182069						
ANR	5183094	Symbol	k		5182069						
ANR	5183095	Symbol	ishexprefix		5182069						
ANR	5183096	Symbol	n		5182069						
ANR	5183097	Symbol	is_arg		5182069						
ANR	5183098	Symbol	o		5182069						
ANR	5183099	Symbol	p		5182069						
ANR	5183100	Symbol	print -> flags		5182069						
ANR	5183101	Symbol	print		5182069						
ANR	5183102	Symbol	* i		5182069						
ANR	5183103	Symbol	* j		5182069						
ANR	5183104	Symbol	* k		5182069						
ANR	5183105	Symbol	* print		5182069						
ANR	5183106	Symbol	print -> cons -> context		5182069						
ANR	5183107	Symbol	* o		5182069						
ANR	5183108	Symbol	* p		5182069						
ANR	5183109	Symbol	print -> cons -> context -> pal . flag		5182069						
ANR	5183110	Symbol	strdup		5182069						
ANR	5183111	Symbol	func_addr		5182069						
ANR	5183112	Function	r_print_init_rowoffsets	2149:0:50007:50138							
ANR	5183113	FunctionDef	r_print_init_rowoffsets (RPrint * p)		5183112	0					
ANR	5183114	CompoundStatement		2149:46:50053:50138	5183112	0					
ANR	5183115	IfStatement	if ( p -> calc_row_offsets )		5183112	0					
ANR	5183116	Condition	p -> calc_row_offsets	2150:5:50060:50078	5183112	0	True				
ANR	5183117	PtrMemberAccess	p -> calc_row_offsets		5183112	0					
ANR	5183118	Identifier	p		5183112	0					
ANR	5183119	Identifier	calc_row_offsets		5183112	1					
ANR	5183120	CompoundStatement		2:26:27:27	5183112	1					
ANR	5183121	ExpressionStatement	R_FREE ( p -> row_offsets )	2151:2:50085:50108	5183112	0	True				
ANR	5183122	CallExpression	R_FREE ( p -> row_offsets )		5183112	0					
ANR	5183123	Callee	R_FREE		5183112	0					
ANR	5183124	Identifier	R_FREE		5183112	0					
ANR	5183125	ArgumentList	p -> row_offsets		5183112	1					
ANR	5183126	Argument	p -> row_offsets		5183112	0					
ANR	5183127	PtrMemberAccess	p -> row_offsets		5183112	0					
ANR	5183128	Identifier	p		5183112	0					
ANR	5183129	Identifier	row_offsets		5183112	1					
ANR	5183130	ExpressionStatement	p -> row_offsets_sz = 0	2152:2:50112:50133	5183112	1	True				
ANR	5183131	AssignmentExpression	p -> row_offsets_sz = 0		5183112	0		=			
ANR	5183132	PtrMemberAccess	p -> row_offsets_sz		5183112	0					
ANR	5183133	Identifier	p		5183112	0					
ANR	5183134	Identifier	row_offsets_sz		5183112	1					
ANR	5183135	PrimaryExpression	0		5183112	1					
ANR	5183136	ReturnType	R_API void		5183112	1					
ANR	5183137	Identifier	r_print_init_rowoffsets		5183112	2					
ANR	5183138	ParameterList	RPrint * p		5183112	3					
ANR	5183139	Parameter	RPrint * p	2149:35:50042:50050	5183112	0	True				
ANR	5183140	ParameterType	RPrint *		5183112	0					
ANR	5183141	Identifier	p		5183112	1					
ANR	5183142	CFGEntryNode	ENTRY		5183112		True				
ANR	5183143	CFGExitNode	EXIT		5183112		True				
ANR	5183144	Symbol	p		5183112						
ANR	5183145	Symbol	p -> calc_row_offsets		5183112						
ANR	5183146	Symbol	p -> row_offsets		5183112						
ANR	5183147	Symbol	p -> row_offsets_sz		5183112						
ANR	5183148	Symbol	* p		5183112						
ANR	5183149	Function	r_print_set_rowoff	2157:0:50208:50791							
ANR	5183150	FunctionDef	"r_print_set_rowoff (RPrint * p , int i , ut32 offset , bool overwrite)"		5183149	0					
ANR	5183151	CompoundStatement		2157:77:50285:50791	5183149	0					
ANR	5183152	IfStatement	if ( ! overwrite )		5183149	0					
ANR	5183153	Condition	! overwrite	2158:5:50292:50301	5183149	0	True				
ANR	5183154	UnaryOperationExpression	! overwrite		5183149	0					
ANR	5183155	UnaryOperator	!		5183149	0					
ANR	5183156	Identifier	overwrite		5183149	1					
ANR	5183157	CompoundStatement		2:17:18:18	5183149	1					
ANR	5183158	ReturnStatement	return ;	2159:2:50308:50314	5183149	0	True				
ANR	5183159	IfStatement	if ( i < 0 )		5183149	1					
ANR	5183160	Condition	i < 0	2161:5:50324:50328	5183149	0	True				
ANR	5183161	RelationalExpression	i < 0		5183149	0		<			
ANR	5183162	Identifier	i		5183149	0					
ANR	5183163	PrimaryExpression	0		5183149	1					
ANR	5183164	CompoundStatement		5:12:45:45	5183149	1					
ANR	5183165	ReturnStatement	return ;	2162:2:50335:50341	5183149	0	True				
ANR	5183166	IfStatement	if ( ! p -> row_offsets || ! p -> row_offsets_sz )		5183149	2					
ANR	5183167	Condition	! p -> row_offsets || ! p -> row_offsets_sz	2164:5:50351:50387	5183149	0	True				
ANR	5183168	OrExpression	! p -> row_offsets || ! p -> row_offsets_sz		5183149	0		||			
ANR	5183169	UnaryOperationExpression	! p -> row_offsets		5183149	0					
ANR	5183170	UnaryOperator	!		5183149	0					
ANR	5183171	PtrMemberAccess	p -> row_offsets		5183149	1					
ANR	5183172	Identifier	p		5183149	0					
ANR	5183173	Identifier	row_offsets		5183149	1					
ANR	5183174	UnaryOperationExpression	! p -> row_offsets_sz		5183149	1					
ANR	5183175	UnaryOperator	!		5183149	0					
ANR	5183176	PtrMemberAccess	p -> row_offsets_sz		5183149	1					
ANR	5183177	Identifier	p		5183149	0					
ANR	5183178	Identifier	row_offsets_sz		5183149	1					
ANR	5183179	CompoundStatement		8:44:104:104	5183149	1					
ANR	5183180	ExpressionStatement	"p -> row_offsets_sz = R_MAX ( i + 1 , DFLT_ROWS )"	2165:2:50394:50438	5183149	0	True				
ANR	5183181	AssignmentExpression	"p -> row_offsets_sz = R_MAX ( i + 1 , DFLT_ROWS )"		5183149	0		=			
ANR	5183182	PtrMemberAccess	p -> row_offsets_sz		5183149	0					
ANR	5183183	Identifier	p		5183149	0					
ANR	5183184	Identifier	row_offsets_sz		5183149	1					
ANR	5183185	CallExpression	"R_MAX ( i + 1 , DFLT_ROWS )"		5183149	1					
ANR	5183186	Callee	R_MAX		5183149	0					
ANR	5183187	Identifier	R_MAX		5183149	0					
ANR	5183188	ArgumentList	i + 1		5183149	1					
ANR	5183189	Argument	i + 1		5183149	0					
ANR	5183190	AdditiveExpression	i + 1		5183149	0		+			
ANR	5183191	Identifier	i		5183149	0					
ANR	5183192	PrimaryExpression	1		5183149	1					
ANR	5183193	Argument	DFLT_ROWS		5183149	1					
ANR	5183194	Identifier	DFLT_ROWS		5183149	0					
ANR	5183195	ExpressionStatement	"p -> row_offsets = R_NEWS ( ut32 , p -> row_offsets_sz )"	2166:2:50442:50491	5183149	1	True				
ANR	5183196	AssignmentExpression	"p -> row_offsets = R_NEWS ( ut32 , p -> row_offsets_sz )"		5183149	0		=			
ANR	5183197	PtrMemberAccess	p -> row_offsets		5183149	0					
ANR	5183198	Identifier	p		5183149	0					
ANR	5183199	Identifier	row_offsets		5183149	1					
ANR	5183200	CallExpression	"R_NEWS ( ut32 , p -> row_offsets_sz )"		5183149	1					
ANR	5183201	Callee	R_NEWS		5183149	0					
ANR	5183202	Identifier	R_NEWS		5183149	0					
ANR	5183203	ArgumentList	ut32		5183149	1					
ANR	5183204	Argument	ut32		5183149	0					
ANR	5183205	Identifier	ut32		5183149	0					
ANR	5183206	Argument	p -> row_offsets_sz		5183149	1					
ANR	5183207	PtrMemberAccess	p -> row_offsets_sz		5183149	0					
ANR	5183208	Identifier	p		5183149	0					
ANR	5183209	Identifier	row_offsets_sz		5183149	1					
ANR	5183210	IfStatement	if ( i >= p -> row_offsets_sz )		5183149	3					
ANR	5183211	Condition	i >= p -> row_offsets_sz	2168:5:50501:50522	5183149	0	True				
ANR	5183212	RelationalExpression	i >= p -> row_offsets_sz		5183149	0		>=			
ANR	5183213	Identifier	i		5183149	0					
ANR	5183214	PtrMemberAccess	p -> row_offsets_sz		5183149	1					
ANR	5183215	Identifier	p		5183149	0					
ANR	5183216	Identifier	row_offsets_sz		5183149	1					
ANR	5183217	CompoundStatement		13:2:243:258	5183149	1					
ANR	5183218	IdentifierDeclStatement	size_t new_size ;	2169:2:50529:50544	5183149	0	True				
ANR	5183219	IdentifierDecl	new_size		5183149	0					
ANR	5183220	IdentifierDeclType	size_t		5183149	0					
ANR	5183221	Identifier	new_size		5183149	1					
ANR	5183222	ExpressionStatement	p -> row_offsets_sz *= 2	2170:2:50548:50570	5183149	1	True				
ANR	5183223	AssignmentExpression	p -> row_offsets_sz *= 2		5183149	0		*=			
ANR	5183224	PtrMemberAccess	p -> row_offsets_sz		5183149	0					
ANR	5183225	Identifier	p		5183149	0					
ANR	5183226	Identifier	row_offsets_sz		5183149	1					
ANR	5183227	PrimaryExpression	2		5183149	1					
ANR	5183228	WhileStatement	while ( i >= p -> row_offsets_sz )		5183149	2					
ANR	5183229	Condition	i >= p -> row_offsets_sz	2172:9:50599:50620	5183149	0	True				
ANR	5183230	RelationalExpression	i >= p -> row_offsets_sz		5183149	0		>=			
ANR	5183231	Identifier	i		5183149	0					
ANR	5183232	PtrMemberAccess	p -> row_offsets_sz		5183149	1					
ANR	5183233	Identifier	p		5183149	0					
ANR	5183234	Identifier	row_offsets_sz		5183149	1					
ANR	5183235	CompoundStatement		16:33:337:337	5183149	1					
ANR	5183236	ExpressionStatement	p -> row_offsets_sz *= 2	2173:3:50628:50650	5183149	0	True				
ANR	5183237	AssignmentExpression	p -> row_offsets_sz *= 2		5183149	0		*=			
ANR	5183238	PtrMemberAccess	p -> row_offsets_sz		5183149	0					
ANR	5183239	Identifier	p		5183149	0					
ANR	5183240	Identifier	row_offsets_sz		5183149	1					
ANR	5183241	PrimaryExpression	2		5183149	1					
ANR	5183242	ExpressionStatement	new_size = sizeof ( ut32 ) * p -> row_offsets_sz	2175:2:50658:50702	5183149	3	True				
ANR	5183243	AssignmentExpression	new_size = sizeof ( ut32 ) * p -> row_offsets_sz		5183149	0		=			
ANR	5183244	Identifier	new_size		5183149	0					
ANR	5183245	MultiplicativeExpression	sizeof ( ut32 ) * p -> row_offsets_sz		5183149	1		*			
ANR	5183246	SizeofExpression	sizeof ( ut32 )		5183149	0					
ANR	5183247	Sizeof	sizeof		5183149	0					
ANR	5183248	SizeofOperand	ut32		5183149	1					
ANR	5183249	PtrMemberAccess	p -> row_offsets_sz		5183149	1					
ANR	5183250	Identifier	p		5183149	0					
ANR	5183251	Identifier	row_offsets_sz		5183149	1					
ANR	5183252	ExpressionStatement	"p -> row_offsets = realloc ( p -> row_offsets , new_size )"	2176:2:50706:50757	5183149	4	True				
ANR	5183253	AssignmentExpression	"p -> row_offsets = realloc ( p -> row_offsets , new_size )"		5183149	0		=			
ANR	5183254	PtrMemberAccess	p -> row_offsets		5183149	0					
ANR	5183255	Identifier	p		5183149	0					
ANR	5183256	Identifier	row_offsets		5183149	1					
ANR	5183257	CallExpression	"realloc ( p -> row_offsets , new_size )"		5183149	1					
ANR	5183258	Callee	realloc		5183149	0					
ANR	5183259	Identifier	realloc		5183149	0					
ANR	5183260	ArgumentList	p -> row_offsets		5183149	1					
ANR	5183261	Argument	p -> row_offsets		5183149	0					
ANR	5183262	PtrMemberAccess	p -> row_offsets		5183149	0					
ANR	5183263	Identifier	p		5183149	0					
ANR	5183264	Identifier	row_offsets		5183149	1					
ANR	5183265	Argument	new_size		5183149	1					
ANR	5183266	Identifier	new_size		5183149	0					
ANR	5183267	ExpressionStatement	p -> row_offsets [ i ] = offset	2178:1:50763:50789	5183149	4	True				
ANR	5183268	AssignmentExpression	p -> row_offsets [ i ] = offset		5183149	0		=			
ANR	5183269	ArrayIndexing	p -> row_offsets [ i ]		5183149	0					
ANR	5183270	PtrMemberAccess	p -> row_offsets		5183149	0					
ANR	5183271	Identifier	p		5183149	0					
ANR	5183272	Identifier	row_offsets		5183149	1					
ANR	5183273	Identifier	i		5183149	1					
ANR	5183274	Identifier	offset		5183149	1					
ANR	5183275	ReturnType	R_API void		5183149	1					
ANR	5183276	Identifier	r_print_set_rowoff		5183149	2					
ANR	5183277	ParameterList	"RPrint * p , int i , ut32 offset , bool overwrite"		5183149	3					
ANR	5183278	Parameter	RPrint * p	2157:30:50238:50246	5183149	0	True				
ANR	5183279	ParameterType	RPrint *		5183149	0					
ANR	5183280	Identifier	p		5183149	1					
ANR	5183281	Parameter	int i	2157:41:50249:50253	5183149	1	True				
ANR	5183282	ParameterType	int		5183149	0					
ANR	5183283	Identifier	i		5183149	1					
ANR	5183284	Parameter	ut32 offset	2157:48:50256:50266	5183149	2	True				
ANR	5183285	ParameterType	ut32		5183149	0					
ANR	5183286	Identifier	offset		5183149	1					
ANR	5183287	Parameter	bool overwrite	2157:61:50269:50282	5183149	3	True				
ANR	5183288	ParameterType	bool		5183149	0					
ANR	5183289	Identifier	overwrite		5183149	1					
ANR	5183290	CFGEntryNode	ENTRY		5183149		True				
ANR	5183291	CFGExitNode	EXIT		5183149		True				
ANR	5183292	Symbol	offset		5183149						
ANR	5183293	Symbol	ut32		5183149						
ANR	5183294	Symbol	i		5183149						
ANR	5183295	Symbol	realloc		5183149						
ANR	5183296	Symbol	* p -> row_offsets		5183149						
ANR	5183297	Symbol	R_NEWS		5183149						
ANR	5183298	Symbol	p		5183149						
ANR	5183299	Symbol	p -> row_offsets		5183149						
ANR	5183300	Symbol	* i		5183149						
ANR	5183301	Symbol	p -> row_offsets_sz		5183149						
ANR	5183302	Symbol	new_size		5183149						
ANR	5183303	Symbol	R_MAX		5183149						
ANR	5183304	Symbol	* p		5183149						
ANR	5183305	Symbol	* * p		5183149						
ANR	5183306	Symbol	overwrite		5183149						
ANR	5183307	Symbol	DFLT_ROWS		5183149						
ANR	5183308	Function	r_print_rowoff	2183:0:50922:51057							
ANR	5183309	FunctionDef	"r_print_rowoff (RPrint * p , int i)"		5183308	0					
ANR	5183310	CompoundStatement		2183:44:50966:51057	5183308	0					
ANR	5183311	IfStatement	if ( i < 0 || i >= p -> row_offsets_sz )		5183308	0					
ANR	5183312	Condition	i < 0 || i >= p -> row_offsets_sz	2184:5:50973:51003	5183308	0	True				
ANR	5183313	OrExpression	i < 0 || i >= p -> row_offsets_sz		5183308	0		||			
ANR	5183314	RelationalExpression	i < 0		5183308	0		<			
ANR	5183315	Identifier	i		5183308	0					
ANR	5183316	PrimaryExpression	0		5183308	1					
ANR	5183317	RelationalExpression	i >= p -> row_offsets_sz		5183308	1		>=			
ANR	5183318	Identifier	i		5183308	0					
ANR	5183319	PtrMemberAccess	p -> row_offsets_sz		5183308	1					
ANR	5183320	Identifier	p		5183308	0					
ANR	5183321	Identifier	row_offsets_sz		5183308	1					
ANR	5183322	CompoundStatement		2:38:39:39	5183308	1					
ANR	5183323	ReturnStatement	return UT32_MAX ;	2185:2:51010:51025	5183308	0	True				
ANR	5183324	Identifier	UT32_MAX		5183308	0					
ANR	5183325	ReturnStatement	return p -> row_offsets [ i ] ;	2187:1:51031:51055	5183308	1	True				
ANR	5183326	ArrayIndexing	p -> row_offsets [ i ]		5183308	0					
ANR	5183327	PtrMemberAccess	p -> row_offsets		5183308	0					
ANR	5183328	Identifier	p		5183308	0					
ANR	5183329	Identifier	row_offsets		5183308	1					
ANR	5183330	Identifier	i		5183308	1					
ANR	5183331	ReturnType	R_API ut32		5183308	1					
ANR	5183332	Identifier	r_print_rowoff		5183308	2					
ANR	5183333	ParameterList	"RPrint * p , int i"		5183308	3					
ANR	5183334	Parameter	RPrint * p	2183:26:50948:50956	5183308	0	True				
ANR	5183335	ParameterType	RPrint *		5183308	0					
ANR	5183336	Identifier	p		5183308	1					
ANR	5183337	Parameter	int i	2183:37:50959:50963	5183308	1	True				
ANR	5183338	ParameterType	int		5183308	0					
ANR	5183339	Identifier	i		5183308	1					
ANR	5183340	CFGEntryNode	ENTRY		5183308		True				
ANR	5183341	CFGExitNode	EXIT		5183308		True				
ANR	5183342	Symbol	p		5183308						
ANR	5183343	Symbol	UT32_MAX		5183308						
ANR	5183344	Symbol	* i		5183308						
ANR	5183345	Symbol	p -> row_offsets		5183308						
ANR	5183346	Symbol	p -> row_offsets_sz		5183308						
ANR	5183347	Symbol	i		5183308						
ANR	5183348	Symbol	* p		5183308						
ANR	5183349	Symbol	* p -> row_offsets		5183308						
ANR	5183350	Symbol	* * p		5183308						
ANR	5183351	Function	r_print_row_at_off	2192:0:51158:51348							
ANR	5183352	FunctionDef	"r_print_row_at_off (RPrint * p , ut32 offset)"		5183351	0					
ANR	5183353	CompoundStatement		2192:53:51211:51348	5183351	0					
ANR	5183354	IdentifierDeclStatement	int i = 0 ;	2193:1:51214:51223	5183351	0	True				
ANR	5183355	IdentifierDecl	i = 0		5183351	0					
ANR	5183356	IdentifierDeclType	int		5183351	0					
ANR	5183357	Identifier	i		5183351	1					
ANR	5183358	AssignmentExpression	i = 0		5183351	2		=			
ANR	5183359	Identifier	i		5183351	0					
ANR	5183360	PrimaryExpression	0		5183351	1					
ANR	5183361	IdentifierDeclStatement	ut32 tt ;	2194:1:51226:51233	5183351	1	True				
ANR	5183362	IdentifierDecl	tt		5183351	0					
ANR	5183363	IdentifierDeclType	ut32		5183351	0					
ANR	5183364	Identifier	tt		5183351	1					
ANR	5183365	WhileStatement	"while ( ( tt = r_print_rowoff ( p , i ) ) != UT32_MAX && tt <= offset )"		5183351	2					
ANR	5183366	Condition	"( tt = r_print_rowoff ( p , i ) ) != UT32_MAX && tt <= offset"	2195:8:51243:51298	5183351	0	True				
ANR	5183367	AndExpression	"( tt = r_print_rowoff ( p , i ) ) != UT32_MAX && tt <= offset"		5183351	0		&&			
ANR	5183368	EqualityExpression	"( tt = r_print_rowoff ( p , i ) ) != UT32_MAX"		5183351	0		!=			
ANR	5183369	AssignmentExpression	"tt = r_print_rowoff ( p , i )"		5183351	0		=			
ANR	5183370	Identifier	tt		5183351	0					
ANR	5183371	CallExpression	"r_print_rowoff ( p , i )"		5183351	1					
ANR	5183372	Callee	r_print_rowoff		5183351	0					
ANR	5183373	Identifier	r_print_rowoff		5183351	0					
ANR	5183374	ArgumentList	p		5183351	1					
ANR	5183375	Argument	p		5183351	0					
ANR	5183376	Identifier	p		5183351	0					
ANR	5183377	Argument	i		5183351	1					
ANR	5183378	Identifier	i		5183351	0					
ANR	5183379	Identifier	UT32_MAX		5183351	1					
ANR	5183380	RelationalExpression	tt <= offset		5183351	1		<=			
ANR	5183381	Identifier	tt		5183351	0					
ANR	5183382	Identifier	offset		5183351	1					
ANR	5183383	CompoundStatement		4:66:89:89	5183351	1					
ANR	5183384	ExpressionStatement	i ++	2196:2:51305:51308	5183351	0	True				
ANR	5183385	PostIncDecOperationExpression	i ++		5183351	0					
ANR	5183386	Identifier	i		5183351	0					
ANR	5183387	IncDec	++		5183351	1					
ANR	5183388	ReturnStatement	return tt != UT32_MAX ? i - 1 : - 1 ;	2198:1:51314:51346	5183351	3	True				
ANR	5183389	ConditionalExpression	tt != UT32_MAX ? i - 1 : - 1		5183351	0					
ANR	5183390	Condition	tt != UT32_MAX		5183351	0					
ANR	5183391	EqualityExpression	tt != UT32_MAX		5183351	0		!=			
ANR	5183392	Identifier	tt		5183351	0					
ANR	5183393	Identifier	UT32_MAX		5183351	1					
ANR	5183394	AdditiveExpression	i - 1		5183351	1		-			
ANR	5183395	Identifier	i		5183351	0					
ANR	5183396	PrimaryExpression	1		5183351	1					
ANR	5183397	UnaryOperationExpression	- 1		5183351	2					
ANR	5183398	UnaryOperator	-		5183351	0					
ANR	5183399	PrimaryExpression	1		5183351	1					
ANR	5183400	ReturnType	R_API int		5183351	1					
ANR	5183401	Identifier	r_print_row_at_off		5183351	2					
ANR	5183402	ParameterList	"RPrint * p , ut32 offset"		5183351	3					
ANR	5183403	Parameter	RPrint * p	2192:29:51187:51195	5183351	0	True				
ANR	5183404	ParameterType	RPrint *		5183351	0					
ANR	5183405	Identifier	p		5183351	1					
ANR	5183406	Parameter	ut32 offset	2192:40:51198:51208	5183351	1	True				
ANR	5183407	ParameterType	ut32		5183351	0					
ANR	5183408	Identifier	offset		5183351	1					
ANR	5183409	CFGEntryNode	ENTRY		5183351		True				
ANR	5183410	CFGExitNode	EXIT		5183351		True				
ANR	5183411	Symbol	p		5183351						
ANR	5183412	Symbol	tt		5183351						
ANR	5183413	Symbol	UT32_MAX		5183351						
ANR	5183414	Symbol	offset		5183351						
ANR	5183415	Symbol	i		5183351						
ANR	5183416	Symbol	r_print_rowoff		5183351						
ANR	5183417	Function	r_print_get_cursor	2201:0:51351:51428							
ANR	5183418	FunctionDef	r_print_get_cursor (RPrint * p)		5183417	0					
ANR	5183419	CompoundStatement		2201:40:51391:51428	5183417	0					
ANR	5183420	ReturnStatement	return p -> cur_enabled ? p -> cur : 0 ;	2202:1:51394:51426	5183417	0	True				
ANR	5183421	ConditionalExpression	p -> cur_enabled ? p -> cur : 0		5183417	0					
ANR	5183422	Condition	p -> cur_enabled		5183417	0					
ANR	5183423	PtrMemberAccess	p -> cur_enabled		5183417	0					
ANR	5183424	Identifier	p		5183417	0					
ANR	5183425	Identifier	cur_enabled		5183417	1					
ANR	5183426	PtrMemberAccess	p -> cur		5183417	1					
ANR	5183427	Identifier	p		5183417	0					
ANR	5183428	Identifier	cur		5183417	1					
ANR	5183429	PrimaryExpression	0		5183417	2					
ANR	5183430	ReturnType	R_API int		5183417	1					
ANR	5183431	Identifier	r_print_get_cursor		5183417	2					
ANR	5183432	ParameterList	RPrint * p		5183417	3					
ANR	5183433	Parameter	RPrint * p	2201:29:51380:51388	5183417	0	True				
ANR	5183434	ParameterType	RPrint *		5183417	0					
ANR	5183435	Identifier	p		5183417	1					
ANR	5183436	CFGEntryNode	ENTRY		5183417		True				
ANR	5183437	CFGExitNode	EXIT		5183417		True				
ANR	5183438	Symbol	p		5183417						
ANR	5183439	Symbol	p -> cur_enabled		5183417						
ANR	5183440	Symbol	* p		5183417						
ANR	5183441	Symbol	p -> cur		5183417						
ANR	5183442	Function	r_print_jsondump	2205:0:51431:52371							
ANR	5183443	FunctionDef	"r_print_jsondump (RPrint * p , const ut8 * buf , int len , int wordsize)"		5183442	0					
ANR	5183444	CompoundStatement		2205:77:51508:52371	5183442	0					
ANR	5183445	IdentifierDeclStatement	ut16 * buf16 = ( ut16 * ) buf ;	2206:1:51511:51536	5183442	0	True				
ANR	5183446	IdentifierDecl	* buf16 = ( ut16 * ) buf		5183442	0					
ANR	5183447	IdentifierDeclType	ut16 *		5183442	0					
ANR	5183448	Identifier	buf16		5183442	1					
ANR	5183449	AssignmentExpression	* buf16 = ( ut16 * ) buf		5183442	2		=			
ANR	5183450	Identifier	buf16		5183442	0					
ANR	5183451	CastExpression	( ut16 * ) buf		5183442	1					
ANR	5183452	CastTarget	ut16 *		5183442	0					
ANR	5183453	Identifier	buf		5183442	1					
ANR	5183454	IdentifierDeclStatement	ut32 * buf32 = ( ut32 * ) buf ;	2207:1:51539:51564	5183442	1	True				
ANR	5183455	IdentifierDecl	* buf32 = ( ut32 * ) buf		5183442	0					
ANR	5183456	IdentifierDeclType	ut32 *		5183442	0					
ANR	5183457	Identifier	buf32		5183442	1					
ANR	5183458	AssignmentExpression	* buf32 = ( ut32 * ) buf		5183442	2		=			
ANR	5183459	Identifier	buf32		5183442	0					
ANR	5183460	CastExpression	( ut32 * ) buf		5183442	1					
ANR	5183461	CastTarget	ut32 *		5183442	0					
ANR	5183462	Identifier	buf		5183442	1					
ANR	5183463	IdentifierDeclStatement	ut64 * buf64 = ( ut64 * ) buf ;	2208:1:51567:51592	5183442	2	True				
ANR	5183464	IdentifierDecl	* buf64 = ( ut64 * ) buf		5183442	0					
ANR	5183465	IdentifierDeclType	ut64 *		5183442	0					
ANR	5183466	Identifier	buf64		5183442	1					
ANR	5183467	AssignmentExpression	* buf64 = ( ut64 * ) buf		5183442	2		=			
ANR	5183468	Identifier	buf64		5183442	0					
ANR	5183469	CastExpression	( ut64 * ) buf		5183442	1					
ANR	5183470	CastTarget	ut64 *		5183442	0					
ANR	5183471	Identifier	buf		5183442	1					
ANR	5183472	IfStatement	if ( ! p || ! buf || len < 1 || wordsize < 1 )		5183442	3					
ANR	5183473	Condition	! p || ! buf || len < 1 || wordsize < 1	2210:5:51630:51666	5183442	0	True				
ANR	5183474	OrExpression	! p || ! buf || len < 1 || wordsize < 1		5183442	0		||			
ANR	5183475	UnaryOperationExpression	! p		5183442	0					
ANR	5183476	UnaryOperator	!		5183442	0					
ANR	5183477	Identifier	p		5183442	1					
ANR	5183478	OrExpression	! buf || len < 1 || wordsize < 1		5183442	1		||			
ANR	5183479	UnaryOperationExpression	! buf		5183442	0					
ANR	5183480	UnaryOperator	!		5183442	0					
ANR	5183481	Identifier	buf		5183442	1					
ANR	5183482	OrExpression	len < 1 || wordsize < 1		5183442	1		||			
ANR	5183483	RelationalExpression	len < 1		5183442	0		<			
ANR	5183484	Identifier	len		5183442	0					
ANR	5183485	PrimaryExpression	1		5183442	1					
ANR	5183486	RelationalExpression	wordsize < 1		5183442	1		<			
ANR	5183487	Identifier	wordsize		5183442	0					
ANR	5183488	PrimaryExpression	1		5183442	1					
ANR	5183489	CompoundStatement		6:44:160:160	5183442	1					
ANR	5183490	ReturnStatement	return 0 ;	2211:2:51673:51681	5183442	0	True				
ANR	5183491	PrimaryExpression	0		5183442	0					
ANR	5183492	IdentifierDeclStatement	int bytesize = wordsize / 8 ;	2213:1:51687:51714	5183442	4	True				
ANR	5183493	IdentifierDecl	bytesize = wordsize / 8		5183442	0					
ANR	5183494	IdentifierDeclType	int		5183442	0					
ANR	5183495	Identifier	bytesize		5183442	1					
ANR	5183496	AssignmentExpression	bytesize = wordsize / 8		5183442	2		=			
ANR	5183497	Identifier	bytesize		5183442	0					
ANR	5183498	MultiplicativeExpression	wordsize / 8		5183442	1		/			
ANR	5183499	Identifier	wordsize		5183442	0					
ANR	5183500	PrimaryExpression	8		5183442	1					
ANR	5183501	IfStatement	if ( bytesize < 1 )		5183442	5					
ANR	5183502	Condition	bytesize < 1	2214:5:51721:51732	5183442	0	True				
ANR	5183503	RelationalExpression	bytesize < 1		5183442	0		<			
ANR	5183504	Identifier	bytesize		5183442	0					
ANR	5183505	PrimaryExpression	1		5183442	1					
ANR	5183506	CompoundStatement		10:19:226:226	5183442	1					
ANR	5183507	ExpressionStatement	bytesize = 8	2215:2:51739:51751	5183442	0	True				
ANR	5183508	AssignmentExpression	bytesize = 8		5183442	0		=			
ANR	5183509	Identifier	bytesize		5183442	0					
ANR	5183510	PrimaryExpression	8		5183442	1					
ANR	5183511	IdentifierDeclStatement	"int i , words = ( len / bytesize ) ;"	2217:1:51757:51788	5183442	6	True				
ANR	5183512	IdentifierDecl	i		5183442	0					
ANR	5183513	IdentifierDeclType	int		5183442	0					
ANR	5183514	Identifier	i		5183442	1					
ANR	5183515	IdentifierDecl	words = ( len / bytesize )		5183442	1					
ANR	5183516	IdentifierDeclType	int		5183442	0					
ANR	5183517	Identifier	words		5183442	1					
ANR	5183518	AssignmentExpression	words = ( len / bytesize )		5183442	2		=			
ANR	5183519	Identifier	words		5183442	0					
ANR	5183520	MultiplicativeExpression	len / bytesize		5183442	1		/			
ANR	5183521	Identifier	len		5183442	0					
ANR	5183522	Identifier	bytesize		5183442	1					
ANR	5183523	ExpressionStatement	"p -> cb_printf ( ""["" )"	2218:1:51791:51809	5183442	7	True				
ANR	5183524	CallExpression	"p -> cb_printf ( ""["" )"		5183442	0					
ANR	5183525	Callee	p -> cb_printf		5183442	0					
ANR	5183526	PtrMemberAccess	p -> cb_printf		5183442	0					
ANR	5183527	Identifier	p		5183442	0					
ANR	5183528	Identifier	cb_printf		5183442	1					
ANR	5183529	ArgumentList	"""["""		5183442	1					
ANR	5183530	Argument	"""["""		5183442	0					
ANR	5183531	PrimaryExpression	"""["""		5183442	0					
ANR	5183532	ForStatement	for ( i = 0 ; i < words ; i ++ )		5183442	8					
ANR	5183533	ForInit	i = 0 ;	2219:6:51817:51822	5183442	0	True				
ANR	5183534	AssignmentExpression	i = 0		5183442	0		=			
ANR	5183535	Identifier	i		5183442	0					
ANR	5183536	PrimaryExpression	0		5183442	1					
ANR	5183537	Condition	i < words	2219:13:51824:51832	5183442	1	True				
ANR	5183538	RelationalExpression	i < words		5183442	0		<			
ANR	5183539	Identifier	i		5183442	0					
ANR	5183540	Identifier	words		5183442	1					
ANR	5183541	PostIncDecOperationExpression	i ++	2219:24:51835:51837	5183442	2	True				
ANR	5183542	Identifier	i		5183442	0					
ANR	5183543	IncDec	++		5183442	1					
ANR	5183544	CompoundStatement		15:29:331:331	5183442	3					
ANR	5183545	SwitchStatement	switch ( wordsize )		5183442	0					
ANR	5183546	Condition	wordsize	2220:10:51852:51859	5183442	0	True				
ANR	5183547	Identifier	wordsize		5183442	0					
ANR	5183548	CompoundStatement		16:20:353:353	5183442	1					
ANR	5183549	Label	case 8 :	2221:2:51866:51872	5183442	0	True				
ANR	5183550	CompoundStatement		17:10:365:365	5183442	1					
ANR	5183551	ExpressionStatement	"p -> cb_printf ( ""%s%d"" , i ? "","" : """" , buf [ i ] )"	2222:3:51879:51922	5183442	0	True				
ANR	5183552	CallExpression	"p -> cb_printf ( ""%s%d"" , i ? "","" : """" , buf [ i ] )"		5183442	0					
ANR	5183553	Callee	p -> cb_printf		5183442	0					
ANR	5183554	PtrMemberAccess	p -> cb_printf		5183442	0					
ANR	5183555	Identifier	p		5183442	0					
ANR	5183556	Identifier	cb_printf		5183442	1					
ANR	5183557	ArgumentList	"""%s%d"""		5183442	1					
ANR	5183558	Argument	"""%s%d"""		5183442	0					
ANR	5183559	PrimaryExpression	"""%s%d"""		5183442	0					
ANR	5183560	Argument	"i ? "","" : """""		5183442	1					
ANR	5183561	ConditionalExpression	"i ? "","" : """""		5183442	0					
ANR	5183562	Condition	i		5183442	0					
ANR	5183563	Identifier	i		5183442	0					
ANR	5183564	PrimaryExpression	""","""		5183442	1					
ANR	5183565	PrimaryExpression	""""""		5183442	2					
ANR	5183566	Argument	buf [ i ]		5183442	2					
ANR	5183567	ArrayIndexing	buf [ i ]		5183442	0					
ANR	5183568	Identifier	buf		5183442	0					
ANR	5183569	Identifier	i		5183442	1					
ANR	5183570	BreakStatement	break ;	2223:3:51927:51932	5183442	1	True				
ANR	5183571	Label	case 16 :	2225:2:51940:51947	5183442	2	True				
ANR	5183572	CompoundStatement		22:3:445:495	5183442	3					
ANR	5183573	IdentifierDeclStatement	"ut16 w16 = r_read_ble16 ( & buf16 [ i ] , p -> big_endian ) ;"	2226:3:51954:52004	5183442	0	True				
ANR	5183574	IdentifierDecl	"w16 = r_read_ble16 ( & buf16 [ i ] , p -> big_endian )"		5183442	0					
ANR	5183575	IdentifierDeclType	ut16		5183442	0					
ANR	5183576	Identifier	w16		5183442	1					
ANR	5183577	AssignmentExpression	"w16 = r_read_ble16 ( & buf16 [ i ] , p -> big_endian )"		5183442	2		=			
ANR	5183578	Identifier	w16		5183442	0					
ANR	5183579	CallExpression	"r_read_ble16 ( & buf16 [ i ] , p -> big_endian )"		5183442	1					
ANR	5183580	Callee	r_read_ble16		5183442	0					
ANR	5183581	Identifier	r_read_ble16		5183442	0					
ANR	5183582	ArgumentList	& buf16 [ i ]		5183442	1					
ANR	5183583	Argument	& buf16 [ i ]		5183442	0					
ANR	5183584	UnaryOperationExpression	& buf16 [ i ]		5183442	0					
ANR	5183585	UnaryOperator	&		5183442	0					
ANR	5183586	ArrayIndexing	buf16 [ i ]		5183442	1					
ANR	5183587	Identifier	buf16		5183442	0					
ANR	5183588	Identifier	i		5183442	1					
ANR	5183589	Argument	p -> big_endian		5183442	1					
ANR	5183590	PtrMemberAccess	p -> big_endian		5183442	0					
ANR	5183591	Identifier	p		5183442	0					
ANR	5183592	Identifier	big_endian		5183442	1					
ANR	5183593	ExpressionStatement	"p -> cb_printf ( ""%s%hd"" , i ? "","" : """" , w16 )"	2227:3:52009:52050	5183442	1	True				
ANR	5183594	CallExpression	"p -> cb_printf ( ""%s%hd"" , i ? "","" : """" , w16 )"		5183442	0					
ANR	5183595	Callee	p -> cb_printf		5183442	0					
ANR	5183596	PtrMemberAccess	p -> cb_printf		5183442	0					
ANR	5183597	Identifier	p		5183442	0					
ANR	5183598	Identifier	cb_printf		5183442	1					
ANR	5183599	ArgumentList	"""%s%hd"""		5183442	1					
ANR	5183600	Argument	"""%s%hd"""		5183442	0					
ANR	5183601	PrimaryExpression	"""%s%hd"""		5183442	0					
ANR	5183602	Argument	"i ? "","" : """""		5183442	1					
ANR	5183603	ConditionalExpression	"i ? "","" : """""		5183442	0					
ANR	5183604	Condition	i		5183442	0					
ANR	5183605	Identifier	i		5183442	0					
ANR	5183606	PrimaryExpression	""","""		5183442	1					
ANR	5183607	PrimaryExpression	""""""		5183442	2					
ANR	5183608	Argument	w16		5183442	2					
ANR	5183609	Identifier	w16		5183442	0					
ANR	5183610	BreakStatement	break ;	2228:3:52055:52060	5183442	2	True				
ANR	5183611	Label	case 32 :	2230:2:52068:52075	5183442	4	True				
ANR	5183612	CompoundStatement		27:3:573:623	5183442	5					
ANR	5183613	IdentifierDeclStatement	"ut32 w32 = r_read_ble32 ( & buf32 [ i ] , p -> big_endian ) ;"	2231:3:52082:52132	5183442	0	True				
ANR	5183614	IdentifierDecl	"w32 = r_read_ble32 ( & buf32 [ i ] , p -> big_endian )"		5183442	0					
ANR	5183615	IdentifierDeclType	ut32		5183442	0					
ANR	5183616	Identifier	w32		5183442	1					
ANR	5183617	AssignmentExpression	"w32 = r_read_ble32 ( & buf32 [ i ] , p -> big_endian )"		5183442	2		=			
ANR	5183618	Identifier	w32		5183442	0					
ANR	5183619	CallExpression	"r_read_ble32 ( & buf32 [ i ] , p -> big_endian )"		5183442	1					
ANR	5183620	Callee	r_read_ble32		5183442	0					
ANR	5183621	Identifier	r_read_ble32		5183442	0					
ANR	5183622	ArgumentList	& buf32 [ i ]		5183442	1					
ANR	5183623	Argument	& buf32 [ i ]		5183442	0					
ANR	5183624	UnaryOperationExpression	& buf32 [ i ]		5183442	0					
ANR	5183625	UnaryOperator	&		5183442	0					
ANR	5183626	ArrayIndexing	buf32 [ i ]		5183442	1					
ANR	5183627	Identifier	buf32		5183442	0					
ANR	5183628	Identifier	i		5183442	1					
ANR	5183629	Argument	p -> big_endian		5183442	1					
ANR	5183630	PtrMemberAccess	p -> big_endian		5183442	0					
ANR	5183631	Identifier	p		5183442	0					
ANR	5183632	Identifier	big_endian		5183442	1					
ANR	5183633	ExpressionStatement	"p -> cb_printf ( ""%s%d"" , i ? "","" : """" , w32 )"	2232:3:52137:52177	5183442	1	True				
ANR	5183634	CallExpression	"p -> cb_printf ( ""%s%d"" , i ? "","" : """" , w32 )"		5183442	0					
ANR	5183635	Callee	p -> cb_printf		5183442	0					
ANR	5183636	PtrMemberAccess	p -> cb_printf		5183442	0					
ANR	5183637	Identifier	p		5183442	0					
ANR	5183638	Identifier	cb_printf		5183442	1					
ANR	5183639	ArgumentList	"""%s%d"""		5183442	1					
ANR	5183640	Argument	"""%s%d"""		5183442	0					
ANR	5183641	PrimaryExpression	"""%s%d"""		5183442	0					
ANR	5183642	Argument	"i ? "","" : """""		5183442	1					
ANR	5183643	ConditionalExpression	"i ? "","" : """""		5183442	0					
ANR	5183644	Condition	i		5183442	0					
ANR	5183645	Identifier	i		5183442	0					
ANR	5183646	PrimaryExpression	""","""		5183442	1					
ANR	5183647	PrimaryExpression	""""""		5183442	2					
ANR	5183648	Argument	w32		5183442	2					
ANR	5183649	Identifier	w32		5183442	0					
ANR	5183650	BreakStatement	break ;	2233:3:52182:52187	5183442	2	True				
ANR	5183651	Label	case 64 :	2235:2:52195:52202	5183442	6	True				
ANR	5183652	CompoundStatement		32:3:700:750	5183442	7					
ANR	5183653	IdentifierDeclStatement	"ut64 w64 = r_read_ble64 ( & buf64 [ i ] , p -> big_endian ) ;"	2236:3:52209:52259	5183442	0	True				
ANR	5183654	IdentifierDecl	"w64 = r_read_ble64 ( & buf64 [ i ] , p -> big_endian )"		5183442	0					
ANR	5183655	IdentifierDeclType	ut64		5183442	0					
ANR	5183656	Identifier	w64		5183442	1					
ANR	5183657	AssignmentExpression	"w64 = r_read_ble64 ( & buf64 [ i ] , p -> big_endian )"		5183442	2		=			
ANR	5183658	Identifier	w64		5183442	0					
ANR	5183659	CallExpression	"r_read_ble64 ( & buf64 [ i ] , p -> big_endian )"		5183442	1					
ANR	5183660	Callee	r_read_ble64		5183442	0					
ANR	5183661	Identifier	r_read_ble64		5183442	0					
ANR	5183662	ArgumentList	& buf64 [ i ]		5183442	1					
ANR	5183663	Argument	& buf64 [ i ]		5183442	0					
ANR	5183664	UnaryOperationExpression	& buf64 [ i ]		5183442	0					
ANR	5183665	UnaryOperator	&		5183442	0					
ANR	5183666	ArrayIndexing	buf64 [ i ]		5183442	1					
ANR	5183667	Identifier	buf64		5183442	0					
ANR	5183668	Identifier	i		5183442	1					
ANR	5183669	Argument	p -> big_endian		5183442	1					
ANR	5183670	PtrMemberAccess	p -> big_endian		5183442	0					
ANR	5183671	Identifier	p		5183442	0					
ANR	5183672	Identifier	big_endian		5183442	1					
ANR	5183673	Statement	p	2237:3:52264:52264	5183442	1	True				
ANR	5183674	Statement	->	2237:4:52265:52266	5183442	2	True				
ANR	5183675	Statement	cb_printf	2237:6:52267:52275	5183442	3	True				
ANR	5183676	Statement	(	2237:16:52277:52277	5183442	4	True				
ANR	5183677	Statement	"""%s%"""	2237:17:52278:52282	5183442	5	True				
ANR	5183678	Statement	PFMT64d	2237:22:52283:52289	5183442	6	True				
ANR	5183679	Statement	","	2237:29:52290:52290	5183442	7	True				
ANR	5183680	Statement	i	2237:31:52292:52292	5183442	8	True				
ANR	5183681	Statement	?	2237:33:52294:52294	5183442	9	True				
ANR	5183682	Statement	""","""	2237:35:52296:52298	5183442	10	True				
ANR	5183683	Statement	:	2237:39:52300:52300	5183442	11	True				
ANR	5183684	Statement	""""""	2237:41:52302:52303	5183442	12	True				
ANR	5183685	Statement	","	2237:43:52304:52304	5183442	13	True				
ANR	5183686	Statement	w64	2237:45:52306:52308	5183442	14	True				
ANR	5183687	Statement	)	2237:48:52309:52309	5183442	15	True				
ANR	5183688	ExpressionStatement		2237:49:52310:52310	5183442	16	True				
ANR	5183689	BreakStatement	break ;	2238:3:52315:52320	5183442	17	True				
ANR	5183690	ExpressionStatement	"p -> cb_printf ( ""]\\n"" )"	2242:1:52334:52354	5183442	9	True				
ANR	5183691	CallExpression	"p -> cb_printf ( ""]\\n"" )"		5183442	0					
ANR	5183692	Callee	p -> cb_printf		5183442	0					
ANR	5183693	PtrMemberAccess	p -> cb_printf		5183442	0					
ANR	5183694	Identifier	p		5183442	0					
ANR	5183695	Identifier	cb_printf		5183442	1					
ANR	5183696	ArgumentList	"""]\\n"""		5183442	1					
ANR	5183697	Argument	"""]\\n"""		5183442	0					
ANR	5183698	PrimaryExpression	"""]\\n"""		5183442	0					
ANR	5183699	ReturnStatement	return words ;	2243:1:52357:52369	5183442	10	True				
ANR	5183700	Identifier	words		5183442	0					
ANR	5183701	ReturnType	R_API int		5183442	1					
ANR	5183702	Identifier	r_print_jsondump		5183442	2					
ANR	5183703	ParameterList	"RPrint * p , const ut8 * buf , int len , int wordsize"		5183442	3					
ANR	5183704	Parameter	RPrint * p	2205:27:51458:51466	5183442	0	True				
ANR	5183705	ParameterType	RPrint *		5183442	0					
ANR	5183706	Identifier	p		5183442	1					
ANR	5183707	Parameter	const ut8 * buf	2205:38:51469:51482	5183442	1	True				
ANR	5183708	ParameterType	const ut8 *		5183442	0					
ANR	5183709	Identifier	buf		5183442	1					
ANR	5183710	Parameter	int len	2205:54:51485:51491	5183442	2	True				
ANR	5183711	ParameterType	int		5183442	0					
ANR	5183712	Identifier	len		5183442	1					
ANR	5183713	Parameter	int wordsize	2205:63:51494:51505	5183442	3	True				
ANR	5183714	ParameterType	int		5183442	0					
ANR	5183715	Identifier	wordsize		5183442	1					
ANR	5183716	CFGEntryNode	ENTRY		5183442		True				
ANR	5183717	CFGExitNode	EXIT		5183442		True				
ANR	5183718	Symbol	* buf		5183442						
ANR	5183719	Symbol	buf16		5183442						
ANR	5183720	Symbol	r_read_ble16		5183442						
ANR	5183721	Symbol	words		5183442						
ANR	5183722	Symbol	buf32		5183442						
ANR	5183723	Symbol	i		5183442						
ANR	5183724	Symbol	buf64		5183442						
ANR	5183725	Symbol	p		5183442						
ANR	5183726	Symbol	buf		5183442						
ANR	5183727	Symbol	* i		5183442						
ANR	5183728	Symbol	p -> big_endian		5183442						
ANR	5183729	Symbol	len		5183442						
ANR	5183730	Symbol	wordsize		5183442						
ANR	5183731	Symbol	w64		5183442						
ANR	5183732	Symbol	bytesize		5183442						
ANR	5183733	Symbol	w32		5183442						
ANR	5183734	Symbol	* p		5183442						
ANR	5183735	Symbol	w16		5183442						
ANR	5183736	Symbol	r_read_ble32		5183442						
ANR	5183737	Symbol	r_read_ble64		5183442						
ANR	5183738	Function	r_print_hex_from_bin	2246:0:52374:53130							
ANR	5183739	FunctionDef	"r_print_hex_from_bin (RPrint * p , char * bin_str)"		5183738	0					
ANR	5183740	CompoundStatement		2246:59:52433:53130	5183738	0					
ANR	5183741	IdentifierDeclStatement	"int i , j , index ;"	2247:1:52436:52451	5183738	0	True				
ANR	5183742	IdentifierDecl	i		5183738	0					
ANR	5183743	IdentifierDeclType	int		5183738	0					
ANR	5183744	Identifier	i		5183738	1					
ANR	5183745	IdentifierDecl	j		5183738	1					
ANR	5183746	IdentifierDeclType	int		5183738	0					
ANR	5183747	Identifier	j		5183738	1					
ANR	5183748	IdentifierDecl	index		5183738	2					
ANR	5183749	IdentifierDeclType	int		5183738	0					
ANR	5183750	Identifier	index		5183738	1					
ANR	5183751	Statement	RPrint	2248:1:52454:52459	5183738	1	True				
ANR	5183752	Statement	myp	2248:8:52461:52463	5183738	2	True				
ANR	5183753	Statement	=	2248:12:52465:52465	5183738	3	True				
ANR	5183754	CompoundStatement		3:14:33:33	5183738	4					
ANR	5183755	Statement	.	2248:15:52468:52468	5183738	0	True				
ANR	5183756	Statement	cb_printf	2248:16:52469:52477	5183738	1	True				
ANR	5183757	Statement	=	2248:26:52479:52479	5183738	2	True				
ANR	5183758	Statement	libc_printf	2248:28:52481:52491	5183738	3	True				
ANR	5183759	ExpressionStatement		2248:40:52493:52493	5183738	5	True				
ANR	5183760	IdentifierDeclStatement	const int len = strlen ( bin_str ) ;	2249:1:52496:52528	5183738	6	True				
ANR	5183761	IdentifierDecl	len = strlen ( bin_str )		5183738	0					
ANR	5183762	IdentifierDeclType	const int		5183738	0					
ANR	5183763	Identifier	len		5183738	1					
ANR	5183764	AssignmentExpression	len = strlen ( bin_str )		5183738	2		=			
ANR	5183765	Identifier	len		5183738	0					
ANR	5183766	CallExpression	strlen ( bin_str )		5183738	1					
ANR	5183767	Callee	strlen		5183738	0					
ANR	5183768	Identifier	strlen		5183738	0					
ANR	5183769	ArgumentList	bin_str		5183738	1					
ANR	5183770	Argument	bin_str		5183738	0					
ANR	5183771	Identifier	bin_str		5183738	0					
ANR	5183772	IfStatement	if ( ! len )		5183738	7					
ANR	5183773	Condition	! len	2250:5:52535:52538	5183738	0	True				
ANR	5183774	UnaryOperationExpression	! len		5183738	0					
ANR	5183775	UnaryOperator	!		5183738	0					
ANR	5183776	Identifier	len		5183738	1					
ANR	5183777	CompoundStatement		5:11:107:107	5183738	1					
ANR	5183778	ReturnStatement	return ;	2251:2:52545:52551	5183738	0	True				
ANR	5183779	IdentifierDeclStatement	"ut64 n , * buf = malloc ( sizeof ( ut64 ) * ( ( len + 63 ) / 64 ) ) ;"	2253:1:52557:52614	5183738	8	True				
ANR	5183780	IdentifierDecl	n		5183738	0					
ANR	5183781	IdentifierDeclType	ut64		5183738	0					
ANR	5183782	Identifier	n		5183738	1					
ANR	5183783	IdentifierDecl	* buf = malloc ( sizeof ( ut64 ) * ( ( len + 63 ) / 64 ) )		5183738	1					
ANR	5183784	IdentifierDeclType	ut64 *		5183738	0					
ANR	5183785	Identifier	buf		5183738	1					
ANR	5183786	AssignmentExpression	* buf = malloc ( sizeof ( ut64 ) * ( ( len + 63 ) / 64 ) )		5183738	2		=			
ANR	5183787	Identifier	buf		5183738	0					
ANR	5183788	CallExpression	malloc ( sizeof ( ut64 ) * ( ( len + 63 ) / 64 ) )		5183738	1					
ANR	5183789	Callee	malloc		5183738	0					
ANR	5183790	Identifier	malloc		5183738	0					
ANR	5183791	ArgumentList	sizeof ( ut64 ) * ( ( len + 63 ) / 64 )		5183738	1					
ANR	5183792	Argument	sizeof ( ut64 ) * ( ( len + 63 ) / 64 )		5183738	0					
ANR	5183793	MultiplicativeExpression	sizeof ( ut64 ) * ( ( len + 63 ) / 64 )		5183738	0		*			
ANR	5183794	SizeofExpression	sizeof ( ut64 )		5183738	0					
ANR	5183795	Sizeof	sizeof		5183738	0					
ANR	5183796	SizeofOperand	ut64		5183738	1					
ANR	5183797	MultiplicativeExpression	( len + 63 ) / 64		5183738	1		/			
ANR	5183798	AdditiveExpression	len + 63		5183738	0		+			
ANR	5183799	Identifier	len		5183738	0					
ANR	5183800	PrimaryExpression	63		5183738	1					
ANR	5183801	PrimaryExpression	64		5183738	1					
ANR	5183802	IfStatement	if ( ! buf )		5183738	9					
ANR	5183803	Condition	! buf	2254:5:52621:52624	5183738	0	True				
ANR	5183804	UnaryOperationExpression	! buf		5183738	0					
ANR	5183805	UnaryOperator	!		5183738	0					
ANR	5183806	Identifier	buf		5183738	1					
ANR	5183807	CompoundStatement		9:11:193:193	5183738	1					
ANR	5183808	ExpressionStatement	"eprintf ( ""allocation failed\\n"" )"	2255:2:52631:52662	5183738	0	True				
ANR	5183809	CallExpression	"eprintf ( ""allocation failed\\n"" )"		5183738	0					
ANR	5183810	Callee	eprintf		5183738	0					
ANR	5183811	Identifier	eprintf		5183738	0					
ANR	5183812	ArgumentList	"""allocation failed\\n"""		5183738	1					
ANR	5183813	Argument	"""allocation failed\\n"""		5183738	0					
ANR	5183814	PrimaryExpression	"""allocation failed\\n"""		5183738	0					
ANR	5183815	ReturnStatement	return ;	2256:2:52666:52672	5183738	1	True				
ANR	5183816	IfStatement	if ( ! p )		5183738	10					
ANR	5183817	Condition	! p	2258:5:52682:52683	5183738	0	True				
ANR	5183818	UnaryOperationExpression	! p		5183738	0					
ANR	5183819	UnaryOperator	!		5183738	0					
ANR	5183820	Identifier	p		5183738	1					
ANR	5183821	CompoundStatement		13:9:252:252	5183738	1					
ANR	5183822	ExpressionStatement	p = & myp	2259:2:52690:52698	5183738	0	True				
ANR	5183823	AssignmentExpression	p = & myp		5183738	0		=			
ANR	5183824	Identifier	p		5183738	0					
ANR	5183825	UnaryOperationExpression	& myp		5183738	1					
ANR	5183826	UnaryOperator	&		5183738	0					
ANR	5183827	Identifier	myp		5183738	1					
ANR	5183828	ForStatement	"for ( i = len - 1 , index = 0 ; i >= 0 ; i -= 64 , index ++ )"		5183738	11					
ANR	5183829	ForInit	"i = len - 1 , index = 0 ;"	2261:6:52709:52731	5183738	0	True				
ANR	5183830	Expression	"i = len - 1 , index = 0"		5183738	0					
ANR	5183831	AssignmentExpression	i = len - 1		5183738	0		=			
ANR	5183832	Identifier	i		5183738	0					
ANR	5183833	AdditiveExpression	len - 1		5183738	1		-			
ANR	5183834	Identifier	len		5183738	0					
ANR	5183835	PrimaryExpression	1		5183738	1					
ANR	5183836	AssignmentExpression	index = 0		5183738	1		=			
ANR	5183837	Identifier	index		5183738	0					
ANR	5183838	PrimaryExpression	0		5183738	1					
ANR	5183839	Condition	i >= 0	2261:30:52733:52738	5183738	1	True				
ANR	5183840	RelationalExpression	i >= 0		5183738	0		>=			
ANR	5183841	Identifier	i		5183738	0					
ANR	5183842	PrimaryExpression	0		5183738	1					
ANR	5183843	Expression	"i -= 64 , index ++"	2261:38:52741:52756	5183738	2	True				
ANR	5183844	AssignmentExpression	i -= 64		5183738	0		-=			
ANR	5183845	Identifier	i		5183738	0					
ANR	5183846	PrimaryExpression	64		5183738	1					
ANR	5183847	PostIncDecOperationExpression	index ++		5183738	1					
ANR	5183848	Identifier	index		5183738	0					
ANR	5183849	IncDec	++		5183738	1					
ANR	5183850	CompoundStatement		16:56:325:325	5183738	3					
ANR	5183851	ExpressionStatement	n = 0	2262:2:52763:52768	5183738	0	True				
ANR	5183852	AssignmentExpression	n = 0		5183738	0		=			
ANR	5183853	Identifier	n		5183738	0					
ANR	5183854	PrimaryExpression	0		5183738	1					
ANR	5183855	ForStatement	for ( j = 0 ; j < 64 && i - j >= 0 ; j ++ )		5183738	1					
ANR	5183856	ForInit	j = 0 ;	2263:7:52777:52782	5183738	0	True				
ANR	5183857	AssignmentExpression	j = 0		5183738	0		=			
ANR	5183858	Identifier	j		5183738	0					
ANR	5183859	PrimaryExpression	0		5183738	1					
ANR	5183860	Condition	j < 64 && i - j >= 0	2263:14:52784:52803	5183738	1	True				
ANR	5183861	AndExpression	j < 64 && i - j >= 0		5183738	0		&&			
ANR	5183862	RelationalExpression	j < 64		5183738	0		<			
ANR	5183863	Identifier	j		5183738	0					
ANR	5183864	PrimaryExpression	64		5183738	1					
ANR	5183865	RelationalExpression	i - j >= 0		5183738	1		>=			
ANR	5183866	AdditiveExpression	i - j		5183738	0		-			
ANR	5183867	Identifier	i		5183738	0					
ANR	5183868	Identifier	j		5183738	1					
ANR	5183869	PrimaryExpression	0		5183738	1					
ANR	5183870	PostIncDecOperationExpression	j ++	2263:36:52806:52808	5183738	2	True				
ANR	5183871	Identifier	j		5183738	0					
ANR	5183872	IncDec	++		5183738	1					
ANR	5183873	CompoundStatement		18:41:377:377	5183738	3					
ANR	5183874	ExpressionStatement	n += ( ut64 ) ( bin_str [ i - j ] - '0' ) << j	2264:3:52816:52855	5183738	0	True				
ANR	5183875	AssignmentExpression	n += ( ut64 ) ( bin_str [ i - j ] - '0' ) << j		5183738	0		+=			
ANR	5183876	Identifier	n		5183738	0					
ANR	5183877	ShiftExpression	( ut64 ) ( bin_str [ i - j ] - '0' ) << j		5183738	1		<<			
ANR	5183878	CastExpression	( ut64 ) ( bin_str [ i - j ] - '0' )		5183738	0					
ANR	5183879	CastTarget	ut64		5183738	0					
ANR	5183880	AdditiveExpression	bin_str [ i - j ] - '0'		5183738	1		-			
ANR	5183881	ArrayIndexing	bin_str [ i - j ]		5183738	0					
ANR	5183882	Identifier	bin_str		5183738	0					
ANR	5183883	AdditiveExpression	i - j		5183738	1		-			
ANR	5183884	Identifier	i		5183738	0					
ANR	5183885	Identifier	j		5183738	1					
ANR	5183886	PrimaryExpression	'0'		5183738	1					
ANR	5183887	Identifier	j		5183738	1					
ANR	5183888	ExpressionStatement	buf [ index ] = n	2266:2:52863:52877	5183738	2	True				
ANR	5183889	AssignmentExpression	buf [ index ] = n		5183738	0		=			
ANR	5183890	ArrayIndexing	buf [ index ]		5183738	0					
ANR	5183891	Identifier	buf		5183738	0					
ANR	5183892	Identifier	index		5183738	1					
ANR	5183893	Identifier	n		5183738	1					
ANR	5183894	ExpressionStatement	index --	2268:1:52883:52890	5183738	12	True				
ANR	5183895	PostIncDecOperationExpression	index --		5183738	0					
ANR	5183896	Identifier	index		5183738	0					
ANR	5183897	IncDec	--		5183738	1					
ANR	5183898	ExpressionStatement	"p -> cb_printf ( ""0x"" )"	2269:1:52893:52912	5183738	13	True				
ANR	5183899	CallExpression	"p -> cb_printf ( ""0x"" )"		5183738	0					
ANR	5183900	Callee	p -> cb_printf		5183738	0					
ANR	5183901	PtrMemberAccess	p -> cb_printf		5183738	0					
ANR	5183902	Identifier	p		5183738	0					
ANR	5183903	Identifier	cb_printf		5183738	1					
ANR	5183904	ArgumentList	"""0x"""		5183738	1					
ANR	5183905	Argument	"""0x"""		5183738	0					
ANR	5183906	PrimaryExpression	"""0x"""		5183738	0					
ANR	5183907	WhileStatement	while ( buf [ index ] == 0 && index > 0 )		5183738	14					
ANR	5183908	Condition	buf [ index ] == 0 && index > 0	2270:8:52922:52949	5183738	0	True				
ANR	5183909	AndExpression	buf [ index ] == 0 && index > 0		5183738	0		&&			
ANR	5183910	EqualityExpression	buf [ index ] == 0		5183738	0		==			
ANR	5183911	ArrayIndexing	buf [ index ]		5183738	0					
ANR	5183912	Identifier	buf		5183738	0					
ANR	5183913	Identifier	index		5183738	1					
ANR	5183914	PrimaryExpression	0		5183738	1					
ANR	5183915	RelationalExpression	index > 0		5183738	1		>			
ANR	5183916	Identifier	index		5183738	0					
ANR	5183917	PrimaryExpression	0		5183738	1					
ANR	5183918	CompoundStatement		25:38:518:518	5183738	1					
ANR	5183919	ExpressionStatement	index --	2271:2:52956:52963	5183738	0	True				
ANR	5183920	PostIncDecOperationExpression	index --		5183738	0					
ANR	5183921	Identifier	index		5183738	0					
ANR	5183922	IncDec	--		5183738	1					
ANR	5183923	Statement	p	2273:1:52969:52969	5183738	15	True				
ANR	5183924	Statement	->	2273:2:52970:52971	5183738	16	True				
ANR	5183925	Statement	cb_printf	2273:4:52972:52980	5183738	17	True				
ANR	5183926	Statement	(	2273:14:52982:52982	5183738	18	True				
ANR	5183927	Statement	"""%"""	2273:15:52983:52985	5183738	19	True				
ANR	5183928	Statement	PFMT64x	2273:19:52987:52993	5183738	20	True				
ANR	5183929	Statement	","	2273:26:52994:52994	5183738	21	True				
ANR	5183930	Statement	buf	2273:28:52996:52998	5183738	22	True				
ANR	5183931	Statement	[	2273:31:52999:52999	5183738	23	True				
ANR	5183932	Statement	index	2273:32:53000:53004	5183738	24	True				
ANR	5183933	Statement	]	2273:37:53005:53005	5183738	25	True				
ANR	5183934	Statement	)	2273:38:53006:53006	5183738	26	True				
ANR	5183935	ExpressionStatement		2273:39:53007:53007	5183738	27	True				
ANR	5183936	ExpressionStatement	index --	2274:1:53010:53017	5183738	28	True				
ANR	5183937	PostIncDecOperationExpression	index --		5183738	0					
ANR	5183938	Identifier	index		5183738	0					
ANR	5183939	IncDec	--		5183738	1					
ANR	5183940	ForStatement	for ( i = index ; i >= 0 ; i -- )		5183738	29					
ANR	5183941	ForInit	i = index ;	2275:6:53025:53034	5183738	0	True				
ANR	5183942	AssignmentExpression	i = index		5183738	0		=			
ANR	5183943	Identifier	i		5183738	0					
ANR	5183944	Identifier	index		5183738	1					
ANR	5183945	Condition	i >= 0	2275:17:53036:53041	5183738	1	True				
ANR	5183946	RelationalExpression	i >= 0		5183738	0		>=			
ANR	5183947	Identifier	i		5183738	0					
ANR	5183948	PrimaryExpression	0		5183738	1					
ANR	5183949	PostIncDecOperationExpression	i --	2275:25:53044:53046	5183738	2	True				
ANR	5183950	Identifier	i		5183738	0					
ANR	5183951	IncDec	--		5183738	1					
ANR	5183952	CompoundStatement		30:30:615:615	5183738	3					
ANR	5183953	Statement	p	2276:2:53053:53053	5183738	0	True				
ANR	5183954	Statement	->	2276:3:53054:53055	5183738	1	True				
ANR	5183955	Statement	cb_printf	2276:5:53056:53064	5183738	2	True				
ANR	5183956	Statement	(	2276:15:53066:53066	5183738	3	True				
ANR	5183957	Statement	"""%016"""	2276:16:53067:53072	5183738	4	True				
ANR	5183958	Statement	PFMT64x	2276:23:53074:53080	5183738	5	True				
ANR	5183959	Statement	","	2276:30:53081:53081	5183738	6	True				
ANR	5183960	Statement	buf	2276:32:53083:53085	5183738	7	True				
ANR	5183961	Statement	[	2276:35:53086:53086	5183738	8	True				
ANR	5183962	Statement	i	2276:36:53087:53087	5183738	9	True				
ANR	5183963	Statement	]	2276:37:53088:53088	5183738	10	True				
ANR	5183964	Statement	)	2276:38:53089:53089	5183738	11	True				
ANR	5183965	ExpressionStatement		2276:39:53090:53090	5183738	12	True				
ANR	5183966	ExpressionStatement	"p -> cb_printf ( ""\\n"" )"	2278:1:53096:53115	5183738	30	True				
ANR	5183967	CallExpression	"p -> cb_printf ( ""\\n"" )"		5183738	0					
ANR	5183968	Callee	p -> cb_printf		5183738	0					
ANR	5183969	PtrMemberAccess	p -> cb_printf		5183738	0					
ANR	5183970	Identifier	p		5183738	0					
ANR	5183971	Identifier	cb_printf		5183738	1					
ANR	5183972	ArgumentList	"""\\n"""		5183738	1					
ANR	5183973	Argument	"""\\n"""		5183738	0					
ANR	5183974	PrimaryExpression	"""\\n"""		5183738	0					
ANR	5183975	ExpressionStatement	free ( buf )	2279:1:53118:53128	5183738	31	True				
ANR	5183976	CallExpression	free ( buf )		5183738	0					
ANR	5183977	Callee	free		5183738	0					
ANR	5183978	Identifier	free		5183738	0					
ANR	5183979	ArgumentList	buf		5183738	1					
ANR	5183980	Argument	buf		5183738	0					
ANR	5183981	Identifier	buf		5183738	0					
ANR	5183982	ReturnType	R_API void		5183738	1					
ANR	5183983	Identifier	r_print_hex_from_bin		5183738	2					
ANR	5183984	ParameterList	"RPrint * p , char * bin_str"		5183738	3					
ANR	5183985	Parameter	RPrint * p	2246:33:52407:52415	5183738	0	True				
ANR	5183986	ParameterType	RPrint *		5183738	0					
ANR	5183987	Identifier	p		5183738	1					
ANR	5183988	Parameter	char * bin_str	2246:44:52418:52430	5183738	1	True				
ANR	5183989	ParameterType	char *		5183738	0					
ANR	5183990	Identifier	bin_str		5183738	1					
ANR	5183991	CFGEntryNode	ENTRY		5183738		True				
ANR	5183992	CFGExitNode	EXIT		5183738		True				
ANR	5183993	Symbol	malloc		5183738						
ANR	5183994	Symbol	* buf		5183738						
ANR	5183995	Symbol	* index		5183738						
ANR	5183996	Symbol	i		5183738						
ANR	5183997	Symbol	index		5183738						
ANR	5183998	Symbol	* bin_str		5183738						
ANR	5183999	Symbol	j		5183738						
ANR	5184000	Symbol	& myp		5183738						
ANR	5184001	Symbol	n		5183738						
ANR	5184002	Symbol	p		5183738						
ANR	5184003	Symbol	strlen		5183738						
ANR	5184004	Symbol	buf		5183738						
ANR	5184005	Symbol	bin_str		5183738						
ANR	5184006	Symbol	* i		5183738						
ANR	5184007	Symbol	len		5183738						
ANR	5184008	Symbol	* j		5183738						
ANR	5184009	Function	r_print_rowlog	2282:6:53139:53521							
ANR	5184010	FunctionDef	"r_print_rowlog (RPrint * print , const char * str)"		5184009	0					
ANR	5184011	CompoundStatement		2282:65:53198:53521	5184009	0					
ANR	5184012	IdentifierDeclStatement	int use_color = print -> flags & R_PRINT_FLAGS_COLOR ;	2283:1:53201:53251	5184009	0	True				
ANR	5184013	IdentifierDecl	use_color = print -> flags & R_PRINT_FLAGS_COLOR		5184009	0					
ANR	5184014	IdentifierDeclType	int		5184009	0					
ANR	5184015	Identifier	use_color		5184009	1					
ANR	5184016	AssignmentExpression	use_color = print -> flags & R_PRINT_FLAGS_COLOR		5184009	2		=			
ANR	5184017	Identifier	use_color		5184009	0					
ANR	5184018	BitAndExpression	print -> flags & R_PRINT_FLAGS_COLOR		5184009	1		&			
ANR	5184019	PtrMemberAccess	print -> flags		5184009	0					
ANR	5184020	Identifier	print		5184009	0					
ANR	5184021	Identifier	flags		5184009	1					
ANR	5184022	Identifier	R_PRINT_FLAGS_COLOR		5184009	1					
ANR	5184023	IdentifierDeclStatement	bool verbose = print -> scr_prompt ;	2284:1:53254:53286	5184009	1	True				
ANR	5184024	IdentifierDecl	verbose = print -> scr_prompt		5184009	0					
ANR	5184025	IdentifierDeclType	bool		5184009	0					
ANR	5184026	Identifier	verbose		5184009	1					
ANR	5184027	AssignmentExpression	verbose = print -> scr_prompt		5184009	2		=			
ANR	5184028	Identifier	verbose		5184009	0					
ANR	5184029	PtrMemberAccess	print -> scr_prompt		5184009	1					
ANR	5184030	Identifier	print		5184009	0					
ANR	5184031	Identifier	scr_prompt		5184009	1					
ANR	5184032	ExpressionStatement	"r_return_val_if_fail ( print -> cb_eprintf , NULL )"	2285:1:53289:53335	5184009	2	True				
ANR	5184033	CallExpression	"r_return_val_if_fail ( print -> cb_eprintf , NULL )"		5184009	0					
ANR	5184034	Callee	r_return_val_if_fail		5184009	0					
ANR	5184035	Identifier	r_return_val_if_fail		5184009	0					
ANR	5184036	ArgumentList	print -> cb_eprintf		5184009	1					
ANR	5184037	Argument	print -> cb_eprintf		5184009	0					
ANR	5184038	PtrMemberAccess	print -> cb_eprintf		5184009	0					
ANR	5184039	Identifier	print		5184009	0					
ANR	5184040	Identifier	cb_eprintf		5184009	1					
ANR	5184041	Argument	NULL		5184009	1					
ANR	5184042	Identifier	NULL		5184009	0					
ANR	5184043	IfStatement	if ( ! verbose )		5184009	3					
ANR	5184044	Condition	! verbose	2286:5:53342:53349	5184009	0	True				
ANR	5184045	UnaryOperationExpression	! verbose		5184009	0					
ANR	5184046	UnaryOperator	!		5184009	0					
ANR	5184047	Identifier	verbose		5184009	1					
ANR	5184048	CompoundStatement		5:15:153:153	5184009	1					
ANR	5184049	ReturnStatement	return NULL ;	2287:2:53356:53367	5184009	0	True				
ANR	5184050	Identifier	NULL		5184009	0					
ANR	5184051	IfStatement	if ( use_color )		5184009	4					
ANR	5184052	Condition	use_color	2289:5:53377:53385	5184009	0	True				
ANR	5184053	Identifier	use_color		5184009	0					
ANR	5184054	CompoundStatement		8:16:189:189	5184009	1					
ANR	5184055	Statement	print	2290:2:53392:53396	5184009	0	True				
ANR	5184056	Statement	->	2290:7:53397:53398	5184009	1	True				
ANR	5184057	Statement	cb_eprintf	2290:9:53399:53408	5184009	2	True				
ANR	5184058	Statement	(	2290:20:53410:53410	5184009	3	True				
ANR	5184059	Statement	"""[ ] """	2290:21:53411:53416	5184009	4	True				
ANR	5184060	Statement	Color_YELLOW	2290:27:53417:53428	5184009	5	True				
ANR	5184061	Statement	"""%s\\r["""	2290:39:53429:53435	5184009	6	True				
ANR	5184062	Statement	Color_RESET	2290:46:53436:53446	5184009	7	True				
ANR	5184063	Statement	","	2290:57:53447:53447	5184009	8	True				
ANR	5184064	Statement	str	2290:59:53449:53451	5184009	9	True				
ANR	5184065	Statement	)	2290:62:53452:53452	5184009	10	True				
ANR	5184066	ExpressionStatement		2290:63:53453:53453	5184009	11	True				
ANR	5184067	ElseStatement	else		5184009	0					
ANR	5184068	CompoundStatement		10:8:264:264	5184009	0					
ANR	5184069	ExpressionStatement	"print -> cb_eprintf ( ""[ ] %s\\r["" , str )"	2292:2:53467:53503	5184009	0	True				
ANR	5184070	CallExpression	"print -> cb_eprintf ( ""[ ] %s\\r["" , str )"		5184009	0					
ANR	5184071	Callee	print -> cb_eprintf		5184009	0					
ANR	5184072	PtrMemberAccess	print -> cb_eprintf		5184009	0					
ANR	5184073	Identifier	print		5184009	0					
ANR	5184074	Identifier	cb_eprintf		5184009	1					
ANR	5184075	ArgumentList	"""[ ] %s\\r["""		5184009	1					
ANR	5184076	Argument	"""[ ] %s\\r["""		5184009	0					
ANR	5184077	PrimaryExpression	"""[ ] %s\\r["""		5184009	0					
ANR	5184078	Argument	str		5184009	1					
ANR	5184079	Identifier	str		5184009	0					
ANR	5184080	ReturnStatement	return str ;	2294:1:53509:53519	5184009	5	True				
ANR	5184081	Identifier	str		5184009	0					
ANR	5184082	ReturnType	const char *		5184009	1					
ANR	5184083	Identifier	r_print_rowlog		5184009	2					
ANR	5184084	ParameterList	"RPrint * print , const char * str"		5184009	3					
ANR	5184085	Parameter	RPrint * print	2282:33:53166:53178	5184009	0	True				
ANR	5184086	ParameterType	RPrint *		5184009	0					
ANR	5184087	Identifier	print		5184009	1					
ANR	5184088	Parameter	const char * str	2282:48:53181:53195	5184009	1	True				
ANR	5184089	ParameterType	const char *		5184009	0					
ANR	5184090	Identifier	str		5184009	1					
ANR	5184091	CFGEntryNode	ENTRY		5184009		True				
ANR	5184092	CFGExitNode	EXIT		5184009		True				
ANR	5184093	Symbol	str		5184009						
ANR	5184094	Symbol	print -> flags		5184009						
ANR	5184095	Symbol	print		5184009						
ANR	5184096	Symbol	print -> cb_eprintf		5184009						
ANR	5184097	Symbol	NULL		5184009						
ANR	5184098	Symbol	print -> scr_prompt		5184009						
ANR	5184099	Symbol	* print		5184009						
ANR	5184100	Symbol	R_PRINT_FLAGS_COLOR		5184009						
ANR	5184101	Symbol	use_color		5184009						
ANR	5184102	Symbol	verbose		5184009						
ANR	5184103	Function	r_print_rowlog_done	2297:0:53524:53880							
ANR	5184104	FunctionDef	"r_print_rowlog_done (RPrint * print , const char * str)"		5184103	0					
ANR	5184105	CompoundStatement		2297:63:53587:53880	5184103	0					
ANR	5184106	IdentifierDeclStatement	int use_color = print -> flags & R_PRINT_FLAGS_COLOR ;	2298:1:53590:53640	5184103	0	True				
ANR	5184107	IdentifierDecl	use_color = print -> flags & R_PRINT_FLAGS_COLOR		5184103	0					
ANR	5184108	IdentifierDeclType	int		5184103	0					
ANR	5184109	Identifier	use_color		5184103	1					
ANR	5184110	AssignmentExpression	use_color = print -> flags & R_PRINT_FLAGS_COLOR		5184103	2		=			
ANR	5184111	Identifier	use_color		5184103	0					
ANR	5184112	BitAndExpression	print -> flags & R_PRINT_FLAGS_COLOR		5184103	1		&			
ANR	5184113	PtrMemberAccess	print -> flags		5184103	0					
ANR	5184114	Identifier	print		5184103	0					
ANR	5184115	Identifier	flags		5184103	1					
ANR	5184116	Identifier	R_PRINT_FLAGS_COLOR		5184103	1					
ANR	5184117	IdentifierDeclStatement	bool verbose = print -> scr_prompt ;	2299:1:53643:53676	5184103	1	True				
ANR	5184118	IdentifierDecl	verbose = print -> scr_prompt		5184103	0					
ANR	5184119	IdentifierDeclType	bool		5184103	0					
ANR	5184120	Identifier	verbose		5184103	1					
ANR	5184121	AssignmentExpression	verbose = print -> scr_prompt		5184103	2		=			
ANR	5184122	Identifier	verbose		5184103	0					
ANR	5184123	PtrMemberAccess	print -> scr_prompt		5184103	1					
ANR	5184124	Identifier	print		5184103	0					
ANR	5184125	Identifier	scr_prompt		5184103	1					
ANR	5184126	ExpressionStatement	r_return_if_fail ( print -> cb_eprintf )	2300:1:53679:53715	5184103	2	True				
ANR	5184127	CallExpression	r_return_if_fail ( print -> cb_eprintf )		5184103	0					
ANR	5184128	Callee	r_return_if_fail		5184103	0					
ANR	5184129	Identifier	r_return_if_fail		5184103	0					
ANR	5184130	ArgumentList	print -> cb_eprintf		5184103	1					
ANR	5184131	Argument	print -> cb_eprintf		5184103	0					
ANR	5184132	PtrMemberAccess	print -> cb_eprintf		5184103	0					
ANR	5184133	Identifier	print		5184103	0					
ANR	5184134	Identifier	cb_eprintf		5184103	1					
ANR	5184135	IfStatement	if ( verbose )		5184103	3					
ANR	5184136	Condition	verbose	2301:5:53722:53728	5184103	0	True				
ANR	5184137	Identifier	verbose		5184103	0					
ANR	5184138	CompoundStatement		5:14:143:143	5184103	1					
ANR	5184139	IfStatement	if ( use_color )		5184103	0					
ANR	5184140	Condition	use_color	2302:6:53739:53747	5184103	0	True				
ANR	5184141	Identifier	use_color		5184103	0					
ANR	5184142	CompoundStatement		6:17:162:162	5184103	1					
ANR	5184143	Statement	print	2303:3:53755:53759	5184103	0	True				
ANR	5184144	Statement	->	2303:8:53760:53761	5184103	1	True				
ANR	5184145	Statement	cb_eprintf	2303:10:53762:53771	5184103	2	True				
ANR	5184146	Statement	(	2303:21:53773:53773	5184103	3	True				
ANR	5184147	Statement	"""\\r"""	2303:22:53774:53777	5184103	4	True				
ANR	5184148	Statement	Color_GREEN	2303:26:53778:53788	5184103	5	True				
ANR	5184149	Statement	"""[x]"""	2303:37:53789:53793	5184103	6	True				
ANR	5184150	Statement	Color_RESET	2303:42:53794:53804	5184103	7	True				
ANR	5184151	Statement	""" %s\\n"""	2303:53:53805:53811	5184103	8	True				
ANR	5184152	Statement	","	2303:60:53812:53812	5184103	9	True				
ANR	5184153	Statement	str	2303:62:53814:53816	5184103	10	True				
ANR	5184154	Statement	)	2303:65:53817:53817	5184103	11	True				
ANR	5184155	ExpressionStatement		2303:66:53818:53818	5184103	12	True				
ANR	5184156	ElseStatement	else		5184103	0					
ANR	5184157	CompoundStatement		8:9:241:241	5184103	0					
ANR	5184158	ExpressionStatement	"print -> cb_eprintf ( ""\\r[x] %s\\n"" , str )"	2305:3:53834:53871	5184103	0	True				
ANR	5184159	CallExpression	"print -> cb_eprintf ( ""\\r[x] %s\\n"" , str )"		5184103	0					
ANR	5184160	Callee	print -> cb_eprintf		5184103	0					
ANR	5184161	PtrMemberAccess	print -> cb_eprintf		5184103	0					
ANR	5184162	Identifier	print		5184103	0					
ANR	5184163	Identifier	cb_eprintf		5184103	1					
ANR	5184164	ArgumentList	"""\\r[x] %s\\n"""		5184103	1					
ANR	5184165	Argument	"""\\r[x] %s\\n"""		5184103	0					
ANR	5184166	PrimaryExpression	"""\\r[x] %s\\n"""		5184103	0					
ANR	5184167	Argument	str		5184103	1					
ANR	5184168	Identifier	str		5184103	0					
ANR	5184169	ReturnType	R_API void		5184103	1					
ANR	5184170	Identifier	r_print_rowlog_done		5184103	2					
ANR	5184171	ParameterList	"RPrint * print , const char * str"		5184103	3					
ANR	5184172	Parameter	RPrint * print	2297:31:53555:53567	5184103	0	True				
ANR	5184173	ParameterType	RPrint *		5184103	0					
ANR	5184174	Identifier	print		5184103	1					
ANR	5184175	Parameter	const char * str	2297:46:53570:53584	5184103	1	True				
ANR	5184176	ParameterType	const char *		5184103	0					
ANR	5184177	Identifier	str		5184103	1					
ANR	5184178	CFGEntryNode	ENTRY		5184103		True				
ANR	5184179	CFGExitNode	EXIT		5184103		True				
ANR	5184180	Symbol	str		5184103						
ANR	5184181	Symbol	print -> flags		5184103						
ANR	5184182	Symbol	print		5184103						
ANR	5184183	Symbol	print -> cb_eprintf		5184103						
ANR	5184184	Symbol	print -> scr_prompt		5184103						
ANR	5184185	Symbol	* print		5184103						
ANR	5184186	Symbol	R_PRINT_FLAGS_COLOR		5184103						
ANR	5184187	Symbol	use_color		5184103						
ANR	5184188	Symbol	verbose		5184103						
