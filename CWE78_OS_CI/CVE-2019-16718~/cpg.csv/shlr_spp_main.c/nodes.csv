command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6108769	File	data/converged/CVE-2019-16718~_radare2/shlr_spp_main.c								
ANR	6108770	DeclStmt									
ANR	6108771	Decl							struct Proc	struct Proc * [ ]	procs
ANR	6108772	DeclStmt									
ANR	6108773	Decl							struct Proc	struct Proc *	proc
ANR	6108774	DeclStmt									
ANR	6108775	Decl							struct Arg	struct Arg *	args
ANR	6108776	Function	spp_help	10:0:164:1007							
ANR	6108777	FunctionDef	spp_help (char * argv0)		6108776	0					
ANR	6108778	CompoundStatement		10:34:198:1007	6108776	0					
ANR	6108779	IdentifierDeclStatement	int i ;	11:1:201:206	6108776	0	True				
ANR	6108780	IdentifierDecl	i		6108776	0					
ANR	6108781	IdentifierDeclType	int		6108776	0					
ANR	6108782	Identifier	i		6108776	1					
ANR	6108783	IdentifierDeclStatement	"char supported [ 128 ] = """" ;"	12:1:209:233	6108776	1	True				
ANR	6108784	IdentifierDecl	"supported [ 128 ] = """""		6108776	0					
ANR	6108785	IdentifierDeclType	char [ 128 ]		6108776	0					
ANR	6108786	Identifier	supported		6108776	1					
ANR	6108787	PrimaryExpression	128		6108776	2					
ANR	6108788	AssignmentExpression	"supported [ 128 ] = """""		6108776	3		=			
ANR	6108789	Identifier	supported		6108776	0					
ANR	6108790	PrimaryExpression	""""""		6108776	1					
ANR	6108791	ForStatement	for ( i = 0 ; procs [ i ] ; ++ i )		6108776	2					
ANR	6108792	ForInit	i = 0 ;	13:6:241:246	6108776	0	True				
ANR	6108793	AssignmentExpression	i = 0		6108776	0		=			
ANR	6108794	Identifier	i		6108776	0					
ANR	6108795	PrimaryExpression	0		6108776	1					
ANR	6108796	Condition	procs [ i ]	13:13:248:255	6108776	1	True				
ANR	6108797	ArrayIndexing	procs [ i ]		6108776	0					
ANR	6108798	Identifier	procs		6108776	0					
ANR	6108799	Identifier	i		6108776	1					
ANR	6108800	UnaryExpression	++ i	13:23:258:260	6108776	2	True				
ANR	6108801	IncDec	++		6108776	0					
ANR	6108802	Identifier	i		6108776	1					
ANR	6108803	CompoundStatement		4:29:65:65	6108776	3					
ANR	6108804	IfStatement	if ( i )		6108776	0					
ANR	6108805	Condition	i	14:6:272:272	6108776	0	True				
ANR	6108806	Identifier	i		6108776	0					
ANR	6108807	ExpressionStatement	"strcat ( supported , "","" )"	14:9:275:298	6108776	1	True				
ANR	6108808	CallExpression	"strcat ( supported , "","" )"		6108776	0					
ANR	6108809	Callee	strcat		6108776	0					
ANR	6108810	Identifier	strcat		6108776	0					
ANR	6108811	ArgumentList	supported		6108776	1					
ANR	6108812	Argument	supported		6108776	0					
ANR	6108813	Identifier	supported		6108776	0					
ANR	6108814	Argument	""","""		6108776	1					
ANR	6108815	PrimaryExpression	""","""		6108776	0					
ANR	6108816	ExpressionStatement	"strcat ( supported , procs [ i ] -> name )"	15:2:302:336	6108776	1	True				
ANR	6108817	CallExpression	"strcat ( supported , procs [ i ] -> name )"		6108776	0					
ANR	6108818	Callee	strcat		6108776	0					
ANR	6108819	Identifier	strcat		6108776	0					
ANR	6108820	ArgumentList	supported		6108776	1					
ANR	6108821	Argument	supported		6108776	0					
ANR	6108822	Identifier	supported		6108776	0					
ANR	6108823	Argument	procs [ i ] -> name		6108776	1					
ANR	6108824	PtrMemberAccess	procs [ i ] -> name		6108776	0					
ANR	6108825	ArrayIndexing	procs [ i ]		6108776	0					
ANR	6108826	Identifier	procs		6108776	0					
ANR	6108827	Identifier	i		6108776	1					
ANR	6108828	Identifier	name		6108776	1					
ANR	6108829	ExpressionStatement	"printf ( ""Usage: %s [-othesv] [file] [...]\\n"" , argv0 )"	17:1:342:393	6108776	3	True				
ANR	6108830	CallExpression	"printf ( ""Usage: %s [-othesv] [file] [...]\\n"" , argv0 )"		6108776	0					
ANR	6108831	Callee	printf		6108776	0					
ANR	6108832	Identifier	printf		6108776	0					
ANR	6108833	ArgumentList	"""Usage: %s [-othesv] [file] [...]\\n"""		6108776	1					
ANR	6108834	Argument	"""Usage: %s [-othesv] [file] [...]\\n"""		6108776	0					
ANR	6108835	PrimaryExpression	"""Usage: %s [-othesv] [file] [...]\\n"""		6108776	0					
ANR	6108836	Argument	argv0		6108776	1					
ANR	6108837	Identifier	argv0		6108776	0					
ANR	6108838	Statement	printf	18:1:396:401	6108776	4	True				
ANR	6108839	Statement	(	18:7:402:402	6108776	5	True				
ANR	6108840	Statement	"""  -o [file]     set output file (stdout)\\n"""	18:9:404:447	6108776	6	True				
ANR	6108841	Statement	"""  -t [type]     define processor type (%s)\\n"""	19:2:451:496	6108776	7	True				
ANR	6108842	Statement	"""  -e [str]      evaluate this string with the selected proc\\n"""	20:2:500:562	6108776	8	True				
ANR	6108843	Statement	"""  -s [str]      show this string before anything\\n"""	21:2:566:617	6108776	9	True				
ANR	6108844	Statement	"""  -l            list all built-in preprocessors\\n"""	22:2:621:671	6108776	10	True				
ANR	6108845	Statement	"""  -L            list keywords registered by the processor\\n"""	23:2:675:735	6108776	11	True				
ANR	6108846	Statement	"""  -n            do not read from stdin\\n"""	24:2:739:780	6108776	12	True				
ANR	6108847	Statement	"""  -v            show version information\\n"""	25:2:784:827	6108776	13	True				
ANR	6108848	Statement	","	25:46:828:828	6108776	14	True				
ANR	6108849	Statement	supported	25:48:830:838	6108776	15	True				
ANR	6108850	Statement	)	25:57:839:839	6108776	16	True				
ANR	6108851	ExpressionStatement		25:58:840:840	6108776	17	True				
ANR	6108852	IfStatement	if ( proc )		6108776	18					
ANR	6108853	Condition	proc	26:5:847:850	6108776	0	True				
ANR	6108854	Identifier	proc		6108776	0					
ANR	6108855	CompoundStatement		17:11:654:654	6108776	1					
ANR	6108856	ExpressionStatement	"printf ( ""%s specific flags:\\n"" , proc -> name )"	27:2:857:900	6108776	0	True				
ANR	6108857	CallExpression	"printf ( ""%s specific flags:\\n"" , proc -> name )"		6108776	0					
ANR	6108858	Callee	printf		6108776	0					
ANR	6108859	Identifier	printf		6108776	0					
ANR	6108860	ArgumentList	"""%s specific flags:\\n"""		6108776	1					
ANR	6108861	Argument	"""%s specific flags:\\n"""		6108776	0					
ANR	6108862	PrimaryExpression	"""%s specific flags:\\n"""		6108776	0					
ANR	6108863	Argument	proc -> name		6108776	1					
ANR	6108864	PtrMemberAccess	proc -> name		6108776	0					
ANR	6108865	Identifier	proc		6108776	0					
ANR	6108866	Identifier	name		6108776	1					
ANR	6108867	ForStatement	for ( i = 0 ; args [ i ] . flag ; i ++ )		6108776	1					
ANR	6108868	ForInit	i = 0 ;	28:6:908:913	6108776	0	True				
ANR	6108869	AssignmentExpression	i = 0		6108776	0		=			
ANR	6108870	Identifier	i		6108776	0					
ANR	6108871	PrimaryExpression	0		6108776	1					
ANR	6108872	Condition	args [ i ] . flag	28:13:915:926	6108776	1	True				
ANR	6108873	MemberAccess	args [ i ] . flag		6108776	0					
ANR	6108874	ArrayIndexing	args [ i ]		6108776	0					
ANR	6108875	Identifier	args		6108776	0					
ANR	6108876	Identifier	i		6108776	1					
ANR	6108877	Identifier	flag		6108776	1					
ANR	6108878	PostIncDecOperationExpression	i ++	28:27:929:931	6108776	2	True				
ANR	6108879	Identifier	i		6108776	0					
ANR	6108880	IncDec	++		6108776	1					
ANR	6108881	CompoundStatement		19:32:735:735	6108776	3					
ANR	6108882	ExpressionStatement	"printf ( "" %s   %s\\n"" , args [ i ] . flag , args [ i ] . desc )"	29:3:939:988	6108776	0	True				
ANR	6108883	CallExpression	"printf ( "" %s   %s\\n"" , args [ i ] . flag , args [ i ] . desc )"		6108776	0					
ANR	6108884	Callee	printf		6108776	0					
ANR	6108885	Identifier	printf		6108776	0					
ANR	6108886	ArgumentList	""" %s   %s\\n"""		6108776	1					
ANR	6108887	Argument	""" %s   %s\\n"""		6108776	0					
ANR	6108888	PrimaryExpression	""" %s   %s\\n"""		6108776	0					
ANR	6108889	Argument	args [ i ] . flag		6108776	1					
ANR	6108890	MemberAccess	args [ i ] . flag		6108776	0					
ANR	6108891	ArrayIndexing	args [ i ]		6108776	0					
ANR	6108892	Identifier	args		6108776	0					
ANR	6108893	Identifier	i		6108776	1					
ANR	6108894	Identifier	flag		6108776	1					
ANR	6108895	Argument	args [ i ] . desc		6108776	2					
ANR	6108896	MemberAccess	args [ i ] . desc		6108776	0					
ANR	6108897	ArrayIndexing	args [ i ]		6108776	0					
ANR	6108898	Identifier	args		6108776	0					
ANR	6108899	Identifier	i		6108776	1					
ANR	6108900	Identifier	desc		6108776	1					
ANR	6108901	ExpressionStatement	exit ( 0 )	32:1:998:1005	6108776	19	True				
ANR	6108902	CallExpression	exit ( 0 )		6108776	0					
ANR	6108903	Callee	exit		6108776	0					
ANR	6108904	Identifier	exit		6108776	0					
ANR	6108905	ArgumentList	0		6108776	1					
ANR	6108906	Argument	0		6108776	0					
ANR	6108907	PrimaryExpression	0		6108776	0					
ANR	6108908	ReturnType	static void		6108776	1					
ANR	6108909	Identifier	spp_help		6108776	2					
ANR	6108910	ParameterList	char * argv0		6108776	3					
ANR	6108911	Parameter	char * argv0	10:21:185:195	6108776	0	True				
ANR	6108912	ParameterType	char *		6108776	0					
ANR	6108913	Identifier	argv0		6108776	1					
ANR	6108914	CFGEntryNode	ENTRY		6108776		True				
ANR	6108915	CFGExitNode	EXIT		6108776		True				
ANR	6108916	Symbol	procs		6108776						
ANR	6108917	Symbol	* * i		6108776						
ANR	6108918	Symbol	proc		6108776						
ANR	6108919	Symbol	procs [ i ] -> name		6108776						
ANR	6108920	Symbol	* procs		6108776						
ANR	6108921	Symbol	i		6108776						
ANR	6108922	Symbol	args [ i ] . flag		6108776						
ANR	6108923	Symbol	args [ i ] . desc		6108776						
ANR	6108924	Symbol	* proc		6108776						
ANR	6108925	Symbol	proc -> name		6108776						
ANR	6108926	Symbol	* args		6108776						
ANR	6108927	Symbol	args		6108776						
ANR	6108928	Symbol	* * procs		6108776						
ANR	6108929	Symbol	* i		6108776						
ANR	6108930	Symbol	argv0		6108776						
ANR	6108931	Symbol	supported		6108776						
ANR	6108932	Function	main	35:0:1010:3211							
ANR	6108933	FunctionDef	"main (int argc , char * * argv)"		6108932	0					
ANR	6108934	CompoundStatement		35:32:1042:3211	6108932	0					
ANR	6108935	IdentifierDeclStatement	int dostdin = 1 ;	36:1:1045:1060	6108932	0	True				
ANR	6108936	IdentifierDecl	dostdin = 1		6108932	0					
ANR	6108937	IdentifierDeclType	int		6108932	0					
ANR	6108938	Identifier	dostdin		6108932	1					
ANR	6108939	AssignmentExpression	dostdin = 1		6108932	2		=			
ANR	6108940	Identifier	dostdin		6108932	0					
ANR	6108941	PrimaryExpression	1		6108932	1					
ANR	6108942	IdentifierDeclStatement	"int i , j ;"	37:1:1063:1071	6108932	1	True				
ANR	6108943	IdentifierDecl	i		6108932	0					
ANR	6108944	IdentifierDeclType	int		6108932	0					
ANR	6108945	Identifier	i		6108932	1					
ANR	6108946	IdentifierDecl	j		6108932	1					
ANR	6108947	IdentifierDeclType	int		6108932	0					
ANR	6108948	Identifier	j		6108932	1					
ANR	6108949	IdentifierDeclStatement	Output out ;	38:1:1074:1084	6108932	2	True				
ANR	6108950	IdentifierDecl	out		6108932	0					
ANR	6108951	IdentifierDeclType	Output		6108932	0					
ANR	6108952	Identifier	out		6108932	1					
ANR	6108953	ExpressionStatement	out . fout = stdout	39:1:1087:1104	6108932	3	True				
ANR	6108954	AssignmentExpression	out . fout = stdout		6108932	0		=			
ANR	6108955	MemberAccess	out . fout		6108932	0					
ANR	6108956	Identifier	out		6108932	0					
ANR	6108957	Identifier	fout		6108932	1					
ANR	6108958	Identifier	stdout		6108932	1					
ANR	6108959	IdentifierDeclStatement	char * arg ;	40:1:1107:1116	6108932	4	True				
ANR	6108960	IdentifierDecl	* arg		6108932	0					
ANR	6108961	IdentifierDeclType	char *		6108932	0					
ANR	6108962	Identifier	arg		6108932	1					
ANR	6108963	ExpressionStatement	"spp_proc_set ( proc , argv [ 0 ] , 0 )"	42:1:1120:1151	6108932	5	True				
ANR	6108964	CallExpression	"spp_proc_set ( proc , argv [ 0 ] , 0 )"		6108932	0					
ANR	6108965	Callee	spp_proc_set		6108932	0					
ANR	6108966	Identifier	spp_proc_set		6108932	0					
ANR	6108967	ArgumentList	proc		6108932	1					
ANR	6108968	Argument	proc		6108932	0					
ANR	6108969	Identifier	proc		6108932	0					
ANR	6108970	Argument	argv [ 0 ]		6108932	1					
ANR	6108971	ArrayIndexing	argv [ 0 ]		6108932	0					
ANR	6108972	Identifier	argv		6108932	0					
ANR	6108973	PrimaryExpression	0		6108932	1					
ANR	6108974	Argument	0		6108932	2					
ANR	6108975	PrimaryExpression	0		6108932	0					
ANR	6108976	IfStatement	if ( argc < 2 )		6108932	6					
ANR	6108977	Condition	argc < 2	44:5:1159:1166	6108932	0	True				
ANR	6108978	RelationalExpression	argc < 2		6108932	0		<			
ANR	6108979	Identifier	argc		6108932	0					
ANR	6108980	PrimaryExpression	2		6108932	1					
ANR	6108981	ExpressionStatement	"spp_io ( stdin , & out )"	45:2:1171:1191	6108932	1	True				
ANR	6108982	CallExpression	"spp_io ( stdin , & out )"		6108932	0					
ANR	6108983	Callee	spp_io		6108932	0					
ANR	6108984	Identifier	spp_io		6108932	0					
ANR	6108985	ArgumentList	stdin		6108932	1					
ANR	6108986	Argument	stdin		6108932	0					
ANR	6108987	Identifier	stdin		6108932	0					
ANR	6108988	Argument	& out		6108932	1					
ANR	6108989	UnaryOperationExpression	& out		6108932	0					
ANR	6108990	UnaryOperator	&		6108932	0					
ANR	6108991	Identifier	out		6108932	1					
ANR	6108992	ElseStatement	else		6108932	0					
ANR	6108993	CompoundStatement		12:6:156:156	6108932	0					
ANR	6108994	ForStatement	for ( i = 1 ; i < argc ; i ++ )		6108932	0					
ANR	6108995	ForInit	i = 1 ;	47:6:1207:1212	6108932	0	True				
ANR	6108996	AssignmentExpression	i = 1		6108932	0		=			
ANR	6108997	Identifier	i		6108932	0					
ANR	6108998	PrimaryExpression	1		6108932	1					
ANR	6108999	Condition	i < argc	47:13:1214:1221	6108932	1	True				
ANR	6109000	RelationalExpression	i < argc		6108932	0		<			
ANR	6109001	Identifier	i		6108932	0					
ANR	6109002	Identifier	argc		6108932	1					
ANR	6109003	PostIncDecOperationExpression	i ++	47:23:1224:1226	6108932	2	True				
ANR	6109004	Identifier	i		6108932	0					
ANR	6109005	IncDec	++		6108932	1					
ANR	6109006	CompoundStatement		13:28:186:186	6108932	3					
ANR	6109007	IfStatement	if ( args )		6108932	0					
ANR	6109008	Condition	args	49:7:1271:1274	6108932	0	True				
ANR	6109009	Identifier	args		6108932	0					
ANR	6109010	ForStatement	for ( j = 0 ; args [ j ] . flag ; j ++ )		6108932	1					
ANR	6109011	ForInit	j = 0 ;	50:7:1284:1289	6108932	0	True				
ANR	6109012	AssignmentExpression	j = 0		6108932	0		=			
ANR	6109013	Identifier	j		6108932	0					
ANR	6109014	PrimaryExpression	0		6108932	1					
ANR	6109015	Condition	args [ j ] . flag	50:14:1291:1302	6108932	1	True				
ANR	6109016	MemberAccess	args [ j ] . flag		6108932	0					
ANR	6109017	ArrayIndexing	args [ j ]		6108932	0					
ANR	6109018	Identifier	args		6108932	0					
ANR	6109019	Identifier	j		6108932	1					
ANR	6109020	Identifier	flag		6108932	1					
ANR	6109021	PostIncDecOperationExpression	j ++	50:28:1305:1307	6108932	2	True				
ANR	6109022	Identifier	j		6108932	0					
ANR	6109023	IncDec	++		6108932	1					
ANR	6109024	CompoundStatement		16:33:267:267	6108932	3					
ANR	6109025	IfStatement	"if ( ! memcmp ( argv [ i ] , args [ j ] . flag , 2 ) )"		6108932	0					
ANR	6109026	Condition	"! memcmp ( argv [ i ] , args [ j ] . flag , 2 )"	51:8:1320:1353	6108932	0	True				
ANR	6109027	UnaryOperationExpression	"! memcmp ( argv [ i ] , args [ j ] . flag , 2 )"		6108932	0					
ANR	6109028	UnaryOperator	!		6108932	0					
ANR	6109029	CallExpression	"memcmp ( argv [ i ] , args [ j ] . flag , 2 )"		6108932	1					
ANR	6109030	Callee	memcmp		6108932	0					
ANR	6109031	Identifier	memcmp		6108932	0					
ANR	6109032	ArgumentList	argv [ i ]		6108932	1					
ANR	6109033	Argument	argv [ i ]		6108932	0					
ANR	6109034	ArrayIndexing	argv [ i ]		6108932	0					
ANR	6109035	Identifier	argv		6108932	0					
ANR	6109036	Identifier	i		6108932	1					
ANR	6109037	Argument	args [ j ] . flag		6108932	1					
ANR	6109038	MemberAccess	args [ j ] . flag		6108932	0					
ANR	6109039	ArrayIndexing	args [ j ]		6108932	0					
ANR	6109040	Identifier	args		6108932	0					
ANR	6109041	Identifier	j		6108932	1					
ANR	6109042	Identifier	flag		6108932	1					
ANR	6109043	Argument	2		6108932	2					
ANR	6109044	PrimaryExpression	2		6108932	0					
ANR	6109045	CompoundStatement		17:44:313:313	6108932	1					
ANR	6109046	IfStatement	if ( args [ j ] . has_arg )		6108932	0					
ANR	6109047	Condition	args [ j ] . has_arg	52:9:1367:1381	6108932	0	True				
ANR	6109048	MemberAccess	args [ j ] . has_arg		6108932	0					
ANR	6109049	ArrayIndexing	args [ j ]		6108932	0					
ANR	6109050	Identifier	args		6108932	0					
ANR	6109051	Identifier	j		6108932	1					
ANR	6109052	Identifier	has_arg		6108932	1					
ANR	6109053	CompoundStatement		18:26:341:341	6108932	1					
ANR	6109054	ExpressionStatement	"GET_ARG ( arg , argv , i )"	53:6:1392:1414	6108932	0	True				
ANR	6109055	CallExpression	"GET_ARG ( arg , argv , i )"		6108932	0					
ANR	6109056	Callee	GET_ARG		6108932	0					
ANR	6109057	Identifier	GET_ARG		6108932	0					
ANR	6109058	ArgumentList	arg		6108932	1					
ANR	6109059	Argument	arg		6108932	0					
ANR	6109060	Identifier	arg		6108932	0					
ANR	6109061	Argument	argv		6108932	1					
ANR	6109062	Identifier	argv		6108932	0					
ANR	6109063	Argument	i		6108932	2					
ANR	6109064	Identifier	i		6108932	0					
ANR	6109065	ExpressionStatement	args [ j ] . callback ( arg )	54:6:1422:1444	6108932	1	True				
ANR	6109066	CallExpression	args [ j ] . callback ( arg )		6108932	0					
ANR	6109067	Callee	args [ j ] . callback		6108932	0					
ANR	6109068	MemberAccess	args [ j ] . callback		6108932	0					
ANR	6109069	ArrayIndexing	args [ j ]		6108932	0					
ANR	6109070	Identifier	args		6108932	0					
ANR	6109071	Identifier	j		6108932	1					
ANR	6109072	Identifier	callback		6108932	1					
ANR	6109073	ArgumentList	arg		6108932	1					
ANR	6109074	Argument	arg		6108932	0					
ANR	6109075	Identifier	arg		6108932	0					
ANR	6109076	ElseStatement	else		6108932	0					
ANR	6109077	CompoundStatement		21:12:415:415	6108932	0					
ANR	6109078	ExpressionStatement	args [ j ] . callback ( NULL )	56:6:1466:1489	6108932	0	True				
ANR	6109079	CallExpression	args [ j ] . callback ( NULL )		6108932	0					
ANR	6109080	Callee	args [ j ] . callback		6108932	0					
ANR	6109081	MemberAccess	args [ j ] . callback		6108932	0					
ANR	6109082	ArrayIndexing	args [ j ]		6108932	0					
ANR	6109083	Identifier	args		6108932	0					
ANR	6109084	Identifier	j		6108932	1					
ANR	6109085	Identifier	callback		6108932	1					
ANR	6109086	ArgumentList	NULL		6108932	1					
ANR	6109087	Argument	NULL		6108932	0					
ANR	6109088	Identifier	NULL		6108932	0					
ANR	6109089	ContinueStatement	continue ;	58:5:1503:1511	6108932	1	True				
ANR	6109090	IfStatement	"if ( ! memcmp ( argv [ i ] , ""-o"" , 2 ) )"		6108932	1					
ANR	6109091	Condition	"! memcmp ( argv [ i ] , ""-o"" , 2 )"	63:7:1572:1597	6108932	0	True				
ANR	6109092	UnaryOperationExpression	"! memcmp ( argv [ i ] , ""-o"" , 2 )"		6108932	0					
ANR	6109093	UnaryOperator	!		6108932	0					
ANR	6109094	CallExpression	"memcmp ( argv [ i ] , ""-o"" , 2 )"		6108932	1					
ANR	6109095	Callee	memcmp		6108932	0					
ANR	6109096	Identifier	memcmp		6108932	0					
ANR	6109097	ArgumentList	argv [ i ]		6108932	1					
ANR	6109098	Argument	argv [ i ]		6108932	0					
ANR	6109099	ArrayIndexing	argv [ i ]		6108932	0					
ANR	6109100	Identifier	argv		6108932	0					
ANR	6109101	Identifier	i		6108932	1					
ANR	6109102	Argument	"""-o"""		6108932	1					
ANR	6109103	PrimaryExpression	"""-o"""		6108932	0					
ANR	6109104	Argument	2		6108932	2					
ANR	6109105	PrimaryExpression	2		6108932	0					
ANR	6109106	CompoundStatement		29:35:557:557	6108932	1					
ANR	6109107	ExpressionStatement	"GET_ARG ( arg , argv , i )"	64:4:1606:1628	6108932	0	True				
ANR	6109108	CallExpression	"GET_ARG ( arg , argv , i )"		6108932	0					
ANR	6109109	Callee	GET_ARG		6108932	0					
ANR	6109110	Identifier	GET_ARG		6108932	0					
ANR	6109111	ArgumentList	arg		6108932	1					
ANR	6109112	Argument	arg		6108932	0					
ANR	6109113	Identifier	arg		6108932	0					
ANR	6109114	Argument	argv		6108932	1					
ANR	6109115	Identifier	argv		6108932	0					
ANR	6109116	Argument	i		6108932	2					
ANR	6109117	Identifier	i		6108932	0					
ANR	6109118	IfStatement	if ( arg != NULL )		6108932	1					
ANR	6109119	Condition	arg != NULL	65:8:1638:1648	6108932	0	True				
ANR	6109120	EqualityExpression	arg != NULL		6108932	0		!=			
ANR	6109121	Identifier	arg		6108932	0					
ANR	6109122	Identifier	NULL		6108932	1					
ANR	6109123	CompoundStatement		31:21:608:608	6108932	1					
ANR	6109124	IfStatement	"if ( ! strcmp ( arg , ""buff"" ) )"		6108932	0					
ANR	6109125	Condition	"! strcmp ( arg , ""buff"" )"	66:9:1662:1682	6108932	0	True				
ANR	6109126	UnaryOperationExpression	"! strcmp ( arg , ""buff"" )"		6108932	0					
ANR	6109127	UnaryOperator	!		6108932	0					
ANR	6109128	CallExpression	"strcmp ( arg , ""buff"" )"		6108932	1					
ANR	6109129	Callee	strcmp		6108932	0					
ANR	6109130	Identifier	strcmp		6108932	0					
ANR	6109131	ArgumentList	arg		6108932	1					
ANR	6109132	Argument	arg		6108932	0					
ANR	6109133	Identifier	arg		6108932	0					
ANR	6109134	Argument	"""buff"""		6108932	1					
ANR	6109135	PrimaryExpression	"""buff"""		6108932	0					
ANR	6109136	CompoundStatement		32:32:642:642	6108932	1					
ANR	6109137	ExpressionStatement	out . fout = NULL	67:6:1693:1708	6108932	0	True				
ANR	6109138	AssignmentExpression	out . fout = NULL		6108932	0		=			
ANR	6109139	MemberAccess	out . fout		6108932	0					
ANR	6109140	Identifier	out		6108932	0					
ANR	6109141	Identifier	fout		6108932	1					
ANR	6109142	Identifier	NULL		6108932	1					
ANR	6109143	ExpressionStatement	"out . cout = r_strbuf_new ( """" )"	68:6:1716:1744	6108932	1	True				
ANR	6109144	AssignmentExpression	"out . cout = r_strbuf_new ( """" )"		6108932	0		=			
ANR	6109145	MemberAccess	out . cout		6108932	0					
ANR	6109146	Identifier	out		6108932	0					
ANR	6109147	Identifier	cout		6108932	1					
ANR	6109148	CallExpression	"r_strbuf_new ( """" )"		6108932	1					
ANR	6109149	Callee	r_strbuf_new		6108932	0					
ANR	6109150	Identifier	r_strbuf_new		6108932	0					
ANR	6109151	ArgumentList	""""""		6108932	1					
ANR	6109152	Argument	""""""		6108932	0					
ANR	6109153	PrimaryExpression	""""""		6108932	0					
ANR	6109154	ExpressionStatement	r_strbuf_init ( out . cout )	69:6:1752:1776	6108932	2	True				
ANR	6109155	CallExpression	r_strbuf_init ( out . cout )		6108932	0					
ANR	6109156	Callee	r_strbuf_init		6108932	0					
ANR	6109157	Identifier	r_strbuf_init		6108932	0					
ANR	6109158	ArgumentList	out . cout		6108932	1					
ANR	6109159	Argument	out . cout		6108932	0					
ANR	6109160	MemberAccess	out . cout		6108932	0					
ANR	6109161	Identifier	out		6108932	0					
ANR	6109162	Identifier	cout		6108932	1					
ANR	6109163	ElseStatement	else		6108932	0					
ANR	6109164	CompoundStatement		36:12:747:747	6108932	0					
ANR	6109165	ExpressionStatement	out . cout = NULL	71:6:1798:1813	6108932	0	True				
ANR	6109166	AssignmentExpression	out . cout = NULL		6108932	0		=			
ANR	6109167	MemberAccess	out . cout		6108932	0					
ANR	6109168	Identifier	out		6108932	0					
ANR	6109169	Identifier	cout		6108932	1					
ANR	6109170	Identifier	NULL		6108932	1					
ANR	6109171	ExpressionStatement	"out . fout = fopen ( arg , ""w"" )"	72:6:1821:1848	6108932	1	True				
ANR	6109172	AssignmentExpression	"out . fout = fopen ( arg , ""w"" )"		6108932	0		=			
ANR	6109173	MemberAccess	out . fout		6108932	0					
ANR	6109174	Identifier	out		6108932	0					
ANR	6109175	Identifier	fout		6108932	1					
ANR	6109176	CallExpression	"fopen ( arg , ""w"" )"		6108932	1					
ANR	6109177	Callee	fopen		6108932	0					
ANR	6109178	Identifier	fopen		6108932	0					
ANR	6109179	ArgumentList	arg		6108932	1					
ANR	6109180	Argument	arg		6108932	0					
ANR	6109181	Identifier	arg		6108932	0					
ANR	6109182	Argument	"""w"""		6108932	1					
ANR	6109183	PrimaryExpression	"""w"""		6108932	0					
ANR	6109184	IfStatement	if ( ! out . cout && ( arg == NULL || out . fout == NULL ) )		6108932	2					
ANR	6109185	Condition	! out . cout && ( arg == NULL || out . fout == NULL )	75:8:1871:1916	6108932	0	True				
ANR	6109186	AndExpression	! out . cout && ( arg == NULL || out . fout == NULL )		6108932	0		&&			
ANR	6109187	UnaryOperationExpression	! out . cout		6108932	0					
ANR	6109188	UnaryOperator	!		6108932	0					
ANR	6109189	MemberAccess	out . cout		6108932	1					
ANR	6109190	Identifier	out		6108932	0					
ANR	6109191	Identifier	cout		6108932	1					
ANR	6109192	OrExpression	arg == NULL || out . fout == NULL		6108932	1		||			
ANR	6109193	EqualityExpression	arg == NULL		6108932	0		==			
ANR	6109194	Identifier	arg		6108932	0					
ANR	6109195	Identifier	NULL		6108932	1					
ANR	6109196	EqualityExpression	out . fout == NULL		6108932	1		==			
ANR	6109197	MemberAccess	out . fout		6108932	0					
ANR	6109198	Identifier	out		6108932	0					
ANR	6109199	Identifier	fout		6108932	1					
ANR	6109200	Identifier	NULL		6108932	1					
ANR	6109201	CompoundStatement		41:56:876:876	6108932	1					
ANR	6109202	ExpressionStatement	"fprintf ( stderr , ""Cannot open output file\\n"" )"	76:5:1926:1971	6108932	0	True				
ANR	6109203	CallExpression	"fprintf ( stderr , ""Cannot open output file\\n"" )"		6108932	0					
ANR	6109204	Callee	fprintf		6108932	0					
ANR	6109205	Identifier	fprintf		6108932	0					
ANR	6109206	ArgumentList	stderr		6108932	1					
ANR	6109207	Argument	stderr		6108932	0					
ANR	6109208	Identifier	stderr		6108932	0					
ANR	6109209	Argument	"""Cannot open output file\\n"""		6108932	1					
ANR	6109210	PrimaryExpression	"""Cannot open output file\\n"""		6108932	0					
ANR	6109211	ExpressionStatement	exit ( 1 )	77:5:1978:1986	6108932	1	True				
ANR	6109212	CallExpression	exit ( 1 )		6108932	0					
ANR	6109213	Callee	exit		6108932	0					
ANR	6109214	Identifier	exit		6108932	0					
ANR	6109215	ArgumentList	1		6108932	1					
ANR	6109216	Argument	1		6108932	0					
ANR	6109217	PrimaryExpression	1		6108932	0					
ANR	6109218	ElseStatement	else		6108932	0					
ANR	6109219	IfStatement	"if ( ! memcmp ( argv [ i ] , ""-t"" , 2 ) )"		6108932	0					
ANR	6109220	Condition	"! memcmp ( argv [ i ] , ""-t"" , 2 )"	80:7:2011:2035	6108932	0	True				
ANR	6109221	UnaryOperationExpression	"! memcmp ( argv [ i ] , ""-t"" , 2 )"		6108932	0					
ANR	6109222	UnaryOperator	!		6108932	0					
ANR	6109223	CallExpression	"memcmp ( argv [ i ] , ""-t"" , 2 )"		6108932	1					
ANR	6109224	Callee	memcmp		6108932	0					
ANR	6109225	Identifier	memcmp		6108932	0					
ANR	6109226	ArgumentList	argv [ i ]		6108932	1					
ANR	6109227	Argument	argv [ i ]		6108932	0					
ANR	6109228	ArrayIndexing	argv [ i ]		6108932	0					
ANR	6109229	Identifier	argv		6108932	0					
ANR	6109230	Identifier	i		6108932	1					
ANR	6109231	Argument	"""-t"""		6108932	1					
ANR	6109232	PrimaryExpression	"""-t"""		6108932	0					
ANR	6109233	Argument	2		6108932	2					
ANR	6109234	PrimaryExpression	2		6108932	0					
ANR	6109235	CompoundStatement		46:34:995:995	6108932	1					
ANR	6109236	ExpressionStatement	"GET_ARG ( arg , argv , i )"	81:4:2044:2066	6108932	0	True				
ANR	6109237	CallExpression	"GET_ARG ( arg , argv , i )"		6108932	0					
ANR	6109238	Callee	GET_ARG		6108932	0					
ANR	6109239	Identifier	GET_ARG		6108932	0					
ANR	6109240	ArgumentList	arg		6108932	1					
ANR	6109241	Argument	arg		6108932	0					
ANR	6109242	Identifier	arg		6108932	0					
ANR	6109243	Argument	argv		6108932	1					
ANR	6109244	Identifier	argv		6108932	0					
ANR	6109245	Argument	i		6108932	2					
ANR	6109246	Identifier	i		6108932	0					
ANR	6109247	ExpressionStatement	"spp_proc_set ( proc , arg , 1 )"	82:4:2072:2099	6108932	1	True				
ANR	6109248	CallExpression	"spp_proc_set ( proc , arg , 1 )"		6108932	0					
ANR	6109249	Callee	spp_proc_set		6108932	0					
ANR	6109250	Identifier	spp_proc_set		6108932	0					
ANR	6109251	ArgumentList	proc		6108932	1					
ANR	6109252	Argument	proc		6108932	0					
ANR	6109253	Identifier	proc		6108932	0					
ANR	6109254	Argument	arg		6108932	1					
ANR	6109255	Identifier	arg		6108932	0					
ANR	6109256	Argument	1		6108932	2					
ANR	6109257	PrimaryExpression	1		6108932	0					
ANR	6109258	ElseStatement	else		6108932	0					
ANR	6109259	IfStatement	"if ( ! strcmp ( argv [ i ] , ""-v"" ) )"		6108932	0					
ANR	6109260	Condition	"! strcmp ( argv [ i ] , ""-v"" )"	84:7:2118:2139	6108932	0	True				
ANR	6109261	UnaryOperationExpression	"! strcmp ( argv [ i ] , ""-v"" )"		6108932	0					
ANR	6109262	UnaryOperator	!		6108932	0					
ANR	6109263	CallExpression	"strcmp ( argv [ i ] , ""-v"" )"		6108932	1					
ANR	6109264	Callee	strcmp		6108932	0					
ANR	6109265	Identifier	strcmp		6108932	0					
ANR	6109266	ArgumentList	argv [ i ]		6108932	1					
ANR	6109267	Argument	argv [ i ]		6108932	0					
ANR	6109268	ArrayIndexing	argv [ i ]		6108932	0					
ANR	6109269	Identifier	argv		6108932	0					
ANR	6109270	Identifier	i		6108932	1					
ANR	6109271	Argument	"""-v"""		6108932	1					
ANR	6109272	PrimaryExpression	"""-v"""		6108932	0					
ANR	6109273	CompoundStatement		50:31:1099:1099	6108932	1					
ANR	6109274	ExpressionStatement	"printf ( ""spp-%s\\n"" , VERSION )"	85:4:2148:2176	6108932	0	True				
ANR	6109275	CallExpression	"printf ( ""spp-%s\\n"" , VERSION )"		6108932	0					
ANR	6109276	Callee	printf		6108932	0					
ANR	6109277	Identifier	printf		6108932	0					
ANR	6109278	ArgumentList	"""spp-%s\\n"""		6108932	1					
ANR	6109279	Argument	"""spp-%s\\n"""		6108932	0					
ANR	6109280	PrimaryExpression	"""spp-%s\\n"""		6108932	0					
ANR	6109281	Argument	VERSION		6108932	1					
ANR	6109282	Identifier	VERSION		6108932	0					
ANR	6109283	ExpressionStatement	exit ( 1 )	86:4:2182:2190	6108932	1	True				
ANR	6109284	CallExpression	exit ( 1 )		6108932	0					
ANR	6109285	Callee	exit		6108932	0					
ANR	6109286	Identifier	exit		6108932	0					
ANR	6109287	ArgumentList	1		6108932	1					
ANR	6109288	Argument	1		6108932	0					
ANR	6109289	PrimaryExpression	1		6108932	0					
ANR	6109290	ElseStatement	else		6108932	0					
ANR	6109291	IfStatement	"if ( ! strcmp ( argv [ i ] , ""-h"" ) )"		6108932	0					
ANR	6109292	Condition	"! strcmp ( argv [ i ] , ""-h"" )"	88:7:2209:2230	6108932	0	True				
ANR	6109293	UnaryOperationExpression	"! strcmp ( argv [ i ] , ""-h"" )"		6108932	0					
ANR	6109294	UnaryOperator	!		6108932	0					
ANR	6109295	CallExpression	"strcmp ( argv [ i ] , ""-h"" )"		6108932	1					
ANR	6109296	Callee	strcmp		6108932	0					
ANR	6109297	Identifier	strcmp		6108932	0					
ANR	6109298	ArgumentList	argv [ i ]		6108932	1					
ANR	6109299	Argument	argv [ i ]		6108932	0					
ANR	6109300	ArrayIndexing	argv [ i ]		6108932	0					
ANR	6109301	Identifier	argv		6108932	0					
ANR	6109302	Identifier	i		6108932	1					
ANR	6109303	Argument	"""-h"""		6108932	1					
ANR	6109304	PrimaryExpression	"""-h"""		6108932	0					
ANR	6109305	CompoundStatement		54:31:1190:1190	6108932	1					
ANR	6109306	ExpressionStatement	spp_help ( argv [ 0 ] )	90:4:2259:2277	6108932	0	True				
ANR	6109307	CallExpression	spp_help ( argv [ 0 ] )		6108932	0					
ANR	6109308	Callee	spp_help		6108932	0					
ANR	6109309	Identifier	spp_help		6108932	0					
ANR	6109310	ArgumentList	argv [ 0 ]		6108932	1					
ANR	6109311	Argument	argv [ 0 ]		6108932	0					
ANR	6109312	ArrayIndexing	argv [ 0 ]		6108932	0					
ANR	6109313	Identifier	argv		6108932	0					
ANR	6109314	PrimaryExpression	0		6108932	1					
ANR	6109315	ElseStatement	else		6108932	0					
ANR	6109316	IfStatement	"if ( ! strcmp ( argv [ i ] , ""-n"" ) )"		6108932	0					
ANR	6109317	Condition	"! strcmp ( argv [ i ] , ""-n"" )"	92:7:2296:2317	6108932	0	True				
ANR	6109318	UnaryOperationExpression	"! strcmp ( argv [ i ] , ""-n"" )"		6108932	0					
ANR	6109319	UnaryOperator	!		6108932	0					
ANR	6109320	CallExpression	"strcmp ( argv [ i ] , ""-n"" )"		6108932	1					
ANR	6109321	Callee	strcmp		6108932	0					
ANR	6109322	Identifier	strcmp		6108932	0					
ANR	6109323	ArgumentList	argv [ i ]		6108932	1					
ANR	6109324	Argument	argv [ i ]		6108932	0					
ANR	6109325	ArrayIndexing	argv [ i ]		6108932	0					
ANR	6109326	Identifier	argv		6108932	0					
ANR	6109327	Identifier	i		6108932	1					
ANR	6109328	Argument	"""-n"""		6108932	1					
ANR	6109329	PrimaryExpression	"""-n"""		6108932	0					
ANR	6109330	CompoundStatement		58:31:1277:1277	6108932	1					
ANR	6109331	ExpressionStatement	dostdin = 0	93:4:2326:2337	6108932	0	True				
ANR	6109332	AssignmentExpression	dostdin = 0		6108932	0		=			
ANR	6109333	Identifier	dostdin		6108932	0					
ANR	6109334	PrimaryExpression	0		6108932	1					
ANR	6109335	ElseStatement	else		6108932	0					
ANR	6109336	IfStatement	"if ( ! strcmp ( argv [ i ] , ""-l"" ) )"		6108932	0					
ANR	6109337	Condition	"! strcmp ( argv [ i ] , ""-l"" )"	95:7:2356:2377	6108932	0	True				
ANR	6109338	UnaryOperationExpression	"! strcmp ( argv [ i ] , ""-l"" )"		6108932	0					
ANR	6109339	UnaryOperator	!		6108932	0					
ANR	6109340	CallExpression	"strcmp ( argv [ i ] , ""-l"" )"		6108932	1					
ANR	6109341	Callee	strcmp		6108932	0					
ANR	6109342	Identifier	strcmp		6108932	0					
ANR	6109343	ArgumentList	argv [ i ]		6108932	1					
ANR	6109344	Argument	argv [ i ]		6108932	0					
ANR	6109345	ArrayIndexing	argv [ i ]		6108932	0					
ANR	6109346	Identifier	argv		6108932	0					
ANR	6109347	Identifier	i		6108932	1					
ANR	6109348	Argument	"""-l"""		6108932	1					
ANR	6109349	PrimaryExpression	"""-l"""		6108932	0					
ANR	6109350	CompoundStatement		61:31:1337:1337	6108932	1					
ANR	6109351	ExpressionStatement	spp_proc_list ( )	96:4:2386:2402	6108932	0	True				
ANR	6109352	CallExpression	spp_proc_list ( )		6108932	0					
ANR	6109353	Callee	spp_proc_list		6108932	0					
ANR	6109354	Identifier	spp_proc_list		6108932	0					
ANR	6109355	ArgumentList			6108932	1					
ANR	6109356	ExpressionStatement	exit ( 0 )	97:4:2408:2416	6108932	1	True				
ANR	6109357	CallExpression	exit ( 0 )		6108932	0					
ANR	6109358	Callee	exit		6108932	0					
ANR	6109359	Identifier	exit		6108932	0					
ANR	6109360	ArgumentList	0		6108932	1					
ANR	6109361	Argument	0		6108932	0					
ANR	6109362	PrimaryExpression	0		6108932	0					
ANR	6109363	ElseStatement	else		6108932	0					
ANR	6109364	IfStatement	"if ( ! strcmp ( argv [ i ] , ""-L"" ) )"		6108932	0					
ANR	6109365	Condition	"! strcmp ( argv [ i ] , ""-L"" )"	99:7:2435:2456	6108932	0	True				
ANR	6109366	UnaryOperationExpression	"! strcmp ( argv [ i ] , ""-L"" )"		6108932	0					
ANR	6109367	UnaryOperator	!		6108932	0					
ANR	6109368	CallExpression	"strcmp ( argv [ i ] , ""-L"" )"		6108932	1					
ANR	6109369	Callee	strcmp		6108932	0					
ANR	6109370	Identifier	strcmp		6108932	0					
ANR	6109371	ArgumentList	argv [ i ]		6108932	1					
ANR	6109372	Argument	argv [ i ]		6108932	0					
ANR	6109373	ArrayIndexing	argv [ i ]		6108932	0					
ANR	6109374	Identifier	argv		6108932	0					
ANR	6109375	Identifier	i		6108932	1					
ANR	6109376	Argument	"""-L"""		6108932	1					
ANR	6109377	PrimaryExpression	"""-L"""		6108932	0					
ANR	6109378	CompoundStatement		65:31:1416:1416	6108932	1					
ANR	6109379	ExpressionStatement	spp_proc_list_kw ( )	100:4:2465:2484	6108932	0	True				
ANR	6109380	CallExpression	spp_proc_list_kw ( )		6108932	0					
ANR	6109381	Callee	spp_proc_list_kw		6108932	0					
ANR	6109382	Identifier	spp_proc_list_kw		6108932	0					
ANR	6109383	ArgumentList			6108932	1					
ANR	6109384	ExpressionStatement	exit ( 0 )	101:4:2490:2498	6108932	1	True				
ANR	6109385	CallExpression	exit ( 0 )		6108932	0					
ANR	6109386	Callee	exit		6108932	0					
ANR	6109387	Identifier	exit		6108932	0					
ANR	6109388	ArgumentList	0		6108932	1					
ANR	6109389	Argument	0		6108932	0					
ANR	6109390	PrimaryExpression	0		6108932	0					
ANR	6109391	ElseStatement	else		6108932	0					
ANR	6109392	IfStatement	"if ( ! strcmp ( argv [ i ] , ""-s"" ) )"		6108932	0					
ANR	6109393	Condition	"! strcmp ( argv [ i ] , ""-s"" )"	103:7:2517:2538	6108932	0	True				
ANR	6109394	UnaryOperationExpression	"! strcmp ( argv [ i ] , ""-s"" )"		6108932	0					
ANR	6109395	UnaryOperator	!		6108932	0					
ANR	6109396	CallExpression	"strcmp ( argv [ i ] , ""-s"" )"		6108932	1					
ANR	6109397	Callee	strcmp		6108932	0					
ANR	6109398	Identifier	strcmp		6108932	0					
ANR	6109399	ArgumentList	argv [ i ]		6108932	1					
ANR	6109400	Argument	argv [ i ]		6108932	0					
ANR	6109401	ArrayIndexing	argv [ i ]		6108932	0					
ANR	6109402	Identifier	argv		6108932	0					
ANR	6109403	Identifier	i		6108932	1					
ANR	6109404	Argument	"""-s"""		6108932	1					
ANR	6109405	PrimaryExpression	"""-s"""		6108932	0					
ANR	6109406	CompoundStatement		69:31:1498:1498	6108932	1					
ANR	6109407	ExpressionStatement	"GET_ARG ( arg , argv , i )"	104:4:2547:2569	6108932	0	True				
ANR	6109408	CallExpression	"GET_ARG ( arg , argv , i )"		6108932	0					
ANR	6109409	Callee	GET_ARG		6108932	0					
ANR	6109410	Identifier	GET_ARG		6108932	0					
ANR	6109411	ArgumentList	arg		6108932	1					
ANR	6109412	Argument	arg		6108932	0					
ANR	6109413	Identifier	arg		6108932	0					
ANR	6109414	Argument	argv		6108932	1					
ANR	6109415	Identifier	argv		6108932	0					
ANR	6109416	Argument	i		6108932	2					
ANR	6109417	Identifier	i		6108932	0					
ANR	6109418	IfStatement	if ( arg == NULL )		6108932	1					
ANR	6109419	Condition	arg == NULL	105:8:2579:2589	6108932	0	True				
ANR	6109420	EqualityExpression	arg == NULL		6108932	0		==			
ANR	6109421	Identifier	arg		6108932	0					
ANR	6109422	Identifier	NULL		6108932	1					
ANR	6109423	ExpressionStatement	"arg = """""	105:21:2592:2600	6108932	1	True				
ANR	6109424	AssignmentExpression	"arg = """""		6108932	0		=			
ANR	6109425	Identifier	arg		6108932	0					
ANR	6109426	PrimaryExpression	""""""		6108932	1					
ANR	6109427	ExpressionStatement	"fprintf ( out . fout , ""%s\\n"" , arg )"	106:4:2606:2637	6108932	2	True				
ANR	6109428	CallExpression	"fprintf ( out . fout , ""%s\\n"" , arg )"		6108932	0					
ANR	6109429	Callee	fprintf		6108932	0					
ANR	6109430	Identifier	fprintf		6108932	0					
ANR	6109431	ArgumentList	out . fout		6108932	1					
ANR	6109432	Argument	out . fout		6108932	0					
ANR	6109433	MemberAccess	out . fout		6108932	0					
ANR	6109434	Identifier	out		6108932	0					
ANR	6109435	Identifier	fout		6108932	1					
ANR	6109436	Argument	"""%s\\n"""		6108932	1					
ANR	6109437	PrimaryExpression	"""%s\\n"""		6108932	0					
ANR	6109438	Argument	arg		6108932	2					
ANR	6109439	Identifier	arg		6108932	0					
ANR	6109440	ElseStatement	else		6108932	0					
ANR	6109441	IfStatement	"if ( ! strcmp ( argv [ i ] , ""-e"" ) )"		6108932	0					
ANR	6109442	Condition	"! strcmp ( argv [ i ] , ""-e"" )"	108:7:2656:2677	6108932	0	True				
ANR	6109443	UnaryOperationExpression	"! strcmp ( argv [ i ] , ""-e"" )"		6108932	0					
ANR	6109444	UnaryOperator	!		6108932	0					
ANR	6109445	CallExpression	"strcmp ( argv [ i ] , ""-e"" )"		6108932	1					
ANR	6109446	Callee	strcmp		6108932	0					
ANR	6109447	Identifier	strcmp		6108932	0					
ANR	6109448	ArgumentList	argv [ i ]		6108932	1					
ANR	6109449	Argument	argv [ i ]		6108932	0					
ANR	6109450	ArrayIndexing	argv [ i ]		6108932	0					
ANR	6109451	Identifier	argv		6108932	0					
ANR	6109452	Identifier	i		6108932	1					
ANR	6109453	Argument	"""-e"""		6108932	1					
ANR	6109454	PrimaryExpression	"""-e"""		6108932	0					
ANR	6109455	CompoundStatement		74:31:1637:1637	6108932	1					
ANR	6109456	ExpressionStatement	"GET_ARG ( arg , argv , i )"	109:4:2686:2708	6108932	0	True				
ANR	6109457	CallExpression	"GET_ARG ( arg , argv , i )"		6108932	0					
ANR	6109458	Callee	GET_ARG		6108932	0					
ANR	6109459	Identifier	GET_ARG		6108932	0					
ANR	6109460	ArgumentList	arg		6108932	1					
ANR	6109461	Argument	arg		6108932	0					
ANR	6109462	Identifier	arg		6108932	0					
ANR	6109463	Argument	argv		6108932	1					
ANR	6109464	Identifier	argv		6108932	0					
ANR	6109465	Argument	i		6108932	2					
ANR	6109466	Identifier	i		6108932	0					
ANR	6109467	IfStatement	if ( arg == NULL )		6108932	1					
ANR	6109468	Condition	arg == NULL	110:8:2718:2728	6108932	0	True				
ANR	6109469	EqualityExpression	arg == NULL		6108932	0		==			
ANR	6109470	Identifier	arg		6108932	0					
ANR	6109471	Identifier	NULL		6108932	1					
ANR	6109472	CompoundStatement		76:21:1688:1688	6108932	1					
ANR	6109473	ExpressionStatement	"arg = """""	111:5:2738:2746	6108932	0	True				
ANR	6109474	AssignmentExpression	"arg = """""		6108932	0		=			
ANR	6109475	Identifier	arg		6108932	0					
ANR	6109476	PrimaryExpression	""""""		6108932	1					
ANR	6109477	ExpressionStatement	"spp_eval ( arg , & out )"	113:4:2758:2778	6108932	2	True				
ANR	6109478	CallExpression	"spp_eval ( arg , & out )"		6108932	0					
ANR	6109479	Callee	spp_eval		6108932	0					
ANR	6109480	Identifier	spp_eval		6108932	0					
ANR	6109481	ArgumentList	arg		6108932	1					
ANR	6109482	Argument	arg		6108932	0					
ANR	6109483	Identifier	arg		6108932	0					
ANR	6109484	Argument	& out		6108932	1					
ANR	6109485	UnaryOperationExpression	& out		6108932	0					
ANR	6109486	UnaryOperator	&		6108932	0					
ANR	6109487	Identifier	out		6108932	1					
ANR	6109488	ElseStatement	else		6108932	0					
ANR	6109489	CompoundStatement		80:10:1747:1747	6108932	0					
ANR	6109490	IfStatement	if ( i == argc )		6108932	0					
ANR	6109491	Condition	i == argc	115:8:2800:2808	6108932	0	True				
ANR	6109492	EqualityExpression	i == argc		6108932	0		==			
ANR	6109493	Identifier	i		6108932	0					
ANR	6109494	Identifier	argc		6108932	1					
ANR	6109495	CompoundStatement		81:19:1768:1768	6108932	1					
ANR	6109496	ExpressionStatement	"fprintf ( stderr , ""No file specified.\\n"" )"	116:5:2818:2858	6108932	0	True				
ANR	6109497	CallExpression	"fprintf ( stderr , ""No file specified.\\n"" )"		6108932	0					
ANR	6109498	Callee	fprintf		6108932	0					
ANR	6109499	Identifier	fprintf		6108932	0					
ANR	6109500	ArgumentList	stderr		6108932	1					
ANR	6109501	Argument	stderr		6108932	0					
ANR	6109502	Identifier	stderr		6108932	0					
ANR	6109503	Argument	"""No file specified.\\n"""		6108932	1					
ANR	6109504	PrimaryExpression	"""No file specified.\\n"""		6108932	0					
ANR	6109505	ElseStatement	else		6108932	0					
ANR	6109506	CompoundStatement		83:11:1828:1828	6108932	0					
ANR	6109507	ExpressionStatement	"spp_file ( argv [ i ] , & out )"	118:5:2878:2902	6108932	0	True				
ANR	6109508	CallExpression	"spp_file ( argv [ i ] , & out )"		6108932	0					
ANR	6109509	Callee	spp_file		6108932	0					
ANR	6109510	Identifier	spp_file		6108932	0					
ANR	6109511	ArgumentList	argv [ i ]		6108932	1					
ANR	6109512	Argument	argv [ i ]		6108932	0					
ANR	6109513	ArrayIndexing	argv [ i ]		6108932	0					
ANR	6109514	Identifier	argv		6108932	0					
ANR	6109515	Identifier	i		6108932	1					
ANR	6109516	Argument	& out		6108932	1					
ANR	6109517	UnaryOperationExpression	& out		6108932	0					
ANR	6109518	UnaryOperator	&		6108932	0					
ANR	6109519	Identifier	out		6108932	1					
ANR	6109520	ExpressionStatement	dostdin = 0	119:5:2909:2920	6108932	1	True				
ANR	6109521	AssignmentExpression	dostdin = 0		6108932	0		=			
ANR	6109522	Identifier	dostdin		6108932	0					
ANR	6109523	PrimaryExpression	0		6108932	1					
ANR	6109524	IfStatement	if ( ! out . fout )		6108932	2					
ANR	6109525	Condition	! out . fout	121:9:2932:2940	6108932	0	True				
ANR	6109526	UnaryOperationExpression	! out . fout		6108932	0					
ANR	6109527	UnaryOperator	!		6108932	0					
ANR	6109528	MemberAccess	out . fout		6108932	1					
ANR	6109529	Identifier	out		6108932	0					
ANR	6109530	Identifier	fout		6108932	1					
ANR	6109531	CompoundStatement		88:6:1908:1950	6108932	1					
ANR	6109532	IdentifierDeclStatement	"D printf ( ""%s\\n"" , r_strbuf_get ( out . cout ) ) ;"	122:6:2951:2993	6108932	0	True				
ANR	6109533	IdentifierDecl	"printf ( ""%s\\n"" , r_strbuf_get ( out . cout ) )"		6108932	0					
ANR	6109534	IdentifierDeclType	D		6108932	0					
ANR	6109535	Identifier	printf		6108932	1					
ANR	6109536	Expression	"""%s\\n"" , r_strbuf_get ( out . cout )"		6108932	2					
ANR	6109537	PrimaryExpression	"""%s\\n"""		6108932	0					
ANR	6109538	CallExpression	r_strbuf_get ( out . cout )		6108932	1					
ANR	6109539	Callee	r_strbuf_get		6108932	0					
ANR	6109540	Identifier	r_strbuf_get		6108932	0					
ANR	6109541	ArgumentList	out . cout		6108932	1					
ANR	6109542	Argument	out . cout		6108932	0					
ANR	6109543	MemberAccess	out . cout		6108932	0					
ANR	6109544	Identifier	out		6108932	0					
ANR	6109545	Identifier	cout		6108932	1					
ANR	6109546	ExpressionStatement	r_strbuf_free ( out . cout )	123:6:3001:3025	6108932	1	True				
ANR	6109547	CallExpression	r_strbuf_free ( out . cout )		6108932	0					
ANR	6109548	Callee	r_strbuf_free		6108932	0					
ANR	6109549	Identifier	r_strbuf_free		6108932	0					
ANR	6109550	ArgumentList	out . cout		6108932	1					
ANR	6109551	Argument	out . cout		6108932	0					
ANR	6109552	MemberAccess	out . cout		6108932	0					
ANR	6109553	Identifier	out		6108932	0					
ANR	6109554	Identifier	cout		6108932	1					
ANR	6109555	IfStatement	if ( dostdin )		6108932	1					
ANR	6109556	Condition	dostdin	128:6:3055:3061	6108932	0	True				
ANR	6109557	Identifier	dostdin		6108932	0					
ANR	6109558	CompoundStatement		94:15:2021:2021	6108932	1					
ANR	6109559	ExpressionStatement	"spp_io ( stdin , & out )"	129:3:3069:3089	6108932	0	True				
ANR	6109560	CallExpression	"spp_io ( stdin , & out )"		6108932	0					
ANR	6109561	Callee	spp_io		6108932	0					
ANR	6109562	Identifier	spp_io		6108932	0					
ANR	6109563	ArgumentList	stdin		6108932	1					
ANR	6109564	Argument	stdin		6108932	0					
ANR	6109565	Identifier	stdin		6108932	0					
ANR	6109566	Argument	& out		6108932	1					
ANR	6109567	UnaryOperationExpression	& out		6108932	0					
ANR	6109568	UnaryOperator	&		6108932	0					
ANR	6109569	Identifier	out		6108932	1					
ANR	6109570	IfStatement	if ( proc -> eof )		6108932	7					
ANR	6109571	Condition	proc -> eof	133:5:3104:3112	6108932	0	True				
ANR	6109572	PtrMemberAccess	proc -> eof		6108932	0					
ANR	6109573	Identifier	proc		6108932	0					
ANR	6109574	Identifier	eof		6108932	1					
ANR	6109575	CompoundStatement		99:16:2072:2072	6108932	1					
ANR	6109576	ExpressionStatement	"proc -> eof ( & proc -> state , & out , """" )"	134:2:3119:3153	6108932	0	True				
ANR	6109577	CallExpression	"proc -> eof ( & proc -> state , & out , """" )"		6108932	0					
ANR	6109578	Callee	proc -> eof		6108932	0					
ANR	6109579	PtrMemberAccess	proc -> eof		6108932	0					
ANR	6109580	Identifier	proc		6108932	0					
ANR	6109581	Identifier	eof		6108932	1					
ANR	6109582	ArgumentList	& proc -> state		6108932	1					
ANR	6109583	Argument	& proc -> state		6108932	0					
ANR	6109584	UnaryOperationExpression	& proc -> state		6108932	0					
ANR	6109585	UnaryOperator	&		6108932	0					
ANR	6109586	PtrMemberAccess	proc -> state		6108932	1					
ANR	6109587	Identifier	proc		6108932	0					
ANR	6109588	Identifier	state		6108932	1					
ANR	6109589	Argument	& out		6108932	1					
ANR	6109590	UnaryOperationExpression	& out		6108932	0					
ANR	6109591	UnaryOperator	&		6108932	0					
ANR	6109592	Identifier	out		6108932	1					
ANR	6109593	Argument	""""""		6108932	2					
ANR	6109594	PrimaryExpression	""""""		6108932	0					
ANR	6109595	IfStatement	if ( out . fout )		6108932	8					
ANR	6109596	Condition	out . fout	136:5:3163:3170	6108932	0	True				
ANR	6109597	MemberAccess	out . fout		6108932	0					
ANR	6109598	Identifier	out		6108932	0					
ANR	6109599	Identifier	fout		6108932	1					
ANR	6109600	CompoundStatement		102:15:2130:2130	6108932	1					
ANR	6109601	ExpressionStatement	fclose ( out . fout )	137:2:3177:3194	6108932	0	True				
ANR	6109602	CallExpression	fclose ( out . fout )		6108932	0					
ANR	6109603	Callee	fclose		6108932	0					
ANR	6109604	Identifier	fclose		6108932	0					
ANR	6109605	ArgumentList	out . fout		6108932	1					
ANR	6109606	Argument	out . fout		6108932	0					
ANR	6109607	MemberAccess	out . fout		6108932	0					
ANR	6109608	Identifier	out		6108932	0					
ANR	6109609	Identifier	fout		6108932	1					
ANR	6109610	ReturnStatement	return 0 ;	140:1:3201:3209	6108932	9	True				
ANR	6109611	PrimaryExpression	0		6108932	0					
ANR	6109612	ReturnType	int		6108932	1					
ANR	6109613	Identifier	main		6108932	2					
ANR	6109614	ParameterList	"int argc , char * * argv"		6108932	3					
ANR	6109615	Parameter	int argc	35:9:1019:1026	6108932	0	True				
ANR	6109616	ParameterType	int		6108932	0					
ANR	6109617	Identifier	argc		6108932	1					
ANR	6109618	Parameter	char * * argv	35:19:1029:1039	6108932	1	True				
ANR	6109619	ParameterType	char * *		6108932	0					
ANR	6109620	Identifier	argv		6108932	1					
ANR	6109621	CFGEntryNode	ENTRY		6108932		True				
ANR	6109622	CFGExitNode	EXIT		6108932		True				
ANR	6109623	Symbol	stdin		6108932						
ANR	6109624	Symbol	stdout		6108932						
ANR	6109625	Symbol	* argv		6108932						
ANR	6109626	Symbol	out . fout		6108932						
ANR	6109627	Symbol	argv		6108932						
ANR	6109628	Symbol	out		6108932						
ANR	6109629	Symbol	* args		6108932						
ANR	6109630	Symbol	printf		6108932						
ANR	6109631	Symbol	out . cout		6108932						
ANR	6109632	Symbol	memcmp		6108932						
ANR	6109633	Symbol	arg		6108932						
ANR	6109634	Symbol	proc -> eof		6108932						
ANR	6109635	Symbol	argc		6108932						
ANR	6109636	Symbol	strcmp		6108932						
ANR	6109637	Symbol	args [ j ] . has_arg		6108932						
ANR	6109638	Symbol	fopen		6108932						
ANR	6109639	Symbol	proc		6108932						
ANR	6109640	Symbol	NULL		6108932						
ANR	6109641	Symbol	r_strbuf_new		6108932						
ANR	6109642	Symbol	& proc -> state		6108932						
ANR	6109643	Symbol	i		6108932						
ANR	6109644	Symbol	j		6108932						
ANR	6109645	Symbol	args [ j ] . flag		6108932						
ANR	6109646	Symbol	stderr		6108932						
ANR	6109647	Symbol	* proc		6108932						
ANR	6109648	Symbol	args		6108932						
ANR	6109649	Symbol	& out		6108932						
ANR	6109650	Symbol	* i		6108932						
ANR	6109651	Symbol	* j		6108932						
ANR	6109652	Symbol	VERSION		6108932						
ANR	6109653	Symbol	dostdin		6108932						
