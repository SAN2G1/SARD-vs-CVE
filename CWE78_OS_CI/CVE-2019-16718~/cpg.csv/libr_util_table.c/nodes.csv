command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5252702	File	data/converged/CVE-2019-16718~_radare2/libr_util_table.c								
ANR	5252703	DeclStmt									
ANR	5252704	Decl							bool	bool	Ginc
ANR	5252705	DeclStmt									
ANR	5252706	Decl							int	int	Gnth
ANR	5252707	DeclStmt									
ANR	5252708	Decl							RListComparator	RListComparator	Gcmp
ANR	5252709	Function	sortString	10:0:233:310							
ANR	5252710	FunctionDef	"sortString (const void * a , const void * b)"		5252709	0					
ANR	5252711	CompoundStatement		10:52:285:310	5252709	0					
ANR	5252712	ReturnStatement	"return strcmp ( a , b ) ;"	11:1:288:308	5252709	0	True				
ANR	5252713	CallExpression	"strcmp ( a , b )"		5252709	0					
ANR	5252714	Callee	strcmp		5252709	0					
ANR	5252715	Identifier	strcmp		5252709	0					
ANR	5252716	ArgumentList	a		5252709	1					
ANR	5252717	Argument	a		5252709	0					
ANR	5252718	Identifier	a		5252709	0					
ANR	5252719	Argument	b		5252709	1					
ANR	5252720	Identifier	b		5252709	0					
ANR	5252721	ReturnType	static int		5252709	1					
ANR	5252722	Identifier	sortString		5252709	2					
ANR	5252723	ParameterList	"const void * a , const void * b"		5252709	3					
ANR	5252724	Parameter	const void * a	10:22:255:267	5252709	0	True				
ANR	5252725	ParameterType	const void *		5252709	0					
ANR	5252726	Identifier	a		5252709	1					
ANR	5252727	Parameter	const void * b	10:37:270:282	5252709	1	True				
ANR	5252728	ParameterType	const void *		5252709	0					
ANR	5252729	Identifier	b		5252709	1					
ANR	5252730	CFGEntryNode	ENTRY		5252709		True				
ANR	5252731	CFGExitNode	EXIT		5252709		True				
ANR	5252732	Symbol	strcmp		5252709						
ANR	5252733	Symbol	a		5252709						
ANR	5252734	Symbol	b		5252709						
ANR	5252735	Function	sortNumber	14:0:313:418							
ANR	5252736	FunctionDef	"sortNumber (const void * a , const void * b)"		5252735	0					
ANR	5252737	CompoundStatement		14:52:365:418	5252735	0					
ANR	5252738	ReturnStatement	"return r_num_get ( NULL , a ) - r_num_get ( NULL , b ) ;"	15:1:368:416	5252735	0	True				
ANR	5252739	AdditiveExpression	"r_num_get ( NULL , a ) - r_num_get ( NULL , b )"		5252735	0		-			
ANR	5252740	CallExpression	"r_num_get ( NULL , a )"		5252735	0					
ANR	5252741	Callee	r_num_get		5252735	0					
ANR	5252742	Identifier	r_num_get		5252735	0					
ANR	5252743	ArgumentList	NULL		5252735	1					
ANR	5252744	Argument	NULL		5252735	0					
ANR	5252745	Identifier	NULL		5252735	0					
ANR	5252746	Argument	a		5252735	1					
ANR	5252747	Identifier	a		5252735	0					
ANR	5252748	CallExpression	"r_num_get ( NULL , b )"		5252735	1					
ANR	5252749	Callee	r_num_get		5252735	0					
ANR	5252750	Identifier	r_num_get		5252735	0					
ANR	5252751	ArgumentList	NULL		5252735	1					
ANR	5252752	Argument	NULL		5252735	0					
ANR	5252753	Identifier	NULL		5252735	0					
ANR	5252754	Argument	b		5252735	1					
ANR	5252755	Identifier	b		5252735	0					
ANR	5252756	ReturnType	static int		5252735	1					
ANR	5252757	Identifier	sortNumber		5252735	2					
ANR	5252758	ParameterList	"const void * a , const void * b"		5252735	3					
ANR	5252759	Parameter	const void * a	14:22:335:347	5252735	0	True				
ANR	5252760	ParameterType	const void *		5252735	0					
ANR	5252761	Identifier	a		5252735	1					
ANR	5252762	Parameter	const void * b	14:37:350:362	5252735	1	True				
ANR	5252763	ParameterType	const void *		5252735	0					
ANR	5252764	Identifier	b		5252735	1					
ANR	5252765	CFGEntryNode	ENTRY		5252735		True				
ANR	5252766	CFGExitNode	EXIT		5252735		True				
ANR	5252767	Symbol	a		5252735						
ANR	5252768	Symbol	b		5252735						
ANR	5252769	Symbol	NULL		5252735						
ANR	5252770	Symbol	r_num_get		5252735						
ANR	5252771	DeclStmt									
ANR	5252772	Decl							RTableColumnType	RTableColumnType	r_table_type_string
ANR	5252773	DeclStmt									
ANR	5252774	Decl							RTableColumnType	RTableColumnType	r_table_type_number
ANR	5252775	Function	r_table_type	22:0:638:844							
ANR	5252776	FunctionDef	r_table_type (const char * name)		5252775	0					
ANR	5252777	CompoundStatement		22:56:694:844	5252775	0					
ANR	5252778	IfStatement	"if ( ! strcmp ( name , ""string"" ) )"		5252775	0					
ANR	5252779	Condition	"! strcmp ( name , ""string"" )"	23:5:701:724	5252775	0	True				
ANR	5252780	UnaryOperationExpression	"! strcmp ( name , ""string"" )"		5252775	0					
ANR	5252781	UnaryOperator	!		5252775	0					
ANR	5252782	CallExpression	"strcmp ( name , ""string"" )"		5252775	1					
ANR	5252783	Callee	strcmp		5252775	0					
ANR	5252784	Identifier	strcmp		5252775	0					
ANR	5252785	ArgumentList	name		5252775	1					
ANR	5252786	Argument	name		5252775	0					
ANR	5252787	Identifier	name		5252775	0					
ANR	5252788	Argument	"""string"""		5252775	1					
ANR	5252789	PrimaryExpression	"""string"""		5252775	0					
ANR	5252790	CompoundStatement		2:31:32:32	5252775	1					
ANR	5252791	ReturnStatement	return & r_table_type_string ;	24:2:731:758	5252775	0	True				
ANR	5252792	UnaryOperationExpression	& r_table_type_string		5252775	0					
ANR	5252793	UnaryOperator	&		5252775	0					
ANR	5252794	Identifier	r_table_type_string		5252775	1					
ANR	5252795	IfStatement	"if ( ! strcmp ( name , ""number"" ) )"		5252775	1					
ANR	5252796	Condition	"! strcmp ( name , ""number"" )"	26:5:768:791	5252775	0	True				
ANR	5252797	UnaryOperationExpression	"! strcmp ( name , ""number"" )"		5252775	0					
ANR	5252798	UnaryOperator	!		5252775	0					
ANR	5252799	CallExpression	"strcmp ( name , ""number"" )"		5252775	1					
ANR	5252800	Callee	strcmp		5252775	0					
ANR	5252801	Identifier	strcmp		5252775	0					
ANR	5252802	ArgumentList	name		5252775	1					
ANR	5252803	Argument	name		5252775	0					
ANR	5252804	Identifier	name		5252775	0					
ANR	5252805	Argument	"""number"""		5252775	1					
ANR	5252806	PrimaryExpression	"""number"""		5252775	0					
ANR	5252807	CompoundStatement		5:31:99:99	5252775	1					
ANR	5252808	ReturnStatement	return & r_table_type_number ;	27:2:798:825	5252775	0	True				
ANR	5252809	UnaryOperationExpression	& r_table_type_number		5252775	0					
ANR	5252810	UnaryOperator	&		5252775	0					
ANR	5252811	Identifier	r_table_type_number		5252775	1					
ANR	5252812	ReturnStatement	return NULL ;	29:1:831:842	5252775	2	True				
ANR	5252813	Identifier	NULL		5252775	0					
ANR	5252814	ReturnType	R_API RTableColumnType *		5252775	1					
ANR	5252815	Identifier	r_table_type		5252775	2					
ANR	5252816	ParameterList	const char * name		5252775	3					
ANR	5252817	Parameter	const char * name	22:38:676:691	5252775	0	True				
ANR	5252818	ParameterType	const char *		5252775	0					
ANR	5252819	Identifier	name		5252775	1					
ANR	5252820	CFGEntryNode	ENTRY		5252775		True				
ANR	5252821	CFGExitNode	EXIT		5252775		True				
ANR	5252822	Symbol	strcmp		5252775						
ANR	5252823	Symbol	& r_table_type_number		5252775						
ANR	5252824	Symbol	NULL		5252775						
ANR	5252825	Symbol	name		5252775						
ANR	5252826	Symbol	& r_table_type_string		5252775						
ANR	5252827	Function	__table_adjust	34:0:908:1431							
ANR	5252828	FunctionDef	__table_adjust (RTable * t)		5252827	0					
ANR	5252829	CompoundStatement		34:38:946:1431	5252827	0					
ANR	5252830	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	35:1:949:972	5252827	0	True				
ANR	5252831	IdentifierDecl	* iter		5252827	0					
ANR	5252832	IdentifierDeclType	RListIter *		5252827	0					
ANR	5252833	Identifier	iter		5252827	1					
ANR	5252834	IdentifierDecl	* iter2		5252827	1					
ANR	5252835	IdentifierDeclType	RListIter *		5252827	0					
ANR	5252836	Identifier	iter2		5252827	1					
ANR	5252837	IdentifierDeclStatement	RTableColumn * col ;	36:1:975:992	5252827	1	True				
ANR	5252838	IdentifierDecl	* col		5252827	0					
ANR	5252839	IdentifierDeclType	RTableColumn *		5252827	0					
ANR	5252840	Identifier	col		5252827	1					
ANR	5252841	IdentifierDeclStatement	RTableRow * row ;	37:1:995:1010	5252827	2	True				
ANR	5252842	IdentifierDecl	* row		5252827	0					
ANR	5252843	IdentifierDeclType	RTableRow *		5252827	0					
ANR	5252844	Identifier	row		5252827	1					
ANR	5252845	Statement	r_list_foreach	38:1:1013:1026	5252827	3	True				
ANR	5252846	Statement	(	38:16:1028:1028	5252827	4	True				
ANR	5252847	Statement	t	38:17:1029:1029	5252827	5	True				
ANR	5252848	Statement	->	38:18:1030:1031	5252827	6	True				
ANR	5252849	Statement	cols	38:20:1032:1035	5252827	7	True				
ANR	5252850	Statement	","	38:24:1036:1036	5252827	8	True				
ANR	5252851	Statement	iter	38:26:1038:1041	5252827	9	True				
ANR	5252852	Statement	","	38:30:1042:1042	5252827	10	True				
ANR	5252853	Statement	col	38:32:1044:1046	5252827	11	True				
ANR	5252854	Statement	)	38:35:1047:1047	5252827	12	True				
ANR	5252855	CompoundStatement		6:2:106:153	5252827	13					
ANR	5252856	IdentifierDeclStatement	int itemLength = r_str_len_utf8 ( col -> name ) + 1 ;	39:2:1053:1100	5252827	0	True				
ANR	5252857	IdentifierDecl	itemLength = r_str_len_utf8 ( col -> name ) + 1		5252827	0					
ANR	5252858	IdentifierDeclType	int		5252827	0					
ANR	5252859	Identifier	itemLength		5252827	1					
ANR	5252860	AssignmentExpression	itemLength = r_str_len_utf8 ( col -> name ) + 1		5252827	2		=			
ANR	5252861	Identifier	itemLength		5252827	0					
ANR	5252862	AdditiveExpression	r_str_len_utf8 ( col -> name ) + 1		5252827	1		+			
ANR	5252863	CallExpression	r_str_len_utf8 ( col -> name )		5252827	0					
ANR	5252864	Callee	r_str_len_utf8		5252827	0					
ANR	5252865	Identifier	r_str_len_utf8		5252827	0					
ANR	5252866	ArgumentList	col -> name		5252827	1					
ANR	5252867	Argument	col -> name		5252827	0					
ANR	5252868	PtrMemberAccess	col -> name		5252827	0					
ANR	5252869	Identifier	col		5252827	0					
ANR	5252870	Identifier	name		5252827	1					
ANR	5252871	PrimaryExpression	1		5252827	1					
ANR	5252872	ExpressionStatement	col -> width = itemLength	40:2:1104:1127	5252827	1	True				
ANR	5252873	AssignmentExpression	col -> width = itemLength		5252827	0		=			
ANR	5252874	PtrMemberAccess	col -> width		5252827	0					
ANR	5252875	Identifier	col		5252827	0					
ANR	5252876	Identifier	width		5252827	1					
ANR	5252877	Identifier	itemLength		5252827	1					
ANR	5252878	Statement	r_list_foreach	42:1:1133:1146	5252827	14	True				
ANR	5252879	Statement	(	42:16:1148:1148	5252827	15	True				
ANR	5252880	Statement	t	42:17:1149:1149	5252827	16	True				
ANR	5252881	Statement	->	42:18:1150:1151	5252827	17	True				
ANR	5252882	Statement	rows	42:20:1152:1155	5252827	18	True				
ANR	5252883	Statement	","	42:24:1156:1156	5252827	19	True				
ANR	5252884	Statement	iter	42:26:1158:1161	5252827	20	True				
ANR	5252885	Statement	","	42:30:1162:1162	5252827	21	True				
ANR	5252886	Statement	row	42:32:1164:1166	5252827	22	True				
ANR	5252887	Statement	)	42:35:1167:1167	5252827	23	True				
ANR	5252888	CompoundStatement		11:2:246:258	5252827	24					
ANR	5252889	IdentifierDeclStatement	const char * item ;	43:2:1173:1189	5252827	0	True				
ANR	5252890	IdentifierDecl	* item		5252827	0					
ANR	5252891	IdentifierDeclType	const char *		5252827	0					
ANR	5252892	Identifier	item		5252827	1					
ANR	5252893	IdentifierDeclStatement	int ncol = 0 ;	44:2:1193:1205	5252827	1	True				
ANR	5252894	IdentifierDecl	ncol = 0		5252827	0					
ANR	5252895	IdentifierDeclType	int		5252827	0					
ANR	5252896	Identifier	ncol		5252827	1					
ANR	5252897	AssignmentExpression	ncol = 0		5252827	2		=			
ANR	5252898	Identifier	ncol		5252827	0					
ANR	5252899	PrimaryExpression	0		5252827	1					
ANR	5252900	Statement	r_list_foreach	45:2:1209:1222	5252827	2	True				
ANR	5252901	Statement	(	45:17:1224:1224	5252827	3	True				
ANR	5252902	Statement	row	45:18:1225:1227	5252827	4	True				
ANR	5252903	Statement	->	45:21:1228:1229	5252827	5	True				
ANR	5252904	Statement	items	45:23:1230:1234	5252827	6	True				
ANR	5252905	Statement	","	45:28:1235:1235	5252827	7	True				
ANR	5252906	Statement	iter2	45:30:1237:1241	5252827	8	True				
ANR	5252907	Statement	","	45:35:1242:1242	5252827	9	True				
ANR	5252908	Statement	item	45:37:1244:1247	5252827	10	True				
ANR	5252909	Statement	)	45:41:1248:1248	5252827	11	True				
ANR	5252910	CompoundStatement		14:3:355:401	5252827	12					
ANR	5252911	IdentifierDeclStatement	int itemLength = r_str_len_utf8 ( item ) + 1 ;	46:3:1255:1297	5252827	0	True				
ANR	5252912	IdentifierDecl	itemLength = r_str_len_utf8 ( item ) + 1		5252827	0					
ANR	5252913	IdentifierDeclType	int		5252827	0					
ANR	5252914	Identifier	itemLength		5252827	1					
ANR	5252915	AssignmentExpression	itemLength = r_str_len_utf8 ( item ) + 1		5252827	2		=			
ANR	5252916	Identifier	itemLength		5252827	0					
ANR	5252917	AdditiveExpression	r_str_len_utf8 ( item ) + 1		5252827	1		+			
ANR	5252918	CallExpression	r_str_len_utf8 ( item )		5252827	0					
ANR	5252919	Callee	r_str_len_utf8		5252827	0					
ANR	5252920	Identifier	r_str_len_utf8		5252827	0					
ANR	5252921	ArgumentList	item		5252827	1					
ANR	5252922	Argument	item		5252827	0					
ANR	5252923	Identifier	item		5252827	0					
ANR	5252924	PrimaryExpression	1		5252827	1					
ANR	5252925	IdentifierDeclStatement	"RTableColumn * c = r_list_get_n ( t -> cols , ncol ) ;"	47:3:1302:1348	5252827	1	True				
ANR	5252926	IdentifierDecl	"* c = r_list_get_n ( t -> cols , ncol )"		5252827	0					
ANR	5252927	IdentifierDeclType	RTableColumn *		5252827	0					
ANR	5252928	Identifier	c		5252827	1					
ANR	5252929	AssignmentExpression	"* c = r_list_get_n ( t -> cols , ncol )"		5252827	2		=			
ANR	5252930	Identifier	c		5252827	0					
ANR	5252931	CallExpression	"r_list_get_n ( t -> cols , ncol )"		5252827	1					
ANR	5252932	Callee	r_list_get_n		5252827	0					
ANR	5252933	Identifier	r_list_get_n		5252827	0					
ANR	5252934	ArgumentList	t -> cols		5252827	1					
ANR	5252935	Argument	t -> cols		5252827	0					
ANR	5252936	PtrMemberAccess	t -> cols		5252827	0					
ANR	5252937	Identifier	t		5252827	0					
ANR	5252938	Identifier	cols		5252827	1					
ANR	5252939	Argument	ncol		5252827	1					
ANR	5252940	Identifier	ncol		5252827	0					
ANR	5252941	IfStatement	if ( c )		5252827	2					
ANR	5252942	Condition	c	48:7:1357:1357	5252827	0	True				
ANR	5252943	Identifier	c		5252827	0					
ANR	5252944	CompoundStatement		15:10:413:413	5252827	1					
ANR	5252945	ExpressionStatement	"c -> width = R_MAX ( c -> width , itemLength )"	49:4:1366:1405	5252827	0	True				
ANR	5252946	AssignmentExpression	"c -> width = R_MAX ( c -> width , itemLength )"		5252827	0		=			
ANR	5252947	PtrMemberAccess	c -> width		5252827	0					
ANR	5252948	Identifier	c		5252827	0					
ANR	5252949	Identifier	width		5252827	1					
ANR	5252950	CallExpression	"R_MAX ( c -> width , itemLength )"		5252827	1					
ANR	5252951	Callee	R_MAX		5252827	0					
ANR	5252952	Identifier	R_MAX		5252827	0					
ANR	5252953	ArgumentList	c -> width		5252827	1					
ANR	5252954	Argument	c -> width		5252827	0					
ANR	5252955	PtrMemberAccess	c -> width		5252827	0					
ANR	5252956	Identifier	c		5252827	0					
ANR	5252957	Identifier	width		5252827	1					
ANR	5252958	Argument	itemLength		5252827	1					
ANR	5252959	Identifier	itemLength		5252827	0					
ANR	5252960	ExpressionStatement	ncol ++	51:3:1415:1422	5252827	3	True				
ANR	5252961	PostIncDecOperationExpression	ncol ++		5252827	0					
ANR	5252962	Identifier	ncol		5252827	0					
ANR	5252963	IncDec	++		5252827	1					
ANR	5252964	ReturnType	static void		5252827	1					
ANR	5252965	Identifier	__table_adjust		5252827	2					
ANR	5252966	ParameterList	RTable * t		5252827	3					
ANR	5252967	Parameter	RTable * t	34:27:935:943	5252827	0	True				
ANR	5252968	ParameterType	RTable *		5252827	0					
ANR	5252969	Identifier	t		5252827	1					
ANR	5252970	CFGEntryNode	ENTRY		5252827		True				
ANR	5252971	CFGExitNode	EXIT		5252827		True				
ANR	5252972	Symbol	col		5252827						
ANR	5252973	Symbol	col -> width		5252827						
ANR	5252974	Symbol	ncol		5252827						
ANR	5252975	Symbol	item		5252827						
ANR	5252976	Symbol	c		5252827						
ANR	5252977	Symbol	iter2		5252827						
ANR	5252978	Symbol	t -> cols		5252827						
ANR	5252979	Symbol	iter		5252827						
ANR	5252980	Symbol	r_list_get_n		5252827						
ANR	5252981	Symbol	itemLength		5252827						
ANR	5252982	Symbol	* c		5252827						
ANR	5252983	Symbol	r_str_len_utf8		5252827						
ANR	5252984	Symbol	c -> width		5252827						
ANR	5252985	Symbol	col -> name		5252827						
ANR	5252986	Symbol	t		5252827						
ANR	5252987	Symbol	* col		5252827						
ANR	5252988	Symbol	R_MAX		5252827						
ANR	5252989	Symbol	row		5252827						
ANR	5252990	Symbol	* t		5252827						
ANR	5252991	Function	r_table_row_free	56:0:1434:1513							
ANR	5252992	FunctionDef	r_table_row_free (void * _row)		5252991	0					
ANR	5252993	CompoundStatement		56:40:1474:1513	5252991	0					
ANR	5252994	IdentifierDeclStatement	RTableRow * row = _row ;	57:1:1477:1498	5252991	0	True				
ANR	5252995	IdentifierDecl	* row = _row		5252991	0					
ANR	5252996	IdentifierDeclType	RTableRow *		5252991	0					
ANR	5252997	Identifier	row		5252991	1					
ANR	5252998	AssignmentExpression	* row = _row		5252991	2		=			
ANR	5252999	Identifier	_row		5252991	0					
ANR	5253000	Identifier	_row		5252991	1					
ANR	5253001	ExpressionStatement	free ( row )	58:1:1501:1511	5252991	1	True				
ANR	5253002	CallExpression	free ( row )		5252991	0					
ANR	5253003	Callee	free		5252991	0					
ANR	5253004	Identifier	free		5252991	0					
ANR	5253005	ArgumentList	row		5252991	1					
ANR	5253006	Argument	row		5252991	0					
ANR	5253007	Identifier	row		5252991	0					
ANR	5253008	ReturnType	R_API void		5252991	1					
ANR	5253009	Identifier	r_table_row_free		5252991	2					
ANR	5253010	ParameterList	void * _row		5252991	3					
ANR	5253011	Parameter	void * _row	56:28:1462:1471	5252991	0	True				
ANR	5253012	ParameterType	void *		5252991	0					
ANR	5253013	Identifier	_row		5252991	1					
ANR	5253014	CFGEntryNode	ENTRY		5252991		True				
ANR	5253015	CFGExitNode	EXIT		5252991		True				
ANR	5253016	Symbol	_row		5252991						
ANR	5253017	Symbol	row		5252991						
ANR	5253018	Function	r_table_column_free	61:0:1516:1620							
ANR	5253019	FunctionDef	r_table_column_free (void * _col)		5253018	0					
ANR	5253020	CompoundStatement		61:43:1559:1620	5253018	0					
ANR	5253021	IdentifierDeclStatement	RTableColumn * col = _col ;	62:1:1562:1586	5253018	0	True				
ANR	5253022	IdentifierDecl	* col = _col		5253018	0					
ANR	5253023	IdentifierDeclType	RTableColumn *		5253018	0					
ANR	5253024	Identifier	col		5253018	1					
ANR	5253025	AssignmentExpression	* col = _col		5253018	2		=			
ANR	5253026	Identifier	_col		5253018	0					
ANR	5253027	Identifier	_col		5253018	1					
ANR	5253028	ExpressionStatement	free ( col -> name )	63:1:1589:1605	5253018	1	True				
ANR	5253029	CallExpression	free ( col -> name )		5253018	0					
ANR	5253030	Callee	free		5253018	0					
ANR	5253031	Identifier	free		5253018	0					
ANR	5253032	ArgumentList	col -> name		5253018	1					
ANR	5253033	Argument	col -> name		5253018	0					
ANR	5253034	PtrMemberAccess	col -> name		5253018	0					
ANR	5253035	Identifier	col		5253018	0					
ANR	5253036	Identifier	name		5253018	1					
ANR	5253037	ExpressionStatement	free ( col )	64:1:1608:1618	5253018	2	True				
ANR	5253038	CallExpression	free ( col )		5253018	0					
ANR	5253039	Callee	free		5253018	0					
ANR	5253040	Identifier	free		5253018	0					
ANR	5253041	ArgumentList	col		5253018	1					
ANR	5253042	Argument	col		5253018	0					
ANR	5253043	Identifier	col		5253018	0					
ANR	5253044	ReturnType	R_API void		5253018	1					
ANR	5253045	Identifier	r_table_column_free		5253018	2					
ANR	5253046	ParameterList	void * _col		5253018	3					
ANR	5253047	Parameter	void * _col	61:31:1547:1556	5253018	0	True				
ANR	5253048	ParameterType	void *		5253018	0					
ANR	5253049	Identifier	_col		5253018	1					
ANR	5253050	CFGEntryNode	ENTRY		5253018		True				
ANR	5253051	CFGExitNode	EXIT		5253018		True				
ANR	5253052	Symbol	col		5253018						
ANR	5253053	Symbol	col -> name		5253018						
ANR	5253054	Symbol	* col		5253018						
ANR	5253055	Symbol	_col		5253018						
ANR	5253056	Function	r_table_new	67:0:1623:1822							
ANR	5253057	FunctionDef	r_table_new ()		5253056	0					
ANR	5253058	CompoundStatement		67:28:1651:1822	5253056	0					
ANR	5253059	IdentifierDeclStatement	RTable * t = R_NEW0 ( RTable ) ;	68:1:1654:1681	5253056	0	True				
ANR	5253060	IdentifierDecl	* t = R_NEW0 ( RTable )		5253056	0					
ANR	5253061	IdentifierDeclType	RTable *		5253056	0					
ANR	5253062	Identifier	t		5253056	1					
ANR	5253063	AssignmentExpression	* t = R_NEW0 ( RTable )		5253056	2		=			
ANR	5253064	Identifier	t		5253056	0					
ANR	5253065	CallExpression	R_NEW0 ( RTable )		5253056	1					
ANR	5253066	Callee	R_NEW0		5253056	0					
ANR	5253067	Identifier	R_NEW0		5253056	0					
ANR	5253068	ArgumentList	RTable		5253056	1					
ANR	5253069	Argument	RTable		5253056	0					
ANR	5253070	Identifier	RTable		5253056	0					
ANR	5253071	IfStatement	if ( t )		5253056	1					
ANR	5253072	Condition	t	69:5:1688:1688	5253056	0	True				
ANR	5253073	Identifier	t		5253056	0					
ANR	5253074	CompoundStatement		3:8:39:39	5253056	1					
ANR	5253075	ExpressionStatement	t -> showHeader = true	70:2:1695:1715	5253056	0	True				
ANR	5253076	AssignmentExpression	t -> showHeader = true		5253056	0		=			
ANR	5253077	PtrMemberAccess	t -> showHeader		5253056	0					
ANR	5253078	Identifier	t		5253056	0					
ANR	5253079	Identifier	showHeader		5253056	1					
ANR	5253080	Identifier	true		5253056	1					
ANR	5253081	ExpressionStatement	t -> cols = r_list_newf ( r_table_column_free )	71:2:1719:1762	5253056	1	True				
ANR	5253082	AssignmentExpression	t -> cols = r_list_newf ( r_table_column_free )		5253056	0		=			
ANR	5253083	PtrMemberAccess	t -> cols		5253056	0					
ANR	5253084	Identifier	t		5253056	0					
ANR	5253085	Identifier	cols		5253056	1					
ANR	5253086	CallExpression	r_list_newf ( r_table_column_free )		5253056	1					
ANR	5253087	Callee	r_list_newf		5253056	0					
ANR	5253088	Identifier	r_list_newf		5253056	0					
ANR	5253089	ArgumentList	r_table_column_free		5253056	1					
ANR	5253090	Argument	r_table_column_free		5253056	0					
ANR	5253091	Identifier	r_table_column_free		5253056	0					
ANR	5253092	ExpressionStatement	t -> rows = r_list_newf ( r_table_row_free )	72:2:1766:1806	5253056	2	True				
ANR	5253093	AssignmentExpression	t -> rows = r_list_newf ( r_table_row_free )		5253056	0		=			
ANR	5253094	PtrMemberAccess	t -> rows		5253056	0					
ANR	5253095	Identifier	t		5253056	0					
ANR	5253096	Identifier	rows		5253056	1					
ANR	5253097	CallExpression	r_list_newf ( r_table_row_free )		5253056	1					
ANR	5253098	Callee	r_list_newf		5253056	0					
ANR	5253099	Identifier	r_list_newf		5253056	0					
ANR	5253100	ArgumentList	r_table_row_free		5253056	1					
ANR	5253101	Argument	r_table_row_free		5253056	0					
ANR	5253102	Identifier	r_table_row_free		5253056	0					
ANR	5253103	ReturnStatement	return t ;	74:1:1812:1820	5253056	2	True				
ANR	5253104	Identifier	t		5253056	0					
ANR	5253105	ReturnType	R_API RTable *		5253056	1					
ANR	5253106	Identifier	r_table_new		5253056	2					
ANR	5253107	ParameterList			5253056	3					
ANR	5253108	CFGEntryNode	ENTRY		5253056		True				
ANR	5253109	CFGExitNode	EXIT		5253056		True				
ANR	5253110	Symbol	R_NEW0		5253056						
ANR	5253111	Symbol	r_table_column_free		5253056						
ANR	5253112	Symbol	t		5253056						
ANR	5253113	Symbol	r_list_newf		5253056						
ANR	5253114	Symbol	RTable		5253056						
ANR	5253115	Symbol	true		5253056						
ANR	5253116	Symbol	t -> cols		5253056						
ANR	5253117	Symbol	r_table_row_free		5253056						
ANR	5253118	Symbol	t -> rows		5253056						
ANR	5253119	Symbol	t -> showHeader		5253056						
ANR	5253120	Symbol	* t		5253056						
ANR	5253121	Function	r_table_free	77:0:1825:1921							
ANR	5253122	FunctionDef	r_table_free (RTable * t)		5253121	0					
ANR	5253123	CompoundStatement		77:35:1860:1921	5253121	0					
ANR	5253124	ExpressionStatement	r_list_free ( t -> cols )	78:1:1863:1884	5253121	0	True				
ANR	5253125	CallExpression	r_list_free ( t -> cols )		5253121	0					
ANR	5253126	Callee	r_list_free		5253121	0					
ANR	5253127	Identifier	r_list_free		5253121	0					
ANR	5253128	ArgumentList	t -> cols		5253121	1					
ANR	5253129	Argument	t -> cols		5253121	0					
ANR	5253130	PtrMemberAccess	t -> cols		5253121	0					
ANR	5253131	Identifier	t		5253121	0					
ANR	5253132	Identifier	cols		5253121	1					
ANR	5253133	ExpressionStatement	r_list_free ( t -> rows )	79:1:1887:1908	5253121	1	True				
ANR	5253134	CallExpression	r_list_free ( t -> rows )		5253121	0					
ANR	5253135	Callee	r_list_free		5253121	0					
ANR	5253136	Identifier	r_list_free		5253121	0					
ANR	5253137	ArgumentList	t -> rows		5253121	1					
ANR	5253138	Argument	t -> rows		5253121	0					
ANR	5253139	PtrMemberAccess	t -> rows		5253121	0					
ANR	5253140	Identifier	t		5253121	0					
ANR	5253141	Identifier	rows		5253121	1					
ANR	5253142	ExpressionStatement	free ( t )	80:1:1911:1919	5253121	2	True				
ANR	5253143	CallExpression	free ( t )		5253121	0					
ANR	5253144	Callee	free		5253121	0					
ANR	5253145	Identifier	free		5253121	0					
ANR	5253146	ArgumentList	t		5253121	1					
ANR	5253147	Argument	t		5253121	0					
ANR	5253148	Identifier	t		5253121	0					
ANR	5253149	ReturnType	R_API void		5253121	1					
ANR	5253150	Identifier	r_table_free		5253121	2					
ANR	5253151	ParameterList	RTable * t		5253121	3					
ANR	5253152	Parameter	RTable * t	77:24:1849:1857	5253121	0	True				
ANR	5253153	ParameterType	RTable *		5253121	0					
ANR	5253154	Identifier	t		5253121	1					
ANR	5253155	CFGEntryNode	ENTRY		5253121		True				
ANR	5253156	CFGExitNode	EXIT		5253121		True				
ANR	5253157	Symbol	t		5253121						
ANR	5253158	Symbol	t -> cols		5253121						
ANR	5253159	Symbol	t -> rows		5253121						
ANR	5253160	Symbol	* t		5253121						
ANR	5253161	Function	r_table_add_column	83:0:1924:2250							
ANR	5253162	FunctionDef	"r_table_add_column (RTable * t , RTableColumnType * type , const char * name , int maxWidth)"		5253161	0					
ANR	5253163	CompoundStatement		83:97:2021:2250	5253161	0					
ANR	5253164	IdentifierDeclStatement	RTableColumn * c = R_NEW0 ( RTableColumn ) ;	84:1:2024:2063	5253161	0	True				
ANR	5253165	IdentifierDecl	* c = R_NEW0 ( RTableColumn )		5253161	0					
ANR	5253166	IdentifierDeclType	RTableColumn *		5253161	0					
ANR	5253167	Identifier	c		5253161	1					
ANR	5253168	AssignmentExpression	* c = R_NEW0 ( RTableColumn )		5253161	2		=			
ANR	5253169	Identifier	c		5253161	0					
ANR	5253170	CallExpression	R_NEW0 ( RTableColumn )		5253161	1					
ANR	5253171	Callee	R_NEW0		5253161	0					
ANR	5253172	Identifier	R_NEW0		5253161	0					
ANR	5253173	ArgumentList	RTableColumn		5253161	1					
ANR	5253174	Argument	RTableColumn		5253161	0					
ANR	5253175	Identifier	RTableColumn		5253161	0					
ANR	5253176	IfStatement	if ( c )		5253161	1					
ANR	5253177	Condition	c	85:5:2070:2070	5253161	0	True				
ANR	5253178	Identifier	c		5253161	0					
ANR	5253179	CompoundStatement		7:2:126:168	5253161	1					
ANR	5253180	ExpressionStatement	c -> name = strdup ( name )	86:2:2077:2100	5253161	0	True				
ANR	5253181	AssignmentExpression	c -> name = strdup ( name )		5253161	0		=			
ANR	5253182	PtrMemberAccess	c -> name		5253161	0					
ANR	5253183	Identifier	c		5253161	0					
ANR	5253184	Identifier	name		5253161	1					
ANR	5253185	CallExpression	strdup ( name )		5253161	1					
ANR	5253186	Callee	strdup		5253161	0					
ANR	5253187	Identifier	strdup		5253161	0					
ANR	5253188	ArgumentList	name		5253161	1					
ANR	5253189	Argument	name		5253161	0					
ANR	5253190	Identifier	name		5253161	0					
ANR	5253191	ExpressionStatement	c -> maxWidth = maxWidth	87:2:2104:2126	5253161	1	True				
ANR	5253192	AssignmentExpression	c -> maxWidth = maxWidth		5253161	0		=			
ANR	5253193	PtrMemberAccess	c -> maxWidth		5253161	0					
ANR	5253194	Identifier	c		5253161	0					
ANR	5253195	Identifier	maxWidth		5253161	1					
ANR	5253196	Identifier	maxWidth		5253161	1					
ANR	5253197	ExpressionStatement	c -> type = type	88:2:2130:2144	5253161	2	True				
ANR	5253198	AssignmentExpression	c -> type = type		5253161	0		=			
ANR	5253199	PtrMemberAccess	c -> type		5253161	0					
ANR	5253200	Identifier	c		5253161	0					
ANR	5253201	Identifier	type		5253161	1					
ANR	5253202	Identifier	type		5253161	1					
ANR	5253203	IdentifierDeclStatement	int itemLength = r_str_len_utf8 ( name ) + 1 ;	89:2:2148:2190	5253161	3	True				
ANR	5253204	IdentifierDecl	itemLength = r_str_len_utf8 ( name ) + 1		5253161	0					
ANR	5253205	IdentifierDeclType	int		5253161	0					
ANR	5253206	Identifier	itemLength		5253161	1					
ANR	5253207	AssignmentExpression	itemLength = r_str_len_utf8 ( name ) + 1		5253161	2		=			
ANR	5253208	Identifier	itemLength		5253161	0					
ANR	5253209	AdditiveExpression	r_str_len_utf8 ( name ) + 1		5253161	1		+			
ANR	5253210	CallExpression	r_str_len_utf8 ( name )		5253161	0					
ANR	5253211	Callee	r_str_len_utf8		5253161	0					
ANR	5253212	Identifier	r_str_len_utf8		5253161	0					
ANR	5253213	ArgumentList	name		5253161	1					
ANR	5253214	Argument	name		5253161	0					
ANR	5253215	Identifier	name		5253161	0					
ANR	5253216	PrimaryExpression	1		5253161	1					
ANR	5253217	ExpressionStatement	c -> width = itemLength	90:2:2194:2215	5253161	4	True				
ANR	5253218	AssignmentExpression	c -> width = itemLength		5253161	0		=			
ANR	5253219	PtrMemberAccess	c -> width		5253161	0					
ANR	5253220	Identifier	c		5253161	0					
ANR	5253221	Identifier	width		5253161	1					
ANR	5253222	Identifier	itemLength		5253161	1					
ANR	5253223	ExpressionStatement	"r_list_append ( t -> cols , c )"	91:2:2219:2245	5253161	5	True				
ANR	5253224	CallExpression	"r_list_append ( t -> cols , c )"		5253161	0					
ANR	5253225	Callee	r_list_append		5253161	0					
ANR	5253226	Identifier	r_list_append		5253161	0					
ANR	5253227	ArgumentList	t -> cols		5253161	1					
ANR	5253228	Argument	t -> cols		5253161	0					
ANR	5253229	PtrMemberAccess	t -> cols		5253161	0					
ANR	5253230	Identifier	t		5253161	0					
ANR	5253231	Identifier	cols		5253161	1					
ANR	5253232	Argument	c		5253161	1					
ANR	5253233	Identifier	c		5253161	0					
ANR	5253234	ReturnType	R_API void		5253161	1					
ANR	5253235	Identifier	r_table_add_column		5253161	2					
ANR	5253236	ParameterList	"RTable * t , RTableColumnType * type , const char * name , int maxWidth"		5253161	3					
ANR	5253237	Parameter	RTable * t	83:30:1954:1962	5253161	0	True				
ANR	5253238	ParameterType	RTable *		5253161	0					
ANR	5253239	Identifier	t		5253161	1					
ANR	5253240	Parameter	RTableColumnType * type	83:41:1965:1986	5253161	1	True				
ANR	5253241	ParameterType	RTableColumnType *		5253161	0					
ANR	5253242	Identifier	type		5253161	1					
ANR	5253243	Parameter	const char * name	83:65:1989:2004	5253161	2	True				
ANR	5253244	ParameterType	const char *		5253161	0					
ANR	5253245	Identifier	name		5253161	1					
ANR	5253246	Parameter	int maxWidth	83:83:2007:2018	5253161	3	True				
ANR	5253247	ParameterType	int		5253161	0					
ANR	5253248	Identifier	maxWidth		5253161	1					
ANR	5253249	CFGEntryNode	ENTRY		5253161		True				
ANR	5253250	CFGExitNode	EXIT		5253161		True				
ANR	5253251	Symbol	RTableColumn		5253161						
ANR	5253252	Symbol	c		5253161						
ANR	5253253	Symbol	t -> cols		5253161						
ANR	5253254	Symbol	c -> name		5253161						
ANR	5253255	Symbol	itemLength		5253161						
ANR	5253256	Symbol	type		5253161						
ANR	5253257	Symbol	* c		5253161						
ANR	5253258	Symbol	r_str_len_utf8		5253161						
ANR	5253259	Symbol	R_NEW0		5253161						
ANR	5253260	Symbol	c -> width		5253161						
ANR	5253261	Symbol	t		5253161						
ANR	5253262	Symbol	c -> type		5253161						
ANR	5253263	Symbol	name		5253161						
ANR	5253264	Symbol	strdup		5253161						
ANR	5253265	Symbol	c -> maxWidth		5253161						
ANR	5253266	Symbol	* t		5253161						
ANR	5253267	Symbol	maxWidth		5253161						
ANR	5253268	Function	r_table_row_new	95:0:2253:2373							
ANR	5253269	FunctionDef	r_table_row_new (RList * items)		5253268	0					
ANR	5253270	CompoundStatement		95:47:2300:2373	5253268	0					
ANR	5253271	IdentifierDeclStatement	RTableRow * row = R_NEW ( RTableRow ) ;	96:1:2303:2337	5253268	0	True				
ANR	5253272	IdentifierDecl	* row = R_NEW ( RTableRow )		5253268	0					
ANR	5253273	IdentifierDeclType	RTableRow *		5253268	0					
ANR	5253274	Identifier	row		5253268	1					
ANR	5253275	AssignmentExpression	* row = R_NEW ( RTableRow )		5253268	2		=			
ANR	5253276	Identifier	row		5253268	0					
ANR	5253277	CallExpression	R_NEW ( RTableRow )		5253268	1					
ANR	5253278	Callee	R_NEW		5253268	0					
ANR	5253279	Identifier	R_NEW		5253268	0					
ANR	5253280	ArgumentList	RTableRow		5253268	1					
ANR	5253281	Argument	RTableRow		5253268	0					
ANR	5253282	Identifier	RTableRow		5253268	0					
ANR	5253283	ExpressionStatement	row -> items = items	97:1:2340:2358	5253268	1	True				
ANR	5253284	AssignmentExpression	row -> items = items		5253268	0		=			
ANR	5253285	PtrMemberAccess	row -> items		5253268	0					
ANR	5253286	Identifier	row		5253268	0					
ANR	5253287	Identifier	items		5253268	1					
ANR	5253288	Identifier	items		5253268	1					
ANR	5253289	ReturnStatement	return row ;	98:1:2361:2371	5253268	2	True				
ANR	5253290	Identifier	row		5253268	0					
ANR	5253291	ReturnType	R_API RTableRow *		5253268	1					
ANR	5253292	Identifier	r_table_row_new		5253268	2					
ANR	5253293	ParameterList	RList * items		5253268	3					
ANR	5253294	Parameter	RList * items	95:33:2286:2297	5253268	0	True				
ANR	5253295	ParameterType	RList *		5253268	0					
ANR	5253296	Identifier	items		5253268	1					
ANR	5253297	CFGEntryNode	ENTRY		5253268		True				
ANR	5253298	CFGExitNode	EXIT		5253268		True				
ANR	5253299	Symbol	row -> items		5253268						
ANR	5253300	Symbol	* row		5253268						
ANR	5253301	Symbol	RTableRow		5253268						
ANR	5253302	Symbol	row		5253268						
ANR	5253303	Symbol	R_NEW		5253268						
ANR	5253304	Symbol	items		5253268						
ANR	5253305	Function	addRow	101:0:2376:2666							
ANR	5253306	FunctionDef	"addRow (RTable * t , RList * items , const char * arg , int col)"		5253305	0					
ANR	5253307	CompoundStatement		101:71:2447:2666	5253305	0					
ANR	5253308	IdentifierDeclStatement	int itemLength = r_str_len_utf8 ( arg ) + 1 ;	102:1:2450:2491	5253305	0	True				
ANR	5253309	IdentifierDecl	itemLength = r_str_len_utf8 ( arg ) + 1		5253305	0					
ANR	5253310	IdentifierDeclType	int		5253305	0					
ANR	5253311	Identifier	itemLength		5253305	1					
ANR	5253312	AssignmentExpression	itemLength = r_str_len_utf8 ( arg ) + 1		5253305	2		=			
ANR	5253313	Identifier	itemLength		5253305	0					
ANR	5253314	AdditiveExpression	r_str_len_utf8 ( arg ) + 1		5253305	1		+			
ANR	5253315	CallExpression	r_str_len_utf8 ( arg )		5253305	0					
ANR	5253316	Callee	r_str_len_utf8		5253305	0					
ANR	5253317	Identifier	r_str_len_utf8		5253305	0					
ANR	5253318	ArgumentList	arg		5253305	1					
ANR	5253319	Argument	arg		5253305	0					
ANR	5253320	Identifier	arg		5253305	0					
ANR	5253321	PrimaryExpression	1		5253305	1					
ANR	5253322	IdentifierDeclStatement	"RTableColumn * c = r_list_get_n ( t -> cols , col ) ;"	103:1:2494:2539	5253305	1	True				
ANR	5253323	IdentifierDecl	"* c = r_list_get_n ( t -> cols , col )"		5253305	0					
ANR	5253324	IdentifierDeclType	RTableColumn *		5253305	0					
ANR	5253325	Identifier	c		5253305	1					
ANR	5253326	AssignmentExpression	"* c = r_list_get_n ( t -> cols , col )"		5253305	2		=			
ANR	5253327	Identifier	c		5253305	0					
ANR	5253328	CallExpression	"r_list_get_n ( t -> cols , col )"		5253305	1					
ANR	5253329	Callee	r_list_get_n		5253305	0					
ANR	5253330	Identifier	r_list_get_n		5253305	0					
ANR	5253331	ArgumentList	t -> cols		5253305	1					
ANR	5253332	Argument	t -> cols		5253305	0					
ANR	5253333	PtrMemberAccess	t -> cols		5253305	0					
ANR	5253334	Identifier	t		5253305	0					
ANR	5253335	Identifier	cols		5253305	1					
ANR	5253336	Argument	col		5253305	1					
ANR	5253337	Identifier	col		5253305	0					
ANR	5253338	IfStatement	if ( c )		5253305	2					
ANR	5253339	Condition	c	104:5:2546:2546	5253305	0	True				
ANR	5253340	Identifier	c		5253305	0					
ANR	5253341	CompoundStatement		4:8:101:101	5253305	1					
ANR	5253342	ExpressionStatement	"c -> width = R_MAX ( c -> width , itemLength )"	105:2:2553:2592	5253305	0	True				
ANR	5253343	AssignmentExpression	"c -> width = R_MAX ( c -> width , itemLength )"		5253305	0		=			
ANR	5253344	PtrMemberAccess	c -> width		5253305	0					
ANR	5253345	Identifier	c		5253305	0					
ANR	5253346	Identifier	width		5253305	1					
ANR	5253347	CallExpression	"R_MAX ( c -> width , itemLength )"		5253305	1					
ANR	5253348	Callee	R_MAX		5253305	0					
ANR	5253349	Identifier	R_MAX		5253305	0					
ANR	5253350	ArgumentList	c -> width		5253305	1					
ANR	5253351	Argument	c -> width		5253305	0					
ANR	5253352	PtrMemberAccess	c -> width		5253305	0					
ANR	5253353	Identifier	c		5253305	0					
ANR	5253354	Identifier	width		5253305	1					
ANR	5253355	Argument	itemLength		5253305	1					
ANR	5253356	Identifier	itemLength		5253305	0					
ANR	5253357	ExpressionStatement	"r_list_append ( items , strdup ( arg ) )"	106:2:2596:2631	5253305	1	True				
ANR	5253358	CallExpression	"r_list_append ( items , strdup ( arg ) )"		5253305	0					
ANR	5253359	Callee	r_list_append		5253305	0					
ANR	5253360	Identifier	r_list_append		5253305	0					
ANR	5253361	ArgumentList	items		5253305	1					
ANR	5253362	Argument	items		5253305	0					
ANR	5253363	Identifier	items		5253305	0					
ANR	5253364	Argument	strdup ( arg )		5253305	1					
ANR	5253365	CallExpression	strdup ( arg )		5253305	0					
ANR	5253366	Callee	strdup		5253305	0					
ANR	5253367	Identifier	strdup		5253305	0					
ANR	5253368	ArgumentList	arg		5253305	1					
ANR	5253369	Argument	arg		5253305	0					
ANR	5253370	Identifier	arg		5253305	0					
ANR	5253371	ReturnStatement	return true ;	107:2:2635:2646	5253305	2	True				
ANR	5253372	Identifier	true		5253305	0					
ANR	5253373	ReturnStatement	return false ;	109:1:2652:2664	5253305	3	True				
ANR	5253374	Identifier	false		5253305	0					
ANR	5253375	ReturnType	static bool		5253305	1					
ANR	5253376	Identifier	addRow		5253305	2					
ANR	5253377	ParameterList	"RTable * t , RList * items , const char * arg , int col"		5253305	3					
ANR	5253378	Parameter	RTable * t	101:20:2396:2404	5253305	0	True				
ANR	5253379	ParameterType	RTable *		5253305	0					
ANR	5253380	Identifier	t		5253305	1					
ANR	5253381	Parameter	RList * items	101:31:2407:2418	5253305	1	True				
ANR	5253382	ParameterType	RList *		5253305	0					
ANR	5253383	Identifier	items		5253305	1					
ANR	5253384	Parameter	const char * arg	101:45:2421:2435	5253305	2	True				
ANR	5253385	ParameterType	const char *		5253305	0					
ANR	5253386	Identifier	arg		5253305	1					
ANR	5253387	Parameter	int col	101:62:2438:2444	5253305	3	True				
ANR	5253388	ParameterType	int		5253305	0					
ANR	5253389	Identifier	col		5253305	1					
ANR	5253390	CFGEntryNode	ENTRY		5253305		True				
ANR	5253391	CFGExitNode	EXIT		5253305		True				
ANR	5253392	Symbol	col		5253305						
ANR	5253393	Symbol	c		5253305						
ANR	5253394	Symbol	t -> cols		5253305						
ANR	5253395	Symbol	false		5253305						
ANR	5253396	Symbol	r_list_get_n		5253305						
ANR	5253397	Symbol	itemLength		5253305						
ANR	5253398	Symbol	* c		5253305						
ANR	5253399	Symbol	r_str_len_utf8		5253305						
ANR	5253400	Symbol	c -> width		5253305						
ANR	5253401	Symbol	t		5253305						
ANR	5253402	Symbol	arg		5253305						
ANR	5253403	Symbol	R_MAX		5253305						
ANR	5253404	Symbol	true		5253305						
ANR	5253405	Symbol	strdup		5253305						
ANR	5253406	Symbol	items		5253305						
ANR	5253407	Symbol	* t		5253305						
ANR	5253408	Function	r_table_add_row_list	112:0:2669:2921							
ANR	5253409	FunctionDef	"r_table_add_row_list (RTable * t , RList * items)"		5253408	0					
ANR	5253410	CompoundStatement		112:57:2726:2921	5253408	0					
ANR	5253411	IdentifierDeclStatement	RTableRow * row = r_table_row_new ( items ) ;	113:1:2729:2769	5253408	0	True				
ANR	5253412	IdentifierDecl	* row = r_table_row_new ( items )		5253408	0					
ANR	5253413	IdentifierDeclType	RTableRow *		5253408	0					
ANR	5253414	Identifier	row		5253408	1					
ANR	5253415	AssignmentExpression	* row = r_table_row_new ( items )		5253408	2		=			
ANR	5253416	Identifier	row		5253408	0					
ANR	5253417	CallExpression	r_table_row_new ( items )		5253408	1					
ANR	5253418	Callee	r_table_row_new		5253408	0					
ANR	5253419	Identifier	r_table_row_new		5253408	0					
ANR	5253420	ArgumentList	items		5253408	1					
ANR	5253421	Argument	items		5253408	0					
ANR	5253422	Identifier	items		5253408	0					
ANR	5253423	ExpressionStatement	"r_list_append ( t -> rows , row )"	114:1:2772:2800	5253408	1	True				
ANR	5253424	CallExpression	"r_list_append ( t -> rows , row )"		5253408	0					
ANR	5253425	Callee	r_list_append		5253408	0					
ANR	5253426	Identifier	r_list_append		5253408	0					
ANR	5253427	ArgumentList	t -> rows		5253408	1					
ANR	5253428	Argument	t -> rows		5253408	0					
ANR	5253429	PtrMemberAccess	t -> rows		5253408	0					
ANR	5253430	Identifier	t		5253408	0					
ANR	5253431	Identifier	rows		5253408	1					
ANR	5253432	Argument	row		5253408	1					
ANR	5253433	Identifier	row		5253408	0					
ANR	5253434	ExpressionStatement	"t -> totalCols = R_MAX ( t -> totalCols , r_list_length ( items ) )"	116:1:2861:2919	5253408	2	True				
ANR	5253435	AssignmentExpression	"t -> totalCols = R_MAX ( t -> totalCols , r_list_length ( items ) )"		5253408	0		=			
ANR	5253436	PtrMemberAccess	t -> totalCols		5253408	0					
ANR	5253437	Identifier	t		5253408	0					
ANR	5253438	Identifier	totalCols		5253408	1					
ANR	5253439	CallExpression	"R_MAX ( t -> totalCols , r_list_length ( items ) )"		5253408	1					
ANR	5253440	Callee	R_MAX		5253408	0					
ANR	5253441	Identifier	R_MAX		5253408	0					
ANR	5253442	ArgumentList	t -> totalCols		5253408	1					
ANR	5253443	Argument	t -> totalCols		5253408	0					
ANR	5253444	PtrMemberAccess	t -> totalCols		5253408	0					
ANR	5253445	Identifier	t		5253408	0					
ANR	5253446	Identifier	totalCols		5253408	1					
ANR	5253447	Argument	r_list_length ( items )		5253408	1					
ANR	5253448	CallExpression	r_list_length ( items )		5253408	0					
ANR	5253449	Callee	r_list_length		5253408	0					
ANR	5253450	Identifier	r_list_length		5253408	0					
ANR	5253451	ArgumentList	items		5253408	1					
ANR	5253452	Argument	items		5253408	0					
ANR	5253453	Identifier	items		5253408	0					
ANR	5253454	ReturnType	R_API void		5253408	1					
ANR	5253455	Identifier	r_table_add_row_list		5253408	2					
ANR	5253456	ParameterList	"RTable * t , RList * items"		5253408	3					
ANR	5253457	Parameter	RTable * t	112:32:2701:2709	5253408	0	True				
ANR	5253458	ParameterType	RTable *		5253408	0					
ANR	5253459	Identifier	t		5253408	1					
ANR	5253460	Parameter	RList * items	112:43:2712:2723	5253408	1	True				
ANR	5253461	ParameterType	RList *		5253408	0					
ANR	5253462	Identifier	items		5253408	1					
ANR	5253463	CFGEntryNode	ENTRY		5253408		True				
ANR	5253464	CFGExitNode	EXIT		5253408		True				
ANR	5253465	Symbol	t		5253408						
ANR	5253466	Symbol	R_MAX		5253408						
ANR	5253467	Symbol	t -> rows		5253408						
ANR	5253468	Symbol	row		5253408						
ANR	5253469	Symbol	items		5253408						
ANR	5253470	Symbol	r_table_row_new		5253408						
ANR	5253471	Symbol	* t		5253408						
ANR	5253472	Symbol	r_list_length		5253408						
ANR	5253473	Symbol	t -> totalCols		5253408						
ANR	5253474	Function	r_table_add_row	119:0:2924:3502							
ANR	5253475	FunctionDef	"r_table_add_row (RTable * t , const char * name)"		5253474	0					
ANR	5253476	CompoundStatement		119:61:2985:3502	5253474	0					
ANR	5253477	IdentifierDeclStatement	va_list ap ;	120:1:2988:2998	5253474	0	True				
ANR	5253478	IdentifierDecl	ap		5253474	0					
ANR	5253479	IdentifierDeclType	va_list		5253474	0					
ANR	5253480	Identifier	ap		5253474	1					
ANR	5253481	ExpressionStatement	"va_start ( ap , name )"	121:1:3001:3020	5253474	1	True				
ANR	5253482	CallExpression	"va_start ( ap , name )"		5253474	0					
ANR	5253483	Callee	va_start		5253474	0					
ANR	5253484	Identifier	va_start		5253474	0					
ANR	5253485	ArgumentList	ap		5253474	1					
ANR	5253486	Argument	ap		5253474	0					
ANR	5253487	Identifier	ap		5253474	0					
ANR	5253488	Argument	name		5253474	1					
ANR	5253489	Identifier	name		5253474	0					
ANR	5253490	IdentifierDeclStatement	int col = 0 ;	122:1:3023:3034	5253474	2	True				
ANR	5253491	IdentifierDecl	col = 0		5253474	0					
ANR	5253492	IdentifierDeclType	int		5253474	0					
ANR	5253493	Identifier	col		5253474	1					
ANR	5253494	AssignmentExpression	col = 0		5253474	2		=			
ANR	5253495	Identifier	col		5253474	0					
ANR	5253496	PrimaryExpression	0		5253474	1					
ANR	5253497	IdentifierDeclStatement	RList * items = r_list_newf ( free ) ;	123:1:3037:3070	5253474	3	True				
ANR	5253498	IdentifierDecl	* items = r_list_newf ( free )		5253474	0					
ANR	5253499	IdentifierDeclType	RList *		5253474	0					
ANR	5253500	Identifier	items		5253474	1					
ANR	5253501	AssignmentExpression	* items = r_list_newf ( free )		5253474	2		=			
ANR	5253502	Identifier	items		5253474	0					
ANR	5253503	CallExpression	r_list_newf ( free )		5253474	1					
ANR	5253504	Callee	r_list_newf		5253474	0					
ANR	5253505	Identifier	r_list_newf		5253474	0					
ANR	5253506	ArgumentList	free		5253474	1					
ANR	5253507	Argument	free		5253474	0					
ANR	5253508	Identifier	free		5253474	0					
ANR	5253509	ExpressionStatement	"addRow ( t , items , name , col ++ )"	124:1:3073:3103	5253474	4	True				
ANR	5253510	CallExpression	"addRow ( t , items , name , col ++ )"		5253474	0					
ANR	5253511	Callee	addRow		5253474	0					
ANR	5253512	Identifier	addRow		5253474	0					
ANR	5253513	ArgumentList	t		5253474	1					
ANR	5253514	Argument	t		5253474	0					
ANR	5253515	Identifier	t		5253474	0					
ANR	5253516	Argument	items		5253474	1					
ANR	5253517	Identifier	items		5253474	0					
ANR	5253518	Argument	name		5253474	2					
ANR	5253519	Identifier	name		5253474	0					
ANR	5253520	Argument	col ++		5253474	3					
ANR	5253521	PostIncDecOperationExpression	col ++		5253474	0					
ANR	5253522	Identifier	col		5253474	0					
ANR	5253523	IncDec	++		5253474	1					
ANR	5253524	ForStatement	for ( ; ; )		5253474	5					
ANR	5253525	CompoundStatement		7:10:129:129	5253474	0					
ANR	5253526	Statement	const	126:2:3119:3123	5253474	0	True				
ANR	5253527	Statement	char	126:8:3125:3128	5253474	1	True				
ANR	5253528	Statement	*	126:13:3130:3130	5253474	2	True				
ANR	5253529	Statement	arg	126:14:3131:3133	5253474	3	True				
ANR	5253530	Statement	=	126:18:3135:3135	5253474	4	True				
ANR	5253531	Statement	va_arg	126:20:3137:3142	5253474	5	True				
ANR	5253532	Statement	(	126:27:3144:3144	5253474	6	True				
ANR	5253533	Statement	ap	126:28:3145:3146	5253474	7	True				
ANR	5253534	Statement	","	126:30:3147:3147	5253474	8	True				
ANR	5253535	Statement	const	126:32:3149:3153	5253474	9	True				
ANR	5253536	Statement	char	126:38:3155:3158	5253474	10	True				
ANR	5253537	Statement	*	126:43:3160:3160	5253474	11	True				
ANR	5253538	Statement	)	126:44:3161:3161	5253474	12	True				
ANR	5253539	ExpressionStatement		126:45:3162:3162	5253474	13	True				
ANR	5253540	IfStatement	if ( ! arg )		5253474	14					
ANR	5253541	Condition	! arg	127:6:3170:3173	5253474	0	True				
ANR	5253542	UnaryOperationExpression	! arg		5253474	0					
ANR	5253543	UnaryOperator	!		5253474	0					
ANR	5253544	Identifier	arg		5253474	1					
ANR	5253545	CompoundStatement		9:12:190:190	5253474	1					
ANR	5253546	BreakStatement	break ;	128:3:3181:3186	5253474	0	True				
ANR	5253547	ExpressionStatement	"addRow ( t , items , arg , col )"	130:2:3194:3221	5253474	15	True				
ANR	5253548	CallExpression	"addRow ( t , items , arg , col )"		5253474	0					
ANR	5253549	Callee	addRow		5253474	0					
ANR	5253550	Identifier	addRow		5253474	0					
ANR	5253551	ArgumentList	t		5253474	1					
ANR	5253552	Argument	t		5253474	0					
ANR	5253553	Identifier	t		5253474	0					
ANR	5253554	Argument	items		5253474	1					
ANR	5253555	Identifier	items		5253474	0					
ANR	5253556	Argument	arg		5253474	2					
ANR	5253557	Identifier	arg		5253474	0					
ANR	5253558	Argument	col		5253474	3					
ANR	5253559	Identifier	col		5253474	0					
ANR	5253560	ExpressionStatement	col ++	132:2:3285:3290	5253474	16	True				
ANR	5253561	PostIncDecOperationExpression	col ++		5253474	0					
ANR	5253562	Identifier	col		5253474	0					
ANR	5253563	IncDec	++		5253474	1					
ANR	5253564	ExpressionStatement	va_end ( ap )	134:1:3296:3307	5253474	6	True				
ANR	5253565	CallExpression	va_end ( ap )		5253474	0					
ANR	5253566	Callee	va_end		5253474	0					
ANR	5253567	Identifier	va_end		5253474	0					
ANR	5253568	ArgumentList	ap		5253474	1					
ANR	5253569	Argument	ap		5253474	0					
ANR	5253570	Identifier	ap		5253474	0					
ANR	5253571	IdentifierDeclStatement	RTableRow * row = r_table_row_new ( items ) ;	135:1:3310:3350	5253474	7	True				
ANR	5253572	IdentifierDecl	* row = r_table_row_new ( items )		5253474	0					
ANR	5253573	IdentifierDeclType	RTableRow *		5253474	0					
ANR	5253574	Identifier	row		5253474	1					
ANR	5253575	AssignmentExpression	* row = r_table_row_new ( items )		5253474	2		=			
ANR	5253576	Identifier	row		5253474	0					
ANR	5253577	CallExpression	r_table_row_new ( items )		5253474	1					
ANR	5253578	Callee	r_table_row_new		5253474	0					
ANR	5253579	Identifier	r_table_row_new		5253474	0					
ANR	5253580	ArgumentList	items		5253474	1					
ANR	5253581	Argument	items		5253474	0					
ANR	5253582	Identifier	items		5253474	0					
ANR	5253583	ExpressionStatement	"r_list_append ( t -> rows , row )"	136:1:3353:3381	5253474	8	True				
ANR	5253584	CallExpression	"r_list_append ( t -> rows , row )"		5253474	0					
ANR	5253585	Callee	r_list_append		5253474	0					
ANR	5253586	Identifier	r_list_append		5253474	0					
ANR	5253587	ArgumentList	t -> rows		5253474	1					
ANR	5253588	Argument	t -> rows		5253474	0					
ANR	5253589	PtrMemberAccess	t -> rows		5253474	0					
ANR	5253590	Identifier	t		5253474	0					
ANR	5253591	Identifier	rows		5253474	1					
ANR	5253592	Argument	row		5253474	1					
ANR	5253593	Identifier	row		5253474	0					
ANR	5253594	ExpressionStatement	"t -> totalCols = R_MAX ( t -> totalCols , r_list_length ( items ) )"	138:1:3442:3500	5253474	9	True				
ANR	5253595	AssignmentExpression	"t -> totalCols = R_MAX ( t -> totalCols , r_list_length ( items ) )"		5253474	0		=			
ANR	5253596	PtrMemberAccess	t -> totalCols		5253474	0					
ANR	5253597	Identifier	t		5253474	0					
ANR	5253598	Identifier	totalCols		5253474	1					
ANR	5253599	CallExpression	"R_MAX ( t -> totalCols , r_list_length ( items ) )"		5253474	1					
ANR	5253600	Callee	R_MAX		5253474	0					
ANR	5253601	Identifier	R_MAX		5253474	0					
ANR	5253602	ArgumentList	t -> totalCols		5253474	1					
ANR	5253603	Argument	t -> totalCols		5253474	0					
ANR	5253604	PtrMemberAccess	t -> totalCols		5253474	0					
ANR	5253605	Identifier	t		5253474	0					
ANR	5253606	Identifier	totalCols		5253474	1					
ANR	5253607	Argument	r_list_length ( items )		5253474	1					
ANR	5253608	CallExpression	r_list_length ( items )		5253474	0					
ANR	5253609	Callee	r_list_length		5253474	0					
ANR	5253610	Identifier	r_list_length		5253474	0					
ANR	5253611	ArgumentList	items		5253474	1					
ANR	5253612	Argument	items		5253474	0					
ANR	5253613	Identifier	items		5253474	0					
ANR	5253614	ReturnType	R_API void		5253474	1					
ANR	5253615	Identifier	r_table_add_row		5253474	2					
ANR	5253616	ParameterList	"RTable * t , const char * name"		5253474	3					
ANR	5253617	Parameter	RTable * t	119:27:2951:2959	5253474	0	True				
ANR	5253618	ParameterType	RTable *		5253474	0					
ANR	5253619	Identifier	t		5253474	1					
ANR	5253620	Parameter	const char * name	119:38:2962:2977	5253474	1	True				
ANR	5253621	ParameterType	const char *		5253474	0					
ANR	5253622	Identifier	name		5253474	1					
ANR	5253623	CFGEntryNode	ENTRY		5253474		True				
ANR	5253624	CFGExitNode	EXIT		5253474		True				
ANR	5253625	InfiniteForNode	true		5253474		True				
ANR	5253626	Symbol	col		5253474						
ANR	5253627	Symbol	r_list_newf		5253474						
ANR	5253628	Symbol	r_table_row_new		5253474						
ANR	5253629	Symbol	ap		5253474						
ANR	5253630	Symbol	t -> totalCols		5253474						
ANR	5253631	Symbol	t		5253474						
ANR	5253632	Symbol	arg		5253474						
ANR	5253633	Symbol	name		5253474						
ANR	5253634	Symbol	R_MAX		5253474						
ANR	5253635	Symbol	t -> rows		5253474						
ANR	5253636	Symbol	row		5253474						
ANR	5253637	Symbol	free		5253474						
ANR	5253638	Symbol	items		5253474						
ANR	5253639	Symbol	* t		5253474						
ANR	5253640	Symbol	r_list_length		5253474						
ANR	5253641	Function	__strbuf_append_col_aligned_fancy	143:0:3525:4079							
ANR	5253642	FunctionDef	"__strbuf_append_col_aligned_fancy (RStrBuf * sb , RTableColumn * col , char * str)"		5253641	0					
ANR	5253643	CompoundStatement		143:89:3614:4079	5253641	0					
ANR	5253644	SwitchStatement	switch ( col -> align )		5253641	0					
ANR	5253645	Condition	col -> align	144:9:3625:3634	5253641	0	True				
ANR	5253646	PtrMemberAccess	col -> align		5253641	0					
ANR	5253647	Identifier	col		5253641	0					
ANR	5253648	Identifier	align		5253641	1					
ANR	5253649	CompoundStatement		2:21:22:22	5253641	1					
ANR	5253650	Label	case R_TABLE_ALIGN_LEFT :	145:1:3640:3663	5253641	0	True				
ANR	5253651	Identifier	R_TABLE_ALIGN_LEFT		5253641	0					
ANR	5253652	ExpressionStatement	"r_strbuf_appendf ( sb , ""| %-*s "" , col -> width , str )"	146:2:3667:3716	5253641	1	True				
ANR	5253653	CallExpression	"r_strbuf_appendf ( sb , ""| %-*s "" , col -> width , str )"		5253641	0					
ANR	5253654	Callee	r_strbuf_appendf		5253641	0					
ANR	5253655	Identifier	r_strbuf_appendf		5253641	0					
ANR	5253656	ArgumentList	sb		5253641	1					
ANR	5253657	Argument	sb		5253641	0					
ANR	5253658	Identifier	sb		5253641	0					
ANR	5253659	Argument	"""| %-*s """		5253641	1					
ANR	5253660	PrimaryExpression	"""| %-*s """		5253641	0					
ANR	5253661	Argument	col -> width		5253641	2					
ANR	5253662	PtrMemberAccess	col -> width		5253641	0					
ANR	5253663	Identifier	col		5253641	0					
ANR	5253664	Identifier	width		5253641	1					
ANR	5253665	Argument	str		5253641	3					
ANR	5253666	Identifier	str		5253641	0					
ANR	5253667	BreakStatement	break ;	147:2:3720:3725	5253641	2	True				
ANR	5253668	Label	case R_TABLE_ALIGN_RIGHT :	148:1:3728:3752	5253641	3	True				
ANR	5253669	Identifier	R_TABLE_ALIGN_RIGHT		5253641	0					
ANR	5253670	ExpressionStatement	"r_strbuf_appendf ( sb , ""| %*s "" , col -> width , str )"	149:2:3756:3804	5253641	4	True				
ANR	5253671	CallExpression	"r_strbuf_appendf ( sb , ""| %*s "" , col -> width , str )"		5253641	0					
ANR	5253672	Callee	r_strbuf_appendf		5253641	0					
ANR	5253673	Identifier	r_strbuf_appendf		5253641	0					
ANR	5253674	ArgumentList	sb		5253641	1					
ANR	5253675	Argument	sb		5253641	0					
ANR	5253676	Identifier	sb		5253641	0					
ANR	5253677	Argument	"""| %*s """		5253641	1					
ANR	5253678	PrimaryExpression	"""| %*s """		5253641	0					
ANR	5253679	Argument	col -> width		5253641	2					
ANR	5253680	PtrMemberAccess	col -> width		5253641	0					
ANR	5253681	Identifier	col		5253641	0					
ANR	5253682	Identifier	width		5253641	1					
ANR	5253683	Argument	str		5253641	3					
ANR	5253684	Identifier	str		5253641	0					
ANR	5253685	BreakStatement	break ;	150:2:3808:3813	5253641	5	True				
ANR	5253686	Label	case R_TABLE_ALIGN_CENTER :	151:1:3816:3841	5253641	6	True				
ANR	5253687	Identifier	R_TABLE_ALIGN_CENTER		5253641	0					
ANR	5253688	CompoundStatement		13:3:307:346	5253641	7					
ANR	5253689	IdentifierDeclStatement	int len = r_str_len_utf8 ( str ) ;	153:3:3850:3880	5253641	0	True				
ANR	5253690	IdentifierDecl	len = r_str_len_utf8 ( str )		5253641	0					
ANR	5253691	IdentifierDeclType	int		5253641	0					
ANR	5253692	Identifier	len		5253641	1					
ANR	5253693	AssignmentExpression	len = r_str_len_utf8 ( str )		5253641	2		=			
ANR	5253694	Identifier	len		5253641	0					
ANR	5253695	CallExpression	r_str_len_utf8 ( str )		5253641	1					
ANR	5253696	Callee	r_str_len_utf8		5253641	0					
ANR	5253697	Identifier	r_str_len_utf8		5253641	0					
ANR	5253698	ArgumentList	str		5253641	1					
ANR	5253699	Argument	str		5253641	0					
ANR	5253700	Identifier	str		5253641	0					
ANR	5253701	IdentifierDeclStatement	int pad = ( col -> width - len ) / 2 ;	154:3:3885:3917	5253641	1	True				
ANR	5253702	IdentifierDecl	pad = ( col -> width - len ) / 2		5253641	0					
ANR	5253703	IdentifierDeclType	int		5253641	0					
ANR	5253704	Identifier	pad		5253641	1					
ANR	5253705	AssignmentExpression	pad = ( col -> width - len ) / 2		5253641	2		=			
ANR	5253706	Identifier	pad		5253641	0					
ANR	5253707	MultiplicativeExpression	( col -> width - len ) / 2		5253641	1		/			
ANR	5253708	AdditiveExpression	col -> width - len		5253641	0		-			
ANR	5253709	PtrMemberAccess	col -> width		5253641	0					
ANR	5253710	Identifier	col		5253641	0					
ANR	5253711	Identifier	width		5253641	1					
ANR	5253712	Identifier	len		5253641	1					
ANR	5253713	PrimaryExpression	2		5253641	1					
ANR	5253714	IdentifierDeclStatement	int left = col -> width - ( pad * 2 + len ) ;	155:3:3922:3961	5253641	2	True				
ANR	5253715	IdentifierDecl	left = col -> width - ( pad * 2 + len )		5253641	0					
ANR	5253716	IdentifierDeclType	int		5253641	0					
ANR	5253717	Identifier	left		5253641	1					
ANR	5253718	AssignmentExpression	left = col -> width - ( pad * 2 + len )		5253641	2		=			
ANR	5253719	Identifier	left		5253641	0					
ANR	5253720	AdditiveExpression	col -> width - ( pad * 2 + len )		5253641	1		-			
ANR	5253721	PtrMemberAccess	col -> width		5253641	0					
ANR	5253722	Identifier	col		5253641	0					
ANR	5253723	Identifier	width		5253641	1					
ANR	5253724	AdditiveExpression	pad * 2 + len		5253641	1		+			
ANR	5253725	MultiplicativeExpression	pad * 2		5253641	0		*			
ANR	5253726	Identifier	pad		5253641	0					
ANR	5253727	PrimaryExpression	2		5253641	1					
ANR	5253728	Identifier	len		5253641	1					
ANR	5253729	ExpressionStatement	"r_strbuf_appendf ( sb , ""| %-*s "" , pad , "" "" )"	156:3:3966:4008	5253641	3	True				
ANR	5253730	CallExpression	"r_strbuf_appendf ( sb , ""| %-*s "" , pad , "" "" )"		5253641	0					
ANR	5253731	Callee	r_strbuf_appendf		5253641	0					
ANR	5253732	Identifier	r_strbuf_appendf		5253641	0					
ANR	5253733	ArgumentList	sb		5253641	1					
ANR	5253734	Argument	sb		5253641	0					
ANR	5253735	Identifier	sb		5253641	0					
ANR	5253736	Argument	"""| %-*s """		5253641	1					
ANR	5253737	PrimaryExpression	"""| %-*s """		5253641	0					
ANR	5253738	Argument	pad		5253641	2					
ANR	5253739	Identifier	pad		5253641	0					
ANR	5253740	Argument	""" """		5253641	3					
ANR	5253741	PrimaryExpression	""" """		5253641	0					
ANR	5253742	ExpressionStatement	"r_strbuf_appendf ( sb , ""%-*s "" , pad + left , str )"	157:3:4013:4060	5253641	4	True				
ANR	5253743	CallExpression	"r_strbuf_appendf ( sb , ""%-*s "" , pad + left , str )"		5253641	0					
ANR	5253744	Callee	r_strbuf_appendf		5253641	0					
ANR	5253745	Identifier	r_strbuf_appendf		5253641	0					
ANR	5253746	ArgumentList	sb		5253641	1					
ANR	5253747	Argument	sb		5253641	0					
ANR	5253748	Identifier	sb		5253641	0					
ANR	5253749	Argument	"""%-*s """		5253641	1					
ANR	5253750	PrimaryExpression	"""%-*s """		5253641	0					
ANR	5253751	Argument	pad + left		5253641	2					
ANR	5253752	AdditiveExpression	pad + left		5253641	0		+			
ANR	5253753	Identifier	pad		5253641	0					
ANR	5253754	Identifier	left		5253641	1					
ANR	5253755	Argument	str		5253641	3					
ANR	5253756	Identifier	str		5253641	0					
ANR	5253757	BreakStatement	break ;	158:3:4065:4070	5253641	5	True				
ANR	5253758	ReturnType	static void		5253641	1					
ANR	5253759	Identifier	__strbuf_append_col_aligned_fancy		5253641	2					
ANR	5253760	ParameterList	"RStrBuf * sb , RTableColumn * col , char * str"		5253641	3					
ANR	5253761	Parameter	RStrBuf * sb	143:46:3571:3581	5253641	0	True				
ANR	5253762	ParameterType	RStrBuf *		5253641	0					
ANR	5253763	Identifier	sb		5253641	1					
ANR	5253764	Parameter	RTableColumn * col	143:59:3584:3600	5253641	1	True				
ANR	5253765	ParameterType	RTableColumn *		5253641	0					
ANR	5253766	Identifier	col		5253641	1					
ANR	5253767	Parameter	char * str	143:78:3603:3611	5253641	2	True				
ANR	5253768	ParameterType	char *		5253641	0					
ANR	5253769	Identifier	str		5253641	1					
ANR	5253770	CFGEntryNode	ENTRY		5253641		True				
ANR	5253771	CFGExitNode	EXIT		5253641		True				
ANR	5253772	Symbol	str		5253641						
ANR	5253773	Symbol	r_str_len_utf8		5253641						
ANR	5253774	Symbol	col		5253641						
ANR	5253775	Symbol	col -> width		5253641						
ANR	5253776	Symbol	pad		5253641						
ANR	5253777	Symbol	len		5253641						
ANR	5253778	Symbol	* col		5253641						
ANR	5253779	Symbol	left		5253641						
ANR	5253780	Symbol	col -> align		5253641						
ANR	5253781	Symbol	sb		5253641						
ANR	5253782	Function	r_table_tofancystring	163:0:4082:4893							
ANR	5253783	FunctionDef	r_table_tofancystring (RTable * t)		5253782	0					
ANR	5253784	CompoundStatement		163:45:4127:4893	5253782	0					
ANR	5253785	IdentifierDeclStatement	"RStrBuf * sb = r_strbuf_new ( """" ) ;"	164:1:4130:4161	5253782	0	True				
ANR	5253786	IdentifierDecl	"* sb = r_strbuf_new ( """" )"		5253782	0					
ANR	5253787	IdentifierDeclType	RStrBuf *		5253782	0					
ANR	5253788	Identifier	sb		5253782	1					
ANR	5253789	AssignmentExpression	"* sb = r_strbuf_new ( """" )"		5253782	2		=			
ANR	5253790	Identifier	sb		5253782	0					
ANR	5253791	CallExpression	"r_strbuf_new ( """" )"		5253782	1					
ANR	5253792	Callee	r_strbuf_new		5253782	0					
ANR	5253793	Identifier	r_strbuf_new		5253782	0					
ANR	5253794	ArgumentList	""""""		5253782	1					
ANR	5253795	Argument	""""""		5253782	0					
ANR	5253796	PrimaryExpression	""""""		5253782	0					
ANR	5253797	IdentifierDeclStatement	RTableRow * row ;	165:1:4164:4178	5253782	1	True				
ANR	5253798	IdentifierDecl	* row		5253782	0					
ANR	5253799	IdentifierDeclType	RTableRow *		5253782	0					
ANR	5253800	Identifier	row		5253782	1					
ANR	5253801	IdentifierDeclStatement	RTableColumn * col ;	166:1:4181:4198	5253782	2	True				
ANR	5253802	IdentifierDecl	* col		5253782	0					
ANR	5253803	IdentifierDeclType	RTableColumn *		5253782	0					
ANR	5253804	Identifier	col		5253782	1					
ANR	5253805	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	167:1:4201:4224	5253782	3	True				
ANR	5253806	IdentifierDecl	* iter		5253782	0					
ANR	5253807	IdentifierDeclType	RListIter *		5253782	0					
ANR	5253808	Identifier	iter		5253782	1					
ANR	5253809	IdentifierDecl	* iter2		5253782	1					
ANR	5253810	IdentifierDeclType	RListIter *		5253782	0					
ANR	5253811	Identifier	iter2		5253782	1					
ANR	5253812	Statement	r_list_foreach	169:1:4229:4242	5253782	4	True				
ANR	5253813	Statement	(	169:16:4244:4244	5253782	5	True				
ANR	5253814	Statement	t	169:17:4245:4245	5253782	6	True				
ANR	5253815	Statement	->	169:18:4246:4247	5253782	7	True				
ANR	5253816	Statement	cols	169:20:4248:4251	5253782	8	True				
ANR	5253817	Statement	","	169:24:4252:4252	5253782	9	True				
ANR	5253818	Statement	iter	169:26:4254:4257	5253782	10	True				
ANR	5253819	Statement	","	169:30:4258:4258	5253782	11	True				
ANR	5253820	Statement	col	169:32:4260:4262	5253782	12	True				
ANR	5253821	Statement	)	169:35:4263:4263	5253782	13	True				
ANR	5253822	CompoundStatement		7:37:137:137	5253782	14					
ANR	5253823	ExpressionStatement	"__strbuf_append_col_aligned_fancy ( sb , col , col -> name )"	170:2:4269:4322	5253782	0	True				
ANR	5253824	CallExpression	"__strbuf_append_col_aligned_fancy ( sb , col , col -> name )"		5253782	0					
ANR	5253825	Callee	__strbuf_append_col_aligned_fancy		5253782	0					
ANR	5253826	Identifier	__strbuf_append_col_aligned_fancy		5253782	0					
ANR	5253827	ArgumentList	sb		5253782	1					
ANR	5253828	Argument	sb		5253782	0					
ANR	5253829	Identifier	sb		5253782	0					
ANR	5253830	Argument	col		5253782	1					
ANR	5253831	Identifier	col		5253782	0					
ANR	5253832	Argument	col -> name		5253782	2					
ANR	5253833	PtrMemberAccess	col -> name		5253782	0					
ANR	5253834	Identifier	col		5253782	0					
ANR	5253835	Identifier	name		5253782	1					
ANR	5253836	IdentifierDeclStatement	int len = r_strbuf_length ( sb ) - 1 ;	172:1:4328:4362	5253782	15	True				
ANR	5253837	IdentifierDecl	len = r_strbuf_length ( sb ) - 1		5253782	0					
ANR	5253838	IdentifierDeclType	int		5253782	0					
ANR	5253839	Identifier	len		5253782	1					
ANR	5253840	AssignmentExpression	len = r_strbuf_length ( sb ) - 1		5253782	2		=			
ANR	5253841	Identifier	len		5253782	0					
ANR	5253842	AdditiveExpression	r_strbuf_length ( sb ) - 1		5253782	1		-			
ANR	5253843	CallExpression	r_strbuf_length ( sb )		5253782	0					
ANR	5253844	Callee	r_strbuf_length		5253782	0					
ANR	5253845	Identifier	r_strbuf_length		5253782	0					
ANR	5253846	ArgumentList	sb		5253782	1					
ANR	5253847	Argument	sb		5253782	0					
ANR	5253848	Identifier	sb		5253782	0					
ANR	5253849	PrimaryExpression	1		5253782	1					
ANR	5253850	CompoundStatement		12:2:241:294	5253782	16					
ANR	5253851	IdentifierDeclStatement	"char * s = r_str_newf ( "".%s.\\n"" , r_str_pad ( '-' , len ) ) ;"	174:2:4369:4422	5253782	0	True				
ANR	5253852	IdentifierDecl	"* s = r_str_newf ( "".%s.\\n"" , r_str_pad ( '-' , len ) )"		5253782	0					
ANR	5253853	IdentifierDeclType	char *		5253782	0					
ANR	5253854	Identifier	s		5253782	1					
ANR	5253855	AssignmentExpression	"* s = r_str_newf ( "".%s.\\n"" , r_str_pad ( '-' , len ) )"		5253782	2		=			
ANR	5253856	Identifier	s		5253782	0					
ANR	5253857	CallExpression	"r_str_newf ( "".%s.\\n"" , r_str_pad ( '-' , len ) )"		5253782	1					
ANR	5253858	Callee	r_str_newf		5253782	0					
ANR	5253859	Identifier	r_str_newf		5253782	0					
ANR	5253860	ArgumentList	""".%s.\\n"""		5253782	1					
ANR	5253861	Argument	""".%s.\\n"""		5253782	0					
ANR	5253862	PrimaryExpression	""".%s.\\n"""		5253782	0					
ANR	5253863	Argument	"r_str_pad ( '-' , len )"		5253782	1					
ANR	5253864	CallExpression	"r_str_pad ( '-' , len )"		5253782	0					
ANR	5253865	Callee	r_str_pad		5253782	0					
ANR	5253866	Identifier	r_str_pad		5253782	0					
ANR	5253867	ArgumentList	'-'		5253782	1					
ANR	5253868	Argument	'-'		5253782	0					
ANR	5253869	PrimaryExpression	'-'		5253782	0					
ANR	5253870	Argument	len		5253782	1					
ANR	5253871	Identifier	len		5253782	0					
ANR	5253872	ExpressionStatement	"r_strbuf_prepend ( sb , s )"	175:2:4426:4450	5253782	1	True				
ANR	5253873	CallExpression	"r_strbuf_prepend ( sb , s )"		5253782	0					
ANR	5253874	Callee	r_strbuf_prepend		5253782	0					
ANR	5253875	Identifier	r_strbuf_prepend		5253782	0					
ANR	5253876	ArgumentList	sb		5253782	1					
ANR	5253877	Argument	sb		5253782	0					
ANR	5253878	Identifier	sb		5253782	0					
ANR	5253879	Argument	s		5253782	1					
ANR	5253880	Identifier	s		5253782	0					
ANR	5253881	ExpressionStatement	free ( s )	176:2:4454:4462	5253782	2	True				
ANR	5253882	CallExpression	free ( s )		5253782	0					
ANR	5253883	Callee	free		5253782	0					
ANR	5253884	Identifier	free		5253782	0					
ANR	5253885	ArgumentList	s		5253782	1					
ANR	5253886	Argument	s		5253782	0					
ANR	5253887	Identifier	s		5253782	0					
ANR	5253888	ExpressionStatement	"r_strbuf_appendf ( sb , ""|\\n)%s(\\n"" , r_str_pad ( '-' , len ) )"	179:1:4469:4525	5253782	17	True				
ANR	5253889	CallExpression	"r_strbuf_appendf ( sb , ""|\\n)%s(\\n"" , r_str_pad ( '-' , len ) )"		5253782	0					
ANR	5253890	Callee	r_strbuf_appendf		5253782	0					
ANR	5253891	Identifier	r_strbuf_appendf		5253782	0					
ANR	5253892	ArgumentList	sb		5253782	1					
ANR	5253893	Argument	sb		5253782	0					
ANR	5253894	Identifier	sb		5253782	0					
ANR	5253895	Argument	"""|\\n)%s(\\n"""		5253782	1					
ANR	5253896	PrimaryExpression	"""|\\n)%s(\\n"""		5253782	0					
ANR	5253897	Argument	"r_str_pad ( '-' , len )"		5253782	2					
ANR	5253898	CallExpression	"r_str_pad ( '-' , len )"		5253782	0					
ANR	5253899	Callee	r_str_pad		5253782	0					
ANR	5253900	Identifier	r_str_pad		5253782	0					
ANR	5253901	ArgumentList	'-'		5253782	1					
ANR	5253902	Argument	'-'		5253782	0					
ANR	5253903	PrimaryExpression	'-'		5253782	0					
ANR	5253904	Argument	len		5253782	1					
ANR	5253905	Identifier	len		5253782	0					
ANR	5253906	Statement	r_list_foreach	180:1:4528:4541	5253782	18	True				
ANR	5253907	Statement	(	180:16:4543:4543	5253782	19	True				
ANR	5253908	Statement	t	180:17:4544:4544	5253782	20	True				
ANR	5253909	Statement	->	180:18:4545:4546	5253782	21	True				
ANR	5253910	Statement	rows	180:20:4547:4550	5253782	22	True				
ANR	5253911	Statement	","	180:24:4551:4551	5253782	23	True				
ANR	5253912	Statement	iter	180:26:4553:4556	5253782	24	True				
ANR	5253913	Statement	","	180:30:4557:4557	5253782	25	True				
ANR	5253914	Statement	row	180:32:4559:4561	5253782	26	True				
ANR	5253915	Statement	)	180:35:4562:4562	5253782	27	True				
ANR	5253916	CompoundStatement		20:2:454:463	5253782	28					
ANR	5253917	IdentifierDeclStatement	char * item ;	181:2:4568:4578	5253782	0	True				
ANR	5253918	IdentifierDecl	* item		5253782	0					
ANR	5253919	IdentifierDeclType	char *		5253782	0					
ANR	5253920	Identifier	item		5253782	1					
ANR	5253921	IdentifierDeclStatement	int c = 0 ;	182:2:4582:4591	5253782	1	True				
ANR	5253922	IdentifierDecl	c = 0		5253782	0					
ANR	5253923	IdentifierDeclType	int		5253782	0					
ANR	5253924	Identifier	c		5253782	1					
ANR	5253925	AssignmentExpression	c = 0		5253782	2		=			
ANR	5253926	Identifier	c		5253782	0					
ANR	5253927	PrimaryExpression	0		5253782	1					
ANR	5253928	Statement	r_list_foreach	183:2:4595:4608	5253782	2	True				
ANR	5253929	Statement	(	183:17:4610:4610	5253782	3	True				
ANR	5253930	Statement	row	183:18:4611:4613	5253782	4	True				
ANR	5253931	Statement	->	183:21:4614:4615	5253782	5	True				
ANR	5253932	Statement	items	183:23:4616:4620	5253782	6	True				
ANR	5253933	Statement	","	183:28:4621:4621	5253782	7	True				
ANR	5253934	Statement	iter2	183:30:4623:4627	5253782	8	True				
ANR	5253935	Statement	","	183:35:4628:4628	5253782	9	True				
ANR	5253936	Statement	item	183:37:4630:4633	5253782	10	True				
ANR	5253937	Statement	)	183:41:4634:4634	5253782	11	True				
ANR	5253938	CompoundStatement		22:3:513:558	5253782	12					
ANR	5253939	IdentifierDeclStatement	"RTableColumn * col = r_list_get_n ( t -> cols , c ) ;"	184:3:4641:4686	5253782	0	True				
ANR	5253940	IdentifierDecl	"* col = r_list_get_n ( t -> cols , c )"		5253782	0					
ANR	5253941	IdentifierDeclType	RTableColumn *		5253782	0					
ANR	5253942	Identifier	col		5253782	1					
ANR	5253943	AssignmentExpression	"* col = r_list_get_n ( t -> cols , c )"		5253782	2		=			
ANR	5253944	Identifier	col		5253782	0					
ANR	5253945	CallExpression	"r_list_get_n ( t -> cols , c )"		5253782	1					
ANR	5253946	Callee	r_list_get_n		5253782	0					
ANR	5253947	Identifier	r_list_get_n		5253782	0					
ANR	5253948	ArgumentList	t -> cols		5253782	1					
ANR	5253949	Argument	t -> cols		5253782	0					
ANR	5253950	PtrMemberAccess	t -> cols		5253782	0					
ANR	5253951	Identifier	t		5253782	0					
ANR	5253952	Identifier	cols		5253782	1					
ANR	5253953	Argument	c		5253782	1					
ANR	5253954	Identifier	c		5253782	0					
ANR	5253955	IfStatement	if ( col )		5253782	1					
ANR	5253956	Condition	col	185:7:4695:4697	5253782	0	True				
ANR	5253957	Identifier	col		5253782	0					
ANR	5253958	CompoundStatement		23:12:572:572	5253782	1					
ANR	5253959	ExpressionStatement	"__strbuf_append_col_aligned_fancy ( sb , col , item )"	186:4:4706:4755	5253782	0	True				
ANR	5253960	CallExpression	"__strbuf_append_col_aligned_fancy ( sb , col , item )"		5253782	0					
ANR	5253961	Callee	__strbuf_append_col_aligned_fancy		5253782	0					
ANR	5253962	Identifier	__strbuf_append_col_aligned_fancy		5253782	0					
ANR	5253963	ArgumentList	sb		5253782	1					
ANR	5253964	Argument	sb		5253782	0					
ANR	5253965	Identifier	sb		5253782	0					
ANR	5253966	Argument	col		5253782	1					
ANR	5253967	Identifier	col		5253782	0					
ANR	5253968	Argument	item		5253782	2					
ANR	5253969	Identifier	item		5253782	0					
ANR	5253970	ExpressionStatement	c ++	188:3:4765:4768	5253782	2	True				
ANR	5253971	PostIncDecOperationExpression	c ++		5253782	0					
ANR	5253972	Identifier	c		5253782	0					
ANR	5253973	IncDec	++		5253782	1					
ANR	5253974	ExpressionStatement	"r_strbuf_append ( sb , ""|\\n"" )"	190:2:4776:4803	5253782	13	True				
ANR	5253975	CallExpression	"r_strbuf_append ( sb , ""|\\n"" )"		5253782	0					
ANR	5253976	Callee	r_strbuf_append		5253782	0					
ANR	5253977	Identifier	r_strbuf_append		5253782	0					
ANR	5253978	ArgumentList	sb		5253782	1					
ANR	5253979	Argument	sb		5253782	0					
ANR	5253980	Identifier	sb		5253782	0					
ANR	5253981	Argument	"""|\\n"""		5253782	1					
ANR	5253982	PrimaryExpression	"""|\\n"""		5253782	0					
ANR	5253983	ExpressionStatement	"r_strbuf_appendf ( sb , ""`%s'\\n"" , r_str_pad ( '-' , len ) )"	192:1:4809:4862	5253782	29	True				
ANR	5253984	CallExpression	"r_strbuf_appendf ( sb , ""`%s'\\n"" , r_str_pad ( '-' , len ) )"		5253782	0					
ANR	5253985	Callee	r_strbuf_appendf		5253782	0					
ANR	5253986	Identifier	r_strbuf_appendf		5253782	0					
ANR	5253987	ArgumentList	sb		5253782	1					
ANR	5253988	Argument	sb		5253782	0					
ANR	5253989	Identifier	sb		5253782	0					
ANR	5253990	Argument	"""`%s'\\n"""		5253782	1					
ANR	5253991	PrimaryExpression	"""`%s'\\n"""		5253782	0					
ANR	5253992	Argument	"r_str_pad ( '-' , len )"		5253782	2					
ANR	5253993	CallExpression	"r_str_pad ( '-' , len )"		5253782	0					
ANR	5253994	Callee	r_str_pad		5253782	0					
ANR	5253995	Identifier	r_str_pad		5253782	0					
ANR	5253996	ArgumentList	'-'		5253782	1					
ANR	5253997	Argument	'-'		5253782	0					
ANR	5253998	PrimaryExpression	'-'		5253782	0					
ANR	5253999	Argument	len		5253782	1					
ANR	5254000	Identifier	len		5253782	0					
ANR	5254001	ReturnStatement	return r_strbuf_drain ( sb ) ;	193:1:4865:4891	5253782	30	True				
ANR	5254002	CallExpression	r_strbuf_drain ( sb )		5253782	0					
ANR	5254003	Callee	r_strbuf_drain		5253782	0					
ANR	5254004	Identifier	r_strbuf_drain		5253782	0					
ANR	5254005	ArgumentList	sb		5253782	1					
ANR	5254006	Argument	sb		5253782	0					
ANR	5254007	Identifier	sb		5253782	0					
ANR	5254008	ReturnType	R_API char *		5253782	1					
ANR	5254009	Identifier	r_table_tofancystring		5253782	2					
ANR	5254010	ParameterList	RTable * t		5253782	3					
ANR	5254011	Parameter	RTable * t	163:34:4116:4124	5253782	0	True				
ANR	5254012	ParameterType	RTable *		5253782	0					
ANR	5254013	Identifier	t		5253782	1					
ANR	5254014	CFGEntryNode	ENTRY		5253782		True				
ANR	5254015	CFGExitNode	EXIT		5253782		True				
ANR	5254016	Symbol	col		5253782						
ANR	5254017	Symbol	item		5253782						
ANR	5254018	Symbol	r_strbuf_new		5253782						
ANR	5254019	Symbol	r_str_pad		5253782						
ANR	5254020	Symbol	c		5253782						
ANR	5254021	Symbol	iter2		5253782						
ANR	5254022	Symbol	t -> cols		5253782						
ANR	5254023	Symbol	iter		5253782						
ANR	5254024	Symbol	r_list_get_n		5253782						
ANR	5254025	Symbol	r_str_newf		5253782						
ANR	5254026	Symbol	sb		5253782						
ANR	5254027	Symbol	col -> name		5253782						
ANR	5254028	Symbol	s		5253782						
ANR	5254029	Symbol	t		5253782						
ANR	5254030	Symbol	len		5253782						
ANR	5254031	Symbol	* col		5253782						
ANR	5254032	Symbol	r_strbuf_drain		5253782						
ANR	5254033	Symbol	r_strbuf_length		5253782						
ANR	5254034	Symbol	row		5253782						
ANR	5254035	Symbol	* t		5253782						
ANR	5254036	Function	__strbuf_append_col_aligned	196:0:4896:5434							
ANR	5254037	FunctionDef	"__strbuf_append_col_aligned (RStrBuf * sb , RTableColumn * col , char * str)"		5254036	0					
ANR	5254038	CompoundStatement		196:83:4979:5434	5254036	0					
ANR	5254039	SwitchStatement	switch ( col -> align )		5254036	0					
ANR	5254040	Condition	col -> align	197:9:4990:4999	5254036	0	True				
ANR	5254041	PtrMemberAccess	col -> align		5254036	0					
ANR	5254042	Identifier	col		5254036	0					
ANR	5254043	Identifier	align		5254036	1					
ANR	5254044	CompoundStatement		2:21:22:22	5254036	1					
ANR	5254045	Label	case R_TABLE_ALIGN_LEFT :	198:1:5005:5028	5254036	0	True				
ANR	5254046	Identifier	R_TABLE_ALIGN_LEFT		5254036	0					
ANR	5254047	ExpressionStatement	"r_strbuf_appendf ( sb , ""%-*s"" , col -> width , str )"	199:2:5032:5078	5254036	1	True				
ANR	5254048	CallExpression	"r_strbuf_appendf ( sb , ""%-*s"" , col -> width , str )"		5254036	0					
ANR	5254049	Callee	r_strbuf_appendf		5254036	0					
ANR	5254050	Identifier	r_strbuf_appendf		5254036	0					
ANR	5254051	ArgumentList	sb		5254036	1					
ANR	5254052	Argument	sb		5254036	0					
ANR	5254053	Identifier	sb		5254036	0					
ANR	5254054	Argument	"""%-*s"""		5254036	1					
ANR	5254055	PrimaryExpression	"""%-*s"""		5254036	0					
ANR	5254056	Argument	col -> width		5254036	2					
ANR	5254057	PtrMemberAccess	col -> width		5254036	0					
ANR	5254058	Identifier	col		5254036	0					
ANR	5254059	Identifier	width		5254036	1					
ANR	5254060	Argument	str		5254036	3					
ANR	5254061	Identifier	str		5254036	0					
ANR	5254062	BreakStatement	break ;	200:2:5082:5087	5254036	2	True				
ANR	5254063	Label	case R_TABLE_ALIGN_RIGHT :	201:1:5090:5114	5254036	3	True				
ANR	5254064	Identifier	R_TABLE_ALIGN_RIGHT		5254036	0					
ANR	5254065	ExpressionStatement	"r_strbuf_appendf ( sb , ""%*s"" , col -> width , str )"	202:2:5118:5163	5254036	4	True				
ANR	5254066	CallExpression	"r_strbuf_appendf ( sb , ""%*s"" , col -> width , str )"		5254036	0					
ANR	5254067	Callee	r_strbuf_appendf		5254036	0					
ANR	5254068	Identifier	r_strbuf_appendf		5254036	0					
ANR	5254069	ArgumentList	sb		5254036	1					
ANR	5254070	Argument	sb		5254036	0					
ANR	5254071	Identifier	sb		5254036	0					
ANR	5254072	Argument	"""%*s"""		5254036	1					
ANR	5254073	PrimaryExpression	"""%*s"""		5254036	0					
ANR	5254074	Argument	col -> width		5254036	2					
ANR	5254075	PtrMemberAccess	col -> width		5254036	0					
ANR	5254076	Identifier	col		5254036	0					
ANR	5254077	Identifier	width		5254036	1					
ANR	5254078	Argument	str		5254036	3					
ANR	5254079	Identifier	str		5254036	0					
ANR	5254080	BreakStatement	break ;	203:2:5167:5172	5254036	5	True				
ANR	5254081	Label	case R_TABLE_ALIGN_CENTER :	204:1:5175:5200	5254036	6	True				
ANR	5254082	Identifier	R_TABLE_ALIGN_CENTER		5254036	0					
ANR	5254083	CompoundStatement		13:3:301:340	5254036	7					
ANR	5254084	IdentifierDeclStatement	int len = r_str_len_utf8 ( str ) ;	206:3:5209:5239	5254036	0	True				
ANR	5254085	IdentifierDecl	len = r_str_len_utf8 ( str )		5254036	0					
ANR	5254086	IdentifierDeclType	int		5254036	0					
ANR	5254087	Identifier	len		5254036	1					
ANR	5254088	AssignmentExpression	len = r_str_len_utf8 ( str )		5254036	2		=			
ANR	5254089	Identifier	len		5254036	0					
ANR	5254090	CallExpression	r_str_len_utf8 ( str )		5254036	1					
ANR	5254091	Callee	r_str_len_utf8		5254036	0					
ANR	5254092	Identifier	r_str_len_utf8		5254036	0					
ANR	5254093	ArgumentList	str		5254036	1					
ANR	5254094	Argument	str		5254036	0					
ANR	5254095	Identifier	str		5254036	0					
ANR	5254096	IdentifierDeclStatement	int pad = ( col -> width - len ) / 2 ;	207:3:5244:5276	5254036	1	True				
ANR	5254097	IdentifierDecl	pad = ( col -> width - len ) / 2		5254036	0					
ANR	5254098	IdentifierDeclType	int		5254036	0					
ANR	5254099	Identifier	pad		5254036	1					
ANR	5254100	AssignmentExpression	pad = ( col -> width - len ) / 2		5254036	2		=			
ANR	5254101	Identifier	pad		5254036	0					
ANR	5254102	MultiplicativeExpression	( col -> width - len ) / 2		5254036	1		/			
ANR	5254103	AdditiveExpression	col -> width - len		5254036	0		-			
ANR	5254104	PtrMemberAccess	col -> width		5254036	0					
ANR	5254105	Identifier	col		5254036	0					
ANR	5254106	Identifier	width		5254036	1					
ANR	5254107	Identifier	len		5254036	1					
ANR	5254108	PrimaryExpression	2		5254036	1					
ANR	5254109	IdentifierDeclStatement	int left = col -> width - ( pad * 2 + len ) ;	208:3:5281:5320	5254036	2	True				
ANR	5254110	IdentifierDecl	left = col -> width - ( pad * 2 + len )		5254036	0					
ANR	5254111	IdentifierDeclType	int		5254036	0					
ANR	5254112	Identifier	left		5254036	1					
ANR	5254113	AssignmentExpression	left = col -> width - ( pad * 2 + len )		5254036	2		=			
ANR	5254114	Identifier	left		5254036	0					
ANR	5254115	AdditiveExpression	col -> width - ( pad * 2 + len )		5254036	1		-			
ANR	5254116	PtrMemberAccess	col -> width		5254036	0					
ANR	5254117	Identifier	col		5254036	0					
ANR	5254118	Identifier	width		5254036	1					
ANR	5254119	AdditiveExpression	pad * 2 + len		5254036	1		+			
ANR	5254120	MultiplicativeExpression	pad * 2		5254036	0		*			
ANR	5254121	Identifier	pad		5254036	0					
ANR	5254122	PrimaryExpression	2		5254036	1					
ANR	5254123	Identifier	len		5254036	1					
ANR	5254124	ExpressionStatement	"r_strbuf_appendf ( sb , ""%-*s"" , pad , "" "" )"	209:3:5325:5364	5254036	3	True				
ANR	5254125	CallExpression	"r_strbuf_appendf ( sb , ""%-*s"" , pad , "" "" )"		5254036	0					
ANR	5254126	Callee	r_strbuf_appendf		5254036	0					
ANR	5254127	Identifier	r_strbuf_appendf		5254036	0					
ANR	5254128	ArgumentList	sb		5254036	1					
ANR	5254129	Argument	sb		5254036	0					
ANR	5254130	Identifier	sb		5254036	0					
ANR	5254131	Argument	"""%-*s"""		5254036	1					
ANR	5254132	PrimaryExpression	"""%-*s"""		5254036	0					
ANR	5254133	Argument	pad		5254036	2					
ANR	5254134	Identifier	pad		5254036	0					
ANR	5254135	Argument	""" """		5254036	3					
ANR	5254136	PrimaryExpression	""" """		5254036	0					
ANR	5254137	ExpressionStatement	"r_strbuf_appendf ( sb , ""%-*s"" , pad + left , str )"	210:3:5369:5415	5254036	4	True				
ANR	5254138	CallExpression	"r_strbuf_appendf ( sb , ""%-*s"" , pad + left , str )"		5254036	0					
ANR	5254139	Callee	r_strbuf_appendf		5254036	0					
ANR	5254140	Identifier	r_strbuf_appendf		5254036	0					
ANR	5254141	ArgumentList	sb		5254036	1					
ANR	5254142	Argument	sb		5254036	0					
ANR	5254143	Identifier	sb		5254036	0					
ANR	5254144	Argument	"""%-*s"""		5254036	1					
ANR	5254145	PrimaryExpression	"""%-*s"""		5254036	0					
ANR	5254146	Argument	pad + left		5254036	2					
ANR	5254147	AdditiveExpression	pad + left		5254036	0		+			
ANR	5254148	Identifier	pad		5254036	0					
ANR	5254149	Identifier	left		5254036	1					
ANR	5254150	Argument	str		5254036	3					
ANR	5254151	Identifier	str		5254036	0					
ANR	5254152	BreakStatement	break ;	211:3:5420:5425	5254036	5	True				
ANR	5254153	ReturnType	static void		5254036	1					
ANR	5254154	Identifier	__strbuf_append_col_aligned		5254036	2					
ANR	5254155	ParameterList	"RStrBuf * sb , RTableColumn * col , char * str"		5254036	3					
ANR	5254156	Parameter	RStrBuf * sb	196:40:4936:4946	5254036	0	True				
ANR	5254157	ParameterType	RStrBuf *		5254036	0					
ANR	5254158	Identifier	sb		5254036	1					
ANR	5254159	Parameter	RTableColumn * col	196:53:4949:4965	5254036	1	True				
ANR	5254160	ParameterType	RTableColumn *		5254036	0					
ANR	5254161	Identifier	col		5254036	1					
ANR	5254162	Parameter	char * str	196:72:4968:4976	5254036	2	True				
ANR	5254163	ParameterType	char *		5254036	0					
ANR	5254164	Identifier	str		5254036	1					
ANR	5254165	CFGEntryNode	ENTRY		5254036		True				
ANR	5254166	CFGExitNode	EXIT		5254036		True				
ANR	5254167	Symbol	str		5254036						
ANR	5254168	Symbol	r_str_len_utf8		5254036						
ANR	5254169	Symbol	col		5254036						
ANR	5254170	Symbol	col -> width		5254036						
ANR	5254171	Symbol	pad		5254036						
ANR	5254172	Symbol	len		5254036						
ANR	5254173	Symbol	* col		5254036						
ANR	5254174	Symbol	left		5254036						
ANR	5254175	Symbol	col -> align		5254036						
ANR	5254176	Symbol	sb		5254036						
ANR	5254177	Function	r_table_tostring	216:0:5437:6092							
ANR	5254178	FunctionDef	r_table_tostring (RTable * t)		5254177	0					
ANR	5254179	CompoundStatement		216:40:5477:6092	5254177	0					
ANR	5254180	IdentifierDeclStatement	"RStrBuf * sb = r_strbuf_new ( """" ) ;"	217:1:5480:5511	5254177	0	True				
ANR	5254181	IdentifierDecl	"* sb = r_strbuf_new ( """" )"		5254177	0					
ANR	5254182	IdentifierDeclType	RStrBuf *		5254177	0					
ANR	5254183	Identifier	sb		5254177	1					
ANR	5254184	AssignmentExpression	"* sb = r_strbuf_new ( """" )"		5254177	2		=			
ANR	5254185	Identifier	sb		5254177	0					
ANR	5254186	CallExpression	"r_strbuf_new ( """" )"		5254177	1					
ANR	5254187	Callee	r_strbuf_new		5254177	0					
ANR	5254188	Identifier	r_strbuf_new		5254177	0					
ANR	5254189	ArgumentList	""""""		5254177	1					
ANR	5254190	Argument	""""""		5254177	0					
ANR	5254191	PrimaryExpression	""""""		5254177	0					
ANR	5254192	IdentifierDeclStatement	RTableRow * row ;	218:1:5514:5528	5254177	1	True				
ANR	5254193	IdentifierDecl	* row		5254177	0					
ANR	5254194	IdentifierDeclType	RTableRow *		5254177	0					
ANR	5254195	Identifier	row		5254177	1					
ANR	5254196	IdentifierDeclStatement	RTableColumn * col ;	219:1:5531:5548	5254177	2	True				
ANR	5254197	IdentifierDecl	* col		5254177	0					
ANR	5254198	IdentifierDeclType	RTableColumn *		5254177	0					
ANR	5254199	Identifier	col		5254177	1					
ANR	5254200	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	220:1:5551:5574	5254177	3	True				
ANR	5254201	IdentifierDecl	* iter		5254177	0					
ANR	5254202	IdentifierDeclType	RListIter *		5254177	0					
ANR	5254203	Identifier	iter		5254177	1					
ANR	5254204	IdentifierDecl	* iter2		5254177	1					
ANR	5254205	IdentifierDeclType	RListIter *		5254177	0					
ANR	5254206	Identifier	iter2		5254177	1					
ANR	5254207	IfStatement	if ( t -> showHeader )		5254177	4					
ANR	5254208	Condition	t -> showHeader	221:5:5581:5593	5254177	0	True				
ANR	5254209	PtrMemberAccess	t -> showHeader		5254177	0					
ANR	5254210	Identifier	t		5254177	0					
ANR	5254211	Identifier	showHeader		5254177	1					
ANR	5254212	CompoundStatement		10:2:219:249	5254177	1					
ANR	5254213	Statement	r_list_foreach	222:2:5600:5613	5254177	0	True				
ANR	5254214	Statement	(	222:17:5615:5615	5254177	1	True				
ANR	5254215	Statement	t	222:18:5616:5616	5254177	2	True				
ANR	5254216	Statement	->	222:19:5617:5618	5254177	3	True				
ANR	5254217	Statement	cols	222:21:5619:5622	5254177	4	True				
ANR	5254218	Statement	","	222:25:5623:5623	5254177	5	True				
ANR	5254219	Statement	iter	222:27:5625:5628	5254177	6	True				
ANR	5254220	Statement	","	222:31:5629:5629	5254177	7	True				
ANR	5254221	Statement	col	222:33:5631:5633	5254177	8	True				
ANR	5254222	Statement	)	222:36:5634:5634	5254177	9	True				
ANR	5254223	CompoundStatement		7:38:158:158	5254177	10					
ANR	5254224	ExpressionStatement	"__strbuf_append_col_aligned ( sb , col , col -> name )"	223:3:5641:5689	5254177	0	True				
ANR	5254225	CallExpression	"__strbuf_append_col_aligned ( sb , col , col -> name )"		5254177	0					
ANR	5254226	Callee	__strbuf_append_col_aligned		5254177	0					
ANR	5254227	Identifier	__strbuf_append_col_aligned		5254177	0					
ANR	5254228	ArgumentList	sb		5254177	1					
ANR	5254229	Argument	sb		5254177	0					
ANR	5254230	Identifier	sb		5254177	0					
ANR	5254231	Argument	col		5254177	1					
ANR	5254232	Identifier	col		5254177	0					
ANR	5254233	Argument	col -> name		5254177	2					
ANR	5254234	PtrMemberAccess	col -> name		5254177	0					
ANR	5254235	Identifier	col		5254177	0					
ANR	5254236	Identifier	name		5254177	1					
ANR	5254237	IdentifierDeclStatement	int len = r_strbuf_length ( sb ) ;	225:2:5697:5727	5254177	11	True				
ANR	5254238	IdentifierDecl	len = r_strbuf_length ( sb )		5254177	0					
ANR	5254239	IdentifierDeclType	int		5254177	0					
ANR	5254240	Identifier	len		5254177	1					
ANR	5254241	AssignmentExpression	len = r_strbuf_length ( sb )		5254177	2		=			
ANR	5254242	Identifier	len		5254177	0					
ANR	5254243	CallExpression	r_strbuf_length ( sb )		5254177	1					
ANR	5254244	Callee	r_strbuf_length		5254177	0					
ANR	5254245	Identifier	r_strbuf_length		5254177	0					
ANR	5254246	ArgumentList	sb		5254177	1					
ANR	5254247	Argument	sb		5254177	0					
ANR	5254248	Identifier	sb		5254177	0					
ANR	5254249	ExpressionStatement	"r_strbuf_appendf ( sb , ""\\n%s\\n"" , r_str_pad ( '-' , len ) )"	226:2:5731:5784	5254177	12	True				
ANR	5254250	CallExpression	"r_strbuf_appendf ( sb , ""\\n%s\\n"" , r_str_pad ( '-' , len ) )"		5254177	0					
ANR	5254251	Callee	r_strbuf_appendf		5254177	0					
ANR	5254252	Identifier	r_strbuf_appendf		5254177	0					
ANR	5254253	ArgumentList	sb		5254177	1					
ANR	5254254	Argument	sb		5254177	0					
ANR	5254255	Identifier	sb		5254177	0					
ANR	5254256	Argument	"""\\n%s\\n"""		5254177	1					
ANR	5254257	PrimaryExpression	"""\\n%s\\n"""		5254177	0					
ANR	5254258	Argument	"r_str_pad ( '-' , len )"		5254177	2					
ANR	5254259	CallExpression	"r_str_pad ( '-' , len )"		5254177	0					
ANR	5254260	Callee	r_str_pad		5254177	0					
ANR	5254261	Identifier	r_str_pad		5254177	0					
ANR	5254262	ArgumentList	'-'		5254177	1					
ANR	5254263	Argument	'-'		5254177	0					
ANR	5254264	PrimaryExpression	'-'		5254177	0					
ANR	5254265	Argument	len		5254177	1					
ANR	5254266	Identifier	len		5254177	0					
ANR	5254267	Statement	r_list_foreach	228:1:5790:5803	5254177	5	True				
ANR	5254268	Statement	(	228:16:5805:5805	5254177	6	True				
ANR	5254269	Statement	t	228:17:5806:5806	5254177	7	True				
ANR	5254270	Statement	->	228:18:5807:5808	5254177	8	True				
ANR	5254271	Statement	rows	228:20:5809:5812	5254177	9	True				
ANR	5254272	Statement	","	228:24:5813:5813	5254177	10	True				
ANR	5254273	Statement	iter	228:26:5815:5818	5254177	11	True				
ANR	5254274	Statement	","	228:30:5819:5819	5254177	12	True				
ANR	5254275	Statement	row	228:32:5821:5823	5254177	13	True				
ANR	5254276	Statement	)	228:35:5824:5824	5254177	14	True				
ANR	5254277	CompoundStatement		15:2:366:375	5254177	15					
ANR	5254278	IdentifierDeclStatement	char * item ;	229:2:5830:5840	5254177	0	True				
ANR	5254279	IdentifierDecl	* item		5254177	0					
ANR	5254280	IdentifierDeclType	char *		5254177	0					
ANR	5254281	Identifier	item		5254177	1					
ANR	5254282	IdentifierDeclStatement	int c = 0 ;	230:2:5844:5853	5254177	1	True				
ANR	5254283	IdentifierDecl	c = 0		5254177	0					
ANR	5254284	IdentifierDeclType	int		5254177	0					
ANR	5254285	Identifier	c		5254177	1					
ANR	5254286	AssignmentExpression	c = 0		5254177	2		=			
ANR	5254287	Identifier	c		5254177	0					
ANR	5254288	PrimaryExpression	0		5254177	1					
ANR	5254289	Statement	r_list_foreach	231:2:5857:5870	5254177	2	True				
ANR	5254290	Statement	(	231:17:5872:5872	5254177	3	True				
ANR	5254291	Statement	row	231:18:5873:5875	5254177	4	True				
ANR	5254292	Statement	->	231:21:5876:5877	5254177	5	True				
ANR	5254293	Statement	items	231:23:5878:5882	5254177	6	True				
ANR	5254294	Statement	","	231:28:5883:5883	5254177	7	True				
ANR	5254295	Statement	iter2	231:30:5885:5889	5254177	8	True				
ANR	5254296	Statement	","	231:35:5890:5890	5254177	9	True				
ANR	5254297	Statement	item	231:37:5892:5895	5254177	10	True				
ANR	5254298	Statement	)	231:41:5896:5896	5254177	11	True				
ANR	5254299	CompoundStatement		17:3:425:470	5254177	12					
ANR	5254300	IdentifierDeclStatement	"RTableColumn * col = r_list_get_n ( t -> cols , c ) ;"	232:3:5903:5948	5254177	0	True				
ANR	5254301	IdentifierDecl	"* col = r_list_get_n ( t -> cols , c )"		5254177	0					
ANR	5254302	IdentifierDeclType	RTableColumn *		5254177	0					
ANR	5254303	Identifier	col		5254177	1					
ANR	5254304	AssignmentExpression	"* col = r_list_get_n ( t -> cols , c )"		5254177	2		=			
ANR	5254305	Identifier	col		5254177	0					
ANR	5254306	CallExpression	"r_list_get_n ( t -> cols , c )"		5254177	1					
ANR	5254307	Callee	r_list_get_n		5254177	0					
ANR	5254308	Identifier	r_list_get_n		5254177	0					
ANR	5254309	ArgumentList	t -> cols		5254177	1					
ANR	5254310	Argument	t -> cols		5254177	0					
ANR	5254311	PtrMemberAccess	t -> cols		5254177	0					
ANR	5254312	Identifier	t		5254177	0					
ANR	5254313	Identifier	cols		5254177	1					
ANR	5254314	Argument	c		5254177	1					
ANR	5254315	Identifier	c		5254177	0					
ANR	5254316	IfStatement	if ( col )		5254177	1					
ANR	5254317	Condition	col	233:7:5957:5959	5254177	0	True				
ANR	5254318	Identifier	col		5254177	0					
ANR	5254319	CompoundStatement		18:12:484:484	5254177	1					
ANR	5254320	ExpressionStatement	"__strbuf_append_col_aligned ( sb , col , item )"	234:4:5968:6011	5254177	0	True				
ANR	5254321	CallExpression	"__strbuf_append_col_aligned ( sb , col , item )"		5254177	0					
ANR	5254322	Callee	__strbuf_append_col_aligned		5254177	0					
ANR	5254323	Identifier	__strbuf_append_col_aligned		5254177	0					
ANR	5254324	ArgumentList	sb		5254177	1					
ANR	5254325	Argument	sb		5254177	0					
ANR	5254326	Identifier	sb		5254177	0					
ANR	5254327	Argument	col		5254177	1					
ANR	5254328	Identifier	col		5254177	0					
ANR	5254329	Argument	item		5254177	2					
ANR	5254330	Identifier	item		5254177	0					
ANR	5254331	ExpressionStatement	c ++	236:3:6021:6024	5254177	2	True				
ANR	5254332	PostIncDecOperationExpression	c ++		5254177	0					
ANR	5254333	Identifier	c		5254177	0					
ANR	5254334	IncDec	++		5254177	1					
ANR	5254335	ExpressionStatement	"r_strbuf_append ( sb , ""\\n"" )"	238:2:6032:6058	5254177	13	True				
ANR	5254336	CallExpression	"r_strbuf_append ( sb , ""\\n"" )"		5254177	0					
ANR	5254337	Callee	r_strbuf_append		5254177	0					
ANR	5254338	Identifier	r_strbuf_append		5254177	0					
ANR	5254339	ArgumentList	sb		5254177	1					
ANR	5254340	Argument	sb		5254177	0					
ANR	5254341	Identifier	sb		5254177	0					
ANR	5254342	Argument	"""\\n"""		5254177	1					
ANR	5254343	PrimaryExpression	"""\\n"""		5254177	0					
ANR	5254344	ReturnStatement	return r_strbuf_drain ( sb ) ;	240:1:6064:6090	5254177	16	True				
ANR	5254345	CallExpression	r_strbuf_drain ( sb )		5254177	0					
ANR	5254346	Callee	r_strbuf_drain		5254177	0					
ANR	5254347	Identifier	r_strbuf_drain		5254177	0					
ANR	5254348	ArgumentList	sb		5254177	1					
ANR	5254349	Argument	sb		5254177	0					
ANR	5254350	Identifier	sb		5254177	0					
ANR	5254351	ReturnType	R_API char *		5254177	1					
ANR	5254352	Identifier	r_table_tostring		5254177	2					
ANR	5254353	ParameterList	RTable * t		5254177	3					
ANR	5254354	Parameter	RTable * t	216:29:5466:5474	5254177	0	True				
ANR	5254355	ParameterType	RTable *		5254177	0					
ANR	5254356	Identifier	t		5254177	1					
ANR	5254357	CFGEntryNode	ENTRY		5254177		True				
ANR	5254358	CFGExitNode	EXIT		5254177		True				
ANR	5254359	Symbol	col		5254177						
ANR	5254360	Symbol	item		5254177						
ANR	5254361	Symbol	r_strbuf_new		5254177						
ANR	5254362	Symbol	r_str_pad		5254177						
ANR	5254363	Symbol	c		5254177						
ANR	5254364	Symbol	iter2		5254177						
ANR	5254365	Symbol	t -> cols		5254177						
ANR	5254366	Symbol	iter		5254177						
ANR	5254367	Symbol	r_list_get_n		5254177						
ANR	5254368	Symbol	sb		5254177						
ANR	5254369	Symbol	col -> name		5254177						
ANR	5254370	Symbol	t		5254177						
ANR	5254371	Symbol	len		5254177						
ANR	5254372	Symbol	* col		5254177						
ANR	5254373	Symbol	r_strbuf_drain		5254177						
ANR	5254374	Symbol	r_strbuf_length		5254177						
ANR	5254375	Symbol	row		5254177						
ANR	5254376	Symbol	t -> showHeader		5254177						
ANR	5254377	Symbol	* t		5254177						
ANR	5254378	Function	r_table_tocsv	243:0:6095:7020							
ANR	5254379	FunctionDef	r_table_tocsv (RTable * t)		5254378	0					
ANR	5254380	CompoundStatement		243:37:6132:7020	5254378	0					
ANR	5254381	IdentifierDeclStatement	"RStrBuf * sb = r_strbuf_new ( """" ) ;"	244:1:6135:6166	5254378	0	True				
ANR	5254382	IdentifierDecl	"* sb = r_strbuf_new ( """" )"		5254378	0					
ANR	5254383	IdentifierDeclType	RStrBuf *		5254378	0					
ANR	5254384	Identifier	sb		5254378	1					
ANR	5254385	AssignmentExpression	"* sb = r_strbuf_new ( """" )"		5254378	2		=			
ANR	5254386	Identifier	sb		5254378	0					
ANR	5254387	CallExpression	"r_strbuf_new ( """" )"		5254378	1					
ANR	5254388	Callee	r_strbuf_new		5254378	0					
ANR	5254389	Identifier	r_strbuf_new		5254378	0					
ANR	5254390	ArgumentList	""""""		5254378	1					
ANR	5254391	Argument	""""""		5254378	0					
ANR	5254392	PrimaryExpression	""""""		5254378	0					
ANR	5254393	IdentifierDeclStatement	RTableRow * row ;	245:1:6169:6183	5254378	1	True				
ANR	5254394	IdentifierDecl	* row		5254378	0					
ANR	5254395	IdentifierDeclType	RTableRow *		5254378	0					
ANR	5254396	Identifier	row		5254378	1					
ANR	5254397	IdentifierDeclStatement	RTableColumn * col ;	246:1:6186:6203	5254378	2	True				
ANR	5254398	IdentifierDecl	* col		5254378	0					
ANR	5254399	IdentifierDeclType	RTableColumn *		5254378	0					
ANR	5254400	Identifier	col		5254378	1					
ANR	5254401	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	247:1:6206:6229	5254378	3	True				
ANR	5254402	IdentifierDecl	* iter		5254378	0					
ANR	5254403	IdentifierDeclType	RListIter *		5254378	0					
ANR	5254404	Identifier	iter		5254378	1					
ANR	5254405	IdentifierDecl	* iter2		5254378	1					
ANR	5254406	IdentifierDeclType	RListIter *		5254378	0					
ANR	5254407	Identifier	iter2		5254378	1					
ANR	5254408	IfStatement	if ( t -> showHeader )		5254378	4					
ANR	5254409	Condition	t -> showHeader	248:5:6236:6248	5254378	0	True				
ANR	5254410	PtrMemberAccess	t -> showHeader		5254378	0					
ANR	5254411	Identifier	t		5254378	0					
ANR	5254412	Identifier	showHeader		5254378	1					
ANR	5254413	CompoundStatement		7:2:122:144	5254378	1					
ANR	5254414	IdentifierDeclStatement	"const char * comma = """" ;"	249:2:6255:6277	5254378	0	True				
ANR	5254415	IdentifierDecl	"* comma = """""		5254378	0					
ANR	5254416	IdentifierDeclType	const char *		5254378	0					
ANR	5254417	Identifier	comma		5254378	1					
ANR	5254418	AssignmentExpression	"* comma = """""		5254378	2		=			
ANR	5254419	Identifier	comma		5254378	0					
ANR	5254420	PrimaryExpression	""""""		5254378	1					
ANR	5254421	Statement	r_list_foreach	250:2:6281:6294	5254378	1	True				
ANR	5254422	Statement	(	250:17:6296:6296	5254378	2	True				
ANR	5254423	Statement	t	250:18:6297:6297	5254378	3	True				
ANR	5254424	Statement	->	250:19:6298:6299	5254378	4	True				
ANR	5254425	Statement	cols	250:21:6300:6303	5254378	5	True				
ANR	5254426	Statement	","	250:25:6304:6304	5254378	6	True				
ANR	5254427	Statement	iter	250:27:6306:6309	5254378	7	True				
ANR	5254428	Statement	","	250:31:6310:6310	5254378	8	True				
ANR	5254429	Statement	col	250:33:6312:6314	5254378	9	True				
ANR	5254430	Statement	)	250:36:6315:6315	5254378	10	True				
ANR	5254431	CompoundStatement		8:38:184:184	5254378	11					
ANR	5254432	IfStatement	"if ( strchr ( col -> name , ',' ) )"		5254378	0					
ANR	5254433	Condition	"strchr ( col -> name , ',' )"	251:7:6326:6348	5254378	0	True				
ANR	5254434	CallExpression	"strchr ( col -> name , ',' )"		5254378	0					
ANR	5254435	Callee	strchr		5254378	0					
ANR	5254436	Identifier	strchr		5254378	0					
ANR	5254437	ArgumentList	col -> name		5254378	1					
ANR	5254438	Argument	col -> name		5254378	0					
ANR	5254439	PtrMemberAccess	col -> name		5254378	0					
ANR	5254440	Identifier	col		5254378	0					
ANR	5254441	Identifier	name		5254378	1					
ANR	5254442	Argument	"','"		5254378	1					
ANR	5254443	PrimaryExpression	"','"		5254378	0					
ANR	5254444	CompoundStatement		9:32:218:218	5254378	1					
ANR	5254445	ExpressionStatement	"r_strbuf_appendf ( sb , ""%s\\""%s\\"""" , comma , col -> name )"	253:4:6386:6437	5254378	0	True				
ANR	5254446	CallExpression	"r_strbuf_appendf ( sb , ""%s\\""%s\\"""" , comma , col -> name )"		5254378	0					
ANR	5254447	Callee	r_strbuf_appendf		5254378	0					
ANR	5254448	Identifier	r_strbuf_appendf		5254378	0					
ANR	5254449	ArgumentList	sb		5254378	1					
ANR	5254450	Argument	sb		5254378	0					
ANR	5254451	Identifier	sb		5254378	0					
ANR	5254452	Argument	"""%s\\""%s\\"""""		5254378	1					
ANR	5254453	PrimaryExpression	"""%s\\""%s\\"""""		5254378	0					
ANR	5254454	Argument	comma		5254378	2					
ANR	5254455	Identifier	comma		5254378	0					
ANR	5254456	Argument	col -> name		5254378	3					
ANR	5254457	PtrMemberAccess	col -> name		5254378	0					
ANR	5254458	Identifier	col		5254378	0					
ANR	5254459	Identifier	name		5254378	1					
ANR	5254460	ElseStatement	else		5254378	0					
ANR	5254461	CompoundStatement		12:10:316:316	5254378	0					
ANR	5254462	ExpressionStatement	"r_strbuf_appendf ( sb , ""%s%s"" , comma , col -> name )"	255:4:6455:6502	5254378	0	True				
ANR	5254463	CallExpression	"r_strbuf_appendf ( sb , ""%s%s"" , comma , col -> name )"		5254378	0					
ANR	5254464	Callee	r_strbuf_appendf		5254378	0					
ANR	5254465	Identifier	r_strbuf_appendf		5254378	0					
ANR	5254466	ArgumentList	sb		5254378	1					
ANR	5254467	Argument	sb		5254378	0					
ANR	5254468	Identifier	sb		5254378	0					
ANR	5254469	Argument	"""%s%s"""		5254378	1					
ANR	5254470	PrimaryExpression	"""%s%s"""		5254378	0					
ANR	5254471	Argument	comma		5254378	2					
ANR	5254472	Identifier	comma		5254378	0					
ANR	5254473	Argument	col -> name		5254378	3					
ANR	5254474	PtrMemberAccess	col -> name		5254378	0					
ANR	5254475	Identifier	col		5254378	0					
ANR	5254476	Identifier	name		5254378	1					
ANR	5254477	ExpressionStatement	"comma = "","""	257:3:6512:6523	5254378	1	True				
ANR	5254478	AssignmentExpression	"comma = "","""		5254378	0		=			
ANR	5254479	Identifier	comma		5254378	0					
ANR	5254480	PrimaryExpression	""","""		5254378	1					
ANR	5254481	ExpressionStatement	"r_strbuf_append ( sb , ""\\n"" )"	259:2:6531:6557	5254378	12	True				
ANR	5254482	CallExpression	"r_strbuf_append ( sb , ""\\n"" )"		5254378	0					
ANR	5254483	Callee	r_strbuf_append		5254378	0					
ANR	5254484	Identifier	r_strbuf_append		5254378	0					
ANR	5254485	ArgumentList	sb		5254378	1					
ANR	5254486	Argument	sb		5254378	0					
ANR	5254487	Identifier	sb		5254378	0					
ANR	5254488	Argument	"""\\n"""		5254378	1					
ANR	5254489	PrimaryExpression	"""\\n"""		5254378	0					
ANR	5254490	Statement	r_list_foreach	261:1:6563:6576	5254378	5	True				
ANR	5254491	Statement	(	261:16:6578:6578	5254378	6	True				
ANR	5254492	Statement	t	261:17:6579:6579	5254378	7	True				
ANR	5254493	Statement	->	261:18:6580:6581	5254378	8	True				
ANR	5254494	Statement	rows	261:20:6582:6585	5254378	9	True				
ANR	5254495	Statement	","	261:24:6586:6586	5254378	10	True				
ANR	5254496	Statement	iter	261:26:6588:6591	5254378	11	True				
ANR	5254497	Statement	","	261:30:6592:6592	5254378	12	True				
ANR	5254498	Statement	row	261:32:6594:6596	5254378	13	True				
ANR	5254499	Statement	)	261:35:6597:6597	5254378	14	True				
ANR	5254500	CompoundStatement		22:2:497:519	5254378	15					
ANR	5254501	IdentifierDeclStatement	char * item ;	262:2:6603:6613	5254378	0	True				
ANR	5254502	IdentifierDecl	* item		5254378	0					
ANR	5254503	IdentifierDeclType	char *		5254378	0					
ANR	5254504	Identifier	item		5254378	1					
ANR	5254505	IdentifierDeclStatement	int c = 0 ;	263:2:6617:6626	5254378	1	True				
ANR	5254506	IdentifierDecl	c = 0		5254378	0					
ANR	5254507	IdentifierDeclType	int		5254378	0					
ANR	5254508	Identifier	c		5254378	1					
ANR	5254509	AssignmentExpression	c = 0		5254378	2		=			
ANR	5254510	Identifier	c		5254378	0					
ANR	5254511	PrimaryExpression	0		5254378	1					
ANR	5254512	IdentifierDeclStatement	"const char * comma = """" ;"	264:2:6630:6652	5254378	2	True				
ANR	5254513	IdentifierDecl	"* comma = """""		5254378	0					
ANR	5254514	IdentifierDeclType	const char *		5254378	0					
ANR	5254515	Identifier	comma		5254378	1					
ANR	5254516	AssignmentExpression	"* comma = """""		5254378	2		=			
ANR	5254517	Identifier	comma		5254378	0					
ANR	5254518	PrimaryExpression	""""""		5254378	1					
ANR	5254519	Statement	r_list_foreach	265:2:6656:6669	5254378	3	True				
ANR	5254520	Statement	(	265:17:6671:6671	5254378	4	True				
ANR	5254521	Statement	row	265:18:6672:6674	5254378	5	True				
ANR	5254522	Statement	->	265:21:6675:6676	5254378	6	True				
ANR	5254523	Statement	items	265:23:6677:6681	5254378	7	True				
ANR	5254524	Statement	","	265:28:6682:6682	5254378	8	True				
ANR	5254525	Statement	iter2	265:30:6684:6688	5254378	9	True				
ANR	5254526	Statement	","	265:35:6689:6689	5254378	10	True				
ANR	5254527	Statement	item	265:37:6691:6694	5254378	11	True				
ANR	5254528	Statement	)	265:41:6695:6695	5254378	12	True				
ANR	5254529	CompoundStatement		24:3:569:614	5254378	13					
ANR	5254530	IdentifierDeclStatement	"RTableColumn * col = r_list_get_n ( t -> cols , c ) ;"	266:3:6702:6747	5254378	0	True				
ANR	5254531	IdentifierDecl	"* col = r_list_get_n ( t -> cols , c )"		5254378	0					
ANR	5254532	IdentifierDeclType	RTableColumn *		5254378	0					
ANR	5254533	Identifier	col		5254378	1					
ANR	5254534	AssignmentExpression	"* col = r_list_get_n ( t -> cols , c )"		5254378	2		=			
ANR	5254535	Identifier	col		5254378	0					
ANR	5254536	CallExpression	"r_list_get_n ( t -> cols , c )"		5254378	1					
ANR	5254537	Callee	r_list_get_n		5254378	0					
ANR	5254538	Identifier	r_list_get_n		5254378	0					
ANR	5254539	ArgumentList	t -> cols		5254378	1					
ANR	5254540	Argument	t -> cols		5254378	0					
ANR	5254541	PtrMemberAccess	t -> cols		5254378	0					
ANR	5254542	Identifier	t		5254378	0					
ANR	5254543	Identifier	cols		5254378	1					
ANR	5254544	Argument	c		5254378	1					
ANR	5254545	Identifier	c		5254378	0					
ANR	5254546	IfStatement	if ( col )		5254378	1					
ANR	5254547	Condition	col	267:7:6756:6758	5254378	0	True				
ANR	5254548	Identifier	col		5254378	0					
ANR	5254549	CompoundStatement		25:12:628:628	5254378	1					
ANR	5254550	IfStatement	"if ( strchr ( col -> name , ',' ) )"		5254378	0					
ANR	5254551	Condition	"strchr ( col -> name , ',' )"	268:8:6771:6793	5254378	0	True				
ANR	5254552	CallExpression	"strchr ( col -> name , ',' )"		5254378	0					
ANR	5254553	Callee	strchr		5254378	0					
ANR	5254554	Identifier	strchr		5254378	0					
ANR	5254555	ArgumentList	col -> name		5254378	1					
ANR	5254556	Argument	col -> name		5254378	0					
ANR	5254557	PtrMemberAccess	col -> name		5254378	0					
ANR	5254558	Identifier	col		5254378	0					
ANR	5254559	Identifier	name		5254378	1					
ANR	5254560	Argument	"','"		5254378	1					
ANR	5254561	PrimaryExpression	"','"		5254378	0					
ANR	5254562	CompoundStatement		26:33:663:663	5254378	1					
ANR	5254563	ExpressionStatement	"r_strbuf_appendf ( sb , ""%s\\""%s\\"""" , comma , col -> name )"	269:5:6803:6854	5254378	0	True				
ANR	5254564	CallExpression	"r_strbuf_appendf ( sb , ""%s\\""%s\\"""" , comma , col -> name )"		5254378	0					
ANR	5254565	Callee	r_strbuf_appendf		5254378	0					
ANR	5254566	Identifier	r_strbuf_appendf		5254378	0					
ANR	5254567	ArgumentList	sb		5254378	1					
ANR	5254568	Argument	sb		5254378	0					
ANR	5254569	Identifier	sb		5254378	0					
ANR	5254570	Argument	"""%s\\""%s\\"""""		5254378	1					
ANR	5254571	PrimaryExpression	"""%s\\""%s\\"""""		5254378	0					
ANR	5254572	Argument	comma		5254378	2					
ANR	5254573	Identifier	comma		5254378	0					
ANR	5254574	Argument	col -> name		5254378	3					
ANR	5254575	PtrMemberAccess	col -> name		5254378	0					
ANR	5254576	Identifier	col		5254378	0					
ANR	5254577	Identifier	name		5254378	1					
ANR	5254578	ElseStatement	else		5254378	0					
ANR	5254579	CompoundStatement		28:11:734:734	5254378	0					
ANR	5254580	ExpressionStatement	"r_strbuf_appendf ( sb , ""%s%s"" , comma , item )"	271:5:6874:6916	5254378	0	True				
ANR	5254581	CallExpression	"r_strbuf_appendf ( sb , ""%s%s"" , comma , item )"		5254378	0					
ANR	5254582	Callee	r_strbuf_appendf		5254378	0					
ANR	5254583	Identifier	r_strbuf_appendf		5254378	0					
ANR	5254584	ArgumentList	sb		5254378	1					
ANR	5254585	Argument	sb		5254378	0					
ANR	5254586	Identifier	sb		5254378	0					
ANR	5254587	Argument	"""%s%s"""		5254378	1					
ANR	5254588	PrimaryExpression	"""%s%s"""		5254378	0					
ANR	5254589	Argument	comma		5254378	2					
ANR	5254590	Identifier	comma		5254378	0					
ANR	5254591	Argument	item		5254378	3					
ANR	5254592	Identifier	item		5254378	0					
ANR	5254593	ExpressionStatement	"comma = "","""	273:4:6928:6939	5254378	1	True				
ANR	5254594	AssignmentExpression	"comma = "","""		5254378	0		=			
ANR	5254595	Identifier	comma		5254378	0					
ANR	5254596	PrimaryExpression	""","""		5254378	1					
ANR	5254597	ExpressionStatement	c ++	275:3:6949:6952	5254378	2	True				
ANR	5254598	PostIncDecOperationExpression	c ++		5254378	0					
ANR	5254599	Identifier	c		5254378	0					
ANR	5254600	IncDec	++		5254378	1					
ANR	5254601	ExpressionStatement	"r_strbuf_append ( sb , ""\\n"" )"	277:2:6960:6986	5254378	14	True				
ANR	5254602	CallExpression	"r_strbuf_append ( sb , ""\\n"" )"		5254378	0					
ANR	5254603	Callee	r_strbuf_append		5254378	0					
ANR	5254604	Identifier	r_strbuf_append		5254378	0					
ANR	5254605	ArgumentList	sb		5254378	1					
ANR	5254606	Argument	sb		5254378	0					
ANR	5254607	Identifier	sb		5254378	0					
ANR	5254608	Argument	"""\\n"""		5254378	1					
ANR	5254609	PrimaryExpression	"""\\n"""		5254378	0					
ANR	5254610	ReturnStatement	return r_strbuf_drain ( sb ) ;	279:1:6992:7018	5254378	16	True				
ANR	5254611	CallExpression	r_strbuf_drain ( sb )		5254378	0					
ANR	5254612	Callee	r_strbuf_drain		5254378	0					
ANR	5254613	Identifier	r_strbuf_drain		5254378	0					
ANR	5254614	ArgumentList	sb		5254378	1					
ANR	5254615	Argument	sb		5254378	0					
ANR	5254616	Identifier	sb		5254378	0					
ANR	5254617	ReturnType	R_API char *		5254378	1					
ANR	5254618	Identifier	r_table_tocsv		5254378	2					
ANR	5254619	ParameterList	RTable * t		5254378	3					
ANR	5254620	Parameter	RTable * t	243:26:6121:6129	5254378	0	True				
ANR	5254621	ParameterType	RTable *		5254378	0					
ANR	5254622	Identifier	t		5254378	1					
ANR	5254623	CFGEntryNode	ENTRY		5254378		True				
ANR	5254624	CFGExitNode	EXIT		5254378		True				
ANR	5254625	Symbol	col		5254378						
ANR	5254626	Symbol	item		5254378						
ANR	5254627	Symbol	r_strbuf_new		5254378						
ANR	5254628	Symbol	c		5254378						
ANR	5254629	Symbol	iter2		5254378						
ANR	5254630	Symbol	t -> cols		5254378						
ANR	5254631	Symbol	iter		5254378						
ANR	5254632	Symbol	strchr		5254378						
ANR	5254633	Symbol	r_list_get_n		5254378						
ANR	5254634	Symbol	sb		5254378						
ANR	5254635	Symbol	comma		5254378						
ANR	5254636	Symbol	col -> name		5254378						
ANR	5254637	Symbol	t		5254378						
ANR	5254638	Symbol	* col		5254378						
ANR	5254639	Symbol	r_strbuf_drain		5254378						
ANR	5254640	Symbol	row		5254378						
ANR	5254641	Symbol	t -> showHeader		5254378						
ANR	5254642	Symbol	* t		5254378						
ANR	5254643	Function	r_table_tojson	282:0:7023:7664							
ANR	5254644	FunctionDef	r_table_tojson (RTable * t)		5254643	0					
ANR	5254645	CompoundStatement		282:38:7061:7664	5254643	0					
ANR	5254646	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	283:1:7064:7082	5254643	0	True				
ANR	5254647	IdentifierDecl	* pj = pj_new ( )		5254643	0					
ANR	5254648	IdentifierDeclType	PJ *		5254643	0					
ANR	5254649	Identifier	pj		5254643	1					
ANR	5254650	AssignmentExpression	* pj = pj_new ( )		5254643	2		=			
ANR	5254651	Identifier	pj		5254643	0					
ANR	5254652	CallExpression	pj_new ( )		5254643	1					
ANR	5254653	Callee	pj_new		5254643	0					
ANR	5254654	Identifier	pj_new		5254643	0					
ANR	5254655	ArgumentList			5254643	1					
ANR	5254656	IdentifierDeclStatement	RTableRow * row ;	284:1:7085:7099	5254643	1	True				
ANR	5254657	IdentifierDecl	* row		5254643	0					
ANR	5254658	IdentifierDeclType	RTableRow *		5254643	0					
ANR	5254659	Identifier	row		5254643	1					
ANR	5254660	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	285:1:7102:7125	5254643	2	True				
ANR	5254661	IdentifierDecl	* iter		5254643	0					
ANR	5254662	IdentifierDeclType	RListIter *		5254643	0					
ANR	5254663	Identifier	iter		5254643	1					
ANR	5254664	IdentifierDecl	* iter2		5254643	1					
ANR	5254665	IdentifierDeclType	RListIter *		5254643	0					
ANR	5254666	Identifier	iter2		5254643	1					
ANR	5254667	ExpressionStatement	pj_a ( pj )	286:1:7128:7137	5254643	3	True				
ANR	5254668	CallExpression	pj_a ( pj )		5254643	0					
ANR	5254669	Callee	pj_a		5254643	0					
ANR	5254670	Identifier	pj_a		5254643	0					
ANR	5254671	ArgumentList	pj		5254643	1					
ANR	5254672	Argument	pj		5254643	0					
ANR	5254673	Identifier	pj		5254643	0					
ANR	5254674	Statement	r_list_foreach	287:1:7140:7153	5254643	4	True				
ANR	5254675	Statement	(	287:16:7155:7155	5254643	5	True				
ANR	5254676	Statement	t	287:17:7156:7156	5254643	6	True				
ANR	5254677	Statement	->	287:18:7157:7158	5254643	7	True				
ANR	5254678	Statement	rows	287:20:7159:7162	5254643	8	True				
ANR	5254679	Statement	","	287:24:7163:7163	5254643	9	True				
ANR	5254680	Statement	iter	287:26:7165:7168	5254643	10	True				
ANR	5254681	Statement	","	287:30:7169:7169	5254643	11	True				
ANR	5254682	Statement	row	287:32:7171:7173	5254643	12	True				
ANR	5254683	Statement	)	287:35:7174:7174	5254643	13	True				
ANR	5254684	CompoundStatement		8:2:132:141	5254643	14					
ANR	5254685	IdentifierDeclStatement	char * item ;	288:2:7180:7190	5254643	0	True				
ANR	5254686	IdentifierDecl	* item		5254643	0					
ANR	5254687	IdentifierDeclType	char *		5254643	0					
ANR	5254688	Identifier	item		5254643	1					
ANR	5254689	IdentifierDeclStatement	int c = 0 ;	289:2:7194:7203	5254643	1	True				
ANR	5254690	IdentifierDecl	c = 0		5254643	0					
ANR	5254691	IdentifierDeclType	int		5254643	0					
ANR	5254692	Identifier	c		5254643	1					
ANR	5254693	AssignmentExpression	c = 0		5254643	2		=			
ANR	5254694	Identifier	c		5254643	0					
ANR	5254695	PrimaryExpression	0		5254643	1					
ANR	5254696	ExpressionStatement	pj_o ( pj )	290:2:7207:7216	5254643	2	True				
ANR	5254697	CallExpression	pj_o ( pj )		5254643	0					
ANR	5254698	Callee	pj_o		5254643	0					
ANR	5254699	Identifier	pj_o		5254643	0					
ANR	5254700	ArgumentList	pj		5254643	1					
ANR	5254701	Argument	pj		5254643	0					
ANR	5254702	Identifier	pj		5254643	0					
ANR	5254703	Statement	r_list_foreach	291:2:7220:7233	5254643	3	True				
ANR	5254704	Statement	(	291:17:7235:7235	5254643	4	True				
ANR	5254705	Statement	row	291:18:7236:7238	5254643	5	True				
ANR	5254706	Statement	->	291:21:7239:7240	5254643	6	True				
ANR	5254707	Statement	items	291:23:7241:7245	5254643	7	True				
ANR	5254708	Statement	","	291:28:7246:7246	5254643	8	True				
ANR	5254709	Statement	iter2	291:30:7248:7252	5254643	9	True				
ANR	5254710	Statement	","	291:35:7253:7253	5254643	10	True				
ANR	5254711	Statement	item	291:37:7255:7258	5254643	11	True				
ANR	5254712	Statement	)	291:41:7259:7259	5254643	12	True				
ANR	5254713	CompoundStatement		11:3:204:249	5254643	13					
ANR	5254714	IdentifierDeclStatement	"RTableColumn * col = r_list_get_n ( t -> cols , c ) ;"	292:3:7266:7311	5254643	0	True				
ANR	5254715	IdentifierDecl	"* col = r_list_get_n ( t -> cols , c )"		5254643	0					
ANR	5254716	IdentifierDeclType	RTableColumn *		5254643	0					
ANR	5254717	Identifier	col		5254643	1					
ANR	5254718	AssignmentExpression	"* col = r_list_get_n ( t -> cols , c )"		5254643	2		=			
ANR	5254719	Identifier	col		5254643	0					
ANR	5254720	CallExpression	"r_list_get_n ( t -> cols , c )"		5254643	1					
ANR	5254721	Callee	r_list_get_n		5254643	0					
ANR	5254722	Identifier	r_list_get_n		5254643	0					
ANR	5254723	ArgumentList	t -> cols		5254643	1					
ANR	5254724	Argument	t -> cols		5254643	0					
ANR	5254725	PtrMemberAccess	t -> cols		5254643	0					
ANR	5254726	Identifier	t		5254643	0					
ANR	5254727	Identifier	cols		5254643	1					
ANR	5254728	Argument	c		5254643	1					
ANR	5254729	Identifier	c		5254643	0					
ANR	5254730	IfStatement	if ( col )		5254643	1					
ANR	5254731	Condition	col	293:7:7320:7322	5254643	0	True				
ANR	5254732	Identifier	col		5254643	0					
ANR	5254733	CompoundStatement		12:12:263:263	5254643	1					
ANR	5254734	IfStatement	if ( col -> type == & r_table_type_number )		5254643	0					
ANR	5254735	Condition	col -> type == & r_table_type_number	294:8:7335:7367	5254643	0	True				
ANR	5254736	EqualityExpression	col -> type == & r_table_type_number		5254643	0		==			
ANR	5254737	PtrMemberAccess	col -> type		5254643	0					
ANR	5254738	Identifier	col		5254643	0					
ANR	5254739	Identifier	type		5254643	1					
ANR	5254740	UnaryOperationExpression	& r_table_type_number		5254643	1					
ANR	5254741	UnaryOperator	&		5254643	0					
ANR	5254742	Identifier	r_table_type_number		5254643	1					
ANR	5254743	CompoundStatement		14:5:315:346	5254643	1					
ANR	5254744	IdentifierDeclStatement	"ut64 n = r_num_get ( NULL , item ) ;"	295:5:7377:7408	5254643	0	True				
ANR	5254745	IdentifierDecl	"n = r_num_get ( NULL , item )"		5254643	0					
ANR	5254746	IdentifierDeclType	ut64		5254643	0					
ANR	5254747	Identifier	n		5254643	1					
ANR	5254748	AssignmentExpression	"n = r_num_get ( NULL , item )"		5254643	2		=			
ANR	5254749	Identifier	n		5254643	0					
ANR	5254750	CallExpression	"r_num_get ( NULL , item )"		5254643	1					
ANR	5254751	Callee	r_num_get		5254643	0					
ANR	5254752	Identifier	r_num_get		5254643	0					
ANR	5254753	ArgumentList	NULL		5254643	1					
ANR	5254754	Argument	NULL		5254643	0					
ANR	5254755	Identifier	NULL		5254643	0					
ANR	5254756	Argument	item		5254643	1					
ANR	5254757	Identifier	item		5254643	0					
ANR	5254758	IfStatement	if ( n )		5254643	1					
ANR	5254759	Condition	n	296:9:7419:7419	5254643	0	True				
ANR	5254760	Identifier	n		5254643	0					
ANR	5254761	CompoundStatement		15:12:360:360	5254643	1					
ANR	5254762	ExpressionStatement	"pj_kn ( pj , col -> name , n )"	297:6:7430:7454	5254643	0	True				
ANR	5254763	CallExpression	"pj_kn ( pj , col -> name , n )"		5254643	0					
ANR	5254764	Callee	pj_kn		5254643	0					
ANR	5254765	Identifier	pj_kn		5254643	0					
ANR	5254766	ArgumentList	pj		5254643	1					
ANR	5254767	Argument	pj		5254643	0					
ANR	5254768	Identifier	pj		5254643	0					
ANR	5254769	Argument	col -> name		5254643	1					
ANR	5254770	PtrMemberAccess	col -> name		5254643	0					
ANR	5254771	Identifier	col		5254643	0					
ANR	5254772	Identifier	name		5254643	1					
ANR	5254773	Argument	n		5254643	2					
ANR	5254774	Identifier	n		5254643	0					
ANR	5254775	ElseStatement	else		5254643	0					
ANR	5254776	IfStatement	if ( * item && * item != '0' )		5254643	0					
ANR	5254777	Condition	* item && * item != '0'	298:16:7472:7492	5254643	0	True				
ANR	5254778	AndExpression	* item && * item != '0'		5254643	0		&&			
ANR	5254779	UnaryOperationExpression	* item		5254643	0					
ANR	5254780	UnaryOperator	*		5254643	0					
ANR	5254781	Identifier	item		5254643	1					
ANR	5254782	EqualityExpression	* item != '0'		5254643	1		!=			
ANR	5254783	UnaryOperationExpression	* item		5254643	0					
ANR	5254784	UnaryOperator	*		5254643	0					
ANR	5254785	Identifier	item		5254643	1					
ANR	5254786	PrimaryExpression	'0'		5254643	1					
ANR	5254787	CompoundStatement		17:39:433:433	5254643	1					
ANR	5254788	ExpressionStatement	"pj_ks ( pj , col -> name , item )"	299:6:7503:7530	5254643	0	True				
ANR	5254789	CallExpression	"pj_ks ( pj , col -> name , item )"		5254643	0					
ANR	5254790	Callee	pj_ks		5254643	0					
ANR	5254791	Identifier	pj_ks		5254643	0					
ANR	5254792	ArgumentList	pj		5254643	1					
ANR	5254793	Argument	pj		5254643	0					
ANR	5254794	Identifier	pj		5254643	0					
ANR	5254795	Argument	col -> name		5254643	1					
ANR	5254796	PtrMemberAccess	col -> name		5254643	0					
ANR	5254797	Identifier	col		5254643	0					
ANR	5254798	Identifier	name		5254643	1					
ANR	5254799	Argument	item		5254643	2					
ANR	5254800	Identifier	item		5254643	0					
ANR	5254801	ElseStatement	else		5254643	0					
ANR	5254802	CompoundStatement		20:11:488:488	5254643	0					
ANR	5254803	ExpressionStatement	"pj_ks ( pj , col -> name , item )"	302:5:7557:7584	5254643	0	True				
ANR	5254804	CallExpression	"pj_ks ( pj , col -> name , item )"		5254643	0					
ANR	5254805	Callee	pj_ks		5254643	0					
ANR	5254806	Identifier	pj_ks		5254643	0					
ANR	5254807	ArgumentList	pj		5254643	1					
ANR	5254808	Argument	pj		5254643	0					
ANR	5254809	Identifier	pj		5254643	0					
ANR	5254810	Argument	col -> name		5254643	1					
ANR	5254811	PtrMemberAccess	col -> name		5254643	0					
ANR	5254812	Identifier	col		5254643	0					
ANR	5254813	Identifier	name		5254643	1					
ANR	5254814	Argument	item		5254643	2					
ANR	5254815	Identifier	item		5254643	0					
ANR	5254816	ExpressionStatement	c ++	305:3:7600:7603	5254643	2	True				
ANR	5254817	PostIncDecOperationExpression	c ++		5254643	0					
ANR	5254818	Identifier	c		5254643	0					
ANR	5254819	IncDec	++		5254643	1					
ANR	5254820	ExpressionStatement	pj_end ( pj )	307:2:7611:7622	5254643	14	True				
ANR	5254821	CallExpression	pj_end ( pj )		5254643	0					
ANR	5254822	Callee	pj_end		5254643	0					
ANR	5254823	Identifier	pj_end		5254643	0					
ANR	5254824	ArgumentList	pj		5254643	1					
ANR	5254825	Argument	pj		5254643	0					
ANR	5254826	Identifier	pj		5254643	0					
ANR	5254827	ExpressionStatement	pj_end ( pj )	309:1:7628:7639	5254643	15	True				
ANR	5254828	CallExpression	pj_end ( pj )		5254643	0					
ANR	5254829	Callee	pj_end		5254643	0					
ANR	5254830	Identifier	pj_end		5254643	0					
ANR	5254831	ArgumentList	pj		5254643	1					
ANR	5254832	Argument	pj		5254643	0					
ANR	5254833	Identifier	pj		5254643	0					
ANR	5254834	ReturnStatement	return pj_drain ( pj ) ;	310:1:7642:7662	5254643	16	True				
ANR	5254835	CallExpression	pj_drain ( pj )		5254643	0					
ANR	5254836	Callee	pj_drain		5254643	0					
ANR	5254837	Identifier	pj_drain		5254643	0					
ANR	5254838	ArgumentList	pj		5254643	1					
ANR	5254839	Argument	pj		5254643	0					
ANR	5254840	Identifier	pj		5254643	0					
ANR	5254841	ReturnType	R_API char *		5254643	1					
ANR	5254842	Identifier	r_table_tojson		5254643	2					
ANR	5254843	ParameterList	RTable * t		5254643	3					
ANR	5254844	Parameter	RTable * t	282:27:7050:7058	5254643	0	True				
ANR	5254845	ParameterType	RTable *		5254643	0					
ANR	5254846	Identifier	t		5254643	1					
ANR	5254847	CFGEntryNode	ENTRY		5254643		True				
ANR	5254848	CFGExitNode	EXIT		5254643		True				
ANR	5254849	Symbol	col		5254643						
ANR	5254850	Symbol	item		5254643						
ANR	5254851	Symbol	col -> type		5254643						
ANR	5254852	Symbol	c		5254643						
ANR	5254853	Symbol	NULL		5254643						
ANR	5254854	Symbol	iter2		5254643						
ANR	5254855	Symbol	t -> cols		5254643						
ANR	5254856	Symbol	iter		5254643						
ANR	5254857	Symbol	r_list_get_n		5254643						
ANR	5254858	Symbol	n		5254643						
ANR	5254859	Symbol	& r_table_type_number		5254643						
ANR	5254860	Symbol	col -> name		5254643						
ANR	5254861	Symbol	t		5254643						
ANR	5254862	Symbol	* col		5254643						
ANR	5254863	Symbol	* item		5254643						
ANR	5254864	Symbol	pj_drain		5254643						
ANR	5254865	Symbol	pj_new		5254643						
ANR	5254866	Symbol	pj		5254643						
ANR	5254867	Symbol	r_num_get		5254643						
ANR	5254868	Symbol	row		5254643						
ANR	5254869	Symbol	* t		5254643						
ANR	5254870	Function	r_table_filter	313:0:7667:8298							
ANR	5254871	FunctionDef	"r_table_filter (RTable * t , int nth , int op , const char * un)"		5254870	0					
ANR	5254872	CompoundStatement		313:70:7737:8298	5254870	0					
ANR	5254873	IdentifierDeclStatement	RTableRow * row ;	314:1:7740:7754	5254870	0	True				
ANR	5254874	IdentifierDecl	* row		5254870	0					
ANR	5254875	IdentifierDeclType	RTableRow *		5254870	0					
ANR	5254876	Identifier	row		5254870	1					
ANR	5254877	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	315:1:7757:7780	5254870	1	True				
ANR	5254878	IdentifierDecl	* iter		5254870	0					
ANR	5254879	IdentifierDeclType	RListIter *		5254870	0					
ANR	5254880	Identifier	iter		5254870	1					
ANR	5254881	IdentifierDecl	* iter2		5254870	1					
ANR	5254882	IdentifierDeclType	RListIter *		5254870	0					
ANR	5254883	Identifier	iter2		5254870	1					
ANR	5254884	IdentifierDeclStatement	"ut64 uv = r_num_get ( NULL , un ) ;"	316:1:7783:7813	5254870	2	True				
ANR	5254885	IdentifierDecl	"uv = r_num_get ( NULL , un )"		5254870	0					
ANR	5254886	IdentifierDeclType	ut64		5254870	0					
ANR	5254887	Identifier	uv		5254870	1					
ANR	5254888	AssignmentExpression	"uv = r_num_get ( NULL , un )"		5254870	2		=			
ANR	5254889	Identifier	uv		5254870	0					
ANR	5254890	CallExpression	"r_num_get ( NULL , un )"		5254870	1					
ANR	5254891	Callee	r_num_get		5254870	0					
ANR	5254892	Identifier	r_num_get		5254870	0					
ANR	5254893	ArgumentList	NULL		5254870	1					
ANR	5254894	Argument	NULL		5254870	0					
ANR	5254895	Identifier	NULL		5254870	0					
ANR	5254896	Argument	un		5254870	1					
ANR	5254897	Identifier	un		5254870	0					
ANR	5254898	Statement	r_list_foreach_safe	317:1:7816:7834	5254870	3	True				
ANR	5254899	Statement	(	317:21:7836:7836	5254870	4	True				
ANR	5254900	Statement	t	317:22:7837:7837	5254870	5	True				
ANR	5254901	Statement	->	317:23:7838:7839	5254870	6	True				
ANR	5254902	Statement	rows	317:25:7840:7843	5254870	7	True				
ANR	5254903	Statement	","	317:29:7844:7844	5254870	8	True				
ANR	5254904	Statement	iter	317:31:7846:7849	5254870	9	True				
ANR	5254905	Statement	","	317:35:7850:7850	5254870	10	True				
ANR	5254906	Statement	iter2	317:37:7852:7856	5254870	11	True				
ANR	5254907	Statement	","	317:42:7857:7857	5254870	12	True				
ANR	5254908	Statement	row	317:44:7859:7861	5254870	13	True				
ANR	5254909	Statement	)	317:47:7862:7862	5254870	14	True				
ANR	5254910	CompoundStatement		8:2:215:232	5254870	15					
ANR	5254911	IdentifierDeclStatement	"const char * nn = r_list_get_n ( row -> items , nth ) ;"	318:2:7868:7915	5254870	0	True				
ANR	5254912	IdentifierDecl	"* nn = r_list_get_n ( row -> items , nth )"		5254870	0					
ANR	5254913	IdentifierDeclType	const char *		5254870	0					
ANR	5254914	Identifier	nn		5254870	1					
ANR	5254915	AssignmentExpression	"* nn = r_list_get_n ( row -> items , nth )"		5254870	2		=			
ANR	5254916	Identifier	nn		5254870	0					
ANR	5254917	CallExpression	"r_list_get_n ( row -> items , nth )"		5254870	1					
ANR	5254918	Callee	r_list_get_n		5254870	0					
ANR	5254919	Identifier	r_list_get_n		5254870	0					
ANR	5254920	ArgumentList	row -> items		5254870	1					
ANR	5254921	Argument	row -> items		5254870	0					
ANR	5254922	PtrMemberAccess	row -> items		5254870	0					
ANR	5254923	Identifier	row		5254870	0					
ANR	5254924	Identifier	items		5254870	1					
ANR	5254925	Argument	nth		5254870	1					
ANR	5254926	Identifier	nth		5254870	0					
ANR	5254927	IdentifierDeclStatement	"ut64 nv = r_num_get ( NULL , nn ) ;"	319:2:7919:7949	5254870	1	True				
ANR	5254928	IdentifierDecl	"nv = r_num_get ( NULL , nn )"		5254870	0					
ANR	5254929	IdentifierDeclType	ut64		5254870	0					
ANR	5254930	Identifier	nv		5254870	1					
ANR	5254931	AssignmentExpression	"nv = r_num_get ( NULL , nn )"		5254870	2		=			
ANR	5254932	Identifier	nv		5254870	0					
ANR	5254933	CallExpression	"r_num_get ( NULL , nn )"		5254870	1					
ANR	5254934	Callee	r_num_get		5254870	0					
ANR	5254935	Identifier	r_num_get		5254870	0					
ANR	5254936	ArgumentList	NULL		5254870	1					
ANR	5254937	Argument	NULL		5254870	0					
ANR	5254938	Identifier	NULL		5254870	0					
ANR	5254939	Argument	nn		5254870	1					
ANR	5254940	Identifier	nn		5254870	0					
ANR	5254941	IdentifierDeclStatement	bool match = true ;	320:2:7953:7970	5254870	2	True				
ANR	5254942	IdentifierDecl	match = true		5254870	0					
ANR	5254943	IdentifierDeclType	bool		5254870	0					
ANR	5254944	Identifier	match		5254870	1					
ANR	5254945	AssignmentExpression	match = true		5254870	2		=			
ANR	5254946	Identifier	true		5254870	0					
ANR	5254947	Identifier	true		5254870	1					
ANR	5254948	SwitchStatement	switch ( op )		5254870	3					
ANR	5254949	Condition	op	321:10:7982:7983	5254870	0	True				
ANR	5254950	Identifier	op		5254870	0					
ANR	5254951	CompoundStatement		9:14:248:248	5254870	1					
ANR	5254952	Label	case '>' :	322:2:7990:7998	5254870	0	True				
ANR	5254953	ExpressionStatement	match = ( nv > uv )	323:3:8003:8020	5254870	1	True				
ANR	5254954	AssignmentExpression	match = ( nv > uv )		5254870	0		=			
ANR	5254955	Identifier	match		5254870	0					
ANR	5254956	RelationalExpression	nv > uv		5254870	1		>			
ANR	5254957	Identifier	nv		5254870	0					
ANR	5254958	Identifier	uv		5254870	1					
ANR	5254959	BreakStatement	break ;	324:3:8025:8030	5254870	2	True				
ANR	5254960	Label	case '<' :	325:2:8034:8042	5254870	3	True				
ANR	5254961	ExpressionStatement	match = ( nv < uv )	326:3:8047:8064	5254870	4	True				
ANR	5254962	AssignmentExpression	match = ( nv < uv )		5254870	0		=			
ANR	5254963	Identifier	match		5254870	0					
ANR	5254964	RelationalExpression	nv < uv		5254870	1		<			
ANR	5254965	Identifier	nv		5254870	0					
ANR	5254966	Identifier	uv		5254870	1					
ANR	5254967	BreakStatement	break ;	327:3:8069:8074	5254870	5	True				
ANR	5254968	Label	case '=' :	328:2:8078:8086	5254870	6	True				
ANR	5254969	ExpressionStatement	match = ( nv == uv )	329:3:8091:8109	5254870	7	True				
ANR	5254970	AssignmentExpression	match = ( nv == uv )		5254870	0		=			
ANR	5254971	Identifier	match		5254870	0					
ANR	5254972	EqualityExpression	nv == uv		5254870	1		==			
ANR	5254973	Identifier	nv		5254870	0					
ANR	5254974	Identifier	uv		5254870	1					
ANR	5254975	BreakStatement	break ;	330:3:8114:8119	5254870	8	True				
ANR	5254976	Label	case '!' :	331:2:8123:8131	5254870	9	True				
ANR	5254977	ExpressionStatement	match = ( nv == uv )	332:3:8136:8154	5254870	10	True				
ANR	5254978	AssignmentExpression	match = ( nv == uv )		5254870	0		=			
ANR	5254979	Identifier	match		5254870	0					
ANR	5254980	EqualityExpression	nv == uv		5254870	1		==			
ANR	5254981	Identifier	nv		5254870	0					
ANR	5254982	Identifier	uv		5254870	1					
ANR	5254983	BreakStatement	break ;	333:3:8159:8164	5254870	11	True				
ANR	5254984	Label	case '~' :	334:2:8168:8176	5254870	12	True				
ANR	5254985	ExpressionStatement	"match = strstr ( nn , un ) != NULL"	335:3:8181:8212	5254870	13	True				
ANR	5254986	AssignmentExpression	"match = strstr ( nn , un ) != NULL"		5254870	0		=			
ANR	5254987	Identifier	match		5254870	0					
ANR	5254988	EqualityExpression	"strstr ( nn , un ) != NULL"		5254870	1		!=			
ANR	5254989	CallExpression	"strstr ( nn , un )"		5254870	0					
ANR	5254990	Callee	strstr		5254870	0					
ANR	5254991	Identifier	strstr		5254870	0					
ANR	5254992	ArgumentList	nn		5254870	1					
ANR	5254993	Argument	nn		5254870	0					
ANR	5254994	Identifier	nn		5254870	0					
ANR	5254995	Argument	un		5254870	1					
ANR	5254996	Identifier	un		5254870	0					
ANR	5254997	Identifier	NULL		5254870	1					
ANR	5254998	Label	case '\\0' :	336:2:8216:8225	5254870	14	True				
ANR	5254999	BreakStatement	break ;	337:3:8230:8235	5254870	15	True				
ANR	5255000	IfStatement	if ( ! match )		5254870	4					
ANR	5255001	Condition	! match	339:6:8247:8252	5254870	0	True				
ANR	5255002	UnaryOperationExpression	! match		5254870	0					
ANR	5255003	UnaryOperator	!		5254870	0					
ANR	5255004	Identifier	match		5254870	1					
ANR	5255005	CompoundStatement		27:14:517:517	5254870	1					
ANR	5255006	ExpressionStatement	"r_list_delete ( t -> rows , iter )"	340:3:8260:8289	5254870	0	True				
ANR	5255007	CallExpression	"r_list_delete ( t -> rows , iter )"		5254870	0					
ANR	5255008	Callee	r_list_delete		5254870	0					
ANR	5255009	Identifier	r_list_delete		5254870	0					
ANR	5255010	ArgumentList	t -> rows		5254870	1					
ANR	5255011	Argument	t -> rows		5254870	0					
ANR	5255012	PtrMemberAccess	t -> rows		5254870	0					
ANR	5255013	Identifier	t		5254870	0					
ANR	5255014	Identifier	rows		5254870	1					
ANR	5255015	Argument	iter		5254870	1					
ANR	5255016	Identifier	iter		5254870	0					
ANR	5255017	ReturnType	R_API void		5254870	1					
ANR	5255018	Identifier	r_table_filter		5254870	2					
ANR	5255019	ParameterList	"RTable * t , int nth , int op , const char * un"		5254870	3					
ANR	5255020	Parameter	RTable * t	313:26:7693:7701	5254870	0	True				
ANR	5255021	ParameterType	RTable *		5254870	0					
ANR	5255022	Identifier	t		5254870	1					
ANR	5255023	Parameter	int nth	313:37:7704:7710	5254870	1	True				
ANR	5255024	ParameterType	int		5254870	0					
ANR	5255025	Identifier	nth		5254870	1					
ANR	5255026	Parameter	int op	313:46:7713:7718	5254870	2	True				
ANR	5255027	ParameterType	int		5254870	0					
ANR	5255028	Identifier	op		5254870	1					
ANR	5255029	Parameter	const char * un	313:54:7721:7734	5254870	3	True				
ANR	5255030	ParameterType	const char *		5254870	0					
ANR	5255031	Identifier	un		5254870	1					
ANR	5255032	CFGEntryNode	ENTRY		5254870		True				
ANR	5255033	CFGExitNode	EXIT		5254870		True				
ANR	5255034	Symbol	nn		5254870						
ANR	5255035	Symbol	op		5254870						
ANR	5255036	Symbol	uv		5254870						
ANR	5255037	Symbol	nth		5254870						
ANR	5255038	Symbol	NULL		5254870						
ANR	5255039	Symbol	* row		5254870						
ANR	5255040	Symbol	iter2		5254870						
ANR	5255041	Symbol	nv		5254870						
ANR	5255042	Symbol	match		5254870						
ANR	5255043	Symbol	iter		5254870						
ANR	5255044	Symbol	r_list_get_n		5254870						
ANR	5255045	Symbol	row -> items		5254870						
ANR	5255046	Symbol	t		5254870						
ANR	5255047	Symbol	strstr		5254870						
ANR	5255048	Symbol	true		5254870						
ANR	5255049	Symbol	un		5254870						
ANR	5255050	Symbol	t -> rows		5254870						
ANR	5255051	Symbol	r_num_get		5254870						
ANR	5255052	Symbol	row		5254870						
ANR	5255053	Symbol	* t		5254870						
ANR	5255054	Function	cmp	345:0:8301:8581							
ANR	5255055	FunctionDef	"cmp (const void * _a , const void * _b)"		5255054	0					
ANR	5255056	CompoundStatement		345:47:8348:8581	5255054	0					
ANR	5255057	IdentifierDeclStatement	RTableRow * a = ( RTableRow * ) _a ;	346:1:8351:8380	5255054	0	True				
ANR	5255058	IdentifierDecl	* a = ( RTableRow * ) _a		5255054	0					
ANR	5255059	IdentifierDeclType	RTableRow *		5255054	0					
ANR	5255060	Identifier	a		5255054	1					
ANR	5255061	AssignmentExpression	* a = ( RTableRow * ) _a		5255054	2		=			
ANR	5255062	Identifier	a		5255054	0					
ANR	5255063	CastExpression	( RTableRow * ) _a		5255054	1					
ANR	5255064	CastTarget	RTableRow *		5255054	0					
ANR	5255065	Identifier	_a		5255054	1					
ANR	5255066	IdentifierDeclStatement	RTableRow * b = ( RTableRow * ) _b ;	347:1:8383:8412	5255054	1	True				
ANR	5255067	IdentifierDecl	* b = ( RTableRow * ) _b		5255054	0					
ANR	5255068	IdentifierDeclType	RTableRow *		5255054	0					
ANR	5255069	Identifier	b		5255054	1					
ANR	5255070	AssignmentExpression	* b = ( RTableRow * ) _b		5255054	2		=			
ANR	5255071	Identifier	b		5255054	0					
ANR	5255072	CastExpression	( RTableRow * ) _b		5255054	1					
ANR	5255073	CastTarget	RTableRow *		5255054	0					
ANR	5255074	Identifier	_b		5255054	1					
ANR	5255075	IdentifierDeclStatement	"const char * wa = r_list_get_n ( a -> items , Gnth ) ;"	348:1:8415:8461	5255054	2	True				
ANR	5255076	IdentifierDecl	"* wa = r_list_get_n ( a -> items , Gnth )"		5255054	0					
ANR	5255077	IdentifierDeclType	const char *		5255054	0					
ANR	5255078	Identifier	wa		5255054	1					
ANR	5255079	AssignmentExpression	"* wa = r_list_get_n ( a -> items , Gnth )"		5255054	2		=			
ANR	5255080	Identifier	wa		5255054	0					
ANR	5255081	CallExpression	"r_list_get_n ( a -> items , Gnth )"		5255054	1					
ANR	5255082	Callee	r_list_get_n		5255054	0					
ANR	5255083	Identifier	r_list_get_n		5255054	0					
ANR	5255084	ArgumentList	a -> items		5255054	1					
ANR	5255085	Argument	a -> items		5255054	0					
ANR	5255086	PtrMemberAccess	a -> items		5255054	0					
ANR	5255087	Identifier	a		5255054	0					
ANR	5255088	Identifier	items		5255054	1					
ANR	5255089	Argument	Gnth		5255054	1					
ANR	5255090	Identifier	Gnth		5255054	0					
ANR	5255091	IdentifierDeclStatement	"const char * wb = r_list_get_n ( b -> items , Gnth ) ;"	349:1:8464:8510	5255054	3	True				
ANR	5255092	IdentifierDecl	"* wb = r_list_get_n ( b -> items , Gnth )"		5255054	0					
ANR	5255093	IdentifierDeclType	const char *		5255054	0					
ANR	5255094	Identifier	wb		5255054	1					
ANR	5255095	AssignmentExpression	"* wb = r_list_get_n ( b -> items , Gnth )"		5255054	2		=			
ANR	5255096	Identifier	wb		5255054	0					
ANR	5255097	CallExpression	"r_list_get_n ( b -> items , Gnth )"		5255054	1					
ANR	5255098	Callee	r_list_get_n		5255054	0					
ANR	5255099	Identifier	r_list_get_n		5255054	0					
ANR	5255100	ArgumentList	b -> items		5255054	1					
ANR	5255101	Argument	b -> items		5255054	0					
ANR	5255102	PtrMemberAccess	b -> items		5255054	0					
ANR	5255103	Identifier	b		5255054	0					
ANR	5255104	Identifier	items		5255054	1					
ANR	5255105	Argument	Gnth		5255054	1					
ANR	5255106	Identifier	Gnth		5255054	0					
ANR	5255107	IdentifierDeclStatement	"int res = Gcmp ( wa , wb ) ;"	350:1:8513:8536	5255054	4	True				
ANR	5255108	IdentifierDecl	"res = Gcmp ( wa , wb )"		5255054	0					
ANR	5255109	IdentifierDeclType	int		5255054	0					
ANR	5255110	Identifier	res		5255054	1					
ANR	5255111	AssignmentExpression	"res = Gcmp ( wa , wb )"		5255054	2		=			
ANR	5255112	Identifier	res		5255054	0					
ANR	5255113	CallExpression	"Gcmp ( wa , wb )"		5255054	1					
ANR	5255114	Callee	Gcmp		5255054	0					
ANR	5255115	Identifier	Gcmp		5255054	0					
ANR	5255116	ArgumentList	wa		5255054	1					
ANR	5255117	Argument	wa		5255054	0					
ANR	5255118	Identifier	wa		5255054	0					
ANR	5255119	Argument	wb		5255054	1					
ANR	5255120	Identifier	wb		5255054	0					
ANR	5255121	IfStatement	if ( Ginc )		5255054	5					
ANR	5255122	Condition	Ginc	351:5:8543:8546	5255054	0	True				
ANR	5255123	Identifier	Ginc		5255054	0					
ANR	5255124	CompoundStatement		7:11:200:200	5255054	1					
ANR	5255125	ExpressionStatement	res = - res	352:2:8553:8563	5255054	0	True				
ANR	5255126	AssignmentExpression	res = - res		5255054	0		=			
ANR	5255127	Identifier	res		5255054	0					
ANR	5255128	UnaryOperationExpression	- res		5255054	1					
ANR	5255129	UnaryOperator	-		5255054	0					
ANR	5255130	Identifier	res		5255054	1					
ANR	5255131	ReturnStatement	return res ;	354:1:8569:8579	5255054	6	True				
ANR	5255132	Identifier	res		5255054	0					
ANR	5255133	ReturnType	static int		5255054	1					
ANR	5255134	Identifier	cmp		5255054	2					
ANR	5255135	ParameterList	"const void * _a , const void * _b"		5255054	3					
ANR	5255136	Parameter	const void * _a	345:15:8316:8329	5255054	0	True				
ANR	5255137	ParameterType	const void *		5255054	0					
ANR	5255138	Identifier	_a		5255054	1					
ANR	5255139	Parameter	const void * _b	345:31:8332:8345	5255054	1	True				
ANR	5255140	ParameterType	const void *		5255054	0					
ANR	5255141	Identifier	_b		5255054	1					
ANR	5255142	CFGEntryNode	ENTRY		5255054		True				
ANR	5255143	CFGExitNode	EXIT		5255054		True				
ANR	5255144	Symbol	a		5255054						
ANR	5255145	Symbol	a -> items		5255054						
ANR	5255146	Symbol	res		5255054						
ANR	5255147	Symbol	_a		5255054						
ANR	5255148	Symbol	b		5255054						
ANR	5255149	Symbol	_b		5255054						
ANR	5255150	Symbol	r_list_get_n		5255054						
ANR	5255151	Symbol	wa		5255054						
ANR	5255152	Symbol	* a		5255054						
ANR	5255153	Symbol	wb		5255054						
ANR	5255154	Symbol	* b		5255054						
ANR	5255155	Symbol	b -> items		5255054						
ANR	5255156	Symbol	Ginc		5255054						
ANR	5255157	Symbol	Gnth		5255054						
ANR	5255158	Symbol	Gcmp		5255054						
ANR	5255159	Function	r_table_sort	357:0:8584:8822							
ANR	5255160	FunctionDef	"r_table_sort (RTable * t , int nth , bool inc)"		5255159	0					
ANR	5255161	CompoundStatement		357:54:8638:8822	5255159	0					
ANR	5255162	IdentifierDeclStatement	"RTableColumn * col = r_list_get_n ( t -> cols , nth ) ;"	358:1:8641:8688	5255159	0	True				
ANR	5255163	IdentifierDecl	"* col = r_list_get_n ( t -> cols , nth )"		5255159	0					
ANR	5255164	IdentifierDeclType	RTableColumn *		5255159	0					
ANR	5255165	Identifier	col		5255159	1					
ANR	5255166	AssignmentExpression	"* col = r_list_get_n ( t -> cols , nth )"		5255159	2		=			
ANR	5255167	Identifier	col		5255159	0					
ANR	5255168	CallExpression	"r_list_get_n ( t -> cols , nth )"		5255159	1					
ANR	5255169	Callee	r_list_get_n		5255159	0					
ANR	5255170	Identifier	r_list_get_n		5255159	0					
ANR	5255171	ArgumentList	t -> cols		5255159	1					
ANR	5255172	Argument	t -> cols		5255159	0					
ANR	5255173	PtrMemberAccess	t -> cols		5255159	0					
ANR	5255174	Identifier	t		5255159	0					
ANR	5255175	Identifier	cols		5255159	1					
ANR	5255176	Argument	nth		5255159	1					
ANR	5255177	Identifier	nth		5255159	0					
ANR	5255178	IfStatement	if ( col )		5255159	1					
ANR	5255179	Condition	col	359:5:8695:8697	5255159	0	True				
ANR	5255180	Identifier	col		5255159	0					
ANR	5255181	CompoundStatement		3:10:61:61	5255159	1					
ANR	5255182	ExpressionStatement	Ginc = inc	360:2:8704:8714	5255159	0	True				
ANR	5255183	AssignmentExpression	Ginc = inc		5255159	0		=			
ANR	5255184	Identifier	Ginc		5255159	0					
ANR	5255185	Identifier	inc		5255159	1					
ANR	5255186	ExpressionStatement	Gnth = nth	361:2:8718:8728	5255159	1	True				
ANR	5255187	AssignmentExpression	Gnth = nth		5255159	0		=			
ANR	5255188	Identifier	Gnth		5255159	0					
ANR	5255189	Identifier	nth		5255159	1					
ANR	5255190	ExpressionStatement	Gcmp = col -> type -> cmp	362:2:8732:8753	5255159	2	True				
ANR	5255191	AssignmentExpression	Gcmp = col -> type -> cmp		5255159	0		=			
ANR	5255192	Identifier	Gcmp		5255159	0					
ANR	5255193	PtrMemberAccess	col -> type -> cmp		5255159	1					
ANR	5255194	PtrMemberAccess	col -> type		5255159	0					
ANR	5255195	Identifier	col		5255159	0					
ANR	5255196	Identifier	type		5255159	1					
ANR	5255197	Identifier	cmp		5255159	1					
ANR	5255198	ExpressionStatement	"r_list_sort ( t -> rows , cmp )"	363:2:8757:8783	5255159	3	True				
ANR	5255199	CallExpression	"r_list_sort ( t -> rows , cmp )"		5255159	0					
ANR	5255200	Callee	r_list_sort		5255159	0					
ANR	5255201	Identifier	r_list_sort		5255159	0					
ANR	5255202	ArgumentList	t -> rows		5255159	1					
ANR	5255203	Argument	t -> rows		5255159	0					
ANR	5255204	PtrMemberAccess	t -> rows		5255159	0					
ANR	5255205	Identifier	t		5255159	0					
ANR	5255206	Identifier	rows		5255159	1					
ANR	5255207	Argument	cmp		5255159	1					
ANR	5255208	Identifier	cmp		5255159	0					
ANR	5255209	ExpressionStatement	Gnth = Ginc = 0	364:2:8787:8802	5255159	4	True				
ANR	5255210	AssignmentExpression	Gnth = Ginc = 0		5255159	0		=			
ANR	5255211	Identifier	Gnth		5255159	0					
ANR	5255212	AssignmentExpression	Ginc = 0		5255159	1		=			
ANR	5255213	Identifier	Ginc		5255159	0					
ANR	5255214	PrimaryExpression	0		5255159	1					
ANR	5255215	ExpressionStatement	Gcmp = NULL	365:2:8806:8817	5255159	5	True				
ANR	5255216	AssignmentExpression	Gcmp = NULL		5255159	0		=			
ANR	5255217	Identifier	Gcmp		5255159	0					
ANR	5255218	Identifier	NULL		5255159	1					
ANR	5255219	ReturnType	R_API void		5255159	1					
ANR	5255220	Identifier	r_table_sort		5255159	2					
ANR	5255221	ParameterList	"RTable * t , int nth , bool inc"		5255159	3					
ANR	5255222	Parameter	RTable * t	357:24:8608:8616	5255159	0	True				
ANR	5255223	ParameterType	RTable *		5255159	0					
ANR	5255224	Identifier	t		5255159	1					
ANR	5255225	Parameter	int nth	357:35:8619:8625	5255159	1	True				
ANR	5255226	ParameterType	int		5255159	0					
ANR	5255227	Identifier	nth		5255159	1					
ANR	5255228	Parameter	bool inc	357:44:8628:8635	5255159	2	True				
ANR	5255229	ParameterType	bool		5255159	0					
ANR	5255230	Identifier	inc		5255159	1					
ANR	5255231	CFGEntryNode	ENTRY		5255159		True				
ANR	5255232	CFGExitNode	EXIT		5255159		True				
ANR	5255233	Symbol	col		5255159						
ANR	5255234	Symbol	col -> type		5255159						
ANR	5255235	Symbol	nth		5255159						
ANR	5255236	Symbol	NULL		5255159						
ANR	5255237	Symbol	cmp		5255159						
ANR	5255238	Symbol	t -> cols		5255159						
ANR	5255239	Symbol	r_list_get_n		5255159						
ANR	5255240	Symbol	* col -> type		5255159						
ANR	5255241	Symbol	col -> type -> cmp		5255159						
ANR	5255242	Symbol	t		5255159						
ANR	5255243	Symbol	* * col		5255159						
ANR	5255244	Symbol	* col		5255159						
ANR	5255245	Symbol	Ginc		5255159						
ANR	5255246	Symbol	t -> rows		5255159						
ANR	5255247	Symbol	Gnth		5255159						
ANR	5255248	Symbol	* t		5255159						
ANR	5255249	Symbol	Gcmp		5255159						
ANR	5255250	Symbol	inc		5255159						
ANR	5255251	Function	r_table_column_nth	369:0:8825:9048							
ANR	5255252	FunctionDef	"r_table_column_nth (RTable * t , const char * name)"		5255251	0					
ANR	5255253	CompoundStatement		369:58:8883:9048	5255251	0					
ANR	5255254	IdentifierDeclStatement	RListIter * iter ;	370:1:8886:8901	5255251	0	True				
ANR	5255255	IdentifierDecl	* iter		5255251	0					
ANR	5255256	IdentifierDeclType	RListIter *		5255251	0					
ANR	5255257	Identifier	iter		5255251	1					
ANR	5255258	IdentifierDeclStatement	RTableColumn * col ;	371:1:8904:8921	5255251	1	True				
ANR	5255259	IdentifierDecl	* col		5255251	0					
ANR	5255260	IdentifierDeclType	RTableColumn *		5255251	0					
ANR	5255261	Identifier	col		5255251	1					
ANR	5255262	IdentifierDeclStatement	int n = 0 ;	372:1:8924:8933	5255251	2	True				
ANR	5255263	IdentifierDecl	n = 0		5255251	0					
ANR	5255264	IdentifierDeclType	int		5255251	0					
ANR	5255265	Identifier	n		5255251	1					
ANR	5255266	AssignmentExpression	n = 0		5255251	2		=			
ANR	5255267	Identifier	n		5255251	0					
ANR	5255268	PrimaryExpression	0		5255251	1					
ANR	5255269	Statement	r_list_foreach	373:1:8936:8949	5255251	3	True				
ANR	5255270	Statement	(	373:16:8951:8951	5255251	4	True				
ANR	5255271	Statement	t	373:17:8952:8952	5255251	5	True				
ANR	5255272	Statement	->	373:18:8953:8954	5255251	6	True				
ANR	5255273	Statement	cols	373:20:8955:8958	5255251	7	True				
ANR	5255274	Statement	","	373:24:8959:8959	5255251	8	True				
ANR	5255275	Statement	iter	373:26:8961:8964	5255251	9	True				
ANR	5255276	Statement	","	373:30:8965:8965	5255251	10	True				
ANR	5255277	Statement	col	373:32:8967:8969	5255251	11	True				
ANR	5255278	Statement	)	373:35:8970:8970	5255251	12	True				
ANR	5255279	CompoundStatement		5:37:88:88	5255251	13					
ANR	5255280	IfStatement	"if ( ! strcmp ( name , col -> name ) )"		5255251	0					
ANR	5255281	Condition	"! strcmp ( name , col -> name )"	374:6:8980:9004	5255251	0	True				
ANR	5255282	UnaryOperationExpression	"! strcmp ( name , col -> name )"		5255251	0					
ANR	5255283	UnaryOperator	!		5255251	0					
ANR	5255284	CallExpression	"strcmp ( name , col -> name )"		5255251	1					
ANR	5255285	Callee	strcmp		5255251	0					
ANR	5255286	Identifier	strcmp		5255251	0					
ANR	5255287	ArgumentList	name		5255251	1					
ANR	5255288	Argument	name		5255251	0					
ANR	5255289	Identifier	name		5255251	0					
ANR	5255290	Argument	col -> name		5255251	1					
ANR	5255291	PtrMemberAccess	col -> name		5255251	0					
ANR	5255292	Identifier	col		5255251	0					
ANR	5255293	Identifier	name		5255251	1					
ANR	5255294	CompoundStatement		6:33:123:123	5255251	1					
ANR	5255295	ReturnStatement	return n ;	375:3:9012:9020	5255251	0	True				
ANR	5255296	Identifier	n		5255251	0					
ANR	5255297	ExpressionStatement	n ++	377:2:9028:9031	5255251	1	True				
ANR	5255298	PostIncDecOperationExpression	n ++		5255251	0					
ANR	5255299	Identifier	n		5255251	0					
ANR	5255300	IncDec	++		5255251	1					
ANR	5255301	ReturnStatement	return - 1 ;	379:1:9037:9046	5255251	14	True				
ANR	5255302	UnaryOperationExpression	- 1		5255251	0					
ANR	5255303	UnaryOperator	-		5255251	0					
ANR	5255304	PrimaryExpression	1		5255251	1					
ANR	5255305	ReturnType	R_API int		5255251	1					
ANR	5255306	Identifier	r_table_column_nth		5255251	2					
ANR	5255307	ParameterList	"RTable * t , const char * name"		5255251	3					
ANR	5255308	Parameter	RTable * t	369:29:8854:8862	5255251	0	True				
ANR	5255309	ParameterType	RTable *		5255251	0					
ANR	5255310	Identifier	t		5255251	1					
ANR	5255311	Parameter	const char * name	369:40:8865:8880	5255251	1	True				
ANR	5255312	ParameterType	const char *		5255251	0					
ANR	5255313	Identifier	name		5255251	1					
ANR	5255314	CFGEntryNode	ENTRY		5255251		True				
ANR	5255315	CFGExitNode	EXIT		5255251		True				
ANR	5255316	Symbol	strcmp		5255251						
ANR	5255317	Symbol	col		5255251						
ANR	5255318	Symbol	col -> name		5255251						
ANR	5255319	Symbol	t		5255251						
ANR	5255320	Symbol	* col		5255251						
ANR	5255321	Symbol	name		5255251						
ANR	5255322	Symbol	iter		5255251						
ANR	5255323	Symbol	n		5255251						
ANR	5255324	Function	__resolveOperation	382:0:9051:9287							
ANR	5255325	FunctionDef	__resolveOperation (const char * op)		5255324	0					
ANR	5255326	CompoundStatement		382:46:9097:9287	5255324	0					
ANR	5255327	IfStatement	"if ( ! strcmp ( op , ""gt"" ) )"		5255324	0					
ANR	5255328	Condition	"! strcmp ( op , ""gt"" )"	383:5:9104:9121	5255324	0	True				
ANR	5255329	UnaryOperationExpression	"! strcmp ( op , ""gt"" )"		5255324	0					
ANR	5255330	UnaryOperator	!		5255324	0					
ANR	5255331	CallExpression	"strcmp ( op , ""gt"" )"		5255324	1					
ANR	5255332	Callee	strcmp		5255324	0					
ANR	5255333	Identifier	strcmp		5255324	0					
ANR	5255334	ArgumentList	op		5255324	1					
ANR	5255335	Argument	op		5255324	0					
ANR	5255336	Identifier	op		5255324	0					
ANR	5255337	Argument	"""gt"""		5255324	1					
ANR	5255338	PrimaryExpression	"""gt"""		5255324	0					
ANR	5255339	CompoundStatement		2:25:26:26	5255324	1					
ANR	5255340	ReturnStatement	return '>' ;	384:2:9128:9138	5255324	0	True				
ANR	5255341	PrimaryExpression	'>'		5255324	0					
ANR	5255342	IfStatement	"if ( ! strcmp ( op , ""lt"" ) )"		5255324	1					
ANR	5255343	Condition	"! strcmp ( op , ""lt"" )"	386:5:9148:9165	5255324	0	True				
ANR	5255344	UnaryOperationExpression	"! strcmp ( op , ""lt"" )"		5255324	0					
ANR	5255345	UnaryOperator	!		5255324	0					
ANR	5255346	CallExpression	"strcmp ( op , ""lt"" )"		5255324	1					
ANR	5255347	Callee	strcmp		5255324	0					
ANR	5255348	Identifier	strcmp		5255324	0					
ANR	5255349	ArgumentList	op		5255324	1					
ANR	5255350	Argument	op		5255324	0					
ANR	5255351	Identifier	op		5255324	0					
ANR	5255352	Argument	"""lt"""		5255324	1					
ANR	5255353	PrimaryExpression	"""lt"""		5255324	0					
ANR	5255354	CompoundStatement		5:25:70:70	5255324	1					
ANR	5255355	ReturnStatement	return '<' ;	387:2:9172:9182	5255324	0	True				
ANR	5255356	PrimaryExpression	'<'		5255324	0					
ANR	5255357	IfStatement	"if ( ! strcmp ( op , ""eq"" ) )"		5255324	2					
ANR	5255358	Condition	"! strcmp ( op , ""eq"" )"	389:5:9192:9209	5255324	0	True				
ANR	5255359	UnaryOperationExpression	"! strcmp ( op , ""eq"" )"		5255324	0					
ANR	5255360	UnaryOperator	!		5255324	0					
ANR	5255361	CallExpression	"strcmp ( op , ""eq"" )"		5255324	1					
ANR	5255362	Callee	strcmp		5255324	0					
ANR	5255363	Identifier	strcmp		5255324	0					
ANR	5255364	ArgumentList	op		5255324	1					
ANR	5255365	Argument	op		5255324	0					
ANR	5255366	Identifier	op		5255324	0					
ANR	5255367	Argument	"""eq"""		5255324	1					
ANR	5255368	PrimaryExpression	"""eq"""		5255324	0					
ANR	5255369	CompoundStatement		8:25:114:114	5255324	1					
ANR	5255370	ReturnStatement	return '=' ;	390:2:9216:9226	5255324	0	True				
ANR	5255371	PrimaryExpression	'='		5255324	0					
ANR	5255372	IfStatement	"if ( ! strcmp ( op , ""ne"" ) )"		5255324	3					
ANR	5255373	Condition	"! strcmp ( op , ""ne"" )"	392:5:9236:9253	5255324	0	True				
ANR	5255374	UnaryOperationExpression	"! strcmp ( op , ""ne"" )"		5255324	0					
ANR	5255375	UnaryOperator	!		5255324	0					
ANR	5255376	CallExpression	"strcmp ( op , ""ne"" )"		5255324	1					
ANR	5255377	Callee	strcmp		5255324	0					
ANR	5255378	Identifier	strcmp		5255324	0					
ANR	5255379	ArgumentList	op		5255324	1					
ANR	5255380	Argument	op		5255324	0					
ANR	5255381	Identifier	op		5255324	0					
ANR	5255382	Argument	"""ne"""		5255324	1					
ANR	5255383	PrimaryExpression	"""ne"""		5255324	0					
ANR	5255384	CompoundStatement		11:25:158:158	5255324	1					
ANR	5255385	ReturnStatement	return '!' ;	393:2:9260:9270	5255324	0	True				
ANR	5255386	PrimaryExpression	'!'		5255324	0					
ANR	5255387	ReturnStatement	return - 1 ;	395:1:9276:9285	5255324	4	True				
ANR	5255388	UnaryOperationExpression	- 1		5255324	0					
ANR	5255389	UnaryOperator	-		5255324	0					
ANR	5255390	PrimaryExpression	1		5255324	1					
ANR	5255391	ReturnType	static int		5255324	1					
ANR	5255392	Identifier	__resolveOperation		5255324	2					
ANR	5255393	ParameterList	const char * op		5255324	3					
ANR	5255394	Parameter	const char * op	382:30:9081:9094	5255324	0	True				
ANR	5255395	ParameterType	const char *		5255324	0					
ANR	5255396	Identifier	op		5255324	1					
ANR	5255397	CFGEntryNode	ENTRY		5255324		True				
ANR	5255398	CFGExitNode	EXIT		5255324		True				
ANR	5255399	Symbol	strcmp		5255324						
ANR	5255400	Symbol	op		5255324						
ANR	5255401	Function	__table_column_free	398:0:9290:9391							
ANR	5255402	FunctionDef	__table_column_free (void * _col)		5255401	0					
ANR	5255403	CompoundStatement		398:44:9334:9391	5255401	0					
ANR	5255404	IdentifierDeclStatement	RTableColumn * col = ( RTableColumn * ) _col ;	399:1:9337:9376	5255401	0	True				
ANR	5255405	IdentifierDecl	* col = ( RTableColumn * ) _col		5255401	0					
ANR	5255406	IdentifierDeclType	RTableColumn *		5255401	0					
ANR	5255407	Identifier	col		5255401	1					
ANR	5255408	AssignmentExpression	* col = ( RTableColumn * ) _col		5255401	2		=			
ANR	5255409	Identifier	col		5255401	0					
ANR	5255410	CastExpression	( RTableColumn * ) _col		5255401	1					
ANR	5255411	CastTarget	RTableColumn *		5255401	0					
ANR	5255412	Identifier	_col		5255401	1					
ANR	5255413	ExpressionStatement	free ( col )	400:1:9379:9389	5255401	1	True				
ANR	5255414	CallExpression	free ( col )		5255401	0					
ANR	5255415	Callee	free		5255401	0					
ANR	5255416	Identifier	free		5255401	0					
ANR	5255417	ArgumentList	col		5255401	1					
ANR	5255418	Argument	col		5255401	0					
ANR	5255419	Identifier	col		5255401	0					
ANR	5255420	ReturnType	static void		5255401	1					
ANR	5255421	Identifier	__table_column_free		5255401	2					
ANR	5255422	ParameterList	void * _col		5255401	3					
ANR	5255423	Parameter	void * _col	398:32:9322:9331	5255401	0	True				
ANR	5255424	ParameterType	void *		5255401	0					
ANR	5255425	Identifier	_col		5255401	1					
ANR	5255426	CFGEntryNode	ENTRY		5255401		True				
ANR	5255427	CFGExitNode	EXIT		5255401		True				
ANR	5255428	Symbol	col		5255401						
ANR	5255429	Symbol	_col		5255401						
ANR	5255430	Function	r_table_columns	403:0:9394:10067							
ANR	5255431	FunctionDef	"r_table_columns (RTable * t , RList * colNames)"		5255430	0					
ANR	5255432	CompoundStatement		403:55:9449:10067	5255430	0					
ANR	5255433	IdentifierDeclStatement	"RListIter * iter , * iterCol ;"	404:1:9452:9478	5255430	0	True				
ANR	5255434	IdentifierDecl	* iter		5255430	0					
ANR	5255435	IdentifierDeclType	RListIter *		5255430	0					
ANR	5255436	Identifier	iter		5255430	1					
ANR	5255437	IdentifierDecl	* iterCol		5255430	1					
ANR	5255438	IdentifierDeclType	RListIter *		5255430	0					
ANR	5255439	Identifier	iterCol		5255430	1					
ANR	5255440	IdentifierDeclStatement	char * colName ;	405:1:9481:9495	5255430	1	True				
ANR	5255441	IdentifierDecl	* colName		5255430	0					
ANR	5255442	IdentifierDeclType	char *		5255430	0					
ANR	5255443	Identifier	colName		5255430	1					
ANR	5255444	IdentifierDeclStatement	RTableRow * row ;	406:1:9498:9512	5255430	2	True				
ANR	5255445	IdentifierDecl	* row		5255430	0					
ANR	5255446	IdentifierDeclType	RTableRow *		5255430	0					
ANR	5255447	Identifier	row		5255430	1					
ANR	5255448	Statement	r_list_foreach	407:1:9515:9528	5255430	3	True				
ANR	5255449	Statement	(	407:16:9530:9530	5255430	4	True				
ANR	5255450	Statement	t	407:17:9531:9531	5255430	5	True				
ANR	5255451	Statement	->	407:18:9532:9533	5255430	6	True				
ANR	5255452	Statement	rows	407:20:9534:9537	5255430	7	True				
ANR	5255453	Statement	","	407:24:9538:9538	5255430	8	True				
ANR	5255454	Statement	iter	407:26:9540:9543	5255430	9	True				
ANR	5255455	Statement	","	407:30:9544:9544	5255430	10	True				
ANR	5255456	Statement	row	407:32:9546:9548	5255430	11	True				
ANR	5255457	Statement	)	407:35:9549:9549	5255430	12	True				
ANR	5255458	CompoundStatement		6:2:105:150	5255430	13					
ANR	5255459	IdentifierDeclStatement	RList * items = r_list_newf ( r_table_row_free ) ;	408:2:9555:9600	5255430	0	True				
ANR	5255460	IdentifierDecl	* items = r_list_newf ( r_table_row_free )		5255430	0					
ANR	5255461	IdentifierDeclType	RList *		5255430	0					
ANR	5255462	Identifier	items		5255430	1					
ANR	5255463	AssignmentExpression	* items = r_list_newf ( r_table_row_free )		5255430	2		=			
ANR	5255464	Identifier	items		5255430	0					
ANR	5255465	CallExpression	r_list_newf ( r_table_row_free )		5255430	1					
ANR	5255466	Callee	r_list_newf		5255430	0					
ANR	5255467	Identifier	r_list_newf		5255430	0					
ANR	5255468	ArgumentList	r_table_row_free		5255430	1					
ANR	5255469	Argument	r_table_row_free		5255430	0					
ANR	5255470	Identifier	r_table_row_free		5255430	0					
ANR	5255471	Statement	r_list_foreach	409:2:9604:9617	5255430	1	True				
ANR	5255472	Statement	(	409:17:9619:9619	5255430	2	True				
ANR	5255473	Statement	colNames	409:18:9620:9627	5255430	3	True				
ANR	5255474	Statement	","	409:26:9628:9628	5255430	4	True				
ANR	5255475	Statement	iterCol	409:28:9630:9636	5255430	5	True				
ANR	5255476	Statement	","	409:35:9637:9637	5255430	6	True				
ANR	5255477	Statement	colName	409:37:9639:9645	5255430	7	True				
ANR	5255478	Statement	)	409:44:9646:9646	5255430	8	True				
ANR	5255479	CompoundStatement		9:3:248:295	5255430	9					
ANR	5255480	IdentifierDeclStatement	"int fc = r_table_column_nth ( t , colName ) ;"	410:3:9653:9693	5255430	0	True				
ANR	5255481	IdentifierDecl	"fc = r_table_column_nth ( t , colName )"		5255430	0					
ANR	5255482	IdentifierDeclType	int		5255430	0					
ANR	5255483	Identifier	fc		5255430	1					
ANR	5255484	AssignmentExpression	"fc = r_table_column_nth ( t , colName )"		5255430	2		=			
ANR	5255485	Identifier	fc		5255430	0					
ANR	5255486	CallExpression	"r_table_column_nth ( t , colName )"		5255430	1					
ANR	5255487	Callee	r_table_column_nth		5255430	0					
ANR	5255488	Identifier	r_table_column_nth		5255430	0					
ANR	5255489	ArgumentList	t		5255430	1					
ANR	5255490	Argument	t		5255430	0					
ANR	5255491	Identifier	t		5255430	0					
ANR	5255492	Argument	colName		5255430	1					
ANR	5255493	Identifier	colName		5255430	0					
ANR	5255494	IdentifierDeclStatement	"RTableRow * item = r_list_get_n ( row -> items , fc ) ;"	411:3:9698:9745	5255430	1	True				
ANR	5255495	IdentifierDecl	"* item = r_list_get_n ( row -> items , fc )"		5255430	0					
ANR	5255496	IdentifierDeclType	RTableRow *		5255430	0					
ANR	5255497	Identifier	item		5255430	1					
ANR	5255498	AssignmentExpression	"* item = r_list_get_n ( row -> items , fc )"		5255430	2		=			
ANR	5255499	Identifier	item		5255430	0					
ANR	5255500	CallExpression	"r_list_get_n ( row -> items , fc )"		5255430	1					
ANR	5255501	Callee	r_list_get_n		5255430	0					
ANR	5255502	Identifier	r_list_get_n		5255430	0					
ANR	5255503	ArgumentList	row -> items		5255430	1					
ANR	5255504	Argument	row -> items		5255430	0					
ANR	5255505	PtrMemberAccess	row -> items		5255430	0					
ANR	5255506	Identifier	row		5255430	0					
ANR	5255507	Identifier	items		5255430	1					
ANR	5255508	Argument	fc		5255430	1					
ANR	5255509	Identifier	fc		5255430	0					
ANR	5255510	ExpressionStatement	"r_list_append ( items , item )"	412:3:9750:9777	5255430	2	True				
ANR	5255511	CallExpression	"r_list_append ( items , item )"		5255430	0					
ANR	5255512	Callee	r_list_append		5255430	0					
ANR	5255513	Identifier	r_list_append		5255430	0					
ANR	5255514	ArgumentList	items		5255430	1					
ANR	5255515	Argument	items		5255430	0					
ANR	5255516	Identifier	items		5255430	0					
ANR	5255517	Argument	item		5255430	1					
ANR	5255518	Identifier	item		5255430	0					
ANR	5255519	ExpressionStatement	row -> items = items	414:2:9785:9803	5255430	10	True				
ANR	5255520	AssignmentExpression	row -> items = items		5255430	0		=			
ANR	5255521	PtrMemberAccess	row -> items		5255430	0					
ANR	5255522	Identifier	row		5255430	0					
ANR	5255523	Identifier	items		5255430	1					
ANR	5255524	Identifier	items		5255430	1					
ANR	5255525	IdentifierDeclStatement	RList * cols = r_list_newf ( r_table_column_free ) ;	416:1:9809:9856	5255430	14	True				
ANR	5255526	IdentifierDecl	* cols = r_list_newf ( r_table_column_free )		5255430	0					
ANR	5255527	IdentifierDeclType	RList *		5255430	0					
ANR	5255528	Identifier	cols		5255430	1					
ANR	5255529	AssignmentExpression	* cols = r_list_newf ( r_table_column_free )		5255430	2		=			
ANR	5255530	Identifier	cols		5255430	0					
ANR	5255531	CallExpression	r_list_newf ( r_table_column_free )		5255430	1					
ANR	5255532	Callee	r_list_newf		5255430	0					
ANR	5255533	Identifier	r_list_newf		5255430	0					
ANR	5255534	ArgumentList	r_table_column_free		5255430	1					
ANR	5255535	Argument	r_table_column_free		5255430	0					
ANR	5255536	Identifier	r_table_column_free		5255430	0					
ANR	5255537	Statement	r_list_foreach	417:1:9859:9872	5255430	15	True				
ANR	5255538	Statement	(	417:16:9874:9874	5255430	16	True				
ANR	5255539	Statement	colNames	417:17:9875:9882	5255430	17	True				
ANR	5255540	Statement	","	417:25:9883:9883	5255430	18	True				
ANR	5255541	Statement	iterCol	417:27:9885:9891	5255430	19	True				
ANR	5255542	Statement	","	417:34:9892:9892	5255430	20	True				
ANR	5255543	Statement	colName	417:36:9894:9900	5255430	21	True				
ANR	5255544	Statement	)	417:43:9901:9901	5255430	22	True				
ANR	5255545	CompoundStatement		16:2:457:497	5255430	23					
ANR	5255546	IdentifierDeclStatement	"int fc = r_table_column_nth ( t , colName ) ;"	418:2:9907:9947	5255430	0	True				
ANR	5255547	IdentifierDecl	"fc = r_table_column_nth ( t , colName )"		5255430	0					
ANR	5255548	IdentifierDeclType	int		5255430	0					
ANR	5255549	Identifier	fc		5255430	1					
ANR	5255550	AssignmentExpression	"fc = r_table_column_nth ( t , colName )"		5255430	2		=			
ANR	5255551	Identifier	fc		5255430	0					
ANR	5255552	CallExpression	"r_table_column_nth ( t , colName )"		5255430	1					
ANR	5255553	Callee	r_table_column_nth		5255430	0					
ANR	5255554	Identifier	r_table_column_nth		5255430	0					
ANR	5255555	ArgumentList	t		5255430	1					
ANR	5255556	Argument	t		5255430	0					
ANR	5255557	Identifier	t		5255430	0					
ANR	5255558	Argument	colName		5255430	1					
ANR	5255559	Identifier	colName		5255430	0					
ANR	5255560	IfStatement	if ( fc >= 0 )		5255430	1					
ANR	5255561	Condition	fc >= 0	419:6:9955:9961	5255430	0	True				
ANR	5255562	RelationalExpression	fc >= 0		5255430	0		>=			
ANR	5255563	Identifier	fc		5255430	0					
ANR	5255564	PrimaryExpression	0		5255430	1					
ANR	5255565	CompoundStatement		18:3:519:563	5255430	1					
ANR	5255566	IdentifierDeclStatement	"RTableColumn * c = r_list_get_n ( t -> cols , fc ) ;"	420:3:9969:10013	5255430	0	True				
ANR	5255567	IdentifierDecl	"* c = r_list_get_n ( t -> cols , fc )"		5255430	0					
ANR	5255568	IdentifierDeclType	RTableColumn *		5255430	0					
ANR	5255569	Identifier	c		5255430	1					
ANR	5255570	AssignmentExpression	"* c = r_list_get_n ( t -> cols , fc )"		5255430	2		=			
ANR	5255571	Identifier	c		5255430	0					
ANR	5255572	CallExpression	"r_list_get_n ( t -> cols , fc )"		5255430	1					
ANR	5255573	Callee	r_list_get_n		5255430	0					
ANR	5255574	Identifier	r_list_get_n		5255430	0					
ANR	5255575	ArgumentList	t -> cols		5255430	1					
ANR	5255576	Argument	t -> cols		5255430	0					
ANR	5255577	PtrMemberAccess	t -> cols		5255430	0					
ANR	5255578	Identifier	t		5255430	0					
ANR	5255579	Identifier	cols		5255430	1					
ANR	5255580	Argument	fc		5255430	1					
ANR	5255581	Identifier	fc		5255430	0					
ANR	5255582	ExpressionStatement	"r_list_append ( cols , c )"	421:3:10018:10041	5255430	1	True				
ANR	5255583	CallExpression	"r_list_append ( cols , c )"		5255430	0					
ANR	5255584	Callee	r_list_append		5255430	0					
ANR	5255585	Identifier	r_list_append		5255430	0					
ANR	5255586	ArgumentList	cols		5255430	1					
ANR	5255587	Argument	cols		5255430	0					
ANR	5255588	Identifier	cols		5255430	0					
ANR	5255589	Argument	c		5255430	1					
ANR	5255590	Identifier	c		5255430	0					
ANR	5255591	ExpressionStatement	t -> cols = cols	424:1:10051:10065	5255430	24	True				
ANR	5255592	AssignmentExpression	t -> cols = cols		5255430	0		=			
ANR	5255593	PtrMemberAccess	t -> cols		5255430	0					
ANR	5255594	Identifier	t		5255430	0					
ANR	5255595	Identifier	cols		5255430	1					
ANR	5255596	Identifier	cols		5255430	1					
ANR	5255597	ReturnType	R_API void		5255430	1					
ANR	5255598	Identifier	r_table_columns		5255430	2					
ANR	5255599	ParameterList	"RTable * t , RList * colNames"		5255430	3					
ANR	5255600	Parameter	RTable * t	403:27:9421:9429	5255430	0	True				
ANR	5255601	ParameterType	RTable *		5255430	0					
ANR	5255602	Identifier	t		5255430	1					
ANR	5255603	Parameter	RList * colNames	403:38:9432:9446	5255430	1	True				
ANR	5255604	ParameterType	RList *		5255430	0					
ANR	5255605	Identifier	colNames		5255430	1					
ANR	5255606	CFGEntryNode	ENTRY		5255430		True				
ANR	5255607	CFGExitNode	EXIT		5255430		True				
ANR	5255608	Symbol	colName		5255430						
ANR	5255609	Symbol	item		5255430						
ANR	5255610	Symbol	c		5255430						
ANR	5255611	Symbol	colNames		5255430						
ANR	5255612	Symbol	* row		5255430						
ANR	5255613	Symbol	r_list_newf		5255430						
ANR	5255614	Symbol	t -> cols		5255430						
ANR	5255615	Symbol	iter		5255430						
ANR	5255616	Symbol	r_list_get_n		5255430						
ANR	5255617	Symbol	iterCol		5255430						
ANR	5255618	Symbol	row -> items		5255430						
ANR	5255619	Symbol	r_table_column_free		5255430						
ANR	5255620	Symbol	r_table_column_nth		5255430						
ANR	5255621	Symbol	t		5255430						
ANR	5255622	Symbol	r_table_row_free		5255430						
ANR	5255623	Symbol	row		5255430						
ANR	5255624	Symbol	items		5255430						
ANR	5255625	Symbol	fc		5255430						
ANR	5255626	Symbol	cols		5255430						
ANR	5255627	Symbol	* t		5255430						
ANR	5255628	Function	r_table_filter_columns	427:0:10070:10498							
ANR	5255629	FunctionDef	"r_table_filter_columns (RTable * t , RList * list)"		5255628	0					
ANR	5255630	CompoundStatement		427:58:10128:10498	5255628	0					
ANR	5255631	IdentifierDeclStatement	const char * col ;	428:1:10131:10146	5255628	0	True				
ANR	5255632	IdentifierDecl	* col		5255628	0					
ANR	5255633	IdentifierDeclType	const char *		5255628	0					
ANR	5255634	Identifier	col		5255628	1					
ANR	5255635	IdentifierDeclStatement	RListIter * iter ;	429:1:10149:10164	5255628	1	True				
ANR	5255636	IdentifierDecl	* iter		5255628	0					
ANR	5255637	IdentifierDeclType	RListIter *		5255628	0					
ANR	5255638	Identifier	iter		5255628	1					
ANR	5255639	IdentifierDeclStatement	RList * cols = t -> cols ;	430:1:10167:10188	5255628	2	True				
ANR	5255640	IdentifierDecl	* cols = t -> cols		5255628	0					
ANR	5255641	IdentifierDeclType	RList *		5255628	0					
ANR	5255642	Identifier	cols		5255628	1					
ANR	5255643	AssignmentExpression	* cols = t -> cols		5255628	2		=			
ANR	5255644	Identifier	cols		5255628	0					
ANR	5255645	PtrMemberAccess	t -> cols		5255628	1					
ANR	5255646	Identifier	t		5255628	0					
ANR	5255647	Identifier	cols		5255628	1					
ANR	5255648	ExpressionStatement	t -> cols = r_list_newf ( __table_column_free )	431:1:10191:10234	5255628	3	True				
ANR	5255649	AssignmentExpression	t -> cols = r_list_newf ( __table_column_free )		5255628	0		=			
ANR	5255650	PtrMemberAccess	t -> cols		5255628	0					
ANR	5255651	Identifier	t		5255628	0					
ANR	5255652	Identifier	cols		5255628	1					
ANR	5255653	CallExpression	r_list_newf ( __table_column_free )		5255628	1					
ANR	5255654	Callee	r_list_newf		5255628	0					
ANR	5255655	Identifier	r_list_newf		5255628	0					
ANR	5255656	ArgumentList	__table_column_free		5255628	1					
ANR	5255657	Argument	__table_column_free		5255628	0					
ANR	5255658	Identifier	__table_column_free		5255628	0					
ANR	5255659	Statement	r_list_foreach	432:1:10237:10250	5255628	4	True				
ANR	5255660	Statement	(	432:16:10252:10252	5255628	5	True				
ANR	5255661	Statement	list	432:17:10253:10256	5255628	6	True				
ANR	5255662	Statement	","	432:21:10257:10257	5255628	7	True				
ANR	5255663	Statement	iter	432:23:10259:10262	5255628	8	True				
ANR	5255664	Statement	","	432:27:10263:10263	5255628	9	True				
ANR	5255665	Statement	col	432:29:10265:10267	5255628	10	True				
ANR	5255666	Statement	)	432:32:10268:10268	5255628	11	True				
ANR	5255667	CompoundStatement		7:2:145:183	5255628	12					
ANR	5255668	IdentifierDeclStatement	"int ncol = r_table_column_nth ( t , col ) ;"	433:2:10274:10312	5255628	0	True				
ANR	5255669	IdentifierDecl	"ncol = r_table_column_nth ( t , col )"		5255628	0					
ANR	5255670	IdentifierDeclType	int		5255628	0					
ANR	5255671	Identifier	ncol		5255628	1					
ANR	5255672	AssignmentExpression	"ncol = r_table_column_nth ( t , col )"		5255628	2		=			
ANR	5255673	Identifier	ncol		5255628	0					
ANR	5255674	CallExpression	"r_table_column_nth ( t , col )"		5255628	1					
ANR	5255675	Callee	r_table_column_nth		5255628	0					
ANR	5255676	Identifier	r_table_column_nth		5255628	0					
ANR	5255677	ArgumentList	t		5255628	1					
ANR	5255678	Argument	t		5255628	0					
ANR	5255679	Identifier	t		5255628	0					
ANR	5255680	Argument	col		5255628	1					
ANR	5255681	Identifier	col		5255628	0					
ANR	5255682	IfStatement	if ( ncol != - 1 )		5255628	1					
ANR	5255683	Condition	ncol != - 1	434:6:10320:10329	5255628	0	True				
ANR	5255684	EqualityExpression	ncol != - 1		5255628	0		!=			
ANR	5255685	Identifier	ncol		5255628	0					
ANR	5255686	UnaryOperationExpression	- 1		5255628	1					
ANR	5255687	UnaryOperator	-		5255628	0					
ANR	5255688	PrimaryExpression	1		5255628	1					
ANR	5255689	CompoundStatement		9:3:208:251	5255628	1					
ANR	5255690	IdentifierDeclStatement	"RTableColumn * c = r_list_get_n ( cols , ncol ) ;"	435:3:10337:10380	5255628	0	True				
ANR	5255691	IdentifierDecl	"* c = r_list_get_n ( cols , ncol )"		5255628	0					
ANR	5255692	IdentifierDeclType	RTableColumn *		5255628	0					
ANR	5255693	Identifier	c		5255628	1					
ANR	5255694	AssignmentExpression	"* c = r_list_get_n ( cols , ncol )"		5255628	2		=			
ANR	5255695	Identifier	c		5255628	0					
ANR	5255696	CallExpression	"r_list_get_n ( cols , ncol )"		5255628	1					
ANR	5255697	Callee	r_list_get_n		5255628	0					
ANR	5255698	Identifier	r_list_get_n		5255628	0					
ANR	5255699	ArgumentList	cols		5255628	1					
ANR	5255700	Argument	cols		5255628	0					
ANR	5255701	Identifier	cols		5255628	0					
ANR	5255702	Argument	ncol		5255628	1					
ANR	5255703	Identifier	ncol		5255628	0					
ANR	5255704	IfStatement	if ( c )		5255628	1					
ANR	5255705	Condition	c	436:7:10389:10389	5255628	0	True				
ANR	5255706	Identifier	c		5255628	0					
ANR	5255707	CompoundStatement		10:10:263:263	5255628	1					
ANR	5255708	ExpressionStatement	"r_table_add_column ( t , c -> type , col , 0 )"	438:4:10445:10484	5255628	0	True				
ANR	5255709	CallExpression	"r_table_add_column ( t , c -> type , col , 0 )"		5255628	0					
ANR	5255710	Callee	r_table_add_column		5255628	0					
ANR	5255711	Identifier	r_table_add_column		5255628	0					
ANR	5255712	ArgumentList	t		5255628	1					
ANR	5255713	Argument	t		5255628	0					
ANR	5255714	Identifier	t		5255628	0					
ANR	5255715	Argument	c -> type		5255628	1					
ANR	5255716	PtrMemberAccess	c -> type		5255628	0					
ANR	5255717	Identifier	c		5255628	0					
ANR	5255718	Identifier	type		5255628	1					
ANR	5255719	Argument	col		5255628	2					
ANR	5255720	Identifier	col		5255628	0					
ANR	5255721	Argument	0		5255628	3					
ANR	5255722	PrimaryExpression	0		5255628	0					
ANR	5255723	ReturnType	R_API void		5255628	1					
ANR	5255724	Identifier	r_table_filter_columns		5255628	2					
ANR	5255725	ParameterList	"RTable * t , RList * list"		5255628	3					
ANR	5255726	Parameter	RTable * t	427:34:10104:10112	5255628	0	True				
ANR	5255727	ParameterType	RTable *		5255628	0					
ANR	5255728	Identifier	t		5255628	1					
ANR	5255729	Parameter	RList * list	427:45:10115:10125	5255628	1	True				
ANR	5255730	ParameterType	RList *		5255628	0					
ANR	5255731	Identifier	list		5255628	1					
ANR	5255732	CFGEntryNode	ENTRY		5255628		True				
ANR	5255733	CFGExitNode	EXIT		5255628		True				
ANR	5255734	Symbol	col		5255628						
ANR	5255735	Symbol	ncol		5255628						
ANR	5255736	Symbol	c		5255628						
ANR	5255737	Symbol	r_list_newf		5255628						
ANR	5255738	Symbol	__table_column_free		5255628						
ANR	5255739	Symbol	t -> cols		5255628						
ANR	5255740	Symbol	iter		5255628						
ANR	5255741	Symbol	r_list_get_n		5255628						
ANR	5255742	Symbol	list		5255628						
ANR	5255743	Symbol	* c		5255628						
ANR	5255744	Symbol	r_table_column_nth		5255628						
ANR	5255745	Symbol	t		5255628						
ANR	5255746	Symbol	c -> type		5255628						
ANR	5255747	Symbol	cols		5255628						
ANR	5255748	Symbol	* t		5255628						
ANR	5255749	Function	r_table_query	444:0:10501:12121							
ANR	5255750	FunctionDef	"r_table_query (RTable * t , const char * q)"		5255749	0					
ANR	5255751	CompoundStatement		444:51:10552:12121	5255749	0					
ANR	5255752	IdentifierDeclStatement	RListIter * iter ;	448:1:10705:10720	5255749	0	True				
ANR	5255753	IdentifierDecl	* iter		5255749	0					
ANR	5255754	IdentifierDeclType	RListIter *		5255749	0					
ANR	5255755	Identifier	iter		5255749	1					
ANR	5255756	IdentifierDeclStatement	char * qq = strdup ( q ) ;	449:1:10723:10744	5255749	1	True				
ANR	5255757	IdentifierDecl	* qq = strdup ( q )		5255749	0					
ANR	5255758	IdentifierDeclType	char *		5255749	0					
ANR	5255759	Identifier	qq		5255749	1					
ANR	5255760	AssignmentExpression	* qq = strdup ( q )		5255749	2		=			
ANR	5255761	Identifier	qq		5255749	0					
ANR	5255762	CallExpression	strdup ( q )		5255749	1					
ANR	5255763	Callee	strdup		5255749	0					
ANR	5255764	Identifier	strdup		5255749	0					
ANR	5255765	ArgumentList	q		5255749	1					
ANR	5255766	Argument	q		5255749	0					
ANR	5255767	Identifier	q		5255749	0					
ANR	5255768	IdentifierDeclStatement	"RList * queries = r_str_split_list ( qq , "","" , 0 ) ;"	450:1:10747:10794	5255749	2	True				
ANR	5255769	IdentifierDecl	"* queries = r_str_split_list ( qq , "","" , 0 )"		5255749	0					
ANR	5255770	IdentifierDeclType	RList *		5255749	0					
ANR	5255771	Identifier	queries		5255749	1					
ANR	5255772	AssignmentExpression	"* queries = r_str_split_list ( qq , "","" , 0 )"		5255749	2		=			
ANR	5255773	Identifier	queries		5255749	0					
ANR	5255774	CallExpression	"r_str_split_list ( qq , "","" , 0 )"		5255749	1					
ANR	5255775	Callee	r_str_split_list		5255749	0					
ANR	5255776	Identifier	r_str_split_list		5255749	0					
ANR	5255777	ArgumentList	qq		5255749	1					
ANR	5255778	Argument	qq		5255749	0					
ANR	5255779	Identifier	qq		5255749	0					
ANR	5255780	Argument	""","""		5255749	1					
ANR	5255781	PrimaryExpression	""","""		5255749	0					
ANR	5255782	Argument	0		5255749	2					
ANR	5255783	PrimaryExpression	0		5255749	0					
ANR	5255784	IdentifierDeclStatement	char * query ;	451:1:10797:10808	5255749	3	True				
ANR	5255785	IdentifierDecl	* query		5255749	0					
ANR	5255786	IdentifierDeclType	char *		5255749	0					
ANR	5255787	Identifier	query		5255749	1					
ANR	5255788	Statement	r_list_foreach	452:1:10811:10824	5255749	4	True				
ANR	5255789	Statement	(	452:16:10826:10826	5255749	5	True				
ANR	5255790	Statement	queries	452:17:10827:10833	5255749	6	True				
ANR	5255791	Statement	","	452:24:10834:10834	5255749	7	True				
ANR	5255792	Statement	iter	452:26:10836:10839	5255749	8	True				
ANR	5255793	Statement	","	452:30:10840:10840	5255749	9	True				
ANR	5255794	Statement	query	452:32:10842:10846	5255749	10	True				
ANR	5255795	Statement	)	452:37:10847:10847	5255749	11	True				
ANR	5255796	CompoundStatement		14:2:487:531	5255749	12					
ANR	5255797	IdentifierDeclStatement	"RList * q = r_str_split_list ( query , ""/"" , 2 ) ;"	453:2:10853:10896	5255749	0	True				
ANR	5255798	IdentifierDecl	"* q = r_str_split_list ( query , ""/"" , 2 )"		5255749	0					
ANR	5255799	IdentifierDeclType	RList *		5255749	0					
ANR	5255800	Identifier	q		5255749	1					
ANR	5255801	AssignmentExpression	"* q = r_str_split_list ( query , ""/"" , 2 )"		5255749	2		=			
ANR	5255802	Identifier	q		5255749	0					
ANR	5255803	CallExpression	"r_str_split_list ( query , ""/"" , 2 )"		5255749	1					
ANR	5255804	Callee	r_str_split_list		5255749	0					
ANR	5255805	Identifier	r_str_split_list		5255749	0					
ANR	5255806	ArgumentList	query		5255749	1					
ANR	5255807	Argument	query		5255749	0					
ANR	5255808	Identifier	query		5255749	0					
ANR	5255809	Argument	"""/"""		5255749	1					
ANR	5255810	PrimaryExpression	"""/"""		5255749	0					
ANR	5255811	Argument	2		5255749	2					
ANR	5255812	PrimaryExpression	2		5255749	0					
ANR	5255813	IdentifierDeclStatement	"const char * columnName = r_list_get_n ( q , 0 ) ;"	454:2:10900:10944	5255749	1	True				
ANR	5255814	IdentifierDecl	"* columnName = r_list_get_n ( q , 0 )"		5255749	0					
ANR	5255815	IdentifierDeclType	const char *		5255749	0					
ANR	5255816	Identifier	columnName		5255749	1					
ANR	5255817	AssignmentExpression	"* columnName = r_list_get_n ( q , 0 )"		5255749	2		=			
ANR	5255818	Identifier	columnName		5255749	0					
ANR	5255819	CallExpression	"r_list_get_n ( q , 0 )"		5255749	1					
ANR	5255820	Callee	r_list_get_n		5255749	0					
ANR	5255821	Identifier	r_list_get_n		5255749	0					
ANR	5255822	ArgumentList	q		5255749	1					
ANR	5255823	Argument	q		5255749	0					
ANR	5255824	Identifier	q		5255749	0					
ANR	5255825	Argument	0		5255749	1					
ANR	5255826	PrimaryExpression	0		5255749	0					
ANR	5255827	IdentifierDeclStatement	"const char * operation = r_list_get_n ( q , 1 ) ;"	455:2:10948:10991	5255749	2	True				
ANR	5255828	IdentifierDecl	"* operation = r_list_get_n ( q , 1 )"		5255749	0					
ANR	5255829	IdentifierDeclType	const char *		5255749	0					
ANR	5255830	Identifier	operation		5255749	1					
ANR	5255831	AssignmentExpression	"* operation = r_list_get_n ( q , 1 )"		5255749	2		=			
ANR	5255832	Identifier	operation		5255749	0					
ANR	5255833	CallExpression	"r_list_get_n ( q , 1 )"		5255749	1					
ANR	5255834	Callee	r_list_get_n		5255749	0					
ANR	5255835	Identifier	r_list_get_n		5255749	0					
ANR	5255836	ArgumentList	q		5255749	1					
ANR	5255837	Argument	q		5255749	0					
ANR	5255838	Identifier	q		5255749	0					
ANR	5255839	Argument	1		5255749	1					
ANR	5255840	PrimaryExpression	1		5255749	0					
ANR	5255841	IdentifierDeclStatement	"const char * operand = r_list_get_n ( q , 2 ) ;"	456:2:10995:11036	5255749	3	True				
ANR	5255842	IdentifierDecl	"* operand = r_list_get_n ( q , 2 )"		5255749	0					
ANR	5255843	IdentifierDeclType	const char *		5255749	0					
ANR	5255844	Identifier	operand		5255749	1					
ANR	5255845	AssignmentExpression	"* operand = r_list_get_n ( q , 2 )"		5255749	2		=			
ANR	5255846	Identifier	operand		5255749	0					
ANR	5255847	CallExpression	"r_list_get_n ( q , 2 )"		5255749	1					
ANR	5255848	Callee	r_list_get_n		5255749	0					
ANR	5255849	Identifier	r_list_get_n		5255749	0					
ANR	5255850	ArgumentList	q		5255749	1					
ANR	5255851	Argument	q		5255749	0					
ANR	5255852	Identifier	q		5255749	0					
ANR	5255853	Argument	2		5255749	1					
ANR	5255854	PrimaryExpression	2		5255749	0					
ANR	5255855	IdentifierDeclStatement	"int col = r_table_column_nth ( t , columnName ) ;"	457:2:11040:11084	5255749	4	True				
ANR	5255856	IdentifierDecl	"col = r_table_column_nth ( t , columnName )"		5255749	0					
ANR	5255857	IdentifierDeclType	int		5255749	0					
ANR	5255858	Identifier	col		5255749	1					
ANR	5255859	AssignmentExpression	"col = r_table_column_nth ( t , columnName )"		5255749	2		=			
ANR	5255860	Identifier	col		5255749	0					
ANR	5255861	CallExpression	"r_table_column_nth ( t , columnName )"		5255749	1					
ANR	5255862	Callee	r_table_column_nth		5255749	0					
ANR	5255863	Identifier	r_table_column_nth		5255749	0					
ANR	5255864	ArgumentList	t		5255749	1					
ANR	5255865	Argument	t		5255749	0					
ANR	5255866	Identifier	t		5255749	0					
ANR	5255867	Argument	columnName		5255749	1					
ANR	5255868	Identifier	columnName		5255749	0					
ANR	5255869	IfStatement	if ( col == - 1 )		5255749	5					
ANR	5255870	Condition	col == - 1	458:6:11092:11100	5255749	0	True				
ANR	5255871	EqualityExpression	col == - 1		5255749	0		==			
ANR	5255872	Identifier	col		5255749	0					
ANR	5255873	UnaryOperationExpression	- 1		5255749	1					
ANR	5255874	UnaryOperator	-		5255749	0					
ANR	5255875	PrimaryExpression	1		5255749	1					
ANR	5255876	CompoundStatement		15:17:550:550	5255749	1					
ANR	5255877	IfStatement	if ( * columnName == '[' )		5255749	0					
ANR	5255878	Condition	* columnName == '['	459:7:11112:11129	5255749	0	True				
ANR	5255879	EqualityExpression	* columnName == '['		5255749	0		==			
ANR	5255880	UnaryOperationExpression	* columnName		5255749	0					
ANR	5255881	UnaryOperator	*		5255749	0					
ANR	5255882	Identifier	columnName		5255749	1					
ANR	5255883	PrimaryExpression	'['		5255749	1					
ANR	5255884	CompoundStatement		16:27:579:579	5255749	1					
ANR	5255885	ExpressionStatement	col = atoi ( columnName + 1 )	460:4:11138:11165	5255749	0	True				
ANR	5255886	AssignmentExpression	col = atoi ( columnName + 1 )		5255749	0		=			
ANR	5255887	Identifier	col		5255749	0					
ANR	5255888	CallExpression	atoi ( columnName + 1 )		5255749	1					
ANR	5255889	Callee	atoi		5255749	0					
ANR	5255890	Identifier	atoi		5255749	0					
ANR	5255891	ArgumentList	columnName + 1		5255749	1					
ANR	5255892	Argument	columnName + 1		5255749	0					
ANR	5255893	AdditiveExpression	columnName + 1		5255749	0		+			
ANR	5255894	Identifier	columnName		5255749	0					
ANR	5255895	PrimaryExpression	1		5255749	1					
ANR	5255896	ElseStatement	else		5255749	0					
ANR	5255897	CompoundStatement		18:10:624:624	5255749	0					
ANR	5255898	ExpressionStatement	"eprintf ( ""Invalid column name (%s) for (%s)\\n"" , columnName , query )"	462:4:11183:11249	5255749	0	True				
ANR	5255899	CallExpression	"eprintf ( ""Invalid column name (%s) for (%s)\\n"" , columnName , query )"		5255749	0					
ANR	5255900	Callee	eprintf		5255749	0					
ANR	5255901	Identifier	eprintf		5255749	0					
ANR	5255902	ArgumentList	"""Invalid column name (%s) for (%s)\\n"""		5255749	1					
ANR	5255903	Argument	"""Invalid column name (%s) for (%s)\\n"""		5255749	0					
ANR	5255904	PrimaryExpression	"""Invalid column name (%s) for (%s)\\n"""		5255749	0					
ANR	5255905	Argument	columnName		5255749	1					
ANR	5255906	Identifier	columnName		5255749	0					
ANR	5255907	Argument	query		5255749	2					
ANR	5255908	Identifier	query		5255749	0					
ANR	5255909	IfStatement	if ( ! operation )		5255749	6					
ANR	5255910	Condition	! operation	465:6:11266:11275	5255749	0	True				
ANR	5255911	UnaryOperationExpression	! operation		5255749	0					
ANR	5255912	UnaryOperator	!		5255749	0					
ANR	5255913	Identifier	operation		5255749	1					
ANR	5255914	CompoundStatement		22:18:725:725	5255749	1					
ANR	5255915	BreakStatement	break ;	466:3:11283:11288	5255749	0	True				
ANR	5255916	IfStatement	"if ( ! strcmp ( operation , ""sort"" ) )"		5255749	7					
ANR	5255917	Condition	"! strcmp ( operation , ""sort"" )"	468:6:11300:11326	5255749	0	True				
ANR	5255918	UnaryOperationExpression	"! strcmp ( operation , ""sort"" )"		5255749	0					
ANR	5255919	UnaryOperator	!		5255749	0					
ANR	5255920	CallExpression	"strcmp ( operation , ""sort"" )"		5255749	1					
ANR	5255921	Callee	strcmp		5255749	0					
ANR	5255922	Identifier	strcmp		5255749	0					
ANR	5255923	ArgumentList	operation		5255749	1					
ANR	5255924	Argument	operation		5255749	0					
ANR	5255925	Identifier	operation		5255749	0					
ANR	5255926	Argument	"""sort"""		5255749	1					
ANR	5255927	PrimaryExpression	"""sort"""		5255749	0					
ANR	5255928	CompoundStatement		25:35:776:776	5255749	1					
ANR	5255929	ExpressionStatement	"r_table_sort ( t , col , operand && ! strcmp ( operand , ""dec"" ) )"	469:3:11334:11392	5255749	0	True				
ANR	5255930	CallExpression	"r_table_sort ( t , col , operand && ! strcmp ( operand , ""dec"" ) )"		5255749	0					
ANR	5255931	Callee	r_table_sort		5255749	0					
ANR	5255932	Identifier	r_table_sort		5255749	0					
ANR	5255933	ArgumentList	t		5255749	1					
ANR	5255934	Argument	t		5255749	0					
ANR	5255935	Identifier	t		5255749	0					
ANR	5255936	Argument	col		5255749	1					
ANR	5255937	Identifier	col		5255749	0					
ANR	5255938	Argument	"operand && ! strcmp ( operand , ""dec"" )"		5255749	2					
ANR	5255939	AndExpression	"operand && ! strcmp ( operand , ""dec"" )"		5255749	0		&&			
ANR	5255940	Identifier	operand		5255749	0					
ANR	5255941	UnaryOperationExpression	"! strcmp ( operand , ""dec"" )"		5255749	1					
ANR	5255942	UnaryOperator	!		5255749	0					
ANR	5255943	CallExpression	"strcmp ( operand , ""dec"" )"		5255749	1					
ANR	5255944	Callee	strcmp		5255749	0					
ANR	5255945	Identifier	strcmp		5255749	0					
ANR	5255946	ArgumentList	operand		5255749	1					
ANR	5255947	Argument	operand		5255749	0					
ANR	5255948	Identifier	operand		5255749	0					
ANR	5255949	Argument	"""dec"""		5255749	1					
ANR	5255950	PrimaryExpression	"""dec"""		5255749	0					
ANR	5255951	ElseStatement	else		5255749	0					
ANR	5255952	IfStatement	"if ( ! strcmp ( operation , ""cols"" ) )"		5255749	0					
ANR	5255953	Condition	"! strcmp ( operation , ""cols"" )"	470:13:11407:11433	5255749	0	True				
ANR	5255954	UnaryOperationExpression	"! strcmp ( operation , ""cols"" )"		5255749	0					
ANR	5255955	UnaryOperator	!		5255749	0					
ANR	5255956	CallExpression	"strcmp ( operation , ""cols"" )"		5255749	1					
ANR	5255957	Callee	strcmp		5255749	0					
ANR	5255958	Identifier	strcmp		5255749	0					
ANR	5255959	ArgumentList	operation		5255749	1					
ANR	5255960	Argument	operation		5255749	0					
ANR	5255961	Identifier	operation		5255749	0					
ANR	5255962	Argument	"""cols"""		5255749	1					
ANR	5255963	PrimaryExpression	"""cols"""		5255749	0					
ANR	5255964	CompoundStatement		29:3:920:963	5255749	1					
ANR	5255965	IdentifierDeclStatement	char * op = strdup ( operand ) ;	471:3:11441:11468	5255749	0	True				
ANR	5255966	IdentifierDecl	* op = strdup ( operand )		5255749	0					
ANR	5255967	IdentifierDeclType	char *		5255749	0					
ANR	5255968	Identifier	op		5255749	1					
ANR	5255969	AssignmentExpression	* op = strdup ( operand )		5255749	2		=			
ANR	5255970	Identifier	op		5255749	0					
ANR	5255971	CallExpression	strdup ( operand )		5255749	1					
ANR	5255972	Callee	strdup		5255749	0					
ANR	5255973	Identifier	strdup		5255749	0					
ANR	5255974	ArgumentList	operand		5255749	1					
ANR	5255975	Argument	operand		5255749	0					
ANR	5255976	Identifier	operand		5255749	0					
ANR	5255977	IdentifierDeclStatement	"RList * list = r_str_split_list ( op , ""/"" , 0 ) ;"	472:3:11473:11516	5255749	1	True				
ANR	5255978	IdentifierDecl	"* list = r_str_split_list ( op , ""/"" , 0 )"		5255749	0					
ANR	5255979	IdentifierDeclType	RList *		5255749	0					
ANR	5255980	Identifier	list		5255749	1					
ANR	5255981	AssignmentExpression	"* list = r_str_split_list ( op , ""/"" , 0 )"		5255749	2		=			
ANR	5255982	Identifier	list		5255749	0					
ANR	5255983	CallExpression	"r_str_split_list ( op , ""/"" , 0 )"		5255749	1					
ANR	5255984	Callee	r_str_split_list		5255749	0					
ANR	5255985	Identifier	r_str_split_list		5255749	0					
ANR	5255986	ArgumentList	op		5255749	1					
ANR	5255987	Argument	op		5255749	0					
ANR	5255988	Identifier	op		5255749	0					
ANR	5255989	Argument	"""/"""		5255749	1					
ANR	5255990	PrimaryExpression	"""/"""		5255749	0					
ANR	5255991	Argument	0		5255749	2					
ANR	5255992	PrimaryExpression	0		5255749	0					
ANR	5255993	ExpressionStatement	"r_list_prepend ( list , strdup ( columnName ) )"	473:3:11521:11563	5255749	2	True				
ANR	5255994	CallExpression	"r_list_prepend ( list , strdup ( columnName ) )"		5255749	0					
ANR	5255995	Callee	r_list_prepend		5255749	0					
ANR	5255996	Identifier	r_list_prepend		5255749	0					
ANR	5255997	ArgumentList	list		5255749	1					
ANR	5255998	Argument	list		5255749	0					
ANR	5255999	Identifier	list		5255749	0					
ANR	5256000	Argument	strdup ( columnName )		5255749	1					
ANR	5256001	CallExpression	strdup ( columnName )		5255749	0					
ANR	5256002	Callee	strdup		5255749	0					
ANR	5256003	Identifier	strdup		5255749	0					
ANR	5256004	ArgumentList	columnName		5255749	1					
ANR	5256005	Argument	columnName		5255749	0					
ANR	5256006	Identifier	columnName		5255749	0					
ANR	5256007	ExpressionStatement	"r_table_columns ( t , list )"	474:3:11568:11593	5255749	3	True				
ANR	5256008	CallExpression	"r_table_columns ( t , list )"		5255749	0					
ANR	5256009	Callee	r_table_columns		5255749	0					
ANR	5256010	Identifier	r_table_columns		5255749	0					
ANR	5256011	ArgumentList	t		5255749	1					
ANR	5256012	Argument	t		5255749	0					
ANR	5256013	Identifier	t		5255749	0					
ANR	5256014	Argument	list		5255749	1					
ANR	5256015	Identifier	list		5255749	0					
ANR	5256016	ExpressionStatement	r_list_free ( list )	475:3:11624:11642	5255749	4	True				
ANR	5256017	CallExpression	r_list_free ( list )		5255749	0					
ANR	5256018	Callee	r_list_free		5255749	0					
ANR	5256019	Identifier	r_list_free		5255749	0					
ANR	5256020	ArgumentList	list		5255749	1					
ANR	5256021	Argument	list		5255749	0					
ANR	5256022	Identifier	list		5255749	0					
ANR	5256023	ExpressionStatement	free ( op )	476:3:11647:11656	5255749	5	True				
ANR	5256024	CallExpression	free ( op )		5255749	0					
ANR	5256025	Callee	free		5255749	0					
ANR	5256026	Identifier	free		5255749	0					
ANR	5256027	ArgumentList	op		5255749	1					
ANR	5256028	Argument	op		5255749	0					
ANR	5256029	Identifier	op		5255749	0					
ANR	5256030	ElseStatement	else		5255749	0					
ANR	5256031	IfStatement	"if ( ! strcmp ( operation , ""quiet"" ) )"		5255749	0					
ANR	5256032	Condition	"! strcmp ( operation , ""quiet"" )"	478:13:11712:11739	5255749	0	True				
ANR	5256033	UnaryOperationExpression	"! strcmp ( operation , ""quiet"" )"		5255749	0					
ANR	5256034	UnaryOperator	!		5255749	0					
ANR	5256035	CallExpression	"strcmp ( operation , ""quiet"" )"		5255749	1					
ANR	5256036	Callee	strcmp		5255749	0					
ANR	5256037	Identifier	strcmp		5255749	0					
ANR	5256038	ArgumentList	operation		5255749	1					
ANR	5256039	Argument	operation		5255749	0					
ANR	5256040	Identifier	operation		5255749	0					
ANR	5256041	Argument	"""quiet"""		5255749	1					
ANR	5256042	PrimaryExpression	"""quiet"""		5255749	0					
ANR	5256043	CompoundStatement		35:43:1189:1189	5255749	1					
ANR	5256044	ExpressionStatement	t -> showHeader = false	479:3:11747:11768	5255749	0	True				
ANR	5256045	AssignmentExpression	t -> showHeader = false		5255749	0		=			
ANR	5256046	PtrMemberAccess	t -> showHeader		5255749	0					
ANR	5256047	Identifier	t		5255749	0					
ANR	5256048	Identifier	showHeader		5255749	1					
ANR	5256049	Identifier	false		5255749	1					
ANR	5256050	ElseStatement	else		5255749	0					
ANR	5256051	IfStatement	"if ( ! strcmp ( operation , ""graph"" ) )"		5255749	0					
ANR	5256052	Condition	"! strcmp ( operation , ""graph"" )"	480:13:11783:11810	5255749	0	True				
ANR	5256053	UnaryOperationExpression	"! strcmp ( operation , ""graph"" )"		5255749	0					
ANR	5256054	UnaryOperator	!		5255749	0					
ANR	5256055	CallExpression	"strcmp ( operation , ""graph"" )"		5255749	1					
ANR	5256056	Callee	strcmp		5255749	0					
ANR	5256057	Identifier	strcmp		5255749	0					
ANR	5256058	ArgumentList	operation		5255749	1					
ANR	5256059	Argument	operation		5255749	0					
ANR	5256060	Identifier	operation		5255749	0					
ANR	5256061	Argument	"""graph"""		5255749	1					
ANR	5256062	PrimaryExpression	"""graph"""		5255749	0					
ANR	5256063	CompoundStatement		37:43:1260:1260	5255749	1					
ANR	5256064	ElseStatement	else		5255749	0					
ANR	5256065	CompoundStatement		40:3:1313:1352	5255749	0					
ANR	5256066	IdentifierDeclStatement	int op = __resolveOperation ( operation ) ;	483:3:11866:11905	5255749	0	True				
ANR	5256067	IdentifierDecl	op = __resolveOperation ( operation )		5255749	0					
ANR	5256068	IdentifierDeclType	int		5255749	0					
ANR	5256069	Identifier	op		5255749	1					
ANR	5256070	AssignmentExpression	op = __resolveOperation ( operation )		5255749	2		=			
ANR	5256071	Identifier	op		5255749	0					
ANR	5256072	CallExpression	__resolveOperation ( operation )		5255749	1					
ANR	5256073	Callee	__resolveOperation		5255749	0					
ANR	5256074	Identifier	__resolveOperation		5255749	0					
ANR	5256075	ArgumentList	operation		5255749	1					
ANR	5256076	Argument	operation		5255749	0					
ANR	5256077	Identifier	operation		5255749	0					
ANR	5256078	IfStatement	if ( op == - 1 )		5255749	1					
ANR	5256079	Condition	op == - 1	484:7:11914:11921	5255749	0	True				
ANR	5256080	EqualityExpression	op == - 1		5255749	0		==			
ANR	5256081	Identifier	op		5255749	0					
ANR	5256082	UnaryOperationExpression	- 1		5255749	1					
ANR	5256083	UnaryOperator	-		5255749	0					
ANR	5256084	PrimaryExpression	1		5255749	1					
ANR	5256085	CompoundStatement		41:17:1371:1371	5255749	1					
ANR	5256086	ExpressionStatement	"eprintf ( ""Invalid operation (%s)\\n"" , operation )"	485:4:11930:11977	5255749	0	True				
ANR	5256087	CallExpression	"eprintf ( ""Invalid operation (%s)\\n"" , operation )"		5255749	0					
ANR	5256088	Callee	eprintf		5255749	0					
ANR	5256089	Identifier	eprintf		5255749	0					
ANR	5256090	ArgumentList	"""Invalid operation (%s)\\n"""		5255749	1					
ANR	5256091	Argument	"""Invalid operation (%s)\\n"""		5255749	0					
ANR	5256092	PrimaryExpression	"""Invalid operation (%s)\\n"""		5255749	0					
ANR	5256093	Argument	operation		5255749	1					
ANR	5256094	Identifier	operation		5255749	0					
ANR	5256095	ElseStatement	else		5255749	0					
ANR	5256096	CompoundStatement		43:10:1436:1436	5255749	0					
ANR	5256097	ExpressionStatement	"r_table_filter ( t , col , op , operand )"	487:4:11995:12031	5255749	0	True				
ANR	5256098	CallExpression	"r_table_filter ( t , col , op , operand )"		5255749	0					
ANR	5256099	Callee	r_table_filter		5255749	0					
ANR	5256100	Identifier	r_table_filter		5255749	0					
ANR	5256101	ArgumentList	t		5255749	1					
ANR	5256102	Argument	t		5255749	0					
ANR	5256103	Identifier	t		5255749	0					
ANR	5256104	Argument	col		5255749	1					
ANR	5256105	Identifier	col		5255749	0					
ANR	5256106	Argument	op		5255749	2					
ANR	5256107	Identifier	op		5255749	0					
ANR	5256108	Argument	operand		5255749	3					
ANR	5256109	Identifier	operand		5255749	0					
ANR	5256110	ExpressionStatement	r_list_free ( q )	490:2:12044:12059	5255749	8	True				
ANR	5256111	CallExpression	r_list_free ( q )		5255749	0					
ANR	5256112	Callee	r_list_free		5255749	0					
ANR	5256113	Identifier	r_list_free		5255749	0					
ANR	5256114	ArgumentList	q		5255749	1					
ANR	5256115	Argument	q		5255749	0					
ANR	5256116	Identifier	q		5255749	0					
ANR	5256117	ExpressionStatement	r_list_free ( queries )	492:1:12065:12086	5255749	13	True				
ANR	5256118	CallExpression	r_list_free ( queries )		5255749	0					
ANR	5256119	Callee	r_list_free		5255749	0					
ANR	5256120	Identifier	r_list_free		5255749	0					
ANR	5256121	ArgumentList	queries		5255749	1					
ANR	5256122	Argument	queries		5255749	0					
ANR	5256123	Identifier	queries		5255749	0					
ANR	5256124	ExpressionStatement	free ( qq )	493:1:12089:12098	5255749	14	True				
ANR	5256125	CallExpression	free ( qq )		5255749	0					
ANR	5256126	Callee	free		5255749	0					
ANR	5256127	Identifier	free		5255749	0					
ANR	5256128	ArgumentList	qq		5255749	1					
ANR	5256129	Argument	qq		5255749	0					
ANR	5256130	Identifier	qq		5255749	0					
ANR	5256131	ExpressionStatement	__table_adjust ( t )	494:1:12101:12119	5255749	15	True				
ANR	5256132	CallExpression	__table_adjust ( t )		5255749	0					
ANR	5256133	Callee	__table_adjust		5255749	0					
ANR	5256134	Identifier	__table_adjust		5255749	0					
ANR	5256135	ArgumentList	t		5255749	1					
ANR	5256136	Argument	t		5255749	0					
ANR	5256137	Identifier	t		5255749	0					
ANR	5256138	ReturnType	R_API void		5255749	1					
ANR	5256139	Identifier	r_table_query		5255749	2					
ANR	5256140	ParameterList	"RTable * t , const char * q"		5255749	3					
ANR	5256141	Parameter	RTable * t	444:25:10526:10534	5255749	0	True				
ANR	5256142	ParameterType	RTable *		5255749	0					
ANR	5256143	Identifier	t		5255749	1					
ANR	5256144	Parameter	const char * q	444:36:10537:10549	5255749	1	True				
ANR	5256145	ParameterType	const char *		5255749	0					
ANR	5256146	Identifier	q		5255749	1					
ANR	5256147	CFGEntryNode	ENTRY		5255749		True				
ANR	5256148	CFGExitNode	EXIT		5255749		True				
ANR	5256149	CFGErrorNode	ERROR		5255749		True				
ANR	5256150	Symbol	qq		5255749						
ANR	5256151	Symbol	atoi		5255749						
ANR	5256152	Symbol	strcmp		5255749						
ANR	5256153	Symbol	col		5255749						
ANR	5256154	Symbol	op		5255749						
ANR	5256155	Symbol	query		5255749						
ANR	5256156	Symbol	r_str_split_list		5255749						
ANR	5256157	Symbol	false		5255749						
ANR	5256158	Symbol	iter		5255749						
ANR	5256159	Symbol	r_list_get_n		5255749						
ANR	5256160	Symbol	list		5255749						
ANR	5256161	Symbol	queries		5255749						
ANR	5256162	Symbol	* columnName		5255749						
ANR	5256163	Symbol	q		5255749						
ANR	5256164	Symbol	r_table_column_nth		5255749						
ANR	5256165	Symbol	t		5255749						
ANR	5256166	Symbol	strdup		5255749						
ANR	5256167	Symbol	t -> showHeader		5255749						
ANR	5256168	Symbol	operation		5255749						
ANR	5256169	Symbol	__resolveOperation		5255749						
ANR	5256170	Symbol	operand		5255749						
ANR	5256171	Symbol	* t		5255749						
ANR	5256172	Symbol	columnName		5255749						
ANR	5256173	Function	r_table_clone	499:0:12157:12232							
ANR	5256174	FunctionDef	r_table_clone (RTable * t)		5256173	0					
ANR	5256175	CompoundStatement		499:39:12196:12232	5256173	0					
ANR	5256176	ReturnStatement	return NULL ;	501:1:12219:12230	5256173	0	True				
ANR	5256177	Identifier	NULL		5256173	0					
ANR	5256178	ReturnType	R_API RTable *		5256173	1					
ANR	5256179	Identifier	r_table_clone		5256173	2					
ANR	5256180	ParameterList	RTable * t		5256173	3					
ANR	5256181	Parameter	RTable * t	499:28:12185:12193	5256173	0	True				
ANR	5256182	ParameterType	RTable *		5256173	0					
ANR	5256183	Identifier	t		5256173	1					
ANR	5256184	CFGEntryNode	ENTRY		5256173		True				
ANR	5256185	CFGExitNode	EXIT		5256173		True				
ANR	5256186	Symbol	NULL		5256173						
ANR	5256187	Symbol	t		5256173						
ANR	5256188	Function	r_table_push	504:0:12235:12309							
ANR	5256189	FunctionDef	r_table_push (RTable * t)		5256188	0					
ANR	5256190	CompoundStatement		504:38:12273:12309	5256188	0					
ANR	5256191	ReturnStatement	return NULL ;	506:1:12296:12307	5256188	0	True				
ANR	5256192	Identifier	NULL		5256188	0					
ANR	5256193	ReturnType	R_API RTable *		5256188	1					
ANR	5256194	Identifier	r_table_push		5256188	2					
ANR	5256195	ParameterList	RTable * t		5256188	3					
ANR	5256196	Parameter	RTable * t	504:27:12262:12270	5256188	0	True				
ANR	5256197	ParameterType	RTable *		5256188	0					
ANR	5256198	Identifier	t		5256188	1					
ANR	5256199	CFGEntryNode	ENTRY		5256188		True				
ANR	5256200	CFGExitNode	EXIT		5256188		True				
ANR	5256201	Symbol	NULL		5256188						
ANR	5256202	Symbol	t		5256188						
ANR	5256203	Function	r_table_pop	509:0:12312:12385							
ANR	5256204	FunctionDef	r_table_pop (RTable * t)		5256203	0					
ANR	5256205	CompoundStatement		509:37:12349:12385	5256203	0					
ANR	5256206	ReturnStatement	return NULL ;	511:1:12372:12383	5256203	0	True				
ANR	5256207	Identifier	NULL		5256203	0					
ANR	5256208	ReturnType	R_API RTable *		5256203	1					
ANR	5256209	Identifier	r_table_pop		5256203	2					
ANR	5256210	ParameterList	RTable * t		5256203	3					
ANR	5256211	Parameter	RTable * t	509:26:12338:12346	5256203	0	True				
ANR	5256212	ParameterType	RTable *		5256203	0					
ANR	5256213	Identifier	t		5256203	1					
ANR	5256214	CFGEntryNode	ENTRY		5256203		True				
ANR	5256215	CFGExitNode	EXIT		5256203		True				
ANR	5256216	Symbol	NULL		5256203						
ANR	5256217	Symbol	t		5256203						
ANR	5256218	Function	r_table_fromjson	514:0:12388:12456							
ANR	5256219	FunctionDef	"r_table_fromjson (RTable * t , const char * csv)"		5256218	0					
ANR	5256220	CompoundStatement		514:56:12444:12456	5256218	0					
ANR	5256221	ReturnType	R_API void		5256218	1					
ANR	5256222	Identifier	r_table_fromjson		5256218	2					
ANR	5256223	ParameterList	"RTable * t , const char * csv"		5256218	3					
ANR	5256224	Parameter	RTable * t	514:28:12416:12424	5256218	0	True				
ANR	5256225	ParameterType	RTable *		5256218	0					
ANR	5256226	Identifier	t		5256218	1					
ANR	5256227	Parameter	const char * csv	514:39:12427:12441	5256218	1	True				
ANR	5256228	ParameterType	const char *		5256218	0					
ANR	5256229	Identifier	csv		5256218	1					
ANR	5256230	CFGEntryNode	ENTRY		5256218		True				
ANR	5256231	CFGExitNode	EXIT		5256218		True				
ANR	5256232	Symbol	t		5256218						
ANR	5256233	Symbol	csv		5256218						
ANR	5256234	Function	r_table_fromcsv	518:0:12459:12526							
ANR	5256235	FunctionDef	"r_table_fromcsv (RTable * t , const char * csv)"		5256234	0					
ANR	5256236	CompoundStatement		518:55:12514:12526	5256234	0					
ANR	5256237	ReturnType	R_API void		5256234	1					
ANR	5256238	Identifier	r_table_fromcsv		5256234	2					
ANR	5256239	ParameterList	"RTable * t , const char * csv"		5256234	3					
ANR	5256240	Parameter	RTable * t	518:27:12486:12494	5256234	0	True				
ANR	5256241	ParameterType	RTable *		5256234	0					
ANR	5256242	Identifier	t		5256234	1					
ANR	5256243	Parameter	const char * csv	518:38:12497:12511	5256234	1	True				
ANR	5256244	ParameterType	const char *		5256234	0					
ANR	5256245	Identifier	csv		5256234	1					
ANR	5256246	CFGEntryNode	ENTRY		5256234		True				
ANR	5256247	CFGExitNode	EXIT		5256234		True				
ANR	5256248	Symbol	t		5256234						
ANR	5256249	Symbol	csv		5256234						
ANR	5256250	Function	r_table_tohtml	522:0:12529:12592							
ANR	5256251	FunctionDef	r_table_tohtml (RTable * t)		5256250	0					
ANR	5256252	CompoundStatement		522:38:12567:12592	5256250	0					
ANR	5256253	ReturnStatement	return NULL ;	524:1:12579:12590	5256250	0	True				
ANR	5256254	Identifier	NULL		5256250	0					
ANR	5256255	ReturnType	R_API char *		5256250	1					
ANR	5256256	Identifier	r_table_tohtml		5256250	2					
ANR	5256257	ParameterList	RTable * t		5256250	3					
ANR	5256258	Parameter	RTable * t	522:27:12556:12564	5256250	0	True				
ANR	5256259	ParameterType	RTable *		5256250	0					
ANR	5256260	Identifier	t		5256250	1					
ANR	5256261	CFGEntryNode	ENTRY		5256250		True				
ANR	5256262	CFGExitNode	EXIT		5256250		True				
ANR	5256263	Symbol	NULL		5256250						
ANR	5256264	Symbol	t		5256250						
ANR	5256265	Function	r_table_transpose	527:0:12595:12698							
ANR	5256266	FunctionDef	r_table_transpose (RTable * t)		5256265	0					
ANR	5256267	CompoundStatement		527:40:12635:12698	5256265	0					
ANR	5256268	ReturnType	R_API void		5256265	1					
ANR	5256269	Identifier	r_table_transpose		5256265	2					
ANR	5256270	ParameterList	RTable * t		5256265	3					
ANR	5256271	Parameter	RTable * t	527:29:12624:12632	5256265	0	True				
ANR	5256272	ParameterType	RTable *		5256265	0					
ANR	5256273	Identifier	t		5256265	1					
ANR	5256274	CFGEntryNode	ENTRY		5256265		True				
ANR	5256275	CFGExitNode	EXIT		5256265		True				
ANR	5256276	Symbol	t		5256265						
ANR	5256277	Function	r_table_format	531:0:12701:12861							
ANR	5256278	FunctionDef	"r_table_format (RTable * t , int nth , RTableColumnType * type)"		5256277	0					
ANR	5256279	CompoundStatement		531:70:12771:12861	5256277	0					
ANR	5256280	ReturnType	R_API void		5256277	1					
ANR	5256281	Identifier	r_table_format		5256277	2					
ANR	5256282	ParameterList	"RTable * t , int nth , RTableColumnType * type"		5256277	3					
ANR	5256283	Parameter	RTable * t	531:26:12727:12735	5256277	0	True				
ANR	5256284	ParameterType	RTable *		5256277	0					
ANR	5256285	Identifier	t		5256277	1					
ANR	5256286	Parameter	int nth	531:37:12738:12744	5256277	1	True				
ANR	5256287	ParameterType	int		5256277	0					
ANR	5256288	Identifier	nth		5256277	1					
ANR	5256289	Parameter	RTableColumnType * type	531:46:12747:12768	5256277	2	True				
ANR	5256290	ParameterType	RTableColumnType *		5256277	0					
ANR	5256291	Identifier	type		5256277	1					
ANR	5256292	CFGEntryNode	ENTRY		5256277		True				
ANR	5256293	CFGExitNode	EXIT		5256277		True				
ANR	5256294	Symbol	nth		5256277						
ANR	5256295	Symbol	t		5256277						
ANR	5256296	Symbol	type		5256277						
ANR	5256297	Function	r_table_reduce	537:0:12921:13041							
ANR	5256298	FunctionDef	"r_table_reduce (RTable * t , int nth)"		5256297	0					
ANR	5256299	CompoundStatement		537:46:12967:13041	5256297	0					
ANR	5256300	ReturnStatement	return 0 ;	539:1:13031:13039	5256297	0	True				
ANR	5256301	PrimaryExpression	0		5256297	0					
ANR	5256302	ReturnType	R_API ut64		5256297	1					
ANR	5256303	Identifier	r_table_reduce		5256297	2					
ANR	5256304	ParameterList	"RTable * t , int nth"		5256297	3					
ANR	5256305	Parameter	RTable * t	537:26:12947:12955	5256297	0	True				
ANR	5256306	ParameterType	RTable *		5256297	0					
ANR	5256307	Identifier	t		5256297	1					
ANR	5256308	Parameter	int nth	537:37:12958:12964	5256297	1	True				
ANR	5256309	ParameterType	int		5256297	0					
ANR	5256310	Identifier	nth		5256297	1					
ANR	5256311	CFGEntryNode	ENTRY		5256297		True				
ANR	5256312	CFGExitNode	EXIT		5256297		True				
ANR	5256313	Symbol	nth		5256297						
ANR	5256314	Symbol	t		5256297						
ANR	5256315	Function	r_table_columns	542:0:13044:13318							
ANR	5256316	FunctionDef	"r_table_columns (RTable * t , const char * name)"		5256315	0					
ANR	5256317	CompoundStatement		542:61:13105:13318	5256315	0					
ANR	5256318	IdentifierDeclStatement	va_list ap ;	543:1:13108:13118	5256315	0	True				
ANR	5256319	IdentifierDecl	ap		5256315	0					
ANR	5256320	IdentifierDeclType	va_list		5256315	0					
ANR	5256321	Identifier	ap		5256315	1					
ANR	5256322	ExpressionStatement	"va_start ( ap , fmt )"	544:1:13121:13139	5256315	1	True				
ANR	5256323	CallExpression	"va_start ( ap , fmt )"		5256315	0					
ANR	5256324	Callee	va_start		5256315	0					
ANR	5256325	Identifier	va_start		5256315	0					
ANR	5256326	ArgumentList	ap		5256315	1					
ANR	5256327	Argument	ap		5256315	0					
ANR	5256328	Identifier	ap		5256315	0					
ANR	5256329	Argument	fmt		5256315	1					
ANR	5256330	Identifier	fmt		5256315	0					
ANR	5256331	ExpressionStatement	r_list_free ( t -> cols )	545:1:13142:13163	5256315	2	True				
ANR	5256332	CallExpression	r_list_free ( t -> cols )		5256315	0					
ANR	5256333	Callee	r_list_free		5256315	0					
ANR	5256334	Identifier	r_list_free		5256315	0					
ANR	5256335	ArgumentList	t -> cols		5256315	1					
ANR	5256336	Argument	t -> cols		5256315	0					
ANR	5256337	PtrMemberAccess	t -> cols		5256315	0					
ANR	5256338	Identifier	t		5256315	0					
ANR	5256339	Identifier	cols		5256315	1					
ANR	5256340	ExpressionStatement	t -> cols = r_list_newf ( __table_column_free )	546:1:13166:13209	5256315	3	True				
ANR	5256341	AssignmentExpression	t -> cols = r_list_newf ( __table_column_free )		5256315	0		=			
ANR	5256342	PtrMemberAccess	t -> cols		5256315	0					
ANR	5256343	Identifier	t		5256315	0					
ANR	5256344	Identifier	cols		5256315	1					
ANR	5256345	CallExpression	r_list_newf ( __table_column_free )		5256315	1					
ANR	5256346	Callee	r_list_newf		5256315	0					
ANR	5256347	Identifier	r_list_newf		5256315	0					
ANR	5256348	ArgumentList	__table_column_free		5256315	1					
ANR	5256349	Argument	__table_column_free		5256315	0					
ANR	5256350	Identifier	__table_column_free		5256315	0					
ANR	5256351	ForStatement	for ( ; ; )		5256315	4					
ANR	5256352	CompoundStatement		6:10:115:115	5256315	0					
ANR	5256353	Statement	const	548:2:13225:13229	5256315	0	True				
ANR	5256354	Statement	char	548:8:13231:13234	5256315	1	True				
ANR	5256355	Statement	*	548:13:13236:13236	5256315	2	True				
ANR	5256356	Statement	n	548:14:13237:13237	5256315	3	True				
ANR	5256357	Statement	=	548:16:13239:13239	5256315	4	True				
ANR	5256358	Statement	va_arg	548:18:13241:13246	5256315	5	True				
ANR	5256359	Statement	(	548:25:13248:13248	5256315	6	True				
ANR	5256360	Statement	ap	548:26:13249:13250	5256315	7	True				
ANR	5256361	Statement	","	548:28:13251:13251	5256315	8	True				
ANR	5256362	Statement	const	548:30:13253:13257	5256315	9	True				
ANR	5256363	Statement	char	548:36:13259:13262	5256315	10	True				
ANR	5256364	Statement	*	548:41:13264:13264	5256315	11	True				
ANR	5256365	Statement	)	548:42:13265:13265	5256315	12	True				
ANR	5256366	ExpressionStatement		548:43:13266:13266	5256315	13	True				
ANR	5256367	IfStatement	if ( ! n )		5256315	14					
ANR	5256368	Condition	! n	549:6:13274:13275	5256315	0	True				
ANR	5256369	UnaryOperationExpression	! n		5256315	0					
ANR	5256370	UnaryOperator	!		5256315	0					
ANR	5256371	Identifier	n		5256315	1					
ANR	5256372	CompoundStatement		8:10:172:172	5256315	1					
ANR	5256373	BreakStatement	break ;	550:3:13283:13288	5256315	0	True				
ANR	5256374	ExpressionStatement	va_end ( ap )	553:8:13305:13316	5256315	5	True				
ANR	5256375	CallExpression	va_end ( ap )		5256315	0					
ANR	5256376	Callee	va_end		5256315	0					
ANR	5256377	Identifier	va_end		5256315	0					
ANR	5256378	ArgumentList	ap		5256315	1					
ANR	5256379	Argument	ap		5256315	0					
ANR	5256380	Identifier	ap		5256315	0					
ANR	5256381	ReturnType	R_API void		5256315	1					
ANR	5256382	Identifier	r_table_columns		5256315	2					
ANR	5256383	ParameterList	"RTable * t , const char * name"		5256315	3					
ANR	5256384	Parameter	RTable * t	542:27:13071:13079	5256315	0	True				
ANR	5256385	ParameterType	RTable *		5256315	0					
ANR	5256386	Identifier	t		5256315	1					
ANR	5256387	Parameter	const char * name	542:38:13082:13097	5256315	1	True				
ANR	5256388	ParameterType	const char *		5256315	0					
ANR	5256389	Identifier	name		5256315	1					
ANR	5256390	CFGEntryNode	ENTRY		5256315		True				
ANR	5256391	CFGExitNode	EXIT		5256315		True				
ANR	5256392	InfiniteForNode	true		5256315		True				
ANR	5256393	Symbol	t		5256315						
ANR	5256394	Symbol	__table_column_free		5256315						
ANR	5256395	Symbol	r_list_newf		5256315						
ANR	5256396	Symbol	name		5256315						
ANR	5256397	Symbol	t -> cols		5256315						
ANR	5256398	Symbol	fmt		5256315						
ANR	5256399	Symbol	* t		5256315						
ANR	5256400	Symbol	n		5256315						
ANR	5256401	Symbol	ap		5256315						
