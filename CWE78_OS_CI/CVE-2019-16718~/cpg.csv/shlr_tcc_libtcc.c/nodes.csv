command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6113284	File	data/converged/CVE-2019-16718~_radare2/shlr_tcc_libtcc.c								
ANR	6113285	DeclStmt									
ANR	6113286	Decl							ST_DATA int	ST_DATA int	gnu_ext
ANR	6113287	DeclStmt									
ANR	6113288	Decl							ST_DATA int	ST_DATA int	tcc_ext
ANR	6113289	DeclStmt									
ANR	6113290	Decl							struct TCCState	struct TCCState *	tcc_state
ANR	6113291	Function	normalize_slashes	39:0:1277:1530							
ANR	6113292	FunctionDef	normalize_slashes (char * path)		6113291	0					
ANR	6113293	CompoundStatement		40:0:1320:1530	6113291	0					
ANR	6113294	IdentifierDeclStatement	char * p ;	41:1:1323:1330	6113291	0	True				
ANR	6113295	IdentifierDecl	* p		6113291	0					
ANR	6113296	IdentifierDeclType	char *		6113291	0					
ANR	6113297	Identifier	p		6113291	1					
ANR	6113298	IfStatement	if ( path [ 1 ] == ':' )		6113291	1					
ANR	6113299	Condition	path [ 1 ] == ':'	42:5:1337:1350	6113291	0	True				
ANR	6113300	EqualityExpression	path [ 1 ] == ':'		6113291	0		==			
ANR	6113301	ArrayIndexing	path [ 1 ]		6113291	0					
ANR	6113302	Identifier	path		6113291	0					
ANR	6113303	PrimaryExpression	1		6113291	1					
ANR	6113304	PrimaryExpression	':'		6113291	1					
ANR	6113305	CompoundStatement		3:21:32:32	6113291	1					
ANR	6113306	ForStatement	for ( p = path + 2 ; * p ; ++ p )		6113291	0					
ANR	6113307	ForInit	p = path + 2 ;	43:7:1362:1374	6113291	0	True				
ANR	6113308	AssignmentExpression	p = path + 2		6113291	0		=			
ANR	6113309	Identifier	p		6113291	0					
ANR	6113310	AdditiveExpression	path + 2		6113291	1		+			
ANR	6113311	Identifier	path		6113291	0					
ANR	6113312	PrimaryExpression	2		6113291	1					
ANR	6113313	Condition	* p	43:21:1376:1377	6113291	1	True				
ANR	6113314	UnaryOperationExpression	* p		6113291	0					
ANR	6113315	UnaryOperator	*		6113291	0					
ANR	6113316	Identifier	p		6113291	1					
ANR	6113317	UnaryExpression	++ p	43:25:1380:1382	6113291	2	True				
ANR	6113318	IncDec	++		6113291	0					
ANR	6113319	Identifier	p		6113291	1					
ANR	6113320	CompoundStatement		4:30:64:64	6113291	3					
ANR	6113321	IfStatement	if ( * p == '/' )		6113291	0					
ANR	6113322	Condition	* p == '/'	44:7:1394:1402	6113291	0	True				
ANR	6113323	EqualityExpression	* p == '/'		6113291	0		==			
ANR	6113324	UnaryOperationExpression	* p		6113291	0					
ANR	6113325	UnaryOperator	*		6113291	0					
ANR	6113326	Identifier	p		6113291	1					
ANR	6113327	PrimaryExpression	'/'		6113291	1					
ANR	6113328	CompoundStatement		5:18:84:84	6113291	1					
ANR	6113329	ExpressionStatement	* p = '\\\\'	45:4:1411:1420	6113291	0	True				
ANR	6113330	AssignmentExpression	* p = '\\\\'		6113291	0		=			
ANR	6113331	UnaryOperationExpression	* p		6113291	0					
ANR	6113332	UnaryOperator	*		6113291	0					
ANR	6113333	Identifier	p		6113291	1					
ANR	6113334	PrimaryExpression	'\\\\'		6113291	1					
ANR	6113335	ElseStatement	else		6113291	0					
ANR	6113336	CompoundStatement		9:8:118:118	6113291	0					
ANR	6113337	ForStatement	for ( p = path ; * p ; ++ p )		6113291	0					
ANR	6113338	ForInit	p = path ;	49:7:1448:1456	6113291	0	True				
ANR	6113339	AssignmentExpression	p = path		6113291	0		=			
ANR	6113340	Identifier	p		6113291	0					
ANR	6113341	Identifier	path		6113291	1					
ANR	6113342	Condition	* p	49:17:1458:1459	6113291	1	True				
ANR	6113343	UnaryOperationExpression	* p		6113291	0					
ANR	6113344	UnaryOperator	*		6113291	0					
ANR	6113345	Identifier	p		6113291	1					
ANR	6113346	UnaryExpression	++ p	49:21:1462:1464	6113291	2	True				
ANR	6113347	IncDec	++		6113291	0					
ANR	6113348	Identifier	p		6113291	1					
ANR	6113349	CompoundStatement		10:26:146:146	6113291	3					
ANR	6113350	IfStatement	if ( * p == '\\\\' )		6113291	0					
ANR	6113351	Condition	* p == '\\\\'	50:7:1476:1485	6113291	0	True				
ANR	6113352	EqualityExpression	* p == '\\\\'		6113291	0		==			
ANR	6113353	UnaryOperationExpression	* p		6113291	0					
ANR	6113354	UnaryOperator	*		6113291	0					
ANR	6113355	Identifier	p		6113291	1					
ANR	6113356	PrimaryExpression	'\\\\'		6113291	1					
ANR	6113357	CompoundStatement		11:19:167:167	6113291	1					
ANR	6113358	ExpressionStatement	* p = '/'	51:4:1494:1502	6113291	0	True				
ANR	6113359	AssignmentExpression	* p = '/'		6113291	0		=			
ANR	6113360	UnaryOperationExpression	* p		6113291	0					
ANR	6113361	UnaryOperator	*		6113291	0					
ANR	6113362	Identifier	p		6113291	1					
ANR	6113363	PrimaryExpression	'/'		6113291	1					
ANR	6113364	ReturnStatement	return path ;	55:1:1517:1528	6113291	2	True				
ANR	6113365	Identifier	path		6113291	0					
ANR	6113366	ReturnType	static char *		6113291	1					
ANR	6113367	Identifier	normalize_slashes		6113291	2					
ANR	6113368	ParameterList	char * path		6113291	3					
ANR	6113369	Parameter	char * path	39:31:1308:1317	6113291	0	True				
ANR	6113370	ParameterType	char *		6113291	0					
ANR	6113371	Identifier	path		6113291	1					
ANR	6113372	CFGEntryNode	ENTRY		6113291		True				
ANR	6113373	CFGExitNode	EXIT		6113291		True				
ANR	6113374	Symbol	p		6113291						
ANR	6113375	Symbol	path		6113291						
ANR	6113376	Symbol	* path		6113291						
ANR	6113377	Symbol	* p		6113291						
ANR	6113378	Function	pstrcpy	61:0:1636:1907							
ANR	6113379	FunctionDef	"pstrcpy (char * buf , int buf_size , const char * s)"		6113378	0					
ANR	6113380	CompoundStatement		62:0:1699:1907	6113378	0					
ANR	6113381	IdentifierDeclStatement	"char * q , * q_end ;"	63:1:1702:1717	6113378	0	True				
ANR	6113382	IdentifierDecl	* q		6113378	0					
ANR	6113383	IdentifierDeclType	char *		6113378	0					
ANR	6113384	Identifier	q		6113378	1					
ANR	6113385	IdentifierDecl	* q_end		6113378	1					
ANR	6113386	IdentifierDeclType	char *		6113378	0					
ANR	6113387	Identifier	q_end		6113378	1					
ANR	6113388	IdentifierDeclStatement	int c ;	64:1:1720:1725	6113378	1	True				
ANR	6113389	IdentifierDecl	c		6113378	0					
ANR	6113390	IdentifierDeclType	int		6113378	0					
ANR	6113391	Identifier	c		6113378	1					
ANR	6113392	IfStatement	if ( buf_size > 0 )		6113378	2					
ANR	6113393	Condition	buf_size > 0	66:5:1733:1744	6113378	0	True				
ANR	6113394	RelationalExpression	buf_size > 0		6113378	0		>			
ANR	6113395	Identifier	buf_size		6113378	0					
ANR	6113396	PrimaryExpression	0		6113378	1					
ANR	6113397	CompoundStatement		5:19:47:47	6113378	1					
ANR	6113398	ExpressionStatement	q = buf	67:2:1751:1758	6113378	0	True				
ANR	6113399	AssignmentExpression	q = buf		6113378	0		=			
ANR	6113400	Identifier	q		6113378	0					
ANR	6113401	Identifier	buf		6113378	1					
ANR	6113402	ExpressionStatement	q_end = buf + buf_size - 1	68:2:1762:1788	6113378	1	True				
ANR	6113403	AssignmentExpression	q_end = buf + buf_size - 1		6113378	0		=			
ANR	6113404	Identifier	q_end		6113378	0					
ANR	6113405	AdditiveExpression	buf + buf_size - 1		6113378	1		+			
ANR	6113406	Identifier	buf		6113378	0					
ANR	6113407	AdditiveExpression	buf_size - 1		6113378	1		-			
ANR	6113408	Identifier	buf_size		6113378	0					
ANR	6113409	PrimaryExpression	1		6113378	1					
ANR	6113410	WhileStatement	while ( q < q_end )		6113378	2					
ANR	6113411	Condition	q < q_end	69:9:1799:1807	6113378	0	True				
ANR	6113412	RelationalExpression	q < q_end		6113378	0		<			
ANR	6113413	Identifier	q		6113378	0					
ANR	6113414	Identifier	q_end		6113378	1					
ANR	6113415	CompoundStatement		8:20:110:110	6113378	1					
ANR	6113416	ExpressionStatement	c = * s ++	70:3:1815:1823	6113378	0	True				
ANR	6113417	AssignmentExpression	c = * s ++		6113378	0		=			
ANR	6113418	Identifier	c		6113378	0					
ANR	6113419	UnaryOperationExpression	* s ++		6113378	1					
ANR	6113420	UnaryOperator	*		6113378	0					
ANR	6113421	PostIncDecOperationExpression	s ++		6113378	1					
ANR	6113422	Identifier	s		6113378	0					
ANR	6113423	IncDec	++		6113378	1					
ANR	6113424	IfStatement	if ( c == '\\0' )		6113378	1					
ANR	6113425	Condition	c == '\\0'	71:7:1832:1840	6113378	0	True				
ANR	6113426	EqualityExpression	c == '\\0'		6113378	0		==			
ANR	6113427	Identifier	c		6113378	0					
ANR	6113428	PrimaryExpression	'\\0'		6113378	1					
ANR	6113429	CompoundStatement		10:18:143:143	6113378	1					
ANR	6113430	BreakStatement	break ;	72:4:1849:1854	6113378	0	True				
ANR	6113431	ExpressionStatement	* q ++ = c	74:3:1864:1872	6113378	2	True				
ANR	6113432	AssignmentExpression	* q ++ = c		6113378	0		=			
ANR	6113433	UnaryOperationExpression	* q ++		6113378	0					
ANR	6113434	UnaryOperator	*		6113378	0					
ANR	6113435	PostIncDecOperationExpression	q ++		6113378	1					
ANR	6113436	Identifier	q		6113378	0					
ANR	6113437	IncDec	++		6113378	1					
ANR	6113438	Identifier	c		6113378	1					
ANR	6113439	ExpressionStatement	* q = '\\0'	76:2:1880:1889	6113378	3	True				
ANR	6113440	AssignmentExpression	* q = '\\0'		6113378	0		=			
ANR	6113441	UnaryOperationExpression	* q		6113378	0					
ANR	6113442	UnaryOperator	*		6113378	0					
ANR	6113443	Identifier	q		6113378	1					
ANR	6113444	PrimaryExpression	'\\0'		6113378	1					
ANR	6113445	ReturnStatement	return buf ;	78:1:1895:1905	6113378	3	True				
ANR	6113446	Identifier	buf		6113378	0					
ANR	6113447	ReturnType	PUB_FUNC char *		6113378	1					
ANR	6113448	Identifier	pstrcpy		6113378	2					
ANR	6113449	ParameterList	"char * buf , int buf_size , const char * s"		6113378	3					
ANR	6113450	Parameter	char * buf	61:23:1659:1667	6113378	0	True				
ANR	6113451	ParameterType	char *		6113378	0					
ANR	6113452	Identifier	buf		6113378	1					
ANR	6113453	Parameter	int buf_size	61:34:1670:1681	6113378	1	True				
ANR	6113454	ParameterType	int		6113378	0					
ANR	6113455	Identifier	buf_size		6113378	1					
ANR	6113456	Parameter	const char * s	61:48:1684:1696	6113378	2	True				
ANR	6113457	ParameterType	const char *		6113378	0					
ANR	6113458	Identifier	s		6113378	1					
ANR	6113459	CFGEntryNode	ENTRY		6113378		True				
ANR	6113460	CFGExitNode	EXIT		6113378		True				
ANR	6113461	Symbol	* s ++		6113378						
ANR	6113462	Symbol	q		6113378						
ANR	6113463	Symbol	buf		6113378						
ANR	6113464	Symbol	s		6113378						
ANR	6113465	Symbol	c		6113378						
ANR	6113466	Symbol	buf_size		6113378						
ANR	6113467	Symbol	* q ++		6113378						
ANR	6113468	Symbol	q_end		6113378						
ANR	6113469	Symbol	* q		6113378						
ANR	6113470	Function	pstrcat	82:0:1937:2114							
ANR	6113471	FunctionDef	"pstrcat (char * buf , int buf_size , const char * s)"		6113470	0					
ANR	6113472	CompoundStatement		83:0:2000:2114	6113470	0					
ANR	6113473	IdentifierDeclStatement	int len ;	84:1:2003:2010	6113470	0	True				
ANR	6113474	IdentifierDecl	len		6113470	0					
ANR	6113475	IdentifierDeclType	int		6113470	0					
ANR	6113476	Identifier	len		6113470	1					
ANR	6113477	ExpressionStatement	len = strlen ( buf )	85:1:2013:2031	6113470	1	True				
ANR	6113478	AssignmentExpression	len = strlen ( buf )		6113470	0		=			
ANR	6113479	Identifier	len		6113470	0					
ANR	6113480	CallExpression	strlen ( buf )		6113470	1					
ANR	6113481	Callee	strlen		6113470	0					
ANR	6113482	Identifier	strlen		6113470	0					
ANR	6113483	ArgumentList	buf		6113470	1					
ANR	6113484	Argument	buf		6113470	0					
ANR	6113485	Identifier	buf		6113470	0					
ANR	6113486	IfStatement	if ( len < buf_size )		6113470	2					
ANR	6113487	Condition	len < buf_size	86:5:2038:2051	6113470	0	True				
ANR	6113488	RelationalExpression	len < buf_size		6113470	0		<			
ANR	6113489	Identifier	len		6113470	0					
ANR	6113490	Identifier	buf_size		6113470	1					
ANR	6113491	CompoundStatement		4:21:53:53	6113470	1					
ANR	6113492	ExpressionStatement	"pstrcpy ( buf + len , buf_size - len , s )"	87:2:2058:2096	6113470	0	True				
ANR	6113493	CallExpression	"pstrcpy ( buf + len , buf_size - len , s )"		6113470	0					
ANR	6113494	Callee	pstrcpy		6113470	0					
ANR	6113495	Identifier	pstrcpy		6113470	0					
ANR	6113496	ArgumentList	buf + len		6113470	1					
ANR	6113497	Argument	buf + len		6113470	0					
ANR	6113498	AdditiveExpression	buf + len		6113470	0		+			
ANR	6113499	Identifier	buf		6113470	0					
ANR	6113500	Identifier	len		6113470	1					
ANR	6113501	Argument	buf_size - len		6113470	1					
ANR	6113502	AdditiveExpression	buf_size - len		6113470	0		-			
ANR	6113503	Identifier	buf_size		6113470	0					
ANR	6113504	Identifier	len		6113470	1					
ANR	6113505	Argument	s		6113470	2					
ANR	6113506	Identifier	s		6113470	0					
ANR	6113507	ReturnStatement	return buf ;	89:1:2102:2112	6113470	3	True				
ANR	6113508	Identifier	buf		6113470	0					
ANR	6113509	ReturnType	PUB_FUNC char *		6113470	1					
ANR	6113510	Identifier	pstrcat		6113470	2					
ANR	6113511	ParameterList	"char * buf , int buf_size , const char * s"		6113470	3					
ANR	6113512	Parameter	char * buf	82:23:1960:1968	6113470	0	True				
ANR	6113513	ParameterType	char *		6113470	0					
ANR	6113514	Identifier	buf		6113470	1					
ANR	6113515	Parameter	int buf_size	82:34:1971:1982	6113470	1	True				
ANR	6113516	ParameterType	int		6113470	0					
ANR	6113517	Identifier	buf_size		6113470	1					
ANR	6113518	Parameter	const char * s	82:48:1985:1997	6113470	2	True				
ANR	6113519	ParameterType	const char *		6113470	0					
ANR	6113520	Identifier	s		6113470	1					
ANR	6113521	CFGEntryNode	ENTRY		6113470		True				
ANR	6113522	CFGExitNode	EXIT		6113470		True				
ANR	6113523	Symbol	strlen		6113470						
ANR	6113524	Symbol	buf		6113470						
ANR	6113525	Symbol	s		6113470						
ANR	6113526	Symbol	len		6113470						
ANR	6113527	Symbol	buf_size		6113470						
ANR	6113528	Function	pstrncpy	92:0:2117:2237							
ANR	6113529	FunctionDef	"pstrncpy (char * out , const char * in , size_t num)"		6113528	0					
ANR	6113530	CompoundStatement		93:0:2180:2237	6113528	0					
ANR	6113531	ExpressionStatement	"memcpy ( out , in , num )"	94:1:2183:2204	6113528	0	True				
ANR	6113532	CallExpression	"memcpy ( out , in , num )"		6113528	0					
ANR	6113533	Callee	memcpy		6113528	0					
ANR	6113534	Identifier	memcpy		6113528	0					
ANR	6113535	ArgumentList	out		6113528	1					
ANR	6113536	Argument	out		6113528	0					
ANR	6113537	Identifier	out		6113528	0					
ANR	6113538	Argument	in		6113528	1					
ANR	6113539	Identifier	in		6113528	0					
ANR	6113540	Argument	num		6113528	2					
ANR	6113541	Identifier	num		6113528	0					
ANR	6113542	ExpressionStatement	out [ num ] = '\\0'	95:1:2207:2222	6113528	1	True				
ANR	6113543	AssignmentExpression	out [ num ] = '\\0'		6113528	0		=			
ANR	6113544	ArrayIndexing	out [ num ]		6113528	0					
ANR	6113545	Identifier	out		6113528	0					
ANR	6113546	Identifier	num		6113528	1					
ANR	6113547	PrimaryExpression	'\\0'		6113528	1					
ANR	6113548	ReturnStatement	return out ;	96:1:2225:2235	6113528	2	True				
ANR	6113549	Identifier	out		6113528	0					
ANR	6113550	ReturnType	PUB_FUNC char *		6113528	1					
ANR	6113551	Identifier	pstrncpy		6113528	2					
ANR	6113552	ParameterList	"char * out , const char * in , size_t num"		6113528	3					
ANR	6113553	Parameter	char * out	92:24:2141:2149	6113528	0	True				
ANR	6113554	ParameterType	char *		6113528	0					
ANR	6113555	Identifier	out		6113528	1					
ANR	6113556	Parameter	const char * in	92:35:2152:2165	6113528	1	True				
ANR	6113557	ParameterType	const char *		6113528	0					
ANR	6113558	Identifier	in		6113528	1					
ANR	6113559	Parameter	size_t num	92:51:2168:2177	6113528	2	True				
ANR	6113560	ParameterType	size_t		6113528	0					
ANR	6113561	Identifier	num		6113528	1					
ANR	6113562	CFGEntryNode	ENTRY		6113528		True				
ANR	6113563	CFGExitNode	EXIT		6113528		True				
ANR	6113564	Symbol	* num		6113528						
ANR	6113565	Symbol	in		6113528						
ANR	6113566	Symbol	num		6113528						
ANR	6113567	Symbol	* out		6113528						
ANR	6113568	Symbol	out		6113528						
ANR	6113569	Function	tcc_basename	100:0:2277:2417							
ANR	6113570	FunctionDef	tcc_basename (const char * name)		6113569	0					
ANR	6113571	CompoundStatement		101:0:2323:2417	6113569	0					
ANR	6113572	IdentifierDeclStatement	"char * p = strchr ( name , 0 ) ;"	102:1:2326:2352	6113569	0	True				
ANR	6113573	IdentifierDecl	"* p = strchr ( name , 0 )"		6113569	0					
ANR	6113574	IdentifierDeclType	char *		6113569	0					
ANR	6113575	Identifier	p		6113569	1					
ANR	6113576	AssignmentExpression	"* p = strchr ( name , 0 )"		6113569	2		=			
ANR	6113577	Identifier	p		6113569	0					
ANR	6113578	CallExpression	"strchr ( name , 0 )"		6113569	1					
ANR	6113579	Callee	strchr		6113569	0					
ANR	6113580	Identifier	strchr		6113569	0					
ANR	6113581	ArgumentList	name		6113569	1					
ANR	6113582	Argument	name		6113569	0					
ANR	6113583	Identifier	name		6113569	0					
ANR	6113584	Argument	0		6113569	1					
ANR	6113585	PrimaryExpression	0		6113569	0					
ANR	6113586	WhileStatement	while ( p && p > name && ! IS_DIRSEP ( p [ - 1 ] ) )		6113569	1					
ANR	6113587	Condition	p && p > name && ! IS_DIRSEP ( p [ - 1 ] )	103:8:2362:2396	6113569	0	True				
ANR	6113588	AndExpression	p && p > name && ! IS_DIRSEP ( p [ - 1 ] )		6113569	0		&&			
ANR	6113589	Identifier	p		6113569	0					
ANR	6113590	AndExpression	p > name && ! IS_DIRSEP ( p [ - 1 ] )		6113569	1		&&			
ANR	6113591	RelationalExpression	p > name		6113569	0		>			
ANR	6113592	Identifier	p		6113569	0					
ANR	6113593	Identifier	name		6113569	1					
ANR	6113594	UnaryOperationExpression	! IS_DIRSEP ( p [ - 1 ] )		6113569	1					
ANR	6113595	UnaryOperator	!		6113569	0					
ANR	6113596	CallExpression	IS_DIRSEP ( p [ - 1 ] )		6113569	1					
ANR	6113597	Callee	IS_DIRSEP		6113569	0					
ANR	6113598	Identifier	IS_DIRSEP		6113569	0					
ANR	6113599	ArgumentList	p [ - 1 ]		6113569	1					
ANR	6113600	Argument	p [ - 1 ]		6113569	0					
ANR	6113601	ArrayIndexing	p [ - 1 ]		6113569	0					
ANR	6113602	Identifier	p		6113569	0					
ANR	6113603	UnaryOperationExpression	- 1		6113569	1					
ANR	6113604	UnaryOperator	-		6113569	0					
ANR	6113605	PrimaryExpression	1		6113569	1					
ANR	6113606	ExpressionStatement	-- p	104:2:2401:2404	6113569	1	True				
ANR	6113607	UnaryExpression	-- p		6113569	0					
ANR	6113608	IncDec	--		6113569	0					
ANR	6113609	Identifier	p		6113569	1					
ANR	6113610	ReturnStatement	return p ;	105:1:2407:2415	6113569	2	True				
ANR	6113611	Identifier	p		6113569	0					
ANR	6113612	ReturnType	PUB_FUNC char *		6113569	1					
ANR	6113613	Identifier	tcc_basename		6113569	2					
ANR	6113614	ParameterList	const char * name		6113569	3					
ANR	6113615	Parameter	const char * name	100:28:2305:2320	6113569	0	True				
ANR	6113616	ParameterType	const char *		6113569	0					
ANR	6113617	Identifier	name		6113569	1					
ANR	6113618	CFGEntryNode	ENTRY		6113569		True				
ANR	6113619	CFGExitNode	EXIT		6113569		True				
ANR	6113620	Symbol	p		6113569						
ANR	6113621	Symbol	name		6113569						
ANR	6113622	Symbol	strchr		6113569						
ANR	6113623	Symbol	* p		6113569						
ANR	6113624	Symbol	IS_DIRSEP		6113569						
ANR	6113625	Function	tcc_fileextension	112:0:2517:2660							
ANR	6113626	FunctionDef	tcc_fileextension (const char * name)		6113625	0					
ANR	6113627	CompoundStatement		113:0:2568:2660	6113625	0					
ANR	6113628	IdentifierDeclStatement	char * b = tcc_basename ( name ) ;	114:1:2571:2600	6113625	0	True				
ANR	6113629	IdentifierDecl	* b = tcc_basename ( name )		6113625	0					
ANR	6113630	IdentifierDeclType	char *		6113625	0					
ANR	6113631	Identifier	b		6113625	1					
ANR	6113632	AssignmentExpression	* b = tcc_basename ( name )		6113625	2		=			
ANR	6113633	Identifier	b		6113625	0					
ANR	6113634	CallExpression	tcc_basename ( name )		6113625	1					
ANR	6113635	Callee	tcc_basename		6113625	0					
ANR	6113636	Identifier	tcc_basename		6113625	0					
ANR	6113637	ArgumentList	name		6113625	1					
ANR	6113638	Argument	name		6113625	0					
ANR	6113639	Identifier	name		6113625	0					
ANR	6113640	IdentifierDeclStatement	"char * e = strrchr ( b , '.' ) ;"	115:1:2603:2629	6113625	1	True				
ANR	6113641	IdentifierDecl	"* e = strrchr ( b , '.' )"		6113625	0					
ANR	6113642	IdentifierDeclType	char *		6113625	0					
ANR	6113643	Identifier	e		6113625	1					
ANR	6113644	AssignmentExpression	"* e = strrchr ( b , '.' )"		6113625	2		=			
ANR	6113645	Identifier	e		6113625	0					
ANR	6113646	CallExpression	"strrchr ( b , '.' )"		6113625	1					
ANR	6113647	Callee	strrchr		6113625	0					
ANR	6113648	Identifier	strrchr		6113625	0					
ANR	6113649	ArgumentList	b		6113625	1					
ANR	6113650	Argument	b		6113625	0					
ANR	6113651	Identifier	b		6113625	0					
ANR	6113652	Argument	'.'		6113625	1					
ANR	6113653	PrimaryExpression	'.'		6113625	0					
ANR	6113654	ReturnStatement	"return e ? e : strchr ( b , 0 ) ;"	116:1:2632:2658	6113625	2	True				
ANR	6113655	ConditionalExpression	"e ? e : strchr ( b , 0 )"		6113625	0					
ANR	6113656	Condition	e		6113625	0					
ANR	6113657	Identifier	e		6113625	0					
ANR	6113658	Identifier	e		6113625	1					
ANR	6113659	CallExpression	"strchr ( b , 0 )"		6113625	2					
ANR	6113660	Callee	strchr		6113625	0					
ANR	6113661	Identifier	strchr		6113625	0					
ANR	6113662	ArgumentList	b		6113625	1					
ANR	6113663	Argument	b		6113625	0					
ANR	6113664	Identifier	b		6113625	0					
ANR	6113665	Argument	0		6113625	1					
ANR	6113666	PrimaryExpression	0		6113625	0					
ANR	6113667	ReturnType	PUB_FUNC char *		6113625	1					
ANR	6113668	Identifier	tcc_fileextension		6113625	2					
ANR	6113669	ParameterList	const char * name		6113625	3					
ANR	6113670	Parameter	const char * name	112:33:2550:2565	6113625	0	True				
ANR	6113671	ParameterType	const char *		6113625	0					
ANR	6113672	Identifier	name		6113625	1					
ANR	6113673	CFGEntryNode	ENTRY		6113625		True				
ANR	6113674	CFGExitNode	EXIT		6113625		True				
ANR	6113675	Symbol	b		6113625						
ANR	6113676	Symbol	e		6113625						
ANR	6113677	Symbol	strrchr		6113625						
ANR	6113678	Symbol	name		6113625						
ANR	6113679	Symbol	strchr		6113625						
ANR	6113680	Symbol	tcc_basename		6113625						
ANR	6113681	Function	tcc_mallocz	123:0:2748:2868							
ANR	6113682	FunctionDef	tcc_mallocz (unsigned long size)		6113681	0					
ANR	6113683	CompoundStatement		124:0:2795:2868	6113681	0					
ANR	6113684	IdentifierDeclStatement	void * ptr ;	125:1:2798:2807	6113681	0	True				
ANR	6113685	IdentifierDecl	* ptr		6113681	0					
ANR	6113686	IdentifierDeclType	void *		6113681	0					
ANR	6113687	Identifier	ptr		6113681	1					
ANR	6113688	ExpressionStatement	ptr = malloc ( size )	126:1:2810:2829	6113681	1	True				
ANR	6113689	AssignmentExpression	ptr = malloc ( size )		6113681	0		=			
ANR	6113690	Identifier	ptr		6113681	0					
ANR	6113691	CallExpression	malloc ( size )		6113681	1					
ANR	6113692	Callee	malloc		6113681	0					
ANR	6113693	Identifier	malloc		6113681	0					
ANR	6113694	ArgumentList	size		6113681	1					
ANR	6113695	Argument	size		6113681	0					
ANR	6113696	Identifier	size		6113681	0					
ANR	6113697	ExpressionStatement	"memset ( ptr , 0 , size )"	127:1:2832:2853	6113681	2	True				
ANR	6113698	CallExpression	"memset ( ptr , 0 , size )"		6113681	0					
ANR	6113699	Callee	memset		6113681	0					
ANR	6113700	Identifier	memset		6113681	0					
ANR	6113701	ArgumentList	ptr		6113681	1					
ANR	6113702	Argument	ptr		6113681	0					
ANR	6113703	Identifier	ptr		6113681	0					
ANR	6113704	Argument	0		6113681	1					
ANR	6113705	PrimaryExpression	0		6113681	0					
ANR	6113706	Argument	size		6113681	2					
ANR	6113707	Identifier	size		6113681	0					
ANR	6113708	ReturnStatement	return ptr ;	128:1:2856:2866	6113681	3	True				
ANR	6113709	Identifier	ptr		6113681	0					
ANR	6113710	ReturnType	PUB_FUNC void *		6113681	1					
ANR	6113711	Identifier	tcc_mallocz		6113681	2					
ANR	6113712	ParameterList	unsigned long size		6113681	3					
ANR	6113713	Parameter	unsigned long size	123:27:2775:2792	6113681	0	True				
ANR	6113714	ParameterType	unsigned long		6113681	0					
ANR	6113715	Identifier	size		6113681	1					
ANR	6113716	CFGEntryNode	ENTRY		6113681		True				
ANR	6113717	CFGExitNode	EXIT		6113681		True				
ANR	6113718	Symbol	malloc		6113681						
ANR	6113719	Symbol	size		6113681						
ANR	6113720	Symbol	ptr		6113681						
ANR	6113721	Function	tcc_memstats	132:0:2872:3011							
ANR	6113722	FunctionDef	tcc_memstats ()		6113721	0					
ANR	6113723	CompoundStatement		133:0:2905:3011	6113721	0					
ANR	6113724	ExpressionStatement	"printf ( ""memory: %d byte(s), max = %d byte(s)\\n"" , mem_cur_size , mem_max_size )"	135:1:2925:3002	6113721	0	True				
ANR	6113725	CallExpression	"printf ( ""memory: %d byte(s), max = %d byte(s)\\n"" , mem_cur_size , mem_max_size )"		6113721	0					
ANR	6113726	Callee	printf		6113721	0					
ANR	6113727	Identifier	printf		6113721	0					
ANR	6113728	ArgumentList	"""memory: %d byte(s), max = %d byte(s)\\n"""		6113721	1					
ANR	6113729	Argument	"""memory: %d byte(s), max = %d byte(s)\\n"""		6113721	0					
ANR	6113730	PrimaryExpression	"""memory: %d byte(s), max = %d byte(s)\\n"""		6113721	0					
ANR	6113731	Argument	mem_cur_size		6113721	1					
ANR	6113732	Identifier	mem_cur_size		6113721	0					
ANR	6113733	Argument	mem_max_size		6113721	2					
ANR	6113734	Identifier	mem_max_size		6113721	0					
ANR	6113735	ReturnType	PUB_FUNC void		6113721	1					
ANR	6113736	Identifier	tcc_memstats		6113721	2					
ANR	6113737	ParameterList			6113721	3					
ANR	6113738	CFGEntryNode	ENTRY		6113721		True				
ANR	6113739	CFGExitNode	EXIT		6113721		True				
ANR	6113740	Symbol	mem_cur_size		6113721						
ANR	6113741	Symbol	mem_max_size		6113721						
ANR	6113742	Function	dynarray_add	142:0:3090:3458							
ANR	6113743	FunctionDef	"dynarray_add (void * * * ptab , int * nb_ptr , void * data)"		6113742	0					
ANR	6113744	CompoundStatement		143:0:3155:3458	6113742	0					
ANR	6113745	IdentifierDeclStatement	"int nb , nb_alloc ;"	144:1:3158:3174	6113742	0	True				
ANR	6113746	IdentifierDecl	nb		6113742	0					
ANR	6113747	IdentifierDeclType	int		6113742	0					
ANR	6113748	Identifier	nb		6113742	1					
ANR	6113749	IdentifierDecl	nb_alloc		6113742	1					
ANR	6113750	IdentifierDeclType	int		6113742	0					
ANR	6113751	Identifier	nb_alloc		6113742	1					
ANR	6113752	IdentifierDeclStatement	void * * pp ;	145:1:3177:3186	6113742	1	True				
ANR	6113753	IdentifierDecl	* * pp		6113742	0					
ANR	6113754	IdentifierDeclType	void * *		6113742	0					
ANR	6113755	Identifier	pp		6113742	1					
ANR	6113756	ExpressionStatement	nb = * nb_ptr	147:1:3190:3202	6113742	2	True				
ANR	6113757	AssignmentExpression	nb = * nb_ptr		6113742	0		=			
ANR	6113758	Identifier	nb		6113742	0					
ANR	6113759	UnaryOperationExpression	* nb_ptr		6113742	1					
ANR	6113760	UnaryOperator	*		6113742	0					
ANR	6113761	Identifier	nb_ptr		6113742	1					
ANR	6113762	ExpressionStatement	pp = * ptab	148:1:3205:3215	6113742	3	True				
ANR	6113763	AssignmentExpression	pp = * ptab		6113742	0		=			
ANR	6113764	Identifier	pp		6113742	0					
ANR	6113765	UnaryOperationExpression	* ptab		6113742	1					
ANR	6113766	UnaryOperator	*		6113742	0					
ANR	6113767	Identifier	ptab		6113742	1					
ANR	6113768	IfStatement	if ( ( nb & ( nb - 1 ) ) == 0 )		6113742	4					
ANR	6113769	Condition	( nb & ( nb - 1 ) ) == 0	150:5:3269:3288	6113742	0	True				
ANR	6113770	EqualityExpression	( nb & ( nb - 1 ) ) == 0		6113742	0		==			
ANR	6113771	BitAndExpression	nb & ( nb - 1 )		6113742	0		&			
ANR	6113772	Identifier	nb		6113742	0					
ANR	6113773	AdditiveExpression	nb - 1		6113742	1		-			
ANR	6113774	Identifier	nb		6113742	0					
ANR	6113775	PrimaryExpression	1		6113742	1					
ANR	6113776	PrimaryExpression	0		6113742	1					
ANR	6113777	CompoundStatement		8:27:135:135	6113742	1					
ANR	6113778	IfStatement	if ( ! nb )		6113742	0					
ANR	6113779	Condition	! nb	151:6:3299:3301	6113742	0	True				
ANR	6113780	UnaryOperationExpression	! nb		6113742	0					
ANR	6113781	UnaryOperator	!		6113742	0					
ANR	6113782	Identifier	nb		6113742	1					
ANR	6113783	CompoundStatement		9:11:148:148	6113742	1					
ANR	6113784	ExpressionStatement	nb_alloc = 1	152:3:3309:3321	6113742	0	True				
ANR	6113785	AssignmentExpression	nb_alloc = 1		6113742	0		=			
ANR	6113786	Identifier	nb_alloc		6113742	0					
ANR	6113787	PrimaryExpression	1		6113742	1					
ANR	6113788	ElseStatement	else		6113742	0					
ANR	6113789	CompoundStatement		11:9:176:176	6113742	0					
ANR	6113790	ExpressionStatement	nb_alloc = nb * 2	154:3:3337:3354	6113742	0	True				
ANR	6113791	AssignmentExpression	nb_alloc = nb * 2		6113742	0		=			
ANR	6113792	Identifier	nb_alloc		6113742	0					
ANR	6113793	MultiplicativeExpression	nb * 2		6113742	1		*			
ANR	6113794	Identifier	nb		6113742	0					
ANR	6113795	PrimaryExpression	2		6113742	1					
ANR	6113796	ExpressionStatement	"pp = realloc ( pp , nb_alloc * sizeof ( void * ) )"	156:2:3362:3406	6113742	1	True				
ANR	6113797	AssignmentExpression	"pp = realloc ( pp , nb_alloc * sizeof ( void * ) )"		6113742	0		=			
ANR	6113798	Identifier	pp		6113742	0					
ANR	6113799	CallExpression	"realloc ( pp , nb_alloc * sizeof ( void * ) )"		6113742	1					
ANR	6113800	Callee	realloc		6113742	0					
ANR	6113801	Identifier	realloc		6113742	0					
ANR	6113802	ArgumentList	pp		6113742	1					
ANR	6113803	Argument	pp		6113742	0					
ANR	6113804	Identifier	pp		6113742	0					
ANR	6113805	Argument	nb_alloc * sizeof ( void * )		6113742	1					
ANR	6113806	MultiplicativeExpression	nb_alloc * sizeof ( void * )		6113742	0		*			
ANR	6113807	Identifier	nb_alloc		6113742	0					
ANR	6113808	SizeofExpression	sizeof ( void * )		6113742	1					
ANR	6113809	Sizeof	sizeof		6113742	0					
ANR	6113810	SizeofOperand	void *		6113742	1					
ANR	6113811	ExpressionStatement	* ptab = pp	157:2:3410:3420	6113742	2	True				
ANR	6113812	AssignmentExpression	* ptab = pp		6113742	0		=			
ANR	6113813	UnaryOperationExpression	* ptab		6113742	0					
ANR	6113814	UnaryOperator	*		6113742	0					
ANR	6113815	Identifier	ptab		6113742	1					
ANR	6113816	Identifier	pp		6113742	1					
ANR	6113817	ExpressionStatement	pp [ nb ++ ] = data	159:1:3426:3441	6113742	5	True				
ANR	6113818	AssignmentExpression	pp [ nb ++ ] = data		6113742	0		=			
ANR	6113819	ArrayIndexing	pp [ nb ++ ]		6113742	0					
ANR	6113820	Identifier	pp		6113742	0					
ANR	6113821	PostIncDecOperationExpression	nb ++		6113742	1					
ANR	6113822	Identifier	nb		6113742	0					
ANR	6113823	IncDec	++		6113742	1					
ANR	6113824	Identifier	data		6113742	1					
ANR	6113825	ExpressionStatement	* nb_ptr = nb	160:1:3444:3456	6113742	6	True				
ANR	6113826	AssignmentExpression	* nb_ptr = nb		6113742	0		=			
ANR	6113827	UnaryOperationExpression	* nb_ptr		6113742	0					
ANR	6113828	UnaryOperator	*		6113742	0					
ANR	6113829	Identifier	nb_ptr		6113742	1					
ANR	6113830	Identifier	nb		6113742	1					
ANR	6113831	ReturnType	ST_FUNC void		6113742	1					
ANR	6113832	Identifier	dynarray_add		6113742	2					
ANR	6113833	ParameterList	"void * * * ptab , int * nb_ptr , void * data"		6113742	3					
ANR	6113834	Parameter	void * * * ptab	142:26:3116:3127	6113742	0	True				
ANR	6113835	ParameterType	void * * *		6113742	0					
ANR	6113836	Identifier	ptab		6113742	1					
ANR	6113837	Parameter	int * nb_ptr	142:40:3130:3140	6113742	1	True				
ANR	6113838	ParameterType	int *		6113742	0					
ANR	6113839	Identifier	nb_ptr		6113742	1					
ANR	6113840	Parameter	void * data	142:53:3143:3152	6113742	2	True				
ANR	6113841	ParameterType	void *		6113742	0					
ANR	6113842	Identifier	data		6113742	1					
ANR	6113843	CFGEntryNode	ENTRY		6113742		True				
ANR	6113844	CFGExitNode	EXIT		6113742		True				
ANR	6113845	Symbol	pp		6113742						
ANR	6113846	Symbol	ptab		6113742						
ANR	6113847	Symbol	nb_alloc		6113742						
ANR	6113848	Symbol	data		6113742						
ANR	6113849	Symbol	nb		6113742						
ANR	6113850	Symbol	nb_ptr		6113742						
ANR	6113851	Symbol	* pp		6113742						
ANR	6113852	Symbol	* nb_ptr		6113742						
ANR	6113853	Symbol	* ptab		6113742						
ANR	6113854	Symbol	realloc		6113742						
ANR	6113855	Function	dynarray_reset	163:0:3461:3642							
ANR	6113856	FunctionDef	"dynarray_reset (void * pp , int * n)"		6113855	0					
ANR	6113857	CompoundStatement		164:0:3507:3642	6113855	0					
ANR	6113858	IdentifierDeclStatement	void * * p ;	165:1:3510:3518	6113855	0	True				
ANR	6113859	IdentifierDecl	* * p		6113855	0					
ANR	6113860	IdentifierDeclType	void * *		6113855	0					
ANR	6113861	Identifier	p		6113855	1					
ANR	6113862	ForStatement	"for ( p = * ( void * * * ) pp ; * n ; ++ p , -- * n )"		6113855	1					
ANR	6113863	ForInit	p = * ( void * * * ) pp ;	166:6:3526:3544	6113855	0	True				
ANR	6113864	AssignmentExpression	p = * ( void * * * ) pp		6113855	0		=			
ANR	6113865	Identifier	p		6113855	0					
ANR	6113866	UnaryOperationExpression	* ( void * * * ) pp		6113855	1					
ANR	6113867	UnaryOperator	*		6113855	0					
ANR	6113868	CastExpression	( void * * * ) pp		6113855	1					
ANR	6113869	CastTarget	void * * *		6113855	0					
ANR	6113870	Identifier	pp		6113855	1					
ANR	6113871	Condition	* n	166:26:3546:3547	6113855	1	True				
ANR	6113872	UnaryOperationExpression	* n		6113855	0					
ANR	6113873	UnaryOperator	*		6113855	0					
ANR	6113874	Identifier	n		6113855	1					
ANR	6113875	Expression	"++ p , -- * n"	166:30:3550:3558	6113855	2	True				
ANR	6113876	UnaryExpression	++ p		6113855	0					
ANR	6113877	IncDec	++		6113855	0					
ANR	6113878	Identifier	p		6113855	1					
ANR	6113879	UnaryExpression	-- * n		6113855	1					
ANR	6113880	IncDec	--		6113855	0					
ANR	6113881	UnaryOperationExpression	* n		6113855	1					
ANR	6113882	UnaryOperator	*		6113855	0					
ANR	6113883	Identifier	n		6113855	1					
ANR	6113884	CompoundStatement		3:41:53:53	6113855	3					
ANR	6113885	IfStatement	if ( * p )		6113855	0					
ANR	6113886	Condition	* p	167:6:3569:3570	6113855	0	True				
ANR	6113887	UnaryOperationExpression	* p		6113855	0					
ANR	6113888	UnaryOperator	*		6113855	0					
ANR	6113889	Identifier	p		6113855	1					
ANR	6113890	CompoundStatement		4:10:65:65	6113855	1					
ANR	6113891	ExpressionStatement	free ( * p )	168:3:3578:3587	6113855	0	True				
ANR	6113892	CallExpression	free ( * p )		6113855	0					
ANR	6113893	Callee	free		6113855	0					
ANR	6113894	Identifier	free		6113855	0					
ANR	6113895	ArgumentList	* p		6113855	1					
ANR	6113896	Argument	* p		6113855	0					
ANR	6113897	UnaryOperationExpression	* p		6113855	0					
ANR	6113898	UnaryOperator	*		6113855	0					
ANR	6113899	Identifier	p		6113855	1					
ANR	6113900	ExpressionStatement	free ( * ( void * * ) pp )	171:1:3597:3617	6113855	2	True				
ANR	6113901	CallExpression	free ( * ( void * * ) pp )		6113855	0					
ANR	6113902	Callee	free		6113855	0					
ANR	6113903	Identifier	free		6113855	0					
ANR	6113904	ArgumentList	* ( void * * ) pp		6113855	1					
ANR	6113905	Argument	* ( void * * ) pp		6113855	0					
ANR	6113906	UnaryOperationExpression	* ( void * * ) pp		6113855	0					
ANR	6113907	UnaryOperator	*		6113855	0					
ANR	6113908	CastExpression	( void * * ) pp		6113855	1					
ANR	6113909	CastTarget	void * *		6113855	0					
ANR	6113910	Identifier	pp		6113855	1					
ANR	6113911	ExpressionStatement	* ( void * * ) pp = NULL	172:1:3620:3640	6113855	3	True				
ANR	6113912	AssignmentExpression	* ( void * * ) pp = NULL		6113855	0		=			
ANR	6113913	UnaryOperationExpression	* ( void * * ) pp		6113855	0					
ANR	6113914	UnaryOperator	*		6113855	0					
ANR	6113915	CastExpression	( void * * ) pp		6113855	1					
ANR	6113916	CastTarget	void * *		6113855	0					
ANR	6113917	Identifier	pp		6113855	1					
ANR	6113918	Identifier	NULL		6113855	1					
ANR	6113919	ReturnType	ST_FUNC void		6113855	1					
ANR	6113920	Identifier	dynarray_reset		6113855	2					
ANR	6113921	ParameterList	"void * pp , int * n"		6113855	3					
ANR	6113922	Parameter	void * pp	163:28:3489:3496	6113855	0	True				
ANR	6113923	ParameterType	void *		6113855	0					
ANR	6113924	Identifier	pp		6113855	1					
ANR	6113925	Parameter	int * n	163:38:3499:3504	6113855	1	True				
ANR	6113926	ParameterType	int *		6113855	0					
ANR	6113927	Identifier	n		6113855	1					
ANR	6113928	CFGEntryNode	ENTRY		6113855		True				
ANR	6113929	CFGExitNode	EXIT		6113855		True				
ANR	6113930	Symbol	pp		6113855						
ANR	6113931	Symbol	p		6113855						
ANR	6113932	Symbol	NULL		6113855						
ANR	6113933	Symbol	* pp		6113855						
ANR	6113934	Symbol	* ( void * * * ) pp		6113855						
ANR	6113935	Symbol	* n		6113855						
ANR	6113936	Symbol	* p		6113855						
ANR	6113937	Symbol	* ( void * * ) pp		6113855						
ANR	6113938	Symbol	n		6113855						
ANR	6113939	Function	tcc_split_path	175:0:3645:4130							
ANR	6113940	FunctionDef	"tcc_split_path (TCCState * s , void * * * p_ary , int * p_nb_ary , const char * in)"		6113939	0					
ANR	6113941	CompoundStatement		176:0:3731:4130	6113939	0					
ANR	6113942	IdentifierDeclStatement	const char * p ;	177:1:3734:3747	6113939	0	True				
ANR	6113943	IdentifierDecl	* p		6113939	0					
ANR	6113944	IdentifierDeclType	const char *		6113939	0					
ANR	6113945	Identifier	p		6113939	1					
ANR	6113946	DoStatement	do		6113939	1					
ANR	6113947	CompoundStatement		5:2:34:45	6113939	0					
ANR	6113948	IdentifierDeclStatement	int c ;	179:2:3757:3762	6113939	0	True				
ANR	6113949	IdentifierDecl	c		6113939	0					
ANR	6113950	IdentifierDeclType	int		6113939	0					
ANR	6113951	Identifier	c		6113939	1					
ANR	6113952	IdentifierDeclStatement	CString str ;	180:2:3766:3777	6113939	1	True				
ANR	6113953	IdentifierDecl	str		6113939	0					
ANR	6113954	IdentifierDeclType	CString		6113939	0					
ANR	6113955	Identifier	str		6113939	1					
ANR	6113956	ExpressionStatement	cstr_new ( & str )	182:2:3782:3797	6113939	2	True				
ANR	6113957	CallExpression	cstr_new ( & str )		6113939	0					
ANR	6113958	Callee	cstr_new		6113939	0					
ANR	6113959	Identifier	cstr_new		6113939	0					
ANR	6113960	ArgumentList	& str		6113939	1					
ANR	6113961	Argument	& str		6113939	0					
ANR	6113962	UnaryOperationExpression	& str		6113939	0					
ANR	6113963	UnaryOperator	&		6113939	0					
ANR	6113964	Identifier	str		6113939	1					
ANR	6113965	ForStatement	"for ( p = in ; c = * p , c != '\\0' && c != PATHSEP ; ++ p )"		6113939	3					
ANR	6113966	ForInit	p = in ;	183:7:3806:3812	6113939	0	True				
ANR	6113967	AssignmentExpression	p = in		6113939	0		=			
ANR	6113968	Identifier	p		6113939	0					
ANR	6113969	Identifier	in		6113939	1					
ANR	6113970	Condition	"c = * p , c != '\\0' && c != PATHSEP"	183:15:3814:3846	6113939	1	True				
ANR	6113971	Expression	"c = * p , c != '\\0' && c != PATHSEP"		6113939	0					
ANR	6113972	AssignmentExpression	c = * p		6113939	0		=			
ANR	6113973	Identifier	c		6113939	0					
ANR	6113974	UnaryOperationExpression	* p		6113939	1					
ANR	6113975	UnaryOperator	*		6113939	0					
ANR	6113976	Identifier	p		6113939	1					
ANR	6113977	AndExpression	c != '\\0' && c != PATHSEP		6113939	1		&&			
ANR	6113978	EqualityExpression	c != '\\0'		6113939	0		!=			
ANR	6113979	Identifier	c		6113939	0					
ANR	6113980	PrimaryExpression	'\\0'		6113939	1					
ANR	6113981	EqualityExpression	c != PATHSEP		6113939	1		!=			
ANR	6113982	Identifier	c		6113939	0					
ANR	6113983	Identifier	PATHSEP		6113939	1					
ANR	6113984	UnaryExpression	++ p	183:50:3849:3851	6113939	2	True				
ANR	6113985	IncDec	++		6113939	0					
ANR	6113986	Identifier	p		6113939	1					
ANR	6113987	CompoundStatement		8:55:122:122	6113939	3					
ANR	6113988	IfStatement	if ( c == '{' && p [ 1 ] && p [ 2 ] == '}' )		6113939	0					
ANR	6113989	Condition	c == '{' && p [ 1 ] && p [ 2 ] == '}'	184:7:3863:3893	6113939	0	True				
ANR	6113990	AndExpression	c == '{' && p [ 1 ] && p [ 2 ] == '}'		6113939	0		&&			
ANR	6113991	EqualityExpression	c == '{'		6113939	0		==			
ANR	6113992	Identifier	c		6113939	0					
ANR	6113993	PrimaryExpression	'{'		6113939	1					
ANR	6113994	AndExpression	p [ 1 ] && p [ 2 ] == '}'		6113939	1		&&			
ANR	6113995	ArrayIndexing	p [ 1 ]		6113939	0					
ANR	6113996	Identifier	p		6113939	0					
ANR	6113997	PrimaryExpression	1		6113939	1					
ANR	6113998	EqualityExpression	p [ 2 ] == '}'		6113939	1		==			
ANR	6113999	ArrayIndexing	p [ 2 ]		6113939	0					
ANR	6114000	Identifier	p		6113939	0					
ANR	6114001	PrimaryExpression	2		6113939	1					
ANR	6114002	PrimaryExpression	'}'		6113939	1					
ANR	6114003	CompoundStatement		9:40:164:164	6113939	1					
ANR	6114004	ExpressionStatement	"c = p [ 1 ] , p += 2"	185:4:3902:3918	6113939	0	True				
ANR	6114005	Expression	"c = p [ 1 ] , p += 2"		6113939	0					
ANR	6114006	AssignmentExpression	c = p [ 1 ]		6113939	0		=			
ANR	6114007	Identifier	c		6113939	0					
ANR	6114008	ArrayIndexing	p [ 1 ]		6113939	1					
ANR	6114009	Identifier	p		6113939	0					
ANR	6114010	PrimaryExpression	1		6113939	1					
ANR	6114011	AssignmentExpression	p += 2		6113939	1		+=			
ANR	6114012	Identifier	p		6113939	0					
ANR	6114013	PrimaryExpression	2		6113939	1					
ANR	6114014	IfStatement	if ( c == 'B' )		6113939	1					
ANR	6114015	Condition	c == 'B'	186:8:3928:3935	6113939	0	True				
ANR	6114016	EqualityExpression	c == 'B'		6113939	0		==			
ANR	6114017	Identifier	c		6113939	0					
ANR	6114018	PrimaryExpression	'B'		6113939	1					
ANR	6114019	CompoundStatement		11:18:206:206	6113939	1					
ANR	6114020	ExpressionStatement	"cstr_cat ( & str , s -> tcc_lib_path )"	187:5:3945:3977	6113939	0	True				
ANR	6114021	CallExpression	"cstr_cat ( & str , s -> tcc_lib_path )"		6113939	0					
ANR	6114022	Callee	cstr_cat		6113939	0					
ANR	6114023	Identifier	cstr_cat		6113939	0					
ANR	6114024	ArgumentList	& str		6113939	1					
ANR	6114025	Argument	& str		6113939	0					
ANR	6114026	UnaryOperationExpression	& str		6113939	0					
ANR	6114027	UnaryOperator	&		6113939	0					
ANR	6114028	Identifier	str		6113939	1					
ANR	6114029	Argument	s -> tcc_lib_path		6113939	1					
ANR	6114030	PtrMemberAccess	s -> tcc_lib_path		6113939	0					
ANR	6114031	Identifier	s		6113939	0					
ANR	6114032	Identifier	tcc_lib_path		6113939	1					
ANR	6114033	ElseStatement	else		6113939	0					
ANR	6114034	CompoundStatement		14:10:263:263	6113939	0					
ANR	6114035	ExpressionStatement	"cstr_ccat ( & str , c )"	190:4:4001:4020	6113939	0	True				
ANR	6114036	CallExpression	"cstr_ccat ( & str , c )"		6113939	0					
ANR	6114037	Callee	cstr_ccat		6113939	0					
ANR	6114038	Identifier	cstr_ccat		6113939	0					
ANR	6114039	ArgumentList	& str		6113939	1					
ANR	6114040	Argument	& str		6113939	0					
ANR	6114041	UnaryOperationExpression	& str		6113939	0					
ANR	6114042	UnaryOperator	&		6113939	0					
ANR	6114043	Identifier	str		6113939	1					
ANR	6114044	Argument	c		6113939	1					
ANR	6114045	Identifier	c		6113939	0					
ANR	6114046	ExpressionStatement	"cstr_ccat ( & str , '\\0' )"	193:2:4033:4055	6113939	4	True				
ANR	6114047	CallExpression	"cstr_ccat ( & str , '\\0' )"		6113939	0					
ANR	6114048	Callee	cstr_ccat		6113939	0					
ANR	6114049	Identifier	cstr_ccat		6113939	0					
ANR	6114050	ArgumentList	& str		6113939	1					
ANR	6114051	Argument	& str		6113939	0					
ANR	6114052	UnaryOperationExpression	& str		6113939	0					
ANR	6114053	UnaryOperator	&		6113939	0					
ANR	6114054	Identifier	str		6113939	1					
ANR	6114055	Argument	'\\0'		6113939	1					
ANR	6114056	PrimaryExpression	'\\0'		6113939	0					
ANR	6114057	ExpressionStatement	"dynarray_add ( p_ary , p_nb_ary , str . data )"	194:2:4059:4099	6113939	5	True				
ANR	6114058	CallExpression	"dynarray_add ( p_ary , p_nb_ary , str . data )"		6113939	0					
ANR	6114059	Callee	dynarray_add		6113939	0					
ANR	6114060	Identifier	dynarray_add		6113939	0					
ANR	6114061	ArgumentList	p_ary		6113939	1					
ANR	6114062	Argument	p_ary		6113939	0					
ANR	6114063	Identifier	p_ary		6113939	0					
ANR	6114064	Argument	p_nb_ary		6113939	1					
ANR	6114065	Identifier	p_nb_ary		6113939	0					
ANR	6114066	Argument	str . data		6113939	2					
ANR	6114067	MemberAccess	str . data		6113939	0					
ANR	6114068	Identifier	str		6113939	0					
ANR	6114069	Identifier	data		6113939	1					
ANR	6114070	ExpressionStatement	in = p + 1	195:2:4103:4113	6113939	6	True				
ANR	6114071	AssignmentExpression	in = p + 1		6113939	0		=			
ANR	6114072	Identifier	in		6113939	0					
ANR	6114073	AdditiveExpression	p + 1		6113939	1		+			
ANR	6114074	Identifier	p		6113939	0					
ANR	6114075	PrimaryExpression	1		6113939	1					
ANR	6114076	Condition	* p	196:10:4125:4126	6113939	1	True				
ANR	6114077	UnaryOperationExpression	* p		6113939	0					
ANR	6114078	UnaryOperator	*		6113939	0					
ANR	6114079	Identifier	p		6113939	1					
ANR	6114080	ReturnType	static void		6113939	1					
ANR	6114081	Identifier	tcc_split_path		6113939	2					
ANR	6114082	ParameterList	"TCCState * s , void * * * p_ary , int * p_nb_ary , const char * in"		6113939	3					
ANR	6114083	Parameter	TCCState * s	175:27:3672:3682	6113939	0	True				
ANR	6114084	ParameterType	TCCState *		6113939	0					
ANR	6114085	Identifier	s		6113939	1					
ANR	6114086	Parameter	void * * * p_ary	175:40:3685:3697	6113939	1	True				
ANR	6114087	ParameterType	void * * *		6113939	0					
ANR	6114088	Identifier	p_ary		6113939	1					
ANR	6114089	Parameter	int * p_nb_ary	175:55:3700:3712	6113939	2	True				
ANR	6114090	ParameterType	int *		6113939	0					
ANR	6114091	Identifier	p_nb_ary		6113939	1					
ANR	6114092	Parameter	const char * in	175:70:3715:3728	6113939	3	True				
ANR	6114093	ParameterType	const char *		6113939	0					
ANR	6114094	Identifier	in		6113939	1					
ANR	6114095	CFGEntryNode	ENTRY		6113939		True				
ANR	6114096	CFGExitNode	EXIT		6113939		True				
ANR	6114097	Symbol	c		6113939						
ANR	6114098	Symbol	in		6113939						
ANR	6114099	Symbol	PATHSEP		6113939						
ANR	6114100	Symbol	s -> tcc_lib_path		6113939						
ANR	6114101	Symbol	p_ary		6113939						
ANR	6114102	Symbol	p		6113939						
ANR	6114103	Symbol	str		6113939						
ANR	6114104	Symbol	& str		6113939						
ANR	6114105	Symbol	s		6113939						
ANR	6114106	Symbol	str . data		6113939						
ANR	6114107	Symbol	p_nb_ary		6113939						
ANR	6114108	Symbol	* p		6113939						
ANR	6114109	Symbol	* s		6113939						
ANR	6114110	Function	strcat_vprintf	201:0:4193:4356							
ANR	6114111	FunctionDef	"strcat_vprintf (char * buf , int buf_size , const char * fmt , va_list ap)"		6114110	0					
ANR	6114112	CompoundStatement		202:0:4274:4356	6114110	0					
ANR	6114113	IdentifierDeclStatement	int len ;	203:1:4277:4284	6114110	0	True				
ANR	6114114	IdentifierDecl	len		6114110	0					
ANR	6114115	IdentifierDeclType	int		6114110	0					
ANR	6114116	Identifier	len		6114110	1					
ANR	6114117	ExpressionStatement	len = strlen ( buf )	204:1:4287:4305	6114110	1	True				
ANR	6114118	AssignmentExpression	len = strlen ( buf )		6114110	0		=			
ANR	6114119	Identifier	len		6114110	0					
ANR	6114120	CallExpression	strlen ( buf )		6114110	1					
ANR	6114121	Callee	strlen		6114110	0					
ANR	6114122	Identifier	strlen		6114110	0					
ANR	6114123	ArgumentList	buf		6114110	1					
ANR	6114124	Argument	buf		6114110	0					
ANR	6114125	Identifier	buf		6114110	0					
ANR	6114126	ExpressionStatement	"vsnprintf ( buf + len , buf_size - len , fmt , ap )"	205:1:4308:4354	6114110	2	True				
ANR	6114127	CallExpression	"vsnprintf ( buf + len , buf_size - len , fmt , ap )"		6114110	0					
ANR	6114128	Callee	vsnprintf		6114110	0					
ANR	6114129	Identifier	vsnprintf		6114110	0					
ANR	6114130	ArgumentList	buf + len		6114110	1					
ANR	6114131	Argument	buf + len		6114110	0					
ANR	6114132	AdditiveExpression	buf + len		6114110	0		+			
ANR	6114133	Identifier	buf		6114110	0					
ANR	6114134	Identifier	len		6114110	1					
ANR	6114135	Argument	buf_size - len		6114110	1					
ANR	6114136	AdditiveExpression	buf_size - len		6114110	0		-			
ANR	6114137	Identifier	buf_size		6114110	0					
ANR	6114138	Identifier	len		6114110	1					
ANR	6114139	Argument	fmt		6114110	2					
ANR	6114140	Identifier	fmt		6114110	0					
ANR	6114141	Argument	ap		6114110	3					
ANR	6114142	Identifier	ap		6114110	0					
ANR	6114143	ReturnType	static void		6114110	1					
ANR	6114144	Identifier	strcat_vprintf		6114110	2					
ANR	6114145	ParameterList	"char * buf , int buf_size , const char * fmt , va_list ap"		6114110	3					
ANR	6114146	Parameter	char * buf	201:27:4220:4228	6114110	0	True				
ANR	6114147	ParameterType	char *		6114110	0					
ANR	6114148	Identifier	buf		6114110	1					
ANR	6114149	Parameter	int buf_size	201:38:4231:4242	6114110	1	True				
ANR	6114150	ParameterType	int		6114110	0					
ANR	6114151	Identifier	buf_size		6114110	1					
ANR	6114152	Parameter	const char * fmt	201:52:4245:4259	6114110	2	True				
ANR	6114153	ParameterType	const char *		6114110	0					
ANR	6114154	Identifier	fmt		6114110	1					
ANR	6114155	Parameter	va_list ap	201:69:4262:4271	6114110	3	True				
ANR	6114156	ParameterType	va_list		6114110	0					
ANR	6114157	Identifier	ap		6114110	1					
ANR	6114158	CFGEntryNode	ENTRY		6114110		True				
ANR	6114159	CFGExitNode	EXIT		6114110		True				
ANR	6114160	Symbol	strlen		6114110						
ANR	6114161	Symbol	buf		6114110						
ANR	6114162	Symbol	len		6114110						
ANR	6114163	Symbol	buf_size		6114110						
ANR	6114164	Symbol	fmt		6114110						
ANR	6114165	Symbol	ap		6114110						
ANR	6114166	Function	strcat_printf	208:0:4359:4526							
ANR	6114167	FunctionDef	"strcat_printf (char * buf , int buf_size , const char * fmt)"		6114166	0					
ANR	6114168	CompoundStatement		209:0:4434:4526	6114166	0					
ANR	6114169	IdentifierDeclStatement	va_list ap ;	210:1:4437:4447	6114166	0	True				
ANR	6114170	IdentifierDecl	ap		6114166	0					
ANR	6114171	IdentifierDeclType	va_list		6114166	0					
ANR	6114172	Identifier	ap		6114166	1					
ANR	6114173	ExpressionStatement	"va_start ( ap , fmt )"	211:1:4450:4468	6114166	1	True				
ANR	6114174	CallExpression	"va_start ( ap , fmt )"		6114166	0					
ANR	6114175	Callee	va_start		6114166	0					
ANR	6114176	Identifier	va_start		6114166	0					
ANR	6114177	ArgumentList	ap		6114166	1					
ANR	6114178	Argument	ap		6114166	0					
ANR	6114179	Identifier	ap		6114166	0					
ANR	6114180	Argument	fmt		6114166	1					
ANR	6114181	Identifier	fmt		6114166	0					
ANR	6114182	ExpressionStatement	"strcat_vprintf ( buf , buf_size , fmt , ap )"	212:1:4471:4510	6114166	2	True				
ANR	6114183	CallExpression	"strcat_vprintf ( buf , buf_size , fmt , ap )"		6114166	0					
ANR	6114184	Callee	strcat_vprintf		6114166	0					
ANR	6114185	Identifier	strcat_vprintf		6114166	0					
ANR	6114186	ArgumentList	buf		6114166	1					
ANR	6114187	Argument	buf		6114166	0					
ANR	6114188	Identifier	buf		6114166	0					
ANR	6114189	Argument	buf_size		6114166	1					
ANR	6114190	Identifier	buf_size		6114166	0					
ANR	6114191	Argument	fmt		6114166	2					
ANR	6114192	Identifier	fmt		6114166	0					
ANR	6114193	Argument	ap		6114166	3					
ANR	6114194	Identifier	ap		6114166	0					
ANR	6114195	ExpressionStatement	va_end ( ap )	213:1:4513:4524	6114166	3	True				
ANR	6114196	CallExpression	va_end ( ap )		6114166	0					
ANR	6114197	Callee	va_end		6114166	0					
ANR	6114198	Identifier	va_end		6114166	0					
ANR	6114199	ArgumentList	ap		6114166	1					
ANR	6114200	Argument	ap		6114166	0					
ANR	6114201	Identifier	ap		6114166	0					
ANR	6114202	ReturnType	PUB_FUNC void		6114166	1					
ANR	6114203	Identifier	strcat_printf		6114166	2					
ANR	6114204	ParameterList	"char * buf , int buf_size , const char * fmt"		6114166	3					
ANR	6114205	Parameter	char * buf	208:28:4387:4395	6114166	0	True				
ANR	6114206	ParameterType	char *		6114166	0					
ANR	6114207	Identifier	buf		6114166	1					
ANR	6114208	Parameter	int buf_size	208:39:4398:4409	6114166	1	True				
ANR	6114209	ParameterType	int		6114166	0					
ANR	6114210	Identifier	buf_size		6114166	1					
ANR	6114211	Parameter	const char * fmt	208:53:4412:4426	6114166	2	True				
ANR	6114212	ParameterType	const char *		6114166	0					
ANR	6114213	Identifier	fmt		6114166	1					
ANR	6114214	CFGEntryNode	ENTRY		6114166		True				
ANR	6114215	CFGExitNode	EXIT		6114166		True				
ANR	6114216	Symbol	buf		6114166						
ANR	6114217	Symbol	buf_size		6114166						
ANR	6114218	Symbol	fmt		6114166						
ANR	6114219	Symbol	ap		6114166						
ANR	6114220	Function	error1	216:0:4529:5595							
ANR	6114221	FunctionDef	"error1 (TCCState * s1 , int is_warning , const char * fmt , va_list ap)"		6114220	0					
ANR	6114222	CompoundStatement		217:0:4607:5595	6114220	0					
ANR	6114223	IdentifierDeclStatement	char buf [ 2048 ] ;	218:1:4610:4624	6114220	0	True				
ANR	6114224	IdentifierDecl	buf [ 2048 ]		6114220	0					
ANR	6114225	IdentifierDeclType	char [ 2048 ]		6114220	0					
ANR	6114226	Identifier	buf		6114220	1					
ANR	6114227	PrimaryExpression	2048		6114220	2					
ANR	6114228	IdentifierDeclStatement	"BufferedFile * * pf , * f ;"	219:1:4627:4648	6114220	1	True				
ANR	6114229	IdentifierDecl	* * pf		6114220	0					
ANR	6114230	IdentifierDeclType	BufferedFile * *		6114220	0					
ANR	6114231	Identifier	pf		6114220	1					
ANR	6114232	IdentifierDecl	* f		6114220	1					
ANR	6114233	IdentifierDeclType	BufferedFile *		6114220	0					
ANR	6114234	Identifier	f		6114220	1					
ANR	6114235	ExpressionStatement	buf [ 0 ] = '\\0'	221:1:4652:4665	6114220	2	True				
ANR	6114236	AssignmentExpression	buf [ 0 ] = '\\0'		6114220	0		=			
ANR	6114237	ArrayIndexing	buf [ 0 ]		6114220	0					
ANR	6114238	Identifier	buf		6114220	0					
ANR	6114239	PrimaryExpression	0		6114220	1					
ANR	6114240	PrimaryExpression	'\\0'		6114220	1					
ANR	6114241	ForStatement	for ( f = file ; f && f -> filename [ 0 ] == ':' ; f = f -> prev )		6114220	3					
ANR	6114242	ForInit	f = file ;	223:6:4732:4740	6114220	0	True				
ANR	6114243	AssignmentExpression	f = file		6114220	0		=			
ANR	6114244	Identifier	f		6114220	0					
ANR	6114245	Identifier	file		6114220	1					
ANR	6114246	Condition	f && f -> filename [ 0 ] == ':'	223:16:4742:4767	6114220	1	True				
ANR	6114247	AndExpression	f && f -> filename [ 0 ] == ':'		6114220	0		&&			
ANR	6114248	Identifier	f		6114220	0					
ANR	6114249	EqualityExpression	f -> filename [ 0 ] == ':'		6114220	1		==			
ANR	6114250	ArrayIndexing	f -> filename [ 0 ]		6114220	0					
ANR	6114251	PtrMemberAccess	f -> filename		6114220	0					
ANR	6114252	Identifier	f		6114220	0					
ANR	6114253	Identifier	filename		6114220	1					
ANR	6114254	PrimaryExpression	0		6114220	1					
ANR	6114255	PrimaryExpression	':'		6114220	1					
ANR	6114256	AssignmentExpression	f = f -> prev	223:44:4770:4780	6114220	2	True	=			
ANR	6114257	Identifier	f		6114220	0					
ANR	6114258	PtrMemberAccess	f -> prev		6114220	1					
ANR	6114259	Identifier	f		6114220	0					
ANR	6114260	Identifier	prev		6114220	1					
ANR	6114261	CompoundStatement		7:57:175:175	6114220	3					
ANR	6114262	ExpressionStatement		224:2:4787:4787	6114220	0	True				
ANR	6114263	IfStatement	if ( f )		6114220	4					
ANR	6114264	Condition	f	226:5:4797:4797	6114220	0	True				
ANR	6114265	Identifier	f		6114220	0					
ANR	6114266	CompoundStatement		10:8:192:192	6114220	1					
ANR	6114267	ForStatement	for ( pf = s1 -> include_stack ; pf < s1 -> include_stack_ptr ; pf ++ )		6114220	0					
ANR	6114268	ForInit	pf = s1 -> include_stack ;	227:7:4809:4831	6114220	0	True				
ANR	6114269	AssignmentExpression	pf = s1 -> include_stack		6114220	0		=			
ANR	6114270	Identifier	pf		6114220	0					
ANR	6114271	PtrMemberAccess	s1 -> include_stack		6114220	1					
ANR	6114272	Identifier	s1		6114220	0					
ANR	6114273	Identifier	include_stack		6114220	1					
ANR	6114274	Condition	pf < s1 -> include_stack_ptr	227:31:4833:4858	6114220	1	True				
ANR	6114275	RelationalExpression	pf < s1 -> include_stack_ptr		6114220	0		<			
ANR	6114276	Identifier	pf		6114220	0					
ANR	6114277	PtrMemberAccess	s1 -> include_stack_ptr		6114220	1					
ANR	6114278	Identifier	s1		6114220	0					
ANR	6114279	Identifier	include_stack_ptr		6114220	1					
ANR	6114280	PostIncDecOperationExpression	pf ++	227:59:4861:4864	6114220	2	True				
ANR	6114281	Identifier	pf		6114220	0					
ANR	6114282	IncDec	++		6114220	1					
ANR	6114283	CompoundStatement		11:65:259:259	6114220	3					
ANR	6114284	ExpressionStatement	"strcat_printf ( buf , sizeof ( buf ) , ""In file included from %s:%d:\\n"" , ( * pf ) -> filename , ( * pf ) -> line_num )"	228:3:4872:4976	6114220	0	True				
ANR	6114285	CallExpression	"strcat_printf ( buf , sizeof ( buf ) , ""In file included from %s:%d:\\n"" , ( * pf ) -> filename , ( * pf ) -> line_num )"		6114220	0					
ANR	6114286	Callee	strcat_printf		6114220	0					
ANR	6114287	Identifier	strcat_printf		6114220	0					
ANR	6114288	ArgumentList	buf		6114220	1					
ANR	6114289	Argument	buf		6114220	0					
ANR	6114290	Identifier	buf		6114220	0					
ANR	6114291	Argument	sizeof ( buf )		6114220	1					
ANR	6114292	SizeofExpression	sizeof ( buf )		6114220	0					
ANR	6114293	Sizeof	sizeof		6114220	0					
ANR	6114294	SizeofOperand	buf		6114220	1					
ANR	6114295	Argument	"""In file included from %s:%d:\\n"""		6114220	2					
ANR	6114296	PrimaryExpression	"""In file included from %s:%d:\\n"""		6114220	0					
ANR	6114297	Argument	( * pf ) -> filename		6114220	3					
ANR	6114298	PtrMemberAccess	( * pf ) -> filename		6114220	0					
ANR	6114299	UnaryOperationExpression	* pf		6114220	0					
ANR	6114300	UnaryOperator	*		6114220	0					
ANR	6114301	Identifier	pf		6114220	1					
ANR	6114302	Identifier	filename		6114220	1					
ANR	6114303	Argument	( * pf ) -> line_num		6114220	4					
ANR	6114304	PtrMemberAccess	( * pf ) -> line_num		6114220	0					
ANR	6114305	UnaryOperationExpression	* pf		6114220	0					
ANR	6114306	UnaryOperator	*		6114220	0					
ANR	6114307	Identifier	pf		6114220	1					
ANR	6114308	Identifier	line_num		6114220	1					
ANR	6114309	IfStatement	if ( f -> line_num > 0 )		6114220	1					
ANR	6114310	Condition	f -> line_num > 0	231:6:4988:5002	6114220	0	True				
ANR	6114311	RelationalExpression	f -> line_num > 0		6114220	0		>			
ANR	6114312	PtrMemberAccess	f -> line_num		6114220	0					
ANR	6114313	Identifier	f		6114220	0					
ANR	6114314	Identifier	line_num		6114220	1					
ANR	6114315	PrimaryExpression	0		6114220	1					
ANR	6114316	CompoundStatement		15:23:397:397	6114220	1					
ANR	6114317	ExpressionStatement	"strcat_printf ( buf , sizeof ( buf ) , ""%s:%d: "" , f -> filename , f -> line_num )"	232:3:5010:5083	6114220	0	True				
ANR	6114318	CallExpression	"strcat_printf ( buf , sizeof ( buf ) , ""%s:%d: "" , f -> filename , f -> line_num )"		6114220	0					
ANR	6114319	Callee	strcat_printf		6114220	0					
ANR	6114320	Identifier	strcat_printf		6114220	0					
ANR	6114321	ArgumentList	buf		6114220	1					
ANR	6114322	Argument	buf		6114220	0					
ANR	6114323	Identifier	buf		6114220	0					
ANR	6114324	Argument	sizeof ( buf )		6114220	1					
ANR	6114325	SizeofExpression	sizeof ( buf )		6114220	0					
ANR	6114326	Sizeof	sizeof		6114220	0					
ANR	6114327	SizeofOperand	buf		6114220	1					
ANR	6114328	Argument	"""%s:%d: """		6114220	2					
ANR	6114329	PrimaryExpression	"""%s:%d: """		6114220	0					
ANR	6114330	Argument	f -> filename		6114220	3					
ANR	6114331	PtrMemberAccess	f -> filename		6114220	0					
ANR	6114332	Identifier	f		6114220	0					
ANR	6114333	Identifier	filename		6114220	1					
ANR	6114334	Argument	f -> line_num		6114220	4					
ANR	6114335	PtrMemberAccess	f -> line_num		6114220	0					
ANR	6114336	Identifier	f		6114220	0					
ANR	6114337	Identifier	line_num		6114220	1					
ANR	6114338	ElseStatement	else		6114220	0					
ANR	6114339	CompoundStatement		18:9:486:486	6114220	0					
ANR	6114340	ExpressionStatement	"strcat_printf ( buf , sizeof ( buf ) , ""%s: "" , f -> filename )"	235:3:5099:5156	6114220	0	True				
ANR	6114341	CallExpression	"strcat_printf ( buf , sizeof ( buf ) , ""%s: "" , f -> filename )"		6114220	0					
ANR	6114342	Callee	strcat_printf		6114220	0					
ANR	6114343	Identifier	strcat_printf		6114220	0					
ANR	6114344	ArgumentList	buf		6114220	1					
ANR	6114345	Argument	buf		6114220	0					
ANR	6114346	Identifier	buf		6114220	0					
ANR	6114347	Argument	sizeof ( buf )		6114220	1					
ANR	6114348	SizeofExpression	sizeof ( buf )		6114220	0					
ANR	6114349	Sizeof	sizeof		6114220	0					
ANR	6114350	SizeofOperand	buf		6114220	1					
ANR	6114351	Argument	"""%s: """		6114220	2					
ANR	6114352	PrimaryExpression	"""%s: """		6114220	0					
ANR	6114353	Argument	f -> filename		6114220	3					
ANR	6114354	PtrMemberAccess	f -> filename		6114220	0					
ANR	6114355	Identifier	f		6114220	0					
ANR	6114356	Identifier	filename		6114220	1					
ANR	6114357	ElseStatement	else		6114220	0					
ANR	6114358	CompoundStatement		22:8:562:562	6114220	0					
ANR	6114359	ExpressionStatement	"strcat_printf ( buf , sizeof ( buf ) , ""tcc: "" )"	239:2:5174:5215	6114220	0	True				
ANR	6114360	CallExpression	"strcat_printf ( buf , sizeof ( buf ) , ""tcc: "" )"		6114220	0					
ANR	6114361	Callee	strcat_printf		6114220	0					
ANR	6114362	Identifier	strcat_printf		6114220	0					
ANR	6114363	ArgumentList	buf		6114220	1					
ANR	6114364	Argument	buf		6114220	0					
ANR	6114365	Identifier	buf		6114220	0					
ANR	6114366	Argument	sizeof ( buf )		6114220	1					
ANR	6114367	SizeofExpression	sizeof ( buf )		6114220	0					
ANR	6114368	Sizeof	sizeof		6114220	0					
ANR	6114369	SizeofOperand	buf		6114220	1					
ANR	6114370	Argument	"""tcc: """		6114220	2					
ANR	6114371	PrimaryExpression	"""tcc: """		6114220	0					
ANR	6114372	IfStatement	if ( is_warning )		6114220	5					
ANR	6114373	Condition	is_warning	241:5:5225:5234	6114220	0	True				
ANR	6114374	Identifier	is_warning		6114220	0					
ANR	6114375	CompoundStatement		25:17:629:629	6114220	1					
ANR	6114376	ExpressionStatement	"strcat_printf ( buf , sizeof ( buf ) , ""warning: "" )"	242:2:5241:5286	6114220	0	True				
ANR	6114377	CallExpression	"strcat_printf ( buf , sizeof ( buf ) , ""warning: "" )"		6114220	0					
ANR	6114378	Callee	strcat_printf		6114220	0					
ANR	6114379	Identifier	strcat_printf		6114220	0					
ANR	6114380	ArgumentList	buf		6114220	1					
ANR	6114381	Argument	buf		6114220	0					
ANR	6114382	Identifier	buf		6114220	0					
ANR	6114383	Argument	sizeof ( buf )		6114220	1					
ANR	6114384	SizeofExpression	sizeof ( buf )		6114220	0					
ANR	6114385	Sizeof	sizeof		6114220	0					
ANR	6114386	SizeofOperand	buf		6114220	1					
ANR	6114387	Argument	"""warning: """		6114220	2					
ANR	6114388	PrimaryExpression	"""warning: """		6114220	0					
ANR	6114389	ElseStatement	else		6114220	0					
ANR	6114390	CompoundStatement		27:8:688:688	6114220	0					
ANR	6114391	ExpressionStatement	"strcat_printf ( buf , sizeof ( buf ) , ""error: "" )"	244:2:5300:5343	6114220	0	True				
ANR	6114392	CallExpression	"strcat_printf ( buf , sizeof ( buf ) , ""error: "" )"		6114220	0					
ANR	6114393	Callee	strcat_printf		6114220	0					
ANR	6114394	Identifier	strcat_printf		6114220	0					
ANR	6114395	ArgumentList	buf		6114220	1					
ANR	6114396	Argument	buf		6114220	0					
ANR	6114397	Identifier	buf		6114220	0					
ANR	6114398	Argument	sizeof ( buf )		6114220	1					
ANR	6114399	SizeofExpression	sizeof ( buf )		6114220	0					
ANR	6114400	Sizeof	sizeof		6114220	0					
ANR	6114401	SizeofOperand	buf		6114220	1					
ANR	6114402	Argument	"""error: """		6114220	2					
ANR	6114403	PrimaryExpression	"""error: """		6114220	0					
ANR	6114404	ExpressionStatement	"strcat_vprintf ( buf , sizeof ( buf ) , fmt , ap )"	246:1:5349:5391	6114220	6	True				
ANR	6114405	CallExpression	"strcat_vprintf ( buf , sizeof ( buf ) , fmt , ap )"		6114220	0					
ANR	6114406	Callee	strcat_vprintf		6114220	0					
ANR	6114407	Identifier	strcat_vprintf		6114220	0					
ANR	6114408	ArgumentList	buf		6114220	1					
ANR	6114409	Argument	buf		6114220	0					
ANR	6114410	Identifier	buf		6114220	0					
ANR	6114411	Argument	sizeof ( buf )		6114220	1					
ANR	6114412	SizeofExpression	sizeof ( buf )		6114220	0					
ANR	6114413	Sizeof	sizeof		6114220	0					
ANR	6114414	SizeofOperand	buf		6114220	1					
ANR	6114415	Argument	fmt		6114220	2					
ANR	6114416	Identifier	fmt		6114220	0					
ANR	6114417	Argument	ap		6114220	3					
ANR	6114418	Identifier	ap		6114220	0					
ANR	6114419	IfStatement	if ( ! s1 -> error_func )		6114220	7					
ANR	6114420	Condition	! s1 -> error_func	248:5:5399:5413	6114220	0	True				
ANR	6114421	UnaryOperationExpression	! s1 -> error_func		6114220	0					
ANR	6114422	UnaryOperator	!		6114220	0					
ANR	6114423	PtrMemberAccess	s1 -> error_func		6114220	1					
ANR	6114424	Identifier	s1		6114220	0					
ANR	6114425	Identifier	error_func		6114220	1					
ANR	6114426	CompoundStatement		32:22:808:808	6114220	1					
ANR	6114427	ExpressionStatement	"fprintf ( stderr , ""%s\\n"" , buf )"	250:2:5449:5478	6114220	0	True				
ANR	6114428	CallExpression	"fprintf ( stderr , ""%s\\n"" , buf )"		6114220	0					
ANR	6114429	Callee	fprintf		6114220	0					
ANR	6114430	Identifier	fprintf		6114220	0					
ANR	6114431	ArgumentList	stderr		6114220	1					
ANR	6114432	Argument	stderr		6114220	0					
ANR	6114433	Identifier	stderr		6114220	0					
ANR	6114434	Argument	"""%s\\n"""		6114220	1					
ANR	6114435	PrimaryExpression	"""%s\\n"""		6114220	0					
ANR	6114436	Argument	buf		6114220	2					
ANR	6114437	Identifier	buf		6114220	0					
ANR	6114438	ElseStatement	else		6114220	0					
ANR	6114439	CompoundStatement		35:8:880:880	6114220	0					
ANR	6114440	ExpressionStatement	"s1 -> error_func ( s1 -> error_opaque , buf )"	252:2:5492:5530	6114220	0	True				
ANR	6114441	CallExpression	"s1 -> error_func ( s1 -> error_opaque , buf )"		6114220	0					
ANR	6114442	Callee	s1 -> error_func		6114220	0					
ANR	6114443	PtrMemberAccess	s1 -> error_func		6114220	0					
ANR	6114444	Identifier	s1		6114220	0					
ANR	6114445	Identifier	error_func		6114220	1					
ANR	6114446	ArgumentList	s1 -> error_opaque		6114220	1					
ANR	6114447	Argument	s1 -> error_opaque		6114220	0					
ANR	6114448	PtrMemberAccess	s1 -> error_opaque		6114220	0					
ANR	6114449	Identifier	s1		6114220	0					
ANR	6114450	Identifier	error_opaque		6114220	1					
ANR	6114451	Argument	buf		6114220	1					
ANR	6114452	Identifier	buf		6114220	0					
ANR	6114453	IfStatement	if ( ! is_warning || s1 -> warn_error )		6114220	8					
ANR	6114454	Condition	! is_warning || s1 -> warn_error	254:5:5540:5568	6114220	0	True				
ANR	6114455	OrExpression	! is_warning || s1 -> warn_error		6114220	0		||			
ANR	6114456	UnaryOperationExpression	! is_warning		6114220	0					
ANR	6114457	UnaryOperator	!		6114220	0					
ANR	6114458	Identifier	is_warning		6114220	1					
ANR	6114459	PtrMemberAccess	s1 -> warn_error		6114220	1					
ANR	6114460	Identifier	s1		6114220	0					
ANR	6114461	Identifier	warn_error		6114220	1					
ANR	6114462	CompoundStatement		38:36:963:963	6114220	1					
ANR	6114463	ExpressionStatement	s1 -> nb_errors ++	255:2:5575:5590	6114220	0	True				
ANR	6114464	PostIncDecOperationExpression	s1 -> nb_errors ++		6114220	0					
ANR	6114465	PtrMemberAccess	s1 -> nb_errors		6114220	0					
ANR	6114466	Identifier	s1		6114220	0					
ANR	6114467	Identifier	nb_errors		6114220	1					
ANR	6114468	IncDec	++		6114220	1					
ANR	6114469	ReturnType	static void		6114220	1					
ANR	6114470	Identifier	error1		6114220	2					
ANR	6114471	ParameterList	"TCCState * s1 , int is_warning , const char * fmt , va_list ap"		6114220	3					
ANR	6114472	Parameter	TCCState * s1	216:19:4548:4559	6114220	0	True				
ANR	6114473	ParameterType	TCCState *		6114220	0					
ANR	6114474	Identifier	s1		6114220	1					
ANR	6114475	Parameter	int is_warning	216:33:4562:4575	6114220	1	True				
ANR	6114476	ParameterType	int		6114220	0					
ANR	6114477	Identifier	is_warning		6114220	1					
ANR	6114478	Parameter	const char * fmt	216:49:4578:4592	6114220	2	True				
ANR	6114479	ParameterType	const char *		6114220	0					
ANR	6114480	Identifier	fmt		6114220	1					
ANR	6114481	Parameter	va_list ap	216:66:4595:4604	6114220	3	True				
ANR	6114482	ParameterType	va_list		6114220	0					
ANR	6114483	Identifier	ap		6114220	1					
ANR	6114484	CFGEntryNode	ENTRY		6114220		True				
ANR	6114485	CFGExitNode	EXIT		6114220		True				
ANR	6114486	Symbol	f -> line_num		6114220						
ANR	6114487	Symbol	( * pf ) -> filename		6114220						
ANR	6114488	Symbol	* f -> filename		6114220						
ANR	6114489	Symbol	( * pf ) -> line_num		6114220						
ANR	6114490	Symbol	* s1		6114220						
ANR	6114491	Symbol	s1 -> include_stack_ptr		6114220						
ANR	6114492	Symbol	s1 -> error_func		6114220						
ANR	6114493	Symbol	fmt		6114220						
ANR	6114494	Symbol	file		6114220						
ANR	6114495	Symbol	s1 -> warn_error		6114220						
ANR	6114496	Symbol	s1		6114220						
ANR	6114497	Symbol	* * pf		6114220						
ANR	6114498	Symbol	* buf		6114220						
ANR	6114499	Symbol	* * f		6114220						
ANR	6114500	Symbol	f		6114220						
ANR	6114501	Symbol	stderr		6114220						
ANR	6114502	Symbol	f -> prev		6114220						
ANR	6114503	Symbol	ap		6114220						
ANR	6114504	Symbol	s1 -> include_stack		6114220						
ANR	6114505	Symbol	* f		6114220						
ANR	6114506	Symbol	buf		6114220						
ANR	6114507	Symbol	s1 -> error_opaque		6114220						
ANR	6114508	Symbol	f -> filename		6114220						
ANR	6114509	Symbol	is_warning		6114220						
ANR	6114510	Symbol	pf		6114220						
ANR	6114511	Symbol	s1 -> nb_errors		6114220						
ANR	6114512	Symbol	* pf		6114220						
ANR	6114513	Function	tcc_set_error_func	259:0:5598:5786							
ANR	6114514	FunctionDef	"tcc_set_error_func (TCCState * s , void * error_opaque , void ( * error_func ) ( void * opaque , const char * msg ))"		6114513	0					
ANR	6114515	CompoundStatement		261:0:5722:5786	6114513	0					
ANR	6114516	ExpressionStatement	s -> error_opaque = error_opaque	262:1:5725:5755	6114513	0	True				
ANR	6114517	AssignmentExpression	s -> error_opaque = error_opaque		6114513	0		=			
ANR	6114518	PtrMemberAccess	s -> error_opaque		6114513	0					
ANR	6114519	Identifier	s		6114513	0					
ANR	6114520	Identifier	error_opaque		6114513	1					
ANR	6114521	Identifier	error_opaque		6114513	1					
ANR	6114522	ExpressionStatement	s -> error_func = error_func	263:1:5758:5784	6114513	1	True				
ANR	6114523	AssignmentExpression	s -> error_func = error_func		6114513	0		=			
ANR	6114524	PtrMemberAccess	s -> error_func		6114513	0					
ANR	6114525	Identifier	s		6114513	0					
ANR	6114526	Identifier	error_func		6114513	1					
ANR	6114527	Identifier	error_func		6114513	1					
ANR	6114528	ReturnType	LIBTCCAPI void		6114513	1					
ANR	6114529	Identifier	tcc_set_error_func		6114513	2					
ANR	6114530	ParameterList	"TCCState * s , void * error_opaque , void ( * error_func ) ( void * opaque , const char * msg )"		6114513	3					
ANR	6114531	Parameter	TCCState * s	259:34:5632:5642	6114513	0	True				
ANR	6114532	ParameterType	TCCState *		6114513	0					
ANR	6114533	Identifier	s		6114513	1					
ANR	6114534	Parameter	void * error_opaque	259:47:5645:5662	6114513	1	True				
ANR	6114535	ParameterType	void *		6114513	0					
ANR	6114536	Identifier	error_opaque		6114513	1					
ANR	6114537	Parameter	"void ( * error_func ) ( void * opaque , const char * msg )"	260:6:5671:5719	6114513	2	True				
ANR	6114538	ParameterType	"(( void * opaque , const char * msg ) void) *"		6114513	0					
ANR	6114539	Identifier	error_func		6114513	1					
ANR	6114540	CFGEntryNode	ENTRY		6114513		True				
ANR	6114541	CFGExitNode	EXIT		6114513		True				
ANR	6114542	Symbol	s -> error_opaque		6114513						
ANR	6114543	Symbol	s		6114513						
ANR	6114544	Symbol	s -> error_func		6114513						
ANR	6114545	Symbol	error_func		6114513						
ANR	6114546	Symbol	* s		6114513						
ANR	6114547	Symbol	error_opaque		6114513						
ANR	6114548	Function	tcc_error	267:0:5838:5988							
ANR	6114549	FunctionDef	tcc_error (const char * fmt)		6114548	0					
ANR	6114550	CompoundStatement		268:0:5884:5988	6114548	0					
ANR	6114551	IdentifierDeclStatement	TCCState * s1 = tcc_state ;	269:1:5887:5911	6114548	0	True				
ANR	6114552	IdentifierDecl	* s1 = tcc_state		6114548	0					
ANR	6114553	IdentifierDeclType	TCCState *		6114548	0					
ANR	6114554	Identifier	s1		6114548	1					
ANR	6114555	AssignmentExpression	* s1 = tcc_state		6114548	2		=			
ANR	6114556	Identifier	tcc_state		6114548	0					
ANR	6114557	Identifier	tcc_state		6114548	1					
ANR	6114558	IdentifierDeclStatement	va_list ap ;	270:1:5914:5924	6114548	1	True				
ANR	6114559	IdentifierDecl	ap		6114548	0					
ANR	6114560	IdentifierDeclType	va_list		6114548	0					
ANR	6114561	Identifier	ap		6114548	1					
ANR	6114562	ExpressionStatement	"va_start ( ap , fmt )"	272:1:5928:5946	6114548	2	True				
ANR	6114563	CallExpression	"va_start ( ap , fmt )"		6114548	0					
ANR	6114564	Callee	va_start		6114548	0					
ANR	6114565	Identifier	va_start		6114548	0					
ANR	6114566	ArgumentList	ap		6114548	1					
ANR	6114567	Argument	ap		6114548	0					
ANR	6114568	Identifier	ap		6114548	0					
ANR	6114569	Argument	fmt		6114548	1					
ANR	6114570	Identifier	fmt		6114548	0					
ANR	6114571	ExpressionStatement	"error1 ( s1 , 0 , fmt , ap )"	273:1:5949:5972	6114548	3	True				
ANR	6114572	CallExpression	"error1 ( s1 , 0 , fmt , ap )"		6114548	0					
ANR	6114573	Callee	error1		6114548	0					
ANR	6114574	Identifier	error1		6114548	0					
ANR	6114575	ArgumentList	s1		6114548	1					
ANR	6114576	Argument	s1		6114548	0					
ANR	6114577	Identifier	s1		6114548	0					
ANR	6114578	Argument	0		6114548	1					
ANR	6114579	PrimaryExpression	0		6114548	0					
ANR	6114580	Argument	fmt		6114548	2					
ANR	6114581	Identifier	fmt		6114548	0					
ANR	6114582	Argument	ap		6114548	3					
ANR	6114583	Identifier	ap		6114548	0					
ANR	6114584	ExpressionStatement	va_end ( ap )	274:1:5975:5986	6114548	4	True				
ANR	6114585	CallExpression	va_end ( ap )		6114548	0					
ANR	6114586	Callee	va_end		6114548	0					
ANR	6114587	Identifier	va_end		6114548	0					
ANR	6114588	ArgumentList	ap		6114548	1					
ANR	6114589	Argument	ap		6114548	0					
ANR	6114590	Identifier	ap		6114548	0					
ANR	6114591	ReturnType	PUB_FUNC void		6114548	1					
ANR	6114592	Identifier	tcc_error		6114548	2					
ANR	6114593	ParameterList	const char * fmt		6114548	3					
ANR	6114594	Parameter	const char * fmt	267:24:5862:5876	6114548	0	True				
ANR	6114595	ParameterType	const char *		6114548	0					
ANR	6114596	Identifier	fmt		6114548	1					
ANR	6114597	CFGEntryNode	ENTRY		6114548		True				
ANR	6114598	CFGExitNode	EXIT		6114548		True				
ANR	6114599	Symbol	tcc_state		6114548						
ANR	6114600	Symbol	fmt		6114548						
ANR	6114601	Symbol	s1		6114548						
ANR	6114602	Symbol	ap		6114548						
ANR	6114603	Function	tcc_warning	277:0:5991:6179							
ANR	6114604	FunctionDef	tcc_warning (const char * fmt)		6114603	0					
ANR	6114605	CompoundStatement		278:0:6039:6179	6114603	0					
ANR	6114606	IdentifierDeclStatement	TCCState * s1 = tcc_state ;	279:1:6042:6066	6114603	0	True				
ANR	6114607	IdentifierDecl	* s1 = tcc_state		6114603	0					
ANR	6114608	IdentifierDeclType	TCCState *		6114603	0					
ANR	6114609	Identifier	s1		6114603	1					
ANR	6114610	AssignmentExpression	* s1 = tcc_state		6114603	2		=			
ANR	6114611	Identifier	tcc_state		6114603	0					
ANR	6114612	Identifier	tcc_state		6114603	1					
ANR	6114613	IdentifierDeclStatement	va_list ap ;	280:1:6069:6079	6114603	1	True				
ANR	6114614	IdentifierDecl	ap		6114603	0					
ANR	6114615	IdentifierDeclType	va_list		6114603	0					
ANR	6114616	Identifier	ap		6114603	1					
ANR	6114617	IfStatement	if ( s1 -> warn_none )		6114603	2					
ANR	6114618	Condition	s1 -> warn_none	282:5:6087:6099	6114603	0	True				
ANR	6114619	PtrMemberAccess	s1 -> warn_none		6114603	0					
ANR	6114620	Identifier	s1		6114603	0					
ANR	6114621	Identifier	warn_none		6114603	1					
ANR	6114622	CompoundStatement		5:20:62:62	6114603	1					
ANR	6114623	ReturnStatement	return ;	283:2:6106:6112	6114603	0	True				
ANR	6114624	ExpressionStatement	"va_start ( ap , fmt )"	286:1:6119:6137	6114603	3	True				
ANR	6114625	CallExpression	"va_start ( ap , fmt )"		6114603	0					
ANR	6114626	Callee	va_start		6114603	0					
ANR	6114627	Identifier	va_start		6114603	0					
ANR	6114628	ArgumentList	ap		6114603	1					
ANR	6114629	Argument	ap		6114603	0					
ANR	6114630	Identifier	ap		6114603	0					
ANR	6114631	Argument	fmt		6114603	1					
ANR	6114632	Identifier	fmt		6114603	0					
ANR	6114633	ExpressionStatement	"error1 ( s1 , 1 , fmt , ap )"	287:1:6140:6163	6114603	4	True				
ANR	6114634	CallExpression	"error1 ( s1 , 1 , fmt , ap )"		6114603	0					
ANR	6114635	Callee	error1		6114603	0					
ANR	6114636	Identifier	error1		6114603	0					
ANR	6114637	ArgumentList	s1		6114603	1					
ANR	6114638	Argument	s1		6114603	0					
ANR	6114639	Identifier	s1		6114603	0					
ANR	6114640	Argument	1		6114603	1					
ANR	6114641	PrimaryExpression	1		6114603	0					
ANR	6114642	Argument	fmt		6114603	2					
ANR	6114643	Identifier	fmt		6114603	0					
ANR	6114644	Argument	ap		6114603	3					
ANR	6114645	Identifier	ap		6114603	0					
ANR	6114646	ExpressionStatement	va_end ( ap )	288:1:6166:6177	6114603	5	True				
ANR	6114647	CallExpression	va_end ( ap )		6114603	0					
ANR	6114648	Callee	va_end		6114603	0					
ANR	6114649	Identifier	va_end		6114603	0					
ANR	6114650	ArgumentList	ap		6114603	1					
ANR	6114651	Argument	ap		6114603	0					
ANR	6114652	Identifier	ap		6114603	0					
ANR	6114653	ReturnType	PUB_FUNC void		6114603	1					
ANR	6114654	Identifier	tcc_warning		6114603	2					
ANR	6114655	ParameterList	const char * fmt		6114603	3					
ANR	6114656	Parameter	const char * fmt	277:26:6017:6031	6114603	0	True				
ANR	6114657	ParameterType	const char *		6114603	0					
ANR	6114658	Identifier	fmt		6114603	1					
ANR	6114659	CFGEntryNode	ENTRY		6114603		True				
ANR	6114660	CFGExitNode	EXIT		6114603		True				
ANR	6114661	Symbol	tcc_state		6114603						
ANR	6114662	Symbol	* s1		6114603						
ANR	6114663	Symbol	s1 -> warn_none		6114603						
ANR	6114664	Symbol	fmt		6114603						
ANR	6114665	Symbol	s1		6114603						
ANR	6114666	Symbol	ap		6114603						
ANR	6114667	Function	tcc_open_bf	294:0:6258:6803							
ANR	6114668	FunctionDef	"tcc_open_bf (TCCState * s1 , const char * filename , int initlen)"		6114667	0					
ANR	6114669	CompoundStatement		295:0:6332:6803	6114667	0					
ANR	6114670	IdentifierDeclStatement	BufferedFile * bf ;	296:1:6335:6351	6114667	0	True				
ANR	6114671	IdentifierDecl	* bf		6114667	0					
ANR	6114672	IdentifierDeclType	BufferedFile *		6114667	0					
ANR	6114673	Identifier	bf		6114667	1					
ANR	6114674	IdentifierDeclStatement	int buflen = initlen ? initlen : IO_BUF_SIZE ;	297:1:6354:6396	6114667	1	True				
ANR	6114675	IdentifierDecl	buflen = initlen ? initlen : IO_BUF_SIZE		6114667	0					
ANR	6114676	IdentifierDeclType	int		6114667	0					
ANR	6114677	Identifier	buflen		6114667	1					
ANR	6114678	AssignmentExpression	buflen = initlen ? initlen : IO_BUF_SIZE		6114667	2		=			
ANR	6114679	Identifier	buflen		6114667	0					
ANR	6114680	ConditionalExpression	initlen ? initlen : IO_BUF_SIZE		6114667	1					
ANR	6114681	Condition	initlen		6114667	0					
ANR	6114682	Identifier	initlen		6114667	0					
ANR	6114683	Identifier	initlen		6114667	1					
ANR	6114684	Identifier	IO_BUF_SIZE		6114667	2					
ANR	6114685	ExpressionStatement	bf = malloc ( sizeof ( BufferedFile ) + buflen )	299:1:6400:6443	6114667	2	True				
ANR	6114686	AssignmentExpression	bf = malloc ( sizeof ( BufferedFile ) + buflen )		6114667	0		=			
ANR	6114687	Identifier	bf		6114667	0					
ANR	6114688	CallExpression	malloc ( sizeof ( BufferedFile ) + buflen )		6114667	1					
ANR	6114689	Callee	malloc		6114667	0					
ANR	6114690	Identifier	malloc		6114667	0					
ANR	6114691	ArgumentList	sizeof ( BufferedFile ) + buflen		6114667	1					
ANR	6114692	Argument	sizeof ( BufferedFile ) + buflen		6114667	0					
ANR	6114693	AdditiveExpression	sizeof ( BufferedFile ) + buflen		6114667	0		+			
ANR	6114694	SizeofExpression	sizeof ( BufferedFile )		6114667	0					
ANR	6114695	Sizeof	sizeof		6114667	0					
ANR	6114696	SizeofOperand	BufferedFile		6114667	1					
ANR	6114697	Identifier	buflen		6114667	1					
ANR	6114698	ExpressionStatement	bf -> buf_ptr = bf -> buffer	300:1:6446:6470	6114667	3	True				
ANR	6114699	AssignmentExpression	bf -> buf_ptr = bf -> buffer		6114667	0		=			
ANR	6114700	PtrMemberAccess	bf -> buf_ptr		6114667	0					
ANR	6114701	Identifier	bf		6114667	0					
ANR	6114702	Identifier	buf_ptr		6114667	1					
ANR	6114703	PtrMemberAccess	bf -> buffer		6114667	1					
ANR	6114704	Identifier	bf		6114667	0					
ANR	6114705	Identifier	buffer		6114667	1					
ANR	6114706	ExpressionStatement	bf -> buf_end = bf -> buffer + initlen	301:1:6473:6507	6114667	4	True				
ANR	6114707	AssignmentExpression	bf -> buf_end = bf -> buffer + initlen		6114667	0		=			
ANR	6114708	PtrMemberAccess	bf -> buf_end		6114667	0					
ANR	6114709	Identifier	bf		6114667	0					
ANR	6114710	Identifier	buf_end		6114667	1					
ANR	6114711	AdditiveExpression	bf -> buffer + initlen		6114667	1		+			
ANR	6114712	PtrMemberAccess	bf -> buffer		6114667	0					
ANR	6114713	Identifier	bf		6114667	0					
ANR	6114714	Identifier	buffer		6114667	1					
ANR	6114715	Identifier	initlen		6114667	1					
ANR	6114716	ExpressionStatement	bf -> buf_end [ 0 ] = CH_EOB	302:1:6510:6533	6114667	5	True				
ANR	6114717	AssignmentExpression	bf -> buf_end [ 0 ] = CH_EOB		6114667	0		=			
ANR	6114718	ArrayIndexing	bf -> buf_end [ 0 ]		6114667	0					
ANR	6114719	PtrMemberAccess	bf -> buf_end		6114667	0					
ANR	6114720	Identifier	bf		6114667	0					
ANR	6114721	Identifier	buf_end		6114667	1					
ANR	6114722	PrimaryExpression	0		6114667	1					
ANR	6114723	Identifier	CH_EOB		6114667	1					
ANR	6114724	ExpressionStatement	"pstrcpy ( bf -> filename , sizeof ( bf -> filename ) , filename )"	303:1:6556:6610	6114667	6	True				
ANR	6114725	CallExpression	"pstrcpy ( bf -> filename , sizeof ( bf -> filename ) , filename )"		6114667	0					
ANR	6114726	Callee	pstrcpy		6114667	0					
ANR	6114727	Identifier	pstrcpy		6114667	0					
ANR	6114728	ArgumentList	bf -> filename		6114667	1					
ANR	6114729	Argument	bf -> filename		6114667	0					
ANR	6114730	PtrMemberAccess	bf -> filename		6114667	0					
ANR	6114731	Identifier	bf		6114667	0					
ANR	6114732	Identifier	filename		6114667	1					
ANR	6114733	Argument	sizeof ( bf -> filename )		6114667	1					
ANR	6114734	SizeofExpression	sizeof ( bf -> filename )		6114667	0					
ANR	6114735	Sizeof	sizeof		6114667	0					
ANR	6114736	PtrMemberAccess	bf -> filename		6114667	1					
ANR	6114737	Identifier	bf		6114667	0					
ANR	6114738	Identifier	filename		6114667	1					
ANR	6114739	Argument	filename		6114667	2					
ANR	6114740	Identifier	filename		6114667	0					
ANR	6114741	ExpressionStatement	normalize_slashes ( bf -> filename )	305:1:6632:6664	6114667	7	True				
ANR	6114742	CallExpression	normalize_slashes ( bf -> filename )		6114667	0					
ANR	6114743	Callee	normalize_slashes		6114667	0					
ANR	6114744	Identifier	normalize_slashes		6114667	0					
ANR	6114745	ArgumentList	bf -> filename		6114667	1					
ANR	6114746	Argument	bf -> filename		6114667	0					
ANR	6114747	PtrMemberAccess	bf -> filename		6114667	0					
ANR	6114748	Identifier	bf		6114667	0					
ANR	6114749	Identifier	filename		6114667	1					
ANR	6114750	ExpressionStatement	bf -> line_num = 1	307:1:6674:6690	6114667	8	True				
ANR	6114751	AssignmentExpression	bf -> line_num = 1		6114667	0		=			
ANR	6114752	PtrMemberAccess	bf -> line_num		6114667	0					
ANR	6114753	Identifier	bf		6114667	0					
ANR	6114754	Identifier	line_num		6114667	1					
ANR	6114755	PrimaryExpression	1		6114667	1					
ANR	6114756	ExpressionStatement	bf -> ifndef_macro = 0	308:1:6693:6713	6114667	9	True				
ANR	6114757	AssignmentExpression	bf -> ifndef_macro = 0		6114667	0		=			
ANR	6114758	PtrMemberAccess	bf -> ifndef_macro		6114667	0					
ANR	6114759	Identifier	bf		6114667	0					
ANR	6114760	Identifier	ifndef_macro		6114667	1					
ANR	6114761	PrimaryExpression	0		6114667	1					
ANR	6114762	ExpressionStatement	bf -> ifdef_stack_ptr = s1 -> ifdef_stack_ptr	309:1:6716:6757	6114667	10	True				
ANR	6114763	AssignmentExpression	bf -> ifdef_stack_ptr = s1 -> ifdef_stack_ptr		6114667	0		=			
ANR	6114764	PtrMemberAccess	bf -> ifdef_stack_ptr		6114667	0					
ANR	6114765	Identifier	bf		6114667	0					
ANR	6114766	Identifier	ifdef_stack_ptr		6114667	1					
ANR	6114767	PtrMemberAccess	s1 -> ifdef_stack_ptr		6114667	1					
ANR	6114768	Identifier	s1		6114667	0					
ANR	6114769	Identifier	ifdef_stack_ptr		6114667	1					
ANR	6114770	ExpressionStatement	bf -> fd = - 1	310:1:6760:6771	6114667	11	True				
ANR	6114771	AssignmentExpression	bf -> fd = - 1		6114667	0		=			
ANR	6114772	PtrMemberAccess	bf -> fd		6114667	0					
ANR	6114773	Identifier	bf		6114667	0					
ANR	6114774	Identifier	fd		6114667	1					
ANR	6114775	UnaryOperationExpression	- 1		6114667	1					
ANR	6114776	UnaryOperator	-		6114667	0					
ANR	6114777	PrimaryExpression	1		6114667	1					
ANR	6114778	ExpressionStatement	bf -> prev = file	311:1:6774:6789	6114667	12	True				
ANR	6114779	AssignmentExpression	bf -> prev = file		6114667	0		=			
ANR	6114780	PtrMemberAccess	bf -> prev		6114667	0					
ANR	6114781	Identifier	bf		6114667	0					
ANR	6114782	Identifier	prev		6114667	1					
ANR	6114783	Identifier	file		6114667	1					
ANR	6114784	ExpressionStatement	file = bf	312:1:6792:6801	6114667	13	True				
ANR	6114785	AssignmentExpression	file = bf		6114667	0		=			
ANR	6114786	Identifier	file		6114667	0					
ANR	6114787	Identifier	bf		6114667	1					
ANR	6114788	ReturnType	ST_FUNC void		6114667	1					
ANR	6114789	Identifier	tcc_open_bf		6114667	2					
ANR	6114790	ParameterList	"TCCState * s1 , const char * filename , int initlen"		6114667	3					
ANR	6114791	Parameter	TCCState * s1	294:25:6283:6294	6114667	0	True				
ANR	6114792	ParameterType	TCCState *		6114667	0					
ANR	6114793	Identifier	s1		6114667	1					
ANR	6114794	Parameter	const char * filename	294:39:6297:6316	6114667	1	True				
ANR	6114795	ParameterType	const char *		6114667	0					
ANR	6114796	Identifier	filename		6114667	1					
ANR	6114797	Parameter	int initlen	294:61:6319:6329	6114667	2	True				
ANR	6114798	ParameterType	int		6114667	0					
ANR	6114799	Identifier	initlen		6114667	1					
ANR	6114800	CFGEntryNode	ENTRY		6114667		True				
ANR	6114801	CFGExitNode	EXIT		6114667		True				
ANR	6114802	Symbol	malloc		6114667						
ANR	6114803	Symbol	initlen		6114667						
ANR	6114804	Symbol	bf		6114667						
ANR	6114805	Symbol	bf -> prev		6114667						
ANR	6114806	Symbol	bf -> buf_end		6114667						
ANR	6114807	Symbol	* s1		6114667						
ANR	6114808	Symbol	* bf		6114667						
ANR	6114809	Symbol	CH_EOB		6114667						
ANR	6114810	Symbol	bf -> buffer		6114667						
ANR	6114811	Symbol	bf -> fd		6114667						
ANR	6114812	Symbol	* * bf		6114667						
ANR	6114813	Symbol	* bf -> buf_end		6114667						
ANR	6114814	Symbol	filename		6114667						
ANR	6114815	Symbol	bf -> buf_ptr		6114667						
ANR	6114816	Symbol	bf -> ifdef_stack_ptr		6114667						
ANR	6114817	Symbol	file		6114667						
ANR	6114818	Symbol	bf -> filename		6114667						
ANR	6114819	Symbol	s1 -> ifdef_stack_ptr		6114667						
ANR	6114820	Symbol	bf -> line_num		6114667						
ANR	6114821	Symbol	buflen		6114667						
ANR	6114822	Symbol	bf -> ifndef_macro		6114667						
ANR	6114823	Symbol	IO_BUF_SIZE		6114667						
ANR	6114824	Symbol	s1		6114667						
ANR	6114825	Function	tcc_close	315:0:6806:6964							
ANR	6114826	FunctionDef	tcc_close ()		6114825	0					
ANR	6114827	CompoundStatement		316:0:6835:6964	6114825	0					
ANR	6114828	IdentifierDeclStatement	BufferedFile * bf = file ;	317:1:6838:6861	6114825	0	True				
ANR	6114829	IdentifierDecl	* bf = file		6114825	0					
ANR	6114830	IdentifierDeclType	BufferedFile *		6114825	0					
ANR	6114831	Identifier	bf		6114825	1					
ANR	6114832	AssignmentExpression	* bf = file		6114825	2		=			
ANR	6114833	Identifier	file		6114825	0					
ANR	6114834	Identifier	file		6114825	1					
ANR	6114835	IfStatement	if ( bf -> fd > 0 )		6114825	1					
ANR	6114836	Condition	bf -> fd > 0	318:5:6868:6877	6114825	0	True				
ANR	6114837	RelationalExpression	bf -> fd > 0		6114825	0		>			
ANR	6114838	PtrMemberAccess	bf -> fd		6114825	0					
ANR	6114839	Identifier	bf		6114825	0					
ANR	6114840	Identifier	fd		6114825	1					
ANR	6114841	PrimaryExpression	0		6114825	1					
ANR	6114842	CompoundStatement		3:17:44:44	6114825	1					
ANR	6114843	ExpressionStatement	close ( bf -> fd )	319:2:6884:6898	6114825	0	True				
ANR	6114844	CallExpression	close ( bf -> fd )		6114825	0					
ANR	6114845	Callee	close		6114825	0					
ANR	6114846	Identifier	close		6114825	0					
ANR	6114847	ArgumentList	bf -> fd		6114825	1					
ANR	6114848	Argument	bf -> fd		6114825	0					
ANR	6114849	PtrMemberAccess	bf -> fd		6114825	0					
ANR	6114850	Identifier	bf		6114825	0					
ANR	6114851	Identifier	fd		6114825	1					
ANR	6114852	ExpressionStatement	total_lines += bf -> line_num	320:2:6902:6929	6114825	1	True				
ANR	6114853	AssignmentExpression	total_lines += bf -> line_num		6114825	0		+=			
ANR	6114854	Identifier	total_lines		6114825	0					
ANR	6114855	PtrMemberAccess	bf -> line_num		6114825	1					
ANR	6114856	Identifier	bf		6114825	0					
ANR	6114857	Identifier	line_num		6114825	1					
ANR	6114858	ExpressionStatement	file = bf -> prev	322:1:6935:6950	6114825	2	True				
ANR	6114859	AssignmentExpression	file = bf -> prev		6114825	0		=			
ANR	6114860	Identifier	file		6114825	0					
ANR	6114861	PtrMemberAccess	bf -> prev		6114825	1					
ANR	6114862	Identifier	bf		6114825	0					
ANR	6114863	Identifier	prev		6114825	1					
ANR	6114864	ExpressionStatement	free ( bf )	323:1:6953:6962	6114825	3	True				
ANR	6114865	CallExpression	free ( bf )		6114825	0					
ANR	6114866	Callee	free		6114825	0					
ANR	6114867	Identifier	free		6114825	0					
ANR	6114868	ArgumentList	bf		6114825	1					
ANR	6114869	Argument	bf		6114825	0					
ANR	6114870	Identifier	bf		6114825	0					
ANR	6114871	ReturnType	ST_FUNC void		6114825	1					
ANR	6114872	Identifier	tcc_close		6114825	2					
ANR	6114873	ParameterList			6114825	3					
ANR	6114874	CFGEntryNode	ENTRY		6114825		True				
ANR	6114875	CFGExitNode	EXIT		6114825		True				
ANR	6114876	Symbol	bf -> fd		6114825						
ANR	6114877	Symbol	file		6114825						
ANR	6114878	Symbol	bf		6114825						
ANR	6114879	Symbol	bf -> prev		6114825						
ANR	6114880	Symbol	bf -> line_num		6114825						
ANR	6114881	Symbol	* bf		6114825						
ANR	6114882	Symbol	total_lines		6114825						
ANR	6114883	Function	tcc_open	326:0:6967:7425							
ANR	6114884	FunctionDef	"tcc_open (TCCState * s1 , const char * filename)"		6114883	0					
ANR	6114885	CompoundStatement		327:0:7024:7425	6114883	0					
ANR	6114886	IdentifierDeclStatement	int fd ;	328:1:7027:7033	6114883	0	True				
ANR	6114887	IdentifierDecl	fd		6114883	0					
ANR	6114888	IdentifierDeclType	int		6114883	0					
ANR	6114889	Identifier	fd		6114883	1					
ANR	6114890	IfStatement	"if ( strcmp ( filename , ""-"" ) == 0 )"		6114883	1					
ANR	6114891	Condition	"strcmp ( filename , ""-"" ) == 0"	329:5:7040:7066	6114883	0	True				
ANR	6114892	EqualityExpression	"strcmp ( filename , ""-"" ) == 0"		6114883	0		==			
ANR	6114893	CallExpression	"strcmp ( filename , ""-"" )"		6114883	0					
ANR	6114894	Callee	strcmp		6114883	0					
ANR	6114895	Identifier	strcmp		6114883	0					
ANR	6114896	ArgumentList	filename		6114883	1					
ANR	6114897	Argument	filename		6114883	0					
ANR	6114898	Identifier	filename		6114883	0					
ANR	6114899	Argument	"""-"""		6114883	1					
ANR	6114900	PrimaryExpression	"""-"""		6114883	0					
ANR	6114901	PrimaryExpression	0		6114883	1					
ANR	6114902	CompoundStatement		3:34:44:44	6114883	1					
ANR	6114903	ExpressionStatement	"fd = 0 , filename = ""stdin"""	330:2:7073:7099	6114883	0	True				
ANR	6114904	Expression	"fd = 0 , filename = ""stdin"""		6114883	0					
ANR	6114905	AssignmentExpression	fd = 0		6114883	0		=			
ANR	6114906	Identifier	fd		6114883	0					
ANR	6114907	PrimaryExpression	0		6114883	1					
ANR	6114908	AssignmentExpression	"filename = ""stdin"""		6114883	1		=			
ANR	6114909	Identifier	filename		6114883	0					
ANR	6114910	PrimaryExpression	"""stdin"""		6114883	1					
ANR	6114911	ElseStatement	else		6114883	0					
ANR	6114912	CompoundStatement		5:8:84:84	6114883	0					
ANR	6114913	ExpressionStatement	"fd = open ( filename , O_RDONLY | O_BINARY )"	332:2:7113:7154	6114883	0	True				
ANR	6114914	AssignmentExpression	"fd = open ( filename , O_RDONLY | O_BINARY )"		6114883	0		=			
ANR	6114915	Identifier	fd		6114883	0					
ANR	6114916	CallExpression	"open ( filename , O_RDONLY | O_BINARY )"		6114883	1					
ANR	6114917	Callee	open		6114883	0					
ANR	6114918	Identifier	open		6114883	0					
ANR	6114919	ArgumentList	filename		6114883	1					
ANR	6114920	Argument	filename		6114883	0					
ANR	6114921	Identifier	filename		6114883	0					
ANR	6114922	Argument	O_RDONLY | O_BINARY		6114883	1					
ANR	6114923	InclusiveOrExpression	O_RDONLY | O_BINARY		6114883	0		|			
ANR	6114924	Identifier	O_RDONLY		6114883	0					
ANR	6114925	Identifier	O_BINARY		6114883	1					
ANR	6114926	IfStatement	if ( ( s1 -> verbose == 2 && fd >= 0 ) || s1 -> verbose == 3 )		6114883	2					
ANR	6114927	Condition	( s1 -> verbose == 2 && fd >= 0 ) || s1 -> verbose == 3	334:5:7164:7212	6114883	0	True				
ANR	6114928	OrExpression	( s1 -> verbose == 2 && fd >= 0 ) || s1 -> verbose == 3		6114883	0		||			
ANR	6114929	AndExpression	s1 -> verbose == 2 && fd >= 0		6114883	0		&&			
ANR	6114930	EqualityExpression	s1 -> verbose == 2		6114883	0		==			
ANR	6114931	PtrMemberAccess	s1 -> verbose		6114883	0					
ANR	6114932	Identifier	s1		6114883	0					
ANR	6114933	Identifier	verbose		6114883	1					
ANR	6114934	PrimaryExpression	2		6114883	1					
ANR	6114935	RelationalExpression	fd >= 0		6114883	1		>=			
ANR	6114936	Identifier	fd		6114883	0					
ANR	6114937	PrimaryExpression	0		6114883	1					
ANR	6114938	EqualityExpression	s1 -> verbose == 3		6114883	1		==			
ANR	6114939	PtrMemberAccess	s1 -> verbose		6114883	0					
ANR	6114940	Identifier	s1		6114883	0					
ANR	6114941	Identifier	verbose		6114883	1					
ANR	6114942	PrimaryExpression	3		6114883	1					
ANR	6114943	CompoundStatement		8:56:190:190	6114883	1					
ANR	6114944	ExpressionStatement	"printf ( ""%s %*s%s\\n"" , fd < 0 ? ""nf"" : ""->"" , ( int ) ( s1 -> include_stack_ptr - s1 -> include_stack ) , """" , filename )"	335:2:7219:7328	6114883	0	True				
ANR	6114945	CallExpression	"printf ( ""%s %*s%s\\n"" , fd < 0 ? ""nf"" : ""->"" , ( int ) ( s1 -> include_stack_ptr - s1 -> include_stack ) , """" , filename )"		6114883	0					
ANR	6114946	Callee	printf		6114883	0					
ANR	6114947	Identifier	printf		6114883	0					
ANR	6114948	ArgumentList	"""%s %*s%s\\n"""		6114883	1					
ANR	6114949	Argument	"""%s %*s%s\\n"""		6114883	0					
ANR	6114950	PrimaryExpression	"""%s %*s%s\\n"""		6114883	0					
ANR	6114951	Argument	"fd < 0 ? ""nf"" : ""->"""		6114883	1					
ANR	6114952	ConditionalExpression	"fd < 0 ? ""nf"" : ""->"""		6114883	0					
ANR	6114953	Condition	fd < 0		6114883	0					
ANR	6114954	RelationalExpression	fd < 0		6114883	0		<			
ANR	6114955	Identifier	fd		6114883	0					
ANR	6114956	PrimaryExpression	0		6114883	1					
ANR	6114957	PrimaryExpression	"""nf"""		6114883	1					
ANR	6114958	PrimaryExpression	"""->"""		6114883	2					
ANR	6114959	Argument	( int ) ( s1 -> include_stack_ptr - s1 -> include_stack )		6114883	2					
ANR	6114960	CastExpression	( int ) ( s1 -> include_stack_ptr - s1 -> include_stack )		6114883	0					
ANR	6114961	CastTarget	int		6114883	0					
ANR	6114962	AdditiveExpression	s1 -> include_stack_ptr - s1 -> include_stack		6114883	1		-			
ANR	6114963	PtrMemberAccess	s1 -> include_stack_ptr		6114883	0					
ANR	6114964	Identifier	s1		6114883	0					
ANR	6114965	Identifier	include_stack_ptr		6114883	1					
ANR	6114966	PtrMemberAccess	s1 -> include_stack		6114883	1					
ANR	6114967	Identifier	s1		6114883	0					
ANR	6114968	Identifier	include_stack		6114883	1					
ANR	6114969	Argument	""""""		6114883	3					
ANR	6114970	PrimaryExpression	""""""		6114883	0					
ANR	6114971	Argument	filename		6114883	4					
ANR	6114972	Identifier	filename		6114883	0					
ANR	6114973	IfStatement	if ( fd < 0 )		6114883	3					
ANR	6114974	Condition	fd < 0	338:5:7338:7343	6114883	0	True				
ANR	6114975	RelationalExpression	fd < 0		6114883	0		<			
ANR	6114976	Identifier	fd		6114883	0					
ANR	6114977	PrimaryExpression	0		6114883	1					
ANR	6114978	CompoundStatement		12:13:321:321	6114883	1					
ANR	6114979	ReturnStatement	return - 1 ;	339:2:7350:7359	6114883	0	True				
ANR	6114980	UnaryOperationExpression	- 1		6114883	0					
ANR	6114981	UnaryOperator	-		6114883	0					
ANR	6114982	PrimaryExpression	1		6114883	1					
ANR	6114983	ExpressionStatement	"tcc_open_bf ( s1 , filename , 0 )"	342:1:7366:7395	6114883	4	True				
ANR	6114984	CallExpression	"tcc_open_bf ( s1 , filename , 0 )"		6114883	0					
ANR	6114985	Callee	tcc_open_bf		6114883	0					
ANR	6114986	Identifier	tcc_open_bf		6114883	0					
ANR	6114987	ArgumentList	s1		6114883	1					
ANR	6114988	Argument	s1		6114883	0					
ANR	6114989	Identifier	s1		6114883	0					
ANR	6114990	Argument	filename		6114883	1					
ANR	6114991	Identifier	filename		6114883	0					
ANR	6114992	Argument	0		6114883	2					
ANR	6114993	PrimaryExpression	0		6114883	0					
ANR	6114994	ExpressionStatement	file -> fd = fd	343:1:7398:7411	6114883	5	True				
ANR	6114995	AssignmentExpression	file -> fd = fd		6114883	0		=			
ANR	6114996	PtrMemberAccess	file -> fd		6114883	0					
ANR	6114997	Identifier	file		6114883	0					
ANR	6114998	Identifier	fd		6114883	1					
ANR	6114999	Identifier	fd		6114883	1					
ANR	6115000	ReturnStatement	return fd ;	344:1:7414:7423	6114883	6	True				
ANR	6115001	Identifier	fd		6114883	0					
ANR	6115002	ReturnType	ST_FUNC int		6114883	1					
ANR	6115003	Identifier	tcc_open		6114883	2					
ANR	6115004	ParameterList	"TCCState * s1 , const char * filename"		6114883	3					
ANR	6115005	Parameter	TCCState * s1	326:21:6988:6999	6114883	0	True				
ANR	6115006	ParameterType	TCCState *		6114883	0					
ANR	6115007	Identifier	s1		6114883	1					
ANR	6115008	Parameter	const char * filename	326:35:7002:7021	6114883	1	True				
ANR	6115009	ParameterType	const char *		6114883	0					
ANR	6115010	Identifier	filename		6114883	1					
ANR	6115011	CFGEntryNode	ENTRY		6114883		True				
ANR	6115012	CFGExitNode	EXIT		6114883		True				
ANR	6115013	Symbol	strcmp		6114883						
ANR	6115014	Symbol	O_BINARY		6114883						
ANR	6115015	Symbol	* s1		6114883						
ANR	6115016	Symbol	s1 -> include_stack_ptr		6114883						
ANR	6115017	Symbol	* file		6114883						
ANR	6115018	Symbol	s1 -> include_stack		6114883						
ANR	6115019	Symbol	filename		6114883						
ANR	6115020	Symbol	O_RDONLY		6114883						
ANR	6115021	Symbol	file		6114883						
ANR	6115022	Symbol	file -> fd		6114883						
ANR	6115023	Symbol	s1 -> verbose		6114883						
ANR	6115024	Symbol	s1		6114883						
ANR	6115025	Symbol	fd		6114883						
ANR	6115026	Symbol	open		6114883						
ANR	6115027	Function	tcc_compile	348:0:7498:9288							
ANR	6115028	FunctionDef	tcc_compile (TCCState * s1)		6115027	0					
ANR	6115029	CompoundStatement		349:0:7535:9288	6115027	0					
ANR	6115030	IdentifierDeclStatement	Sym * define_start ;	350:1:7538:7555	6115027	0	True				
ANR	6115031	IdentifierDecl	* define_start		6115027	0					
ANR	6115032	IdentifierDeclType	Sym *		6115027	0					
ANR	6115033	Identifier	define_start		6115027	1					
ANR	6115034	ExpressionStatement	"printf ( ""%s: **** new file\\n"" , file -> filename )"	353:1:7576:7622	6115027	1	True				
ANR	6115035	CallExpression	"printf ( ""%s: **** new file\\n"" , file -> filename )"		6115027	0					
ANR	6115036	Callee	printf		6115027	0					
ANR	6115037	Identifier	printf		6115027	0					
ANR	6115038	ArgumentList	"""%s: **** new file\\n"""		6115027	1					
ANR	6115039	Argument	"""%s: **** new file\\n"""		6115027	0					
ANR	6115040	PrimaryExpression	"""%s: **** new file\\n"""		6115027	0					
ANR	6115041	Argument	file -> filename		6115027	1					
ANR	6115042	PtrMemberAccess	file -> filename		6115027	0					
ANR	6115043	Identifier	file		6115027	0					
ANR	6115044	Identifier	filename		6115027	1					
ANR	6115045	ExpressionStatement	preprocess_init ( s1 )	355:1:7632:7652	6115027	2	True				
ANR	6115046	CallExpression	preprocess_init ( s1 )		6115027	0					
ANR	6115047	Callee	preprocess_init		6115027	0					
ANR	6115048	Identifier	preprocess_init		6115027	0					
ANR	6115049	ArgumentList	s1		6115027	1					
ANR	6115050	Argument	s1		6115027	0					
ANR	6115051	Identifier	s1		6115027	0					
ANR	6115052	ExpressionStatement	"funcname = """""	357:1:7656:7669	6115027	3	True				
ANR	6115053	AssignmentExpression	"funcname = """""		6115027	0		=			
ANR	6115054	Identifier	funcname		6115027	0					
ANR	6115055	PrimaryExpression	""""""		6115027	1					
ANR	6115056	ExpressionStatement	int8_type . t = VT_INT8	360:1:7709:7730	6115027	4	True				
ANR	6115057	AssignmentExpression	int8_type . t = VT_INT8		6115027	0		=			
ANR	6115058	MemberAccess	int8_type . t		6115027	0					
ANR	6115059	Identifier	int8_type		6115027	0					
ANR	6115060	Identifier	t		6115027	1					
ANR	6115061	Identifier	VT_INT8		6115027	1					
ANR	6115062	ExpressionStatement	int16_type . t = VT_INT16	361:1:7733:7756	6115027	5	True				
ANR	6115063	AssignmentExpression	int16_type . t = VT_INT16		6115027	0		=			
ANR	6115064	MemberAccess	int16_type . t		6115027	0					
ANR	6115065	Identifier	int16_type		6115027	0					
ANR	6115066	Identifier	t		6115027	1					
ANR	6115067	Identifier	VT_INT16		6115027	1					
ANR	6115068	ExpressionStatement	int32_type . t = VT_INT32	362:1:7759:7782	6115027	6	True				
ANR	6115069	AssignmentExpression	int32_type . t = VT_INT32		6115027	0		=			
ANR	6115070	MemberAccess	int32_type . t		6115027	0					
ANR	6115071	Identifier	int32_type		6115027	0					
ANR	6115072	Identifier	t		6115027	1					
ANR	6115073	Identifier	VT_INT32		6115027	1					
ANR	6115074	ExpressionStatement	int64_type . t = VT_INT64	363:1:7785:7808	6115027	7	True				
ANR	6115075	AssignmentExpression	int64_type . t = VT_INT64		6115027	0		=			
ANR	6115076	MemberAccess	int64_type . t		6115027	0					
ANR	6115077	Identifier	int64_type		6115027	0					
ANR	6115078	Identifier	t		6115027	1					
ANR	6115079	Identifier	VT_INT64		6115027	1					
ANR	6115080	ExpressionStatement	char_pointer_type . t = VT_INT8	365:1:7812:7841	6115027	8	True				
ANR	6115081	AssignmentExpression	char_pointer_type . t = VT_INT8		6115027	0		=			
ANR	6115082	MemberAccess	char_pointer_type . t		6115027	0					
ANR	6115083	Identifier	char_pointer_type		6115027	0					
ANR	6115084	Identifier	t		6115027	1					
ANR	6115085	Identifier	VT_INT8		6115027	1					
ANR	6115086	ExpressionStatement	mk_pointer ( & char_pointer_type )	366:1:7844:7875	6115027	9	True				
ANR	6115087	CallExpression	mk_pointer ( & char_pointer_type )		6115027	0					
ANR	6115088	Callee	mk_pointer		6115027	0					
ANR	6115089	Identifier	mk_pointer		6115027	0					
ANR	6115090	ArgumentList	& char_pointer_type		6115027	1					
ANR	6115091	Argument	& char_pointer_type		6115027	0					
ANR	6115092	UnaryOperationExpression	& char_pointer_type		6115027	0					
ANR	6115093	UnaryOperator	&		6115027	0					
ANR	6115094	Identifier	char_pointer_type		6115027	1					
ANR	6115095	IfStatement	if ( tcc_state -> bits != 64 )		6115027	10					
ANR	6115096	Condition	tcc_state -> bits != 64	368:5:7883:7903	6115027	0	True				
ANR	6115097	EqualityExpression	tcc_state -> bits != 64		6115027	0		!=			
ANR	6115098	PtrMemberAccess	tcc_state -> bits		6115027	0					
ANR	6115099	Identifier	tcc_state		6115027	0					
ANR	6115100	Identifier	bits		6115027	1					
ANR	6115101	PrimaryExpression	64		6115027	1					
ANR	6115102	CompoundStatement		20:28:370:370	6115027	1					
ANR	6115103	ExpressionStatement	size_type . t = VT_INT32	369:2:7910:7932	6115027	0	True				
ANR	6115104	AssignmentExpression	size_type . t = VT_INT32		6115027	0		=			
ANR	6115105	MemberAccess	size_type . t		6115027	0					
ANR	6115106	Identifier	size_type		6115027	0					
ANR	6115107	Identifier	t		6115027	1					
ANR	6115108	Identifier	VT_INT32		6115027	1					
ANR	6115109	ElseStatement	else		6115027	0					
ANR	6115110	CompoundStatement		22:8:406:406	6115027	0					
ANR	6115111	ExpressionStatement	size_type . t = VT_INT64	371:2:7946:7968	6115027	0	True				
ANR	6115112	AssignmentExpression	size_type . t = VT_INT64		6115027	0		=			
ANR	6115113	MemberAccess	size_type . t		6115027	0					
ANR	6115114	Identifier	size_type		6115027	0					
ANR	6115115	Identifier	t		6115027	1					
ANR	6115116	Identifier	VT_INT64		6115027	1					
ANR	6115117	ExpressionStatement	func_old_type . t = VT_FUNC	374:1:7975:8000	6115027	11	True				
ANR	6115118	AssignmentExpression	func_old_type . t = VT_FUNC		6115027	0		=			
ANR	6115119	MemberAccess	func_old_type . t		6115027	0					
ANR	6115120	Identifier	func_old_type		6115027	0					
ANR	6115121	Identifier	t		6115027	1					
ANR	6115122	Identifier	VT_FUNC		6115027	1					
ANR	6115123	ExpressionStatement	"func_old_type . ref = sym_push ( SYM_FIELD , & int32_type , FUNC_CDECL , FUNC_OLD )"	375:1:8003:8078	6115027	12	True				
ANR	6115124	AssignmentExpression	"func_old_type . ref = sym_push ( SYM_FIELD , & int32_type , FUNC_CDECL , FUNC_OLD )"		6115027	0		=			
ANR	6115125	MemberAccess	func_old_type . ref		6115027	0					
ANR	6115126	Identifier	func_old_type		6115027	0					
ANR	6115127	Identifier	ref		6115027	1					
ANR	6115128	CallExpression	"sym_push ( SYM_FIELD , & int32_type , FUNC_CDECL , FUNC_OLD )"		6115027	1					
ANR	6115129	Callee	sym_push		6115027	0					
ANR	6115130	Identifier	sym_push		6115027	0					
ANR	6115131	ArgumentList	SYM_FIELD		6115027	1					
ANR	6115132	Argument	SYM_FIELD		6115027	0					
ANR	6115133	Identifier	SYM_FIELD		6115027	0					
ANR	6115134	Argument	& int32_type		6115027	1					
ANR	6115135	UnaryOperationExpression	& int32_type		6115027	0					
ANR	6115136	UnaryOperator	&		6115027	0					
ANR	6115137	Identifier	int32_type		6115027	1					
ANR	6115138	Argument	FUNC_CDECL		6115027	2					
ANR	6115139	Identifier	FUNC_CDECL		6115027	0					
ANR	6115140	Argument	FUNC_OLD		6115027	3					
ANR	6115141	Identifier	FUNC_OLD		6115027	0					
ANR	6115142	ExpressionStatement	arm_init_types ( )	379:1:8154:8171	6115027	13	True				
ANR	6115143	CallExpression	arm_init_types ( )		6115027	0					
ANR	6115144	Callee	arm_init_types		6115027	0					
ANR	6115145	Identifier	arm_init_types		6115027	0					
ANR	6115146	ArgumentList			6115027	1					
ANR	6115147	CompoundStatement		37:2:716:723	6115027	14					
ANR	6115148	IdentifierDeclStatement	Sym * s1 ;	385:2:8252:8259	6115027	0	True				
ANR	6115149	IdentifierDecl	* s1		6115027	0					
ANR	6115150	IdentifierDeclType	Sym *		6115027	0					
ANR	6115151	Identifier	s1		6115027	1					
ANR	6115152	ExpressionStatement	p = anon_sym ++	387:2:8264:8278	6115027	1	True				
ANR	6115153	AssignmentExpression	p = anon_sym ++		6115027	0		=			
ANR	6115154	Identifier	p		6115027	0					
ANR	6115155	PostIncDecOperationExpression	anon_sym ++		6115027	1					
ANR	6115156	Identifier	anon_sym		6115027	0					
ANR	6115157	IncDec	++		6115027	1					
ANR	6115158	ExpressionStatement	"sym = sym_push ( p , mk_pointer ( VT_VOID ) , FUNC_CDECL , FUNC_NEW )"	388:2:8282:8344	6115027	2	True				
ANR	6115159	AssignmentExpression	"sym = sym_push ( p , mk_pointer ( VT_VOID ) , FUNC_CDECL , FUNC_NEW )"		6115027	0		=			
ANR	6115160	Identifier	sym		6115027	0					
ANR	6115161	CallExpression	"sym_push ( p , mk_pointer ( VT_VOID ) , FUNC_CDECL , FUNC_NEW )"		6115027	1					
ANR	6115162	Callee	sym_push		6115027	0					
ANR	6115163	Identifier	sym_push		6115027	0					
ANR	6115164	ArgumentList	p		6115027	1					
ANR	6115165	Argument	p		6115027	0					
ANR	6115166	Identifier	p		6115027	0					
ANR	6115167	Argument	mk_pointer ( VT_VOID )		6115027	1					
ANR	6115168	CallExpression	mk_pointer ( VT_VOID )		6115027	0					
ANR	6115169	Callee	mk_pointer		6115027	0					
ANR	6115170	Identifier	mk_pointer		6115027	0					
ANR	6115171	ArgumentList	VT_VOID		6115027	1					
ANR	6115172	Argument	VT_VOID		6115027	0					
ANR	6115173	Identifier	VT_VOID		6115027	0					
ANR	6115174	Argument	FUNC_CDECL		6115027	2					
ANR	6115175	Identifier	FUNC_CDECL		6115027	0					
ANR	6115176	Argument	FUNC_NEW		6115027	3					
ANR	6115177	Identifier	FUNC_NEW		6115027	0					
ANR	6115178	ExpressionStatement	"s1 = sym_push ( SYM_FIELD , VT_UNSIGNED | VT_INT , 0 , 0 )"	389:2:8348:8401	6115027	3	True				
ANR	6115179	AssignmentExpression	"s1 = sym_push ( SYM_FIELD , VT_UNSIGNED | VT_INT , 0 , 0 )"		6115027	0		=			
ANR	6115180	Identifier	s1		6115027	0					
ANR	6115181	CallExpression	"sym_push ( SYM_FIELD , VT_UNSIGNED | VT_INT , 0 , 0 )"		6115027	1					
ANR	6115182	Callee	sym_push		6115027	0					
ANR	6115183	Identifier	sym_push		6115027	0					
ANR	6115184	ArgumentList	SYM_FIELD		6115027	1					
ANR	6115185	Argument	SYM_FIELD		6115027	0					
ANR	6115186	Identifier	SYM_FIELD		6115027	0					
ANR	6115187	Argument	VT_UNSIGNED | VT_INT		6115027	1					
ANR	6115188	InclusiveOrExpression	VT_UNSIGNED | VT_INT		6115027	0		|			
ANR	6115189	Identifier	VT_UNSIGNED		6115027	0					
ANR	6115190	Identifier	VT_INT		6115027	1					
ANR	6115191	Argument	0		6115027	2					
ANR	6115192	PrimaryExpression	0		6115027	0					
ANR	6115193	Argument	0		6115027	3					
ANR	6115194	PrimaryExpression	0		6115027	0					
ANR	6115195	ExpressionStatement	s1 -> next = NULL	390:2:8405:8420	6115027	4	True				
ANR	6115196	AssignmentExpression	s1 -> next = NULL		6115027	0		=			
ANR	6115197	PtrMemberAccess	s1 -> next		6115027	0					
ANR	6115198	Identifier	s1		6115027	0					
ANR	6115199	Identifier	next		6115027	1					
ANR	6115200	Identifier	NULL		6115027	1					
ANR	6115201	ExpressionStatement	sym -> next = s1	391:2:8424:8438	6115027	5	True				
ANR	6115202	AssignmentExpression	sym -> next = s1		6115027	0		=			
ANR	6115203	PtrMemberAccess	sym -> next		6115027	0					
ANR	6115204	Identifier	sym		6115027	0					
ANR	6115205	Identifier	next		6115027	1					
ANR	6115206	Identifier	s1		6115027	1					
ANR	6115207	ExpressionStatement	"sym_push ( TOK_alloca , VT_FUNC | ( p << VT_STRUCT_SHIFT ) , VT_CONST , 0 )"	392:2:8442:8510	6115027	6	True				
ANR	6115208	CallExpression	"sym_push ( TOK_alloca , VT_FUNC | ( p << VT_STRUCT_SHIFT ) , VT_CONST , 0 )"		6115027	0					
ANR	6115209	Callee	sym_push		6115027	0					
ANR	6115210	Identifier	sym_push		6115027	0					
ANR	6115211	ArgumentList	TOK_alloca		6115027	1					
ANR	6115212	Argument	TOK_alloca		6115027	0					
ANR	6115213	Identifier	TOK_alloca		6115027	0					
ANR	6115214	Argument	VT_FUNC | ( p << VT_STRUCT_SHIFT )		6115027	1					
ANR	6115215	InclusiveOrExpression	VT_FUNC | ( p << VT_STRUCT_SHIFT )		6115027	0		|			
ANR	6115216	Identifier	VT_FUNC		6115027	0					
ANR	6115217	ShiftExpression	p << VT_STRUCT_SHIFT		6115027	1		<<			
ANR	6115218	Identifier	p		6115027	0					
ANR	6115219	Identifier	VT_STRUCT_SHIFT		6115027	1					
ANR	6115220	Argument	VT_CONST		6115027	2					
ANR	6115221	Identifier	VT_CONST		6115027	0					
ANR	6115222	Argument	0		6115027	3					
ANR	6115223	PrimaryExpression	0		6115027	0					
ANR	6115224	ExpressionStatement	define_start = define_stack	396:1:8524:8551	6115027	15	True				
ANR	6115225	AssignmentExpression	define_start = define_stack		6115027	0		=			
ANR	6115226	Identifier	define_start		6115027	0					
ANR	6115227	Identifier	define_stack		6115027	1					
ANR	6115228	ExpressionStatement	nocode_wanted = 1	397:1:8554:8571	6115027	16	True				
ANR	6115229	AssignmentExpression	nocode_wanted = 1		6115027	0		=			
ANR	6115230	Identifier	nocode_wanted		6115027	0					
ANR	6115231	PrimaryExpression	1		6115027	1					
ANR	6115232	IfStatement	if ( setjmp ( s1 -> error_jmp_buf ) == 0 )		6115027	17					
ANR	6115233	Condition	setjmp ( s1 -> error_jmp_buf ) == 0	399:5:8579:8609	6115027	0	True				
ANR	6115234	EqualityExpression	setjmp ( s1 -> error_jmp_buf ) == 0		6115027	0		==			
ANR	6115235	CallExpression	setjmp ( s1 -> error_jmp_buf )		6115027	0					
ANR	6115236	Callee	setjmp		6115027	0					
ANR	6115237	Identifier	setjmp		6115027	0					
ANR	6115238	ArgumentList	s1 -> error_jmp_buf		6115027	1					
ANR	6115239	Argument	s1 -> error_jmp_buf		6115027	0					
ANR	6115240	PtrMemberAccess	s1 -> error_jmp_buf		6115027	0					
ANR	6115241	Identifier	s1		6115027	0					
ANR	6115242	Identifier	error_jmp_buf		6115027	1					
ANR	6115243	PrimaryExpression	0		6115027	1					
ANR	6115244	CompoundStatement		51:38:1076:1076	6115027	1					
ANR	6115245	ExpressionStatement	s1 -> nb_errors = 0	400:2:8616:8633	6115027	0	True				
ANR	6115246	AssignmentExpression	s1 -> nb_errors = 0		6115027	0		=			
ANR	6115247	PtrMemberAccess	s1 -> nb_errors		6115027	0					
ANR	6115248	Identifier	s1		6115027	0					
ANR	6115249	Identifier	nb_errors		6115027	1					
ANR	6115250	PrimaryExpression	0		6115027	1					
ANR	6115251	ExpressionStatement	s1 -> error_set_jmp_enabled = 1	401:2:8637:8666	6115027	1	True				
ANR	6115252	AssignmentExpression	s1 -> error_set_jmp_enabled = 1		6115027	0		=			
ANR	6115253	PtrMemberAccess	s1 -> error_set_jmp_enabled		6115027	0					
ANR	6115254	Identifier	s1		6115027	0					
ANR	6115255	Identifier	error_set_jmp_enabled		6115027	1					
ANR	6115256	PrimaryExpression	1		6115027	1					
ANR	6115257	ExpressionStatement	ch = file -> buf_ptr [ 0 ]	403:2:8671:8692	6115027	2	True				
ANR	6115258	AssignmentExpression	ch = file -> buf_ptr [ 0 ]		6115027	0		=			
ANR	6115259	Identifier	ch		6115027	0					
ANR	6115260	ArrayIndexing	file -> buf_ptr [ 0 ]		6115027	1					
ANR	6115261	PtrMemberAccess	file -> buf_ptr		6115027	0					
ANR	6115262	Identifier	file		6115027	0					
ANR	6115263	Identifier	buf_ptr		6115027	1					
ANR	6115264	PrimaryExpression	0		6115027	1					
ANR	6115265	ExpressionStatement	tok_flags = TOK_FLAG_BOL | TOK_FLAG_BOF	404:2:8696:8735	6115027	3	True				
ANR	6115266	AssignmentExpression	tok_flags = TOK_FLAG_BOL | TOK_FLAG_BOF		6115027	0		=			
ANR	6115267	Identifier	tok_flags		6115027	0					
ANR	6115268	InclusiveOrExpression	TOK_FLAG_BOL | TOK_FLAG_BOF		6115027	1		|			
ANR	6115269	Identifier	TOK_FLAG_BOL		6115027	0					
ANR	6115270	Identifier	TOK_FLAG_BOF		6115027	1					
ANR	6115271	ExpressionStatement	parse_flags = PARSE_FLAG_PREPROCESS | PARSE_FLAG_TOK_NUM	405:2:8739:8795	6115027	4	True				
ANR	6115272	AssignmentExpression	parse_flags = PARSE_FLAG_PREPROCESS | PARSE_FLAG_TOK_NUM		6115027	0		=			
ANR	6115273	Identifier	parse_flags		6115027	0					
ANR	6115274	InclusiveOrExpression	PARSE_FLAG_PREPROCESS | PARSE_FLAG_TOK_NUM		6115027	1		|			
ANR	6115275	Identifier	PARSE_FLAG_PREPROCESS		6115027	0					
ANR	6115276	Identifier	PARSE_FLAG_TOK_NUM		6115027	1					
ANR	6115277	ExpressionStatement	next ( )	407:2:8818:8825	6115027	5	True				
ANR	6115278	CallExpression	next ( )		6115027	0					
ANR	6115279	Callee	next		6115027	0					
ANR	6115280	Identifier	next		6115027	0					
ANR	6115281	ArgumentList			6115027	1					
ANR	6115282	ExpressionStatement	decl ( VT_CONST )	408:2:8829:8844	6115027	6	True				
ANR	6115283	CallExpression	decl ( VT_CONST )		6115027	0					
ANR	6115284	Callee	decl		6115027	0					
ANR	6115285	Identifier	decl		6115027	0					
ANR	6115286	ArgumentList	VT_CONST		6115027	1					
ANR	6115287	Argument	VT_CONST		6115027	0					
ANR	6115288	Identifier	VT_CONST		6115027	0					
ANR	6115289	IfStatement	if ( tok != TOK_EOF )		6115027	7					
ANR	6115290	Condition	tok != TOK_EOF	409:6:8852:8865	6115027	0	True				
ANR	6115291	EqualityExpression	tok != TOK_EOF		6115027	0		!=			
ANR	6115292	Identifier	tok		6115027	0					
ANR	6115293	Identifier	TOK_EOF		6115027	1					
ANR	6115294	CompoundStatement		61:22:1332:1332	6115027	1					
ANR	6115295	ExpressionStatement	"expect ( ""declaration"" )"	410:3:8873:8895	6115027	0	True				
ANR	6115296	CallExpression	"expect ( ""declaration"" )"		6115027	0					
ANR	6115297	Callee	expect		6115027	0					
ANR	6115298	Identifier	expect		6115027	0					
ANR	6115299	ArgumentList	"""declaration"""		6115027	1					
ANR	6115300	Argument	"""declaration"""		6115027	0					
ANR	6115301	PrimaryExpression	"""declaration"""		6115027	0					
ANR	6115302	IfStatement	if ( pvtop != vtop )		6115027	8					
ANR	6115303	Condition	pvtop != vtop	413:6:8913:8925	6115027	0	True				
ANR	6115304	EqualityExpression	pvtop != vtop		6115027	0		!=			
ANR	6115305	Identifier	pvtop		6115027	0					
ANR	6115306	Identifier	vtop		6115027	1					
ANR	6115307	CompoundStatement		65:21:1392:1392	6115027	1					
ANR	6115308	Statement	fprintf	414:3:8933:8939	6115027	0	True				
ANR	6115309	Statement	(	414:11:8941:8941	6115027	1	True				
ANR	6115310	Statement	stderr	414:12:8942:8947	6115027	2	True				
ANR	6115311	Statement	","	414:18:8948:8948	6115027	3	True				
ANR	6115312	Statement	"""internal compiler error:"""	414:20:8950:8975	6115027	4	True				
ANR	6115313	Statement	""" vstack leak? (%d)"""	415:4:8981:9000	6115027	5	True				
ANR	6115314	Statement	","	415:24:9001:9001	6115027	6	True				
ANR	6115315	Statement	vtop	415:26:9003:9006	6115027	7	True				
ANR	6115316	Statement	-	415:31:9008:9008	6115027	8	True				
ANR	6115317	Statement	pvtop	415:33:9010:9014	6115027	9	True				
ANR	6115318	Statement	)	415:38:9015:9015	6115027	10	True				
ANR	6115319	ExpressionStatement		415:39:9016:9016	6115027	11	True				
ANR	6115320	ExpressionStatement	s1 -> error_set_jmp_enabled = 0	420:1:9034:9063	6115027	18	True				
ANR	6115321	AssignmentExpression	s1 -> error_set_jmp_enabled = 0		6115027	0		=			
ANR	6115322	PtrMemberAccess	s1 -> error_set_jmp_enabled		6115027	0					
ANR	6115323	Identifier	s1		6115027	0					
ANR	6115324	Identifier	error_set_jmp_enabled		6115027	1					
ANR	6115325	PrimaryExpression	0		6115027	1					
ANR	6115326	ExpressionStatement	free_defines ( define_start )	424:1:9159:9186	6115027	19	True				
ANR	6115327	CallExpression	free_defines ( define_start )		6115027	0					
ANR	6115328	Callee	free_defines		6115027	0					
ANR	6115329	Identifier	free_defines		6115027	0					
ANR	6115330	ArgumentList	define_start		6115027	1					
ANR	6115331	Argument	define_start		6115027	0					
ANR	6115332	Identifier	define_start		6115027	0					
ANR	6115333	ExpressionStatement	"sym_pop ( & global_stack , NULL )"	426:1:9190:9219	6115027	20	True				
ANR	6115334	CallExpression	"sym_pop ( & global_stack , NULL )"		6115027	0					
ANR	6115335	Callee	sym_pop		6115027	0					
ANR	6115336	Identifier	sym_pop		6115027	0					
ANR	6115337	ArgumentList	& global_stack		6115027	1					
ANR	6115338	Argument	& global_stack		6115027	0					
ANR	6115339	UnaryOperationExpression	& global_stack		6115027	0					
ANR	6115340	UnaryOperator	&		6115027	0					
ANR	6115341	Identifier	global_stack		6115027	1					
ANR	6115342	Argument	NULL		6115027	1					
ANR	6115343	Identifier	NULL		6115027	0					
ANR	6115344	ExpressionStatement	"sym_pop ( & local_stack , NULL )"	427:1:9222:9250	6115027	21	True				
ANR	6115345	CallExpression	"sym_pop ( & local_stack , NULL )"		6115027	0					
ANR	6115346	Callee	sym_pop		6115027	0					
ANR	6115347	Identifier	sym_pop		6115027	0					
ANR	6115348	ArgumentList	& local_stack		6115027	1					
ANR	6115349	Argument	& local_stack		6115027	0					
ANR	6115350	UnaryOperationExpression	& local_stack		6115027	0					
ANR	6115351	UnaryOperator	&		6115027	0					
ANR	6115352	Identifier	local_stack		6115027	1					
ANR	6115353	Argument	NULL		6115027	1					
ANR	6115354	Identifier	NULL		6115027	0					
ANR	6115355	ReturnStatement	return s1 -> nb_errors != 0 ? - 1 : 0 ;	429:1:9254:9286	6115027	22	True				
ANR	6115356	ConditionalExpression	s1 -> nb_errors != 0 ? - 1 : 0		6115027	0					
ANR	6115357	Condition	s1 -> nb_errors != 0		6115027	0					
ANR	6115358	EqualityExpression	s1 -> nb_errors != 0		6115027	0		!=			
ANR	6115359	PtrMemberAccess	s1 -> nb_errors		6115027	0					
ANR	6115360	Identifier	s1		6115027	0					
ANR	6115361	Identifier	nb_errors		6115027	1					
ANR	6115362	PrimaryExpression	0		6115027	1					
ANR	6115363	UnaryOperationExpression	- 1		6115027	1					
ANR	6115364	UnaryOperator	-		6115027	0					
ANR	6115365	PrimaryExpression	1		6115027	1					
ANR	6115366	PrimaryExpression	0		6115027	2					
ANR	6115367	ReturnType	static int		6115027	1					
ANR	6115368	Identifier	tcc_compile		6115027	2					
ANR	6115369	ParameterList	TCCState * s1		6115027	3					
ANR	6115370	Parameter	TCCState * s1	348:23:7521:7532	6115027	0	True				
ANR	6115371	ParameterType	TCCState *		6115027	0					
ANR	6115372	Identifier	s1		6115027	1					
ANR	6115373	CFGEntryNode	ENTRY		6115027		True				
ANR	6115374	CFGExitNode	EXIT		6115027		True				
ANR	6115375	Symbol	int64_type		6115027						
ANR	6115376	Symbol	funcname		6115027						
ANR	6115377	Symbol	VT_INT16		6115027						
ANR	6115378	Symbol	int32_type . t		6115027						
ANR	6115379	Symbol	* tcc_state		6115027						
ANR	6115380	Symbol	& char_pointer_type		6115027						
ANR	6115381	Symbol	mk_pointer		6115027						
ANR	6115382	Symbol	SYM_FIELD		6115027						
ANR	6115383	Symbol	tok_flags		6115027						
ANR	6115384	Symbol	s1		6115027						
ANR	6115385	Symbol	VT_STRUCT_SHIFT		6115027						
ANR	6115386	Symbol	tcc_state		6115027						
ANR	6115387	Symbol	& int32_type		6115027						
ANR	6115388	Symbol	VT_CONST		6115027						
ANR	6115389	Symbol	file -> filename		6115027						
ANR	6115390	Symbol	func_old_type		6115027						
ANR	6115391	Symbol	int16_type . t		6115027						
ANR	6115392	Symbol	NULL		6115027						
ANR	6115393	Symbol	size_type		6115027						
ANR	6115394	Symbol	FUNC_CDECL		6115027						
ANR	6115395	Symbol	VT_INT8		6115027						
ANR	6115396	Symbol	PARSE_FLAG_PREPROCESS		6115027						
ANR	6115397	Symbol	vtop		6115027						
ANR	6115398	Symbol	* file		6115027						
ANR	6115399	Symbol	VT_FUNC		6115027						
ANR	6115400	Symbol	anon_sym		6115027						
ANR	6115401	Symbol	* sym		6115027						
ANR	6115402	Symbol	int8_type . t		6115027						
ANR	6115403	Symbol	define_stack		6115027						
ANR	6115404	Symbol	int8_type		6115027						
ANR	6115405	Symbol	size_type . t		6115027						
ANR	6115406	Symbol	& local_stack		6115027						
ANR	6115407	Symbol	char_pointer_type . t		6115027						
ANR	6115408	Symbol	* * file		6115027						
ANR	6115409	Symbol	parse_flags		6115027						
ANR	6115410	Symbol	& global_stack		6115027						
ANR	6115411	Symbol	VT_INT		6115027						
ANR	6115412	Symbol	int64_type . t		6115027						
ANR	6115413	Symbol	sym		6115027						
ANR	6115414	Symbol	* s1		6115027						
ANR	6115415	Symbol	* file -> buf_ptr		6115027						
ANR	6115416	Symbol	TOK_FLAG_BOF		6115027						
ANR	6115417	Symbol	TOK_FLAG_BOL		6115027						
ANR	6115418	Symbol	s1 -> error_set_jmp_enabled		6115027						
ANR	6115419	Symbol	tok		6115027						
ANR	6115420	Symbol	VT_UNSIGNED		6115027						
ANR	6115421	Symbol	file		6115027						
ANR	6115422	Symbol	nocode_wanted		6115027						
ANR	6115423	Symbol	VT_INT32		6115027						
ANR	6115424	Symbol	file -> buf_ptr		6115027						
ANR	6115425	Symbol	sym -> next		6115027						
ANR	6115426	Symbol	VT_VOID		6115027						
ANR	6115427	Symbol	ch		6115027						
ANR	6115428	Symbol	setjmp		6115027						
ANR	6115429	Symbol	TOK_EOF		6115027						
ANR	6115430	Symbol	func_old_type . ref		6115027						
ANR	6115431	Symbol	pvtop		6115027						
ANR	6115432	Symbol	define_start		6115027						
ANR	6115433	Symbol	p		6115027						
ANR	6115434	Symbol	TOK_alloca		6115027						
ANR	6115435	Symbol	int16_type		6115027						
ANR	6115436	Symbol	tcc_state -> bits		6115027						
ANR	6115437	Symbol	FUNC_OLD		6115027						
ANR	6115438	Symbol	s1 -> next		6115027						
ANR	6115439	Symbol	s1 -> error_jmp_buf		6115027						
ANR	6115440	Symbol	s1 -> nb_errors		6115027						
ANR	6115441	Symbol	VT_INT64		6115027						
ANR	6115442	Symbol	sym_push		6115027						
ANR	6115443	Symbol	int32_type		6115027						
ANR	6115444	Symbol	func_old_type . t		6115027						
ANR	6115445	Symbol	PARSE_FLAG_TOK_NUM		6115027						
ANR	6115446	Symbol	char_pointer_type		6115027						
ANR	6115447	Symbol	FUNC_NEW		6115027						
ANR	6115448	Function	tcc_compile_string	432:0:9291:9514							
ANR	6115449	FunctionDef	"tcc_compile_string (TCCState * s , const char * str)"		6115448	0					
ANR	6115450	CompoundStatement		433:0:9354:9514	6115448	0					
ANR	6115451	IdentifierDeclStatement	"int len , ret ;"	434:1:9357:9369	6115448	0	True				
ANR	6115452	IdentifierDecl	len		6115448	0					
ANR	6115453	IdentifierDeclType	int		6115448	0					
ANR	6115454	Identifier	len		6115448	1					
ANR	6115455	IdentifierDecl	ret		6115448	1					
ANR	6115456	IdentifierDeclType	int		6115448	0					
ANR	6115457	Identifier	ret		6115448	1					
ANR	6115458	ExpressionStatement	len = strlen ( str )	435:1:9372:9390	6115448	1	True				
ANR	6115459	AssignmentExpression	len = strlen ( str )		6115448	0		=			
ANR	6115460	Identifier	len		6115448	0					
ANR	6115461	CallExpression	strlen ( str )		6115448	1					
ANR	6115462	Callee	strlen		6115448	0					
ANR	6115463	Identifier	strlen		6115448	0					
ANR	6115464	ArgumentList	str		6115448	1					
ANR	6115465	Argument	str		6115448	0					
ANR	6115466	Identifier	str		6115448	0					
ANR	6115467	ExpressionStatement	"tcc_open_bf ( s , ""<string>"" , len )"	437:1:9394:9426	6115448	2	True				
ANR	6115468	CallExpression	"tcc_open_bf ( s , ""<string>"" , len )"		6115448	0					
ANR	6115469	Callee	tcc_open_bf		6115448	0					
ANR	6115470	Identifier	tcc_open_bf		6115448	0					
ANR	6115471	ArgumentList	s		6115448	1					
ANR	6115472	Argument	s		6115448	0					
ANR	6115473	Identifier	s		6115448	0					
ANR	6115474	Argument	"""<string>"""		6115448	1					
ANR	6115475	PrimaryExpression	"""<string>"""		6115448	0					
ANR	6115476	Argument	len		6115448	2					
ANR	6115477	Identifier	len		6115448	0					
ANR	6115478	ExpressionStatement	"memcpy ( file -> buffer , str , len )"	438:1:9429:9460	6115448	3	True				
ANR	6115479	CallExpression	"memcpy ( file -> buffer , str , len )"		6115448	0					
ANR	6115480	Callee	memcpy		6115448	0					
ANR	6115481	Identifier	memcpy		6115448	0					
ANR	6115482	ArgumentList	file -> buffer		6115448	1					
ANR	6115483	Argument	file -> buffer		6115448	0					
ANR	6115484	PtrMemberAccess	file -> buffer		6115448	0					
ANR	6115485	Identifier	file		6115448	0					
ANR	6115486	Identifier	buffer		6115448	1					
ANR	6115487	Argument	str		6115448	1					
ANR	6115488	Identifier	str		6115448	0					
ANR	6115489	Argument	len		6115448	2					
ANR	6115490	Identifier	len		6115448	0					
ANR	6115491	ExpressionStatement	ret = tcc_compile ( s )	439:1:9463:9484	6115448	4	True				
ANR	6115492	AssignmentExpression	ret = tcc_compile ( s )		6115448	0		=			
ANR	6115493	Identifier	ret		6115448	0					
ANR	6115494	CallExpression	tcc_compile ( s )		6115448	1					
ANR	6115495	Callee	tcc_compile		6115448	0					
ANR	6115496	Identifier	tcc_compile		6115448	0					
ANR	6115497	ArgumentList	s		6115448	1					
ANR	6115498	Argument	s		6115448	0					
ANR	6115499	Identifier	s		6115448	0					
ANR	6115500	ExpressionStatement	tcc_close ( )	440:1:9487:9499	6115448	5	True				
ANR	6115501	CallExpression	tcc_close ( )		6115448	0					
ANR	6115502	Callee	tcc_close		6115448	0					
ANR	6115503	Identifier	tcc_close		6115448	0					
ANR	6115504	ArgumentList			6115448	1					
ANR	6115505	ReturnStatement	return ret ;	441:1:9502:9512	6115448	6	True				
ANR	6115506	Identifier	ret		6115448	0					
ANR	6115507	ReturnType	LIBTCCAPI int		6115448	1					
ANR	6115508	Identifier	tcc_compile_string		6115448	2					
ANR	6115509	ParameterList	"TCCState * s , const char * str"		6115448	3					
ANR	6115510	Parameter	TCCState * s	432:33:9324:9334	6115448	0	True				
ANR	6115511	ParameterType	TCCState *		6115448	0					
ANR	6115512	Identifier	s		6115448	1					
ANR	6115513	Parameter	const char * str	432:46:9337:9351	6115448	1	True				
ANR	6115514	ParameterType	const char *		6115448	0					
ANR	6115515	Identifier	str		6115448	1					
ANR	6115516	CFGEntryNode	ENTRY		6115448		True				
ANR	6115517	CFGExitNode	EXIT		6115448		True				
ANR	6115518	Symbol	str		6115448						
ANR	6115519	Symbol	ret		6115448						
ANR	6115520	Symbol	strlen		6115448						
ANR	6115521	Symbol	file -> buffer		6115448						
ANR	6115522	Symbol	s		6115448						
ANR	6115523	Symbol	file		6115448						
ANR	6115524	Symbol	len		6115448						
ANR	6115525	Symbol	* file		6115448						
ANR	6115526	Symbol	tcc_compile		6115448						
ANR	6115527	Function	tcc_define_symbol	445:0:9604:10101							
ANR	6115528	FunctionDef	"tcc_define_symbol (TCCState * s1 , const char * sym , const char * value)"		6115527	0					
ANR	6115529	CompoundStatement		446:0:9687:10101	6115527	0					
ANR	6115530	IdentifierDeclStatement	"int len1 , len2 ;"	447:1:9690:9704	6115527	0	True				
ANR	6115531	IdentifierDecl	len1		6115527	0					
ANR	6115532	IdentifierDeclType	int		6115527	0					
ANR	6115533	Identifier	len1		6115527	1					
ANR	6115534	IdentifierDecl	len2		6115527	1					
ANR	6115535	IdentifierDeclType	int		6115527	0					
ANR	6115536	Identifier	len2		6115527	1					
ANR	6115537	IfStatement	if ( ! value )		6115527	1					
ANR	6115538	Condition	! value	449:5:9732:9737	6115527	0	True				
ANR	6115539	UnaryOperationExpression	! value		6115527	0					
ANR	6115540	UnaryOperator	!		6115527	0					
ANR	6115541	Identifier	value		6115527	1					
ANR	6115542	CompoundStatement		4:13:52:52	6115527	1					
ANR	6115543	ExpressionStatement	"value = ""1"""	450:2:9744:9755	6115527	0	True				
ANR	6115544	AssignmentExpression	"value = ""1"""		6115527	0		=			
ANR	6115545	Identifier	value		6115527	0					
ANR	6115546	PrimaryExpression	"""1"""		6115527	1					
ANR	6115547	ExpressionStatement	len1 = strlen ( sym )	452:1:9761:9780	6115527	2	True				
ANR	6115548	AssignmentExpression	len1 = strlen ( sym )		6115527	0		=			
ANR	6115549	Identifier	len1		6115527	0					
ANR	6115550	CallExpression	strlen ( sym )		6115527	1					
ANR	6115551	Callee	strlen		6115527	0					
ANR	6115552	Identifier	strlen		6115527	0					
ANR	6115553	ArgumentList	sym		6115527	1					
ANR	6115554	Argument	sym		6115527	0					
ANR	6115555	Identifier	sym		6115527	0					
ANR	6115556	ExpressionStatement	len2 = strlen ( value )	453:1:9783:9804	6115527	3	True				
ANR	6115557	AssignmentExpression	len2 = strlen ( value )		6115527	0		=			
ANR	6115558	Identifier	len2		6115527	0					
ANR	6115559	CallExpression	strlen ( value )		6115527	1					
ANR	6115560	Callee	strlen		6115527	0					
ANR	6115561	Identifier	strlen		6115527	0					
ANR	6115562	ArgumentList	value		6115527	1					
ANR	6115563	Argument	value		6115527	0					
ANR	6115564	Identifier	value		6115527	0					
ANR	6115565	ExpressionStatement	"tcc_open_bf ( s1 , ""<define>"" , len1 + len2 + 1 )"	456:1:9835:9880	6115527	4	True				
ANR	6115566	CallExpression	"tcc_open_bf ( s1 , ""<define>"" , len1 + len2 + 1 )"		6115527	0					
ANR	6115567	Callee	tcc_open_bf		6115527	0					
ANR	6115568	Identifier	tcc_open_bf		6115527	0					
ANR	6115569	ArgumentList	s1		6115527	1					
ANR	6115570	Argument	s1		6115527	0					
ANR	6115571	Identifier	s1		6115527	0					
ANR	6115572	Argument	"""<define>"""		6115527	1					
ANR	6115573	PrimaryExpression	"""<define>"""		6115527	0					
ANR	6115574	Argument	len1 + len2 + 1		6115527	2					
ANR	6115575	AdditiveExpression	len1 + len2 + 1		6115527	0		+			
ANR	6115576	Identifier	len1		6115527	0					
ANR	6115577	AdditiveExpression	len2 + 1		6115527	1		+			
ANR	6115578	Identifier	len2		6115527	0					
ANR	6115579	PrimaryExpression	1		6115527	1					
ANR	6115580	ExpressionStatement	"memcpy ( file -> buffer , sym , len1 )"	457:1:9883:9915	6115527	5	True				
ANR	6115581	CallExpression	"memcpy ( file -> buffer , sym , len1 )"		6115527	0					
ANR	6115582	Callee	memcpy		6115527	0					
ANR	6115583	Identifier	memcpy		6115527	0					
ANR	6115584	ArgumentList	file -> buffer		6115527	1					
ANR	6115585	Argument	file -> buffer		6115527	0					
ANR	6115586	PtrMemberAccess	file -> buffer		6115527	0					
ANR	6115587	Identifier	file		6115527	0					
ANR	6115588	Identifier	buffer		6115527	1					
ANR	6115589	Argument	sym		6115527	1					
ANR	6115590	Identifier	sym		6115527	0					
ANR	6115591	Argument	len1		6115527	2					
ANR	6115592	Identifier	len1		6115527	0					
ANR	6115593	ExpressionStatement	file -> buffer [ len1 ] = ' '	458:1:9918:9942	6115527	6	True				
ANR	6115594	AssignmentExpression	file -> buffer [ len1 ] = ' '		6115527	0		=			
ANR	6115595	ArrayIndexing	file -> buffer [ len1 ]		6115527	0					
ANR	6115596	PtrMemberAccess	file -> buffer		6115527	0					
ANR	6115597	Identifier	file		6115527	0					
ANR	6115598	Identifier	buffer		6115527	1					
ANR	6115599	Identifier	len1		6115527	1					
ANR	6115600	PrimaryExpression	' '		6115527	1					
ANR	6115601	ExpressionStatement	"memcpy ( file -> buffer + len1 + 1 , value , len2 )"	459:1:9945:9990	6115527	7	True				
ANR	6115602	CallExpression	"memcpy ( file -> buffer + len1 + 1 , value , len2 )"		6115527	0					
ANR	6115603	Callee	memcpy		6115527	0					
ANR	6115604	Identifier	memcpy		6115527	0					
ANR	6115605	ArgumentList	file -> buffer + len1 + 1		6115527	1					
ANR	6115606	Argument	file -> buffer + len1 + 1		6115527	0					
ANR	6115607	AdditiveExpression	file -> buffer + len1 + 1		6115527	0		+			
ANR	6115608	PtrMemberAccess	file -> buffer		6115527	0					
ANR	6115609	Identifier	file		6115527	0					
ANR	6115610	Identifier	buffer		6115527	1					
ANR	6115611	AdditiveExpression	len1 + 1		6115527	1		+			
ANR	6115612	Identifier	len1		6115527	0					
ANR	6115613	PrimaryExpression	1		6115527	1					
ANR	6115614	Argument	value		6115527	1					
ANR	6115615	Identifier	value		6115527	0					
ANR	6115616	Argument	len2		6115527	2					
ANR	6115617	Identifier	len2		6115527	0					
ANR	6115618	ExpressionStatement	ch = file -> buf_ptr [ 0 ]	462:1:10026:10047	6115527	8	True				
ANR	6115619	AssignmentExpression	ch = file -> buf_ptr [ 0 ]		6115527	0		=			
ANR	6115620	Identifier	ch		6115527	0					
ANR	6115621	ArrayIndexing	file -> buf_ptr [ 0 ]		6115527	1					
ANR	6115622	PtrMemberAccess	file -> buf_ptr		6115527	0					
ANR	6115623	Identifier	file		6115527	0					
ANR	6115624	Identifier	buf_ptr		6115527	1					
ANR	6115625	PrimaryExpression	0		6115527	1					
ANR	6115626	ExpressionStatement	next_nomacro ( )	463:1:10050:10065	6115527	9	True				
ANR	6115627	CallExpression	next_nomacro ( )		6115527	0					
ANR	6115628	Callee	next_nomacro		6115527	0					
ANR	6115629	Identifier	next_nomacro		6115527	0					
ANR	6115630	ArgumentList			6115527	1					
ANR	6115631	ExpressionStatement	parse_define ( )	464:1:10068:10083	6115527	10	True				
ANR	6115632	CallExpression	parse_define ( )		6115527	0					
ANR	6115633	Callee	parse_define		6115527	0					
ANR	6115634	Identifier	parse_define		6115527	0					
ANR	6115635	ArgumentList			6115527	1					
ANR	6115636	ExpressionStatement	tcc_close ( )	466:1:10087:10099	6115527	11	True				
ANR	6115637	CallExpression	tcc_close ( )		6115527	0					
ANR	6115638	Callee	tcc_close		6115527	0					
ANR	6115639	Identifier	tcc_close		6115527	0					
ANR	6115640	ArgumentList			6115527	1					
ANR	6115641	ReturnType	LIBTCCAPI void		6115527	1					
ANR	6115642	Identifier	tcc_define_symbol		6115527	2					
ANR	6115643	ParameterList	"TCCState * s1 , const char * sym , const char * value"		6115527	3					
ANR	6115644	Parameter	TCCState * s1	445:33:9637:9648	6115527	0	True				
ANR	6115645	ParameterType	TCCState *		6115527	0					
ANR	6115646	Identifier	s1		6115527	1					
ANR	6115647	Parameter	const char * sym	445:47:9651:9665	6115527	1	True				
ANR	6115648	ParameterType	const char *		6115527	0					
ANR	6115649	Identifier	sym		6115527	1					
ANR	6115650	Parameter	const char * value	445:64:9668:9684	6115527	2	True				
ANR	6115651	ParameterType	const char *		6115527	0					
ANR	6115652	Identifier	value		6115527	1					
ANR	6115653	CFGEntryNode	ENTRY		6115527		True				
ANR	6115654	CFGExitNode	EXIT		6115527		True				
ANR	6115655	Symbol	file -> buffer		6115527						
ANR	6115656	Symbol	* file -> buffer		6115527						
ANR	6115657	Symbol	ch		6115527						
ANR	6115658	Symbol	sym		6115527						
ANR	6115659	Symbol	* file -> buf_ptr		6115527						
ANR	6115660	Symbol	* file		6115527						
ANR	6115661	Symbol	len1		6115527						
ANR	6115662	Symbol	len2		6115527						
ANR	6115663	Symbol	strlen		6115527						
ANR	6115664	Symbol	file		6115527						
ANR	6115665	Symbol	* len1		6115527						
ANR	6115666	Symbol	file -> buf_ptr		6115527						
ANR	6115667	Symbol	value		6115527						
ANR	6115668	Symbol	s1		6115527						
ANR	6115669	Symbol	* * file		6115527						
ANR	6115670	Function	tcc_undefine_symbol	470:0:10141:10381							
ANR	6115671	FunctionDef	"tcc_undefine_symbol (TCCState * s1 , const char * sym)"		6115670	0					
ANR	6115672	CompoundStatement		471:0:10207:10381	6115670	0					
ANR	6115673	IdentifierDeclStatement	TokenSym * ts ;	472:1:10210:10222	6115670	0	True				
ANR	6115674	IdentifierDecl	* ts		6115670	0					
ANR	6115675	IdentifierDeclType	TokenSym *		6115670	0					
ANR	6115676	Identifier	ts		6115670	1					
ANR	6115677	IdentifierDeclStatement	Sym * s ;	473:1:10225:10231	6115670	1	True				
ANR	6115678	IdentifierDecl	* s		6115670	0					
ANR	6115679	IdentifierDeclType	Sym *		6115670	0					
ANR	6115680	Identifier	s		6115670	1					
ANR	6115681	ExpressionStatement	"ts = tok_alloc ( sym , strlen ( sym ) )"	474:1:10234:10268	6115670	2	True				
ANR	6115682	AssignmentExpression	"ts = tok_alloc ( sym , strlen ( sym ) )"		6115670	0		=			
ANR	6115683	Identifier	ts		6115670	0					
ANR	6115684	CallExpression	"tok_alloc ( sym , strlen ( sym ) )"		6115670	1					
ANR	6115685	Callee	tok_alloc		6115670	0					
ANR	6115686	Identifier	tok_alloc		6115670	0					
ANR	6115687	ArgumentList	sym		6115670	1					
ANR	6115688	Argument	sym		6115670	0					
ANR	6115689	Identifier	sym		6115670	0					
ANR	6115690	Argument	strlen ( sym )		6115670	1					
ANR	6115691	CallExpression	strlen ( sym )		6115670	0					
ANR	6115692	Callee	strlen		6115670	0					
ANR	6115693	Identifier	strlen		6115670	0					
ANR	6115694	ArgumentList	sym		6115670	1					
ANR	6115695	Argument	sym		6115670	0					
ANR	6115696	Identifier	sym		6115670	0					
ANR	6115697	ExpressionStatement	s = define_find ( ts -> tok )	475:1:10271:10296	6115670	3	True				
ANR	6115698	AssignmentExpression	s = define_find ( ts -> tok )		6115670	0		=			
ANR	6115699	Identifier	s		6115670	0					
ANR	6115700	CallExpression	define_find ( ts -> tok )		6115670	1					
ANR	6115701	Callee	define_find		6115670	0					
ANR	6115702	Identifier	define_find		6115670	0					
ANR	6115703	ArgumentList	ts -> tok		6115670	1					
ANR	6115704	Argument	ts -> tok		6115670	0					
ANR	6115705	PtrMemberAccess	ts -> tok		6115670	0					
ANR	6115706	Identifier	ts		6115670	0					
ANR	6115707	Identifier	tok		6115670	1					
ANR	6115708	IfStatement	if ( s )		6115670	4					
ANR	6115709	Condition	s	477:5:10353:10353	6115670	0	True				
ANR	6115710	Identifier	s		6115670	0					
ANR	6115711	CompoundStatement		7:8:148:148	6115670	1					
ANR	6115712	ExpressionStatement	define_undef ( s )	478:2:10360:10376	6115670	0	True				
ANR	6115713	CallExpression	define_undef ( s )		6115670	0					
ANR	6115714	Callee	define_undef		6115670	0					
ANR	6115715	Identifier	define_undef		6115670	0					
ANR	6115716	ArgumentList	s		6115670	1					
ANR	6115717	Argument	s		6115670	0					
ANR	6115718	Identifier	s		6115670	0					
ANR	6115719	ReturnType	LIBTCCAPI void		6115670	1					
ANR	6115720	Identifier	tcc_undefine_symbol		6115670	2					
ANR	6115721	ParameterList	"TCCState * s1 , const char * sym"		6115670	3					
ANR	6115722	Parameter	TCCState * s1	470:35:10176:10187	6115670	0	True				
ANR	6115723	ParameterType	TCCState *		6115670	0					
ANR	6115724	Identifier	s1		6115670	1					
ANR	6115725	Parameter	const char * sym	470:49:10190:10204	6115670	1	True				
ANR	6115726	ParameterType	const char *		6115670	0					
ANR	6115727	Identifier	sym		6115670	1					
ANR	6115728	CFGEntryNode	ENTRY		6115670		True				
ANR	6115729	CFGExitNode	EXIT		6115670		True				
ANR	6115730	Symbol	strlen		6115670						
ANR	6115731	Symbol	s		6115670						
ANR	6115732	Symbol	tok_alloc		6115670						
ANR	6115733	Symbol	sym		6115670						
ANR	6115734	Symbol	* ts		6115670						
ANR	6115735	Symbol	ts -> tok		6115670						
ANR	6115736	Symbol	define_find		6115670						
ANR	6115737	Symbol	s1		6115670						
ANR	6115738	Symbol	ts		6115670						
ANR	6115739	Function	tcc_cleanup	483:0:10438:10923							
ANR	6115740	FunctionDef	tcc_cleanup ()		6115739	0					
ANR	6115741	CompoundStatement		484:0:10468:10923	6115739	0					
ANR	6115742	IdentifierDeclStatement	"int i , n ;"	485:1:10471:10479	6115739	0	True				
ANR	6115743	IdentifierDecl	i		6115739	0					
ANR	6115744	IdentifierDeclType	int		6115739	0					
ANR	6115745	Identifier	i		6115739	1					
ANR	6115746	IdentifierDecl	n		6115739	1					
ANR	6115747	IdentifierDeclType	int		6115739	0					
ANR	6115748	Identifier	n		6115739	1					
ANR	6115749	IfStatement	if ( NULL == tcc_state )		6115739	1					
ANR	6115750	Condition	NULL == tcc_state	486:5:10486:10502	6115739	0	True				
ANR	6115751	EqualityExpression	NULL == tcc_state		6115739	0		==			
ANR	6115752	Identifier	NULL		6115739	0					
ANR	6115753	Identifier	tcc_state		6115739	1					
ANR	6115754	CompoundStatement		3:24:36:36	6115739	1					
ANR	6115755	ReturnStatement	return ;	487:2:10509:10515	6115739	0	True				
ANR	6115756	ExpressionStatement	tcc_state = NULL	489:1:10521:10537	6115739	2	True				
ANR	6115757	AssignmentExpression	tcc_state = NULL		6115739	0		=			
ANR	6115758	Identifier	tcc_state		6115739	0					
ANR	6115759	Identifier	NULL		6115739	1					
ANR	6115760	ExpressionStatement	free_defines ( NULL )	492:1:10564:10583	6115739	3	True				
ANR	6115761	CallExpression	free_defines ( NULL )		6115739	0					
ANR	6115762	Callee	free_defines		6115739	0					
ANR	6115763	Identifier	free_defines		6115739	0					
ANR	6115764	ArgumentList	NULL		6115739	1					
ANR	6115765	Argument	NULL		6115739	0					
ANR	6115766	Identifier	NULL		6115739	0					
ANR	6115767	ExpressionStatement	n = tok_ident - TOK_IDENT	495:1:10606:10631	6115739	4	True				
ANR	6115768	AssignmentExpression	n = tok_ident - TOK_IDENT		6115739	0		=			
ANR	6115769	Identifier	n		6115739	0					
ANR	6115770	AdditiveExpression	tok_ident - TOK_IDENT		6115739	1		-			
ANR	6115771	Identifier	tok_ident		6115739	0					
ANR	6115772	Identifier	TOK_IDENT		6115739	1					
ANR	6115773	ForStatement	for ( i = 0 ; i < n ; i ++ )		6115739	5					
ANR	6115774	ForInit	i = 0 ;	496:6:10639:10644	6115739	0	True				
ANR	6115775	AssignmentExpression	i = 0		6115739	0		=			
ANR	6115776	Identifier	i		6115739	0					
ANR	6115777	PrimaryExpression	0		6115739	1					
ANR	6115778	Condition	i < n	496:13:10646:10650	6115739	1	True				
ANR	6115779	RelationalExpression	i < n		6115739	0		<			
ANR	6115780	Identifier	i		6115739	0					
ANR	6115781	Identifier	n		6115739	1					
ANR	6115782	PostIncDecOperationExpression	i ++	496:20:10653:10655	6115739	2	True				
ANR	6115783	Identifier	i		6115739	0					
ANR	6115784	IncDec	++		6115739	1					
ANR	6115785	CompoundStatement		13:25:189:189	6115739	3					
ANR	6115786	ExpressionStatement	free ( table_ident [ i ] )	497:2:10662:10683	6115739	0	True				
ANR	6115787	CallExpression	free ( table_ident [ i ] )		6115739	0					
ANR	6115788	Callee	free		6115739	0					
ANR	6115789	Identifier	free		6115739	0					
ANR	6115790	ArgumentList	table_ident [ i ]		6115739	1					
ANR	6115791	Argument	table_ident [ i ]		6115739	0					
ANR	6115792	ArrayIndexing	table_ident [ i ]		6115739	0					
ANR	6115793	Identifier	table_ident		6115739	0					
ANR	6115794	Identifier	i		6115739	1					
ANR	6115795	ExpressionStatement	free ( table_ident )	499:1:10689:10707	6115739	6	True				
ANR	6115796	CallExpression	free ( table_ident )		6115739	0					
ANR	6115797	Callee	free		6115739	0					
ANR	6115798	Identifier	free		6115739	0					
ANR	6115799	ArgumentList	table_ident		6115739	1					
ANR	6115800	Argument	table_ident		6115739	0					
ANR	6115801	Identifier	table_ident		6115739	0					
ANR	6115802	ExpressionStatement	"dynarray_reset ( & sym_pools , & nb_sym_pools )"	502:1:10733:10775	6115739	7	True				
ANR	6115803	CallExpression	"dynarray_reset ( & sym_pools , & nb_sym_pools )"		6115739	0					
ANR	6115804	Callee	dynarray_reset		6115739	0					
ANR	6115805	Identifier	dynarray_reset		6115739	0					
ANR	6115806	ArgumentList	& sym_pools		6115739	1					
ANR	6115807	Argument	& sym_pools		6115739	0					
ANR	6115808	UnaryOperationExpression	& sym_pools		6115739	0					
ANR	6115809	UnaryOperator	&		6115739	0					
ANR	6115810	Identifier	sym_pools		6115739	1					
ANR	6115811	Argument	& nb_sym_pools		6115739	1					
ANR	6115812	UnaryOperationExpression	& nb_sym_pools		6115739	0					
ANR	6115813	UnaryOperator	&		6115739	0					
ANR	6115814	Identifier	nb_sym_pools		6115739	1					
ANR	6115815	ExpressionStatement	cstr_free ( & tokcstr )	504:1:10799:10819	6115739	8	True				
ANR	6115816	CallExpression	cstr_free ( & tokcstr )		6115739	0					
ANR	6115817	Callee	cstr_free		6115739	0					
ANR	6115818	Identifier	cstr_free		6115739	0					
ANR	6115819	ArgumentList	& tokcstr		6115739	1					
ANR	6115820	Argument	& tokcstr		6115739	0					
ANR	6115821	UnaryOperationExpression	& tokcstr		6115739	0					
ANR	6115822	UnaryOperator	&		6115739	0					
ANR	6115823	Identifier	tokcstr		6115739	1					
ANR	6115824	ExpressionStatement	sym_free_first = NULL	506:1:10848:10869	6115739	9	True				
ANR	6115825	AssignmentExpression	sym_free_first = NULL		6115739	0		=			
ANR	6115826	Identifier	sym_free_first		6115739	0					
ANR	6115827	Identifier	NULL		6115739	1					
ANR	6115828	ExpressionStatement	macro_ptr = NULL	508:1:10905:10921	6115739	10	True				
ANR	6115829	AssignmentExpression	macro_ptr = NULL		6115739	0		=			
ANR	6115830	Identifier	macro_ptr		6115739	0					
ANR	6115831	Identifier	NULL		6115739	1					
ANR	6115832	ReturnType	static void		6115739	1					
ANR	6115833	Identifier	tcc_cleanup		6115739	2					
ANR	6115834	ParameterList			6115739	3					
ANR	6115835	CFGEntryNode	ENTRY		6115739		True				
ANR	6115836	CFGExitNode	EXIT		6115739		True				
ANR	6115837	Symbol	tcc_state		6115739						
ANR	6115838	Symbol	NULL		6115739						
ANR	6115839	Symbol	TOK_IDENT		6115739						
ANR	6115840	Symbol	i		6115739						
ANR	6115841	Symbol	* table_ident		6115739						
ANR	6115842	Symbol	& sym_pools		6115739						
ANR	6115843	Symbol	n		6115739						
ANR	6115844	Symbol	sym_free_first		6115739						
ANR	6115845	Symbol	table_ident		6115739						
ANR	6115846	Symbol	tok_ident		6115739						
ANR	6115847	Symbol	* i		6115739						
ANR	6115848	Symbol	& nb_sym_pools		6115739						
ANR	6115849	Symbol	macro_ptr		6115739						
ANR	6115850	Symbol	& tokcstr		6115739						
ANR	6115851	Function	tcc_new	511:0:10926:14779							
ANR	6115852	FunctionDef	"tcc_new (const char * arch , int bits , const char * os)"		6115851	0					
ANR	6115853	CompoundStatement		512:0:10998:14779	6115851	0					
ANR	6115854	IdentifierDeclStatement	TCCState * s ;	513:1:11001:11012	6115851	0	True				
ANR	6115855	IdentifierDecl	* s		6115851	0					
ANR	6115856	IdentifierDeclType	TCCState *		6115851	0					
ANR	6115857	Identifier	s		6115851	1					
ANR	6115858	IdentifierDeclStatement	char buffer [ 100 ] ;	514:1:11015:11031	6115851	1	True				
ANR	6115859	IdentifierDecl	buffer [ 100 ]		6115851	0					
ANR	6115860	IdentifierDeclType	char [ 100 ]		6115851	0					
ANR	6115861	Identifier	buffer		6115851	1					
ANR	6115862	PrimaryExpression	100		6115851	2					
ANR	6115863	IdentifierDeclStatement	"int a , b , c ;"	515:1:11034:11045	6115851	2	True				
ANR	6115864	IdentifierDecl	a		6115851	0					
ANR	6115865	IdentifierDeclType	int		6115851	0					
ANR	6115866	Identifier	a		6115851	1					
ANR	6115867	IdentifierDecl	b		6115851	1					
ANR	6115868	IdentifierDeclType	int		6115851	0					
ANR	6115869	Identifier	b		6115851	1					
ANR	6115870	IdentifierDecl	c		6115851	2					
ANR	6115871	IdentifierDeclType	int		6115851	0					
ANR	6115872	Identifier	c		6115851	1					
ANR	6115873	IfStatement	if ( ! arch || ! os )		6115851	3					
ANR	6115874	Condition	! arch || ! os	517:5:11053:11064	6115851	0	True				
ANR	6115875	OrExpression	! arch || ! os		6115851	0		||			
ANR	6115876	UnaryOperationExpression	! arch		6115851	0					
ANR	6115877	UnaryOperator	!		6115851	0					
ANR	6115878	Identifier	arch		6115851	1					
ANR	6115879	UnaryOperationExpression	! os		6115851	1					
ANR	6115880	UnaryOperator	!		6115851	0					
ANR	6115881	Identifier	os		6115851	1					
ANR	6115882	CompoundStatement		6:19:68:68	6115851	1					
ANR	6115883	ReturnStatement	return NULL ;	518:2:11071:11082	6115851	0	True				
ANR	6115884	Identifier	NULL		6115851	0					
ANR	6115885	ExpressionStatement	tcc_cleanup ( )	520:1:11088:11102	6115851	4	True				
ANR	6115886	CallExpression	tcc_cleanup ( )		6115851	0					
ANR	6115887	Callee	tcc_cleanup		6115851	0					
ANR	6115888	Identifier	tcc_cleanup		6115851	0					
ANR	6115889	ArgumentList			6115851	1					
ANR	6115890	ExpressionStatement	s = tcc_mallocz ( sizeof ( TCCState ) )	521:1:11105:11139	6115851	5	True				
ANR	6115891	AssignmentExpression	s = tcc_mallocz ( sizeof ( TCCState ) )		6115851	0		=			
ANR	6115892	Identifier	s		6115851	0					
ANR	6115893	CallExpression	tcc_mallocz ( sizeof ( TCCState ) )		6115851	1					
ANR	6115894	Callee	tcc_mallocz		6115851	0					
ANR	6115895	Identifier	tcc_mallocz		6115851	0					
ANR	6115896	ArgumentList	sizeof ( TCCState )		6115851	1					
ANR	6115897	Argument	sizeof ( TCCState )		6115851	0					
ANR	6115898	SizeofExpression	sizeof ( TCCState )		6115851	0					
ANR	6115899	Sizeof	sizeof		6115851	0					
ANR	6115900	SizeofOperand	TCCState		6115851	1					
ANR	6115901	IfStatement	if ( ! s )		6115851	6					
ANR	6115902	Condition	! s	522:5:11146:11147	6115851	0	True				
ANR	6115903	UnaryOperationExpression	! s		6115851	0					
ANR	6115904	UnaryOperator	!		6115851	0					
ANR	6115905	Identifier	s		6115851	1					
ANR	6115906	CompoundStatement		11:9:151:151	6115851	1					
ANR	6115907	ReturnStatement	return NULL ;	523:2:11154:11165	6115851	0	True				
ANR	6115908	Identifier	NULL		6115851	0					
ANR	6115909	ExpressionStatement	tcc_state = s	525:1:11171:11184	6115851	7	True				
ANR	6115910	AssignmentExpression	tcc_state = s		6115851	0		=			
ANR	6115911	Identifier	tcc_state		6115851	0					
ANR	6115912	Identifier	s		6115851	1					
ANR	6115913	ExpressionStatement	s -> arch = strdup ( arch )	526:1:11187:11210	6115851	8	True				
ANR	6115914	AssignmentExpression	s -> arch = strdup ( arch )		6115851	0		=			
ANR	6115915	PtrMemberAccess	s -> arch		6115851	0					
ANR	6115916	Identifier	s		6115851	0					
ANR	6115917	Identifier	arch		6115851	1					
ANR	6115918	CallExpression	strdup ( arch )		6115851	1					
ANR	6115919	Callee	strdup		6115851	0					
ANR	6115920	Identifier	strdup		6115851	0					
ANR	6115921	ArgumentList	arch		6115851	1					
ANR	6115922	Argument	arch		6115851	0					
ANR	6115923	Identifier	arch		6115851	0					
ANR	6115924	ExpressionStatement	s -> bits = bits	527:1:11213:11227	6115851	9	True				
ANR	6115925	AssignmentExpression	s -> bits = bits		6115851	0		=			
ANR	6115926	PtrMemberAccess	s -> bits		6115851	0					
ANR	6115927	Identifier	s		6115851	0					
ANR	6115928	Identifier	bits		6115851	1					
ANR	6115929	Identifier	bits		6115851	1					
ANR	6115930	ExpressionStatement	s -> os = strdup ( os )	528:1:11230:11249	6115851	10	True				
ANR	6115931	AssignmentExpression	s -> os = strdup ( os )		6115851	0		=			
ANR	6115932	PtrMemberAccess	s -> os		6115851	0					
ANR	6115933	Identifier	s		6115851	0					
ANR	6115934	Identifier	os		6115851	1					
ANR	6115935	CallExpression	strdup ( os )		6115851	1					
ANR	6115936	Callee	strdup		6115851	0					
ANR	6115937	Identifier	strdup		6115851	0					
ANR	6115938	ArgumentList	os		6115851	1					
ANR	6115939	Argument	os		6115851	0					
ANR	6115940	Identifier	os		6115851	0					
ANR	6115941	ExpressionStatement	s -> output_type = TCC_OUTPUT_MEMORY	529:1:11252:11286	6115851	11	True				
ANR	6115942	AssignmentExpression	s -> output_type = TCC_OUTPUT_MEMORY		6115851	0		=			
ANR	6115943	PtrMemberAccess	s -> output_type		6115851	0					
ANR	6115944	Identifier	s		6115851	0					
ANR	6115945	Identifier	output_type		6115851	1					
ANR	6115946	Identifier	TCC_OUTPUT_MEMORY		6115851	1					
ANR	6115947	ExpressionStatement	preprocess_new ( )	530:1:11289:11306	6115851	12	True				
ANR	6115948	CallExpression	preprocess_new ( )		6115851	0					
ANR	6115949	Callee	preprocess_new		6115851	0					
ANR	6115950	Identifier	preprocess_new		6115851	0					
ANR	6115951	ArgumentList			6115851	1					
ANR	6115952	ExpressionStatement	s -> include_stack_ptr = s -> include_stack	531:1:11309:11348	6115851	13	True				
ANR	6115953	AssignmentExpression	s -> include_stack_ptr = s -> include_stack		6115851	0		=			
ANR	6115954	PtrMemberAccess	s -> include_stack_ptr		6115851	0					
ANR	6115955	Identifier	s		6115851	0					
ANR	6115956	Identifier	include_stack_ptr		6115851	1					
ANR	6115957	PtrMemberAccess	s -> include_stack		6115851	1					
ANR	6115958	Identifier	s		6115851	0					
ANR	6115959	Identifier	include_stack		6115851	1					
ANR	6115960	ExpressionStatement	"define_push ( TOK___LINE__ , MACRO_OBJ , NULL , NULL )"	535:1:11456:11505	6115851	14	True				
ANR	6115961	CallExpression	"define_push ( TOK___LINE__ , MACRO_OBJ , NULL , NULL )"		6115851	0					
ANR	6115962	Callee	define_push		6115851	0					
ANR	6115963	Identifier	define_push		6115851	0					
ANR	6115964	ArgumentList	TOK___LINE__		6115851	1					
ANR	6115965	Argument	TOK___LINE__		6115851	0					
ANR	6115966	Identifier	TOK___LINE__		6115851	0					
ANR	6115967	Argument	MACRO_OBJ		6115851	1					
ANR	6115968	Identifier	MACRO_OBJ		6115851	0					
ANR	6115969	Argument	NULL		6115851	2					
ANR	6115970	Identifier	NULL		6115851	0					
ANR	6115971	Argument	NULL		6115851	3					
ANR	6115972	Identifier	NULL		6115851	0					
ANR	6115973	ExpressionStatement	"define_push ( TOK___FILE__ , MACRO_OBJ , NULL , NULL )"	536:1:11508:11557	6115851	15	True				
ANR	6115974	CallExpression	"define_push ( TOK___FILE__ , MACRO_OBJ , NULL , NULL )"		6115851	0					
ANR	6115975	Callee	define_push		6115851	0					
ANR	6115976	Identifier	define_push		6115851	0					
ANR	6115977	ArgumentList	TOK___FILE__		6115851	1					
ANR	6115978	Argument	TOK___FILE__		6115851	0					
ANR	6115979	Identifier	TOK___FILE__		6115851	0					
ANR	6115980	Argument	MACRO_OBJ		6115851	1					
ANR	6115981	Identifier	MACRO_OBJ		6115851	0					
ANR	6115982	Argument	NULL		6115851	2					
ANR	6115983	Identifier	NULL		6115851	0					
ANR	6115984	Argument	NULL		6115851	3					
ANR	6115985	Identifier	NULL		6115851	0					
ANR	6115986	ExpressionStatement	"define_push ( TOK___DATE__ , MACRO_OBJ , NULL , NULL )"	537:1:11560:11609	6115851	16	True				
ANR	6115987	CallExpression	"define_push ( TOK___DATE__ , MACRO_OBJ , NULL , NULL )"		6115851	0					
ANR	6115988	Callee	define_push		6115851	0					
ANR	6115989	Identifier	define_push		6115851	0					
ANR	6115990	ArgumentList	TOK___DATE__		6115851	1					
ANR	6115991	Argument	TOK___DATE__		6115851	0					
ANR	6115992	Identifier	TOK___DATE__		6115851	0					
ANR	6115993	Argument	MACRO_OBJ		6115851	1					
ANR	6115994	Identifier	MACRO_OBJ		6115851	0					
ANR	6115995	Argument	NULL		6115851	2					
ANR	6115996	Identifier	NULL		6115851	0					
ANR	6115997	Argument	NULL		6115851	3					
ANR	6115998	Identifier	NULL		6115851	0					
ANR	6115999	ExpressionStatement	"define_push ( TOK___TIME__ , MACRO_OBJ , NULL , NULL )"	538:1:11612:11661	6115851	17	True				
ANR	6116000	CallExpression	"define_push ( TOK___TIME__ , MACRO_OBJ , NULL , NULL )"		6115851	0					
ANR	6116001	Callee	define_push		6115851	0					
ANR	6116002	Identifier	define_push		6115851	0					
ANR	6116003	ArgumentList	TOK___TIME__		6115851	1					
ANR	6116004	Argument	TOK___TIME__		6115851	0					
ANR	6116005	Identifier	TOK___TIME__		6115851	0					
ANR	6116006	Argument	MACRO_OBJ		6115851	1					
ANR	6116007	Identifier	MACRO_OBJ		6115851	0					
ANR	6116008	Argument	NULL		6115851	2					
ANR	6116009	Identifier	NULL		6115851	0					
ANR	6116010	Argument	NULL		6115851	3					
ANR	6116011	Identifier	NULL		6115851	0					
ANR	6116012	ExpressionStatement	"sscanf ( TCC_VERSION , ""%d.%d.%d"" , & a , & b , & c )"	541:1:11694:11738	6115851	18	True				
ANR	6116013	CallExpression	"sscanf ( TCC_VERSION , ""%d.%d.%d"" , & a , & b , & c )"		6115851	0					
ANR	6116014	Callee	sscanf		6115851	0					
ANR	6116015	Identifier	sscanf		6115851	0					
ANR	6116016	ArgumentList	TCC_VERSION		6115851	1					
ANR	6116017	Argument	TCC_VERSION		6115851	0					
ANR	6116018	Identifier	TCC_VERSION		6115851	0					
ANR	6116019	Argument	"""%d.%d.%d"""		6115851	1					
ANR	6116020	PrimaryExpression	"""%d.%d.%d"""		6115851	0					
ANR	6116021	Argument	& a		6115851	2					
ANR	6116022	UnaryOperationExpression	& a		6115851	0					
ANR	6116023	UnaryOperator	&		6115851	0					
ANR	6116024	Identifier	a		6115851	1					
ANR	6116025	Argument	& b		6115851	3					
ANR	6116026	UnaryOperationExpression	& b		6115851	0					
ANR	6116027	UnaryOperator	&		6115851	0					
ANR	6116028	Identifier	b		6115851	1					
ANR	6116029	Argument	& c		6115851	4					
ANR	6116030	UnaryOperationExpression	& c		6115851	0					
ANR	6116031	UnaryOperator	&		6115851	0					
ANR	6116032	Identifier	c		6115851	1					
ANR	6116033	ExpressionStatement	"sprintf ( buffer , ""%d"" , a * 10000 + b * 100 + c )"	542:1:11741:11788	6115851	19	True				
ANR	6116034	CallExpression	"sprintf ( buffer , ""%d"" , a * 10000 + b * 100 + c )"		6115851	0					
ANR	6116035	Callee	sprintf		6115851	0					
ANR	6116036	Identifier	sprintf		6115851	0					
ANR	6116037	ArgumentList	buffer		6115851	1					
ANR	6116038	Argument	buffer		6115851	0					
ANR	6116039	Identifier	buffer		6115851	0					
ANR	6116040	Argument	"""%d"""		6115851	1					
ANR	6116041	PrimaryExpression	"""%d"""		6115851	0					
ANR	6116042	Argument	a * 10000 + b * 100 + c		6115851	2					
ANR	6116043	AdditiveExpression	a * 10000 + b * 100 + c		6115851	0		+			
ANR	6116044	MultiplicativeExpression	a * 10000		6115851	0		*			
ANR	6116045	Identifier	a		6115851	0					
ANR	6116046	PrimaryExpression	10000		6115851	1					
ANR	6116047	AdditiveExpression	b * 100 + c		6115851	1		+			
ANR	6116048	MultiplicativeExpression	b * 100		6115851	0		*			
ANR	6116049	Identifier	b		6115851	0					
ANR	6116050	PrimaryExpression	100		6115851	1					
ANR	6116051	Identifier	c		6115851	1					
ANR	6116052	ExpressionStatement	"tcc_define_symbol ( s , ""__TINYC__"" , buffer )"	543:1:11791:11833	6115851	20	True				
ANR	6116053	CallExpression	"tcc_define_symbol ( s , ""__TINYC__"" , buffer )"		6115851	0					
ANR	6116054	Callee	tcc_define_symbol		6115851	0					
ANR	6116055	Identifier	tcc_define_symbol		6115851	0					
ANR	6116056	ArgumentList	s		6115851	1					
ANR	6116057	Argument	s		6115851	0					
ANR	6116058	Identifier	s		6115851	0					
ANR	6116059	Argument	"""__TINYC__"""		6115851	1					
ANR	6116060	PrimaryExpression	"""__TINYC__"""		6115851	0					
ANR	6116061	Argument	buffer		6115851	2					
ANR	6116062	Identifier	buffer		6115851	0					
ANR	6116063	ExpressionStatement	"tcc_define_symbol ( s , ""__R2TINYC__"" , buffer )"	544:1:11836:11880	6115851	21	True				
ANR	6116064	CallExpression	"tcc_define_symbol ( s , ""__R2TINYC__"" , buffer )"		6115851	0					
ANR	6116065	Callee	tcc_define_symbol		6115851	0					
ANR	6116066	Identifier	tcc_define_symbol		6115851	0					
ANR	6116067	ArgumentList	s		6115851	1					
ANR	6116068	Argument	s		6115851	0					
ANR	6116069	Identifier	s		6115851	0					
ANR	6116070	Argument	"""__R2TINYC__"""		6115851	1					
ANR	6116071	PrimaryExpression	"""__R2TINYC__"""		6115851	0					
ANR	6116072	Argument	buffer		6115851	2					
ANR	6116073	Identifier	buffer		6115851	0					
ANR	6116074	ExpressionStatement	"tcc_define_symbol ( s , ""__STDC__"" , NULL )"	547:1:11908:11947	6115851	22	True				
ANR	6116075	CallExpression	"tcc_define_symbol ( s , ""__STDC__"" , NULL )"		6115851	0					
ANR	6116076	Callee	tcc_define_symbol		6115851	0					
ANR	6116077	Identifier	tcc_define_symbol		6115851	0					
ANR	6116078	ArgumentList	s		6115851	1					
ANR	6116079	Argument	s		6115851	0					
ANR	6116080	Identifier	s		6115851	0					
ANR	6116081	Argument	"""__STDC__"""		6115851	1					
ANR	6116082	PrimaryExpression	"""__STDC__"""		6115851	0					
ANR	6116083	Argument	NULL		6115851	2					
ANR	6116084	Identifier	NULL		6115851	0					
ANR	6116085	ExpressionStatement	"tcc_define_symbol ( s , ""__STDC_VERSION__"" , ""199901L"" )"	548:1:11950:12002	6115851	23	True				
ANR	6116086	CallExpression	"tcc_define_symbol ( s , ""__STDC_VERSION__"" , ""199901L"" )"		6115851	0					
ANR	6116087	Callee	tcc_define_symbol		6115851	0					
ANR	6116088	Identifier	tcc_define_symbol		6115851	0					
ANR	6116089	ArgumentList	s		6115851	1					
ANR	6116090	Argument	s		6115851	0					
ANR	6116091	Identifier	s		6115851	0					
ANR	6116092	Argument	"""__STDC_VERSION__"""		6115851	1					
ANR	6116093	PrimaryExpression	"""__STDC_VERSION__"""		6115851	0					
ANR	6116094	Argument	"""199901L"""		6115851	2					
ANR	6116095	PrimaryExpression	"""199901L"""		6115851	0					
ANR	6116096	ExpressionStatement	"tcc_define_symbol ( s , ""__STDC_HOSTED__"" , NULL )"	549:1:12005:12051	6115851	24	True				
ANR	6116097	CallExpression	"tcc_define_symbol ( s , ""__STDC_HOSTED__"" , NULL )"		6115851	0					
ANR	6116098	Callee	tcc_define_symbol		6115851	0					
ANR	6116099	Identifier	tcc_define_symbol		6115851	0					
ANR	6116100	ArgumentList	s		6115851	1					
ANR	6116101	Argument	s		6115851	0					
ANR	6116102	Identifier	s		6115851	0					
ANR	6116103	Argument	"""__STDC_HOSTED__"""		6115851	1					
ANR	6116104	PrimaryExpression	"""__STDC_HOSTED__"""		6115851	0					
ANR	6116105	Argument	NULL		6115851	2					
ANR	6116106	Identifier	NULL		6115851	0					
ANR	6116107	ExpressionStatement	"tcc_define_symbol ( s , ""ut8"" , ""uint8_t"" )"	552:1:12075:12114	6115851	25	True				
ANR	6116108	CallExpression	"tcc_define_symbol ( s , ""ut8"" , ""uint8_t"" )"		6115851	0					
ANR	6116109	Callee	tcc_define_symbol		6115851	0					
ANR	6116110	Identifier	tcc_define_symbol		6115851	0					
ANR	6116111	ArgumentList	s		6115851	1					
ANR	6116112	Argument	s		6115851	0					
ANR	6116113	Identifier	s		6115851	0					
ANR	6116114	Argument	"""ut8"""		6115851	1					
ANR	6116115	PrimaryExpression	"""ut8"""		6115851	0					
ANR	6116116	Argument	"""uint8_t"""		6115851	2					
ANR	6116117	PrimaryExpression	"""uint8_t"""		6115851	0					
ANR	6116118	ExpressionStatement	"tcc_define_symbol ( s , ""ut16"" , ""uint16_t"" )"	553:1:12117:12158	6115851	26	True				
ANR	6116119	CallExpression	"tcc_define_symbol ( s , ""ut16"" , ""uint16_t"" )"		6115851	0					
ANR	6116120	Callee	tcc_define_symbol		6115851	0					
ANR	6116121	Identifier	tcc_define_symbol		6115851	0					
ANR	6116122	ArgumentList	s		6115851	1					
ANR	6116123	Argument	s		6115851	0					
ANR	6116124	Identifier	s		6115851	0					
ANR	6116125	Argument	"""ut16"""		6115851	1					
ANR	6116126	PrimaryExpression	"""ut16"""		6115851	0					
ANR	6116127	Argument	"""uint16_t"""		6115851	2					
ANR	6116128	PrimaryExpression	"""uint16_t"""		6115851	0					
ANR	6116129	ExpressionStatement	"tcc_define_symbol ( s , ""ut32"" , ""uint32_t"" )"	554:1:12161:12202	6115851	27	True				
ANR	6116130	CallExpression	"tcc_define_symbol ( s , ""ut32"" , ""uint32_t"" )"		6115851	0					
ANR	6116131	Callee	tcc_define_symbol		6115851	0					
ANR	6116132	Identifier	tcc_define_symbol		6115851	0					
ANR	6116133	ArgumentList	s		6115851	1					
ANR	6116134	Argument	s		6115851	0					
ANR	6116135	Identifier	s		6115851	0					
ANR	6116136	Argument	"""ut32"""		6115851	1					
ANR	6116137	PrimaryExpression	"""ut32"""		6115851	0					
ANR	6116138	Argument	"""uint32_t"""		6115851	2					
ANR	6116139	PrimaryExpression	"""uint32_t"""		6115851	0					
ANR	6116140	ExpressionStatement	"tcc_define_symbol ( s , ""ut64"" , ""uint64_t"" )"	555:1:12205:12246	6115851	28	True				
ANR	6116141	CallExpression	"tcc_define_symbol ( s , ""ut64"" , ""uint64_t"" )"		6115851	0					
ANR	6116142	Callee	tcc_define_symbol		6115851	0					
ANR	6116143	Identifier	tcc_define_symbol		6115851	0					
ANR	6116144	ArgumentList	s		6115851	1					
ANR	6116145	Argument	s		6115851	0					
ANR	6116146	Identifier	s		6115851	0					
ANR	6116147	Argument	"""ut64"""		6115851	1					
ANR	6116148	PrimaryExpression	"""ut64"""		6115851	0					
ANR	6116149	Argument	"""uint64_t"""		6115851	2					
ANR	6116150	PrimaryExpression	"""uint64_t"""		6115851	0					
ANR	6116151	ExpressionStatement	"tcc_define_symbol ( s , ""st8"" , ""int8_t"" )"	557:1:12250:12288	6115851	29	True				
ANR	6116152	CallExpression	"tcc_define_symbol ( s , ""st8"" , ""int8_t"" )"		6115851	0					
ANR	6116153	Callee	tcc_define_symbol		6115851	0					
ANR	6116154	Identifier	tcc_define_symbol		6115851	0					
ANR	6116155	ArgumentList	s		6115851	1					
ANR	6116156	Argument	s		6115851	0					
ANR	6116157	Identifier	s		6115851	0					
ANR	6116158	Argument	"""st8"""		6115851	1					
ANR	6116159	PrimaryExpression	"""st8"""		6115851	0					
ANR	6116160	Argument	"""int8_t"""		6115851	2					
ANR	6116161	PrimaryExpression	"""int8_t"""		6115851	0					
ANR	6116162	ExpressionStatement	"tcc_define_symbol ( s , ""st16"" , ""int16_t"" )"	558:1:12291:12331	6115851	30	True				
ANR	6116163	CallExpression	"tcc_define_symbol ( s , ""st16"" , ""int16_t"" )"		6115851	0					
ANR	6116164	Callee	tcc_define_symbol		6115851	0					
ANR	6116165	Identifier	tcc_define_symbol		6115851	0					
ANR	6116166	ArgumentList	s		6115851	1					
ANR	6116167	Argument	s		6115851	0					
ANR	6116168	Identifier	s		6115851	0					
ANR	6116169	Argument	"""st16"""		6115851	1					
ANR	6116170	PrimaryExpression	"""st16"""		6115851	0					
ANR	6116171	Argument	"""int16_t"""		6115851	2					
ANR	6116172	PrimaryExpression	"""int16_t"""		6115851	0					
ANR	6116173	ExpressionStatement	"tcc_define_symbol ( s , ""st32"" , ""int32_t"" )"	559:1:12334:12374	6115851	31	True				
ANR	6116174	CallExpression	"tcc_define_symbol ( s , ""st32"" , ""int32_t"" )"		6115851	0					
ANR	6116175	Callee	tcc_define_symbol		6115851	0					
ANR	6116176	Identifier	tcc_define_symbol		6115851	0					
ANR	6116177	ArgumentList	s		6115851	1					
ANR	6116178	Argument	s		6115851	0					
ANR	6116179	Identifier	s		6115851	0					
ANR	6116180	Argument	"""st32"""		6115851	1					
ANR	6116181	PrimaryExpression	"""st32"""		6115851	0					
ANR	6116182	Argument	"""int32_t"""		6115851	2					
ANR	6116183	PrimaryExpression	"""int32_t"""		6115851	0					
ANR	6116184	ExpressionStatement	"tcc_define_symbol ( s , ""st64"" , ""int64_t"" )"	560:1:12377:12417	6115851	32	True				
ANR	6116185	CallExpression	"tcc_define_symbol ( s , ""st64"" , ""int64_t"" )"		6115851	0					
ANR	6116186	Callee	tcc_define_symbol		6115851	0					
ANR	6116187	Identifier	tcc_define_symbol		6115851	0					
ANR	6116188	ArgumentList	s		6115851	1					
ANR	6116189	Argument	s		6115851	0					
ANR	6116190	Identifier	s		6115851	0					
ANR	6116191	Argument	"""st64"""		6115851	1					
ANR	6116192	PrimaryExpression	"""st64"""		6115851	0					
ANR	6116193	Argument	"""int64_t"""		6115851	2					
ANR	6116194	PrimaryExpression	"""int64_t"""		6115851	0					
ANR	6116195	IfStatement	"if ( ! strncmp ( arch , ""x86"" , 3 ) )"		6115851	33					
ANR	6116196	Condition	"! strncmp ( arch , ""x86"" , 3 )"	563:5:12447:12471	6115851	0	True				
ANR	6116197	UnaryOperationExpression	"! strncmp ( arch , ""x86"" , 3 )"		6115851	0					
ANR	6116198	UnaryOperator	!		6115851	0					
ANR	6116199	CallExpression	"strncmp ( arch , ""x86"" , 3 )"		6115851	1					
ANR	6116200	Callee	strncmp		6115851	0					
ANR	6116201	Identifier	strncmp		6115851	0					
ANR	6116202	ArgumentList	arch		6115851	1					
ANR	6116203	Argument	arch		6115851	0					
ANR	6116204	Identifier	arch		6115851	0					
ANR	6116205	Argument	"""x86"""		6115851	1					
ANR	6116206	PrimaryExpression	"""x86"""		6115851	0					
ANR	6116207	Argument	3		6115851	2					
ANR	6116208	PrimaryExpression	3		6115851	0					
ANR	6116209	CompoundStatement		52:32:1475:1475	6115851	1					
ANR	6116210	IfStatement	if ( bits == 32 || bits == 16 )		6115851	0					
ANR	6116211	Condition	bits == 32 || bits == 16	564:6:12482:12505	6115851	0	True				
ANR	6116212	OrExpression	bits == 32 || bits == 16		6115851	0		||			
ANR	6116213	EqualityExpression	bits == 32		6115851	0		==			
ANR	6116214	Identifier	bits		6115851	0					
ANR	6116215	PrimaryExpression	32		6115851	1					
ANR	6116216	EqualityExpression	bits == 16		6115851	1		==			
ANR	6116217	Identifier	bits		6115851	0					
ANR	6116218	PrimaryExpression	16		6115851	1					
ANR	6116219	CompoundStatement		53:32:1509:1509	6115851	1					
ANR	6116220	ExpressionStatement	"tcc_define_symbol ( s , ""__i386__"" , NULL )"	565:3:12513:12552	6115851	0	True				
ANR	6116221	CallExpression	"tcc_define_symbol ( s , ""__i386__"" , NULL )"		6115851	0					
ANR	6116222	Callee	tcc_define_symbol		6115851	0					
ANR	6116223	Identifier	tcc_define_symbol		6115851	0					
ANR	6116224	ArgumentList	s		6115851	1					
ANR	6116225	Argument	s		6115851	0					
ANR	6116226	Identifier	s		6115851	0					
ANR	6116227	Argument	"""__i386__"""		6115851	1					
ANR	6116228	PrimaryExpression	"""__i386__"""		6115851	0					
ANR	6116229	Argument	NULL		6115851	2					
ANR	6116230	Identifier	NULL		6115851	0					
ANR	6116231	ExpressionStatement	"tcc_define_symbol ( s , ""__i386"" , NULL )"	566:3:12557:12594	6115851	1	True				
ANR	6116232	CallExpression	"tcc_define_symbol ( s , ""__i386"" , NULL )"		6115851	0					
ANR	6116233	Callee	tcc_define_symbol		6115851	0					
ANR	6116234	Identifier	tcc_define_symbol		6115851	0					
ANR	6116235	ArgumentList	s		6115851	1					
ANR	6116236	Argument	s		6115851	0					
ANR	6116237	Identifier	s		6115851	0					
ANR	6116238	Argument	"""__i386"""		6115851	1					
ANR	6116239	PrimaryExpression	"""__i386"""		6115851	0					
ANR	6116240	Argument	NULL		6115851	2					
ANR	6116241	Identifier	NULL		6115851	0					
ANR	6116242	ExpressionStatement	"tcc_define_symbol ( s , ""i386"" , NULL )"	567:3:12599:12634	6115851	2	True				
ANR	6116243	CallExpression	"tcc_define_symbol ( s , ""i386"" , NULL )"		6115851	0					
ANR	6116244	Callee	tcc_define_symbol		6115851	0					
ANR	6116245	Identifier	tcc_define_symbol		6115851	0					
ANR	6116246	ArgumentList	s		6115851	1					
ANR	6116247	Argument	s		6115851	0					
ANR	6116248	Identifier	s		6115851	0					
ANR	6116249	Argument	"""i386"""		6115851	1					
ANR	6116250	PrimaryExpression	"""i386"""		6115851	0					
ANR	6116251	Argument	NULL		6115851	2					
ANR	6116252	Identifier	NULL		6115851	0					
ANR	6116253	ElseStatement	else		6115851	0					
ANR	6116254	CompoundStatement		57:9:1646:1646	6115851	0					
ANR	6116255	ExpressionStatement	"tcc_define_symbol ( s , ""__x86_64__"" , NULL )"	569:3:12650:12691	6115851	0	True				
ANR	6116256	CallExpression	"tcc_define_symbol ( s , ""__x86_64__"" , NULL )"		6115851	0					
ANR	6116257	Callee	tcc_define_symbol		6115851	0					
ANR	6116258	Identifier	tcc_define_symbol		6115851	0					
ANR	6116259	ArgumentList	s		6115851	1					
ANR	6116260	Argument	s		6115851	0					
ANR	6116261	Identifier	s		6115851	0					
ANR	6116262	Argument	"""__x86_64__"""		6115851	1					
ANR	6116263	PrimaryExpression	"""__x86_64__"""		6115851	0					
ANR	6116264	Argument	NULL		6115851	2					
ANR	6116265	Identifier	NULL		6115851	0					
ANR	6116266	ElseStatement	else		6115851	0					
ANR	6116267	IfStatement	"if ( ! strncmp ( arch , ""arm"" , 3 ) )"		6115851	0					
ANR	6116268	Condition	"! strncmp ( arch , ""arm"" , 3 )"	571:12:12709:12733	6115851	0	True				
ANR	6116269	UnaryOperationExpression	"! strncmp ( arch , ""arm"" , 3 )"		6115851	0					
ANR	6116270	UnaryOperator	!		6115851	0					
ANR	6116271	CallExpression	"strncmp ( arch , ""arm"" , 3 )"		6115851	1					
ANR	6116272	Callee	strncmp		6115851	0					
ANR	6116273	Identifier	strncmp		6115851	0					
ANR	6116274	ArgumentList	arch		6115851	1					
ANR	6116275	Argument	arch		6115851	0					
ANR	6116276	Identifier	arch		6115851	0					
ANR	6116277	Argument	"""arm"""		6115851	1					
ANR	6116278	PrimaryExpression	"""arm"""		6115851	0					
ANR	6116279	Argument	3		6115851	2					
ANR	6116280	PrimaryExpression	3		6115851	0					
ANR	6116281	CompoundStatement		60:39:1737:1737	6115851	1					
ANR	6116282	ExpressionStatement	"tcc_define_symbol ( s , ""__ARM_ARCH_4__"" , NULL )"	572:2:12740:12785	6115851	0	True				
ANR	6116283	CallExpression	"tcc_define_symbol ( s , ""__ARM_ARCH_4__"" , NULL )"		6115851	0					
ANR	6116284	Callee	tcc_define_symbol		6115851	0					
ANR	6116285	Identifier	tcc_define_symbol		6115851	0					
ANR	6116286	ArgumentList	s		6115851	1					
ANR	6116287	Argument	s		6115851	0					
ANR	6116288	Identifier	s		6115851	0					
ANR	6116289	Argument	"""__ARM_ARCH_4__"""		6115851	1					
ANR	6116290	PrimaryExpression	"""__ARM_ARCH_4__"""		6115851	0					
ANR	6116291	Argument	NULL		6115851	2					
ANR	6116292	Identifier	NULL		6115851	0					
ANR	6116293	ExpressionStatement	"tcc_define_symbol ( s , ""__arm_elf__"" , NULL )"	573:2:12789:12831	6115851	1	True				
ANR	6116294	CallExpression	"tcc_define_symbol ( s , ""__arm_elf__"" , NULL )"		6115851	0					
ANR	6116295	Callee	tcc_define_symbol		6115851	0					
ANR	6116296	Identifier	tcc_define_symbol		6115851	0					
ANR	6116297	ArgumentList	s		6115851	1					
ANR	6116298	Argument	s		6115851	0					
ANR	6116299	Identifier	s		6115851	0					
ANR	6116300	Argument	"""__arm_elf__"""		6115851	1					
ANR	6116301	PrimaryExpression	"""__arm_elf__"""		6115851	0					
ANR	6116302	Argument	NULL		6115851	2					
ANR	6116303	Identifier	NULL		6115851	0					
ANR	6116304	ExpressionStatement	"tcc_define_symbol ( s , ""__arm_elf"" , NULL )"	574:2:12835:12875	6115851	2	True				
ANR	6116305	CallExpression	"tcc_define_symbol ( s , ""__arm_elf"" , NULL )"		6115851	0					
ANR	6116306	Callee	tcc_define_symbol		6115851	0					
ANR	6116307	Identifier	tcc_define_symbol		6115851	0					
ANR	6116308	ArgumentList	s		6115851	1					
ANR	6116309	Argument	s		6115851	0					
ANR	6116310	Identifier	s		6115851	0					
ANR	6116311	Argument	"""__arm_elf"""		6115851	1					
ANR	6116312	PrimaryExpression	"""__arm_elf"""		6115851	0					
ANR	6116313	Argument	NULL		6115851	2					
ANR	6116314	Identifier	NULL		6115851	0					
ANR	6116315	ExpressionStatement	"tcc_define_symbol ( s , ""arm_elf"" , NULL )"	575:2:12879:12917	6115851	3	True				
ANR	6116316	CallExpression	"tcc_define_symbol ( s , ""arm_elf"" , NULL )"		6115851	0					
ANR	6116317	Callee	tcc_define_symbol		6115851	0					
ANR	6116318	Identifier	tcc_define_symbol		6115851	0					
ANR	6116319	ArgumentList	s		6115851	1					
ANR	6116320	Argument	s		6115851	0					
ANR	6116321	Identifier	s		6115851	0					
ANR	6116322	Argument	"""arm_elf"""		6115851	1					
ANR	6116323	PrimaryExpression	"""arm_elf"""		6115851	0					
ANR	6116324	Argument	NULL		6115851	2					
ANR	6116325	Identifier	NULL		6115851	0					
ANR	6116326	ExpressionStatement	"tcc_define_symbol ( s , ""__arm__"" , NULL )"	576:2:12921:12959	6115851	4	True				
ANR	6116327	CallExpression	"tcc_define_symbol ( s , ""__arm__"" , NULL )"		6115851	0					
ANR	6116328	Callee	tcc_define_symbol		6115851	0					
ANR	6116329	Identifier	tcc_define_symbol		6115851	0					
ANR	6116330	ArgumentList	s		6115851	1					
ANR	6116331	Argument	s		6115851	0					
ANR	6116332	Identifier	s		6115851	0					
ANR	6116333	Argument	"""__arm__"""		6115851	1					
ANR	6116334	PrimaryExpression	"""__arm__"""		6115851	0					
ANR	6116335	Argument	NULL		6115851	2					
ANR	6116336	Identifier	NULL		6115851	0					
ANR	6116337	ExpressionStatement	"tcc_define_symbol ( s , ""__arm"" , NULL )"	577:2:12963:12999	6115851	5	True				
ANR	6116338	CallExpression	"tcc_define_symbol ( s , ""__arm"" , NULL )"		6115851	0					
ANR	6116339	Callee	tcc_define_symbol		6115851	0					
ANR	6116340	Identifier	tcc_define_symbol		6115851	0					
ANR	6116341	ArgumentList	s		6115851	1					
ANR	6116342	Argument	s		6115851	0					
ANR	6116343	Identifier	s		6115851	0					
ANR	6116344	Argument	"""__arm"""		6115851	1					
ANR	6116345	PrimaryExpression	"""__arm"""		6115851	0					
ANR	6116346	Argument	NULL		6115851	2					
ANR	6116347	Identifier	NULL		6115851	0					
ANR	6116348	ExpressionStatement	"tcc_define_symbol ( s , ""arm"" , NULL )"	578:2:13003:13037	6115851	6	True				
ANR	6116349	CallExpression	"tcc_define_symbol ( s , ""arm"" , NULL )"		6115851	0					
ANR	6116350	Callee	tcc_define_symbol		6115851	0					
ANR	6116351	Identifier	tcc_define_symbol		6115851	0					
ANR	6116352	ArgumentList	s		6115851	1					
ANR	6116353	Argument	s		6115851	0					
ANR	6116354	Identifier	s		6115851	0					
ANR	6116355	Argument	"""arm"""		6115851	1					
ANR	6116356	PrimaryExpression	"""arm"""		6115851	0					
ANR	6116357	Argument	NULL		6115851	2					
ANR	6116358	Identifier	NULL		6115851	0					
ANR	6116359	ExpressionStatement	"tcc_define_symbol ( s , ""__APCS_32__"" , NULL )"	579:2:13041:13083	6115851	7	True				
ANR	6116360	CallExpression	"tcc_define_symbol ( s , ""__APCS_32__"" , NULL )"		6115851	0					
ANR	6116361	Callee	tcc_define_symbol		6115851	0					
ANR	6116362	Identifier	tcc_define_symbol		6115851	0					
ANR	6116363	ArgumentList	s		6115851	1					
ANR	6116364	Argument	s		6115851	0					
ANR	6116365	Identifier	s		6115851	0					
ANR	6116366	Argument	"""__APCS_32__"""		6115851	1					
ANR	6116367	PrimaryExpression	"""__APCS_32__"""		6115851	0					
ANR	6116368	Argument	NULL		6115851	2					
ANR	6116369	Identifier	NULL		6115851	0					
ANR	6116370	IfStatement	"if ( ! strncmp ( os , ""windows"" , 7 ) )"		6115851	34					
ANR	6116371	Condition	"! strncmp ( os , ""windows"" , 7 )"	584:5:13155:13181	6115851	0	True				
ANR	6116372	UnaryOperationExpression	"! strncmp ( os , ""windows"" , 7 )"		6115851	0					
ANR	6116373	UnaryOperator	!		6115851	0					
ANR	6116374	CallExpression	"strncmp ( os , ""windows"" , 7 )"		6115851	1					
ANR	6116375	Callee	strncmp		6115851	0					
ANR	6116376	Identifier	strncmp		6115851	0					
ANR	6116377	ArgumentList	os		6115851	1					
ANR	6116378	Argument	os		6115851	0					
ANR	6116379	Identifier	os		6115851	0					
ANR	6116380	Argument	"""windows"""		6115851	1					
ANR	6116381	PrimaryExpression	"""windows"""		6115851	0					
ANR	6116382	Argument	7		6115851	2					
ANR	6116383	PrimaryExpression	7		6115851	0					
ANR	6116384	CompoundStatement		73:34:2185:2185	6115851	1					
ANR	6116385	ExpressionStatement	"tcc_define_symbol ( s , ""__WINDOWS__"" , NULL )"	585:2:13188:13230	6115851	0	True				
ANR	6116386	CallExpression	"tcc_define_symbol ( s , ""__WINDOWS__"" , NULL )"		6115851	0					
ANR	6116387	Callee	tcc_define_symbol		6115851	0					
ANR	6116388	Identifier	tcc_define_symbol		6115851	0					
ANR	6116389	ArgumentList	s		6115851	1					
ANR	6116390	Argument	s		6115851	0					
ANR	6116391	Identifier	s		6115851	0					
ANR	6116392	Argument	"""__WINDOWS__"""		6115851	1					
ANR	6116393	PrimaryExpression	"""__WINDOWS__"""		6115851	0					
ANR	6116394	Argument	NULL		6115851	2					
ANR	6116395	Identifier	NULL		6115851	0					
ANR	6116396	IfStatement	if ( bits == 64 )		6115851	1					
ANR	6116397	Condition	bits == 64	586:6:13238:13247	6115851	0	True				
ANR	6116398	EqualityExpression	bits == 64		6115851	0		==			
ANR	6116399	Identifier	bits		6115851	0					
ANR	6116400	PrimaryExpression	64		6115851	1					
ANR	6116401	CompoundStatement		75:18:2251:2251	6115851	1					
ANR	6116402	ExpressionStatement	"tcc_define_symbol ( s , ""_WIN64"" , NULL )"	587:3:13255:13292	6115851	0	True				
ANR	6116403	CallExpression	"tcc_define_symbol ( s , ""_WIN64"" , NULL )"		6115851	0					
ANR	6116404	Callee	tcc_define_symbol		6115851	0					
ANR	6116405	Identifier	tcc_define_symbol		6115851	0					
ANR	6116406	ArgumentList	s		6115851	1					
ANR	6116407	Argument	s		6115851	0					
ANR	6116408	Identifier	s		6115851	0					
ANR	6116409	Argument	"""_WIN64"""		6115851	1					
ANR	6116410	PrimaryExpression	"""_WIN64"""		6115851	0					
ANR	6116411	Argument	NULL		6115851	2					
ANR	6116412	Identifier	NULL		6115851	0					
ANR	6116413	ElseStatement	else		6115851	0					
ANR	6116414	CompoundStatement		78:8:2307:2307	6115851	0					
ANR	6116415	ExpressionStatement	"tcc_define_symbol ( s , ""__unix__"" , NULL )"	590:2:13310:13349	6115851	0	True				
ANR	6116416	CallExpression	"tcc_define_symbol ( s , ""__unix__"" , NULL )"		6115851	0					
ANR	6116417	Callee	tcc_define_symbol		6115851	0					
ANR	6116418	Identifier	tcc_define_symbol		6115851	0					
ANR	6116419	ArgumentList	s		6115851	1					
ANR	6116420	Argument	s		6115851	0					
ANR	6116421	Identifier	s		6115851	0					
ANR	6116422	Argument	"""__unix__"""		6115851	1					
ANR	6116423	PrimaryExpression	"""__unix__"""		6115851	0					
ANR	6116424	Argument	NULL		6115851	2					
ANR	6116425	Identifier	NULL		6115851	0					
ANR	6116426	ExpressionStatement	"tcc_define_symbol ( s , ""__unix"" , NULL )"	591:2:13353:13390	6115851	1	True				
ANR	6116427	CallExpression	"tcc_define_symbol ( s , ""__unix"" , NULL )"		6115851	0					
ANR	6116428	Callee	tcc_define_symbol		6115851	0					
ANR	6116429	Identifier	tcc_define_symbol		6115851	0					
ANR	6116430	ArgumentList	s		6115851	1					
ANR	6116431	Argument	s		6115851	0					
ANR	6116432	Identifier	s		6115851	0					
ANR	6116433	Argument	"""__unix"""		6115851	1					
ANR	6116434	PrimaryExpression	"""__unix"""		6115851	0					
ANR	6116435	Argument	NULL		6115851	2					
ANR	6116436	Identifier	NULL		6115851	0					
ANR	6116437	ExpressionStatement	"tcc_define_symbol ( s , ""unix"" , NULL )"	592:2:13394:13429	6115851	2	True				
ANR	6116438	CallExpression	"tcc_define_symbol ( s , ""unix"" , NULL )"		6115851	0					
ANR	6116439	Callee	tcc_define_symbol		6115851	0					
ANR	6116440	Identifier	tcc_define_symbol		6115851	0					
ANR	6116441	ArgumentList	s		6115851	1					
ANR	6116442	Argument	s		6115851	0					
ANR	6116443	Identifier	s		6115851	0					
ANR	6116444	Argument	"""unix"""		6115851	1					
ANR	6116445	PrimaryExpression	"""unix"""		6115851	0					
ANR	6116446	Argument	NULL		6115851	2					
ANR	6116447	Identifier	NULL		6115851	0					
ANR	6116448	IfStatement	"if ( ! strncmp ( os , ""linux"" , 5 ) )"		6115851	3					
ANR	6116449	Condition	"! strncmp ( os , ""linux"" , 5 )"	594:6:13438:13462	6115851	0	True				
ANR	6116450	UnaryOperationExpression	"! strncmp ( os , ""linux"" , 5 )"		6115851	0					
ANR	6116451	UnaryOperator	!		6115851	0					
ANR	6116452	CallExpression	"strncmp ( os , ""linux"" , 5 )"		6115851	1					
ANR	6116453	Callee	strncmp		6115851	0					
ANR	6116454	Identifier	strncmp		6115851	0					
ANR	6116455	ArgumentList	os		6115851	1					
ANR	6116456	Argument	os		6115851	0					
ANR	6116457	Identifier	os		6115851	0					
ANR	6116458	Argument	"""linux"""		6115851	1					
ANR	6116459	PrimaryExpression	"""linux"""		6115851	0					
ANR	6116460	Argument	5		6115851	2					
ANR	6116461	PrimaryExpression	5		6115851	0					
ANR	6116462	CompoundStatement		83:33:2466:2466	6115851	1					
ANR	6116463	ExpressionStatement	"tcc_define_symbol ( s , ""__linux__"" , NULL )"	595:3:13470:13510	6115851	0	True				
ANR	6116464	CallExpression	"tcc_define_symbol ( s , ""__linux__"" , NULL )"		6115851	0					
ANR	6116465	Callee	tcc_define_symbol		6115851	0					
ANR	6116466	Identifier	tcc_define_symbol		6115851	0					
ANR	6116467	ArgumentList	s		6115851	1					
ANR	6116468	Argument	s		6115851	0					
ANR	6116469	Identifier	s		6115851	0					
ANR	6116470	Argument	"""__linux__"""		6115851	1					
ANR	6116471	PrimaryExpression	"""__linux__"""		6115851	0					
ANR	6116472	Argument	NULL		6115851	2					
ANR	6116473	Identifier	NULL		6115851	0					
ANR	6116474	ExpressionStatement	"tcc_define_symbol ( s , ""__linux"" , NULL )"	596:3:13515:13553	6115851	1	True				
ANR	6116475	CallExpression	"tcc_define_symbol ( s , ""__linux"" , NULL )"		6115851	0					
ANR	6116476	Callee	tcc_define_symbol		6115851	0					
ANR	6116477	Identifier	tcc_define_symbol		6115851	0					
ANR	6116478	ArgumentList	s		6115851	1					
ANR	6116479	Argument	s		6115851	0					
ANR	6116480	Identifier	s		6115851	0					
ANR	6116481	Argument	"""__linux"""		6115851	1					
ANR	6116482	PrimaryExpression	"""__linux"""		6115851	0					
ANR	6116483	Argument	NULL		6115851	2					
ANR	6116484	Identifier	NULL		6115851	0					
ANR	6116485	Statement	define	598:1:13560:13565	6115851	4	True				
ANR	6116486	Statement	str	598:8:13567:13569	6115851	5	True				
ANR	6116487	Statement	(	598:11:13570:13570	6115851	6	True				
ANR	6116488	Statement	s	598:12:13571:13571	6115851	7	True				
ANR	6116489	Statement	)	598:13:13572:13572	6115851	8	True				
ANR	6116490	Statement	s	598:16:13575:13575	6115851	9	True				
ANR	6116491	IfStatement	"if ( ! strncmp ( os , ""freebsd"" , 7 ) )"		6115851	10					
ANR	6116492	Condition	"! strncmp ( os , ""freebsd"" , 7 )"	599:6:13583:13609	6115851	0	True				
ANR	6116493	UnaryOperationExpression	"! strncmp ( os , ""freebsd"" , 7 )"		6115851	0					
ANR	6116494	UnaryOperator	!		6115851	0					
ANR	6116495	CallExpression	"strncmp ( os , ""freebsd"" , 7 )"		6115851	1					
ANR	6116496	Callee	strncmp		6115851	0					
ANR	6116497	Identifier	strncmp		6115851	0					
ANR	6116498	ArgumentList	os		6115851	1					
ANR	6116499	Argument	os		6115851	0					
ANR	6116500	Identifier	os		6115851	0					
ANR	6116501	Argument	"""freebsd"""		6115851	1					
ANR	6116502	PrimaryExpression	"""freebsd"""		6115851	0					
ANR	6116503	Argument	7		6115851	2					
ANR	6116504	PrimaryExpression	7		6115851	0					
ANR	6116505	CompoundStatement		88:35:2613:2613	6115851	1					
ANR	6116506	ExpressionStatement	"tcc_define_symbol ( s , ""__FreeBSD__"" , str ( __FreeBSD__ ) )"	600:3:13617:13673	6115851	0	True				
ANR	6116507	CallExpression	"tcc_define_symbol ( s , ""__FreeBSD__"" , str ( __FreeBSD__ ) )"		6115851	0					
ANR	6116508	Callee	tcc_define_symbol		6115851	0					
ANR	6116509	Identifier	tcc_define_symbol		6115851	0					
ANR	6116510	ArgumentList	s		6115851	1					
ANR	6116511	Argument	s		6115851	0					
ANR	6116512	Identifier	s		6115851	0					
ANR	6116513	Argument	"""__FreeBSD__"""		6115851	1					
ANR	6116514	PrimaryExpression	"""__FreeBSD__"""		6115851	0					
ANR	6116515	Argument	str ( __FreeBSD__ )		6115851	2					
ANR	6116516	CallExpression	str ( __FreeBSD__ )		6115851	0					
ANR	6116517	Callee	str		6115851	0					
ANR	6116518	Identifier	str		6115851	0					
ANR	6116519	ArgumentList	__FreeBSD__		6115851	1					
ANR	6116520	Argument	__FreeBSD__		6115851	0					
ANR	6116521	Identifier	__FreeBSD__		6115851	0					
ANR	6116522	Statement	undef	602:1:13680:13684	6115851	11	True				
ANR	6116523	Statement	str	602:7:13686:13688	6115851	12	True				
ANR	6116524	IfStatement	"if ( ! strncmp ( os , ""windows"" , 7 ) && ( bits == 64 ) )"		6115851	35					
ANR	6116525	Condition	"! strncmp ( os , ""windows"" , 7 ) && ( bits == 64 )"	606:5:13727:13769	6115851	0	True				
ANR	6116526	AndExpression	"! strncmp ( os , ""windows"" , 7 ) && ( bits == 64 )"		6115851	0		&&			
ANR	6116527	UnaryOperationExpression	"! strncmp ( os , ""windows"" , 7 )"		6115851	0					
ANR	6116528	UnaryOperator	!		6115851	0					
ANR	6116529	CallExpression	"strncmp ( os , ""windows"" , 7 )"		6115851	1					
ANR	6116530	Callee	strncmp		6115851	0					
ANR	6116531	Identifier	strncmp		6115851	0					
ANR	6116532	ArgumentList	os		6115851	1					
ANR	6116533	Argument	os		6115851	0					
ANR	6116534	Identifier	os		6115851	0					
ANR	6116535	Argument	"""windows"""		6115851	1					
ANR	6116536	PrimaryExpression	"""windows"""		6115851	0					
ANR	6116537	Argument	7		6115851	2					
ANR	6116538	PrimaryExpression	7		6115851	0					
ANR	6116539	EqualityExpression	bits == 64		6115851	1		==			
ANR	6116540	Identifier	bits		6115851	0					
ANR	6116541	PrimaryExpression	64		6115851	1					
ANR	6116542	CompoundStatement		95:50:2773:2773	6115851	1					
ANR	6116543	ExpressionStatement	"tcc_define_symbol ( s , ""__SIZE_TYPE__"" , ""unsigned long long"" )"	607:2:13776:13836	6115851	0	True				
ANR	6116544	CallExpression	"tcc_define_symbol ( s , ""__SIZE_TYPE__"" , ""unsigned long long"" )"		6115851	0					
ANR	6116545	Callee	tcc_define_symbol		6115851	0					
ANR	6116546	Identifier	tcc_define_symbol		6115851	0					
ANR	6116547	ArgumentList	s		6115851	1					
ANR	6116548	Argument	s		6115851	0					
ANR	6116549	Identifier	s		6115851	0					
ANR	6116550	Argument	"""__SIZE_TYPE__"""		6115851	1					
ANR	6116551	PrimaryExpression	"""__SIZE_TYPE__"""		6115851	0					
ANR	6116552	Argument	"""unsigned long long"""		6115851	2					
ANR	6116553	PrimaryExpression	"""unsigned long long"""		6115851	0					
ANR	6116554	ExpressionStatement	"tcc_define_symbol ( s , ""__PTRDIFF_TYPE__"" , ""long long"" )"	608:2:13840:13894	6115851	1	True				
ANR	6116555	CallExpression	"tcc_define_symbol ( s , ""__PTRDIFF_TYPE__"" , ""long long"" )"		6115851	0					
ANR	6116556	Callee	tcc_define_symbol		6115851	0					
ANR	6116557	Identifier	tcc_define_symbol		6115851	0					
ANR	6116558	ArgumentList	s		6115851	1					
ANR	6116559	Argument	s		6115851	0					
ANR	6116560	Identifier	s		6115851	0					
ANR	6116561	Argument	"""__PTRDIFF_TYPE__"""		6115851	1					
ANR	6116562	PrimaryExpression	"""__PTRDIFF_TYPE__"""		6115851	0					
ANR	6116563	Argument	"""long long"""		6115851	2					
ANR	6116564	PrimaryExpression	"""long long"""		6115851	0					
ANR	6116565	ElseStatement	else		6115851	0					
ANR	6116566	CompoundStatement		98:8:2905:2905	6115851	0					
ANR	6116567	ExpressionStatement	"tcc_define_symbol ( s , ""__SIZE_TYPE__"" , ""unsigned long"" )"	610:2:13908:13963	6115851	0	True				
ANR	6116568	CallExpression	"tcc_define_symbol ( s , ""__SIZE_TYPE__"" , ""unsigned long"" )"		6115851	0					
ANR	6116569	Callee	tcc_define_symbol		6115851	0					
ANR	6116570	Identifier	tcc_define_symbol		6115851	0					
ANR	6116571	ArgumentList	s		6115851	1					
ANR	6116572	Argument	s		6115851	0					
ANR	6116573	Identifier	s		6115851	0					
ANR	6116574	Argument	"""__SIZE_TYPE__"""		6115851	1					
ANR	6116575	PrimaryExpression	"""__SIZE_TYPE__"""		6115851	0					
ANR	6116576	Argument	"""unsigned long"""		6115851	2					
ANR	6116577	PrimaryExpression	"""unsigned long"""		6115851	0					
ANR	6116578	ExpressionStatement	"tcc_define_symbol ( s , ""__PTRDIFF_TYPE__"" , ""long"" )"	611:2:13967:14016	6115851	1	True				
ANR	6116579	CallExpression	"tcc_define_symbol ( s , ""__PTRDIFF_TYPE__"" , ""long"" )"		6115851	0					
ANR	6116580	Callee	tcc_define_symbol		6115851	0					
ANR	6116581	Identifier	tcc_define_symbol		6115851	0					
ANR	6116582	ArgumentList	s		6115851	1					
ANR	6116583	Argument	s		6115851	0					
ANR	6116584	Identifier	s		6115851	0					
ANR	6116585	Argument	"""__PTRDIFF_TYPE__"""		6115851	1					
ANR	6116586	PrimaryExpression	"""__PTRDIFF_TYPE__"""		6115851	0					
ANR	6116587	Argument	"""long"""		6115851	2					
ANR	6116588	PrimaryExpression	"""long"""		6115851	0					
ANR	6116589	IfStatement	"if ( ! strncmp ( os , ""windows"" , 7 ) )"		6115851	36					
ANR	6116590	Condition	"! strncmp ( os , ""windows"" , 7 )"	614:5:14027:14053	6115851	0	True				
ANR	6116591	UnaryOperationExpression	"! strncmp ( os , ""windows"" , 7 )"		6115851	0					
ANR	6116592	UnaryOperator	!		6115851	0					
ANR	6116593	CallExpression	"strncmp ( os , ""windows"" , 7 )"		6115851	1					
ANR	6116594	Callee	strncmp		6115851	0					
ANR	6116595	Identifier	strncmp		6115851	0					
ANR	6116596	ArgumentList	os		6115851	1					
ANR	6116597	Argument	os		6115851	0					
ANR	6116598	Identifier	os		6115851	0					
ANR	6116599	Argument	"""windows"""		6115851	1					
ANR	6116600	PrimaryExpression	"""windows"""		6115851	0					
ANR	6116601	Argument	7		6115851	2					
ANR	6116602	PrimaryExpression	7		6115851	0					
ANR	6116603	CompoundStatement		103:34:3057:3057	6115851	1					
ANR	6116604	ExpressionStatement	"tcc_define_symbol ( s , ""__WCHAR_TYPE__"" , ""unsigned short"" )"	615:2:14060:14117	6115851	0	True				
ANR	6116605	CallExpression	"tcc_define_symbol ( s , ""__WCHAR_TYPE__"" , ""unsigned short"" )"		6115851	0					
ANR	6116606	Callee	tcc_define_symbol		6115851	0					
ANR	6116607	Identifier	tcc_define_symbol		6115851	0					
ANR	6116608	ArgumentList	s		6115851	1					
ANR	6116609	Argument	s		6115851	0					
ANR	6116610	Identifier	s		6115851	0					
ANR	6116611	Argument	"""__WCHAR_TYPE__"""		6115851	1					
ANR	6116612	PrimaryExpression	"""__WCHAR_TYPE__"""		6115851	0					
ANR	6116613	Argument	"""unsigned short"""		6115851	2					
ANR	6116614	PrimaryExpression	"""unsigned short"""		6115851	0					
ANR	6116615	ElseStatement	else		6115851	0					
ANR	6116616	CompoundStatement		105:8:3128:3128	6115851	0					
ANR	6116617	ExpressionStatement	"tcc_define_symbol ( s , ""__WCHAR_TYPE__"" , ""int"" )"	617:2:14131:14177	6115851	0	True				
ANR	6116618	CallExpression	"tcc_define_symbol ( s , ""__WCHAR_TYPE__"" , ""int"" )"		6115851	0					
ANR	6116619	Callee	tcc_define_symbol		6115851	0					
ANR	6116620	Identifier	tcc_define_symbol		6115851	0					
ANR	6116621	ArgumentList	s		6115851	1					
ANR	6116622	Argument	s		6115851	0					
ANR	6116623	Identifier	s		6115851	0					
ANR	6116624	Argument	"""__WCHAR_TYPE__"""		6115851	1					
ANR	6116625	PrimaryExpression	"""__WCHAR_TYPE__"""		6115851	0					
ANR	6116626	Argument	"""int"""		6115851	2					
ANR	6116627	PrimaryExpression	"""int"""		6115851	0					
ANR	6116628	ExpressionStatement	"tcc_define_symbol ( s , ""__REDIRECT(name, proto, alias)"" , ""name proto __asm__(#alias)"" )"	619:2:14203:14288	6115851	1	True				
ANR	6116629	CallExpression	"tcc_define_symbol ( s , ""__REDIRECT(name, proto, alias)"" , ""name proto __asm__(#alias)"" )"		6115851	0					
ANR	6116630	Callee	tcc_define_symbol		6115851	0					
ANR	6116631	Identifier	tcc_define_symbol		6115851	0					
ANR	6116632	ArgumentList	s		6115851	1					
ANR	6116633	Argument	s		6115851	0					
ANR	6116634	Identifier	s		6115851	0					
ANR	6116635	Argument	"""__REDIRECT(name, proto, alias)"""		6115851	1					
ANR	6116636	PrimaryExpression	"""__REDIRECT(name, proto, alias)"""		6115851	0					
ANR	6116637	Argument	"""name proto __asm__(#alias)"""		6115851	2					
ANR	6116638	PrimaryExpression	"""name proto __asm__(#alias)"""		6115851	0					
ANR	6116639	ExpressionStatement	"tcc_define_symbol ( s , ""__REDIRECT_NTH(name, proto, alias)"" , ""name proto __asm__(#alias) __THROW"" )"	620:2:14292:14389	6115851	2	True				
ANR	6116640	CallExpression	"tcc_define_symbol ( s , ""__REDIRECT_NTH(name, proto, alias)"" , ""name proto __asm__(#alias) __THROW"" )"		6115851	0					
ANR	6116641	Callee	tcc_define_symbol		6115851	0					
ANR	6116642	Identifier	tcc_define_symbol		6115851	0					
ANR	6116643	ArgumentList	s		6115851	1					
ANR	6116644	Argument	s		6115851	0					
ANR	6116645	Identifier	s		6115851	0					
ANR	6116646	Argument	"""__REDIRECT_NTH(name, proto, alias)"""		6115851	1					
ANR	6116647	PrimaryExpression	"""__REDIRECT_NTH(name, proto, alias)"""		6115851	0					
ANR	6116648	Argument	"""name proto __asm__(#alias) __THROW"""		6115851	2					
ANR	6116649	PrimaryExpression	"""name proto __asm__(#alias) __THROW"""		6115851	0					
ANR	6116650	ExpressionStatement	s -> alacarte_link = 1	623:1:14396:14416	6115851	37	True				
ANR	6116651	AssignmentExpression	s -> alacarte_link = 1		6115851	0		=			
ANR	6116652	PtrMemberAccess	s -> alacarte_link		6115851	0					
ANR	6116653	Identifier	s		6115851	0					
ANR	6116654	Identifier	alacarte_link		6115851	1					
ANR	6116655	PrimaryExpression	1		6115851	1					
ANR	6116656	ExpressionStatement	s -> nocommon = 1	624:1:14419:14434	6115851	38	True				
ANR	6116657	AssignmentExpression	s -> nocommon = 1		6115851	0		=			
ANR	6116658	PtrMemberAccess	s -> nocommon		6115851	0					
ANR	6116659	Identifier	s		6115851	0					
ANR	6116660	Identifier	nocommon		6115851	1					
ANR	6116661	PrimaryExpression	1		6115851	1					
ANR	6116662	ExpressionStatement	s -> char_is_unsigned = 1	627:1:14462:14485	6115851	39	True				
ANR	6116663	AssignmentExpression	s -> char_is_unsigned = 1		6115851	0		=			
ANR	6116664	PtrMemberAccess	s -> char_is_unsigned		6115851	0					
ANR	6116665	Identifier	s		6115851	0					
ANR	6116666	Identifier	char_is_unsigned		6115851	1					
ANR	6116667	PrimaryExpression	1		6115851	1					
ANR	6116668	ExpressionStatement	s -> leading_underscore = 1	631:1:14600:14625	6115851	40	True				
ANR	6116669	AssignmentExpression	s -> leading_underscore = 1		6115851	0		=			
ANR	6116670	PtrMemberAccess	s -> leading_underscore		6115851	0					
ANR	6116671	Identifier	s		6115851	0					
ANR	6116672	Identifier	leading_underscore		6115851	1					
ANR	6116673	PrimaryExpression	1		6115851	1					
ANR	6116674	IfStatement	"if ( ! strncmp ( arch , ""x86"" , 3 ) )"		6115851	41					
ANR	6116675	Condition	"! strncmp ( arch , ""x86"" , 3 )"	633:5:14639:14663	6115851	0	True				
ANR	6116676	UnaryOperationExpression	"! strncmp ( arch , ""x86"" , 3 )"		6115851	0					
ANR	6116677	UnaryOperator	!		6115851	0					
ANR	6116678	CallExpression	"strncmp ( arch , ""x86"" , 3 )"		6115851	1					
ANR	6116679	Callee	strncmp		6115851	0					
ANR	6116680	Identifier	strncmp		6115851	0					
ANR	6116681	ArgumentList	arch		6115851	1					
ANR	6116682	Argument	arch		6115851	0					
ANR	6116683	Identifier	arch		6115851	0					
ANR	6116684	Argument	"""x86"""		6115851	1					
ANR	6116685	PrimaryExpression	"""x86"""		6115851	0					
ANR	6116686	Argument	3		6115851	2					
ANR	6116687	PrimaryExpression	3		6115851	0					
ANR	6116688	CompoundStatement		122:32:3667:3667	6115851	1					
ANR	6116689	IfStatement	if ( bits == 32 || bits == 16 )		6115851	0					
ANR	6116690	Condition	bits == 32 || bits == 16	635:6:14712:14735	6115851	0	True				
ANR	6116691	OrExpression	bits == 32 || bits == 16		6115851	0		||			
ANR	6116692	EqualityExpression	bits == 32		6115851	0		==			
ANR	6116693	Identifier	bits		6115851	0					
ANR	6116694	PrimaryExpression	32		6115851	1					
ANR	6116695	EqualityExpression	bits == 16		6115851	1		==			
ANR	6116696	Identifier	bits		6115851	0					
ANR	6116697	PrimaryExpression	16		6115851	1					
ANR	6116698	CompoundStatement		124:32:3739:3739	6115851	1					
ANR	6116699	ExpressionStatement	s -> seg_size = 32	636:3:14743:14759	6115851	0	True				
ANR	6116700	AssignmentExpression	s -> seg_size = 32		6115851	0		=			
ANR	6116701	PtrMemberAccess	s -> seg_size		6115851	0					
ANR	6116702	Identifier	s		6115851	0					
ANR	6116703	Identifier	seg_size		6115851	1					
ANR	6116704	PrimaryExpression	32		6115851	1					
ANR	6116705	ReturnStatement	return s ;	639:1:14769:14777	6115851	42	True				
ANR	6116706	Identifier	s		6115851	0					
ANR	6116707	ReturnType	LIBTCCAPI TCCState *		6115851	1					
ANR	6116708	Identifier	tcc_new		6115851	2					
ANR	6116709	ParameterList	"const char * arch , int bits , const char * os"		6115851	3					
ANR	6116710	Parameter	const char * arch	511:28:10954:10969	6115851	0	True				
ANR	6116711	ParameterType	const char *		6115851	0					
ANR	6116712	Identifier	arch		6115851	1					
ANR	6116713	Parameter	int bits	511:46:10972:10979	6115851	1	True				
ANR	6116714	ParameterType	int		6115851	0					
ANR	6116715	Identifier	bits		6115851	1					
ANR	6116716	Parameter	const char * os	511:56:10982:10995	6115851	2	True				
ANR	6116717	ParameterType	const char *		6115851	0					
ANR	6116718	Identifier	os		6115851	1					
ANR	6116719	CFGEntryNode	ENTRY		6115851		True				
ANR	6116720	CFGExitNode	EXIT		6115851		True				
ANR	6116721	Symbol	s -> seg_size		6115851						
ANR	6116722	Symbol	TOK___FILE__		6115851						
ANR	6116723	Symbol	s -> alacarte_link		6115851						
ANR	6116724	Symbol	TCC_VERSION		6115851						
ANR	6116725	Symbol	strncmp		6115851						
ANR	6116726	Symbol	s -> include_stack_ptr		6115851						
ANR	6116727	Symbol	__FreeBSD__		6115851						
ANR	6116728	Symbol	TOK___DATE__		6115851						
ANR	6116729	Symbol	s -> os		6115851						
ANR	6116730	Symbol	TCC_OUTPUT_MEMORY		6115851						
ANR	6116731	Symbol	buffer		6115851						
ANR	6116732	Symbol	tcc_state		6115851						
ANR	6116733	Symbol	a		6115851						
ANR	6116734	Symbol	s -> arch		6115851						
ANR	6116735	Symbol	s -> nocommon		6115851						
ANR	6116736	Symbol	b		6115851						
ANR	6116737	Symbol	c		6115851						
ANR	6116738	Symbol	NULL		6115851						
ANR	6116739	Symbol	s -> leading_underscore		6115851						
ANR	6116740	Symbol	os		6115851						
ANR	6116741	Symbol	tcc_mallocz		6115851						
ANR	6116742	Symbol	& a		6115851						
ANR	6116743	Symbol	bits		6115851						
ANR	6116744	Symbol	& b		6115851						
ANR	6116745	Symbol	& c		6115851						
ANR	6116746	Symbol	s -> output_type		6115851						
ANR	6116747	Symbol	s -> char_is_unsigned		6115851						
ANR	6116748	Symbol	str		6115851						
ANR	6116749	Symbol	s -> bits		6115851						
ANR	6116750	Symbol	s -> include_stack		6115851						
ANR	6116751	Symbol	MACRO_OBJ		6115851						
ANR	6116752	Symbol	s		6115851						
ANR	6116753	Symbol	TOK___TIME__		6115851						
ANR	6116754	Symbol	arch		6115851						
ANR	6116755	Symbol	strdup		6115851						
ANR	6116756	Symbol	TOK___LINE__		6115851						
ANR	6116757	Symbol	* s		6115851						
ANR	6116758	Function	tcc_delete	642:0:14782:15703							
ANR	6116759	FunctionDef	tcc_delete (TCCState * s1)		6116758	0					
ANR	6116760	CompoundStatement		643:0:14822:15703	6116758	0					
ANR	6116761	ExpressionStatement	tcc_cleanup ( )	644:1:14825:14839	6116758	0	True				
ANR	6116762	CallExpression	tcc_cleanup ( )		6116758	0					
ANR	6116763	Callee	tcc_cleanup		6116758	0					
ANR	6116764	Identifier	tcc_cleanup		6116758	0					
ANR	6116765	ArgumentList			6116758	1					
ANR	6116766	ExpressionStatement	"dynarray_reset ( & s1 -> library_paths , & s1 -> nb_library_paths )"	647:1:14869:14927	6116758	1	True				
ANR	6116767	CallExpression	"dynarray_reset ( & s1 -> library_paths , & s1 -> nb_library_paths )"		6116758	0					
ANR	6116768	Callee	dynarray_reset		6116758	0					
ANR	6116769	Identifier	dynarray_reset		6116758	0					
ANR	6116770	ArgumentList	& s1 -> library_paths		6116758	1					
ANR	6116771	Argument	& s1 -> library_paths		6116758	0					
ANR	6116772	UnaryOperationExpression	& s1 -> library_paths		6116758	0					
ANR	6116773	UnaryOperator	&		6116758	0					
ANR	6116774	PtrMemberAccess	s1 -> library_paths		6116758	1					
ANR	6116775	Identifier	s1		6116758	0					
ANR	6116776	Identifier	library_paths		6116758	1					
ANR	6116777	Argument	& s1 -> nb_library_paths		6116758	1					
ANR	6116778	UnaryOperationExpression	& s1 -> nb_library_paths		6116758	0					
ANR	6116779	UnaryOperator	&		6116758	0					
ANR	6116780	PtrMemberAccess	s1 -> nb_library_paths		6116758	1					
ANR	6116781	Identifier	s1		6116758	0					
ANR	6116782	Identifier	nb_library_paths		6116758	1					
ANR	6116783	ExpressionStatement	"dynarray_reset ( & s1 -> crt_paths , & s1 -> nb_crt_paths )"	648:1:14930:14980	6116758	2	True				
ANR	6116784	CallExpression	"dynarray_reset ( & s1 -> crt_paths , & s1 -> nb_crt_paths )"		6116758	0					
ANR	6116785	Callee	dynarray_reset		6116758	0					
ANR	6116786	Identifier	dynarray_reset		6116758	0					
ANR	6116787	ArgumentList	& s1 -> crt_paths		6116758	1					
ANR	6116788	Argument	& s1 -> crt_paths		6116758	0					
ANR	6116789	UnaryOperationExpression	& s1 -> crt_paths		6116758	0					
ANR	6116790	UnaryOperator	&		6116758	0					
ANR	6116791	PtrMemberAccess	s1 -> crt_paths		6116758	1					
ANR	6116792	Identifier	s1		6116758	0					
ANR	6116793	Identifier	crt_paths		6116758	1					
ANR	6116794	Argument	& s1 -> nb_crt_paths		6116758	1					
ANR	6116795	UnaryOperationExpression	& s1 -> nb_crt_paths		6116758	0					
ANR	6116796	UnaryOperator	&		6116758	0					
ANR	6116797	PtrMemberAccess	s1 -> nb_crt_paths		6116758	1					
ANR	6116798	Identifier	s1		6116758	0					
ANR	6116799	Identifier	nb_crt_paths		6116758	1					
ANR	6116800	ExpressionStatement	"dynarray_reset ( & s1 -> cached_includes , & s1 -> nb_cached_includes )"	651:1:15010:15072	6116758	3	True				
ANR	6116801	CallExpression	"dynarray_reset ( & s1 -> cached_includes , & s1 -> nb_cached_includes )"		6116758	0					
ANR	6116802	Callee	dynarray_reset		6116758	0					
ANR	6116803	Identifier	dynarray_reset		6116758	0					
ANR	6116804	ArgumentList	& s1 -> cached_includes		6116758	1					
ANR	6116805	Argument	& s1 -> cached_includes		6116758	0					
ANR	6116806	UnaryOperationExpression	& s1 -> cached_includes		6116758	0					
ANR	6116807	UnaryOperator	&		6116758	0					
ANR	6116808	PtrMemberAccess	s1 -> cached_includes		6116758	1					
ANR	6116809	Identifier	s1		6116758	0					
ANR	6116810	Identifier	cached_includes		6116758	1					
ANR	6116811	Argument	& s1 -> nb_cached_includes		6116758	1					
ANR	6116812	UnaryOperationExpression	& s1 -> nb_cached_includes		6116758	0					
ANR	6116813	UnaryOperator	&		6116758	0					
ANR	6116814	PtrMemberAccess	s1 -> nb_cached_includes		6116758	1					
ANR	6116815	Identifier	s1		6116758	0					
ANR	6116816	Identifier	nb_cached_includes		6116758	1					
ANR	6116817	ExpressionStatement	"dynarray_reset ( & s1 -> include_paths , & s1 -> nb_include_paths )"	652:1:15075:15133	6116758	4	True				
ANR	6116818	CallExpression	"dynarray_reset ( & s1 -> include_paths , & s1 -> nb_include_paths )"		6116758	0					
ANR	6116819	Callee	dynarray_reset		6116758	0					
ANR	6116820	Identifier	dynarray_reset		6116758	0					
ANR	6116821	ArgumentList	& s1 -> include_paths		6116758	1					
ANR	6116822	Argument	& s1 -> include_paths		6116758	0					
ANR	6116823	UnaryOperationExpression	& s1 -> include_paths		6116758	0					
ANR	6116824	UnaryOperator	&		6116758	0					
ANR	6116825	PtrMemberAccess	s1 -> include_paths		6116758	1					
ANR	6116826	Identifier	s1		6116758	0					
ANR	6116827	Identifier	include_paths		6116758	1					
ANR	6116828	Argument	& s1 -> nb_include_paths		6116758	1					
ANR	6116829	UnaryOperationExpression	& s1 -> nb_include_paths		6116758	0					
ANR	6116830	UnaryOperator	&		6116758	0					
ANR	6116831	PtrMemberAccess	s1 -> nb_include_paths		6116758	1					
ANR	6116832	Identifier	s1		6116758	0					
ANR	6116833	Identifier	nb_include_paths		6116758	1					
ANR	6116834	ExpressionStatement	"dynarray_reset ( & s1 -> sysinclude_paths , & s1 -> nb_sysinclude_paths )"	653:1:15136:15200	6116758	5	True				
ANR	6116835	CallExpression	"dynarray_reset ( & s1 -> sysinclude_paths , & s1 -> nb_sysinclude_paths )"		6116758	0					
ANR	6116836	Callee	dynarray_reset		6116758	0					
ANR	6116837	Identifier	dynarray_reset		6116758	0					
ANR	6116838	ArgumentList	& s1 -> sysinclude_paths		6116758	1					
ANR	6116839	Argument	& s1 -> sysinclude_paths		6116758	0					
ANR	6116840	UnaryOperationExpression	& s1 -> sysinclude_paths		6116758	0					
ANR	6116841	UnaryOperator	&		6116758	0					
ANR	6116842	PtrMemberAccess	s1 -> sysinclude_paths		6116758	1					
ANR	6116843	Identifier	s1		6116758	0					
ANR	6116844	Identifier	sysinclude_paths		6116758	1					
ANR	6116845	Argument	& s1 -> nb_sysinclude_paths		6116758	1					
ANR	6116846	UnaryOperationExpression	& s1 -> nb_sysinclude_paths		6116758	0					
ANR	6116847	UnaryOperator	&		6116758	0					
ANR	6116848	PtrMemberAccess	s1 -> nb_sysinclude_paths		6116758	1					
ANR	6116849	Identifier	s1		6116758	0					
ANR	6116850	Identifier	nb_sysinclude_paths		6116758	1					
ANR	6116851	ExpressionStatement	free ( s1 -> tcc_lib_path )	655:1:15204:15227	6116758	6	True				
ANR	6116852	CallExpression	free ( s1 -> tcc_lib_path )		6116758	0					
ANR	6116853	Callee	free		6116758	0					
ANR	6116854	Identifier	free		6116758	0					
ANR	6116855	ArgumentList	s1 -> tcc_lib_path		6116758	1					
ANR	6116856	Argument	s1 -> tcc_lib_path		6116758	0					
ANR	6116857	PtrMemberAccess	s1 -> tcc_lib_path		6116758	0					
ANR	6116858	Identifier	s1		6116758	0					
ANR	6116859	Identifier	tcc_lib_path		6116758	1					
ANR	6116860	ExpressionStatement	free ( s1 -> soname )	656:1:15230:15247	6116758	7	True				
ANR	6116861	CallExpression	free ( s1 -> soname )		6116758	0					
ANR	6116862	Callee	free		6116758	0					
ANR	6116863	Identifier	free		6116758	0					
ANR	6116864	ArgumentList	s1 -> soname		6116758	1					
ANR	6116865	Argument	s1 -> soname		6116758	0					
ANR	6116866	PtrMemberAccess	s1 -> soname		6116758	0					
ANR	6116867	Identifier	s1		6116758	0					
ANR	6116868	Identifier	soname		6116758	1					
ANR	6116869	ExpressionStatement	free ( s1 -> rpath )	657:1:15250:15266	6116758	8	True				
ANR	6116870	CallExpression	free ( s1 -> rpath )		6116758	0					
ANR	6116871	Callee	free		6116758	0					
ANR	6116872	Identifier	free		6116758	0					
ANR	6116873	ArgumentList	s1 -> rpath		6116758	1					
ANR	6116874	Argument	s1 -> rpath		6116758	0					
ANR	6116875	PtrMemberAccess	s1 -> rpath		6116758	0					
ANR	6116876	Identifier	s1		6116758	0					
ANR	6116877	Identifier	rpath		6116758	1					
ANR	6116878	ExpressionStatement	free ( s1 -> init_symbol )	658:1:15269:15291	6116758	9	True				
ANR	6116879	CallExpression	free ( s1 -> init_symbol )		6116758	0					
ANR	6116880	Callee	free		6116758	0					
ANR	6116881	Identifier	free		6116758	0					
ANR	6116882	ArgumentList	s1 -> init_symbol		6116758	1					
ANR	6116883	Argument	s1 -> init_symbol		6116758	0					
ANR	6116884	PtrMemberAccess	s1 -> init_symbol		6116758	0					
ANR	6116885	Identifier	s1		6116758	0					
ANR	6116886	Identifier	init_symbol		6116758	1					
ANR	6116887	ExpressionStatement	free ( s1 -> fini_symbol )	659:1:15294:15316	6116758	10	True				
ANR	6116888	CallExpression	free ( s1 -> fini_symbol )		6116758	0					
ANR	6116889	Callee	free		6116758	0					
ANR	6116890	Identifier	free		6116758	0					
ANR	6116891	ArgumentList	s1 -> fini_symbol		6116758	1					
ANR	6116892	Argument	s1 -> fini_symbol		6116758	0					
ANR	6116893	PtrMemberAccess	s1 -> fini_symbol		6116758	0					
ANR	6116894	Identifier	s1		6116758	0					
ANR	6116895	Identifier	fini_symbol		6116758	1					
ANR	6116896	ExpressionStatement	free ( s1 -> outfile )	660:1:15319:15337	6116758	11	True				
ANR	6116897	CallExpression	free ( s1 -> outfile )		6116758	0					
ANR	6116898	Callee	free		6116758	0					
ANR	6116899	Identifier	free		6116758	0					
ANR	6116900	ArgumentList	s1 -> outfile		6116758	1					
ANR	6116901	Argument	s1 -> outfile		6116758	0					
ANR	6116902	PtrMemberAccess	s1 -> outfile		6116758	0					
ANR	6116903	Identifier	s1		6116758	0					
ANR	6116904	Identifier	outfile		6116758	1					
ANR	6116905	ExpressionStatement	free ( s1 -> deps_outfile )	661:1:15340:15363	6116758	12	True				
ANR	6116906	CallExpression	free ( s1 -> deps_outfile )		6116758	0					
ANR	6116907	Callee	free		6116758	0					
ANR	6116908	Identifier	free		6116758	0					
ANR	6116909	ArgumentList	s1 -> deps_outfile		6116758	1					
ANR	6116910	Argument	s1 -> deps_outfile		6116758	0					
ANR	6116911	PtrMemberAccess	s1 -> deps_outfile		6116758	0					
ANR	6116912	Identifier	s1		6116758	0					
ANR	6116913	Identifier	deps_outfile		6116758	1					
ANR	6116914	ExpressionStatement	"dynarray_reset ( & s1 -> files , & s1 -> nb_files )"	662:1:15366:15408	6116758	13	True				
ANR	6116915	CallExpression	"dynarray_reset ( & s1 -> files , & s1 -> nb_files )"		6116758	0					
ANR	6116916	Callee	dynarray_reset		6116758	0					
ANR	6116917	Identifier	dynarray_reset		6116758	0					
ANR	6116918	ArgumentList	& s1 -> files		6116758	1					
ANR	6116919	Argument	& s1 -> files		6116758	0					
ANR	6116920	UnaryOperationExpression	& s1 -> files		6116758	0					
ANR	6116921	UnaryOperator	&		6116758	0					
ANR	6116922	PtrMemberAccess	s1 -> files		6116758	1					
ANR	6116923	Identifier	s1		6116758	0					
ANR	6116924	Identifier	files		6116758	1					
ANR	6116925	Argument	& s1 -> nb_files		6116758	1					
ANR	6116926	UnaryOperationExpression	& s1 -> nb_files		6116758	0					
ANR	6116927	UnaryOperator	&		6116758	0					
ANR	6116928	PtrMemberAccess	s1 -> nb_files		6116758	1					
ANR	6116929	Identifier	s1		6116758	0					
ANR	6116930	Identifier	nb_files		6116758	1					
ANR	6116931	ExpressionStatement	"dynarray_reset ( & s1 -> target_deps , & s1 -> nb_target_deps )"	663:1:15411:15465	6116758	14	True				
ANR	6116932	CallExpression	"dynarray_reset ( & s1 -> target_deps , & s1 -> nb_target_deps )"		6116758	0					
ANR	6116933	Callee	dynarray_reset		6116758	0					
ANR	6116934	Identifier	dynarray_reset		6116758	0					
ANR	6116935	ArgumentList	& s1 -> target_deps		6116758	1					
ANR	6116936	Argument	& s1 -> target_deps		6116758	0					
ANR	6116937	UnaryOperationExpression	& s1 -> target_deps		6116758	0					
ANR	6116938	UnaryOperator	&		6116758	0					
ANR	6116939	PtrMemberAccess	s1 -> target_deps		6116758	1					
ANR	6116940	Identifier	s1		6116758	0					
ANR	6116941	Identifier	target_deps		6116758	1					
ANR	6116942	Argument	& s1 -> nb_target_deps		6116758	1					
ANR	6116943	UnaryOperationExpression	& s1 -> nb_target_deps		6116758	0					
ANR	6116944	UnaryOperator	&		6116758	0					
ANR	6116945	PtrMemberAccess	s1 -> nb_target_deps		6116758	1					
ANR	6116946	Identifier	s1		6116758	0					
ANR	6116947	Identifier	nb_target_deps		6116758	1					
ANR	6116948	ExpressionStatement	free ( s1 -> arch )	666:1:15490:15505	6116758	15	True				
ANR	6116949	CallExpression	free ( s1 -> arch )		6116758	0					
ANR	6116950	Callee	free		6116758	0					
ANR	6116951	Identifier	free		6116758	0					
ANR	6116952	ArgumentList	s1 -> arch		6116758	1					
ANR	6116953	Argument	s1 -> arch		6116758	0					
ANR	6116954	PtrMemberAccess	s1 -> arch		6116758	0					
ANR	6116955	Identifier	s1		6116758	0					
ANR	6116956	Identifier	arch		6116758	1					
ANR	6116957	ExpressionStatement	free ( s1 -> os )	667:1:15508:15521	6116758	16	True				
ANR	6116958	CallExpression	free ( s1 -> os )		6116758	0					
ANR	6116959	Callee	free		6116758	0					
ANR	6116960	Identifier	free		6116758	0					
ANR	6116961	ArgumentList	s1 -> os		6116758	1					
ANR	6116962	Argument	s1 -> os		6116758	0					
ANR	6116963	PtrMemberAccess	s1 -> os		6116758	0					
ANR	6116964	Identifier	s1		6116758	0					
ANR	6116965	Identifier	os		6116758	1					
ANR	6116966	ExpressionStatement	"munmap ( s1 -> write_mem , s1 -> mem_size )"	671:1:15566:15602	6116758	17	True				
ANR	6116967	CallExpression	"munmap ( s1 -> write_mem , s1 -> mem_size )"		6116758	0					
ANR	6116968	Callee	munmap		6116758	0					
ANR	6116969	Identifier	munmap		6116758	0					
ANR	6116970	ArgumentList	s1 -> write_mem		6116758	1					
ANR	6116971	Argument	s1 -> write_mem		6116758	0					
ANR	6116972	PtrMemberAccess	s1 -> write_mem		6116758	0					
ANR	6116973	Identifier	s1		6116758	0					
ANR	6116974	Identifier	write_mem		6116758	1					
ANR	6116975	Argument	s1 -> mem_size		6116758	1					
ANR	6116976	PtrMemberAccess	s1 -> mem_size		6116758	0					
ANR	6116977	Identifier	s1		6116758	0					
ANR	6116978	Identifier	mem_size		6116758	1					
ANR	6116979	ExpressionStatement	"munmap ( s1 -> runtime_mem , s1 -> mem_size )"	672:1:15605:15643	6116758	18	True				
ANR	6116980	CallExpression	"munmap ( s1 -> runtime_mem , s1 -> mem_size )"		6116758	0					
ANR	6116981	Callee	munmap		6116758	0					
ANR	6116982	Identifier	munmap		6116758	0					
ANR	6116983	ArgumentList	s1 -> runtime_mem		6116758	1					
ANR	6116984	Argument	s1 -> runtime_mem		6116758	0					
ANR	6116985	PtrMemberAccess	s1 -> runtime_mem		6116758	0					
ANR	6116986	Identifier	s1		6116758	0					
ANR	6116987	Identifier	runtime_mem		6116758	1					
ANR	6116988	Argument	s1 -> mem_size		6116758	1					
ANR	6116989	PtrMemberAccess	s1 -> mem_size		6116758	0					
ANR	6116990	Identifier	s1		6116758	0					
ANR	6116991	Identifier	mem_size		6116758	1					
ANR	6116992	ExpressionStatement	free ( s1 )	678:1:15692:15701	6116758	19	True				
ANR	6116993	CallExpression	free ( s1 )		6116758	0					
ANR	6116994	Callee	free		6116758	0					
ANR	6116995	Identifier	free		6116758	0					
ANR	6116996	ArgumentList	s1		6116758	1					
ANR	6116997	Argument	s1		6116758	0					
ANR	6116998	Identifier	s1		6116758	0					
ANR	6116999	ReturnType	LIBTCCAPI void		6116758	1					
ANR	6117000	Identifier	tcc_delete		6116758	2					
ANR	6117001	ParameterList	TCCState * s1		6116758	3					
ANR	6117002	Parameter	TCCState * s1	642:26:14808:14819	6116758	0	True				
ANR	6117003	ParameterType	TCCState *		6116758	0					
ANR	6117004	Identifier	s1		6116758	1					
ANR	6117005	CFGEntryNode	ENTRY		6116758		True				
ANR	6117006	CFGExitNode	EXIT		6116758		True				
ANR	6117007	Symbol	& s1 -> library_paths		6116758						
ANR	6117008	Symbol	& s1 -> nb_sysinclude_paths		6116758						
ANR	6117009	Symbol	* s1		6116758						
ANR	6117010	Symbol	& s1 -> crt_paths		6116758						
ANR	6117011	Symbol	s1 -> deps_outfile		6116758						
ANR	6117012	Symbol	& s1 -> files		6116758						
ANR	6117013	Symbol	s1 -> arch		6116758						
ANR	6117014	Symbol	s1 -> soname		6116758						
ANR	6117015	Symbol	s1 -> fini_symbol		6116758						
ANR	6117016	Symbol	& s1 -> nb_include_paths		6116758						
ANR	6117017	Symbol	& s1 -> nb_target_deps		6116758						
ANR	6117018	Symbol	s1 -> runtime_mem		6116758						
ANR	6117019	Symbol	& s1 -> include_paths		6116758						
ANR	6117020	Symbol	& s1 -> sysinclude_paths		6116758						
ANR	6117021	Symbol	& s1 -> target_deps		6116758						
ANR	6117022	Symbol	s1 -> os		6116758						
ANR	6117023	Symbol	& s1 -> nb_cached_includes		6116758						
ANR	6117024	Symbol	s1		6116758						
ANR	6117025	Symbol	& s1 -> cached_includes		6116758						
ANR	6117026	Symbol	s1 -> mem_size		6116758						
ANR	6117027	Symbol	s1 -> init_symbol		6116758						
ANR	6117028	Symbol	s1 -> write_mem		6116758						
ANR	6117029	Symbol	& s1 -> nb_files		6116758						
ANR	6117030	Symbol	s1 -> rpath		6116758						
ANR	6117031	Symbol	s1 -> tcc_lib_path		6116758						
ANR	6117032	Symbol	& s1 -> nb_library_paths		6116758						
ANR	6117033	Symbol	& s1 -> nb_crt_paths		6116758						
ANR	6117034	Symbol	s1 -> outfile		6116758						
ANR	6117035	Function	tcc_add_include_path	681:0:15706:15872							
ANR	6117036	FunctionDef	"tcc_add_include_path (TCCState * s , const char * pathname)"		6117035	0					
ANR	6117037	CompoundStatement		682:0:15776:15872	6117035	0					
ANR	6117038	ExpressionStatement	"tcc_split_path ( s , ( void * * * ) & s -> include_paths , & s -> nb_include_paths , pathname )"	683:1:15779:15859	6117035	0	True				
ANR	6117039	CallExpression	"tcc_split_path ( s , ( void * * * ) & s -> include_paths , & s -> nb_include_paths , pathname )"		6117035	0					
ANR	6117040	Callee	tcc_split_path		6117035	0					
ANR	6117041	Identifier	tcc_split_path		6117035	0					
ANR	6117042	ArgumentList	s		6117035	1					
ANR	6117043	Argument	s		6117035	0					
ANR	6117044	Identifier	s		6117035	0					
ANR	6117045	Argument	( void * * * ) & s -> include_paths		6117035	1					
ANR	6117046	CastExpression	( void * * * ) & s -> include_paths		6117035	0					
ANR	6117047	CastTarget	void * * *		6117035	0					
ANR	6117048	UnaryOperationExpression	& s -> include_paths		6117035	1					
ANR	6117049	UnaryOperator	&		6117035	0					
ANR	6117050	PtrMemberAccess	s -> include_paths		6117035	1					
ANR	6117051	Identifier	s		6117035	0					
ANR	6117052	Identifier	include_paths		6117035	1					
ANR	6117053	Argument	& s -> nb_include_paths		6117035	2					
ANR	6117054	UnaryOperationExpression	& s -> nb_include_paths		6117035	0					
ANR	6117055	UnaryOperator	&		6117035	0					
ANR	6117056	PtrMemberAccess	s -> nb_include_paths		6117035	1					
ANR	6117057	Identifier	s		6117035	0					
ANR	6117058	Identifier	nb_include_paths		6117035	1					
ANR	6117059	Argument	pathname		6117035	3					
ANR	6117060	Identifier	pathname		6117035	0					
ANR	6117061	ReturnStatement	return 0 ;	684:1:15862:15870	6117035	1	True				
ANR	6117062	PrimaryExpression	0		6117035	0					
ANR	6117063	ReturnType	LIBTCCAPI int		6117035	1					
ANR	6117064	Identifier	tcc_add_include_path		6117035	2					
ANR	6117065	ParameterList	"TCCState * s , const char * pathname"		6117035	3					
ANR	6117066	Parameter	TCCState * s	681:35:15741:15751	6117035	0	True				
ANR	6117067	ParameterType	TCCState *		6117035	0					
ANR	6117068	Identifier	s		6117035	1					
ANR	6117069	Parameter	const char * pathname	681:48:15754:15773	6117035	1	True				
ANR	6117070	ParameterType	const char *		6117035	0					
ANR	6117071	Identifier	pathname		6117035	1					
ANR	6117072	CFGEntryNode	ENTRY		6117035		True				
ANR	6117073	CFGExitNode	EXIT		6117035		True				
ANR	6117074	Symbol	& s -> include_paths		6117035						
ANR	6117075	Symbol	s		6117035						
ANR	6117076	Symbol	& s -> nb_include_paths		6117035						
ANR	6117077	Symbol	pathname		6117035						
ANR	6117078	Function	tcc_add_sysinclude_path	687:0:15875:16050							
ANR	6117079	FunctionDef	"tcc_add_sysinclude_path (TCCState * s , const char * pathname)"		6117078	0					
ANR	6117080	CompoundStatement		688:0:15948:16050	6117078	0					
ANR	6117081	ExpressionStatement	"tcc_split_path ( s , ( void * * * ) & s -> sysinclude_paths , & s -> nb_sysinclude_paths , pathname )"	689:1:15951:16037	6117078	0	True				
ANR	6117082	CallExpression	"tcc_split_path ( s , ( void * * * ) & s -> sysinclude_paths , & s -> nb_sysinclude_paths , pathname )"		6117078	0					
ANR	6117083	Callee	tcc_split_path		6117078	0					
ANR	6117084	Identifier	tcc_split_path		6117078	0					
ANR	6117085	ArgumentList	s		6117078	1					
ANR	6117086	Argument	s		6117078	0					
ANR	6117087	Identifier	s		6117078	0					
ANR	6117088	Argument	( void * * * ) & s -> sysinclude_paths		6117078	1					
ANR	6117089	CastExpression	( void * * * ) & s -> sysinclude_paths		6117078	0					
ANR	6117090	CastTarget	void * * *		6117078	0					
ANR	6117091	UnaryOperationExpression	& s -> sysinclude_paths		6117078	1					
ANR	6117092	UnaryOperator	&		6117078	0					
ANR	6117093	PtrMemberAccess	s -> sysinclude_paths		6117078	1					
ANR	6117094	Identifier	s		6117078	0					
ANR	6117095	Identifier	sysinclude_paths		6117078	1					
ANR	6117096	Argument	& s -> nb_sysinclude_paths		6117078	2					
ANR	6117097	UnaryOperationExpression	& s -> nb_sysinclude_paths		6117078	0					
ANR	6117098	UnaryOperator	&		6117078	0					
ANR	6117099	PtrMemberAccess	s -> nb_sysinclude_paths		6117078	1					
ANR	6117100	Identifier	s		6117078	0					
ANR	6117101	Identifier	nb_sysinclude_paths		6117078	1					
ANR	6117102	Argument	pathname		6117078	3					
ANR	6117103	Identifier	pathname		6117078	0					
ANR	6117104	ReturnStatement	return 0 ;	690:1:16040:16048	6117078	1	True				
ANR	6117105	PrimaryExpression	0		6117078	0					
ANR	6117106	ReturnType	LIBTCCAPI int		6117078	1					
ANR	6117107	Identifier	tcc_add_sysinclude_path		6117078	2					
ANR	6117108	ParameterList	"TCCState * s , const char * pathname"		6117078	3					
ANR	6117109	Parameter	TCCState * s	687:38:15913:15923	6117078	0	True				
ANR	6117110	ParameterType	TCCState *		6117078	0					
ANR	6117111	Identifier	s		6117078	1					
ANR	6117112	Parameter	const char * pathname	687:51:15926:15945	6117078	1	True				
ANR	6117113	ParameterType	const char *		6117078	0					
ANR	6117114	Identifier	pathname		6117078	1					
ANR	6117115	CFGEntryNode	ENTRY		6117078		True				
ANR	6117116	CFGExitNode	EXIT		6117078		True				
ANR	6117117	Symbol	s		6117078						
ANR	6117118	Symbol	& s -> nb_sysinclude_paths		6117078						
ANR	6117119	Symbol	& s -> sysinclude_paths		6117078						
ANR	6117120	Symbol	pathname		6117078						
ANR	6117121	Function	tcc_add_file_internal	693:0:16053:16895							
ANR	6117122	FunctionDef	"tcc_add_file_internal (TCCState * s1 , const char * filename , int flags)"		6117121	0					
ANR	6117123	CompoundStatement		694:0:16134:16895	6117121	0					
ANR	6117124	IdentifierDeclStatement	const char * ext ;	695:1:16137:16152	6117121	0	True				
ANR	6117125	IdentifierDecl	* ext		6117121	0					
ANR	6117126	IdentifierDeclType	const char *		6117121	0					
ANR	6117127	Identifier	ext		6117121	1					
ANR	6117128	IdentifierDeclStatement	int ret ;	696:1:16155:16162	6117121	1	True				
ANR	6117129	IdentifierDecl	ret		6117121	0					
ANR	6117130	IdentifierDeclType	int		6117121	0					
ANR	6117131	Identifier	ret		6117121	1					
ANR	6117132	ExpressionStatement	ext = tcc_fileextension ( filename )	699:1:16210:16244	6117121	2	True				
ANR	6117133	AssignmentExpression	ext = tcc_fileextension ( filename )		6117121	0		=			
ANR	6117134	Identifier	ext		6117121	0					
ANR	6117135	CallExpression	tcc_fileextension ( filename )		6117121	1					
ANR	6117136	Callee	tcc_fileextension		6117121	0					
ANR	6117137	Identifier	tcc_fileextension		6117121	0					
ANR	6117138	ArgumentList	filename		6117121	1					
ANR	6117139	Argument	filename		6117121	0					
ANR	6117140	Identifier	filename		6117121	0					
ANR	6117141	IfStatement	if ( ext [ 0 ] )		6117121	3					
ANR	6117142	Condition	ext [ 0 ]	700:5:16251:16256	6117121	0	True				
ANR	6117143	ArrayIndexing	ext [ 0 ]		6117121	0					
ANR	6117144	Identifier	ext		6117121	0					
ANR	6117145	PrimaryExpression	0		6117121	1					
ANR	6117146	CompoundStatement		7:13:124:124	6117121	1					
ANR	6117147	ExpressionStatement	ext ++	701:2:16263:16268	6117121	0	True				
ANR	6117148	PostIncDecOperationExpression	ext ++		6117121	0					
ANR	6117149	Identifier	ext		6117121	0					
ANR	6117150	IncDec	++		6117121	1					
ANR	6117151	ExpressionStatement	"ret = tcc_open ( s1 , filename )"	705:1:16296:16325	6117121	4	True				
ANR	6117152	AssignmentExpression	"ret = tcc_open ( s1 , filename )"		6117121	0		=			
ANR	6117153	Identifier	ret		6117121	0					
ANR	6117154	CallExpression	"tcc_open ( s1 , filename )"		6117121	1					
ANR	6117155	Callee	tcc_open		6117121	0					
ANR	6117156	Identifier	tcc_open		6117121	0					
ANR	6117157	ArgumentList	s1		6117121	1					
ANR	6117158	Argument	s1		6117121	0					
ANR	6117159	Identifier	s1		6117121	0					
ANR	6117160	Argument	filename		6117121	1					
ANR	6117161	Identifier	filename		6117121	0					
ANR	6117162	IfStatement	if ( ret < 0 )		6117121	5					
ANR	6117163	Condition	ret < 0	706:5:16332:16338	6117121	0	True				
ANR	6117164	RelationalExpression	ret < 0		6117121	0		<			
ANR	6117165	Identifier	ret		6117121	0					
ANR	6117166	PrimaryExpression	0		6117121	1					
ANR	6117167	CompoundStatement		13:14:206:206	6117121	1					
ANR	6117168	IfStatement	if ( flags & AFF_PRINT_ERROR )		6117121	0					
ANR	6117169	Condition	flags & AFF_PRINT_ERROR	707:6:16349:16371	6117121	0	True				
ANR	6117170	BitAndExpression	flags & AFF_PRINT_ERROR		6117121	0		&			
ANR	6117171	Identifier	flags		6117121	0					
ANR	6117172	Identifier	AFF_PRINT_ERROR		6117121	1					
ANR	6117173	CompoundStatement		14:31:239:239	6117121	1					
ANR	6117174	ExpressionStatement	"tcc_error ( ""file '%s' not found"" , filename )"	708:3:16379:16422	6117121	0	True				
ANR	6117175	CallExpression	"tcc_error ( ""file '%s' not found"" , filename )"		6117121	0					
ANR	6117176	Callee	tcc_error		6117121	0					
ANR	6117177	Identifier	tcc_error		6117121	0					
ANR	6117178	ArgumentList	"""file '%s' not found"""		6117121	1					
ANR	6117179	Argument	"""file '%s' not found"""		6117121	0					
ANR	6117180	PrimaryExpression	"""file '%s' not found"""		6117121	0					
ANR	6117181	Argument	filename		6117121	1					
ANR	6117182	Identifier	filename		6117121	0					
ANR	6117183	ReturnStatement	return ret ;	710:2:16430:16440	6117121	1	True				
ANR	6117184	Identifier	ret		6117121	0					
ANR	6117185	ExpressionStatement	"dynarray_add ( ( void * * * ) & s1 -> target_deps , & s1 -> nb_target_deps , strdup ( filename ) )"	714:1:16473:16557	6117121	6	True				
ANR	6117186	CallExpression	"dynarray_add ( ( void * * * ) & s1 -> target_deps , & s1 -> nb_target_deps , strdup ( filename ) )"		6117121	0					
ANR	6117187	Callee	dynarray_add		6117121	0					
ANR	6117188	Identifier	dynarray_add		6117121	0					
ANR	6117189	ArgumentList	( void * * * ) & s1 -> target_deps		6117121	1					
ANR	6117190	Argument	( void * * * ) & s1 -> target_deps		6117121	0					
ANR	6117191	CastExpression	( void * * * ) & s1 -> target_deps		6117121	0					
ANR	6117192	CastTarget	void * * *		6117121	0					
ANR	6117193	UnaryOperationExpression	& s1 -> target_deps		6117121	1					
ANR	6117194	UnaryOperator	&		6117121	0					
ANR	6117195	PtrMemberAccess	s1 -> target_deps		6117121	1					
ANR	6117196	Identifier	s1		6117121	0					
ANR	6117197	Identifier	target_deps		6117121	1					
ANR	6117198	Argument	& s1 -> nb_target_deps		6117121	1					
ANR	6117199	UnaryOperationExpression	& s1 -> nb_target_deps		6117121	0					
ANR	6117200	UnaryOperator	&		6117121	0					
ANR	6117201	PtrMemberAccess	s1 -> nb_target_deps		6117121	1					
ANR	6117202	Identifier	s1		6117121	0					
ANR	6117203	Identifier	nb_target_deps		6117121	1					
ANR	6117204	Argument	strdup ( filename )		6117121	2					
ANR	6117205	CallExpression	strdup ( filename )		6117121	0					
ANR	6117206	Callee	strdup		6117121	0					
ANR	6117207	Identifier	strdup		6117121	0					
ANR	6117208	ArgumentList	filename		6117121	1					
ANR	6117209	Argument	filename		6117121	0					
ANR	6117210	Identifier	filename		6117121	0					
ANR	6117211	IfStatement	if ( flags & AFF_PREPROCESS )		6117121	7					
ANR	6117212	Condition	flags & AFF_PREPROCESS	717:5:16565:16586	6117121	0	True				
ANR	6117213	BitAndExpression	flags & AFF_PREPROCESS		6117121	0		&			
ANR	6117214	Identifier	flags		6117121	0					
ANR	6117215	Identifier	AFF_PREPROCESS		6117121	1					
ANR	6117216	CompoundStatement		24:29:454:454	6117121	1					
ANR	6117217	ExpressionStatement	ret = tcc_preprocess ( s1 )	718:2:16593:16618	6117121	0	True				
ANR	6117218	AssignmentExpression	ret = tcc_preprocess ( s1 )		6117121	0		=			
ANR	6117219	Identifier	ret		6117121	0					
ANR	6117220	CallExpression	tcc_preprocess ( s1 )		6117121	1					
ANR	6117221	Callee	tcc_preprocess		6117121	0					
ANR	6117222	Identifier	tcc_preprocess		6117121	0					
ANR	6117223	ArgumentList	s1		6117121	1					
ANR	6117224	Argument	s1		6117121	0					
ANR	6117225	Identifier	s1		6117121	0					
ANR	6117226	GotoStatement	goto the_end ;	719:2:16622:16634	6117121	1	True				
ANR	6117227	Identifier	the_end		6117121	0					
ANR	6117228	IfStatement	"if ( ! ext [ 0 ] || ! PATHCMP ( ext , ""c"" ) || ! PATHCMP ( ext , ""h"" ) || ! PATHCMP ( ext , ""cparse"" ) )"		6117121	8					
ANR	6117229	Condition	"! ext [ 0 ] || ! PATHCMP ( ext , ""c"" ) || ! PATHCMP ( ext , ""h"" ) || ! PATHCMP ( ext , ""cparse"" )"	722:5:16645:16725	6117121	0	True				
ANR	6117230	OrExpression	"! ext [ 0 ] || ! PATHCMP ( ext , ""c"" ) || ! PATHCMP ( ext , ""h"" ) || ! PATHCMP ( ext , ""cparse"" )"		6117121	0		||			
ANR	6117231	UnaryOperationExpression	! ext [ 0 ]		6117121	0					
ANR	6117232	UnaryOperator	!		6117121	0					
ANR	6117233	ArrayIndexing	ext [ 0 ]		6117121	1					
ANR	6117234	Identifier	ext		6117121	0					
ANR	6117235	PrimaryExpression	0		6117121	1					
ANR	6117236	OrExpression	"! PATHCMP ( ext , ""c"" ) || ! PATHCMP ( ext , ""h"" ) || ! PATHCMP ( ext , ""cparse"" )"		6117121	1		||			
ANR	6117237	UnaryOperationExpression	"! PATHCMP ( ext , ""c"" )"		6117121	0					
ANR	6117238	UnaryOperator	!		6117121	0					
ANR	6117239	CallExpression	"PATHCMP ( ext , ""c"" )"		6117121	1					
ANR	6117240	Callee	PATHCMP		6117121	0					
ANR	6117241	Identifier	PATHCMP		6117121	0					
ANR	6117242	ArgumentList	ext		6117121	1					
ANR	6117243	Argument	ext		6117121	0					
ANR	6117244	Identifier	ext		6117121	0					
ANR	6117245	Argument	"""c"""		6117121	1					
ANR	6117246	PrimaryExpression	"""c"""		6117121	0					
ANR	6117247	OrExpression	"! PATHCMP ( ext , ""h"" ) || ! PATHCMP ( ext , ""cparse"" )"		6117121	1		||			
ANR	6117248	UnaryOperationExpression	"! PATHCMP ( ext , ""h"" )"		6117121	0					
ANR	6117249	UnaryOperator	!		6117121	0					
ANR	6117250	CallExpression	"PATHCMP ( ext , ""h"" )"		6117121	1					
ANR	6117251	Callee	PATHCMP		6117121	0					
ANR	6117252	Identifier	PATHCMP		6117121	0					
ANR	6117253	ArgumentList	ext		6117121	1					
ANR	6117254	Argument	ext		6117121	0					
ANR	6117255	Identifier	ext		6117121	0					
ANR	6117256	Argument	"""h"""		6117121	1					
ANR	6117257	PrimaryExpression	"""h"""		6117121	0					
ANR	6117258	UnaryOperationExpression	"! PATHCMP ( ext , ""cparse"" )"		6117121	1					
ANR	6117259	UnaryOperator	!		6117121	0					
ANR	6117260	CallExpression	"PATHCMP ( ext , ""cparse"" )"		6117121	1					
ANR	6117261	Callee	PATHCMP		6117121	0					
ANR	6117262	Identifier	PATHCMP		6117121	0					
ANR	6117263	ArgumentList	ext		6117121	1					
ANR	6117264	Argument	ext		6117121	0					
ANR	6117265	Identifier	ext		6117121	0					
ANR	6117266	Argument	"""cparse"""		6117121	1					
ANR	6117267	PrimaryExpression	"""cparse"""		6117121	0					
ANR	6117268	CompoundStatement		29:88:593:593	6117121	1					
ANR	6117269	ExpressionStatement	ret = tcc_compile ( s1 )	724:2:16755:16777	6117121	0	True				
ANR	6117270	AssignmentExpression	ret = tcc_compile ( s1 )		6117121	0		=			
ANR	6117271	Identifier	ret		6117121	0					
ANR	6117272	CallExpression	tcc_compile ( s1 )		6117121	1					
ANR	6117273	Callee	tcc_compile		6117121	0					
ANR	6117274	Identifier	tcc_compile		6117121	0					
ANR	6117275	ArgumentList	s1		6117121	1					
ANR	6117276	Argument	s1		6117121	0					
ANR	6117277	Identifier	s1		6117121	0					
ANR	6117278	GotoStatement	goto the_end ;	725:2:16781:16793	6117121	1	True				
ANR	6117279	Identifier	the_end		6117121	0					
ANR	6117280	IfStatement	if ( ret < 0 )		6117121	9					
ANR	6117281	Condition	ret < 0	727:5:16803:16809	6117121	0	True				
ANR	6117282	RelationalExpression	ret < 0		6117121	0		<			
ANR	6117283	Identifier	ret		6117121	0					
ANR	6117284	PrimaryExpression	0		6117121	1					
ANR	6117285	CompoundStatement		34:14:677:677	6117121	1					
ANR	6117286	ExpressionStatement	"tcc_error ( ""unrecognized file type"" )"	728:2:16816:16852	6117121	0	True				
ANR	6117287	CallExpression	"tcc_error ( ""unrecognized file type"" )"		6117121	0					
ANR	6117288	Callee	tcc_error		6117121	0					
ANR	6117289	Identifier	tcc_error		6117121	0					
ANR	6117290	ArgumentList	"""unrecognized file type"""		6117121	1					
ANR	6117291	Argument	"""unrecognized file type"""		6117121	0					
ANR	6117292	PrimaryExpression	"""unrecognized file type"""		6117121	0					
ANR	6117293	Label	the_end :	731:0:16858:16865	6117121	10	True				
ANR	6117294	Identifier	the_end		6117121	0					
ANR	6117295	ExpressionStatement	tcc_close ( )	732:1:16868:16880	6117121	11	True				
ANR	6117296	CallExpression	tcc_close ( )		6117121	0					
ANR	6117297	Callee	tcc_close		6117121	0					
ANR	6117298	Identifier	tcc_close		6117121	0					
ANR	6117299	ArgumentList			6117121	1					
ANR	6117300	ReturnStatement	return ret ;	733:1:16883:16893	6117121	12	True				
ANR	6117301	Identifier	ret		6117121	0					
ANR	6117302	ReturnType	ST_FUNC int		6117121	1					
ANR	6117303	Identifier	tcc_add_file_internal		6117121	2					
ANR	6117304	ParameterList	"TCCState * s1 , const char * filename , int flags"		6117121	3					
ANR	6117305	Parameter	TCCState * s1	693:34:16087:16098	6117121	0	True				
ANR	6117306	ParameterType	TCCState *		6117121	0					
ANR	6117307	Identifier	s1		6117121	1					
ANR	6117308	Parameter	const char * filename	693:48:16101:16120	6117121	1	True				
ANR	6117309	ParameterType	const char *		6117121	0					
ANR	6117310	Identifier	filename		6117121	1					
ANR	6117311	Parameter	int flags	693:70:16123:16131	6117121	2	True				
ANR	6117312	ParameterType	int		6117121	0					
ANR	6117313	Identifier	flags		6117121	1					
ANR	6117314	CFGEntryNode	ENTRY		6117121		True				
ANR	6117315	CFGExitNode	EXIT		6117121		True				
ANR	6117316	Symbol	ext		6117121						
ANR	6117317	Symbol	ret		6117121						
ANR	6117318	Symbol	flags		6117121						
ANR	6117319	Symbol	AFF_PRINT_ERROR		6117121						
ANR	6117320	Symbol	tcc_preprocess		6117121						
ANR	6117321	Symbol	filename		6117121						
ANR	6117322	Symbol	tcc_fileextension		6117121						
ANR	6117323	Symbol	* ext		6117121						
ANR	6117324	Symbol	AFF_PREPROCESS		6117121						
ANR	6117325	Symbol	& s1 -> nb_target_deps		6117121						
ANR	6117326	Symbol	& s1 -> target_deps		6117121						
ANR	6117327	Symbol	tcc_open		6117121						
ANR	6117328	Symbol	strdup		6117121						
ANR	6117329	Symbol	tcc_compile		6117121						
ANR	6117330	Symbol	s1		6117121						
ANR	6117331	Symbol	PATHCMP		6117121						
ANR	6117332	Function	tcc_add_file	736:0:16898:17243							
ANR	6117333	FunctionDef	"tcc_add_file (TCCState * s , const char * filename , const char * directory)"		6117332	0					
ANR	6117334	CompoundStatement		737:0:16983:17243	6117332	0					
ANR	6117335	IfStatement	if ( directory )		6117332	0					
ANR	6117336	Condition	directory	738:5:16990:16998	6117332	0	True				
ANR	6117337	Identifier	directory		6117332	0					
ANR	6117338	CompoundStatement		2:16:17:17	6117332	1					
ANR	6117339	ExpressionStatement	dirname = strdup ( directory )	739:2:17005:17033	6117332	0	True				
ANR	6117340	AssignmentExpression	dirname = strdup ( directory )		6117332	0		=			
ANR	6117341	Identifier	dirname		6117332	0					
ANR	6117342	CallExpression	strdup ( directory )		6117332	1					
ANR	6117343	Callee	strdup		6117332	0					
ANR	6117344	Identifier	strdup		6117332	0					
ANR	6117345	ArgumentList	directory		6117332	1					
ANR	6117346	Argument	directory		6117332	0					
ANR	6117347	Identifier	directory		6117332	0					
ANR	6117348	IfStatement	if ( s -> output_type == TCC_OUTPUT_PREPROCESS )		6117332	1					
ANR	6117349	Condition	s -> output_type == TCC_OUTPUT_PREPROCESS	742:5:17044:17082	6117332	0	True				
ANR	6117350	EqualityExpression	s -> output_type == TCC_OUTPUT_PREPROCESS		6117332	0		==			
ANR	6117351	PtrMemberAccess	s -> output_type		6117332	0					
ANR	6117352	Identifier	s		6117332	0					
ANR	6117353	Identifier	output_type		6117332	1					
ANR	6117354	Identifier	TCC_OUTPUT_PREPROCESS		6117332	1					
ANR	6117355	CompoundStatement		6:46:101:101	6117332	1					
ANR	6117356	ReturnStatement	"return tcc_add_file_internal ( s , filename , AFF_PRINT_ERROR | AFF_PREPROCESS ) ;"	743:2:17089:17165	6117332	0	True				
ANR	6117357	CallExpression	"tcc_add_file_internal ( s , filename , AFF_PRINT_ERROR | AFF_PREPROCESS )"		6117332	0					
ANR	6117358	Callee	tcc_add_file_internal		6117332	0					
ANR	6117359	Identifier	tcc_add_file_internal		6117332	0					
ANR	6117360	ArgumentList	s		6117332	1					
ANR	6117361	Argument	s		6117332	0					
ANR	6117362	Identifier	s		6117332	0					
ANR	6117363	Argument	filename		6117332	1					
ANR	6117364	Identifier	filename		6117332	0					
ANR	6117365	Argument	AFF_PRINT_ERROR | AFF_PREPROCESS		6117332	2					
ANR	6117366	InclusiveOrExpression	AFF_PRINT_ERROR | AFF_PREPROCESS		6117332	0		|			
ANR	6117367	Identifier	AFF_PRINT_ERROR		6117332	0					
ANR	6117368	Identifier	AFF_PREPROCESS		6117332	1					
ANR	6117369	ElseStatement	else		6117332	0					
ANR	6117370	CompoundStatement		8:8:191:191	6117332	0					
ANR	6117371	ReturnStatement	"return tcc_add_file_internal ( s , filename , AFF_PRINT_ERROR ) ;"	745:2:17179:17238	6117332	0	True				
ANR	6117372	CallExpression	"tcc_add_file_internal ( s , filename , AFF_PRINT_ERROR )"		6117332	0					
ANR	6117373	Callee	tcc_add_file_internal		6117332	0					
ANR	6117374	Identifier	tcc_add_file_internal		6117332	0					
ANR	6117375	ArgumentList	s		6117332	1					
ANR	6117376	Argument	s		6117332	0					
ANR	6117377	Identifier	s		6117332	0					
ANR	6117378	Argument	filename		6117332	1					
ANR	6117379	Identifier	filename		6117332	0					
ANR	6117380	Argument	AFF_PRINT_ERROR		6117332	2					
ANR	6117381	Identifier	AFF_PRINT_ERROR		6117332	0					
ANR	6117382	ReturnType	LIBTCCAPI int		6117332	1					
ANR	6117383	Identifier	tcc_add_file		6117332	2					
ANR	6117384	ParameterList	"TCCState * s , const char * filename , const char * directory"		6117332	3					
ANR	6117385	Parameter	TCCState * s	736:27:16925:16935	6117332	0	True				
ANR	6117386	ParameterType	TCCState *		6117332	0					
ANR	6117387	Identifier	s		6117332	1					
ANR	6117388	Parameter	const char * filename	736:40:16938:16957	6117332	1	True				
ANR	6117389	ParameterType	const char *		6117332	0					
ANR	6117390	Identifier	filename		6117332	1					
ANR	6117391	Parameter	const char * directory	736:62:16960:16980	6117332	2	True				
ANR	6117392	ParameterType	const char *		6117332	0					
ANR	6117393	Identifier	directory		6117332	1					
ANR	6117394	CFGEntryNode	ENTRY		6117332		True				
ANR	6117395	CFGExitNode	EXIT		6117332		True				
ANR	6117396	Symbol	s		6117332						
ANR	6117397	Symbol	filename		6117332						
ANR	6117398	Symbol	AFF_PREPROCESS		6117332						
ANR	6117399	Symbol	tcc_add_file_internal		6117332						
ANR	6117400	Symbol	strdup		6117332						
ANR	6117401	Symbol	s -> output_type		6117332						
ANR	6117402	Symbol	AFF_PRINT_ERROR		6117332						
ANR	6117403	Symbol	directory		6117332						
ANR	6117404	Symbol	dirname		6117332						
ANR	6117405	Symbol	* s		6117332						
ANR	6117406	Symbol	TCC_OUTPUT_PREPROCESS		6117332						
ANR	6117407	ClassDef	FlagDef	752:8:17381:17461							
ANR	6117408	DeclStmt									
ANR	6117409	Decl							uint16_t	uint16_t	offset
ANR	6117410	DeclStmt									
ANR	6117411	Decl							uint16_t	uint16_t	flags
ANR	6117412	DeclStmt									
ANR	6117413	Decl							const char	const char *	name
ANR	6117414	DeclStmt									
ANR	6117415	Decl							FlagDef	FlagDef	FlagDef
ANR	6117416	Function	set_flag	758:0:17464:17937							
ANR	6117417	FunctionDef	"set_flag (TCCState * s , const FlagDef * flags , int nb_flags , const char * name , int value)"		6117416	0					
ANR	6117418	CompoundStatement		760:0:17570:17937	6117416	0					
ANR	6117419	IdentifierDeclStatement	int i ;	761:1:17573:17578	6117416	0	True				
ANR	6117420	IdentifierDecl	i		6117416	0					
ANR	6117421	IdentifierDeclType	int		6117416	0					
ANR	6117422	Identifier	i		6117416	1					
ANR	6117423	IdentifierDeclStatement	const FlagDef * p ;	762:1:17581:17597	6117416	1	True				
ANR	6117424	IdentifierDecl	* p		6117416	0					
ANR	6117425	IdentifierDeclType	const FlagDef *		6117416	0					
ANR	6117426	Identifier	p		6117416	1					
ANR	6117427	IdentifierDeclStatement	const char * r ;	763:1:17600:17613	6117416	2	True				
ANR	6117428	IdentifierDecl	* r		6117416	0					
ANR	6117429	IdentifierDeclType	const char *		6117416	0					
ANR	6117430	Identifier	r		6117416	1					
ANR	6117431	ExpressionStatement	r = name	765:1:17617:17625	6117416	3	True				
ANR	6117432	AssignmentExpression	r = name		6117416	0		=			
ANR	6117433	Identifier	r		6117416	0					
ANR	6117434	Identifier	name		6117416	1					
ANR	6117435	IfStatement	if ( r [ 0 ] == 'n' && r [ 1 ] == 'o' && r [ 2 ] == '-' )		6117416	4					
ANR	6117436	Condition	r [ 0 ] == 'n' && r [ 1 ] == 'o' && r [ 2 ] == '-'	766:5:17632:17672	6117416	0	True				
ANR	6117437	AndExpression	r [ 0 ] == 'n' && r [ 1 ] == 'o' && r [ 2 ] == '-'		6117416	0		&&			
ANR	6117438	EqualityExpression	r [ 0 ] == 'n'		6117416	0		==			
ANR	6117439	ArrayIndexing	r [ 0 ]		6117416	0					
ANR	6117440	Identifier	r		6117416	0					
ANR	6117441	PrimaryExpression	0		6117416	1					
ANR	6117442	PrimaryExpression	'n'		6117416	1					
ANR	6117443	AndExpression	r [ 1 ] == 'o' && r [ 2 ] == '-'		6117416	1		&&			
ANR	6117444	EqualityExpression	r [ 1 ] == 'o'		6117416	0		==			
ANR	6117445	ArrayIndexing	r [ 1 ]		6117416	0					
ANR	6117446	Identifier	r		6117416	0					
ANR	6117447	PrimaryExpression	1		6117416	1					
ANR	6117448	PrimaryExpression	'o'		6117416	1					
ANR	6117449	EqualityExpression	r [ 2 ] == '-'		6117416	1		==			
ANR	6117450	ArrayIndexing	r [ 2 ]		6117416	0					
ANR	6117451	Identifier	r		6117416	0					
ANR	6117452	PrimaryExpression	2		6117416	1					
ANR	6117453	PrimaryExpression	'-'		6117416	1					
ANR	6117454	CompoundStatement		7:48:104:104	6117416	1					
ANR	6117455	ExpressionStatement	r += 3	767:2:17679:17685	6117416	0	True				
ANR	6117456	AssignmentExpression	r += 3		6117416	0		+=			
ANR	6117457	Identifier	r		6117416	0					
ANR	6117458	PrimaryExpression	3		6117416	1					
ANR	6117459	ExpressionStatement	value = ! value	768:2:17689:17703	6117416	1	True				
ANR	6117460	AssignmentExpression	value = ! value		6117416	0		=			
ANR	6117461	Identifier	value		6117416	0					
ANR	6117462	UnaryOperationExpression	! value		6117416	1					
ANR	6117463	UnaryOperator	!		6117416	0					
ANR	6117464	Identifier	value		6117416	1					
ANR	6117465	ForStatement	"for ( i = 0 , p = flags ; i < nb_flags ; i ++ , p ++ )"		6117416	5					
ANR	6117466	ForInit	"i = 0 , p = flags ;"	770:6:17714:17730	6117416	0	True				
ANR	6117467	Expression	"i = 0 , p = flags"		6117416	0					
ANR	6117468	AssignmentExpression	i = 0		6117416	0		=			
ANR	6117469	Identifier	i		6117416	0					
ANR	6117470	PrimaryExpression	0		6117416	1					
ANR	6117471	AssignmentExpression	p = flags		6117416	1		=			
ANR	6117472	Identifier	p		6117416	0					
ANR	6117473	Identifier	flags		6117416	1					
ANR	6117474	Condition	i < nb_flags	770:24:17732:17743	6117416	1	True				
ANR	6117475	RelationalExpression	i < nb_flags		6117416	0		<			
ANR	6117476	Identifier	i		6117416	0					
ANR	6117477	Identifier	nb_flags		6117416	1					
ANR	6117478	Expression	"i ++ , p ++"	770:38:17746:17753	6117416	2	True				
ANR	6117479	PostIncDecOperationExpression	i ++		6117416	0					
ANR	6117480	Identifier	i		6117416	0					
ANR	6117481	IncDec	++		6117416	1					
ANR	6117482	PostIncDecOperationExpression	p ++		6117416	1					
ANR	6117483	Identifier	p		6117416	0					
ANR	6117484	IncDec	++		6117416	1					
ANR	6117485	CompoundStatement		11:48:185:185	6117416	3					
ANR	6117486	IfStatement	"if ( ! strcmp ( r , p -> name ) )"		6117416	0					
ANR	6117487	Condition	"! strcmp ( r , p -> name )"	771:6:17764:17783	6117416	0	True				
ANR	6117488	UnaryOperationExpression	"! strcmp ( r , p -> name )"		6117416	0					
ANR	6117489	UnaryOperator	!		6117416	0					
ANR	6117490	CallExpression	"strcmp ( r , p -> name )"		6117416	1					
ANR	6117491	Callee	strcmp		6117416	0					
ANR	6117492	Identifier	strcmp		6117416	0					
ANR	6117493	ArgumentList	r		6117416	1					
ANR	6117494	Argument	r		6117416	0					
ANR	6117495	Identifier	r		6117416	0					
ANR	6117496	Argument	p -> name		6117416	1					
ANR	6117497	PtrMemberAccess	p -> name		6117416	0					
ANR	6117498	Identifier	p		6117416	0					
ANR	6117499	Identifier	name		6117416	1					
ANR	6117500	CompoundStatement		12:28:215:215	6117416	1					
ANR	6117501	GotoStatement	goto found ;	772:3:17791:17801	6117416	0	True				
ANR	6117502	Identifier	found		6117416	0					
ANR	6117503	ReturnStatement	return - 1 ;	775:1:17811:17820	6117416	6	True				
ANR	6117504	UnaryOperationExpression	- 1		6117416	0					
ANR	6117505	UnaryOperator	-		6117416	0					
ANR	6117506	PrimaryExpression	1		6117416	1					
ANR	6117507	Label	found :	776:0:17822:17827	6117416	7	True				
ANR	6117508	Identifier	found		6117416	0					
ANR	6117509	IfStatement	if ( p -> flags & FD_INVERT )		6117416	8					
ANR	6117510	Condition	p -> flags & FD_INVERT	777:5:17834:17853	6117416	0	True				
ANR	6117511	BitAndExpression	p -> flags & FD_INVERT		6117416	0		&			
ANR	6117512	PtrMemberAccess	p -> flags		6117416	0					
ANR	6117513	Identifier	p		6117416	0					
ANR	6117514	Identifier	flags		6117416	1					
ANR	6117515	Identifier	FD_INVERT		6117416	1					
ANR	6117516	CompoundStatement		18:27:285:285	6117416	1					
ANR	6117517	ExpressionStatement	value = ! value	778:2:17860:17874	6117416	0	True				
ANR	6117518	AssignmentExpression	value = ! value		6117416	0		=			
ANR	6117519	Identifier	value		6117416	0					
ANR	6117520	UnaryOperationExpression	! value		6117416	1					
ANR	6117521	UnaryOperator	!		6117416	0					
ANR	6117522	Identifier	value		6117416	1					
ANR	6117523	ExpressionStatement	* ( int * ) ( ( uint8_t * ) s + p -> offset ) = value	780:1:17880:17924	6117416	9	True				
ANR	6117524	AssignmentExpression	* ( int * ) ( ( uint8_t * ) s + p -> offset ) = value		6117416	0		=			
ANR	6117525	UnaryOperationExpression	* ( int * ) ( ( uint8_t * ) s + p -> offset )		6117416	0					
ANR	6117526	UnaryOperator	*		6117416	0					
ANR	6117527	CastExpression	( int * ) ( ( uint8_t * ) s + p -> offset )		6117416	1					
ANR	6117528	CastTarget	int *		6117416	0					
ANR	6117529	AdditiveExpression	( uint8_t * ) s + p -> offset		6117416	1		+			
ANR	6117530	CastExpression	( uint8_t * ) s		6117416	0					
ANR	6117531	CastTarget	uint8_t *		6117416	0					
ANR	6117532	Identifier	s		6117416	1					
ANR	6117533	PtrMemberAccess	p -> offset		6117416	1					
ANR	6117534	Identifier	p		6117416	0					
ANR	6117535	Identifier	offset		6117416	1					
ANR	6117536	Identifier	value		6117416	1					
ANR	6117537	ReturnStatement	return 0 ;	781:1:17927:17935	6117416	10	True				
ANR	6117538	PrimaryExpression	0		6117416	0					
ANR	6117539	ReturnType	ST_FUNC int		6117416	1					
ANR	6117540	Identifier	set_flag		6117416	2					
ANR	6117541	ParameterList	"TCCState * s , const FlagDef * flags , int nb_flags , const char * name , int value"		6117416	3					
ANR	6117542	Parameter	TCCState * s	758:21:17485:17495	6117416	0	True				
ANR	6117543	ParameterType	TCCState *		6117416	0					
ANR	6117544	Identifier	s		6117416	1					
ANR	6117545	Parameter	const FlagDef * flags	758:34:17498:17517	6117416	1	True				
ANR	6117546	ParameterType	const FlagDef *		6117416	0					
ANR	6117547	Identifier	flags		6117416	1					
ANR	6117548	Parameter	int nb_flags	758:56:17520:17531	6117416	2	True				
ANR	6117549	ParameterType	int		6117416	0					
ANR	6117550	Identifier	nb_flags		6117416	1					
ANR	6117551	Parameter	const char * name	759:7:17541:17556	6117416	3	True				
ANR	6117552	ParameterType	const char *		6117416	0					
ANR	6117553	Identifier	name		6117416	1					
ANR	6117554	Parameter	int value	759:25:17559:17567	6117416	4	True				
ANR	6117555	ParameterType	int		6117416	0					
ANR	6117556	Identifier	value		6117416	1					
ANR	6117557	CFGEntryNode	ENTRY		6117416		True				
ANR	6117558	CFGExitNode	EXIT		6117416		True				
ANR	6117559	Symbol	strcmp		6117416						
ANR	6117560	Symbol	* p -> offset		6117416						
ANR	6117561	Symbol	flags		6117416						
ANR	6117562	Symbol	i		6117416						
ANR	6117563	Symbol	nb_flags		6117416						
ANR	6117564	Symbol	FD_INVERT		6117416						
ANR	6117565	Symbol	* ( int * ) ( ( uint8_t * ) s + p -> offset )		6117416						
ANR	6117566	Symbol	p		6117416						
ANR	6117567	Symbol	r		6117416						
ANR	6117568	Symbol	s		6117416						
ANR	6117569	Symbol	name		6117416						
ANR	6117570	Symbol	p -> flags		6117416						
ANR	6117571	Symbol	p -> offset		6117416						
ANR	6117572	Symbol	* p		6117416						
ANR	6117573	Symbol	p -> name		6117416						
ANR	6117574	Symbol	* * p		6117416						
ANR	6117575	Symbol	* r		6117416						
ANR	6117576	Symbol	value		6117416						
ANR	6117577	Symbol	* s		6117416						
ANR	6117578	DeclStmt									
ANR	6117579	Decl							"void ( * ) ( const char * , char * * )"	"void ( * ) ( const char * , char * * )"	tcc_cb
ANR	6117580	Function	tcc_set_callback	786:0:17980:18102							
ANR	6117581	FunctionDef	"tcc_set_callback (TCCState * s , void ( * cb ) ( const char * , char * * ) , char * * p)"		6117580	0					
ANR	6117582	CompoundStatement		786:89:18069:18102	6117580	0					
ANR	6117583	ExpressionStatement	tcc_cb = cb	787:1:18072:18083	6117580	0	True				
ANR	6117584	AssignmentExpression	tcc_cb = cb		6117580	0		=			
ANR	6117585	Identifier	tcc_cb		6117580	0					
ANR	6117586	Identifier	cb		6117580	1					
ANR	6117587	ExpressionStatement	tcc_cb_ptr = p	788:1:18086:18100	6117580	1	True				
ANR	6117588	AssignmentExpression	tcc_cb_ptr = p		6117580	0		=			
ANR	6117589	Identifier	tcc_cb_ptr		6117580	0					
ANR	6117590	Identifier	p		6117580	1					
ANR	6117591	ReturnType	PUB_FUNC void		6117580	1					
ANR	6117592	Identifier	tcc_set_callback		6117580	2					
ANR	6117593	ParameterList	"TCCState * s , void ( * cb ) ( const char * , char * * ) , char * * p"		6117580	3					
ANR	6117594	Parameter	TCCState * s	786:31:18011:18021	6117580	0	True				
ANR	6117595	ParameterType	TCCState *		6117580	0					
ANR	6117596	Identifier	s		6117580	1					
ANR	6117597	Parameter	"void ( * cb ) ( const char * , char * * )"	786:44:18024:18056	6117580	1	True				
ANR	6117598	ParameterType	"(( const char * , char * * ) void) *"		6117580	0					
ANR	6117599	Identifier	cb		6117580	1					
ANR	6117600	Parameter	char * * p	786:79:18059:18066	6117580	2	True				
ANR	6117601	ParameterType	char * *		6117580	0					
ANR	6117602	Identifier	p		6117580	1					
ANR	6117603	CFGEntryNode	ENTRY		6117580		True				
ANR	6117604	CFGExitNode	EXIT		6117580		True				
ANR	6117605	Symbol	p		6117580						
ANR	6117606	Symbol	s		6117580						
ANR	6117607	Symbol	tcc_cb		6117580						
ANR	6117608	Symbol	tcc_cb_ptr		6117580						
ANR	6117609	Symbol	cb		6117580						
ANR	6117610	Function	tcc_appendf	791:0:18105:18280							
ANR	6117611	FunctionDef	tcc_appendf (const char * fmt)		6117610	0					
ANR	6117612	CompoundStatement		791:48:18153:18280	6117610	0					
ANR	6117613	IdentifierDeclStatement	char b [ 1024 ] ;	792:1:18156:18168	6117610	0	True				
ANR	6117614	IdentifierDecl	b [ 1024 ]		6117610	0					
ANR	6117615	IdentifierDeclType	char [ 1024 ]		6117610	0					
ANR	6117616	Identifier	b		6117610	1					
ANR	6117617	PrimaryExpression	1024		6117610	2					
ANR	6117618	IdentifierDeclStatement	va_list ap ;	793:1:18171:18181	6117610	1	True				
ANR	6117619	IdentifierDecl	ap		6117610	0					
ANR	6117620	IdentifierDeclType	va_list		6117610	0					
ANR	6117621	Identifier	ap		6117610	1					
ANR	6117622	ExpressionStatement	"va_start ( ap , fmt )"	794:1:18184:18202	6117610	2	True				
ANR	6117623	CallExpression	"va_start ( ap , fmt )"		6117610	0					
ANR	6117624	Callee	va_start		6117610	0					
ANR	6117625	Identifier	va_start		6117610	0					
ANR	6117626	ArgumentList	ap		6117610	1					
ANR	6117627	Argument	ap		6117610	0					
ANR	6117628	Identifier	ap		6117610	0					
ANR	6117629	Argument	fmt		6117610	1					
ANR	6117630	Identifier	fmt		6117610	0					
ANR	6117631	ExpressionStatement	"vsnprintf ( b , sizeof ( b ) , fmt , ap )"	795:1:18205:18239	6117610	3	True				
ANR	6117632	CallExpression	"vsnprintf ( b , sizeof ( b ) , fmt , ap )"		6117610	0					
ANR	6117633	Callee	vsnprintf		6117610	0					
ANR	6117634	Identifier	vsnprintf		6117610	0					
ANR	6117635	ArgumentList	b		6117610	1					
ANR	6117636	Argument	b		6117610	0					
ANR	6117637	Identifier	b		6117610	0					
ANR	6117638	Argument	sizeof ( b )		6117610	1					
ANR	6117639	SizeofExpression	sizeof ( b )		6117610	0					
ANR	6117640	Sizeof	sizeof		6117610	0					
ANR	6117641	SizeofOperand	b		6117610	1					
ANR	6117642	Argument	fmt		6117610	2					
ANR	6117643	Identifier	fmt		6117610	0					
ANR	6117644	Argument	ap		6117610	3					
ANR	6117645	Identifier	ap		6117610	0					
ANR	6117646	ExpressionStatement	"tcc_cb ( b , tcc_cb_ptr )"	796:1:18242:18264	6117610	4	True				
ANR	6117647	CallExpression	"tcc_cb ( b , tcc_cb_ptr )"		6117610	0					
ANR	6117648	Callee	tcc_cb		6117610	0					
ANR	6117649	Identifier	tcc_cb		6117610	0					
ANR	6117650	ArgumentList	b		6117610	1					
ANR	6117651	Argument	b		6117610	0					
ANR	6117652	Identifier	b		6117610	0					
ANR	6117653	Argument	tcc_cb_ptr		6117610	1					
ANR	6117654	Identifier	tcc_cb_ptr		6117610	0					
ANR	6117655	ExpressionStatement	va_end ( ap )	797:1:18267:18278	6117610	5	True				
ANR	6117656	CallExpression	va_end ( ap )		6117610	0					
ANR	6117657	Callee	va_end		6117610	0					
ANR	6117658	Identifier	va_end		6117610	0					
ANR	6117659	ArgumentList	ap		6117610	1					
ANR	6117660	Argument	ap		6117610	0					
ANR	6117661	Identifier	ap		6117610	0					
ANR	6117662	ReturnType	PUB_FUNC void		6117610	1					
ANR	6117663	Identifier	tcc_appendf		6117610	2					
ANR	6117664	ParameterList	const char * fmt		6117610	3					
ANR	6117665	Parameter	const char * fmt	791:26:18131:18145	6117610	0	True				
ANR	6117666	ParameterType	const char *		6117610	0					
ANR	6117667	Identifier	fmt		6117610	1					
ANR	6117668	CFGEntryNode	ENTRY		6117610		True				
ANR	6117669	CFGExitNode	EXIT		6117610		True				
ANR	6117670	Symbol	b		6117610						
ANR	6117671	Symbol	fmt		6117610						
ANR	6117672	Symbol	tcc_cb_ptr		6117610						
ANR	6117673	Symbol	ap		6117610						
