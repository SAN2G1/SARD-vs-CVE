command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4241908	File	data/converged/CVE-2019-16718~_radare2/libr_core_cmd_help.c								
ANR	4241909	Function	vernum	9:0:176:557							
ANR	4241910	FunctionDef	vernum (const char * s)		4241909	0					
ANR	4241911	CompoundStatement		9:34:210:557	4241909	0					
ANR	4241912	IdentifierDeclStatement	char * a = strdup ( s ) ;	13:1:392:412	4241909	0	True				
ANR	4241913	IdentifierDecl	* a = strdup ( s )		4241909	0					
ANR	4241914	IdentifierDeclType	char *		4241909	0					
ANR	4241915	Identifier	a		4241909	1					
ANR	4241916	AssignmentExpression	* a = strdup ( s )		4241909	2		=			
ANR	4241917	Identifier	a		4241909	0					
ANR	4241918	CallExpression	strdup ( s )		4241909	1					
ANR	4241919	Callee	strdup		4241909	0					
ANR	4241920	Identifier	strdup		4241909	0					
ANR	4241921	ArgumentList	s		4241909	1					
ANR	4241922	Argument	s		4241909	0					
ANR	4241923	Identifier	s		4241909	0					
ANR	4241924	ExpressionStatement	"a = r_str_replace ( a , ""."" , ""0"" , 1 )"	14:1:415:449	4241909	1	True				
ANR	4241925	AssignmentExpression	"a = r_str_replace ( a , ""."" , ""0"" , 1 )"		4241909	0		=			
ANR	4241926	Identifier	a		4241909	0					
ANR	4241927	CallExpression	"r_str_replace ( a , ""."" , ""0"" , 1 )"		4241909	1					
ANR	4241928	Callee	r_str_replace		4241909	0					
ANR	4241929	Identifier	r_str_replace		4241909	0					
ANR	4241930	ArgumentList	a		4241909	1					
ANR	4241931	Argument	a		4241909	0					
ANR	4241932	Identifier	a		4241909	0					
ANR	4241933	Argument	"""."""		4241909	1					
ANR	4241934	PrimaryExpression	"""."""		4241909	0					
ANR	4241935	Argument	"""0"""		4241909	2					
ANR	4241936	PrimaryExpression	"""0"""		4241909	0					
ANR	4241937	Argument	1		4241909	3					
ANR	4241938	PrimaryExpression	1		4241909	0					
ANR	4241939	IdentifierDeclStatement	"char * dash = strchr ( a , '-' ) ;"	15:1:452:480	4241909	2	True				
ANR	4241940	IdentifierDecl	"* dash = strchr ( a , '-' )"		4241909	0					
ANR	4241941	IdentifierDeclType	char *		4241909	0					
ANR	4241942	Identifier	dash		4241909	1					
ANR	4241943	AssignmentExpression	"* dash = strchr ( a , '-' )"		4241909	2		=			
ANR	4241944	Identifier	dash		4241909	0					
ANR	4241945	CallExpression	"strchr ( a , '-' )"		4241909	1					
ANR	4241946	Callee	strchr		4241909	0					
ANR	4241947	Identifier	strchr		4241909	0					
ANR	4241948	ArgumentList	a		4241909	1					
ANR	4241949	Argument	a		4241909	0					
ANR	4241950	Identifier	a		4241909	0					
ANR	4241951	Argument	'-'		4241909	1					
ANR	4241952	PrimaryExpression	'-'		4241909	0					
ANR	4241953	IfStatement	if ( dash )		4241909	3					
ANR	4241954	Condition	dash	16:5:487:490	4241909	0	True				
ANR	4241955	Identifier	dash		4241909	0					
ANR	4241956	CompoundStatement		8:11:282:282	4241909	1					
ANR	4241957	ExpressionStatement	* dash = 0	17:2:497:506	4241909	0	True				
ANR	4241958	AssignmentExpression	* dash = 0		4241909	0		=			
ANR	4241959	UnaryOperationExpression	* dash		4241909	0					
ANR	4241960	UnaryOperator	*		4241909	0					
ANR	4241961	Identifier	dash		4241909	1					
ANR	4241962	PrimaryExpression	0		4241909	1					
ANR	4241963	IdentifierDeclStatement	ut32 res = atoi ( a ) ;	19:1:512:531	4241909	4	True				
ANR	4241964	IdentifierDecl	res = atoi ( a )		4241909	0					
ANR	4241965	IdentifierDeclType	ut32		4241909	0					
ANR	4241966	Identifier	res		4241909	1					
ANR	4241967	AssignmentExpression	res = atoi ( a )		4241909	2		=			
ANR	4241968	Identifier	res		4241909	0					
ANR	4241969	CallExpression	atoi ( a )		4241909	1					
ANR	4241970	Callee	atoi		4241909	0					
ANR	4241971	Identifier	atoi		4241909	0					
ANR	4241972	ArgumentList	a		4241909	1					
ANR	4241973	Argument	a		4241909	0					
ANR	4241974	Identifier	a		4241909	0					
ANR	4241975	ExpressionStatement	free ( a )	20:1:534:542	4241909	5	True				
ANR	4241976	CallExpression	free ( a )		4241909	0					
ANR	4241977	Callee	free		4241909	0					
ANR	4241978	Identifier	free		4241909	0					
ANR	4241979	ArgumentList	a		4241909	1					
ANR	4241980	Argument	a		4241909	0					
ANR	4241981	Identifier	a		4241909	0					
ANR	4241982	ReturnStatement	return res ;	21:1:545:555	4241909	6	True				
ANR	4241983	Identifier	res		4241909	0					
ANR	4241984	ReturnType	static ut32		4241909	1					
ANR	4241985	Identifier	vernum		4241909	2					
ANR	4241986	ParameterList	const char * s		4241909	3					
ANR	4241987	Parameter	const char * s	9:19:195:207	4241909	0	True				
ANR	4241988	ParameterType	const char *		4241909	0					
ANR	4241989	Identifier	s		4241909	1					
ANR	4241990	CFGEntryNode	ENTRY		4241909		True				
ANR	4241991	CFGExitNode	EXIT		4241909		True				
ANR	4241992	Symbol	atoi		4241909						
ANR	4241993	Symbol	a		4241909						
ANR	4241994	Symbol	res		4241909						
ANR	4241995	Symbol	s		4241909						
ANR	4241996	Symbol	* dash		4241909						
ANR	4241997	Symbol	r_str_replace		4241909						
ANR	4241998	Symbol	strchr		4241909						
ANR	4241999	Symbol	strdup		4241909						
ANR	4242000	Symbol	dash		4241909						
ANR	4242001	DeclStmt									
ANR	4242002	Decl							const char	const char * [ ]	help_msg_percent
ANR	4242003	DeclStmt									
ANR	4242004	Decl							const char	const char * [ ]	help_msg_env
ANR	4242005	DeclStmt									
ANR	4242006	Decl							const char	const char * [ ]	help_msg_exclamation
ANR	4242007	DeclStmt									
ANR	4242008	Decl							const char	const char * [ ]	help_msg_root
ANR	4242009	DeclStmt									
ANR	4242010	Decl							const char	const char * [ ]	help_msg_question
ANR	4242011	DeclStmt									
ANR	4242012	Decl							const char	const char * [ ]	help_msg_question_v
ANR	4242013	DeclStmt									
ANR	4242014	Decl							const char	const char * [ ]	help_msg_question_V
ANR	4242015	DeclStmt									
ANR	4242016	Decl							const char	const char * [ ]	help_msg_greater_sign
ANR	4242017	DeclStmt									
ANR	4242018	Decl							const char	const char * [ ]	help_msg_intro
ANR	4242019	Function	cmd_help_exclamation	250:0:10661:10795							
ANR	4242020	FunctionDef	cmd_help_exclamation (RCore * core)		4242019	0					
ANR	4242021	CompoundStatement		250:46:10707:10795	4242019	0					
ANR	4242022	ExpressionStatement	"r_core_cmd_help ( core , help_msg_exclamation )"	251:1:10710:10754	4242019	0	True				
ANR	4242023	CallExpression	"r_core_cmd_help ( core , help_msg_exclamation )"		4242019	0					
ANR	4242024	Callee	r_core_cmd_help		4242019	0					
ANR	4242025	Identifier	r_core_cmd_help		4242019	0					
ANR	4242026	ArgumentList	core		4242019	1					
ANR	4242027	Argument	core		4242019	0					
ANR	4242028	Identifier	core		4242019	0					
ANR	4242029	Argument	help_msg_exclamation		4242019	1					
ANR	4242030	Identifier	help_msg_exclamation		4242019	0					
ANR	4242031	ExpressionStatement	"r_core_cmd_help ( core , help_msg_env )"	252:1:10757:10793	4242019	1	True				
ANR	4242032	CallExpression	"r_core_cmd_help ( core , help_msg_env )"		4242019	0					
ANR	4242033	Callee	r_core_cmd_help		4242019	0					
ANR	4242034	Identifier	r_core_cmd_help		4242019	0					
ANR	4242035	ArgumentList	core		4242019	1					
ANR	4242036	Argument	core		4242019	0					
ANR	4242037	Identifier	core		4242019	0					
ANR	4242038	Argument	help_msg_env		4242019	1					
ANR	4242039	Identifier	help_msg_env		4242019	0					
ANR	4242040	ReturnType	static void		4242019	1					
ANR	4242041	Identifier	cmd_help_exclamation		4242019	2					
ANR	4242042	ParameterList	RCore * core		4242019	3					
ANR	4242043	Parameter	RCore * core	250:33:10694:10704	4242019	0	True				
ANR	4242044	ParameterType	RCore *		4242019	0					
ANR	4242045	Identifier	core		4242019	1					
ANR	4242046	CFGEntryNode	ENTRY		4242019		True				
ANR	4242047	CFGExitNode	EXIT		4242019		True				
ANR	4242048	Symbol	core		4242019						
ANR	4242049	Symbol	help_msg_exclamation		4242019						
ANR	4242050	Symbol	help_msg_env		4242019						
ANR	4242051	Function	cmd_help_percent	255:0:10798:10924							
ANR	4242052	FunctionDef	cmd_help_percent (RCore * core)		4242051	0					
ANR	4242053	CompoundStatement		255:42:10840:10924	4242051	0					
ANR	4242054	ExpressionStatement	"r_core_cmd_help ( core , help_msg_percent )"	256:1:10843:10883	4242051	0	True				
ANR	4242055	CallExpression	"r_core_cmd_help ( core , help_msg_percent )"		4242051	0					
ANR	4242056	Callee	r_core_cmd_help		4242051	0					
ANR	4242057	Identifier	r_core_cmd_help		4242051	0					
ANR	4242058	ArgumentList	core		4242051	1					
ANR	4242059	Argument	core		4242051	0					
ANR	4242060	Identifier	core		4242051	0					
ANR	4242061	Argument	help_msg_percent		4242051	1					
ANR	4242062	Identifier	help_msg_percent		4242051	0					
ANR	4242063	ExpressionStatement	"r_core_cmd_help ( core , help_msg_env )"	257:1:10886:10922	4242051	1	True				
ANR	4242064	CallExpression	"r_core_cmd_help ( core , help_msg_env )"		4242051	0					
ANR	4242065	Callee	r_core_cmd_help		4242051	0					
ANR	4242066	Identifier	r_core_cmd_help		4242051	0					
ANR	4242067	ArgumentList	core		4242051	1					
ANR	4242068	Argument	core		4242051	0					
ANR	4242069	Identifier	core		4242051	0					
ANR	4242070	Argument	help_msg_env		4242051	1					
ANR	4242071	Identifier	help_msg_env		4242051	0					
ANR	4242072	ReturnType	static void		4242051	1					
ANR	4242073	Identifier	cmd_help_percent		4242051	2					
ANR	4242074	ParameterList	RCore * core		4242051	3					
ANR	4242075	Parameter	RCore * core	255:29:10827:10837	4242051	0	True				
ANR	4242076	ParameterType	RCore *		4242051	0					
ANR	4242077	Identifier	core		4242051	1					
ANR	4242078	CFGEntryNode	ENTRY		4242051		True				
ANR	4242079	CFGExitNode	EXIT		4242051		True				
ANR	4242080	Symbol	core		4242051						
ANR	4242081	Symbol	help_msg_percent		4242051						
ANR	4242082	Symbol	help_msg_env		4242051						
ANR	4242083	Function	cmd_help_init	260:0:10927:11130							
ANR	4242084	FunctionDef	cmd_help_init (RCore * core)		4242083	0					
ANR	4242085	CompoundStatement		260:39:10966:11130	4242083	0					
ANR	4242086	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	261:1:10969:10997	4242083	0	True				
ANR	4242087	Statement	(	261:31:10999:10999	4242083	1	True				
ANR	4242088	Statement	core	261:32:11000:11003	4242083	2	True				
ANR	4242089	Statement	","	261:36:11004:11004	4242083	3	True				
ANR	4242090	Statement	?	261:38:11006:11006	4242083	4	True				
ANR	4242091	Statement	","	261:39:11007:11007	4242083	5	True				
ANR	4242092	Statement	question	261:41:11009:11016	4242083	6	True				
ANR	4242093	Statement	)	261:49:11017:11017	4242083	7	True				
ANR	4242094	ExpressionStatement		261:50:11018:11018	4242083	8	True				
ANR	4242095	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	262:1:11021:11049	4242083	9	True				
ANR	4242096	Statement	(	262:31:11051:11051	4242083	10	True				
ANR	4242097	Statement	core	262:32:11052:11055	4242083	11	True				
ANR	4242098	Statement	","	262:36:11056:11056	4242083	12	True				
ANR	4242099	Statement	?	262:38:11058:11058	4242083	13	True				
ANR	4242100	Statement	v	262:39:11059:11059	4242083	14	True				
ANR	4242101	Statement	","	262:40:11060:11060	4242083	15	True				
ANR	4242102	Statement	question_v	262:42:11062:11071	4242083	16	True				
ANR	4242103	Statement	)	262:52:11072:11072	4242083	17	True				
ANR	4242104	ExpressionStatement		262:53:11073:11073	4242083	18	True				
ANR	4242105	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	263:1:11076:11104	4242083	19	True				
ANR	4242106	Statement	(	263:31:11106:11106	4242083	20	True				
ANR	4242107	Statement	core	263:32:11107:11110	4242083	21	True				
ANR	4242108	Statement	","	263:36:11111:11111	4242083	22	True				
ANR	4242109	Statement	?	263:38:11113:11113	4242083	23	True				
ANR	4242110	Statement	V	263:39:11114:11114	4242083	24	True				
ANR	4242111	Statement	","	263:40:11115:11115	4242083	25	True				
ANR	4242112	Statement	question_V	263:42:11117:11126	4242083	26	True				
ANR	4242113	Statement	)	263:52:11127:11127	4242083	27	True				
ANR	4242114	ExpressionStatement		263:53:11128:11128	4242083	28	True				
ANR	4242115	ReturnType	static void		4242083	1					
ANR	4242116	Identifier	cmd_help_init		4242083	2					
ANR	4242117	ParameterList	RCore * core		4242083	3					
ANR	4242118	Parameter	RCore * core	260:26:10953:10963	4242083	0	True				
ANR	4242119	ParameterType	RCore *		4242083	0					
ANR	4242120	Identifier	core		4242083	1					
ANR	4242121	CFGEntryNode	ENTRY		4242083		True				
ANR	4242122	CFGExitNode	EXIT		4242083		True				
ANR	4242123	Symbol	core		4242083						
ANR	4242124	Function	findBreakChar	266:0:11133:11268							
ANR	4242125	FunctionDef	findBreakChar (const char * s)		4242124	0					
ANR	4242126	CompoundStatement		266:48:11181:11268	4242124	0					
ANR	4242127	WhileStatement	while ( * s )		4242124	0					
ANR	4242128	Condition	* s	267:8:11191:11192	4242124	0	True				
ANR	4242129	UnaryOperationExpression	* s		4242124	0					
ANR	4242130	UnaryOperator	*		4242124	0					
ANR	4242131	Identifier	s		4242124	1					
ANR	4242132	CompoundStatement		2:12:13:13	4242124	1					
ANR	4242133	IfStatement	if ( ! r_name_validate_char ( * s ) )		4242124	0					
ANR	4242134	Condition	! r_name_validate_char ( * s )	268:6:11203:11228	4242124	0	True				
ANR	4242135	UnaryOperationExpression	! r_name_validate_char ( * s )		4242124	0					
ANR	4242136	UnaryOperator	!		4242124	0					
ANR	4242137	CallExpression	r_name_validate_char ( * s )		4242124	1					
ANR	4242138	Callee	r_name_validate_char		4242124	0					
ANR	4242139	Identifier	r_name_validate_char		4242124	0					
ANR	4242140	ArgumentList	* s		4242124	1					
ANR	4242141	Argument	* s		4242124	0					
ANR	4242142	UnaryOperationExpression	* s		4242124	0					
ANR	4242143	UnaryOperator	*		4242124	0					
ANR	4242144	Identifier	s		4242124	1					
ANR	4242145	CompoundStatement		3:34:49:49	4242124	1					
ANR	4242146	BreakStatement	break ;	269:3:11236:11241	4242124	0	True				
ANR	4242147	ExpressionStatement	s ++	271:2:11249:11252	4242124	1	True				
ANR	4242148	PostIncDecOperationExpression	s ++		4242124	0					
ANR	4242149	Identifier	s		4242124	0					
ANR	4242150	IncDec	++		4242124	1					
ANR	4242151	ReturnStatement	return s ;	273:1:11258:11266	4242124	1	True				
ANR	4242152	Identifier	s		4242124	0					
ANR	4242153	ReturnType	static const char *		4242124	1					
ANR	4242154	Identifier	findBreakChar		4242124	2					
ANR	4242155	ParameterList	const char * s		4242124	3					
ANR	4242156	Parameter	const char * s	266:33:11166:11178	4242124	0	True				
ANR	4242157	ParameterType	const char *		4242124	0					
ANR	4242158	Identifier	s		4242124	1					
ANR	4242159	CFGEntryNode	ENTRY		4242124		True				
ANR	4242160	CFGExitNode	EXIT		4242124		True				
ANR	4242161	Symbol	s		4242124						
ANR	4242162	Symbol	r_name_validate_char		4242124						
ANR	4242163	Symbol	* s		4242124						
ANR	4242164	Function	filterFlags	276:0:11271:12158							
ANR	4242165	FunctionDef	"filterFlags (RCore * core , const char * msg)"		4242164	0					
ANR	4242166	CompoundStatement		276:55:11326:12158	4242164	0					
ANR	4242167	IdentifierDeclStatement	"const char * dollar , * end ;"	277:1:11329:11353	4242164	0	True				
ANR	4242168	IdentifierDecl	* dollar		4242164	0					
ANR	4242169	IdentifierDeclType	const char *		4242164	0					
ANR	4242170	Identifier	dollar		4242164	1					
ANR	4242171	IdentifierDecl	* end		4242164	1					
ANR	4242172	IdentifierDeclType	const char *		4242164	0					
ANR	4242173	Identifier	end		4242164	1					
ANR	4242174	IdentifierDeclStatement	"char * word , * buf = NULL ;"	278:1:11356:11379	4242164	1	True				
ANR	4242175	IdentifierDecl	* word		4242164	0					
ANR	4242176	IdentifierDeclType	char *		4242164	0					
ANR	4242177	Identifier	word		4242164	1					
ANR	4242178	IdentifierDecl	* buf = NULL		4242164	1					
ANR	4242179	IdentifierDeclType	char *		4242164	0					
ANR	4242180	Identifier	buf		4242164	1					
ANR	4242181	AssignmentExpression	* buf = NULL		4242164	2		=			
ANR	4242182	Identifier	NULL		4242164	0					
ANR	4242183	Identifier	NULL		4242164	1					
ANR	4242184	ForStatement	for ( ; ; )		4242164	2					
ANR	4242185	CompoundStatement		4:10:64:64	4242164	0					
ANR	4242186	ExpressionStatement	"dollar = strchr ( msg , '$' )"	280:2:11395:11421	4242164	0	True				
ANR	4242187	AssignmentExpression	"dollar = strchr ( msg , '$' )"		4242164	0		=			
ANR	4242188	Identifier	dollar		4242164	0					
ANR	4242189	CallExpression	"strchr ( msg , '$' )"		4242164	1					
ANR	4242190	Callee	strchr		4242164	0					
ANR	4242191	Identifier	strchr		4242164	0					
ANR	4242192	ArgumentList	msg		4242164	1					
ANR	4242193	Argument	msg		4242164	0					
ANR	4242194	Identifier	msg		4242164	0					
ANR	4242195	Argument	'$'		4242164	1					
ANR	4242196	PrimaryExpression	'$'		4242164	0					
ANR	4242197	IfStatement	if ( ! dollar )		4242164	1					
ANR	4242198	Condition	! dollar	281:6:11429:11435	4242164	0	True				
ANR	4242199	UnaryOperationExpression	! dollar		4242164	0					
ANR	4242200	UnaryOperator	!		4242164	0					
ANR	4242201	Identifier	dollar		4242164	1					
ANR	4242202	CompoundStatement		6:15:111:111	4242164	1					
ANR	4242203	BreakStatement	break ;	282:3:11443:11448	4242164	0	True				
ANR	4242204	ExpressionStatement	"buf = r_str_appendlen ( buf , msg , dollar - msg )"	284:2:11456:11500	4242164	2	True				
ANR	4242205	AssignmentExpression	"buf = r_str_appendlen ( buf , msg , dollar - msg )"		4242164	0		=			
ANR	4242206	Identifier	buf		4242164	0					
ANR	4242207	CallExpression	"r_str_appendlen ( buf , msg , dollar - msg )"		4242164	1					
ANR	4242208	Callee	r_str_appendlen		4242164	0					
ANR	4242209	Identifier	r_str_appendlen		4242164	0					
ANR	4242210	ArgumentList	buf		4242164	1					
ANR	4242211	Argument	buf		4242164	0					
ANR	4242212	Identifier	buf		4242164	0					
ANR	4242213	Argument	msg		4242164	1					
ANR	4242214	Identifier	msg		4242164	0					
ANR	4242215	Argument	dollar - msg		4242164	2					
ANR	4242216	AdditiveExpression	dollar - msg		4242164	0		-			
ANR	4242217	Identifier	dollar		4242164	0					
ANR	4242218	Identifier	msg		4242164	1					
ANR	4242219	IfStatement	if ( dollar [ 1 ] == '{' )		4242164	3					
ANR	4242220	Condition	dollar [ 1 ] == '{'	285:6:11508:11521	4242164	0	True				
ANR	4242221	EqualityExpression	dollar [ 1 ] == '{'		4242164	0		==			
ANR	4242222	ArrayIndexing	dollar [ 1 ]		4242164	0					
ANR	4242223	Identifier	dollar		4242164	0					
ANR	4242224	PrimaryExpression	1		4242164	1					
ANR	4242225	PrimaryExpression	'{'		4242164	1					
ANR	4242226	CompoundStatement		10:22:197:197	4242164	1					
ANR	4242227	ExpressionStatement	"end = strchr ( dollar + 2 , '}' )"	287:3:11542:11570	4242164	0	True				
ANR	4242228	AssignmentExpression	"end = strchr ( dollar + 2 , '}' )"		4242164	0		=			
ANR	4242229	Identifier	end		4242164	0					
ANR	4242230	CallExpression	"strchr ( dollar + 2 , '}' )"		4242164	1					
ANR	4242231	Callee	strchr		4242164	0					
ANR	4242232	Identifier	strchr		4242164	0					
ANR	4242233	ArgumentList	dollar + 2		4242164	1					
ANR	4242234	Argument	dollar + 2		4242164	0					
ANR	4242235	AdditiveExpression	dollar + 2		4242164	0		+			
ANR	4242236	Identifier	dollar		4242164	0					
ANR	4242237	PrimaryExpression	2		4242164	1					
ANR	4242238	Argument	'}'		4242164	1					
ANR	4242239	PrimaryExpression	'}'		4242164	0					
ANR	4242240	IfStatement	if ( end )		4242164	1					
ANR	4242241	Condition	end	288:7:11579:11581	4242164	0	True				
ANR	4242242	Identifier	end		4242164	0					
ANR	4242243	CompoundStatement		13:12:257:257	4242164	1					
ANR	4242244	ExpressionStatement	"word = r_str_newlen ( dollar + 2 , end - dollar - 2 )"	289:4:11590:11634	4242164	0	True				
ANR	4242245	AssignmentExpression	"word = r_str_newlen ( dollar + 2 , end - dollar - 2 )"		4242164	0		=			
ANR	4242246	Identifier	word		4242164	0					
ANR	4242247	CallExpression	"r_str_newlen ( dollar + 2 , end - dollar - 2 )"		4242164	1					
ANR	4242248	Callee	r_str_newlen		4242164	0					
ANR	4242249	Identifier	r_str_newlen		4242164	0					
ANR	4242250	ArgumentList	dollar + 2		4242164	1					
ANR	4242251	Argument	dollar + 2		4242164	0					
ANR	4242252	AdditiveExpression	dollar + 2		4242164	0		+			
ANR	4242253	Identifier	dollar		4242164	0					
ANR	4242254	PrimaryExpression	2		4242164	1					
ANR	4242255	Argument	end - dollar - 2		4242164	1					
ANR	4242256	AdditiveExpression	end - dollar - 2		4242164	0		-			
ANR	4242257	Identifier	end		4242164	0					
ANR	4242258	AdditiveExpression	dollar - 2		4242164	1		-			
ANR	4242259	Identifier	dollar		4242164	0					
ANR	4242260	PrimaryExpression	2		4242164	1					
ANR	4242261	ExpressionStatement	end ++	290:4:11640:11645	4242164	1	True				
ANR	4242262	PostIncDecOperationExpression	end ++		4242164	0					
ANR	4242263	Identifier	end		4242164	0					
ANR	4242264	IncDec	++		4242164	1					
ANR	4242265	ElseStatement	else		4242164	0					
ANR	4242266	CompoundStatement		16:10:330:330	4242164	0					
ANR	4242267	ExpressionStatement	msg = dollar + 1	292:4:11663:11677	4242164	0	True				
ANR	4242268	AssignmentExpression	msg = dollar + 1		4242164	0		=			
ANR	4242269	Identifier	msg		4242164	0					
ANR	4242270	AdditiveExpression	dollar + 1		4242164	1		+			
ANR	4242271	Identifier	dollar		4242164	0					
ANR	4242272	PrimaryExpression	1		4242164	1					
ANR	4242273	ExpressionStatement	"buf = r_str_append ( buf , ""$"" )"	293:4:11683:11712	4242164	1	True				
ANR	4242274	AssignmentExpression	"buf = r_str_append ( buf , ""$"" )"		4242164	0		=			
ANR	4242275	Identifier	buf		4242164	0					
ANR	4242276	CallExpression	"r_str_append ( buf , ""$"" )"		4242164	1					
ANR	4242277	Callee	r_str_append		4242164	0					
ANR	4242278	Identifier	r_str_append		4242164	0					
ANR	4242279	ArgumentList	buf		4242164	1					
ANR	4242280	Argument	buf		4242164	0					
ANR	4242281	Identifier	buf		4242164	0					
ANR	4242282	Argument	"""$"""		4242164	1					
ANR	4242283	PrimaryExpression	"""$"""		4242164	0					
ANR	4242284	ContinueStatement	continue ;	294:4:11718:11726	4242164	2	True				
ANR	4242285	ElseStatement	else		4242164	0					
ANR	4242286	CompoundStatement		21:9:415:415	4242164	0					
ANR	4242287	ExpressionStatement	end = findBreakChar ( dollar + 1 )	297:3:11747:11777	4242164	0	True				
ANR	4242288	AssignmentExpression	end = findBreakChar ( dollar + 1 )		4242164	0		=			
ANR	4242289	Identifier	end		4242164	0					
ANR	4242290	CallExpression	findBreakChar ( dollar + 1 )		4242164	1					
ANR	4242291	Callee	findBreakChar		4242164	0					
ANR	4242292	Identifier	findBreakChar		4242164	0					
ANR	4242293	ArgumentList	dollar + 1		4242164	1					
ANR	4242294	Argument	dollar + 1		4242164	0					
ANR	4242295	AdditiveExpression	dollar + 1		4242164	0		+			
ANR	4242296	Identifier	dollar		4242164	0					
ANR	4242297	PrimaryExpression	1		4242164	1					
ANR	4242298	IfStatement	if ( ! end )		4242164	1					
ANR	4242299	Condition	! end	298:7:11786:11789	4242164	0	True				
ANR	4242300	UnaryOperationExpression	! end		4242164	0					
ANR	4242301	UnaryOperator	!		4242164	0					
ANR	4242302	Identifier	end		4242164	1					
ANR	4242303	CompoundStatement		23:13:465:465	4242164	1					
ANR	4242304	ExpressionStatement	end = dollar + strlen ( dollar )	299:4:11798:11828	4242164	0	True				
ANR	4242305	AssignmentExpression	end = dollar + strlen ( dollar )		4242164	0		=			
ANR	4242306	Identifier	end		4242164	0					
ANR	4242307	AdditiveExpression	dollar + strlen ( dollar )		4242164	1		+			
ANR	4242308	Identifier	dollar		4242164	0					
ANR	4242309	CallExpression	strlen ( dollar )		4242164	1					
ANR	4242310	Callee	strlen		4242164	0					
ANR	4242311	Identifier	strlen		4242164	0					
ANR	4242312	ArgumentList	dollar		4242164	1					
ANR	4242313	Argument	dollar		4242164	0					
ANR	4242314	Identifier	dollar		4242164	0					
ANR	4242315	ExpressionStatement	"word = r_str_newlen ( dollar + 1 , end - dollar - 1 )"	301:3:11838:11882	4242164	2	True				
ANR	4242316	AssignmentExpression	"word = r_str_newlen ( dollar + 1 , end - dollar - 1 )"		4242164	0		=			
ANR	4242317	Identifier	word		4242164	0					
ANR	4242318	CallExpression	"r_str_newlen ( dollar + 1 , end - dollar - 1 )"		4242164	1					
ANR	4242319	Callee	r_str_newlen		4242164	0					
ANR	4242320	Identifier	r_str_newlen		4242164	0					
ANR	4242321	ArgumentList	dollar + 1		4242164	1					
ANR	4242322	Argument	dollar + 1		4242164	0					
ANR	4242323	AdditiveExpression	dollar + 1		4242164	0		+			
ANR	4242324	Identifier	dollar		4242164	0					
ANR	4242325	PrimaryExpression	1		4242164	1					
ANR	4242326	Argument	end - dollar - 1		4242164	1					
ANR	4242327	AdditiveExpression	end - dollar - 1		4242164	0		-			
ANR	4242328	Identifier	end		4242164	0					
ANR	4242329	AdditiveExpression	dollar - 1		4242164	1		-			
ANR	4242330	Identifier	dollar		4242164	0					
ANR	4242331	PrimaryExpression	1		4242164	1					
ANR	4242332	IfStatement	if ( end && word )		4242164	4					
ANR	4242333	Condition	end && word	303:6:11894:11904	4242164	0	True				
ANR	4242334	AndExpression	end && word		4242164	0		&&			
ANR	4242335	Identifier	end		4242164	0					
ANR	4242336	Identifier	word		4242164	1					
ANR	4242337	CompoundStatement		30:3:629:641	4242164	1					
ANR	4242338	IdentifierDeclStatement	"ut64 val = r_num_math ( core -> num , word ) ;"	304:3:11912:11951	4242164	0	True				
ANR	4242339	IdentifierDecl	"val = r_num_math ( core -> num , word )"		4242164	0					
ANR	4242340	IdentifierDeclType	ut64		4242164	0					
ANR	4242341	Identifier	val		4242164	1					
ANR	4242342	AssignmentExpression	"val = r_num_math ( core -> num , word )"		4242164	2		=			
ANR	4242343	Identifier	val		4242164	0					
ANR	4242344	CallExpression	"r_num_math ( core -> num , word )"		4242164	1					
ANR	4242345	Callee	r_num_math		4242164	0					
ANR	4242346	Identifier	r_num_math		4242164	0					
ANR	4242347	ArgumentList	core -> num		4242164	1					
ANR	4242348	Argument	core -> num		4242164	0					
ANR	4242349	PtrMemberAccess	core -> num		4242164	0					
ANR	4242350	Identifier	core		4242164	0					
ANR	4242351	Identifier	num		4242164	1					
ANR	4242352	Argument	word		4242164	1					
ANR	4242353	Identifier	word		4242164	0					
ANR	4242354	IdentifierDeclStatement	char num [ 32 ] ;	305:3:11956:11968	4242164	1	True				
ANR	4242355	IdentifierDecl	num [ 32 ]		4242164	0					
ANR	4242356	IdentifierDeclType	char [ 32 ]		4242164	0					
ANR	4242357	Identifier	num		4242164	1					
ANR	4242358	PrimaryExpression	32		4242164	2					
ANR	4242359	Statement	snprintf	306:3:11973:11980	4242164	2	True				
ANR	4242360	Statement	(	306:12:11982:11982	4242164	3	True				
ANR	4242361	Statement	num	306:13:11983:11985	4242164	4	True				
ANR	4242362	Statement	","	306:16:11986:11986	4242164	5	True				
ANR	4242363	Statement	sizeof	306:18:11988:11993	4242164	6	True				
ANR	4242364	Statement	(	306:25:11995:11995	4242164	7	True				
ANR	4242365	Statement	num	306:26:11996:11998	4242164	8	True				
ANR	4242366	Statement	)	306:29:11999:11999	4242164	9	True				
ANR	4242367	Statement	","	306:30:12000:12000	4242164	10	True				
ANR	4242368	Statement	"""0x%"""	306:32:12002:12006	4242164	11	True				
ANR	4242369	Statement	PFMT64x	306:37:12007:12013	4242164	12	True				
ANR	4242370	Statement	","	306:44:12014:12014	4242164	13	True				
ANR	4242371	Statement	val	306:46:12016:12018	4242164	14	True				
ANR	4242372	Statement	)	306:49:12019:12019	4242164	15	True				
ANR	4242373	ExpressionStatement		306:50:12020:12020	4242164	16	True				
ANR	4242374	ExpressionStatement	"buf = r_str_append ( buf , num )"	307:3:12025:12054	4242164	17	True				
ANR	4242375	AssignmentExpression	"buf = r_str_append ( buf , num )"		4242164	0		=			
ANR	4242376	Identifier	buf		4242164	0					
ANR	4242377	CallExpression	"r_str_append ( buf , num )"		4242164	1					
ANR	4242378	Callee	r_str_append		4242164	0					
ANR	4242379	Identifier	r_str_append		4242164	0					
ANR	4242380	ArgumentList	buf		4242164	1					
ANR	4242381	Argument	buf		4242164	0					
ANR	4242382	Identifier	buf		4242164	0					
ANR	4242383	Argument	num		4242164	1					
ANR	4242384	Identifier	num		4242164	0					
ANR	4242385	ExpressionStatement	msg = end	308:3:12059:12068	4242164	18	True				
ANR	4242386	AssignmentExpression	msg = end		4242164	0		=			
ANR	4242387	Identifier	msg		4242164	0					
ANR	4242388	Identifier	end		4242164	1					
ANR	4242389	ElseStatement	else		4242164	0					
ANR	4242390	CompoundStatement		34:9:752:752	4242164	0					
ANR	4242391	BreakStatement	break ;	310:3:12084:12089	4242164	0	True				
ANR	4242392	ExpressionStatement	free ( word )	312:2:12097:12108	4242164	5	True				
ANR	4242393	CallExpression	free ( word )		4242164	0					
ANR	4242394	Callee	free		4242164	0					
ANR	4242395	Identifier	free		4242164	0					
ANR	4242396	ArgumentList	word		4242164	1					
ANR	4242397	Argument	word		4242164	0					
ANR	4242398	Identifier	word		4242164	0					
ANR	4242399	ExpressionStatement	"buf = r_str_append ( buf , msg )"	314:1:12114:12143	4242164	3	True				
ANR	4242400	AssignmentExpression	"buf = r_str_append ( buf , msg )"		4242164	0		=			
ANR	4242401	Identifier	buf		4242164	0					
ANR	4242402	CallExpression	"r_str_append ( buf , msg )"		4242164	1					
ANR	4242403	Callee	r_str_append		4242164	0					
ANR	4242404	Identifier	r_str_append		4242164	0					
ANR	4242405	ArgumentList	buf		4242164	1					
ANR	4242406	Argument	buf		4242164	0					
ANR	4242407	Identifier	buf		4242164	0					
ANR	4242408	Argument	msg		4242164	1					
ANR	4242409	Identifier	msg		4242164	0					
ANR	4242410	ReturnStatement	return buf ;	315:1:12146:12156	4242164	4	True				
ANR	4242411	Identifier	buf		4242164	0					
ANR	4242412	ReturnType	static char *		4242164	1					
ANR	4242413	Identifier	filterFlags		4242164	2					
ANR	4242414	ParameterList	"RCore * core , const char * msg"		4242164	3					
ANR	4242415	Parameter	RCore * core	276:25:11296:11306	4242164	0	True				
ANR	4242416	ParameterType	RCore *		4242164	0					
ANR	4242417	Identifier	core		4242164	1					
ANR	4242418	Parameter	const char * msg	276:38:11309:11323	4242164	1	True				
ANR	4242419	ParameterType	const char *		4242164	0					
ANR	4242420	Identifier	msg		4242164	1					
ANR	4242421	CFGEntryNode	ENTRY		4242164		True				
ANR	4242422	CFGExitNode	EXIT		4242164		True				
ANR	4242423	InfiniteForNode	true		4242164		True				
ANR	4242424	Symbol	msg		4242164						
ANR	4242425	Symbol	val		4242164						
ANR	4242426	Symbol	r_str_append		4242164						
ANR	4242427	Symbol	NULL		4242164						
ANR	4242428	Symbol	num		4242164						
ANR	4242429	Symbol	* core		4242164						
ANR	4242430	Symbol	strchr		4242164						
ANR	4242431	Symbol	findBreakChar		4242164						
ANR	4242432	Symbol	dollar		4242164						
ANR	4242433	Symbol	r_num_math		4242164						
ANR	4242434	Symbol	core		4242164						
ANR	4242435	Symbol	strlen		4242164						
ANR	4242436	Symbol	buf		4242164						
ANR	4242437	Symbol	r_str_appendlen		4242164						
ANR	4242438	Symbol	end		4242164						
ANR	4242439	Symbol	r_str_newlen		4242164						
ANR	4242440	Symbol	core -> num		4242164						
ANR	4242441	Symbol	word		4242164						
ANR	4242442	Symbol	* dollar		4242164						
ANR	4242443	ClassDef	<unnamed>	318:0:12161:12204							
ANR	4242444	Function	getClippy	323:0:12208:13078							
ANR	4242445	FunctionDef	getClippy (int type)		4242444	0					
ANR	4242446	CompoundStatement		323:39:12247:13078	4242444	0					
ANR	4242447	IfStatement	if ( type == R_AVATAR_ORANGG )		4242444	0					
ANR	4242448	Condition	type == R_AVATAR_ORANGG	324:5:12254:12276	4242444	0	True				
ANR	4242449	EqualityExpression	type == R_AVATAR_ORANGG		4242444	0		==			
ANR	4242450	Identifier	type		4242444	0					
ANR	4242451	Identifier	R_AVATAR_ORANGG		4242444	1					
ANR	4242452	CompoundStatement		2:30:31:31	4242444	1					
ANR	4242453	Statement	return	325:3:12284:12289	4242444	0	True				
ANR	4242454	Statement	"""      _______\\n"""	326:3:12294:12310	4242444	1	True				
ANR	4242455	Statement	"""     /       \\\\      .-%s-.\\n"""	327:3:12315:12345	4242444	2	True				
ANR	4242456	Statement	"""   _| ( o) (o)\\\\_    | %s |\\n"""	328:3:12350:12380	4242444	3	True				
ANR	4242457	Statement	"""  / _     .\\\\. | \\\\  <| %s |\\n"""	329:3:12385:12416	4242444	4	True				
ANR	4242458	Statement	"""  \\\\| \\\\   ____ / 7`  | %s |\\n"""	330:3:12421:12452	4242444	5	True				
ANR	4242459	Statement	"""  '|\\\\|  `---'/      `-%s-'\\n"""	331:3:12457:12487	4242444	6	True				
ANR	4242460	Statement	"""     | /----. \\\\\\n"""	332:3:12492:12511	4242444	7	True				
ANR	4242461	Statement	"""     | \\\\___/  |___\\n"""	333:3:12516:12538	4242444	8	True				
ANR	4242462	ExpressionStatement	"""     `-----'`-----'\\n"""	334:3:12543:12570	4242444	9	True				
ANR	4242463	PrimaryExpression	"""     `-----'`-----'\\n"""		4242444	0					
ANR	4242464	IdentifierDeclStatement	const int choose = r_num_rand ( 3 ) ;	337:1:12576:12609	4242444	1	True				
ANR	4242465	IdentifierDecl	choose = r_num_rand ( 3 )		4242444	0					
ANR	4242466	IdentifierDeclType	const int		4242444	0					
ANR	4242467	Identifier	choose		4242444	1					
ANR	4242468	AssignmentExpression	choose = r_num_rand ( 3 )		4242444	2		=			
ANR	4242469	Identifier	choose		4242444	0					
ANR	4242470	CallExpression	r_num_rand ( 3 )		4242444	1					
ANR	4242471	Callee	r_num_rand		4242444	0					
ANR	4242472	Identifier	r_num_rand		4242444	0					
ANR	4242473	ArgumentList	3		4242444	1					
ANR	4242474	Argument	3		4242444	0					
ANR	4242475	PrimaryExpression	3		4242444	0					
ANR	4242476	SwitchStatement	switch ( choose )		4242444	2					
ANR	4242477	Condition	choose	338:9:12620:12625	4242444	0	True				
ANR	4242478	Identifier	choose		4242444	0					
ANR	4242479	CompoundStatement		16:17:380:380	4242444	1					
ANR	4242480	Label	case 0 :	339:1:12631:12637	4242444	0	True				
ANR	4242481	Statement	return	339:9:12639:12644	4242444	1	True				
ANR	4242482	Statement	""" .--.     .-%s-.\\n"""	340:0:12646:12665	4242444	2	True				
ANR	4242483	Statement	""" | _|     | %s |\\n"""	341:0:12667:12686	4242444	3	True				
ANR	4242484	Statement	""" | O O   <  %s |\\n"""	342:0:12688:12707	4242444	4	True				
ANR	4242485	Statement	""" |  |  |  | %s |\\n"""	343:0:12709:12728	4242444	5	True				
ANR	4242486	Statement	""" || | /   `-%s-'\\n"""	344:0:12730:12749	4242444	6	True				
ANR	4242487	Statement	""" |`-'|\\n"""	345:0:12751:12760	4242444	7	True				
ANR	4242488	ExpressionStatement	""" `---'\\n"""	346:0:12762:12772	4242444	8	True				
ANR	4242489	PrimaryExpression	""" `---'\\n"""		4242444	0					
ANR	4242490	Label	case 1 :	347:1:12775:12781	4242444	9	True				
ANR	4242491	Statement	return	347:9:12783:12788	4242444	10	True				
ANR	4242492	Statement	""" .--.     .-%s-.\\n"""	348:0:12790:12809	4242444	11	True				
ANR	4242493	Statement	""" |   \\\\    | %s |\\n"""	349:0:12811:12831	4242444	12	True				
ANR	4242494	Statement	""" | O o   <  %s |\\n"""	350:0:12833:12852	4242444	13	True				
ANR	4242495	Statement	""" |   | /  | %s |\\n"""	351:0:12854:12873	4242444	14	True				
ANR	4242496	Statement	""" |  ( /   `-%s-'\\n"""	352:0:12875:12894	4242444	15	True				
ANR	4242497	Statement	""" |   / \\n"""	353:0:12896:12906	4242444	16	True				
ANR	4242498	ExpressionStatement	""" `--'\\n"""	354:0:12908:12917	4242444	17	True				
ANR	4242499	PrimaryExpression	""" `--'\\n"""		4242444	0					
ANR	4242500	Label	case 2 :	355:1:12920:12926	4242444	18	True				
ANR	4242501	Statement	return	355:9:12928:12933	4242444	19	True				
ANR	4242502	Statement	""" .--.     .-%s-.\\n"""	356:0:12935:12954	4242444	20	True				
ANR	4242503	Statement	""" | _|_    | %s |\\n"""	357:0:12956:12975	4242444	21	True				
ANR	4242504	Statement	""" | O O   <  %s |\\n"""	358:0:12977:12996	4242444	22	True				
ANR	4242505	Statement	""" |  ||    | %s |\\n"""	359:0:12998:13017	4242444	23	True				
ANR	4242506	Statement	""" | _:|    `-%s-'\\n"""	360:0:13019:13038	4242444	24	True				
ANR	4242507	Statement	""" |   |\\n"""	361:0:13040:13049	4242444	25	True				
ANR	4242508	ExpressionStatement	""" `---'\\n"""	362:0:13051:13061	4242444	26	True				
ANR	4242509	PrimaryExpression	""" `---'\\n"""		4242444	0					
ANR	4242510	ReturnStatement	"return """" ;"	364:1:13067:13076	4242444	3	True				
ANR	4242511	PrimaryExpression	""""""		4242444	0					
ANR	4242512	ReturnType	static const char *		4242444	1					
ANR	4242513	Identifier	getClippy		4242444	2					
ANR	4242514	ParameterList	int type		4242444	3					
ANR	4242515	Parameter	int type	323:29:12237:12244	4242444	0	True				
ANR	4242516	ParameterType	int		4242444	0					
ANR	4242517	Identifier	type		4242444	1					
ANR	4242518	CFGEntryNode	ENTRY		4242444		True				
ANR	4242519	CFGExitNode	EXIT		4242444		True				
ANR	4242520	Symbol	choose		4242444						
ANR	4242521	Symbol	type		4242444						
ANR	4242522	Symbol	R_AVATAR_ORANGG		4242444						
ANR	4242523	Symbol	r_num_rand		4242444						
ANR	4242524	Function	r_core_clippy	367:0:13081:13480							
ANR	4242525	FunctionDef	r_core_clippy (const char * msg)		4242524	0					
ANR	4242526	CompoundStatement		367:42:13123:13480	4242524	0					
ANR	4242527	IdentifierDeclStatement	int type = R_AVATAR_CLIPPY ;	368:1:13126:13152	4242524	0	True				
ANR	4242528	IdentifierDecl	type = R_AVATAR_CLIPPY		4242524	0					
ANR	4242529	IdentifierDeclType	int		4242524	0					
ANR	4242530	Identifier	type		4242524	1					
ANR	4242531	AssignmentExpression	type = R_AVATAR_CLIPPY		4242524	2		=			
ANR	4242532	Identifier	R_AVATAR_CLIPPY		4242524	0					
ANR	4242533	Identifier	R_AVATAR_CLIPPY		4242524	1					
ANR	4242534	IfStatement	if ( * msg == '+' )		4242524	1					
ANR	4242535	Condition	* msg == '+'	369:5:13159:13169	4242524	0	True				
ANR	4242536	EqualityExpression	* msg == '+'		4242524	0		==			
ANR	4242537	UnaryOperationExpression	* msg		4242524	0					
ANR	4242538	UnaryOperator	*		4242524	0					
ANR	4242539	Identifier	msg		4242524	1					
ANR	4242540	PrimaryExpression	'+'		4242524	1					
ANR	4242541	CompoundStatement		4:2:52:83	4242524	1					
ANR	4242542	IdentifierDeclStatement	"char * space = strchr ( msg , ' ' ) ;"	370:2:13176:13207	4242524	0	True				
ANR	4242543	IdentifierDecl	"* space = strchr ( msg , ' ' )"		4242524	0					
ANR	4242544	IdentifierDeclType	char *		4242524	0					
ANR	4242545	Identifier	space		4242524	1					
ANR	4242546	AssignmentExpression	"* space = strchr ( msg , ' ' )"		4242524	2		=			
ANR	4242547	Identifier	space		4242524	0					
ANR	4242548	CallExpression	"strchr ( msg , ' ' )"		4242524	1					
ANR	4242549	Callee	strchr		4242524	0					
ANR	4242550	Identifier	strchr		4242524	0					
ANR	4242551	ArgumentList	msg		4242524	1					
ANR	4242552	Argument	msg		4242524	0					
ANR	4242553	Identifier	msg		4242524	0					
ANR	4242554	Argument	' '		4242524	1					
ANR	4242555	PrimaryExpression	' '		4242524	0					
ANR	4242556	IfStatement	if ( ! space )		4242524	1					
ANR	4242557	Condition	! space	371:6:13215:13220	4242524	0	True				
ANR	4242558	UnaryOperationExpression	! space		4242524	0					
ANR	4242559	UnaryOperator	!		4242524	0					
ANR	4242560	Identifier	space		4242524	1					
ANR	4242561	CompoundStatement		5:14:99:99	4242524	1					
ANR	4242562	ReturnStatement	return ;	372:3:13228:13234	4242524	0	True				
ANR	4242563	ExpressionStatement	type = R_AVATAR_ORANGG	374:2:13242:13264	4242524	2	True				
ANR	4242564	AssignmentExpression	type = R_AVATAR_ORANGG		4242524	0		=			
ANR	4242565	Identifier	type		4242524	0					
ANR	4242566	Identifier	R_AVATAR_ORANGG		4242524	1					
ANR	4242567	ExpressionStatement	msg = space + 1	375:2:13268:13283	4242524	3	True				
ANR	4242568	AssignmentExpression	msg = space + 1		4242524	0		=			
ANR	4242569	Identifier	msg		4242524	0					
ANR	4242570	AdditiveExpression	space + 1		4242524	1		+			
ANR	4242571	Identifier	space		4242524	0					
ANR	4242572	PrimaryExpression	1		4242524	1					
ANR	4242573	IdentifierDeclStatement	int msglen = strlen ( msg ) ;	377:1:13289:13314	4242524	2	True				
ANR	4242574	IdentifierDecl	msglen = strlen ( msg )		4242524	0					
ANR	4242575	IdentifierDeclType	int		4242524	0					
ANR	4242576	Identifier	msglen		4242524	1					
ANR	4242577	AssignmentExpression	msglen = strlen ( msg )		4242524	2		=			
ANR	4242578	Identifier	msglen		4242524	0					
ANR	4242579	CallExpression	strlen ( msg )		4242524	1					
ANR	4242580	Callee	strlen		4242524	0					
ANR	4242581	Identifier	strlen		4242524	0					
ANR	4242582	ArgumentList	msg		4242524	1					
ANR	4242583	Argument	msg		4242524	0					
ANR	4242584	Identifier	msg		4242524	0					
ANR	4242585	IdentifierDeclStatement	"char * l = strdup ( r_str_pad ( '-' , msglen ) ) ;"	378:1:13317:13359	4242524	3	True				
ANR	4242586	IdentifierDecl	"* l = strdup ( r_str_pad ( '-' , msglen ) )"		4242524	0					
ANR	4242587	IdentifierDeclType	char *		4242524	0					
ANR	4242588	Identifier	l		4242524	1					
ANR	4242589	AssignmentExpression	"* l = strdup ( r_str_pad ( '-' , msglen ) )"		4242524	2		=			
ANR	4242590	Identifier	l		4242524	0					
ANR	4242591	CallExpression	"strdup ( r_str_pad ( '-' , msglen ) )"		4242524	1					
ANR	4242592	Callee	strdup		4242524	0					
ANR	4242593	Identifier	strdup		4242524	0					
ANR	4242594	ArgumentList	"r_str_pad ( '-' , msglen )"		4242524	1					
ANR	4242595	Argument	"r_str_pad ( '-' , msglen )"		4242524	0					
ANR	4242596	CallExpression	"r_str_pad ( '-' , msglen )"		4242524	0					
ANR	4242597	Callee	r_str_pad		4242524	0					
ANR	4242598	Identifier	r_str_pad		4242524	0					
ANR	4242599	ArgumentList	'-'		4242524	1					
ANR	4242600	Argument	'-'		4242524	0					
ANR	4242601	PrimaryExpression	'-'		4242524	0					
ANR	4242602	Argument	msglen		4242524	1					
ANR	4242603	Identifier	msglen		4242524	0					
ANR	4242604	IdentifierDeclStatement	"char * s = strdup ( r_str_pad ( ' ' , msglen ) ) ;"	379:1:13362:13404	4242524	4	True				
ANR	4242605	IdentifierDecl	"* s = strdup ( r_str_pad ( ' ' , msglen ) )"		4242524	0					
ANR	4242606	IdentifierDeclType	char *		4242524	0					
ANR	4242607	Identifier	s		4242524	1					
ANR	4242608	AssignmentExpression	"* s = strdup ( r_str_pad ( ' ' , msglen ) )"		4242524	2		=			
ANR	4242609	Identifier	s		4242524	0					
ANR	4242610	CallExpression	"strdup ( r_str_pad ( ' ' , msglen ) )"		4242524	1					
ANR	4242611	Callee	strdup		4242524	0					
ANR	4242612	Identifier	strdup		4242524	0					
ANR	4242613	ArgumentList	"r_str_pad ( ' ' , msglen )"		4242524	1					
ANR	4242614	Argument	"r_str_pad ( ' ' , msglen )"		4242524	0					
ANR	4242615	CallExpression	"r_str_pad ( ' ' , msglen )"		4242524	0					
ANR	4242616	Callee	r_str_pad		4242524	0					
ANR	4242617	Identifier	r_str_pad		4242524	0					
ANR	4242618	ArgumentList	' '		4242524	1					
ANR	4242619	Argument	' '		4242524	0					
ANR	4242620	PrimaryExpression	' '		4242524	0					
ANR	4242621	Argument	msglen		4242524	1					
ANR	4242622	Identifier	msglen		4242524	0					
ANR	4242623	ExpressionStatement	"r_cons_printf ( getClippy ( type ) , l , s , msg , s , l )"	380:1:13407:13456	4242524	5	True				
ANR	4242624	CallExpression	"r_cons_printf ( getClippy ( type ) , l , s , msg , s , l )"		4242524	0					
ANR	4242625	Callee	r_cons_printf		4242524	0					
ANR	4242626	Identifier	r_cons_printf		4242524	0					
ANR	4242627	ArgumentList	getClippy ( type )		4242524	1					
ANR	4242628	Argument	getClippy ( type )		4242524	0					
ANR	4242629	CallExpression	getClippy ( type )		4242524	0					
ANR	4242630	Callee	getClippy		4242524	0					
ANR	4242631	Identifier	getClippy		4242524	0					
ANR	4242632	ArgumentList	type		4242524	1					
ANR	4242633	Argument	type		4242524	0					
ANR	4242634	Identifier	type		4242524	0					
ANR	4242635	Argument	l		4242524	1					
ANR	4242636	Identifier	l		4242524	0					
ANR	4242637	Argument	s		4242524	2					
ANR	4242638	Identifier	s		4242524	0					
ANR	4242639	Argument	msg		4242524	3					
ANR	4242640	Identifier	msg		4242524	0					
ANR	4242641	Argument	s		4242524	4					
ANR	4242642	Identifier	s		4242524	0					
ANR	4242643	Argument	l		4242524	5					
ANR	4242644	Identifier	l		4242524	0					
ANR	4242645	ExpressionStatement	free ( l )	381:1:13459:13467	4242524	6	True				
ANR	4242646	CallExpression	free ( l )		4242524	0					
ANR	4242647	Callee	free		4242524	0					
ANR	4242648	Identifier	free		4242524	0					
ANR	4242649	ArgumentList	l		4242524	1					
ANR	4242650	Argument	l		4242524	0					
ANR	4242651	Identifier	l		4242524	0					
ANR	4242652	ExpressionStatement	free ( s )	382:1:13470:13478	4242524	7	True				
ANR	4242653	CallExpression	free ( s )		4242524	0					
ANR	4242654	Callee	free		4242524	0					
ANR	4242655	Identifier	free		4242524	0					
ANR	4242656	ArgumentList	s		4242524	1					
ANR	4242657	Argument	s		4242524	0					
ANR	4242658	Identifier	s		4242524	0					
ANR	4242659	ReturnType	R_API void		4242524	1					
ANR	4242660	Identifier	r_core_clippy		4242524	2					
ANR	4242661	ParameterList	const char * msg		4242524	3					
ANR	4242662	Parameter	const char * msg	367:25:13106:13120	4242524	0	True				
ANR	4242663	ParameterType	const char *		4242524	0					
ANR	4242664	Identifier	msg		4242524	1					
ANR	4242665	CFGEntryNode	ENTRY		4242524		True				
ANR	4242666	CFGExitNode	EXIT		4242524		True				
ANR	4242667	Symbol	msg		4242524						
ANR	4242668	Symbol	r_str_pad		4242524						
ANR	4242669	Symbol	getClippy		4242524						
ANR	4242670	Symbol	strchr		4242524						
ANR	4242671	Symbol	* msg		4242524						
ANR	4242672	Symbol	type		4242524						
ANR	4242673	Symbol	l		4242524						
ANR	4242674	Symbol	space		4242524						
ANR	4242675	Symbol	msglen		4242524						
ANR	4242676	Symbol	strlen		4242524						
ANR	4242677	Symbol	s		4242524						
ANR	4242678	Symbol	R_AVATAR_CLIPPY		4242524						
ANR	4242679	Symbol	strdup		4242524						
ANR	4242680	Symbol	R_AVATAR_ORANGG		4242524						
ANR	4242681	Function	cmd_help	386:0:13484:33346							
ANR	4242682	FunctionDef	"cmd_help (void * data , const char * input)"		4242681	0					
ANR	4242683	CompoundStatement		386:51:13535:33346	4242681	0					
ANR	4242684	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	387:1:13538:13565	4242681	0	True				
ANR	4242685	IdentifierDecl	* core = ( RCore * ) data		4242681	0					
ANR	4242686	IdentifierDeclType	RCore *		4242681	0					
ANR	4242687	Identifier	core		4242681	1					
ANR	4242688	AssignmentExpression	* core = ( RCore * ) data		4242681	2		=			
ANR	4242689	Identifier	core		4242681	0					
ANR	4242690	CastExpression	( RCore * ) data		4242681	1					
ANR	4242691	CastTarget	RCore *		4242681	0					
ANR	4242692	Identifier	data		4242681	1					
ANR	4242693	IdentifierDeclStatement	RIOMap * map ;	388:1:13568:13579	4242681	1	True				
ANR	4242694	IdentifierDecl	* map		4242681	0					
ANR	4242695	IdentifierDeclType	RIOMap *		4242681	0					
ANR	4242696	Identifier	map		4242681	1					
ANR	4242697	IdentifierDeclStatement	const char * k ;	389:1:13582:13595	4242681	2	True				
ANR	4242698	IdentifierDecl	* k		4242681	0					
ANR	4242699	IdentifierDeclType	const char *		4242681	0					
ANR	4242700	Identifier	k		4242681	1					
ANR	4242701	IdentifierDeclStatement	RListIter * iter ;	390:1:13598:13613	4242681	3	True				
ANR	4242702	IdentifierDecl	* iter		4242681	0					
ANR	4242703	IdentifierDeclType	RListIter *		4242681	0					
ANR	4242704	Identifier	iter		4242681	1					
ANR	4242705	IdentifierDeclStatement	"char * p , out [ 128 ] = R_EMPTY ;"	391:1:13616:13643	4242681	4	True				
ANR	4242706	IdentifierDecl	* p		4242681	0					
ANR	4242707	IdentifierDeclType	char *		4242681	0					
ANR	4242708	Identifier	p		4242681	1					
ANR	4242709	IdentifierDecl	out [ 128 ] = R_EMPTY		4242681	1					
ANR	4242710	IdentifierDeclType	char [ 128 ]		4242681	0					
ANR	4242711	Identifier	out		4242681	1					
ANR	4242712	PrimaryExpression	128		4242681	2					
ANR	4242713	AssignmentExpression	out [ 128 ] = R_EMPTY		4242681	3		=			
ANR	4242714	Identifier	R_EMPTY		4242681	0					
ANR	4242715	Identifier	R_EMPTY		4242681	1					
ANR	4242716	IdentifierDeclStatement	ut64 n ;	392:1:13646:13652	4242681	5	True				
ANR	4242717	IdentifierDecl	n		4242681	0					
ANR	4242718	IdentifierDeclType	ut64		4242681	0					
ANR	4242719	Identifier	n		4242681	1					
ANR	4242720	IdentifierDeclStatement	int i ;	393:1:13655:13660	4242681	6	True				
ANR	4242721	IdentifierDecl	i		4242681	0					
ANR	4242722	IdentifierDeclType	int		4242681	0					
ANR	4242723	Identifier	i		4242681	1					
ANR	4242724	IdentifierDeclStatement	RList * tmp ;	394:1:13663:13673	4242681	7	True				
ANR	4242725	IdentifierDecl	* tmp		4242681	0					
ANR	4242726	IdentifierDeclType	RList *		4242681	0					
ANR	4242727	Identifier	tmp		4242681	1					
ANR	4242728	SwitchStatement	switch ( input [ 0 ] )		4242681	8					
ANR	4242729	Condition	input [ 0 ]	396:9:13685:13692	4242681	0	True				
ANR	4242730	ArrayIndexing	input [ 0 ]		4242681	0					
ANR	4242731	Identifier	input		4242681	0					
ANR	4242732	PrimaryExpression	0		4242681	1					
ANR	4242733	CompoundStatement		11:19:159:159	4242681	1					
ANR	4242734	Label	case '0' :	397:1:13698:13706	4242681	0	True				
ANR	4242735	ExpressionStatement	core -> curtab = 0	398:2:13718:13734	4242681	1	True				
ANR	4242736	AssignmentExpression	core -> curtab = 0		4242681	0		=			
ANR	4242737	PtrMemberAccess	core -> curtab		4242681	0					
ANR	4242738	Identifier	core		4242681	0					
ANR	4242739	Identifier	curtab		4242681	1					
ANR	4242740	PrimaryExpression	0		4242681	1					
ANR	4242741	BreakStatement	break ;	399:2:13738:13743	4242681	2	True				
ANR	4242742	Label	case '1' :	400:1:13746:13754	4242681	3	True				
ANR	4242743	IfStatement	if ( core -> curtab < 0 )		4242681	4					
ANR	4242744	Condition	core -> curtab < 0	401:6:13770:13785	4242681	0	True				
ANR	4242745	RelationalExpression	core -> curtab < 0		4242681	0		<			
ANR	4242746	PtrMemberAccess	core -> curtab		4242681	0					
ANR	4242747	Identifier	core		4242681	0					
ANR	4242748	Identifier	curtab		4242681	1					
ANR	4242749	PrimaryExpression	0		4242681	1					
ANR	4242750	CompoundStatement		16:24:252:252	4242681	1					
ANR	4242751	ExpressionStatement	core -> curtab = 0	402:3:13793:13809	4242681	0	True				
ANR	4242752	AssignmentExpression	core -> curtab = 0		4242681	0		=			
ANR	4242753	PtrMemberAccess	core -> curtab		4242681	0					
ANR	4242754	Identifier	core		4242681	0					
ANR	4242755	Identifier	curtab		4242681	1					
ANR	4242756	PrimaryExpression	0		4242681	1					
ANR	4242757	ExpressionStatement	core -> curtab ++	404:2:13817:13832	4242681	5	True				
ANR	4242758	PostIncDecOperationExpression	core -> curtab ++		4242681	0					
ANR	4242759	PtrMemberAccess	core -> curtab		4242681	0					
ANR	4242760	Identifier	core		4242681	0					
ANR	4242761	Identifier	curtab		4242681	1					
ANR	4242762	IncDec	++		4242681	1					
ANR	4242763	BreakStatement	break ;	405:2:13836:13841	4242681	6	True				
ANR	4242764	Label	case 'r' :	406:1:13844:13852	4242681	7	True				
ANR	4242765	CompoundStatement		24:2:393:410	4242681	8					
ANR	4242766	IdentifierDeclStatement	ut64 b = 0 ;	408:2:13915:13925	4242681	0	True				
ANR	4242767	IdentifierDecl	b = 0		4242681	0					
ANR	4242768	IdentifierDeclType	ut64		4242681	0					
ANR	4242769	Identifier	b		4242681	1					
ANR	4242770	AssignmentExpression	b = 0		4242681	2		=			
ANR	4242771	Identifier	b		4242681	0					
ANR	4242772	PrimaryExpression	0		4242681	1					
ANR	4242773	IdentifierDeclStatement	ut32 r = UT32_MAX ;	409:2:13929:13946	4242681	1	True				
ANR	4242774	IdentifierDecl	r = UT32_MAX		4242681	0					
ANR	4242775	IdentifierDeclType	ut32		4242681	0					
ANR	4242776	Identifier	r		4242681	1					
ANR	4242777	AssignmentExpression	r = UT32_MAX		4242681	2		=			
ANR	4242778	Identifier	UT32_MAX		4242681	0					
ANR	4242779	Identifier	UT32_MAX		4242681	1					
ANR	4242780	IfStatement	if ( input [ 1 ] )		4242681	2					
ANR	4242781	Condition	input [ 1 ]	410:6:13954:13961	4242681	0	True				
ANR	4242782	ArrayIndexing	input [ 1 ]		4242681	0					
ANR	4242783	Identifier	input		4242681	0					
ANR	4242784	PrimaryExpression	1		4242681	1					
ANR	4242785	CompoundStatement		25:16:428:428	4242681	1					
ANR	4242786	ExpressionStatement	"strncpy ( out , input + ( input [ 1 ] == ' ' ? 2 : 1 ) , sizeof ( out ) - 1 )"	411:3:13969:14027	4242681	0	True				
ANR	4242787	CallExpression	"strncpy ( out , input + ( input [ 1 ] == ' ' ? 2 : 1 ) , sizeof ( out ) - 1 )"		4242681	0					
ANR	4242788	Callee	strncpy		4242681	0					
ANR	4242789	Identifier	strncpy		4242681	0					
ANR	4242790	ArgumentList	out		4242681	1					
ANR	4242791	Argument	out		4242681	0					
ANR	4242792	Identifier	out		4242681	0					
ANR	4242793	Argument	input + ( input [ 1 ] == ' ' ? 2 : 1 )		4242681	1					
ANR	4242794	AdditiveExpression	input + ( input [ 1 ] == ' ' ? 2 : 1 )		4242681	0		+			
ANR	4242795	Identifier	input		4242681	0					
ANR	4242796	ConditionalExpression	input [ 1 ] == ' ' ? 2 : 1		4242681	1					
ANR	4242797	Condition	input [ 1 ] == ' '		4242681	0					
ANR	4242798	EqualityExpression	input [ 1 ] == ' '		4242681	0		==			
ANR	4242799	ArrayIndexing	input [ 1 ]		4242681	0					
ANR	4242800	Identifier	input		4242681	0					
ANR	4242801	PrimaryExpression	1		4242681	1					
ANR	4242802	PrimaryExpression	' '		4242681	1					
ANR	4242803	PrimaryExpression	2		4242681	1					
ANR	4242804	PrimaryExpression	1		4242681	2					
ANR	4242805	Argument	sizeof ( out ) - 1		4242681	2					
ANR	4242806	AdditiveExpression	sizeof ( out ) - 1		4242681	0		-			
ANR	4242807	SizeofExpression	sizeof ( out )		4242681	0					
ANR	4242808	Sizeof	sizeof		4242681	0					
ANR	4242809	SizeofOperand	out		4242681	1					
ANR	4242810	PrimaryExpression	1		4242681	1					
ANR	4242811	ExpressionStatement	"p = strchr ( out + 1 , ' ' )"	412:3:14032:14057	4242681	1	True				
ANR	4242812	AssignmentExpression	"p = strchr ( out + 1 , ' ' )"		4242681	0		=			
ANR	4242813	Identifier	p		4242681	0					
ANR	4242814	CallExpression	"strchr ( out + 1 , ' ' )"		4242681	1					
ANR	4242815	Callee	strchr		4242681	0					
ANR	4242816	Identifier	strchr		4242681	0					
ANR	4242817	ArgumentList	out + 1		4242681	1					
ANR	4242818	Argument	out + 1		4242681	0					
ANR	4242819	AdditiveExpression	out + 1		4242681	0		+			
ANR	4242820	Identifier	out		4242681	0					
ANR	4242821	PrimaryExpression	1		4242681	1					
ANR	4242822	Argument	' '		4242681	1					
ANR	4242823	PrimaryExpression	' '		4242681	0					
ANR	4242824	IfStatement	if ( p )		4242681	2					
ANR	4242825	Condition	p	413:7:14066:14066	4242681	0	True				
ANR	4242826	Identifier	p		4242681	0					
ANR	4242827	CompoundStatement		28:10:533:533	4242681	1					
ANR	4242828	ExpressionStatement	* p = 0	414:4:14075:14081	4242681	0	True				
ANR	4242829	AssignmentExpression	* p = 0		4242681	0		=			
ANR	4242830	UnaryOperationExpression	* p		4242681	0					
ANR	4242831	UnaryOperator	*		4242681	0					
ANR	4242832	Identifier	p		4242681	1					
ANR	4242833	PrimaryExpression	0		4242681	1					
ANR	4242834	ExpressionStatement	"b = ( ut32 ) r_num_math ( core -> num , out )"	415:4:14087:14124	4242681	1	True				
ANR	4242835	AssignmentExpression	"b = ( ut32 ) r_num_math ( core -> num , out )"		4242681	0		=			
ANR	4242836	Identifier	b		4242681	0					
ANR	4242837	CastExpression	"( ut32 ) r_num_math ( core -> num , out )"		4242681	1					
ANR	4242838	CastTarget	ut32		4242681	0					
ANR	4242839	CallExpression	"r_num_math ( core -> num , out )"		4242681	1					
ANR	4242840	Callee	r_num_math		4242681	0					
ANR	4242841	Identifier	r_num_math		4242681	0					
ANR	4242842	ArgumentList	core -> num		4242681	1					
ANR	4242843	Argument	core -> num		4242681	0					
ANR	4242844	PtrMemberAccess	core -> num		4242681	0					
ANR	4242845	Identifier	core		4242681	0					
ANR	4242846	Identifier	num		4242681	1					
ANR	4242847	Argument	out		4242681	1					
ANR	4242848	Identifier	out		4242681	0					
ANR	4242849	ExpressionStatement	"r = ( ut32 ) r_num_math ( core -> num , p + 1 ) - b"	416:4:14130:14169	4242681	2	True				
ANR	4242850	AssignmentExpression	"r = ( ut32 ) r_num_math ( core -> num , p + 1 ) - b"		4242681	0		=			
ANR	4242851	Identifier	r		4242681	0					
ANR	4242852	AdditiveExpression	"( ut32 ) r_num_math ( core -> num , p + 1 ) - b"		4242681	1		-			
ANR	4242853	CastExpression	"( ut32 ) r_num_math ( core -> num , p + 1 )"		4242681	0					
ANR	4242854	CastTarget	ut32		4242681	0					
ANR	4242855	CallExpression	"r_num_math ( core -> num , p + 1 )"		4242681	1					
ANR	4242856	Callee	r_num_math		4242681	0					
ANR	4242857	Identifier	r_num_math		4242681	0					
ANR	4242858	ArgumentList	core -> num		4242681	1					
ANR	4242859	Argument	core -> num		4242681	0					
ANR	4242860	PtrMemberAccess	core -> num		4242681	0					
ANR	4242861	Identifier	core		4242681	0					
ANR	4242862	Identifier	num		4242681	1					
ANR	4242863	Argument	p + 1		4242681	1					
ANR	4242864	AdditiveExpression	p + 1		4242681	0		+			
ANR	4242865	Identifier	p		4242681	0					
ANR	4242866	PrimaryExpression	1		4242681	1					
ANR	4242867	Identifier	b		4242681	1					
ANR	4242868	ElseStatement	else		4242681	0					
ANR	4242869	CompoundStatement		32:10:645:645	4242681	0					
ANR	4242870	ExpressionStatement	"r = ( ut32 ) r_num_math ( core -> num , out )"	418:4:14187:14224	4242681	0	True				
ANR	4242871	AssignmentExpression	"r = ( ut32 ) r_num_math ( core -> num , out )"		4242681	0		=			
ANR	4242872	Identifier	r		4242681	0					
ANR	4242873	CastExpression	"( ut32 ) r_num_math ( core -> num , out )"		4242681	1					
ANR	4242874	CastTarget	ut32		4242681	0					
ANR	4242875	CallExpression	"r_num_math ( core -> num , out )"		4242681	1					
ANR	4242876	Callee	r_num_math		4242681	0					
ANR	4242877	Identifier	r_num_math		4242681	0					
ANR	4242878	ArgumentList	core -> num		4242681	1					
ANR	4242879	Argument	core -> num		4242681	0					
ANR	4242880	PtrMemberAccess	core -> num		4242681	0					
ANR	4242881	Identifier	core		4242681	0					
ANR	4242882	Identifier	num		4242681	1					
ANR	4242883	Argument	out		4242681	1					
ANR	4242884	Identifier	out		4242681	0					
ANR	4242885	ElseStatement	else		4242681	0					
ANR	4242886	CompoundStatement		35:9:704:704	4242681	0					
ANR	4242887	Statement	r	421:3:14245:14245	4242681	0	True				
ANR	4242888	Statement	=	421:5:14247:14247	4242681	1	True				
ANR	4242889	Statement	0L	421:7:14249:14250	4242681	2	True				
ANR	4242890	ExpressionStatement	L	421:9:14251:14252	4242681	3	True				
ANR	4242891	Identifier	L		4242681	0					
ANR	4242892	IfStatement	if ( ! r )		4242681	3					
ANR	4242893	Condition	! r	423:6:14264:14265	4242681	0	True				
ANR	4242894	UnaryOperationExpression	! r		4242681	0					
ANR	4242895	UnaryOperator	!		4242681	0					
ANR	4242896	Identifier	r		4242681	1					
ANR	4242897	CompoundStatement		38:10:732:732	4242681	1					
ANR	4242898	ExpressionStatement	r = UT32_MAX >> 1	424:3:14273:14290	4242681	0	True				
ANR	4242899	AssignmentExpression	r = UT32_MAX >> 1		4242681	0		=			
ANR	4242900	Identifier	r		4242681	0					
ANR	4242901	ShiftExpression	UT32_MAX >> 1		4242681	1		>>			
ANR	4242902	Identifier	UT32_MAX		4242681	0					
ANR	4242903	PrimaryExpression	1		4242681	1					
ANR	4242904	ExpressionStatement	core -> num -> value = ( ut64 ) ( b + r_num_rand ( r ) )	426:2:14298:14344	4242681	4	True				
ANR	4242905	AssignmentExpression	core -> num -> value = ( ut64 ) ( b + r_num_rand ( r ) )		4242681	0		=			
ANR	4242906	PtrMemberAccess	core -> num -> value		4242681	0					
ANR	4242907	PtrMemberAccess	core -> num		4242681	0					
ANR	4242908	Identifier	core		4242681	0					
ANR	4242909	Identifier	num		4242681	1					
ANR	4242910	Identifier	value		4242681	1					
ANR	4242911	CastExpression	( ut64 ) ( b + r_num_rand ( r ) )		4242681	1					
ANR	4242912	CastTarget	ut64		4242681	0					
ANR	4242913	AdditiveExpression	b + r_num_rand ( r )		4242681	1		+			
ANR	4242914	Identifier	b		4242681	0					
ANR	4242915	CallExpression	r_num_rand ( r )		4242681	1					
ANR	4242916	Callee	r_num_rand		4242681	0					
ANR	4242917	Identifier	r_num_rand		4242681	0					
ANR	4242918	ArgumentList	r		4242681	1					
ANR	4242919	Argument	r		4242681	0					
ANR	4242920	Identifier	r		4242681	0					
ANR	4242921	Statement	r_cons_printf	427:2:14348:14360	4242681	5	True				
ANR	4242922	Statement	(	427:16:14362:14362	4242681	6	True				
ANR	4242923	Statement	"""0x%"""	427:17:14363:14367	4242681	7	True				
ANR	4242924	Statement	PFMT64x	427:22:14368:14374	4242681	8	True				
ANR	4242925	Statement	"""\\n"""	427:29:14375:14378	4242681	9	True				
ANR	4242926	Statement	","	427:33:14379:14379	4242681	10	True				
ANR	4242927	Statement	core	427:35:14381:14384	4242681	11	True				
ANR	4242928	Statement	->	427:39:14385:14386	4242681	12	True				
ANR	4242929	Statement	num	427:41:14387:14389	4242681	13	True				
ANR	4242930	Statement	->	427:44:14390:14391	4242681	14	True				
ANR	4242931	Statement	value	427:46:14392:14396	4242681	15	True				
ANR	4242932	Statement	)	427:51:14397:14397	4242681	16	True				
ANR	4242933	ExpressionStatement		427:52:14398:14398	4242681	17	True				
ANR	4242934	BreakStatement	break ;	429:2:14406:14411	4242681	9	True				
ANR	4242935	Label	case 'a' :	430:1:14414:14422	4242681	10	True				
ANR	4242936	ExpressionStatement	"r_cons_printf ( ""%s"" , ret_ascii_table ( ) )"	431:2:14434:14473	4242681	11	True				
ANR	4242937	CallExpression	"r_cons_printf ( ""%s"" , ret_ascii_table ( ) )"		4242681	0					
ANR	4242938	Callee	r_cons_printf		4242681	0					
ANR	4242939	Identifier	r_cons_printf		4242681	0					
ANR	4242940	ArgumentList	"""%s"""		4242681	1					
ANR	4242941	Argument	"""%s"""		4242681	0					
ANR	4242942	PrimaryExpression	"""%s"""		4242681	0					
ANR	4242943	Argument	ret_ascii_table ( )		4242681	1					
ANR	4242944	CallExpression	ret_ascii_table ( )		4242681	0					
ANR	4242945	Callee	ret_ascii_table		4242681	0					
ANR	4242946	Identifier	ret_ascii_table		4242681	0					
ANR	4242947	ArgumentList			4242681	1					
ANR	4242948	BreakStatement	break ;	432:2:14477:14482	4242681	12	True				
ANR	4242949	Label	case 'b' :	433:1:14485:14493	4242681	13	True				
ANR	4242950	IfStatement	if ( input [ 1 ] == '6' && input [ 2 ] == '4' )		4242681	14					
ANR	4242951	Condition	input [ 1 ] == '6' && input [ 2 ] == '4'	434:6:14509:14542	4242681	0	True				
ANR	4242952	AndExpression	input [ 1 ] == '6' && input [ 2 ] == '4'		4242681	0		&&			
ANR	4242953	EqualityExpression	input [ 1 ] == '6'		4242681	0		==			
ANR	4242954	ArrayIndexing	input [ 1 ]		4242681	0					
ANR	4242955	Identifier	input		4242681	0					
ANR	4242956	PrimaryExpression	1		4242681	1					
ANR	4242957	PrimaryExpression	'6'		4242681	1					
ANR	4242958	EqualityExpression	input [ 2 ] == '4'		4242681	1		==			
ANR	4242959	ArrayIndexing	input [ 2 ]		4242681	0					
ANR	4242960	Identifier	input		4242681	0					
ANR	4242961	PrimaryExpression	2		4242681	1					
ANR	4242962	PrimaryExpression	'4'		4242681	1					
ANR	4242963	CompoundStatement		52:3:1112:1153	4242681	1					
ANR	4242964	IdentifierDeclStatement	const int buflen = ( strlen ( input + 3 ) * 4 ) + 1 ;	436:3:14598:14643	4242681	0	True				
ANR	4242965	IdentifierDecl	buflen = ( strlen ( input + 3 ) * 4 ) + 1		4242681	0					
ANR	4242966	IdentifierDeclType	const int		4242681	0					
ANR	4242967	Identifier	buflen		4242681	1					
ANR	4242968	AssignmentExpression	buflen = ( strlen ( input + 3 ) * 4 ) + 1		4242681	2		=			
ANR	4242969	Identifier	buflen		4242681	0					
ANR	4242970	AdditiveExpression	( strlen ( input + 3 ) * 4 ) + 1		4242681	1		+			
ANR	4242971	MultiplicativeExpression	strlen ( input + 3 ) * 4		4242681	0		*			
ANR	4242972	CallExpression	strlen ( input + 3 )		4242681	0					
ANR	4242973	Callee	strlen		4242681	0					
ANR	4242974	Identifier	strlen		4242681	0					
ANR	4242975	ArgumentList	input + 3		4242681	1					
ANR	4242976	Argument	input + 3		4242681	0					
ANR	4242977	AdditiveExpression	input + 3		4242681	0		+			
ANR	4242978	Identifier	input		4242681	0					
ANR	4242979	PrimaryExpression	3		4242681	1					
ANR	4242980	PrimaryExpression	4		4242681	1					
ANR	4242981	PrimaryExpression	1		4242681	1					
ANR	4242982	IdentifierDeclStatement	"char * buf = calloc ( buflen , sizeof ( char ) ) ;"	437:3:14648:14689	4242681	1	True				
ANR	4242983	IdentifierDecl	"* buf = calloc ( buflen , sizeof ( char ) )"		4242681	0					
ANR	4242984	IdentifierDeclType	char *		4242681	0					
ANR	4242985	Identifier	buf		4242681	1					
ANR	4242986	AssignmentExpression	"* buf = calloc ( buflen , sizeof ( char ) )"		4242681	2		=			
ANR	4242987	Identifier	buf		4242681	0					
ANR	4242988	CallExpression	"calloc ( buflen , sizeof ( char ) )"		4242681	1					
ANR	4242989	Callee	calloc		4242681	0					
ANR	4242990	Identifier	calloc		4242681	0					
ANR	4242991	ArgumentList	buflen		4242681	1					
ANR	4242992	Argument	buflen		4242681	0					
ANR	4242993	Identifier	buflen		4242681	0					
ANR	4242994	Argument	sizeof ( char )		4242681	1					
ANR	4242995	SizeofExpression	sizeof ( char )		4242681	0					
ANR	4242996	Sizeof	sizeof		4242681	0					
ANR	4242997	SizeofOperand	char		4242681	1					
ANR	4242998	IfStatement	if ( ! buf )		4242681	2					
ANR	4242999	Condition	! buf	438:7:14698:14701	4242681	0	True				
ANR	4243000	UnaryOperationExpression	! buf		4242681	0					
ANR	4243001	UnaryOperator	!		4242681	0					
ANR	4243002	Identifier	buf		4242681	1					
ANR	4243003	CompoundStatement		53:13:1168:1168	4242681	1					
ANR	4243004	ReturnStatement	return false ;	439:4:14710:14722	4242681	0	True				
ANR	4243005	Identifier	false		4242681	0					
ANR	4243006	IfStatement	if ( input [ 3 ] == '-' )		4242681	3					
ANR	4243007	Condition	input [ 3 ] == '-'	441:7:14736:14750	4242681	0	True				
ANR	4243008	EqualityExpression	input [ 3 ] == '-'		4242681	0		==			
ANR	4243009	ArrayIndexing	input [ 3 ]		4242681	0					
ANR	4243010	Identifier	input		4242681	0					
ANR	4243011	PrimaryExpression	3		4242681	1					
ANR	4243012	PrimaryExpression	'-'		4242681	1					
ANR	4243013	CompoundStatement		56:24:1217:1217	4242681	1					
ANR	4243014	ExpressionStatement	"r_base64_decode ( ( ut8 * ) buf , input + 4 , - 1 )"	442:4:14759:14801	4242681	0	True				
ANR	4243015	CallExpression	"r_base64_decode ( ( ut8 * ) buf , input + 4 , - 1 )"		4242681	0					
ANR	4243016	Callee	r_base64_decode		4242681	0					
ANR	4243017	Identifier	r_base64_decode		4242681	0					
ANR	4243018	ArgumentList	( ut8 * ) buf		4242681	1					
ANR	4243019	Argument	( ut8 * ) buf		4242681	0					
ANR	4243020	CastExpression	( ut8 * ) buf		4242681	0					
ANR	4243021	CastTarget	ut8 *		4242681	0					
ANR	4243022	Identifier	buf		4242681	1					
ANR	4243023	Argument	input + 4		4242681	1					
ANR	4243024	AdditiveExpression	input + 4		4242681	0		+			
ANR	4243025	Identifier	input		4242681	0					
ANR	4243026	PrimaryExpression	4		4242681	1					
ANR	4243027	Argument	- 1		4242681	2					
ANR	4243028	UnaryOperationExpression	- 1		4242681	0					
ANR	4243029	UnaryOperator	-		4242681	0					
ANR	4243030	PrimaryExpression	1		4242681	1					
ANR	4243031	ElseStatement	else		4242681	0					
ANR	4243032	IfStatement	if ( input [ 3 ] == ' ' )		4242681	0					
ANR	4243033	Condition	input [ 3 ] == ' '	443:14:14817:14831	4242681	0	True				
ANR	4243034	EqualityExpression	input [ 3 ] == ' '		4242681	0		==			
ANR	4243035	ArrayIndexing	input [ 3 ]		4242681	0					
ANR	4243036	Identifier	input		4242681	0					
ANR	4243037	PrimaryExpression	3		4242681	1					
ANR	4243038	PrimaryExpression	' '		4242681	1					
ANR	4243039	CompoundStatement		58:31:1298:1298	4242681	1					
ANR	4243040	ExpressionStatement	"r_base64_encode ( buf , ( const ut8 * ) input + 4 , - 1 )"	444:4:14840:14888	4242681	0	True				
ANR	4243041	CallExpression	"r_base64_encode ( buf , ( const ut8 * ) input + 4 , - 1 )"		4242681	0					
ANR	4243042	Callee	r_base64_encode		4242681	0					
ANR	4243043	Identifier	r_base64_encode		4242681	0					
ANR	4243044	ArgumentList	buf		4242681	1					
ANR	4243045	Argument	buf		4242681	0					
ANR	4243046	Identifier	buf		4242681	0					
ANR	4243047	Argument	( const ut8 * ) input + 4		4242681	1					
ANR	4243048	AdditiveExpression	( const ut8 * ) input + 4		4242681	0		+			
ANR	4243049	CastExpression	( const ut8 * ) input		4242681	0					
ANR	4243050	CastTarget	const ut8 *		4242681	0					
ANR	4243051	Identifier	input		4242681	1					
ANR	4243052	PrimaryExpression	4		4242681	1					
ANR	4243053	Argument	- 1		4242681	2					
ANR	4243054	UnaryOperationExpression	- 1		4242681	0					
ANR	4243055	UnaryOperator	-		4242681	0					
ANR	4243056	PrimaryExpression	1		4242681	1					
ANR	4243057	ExpressionStatement	r_cons_println ( buf )	446:3:14898:14918	4242681	4	True				
ANR	4243058	CallExpression	r_cons_println ( buf )		4242681	0					
ANR	4243059	Callee	r_cons_println		4242681	0					
ANR	4243060	Identifier	r_cons_println		4242681	0					
ANR	4243061	ArgumentList	buf		4242681	1					
ANR	4243062	Argument	buf		4242681	0					
ANR	4243063	Identifier	buf		4242681	0					
ANR	4243064	ExpressionStatement	free ( buf )	447:3:14923:14933	4242681	5	True				
ANR	4243065	CallExpression	free ( buf )		4242681	0					
ANR	4243066	Callee	free		4242681	0					
ANR	4243067	Identifier	free		4242681	0					
ANR	4243068	ArgumentList	buf		4242681	1					
ANR	4243069	Argument	buf		4242681	0					
ANR	4243070	Identifier	buf		4242681	0					
ANR	4243071	ElseStatement	else		4242681	0					
ANR	4243072	IfStatement	if ( input [ 1 ] == 't' && input [ 2 ] == 'w' )		4242681	0					
ANR	4243073	Condition	input [ 1 ] == 't' && input [ 2 ] == 'w'	448:13:14948:14981	4242681	0	True				
ANR	4243074	AndExpression	input [ 1 ] == 't' && input [ 2 ] == 'w'		4242681	0		&&			
ANR	4243075	EqualityExpression	input [ 1 ] == 't'		4242681	0		==			
ANR	4243076	ArrayIndexing	input [ 1 ]		4242681	0					
ANR	4243077	Identifier	input		4242681	0					
ANR	4243078	PrimaryExpression	1		4242681	1					
ANR	4243079	PrimaryExpression	't'		4242681	1					
ANR	4243080	EqualityExpression	input [ 2 ] == 'w'		4242681	1		==			
ANR	4243081	ArrayIndexing	input [ 2 ]		4242681	0					
ANR	4243082	Identifier	input		4242681	0					
ANR	4243083	PrimaryExpression	2		4242681	1					
ANR	4243084	PrimaryExpression	'w'		4242681	1					
ANR	4243085	CompoundStatement		63:49:1448:1448	4242681	1					
ANR	4243086	IfStatement	"if ( r_num_between ( core -> num , input + 3 ) == - 1 )"		4242681	0					
ANR	4243087	Condition	"r_num_between ( core -> num , input + 3 ) == - 1"	449:7:15003:15044	4242681	0	True				
ANR	4243088	EqualityExpression	"r_num_between ( core -> num , input + 3 ) == - 1"		4242681	0		==			
ANR	4243089	CallExpression	"r_num_between ( core -> num , input + 3 )"		4242681	0					
ANR	4243090	Callee	r_num_between		4242681	0					
ANR	4243091	Identifier	r_num_between		4242681	0					
ANR	4243092	ArgumentList	core -> num		4242681	1					
ANR	4243093	Argument	core -> num		4242681	0					
ANR	4243094	PtrMemberAccess	core -> num		4242681	0					
ANR	4243095	Identifier	core		4242681	0					
ANR	4243096	Identifier	num		4242681	1					
ANR	4243097	Argument	input + 3		4242681	1					
ANR	4243098	AdditiveExpression	input + 3		4242681	0		+			
ANR	4243099	Identifier	input		4242681	0					
ANR	4243100	PrimaryExpression	3		4242681	1					
ANR	4243101	UnaryOperationExpression	- 1		4242681	1					
ANR	4243102	UnaryOperator	-		4242681	0					
ANR	4243103	PrimaryExpression	1		4242681	1					
ANR	4243104	CompoundStatement		64:51:1511:1511	4242681	1					
ANR	4243105	ExpressionStatement	"eprintf ( ""Usage: ?btw num|(expr) num|(expr) num|(expr)\\n"" )"	450:4:15053:15111	4242681	0	True				
ANR	4243106	CallExpression	"eprintf ( ""Usage: ?btw num|(expr) num|(expr) num|(expr)\\n"" )"		4242681	0					
ANR	4243107	Callee	eprintf		4242681	0					
ANR	4243108	Identifier	eprintf		4242681	0					
ANR	4243109	ArgumentList	"""Usage: ?btw num|(expr) num|(expr) num|(expr)\\n"""		4242681	1					
ANR	4243110	Argument	"""Usage: ?btw num|(expr) num|(expr) num|(expr)\\n"""		4242681	0					
ANR	4243111	PrimaryExpression	"""Usage: ?btw num|(expr) num|(expr) num|(expr)\\n"""		4242681	0					
ANR	4243112	ElseStatement	else		4242681	0					
ANR	4243113	CompoundStatement		67:9:1591:1591	4242681	0					
ANR	4243114	ExpressionStatement	"n = r_num_get ( core -> num , input + 1 )"	453:3:15132:15166	4242681	0	True				
ANR	4243115	AssignmentExpression	"n = r_num_get ( core -> num , input + 1 )"		4242681	0		=			
ANR	4243116	Identifier	n		4242681	0					
ANR	4243117	CallExpression	"r_num_get ( core -> num , input + 1 )"		4242681	1					
ANR	4243118	Callee	r_num_get		4242681	0					
ANR	4243119	Identifier	r_num_get		4242681	0					
ANR	4243120	ArgumentList	core -> num		4242681	1					
ANR	4243121	Argument	core -> num		4242681	0					
ANR	4243122	PtrMemberAccess	core -> num		4242681	0					
ANR	4243123	Identifier	core		4242681	0					
ANR	4243124	Identifier	num		4242681	1					
ANR	4243125	Argument	input + 1		4242681	1					
ANR	4243126	AdditiveExpression	input + 1		4242681	0		+			
ANR	4243127	Identifier	input		4242681	0					
ANR	4243128	PrimaryExpression	1		4242681	1					
ANR	4243129	ExpressionStatement	"r_num_to_bits ( out , n )"	454:3:15171:15193	4242681	1	True				
ANR	4243130	CallExpression	"r_num_to_bits ( out , n )"		4242681	0					
ANR	4243131	Callee	r_num_to_bits		4242681	0					
ANR	4243132	Identifier	r_num_to_bits		4242681	0					
ANR	4243133	ArgumentList	out		4242681	1					
ANR	4243134	Argument	out		4242681	0					
ANR	4243135	Identifier	out		4242681	0					
ANR	4243136	Argument	n		4242681	1					
ANR	4243137	Identifier	n		4242681	0					
ANR	4243138	ExpressionStatement	"r_cons_printf ( ""%sb\\n"" , out )"	455:3:15198:15226	4242681	2	True				
ANR	4243139	CallExpression	"r_cons_printf ( ""%sb\\n"" , out )"		4242681	0					
ANR	4243140	Callee	r_cons_printf		4242681	0					
ANR	4243141	Identifier	r_cons_printf		4242681	0					
ANR	4243142	ArgumentList	"""%sb\\n"""		4242681	1					
ANR	4243143	Argument	"""%sb\\n"""		4242681	0					
ANR	4243144	PrimaryExpression	"""%sb\\n"""		4242681	0					
ANR	4243145	Argument	out		4242681	1					
ANR	4243146	Identifier	out		4242681	0					
ANR	4243147	BreakStatement	break ;	457:2:15234:15239	4242681	15	True				
ANR	4243148	Label	case 'B' :	458:1:15242:15250	4242681	16	True				
ANR	4243149	ExpressionStatement	k = r_str_trim_ro ( input + 1 )	459:2:15262:15291	4242681	17	True				
ANR	4243150	AssignmentExpression	k = r_str_trim_ro ( input + 1 )		4242681	0		=			
ANR	4243151	Identifier	k		4242681	0					
ANR	4243152	CallExpression	r_str_trim_ro ( input + 1 )		4242681	1					
ANR	4243153	Callee	r_str_trim_ro		4242681	0					
ANR	4243154	Identifier	r_str_trim_ro		4242681	0					
ANR	4243155	ArgumentList	input + 1		4242681	1					
ANR	4243156	Argument	input + 1		4242681	0					
ANR	4243157	AdditiveExpression	input + 1		4242681	0		+			
ANR	4243158	Identifier	input		4242681	0					
ANR	4243159	PrimaryExpression	1		4242681	1					
ANR	4243160	ExpressionStatement	"tmp = r_core_get_boundaries_prot ( core , - 1 , k , ""search"" )"	460:2:15295:15351	4242681	18	True				
ANR	4243161	AssignmentExpression	"tmp = r_core_get_boundaries_prot ( core , - 1 , k , ""search"" )"		4242681	0		=			
ANR	4243162	Identifier	tmp		4242681	0					
ANR	4243163	CallExpression	"r_core_get_boundaries_prot ( core , - 1 , k , ""search"" )"		4242681	1					
ANR	4243164	Callee	r_core_get_boundaries_prot		4242681	0					
ANR	4243165	Identifier	r_core_get_boundaries_prot		4242681	0					
ANR	4243166	ArgumentList	core		4242681	1					
ANR	4243167	Argument	core		4242681	0					
ANR	4243168	Identifier	core		4242681	0					
ANR	4243169	Argument	- 1		4242681	1					
ANR	4243170	UnaryOperationExpression	- 1		4242681	0					
ANR	4243171	UnaryOperator	-		4242681	0					
ANR	4243172	PrimaryExpression	1		4242681	1					
ANR	4243173	Argument	k		4242681	2					
ANR	4243174	Identifier	k		4242681	0					
ANR	4243175	Argument	"""search"""		4242681	3					
ANR	4243176	PrimaryExpression	"""search"""		4242681	0					
ANR	4243177	IfStatement	if ( ! tmp )		4242681	19					
ANR	4243178	Condition	! tmp	461:6:15359:15362	4242681	0	True				
ANR	4243179	UnaryOperationExpression	! tmp		4242681	0					
ANR	4243180	UnaryOperator	!		4242681	0					
ANR	4243181	Identifier	tmp		4242681	1					
ANR	4243182	CompoundStatement		76:12:1829:1829	4242681	1					
ANR	4243183	ReturnStatement	return false ;	462:3:15370:15382	4242681	0	True				
ANR	4243184	Identifier	false		4242681	0					
ANR	4243185	Statement	r_list_foreach	464:2:15390:15403	4242681	20	True				
ANR	4243186	Statement	(	464:17:15405:15405	4242681	21	True				
ANR	4243187	Statement	tmp	464:18:15406:15408	4242681	22	True				
ANR	4243188	Statement	","	464:21:15409:15409	4242681	23	True				
ANR	4243189	Statement	iter	464:23:15411:15414	4242681	24	True				
ANR	4243190	Statement	","	464:27:15415:15415	4242681	25	True				
ANR	4243191	Statement	map	464:29:15417:15419	4242681	26	True				
ANR	4243192	Statement	)	464:32:15420:15420	4242681	27	True				
ANR	4243193	CompoundStatement		79:34:1886:1886	4242681	28					
ANR	4243194	Statement	r_cons_printf	465:3:15427:15439	4242681	0	True				
ANR	4243195	Statement	(	465:17:15441:15441	4242681	1	True				
ANR	4243196	Statement	"""0x%"""	465:18:15442:15446	4242681	2	True				
ANR	4243197	Statement	PFMT64x	465:23:15447:15453	4242681	3	True				
ANR	4243198	Statement	""" 0x%"""	465:30:15454:15459	4242681	4	True				
ANR	4243199	Statement	PFMT64x	465:36:15460:15466	4242681	5	True				
ANR	4243200	Statement	"""\\n"""	465:43:15467:15470	4242681	6	True				
ANR	4243201	Statement	","	465:47:15471:15471	4242681	7	True				
ANR	4243202	Statement	map	465:49:15473:15475	4242681	8	True				
ANR	4243203	Statement	->	465:52:15476:15477	4242681	9	True				
ANR	4243204	Statement	itv	465:54:15478:15480	4242681	10	True				
ANR	4243205	Statement	.	465:57:15481:15481	4242681	11	True				
ANR	4243206	Statement	addr	465:58:15482:15485	4242681	12	True				
ANR	4243207	Statement	","	465:62:15486:15486	4242681	13	True				
ANR	4243208	Statement	r_itv_end	465:64:15488:15496	4242681	14	True				
ANR	4243209	Statement	(	465:74:15498:15498	4242681	15	True				
ANR	4243210	Statement	map	465:75:15499:15501	4242681	16	True				
ANR	4243211	Statement	->	465:78:15502:15503	4242681	17	True				
ANR	4243212	Statement	itv	465:80:15504:15506	4242681	18	True				
ANR	4243213	Statement	)	465:83:15507:15507	4242681	19	True				
ANR	4243214	Statement	)	465:84:15508:15508	4242681	20	True				
ANR	4243215	ExpressionStatement		465:85:15509:15509	4242681	21	True				
ANR	4243216	ExpressionStatement	r_list_free ( tmp )	467:2:15517:15534	4242681	29	True				
ANR	4243217	CallExpression	r_list_free ( tmp )		4242681	0					
ANR	4243218	Callee	r_list_free		4242681	0					
ANR	4243219	Identifier	r_list_free		4242681	0					
ANR	4243220	ArgumentList	tmp		4242681	1					
ANR	4243221	Argument	tmp		4242681	0					
ANR	4243222	Identifier	tmp		4242681	0					
ANR	4243223	BreakStatement	break ;	468:2:15538:15543	4242681	30	True				
ANR	4243224	Label	case 'h' :	469:1:15546:15554	4242681	31	True				
ANR	4243225	IfStatement	if ( input [ 1 ] == ' ' )		4242681	32					
ANR	4243226	Condition	input [ 1 ] == ' '	470:6:15570:15584	4242681	0	True				
ANR	4243227	EqualityExpression	input [ 1 ] == ' '		4242681	0		==			
ANR	4243228	ArrayIndexing	input [ 1 ]		4242681	0					
ANR	4243229	Identifier	input		4242681	0					
ANR	4243230	PrimaryExpression	1		4242681	1					
ANR	4243231	PrimaryExpression	' '		4242681	1					
ANR	4243232	CompoundStatement		85:23:2051:2051	4242681	1					
ANR	4243233	ExpressionStatement	"r_cons_printf ( ""0x%08x\\n"" , ( ut32 ) r_str_hash ( input + 2 ) )"	471:3:15592:15648	4242681	0	True				
ANR	4243234	CallExpression	"r_cons_printf ( ""0x%08x\\n"" , ( ut32 ) r_str_hash ( input + 2 ) )"		4242681	0					
ANR	4243235	Callee	r_cons_printf		4242681	0					
ANR	4243236	Identifier	r_cons_printf		4242681	0					
ANR	4243237	ArgumentList	"""0x%08x\\n"""		4242681	1					
ANR	4243238	Argument	"""0x%08x\\n"""		4242681	0					
ANR	4243239	PrimaryExpression	"""0x%08x\\n"""		4242681	0					
ANR	4243240	Argument	( ut32 ) r_str_hash ( input + 2 )		4242681	1					
ANR	4243241	CastExpression	( ut32 ) r_str_hash ( input + 2 )		4242681	0					
ANR	4243242	CastTarget	ut32		4242681	0					
ANR	4243243	CallExpression	r_str_hash ( input + 2 )		4242681	1					
ANR	4243244	Callee	r_str_hash		4242681	0					
ANR	4243245	Identifier	r_str_hash		4242681	0					
ANR	4243246	ArgumentList	input + 2		4242681	1					
ANR	4243247	Argument	input + 2		4242681	0					
ANR	4243248	AdditiveExpression	input + 2		4242681	0		+			
ANR	4243249	Identifier	input		4242681	0					
ANR	4243250	PrimaryExpression	2		4242681	1					
ANR	4243251	ElseStatement	else		4242681	0					
ANR	4243252	CompoundStatement		87:9:2123:2123	4242681	0					
ANR	4243253	ExpressionStatement	"eprintf ( ""Usage: ?h [string-to-hash]\\n"" )"	473:3:15664:15704	4242681	0	True				
ANR	4243254	CallExpression	"eprintf ( ""Usage: ?h [string-to-hash]\\n"" )"		4242681	0					
ANR	4243255	Callee	eprintf		4242681	0					
ANR	4243256	Identifier	eprintf		4242681	0					
ANR	4243257	ArgumentList	"""Usage: ?h [string-to-hash]\\n"""		4242681	1					
ANR	4243258	Argument	"""Usage: ?h [string-to-hash]\\n"""		4242681	0					
ANR	4243259	PrimaryExpression	"""Usage: ?h [string-to-hash]\\n"""		4242681	0					
ANR	4243260	BreakStatement	break ;	475:2:15712:15717	4242681	33	True				
ANR	4243261	Label	case 'F' :	476:1:15720:15728	4242681	34	True				
ANR	4243262	ExpressionStatement	r_cons_flush ( )	477:2:15740:15755	4242681	35	True				
ANR	4243263	CallExpression	r_cons_flush ( )		4242681	0					
ANR	4243264	Callee	r_cons_flush		4242681	0					
ANR	4243265	Identifier	r_cons_flush		4242681	0					
ANR	4243266	ArgumentList			4242681	1					
ANR	4243267	BreakStatement	break ;	478:2:15759:15764	4242681	36	True				
ANR	4243268	Label	case 'f' :	479:1:15767:15775	4242681	37	True				
ANR	4243269	IfStatement	if ( input [ 1 ] == ' ' )		4242681	38					
ANR	4243270	Condition	input [ 1 ] == ' '	480:6:15791:15805	4242681	0	True				
ANR	4243271	EqualityExpression	input [ 1 ] == ' '		4242681	0		==			
ANR	4243272	ArrayIndexing	input [ 1 ]		4242681	0					
ANR	4243273	Identifier	input		4242681	0					
ANR	4243274	PrimaryExpression	1		4242681	1					
ANR	4243275	PrimaryExpression	' '		4242681	1					
ANR	4243276	CompoundStatement		96:3:2277:2309	4242681	1					
ANR	4243277	IdentifierDeclStatement	"char * q , * p = strdup ( input + 2 ) ;"	481:3:15813:15845	4242681	0	True				
ANR	4243278	IdentifierDecl	* q		4242681	0					
ANR	4243279	IdentifierDeclType	char *		4242681	0					
ANR	4243280	Identifier	q		4242681	1					
ANR	4243281	IdentifierDecl	* p = strdup ( input + 2 )		4242681	1					
ANR	4243282	IdentifierDeclType	char *		4242681	0					
ANR	4243283	Identifier	p		4242681	1					
ANR	4243284	AssignmentExpression	* p = strdup ( input + 2 )		4242681	2		=			
ANR	4243285	Identifier	p		4242681	0					
ANR	4243286	CallExpression	strdup ( input + 2 )		4242681	1					
ANR	4243287	Callee	strdup		4242681	0					
ANR	4243288	Identifier	strdup		4242681	0					
ANR	4243289	ArgumentList	input + 2		4242681	1					
ANR	4243290	Argument	input + 2		4242681	0					
ANR	4243291	AdditiveExpression	input + 2		4242681	0		+			
ANR	4243292	Identifier	input		4242681	0					
ANR	4243293	PrimaryExpression	2		4242681	1					
ANR	4243294	IfStatement	if ( ! p )		4242681	1					
ANR	4243295	Condition	! p	482:7:15854:15855	4242681	0	True				
ANR	4243296	UnaryOperationExpression	! p		4242681	0					
ANR	4243297	UnaryOperator	!		4242681	0					
ANR	4243298	Identifier	p		4242681	1					
ANR	4243299	CompoundStatement		97:11:2322:2322	4242681	1					
ANR	4243300	ExpressionStatement	"eprintf ( ""Cannot strdup\\n"" )"	483:4:15864:15891	4242681	0	True				
ANR	4243301	CallExpression	"eprintf ( ""Cannot strdup\\n"" )"		4242681	0					
ANR	4243302	Callee	eprintf		4242681	0					
ANR	4243303	Identifier	eprintf		4242681	0					
ANR	4243304	ArgumentList	"""Cannot strdup\\n"""		4242681	1					
ANR	4243305	Argument	"""Cannot strdup\\n"""		4242681	0					
ANR	4243306	PrimaryExpression	"""Cannot strdup\\n"""		4242681	0					
ANR	4243307	ReturnStatement	return 0 ;	484:4:15897:15905	4242681	1	True				
ANR	4243308	PrimaryExpression	0		4242681	0					
ANR	4243309	ExpressionStatement	"q = strchr ( p , ' ' )"	486:3:15915:15934	4242681	2	True				
ANR	4243310	AssignmentExpression	"q = strchr ( p , ' ' )"		4242681	0		=			
ANR	4243311	Identifier	q		4242681	0					
ANR	4243312	CallExpression	"strchr ( p , ' ' )"		4242681	1					
ANR	4243313	Callee	strchr		4242681	0					
ANR	4243314	Identifier	strchr		4242681	0					
ANR	4243315	ArgumentList	p		4242681	1					
ANR	4243316	Argument	p		4242681	0					
ANR	4243317	Identifier	p		4242681	0					
ANR	4243318	Argument	' '		4242681	1					
ANR	4243319	PrimaryExpression	' '		4242681	0					
ANR	4243320	IfStatement	if ( q )		4242681	3					
ANR	4243321	Condition	q	487:7:15943:15943	4242681	0	True				
ANR	4243322	Identifier	q		4242681	0					
ANR	4243323	CompoundStatement		102:10:2410:2410	4242681	1					
ANR	4243324	ExpressionStatement	* q = 0	488:4:15952:15958	4242681	0	True				
ANR	4243325	AssignmentExpression	* q = 0		4242681	0		=			
ANR	4243326	UnaryOperationExpression	* q		4242681	0					
ANR	4243327	UnaryOperator	*		4242681	0					
ANR	4243328	Identifier	q		4242681	1					
ANR	4243329	PrimaryExpression	0		4242681	1					
ANR	4243330	ExpressionStatement	"n = r_num_get ( core -> num , p )"	489:4:15964:15992	4242681	1	True				
ANR	4243331	AssignmentExpression	"n = r_num_get ( core -> num , p )"		4242681	0		=			
ANR	4243332	Identifier	n		4242681	0					
ANR	4243333	CallExpression	"r_num_get ( core -> num , p )"		4242681	1					
ANR	4243334	Callee	r_num_get		4242681	0					
ANR	4243335	Identifier	r_num_get		4242681	0					
ANR	4243336	ArgumentList	core -> num		4242681	1					
ANR	4243337	Argument	core -> num		4242681	0					
ANR	4243338	PtrMemberAccess	core -> num		4242681	0					
ANR	4243339	Identifier	core		4242681	0					
ANR	4243340	Identifier	num		4242681	1					
ANR	4243341	Argument	p		4242681	1					
ANR	4243342	Identifier	p		4242681	0					
ANR	4243343	ExpressionStatement	"r_str_bits ( out , ( const ut8 * ) & n , sizeof ( n ) * 8 , q + 1 )"	490:4:15998:16053	4242681	2	True				
ANR	4243344	CallExpression	"r_str_bits ( out , ( const ut8 * ) & n , sizeof ( n ) * 8 , q + 1 )"		4242681	0					
ANR	4243345	Callee	r_str_bits		4242681	0					
ANR	4243346	Identifier	r_str_bits		4242681	0					
ANR	4243347	ArgumentList	out		4242681	1					
ANR	4243348	Argument	out		4242681	0					
ANR	4243349	Identifier	out		4242681	0					
ANR	4243350	Argument	( const ut8 * ) & n		4242681	1					
ANR	4243351	CastExpression	( const ut8 * ) & n		4242681	0					
ANR	4243352	CastTarget	const ut8 *		4242681	0					
ANR	4243353	UnaryOperationExpression	& n		4242681	1					
ANR	4243354	UnaryOperator	&		4242681	0					
ANR	4243355	Identifier	n		4242681	1					
ANR	4243356	Argument	sizeof ( n ) * 8		4242681	2					
ANR	4243357	MultiplicativeExpression	sizeof ( n ) * 8		4242681	0		*			
ANR	4243358	SizeofExpression	sizeof ( n )		4242681	0					
ANR	4243359	Sizeof	sizeof		4242681	0					
ANR	4243360	SizeofOperand	n		4242681	1					
ANR	4243361	PrimaryExpression	8		4242681	1					
ANR	4243362	Argument	q + 1		4242681	3					
ANR	4243363	AdditiveExpression	q + 1		4242681	0		+			
ANR	4243364	Identifier	q		4242681	0					
ANR	4243365	PrimaryExpression	1		4242681	1					
ANR	4243366	ExpressionStatement	r_cons_println ( out )	491:4:16059:16079	4242681	3	True				
ANR	4243367	CallExpression	r_cons_println ( out )		4242681	0					
ANR	4243368	Callee	r_cons_println		4242681	0					
ANR	4243369	Identifier	r_cons_println		4242681	0					
ANR	4243370	ArgumentList	out		4242681	1					
ANR	4243371	Argument	out		4242681	0					
ANR	4243372	Identifier	out		4242681	0					
ANR	4243373	ElseStatement	else		4242681	0					
ANR	4243374	CompoundStatement		107:10:2555:2555	4242681	0					
ANR	4243375	ExpressionStatement	"eprintf ( ""Usage: \\""?b value bitstring\\""\\n"" )"	493:4:16097:16140	4242681	0	True				
ANR	4243376	CallExpression	"eprintf ( ""Usage: \\""?b value bitstring\\""\\n"" )"		4242681	0					
ANR	4243377	Callee	eprintf		4242681	0					
ANR	4243378	Identifier	eprintf		4242681	0					
ANR	4243379	ArgumentList	"""Usage: \\""?b value bitstring\\""\\n"""		4242681	1					
ANR	4243380	Argument	"""Usage: \\""?b value bitstring\\""\\n"""		4242681	0					
ANR	4243381	PrimaryExpression	"""Usage: \\""?b value bitstring\\""\\n"""		4242681	0					
ANR	4243382	ExpressionStatement	free ( p )	495:3:16150:16158	4242681	4	True				
ANR	4243383	CallExpression	free ( p )		4242681	0					
ANR	4243384	Callee	free		4242681	0					
ANR	4243385	Identifier	free		4242681	0					
ANR	4243386	ArgumentList	p		4242681	1					
ANR	4243387	Argument	p		4242681	0					
ANR	4243388	Identifier	p		4242681	0					
ANR	4243389	ElseStatement	else		4242681	0					
ANR	4243390	CompoundStatement		111:9:2633:2633	4242681	0					
ANR	4243391	ExpressionStatement	"eprintf ( ""Whitespace expected after '?f'\\n"" )"	497:3:16174:16218	4242681	0	True				
ANR	4243392	CallExpression	"eprintf ( ""Whitespace expected after '?f'\\n"" )"		4242681	0					
ANR	4243393	Callee	eprintf		4242681	0					
ANR	4243394	Identifier	eprintf		4242681	0					
ANR	4243395	ArgumentList	"""Whitespace expected after '?f'\\n"""		4242681	1					
ANR	4243396	Argument	"""Whitespace expected after '?f'\\n"""		4242681	0					
ANR	4243397	PrimaryExpression	"""Whitespace expected after '?f'\\n"""		4242681	0					
ANR	4243398	BreakStatement	break ;	499:2:16226:16231	4242681	39	True				
ANR	4243399	Label	case 'o' :	500:1:16234:16242	4242681	40	True				
ANR	4243400	ExpressionStatement	"n = r_num_math ( core -> num , input + 1 )"	501:2:16254:16289	4242681	41	True				
ANR	4243401	AssignmentExpression	"n = r_num_math ( core -> num , input + 1 )"		4242681	0		=			
ANR	4243402	Identifier	n		4242681	0					
ANR	4243403	CallExpression	"r_num_math ( core -> num , input + 1 )"		4242681	1					
ANR	4243404	Callee	r_num_math		4242681	0					
ANR	4243405	Identifier	r_num_math		4242681	0					
ANR	4243406	ArgumentList	core -> num		4242681	1					
ANR	4243407	Argument	core -> num		4242681	0					
ANR	4243408	PtrMemberAccess	core -> num		4242681	0					
ANR	4243409	Identifier	core		4242681	0					
ANR	4243410	Identifier	num		4242681	1					
ANR	4243411	Argument	input + 1		4242681	1					
ANR	4243412	AdditiveExpression	input + 1		4242681	0		+			
ANR	4243413	Identifier	input		4242681	0					
ANR	4243414	PrimaryExpression	1		4242681	1					
ANR	4243415	Statement	r_cons_printf	502:2:16293:16305	4242681	42	True				
ANR	4243416	Statement	(	502:16:16307:16307	4242681	43	True				
ANR	4243417	Statement	"""0%"""	502:17:16308:16311	4242681	44	True				
ANR	4243418	Statement	PFMT64o	502:21:16312:16318	4242681	45	True				
ANR	4243419	Statement	"""\\n"""	502:28:16319:16322	4242681	46	True				
ANR	4243420	Statement	","	502:32:16323:16323	4242681	47	True				
ANR	4243421	Statement	n	502:34:16325:16325	4242681	48	True				
ANR	4243422	Statement	)	502:35:16326:16326	4242681	49	True				
ANR	4243423	ExpressionStatement		502:36:16327:16327	4242681	50	True				
ANR	4243424	BreakStatement	break ;	503:2:16331:16336	4242681	51	True				
ANR	4243425	Label	case 'T' :	504:1:16339:16347	4242681	52	True				
ANR	4243426	Statement	r_cons_printf	505:2:16359:16371	4242681	53	True				
ANR	4243427	Statement	(	505:15:16372:16372	4242681	54	True				
ANR	4243428	Statement	"""plug.init = %"""	505:16:16373:16387	4242681	55	True				
ANR	4243429	Statement	PFMT64d	505:31:16388:16394	4242681	56	True				
ANR	4243430	Statement	"""\\n"""	505:38:16395:16398	4242681	57	True				
ANR	4243431	Statement	"""plug.load = %"""	506:3:16403:16417	4242681	58	True				
ANR	4243432	Statement	PFMT64d	506:18:16418:16424	4242681	59	True				
ANR	4243433	Statement	"""\\n"""	506:25:16425:16428	4242681	60	True				
ANR	4243434	Statement	"""file.load = %"""	507:3:16433:16447	4242681	61	True				
ANR	4243435	Statement	PFMT64d	507:18:16448:16454	4242681	62	True				
ANR	4243436	Statement	"""\\n"""	507:25:16455:16458	4242681	63	True				
ANR	4243437	Statement	","	507:29:16459:16459	4242681	64	True				
ANR	4243438	Statement	core	508:3:16464:16467	4242681	65	True				
ANR	4243439	Statement	->	508:7:16468:16469	4242681	66	True				
ANR	4243440	Statement	times	508:9:16470:16474	4242681	67	True				
ANR	4243441	Statement	->	508:14:16475:16476	4242681	68	True				
ANR	4243442	Statement	loadlibs_init_time	508:16:16477:16494	4242681	69	True				
ANR	4243443	Statement	","	508:34:16495:16495	4242681	70	True				
ANR	4243444	Statement	core	509:3:16500:16503	4242681	71	True				
ANR	4243445	Statement	->	509:7:16504:16505	4242681	72	True				
ANR	4243446	Statement	times	509:9:16506:16510	4242681	73	True				
ANR	4243447	Statement	->	509:14:16511:16512	4242681	74	True				
ANR	4243448	Statement	loadlibs_time	509:16:16513:16525	4242681	75	True				
ANR	4243449	Statement	","	509:29:16526:16526	4242681	76	True				
ANR	4243450	Statement	core	510:3:16531:16534	4242681	77	True				
ANR	4243451	Statement	->	510:7:16535:16536	4242681	78	True				
ANR	4243452	Statement	times	510:9:16537:16541	4242681	79	True				
ANR	4243453	Statement	->	510:14:16542:16543	4242681	80	True				
ANR	4243454	Statement	file_open_time	510:16:16544:16557	4242681	81	True				
ANR	4243455	Statement	)	510:30:16558:16558	4242681	82	True				
ANR	4243456	ExpressionStatement		510:31:16559:16559	4242681	83	True				
ANR	4243457	BreakStatement	break ;	511:2:16563:16568	4242681	84	True				
ANR	4243458	Label	case 'u' :	512:1:16571:16579	4242681	85	True				
ANR	4243459	CompoundStatement		129:3:3060:3072	4242681	86					
ANR	4243460	IdentifierDeclStatement	char unit [ 8 ] ;	514:3:16596:16608	4242681	0	True				
ANR	4243461	IdentifierDecl	unit [ 8 ]		4242681	0					
ANR	4243462	IdentifierDeclType	char [ 8 ]		4242681	0					
ANR	4243463	Identifier	unit		4242681	1					
ANR	4243464	PrimaryExpression	8		4242681	2					
ANR	4243465	ExpressionStatement	"n = r_num_math ( core -> num , input + 1 )"	515:3:16613:16648	4242681	1	True				
ANR	4243466	AssignmentExpression	"n = r_num_math ( core -> num , input + 1 )"		4242681	0		=			
ANR	4243467	Identifier	n		4242681	0					
ANR	4243468	CallExpression	"r_num_math ( core -> num , input + 1 )"		4242681	1					
ANR	4243469	Callee	r_num_math		4242681	0					
ANR	4243470	Identifier	r_num_math		4242681	0					
ANR	4243471	ArgumentList	core -> num		4242681	1					
ANR	4243472	Argument	core -> num		4242681	0					
ANR	4243473	PtrMemberAccess	core -> num		4242681	0					
ANR	4243474	Identifier	core		4242681	0					
ANR	4243475	Identifier	num		4242681	1					
ANR	4243476	Argument	input + 1		4242681	1					
ANR	4243477	AdditiveExpression	input + 1		4242681	0		+			
ANR	4243478	Identifier	input		4242681	0					
ANR	4243479	PrimaryExpression	1		4242681	1					
ANR	4243480	ExpressionStatement	"r_num_units ( unit , sizeof ( unit ) , n )"	516:3:16653:16689	4242681	2	True				
ANR	4243481	CallExpression	"r_num_units ( unit , sizeof ( unit ) , n )"		4242681	0					
ANR	4243482	Callee	r_num_units		4242681	0					
ANR	4243483	Identifier	r_num_units		4242681	0					
ANR	4243484	ArgumentList	unit		4242681	1					
ANR	4243485	Argument	unit		4242681	0					
ANR	4243486	Identifier	unit		4242681	0					
ANR	4243487	Argument	sizeof ( unit )		4242681	1					
ANR	4243488	SizeofExpression	sizeof ( unit )		4242681	0					
ANR	4243489	Sizeof	sizeof		4242681	0					
ANR	4243490	SizeofOperand	unit		4242681	1					
ANR	4243491	Argument	n		4242681	2					
ANR	4243492	Identifier	n		4242681	0					
ANR	4243493	ExpressionStatement	r_cons_println ( unit )	517:3:16694:16715	4242681	3	True				
ANR	4243494	CallExpression	r_cons_println ( unit )		4242681	0					
ANR	4243495	Callee	r_cons_println		4242681	0					
ANR	4243496	Identifier	r_cons_println		4242681	0					
ANR	4243497	ArgumentList	unit		4242681	1					
ANR	4243498	Argument	unit		4242681	0					
ANR	4243499	Identifier	unit		4242681	0					
ANR	4243500	BreakStatement	break ;	519:2:16723:16728	4242681	87	True				
ANR	4243501	Label	case 'j' :	520:1:16731:16739	4242681	88	True				
ANR	4243502	Label	case ' ' :	521:1:16750:16758	4242681	89	True				
ANR	4243503	CompoundStatement		145:3:3442:3455	4242681	90					
ANR	4243504	IdentifierDeclStatement	"char * asnum , unit [ 8 ] ;"	523:3:16775:16795	4242681	0	True				
ANR	4243505	IdentifierDecl	* asnum		4242681	0					
ANR	4243506	IdentifierDeclType	char *		4242681	0					
ANR	4243507	Identifier	asnum		4242681	1					
ANR	4243508	IdentifierDecl	unit [ 8 ]		4242681	1					
ANR	4243509	IdentifierDeclType	char [ 8 ]		4242681	0					
ANR	4243510	Identifier	unit		4242681	1					
ANR	4243511	PrimaryExpression	8		4242681	2					
ANR	4243512	IdentifierDeclStatement	"ut32 s , a ;"	524:3:16800:16809	4242681	1	True				
ANR	4243513	IdentifierDecl	s		4242681	0					
ANR	4243514	IdentifierDeclType	ut32		4242681	0					
ANR	4243515	Identifier	s		4242681	1					
ANR	4243516	IdentifierDecl	a		4242681	1					
ANR	4243517	IdentifierDeclType	ut32		4242681	0					
ANR	4243518	Identifier	a		4242681	1					
ANR	4243519	IdentifierDeclStatement	double d ;	525:3:16814:16822	4242681	2	True				
ANR	4243520	IdentifierDecl	d		4242681	0					
ANR	4243521	IdentifierDeclType	double		4242681	0					
ANR	4243522	Identifier	d		4242681	1					
ANR	4243523	IdentifierDeclStatement	float f ;	526:3:16827:16834	4242681	3	True				
ANR	4243524	IdentifierDecl	f		4242681	0					
ANR	4243525	IdentifierDeclType	float		4242681	0					
ANR	4243526	Identifier	f		4242681	1					
ANR	4243527	Statement	char	527:3:16839:16842	4242681	4	True				
ANR	4243528	Statement	*	527:8:16844:16844	4242681	5	True				
ANR	4243529	Statement	const	527:10:16846:16850	4242681	6	True				
ANR	4243530	ExpressionStatement	inputs = strdup ( input + 1 )	527:16:16852:16879	4242681	7	True				
ANR	4243531	AssignmentExpression	inputs = strdup ( input + 1 )		4242681	0		=			
ANR	4243532	Identifier	inputs		4242681	0					
ANR	4243533	CallExpression	strdup ( input + 1 )		4242681	1					
ANR	4243534	Callee	strdup		4242681	0					
ANR	4243535	Identifier	strdup		4242681	0					
ANR	4243536	ArgumentList	input + 1		4242681	1					
ANR	4243537	Argument	input + 1		4242681	0					
ANR	4243538	AdditiveExpression	input + 1		4242681	0		+			
ANR	4243539	Identifier	input		4242681	0					
ANR	4243540	PrimaryExpression	1		4242681	1					
ANR	4243541	IdentifierDeclStatement	RList * list = r_num_str_split_list ( inputs ) ;	528:3:16884:16927	4242681	8	True				
ANR	4243542	IdentifierDecl	* list = r_num_str_split_list ( inputs )		4242681	0					
ANR	4243543	IdentifierDeclType	RList *		4242681	0					
ANR	4243544	Identifier	list		4242681	1					
ANR	4243545	AssignmentExpression	* list = r_num_str_split_list ( inputs )		4242681	2		=			
ANR	4243546	Identifier	list		4242681	0					
ANR	4243547	CallExpression	r_num_str_split_list ( inputs )		4242681	1					
ANR	4243548	Callee	r_num_str_split_list		4242681	0					
ANR	4243549	Identifier	r_num_str_split_list		4242681	0					
ANR	4243550	ArgumentList	inputs		4242681	1					
ANR	4243551	Argument	inputs		4242681	0					
ANR	4243552	Identifier	inputs		4242681	0					
ANR	4243553	IdentifierDeclStatement	const int list_len = r_list_length ( list ) ;	529:3:16932:16973	4242681	9	True				
ANR	4243554	IdentifierDecl	list_len = r_list_length ( list )		4242681	0					
ANR	4243555	IdentifierDeclType	const int		4242681	0					
ANR	4243556	Identifier	list_len		4242681	1					
ANR	4243557	AssignmentExpression	list_len = r_list_length ( list )		4242681	2		=			
ANR	4243558	Identifier	list_len		4242681	0					
ANR	4243559	CallExpression	r_list_length ( list )		4242681	1					
ANR	4243560	Callee	r_list_length		4242681	0					
ANR	4243561	Identifier	r_list_length		4242681	0					
ANR	4243562	ArgumentList	list		4242681	1					
ANR	4243563	Argument	list		4242681	0					
ANR	4243564	Identifier	list		4242681	0					
ANR	4243565	IdentifierDeclStatement	PJ * pj = NULL ;	530:3:16978:16991	4242681	10	True				
ANR	4243566	IdentifierDecl	* pj = NULL		4242681	0					
ANR	4243567	IdentifierDeclType	PJ *		4242681	0					
ANR	4243568	Identifier	pj		4242681	1					
ANR	4243569	AssignmentExpression	* pj = NULL		4242681	2		=			
ANR	4243570	Identifier	NULL		4242681	0					
ANR	4243571	Identifier	NULL		4242681	1					
ANR	4243572	IfStatement	if ( * input == 'j' )		4242681	11					
ANR	4243573	Condition	* input == 'j'	531:7:17000:17013	4242681	0	True				
ANR	4243574	EqualityExpression	* input == 'j'		4242681	0		==			
ANR	4243575	UnaryOperationExpression	* input		4242681	0					
ANR	4243576	UnaryOperator	*		4242681	0					
ANR	4243577	Identifier	input		4242681	1					
ANR	4243578	PrimaryExpression	'j'		4242681	1					
ANR	4243579	CompoundStatement		146:23:3480:3480	4242681	1					
ANR	4243580	ExpressionStatement	pj = pj_new ( )	532:4:17022:17036	4242681	0	True				
ANR	4243581	AssignmentExpression	pj = pj_new ( )		4242681	0		=			
ANR	4243582	Identifier	pj		4242681	0					
ANR	4243583	CallExpression	pj_new ( )		4242681	1					
ANR	4243584	Callee	pj_new		4242681	0					
ANR	4243585	Identifier	pj_new		4242681	0					
ANR	4243586	ArgumentList			4242681	1					
ANR	4243587	ExpressionStatement	pj_o ( pj )	533:4:17042:17051	4242681	1	True				
ANR	4243588	CallExpression	pj_o ( pj )		4242681	0					
ANR	4243589	Callee	pj_o		4242681	0					
ANR	4243590	Identifier	pj_o		4242681	0					
ANR	4243591	ArgumentList	pj		4242681	1					
ANR	4243592	Argument	pj		4242681	0					
ANR	4243593	Identifier	pj		4242681	0					
ANR	4243594	ForStatement	for ( i = 0 ; i < list_len ; i ++ )		4242681	12					
ANR	4243595	ForInit	i = 0 ;	535:8:17066:17071	4242681	0	True				
ANR	4243596	AssignmentExpression	i = 0		4242681	0		=			
ANR	4243597	Identifier	i		4242681	0					
ANR	4243598	PrimaryExpression	0		4242681	1					
ANR	4243599	Condition	i < list_len	535:15:17073:17084	4242681	1	True				
ANR	4243600	RelationalExpression	i < list_len		4242681	0		<			
ANR	4243601	Identifier	i		4242681	0					
ANR	4243602	Identifier	list_len		4242681	1					
ANR	4243603	PostIncDecOperationExpression	i ++	535:29:17087:17089	4242681	2	True				
ANR	4243604	Identifier	i		4242681	0					
ANR	4243605	IncDec	++		4242681	1					
ANR	4243606	CompoundStatement		151:4:3562:3602	4242681	3					
ANR	4243607	IdentifierDeclStatement	const char * str = r_list_pop_head ( list ) ;	536:4:17098:17138	4242681	0	True				
ANR	4243608	IdentifierDecl	* str = r_list_pop_head ( list )		4242681	0					
ANR	4243609	IdentifierDeclType	const char *		4242681	0					
ANR	4243610	Identifier	str		4242681	1					
ANR	4243611	AssignmentExpression	* str = r_list_pop_head ( list )		4242681	2		=			
ANR	4243612	Identifier	str		4242681	0					
ANR	4243613	CallExpression	r_list_pop_head ( list )		4242681	1					
ANR	4243614	Callee	r_list_pop_head		4242681	0					
ANR	4243615	Identifier	r_list_pop_head		4242681	0					
ANR	4243616	ArgumentList	list		4242681	1					
ANR	4243617	Argument	list		4242681	0					
ANR	4243618	Identifier	list		4242681	0					
ANR	4243619	IfStatement	if ( ! * str )		4242681	1					
ANR	4243620	Condition	! * str	537:8:17148:17152	4242681	0	True				
ANR	4243621	UnaryOperationExpression	! * str		4242681	0					
ANR	4243622	UnaryOperator	!		4242681	0					
ANR	4243623	UnaryOperationExpression	* str		4242681	1					
ANR	4243624	UnaryOperator	*		4242681	0					
ANR	4243625	Identifier	str		4242681	1					
ANR	4243626	CompoundStatement		152:15:3619:3619	4242681	1					
ANR	4243627	ContinueStatement	continue ;	538:5:17162:17170	4242681	0	True				
ANR	4243628	ExpressionStatement	"n = r_num_math ( core -> num , str )"	540:4:17182:17213	4242681	2	True				
ANR	4243629	AssignmentExpression	"n = r_num_math ( core -> num , str )"		4242681	0		=			
ANR	4243630	Identifier	n		4242681	0					
ANR	4243631	CallExpression	"r_num_math ( core -> num , str )"		4242681	1					
ANR	4243632	Callee	r_num_math		4242681	0					
ANR	4243633	Identifier	r_num_math		4242681	0					
ANR	4243634	ArgumentList	core -> num		4242681	1					
ANR	4243635	Argument	core -> num		4242681	0					
ANR	4243636	PtrMemberAccess	core -> num		4242681	0					
ANR	4243637	Identifier	core		4242681	0					
ANR	4243638	Identifier	num		4242681	1					
ANR	4243639	Argument	str		4242681	1					
ANR	4243640	Identifier	str		4242681	0					
ANR	4243641	IfStatement	if ( core -> num -> dbz )		4242681	3					
ANR	4243642	Condition	core -> num -> dbz	541:8:17223:17236	4242681	0	True				
ANR	4243643	PtrMemberAccess	core -> num -> dbz		4242681	0					
ANR	4243644	PtrMemberAccess	core -> num		4242681	0					
ANR	4243645	Identifier	core		4242681	0					
ANR	4243646	Identifier	num		4242681	1					
ANR	4243647	Identifier	dbz		4242681	1					
ANR	4243648	CompoundStatement		156:24:3703:3703	4242681	1					
ANR	4243649	ExpressionStatement	"eprintf ( ""RNum ERROR: Division by Zero\\n"" )"	542:5:17246:17288	4242681	0	True				
ANR	4243650	CallExpression	"eprintf ( ""RNum ERROR: Division by Zero\\n"" )"		4242681	0					
ANR	4243651	Callee	eprintf		4242681	0					
ANR	4243652	Identifier	eprintf		4242681	0					
ANR	4243653	ArgumentList	"""RNum ERROR: Division by Zero\\n"""		4242681	1					
ANR	4243654	Argument	"""RNum ERROR: Division by Zero\\n"""		4242681	0					
ANR	4243655	PrimaryExpression	"""RNum ERROR: Division by Zero\\n"""		4242681	0					
ANR	4243656	ExpressionStatement	"asnum = r_num_as_string ( NULL , n , false )"	544:4:17300:17341	4242681	4	True				
ANR	4243657	AssignmentExpression	"asnum = r_num_as_string ( NULL , n , false )"		4242681	0		=			
ANR	4243658	Identifier	asnum		4242681	0					
ANR	4243659	CallExpression	"r_num_as_string ( NULL , n , false )"		4242681	1					
ANR	4243660	Callee	r_num_as_string		4242681	0					
ANR	4243661	Identifier	r_num_as_string		4242681	0					
ANR	4243662	ArgumentList	NULL		4242681	1					
ANR	4243663	Argument	NULL		4242681	0					
ANR	4243664	Identifier	NULL		4242681	0					
ANR	4243665	Argument	n		4242681	1					
ANR	4243666	Identifier	n		4242681	0					
ANR	4243667	Argument	false		4242681	2					
ANR	4243668	Identifier	false		4242681	0					
ANR	4243669	ExpressionStatement	s = n >> 16 << 12	546:4:17378:17395	4242681	5	True				
ANR	4243670	AssignmentExpression	s = n >> 16 << 12		4242681	0		=			
ANR	4243671	Identifier	s		4242681	0					
ANR	4243672	ShiftExpression	n >> 16 << 12		4242681	1		>>			
ANR	4243673	Identifier	n		4242681	0					
ANR	4243674	ShiftExpression	16 << 12		4242681	1		<<			
ANR	4243675	PrimaryExpression	16		4242681	0					
ANR	4243676	PrimaryExpression	12		4242681	1					
ANR	4243677	ExpressionStatement	a = n & 0x0fff	547:4:17401:17415	4242681	6	True				
ANR	4243678	AssignmentExpression	a = n & 0x0fff		4242681	0		=			
ANR	4243679	Identifier	a		4242681	0					
ANR	4243680	BitAndExpression	n & 0x0fff		4242681	1		&			
ANR	4243681	Identifier	n		4242681	0					
ANR	4243682	PrimaryExpression	0x0fff		4242681	1					
ANR	4243683	ExpressionStatement	"r_num_units ( unit , sizeof ( unit ) , n )"	548:4:17421:17457	4242681	7	True				
ANR	4243684	CallExpression	"r_num_units ( unit , sizeof ( unit ) , n )"		4242681	0					
ANR	4243685	Callee	r_num_units		4242681	0					
ANR	4243686	Identifier	r_num_units		4242681	0					
ANR	4243687	ArgumentList	unit		4242681	1					
ANR	4243688	Argument	unit		4242681	0					
ANR	4243689	Identifier	unit		4242681	0					
ANR	4243690	Argument	sizeof ( unit )		4242681	1					
ANR	4243691	SizeofExpression	sizeof ( unit )		4242681	0					
ANR	4243692	Sizeof	sizeof		4242681	0					
ANR	4243693	SizeofOperand	unit		4242681	1					
ANR	4243694	Argument	n		4242681	2					
ANR	4243695	Identifier	n		4242681	0					
ANR	4243696	IfStatement	if ( * input == 'j' )		4242681	8					
ANR	4243697	Condition	* input == 'j'	549:8:17467:17480	4242681	0	True				
ANR	4243698	EqualityExpression	* input == 'j'		4242681	0		==			
ANR	4243699	UnaryOperationExpression	* input		4242681	0					
ANR	4243700	UnaryOperator	*		4242681	0					
ANR	4243701	Identifier	input		4242681	1					
ANR	4243702	PrimaryExpression	'j'		4242681	1					
ANR	4243703	CompoundStatement		164:24:3947:3947	4242681	1					
ANR	4243704	ExpressionStatement	"pj_ks ( pj , ""int32"" , sdb_fmt ( ""%d"" , ( st32 ) ( n & UT32_MAX ) ) )"	550:5:17490:17547	4242681	0	True				
ANR	4243705	CallExpression	"pj_ks ( pj , ""int32"" , sdb_fmt ( ""%d"" , ( st32 ) ( n & UT32_MAX ) ) )"		4242681	0					
ANR	4243706	Callee	pj_ks		4242681	0					
ANR	4243707	Identifier	pj_ks		4242681	0					
ANR	4243708	ArgumentList	pj		4242681	1					
ANR	4243709	Argument	pj		4242681	0					
ANR	4243710	Identifier	pj		4242681	0					
ANR	4243711	Argument	"""int32"""		4242681	1					
ANR	4243712	PrimaryExpression	"""int32"""		4242681	0					
ANR	4243713	Argument	"sdb_fmt ( ""%d"" , ( st32 ) ( n & UT32_MAX ) )"		4242681	2					
ANR	4243714	CallExpression	"sdb_fmt ( ""%d"" , ( st32 ) ( n & UT32_MAX ) )"		4242681	0					
ANR	4243715	Callee	sdb_fmt		4242681	0					
ANR	4243716	Identifier	sdb_fmt		4242681	0					
ANR	4243717	ArgumentList	"""%d"""		4242681	1					
ANR	4243718	Argument	"""%d"""		4242681	0					
ANR	4243719	PrimaryExpression	"""%d"""		4242681	0					
ANR	4243720	Argument	( st32 ) ( n & UT32_MAX )		4242681	1					
ANR	4243721	CastExpression	( st32 ) ( n & UT32_MAX )		4242681	0					
ANR	4243722	CastTarget	st32		4242681	0					
ANR	4243723	BitAndExpression	n & UT32_MAX		4242681	1		&			
ANR	4243724	Identifier	n		4242681	0					
ANR	4243725	Identifier	UT32_MAX		4242681	1					
ANR	4243726	ExpressionStatement	"pj_ks ( pj , ""uint32"" , sdb_fmt ( ""%u"" , ( ut32 ) n ) )"	551:5:17554:17599	4242681	1	True				
ANR	4243727	CallExpression	"pj_ks ( pj , ""uint32"" , sdb_fmt ( ""%u"" , ( ut32 ) n ) )"		4242681	0					
ANR	4243728	Callee	pj_ks		4242681	0					
ANR	4243729	Identifier	pj_ks		4242681	0					
ANR	4243730	ArgumentList	pj		4242681	1					
ANR	4243731	Argument	pj		4242681	0					
ANR	4243732	Identifier	pj		4242681	0					
ANR	4243733	Argument	"""uint32"""		4242681	1					
ANR	4243734	PrimaryExpression	"""uint32"""		4242681	0					
ANR	4243735	Argument	"sdb_fmt ( ""%u"" , ( ut32 ) n )"		4242681	2					
ANR	4243736	CallExpression	"sdb_fmt ( ""%u"" , ( ut32 ) n )"		4242681	0					
ANR	4243737	Callee	sdb_fmt		4242681	0					
ANR	4243738	Identifier	sdb_fmt		4242681	0					
ANR	4243739	ArgumentList	"""%u"""		4242681	1					
ANR	4243740	Argument	"""%u"""		4242681	0					
ANR	4243741	PrimaryExpression	"""%u"""		4242681	0					
ANR	4243742	Argument	( ut32 ) n		4242681	1					
ANR	4243743	CastExpression	( ut32 ) n		4242681	0					
ANR	4243744	CastTarget	ut32		4242681	0					
ANR	4243745	Identifier	n		4242681	1					
ANR	4243746	Statement	pj_ks	552:5:17606:17610	4242681	2	True				
ANR	4243747	Statement	(	552:11:17612:17612	4242681	3	True				
ANR	4243748	Statement	pj	552:12:17613:17614	4242681	4	True				
ANR	4243749	Statement	","	552:14:17615:17615	4242681	5	True				
ANR	4243750	Statement	"""int64"""	552:16:17617:17623	4242681	6	True				
ANR	4243751	Statement	","	552:23:17624:17624	4242681	7	True				
ANR	4243752	Statement	sdb_fmt	552:25:17626:17632	4242681	8	True				
ANR	4243753	Statement	(	552:33:17634:17634	4242681	9	True				
ANR	4243754	Statement	"""%"""	552:34:17635:17637	4242681	10	True				
ANR	4243755	Statement	PFMT64d	552:37:17638:17644	4242681	11	True				
ANR	4243756	Statement	","	552:44:17645:17645	4242681	12	True				
ANR	4243757	Statement	(	552:46:17647:17647	4242681	13	True				
ANR	4243758	Statement	st64	552:47:17648:17651	4242681	14	True				
ANR	4243759	Statement	)	552:51:17652:17652	4242681	15	True				
ANR	4243760	Statement	n	552:52:17653:17653	4242681	16	True				
ANR	4243761	Statement	)	552:53:17654:17654	4242681	17	True				
ANR	4243762	Statement	)	552:54:17655:17655	4242681	18	True				
ANR	4243763	ExpressionStatement		552:55:17656:17656	4242681	19	True				
ANR	4243764	Statement	pj_ks	553:5:17663:17667	4242681	20	True				
ANR	4243765	Statement	(	553:11:17669:17669	4242681	21	True				
ANR	4243766	Statement	pj	553:12:17670:17671	4242681	22	True				
ANR	4243767	Statement	","	553:14:17672:17672	4242681	23	True				
ANR	4243768	Statement	"""uint64"""	553:16:17674:17681	4242681	24	True				
ANR	4243769	Statement	","	553:24:17682:17682	4242681	25	True				
ANR	4243770	Statement	sdb_fmt	553:26:17684:17690	4242681	26	True				
ANR	4243771	Statement	(	553:34:17692:17692	4242681	27	True				
ANR	4243772	Statement	"""%"""	553:35:17693:17695	4242681	28	True				
ANR	4243773	Statement	PFMT64u	553:38:17696:17702	4242681	29	True				
ANR	4243774	Statement	","	553:45:17703:17703	4242681	30	True				
ANR	4243775	Statement	(	553:47:17705:17705	4242681	31	True				
ANR	4243776	Statement	ut64	553:48:17706:17709	4242681	32	True				
ANR	4243777	Statement	)	553:52:17710:17710	4242681	33	True				
ANR	4243778	Statement	n	553:53:17711:17711	4242681	34	True				
ANR	4243779	Statement	)	553:54:17712:17712	4242681	35	True				
ANR	4243780	Statement	)	553:55:17713:17713	4242681	36	True				
ANR	4243781	ExpressionStatement		553:56:17714:17714	4242681	37	True				
ANR	4243782	Statement	pj_ks	554:5:17721:17725	4242681	38	True				
ANR	4243783	Statement	(	554:11:17727:17727	4242681	39	True				
ANR	4243784	Statement	pj	554:12:17728:17729	4242681	40	True				
ANR	4243785	Statement	","	554:14:17730:17730	4242681	41	True				
ANR	4243786	Statement	"""hex"""	554:16:17732:17736	4242681	42	True				
ANR	4243787	Statement	","	554:21:17737:17737	4242681	43	True				
ANR	4243788	Statement	sdb_fmt	554:23:17739:17745	4242681	44	True				
ANR	4243789	Statement	(	554:31:17747:17747	4242681	45	True				
ANR	4243790	Statement	"""0x%08"""	554:32:17748:17754	4242681	46	True				
ANR	4243791	Statement	PFMT64x	554:39:17755:17761	4242681	47	True				
ANR	4243792	Statement	","	554:46:17762:17762	4242681	48	True				
ANR	4243793	Statement	n	554:48:17764:17764	4242681	49	True				
ANR	4243794	Statement	)	554:49:17765:17765	4242681	50	True				
ANR	4243795	Statement	)	554:50:17766:17766	4242681	51	True				
ANR	4243796	ExpressionStatement		554:51:17767:17767	4242681	52	True				
ANR	4243797	Statement	pj_ks	555:5:17774:17778	4242681	53	True				
ANR	4243798	Statement	(	555:11:17780:17780	4242681	54	True				
ANR	4243799	Statement	pj	555:12:17781:17782	4242681	55	True				
ANR	4243800	Statement	","	555:14:17783:17783	4242681	56	True				
ANR	4243801	Statement	"""octal"""	555:16:17785:17791	4242681	57	True				
ANR	4243802	Statement	","	555:23:17792:17792	4242681	58	True				
ANR	4243803	Statement	sdb_fmt	555:25:17794:17800	4242681	59	True				
ANR	4243804	Statement	(	555:33:17802:17802	4242681	60	True				
ANR	4243805	Statement	"""0%"""	555:34:17803:17806	4242681	61	True				
ANR	4243806	Statement	PFMT64o	555:38:17807:17813	4242681	62	True				
ANR	4243807	Statement	","	555:45:17814:17814	4242681	63	True				
ANR	4243808	Statement	n	555:47:17816:17816	4242681	64	True				
ANR	4243809	Statement	)	555:48:17817:17817	4242681	65	True				
ANR	4243810	Statement	)	555:49:17818:17818	4242681	66	True				
ANR	4243811	ExpressionStatement		555:50:17819:17819	4242681	67	True				
ANR	4243812	ExpressionStatement	"pj_ks ( pj , ""unit"" , unit )"	556:5:17826:17850	4242681	68	True				
ANR	4243813	CallExpression	"pj_ks ( pj , ""unit"" , unit )"		4242681	0					
ANR	4243814	Callee	pj_ks		4242681	0					
ANR	4243815	Identifier	pj_ks		4242681	0					
ANR	4243816	ArgumentList	pj		4242681	1					
ANR	4243817	Argument	pj		4242681	0					
ANR	4243818	Identifier	pj		4242681	0					
ANR	4243819	Argument	"""unit"""		4242681	1					
ANR	4243820	PrimaryExpression	"""unit"""		4242681	0					
ANR	4243821	Argument	unit		4242681	2					
ANR	4243822	Identifier	unit		4242681	0					
ANR	4243823	ExpressionStatement	"pj_ks ( pj , ""segment"" , sdb_fmt ( ""%04x:%04x"" , s , a ) )"	557:5:17857:17907	4242681	69	True				
ANR	4243824	CallExpression	"pj_ks ( pj , ""segment"" , sdb_fmt ( ""%04x:%04x"" , s , a ) )"		4242681	0					
ANR	4243825	Callee	pj_ks		4242681	0					
ANR	4243826	Identifier	pj_ks		4242681	0					
ANR	4243827	ArgumentList	pj		4242681	1					
ANR	4243828	Argument	pj		4242681	0					
ANR	4243829	Identifier	pj		4242681	0					
ANR	4243830	Argument	"""segment"""		4242681	1					
ANR	4243831	PrimaryExpression	"""segment"""		4242681	0					
ANR	4243832	Argument	"sdb_fmt ( ""%04x:%04x"" , s , a )"		4242681	2					
ANR	4243833	CallExpression	"sdb_fmt ( ""%04x:%04x"" , s , a )"		4242681	0					
ANR	4243834	Callee	sdb_fmt		4242681	0					
ANR	4243835	Identifier	sdb_fmt		4242681	0					
ANR	4243836	ArgumentList	"""%04x:%04x"""		4242681	1					
ANR	4243837	Argument	"""%04x:%04x"""		4242681	0					
ANR	4243838	PrimaryExpression	"""%04x:%04x"""		4242681	0					
ANR	4243839	Argument	s		4242681	1					
ANR	4243840	Identifier	s		4242681	0					
ANR	4243841	Argument	a		4242681	2					
ANR	4243842	Identifier	a		4242681	0					
ANR	4243843	ElseStatement	else		4242681	0					
ANR	4243844	CompoundStatement		174:11:4390:4390	4242681	0					
ANR	4243845	IfStatement	if ( n >> 32 )		4242681	0					
ANR	4243846	Condition	n >> 32	560:9:17937:17943	4242681	0	True				
ANR	4243847	ShiftExpression	n >> 32		4242681	0		>>			
ANR	4243848	Identifier	n		4242681	0					
ANR	4243849	PrimaryExpression	32		4242681	1					
ANR	4243850	CompoundStatement		175:18:4410:4410	4242681	1					
ANR	4243851	Statement	r_cons_printf	561:6:17954:17966	4242681	0	True				
ANR	4243852	Statement	(	561:20:17968:17968	4242681	1	True				
ANR	4243853	Statement	"""int64   %"""	561:21:17969:17979	4242681	2	True				
ANR	4243854	Statement	PFMT64d	561:32:17980:17986	4242681	3	True				
ANR	4243855	Statement	"""\\n"""	561:39:17987:17990	4242681	4	True				
ANR	4243856	Statement	","	561:43:17991:17991	4242681	5	True				
ANR	4243857	Statement	(	561:45:17993:17993	4242681	6	True				
ANR	4243858	Statement	st64	561:46:17994:17997	4242681	7	True				
ANR	4243859	Statement	)	561:50:17998:17998	4242681	8	True				
ANR	4243860	Statement	n	561:51:17999:17999	4242681	9	True				
ANR	4243861	Statement	)	561:52:18000:18000	4242681	10	True				
ANR	4243862	ExpressionStatement		561:53:18001:18001	4242681	11	True				
ANR	4243863	Statement	r_cons_printf	562:6:18009:18021	4242681	12	True				
ANR	4243864	Statement	(	562:20:18023:18023	4242681	13	True				
ANR	4243865	Statement	"""uint64  %"""	562:21:18024:18034	4242681	14	True				
ANR	4243866	Statement	PFMT64u	562:32:18035:18041	4242681	15	True				
ANR	4243867	Statement	"""\\n"""	562:39:18042:18045	4242681	16	True				
ANR	4243868	Statement	","	562:43:18046:18046	4242681	17	True				
ANR	4243869	Statement	(	562:45:18048:18048	4242681	18	True				
ANR	4243870	Statement	ut64	562:46:18049:18052	4242681	19	True				
ANR	4243871	Statement	)	562:50:18053:18053	4242681	20	True				
ANR	4243872	Statement	n	562:51:18054:18054	4242681	21	True				
ANR	4243873	Statement	)	562:52:18055:18055	4242681	22	True				
ANR	4243874	ExpressionStatement		562:53:18056:18056	4242681	23	True				
ANR	4243875	ElseStatement	else		4242681	0					
ANR	4243876	CompoundStatement		178:12:4534:4534	4242681	0					
ANR	4243877	ExpressionStatement	"r_cons_printf ( ""int32   %d\\n"" , ( st32 ) n )"	564:6:18078:18117	4242681	0	True				
ANR	4243878	CallExpression	"r_cons_printf ( ""int32   %d\\n"" , ( st32 ) n )"		4242681	0					
ANR	4243879	Callee	r_cons_printf		4242681	0					
ANR	4243880	Identifier	r_cons_printf		4242681	0					
ANR	4243881	ArgumentList	"""int32   %d\\n"""		4242681	1					
ANR	4243882	Argument	"""int32   %d\\n"""		4242681	0					
ANR	4243883	PrimaryExpression	"""int32   %d\\n"""		4242681	0					
ANR	4243884	Argument	( st32 ) n		4242681	1					
ANR	4243885	CastExpression	( st32 ) n		4242681	0					
ANR	4243886	CastTarget	st32		4242681	0					
ANR	4243887	Identifier	n		4242681	1					
ANR	4243888	ExpressionStatement	"r_cons_printf ( ""uint32  %u\\n"" , ( ut32 ) n )"	565:6:18125:18164	4242681	1	True				
ANR	4243889	CallExpression	"r_cons_printf ( ""uint32  %u\\n"" , ( ut32 ) n )"		4242681	0					
ANR	4243890	Callee	r_cons_printf		4242681	0					
ANR	4243891	Identifier	r_cons_printf		4242681	0					
ANR	4243892	ArgumentList	"""uint32  %u\\n"""		4242681	1					
ANR	4243893	Argument	"""uint32  %u\\n"""		4242681	0					
ANR	4243894	PrimaryExpression	"""uint32  %u\\n"""		4242681	0					
ANR	4243895	Argument	( ut32 ) n		4242681	1					
ANR	4243896	CastExpression	( ut32 ) n		4242681	0					
ANR	4243897	CastTarget	ut32		4242681	0					
ANR	4243898	Identifier	n		4242681	1					
ANR	4243899	Statement	r_cons_printf	567:5:18178:18190	4242681	1	True				
ANR	4243900	Statement	(	567:19:18192:18192	4242681	2	True				
ANR	4243901	Statement	"""hex     0x%"""	567:20:18193:18205	4242681	3	True				
ANR	4243902	Statement	PFMT64x	567:33:18206:18212	4242681	4	True				
ANR	4243903	Statement	"""\\n"""	567:40:18213:18216	4242681	5	True				
ANR	4243904	Statement	","	567:44:18217:18217	4242681	6	True				
ANR	4243905	Statement	n	567:46:18219:18219	4242681	7	True				
ANR	4243906	Statement	)	567:47:18220:18220	4242681	8	True				
ANR	4243907	ExpressionStatement		567:48:18221:18221	4242681	9	True				
ANR	4243908	Statement	r_cons_printf	568:5:18228:18240	4242681	10	True				
ANR	4243909	Statement	(	568:19:18242:18242	4242681	11	True				
ANR	4243910	Statement	"""octal   0%"""	568:20:18243:18254	4242681	12	True				
ANR	4243911	Statement	PFMT64o	568:32:18255:18261	4242681	13	True				
ANR	4243912	Statement	"""\\n"""	568:39:18262:18265	4242681	14	True				
ANR	4243913	Statement	","	568:43:18266:18266	4242681	15	True				
ANR	4243914	Statement	n	568:45:18268:18268	4242681	16	True				
ANR	4243915	Statement	)	568:46:18269:18269	4242681	17	True				
ANR	4243916	ExpressionStatement		568:47:18270:18270	4242681	18	True				
ANR	4243917	ExpressionStatement	"r_cons_printf ( ""unit    %s\\n"" , unit )"	569:5:18277:18313	4242681	19	True				
ANR	4243918	CallExpression	"r_cons_printf ( ""unit    %s\\n"" , unit )"		4242681	0					
ANR	4243919	Callee	r_cons_printf		4242681	0					
ANR	4243920	Identifier	r_cons_printf		4242681	0					
ANR	4243921	ArgumentList	"""unit    %s\\n"""		4242681	1					
ANR	4243922	Argument	"""unit    %s\\n"""		4242681	0					
ANR	4243923	PrimaryExpression	"""unit    %s\\n"""		4242681	0					
ANR	4243924	Argument	unit		4242681	1					
ANR	4243925	Identifier	unit		4242681	0					
ANR	4243926	ExpressionStatement	"r_cons_printf ( ""segment %04x:%04x\\n"" , s , a )"	570:5:18320:18363	4242681	20	True				
ANR	4243927	CallExpression	"r_cons_printf ( ""segment %04x:%04x\\n"" , s , a )"		4242681	0					
ANR	4243928	Callee	r_cons_printf		4242681	0					
ANR	4243929	Identifier	r_cons_printf		4242681	0					
ANR	4243930	ArgumentList	"""segment %04x:%04x\\n"""		4242681	1					
ANR	4243931	Argument	"""segment %04x:%04x\\n"""		4242681	0					
ANR	4243932	PrimaryExpression	"""segment %04x:%04x\\n"""		4242681	0					
ANR	4243933	Argument	s		4242681	1					
ANR	4243934	Identifier	s		4242681	0					
ANR	4243935	Argument	a		4242681	2					
ANR	4243936	Identifier	a		4242681	0					
ANR	4243937	IfStatement	if ( asnum )		4242681	21					
ANR	4243938	Condition	asnum	572:9:18380:18384	4242681	0	True				
ANR	4243939	Identifier	asnum		4242681	0					
ANR	4243940	CompoundStatement		187:16:4851:4851	4242681	1					
ANR	4243941	ExpressionStatement	"r_cons_printf ( ""string  \\""%s\\""\\n"" , asnum )"	573:6:18395:18436	4242681	0	True				
ANR	4243942	CallExpression	"r_cons_printf ( ""string  \\""%s\\""\\n"" , asnum )"		4242681	0					
ANR	4243943	Callee	r_cons_printf		4242681	0					
ANR	4243944	Identifier	r_cons_printf		4242681	0					
ANR	4243945	ArgumentList	"""string  \\""%s\\""\\n"""		4242681	1					
ANR	4243946	Argument	"""string  \\""%s\\""\\n"""		4242681	0					
ANR	4243947	PrimaryExpression	"""string  \\""%s\\""\\n"""		4242681	0					
ANR	4243948	Argument	asnum		4242681	1					
ANR	4243949	Identifier	asnum		4242681	0					
ANR	4243950	ExpressionStatement	free ( asnum )	574:6:18444:18456	4242681	1	True				
ANR	4243951	CallExpression	free ( asnum )		4242681	0					
ANR	4243952	Callee	free		4242681	0					
ANR	4243953	Identifier	free		4242681	0					
ANR	4243954	ArgumentList	asnum		4242681	1					
ANR	4243955	Argument	asnum		4242681	0					
ANR	4243956	Identifier	asnum		4242681	0					
ANR	4243957	ExpressionStatement	"r_str_bits64 ( out , n )"	578:4:18511:18532	4242681	9	True				
ANR	4243958	CallExpression	"r_str_bits64 ( out , n )"		4242681	0					
ANR	4243959	Callee	r_str_bits64		4242681	0					
ANR	4243960	Identifier	r_str_bits64		4242681	0					
ANR	4243961	ArgumentList	out		4242681	1					
ANR	4243962	Argument	out		4242681	0					
ANR	4243963	Identifier	out		4242681	0					
ANR	4243964	Argument	n		4242681	1					
ANR	4243965	Identifier	n		4242681	0					
ANR	4243966	ExpressionStatement	f = d = core -> num -> fvalue	579:4:18538:18563	4242681	10	True				
ANR	4243967	AssignmentExpression	f = d = core -> num -> fvalue		4242681	0		=			
ANR	4243968	Identifier	f		4242681	0					
ANR	4243969	AssignmentExpression	d = core -> num -> fvalue		4242681	1		=			
ANR	4243970	Identifier	d		4242681	0					
ANR	4243971	PtrMemberAccess	core -> num -> fvalue		4242681	1					
ANR	4243972	PtrMemberAccess	core -> num		4242681	0					
ANR	4243973	Identifier	core		4242681	0					
ANR	4243974	Identifier	num		4242681	1					
ANR	4243975	Identifier	fvalue		4242681	1					
ANR	4243976	ExpressionStatement	"memcpy ( & f , & n , sizeof ( f ) )"	580:4:18569:18596	4242681	11	True				
ANR	4243977	CallExpression	"memcpy ( & f , & n , sizeof ( f ) )"		4242681	0					
ANR	4243978	Callee	memcpy		4242681	0					
ANR	4243979	Identifier	memcpy		4242681	0					
ANR	4243980	ArgumentList	& f		4242681	1					
ANR	4243981	Argument	& f		4242681	0					
ANR	4243982	UnaryOperationExpression	& f		4242681	0					
ANR	4243983	UnaryOperator	&		4242681	0					
ANR	4243984	Identifier	f		4242681	1					
ANR	4243985	Argument	& n		4242681	1					
ANR	4243986	UnaryOperationExpression	& n		4242681	0					
ANR	4243987	UnaryOperator	&		4242681	0					
ANR	4243988	Identifier	n		4242681	1					
ANR	4243989	Argument	sizeof ( f )		4242681	2					
ANR	4243990	SizeofExpression	sizeof ( f )		4242681	0					
ANR	4243991	Sizeof	sizeof		4242681	0					
ANR	4243992	SizeofOperand	f		4242681	1					
ANR	4243993	ExpressionStatement	"memcpy ( & d , & n , sizeof ( d ) )"	581:4:18602:18629	4242681	12	True				
ANR	4243994	CallExpression	"memcpy ( & d , & n , sizeof ( d ) )"		4242681	0					
ANR	4243995	Callee	memcpy		4242681	0					
ANR	4243996	Identifier	memcpy		4242681	0					
ANR	4243997	ArgumentList	& d		4242681	1					
ANR	4243998	Argument	& d		4242681	0					
ANR	4243999	UnaryOperationExpression	& d		4242681	0					
ANR	4244000	UnaryOperator	&		4242681	0					
ANR	4244001	Identifier	d		4242681	1					
ANR	4244002	Argument	& n		4242681	1					
ANR	4244003	UnaryOperationExpression	& n		4242681	0					
ANR	4244004	UnaryOperator	&		4242681	0					
ANR	4244005	Identifier	n		4242681	1					
ANR	4244006	Argument	sizeof ( d )		4242681	2					
ANR	4244007	SizeofExpression	sizeof ( d )		4242681	0					
ANR	4244008	Sizeof	sizeof		4242681	0					
ANR	4244009	SizeofOperand	d		4242681	1					
ANR	4244010	IfStatement	if ( isnan ( f ) && signbit ( f ) )		4242681	13					
ANR	4244011	Condition	isnan ( f ) && signbit ( f )	583:8:18706:18729	4242681	0	True				
ANR	4244012	AndExpression	isnan ( f ) && signbit ( f )		4242681	0		&&			
ANR	4244013	CallExpression	isnan ( f )		4242681	0					
ANR	4244014	Callee	isnan		4242681	0					
ANR	4244015	Identifier	isnan		4242681	0					
ANR	4244016	ArgumentList	f		4242681	1					
ANR	4244017	Argument	f		4242681	0					
ANR	4244018	Identifier	f		4242681	0					
ANR	4244019	CallExpression	signbit ( f )		4242681	1					
ANR	4244020	Callee	signbit		4242681	0					
ANR	4244021	Identifier	signbit		4242681	0					
ANR	4244022	ArgumentList	f		4242681	1					
ANR	4244023	Argument	f		4242681	0					
ANR	4244024	Identifier	f		4242681	0					
ANR	4244025	CompoundStatement		198:34:5196:5196	4242681	1					
ANR	4244026	ExpressionStatement	f = - f	584:5:18739:18745	4242681	0	True				
ANR	4244027	AssignmentExpression	f = - f		4242681	0		=			
ANR	4244028	Identifier	f		4242681	0					
ANR	4244029	UnaryOperationExpression	- f		4242681	1					
ANR	4244030	UnaryOperator	-		4242681	0					
ANR	4244031	Identifier	f		4242681	1					
ANR	4244032	IfStatement	if ( isnan ( d ) && signbit ( d ) )		4242681	14					
ANR	4244033	Condition	isnan ( d ) && signbit ( d )	586:8:18761:18784	4242681	0	True				
ANR	4244034	AndExpression	isnan ( d ) && signbit ( d )		4242681	0		&&			
ANR	4244035	CallExpression	isnan ( d )		4242681	0					
ANR	4244036	Callee	isnan		4242681	0					
ANR	4244037	Identifier	isnan		4242681	0					
ANR	4244038	ArgumentList	d		4242681	1					
ANR	4244039	Argument	d		4242681	0					
ANR	4244040	Identifier	d		4242681	0					
ANR	4244041	CallExpression	signbit ( d )		4242681	1					
ANR	4244042	Callee	signbit		4242681	0					
ANR	4244043	Identifier	signbit		4242681	0					
ANR	4244044	ArgumentList	d		4242681	1					
ANR	4244045	Argument	d		4242681	0					
ANR	4244046	Identifier	d		4242681	0					
ANR	4244047	CompoundStatement		201:34:5251:5251	4242681	1					
ANR	4244048	ExpressionStatement	d = - d	587:5:18794:18800	4242681	0	True				
ANR	4244049	AssignmentExpression	d = - d		4242681	0		=			
ANR	4244050	Identifier	d		4242681	0					
ANR	4244051	UnaryOperationExpression	- d		4242681	1					
ANR	4244052	UnaryOperator	-		4242681	0					
ANR	4244053	Identifier	d		4242681	1					
ANR	4244054	IfStatement	if ( * input == 'j' )		4242681	15					
ANR	4244055	Condition	* input == 'j'	589:8:18816:18829	4242681	0	True				
ANR	4244056	EqualityExpression	* input == 'j'		4242681	0		==			
ANR	4244057	UnaryOperationExpression	* input		4242681	0					
ANR	4244058	UnaryOperator	*		4242681	0					
ANR	4244059	Identifier	input		4242681	1					
ANR	4244060	PrimaryExpression	'j'		4242681	1					
ANR	4244061	CompoundStatement		204:24:5296:5296	4242681	1					
ANR	4244062	ExpressionStatement	"pj_ks ( pj , ""fvalue"" , sdb_fmt ( ""%.1lf"" , core -> num -> fvalue ) )"	590:5:18839:18897	4242681	0	True				
ANR	4244063	CallExpression	"pj_ks ( pj , ""fvalue"" , sdb_fmt ( ""%.1lf"" , core -> num -> fvalue ) )"		4242681	0					
ANR	4244064	Callee	pj_ks		4242681	0					
ANR	4244065	Identifier	pj_ks		4242681	0					
ANR	4244066	ArgumentList	pj		4242681	1					
ANR	4244067	Argument	pj		4242681	0					
ANR	4244068	Identifier	pj		4242681	0					
ANR	4244069	Argument	"""fvalue"""		4242681	1					
ANR	4244070	PrimaryExpression	"""fvalue"""		4242681	0					
ANR	4244071	Argument	"sdb_fmt ( ""%.1lf"" , core -> num -> fvalue )"		4242681	2					
ANR	4244072	CallExpression	"sdb_fmt ( ""%.1lf"" , core -> num -> fvalue )"		4242681	0					
ANR	4244073	Callee	sdb_fmt		4242681	0					
ANR	4244074	Identifier	sdb_fmt		4242681	0					
ANR	4244075	ArgumentList	"""%.1lf"""		4242681	1					
ANR	4244076	Argument	"""%.1lf"""		4242681	0					
ANR	4244077	PrimaryExpression	"""%.1lf"""		4242681	0					
ANR	4244078	Argument	core -> num -> fvalue		4242681	1					
ANR	4244079	PtrMemberAccess	core -> num -> fvalue		4242681	0					
ANR	4244080	PtrMemberAccess	core -> num		4242681	0					
ANR	4244081	Identifier	core		4242681	0					
ANR	4244082	Identifier	num		4242681	1					
ANR	4244083	Identifier	fvalue		4242681	1					
ANR	4244084	ExpressionStatement	"pj_ks ( pj , ""float"" , sdb_fmt ( ""%ff"" , f ) )"	591:5:18904:18943	4242681	1	True				
ANR	4244085	CallExpression	"pj_ks ( pj , ""float"" , sdb_fmt ( ""%ff"" , f ) )"		4242681	0					
ANR	4244086	Callee	pj_ks		4242681	0					
ANR	4244087	Identifier	pj_ks		4242681	0					
ANR	4244088	ArgumentList	pj		4242681	1					
ANR	4244089	Argument	pj		4242681	0					
ANR	4244090	Identifier	pj		4242681	0					
ANR	4244091	Argument	"""float"""		4242681	1					
ANR	4244092	PrimaryExpression	"""float"""		4242681	0					
ANR	4244093	Argument	"sdb_fmt ( ""%ff"" , f )"		4242681	2					
ANR	4244094	CallExpression	"sdb_fmt ( ""%ff"" , f )"		4242681	0					
ANR	4244095	Callee	sdb_fmt		4242681	0					
ANR	4244096	Identifier	sdb_fmt		4242681	0					
ANR	4244097	ArgumentList	"""%ff"""		4242681	1					
ANR	4244098	Argument	"""%ff"""		4242681	0					
ANR	4244099	PrimaryExpression	"""%ff"""		4242681	0					
ANR	4244100	Argument	f		4242681	1					
ANR	4244101	Identifier	f		4242681	0					
ANR	4244102	ExpressionStatement	"pj_ks ( pj , ""double"" , sdb_fmt ( ""%lf"" , d ) )"	592:5:18950:18990	4242681	2	True				
ANR	4244103	CallExpression	"pj_ks ( pj , ""double"" , sdb_fmt ( ""%lf"" , d ) )"		4242681	0					
ANR	4244104	Callee	pj_ks		4242681	0					
ANR	4244105	Identifier	pj_ks		4242681	0					
ANR	4244106	ArgumentList	pj		4242681	1					
ANR	4244107	Argument	pj		4242681	0					
ANR	4244108	Identifier	pj		4242681	0					
ANR	4244109	Argument	"""double"""		4242681	1					
ANR	4244110	PrimaryExpression	"""double"""		4242681	0					
ANR	4244111	Argument	"sdb_fmt ( ""%lf"" , d )"		4242681	2					
ANR	4244112	CallExpression	"sdb_fmt ( ""%lf"" , d )"		4242681	0					
ANR	4244113	Callee	sdb_fmt		4242681	0					
ANR	4244114	Identifier	sdb_fmt		4242681	0					
ANR	4244115	ArgumentList	"""%lf"""		4242681	1					
ANR	4244116	Argument	"""%lf"""		4242681	0					
ANR	4244117	PrimaryExpression	"""%lf"""		4242681	0					
ANR	4244118	Argument	d		4242681	1					
ANR	4244119	Identifier	d		4242681	0					
ANR	4244120	ExpressionStatement	"pj_ks ( pj , ""binary"" , sdb_fmt ( ""0b%s"" , out ) )"	593:5:18997:19040	4242681	3	True				
ANR	4244121	CallExpression	"pj_ks ( pj , ""binary"" , sdb_fmt ( ""0b%s"" , out ) )"		4242681	0					
ANR	4244122	Callee	pj_ks		4242681	0					
ANR	4244123	Identifier	pj_ks		4242681	0					
ANR	4244124	ArgumentList	pj		4242681	1					
ANR	4244125	Argument	pj		4242681	0					
ANR	4244126	Identifier	pj		4242681	0					
ANR	4244127	Argument	"""binary"""		4242681	1					
ANR	4244128	PrimaryExpression	"""binary"""		4242681	0					
ANR	4244129	Argument	"sdb_fmt ( ""0b%s"" , out )"		4242681	2					
ANR	4244130	CallExpression	"sdb_fmt ( ""0b%s"" , out )"		4242681	0					
ANR	4244131	Callee	sdb_fmt		4242681	0					
ANR	4244132	Identifier	sdb_fmt		4242681	0					
ANR	4244133	ArgumentList	"""0b%s"""		4242681	1					
ANR	4244134	Argument	"""0b%s"""		4242681	0					
ANR	4244135	PrimaryExpression	"""0b%s"""		4242681	0					
ANR	4244136	Argument	out		4242681	1					
ANR	4244137	Identifier	out		4242681	0					
ANR	4244138	ExpressionStatement	"r_num_to_trits ( out , n )"	594:5:19047:19070	4242681	4	True				
ANR	4244139	CallExpression	"r_num_to_trits ( out , n )"		4242681	0					
ANR	4244140	Callee	r_num_to_trits		4242681	0					
ANR	4244141	Identifier	r_num_to_trits		4242681	0					
ANR	4244142	ArgumentList	out		4242681	1					
ANR	4244143	Argument	out		4242681	0					
ANR	4244144	Identifier	out		4242681	0					
ANR	4244145	Argument	n		4242681	1					
ANR	4244146	Identifier	n		4242681	0					
ANR	4244147	ExpressionStatement	"pj_ks ( pj , ""trits"" , sdb_fmt ( ""0t%s"" , out ) )"	595:5:19077:19119	4242681	5	True				
ANR	4244148	CallExpression	"pj_ks ( pj , ""trits"" , sdb_fmt ( ""0t%s"" , out ) )"		4242681	0					
ANR	4244149	Callee	pj_ks		4242681	0					
ANR	4244150	Identifier	pj_ks		4242681	0					
ANR	4244151	ArgumentList	pj		4242681	1					
ANR	4244152	Argument	pj		4242681	0					
ANR	4244153	Identifier	pj		4242681	0					
ANR	4244154	Argument	"""trits"""		4242681	1					
ANR	4244155	PrimaryExpression	"""trits"""		4242681	0					
ANR	4244156	Argument	"sdb_fmt ( ""0t%s"" , out )"		4242681	2					
ANR	4244157	CallExpression	"sdb_fmt ( ""0t%s"" , out )"		4242681	0					
ANR	4244158	Callee	sdb_fmt		4242681	0					
ANR	4244159	Identifier	sdb_fmt		4242681	0					
ANR	4244160	ArgumentList	"""0t%s"""		4242681	1					
ANR	4244161	Argument	"""0t%s"""		4242681	0					
ANR	4244162	PrimaryExpression	"""0t%s"""		4242681	0					
ANR	4244163	Argument	out		4242681	1					
ANR	4244164	Identifier	out		4242681	0					
ANR	4244165	ElseStatement	else		4242681	0					
ANR	4244166	CompoundStatement		211:11:5596:5596	4242681	0					
ANR	4244167	ExpressionStatement	"r_cons_printf ( ""fvalue: %.1lf\\n"" , core -> num -> fvalue )"	597:5:19139:19191	4242681	0	True				
ANR	4244168	CallExpression	"r_cons_printf ( ""fvalue: %.1lf\\n"" , core -> num -> fvalue )"		4242681	0					
ANR	4244169	Callee	r_cons_printf		4242681	0					
ANR	4244170	Identifier	r_cons_printf		4242681	0					
ANR	4244171	ArgumentList	"""fvalue: %.1lf\\n"""		4242681	1					
ANR	4244172	Argument	"""fvalue: %.1lf\\n"""		4242681	0					
ANR	4244173	PrimaryExpression	"""fvalue: %.1lf\\n"""		4242681	0					
ANR	4244174	Argument	core -> num -> fvalue		4242681	1					
ANR	4244175	PtrMemberAccess	core -> num -> fvalue		4242681	0					
ANR	4244176	PtrMemberAccess	core -> num		4242681	0					
ANR	4244177	Identifier	core		4242681	0					
ANR	4244178	Identifier	num		4242681	1					
ANR	4244179	Identifier	fvalue		4242681	1					
ANR	4244180	ExpressionStatement	"r_cons_printf ( ""float:  %ff\\n"" , f )"	598:5:19198:19232	4242681	1	True				
ANR	4244181	CallExpression	"r_cons_printf ( ""float:  %ff\\n"" , f )"		4242681	0					
ANR	4244182	Callee	r_cons_printf		4242681	0					
ANR	4244183	Identifier	r_cons_printf		4242681	0					
ANR	4244184	ArgumentList	"""float:  %ff\\n"""		4242681	1					
ANR	4244185	Argument	"""float:  %ff\\n"""		4242681	0					
ANR	4244186	PrimaryExpression	"""float:  %ff\\n"""		4242681	0					
ANR	4244187	Argument	f		4242681	1					
ANR	4244188	Identifier	f		4242681	0					
ANR	4244189	ExpressionStatement	"r_cons_printf ( ""double: %lf\\n"" , d )"	599:5:19239:19273	4242681	2	True				
ANR	4244190	CallExpression	"r_cons_printf ( ""double: %lf\\n"" , d )"		4242681	0					
ANR	4244191	Callee	r_cons_printf		4242681	0					
ANR	4244192	Identifier	r_cons_printf		4242681	0					
ANR	4244193	ArgumentList	"""double: %lf\\n"""		4242681	1					
ANR	4244194	Argument	"""double: %lf\\n"""		4242681	0					
ANR	4244195	PrimaryExpression	"""double: %lf\\n"""		4242681	0					
ANR	4244196	Argument	d		4242681	1					
ANR	4244197	Identifier	d		4242681	0					
ANR	4244198	ExpressionStatement	"r_cons_printf ( ""binary  0b%s\\n"" , out )"	600:5:19280:19317	4242681	3	True				
ANR	4244199	CallExpression	"r_cons_printf ( ""binary  0b%s\\n"" , out )"		4242681	0					
ANR	4244200	Callee	r_cons_printf		4242681	0					
ANR	4244201	Identifier	r_cons_printf		4242681	0					
ANR	4244202	ArgumentList	"""binary  0b%s\\n"""		4242681	1					
ANR	4244203	Argument	"""binary  0b%s\\n"""		4242681	0					
ANR	4244204	PrimaryExpression	"""binary  0b%s\\n"""		4242681	0					
ANR	4244205	Argument	out		4242681	1					
ANR	4244206	Identifier	out		4242681	0					
ANR	4244207	ExpressionStatement	"r_num_to_trits ( out , n )"	603:5:19344:19367	4242681	4	True				
ANR	4244208	CallExpression	"r_num_to_trits ( out , n )"		4242681	0					
ANR	4244209	Callee	r_num_to_trits		4242681	0					
ANR	4244210	Identifier	r_num_to_trits		4242681	0					
ANR	4244211	ArgumentList	out		4242681	1					
ANR	4244212	Argument	out		4242681	0					
ANR	4244213	Identifier	out		4242681	0					
ANR	4244214	Argument	n		4242681	1					
ANR	4244215	Identifier	n		4242681	0					
ANR	4244216	ExpressionStatement	"r_cons_printf ( ""trits   0t%s\\n"" , out )"	604:5:19374:19411	4242681	5	True				
ANR	4244217	CallExpression	"r_cons_printf ( ""trits   0t%s\\n"" , out )"		4242681	0					
ANR	4244218	Callee	r_cons_printf		4242681	0					
ANR	4244219	Identifier	r_cons_printf		4242681	0					
ANR	4244220	ArgumentList	"""trits   0t%s\\n"""		4242681	1					
ANR	4244221	Argument	"""trits   0t%s\\n"""		4242681	0					
ANR	4244222	PrimaryExpression	"""trits   0t%s\\n"""		4242681	0					
ANR	4244223	Argument	out		4242681	1					
ANR	4244224	Identifier	out		4242681	0					
ANR	4244225	IfStatement	if ( * input == 'j' )		4242681	13					
ANR	4244226	Condition	* input == 'j'	607:7:19431:19444	4242681	0	True				
ANR	4244227	EqualityExpression	* input == 'j'		4242681	0		==			
ANR	4244228	UnaryOperationExpression	* input		4242681	0					
ANR	4244229	UnaryOperator	*		4242681	0					
ANR	4244230	Identifier	input		4242681	1					
ANR	4244231	PrimaryExpression	'j'		4242681	1					
ANR	4244232	CompoundStatement		222:23:5911:5911	4242681	1					
ANR	4244233	ExpressionStatement	pj_end ( pj )	608:4:19453:19464	4242681	0	True				
ANR	4244234	CallExpression	pj_end ( pj )		4242681	0					
ANR	4244235	Callee	pj_end		4242681	0					
ANR	4244236	Identifier	pj_end		4242681	0					
ANR	4244237	ArgumentList	pj		4242681	1					
ANR	4244238	Argument	pj		4242681	0					
ANR	4244239	Identifier	pj		4242681	0					
ANR	4244240	ExpressionStatement	free ( inputs )	610:3:19474:19487	4242681	14	True				
ANR	4244241	CallExpression	free ( inputs )		4242681	0					
ANR	4244242	Callee	free		4242681	0					
ANR	4244243	Identifier	free		4242681	0					
ANR	4244244	ArgumentList	inputs		4242681	1					
ANR	4244245	Argument	inputs		4242681	0					
ANR	4244246	Identifier	inputs		4242681	0					
ANR	4244247	ExpressionStatement	r_list_free ( list )	611:3:19492:19510	4242681	15	True				
ANR	4244248	CallExpression	r_list_free ( list )		4242681	0					
ANR	4244249	Callee	r_list_free		4242681	0					
ANR	4244250	Identifier	r_list_free		4242681	0					
ANR	4244251	ArgumentList	list		4242681	1					
ANR	4244252	Argument	list		4242681	0					
ANR	4244253	Identifier	list		4242681	0					
ANR	4244254	IfStatement	if ( pj )		4242681	16					
ANR	4244255	Condition	pj	612:7:19519:19520	4242681	0	True				
ANR	4244256	Identifier	pj		4242681	0					
ANR	4244257	CompoundStatement		227:11:5987:5987	4242681	1					
ANR	4244258	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	613:4:19529:19567	4242681	0	True				
ANR	4244259	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		4242681	0					
ANR	4244260	Callee	r_cons_printf		4242681	0					
ANR	4244261	Identifier	r_cons_printf		4242681	0					
ANR	4244262	ArgumentList	"""%s\\n"""		4242681	1					
ANR	4244263	Argument	"""%s\\n"""		4242681	0					
ANR	4244264	PrimaryExpression	"""%s\\n"""		4242681	0					
ANR	4244265	Argument	pj_string ( pj )		4242681	1					
ANR	4244266	CallExpression	pj_string ( pj )		4242681	0					
ANR	4244267	Callee	pj_string		4242681	0					
ANR	4244268	Identifier	pj_string		4242681	0					
ANR	4244269	ArgumentList	pj		4242681	1					
ANR	4244270	Argument	pj		4242681	0					
ANR	4244271	Identifier	pj		4242681	0					
ANR	4244272	ExpressionStatement	pj_free ( pj )	614:4:19573:19585	4242681	1	True				
ANR	4244273	CallExpression	pj_free ( pj )		4242681	0					
ANR	4244274	Callee	pj_free		4242681	0					
ANR	4244275	Identifier	pj_free		4242681	0					
ANR	4244276	ArgumentList	pj		4242681	1					
ANR	4244277	Argument	pj		4242681	0					
ANR	4244278	Identifier	pj		4242681	0					
ANR	4244279	BreakStatement	break ;	617:2:19598:19603	4242681	91	True				
ANR	4244280	Label	case 'q' :	618:1:19606:19614	4242681	92	True				
ANR	4244281	IfStatement	if ( core -> num -> dbz )		4242681	93					
ANR	4244282	Condition	core -> num -> dbz	619:6:19630:19643	4242681	0	True				
ANR	4244283	PtrMemberAccess	core -> num -> dbz		4242681	0					
ANR	4244284	PtrMemberAccess	core -> num		4242681	0					
ANR	4244285	Identifier	core		4242681	0					
ANR	4244286	Identifier	num		4242681	1					
ANR	4244287	Identifier	dbz		4242681	1					
ANR	4244288	CompoundStatement		234:22:6110:6110	4242681	1					
ANR	4244289	ExpressionStatement	"eprintf ( ""RNum ERROR: Division by Zero\\n"" )"	620:3:19651:19693	4242681	0	True				
ANR	4244290	CallExpression	"eprintf ( ""RNum ERROR: Division by Zero\\n"" )"		4242681	0					
ANR	4244291	Callee	eprintf		4242681	0					
ANR	4244292	Identifier	eprintf		4242681	0					
ANR	4244293	ArgumentList	"""RNum ERROR: Division by Zero\\n"""		4242681	1					
ANR	4244294	Argument	"""RNum ERROR: Division by Zero\\n"""		4242681	0					
ANR	4244295	PrimaryExpression	"""RNum ERROR: Division by Zero\\n"""		4242681	0					
ANR	4244296	IfStatement	if ( input [ 1 ] == '?' )		4242681	94					
ANR	4244297	Condition	input [ 1 ] == '?'	622:6:19705:19719	4242681	0	True				
ANR	4244298	EqualityExpression	input [ 1 ] == '?'		4242681	0		==			
ANR	4244299	ArrayIndexing	input [ 1 ]		4242681	0					
ANR	4244300	Identifier	input		4242681	0					
ANR	4244301	PrimaryExpression	1		4242681	1					
ANR	4244302	PrimaryExpression	'?'		4242681	1					
ANR	4244303	CompoundStatement		237:23:6186:6186	4242681	1					
ANR	4244304	Statement	r_cons_printf	623:3:19727:19739	4242681	0	True				
ANR	4244305	Statement	(	623:17:19741:19741	4242681	1	True				
ANR	4244306	Statement	"""|Usage: ?q [num]  # Update $? without printing anything\\n"""	623:18:19742:19800	4242681	2	True				
ANR	4244307	Statement	"""|?q 123; ?? x    # hexdump if 123 != 0"""	624:4:19806:19845	4242681	3	True				
ANR	4244308	Statement	)	624:44:19846:19846	4242681	4	True				
ANR	4244309	ExpressionStatement		624:45:19847:19847	4242681	5	True				
ANR	4244310	ElseStatement	else		4242681	0					
ANR	4244311	CompoundStatement		241:3:6327:6366	4242681	0					
ANR	4244312	IdentifierDeclStatement	"const char * space = strchr ( input , ' ' ) ;"	626:3:19863:19902	4242681	0	True				
ANR	4244313	IdentifierDecl	"* space = strchr ( input , ' ' )"		4242681	0					
ANR	4244314	IdentifierDeclType	const char *		4242681	0					
ANR	4244315	Identifier	space		4242681	1					
ANR	4244316	AssignmentExpression	"* space = strchr ( input , ' ' )"		4242681	2		=			
ANR	4244317	Identifier	space		4242681	0					
ANR	4244318	CallExpression	"strchr ( input , ' ' )"		4242681	1					
ANR	4244319	Callee	strchr		4242681	0					
ANR	4244320	Identifier	strchr		4242681	0					
ANR	4244321	ArgumentList	input		4242681	1					
ANR	4244322	Argument	input		4242681	0					
ANR	4244323	Identifier	input		4242681	0					
ANR	4244324	Argument	' '		4242681	1					
ANR	4244325	PrimaryExpression	' '		4242681	0					
ANR	4244326	IfStatement	if ( space )		4242681	1					
ANR	4244327	Condition	space	627:7:19911:19915	4242681	0	True				
ANR	4244328	Identifier	space		4242681	0					
ANR	4244329	CompoundStatement		242:14:6382:6382	4242681	1					
ANR	4244330	ExpressionStatement	"n = r_num_math ( core -> num , space + 1 )"	628:4:19924:19961	4242681	0	True				
ANR	4244331	AssignmentExpression	"n = r_num_math ( core -> num , space + 1 )"		4242681	0		=			
ANR	4244332	Identifier	n		4242681	0					
ANR	4244333	CallExpression	"r_num_math ( core -> num , space + 1 )"		4242681	1					
ANR	4244334	Callee	r_num_math		4242681	0					
ANR	4244335	Identifier	r_num_math		4242681	0					
ANR	4244336	ArgumentList	core -> num		4242681	1					
ANR	4244337	Argument	core -> num		4242681	0					
ANR	4244338	PtrMemberAccess	core -> num		4242681	0					
ANR	4244339	Identifier	core		4242681	0					
ANR	4244340	Identifier	num		4242681	1					
ANR	4244341	Argument	space + 1		4242681	1					
ANR	4244342	AdditiveExpression	space + 1		4242681	0		+			
ANR	4244343	Identifier	space		4242681	0					
ANR	4244344	PrimaryExpression	1		4242681	1					
ANR	4244345	ElseStatement	else		4242681	0					
ANR	4244346	CompoundStatement		244:10:6437:6437	4242681	0					
ANR	4244347	ExpressionStatement	"n = r_num_math ( core -> num , ""$?"" )"	630:4:19979:20011	4242681	0	True				
ANR	4244348	AssignmentExpression	"n = r_num_math ( core -> num , ""$?"" )"		4242681	0		=			
ANR	4244349	Identifier	n		4242681	0					
ANR	4244350	CallExpression	"r_num_math ( core -> num , ""$?"" )"		4242681	1					
ANR	4244351	Callee	r_num_math		4242681	0					
ANR	4244352	Identifier	r_num_math		4242681	0					
ANR	4244353	ArgumentList	core -> num		4242681	1					
ANR	4244354	Argument	core -> num		4242681	0					
ANR	4244355	PtrMemberAccess	core -> num		4242681	0					
ANR	4244356	Identifier	core		4242681	0					
ANR	4244357	Identifier	num		4242681	1					
ANR	4244358	Argument	"""$?"""		4242681	1					
ANR	4244359	PrimaryExpression	"""$?"""		4242681	0					
ANR	4244360	ExpressionStatement	core -> num -> value = n	632:3:20021:20041	4242681	2	True				
ANR	4244361	AssignmentExpression	core -> num -> value = n		4242681	0		=			
ANR	4244362	PtrMemberAccess	core -> num -> value		4242681	0					
ANR	4244363	PtrMemberAccess	core -> num		4242681	0					
ANR	4244364	Identifier	core		4242681	0					
ANR	4244365	Identifier	num		4242681	1					
ANR	4244366	Identifier	value		4242681	1					
ANR	4244367	Identifier	n		4242681	1					
ANR	4244368	BreakStatement	break ;	634:2:20062:20067	4242681	95	True				
ANR	4244369	Label	case 'v' :	635:1:20070:20078	4242681	96	True				
ANR	4244370	CompoundStatement		252:3:6559:6598	4242681	97					
ANR	4244371	IdentifierDeclStatement	"const char * space = strchr ( input , ' ' ) ;"	637:3:20095:20134	4242681	0	True				
ANR	4244372	IdentifierDecl	"* space = strchr ( input , ' ' )"		4242681	0					
ANR	4244373	IdentifierDeclType	const char *		4242681	0					
ANR	4244374	Identifier	space		4242681	1					
ANR	4244375	AssignmentExpression	"* space = strchr ( input , ' ' )"		4242681	2		=			
ANR	4244376	Identifier	space		4242681	0					
ANR	4244377	CallExpression	"strchr ( input , ' ' )"		4242681	1					
ANR	4244378	Callee	strchr		4242681	0					
ANR	4244379	Identifier	strchr		4242681	0					
ANR	4244380	ArgumentList	input		4242681	1					
ANR	4244381	Argument	input		4242681	0					
ANR	4244382	Identifier	input		4242681	0					
ANR	4244383	Argument	' '		4242681	1					
ANR	4244384	PrimaryExpression	' '		4242681	0					
ANR	4244385	IfStatement	if ( space )		4242681	1					
ANR	4244386	Condition	space	638:7:20143:20147	4242681	0	True				
ANR	4244387	Identifier	space		4242681	0					
ANR	4244388	CompoundStatement		253:14:6614:6614	4242681	1					
ANR	4244389	ExpressionStatement	"n = r_num_math ( core -> num , space + 1 )"	639:4:20156:20193	4242681	0	True				
ANR	4244390	AssignmentExpression	"n = r_num_math ( core -> num , space + 1 )"		4242681	0		=			
ANR	4244391	Identifier	n		4242681	0					
ANR	4244392	CallExpression	"r_num_math ( core -> num , space + 1 )"		4242681	1					
ANR	4244393	Callee	r_num_math		4242681	0					
ANR	4244394	Identifier	r_num_math		4242681	0					
ANR	4244395	ArgumentList	core -> num		4242681	1					
ANR	4244396	Argument	core -> num		4242681	0					
ANR	4244397	PtrMemberAccess	core -> num		4242681	0					
ANR	4244398	Identifier	core		4242681	0					
ANR	4244399	Identifier	num		4242681	1					
ANR	4244400	Argument	space + 1		4242681	1					
ANR	4244401	AdditiveExpression	space + 1		4242681	0		+			
ANR	4244402	Identifier	space		4242681	0					
ANR	4244403	PrimaryExpression	1		4242681	1					
ANR	4244404	ElseStatement	else		4242681	0					
ANR	4244405	CompoundStatement		255:10:6669:6669	4242681	0					
ANR	4244406	ExpressionStatement	"n = r_num_math ( core -> num , ""$?"" )"	641:4:20211:20243	4242681	0	True				
ANR	4244407	AssignmentExpression	"n = r_num_math ( core -> num , ""$?"" )"		4242681	0		=			
ANR	4244408	Identifier	n		4242681	0					
ANR	4244409	CallExpression	"r_num_math ( core -> num , ""$?"" )"		4242681	1					
ANR	4244410	Callee	r_num_math		4242681	0					
ANR	4244411	Identifier	r_num_math		4242681	0					
ANR	4244412	ArgumentList	core -> num		4242681	1					
ANR	4244413	Argument	core -> num		4242681	0					
ANR	4244414	PtrMemberAccess	core -> num		4242681	0					
ANR	4244415	Identifier	core		4242681	0					
ANR	4244416	Identifier	num		4242681	1					
ANR	4244417	Argument	"""$?"""		4242681	1					
ANR	4244418	PrimaryExpression	"""$?"""		4242681	0					
ANR	4244419	IfStatement	if ( core -> num -> dbz )		4242681	98					
ANR	4244420	Condition	core -> num -> dbz	644:6:20260:20273	4242681	0	True				
ANR	4244421	PtrMemberAccess	core -> num -> dbz		4242681	0					
ANR	4244422	PtrMemberAccess	core -> num		4242681	0					
ANR	4244423	Identifier	core		4242681	0					
ANR	4244424	Identifier	num		4242681	1					
ANR	4244425	Identifier	dbz		4242681	1					
ANR	4244426	CompoundStatement		259:22:6740:6740	4242681	1					
ANR	4244427	ExpressionStatement	"eprintf ( ""RNum ERROR: Division by Zero\\n"" )"	645:3:20281:20323	4242681	0	True				
ANR	4244428	CallExpression	"eprintf ( ""RNum ERROR: Division by Zero\\n"" )"		4242681	0					
ANR	4244429	Callee	eprintf		4242681	0					
ANR	4244430	Identifier	eprintf		4242681	0					
ANR	4244431	ArgumentList	"""RNum ERROR: Division by Zero\\n"""		4242681	1					
ANR	4244432	Argument	"""RNum ERROR: Division by Zero\\n"""		4242681	0					
ANR	4244433	PrimaryExpression	"""RNum ERROR: Division by Zero\\n"""		4242681	0					
ANR	4244434	SwitchStatement	switch ( input [ 1 ] )		4242681	99					
ANR	4244435	Condition	input [ 1 ]	647:10:20339:20346	4242681	0	True				
ANR	4244436	ArrayIndexing	input [ 1 ]		4242681	0					
ANR	4244437	Identifier	input		4242681	0					
ANR	4244438	PrimaryExpression	1		4242681	1					
ANR	4244439	CompoundStatement		262:20:6813:6813	4242681	1					
ANR	4244440	Label	case '?' :	648:2:20353:20361	4242681	0	True				
ANR	4244441	Statement	r_cons_printf	649:3:20366:20378	4242681	1	True				
ANR	4244442	Statement	(	649:17:20380:20380	4242681	2	True				
ANR	4244443	Statement	"""|Usage: ?v[id][ num]  # Show value\\n"""	649:18:20381:20418	4242681	3	True				
ANR	4244444	Statement	"""|?vx number  -> show 8 digit padding in hex\\n"""	650:4:20424:20470	4242681	4	True				
ANR	4244445	Statement	"""|?vi1 200    -> 1 byte size value (char)\\n"""	651:4:20476:20519	4242681	5	True				
ANR	4244446	Statement	"""|?vi2 0xffff -> 2 byte size value (short)\\n"""	652:4:20525:20569	4242681	6	True				
ANR	4244447	Statement	"""|?vi4 0xffff -> 4 byte size value (int)\\n"""	653:4:20575:20617	4242681	7	True				
ANR	4244448	Statement	"""|?vi8 0xffff -> 8 byte size value (st64)\\n"""	654:4:20623:20666	4242681	8	True				
ANR	4244449	Statement	"""| No argument shows $? value\\n"""	655:4:20672:20703	4242681	9	True				
ANR	4244450	Statement	"""|?vi will show in decimal instead of hex\\n"""	656:4:20709:20752	4242681	10	True				
ANR	4244451	Statement	)	656:48:20753:20753	4242681	11	True				
ANR	4244452	ExpressionStatement		656:49:20754:20754	4242681	12	True				
ANR	4244453	BreakStatement	break ;	657:3:20759:20764	4242681	13	True				
ANR	4244454	Label	case '\\0' :	658:2:20768:20777	4242681	14	True				
ANR	4244455	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , ( st32 ) n )"	659:3:20782:20813	4242681	15	True				
ANR	4244456	CallExpression	"r_cons_printf ( ""%d\\n"" , ( st32 ) n )"		4242681	0					
ANR	4244457	Callee	r_cons_printf		4242681	0					
ANR	4244458	Identifier	r_cons_printf		4242681	0					
ANR	4244459	ArgumentList	"""%d\\n"""		4242681	1					
ANR	4244460	Argument	"""%d\\n"""		4242681	0					
ANR	4244461	PrimaryExpression	"""%d\\n"""		4242681	0					
ANR	4244462	Argument	( st32 ) n		4242681	1					
ANR	4244463	CastExpression	( st32 ) n		4242681	0					
ANR	4244464	CastTarget	st32		4242681	0					
ANR	4244465	Identifier	n		4242681	1					
ANR	4244466	BreakStatement	break ;	660:3:20818:20823	4242681	16	True				
ANR	4244467	Label	case 'x' :	661:2:20827:20835	4242681	17	True				
ANR	4244468	Statement	r_cons_printf	662:3:20849:20861	4242681	18	True				
ANR	4244469	Statement	(	662:17:20863:20863	4242681	19	True				
ANR	4244470	Statement	"""0x%08"""	662:18:20864:20870	4242681	20	True				
ANR	4244471	Statement	PFMT64x	662:25:20871:20877	4242681	21	True				
ANR	4244472	Statement	"""\\n"""	662:32:20878:20881	4242681	22	True				
ANR	4244473	Statement	","	662:36:20882:20882	4242681	23	True				
ANR	4244474	Statement	n	662:38:20884:20884	4242681	24	True				
ANR	4244475	Statement	)	662:39:20885:20885	4242681	25	True				
ANR	4244476	ExpressionStatement		662:40:20886:20886	4242681	26	True				
ANR	4244477	BreakStatement	break ;	663:3:20891:20896	4242681	27	True				
ANR	4244478	Label	case 'i' :	664:2:20900:20908	4242681	28	True				
ANR	4244479	SwitchStatement	switch ( input [ 2 ] )		4242681	29					
ANR	4244480	Condition	input [ 2 ]	665:11:20930:20937	4242681	0	True				
ANR	4244481	ArrayIndexing	input [ 2 ]		4242681	0					
ANR	4244482	Identifier	input		4242681	0					
ANR	4244483	PrimaryExpression	2		4242681	1					
ANR	4244484	CompoundStatement		280:21:7404:7404	4242681	1					
ANR	4244485	Label	case '1' :	666:3:20945:20953	4242681	0	True				
ANR	4244486	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , ( st8 ) ( n & UT8_MAX ) )"	667:4:20967:21009	4242681	1	True				
ANR	4244487	CallExpression	"r_cons_printf ( ""%d\\n"" , ( st8 ) ( n & UT8_MAX ) )"		4242681	0					
ANR	4244488	Callee	r_cons_printf		4242681	0					
ANR	4244489	Identifier	r_cons_printf		4242681	0					
ANR	4244490	ArgumentList	"""%d\\n"""		4242681	1					
ANR	4244491	Argument	"""%d\\n"""		4242681	0					
ANR	4244492	PrimaryExpression	"""%d\\n"""		4242681	0					
ANR	4244493	Argument	( st8 ) ( n & UT8_MAX )		4242681	1					
ANR	4244494	CastExpression	( st8 ) ( n & UT8_MAX )		4242681	0					
ANR	4244495	CastTarget	st8		4242681	0					
ANR	4244496	BitAndExpression	n & UT8_MAX		4242681	1		&			
ANR	4244497	Identifier	n		4242681	0					
ANR	4244498	Identifier	UT8_MAX		4242681	1					
ANR	4244499	BreakStatement	break ;	668:4:21015:21020	4242681	2	True				
ANR	4244500	Label	case '2' :	669:3:21025:21033	4242681	3	True				
ANR	4244501	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , ( st16 ) ( n & UT16_MAX ) )"	670:4:21047:21091	4242681	4	True				
ANR	4244502	CallExpression	"r_cons_printf ( ""%d\\n"" , ( st16 ) ( n & UT16_MAX ) )"		4242681	0					
ANR	4244503	Callee	r_cons_printf		4242681	0					
ANR	4244504	Identifier	r_cons_printf		4242681	0					
ANR	4244505	ArgumentList	"""%d\\n"""		4242681	1					
ANR	4244506	Argument	"""%d\\n"""		4242681	0					
ANR	4244507	PrimaryExpression	"""%d\\n"""		4242681	0					
ANR	4244508	Argument	( st16 ) ( n & UT16_MAX )		4242681	1					
ANR	4244509	CastExpression	( st16 ) ( n & UT16_MAX )		4242681	0					
ANR	4244510	CastTarget	st16		4242681	0					
ANR	4244511	BitAndExpression	n & UT16_MAX		4242681	1		&			
ANR	4244512	Identifier	n		4242681	0					
ANR	4244513	Identifier	UT16_MAX		4242681	1					
ANR	4244514	BreakStatement	break ;	671:4:21097:21102	4242681	5	True				
ANR	4244515	Label	case '4' :	672:3:21107:21115	4242681	6	True				
ANR	4244516	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , ( st32 ) ( n & UT32_MAX ) )"	673:4:21130:21174	4242681	7	True				
ANR	4244517	CallExpression	"r_cons_printf ( ""%d\\n"" , ( st32 ) ( n & UT32_MAX ) )"		4242681	0					
ANR	4244518	Callee	r_cons_printf		4242681	0					
ANR	4244519	Identifier	r_cons_printf		4242681	0					
ANR	4244520	ArgumentList	"""%d\\n"""		4242681	1					
ANR	4244521	Argument	"""%d\\n"""		4242681	0					
ANR	4244522	PrimaryExpression	"""%d\\n"""		4242681	0					
ANR	4244523	Argument	( st32 ) ( n & UT32_MAX )		4242681	1					
ANR	4244524	CastExpression	( st32 ) ( n & UT32_MAX )		4242681	0					
ANR	4244525	CastTarget	st32		4242681	0					
ANR	4244526	BitAndExpression	n & UT32_MAX		4242681	1		&			
ANR	4244527	Identifier	n		4242681	0					
ANR	4244528	Identifier	UT32_MAX		4242681	1					
ANR	4244529	BreakStatement	break ;	674:4:21180:21185	4242681	8	True				
ANR	4244530	Label	case '8' :	675:3:21190:21198	4242681	9	True				
ANR	4244531	Statement	r_cons_printf	676:4:21213:21225	4242681	10	True				
ANR	4244532	Statement	(	676:18:21227:21227	4242681	11	True				
ANR	4244533	Statement	"""%"""	676:19:21228:21230	4242681	12	True				
ANR	4244534	Statement	PFMT64d	676:22:21231:21237	4242681	13	True				
ANR	4244535	Statement	"""\\n"""	676:29:21238:21241	4242681	14	True				
ANR	4244536	Statement	","	676:33:21242:21242	4242681	15	True				
ANR	4244537	Statement	(	676:35:21244:21244	4242681	16	True				
ANR	4244538	Statement	st64	676:36:21245:21248	4242681	17	True				
ANR	4244539	Statement	)	676:40:21249:21249	4242681	18	True				
ANR	4244540	Statement	(	676:41:21250:21250	4242681	19	True				
ANR	4244541	Statement	n	676:42:21251:21251	4242681	20	True				
ANR	4244542	Statement	&	676:44:21253:21253	4242681	21	True				
ANR	4244543	Statement	UT64_MAX	676:46:21255:21262	4242681	22	True				
ANR	4244544	Statement	)	676:54:21263:21263	4242681	23	True				
ANR	4244545	Statement	)	676:55:21264:21264	4242681	24	True				
ANR	4244546	ExpressionStatement		676:56:21265:21265	4242681	25	True				
ANR	4244547	BreakStatement	break ;	677:4:21271:21276	4242681	26	True				
ANR	4244548	Label	default :	678:3:21281:21288	4242681	27	True				
ANR	4244549	Identifier	default		4242681	0					
ANR	4244550	Statement	r_cons_printf	679:4:21294:21306	4242681	28	True				
ANR	4244551	Statement	(	679:18:21308:21308	4242681	29	True				
ANR	4244552	Statement	"""%"""	679:19:21309:21311	4242681	30	True				
ANR	4244553	Statement	PFMT64d	679:22:21312:21318	4242681	31	True				
ANR	4244554	Statement	"""\\n"""	679:29:21319:21322	4242681	32	True				
ANR	4244555	Statement	","	679:33:21323:21323	4242681	33	True				
ANR	4244556	Statement	n	679:35:21325:21325	4242681	34	True				
ANR	4244557	Statement	)	679:36:21326:21326	4242681	35	True				
ANR	4244558	ExpressionStatement		679:37:21327:21327	4242681	36	True				
ANR	4244559	BreakStatement	break ;	680:4:21333:21338	4242681	37	True				
ANR	4244560	BreakStatement	break ;	682:3:21348:21353	4242681	30	True				
ANR	4244561	Label	case 'd' :	683:2:21357:21365	4242681	31	True				
ANR	4244562	Statement	r_cons_printf	684:3:21370:21382	4242681	32	True				
ANR	4244563	Statement	(	684:17:21384:21384	4242681	33	True				
ANR	4244564	Statement	"""%"""	684:18:21385:21387	4242681	34	True				
ANR	4244565	Statement	PFMT64d	684:21:21388:21394	4242681	35	True				
ANR	4244566	Statement	"""\\n"""	684:28:21395:21398	4242681	36	True				
ANR	4244567	Statement	","	684:32:21399:21399	4242681	37	True				
ANR	4244568	Statement	n	684:34:21401:21401	4242681	38	True				
ANR	4244569	Statement	)	684:35:21402:21402	4242681	39	True				
ANR	4244570	ExpressionStatement		684:36:21403:21403	4242681	40	True				
ANR	4244571	BreakStatement	break ;	685:3:21408:21413	4242681	41	True				
ANR	4244572	Label	default :	686:2:21417:21424	4242681	42	True				
ANR	4244573	Identifier	default		4242681	0					
ANR	4244574	Statement	r_cons_printf	687:3:21429:21441	4242681	43	True				
ANR	4244575	Statement	(	687:17:21443:21443	4242681	44	True				
ANR	4244576	Statement	"""0x%"""	687:18:21444:21448	4242681	45	True				
ANR	4244577	Statement	PFMT64x	687:23:21449:21455	4242681	46	True				
ANR	4244578	Statement	"""\\n"""	687:30:21456:21459	4242681	47	True				
ANR	4244579	Statement	","	687:34:21460:21460	4242681	48	True				
ANR	4244580	Statement	n	687:36:21462:21462	4242681	49	True				
ANR	4244581	Statement	)	687:37:21463:21463	4242681	50	True				
ANR	4244582	ExpressionStatement		687:38:21464:21464	4242681	51	True				
ANR	4244583	ExpressionStatement	core -> num -> value = n	689:2:21472:21492	4242681	100	True				
ANR	4244584	AssignmentExpression	core -> num -> value = n		4242681	0		=			
ANR	4244585	PtrMemberAccess	core -> num -> value		4242681	0					
ANR	4244586	PtrMemberAccess	core -> num		4242681	0					
ANR	4244587	Identifier	core		4242681	0					
ANR	4244588	Identifier	num		4242681	1					
ANR	4244589	Identifier	value		4242681	1					
ANR	4244590	Identifier	n		4242681	1					
ANR	4244591	BreakStatement	break ;	690:2:21509:21514	4242681	101	True				
ANR	4244592	Label	case '=' :	691:1:21517:21525	4242681	102	True				
ANR	4244593	IfStatement	if ( input [ 1 ] )		4242681	103					
ANR	4244594	Condition	input [ 1 ]	692:6:21556:21563	4242681	0	True				
ANR	4244595	ArrayIndexing	input [ 1 ]		4242681	0					
ANR	4244596	Identifier	input		4242681	0					
ANR	4244597	PrimaryExpression	1		4242681	1					
ANR	4244598	CompoundStatement		307:16:8030:8030	4242681	1					
ANR	4244599	ExpressionStatement	"r_num_math ( core -> num , input + 1 )"	693:3:21571:21602	4242681	0	True				
ANR	4244600	CallExpression	"r_num_math ( core -> num , input + 1 )"		4242681	0					
ANR	4244601	Callee	r_num_math		4242681	0					
ANR	4244602	Identifier	r_num_math		4242681	0					
ANR	4244603	ArgumentList	core -> num		4242681	1					
ANR	4244604	Argument	core -> num		4242681	0					
ANR	4244605	PtrMemberAccess	core -> num		4242681	0					
ANR	4244606	Identifier	core		4242681	0					
ANR	4244607	Identifier	num		4242681	1					
ANR	4244608	Argument	input + 1		4242681	1					
ANR	4244609	AdditiveExpression	input + 1		4242681	0		+			
ANR	4244610	Identifier	input		4242681	0					
ANR	4244611	PrimaryExpression	1		4242681	1					
ANR	4244612	ElseStatement	else		4242681	0					
ANR	4244613	CompoundStatement		309:9:8077:8077	4242681	0					
ANR	4244614	Statement	r_cons_printf	695:3:21618:21630	4242681	0	True				
ANR	4244615	Statement	(	695:17:21632:21632	4242681	1	True				
ANR	4244616	Statement	"""0x%"""	695:18:21633:21637	4242681	2	True				
ANR	4244617	Statement	PFMT64x	695:23:21638:21644	4242681	3	True				
ANR	4244618	Statement	"""\\n"""	695:30:21645:21648	4242681	4	True				
ANR	4244619	Statement	","	695:34:21649:21649	4242681	5	True				
ANR	4244620	Statement	core	695:36:21651:21654	4242681	6	True				
ANR	4244621	Statement	->	695:40:21655:21656	4242681	7	True				
ANR	4244622	Statement	num	695:42:21657:21659	4242681	8	True				
ANR	4244623	Statement	->	695:45:21660:21661	4242681	9	True				
ANR	4244624	Statement	value	695:47:21662:21666	4242681	10	True				
ANR	4244625	Statement	)	695:52:21667:21667	4242681	11	True				
ANR	4244626	ExpressionStatement		695:53:21668:21668	4242681	12	True				
ANR	4244627	BreakStatement	break ;	697:2:21676:21681	4242681	104	True				
ANR	4244628	Label	case '+' :	698:1:21684:21692	4242681	105	True				
ANR	4244629	IfStatement	if ( input [ 1 ] )		4242681	106					
ANR	4244630	Condition	input [ 1 ]	699:6:21708:21715	4242681	0	True				
ANR	4244631	ArrayIndexing	input [ 1 ]		4242681	0					
ANR	4244632	Identifier	input		4242681	0					
ANR	4244633	PrimaryExpression	1		4242681	1					
ANR	4244634	CompoundStatement		315:3:8187:8218	4242681	1					
ANR	4244635	IdentifierDeclStatement	st64 n = ( st64 ) core -> num -> value ;	700:3:21723:21754	4242681	0	True				
ANR	4244636	IdentifierDecl	n = ( st64 ) core -> num -> value		4242681	0					
ANR	4244637	IdentifierDeclType	st64		4242681	0					
ANR	4244638	Identifier	n		4242681	1					
ANR	4244639	AssignmentExpression	n = ( st64 ) core -> num -> value		4242681	2		=			
ANR	4244640	Identifier	n		4242681	0					
ANR	4244641	CastExpression	( st64 ) core -> num -> value		4242681	1					
ANR	4244642	CastTarget	st64		4242681	0					
ANR	4244643	PtrMemberAccess	core -> num -> value		4242681	1					
ANR	4244644	PtrMemberAccess	core -> num		4242681	0					
ANR	4244645	Identifier	core		4242681	0					
ANR	4244646	Identifier	num		4242681	1					
ANR	4244647	Identifier	value		4242681	1					
ANR	4244648	IfStatement	if ( n > 0 )		4242681	1					
ANR	4244649	Condition	n > 0	701:7:21763:21767	4242681	0	True				
ANR	4244650	RelationalExpression	n > 0		4242681	0		>			
ANR	4244651	Identifier	n		4242681	0					
ANR	4244652	PrimaryExpression	0		4242681	1					
ANR	4244653	CompoundStatement		316:14:8234:8234	4242681	1					
ANR	4244654	ExpressionStatement	"r_core_cmd ( core , input + 1 , 0 )"	702:4:21776:21807	4242681	0	True				
ANR	4244655	CallExpression	"r_core_cmd ( core , input + 1 , 0 )"		4242681	0					
ANR	4244656	Callee	r_core_cmd		4242681	0					
ANR	4244657	Identifier	r_core_cmd		4242681	0					
ANR	4244658	ArgumentList	core		4242681	1					
ANR	4244659	Argument	core		4242681	0					
ANR	4244660	Identifier	core		4242681	0					
ANR	4244661	Argument	input + 1		4242681	1					
ANR	4244662	AdditiveExpression	input + 1		4242681	0		+			
ANR	4244663	Identifier	input		4242681	0					
ANR	4244664	PrimaryExpression	1		4242681	1					
ANR	4244665	Argument	0		4242681	2					
ANR	4244666	PrimaryExpression	0		4242681	0					
ANR	4244667	ElseStatement	else		4242681	0					
ANR	4244668	CompoundStatement		319:9:8287:8287	4242681	0					
ANR	4244669	Statement	r_cons_printf	705:3:21828:21840	4242681	0	True				
ANR	4244670	Statement	(	705:17:21842:21842	4242681	1	True				
ANR	4244671	Statement	"""0x%"""	705:18:21843:21847	4242681	2	True				
ANR	4244672	Statement	PFMT64x	705:23:21848:21854	4242681	3	True				
ANR	4244673	Statement	"""\\n"""	705:30:21855:21858	4242681	4	True				
ANR	4244674	Statement	","	705:34:21859:21859	4242681	5	True				
ANR	4244675	Statement	core	705:36:21861:21864	4242681	6	True				
ANR	4244676	Statement	->	705:40:21865:21866	4242681	7	True				
ANR	4244677	Statement	num	705:42:21867:21869	4242681	8	True				
ANR	4244678	Statement	->	705:45:21870:21871	4242681	9	True				
ANR	4244679	Statement	value	705:47:21872:21876	4242681	10	True				
ANR	4244680	Statement	)	705:52:21877:21877	4242681	11	True				
ANR	4244681	ExpressionStatement		705:53:21878:21878	4242681	12	True				
ANR	4244682	BreakStatement	break ;	707:2:21886:21891	4242681	107	True				
ANR	4244683	Label	case '-' :	708:1:21894:21902	4242681	108	True				
ANR	4244684	IfStatement	if ( input [ 1 ] )		4242681	109					
ANR	4244685	Condition	input [ 1 ]	709:6:21918:21925	4242681	0	True				
ANR	4244686	ArrayIndexing	input [ 1 ]		4242681	0					
ANR	4244687	Identifier	input		4242681	0					
ANR	4244688	PrimaryExpression	1		4242681	1					
ANR	4244689	CompoundStatement		325:3:8397:8428	4242681	1					
ANR	4244690	IdentifierDeclStatement	st64 n = ( st64 ) core -> num -> value ;	710:3:21933:21964	4242681	0	True				
ANR	4244691	IdentifierDecl	n = ( st64 ) core -> num -> value		4242681	0					
ANR	4244692	IdentifierDeclType	st64		4242681	0					
ANR	4244693	Identifier	n		4242681	1					
ANR	4244694	AssignmentExpression	n = ( st64 ) core -> num -> value		4242681	2		=			
ANR	4244695	Identifier	n		4242681	0					
ANR	4244696	CastExpression	( st64 ) core -> num -> value		4242681	1					
ANR	4244697	CastTarget	st64		4242681	0					
ANR	4244698	PtrMemberAccess	core -> num -> value		4242681	1					
ANR	4244699	PtrMemberAccess	core -> num		4242681	0					
ANR	4244700	Identifier	core		4242681	0					
ANR	4244701	Identifier	num		4242681	1					
ANR	4244702	Identifier	value		4242681	1					
ANR	4244703	IfStatement	if ( n < 0 )		4242681	1					
ANR	4244704	Condition	n < 0	711:7:21973:21977	4242681	0	True				
ANR	4244705	RelationalExpression	n < 0		4242681	0		<			
ANR	4244706	Identifier	n		4242681	0					
ANR	4244707	PrimaryExpression	0		4242681	1					
ANR	4244708	CompoundStatement		326:14:8444:8444	4242681	1					
ANR	4244709	ExpressionStatement	"r_core_cmd ( core , input + 1 , 0 )"	712:4:21986:22017	4242681	0	True				
ANR	4244710	CallExpression	"r_core_cmd ( core , input + 1 , 0 )"		4242681	0					
ANR	4244711	Callee	r_core_cmd		4242681	0					
ANR	4244712	Identifier	r_core_cmd		4242681	0					
ANR	4244713	ArgumentList	core		4242681	1					
ANR	4244714	Argument	core		4242681	0					
ANR	4244715	Identifier	core		4242681	0					
ANR	4244716	Argument	input + 1		4242681	1					
ANR	4244717	AdditiveExpression	input + 1		4242681	0		+			
ANR	4244718	Identifier	input		4242681	0					
ANR	4244719	PrimaryExpression	1		4242681	1					
ANR	4244720	Argument	0		4242681	2					
ANR	4244721	PrimaryExpression	0		4242681	0					
ANR	4244722	ElseStatement	else		4242681	0					
ANR	4244723	CompoundStatement		329:9:8497:8497	4242681	0					
ANR	4244724	Statement	r_cons_printf	715:3:22038:22050	4242681	0	True				
ANR	4244725	Statement	(	715:17:22052:22052	4242681	1	True				
ANR	4244726	Statement	"""0x%"""	715:18:22053:22057	4242681	2	True				
ANR	4244727	Statement	PFMT64x	715:23:22058:22064	4242681	3	True				
ANR	4244728	Statement	"""\\n"""	715:30:22065:22068	4242681	4	True				
ANR	4244729	Statement	","	715:34:22069:22069	4242681	5	True				
ANR	4244730	Statement	core	715:36:22071:22074	4242681	6	True				
ANR	4244731	Statement	->	715:40:22075:22076	4242681	7	True				
ANR	4244732	Statement	num	715:42:22077:22079	4242681	8	True				
ANR	4244733	Statement	->	715:45:22080:22081	4242681	9	True				
ANR	4244734	Statement	value	715:47:22082:22086	4242681	10	True				
ANR	4244735	Statement	)	715:52:22087:22087	4242681	11	True				
ANR	4244736	ExpressionStatement		715:53:22088:22088	4242681	12	True				
ANR	4244737	BreakStatement	break ;	717:2:22096:22101	4242681	110	True				
ANR	4244738	Label	case '!' :	718:1:22104:22112	4242681	111	True				
ANR	4244739	IfStatement	if ( input [ 1 ] )		4242681	112					
ANR	4244740	Condition	input [ 1 ]	719:6:22128:22135	4242681	0	True				
ANR	4244741	ArrayIndexing	input [ 1 ]		4242681	0					
ANR	4244742	Identifier	input		4242681	0					
ANR	4244743	PrimaryExpression	1		4242681	1					
ANR	4244744	CompoundStatement		334:16:8602:8602	4242681	1					
ANR	4244745	IfStatement	if ( ! core -> num -> value )		4242681	0					
ANR	4244746	Condition	! core -> num -> value	720:7:22147:22163	4242681	0	True				
ANR	4244747	UnaryOperationExpression	! core -> num -> value		4242681	0					
ANR	4244748	UnaryOperator	!		4242681	0					
ANR	4244749	PtrMemberAccess	core -> num -> value		4242681	1					
ANR	4244750	PtrMemberAccess	core -> num		4242681	0					
ANR	4244751	Identifier	core		4242681	0					
ANR	4244752	Identifier	num		4242681	1					
ANR	4244753	Identifier	value		4242681	1					
ANR	4244754	CompoundStatement		335:26:8630:8630	4242681	1					
ANR	4244755	IfStatement	if ( input [ 1 ] == '?' )		4242681	0					
ANR	4244756	Condition	input [ 1 ] == '?'	721:8:22176:22190	4242681	0	True				
ANR	4244757	EqualityExpression	input [ 1 ] == '?'		4242681	0		==			
ANR	4244758	ArrayIndexing	input [ 1 ]		4242681	0					
ANR	4244759	Identifier	input		4242681	0					
ANR	4244760	PrimaryExpression	1		4242681	1					
ANR	4244761	PrimaryExpression	'?'		4242681	1					
ANR	4244762	CompoundStatement		336:25:8657:8657	4242681	1					
ANR	4244763	ExpressionStatement	cmd_help_exclamation ( core )	722:5:22200:22227	4242681	0	True				
ANR	4244764	CallExpression	cmd_help_exclamation ( core )		4242681	0					
ANR	4244765	Callee	cmd_help_exclamation		4242681	0					
ANR	4244766	Identifier	cmd_help_exclamation		4242681	0					
ANR	4244767	ArgumentList	core		4242681	1					
ANR	4244768	Argument	core		4242681	0					
ANR	4244769	Identifier	core		4242681	0					
ANR	4244770	ReturnStatement	return 0 ;	723:5:22234:22242	4242681	1	True				
ANR	4244771	PrimaryExpression	0		4242681	0					
ANR	4244772	ElseStatement	else		4242681	0					
ANR	4244773	CompoundStatement		339:11:8719:8719	4242681	0					
ANR	4244774	ReturnStatement	"return core -> num -> value = r_core_cmd ( core , input + 1 , 0 ) ;"	725:5:22262:22317	4242681	0	True				
ANR	4244775	AssignmentExpression	"core -> num -> value = r_core_cmd ( core , input + 1 , 0 )"		4242681	0		=			
ANR	4244776	PtrMemberAccess	core -> num -> value		4242681	0					
ANR	4244777	PtrMemberAccess	core -> num		4242681	0					
ANR	4244778	Identifier	core		4242681	0					
ANR	4244779	Identifier	num		4242681	1					
ANR	4244780	Identifier	value		4242681	1					
ANR	4244781	CallExpression	"r_core_cmd ( core , input + 1 , 0 )"		4242681	1					
ANR	4244782	Callee	r_core_cmd		4242681	0					
ANR	4244783	Identifier	r_core_cmd		4242681	0					
ANR	4244784	ArgumentList	core		4242681	1					
ANR	4244785	Argument	core		4242681	0					
ANR	4244786	Identifier	core		4242681	0					
ANR	4244787	Argument	input + 1		4242681	1					
ANR	4244788	AdditiveExpression	input + 1		4242681	0		+			
ANR	4244789	Identifier	input		4242681	0					
ANR	4244790	PrimaryExpression	1		4242681	1					
ANR	4244791	Argument	0		4242681	2					
ANR	4244792	PrimaryExpression	0		4242681	0					
ANR	4244793	ElseStatement	else		4242681	0					
ANR	4244794	CompoundStatement		343:9:8803:8803	4242681	0					
ANR	4244795	Statement	r_cons_printf	729:3:22344:22356	4242681	0	True				
ANR	4244796	Statement	(	729:17:22358:22358	4242681	1	True				
ANR	4244797	Statement	"""0x%"""	729:18:22359:22363	4242681	2	True				
ANR	4244798	Statement	PFMT64x	729:23:22364:22370	4242681	3	True				
ANR	4244799	Statement	"""\\n"""	729:30:22371:22374	4242681	4	True				
ANR	4244800	Statement	","	729:34:22375:22375	4242681	5	True				
ANR	4244801	Statement	core	729:36:22377:22380	4242681	6	True				
ANR	4244802	Statement	->	729:40:22381:22382	4242681	7	True				
ANR	4244803	Statement	num	729:42:22383:22385	4242681	8	True				
ANR	4244804	Statement	->	729:45:22386:22387	4242681	9	True				
ANR	4244805	Statement	value	729:47:22388:22392	4242681	10	True				
ANR	4244806	Statement	)	729:52:22393:22393	4242681	11	True				
ANR	4244807	ExpressionStatement		729:53:22394:22394	4242681	12	True				
ANR	4244808	BreakStatement	break ;	731:2:22402:22407	4242681	113	True				
ANR	4244809	Label	case '@' :	732:1:22410:22418	4242681	114	True				
ANR	4244810	IfStatement	if ( input [ 1 ] == '@' )		4242681	115					
ANR	4244811	Condition	input [ 1 ] == '@'	733:6:22434:22448	4242681	0	True				
ANR	4244812	EqualityExpression	input [ 1 ] == '@'		4242681	0		==			
ANR	4244813	ArrayIndexing	input [ 1 ]		4242681	0					
ANR	4244814	Identifier	input		4242681	0					
ANR	4244815	PrimaryExpression	1		4242681	1					
ANR	4244816	PrimaryExpression	'@'		4242681	1					
ANR	4244817	CompoundStatement		348:23:8915:8915	4242681	1					
ANR	4244818	IfStatement	if ( input [ 2 ] == '@' )		4242681	0					
ANR	4244819	Condition	input [ 2 ] == '@'	734:7:22460:22474	4242681	0	True				
ANR	4244820	EqualityExpression	input [ 2 ] == '@'		4242681	0		==			
ANR	4244821	ArrayIndexing	input [ 2 ]		4242681	0					
ANR	4244822	Identifier	input		4242681	0					
ANR	4244823	PrimaryExpression	2		4242681	1					
ANR	4244824	PrimaryExpression	'@'		4242681	1					
ANR	4244825	CompoundStatement		349:24:8941:8941	4242681	1					
ANR	4244826	ExpressionStatement	"r_core_cmd_help ( core , help_msg_at_at_at )"	735:4:22483:22524	4242681	0	True				
ANR	4244827	CallExpression	"r_core_cmd_help ( core , help_msg_at_at_at )"		4242681	0					
ANR	4244828	Callee	r_core_cmd_help		4242681	0					
ANR	4244829	Identifier	r_core_cmd_help		4242681	0					
ANR	4244830	ArgumentList	core		4242681	1					
ANR	4244831	Argument	core		4242681	0					
ANR	4244832	Identifier	core		4242681	0					
ANR	4244833	Argument	help_msg_at_at_at		4242681	1					
ANR	4244834	Identifier	help_msg_at_at_at		4242681	0					
ANR	4244835	ElseStatement	else		4242681	0					
ANR	4244836	CompoundStatement		351:10:9000:9000	4242681	0					
ANR	4244837	ExpressionStatement	"r_core_cmd_help ( core , help_msg_at_at )"	737:4:22542:22580	4242681	0	True				
ANR	4244838	CallExpression	"r_core_cmd_help ( core , help_msg_at_at )"		4242681	0					
ANR	4244839	Callee	r_core_cmd_help		4242681	0					
ANR	4244840	Identifier	r_core_cmd_help		4242681	0					
ANR	4244841	ArgumentList	core		4242681	1					
ANR	4244842	Argument	core		4242681	0					
ANR	4244843	Identifier	core		4242681	0					
ANR	4244844	Argument	help_msg_at_at		4242681	1					
ANR	4244845	Identifier	help_msg_at_at		4242681	0					
ANR	4244846	ElseStatement	else		4242681	0					
ANR	4244847	CompoundStatement		354:9:9060:9060	4242681	0					
ANR	4244848	ExpressionStatement	"r_core_cmd_help ( core , help_msg_at )"	740:3:22601:22636	4242681	0	True				
ANR	4244849	CallExpression	"r_core_cmd_help ( core , help_msg_at )"		4242681	0					
ANR	4244850	Callee	r_core_cmd_help		4242681	0					
ANR	4244851	Identifier	r_core_cmd_help		4242681	0					
ANR	4244852	ArgumentList	core		4242681	1					
ANR	4244853	Argument	core		4242681	0					
ANR	4244854	Identifier	core		4242681	0					
ANR	4244855	Argument	help_msg_at		4242681	1					
ANR	4244856	Identifier	help_msg_at		4242681	0					
ANR	4244857	BreakStatement	break ;	742:2:22644:22649	4242681	116	True				
ANR	4244858	Label	case '&' :	743:1:22652:22660	4242681	117	True				
ANR	4244859	ExpressionStatement	helpCmdTasks ( core )	744:2:22672:22691	4242681	118	True				
ANR	4244860	CallExpression	helpCmdTasks ( core )		4242681	0					
ANR	4244861	Callee	helpCmdTasks		4242681	0					
ANR	4244862	Identifier	helpCmdTasks		4242681	0					
ANR	4244863	ArgumentList	core		4242681	1					
ANR	4244864	Argument	core		4242681	0					
ANR	4244865	Identifier	core		4242681	0					
ANR	4244866	BreakStatement	break ;	745:2:22695:22700	4242681	119	True				
ANR	4244867	Label	case '%' :	746:1:22703:22711	4242681	120	True				
ANR	4244868	IfStatement	if ( input [ 1 ] == '?' )		4242681	121					
ANR	4244869	Condition	input [ 1 ] == '?'	747:6:22727:22741	4242681	0	True				
ANR	4244870	EqualityExpression	input [ 1 ] == '?'		4242681	0		==			
ANR	4244871	ArrayIndexing	input [ 1 ]		4242681	0					
ANR	4244872	Identifier	input		4242681	0					
ANR	4244873	PrimaryExpression	1		4242681	1					
ANR	4244874	PrimaryExpression	'?'		4242681	1					
ANR	4244875	CompoundStatement		362:23:9208:9208	4242681	1					
ANR	4244876	ExpressionStatement	cmd_help_percent ( core )	748:3:22749:22772	4242681	0	True				
ANR	4244877	CallExpression	cmd_help_percent ( core )		4242681	0					
ANR	4244878	Callee	cmd_help_percent		4242681	0					
ANR	4244879	Identifier	cmd_help_percent		4242681	0					
ANR	4244880	ArgumentList	core		4242681	1					
ANR	4244881	Argument	core		4242681	0					
ANR	4244882	Identifier	core		4242681	0					
ANR	4244883	BreakStatement	break ;	750:2:22780:22785	4242681	122	True				
ANR	4244884	Label	case '$' :	751:1:22788:22796	4242681	123	True				
ANR	4244885	IfStatement	if ( input [ 1 ] == '?' )		4242681	124					
ANR	4244886	Condition	input [ 1 ] == '?'	752:6:22812:22826	4242681	0	True				
ANR	4244887	EqualityExpression	input [ 1 ] == '?'		4242681	0		==			
ANR	4244888	ArrayIndexing	input [ 1 ]		4242681	0					
ANR	4244889	Identifier	input		4242681	0					
ANR	4244890	PrimaryExpression	1		4242681	1					
ANR	4244891	PrimaryExpression	'?'		4242681	1					
ANR	4244892	CompoundStatement		367:23:9293:9293	4242681	1					
ANR	4244893	ExpressionStatement	"r_core_cmd_help ( core , help_msg_question_v )"	753:3:22834:22877	4242681	0	True				
ANR	4244894	CallExpression	"r_core_cmd_help ( core , help_msg_question_v )"		4242681	0					
ANR	4244895	Callee	r_core_cmd_help		4242681	0					
ANR	4244896	Identifier	r_core_cmd_help		4242681	0					
ANR	4244897	ArgumentList	core		4242681	1					
ANR	4244898	Argument	core		4242681	0					
ANR	4244899	Identifier	core		4242681	0					
ANR	4244900	Argument	help_msg_question_v		4242681	1					
ANR	4244901	Identifier	help_msg_question_v		4242681	0					
ANR	4244902	ElseStatement	else		4242681	0					
ANR	4244903	CompoundStatement		376:3:9637:9706	4242681	0					
ANR	4244904	IdentifierDeclStatement	int i = 0 ;	755:3:22893:22902	4242681	0	True				
ANR	4244905	IdentifierDecl	i = 0		4242681	0					
ANR	4244906	IdentifierDeclType	int		4242681	0					
ANR	4244907	Identifier	i		4242681	1					
ANR	4244908	AssignmentExpression	i = 0		4242681	2		=			
ANR	4244909	Identifier	i		4242681	0					
ANR	4244910	PrimaryExpression	0		4242681	1					
ANR	4244911	IdentifierDeclStatement	"const char * vars [ ] = { ""$$"" , ""$$$"" , ""$?"" , ""$b"" , ""$B"" , ""$F"" , ""$Fj"" , ""$Ff"" , ""$FB"" , ""$Fb"" , ""$Fs"" , ""$FE"" , ""$FS"" , ""$FI"" , ""$c"" , ""$r"" , ""$D"" , ""$DD"" , ""$e"" , ""$f"" , ""$j"" , ""$Ja"" , ""$l"" , ""$m"" , ""$M"" , ""$MM"" , ""$o"" , ""$p"" , ""$P"" , ""$s"" , ""$S"" , ""$SS"" , ""$v"" , ""$w"" , NULL } ;"	756:3:22907:23168	4242681	1	True				
ANR	4244912	IdentifierDecl	"* vars [ ] = { ""$$"" , ""$$$"" , ""$?"" , ""$b"" , ""$B"" , ""$F"" , ""$Fj"" , ""$Ff"" , ""$FB"" , ""$Fb"" , ""$Fs"" , ""$FE"" , ""$FS"" , ""$FI"" , ""$c"" , ""$r"" , ""$D"" , ""$DD"" , ""$e"" , ""$f"" , ""$j"" , ""$Ja"" , ""$l"" , ""$m"" , ""$M"" , ""$MM"" , ""$o"" , ""$p"" , ""$P"" , ""$s"" , ""$S"" , ""$SS"" , ""$v"" , ""$w"" , NULL }"		4242681	0					
ANR	4244913	IdentifierDeclType	const char * [ ]		4242681	0					
ANR	4244914	Identifier	vars		4242681	1					
ANR	4244915	AssignmentExpression	"* vars [ ] = { ""$$"" , ""$$$"" , ""$?"" , ""$b"" , ""$B"" , ""$F"" , ""$Fj"" , ""$Ff"" , ""$FB"" , ""$Fb"" , ""$Fs"" , ""$FE"" , ""$FS"" , ""$FI"" , ""$c"" , ""$r"" , ""$D"" , ""$DD"" , ""$e"" , ""$f"" , ""$j"" , ""$Ja"" , ""$l"" , ""$m"" , ""$M"" , ""$MM"" , ""$o"" , ""$p"" , ""$P"" , ""$s"" , ""$S"" , ""$SS"" , ""$v"" , ""$w"" , NULL }"		4242681	2		=			
ANR	4244916	Identifier	vars		4242681	0					
ANR	4244917	InitializerList	"""$$"""		4242681	1					
ANR	4244918	PrimaryExpression	"""$$"""		4242681	0					
ANR	4244919	PrimaryExpression	"""$$$"""		4242681	1					
ANR	4244920	PrimaryExpression	"""$?"""		4242681	2					
ANR	4244921	PrimaryExpression	"""$b"""		4242681	3					
ANR	4244922	PrimaryExpression	"""$B"""		4242681	4					
ANR	4244923	PrimaryExpression	"""$F"""		4242681	5					
ANR	4244924	PrimaryExpression	"""$Fj"""		4242681	6					
ANR	4244925	PrimaryExpression	"""$Ff"""		4242681	7					
ANR	4244926	PrimaryExpression	"""$FB"""		4242681	8					
ANR	4244927	PrimaryExpression	"""$Fb"""		4242681	9					
ANR	4244928	PrimaryExpression	"""$Fs"""		4242681	10					
ANR	4244929	PrimaryExpression	"""$FE"""		4242681	11					
ANR	4244930	PrimaryExpression	"""$FS"""		4242681	12					
ANR	4244931	PrimaryExpression	"""$FI"""		4242681	13					
ANR	4244932	PrimaryExpression	"""$c"""		4242681	14					
ANR	4244933	PrimaryExpression	"""$r"""		4242681	15					
ANR	4244934	PrimaryExpression	"""$D"""		4242681	16					
ANR	4244935	PrimaryExpression	"""$DD"""		4242681	17					
ANR	4244936	PrimaryExpression	"""$e"""		4242681	18					
ANR	4244937	PrimaryExpression	"""$f"""		4242681	19					
ANR	4244938	PrimaryExpression	"""$j"""		4242681	20					
ANR	4244939	PrimaryExpression	"""$Ja"""		4242681	21					
ANR	4244940	PrimaryExpression	"""$l"""		4242681	22					
ANR	4244941	PrimaryExpression	"""$m"""		4242681	23					
ANR	4244942	PrimaryExpression	"""$M"""		4242681	24					
ANR	4244943	PrimaryExpression	"""$MM"""		4242681	25					
ANR	4244944	PrimaryExpression	"""$o"""		4242681	26					
ANR	4244945	PrimaryExpression	"""$p"""		4242681	27					
ANR	4244946	PrimaryExpression	"""$P"""		4242681	28					
ANR	4244947	PrimaryExpression	"""$s"""		4242681	29					
ANR	4244948	PrimaryExpression	"""$S"""		4242681	30					
ANR	4244949	PrimaryExpression	"""$SS"""		4242681	31					
ANR	4244950	PrimaryExpression	"""$v"""		4242681	32					
ANR	4244951	PrimaryExpression	"""$w"""		4242681	33					
ANR	4244952	Identifier	NULL		4242681	34					
ANR	4244953	IdentifierDeclStatement	"const bool wideOffsets = r_config_get_i ( core -> config , ""scr.wideoff"" ) ;"	761:3:23173:23242	4242681	2	True				
ANR	4244954	IdentifierDecl	"wideOffsets = r_config_get_i ( core -> config , ""scr.wideoff"" )"		4242681	0					
ANR	4244955	IdentifierDeclType	const bool		4242681	0					
ANR	4244956	Identifier	wideOffsets		4242681	1					
ANR	4244957	AssignmentExpression	"wideOffsets = r_config_get_i ( core -> config , ""scr.wideoff"" )"		4242681	2		=			
ANR	4244958	Identifier	wideOffsets		4242681	0					
ANR	4244959	CallExpression	"r_config_get_i ( core -> config , ""scr.wideoff"" )"		4242681	1					
ANR	4244960	Callee	r_config_get_i		4242681	0					
ANR	4244961	Identifier	r_config_get_i		4242681	0					
ANR	4244962	ArgumentList	core -> config		4242681	1					
ANR	4244963	Argument	core -> config		4242681	0					
ANR	4244964	PtrMemberAccess	core -> config		4242681	0					
ANR	4244965	Identifier	core		4242681	0					
ANR	4244966	Identifier	config		4242681	1					
ANR	4244967	Argument	"""scr.wideoff"""		4242681	1					
ANR	4244968	PrimaryExpression	"""scr.wideoff"""		4242681	0					
ANR	4244969	WhileStatement	while ( vars [ i ] )		4242681	3					
ANR	4244970	Condition	vars [ i ]	762:10:23254:23260	4242681	0	True				
ANR	4244971	ArrayIndexing	vars [ i ]		4242681	0					
ANR	4244972	Identifier	vars		4242681	0					
ANR	4244973	Identifier	i		4242681	1					
ANR	4244974	CompoundStatement		378:4:9733:9788	4242681	1					
ANR	4244975	IdentifierDeclStatement	"const char * pad = r_str_pad ( ' ' , 6 - strlen ( vars [ i ] ) ) ;"	763:4:23269:23324	4242681	0	True				
ANR	4244976	IdentifierDecl	"* pad = r_str_pad ( ' ' , 6 - strlen ( vars [ i ] ) )"		4242681	0					
ANR	4244977	IdentifierDeclType	const char *		4242681	0					
ANR	4244978	Identifier	pad		4242681	1					
ANR	4244979	AssignmentExpression	"* pad = r_str_pad ( ' ' , 6 - strlen ( vars [ i ] ) )"		4242681	2		=			
ANR	4244980	Identifier	pad		4242681	0					
ANR	4244981	CallExpression	"r_str_pad ( ' ' , 6 - strlen ( vars [ i ] ) )"		4242681	1					
ANR	4244982	Callee	r_str_pad		4242681	0					
ANR	4244983	Identifier	r_str_pad		4242681	0					
ANR	4244984	ArgumentList	' '		4242681	1					
ANR	4244985	Argument	' '		4242681	0					
ANR	4244986	PrimaryExpression	' '		4242681	0					
ANR	4244987	Argument	6 - strlen ( vars [ i ] )		4242681	1					
ANR	4244988	AdditiveExpression	6 - strlen ( vars [ i ] )		4242681	0		-			
ANR	4244989	PrimaryExpression	6		4242681	0					
ANR	4244990	CallExpression	strlen ( vars [ i ] )		4242681	1					
ANR	4244991	Callee	strlen		4242681	0					
ANR	4244992	Identifier	strlen		4242681	0					
ANR	4244993	ArgumentList	vars [ i ]		4242681	1					
ANR	4244994	Argument	vars [ i ]		4242681	0					
ANR	4244995	ArrayIndexing	vars [ i ]		4242681	0					
ANR	4244996	Identifier	vars		4242681	0					
ANR	4244997	Identifier	i		4242681	1					
ANR	4244998	IfStatement	if ( wideOffsets )		4242681	1					
ANR	4244999	Condition	wideOffsets	764:8:23334:23344	4242681	0	True				
ANR	4245000	Identifier	wideOffsets		4242681	0					
ANR	4245001	CompoundStatement		379:21:9811:9811	4242681	1					
ANR	4245002	Statement	eprintf	765:5:23354:23360	4242681	0	True				
ANR	4245003	Statement	(	765:13:23362:23362	4242681	1	True				
ANR	4245004	Statement	"""%s %s 0x%016"""	765:14:23363:23376	4242681	2	True				
ANR	4245005	Statement	PFMT64x	765:28:23377:23383	4242681	3	True				
ANR	4245006	Statement	"""\\n"""	765:35:23384:23387	4242681	4	True				
ANR	4245007	Statement	","	765:39:23388:23388	4242681	5	True				
ANR	4245008	Statement	vars	765:41:23390:23393	4242681	6	True				
ANR	4245009	Statement	[	765:45:23394:23394	4242681	7	True				
ANR	4245010	Statement	i	765:46:23395:23395	4242681	8	True				
ANR	4245011	Statement	]	765:47:23396:23396	4242681	9	True				
ANR	4245012	Statement	","	765:48:23397:23397	4242681	10	True				
ANR	4245013	Statement	pad	765:50:23399:23401	4242681	11	True				
ANR	4245014	Statement	","	765:53:23402:23402	4242681	12	True				
ANR	4245015	Statement	r_num_math	765:55:23404:23413	4242681	13	True				
ANR	4245016	Statement	(	765:66:23415:23415	4242681	14	True				
ANR	4245017	Statement	core	765:67:23416:23419	4242681	15	True				
ANR	4245018	Statement	->	765:71:23420:23421	4242681	16	True				
ANR	4245019	Statement	num	765:73:23422:23424	4242681	17	True				
ANR	4245020	Statement	","	765:76:23425:23425	4242681	18	True				
ANR	4245021	Statement	vars	765:78:23427:23430	4242681	19	True				
ANR	4245022	Statement	[	765:82:23431:23431	4242681	20	True				
ANR	4245023	Statement	i	765:83:23432:23432	4242681	21	True				
ANR	4245024	Statement	]	765:84:23433:23433	4242681	22	True				
ANR	4245025	Statement	)	765:85:23434:23434	4242681	23	True				
ANR	4245026	Statement	)	765:86:23435:23435	4242681	24	True				
ANR	4245027	ExpressionStatement		765:87:23436:23436	4242681	25	True				
ANR	4245028	ElseStatement	else		4242681	0					
ANR	4245029	CompoundStatement		381:11:9913:9913	4242681	0					
ANR	4245030	Statement	eprintf	767:5:23456:23462	4242681	0	True				
ANR	4245031	Statement	(	767:13:23464:23464	4242681	1	True				
ANR	4245032	Statement	"""%s %s 0x%08"""	767:14:23465:23477	4242681	2	True				
ANR	4245033	Statement	PFMT64x	767:27:23478:23484	4242681	3	True				
ANR	4245034	Statement	"""\\n"""	767:34:23485:23488	4242681	4	True				
ANR	4245035	Statement	","	767:38:23489:23489	4242681	5	True				
ANR	4245036	Statement	vars	767:40:23491:23494	4242681	6	True				
ANR	4245037	Statement	[	767:44:23495:23495	4242681	7	True				
ANR	4245038	Statement	i	767:45:23496:23496	4242681	8	True				
ANR	4245039	Statement	]	767:46:23497:23497	4242681	9	True				
ANR	4245040	Statement	","	767:47:23498:23498	4242681	10	True				
ANR	4245041	Statement	pad	767:49:23500:23502	4242681	11	True				
ANR	4245042	Statement	","	767:52:23503:23503	4242681	12	True				
ANR	4245043	Statement	r_num_math	767:54:23505:23514	4242681	13	True				
ANR	4245044	Statement	(	767:65:23516:23516	4242681	14	True				
ANR	4245045	Statement	core	767:66:23517:23520	4242681	15	True				
ANR	4245046	Statement	->	767:70:23521:23522	4242681	16	True				
ANR	4245047	Statement	num	767:72:23523:23525	4242681	17	True				
ANR	4245048	Statement	","	767:75:23526:23526	4242681	18	True				
ANR	4245049	Statement	vars	767:77:23528:23531	4242681	19	True				
ANR	4245050	Statement	[	767:81:23532:23532	4242681	20	True				
ANR	4245051	Statement	i	767:82:23533:23533	4242681	21	True				
ANR	4245052	Statement	]	767:83:23534:23534	4242681	22	True				
ANR	4245053	Statement	)	767:84:23535:23535	4242681	23	True				
ANR	4245054	Statement	)	767:85:23536:23536	4242681	24	True				
ANR	4245055	ExpressionStatement		767:86:23537:23537	4242681	25	True				
ANR	4245056	ExpressionStatement	i ++	769:4:23549:23552	4242681	2	True				
ANR	4245057	PostIncDecOperationExpression	i ++		4242681	0					
ANR	4245058	Identifier	i		4242681	0					
ANR	4245059	IncDec	++		4242681	1					
ANR	4245060	ReturnStatement	return true ;	772:2:23565:23576	4242681	125	True				
ANR	4245061	Identifier	true		4242681	0					
ANR	4245062	Label	case 'V' :	773:1:23579:23587	4242681	126	True				
ANR	4245063	SwitchStatement	switch ( input [ 1 ] )		4242681	127					
ANR	4245064	Condition	input [ 1 ]	774:10:23607:23614	4242681	0	True				
ANR	4245065	ArrayIndexing	input [ 1 ]		4242681	0					
ANR	4245066	Identifier	input		4242681	0					
ANR	4245067	PrimaryExpression	1		4242681	1					
ANR	4245068	CompoundStatement		389:20:10081:10081	4242681	1					
ANR	4245069	Label	case '?' :	775:2:23621:23629	4242681	0	True				
ANR	4245070	ExpressionStatement	"r_core_cmd_help ( core , help_msg_question_V )"	776:3:23643:23686	4242681	1	True				
ANR	4245071	CallExpression	"r_core_cmd_help ( core , help_msg_question_V )"		4242681	0					
ANR	4245072	Callee	r_core_cmd_help		4242681	0					
ANR	4245073	Identifier	r_core_cmd_help		4242681	0					
ANR	4245074	ArgumentList	core		4242681	1					
ANR	4245075	Argument	core		4242681	0					
ANR	4245076	Identifier	core		4242681	0					
ANR	4245077	Argument	help_msg_question_V		4242681	1					
ANR	4245078	Identifier	help_msg_question_V		4242681	0					
ANR	4245079	BreakStatement	break ;	777:3:23691:23696	4242681	2	True				
ANR	4245080	Label	case 0 :	778:2:23700:23706	4242681	3	True				
ANR	4245081	ExpressionStatement	"r_cons_printf ( ""%s release\\n"" , R2_VERSION )"	780:3:23746:23788	4242681	4	True				
ANR	4245082	CallExpression	"r_cons_printf ( ""%s release\\n"" , R2_VERSION )"		4242681	0					
ANR	4245083	Callee	r_cons_printf		4242681	0					
ANR	4245084	Identifier	r_cons_printf		4242681	0					
ANR	4245085	ArgumentList	"""%s release\\n"""		4242681	1					
ANR	4245086	Argument	"""%s release\\n"""		4242681	0					
ANR	4245087	PrimaryExpression	"""%s release\\n"""		4242681	0					
ANR	4245088	Argument	R2_VERSION		4242681	1					
ANR	4245089	Identifier	R2_VERSION		4242681	0					
ANR	4245090	BreakStatement	break ;	788:3:24014:24019	4242681	5	True				
ANR	4245091	Label	case 'c' :	789:2:24023:24031	4242681	6	True				
ANR	4245092	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , vernum ( R2_VERSION ) )"	790:3:24045:24088	4242681	7	True				
ANR	4245093	CallExpression	"r_cons_printf ( ""%d\\n"" , vernum ( R2_VERSION ) )"		4242681	0					
ANR	4245094	Callee	r_cons_printf		4242681	0					
ANR	4245095	Identifier	r_cons_printf		4242681	0					
ANR	4245096	ArgumentList	"""%d\\n"""		4242681	1					
ANR	4245097	Argument	"""%d\\n"""		4242681	0					
ANR	4245098	PrimaryExpression	"""%d\\n"""		4242681	0					
ANR	4245099	Argument	vernum ( R2_VERSION )		4242681	1					
ANR	4245100	CallExpression	vernum ( R2_VERSION )		4242681	0					
ANR	4245101	Callee	vernum		4242681	0					
ANR	4245102	Identifier	vernum		4242681	0					
ANR	4245103	ArgumentList	R2_VERSION		4242681	1					
ANR	4245104	Argument	R2_VERSION		4242681	0					
ANR	4245105	Identifier	R2_VERSION		4242681	0					
ANR	4245106	BreakStatement	break ;	791:3:24093:24098	4242681	8	True				
ANR	4245107	Label	case 'j' :	792:2:24102:24110	4242681	9	True				
ANR	4245108	ExpressionStatement	"r_cons_printf ( ""{\\""archos\\"":\\""%s-%s\\"""" , R_SYS_OS , R_SYS_ARCH )"	793:3:24124:24185	4242681	10	True				
ANR	4245109	CallExpression	"r_cons_printf ( ""{\\""archos\\"":\\""%s-%s\\"""" , R_SYS_OS , R_SYS_ARCH )"		4242681	0					
ANR	4245110	Callee	r_cons_printf		4242681	0					
ANR	4245111	Identifier	r_cons_printf		4242681	0					
ANR	4245112	ArgumentList	"""{\\""archos\\"":\\""%s-%s\\"""""		4242681	1					
ANR	4245113	Argument	"""{\\""archos\\"":\\""%s-%s\\"""""		4242681	0					
ANR	4245114	PrimaryExpression	"""{\\""archos\\"":\\""%s-%s\\"""""		4242681	0					
ANR	4245115	Argument	R_SYS_OS		4242681	1					
ANR	4245116	Identifier	R_SYS_OS		4242681	0					
ANR	4245117	Argument	R_SYS_ARCH		4242681	2					
ANR	4245118	Identifier	R_SYS_ARCH		4242681	0					
ANR	4245119	ExpressionStatement	"r_cons_printf ( "",\\""arch\\"":\\""%s\\"""" , R_SYS_ARCH )"	794:3:24190:24236	4242681	11	True				
ANR	4245120	CallExpression	"r_cons_printf ( "",\\""arch\\"":\\""%s\\"""" , R_SYS_ARCH )"		4242681	0					
ANR	4245121	Callee	r_cons_printf		4242681	0					
ANR	4245122	Identifier	r_cons_printf		4242681	0					
ANR	4245123	ArgumentList	""",\\""arch\\"":\\""%s\\"""""		4242681	1					
ANR	4245124	Argument	""",\\""arch\\"":\\""%s\\"""""		4242681	0					
ANR	4245125	PrimaryExpression	""",\\""arch\\"":\\""%s\\"""""		4242681	0					
ANR	4245126	Argument	R_SYS_ARCH		4242681	1					
ANR	4245127	Identifier	R_SYS_ARCH		4242681	0					
ANR	4245128	ExpressionStatement	"r_cons_printf ( "",\\""os\\"":\\""%s\\"""" , R_SYS_OS )"	795:3:24241:24283	4242681	12	True				
ANR	4245129	CallExpression	"r_cons_printf ( "",\\""os\\"":\\""%s\\"""" , R_SYS_OS )"		4242681	0					
ANR	4245130	Callee	r_cons_printf		4242681	0					
ANR	4245131	Identifier	r_cons_printf		4242681	0					
ANR	4245132	ArgumentList	""",\\""os\\"":\\""%s\\"""""		4242681	1					
ANR	4245133	Argument	""",\\""os\\"":\\""%s\\"""""		4242681	0					
ANR	4245134	PrimaryExpression	""",\\""os\\"":\\""%s\\"""""		4242681	0					
ANR	4245135	Argument	R_SYS_OS		4242681	1					
ANR	4245136	Identifier	R_SYS_OS		4242681	0					
ANR	4245137	ExpressionStatement	"r_cons_printf ( "",\\""commit\\"":%d"" , R2_VERSION_COMMIT )"	796:3:24288:24339	4242681	13	True				
ANR	4245138	CallExpression	"r_cons_printf ( "",\\""commit\\"":%d"" , R2_VERSION_COMMIT )"		4242681	0					
ANR	4245139	Callee	r_cons_printf		4242681	0					
ANR	4245140	Identifier	r_cons_printf		4242681	0					
ANR	4245141	ArgumentList	""",\\""commit\\"":%d"""		4242681	1					
ANR	4245142	Argument	""",\\""commit\\"":%d"""		4242681	0					
ANR	4245143	PrimaryExpression	""",\\""commit\\"":%d"""		4242681	0					
ANR	4245144	Argument	R2_VERSION_COMMIT		4242681	1					
ANR	4245145	Identifier	R2_VERSION_COMMIT		4242681	0					
ANR	4245146	ExpressionStatement	"r_cons_printf ( "",\\""tap\\"":\\""%s\\"""" , R2_GITTAP )"	797:3:24344:24388	4242681	14	True				
ANR	4245147	CallExpression	"r_cons_printf ( "",\\""tap\\"":\\""%s\\"""" , R2_GITTAP )"		4242681	0					
ANR	4245148	Callee	r_cons_printf		4242681	0					
ANR	4245149	Identifier	r_cons_printf		4242681	0					
ANR	4245150	ArgumentList	""",\\""tap\\"":\\""%s\\"""""		4242681	1					
ANR	4245151	Argument	""",\\""tap\\"":\\""%s\\"""""		4242681	0					
ANR	4245152	PrimaryExpression	""",\\""tap\\"":\\""%s\\"""""		4242681	0					
ANR	4245153	Argument	R2_GITTAP		4242681	1					
ANR	4245154	Identifier	R2_GITTAP		4242681	0					
ANR	4245155	ExpressionStatement	"r_cons_printf ( "",\\""nversion\\"":%d"" , vernum ( R2_VERSION ) )"	798:3:24393:24448	4242681	15	True				
ANR	4245156	CallExpression	"r_cons_printf ( "",\\""nversion\\"":%d"" , vernum ( R2_VERSION ) )"		4242681	0					
ANR	4245157	Callee	r_cons_printf		4242681	0					
ANR	4245158	Identifier	r_cons_printf		4242681	0					
ANR	4245159	ArgumentList	""",\\""nversion\\"":%d"""		4242681	1					
ANR	4245160	Argument	""",\\""nversion\\"":%d"""		4242681	0					
ANR	4245161	PrimaryExpression	""",\\""nversion\\"":%d"""		4242681	0					
ANR	4245162	Argument	vernum ( R2_VERSION )		4242681	1					
ANR	4245163	CallExpression	vernum ( R2_VERSION )		4242681	0					
ANR	4245164	Callee	vernum		4242681	0					
ANR	4245165	Identifier	vernum		4242681	0					
ANR	4245166	ArgumentList	R2_VERSION		4242681	1					
ANR	4245167	Argument	R2_VERSION		4242681	0					
ANR	4245168	Identifier	R2_VERSION		4242681	0					
ANR	4245169	ExpressionStatement	"r_cons_printf ( "",\\""version\\"":\\""%s\\""}\\n"" , R2_VERSION )"	799:3:24453:24505	4242681	16	True				
ANR	4245170	CallExpression	"r_cons_printf ( "",\\""version\\"":\\""%s\\""}\\n"" , R2_VERSION )"		4242681	0					
ANR	4245171	Callee	r_cons_printf		4242681	0					
ANR	4245172	Identifier	r_cons_printf		4242681	0					
ANR	4245173	ArgumentList	""",\\""version\\"":\\""%s\\""}\\n"""		4242681	1					
ANR	4245174	Argument	""",\\""version\\"":\\""%s\\""}\\n"""		4242681	0					
ANR	4245175	PrimaryExpression	""",\\""version\\"":\\""%s\\""}\\n"""		4242681	0					
ANR	4245176	Argument	R2_VERSION		4242681	1					
ANR	4245177	Identifier	R2_VERSION		4242681	0					
ANR	4245178	BreakStatement	break ;	800:3:24510:24515	4242681	17	True				
ANR	4245179	Label	case 'q' :	801:2:24519:24527	4242681	18	True				
ANR	4245180	ExpressionStatement	r_cons_println ( R2_VERSION )	802:3:24541:24568	4242681	19	True				
ANR	4245181	CallExpression	r_cons_println ( R2_VERSION )		4242681	0					
ANR	4245182	Callee	r_cons_println		4242681	0					
ANR	4245183	Identifier	r_cons_println		4242681	0					
ANR	4245184	ArgumentList	R2_VERSION		4242681	1					
ANR	4245185	Argument	R2_VERSION		4242681	0					
ANR	4245186	Identifier	R2_VERSION		4242681	0					
ANR	4245187	BreakStatement	break ;	803:3:24573:24578	4242681	20	True				
ANR	4245188	BreakStatement	break ;	805:2:24586:24591	4242681	128	True				
ANR	4245189	Label	case 'l' :	806:1:24594:24602	4242681	129	True				
ANR	4245190	IfStatement	if ( input [ 1 ] == 'q' )		4242681	130					
ANR	4245191	Condition	input [ 1 ] == 'q'	807:6:24618:24632	4242681	0	True				
ANR	4245192	EqualityExpression	input [ 1 ] == 'q'		4242681	0		==			
ANR	4245193	ArrayIndexing	input [ 1 ]		4242681	0					
ANR	4245194	Identifier	input		4242681	0					
ANR	4245195	PrimaryExpression	1		4242681	1					
ANR	4245196	PrimaryExpression	'q'		4242681	1					
ANR	4245197	CompoundStatement		422:23:11099:11099	4242681	1					
ANR	4245198	ForStatement	for ( input += 2 ; input [ 0 ] == ' ' ; input ++ )		4242681	0					
ANR	4245199	ForInit	input += 2 ;	808:8:24645:24653	4242681	0	True				
ANR	4245200	AssignmentExpression	input += 2		4242681	0		+=			
ANR	4245201	Identifier	input		4242681	0					
ANR	4245202	PrimaryExpression	2		4242681	1					
ANR	4245203	Condition	input [ 0 ] == ' '	808:18:24655:24669	4242681	1	True				
ANR	4245204	EqualityExpression	input [ 0 ] == ' '		4242681	0		==			
ANR	4245205	ArrayIndexing	input [ 0 ]		4242681	0					
ANR	4245206	Identifier	input		4242681	0					
ANR	4245207	PrimaryExpression	0		4242681	1					
ANR	4245208	PrimaryExpression	' '		4242681	1					
ANR	4245209	PostIncDecOperationExpression	input ++	808:35:24672:24678	4242681	2	True				
ANR	4245210	Identifier	input		4242681	0					
ANR	4245211	IncDec	++		4242681	1					
ANR	4245212	ExpressionStatement		808:43:24680:24680	4242681	3	True				
ANR	4245213	ExpressionStatement	core -> num -> value = strlen ( input )	809:3:24685:24718	4242681	1	True				
ANR	4245214	AssignmentExpression	core -> num -> value = strlen ( input )		4242681	0		=			
ANR	4245215	PtrMemberAccess	core -> num -> value		4242681	0					
ANR	4245216	PtrMemberAccess	core -> num		4242681	0					
ANR	4245217	Identifier	core		4242681	0					
ANR	4245218	Identifier	num		4242681	1					
ANR	4245219	Identifier	value		4242681	1					
ANR	4245220	CallExpression	strlen ( input )		4242681	1					
ANR	4245221	Callee	strlen		4242681	0					
ANR	4245222	Identifier	strlen		4242681	0					
ANR	4245223	ArgumentList	input		4242681	1					
ANR	4245224	Argument	input		4242681	0					
ANR	4245225	Identifier	input		4242681	0					
ANR	4245226	ElseStatement	else		4242681	0					
ANR	4245227	CompoundStatement		425:9:11193:11193	4242681	0					
ANR	4245228	ForStatement	for ( input ++ ; input [ 0 ] == ' ' ; input ++ )		4242681	0					
ANR	4245229	ForInit	input ++ ;	811:8:24739:24746	4242681	0	True				
ANR	4245230	PostIncDecOperationExpression	input ++		4242681	0					
ANR	4245231	Identifier	input		4242681	0					
ANR	4245232	IncDec	++		4242681	1					
ANR	4245233	Condition	input [ 0 ] == ' '	811:17:24748:24762	4242681	1	True				
ANR	4245234	EqualityExpression	input [ 0 ] == ' '		4242681	0		==			
ANR	4245235	ArrayIndexing	input [ 0 ]		4242681	0					
ANR	4245236	Identifier	input		4242681	0					
ANR	4245237	PrimaryExpression	0		4242681	1					
ANR	4245238	PrimaryExpression	' '		4242681	1					
ANR	4245239	PostIncDecOperationExpression	input ++	811:34:24765:24771	4242681	2	True				
ANR	4245240	Identifier	input		4242681	0					
ANR	4245241	IncDec	++		4242681	1					
ANR	4245242	ExpressionStatement		811:42:24773:24773	4242681	3	True				
ANR	4245243	ExpressionStatement	core -> num -> value = strlen ( input )	812:3:24778:24811	4242681	1	True				
ANR	4245244	AssignmentExpression	core -> num -> value = strlen ( input )		4242681	0		=			
ANR	4245245	PtrMemberAccess	core -> num -> value		4242681	0					
ANR	4245246	PtrMemberAccess	core -> num		4242681	0					
ANR	4245247	Identifier	core		4242681	0					
ANR	4245248	Identifier	num		4242681	1					
ANR	4245249	Identifier	value		4242681	1					
ANR	4245250	CallExpression	strlen ( input )		4242681	1					
ANR	4245251	Callee	strlen		4242681	0					
ANR	4245252	Identifier	strlen		4242681	0					
ANR	4245253	ArgumentList	input		4242681	1					
ANR	4245254	Argument	input		4242681	0					
ANR	4245255	Identifier	input		4242681	0					
ANR	4245256	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , core -> num -> value )"	813:3:24816:24856	4242681	2	True				
ANR	4245257	CallExpression	"r_cons_printf ( ""%d\\n"" , core -> num -> value )"		4242681	0					
ANR	4245258	Callee	r_cons_printf		4242681	0					
ANR	4245259	Identifier	r_cons_printf		4242681	0					
ANR	4245260	ArgumentList	"""%d\\n"""		4242681	1					
ANR	4245261	Argument	"""%d\\n"""		4242681	0					
ANR	4245262	PrimaryExpression	"""%d\\n"""		4242681	0					
ANR	4245263	Argument	core -> num -> value		4242681	1					
ANR	4245264	PtrMemberAccess	core -> num -> value		4242681	0					
ANR	4245265	PtrMemberAccess	core -> num		4242681	0					
ANR	4245266	Identifier	core		4242681	0					
ANR	4245267	Identifier	num		4242681	1					
ANR	4245268	Identifier	value		4242681	1					
ANR	4245269	BreakStatement	break ;	815:2:24864:24869	4242681	131	True				
ANR	4245270	Label	case 'X' :	816:1:24872:24880	4242681	132	True				
ANR	4245271	ForStatement	for ( input ++ ; input [ 0 ] == ' ' ; input ++ )		4242681	133					
ANR	4245272	ForInit	input ++ ;	817:7:24897:24904	4242681	0	True				
ANR	4245273	PostIncDecOperationExpression	input ++		4242681	0					
ANR	4245274	Identifier	input		4242681	0					
ANR	4245275	IncDec	++		4242681	1					
ANR	4245276	Condition	input [ 0 ] == ' '	817:16:24906:24920	4242681	1	True				
ANR	4245277	EqualityExpression	input [ 0 ] == ' '		4242681	0		==			
ANR	4245278	ArrayIndexing	input [ 0 ]		4242681	0					
ANR	4245279	Identifier	input		4242681	0					
ANR	4245280	PrimaryExpression	0		4242681	1					
ANR	4245281	PrimaryExpression	' '		4242681	1					
ANR	4245282	PostIncDecOperationExpression	input ++	817:33:24923:24929	4242681	2	True				
ANR	4245283	Identifier	input		4242681	0					
ANR	4245284	IncDec	++		4242681	1					
ANR	4245285	ExpressionStatement		817:41:24931:24931	4242681	3	True				
ANR	4245286	ExpressionStatement	"n = r_num_math ( core -> num , input )"	818:2:24935:24968	4242681	134	True				
ANR	4245287	AssignmentExpression	"n = r_num_math ( core -> num , input )"		4242681	0		=			
ANR	4245288	Identifier	n		4242681	0					
ANR	4245289	CallExpression	"r_num_math ( core -> num , input )"		4242681	1					
ANR	4245290	Callee	r_num_math		4242681	0					
ANR	4245291	Identifier	r_num_math		4242681	0					
ANR	4245292	ArgumentList	core -> num		4242681	1					
ANR	4245293	Argument	core -> num		4242681	0					
ANR	4245294	PtrMemberAccess	core -> num		4242681	0					
ANR	4245295	Identifier	core		4242681	0					
ANR	4245296	Identifier	num		4242681	1					
ANR	4245297	Argument	input		4242681	1					
ANR	4245298	Identifier	input		4242681	0					
ANR	4245299	Statement	r_cons_printf	819:2:24972:24984	4242681	135	True				
ANR	4245300	Statement	(	819:16:24986:24986	4242681	136	True				
ANR	4245301	Statement	"""%"""	819:17:24987:24989	4242681	137	True				
ANR	4245302	Statement	PFMT64x	819:20:24990:24996	4242681	138	True				
ANR	4245303	Statement	"""\\n"""	819:27:24997:25000	4242681	139	True				
ANR	4245304	Statement	","	819:31:25001:25001	4242681	140	True				
ANR	4245305	Statement	n	819:33:25003:25003	4242681	141	True				
ANR	4245306	Statement	)	819:34:25004:25004	4242681	142	True				
ANR	4245307	ExpressionStatement		819:35:25005:25005	4242681	143	True				
ANR	4245308	BreakStatement	break ;	820:2:25009:25014	4242681	144	True				
ANR	4245309	Label	case 'x' :	821:1:25017:25025	4242681	145	True				
ANR	4245310	ForStatement	for ( input ++ ; input [ 0 ] == ' ' ; input ++ )		4242681	146					
ANR	4245311	ForInit	input ++ ;	822:7:25042:25049	4242681	0	True				
ANR	4245312	PostIncDecOperationExpression	input ++		4242681	0					
ANR	4245313	Identifier	input		4242681	0					
ANR	4245314	IncDec	++		4242681	1					
ANR	4245315	Condition	input [ 0 ] == ' '	822:16:25051:25065	4242681	1	True				
ANR	4245316	EqualityExpression	input [ 0 ] == ' '		4242681	0		==			
ANR	4245317	ArrayIndexing	input [ 0 ]		4242681	0					
ANR	4245318	Identifier	input		4242681	0					
ANR	4245319	PrimaryExpression	0		4242681	1					
ANR	4245320	PrimaryExpression	' '		4242681	1					
ANR	4245321	PostIncDecOperationExpression	input ++	822:33:25068:25074	4242681	2	True				
ANR	4245322	Identifier	input		4242681	0					
ANR	4245323	IncDec	++		4242681	1					
ANR	4245324	ExpressionStatement		822:41:25076:25076	4242681	3	True				
ANR	4245325	IfStatement	if ( * input == '-' )		4242681	147					
ANR	4245326	Condition	* input == '-'	823:6:25084:25096	4242681	0	True				
ANR	4245327	EqualityExpression	* input == '-'		4242681	0		==			
ANR	4245328	UnaryOperationExpression	* input		4242681	0					
ANR	4245329	UnaryOperator	*		4242681	0					
ANR	4245330	Identifier	input		4242681	1					
ANR	4245331	PrimaryExpression	'-'		4242681	1					
ANR	4245332	CompoundStatement		439:3:11568:11606	4242681	1					
ANR	4245333	IdentifierDeclStatement	ut8 * out = malloc ( strlen ( input ) + 1 ) ;	824:3:25104:25142	4242681	0	True				
ANR	4245334	IdentifierDecl	* out = malloc ( strlen ( input ) + 1 )		4242681	0					
ANR	4245335	IdentifierDeclType	ut8 *		4242681	0					
ANR	4245336	Identifier	out		4242681	1					
ANR	4245337	AssignmentExpression	* out = malloc ( strlen ( input ) + 1 )		4242681	2		=			
ANR	4245338	Identifier	out		4242681	0					
ANR	4245339	CallExpression	malloc ( strlen ( input ) + 1 )		4242681	1					
ANR	4245340	Callee	malloc		4242681	0					
ANR	4245341	Identifier	malloc		4242681	0					
ANR	4245342	ArgumentList	strlen ( input ) + 1		4242681	1					
ANR	4245343	Argument	strlen ( input ) + 1		4242681	0					
ANR	4245344	AdditiveExpression	strlen ( input ) + 1		4242681	0		+			
ANR	4245345	CallExpression	strlen ( input )		4242681	0					
ANR	4245346	Callee	strlen		4242681	0					
ANR	4245347	Identifier	strlen		4242681	0					
ANR	4245348	ArgumentList	input		4242681	1					
ANR	4245349	Argument	input		4242681	0					
ANR	4245350	Identifier	input		4242681	0					
ANR	4245351	PrimaryExpression	1		4242681	1					
ANR	4245352	IfStatement	if ( out )		4242681	1					
ANR	4245353	Condition	out	825:7:25151:25153	4242681	0	True				
ANR	4245354	Identifier	out		4242681	0					
ANR	4245355	CompoundStatement		441:4:11626:11666	4242681	1					
ANR	4245356	IdentifierDeclStatement	"int len = r_hex_str2bin ( input + 1 , out ) ;"	826:4:25162:25202	4242681	0	True				
ANR	4245357	IdentifierDecl	"len = r_hex_str2bin ( input + 1 , out )"		4242681	0					
ANR	4245358	IdentifierDeclType	int		4242681	0					
ANR	4245359	Identifier	len		4242681	1					
ANR	4245360	AssignmentExpression	"len = r_hex_str2bin ( input + 1 , out )"		4242681	2		=			
ANR	4245361	Identifier	len		4242681	0					
ANR	4245362	CallExpression	"r_hex_str2bin ( input + 1 , out )"		4242681	1					
ANR	4245363	Callee	r_hex_str2bin		4242681	0					
ANR	4245364	Identifier	r_hex_str2bin		4242681	0					
ANR	4245365	ArgumentList	input + 1		4242681	1					
ANR	4245366	Argument	input + 1		4242681	0					
ANR	4245367	AdditiveExpression	input + 1		4242681	0		+			
ANR	4245368	Identifier	input		4242681	0					
ANR	4245369	PrimaryExpression	1		4242681	1					
ANR	4245370	Argument	out		4242681	1					
ANR	4245371	Identifier	out		4242681	0					
ANR	4245372	IfStatement	if ( len >= 0 )		4242681	1					
ANR	4245373	Condition	len >= 0	827:8:25212:25219	4242681	0	True				
ANR	4245374	RelationalExpression	len >= 0		4242681	0		>=			
ANR	4245375	Identifier	len		4242681	0					
ANR	4245376	PrimaryExpression	0		4242681	1					
ANR	4245377	CompoundStatement		442:18:11686:11686	4242681	1					
ANR	4245378	ExpressionStatement	out [ len ] = 0	828:5:25229:25241	4242681	0	True				
ANR	4245379	AssignmentExpression	out [ len ] = 0		4242681	0		=			
ANR	4245380	ArrayIndexing	out [ len ]		4242681	0					
ANR	4245381	Identifier	out		4242681	0					
ANR	4245382	Identifier	len		4242681	1					
ANR	4245383	PrimaryExpression	0		4242681	1					
ANR	4245384	ExpressionStatement	r_cons_println ( ( const char * ) out )	829:5:25248:25281	4242681	1	True				
ANR	4245385	CallExpression	r_cons_println ( ( const char * ) out )		4242681	0					
ANR	4245386	Callee	r_cons_println		4242681	0					
ANR	4245387	Identifier	r_cons_println		4242681	0					
ANR	4245388	ArgumentList	( const char * ) out		4242681	1					
ANR	4245389	Argument	( const char * ) out		4242681	0					
ANR	4245390	CastExpression	( const char * ) out		4242681	0					
ANR	4245391	CastTarget	const char *		4242681	0					
ANR	4245392	Identifier	out		4242681	1					
ANR	4245393	ElseStatement	else		4242681	0					
ANR	4245394	CompoundStatement		445:11:11758:11758	4242681	0					
ANR	4245395	ExpressionStatement	"eprintf ( ""Error parsing the hexpair string\\n"" )"	831:5:25301:25347	4242681	0	True				
ANR	4245396	CallExpression	"eprintf ( ""Error parsing the hexpair string\\n"" )"		4242681	0					
ANR	4245397	Callee	eprintf		4242681	0					
ANR	4245398	Identifier	eprintf		4242681	0					
ANR	4245399	ArgumentList	"""Error parsing the hexpair string\\n"""		4242681	1					
ANR	4245400	Argument	"""Error parsing the hexpair string\\n"""		4242681	0					
ANR	4245401	PrimaryExpression	"""Error parsing the hexpair string\\n"""		4242681	0					
ANR	4245402	ExpressionStatement	free ( out )	833:4:25359:25369	4242681	2	True				
ANR	4245403	CallExpression	free ( out )		4242681	0					
ANR	4245404	Callee	free		4242681	0					
ANR	4245405	Identifier	free		4242681	0					
ANR	4245406	ArgumentList	out		4242681	1					
ANR	4245407	Argument	out		4242681	0					
ANR	4245408	Identifier	out		4242681	0					
ANR	4245409	ElseStatement	else		4242681	0					
ANR	4245410	IfStatement	if ( * input == '+' )		4242681	0					
ANR	4245411	Condition	* input == '+'	835:13:25389:25401	4242681	0	True				
ANR	4245412	EqualityExpression	* input == '+'		4242681	0		==			
ANR	4245413	UnaryOperationExpression	* input		4242681	0					
ANR	4245414	UnaryOperator	*		4242681	0					
ANR	4245415	Identifier	input		4242681	1					
ANR	4245416	PrimaryExpression	'+'		4242681	1					
ANR	4245417	CompoundStatement		452:3:11916:11954	4242681	1					
ANR	4245418	IdentifierDeclStatement	"ut64 n = r_num_math ( core -> num , input ) ;"	836:3:25409:25447	4242681	0	True				
ANR	4245419	IdentifierDecl	"n = r_num_math ( core -> num , input )"		4242681	0					
ANR	4245420	IdentifierDeclType	ut64		4242681	0					
ANR	4245421	Identifier	n		4242681	1					
ANR	4245422	AssignmentExpression	"n = r_num_math ( core -> num , input )"		4242681	2		=			
ANR	4245423	Identifier	n		4242681	0					
ANR	4245424	CallExpression	"r_num_math ( core -> num , input )"		4242681	1					
ANR	4245425	Callee	r_num_math		4242681	0					
ANR	4245426	Identifier	r_num_math		4242681	0					
ANR	4245427	ArgumentList	core -> num		4242681	1					
ANR	4245428	Argument	core -> num		4242681	0					
ANR	4245429	PtrMemberAccess	core -> num		4242681	0					
ANR	4245430	Identifier	core		4242681	0					
ANR	4245431	Identifier	num		4242681	1					
ANR	4245432	Argument	input		4242681	1					
ANR	4245433	Identifier	input		4242681	0					
ANR	4245434	IdentifierDeclStatement	"int bits = r_num_to_bits ( NULL , n ) / 8 ;"	837:3:25452:25490	4242681	1	True				
ANR	4245435	IdentifierDecl	"bits = r_num_to_bits ( NULL , n ) / 8"		4242681	0					
ANR	4245436	IdentifierDeclType	int		4242681	0					
ANR	4245437	Identifier	bits		4242681	1					
ANR	4245438	AssignmentExpression	"bits = r_num_to_bits ( NULL , n ) / 8"		4242681	2		=			
ANR	4245439	Identifier	bits		4242681	0					
ANR	4245440	MultiplicativeExpression	"r_num_to_bits ( NULL , n ) / 8"		4242681	1		/			
ANR	4245441	CallExpression	"r_num_to_bits ( NULL , n )"		4242681	0					
ANR	4245442	Callee	r_num_to_bits		4242681	0					
ANR	4245443	Identifier	r_num_to_bits		4242681	0					
ANR	4245444	ArgumentList	NULL		4242681	1					
ANR	4245445	Argument	NULL		4242681	0					
ANR	4245446	Identifier	NULL		4242681	0					
ANR	4245447	Argument	n		4242681	1					
ANR	4245448	Identifier	n		4242681	0					
ANR	4245449	PrimaryExpression	8		4242681	1					
ANR	4245450	ForStatement	for ( i = 0 ; i < bits ; i ++ )		4242681	2					
ANR	4245451	ForInit	i = 0 ;	838:8:25500:25505	4242681	0	True				
ANR	4245452	AssignmentExpression	i = 0		4242681	0		=			
ANR	4245453	Identifier	i		4242681	0					
ANR	4245454	PrimaryExpression	0		4242681	1					
ANR	4245455	Condition	i < bits	838:15:25507:25514	4242681	1	True				
ANR	4245456	RelationalExpression	i < bits		4242681	0		<			
ANR	4245457	Identifier	i		4242681	0					
ANR	4245458	Identifier	bits		4242681	1					
ANR	4245459	PostIncDecOperationExpression	i ++	838:25:25517:25519	4242681	2	True				
ANR	4245460	Identifier	i		4242681	0					
ANR	4245461	IncDec	++		4242681	1					
ANR	4245462	CompoundStatement		453:30:11986:11986	4242681	3					
ANR	4245463	ExpressionStatement	"r_cons_printf ( ""%02x"" , ( ut8 ) ( ( n >> ( i * 8 ) ) & 0xff ) )"	839:4:25528:25579	4242681	0	True				
ANR	4245464	CallExpression	"r_cons_printf ( ""%02x"" , ( ut8 ) ( ( n >> ( i * 8 ) ) & 0xff ) )"		4242681	0					
ANR	4245465	Callee	r_cons_printf		4242681	0					
ANR	4245466	Identifier	r_cons_printf		4242681	0					
ANR	4245467	ArgumentList	"""%02x"""		4242681	1					
ANR	4245468	Argument	"""%02x"""		4242681	0					
ANR	4245469	PrimaryExpression	"""%02x"""		4242681	0					
ANR	4245470	Argument	( ut8 ) ( ( n >> ( i * 8 ) ) & 0xff )		4242681	1					
ANR	4245471	CastExpression	( ut8 ) ( ( n >> ( i * 8 ) ) & 0xff )		4242681	0					
ANR	4245472	CastTarget	ut8		4242681	0					
ANR	4245473	BitAndExpression	( n >> ( i * 8 ) ) & 0xff		4242681	1		&			
ANR	4245474	ShiftExpression	n >> ( i * 8 )		4242681	0		>>			
ANR	4245475	Identifier	n		4242681	0					
ANR	4245476	MultiplicativeExpression	i * 8		4242681	1		*			
ANR	4245477	Identifier	i		4242681	0					
ANR	4245478	PrimaryExpression	8		4242681	1					
ANR	4245479	PrimaryExpression	0xff		4242681	1					
ANR	4245480	ExpressionStatement	r_cons_newline ( )	841:3:25589:25606	4242681	3	True				
ANR	4245481	CallExpression	r_cons_newline ( )		4242681	0					
ANR	4245482	Callee	r_cons_newline		4242681	0					
ANR	4245483	Identifier	r_cons_newline		4242681	0					
ANR	4245484	ArgumentList			4242681	1					
ANR	4245485	ElseStatement	else		4242681	0					
ANR	4245486	CompoundStatement		457:9:12081:12081	4242681	0					
ANR	4245487	IfStatement	if ( * input == ' ' )		4242681	0					
ANR	4245488	Condition	* input == ' '	843:7:25626:25638	4242681	0	True				
ANR	4245489	EqualityExpression	* input == ' '		4242681	0		==			
ANR	4245490	UnaryOperationExpression	* input		4242681	0					
ANR	4245491	UnaryOperator	*		4242681	0					
ANR	4245492	Identifier	input		4242681	1					
ANR	4245493	PrimaryExpression	' '		4242681	1					
ANR	4245494	CompoundStatement		458:22:12105:12105	4242681	1					
ANR	4245495	ExpressionStatement	input ++	844:4:25647:25654	4242681	0	True				
ANR	4245496	PostIncDecOperationExpression	input ++		4242681	0					
ANR	4245497	Identifier	input		4242681	0					
ANR	4245498	IncDec	++		4242681	1					
ANR	4245499	ForStatement	for ( i = 0 ; input [ i ] ; i ++ )		4242681	1					
ANR	4245500	ForInit	i = 0 ;	846:8:25669:25674	4242681	0	True				
ANR	4245501	AssignmentExpression	i = 0		4242681	0		=			
ANR	4245502	Identifier	i		4242681	0					
ANR	4245503	PrimaryExpression	0		4242681	1					
ANR	4245504	Condition	input [ i ]	846:15:25676:25683	4242681	1	True				
ANR	4245505	ArrayIndexing	input [ i ]		4242681	0					
ANR	4245506	Identifier	input		4242681	0					
ANR	4245507	Identifier	i		4242681	1					
ANR	4245508	PostIncDecOperationExpression	i ++	846:25:25686:25688	4242681	2	True				
ANR	4245509	Identifier	i		4242681	0					
ANR	4245510	IncDec	++		4242681	1					
ANR	4245511	CompoundStatement		461:30:12155:12155	4242681	3					
ANR	4245512	ExpressionStatement	"r_cons_printf ( ""%02x"" , input [ i ] )"	847:4:25697:25729	4242681	0	True				
ANR	4245513	CallExpression	"r_cons_printf ( ""%02x"" , input [ i ] )"		4242681	0					
ANR	4245514	Callee	r_cons_printf		4242681	0					
ANR	4245515	Identifier	r_cons_printf		4242681	0					
ANR	4245516	ArgumentList	"""%02x"""		4242681	1					
ANR	4245517	Argument	"""%02x"""		4242681	0					
ANR	4245518	PrimaryExpression	"""%02x"""		4242681	0					
ANR	4245519	Argument	input [ i ]		4242681	1					
ANR	4245520	ArrayIndexing	input [ i ]		4242681	0					
ANR	4245521	Identifier	input		4242681	0					
ANR	4245522	Identifier	i		4242681	1					
ANR	4245523	ExpressionStatement	r_cons_newline ( )	849:3:25739:25756	4242681	2	True				
ANR	4245524	CallExpression	r_cons_newline ( )		4242681	0					
ANR	4245525	Callee	r_cons_newline		4242681	0					
ANR	4245526	Identifier	r_cons_newline		4242681	0					
ANR	4245527	ArgumentList			4242681	1					
ANR	4245528	BreakStatement	break ;	851:2:25764:25769	4242681	148	True				
ANR	4245529	Label	case 'E' :	852:1:25772:25780	4242681	149	True				
ANR	4245530	ExpressionStatement	r_core_clippy ( r_str_trim_ro ( input + 1 ) )	853:2:25804:25845	4242681	150	True				
ANR	4245531	CallExpression	r_core_clippy ( r_str_trim_ro ( input + 1 ) )		4242681	0					
ANR	4245532	Callee	r_core_clippy		4242681	0					
ANR	4245533	Identifier	r_core_clippy		4242681	0					
ANR	4245534	ArgumentList	r_str_trim_ro ( input + 1 )		4242681	1					
ANR	4245535	Argument	r_str_trim_ro ( input + 1 )		4242681	0					
ANR	4245536	CallExpression	r_str_trim_ro ( input + 1 )		4242681	0					
ANR	4245537	Callee	r_str_trim_ro		4242681	0					
ANR	4245538	Identifier	r_str_trim_ro		4242681	0					
ANR	4245539	ArgumentList	input + 1		4242681	1					
ANR	4245540	Argument	input + 1		4242681	0					
ANR	4245541	AdditiveExpression	input + 1		4242681	0		+			
ANR	4245542	Identifier	input		4242681	0					
ANR	4245543	PrimaryExpression	1		4242681	1					
ANR	4245544	BreakStatement	break ;	854:2:25849:25854	4242681	151	True				
ANR	4245545	Label	case 'e' :	855:1:25857:25865	4242681	152	True				
ANR	4245546	SwitchStatement	switch ( input [ 1 ] )		4242681	153					
ANR	4245547	Condition	input [ 1 ]	856:10:25890:25897	4242681	0	True				
ANR	4245548	ArrayIndexing	input [ 1 ]		4242681	0					
ANR	4245549	Identifier	input		4242681	0					
ANR	4245550	PrimaryExpression	1		4242681	1					
ANR	4245551	CompoundStatement		471:20:12364:12364	4242681	1					
ANR	4245552	Label	case '=' :	857:2:25904:25912	4242681	0	True				
ANR	4245553	CompoundStatement		473:3:12392:12435	4242681	1					
ANR	4245554	IdentifierDeclStatement	"ut64 pc = r_num_math ( core -> num , input + 2 ) ;"	858:3:25928:25971	4242681	0	True				
ANR	4245555	IdentifierDecl	"pc = r_num_math ( core -> num , input + 2 )"		4242681	0					
ANR	4245556	IdentifierDeclType	ut64		4242681	0					
ANR	4245557	Identifier	pc		4242681	1					
ANR	4245558	AssignmentExpression	"pc = r_num_math ( core -> num , input + 2 )"		4242681	2		=			
ANR	4245559	Identifier	pc		4242681	0					
ANR	4245560	CallExpression	"r_num_math ( core -> num , input + 2 )"		4242681	1					
ANR	4245561	Callee	r_num_math		4242681	0					
ANR	4245562	Identifier	r_num_math		4242681	0					
ANR	4245563	ArgumentList	core -> num		4242681	1					
ANR	4245564	Argument	core -> num		4242681	0					
ANR	4245565	PtrMemberAccess	core -> num		4242681	0					
ANR	4245566	Identifier	core		4242681	0					
ANR	4245567	Identifier	num		4242681	1					
ANR	4245568	Argument	input + 2		4242681	1					
ANR	4245569	AdditiveExpression	input + 2		4242681	0		+			
ANR	4245570	Identifier	input		4242681	0					
ANR	4245571	PrimaryExpression	2		4242681	1					
ANR	4245572	ExpressionStatement	"r_print_progressbar ( core -> print , pc , 80 )"	859:3:25976:26017	4242681	1	True				
ANR	4245573	CallExpression	"r_print_progressbar ( core -> print , pc , 80 )"		4242681	0					
ANR	4245574	Callee	r_print_progressbar		4242681	0					
ANR	4245575	Identifier	r_print_progressbar		4242681	0					
ANR	4245576	ArgumentList	core -> print		4242681	1					
ANR	4245577	Argument	core -> print		4242681	0					
ANR	4245578	PtrMemberAccess	core -> print		4242681	0					
ANR	4245579	Identifier	core		4242681	0					
ANR	4245580	Identifier	print		4242681	1					
ANR	4245581	Argument	pc		4242681	1					
ANR	4245582	Identifier	pc		4242681	0					
ANR	4245583	Argument	80		4242681	2					
ANR	4245584	PrimaryExpression	80		4242681	0					
ANR	4245585	ExpressionStatement	r_cons_newline ( )	860:3:26022:26039	4242681	2	True				
ANR	4245586	CallExpression	r_cons_newline ( )		4242681	0					
ANR	4245587	Callee	r_cons_newline		4242681	0					
ANR	4245588	Identifier	r_cons_newline		4242681	0					
ANR	4245589	ArgumentList			4242681	1					
ANR	4245590	BreakStatement	break ;	861:3:26044:26049	4242681	3	True				
ANR	4245591	Label	case 'b' :	863:2:26057:26065	4242681	2	True				
ANR	4245592	CompoundStatement		481:3:12631:12673	4242681	3					
ANR	4245593	IdentifierDeclStatement	char * arg = strdup ( r_str_trim_ro ( input + 2 ) ) ;	864:3:26081:26127	4242681	0	True				
ANR	4245594	IdentifierDecl	* arg = strdup ( r_str_trim_ro ( input + 2 ) )		4242681	0					
ANR	4245595	IdentifierDeclType	char *		4242681	0					
ANR	4245596	Identifier	arg		4242681	1					
ANR	4245597	AssignmentExpression	* arg = strdup ( r_str_trim_ro ( input + 2 ) )		4242681	2		=			
ANR	4245598	Identifier	arg		4242681	0					
ANR	4245599	CallExpression	strdup ( r_str_trim_ro ( input + 2 ) )		4242681	1					
ANR	4245600	Callee	strdup		4242681	0					
ANR	4245601	Identifier	strdup		4242681	0					
ANR	4245602	ArgumentList	r_str_trim_ro ( input + 2 )		4242681	1					
ANR	4245603	Argument	r_str_trim_ro ( input + 2 )		4242681	0					
ANR	4245604	CallExpression	r_str_trim_ro ( input + 2 )		4242681	0					
ANR	4245605	Callee	r_str_trim_ro		4242681	0					
ANR	4245606	Identifier	r_str_trim_ro		4242681	0					
ANR	4245607	ArgumentList	input + 2		4242681	1					
ANR	4245608	Argument	input + 2		4242681	0					
ANR	4245609	AdditiveExpression	input + 2		4242681	0		+			
ANR	4245610	Identifier	input		4242681	0					
ANR	4245611	PrimaryExpression	2		4242681	1					
ANR	4245612	IdentifierDeclStatement	"int n = r_str_split ( arg , ' ' ) ;"	865:3:26132:26162	4242681	1	True				
ANR	4245613	IdentifierDecl	"n = r_str_split ( arg , ' ' )"		4242681	0					
ANR	4245614	IdentifierDeclType	int		4242681	0					
ANR	4245615	Identifier	n		4242681	1					
ANR	4245616	AssignmentExpression	"n = r_str_split ( arg , ' ' )"		4242681	2		=			
ANR	4245617	Identifier	n		4242681	0					
ANR	4245618	CallExpression	"r_str_split ( arg , ' ' )"		4242681	1					
ANR	4245619	Callee	r_str_split		4242681	0					
ANR	4245620	Identifier	r_str_split		4242681	0					
ANR	4245621	ArgumentList	arg		4242681	1					
ANR	4245622	Argument	arg		4242681	0					
ANR	4245623	Identifier	arg		4242681	0					
ANR	4245624	Argument	' '		4242681	1					
ANR	4245625	PrimaryExpression	' '		4242681	0					
ANR	4245626	IdentifierDeclStatement	"ut64 * portions = calloc ( n , sizeof ( ut64 ) ) ;"	866:3:26167:26209	4242681	2	True				
ANR	4245627	IdentifierDecl	"* portions = calloc ( n , sizeof ( ut64 ) )"		4242681	0					
ANR	4245628	IdentifierDeclType	ut64 *		4242681	0					
ANR	4245629	Identifier	portions		4242681	1					
ANR	4245630	AssignmentExpression	"* portions = calloc ( n , sizeof ( ut64 ) )"		4242681	2		=			
ANR	4245631	Identifier	portions		4242681	0					
ANR	4245632	CallExpression	"calloc ( n , sizeof ( ut64 ) )"		4242681	1					
ANR	4245633	Callee	calloc		4242681	0					
ANR	4245634	Identifier	calloc		4242681	0					
ANR	4245635	ArgumentList	n		4242681	1					
ANR	4245636	Argument	n		4242681	0					
ANR	4245637	Identifier	n		4242681	0					
ANR	4245638	Argument	sizeof ( ut64 )		4242681	1					
ANR	4245639	SizeofExpression	sizeof ( ut64 )		4242681	0					
ANR	4245640	Sizeof	sizeof		4242681	0					
ANR	4245641	SizeofOperand	ut64		4242681	1					
ANR	4245642	ForStatement	for ( i = 0 ; i < n ; i ++ )		4242681	3					
ANR	4245643	ForInit	i = 0 ;	867:8:26219:26224	4242681	0	True				
ANR	4245644	AssignmentExpression	i = 0		4242681	0		=			
ANR	4245645	Identifier	i		4242681	0					
ANR	4245646	PrimaryExpression	0		4242681	1					
ANR	4245647	Condition	i < n	867:15:26226:26230	4242681	1	True				
ANR	4245648	RelationalExpression	i < n		4242681	0		<			
ANR	4245649	Identifier	i		4242681	0					
ANR	4245650	Identifier	n		4242681	1					
ANR	4245651	PostIncDecOperationExpression	i ++	867:22:26233:26235	4242681	2	True				
ANR	4245652	Identifier	i		4242681	0					
ANR	4245653	IncDec	++		4242681	1					
ANR	4245654	CompoundStatement		482:27:12702:12702	4242681	3					
ANR	4245655	ExpressionStatement	"portions [ i ] = r_num_math ( core -> num , r_str_word_get0 ( arg , i ) )"	868:4:26244:26306	4242681	0	True				
ANR	4245656	AssignmentExpression	"portions [ i ] = r_num_math ( core -> num , r_str_word_get0 ( arg , i ) )"		4242681	0		=			
ANR	4245657	ArrayIndexing	portions [ i ]		4242681	0					
ANR	4245658	Identifier	portions		4242681	0					
ANR	4245659	Identifier	i		4242681	1					
ANR	4245660	CallExpression	"r_num_math ( core -> num , r_str_word_get0 ( arg , i ) )"		4242681	1					
ANR	4245661	Callee	r_num_math		4242681	0					
ANR	4245662	Identifier	r_num_math		4242681	0					
ANR	4245663	ArgumentList	core -> num		4242681	1					
ANR	4245664	Argument	core -> num		4242681	0					
ANR	4245665	PtrMemberAccess	core -> num		4242681	0					
ANR	4245666	Identifier	core		4242681	0					
ANR	4245667	Identifier	num		4242681	1					
ANR	4245668	Argument	"r_str_word_get0 ( arg , i )"		4242681	1					
ANR	4245669	CallExpression	"r_str_word_get0 ( arg , i )"		4242681	0					
ANR	4245670	Callee	r_str_word_get0		4242681	0					
ANR	4245671	Identifier	r_str_word_get0		4242681	0					
ANR	4245672	ArgumentList	arg		4242681	1					
ANR	4245673	Argument	arg		4242681	0					
ANR	4245674	Identifier	arg		4242681	0					
ANR	4245675	Argument	i		4242681	1					
ANR	4245676	Identifier	i		4242681	0					
ANR	4245677	ExpressionStatement	"r_print_portionbar ( core -> print , portions , n )"	870:3:26316:26361	4242681	4	True				
ANR	4245678	CallExpression	"r_print_portionbar ( core -> print , portions , n )"		4242681	0					
ANR	4245679	Callee	r_print_portionbar		4242681	0					
ANR	4245680	Identifier	r_print_portionbar		4242681	0					
ANR	4245681	ArgumentList	core -> print		4242681	1					
ANR	4245682	Argument	core -> print		4242681	0					
ANR	4245683	PtrMemberAccess	core -> print		4242681	0					
ANR	4245684	Identifier	core		4242681	0					
ANR	4245685	Identifier	print		4242681	1					
ANR	4245686	Argument	portions		4242681	1					
ANR	4245687	Identifier	portions		4242681	0					
ANR	4245688	Argument	n		4242681	2					
ANR	4245689	Identifier	n		4242681	0					
ANR	4245690	ExpressionStatement	free ( arg )	871:3:26366:26376	4242681	5	True				
ANR	4245691	CallExpression	free ( arg )		4242681	0					
ANR	4245692	Callee	free		4242681	0					
ANR	4245693	Identifier	free		4242681	0					
ANR	4245694	ArgumentList	arg		4242681	1					
ANR	4245695	Argument	arg		4242681	0					
ANR	4245696	Identifier	arg		4242681	0					
ANR	4245697	BreakStatement	break ;	872:3:26381:26386	4242681	6	True				
ANR	4245698	Label	case 's' :	874:2:26394:26402	4242681	4	True				
ANR	4245699	CompoundStatement		492:3:12938:12965	4242681	5					
ANR	4245700	IdentifierDeclStatement	char * msg = strdup ( input + 2 ) ;	875:3:26418:26448	4242681	0	True				
ANR	4245701	IdentifierDecl	* msg = strdup ( input + 2 )		4242681	0					
ANR	4245702	IdentifierDeclType	char *		4242681	0					
ANR	4245703	Identifier	msg		4242681	1					
ANR	4245704	AssignmentExpression	* msg = strdup ( input + 2 )		4242681	2		=			
ANR	4245705	Identifier	msg		4242681	0					
ANR	4245706	CallExpression	strdup ( input + 2 )		4242681	1					
ANR	4245707	Callee	strdup		4242681	0					
ANR	4245708	Identifier	strdup		4242681	0					
ANR	4245709	ArgumentList	input + 2		4242681	1					
ANR	4245710	Argument	input + 2		4242681	0					
ANR	4245711	AdditiveExpression	input + 2		4242681	0		+			
ANR	4245712	Identifier	input		4242681	0					
ANR	4245713	PrimaryExpression	2		4242681	1					
ANR	4245714	ExpressionStatement	r_str_trim ( msg )	876:3:26453:26469	4242681	1	True				
ANR	4245715	CallExpression	r_str_trim ( msg )		4242681	0					
ANR	4245716	Callee	r_str_trim		4242681	0					
ANR	4245717	Identifier	r_str_trim		4242681	0					
ANR	4245718	ArgumentList	msg		4242681	1					
ANR	4245719	Argument	msg		4242681	0					
ANR	4245720	Identifier	msg		4242681	0					
ANR	4245721	IdentifierDeclStatement	"char * p = strchr ( msg , '&' ) ;"	877:3:26474:26501	4242681	2	True				
ANR	4245722	IdentifierDecl	"* p = strchr ( msg , '&' )"		4242681	0					
ANR	4245723	IdentifierDeclType	char *		4242681	0					
ANR	4245724	Identifier	p		4242681	1					
ANR	4245725	AssignmentExpression	"* p = strchr ( msg , '&' )"		4242681	2		=			
ANR	4245726	Identifier	p		4242681	0					
ANR	4245727	CallExpression	"strchr ( msg , '&' )"		4242681	1					
ANR	4245728	Callee	strchr		4242681	0					
ANR	4245729	Identifier	strchr		4242681	0					
ANR	4245730	ArgumentList	msg		4242681	1					
ANR	4245731	Argument	msg		4242681	0					
ANR	4245732	Identifier	msg		4242681	0					
ANR	4245733	Argument	'&'		4242681	1					
ANR	4245734	PrimaryExpression	'&'		4242681	0					
ANR	4245735	IfStatement	if ( p )		4242681	3					
ANR	4245736	Condition	p	878:7:26510:26510	4242681	0	True				
ANR	4245737	Identifier	p		4242681	0					
ANR	4245738	ExpressionStatement	* p = 0	878:10:26513:26519	4242681	1	True				
ANR	4245739	AssignmentExpression	* p = 0		4242681	0		=			
ANR	4245740	UnaryOperationExpression	* p		4242681	0					
ANR	4245741	UnaryOperator	*		4242681	0					
ANR	4245742	Identifier	p		4242681	1					
ANR	4245743	PrimaryExpression	0		4242681	1					
ANR	4245744	ExpressionStatement	"r_sys_tts ( msg , p != NULL )"	879:3:26524:26550	4242681	4	True				
ANR	4245745	CallExpression	"r_sys_tts ( msg , p != NULL )"		4242681	0					
ANR	4245746	Callee	r_sys_tts		4242681	0					
ANR	4245747	Identifier	r_sys_tts		4242681	0					
ANR	4245748	ArgumentList	msg		4242681	1					
ANR	4245749	Argument	msg		4242681	0					
ANR	4245750	Identifier	msg		4242681	0					
ANR	4245751	Argument	p != NULL		4242681	1					
ANR	4245752	EqualityExpression	p != NULL		4242681	0		!=			
ANR	4245753	Identifier	p		4242681	0					
ANR	4245754	Identifier	NULL		4242681	1					
ANR	4245755	ExpressionStatement	free ( msg )	880:3:26555:26565	4242681	5	True				
ANR	4245756	CallExpression	free ( msg )		4242681	0					
ANR	4245757	Callee	free		4242681	0					
ANR	4245758	Identifier	free		4242681	0					
ANR	4245759	ArgumentList	msg		4242681	1					
ANR	4245760	Argument	msg		4242681	0					
ANR	4245761	Identifier	msg		4242681	0					
ANR	4245762	BreakStatement	break ;	881:3:26570:26575	4242681	6	True				
ANR	4245763	Label	case 'c' :	883:2:26583:26591	4242681	6	True				
ANR	4245764	ExpressionStatement	"r_cons_column ( r_num_math ( core -> num , input + 2 ) )"	884:3:26612:26661	4242681	7	True				
ANR	4245765	CallExpression	"r_cons_column ( r_num_math ( core -> num , input + 2 ) )"		4242681	0					
ANR	4245766	Callee	r_cons_column		4242681	0					
ANR	4245767	Identifier	r_cons_column		4242681	0					
ANR	4245768	ArgumentList	"r_num_math ( core -> num , input + 2 )"		4242681	1					
ANR	4245769	Argument	"r_num_math ( core -> num , input + 2 )"		4242681	0					
ANR	4245770	CallExpression	"r_num_math ( core -> num , input + 2 )"		4242681	0					
ANR	4245771	Callee	r_num_math		4242681	0					
ANR	4245772	Identifier	r_num_math		4242681	0					
ANR	4245773	ArgumentList	core -> num		4242681	1					
ANR	4245774	Argument	core -> num		4242681	0					
ANR	4245775	PtrMemberAccess	core -> num		4242681	0					
ANR	4245776	Identifier	core		4242681	0					
ANR	4245777	Identifier	num		4242681	1					
ANR	4245778	Argument	input + 2		4242681	1					
ANR	4245779	AdditiveExpression	input + 2		4242681	0		+			
ANR	4245780	Identifier	input		4242681	0					
ANR	4245781	PrimaryExpression	2		4242681	1					
ANR	4245782	BreakStatement	break ;	885:3:26666:26671	4242681	8	True				
ANR	4245783	Label	case 'g' :	886:2:26675:26683	4242681	9	True				
ANR	4245784	CompoundStatement		504:3:13239:13269	4242681	10					
ANR	4245785	IdentifierDeclStatement	int x = atoi ( input + 2 ) ;	887:3:26706:26730	4242681	0	True				
ANR	4245786	IdentifierDecl	x = atoi ( input + 2 )		4242681	0					
ANR	4245787	IdentifierDeclType	int		4242681	0					
ANR	4245788	Identifier	x		4242681	1					
ANR	4245789	AssignmentExpression	x = atoi ( input + 2 )		4242681	2		=			
ANR	4245790	Identifier	x		4242681	0					
ANR	4245791	CallExpression	atoi ( input + 2 )		4242681	1					
ANR	4245792	Callee	atoi		4242681	0					
ANR	4245793	Identifier	atoi		4242681	0					
ANR	4245794	ArgumentList	input + 2		4242681	1					
ANR	4245795	Argument	input + 2		4242681	0					
ANR	4245796	AdditiveExpression	input + 2		4242681	0		+			
ANR	4245797	Identifier	input		4242681	0					
ANR	4245798	PrimaryExpression	2		4242681	1					
ANR	4245799	IdentifierDeclStatement	"char * arg = strchr ( input + 2 , ' ' ) ;"	888:3:26735:26770	4242681	1	True				
ANR	4245800	IdentifierDecl	"* arg = strchr ( input + 2 , ' ' )"		4242681	0					
ANR	4245801	IdentifierDeclType	char *		4242681	0					
ANR	4245802	Identifier	arg		4242681	1					
ANR	4245803	AssignmentExpression	"* arg = strchr ( input + 2 , ' ' )"		4242681	2		=			
ANR	4245804	Identifier	arg		4242681	0					
ANR	4245805	CallExpression	"strchr ( input + 2 , ' ' )"		4242681	1					
ANR	4245806	Callee	strchr		4242681	0					
ANR	4245807	Identifier	strchr		4242681	0					
ANR	4245808	ArgumentList	input + 2		4242681	1					
ANR	4245809	Argument	input + 2		4242681	0					
ANR	4245810	AdditiveExpression	input + 2		4242681	0		+			
ANR	4245811	Identifier	input		4242681	0					
ANR	4245812	PrimaryExpression	2		4242681	1					
ANR	4245813	Argument	' '		4242681	1					
ANR	4245814	PrimaryExpression	' '		4242681	0					
ANR	4245815	IdentifierDeclStatement	int y = arg ? atoi ( arg + 1 ) : 0 ;	889:3:26775:26805	4242681	2	True				
ANR	4245816	IdentifierDecl	y = arg ? atoi ( arg + 1 ) : 0		4242681	0					
ANR	4245817	IdentifierDeclType	int		4242681	0					
ANR	4245818	Identifier	y		4242681	1					
ANR	4245819	AssignmentExpression	y = arg ? atoi ( arg + 1 ) : 0		4242681	2		=			
ANR	4245820	Identifier	y		4242681	0					
ANR	4245821	ConditionalExpression	arg ? atoi ( arg + 1 ) : 0		4242681	1					
ANR	4245822	Condition	arg		4242681	0					
ANR	4245823	Identifier	arg		4242681	0					
ANR	4245824	CallExpression	atoi ( arg + 1 )		4242681	1					
ANR	4245825	Callee	atoi		4242681	0					
ANR	4245826	Identifier	atoi		4242681	0					
ANR	4245827	ArgumentList	arg + 1		4242681	1					
ANR	4245828	Argument	arg + 1		4242681	0					
ANR	4245829	AdditiveExpression	arg + 1		4242681	0		+			
ANR	4245830	Identifier	arg		4242681	0					
ANR	4245831	PrimaryExpression	1		4242681	1					
ANR	4245832	PrimaryExpression	0		4242681	2					
ANR	4245833	ExpressionStatement	"r_cons_gotoxy ( x , y )"	890:3:26810:26830	4242681	3	True				
ANR	4245834	CallExpression	"r_cons_gotoxy ( x , y )"		4242681	0					
ANR	4245835	Callee	r_cons_gotoxy		4242681	0					
ANR	4245836	Identifier	r_cons_gotoxy		4242681	0					
ANR	4245837	ArgumentList	x		4242681	1					
ANR	4245838	Argument	x		4242681	0					
ANR	4245839	Identifier	x		4242681	0					
ANR	4245840	Argument	y		4242681	1					
ANR	4245841	Identifier	y		4242681	0					
ANR	4245842	BreakStatement	break ;	892:3:26840:26845	4242681	11	True				
ANR	4245843	Label	case 'n' :	893:2:26849:26857	4242681	12	True				
ANR	4245844	CompoundStatement		511:3:13450:13488	4242681	13					
ANR	4245845	IdentifierDeclStatement	const char * msg = r_str_trim_ro ( input + 2 ) ;	894:3:26881:26924	4242681	0	True				
ANR	4245846	IdentifierDecl	* msg = r_str_trim_ro ( input + 2 )		4242681	0					
ANR	4245847	IdentifierDeclType	const char *		4242681	0					
ANR	4245848	Identifier	msg		4242681	1					
ANR	4245849	AssignmentExpression	* msg = r_str_trim_ro ( input + 2 )		4242681	2		=			
ANR	4245850	Identifier	msg		4242681	0					
ANR	4245851	CallExpression	r_str_trim_ro ( input + 2 )		4242681	1					
ANR	4245852	Callee	r_str_trim_ro		4242681	0					
ANR	4245853	Identifier	r_str_trim_ro		4242681	0					
ANR	4245854	ArgumentList	input + 2		4242681	1					
ANR	4245855	Argument	input + 2		4242681	0					
ANR	4245856	AdditiveExpression	input + 2		4242681	0		+			
ANR	4245857	Identifier	input		4242681	0					
ANR	4245858	PrimaryExpression	2		4242681	1					
ANR	4245859	IdentifierDeclStatement	"char * newmsg = filterFlags ( core , msg ) ;"	896:3:26986:27024	4242681	1	True				
ANR	4245860	IdentifierDecl	"* newmsg = filterFlags ( core , msg )"		4242681	0					
ANR	4245861	IdentifierDeclType	char *		4242681	0					
ANR	4245862	Identifier	newmsg		4242681	1					
ANR	4245863	AssignmentExpression	"* newmsg = filterFlags ( core , msg )"		4242681	2		=			
ANR	4245864	Identifier	newmsg		4242681	0					
ANR	4245865	CallExpression	"filterFlags ( core , msg )"		4242681	1					
ANR	4245866	Callee	filterFlags		4242681	0					
ANR	4245867	Identifier	filterFlags		4242681	0					
ANR	4245868	ArgumentList	core		4242681	1					
ANR	4245869	Argument	core		4242681	0					
ANR	4245870	Identifier	core		4242681	0					
ANR	4245871	Argument	msg		4242681	1					
ANR	4245872	Identifier	msg		4242681	0					
ANR	4245873	ExpressionStatement	r_str_unescape ( newmsg )	897:3:27029:27052	4242681	2	True				
ANR	4245874	CallExpression	r_str_unescape ( newmsg )		4242681	0					
ANR	4245875	Callee	r_str_unescape		4242681	0					
ANR	4245876	Identifier	r_str_unescape		4242681	0					
ANR	4245877	ArgumentList	newmsg		4242681	1					
ANR	4245878	Argument	newmsg		4242681	0					
ANR	4245879	Identifier	newmsg		4242681	0					
ANR	4245880	ExpressionStatement	r_cons_print ( newmsg )	898:3:27057:27078	4242681	3	True				
ANR	4245881	CallExpression	r_cons_print ( newmsg )		4242681	0					
ANR	4245882	Callee	r_cons_print		4242681	0					
ANR	4245883	Identifier	r_cons_print		4242681	0					
ANR	4245884	ArgumentList	newmsg		4242681	1					
ANR	4245885	Argument	newmsg		4242681	0					
ANR	4245886	Identifier	newmsg		4242681	0					
ANR	4245887	ExpressionStatement	free ( newmsg )	899:3:27083:27096	4242681	4	True				
ANR	4245888	CallExpression	free ( newmsg )		4242681	0					
ANR	4245889	Callee	free		4242681	0					
ANR	4245890	Identifier	free		4242681	0					
ANR	4245891	ArgumentList	newmsg		4242681	1					
ANR	4245892	Argument	newmsg		4242681	0					
ANR	4245893	Identifier	newmsg		4242681	0					
ANR	4245894	BreakStatement	break ;	900:3:27101:27106	4242681	5	True				
ANR	4245895	Label	case 'd' :	902:2:27114:27122	4242681	14	True				
ANR	4245896	IfStatement	if ( input [ 2 ] == 'd' )		4242681	15					
ANR	4245897	Condition	input [ 2 ] == 'd'	903:9:27142:27156	4242681	0	True				
ANR	4245898	EqualityExpression	input [ 2 ] == 'd'		4242681	0		==			
ANR	4245899	ArrayIndexing	input [ 2 ]		4242681	0					
ANR	4245900	Identifier	input		4242681	0					
ANR	4245901	PrimaryExpression	2		4242681	1					
ANR	4245902	PrimaryExpression	'd'		4242681	1					
ANR	4245903	CompoundStatement		519:6:13631:13638	4242681	1					
ANR	4245904	IdentifierDeclStatement	"int i , j ;"	904:6:27167:27174	4242681	0	True				
ANR	4245905	IdentifierDecl	i		4242681	0					
ANR	4245906	IdentifierDeclType	int		4242681	0					
ANR	4245907	Identifier	i		4242681	1					
ANR	4245908	IdentifierDecl	j		4242681	1					
ANR	4245909	IdentifierDeclType	int		4242681	0					
ANR	4245910	Identifier	j		4242681	1					
ANR	4245911	ExpressionStatement	r_cons_show_cursor ( 0 )	905:6:27182:27204	4242681	1	True				
ANR	4245912	CallExpression	r_cons_show_cursor ( 0 )		4242681	0					
ANR	4245913	Callee	r_cons_show_cursor		4242681	0					
ANR	4245914	Identifier	r_cons_show_cursor		4242681	0					
ANR	4245915	ArgumentList	0		4242681	1					
ANR	4245916	Argument	0		4242681	0					
ANR	4245917	PrimaryExpression	0		4242681	0					
ANR	4245918	ExpressionStatement	r_cons_clear00 ( )	906:6:27212:27229	4242681	2	True				
ANR	4245919	CallExpression	r_cons_clear00 ( )		4242681	0					
ANR	4245920	Callee	r_cons_clear00		4242681	0					
ANR	4245921	Identifier	r_cons_clear00		4242681	0					
ANR	4245922	ArgumentList			4242681	1					
ANR	4245923	ForStatement	for ( i = 1 ; i < 100 ; i ++ )		4242681	3					
ANR	4245924	ForInit	i = 1 ;	907:11:27242:27247	4242681	0	True				
ANR	4245925	AssignmentExpression	i = 1		4242681	0		=			
ANR	4245926	Identifier	i		4242681	0					
ANR	4245927	PrimaryExpression	1		4242681	1					
ANR	4245928	Condition	i < 100	907:18:27249:27255	4242681	1	True				
ANR	4245929	RelationalExpression	i < 100		4242681	0		<			
ANR	4245930	Identifier	i		4242681	0					
ANR	4245931	PrimaryExpression	100		4242681	1					
ANR	4245932	PostIncDecOperationExpression	i ++	907:27:27258:27260	4242681	2	True				
ANR	4245933	Identifier	i		4242681	0					
ANR	4245934	IncDec	++		4242681	1					
ANR	4245935	CompoundStatement		522:32:13727:13727	4242681	3					
ANR	4245936	IfStatement	if ( r_cons_is_breaked ( ) )		4242681	0					
ANR	4245937	Condition	r_cons_is_breaked ( )	908:11:27276:27295	4242681	0	True				
ANR	4245938	CallExpression	r_cons_is_breaked ( )		4242681	0					
ANR	4245939	Callee	r_cons_is_breaked		4242681	0					
ANR	4245940	Identifier	r_cons_is_breaked		4242681	0					
ANR	4245941	ArgumentList			4242681	1					
ANR	4245942	CompoundStatement		523:33:13762:13762	4242681	1					
ANR	4245943	BreakStatement	break ;	909:8:27308:27313	4242681	0	True				
ANR	4245944	ForStatement	for ( j = 0 ; j < 20 ; j ++ )		4242681	1					
ANR	4245945	ForInit	j = 0 ;	911:12:27336:27341	4242681	0	True				
ANR	4245946	AssignmentExpression	j = 0		4242681	0		=			
ANR	4245947	Identifier	j		4242681	0					
ANR	4245948	PrimaryExpression	0		4242681	1					
ANR	4245949	Condition	j < 20	911:19:27343:27348	4242681	1	True				
ANR	4245950	RelationalExpression	j < 20		4242681	0		<			
ANR	4245951	Identifier	j		4242681	0					
ANR	4245952	PrimaryExpression	20		4242681	1					
ANR	4245953	PostIncDecOperationExpression	j ++	911:27:27351:27353	4242681	2	True				
ANR	4245954	Identifier	j		4242681	0					
ANR	4245955	IncDec	++		4242681	1					
ANR	4245956	CompoundStatement		527:8:13830:13855	4242681	3					
ANR	4245957	IdentifierDeclStatement	char * d = r_str_donut ( i ) ;	912:8:27366:27391	4242681	0	True				
ANR	4245958	IdentifierDecl	* d = r_str_donut ( i )		4242681	0					
ANR	4245959	IdentifierDeclType	char *		4242681	0					
ANR	4245960	Identifier	d		4242681	1					
ANR	4245961	AssignmentExpression	* d = r_str_donut ( i )		4242681	2		=			
ANR	4245962	Identifier	d		4242681	0					
ANR	4245963	CallExpression	r_str_donut ( i )		4242681	1					
ANR	4245964	Callee	r_str_donut		4242681	0					
ANR	4245965	Identifier	r_str_donut		4242681	0					
ANR	4245966	ArgumentList	i		4242681	1					
ANR	4245967	Argument	i		4242681	0					
ANR	4245968	Identifier	i		4242681	0					
ANR	4245969	ExpressionStatement	"r_cons_gotoxy ( 0 , 0 )"	913:8:27401:27420	4242681	1	True				
ANR	4245970	CallExpression	"r_cons_gotoxy ( 0 , 0 )"		4242681	0					
ANR	4245971	Callee	r_cons_gotoxy		4242681	0					
ANR	4245972	Identifier	r_cons_gotoxy		4242681	0					
ANR	4245973	ArgumentList	0		4242681	1					
ANR	4245974	Argument	0		4242681	0					
ANR	4245975	PrimaryExpression	0		4242681	0					
ANR	4245976	Argument	0		4242681	1					
ANR	4245977	PrimaryExpression	0		4242681	0					
ANR	4245978	ExpressionStatement	r_str_trim_tail ( d )	914:8:27430:27449	4242681	2	True				
ANR	4245979	CallExpression	r_str_trim_tail ( d )		4242681	0					
ANR	4245980	Callee	r_str_trim_tail		4242681	0					
ANR	4245981	Identifier	r_str_trim_tail		4242681	0					
ANR	4245982	ArgumentList	d		4242681	1					
ANR	4245983	Argument	d		4242681	0					
ANR	4245984	Identifier	d		4242681	0					
ANR	4245985	ExpressionStatement	r_cons_clear_line ( 0 )	915:8:27459:27480	4242681	3	True				
ANR	4245986	CallExpression	r_cons_clear_line ( 0 )		4242681	0					
ANR	4245987	Callee	r_cons_clear_line		4242681	0					
ANR	4245988	Identifier	r_cons_clear_line		4242681	0					
ANR	4245989	ArgumentList	0		4242681	1					
ANR	4245990	Argument	0		4242681	0					
ANR	4245991	PrimaryExpression	0		4242681	0					
ANR	4245992	ExpressionStatement	"r_cons_printf ( ""Downloading the Gibson...\\n\\n"" )"	916:8:27490:27537	4242681	4	True				
ANR	4245993	CallExpression	"r_cons_printf ( ""Downloading the Gibson...\\n\\n"" )"		4242681	0					
ANR	4245994	Callee	r_cons_printf		4242681	0					
ANR	4245995	Identifier	r_cons_printf		4242681	0					
ANR	4245996	ArgumentList	"""Downloading the Gibson...\\n\\n"""		4242681	1					
ANR	4245997	Argument	"""Downloading the Gibson...\\n\\n"""		4242681	0					
ANR	4245998	PrimaryExpression	"""Downloading the Gibson...\\n\\n"""		4242681	0					
ANR	4245999	ExpressionStatement	"r_core_cmdf ( core , ""?e=%d"" , i )"	917:8:27547:27577	4242681	5	True				
ANR	4246000	CallExpression	"r_core_cmdf ( core , ""?e=%d"" , i )"		4242681	0					
ANR	4246001	Callee	r_core_cmdf		4242681	0					
ANR	4246002	Identifier	r_core_cmdf		4242681	0					
ANR	4246003	ArgumentList	core		4242681	1					
ANR	4246004	Argument	core		4242681	0					
ANR	4246005	Identifier	core		4242681	0					
ANR	4246006	Argument	"""?e=%d"""		4242681	1					
ANR	4246007	PrimaryExpression	"""?e=%d"""		4242681	0					
ANR	4246008	Argument	i		4242681	2					
ANR	4246009	Identifier	i		4242681	0					
ANR	4246010	ExpressionStatement	r_cons_strcat ( d )	918:8:27587:27604	4242681	6	True				
ANR	4246011	CallExpression	r_cons_strcat ( d )		4242681	0					
ANR	4246012	Callee	r_cons_strcat		4242681	0					
ANR	4246013	Identifier	r_cons_strcat		4242681	0					
ANR	4246014	ArgumentList	d		4242681	1					
ANR	4246015	Argument	d		4242681	0					
ANR	4246016	Identifier	d		4242681	0					
ANR	4246017	ExpressionStatement	r_cons_clear_line ( 0 )	919:8:27614:27635	4242681	7	True				
ANR	4246018	CallExpression	r_cons_clear_line ( 0 )		4242681	0					
ANR	4246019	Callee	r_cons_clear_line		4242681	0					
ANR	4246020	Identifier	r_cons_clear_line		4242681	0					
ANR	4246021	ArgumentList	0		4242681	1					
ANR	4246022	Argument	0		4242681	0					
ANR	4246023	PrimaryExpression	0		4242681	0					
ANR	4246024	ExpressionStatement	r_cons_newline ( )	920:8:27645:27662	4242681	8	True				
ANR	4246025	CallExpression	r_cons_newline ( )		4242681	0					
ANR	4246026	Callee	r_cons_newline		4242681	0					
ANR	4246027	Identifier	r_cons_newline		4242681	0					
ANR	4246028	ArgumentList			4242681	1					
ANR	4246029	ExpressionStatement	free ( d )	921:8:27672:27680	4242681	9	True				
ANR	4246030	CallExpression	free ( d )		4242681	0					
ANR	4246031	Callee	free		4242681	0					
ANR	4246032	Identifier	free		4242681	0					
ANR	4246033	ArgumentList	d		4242681	1					
ANR	4246034	Argument	d		4242681	0					
ANR	4246035	Identifier	d		4242681	0					
ANR	4246036	ExpressionStatement	r_cons_flush ( )	922:8:27690:27705	4242681	10	True				
ANR	4246037	CallExpression	r_cons_flush ( )		4242681	0					
ANR	4246038	Callee	r_cons_flush		4242681	0					
ANR	4246039	Identifier	r_cons_flush		4242681	0					
ANR	4246040	ArgumentList			4242681	1					
ANR	4246041	ExpressionStatement	r_sys_usleep ( 2000 )	923:8:27715:27734	4242681	11	True				
ANR	4246042	CallExpression	r_sys_usleep ( 2000 )		4242681	0					
ANR	4246043	Callee	r_sys_usleep		4242681	0					
ANR	4246044	Identifier	r_sys_usleep		4242681	0					
ANR	4246045	ArgumentList	2000		4242681	1					
ANR	4246046	Argument	2000		4242681	0					
ANR	4246047	PrimaryExpression	2000		4242681	0					
ANR	4246048	ExpressionStatement	r_cons_clear00 ( )	926:6:27759:27775	4242681	4	True				
ANR	4246049	CallExpression	r_cons_clear00 ( )		4242681	0					
ANR	4246050	Callee	r_cons_clear00		4242681	0					
ANR	4246051	Identifier	r_cons_clear00		4242681	0					
ANR	4246052	ArgumentList			4242681	1					
ANR	4246053	ExpressionStatement	"r_cons_printf ( ""\\nPayload installed. Thanks for your patience.\\n\\n"" )"	927:6:27783:27851	4242681	5	True				
ANR	4246054	CallExpression	"r_cons_printf ( ""\\nPayload installed. Thanks for your patience.\\n\\n"" )"		4242681	0					
ANR	4246055	Callee	r_cons_printf		4242681	0					
ANR	4246056	Identifier	r_cons_printf		4242681	0					
ANR	4246057	ArgumentList	"""\\nPayload installed. Thanks for your patience.\\n\\n"""		4242681	1					
ANR	4246058	Argument	"""\\nPayload installed. Thanks for your patience.\\n\\n"""		4242681	0					
ANR	4246059	PrimaryExpression	"""\\nPayload installed. Thanks for your patience.\\n\\n"""		4242681	0					
ANR	4246060	ElseStatement	else		4242681	0					
ANR	4246061	CompoundStatement		546:6:14427:14527	4242681	0					
ANR	4246062	IdentifierDeclStatement	"char * d = r_str_donut ( r_num_math ( core -> num , input + 2 ) ) ;"	929:6:27871:27928	4242681	0	True				
ANR	4246063	IdentifierDecl	"* d = r_str_donut ( r_num_math ( core -> num , input + 2 ) )"		4242681	0					
ANR	4246064	IdentifierDeclType	char *		4242681	0					
ANR	4246065	Identifier	d		4242681	1					
ANR	4246066	AssignmentExpression	"* d = r_str_donut ( r_num_math ( core -> num , input + 2 ) )"		4242681	2		=			
ANR	4246067	Identifier	d		4242681	0					
ANR	4246068	CallExpression	"r_str_donut ( r_num_math ( core -> num , input + 2 ) )"		4242681	1					
ANR	4246069	Callee	r_str_donut		4242681	0					
ANR	4246070	Identifier	r_str_donut		4242681	0					
ANR	4246071	ArgumentList	"r_num_math ( core -> num , input + 2 )"		4242681	1					
ANR	4246072	Argument	"r_num_math ( core -> num , input + 2 )"		4242681	0					
ANR	4246073	CallExpression	"r_num_math ( core -> num , input + 2 )"		4242681	0					
ANR	4246074	Callee	r_num_math		4242681	0					
ANR	4246075	Identifier	r_num_math		4242681	0					
ANR	4246076	ArgumentList	core -> num		4242681	1					
ANR	4246077	Argument	core -> num		4242681	0					
ANR	4246078	PtrMemberAccess	core -> num		4242681	0					
ANR	4246079	Identifier	core		4242681	0					
ANR	4246080	Identifier	num		4242681	1					
ANR	4246081	Argument	input + 2		4242681	1					
ANR	4246082	AdditiveExpression	input + 2		4242681	0		+			
ANR	4246083	Identifier	input		4242681	0					
ANR	4246084	PrimaryExpression	2		4242681	1					
ANR	4246085	ExpressionStatement	r_str_trim_tail ( d )	930:6:27936:27955	4242681	1	True				
ANR	4246086	CallExpression	r_str_trim_tail ( d )		4242681	0					
ANR	4246087	Callee	r_str_trim_tail		4242681	0					
ANR	4246088	Identifier	r_str_trim_tail		4242681	0					
ANR	4246089	ArgumentList	d		4242681	1					
ANR	4246090	Argument	d		4242681	0					
ANR	4246091	Identifier	d		4242681	0					
ANR	4246092	IdentifierDeclStatement	"const char * color = ( core -> cons && core -> cons -> context -> pal . flag ) ? core -> cons -> context -> pal . flag : """" ;"	931:6:27963:28063	4242681	2	True				
ANR	4246093	IdentifierDecl	"* color = ( core -> cons && core -> cons -> context -> pal . flag ) ? core -> cons -> context -> pal . flag : """""		4242681	0					
ANR	4246094	IdentifierDeclType	const char *		4242681	0					
ANR	4246095	Identifier	color		4242681	1					
ANR	4246096	AssignmentExpression	"* color = ( core -> cons && core -> cons -> context -> pal . flag ) ? core -> cons -> context -> pal . flag : """""		4242681	2		=			
ANR	4246097	Identifier	color		4242681	0					
ANR	4246098	ConditionalExpression	"( core -> cons && core -> cons -> context -> pal . flag ) ? core -> cons -> context -> pal . flag : """""		4242681	1					
ANR	4246099	Condition	core -> cons && core -> cons -> context -> pal . flag		4242681	0					
ANR	4246100	AndExpression	core -> cons && core -> cons -> context -> pal . flag		4242681	0		&&			
ANR	4246101	PtrMemberAccess	core -> cons		4242681	0					
ANR	4246102	Identifier	core		4242681	0					
ANR	4246103	Identifier	cons		4242681	1					
ANR	4246104	MemberAccess	core -> cons -> context -> pal . flag		4242681	1					
ANR	4246105	PtrMemberAccess	core -> cons -> context -> pal		4242681	0					
ANR	4246106	PtrMemberAccess	core -> cons -> context		4242681	0					
ANR	4246107	PtrMemberAccess	core -> cons		4242681	0					
ANR	4246108	Identifier	core		4242681	0					
ANR	4246109	Identifier	cons		4242681	1					
ANR	4246110	Identifier	context		4242681	1					
ANR	4246111	Identifier	pal		4242681	1					
ANR	4246112	Identifier	flag		4242681	1					
ANR	4246113	MemberAccess	core -> cons -> context -> pal . flag		4242681	1					
ANR	4246114	PtrMemberAccess	core -> cons -> context -> pal		4242681	0					
ANR	4246115	PtrMemberAccess	core -> cons -> context		4242681	0					
ANR	4246116	PtrMemberAccess	core -> cons		4242681	0					
ANR	4246117	Identifier	core		4242681	0					
ANR	4246118	Identifier	cons		4242681	1					
ANR	4246119	Identifier	context		4242681	1					
ANR	4246120	Identifier	pal		4242681	1					
ANR	4246121	Identifier	flag		4242681	1					
ANR	4246122	PrimaryExpression	""""""		4242681	2					
ANR	4246123	ExpressionStatement	"r_cons_printf ( ""%s%s"" , color , d )"	932:6:28071:28103	4242681	3	True				
ANR	4246124	CallExpression	"r_cons_printf ( ""%s%s"" , color , d )"		4242681	0					
ANR	4246125	Callee	r_cons_printf		4242681	0					
ANR	4246126	Identifier	r_cons_printf		4242681	0					
ANR	4246127	ArgumentList	"""%s%s"""		4242681	1					
ANR	4246128	Argument	"""%s%s"""		4242681	0					
ANR	4246129	PrimaryExpression	"""%s%s"""		4242681	0					
ANR	4246130	Argument	color		4242681	1					
ANR	4246131	Identifier	color		4242681	0					
ANR	4246132	Argument	d		4242681	2					
ANR	4246133	Identifier	d		4242681	0					
ANR	4246134	ExpressionStatement	r_cons_newline ( )	933:6:28111:28128	4242681	4	True				
ANR	4246135	CallExpression	r_cons_newline ( )		4242681	0					
ANR	4246136	Callee	r_cons_newline		4242681	0					
ANR	4246137	Identifier	r_cons_newline		4242681	0					
ANR	4246138	ArgumentList			4242681	1					
ANR	4246139	ExpressionStatement	free ( d )	934:6:28136:28144	4242681	5	True				
ANR	4246140	CallExpression	free ( d )		4242681	0					
ANR	4246141	Callee	free		4242681	0					
ANR	4246142	Identifier	free		4242681	0					
ANR	4246143	ArgumentList	d		4242681	1					
ANR	4246144	Argument	d		4242681	0					
ANR	4246145	Identifier	d		4242681	0					
ANR	4246146	BreakStatement	break ;	936:3:28154:28159	4242681	16	True				
ANR	4246147	Label	case 'p' :	937:2:28163:28171	4242681	17	True				
ANR	4246148	CompoundStatement		562:6:14932:14984	4242681	18					
ANR	4246149	IdentifierDeclStatement	"char * word , * str = strdup ( input + 2 ) ;"	939:3:28183:28220	4242681	0	True				
ANR	4246150	IdentifierDecl	* word		4242681	0					
ANR	4246151	IdentifierDeclType	char *		4242681	0					
ANR	4246152	Identifier	word		4242681	1					
ANR	4246153	IdentifierDecl	* str = strdup ( input + 2 )		4242681	1					
ANR	4246154	IdentifierDeclType	char *		4242681	0					
ANR	4246155	Identifier	str		4242681	1					
ANR	4246156	AssignmentExpression	* str = strdup ( input + 2 )		4242681	2		=			
ANR	4246157	Identifier	str		4242681	0					
ANR	4246158	CallExpression	strdup ( input + 2 )		4242681	1					
ANR	4246159	Callee	strdup		4242681	0					
ANR	4246160	Identifier	strdup		4242681	0					
ANR	4246161	ArgumentList	input + 2		4242681	1					
ANR	4246162	Argument	input + 2		4242681	0					
ANR	4246163	AdditiveExpression	input + 2		4242681	0		+			
ANR	4246164	Identifier	input		4242681	0					
ANR	4246165	PrimaryExpression	2		4242681	1					
ANR	4246166	IdentifierDeclStatement	"RList * list = r_str_split_list ( str , "" "" , 0 ) ;"	940:6:28228:28272	4242681	1	True				
ANR	4246167	IdentifierDecl	"* list = r_str_split_list ( str , "" "" , 0 )"		4242681	0					
ANR	4246168	IdentifierDeclType	RList *		4242681	0					
ANR	4246169	Identifier	list		4242681	1					
ANR	4246170	AssignmentExpression	"* list = r_str_split_list ( str , "" "" , 0 )"		4242681	2		=			
ANR	4246171	Identifier	list		4242681	0					
ANR	4246172	CallExpression	"r_str_split_list ( str , "" "" , 0 )"		4242681	1					
ANR	4246173	Callee	r_str_split_list		4242681	0					
ANR	4246174	Identifier	r_str_split_list		4242681	0					
ANR	4246175	ArgumentList	str		4242681	1					
ANR	4246176	Argument	str		4242681	0					
ANR	4246177	Identifier	str		4242681	0					
ANR	4246178	Argument	""" """		4242681	1					
ANR	4246179	PrimaryExpression	""" """		4242681	0					
ANR	4246180	Argument	0		4242681	2					
ANR	4246181	PrimaryExpression	0		4242681	0					
ANR	4246182	IdentifierDeclStatement	"ut64 * nums = calloc ( sizeof ( ut64 ) , r_list_length ( list ) ) ;"	941:6:28280:28337	4242681	2	True				
ANR	4246183	IdentifierDecl	"* nums = calloc ( sizeof ( ut64 ) , r_list_length ( list ) )"		4242681	0					
ANR	4246184	IdentifierDeclType	ut64 *		4242681	0					
ANR	4246185	Identifier	nums		4242681	1					
ANR	4246186	AssignmentExpression	"* nums = calloc ( sizeof ( ut64 ) , r_list_length ( list ) )"		4242681	2		=			
ANR	4246187	Identifier	nums		4242681	0					
ANR	4246188	CallExpression	"calloc ( sizeof ( ut64 ) , r_list_length ( list ) )"		4242681	1					
ANR	4246189	Callee	calloc		4242681	0					
ANR	4246190	Identifier	calloc		4242681	0					
ANR	4246191	ArgumentList	sizeof ( ut64 )		4242681	1					
ANR	4246192	Argument	sizeof ( ut64 )		4242681	0					
ANR	4246193	SizeofExpression	sizeof ( ut64 )		4242681	0					
ANR	4246194	Sizeof	sizeof		4242681	0					
ANR	4246195	SizeofOperand	ut64		4242681	1					
ANR	4246196	Argument	r_list_length ( list )		4242681	1					
ANR	4246197	CallExpression	r_list_length ( list )		4242681	0					
ANR	4246198	Callee	r_list_length		4242681	0					
ANR	4246199	Identifier	r_list_length		4242681	0					
ANR	4246200	ArgumentList	list		4242681	1					
ANR	4246201	Argument	list		4242681	0					
ANR	4246202	Identifier	list		4242681	0					
ANR	4246203	IdentifierDeclStatement	int i = 0 ;	942:6:28345:28354	4242681	3	True				
ANR	4246204	IdentifierDecl	i = 0		4242681	0					
ANR	4246205	IdentifierDeclType	int		4242681	0					
ANR	4246206	Identifier	i		4242681	1					
ANR	4246207	AssignmentExpression	i = 0		4242681	2		=			
ANR	4246208	Identifier	i		4242681	0					
ANR	4246209	PrimaryExpression	0		4242681	1					
ANR	4246210	Statement	r_list_foreach	943:6:28362:28375	4242681	4	True				
ANR	4246211	Statement	(	943:21:28377:28377	4242681	5	True				
ANR	4246212	Statement	list	943:22:28378:28381	4242681	6	True				
ANR	4246213	Statement	","	943:26:28382:28382	4242681	7	True				
ANR	4246214	Statement	iter	943:28:28384:28387	4242681	8	True				
ANR	4246215	Statement	","	943:32:28388:28388	4242681	9	True				
ANR	4246216	Statement	word	943:34:28390:28393	4242681	10	True				
ANR	4246217	Statement	)	943:38:28394:28394	4242681	11	True				
ANR	4246218	CompoundStatement		558:40:14860:14860	4242681	12					
ANR	4246219	ExpressionStatement	"nums [ i ] = r_num_math ( core -> num , word )"	944:5:28403:28441	4242681	0	True				
ANR	4246220	AssignmentExpression	"nums [ i ] = r_num_math ( core -> num , word )"		4242681	0		=			
ANR	4246221	ArrayIndexing	nums [ i ]		4242681	0					
ANR	4246222	Identifier	nums		4242681	0					
ANR	4246223	Identifier	i		4242681	1					
ANR	4246224	CallExpression	"r_num_math ( core -> num , word )"		4242681	1					
ANR	4246225	Callee	r_num_math		4242681	0					
ANR	4246226	Identifier	r_num_math		4242681	0					
ANR	4246227	ArgumentList	core -> num		4242681	1					
ANR	4246228	Argument	core -> num		4242681	0					
ANR	4246229	PtrMemberAccess	core -> num		4242681	0					
ANR	4246230	Identifier	core		4242681	0					
ANR	4246231	Identifier	num		4242681	1					
ANR	4246232	Argument	word		4242681	1					
ANR	4246233	Identifier	word		4242681	0					
ANR	4246234	ExpressionStatement		944:44:28442:28442	4242681	1	True				
ANR	4246235	ExpressionStatement	i ++	945:5:28449:28452	4242681	2	True				
ANR	4246236	PostIncDecOperationExpression	i ++		4242681	0					
ANR	4246237	Identifier	i		4242681	0					
ANR	4246238	IncDec	++		4242681	1					
ANR	4246239	IdentifierDeclStatement	"int size = r_config_get_i ( core -> config , ""hex.cols"" ) ;"	947:6:28468:28520	4242681	13	True				
ANR	4246240	IdentifierDecl	"size = r_config_get_i ( core -> config , ""hex.cols"" )"		4242681	0					
ANR	4246241	IdentifierDeclType	int		4242681	0					
ANR	4246242	Identifier	size		4242681	1					
ANR	4246243	AssignmentExpression	"size = r_config_get_i ( core -> config , ""hex.cols"" )"		4242681	2		=			
ANR	4246244	Identifier	size		4242681	0					
ANR	4246245	CallExpression	"r_config_get_i ( core -> config , ""hex.cols"" )"		4242681	1					
ANR	4246246	Callee	r_config_get_i		4242681	0					
ANR	4246247	Identifier	r_config_get_i		4242681	0					
ANR	4246248	ArgumentList	core -> config		4242681	1					
ANR	4246249	Argument	core -> config		4242681	0					
ANR	4246250	PtrMemberAccess	core -> config		4242681	0					
ANR	4246251	Identifier	core		4242681	0					
ANR	4246252	Identifier	config		4242681	1					
ANR	4246253	Argument	"""hex.cols"""		4242681	1					
ANR	4246254	PrimaryExpression	"""hex.cols"""		4242681	0					
ANR	4246255	ExpressionStatement	"r_print_pie ( core -> print , nums , r_list_length ( list ) , size )"	948:6:28528:28587	4242681	14	True				
ANR	4246256	CallExpression	"r_print_pie ( core -> print , nums , r_list_length ( list ) , size )"		4242681	0					
ANR	4246257	Callee	r_print_pie		4242681	0					
ANR	4246258	Identifier	r_print_pie		4242681	0					
ANR	4246259	ArgumentList	core -> print		4242681	1					
ANR	4246260	Argument	core -> print		4242681	0					
ANR	4246261	PtrMemberAccess	core -> print		4242681	0					
ANR	4246262	Identifier	core		4242681	0					
ANR	4246263	Identifier	print		4242681	1					
ANR	4246264	Argument	nums		4242681	1					
ANR	4246265	Identifier	nums		4242681	0					
ANR	4246266	Argument	r_list_length ( list )		4242681	2					
ANR	4246267	CallExpression	r_list_length ( list )		4242681	0					
ANR	4246268	Callee	r_list_length		4242681	0					
ANR	4246269	Identifier	r_list_length		4242681	0					
ANR	4246270	ArgumentList	list		4242681	1					
ANR	4246271	Argument	list		4242681	0					
ANR	4246272	Identifier	list		4242681	0					
ANR	4246273	Argument	size		4242681	3					
ANR	4246274	Identifier	size		4242681	0					
ANR	4246275	ExpressionStatement	r_list_free ( list )	949:6:28595:28613	4242681	15	True				
ANR	4246276	CallExpression	r_list_free ( list )		4242681	0					
ANR	4246277	Callee	r_list_free		4242681	0					
ANR	4246278	Identifier	r_list_free		4242681	0					
ANR	4246279	ArgumentList	list		4242681	1					
ANR	4246280	Argument	list		4242681	0					
ANR	4246281	Identifier	list		4242681	0					
ANR	4246282	BreakStatement	break ;	951:3:28625:28630	4242681	19	True				
ANR	4246283	Label	case ' ' :	952:2:28634:28642	4242681	20	True				
ANR	4246284	CompoundStatement		570:3:15216:15254	4242681	21					
ANR	4246285	IdentifierDeclStatement	const char * msg = r_str_trim_ro ( input + 1 ) ;	953:3:28649:28690	4242681	0	True				
ANR	4246286	IdentifierDecl	* msg = r_str_trim_ro ( input + 1 )		4242681	0					
ANR	4246287	IdentifierDeclType	const char *		4242681	0					
ANR	4246288	Identifier	msg		4242681	1					
ANR	4246289	AssignmentExpression	* msg = r_str_trim_ro ( input + 1 )		4242681	2		=			
ANR	4246290	Identifier	msg		4242681	0					
ANR	4246291	CallExpression	r_str_trim_ro ( input + 1 )		4242681	1					
ANR	4246292	Callee	r_str_trim_ro		4242681	0					
ANR	4246293	Identifier	r_str_trim_ro		4242681	0					
ANR	4246294	ArgumentList	input + 1		4242681	1					
ANR	4246295	Argument	input + 1		4242681	0					
ANR	4246296	AdditiveExpression	input + 1		4242681	0		+			
ANR	4246297	Identifier	input		4242681	0					
ANR	4246298	PrimaryExpression	1		4242681	1					
ANR	4246299	IdentifierDeclStatement	"char * newmsg = filterFlags ( core , msg ) ;"	955:3:28752:28790	4242681	1	True				
ANR	4246300	IdentifierDecl	"* newmsg = filterFlags ( core , msg )"		4242681	0					
ANR	4246301	IdentifierDeclType	char *		4242681	0					
ANR	4246302	Identifier	newmsg		4242681	1					
ANR	4246303	AssignmentExpression	"* newmsg = filterFlags ( core , msg )"		4242681	2		=			
ANR	4246304	Identifier	newmsg		4242681	0					
ANR	4246305	CallExpression	"filterFlags ( core , msg )"		4242681	1					
ANR	4246306	Callee	filterFlags		4242681	0					
ANR	4246307	Identifier	filterFlags		4242681	0					
ANR	4246308	ArgumentList	core		4242681	1					
ANR	4246309	Argument	core		4242681	0					
ANR	4246310	Identifier	core		4242681	0					
ANR	4246311	Argument	msg		4242681	1					
ANR	4246312	Identifier	msg		4242681	0					
ANR	4246313	ExpressionStatement	r_str_unescape ( newmsg )	956:3:28795:28818	4242681	2	True				
ANR	4246314	CallExpression	r_str_unescape ( newmsg )		4242681	0					
ANR	4246315	Callee	r_str_unescape		4242681	0					
ANR	4246316	Identifier	r_str_unescape		4242681	0					
ANR	4246317	ArgumentList	newmsg		4242681	1					
ANR	4246318	Argument	newmsg		4242681	0					
ANR	4246319	Identifier	newmsg		4242681	0					
ANR	4246320	ExpressionStatement	r_cons_println ( newmsg )	957:3:28823:28846	4242681	3	True				
ANR	4246321	CallExpression	r_cons_println ( newmsg )		4242681	0					
ANR	4246322	Callee	r_cons_println		4242681	0					
ANR	4246323	Identifier	r_cons_println		4242681	0					
ANR	4246324	ArgumentList	newmsg		4242681	1					
ANR	4246325	Argument	newmsg		4242681	0					
ANR	4246326	Identifier	newmsg		4242681	0					
ANR	4246327	ExpressionStatement	free ( newmsg )	958:3:28851:28864	4242681	4	True				
ANR	4246328	CallExpression	free ( newmsg )		4242681	0					
ANR	4246329	Callee	free		4242681	0					
ANR	4246330	Identifier	free		4242681	0					
ANR	4246331	ArgumentList	newmsg		4242681	1					
ANR	4246332	Argument	newmsg		4242681	0					
ANR	4246333	Identifier	newmsg		4242681	0					
ANR	4246334	BreakStatement	break ;	960:3:28874:28879	4242681	22	True				
ANR	4246335	Label	case 0 :	961:2:28883:28889	4242681	23	True				
ANR	4246336	ExpressionStatement	r_cons_newline ( )	962:3:28894:28911	4242681	24	True				
ANR	4246337	CallExpression	r_cons_newline ( )		4242681	0					
ANR	4246338	Callee	r_cons_newline		4242681	0					
ANR	4246339	Identifier	r_cons_newline		4242681	0					
ANR	4246340	ArgumentList			4242681	1					
ANR	4246341	BreakStatement	break ;	963:3:28916:28921	4242681	25	True				
ANR	4246342	Label	default :	964:2:28925:28932	4242681	26	True				
ANR	4246343	Identifier	default		4242681	0					
ANR	4246344	ExpressionStatement	"eprintf ( ""Usage: ?e[...]\\n"" )"	965:3:28937:28965	4242681	27	True				
ANR	4246345	CallExpression	"eprintf ( ""Usage: ?e[...]\\n"" )"		4242681	0					
ANR	4246346	Callee	eprintf		4242681	0					
ANR	4246347	Identifier	eprintf		4242681	0					
ANR	4246348	ArgumentList	"""Usage: ?e[...]\\n"""		4242681	1					
ANR	4246349	Argument	"""Usage: ?e[...]\\n"""		4242681	0					
ANR	4246350	PrimaryExpression	"""Usage: ?e[...]\\n"""		4242681	0					
ANR	4246351	ExpressionStatement	"eprintf ( "" e msg       echo message\\n"" )"	966:3:28970:29009	4242681	28	True				
ANR	4246352	CallExpression	"eprintf ( "" e msg       echo message\\n"" )"		4242681	0					
ANR	4246353	Callee	eprintf		4242681	0					
ANR	4246354	Identifier	eprintf		4242681	0					
ANR	4246355	ArgumentList	""" e msg       echo message\\n"""		4242681	1					
ANR	4246356	Argument	""" e msg       echo message\\n"""		4242681	0					
ANR	4246357	PrimaryExpression	""" e msg       echo message\\n"""		4242681	0					
ANR	4246358	ExpressionStatement	"eprintf ( "" e= N...     progressbar N percent\\n"" )"	967:3:29014:29062	4242681	29	True				
ANR	4246359	CallExpression	"eprintf ( "" e= N...     progressbar N percent\\n"" )"		4242681	0					
ANR	4246360	Callee	eprintf		4242681	0					
ANR	4246361	Identifier	eprintf		4242681	0					
ANR	4246362	ArgumentList	""" e= N...     progressbar N percent\\n"""		4242681	1					
ANR	4246363	Argument	""" e= N...     progressbar N percent\\n"""		4242681	0					
ANR	4246364	PrimaryExpression	""" e= N...     progressbar N percent\\n"""		4242681	0					
ANR	4246365	ExpressionStatement	"eprintf ( "" ed N...     display a donut\\n"" )"	968:3:29067:29109	4242681	30	True				
ANR	4246366	CallExpression	"eprintf ( "" ed N...     display a donut\\n"" )"		4242681	0					
ANR	4246367	Callee	eprintf		4242681	0					
ANR	4246368	Identifier	eprintf		4242681	0					
ANR	4246369	ArgumentList	""" ed N...     display a donut\\n"""		4242681	1					
ANR	4246370	Argument	""" ed N...     display a donut\\n"""		4242681	0					
ANR	4246371	PrimaryExpression	""" ed N...     display a donut\\n"""		4242681	0					
ANR	4246372	ExpressionStatement	"eprintf ( "" ep N...     echo pie chart\\n"" )"	969:3:29114:29155	4242681	31	True				
ANR	4246373	CallExpression	"eprintf ( "" ep N...     echo pie chart\\n"" )"		4242681	0					
ANR	4246374	Callee	eprintf		4242681	0					
ANR	4246375	Identifier	eprintf		4242681	0					
ANR	4246376	ArgumentList	""" ep N...     echo pie chart\\n"""		4242681	1					
ANR	4246377	Argument	""" ep N...     echo pie chart\\n"""		4242681	0					
ANR	4246378	PrimaryExpression	""" ep N...     echo pie chart\\n"""		4242681	0					
ANR	4246379	ExpressionStatement	"eprintf ( "" eb N...     echo portions bar\\n"" )"	970:3:29160:29204	4242681	32	True				
ANR	4246380	CallExpression	"eprintf ( "" eb N...     echo portions bar\\n"" )"		4242681	0					
ANR	4246381	Callee	eprintf		4242681	0					
ANR	4246382	Identifier	eprintf		4242681	0					
ANR	4246383	ArgumentList	""" eb N...     echo portions bar\\n"""		4242681	1					
ANR	4246384	Argument	""" eb N...     echo portions bar\\n"""		4242681	0					
ANR	4246385	PrimaryExpression	""" eb N...     echo portions bar\\n"""		4242681	0					
ANR	4246386	ExpressionStatement	"eprintf ( "" en msg      echo without newline\\n"" )"	971:3:29209:29256	4242681	33	True				
ANR	4246387	CallExpression	"eprintf ( "" en msg      echo without newline\\n"" )"		4242681	0					
ANR	4246388	Callee	eprintf		4242681	0					
ANR	4246389	Identifier	eprintf		4242681	0					
ANR	4246390	ArgumentList	""" en msg      echo without newline\\n"""		4242681	1					
ANR	4246391	Argument	""" en msg      echo without newline\\n"""		4242681	0					
ANR	4246392	PrimaryExpression	""" en msg      echo without newline\\n"""		4242681	0					
ANR	4246393	ExpressionStatement	"eprintf ( "" eg x y      gotoxy\\n"" )"	972:3:29261:29294	4242681	34	True				
ANR	4246394	CallExpression	"eprintf ( "" eg x y      gotoxy\\n"" )"		4242681	0					
ANR	4246395	Callee	eprintf		4242681	0					
ANR	4246396	Identifier	eprintf		4242681	0					
ANR	4246397	ArgumentList	""" eg x y      gotoxy\\n"""		4242681	1					
ANR	4246398	Argument	""" eg x y      gotoxy\\n"""		4242681	0					
ANR	4246399	PrimaryExpression	""" eg x y      gotoxy\\n"""		4242681	0					
ANR	4246400	ExpressionStatement	"eprintf ( "" es msg      use text-to-speech technology\\n"" )"	973:3:29299:29355	4242681	35	True				
ANR	4246401	CallExpression	"eprintf ( "" es msg      use text-to-speech technology\\n"" )"		4242681	0					
ANR	4246402	Callee	eprintf		4242681	0					
ANR	4246403	Identifier	eprintf		4242681	0					
ANR	4246404	ArgumentList	""" es msg      use text-to-speech technology\\n"""		4242681	1					
ANR	4246405	Argument	""" es msg      use text-to-speech technology\\n"""		4242681	0					
ANR	4246406	PrimaryExpression	""" es msg      use text-to-speech technology\\n"""		4242681	0					
ANR	4246407	BreakStatement	break ;	974:3:29360:29365	4242681	36	True				
ANR	4246408	BreakStatement	break ;	976:2:29373:29378	4242681	154	True				
ANR	4246409	Label	case 's' :	977:1:29381:29389	4242681	155	True				
ANR	4246410	CompoundStatement		594:2:15912:15924	4242681	156					
ANR	4246411	IdentifierDeclStatement	"ut64 from , to , step ;"	978:2:29425:29444	4242681	0	True				
ANR	4246412	IdentifierDecl	from		4242681	0					
ANR	4246413	IdentifierDeclType	ut64		4242681	0					
ANR	4246414	Identifier	from		4242681	1					
ANR	4246415	IdentifierDecl	to		4242681	1					
ANR	4246416	IdentifierDeclType	ut64		4242681	0					
ANR	4246417	Identifier	to		4242681	1					
ANR	4246418	IdentifierDecl	step		4242681	2					
ANR	4246419	IdentifierDeclType	ut64		4242681	0					
ANR	4246420	Identifier	step		4242681	1					
ANR	4246421	IdentifierDeclStatement	"char * p , * p2 ;"	979:2:29448:29460	4242681	1	True				
ANR	4246422	IdentifierDecl	* p		4242681	0					
ANR	4246423	IdentifierDeclType	char *		4242681	0					
ANR	4246424	Identifier	p		4242681	1					
ANR	4246425	IdentifierDecl	* p2		4242681	1					
ANR	4246426	IdentifierDeclType	char *		4242681	0					
ANR	4246427	Identifier	p2		4242681	1					
ANR	4246428	ForStatement	for ( input ++ ; * input == ' ' ; input ++ )		4242681	2					
ANR	4246429	ForInit	input ++ ;	980:7:29469:29476	4242681	0	True				
ANR	4246430	PostIncDecOperationExpression	input ++		4242681	0					
ANR	4246431	Identifier	input		4242681	0					
ANR	4246432	IncDec	++		4242681	1					
ANR	4246433	Condition	* input == ' '	980:16:29478:29488	4242681	1	True				
ANR	4246434	EqualityExpression	* input == ' '		4242681	0		==			
ANR	4246435	UnaryOperationExpression	* input		4242681	0					
ANR	4246436	UnaryOperator	*		4242681	0					
ANR	4246437	Identifier	input		4242681	1					
ANR	4246438	PrimaryExpression	' '		4242681	1					
ANR	4246439	PostIncDecOperationExpression	input ++	980:29:29491:29497	4242681	2	True				
ANR	4246440	Identifier	input		4242681	0					
ANR	4246441	IncDec	++		4242681	1					
ANR	4246442	ExpressionStatement		980:37:29499:29499	4242681	3	True				
ANR	4246443	ExpressionStatement	"p = strchr ( input , ' ' )"	981:2:29503:29526	4242681	3	True				
ANR	4246444	AssignmentExpression	"p = strchr ( input , ' ' )"		4242681	0		=			
ANR	4246445	Identifier	p		4242681	0					
ANR	4246446	CallExpression	"strchr ( input , ' ' )"		4242681	1					
ANR	4246447	Callee	strchr		4242681	0					
ANR	4246448	Identifier	strchr		4242681	0					
ANR	4246449	ArgumentList	input		4242681	1					
ANR	4246450	Argument	input		4242681	0					
ANR	4246451	Identifier	input		4242681	0					
ANR	4246452	Argument	' '		4242681	1					
ANR	4246453	PrimaryExpression	' '		4242681	0					
ANR	4246454	IfStatement	if ( p )		4242681	4					
ANR	4246455	Condition	p	982:6:29534:29534	4242681	0	True				
ANR	4246456	Identifier	p		4242681	0					
ANR	4246457	CompoundStatement		597:9:16001:16001	4242681	1					
ANR	4246458	ExpressionStatement	* p = '\\0'	983:3:29542:29551	4242681	0	True				
ANR	4246459	AssignmentExpression	* p = '\\0'		4242681	0		=			
ANR	4246460	UnaryOperationExpression	* p		4242681	0					
ANR	4246461	UnaryOperator	*		4242681	0					
ANR	4246462	Identifier	p		4242681	1					
ANR	4246463	PrimaryExpression	'\\0'		4242681	1					
ANR	4246464	ExpressionStatement	"from = r_num_math ( core -> num , input )"	984:3:29556:29592	4242681	1	True				
ANR	4246465	AssignmentExpression	"from = r_num_math ( core -> num , input )"		4242681	0		=			
ANR	4246466	Identifier	from		4242681	0					
ANR	4246467	CallExpression	"r_num_math ( core -> num , input )"		4242681	1					
ANR	4246468	Callee	r_num_math		4242681	0					
ANR	4246469	Identifier	r_num_math		4242681	0					
ANR	4246470	ArgumentList	core -> num		4242681	1					
ANR	4246471	Argument	core -> num		4242681	0					
ANR	4246472	PtrMemberAccess	core -> num		4242681	0					
ANR	4246473	Identifier	core		4242681	0					
ANR	4246474	Identifier	num		4242681	1					
ANR	4246475	Argument	input		4242681	1					
ANR	4246476	Identifier	input		4242681	0					
ANR	4246477	ExpressionStatement	"p2 = strchr ( p + 1 , ' ' )"	985:3:29597:29619	4242681	2	True				
ANR	4246478	AssignmentExpression	"p2 = strchr ( p + 1 , ' ' )"		4242681	0		=			
ANR	4246479	Identifier	p2		4242681	0					
ANR	4246480	CallExpression	"strchr ( p + 1 , ' ' )"		4242681	1					
ANR	4246481	Callee	strchr		4242681	0					
ANR	4246482	Identifier	strchr		4242681	0					
ANR	4246483	ArgumentList	p + 1		4242681	1					
ANR	4246484	Argument	p + 1		4242681	0					
ANR	4246485	AdditiveExpression	p + 1		4242681	0		+			
ANR	4246486	Identifier	p		4242681	0					
ANR	4246487	PrimaryExpression	1		4242681	1					
ANR	4246488	Argument	' '		4242681	1					
ANR	4246489	PrimaryExpression	' '		4242681	0					
ANR	4246490	IfStatement	if ( p2 )		4242681	3					
ANR	4246491	Condition	p2	986:7:29628:29629	4242681	0	True				
ANR	4246492	Identifier	p2		4242681	0					
ANR	4246493	CompoundStatement		601:11:16096:16096	4242681	1					
ANR	4246494	ExpressionStatement	* p2 = '\\0'	987:4:29638:29648	4242681	0	True				
ANR	4246495	AssignmentExpression	* p2 = '\\0'		4242681	0		=			
ANR	4246496	UnaryOperationExpression	* p2		4242681	0					
ANR	4246497	UnaryOperator	*		4242681	0					
ANR	4246498	Identifier	p2		4242681	1					
ANR	4246499	PrimaryExpression	'\\0'		4242681	1					
ANR	4246500	ExpressionStatement	"step = r_num_math ( core -> num , p2 + 1 )"	988:4:29654:29691	4242681	1	True				
ANR	4246501	AssignmentExpression	"step = r_num_math ( core -> num , p2 + 1 )"		4242681	0		=			
ANR	4246502	Identifier	step		4242681	0					
ANR	4246503	CallExpression	"r_num_math ( core -> num , p2 + 1 )"		4242681	1					
ANR	4246504	Callee	r_num_math		4242681	0					
ANR	4246505	Identifier	r_num_math		4242681	0					
ANR	4246506	ArgumentList	core -> num		4242681	1					
ANR	4246507	Argument	core -> num		4242681	0					
ANR	4246508	PtrMemberAccess	core -> num		4242681	0					
ANR	4246509	Identifier	core		4242681	0					
ANR	4246510	Identifier	num		4242681	1					
ANR	4246511	Argument	p2 + 1		4242681	1					
ANR	4246512	AdditiveExpression	p2 + 1		4242681	0		+			
ANR	4246513	Identifier	p2		4242681	0					
ANR	4246514	PrimaryExpression	1		4242681	1					
ANR	4246515	ElseStatement	else		4242681	0					
ANR	4246516	CompoundStatement		604:10:16167:16167	4242681	0					
ANR	4246517	ExpressionStatement	step = 1	990:4:29709:29717	4242681	0	True				
ANR	4246518	AssignmentExpression	step = 1		4242681	0		=			
ANR	4246519	Identifier	step		4242681	0					
ANR	4246520	PrimaryExpression	1		4242681	1					
ANR	4246521	ExpressionStatement	"to = r_num_math ( core -> num , p + 1 )"	992:3:29727:29761	4242681	4	True				
ANR	4246522	AssignmentExpression	"to = r_num_math ( core -> num , p + 1 )"		4242681	0		=			
ANR	4246523	Identifier	to		4242681	0					
ANR	4246524	CallExpression	"r_num_math ( core -> num , p + 1 )"		4242681	1					
ANR	4246525	Callee	r_num_math		4242681	0					
ANR	4246526	Identifier	r_num_math		4242681	0					
ANR	4246527	ArgumentList	core -> num		4242681	1					
ANR	4246528	Argument	core -> num		4242681	0					
ANR	4246529	PtrMemberAccess	core -> num		4242681	0					
ANR	4246530	Identifier	core		4242681	0					
ANR	4246531	Identifier	num		4242681	1					
ANR	4246532	Argument	p + 1		4242681	1					
ANR	4246533	AdditiveExpression	p + 1		4242681	0		+			
ANR	4246534	Identifier	p		4242681	0					
ANR	4246535	PrimaryExpression	1		4242681	1					
ANR	4246536	ForStatement	for ( ; from <= to ; from += step )		4242681	5					
ANR	4246537	Condition	from <= to	993:9:29772:29781	4242681	0	True				
ANR	4246538	RelationalExpression	from <= to		4242681	0		<=			
ANR	4246539	Identifier	from		4242681	0					
ANR	4246540	Identifier	to		4242681	1					
ANR	4246541	AssignmentExpression	from += step	993:21:29784:29795	4242681	1	True	+=			
ANR	4246542	Identifier	from		4242681	0					
ANR	4246543	Identifier	step		4242681	1					
ANR	4246544	Statement	r_cons_printf	994:4:29802:29814	4242681	2	True				
ANR	4246545	Statement	(	994:18:29816:29816	4242681	6	True				
ANR	4246546	Statement	"""%"""	994:19:29817:29819	4242681	7	True				
ANR	4246547	Statement	PFMT64d	994:22:29820:29826	4242681	8	True				
ANR	4246548	Statement	""" """	994:29:29827:29829	4242681	9	True				
ANR	4246549	Statement	","	994:32:29830:29830	4242681	10	True				
ANR	4246550	Statement	from	994:34:29832:29835	4242681	11	True				
ANR	4246551	Statement	)	994:38:29836:29836	4242681	12	True				
ANR	4246552	ExpressionStatement		994:39:29837:29837	4242681	13	True				
ANR	4246553	ExpressionStatement	r_cons_newline ( )	995:3:29842:29859	4242681	14	True				
ANR	4246554	CallExpression	r_cons_newline ( )		4242681	0					
ANR	4246555	Callee	r_cons_newline		4242681	0					
ANR	4246556	Identifier	r_cons_newline		4242681	0					
ANR	4246557	ArgumentList			4242681	1					
ANR	4246558	BreakStatement	break ;	997:2:29867:29872	4242681	5	True				
ANR	4246559	Label	case 'P' :	999:1:29878:29886	4242681	157	True				
ANR	4246560	IfStatement	if ( core -> io -> va )		4242681	158					
ANR	4246561	Condition	core -> io -> va	1000:6:29902:29913	4242681	0	True				
ANR	4246562	PtrMemberAccess	core -> io -> va		4242681	0					
ANR	4246563	PtrMemberAccess	core -> io		4242681	0					
ANR	4246564	Identifier	core		4242681	0					
ANR	4246565	Identifier	io		4242681	1					
ANR	4246566	Identifier	va		4242681	1					
ANR	4246567	CompoundStatement		618:3:16475:16521	4242681	1					
ANR	4246568	IdentifierDeclStatement	"ut64 o , n = ( input [ 0 ] && input [ 1 ] ) ? r_num_math ( core -> num , input + 2 ) : core -> offset ;"	1001:3:29921:30006	4242681	0	True				
ANR	4246569	IdentifierDecl	o		4242681	0					
ANR	4246570	IdentifierDeclType	ut64		4242681	0					
ANR	4246571	Identifier	o		4242681	1					
ANR	4246572	IdentifierDecl	"n = ( input [ 0 ] && input [ 1 ] ) ? r_num_math ( core -> num , input + 2 ) : core -> offset"		4242681	1					
ANR	4246573	IdentifierDeclType	ut64		4242681	0					
ANR	4246574	Identifier	n		4242681	1					
ANR	4246575	AssignmentExpression	"n = ( input [ 0 ] && input [ 1 ] ) ? r_num_math ( core -> num , input + 2 ) : core -> offset"		4242681	2		=			
ANR	4246576	Identifier	n		4242681	0					
ANR	4246577	ConditionalExpression	"( input [ 0 ] && input [ 1 ] ) ? r_num_math ( core -> num , input + 2 ) : core -> offset"		4242681	1					
ANR	4246578	Condition	input [ 0 ] && input [ 1 ]		4242681	0					
ANR	4246579	AndExpression	input [ 0 ] && input [ 1 ]		4242681	0		&&			
ANR	4246580	ArrayIndexing	input [ 0 ]		4242681	0					
ANR	4246581	Identifier	input		4242681	0					
ANR	4246582	PrimaryExpression	0		4242681	1					
ANR	4246583	ArrayIndexing	input [ 1 ]		4242681	1					
ANR	4246584	Identifier	input		4242681	0					
ANR	4246585	PrimaryExpression	1		4242681	1					
ANR	4246586	CallExpression	"r_num_math ( core -> num , input + 2 )"		4242681	1					
ANR	4246587	Callee	r_num_math		4242681	0					
ANR	4246588	Identifier	r_num_math		4242681	0					
ANR	4246589	ArgumentList	core -> num		4242681	1					
ANR	4246590	Argument	core -> num		4242681	0					
ANR	4246591	PtrMemberAccess	core -> num		4242681	0					
ANR	4246592	Identifier	core		4242681	0					
ANR	4246593	Identifier	num		4242681	1					
ANR	4246594	Argument	input + 2		4242681	1					
ANR	4246595	AdditiveExpression	input + 2		4242681	0		+			
ANR	4246596	Identifier	input		4242681	0					
ANR	4246597	PrimaryExpression	2		4242681	1					
ANR	4246598	PtrMemberAccess	core -> offset		4242681	2					
ANR	4246599	Identifier	core		4242681	0					
ANR	4246600	Identifier	offset		4242681	1					
ANR	4246601	IdentifierDeclStatement	"RIOMap * map = r_io_map_get_paddr ( core -> io , n ) ;"	1003:3:30011:30057	4242681	1	True				
ANR	4246602	IdentifierDecl	"* map = r_io_map_get_paddr ( core -> io , n )"		4242681	0					
ANR	4246603	IdentifierDeclType	RIOMap *		4242681	0					
ANR	4246604	Identifier	map		4242681	1					
ANR	4246605	AssignmentExpression	"* map = r_io_map_get_paddr ( core -> io , n )"		4242681	2		=			
ANR	4246606	Identifier	map		4242681	0					
ANR	4246607	CallExpression	"r_io_map_get_paddr ( core -> io , n )"		4242681	1					
ANR	4246608	Callee	r_io_map_get_paddr		4242681	0					
ANR	4246609	Identifier	r_io_map_get_paddr		4242681	0					
ANR	4246610	ArgumentList	core -> io		4242681	1					
ANR	4246611	Argument	core -> io		4242681	0					
ANR	4246612	PtrMemberAccess	core -> io		4242681	0					
ANR	4246613	Identifier	core		4242681	0					
ANR	4246614	Identifier	io		4242681	1					
ANR	4246615	Argument	n		4242681	1					
ANR	4246616	Identifier	n		4242681	0					
ANR	4246617	IfStatement	if ( map )		4242681	2					
ANR	4246618	Condition	map	1004:7:30066:30068	4242681	0	True				
ANR	4246619	Identifier	map		4242681	0					
ANR	4246620	CompoundStatement		619:12:16535:16535	4242681	1					
ANR	4246621	ExpressionStatement	o = n + map -> itv . addr - map -> delta	1005:4:30077:30111	4242681	0	True				
ANR	4246622	AssignmentExpression	o = n + map -> itv . addr - map -> delta		4242681	0		=			
ANR	4246623	Identifier	o		4242681	0					
ANR	4246624	AdditiveExpression	n + map -> itv . addr - map -> delta		4242681	1		+			
ANR	4246625	Identifier	n		4242681	0					
ANR	4246626	AdditiveExpression	map -> itv . addr - map -> delta		4242681	1		-			
ANR	4246627	MemberAccess	map -> itv . addr		4242681	0					
ANR	4246628	PtrMemberAccess	map -> itv		4242681	0					
ANR	4246629	Identifier	map		4242681	0					
ANR	4246630	Identifier	itv		4242681	1					
ANR	4246631	Identifier	addr		4242681	1					
ANR	4246632	PtrMemberAccess	map -> delta		4242681	1					
ANR	4246633	Identifier	map		4242681	0					
ANR	4246634	Identifier	delta		4242681	1					
ANR	4246635	Statement	r_cons_printf	1006:4:30117:30129	4242681	1	True				
ANR	4246636	Statement	(	1006:18:30131:30131	4242681	2	True				
ANR	4246637	Statement	"""0x%08"""	1006:19:30132:30138	4242681	3	True				
ANR	4246638	Statement	PFMT64x	1006:26:30139:30145	4242681	4	True				
ANR	4246639	Statement	"""\\n"""	1006:33:30146:30149	4242681	5	True				
ANR	4246640	Statement	","	1006:37:30150:30150	4242681	6	True				
ANR	4246641	Statement	o	1006:39:30152:30152	4242681	7	True				
ANR	4246642	Statement	)	1006:40:30153:30153	4242681	8	True				
ANR	4246643	ExpressionStatement		1006:41:30154:30154	4242681	9	True				
ANR	4246644	ElseStatement	else		4242681	0					
ANR	4246645	CompoundStatement		622:10:16630:16630	4242681	0					
ANR	4246646	Statement	r_cons_printf	1008:4:30172:30184	4242681	0	True				
ANR	4246647	Statement	(	1008:18:30186:30186	4242681	1	True				
ANR	4246648	Statement	"""no map at 0x%08"""	1008:19:30187:30203	4242681	2	True				
ANR	4246649	Statement	PFMT64x	1008:36:30204:30210	4242681	3	True				
ANR	4246650	Statement	"""\\n"""	1008:43:30211:30214	4242681	4	True				
ANR	4246651	Statement	","	1008:47:30215:30215	4242681	5	True				
ANR	4246652	Statement	n	1008:49:30217:30217	4242681	6	True				
ANR	4246653	Statement	)	1008:50:30218:30218	4242681	7	True				
ANR	4246654	ExpressionStatement		1008:51:30219:30219	4242681	8	True				
ANR	4246655	ElseStatement	else		4242681	0					
ANR	4246656	CompoundStatement		625:9:16699:16699	4242681	0					
ANR	4246657	Statement	r_cons_printf	1011:3:30240:30252	4242681	0	True				
ANR	4246658	Statement	(	1011:17:30254:30254	4242681	1	True				
ANR	4246659	Statement	"""0x%08"""	1011:18:30255:30261	4242681	2	True				
ANR	4246660	Statement	PFMT64x	1011:25:30262:30268	4242681	3	True				
ANR	4246661	Statement	"""\\n"""	1011:32:30269:30272	4242681	4	True				
ANR	4246662	Statement	","	1011:36:30273:30273	4242681	5	True				
ANR	4246663	Statement	core	1011:38:30275:30278	4242681	6	True				
ANR	4246664	Statement	->	1011:42:30279:30280	4242681	7	True				
ANR	4246665	Statement	offset	1011:44:30281:30286	4242681	8	True				
ANR	4246666	Statement	)	1011:50:30287:30287	4242681	9	True				
ANR	4246667	ExpressionStatement		1011:51:30288:30288	4242681	10	True				
ANR	4246668	BreakStatement	break ;	1013:2:30296:30301	4242681	159	True				
ANR	4246669	Label	case 'p' :	1014:1:30304:30312	4242681	160	True				
ANR	4246670	IfStatement	if ( core -> io -> va )		4242681	161					
ANR	4246671	Condition	core -> io -> va	1015:6:30328:30339	4242681	0	True				
ANR	4246672	PtrMemberAccess	core -> io -> va		4242681	0					
ANR	4246673	PtrMemberAccess	core -> io		4242681	0					
ANR	4246674	Identifier	core		4242681	0					
ANR	4246675	Identifier	io		4242681	1					
ANR	4246676	Identifier	va		4242681	1					
ANR	4246677	CompoundStatement		634:3:16926:16966	4242681	1					
ANR	4246678	IdentifierDeclStatement	"ut64 o , n = ( input [ 0 ] && input [ 1 ] ) ? r_num_math ( core -> num , input + 2 ) : core -> offset ;"	1017:3:30370:30457	4242681	0	True				
ANR	4246679	IdentifierDecl	o		4242681	0					
ANR	4246680	IdentifierDeclType	ut64		4242681	0					
ANR	4246681	Identifier	o		4242681	1					
ANR	4246682	IdentifierDecl	"n = ( input [ 0 ] && input [ 1 ] ) ? r_num_math ( core -> num , input + 2 ) : core -> offset"		4242681	1					
ANR	4246683	IdentifierDeclType	ut64		4242681	0					
ANR	4246684	Identifier	n		4242681	1					
ANR	4246685	AssignmentExpression	"n = ( input [ 0 ] && input [ 1 ] ) ? r_num_math ( core -> num , input + 2 ) : core -> offset"		4242681	2		=			
ANR	4246686	Identifier	n		4242681	0					
ANR	4246687	ConditionalExpression	"( input [ 0 ] && input [ 1 ] ) ? r_num_math ( core -> num , input + 2 ) : core -> offset"		4242681	1					
ANR	4246688	Condition	input [ 0 ] && input [ 1 ]		4242681	0					
ANR	4246689	AndExpression	input [ 0 ] && input [ 1 ]		4242681	0		&&			
ANR	4246690	ArrayIndexing	input [ 0 ]		4242681	0					
ANR	4246691	Identifier	input		4242681	0					
ANR	4246692	PrimaryExpression	0		4242681	1					
ANR	4246693	ArrayIndexing	input [ 1 ]		4242681	1					
ANR	4246694	Identifier	input		4242681	0					
ANR	4246695	PrimaryExpression	1		4242681	1					
ANR	4246696	CallExpression	"r_num_math ( core -> num , input + 2 )"		4242681	1					
ANR	4246697	Callee	r_num_math		4242681	0					
ANR	4246698	Identifier	r_num_math		4242681	0					
ANR	4246699	ArgumentList	core -> num		4242681	1					
ANR	4246700	Argument	core -> num		4242681	0					
ANR	4246701	PtrMemberAccess	core -> num		4242681	0					
ANR	4246702	Identifier	core		4242681	0					
ANR	4246703	Identifier	num		4242681	1					
ANR	4246704	Argument	input + 2		4242681	1					
ANR	4246705	AdditiveExpression	input + 2		4242681	0		+			
ANR	4246706	Identifier	input		4242681	0					
ANR	4246707	PrimaryExpression	2		4242681	1					
ANR	4246708	PtrMemberAccess	core -> offset		4242681	2					
ANR	4246709	Identifier	core		4242681	0					
ANR	4246710	Identifier	offset		4242681	1					
ANR	4246711	IdentifierDeclStatement	"RIOMap * map = r_io_map_get ( core -> io , n ) ;"	1019:3:30462:30502	4242681	1	True				
ANR	4246712	IdentifierDecl	"* map = r_io_map_get ( core -> io , n )"		4242681	0					
ANR	4246713	IdentifierDeclType	RIOMap *		4242681	0					
ANR	4246714	Identifier	map		4242681	1					
ANR	4246715	AssignmentExpression	"* map = r_io_map_get ( core -> io , n )"		4242681	2		=			
ANR	4246716	Identifier	map		4242681	0					
ANR	4246717	CallExpression	"r_io_map_get ( core -> io , n )"		4242681	1					
ANR	4246718	Callee	r_io_map_get		4242681	0					
ANR	4246719	Identifier	r_io_map_get		4242681	0					
ANR	4246720	ArgumentList	core -> io		4242681	1					
ANR	4246721	Argument	core -> io		4242681	0					
ANR	4246722	PtrMemberAccess	core -> io		4242681	0					
ANR	4246723	Identifier	core		4242681	0					
ANR	4246724	Identifier	io		4242681	1					
ANR	4246725	Argument	n		4242681	1					
ANR	4246726	Identifier	n		4242681	0					
ANR	4246727	IfStatement	if ( map )		4242681	2					
ANR	4246728	Condition	map	1020:7:30511:30513	4242681	0	True				
ANR	4246729	Identifier	map		4242681	0					
ANR	4246730	CompoundStatement		635:12:16980:16980	4242681	1					
ANR	4246731	ExpressionStatement	o = n - map -> itv . addr + map -> delta	1021:4:30522:30556	4242681	0	True				
ANR	4246732	AssignmentExpression	o = n - map -> itv . addr + map -> delta		4242681	0		=			
ANR	4246733	Identifier	o		4242681	0					
ANR	4246734	AdditiveExpression	n - map -> itv . addr + map -> delta		4242681	1		-			
ANR	4246735	Identifier	n		4242681	0					
ANR	4246736	AdditiveExpression	map -> itv . addr + map -> delta		4242681	1		+			
ANR	4246737	MemberAccess	map -> itv . addr		4242681	0					
ANR	4246738	PtrMemberAccess	map -> itv		4242681	0					
ANR	4246739	Identifier	map		4242681	0					
ANR	4246740	Identifier	itv		4242681	1					
ANR	4246741	Identifier	addr		4242681	1					
ANR	4246742	PtrMemberAccess	map -> delta		4242681	1					
ANR	4246743	Identifier	map		4242681	0					
ANR	4246744	Identifier	delta		4242681	1					
ANR	4246745	Statement	r_cons_printf	1022:4:30562:30574	4242681	1	True				
ANR	4246746	Statement	(	1022:18:30576:30576	4242681	2	True				
ANR	4246747	Statement	"""0x%08"""	1022:19:30577:30583	4242681	3	True				
ANR	4246748	Statement	PFMT64x	1022:26:30584:30590	4242681	4	True				
ANR	4246749	Statement	"""\\n"""	1022:33:30591:30594	4242681	5	True				
ANR	4246750	Statement	","	1022:37:30595:30595	4242681	6	True				
ANR	4246751	Statement	o	1022:39:30597:30597	4242681	7	True				
ANR	4246752	Statement	)	1022:40:30598:30598	4242681	8	True				
ANR	4246753	ExpressionStatement		1022:41:30599:30599	4242681	9	True				
ANR	4246754	ElseStatement	else		4242681	0					
ANR	4246755	CompoundStatement		638:10:17075:17075	4242681	0					
ANR	4246756	Statement	r_cons_printf	1024:4:30617:30629	4242681	0	True				
ANR	4246757	Statement	(	1024:18:30631:30631	4242681	1	True				
ANR	4246758	Statement	"""no map at 0x%08"""	1024:19:30632:30648	4242681	2	True				
ANR	4246759	Statement	PFMT64x	1024:36:30649:30655	4242681	3	True				
ANR	4246760	Statement	"""\\n"""	1024:43:30656:30659	4242681	4	True				
ANR	4246761	Statement	","	1024:47:30660:30660	4242681	5	True				
ANR	4246762	Statement	n	1024:49:30662:30662	4242681	6	True				
ANR	4246763	Statement	)	1024:50:30663:30663	4242681	7	True				
ANR	4246764	ExpressionStatement		1024:51:30664:30664	4242681	8	True				
ANR	4246765	ElseStatement	else		4242681	0					
ANR	4246766	CompoundStatement		641:9:17144:17144	4242681	0					
ANR	4246767	Statement	r_cons_printf	1027:3:30685:30697	4242681	0	True				
ANR	4246768	Statement	(	1027:17:30699:30699	4242681	1	True				
ANR	4246769	Statement	"""0x%08"""	1027:18:30700:30706	4242681	2	True				
ANR	4246770	Statement	PFMT64x	1027:25:30707:30713	4242681	3	True				
ANR	4246771	Statement	"""\\n"""	1027:32:30714:30717	4242681	4	True				
ANR	4246772	Statement	","	1027:36:30718:30718	4242681	5	True				
ANR	4246773	Statement	core	1027:38:30720:30723	4242681	6	True				
ANR	4246774	Statement	->	1027:42:30724:30725	4242681	7	True				
ANR	4246775	Statement	offset	1027:44:30726:30731	4242681	8	True				
ANR	4246776	Statement	)	1027:50:30732:30732	4242681	9	True				
ANR	4246777	ExpressionStatement		1027:51:30733:30733	4242681	10	True				
ANR	4246778	BreakStatement	break ;	1029:2:30741:30746	4242681	162	True				
ANR	4246779	Label	case '_' :	1030:1:30749:30757	4242681	163	True				
ANR	4246780	ExpressionStatement	"r_core_yank_hud_file ( core , input + 1 )"	1031:2:30779:30815	4242681	164	True				
ANR	4246781	CallExpression	"r_core_yank_hud_file ( core , input + 1 )"		4242681	0					
ANR	4246782	Callee	r_core_yank_hud_file		4242681	0					
ANR	4246783	Identifier	r_core_yank_hud_file		4242681	0					
ANR	4246784	ArgumentList	core		4242681	1					
ANR	4246785	Argument	core		4242681	0					
ANR	4246786	Identifier	core		4242681	0					
ANR	4246787	Argument	input + 1		4242681	1					
ANR	4246788	AdditiveExpression	input + 1		4242681	0		+			
ANR	4246789	Identifier	input		4242681	0					
ANR	4246790	PrimaryExpression	1		4242681	1					
ANR	4246791	BreakStatement	break ;	1032:2:30819:30824	4242681	165	True				
ANR	4246792	Label	case 'i' :	1033:1:30827:30835	4242681	166	True				
ANR	4246793	ExpressionStatement	r_cons_set_raw ( 0 )	1034:2:30857:30874	4242681	167	True				
ANR	4246794	CallExpression	r_cons_set_raw ( 0 )		4242681	0					
ANR	4246795	Callee	r_cons_set_raw		4242681	0					
ANR	4246796	Identifier	r_cons_set_raw		4242681	0					
ANR	4246797	ArgumentList	0		4242681	1					
ANR	4246798	Argument	0		4242681	0					
ANR	4246799	PrimaryExpression	0		4242681	0					
ANR	4246800	IfStatement	if ( ! r_cons_is_interactive ( ) )		4242681	168					
ANR	4246801	Condition	! r_cons_is_interactive ( )	1035:6:30882:30906	4242681	0	True				
ANR	4246802	UnaryOperationExpression	! r_cons_is_interactive ( )		4242681	0					
ANR	4246803	UnaryOperator	!		4242681	0					
ANR	4246804	CallExpression	r_cons_is_interactive ( )		4242681	1					
ANR	4246805	Callee	r_cons_is_interactive		4242681	0					
ANR	4246806	Identifier	r_cons_is_interactive		4242681	0					
ANR	4246807	ArgumentList			4242681	1					
ANR	4246808	CompoundStatement		650:33:17373:17373	4242681	1					
ANR	4246809	ExpressionStatement	"eprintf ( ""Not running in interactive mode\\n"" )"	1036:3:30914:30959	4242681	0	True				
ANR	4246810	CallExpression	"eprintf ( ""Not running in interactive mode\\n"" )"		4242681	0					
ANR	4246811	Callee	eprintf		4242681	0					
ANR	4246812	Identifier	eprintf		4242681	0					
ANR	4246813	ArgumentList	"""Not running in interactive mode\\n"""		4242681	1					
ANR	4246814	Argument	"""Not running in interactive mode\\n"""		4242681	0					
ANR	4246815	PrimaryExpression	"""Not running in interactive mode\\n"""		4242681	0					
ANR	4246816	ElseStatement	else		4242681	0					
ANR	4246817	CompoundStatement		652:9:17434:17434	4242681	0					
ANR	4246818	SwitchStatement	switch ( input [ 1 ] )		4242681	0					
ANR	4246819	Condition	input [ 1 ]	1038:11:30983:30990	4242681	0	True				
ANR	4246820	ArrayIndexing	input [ 1 ]		4242681	0					
ANR	4246821	Identifier	input		4242681	0					
ANR	4246822	PrimaryExpression	1		4242681	1					
ANR	4246823	CompoundStatement		653:21:17457:17457	4242681	1					
ANR	4246824	Label	case 'f' :	1039:3:30998:31006	4242681	0	True				
ANR	4246825	ExpressionStatement	"core -> num -> value = ! r_num_conditional ( core -> num , input + 2 )"	1040:4:31021:31081	4242681	1	True				
ANR	4246826	AssignmentExpression	"core -> num -> value = ! r_num_conditional ( core -> num , input + 2 )"		4242681	0		=			
ANR	4246827	PtrMemberAccess	core -> num -> value		4242681	0					
ANR	4246828	PtrMemberAccess	core -> num		4242681	0					
ANR	4246829	Identifier	core		4242681	0					
ANR	4246830	Identifier	num		4242681	1					
ANR	4246831	Identifier	value		4242681	1					
ANR	4246832	UnaryOperationExpression	"! r_num_conditional ( core -> num , input + 2 )"		4242681	1					
ANR	4246833	UnaryOperator	!		4242681	0					
ANR	4246834	CallExpression	"r_num_conditional ( core -> num , input + 2 )"		4242681	1					
ANR	4246835	Callee	r_num_conditional		4242681	0					
ANR	4246836	Identifier	r_num_conditional		4242681	0					
ANR	4246837	ArgumentList	core -> num		4242681	1					
ANR	4246838	Argument	core -> num		4242681	0					
ANR	4246839	PtrMemberAccess	core -> num		4242681	0					
ANR	4246840	Identifier	core		4242681	0					
ANR	4246841	Identifier	num		4242681	1					
ANR	4246842	Argument	input + 2		4242681	1					
ANR	4246843	AdditiveExpression	input + 2		4242681	0		+			
ANR	4246844	Identifier	input		4242681	0					
ANR	4246845	PrimaryExpression	2		4242681	1					
ANR	4246846	ExpressionStatement	"eprintf ( ""%s\\n"" , r_str_bool ( ! core -> num -> value ) )"	1041:4:31087:31135	4242681	2	True				
ANR	4246847	CallExpression	"eprintf ( ""%s\\n"" , r_str_bool ( ! core -> num -> value ) )"		4242681	0					
ANR	4246848	Callee	eprintf		4242681	0					
ANR	4246849	Identifier	eprintf		4242681	0					
ANR	4246850	ArgumentList	"""%s\\n"""		4242681	1					
ANR	4246851	Argument	"""%s\\n"""		4242681	0					
ANR	4246852	PrimaryExpression	"""%s\\n"""		4242681	0					
ANR	4246853	Argument	r_str_bool ( ! core -> num -> value )		4242681	1					
ANR	4246854	CallExpression	r_str_bool ( ! core -> num -> value )		4242681	0					
ANR	4246855	Callee	r_str_bool		4242681	0					
ANR	4246856	Identifier	r_str_bool		4242681	0					
ANR	4246857	ArgumentList	! core -> num -> value		4242681	1					
ANR	4246858	Argument	! core -> num -> value		4242681	0					
ANR	4246859	UnaryOperationExpression	! core -> num -> value		4242681	0					
ANR	4246860	UnaryOperator	!		4242681	0					
ANR	4246861	PtrMemberAccess	core -> num -> value		4242681	1					
ANR	4246862	PtrMemberAccess	core -> num		4242681	0					
ANR	4246863	Identifier	core		4242681	0					
ANR	4246864	Identifier	num		4242681	1					
ANR	4246865	Identifier	value		4242681	1					
ANR	4246866	BreakStatement	break ;	1042:4:31141:31146	4242681	3	True				
ANR	4246867	Label	case 'm' :	1043:3:31151:31159	4242681	4	True				
ANR	4246868	ExpressionStatement	r_cons_message ( input + 2 )	1044:4:31174:31200	4242681	5	True				
ANR	4246869	CallExpression	r_cons_message ( input + 2 )		4242681	0					
ANR	4246870	Callee	r_cons_message		4242681	0					
ANR	4246871	Identifier	r_cons_message		4242681	0					
ANR	4246872	ArgumentList	input + 2		4242681	1					
ANR	4246873	Argument	input + 2		4242681	0					
ANR	4246874	AdditiveExpression	input + 2		4242681	0		+			
ANR	4246875	Identifier	input		4242681	0					
ANR	4246876	PrimaryExpression	2		4242681	1					
ANR	4246877	BreakStatement	break ;	1045:4:31206:31211	4242681	6	True				
ANR	4246878	Label	case 'p' :	1046:3:31216:31224	4242681	7	True				
ANR	4246879	ExpressionStatement	"core -> num -> value = r_core_yank_hud_path ( core , input + 2 , 0 ) == true"	1047:4:31239:31307	4242681	8	True				
ANR	4246880	AssignmentExpression	"core -> num -> value = r_core_yank_hud_path ( core , input + 2 , 0 ) == true"		4242681	0		=			
ANR	4246881	PtrMemberAccess	core -> num -> value		4242681	0					
ANR	4246882	PtrMemberAccess	core -> num		4242681	0					
ANR	4246883	Identifier	core		4242681	0					
ANR	4246884	Identifier	num		4242681	1					
ANR	4246885	Identifier	value		4242681	1					
ANR	4246886	EqualityExpression	"r_core_yank_hud_path ( core , input + 2 , 0 ) == true"		4242681	1		==			
ANR	4246887	CallExpression	"r_core_yank_hud_path ( core , input + 2 , 0 )"		4242681	0					
ANR	4246888	Callee	r_core_yank_hud_path		4242681	0					
ANR	4246889	Identifier	r_core_yank_hud_path		4242681	0					
ANR	4246890	ArgumentList	core		4242681	1					
ANR	4246891	Argument	core		4242681	0					
ANR	4246892	Identifier	core		4242681	0					
ANR	4246893	Argument	input + 2		4242681	1					
ANR	4246894	AdditiveExpression	input + 2		4242681	0		+			
ANR	4246895	Identifier	input		4242681	0					
ANR	4246896	PrimaryExpression	2		4242681	1					
ANR	4246897	Argument	0		4242681	2					
ANR	4246898	PrimaryExpression	0		4242681	0					
ANR	4246899	Identifier	true		4242681	1					
ANR	4246900	BreakStatement	break ;	1048:4:31313:31318	4242681	9	True				
ANR	4246901	Label	case 'k' :	1049:3:31323:31331	4242681	10	True				
ANR	4246902	ExpressionStatement	r_cons_any_key ( NULL )	1050:5:31347:31368	4242681	11	True				
ANR	4246903	CallExpression	r_cons_any_key ( NULL )		4242681	0					
ANR	4246904	Callee	r_cons_any_key		4242681	0					
ANR	4246905	Identifier	r_cons_any_key		4242681	0					
ANR	4246906	ArgumentList	NULL		4242681	1					
ANR	4246907	Argument	NULL		4242681	0					
ANR	4246908	Identifier	NULL		4242681	0					
ANR	4246909	BreakStatement	break ;	1051:5:31375:31380	4242681	12	True				
ANR	4246910	Label	case 'y' :	1052:3:31385:31393	4242681	13	True				
ANR	4246911	ForStatement	for ( input += 2 ; * input == ' ' ; input ++ )		4242681	14					
ANR	4246912	ForInit	input += 2 ;	1053:10:31414:31424	4242681	0	True				
ANR	4246913	AssignmentExpression	input += 2		4242681	0		+=			
ANR	4246914	Identifier	input		4242681	0					
ANR	4246915	PrimaryExpression	2		4242681	1					
ANR	4246916	Condition	* input == ' '	1053:22:31426:31436	4242681	1	True				
ANR	4246917	EqualityExpression	* input == ' '		4242681	0		==			
ANR	4246918	UnaryOperationExpression	* input		4242681	0					
ANR	4246919	UnaryOperator	*		4242681	0					
ANR	4246920	Identifier	input		4242681	1					
ANR	4246921	PrimaryExpression	' '		4242681	1					
ANR	4246922	PostIncDecOperationExpression	input ++	1053:35:31439:31445	4242681	2	True				
ANR	4246923	Identifier	input		4242681	0					
ANR	4246924	IncDec	++		4242681	1					
ANR	4246925	ExpressionStatement		1053:43:31447:31447	4242681	3	True				
ANR	4246926	ExpressionStatement	"core -> num -> value = r_cons_yesno ( 1 , ""%s? (Y/n)"" , input )"	1054:5:31454:31509	4242681	15	True				
ANR	4246927	AssignmentExpression	"core -> num -> value = r_cons_yesno ( 1 , ""%s? (Y/n)"" , input )"		4242681	0		=			
ANR	4246928	PtrMemberAccess	core -> num -> value		4242681	0					
ANR	4246929	PtrMemberAccess	core -> num		4242681	0					
ANR	4246930	Identifier	core		4242681	0					
ANR	4246931	Identifier	num		4242681	1					
ANR	4246932	Identifier	value		4242681	1					
ANR	4246933	CallExpression	"r_cons_yesno ( 1 , ""%s? (Y/n)"" , input )"		4242681	1					
ANR	4246934	Callee	r_cons_yesno		4242681	0					
ANR	4246935	Identifier	r_cons_yesno		4242681	0					
ANR	4246936	ArgumentList	1		4242681	1					
ANR	4246937	Argument	1		4242681	0					
ANR	4246938	PrimaryExpression	1		4242681	0					
ANR	4246939	Argument	"""%s? (Y/n)"""		4242681	1					
ANR	4246940	PrimaryExpression	"""%s? (Y/n)"""		4242681	0					
ANR	4246941	Argument	input		4242681	2					
ANR	4246942	Identifier	input		4242681	0					
ANR	4246943	BreakStatement	break ;	1055:5:31516:31521	4242681	16	True				
ANR	4246944	Label	case 'n' :	1056:3:31526:31534	4242681	17	True				
ANR	4246945	ForStatement	for ( input += 2 ; * input == ' ' ; input ++ )		4242681	18					
ANR	4246946	ForInit	input += 2 ;	1057:10:31555:31565	4242681	0	True				
ANR	4246947	AssignmentExpression	input += 2		4242681	0		+=			
ANR	4246948	Identifier	input		4242681	0					
ANR	4246949	PrimaryExpression	2		4242681	1					
ANR	4246950	Condition	* input == ' '	1057:22:31567:31577	4242681	1	True				
ANR	4246951	EqualityExpression	* input == ' '		4242681	0		==			
ANR	4246952	UnaryOperationExpression	* input		4242681	0					
ANR	4246953	UnaryOperator	*		4242681	0					
ANR	4246954	Identifier	input		4242681	1					
ANR	4246955	PrimaryExpression	' '		4242681	1					
ANR	4246956	PostIncDecOperationExpression	input ++	1057:35:31580:31586	4242681	2	True				
ANR	4246957	Identifier	input		4242681	0					
ANR	4246958	IncDec	++		4242681	1					
ANR	4246959	ExpressionStatement		1057:43:31588:31588	4242681	3	True				
ANR	4246960	ExpressionStatement	"core -> num -> value = r_cons_yesno ( 0 , ""%s? (y/N)"" , input )"	1058:5:31595:31650	4242681	19	True				
ANR	4246961	AssignmentExpression	"core -> num -> value = r_cons_yesno ( 0 , ""%s? (y/N)"" , input )"		4242681	0		=			
ANR	4246962	PtrMemberAccess	core -> num -> value		4242681	0					
ANR	4246963	PtrMemberAccess	core -> num		4242681	0					
ANR	4246964	Identifier	core		4242681	0					
ANR	4246965	Identifier	num		4242681	1					
ANR	4246966	Identifier	value		4242681	1					
ANR	4246967	CallExpression	"r_cons_yesno ( 0 , ""%s? (y/N)"" , input )"		4242681	1					
ANR	4246968	Callee	r_cons_yesno		4242681	0					
ANR	4246969	Identifier	r_cons_yesno		4242681	0					
ANR	4246970	ArgumentList	0		4242681	1					
ANR	4246971	Argument	0		4242681	0					
ANR	4246972	PrimaryExpression	0		4242681	0					
ANR	4246973	Argument	"""%s? (y/N)"""		4242681	1					
ANR	4246974	PrimaryExpression	"""%s? (y/N)"""		4242681	0					
ANR	4246975	Argument	input		4242681	2					
ANR	4246976	Identifier	input		4242681	0					
ANR	4246977	BreakStatement	break ;	1059:5:31657:31662	4242681	20	True				
ANR	4246978	Label	default :	1060:3:31667:31674	4242681	21	True				
ANR	4246979	Identifier	default		4242681	0					
ANR	4246980	CompoundStatement		676:4:18146:18160	4242681	22					
ANR	4246981	IdentifierDeclStatement	char foo [ 1024 ] ;	1061:4:31682:31696	4242681	0	True				
ANR	4246982	IdentifierDecl	foo [ 1024 ]		4242681	0					
ANR	4246983	IdentifierDeclType	char [ 1024 ]		4242681	0					
ANR	4246984	Identifier	foo		4242681	1					
ANR	4246985	PrimaryExpression	1024		4242681	2					
ANR	4246986	ExpressionStatement	r_cons_flush ( )	1062:4:31702:31717	4242681	1	True				
ANR	4246987	CallExpression	r_cons_flush ( )		4242681	0					
ANR	4246988	Callee	r_cons_flush		4242681	0					
ANR	4246989	Identifier	r_cons_flush		4242681	0					
ANR	4246990	ArgumentList			4242681	1					
ANR	4246991	ForStatement	for ( input ++ ; * input == ' ' ; input ++ )		4242681	2					
ANR	4246992	ForInit	input ++ ;	1063:9:31728:31735	4242681	0	True				
ANR	4246993	PostIncDecOperationExpression	input ++		4242681	0					
ANR	4246994	Identifier	input		4242681	0					
ANR	4246995	IncDec	++		4242681	1					
ANR	4246996	Condition	* input == ' '	1063:18:31737:31749	4242681	1	True				
ANR	4246997	EqualityExpression	* input == ' '		4242681	0		==			
ANR	4246998	UnaryOperationExpression	* input		4242681	0					
ANR	4246999	UnaryOperator	*		4242681	0					
ANR	4247000	Identifier	input		4242681	1					
ANR	4247001	PrimaryExpression	' '		4242681	1					
ANR	4247002	PostIncDecOperationExpression	input ++	1063:33:31752:31758	4242681	2	True				
ANR	4247003	Identifier	input		4242681	0					
ANR	4247004	IncDec	++		4242681	1					
ANR	4247005	ExpressionStatement		1063:41:31760:31760	4242681	3	True				
ANR	4247006	ExpressionStatement	"snprintf ( foo , sizeof ( foo ) - 1 , ""%s: "" , input )"	1065:4:31794:31841	4242681	3	True				
ANR	4247007	CallExpression	"snprintf ( foo , sizeof ( foo ) - 1 , ""%s: "" , input )"		4242681	0					
ANR	4247008	Callee	snprintf		4242681	0					
ANR	4247009	Identifier	snprintf		4242681	0					
ANR	4247010	ArgumentList	foo		4242681	1					
ANR	4247011	Argument	foo		4242681	0					
ANR	4247012	Identifier	foo		4242681	0					
ANR	4247013	Argument	sizeof ( foo ) - 1		4242681	1					
ANR	4247014	AdditiveExpression	sizeof ( foo ) - 1		4242681	0		-			
ANR	4247015	SizeofExpression	sizeof ( foo )		4242681	0					
ANR	4247016	Sizeof	sizeof		4242681	0					
ANR	4247017	SizeofOperand	foo		4242681	1					
ANR	4247018	PrimaryExpression	1		4242681	1					
ANR	4247019	Argument	"""%s: """		4242681	2					
ANR	4247020	PrimaryExpression	"""%s: """		4242681	0					
ANR	4247021	Argument	input		4242681	3					
ANR	4247022	Identifier	input		4242681	0					
ANR	4247023	ExpressionStatement	r_line_set_prompt ( foo )	1066:4:31847:31870	4242681	4	True				
ANR	4247024	CallExpression	r_line_set_prompt ( foo )		4242681	0					
ANR	4247025	Callee	r_line_set_prompt		4242681	0					
ANR	4247026	Identifier	r_line_set_prompt		4242681	0					
ANR	4247027	ArgumentList	foo		4242681	1					
ANR	4247028	Argument	foo		4242681	0					
ANR	4247029	Identifier	foo		4242681	0					
ANR	4247030	ExpressionStatement	"r_cons_fgets ( foo , sizeof ( foo ) - 1 , 0 , NULL )"	1067:4:31876:31919	4242681	5	True				
ANR	4247031	CallExpression	"r_cons_fgets ( foo , sizeof ( foo ) - 1 , 0 , NULL )"		4242681	0					
ANR	4247032	Callee	r_cons_fgets		4242681	0					
ANR	4247033	Identifier	r_cons_fgets		4242681	0					
ANR	4247034	ArgumentList	foo		4242681	1					
ANR	4247035	Argument	foo		4242681	0					
ANR	4247036	Identifier	foo		4242681	0					
ANR	4247037	Argument	sizeof ( foo ) - 1		4242681	1					
ANR	4247038	AdditiveExpression	sizeof ( foo ) - 1		4242681	0		-			
ANR	4247039	SizeofExpression	sizeof ( foo )		4242681	0					
ANR	4247040	Sizeof	sizeof		4242681	0					
ANR	4247041	SizeofOperand	foo		4242681	1					
ANR	4247042	PrimaryExpression	1		4242681	1					
ANR	4247043	Argument	0		4242681	2					
ANR	4247044	PrimaryExpression	0		4242681	0					
ANR	4247045	Argument	NULL		4242681	3					
ANR	4247046	Identifier	NULL		4242681	0					
ANR	4247047	ExpressionStatement	foo [ sizeof ( foo ) - 1 ] = 0	1068:4:31925:31950	4242681	6	True				
ANR	4247048	AssignmentExpression	foo [ sizeof ( foo ) - 1 ] = 0		4242681	0		=			
ANR	4247049	ArrayIndexing	foo [ sizeof ( foo ) - 1 ]		4242681	0					
ANR	4247050	Identifier	foo		4242681	0					
ANR	4247051	AdditiveExpression	sizeof ( foo ) - 1		4242681	1		-			
ANR	4247052	SizeofExpression	sizeof ( foo )		4242681	0					
ANR	4247053	Sizeof	sizeof		4242681	0					
ANR	4247054	SizeofOperand	foo		4242681	1					
ANR	4247055	PrimaryExpression	1		4242681	1					
ANR	4247056	PrimaryExpression	0		4242681	1					
ANR	4247057	ExpressionStatement	"r_core_yank_set_str ( core , R_CORE_FOREIGN_ADDR , foo , strlen ( foo ) + 1 )"	1069:4:31956:32026	4242681	7	True				
ANR	4247058	CallExpression	"r_core_yank_set_str ( core , R_CORE_FOREIGN_ADDR , foo , strlen ( foo ) + 1 )"		4242681	0					
ANR	4247059	Callee	r_core_yank_set_str		4242681	0					
ANR	4247060	Identifier	r_core_yank_set_str		4242681	0					
ANR	4247061	ArgumentList	core		4242681	1					
ANR	4247062	Argument	core		4242681	0					
ANR	4247063	Identifier	core		4242681	0					
ANR	4247064	Argument	R_CORE_FOREIGN_ADDR		4242681	1					
ANR	4247065	Identifier	R_CORE_FOREIGN_ADDR		4242681	0					
ANR	4247066	Argument	foo		4242681	2					
ANR	4247067	Identifier	foo		4242681	0					
ANR	4247068	Argument	strlen ( foo ) + 1		4242681	3					
ANR	4247069	AdditiveExpression	strlen ( foo ) + 1		4242681	0		+			
ANR	4247070	CallExpression	strlen ( foo )		4242681	0					
ANR	4247071	Callee	strlen		4242681	0					
ANR	4247072	Identifier	strlen		4242681	0					
ANR	4247073	ArgumentList	foo		4242681	1					
ANR	4247074	Argument	foo		4242681	0					
ANR	4247075	Identifier	foo		4242681	0					
ANR	4247076	PrimaryExpression	1		4242681	1					
ANR	4247077	ExpressionStatement	"core -> num -> value = r_num_math ( core -> num , foo )"	1070:4:32032:32078	4242681	8	True				
ANR	4247078	AssignmentExpression	"core -> num -> value = r_num_math ( core -> num , foo )"		4242681	0		=			
ANR	4247079	PtrMemberAccess	core -> num -> value		4242681	0					
ANR	4247080	PtrMemberAccess	core -> num		4242681	0					
ANR	4247081	Identifier	core		4242681	0					
ANR	4247082	Identifier	num		4242681	1					
ANR	4247083	Identifier	value		4242681	1					
ANR	4247084	CallExpression	"r_num_math ( core -> num , foo )"		4242681	1					
ANR	4247085	Callee	r_num_math		4242681	0					
ANR	4247086	Identifier	r_num_math		4242681	0					
ANR	4247087	ArgumentList	core -> num		4242681	1					
ANR	4247088	Argument	core -> num		4242681	0					
ANR	4247089	PtrMemberAccess	core -> num		4242681	0					
ANR	4247090	Identifier	core		4242681	0					
ANR	4247091	Identifier	num		4242681	1					
ANR	4247092	Argument	foo		4242681	1					
ANR	4247093	Identifier	foo		4242681	0					
ANR	4247094	BreakStatement	break ;	1072:4:32090:32095	4242681	23	True				
ANR	4247095	ExpressionStatement	r_cons_set_raw ( 0 )	1075:2:32108:32126	4242681	169	True				
ANR	4247096	CallExpression	r_cons_set_raw ( 0 )		4242681	0					
ANR	4247097	Callee	r_cons_set_raw		4242681	0					
ANR	4247098	Identifier	r_cons_set_raw		4242681	0					
ANR	4247099	ArgumentList	0		4242681	1					
ANR	4247100	Argument	0		4242681	0					
ANR	4247101	PrimaryExpression	0		4242681	0					
ANR	4247102	BreakStatement	break ;	1076:2:32130:32135	4242681	170	True				
ANR	4247103	Label	case 'w' :	1077:1:32138:32146	4242681	171	True				
ANR	4247104	CompoundStatement		694:2:18673:18738	4242681	172					
ANR	4247105	IdentifierDeclStatement	"ut64 addr = r_num_math ( core -> num , input + 1 ) ;"	1078:2:32160:32205	4242681	0	True				
ANR	4247106	IdentifierDecl	"addr = r_num_math ( core -> num , input + 1 )"		4242681	0					
ANR	4247107	IdentifierDeclType	ut64		4242681	0					
ANR	4247108	Identifier	addr		4242681	1					
ANR	4247109	AssignmentExpression	"addr = r_num_math ( core -> num , input + 1 )"		4242681	2		=			
ANR	4247110	Identifier	addr		4242681	0					
ANR	4247111	CallExpression	"r_num_math ( core -> num , input + 1 )"		4242681	1					
ANR	4247112	Callee	r_num_math		4242681	0					
ANR	4247113	Identifier	r_num_math		4242681	0					
ANR	4247114	ArgumentList	core -> num		4242681	1					
ANR	4247115	Argument	core -> num		4242681	0					
ANR	4247116	PtrMemberAccess	core -> num		4242681	0					
ANR	4247117	Identifier	core		4242681	0					
ANR	4247118	Identifier	num		4242681	1					
ANR	4247119	Argument	input + 1		4242681	1					
ANR	4247120	AdditiveExpression	input + 1		4242681	0		+			
ANR	4247121	Identifier	input		4242681	0					
ANR	4247122	PrimaryExpression	1		4242681	1					
ANR	4247123	IdentifierDeclStatement	"char * rstr = core -> print -> hasrefs ( core -> print -> user , addr , true ) ;"	1079:2:32209:32274	4242681	1	True				
ANR	4247124	IdentifierDecl	"* rstr = core -> print -> hasrefs ( core -> print -> user , addr , true )"		4242681	0					
ANR	4247125	IdentifierDeclType	char *		4242681	0					
ANR	4247126	Identifier	rstr		4242681	1					
ANR	4247127	AssignmentExpression	"* rstr = core -> print -> hasrefs ( core -> print -> user , addr , true )"		4242681	2		=			
ANR	4247128	Identifier	rstr		4242681	0					
ANR	4247129	CallExpression	"core -> print -> hasrefs ( core -> print -> user , addr , true )"		4242681	1					
ANR	4247130	Callee	core -> print -> hasrefs		4242681	0					
ANR	4247131	PtrMemberAccess	core -> print -> hasrefs		4242681	0					
ANR	4247132	PtrMemberAccess	core -> print		4242681	0					
ANR	4247133	Identifier	core		4242681	0					
ANR	4247134	Identifier	print		4242681	1					
ANR	4247135	Identifier	hasrefs		4242681	1					
ANR	4247136	ArgumentList	core -> print -> user		4242681	1					
ANR	4247137	Argument	core -> print -> user		4242681	0					
ANR	4247138	PtrMemberAccess	core -> print -> user		4242681	0					
ANR	4247139	PtrMemberAccess	core -> print		4242681	0					
ANR	4247140	Identifier	core		4242681	0					
ANR	4247141	Identifier	print		4242681	1					
ANR	4247142	Identifier	user		4242681	1					
ANR	4247143	Argument	addr		4242681	1					
ANR	4247144	Identifier	addr		4242681	0					
ANR	4247145	Argument	true		4242681	2					
ANR	4247146	Identifier	true		4242681	0					
ANR	4247147	IfStatement	if ( ! rstr )		4242681	2					
ANR	4247148	Condition	! rstr	1080:6:32282:32286	4242681	0	True				
ANR	4247149	UnaryOperationExpression	! rstr		4242681	0					
ANR	4247150	UnaryOperator	!		4242681	0					
ANR	4247151	Identifier	rstr		4242681	1					
ANR	4247152	CompoundStatement		695:13:18753:18753	4242681	1					
ANR	4247153	ExpressionStatement	"eprintf ( ""Cannot get refs\\n"" )"	1081:3:32294:32323	4242681	0	True				
ANR	4247154	CallExpression	"eprintf ( ""Cannot get refs\\n"" )"		4242681	0					
ANR	4247155	Callee	eprintf		4242681	0					
ANR	4247156	Identifier	eprintf		4242681	0					
ANR	4247157	ArgumentList	"""Cannot get refs\\n"""		4242681	1					
ANR	4247158	Argument	"""Cannot get refs\\n"""		4242681	0					
ANR	4247159	PrimaryExpression	"""Cannot get refs\\n"""		4242681	0					
ANR	4247160	BreakStatement	break ;	1082:3:32328:32333	4242681	1	True				
ANR	4247161	ExpressionStatement	r_cons_println ( rstr )	1084:2:32341:32362	4242681	3	True				
ANR	4247162	CallExpression	r_cons_println ( rstr )		4242681	0					
ANR	4247163	Callee	r_cons_println		4242681	0					
ANR	4247164	Identifier	r_cons_println		4242681	0					
ANR	4247165	ArgumentList	rstr		4242681	1					
ANR	4247166	Argument	rstr		4242681	0					
ANR	4247167	Identifier	rstr		4242681	0					
ANR	4247168	ExpressionStatement	free ( rstr )	1085:2:32366:32377	4242681	4	True				
ANR	4247169	CallExpression	free ( rstr )		4242681	0					
ANR	4247170	Callee	free		4242681	0					
ANR	4247171	Identifier	free		4242681	0					
ANR	4247172	ArgumentList	rstr		4242681	1					
ANR	4247173	Argument	rstr		4242681	0					
ANR	4247174	Identifier	rstr		4242681	0					
ANR	4247175	BreakStatement	break ;	1086:2:32381:32386	4242681	5	True				
ANR	4247176	Label	case 't' :	1088:1:32392:32400	4242681	173	True				
ANR	4247177	CompoundStatement		704:2:18878:18898	4242681	174					
ANR	4247178	IdentifierDeclStatement	struct r_prof_t prof ;	1089:2:32414:32434	4242681	0	True				
ANR	4247179	IdentifierDecl	prof		4242681	0					
ANR	4247180	IdentifierDeclType	struct r_prof_t		4242681	0					
ANR	4247181	Identifier	prof		4242681	1					
ANR	4247182	ExpressionStatement	r_prof_start ( & prof )	1090:2:32438:32458	4242681	1	True				
ANR	4247183	CallExpression	r_prof_start ( & prof )		4242681	0					
ANR	4247184	Callee	r_prof_start		4242681	0					
ANR	4247185	Identifier	r_prof_start		4242681	0					
ANR	4247186	ArgumentList	& prof		4242681	1					
ANR	4247187	Argument	& prof		4242681	0					
ANR	4247188	UnaryOperationExpression	& prof		4242681	0					
ANR	4247189	UnaryOperator	&		4242681	0					
ANR	4247190	Identifier	prof		4242681	1					
ANR	4247191	ExpressionStatement	"r_core_cmd ( core , input + 1 , 0 )"	1091:2:32462:32493	4242681	2	True				
ANR	4247192	CallExpression	"r_core_cmd ( core , input + 1 , 0 )"		4242681	0					
ANR	4247193	Callee	r_core_cmd		4242681	0					
ANR	4247194	Identifier	r_core_cmd		4242681	0					
ANR	4247195	ArgumentList	core		4242681	1					
ANR	4247196	Argument	core		4242681	0					
ANR	4247197	Identifier	core		4242681	0					
ANR	4247198	Argument	input + 1		4242681	1					
ANR	4247199	AdditiveExpression	input + 1		4242681	0		+			
ANR	4247200	Identifier	input		4242681	0					
ANR	4247201	PrimaryExpression	1		4242681	1					
ANR	4247202	Argument	0		4242681	2					
ANR	4247203	PrimaryExpression	0		4242681	0					
ANR	4247204	ExpressionStatement	r_prof_end ( & prof )	1092:2:32497:32515	4242681	3	True				
ANR	4247205	CallExpression	r_prof_end ( & prof )		4242681	0					
ANR	4247206	Callee	r_prof_end		4242681	0					
ANR	4247207	Identifier	r_prof_end		4242681	0					
ANR	4247208	ArgumentList	& prof		4242681	1					
ANR	4247209	Argument	& prof		4242681	0					
ANR	4247210	UnaryOperationExpression	& prof		4242681	0					
ANR	4247211	UnaryOperator	&		4242681	0					
ANR	4247212	Identifier	prof		4242681	1					
ANR	4247213	ExpressionStatement	core -> num -> value = ( ut64 ) ( int ) prof . result	1093:2:32519:32560	4242681	4	True				
ANR	4247214	AssignmentExpression	core -> num -> value = ( ut64 ) ( int ) prof . result		4242681	0		=			
ANR	4247215	PtrMemberAccess	core -> num -> value		4242681	0					
ANR	4247216	PtrMemberAccess	core -> num		4242681	0					
ANR	4247217	Identifier	core		4242681	0					
ANR	4247218	Identifier	num		4242681	1					
ANR	4247219	Identifier	value		4242681	1					
ANR	4247220	CastExpression	( ut64 ) ( int ) prof . result		4242681	1					
ANR	4247221	CastTarget	ut64		4242681	0					
ANR	4247222	CastExpression	( int ) prof . result		4242681	1					
ANR	4247223	CastTarget	int		4242681	0					
ANR	4247224	MemberAccess	prof . result		4242681	1					
ANR	4247225	Identifier	prof		4242681	0					
ANR	4247226	Identifier	result		4242681	1					
ANR	4247227	ExpressionStatement	"eprintf ( ""%lf\\n"" , prof . result )"	1094:2:32564:32594	4242681	5	True				
ANR	4247228	CallExpression	"eprintf ( ""%lf\\n"" , prof . result )"		4242681	0					
ANR	4247229	Callee	eprintf		4242681	0					
ANR	4247230	Identifier	eprintf		4242681	0					
ANR	4247231	ArgumentList	"""%lf\\n"""		4242681	1					
ANR	4247232	Argument	"""%lf\\n"""		4242681	0					
ANR	4247233	PrimaryExpression	"""%lf\\n"""		4242681	0					
ANR	4247234	Argument	prof . result		4242681	1					
ANR	4247235	MemberAccess	prof . result		4242681	0					
ANR	4247236	Identifier	prof		4242681	0					
ANR	4247237	Identifier	result		4242681	1					
ANR	4247238	BreakStatement	break ;	1095:2:32598:32603	4242681	6	True				
ANR	4247239	Label	case '?' :	1097:1:32609:32617	4242681	175	True				
ANR	4247240	IfStatement	if ( input [ 1 ] == '?' )		4242681	176					
ANR	4247241	Condition	input [ 1 ] == '?'	1098:6:32633:32647	4242681	0	True				
ANR	4247242	EqualityExpression	input [ 1 ] == '?'		4242681	0		==			
ANR	4247243	ArrayIndexing	input [ 1 ]		4242681	0					
ANR	4247244	Identifier	input		4242681	0					
ANR	4247245	PrimaryExpression	1		4242681	1					
ANR	4247246	PrimaryExpression	'?'		4242681	1					
ANR	4247247	CompoundStatement		713:23:19114:19114	4242681	1					
ANR	4247248	IfStatement	if ( input [ 2 ] == '?' )		4242681	0					
ANR	4247249	Condition	input [ 2 ] == '?'	1099:7:32659:32673	4242681	0	True				
ANR	4247250	EqualityExpression	input [ 2 ] == '?'		4242681	0		==			
ANR	4247251	ArrayIndexing	input [ 2 ]		4242681	0					
ANR	4247252	Identifier	input		4242681	0					
ANR	4247253	PrimaryExpression	2		4242681	1					
ANR	4247254	PrimaryExpression	'?'		4242681	1					
ANR	4247255	CompoundStatement		714:24:19140:19140	4242681	1					
ANR	4247256	ExpressionStatement	"r_core_clippy ( ""What are you doing?"" )"	1100:4:32691:32728	4242681	0	True				
ANR	4247257	CallExpression	"r_core_clippy ( ""What are you doing?"" )"		4242681	0					
ANR	4247258	Callee	r_core_clippy		4242681	0					
ANR	4247259	Identifier	r_core_clippy		4242681	0					
ANR	4247260	ArgumentList	"""What are you doing?"""		4242681	1					
ANR	4247261	Argument	"""What are you doing?"""		4242681	0					
ANR	4247262	PrimaryExpression	"""What are you doing?"""		4242681	0					
ANR	4247263	ReturnStatement	return 0 ;	1101:4:32734:32742	4242681	1	True				
ANR	4247264	PrimaryExpression	0		4242681	0					
ANR	4247265	IfStatement	if ( input [ 2 ] )		4242681	1					
ANR	4247266	Condition	input [ 2 ]	1103:7:32756:32763	4242681	0	True				
ANR	4247267	ArrayIndexing	input [ 2 ]		4242681	0					
ANR	4247268	Identifier	input		4242681	0					
ANR	4247269	PrimaryExpression	2		4242681	1					
ANR	4247270	CompoundStatement		718:17:19230:19230	4242681	1					
ANR	4247271	IfStatement	if ( core -> num -> value )		4242681	0					
ANR	4247272	Condition	core -> num -> value	1104:8:32776:32791	4242681	0	True				
ANR	4247273	PtrMemberAccess	core -> num -> value		4242681	0					
ANR	4247274	PtrMemberAccess	core -> num		4242681	0					
ANR	4247275	Identifier	core		4242681	0					
ANR	4247276	Identifier	num		4242681	1					
ANR	4247277	Identifier	value		4242681	1					
ANR	4247278	CompoundStatement		719:26:19258:19258	4242681	1					
ANR	4247279	ExpressionStatement	"r_core_cmd ( core , input + 1 , 0 )"	1105:5:32801:32832	4242681	0	True				
ANR	4247280	CallExpression	"r_core_cmd ( core , input + 1 , 0 )"		4242681	0					
ANR	4247281	Callee	r_core_cmd		4242681	0					
ANR	4247282	Identifier	r_core_cmd		4242681	0					
ANR	4247283	ArgumentList	core		4242681	1					
ANR	4247284	Argument	core		4242681	0					
ANR	4247285	Identifier	core		4242681	0					
ANR	4247286	Argument	input + 1		4242681	1					
ANR	4247287	AdditiveExpression	input + 1		4242681	0		+			
ANR	4247288	Identifier	input		4242681	0					
ANR	4247289	PrimaryExpression	1		4242681	1					
ANR	4247290	Argument	0		4242681	2					
ANR	4247291	PrimaryExpression	0		4242681	0					
ANR	4247292	BreakStatement	break ;	1107:4:32844:32849	4242681	1	True				
ANR	4247293	ExpressionStatement	"r_core_cmd_help ( core , help_msg_question )"	1109:3:32859:32900	4242681	2	True				
ANR	4247294	CallExpression	"r_core_cmd_help ( core , help_msg_question )"		4242681	0					
ANR	4247295	Callee	r_core_cmd_help		4242681	0					
ANR	4247296	Identifier	r_core_cmd_help		4242681	0					
ANR	4247297	ArgumentList	core		4242681	1					
ANR	4247298	Argument	core		4242681	0					
ANR	4247299	Identifier	core		4242681	0					
ANR	4247300	Argument	help_msg_question		4242681	1					
ANR	4247301	Identifier	help_msg_question		4242681	0					
ANR	4247302	ReturnStatement	return 0 ;	1110:3:32905:32913	4242681	3	True				
ANR	4247303	PrimaryExpression	0		4242681	0					
ANR	4247304	ElseStatement	else		4242681	0					
ANR	4247305	IfStatement	if ( input [ 1 ] )		4242681	0					
ANR	4247306	Condition	input [ 1 ]	1111:13:32928:32935	4242681	0	True				
ANR	4247307	ArrayIndexing	input [ 1 ]		4242681	0					
ANR	4247308	Identifier	input		4242681	0					
ANR	4247309	PrimaryExpression	1		4242681	1					
ANR	4247310	CompoundStatement		726:23:19402:19402	4242681	1					
ANR	4247311	IfStatement	if ( core -> num -> value )		4242681	0					
ANR	4247312	Condition	core -> num -> value	1112:7:32947:32962	4242681	0	True				
ANR	4247313	PtrMemberAccess	core -> num -> value		4242681	0					
ANR	4247314	PtrMemberAccess	core -> num		4242681	0					
ANR	4247315	Identifier	core		4242681	0					
ANR	4247316	Identifier	num		4242681	1					
ANR	4247317	Identifier	value		4242681	1					
ANR	4247318	CompoundStatement		727:25:19429:19429	4242681	1					
ANR	4247319	ExpressionStatement	"core -> num -> value = r_core_cmd ( core , input + 1 , 0 )"	1113:4:32971:33019	4242681	0	True				
ANR	4247320	AssignmentExpression	"core -> num -> value = r_core_cmd ( core , input + 1 , 0 )"		4242681	0		=			
ANR	4247321	PtrMemberAccess	core -> num -> value		4242681	0					
ANR	4247322	PtrMemberAccess	core -> num		4242681	0					
ANR	4247323	Identifier	core		4242681	0					
ANR	4247324	Identifier	num		4242681	1					
ANR	4247325	Identifier	value		4242681	1					
ANR	4247326	CallExpression	"r_core_cmd ( core , input + 1 , 0 )"		4242681	1					
ANR	4247327	Callee	r_core_cmd		4242681	0					
ANR	4247328	Identifier	r_core_cmd		4242681	0					
ANR	4247329	ArgumentList	core		4242681	1					
ANR	4247330	Argument	core		4242681	0					
ANR	4247331	Identifier	core		4242681	0					
ANR	4247332	Argument	input + 1		4242681	1					
ANR	4247333	AdditiveExpression	input + 1		4242681	0		+			
ANR	4247334	Identifier	input		4242681	0					
ANR	4247335	PrimaryExpression	1		4242681	1					
ANR	4247336	Argument	0		4242681	2					
ANR	4247337	PrimaryExpression	0		4242681	0					
ANR	4247338	ElseStatement	else		4242681	0					
ANR	4247339	CompoundStatement		730:9:19499:19499	4242681	0					
ANR	4247340	IfStatement	if ( core -> num -> dbz )		4242681	0					
ANR	4247341	Condition	core -> num -> dbz	1116:7:33044:33057	4242681	0	True				
ANR	4247342	PtrMemberAccess	core -> num -> dbz		4242681	0					
ANR	4247343	PtrMemberAccess	core -> num		4242681	0					
ANR	4247344	Identifier	core		4242681	0					
ANR	4247345	Identifier	num		4242681	1					
ANR	4247346	Identifier	dbz		4242681	1					
ANR	4247347	CompoundStatement		731:23:19524:19524	4242681	1					
ANR	4247348	ExpressionStatement	"eprintf ( ""RNum ERROR: Division by Zero\\n"" )"	1117:4:33066:33108	4242681	0	True				
ANR	4247349	CallExpression	"eprintf ( ""RNum ERROR: Division by Zero\\n"" )"		4242681	0					
ANR	4247350	Callee	eprintf		4242681	0					
ANR	4247351	Identifier	eprintf		4242681	0					
ANR	4247352	ArgumentList	"""RNum ERROR: Division by Zero\\n"""		4242681	1					
ANR	4247353	Argument	"""RNum ERROR: Division by Zero\\n"""		4242681	0					
ANR	4247354	PrimaryExpression	"""RNum ERROR: Division by Zero\\n"""		4242681	0					
ANR	4247355	Statement	r_cons_printf	1119:3:33118:33130	4242681	1	True				
ANR	4247356	Statement	(	1119:17:33132:33132	4242681	2	True				
ANR	4247357	Statement	"""%"""	1119:18:33133:33135	4242681	3	True				
ANR	4247358	Statement	PFMT64d	1119:21:33136:33142	4242681	4	True				
ANR	4247359	Statement	"""\\n"""	1119:28:33143:33146	4242681	5	True				
ANR	4247360	Statement	","	1119:32:33147:33147	4242681	6	True				
ANR	4247361	Statement	core	1119:34:33149:33152	4242681	7	True				
ANR	4247362	Statement	->	1119:38:33153:33154	4242681	8	True				
ANR	4247363	Statement	num	1119:40:33155:33157	4242681	9	True				
ANR	4247364	Statement	->	1119:43:33158:33159	4242681	10	True				
ANR	4247365	Statement	value	1119:45:33160:33164	4242681	11	True				
ANR	4247366	Statement	)	1119:50:33165:33165	4242681	12	True				
ANR	4247367	ExpressionStatement		1119:51:33166:33166	4242681	13	True				
ANR	4247368	BreakStatement	break ;	1121:2:33174:33179	4242681	177	True				
ANR	4247369	Label	case '\\0' :	1122:1:33182:33191	4242681	178	True				
ANR	4247370	Label	default :	1123:1:33201:33208	4242681	179	True				
ANR	4247371	Identifier	default		4242681	0					
ANR	4247372	ExpressionStatement	"r_core_cmd_help ( core , help_msg_intro )"	1125:2:33242:33280	4242681	180	True				
ANR	4247373	CallExpression	"r_core_cmd_help ( core , help_msg_intro )"		4242681	0					
ANR	4247374	Callee	r_core_cmd_help		4242681	0					
ANR	4247375	Identifier	r_core_cmd_help		4242681	0					
ANR	4247376	ArgumentList	core		4242681	1					
ANR	4247377	Argument	core		4242681	0					
ANR	4247378	Identifier	core		4242681	0					
ANR	4247379	Argument	help_msg_intro		4242681	1					
ANR	4247380	Identifier	help_msg_intro		4242681	0					
ANR	4247381	ExpressionStatement	"r_core_cmd_help ( core , help_msg_root )"	1126:2:33284:33321	4242681	181	True				
ANR	4247382	CallExpression	"r_core_cmd_help ( core , help_msg_root )"		4242681	0					
ANR	4247383	Callee	r_core_cmd_help		4242681	0					
ANR	4247384	Identifier	r_core_cmd_help		4242681	0					
ANR	4247385	ArgumentList	core		4242681	1					
ANR	4247386	Argument	core		4242681	0					
ANR	4247387	Identifier	core		4242681	0					
ANR	4247388	Argument	help_msg_root		4242681	1					
ANR	4247389	Identifier	help_msg_root		4242681	0					
ANR	4247390	BreakStatement	break ;	1127:2:33325:33330	4242681	182	True				
ANR	4247391	ReturnStatement	return 0 ;	1129:1:33336:33344	4242681	9	True				
ANR	4247392	PrimaryExpression	0		4242681	0					
ANR	4247393	ReturnType	static int		4242681	1					
ANR	4247394	Identifier	cmd_help		4242681	2					
ANR	4247395	ParameterList	"void * data , const char * input"		4242681	3					
ANR	4247396	Parameter	void * data	386:20:13504:13513	4242681	0	True				
ANR	4247397	ParameterType	void *		4242681	0					
ANR	4247398	Identifier	data		4242681	1					
ANR	4247399	Parameter	const char * input	386:32:13516:13532	4242681	1	True				
ANR	4247400	ParameterType	const char *		4242681	0					
ANR	4247401	Identifier	input		4242681	1					
ANR	4247402	CFGEntryNode	ENTRY		4242681		True				
ANR	4247403	CFGExitNode	EXIT		4242681		True				
ANR	4247404	Symbol	core -> num -> dbz		4242681						
ANR	4247405	Symbol	wideOffsets		4242681						
ANR	4247406	Symbol	R_SYS_ARCH		4242681						
ANR	4247407	Symbol	* map		4242681						
ANR	4247408	Symbol	* input		4242681						
ANR	4247409	Symbol	strchr		4242681						
ANR	4247410	Symbol	core -> offset		4242681						
ANR	4247411	Symbol	r_str_hash		4242681						
ANR	4247412	Symbol	len		4242681						
ANR	4247413	Symbol	tmp		4242681						
ANR	4247414	Symbol	buflen		4242681						
ANR	4247415	Symbol	* core -> num		4242681						
ANR	4247416	Symbol	vars		4242681						
ANR	4247417	Symbol	portions		4242681						
ANR	4247418	Symbol	r_cons_is_interactive		4242681						
ANR	4247419	Symbol	vernum		4242681						
ANR	4247420	Symbol	bits		4242681						
ANR	4247421	Symbol	iter		4242681						
ANR	4247422	Symbol	str		4242681						
ANR	4247423	Symbol	input		4242681						
ANR	4247424	Symbol	r_str_donut		4242681						
ANR	4247425	Symbol	* * * core		4242681						
ANR	4247426	Symbol	core -> cons -> context -> pal		4242681						
ANR	4247427	Symbol	size		4242681						
ANR	4247428	Symbol	r_config_get_i		4242681						
ANR	4247429	Symbol	core -> print -> user		4242681						
ANR	4247430	Symbol	r_str_trim_ro		4242681						
ANR	4247431	Symbol	* out		4242681						
ANR	4247432	Symbol	R2_GITTAP		4242681						
ANR	4247433	Symbol	word		4242681						
ANR	4247434	Symbol	r_io_map_get_paddr		4242681						
ANR	4247435	Symbol	core -> cons -> context		4242681						
ANR	4247436	Symbol	* nums		4242681						
ANR	4247437	Symbol	r_num_as_string		4242681						
ANR	4247438	Symbol	* core -> cons		4242681						
ANR	4247439	Symbol	* core		4242681						
ANR	4247440	Symbol	signbit		4242681						
ANR	4247441	Symbol	rstr		4242681						
ANR	4247442	Symbol	help_msg_question_V		4242681						
ANR	4247443	Symbol	isnan		4242681						
ANR	4247444	Symbol	out		4242681						
ANR	4247445	Symbol	map -> delta		4242681						
ANR	4247446	Symbol	r_cons_is_breaked		4242681						
ANR	4247447	Symbol	core -> cons		4242681						
ANR	4247448	Symbol	core -> io		4242681						
ANR	4247449	Symbol	help_msg_at		4242681						
ANR	4247450	Symbol	arg		4242681						
ANR	4247451	Symbol	* str		4242681						
ANR	4247452	Symbol	map		4242681						
ANR	4247453	Symbol	r_hex_str2bin		4242681						
ANR	4247454	Symbol	atoi		4242681						
ANR	4247455	Symbol	a		4242681						
ANR	4247456	Symbol	malloc		4242681						
ANR	4247457	Symbol	b		4242681						
ANR	4247458	Symbol	r_str_pad		4242681						
ANR	4247459	Symbol	d		4242681						
ANR	4247460	Symbol	core -> curtab		4242681						
ANR	4247461	Symbol	f		4242681						
ANR	4247462	Symbol	r_core_yank_hud_path		4242681						
ANR	4247463	Symbol	r_cons_yesno		4242681						
ANR	4247464	Symbol	i		4242681						
ANR	4247465	Symbol	r_str_word_get0		4242681						
ANR	4247466	Symbol	j		4242681						
ANR	4247467	Symbol	k		4242681						
ANR	4247468	Symbol	* p2		4242681						
ANR	4247469	Symbol	prof		4242681						
ANR	4247470	Symbol	n		4242681						
ANR	4247471	Symbol	o		4242681						
ANR	4247472	Symbol	p		4242681						
ANR	4247473	Symbol	q		4242681						
ANR	4247474	Symbol	r		4242681						
ANR	4247475	Symbol	buf		4242681						
ANR	4247476	Symbol	* core -> print		4242681						
ANR	4247477	Symbol	s		4242681						
ANR	4247478	Symbol	UT8_MAX		4242681						
ANR	4247479	Symbol	x		4242681						
ANR	4247480	Symbol	y		4242681						
ANR	4247481	Symbol	r_core_get_boundaries_prot		4242681						
ANR	4247482	Symbol	to		4242681						
ANR	4247483	Symbol	R_SYS_OS		4242681						
ANR	4247484	Symbol	r_list_length		4242681						
ANR	4247485	Symbol	* len		4242681						
ANR	4247486	Symbol	filterFlags		4242681						
ANR	4247487	Symbol	UT32_MAX		4242681						
ANR	4247488	Symbol	msg		4242681						
ANR	4247489	Symbol	r_core_cmd		4242681						
ANR	4247490	Symbol	R2_VERSION_COMMIT		4242681						
ANR	4247491	Symbol	data		4242681						
ANR	4247492	Symbol	pj_string		4242681						
ANR	4247493	Symbol	inputs		4242681						
ANR	4247494	Symbol	core -> num -> value		4242681						
ANR	4247495	Symbol	help_msg_at_at_at		4242681						
ANR	4247496	Symbol	space		4242681						
ANR	4247497	Symbol	* foo		4242681						
ANR	4247498	Symbol	strlen		4242681						
ANR	4247499	Symbol	pad		4242681						
ANR	4247500	Symbol	core -> cons -> context -> pal . flag		4242681						
ANR	4247501	Symbol	core -> print -> hasrefs		4242681						
ANR	4247502	Symbol	asnum		4242681						
ANR	4247503	Symbol	r_num_get		4242681						
ANR	4247504	Symbol	from		4242681						
ANR	4247505	Symbol	UT16_MAX		4242681						
ANR	4247506	Symbol	core -> num		4242681						
ANR	4247507	Symbol	newmsg		4242681						
ANR	4247508	Symbol	nums		4242681						
ANR	4247509	Symbol	help_msg_intro		4242681						
ANR	4247510	Symbol	help_msg_at_at		4242681						
ANR	4247511	Symbol	NULL		4242681						
ANR	4247512	Symbol	r_num_conditional		4242681						
ANR	4247513	Symbol	* * core -> cons		4242681						
ANR	4247514	Symbol	core -> num -> fvalue		4242681						
ANR	4247515	Symbol	help_msg_question_v		4242681						
ANR	4247516	Symbol	list		4242681						
ANR	4247517	Symbol	* portions		4242681						
ANR	4247518	Symbol	R2_VERSION		4242681						
ANR	4247519	Symbol	core -> io -> va		4242681						
ANR	4247520	Symbol	core		4242681						
ANR	4247521	Symbol	unit		4242681						
ANR	4247522	Symbol	r_num_to_bits		4242681						
ANR	4247523	Symbol	true		4242681						
ANR	4247524	Symbol	help_msg_question		4242681						
ANR	4247525	Symbol	core -> print		4242681						
ANR	4247526	Symbol	p2		4242681						
ANR	4247527	Symbol	map -> itv		4242681						
ANR	4247528	Symbol	prof . result		4242681						
ANR	4247529	Symbol	color		4242681						
ANR	4247530	Symbol	* vars		4242681						
ANR	4247531	Symbol	foo		4242681						
ANR	4247532	Symbol	r_str_split_list		4242681						
ANR	4247533	Symbol	R_EMPTY		4242681						
ANR	4247534	Symbol	calloc		4242681						
ANR	4247535	Symbol	help_msg_root		4242681						
ANR	4247536	Symbol	list_len		4242681						
ANR	4247537	Symbol	r_num_math		4242681						
ANR	4247538	Symbol	ret_ascii_table		4242681						
ANR	4247539	Symbol	* core -> cons -> context		4242681						
ANR	4247540	Symbol	map -> itv . addr		4242681						
ANR	4247541	Symbol	addr		4242681						
ANR	4247542	Symbol	& prof		4242681						
ANR	4247543	Symbol	sdb_fmt		4242681						
ANR	4247544	Symbol	* * core		4242681						
ANR	4247545	Symbol	core -> config		4242681						
ANR	4247546	Symbol	r_str_bool		4242681						
ANR	4247547	Symbol	r_num_between		4242681						
ANR	4247548	Symbol	false		4242681						
ANR	4247549	Symbol	& d		4242681						
ANR	4247550	Symbol	& f		4242681						
ANR	4247551	Symbol	r_num_str_split_list		4242681						
ANR	4247552	Symbol	r_num_rand		4242681						
ANR	4247553	Symbol	R_CORE_FOREIGN_ADDR		4242681						
ANR	4247554	Symbol	* core -> io		4242681						
ANR	4247555	Symbol	r_list_pop_head		4242681						
ANR	4247556	Symbol	* i		4242681						
ANR	4247557	Symbol	pc		4242681						
ANR	4247558	Symbol	& n		4242681						
ANR	4247559	Symbol	r_str_split		4242681						
ANR	4247560	Symbol	* p		4242681						
ANR	4247561	Symbol	pj		4242681						
ANR	4247562	Symbol	pj_new		4242681						
ANR	4247563	Symbol	step		4242681						
ANR	4247564	Symbol	strdup		4242681						
ANR	4247565	Symbol	* q		4242681						
ANR	4247566	Symbol	r_io_map_get		4242681						
