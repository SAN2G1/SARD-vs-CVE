command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5204335	File	data/converged/CVE-2019-16718~_radare2/libr_util_regex_regcomp.c								
ANR	5204336	ClassDef	parse	55:0:2165:2678							
ANR	5204337	DeclStmt									
ANR	5204338	Decl							char	char *	next
ANR	5204339	DeclStmt									
ANR	5204340	Decl							char	char *	end
ANR	5204341	DeclStmt									
ANR	5204342	Decl							int	int	error
ANR	5204343	DeclStmt									
ANR	5204344	Decl							sop	sop *	strip
ANR	5204345	DeclStmt									
ANR	5204346	Decl							sopno	sopno	ssize
ANR	5204347	DeclStmt									
ANR	5204348	Decl							sopno	sopno	slen
ANR	5204349	DeclStmt									
ANR	5204350	Decl							int	int	ncsalloc
ANR	5204351	DeclStmt									
ANR	5204352	Decl							struct re_guts	struct re_guts *	g
ANR	5204353	DeclStmt									
ANR	5204354	Decl							sopno	sopno [ NPAREN ]	pbegin
ANR	5204355	DeclStmt									
ANR	5204356	Decl							sopno	sopno [ NPAREN ]	pend
ANR	5204357	DeclStmt									
ANR	5204358	Decl							void	"void ( struct parse * , int )"	p_ere
ANR	5204359	DeclStmt									
ANR	5204360	Decl							void	void ( struct parse * )	p_ere_exp
ANR	5204361	DeclStmt									
ANR	5204362	Decl							void	void ( struct parse * )	p_str
ANR	5204363	DeclStmt									
ANR	5204364	Decl							void	"void ( struct parse * , int , int )"	p_bre
ANR	5204365	DeclStmt									
ANR	5204366	Decl							int	"int ( struct parse * , int )"	p_simp_re
ANR	5204367	DeclStmt									
ANR	5204368	Decl							int	int ( struct parse * )	p_count
ANR	5204369	DeclStmt									
ANR	5204370	Decl							void	void ( struct parse * )	p_bracket
ANR	5204371	DeclStmt									
ANR	5204372	Decl							void	"void ( struct parse * , cset * )"	p_b_term
ANR	5204373	DeclStmt									
ANR	5204374	Decl							void	"void ( struct parse * , cset * )"	p_b_cclass
ANR	5204375	DeclStmt									
ANR	5204376	Decl							void	"void ( struct parse * , cset * )"	p_b_eclass
ANR	5204377	DeclStmt									
ANR	5204378	Decl							char	char ( struct parse * )	p_b_symbol
ANR	5204379	DeclStmt									
ANR	5204380	Decl							char	"char ( struct parse * , int )"	p_b_coll_elem
ANR	5204381	DeclStmt									
ANR	5204382	Decl							char	char ( int )	othercase
ANR	5204383	DeclStmt									
ANR	5204384	Decl							void	"void ( struct parse * , int )"	bothcases
ANR	5204385	DeclStmt									
ANR	5204386	Decl							void	"void ( struct parse * , int )"	ordinary
ANR	5204387	DeclStmt									
ANR	5204388	Decl							void	"void ( struct parse * , int )"	special
ANR	5204389	DeclStmt									
ANR	5204390	Decl							void	void ( struct parse * )	nonnewline
ANR	5204391	DeclStmt									
ANR	5204392	Decl							void	"void ( struct parse * , sopno , int , int )"	repeat
ANR	5204393	DeclStmt									
ANR	5204394	Decl							int	"int ( struct parse * , int )"	seterr
ANR	5204395	DeclStmt									
ANR	5204396	Decl							cset	cset * ( struct parse * )	allocset
ANR	5204397	DeclStmt									
ANR	5204398	Decl							void	"void ( struct parse * , cset * )"	freeset
ANR	5204399	DeclStmt									
ANR	5204400	Decl							int	"int ( struct parse * , cset * )"	freezeset
ANR	5204401	DeclStmt									
ANR	5204402	Decl							int	"int ( struct parse * , cset * )"	firstch
ANR	5204403	DeclStmt									
ANR	5204404	Decl							int	"int ( struct parse * , cset * )"	nch
ANR	5204405	DeclStmt									
ANR	5204406	Decl							void	"void ( struct parse * , cset * , char * )"	mcadd
ANR	5204407	DeclStmt									
ANR	5204408	Decl							void	"void ( struct parse * , cset * )"	mcinvert
ANR	5204409	DeclStmt									
ANR	5204410	Decl							void	"void ( struct parse * , cset * )"	mccase
ANR	5204411	DeclStmt									
ANR	5204412	Decl							int	"int ( struct re_guts * , int )"	isinsets
ANR	5204413	DeclStmt									
ANR	5204414	Decl							int	"int ( struct re_guts * , int , int )"	samesets
ANR	5204415	DeclStmt									
ANR	5204416	Decl							void	"void ( struct parse * , struct re_guts * )"	categorize
ANR	5204417	DeclStmt									
ANR	5204418	Decl							sopno	"sopno ( struct parse * , sopno , sopno )"	dupl
ANR	5204419	DeclStmt									
ANR	5204420	Decl							void	"void ( struct parse * , sop , size_t )"	doemit
ANR	5204421	DeclStmt									
ANR	5204422	Decl							void	"void ( struct parse * , sop , size_t , sopno )"	doinsert
ANR	5204423	DeclStmt									
ANR	5204424	Decl							void	"void ( struct parse * , sopno , sop )"	dofwd
ANR	5204425	DeclStmt									
ANR	5204426	Decl							void	"void ( struct parse * , sopno )"	enlarge
ANR	5204427	DeclStmt									
ANR	5204428	Decl							void	"void ( struct parse * , struct re_guts * )"	stripsnug
ANR	5204429	DeclStmt									
ANR	5204430	Decl							void	"void ( struct parse * , struct re_guts * )"	findmust
ANR	5204431	DeclStmt									
ANR	5204432	Decl							sopno	"sopno ( struct parse * , struct re_guts * )"	pluscount
ANR	5204433	DeclStmt									
ANR	5204434	Decl							char	char [ 10 ]	nuls
ANR	5204435	Function	r_regex_match	141:0:5682:6197							
ANR	5204436	FunctionDef	"r_regex_match (const char * pattern , const char * flags , const char * text)"		5204435	0					
ANR	5204437	CompoundStatement		141:83:5765:6197	5204435	0					
ANR	5204438	IdentifierDeclStatement	int ret ;	142:1:5768:5775	5204435	0	True				
ANR	5204439	IdentifierDecl	ret		5204435	0					
ANR	5204440	IdentifierDeclType	int		5204435	0					
ANR	5204441	Identifier	ret		5204435	1					
ANR	5204442	IdentifierDeclStatement	RRegex rx ;	143:1:5778:5787	5204435	1	True				
ANR	5204443	IdentifierDecl	rx		5204435	0					
ANR	5204444	IdentifierDeclType	RRegex		5204435	0					
ANR	5204445	Identifier	rx		5204435	1					
ANR	5204446	IdentifierDeclStatement	int re_flags = r_regex_flags ( flags ) ;	144:1:5790:5826	5204435	2	True				
ANR	5204447	IdentifierDecl	re_flags = r_regex_flags ( flags )		5204435	0					
ANR	5204448	IdentifierDeclType	int		5204435	0					
ANR	5204449	Identifier	re_flags		5204435	1					
ANR	5204450	AssignmentExpression	re_flags = r_regex_flags ( flags )		5204435	2		=			
ANR	5204451	Identifier	re_flags		5204435	0					
ANR	5204452	CallExpression	r_regex_flags ( flags )		5204435	1					
ANR	5204453	Callee	r_regex_flags		5204435	0					
ANR	5204454	Identifier	r_regex_flags		5204435	0					
ANR	5204455	ArgumentList	flags		5204435	1					
ANR	5204456	Argument	flags		5204435	0					
ANR	5204457	Identifier	flags		5204435	0					
ANR	5204458	IfStatement	"if ( r_regex_comp ( & rx , pattern , re_flags ) )"		5204435	3					
ANR	5204459	Condition	"r_regex_comp ( & rx , pattern , re_flags )"	145:5:5833:5869	5204435	0	True				
ANR	5204460	CallExpression	"r_regex_comp ( & rx , pattern , re_flags )"		5204435	0					
ANR	5204461	Callee	r_regex_comp		5204435	0					
ANR	5204462	Identifier	r_regex_comp		5204435	0					
ANR	5204463	ArgumentList	& rx		5204435	1					
ANR	5204464	Argument	& rx		5204435	0					
ANR	5204465	UnaryOperationExpression	& rx		5204435	0					
ANR	5204466	UnaryOperator	&		5204435	0					
ANR	5204467	Identifier	rx		5204435	1					
ANR	5204468	Argument	pattern		5204435	1					
ANR	5204469	Identifier	pattern		5204435	0					
ANR	5204470	Argument	re_flags		5204435	2					
ANR	5204471	Identifier	re_flags		5204435	0					
ANR	5204472	CompoundStatement		5:44:106:106	5204435	1					
ANR	5204473	ExpressionStatement	"eprintf ( ""FAIL TO COMPILE %s\\n"" , pattern )"	146:2:5876:5917	5204435	0	True				
ANR	5204474	CallExpression	"eprintf ( ""FAIL TO COMPILE %s\\n"" , pattern )"		5204435	0					
ANR	5204475	Callee	eprintf		5204435	0					
ANR	5204476	Identifier	eprintf		5204435	0					
ANR	5204477	ArgumentList	"""FAIL TO COMPILE %s\\n"""		5204435	1					
ANR	5204478	Argument	"""FAIL TO COMPILE %s\\n"""		5204435	0					
ANR	5204479	PrimaryExpression	"""FAIL TO COMPILE %s\\n"""		5204435	0					
ANR	5204480	Argument	pattern		5204435	1					
ANR	5204481	Identifier	pattern		5204435	0					
ANR	5204482	ReturnStatement	return 0 ;	147:2:5921:5929	5204435	1	True				
ANR	5204483	PrimaryExpression	0		5204435	0					
ANR	5204484	ExpressionStatement	"ret = r_regex_exec ( & rx , text , 0 , 0 , re_flags )"	149:1:5935:5981	5204435	4	True				
ANR	5204485	AssignmentExpression	"ret = r_regex_exec ( & rx , text , 0 , 0 , re_flags )"		5204435	0		=			
ANR	5204486	Identifier	ret		5204435	0					
ANR	5204487	CallExpression	"r_regex_exec ( & rx , text , 0 , 0 , re_flags )"		5204435	1					
ANR	5204488	Callee	r_regex_exec		5204435	0					
ANR	5204489	Identifier	r_regex_exec		5204435	0					
ANR	5204490	ArgumentList	& rx		5204435	1					
ANR	5204491	Argument	& rx		5204435	0					
ANR	5204492	UnaryOperationExpression	& rx		5204435	0					
ANR	5204493	UnaryOperator	&		5204435	0					
ANR	5204494	Identifier	rx		5204435	1					
ANR	5204495	Argument	text		5204435	1					
ANR	5204496	Identifier	text		5204435	0					
ANR	5204497	Argument	0		5204435	2					
ANR	5204498	PrimaryExpression	0		5204435	0					
ANR	5204499	Argument	0		5204435	3					
ANR	5204500	PrimaryExpression	0		5204435	0					
ANR	5204501	Argument	re_flags		5204435	4					
ANR	5204502	Identifier	re_flags		5204435	0					
ANR	5204503	ExpressionStatement	r_regex_fini ( & rx )	150:1:5984:6002	5204435	5	True				
ANR	5204504	CallExpression	r_regex_fini ( & rx )		5204435	0					
ANR	5204505	Callee	r_regex_fini		5204435	0					
ANR	5204506	Identifier	r_regex_fini		5204435	0					
ANR	5204507	ArgumentList	& rx		5204435	1					
ANR	5204508	Argument	& rx		5204435	0					
ANR	5204509	UnaryOperationExpression	& rx		5204435	0					
ANR	5204510	UnaryOperator	&		5204435	0					
ANR	5204511	Identifier	rx		5204435	1					
ANR	5204512	ReturnStatement	return ret ? 0 : 1 ;	151:1:6005:6021	5204435	6	True				
ANR	5204513	ConditionalExpression	ret ? 0 : 1		5204435	0					
ANR	5204514	Condition	ret		5204435	0					
ANR	5204515	Identifier	ret		5204435	0					
ANR	5204516	PrimaryExpression	0		5204435	1					
ANR	5204517	PrimaryExpression	1		5204435	2					
ANR	5204518	IdentifierDeclStatement	regex_t preg ;	153:1:6030:6042	5204435	7	True				
ANR	5204519	IdentifierDecl	preg		5204435	0					
ANR	5204520	IdentifierDeclType	regex_t		5204435	0					
ANR	5204521	Identifier	preg		5204435	1					
ANR	5204522	IdentifierDeclStatement	regmatch_t pmatch [ NUM_MATCHES ] ;	154:1:6045:6075	5204435	8	True				
ANR	5204523	IdentifierDecl	pmatch [ NUM_MATCHES ]		5204435	0					
ANR	5204524	IdentifierDeclType	regmatch_t [ NUM_MATCHES ]		5204435	0					
ANR	5204525	Identifier	pmatch		5204435	1					
ANR	5204526	Identifier	NUM_MATCHES		5204435	2					
ANR	5204527	IfStatement	"if ( regcomp ( & preg , reg , REG_EXTENDED ) )"		5204435	9					
ANR	5204528	Condition	"regcomp ( & preg , reg , REG_EXTENDED )"	155:5:6082:6114	5204435	0	True				
ANR	5204529	CallExpression	"regcomp ( & preg , reg , REG_EXTENDED )"		5204435	0					
ANR	5204530	Callee	regcomp		5204435	0					
ANR	5204531	Identifier	regcomp		5204435	0					
ANR	5204532	ArgumentList	& preg		5204435	1					
ANR	5204533	Argument	& preg		5204435	0					
ANR	5204534	UnaryOperationExpression	& preg		5204435	0					
ANR	5204535	UnaryOperator	&		5204435	0					
ANR	5204536	Identifier	preg		5204435	1					
ANR	5204537	Argument	reg		5204435	1					
ANR	5204538	Identifier	reg		5204435	0					
ANR	5204539	Argument	REG_EXTENDED		5204435	2					
ANR	5204540	Identifier	REG_EXTENDED		5204435	0					
ANR	5204541	ReturnStatement	return - 1 ;	156:2:6119:6128	5204435	1	True				
ANR	5204542	UnaryOperationExpression	- 1		5204435	0					
ANR	5204543	UnaryOperator	-		5204435	0					
ANR	5204544	PrimaryExpression	1		5204435	1					
ANR	5204545	ReturnStatement	"return ( regexec ( & preg , str , NUM_MATCHES , pmatch , 0 ) ) ? 1 : 0 ;"	157:1:6131:6188	5204435	10	True				
ANR	5204546	ConditionalExpression	"( regexec ( & preg , str , NUM_MATCHES , pmatch , 0 ) ) ? 1 : 0"		5204435	0					
ANR	5204547	Condition	"regexec ( & preg , str , NUM_MATCHES , pmatch , 0 )"		5204435	0					
ANR	5204548	CallExpression	"regexec ( & preg , str , NUM_MATCHES , pmatch , 0 )"		5204435	0					
ANR	5204549	Callee	regexec		5204435	0					
ANR	5204550	Identifier	regexec		5204435	0					
ANR	5204551	ArgumentList	& preg		5204435	1					
ANR	5204552	Argument	& preg		5204435	0					
ANR	5204553	UnaryOperationExpression	& preg		5204435	0					
ANR	5204554	UnaryOperator	&		5204435	0					
ANR	5204555	Identifier	preg		5204435	1					
ANR	5204556	Argument	str		5204435	1					
ANR	5204557	Identifier	str		5204435	0					
ANR	5204558	Argument	NUM_MATCHES		5204435	2					
ANR	5204559	Identifier	NUM_MATCHES		5204435	0					
ANR	5204560	Argument	pmatch		5204435	3					
ANR	5204561	Identifier	pmatch		5204435	0					
ANR	5204562	Argument	0		5204435	4					
ANR	5204563	PrimaryExpression	0		5204435	0					
ANR	5204564	PrimaryExpression	1		5204435	1					
ANR	5204565	PrimaryExpression	0		5204435	2					
ANR	5204566	ReturnType	R_API int		5204435	1					
ANR	5204567	Identifier	r_regex_match		5204435	2					
ANR	5204568	ParameterList	"const char * pattern , const char * flags , const char * text"		5204435	3					
ANR	5204569	Parameter	const char * pattern	141:25:5707:5725	5204435	0	True				
ANR	5204570	ParameterType	const char *		5204435	0					
ANR	5204571	Identifier	pattern		5204435	1					
ANR	5204572	Parameter	const char * flags	141:46:5728:5744	5204435	1	True				
ANR	5204573	ParameterType	const char *		5204435	0					
ANR	5204574	Identifier	flags		5204435	1					
ANR	5204575	Parameter	const char * text	141:65:5747:5762	5204435	2	True				
ANR	5204576	ParameterType	const char *		5204435	0					
ANR	5204577	Identifier	text		5204435	1					
ANR	5204578	CFGEntryNode	ENTRY		5204435		True				
ANR	5204579	CFGExitNode	EXIT		5204435		True				
ANR	5204580	Symbol	ret		5204435						
ANR	5204581	Symbol	rx		5204435						
ANR	5204582	Symbol	pattern		5204435						
ANR	5204583	Symbol	flags		5204435						
ANR	5204584	Symbol	REG_EXTENDED		5204435						
ANR	5204585	Symbol	r_regex_flags		5204435						
ANR	5204586	Symbol	preg		5204435						
ANR	5204587	Symbol	str		5204435						
ANR	5204588	Symbol	& rx		5204435						
ANR	5204589	Symbol	& preg		5204435						
ANR	5204590	Symbol	reg		5204435						
ANR	5204591	Symbol	pmatch		5204435						
ANR	5204592	Symbol	r_regex_exec		5204435						
ANR	5204593	Symbol	regcomp		5204435						
ANR	5204594	Symbol	NUM_MATCHES		5204435						
ANR	5204595	Symbol	text		5204435						
ANR	5204596	Symbol	re_flags		5204435						
ANR	5204597	Symbol	regexec		5204435						
ANR	5204598	Symbol	r_regex_comp		5204435						
ANR	5204599	Function	r_regex_new	161:0:6200:6491							
ANR	5204600	FunctionDef	"r_regex_new (const char * pattern , const char * flags)"		5204599	0					
ANR	5204601	CompoundStatement		161:67:6267:6491	5204599	0					
ANR	5204602	IdentifierDeclStatement	"RRegex rx , * r ;"	162:1:6270:6283	5204599	0	True				
ANR	5204603	IdentifierDecl	rx		5204599	0					
ANR	5204604	IdentifierDeclType	RRegex		5204599	0					
ANR	5204605	Identifier	rx		5204599	1					
ANR	5204606	IdentifierDecl	* r		5204599	1					
ANR	5204607	IdentifierDeclType	RRegex *		5204599	0					
ANR	5204608	Identifier	r		5204599	1					
ANR	5204609	ExpressionStatement	"memset ( & rx , 0 , sizeof ( RRegex ) )"	163:1:6286:6316	5204599	1	True				
ANR	5204610	CallExpression	"memset ( & rx , 0 , sizeof ( RRegex ) )"		5204599	0					
ANR	5204611	Callee	memset		5204599	0					
ANR	5204612	Identifier	memset		5204599	0					
ANR	5204613	ArgumentList	& rx		5204599	1					
ANR	5204614	Argument	& rx		5204599	0					
ANR	5204615	UnaryOperationExpression	& rx		5204599	0					
ANR	5204616	UnaryOperator	&		5204599	0					
ANR	5204617	Identifier	rx		5204599	1					
ANR	5204618	Argument	0		5204599	1					
ANR	5204619	PrimaryExpression	0		5204599	0					
ANR	5204620	Argument	sizeof ( RRegex )		5204599	2					
ANR	5204621	SizeofExpression	sizeof ( RRegex )		5204599	0					
ANR	5204622	Sizeof	sizeof		5204599	0					
ANR	5204623	SizeofOperand	RRegex		5204599	1					
ANR	5204624	IfStatement	"if ( r_regex_comp ( & rx , pattern , r_regex_flags ( flags ) ) )"		5204599	2					
ANR	5204625	Condition	"r_regex_comp ( & rx , pattern , r_regex_flags ( flags ) )"	164:5:6323:6372	5204599	0	True				
ANR	5204626	CallExpression	"r_regex_comp ( & rx , pattern , r_regex_flags ( flags ) )"		5204599	0					
ANR	5204627	Callee	r_regex_comp		5204599	0					
ANR	5204628	Identifier	r_regex_comp		5204599	0					
ANR	5204629	ArgumentList	& rx		5204599	1					
ANR	5204630	Argument	& rx		5204599	0					
ANR	5204631	UnaryOperationExpression	& rx		5204599	0					
ANR	5204632	UnaryOperator	&		5204599	0					
ANR	5204633	Identifier	rx		5204599	1					
ANR	5204634	Argument	pattern		5204599	1					
ANR	5204635	Identifier	pattern		5204599	0					
ANR	5204636	Argument	r_regex_flags ( flags )		5204599	2					
ANR	5204637	CallExpression	r_regex_flags ( flags )		5204599	0					
ANR	5204638	Callee	r_regex_flags		5204599	0					
ANR	5204639	Identifier	r_regex_flags		5204599	0					
ANR	5204640	ArgumentList	flags		5204599	1					
ANR	5204641	Argument	flags		5204599	0					
ANR	5204642	Identifier	flags		5204599	0					
ANR	5204643	CompoundStatement		4:57:107:107	5204599	1					
ANR	5204644	ReturnStatement	return NULL ;	165:2:6379:6390	5204599	0	True				
ANR	5204645	Identifier	NULL		5204599	0					
ANR	5204646	ExpressionStatement	r = R_NEW ( RRegex )	167:1:6396:6414	5204599	3	True				
ANR	5204647	AssignmentExpression	r = R_NEW ( RRegex )		5204599	0		=			
ANR	5204648	Identifier	r		5204599	0					
ANR	5204649	CallExpression	R_NEW ( RRegex )		5204599	1					
ANR	5204650	Callee	R_NEW		5204599	0					
ANR	5204651	Identifier	R_NEW		5204599	0					
ANR	5204652	ArgumentList	RRegex		5204599	1					
ANR	5204653	Argument	RRegex		5204599	0					
ANR	5204654	Identifier	RRegex		5204599	0					
ANR	5204655	IfStatement	if ( ! r )		5204599	4					
ANR	5204656	Condition	! r	168:5:6421:6422	5204599	0	True				
ANR	5204657	UnaryOperationExpression	! r		5204599	0					
ANR	5204658	UnaryOperator	!		5204599	0					
ANR	5204659	Identifier	r		5204599	1					
ANR	5204660	CompoundStatement		8:9:157:157	5204599	1					
ANR	5204661	ReturnStatement	return NULL ;	169:2:6429:6440	5204599	0	True				
ANR	5204662	Identifier	NULL		5204599	0					
ANR	5204663	ExpressionStatement	"memcpy ( r , & rx , sizeof ( RRegex ) )"	171:1:6446:6478	5204599	5	True				
ANR	5204664	CallExpression	"memcpy ( r , & rx , sizeof ( RRegex ) )"		5204599	0					
ANR	5204665	Callee	memcpy		5204599	0					
ANR	5204666	Identifier	memcpy		5204599	0					
ANR	5204667	ArgumentList	r		5204599	1					
ANR	5204668	Argument	r		5204599	0					
ANR	5204669	Identifier	r		5204599	0					
ANR	5204670	Argument	& rx		5204599	1					
ANR	5204671	UnaryOperationExpression	& rx		5204599	0					
ANR	5204672	UnaryOperator	&		5204599	0					
ANR	5204673	Identifier	rx		5204599	1					
ANR	5204674	Argument	sizeof ( RRegex )		5204599	2					
ANR	5204675	SizeofExpression	sizeof ( RRegex )		5204599	0					
ANR	5204676	Sizeof	sizeof		5204599	0					
ANR	5204677	SizeofOperand	RRegex		5204599	1					
ANR	5204678	ReturnStatement	return r ;	172:1:6481:6489	5204599	6	True				
ANR	5204679	Identifier	r		5204599	0					
ANR	5204680	ReturnType	R_API RRegex *		5204599	1					
ANR	5204681	Identifier	r_regex_new		5204599	2					
ANR	5204682	ParameterList	"const char * pattern , const char * flags"		5204599	3					
ANR	5204683	Parameter	const char * pattern	161:27:6227:6245	5204599	0	True				
ANR	5204684	ParameterType	const char *		5204599	0					
ANR	5204685	Identifier	pattern		5204599	1					
ANR	5204686	Parameter	const char * flags	161:48:6248:6264	5204599	1	True				
ANR	5204687	ParameterType	const char *		5204599	0					
ANR	5204688	Identifier	flags		5204599	1					
ANR	5204689	CFGEntryNode	ENTRY		5204599		True				
ANR	5204690	CFGExitNode	EXIT		5204599		True				
ANR	5204691	Symbol	& rx		5204599						
ANR	5204692	Symbol	r		5204599						
ANR	5204693	Symbol	NULL		5204599						
ANR	5204694	Symbol	RRegex		5204599						
ANR	5204695	Symbol	rx		5204599						
ANR	5204696	Symbol	pattern		5204599						
ANR	5204697	Symbol	flags		5204599						
ANR	5204698	Symbol	R_NEW		5204599						
ANR	5204699	Symbol	r_regex_flags		5204599						
ANR	5204700	Symbol	r_regex_comp		5204599						
ANR	5204701	Function	r_regex_flags	175:0:6494:6974							
ANR	5204702	FunctionDef	r_regex_flags (const char * f)		5204701	0					
ANR	5204703	CompoundStatement		175:39:6533:6974	5204701	0					
ANR	5204704	IdentifierDeclStatement	int flags = 0 ;	176:1:6536:6549	5204701	0	True				
ANR	5204705	IdentifierDecl	flags = 0		5204701	0					
ANR	5204706	IdentifierDeclType	int		5204701	0					
ANR	5204707	Identifier	flags		5204701	1					
ANR	5204708	AssignmentExpression	flags = 0		5204701	2		=			
ANR	5204709	Identifier	flags		5204701	0					
ANR	5204710	PrimaryExpression	0		5204701	1					
ANR	5204711	IfStatement	if ( ! f || ! * f )		5204701	1					
ANR	5204712	Condition	! f || ! * f	177:5:6556:6564	5204701	0	True				
ANR	5204713	OrExpression	! f || ! * f		5204701	0		||			
ANR	5204714	UnaryOperationExpression	! f		5204701	0					
ANR	5204715	UnaryOperator	!		5204701	0					
ANR	5204716	Identifier	f		5204701	1					
ANR	5204717	UnaryOperationExpression	! * f		5204701	1					
ANR	5204718	UnaryOperator	!		5204701	0					
ANR	5204719	UnaryOperationExpression	* f		5204701	1					
ANR	5204720	UnaryOperator	*		5204701	0					
ANR	5204721	Identifier	f		5204701	1					
ANR	5204722	CompoundStatement		3:16:33:33	5204701	1					
ANR	5204723	ReturnStatement	return 0 ;	178:2:6571:6579	5204701	0	True				
ANR	5204724	PrimaryExpression	0		5204701	0					
ANR	5204725	IfStatement	"if ( strchr ( f , 'e' ) )"		5204701	2					
ANR	5204726	Condition	"strchr ( f , 'e' )"	180:5:6589:6603	5204701	0	True				
ANR	5204727	CallExpression	"strchr ( f , 'e' )"		5204701	0					
ANR	5204728	Callee	strchr		5204701	0					
ANR	5204729	Identifier	strchr		5204701	0					
ANR	5204730	ArgumentList	f		5204701	1					
ANR	5204731	Argument	f		5204701	0					
ANR	5204732	Identifier	f		5204701	0					
ANR	5204733	Argument	'e'		5204701	1					
ANR	5204734	PrimaryExpression	'e'		5204701	0					
ANR	5204735	CompoundStatement		6:22:72:72	5204701	1					
ANR	5204736	ExpressionStatement	flags |= R_REGEX_EXTENDED	181:2:6610:6635	5204701	0	True				
ANR	5204737	AssignmentExpression	flags |= R_REGEX_EXTENDED		5204701	0		|=			
ANR	5204738	Identifier	flags		5204701	0					
ANR	5204739	Identifier	R_REGEX_EXTENDED		5204701	1					
ANR	5204740	IfStatement	"if ( strchr ( f , 'i' ) )"		5204701	3					
ANR	5204741	Condition	"strchr ( f , 'i' )"	183:5:6645:6659	5204701	0	True				
ANR	5204742	CallExpression	"strchr ( f , 'i' )"		5204701	0					
ANR	5204743	Callee	strchr		5204701	0					
ANR	5204744	Identifier	strchr		5204701	0					
ANR	5204745	ArgumentList	f		5204701	1					
ANR	5204746	Argument	f		5204701	0					
ANR	5204747	Identifier	f		5204701	0					
ANR	5204748	Argument	'i'		5204701	1					
ANR	5204749	PrimaryExpression	'i'		5204701	0					
ANR	5204750	CompoundStatement		9:22:128:128	5204701	1					
ANR	5204751	ExpressionStatement	flags |= R_REGEX_ICASE	184:2:6666:6688	5204701	0	True				
ANR	5204752	AssignmentExpression	flags |= R_REGEX_ICASE		5204701	0		|=			
ANR	5204753	Identifier	flags		5204701	0					
ANR	5204754	Identifier	R_REGEX_ICASE		5204701	1					
ANR	5204755	IfStatement	"if ( strchr ( f , 's' ) )"		5204701	4					
ANR	5204756	Condition	"strchr ( f , 's' )"	186:5:6698:6712	5204701	0	True				
ANR	5204757	CallExpression	"strchr ( f , 's' )"		5204701	0					
ANR	5204758	Callee	strchr		5204701	0					
ANR	5204759	Identifier	strchr		5204701	0					
ANR	5204760	ArgumentList	f		5204701	1					
ANR	5204761	Argument	f		5204701	0					
ANR	5204762	Identifier	f		5204701	0					
ANR	5204763	Argument	's'		5204701	1					
ANR	5204764	PrimaryExpression	's'		5204701	0					
ANR	5204765	CompoundStatement		12:22:181:181	5204701	1					
ANR	5204766	ExpressionStatement	flags |= R_REGEX_NOSUB	187:2:6719:6741	5204701	0	True				
ANR	5204767	AssignmentExpression	flags |= R_REGEX_NOSUB		5204701	0		|=			
ANR	5204768	Identifier	flags		5204701	0					
ANR	5204769	Identifier	R_REGEX_NOSUB		5204701	1					
ANR	5204770	IfStatement	"if ( strchr ( f , 'n' ) )"		5204701	5					
ANR	5204771	Condition	"strchr ( f , 'n' )"	189:5:6751:6765	5204701	0	True				
ANR	5204772	CallExpression	"strchr ( f , 'n' )"		5204701	0					
ANR	5204773	Callee	strchr		5204701	0					
ANR	5204774	Identifier	strchr		5204701	0					
ANR	5204775	ArgumentList	f		5204701	1					
ANR	5204776	Argument	f		5204701	0					
ANR	5204777	Identifier	f		5204701	0					
ANR	5204778	Argument	'n'		5204701	1					
ANR	5204779	PrimaryExpression	'n'		5204701	0					
ANR	5204780	CompoundStatement		15:22:234:234	5204701	1					
ANR	5204781	ExpressionStatement	flags |= R_REGEX_NEWLINE	190:2:6772:6796	5204701	0	True				
ANR	5204782	AssignmentExpression	flags |= R_REGEX_NEWLINE		5204701	0		|=			
ANR	5204783	Identifier	flags		5204701	0					
ANR	5204784	Identifier	R_REGEX_NEWLINE		5204701	1					
ANR	5204785	IfStatement	"if ( strchr ( f , 'N' ) )"		5204701	6					
ANR	5204786	Condition	"strchr ( f , 'N' )"	192:5:6806:6820	5204701	0	True				
ANR	5204787	CallExpression	"strchr ( f , 'N' )"		5204701	0					
ANR	5204788	Callee	strchr		5204701	0					
ANR	5204789	Identifier	strchr		5204701	0					
ANR	5204790	ArgumentList	f		5204701	1					
ANR	5204791	Argument	f		5204701	0					
ANR	5204792	Identifier	f		5204701	0					
ANR	5204793	Argument	'N'		5204701	1					
ANR	5204794	PrimaryExpression	'N'		5204701	0					
ANR	5204795	CompoundStatement		18:22:289:289	5204701	1					
ANR	5204796	ExpressionStatement	flags |= R_REGEX_NOSPEC	193:2:6827:6850	5204701	0	True				
ANR	5204797	AssignmentExpression	flags |= R_REGEX_NOSPEC		5204701	0		|=			
ANR	5204798	Identifier	flags		5204701	0					
ANR	5204799	Identifier	R_REGEX_NOSPEC		5204701	1					
ANR	5204800	IfStatement	"if ( strchr ( f , 'p' ) )"		5204701	7					
ANR	5204801	Condition	"strchr ( f , 'p' )"	195:5:6860:6874	5204701	0	True				
ANR	5204802	CallExpression	"strchr ( f , 'p' )"		5204701	0					
ANR	5204803	Callee	strchr		5204701	0					
ANR	5204804	Identifier	strchr		5204701	0					
ANR	5204805	ArgumentList	f		5204701	1					
ANR	5204806	Argument	f		5204701	0					
ANR	5204807	Identifier	f		5204701	0					
ANR	5204808	Argument	'p'		5204701	1					
ANR	5204809	PrimaryExpression	'p'		5204701	0					
ANR	5204810	CompoundStatement		21:22:343:343	5204701	1					
ANR	5204811	ExpressionStatement	flags |= R_REGEX_PEND	196:2:6881:6902	5204701	0	True				
ANR	5204812	AssignmentExpression	flags |= R_REGEX_PEND		5204701	0		|=			
ANR	5204813	Identifier	flags		5204701	0					
ANR	5204814	Identifier	R_REGEX_PEND		5204701	1					
ANR	5204815	IfStatement	"if ( strchr ( f , 'd' ) )"		5204701	8					
ANR	5204816	Condition	"strchr ( f , 'd' )"	198:5:6912:6926	5204701	0	True				
ANR	5204817	CallExpression	"strchr ( f , 'd' )"		5204701	0					
ANR	5204818	Callee	strchr		5204701	0					
ANR	5204819	Identifier	strchr		5204701	0					
ANR	5204820	ArgumentList	f		5204701	1					
ANR	5204821	Argument	f		5204701	0					
ANR	5204822	Identifier	f		5204701	0					
ANR	5204823	Argument	'd'		5204701	1					
ANR	5204824	PrimaryExpression	'd'		5204701	0					
ANR	5204825	CompoundStatement		24:22:395:395	5204701	1					
ANR	5204826	ExpressionStatement	flags |= R_REGEX_DUMP	199:2:6933:6954	5204701	0	True				
ANR	5204827	AssignmentExpression	flags |= R_REGEX_DUMP		5204701	0		|=			
ANR	5204828	Identifier	flags		5204701	0					
ANR	5204829	Identifier	R_REGEX_DUMP		5204701	1					
ANR	5204830	ReturnStatement	return flags ;	201:1:6960:6972	5204701	9	True				
ANR	5204831	Identifier	flags		5204701	0					
ANR	5204832	ReturnType	R_API int		5204701	1					
ANR	5204833	Identifier	r_regex_flags		5204701	2					
ANR	5204834	ParameterList	const char * f		5204701	3					
ANR	5204835	Parameter	const char * f	175:24:6518:6530	5204701	0	True				
ANR	5204836	ParameterType	const char *		5204701	0					
ANR	5204837	Identifier	f		5204701	1					
ANR	5204838	CFGEntryNode	ENTRY		5204701		True				
ANR	5204839	CFGExitNode	EXIT		5204701		True				
ANR	5204840	Symbol	* f		5204701						
ANR	5204841	Symbol	R_REGEX_NOSUB		5204701						
ANR	5204842	Symbol	R_REGEX_EXTENDED		5204701						
ANR	5204843	Symbol	R_REGEX_ICASE		5204701						
ANR	5204844	Symbol	f		5204701						
ANR	5204845	Symbol	R_REGEX_NOSPEC		5204701						
ANR	5204846	Symbol	flags		5204701						
ANR	5204847	Symbol	strchr		5204701						
ANR	5204848	Symbol	R_REGEX_PEND		5204701						
ANR	5204849	Symbol	R_REGEX_DUMP		5204701						
ANR	5204850	Symbol	R_REGEX_NEWLINE		5204701						
ANR	5204851	Function	r_regex_fini	204:0:6977:7404							
ANR	5204852	FunctionDef	r_regex_fini (RRegex * preg)		5204851	0					
ANR	5204853	CompoundStatement		204:38:7015:7404	5204851	0					
ANR	5204854	IdentifierDeclStatement	struct re_guts * g ;	205:1:7018:7035	5204851	0	True				
ANR	5204855	IdentifierDecl	* g		5204851	0					
ANR	5204856	IdentifierDeclType	struct re_guts *		5204851	0					
ANR	5204857	Identifier	g		5204851	1					
ANR	5204858	IfStatement	if ( ! preg )		5204851	1					
ANR	5204859	Condition	! preg	206:5:7042:7046	5204851	0	True				
ANR	5204860	UnaryOperationExpression	! preg		5204851	0					
ANR	5204861	UnaryOperator	!		5204851	0					
ANR	5204862	Identifier	preg		5204851	1					
ANR	5204863	CompoundStatement		3:12:33:33	5204851	1					
ANR	5204864	ReturnStatement	return ;	207:2:7053:7059	5204851	0	True				
ANR	5204865	IfStatement	if ( preg -> re_magic != MAGIC1 )		5204851	2					
ANR	5204866	Condition	preg -> re_magic != MAGIC1	209:5:7069:7092	5204851	0	True				
ANR	5204867	EqualityExpression	preg -> re_magic != MAGIC1		5204851	0		!=			
ANR	5204868	PtrMemberAccess	preg -> re_magic		5204851	0					
ANR	5204869	Identifier	preg		5204851	0					
ANR	5204870	Identifier	re_magic		5204851	1					
ANR	5204871	Identifier	MAGIC1		5204851	1					
ANR	5204872	CompoundStatement		6:31:79:79	5204851	1					
ANR	5204873	ReturnStatement	return ;	210:2:7110:7116	5204851	0	True				
ANR	5204874	ExpressionStatement	g = preg -> re_g	213:1:7158:7172	5204851	3	True				
ANR	5204875	AssignmentExpression	g = preg -> re_g		5204851	0		=			
ANR	5204876	Identifier	g		5204851	0					
ANR	5204877	PtrMemberAccess	preg -> re_g		5204851	1					
ANR	5204878	Identifier	preg		5204851	0					
ANR	5204879	Identifier	re_g		5204851	1					
ANR	5204880	IfStatement	if ( ! g || g -> magic != MAGIC2 )		5204851	4					
ANR	5204881	Condition	! g || g -> magic != MAGIC2	214:5:7179:7202	5204851	0	True				
ANR	5204882	OrExpression	! g || g -> magic != MAGIC2		5204851	0		||			
ANR	5204883	UnaryOperationExpression	! g		5204851	0					
ANR	5204884	UnaryOperator	!		5204851	0					
ANR	5204885	Identifier	g		5204851	1					
ANR	5204886	EqualityExpression	g -> magic != MAGIC2		5204851	1		!=			
ANR	5204887	PtrMemberAccess	g -> magic		5204851	0					
ANR	5204888	Identifier	g		5204851	0					
ANR	5204889	Identifier	magic		5204851	1					
ANR	5204890	Identifier	MAGIC2		5204851	1					
ANR	5204891	CompoundStatement		11:31:189:189	5204851	1					
ANR	5204892	ReturnStatement	return ;	215:2:7226:7232	5204851	0	True				
ANR	5204893	ExpressionStatement	preg -> re_magic = 0	217:1:7238:7256	5204851	5	True				
ANR	5204894	AssignmentExpression	preg -> re_magic = 0		5204851	0		=			
ANR	5204895	PtrMemberAccess	preg -> re_magic		5204851	0					
ANR	5204896	Identifier	preg		5204851	0					
ANR	5204897	Identifier	re_magic		5204851	1					
ANR	5204898	PrimaryExpression	0		5204851	1					
ANR	5204899	ExpressionStatement	g -> magic = 0	218:1:7282:7294	5204851	6	True				
ANR	5204900	AssignmentExpression	g -> magic = 0		5204851	0		=			
ANR	5204901	PtrMemberAccess	g -> magic		5204851	0					
ANR	5204902	Identifier	g		5204851	0					
ANR	5204903	Identifier	magic		5204851	1					
ANR	5204904	PrimaryExpression	0		5204851	1					
ANR	5204905	ExpressionStatement	free ( g -> strip )	220:1:7322:7337	5204851	7	True				
ANR	5204906	CallExpression	free ( g -> strip )		5204851	0					
ANR	5204907	Callee	free		5204851	0					
ANR	5204908	Identifier	free		5204851	0					
ANR	5204909	ArgumentList	g -> strip		5204851	1					
ANR	5204910	Argument	g -> strip		5204851	0					
ANR	5204911	PtrMemberAccess	g -> strip		5204851	0					
ANR	5204912	Identifier	g		5204851	0					
ANR	5204913	Identifier	strip		5204851	1					
ANR	5204914	ExpressionStatement	free ( g -> sets )	221:1:7340:7354	5204851	8	True				
ANR	5204915	CallExpression	free ( g -> sets )		5204851	0					
ANR	5204916	Callee	free		5204851	0					
ANR	5204917	Identifier	free		5204851	0					
ANR	5204918	ArgumentList	g -> sets		5204851	1					
ANR	5204919	Argument	g -> sets		5204851	0					
ANR	5204920	PtrMemberAccess	g -> sets		5204851	0					
ANR	5204921	Identifier	g		5204851	0					
ANR	5204922	Identifier	sets		5204851	1					
ANR	5204923	ExpressionStatement	free ( g -> setbits )	222:1:7357:7374	5204851	9	True				
ANR	5204924	CallExpression	free ( g -> setbits )		5204851	0					
ANR	5204925	Callee	free		5204851	0					
ANR	5204926	Identifier	free		5204851	0					
ANR	5204927	ArgumentList	g -> setbits		5204851	1					
ANR	5204928	Argument	g -> setbits		5204851	0					
ANR	5204929	PtrMemberAccess	g -> setbits		5204851	0					
ANR	5204930	Identifier	g		5204851	0					
ANR	5204931	Identifier	setbits		5204851	1					
ANR	5204932	ExpressionStatement	free ( g -> must )	223:1:7377:7391	5204851	10	True				
ANR	5204933	CallExpression	free ( g -> must )		5204851	0					
ANR	5204934	Callee	free		5204851	0					
ANR	5204935	Identifier	free		5204851	0					
ANR	5204936	ArgumentList	g -> must		5204851	1					
ANR	5204937	Argument	g -> must		5204851	0					
ANR	5204938	PtrMemberAccess	g -> must		5204851	0					
ANR	5204939	Identifier	g		5204851	0					
ANR	5204940	Identifier	must		5204851	1					
ANR	5204941	ExpressionStatement	free ( g )	224:1:7394:7402	5204851	11	True				
ANR	5204942	CallExpression	free ( g )		5204851	0					
ANR	5204943	Callee	free		5204851	0					
ANR	5204944	Identifier	free		5204851	0					
ANR	5204945	ArgumentList	g		5204851	1					
ANR	5204946	Argument	g		5204851	0					
ANR	5204947	Identifier	g		5204851	0					
ANR	5204948	ReturnType	R_API void		5204851	1					
ANR	5204949	Identifier	r_regex_fini		5204851	2					
ANR	5204950	ParameterList	RRegex * preg		5204851	3					
ANR	5204951	Parameter	RRegex * preg	204:24:7001:7012	5204851	0	True				
ANR	5204952	ParameterType	RRegex *		5204851	0					
ANR	5204953	Identifier	preg		5204851	1					
ANR	5204954	CFGEntryNode	ENTRY		5204851		True				
ANR	5204955	CFGExitNode	EXIT		5204851		True				
ANR	5204956	Symbol	g		5204851						
ANR	5204957	Symbol	g -> sets		5204851						
ANR	5204958	Symbol	g -> magic		5204851						
ANR	5204959	Symbol	preg		5204851						
ANR	5204960	Symbol	* g		5204851						
ANR	5204961	Symbol	g -> strip		5204851						
ANR	5204962	Symbol	g -> must		5204851						
ANR	5204963	Symbol	preg -> re_magic		5204851						
ANR	5204964	Symbol	* preg		5204851						
ANR	5204965	Symbol	g -> setbits		5204851						
ANR	5204966	Symbol	preg -> re_g		5204851						
ANR	5204967	Symbol	MAGIC1		5204851						
ANR	5204968	Symbol	MAGIC2		5204851						
ANR	5204969	Function	r_regex_free	227:0:7407:7483							
ANR	5204970	FunctionDef	r_regex_free (RRegex * preg)		5204969	0					
ANR	5204971	CompoundStatement		227:38:7445:7483	5204969	0					
ANR	5204972	ExpressionStatement	r_regex_fini ( preg )	228:1:7448:7467	5204969	0	True				
ANR	5204973	CallExpression	r_regex_fini ( preg )		5204969	0					
ANR	5204974	Callee	r_regex_fini		5204969	0					
ANR	5204975	Identifier	r_regex_fini		5204969	0					
ANR	5204976	ArgumentList	preg		5204969	1					
ANR	5204977	Argument	preg		5204969	0					
ANR	5204978	Identifier	preg		5204969	0					
ANR	5204979	ExpressionStatement	free ( preg )	229:1:7470:7481	5204969	1	True				
ANR	5204980	CallExpression	free ( preg )		5204969	0					
ANR	5204981	Callee	free		5204969	0					
ANR	5204982	Identifier	free		5204969	0					
ANR	5204983	ArgumentList	preg		5204969	1					
ANR	5204984	Argument	preg		5204969	0					
ANR	5204985	Identifier	preg		5204969	0					
ANR	5204986	ReturnType	R_API void		5204969	1					
ANR	5204987	Identifier	r_regex_free		5204969	2					
ANR	5204988	ParameterList	RRegex * preg		5204969	3					
ANR	5204989	Parameter	RRegex * preg	227:24:7431:7442	5204969	0	True				
ANR	5204990	ParameterType	RRegex *		5204969	0					
ANR	5204991	Identifier	preg		5204969	1					
ANR	5204992	CFGEntryNode	ENTRY		5204969		True				
ANR	5204993	CFGExitNode	EXIT		5204969		True				
ANR	5204994	Symbol	preg		5204969						
ANR	5204995	Function	r_regex_comp	236:0:7585:10392							
ANR	5204996	FunctionDef	"r_regex_comp (RRegex * preg , const char * pattern , int cflags)"		5204995	0					
ANR	5204997	CompoundStatement		236:70:7655:10392	5204995	0					
ANR	5204998	IdentifierDeclStatement	struct parse pa ;	237:1:7658:7673	5204995	0	True				
ANR	5204999	IdentifierDecl	pa		5204995	0					
ANR	5205000	IdentifierDeclType	struct parse		5204995	0					
ANR	5205001	Identifier	pa		5204995	1					
ANR	5205002	IdentifierDeclStatement	struct re_guts * g ;	238:1:7676:7693	5204995	1	True				
ANR	5205003	IdentifierDecl	* g		5204995	0					
ANR	5205004	IdentifierDeclType	struct re_guts *		5204995	0					
ANR	5205005	Identifier	g		5204995	1					
ANR	5205006	IdentifierDeclStatement	struct parse * p = & pa ;	239:1:7696:7717	5204995	2	True				
ANR	5205007	IdentifierDecl	* p = & pa		5204995	0					
ANR	5205008	IdentifierDeclType	struct parse *		5204995	0					
ANR	5205009	Identifier	p		5204995	1					
ANR	5205010	AssignmentExpression	* p = & pa		5204995	2		=			
ANR	5205011	Identifier	p		5204995	0					
ANR	5205012	UnaryOperationExpression	& pa		5204995	1					
ANR	5205013	UnaryOperator	&		5204995	0					
ANR	5205014	Identifier	pa		5204995	1					
ANR	5205015	IdentifierDeclStatement	int i ;	240:1:7720:7725	5204995	3	True				
ANR	5205016	IdentifierDecl	i		5204995	0					
ANR	5205017	IdentifierDeclType	int		5204995	0					
ANR	5205018	Identifier	i		5204995	1					
ANR	5205019	IdentifierDeclStatement	size_t len ;	241:1:7728:7738	5204995	4	True				
ANR	5205020	IdentifierDecl	len		5204995	0					
ANR	5205021	IdentifierDeclType	size_t		5204995	0					
ANR	5205022	Identifier	len		5204995	1					
ANR	5205023	Statement	define	243:2:7757:7762	5204995	5	True				
ANR	5205024	Statement	GOODFLAGS	243:9:7764:7772	5204995	6	True				
ANR	5205025	Statement	(	243:18:7773:7773	5204995	7	True				
ANR	5205026	Statement	f	243:19:7774:7774	5204995	8	True				
ANR	5205027	Statement	)	243:20:7775:7775	5204995	9	True				
ANR	5205028	Statement	(	243:22:7777:7777	5204995	10	True				
ANR	5205029	Statement	f	243:23:7778:7778	5204995	11	True				
ANR	5205030	Statement	)	243:24:7779:7779	5204995	12	True				
ANR	5205031	ExpressionStatement	cflags = GOODFLAGS ( cflags )	247:1:7837:7864	5204995	13	True				
ANR	5205032	AssignmentExpression	cflags = GOODFLAGS ( cflags )		5204995	0		=			
ANR	5205033	Identifier	cflags		5204995	0					
ANR	5205034	CallExpression	GOODFLAGS ( cflags )		5204995	1					
ANR	5205035	Callee	GOODFLAGS		5204995	0					
ANR	5205036	Identifier	GOODFLAGS		5204995	0					
ANR	5205037	ArgumentList	cflags		5204995	1					
ANR	5205038	Argument	cflags		5204995	0					
ANR	5205039	Identifier	cflags		5204995	0					
ANR	5205040	IfStatement	if ( ! preg || ( ( cflags & R_REGEX_EXTENDED ) && ( cflags & R_REGEX_NOSPEC ) ) )		5204995	14					
ANR	5205041	Condition	! preg || ( ( cflags & R_REGEX_EXTENDED ) && ( cflags & R_REGEX_NOSPEC ) )	248:5:7871:7937	5204995	0	True				
ANR	5205042	OrExpression	! preg || ( ( cflags & R_REGEX_EXTENDED ) && ( cflags & R_REGEX_NOSPEC ) )		5204995	0		||			
ANR	5205043	UnaryOperationExpression	! preg		5204995	0					
ANR	5205044	UnaryOperator	!		5204995	0					
ANR	5205045	Identifier	preg		5204995	1					
ANR	5205046	AndExpression	( cflags & R_REGEX_EXTENDED ) && ( cflags & R_REGEX_NOSPEC )		5204995	1		&&			
ANR	5205047	BitAndExpression	cflags & R_REGEX_EXTENDED		5204995	0		&			
ANR	5205048	Identifier	cflags		5204995	0					
ANR	5205049	Identifier	R_REGEX_EXTENDED		5204995	1					
ANR	5205050	BitAndExpression	cflags & R_REGEX_NOSPEC		5204995	1		&			
ANR	5205051	Identifier	cflags		5204995	0					
ANR	5205052	Identifier	R_REGEX_NOSPEC		5204995	1					
ANR	5205053	CompoundStatement		13:74:284:284	5204995	1					
ANR	5205054	ReturnStatement	return R_REGEX_INVARG ;	249:2:7944:7965	5204995	0	True				
ANR	5205055	Identifier	R_REGEX_INVARG		5204995	0					
ANR	5205056	IfStatement	if ( cflags & R_REGEX_PEND )		5204995	15					
ANR	5205057	Condition	cflags & R_REGEX_PEND	251:5:7975:7995	5204995	0	True				
ANR	5205058	BitAndExpression	cflags & R_REGEX_PEND		5204995	0		&			
ANR	5205059	Identifier	cflags		5204995	0					
ANR	5205060	Identifier	R_REGEX_PEND		5204995	1					
ANR	5205061	CompoundStatement		16:28:342:342	5204995	1					
ANR	5205062	IfStatement	if ( preg -> re_endp < pattern )		5204995	0					
ANR	5205063	Condition	preg -> re_endp < pattern	252:6:8006:8028	5204995	0	True				
ANR	5205064	RelationalExpression	preg -> re_endp < pattern		5204995	0		<			
ANR	5205065	PtrMemberAccess	preg -> re_endp		5204995	0					
ANR	5205066	Identifier	preg		5204995	0					
ANR	5205067	Identifier	re_endp		5204995	1					
ANR	5205068	Identifier	pattern		5204995	1					
ANR	5205069	CompoundStatement		17:31:375:375	5204995	1					
ANR	5205070	ReturnStatement	return R_REGEX_INVARG ;	253:3:8036:8057	5204995	0	True				
ANR	5205071	Identifier	R_REGEX_INVARG		5204995	0					
ANR	5205072	ExpressionStatement	len = preg -> re_endp - pattern	255:2:8065:8094	5204995	1	True				
ANR	5205073	AssignmentExpression	len = preg -> re_endp - pattern		5204995	0		=			
ANR	5205074	Identifier	len		5204995	0					
ANR	5205075	AdditiveExpression	preg -> re_endp - pattern		5204995	1		-			
ANR	5205076	PtrMemberAccess	preg -> re_endp		5204995	0					
ANR	5205077	Identifier	preg		5204995	0					
ANR	5205078	Identifier	re_endp		5204995	1					
ANR	5205079	Identifier	pattern		5204995	1					
ANR	5205080	ElseStatement	else		5204995	0					
ANR	5205081	CompoundStatement		21:8:448:448	5204995	0					
ANR	5205082	ExpressionStatement	len = strlen ( ( char * ) pattern )	257:2:8108:8138	5204995	0	True				
ANR	5205083	AssignmentExpression	len = strlen ( ( char * ) pattern )		5204995	0		=			
ANR	5205084	Identifier	len		5204995	0					
ANR	5205085	CallExpression	strlen ( ( char * ) pattern )		5204995	1					
ANR	5205086	Callee	strlen		5204995	0					
ANR	5205087	Identifier	strlen		5204995	0					
ANR	5205088	ArgumentList	( char * ) pattern		5204995	1					
ANR	5205089	Argument	( char * ) pattern		5204995	0					
ANR	5205090	CastExpression	( char * ) pattern		5204995	0					
ANR	5205091	CastTarget	char *		5204995	0					
ANR	5205092	Identifier	pattern		5204995	1					
ANR	5205093	ExpressionStatement	"g = ( struct re_guts * ) calloc ( sizeof ( struct re_guts ) + ( NC - 1 ) , sizeof ( cat_t ) )"	260:1:8200:8281	5204995	16	True				
ANR	5205094	AssignmentExpression	"g = ( struct re_guts * ) calloc ( sizeof ( struct re_guts ) + ( NC - 1 ) , sizeof ( cat_t ) )"		5204995	0		=			
ANR	5205095	Identifier	g		5204995	0					
ANR	5205096	CastExpression	"( struct re_guts * ) calloc ( sizeof ( struct re_guts ) + ( NC - 1 ) , sizeof ( cat_t ) )"		5204995	1					
ANR	5205097	CastTarget	struct re_guts *		5204995	0					
ANR	5205098	CallExpression	"calloc ( sizeof ( struct re_guts ) + ( NC - 1 ) , sizeof ( cat_t ) )"		5204995	1					
ANR	5205099	Callee	calloc		5204995	0					
ANR	5205100	Identifier	calloc		5204995	0					
ANR	5205101	ArgumentList	sizeof ( struct re_guts ) + ( NC - 1 )		5204995	1					
ANR	5205102	Argument	sizeof ( struct re_guts ) + ( NC - 1 )		5204995	0					
ANR	5205103	AdditiveExpression	sizeof ( struct re_guts ) + ( NC - 1 )		5204995	0		+			
ANR	5205104	SizeofExpression	sizeof ( struct re_guts )		5204995	0					
ANR	5205105	Sizeof	sizeof		5204995	0					
ANR	5205106	SizeofOperand	struct re_guts		5204995	1					
ANR	5205107	AdditiveExpression	NC - 1		5204995	1		-			
ANR	5205108	Identifier	NC		5204995	0					
ANR	5205109	PrimaryExpression	1		5204995	1					
ANR	5205110	Argument	sizeof ( cat_t )		5204995	1					
ANR	5205111	SizeofExpression	sizeof ( cat_t )		5204995	0					
ANR	5205112	Sizeof	sizeof		5204995	0					
ANR	5205113	SizeofOperand	cat_t		5204995	1					
ANR	5205114	IfStatement	if ( ! g )		5204995	17					
ANR	5205115	Condition	! g	261:5:8288:8289	5204995	0	True				
ANR	5205116	UnaryOperationExpression	! g		5204995	0					
ANR	5205117	UnaryOperator	!		5204995	0					
ANR	5205118	Identifier	g		5204995	1					
ANR	5205119	CompoundStatement		26:9:636:636	5204995	1					
ANR	5205120	ReturnStatement	return R_REGEX_ESPACE ;	262:2:8296:8317	5204995	0	True				
ANR	5205121	Identifier	R_REGEX_ESPACE		5204995	0					
ANR	5205122	IdentifierDeclStatement	size_t maxlen = ( ( size_t ) - 1 >> 1 ) / sizeof ( sop ) * 2 / 3 ;	273:1:8667:8725	5204995	18	True				
ANR	5205123	IdentifierDecl	maxlen = ( ( size_t ) - 1 >> 1 ) / sizeof ( sop ) * 2 / 3		5204995	0					
ANR	5205124	IdentifierDeclType	size_t		5204995	0					
ANR	5205125	Identifier	maxlen		5204995	1					
ANR	5205126	AssignmentExpression	maxlen = ( ( size_t ) - 1 >> 1 ) / sizeof ( sop ) * 2 / 3		5204995	2		=			
ANR	5205127	Identifier	maxlen		5204995	0					
ANR	5205128	MultiplicativeExpression	( ( size_t ) - 1 >> 1 ) / sizeof ( sop ) * 2 / 3		5204995	1		/			
ANR	5205129	ShiftExpression	( size_t ) - 1 >> 1		5204995	0		>>			
ANR	5205130	CastExpression	( size_t ) - 1		5204995	0					
ANR	5205131	CastTarget	size_t		5204995	0					
ANR	5205132	UnaryOperationExpression	- 1		5204995	1					
ANR	5205133	UnaryOperator	-		5204995	0					
ANR	5205134	PrimaryExpression	1		5204995	1					
ANR	5205135	PrimaryExpression	1		5204995	1					
ANR	5205136	MultiplicativeExpression	sizeof ( sop ) * 2 / 3		5204995	1		*			
ANR	5205137	SizeofExpression	sizeof ( sop )		5204995	0					
ANR	5205138	Sizeof	sizeof		5204995	0					
ANR	5205139	SizeofOperand	sop		5204995	1					
ANR	5205140	MultiplicativeExpression	2 / 3		5204995	1		/			
ANR	5205141	PrimaryExpression	2		5204995	0					
ANR	5205142	PrimaryExpression	3		5204995	1					
ANR	5205143	IfStatement	if ( len >= maxlen )		5204995	19					
ANR	5205144	Condition	len >= maxlen	274:5:8732:8744	5204995	0	True				
ANR	5205145	RelationalExpression	len >= maxlen		5204995	0		>=			
ANR	5205146	Identifier	len		5204995	0					
ANR	5205147	Identifier	maxlen		5204995	1					
ANR	5205148	CompoundStatement		39:20:1091:1091	5204995	1					
ANR	5205149	ExpressionStatement	free ( g )	275:2:8751:8759	5204995	0	True				
ANR	5205150	CallExpression	free ( g )		5204995	0					
ANR	5205151	Callee	free		5204995	0					
ANR	5205152	Identifier	free		5204995	0					
ANR	5205153	ArgumentList	g		5204995	1					
ANR	5205154	Argument	g		5204995	0					
ANR	5205155	Identifier	g		5204995	0					
ANR	5205156	ReturnStatement	return R_REGEX_ESPACE ;	276:2:8763:8784	5204995	1	True				
ANR	5205157	Identifier	R_REGEX_ESPACE		5204995	0					
ANR	5205158	ExpressionStatement	preg -> re_flags = cflags	278:1:8790:8813	5204995	20	True				
ANR	5205159	AssignmentExpression	preg -> re_flags = cflags		5204995	0		=			
ANR	5205160	PtrMemberAccess	preg -> re_flags		5204995	0					
ANR	5205161	Identifier	preg		5204995	0					
ANR	5205162	Identifier	re_flags		5204995	1					
ANR	5205163	Identifier	cflags		5204995	1					
ANR	5205164	ExpressionStatement	p -> ssize = len / ( size_t ) 2 * ( size_t ) 3 + ( size_t ) 1	279:1:8816:8866	5204995	21	True				
ANR	5205165	AssignmentExpression	p -> ssize = len / ( size_t ) 2 * ( size_t ) 3 + ( size_t ) 1		5204995	0		=			
ANR	5205166	PtrMemberAccess	p -> ssize		5204995	0					
ANR	5205167	Identifier	p		5204995	0					
ANR	5205168	Identifier	ssize		5204995	1					
ANR	5205169	AdditiveExpression	len / ( size_t ) 2 * ( size_t ) 3 + ( size_t ) 1		5204995	1		+			
ANR	5205170	MultiplicativeExpression	len / ( size_t ) 2 * ( size_t ) 3		5204995	0		/			
ANR	5205171	Identifier	len		5204995	0					
ANR	5205172	MultiplicativeExpression	( size_t ) 2 * ( size_t ) 3		5204995	1		*			
ANR	5205173	CastExpression	( size_t ) 2		5204995	0					
ANR	5205174	CastTarget	size_t		5204995	0					
ANR	5205175	PrimaryExpression	2		5204995	1					
ANR	5205176	CastExpression	( size_t ) 3		5204995	1					
ANR	5205177	CastTarget	size_t		5204995	0					
ANR	5205178	PrimaryExpression	3		5204995	1					
ANR	5205179	CastExpression	( size_t ) 1		5204995	1					
ANR	5205180	CastTarget	size_t		5204995	0					
ANR	5205181	PrimaryExpression	1		5204995	1					
ANR	5205182	IfStatement	if ( p -> ssize < len )		5204995	22					
ANR	5205183	Condition	p -> ssize < len	280:5:8883:8896	5204995	0	True				
ANR	5205184	RelationalExpression	p -> ssize < len		5204995	0		<			
ANR	5205185	PtrMemberAccess	p -> ssize		5204995	0					
ANR	5205186	Identifier	p		5204995	0					
ANR	5205187	Identifier	ssize		5204995	1					
ANR	5205188	Identifier	len		5204995	1					
ANR	5205189	CompoundStatement		45:21:1243:1243	5204995	1					
ANR	5205190	ExpressionStatement	free ( g )	281:2:8903:8911	5204995	0	True				
ANR	5205191	CallExpression	free ( g )		5204995	0					
ANR	5205192	Callee	free		5204995	0					
ANR	5205193	Identifier	free		5204995	0					
ANR	5205194	ArgumentList	g		5204995	1					
ANR	5205195	Argument	g		5204995	0					
ANR	5205196	Identifier	g		5204995	0					
ANR	5205197	ReturnStatement	return R_REGEX_ESPACE ;	282:2:8915:8936	5204995	1	True				
ANR	5205198	Identifier	R_REGEX_ESPACE		5204995	0					
ANR	5205199	ExpressionStatement	"p -> strip = ( sop * ) calloc ( p -> ssize , sizeof ( sop ) )"	285:1:8943:8992	5204995	23	True				
ANR	5205200	AssignmentExpression	"p -> strip = ( sop * ) calloc ( p -> ssize , sizeof ( sop ) )"		5204995	0		=			
ANR	5205201	PtrMemberAccess	p -> strip		5204995	0					
ANR	5205202	Identifier	p		5204995	0					
ANR	5205203	Identifier	strip		5204995	1					
ANR	5205204	CastExpression	"( sop * ) calloc ( p -> ssize , sizeof ( sop ) )"		5204995	1					
ANR	5205205	CastTarget	sop *		5204995	0					
ANR	5205206	CallExpression	"calloc ( p -> ssize , sizeof ( sop ) )"		5204995	1					
ANR	5205207	Callee	calloc		5204995	0					
ANR	5205208	Identifier	calloc		5204995	0					
ANR	5205209	ArgumentList	p -> ssize		5204995	1					
ANR	5205210	Argument	p -> ssize		5204995	0					
ANR	5205211	PtrMemberAccess	p -> ssize		5204995	0					
ANR	5205212	Identifier	p		5204995	0					
ANR	5205213	Identifier	ssize		5204995	1					
ANR	5205214	Argument	sizeof ( sop )		5204995	1					
ANR	5205215	SizeofExpression	sizeof ( sop )		5204995	0					
ANR	5205216	Sizeof	sizeof		5204995	0					
ANR	5205217	SizeofOperand	sop		5204995	1					
ANR	5205218	IfStatement	if ( ! p -> strip )		5204995	24					
ANR	5205219	Condition	! p -> strip	286:5:8999:9007	5204995	0	True				
ANR	5205220	UnaryOperationExpression	! p -> strip		5204995	0					
ANR	5205221	UnaryOperator	!		5204995	0					
ANR	5205222	PtrMemberAccess	p -> strip		5204995	1					
ANR	5205223	Identifier	p		5204995	0					
ANR	5205224	Identifier	strip		5204995	1					
ANR	5205225	CompoundStatement		51:16:1354:1354	5204995	1					
ANR	5205226	ExpressionStatement	free ( g )	287:2:9014:9022	5204995	0	True				
ANR	5205227	CallExpression	free ( g )		5204995	0					
ANR	5205228	Callee	free		5204995	0					
ANR	5205229	Identifier	free		5204995	0					
ANR	5205230	ArgumentList	g		5204995	1					
ANR	5205231	Argument	g		5204995	0					
ANR	5205232	Identifier	g		5204995	0					
ANR	5205233	ReturnStatement	return R_REGEX_ESPACE ;	288:2:9026:9047	5204995	1	True				
ANR	5205234	Identifier	R_REGEX_ESPACE		5204995	0					
ANR	5205235	ExpressionStatement	p -> slen = 0	290:1:9053:9064	5204995	25	True				
ANR	5205236	AssignmentExpression	p -> slen = 0		5204995	0		=			
ANR	5205237	PtrMemberAccess	p -> slen		5204995	0					
ANR	5205238	Identifier	p		5204995	0					
ANR	5205239	Identifier	slen		5204995	1					
ANR	5205240	PrimaryExpression	0		5204995	1					
ANR	5205241	IfStatement	if ( ! p -> strip )		5204995	26					
ANR	5205242	Condition	! p -> strip	291:5:9071:9079	5204995	0	True				
ANR	5205243	UnaryOperationExpression	! p -> strip		5204995	0					
ANR	5205244	UnaryOperator	!		5204995	0					
ANR	5205245	PtrMemberAccess	p -> strip		5204995	1					
ANR	5205246	Identifier	p		5204995	0					
ANR	5205247	Identifier	strip		5204995	1					
ANR	5205248	CompoundStatement		56:16:1426:1426	5204995	1					
ANR	5205249	ExpressionStatement	free ( g )	292:2:9086:9094	5204995	0	True				
ANR	5205250	CallExpression	free ( g )		5204995	0					
ANR	5205251	Callee	free		5204995	0					
ANR	5205252	Identifier	free		5204995	0					
ANR	5205253	ArgumentList	g		5204995	1					
ANR	5205254	Argument	g		5204995	0					
ANR	5205255	Identifier	g		5204995	0					
ANR	5205256	ReturnStatement	return R_REGEX_ESPACE ;	293:2:9098:9119	5204995	1	True				
ANR	5205257	Identifier	R_REGEX_ESPACE		5204995	0					
ANR	5205258	ExpressionStatement	p -> g = g	297:1:9147:9155	5204995	27	True				
ANR	5205259	AssignmentExpression	p -> g = g		5204995	0		=			
ANR	5205260	PtrMemberAccess	p -> g		5204995	0					
ANR	5205261	Identifier	p		5204995	0					
ANR	5205262	Identifier	g		5204995	1					
ANR	5205263	Identifier	g		5204995	1					
ANR	5205264	ExpressionStatement	p -> next = ( char * ) pattern	298:1:9158:9183	5204995	28	True				
ANR	5205265	AssignmentExpression	p -> next = ( char * ) pattern		5204995	0		=			
ANR	5205266	PtrMemberAccess	p -> next		5204995	0					
ANR	5205267	Identifier	p		5204995	0					
ANR	5205268	Identifier	next		5204995	1					
ANR	5205269	CastExpression	( char * ) pattern		5204995	1					
ANR	5205270	CastTarget	char *		5204995	0					
ANR	5205271	Identifier	pattern		5204995	1					
ANR	5205272	ExpressionStatement	p -> end = p -> next + len	299:1:9225:9247	5204995	29	True				
ANR	5205273	AssignmentExpression	p -> end = p -> next + len		5204995	0		=			
ANR	5205274	PtrMemberAccess	p -> end		5204995	0					
ANR	5205275	Identifier	p		5204995	0					
ANR	5205276	Identifier	end		5204995	1					
ANR	5205277	AdditiveExpression	p -> next + len		5204995	1		+			
ANR	5205278	PtrMemberAccess	p -> next		5204995	0					
ANR	5205279	Identifier	p		5204995	0					
ANR	5205280	Identifier	next		5204995	1					
ANR	5205281	Identifier	len		5204995	1					
ANR	5205282	ExpressionStatement	p -> error = 0	300:1:9250:9262	5204995	30	True				
ANR	5205283	AssignmentExpression	p -> error = 0		5204995	0		=			
ANR	5205284	PtrMemberAccess	p -> error		5204995	0					
ANR	5205285	Identifier	p		5204995	0					
ANR	5205286	Identifier	error		5204995	1					
ANR	5205287	PrimaryExpression	0		5204995	1					
ANR	5205288	ExpressionStatement	p -> ncsalloc = 0	301:1:9265:9280	5204995	31	True				
ANR	5205289	AssignmentExpression	p -> ncsalloc = 0		5204995	0		=			
ANR	5205290	PtrMemberAccess	p -> ncsalloc		5204995	0					
ANR	5205291	Identifier	p		5204995	0					
ANR	5205292	Identifier	ncsalloc		5204995	1					
ANR	5205293	PrimaryExpression	0		5204995	1					
ANR	5205294	ForStatement	for ( i = 0 ; i < NPAREN ; i ++ )		5204995	32					
ANR	5205295	ForInit	i = 0 ;	302:6:9288:9293	5204995	0	True				
ANR	5205296	AssignmentExpression	i = 0		5204995	0		=			
ANR	5205297	Identifier	i		5204995	0					
ANR	5205298	PrimaryExpression	0		5204995	1					
ANR	5205299	Condition	i < NPAREN	302:13:9295:9304	5204995	1	True				
ANR	5205300	RelationalExpression	i < NPAREN		5204995	0		<			
ANR	5205301	Identifier	i		5204995	0					
ANR	5205302	Identifier	NPAREN		5204995	1					
ANR	5205303	PostIncDecOperationExpression	i ++	302:25:9307:9309	5204995	2	True				
ANR	5205304	Identifier	i		5204995	0					
ANR	5205305	IncDec	++		5204995	1					
ANR	5205306	CompoundStatement		67:30:1656:1656	5204995	3					
ANR	5205307	ExpressionStatement	p -> pbegin [ i ] = 0	303:2:9316:9332	5204995	0	True				
ANR	5205308	AssignmentExpression	p -> pbegin [ i ] = 0		5204995	0		=			
ANR	5205309	ArrayIndexing	p -> pbegin [ i ]		5204995	0					
ANR	5205310	PtrMemberAccess	p -> pbegin		5204995	0					
ANR	5205311	Identifier	p		5204995	0					
ANR	5205312	Identifier	pbegin		5204995	1					
ANR	5205313	Identifier	i		5204995	1					
ANR	5205314	PrimaryExpression	0		5204995	1					
ANR	5205315	ExpressionStatement	p -> pend [ i ] = 0	304:2:9336:9350	5204995	1	True				
ANR	5205316	AssignmentExpression	p -> pend [ i ] = 0		5204995	0		=			
ANR	5205317	ArrayIndexing	p -> pend [ i ]		5204995	0					
ANR	5205318	PtrMemberAccess	p -> pend		5204995	0					
ANR	5205319	Identifier	p		5204995	0					
ANR	5205320	Identifier	pend		5204995	1					
ANR	5205321	Identifier	i		5204995	1					
ANR	5205322	PrimaryExpression	0		5204995	1					
ANR	5205323	ExpressionStatement	g -> csetsize = NC	306:1:9356:9372	5204995	33	True				
ANR	5205324	AssignmentExpression	g -> csetsize = NC		5204995	0		=			
ANR	5205325	PtrMemberAccess	g -> csetsize		5204995	0					
ANR	5205326	Identifier	g		5204995	0					
ANR	5205327	Identifier	csetsize		5204995	1					
ANR	5205328	Identifier	NC		5204995	1					
ANR	5205329	ExpressionStatement	g -> sets = NULL	307:1:9375:9389	5204995	34	True				
ANR	5205330	AssignmentExpression	g -> sets = NULL		5204995	0		=			
ANR	5205331	PtrMemberAccess	g -> sets		5204995	0					
ANR	5205332	Identifier	g		5204995	0					
ANR	5205333	Identifier	sets		5204995	1					
ANR	5205334	Identifier	NULL		5204995	1					
ANR	5205335	ExpressionStatement	g -> setbits = NULL	308:1:9392:9409	5204995	35	True				
ANR	5205336	AssignmentExpression	g -> setbits = NULL		5204995	0		=			
ANR	5205337	PtrMemberAccess	g -> setbits		5204995	0					
ANR	5205338	Identifier	g		5204995	0					
ANR	5205339	Identifier	setbits		5204995	1					
ANR	5205340	Identifier	NULL		5204995	1					
ANR	5205341	ExpressionStatement	g -> ncsets = 0	309:1:9412:9425	5204995	36	True				
ANR	5205342	AssignmentExpression	g -> ncsets = 0		5204995	0		=			
ANR	5205343	PtrMemberAccess	g -> ncsets		5204995	0					
ANR	5205344	Identifier	g		5204995	0					
ANR	5205345	Identifier	ncsets		5204995	1					
ANR	5205346	PrimaryExpression	0		5204995	1					
ANR	5205347	ExpressionStatement	g -> cflags = cflags	310:1:9428:9446	5204995	37	True				
ANR	5205348	AssignmentExpression	g -> cflags = cflags		5204995	0		=			
ANR	5205349	PtrMemberAccess	g -> cflags		5204995	0					
ANR	5205350	Identifier	g		5204995	0					
ANR	5205351	Identifier	cflags		5204995	1					
ANR	5205352	Identifier	cflags		5204995	1					
ANR	5205353	ExpressionStatement	g -> iflags = 0	311:1:9449:9462	5204995	38	True				
ANR	5205354	AssignmentExpression	g -> iflags = 0		5204995	0		=			
ANR	5205355	PtrMemberAccess	g -> iflags		5204995	0					
ANR	5205356	Identifier	g		5204995	0					
ANR	5205357	Identifier	iflags		5204995	1					
ANR	5205358	PrimaryExpression	0		5204995	1					
ANR	5205359	ExpressionStatement	g -> nbol = 0	312:1:9465:9476	5204995	39	True				
ANR	5205360	AssignmentExpression	g -> nbol = 0		5204995	0		=			
ANR	5205361	PtrMemberAccess	g -> nbol		5204995	0					
ANR	5205362	Identifier	g		5204995	0					
ANR	5205363	Identifier	nbol		5204995	1					
ANR	5205364	PrimaryExpression	0		5204995	1					
ANR	5205365	ExpressionStatement	g -> neol = 0	313:1:9479:9490	5204995	40	True				
ANR	5205366	AssignmentExpression	g -> neol = 0		5204995	0		=			
ANR	5205367	PtrMemberAccess	g -> neol		5204995	0					
ANR	5205368	Identifier	g		5204995	0					
ANR	5205369	Identifier	neol		5204995	1					
ANR	5205370	PrimaryExpression	0		5204995	1					
ANR	5205371	ExpressionStatement	g -> must = NULL	314:1:9493:9507	5204995	41	True				
ANR	5205372	AssignmentExpression	g -> must = NULL		5204995	0		=			
ANR	5205373	PtrMemberAccess	g -> must		5204995	0					
ANR	5205374	Identifier	g		5204995	0					
ANR	5205375	Identifier	must		5204995	1					
ANR	5205376	Identifier	NULL		5204995	1					
ANR	5205377	ExpressionStatement	g -> mlen = 0	315:1:9510:9521	5204995	42	True				
ANR	5205378	AssignmentExpression	g -> mlen = 0		5204995	0		=			
ANR	5205379	PtrMemberAccess	g -> mlen		5204995	0					
ANR	5205380	Identifier	g		5204995	0					
ANR	5205381	Identifier	mlen		5204995	1					
ANR	5205382	PrimaryExpression	0		5204995	1					
ANR	5205383	ExpressionStatement	g -> nsub = 0	316:1:9524:9535	5204995	43	True				
ANR	5205384	AssignmentExpression	g -> nsub = 0		5204995	0		=			
ANR	5205385	PtrMemberAccess	g -> nsub		5204995	0					
ANR	5205386	Identifier	g		5204995	0					
ANR	5205387	Identifier	nsub		5204995	1					
ANR	5205388	PrimaryExpression	0		5204995	1					
ANR	5205389	ExpressionStatement	g -> ncategories = 1	317:1:9538:9556	5204995	44	True				
ANR	5205390	AssignmentExpression	g -> ncategories = 1		5204995	0		=			
ANR	5205391	PtrMemberAccess	g -> ncategories		5204995	0					
ANR	5205392	Identifier	g		5204995	0					
ANR	5205393	Identifier	ncategories		5204995	1					
ANR	5205394	PrimaryExpression	1		5204995	1					
ANR	5205395	ExpressionStatement	g -> categories = & g -> catspace [ - ( CHAR_MIN ) ]	318:1:9597:9638	5204995	45	True				
ANR	5205396	AssignmentExpression	g -> categories = & g -> catspace [ - ( CHAR_MIN ) ]		5204995	0		=			
ANR	5205397	PtrMemberAccess	g -> categories		5204995	0					
ANR	5205398	Identifier	g		5204995	0					
ANR	5205399	Identifier	categories		5204995	1					
ANR	5205400	UnaryOperationExpression	& g -> catspace [ - ( CHAR_MIN ) ]		5204995	1					
ANR	5205401	UnaryOperator	&		5204995	0					
ANR	5205402	ArrayIndexing	g -> catspace [ - ( CHAR_MIN ) ]		5204995	1					
ANR	5205403	PtrMemberAccess	g -> catspace		5204995	0					
ANR	5205404	Identifier	g		5204995	0					
ANR	5205405	Identifier	catspace		5204995	1					
ANR	5205406	UnaryOperationExpression	- ( CHAR_MIN )		5204995	1					
ANR	5205407	UnaryOperator	-		5204995	0					
ANR	5205408	Identifier	CHAR_MIN		5204995	1					
ANR	5205409	ExpressionStatement	"( void ) memset ( ( char * ) g -> catspace , 0 , NC * sizeof ( cat_t ) )"	319:1:9648:9704	5204995	46	True				
ANR	5205410	CastExpression	"( void ) memset ( ( char * ) g -> catspace , 0 , NC * sizeof ( cat_t ) )"		5204995	0					
ANR	5205411	CastTarget	void		5204995	0					
ANR	5205412	CallExpression	"memset ( ( char * ) g -> catspace , 0 , NC * sizeof ( cat_t ) )"		5204995	1					
ANR	5205413	Callee	memset		5204995	0					
ANR	5205414	Identifier	memset		5204995	0					
ANR	5205415	ArgumentList	( char * ) g -> catspace		5204995	1					
ANR	5205416	Argument	( char * ) g -> catspace		5204995	0					
ANR	5205417	CastExpression	( char * ) g -> catspace		5204995	0					
ANR	5205418	CastTarget	char *		5204995	0					
ANR	5205419	PtrMemberAccess	g -> catspace		5204995	1					
ANR	5205420	Identifier	g		5204995	0					
ANR	5205421	Identifier	catspace		5204995	1					
ANR	5205422	Argument	0		5204995	1					
ANR	5205423	PrimaryExpression	0		5204995	0					
ANR	5205424	Argument	NC * sizeof ( cat_t )		5204995	2					
ANR	5205425	MultiplicativeExpression	NC * sizeof ( cat_t )		5204995	0		*			
ANR	5205426	Identifier	NC		5204995	0					
ANR	5205427	SizeofExpression	sizeof ( cat_t )		5204995	1					
ANR	5205428	Sizeof	sizeof		5204995	0					
ANR	5205429	SizeofOperand	cat_t		5204995	1					
ANR	5205430	ExpressionStatement	g -> backrefs = 0	320:1:9707:9722	5204995	47	True				
ANR	5205431	AssignmentExpression	g -> backrefs = 0		5204995	0		=			
ANR	5205432	PtrMemberAccess	g -> backrefs		5204995	0					
ANR	5205433	Identifier	g		5204995	0					
ANR	5205434	Identifier	backrefs		5204995	1					
ANR	5205435	PrimaryExpression	0		5204995	1					
ANR	5205436	ExpressionStatement	"EMIT ( OEND , 0 )"	323:1:9739:9753	5204995	48	True				
ANR	5205437	CallExpression	"EMIT ( OEND , 0 )"		5204995	0					
ANR	5205438	Callee	EMIT		5204995	0					
ANR	5205439	Identifier	EMIT		5204995	0					
ANR	5205440	ArgumentList	OEND		5204995	1					
ANR	5205441	Argument	OEND		5204995	0					
ANR	5205442	Identifier	OEND		5204995	0					
ANR	5205443	Argument	0		5204995	1					
ANR	5205444	PrimaryExpression	0		5204995	0					
ANR	5205445	ExpressionStatement	g -> firststate = THERE ( )	324:1:9756:9780	5204995	49	True				
ANR	5205446	AssignmentExpression	g -> firststate = THERE ( )		5204995	0		=			
ANR	5205447	PtrMemberAccess	g -> firststate		5204995	0					
ANR	5205448	Identifier	g		5204995	0					
ANR	5205449	Identifier	firststate		5204995	1					
ANR	5205450	CallExpression	THERE ( )		5204995	1					
ANR	5205451	Callee	THERE		5204995	0					
ANR	5205452	Identifier	THERE		5204995	0					
ANR	5205453	ArgumentList			5204995	1					
ANR	5205454	IfStatement	if ( cflags & R_REGEX_EXTENDED )		5204995	50					
ANR	5205455	Condition	cflags & R_REGEX_EXTENDED	325:5:9787:9811	5204995	0	True				
ANR	5205456	BitAndExpression	cflags & R_REGEX_EXTENDED		5204995	0		&			
ANR	5205457	Identifier	cflags		5204995	0					
ANR	5205458	Identifier	R_REGEX_EXTENDED		5204995	1					
ANR	5205459	CompoundStatement		90:32:2158:2158	5204995	1					
ANR	5205460	ExpressionStatement	"p_ere ( p , OUT )"	326:2:9818:9831	5204995	0	True				
ANR	5205461	CallExpression	"p_ere ( p , OUT )"		5204995	0					
ANR	5205462	Callee	p_ere		5204995	0					
ANR	5205463	Identifier	p_ere		5204995	0					
ANR	5205464	ArgumentList	p		5204995	1					
ANR	5205465	Argument	p		5204995	0					
ANR	5205466	Identifier	p		5204995	0					
ANR	5205467	Argument	OUT		5204995	1					
ANR	5205468	Identifier	OUT		5204995	0					
ANR	5205469	ElseStatement	else		5204995	0					
ANR	5205470	IfStatement	if ( cflags & R_REGEX_NOSPEC )		5204995	0					
ANR	5205471	Condition	cflags & R_REGEX_NOSPEC	327:12:9845:9867	5204995	0	True				
ANR	5205472	BitAndExpression	cflags & R_REGEX_NOSPEC		5204995	0		&			
ANR	5205473	Identifier	cflags		5204995	0					
ANR	5205474	Identifier	R_REGEX_NOSPEC		5204995	1					
ANR	5205475	CompoundStatement		92:37:2214:2214	5204995	1					
ANR	5205476	ExpressionStatement	p_str ( p )	328:2:9874:9883	5204995	0	True				
ANR	5205477	CallExpression	p_str ( p )		5204995	0					
ANR	5205478	Callee	p_str		5204995	0					
ANR	5205479	Identifier	p_str		5204995	0					
ANR	5205480	ArgumentList	p		5204995	1					
ANR	5205481	Argument	p		5204995	0					
ANR	5205482	Identifier	p		5204995	0					
ANR	5205483	ElseStatement	else		5204995	0					
ANR	5205484	CompoundStatement		94:8:2237:2237	5204995	0					
ANR	5205485	ExpressionStatement	"p_bre ( p , OUT , OUT )"	330:2:9897:9916	5204995	0	True				
ANR	5205486	CallExpression	"p_bre ( p , OUT , OUT )"		5204995	0					
ANR	5205487	Callee	p_bre		5204995	0					
ANR	5205488	Identifier	p_bre		5204995	0					
ANR	5205489	ArgumentList	p		5204995	1					
ANR	5205490	Argument	p		5204995	0					
ANR	5205491	Identifier	p		5204995	0					
ANR	5205492	Argument	OUT		5204995	1					
ANR	5205493	Identifier	OUT		5204995	0					
ANR	5205494	Argument	OUT		5204995	2					
ANR	5205495	Identifier	OUT		5204995	0					
ANR	5205496	ExpressionStatement	"EMIT ( OEND , 0 )"	332:1:9922:9936	5204995	51	True				
ANR	5205497	CallExpression	"EMIT ( OEND , 0 )"		5204995	0					
ANR	5205498	Callee	EMIT		5204995	0					
ANR	5205499	Identifier	EMIT		5204995	0					
ANR	5205500	ArgumentList	OEND		5204995	1					
ANR	5205501	Argument	OEND		5204995	0					
ANR	5205502	Identifier	OEND		5204995	0					
ANR	5205503	Argument	0		5204995	1					
ANR	5205504	PrimaryExpression	0		5204995	0					
ANR	5205505	ExpressionStatement	g -> laststate = THERE ( )	333:1:9939:9962	5204995	52	True				
ANR	5205506	AssignmentExpression	g -> laststate = THERE ( )		5204995	0		=			
ANR	5205507	PtrMemberAccess	g -> laststate		5204995	0					
ANR	5205508	Identifier	g		5204995	0					
ANR	5205509	Identifier	laststate		5204995	1					
ANR	5205510	CallExpression	THERE ( )		5204995	1					
ANR	5205511	Callee	THERE		5204995	0					
ANR	5205512	Identifier	THERE		5204995	0					
ANR	5205513	ArgumentList			5204995	1					
ANR	5205514	ExpressionStatement	"categorize ( p , g )"	336:1:10011:10028	5204995	53	True				
ANR	5205515	CallExpression	"categorize ( p , g )"		5204995	0					
ANR	5205516	Callee	categorize		5204995	0					
ANR	5205517	Identifier	categorize		5204995	0					
ANR	5205518	ArgumentList	p		5204995	1					
ANR	5205519	Argument	p		5204995	0					
ANR	5205520	Identifier	p		5204995	0					
ANR	5205521	Argument	g		5204995	1					
ANR	5205522	Identifier	g		5204995	0					
ANR	5205523	ExpressionStatement	"stripsnug ( p , g )"	337:1:10031:10047	5204995	54	True				
ANR	5205524	CallExpression	"stripsnug ( p , g )"		5204995	0					
ANR	5205525	Callee	stripsnug		5204995	0					
ANR	5205526	Identifier	stripsnug		5204995	0					
ANR	5205527	ArgumentList	p		5204995	1					
ANR	5205528	Argument	p		5204995	0					
ANR	5205529	Identifier	p		5204995	0					
ANR	5205530	Argument	g		5204995	1					
ANR	5205531	Identifier	g		5204995	0					
ANR	5205532	ExpressionStatement	"findmust ( p , g )"	338:1:10050:10065	5204995	55	True				
ANR	5205533	CallExpression	"findmust ( p , g )"		5204995	0					
ANR	5205534	Callee	findmust		5204995	0					
ANR	5205535	Identifier	findmust		5204995	0					
ANR	5205536	ArgumentList	p		5204995	1					
ANR	5205537	Argument	p		5204995	0					
ANR	5205538	Identifier	p		5204995	0					
ANR	5205539	Argument	g		5204995	1					
ANR	5205540	Identifier	g		5204995	0					
ANR	5205541	ExpressionStatement	"g -> nplus = pluscount ( p , g )"	339:1:10068:10095	5204995	56	True				
ANR	5205542	AssignmentExpression	"g -> nplus = pluscount ( p , g )"		5204995	0		=			
ANR	5205543	PtrMemberAccess	g -> nplus		5204995	0					
ANR	5205544	Identifier	g		5204995	0					
ANR	5205545	Identifier	nplus		5204995	1					
ANR	5205546	CallExpression	"pluscount ( p , g )"		5204995	1					
ANR	5205547	Callee	pluscount		5204995	0					
ANR	5205548	Identifier	pluscount		5204995	0					
ANR	5205549	ArgumentList	p		5204995	1					
ANR	5205550	Argument	p		5204995	0					
ANR	5205551	Identifier	p		5204995	0					
ANR	5205552	Argument	g		5204995	1					
ANR	5205553	Identifier	g		5204995	0					
ANR	5205554	ExpressionStatement	g -> magic = MAGIC2	340:1:10098:10115	5204995	57	True				
ANR	5205555	AssignmentExpression	g -> magic = MAGIC2		5204995	0		=			
ANR	5205556	PtrMemberAccess	g -> magic		5204995	0					
ANR	5205557	Identifier	g		5204995	0					
ANR	5205558	Identifier	magic		5204995	1					
ANR	5205559	Identifier	MAGIC2		5204995	1					
ANR	5205560	ExpressionStatement	preg -> re_nsub = g -> nsub	341:1:10118:10141	5204995	58	True				
ANR	5205561	AssignmentExpression	preg -> re_nsub = g -> nsub		5204995	0		=			
ANR	5205562	PtrMemberAccess	preg -> re_nsub		5204995	0					
ANR	5205563	Identifier	preg		5204995	0					
ANR	5205564	Identifier	re_nsub		5204995	1					
ANR	5205565	PtrMemberAccess	g -> nsub		5204995	1					
ANR	5205566	Identifier	g		5204995	0					
ANR	5205567	Identifier	nsub		5204995	1					
ANR	5205568	ExpressionStatement	preg -> re_g = g	342:1:10144:10158	5204995	59	True				
ANR	5205569	AssignmentExpression	preg -> re_g = g		5204995	0		=			
ANR	5205570	PtrMemberAccess	preg -> re_g		5204995	0					
ANR	5205571	Identifier	preg		5204995	0					
ANR	5205572	Identifier	re_g		5204995	1					
ANR	5205573	Identifier	g		5204995	1					
ANR	5205574	ExpressionStatement	preg -> re_magic = MAGIC1	343:1:10161:10184	5204995	60	True				
ANR	5205575	AssignmentExpression	preg -> re_magic = MAGIC1		5204995	0		=			
ANR	5205576	PtrMemberAccess	preg -> re_magic		5204995	0					
ANR	5205577	Identifier	preg		5204995	0					
ANR	5205578	Identifier	re_magic		5204995	1					
ANR	5205579	Identifier	MAGIC1		5204995	1					
ANR	5205580	IfStatement	if ( g -> iflags & BAD )		5204995	61					
ANR	5205581	Condition	g -> iflags & BAD	346:5:10273:10287	5204995	0	True				
ANR	5205582	BitAndExpression	g -> iflags & BAD		5204995	0		&			
ANR	5205583	PtrMemberAccess	g -> iflags		5204995	0					
ANR	5205584	Identifier	g		5204995	0					
ANR	5205585	Identifier	iflags		5204995	1					
ANR	5205586	Identifier	BAD		5204995	1					
ANR	5205587	CompoundStatement		111:22:2634:2634	5204995	1					
ANR	5205588	ExpressionStatement	SETERROR ( R_REGEX_ASSERT )	347:2:10294:10319	5204995	0	True				
ANR	5205589	CallExpression	SETERROR ( R_REGEX_ASSERT )		5204995	0					
ANR	5205590	Callee	SETERROR		5204995	0					
ANR	5205591	Identifier	SETERROR		5204995	0					
ANR	5205592	ArgumentList	R_REGEX_ASSERT		5204995	1					
ANR	5205593	Argument	R_REGEX_ASSERT		5204995	0					
ANR	5205594	Identifier	R_REGEX_ASSERT		5204995	0					
ANR	5205595	IfStatement	if ( p -> error )		5204995	62					
ANR	5205596	Condition	p -> error	350:5:10336:10343	5204995	0	True				
ANR	5205597	PtrMemberAccess	p -> error		5204995	0					
ANR	5205598	Identifier	p		5204995	0					
ANR	5205599	Identifier	error		5204995	1					
ANR	5205600	CompoundStatement		115:15:2690:2690	5204995	1					
ANR	5205601	ExpressionStatement	r_regex_fini ( preg )	351:2:10350:10369	5204995	0	True				
ANR	5205602	CallExpression	r_regex_fini ( preg )		5204995	0					
ANR	5205603	Callee	r_regex_fini		5204995	0					
ANR	5205604	Identifier	r_regex_fini		5204995	0					
ANR	5205605	ArgumentList	preg		5204995	1					
ANR	5205606	Argument	preg		5204995	0					
ANR	5205607	Identifier	preg		5204995	0					
ANR	5205608	ReturnStatement	return p -> error ;	353:1:10375:10390	5204995	63	True				
ANR	5205609	PtrMemberAccess	p -> error		5204995	0					
ANR	5205610	Identifier	p		5204995	0					
ANR	5205611	Identifier	error		5204995	1					
ANR	5205612	ReturnType	R_API int		5204995	1					
ANR	5205613	Identifier	r_regex_comp		5204995	2					
ANR	5205614	ParameterList	"RRegex * preg , const char * pattern , int cflags"		5204995	3					
ANR	5205615	Parameter	RRegex * preg	236:23:7608:7619	5204995	0	True				
ANR	5205616	ParameterType	RRegex *		5204995	0					
ANR	5205617	Identifier	preg		5204995	1					
ANR	5205618	Parameter	const char * pattern	236:37:7622:7640	5204995	1	True				
ANR	5205619	ParameterType	const char *		5204995	0					
ANR	5205620	Identifier	pattern		5204995	1					
ANR	5205621	Parameter	int cflags	236:58:7643:7652	5204995	2	True				
ANR	5205622	ParameterType	int		5204995	0					
ANR	5205623	Identifier	cflags		5204995	1					
ANR	5205624	CFGEntryNode	ENTRY		5204995		True				
ANR	5205625	CFGExitNode	EXIT		5204995		True				
ANR	5205626	Symbol	g -> nsub		5204995						
ANR	5205627	Symbol	p -> next		5204995						
ANR	5205628	Symbol	CHAR_MIN		5204995						
ANR	5205629	Symbol	g -> catspace		5204995						
ANR	5205630	Symbol	THERE		5204995						
ANR	5205631	Symbol	preg -> re_flags		5204995						
ANR	5205632	Symbol	g -> nbol		5204995						
ANR	5205633	Symbol	preg		5204995						
ANR	5205634	Symbol	strlen		5204995						
ANR	5205635	Symbol	p -> end		5204995						
ANR	5205636	Symbol	g -> iflags		5204995						
ANR	5205637	Symbol	g -> backrefs		5204995						
ANR	5205638	Symbol	g -> cflags		5204995						
ANR	5205639	Symbol	len		5204995						
ANR	5205640	Symbol	R_REGEX_NOSPEC		5204995						
ANR	5205641	Symbol	p -> pend		5204995						
ANR	5205642	Symbol	* p -> pbegin		5204995						
ANR	5205643	Symbol	preg -> re_g		5204995						
ANR	5205644	Symbol	g -> categories		5204995						
ANR	5205645	Symbol	g -> firststate		5204995						
ANR	5205646	Symbol	p -> g		5204995						
ANR	5205647	Symbol	p -> pbegin		5204995						
ANR	5205648	Symbol	g -> csetsize		5204995						
ANR	5205649	Symbol	NULL		5204995						
ANR	5205650	Symbol	g -> laststate		5204995						
ANR	5205651	Symbol	OEND		5204995						
ANR	5205652	Symbol	R_REGEX_ASSERT		5204995						
ANR	5205653	Symbol	g -> magic		5204995						
ANR	5205654	Symbol	OUT		5204995						
ANR	5205655	Symbol	NC		5204995						
ANR	5205656	Symbol	p -> strip		5204995						
ANR	5205657	Symbol	g -> must		5204995						
ANR	5205658	Symbol	g -> mlen		5204995						
ANR	5205659	Symbol	pluscount		5204995						
ANR	5205660	Symbol	& pa		5204995						
ANR	5205661	Symbol	cflags		5204995						
ANR	5205662	Symbol	g -> ncsets		5204995						
ANR	5205663	Symbol	g -> nplus		5204995						
ANR	5205664	Symbol	maxlen		5204995						
ANR	5205665	Symbol	GOODFLAGS		5204995						
ANR	5205666	Symbol	g -> neol		5204995						
ANR	5205667	Symbol	pattern		5204995						
ANR	5205668	Symbol	R_REGEX_INVARG		5204995						
ANR	5205669	Symbol	calloc		5204995						
ANR	5205670	Symbol	g -> sets		5204995						
ANR	5205671	Symbol	* p -> pend		5204995						
ANR	5205672	Symbol	p -> ncsalloc		5204995						
ANR	5205673	Symbol	preg -> re_magic		5204995						
ANR	5205674	Symbol	preg -> re_nsub		5204995						
ANR	5205675	Symbol	R_REGEX_PEND		5204995						
ANR	5205676	Symbol	p -> ssize		5204995						
ANR	5205677	Symbol	g -> setbits		5204995						
ANR	5205678	Symbol	* * p		5204995						
ANR	5205679	Symbol	MAGIC1		5204995						
ANR	5205680	Symbol	MAGIC2		5204995						
ANR	5205681	Symbol	preg -> re_endp		5204995						
ANR	5205682	Symbol	g -> ncategories		5204995						
ANR	5205683	Symbol	BAD		5204995						
ANR	5205684	Symbol	g		5204995						
ANR	5205685	Symbol	i		5204995						
ANR	5205686	Symbol	p -> error		5204995						
ANR	5205687	Symbol	p		5204995						
ANR	5205688	Symbol	pa		5204995						
ANR	5205689	Symbol	* g		5204995						
ANR	5205690	Symbol	p -> slen		5204995						
ANR	5205691	Symbol	* i		5204995						
ANR	5205692	Symbol	R_REGEX_ESPACE		5204995						
ANR	5205693	Symbol	R_REGEX_EXTENDED		5204995						
ANR	5205694	Symbol	* preg		5204995						
ANR	5205695	Symbol	* p		5204995						
ANR	5205696	Symbol	NPAREN		5204995						
ANR	5205697	Function	p_ere	359:0:10465:11326							
ANR	5205698	FunctionDef	"p_ere (struct parse * p , int stop)"		5205697	0					
ANR	5205699	CompoundStatement		359:45:10510:11326	5205697	0					
ANR	5205700	IdentifierDeclStatement	bool isFirst = true ;	360:1:10552:10571	5205697	0	True				
ANR	5205701	IdentifierDecl	isFirst = true		5205697	0					
ANR	5205702	IdentifierDeclType	bool		5205697	0					
ANR	5205703	Identifier	isFirst		5205697	1					
ANR	5205704	AssignmentExpression	isFirst = true		5205697	2		=			
ANR	5205705	Identifier	true		5205697	0					
ANR	5205706	Identifier	true		5205697	1					
ANR	5205707	IdentifierDeclStatement	sopno prevback = 0 ;	361:1:10574:10592	5205697	1	True				
ANR	5205708	IdentifierDecl	prevback = 0		5205697	0					
ANR	5205709	IdentifierDeclType	sopno		5205697	0					
ANR	5205710	Identifier	prevback		5205697	1					
ANR	5205711	AssignmentExpression	prevback = 0		5205697	2		=			
ANR	5205712	Identifier	prevback		5205697	0					
ANR	5205713	PrimaryExpression	0		5205697	1					
ANR	5205714	IdentifierDeclStatement	sopno prevfwd = 0 ;	362:1:10595:10612	5205697	2	True				
ANR	5205715	IdentifierDecl	prevfwd = 0		5205697	0					
ANR	5205716	IdentifierDeclType	sopno		5205697	0					
ANR	5205717	Identifier	prevfwd		5205697	1					
ANR	5205718	AssignmentExpression	prevfwd = 0		5205697	2		=			
ANR	5205719	Identifier	prevfwd		5205697	0					
ANR	5205720	PrimaryExpression	0		5205697	1					
ANR	5205721	IdentifierDeclStatement	sopno conc = 0 ;	363:1:10615:10629	5205697	3	True				
ANR	5205722	IdentifierDecl	conc = 0		5205697	0					
ANR	5205723	IdentifierDeclType	sopno		5205697	0					
ANR	5205724	Identifier	conc		5205697	1					
ANR	5205725	AssignmentExpression	conc = 0		5205697	2		=			
ANR	5205726	Identifier	conc		5205697	0					
ANR	5205727	PrimaryExpression	0		5205697	1					
ANR	5205728	IdentifierDeclStatement	char c ;	364:1:10632:10638	5205697	4	True				
ANR	5205729	IdentifierDecl	c		5205697	0					
ANR	5205730	IdentifierDeclType	char		5205697	0					
ANR	5205731	Identifier	c		5205697	1					
ANR	5205732	ForStatement	for ( ; ; )		5205697	5					
ANR	5205733	CompoundStatement		8:10:140:140	5205697	0					
ANR	5205734	ExpressionStatement	conc = HERE ( )	368:2:10702:10715	5205697	0	True				
ANR	5205735	AssignmentExpression	conc = HERE ( )		5205697	0		=			
ANR	5205736	Identifier	conc		5205697	0					
ANR	5205737	CallExpression	HERE ( )		5205697	1					
ANR	5205738	Callee	HERE		5205697	0					
ANR	5205739	Identifier	HERE		5205697	0					
ANR	5205740	ArgumentList			5205697	1					
ANR	5205741	WhileStatement	while ( MORE ( ) && ( c = PEEK ( ) ) != '|' && c != stop )		5205697	1					
ANR	5205742	Condition	MORE ( ) && ( c = PEEK ( ) ) != '|' && c != stop	369:9:10726:10767	5205697	0	True				
ANR	5205743	AndExpression	MORE ( ) && ( c = PEEK ( ) ) != '|' && c != stop		5205697	0		&&			
ANR	5205744	CallExpression	MORE ( )		5205697	0					
ANR	5205745	Callee	MORE		5205697	0					
ANR	5205746	Identifier	MORE		5205697	0					
ANR	5205747	ArgumentList			5205697	1					
ANR	5205748	AndExpression	( c = PEEK ( ) ) != '|' && c != stop		5205697	1		&&			
ANR	5205749	EqualityExpression	( c = PEEK ( ) ) != '|'		5205697	0		!=			
ANR	5205750	AssignmentExpression	c = PEEK ( )		5205697	0		=			
ANR	5205751	Identifier	c		5205697	0					
ANR	5205752	CallExpression	PEEK ( )		5205697	1					
ANR	5205753	Callee	PEEK		5205697	0					
ANR	5205754	Identifier	PEEK		5205697	0					
ANR	5205755	ArgumentList			5205697	1					
ANR	5205756	PrimaryExpression	'|'		5205697	1					
ANR	5205757	EqualityExpression	c != stop		5205697	1		!=			
ANR	5205758	Identifier	c		5205697	0					
ANR	5205759	Identifier	stop		5205697	1					
ANR	5205760	CompoundStatement		11:53:259:259	5205697	1					
ANR	5205761	ExpressionStatement	p_ere_exp ( p )	370:3:10775:10788	5205697	0	True				
ANR	5205762	CallExpression	p_ere_exp ( p )		5205697	0					
ANR	5205763	Callee	p_ere_exp		5205697	0					
ANR	5205764	Identifier	p_ere_exp		5205697	0					
ANR	5205765	ArgumentList	p		5205697	1					
ANR	5205766	Argument	p		5205697	0					
ANR	5205767	Identifier	p		5205697	0					
ANR	5205768	ExpressionStatement	"REQUIRE ( HERE ( ) != conc , R_REGEX_EMPTY )"	372:2:10796:10836	5205697	2	True				
ANR	5205769	CallExpression	"REQUIRE ( HERE ( ) != conc , R_REGEX_EMPTY )"		5205697	0					
ANR	5205770	Callee	REQUIRE		5205697	0					
ANR	5205771	Identifier	REQUIRE		5205697	0					
ANR	5205772	ArgumentList	HERE ( ) != conc		5205697	1					
ANR	5205773	Argument	HERE ( ) != conc		5205697	0					
ANR	5205774	EqualityExpression	HERE ( ) != conc		5205697	0		!=			
ANR	5205775	CallExpression	HERE ( )		5205697	0					
ANR	5205776	Callee	HERE		5205697	0					
ANR	5205777	Identifier	HERE		5205697	0					
ANR	5205778	ArgumentList			5205697	1					
ANR	5205779	Identifier	conc		5205697	1					
ANR	5205780	Argument	R_REGEX_EMPTY		5205697	1					
ANR	5205781	Identifier	R_REGEX_EMPTY		5205697	0					
ANR	5205782	IfStatement	if ( ! EAT ( '|' ) )		5205697	3					
ANR	5205783	Condition	! EAT ( '|' )	374:6:10868:10876	5205697	0	True				
ANR	5205784	UnaryOperationExpression	! EAT ( '|' )		5205697	0					
ANR	5205785	UnaryOperator	!		5205697	0					
ANR	5205786	CallExpression	EAT ( '|' )		5205697	1					
ANR	5205787	Callee	EAT		5205697	0					
ANR	5205788	Identifier	EAT		5205697	0					
ANR	5205789	ArgumentList	'|'		5205697	1					
ANR	5205790	Argument	'|'		5205697	0					
ANR	5205791	PrimaryExpression	'|'		5205697	0					
ANR	5205792	CompoundStatement		16:17:368:368	5205697	1					
ANR	5205793	BreakStatement	break ;	375:3:10884:10889	5205697	0	True				
ANR	5205794	IfStatement	if ( isFirst )		5205697	4					
ANR	5205795	Condition	isFirst	377:6:10923:10929	5205697	0	True				
ANR	5205796	Identifier	isFirst		5205697	0					
ANR	5205797	CompoundStatement		19:15:421:421	5205697	1					
ANR	5205798	ExpressionStatement	"INSERT ( OCH_ , conc )"	378:3:10937:10956	5205697	0	True				
ANR	5205799	CallExpression	"INSERT ( OCH_ , conc )"		5205697	0					
ANR	5205800	Callee	INSERT		5205697	0					
ANR	5205801	Identifier	INSERT		5205697	0					
ANR	5205802	ArgumentList	OCH_		5205697	1					
ANR	5205803	Argument	OCH_		5205697	0					
ANR	5205804	Identifier	OCH_		5205697	0					
ANR	5205805	Argument	conc		5205697	1					
ANR	5205806	Identifier	conc		5205697	0					
ANR	5205807	ExpressionStatement	prevfwd = conc	379:3:10983:10997	5205697	1	True				
ANR	5205808	AssignmentExpression	prevfwd = conc		5205697	0		=			
ANR	5205809	Identifier	prevfwd		5205697	0					
ANR	5205810	Identifier	conc		5205697	1					
ANR	5205811	ExpressionStatement	prevback = conc	380:3:11002:11017	5205697	2	True				
ANR	5205812	AssignmentExpression	prevback = conc		5205697	0		=			
ANR	5205813	Identifier	prevback		5205697	0					
ANR	5205814	Identifier	conc		5205697	1					
ANR	5205815	ExpressionStatement	isFirst = false	381:3:11022:11037	5205697	3	True				
ANR	5205816	AssignmentExpression	isFirst = false		5205697	0		=			
ANR	5205817	Identifier	isFirst		5205697	0					
ANR	5205818	Identifier	false		5205697	1					
ANR	5205819	ExpressionStatement	"ASTERN ( OOR1 , prevback )"	383:2:11045:11067	5205697	5	True				
ANR	5205820	CallExpression	"ASTERN ( OOR1 , prevback )"		5205697	0					
ANR	5205821	Callee	ASTERN		5205697	0					
ANR	5205822	Identifier	ASTERN		5205697	0					
ANR	5205823	ArgumentList	OOR1		5205697	1					
ANR	5205824	Argument	OOR1		5205697	0					
ANR	5205825	Identifier	OOR1		5205697	0					
ANR	5205826	Argument	prevback		5205697	1					
ANR	5205827	Identifier	prevback		5205697	0					
ANR	5205828	ExpressionStatement	prevback = THERE ( )	384:2:11071:11089	5205697	6	True				
ANR	5205829	AssignmentExpression	prevback = THERE ( )		5205697	0		=			
ANR	5205830	Identifier	prevback		5205697	0					
ANR	5205831	CallExpression	THERE ( )		5205697	1					
ANR	5205832	Callee	THERE		5205697	0					
ANR	5205833	Identifier	THERE		5205697	0					
ANR	5205834	ArgumentList			5205697	1					
ANR	5205835	ExpressionStatement	AHEAD ( prevfwd )	385:2:11093:11107	5205697	7	True				
ANR	5205836	CallExpression	AHEAD ( prevfwd )		5205697	0					
ANR	5205837	Callee	AHEAD		5205697	0					
ANR	5205838	Identifier	AHEAD		5205697	0					
ANR	5205839	ArgumentList	prevfwd		5205697	1					
ANR	5205840	Argument	prevfwd		5205697	0					
ANR	5205841	Identifier	prevfwd		5205697	0					
ANR	5205842	ExpressionStatement	prevfwd = HERE ( )	386:2:11139:11155	5205697	8	True				
ANR	5205843	AssignmentExpression	prevfwd = HERE ( )		5205697	0		=			
ANR	5205844	Identifier	prevfwd		5205697	0					
ANR	5205845	CallExpression	HERE ( )		5205697	1					
ANR	5205846	Callee	HERE		5205697	0					
ANR	5205847	Identifier	HERE		5205697	0					
ANR	5205848	ArgumentList			5205697	1					
ANR	5205849	ExpressionStatement	"EMIT ( OOR2 , 0 )"	387:2:11159:11172	5205697	9	True				
ANR	5205850	CallExpression	"EMIT ( OOR2 , 0 )"		5205697	0					
ANR	5205851	Callee	EMIT		5205697	0					
ANR	5205852	Identifier	EMIT		5205697	0					
ANR	5205853	ArgumentList	OOR2		5205697	1					
ANR	5205854	Argument	OOR2		5205697	0					
ANR	5205855	Identifier	OOR2		5205697	0					
ANR	5205856	Argument	0		5205697	1					
ANR	5205857	PrimaryExpression	0		5205697	0					
ANR	5205858	IfStatement	if ( ! isFirst )		5205697	6					
ANR	5205859	Condition	! isFirst	390:5:11212:11219	5205697	0	True				
ANR	5205860	UnaryOperationExpression	! isFirst		5205697	0					
ANR	5205861	UnaryOperator	!		5205697	0					
ANR	5205862	Identifier	isFirst		5205697	1					
ANR	5205863	CompoundStatement		32:15:711:711	5205697	1					
ANR	5205864	ExpressionStatement	AHEAD ( prevfwd )	391:2:11249:11263	5205697	0	True				
ANR	5205865	CallExpression	AHEAD ( prevfwd )		5205697	0					
ANR	5205866	Callee	AHEAD		5205697	0					
ANR	5205867	Identifier	AHEAD		5205697	0					
ANR	5205868	ArgumentList	prevfwd		5205697	1					
ANR	5205869	Argument	prevfwd		5205697	0					
ANR	5205870	Identifier	prevfwd		5205697	0					
ANR	5205871	ExpressionStatement	"ASTERN ( O_CH , prevback )"	392:2:11267:11289	5205697	1	True				
ANR	5205872	CallExpression	"ASTERN ( O_CH , prevback )"		5205697	0					
ANR	5205873	Callee	ASTERN		5205697	0					
ANR	5205874	Identifier	ASTERN		5205697	0					
ANR	5205875	ArgumentList	O_CH		5205697	1					
ANR	5205876	Argument	O_CH		5205697	0					
ANR	5205877	Identifier	O_CH		5205697	0					
ANR	5205878	Argument	prevback		5205697	1					
ANR	5205879	Identifier	prevback		5205697	0					
ANR	5205880	ReturnType	static void		5205697	1					
ANR	5205881	Identifier	p_ere		5205697	2					
ANR	5205882	ParameterList	"struct parse * p , int stop"		5205697	3					
ANR	5205883	Parameter	struct parse * p	359:18:10483:10497	5205697	0	True				
ANR	5205884	ParameterType	struct parse *		5205697	0					
ANR	5205885	Identifier	p		5205697	1					
ANR	5205886	Parameter	int stop	359:35:10500:10507	5205697	1	True				
ANR	5205887	ParameterType	int		5205697	0					
ANR	5205888	Identifier	stop		5205697	1					
ANR	5205889	CFGEntryNode	ENTRY		5205697		True				
ANR	5205890	CFGExitNode	EXIT		5205697		True				
ANR	5205891	InfiniteForNode	true		5205697		True				
ANR	5205892	Symbol	c		5205697						
ANR	5205893	Symbol	THERE		5205697						
ANR	5205894	Symbol	OOR2		5205697						
ANR	5205895	Symbol	R_REGEX_EMPTY		5205697						
ANR	5205896	Symbol	prevfwd		5205697						
ANR	5205897	Symbol	false		5205697						
ANR	5205898	Symbol	prevback		5205697						
ANR	5205899	Symbol	conc		5205697						
ANR	5205900	Symbol	OCH_		5205697						
ANR	5205901	Symbol	p		5205697						
ANR	5205902	Symbol	O_CH		5205697						
ANR	5205903	Symbol	isFirst		5205697						
ANR	5205904	Symbol	HERE		5205697						
ANR	5205905	Symbol	MORE		5205697						
ANR	5205906	Symbol	stop		5205697						
ANR	5205907	Symbol	true		5205697						
ANR	5205908	Symbol	EAT		5205697						
ANR	5205909	Symbol	OOR1		5205697						
ANR	5205910	Symbol	PEEK		5205697						
ANR	5205911	Function	p_ere_exp	400:0:11414:14367							
ANR	5205912	FunctionDef	p_ere_exp (struct parse * p)		5205911	0					
ANR	5205913	CompoundStatement		400:39:11453:14367	5205911	0					
ANR	5205914	IdentifierDeclStatement	char c ;	401:1:11456:11462	5205911	0	True				
ANR	5205915	IdentifierDecl	c		5205911	0					
ANR	5205916	IdentifierDeclType	char		5205911	0					
ANR	5205917	Identifier	c		5205911	1					
ANR	5205918	IdentifierDeclStatement	sopno pos ;	402:1:11465:11474	5205911	1	True				
ANR	5205919	IdentifierDecl	pos		5205911	0					
ANR	5205920	IdentifierDeclType	sopno		5205911	0					
ANR	5205921	Identifier	pos		5205911	1					
ANR	5205922	IdentifierDeclStatement	int count ;	403:1:11477:11486	5205911	2	True				
ANR	5205923	IdentifierDecl	count		5205911	0					
ANR	5205924	IdentifierDeclType	int		5205911	0					
ANR	5205925	Identifier	count		5205911	1					
ANR	5205926	IdentifierDeclStatement	int count2 ;	404:1:11489:11499	5205911	3	True				
ANR	5205927	IdentifierDecl	count2		5205911	0					
ANR	5205928	IdentifierDeclType	int		5205911	0					
ANR	5205929	Identifier	count2		5205911	1					
ANR	5205930	IdentifierDeclStatement	sopno subno ;	405:1:11502:11513	5205911	4	True				
ANR	5205931	IdentifierDecl	subno		5205911	0					
ANR	5205932	IdentifierDeclType	sopno		5205911	0					
ANR	5205933	Identifier	subno		5205911	1					
ANR	5205934	IdentifierDeclStatement	int wascaret = 0 ;	406:1:11516:11532	5205911	5	True				
ANR	5205935	IdentifierDecl	wascaret = 0		5205911	0					
ANR	5205936	IdentifierDeclType	int		5205911	0					
ANR	5205937	Identifier	wascaret		5205911	1					
ANR	5205938	AssignmentExpression	wascaret = 0		5205911	2		=			
ANR	5205939	Identifier	wascaret		5205911	0					
ANR	5205940	PrimaryExpression	0		5205911	1					
ANR	5205941	IfStatement	if ( ! MORE ( ) )		5205911	6					
ANR	5205942	Condition	! MORE ( )	408:5:11540:11546	5205911	0	True				
ANR	5205943	UnaryOperationExpression	! MORE ( )		5205911	0					
ANR	5205944	UnaryOperator	!		5205911	0					
ANR	5205945	CallExpression	MORE ( )		5205911	1					
ANR	5205946	Callee	MORE		5205911	0					
ANR	5205947	Identifier	MORE		5205911	0					
ANR	5205948	ArgumentList			5205911	1					
ANR	5205949	CompoundStatement		9:14:95:95	5205911	1					
ANR	5205950	ReturnStatement	return ;	409:2:11592:11598	5205911	0	True				
ANR	5205951	ExpressionStatement	c = GETNEXT ( )	411:1:11604:11617	5205911	7	True				
ANR	5205952	AssignmentExpression	c = GETNEXT ( )		5205911	0		=			
ANR	5205953	Identifier	c		5205911	0					
ANR	5205954	CallExpression	GETNEXT ( )		5205911	1					
ANR	5205955	Callee	GETNEXT		5205911	0					
ANR	5205956	Identifier	GETNEXT		5205911	0					
ANR	5205957	ArgumentList			5205911	1					
ANR	5205958	ExpressionStatement	pos = HERE ( )	413:1:11621:11633	5205911	8	True				
ANR	5205959	AssignmentExpression	pos = HERE ( )		5205911	0		=			
ANR	5205960	Identifier	pos		5205911	0					
ANR	5205961	CallExpression	HERE ( )		5205911	1					
ANR	5205962	Callee	HERE		5205911	0					
ANR	5205963	Identifier	HERE		5205911	0					
ANR	5205964	ArgumentList			5205911	1					
ANR	5205965	SwitchStatement	switch ( c )		5205911	9					
ANR	5205966	Condition	c	414:9:11644:11644	5205911	0	True				
ANR	5205967	Identifier	c		5205911	0					
ANR	5205968	CompoundStatement		15:12:193:193	5205911	1					
ANR	5205969	Label	case '(' :	415:1:11650:11658	5205911	0	True				
ANR	5205970	ExpressionStatement	"REQUIRE ( MORE ( ) , R_REGEX_EPAREN )"	416:2:11662:11693	5205911	1	True				
ANR	5205971	CallExpression	"REQUIRE ( MORE ( ) , R_REGEX_EPAREN )"		5205911	0					
ANR	5205972	Callee	REQUIRE		5205911	0					
ANR	5205973	Identifier	REQUIRE		5205911	0					
ANR	5205974	ArgumentList	MORE ( )		5205911	1					
ANR	5205975	Argument	MORE ( )		5205911	0					
ANR	5205976	CallExpression	MORE ( )		5205911	0					
ANR	5205977	Callee	MORE		5205911	0					
ANR	5205978	Identifier	MORE		5205911	0					
ANR	5205979	ArgumentList			5205911	1					
ANR	5205980	Argument	R_REGEX_EPAREN		5205911	1					
ANR	5205981	Identifier	R_REGEX_EPAREN		5205911	0					
ANR	5205982	ExpressionStatement	p -> g -> nsub ++	417:2:11697:11709	5205911	2	True				
ANR	5205983	PostIncDecOperationExpression	p -> g -> nsub ++		5205911	0					
ANR	5205984	PtrMemberAccess	p -> g -> nsub		5205911	0					
ANR	5205985	PtrMemberAccess	p -> g		5205911	0					
ANR	5205986	Identifier	p		5205911	0					
ANR	5205987	Identifier	g		5205911	1					
ANR	5205988	Identifier	nsub		5205911	1					
ANR	5205989	IncDec	++		5205911	1					
ANR	5205990	ExpressionStatement	subno = p -> g -> nsub	418:2:11713:11731	5205911	3	True				
ANR	5205991	AssignmentExpression	subno = p -> g -> nsub		5205911	0		=			
ANR	5205992	Identifier	subno		5205911	0					
ANR	5205993	PtrMemberAccess	p -> g -> nsub		5205911	1					
ANR	5205994	PtrMemberAccess	p -> g		5205911	0					
ANR	5205995	Identifier	p		5205911	0					
ANR	5205996	Identifier	g		5205911	1					
ANR	5205997	Identifier	nsub		5205911	1					
ANR	5205998	IfStatement	if ( subno < NPAREN )		5205911	4					
ANR	5205999	Condition	subno < NPAREN	419:6:11739:11752	5205911	0	True				
ANR	5206000	RelationalExpression	subno < NPAREN		5205911	0		<			
ANR	5206001	Identifier	subno		5205911	0					
ANR	5206002	Identifier	NPAREN		5205911	1					
ANR	5206003	CompoundStatement		20:22:301:301	5205911	1					
ANR	5206004	ExpressionStatement	p -> pbegin [ subno ] = HERE ( )	420:3:11760:11786	5205911	0	True				
ANR	5206005	AssignmentExpression	p -> pbegin [ subno ] = HERE ( )		5205911	0		=			
ANR	5206006	ArrayIndexing	p -> pbegin [ subno ]		5205911	0					
ANR	5206007	PtrMemberAccess	p -> pbegin		5205911	0					
ANR	5206008	Identifier	p		5205911	0					
ANR	5206009	Identifier	pbegin		5205911	1					
ANR	5206010	Identifier	subno		5205911	1					
ANR	5206011	CallExpression	HERE ( )		5205911	1					
ANR	5206012	Callee	HERE		5205911	0					
ANR	5206013	Identifier	HERE		5205911	0					
ANR	5206014	ArgumentList			5205911	1					
ANR	5206015	ExpressionStatement	"EMIT ( OLPAREN , subno )"	422:2:11794:11814	5205911	5	True				
ANR	5206016	CallExpression	"EMIT ( OLPAREN , subno )"		5205911	0					
ANR	5206017	Callee	EMIT		5205911	0					
ANR	5206018	Identifier	EMIT		5205911	0					
ANR	5206019	ArgumentList	OLPAREN		5205911	1					
ANR	5206020	Argument	OLPAREN		5205911	0					
ANR	5206021	Identifier	OLPAREN		5205911	0					
ANR	5206022	Argument	subno		5205911	1					
ANR	5206023	Identifier	subno		5205911	0					
ANR	5206024	IfStatement	if ( ! SEE ( ')' ) )		5205911	6					
ANR	5206025	Condition	! SEE ( ')' )	423:6:11822:11831	5205911	0	True				
ANR	5206026	UnaryOperationExpression	! SEE ( ')' )		5205911	0					
ANR	5206027	UnaryOperator	!		5205911	0					
ANR	5206028	CallExpression	SEE ( ')' )		5205911	1					
ANR	5206029	Callee	SEE		5205911	0					
ANR	5206030	Identifier	SEE		5205911	0					
ANR	5206031	ArgumentList	')'		5205911	1					
ANR	5206032	Argument	')'		5205911	0					
ANR	5206033	PrimaryExpression	')'		5205911	0					
ANR	5206034	CompoundStatement		24:18:380:380	5205911	1					
ANR	5206035	ExpressionStatement	"p_ere ( p , ')' )"	424:3:11839:11853	5205911	0	True				
ANR	5206036	CallExpression	"p_ere ( p , ')' )"		5205911	0					
ANR	5206037	Callee	p_ere		5205911	0					
ANR	5206038	Identifier	p_ere		5205911	0					
ANR	5206039	ArgumentList	p		5205911	1					
ANR	5206040	Argument	p		5205911	0					
ANR	5206041	Identifier	p		5205911	0					
ANR	5206042	Argument	')'		5205911	1					
ANR	5206043	PrimaryExpression	')'		5205911	0					
ANR	5206044	IfStatement	if ( subno < NPAREN )		5205911	7					
ANR	5206045	Condition	subno < NPAREN	426:6:11865:11878	5205911	0	True				
ANR	5206046	RelationalExpression	subno < NPAREN		5205911	0		<			
ANR	5206047	Identifier	subno		5205911	0					
ANR	5206048	Identifier	NPAREN		5205911	1					
ANR	5206049	CompoundStatement		27:22:427:427	5205911	1					
ANR	5206050	ExpressionStatement	p -> pend [ subno ] = HERE ( )	427:3:11886:11909	5205911	0	True				
ANR	5206051	AssignmentExpression	p -> pend [ subno ] = HERE ( )		5205911	0		=			
ANR	5206052	ArrayIndexing	p -> pend [ subno ]		5205911	0					
ANR	5206053	PtrMemberAccess	p -> pend		5205911	0					
ANR	5206054	Identifier	p		5205911	0					
ANR	5206055	Identifier	pend		5205911	1					
ANR	5206056	Identifier	subno		5205911	1					
ANR	5206057	CallExpression	HERE ( )		5205911	1					
ANR	5206058	Callee	HERE		5205911	0					
ANR	5206059	Identifier	HERE		5205911	0					
ANR	5206060	ArgumentList			5205911	1					
ANR	5206061	IfStatement	if ( ! p -> pend [ subno ] )		5205911	1					
ANR	5206062	Condition	! p -> pend [ subno ]	428:7:11918:11932	5205911	0	True				
ANR	5206063	UnaryOperationExpression	! p -> pend [ subno ]		5205911	0					
ANR	5206064	UnaryOperator	!		5205911	0					
ANR	5206065	ArrayIndexing	p -> pend [ subno ]		5205911	1					
ANR	5206066	PtrMemberAccess	p -> pend		5205911	0					
ANR	5206067	Identifier	p		5205911	0					
ANR	5206068	Identifier	pend		5205911	1					
ANR	5206069	Identifier	subno		5205911	1					
ANR	5206070	CompoundStatement		29:24:481:481	5205911	1					
ANR	5206071	BreakStatement	break ;	429:4:11941:11946	5205911	0	True				
ANR	5206072	ExpressionStatement	"EMIT ( ORPAREN , subno )"	432:2:11959:11979	5205911	8	True				
ANR	5206073	CallExpression	"EMIT ( ORPAREN , subno )"		5205911	0					
ANR	5206074	Callee	EMIT		5205911	0					
ANR	5206075	Identifier	EMIT		5205911	0					
ANR	5206076	ArgumentList	ORPAREN		5205911	1					
ANR	5206077	Argument	ORPAREN		5205911	0					
ANR	5206078	Identifier	ORPAREN		5205911	0					
ANR	5206079	Argument	subno		5205911	1					
ANR	5206080	Identifier	subno		5205911	0					
ANR	5206081	ExpressionStatement	"MUSTEAT ( ')' , R_REGEX_EPAREN )"	433:2:11983:12011	5205911	9	True				
ANR	5206082	CallExpression	"MUSTEAT ( ')' , R_REGEX_EPAREN )"		5205911	0					
ANR	5206083	Callee	MUSTEAT		5205911	0					
ANR	5206084	Identifier	MUSTEAT		5205911	0					
ANR	5206085	ArgumentList	')'		5205911	1					
ANR	5206086	Argument	')'		5205911	0					
ANR	5206087	PrimaryExpression	')'		5205911	0					
ANR	5206088	Argument	R_REGEX_EPAREN		5205911	1					
ANR	5206089	Identifier	R_REGEX_EPAREN		5205911	0					
ANR	5206090	BreakStatement	break ;	434:2:12015:12020	5205911	10	True				
ANR	5206091	Label	case '^' :	435:1:12023:12031	5205911	11	True				
ANR	5206092	ExpressionStatement	"EMIT ( OBOL , 0 )"	436:2:12035:12048	5205911	12	True				
ANR	5206093	CallExpression	"EMIT ( OBOL , 0 )"		5205911	0					
ANR	5206094	Callee	EMIT		5205911	0					
ANR	5206095	Identifier	EMIT		5205911	0					
ANR	5206096	ArgumentList	OBOL		5205911	1					
ANR	5206097	Argument	OBOL		5205911	0					
ANR	5206098	Identifier	OBOL		5205911	0					
ANR	5206099	Argument	0		5205911	1					
ANR	5206100	PrimaryExpression	0		5205911	0					
ANR	5206101	ExpressionStatement	p -> g -> iflags |= USEBOL	437:2:12052:12074	5205911	13	True				
ANR	5206102	AssignmentExpression	p -> g -> iflags |= USEBOL		5205911	0		|=			
ANR	5206103	PtrMemberAccess	p -> g -> iflags		5205911	0					
ANR	5206104	PtrMemberAccess	p -> g		5205911	0					
ANR	5206105	Identifier	p		5205911	0					
ANR	5206106	Identifier	g		5205911	1					
ANR	5206107	Identifier	iflags		5205911	1					
ANR	5206108	Identifier	USEBOL		5205911	1					
ANR	5206109	ExpressionStatement	p -> g -> nbol ++	438:2:12078:12090	5205911	14	True				
ANR	5206110	PostIncDecOperationExpression	p -> g -> nbol ++		5205911	0					
ANR	5206111	PtrMemberAccess	p -> g -> nbol		5205911	0					
ANR	5206112	PtrMemberAccess	p -> g		5205911	0					
ANR	5206113	Identifier	p		5205911	0					
ANR	5206114	Identifier	g		5205911	1					
ANR	5206115	Identifier	nbol		5205911	1					
ANR	5206116	IncDec	++		5205911	1					
ANR	5206117	ExpressionStatement	wascaret = 1	439:2:12094:12106	5205911	15	True				
ANR	5206118	AssignmentExpression	wascaret = 1		5205911	0		=			
ANR	5206119	Identifier	wascaret		5205911	0					
ANR	5206120	PrimaryExpression	1		5205911	1					
ANR	5206121	BreakStatement	break ;	440:2:12110:12115	5205911	16	True				
ANR	5206122	Label	case '$' :	441:1:12118:12126	5205911	17	True				
ANR	5206123	ExpressionStatement	"EMIT ( OEOL , 0 )"	442:2:12130:12143	5205911	18	True				
ANR	5206124	CallExpression	"EMIT ( OEOL , 0 )"		5205911	0					
ANR	5206125	Callee	EMIT		5205911	0					
ANR	5206126	Identifier	EMIT		5205911	0					
ANR	5206127	ArgumentList	OEOL		5205911	1					
ANR	5206128	Argument	OEOL		5205911	0					
ANR	5206129	Identifier	OEOL		5205911	0					
ANR	5206130	Argument	0		5205911	1					
ANR	5206131	PrimaryExpression	0		5205911	0					
ANR	5206132	ExpressionStatement	p -> g -> iflags |= USEEOL	443:2:12147:12169	5205911	19	True				
ANR	5206133	AssignmentExpression	p -> g -> iflags |= USEEOL		5205911	0		|=			
ANR	5206134	PtrMemberAccess	p -> g -> iflags		5205911	0					
ANR	5206135	PtrMemberAccess	p -> g		5205911	0					
ANR	5206136	Identifier	p		5205911	0					
ANR	5206137	Identifier	g		5205911	1					
ANR	5206138	Identifier	iflags		5205911	1					
ANR	5206139	Identifier	USEEOL		5205911	1					
ANR	5206140	ExpressionStatement	p -> g -> neol ++	444:2:12173:12185	5205911	20	True				
ANR	5206141	PostIncDecOperationExpression	p -> g -> neol ++		5205911	0					
ANR	5206142	PtrMemberAccess	p -> g -> neol		5205911	0					
ANR	5206143	PtrMemberAccess	p -> g		5205911	0					
ANR	5206144	Identifier	p		5205911	0					
ANR	5206145	Identifier	g		5205911	1					
ANR	5206146	Identifier	neol		5205911	1					
ANR	5206147	IncDec	++		5205911	1					
ANR	5206148	BreakStatement	break ;	445:2:12189:12194	5205911	21	True				
ANR	5206149	Label	case '|' :	446:1:12197:12205	5205911	22	True				
ANR	5206150	ExpressionStatement	SETERROR ( R_REGEX_EMPTY )	447:2:12209:12232	5205911	23	True				
ANR	5206151	CallExpression	SETERROR ( R_REGEX_EMPTY )		5205911	0					
ANR	5206152	Callee	SETERROR		5205911	0					
ANR	5206153	Identifier	SETERROR		5205911	0					
ANR	5206154	ArgumentList	R_REGEX_EMPTY		5205911	1					
ANR	5206155	Argument	R_REGEX_EMPTY		5205911	0					
ANR	5206156	Identifier	R_REGEX_EMPTY		5205911	0					
ANR	5206157	BreakStatement	break ;	448:2:12236:12241	5205911	24	True				
ANR	5206158	Label	case '*' :	449:1:12244:12252	5205911	25	True				
ANR	5206159	Label	case '+' :	450:1:12255:12263	5205911	26	True				
ANR	5206160	Label	case '?' :	451:1:12266:12274	5205911	27	True				
ANR	5206161	ExpressionStatement	SETERROR ( R_REGEX_BADRPT )	452:2:12278:12302	5205911	28	True				
ANR	5206162	CallExpression	SETERROR ( R_REGEX_BADRPT )		5205911	0					
ANR	5206163	Callee	SETERROR		5205911	0					
ANR	5206164	Identifier	SETERROR		5205911	0					
ANR	5206165	ArgumentList	R_REGEX_BADRPT		5205911	1					
ANR	5206166	Argument	R_REGEX_BADRPT		5205911	0					
ANR	5206167	Identifier	R_REGEX_BADRPT		5205911	0					
ANR	5206168	BreakStatement	break ;	453:2:12306:12311	5205911	29	True				
ANR	5206169	Label	case '.' :	454:1:12314:12322	5205911	30	True				
ANR	5206170	IfStatement	if ( p -> g -> cflags & R_REGEX_NEWLINE )		5205911	31					
ANR	5206171	Condition	p -> g -> cflags & R_REGEX_NEWLINE	455:6:12330:12359	5205911	0	True				
ANR	5206172	BitAndExpression	p -> g -> cflags & R_REGEX_NEWLINE		5205911	0		&			
ANR	5206173	PtrMemberAccess	p -> g -> cflags		5205911	0					
ANR	5206174	PtrMemberAccess	p -> g		5205911	0					
ANR	5206175	Identifier	p		5205911	0					
ANR	5206176	Identifier	g		5205911	1					
ANR	5206177	Identifier	cflags		5205911	1					
ANR	5206178	Identifier	R_REGEX_NEWLINE		5205911	1					
ANR	5206179	CompoundStatement		56:38:908:908	5205911	1					
ANR	5206180	ExpressionStatement	nonnewline ( p )	456:3:12367:12380	5205911	0	True				
ANR	5206181	CallExpression	nonnewline ( p )		5205911	0					
ANR	5206182	Callee	nonnewline		5205911	0					
ANR	5206183	Identifier	nonnewline		5205911	0					
ANR	5206184	ArgumentList	p		5205911	1					
ANR	5206185	Argument	p		5205911	0					
ANR	5206186	Identifier	p		5205911	0					
ANR	5206187	ElseStatement	else		5205911	0					
ANR	5206188	CompoundStatement		58:9:937:937	5205911	0					
ANR	5206189	ExpressionStatement	"EMIT ( OANY , 0 )"	458:3:12396:12410	5205911	0	True				
ANR	5206190	CallExpression	"EMIT ( OANY , 0 )"		5205911	0					
ANR	5206191	Callee	EMIT		5205911	0					
ANR	5206192	Identifier	EMIT		5205911	0					
ANR	5206193	ArgumentList	OANY		5205911	1					
ANR	5206194	Argument	OANY		5205911	0					
ANR	5206195	Identifier	OANY		5205911	0					
ANR	5206196	Argument	0		5205911	1					
ANR	5206197	PrimaryExpression	0		5205911	0					
ANR	5206198	BreakStatement	break ;	460:2:12418:12423	5205911	32	True				
ANR	5206199	Label	case '[' :	461:1:12426:12434	5205911	33	True				
ANR	5206200	ExpressionStatement	p_bracket ( p )	462:2:12438:12450	5205911	34	True				
ANR	5206201	CallExpression	p_bracket ( p )		5205911	0					
ANR	5206202	Callee	p_bracket		5205911	0					
ANR	5206203	Identifier	p_bracket		5205911	0					
ANR	5206204	ArgumentList	p		5205911	1					
ANR	5206205	Argument	p		5205911	0					
ANR	5206206	Identifier	p		5205911	0					
ANR	5206207	BreakStatement	break ;	463:2:12454:12459	5205911	35	True				
ANR	5206208	Label	case '\\\\' :	464:1:12462:12471	5205911	36	True				
ANR	5206209	ExpressionStatement	"REQUIRE ( MORE ( ) , R_REGEX_EESCAPE )"	465:2:12475:12507	5205911	37	True				
ANR	5206210	CallExpression	"REQUIRE ( MORE ( ) , R_REGEX_EESCAPE )"		5205911	0					
ANR	5206211	Callee	REQUIRE		5205911	0					
ANR	5206212	Identifier	REQUIRE		5205911	0					
ANR	5206213	ArgumentList	MORE ( )		5205911	1					
ANR	5206214	Argument	MORE ( )		5205911	0					
ANR	5206215	CallExpression	MORE ( )		5205911	0					
ANR	5206216	Callee	MORE		5205911	0					
ANR	5206217	Identifier	MORE		5205911	0					
ANR	5206218	ArgumentList			5205911	1					
ANR	5206219	Argument	R_REGEX_EESCAPE		5205911	1					
ANR	5206220	Identifier	R_REGEX_EESCAPE		5205911	0					
ANR	5206221	ExpressionStatement	c = GETNEXT ( )	466:2:12511:12524	5205911	38	True				
ANR	5206222	AssignmentExpression	c = GETNEXT ( )		5205911	0		=			
ANR	5206223	Identifier	c		5205911	0					
ANR	5206224	CallExpression	GETNEXT ( )		5205911	1					
ANR	5206225	Callee	GETNEXT		5205911	0					
ANR	5206226	Identifier	GETNEXT		5205911	0					
ANR	5206227	ArgumentList			5205911	1					
ANR	5206228	IfStatement	if ( ! isalpha ( c ) )		5205911	39					
ANR	5206229	Condition	! isalpha ( c )	467:6:12532:12542	5205911	0	True				
ANR	5206230	UnaryOperationExpression	! isalpha ( c )		5205911	0					
ANR	5206231	UnaryOperator	!		5205911	0					
ANR	5206232	CallExpression	isalpha ( c )		5205911	1					
ANR	5206233	Callee	isalpha		5205911	0					
ANR	5206234	Identifier	isalpha		5205911	0					
ANR	5206235	ArgumentList	c		5205911	1					
ANR	5206236	Argument	c		5205911	0					
ANR	5206237	Identifier	c		5205911	0					
ANR	5206238	CompoundStatement		68:19:1091:1091	5205911	1					
ANR	5206239	ExpressionStatement	"ordinary ( p , c )"	468:3:12550:12564	5205911	0	True				
ANR	5206240	CallExpression	"ordinary ( p , c )"		5205911	0					
ANR	5206241	Callee	ordinary		5205911	0					
ANR	5206242	Identifier	ordinary		5205911	0					
ANR	5206243	ArgumentList	p		5205911	1					
ANR	5206244	Argument	p		5205911	0					
ANR	5206245	Identifier	p		5205911	0					
ANR	5206246	Argument	c		5205911	1					
ANR	5206247	Identifier	c		5205911	0					
ANR	5206248	ElseStatement	else		5205911	0					
ANR	5206249	CompoundStatement		70:9:1121:1121	5205911	0					
ANR	5206250	ExpressionStatement	"special ( p , c )"	470:3:12580:12593	5205911	0	True				
ANR	5206251	CallExpression	"special ( p , c )"		5205911	0					
ANR	5206252	Callee	special		5205911	0					
ANR	5206253	Identifier	special		5205911	0					
ANR	5206254	ArgumentList	p		5205911	1					
ANR	5206255	Argument	p		5205911	0					
ANR	5206256	Identifier	p		5205911	0					
ANR	5206257	Argument	c		5205911	1					
ANR	5206258	Identifier	c		5205911	0					
ANR	5206259	BreakStatement	break ;	472:2:12601:12606	5205911	40	True				
ANR	5206260	Label	case '{' :	473:1:12609:12617	5205911	41	True				
ANR	5206261	ExpressionStatement	"REQUIRE ( ! MORE ( ) || ! isdigit ( ( ut8 ) PEEK ( ) ) , R_REGEX_BADRPT )"	474:2:12669:12726	5205911	42	True				
ANR	5206262	CallExpression	"REQUIRE ( ! MORE ( ) || ! isdigit ( ( ut8 ) PEEK ( ) ) , R_REGEX_BADRPT )"		5205911	0					
ANR	5206263	Callee	REQUIRE		5205911	0					
ANR	5206264	Identifier	REQUIRE		5205911	0					
ANR	5206265	ArgumentList	! MORE ( ) || ! isdigit ( ( ut8 ) PEEK ( ) )		5205911	1					
ANR	5206266	Argument	! MORE ( ) || ! isdigit ( ( ut8 ) PEEK ( ) )		5205911	0					
ANR	5206267	OrExpression	! MORE ( ) || ! isdigit ( ( ut8 ) PEEK ( ) )		5205911	0		||			
ANR	5206268	UnaryOperationExpression	! MORE ( )		5205911	0					
ANR	5206269	UnaryOperator	!		5205911	0					
ANR	5206270	CallExpression	MORE ( )		5205911	1					
ANR	5206271	Callee	MORE		5205911	0					
ANR	5206272	Identifier	MORE		5205911	0					
ANR	5206273	ArgumentList			5205911	1					
ANR	5206274	UnaryOperationExpression	! isdigit ( ( ut8 ) PEEK ( ) )		5205911	1					
ANR	5206275	UnaryOperator	!		5205911	0					
ANR	5206276	CallExpression	isdigit ( ( ut8 ) PEEK ( ) )		5205911	1					
ANR	5206277	Callee	isdigit		5205911	0					
ANR	5206278	Identifier	isdigit		5205911	0					
ANR	5206279	ArgumentList	( ut8 ) PEEK ( )		5205911	1					
ANR	5206280	Argument	( ut8 ) PEEK ( )		5205911	0					
ANR	5206281	CastExpression	( ut8 ) PEEK ( )		5205911	0					
ANR	5206282	CastTarget	ut8		5205911	0					
ANR	5206283	CallExpression	PEEK ( )		5205911	1					
ANR	5206284	Callee	PEEK		5205911	0					
ANR	5206285	Identifier	PEEK		5205911	0					
ANR	5206286	ArgumentList			5205911	1					
ANR	5206287	Argument	R_REGEX_BADRPT		5205911	1					
ANR	5206288	Identifier	R_REGEX_BADRPT		5205911	0					
ANR	5206289	Label	default :	476:1:12749:12756	5205911	43	True				
ANR	5206290	Identifier	default		5205911	0					
ANR	5206291	ExpressionStatement	"ordinary ( p , c )"	477:2:12760:12774	5205911	44	True				
ANR	5206292	CallExpression	"ordinary ( p , c )"		5205911	0					
ANR	5206293	Callee	ordinary		5205911	0					
ANR	5206294	Identifier	ordinary		5205911	0					
ANR	5206295	ArgumentList	p		5205911	1					
ANR	5206296	Argument	p		5205911	0					
ANR	5206297	Identifier	p		5205911	0					
ANR	5206298	Argument	c		5205911	1					
ANR	5206299	Identifier	c		5205911	0					
ANR	5206300	BreakStatement	break ;	478:2:12778:12783	5205911	45	True				
ANR	5206301	IfStatement	if ( ! MORE ( ) )		5205911	10					
ANR	5206302	Condition	! MORE ( )	481:5:12794:12801	5205911	0	True				
ANR	5206303	UnaryOperationExpression	! MORE ( )		5205911	0					
ANR	5206304	UnaryOperator	!		5205911	0					
ANR	5206305	CallExpression	MORE ( )		5205911	1					
ANR	5206306	Callee	MORE		5205911	0					
ANR	5206307	Identifier	MORE		5205911	0					
ANR	5206308	ArgumentList			5205911	1					
ANR	5206309	CompoundStatement		82:15:1350:1350	5205911	1					
ANR	5206310	ReturnStatement	return ;	482:2:12808:12814	5205911	0	True				
ANR	5206311	ExpressionStatement	c = PEEK ( )	484:1:12820:12830	5205911	11	True				
ANR	5206312	AssignmentExpression	c = PEEK ( )		5205911	0		=			
ANR	5206313	Identifier	c		5205911	0					
ANR	5206314	CallExpression	PEEK ( )		5205911	1					
ANR	5206315	Callee	PEEK		5205911	0					
ANR	5206316	Identifier	PEEK		5205911	0					
ANR	5206317	ArgumentList			5205911	1					
ANR	5206318	IfStatement	if ( ! ( c == '*' || c == '+' || c == '?' || ( c == '{' && MORE2 ( ) && isdigit ( ( ut8 ) PEEK2 ( ) ) ) ) )		5205911	12					
ANR	5206319	Condition	! ( c == '*' || c == '+' || c == '?' || ( c == '{' && MORE2 ( ) && isdigit ( ( ut8 ) PEEK2 ( ) ) ) )	486:5:12890:12983	5205911	0	True				
ANR	5206320	UnaryOperationExpression	! ( c == '*' || c == '+' || c == '?' || ( c == '{' && MORE2 ( ) && isdigit ( ( ut8 ) PEEK2 ( ) ) ) )		5205911	0					
ANR	5206321	UnaryOperator	!		5205911	0					
ANR	5206322	OrExpression	c == '*' || c == '+' || c == '?' || ( c == '{' && MORE2 ( ) && isdigit ( ( ut8 ) PEEK2 ( ) ) )		5205911	1		||			
ANR	5206323	EqualityExpression	c == '*'		5205911	0		==			
ANR	5206324	Identifier	c		5205911	0					
ANR	5206325	PrimaryExpression	'*'		5205911	1					
ANR	5206326	OrExpression	c == '+' || c == '?' || ( c == '{' && MORE2 ( ) && isdigit ( ( ut8 ) PEEK2 ( ) ) )		5205911	1		||			
ANR	5206327	EqualityExpression	c == '+'		5205911	0		==			
ANR	5206328	Identifier	c		5205911	0					
ANR	5206329	PrimaryExpression	'+'		5205911	1					
ANR	5206330	OrExpression	c == '?' || ( c == '{' && MORE2 ( ) && isdigit ( ( ut8 ) PEEK2 ( ) ) )		5205911	1		||			
ANR	5206331	EqualityExpression	c == '?'		5205911	0		==			
ANR	5206332	Identifier	c		5205911	0					
ANR	5206333	PrimaryExpression	'?'		5205911	1					
ANR	5206334	AndExpression	c == '{' && MORE2 ( ) && isdigit ( ( ut8 ) PEEK2 ( ) )		5205911	1		&&			
ANR	5206335	EqualityExpression	c == '{'		5205911	0		==			
ANR	5206336	Identifier	c		5205911	0					
ANR	5206337	PrimaryExpression	'{'		5205911	1					
ANR	5206338	AndExpression	MORE2 ( ) && isdigit ( ( ut8 ) PEEK2 ( ) )		5205911	1		&&			
ANR	5206339	CallExpression	MORE2 ( )		5205911	0					
ANR	5206340	Callee	MORE2		5205911	0					
ANR	5206341	Identifier	MORE2		5205911	0					
ANR	5206342	ArgumentList			5205911	1					
ANR	5206343	CallExpression	isdigit ( ( ut8 ) PEEK2 ( ) )		5205911	1					
ANR	5206344	Callee	isdigit		5205911	0					
ANR	5206345	Identifier	isdigit		5205911	0					
ANR	5206346	ArgumentList	( ut8 ) PEEK2 ( )		5205911	1					
ANR	5206347	Argument	( ut8 ) PEEK2 ( )		5205911	0					
ANR	5206348	CastExpression	( ut8 ) PEEK2 ( )		5205911	0					
ANR	5206349	CastTarget	ut8		5205911	0					
ANR	5206350	CallExpression	PEEK2 ( )		5205911	1					
ANR	5206351	Callee	PEEK2		5205911	0					
ANR	5206352	Identifier	PEEK2		5205911	0					
ANR	5206353	ArgumentList			5205911	1					
ANR	5206354	CompoundStatement		88:58:1532:1532	5205911	1					
ANR	5206355	ReturnStatement	return ;	488:2:12990:12996	5205911	0	True				
ANR	5206356	ExpressionStatement	NEXT ( )	490:1:13034:13040	5205911	13	True				
ANR	5206357	CallExpression	NEXT ( )		5205911	0					
ANR	5206358	Callee	NEXT		5205911	0					
ANR	5206359	Identifier	NEXT		5205911	0					
ANR	5206360	ArgumentList			5205911	1					
ANR	5206361	ExpressionStatement	"REQUIRE ( ! wascaret , R_REGEX_BADRPT )"	492:1:13044:13078	5205911	14	True				
ANR	5206362	CallExpression	"REQUIRE ( ! wascaret , R_REGEX_BADRPT )"		5205911	0					
ANR	5206363	Callee	REQUIRE		5205911	0					
ANR	5206364	Identifier	REQUIRE		5205911	0					
ANR	5206365	ArgumentList	! wascaret		5205911	1					
ANR	5206366	Argument	! wascaret		5205911	0					
ANR	5206367	UnaryOperationExpression	! wascaret		5205911	0					
ANR	5206368	UnaryOperator	!		5205911	0					
ANR	5206369	Identifier	wascaret		5205911	1					
ANR	5206370	Argument	R_REGEX_BADRPT		5205911	1					
ANR	5206371	Identifier	R_REGEX_BADRPT		5205911	0					
ANR	5206372	SwitchStatement	switch ( c )		5205911	15					
ANR	5206373	Condition	c	493:9:13089:13089	5205911	0	True				
ANR	5206374	Identifier	c		5205911	0					
ANR	5206375	CompoundStatement		94:12:1638:1638	5205911	1					
ANR	5206376	Label	case '*' :	494:1:13095:13103	5205911	0	True				
ANR	5206377	ExpressionStatement	"INSERT ( OPLUS_ , pos )"	496:2:13191:13210	5205911	1	True				
ANR	5206378	CallExpression	"INSERT ( OPLUS_ , pos )"		5205911	0					
ANR	5206379	Callee	INSERT		5205911	0					
ANR	5206380	Identifier	INSERT		5205911	0					
ANR	5206381	ArgumentList	OPLUS_		5205911	1					
ANR	5206382	Argument	OPLUS_		5205911	0					
ANR	5206383	Identifier	OPLUS_		5205911	0					
ANR	5206384	Argument	pos		5205911	1					
ANR	5206385	Identifier	pos		5205911	0					
ANR	5206386	ExpressionStatement	"ASTERN ( O_PLUS , pos )"	497:2:13214:13233	5205911	2	True				
ANR	5206387	CallExpression	"ASTERN ( O_PLUS , pos )"		5205911	0					
ANR	5206388	Callee	ASTERN		5205911	0					
ANR	5206389	Identifier	ASTERN		5205911	0					
ANR	5206390	ArgumentList	O_PLUS		5205911	1					
ANR	5206391	Argument	O_PLUS		5205911	0					
ANR	5206392	Identifier	O_PLUS		5205911	0					
ANR	5206393	Argument	pos		5205911	1					
ANR	5206394	Identifier	pos		5205911	0					
ANR	5206395	ExpressionStatement	"INSERT ( OQUEST_ , pos )"	498:2:13237:13257	5205911	3	True				
ANR	5206396	CallExpression	"INSERT ( OQUEST_ , pos )"		5205911	0					
ANR	5206397	Callee	INSERT		5205911	0					
ANR	5206398	Identifier	INSERT		5205911	0					
ANR	5206399	ArgumentList	OQUEST_		5205911	1					
ANR	5206400	Argument	OQUEST_		5205911	0					
ANR	5206401	Identifier	OQUEST_		5205911	0					
ANR	5206402	Argument	pos		5205911	1					
ANR	5206403	Identifier	pos		5205911	0					
ANR	5206404	ExpressionStatement	"ASTERN ( O_QUEST , pos )"	499:2:13261:13281	5205911	4	True				
ANR	5206405	CallExpression	"ASTERN ( O_QUEST , pos )"		5205911	0					
ANR	5206406	Callee	ASTERN		5205911	0					
ANR	5206407	Identifier	ASTERN		5205911	0					
ANR	5206408	ArgumentList	O_QUEST		5205911	1					
ANR	5206409	Argument	O_QUEST		5205911	0					
ANR	5206410	Identifier	O_QUEST		5205911	0					
ANR	5206411	Argument	pos		5205911	1					
ANR	5206412	Identifier	pos		5205911	0					
ANR	5206413	BreakStatement	break ;	500:2:13285:13290	5205911	5	True				
ANR	5206414	Label	case '+' :	501:1:13293:13301	5205911	6	True				
ANR	5206415	ExpressionStatement	"INSERT ( OPLUS_ , pos )"	502:2:13305:13324	5205911	7	True				
ANR	5206416	CallExpression	"INSERT ( OPLUS_ , pos )"		5205911	0					
ANR	5206417	Callee	INSERT		5205911	0					
ANR	5206418	Identifier	INSERT		5205911	0					
ANR	5206419	ArgumentList	OPLUS_		5205911	1					
ANR	5206420	Argument	OPLUS_		5205911	0					
ANR	5206421	Identifier	OPLUS_		5205911	0					
ANR	5206422	Argument	pos		5205911	1					
ANR	5206423	Identifier	pos		5205911	0					
ANR	5206424	ExpressionStatement	"ASTERN ( O_PLUS , pos )"	503:2:13328:13347	5205911	8	True				
ANR	5206425	CallExpression	"ASTERN ( O_PLUS , pos )"		5205911	0					
ANR	5206426	Callee	ASTERN		5205911	0					
ANR	5206427	Identifier	ASTERN		5205911	0					
ANR	5206428	ArgumentList	O_PLUS		5205911	1					
ANR	5206429	Argument	O_PLUS		5205911	0					
ANR	5206430	Identifier	O_PLUS		5205911	0					
ANR	5206431	Argument	pos		5205911	1					
ANR	5206432	Identifier	pos		5205911	0					
ANR	5206433	BreakStatement	break ;	504:2:13351:13356	5205911	9	True				
ANR	5206434	Label	case '?' :	505:1:13359:13367	5205911	10	True				
ANR	5206435	ExpressionStatement	"INSERT ( OCH_ , pos )"	507:2:13431:13448	5205911	11	True				
ANR	5206436	CallExpression	"INSERT ( OCH_ , pos )"		5205911	0					
ANR	5206437	Callee	INSERT		5205911	0					
ANR	5206438	Identifier	INSERT		5205911	0					
ANR	5206439	ArgumentList	OCH_		5205911	1					
ANR	5206440	Argument	OCH_		5205911	0					
ANR	5206441	Identifier	OCH_		5205911	0					
ANR	5206442	Argument	pos		5205911	1					
ANR	5206443	Identifier	pos		5205911	0					
ANR	5206444	ExpressionStatement	"ASTERN ( OOR1 , pos )"	508:2:13481:13498	5205911	12	True				
ANR	5206445	CallExpression	"ASTERN ( OOR1 , pos )"		5205911	0					
ANR	5206446	Callee	ASTERN		5205911	0					
ANR	5206447	Identifier	ASTERN		5205911	0					
ANR	5206448	ArgumentList	OOR1		5205911	1					
ANR	5206449	Argument	OOR1		5205911	0					
ANR	5206450	Identifier	OOR1		5205911	0					
ANR	5206451	Argument	pos		5205911	1					
ANR	5206452	Identifier	pos		5205911	0					
ANR	5206453	ExpressionStatement	AHEAD ( pos )	509:2:13526:13536	5205911	13	True				
ANR	5206454	CallExpression	AHEAD ( pos )		5205911	0					
ANR	5206455	Callee	AHEAD		5205911	0					
ANR	5206456	Identifier	AHEAD		5205911	0					
ANR	5206457	ArgumentList	pos		5205911	1					
ANR	5206458	Argument	pos		5205911	0					
ANR	5206459	Identifier	pos		5205911	0					
ANR	5206460	ExpressionStatement	"EMIT ( OOR2 , 0 )"	510:2:13561:13574	5205911	14	True				
ANR	5206461	CallExpression	"EMIT ( OOR2 , 0 )"		5205911	0					
ANR	5206462	Callee	EMIT		5205911	0					
ANR	5206463	Identifier	EMIT		5205911	0					
ANR	5206464	ArgumentList	OOR2		5205911	1					
ANR	5206465	Argument	OOR2		5205911	0					
ANR	5206466	Identifier	OOR2		5205911	0					
ANR	5206467	Argument	0		5205911	1					
ANR	5206468	PrimaryExpression	0		5205911	0					
ANR	5206469	ExpressionStatement	AHEAD ( THERE ( ) )	511:2:13607:13621	5205911	15	True				
ANR	5206470	CallExpression	AHEAD ( THERE ( ) )		5205911	0					
ANR	5206471	Callee	AHEAD		5205911	0					
ANR	5206472	Identifier	AHEAD		5205911	0					
ANR	5206473	ArgumentList	THERE ( )		5205911	1					
ANR	5206474	Argument	THERE ( )		5205911	0					
ANR	5206475	CallExpression	THERE ( )		5205911	0					
ANR	5206476	Callee	THERE		5205911	0					
ANR	5206477	Identifier	THERE		5205911	0					
ANR	5206478	ArgumentList			5205911	1					
ANR	5206479	ExpressionStatement	"ASTERN ( O_CH , THERETHERE ( ) )"	512:2:13646:13672	5205911	16	True				
ANR	5206480	CallExpression	"ASTERN ( O_CH , THERETHERE ( ) )"		5205911	0					
ANR	5206481	Callee	ASTERN		5205911	0					
ANR	5206482	Identifier	ASTERN		5205911	0					
ANR	5206483	ArgumentList	O_CH		5205911	1					
ANR	5206484	Argument	O_CH		5205911	0					
ANR	5206485	Identifier	O_CH		5205911	0					
ANR	5206486	Argument	THERETHERE ( )		5205911	1					
ANR	5206487	CallExpression	THERETHERE ( )		5205911	0					
ANR	5206488	Callee	THERETHERE		5205911	0					
ANR	5206489	Identifier	THERETHERE		5205911	0					
ANR	5206490	ArgumentList			5205911	1					
ANR	5206491	BreakStatement	break ;	513:2:13676:13681	5205911	17	True				
ANR	5206492	Label	case '{' :	514:1:13684:13692	5205911	18	True				
ANR	5206493	ExpressionStatement	count = p_count ( p )	515:2:13696:13714	5205911	19	True				
ANR	5206494	AssignmentExpression	count = p_count ( p )		5205911	0		=			
ANR	5206495	Identifier	count		5205911	0					
ANR	5206496	CallExpression	p_count ( p )		5205911	1					
ANR	5206497	Callee	p_count		5205911	0					
ANR	5206498	Identifier	p_count		5205911	0					
ANR	5206499	ArgumentList	p		5205911	1					
ANR	5206500	Argument	p		5205911	0					
ANR	5206501	Identifier	p		5205911	0					
ANR	5206502	IfStatement	"if ( EAT ( ',' ) )"		5205911	20					
ANR	5206503	Condition	"EAT ( ',' )"	516:6:13722:13729	5205911	0	True				
ANR	5206504	CallExpression	"EAT ( ',' )"		5205911	0					
ANR	5206505	Callee	EAT		5205911	0					
ANR	5206506	Identifier	EAT		5205911	0					
ANR	5206507	ArgumentList	"','"		5205911	1					
ANR	5206508	Argument	"','"		5205911	0					
ANR	5206509	PrimaryExpression	"','"		5205911	0					
ANR	5206510	CompoundStatement		117:16:2278:2278	5205911	1					
ANR	5206511	IfStatement	if ( isdigit ( ( ut8 ) PEEK ( ) ) )		5205911	0					
ANR	5206512	Condition	isdigit ( ( ut8 ) PEEK ( ) )	517:7:13741:13760	5205911	0	True				
ANR	5206513	CallExpression	isdigit ( ( ut8 ) PEEK ( ) )		5205911	0					
ANR	5206514	Callee	isdigit		5205911	0					
ANR	5206515	Identifier	isdigit		5205911	0					
ANR	5206516	ArgumentList	( ut8 ) PEEK ( )		5205911	1					
ANR	5206517	Argument	( ut8 ) PEEK ( )		5205911	0					
ANR	5206518	CastExpression	( ut8 ) PEEK ( )		5205911	0					
ANR	5206519	CastTarget	ut8		5205911	0					
ANR	5206520	CallExpression	PEEK ( )		5205911	1					
ANR	5206521	Callee	PEEK		5205911	0					
ANR	5206522	Identifier	PEEK		5205911	0					
ANR	5206523	ArgumentList			5205911	1					
ANR	5206524	CompoundStatement		118:29:2309:2309	5205911	1					
ANR	5206525	ExpressionStatement	count2 = p_count ( p )	518:4:13769:13788	5205911	0	True				
ANR	5206526	AssignmentExpression	count2 = p_count ( p )		5205911	0		=			
ANR	5206527	Identifier	count2		5205911	0					
ANR	5206528	CallExpression	p_count ( p )		5205911	1					
ANR	5206529	Callee	p_count		5205911	0					
ANR	5206530	Identifier	p_count		5205911	0					
ANR	5206531	ArgumentList	p		5205911	1					
ANR	5206532	Argument	p		5205911	0					
ANR	5206533	Identifier	p		5205911	0					
ANR	5206534	ExpressionStatement	"REQUIRE ( count <= count2 , R_REGEX_BADBR )"	519:4:13794:13833	5205911	1	True				
ANR	5206535	CallExpression	"REQUIRE ( count <= count2 , R_REGEX_BADBR )"		5205911	0					
ANR	5206536	Callee	REQUIRE		5205911	0					
ANR	5206537	Identifier	REQUIRE		5205911	0					
ANR	5206538	ArgumentList	count <= count2		5205911	1					
ANR	5206539	Argument	count <= count2		5205911	0					
ANR	5206540	RelationalExpression	count <= count2		5205911	0		<=			
ANR	5206541	Identifier	count		5205911	0					
ANR	5206542	Identifier	count2		5205911	1					
ANR	5206543	Argument	R_REGEX_BADBR		5205911	1					
ANR	5206544	Identifier	R_REGEX_BADBR		5205911	0					
ANR	5206545	ElseStatement	else		5205911	0					
ANR	5206546	CompoundStatement		121:10:2391:2391	5205911	0					
ANR	5206547	ExpressionStatement	count2 = INTFINITY	521:4:13882:13900	5205911	0	True				
ANR	5206548	AssignmentExpression	count2 = INTFINITY		5205911	0		=			
ANR	5206549	Identifier	count2		5205911	0					
ANR	5206550	Identifier	INTFINITY		5205911	1					
ANR	5206551	ElseStatement	else		5205911	0					
ANR	5206552	CompoundStatement		124:9:2462:2462	5205911	0					
ANR	5206553	ExpressionStatement	count2 = count	524:3:13948:13962	5205911	0	True				
ANR	5206554	AssignmentExpression	count2 = count		5205911	0		=			
ANR	5206555	Identifier	count2		5205911	0					
ANR	5206556	Identifier	count		5205911	1					
ANR	5206557	ExpressionStatement	"repeat ( p , pos , count , count2 )"	526:2:13970:13999	5205911	21	True				
ANR	5206558	CallExpression	"repeat ( p , pos , count , count2 )"		5205911	0					
ANR	5206559	Callee	repeat		5205911	0					
ANR	5206560	Identifier	repeat		5205911	0					
ANR	5206561	ArgumentList	p		5205911	1					
ANR	5206562	Argument	p		5205911	0					
ANR	5206563	Identifier	p		5205911	0					
ANR	5206564	Argument	pos		5205911	1					
ANR	5206565	Identifier	pos		5205911	0					
ANR	5206566	Argument	count		5205911	2					
ANR	5206567	Identifier	count		5205911	0					
ANR	5206568	Argument	count2		5205911	3					
ANR	5206569	Identifier	count2		5205911	0					
ANR	5206570	IfStatement	if ( ! EAT ( '}' ) )		5205911	22					
ANR	5206571	Condition	! EAT ( '}' )	527:6:14007:14015	5205911	0	True				
ANR	5206572	UnaryOperationExpression	! EAT ( '}' )		5205911	0					
ANR	5206573	UnaryOperator	!		5205911	0					
ANR	5206574	CallExpression	EAT ( '}' )		5205911	1					
ANR	5206575	Callee	EAT		5205911	0					
ANR	5206576	Identifier	EAT		5205911	0					
ANR	5206577	ArgumentList	'}'		5205911	1					
ANR	5206578	Argument	'}'		5205911	0					
ANR	5206579	PrimaryExpression	'}'		5205911	0					
ANR	5206580	CompoundStatement		128:17:2564:2564	5205911	1					
ANR	5206581	WhileStatement	while ( MORE ( ) && PEEK ( ) != '}' )		5205911	0					
ANR	5206582	Condition	MORE ( ) && PEEK ( ) != '}'	528:10:14053:14077	5205911	0	True				
ANR	5206583	AndExpression	MORE ( ) && PEEK ( ) != '}'		5205911	0		&&			
ANR	5206584	CallExpression	MORE ( )		5205911	0					
ANR	5206585	Callee	MORE		5205911	0					
ANR	5206586	Identifier	MORE		5205911	0					
ANR	5206587	ArgumentList			5205911	1					
ANR	5206588	EqualityExpression	PEEK ( ) != '}'		5205911	1		!=			
ANR	5206589	CallExpression	PEEK ( )		5205911	0					
ANR	5206590	Callee	PEEK		5205911	0					
ANR	5206591	Identifier	PEEK		5205911	0					
ANR	5206592	ArgumentList			5205911	1					
ANR	5206593	PrimaryExpression	'}'		5205911	1					
ANR	5206594	CompoundStatement		129:37:2626:2626	5205911	1					
ANR	5206595	ExpressionStatement	NEXT ( )	529:4:14086:14093	5205911	0	True				
ANR	5206596	CallExpression	NEXT ( )		5205911	0					
ANR	5206597	Callee	NEXT		5205911	0					
ANR	5206598	Identifier	NEXT		5205911	0					
ANR	5206599	ArgumentList			5205911	1					
ANR	5206600	ExpressionStatement	"REQUIRE ( MORE ( ) , R_REGEX_EBRACE )"	531:3:14103:14134	5205911	1	True				
ANR	5206601	CallExpression	"REQUIRE ( MORE ( ) , R_REGEX_EBRACE )"		5205911	0					
ANR	5206602	Callee	REQUIRE		5205911	0					
ANR	5206603	Identifier	REQUIRE		5205911	0					
ANR	5206604	ArgumentList	MORE ( )		5205911	1					
ANR	5206605	Argument	MORE ( )		5205911	0					
ANR	5206606	CallExpression	MORE ( )		5205911	0					
ANR	5206607	Callee	MORE		5205911	0					
ANR	5206608	Identifier	MORE		5205911	0					
ANR	5206609	ArgumentList			5205911	1					
ANR	5206610	Argument	R_REGEX_EBRACE		5205911	1					
ANR	5206611	Identifier	R_REGEX_EBRACE		5205911	0					
ANR	5206612	ExpressionStatement	SETERROR ( R_REGEX_BADBR )	532:3:14139:14162	5205911	2	True				
ANR	5206613	CallExpression	SETERROR ( R_REGEX_BADBR )		5205911	0					
ANR	5206614	Callee	SETERROR		5205911	0					
ANR	5206615	Identifier	SETERROR		5205911	0					
ANR	5206616	ArgumentList	R_REGEX_BADBR		5205911	1					
ANR	5206617	Argument	R_REGEX_BADBR		5205911	0					
ANR	5206618	Identifier	R_REGEX_BADBR		5205911	0					
ANR	5206619	BreakStatement	break ;	534:2:14170:14175	5205911	23	True				
ANR	5206620	IfStatement	if ( ! MORE ( ) )		5205911	16					
ANR	5206621	Condition	! MORE ( )	537:5:14186:14193	5205911	0	True				
ANR	5206622	UnaryOperationExpression	! MORE ( )		5205911	0					
ANR	5206623	UnaryOperator	!		5205911	0					
ANR	5206624	CallExpression	MORE ( )		5205911	1					
ANR	5206625	Callee	MORE		5205911	0					
ANR	5206626	Identifier	MORE		5205911	0					
ANR	5206627	ArgumentList			5205911	1					
ANR	5206628	CompoundStatement		138:15:2742:2742	5205911	1					
ANR	5206629	ReturnStatement	return ;	538:2:14200:14206	5205911	0	True				
ANR	5206630	ExpressionStatement	c = PEEK ( )	540:1:14212:14222	5205911	17	True				
ANR	5206631	AssignmentExpression	c = PEEK ( )		5205911	0		=			
ANR	5206632	Identifier	c		5205911	0					
ANR	5206633	CallExpression	PEEK ( )		5205911	1					
ANR	5206634	Callee	PEEK		5205911	0					
ANR	5206635	Identifier	PEEK		5205911	0					
ANR	5206636	ArgumentList			5205911	1					
ANR	5206637	IfStatement	if ( ! ( c == '*' || c == '+' || c == '?' || ( c == '{' && MORE2 ( ) && isdigit ( ( ut8 ) PEEK2 ( ) ) ) ) )		5205911	18					
ANR	5206638	Condition	! ( c == '*' || c == '+' || c == '?' || ( c == '{' && MORE2 ( ) && isdigit ( ( ut8 ) PEEK2 ( ) ) ) )	541:5:14229:14322	5205911	0	True				
ANR	5206639	UnaryOperationExpression	! ( c == '*' || c == '+' || c == '?' || ( c == '{' && MORE2 ( ) && isdigit ( ( ut8 ) PEEK2 ( ) ) ) )		5205911	0					
ANR	5206640	UnaryOperator	!		5205911	0					
ANR	5206641	OrExpression	c == '*' || c == '+' || c == '?' || ( c == '{' && MORE2 ( ) && isdigit ( ( ut8 ) PEEK2 ( ) ) )		5205911	1		||			
ANR	5206642	EqualityExpression	c == '*'		5205911	0		==			
ANR	5206643	Identifier	c		5205911	0					
ANR	5206644	PrimaryExpression	'*'		5205911	1					
ANR	5206645	OrExpression	c == '+' || c == '?' || ( c == '{' && MORE2 ( ) && isdigit ( ( ut8 ) PEEK2 ( ) ) )		5205911	1		||			
ANR	5206646	EqualityExpression	c == '+'		5205911	0		==			
ANR	5206647	Identifier	c		5205911	0					
ANR	5206648	PrimaryExpression	'+'		5205911	1					
ANR	5206649	OrExpression	c == '?' || ( c == '{' && MORE2 ( ) && isdigit ( ( ut8 ) PEEK2 ( ) ) )		5205911	1		||			
ANR	5206650	EqualityExpression	c == '?'		5205911	0		==			
ANR	5206651	Identifier	c		5205911	0					
ANR	5206652	PrimaryExpression	'?'		5205911	1					
ANR	5206653	AndExpression	c == '{' && MORE2 ( ) && isdigit ( ( ut8 ) PEEK2 ( ) )		5205911	1		&&			
ANR	5206654	EqualityExpression	c == '{'		5205911	0		==			
ANR	5206655	Identifier	c		5205911	0					
ANR	5206656	PrimaryExpression	'{'		5205911	1					
ANR	5206657	AndExpression	MORE2 ( ) && isdigit ( ( ut8 ) PEEK2 ( ) )		5205911	1		&&			
ANR	5206658	CallExpression	MORE2 ( )		5205911	0					
ANR	5206659	Callee	MORE2		5205911	0					
ANR	5206660	Identifier	MORE2		5205911	0					
ANR	5206661	ArgumentList			5205911	1					
ANR	5206662	CallExpression	isdigit ( ( ut8 ) PEEK2 ( ) )		5205911	1					
ANR	5206663	Callee	isdigit		5205911	0					
ANR	5206664	Identifier	isdigit		5205911	0					
ANR	5206665	ArgumentList	( ut8 ) PEEK2 ( )		5205911	1					
ANR	5206666	Argument	( ut8 ) PEEK2 ( )		5205911	0					
ANR	5206667	CastExpression	( ut8 ) PEEK2 ( )		5205911	0					
ANR	5206668	CastTarget	ut8		5205911	0					
ANR	5206669	CallExpression	PEEK2 ( )		5205911	1					
ANR	5206670	Callee	PEEK2		5205911	0					
ANR	5206671	Identifier	PEEK2		5205911	0					
ANR	5206672	ArgumentList			5205911	1					
ANR	5206673	CompoundStatement		143:58:2871:2871	5205911	1					
ANR	5206674	ReturnStatement	return ;	543:2:14329:14335	5205911	0	True				
ANR	5206675	ExpressionStatement	SETERROR ( R_REGEX_BADRPT )	545:1:14341:14365	5205911	19	True				
ANR	5206676	CallExpression	SETERROR ( R_REGEX_BADRPT )		5205911	0					
ANR	5206677	Callee	SETERROR		5205911	0					
ANR	5206678	Identifier	SETERROR		5205911	0					
ANR	5206679	ArgumentList	R_REGEX_BADRPT		5205911	1					
ANR	5206680	Argument	R_REGEX_BADRPT		5205911	0					
ANR	5206681	Identifier	R_REGEX_BADRPT		5205911	0					
ANR	5206682	ReturnType	static void		5205911	1					
ANR	5206683	Identifier	p_ere_exp		5205911	2					
ANR	5206684	ParameterList	struct parse * p		5205911	3					
ANR	5206685	Parameter	struct parse * p	400:22:11436:11450	5205911	0	True				
ANR	5206686	ParameterType	struct parse *		5205911	0					
ANR	5206687	Identifier	p		5205911	1					
ANR	5206688	CFGEntryNode	ENTRY		5205911		True				
ANR	5206689	CFGExitNode	EXIT		5205911		True				
ANR	5206690	Symbol	THERE		5205911						
ANR	5206691	Symbol	R_REGEX_BADRPT		5205911						
ANR	5206692	Symbol	subno		5205911						
ANR	5206693	Symbol	R_REGEX_EPAREN		5205911						
ANR	5206694	Symbol	INTFINITY		5205911						
ANR	5206695	Symbol	OEOL		5205911						
ANR	5206696	Symbol	O_QUEST		5205911						
ANR	5206697	Symbol	p -> pend		5205911						
ANR	5206698	Symbol	ORPAREN		5205911						
ANR	5206699	Symbol	* p -> pbegin		5205911						
ANR	5206700	Symbol	isdigit		5205911						
ANR	5206701	Symbol	p -> g		5205911						
ANR	5206702	Symbol	p -> pbegin		5205911						
ANR	5206703	Symbol	MORE2		5205911						
ANR	5206704	Symbol	O_PLUS		5205911						
ANR	5206705	Symbol	OOR2		5205911						
ANR	5206706	Symbol	USEEOL		5205911						
ANR	5206707	Symbol	count		5205911						
ANR	5206708	Symbol	PEEK2		5205911						
ANR	5206709	Symbol	R_REGEX_EBRACE		5205911						
ANR	5206710	Symbol	* p -> g		5205911						
ANR	5206711	Symbol	SEE		5205911						
ANR	5206712	Symbol	p -> g -> neol		5205911						
ANR	5206713	Symbol	OANY		5205911						
ANR	5206714	Symbol	EAT		5205911						
ANR	5206715	Symbol	R_REGEX_NEWLINE		5205911						
ANR	5206716	Symbol	count2		5205911						
ANR	5206717	Symbol	isalpha		5205911						
ANR	5206718	Symbol	THERETHERE		5205911						
ANR	5206719	Symbol	OPLUS_		5205911						
ANR	5206720	Symbol	OCH_		5205911						
ANR	5206721	Symbol	HERE		5205911						
ANR	5206722	Symbol	* p -> pend		5205911						
ANR	5206723	Symbol	OBOL		5205911						
ANR	5206724	Symbol	pos		5205911						
ANR	5206725	Symbol	OOR1		5205911						
ANR	5206726	Symbol	* * p		5205911						
ANR	5206727	Symbol	c		5205911						
ANR	5206728	Symbol	p -> g -> iflags		5205911						
ANR	5206729	Symbol	USEBOL		5205911						
ANR	5206730	Symbol	R_REGEX_EMPTY		5205911						
ANR	5206731	Symbol	* subno		5205911						
ANR	5206732	Symbol	R_REGEX_BADBR		5205911						
ANR	5206733	Symbol	OLPAREN		5205911						
ANR	5206734	Symbol	p -> g -> cflags		5205911						
ANR	5206735	Symbol	p		5205911						
ANR	5206736	Symbol	O_CH		5205911						
ANR	5206737	Symbol	MORE		5205911						
ANR	5206738	Symbol	GETNEXT		5205911						
ANR	5206739	Symbol	p -> g -> nbol		5205911						
ANR	5206740	Symbol	p -> g -> nsub		5205911						
ANR	5206741	Symbol	* p		5205911						
ANR	5206742	Symbol	R_REGEX_EESCAPE		5205911						
ANR	5206743	Symbol	wascaret		5205911						
ANR	5206744	Symbol	NPAREN		5205911						
ANR	5206745	Symbol	p_count		5205911						
ANR	5206746	Symbol	PEEK		5205911						
ANR	5206747	Symbol	OQUEST_		5205911						
ANR	5206748	Function	p_str	551:0:14424:14541							
ANR	5206749	FunctionDef	p_str (struct parse * p)		5206748	0					
ANR	5206750	CompoundStatement		551:35:14459:14541	5206748	0					
ANR	5206751	ExpressionStatement	"REQUIRE ( MORE ( ) , R_REGEX_EMPTY )"	552:1:14462:14492	5206748	0	True				
ANR	5206752	CallExpression	"REQUIRE ( MORE ( ) , R_REGEX_EMPTY )"		5206748	0					
ANR	5206753	Callee	REQUIRE		5206748	0					
ANR	5206754	Identifier	REQUIRE		5206748	0					
ANR	5206755	ArgumentList	MORE ( )		5206748	1					
ANR	5206756	Argument	MORE ( )		5206748	0					
ANR	5206757	CallExpression	MORE ( )		5206748	0					
ANR	5206758	Callee	MORE		5206748	0					
ANR	5206759	Identifier	MORE		5206748	0					
ANR	5206760	ArgumentList			5206748	1					
ANR	5206761	Argument	R_REGEX_EMPTY		5206748	1					
ANR	5206762	Identifier	R_REGEX_EMPTY		5206748	0					
ANR	5206763	WhileStatement	while ( MORE ( ) )		5206748	1					
ANR	5206764	Condition	MORE ( )	553:8:14502:14507	5206748	0	True				
ANR	5206765	CallExpression	MORE ( )		5206748	0					
ANR	5206766	Callee	MORE		5206748	0					
ANR	5206767	Identifier	MORE		5206748	0					
ANR	5206768	ArgumentList			5206748	1					
ANR	5206769	CompoundStatement		3:16:50:50	5206748	1					
ANR	5206770	ExpressionStatement	"ordinary ( p , GETNEXT ( ) )"	554:2:14514:14536	5206748	0	True				
ANR	5206771	CallExpression	"ordinary ( p , GETNEXT ( ) )"		5206748	0					
ANR	5206772	Callee	ordinary		5206748	0					
ANR	5206773	Identifier	ordinary		5206748	0					
ANR	5206774	ArgumentList	p		5206748	1					
ANR	5206775	Argument	p		5206748	0					
ANR	5206776	Identifier	p		5206748	0					
ANR	5206777	Argument	GETNEXT ( )		5206748	1					
ANR	5206778	CallExpression	GETNEXT ( )		5206748	0					
ANR	5206779	Callee	GETNEXT		5206748	0					
ANR	5206780	Identifier	GETNEXT		5206748	0					
ANR	5206781	ArgumentList			5206748	1					
ANR	5206782	ReturnType	static void		5206748	1					
ANR	5206783	Identifier	p_str		5206748	2					
ANR	5206784	ParameterList	struct parse * p		5206748	3					
ANR	5206785	Parameter	struct parse * p	551:18:14442:14456	5206748	0	True				
ANR	5206786	ParameterType	struct parse *		5206748	0					
ANR	5206787	Identifier	p		5206748	1					
ANR	5206788	CFGEntryNode	ENTRY		5206748		True				
ANR	5206789	CFGExitNode	EXIT		5206748		True				
ANR	5206790	Symbol	p		5206748						
ANR	5206791	Symbol	MORE		5206748						
ANR	5206792	Symbol	GETNEXT		5206748						
ANR	5206793	Symbol	R_REGEX_EMPTY		5206748						
ANR	5206794	Function	p_bre	568:0:15042:15634							
ANR	5206795	FunctionDef	"p_bre (struct parse * p , int end1 , int end2)"		5206794	0					
ANR	5206796	CompoundStatement		571:0:15176:15634	5206794	0					
ANR	5206797	IdentifierDeclStatement	sopno start = HERE ( ) ;	572:1:15179:15199	5206794	0	True				
ANR	5206798	IdentifierDecl	start = HERE ( )		5206794	0					
ANR	5206799	IdentifierDeclType	sopno		5206794	0					
ANR	5206800	Identifier	start		5206794	1					
ANR	5206801	AssignmentExpression	start = HERE ( )		5206794	2		=			
ANR	5206802	Identifier	start		5206794	0					
ANR	5206803	CallExpression	HERE ( )		5206794	1					
ANR	5206804	Callee	HERE		5206794	0					
ANR	5206805	Identifier	HERE		5206794	0					
ANR	5206806	ArgumentList			5206794	1					
ANR	5206807	IdentifierDeclStatement	int first = 1 ;	573:1:15202:15215	5206794	1	True				
ANR	5206808	IdentifierDecl	first = 1		5206794	0					
ANR	5206809	IdentifierDeclType	int		5206794	0					
ANR	5206810	Identifier	first		5206794	1					
ANR	5206811	AssignmentExpression	first = 1		5206794	2		=			
ANR	5206812	Identifier	first		5206794	0					
ANR	5206813	PrimaryExpression	1		5206794	1					
ANR	5206814	IdentifierDeclStatement	int wasdollar = 0 ;	574:1:15247:15264	5206794	2	True				
ANR	5206815	IdentifierDecl	wasdollar = 0		5206794	0					
ANR	5206816	IdentifierDeclType	int		5206794	0					
ANR	5206817	Identifier	wasdollar		5206794	1					
ANR	5206818	AssignmentExpression	wasdollar = 0		5206794	2		=			
ANR	5206819	Identifier	wasdollar		5206794	0					
ANR	5206820	PrimaryExpression	0		5206794	1					
ANR	5206821	IfStatement	if ( EAT ( '^' ) )		5206794	3					
ANR	5206822	Condition	EAT ( '^' )	576:5:15272:15279	5206794	0	True				
ANR	5206823	CallExpression	EAT ( '^' )		5206794	0					
ANR	5206824	Callee	EAT		5206794	0					
ANR	5206825	Identifier	EAT		5206794	0					
ANR	5206826	ArgumentList	'^'		5206794	1					
ANR	5206827	Argument	'^'		5206794	0					
ANR	5206828	PrimaryExpression	'^'		5206794	0					
ANR	5206829	CompoundStatement		6:15:105:105	5206794	1					
ANR	5206830	ExpressionStatement	"EMIT ( OBOL , 0 )"	577:2:15286:15299	5206794	0	True				
ANR	5206831	CallExpression	"EMIT ( OBOL , 0 )"		5206794	0					
ANR	5206832	Callee	EMIT		5206794	0					
ANR	5206833	Identifier	EMIT		5206794	0					
ANR	5206834	ArgumentList	OBOL		5206794	1					
ANR	5206835	Argument	OBOL		5206794	0					
ANR	5206836	Identifier	OBOL		5206794	0					
ANR	5206837	Argument	0		5206794	1					
ANR	5206838	PrimaryExpression	0		5206794	0					
ANR	5206839	ExpressionStatement	p -> g -> iflags |= USEBOL	578:2:15303:15325	5206794	1	True				
ANR	5206840	AssignmentExpression	p -> g -> iflags |= USEBOL		5206794	0		|=			
ANR	5206841	PtrMemberAccess	p -> g -> iflags		5206794	0					
ANR	5206842	PtrMemberAccess	p -> g		5206794	0					
ANR	5206843	Identifier	p		5206794	0					
ANR	5206844	Identifier	g		5206794	1					
ANR	5206845	Identifier	iflags		5206794	1					
ANR	5206846	Identifier	USEBOL		5206794	1					
ANR	5206847	ExpressionStatement	p -> g -> nbol ++	579:2:15329:15341	5206794	2	True				
ANR	5206848	PostIncDecOperationExpression	p -> g -> nbol ++		5206794	0					
ANR	5206849	PtrMemberAccess	p -> g -> nbol		5206794	0					
ANR	5206850	PtrMemberAccess	p -> g		5206794	0					
ANR	5206851	Identifier	p		5206794	0					
ANR	5206852	Identifier	g		5206794	1					
ANR	5206853	Identifier	nbol		5206794	1					
ANR	5206854	IncDec	++		5206794	1					
ANR	5206855	WhileStatement	"while ( MORE ( ) && ! SEETWO ( end1 , end2 ) )"		5206794	4					
ANR	5206856	Condition	"MORE ( ) && ! SEETWO ( end1 , end2 )"	581:8:15354:15382	5206794	0	True				
ANR	5206857	AndExpression	"MORE ( ) && ! SEETWO ( end1 , end2 )"		5206794	0		&&			
ANR	5206858	CallExpression	MORE ( )		5206794	0					
ANR	5206859	Callee	MORE		5206794	0					
ANR	5206860	Identifier	MORE		5206794	0					
ANR	5206861	ArgumentList			5206794	1					
ANR	5206862	UnaryOperationExpression	"! SEETWO ( end1 , end2 )"		5206794	1					
ANR	5206863	UnaryOperator	!		5206794	0					
ANR	5206864	CallExpression	"SEETWO ( end1 , end2 )"		5206794	1					
ANR	5206865	Callee	SEETWO		5206794	0					
ANR	5206866	Identifier	SEETWO		5206794	0					
ANR	5206867	ArgumentList	end1		5206794	1					
ANR	5206868	Argument	end1		5206794	0					
ANR	5206869	Identifier	end1		5206794	0					
ANR	5206870	Argument	end2		5206794	1					
ANR	5206871	Identifier	end2		5206794	0					
ANR	5206872	CompoundStatement		11:39:208:208	5206794	1					
ANR	5206873	ExpressionStatement	"wasdollar = p_simp_re ( p , first )"	582:2:15389:15420	5206794	0	True				
ANR	5206874	AssignmentExpression	"wasdollar = p_simp_re ( p , first )"		5206794	0		=			
ANR	5206875	Identifier	wasdollar		5206794	0					
ANR	5206876	CallExpression	"p_simp_re ( p , first )"		5206794	1					
ANR	5206877	Callee	p_simp_re		5206794	0					
ANR	5206878	Identifier	p_simp_re		5206794	0					
ANR	5206879	ArgumentList	p		5206794	1					
ANR	5206880	Argument	p		5206794	0					
ANR	5206881	Identifier	p		5206794	0					
ANR	5206882	Argument	first		5206794	1					
ANR	5206883	Identifier	first		5206794	0					
ANR	5206884	ExpressionStatement	first = 0	583:2:15424:15433	5206794	1	True				
ANR	5206885	AssignmentExpression	first = 0		5206794	0		=			
ANR	5206886	Identifier	first		5206794	0					
ANR	5206887	PrimaryExpression	0		5206794	1					
ANR	5206888	IfStatement	if ( wasdollar )		5206794	5					
ANR	5206889	Condition	wasdollar	585:5:15443:15451	5206794	0	True				
ANR	5206890	Identifier	wasdollar		5206794	0					
ANR	5206891	CompoundStatement		15:16:277:277	5206794	1					
ANR	5206892	ExpressionStatement	DROP ( 1 )	586:2:15497:15504	5206794	0	True				
ANR	5206893	CallExpression	DROP ( 1 )		5206794	0					
ANR	5206894	Callee	DROP		5206794	0					
ANR	5206895	Identifier	DROP		5206794	0					
ANR	5206896	ArgumentList	1		5206794	1					
ANR	5206897	Argument	1		5206794	0					
ANR	5206898	PrimaryExpression	1		5206794	0					
ANR	5206899	ExpressionStatement	"EMIT ( OEOL , 0 )"	587:2:15508:15521	5206794	1	True				
ANR	5206900	CallExpression	"EMIT ( OEOL , 0 )"		5206794	0					
ANR	5206901	Callee	EMIT		5206794	0					
ANR	5206902	Identifier	EMIT		5206794	0					
ANR	5206903	ArgumentList	OEOL		5206794	1					
ANR	5206904	Argument	OEOL		5206794	0					
ANR	5206905	Identifier	OEOL		5206794	0					
ANR	5206906	Argument	0		5206794	1					
ANR	5206907	PrimaryExpression	0		5206794	0					
ANR	5206908	ExpressionStatement	p -> g -> iflags |= USEEOL	588:2:15525:15547	5206794	2	True				
ANR	5206909	AssignmentExpression	p -> g -> iflags |= USEEOL		5206794	0		|=			
ANR	5206910	PtrMemberAccess	p -> g -> iflags		5206794	0					
ANR	5206911	PtrMemberAccess	p -> g		5206794	0					
ANR	5206912	Identifier	p		5206794	0					
ANR	5206913	Identifier	g		5206794	1					
ANR	5206914	Identifier	iflags		5206794	1					
ANR	5206915	Identifier	USEEOL		5206794	1					
ANR	5206916	ExpressionStatement	p -> g -> neol ++	589:2:15551:15563	5206794	3	True				
ANR	5206917	PostIncDecOperationExpression	p -> g -> neol ++		5206794	0					
ANR	5206918	PtrMemberAccess	p -> g -> neol		5206794	0					
ANR	5206919	PtrMemberAccess	p -> g		5206794	0					
ANR	5206920	Identifier	p		5206794	0					
ANR	5206921	Identifier	g		5206794	1					
ANR	5206922	Identifier	neol		5206794	1					
ANR	5206923	IncDec	++		5206794	1					
ANR	5206924	ExpressionStatement	"REQUIRE ( HERE ( ) != start , R_REGEX_EMPTY )"	592:1:15570:15609	5206794	6	True				
ANR	5206925	CallExpression	"REQUIRE ( HERE ( ) != start , R_REGEX_EMPTY )"		5206794	0					
ANR	5206926	Callee	REQUIRE		5206794	0					
ANR	5206927	Identifier	REQUIRE		5206794	0					
ANR	5206928	ArgumentList	HERE ( ) != start		5206794	1					
ANR	5206929	Argument	HERE ( ) != start		5206794	0					
ANR	5206930	EqualityExpression	HERE ( ) != start		5206794	0		!=			
ANR	5206931	CallExpression	HERE ( )		5206794	0					
ANR	5206932	Callee	HERE		5206794	0					
ANR	5206933	Identifier	HERE		5206794	0					
ANR	5206934	ArgumentList			5206794	1					
ANR	5206935	Identifier	start		5206794	1					
ANR	5206936	Argument	R_REGEX_EMPTY		5206794	1					
ANR	5206937	Identifier	R_REGEX_EMPTY		5206794	0					
ANR	5206938	ReturnType	static void		5206794	1					
ANR	5206939	Identifier	p_bre		5206794	2					
ANR	5206940	ParameterList	"struct parse * p , int end1 , int end2"		5206794	3					
ANR	5206941	Parameter	struct parse * p	568:18:15060:15074	5206794	0	True				
ANR	5206942	ParameterType	struct parse *		5206794	0					
ANR	5206943	Identifier	p		5206794	1					
ANR	5206944	Parameter	int end1	569:4:15081:15088	5206794	1	True				
ANR	5206945	ParameterType	int		5206794	0					
ANR	5206946	Identifier	end1		5206794	1					
ANR	5206947	Parameter	int end2	570:4:15130:15137	5206794	2	True				
ANR	5206948	ParameterType	int		5206794	0					
ANR	5206949	Identifier	end2		5206794	1					
ANR	5206950	CFGEntryNode	ENTRY		5206794		True				
ANR	5206951	CFGExitNode	EXIT		5206794		True				
ANR	5206952	Symbol	wasdollar		5206794						
ANR	5206953	Symbol	p -> g -> iflags		5206794						
ANR	5206954	Symbol	p_simp_re		5206794						
ANR	5206955	Symbol	USEBOL		5206794						
ANR	5206956	Symbol	USEEOL		5206794						
ANR	5206957	Symbol	R_REGEX_EMPTY		5206794						
ANR	5206958	Symbol	start		5206794						
ANR	5206959	Symbol	p		5206794						
ANR	5206960	Symbol	HERE		5206794						
ANR	5206961	Symbol	* p -> g		5206794						
ANR	5206962	Symbol	MORE		5206794						
ANR	5206963	Symbol	OBOL		5206794						
ANR	5206964	Symbol	p -> g -> neol		5206794						
ANR	5206965	Symbol	p -> g -> nbol		5206794						
ANR	5206966	Symbol	SEETWO		5206794						
ANR	5206967	Symbol	OEOL		5206794						
ANR	5206968	Symbol	end2		5206794						
ANR	5206969	Symbol	end1		5206794						
ANR	5206970	Symbol	EAT		5206794						
ANR	5206971	Symbol	* p		5206794						
ANR	5206972	Symbol	* * p		5206794						
ANR	5206973	Symbol	first		5206794						
ANR	5206974	Symbol	p -> g		5206794						
ANR	5206975	Function	p_simp_re	598:0:15720:18423							
ANR	5206976	FunctionDef	"p_simp_re (struct parse * p , int starordinary)"		5206975	0					
ANR	5206977	CompoundStatement		601:0:15871:18423	5206975	0					
ANR	5206978	IdentifierDeclStatement	int c ;	602:1:15874:15879	5206975	0	True				
ANR	5206979	IdentifierDecl	c		5206975	0					
ANR	5206980	IdentifierDeclType	int		5206975	0					
ANR	5206981	Identifier	c		5206975	1					
ANR	5206982	IdentifierDeclStatement	int count ;	603:1:15882:15891	5206975	1	True				
ANR	5206983	IdentifierDecl	count		5206975	0					
ANR	5206984	IdentifierDeclType	int		5206975	0					
ANR	5206985	Identifier	count		5206975	1					
ANR	5206986	IdentifierDeclStatement	int count2 ;	604:1:15894:15904	5206975	2	True				
ANR	5206987	IdentifierDecl	count2		5206975	0					
ANR	5206988	IdentifierDeclType	int		5206975	0					
ANR	5206989	Identifier	count2		5206975	1					
ANR	5206990	IdentifierDeclStatement	sopno pos ;	605:1:15907:15916	5206975	3	True				
ANR	5206991	IdentifierDecl	pos		5206975	0					
ANR	5206992	IdentifierDeclType	sopno		5206975	0					
ANR	5206993	Identifier	pos		5206975	1					
ANR	5206994	IdentifierDeclStatement	int i ;	606:1:15919:15924	5206975	4	True				
ANR	5206995	IdentifierDecl	i		5206975	0					
ANR	5206996	IdentifierDeclType	int		5206975	0					
ANR	5206997	Identifier	i		5206975	1					
ANR	5206998	IdentifierDeclStatement	sopno subno ;	607:1:15927:15938	5206975	5	True				
ANR	5206999	IdentifierDecl	subno		5206975	0					
ANR	5207000	IdentifierDeclType	sopno		5206975	0					
ANR	5207001	Identifier	subno		5206975	1					
ANR	5207002	Statement	define	608:2:15942:15947	5206975	6	True				
ANR	5207003	Statement	BACKSL	608:9:15949:15954	5206975	7	True				
ANR	5207004	Statement	(	608:16:15956:15956	5206975	8	True				
ANR	5207005	Statement	1	608:17:15957:15957	5206975	9	True				
ANR	5207006	Statement	<<	608:18:15958:15959	5206975	10	True				
ANR	5207007	Statement	CHAR_BIT	608:20:15960:15967	5206975	11	True				
ANR	5207008	Statement	)	608:28:15968:15968	5206975	12	True				
ANR	5207009	ExpressionStatement	pos = HERE ( )	610:1:15972:15984	5206975	13	True				
ANR	5207010	AssignmentExpression	pos = HERE ( )		5206975	0		=			
ANR	5207011	Identifier	pos		5206975	0					
ANR	5207012	CallExpression	HERE ( )		5206975	1					
ANR	5207013	Callee	HERE		5206975	0					
ANR	5207014	Identifier	HERE		5206975	0					
ANR	5207015	ArgumentList			5206975	1					
ANR	5207016	IfStatement	if ( ! MORE ( ) )		5206975	14					
ANR	5207017	Condition	! MORE ( )	612:5:16037:16043	5206975	0	True				
ANR	5207018	UnaryOperationExpression	! MORE ( )		5206975	0					
ANR	5207019	UnaryOperator	!		5206975	0					
ANR	5207020	CallExpression	MORE ( )		5206975	1					
ANR	5207021	Callee	MORE		5206975	0					
ANR	5207022	Identifier	MORE		5206975	0					
ANR	5207023	ArgumentList			5206975	1					
ANR	5207024	CompoundStatement		12:14:174:174	5206975	1					
ANR	5207025	ReturnStatement	return 0 ;	613:2:16089:16097	5206975	0	True				
ANR	5207026	PrimaryExpression	0		5206975	0					
ANR	5207027	ExpressionStatement	c = GETNEXT ( )	615:1:16103:16116	5206975	15	True				
ANR	5207028	AssignmentExpression	c = GETNEXT ( )		5206975	0		=			
ANR	5207029	Identifier	c		5206975	0					
ANR	5207030	CallExpression	GETNEXT ( )		5206975	1					
ANR	5207031	Callee	GETNEXT		5206975	0					
ANR	5207032	Identifier	GETNEXT		5206975	0					
ANR	5207033	ArgumentList			5206975	1					
ANR	5207034	IfStatement	if ( c == '\\\\' )		5206975	16					
ANR	5207035	Condition	c == '\\\\'	616:5:16123:16131	5206975	0	True				
ANR	5207036	EqualityExpression	c == '\\\\'		5206975	0		==			
ANR	5207037	Identifier	c		5206975	0					
ANR	5207038	PrimaryExpression	'\\\\'		5206975	1					
ANR	5207039	CompoundStatement		16:16:262:262	5206975	1					
ANR	5207040	ExpressionStatement	"REQUIRE ( MORE ( ) , R_REGEX_EESCAPE )"	617:2:16138:16170	5206975	0	True				
ANR	5207041	CallExpression	"REQUIRE ( MORE ( ) , R_REGEX_EESCAPE )"		5206975	0					
ANR	5207042	Callee	REQUIRE		5206975	0					
ANR	5207043	Identifier	REQUIRE		5206975	0					
ANR	5207044	ArgumentList	MORE ( )		5206975	1					
ANR	5207045	Argument	MORE ( )		5206975	0					
ANR	5207046	CallExpression	MORE ( )		5206975	0					
ANR	5207047	Callee	MORE		5206975	0					
ANR	5207048	Identifier	MORE		5206975	0					
ANR	5207049	ArgumentList			5206975	1					
ANR	5207050	Argument	R_REGEX_EESCAPE		5206975	1					
ANR	5207051	Identifier	R_REGEX_EESCAPE		5206975	0					
ANR	5207052	ExpressionStatement	c = BACKSL | GETNEXT ( )	618:2:16174:16196	5206975	1	True				
ANR	5207053	AssignmentExpression	c = BACKSL | GETNEXT ( )		5206975	0		=			
ANR	5207054	Identifier	c		5206975	0					
ANR	5207055	InclusiveOrExpression	BACKSL | GETNEXT ( )		5206975	1		|			
ANR	5207056	Identifier	BACKSL		5206975	0					
ANR	5207057	CallExpression	GETNEXT ( )		5206975	1					
ANR	5207058	Callee	GETNEXT		5206975	0					
ANR	5207059	Identifier	GETNEXT		5206975	0					
ANR	5207060	ArgumentList			5206975	1					
ANR	5207061	SwitchStatement	switch ( c )		5206975	17					
ANR	5207062	Condition	c	620:9:16210:16210	5206975	0	True				
ANR	5207063	Identifier	c		5206975	0					
ANR	5207064	CompoundStatement		20:12:341:341	5206975	1					
ANR	5207065	Label	case '.' :	621:1:16216:16224	5206975	0	True				
ANR	5207066	IfStatement	if ( p -> g -> cflags & R_REGEX_NEWLINE )		5206975	1					
ANR	5207067	Condition	p -> g -> cflags & R_REGEX_NEWLINE	622:6:16232:16261	5206975	0	True				
ANR	5207068	BitAndExpression	p -> g -> cflags & R_REGEX_NEWLINE		5206975	0		&			
ANR	5207069	PtrMemberAccess	p -> g -> cflags		5206975	0					
ANR	5207070	PtrMemberAccess	p -> g		5206975	0					
ANR	5207071	Identifier	p		5206975	0					
ANR	5207072	Identifier	g		5206975	1					
ANR	5207073	Identifier	cflags		5206975	1					
ANR	5207074	Identifier	R_REGEX_NEWLINE		5206975	1					
ANR	5207075	CompoundStatement		22:38:392:392	5206975	1					
ANR	5207076	ExpressionStatement	nonnewline ( p )	623:3:16269:16282	5206975	0	True				
ANR	5207077	CallExpression	nonnewline ( p )		5206975	0					
ANR	5207078	Callee	nonnewline		5206975	0					
ANR	5207079	Identifier	nonnewline		5206975	0					
ANR	5207080	ArgumentList	p		5206975	1					
ANR	5207081	Argument	p		5206975	0					
ANR	5207082	Identifier	p		5206975	0					
ANR	5207083	ElseStatement	else		5206975	0					
ANR	5207084	CompoundStatement		24:9:421:421	5206975	0					
ANR	5207085	ExpressionStatement	"EMIT ( OANY , 0 )"	625:3:16298:16312	5206975	0	True				
ANR	5207086	CallExpression	"EMIT ( OANY , 0 )"		5206975	0					
ANR	5207087	Callee	EMIT		5206975	0					
ANR	5207088	Identifier	EMIT		5206975	0					
ANR	5207089	ArgumentList	OANY		5206975	1					
ANR	5207090	Argument	OANY		5206975	0					
ANR	5207091	Identifier	OANY		5206975	0					
ANR	5207092	Argument	0		5206975	1					
ANR	5207093	PrimaryExpression	0		5206975	0					
ANR	5207094	BreakStatement	break ;	627:2:16320:16325	5206975	2	True				
ANR	5207095	Label	case '[' :	628:1:16328:16336	5206975	3	True				
ANR	5207096	ExpressionStatement	p_bracket ( p )	629:2:16340:16352	5206975	4	True				
ANR	5207097	CallExpression	p_bracket ( p )		5206975	0					
ANR	5207098	Callee	p_bracket		5206975	0					
ANR	5207099	Identifier	p_bracket		5206975	0					
ANR	5207100	ArgumentList	p		5206975	1					
ANR	5207101	Argument	p		5206975	0					
ANR	5207102	Identifier	p		5206975	0					
ANR	5207103	BreakStatement	break ;	630:2:16356:16361	5206975	5	True				
ANR	5207104	Statement	case	631:1:16364:16367	5206975	6	True				
ANR	5207105	Statement	BACKSL	631:6:16369:16374	5206975	7	True				
ANR	5207106	Statement	|	631:12:16375:16375	5206975	8	True				
ANR	5207107	Label	'{' :	631:13:16376:16379	5206975	9	True				
ANR	5207108	ExpressionStatement	SETERROR ( R_REGEX_BADRPT )	632:2:16383:16407	5206975	10	True				
ANR	5207109	CallExpression	SETERROR ( R_REGEX_BADRPT )		5206975	0					
ANR	5207110	Callee	SETERROR		5206975	0					
ANR	5207111	Identifier	SETERROR		5206975	0					
ANR	5207112	ArgumentList	R_REGEX_BADRPT		5206975	1					
ANR	5207113	Argument	R_REGEX_BADRPT		5206975	0					
ANR	5207114	Identifier	R_REGEX_BADRPT		5206975	0					
ANR	5207115	BreakStatement	break ;	633:2:16411:16416	5206975	11	True				
ANR	5207116	Statement	case	634:1:16419:16422	5206975	12	True				
ANR	5207117	Statement	BACKSL	634:6:16424:16429	5206975	13	True				
ANR	5207118	Statement	|	634:12:16430:16430	5206975	14	True				
ANR	5207119	Label	'(' :	634:13:16431:16434	5206975	15	True				
ANR	5207120	ExpressionStatement	p -> g -> nsub ++	635:2:16438:16450	5206975	16	True				
ANR	5207121	PostIncDecOperationExpression	p -> g -> nsub ++		5206975	0					
ANR	5207122	PtrMemberAccess	p -> g -> nsub		5206975	0					
ANR	5207123	PtrMemberAccess	p -> g		5206975	0					
ANR	5207124	Identifier	p		5206975	0					
ANR	5207125	Identifier	g		5206975	1					
ANR	5207126	Identifier	nsub		5206975	1					
ANR	5207127	IncDec	++		5206975	1					
ANR	5207128	ExpressionStatement	subno = p -> g -> nsub	636:2:16454:16472	5206975	17	True				
ANR	5207129	AssignmentExpression	subno = p -> g -> nsub		5206975	0		=			
ANR	5207130	Identifier	subno		5206975	0					
ANR	5207131	PtrMemberAccess	p -> g -> nsub		5206975	1					
ANR	5207132	PtrMemberAccess	p -> g		5206975	0					
ANR	5207133	Identifier	p		5206975	0					
ANR	5207134	Identifier	g		5206975	1					
ANR	5207135	Identifier	nsub		5206975	1					
ANR	5207136	IfStatement	if ( subno < NPAREN )		5206975	18					
ANR	5207137	Condition	subno < NPAREN	637:6:16480:16493	5206975	0	True				
ANR	5207138	RelationalExpression	subno < NPAREN		5206975	0		<			
ANR	5207139	Identifier	subno		5206975	0					
ANR	5207140	Identifier	NPAREN		5206975	1					
ANR	5207141	CompoundStatement		37:22:624:624	5206975	1					
ANR	5207142	ExpressionStatement	p -> pbegin [ subno ] = HERE ( )	638:3:16501:16527	5206975	0	True				
ANR	5207143	AssignmentExpression	p -> pbegin [ subno ] = HERE ( )		5206975	0		=			
ANR	5207144	ArrayIndexing	p -> pbegin [ subno ]		5206975	0					
ANR	5207145	PtrMemberAccess	p -> pbegin		5206975	0					
ANR	5207146	Identifier	p		5206975	0					
ANR	5207147	Identifier	pbegin		5206975	1					
ANR	5207148	Identifier	subno		5206975	1					
ANR	5207149	CallExpression	HERE ( )		5206975	1					
ANR	5207150	Callee	HERE		5206975	0					
ANR	5207151	Identifier	HERE		5206975	0					
ANR	5207152	ArgumentList			5206975	1					
ANR	5207153	ExpressionStatement	"EMIT ( OLPAREN , subno )"	640:2:16535:16555	5206975	19	True				
ANR	5207154	CallExpression	"EMIT ( OLPAREN , subno )"		5206975	0					
ANR	5207155	Callee	EMIT		5206975	0					
ANR	5207156	Identifier	EMIT		5206975	0					
ANR	5207157	ArgumentList	OLPAREN		5206975	1					
ANR	5207158	Argument	OLPAREN		5206975	0					
ANR	5207159	Identifier	OLPAREN		5206975	0					
ANR	5207160	Argument	subno		5206975	1					
ANR	5207161	Identifier	subno		5206975	0					
ANR	5207162	IfStatement	"if ( MORE ( ) && ! SEETWO ( '\\\\' , ')' ) )"		5206975	20					
ANR	5207163	Condition	"MORE ( ) && ! SEETWO ( '\\\\' , ')' )"	642:6:16607:16636	5206975	0	True				
ANR	5207164	AndExpression	"MORE ( ) && ! SEETWO ( '\\\\' , ')' )"		5206975	0		&&			
ANR	5207165	CallExpression	MORE ( )		5206975	0					
ANR	5207166	Callee	MORE		5206975	0					
ANR	5207167	Identifier	MORE		5206975	0					
ANR	5207168	ArgumentList			5206975	1					
ANR	5207169	UnaryOperationExpression	"! SEETWO ( '\\\\' , ')' )"		5206975	1					
ANR	5207170	UnaryOperator	!		5206975	0					
ANR	5207171	CallExpression	"SEETWO ( '\\\\' , ')' )"		5206975	1					
ANR	5207172	Callee	SEETWO		5206975	0					
ANR	5207173	Identifier	SEETWO		5206975	0					
ANR	5207174	ArgumentList	'\\\\'		5206975	1					
ANR	5207175	Argument	'\\\\'		5206975	0					
ANR	5207176	PrimaryExpression	'\\\\'		5206975	0					
ANR	5207177	Argument	')'		5206975	1					
ANR	5207178	PrimaryExpression	')'		5206975	0					
ANR	5207179	CompoundStatement		42:38:767:767	5206975	1					
ANR	5207180	ExpressionStatement	"p_bre ( p , '\\\\' , ')' )"	643:3:16644:16664	5206975	0	True				
ANR	5207181	CallExpression	"p_bre ( p , '\\\\' , ')' )"		5206975	0					
ANR	5207182	Callee	p_bre		5206975	0					
ANR	5207183	Identifier	p_bre		5206975	0					
ANR	5207184	ArgumentList	p		5206975	1					
ANR	5207185	Argument	p		5206975	0					
ANR	5207186	Identifier	p		5206975	0					
ANR	5207187	Argument	'\\\\'		5206975	1					
ANR	5207188	PrimaryExpression	'\\\\'		5206975	0					
ANR	5207189	Argument	')'		5206975	2					
ANR	5207190	PrimaryExpression	')'		5206975	0					
ANR	5207191	IfStatement	if ( subno < NPAREN )		5206975	21					
ANR	5207192	Condition	subno < NPAREN	645:6:16676:16689	5206975	0	True				
ANR	5207193	RelationalExpression	subno < NPAREN		5206975	0		<			
ANR	5207194	Identifier	subno		5206975	0					
ANR	5207195	Identifier	NPAREN		5206975	1					
ANR	5207196	CompoundStatement		45:22:820:820	5206975	1					
ANR	5207197	ExpressionStatement	p -> pend [ subno ] = HERE ( )	646:3:16697:16720	5206975	0	True				
ANR	5207198	AssignmentExpression	p -> pend [ subno ] = HERE ( )		5206975	0		=			
ANR	5207199	ArrayIndexing	p -> pend [ subno ]		5206975	0					
ANR	5207200	PtrMemberAccess	p -> pend		5206975	0					
ANR	5207201	Identifier	p		5206975	0					
ANR	5207202	Identifier	pend		5206975	1					
ANR	5207203	Identifier	subno		5206975	1					
ANR	5207204	CallExpression	HERE ( )		5206975	1					
ANR	5207205	Callee	HERE		5206975	0					
ANR	5207206	Identifier	HERE		5206975	0					
ANR	5207207	ArgumentList			5206975	1					
ANR	5207208	IfStatement	if ( ! p -> pend [ subno ] )		5206975	1					
ANR	5207209	Condition	! p -> pend [ subno ]	647:7:16729:16743	5206975	0	True				
ANR	5207210	UnaryOperationExpression	! p -> pend [ subno ]		5206975	0					
ANR	5207211	UnaryOperator	!		5206975	0					
ANR	5207212	ArrayIndexing	p -> pend [ subno ]		5206975	1					
ANR	5207213	PtrMemberAccess	p -> pend		5206975	0					
ANR	5207214	Identifier	p		5206975	0					
ANR	5207215	Identifier	pend		5206975	1					
ANR	5207216	Identifier	subno		5206975	1					
ANR	5207217	CompoundStatement		47:24:874:874	5206975	1					
ANR	5207218	BreakStatement	break ;	648:4:16752:16757	5206975	0	True				
ANR	5207219	ExpressionStatement	"EMIT ( ORPAREN , subno )"	651:2:16770:16790	5206975	22	True				
ANR	5207220	CallExpression	"EMIT ( ORPAREN , subno )"		5206975	0					
ANR	5207221	Callee	EMIT		5206975	0					
ANR	5207222	Identifier	EMIT		5206975	0					
ANR	5207223	ArgumentList	ORPAREN		5206975	1					
ANR	5207224	Argument	ORPAREN		5206975	0					
ANR	5207225	Identifier	ORPAREN		5206975	0					
ANR	5207226	Argument	subno		5206975	1					
ANR	5207227	Identifier	subno		5206975	0					
ANR	5207228	ExpressionStatement	"REQUIRE ( EATTWO ( '\\\\' , ')' ) , R_REGEX_EPAREN )"	652:2:16794:16836	5206975	23	True				
ANR	5207229	CallExpression	"REQUIRE ( EATTWO ( '\\\\' , ')' ) , R_REGEX_EPAREN )"		5206975	0					
ANR	5207230	Callee	REQUIRE		5206975	0					
ANR	5207231	Identifier	REQUIRE		5206975	0					
ANR	5207232	ArgumentList	"EATTWO ( '\\\\' , ')' )"		5206975	1					
ANR	5207233	Argument	"EATTWO ( '\\\\' , ')' )"		5206975	0					
ANR	5207234	CallExpression	"EATTWO ( '\\\\' , ')' )"		5206975	0					
ANR	5207235	Callee	EATTWO		5206975	0					
ANR	5207236	Identifier	EATTWO		5206975	0					
ANR	5207237	ArgumentList	'\\\\'		5206975	1					
ANR	5207238	Argument	'\\\\'		5206975	0					
ANR	5207239	PrimaryExpression	'\\\\'		5206975	0					
ANR	5207240	Argument	')'		5206975	1					
ANR	5207241	PrimaryExpression	')'		5206975	0					
ANR	5207242	Argument	R_REGEX_EPAREN		5206975	1					
ANR	5207243	Identifier	R_REGEX_EPAREN		5206975	0					
ANR	5207244	BreakStatement	break ;	653:2:16840:16845	5206975	24	True				
ANR	5207245	Statement	case	654:1:16848:16851	5206975	25	True				
ANR	5207246	Statement	BACKSL	654:6:16853:16858	5206975	26	True				
ANR	5207247	Statement	|	654:12:16859:16859	5206975	27	True				
ANR	5207248	Label	')' :	654:13:16860:16863	5206975	28	True				
ANR	5207249	Statement	case	655:1:16908:16911	5206975	29	True				
ANR	5207250	Statement	BACKSL	655:6:16913:16918	5206975	30	True				
ANR	5207251	Statement	|	655:12:16919:16919	5206975	31	True				
ANR	5207252	Label	'}' :	655:13:16920:16923	5206975	32	True				
ANR	5207253	ExpressionStatement	SETERROR ( R_REGEX_EPAREN )	656:2:16927:16951	5206975	33	True				
ANR	5207254	CallExpression	SETERROR ( R_REGEX_EPAREN )		5206975	0					
ANR	5207255	Callee	SETERROR		5206975	0					
ANR	5207256	Identifier	SETERROR		5206975	0					
ANR	5207257	ArgumentList	R_REGEX_EPAREN		5206975	1					
ANR	5207258	Argument	R_REGEX_EPAREN		5206975	0					
ANR	5207259	Identifier	R_REGEX_EPAREN		5206975	0					
ANR	5207260	BreakStatement	break ;	657:2:16955:16960	5206975	34	True				
ANR	5207261	Statement	case	658:1:16963:16966	5206975	35	True				
ANR	5207262	Statement	BACKSL	658:6:16968:16973	5206975	36	True				
ANR	5207263	Statement	|	658:12:16974:16974	5206975	37	True				
ANR	5207264	Label	'1' :	658:13:16975:16978	5206975	38	True				
ANR	5207265	Statement	case	659:1:16981:16984	5206975	39	True				
ANR	5207266	Statement	BACKSL	659:6:16986:16991	5206975	40	True				
ANR	5207267	Statement	|	659:12:16992:16992	5206975	41	True				
ANR	5207268	Label	'2' :	659:13:16993:16996	5206975	42	True				
ANR	5207269	Statement	case	660:1:16999:17002	5206975	43	True				
ANR	5207270	Statement	BACKSL	660:6:17004:17009	5206975	44	True				
ANR	5207271	Statement	|	660:12:17010:17010	5206975	45	True				
ANR	5207272	Label	'3' :	660:13:17011:17014	5206975	46	True				
ANR	5207273	Statement	case	661:1:17017:17020	5206975	47	True				
ANR	5207274	Statement	BACKSL	661:6:17022:17027	5206975	48	True				
ANR	5207275	Statement	|	661:12:17028:17028	5206975	49	True				
ANR	5207276	Label	'4' :	661:13:17029:17032	5206975	50	True				
ANR	5207277	Statement	case	662:1:17035:17038	5206975	51	True				
ANR	5207278	Statement	BACKSL	662:6:17040:17045	5206975	52	True				
ANR	5207279	Statement	|	662:12:17046:17046	5206975	53	True				
ANR	5207280	Label	'5' :	662:13:17047:17050	5206975	54	True				
ANR	5207281	Statement	case	663:1:17053:17056	5206975	55	True				
ANR	5207282	Statement	BACKSL	663:6:17058:17063	5206975	56	True				
ANR	5207283	Statement	|	663:12:17064:17064	5206975	57	True				
ANR	5207284	Label	'6' :	663:13:17065:17068	5206975	58	True				
ANR	5207285	Statement	case	664:1:17071:17074	5206975	59	True				
ANR	5207286	Statement	BACKSL	664:6:17076:17081	5206975	60	True				
ANR	5207287	Statement	|	664:12:17082:17082	5206975	61	True				
ANR	5207288	Label	'7' :	664:13:17083:17086	5206975	62	True				
ANR	5207289	Statement	case	665:1:17089:17092	5206975	63	True				
ANR	5207290	Statement	BACKSL	665:6:17094:17099	5206975	64	True				
ANR	5207291	Statement	|	665:12:17100:17100	5206975	65	True				
ANR	5207292	Label	'8' :	665:13:17101:17104	5206975	66	True				
ANR	5207293	Statement	case	666:1:17107:17110	5206975	67	True				
ANR	5207294	Statement	BACKSL	666:6:17112:17117	5206975	68	True				
ANR	5207295	Statement	|	666:12:17118:17118	5206975	69	True				
ANR	5207296	Label	'9' :	666:13:17119:17122	5206975	70	True				
ANR	5207297	ExpressionStatement	i = ( c & ~BACKSL ) - '0'	667:2:17126:17147	5206975	71	True				
ANR	5207298	AssignmentExpression	i = ( c & ~BACKSL ) - '0'		5206975	0		=			
ANR	5207299	Identifier	i		5206975	0					
ANR	5207300	AdditiveExpression	( c & ~BACKSL ) - '0'		5206975	1		-			
ANR	5207301	BitAndExpression	c & ~BACKSL		5206975	0		&			
ANR	5207302	Identifier	c		5206975	0					
ANR	5207303	Identifier	~BACKSL		5206975	1					
ANR	5207304	PrimaryExpression	'0'		5206975	1					
ANR	5207305	IfStatement	if ( p -> pend [ i ] != 0 )		5206975	72					
ANR	5207306	Condition	p -> pend [ i ] != 0	668:6:17155:17169	5206975	0	True				
ANR	5207307	EqualityExpression	p -> pend [ i ] != 0		5206975	0		!=			
ANR	5207308	ArrayIndexing	p -> pend [ i ]		5206975	0					
ANR	5207309	PtrMemberAccess	p -> pend		5206975	0					
ANR	5207310	Identifier	p		5206975	0					
ANR	5207311	Identifier	pend		5206975	1					
ANR	5207312	Identifier	i		5206975	1					
ANR	5207313	PrimaryExpression	0		5206975	1					
ANR	5207314	CompoundStatement		68:23:1300:1300	5206975	1					
ANR	5207315	IfStatement	if ( i <= p -> g -> nsub )		5206975	0					
ANR	5207316	Condition	i <= p -> g -> nsub	669:7:17181:17195	5206975	0	True				
ANR	5207317	RelationalExpression	i <= p -> g -> nsub		5206975	0		<=			
ANR	5207318	Identifier	i		5206975	0					
ANR	5207319	PtrMemberAccess	p -> g -> nsub		5206975	1					
ANR	5207320	PtrMemberAccess	p -> g		5206975	0					
ANR	5207321	Identifier	p		5206975	0					
ANR	5207322	Identifier	g		5206975	1					
ANR	5207323	Identifier	nsub		5206975	1					
ANR	5207324	CompoundStatement		69:24:1326:1326	5206975	1					
ANR	5207325	ExpressionStatement	"EMIT ( OBACK_ , i )"	670:4:17204:17219	5206975	0	True				
ANR	5207326	CallExpression	"EMIT ( OBACK_ , i )"		5206975	0					
ANR	5207327	Callee	EMIT		5206975	0					
ANR	5207328	Identifier	EMIT		5206975	0					
ANR	5207329	ArgumentList	OBACK_		5206975	1					
ANR	5207330	Argument	OBACK_		5206975	0					
ANR	5207331	Identifier	OBACK_		5206975	0					
ANR	5207332	Argument	i		5206975	1					
ANR	5207333	Identifier	i		5206975	0					
ANR	5207334	IfStatement	if ( p -> pbegin [ i ] != 0 && OP ( p -> strip [ p -> pbegin [ i ] ] ) == OLPAREN && OP ( p -> strip [ p -> pend [ i ] ] ) == ORPAREN )		5206975	1					
ANR	5207335	Condition	p -> pbegin [ i ] != 0 && OP ( p -> strip [ p -> pbegin [ i ] ] ) == OLPAREN && OP ( p -> strip [ p -> pend [ i ] ] ) == ORPAREN	671:8:17229:17331	5206975	0	True				
ANR	5207336	AndExpression	p -> pbegin [ i ] != 0 && OP ( p -> strip [ p -> pbegin [ i ] ] ) == OLPAREN && OP ( p -> strip [ p -> pend [ i ] ] ) == ORPAREN		5206975	0		&&			
ANR	5207337	EqualityExpression	p -> pbegin [ i ] != 0		5206975	0		!=			
ANR	5207338	ArrayIndexing	p -> pbegin [ i ]		5206975	0					
ANR	5207339	PtrMemberAccess	p -> pbegin		5206975	0					
ANR	5207340	Identifier	p		5206975	0					
ANR	5207341	Identifier	pbegin		5206975	1					
ANR	5207342	Identifier	i		5206975	1					
ANR	5207343	PrimaryExpression	0		5206975	1					
ANR	5207344	AndExpression	OP ( p -> strip [ p -> pbegin [ i ] ] ) == OLPAREN && OP ( p -> strip [ p -> pend [ i ] ] ) == ORPAREN		5206975	1		&&			
ANR	5207345	EqualityExpression	OP ( p -> strip [ p -> pbegin [ i ] ] ) == OLPAREN		5206975	0		==			
ANR	5207346	CallExpression	OP ( p -> strip [ p -> pbegin [ i ] ] )		5206975	0					
ANR	5207347	Callee	OP		5206975	0					
ANR	5207348	Identifier	OP		5206975	0					
ANR	5207349	ArgumentList	p -> strip [ p -> pbegin [ i ] ]		5206975	1					
ANR	5207350	Argument	p -> strip [ p -> pbegin [ i ] ]		5206975	0					
ANR	5207351	ArrayIndexing	p -> strip [ p -> pbegin [ i ] ]		5206975	0					
ANR	5207352	PtrMemberAccess	p -> strip		5206975	0					
ANR	5207353	Identifier	p		5206975	0					
ANR	5207354	Identifier	strip		5206975	1					
ANR	5207355	ArrayIndexing	p -> pbegin [ i ]		5206975	1					
ANR	5207356	PtrMemberAccess	p -> pbegin		5206975	0					
ANR	5207357	Identifier	p		5206975	0					
ANR	5207358	Identifier	pbegin		5206975	1					
ANR	5207359	Identifier	i		5206975	1					
ANR	5207360	Identifier	OLPAREN		5206975	1					
ANR	5207361	EqualityExpression	OP ( p -> strip [ p -> pend [ i ] ] ) == ORPAREN		5206975	1		==			
ANR	5207362	CallExpression	OP ( p -> strip [ p -> pend [ i ] ] )		5206975	0					
ANR	5207363	Callee	OP		5206975	0					
ANR	5207364	Identifier	OP		5206975	0					
ANR	5207365	ArgumentList	p -> strip [ p -> pend [ i ] ]		5206975	1					
ANR	5207366	Argument	p -> strip [ p -> pend [ i ] ]		5206975	0					
ANR	5207367	ArrayIndexing	p -> strip [ p -> pend [ i ] ]		5206975	0					
ANR	5207368	PtrMemberAccess	p -> strip		5206975	0					
ANR	5207369	Identifier	p		5206975	0					
ANR	5207370	Identifier	strip		5206975	1					
ANR	5207371	ArrayIndexing	p -> pend [ i ]		5206975	1					
ANR	5207372	PtrMemberAccess	p -> pend		5206975	0					
ANR	5207373	Identifier	p		5206975	0					
ANR	5207374	Identifier	pend		5206975	1					
ANR	5207375	Identifier	i		5206975	1					
ANR	5207376	Identifier	ORPAREN		5206975	1					
ANR	5207377	CompoundStatement		72:43:1462:1462	5206975	1					
ANR	5207378	ExpressionStatement	"( void ) dupl ( p , p -> pbegin [ i ] + 1 , p -> pend [ i ] )"	673:5:17341:17383	5206975	0	True				
ANR	5207379	CastExpression	"( void ) dupl ( p , p -> pbegin [ i ] + 1 , p -> pend [ i ] )"		5206975	0					
ANR	5207380	CastTarget	void		5206975	0					
ANR	5207381	CallExpression	"dupl ( p , p -> pbegin [ i ] + 1 , p -> pend [ i ] )"		5206975	1					
ANR	5207382	Callee	dupl		5206975	0					
ANR	5207383	Identifier	dupl		5206975	0					
ANR	5207384	ArgumentList	p		5206975	1					
ANR	5207385	Argument	p		5206975	0					
ANR	5207386	Identifier	p		5206975	0					
ANR	5207387	Argument	p -> pbegin [ i ] + 1		5206975	1					
ANR	5207388	AdditiveExpression	p -> pbegin [ i ] + 1		5206975	0		+			
ANR	5207389	ArrayIndexing	p -> pbegin [ i ]		5206975	0					
ANR	5207390	PtrMemberAccess	p -> pbegin		5206975	0					
ANR	5207391	Identifier	p		5206975	0					
ANR	5207392	Identifier	pbegin		5206975	1					
ANR	5207393	Identifier	i		5206975	1					
ANR	5207394	PrimaryExpression	1		5206975	1					
ANR	5207395	Argument	p -> pend [ i ]		5206975	2					
ANR	5207396	ArrayIndexing	p -> pend [ i ]		5206975	0					
ANR	5207397	PtrMemberAccess	p -> pend		5206975	0					
ANR	5207398	Identifier	p		5206975	0					
ANR	5207399	Identifier	pend		5206975	1					
ANR	5207400	Identifier	i		5206975	1					
ANR	5207401	ExpressionStatement	"EMIT ( O_BACK , i )"	674:5:17390:17405	5206975	1	True				
ANR	5207402	CallExpression	"EMIT ( O_BACK , i )"		5206975	0					
ANR	5207403	Callee	EMIT		5206975	0					
ANR	5207404	Identifier	EMIT		5206975	0					
ANR	5207405	ArgumentList	O_BACK		5206975	1					
ANR	5207406	Argument	O_BACK		5206975	0					
ANR	5207407	Identifier	O_BACK		5206975	0					
ANR	5207408	Argument	i		5206975	1					
ANR	5207409	Identifier	i		5206975	0					
ANR	5207410	ElseStatement	else		5206975	0					
ANR	5207411	CompoundStatement		77:9:1555:1555	5206975	0					
ANR	5207412	ExpressionStatement	SETERROR ( R_REGEX_ESUBREG )	678:3:17432:17457	5206975	0	True				
ANR	5207413	CallExpression	SETERROR ( R_REGEX_ESUBREG )		5206975	0					
ANR	5207414	Callee	SETERROR		5206975	0					
ANR	5207415	Identifier	SETERROR		5206975	0					
ANR	5207416	ArgumentList	R_REGEX_ESUBREG		5206975	1					
ANR	5207417	Argument	R_REGEX_ESUBREG		5206975	0					
ANR	5207418	Identifier	R_REGEX_ESUBREG		5206975	0					
ANR	5207419	ExpressionStatement	p -> g -> backrefs = 1	680:2:17465:17483	5206975	73	True				
ANR	5207420	AssignmentExpression	p -> g -> backrefs = 1		5206975	0		=			
ANR	5207421	PtrMemberAccess	p -> g -> backrefs		5206975	0					
ANR	5207422	PtrMemberAccess	p -> g		5206975	0					
ANR	5207423	Identifier	p		5206975	0					
ANR	5207424	Identifier	g		5206975	1					
ANR	5207425	Identifier	backrefs		5206975	1					
ANR	5207426	PrimaryExpression	1		5206975	1					
ANR	5207427	BreakStatement	break ;	681:2:17487:17492	5206975	74	True				
ANR	5207428	Label	case '*' :	682:1:17495:17503	5206975	75	True				
ANR	5207429	ExpressionStatement	"REQUIRE ( starordinary , R_REGEX_BADRPT )"	683:2:17507:17544	5206975	76	True				
ANR	5207430	CallExpression	"REQUIRE ( starordinary , R_REGEX_BADRPT )"		5206975	0					
ANR	5207431	Callee	REQUIRE		5206975	0					
ANR	5207432	Identifier	REQUIRE		5206975	0					
ANR	5207433	ArgumentList	starordinary		5206975	1					
ANR	5207434	Argument	starordinary		5206975	0					
ANR	5207435	Identifier	starordinary		5206975	0					
ANR	5207436	Argument	R_REGEX_BADRPT		5206975	1					
ANR	5207437	Identifier	R_REGEX_BADRPT		5206975	0					
ANR	5207438	Label	default :	685:1:17567:17574	5206975	77	True				
ANR	5207439	Identifier	default		5206975	0					
ANR	5207440	ExpressionStatement	"ordinary ( p , ( char ) c )"	686:2:17578:17598	5206975	78	True				
ANR	5207441	CallExpression	"ordinary ( p , ( char ) c )"		5206975	0					
ANR	5207442	Callee	ordinary		5206975	0					
ANR	5207443	Identifier	ordinary		5206975	0					
ANR	5207444	ArgumentList	p		5206975	1					
ANR	5207445	Argument	p		5206975	0					
ANR	5207446	Identifier	p		5206975	0					
ANR	5207447	Argument	( char ) c		5206975	1					
ANR	5207448	CastExpression	( char ) c		5206975	0					
ANR	5207449	CastTarget	char		5206975	0					
ANR	5207450	Identifier	c		5206975	1					
ANR	5207451	BreakStatement	break ;	687:2:17602:17607	5206975	79	True				
ANR	5207452	IfStatement	if ( EAT ( '*' ) )		5206975	18					
ANR	5207453	Condition	EAT ( '*' )	690:5:17618:17625	5206975	0	True				
ANR	5207454	CallExpression	EAT ( '*' )		5206975	0					
ANR	5207455	Callee	EAT		5206975	0					
ANR	5207456	Identifier	EAT		5206975	0					
ANR	5207457	ArgumentList	'*'		5206975	1					
ANR	5207458	Argument	'*'		5206975	0					
ANR	5207459	PrimaryExpression	'*'		5206975	0					
ANR	5207460	CompoundStatement		90:15:1756:1756	5206975	1					
ANR	5207461	ExpressionStatement	"INSERT ( OPLUS_ , pos )"	692:2:17717:17736	5206975	0	True				
ANR	5207462	CallExpression	"INSERT ( OPLUS_ , pos )"		5206975	0					
ANR	5207463	Callee	INSERT		5206975	0					
ANR	5207464	Identifier	INSERT		5206975	0					
ANR	5207465	ArgumentList	OPLUS_		5206975	1					
ANR	5207466	Argument	OPLUS_		5206975	0					
ANR	5207467	Identifier	OPLUS_		5206975	0					
ANR	5207468	Argument	pos		5206975	1					
ANR	5207469	Identifier	pos		5206975	0					
ANR	5207470	ExpressionStatement	"ASTERN ( O_PLUS , pos )"	693:2:17740:17759	5206975	1	True				
ANR	5207471	CallExpression	"ASTERN ( O_PLUS , pos )"		5206975	0					
ANR	5207472	Callee	ASTERN		5206975	0					
ANR	5207473	Identifier	ASTERN		5206975	0					
ANR	5207474	ArgumentList	O_PLUS		5206975	1					
ANR	5207475	Argument	O_PLUS		5206975	0					
ANR	5207476	Identifier	O_PLUS		5206975	0					
ANR	5207477	Argument	pos		5206975	1					
ANR	5207478	Identifier	pos		5206975	0					
ANR	5207479	ExpressionStatement	"INSERT ( OQUEST_ , pos )"	694:2:17763:17783	5206975	2	True				
ANR	5207480	CallExpression	"INSERT ( OQUEST_ , pos )"		5206975	0					
ANR	5207481	Callee	INSERT		5206975	0					
ANR	5207482	Identifier	INSERT		5206975	0					
ANR	5207483	ArgumentList	OQUEST_		5206975	1					
ANR	5207484	Argument	OQUEST_		5206975	0					
ANR	5207485	Identifier	OQUEST_		5206975	0					
ANR	5207486	Argument	pos		5206975	1					
ANR	5207487	Identifier	pos		5206975	0					
ANR	5207488	ExpressionStatement	"ASTERN ( O_QUEST , pos )"	695:2:17787:17807	5206975	3	True				
ANR	5207489	CallExpression	"ASTERN ( O_QUEST , pos )"		5206975	0					
ANR	5207490	Callee	ASTERN		5206975	0					
ANR	5207491	Identifier	ASTERN		5206975	0					
ANR	5207492	ArgumentList	O_QUEST		5206975	1					
ANR	5207493	Argument	O_QUEST		5206975	0					
ANR	5207494	Identifier	O_QUEST		5206975	0					
ANR	5207495	Argument	pos		5206975	1					
ANR	5207496	Identifier	pos		5206975	0					
ANR	5207497	ElseStatement	else		5206975	0					
ANR	5207498	IfStatement	"if ( EATTWO ( '\\\\' , '{' ) )"		5206975	0					
ANR	5207499	Condition	"EATTWO ( '\\\\' , '{' )"	696:12:17821:17837	5206975	0	True				
ANR	5207500	CallExpression	"EATTWO ( '\\\\' , '{' )"		5206975	0					
ANR	5207501	Callee	EATTWO		5206975	0					
ANR	5207502	Identifier	EATTWO		5206975	0					
ANR	5207503	ArgumentList	'\\\\'		5206975	1					
ANR	5207504	Argument	'\\\\'		5206975	0					
ANR	5207505	PrimaryExpression	'\\\\'		5206975	0					
ANR	5207506	Argument	'{'		5206975	1					
ANR	5207507	PrimaryExpression	'{'		5206975	0					
ANR	5207508	CompoundStatement		96:31:1968:1968	5206975	1					
ANR	5207509	ExpressionStatement	count = p_count ( p )	697:2:17844:17862	5206975	0	True				
ANR	5207510	AssignmentExpression	count = p_count ( p )		5206975	0		=			
ANR	5207511	Identifier	count		5206975	0					
ANR	5207512	CallExpression	p_count ( p )		5206975	1					
ANR	5207513	Callee	p_count		5206975	0					
ANR	5207514	Identifier	p_count		5206975	0					
ANR	5207515	ArgumentList	p		5206975	1					
ANR	5207516	Argument	p		5206975	0					
ANR	5207517	Identifier	p		5206975	0					
ANR	5207518	IfStatement	"if ( EAT ( ',' ) )"		5206975	1					
ANR	5207519	Condition	"EAT ( ',' )"	698:6:17870:17877	5206975	0	True				
ANR	5207520	CallExpression	"EAT ( ',' )"		5206975	0					
ANR	5207521	Callee	EAT		5206975	0					
ANR	5207522	Identifier	EAT		5206975	0					
ANR	5207523	ArgumentList	"','"		5206975	1					
ANR	5207524	Argument	"','"		5206975	0					
ANR	5207525	PrimaryExpression	"','"		5206975	0					
ANR	5207526	CompoundStatement		98:16:2008:2008	5206975	1					
ANR	5207527	IfStatement	if ( MORE ( ) && isdigit ( ( ut8 ) PEEK ( ) ) )		5206975	0					
ANR	5207528	Condition	MORE ( ) && isdigit ( ( ut8 ) PEEK ( ) )	699:7:17889:17918	5206975	0	True				
ANR	5207529	AndExpression	MORE ( ) && isdigit ( ( ut8 ) PEEK ( ) )		5206975	0		&&			
ANR	5207530	CallExpression	MORE ( )		5206975	0					
ANR	5207531	Callee	MORE		5206975	0					
ANR	5207532	Identifier	MORE		5206975	0					
ANR	5207533	ArgumentList			5206975	1					
ANR	5207534	CallExpression	isdigit ( ( ut8 ) PEEK ( ) )		5206975	1					
ANR	5207535	Callee	isdigit		5206975	0					
ANR	5207536	Identifier	isdigit		5206975	0					
ANR	5207537	ArgumentList	( ut8 ) PEEK ( )		5206975	1					
ANR	5207538	Argument	( ut8 ) PEEK ( )		5206975	0					
ANR	5207539	CastExpression	( ut8 ) PEEK ( )		5206975	0					
ANR	5207540	CastTarget	ut8		5206975	0					
ANR	5207541	CallExpression	PEEK ( )		5206975	1					
ANR	5207542	Callee	PEEK		5206975	0					
ANR	5207543	Identifier	PEEK		5206975	0					
ANR	5207544	ArgumentList			5206975	1					
ANR	5207545	CompoundStatement		99:39:2049:2049	5206975	1					
ANR	5207546	ExpressionStatement	count2 = p_count ( p )	700:4:17927:17946	5206975	0	True				
ANR	5207547	AssignmentExpression	count2 = p_count ( p )		5206975	0		=			
ANR	5207548	Identifier	count2		5206975	0					
ANR	5207549	CallExpression	p_count ( p )		5206975	1					
ANR	5207550	Callee	p_count		5206975	0					
ANR	5207551	Identifier	p_count		5206975	0					
ANR	5207552	ArgumentList	p		5206975	1					
ANR	5207553	Argument	p		5206975	0					
ANR	5207554	Identifier	p		5206975	0					
ANR	5207555	ExpressionStatement	"REQUIRE ( count <= count2 , R_REGEX_BADBR )"	701:4:17952:17991	5206975	1	True				
ANR	5207556	CallExpression	"REQUIRE ( count <= count2 , R_REGEX_BADBR )"		5206975	0					
ANR	5207557	Callee	REQUIRE		5206975	0					
ANR	5207558	Identifier	REQUIRE		5206975	0					
ANR	5207559	ArgumentList	count <= count2		5206975	1					
ANR	5207560	Argument	count <= count2		5206975	0					
ANR	5207561	RelationalExpression	count <= count2		5206975	0		<=			
ANR	5207562	Identifier	count		5206975	0					
ANR	5207563	Identifier	count2		5206975	1					
ANR	5207564	Argument	R_REGEX_BADBR		5206975	1					
ANR	5207565	Identifier	R_REGEX_BADBR		5206975	0					
ANR	5207566	ElseStatement	else		5206975	0					
ANR	5207567	CompoundStatement		102:10:2131:2131	5206975	0					
ANR	5207568	ExpressionStatement	count2 = INTFINITY	703:4:18040:18058	5206975	0	True				
ANR	5207569	AssignmentExpression	count2 = INTFINITY		5206975	0		=			
ANR	5207570	Identifier	count2		5206975	0					
ANR	5207571	Identifier	INTFINITY		5206975	1					
ANR	5207572	ElseStatement	else		5206975	0					
ANR	5207573	CompoundStatement		105:9:2202:2202	5206975	0					
ANR	5207574	ExpressionStatement	count2 = count	706:3:18106:18120	5206975	0	True				
ANR	5207575	AssignmentExpression	count2 = count		5206975	0		=			
ANR	5207576	Identifier	count2		5206975	0					
ANR	5207577	Identifier	count		5206975	1					
ANR	5207578	ExpressionStatement	"repeat ( p , pos , count , count2 )"	708:2:18128:18157	5206975	2	True				
ANR	5207579	CallExpression	"repeat ( p , pos , count , count2 )"		5206975	0					
ANR	5207580	Callee	repeat		5206975	0					
ANR	5207581	Identifier	repeat		5206975	0					
ANR	5207582	ArgumentList	p		5206975	1					
ANR	5207583	Argument	p		5206975	0					
ANR	5207584	Identifier	p		5206975	0					
ANR	5207585	Argument	pos		5206975	1					
ANR	5207586	Identifier	pos		5206975	0					
ANR	5207587	Argument	count		5206975	2					
ANR	5207588	Identifier	count		5206975	0					
ANR	5207589	Argument	count2		5206975	3					
ANR	5207590	Identifier	count2		5206975	0					
ANR	5207591	IfStatement	"if ( ! EATTWO ( '\\\\' , '}' ) )"		5206975	3					
ANR	5207592	Condition	"! EATTWO ( '\\\\' , '}' )"	709:6:18165:18182	5206975	0	True				
ANR	5207593	UnaryOperationExpression	"! EATTWO ( '\\\\' , '}' )"		5206975	0					
ANR	5207594	UnaryOperator	!		5206975	0					
ANR	5207595	CallExpression	"EATTWO ( '\\\\' , '}' )"		5206975	1					
ANR	5207596	Callee	EATTWO		5206975	0					
ANR	5207597	Identifier	EATTWO		5206975	0					
ANR	5207598	ArgumentList	'\\\\'		5206975	1					
ANR	5207599	Argument	'\\\\'		5206975	0					
ANR	5207600	PrimaryExpression	'\\\\'		5206975	0					
ANR	5207601	Argument	'}'		5206975	1					
ANR	5207602	PrimaryExpression	'}'		5206975	0					
ANR	5207603	CompoundStatement		109:26:2313:2313	5206975	1					
ANR	5207604	WhileStatement	"while ( MORE ( ) && ! SEETWO ( '\\\\' , '}' ) )"		5206975	0					
ANR	5207605	Condition	"MORE ( ) && ! SEETWO ( '\\\\' , '}' )"	710:10:18220:18249	5206975	0	True				
ANR	5207606	AndExpression	"MORE ( ) && ! SEETWO ( '\\\\' , '}' )"		5206975	0		&&			
ANR	5207607	CallExpression	MORE ( )		5206975	0					
ANR	5207608	Callee	MORE		5206975	0					
ANR	5207609	Identifier	MORE		5206975	0					
ANR	5207610	ArgumentList			5206975	1					
ANR	5207611	UnaryOperationExpression	"! SEETWO ( '\\\\' , '}' )"		5206975	1					
ANR	5207612	UnaryOperator	!		5206975	0					
ANR	5207613	CallExpression	"SEETWO ( '\\\\' , '}' )"		5206975	1					
ANR	5207614	Callee	SEETWO		5206975	0					
ANR	5207615	Identifier	SEETWO		5206975	0					
ANR	5207616	ArgumentList	'\\\\'		5206975	1					
ANR	5207617	Argument	'\\\\'		5206975	0					
ANR	5207618	PrimaryExpression	'\\\\'		5206975	0					
ANR	5207619	Argument	'}'		5206975	1					
ANR	5207620	PrimaryExpression	'}'		5206975	0					
ANR	5207621	CompoundStatement		110:42:2380:2380	5206975	1					
ANR	5207622	ExpressionStatement	NEXT ( )	711:4:18258:18265	5206975	0	True				
ANR	5207623	CallExpression	NEXT ( )		5206975	0					
ANR	5207624	Callee	NEXT		5206975	0					
ANR	5207625	Identifier	NEXT		5206975	0					
ANR	5207626	ArgumentList			5206975	1					
ANR	5207627	ExpressionStatement	"REQUIRE ( MORE ( ) , R_REGEX_EBRACE )"	713:3:18275:18306	5206975	1	True				
ANR	5207628	CallExpression	"REQUIRE ( MORE ( ) , R_REGEX_EBRACE )"		5206975	0					
ANR	5207629	Callee	REQUIRE		5206975	0					
ANR	5207630	Identifier	REQUIRE		5206975	0					
ANR	5207631	ArgumentList	MORE ( )		5206975	1					
ANR	5207632	Argument	MORE ( )		5206975	0					
ANR	5207633	CallExpression	MORE ( )		5206975	0					
ANR	5207634	Callee	MORE		5206975	0					
ANR	5207635	Identifier	MORE		5206975	0					
ANR	5207636	ArgumentList			5206975	1					
ANR	5207637	Argument	R_REGEX_EBRACE		5206975	1					
ANR	5207638	Identifier	R_REGEX_EBRACE		5206975	0					
ANR	5207639	ExpressionStatement	SETERROR ( R_REGEX_BADBR )	714:3:18311:18334	5206975	2	True				
ANR	5207640	CallExpression	SETERROR ( R_REGEX_BADBR )		5206975	0					
ANR	5207641	Callee	SETERROR		5206975	0					
ANR	5207642	Identifier	SETERROR		5206975	0					
ANR	5207643	ArgumentList	R_REGEX_BADBR		5206975	1					
ANR	5207644	Argument	R_REGEX_BADBR		5206975	0					
ANR	5207645	Identifier	R_REGEX_BADBR		5206975	0					
ANR	5207646	ElseStatement	else		5206975	0					
ANR	5207647	IfStatement	if ( c == '$' )		5206975	0					
ANR	5207648	Condition	c == '$'	716:12:18352:18359	5206975	0	True				
ANR	5207649	EqualityExpression	c == '$'		5206975	0		==			
ANR	5207650	Identifier	c		5206975	0					
ANR	5207651	PrimaryExpression	'$'		5206975	1					
ANR	5207652	CompoundStatement		116:22:2490:2490	5206975	1					
ANR	5207653	ReturnStatement	return ( 1 ) ;	717:2:18395:18405	5206975	0	True				
ANR	5207654	PrimaryExpression	1		5206975	0					
ANR	5207655	ReturnStatement	return ( 0 ) ;	720:1:18412:18421	5206975	19	True				
ANR	5207656	PrimaryExpression	0		5206975	0					
ANR	5207657	ReturnType	static int		5206975	1					
ANR	5207658	Identifier	p_simp_re		5206975	2					
ANR	5207659	ParameterList	"struct parse * p , int starordinary"		5206975	3					
ANR	5207660	Parameter	struct parse * p	599:10:15787:15801	5206975	0	True				
ANR	5207661	ParameterType	struct parse *		5206975	0					
ANR	5207662	Identifier	p		5206975	1					
ANR	5207663	Parameter	int starordinary	600:4:15808:15823	5206975	1	True				
ANR	5207664	ParameterType	int		5206975	0					
ANR	5207665	Identifier	starordinary		5206975	1					
ANR	5207666	CFGEntryNode	ENTRY		5206975		True				
ANR	5207667	CFGExitNode	EXIT		5206975		True				
ANR	5207668	Symbol	p -> g -> backrefs		5206975						
ANR	5207669	Symbol	R_REGEX_BADRPT		5206975						
ANR	5207670	Symbol	subno		5206975						
ANR	5207671	Symbol	R_REGEX_EPAREN		5206975						
ANR	5207672	Symbol	EATTWO		5206975						
ANR	5207673	Symbol	INTFINITY		5206975						
ANR	5207674	Symbol	SEETWO		5206975						
ANR	5207675	Symbol	O_QUEST		5206975						
ANR	5207676	Symbol	p -> pend		5206975						
ANR	5207677	Symbol	ORPAREN		5206975						
ANR	5207678	Symbol	* p -> pbegin		5206975						
ANR	5207679	Symbol	isdigit		5206975						
ANR	5207680	Symbol	p -> g		5206975						
ANR	5207681	Symbol	p -> pbegin		5206975						
ANR	5207682	Symbol	* * i		5206975						
ANR	5207683	Symbol	O_PLUS		5206975						
ANR	5207684	Symbol	* p -> strip		5206975						
ANR	5207685	Symbol	count		5206975						
ANR	5207686	Symbol	R_REGEX_ESUBREG		5206975						
ANR	5207687	Symbol	starordinary		5206975						
ANR	5207688	Symbol	R_REGEX_EBRACE		5206975						
ANR	5207689	Symbol	* p -> g		5206975						
ANR	5207690	Symbol	* * * p		5206975						
ANR	5207691	Symbol	p -> strip		5206975						
ANR	5207692	Symbol	OANY		5206975						
ANR	5207693	Symbol	EAT		5206975						
ANR	5207694	Symbol	R_REGEX_NEWLINE		5206975						
ANR	5207695	Symbol	count2		5206975						
ANR	5207696	Symbol	OPLUS_		5206975						
ANR	5207697	Symbol	HERE		5206975						
ANR	5207698	Symbol	* p -> pend		5206975						
ANR	5207699	Symbol	BACKSL		5206975						
ANR	5207700	Symbol	pos		5206975						
ANR	5207701	Symbol	~BACKSL		5206975						
ANR	5207702	Symbol	* * p		5206975						
ANR	5207703	Symbol	* * p -> pbegin		5206975						
ANR	5207704	Symbol	OP		5206975						
ANR	5207705	Symbol	c		5206975						
ANR	5207706	Symbol	OBACK_		5206975						
ANR	5207707	Symbol	* subno		5206975						
ANR	5207708	Symbol	* * p -> pend		5206975						
ANR	5207709	Symbol	i		5206975						
ANR	5207710	Symbol	R_REGEX_BADBR		5206975						
ANR	5207711	Symbol	p -> g -> cflags		5206975						
ANR	5207712	Symbol	OLPAREN		5206975						
ANR	5207713	Symbol	p		5206975						
ANR	5207714	Symbol	MORE		5206975						
ANR	5207715	Symbol	* i		5206975						
ANR	5207716	Symbol	GETNEXT		5206975						
ANR	5207717	Symbol	p -> g -> nsub		5206975						
ANR	5207718	Symbol	R_REGEX_EESCAPE		5206975						
ANR	5207719	Symbol	* p		5206975						
ANR	5207720	Symbol	NPAREN		5206975						
ANR	5207721	Symbol	p_count		5206975						
ANR	5207722	Symbol	PEEK		5206975						
ANR	5207723	Symbol	O_BACK		5206975						
ANR	5207724	Symbol	OQUEST_		5206975						
ANR	5207725	Function	p_count	726:0:18471:18753							
ANR	5207726	FunctionDef	p_count (struct parse * p)		5207725	0					
ANR	5207727	CompoundStatement		728:0:18525:18753	5207725	0					
ANR	5207728	IdentifierDeclStatement	int count = 0 ;	729:1:18528:18541	5207725	0	True				
ANR	5207729	IdentifierDecl	count = 0		5207725	0					
ANR	5207730	IdentifierDeclType	int		5207725	0					
ANR	5207731	Identifier	count		5207725	1					
ANR	5207732	AssignmentExpression	count = 0		5207725	2		=			
ANR	5207733	Identifier	count		5207725	0					
ANR	5207734	PrimaryExpression	0		5207725	1					
ANR	5207735	IdentifierDeclStatement	int ndigits = 0 ;	730:1:18544:18559	5207725	1	True				
ANR	5207736	IdentifierDecl	ndigits = 0		5207725	0					
ANR	5207737	IdentifierDeclType	int		5207725	0					
ANR	5207738	Identifier	ndigits		5207725	1					
ANR	5207739	AssignmentExpression	ndigits = 0		5207725	2		=			
ANR	5207740	Identifier	ndigits		5207725	0					
ANR	5207741	PrimaryExpression	0		5207725	1					
ANR	5207742	WhileStatement	while ( MORE ( ) && isdigit ( ( ut8 ) PEEK ( ) ) && count <= DUPMAX )		5207725	2					
ANR	5207743	Condition	MORE ( ) && isdigit ( ( ut8 ) PEEK ( ) ) && count <= DUPMAX	732:8:18570:18618	5207725	0	True				
ANR	5207744	AndExpression	MORE ( ) && isdigit ( ( ut8 ) PEEK ( ) ) && count <= DUPMAX		5207725	0		&&			
ANR	5207745	CallExpression	MORE ( )		5207725	0					
ANR	5207746	Callee	MORE		5207725	0					
ANR	5207747	Identifier	MORE		5207725	0					
ANR	5207748	ArgumentList			5207725	1					
ANR	5207749	AndExpression	isdigit ( ( ut8 ) PEEK ( ) ) && count <= DUPMAX		5207725	1		&&			
ANR	5207750	CallExpression	isdigit ( ( ut8 ) PEEK ( ) )		5207725	0					
ANR	5207751	Callee	isdigit		5207725	0					
ANR	5207752	Identifier	isdigit		5207725	0					
ANR	5207753	ArgumentList	( ut8 ) PEEK ( )		5207725	1					
ANR	5207754	Argument	( ut8 ) PEEK ( )		5207725	0					
ANR	5207755	CastExpression	( ut8 ) PEEK ( )		5207725	0					
ANR	5207756	CastTarget	ut8		5207725	0					
ANR	5207757	CallExpression	PEEK ( )		5207725	1					
ANR	5207758	Callee	PEEK		5207725	0					
ANR	5207759	Identifier	PEEK		5207725	0					
ANR	5207760	ArgumentList			5207725	1					
ANR	5207761	RelationalExpression	count <= DUPMAX		5207725	1		<=			
ANR	5207762	Identifier	count		5207725	0					
ANR	5207763	Identifier	DUPMAX		5207725	1					
ANR	5207764	CompoundStatement		5:59:95:95	5207725	1					
ANR	5207765	ExpressionStatement	count = count * 10 + ( GETNEXT ( ) - '0' )	733:2:18625:18661	5207725	0	True				
ANR	5207766	AssignmentExpression	count = count * 10 + ( GETNEXT ( ) - '0' )		5207725	0		=			
ANR	5207767	Identifier	count		5207725	0					
ANR	5207768	AdditiveExpression	count * 10 + ( GETNEXT ( ) - '0' )		5207725	1		+			
ANR	5207769	MultiplicativeExpression	count * 10		5207725	0		*			
ANR	5207770	Identifier	count		5207725	0					
ANR	5207771	PrimaryExpression	10		5207725	1					
ANR	5207772	AdditiveExpression	GETNEXT ( ) - '0'		5207725	1		-			
ANR	5207773	CallExpression	GETNEXT ( )		5207725	0					
ANR	5207774	Callee	GETNEXT		5207725	0					
ANR	5207775	Identifier	GETNEXT		5207725	0					
ANR	5207776	ArgumentList			5207725	1					
ANR	5207777	PrimaryExpression	'0'		5207725	1					
ANR	5207778	ExpressionStatement	ndigits ++	734:2:18665:18674	5207725	1	True				
ANR	5207779	PostIncDecOperationExpression	ndigits ++		5207725	0					
ANR	5207780	Identifier	ndigits		5207725	0					
ANR	5207781	IncDec	++		5207725	1					
ANR	5207782	ExpressionStatement	"REQUIRE ( ndigits > 0 && count <= DUPMAX , R_REGEX_BADBR )"	737:1:18681:18735	5207725	3	True				
ANR	5207783	CallExpression	"REQUIRE ( ndigits > 0 && count <= DUPMAX , R_REGEX_BADBR )"		5207725	0					
ANR	5207784	Callee	REQUIRE		5207725	0					
ANR	5207785	Identifier	REQUIRE		5207725	0					
ANR	5207786	ArgumentList	ndigits > 0 && count <= DUPMAX		5207725	1					
ANR	5207787	Argument	ndigits > 0 && count <= DUPMAX		5207725	0					
ANR	5207788	AndExpression	ndigits > 0 && count <= DUPMAX		5207725	0		&&			
ANR	5207789	RelationalExpression	ndigits > 0		5207725	0		>			
ANR	5207790	Identifier	ndigits		5207725	0					
ANR	5207791	PrimaryExpression	0		5207725	1					
ANR	5207792	RelationalExpression	count <= DUPMAX		5207725	1		<=			
ANR	5207793	Identifier	count		5207725	0					
ANR	5207794	Identifier	DUPMAX		5207725	1					
ANR	5207795	Argument	R_REGEX_BADBR		5207725	1					
ANR	5207796	Identifier	R_REGEX_BADBR		5207725	0					
ANR	5207797	ReturnStatement	return ( count ) ;	738:1:18738:18751	5207725	4	True				
ANR	5207798	Identifier	count		5207725	0					
ANR	5207799	ReturnType	static int		5207725	1					
ANR	5207800	Identifier	p_count		5207725	2					
ANR	5207801	ParameterList	struct parse * p		5207725	3					
ANR	5207802	Parameter	struct parse * p	727:8:18508:18522	5207725	0	True				
ANR	5207803	ParameterType	struct parse *		5207725	0					
ANR	5207804	Identifier	p		5207725	1					
ANR	5207805	CFGEntryNode	ENTRY		5207725		True				
ANR	5207806	CFGExitNode	EXIT		5207725		True				
ANR	5207807	Symbol	p		5207725						
ANR	5207808	Symbol	MORE		5207725						
ANR	5207809	Symbol	GETNEXT		5207725						
ANR	5207810	Symbol	count		5207725						
ANR	5207811	Symbol	DUPMAX		5207725						
ANR	5207812	Symbol	isdigit		5207725						
ANR	5207813	Symbol	ndigits		5207725						
ANR	5207814	Symbol	PEEK		5207725						
ANR	5207815	Symbol	R_REGEX_BADBR		5207725						
ANR	5207816	Function	p_bracket	747:0:18923:20483							
ANR	5207817	FunctionDef	p_bracket (struct parse * p)		5207816	0					
ANR	5207818	CompoundStatement		747:39:18962:20483	5207816	0					
ANR	5207819	IdentifierDeclStatement	cset * cs ;	748:1:18965:18973	5207816	0	True				
ANR	5207820	IdentifierDecl	* cs		5207816	0					
ANR	5207821	IdentifierDeclType	cset *		5207816	0					
ANR	5207822	Identifier	cs		5207816	1					
ANR	5207823	IdentifierDeclStatement	int invert = 0 ;	749:1:18976:18990	5207816	1	True				
ANR	5207824	IdentifierDecl	invert = 0		5207816	0					
ANR	5207825	IdentifierDeclType	int		5207816	0					
ANR	5207826	Identifier	invert		5207816	1					
ANR	5207827	AssignmentExpression	invert = 0		5207816	2		=			
ANR	5207828	Identifier	invert		5207816	0					
ANR	5207829	PrimaryExpression	0		5207816	1					
ANR	5207830	IfStatement	"if ( p -> next + 5 < p -> end && strncmp ( p -> next , ""[:<:]]"" , 6 ) == 0 )"		5207816	2					
ANR	5207831	Condition	"p -> next + 5 < p -> end && strncmp ( p -> next , ""[:<:]]"" , 6 ) == 0"	752:5:19050:19107	5207816	0	True				
ANR	5207832	AndExpression	"p -> next + 5 < p -> end && strncmp ( p -> next , ""[:<:]]"" , 6 ) == 0"		5207816	0		&&			
ANR	5207833	RelationalExpression	p -> next + 5 < p -> end		5207816	0		<			
ANR	5207834	AdditiveExpression	p -> next + 5		5207816	0		+			
ANR	5207835	PtrMemberAccess	p -> next		5207816	0					
ANR	5207836	Identifier	p		5207816	0					
ANR	5207837	Identifier	next		5207816	1					
ANR	5207838	PrimaryExpression	5		5207816	1					
ANR	5207839	PtrMemberAccess	p -> end		5207816	1					
ANR	5207840	Identifier	p		5207816	0					
ANR	5207841	Identifier	end		5207816	1					
ANR	5207842	EqualityExpression	"strncmp ( p -> next , ""[:<:]]"" , 6 ) == 0"		5207816	1		==			
ANR	5207843	CallExpression	"strncmp ( p -> next , ""[:<:]]"" , 6 )"		5207816	0					
ANR	5207844	Callee	strncmp		5207816	0					
ANR	5207845	Identifier	strncmp		5207816	0					
ANR	5207846	ArgumentList	p -> next		5207816	1					
ANR	5207847	Argument	p -> next		5207816	0					
ANR	5207848	PtrMemberAccess	p -> next		5207816	0					
ANR	5207849	Identifier	p		5207816	0					
ANR	5207850	Identifier	next		5207816	1					
ANR	5207851	Argument	"""[:<:]]"""		5207816	1					
ANR	5207852	PrimaryExpression	"""[:<:]]"""		5207816	0					
ANR	5207853	Argument	6		5207816	2					
ANR	5207854	PrimaryExpression	6		5207816	0					
ANR	5207855	PrimaryExpression	0		5207816	1					
ANR	5207856	CompoundStatement		6:65:147:147	5207816	1					
ANR	5207857	ExpressionStatement	"EMIT ( OBOW , 0 )"	753:2:19114:19127	5207816	0	True				
ANR	5207858	CallExpression	"EMIT ( OBOW , 0 )"		5207816	0					
ANR	5207859	Callee	EMIT		5207816	0					
ANR	5207860	Identifier	EMIT		5207816	0					
ANR	5207861	ArgumentList	OBOW		5207816	1					
ANR	5207862	Argument	OBOW		5207816	0					
ANR	5207863	Identifier	OBOW		5207816	0					
ANR	5207864	Argument	0		5207816	1					
ANR	5207865	PrimaryExpression	0		5207816	0					
ANR	5207866	ExpressionStatement	NEXTn ( 6 )	754:2:19131:19139	5207816	1	True				
ANR	5207867	CallExpression	NEXTn ( 6 )		5207816	0					
ANR	5207868	Callee	NEXTn		5207816	0					
ANR	5207869	Identifier	NEXTn		5207816	0					
ANR	5207870	ArgumentList	6		5207816	1					
ANR	5207871	Argument	6		5207816	0					
ANR	5207872	PrimaryExpression	6		5207816	0					
ANR	5207873	ReturnStatement	return ;	755:2:19143:19149	5207816	2	True				
ANR	5207874	IfStatement	"if ( p -> next + 5 < p -> end && strncmp ( p -> next , ""[:>:]]"" , 6 ) == 0 )"		5207816	3					
ANR	5207875	Condition	"p -> next + 5 < p -> end && strncmp ( p -> next , ""[:>:]]"" , 6 ) == 0"	757:5:19159:19216	5207816	0	True				
ANR	5207876	AndExpression	"p -> next + 5 < p -> end && strncmp ( p -> next , ""[:>:]]"" , 6 ) == 0"		5207816	0		&&			
ANR	5207877	RelationalExpression	p -> next + 5 < p -> end		5207816	0		<			
ANR	5207878	AdditiveExpression	p -> next + 5		5207816	0		+			
ANR	5207879	PtrMemberAccess	p -> next		5207816	0					
ANR	5207880	Identifier	p		5207816	0					
ANR	5207881	Identifier	next		5207816	1					
ANR	5207882	PrimaryExpression	5		5207816	1					
ANR	5207883	PtrMemberAccess	p -> end		5207816	1					
ANR	5207884	Identifier	p		5207816	0					
ANR	5207885	Identifier	end		5207816	1					
ANR	5207886	EqualityExpression	"strncmp ( p -> next , ""[:>:]]"" , 6 ) == 0"		5207816	1		==			
ANR	5207887	CallExpression	"strncmp ( p -> next , ""[:>:]]"" , 6 )"		5207816	0					
ANR	5207888	Callee	strncmp		5207816	0					
ANR	5207889	Identifier	strncmp		5207816	0					
ANR	5207890	ArgumentList	p -> next		5207816	1					
ANR	5207891	Argument	p -> next		5207816	0					
ANR	5207892	PtrMemberAccess	p -> next		5207816	0					
ANR	5207893	Identifier	p		5207816	0					
ANR	5207894	Identifier	next		5207816	1					
ANR	5207895	Argument	"""[:>:]]"""		5207816	1					
ANR	5207896	PrimaryExpression	"""[:>:]]"""		5207816	0					
ANR	5207897	Argument	6		5207816	2					
ANR	5207898	PrimaryExpression	6		5207816	0					
ANR	5207899	PrimaryExpression	0		5207816	1					
ANR	5207900	CompoundStatement		11:65:256:256	5207816	1					
ANR	5207901	ExpressionStatement	"EMIT ( OEOW , 0 )"	758:2:19223:19236	5207816	0	True				
ANR	5207902	CallExpression	"EMIT ( OEOW , 0 )"		5207816	0					
ANR	5207903	Callee	EMIT		5207816	0					
ANR	5207904	Identifier	EMIT		5207816	0					
ANR	5207905	ArgumentList	OEOW		5207816	1					
ANR	5207906	Argument	OEOW		5207816	0					
ANR	5207907	Identifier	OEOW		5207816	0					
ANR	5207908	Argument	0		5207816	1					
ANR	5207909	PrimaryExpression	0		5207816	0					
ANR	5207910	ExpressionStatement	NEXTn ( 6 )	759:2:19240:19248	5207816	1	True				
ANR	5207911	CallExpression	NEXTn ( 6 )		5207816	0					
ANR	5207912	Callee	NEXTn		5207816	0					
ANR	5207913	Identifier	NEXTn		5207816	0					
ANR	5207914	ArgumentList	6		5207816	1					
ANR	5207915	Argument	6		5207816	0					
ANR	5207916	PrimaryExpression	6		5207816	0					
ANR	5207917	ReturnStatement	return ;	760:2:19252:19258	5207816	2	True				
ANR	5207918	IfStatement	if ( ! ( cs = allocset ( p ) ) )		5207816	4					
ANR	5207919	Condition	! ( cs = allocset ( p ) )	763:5:19269:19287	5207816	0	True				
ANR	5207920	UnaryOperationExpression	! ( cs = allocset ( p ) )		5207816	0					
ANR	5207921	UnaryOperator	!		5207816	0					
ANR	5207922	AssignmentExpression	cs = allocset ( p )		5207816	1		=			
ANR	5207923	Identifier	cs		5207816	0					
ANR	5207924	CallExpression	allocset ( p )		5207816	1					
ANR	5207925	Callee	allocset		5207816	0					
ANR	5207926	Identifier	allocset		5207816	0					
ANR	5207927	ArgumentList	p		5207816	1					
ANR	5207928	Argument	p		5207816	0					
ANR	5207929	Identifier	p		5207816	0					
ANR	5207930	CompoundStatement		17:26:327:327	5207816	1					
ANR	5207931	ReturnStatement	return ;	765:2:19337:19343	5207816	0	True				
ANR	5207932	IfStatement	if ( EAT ( '^' ) )		5207816	5					
ANR	5207933	Condition	EAT ( '^' )	768:5:19354:19362	5207816	0	True				
ANR	5207934	CallExpression	EAT ( '^' )		5207816	0					
ANR	5207935	Callee	EAT		5207816	0					
ANR	5207936	Identifier	EAT		5207816	0					
ANR	5207937	ArgumentList	'^'		5207816	1					
ANR	5207938	Argument	'^'		5207816	0					
ANR	5207939	PrimaryExpression	'^'		5207816	0					
ANR	5207940	CompoundStatement		22:16:402:402	5207816	1					
ANR	5207941	ExpressionStatement	invert ++	769:2:19369:19377	5207816	0	True				
ANR	5207942	PostIncDecOperationExpression	invert ++		5207816	0					
ANR	5207943	Identifier	invert		5207816	0					
ANR	5207944	IncDec	++		5207816	1					
ANR	5207945	IfStatement	if ( EAT ( ']' ) )		5207816	6					
ANR	5207946	Condition	EAT ( ']' )	771:5:19424:19432	5207816	0	True				
ANR	5207947	CallExpression	EAT ( ']' )		5207816	0					
ANR	5207948	Callee	EAT		5207816	0					
ANR	5207949	Identifier	EAT		5207816	0					
ANR	5207950	ArgumentList	']'		5207816	1					
ANR	5207951	Argument	']'		5207816	0					
ANR	5207952	PrimaryExpression	']'		5207816	0					
ANR	5207953	CompoundStatement		25:16:472:472	5207816	1					
ANR	5207954	ExpressionStatement	"CHadd ( cs , ']' )"	772:2:19439:19453	5207816	0	True				
ANR	5207955	CallExpression	"CHadd ( cs , ']' )"		5207816	0					
ANR	5207956	Callee	CHadd		5207816	0					
ANR	5207957	Identifier	CHadd		5207816	0					
ANR	5207958	ArgumentList	cs		5207816	1					
ANR	5207959	Argument	cs		5207816	0					
ANR	5207960	Identifier	cs		5207816	0					
ANR	5207961	Argument	']'		5207816	1					
ANR	5207962	PrimaryExpression	']'		5207816	0					
ANR	5207963	ElseStatement	else		5207816	0					
ANR	5207964	IfStatement	if ( EAT ( '-' ) )		5207816	0					
ANR	5207965	Condition	EAT ( '-' )	773:12:19467:19475	5207816	0	True				
ANR	5207966	CallExpression	EAT ( '-' )		5207816	0					
ANR	5207967	Callee	EAT		5207816	0					
ANR	5207968	Identifier	EAT		5207816	0					
ANR	5207969	ArgumentList	'-'		5207816	1					
ANR	5207970	Argument	'-'		5207816	0					
ANR	5207971	PrimaryExpression	'-'		5207816	0					
ANR	5207972	CompoundStatement		27:23:515:515	5207816	1					
ANR	5207973	ExpressionStatement	"CHadd ( cs , '-' )"	774:2:19482:19497	5207816	0	True				
ANR	5207974	CallExpression	"CHadd ( cs , '-' )"		5207816	0					
ANR	5207975	Callee	CHadd		5207816	0					
ANR	5207976	Identifier	CHadd		5207816	0					
ANR	5207977	ArgumentList	cs		5207816	1					
ANR	5207978	Argument	cs		5207816	0					
ANR	5207979	Identifier	cs		5207816	0					
ANR	5207980	Argument	'-'		5207816	1					
ANR	5207981	PrimaryExpression	'-'		5207816	0					
ANR	5207982	WhileStatement	"while ( MORE ( ) && PEEK ( ) != ']' && ! SEETWO ( '-' , ']' ) )"		5207816	7					
ANR	5207983	Condition	"MORE ( ) && PEEK ( ) != ']' && ! SEETWO ( '-' , ']' )"	776:8:19510:19556	5207816	0	True				
ANR	5207984	AndExpression	"MORE ( ) && PEEK ( ) != ']' && ! SEETWO ( '-' , ']' )"		5207816	0		&&			
ANR	5207985	CallExpression	MORE ( )		5207816	0					
ANR	5207986	Callee	MORE		5207816	0					
ANR	5207987	Identifier	MORE		5207816	0					
ANR	5207988	ArgumentList			5207816	1					
ANR	5207989	AndExpression	"PEEK ( ) != ']' && ! SEETWO ( '-' , ']' )"		5207816	1		&&			
ANR	5207990	EqualityExpression	PEEK ( ) != ']'		5207816	0		!=			
ANR	5207991	CallExpression	PEEK ( )		5207816	0					
ANR	5207992	Callee	PEEK		5207816	0					
ANR	5207993	Identifier	PEEK		5207816	0					
ANR	5207994	ArgumentList			5207816	1					
ANR	5207995	PrimaryExpression	']'		5207816	1					
ANR	5207996	UnaryOperationExpression	"! SEETWO ( '-' , ']' )"		5207816	1					
ANR	5207997	UnaryOperator	!		5207816	0					
ANR	5207998	CallExpression	"SEETWO ( '-' , ']' )"		5207816	1					
ANR	5207999	Callee	SEETWO		5207816	0					
ANR	5208000	Identifier	SEETWO		5207816	0					
ANR	5208001	ArgumentList	'-'		5207816	1					
ANR	5208002	Argument	'-'		5207816	0					
ANR	5208003	PrimaryExpression	'-'		5207816	0					
ANR	5208004	Argument	']'		5207816	1					
ANR	5208005	PrimaryExpression	']'		5207816	0					
ANR	5208006	CompoundStatement		30:57:596:596	5207816	1					
ANR	5208007	ExpressionStatement	"p_b_term ( p , cs )"	777:2:19563:19579	5207816	0	True				
ANR	5208008	CallExpression	"p_b_term ( p , cs )"		5207816	0					
ANR	5208009	Callee	p_b_term		5207816	0					
ANR	5208010	Identifier	p_b_term		5207816	0					
ANR	5208011	ArgumentList	p		5207816	1					
ANR	5208012	Argument	p		5207816	0					
ANR	5208013	Identifier	p		5207816	0					
ANR	5208014	Argument	cs		5207816	1					
ANR	5208015	Identifier	cs		5207816	0					
ANR	5208016	IfStatement	if ( EAT ( '-' ) )		5207816	8					
ANR	5208017	Condition	EAT ( '-' )	779:5:19589:19597	5207816	0	True				
ANR	5208018	CallExpression	EAT ( '-' )		5207816	0					
ANR	5208019	Callee	EAT		5207816	0					
ANR	5208020	Identifier	EAT		5207816	0					
ANR	5208021	ArgumentList	'-'		5207816	1					
ANR	5208022	Argument	'-'		5207816	0					
ANR	5208023	PrimaryExpression	'-'		5207816	0					
ANR	5208024	CompoundStatement		33:16:637:637	5207816	1					
ANR	5208025	ExpressionStatement	"CHadd ( cs , '-' )"	780:2:19604:19619	5207816	0	True				
ANR	5208026	CallExpression	"CHadd ( cs , '-' )"		5207816	0					
ANR	5208027	Callee	CHadd		5207816	0					
ANR	5208028	Identifier	CHadd		5207816	0					
ANR	5208029	ArgumentList	cs		5207816	1					
ANR	5208030	Argument	cs		5207816	0					
ANR	5208031	Identifier	cs		5207816	0					
ANR	5208032	Argument	'-'		5207816	1					
ANR	5208033	PrimaryExpression	'-'		5207816	0					
ANR	5208034	ExpressionStatement	"MUSTEAT ( ']' , R_REGEX_EBRACK )"	782:1:19625:19653	5207816	9	True				
ANR	5208035	CallExpression	"MUSTEAT ( ']' , R_REGEX_EBRACK )"		5207816	0					
ANR	5208036	Callee	MUSTEAT		5207816	0					
ANR	5208037	Identifier	MUSTEAT		5207816	0					
ANR	5208038	ArgumentList	']'		5207816	1					
ANR	5208039	Argument	']'		5207816	0					
ANR	5208040	PrimaryExpression	']'		5207816	0					
ANR	5208041	Argument	R_REGEX_EBRACK		5207816	1					
ANR	5208042	Identifier	R_REGEX_EBRACK		5207816	0					
ANR	5208043	IfStatement	if ( p -> error != 0 )		5207816	10					
ANR	5208044	Condition	p -> error != 0	784:5:19661:19673	5207816	0	True				
ANR	5208045	EqualityExpression	p -> error != 0		5207816	0		!=			
ANR	5208046	PtrMemberAccess	p -> error		5207816	0					
ANR	5208047	Identifier	p		5207816	0					
ANR	5208048	Identifier	error		5207816	1					
ANR	5208049	PrimaryExpression	0		5207816	1					
ANR	5208050	CompoundStatement		38:20:713:713	5207816	1					
ANR	5208051	ExpressionStatement	"freeset ( p , cs )"	785:2:19715:19729	5207816	0	True				
ANR	5208052	CallExpression	"freeset ( p , cs )"		5207816	0					
ANR	5208053	Callee	freeset		5207816	0					
ANR	5208054	Identifier	freeset		5207816	0					
ANR	5208055	ArgumentList	p		5207816	1					
ANR	5208056	Argument	p		5207816	0					
ANR	5208057	Identifier	p		5207816	0					
ANR	5208058	Argument	cs		5207816	1					
ANR	5208059	Identifier	cs		5207816	0					
ANR	5208060	ReturnStatement	return ;	786:2:19733:19739	5207816	1	True				
ANR	5208061	IfStatement	if ( p -> g -> cflags & R_REGEX_ICASE )		5207816	11					
ANR	5208062	Condition	p -> g -> cflags & R_REGEX_ICASE	789:5:19750:19775	5207816	0	True				
ANR	5208063	BitAndExpression	p -> g -> cflags & R_REGEX_ICASE		5207816	0		&			
ANR	5208064	PtrMemberAccess	p -> g -> cflags		5207816	0					
ANR	5208065	PtrMemberAccess	p -> g		5207816	0					
ANR	5208066	Identifier	p		5207816	0					
ANR	5208067	Identifier	g		5207816	1					
ANR	5208068	Identifier	cflags		5207816	1					
ANR	5208069	Identifier	R_REGEX_ICASE		5207816	1					
ANR	5208070	CompoundStatement		45:2:828:834	5207816	1					
ANR	5208071	IdentifierDeclStatement	int i ;	790:2:19782:19787	5207816	0	True				
ANR	5208072	IdentifierDecl	i		5207816	0					
ANR	5208073	IdentifierDeclType	int		5207816	0					
ANR	5208074	Identifier	i		5207816	1					
ANR	5208075	IdentifierDeclStatement	int ci ;	791:2:19791:19797	5207816	1	True				
ANR	5208076	IdentifierDecl	ci		5207816	0					
ANR	5208077	IdentifierDeclType	int		5207816	0					
ANR	5208078	Identifier	ci		5207816	1					
ANR	5208079	ForStatement	for ( i = p -> g -> csetsize - 1 ; i >= 0 ; i -- )		5207816	2					
ANR	5208080	ForInit	i = p -> g -> csetsize - 1 ;	793:7:19807:19829	5207816	0	True				
ANR	5208081	AssignmentExpression	i = p -> g -> csetsize - 1		5207816	0		=			
ANR	5208082	Identifier	i		5207816	0					
ANR	5208083	AdditiveExpression	p -> g -> csetsize - 1		5207816	1		-			
ANR	5208084	PtrMemberAccess	p -> g -> csetsize		5207816	0					
ANR	5208085	PtrMemberAccess	p -> g		5207816	0					
ANR	5208086	Identifier	p		5207816	0					
ANR	5208087	Identifier	g		5207816	1					
ANR	5208088	Identifier	csetsize		5207816	1					
ANR	5208089	PrimaryExpression	1		5207816	1					
ANR	5208090	Condition	i >= 0	793:31:19831:19836	5207816	1	True				
ANR	5208091	RelationalExpression	i >= 0		5207816	0		>=			
ANR	5208092	Identifier	i		5207816	0					
ANR	5208093	PrimaryExpression	0		5207816	1					
ANR	5208094	PostIncDecOperationExpression	i --	793:39:19839:19841	5207816	2	True				
ANR	5208095	Identifier	i		5207816	0					
ANR	5208096	IncDec	--		5207816	1					
ANR	5208097	CompoundStatement		47:44:881:881	5207816	3					
ANR	5208098	IfStatement	"if ( CHIN ( cs , i ) && isalpha ( i ) )"		5207816	0					
ANR	5208099	Condition	"CHIN ( cs , i ) && isalpha ( i )"	794:7:19853:19877	5207816	0	True				
ANR	5208100	AndExpression	"CHIN ( cs , i ) && isalpha ( i )"		5207816	0		&&			
ANR	5208101	CallExpression	"CHIN ( cs , i )"		5207816	0					
ANR	5208102	Callee	CHIN		5207816	0					
ANR	5208103	Identifier	CHIN		5207816	0					
ANR	5208104	ArgumentList	cs		5207816	1					
ANR	5208105	Argument	cs		5207816	0					
ANR	5208106	Identifier	cs		5207816	0					
ANR	5208107	Argument	i		5207816	1					
ANR	5208108	Identifier	i		5207816	0					
ANR	5208109	CallExpression	isalpha ( i )		5207816	1					
ANR	5208110	Callee	isalpha		5207816	0					
ANR	5208111	Identifier	isalpha		5207816	0					
ANR	5208112	ArgumentList	i		5207816	1					
ANR	5208113	Argument	i		5207816	0					
ANR	5208114	Identifier	i		5207816	0					
ANR	5208115	CompoundStatement		48:34:917:917	5207816	1					
ANR	5208116	ExpressionStatement	ci = othercase ( i )	795:4:19886:19903	5207816	0	True				
ANR	5208117	AssignmentExpression	ci = othercase ( i )		5207816	0		=			
ANR	5208118	Identifier	ci		5207816	0					
ANR	5208119	CallExpression	othercase ( i )		5207816	1					
ANR	5208120	Callee	othercase		5207816	0					
ANR	5208121	Identifier	othercase		5207816	0					
ANR	5208122	ArgumentList	i		5207816	1					
ANR	5208123	Argument	i		5207816	0					
ANR	5208124	Identifier	i		5207816	0					
ANR	5208125	IfStatement	if ( ci != i )		5207816	1					
ANR	5208126	Condition	ci != i	796:8:19913:19919	5207816	0	True				
ANR	5208127	EqualityExpression	ci != i		5207816	0		!=			
ANR	5208128	Identifier	ci		5207816	0					
ANR	5208129	Identifier	i		5207816	1					
ANR	5208130	CompoundStatement		50:17:959:959	5207816	1					
ANR	5208131	ExpressionStatement	"CHadd ( cs , ci )"	797:5:19929:19943	5207816	0	True				
ANR	5208132	CallExpression	"CHadd ( cs , ci )"		5207816	0					
ANR	5208133	Callee	CHadd		5207816	0					
ANR	5208134	Identifier	CHadd		5207816	0					
ANR	5208135	ArgumentList	cs		5207816	1					
ANR	5208136	Argument	cs		5207816	0					
ANR	5208137	Identifier	cs		5207816	0					
ANR	5208138	Argument	ci		5207816	1					
ANR	5208139	Identifier	ci		5207816	0					
ANR	5208140	IfStatement	if ( cs -> multis != NULL )		5207816	3					
ANR	5208141	Condition	cs -> multis != NULL	801:6:19966:19983	5207816	0	True				
ANR	5208142	EqualityExpression	cs -> multis != NULL		5207816	0		!=			
ANR	5208143	PtrMemberAccess	cs -> multis		5207816	0					
ANR	5208144	Identifier	cs		5207816	0					
ANR	5208145	Identifier	multis		5207816	1					
ANR	5208146	Identifier	NULL		5207816	1					
ANR	5208147	CompoundStatement		55:26:1023:1023	5207816	1					
ANR	5208148	ExpressionStatement	"mccase ( p , cs )"	802:3:19991:20005	5207816	0	True				
ANR	5208149	CallExpression	"mccase ( p , cs )"		5207816	0					
ANR	5208150	Callee	mccase		5207816	0					
ANR	5208151	Identifier	mccase		5207816	0					
ANR	5208152	ArgumentList	p		5207816	1					
ANR	5208153	Argument	p		5207816	0					
ANR	5208154	Identifier	p		5207816	0					
ANR	5208155	Argument	cs		5207816	1					
ANR	5208156	Identifier	cs		5207816	0					
ANR	5208157	IfStatement	if ( invert )		5207816	12					
ANR	5208158	Condition	invert	805:5:20019:20024	5207816	0	True				
ANR	5208159	Identifier	invert		5207816	0					
ANR	5208160	CompoundStatement		60:2:1068:1073	5207816	1					
ANR	5208161	IdentifierDeclStatement	int i ;	806:2:20031:20036	5207816	0	True				
ANR	5208162	IdentifierDecl	i		5207816	0					
ANR	5208163	IdentifierDeclType	int		5207816	0					
ANR	5208164	Identifier	i		5207816	1					
ANR	5208165	ForStatement	for ( i = p -> g -> csetsize - 1 ; i >= 0 ; i -- )		5207816	1					
ANR	5208166	ForInit	i = p -> g -> csetsize - 1 ;	808:7:20046:20068	5207816	0	True				
ANR	5208167	AssignmentExpression	i = p -> g -> csetsize - 1		5207816	0		=			
ANR	5208168	Identifier	i		5207816	0					
ANR	5208169	AdditiveExpression	p -> g -> csetsize - 1		5207816	1		-			
ANR	5208170	PtrMemberAccess	p -> g -> csetsize		5207816	0					
ANR	5208171	PtrMemberAccess	p -> g		5207816	0					
ANR	5208172	Identifier	p		5207816	0					
ANR	5208173	Identifier	g		5207816	1					
ANR	5208174	Identifier	csetsize		5207816	1					
ANR	5208175	PrimaryExpression	1		5207816	1					
ANR	5208176	Condition	i >= 0	808:31:20070:20075	5207816	1	True				
ANR	5208177	RelationalExpression	i >= 0		5207816	0		>=			
ANR	5208178	Identifier	i		5207816	0					
ANR	5208179	PrimaryExpression	0		5207816	1					
ANR	5208180	PostIncDecOperationExpression	i --	808:39:20078:20080	5207816	2	True				
ANR	5208181	Identifier	i		5207816	0					
ANR	5208182	IncDec	--		5207816	1					
ANR	5208183	CompoundStatement		62:44:1120:1120	5207816	3					
ANR	5208184	IfStatement	"if ( CHIN ( cs , i ) )"		5207816	0					
ANR	5208185	Condition	"CHIN ( cs , i )"	809:7:20092:20103	5207816	0	True				
ANR	5208186	CallExpression	"CHIN ( cs , i )"		5207816	0					
ANR	5208187	Callee	CHIN		5207816	0					
ANR	5208188	Identifier	CHIN		5207816	0					
ANR	5208189	ArgumentList	cs		5207816	1					
ANR	5208190	Argument	cs		5207816	0					
ANR	5208191	Identifier	cs		5207816	0					
ANR	5208192	Argument	i		5207816	1					
ANR	5208193	Identifier	i		5207816	0					
ANR	5208194	CompoundStatement		63:21:1143:1143	5207816	1					
ANR	5208195	ExpressionStatement	"CHsub ( cs , i )"	810:4:20112:20124	5207816	0	True				
ANR	5208196	CallExpression	"CHsub ( cs , i )"		5207816	0					
ANR	5208197	Callee	CHsub		5207816	0					
ANR	5208198	Identifier	CHsub		5207816	0					
ANR	5208199	ArgumentList	cs		5207816	1					
ANR	5208200	Argument	cs		5207816	0					
ANR	5208201	Identifier	cs		5207816	0					
ANR	5208202	Argument	i		5207816	1					
ANR	5208203	Identifier	i		5207816	0					
ANR	5208204	ElseStatement	else		5207816	0					
ANR	5208205	CompoundStatement		65:10:1173:1173	5207816	0					
ANR	5208206	ExpressionStatement	"CHadd ( cs , i )"	812:4:20142:20155	5207816	0	True				
ANR	5208207	CallExpression	"CHadd ( cs , i )"		5207816	0					
ANR	5208208	Callee	CHadd		5207816	0					
ANR	5208209	Identifier	CHadd		5207816	0					
ANR	5208210	ArgumentList	cs		5207816	1					
ANR	5208211	Argument	cs		5207816	0					
ANR	5208212	Identifier	cs		5207816	0					
ANR	5208213	Argument	i		5207816	1					
ANR	5208214	Identifier	i		5207816	0					
ANR	5208215	IfStatement	if ( p -> g -> cflags & R_REGEX_NEWLINE )		5207816	2					
ANR	5208216	Condition	p -> g -> cflags & R_REGEX_NEWLINE	815:6:20172:20201	5207816	0	True				
ANR	5208217	BitAndExpression	p -> g -> cflags & R_REGEX_NEWLINE		5207816	0		&			
ANR	5208218	PtrMemberAccess	p -> g -> cflags		5207816	0					
ANR	5208219	PtrMemberAccess	p -> g		5207816	0					
ANR	5208220	Identifier	p		5207816	0					
ANR	5208221	Identifier	g		5207816	1					
ANR	5208222	Identifier	cflags		5207816	1					
ANR	5208223	Identifier	R_REGEX_NEWLINE		5207816	1					
ANR	5208224	CompoundStatement		69:38:1241:1241	5207816	1					
ANR	5208225	ExpressionStatement	"CHsub ( cs , '\\n' )"	816:3:20209:20225	5207816	0	True				
ANR	5208226	CallExpression	"CHsub ( cs , '\\n' )"		5207816	0					
ANR	5208227	Callee	CHsub		5207816	0					
ANR	5208228	Identifier	CHsub		5207816	0					
ANR	5208229	ArgumentList	cs		5207816	1					
ANR	5208230	Argument	cs		5207816	0					
ANR	5208231	Identifier	cs		5207816	0					
ANR	5208232	Argument	'\\n'		5207816	1					
ANR	5208233	PrimaryExpression	'\\n'		5207816	0					
ANR	5208234	IfStatement	if ( cs -> multis != NULL )		5207816	3					
ANR	5208235	Condition	cs -> multis != NULL	818:6:20237:20254	5207816	0	True				
ANR	5208236	EqualityExpression	cs -> multis != NULL		5207816	0		!=			
ANR	5208237	PtrMemberAccess	cs -> multis		5207816	0					
ANR	5208238	Identifier	cs		5207816	0					
ANR	5208239	Identifier	multis		5207816	1					
ANR	5208240	Identifier	NULL		5207816	1					
ANR	5208241	CompoundStatement		72:26:1294:1294	5207816	1					
ANR	5208242	ExpressionStatement	"mcinvert ( p , cs )"	819:3:20262:20278	5207816	0	True				
ANR	5208243	CallExpression	"mcinvert ( p , cs )"		5207816	0					
ANR	5208244	Callee	mcinvert		5207816	0					
ANR	5208245	Identifier	mcinvert		5207816	0					
ANR	5208246	ArgumentList	p		5207816	1					
ANR	5208247	Argument	p		5207816	0					
ANR	5208248	Identifier	p		5207816	0					
ANR	5208249	Argument	cs		5207816	1					
ANR	5208250	Identifier	cs		5207816	0					
ANR	5208251	IfStatement	if ( cs -> multis )		5207816	13					
ANR	5208252	Condition	cs -> multis	823:5:20293:20302	5207816	0	True				
ANR	5208253	PtrMemberAccess	cs -> multis		5207816	0					
ANR	5208254	Identifier	cs		5207816	0					
ANR	5208255	Identifier	multis		5207816	1					
ANR	5208256	CompoundStatement		77:17:1342:1342	5207816	1					
ANR	5208257	ReturnStatement	return ;	824:2:20320:20326	5207816	0	True				
ANR	5208258	IfStatement	"if ( nch ( p , cs ) == 1 )"		5207816	14					
ANR	5208259	Condition	"nch ( p , cs ) == 1"	827:5:20337:20351	5207816	0	True				
ANR	5208260	EqualityExpression	"nch ( p , cs ) == 1"		5207816	0		==			
ANR	5208261	CallExpression	"nch ( p , cs )"		5207816	0					
ANR	5208262	Callee	nch		5207816	0					
ANR	5208263	Identifier	nch		5207816	0					
ANR	5208264	ArgumentList	p		5207816	1					
ANR	5208265	Argument	p		5207816	0					
ANR	5208266	Identifier	p		5207816	0					
ANR	5208267	Argument	cs		5207816	1					
ANR	5208268	Identifier	cs		5207816	0					
ANR	5208269	PrimaryExpression	1		5207816	1					
ANR	5208270	CompoundStatement		81:22:1391:1391	5207816	1					
ANR	5208271	ExpressionStatement	"ordinary ( p , firstch ( p , cs ) )"	828:2:20389:20416	5207816	0	True				
ANR	5208272	CallExpression	"ordinary ( p , firstch ( p , cs ) )"		5207816	0					
ANR	5208273	Callee	ordinary		5207816	0					
ANR	5208274	Identifier	ordinary		5207816	0					
ANR	5208275	ArgumentList	p		5207816	1					
ANR	5208276	Argument	p		5207816	0					
ANR	5208277	Identifier	p		5207816	0					
ANR	5208278	Argument	"firstch ( p , cs )"		5207816	1					
ANR	5208279	CallExpression	"firstch ( p , cs )"		5207816	0					
ANR	5208280	Callee	firstch		5207816	0					
ANR	5208281	Identifier	firstch		5207816	0					
ANR	5208282	ArgumentList	p		5207816	1					
ANR	5208283	Argument	p		5207816	0					
ANR	5208284	Identifier	p		5207816	0					
ANR	5208285	Argument	cs		5207816	1					
ANR	5208286	Identifier	cs		5207816	0					
ANR	5208287	ExpressionStatement	"freeset ( p , cs )"	829:2:20420:20434	5207816	1	True				
ANR	5208288	CallExpression	"freeset ( p , cs )"		5207816	0					
ANR	5208289	Callee	freeset		5207816	0					
ANR	5208290	Identifier	freeset		5207816	0					
ANR	5208291	ArgumentList	p		5207816	1					
ANR	5208292	Argument	p		5207816	0					
ANR	5208293	Identifier	p		5207816	0					
ANR	5208294	Argument	cs		5207816	1					
ANR	5208295	Identifier	cs		5207816	0					
ANR	5208296	ElseStatement	else		5207816	0					
ANR	5208297	CompoundStatement		84:8:1481:1481	5207816	0					
ANR	5208298	ExpressionStatement	"EMIT ( OANYOF , freezeset ( p , cs ) )"	831:2:20448:20478	5207816	0	True				
ANR	5208299	CallExpression	"EMIT ( OANYOF , freezeset ( p , cs ) )"		5207816	0					
ANR	5208300	Callee	EMIT		5207816	0					
ANR	5208301	Identifier	EMIT		5207816	0					
ANR	5208302	ArgumentList	OANYOF		5207816	1					
ANR	5208303	Argument	OANYOF		5207816	0					
ANR	5208304	Identifier	OANYOF		5207816	0					
ANR	5208305	Argument	"freezeset ( p , cs )"		5207816	1					
ANR	5208306	CallExpression	"freezeset ( p , cs )"		5207816	0					
ANR	5208307	Callee	freezeset		5207816	0					
ANR	5208308	Identifier	freezeset		5207816	0					
ANR	5208309	ArgumentList	p		5207816	1					
ANR	5208310	Argument	p		5207816	0					
ANR	5208311	Identifier	p		5207816	0					
ANR	5208312	Argument	cs		5207816	1					
ANR	5208313	Identifier	cs		5207816	0					
ANR	5208314	ReturnType	static void		5207816	1					
ANR	5208315	Identifier	p_bracket		5207816	2					
ANR	5208316	ParameterList	struct parse * p		5207816	3					
ANR	5208317	Parameter	struct parse * p	747:22:18945:18959	5207816	0	True				
ANR	5208318	ParameterType	struct parse *		5207816	0					
ANR	5208319	Identifier	p		5207816	1					
ANR	5208320	CFGEntryNode	ENTRY		5207816		True				
ANR	5208321	CFGExitNode	EXIT		5207816		True				
ANR	5208322	Symbol	isalpha		5207816						
ANR	5208323	Symbol	p -> next		5207816						
ANR	5208324	Symbol	allocset		5207816						
ANR	5208325	Symbol	othercase		5207816						
ANR	5208326	Symbol	p -> g -> csetsize		5207816						
ANR	5208327	Symbol	strncmp		5207816						
ANR	5208328	Symbol	p -> end		5207816						
ANR	5208329	Symbol	nch		5207816						
ANR	5208330	Symbol	CHIN		5207816						
ANR	5208331	Symbol	SEETWO		5207816						
ANR	5208332	Symbol	OEOW		5207816						
ANR	5208333	Symbol	* * p		5207816						
ANR	5208334	Symbol	OBOW		5207816						
ANR	5208335	Symbol	p -> g		5207816						
ANR	5208336	Symbol	cs -> multis		5207816						
ANR	5208337	Symbol	NULL		5207816						
ANR	5208338	Symbol	invert		5207816						
ANR	5208339	Symbol	ci		5207816						
ANR	5208340	Symbol	i		5207816						
ANR	5208341	Symbol	p -> error		5207816						
ANR	5208342	Symbol	p -> g -> cflags		5207816						
ANR	5208343	Symbol	p		5207816						
ANR	5208344	Symbol	cs		5207816						
ANR	5208345	Symbol	MORE		5207816						
ANR	5208346	Symbol	* p -> g		5207816						
ANR	5208347	Symbol	firstch		5207816						
ANR	5208348	Symbol	OANYOF		5207816						
ANR	5208349	Symbol	freezeset		5207816						
ANR	5208350	Symbol	R_REGEX_ICASE		5207816						
ANR	5208351	Symbol	* cs		5207816						
ANR	5208352	Symbol	EAT		5207816						
ANR	5208353	Symbol	* p		5207816						
ANR	5208354	Symbol	R_REGEX_EBRACK		5207816						
ANR	5208355	Symbol	PEEK		5207816						
ANR	5208356	Symbol	R_REGEX_NEWLINE		5207816						
ANR	5208357	Function	p_b_term	838:0:20552:21882							
ANR	5208358	FunctionDef	"p_b_term (struct parse * p , cset * cs)"		5208357	0					
ANR	5208359	CompoundStatement		838:48:20600:21882	5208357	0					
ANR	5208360	IdentifierDeclStatement	char c ;	839:1:20603:20609	5208357	0	True				
ANR	5208361	IdentifierDecl	c		5208357	0					
ANR	5208362	IdentifierDeclType	char		5208357	0					
ANR	5208363	Identifier	c		5208357	1					
ANR	5208364	IdentifierDeclStatement	"char start = 0 , finish ;"	840:1:20612:20634	5208357	1	True				
ANR	5208365	IdentifierDecl	start = 0		5208357	0					
ANR	5208366	IdentifierDeclType	char		5208357	0					
ANR	5208367	Identifier	start		5208357	1					
ANR	5208368	AssignmentExpression	start = 0		5208357	2		=			
ANR	5208369	Identifier	start		5208357	0					
ANR	5208370	PrimaryExpression	0		5208357	1					
ANR	5208371	IdentifierDecl	finish		5208357	1					
ANR	5208372	IdentifierDeclType	char		5208357	0					
ANR	5208373	Identifier	finish		5208357	1					
ANR	5208374	IdentifierDeclStatement	int i ;	841:1:20637:20642	5208357	2	True				
ANR	5208375	IdentifierDecl	i		5208357	0					
ANR	5208376	IdentifierDeclType	int		5208357	0					
ANR	5208377	Identifier	i		5208357	1					
ANR	5208378	SwitchStatement	switch ( ( MORE ( ) ) ? PEEK ( ) : '\\0' )		5208357	3					
ANR	5208379	Condition	( MORE ( ) ) ? PEEK ( ) : '\\0'	844:9:20685:20708	5208357	0	True				
ANR	5208380	ConditionalExpression	( MORE ( ) ) ? PEEK ( ) : '\\0'		5208357	0					
ANR	5208381	Condition	MORE ( )		5208357	0					
ANR	5208382	CallExpression	MORE ( )		5208357	0					
ANR	5208383	Callee	MORE		5208357	0					
ANR	5208384	Identifier	MORE		5208357	0					
ANR	5208385	ArgumentList			5208357	1					
ANR	5208386	CallExpression	PEEK ( )		5208357	1					
ANR	5208387	Callee	PEEK		5208357	0					
ANR	5208388	Identifier	PEEK		5208357	0					
ANR	5208389	ArgumentList			5208357	1					
ANR	5208390	PrimaryExpression	'\\0'		5208357	2					
ANR	5208391	CompoundStatement		7:35:110:110	5208357	1					
ANR	5208392	Label	case '[' :	845:1:20714:20722	5208357	0	True				
ANR	5208393	ExpressionStatement	c = ( MORE2 ( ) ) ? PEEK2 ( ) : '\\0'	846:2:20726:20756	5208357	1	True				
ANR	5208394	AssignmentExpression	c = ( MORE2 ( ) ) ? PEEK2 ( ) : '\\0'		5208357	0		=			
ANR	5208395	Identifier	c		5208357	0					
ANR	5208396	ConditionalExpression	( MORE2 ( ) ) ? PEEK2 ( ) : '\\0'		5208357	1					
ANR	5208397	Condition	MORE2 ( )		5208357	0					
ANR	5208398	CallExpression	MORE2 ( )		5208357	0					
ANR	5208399	Callee	MORE2		5208357	0					
ANR	5208400	Identifier	MORE2		5208357	0					
ANR	5208401	ArgumentList			5208357	1					
ANR	5208402	CallExpression	PEEK2 ( )		5208357	1					
ANR	5208403	Callee	PEEK2		5208357	0					
ANR	5208404	Identifier	PEEK2		5208357	0					
ANR	5208405	ArgumentList			5208357	1					
ANR	5208406	PrimaryExpression	'\\0'		5208357	2					
ANR	5208407	BreakStatement	break ;	847:2:20760:20765	5208357	2	True				
ANR	5208408	Label	case '-' :	848:1:20768:20776	5208357	3	True				
ANR	5208409	ExpressionStatement	SETERROR ( R_REGEX_ERANGE )	849:2:20780:20804	5208357	4	True				
ANR	5208410	CallExpression	SETERROR ( R_REGEX_ERANGE )		5208357	0					
ANR	5208411	Callee	SETERROR		5208357	0					
ANR	5208412	Identifier	SETERROR		5208357	0					
ANR	5208413	ArgumentList	R_REGEX_ERANGE		5208357	1					
ANR	5208414	Argument	R_REGEX_ERANGE		5208357	0					
ANR	5208415	Identifier	R_REGEX_ERANGE		5208357	0					
ANR	5208416	ReturnStatement	return ;	850:2:20808:20814	5208357	5	True				
ANR	5208417	BreakStatement	break ;	851:2:20838:20843	5208357	6	True				
ANR	5208418	Label	default :	852:1:20846:20853	5208357	7	True				
ANR	5208419	Identifier	default		5208357	0					
ANR	5208420	ExpressionStatement	c = '\\0'	853:2:20857:20865	5208357	8	True				
ANR	5208421	AssignmentExpression	c = '\\0'		5208357	0		=			
ANR	5208422	Identifier	c		5208357	0					
ANR	5208423	PrimaryExpression	'\\0'		5208357	1					
ANR	5208424	BreakStatement	break ;	854:2:20869:20874	5208357	9	True				
ANR	5208425	SwitchStatement	switch ( c )		5208357	4					
ANR	5208426	Condition	c	857:9:20889:20889	5208357	0	True				
ANR	5208427	Identifier	c		5208357	0					
ANR	5208428	CompoundStatement		20:12:291:291	5208357	1					
ANR	5208429	Label	case ':' :	858:1:20895:20903	5208357	0	True				
ANR	5208430	ExpressionStatement	NEXT2 ( )	859:2:20930:20937	5208357	1	True				
ANR	5208431	CallExpression	NEXT2 ( )		5208357	0					
ANR	5208432	Callee	NEXT2		5208357	0					
ANR	5208433	Identifier	NEXT2		5208357	0					
ANR	5208434	ArgumentList			5208357	1					
ANR	5208435	ExpressionStatement	"REQUIRE ( MORE ( ) , R_REGEX_EBRACK )"	860:2:20941:20972	5208357	2	True				
ANR	5208436	CallExpression	"REQUIRE ( MORE ( ) , R_REGEX_EBRACK )"		5208357	0					
ANR	5208437	Callee	REQUIRE		5208357	0					
ANR	5208438	Identifier	REQUIRE		5208357	0					
ANR	5208439	ArgumentList	MORE ( )		5208357	1					
ANR	5208440	Argument	MORE ( )		5208357	0					
ANR	5208441	CallExpression	MORE ( )		5208357	0					
ANR	5208442	Callee	MORE		5208357	0					
ANR	5208443	Identifier	MORE		5208357	0					
ANR	5208444	ArgumentList			5208357	1					
ANR	5208445	Argument	R_REGEX_EBRACK		5208357	1					
ANR	5208446	Identifier	R_REGEX_EBRACK		5208357	0					
ANR	5208447	ExpressionStatement	c = PEEK ( )	861:2:20976:20986	5208357	3	True				
ANR	5208448	AssignmentExpression	c = PEEK ( )		5208357	0		=			
ANR	5208449	Identifier	c		5208357	0					
ANR	5208450	CallExpression	PEEK ( )		5208357	1					
ANR	5208451	Callee	PEEK		5208357	0					
ANR	5208452	Identifier	PEEK		5208357	0					
ANR	5208453	ArgumentList			5208357	1					
ANR	5208454	ExpressionStatement	"REQUIRE ( c != '-' && c != ']' , R_REGEX_ECTYPE )"	862:2:20990:21035	5208357	4	True				
ANR	5208455	CallExpression	"REQUIRE ( c != '-' && c != ']' , R_REGEX_ECTYPE )"		5208357	0					
ANR	5208456	Callee	REQUIRE		5208357	0					
ANR	5208457	Identifier	REQUIRE		5208357	0					
ANR	5208458	ArgumentList	c != '-' && c != ']'		5208357	1					
ANR	5208459	Argument	c != '-' && c != ']'		5208357	0					
ANR	5208460	AndExpression	c != '-' && c != ']'		5208357	0		&&			
ANR	5208461	EqualityExpression	c != '-'		5208357	0		!=			
ANR	5208462	Identifier	c		5208357	0					
ANR	5208463	PrimaryExpression	'-'		5208357	1					
ANR	5208464	EqualityExpression	c != ']'		5208357	1		!=			
ANR	5208465	Identifier	c		5208357	0					
ANR	5208466	PrimaryExpression	']'		5208357	1					
ANR	5208467	Argument	R_REGEX_ECTYPE		5208357	1					
ANR	5208468	Identifier	R_REGEX_ECTYPE		5208357	0					
ANR	5208469	ExpressionStatement	"p_b_cclass ( p , cs )"	863:2:21039:21056	5208357	5	True				
ANR	5208470	CallExpression	"p_b_cclass ( p , cs )"		5208357	0					
ANR	5208471	Callee	p_b_cclass		5208357	0					
ANR	5208472	Identifier	p_b_cclass		5208357	0					
ANR	5208473	ArgumentList	p		5208357	1					
ANR	5208474	Argument	p		5208357	0					
ANR	5208475	Identifier	p		5208357	0					
ANR	5208476	Argument	cs		5208357	1					
ANR	5208477	Identifier	cs		5208357	0					
ANR	5208478	ExpressionStatement	"REQUIRE ( MORE ( ) , R_REGEX_EBRACK )"	864:2:21060:21091	5208357	6	True				
ANR	5208479	CallExpression	"REQUIRE ( MORE ( ) , R_REGEX_EBRACK )"		5208357	0					
ANR	5208480	Callee	REQUIRE		5208357	0					
ANR	5208481	Identifier	REQUIRE		5208357	0					
ANR	5208482	ArgumentList	MORE ( )		5208357	1					
ANR	5208483	Argument	MORE ( )		5208357	0					
ANR	5208484	CallExpression	MORE ( )		5208357	0					
ANR	5208485	Callee	MORE		5208357	0					
ANR	5208486	Identifier	MORE		5208357	0					
ANR	5208487	ArgumentList			5208357	1					
ANR	5208488	Argument	R_REGEX_EBRACK		5208357	1					
ANR	5208489	Identifier	R_REGEX_EBRACK		5208357	0					
ANR	5208490	ExpressionStatement	"REQUIRE ( EATTWO ( ':' , ']' ) , R_REGEX_ECTYPE )"	865:2:21095:21136	5208357	7	True				
ANR	5208491	CallExpression	"REQUIRE ( EATTWO ( ':' , ']' ) , R_REGEX_ECTYPE )"		5208357	0					
ANR	5208492	Callee	REQUIRE		5208357	0					
ANR	5208493	Identifier	REQUIRE		5208357	0					
ANR	5208494	ArgumentList	"EATTWO ( ':' , ']' )"		5208357	1					
ANR	5208495	Argument	"EATTWO ( ':' , ']' )"		5208357	0					
ANR	5208496	CallExpression	"EATTWO ( ':' , ']' )"		5208357	0					
ANR	5208497	Callee	EATTWO		5208357	0					
ANR	5208498	Identifier	EATTWO		5208357	0					
ANR	5208499	ArgumentList	':'		5208357	1					
ANR	5208500	Argument	':'		5208357	0					
ANR	5208501	PrimaryExpression	':'		5208357	0					
ANR	5208502	Argument	']'		5208357	1					
ANR	5208503	PrimaryExpression	']'		5208357	0					
ANR	5208504	Argument	R_REGEX_ECTYPE		5208357	1					
ANR	5208505	Identifier	R_REGEX_ECTYPE		5208357	0					
ANR	5208506	BreakStatement	break ;	866:2:21140:21145	5208357	8	True				
ANR	5208507	Label	case '=' :	867:1:21148:21156	5208357	9	True				
ANR	5208508	ExpressionStatement	NEXT2 ( )	868:2:21185:21192	5208357	10	True				
ANR	5208509	CallExpression	NEXT2 ( )		5208357	0					
ANR	5208510	Callee	NEXT2		5208357	0					
ANR	5208511	Identifier	NEXT2		5208357	0					
ANR	5208512	ArgumentList			5208357	1					
ANR	5208513	ExpressionStatement	"REQUIRE ( MORE ( ) , R_REGEX_EBRACK )"	869:2:21196:21227	5208357	11	True				
ANR	5208514	CallExpression	"REQUIRE ( MORE ( ) , R_REGEX_EBRACK )"		5208357	0					
ANR	5208515	Callee	REQUIRE		5208357	0					
ANR	5208516	Identifier	REQUIRE		5208357	0					
ANR	5208517	ArgumentList	MORE ( )		5208357	1					
ANR	5208518	Argument	MORE ( )		5208357	0					
ANR	5208519	CallExpression	MORE ( )		5208357	0					
ANR	5208520	Callee	MORE		5208357	0					
ANR	5208521	Identifier	MORE		5208357	0					
ANR	5208522	ArgumentList			5208357	1					
ANR	5208523	Argument	R_REGEX_EBRACK		5208357	1					
ANR	5208524	Identifier	R_REGEX_EBRACK		5208357	0					
ANR	5208525	ExpressionStatement	c = PEEK ( )	870:2:21231:21241	5208357	12	True				
ANR	5208526	AssignmentExpression	c = PEEK ( )		5208357	0		=			
ANR	5208527	Identifier	c		5208357	0					
ANR	5208528	CallExpression	PEEK ( )		5208357	1					
ANR	5208529	Callee	PEEK		5208357	0					
ANR	5208530	Identifier	PEEK		5208357	0					
ANR	5208531	ArgumentList			5208357	1					
ANR	5208532	ExpressionStatement	"REQUIRE ( c != '-' && c != ']' , R_REGEX_ECOLLATE )"	871:2:21245:21292	5208357	13	True				
ANR	5208533	CallExpression	"REQUIRE ( c != '-' && c != ']' , R_REGEX_ECOLLATE )"		5208357	0					
ANR	5208534	Callee	REQUIRE		5208357	0					
ANR	5208535	Identifier	REQUIRE		5208357	0					
ANR	5208536	ArgumentList	c != '-' && c != ']'		5208357	1					
ANR	5208537	Argument	c != '-' && c != ']'		5208357	0					
ANR	5208538	AndExpression	c != '-' && c != ']'		5208357	0		&&			
ANR	5208539	EqualityExpression	c != '-'		5208357	0		!=			
ANR	5208540	Identifier	c		5208357	0					
ANR	5208541	PrimaryExpression	'-'		5208357	1					
ANR	5208542	EqualityExpression	c != ']'		5208357	1		!=			
ANR	5208543	Identifier	c		5208357	0					
ANR	5208544	PrimaryExpression	']'		5208357	1					
ANR	5208545	Argument	R_REGEX_ECOLLATE		5208357	1					
ANR	5208546	Identifier	R_REGEX_ECOLLATE		5208357	0					
ANR	5208547	ExpressionStatement	"p_b_eclass ( p , cs )"	872:2:21296:21313	5208357	14	True				
ANR	5208548	CallExpression	"p_b_eclass ( p , cs )"		5208357	0					
ANR	5208549	Callee	p_b_eclass		5208357	0					
ANR	5208550	Identifier	p_b_eclass		5208357	0					
ANR	5208551	ArgumentList	p		5208357	1					
ANR	5208552	Argument	p		5208357	0					
ANR	5208553	Identifier	p		5208357	0					
ANR	5208554	Argument	cs		5208357	1					
ANR	5208555	Identifier	cs		5208357	0					
ANR	5208556	ExpressionStatement	"REQUIRE ( MORE ( ) , R_REGEX_EBRACK )"	873:2:21317:21348	5208357	15	True				
ANR	5208557	CallExpression	"REQUIRE ( MORE ( ) , R_REGEX_EBRACK )"		5208357	0					
ANR	5208558	Callee	REQUIRE		5208357	0					
ANR	5208559	Identifier	REQUIRE		5208357	0					
ANR	5208560	ArgumentList	MORE ( )		5208357	1					
ANR	5208561	Argument	MORE ( )		5208357	0					
ANR	5208562	CallExpression	MORE ( )		5208357	0					
ANR	5208563	Callee	MORE		5208357	0					
ANR	5208564	Identifier	MORE		5208357	0					
ANR	5208565	ArgumentList			5208357	1					
ANR	5208566	Argument	R_REGEX_EBRACK		5208357	1					
ANR	5208567	Identifier	R_REGEX_EBRACK		5208357	0					
ANR	5208568	ExpressionStatement	"REQUIRE ( EATTWO ( '=' , ']' ) , R_REGEX_ECOLLATE )"	874:2:21352:21395	5208357	16	True				
ANR	5208569	CallExpression	"REQUIRE ( EATTWO ( '=' , ']' ) , R_REGEX_ECOLLATE )"		5208357	0					
ANR	5208570	Callee	REQUIRE		5208357	0					
ANR	5208571	Identifier	REQUIRE		5208357	0					
ANR	5208572	ArgumentList	"EATTWO ( '=' , ']' )"		5208357	1					
ANR	5208573	Argument	"EATTWO ( '=' , ']' )"		5208357	0					
ANR	5208574	CallExpression	"EATTWO ( '=' , ']' )"		5208357	0					
ANR	5208575	Callee	EATTWO		5208357	0					
ANR	5208576	Identifier	EATTWO		5208357	0					
ANR	5208577	ArgumentList	'='		5208357	1					
ANR	5208578	Argument	'='		5208357	0					
ANR	5208579	PrimaryExpression	'='		5208357	0					
ANR	5208580	Argument	']'		5208357	1					
ANR	5208581	PrimaryExpression	']'		5208357	0					
ANR	5208582	Argument	R_REGEX_ECOLLATE		5208357	1					
ANR	5208583	Identifier	R_REGEX_ECOLLATE		5208357	0					
ANR	5208584	BreakStatement	break ;	875:2:21399:21404	5208357	17	True				
ANR	5208585	Label	default :	876:1:21407:21414	5208357	18	True				
ANR	5208586	Identifier	default		5208357	0					
ANR	5208587	ExpressionStatement	start = p_b_symbol ( p )	878:2:21508:21529	5208357	19	True				
ANR	5208588	AssignmentExpression	start = p_b_symbol ( p )		5208357	0		=			
ANR	5208589	Identifier	start		5208357	0					
ANR	5208590	CallExpression	p_b_symbol ( p )		5208357	1					
ANR	5208591	Callee	p_b_symbol		5208357	0					
ANR	5208592	Identifier	p_b_symbol		5208357	0					
ANR	5208593	ArgumentList	p		5208357	1					
ANR	5208594	Argument	p		5208357	0					
ANR	5208595	Identifier	p		5208357	0					
ANR	5208596	IfStatement	if ( SEE ( '-' ) && MORE2 ( ) && PEEK2 ( ) != ']' )		5208357	20					
ANR	5208597	Condition	SEE ( '-' ) && MORE2 ( ) && PEEK2 ( ) != ']'	879:6:21537:21573	5208357	0	True				
ANR	5208598	AndExpression	SEE ( '-' ) && MORE2 ( ) && PEEK2 ( ) != ']'		5208357	0		&&			
ANR	5208599	CallExpression	SEE ( '-' )		5208357	0					
ANR	5208600	Callee	SEE		5208357	0					
ANR	5208601	Identifier	SEE		5208357	0					
ANR	5208602	ArgumentList	'-'		5208357	1					
ANR	5208603	Argument	'-'		5208357	0					
ANR	5208604	PrimaryExpression	'-'		5208357	0					
ANR	5208605	AndExpression	MORE2 ( ) && PEEK2 ( ) != ']'		5208357	1		&&			
ANR	5208606	CallExpression	MORE2 ( )		5208357	0					
ANR	5208607	Callee	MORE2		5208357	0					
ANR	5208608	Identifier	MORE2		5208357	0					
ANR	5208609	ArgumentList			5208357	1					
ANR	5208610	EqualityExpression	PEEK2 ( ) != ']'		5208357	1		!=			
ANR	5208611	CallExpression	PEEK2 ( )		5208357	0					
ANR	5208612	Callee	PEEK2		5208357	0					
ANR	5208613	Identifier	PEEK2		5208357	0					
ANR	5208614	ArgumentList			5208357	1					
ANR	5208615	PrimaryExpression	']'		5208357	1					
ANR	5208616	CompoundStatement		42:45:975:975	5208357	1					
ANR	5208617	ExpressionStatement	NEXT ( )	881:3:21596:21602	5208357	0	True				
ANR	5208618	CallExpression	NEXT ( )		5208357	0					
ANR	5208619	Callee	NEXT		5208357	0					
ANR	5208620	Identifier	NEXT		5208357	0					
ANR	5208621	ArgumentList			5208357	1					
ANR	5208622	IfStatement	if ( EAT ( '-' ) )		5208357	1					
ANR	5208623	Condition	EAT ( '-' )	882:7:21611:21619	5208357	0	True				
ANR	5208624	CallExpression	EAT ( '-' )		5208357	0					
ANR	5208625	Callee	EAT		5208357	0					
ANR	5208626	Identifier	EAT		5208357	0					
ANR	5208627	ArgumentList	'-'		5208357	1					
ANR	5208628	Argument	'-'		5208357	0					
ANR	5208629	PrimaryExpression	'-'		5208357	0					
ANR	5208630	CompoundStatement		45:18:1021:1021	5208357	1					
ANR	5208631	ExpressionStatement	finish = '-'	883:4:21628:21640	5208357	0	True				
ANR	5208632	AssignmentExpression	finish = '-'		5208357	0		=			
ANR	5208633	Identifier	finish		5208357	0					
ANR	5208634	PrimaryExpression	'-'		5208357	1					
ANR	5208635	ElseStatement	else		5208357	0					
ANR	5208636	CompoundStatement		47:10:1051:1051	5208357	0					
ANR	5208637	ExpressionStatement	finish = p_b_symbol ( p )	885:4:21658:21681	5208357	0	True				
ANR	5208638	AssignmentExpression	finish = p_b_symbol ( p )		5208357	0		=			
ANR	5208639	Identifier	finish		5208357	0					
ANR	5208640	CallExpression	p_b_symbol ( p )		5208357	1					
ANR	5208641	Callee	p_b_symbol		5208357	0					
ANR	5208642	Identifier	p_b_symbol		5208357	0					
ANR	5208643	ArgumentList	p		5208357	1					
ANR	5208644	Argument	p		5208357	0					
ANR	5208645	Identifier	p		5208357	0					
ANR	5208646	ElseStatement	else		5208357	0					
ANR	5208647	CompoundStatement		50:9:1096:1096	5208357	0					
ANR	5208648	ExpressionStatement	finish = start	888:3:21702:21716	5208357	0	True				
ANR	5208649	AssignmentExpression	finish = start		5208357	0		=			
ANR	5208650	Identifier	finish		5208357	0					
ANR	5208651	Identifier	start		5208357	1					
ANR	5208652	ExpressionStatement	"REQUIRE ( start <= finish , R_REGEX_ERANGE )"	891:2:21768:21808	5208357	21	True				
ANR	5208653	CallExpression	"REQUIRE ( start <= finish , R_REGEX_ERANGE )"		5208357	0					
ANR	5208654	Callee	REQUIRE		5208357	0					
ANR	5208655	Identifier	REQUIRE		5208357	0					
ANR	5208656	ArgumentList	start <= finish		5208357	1					
ANR	5208657	Argument	start <= finish		5208357	0					
ANR	5208658	RelationalExpression	start <= finish		5208357	0		<=			
ANR	5208659	Identifier	start		5208357	0					
ANR	5208660	Identifier	finish		5208357	1					
ANR	5208661	Argument	R_REGEX_ERANGE		5208357	1					
ANR	5208662	Identifier	R_REGEX_ERANGE		5208357	0					
ANR	5208663	ForStatement	for ( i = start ; i <= finish ; i ++ )		5208357	22					
ANR	5208664	ForInit	i = start ;	892:7:21817:21826	5208357	0	True				
ANR	5208665	AssignmentExpression	i = start		5208357	0		=			
ANR	5208666	Identifier	i		5208357	0					
ANR	5208667	Identifier	start		5208357	1					
ANR	5208668	Condition	i <= finish	892:18:21828:21838	5208357	1	True				
ANR	5208669	RelationalExpression	i <= finish		5208357	0		<=			
ANR	5208670	Identifier	i		5208357	0					
ANR	5208671	Identifier	finish		5208357	1					
ANR	5208672	PostIncDecOperationExpression	i ++	892:31:21841:21843	5208357	2	True				
ANR	5208673	Identifier	i		5208357	0					
ANR	5208674	IncDec	++		5208357	1					
ANR	5208675	CompoundStatement		55:36:1245:1245	5208357	3					
ANR	5208676	ExpressionStatement	"CHadd ( cs , i )"	893:3:21851:21864	5208357	0	True				
ANR	5208677	CallExpression	"CHadd ( cs , i )"		5208357	0					
ANR	5208678	Callee	CHadd		5208357	0					
ANR	5208679	Identifier	CHadd		5208357	0					
ANR	5208680	ArgumentList	cs		5208357	1					
ANR	5208681	Argument	cs		5208357	0					
ANR	5208682	Identifier	cs		5208357	0					
ANR	5208683	Argument	i		5208357	1					
ANR	5208684	Identifier	i		5208357	0					
ANR	5208685	BreakStatement	break ;	895:2:21872:21877	5208357	23	True				
ANR	5208686	ReturnType	static void		5208357	1					
ANR	5208687	Identifier	p_b_term		5208357	2					
ANR	5208688	ParameterList	"struct parse * p , cset * cs"		5208357	3					
ANR	5208689	Parameter	struct parse * p	838:21:20573:20587	5208357	0	True				
ANR	5208690	ParameterType	struct parse *		5208357	0					
ANR	5208691	Identifier	p		5208357	1					
ANR	5208692	Parameter	cset * cs	838:38:20590:20597	5208357	1	True				
ANR	5208693	ParameterType	cset *		5208357	0					
ANR	5208694	Identifier	cs		5208357	1					
ANR	5208695	CFGEntryNode	ENTRY		5208357		True				
ANR	5208696	CFGExitNode	EXIT		5208357		True				
ANR	5208697	Symbol	R_REGEX_ERANGE		5208357						
ANR	5208698	Symbol	c		5208357						
ANR	5208699	Symbol	R_REGEX_ECOLLATE		5208357						
ANR	5208700	Symbol	p_b_symbol		5208357						
ANR	5208701	Symbol	start		5208357						
ANR	5208702	Symbol	i		5208357						
ANR	5208703	Symbol	EATTWO		5208357						
ANR	5208704	Symbol	R_REGEX_ECTYPE		5208357						
ANR	5208705	Symbol	p		5208357						
ANR	5208706	Symbol	cs		5208357						
ANR	5208707	Symbol	PEEK2		5208357						
ANR	5208708	Symbol	MORE		5208357						
ANR	5208709	Symbol	SEE		5208357						
ANR	5208710	Symbol	EAT		5208357						
ANR	5208711	Symbol	finish		5208357						
ANR	5208712	Symbol	R_REGEX_EBRACK		5208357						
ANR	5208713	Symbol	PEEK		5208357						
ANR	5208714	Symbol	MORE2		5208357						
ANR	5208715	Function	p_b_cclass	902:0:21954:22536							
ANR	5208716	FunctionDef	"p_b_cclass (struct parse * p , cset * cs)"		5208715	0					
ANR	5208717	CompoundStatement		902:50:22004:22536	5208715	0					
ANR	5208718	IdentifierDeclStatement	char * sp = p -> next ;	903:1:22007:22025	5208715	0	True				
ANR	5208719	IdentifierDecl	* sp = p -> next		5208715	0					
ANR	5208720	IdentifierDeclType	char *		5208715	0					
ANR	5208721	Identifier	sp		5208715	1					
ANR	5208722	AssignmentExpression	* sp = p -> next		5208715	2		=			
ANR	5208723	Identifier	sp		5208715	0					
ANR	5208724	PtrMemberAccess	p -> next		5208715	1					
ANR	5208725	Identifier	p		5208715	0					
ANR	5208726	Identifier	next		5208715	1					
ANR	5208727	IdentifierDeclStatement	struct cclass * cp ;	904:1:22028:22045	5208715	1	True				
ANR	5208728	IdentifierDecl	* cp		5208715	0					
ANR	5208729	IdentifierDeclType	struct cclass *		5208715	0					
ANR	5208730	Identifier	cp		5208715	1					
ANR	5208731	IdentifierDeclStatement	size_t len ;	905:1:22048:22058	5208715	2	True				
ANR	5208732	IdentifierDecl	len		5208715	0					
ANR	5208733	IdentifierDeclType	size_t		5208715	0					
ANR	5208734	Identifier	len		5208715	1					
ANR	5208735	IdentifierDeclStatement	char * u ;	906:1:22061:22068	5208715	3	True				
ANR	5208736	IdentifierDecl	* u		5208715	0					
ANR	5208737	IdentifierDeclType	char *		5208715	0					
ANR	5208738	Identifier	u		5208715	1					
ANR	5208739	IdentifierDeclStatement	char c ;	907:1:22071:22077	5208715	4	True				
ANR	5208740	IdentifierDecl	c		5208715	0					
ANR	5208741	IdentifierDeclType	char		5208715	0					
ANR	5208742	Identifier	c		5208715	1					
ANR	5208743	WhileStatement	while ( MORE ( ) && isalpha ( ( unsigned char ) PEEK ( ) ) )		5208715	5					
ANR	5208744	Condition	MORE ( ) && isalpha ( ( unsigned char ) PEEK ( ) )	909:8:22088:22130	5208715	0	True				
ANR	5208745	AndExpression	MORE ( ) && isalpha ( ( unsigned char ) PEEK ( ) )		5208715	0		&&			
ANR	5208746	CallExpression	MORE ( )		5208715	0					
ANR	5208747	Callee	MORE		5208715	0					
ANR	5208748	Identifier	MORE		5208715	0					
ANR	5208749	ArgumentList			5208715	1					
ANR	5208750	CallExpression	isalpha ( ( unsigned char ) PEEK ( ) )		5208715	1					
ANR	5208751	Callee	isalpha		5208715	0					
ANR	5208752	Identifier	isalpha		5208715	0					
ANR	5208753	ArgumentList	( unsigned char ) PEEK ( )		5208715	1					
ANR	5208754	Argument	( unsigned char ) PEEK ( )		5208715	0					
ANR	5208755	CastExpression	( unsigned char ) PEEK ( )		5208715	0					
ANR	5208756	CastTarget	unsigned char		5208715	0					
ANR	5208757	CallExpression	PEEK ( )		5208715	1					
ANR	5208758	Callee	PEEK		5208715	0					
ANR	5208759	Identifier	PEEK		5208715	0					
ANR	5208760	ArgumentList			5208715	1					
ANR	5208761	CompoundStatement		8:53:128:128	5208715	1					
ANR	5208762	ExpressionStatement	NEXT ( )	910:2:22137:22144	5208715	0	True				
ANR	5208763	CallExpression	NEXT ( )		5208715	0					
ANR	5208764	Callee	NEXT		5208715	0					
ANR	5208765	Identifier	NEXT		5208715	0					
ANR	5208766	ArgumentList			5208715	1					
ANR	5208767	ExpressionStatement	len = p -> next - sp	912:1:22150:22168	5208715	6	True				
ANR	5208768	AssignmentExpression	len = p -> next - sp		5208715	0		=			
ANR	5208769	Identifier	len		5208715	0					
ANR	5208770	AdditiveExpression	p -> next - sp		5208715	1		-			
ANR	5208771	PtrMemberAccess	p -> next		5208715	0					
ANR	5208772	Identifier	p		5208715	0					
ANR	5208773	Identifier	next		5208715	1					
ANR	5208774	Identifier	sp		5208715	1					
ANR	5208775	ForStatement	for ( cp = cclasses ; cp -> name != NULL ; cp ++ )		5208715	7					
ANR	5208776	ForInit	cp = cclasses ;	913:6:22176:22189	5208715	0	True				
ANR	5208777	AssignmentExpression	cp = cclasses		5208715	0		=			
ANR	5208778	Identifier	cp		5208715	0					
ANR	5208779	Identifier	cclasses		5208715	1					
ANR	5208780	Condition	cp -> name != NULL	913:21:22191:22206	5208715	1	True				
ANR	5208781	EqualityExpression	cp -> name != NULL		5208715	0		!=			
ANR	5208782	PtrMemberAccess	cp -> name		5208715	0					
ANR	5208783	Identifier	cp		5208715	0					
ANR	5208784	Identifier	name		5208715	1					
ANR	5208785	Identifier	NULL		5208715	1					
ANR	5208786	PostIncDecOperationExpression	cp ++	913:39:22209:22212	5208715	2	True				
ANR	5208787	Identifier	cp		5208715	0					
ANR	5208788	IncDec	++		5208715	1					
ANR	5208789	CompoundStatement		12:45:210:210	5208715	3					
ANR	5208790	IfStatement	"if ( strncmp ( cp -> name , sp , len ) == 0 && cp -> name [ len ] == '\\0' )"		5208715	0					
ANR	5208791	Condition	"strncmp ( cp -> name , sp , len ) == 0 && cp -> name [ len ] == '\\0'"	914:6:22223:22279	5208715	0	True				
ANR	5208792	AndExpression	"strncmp ( cp -> name , sp , len ) == 0 && cp -> name [ len ] == '\\0'"		5208715	0		&&			
ANR	5208793	EqualityExpression	"strncmp ( cp -> name , sp , len ) == 0"		5208715	0		==			
ANR	5208794	CallExpression	"strncmp ( cp -> name , sp , len )"		5208715	0					
ANR	5208795	Callee	strncmp		5208715	0					
ANR	5208796	Identifier	strncmp		5208715	0					
ANR	5208797	ArgumentList	cp -> name		5208715	1					
ANR	5208798	Argument	cp -> name		5208715	0					
ANR	5208799	PtrMemberAccess	cp -> name		5208715	0					
ANR	5208800	Identifier	cp		5208715	0					
ANR	5208801	Identifier	name		5208715	1					
ANR	5208802	Argument	sp		5208715	1					
ANR	5208803	Identifier	sp		5208715	0					
ANR	5208804	Argument	len		5208715	2					
ANR	5208805	Identifier	len		5208715	0					
ANR	5208806	PrimaryExpression	0		5208715	1					
ANR	5208807	EqualityExpression	cp -> name [ len ] == '\\0'		5208715	1		==			
ANR	5208808	ArrayIndexing	cp -> name [ len ]		5208715	0					
ANR	5208809	PtrMemberAccess	cp -> name		5208715	0					
ANR	5208810	Identifier	cp		5208715	0					
ANR	5208811	Identifier	name		5208715	1					
ANR	5208812	Identifier	len		5208715	1					
ANR	5208813	PrimaryExpression	'\\0'		5208715	1					
ANR	5208814	CompoundStatement		13:65:277:277	5208715	1					
ANR	5208815	BreakStatement	break ;	915:3:22287:22292	5208715	0	True				
ANR	5208816	IfStatement	if ( ! cp -> name )		5208715	8					
ANR	5208817	Condition	! cp -> name	918:5:22306:22314	5208715	0	True				
ANR	5208818	UnaryOperationExpression	! cp -> name		5208715	0					
ANR	5208819	UnaryOperator	!		5208715	0					
ANR	5208820	PtrMemberAccess	cp -> name		5208715	1					
ANR	5208821	Identifier	cp		5208715	0					
ANR	5208822	Identifier	name		5208715	1					
ANR	5208823	CompoundStatement		17:16:312:312	5208715	1					
ANR	5208824	ExpressionStatement	SETERROR ( R_REGEX_ECTYPE )	920:2:22350:22374	5208715	0	True				
ANR	5208825	CallExpression	SETERROR ( R_REGEX_ECTYPE )		5208715	0					
ANR	5208826	Callee	SETERROR		5208715	0					
ANR	5208827	Identifier	SETERROR		5208715	0					
ANR	5208828	ArgumentList	R_REGEX_ECTYPE		5208715	1					
ANR	5208829	Argument	R_REGEX_ECTYPE		5208715	0					
ANR	5208830	Identifier	R_REGEX_ECTYPE		5208715	0					
ANR	5208831	ReturnStatement	return ;	921:2:22378:22384	5208715	1	True				
ANR	5208832	ExpressionStatement	u = cp -> chars	924:1:22391:22404	5208715	9	True				
ANR	5208833	AssignmentExpression	u = cp -> chars		5208715	0		=			
ANR	5208834	Identifier	u		5208715	0					
ANR	5208835	PtrMemberAccess	cp -> chars		5208715	1					
ANR	5208836	Identifier	cp		5208715	0					
ANR	5208837	Identifier	chars		5208715	1					
ANR	5208838	WhileStatement	while ( ( c = * u ++ ) != '\\0' )		5208715	10					
ANR	5208839	Condition	( c = * u ++ ) != '\\0'	925:8:22414:22431	5208715	0	True				
ANR	5208840	EqualityExpression	( c = * u ++ ) != '\\0'		5208715	0		!=			
ANR	5208841	AssignmentExpression	c = * u ++		5208715	0		=			
ANR	5208842	Identifier	c		5208715	0					
ANR	5208843	UnaryOperationExpression	* u ++		5208715	1					
ANR	5208844	UnaryOperator	*		5208715	0					
ANR	5208845	PostIncDecOperationExpression	u ++		5208715	1					
ANR	5208846	Identifier	u		5208715	0					
ANR	5208847	IncDec	++		5208715	1					
ANR	5208848	PrimaryExpression	'\\0'		5208715	1					
ANR	5208849	CompoundStatement		24:28:429:429	5208715	1					
ANR	5208850	ExpressionStatement	"CHadd ( cs , c )"	926:2:22438:22451	5208715	0	True				
ANR	5208851	CallExpression	"CHadd ( cs , c )"		5208715	0					
ANR	5208852	Callee	CHadd		5208715	0					
ANR	5208853	Identifier	CHadd		5208715	0					
ANR	5208854	ArgumentList	cs		5208715	1					
ANR	5208855	Argument	cs		5208715	0					
ANR	5208856	Identifier	cs		5208715	0					
ANR	5208857	Argument	c		5208715	1					
ANR	5208858	Identifier	c		5208715	0					
ANR	5208859	ForStatement	for ( u = cp -> multis ; * u != '\\0' ; u += strlen ( u ) + 1 )		5208715	11					
ANR	5208860	ForInit	u = cp -> multis ;	928:6:22462:22476	5208715	0	True				
ANR	5208861	AssignmentExpression	u = cp -> multis		5208715	0		=			
ANR	5208862	Identifier	u		5208715	0					
ANR	5208863	PtrMemberAccess	cp -> multis		5208715	1					
ANR	5208864	Identifier	cp		5208715	0					
ANR	5208865	Identifier	multis		5208715	1					
ANR	5208866	Condition	* u != '\\0'	928:22:22478:22487	5208715	1	True				
ANR	5208867	EqualityExpression	* u != '\\0'		5208715	0		!=			
ANR	5208868	UnaryOperationExpression	* u		5208715	0					
ANR	5208869	UnaryOperator	*		5208715	0					
ANR	5208870	Identifier	u		5208715	1					
ANR	5208871	PrimaryExpression	'\\0'		5208715	1					
ANR	5208872	AssignmentExpression	u += strlen ( u ) + 1	928:34:22490:22508	5208715	2	True	+=			
ANR	5208873	Identifier	u		5208715	0					
ANR	5208874	AdditiveExpression	strlen ( u ) + 1		5208715	1		+			
ANR	5208875	CallExpression	strlen ( u )		5208715	0					
ANR	5208876	Callee	strlen		5208715	0					
ANR	5208877	Identifier	strlen		5208715	0					
ANR	5208878	ArgumentList	u		5208715	1					
ANR	5208879	Argument	u		5208715	0					
ANR	5208880	Identifier	u		5208715	0					
ANR	5208881	PrimaryExpression	1		5208715	1					
ANR	5208882	CompoundStatement		27:55:506:506	5208715	3					
ANR	5208883	ExpressionStatement	"MCadd ( p , cs , u )"	929:2:22515:22531	5208715	0	True				
ANR	5208884	CallExpression	"MCadd ( p , cs , u )"		5208715	0					
ANR	5208885	Callee	MCadd		5208715	0					
ANR	5208886	Identifier	MCadd		5208715	0					
ANR	5208887	ArgumentList	p		5208715	1					
ANR	5208888	Argument	p		5208715	0					
ANR	5208889	Identifier	p		5208715	0					
ANR	5208890	Argument	cs		5208715	1					
ANR	5208891	Identifier	cs		5208715	0					
ANR	5208892	Argument	u		5208715	2					
ANR	5208893	Identifier	u		5208715	0					
ANR	5208894	ReturnType	static void		5208715	1					
ANR	5208895	Identifier	p_b_cclass		5208715	2					
ANR	5208896	ParameterList	"struct parse * p , cset * cs"		5208715	3					
ANR	5208897	Parameter	struct parse * p	902:23:21977:21991	5208715	0	True				
ANR	5208898	ParameterType	struct parse *		5208715	0					
ANR	5208899	Identifier	p		5208715	1					
ANR	5208900	Parameter	cset * cs	902:40:21994:22001	5208715	1	True				
ANR	5208901	ParameterType	cset *		5208715	0					
ANR	5208902	Identifier	cs		5208715	1					
ANR	5208903	CFGEntryNode	ENTRY		5208715		True				
ANR	5208904	CFGExitNode	EXIT		5208715		True				
ANR	5208905	Symbol	isalpha		5208715						
ANR	5208906	Symbol	p -> next		5208715						
ANR	5208907	Symbol	* u ++		5208715						
ANR	5208908	Symbol	R_REGEX_ECTYPE		5208715						
ANR	5208909	Symbol	strncmp		5208715						
ANR	5208910	Symbol	strlen		5208715						
ANR	5208911	Symbol	len		5208715						
ANR	5208912	Symbol	cclasses		5208715						
ANR	5208913	Symbol	* * cp		5208715						
ANR	5208914	Symbol	cp -> multis		5208715						
ANR	5208915	Symbol	sp		5208715						
ANR	5208916	Symbol	cp -> name		5208715						
ANR	5208917	Symbol	c		5208715						
ANR	5208918	Symbol	NULL		5208715						
ANR	5208919	Symbol	cp		5208715						
ANR	5208920	Symbol	* cp -> name		5208715						
ANR	5208921	Symbol	p		5208715						
ANR	5208922	Symbol	cs		5208715						
ANR	5208923	Symbol	* cp		5208715						
ANR	5208924	Symbol	MORE		5208715						
ANR	5208925	Symbol	u		5208715						
ANR	5208926	Symbol	cp -> chars		5208715						
ANR	5208927	Symbol	* p		5208715						
ANR	5208928	Symbol	PEEK		5208715						
ANR	5208929	Symbol	* len		5208715						
ANR	5208930	Symbol	* u		5208715						
ANR	5208931	Function	p_b_eclass	938:0:22656:22761							
ANR	5208932	FunctionDef	"p_b_eclass (struct parse * p , cset * cs)"		5208931	0					
ANR	5208933	CompoundStatement		938:50:22706:22761	5208931	0					
ANR	5208934	IdentifierDeclStatement	char c ;	939:1:22709:22715	5208931	0	True				
ANR	5208935	IdentifierDecl	c		5208931	0					
ANR	5208936	IdentifierDeclType	char		5208931	0					
ANR	5208937	Identifier	c		5208931	1					
ANR	5208938	ExpressionStatement	"c = p_b_coll_elem ( p , '=' )"	941:1:22719:22744	5208931	1	True				
ANR	5208939	AssignmentExpression	"c = p_b_coll_elem ( p , '=' )"		5208931	0		=			
ANR	5208940	Identifier	c		5208931	0					
ANR	5208941	CallExpression	"p_b_coll_elem ( p , '=' )"		5208931	1					
ANR	5208942	Callee	p_b_coll_elem		5208931	0					
ANR	5208943	Identifier	p_b_coll_elem		5208931	0					
ANR	5208944	ArgumentList	p		5208931	1					
ANR	5208945	Argument	p		5208931	0					
ANR	5208946	Identifier	p		5208931	0					
ANR	5208947	Argument	'='		5208931	1					
ANR	5208948	PrimaryExpression	'='		5208931	0					
ANR	5208949	ExpressionStatement	"CHadd ( cs , c )"	942:1:22747:22759	5208931	2	True				
ANR	5208950	CallExpression	"CHadd ( cs , c )"		5208931	0					
ANR	5208951	Callee	CHadd		5208931	0					
ANR	5208952	Identifier	CHadd		5208931	0					
ANR	5208953	ArgumentList	cs		5208931	1					
ANR	5208954	Argument	cs		5208931	0					
ANR	5208955	Identifier	cs		5208931	0					
ANR	5208956	Argument	c		5208931	1					
ANR	5208957	Identifier	c		5208931	0					
ANR	5208958	ReturnType	static void		5208931	1					
ANR	5208959	Identifier	p_b_eclass		5208931	2					
ANR	5208960	ParameterList	"struct parse * p , cset * cs"		5208931	3					
ANR	5208961	Parameter	struct parse * p	938:23:22679:22693	5208931	0	True				
ANR	5208962	ParameterType	struct parse *		5208931	0					
ANR	5208963	Identifier	p		5208931	1					
ANR	5208964	Parameter	cset * cs	938:40:22696:22703	5208931	1	True				
ANR	5208965	ParameterType	cset *		5208931	0					
ANR	5208966	Identifier	cs		5208931	1					
ANR	5208967	CFGEntryNode	ENTRY		5208931		True				
ANR	5208968	CFGExitNode	EXIT		5208931		True				
ANR	5208969	Symbol	p		5208931						
ANR	5208970	Symbol	cs		5208931						
ANR	5208971	Symbol	c		5208931						
ANR	5208972	Symbol	p_b_coll_elem		5208931						
ANR	5208973	Function	p_b_symbol	948:0:22847:23133							
ANR	5208974	FunctionDef	p_b_symbol (struct parse * p)		5208973	0					
ANR	5208975	CompoundStatement		950:0:22911:23133	5208973	0					
ANR	5208976	IdentifierDeclStatement	char value ;	951:1:22914:22924	5208973	0	True				
ANR	5208977	IdentifierDecl	value		5208973	0					
ANR	5208978	IdentifierDeclType	char		5208973	0					
ANR	5208979	Identifier	value		5208973	1					
ANR	5208980	ExpressionStatement	"REQUIRE ( MORE ( ) , R_REGEX_EBRACK )"	953:1:22928:22959	5208973	1	True				
ANR	5208981	CallExpression	"REQUIRE ( MORE ( ) , R_REGEX_EBRACK )"		5208973	0					
ANR	5208982	Callee	REQUIRE		5208973	0					
ANR	5208983	Identifier	REQUIRE		5208973	0					
ANR	5208984	ArgumentList	MORE ( )		5208973	1					
ANR	5208985	Argument	MORE ( )		5208973	0					
ANR	5208986	CallExpression	MORE ( )		5208973	0					
ANR	5208987	Callee	MORE		5208973	0					
ANR	5208988	Identifier	MORE		5208973	0					
ANR	5208989	ArgumentList			5208973	1					
ANR	5208990	Argument	R_REGEX_EBRACK		5208973	1					
ANR	5208991	Identifier	R_REGEX_EBRACK		5208973	0					
ANR	5208992	IfStatement	"if ( ! EATTWO ( '[' , '.' ) )"		5208973	2					
ANR	5208993	Condition	"! EATTWO ( '[' , '.' )"	954:5:22966:22983	5208973	0	True				
ANR	5208994	UnaryOperationExpression	"! EATTWO ( '[' , '.' )"		5208973	0					
ANR	5208995	UnaryOperator	!		5208973	0					
ANR	5208996	CallExpression	"EATTWO ( '[' , '.' )"		5208973	1					
ANR	5208997	Callee	EATTWO		5208973	0					
ANR	5208998	Identifier	EATTWO		5208973	0					
ANR	5208999	ArgumentList	'['		5208973	1					
ANR	5209000	Argument	'['		5208973	0					
ANR	5209001	PrimaryExpression	'['		5208973	0					
ANR	5209002	Argument	'.'		5208973	1					
ANR	5209003	PrimaryExpression	'.'		5208973	0					
ANR	5209004	CompoundStatement		5:25:74:74	5208973	1					
ANR	5209005	ReturnStatement	return ( GETNEXT ( ) ) ;	955:2:22990:23009	5208973	0	True				
ANR	5209006	CallExpression	GETNEXT ( )		5208973	0					
ANR	5209007	Callee	GETNEXT		5208973	0					
ANR	5209008	Identifier	GETNEXT		5208973	0					
ANR	5209009	ArgumentList			5208973	1					
ANR	5209010	ExpressionStatement	"value = p_b_coll_elem ( p , '.' )"	959:1:23040:23069	5208973	3	True				
ANR	5209011	AssignmentExpression	"value = p_b_coll_elem ( p , '.' )"		5208973	0		=			
ANR	5209012	Identifier	value		5208973	0					
ANR	5209013	CallExpression	"p_b_coll_elem ( p , '.' )"		5208973	1					
ANR	5209014	Callee	p_b_coll_elem		5208973	0					
ANR	5209015	Identifier	p_b_coll_elem		5208973	0					
ANR	5209016	ArgumentList	p		5208973	1					
ANR	5209017	Argument	p		5208973	0					
ANR	5209018	Identifier	p		5208973	0					
ANR	5209019	Argument	'.'		5208973	1					
ANR	5209020	PrimaryExpression	'.'		5208973	0					
ANR	5209021	ExpressionStatement	"REQUIRE ( EATTWO ( '.' , ']' ) , R_REGEX_ECOLLATE )"	960:1:23072:23115	5208973	4	True				
ANR	5209022	CallExpression	"REQUIRE ( EATTWO ( '.' , ']' ) , R_REGEX_ECOLLATE )"		5208973	0					
ANR	5209023	Callee	REQUIRE		5208973	0					
ANR	5209024	Identifier	REQUIRE		5208973	0					
ANR	5209025	ArgumentList	"EATTWO ( '.' , ']' )"		5208973	1					
ANR	5209026	Argument	"EATTWO ( '.' , ']' )"		5208973	0					
ANR	5209027	CallExpression	"EATTWO ( '.' , ']' )"		5208973	0					
ANR	5209028	Callee	EATTWO		5208973	0					
ANR	5209029	Identifier	EATTWO		5208973	0					
ANR	5209030	ArgumentList	'.'		5208973	1					
ANR	5209031	Argument	'.'		5208973	0					
ANR	5209032	PrimaryExpression	'.'		5208973	0					
ANR	5209033	Argument	']'		5208973	1					
ANR	5209034	PrimaryExpression	']'		5208973	0					
ANR	5209035	Argument	R_REGEX_ECOLLATE		5208973	1					
ANR	5209036	Identifier	R_REGEX_ECOLLATE		5208973	0					
ANR	5209037	ReturnStatement	return ( value ) ;	961:1:23118:23131	5208973	5	True				
ANR	5209038	Identifier	value		5208973	0					
ANR	5209039	ReturnType	static char		5208973	1					
ANR	5209040	Identifier	p_b_symbol		5208973	2					
ANR	5209041	ParameterList	struct parse * p		5208973	3					
ANR	5209042	Parameter	struct parse * p	949:11:22894:22908	5208973	0	True				
ANR	5209043	ParameterType	struct parse *		5208973	0					
ANR	5209044	Identifier	p		5208973	1					
ANR	5209045	CFGEntryNode	ENTRY		5208973		True				
ANR	5209046	CFGExitNode	EXIT		5208973		True				
ANR	5209047	Symbol	p		5208973						
ANR	5209048	Symbol	MORE		5208973						
ANR	5209049	Symbol	GETNEXT		5208973						
ANR	5209050	Symbol	R_REGEX_ECOLLATE		5208973						
ANR	5209051	Symbol	R_REGEX_EBRACK		5208973						
ANR	5209052	Symbol	p_b_coll_elem		5208973						
ANR	5209053	Symbol	value		5208973						
ANR	5209054	Symbol	EATTWO		5208973						
ANR	5209055	Function	p_b_coll_elem	967:0:23208:23795							
ANR	5209056	FunctionDef	"p_b_coll_elem (struct parse * p , int endc)"		5209055	0					
ANR	5209057	CompoundStatement		970:0:23331:23795	5209055	0					
ANR	5209058	IdentifierDeclStatement	char * sp = p -> next ;	971:1:23334:23352	5209055	0	True				
ANR	5209059	IdentifierDecl	* sp = p -> next		5209055	0					
ANR	5209060	IdentifierDeclType	char *		5209055	0					
ANR	5209061	Identifier	sp		5209055	1					
ANR	5209062	AssignmentExpression	* sp = p -> next		5209055	2		=			
ANR	5209063	Identifier	sp		5209055	0					
ANR	5209064	PtrMemberAccess	p -> next		5209055	1					
ANR	5209065	Identifier	p		5209055	0					
ANR	5209066	Identifier	next		5209055	1					
ANR	5209067	IdentifierDeclStatement	struct cname * cp ;	972:1:23355:23371	5209055	1	True				
ANR	5209068	IdentifierDecl	* cp		5209055	0					
ANR	5209069	IdentifierDeclType	struct cname *		5209055	0					
ANR	5209070	Identifier	cp		5209055	1					
ANR	5209071	IdentifierDeclStatement	int len ;	973:1:23374:23381	5209055	2	True				
ANR	5209072	IdentifierDecl	len		5209055	0					
ANR	5209073	IdentifierDeclType	int		5209055	0					
ANR	5209074	Identifier	len		5209055	1					
ANR	5209075	WhileStatement	"while ( MORE ( ) && ! SEETWO ( endc , ']' ) )"		5209055	3					
ANR	5209076	Condition	"MORE ( ) && ! SEETWO ( endc , ']' )"	975:8:23392:23421	5209055	0	True				
ANR	5209077	AndExpression	"MORE ( ) && ! SEETWO ( endc , ']' )"		5209055	0		&&			
ANR	5209078	CallExpression	MORE ( )		5209055	0					
ANR	5209079	Callee	MORE		5209055	0					
ANR	5209080	Identifier	MORE		5209055	0					
ANR	5209081	ArgumentList			5209055	1					
ANR	5209082	UnaryOperationExpression	"! SEETWO ( endc , ']' )"		5209055	1					
ANR	5209083	UnaryOperator	!		5209055	0					
ANR	5209084	CallExpression	"SEETWO ( endc , ']' )"		5209055	1					
ANR	5209085	Callee	SEETWO		5209055	0					
ANR	5209086	Identifier	SEETWO		5209055	0					
ANR	5209087	ArgumentList	endc		5209055	1					
ANR	5209088	Argument	endc		5209055	0					
ANR	5209089	Identifier	endc		5209055	0					
ANR	5209090	Argument	']'		5209055	1					
ANR	5209091	PrimaryExpression	']'		5209055	0					
ANR	5209092	CompoundStatement		6:40:92:92	5209055	1					
ANR	5209093	ExpressionStatement	NEXT ( )	976:2:23428:23435	5209055	0	True				
ANR	5209094	CallExpression	NEXT ( )		5209055	0					
ANR	5209095	Callee	NEXT		5209055	0					
ANR	5209096	Identifier	NEXT		5209055	0					
ANR	5209097	ArgumentList			5209055	1					
ANR	5209098	IfStatement	if ( ! MORE ( ) )		5209055	4					
ANR	5209099	Condition	! MORE ( )	978:5:23445:23451	5209055	0	True				
ANR	5209100	UnaryOperationExpression	! MORE ( )		5209055	0					
ANR	5209101	UnaryOperator	!		5209055	0					
ANR	5209102	CallExpression	MORE ( )		5209055	1					
ANR	5209103	Callee	MORE		5209055	0					
ANR	5209104	Identifier	MORE		5209055	0					
ANR	5209105	ArgumentList			5209055	1					
ANR	5209106	CompoundStatement		9:14:122:122	5209055	1					
ANR	5209107	ExpressionStatement	SETERROR ( R_REGEX_EBRACK )	979:2:23458:23482	5209055	0	True				
ANR	5209108	CallExpression	SETERROR ( R_REGEX_EBRACK )		5209055	0					
ANR	5209109	Callee	SETERROR		5209055	0					
ANR	5209110	Identifier	SETERROR		5209055	0					
ANR	5209111	ArgumentList	R_REGEX_EBRACK		5209055	1					
ANR	5209112	Argument	R_REGEX_EBRACK		5209055	0					
ANR	5209113	Identifier	R_REGEX_EBRACK		5209055	0					
ANR	5209114	ReturnStatement	return ( 0 ) ;	980:2:23486:23495	5209055	1	True				
ANR	5209115	PrimaryExpression	0		5209055	0					
ANR	5209116	ExpressionStatement	len = p -> next - sp	982:1:23501:23519	5209055	5	True				
ANR	5209117	AssignmentExpression	len = p -> next - sp		5209055	0		=			
ANR	5209118	Identifier	len		5209055	0					
ANR	5209119	AdditiveExpression	p -> next - sp		5209055	1		-			
ANR	5209120	PtrMemberAccess	p -> next		5209055	0					
ANR	5209121	Identifier	p		5209055	0					
ANR	5209122	Identifier	next		5209055	1					
ANR	5209123	Identifier	sp		5209055	1					
ANR	5209124	ForStatement	for ( cp = cnames ; cp -> name != NULL ; cp ++ )		5209055	6					
ANR	5209125	ForInit	cp = cnames ;	983:6:23527:23538	5209055	0	True				
ANR	5209126	AssignmentExpression	cp = cnames		5209055	0		=			
ANR	5209127	Identifier	cp		5209055	0					
ANR	5209128	Identifier	cnames		5209055	1					
ANR	5209129	Condition	cp -> name != NULL	983:19:23540:23555	5209055	1	True				
ANR	5209130	EqualityExpression	cp -> name != NULL		5209055	0		!=			
ANR	5209131	PtrMemberAccess	cp -> name		5209055	0					
ANR	5209132	Identifier	cp		5209055	0					
ANR	5209133	Identifier	name		5209055	1					
ANR	5209134	Identifier	NULL		5209055	1					
ANR	5209135	PostIncDecOperationExpression	cp ++	983:37:23558:23561	5209055	2	True				
ANR	5209136	Identifier	cp		5209055	0					
ANR	5209137	IncDec	++		5209055	1					
ANR	5209138	CompoundStatement		14:43:232:232	5209055	3					
ANR	5209139	IfStatement	"if ( strncmp ( cp -> name , sp , len ) == 0 && cp -> name [ len ] == '\\0' )"		5209055	0					
ANR	5209140	Condition	"strncmp ( cp -> name , sp , len ) == 0 && cp -> name [ len ] == '\\0'"	984:6:23572:23628	5209055	0	True				
ANR	5209141	AndExpression	"strncmp ( cp -> name , sp , len ) == 0 && cp -> name [ len ] == '\\0'"		5209055	0		&&			
ANR	5209142	EqualityExpression	"strncmp ( cp -> name , sp , len ) == 0"		5209055	0		==			
ANR	5209143	CallExpression	"strncmp ( cp -> name , sp , len )"		5209055	0					
ANR	5209144	Callee	strncmp		5209055	0					
ANR	5209145	Identifier	strncmp		5209055	0					
ANR	5209146	ArgumentList	cp -> name		5209055	1					
ANR	5209147	Argument	cp -> name		5209055	0					
ANR	5209148	PtrMemberAccess	cp -> name		5209055	0					
ANR	5209149	Identifier	cp		5209055	0					
ANR	5209150	Identifier	name		5209055	1					
ANR	5209151	Argument	sp		5209055	1					
ANR	5209152	Identifier	sp		5209055	0					
ANR	5209153	Argument	len		5209055	2					
ANR	5209154	Identifier	len		5209055	0					
ANR	5209155	PrimaryExpression	0		5209055	1					
ANR	5209156	EqualityExpression	cp -> name [ len ] == '\\0'		5209055	1		==			
ANR	5209157	ArrayIndexing	cp -> name [ len ]		5209055	0					
ANR	5209158	PtrMemberAccess	cp -> name		5209055	0					
ANR	5209159	Identifier	cp		5209055	0					
ANR	5209160	Identifier	name		5209055	1					
ANR	5209161	Identifier	len		5209055	1					
ANR	5209162	PrimaryExpression	'\\0'		5209055	1					
ANR	5209163	CompoundStatement		15:65:299:299	5209055	1					
ANR	5209164	ReturnStatement	return ( cp -> code ) ;	985:3:23636:23653	5209055	0	True				
ANR	5209165	PtrMemberAccess	cp -> code		5209055	0					
ANR	5209166	Identifier	cp		5209055	0					
ANR	5209167	Identifier	code		5209055	1					
ANR	5209168	IfStatement	if ( len == 1 )		5209055	7					
ANR	5209169	Condition	len == 1	988:5:23684:23691	5209055	0	True				
ANR	5209170	EqualityExpression	len == 1		5209055	0		==			
ANR	5209171	Identifier	len		5209055	0					
ANR	5209172	PrimaryExpression	1		5209055	1					
ANR	5209173	CompoundStatement		19:15:362:362	5209055	1					
ANR	5209174	ReturnStatement	return ( * sp ) ;	989:2:23698:23710	5209055	0	True				
ANR	5209175	UnaryOperationExpression	* sp		5209055	0					
ANR	5209176	UnaryOperator	*		5209055	0					
ANR	5209177	Identifier	sp		5209055	1					
ANR	5209178	ExpressionStatement	SETERROR ( R_REGEX_ECOLLATE )	991:1:23739:23765	5209055	8	True				
ANR	5209179	CallExpression	SETERROR ( R_REGEX_ECOLLATE )		5209055	0					
ANR	5209180	Callee	SETERROR		5209055	0					
ANR	5209181	Identifier	SETERROR		5209055	0					
ANR	5209182	ArgumentList	R_REGEX_ECOLLATE		5209055	1					
ANR	5209183	Argument	R_REGEX_ECOLLATE		5209055	0					
ANR	5209184	Identifier	R_REGEX_ECOLLATE		5209055	0					
ANR	5209185	ReturnStatement	return ( 0 ) ;	992:1:23784:23793	5209055	9	True				
ANR	5209186	PrimaryExpression	0		5209055	0					
ANR	5209187	ReturnType	static char		5209055	1					
ANR	5209188	Identifier	p_b_coll_elem		5209055	2					
ANR	5209189	ParameterList	"struct parse * p , int endc"		5209055	3					
ANR	5209190	Parameter	struct parse * p	968:14:23269:23283	5209055	0	True				
ANR	5209191	ParameterType	struct parse *		5209055	0					
ANR	5209192	Identifier	p		5209055	1					
ANR	5209193	Parameter	int endc	969:4:23290:23297	5209055	1	True				
ANR	5209194	ParameterType	int		5209055	0					
ANR	5209195	Identifier	endc		5209055	1					
ANR	5209196	CFGEntryNode	ENTRY		5209055		True				
ANR	5209197	CFGExitNode	EXIT		5209055		True				
ANR	5209198	Symbol	* sp		5209055						
ANR	5209199	Symbol	p -> next		5209055						
ANR	5209200	Symbol	NULL		5209055						
ANR	5209201	Symbol	endc		5209055						
ANR	5209202	Symbol	R_REGEX_ECOLLATE		5209055						
ANR	5209203	Symbol	cp		5209055						
ANR	5209204	Symbol	cnames		5209055						
ANR	5209205	Symbol	* cp -> name		5209055						
ANR	5209206	Symbol	p		5209055						
ANR	5209207	Symbol	* cp		5209055						
ANR	5209208	Symbol	MORE		5209055						
ANR	5209209	Symbol	strncmp		5209055						
ANR	5209210	Symbol	len		5209055						
ANR	5209211	Symbol	SEETWO		5209055						
ANR	5209212	Symbol	* p		5209055						
ANR	5209213	Symbol	R_REGEX_EBRACK		5209055						
ANR	5209214	Symbol	cp -> code		5209055						
ANR	5209215	Symbol	* * cp		5209055						
ANR	5209216	Symbol	sp		5209055						
ANR	5209217	Symbol	cp -> name		5209055						
ANR	5209218	Symbol	* len		5209055						
ANR	5209219	Function	othercase	998:0:23865:24159							
ANR	5209220	FunctionDef	othercase (int ch)		5209219	0					
ANR	5209221	CompoundStatement		1000:0:23932:24159	5209219	0					
ANR	5209222	ExpressionStatement	ch = ( ut8 ) ch	1001:1:23935:23947	5209219	0	True				
ANR	5209223	AssignmentExpression	ch = ( ut8 ) ch		5209219	0		=			
ANR	5209224	Identifier	ch		5209219	0					
ANR	5209225	CastExpression	( ut8 ) ch		5209219	1					
ANR	5209226	CastTarget	ut8		5209219	0					
ANR	5209227	Identifier	ch		5209219	1					
ANR	5209228	IfStatement	if ( isalpha ( ch ) )		5209219	1					
ANR	5209229	Condition	isalpha ( ch )	1002:5:23954:23964	5209219	0	True				
ANR	5209230	CallExpression	isalpha ( ch )		5209219	0					
ANR	5209231	Callee	isalpha		5209219	0					
ANR	5209232	Identifier	isalpha		5209219	0					
ANR	5209233	ArgumentList	ch		5209219	1					
ANR	5209234	Argument	ch		5209219	0					
ANR	5209235	Identifier	ch		5209219	0					
ANR	5209236	CompoundStatement		3:18:34:34	5209219	1					
ANR	5209237	IfStatement	if ( isupper ( ch ) )		5209219	0					
ANR	5209238	Condition	isupper ( ch )	1003:6:23975:23986	5209219	0	True				
ANR	5209239	CallExpression	isupper ( ch )		5209219	0					
ANR	5209240	Callee	isupper		5209219	0					
ANR	5209241	Identifier	isupper		5209219	0					
ANR	5209242	ArgumentList	ch		5209219	1					
ANR	5209243	Argument	ch		5209219	0					
ANR	5209244	Identifier	ch		5209219	0					
ANR	5209245	CompoundStatement		4:20:56:56	5209219	1					
ANR	5209246	ReturnStatement	return ( ( ut8 ) tolower ( ch ) ) ;	1004:3:23994:24019	5209219	0	True				
ANR	5209247	CastExpression	( ut8 ) tolower ( ch )		5209219	0					
ANR	5209248	CastTarget	ut8		5209219	0					
ANR	5209249	CallExpression	tolower ( ch )		5209219	1					
ANR	5209250	Callee	tolower		5209219	0					
ANR	5209251	Identifier	tolower		5209219	0					
ANR	5209252	ArgumentList	ch		5209219	1					
ANR	5209253	Argument	ch		5209219	0					
ANR	5209254	Identifier	ch		5209219	0					
ANR	5209255	ElseStatement	else		5209219	0					
ANR	5209256	IfStatement	if ( islower ( ch ) )		5209219	0					
ANR	5209257	Condition	islower ( ch )	1005:13:24034:24045	5209219	0	True				
ANR	5209258	CallExpression	islower ( ch )		5209219	0					
ANR	5209259	Callee	islower		5209219	0					
ANR	5209260	Identifier	islower		5209219	0					
ANR	5209261	ArgumentList	ch		5209219	1					
ANR	5209262	Argument	ch		5209219	0					
ANR	5209263	Identifier	ch		5209219	0					
ANR	5209264	CompoundStatement		6:27:115:115	5209219	1					
ANR	5209265	ReturnStatement	return ( ( ut8 ) toupper ( ch ) ) ;	1006:3:24053:24078	5209219	0	True				
ANR	5209266	CastExpression	( ut8 ) toupper ( ch )		5209219	0					
ANR	5209267	CastTarget	ut8		5209219	0					
ANR	5209268	CallExpression	toupper ( ch )		5209219	1					
ANR	5209269	Callee	toupper		5209219	0					
ANR	5209270	Identifier	toupper		5209219	0					
ANR	5209271	ArgumentList	ch		5209219	1					
ANR	5209272	Argument	ch		5209219	0					
ANR	5209273	Identifier	ch		5209219	0					
ANR	5209274	ElseStatement	else		5209219	0					
ANR	5209275	CompoundStatement		8:9:156:156	5209219	0					
ANR	5209276	ReturnStatement	return ( ch ) ;	1008:3:24127:24138	5209219	0	True				
ANR	5209277	Identifier	ch		5209219	0					
ANR	5209278	ReturnStatement	return ch ;	1011:1:24148:24157	5209219	2	True				
ANR	5209279	Identifier	ch		5209219	0					
ANR	5209280	ReturnType	static char		5209219	1					
ANR	5209281	Identifier	othercase		5209219	2					
ANR	5209282	ParameterList	int ch		5209219	3					
ANR	5209283	Parameter	int ch	999:10:23924:23929	5209219	0	True				
ANR	5209284	ParameterType	int		5209219	0					
ANR	5209285	Identifier	ch		5209219	1					
ANR	5209286	CFGEntryNode	ENTRY		5209219		True				
ANR	5209287	CFGExitNode	EXIT		5209219		True				
ANR	5209288	Symbol	isalpha		5209219						
ANR	5209289	Symbol	tolower		5209219						
ANR	5209290	Symbol	ch		5209219						
ANR	5209291	Symbol	toupper		5209219						
ANR	5209292	Symbol	islower		5209219						
ANR	5209293	Symbol	isupper		5209219						
ANR	5209294	Function	bothcases	1019:0:24283:24674							
ANR	5209295	FunctionDef	"bothcases (struct parse * p , int ch)"		5209294	0					
ANR	5209296	CompoundStatement		1019:47:24330:24674	5209294	0					
ANR	5209297	IdentifierDeclStatement	char * oldnext = p -> next ;	1020:1:24333:24356	5209294	0	True				
ANR	5209298	IdentifierDecl	* oldnext = p -> next		5209294	0					
ANR	5209299	IdentifierDeclType	char *		5209294	0					
ANR	5209300	Identifier	oldnext		5209294	1					
ANR	5209301	AssignmentExpression	* oldnext = p -> next		5209294	2		=			
ANR	5209302	Identifier	oldnext		5209294	0					
ANR	5209303	PtrMemberAccess	p -> next		5209294	1					
ANR	5209304	Identifier	p		5209294	0					
ANR	5209305	Identifier	next		5209294	1					
ANR	5209306	IdentifierDeclStatement	char * oldend = p -> end ;	1021:1:24359:24380	5209294	1	True				
ANR	5209307	IdentifierDecl	* oldend = p -> end		5209294	0					
ANR	5209308	IdentifierDeclType	char *		5209294	0					
ANR	5209309	Identifier	oldend		5209294	1					
ANR	5209310	AssignmentExpression	* oldend = p -> end		5209294	2		=			
ANR	5209311	Identifier	oldend		5209294	0					
ANR	5209312	PtrMemberAccess	p -> end		5209294	1					
ANR	5209313	Identifier	p		5209294	0					
ANR	5209314	Identifier	end		5209294	1					
ANR	5209315	IdentifierDeclStatement	char bracket [ 3 ] ;	1022:1:24383:24398	5209294	2	True				
ANR	5209316	IdentifierDecl	bracket [ 3 ]		5209294	0					
ANR	5209317	IdentifierDeclType	char [ 3 ]		5209294	0					
ANR	5209318	Identifier	bracket		5209294	1					
ANR	5209319	PrimaryExpression	3		5209294	2					
ANR	5209320	ExpressionStatement	ch = ( ut8 ) ch	1024:1:24402:24414	5209294	3	True				
ANR	5209321	AssignmentExpression	ch = ( ut8 ) ch		5209294	0		=			
ANR	5209322	Identifier	ch		5209294	0					
ANR	5209323	CastExpression	( ut8 ) ch		5209294	1					
ANR	5209324	CastTarget	ut8		5209294	0					
ANR	5209325	Identifier	ch		5209294	1					
ANR	5209326	IfStatement	if ( othercase ( ch ) != ch )		5209294	4					
ANR	5209327	Condition	othercase ( ch ) != ch	1025:5:24421:24439	5209294	0	True				
ANR	5209328	EqualityExpression	othercase ( ch ) != ch		5209294	0		!=			
ANR	5209329	CallExpression	othercase ( ch )		5209294	0					
ANR	5209330	Callee	othercase		5209294	0					
ANR	5209331	Identifier	othercase		5209294	0					
ANR	5209332	ArgumentList	ch		5209294	1					
ANR	5209333	Argument	ch		5209294	0					
ANR	5209334	Identifier	ch		5209294	0					
ANR	5209335	Identifier	ch		5209294	1					
ANR	5209336	CompoundStatement		7:26:111:111	5209294	1					
ANR	5209337	ExpressionStatement	p -> next = bracket	1026:2:24478:24495	5209294	0	True				
ANR	5209338	AssignmentExpression	p -> next = bracket		5209294	0		=			
ANR	5209339	PtrMemberAccess	p -> next		5209294	0					
ANR	5209340	Identifier	p		5209294	0					
ANR	5209341	Identifier	next		5209294	1					
ANR	5209342	Identifier	bracket		5209294	1					
ANR	5209343	ExpressionStatement	p -> end = bracket + 2	1027:2:24499:24517	5209294	1	True				
ANR	5209344	AssignmentExpression	p -> end = bracket + 2		5209294	0		=			
ANR	5209345	PtrMemberAccess	p -> end		5209294	0					
ANR	5209346	Identifier	p		5209294	0					
ANR	5209347	Identifier	end		5209294	1					
ANR	5209348	AdditiveExpression	bracket + 2		5209294	1		+			
ANR	5209349	Identifier	bracket		5209294	0					
ANR	5209350	PrimaryExpression	2		5209294	1					
ANR	5209351	ExpressionStatement	bracket [ 0 ] = ch	1028:2:24521:24536	5209294	2	True				
ANR	5209352	AssignmentExpression	bracket [ 0 ] = ch		5209294	0		=			
ANR	5209353	ArrayIndexing	bracket [ 0 ]		5209294	0					
ANR	5209354	Identifier	bracket		5209294	0					
ANR	5209355	PrimaryExpression	0		5209294	1					
ANR	5209356	Identifier	ch		5209294	1					
ANR	5209357	ExpressionStatement	bracket [ 1 ] = ']'	1029:2:24540:24556	5209294	3	True				
ANR	5209358	AssignmentExpression	bracket [ 1 ] = ']'		5209294	0		=			
ANR	5209359	ArrayIndexing	bracket [ 1 ]		5209294	0					
ANR	5209360	Identifier	bracket		5209294	0					
ANR	5209361	PrimaryExpression	1		5209294	1					
ANR	5209362	PrimaryExpression	']'		5209294	1					
ANR	5209363	ExpressionStatement	bracket [ 2 ] = '\\0'	1030:2:24560:24577	5209294	4	True				
ANR	5209364	AssignmentExpression	bracket [ 2 ] = '\\0'		5209294	0		=			
ANR	5209365	ArrayIndexing	bracket [ 2 ]		5209294	0					
ANR	5209366	Identifier	bracket		5209294	0					
ANR	5209367	PrimaryExpression	2		5209294	1					
ANR	5209368	PrimaryExpression	'\\0'		5209294	1					
ANR	5209369	ExpressionStatement	p_bracket ( p )	1031:2:24581:24593	5209294	5	True				
ANR	5209370	CallExpression	p_bracket ( p )		5209294	0					
ANR	5209371	Callee	p_bracket		5209294	0					
ANR	5209372	Identifier	p_bracket		5209294	0					
ANR	5209373	ArgumentList	p		5209294	1					
ANR	5209374	Argument	p		5209294	0					
ANR	5209375	Identifier	p		5209294	0					
ANR	5209376	IfStatement	if ( p -> next == bracket + 2 )		5209294	6					
ANR	5209377	Condition	p -> next == bracket + 2	1032:6:24601:24620	5209294	0	True				
ANR	5209378	EqualityExpression	p -> next == bracket + 2		5209294	0		==			
ANR	5209379	PtrMemberAccess	p -> next		5209294	0					
ANR	5209380	Identifier	p		5209294	0					
ANR	5209381	Identifier	next		5209294	1					
ANR	5209382	AdditiveExpression	bracket + 2		5209294	1		+			
ANR	5209383	Identifier	bracket		5209294	0					
ANR	5209384	PrimaryExpression	2		5209294	1					
ANR	5209385	CompoundStatement		14:28:292:292	5209294	1					
ANR	5209386	ExpressionStatement	p -> next = oldnext	1033:3:24628:24645	5209294	0	True				
ANR	5209387	AssignmentExpression	p -> next = oldnext		5209294	0		=			
ANR	5209388	PtrMemberAccess	p -> next		5209294	0					
ANR	5209389	Identifier	p		5209294	0					
ANR	5209390	Identifier	next		5209294	1					
ANR	5209391	Identifier	oldnext		5209294	1					
ANR	5209392	ExpressionStatement	p -> end = oldend	1034:3:24650:24665	5209294	1	True				
ANR	5209393	AssignmentExpression	p -> end = oldend		5209294	0		=			
ANR	5209394	PtrMemberAccess	p -> end		5209294	0					
ANR	5209395	Identifier	p		5209294	0					
ANR	5209396	Identifier	end		5209294	1					
ANR	5209397	Identifier	oldend		5209294	1					
ANR	5209398	ReturnType	static void		5209294	1					
ANR	5209399	Identifier	bothcases		5209294	2					
ANR	5209400	ParameterList	"struct parse * p , int ch"		5209294	3					
ANR	5209401	Parameter	struct parse * p	1019:22:24305:24319	5209294	0	True				
ANR	5209402	ParameterType	struct parse *		5209294	0					
ANR	5209403	Identifier	p		5209294	1					
ANR	5209404	Parameter	int ch	1019:39:24322:24327	5209294	1	True				
ANR	5209405	ParameterType	int		5209294	0					
ANR	5209406	Identifier	ch		5209294	1					
ANR	5209407	CFGEntryNode	ENTRY		5209294		True				
ANR	5209408	CFGExitNode	EXIT		5209294		True				
ANR	5209409	Symbol	p		5209294						
ANR	5209410	Symbol	p -> end		5209294						
ANR	5209411	Symbol	* bracket		5209294						
ANR	5209412	Symbol	p -> next		5209294						
ANR	5209413	Symbol	ch		5209294						
ANR	5209414	Symbol	bracket		5209294						
ANR	5209415	Symbol	oldnext		5209294						
ANR	5209416	Symbol	* p		5209294						
ANR	5209417	Symbol	othercase		5209294						
ANR	5209418	Symbol	oldend		5209294						
ANR	5209419	Function	ordinary	1042:0:24725:25007							
ANR	5209420	FunctionDef	"ordinary (struct parse * p , int ch)"		5209419	0					
ANR	5209421	CompoundStatement		1044:0:24771:25007	5209419	0					
ANR	5209422	IdentifierDeclStatement	cat_t * cap = p -> g -> categories ;	1045:1:24774:24803	5209419	0	True				
ANR	5209423	IdentifierDecl	* cap = p -> g -> categories		5209419	0					
ANR	5209424	IdentifierDeclType	cat_t *		5209419	0					
ANR	5209425	Identifier	cap		5209419	1					
ANR	5209426	AssignmentExpression	* cap = p -> g -> categories		5209419	2		=			
ANR	5209427	Identifier	cap		5209419	0					
ANR	5209428	PtrMemberAccess	p -> g -> categories		5209419	1					
ANR	5209429	PtrMemberAccess	p -> g		5209419	0					
ANR	5209430	Identifier	p		5209419	0					
ANR	5209431	Identifier	g		5209419	1					
ANR	5209432	Identifier	categories		5209419	1					
ANR	5209433	IfStatement	if ( ( p -> g -> cflags & R_REGEX_ICASE ) && isalpha ( ( ut8 ) ch ) && othercase ( ch ) != ch )		5209419	1					
ANR	5209434	Condition	( p -> g -> cflags & R_REGEX_ICASE ) && isalpha ( ( ut8 ) ch ) && othercase ( ch ) != ch	1047:5:24811:24885	5209419	0	True				
ANR	5209435	AndExpression	( p -> g -> cflags & R_REGEX_ICASE ) && isalpha ( ( ut8 ) ch ) && othercase ( ch ) != ch		5209419	0		&&			
ANR	5209436	BitAndExpression	p -> g -> cflags & R_REGEX_ICASE		5209419	0		&			
ANR	5209437	PtrMemberAccess	p -> g -> cflags		5209419	0					
ANR	5209438	PtrMemberAccess	p -> g		5209419	0					
ANR	5209439	Identifier	p		5209419	0					
ANR	5209440	Identifier	g		5209419	1					
ANR	5209441	Identifier	cflags		5209419	1					
ANR	5209442	Identifier	R_REGEX_ICASE		5209419	1					
ANR	5209443	AndExpression	isalpha ( ( ut8 ) ch ) && othercase ( ch ) != ch		5209419	1		&&			
ANR	5209444	CallExpression	isalpha ( ( ut8 ) ch )		5209419	0					
ANR	5209445	Callee	isalpha		5209419	0					
ANR	5209446	Identifier	isalpha		5209419	0					
ANR	5209447	ArgumentList	( ut8 ) ch		5209419	1					
ANR	5209448	Argument	( ut8 ) ch		5209419	0					
ANR	5209449	CastExpression	( ut8 ) ch		5209419	0					
ANR	5209450	CastTarget	ut8		5209419	0					
ANR	5209451	Identifier	ch		5209419	1					
ANR	5209452	EqualityExpression	othercase ( ch ) != ch		5209419	1		!=			
ANR	5209453	CallExpression	othercase ( ch )		5209419	0					
ANR	5209454	Callee	othercase		5209419	0					
ANR	5209455	Identifier	othercase		5209419	0					
ANR	5209456	ArgumentList	ch		5209419	1					
ANR	5209457	Argument	ch		5209419	0					
ANR	5209458	Identifier	ch		5209419	0					
ANR	5209459	Identifier	ch		5209419	1					
ANR	5209460	CompoundStatement		4:82:116:116	5209419	1					
ANR	5209461	ExpressionStatement	"bothcases ( p , ch )"	1048:2:24892:24908	5209419	0	True				
ANR	5209462	CallExpression	"bothcases ( p , ch )"		5209419	0					
ANR	5209463	Callee	bothcases		5209419	0					
ANR	5209464	Identifier	bothcases		5209419	0					
ANR	5209465	ArgumentList	p		5209419	1					
ANR	5209466	Argument	p		5209419	0					
ANR	5209467	Identifier	p		5209419	0					
ANR	5209468	Argument	ch		5209419	1					
ANR	5209469	Identifier	ch		5209419	0					
ANR	5209470	ElseStatement	else		5209419	0					
ANR	5209471	CompoundStatement		6:8:146:146	5209419	0					
ANR	5209472	ExpressionStatement	"EMIT ( OCHAR , ( ut8 ) ch )"	1050:2:24922:24942	5209419	0	True				
ANR	5209473	CallExpression	"EMIT ( OCHAR , ( ut8 ) ch )"		5209419	0					
ANR	5209474	Callee	EMIT		5209419	0					
ANR	5209475	Identifier	EMIT		5209419	0					
ANR	5209476	ArgumentList	OCHAR		5209419	1					
ANR	5209477	Argument	OCHAR		5209419	0					
ANR	5209478	Identifier	OCHAR		5209419	0					
ANR	5209479	Argument	( ut8 ) ch		5209419	1					
ANR	5209480	CastExpression	( ut8 ) ch		5209419	0					
ANR	5209481	CastTarget	ut8		5209419	0					
ANR	5209482	Identifier	ch		5209419	1					
ANR	5209483	IfStatement	if ( cap [ ch ] == 0 )		5209419	1					
ANR	5209484	Condition	cap [ ch ] == 0	1051:6:24950:24961	5209419	0	True				
ANR	5209485	EqualityExpression	cap [ ch ] == 0		5209419	0		==			
ANR	5209486	ArrayIndexing	cap [ ch ]		5209419	0					
ANR	5209487	Identifier	cap		5209419	0					
ANR	5209488	Identifier	ch		5209419	1					
ANR	5209489	PrimaryExpression	0		5209419	1					
ANR	5209490	CompoundStatement		8:20:192:192	5209419	1					
ANR	5209491	ExpressionStatement	cap [ ch ] = p -> g -> ncategories ++	1052:3:24969:24998	5209419	0	True				
ANR	5209492	AssignmentExpression	cap [ ch ] = p -> g -> ncategories ++		5209419	0		=			
ANR	5209493	ArrayIndexing	cap [ ch ]		5209419	0					
ANR	5209494	Identifier	cap		5209419	0					
ANR	5209495	Identifier	ch		5209419	1					
ANR	5209496	PostIncDecOperationExpression	p -> g -> ncategories ++		5209419	1					
ANR	5209497	PtrMemberAccess	p -> g -> ncategories		5209419	0					
ANR	5209498	PtrMemberAccess	p -> g		5209419	0					
ANR	5209499	Identifier	p		5209419	0					
ANR	5209500	Identifier	g		5209419	1					
ANR	5209501	Identifier	ncategories		5209419	1					
ANR	5209502	IncDec	++		5209419	1					
ANR	5209503	ReturnType	static void		5209419	1					
ANR	5209504	Identifier	ordinary		5209419	2					
ANR	5209505	ParameterList	"struct parse * p , int ch"		5209419	3					
ANR	5209506	Parameter	struct parse * p	1043:9:24746:24760	5209419	0	True				
ANR	5209507	ParameterType	struct parse *		5209419	0					
ANR	5209508	Identifier	p		5209419	1					
ANR	5209509	Parameter	int ch	1043:26:24763:24768	5209419	1	True				
ANR	5209510	ParameterType	int		5209419	0					
ANR	5209511	Identifier	ch		5209419	1					
ANR	5209512	CFGEntryNode	ENTRY		5209419		True				
ANR	5209513	CFGExitNode	EXIT		5209419		True				
ANR	5209514	Symbol	isalpha		5209419						
ANR	5209515	Symbol	* cap		5209419						
ANR	5209516	Symbol	ch		5209419						
ANR	5209517	Symbol	* ch		5209419						
ANR	5209518	Symbol	othercase		5209419						
ANR	5209519	Symbol	p -> g -> cflags		5209419						
ANR	5209520	Symbol	p		5209419						
ANR	5209521	Symbol	* p -> g		5209419						
ANR	5209522	Symbol	cap		5209419						
ANR	5209523	Symbol	p -> g -> ncategories		5209419						
ANR	5209524	Symbol	R_REGEX_ICASE		5209419						
ANR	5209525	Symbol	p -> g -> categories		5209419						
ANR	5209526	Symbol	* p		5209419						
ANR	5209527	Symbol	* * p		5209419						
ANR	5209528	Symbol	OCHAR		5209419						
ANR	5209529	Symbol	p -> g		5209419						
ANR	5209530	Function	special	1057:0:25010:25678							
ANR	5209531	FunctionDef	"special (struct parse * p , int ch)"		5209530	0					
ANR	5209532	CompoundStatement		1058:33:25055:25678	5209530	0					
ANR	5209533	IdentifierDeclStatement	char * oldnext = p -> next ;	1059:1:25058:25081	5209530	0	True				
ANR	5209534	IdentifierDecl	* oldnext = p -> next		5209530	0					
ANR	5209535	IdentifierDeclType	char *		5209530	0					
ANR	5209536	Identifier	oldnext		5209530	1					
ANR	5209537	AssignmentExpression	* oldnext = p -> next		5209530	2		=			
ANR	5209538	Identifier	oldnext		5209530	0					
ANR	5209539	PtrMemberAccess	p -> next		5209530	1					
ANR	5209540	Identifier	p		5209530	0					
ANR	5209541	Identifier	next		5209530	1					
ANR	5209542	IdentifierDeclStatement	char * oldend = p -> end ;	1060:1:25084:25105	5209530	1	True				
ANR	5209543	IdentifierDecl	* oldend = p -> end		5209530	0					
ANR	5209544	IdentifierDeclType	char *		5209530	0					
ANR	5209545	Identifier	oldend		5209530	1					
ANR	5209546	AssignmentExpression	* oldend = p -> end		5209530	2		=			
ANR	5209547	Identifier	oldend		5209530	0					
ANR	5209548	PtrMemberAccess	p -> end		5209530	1					
ANR	5209549	Identifier	p		5209530	0					
ANR	5209550	Identifier	end		5209530	1					
ANR	5209551	IdentifierDeclStatement	char bracket [ 16 ] = { 0 } ;	1061:1:25108:25130	5209530	2	True				
ANR	5209552	IdentifierDecl	bracket [ 16 ] = { 0 }		5209530	0					
ANR	5209553	IdentifierDeclType	char [ 16 ]		5209530	0					
ANR	5209554	Identifier	bracket		5209530	1					
ANR	5209555	PrimaryExpression	16		5209530	2					
ANR	5209556	AssignmentExpression	bracket [ 16 ] = { 0 }		5209530	3		=			
ANR	5209557	Identifier	bracket		5209530	0					
ANR	5209558	InitializerList	0		5209530	1					
ANR	5209559	PrimaryExpression	0		5209530	0					
ANR	5209560	IdentifierDeclStatement	int num = 0 ;	1062:1:25133:25144	5209530	3	True				
ANR	5209561	IdentifierDecl	num = 0		5209530	0					
ANR	5209562	IdentifierDeclType	int		5209530	0					
ANR	5209563	Identifier	num		5209530	1					
ANR	5209564	AssignmentExpression	num = 0		5209530	2		=			
ANR	5209565	Identifier	num		5209530	0					
ANR	5209566	PrimaryExpression	0		5209530	1					
ANR	5209567	SwitchStatement	switch ( ch )		5209530	4					
ANR	5209568	Condition	ch	1063:9:25155:25156	5209530	0	True				
ANR	5209569	Identifier	ch		5209530	0					
ANR	5209570	CompoundStatement		6:13:103:103	5209530	1					
ANR	5209571	Label	case 'n' :	1064:1:25162:25170	5209530	0	True				
ANR	5209572	ExpressionStatement	"ordinary ( p , '\\n' )"	1065:2:25174:25192	5209530	1	True				
ANR	5209573	CallExpression	"ordinary ( p , '\\n' )"		5209530	0					
ANR	5209574	Callee	ordinary		5209530	0					
ANR	5209575	Identifier	ordinary		5209530	0					
ANR	5209576	ArgumentList	p		5209530	1					
ANR	5209577	Argument	p		5209530	0					
ANR	5209578	Identifier	p		5209530	0					
ANR	5209579	Argument	'\\n'		5209530	1					
ANR	5209580	PrimaryExpression	'\\n'		5209530	0					
ANR	5209581	ReturnStatement	return ;	1066:2:25196:25202	5209530	2	True				
ANR	5209582	Label	case 't' :	1067:1:25205:25213	5209530	3	True				
ANR	5209583	ExpressionStatement	"ordinary ( p , '\\t' )"	1068:2:25217:25235	5209530	4	True				
ANR	5209584	CallExpression	"ordinary ( p , '\\t' )"		5209530	0					
ANR	5209585	Callee	ordinary		5209530	0					
ANR	5209586	Identifier	ordinary		5209530	0					
ANR	5209587	ArgumentList	p		5209530	1					
ANR	5209588	Argument	p		5209530	0					
ANR	5209589	Identifier	p		5209530	0					
ANR	5209590	Argument	'\\t'		5209530	1					
ANR	5209591	PrimaryExpression	'\\t'		5209530	0					
ANR	5209592	ReturnStatement	return ;	1069:2:25239:25245	5209530	5	True				
ANR	5209593	Label	case 'r' :	1070:1:25248:25256	5209530	6	True				
ANR	5209594	ExpressionStatement	"ordinary ( p , '\\r' )"	1071:2:25260:25278	5209530	7	True				
ANR	5209595	CallExpression	"ordinary ( p , '\\r' )"		5209530	0					
ANR	5209596	Callee	ordinary		5209530	0					
ANR	5209597	Identifier	ordinary		5209530	0					
ANR	5209598	ArgumentList	p		5209530	1					
ANR	5209599	Argument	p		5209530	0					
ANR	5209600	Identifier	p		5209530	0					
ANR	5209601	Argument	'\\r'		5209530	1					
ANR	5209602	PrimaryExpression	'\\r'		5209530	0					
ANR	5209603	ReturnStatement	return ;	1072:2:25282:25288	5209530	8	True				
ANR	5209604	Label	case 's' :	1073:1:25291:25299	5209530	9	True				
ANR	5209605	ExpressionStatement	num = 5	1074:2:25303:25310	5209530	10	True				
ANR	5209606	AssignmentExpression	num = 5		5209530	0		=			
ANR	5209607	Identifier	num		5209530	0					
ANR	5209608	PrimaryExpression	5		5209530	1					
ANR	5209609	ExpressionStatement	"memcpy ( bracket , ""\\t\\r\\n ]"" , num )"	1075:2:25314:25347	5209530	11	True				
ANR	5209610	CallExpression	"memcpy ( bracket , ""\\t\\r\\n ]"" , num )"		5209530	0					
ANR	5209611	Callee	memcpy		5209530	0					
ANR	5209612	Identifier	memcpy		5209530	0					
ANR	5209613	ArgumentList	bracket		5209530	1					
ANR	5209614	Argument	bracket		5209530	0					
ANR	5209615	Identifier	bracket		5209530	0					
ANR	5209616	Argument	"""\\t\\r\\n ]"""		5209530	1					
ANR	5209617	PrimaryExpression	"""\\t\\r\\n ]"""		5209530	0					
ANR	5209618	Argument	num		5209530	2					
ANR	5209619	Identifier	num		5209530	0					
ANR	5209620	BreakStatement	break ;	1076:2:25351:25356	5209530	12	True				
ANR	5209621	Label	case 'd' :	1077:1:25359:25367	5209530	13	True				
ANR	5209622	ExpressionStatement	num = 4	1078:2:25371:25378	5209530	14	True				
ANR	5209623	AssignmentExpression	num = 4		5209530	0		=			
ANR	5209624	Identifier	num		5209530	0					
ANR	5209625	PrimaryExpression	4		5209530	1					
ANR	5209626	ExpressionStatement	"memcpy ( bracket , ""0-9]"" , num )"	1079:2:25382:25411	5209530	15	True				
ANR	5209627	CallExpression	"memcpy ( bracket , ""0-9]"" , num )"		5209530	0					
ANR	5209628	Callee	memcpy		5209530	0					
ANR	5209629	Identifier	memcpy		5209530	0					
ANR	5209630	ArgumentList	bracket		5209530	1					
ANR	5209631	Argument	bracket		5209530	0					
ANR	5209632	Identifier	bracket		5209530	0					
ANR	5209633	Argument	"""0-9]"""		5209530	1					
ANR	5209634	PrimaryExpression	"""0-9]"""		5209530	0					
ANR	5209635	Argument	num		5209530	2					
ANR	5209636	Identifier	num		5209530	0					
ANR	5209637	BreakStatement	break ;	1080:2:25415:25420	5209530	16	True				
ANR	5209638	Label	case 'w' :	1081:1:25423:25431	5209530	17	True				
ANR	5209639	ExpressionStatement	num = 4	1082:2:25435:25442	5209530	18	True				
ANR	5209640	AssignmentExpression	num = 4		5209530	0		=			
ANR	5209641	Identifier	num		5209530	0					
ANR	5209642	PrimaryExpression	4		5209530	1					
ANR	5209643	ExpressionStatement	"memcpy ( bracket , ""a-z]"" , num )"	1083:2:25446:25475	5209530	19	True				
ANR	5209644	CallExpression	"memcpy ( bracket , ""a-z]"" , num )"		5209530	0					
ANR	5209645	Callee	memcpy		5209530	0					
ANR	5209646	Identifier	memcpy		5209530	0					
ANR	5209647	ArgumentList	bracket		5209530	1					
ANR	5209648	Argument	bracket		5209530	0					
ANR	5209649	Identifier	bracket		5209530	0					
ANR	5209650	Argument	"""a-z]"""		5209530	1					
ANR	5209651	PrimaryExpression	"""a-z]"""		5209530	0					
ANR	5209652	Argument	num		5209530	2					
ANR	5209653	Identifier	num		5209530	0					
ANR	5209654	BreakStatement	break ;	1084:2:25479:25484	5209530	20	True				
ANR	5209655	Label	default :	1085:1:25487:25494	5209530	21	True				
ANR	5209656	Identifier	default		5209530	0					
ANR	5209657	ExpressionStatement	SETERROR ( R_REGEX_INVARG )	1086:2:25498:25523	5209530	22	True				
ANR	5209658	CallExpression	SETERROR ( R_REGEX_INVARG )		5209530	0					
ANR	5209659	Callee	SETERROR		5209530	0					
ANR	5209660	Identifier	SETERROR		5209530	0					
ANR	5209661	ArgumentList	R_REGEX_INVARG		5209530	1					
ANR	5209662	Argument	R_REGEX_INVARG		5209530	0					
ANR	5209663	Identifier	R_REGEX_INVARG		5209530	0					
ANR	5209664	ReturnStatement	return ;	1087:2:25527:25533	5209530	23	True				
ANR	5209665	ExpressionStatement	p -> next = bracket	1090:1:25540:25557	5209530	5	True				
ANR	5209666	AssignmentExpression	p -> next = bracket		5209530	0		=			
ANR	5209667	PtrMemberAccess	p -> next		5209530	0					
ANR	5209668	Identifier	p		5209530	0					
ANR	5209669	Identifier	next		5209530	1					
ANR	5209670	Identifier	bracket		5209530	1					
ANR	5209671	ExpressionStatement	p -> end = bracket + num	1091:1:25560:25582	5209530	6	True				
ANR	5209672	AssignmentExpression	p -> end = bracket + num		5209530	0		=			
ANR	5209673	PtrMemberAccess	p -> end		5209530	0					
ANR	5209674	Identifier	p		5209530	0					
ANR	5209675	Identifier	end		5209530	1					
ANR	5209676	AdditiveExpression	bracket + num		5209530	1		+			
ANR	5209677	Identifier	bracket		5209530	0					
ANR	5209678	Identifier	num		5209530	1					
ANR	5209679	ExpressionStatement	p_bracket ( p )	1093:1:25586:25599	5209530	7	True				
ANR	5209680	CallExpression	p_bracket ( p )		5209530	0					
ANR	5209681	Callee	p_bracket		5209530	0					
ANR	5209682	Identifier	p_bracket		5209530	0					
ANR	5209683	ArgumentList	p		5209530	1					
ANR	5209684	Argument	p		5209530	0					
ANR	5209685	Identifier	p		5209530	0					
ANR	5209686	IfStatement	if ( p -> next == bracket + num )		5209530	8					
ANR	5209687	Condition	p -> next == bracket + num	1095:5:25607:25630	5209530	0	True				
ANR	5209688	EqualityExpression	p -> next == bracket + num		5209530	0		==			
ANR	5209689	PtrMemberAccess	p -> next		5209530	0					
ANR	5209690	Identifier	p		5209530	0					
ANR	5209691	Identifier	next		5209530	1					
ANR	5209692	AdditiveExpression	bracket + num		5209530	1		+			
ANR	5209693	Identifier	bracket		5209530	0					
ANR	5209694	Identifier	num		5209530	1					
ANR	5209695	CompoundStatement		38:31:577:577	5209530	1					
ANR	5209696	ExpressionStatement	p -> next = oldnext	1096:2:25637:25654	5209530	0	True				
ANR	5209697	AssignmentExpression	p -> next = oldnext		5209530	0		=			
ANR	5209698	PtrMemberAccess	p -> next		5209530	0					
ANR	5209699	Identifier	p		5209530	0					
ANR	5209700	Identifier	next		5209530	1					
ANR	5209701	Identifier	oldnext		5209530	1					
ANR	5209702	ExpressionStatement	p -> end = oldend	1097:2:25658:25673	5209530	1	True				
ANR	5209703	AssignmentExpression	p -> end = oldend		5209530	0		=			
ANR	5209704	PtrMemberAccess	p -> end		5209530	0					
ANR	5209705	Identifier	p		5209530	0					
ANR	5209706	Identifier	end		5209530	1					
ANR	5209707	Identifier	oldend		5209530	1					
ANR	5209708	ReturnType	static void		5209530	1					
ANR	5209709	Identifier	special		5209530	2					
ANR	5209710	ParameterList	"struct parse * p , int ch"		5209530	3					
ANR	5209711	Parameter	struct parse * p	1058:8:25030:25044	5209530	0	True				
ANR	5209712	ParameterType	struct parse *		5209530	0					
ANR	5209713	Identifier	p		5209530	1					
ANR	5209714	Parameter	int ch	1058:25:25047:25052	5209530	1	True				
ANR	5209715	ParameterType	int		5209530	0					
ANR	5209716	Identifier	ch		5209530	1					
ANR	5209717	CFGEntryNode	ENTRY		5209530		True				
ANR	5209718	CFGExitNode	EXIT		5209530		True				
ANR	5209719	Symbol	p		5209530						
ANR	5209720	Symbol	p -> end		5209530						
ANR	5209721	Symbol	p -> next		5209530						
ANR	5209722	Symbol	ch		5209530						
ANR	5209723	Symbol	num		5209530						
ANR	5209724	Symbol	bracket		5209530						
ANR	5209725	Symbol	oldnext		5209530						
ANR	5209726	Symbol	* p		5209530						
ANR	5209727	Symbol	R_REGEX_INVARG		5209530						
ANR	5209728	Symbol	oldend		5209530						
ANR	5209729	Function	nonnewline	1106:0:25792:26109							
ANR	5209730	FunctionDef	nonnewline (struct parse * p)		5209729	0					
ANR	5209731	CompoundStatement		1108:0:25832:26109	5209729	0					
ANR	5209732	IdentifierDeclStatement	char * oldnext = p -> next ;	1109:1:25835:25858	5209729	0	True				
ANR	5209733	IdentifierDecl	* oldnext = p -> next		5209729	0					
ANR	5209734	IdentifierDeclType	char *		5209729	0					
ANR	5209735	Identifier	oldnext		5209729	1					
ANR	5209736	AssignmentExpression	* oldnext = p -> next		5209729	2		=			
ANR	5209737	Identifier	oldnext		5209729	0					
ANR	5209738	PtrMemberAccess	p -> next		5209729	1					
ANR	5209739	Identifier	p		5209729	0					
ANR	5209740	Identifier	next		5209729	1					
ANR	5209741	IdentifierDeclStatement	char * oldend = p -> end ;	1110:1:25861:25882	5209729	1	True				
ANR	5209742	IdentifierDecl	* oldend = p -> end		5209729	0					
ANR	5209743	IdentifierDeclType	char *		5209729	0					
ANR	5209744	Identifier	oldend		5209729	1					
ANR	5209745	AssignmentExpression	* oldend = p -> end		5209729	2		=			
ANR	5209746	Identifier	oldend		5209729	0					
ANR	5209747	PtrMemberAccess	p -> end		5209729	1					
ANR	5209748	Identifier	p		5209729	0					
ANR	5209749	Identifier	end		5209729	1					
ANR	5209750	IdentifierDeclStatement	char bracket [ 4 ] ;	1111:1:25885:25900	5209729	2	True				
ANR	5209751	IdentifierDecl	bracket [ 4 ]		5209729	0					
ANR	5209752	IdentifierDeclType	char [ 4 ]		5209729	0					
ANR	5209753	Identifier	bracket		5209729	1					
ANR	5209754	PrimaryExpression	4		5209729	2					
ANR	5209755	ExpressionStatement	p -> next = bracket	1113:1:25904:25921	5209729	3	True				
ANR	5209756	AssignmentExpression	p -> next = bracket		5209729	0		=			
ANR	5209757	PtrMemberAccess	p -> next		5209729	0					
ANR	5209758	Identifier	p		5209729	0					
ANR	5209759	Identifier	next		5209729	1					
ANR	5209760	Identifier	bracket		5209729	1					
ANR	5209761	ExpressionStatement	p -> end = bracket + 3	1114:1:25924:25942	5209729	4	True				
ANR	5209762	AssignmentExpression	p -> end = bracket + 3		5209729	0		=			
ANR	5209763	PtrMemberAccess	p -> end		5209729	0					
ANR	5209764	Identifier	p		5209729	0					
ANR	5209765	Identifier	end		5209729	1					
ANR	5209766	AdditiveExpression	bracket + 3		5209729	1		+			
ANR	5209767	Identifier	bracket		5209729	0					
ANR	5209768	PrimaryExpression	3		5209729	1					
ANR	5209769	ExpressionStatement	bracket [ 0 ] = '^'	1115:1:25945:25961	5209729	5	True				
ANR	5209770	AssignmentExpression	bracket [ 0 ] = '^'		5209729	0		=			
ANR	5209771	ArrayIndexing	bracket [ 0 ]		5209729	0					
ANR	5209772	Identifier	bracket		5209729	0					
ANR	5209773	PrimaryExpression	0		5209729	1					
ANR	5209774	PrimaryExpression	'^'		5209729	1					
ANR	5209775	ExpressionStatement	bracket [ 1 ] = '\\n'	1116:1:25964:25981	5209729	6	True				
ANR	5209776	AssignmentExpression	bracket [ 1 ] = '\\n'		5209729	0		=			
ANR	5209777	ArrayIndexing	bracket [ 1 ]		5209729	0					
ANR	5209778	Identifier	bracket		5209729	0					
ANR	5209779	PrimaryExpression	1		5209729	1					
ANR	5209780	PrimaryExpression	'\\n'		5209729	1					
ANR	5209781	ExpressionStatement	bracket [ 2 ] = ']'	1117:1:25984:26000	5209729	7	True				
ANR	5209782	AssignmentExpression	bracket [ 2 ] = ']'		5209729	0		=			
ANR	5209783	ArrayIndexing	bracket [ 2 ]		5209729	0					
ANR	5209784	Identifier	bracket		5209729	0					
ANR	5209785	PrimaryExpression	2		5209729	1					
ANR	5209786	PrimaryExpression	']'		5209729	1					
ANR	5209787	ExpressionStatement	bracket [ 3 ] = '\\0'	1118:1:26003:26020	5209729	8	True				
ANR	5209788	AssignmentExpression	bracket [ 3 ] = '\\0'		5209729	0		=			
ANR	5209789	ArrayIndexing	bracket [ 3 ]		5209729	0					
ANR	5209790	Identifier	bracket		5209729	0					
ANR	5209791	PrimaryExpression	3		5209729	1					
ANR	5209792	PrimaryExpression	'\\0'		5209729	1					
ANR	5209793	ExpressionStatement	p_bracket ( p )	1119:1:26023:26035	5209729	9	True				
ANR	5209794	CallExpression	p_bracket ( p )		5209729	0					
ANR	5209795	Callee	p_bracket		5209729	0					
ANR	5209796	Identifier	p_bracket		5209729	0					
ANR	5209797	ArgumentList	p		5209729	1					
ANR	5209798	Argument	p		5209729	0					
ANR	5209799	Identifier	p		5209729	0					
ANR	5209800	IfStatement	if ( p -> next == bracket + 3 )		5209729	10					
ANR	5209801	Condition	p -> next == bracket + 3	1120:5:26042:26061	5209729	0	True				
ANR	5209802	EqualityExpression	p -> next == bracket + 3		5209729	0		==			
ANR	5209803	PtrMemberAccess	p -> next		5209729	0					
ANR	5209804	Identifier	p		5209729	0					
ANR	5209805	Identifier	next		5209729	1					
ANR	5209806	AdditiveExpression	bracket + 3		5209729	1		+			
ANR	5209807	Identifier	bracket		5209729	0					
ANR	5209808	PrimaryExpression	3		5209729	1					
ANR	5209809	CompoundStatement		13:27:231:231	5209729	1					
ANR	5209810	ExpressionStatement	p -> next = oldnext	1121:2:26068:26085	5209729	0	True				
ANR	5209811	AssignmentExpression	p -> next = oldnext		5209729	0		=			
ANR	5209812	PtrMemberAccess	p -> next		5209729	0					
ANR	5209813	Identifier	p		5209729	0					
ANR	5209814	Identifier	next		5209729	1					
ANR	5209815	Identifier	oldnext		5209729	1					
ANR	5209816	ExpressionStatement	p -> end = oldend	1122:2:26089:26104	5209729	1	True				
ANR	5209817	AssignmentExpression	p -> end = oldend		5209729	0		=			
ANR	5209818	PtrMemberAccess	p -> end		5209729	0					
ANR	5209819	Identifier	p		5209729	0					
ANR	5209820	Identifier	end		5209729	1					
ANR	5209821	Identifier	oldend		5209729	1					
ANR	5209822	ReturnType	static void		5209729	1					
ANR	5209823	Identifier	nonnewline		5209729	2					
ANR	5209824	ParameterList	struct parse * p		5209729	3					
ANR	5209825	Parameter	struct parse * p	1107:11:25815:25829	5209729	0	True				
ANR	5209826	ParameterType	struct parse *		5209729	0					
ANR	5209827	Identifier	p		5209729	1					
ANR	5209828	CFGEntryNode	ENTRY		5209729		True				
ANR	5209829	CFGExitNode	EXIT		5209729		True				
ANR	5209830	Symbol	p		5209729						
ANR	5209831	Symbol	p -> end		5209729						
ANR	5209832	Symbol	* bracket		5209729						
ANR	5209833	Symbol	p -> next		5209729						
ANR	5209834	Symbol	bracket		5209729						
ANR	5209835	Symbol	oldnext		5209729						
ANR	5209836	Symbol	* p		5209729						
ANR	5209837	Symbol	oldend		5209729						
ANR	5209838	Function	repeat	1129:0:26193:28044							
ANR	5209839	FunctionDef	"repeat (struct parse * p , sopno start , int from , int to)"		5209838	0					
ANR	5209840	CompoundStatement		1134:0:26397:28044	5209838	0					
ANR	5209841	IdentifierDeclStatement	sopno finish = HERE ( ) ;	1135:1:26400:26421	5209838	0	True				
ANR	5209842	IdentifierDecl	finish = HERE ( )		5209838	0					
ANR	5209843	IdentifierDeclType	sopno		5209838	0					
ANR	5209844	Identifier	finish		5209838	1					
ANR	5209845	AssignmentExpression	finish = HERE ( )		5209838	2		=			
ANR	5209846	Identifier	finish		5209838	0					
ANR	5209847	CallExpression	HERE ( )		5209838	1					
ANR	5209848	Callee	HERE		5209838	0					
ANR	5209849	Identifier	HERE		5209838	0					
ANR	5209850	ArgumentList			5209838	1					
ANR	5209851	Statement	define	1136:2:26425:26430	5209838	1	True				
ANR	5209852	Statement	N	1136:9:26432:26432	5209838	2	True				
ANR	5209853	Statement	2	1136:11:26434:26434	5209838	3	True				
ANR	5209854	Statement	define	1137:2:26438:26443	5209838	4	True				
ANR	5209855	Statement	INF	1137:9:26445:26447	5209838	5	True				
ANR	5209856	Statement	3	1137:13:26449:26449	5209838	6	True				
ANR	5209857	Statement	define	1138:2:26453:26458	5209838	7	True				
ANR	5209858	Statement	REP	1138:9:26460:26462	5209838	8	True				
ANR	5209859	Statement	(	1138:12:26463:26463	5209838	9	True				
ANR	5209860	Statement	f	1138:13:26464:26464	5209838	10	True				
ANR	5209861	Statement	","	1138:14:26465:26465	5209838	11	True				
ANR	5209862	Statement	t	1138:16:26467:26467	5209838	12	True				
ANR	5209863	Statement	)	1138:17:26468:26468	5209838	13	True				
ANR	5209864	Statement	(	1138:19:26470:26470	5209838	14	True				
ANR	5209865	Statement	(	1138:20:26471:26471	5209838	15	True				
ANR	5209866	Statement	f	1138:21:26472:26472	5209838	16	True				
ANR	5209867	Statement	)	1138:22:26473:26473	5209838	17	True				
ANR	5209868	Statement	*	1138:23:26474:26474	5209838	18	True				
ANR	5209869	Statement	8	1138:24:26475:26475	5209838	19	True				
ANR	5209870	Statement	+	1138:26:26477:26477	5209838	20	True				
ANR	5209871	Statement	(	1138:28:26479:26479	5209838	21	True				
ANR	5209872	Statement	t	1138:29:26480:26480	5209838	22	True				
ANR	5209873	Statement	)	1138:30:26481:26481	5209838	23	True				
ANR	5209874	Statement	)	1138:31:26482:26482	5209838	24	True				
ANR	5209875	Statement	define	1139:2:26486:26491	5209838	25	True				
ANR	5209876	Statement	MAP	1139:9:26493:26495	5209838	26	True				
ANR	5209877	Statement	(	1139:12:26496:26496	5209838	27	True				
ANR	5209878	Statement	n	1139:13:26497:26497	5209838	28	True				
ANR	5209879	Statement	)	1139:14:26498:26498	5209838	29	True				
ANR	5209880	Statement	(	1139:16:26500:26500	5209838	30	True				
ANR	5209881	Statement	(	1139:17:26501:26501	5209838	31	True				
ANR	5209882	Statement	(	1139:18:26502:26502	5209838	32	True				
ANR	5209883	Statement	n	1139:19:26503:26503	5209838	33	True				
ANR	5209884	Statement	)	1139:20:26504:26504	5209838	34	True				
ANR	5209885	Statement	<=	1139:22:26506:26507	5209838	35	True				
ANR	5209886	Statement	1	1139:25:26509:26509	5209838	36	True				
ANR	5209887	Statement	)	1139:26:26510:26510	5209838	37	True				
ANR	5209888	Statement	?	1139:28:26512:26512	5209838	38	True				
ANR	5209889	Statement	(	1139:30:26514:26514	5209838	39	True				
ANR	5209890	Statement	n	1139:31:26515:26515	5209838	40	True				
ANR	5209891	Statement	)	1139:32:26516:26516	5209838	41	True				
ANR	5209892	Statement	:	1139:34:26518:26518	5209838	42	True				
ANR	5209893	Statement	(	1139:36:26520:26520	5209838	43	True				
ANR	5209894	Statement	(	1139:37:26521:26521	5209838	44	True				
ANR	5209895	Statement	n	1139:38:26522:26522	5209838	45	True				
ANR	5209896	Statement	)	1139:39:26523:26523	5209838	46	True				
ANR	5209897	Statement	==	1139:41:26525:26526	5209838	47	True				
ANR	5209898	Statement	INTFINITY	1139:44:26528:26536	5209838	48	True				
ANR	5209899	Statement	)	1139:53:26537:26537	5209838	49	True				
ANR	5209900	Statement	?	1139:55:26539:26539	5209838	50	True				
ANR	5209901	Label	INF :	1139:57:26541:26545	5209838	51	True				
ANR	5209902	Identifier	INF		5209838	0					
ANR	5209903	Statement	N	1139:63:26547:26547	5209838	52	True				
ANR	5209904	Statement	)	1139:64:26548:26548	5209838	53	True				
ANR	5209905	IdentifierDeclStatement	sopno copy ;	1140:1:26551:26561	5209838	54	True				
ANR	5209906	IdentifierDecl	copy		5209838	0					
ANR	5209907	IdentifierDeclType	sopno		5209838	0					
ANR	5209908	Identifier	copy		5209838	1					
ANR	5209909	IfStatement	if ( p -> error != 0 )		5209838	55					
ANR	5209910	Condition	p -> error != 0	1142:5:26569:26581	5209838	0	True				
ANR	5209911	EqualityExpression	p -> error != 0		5209838	0		!=			
ANR	5209912	PtrMemberAccess	p -> error		5209838	0					
ANR	5209913	Identifier	p		5209838	0					
ANR	5209914	Identifier	error		5209838	1					
ANR	5209915	PrimaryExpression	0		5209838	1					
ANR	5209916	CompoundStatement		9:20:186:186	5209838	1					
ANR	5209917	ReturnStatement	return ;	1143:2:26630:26636	5209838	0	True				
ANR	5209918	IfStatement	if ( from > to )		5209838	56					
ANR	5209919	Condition	from > to	1146:5:26647:26655	5209838	0	True				
ANR	5209920	RelationalExpression	from > to		5209838	0		>			
ANR	5209921	Identifier	from		5209838	0					
ANR	5209922	Identifier	to		5209838	1					
ANR	5209923	CompoundStatement		13:16:260:260	5209838	1					
ANR	5209924	ReturnStatement	return ;	1147:2:26662:26668	5209838	0	True				
ANR	5209925	SwitchStatement	"switch ( REP ( MAP ( from ) , MAP ( to ) ) )"		5209838	57					
ANR	5209926	Condition	"REP ( MAP ( from ) , MAP ( to ) )"	1150:9:26683:26705	5209838	0	True				
ANR	5209927	CallExpression	"REP ( MAP ( from ) , MAP ( to ) )"		5209838	0					
ANR	5209928	Callee	REP		5209838	0					
ANR	5209929	Identifier	REP		5209838	0					
ANR	5209930	ArgumentList	MAP ( from )		5209838	1					
ANR	5209931	Argument	MAP ( from )		5209838	0					
ANR	5209932	CallExpression	MAP ( from )		5209838	0					
ANR	5209933	Callee	MAP		5209838	0					
ANR	5209934	Identifier	MAP		5209838	0					
ANR	5209935	ArgumentList	from		5209838	1					
ANR	5209936	Argument	from		5209838	0					
ANR	5209937	Identifier	from		5209838	0					
ANR	5209938	Argument	MAP ( to )		5209838	1					
ANR	5209939	CallExpression	MAP ( to )		5209838	0					
ANR	5209940	Callee	MAP		5209838	0					
ANR	5209941	Identifier	MAP		5209838	0					
ANR	5209942	ArgumentList	to		5209838	1					
ANR	5209943	Argument	to		5209838	0					
ANR	5209944	Identifier	to		5209838	0					
ANR	5209945	CompoundStatement		17:34:310:310	5209838	1					
ANR	5209946	Statement	case	1151:1:26711:26714	5209838	0	True				
ANR	5209947	Statement	REP	1151:6:26716:26718	5209838	1	True				
ANR	5209948	Statement	(	1151:9:26719:26719	5209838	2	True				
ANR	5209949	Statement	0	1151:10:26720:26720	5209838	3	True				
ANR	5209950	Statement	","	1151:11:26721:26721	5209838	4	True				
ANR	5209951	Statement	0	1151:13:26723:26723	5209838	5	True				
ANR	5209952	Statement	)	1151:14:26724:26724	5209838	6	True				
ANR	5209953	Statement	:	1151:15:26725:26725	5209838	7	True				
ANR	5209954	ExpressionStatement	DROP ( finish - start )	1152:2:26761:26779	5209838	8	True				
ANR	5209955	CallExpression	DROP ( finish - start )		5209838	0					
ANR	5209956	Callee	DROP		5209838	0					
ANR	5209957	Identifier	DROP		5209838	0					
ANR	5209958	ArgumentList	finish - start		5209838	1					
ANR	5209959	Argument	finish - start		5209838	0					
ANR	5209960	AdditiveExpression	finish - start		5209838	0		-			
ANR	5209961	Identifier	finish		5209838	0					
ANR	5209962	Identifier	start		5209838	1					
ANR	5209963	BreakStatement	break ;	1153:2:26806:26811	5209838	9	True				
ANR	5209964	Statement	case	1154:1:26814:26817	5209838	10	True				
ANR	5209965	Statement	REP	1154:6:26819:26821	5209838	11	True				
ANR	5209966	Statement	(	1154:9:26822:26822	5209838	12	True				
ANR	5209967	Statement	0	1154:10:26823:26823	5209838	13	True				
ANR	5209968	Statement	","	1154:11:26824:26824	5209838	14	True				
ANR	5209969	Statement	1	1154:13:26826:26826	5209838	15	True				
ANR	5209970	Statement	)	1154:14:26827:26827	5209838	16	True				
ANR	5209971	Statement	:	1154:15:26828:26828	5209838	17	True				
ANR	5209972	Statement	case	1155:1:26850:26853	5209838	18	True				
ANR	5209973	Statement	REP	1155:6:26855:26857	5209838	19	True				
ANR	5209974	Statement	(	1155:9:26858:26858	5209838	20	True				
ANR	5209975	Statement	0	1155:10:26859:26859	5209838	21	True				
ANR	5209976	Statement	","	1155:11:26860:26860	5209838	22	True				
ANR	5209977	Statement	N	1155:13:26862:26862	5209838	23	True				
ANR	5209978	Statement	)	1155:14:26863:26863	5209838	24	True				
ANR	5209979	Statement	:	1155:15:26864:26864	5209838	25	True				
ANR	5209980	Statement	case	1156:1:26886:26889	5209838	26	True				
ANR	5209981	Statement	REP	1156:6:26891:26893	5209838	27	True				
ANR	5209982	Statement	(	1156:9:26894:26894	5209838	28	True				
ANR	5209983	Statement	0	1156:10:26895:26895	5209838	29	True				
ANR	5209984	Statement	","	1156:11:26896:26896	5209838	30	True				
ANR	5209985	Statement	INF	1156:13:26898:26900	5209838	31	True				
ANR	5209986	Statement	)	1156:16:26901:26901	5209838	32	True				
ANR	5209987	Statement	:	1156:17:26902:26902	5209838	33	True				
ANR	5209988	ExpressionStatement	"INSERT ( OCH_ , start )"	1158:2:26983:27002	5209838	34	True				
ANR	5209989	CallExpression	"INSERT ( OCH_ , start )"		5209838	0					
ANR	5209990	Callee	INSERT		5209838	0					
ANR	5209991	Identifier	INSERT		5209838	0					
ANR	5209992	ArgumentList	OCH_		5209838	1					
ANR	5209993	Argument	OCH_		5209838	0					
ANR	5209994	Identifier	OCH_		5209838	0					
ANR	5209995	Argument	start		5209838	1					
ANR	5209996	Identifier	start		5209838	0					
ANR	5209997	ExpressionStatement	"repeat ( p , start + 1 , 1 , to )"	1159:2:27032:27057	5209838	35	True				
ANR	5209998	CallExpression	"repeat ( p , start + 1 , 1 , to )"		5209838	0					
ANR	5209999	Callee	repeat		5209838	0					
ANR	5210000	Identifier	repeat		5209838	0					
ANR	5210001	ArgumentList	p		5209838	1					
ANR	5210002	Argument	p		5209838	0					
ANR	5210003	Identifier	p		5209838	0					
ANR	5210004	Argument	start + 1		5209838	1					
ANR	5210005	AdditiveExpression	start + 1		5209838	0		+			
ANR	5210006	Identifier	start		5209838	0					
ANR	5210007	PrimaryExpression	1		5209838	1					
ANR	5210008	Argument	1		5209838	2					
ANR	5210009	PrimaryExpression	1		5209838	0					
ANR	5210010	Argument	to		5209838	3					
ANR	5210011	Identifier	to		5209838	0					
ANR	5210012	ExpressionStatement	"ASTERN ( OOR1 , start )"	1160:2:27061:27080	5209838	36	True				
ANR	5210013	CallExpression	"ASTERN ( OOR1 , start )"		5209838	0					
ANR	5210014	Callee	ASTERN		5209838	0					
ANR	5210015	Identifier	ASTERN		5209838	0					
ANR	5210016	ArgumentList	OOR1		5209838	1					
ANR	5210017	Argument	OOR1		5209838	0					
ANR	5210018	Identifier	OOR1		5209838	0					
ANR	5210019	Argument	start		5209838	1					
ANR	5210020	Identifier	start		5209838	0					
ANR	5210021	ExpressionStatement	AHEAD ( start )	1161:2:27084:27096	5209838	37	True				
ANR	5210022	CallExpression	AHEAD ( start )		5209838	0					
ANR	5210023	Callee	AHEAD		5209838	0					
ANR	5210024	Identifier	AHEAD		5209838	0					
ANR	5210025	ArgumentList	start		5209838	1					
ANR	5210026	Argument	start		5209838	0					
ANR	5210027	Identifier	start		5209838	0					
ANR	5210028	ExpressionStatement	"EMIT ( OOR2 , 0 )"	1162:2:27119:27132	5209838	38	True				
ANR	5210029	CallExpression	"EMIT ( OOR2 , 0 )"		5209838	0					
ANR	5210030	Callee	EMIT		5209838	0					
ANR	5210031	Identifier	EMIT		5209838	0					
ANR	5210032	ArgumentList	OOR2		5209838	1					
ANR	5210033	Argument	OOR2		5209838	0					
ANR	5210034	Identifier	OOR2		5209838	0					
ANR	5210035	Argument	0		5209838	1					
ANR	5210036	PrimaryExpression	0		5209838	0					
ANR	5210037	ExpressionStatement	AHEAD ( THERE ( ) )	1163:2:27136:27150	5209838	39	True				
ANR	5210038	CallExpression	AHEAD ( THERE ( ) )		5209838	0					
ANR	5210039	Callee	AHEAD		5209838	0					
ANR	5210040	Identifier	AHEAD		5209838	0					
ANR	5210041	ArgumentList	THERE ( )		5209838	1					
ANR	5210042	Argument	THERE ( )		5209838	0					
ANR	5210043	CallExpression	THERE ( )		5209838	0					
ANR	5210044	Callee	THERE		5209838	0					
ANR	5210045	Identifier	THERE		5209838	0					
ANR	5210046	ArgumentList			5209838	1					
ANR	5210047	ExpressionStatement	"ASTERN ( O_CH , THERETHERE ( ) )"	1164:2:27154:27180	5209838	40	True				
ANR	5210048	CallExpression	"ASTERN ( O_CH , THERETHERE ( ) )"		5209838	0					
ANR	5210049	Callee	ASTERN		5209838	0					
ANR	5210050	Identifier	ASTERN		5209838	0					
ANR	5210051	ArgumentList	O_CH		5209838	1					
ANR	5210052	Argument	O_CH		5209838	0					
ANR	5210053	Identifier	O_CH		5209838	0					
ANR	5210054	Argument	THERETHERE ( )		5209838	1					
ANR	5210055	CallExpression	THERETHERE ( )		5209838	0					
ANR	5210056	Callee	THERETHERE		5209838	0					
ANR	5210057	Identifier	THERETHERE		5209838	0					
ANR	5210058	ArgumentList			5209838	1					
ANR	5210059	BreakStatement	break ;	1165:2:27184:27189	5209838	41	True				
ANR	5210060	Statement	case	1166:1:27192:27195	5209838	42	True				
ANR	5210061	Statement	REP	1166:6:27197:27199	5209838	43	True				
ANR	5210062	Statement	(	1166:9:27200:27200	5209838	44	True				
ANR	5210063	Statement	1	1166:10:27201:27201	5209838	45	True				
ANR	5210064	Statement	","	1166:11:27202:27202	5209838	46	True				
ANR	5210065	Statement	1	1166:13:27204:27204	5209838	47	True				
ANR	5210066	Statement	)	1166:14:27205:27205	5209838	48	True				
ANR	5210067	Statement	:	1166:15:27206:27206	5209838	49	True				
ANR	5210068	BreakStatement	break ;	1168:2:27244:27249	5209838	50	True				
ANR	5210069	Statement	case	1169:1:27252:27255	5209838	51	True				
ANR	5210070	Statement	REP	1169:6:27257:27259	5209838	52	True				
ANR	5210071	Statement	(	1169:9:27260:27260	5209838	53	True				
ANR	5210072	Statement	1	1169:10:27261:27261	5209838	54	True				
ANR	5210073	Statement	","	1169:11:27262:27262	5209838	55	True				
ANR	5210074	Statement	N	1169:13:27264:27264	5209838	56	True				
ANR	5210075	Statement	)	1169:14:27265:27265	5209838	57	True				
ANR	5210076	Statement	:	1169:15:27266:27266	5209838	58	True				
ANR	5210077	ExpressionStatement	"INSERT ( OCH_ , start )"	1171:2:27352:27371	5209838	59	True				
ANR	5210078	CallExpression	"INSERT ( OCH_ , start )"		5209838	0					
ANR	5210079	Callee	INSERT		5209838	0					
ANR	5210080	Identifier	INSERT		5209838	0					
ANR	5210081	ArgumentList	OCH_		5209838	1					
ANR	5210082	Argument	OCH_		5209838	0					
ANR	5210083	Identifier	OCH_		5209838	0					
ANR	5210084	Argument	start		5209838	1					
ANR	5210085	Identifier	start		5209838	0					
ANR	5210086	ExpressionStatement	"ASTERN ( OOR1 , start )"	1172:2:27375:27394	5209838	60	True				
ANR	5210087	CallExpression	"ASTERN ( OOR1 , start )"		5209838	0					
ANR	5210088	Callee	ASTERN		5209838	0					
ANR	5210089	Identifier	ASTERN		5209838	0					
ANR	5210090	ArgumentList	OOR1		5209838	1					
ANR	5210091	Argument	OOR1		5209838	0					
ANR	5210092	Identifier	OOR1		5209838	0					
ANR	5210093	Argument	start		5209838	1					
ANR	5210094	Identifier	start		5209838	0					
ANR	5210095	ExpressionStatement	AHEAD ( start )	1173:2:27398:27410	5209838	61	True				
ANR	5210096	CallExpression	AHEAD ( start )		5209838	0					
ANR	5210097	Callee	AHEAD		5209838	0					
ANR	5210098	Identifier	AHEAD		5209838	0					
ANR	5210099	ArgumentList	start		5209838	1					
ANR	5210100	Argument	start		5209838	0					
ANR	5210101	Identifier	start		5209838	0					
ANR	5210102	ExpressionStatement	"EMIT ( OOR2 , 0 )"	1174:2:27414:27427	5209838	62	True				
ANR	5210103	CallExpression	"EMIT ( OOR2 , 0 )"		5209838	0					
ANR	5210104	Callee	EMIT		5209838	0					
ANR	5210105	Identifier	EMIT		5209838	0					
ANR	5210106	ArgumentList	OOR2		5209838	1					
ANR	5210107	Argument	OOR2		5209838	0					
ANR	5210108	Identifier	OOR2		5209838	0					
ANR	5210109	Argument	0		5209838	1					
ANR	5210110	PrimaryExpression	0		5209838	0					
ANR	5210111	ExpressionStatement	AHEAD ( THERE ( ) )	1175:2:27460:27474	5209838	63	True				
ANR	5210112	CallExpression	AHEAD ( THERE ( ) )		5209838	0					
ANR	5210113	Callee	AHEAD		5209838	0					
ANR	5210114	Identifier	AHEAD		5209838	0					
ANR	5210115	ArgumentList	THERE ( )		5209838	1					
ANR	5210116	Argument	THERE ( )		5209838	0					
ANR	5210117	CallExpression	THERE ( )		5209838	0					
ANR	5210118	Callee	THERE		5209838	0					
ANR	5210119	Identifier	THERE		5209838	0					
ANR	5210120	ArgumentList			5209838	1					
ANR	5210121	ExpressionStatement	"ASTERN ( O_CH , THERETHERE ( ) )"	1176:2:27499:27525	5209838	64	True				
ANR	5210122	CallExpression	"ASTERN ( O_CH , THERETHERE ( ) )"		5209838	0					
ANR	5210123	Callee	ASTERN		5209838	0					
ANR	5210124	Identifier	ASTERN		5209838	0					
ANR	5210125	ArgumentList	O_CH		5209838	1					
ANR	5210126	Argument	O_CH		5209838	0					
ANR	5210127	Identifier	O_CH		5209838	0					
ANR	5210128	Argument	THERETHERE ( )		5209838	1					
ANR	5210129	CallExpression	THERETHERE ( )		5209838	0					
ANR	5210130	Callee	THERETHERE		5209838	0					
ANR	5210131	Identifier	THERETHERE		5209838	0					
ANR	5210132	ArgumentList			5209838	1					
ANR	5210133	ExpressionStatement	"copy = dupl ( p , start + 1 , finish + 1 )"	1177:2:27529:27562	5209838	65	True				
ANR	5210134	AssignmentExpression	"copy = dupl ( p , start + 1 , finish + 1 )"		5209838	0		=			
ANR	5210135	Identifier	copy		5209838	0					
ANR	5210136	CallExpression	"dupl ( p , start + 1 , finish + 1 )"		5209838	1					
ANR	5210137	Callee	dupl		5209838	0					
ANR	5210138	Identifier	dupl		5209838	0					
ANR	5210139	ArgumentList	p		5209838	1					
ANR	5210140	Argument	p		5209838	0					
ANR	5210141	Identifier	p		5209838	0					
ANR	5210142	Argument	start + 1		5209838	1					
ANR	5210143	AdditiveExpression	start + 1		5209838	0		+			
ANR	5210144	Identifier	start		5209838	0					
ANR	5210145	PrimaryExpression	1		5209838	1					
ANR	5210146	Argument	finish + 1		5209838	2					
ANR	5210147	AdditiveExpression	finish + 1		5209838	0		+			
ANR	5210148	Identifier	finish		5209838	0					
ANR	5210149	PrimaryExpression	1		5209838	1					
ANR	5210150	IfStatement	if ( copy == finish + 4 )		5209838	66					
ANR	5210151	Condition	copy == finish + 4	1178:6:27570:27585	5209838	0	True				
ANR	5210152	EqualityExpression	copy == finish + 4		5209838	0		==			
ANR	5210153	Identifier	copy		5209838	0					
ANR	5210154	AdditiveExpression	finish + 4		5209838	1		+			
ANR	5210155	Identifier	finish		5209838	0					
ANR	5210156	PrimaryExpression	4		5209838	1					
ANR	5210157	CompoundStatement		45:24:1190:1190	5209838	1					
ANR	5210158	ExpressionStatement	"repeat ( p , copy , 1 , to - 1 )"	1179:3:27593:27617	5209838	0	True				
ANR	5210159	CallExpression	"repeat ( p , copy , 1 , to - 1 )"		5209838	0					
ANR	5210160	Callee	repeat		5209838	0					
ANR	5210161	Identifier	repeat		5209838	0					
ANR	5210162	ArgumentList	p		5209838	1					
ANR	5210163	Argument	p		5209838	0					
ANR	5210164	Identifier	p		5209838	0					
ANR	5210165	Argument	copy		5209838	1					
ANR	5210166	Identifier	copy		5209838	0					
ANR	5210167	Argument	1		5209838	2					
ANR	5210168	PrimaryExpression	1		5209838	0					
ANR	5210169	Argument	to - 1		5209838	3					
ANR	5210170	AdditiveExpression	to - 1		5209838	0		-			
ANR	5210171	Identifier	to		5209838	0					
ANR	5210172	PrimaryExpression	1		5209838	1					
ANR	5210173	BreakStatement	break ;	1181:2:27625:27630	5209838	67	True				
ANR	5210174	Statement	case	1182:1:27633:27636	5209838	68	True				
ANR	5210175	Statement	REP	1182:6:27638:27640	5209838	69	True				
ANR	5210176	Statement	(	1182:9:27641:27641	5209838	70	True				
ANR	5210177	Statement	1	1182:10:27642:27642	5209838	71	True				
ANR	5210178	Statement	","	1182:11:27643:27643	5209838	72	True				
ANR	5210179	Statement	INF	1182:13:27645:27647	5209838	73	True				
ANR	5210180	Statement	)	1182:16:27648:27648	5209838	74	True				
ANR	5210181	Statement	:	1182:17:27649:27649	5209838	75	True				
ANR	5210182	ExpressionStatement	"INSERT ( OPLUS_ , start )"	1183:2:27666:27687	5209838	76	True				
ANR	5210183	CallExpression	"INSERT ( OPLUS_ , start )"		5209838	0					
ANR	5210184	Callee	INSERT		5209838	0					
ANR	5210185	Identifier	INSERT		5209838	0					
ANR	5210186	ArgumentList	OPLUS_		5209838	1					
ANR	5210187	Argument	OPLUS_		5209838	0					
ANR	5210188	Identifier	OPLUS_		5209838	0					
ANR	5210189	Argument	start		5209838	1					
ANR	5210190	Identifier	start		5209838	0					
ANR	5210191	ExpressionStatement	"ASTERN ( O_PLUS , start )"	1184:2:27691:27712	5209838	77	True				
ANR	5210192	CallExpression	"ASTERN ( O_PLUS , start )"		5209838	0					
ANR	5210193	Callee	ASTERN		5209838	0					
ANR	5210194	Identifier	ASTERN		5209838	0					
ANR	5210195	ArgumentList	O_PLUS		5209838	1					
ANR	5210196	Argument	O_PLUS		5209838	0					
ANR	5210197	Identifier	O_PLUS		5209838	0					
ANR	5210198	Argument	start		5209838	1					
ANR	5210199	Identifier	start		5209838	0					
ANR	5210200	BreakStatement	break ;	1185:2:27716:27721	5209838	78	True				
ANR	5210201	Statement	case	1186:1:27724:27727	5209838	79	True				
ANR	5210202	Statement	REP	1186:6:27729:27731	5209838	80	True				
ANR	5210203	Statement	(	1186:9:27732:27732	5209838	81	True				
ANR	5210204	Statement	N	1186:10:27733:27733	5209838	82	True				
ANR	5210205	Statement	","	1186:11:27734:27734	5209838	83	True				
ANR	5210206	Statement	N	1186:13:27736:27736	5209838	84	True				
ANR	5210207	Statement	)	1186:14:27737:27737	5209838	85	True				
ANR	5210208	Statement	:	1186:15:27738:27738	5209838	86	True				
ANR	5210209	ExpressionStatement	"copy = dupl ( p , start , finish )"	1187:2:27765:27794	5209838	87	True				
ANR	5210210	AssignmentExpression	"copy = dupl ( p , start , finish )"		5209838	0		=			
ANR	5210211	Identifier	copy		5209838	0					
ANR	5210212	CallExpression	"dupl ( p , start , finish )"		5209838	1					
ANR	5210213	Callee	dupl		5209838	0					
ANR	5210214	Identifier	dupl		5209838	0					
ANR	5210215	ArgumentList	p		5209838	1					
ANR	5210216	Argument	p		5209838	0					
ANR	5210217	Identifier	p		5209838	0					
ANR	5210218	Argument	start		5209838	1					
ANR	5210219	Identifier	start		5209838	0					
ANR	5210220	Argument	finish		5209838	2					
ANR	5210221	Identifier	finish		5209838	0					
ANR	5210222	ExpressionStatement	"repeat ( p , copy , from - 1 , to - 1 )"	1188:2:27798:27827	5209838	88	True				
ANR	5210223	CallExpression	"repeat ( p , copy , from - 1 , to - 1 )"		5209838	0					
ANR	5210224	Callee	repeat		5209838	0					
ANR	5210225	Identifier	repeat		5209838	0					
ANR	5210226	ArgumentList	p		5209838	1					
ANR	5210227	Argument	p		5209838	0					
ANR	5210228	Identifier	p		5209838	0					
ANR	5210229	Argument	copy		5209838	1					
ANR	5210230	Identifier	copy		5209838	0					
ANR	5210231	Argument	from - 1		5209838	2					
ANR	5210232	AdditiveExpression	from - 1		5209838	0		-			
ANR	5210233	Identifier	from		5209838	0					
ANR	5210234	PrimaryExpression	1		5209838	1					
ANR	5210235	Argument	to - 1		5209838	3					
ANR	5210236	AdditiveExpression	to - 1		5209838	0		-			
ANR	5210237	Identifier	to		5209838	0					
ANR	5210238	PrimaryExpression	1		5209838	1					
ANR	5210239	BreakStatement	break ;	1189:2:27831:27836	5209838	89	True				
ANR	5210240	Statement	case	1190:1:27839:27842	5209838	90	True				
ANR	5210241	Statement	REP	1190:6:27844:27846	5209838	91	True				
ANR	5210242	Statement	(	1190:9:27847:27847	5209838	92	True				
ANR	5210243	Statement	N	1190:10:27848:27848	5209838	93	True				
ANR	5210244	Statement	","	1190:11:27849:27849	5209838	94	True				
ANR	5210245	Statement	INF	1190:13:27851:27853	5209838	95	True				
ANR	5210246	Statement	)	1190:16:27854:27854	5209838	96	True				
ANR	5210247	Statement	:	1190:17:27855:27855	5209838	97	True				
ANR	5210248	ExpressionStatement	"copy = dupl ( p , start , finish )"	1191:2:27881:27910	5209838	98	True				
ANR	5210249	AssignmentExpression	"copy = dupl ( p , start , finish )"		5209838	0		=			
ANR	5210250	Identifier	copy		5209838	0					
ANR	5210251	CallExpression	"dupl ( p , start , finish )"		5209838	1					
ANR	5210252	Callee	dupl		5209838	0					
ANR	5210253	Identifier	dupl		5209838	0					
ANR	5210254	ArgumentList	p		5209838	1					
ANR	5210255	Argument	p		5209838	0					
ANR	5210256	Identifier	p		5209838	0					
ANR	5210257	Argument	start		5209838	1					
ANR	5210258	Identifier	start		5209838	0					
ANR	5210259	Argument	finish		5209838	2					
ANR	5210260	Identifier	finish		5209838	0					
ANR	5210261	ExpressionStatement	"repeat ( p , copy , from - 1 , to )"	1192:2:27914:27941	5209838	99	True				
ANR	5210262	CallExpression	"repeat ( p , copy , from - 1 , to )"		5209838	0					
ANR	5210263	Callee	repeat		5209838	0					
ANR	5210264	Identifier	repeat		5209838	0					
ANR	5210265	ArgumentList	p		5209838	1					
ANR	5210266	Argument	p		5209838	0					
ANR	5210267	Identifier	p		5209838	0					
ANR	5210268	Argument	copy		5209838	1					
ANR	5210269	Identifier	copy		5209838	0					
ANR	5210270	Argument	from - 1		5209838	2					
ANR	5210271	AdditiveExpression	from - 1		5209838	0		-			
ANR	5210272	Identifier	from		5209838	0					
ANR	5210273	PrimaryExpression	1		5209838	1					
ANR	5210274	Argument	to		5209838	3					
ANR	5210275	Identifier	to		5209838	0					
ANR	5210276	BreakStatement	break ;	1193:2:27945:27950	5209838	100	True				
ANR	5210277	Label	default :	1194:1:27953:27960	5209838	101	True				
ANR	5210278	Identifier	default		5209838	0					
ANR	5210279	ExpressionStatement	SETERROR ( R_REGEX_ASSERT )	1195:2:27987:28011	5209838	102	True				
ANR	5210280	CallExpression	SETERROR ( R_REGEX_ASSERT )		5209838	0					
ANR	5210281	Callee	SETERROR		5209838	0					
ANR	5210282	Identifier	SETERROR		5209838	0					
ANR	5210283	ArgumentList	R_REGEX_ASSERT		5209838	1					
ANR	5210284	Argument	R_REGEX_ASSERT		5209838	0					
ANR	5210285	Identifier	R_REGEX_ASSERT		5209838	0					
ANR	5210286	BreakStatement	break ;	1196:2:28034:28039	5209838	103	True				
ANR	5210287	ReturnType	static void		5209838	1					
ANR	5210288	Identifier	repeat		5209838	2					
ANR	5210289	ParameterList	"struct parse * p , sopno start , int from , int to"		5209838	3					
ANR	5210290	Parameter	struct parse * p	1130:7:26212:26226	5209838	0	True				
ANR	5210291	ParameterType	struct parse *		5209838	0					
ANR	5210292	Identifier	p		5209838	1					
ANR	5210293	Parameter	sopno start	1131:4:26233:26243	5209838	1	True				
ANR	5210294	ParameterType	sopno		5209838	0					
ANR	5210295	Identifier	start		5209838	1					
ANR	5210296	Parameter	int from	1132:4:26291:26298	5209838	2	True				
ANR	5210297	ParameterType	int		5209838	0					
ANR	5210298	Identifier	from		5209838	1					
ANR	5210299	Parameter	int to	1133:4:26339:26344	5209838	3	True				
ANR	5210300	ParameterType	int		5209838	0					
ANR	5210301	Identifier	to		5209838	1					
ANR	5210302	CFGEntryNode	ENTRY		5209838		True				
ANR	5210303	CFGExitNode	EXIT		5209838		True				
ANR	5210304	Symbol	dupl		5209838						
ANR	5210305	Symbol	OOR2		5209838						
ANR	5210306	Symbol	THERE		5209838						
ANR	5210307	Symbol	O_PLUS		5209838						
ANR	5210308	Symbol	start		5209838						
ANR	5210309	Symbol	THERETHERE		5209838						
ANR	5210310	Symbol	R_REGEX_ASSERT		5209838						
ANR	5210311	Symbol	OPLUS_		5209838						
ANR	5210312	Symbol	p -> error		5209838						
ANR	5210313	Symbol	OCH_		5209838						
ANR	5210314	Symbol	p		5209838						
ANR	5210315	Symbol	O_CH		5209838						
ANR	5210316	Symbol	HERE		5209838						
ANR	5210317	Symbol	from		5209838						
ANR	5210318	Symbol	finish		5209838						
ANR	5210319	Symbol	* p		5209838						
ANR	5210320	Symbol	OOR1		5209838						
ANR	5210321	Symbol	to		5209838						
ANR	5210322	Symbol	copy		5209838						
ANR	5210323	Symbol	REP		5209838						
ANR	5210324	Symbol	MAP		5209838						
ANR	5210325	Function	seterr	1203:0:28089:28380							
ANR	5210326	FunctionDef	"seterr (struct parse * p , int e)"		5210325	0					
ANR	5210327	CompoundStatement		1205:0:28177:28380	5210325	0					
ANR	5210328	IfStatement	if ( p -> error == 0 )		5210325	0					
ANR	5210329	Condition	p -> error == 0	1206:5:28184:28196	5210325	0	True				
ANR	5210330	EqualityExpression	p -> error == 0		5210325	0		==			
ANR	5210331	PtrMemberAccess	p -> error		5210325	0					
ANR	5210332	Identifier	p		5210325	0					
ANR	5210333	Identifier	error		5210325	1					
ANR	5210334	PrimaryExpression	0		5210325	1					
ANR	5210335	CompoundStatement		2:20:21:21	5210325	1					
ANR	5210336	ExpressionStatement	p -> error = e	1207:2:28239:28251	5210325	0	True				
ANR	5210337	AssignmentExpression	p -> error = e		5210325	0		=			
ANR	5210338	PtrMemberAccess	p -> error		5210325	0					
ANR	5210339	Identifier	p		5210325	0					
ANR	5210340	Identifier	error		5210325	1					
ANR	5210341	Identifier	e		5210325	1					
ANR	5210342	ExpressionStatement	p -> next = nuls	1209:1:28257:28271	5210325	1	True				
ANR	5210343	AssignmentExpression	p -> next = nuls		5210325	0		=			
ANR	5210344	PtrMemberAccess	p -> next		5210325	0					
ANR	5210345	Identifier	p		5210325	0					
ANR	5210346	Identifier	next		5210325	1					
ANR	5210347	Identifier	nuls		5210325	1					
ANR	5210348	ExpressionStatement	p -> end = nuls	1210:1:28311:28324	5210325	2	True				
ANR	5210349	AssignmentExpression	p -> end = nuls		5210325	0		=			
ANR	5210350	PtrMemberAccess	p -> end		5210325	0					
ANR	5210351	Identifier	p		5210325	0					
ANR	5210352	Identifier	end		5210325	1					
ANR	5210353	Identifier	nuls		5210325	1					
ANR	5210354	ReturnStatement	return ( 0 ) ;	1211:1:28327:28336	5210325	3	True				
ANR	5210355	PrimaryExpression	0		5210325	0					
ANR	5210356	ReturnType	static int		5210325	1					
ANR	5210357	Identifier	seterr		5210325	2					
ANR	5210358	ParameterList	"struct parse * p , int e"		5210325	3					
ANR	5210359	Parameter	struct parse * p	1204:7:28153:28167	5210325	0	True				
ANR	5210360	ParameterType	struct parse *		5210325	0					
ANR	5210361	Identifier	p		5210325	1					
ANR	5210362	Parameter	int e	1204:24:28170:28174	5210325	1	True				
ANR	5210363	ParameterType	int		5210325	0					
ANR	5210364	Identifier	e		5210325	1					
ANR	5210365	CFGEntryNode	ENTRY		5210325		True				
ANR	5210366	CFGExitNode	EXIT		5210325		True				
ANR	5210367	Symbol	p		5210325						
ANR	5210368	Symbol	p -> end		5210325						
ANR	5210369	Symbol	p -> next		5210325						
ANR	5210370	Symbol	e		5210325						
ANR	5210371	Symbol	* p		5210325						
ANR	5210372	Symbol	nuls		5210325						
ANR	5210373	Symbol	p -> error		5210325						
ANR	5210374	Function	allocset	1217:0:28440:29587							
ANR	5210375	FunctionDef	allocset (struct parse * p)		5210374	0					
ANR	5210376	CompoundStatement		1217:40:28480:29587	5210374	0					
ANR	5210377	IdentifierDeclStatement	int no = p -> g -> ncsets ++ ;	1218:1:28483:28506	5210374	0	True				
ANR	5210378	IdentifierDecl	no = p -> g -> ncsets ++		5210374	0					
ANR	5210379	IdentifierDeclType	int		5210374	0					
ANR	5210380	Identifier	no		5210374	1					
ANR	5210381	AssignmentExpression	no = p -> g -> ncsets ++		5210374	2		=			
ANR	5210382	Identifier	no		5210374	0					
ANR	5210383	PostIncDecOperationExpression	p -> g -> ncsets ++		5210374	1					
ANR	5210384	PtrMemberAccess	p -> g -> ncsets		5210374	0					
ANR	5210385	PtrMemberAccess	p -> g		5210374	0					
ANR	5210386	Identifier	p		5210374	0					
ANR	5210387	Identifier	g		5210374	1					
ANR	5210388	Identifier	ncsets		5210374	1					
ANR	5210389	IncDec	++		5210374	1					
ANR	5210390	IdentifierDeclStatement	size_t nc ;	1219:1:28509:28518	5210374	1	True				
ANR	5210391	IdentifierDecl	nc		5210374	0					
ANR	5210392	IdentifierDeclType	size_t		5210374	0					
ANR	5210393	Identifier	nc		5210374	1					
ANR	5210394	IdentifierDeclStatement	size_t nbytes ;	1220:1:28521:28534	5210374	2	True				
ANR	5210395	IdentifierDecl	nbytes		5210374	0					
ANR	5210396	IdentifierDeclType	size_t		5210374	0					
ANR	5210397	Identifier	nbytes		5210374	1					
ANR	5210398	IdentifierDeclStatement	cset * cs ;	1221:1:28537:28545	5210374	3	True				
ANR	5210399	IdentifierDecl	* cs		5210374	0					
ANR	5210400	IdentifierDeclType	cset *		5210374	0					
ANR	5210401	Identifier	cs		5210374	1					
ANR	5210402	IdentifierDeclStatement	size_t css = ( size_t ) p -> g -> csetsize ;	1222:1:28548:28583	5210374	4	True				
ANR	5210403	IdentifierDecl	css = ( size_t ) p -> g -> csetsize		5210374	0					
ANR	5210404	IdentifierDeclType	size_t		5210374	0					
ANR	5210405	Identifier	css		5210374	1					
ANR	5210406	AssignmentExpression	css = ( size_t ) p -> g -> csetsize		5210374	2		=			
ANR	5210407	Identifier	css		5210374	0					
ANR	5210408	CastExpression	( size_t ) p -> g -> csetsize		5210374	1					
ANR	5210409	CastTarget	size_t		5210374	0					
ANR	5210410	PtrMemberAccess	p -> g -> csetsize		5210374	1					
ANR	5210411	PtrMemberAccess	p -> g		5210374	0					
ANR	5210412	Identifier	p		5210374	0					
ANR	5210413	Identifier	g		5210374	1					
ANR	5210414	Identifier	csetsize		5210374	1					
ANR	5210415	IdentifierDeclStatement	int i ;	1223:1:28586:28591	5210374	5	True				
ANR	5210416	IdentifierDecl	i		5210374	0					
ANR	5210417	IdentifierDeclType	int		5210374	0					
ANR	5210418	Identifier	i		5210374	1					
ANR	5210419	IfStatement	if ( no >= p -> ncsalloc )		5210374	6					
ANR	5210420	Condition	no >= p -> ncsalloc	1225:5:28599:28615	5210374	0	True				
ANR	5210421	RelationalExpression	no >= p -> ncsalloc		5210374	0		>=			
ANR	5210422	Identifier	no		5210374	0					
ANR	5210423	PtrMemberAccess	p -> ncsalloc		5210374	1					
ANR	5210424	Identifier	p		5210374	0					
ANR	5210425	Identifier	ncsalloc		5210374	1					
ANR	5210426	CompoundStatement		10:2:176:185	5210374	1					
ANR	5210427	IdentifierDeclStatement	void * ptr ;	1226:2:28657:28666	5210374	0	True				
ANR	5210428	IdentifierDecl	* ptr		5210374	0					
ANR	5210429	IdentifierDeclType	void *		5210374	0					
ANR	5210430	Identifier	ptr		5210374	1					
ANR	5210431	ExpressionStatement	p -> ncsalloc += CHAR_BIT	1228:2:28671:28694	5210374	1	True				
ANR	5210432	AssignmentExpression	p -> ncsalloc += CHAR_BIT		5210374	0		+=			
ANR	5210433	PtrMemberAccess	p -> ncsalloc		5210374	0					
ANR	5210434	Identifier	p		5210374	0					
ANR	5210435	Identifier	ncsalloc		5210374	1					
ANR	5210436	Identifier	CHAR_BIT		5210374	1					
ANR	5210437	ExpressionStatement	nc = p -> ncsalloc	1229:2:28698:28714	5210374	2	True				
ANR	5210438	AssignmentExpression	nc = p -> ncsalloc		5210374	0		=			
ANR	5210439	Identifier	nc		5210374	0					
ANR	5210440	PtrMemberAccess	p -> ncsalloc		5210374	1					
ANR	5210441	Identifier	p		5210374	0					
ANR	5210442	Identifier	ncsalloc		5210374	1					
ANR	5210443	IfStatement	if ( nc % CHAR_BIT )		5210374	3					
ANR	5210444	Condition	nc % CHAR_BIT	1230:6:28722:28734	5210374	0	True				
ANR	5210445	MultiplicativeExpression	nc % CHAR_BIT		5210374	0		%			
ANR	5210446	Identifier	nc		5210374	0					
ANR	5210447	Identifier	CHAR_BIT		5210374	1					
ANR	5210448	CompoundStatement		14:21:256:256	5210374	1					
ANR	5210449	GotoStatement	goto nomem ;	1231:3:28742:28752	5210374	0	True				
ANR	5210450	Identifier	nomem		5210374	0					
ANR	5210451	ExpressionStatement	nbytes = nc / CHAR_BIT * css	1233:2:28760:28788	5210374	4	True				
ANR	5210452	AssignmentExpression	nbytes = nc / CHAR_BIT * css		5210374	0		=			
ANR	5210453	Identifier	nbytes		5210374	0					
ANR	5210454	MultiplicativeExpression	nc / CHAR_BIT * css		5210374	1		/			
ANR	5210455	Identifier	nc		5210374	0					
ANR	5210456	MultiplicativeExpression	CHAR_BIT * css		5210374	1		*			
ANR	5210457	Identifier	CHAR_BIT		5210374	0					
ANR	5210458	Identifier	css		5210374	1					
ANR	5210459	ExpressionStatement	"ptr = ( cset * ) realloc ( ( char * ) p -> g -> sets , nc * sizeof ( cset ) )"	1235:2:28793:28853	5210374	5	True				
ANR	5210460	AssignmentExpression	"ptr = ( cset * ) realloc ( ( char * ) p -> g -> sets , nc * sizeof ( cset ) )"		5210374	0		=			
ANR	5210461	Identifier	ptr		5210374	0					
ANR	5210462	CastExpression	"( cset * ) realloc ( ( char * ) p -> g -> sets , nc * sizeof ( cset ) )"		5210374	1					
ANR	5210463	CastTarget	cset *		5210374	0					
ANR	5210464	CallExpression	"realloc ( ( char * ) p -> g -> sets , nc * sizeof ( cset ) )"		5210374	1					
ANR	5210465	Callee	realloc		5210374	0					
ANR	5210466	Identifier	realloc		5210374	0					
ANR	5210467	ArgumentList	( char * ) p -> g -> sets		5210374	1					
ANR	5210468	Argument	( char * ) p -> g -> sets		5210374	0					
ANR	5210469	CastExpression	( char * ) p -> g -> sets		5210374	0					
ANR	5210470	CastTarget	char *		5210374	0					
ANR	5210471	PtrMemberAccess	p -> g -> sets		5210374	1					
ANR	5210472	PtrMemberAccess	p -> g		5210374	0					
ANR	5210473	Identifier	p		5210374	0					
ANR	5210474	Identifier	g		5210374	1					
ANR	5210475	Identifier	sets		5210374	1					
ANR	5210476	Argument	nc * sizeof ( cset )		5210374	1					
ANR	5210477	MultiplicativeExpression	nc * sizeof ( cset )		5210374	0		*			
ANR	5210478	Identifier	nc		5210374	0					
ANR	5210479	SizeofExpression	sizeof ( cset )		5210374	1					
ANR	5210480	Sizeof	sizeof		5210374	0					
ANR	5210481	SizeofOperand	cset		5210374	1					
ANR	5210482	IfStatement	if ( ! ptr )		5210374	6					
ANR	5210483	Condition	! ptr	1236:6:28861:28864	5210374	0	True				
ANR	5210484	UnaryOperationExpression	! ptr		5210374	0					
ANR	5210485	UnaryOperator	!		5210374	0					
ANR	5210486	Identifier	ptr		5210374	1					
ANR	5210487	CompoundStatement		20:12:386:386	5210374	1					
ANR	5210488	GotoStatement	goto nomem ;	1237:3:28872:28882	5210374	0	True				
ANR	5210489	Identifier	nomem		5210374	0					
ANR	5210490	ExpressionStatement	p -> g -> sets = ptr	1239:2:28890:28906	5210374	7	True				
ANR	5210491	AssignmentExpression	p -> g -> sets = ptr		5210374	0		=			
ANR	5210492	PtrMemberAccess	p -> g -> sets		5210374	0					
ANR	5210493	PtrMemberAccess	p -> g		5210374	0					
ANR	5210494	Identifier	p		5210374	0					
ANR	5210495	Identifier	g		5210374	1					
ANR	5210496	Identifier	sets		5210374	1					
ANR	5210497	Identifier	ptr		5210374	1					
ANR	5210498	ExpressionStatement	"ptr = ( ut8 * ) realloc ( ( char * ) p -> g -> setbits , nbytes )"	1241:2:28911:28962	5210374	8	True				
ANR	5210499	AssignmentExpression	"ptr = ( ut8 * ) realloc ( ( char * ) p -> g -> setbits , nbytes )"		5210374	0		=			
ANR	5210500	Identifier	ptr		5210374	0					
ANR	5210501	CastExpression	"( ut8 * ) realloc ( ( char * ) p -> g -> setbits , nbytes )"		5210374	1					
ANR	5210502	CastTarget	ut8 *		5210374	0					
ANR	5210503	CallExpression	"realloc ( ( char * ) p -> g -> setbits , nbytes )"		5210374	1					
ANR	5210504	Callee	realloc		5210374	0					
ANR	5210505	Identifier	realloc		5210374	0					
ANR	5210506	ArgumentList	( char * ) p -> g -> setbits		5210374	1					
ANR	5210507	Argument	( char * ) p -> g -> setbits		5210374	0					
ANR	5210508	CastExpression	( char * ) p -> g -> setbits		5210374	0					
ANR	5210509	CastTarget	char *		5210374	0					
ANR	5210510	PtrMemberAccess	p -> g -> setbits		5210374	1					
ANR	5210511	PtrMemberAccess	p -> g		5210374	0					
ANR	5210512	Identifier	p		5210374	0					
ANR	5210513	Identifier	g		5210374	1					
ANR	5210514	Identifier	setbits		5210374	1					
ANR	5210515	Argument	nbytes		5210374	1					
ANR	5210516	Identifier	nbytes		5210374	0					
ANR	5210517	IfStatement	if ( ! ptr )		5210374	9					
ANR	5210518	Condition	! ptr	1242:6:28970:28973	5210374	0	True				
ANR	5210519	UnaryOperationExpression	! ptr		5210374	0					
ANR	5210520	UnaryOperator	!		5210374	0					
ANR	5210521	Identifier	ptr		5210374	1					
ANR	5210522	CompoundStatement		26:12:495:495	5210374	1					
ANR	5210523	GotoStatement	goto nomem ;	1243:3:28981:28991	5210374	0	True				
ANR	5210524	Identifier	nomem		5210374	0					
ANR	5210525	ExpressionStatement	p -> g -> setbits = ptr	1245:2:28999:29018	5210374	10	True				
ANR	5210526	AssignmentExpression	p -> g -> setbits = ptr		5210374	0		=			
ANR	5210527	PtrMemberAccess	p -> g -> setbits		5210374	0					
ANR	5210528	PtrMemberAccess	p -> g		5210374	0					
ANR	5210529	Identifier	p		5210374	0					
ANR	5210530	Identifier	g		5210374	1					
ANR	5210531	Identifier	setbits		5210374	1					
ANR	5210532	Identifier	ptr		5210374	1					
ANR	5210533	ForStatement	for ( i = 0 ; i < no ; i ++ )		5210374	11					
ANR	5210534	ForInit	i = 0 ;	1247:7:29028:29033	5210374	0	True				
ANR	5210535	AssignmentExpression	i = 0		5210374	0		=			
ANR	5210536	Identifier	i		5210374	0					
ANR	5210537	PrimaryExpression	0		5210374	1					
ANR	5210538	Condition	i < no	1247:14:29035:29040	5210374	1	True				
ANR	5210539	RelationalExpression	i < no		5210374	0		<			
ANR	5210540	Identifier	i		5210374	0					
ANR	5210541	Identifier	no		5210374	1					
ANR	5210542	PostIncDecOperationExpression	i ++	1247:22:29043:29045	5210374	2	True				
ANR	5210543	Identifier	i		5210374	0					
ANR	5210544	IncDec	++		5210374	1					
ANR	5210545	CompoundStatement		31:27:567:567	5210374	3					
ANR	5210546	ExpressionStatement	p -> g -> sets [ i ] . ptr = p -> g -> setbits + css * ( i / CHAR_BIT )	1248:3:29053:29109	5210374	0	True				
ANR	5210547	AssignmentExpression	p -> g -> sets [ i ] . ptr = p -> g -> setbits + css * ( i / CHAR_BIT )		5210374	0		=			
ANR	5210548	MemberAccess	p -> g -> sets [ i ] . ptr		5210374	0					
ANR	5210549	ArrayIndexing	p -> g -> sets [ i ]		5210374	0					
ANR	5210550	PtrMemberAccess	p -> g -> sets		5210374	0					
ANR	5210551	PtrMemberAccess	p -> g		5210374	0					
ANR	5210552	Identifier	p		5210374	0					
ANR	5210553	Identifier	g		5210374	1					
ANR	5210554	Identifier	sets		5210374	1					
ANR	5210555	Identifier	i		5210374	1					
ANR	5210556	Identifier	ptr		5210374	1					
ANR	5210557	AdditiveExpression	p -> g -> setbits + css * ( i / CHAR_BIT )		5210374	1		+			
ANR	5210558	PtrMemberAccess	p -> g -> setbits		5210374	0					
ANR	5210559	PtrMemberAccess	p -> g		5210374	0					
ANR	5210560	Identifier	p		5210374	0					
ANR	5210561	Identifier	g		5210374	1					
ANR	5210562	Identifier	setbits		5210374	1					
ANR	5210563	MultiplicativeExpression	css * ( i / CHAR_BIT )		5210374	1		*			
ANR	5210564	Identifier	css		5210374	0					
ANR	5210565	MultiplicativeExpression	i / CHAR_BIT		5210374	1		/			
ANR	5210566	Identifier	i		5210374	0					
ANR	5210567	Identifier	CHAR_BIT		5210374	1					
ANR	5210568	ExpressionStatement	"( void ) memset ( ( char * ) p -> g -> setbits + ( nbytes - css ) , 0 , css )"	1251:2:29118:29179	5210374	12	True				
ANR	5210569	CastExpression	"( void ) memset ( ( char * ) p -> g -> setbits + ( nbytes - css ) , 0 , css )"		5210374	0					
ANR	5210570	CastTarget	void		5210374	0					
ANR	5210571	CallExpression	"memset ( ( char * ) p -> g -> setbits + ( nbytes - css ) , 0 , css )"		5210374	1					
ANR	5210572	Callee	memset		5210374	0					
ANR	5210573	Identifier	memset		5210374	0					
ANR	5210574	ArgumentList	( char * ) p -> g -> setbits + ( nbytes - css )		5210374	1					
ANR	5210575	Argument	( char * ) p -> g -> setbits + ( nbytes - css )		5210374	0					
ANR	5210576	AdditiveExpression	( char * ) p -> g -> setbits + ( nbytes - css )		5210374	0		+			
ANR	5210577	CastExpression	( char * ) p -> g -> setbits		5210374	0					
ANR	5210578	CastTarget	char *		5210374	0					
ANR	5210579	PtrMemberAccess	p -> g -> setbits		5210374	1					
ANR	5210580	PtrMemberAccess	p -> g		5210374	0					
ANR	5210581	Identifier	p		5210374	0					
ANR	5210582	Identifier	g		5210374	1					
ANR	5210583	Identifier	setbits		5210374	1					
ANR	5210584	AdditiveExpression	nbytes - css		5210374	1		-			
ANR	5210585	Identifier	nbytes		5210374	0					
ANR	5210586	Identifier	css		5210374	1					
ANR	5210587	Argument	0		5210374	1					
ANR	5210588	PrimaryExpression	0		5210374	0					
ANR	5210589	Argument	css		5210374	2					
ANR	5210590	Identifier	css		5210374	0					
ANR	5210591	IfStatement	if ( ! p -> g -> sets || ! p -> g -> setbits )		5210374	7					
ANR	5210592	Condition	! p -> g -> sets || ! p -> g -> setbits	1254:5:29218:29246	5210374	0	True				
ANR	5210593	OrExpression	! p -> g -> sets || ! p -> g -> setbits		5210374	0		||			
ANR	5210594	UnaryOperationExpression	! p -> g -> sets		5210374	0					
ANR	5210595	UnaryOperator	!		5210374	0					
ANR	5210596	PtrMemberAccess	p -> g -> sets		5210374	1					
ANR	5210597	PtrMemberAccess	p -> g		5210374	0					
ANR	5210598	Identifier	p		5210374	0					
ANR	5210599	Identifier	g		5210374	1					
ANR	5210600	Identifier	sets		5210374	1					
ANR	5210601	UnaryOperationExpression	! p -> g -> setbits		5210374	1					
ANR	5210602	UnaryOperator	!		5210374	0					
ANR	5210603	PtrMemberAccess	p -> g -> setbits		5210374	1					
ANR	5210604	PtrMemberAccess	p -> g		5210374	0					
ANR	5210605	Identifier	p		5210374	0					
ANR	5210606	Identifier	g		5210374	1					
ANR	5210607	Identifier	setbits		5210374	1					
ANR	5210608	CompoundStatement		38:36:768:768	5210374	1					
ANR	5210609	GotoStatement	goto nomem ;	1255:2:29253:29263	5210374	0	True				
ANR	5210610	Identifier	nomem		5210374	0					
ANR	5210611	ExpressionStatement	cs = & p -> g -> sets [ no ]	1258:1:29270:29290	5210374	8	True				
ANR	5210612	AssignmentExpression	cs = & p -> g -> sets [ no ]		5210374	0		=			
ANR	5210613	Identifier	cs		5210374	0					
ANR	5210614	UnaryOperationExpression	& p -> g -> sets [ no ]		5210374	1					
ANR	5210615	UnaryOperator	&		5210374	0					
ANR	5210616	ArrayIndexing	p -> g -> sets [ no ]		5210374	1					
ANR	5210617	PtrMemberAccess	p -> g -> sets		5210374	0					
ANR	5210618	PtrMemberAccess	p -> g		5210374	0					
ANR	5210619	Identifier	p		5210374	0					
ANR	5210620	Identifier	g		5210374	1					
ANR	5210621	Identifier	sets		5210374	1					
ANR	5210622	Identifier	no		5210374	1					
ANR	5210623	ExpressionStatement	cs -> ptr = p -> g -> setbits + css * ( ( no ) / CHAR_BIT )	1259:1:29293:29338	5210374	9	True				
ANR	5210624	AssignmentExpression	cs -> ptr = p -> g -> setbits + css * ( ( no ) / CHAR_BIT )		5210374	0		=			
ANR	5210625	PtrMemberAccess	cs -> ptr		5210374	0					
ANR	5210626	Identifier	cs		5210374	0					
ANR	5210627	Identifier	ptr		5210374	1					
ANR	5210628	AdditiveExpression	p -> g -> setbits + css * ( ( no ) / CHAR_BIT )		5210374	1		+			
ANR	5210629	PtrMemberAccess	p -> g -> setbits		5210374	0					
ANR	5210630	PtrMemberAccess	p -> g		5210374	0					
ANR	5210631	Identifier	p		5210374	0					
ANR	5210632	Identifier	g		5210374	1					
ANR	5210633	Identifier	setbits		5210374	1					
ANR	5210634	MultiplicativeExpression	css * ( ( no ) / CHAR_BIT )		5210374	1		*			
ANR	5210635	Identifier	css		5210374	0					
ANR	5210636	MultiplicativeExpression	( no ) / CHAR_BIT		5210374	1		/			
ANR	5210637	Identifier	no		5210374	0					
ANR	5210638	Identifier	CHAR_BIT		5210374	1					
ANR	5210639	ExpressionStatement	cs -> mask = 1 << ( ( no ) % CHAR_BIT )	1260:1:29341:29374	5210374	10	True				
ANR	5210640	AssignmentExpression	cs -> mask = 1 << ( ( no ) % CHAR_BIT )		5210374	0		=			
ANR	5210641	PtrMemberAccess	cs -> mask		5210374	0					
ANR	5210642	Identifier	cs		5210374	0					
ANR	5210643	Identifier	mask		5210374	1					
ANR	5210644	ShiftExpression	1 << ( ( no ) % CHAR_BIT )		5210374	1		<<			
ANR	5210645	PrimaryExpression	1		5210374	0					
ANR	5210646	MultiplicativeExpression	( no ) % CHAR_BIT		5210374	1		%			
ANR	5210647	Identifier	no		5210374	0					
ANR	5210648	Identifier	CHAR_BIT		5210374	1					
ANR	5210649	ExpressionStatement	cs -> hash = 0	1261:1:29377:29389	5210374	11	True				
ANR	5210650	AssignmentExpression	cs -> hash = 0		5210374	0		=			
ANR	5210651	PtrMemberAccess	cs -> hash		5210374	0					
ANR	5210652	Identifier	cs		5210374	0					
ANR	5210653	Identifier	hash		5210374	1					
ANR	5210654	PrimaryExpression	0		5210374	1					
ANR	5210655	ExpressionStatement	cs -> smultis = 0	1262:1:29392:29407	5210374	12	True				
ANR	5210656	AssignmentExpression	cs -> smultis = 0		5210374	0		=			
ANR	5210657	PtrMemberAccess	cs -> smultis		5210374	0					
ANR	5210658	Identifier	cs		5210374	0					
ANR	5210659	Identifier	smultis		5210374	1					
ANR	5210660	PrimaryExpression	0		5210374	1					
ANR	5210661	ExpressionStatement	cs -> multis = NULL	1263:1:29410:29427	5210374	13	True				
ANR	5210662	AssignmentExpression	cs -> multis = NULL		5210374	0		=			
ANR	5210663	PtrMemberAccess	cs -> multis		5210374	0					
ANR	5210664	Identifier	cs		5210374	0					
ANR	5210665	Identifier	multis		5210374	1					
ANR	5210666	Identifier	NULL		5210374	1					
ANR	5210667	ReturnStatement	return ( cs ) ;	1265:1:29431:29441	5210374	14	True				
ANR	5210668	Identifier	cs		5210374	0					
ANR	5210669	Label	nomem :	1266:0:29443:29448	5210374	15	True				
ANR	5210670	Identifier	nomem		5210374	0					
ANR	5210671	ExpressionStatement	R_FREE ( p -> g -> sets )	1267:1:29451:29469	5210374	16	True				
ANR	5210672	CallExpression	R_FREE ( p -> g -> sets )		5210374	0					
ANR	5210673	Callee	R_FREE		5210374	0					
ANR	5210674	Identifier	R_FREE		5210374	0					
ANR	5210675	ArgumentList	p -> g -> sets		5210374	1					
ANR	5210676	Argument	p -> g -> sets		5210374	0					
ANR	5210677	PtrMemberAccess	p -> g -> sets		5210374	0					
ANR	5210678	PtrMemberAccess	p -> g		5210374	0					
ANR	5210679	Identifier	p		5210374	0					
ANR	5210680	Identifier	g		5210374	1					
ANR	5210681	Identifier	sets		5210374	1					
ANR	5210682	ExpressionStatement	R_FREE ( p -> g -> setbits )	1268:1:29472:29493	5210374	17	True				
ANR	5210683	CallExpression	R_FREE ( p -> g -> setbits )		5210374	0					
ANR	5210684	Callee	R_FREE		5210374	0					
ANR	5210685	Identifier	R_FREE		5210374	0					
ANR	5210686	ArgumentList	p -> g -> setbits		5210374	1					
ANR	5210687	Argument	p -> g -> setbits		5210374	0					
ANR	5210688	PtrMemberAccess	p -> g -> setbits		5210374	0					
ANR	5210689	PtrMemberAccess	p -> g		5210374	0					
ANR	5210690	Identifier	p		5210374	0					
ANR	5210691	Identifier	g		5210374	1					
ANR	5210692	Identifier	setbits		5210374	1					
ANR	5210693	ExpressionStatement	SETERROR ( R_REGEX_ESPACE )	1270:1:29497:29521	5210374	18	True				
ANR	5210694	CallExpression	SETERROR ( R_REGEX_ESPACE )		5210374	0					
ANR	5210695	Callee	SETERROR		5210374	0					
ANR	5210696	Identifier	SETERROR		5210374	0					
ANR	5210697	ArgumentList	R_REGEX_ESPACE		5210374	1					
ANR	5210698	Argument	R_REGEX_ESPACE		5210374	0					
ANR	5210699	Identifier	R_REGEX_ESPACE		5210374	0					
ANR	5210700	ReturnStatement	return ( NULL ) ;	1272:1:29573:29585	5210374	19	True				
ANR	5210701	Identifier	NULL		5210374	0					
ANR	5210702	ReturnType	static cset *		5210374	1					
ANR	5210703	Identifier	allocset		5210374	2					
ANR	5210704	ParameterList	struct parse * p		5210374	3					
ANR	5210705	Parameter	struct parse * p	1217:23:28463:28477	5210374	0	True				
ANR	5210706	ParameterType	struct parse *		5210374	0					
ANR	5210707	Identifier	p		5210374	1					
ANR	5210708	CFGEntryNode	ENTRY		5210374		True				
ANR	5210709	CFGExitNode	EXIT		5210374		True				
ANR	5210710	Symbol	no		5210374						
ANR	5210711	Symbol	css		5210374						
ANR	5210712	Symbol	cs -> ptr		5210374						
ANR	5210713	Symbol	p -> g -> sets		5210374						
ANR	5210714	Symbol	realloc		5210374						
ANR	5210715	Symbol	p -> g -> csetsize		5210374						
ANR	5210716	Symbol	CHAR_BIT		5210374						
ANR	5210717	Symbol	cs -> mask		5210374						
ANR	5210718	Symbol	cs -> smultis		5210374						
ANR	5210719	Symbol	p -> g -> ncsets		5210374						
ANR	5210720	Symbol	p -> g -> setbits		5210374						
ANR	5210721	Symbol	p -> g -> sets [ i ] . ptr		5210374						
ANR	5210722	Symbol	p -> ncsalloc		5210374						
ANR	5210723	Symbol	* * p		5210374						
ANR	5210724	Symbol	* * p -> g		5210374						
ANR	5210725	Symbol	p -> g		5210374						
ANR	5210726	Symbol	cs -> multis		5210374						
ANR	5210727	Symbol	* p -> g -> sets		5210374						
ANR	5210728	Symbol	NULL		5210374						
ANR	5210729	Symbol	i		5210374						
ANR	5210730	Symbol	nbytes		5210374						
ANR	5210731	Symbol	ptr		5210374						
ANR	5210732	Symbol	cs -> hash		5210374						
ANR	5210733	Symbol	p		5210374						
ANR	5210734	Symbol	cs		5210374						
ANR	5210735	Symbol	* p -> g		5210374						
ANR	5210736	Symbol	* * * p		5210374						
ANR	5210737	Symbol	* i		5210374						
ANR	5210738	Symbol	R_REGEX_ESPACE		5210374						
ANR	5210739	Symbol	nc		5210374						
ANR	5210740	Symbol	* cs		5210374						
ANR	5210741	Symbol	* p		5210374						
ANR	5210742	Function	freeset	1278:0:29632:29893							
ANR	5210743	FunctionDef	"freeset (struct parse * p , cset * cs)"		5210742	0					
ANR	5210744	CompoundStatement		1278:47:29679:29893	5210742	0					
ANR	5210745	IdentifierDeclStatement	int i ;	1279:1:29682:29687	5210742	0	True				
ANR	5210746	IdentifierDecl	i		5210742	0					
ANR	5210747	IdentifierDeclType	int		5210742	0					
ANR	5210748	Identifier	i		5210742	1					
ANR	5210749	IdentifierDeclStatement	cset * top = & p -> g -> sets [ p -> g -> ncsets ] ;	1280:1:29690:29727	5210742	1	True				
ANR	5210750	IdentifierDecl	* top = & p -> g -> sets [ p -> g -> ncsets ]		5210742	0					
ANR	5210751	IdentifierDeclType	cset *		5210742	0					
ANR	5210752	Identifier	top		5210742	1					
ANR	5210753	AssignmentExpression	* top = & p -> g -> sets [ p -> g -> ncsets ]		5210742	2		=			
ANR	5210754	Identifier	top		5210742	0					
ANR	5210755	UnaryOperationExpression	& p -> g -> sets [ p -> g -> ncsets ]		5210742	1					
ANR	5210756	UnaryOperator	&		5210742	0					
ANR	5210757	ArrayIndexing	p -> g -> sets [ p -> g -> ncsets ]		5210742	1					
ANR	5210758	PtrMemberAccess	p -> g -> sets		5210742	0					
ANR	5210759	PtrMemberAccess	p -> g		5210742	0					
ANR	5210760	Identifier	p		5210742	0					
ANR	5210761	Identifier	g		5210742	1					
ANR	5210762	Identifier	sets		5210742	1					
ANR	5210763	PtrMemberAccess	p -> g -> ncsets		5210742	1					
ANR	5210764	PtrMemberAccess	p -> g		5210742	0					
ANR	5210765	Identifier	p		5210742	0					
ANR	5210766	Identifier	g		5210742	1					
ANR	5210767	Identifier	ncsets		5210742	1					
ANR	5210768	IdentifierDeclStatement	size_t css = ( size_t ) p -> g -> csetsize ;	1281:1:29730:29765	5210742	2	True				
ANR	5210769	IdentifierDecl	css = ( size_t ) p -> g -> csetsize		5210742	0					
ANR	5210770	IdentifierDeclType	size_t		5210742	0					
ANR	5210771	Identifier	css		5210742	1					
ANR	5210772	AssignmentExpression	css = ( size_t ) p -> g -> csetsize		5210742	2		=			
ANR	5210773	Identifier	css		5210742	0					
ANR	5210774	CastExpression	( size_t ) p -> g -> csetsize		5210742	1					
ANR	5210775	CastTarget	size_t		5210742	0					
ANR	5210776	PtrMemberAccess	p -> g -> csetsize		5210742	1					
ANR	5210777	PtrMemberAccess	p -> g		5210742	0					
ANR	5210778	Identifier	p		5210742	0					
ANR	5210779	Identifier	g		5210742	1					
ANR	5210780	Identifier	csetsize		5210742	1					
ANR	5210781	ForStatement	for ( i = 0 ; i < css ; i ++ )		5210742	3					
ANR	5210782	ForInit	i = 0 ;	1283:6:29774:29779	5210742	0	True				
ANR	5210783	AssignmentExpression	i = 0		5210742	0		=			
ANR	5210784	Identifier	i		5210742	0					
ANR	5210785	PrimaryExpression	0		5210742	1					
ANR	5210786	Condition	i < css	1283:13:29781:29787	5210742	1	True				
ANR	5210787	RelationalExpression	i < css		5210742	0		<			
ANR	5210788	Identifier	i		5210742	0					
ANR	5210789	Identifier	css		5210742	1					
ANR	5210790	PostIncDecOperationExpression	i ++	1283:22:29790:29792	5210742	2	True				
ANR	5210791	Identifier	i		5210742	0					
ANR	5210792	IncDec	++		5210742	1					
ANR	5210793	CompoundStatement		6:27:115:115	5210742	3					
ANR	5210794	ExpressionStatement	"CHsub ( cs , i )"	1284:2:29799:29812	5210742	0	True				
ANR	5210795	CallExpression	"CHsub ( cs , i )"		5210742	0					
ANR	5210796	Callee	CHsub		5210742	0					
ANR	5210797	Identifier	CHsub		5210742	0					
ANR	5210798	ArgumentList	cs		5210742	1					
ANR	5210799	Argument	cs		5210742	0					
ANR	5210800	Identifier	cs		5210742	0					
ANR	5210801	Argument	i		5210742	1					
ANR	5210802	Identifier	i		5210742	0					
ANR	5210803	IfStatement	if ( cs == top - 1 )		5210742	4					
ANR	5210804	Condition	cs == top - 1	1286:5:29822:29834	5210742	0	True				
ANR	5210805	EqualityExpression	cs == top - 1		5210742	0		==			
ANR	5210806	Identifier	cs		5210742	0					
ANR	5210807	AdditiveExpression	top - 1		5210742	1		-			
ANR	5210808	Identifier	top		5210742	0					
ANR	5210809	PrimaryExpression	1		5210742	1					
ANR	5210810	CompoundStatement		9:20:157:157	5210742	1					
ANR	5210811	ExpressionStatement	p -> g -> ncsets --	1287:2:29874:29888	5210742	0	True				
ANR	5210812	PostIncDecOperationExpression	p -> g -> ncsets --		5210742	0					
ANR	5210813	PtrMemberAccess	p -> g -> ncsets		5210742	0					
ANR	5210814	PtrMemberAccess	p -> g		5210742	0					
ANR	5210815	Identifier	p		5210742	0					
ANR	5210816	Identifier	g		5210742	1					
ANR	5210817	Identifier	ncsets		5210742	1					
ANR	5210818	IncDec	--		5210742	1					
ANR	5210819	ReturnType	static void		5210742	1					
ANR	5210820	Identifier	freeset		5210742	2					
ANR	5210821	ParameterList	"struct parse * p , cset * cs"		5210742	3					
ANR	5210822	Parameter	struct parse * p	1278:20:29652:29666	5210742	0	True				
ANR	5210823	ParameterType	struct parse *		5210742	0					
ANR	5210824	Identifier	p		5210742	1					
ANR	5210825	Parameter	cset * cs	1278:37:29669:29676	5210742	1	True				
ANR	5210826	ParameterType	cset *		5210742	0					
ANR	5210827	Identifier	cs		5210742	1					
ANR	5210828	CFGEntryNode	ENTRY		5210742		True				
ANR	5210829	CFGExitNode	EXIT		5210742		True				
ANR	5210830	Symbol	p		5210742						
ANR	5210831	Symbol	cs		5210742						
ANR	5210832	Symbol	* p -> g		5210742						
ANR	5210833	Symbol	css		5210742						
ANR	5210834	Symbol	top		5210742						
ANR	5210835	Symbol	p -> g -> sets		5210742						
ANR	5210836	Symbol	i		5210742						
ANR	5210837	Symbol	* p		5210742						
ANR	5210838	Symbol	* * p		5210742						
ANR	5210839	Symbol	p -> g -> csetsize		5210742						
ANR	5210840	Symbol	p -> g		5210742						
ANR	5210841	Symbol	p -> g -> ncsets		5210742						
ANR	5210842	Function	freezeset	1300:0:30281:30879							
ANR	5210843	FunctionDef	"freezeset (struct parse * p , cset * cs)"		5210842	0					
ANR	5210844	CompoundStatement		1302:0:30348:30879	5210842	0					
ANR	5210845	IdentifierDeclStatement	ut8 h = cs -> hash ;	1303:1:30351:30367	5210842	0	True				
ANR	5210846	IdentifierDecl	h = cs -> hash		5210842	0					
ANR	5210847	IdentifierDeclType	ut8		5210842	0					
ANR	5210848	Identifier	h		5210842	1					
ANR	5210849	AssignmentExpression	h = cs -> hash		5210842	2		=			
ANR	5210850	Identifier	h		5210842	0					
ANR	5210851	PtrMemberAccess	cs -> hash		5210842	1					
ANR	5210852	Identifier	cs		5210842	0					
ANR	5210853	Identifier	hash		5210842	1					
ANR	5210854	IdentifierDeclStatement	int i ;	1304:1:30370:30375	5210842	1	True				
ANR	5210855	IdentifierDecl	i		5210842	0					
ANR	5210856	IdentifierDeclType	int		5210842	0					
ANR	5210857	Identifier	i		5210842	1					
ANR	5210858	IdentifierDeclStatement	cset * top = & p -> g -> sets [ p -> g -> ncsets ] ;	1305:1:30378:30415	5210842	2	True				
ANR	5210859	IdentifierDecl	* top = & p -> g -> sets [ p -> g -> ncsets ]		5210842	0					
ANR	5210860	IdentifierDeclType	cset *		5210842	0					
ANR	5210861	Identifier	top		5210842	1					
ANR	5210862	AssignmentExpression	* top = & p -> g -> sets [ p -> g -> ncsets ]		5210842	2		=			
ANR	5210863	Identifier	top		5210842	0					
ANR	5210864	UnaryOperationExpression	& p -> g -> sets [ p -> g -> ncsets ]		5210842	1					
ANR	5210865	UnaryOperator	&		5210842	0					
ANR	5210866	ArrayIndexing	p -> g -> sets [ p -> g -> ncsets ]		5210842	1					
ANR	5210867	PtrMemberAccess	p -> g -> sets		5210842	0					
ANR	5210868	PtrMemberAccess	p -> g		5210842	0					
ANR	5210869	Identifier	p		5210842	0					
ANR	5210870	Identifier	g		5210842	1					
ANR	5210871	Identifier	sets		5210842	1					
ANR	5210872	PtrMemberAccess	p -> g -> ncsets		5210842	1					
ANR	5210873	PtrMemberAccess	p -> g		5210842	0					
ANR	5210874	Identifier	p		5210842	0					
ANR	5210875	Identifier	g		5210842	1					
ANR	5210876	Identifier	ncsets		5210842	1					
ANR	5210877	IdentifierDeclStatement	cset * cs2 ;	1306:1:30418:30427	5210842	3	True				
ANR	5210878	IdentifierDecl	* cs2		5210842	0					
ANR	5210879	IdentifierDeclType	cset *		5210842	0					
ANR	5210880	Identifier	cs2		5210842	1					
ANR	5210881	IdentifierDeclStatement	size_t css = ( size_t ) p -> g -> csetsize ;	1307:1:30430:30465	5210842	4	True				
ANR	5210882	IdentifierDecl	css = ( size_t ) p -> g -> csetsize		5210842	0					
ANR	5210883	IdentifierDeclType	size_t		5210842	0					
ANR	5210884	Identifier	css		5210842	1					
ANR	5210885	AssignmentExpression	css = ( size_t ) p -> g -> csetsize		5210842	2		=			
ANR	5210886	Identifier	css		5210842	0					
ANR	5210887	CastExpression	( size_t ) p -> g -> csetsize		5210842	1					
ANR	5210888	CastTarget	size_t		5210842	0					
ANR	5210889	PtrMemberAccess	p -> g -> csetsize		5210842	1					
ANR	5210890	PtrMemberAccess	p -> g		5210842	0					
ANR	5210891	Identifier	p		5210842	0					
ANR	5210892	Identifier	g		5210842	1					
ANR	5210893	Identifier	csetsize		5210842	1					
ANR	5210894	ForStatement	for ( cs2 = & p -> g -> sets [ 0 ] ; cs2 < top ; cs2 ++ )		5210842	5					
ANR	5210895	ForInit	cs2 = & p -> g -> sets [ 0 ] ;	1310:6:30523:30543	5210842	0	True				
ANR	5210896	AssignmentExpression	cs2 = & p -> g -> sets [ 0 ]		5210842	0		=			
ANR	5210897	Identifier	cs2		5210842	0					
ANR	5210898	UnaryOperationExpression	& p -> g -> sets [ 0 ]		5210842	1					
ANR	5210899	UnaryOperator	&		5210842	0					
ANR	5210900	ArrayIndexing	p -> g -> sets [ 0 ]		5210842	1					
ANR	5210901	PtrMemberAccess	p -> g -> sets		5210842	0					
ANR	5210902	PtrMemberAccess	p -> g		5210842	0					
ANR	5210903	Identifier	p		5210842	0					
ANR	5210904	Identifier	g		5210842	1					
ANR	5210905	Identifier	sets		5210842	1					
ANR	5210906	PrimaryExpression	0		5210842	1					
ANR	5210907	Condition	cs2 < top	1310:28:30545:30553	5210842	1	True				
ANR	5210908	RelationalExpression	cs2 < top		5210842	0		<			
ANR	5210909	Identifier	cs2		5210842	0					
ANR	5210910	Identifier	top		5210842	1					
ANR	5210911	PostIncDecOperationExpression	cs2 ++	1310:39:30556:30560	5210842	2	True				
ANR	5210912	Identifier	cs2		5210842	0					
ANR	5210913	IncDec	++		5210842	1					
ANR	5210914	CompoundStatement		9:46:214:214	5210842	3					
ANR	5210915	IfStatement	if ( cs2 -> hash == h && cs2 != cs )		5210842	0					
ANR	5210916	Condition	cs2 -> hash == h && cs2 != cs	1311:6:30571:30597	5210842	0	True				
ANR	5210917	AndExpression	cs2 -> hash == h && cs2 != cs		5210842	0		&&			
ANR	5210918	EqualityExpression	cs2 -> hash == h		5210842	0		==			
ANR	5210919	PtrMemberAccess	cs2 -> hash		5210842	0					
ANR	5210920	Identifier	cs2		5210842	0					
ANR	5210921	Identifier	hash		5210842	1					
ANR	5210922	Identifier	h		5210842	1					
ANR	5210923	EqualityExpression	cs2 != cs		5210842	1		!=			
ANR	5210924	Identifier	cs2		5210842	0					
ANR	5210925	Identifier	cs		5210842	1					
ANR	5210926	CompoundStatement		10:35:251:251	5210842	1					
ANR	5210927	ForStatement	for ( i = 0 ; i < css ; i ++ )		5210842	0					
ANR	5210928	ForInit	i = 0 ;	1313:8:30625:30630	5210842	0	True				
ANR	5210929	AssignmentExpression	i = 0		5210842	0		=			
ANR	5210930	Identifier	i		5210842	0					
ANR	5210931	PrimaryExpression	0		5210842	1					
ANR	5210932	Condition	i < css	1313:15:30632:30638	5210842	1	True				
ANR	5210933	RelationalExpression	i < css		5210842	0		<			
ANR	5210934	Identifier	i		5210842	0					
ANR	5210935	Identifier	css		5210842	1					
ANR	5210936	PostIncDecOperationExpression	i ++	1313:24:30641:30643	5210842	2	True				
ANR	5210937	Identifier	i		5210842	0					
ANR	5210938	IncDec	++		5210842	1					
ANR	5210939	CompoundStatement		12:29:297:297	5210842	3					
ANR	5210940	IfStatement	"if ( ! ! CHIN ( cs2 , i ) != ! ! CHIN ( cs , i ) )"		5210842	0					
ANR	5210941	Condition	"! ! CHIN ( cs2 , i ) != ! ! CHIN ( cs , i )"	1314:8:30656:30688	5210842	0	True				
ANR	5210942	EqualityExpression	"! ! CHIN ( cs2 , i ) != ! ! CHIN ( cs , i )"		5210842	0		!=			
ANR	5210943	UnaryOperationExpression	"! ! CHIN ( cs2 , i )"		5210842	0					
ANR	5210944	UnaryOperator	!		5210842	0					
ANR	5210945	UnaryOperationExpression	"! CHIN ( cs2 , i )"		5210842	1					
ANR	5210946	UnaryOperator	!		5210842	0					
ANR	5210947	CallExpression	"CHIN ( cs2 , i )"		5210842	1					
ANR	5210948	Callee	CHIN		5210842	0					
ANR	5210949	Identifier	CHIN		5210842	0					
ANR	5210950	ArgumentList	cs2		5210842	1					
ANR	5210951	Argument	cs2		5210842	0					
ANR	5210952	Identifier	cs2		5210842	0					
ANR	5210953	Argument	i		5210842	1					
ANR	5210954	Identifier	i		5210842	0					
ANR	5210955	UnaryOperationExpression	"! ! CHIN ( cs , i )"		5210842	1					
ANR	5210956	UnaryOperator	!		5210842	0					
ANR	5210957	UnaryOperationExpression	"! CHIN ( cs , i )"		5210842	1					
ANR	5210958	UnaryOperator	!		5210842	0					
ANR	5210959	CallExpression	"CHIN ( cs , i )"		5210842	1					
ANR	5210960	Callee	CHIN		5210842	0					
ANR	5210961	Identifier	CHIN		5210842	0					
ANR	5210962	ArgumentList	cs		5210842	1					
ANR	5210963	Argument	cs		5210842	0					
ANR	5210964	Identifier	cs		5210842	0					
ANR	5210965	Argument	i		5210842	1					
ANR	5210966	Identifier	i		5210842	0					
ANR	5210967	CompoundStatement		13:43:342:342	5210842	1					
ANR	5210968	BreakStatement	break ;	1315:5:30698:30703	5210842	0	True				
ANR	5210969	IfStatement	if ( i == css )		5210842	1					
ANR	5210970	Condition	i == css	1318:7:30732:30739	5210842	0	True				
ANR	5210971	EqualityExpression	i == css		5210842	0		==			
ANR	5210972	Identifier	i		5210842	0					
ANR	5210973	Identifier	css		5210842	1					
ANR	5210974	CompoundStatement		17:17:393:393	5210842	1					
ANR	5210975	BreakStatement	break ;	1319:4:30748:30753	5210842	0	True				
ANR	5210976	IfStatement	if ( cs2 < top )		5210842	6					
ANR	5210977	Condition	cs2 < top	1324:5:30783:30791	5210842	0	True				
ANR	5210978	RelationalExpression	cs2 < top		5210842	0		<			
ANR	5210979	Identifier	cs2		5210842	0					
ANR	5210980	Identifier	top		5210842	1					
ANR	5210981	CompoundStatement		23:16:445:445	5210842	1					
ANR	5210982	ExpressionStatement	"freeset ( p , cs )"	1325:2:30814:30828	5210842	0	True				
ANR	5210983	CallExpression	"freeset ( p , cs )"		5210842	0					
ANR	5210984	Callee	freeset		5210842	0					
ANR	5210985	Identifier	freeset		5210842	0					
ANR	5210986	ArgumentList	p		5210842	1					
ANR	5210987	Argument	p		5210842	0					
ANR	5210988	Identifier	p		5210842	0					
ANR	5210989	Argument	cs		5210842	1					
ANR	5210990	Identifier	cs		5210842	0					
ANR	5210991	ExpressionStatement	cs = cs2	1326:2:30832:30840	5210842	1	True				
ANR	5210992	AssignmentExpression	cs = cs2		5210842	0		=			
ANR	5210993	Identifier	cs		5210842	0					
ANR	5210994	Identifier	cs2		5210842	1					
ANR	5210995	ReturnStatement	return ( ( int ) ( cs - p -> g -> sets ) ) ;	1329:1:30847:30877	5210842	7	True				
ANR	5210996	CastExpression	( int ) ( cs - p -> g -> sets )		5210842	0					
ANR	5210997	CastTarget	int		5210842	0					
ANR	5210998	AdditiveExpression	cs - p -> g -> sets		5210842	1		-			
ANR	5210999	Identifier	cs		5210842	0					
ANR	5211000	PtrMemberAccess	p -> g -> sets		5210842	1					
ANR	5211001	PtrMemberAccess	p -> g		5210842	0					
ANR	5211002	Identifier	p		5210842	0					
ANR	5211003	Identifier	g		5210842	1					
ANR	5211004	Identifier	sets		5210842	1					
ANR	5211005	ReturnType	static int		5210842	1					
ANR	5211006	Identifier	freezeset		5210842	2					
ANR	5211007	ParameterList	"struct parse * p , cset * cs"		5210842	3					
ANR	5211008	Parameter	struct parse * p	1301:10:30321:30335	5210842	0	True				
ANR	5211009	ParameterType	struct parse *		5210842	0					
ANR	5211010	Identifier	p		5210842	1					
ANR	5211011	Parameter	cset * cs	1301:27:30338:30345	5210842	1	True				
ANR	5211012	ParameterType	cset *		5210842	0					
ANR	5211013	Identifier	cs		5210842	1					
ANR	5211014	CFGEntryNode	ENTRY		5210842		True				
ANR	5211015	CFGExitNode	EXIT		5210842		True				
ANR	5211016	Symbol	css		5210842						
ANR	5211017	Symbol	cs2		5210842						
ANR	5211018	Symbol	h		5210842						
ANR	5211019	Symbol	p -> g -> sets		5210842						
ANR	5211020	Symbol	i		5210842						
ANR	5211021	Symbol	p -> g -> csetsize		5210842						
ANR	5211022	Symbol	cs -> hash		5210842						
ANR	5211023	Symbol	p -> g -> ncsets		5210842						
ANR	5211024	Symbol	p		5210842						
ANR	5211025	Symbol	cs		5210842						
ANR	5211026	Symbol	* p -> g		5210842						
ANR	5211027	Symbol	* cs2		5210842						
ANR	5211028	Symbol	top		5210842						
ANR	5211029	Symbol	* cs		5210842						
ANR	5211030	Symbol	cs2 -> hash		5210842						
ANR	5211031	Symbol	CHIN		5210842						
ANR	5211032	Symbol	* p		5210842						
ANR	5211033	Symbol	* * p		5210842						
ANR	5211034	Symbol	p -> g		5210842						
ANR	5211035	Function	firstch	1335:0:30965:31212							
ANR	5211036	FunctionDef	"firstch (struct parse * p , cset * cs)"		5211035	0					
ANR	5211037	CompoundStatement		1337:0:31055:31212	5211035	0					
ANR	5211038	IdentifierDeclStatement	int i ;	1338:1:31058:31063	5211035	0	True				
ANR	5211039	IdentifierDecl	i		5211035	0					
ANR	5211040	IdentifierDeclType	int		5211035	0					
ANR	5211041	Identifier	i		5211035	1					
ANR	5211042	IdentifierDeclStatement	size_t css = ( size_t ) p -> g -> csetsize ;	1339:1:31066:31101	5211035	1	True				
ANR	5211043	IdentifierDecl	css = ( size_t ) p -> g -> csetsize		5211035	0					
ANR	5211044	IdentifierDeclType	size_t		5211035	0					
ANR	5211045	Identifier	css		5211035	1					
ANR	5211046	AssignmentExpression	css = ( size_t ) p -> g -> csetsize		5211035	2		=			
ANR	5211047	Identifier	css		5211035	0					
ANR	5211048	CastExpression	( size_t ) p -> g -> csetsize		5211035	1					
ANR	5211049	CastTarget	size_t		5211035	0					
ANR	5211050	PtrMemberAccess	p -> g -> csetsize		5211035	1					
ANR	5211051	PtrMemberAccess	p -> g		5211035	0					
ANR	5211052	Identifier	p		5211035	0					
ANR	5211053	Identifier	g		5211035	1					
ANR	5211054	Identifier	csetsize		5211035	1					
ANR	5211055	ForStatement	for ( i = 0 ; i < css ; i ++ )		5211035	2					
ANR	5211056	ForInit	i = 0 ;	1341:6:31110:31115	5211035	0	True				
ANR	5211057	AssignmentExpression	i = 0		5211035	0		=			
ANR	5211058	Identifier	i		5211035	0					
ANR	5211059	PrimaryExpression	0		5211035	1					
ANR	5211060	Condition	i < css	1341:13:31117:31123	5211035	1	True				
ANR	5211061	RelationalExpression	i < css		5211035	0		<			
ANR	5211062	Identifier	i		5211035	0					
ANR	5211063	Identifier	css		5211035	1					
ANR	5211064	PostIncDecOperationExpression	i ++	1341:22:31126:31128	5211035	2	True				
ANR	5211065	Identifier	i		5211035	0					
ANR	5211066	IncDec	++		5211035	1					
ANR	5211067	CompoundStatement		5:27:75:75	5211035	3					
ANR	5211068	IfStatement	"if ( CHIN ( cs , i ) )"		5211035	0					
ANR	5211069	Condition	"CHIN ( cs , i )"	1342:6:31139:31150	5211035	0	True				
ANR	5211070	CallExpression	"CHIN ( cs , i )"		5211035	0					
ANR	5211071	Callee	CHIN		5211035	0					
ANR	5211072	Identifier	CHIN		5211035	0					
ANR	5211073	ArgumentList	cs		5211035	1					
ANR	5211074	Argument	cs		5211035	0					
ANR	5211075	Identifier	cs		5211035	0					
ANR	5211076	Argument	i		5211035	1					
ANR	5211077	Identifier	i		5211035	0					
ANR	5211078	CompoundStatement		6:20:97:97	5211035	1					
ANR	5211079	ReturnStatement	return ( ( char ) i ) ;	1343:3:31158:31174	5211035	0	True				
ANR	5211080	CastExpression	( char ) i		5211035	0					
ANR	5211081	CastTarget	char		5211035	0					
ANR	5211082	Identifier	i		5211035	1					
ANR	5211083	ReturnStatement	return ( 0 ) ;	1346:1:31184:31193	5211035	3	True				
ANR	5211084	PrimaryExpression	0		5211035	0					
ANR	5211085	ReturnType	static int		5211035	1					
ANR	5211086	Identifier	firstch		5211035	2					
ANR	5211087	ParameterList	"struct parse * p , cset * cs"		5211035	3					
ANR	5211088	Parameter	struct parse * p	1336:8:31028:31042	5211035	0	True				
ANR	5211089	ParameterType	struct parse *		5211035	0					
ANR	5211090	Identifier	p		5211035	1					
ANR	5211091	Parameter	cset * cs	1336:25:31045:31052	5211035	1	True				
ANR	5211092	ParameterType	cset *		5211035	0					
ANR	5211093	Identifier	cs		5211035	1					
ANR	5211094	CFGEntryNode	ENTRY		5211035		True				
ANR	5211095	CFGExitNode	EXIT		5211035		True				
ANR	5211096	Symbol	p		5211035						
ANR	5211097	Symbol	cs		5211035						
ANR	5211098	Symbol	* p -> g		5211035						
ANR	5211099	Symbol	css		5211035						
ANR	5211100	Symbol	CHIN		5211035						
ANR	5211101	Symbol	i		5211035						
ANR	5211102	Symbol	* p		5211035						
ANR	5211103	Symbol	* * p		5211035						
ANR	5211104	Symbol	p -> g -> csetsize		5211035						
ANR	5211105	Symbol	p -> g		5211035						
ANR	5211106	Function	nch	1352:0:31261:31442							
ANR	5211107	FunctionDef	"nch (struct parse * p , cset * cs)"		5211106	0					
ANR	5211108	CompoundStatement		1352:42:31303:31442	5211106	0					
ANR	5211109	IdentifierDeclStatement	int i ;	1353:1:31306:31311	5211106	0	True				
ANR	5211110	IdentifierDecl	i		5211106	0					
ANR	5211111	IdentifierDeclType	int		5211106	0					
ANR	5211112	Identifier	i		5211106	1					
ANR	5211113	IdentifierDeclStatement	size_t css = ( size_t ) p -> g -> csetsize ;	1354:1:31314:31349	5211106	1	True				
ANR	5211114	IdentifierDecl	css = ( size_t ) p -> g -> csetsize		5211106	0					
ANR	5211115	IdentifierDeclType	size_t		5211106	0					
ANR	5211116	Identifier	css		5211106	1					
ANR	5211117	AssignmentExpression	css = ( size_t ) p -> g -> csetsize		5211106	2		=			
ANR	5211118	Identifier	css		5211106	0					
ANR	5211119	CastExpression	( size_t ) p -> g -> csetsize		5211106	1					
ANR	5211120	CastTarget	size_t		5211106	0					
ANR	5211121	PtrMemberAccess	p -> g -> csetsize		5211106	1					
ANR	5211122	PtrMemberAccess	p -> g		5211106	0					
ANR	5211123	Identifier	p		5211106	0					
ANR	5211124	Identifier	g		5211106	1					
ANR	5211125	Identifier	csetsize		5211106	1					
ANR	5211126	IdentifierDeclStatement	int n = 0 ;	1355:1:31352:31361	5211106	2	True				
ANR	5211127	IdentifierDecl	n = 0		5211106	0					
ANR	5211128	IdentifierDeclType	int		5211106	0					
ANR	5211129	Identifier	n		5211106	1					
ANR	5211130	AssignmentExpression	n = 0		5211106	2		=			
ANR	5211131	Identifier	n		5211106	0					
ANR	5211132	PrimaryExpression	0		5211106	1					
ANR	5211133	ForStatement	for ( i = 0 ; i < css ; i ++ )		5211106	3					
ANR	5211134	ForInit	i = 0 ;	1357:6:31370:31375	5211106	0	True				
ANR	5211135	AssignmentExpression	i = 0		5211106	0		=			
ANR	5211136	Identifier	i		5211106	0					
ANR	5211137	PrimaryExpression	0		5211106	1					
ANR	5211138	Condition	i < css	1357:13:31377:31383	5211106	1	True				
ANR	5211139	RelationalExpression	i < css		5211106	0		<			
ANR	5211140	Identifier	i		5211106	0					
ANR	5211141	Identifier	css		5211106	1					
ANR	5211142	PostIncDecOperationExpression	i ++	1357:22:31386:31388	5211106	2	True				
ANR	5211143	Identifier	i		5211106	0					
ANR	5211144	IncDec	++		5211106	1					
ANR	5211145	CompoundStatement		6:27:87:87	5211106	3					
ANR	5211146	IfStatement	"if ( CHIN ( cs , i ) )"		5211106	0					
ANR	5211147	Condition	"CHIN ( cs , i )"	1358:6:31399:31410	5211106	0	True				
ANR	5211148	CallExpression	"CHIN ( cs , i )"		5211106	0					
ANR	5211149	Callee	CHIN		5211106	0					
ANR	5211150	Identifier	CHIN		5211106	0					
ANR	5211151	ArgumentList	cs		5211106	1					
ANR	5211152	Argument	cs		5211106	0					
ANR	5211153	Identifier	cs		5211106	0					
ANR	5211154	Argument	i		5211106	1					
ANR	5211155	Identifier	i		5211106	0					
ANR	5211156	CompoundStatement		7:20:109:109	5211106	1					
ANR	5211157	ExpressionStatement	n ++	1359:3:31418:31421	5211106	0	True				
ANR	5211158	PostIncDecOperationExpression	n ++		5211106	0					
ANR	5211159	Identifier	n		5211106	0					
ANR	5211160	IncDec	++		5211106	1					
ANR	5211161	ReturnStatement	return ( n ) ;	1362:1:31431:31440	5211106	4	True				
ANR	5211162	Identifier	n		5211106	0					
ANR	5211163	ReturnType	static int		5211106	1					
ANR	5211164	Identifier	nch		5211106	2					
ANR	5211165	ParameterList	"struct parse * p , cset * cs"		5211106	3					
ANR	5211166	Parameter	struct parse * p	1352:15:31276:31290	5211106	0	True				
ANR	5211167	ParameterType	struct parse *		5211106	0					
ANR	5211168	Identifier	p		5211106	1					
ANR	5211169	Parameter	cset * cs	1352:32:31293:31300	5211106	1	True				
ANR	5211170	ParameterType	cset *		5211106	0					
ANR	5211171	Identifier	cs		5211106	1					
ANR	5211172	CFGEntryNode	ENTRY		5211106		True				
ANR	5211173	CFGExitNode	EXIT		5211106		True				
ANR	5211174	Symbol	p		5211106						
ANR	5211175	Symbol	cs		5211106						
ANR	5211176	Symbol	* p -> g		5211106						
ANR	5211177	Symbol	css		5211106						
ANR	5211178	Symbol	CHIN		5211106						
ANR	5211179	Symbol	i		5211106						
ANR	5211180	Symbol	* p		5211106						
ANR	5211181	Symbol	* * p		5211106						
ANR	5211182	Symbol	p -> g -> csetsize		5211106						
ANR	5211183	Symbol	n		5211106						
ANR	5211184	Symbol	p -> g		5211106						
ANR	5211185	Function	mcadd	1368:0:31497:31873							
ANR	5211186	FunctionDef	"mcadd (struct parse * p , cset * cs , char * cp)"		5211185	0					
ANR	5211187	CompoundStatement		1368:56:31553:31873	5211185	0					
ANR	5211188	IdentifierDeclStatement	size_t oldend = cs -> smultis ;	1369:1:31556:31583	5211185	0	True				
ANR	5211189	IdentifierDecl	oldend = cs -> smultis		5211185	0					
ANR	5211190	IdentifierDeclType	size_t		5211185	0					
ANR	5211191	Identifier	oldend		5211185	1					
ANR	5211192	AssignmentExpression	oldend = cs -> smultis		5211185	2		=			
ANR	5211193	Identifier	oldend		5211185	0					
ANR	5211194	PtrMemberAccess	cs -> smultis		5211185	1					
ANR	5211195	Identifier	cs		5211185	0					
ANR	5211196	Identifier	smultis		5211185	1					
ANR	5211197	IdentifierDeclStatement	void * np ;	1370:1:31586:31594	5211185	1	True				
ANR	5211198	IdentifierDecl	* np		5211185	0					
ANR	5211199	IdentifierDeclType	void *		5211185	0					
ANR	5211200	Identifier	np		5211185	1					
ANR	5211201	ExpressionStatement	cs -> smultis += strlen ( cp ) + 1	1372:1:31598:31627	5211185	2	True				
ANR	5211202	AssignmentExpression	cs -> smultis += strlen ( cp ) + 1		5211185	0		+=			
ANR	5211203	PtrMemberAccess	cs -> smultis		5211185	0					
ANR	5211204	Identifier	cs		5211185	0					
ANR	5211205	Identifier	smultis		5211185	1					
ANR	5211206	AdditiveExpression	strlen ( cp ) + 1		5211185	1		+			
ANR	5211207	CallExpression	strlen ( cp )		5211185	0					
ANR	5211208	Callee	strlen		5211185	0					
ANR	5211209	Identifier	strlen		5211185	0					
ANR	5211210	ArgumentList	cp		5211185	1					
ANR	5211211	Argument	cp		5211185	0					
ANR	5211212	Identifier	cp		5211185	0					
ANR	5211213	PrimaryExpression	1		5211185	1					
ANR	5211214	ExpressionStatement	"np = realloc ( cs -> multis , cs -> smultis )"	1373:1:31630:31667	5211185	3	True				
ANR	5211215	AssignmentExpression	"np = realloc ( cs -> multis , cs -> smultis )"		5211185	0		=			
ANR	5211216	Identifier	np		5211185	0					
ANR	5211217	CallExpression	"realloc ( cs -> multis , cs -> smultis )"		5211185	1					
ANR	5211218	Callee	realloc		5211185	0					
ANR	5211219	Identifier	realloc		5211185	0					
ANR	5211220	ArgumentList	cs -> multis		5211185	1					
ANR	5211221	Argument	cs -> multis		5211185	0					
ANR	5211222	PtrMemberAccess	cs -> multis		5211185	0					
ANR	5211223	Identifier	cs		5211185	0					
ANR	5211224	Identifier	multis		5211185	1					
ANR	5211225	Argument	cs -> smultis		5211185	1					
ANR	5211226	PtrMemberAccess	cs -> smultis		5211185	0					
ANR	5211227	Identifier	cs		5211185	0					
ANR	5211228	Identifier	smultis		5211185	1					
ANR	5211229	IfStatement	if ( ! np )		5211185	4					
ANR	5211230	Condition	! np	1374:5:31674:31676	5211185	0	True				
ANR	5211231	UnaryOperationExpression	! np		5211185	0					
ANR	5211232	UnaryOperator	!		5211185	0					
ANR	5211233	Identifier	np		5211185	1					
ANR	5211234	CompoundStatement		7:10:125:125	5211185	1					
ANR	5211235	IfStatement	if ( cs -> multis )		5211185	0					
ANR	5211236	Condition	cs -> multis	1375:6:31687:31696	5211185	0	True				
ANR	5211237	PtrMemberAccess	cs -> multis		5211185	0					
ANR	5211238	Identifier	cs		5211185	0					
ANR	5211239	Identifier	multis		5211185	1					
ANR	5211240	CompoundStatement		8:18:145:145	5211185	1					
ANR	5211241	ExpressionStatement	free ( cs -> multis )	1376:3:31704:31721	5211185	0	True				
ANR	5211242	CallExpression	free ( cs -> multis )		5211185	0					
ANR	5211243	Callee	free		5211185	0					
ANR	5211244	Identifier	free		5211185	0					
ANR	5211245	ArgumentList	cs -> multis		5211185	1					
ANR	5211246	Argument	cs -> multis		5211185	0					
ANR	5211247	PtrMemberAccess	cs -> multis		5211185	0					
ANR	5211248	Identifier	cs		5211185	0					
ANR	5211249	Identifier	multis		5211185	1					
ANR	5211250	ExpressionStatement	cs -> multis = NULL	1378:2:31729:31746	5211185	1	True				
ANR	5211251	AssignmentExpression	cs -> multis = NULL		5211185	0		=			
ANR	5211252	PtrMemberAccess	cs -> multis		5211185	0					
ANR	5211253	Identifier	cs		5211185	0					
ANR	5211254	Identifier	multis		5211185	1					
ANR	5211255	Identifier	NULL		5211185	1					
ANR	5211256	ExpressionStatement	SETERROR ( R_REGEX_ESPACE )	1379:2:31750:31774	5211185	2	True				
ANR	5211257	CallExpression	SETERROR ( R_REGEX_ESPACE )		5211185	0					
ANR	5211258	Callee	SETERROR		5211185	0					
ANR	5211259	Identifier	SETERROR		5211185	0					
ANR	5211260	ArgumentList	R_REGEX_ESPACE		5211185	1					
ANR	5211261	Argument	R_REGEX_ESPACE		5211185	0					
ANR	5211262	Identifier	R_REGEX_ESPACE		5211185	0					
ANR	5211263	ReturnStatement	return ;	1380:2:31778:31784	5211185	3	True				
ANR	5211264	ExpressionStatement	cs -> multis = np	1382:1:31790:31805	5211185	5	True				
ANR	5211265	AssignmentExpression	cs -> multis = np		5211185	0		=			
ANR	5211266	PtrMemberAccess	cs -> multis		5211185	0					
ANR	5211267	Identifier	cs		5211185	0					
ANR	5211268	Identifier	multis		5211185	1					
ANR	5211269	Identifier	np		5211185	1					
ANR	5211270	ExpressionStatement	"STRLCPY ( cs -> multis + oldend - 1 , cp , cs -> smultis - oldend + 1 )"	1384:1:31809:31871	5211185	6	True				
ANR	5211271	CallExpression	"STRLCPY ( cs -> multis + oldend - 1 , cp , cs -> smultis - oldend + 1 )"		5211185	0					
ANR	5211272	Callee	STRLCPY		5211185	0					
ANR	5211273	Identifier	STRLCPY		5211185	0					
ANR	5211274	ArgumentList	cs -> multis + oldend - 1		5211185	1					
ANR	5211275	Argument	cs -> multis + oldend - 1		5211185	0					
ANR	5211276	AdditiveExpression	cs -> multis + oldend - 1		5211185	0		+			
ANR	5211277	PtrMemberAccess	cs -> multis		5211185	0					
ANR	5211278	Identifier	cs		5211185	0					
ANR	5211279	Identifier	multis		5211185	1					
ANR	5211280	AdditiveExpression	oldend - 1		5211185	1		-			
ANR	5211281	Identifier	oldend		5211185	0					
ANR	5211282	PrimaryExpression	1		5211185	1					
ANR	5211283	Argument	cp		5211185	1					
ANR	5211284	Identifier	cp		5211185	0					
ANR	5211285	Argument	cs -> smultis - oldend + 1		5211185	2					
ANR	5211286	AdditiveExpression	cs -> smultis - oldend + 1		5211185	0		-			
ANR	5211287	PtrMemberAccess	cs -> smultis		5211185	0					
ANR	5211288	Identifier	cs		5211185	0					
ANR	5211289	Identifier	smultis		5211185	1					
ANR	5211290	AdditiveExpression	oldend + 1		5211185	1		+			
ANR	5211291	Identifier	oldend		5211185	0					
ANR	5211292	PrimaryExpression	1		5211185	1					
ANR	5211293	ReturnType	static void		5211185	1					
ANR	5211294	Identifier	mcadd		5211185	2					
ANR	5211295	ParameterList	"struct parse * p , cset * cs , char * cp"		5211185	3					
ANR	5211296	Parameter	struct parse * p	1368:19:31516:31530	5211185	0	True				
ANR	5211297	ParameterType	struct parse *		5211185	0					
ANR	5211298	Identifier	p		5211185	1					
ANR	5211299	Parameter	cset * cs	1368:36:31533:31540	5211185	1	True				
ANR	5211300	ParameterType	cset *		5211185	0					
ANR	5211301	Identifier	cs		5211185	1					
ANR	5211302	Parameter	char * cp	1368:46:31543:31550	5211185	2	True				
ANR	5211303	ParameterType	char *		5211185	0					
ANR	5211304	Identifier	cp		5211185	1					
ANR	5211305	CFGEntryNode	ENTRY		5211185		True				
ANR	5211306	CFGExitNode	EXIT		5211185		True				
ANR	5211307	Symbol	p		5211185						
ANR	5211308	Symbol	cs		5211185						
ANR	5211309	Symbol	strlen		5211185						
ANR	5211310	Symbol	cs -> multis		5211185						
ANR	5211311	Symbol	np		5211185						
ANR	5211312	Symbol	NULL		5211185						
ANR	5211313	Symbol	R_REGEX_ESPACE		5211185						
ANR	5211314	Symbol	* cs		5211185						
ANR	5211315	Symbol	realloc		5211185						
ANR	5211316	Symbol	cp		5211185						
ANR	5211317	Symbol	cs -> smultis		5211185						
ANR	5211318	Symbol	oldend		5211185						
ANR	5211319	Function	mcinvert	1394:0:32048:32140							
ANR	5211320	FunctionDef	"mcinvert (struct parse * p , cset * cs)"		5211319	0					
ANR	5211321	CompoundStatement		1394:48:32096:32140	5211319	0					
ANR	5211322	ReturnStatement	return ;	1396:1:32132:32138	5211319	0	True				
ANR	5211323	ReturnType	static void		5211319	1					
ANR	5211324	Identifier	mcinvert		5211319	2					
ANR	5211325	ParameterList	"struct parse * p , cset * cs"		5211319	3					
ANR	5211326	Parameter	struct parse * p	1394:21:32069:32083	5211319	0	True				
ANR	5211327	ParameterType	struct parse *		5211319	0					
ANR	5211328	Identifier	p		5211319	1					
ANR	5211329	Parameter	cset * cs	1394:38:32086:32093	5211319	1	True				
ANR	5211330	ParameterType	cset *		5211319	0					
ANR	5211331	Identifier	cs		5211319	1					
ANR	5211332	CFGEntryNode	ENTRY		5211319		True				
ANR	5211333	CFGExitNode	EXIT		5211319		True				
ANR	5211334	Symbol	p		5211319						
ANR	5211335	Symbol	cs		5211319						
ANR	5211336	Function	mccase	1406:0:32331:32421							
ANR	5211337	FunctionDef	"mccase (struct parse * p , cset * cs)"		5211336	0					
ANR	5211338	CompoundStatement		1406:46:32377:32421	5211336	0					
ANR	5211339	ReturnStatement	return ;	1408:1:32413:32419	5211336	0	True				
ANR	5211340	ReturnType	static void		5211336	1					
ANR	5211341	Identifier	mccase		5211336	2					
ANR	5211342	ParameterList	"struct parse * p , cset * cs"		5211336	3					
ANR	5211343	Parameter	struct parse * p	1406:19:32350:32364	5211336	0	True				
ANR	5211344	ParameterType	struct parse *		5211336	0					
ANR	5211345	Identifier	p		5211336	1					
ANR	5211346	Parameter	cset * cs	1406:36:32367:32374	5211336	1	True				
ANR	5211347	ParameterType	cset *		5211336	0					
ANR	5211348	Identifier	cs		5211336	1					
ANR	5211349	CFGEntryNode	ENTRY		5211336		True				
ANR	5211350	CFGExitNode	EXIT		5211336		True				
ANR	5211351	Symbol	p		5211336						
ANR	5211352	Symbol	cs		5211336						
ANR	5211353	Function	isinsets	1414:0:32476:32760							
ANR	5211354	FunctionDef	"isinsets (struct re_guts * g , int c)"		5211353	0					
ANR	5211355	CompoundStatement		1416:0:32540:32760	5211353	0					
ANR	5211356	IdentifierDeclStatement	ut8 * col ;	1417:1:32543:32551	5211353	0	True				
ANR	5211357	IdentifierDecl	* col		5211353	0					
ANR	5211358	IdentifierDeclType	ut8 *		5211353	0					
ANR	5211359	Identifier	col		5211353	1					
ANR	5211360	IdentifierDeclStatement	int i ;	1418:1:32554:32559	5211353	1	True				
ANR	5211361	IdentifierDecl	i		5211353	0					
ANR	5211362	IdentifierDeclType	int		5211353	0					
ANR	5211363	Identifier	i		5211353	1					
ANR	5211364	IdentifierDeclStatement	int ncols = ( g -> ncsets + ( CHAR_BIT - 1 ) ) / CHAR_BIT ;	1419:1:32562:32609	5211353	2	True				
ANR	5211365	IdentifierDecl	ncols = ( g -> ncsets + ( CHAR_BIT - 1 ) ) / CHAR_BIT		5211353	0					
ANR	5211366	IdentifierDeclType	int		5211353	0					
ANR	5211367	Identifier	ncols		5211353	1					
ANR	5211368	AssignmentExpression	ncols = ( g -> ncsets + ( CHAR_BIT - 1 ) ) / CHAR_BIT		5211353	2		=			
ANR	5211369	Identifier	ncols		5211353	0					
ANR	5211370	MultiplicativeExpression	( g -> ncsets + ( CHAR_BIT - 1 ) ) / CHAR_BIT		5211353	1		/			
ANR	5211371	AdditiveExpression	g -> ncsets + ( CHAR_BIT - 1 )		5211353	0		+			
ANR	5211372	PtrMemberAccess	g -> ncsets		5211353	0					
ANR	5211373	Identifier	g		5211353	0					
ANR	5211374	Identifier	ncsets		5211353	1					
ANR	5211375	AdditiveExpression	CHAR_BIT - 1		5211353	1		-			
ANR	5211376	Identifier	CHAR_BIT		5211353	0					
ANR	5211377	PrimaryExpression	1		5211353	1					
ANR	5211378	Identifier	CHAR_BIT		5211353	1					
ANR	5211379	IdentifierDeclStatement	unsigned uc = ( ut8 ) c ;	1420:1:32612:32632	5211353	3	True				
ANR	5211380	IdentifierDecl	uc = ( ut8 ) c		5211353	0					
ANR	5211381	IdentifierDeclType	unsigned		5211353	0					
ANR	5211382	Identifier	uc		5211353	1					
ANR	5211383	AssignmentExpression	uc = ( ut8 ) c		5211353	2		=			
ANR	5211384	Identifier	uc		5211353	0					
ANR	5211385	CastExpression	( ut8 ) c		5211353	1					
ANR	5211386	CastTarget	ut8		5211353	0					
ANR	5211387	Identifier	c		5211353	1					
ANR	5211388	ForStatement	"for ( i = 0 , col = g -> setbits ; i < ncols ; i ++ , col += g -> csetsize )"		5211353	4					
ANR	5211389	ForInit	"i = 0 , col = g -> setbits ;"	1422:6:32641:32664	5211353	0	True				
ANR	5211390	Expression	"i = 0 , col = g -> setbits"		5211353	0					
ANR	5211391	AssignmentExpression	i = 0		5211353	0		=			
ANR	5211392	Identifier	i		5211353	0					
ANR	5211393	PrimaryExpression	0		5211353	1					
ANR	5211394	AssignmentExpression	col = g -> setbits		5211353	1		=			
ANR	5211395	Identifier	col		5211353	0					
ANR	5211396	PtrMemberAccess	g -> setbits		5211353	1					
ANR	5211397	Identifier	g		5211353	0					
ANR	5211398	Identifier	setbits		5211353	1					
ANR	5211399	Condition	i < ncols	1422:31:32666:32674	5211353	1	True				
ANR	5211400	RelationalExpression	i < ncols		5211353	0		<			
ANR	5211401	Identifier	i		5211353	0					
ANR	5211402	Identifier	ncols		5211353	1					
ANR	5211403	Expression	"i ++ , col += g -> csetsize"	1422:42:32677:32699	5211353	2	True				
ANR	5211404	PostIncDecOperationExpression	i ++		5211353	0					
ANR	5211405	Identifier	i		5211353	0					
ANR	5211406	IncDec	++		5211353	1					
ANR	5211407	AssignmentExpression	col += g -> csetsize		5211353	1		+=			
ANR	5211408	Identifier	col		5211353	0					
ANR	5211409	PtrMemberAccess	g -> csetsize		5211353	1					
ANR	5211410	Identifier	g		5211353	0					
ANR	5211411	Identifier	csetsize		5211353	1					
ANR	5211412	CompoundStatement		7:67:161:161	5211353	3					
ANR	5211413	IfStatement	if ( col [ uc ] != 0 )		5211353	0					
ANR	5211414	Condition	col [ uc ] != 0	1423:6:32710:32721	5211353	0	True				
ANR	5211415	EqualityExpression	col [ uc ] != 0		5211353	0		!=			
ANR	5211416	ArrayIndexing	col [ uc ]		5211353	0					
ANR	5211417	Identifier	col		5211353	0					
ANR	5211418	Identifier	uc		5211353	1					
ANR	5211419	PrimaryExpression	0		5211353	1					
ANR	5211420	CompoundStatement		8:20:183:183	5211353	1					
ANR	5211421	ReturnStatement	return ( 1 ) ;	1424:3:32729:32739	5211353	0	True				
ANR	5211422	PrimaryExpression	1		5211353	0					
ANR	5211423	ReturnStatement	return ( 0 ) ;	1427:1:32749:32758	5211353	5	True				
ANR	5211424	PrimaryExpression	0		5211353	0					
ANR	5211425	ReturnType	static int		5211353	1					
ANR	5211426	Identifier	isinsets		5211353	2					
ANR	5211427	ParameterList	"struct re_guts * g , int c"		5211353	3					
ANR	5211428	Parameter	struct re_guts * g	1415:9:32514:32530	5211353	0	True				
ANR	5211429	ParameterType	struct re_guts *		5211353	0					
ANR	5211430	Identifier	g		5211353	1					
ANR	5211431	Parameter	int c	1415:28:32533:32537	5211353	1	True				
ANR	5211432	ParameterType	int		5211353	0					
ANR	5211433	Identifier	c		5211353	1					
ANR	5211434	CFGEntryNode	ENTRY		5211353		True				
ANR	5211435	CFGExitNode	EXIT		5211353		True				
ANR	5211436	Symbol	col		5211353						
ANR	5211437	Symbol	c		5211353						
ANR	5211438	Symbol	g		5211353						
ANR	5211439	Symbol	i		5211353						
ANR	5211440	Symbol	CHAR_BIT		5211353						
ANR	5211441	Symbol	uc		5211353						
ANR	5211442	Symbol	* g		5211353						
ANR	5211443	Symbol	* col		5211353						
ANR	5211444	Symbol	* uc		5211353						
ANR	5211445	Symbol	g -> setbits		5211353						
ANR	5211446	Symbol	g -> ncsets		5211353						
ANR	5211447	Symbol	ncols		5211353						
ANR	5211448	Symbol	g -> csetsize		5211353						
ANR	5211449	Function	samesets	1433:0:32835:33163							
ANR	5211450	FunctionDef	"samesets (struct re_guts * g , int c1 , int c2)"		5211449	0					
ANR	5211451	CompoundStatement		1435:0:32908:33163	5211449	0					
ANR	5211452	IdentifierDeclStatement	ut8 * col ;	1436:1:32911:32919	5211449	0	True				
ANR	5211453	IdentifierDecl	* col		5211449	0					
ANR	5211454	IdentifierDeclType	ut8 *		5211449	0					
ANR	5211455	Identifier	col		5211449	1					
ANR	5211456	IdentifierDeclStatement	int i ;	1437:1:32922:32927	5211449	1	True				
ANR	5211457	IdentifierDecl	i		5211449	0					
ANR	5211458	IdentifierDeclType	int		5211449	0					
ANR	5211459	Identifier	i		5211449	1					
ANR	5211460	IdentifierDeclStatement	int ncols = ( g -> ncsets + ( CHAR_BIT - 1 ) ) / CHAR_BIT ;	1438:1:32930:32977	5211449	2	True				
ANR	5211461	IdentifierDecl	ncols = ( g -> ncsets + ( CHAR_BIT - 1 ) ) / CHAR_BIT		5211449	0					
ANR	5211462	IdentifierDeclType	int		5211449	0					
ANR	5211463	Identifier	ncols		5211449	1					
ANR	5211464	AssignmentExpression	ncols = ( g -> ncsets + ( CHAR_BIT - 1 ) ) / CHAR_BIT		5211449	2		=			
ANR	5211465	Identifier	ncols		5211449	0					
ANR	5211466	MultiplicativeExpression	( g -> ncsets + ( CHAR_BIT - 1 ) ) / CHAR_BIT		5211449	1		/			
ANR	5211467	AdditiveExpression	g -> ncsets + ( CHAR_BIT - 1 )		5211449	0		+			
ANR	5211468	PtrMemberAccess	g -> ncsets		5211449	0					
ANR	5211469	Identifier	g		5211449	0					
ANR	5211470	Identifier	ncsets		5211449	1					
ANR	5211471	AdditiveExpression	CHAR_BIT - 1		5211449	1		-			
ANR	5211472	Identifier	CHAR_BIT		5211449	0					
ANR	5211473	PrimaryExpression	1		5211449	1					
ANR	5211474	Identifier	CHAR_BIT		5211449	1					
ANR	5211475	IdentifierDeclStatement	unsigned uc1 = ( ut8 ) c1 ;	1439:1:32980:33002	5211449	3	True				
ANR	5211476	IdentifierDecl	uc1 = ( ut8 ) c1		5211449	0					
ANR	5211477	IdentifierDeclType	unsigned		5211449	0					
ANR	5211478	Identifier	uc1		5211449	1					
ANR	5211479	AssignmentExpression	uc1 = ( ut8 ) c1		5211449	2		=			
ANR	5211480	Identifier	uc1		5211449	0					
ANR	5211481	CastExpression	( ut8 ) c1		5211449	1					
ANR	5211482	CastTarget	ut8		5211449	0					
ANR	5211483	Identifier	c1		5211449	1					
ANR	5211484	IdentifierDeclStatement	unsigned uc2 = ( ut8 ) c2 ;	1440:1:33005:33027	5211449	4	True				
ANR	5211485	IdentifierDecl	uc2 = ( ut8 ) c2		5211449	0					
ANR	5211486	IdentifierDeclType	unsigned		5211449	0					
ANR	5211487	Identifier	uc2		5211449	1					
ANR	5211488	AssignmentExpression	uc2 = ( ut8 ) c2		5211449	2		=			
ANR	5211489	Identifier	uc2		5211449	0					
ANR	5211490	CastExpression	( ut8 ) c2		5211449	1					
ANR	5211491	CastTarget	ut8		5211449	0					
ANR	5211492	Identifier	c2		5211449	1					
ANR	5211493	ForStatement	"for ( i = 0 , col = g -> setbits ; i < ncols ; i ++ , col += g -> csetsize )"		5211449	5					
ANR	5211494	ForInit	"i = 0 , col = g -> setbits ;"	1442:6:33036:33059	5211449	0	True				
ANR	5211495	Expression	"i = 0 , col = g -> setbits"		5211449	0					
ANR	5211496	AssignmentExpression	i = 0		5211449	0		=			
ANR	5211497	Identifier	i		5211449	0					
ANR	5211498	PrimaryExpression	0		5211449	1					
ANR	5211499	AssignmentExpression	col = g -> setbits		5211449	1		=			
ANR	5211500	Identifier	col		5211449	0					
ANR	5211501	PtrMemberAccess	g -> setbits		5211449	1					
ANR	5211502	Identifier	g		5211449	0					
ANR	5211503	Identifier	setbits		5211449	1					
ANR	5211504	Condition	i < ncols	1442:31:33061:33069	5211449	1	True				
ANR	5211505	RelationalExpression	i < ncols		5211449	0		<			
ANR	5211506	Identifier	i		5211449	0					
ANR	5211507	Identifier	ncols		5211449	1					
ANR	5211508	Expression	"i ++ , col += g -> csetsize"	1442:42:33072:33094	5211449	2	True				
ANR	5211509	PostIncDecOperationExpression	i ++		5211449	0					
ANR	5211510	Identifier	i		5211449	0					
ANR	5211511	IncDec	++		5211449	1					
ANR	5211512	AssignmentExpression	col += g -> csetsize		5211449	1		+=			
ANR	5211513	Identifier	col		5211449	0					
ANR	5211514	PtrMemberAccess	g -> csetsize		5211449	1					
ANR	5211515	Identifier	g		5211449	0					
ANR	5211516	Identifier	csetsize		5211449	1					
ANR	5211517	CompoundStatement		8:67:188:188	5211449	3					
ANR	5211518	IfStatement	if ( col [ uc1 ] != col [ uc2 ] )		5211449	0					
ANR	5211519	Condition	col [ uc1 ] != col [ uc2 ]	1443:6:33105:33124	5211449	0	True				
ANR	5211520	EqualityExpression	col [ uc1 ] != col [ uc2 ]		5211449	0		!=			
ANR	5211521	ArrayIndexing	col [ uc1 ]		5211449	0					
ANR	5211522	Identifier	col		5211449	0					
ANR	5211523	Identifier	uc1		5211449	1					
ANR	5211524	ArrayIndexing	col [ uc2 ]		5211449	1					
ANR	5211525	Identifier	col		5211449	0					
ANR	5211526	Identifier	uc2		5211449	1					
ANR	5211527	CompoundStatement		9:28:218:218	5211449	1					
ANR	5211528	ReturnStatement	return ( 0 ) ;	1444:3:33132:33142	5211449	0	True				
ANR	5211529	PrimaryExpression	0		5211449	0					
ANR	5211530	ReturnStatement	return ( 1 ) ;	1447:1:33152:33161	5211449	6	True				
ANR	5211531	PrimaryExpression	1		5211449	0					
ANR	5211532	ReturnType	static int		5211449	1					
ANR	5211533	Identifier	samesets		5211449	2					
ANR	5211534	ParameterList	"struct re_guts * g , int c1 , int c2"		5211449	3					
ANR	5211535	Parameter	struct re_guts * g	1434:9:32873:32889	5211449	0	True				
ANR	5211536	ParameterType	struct re_guts *		5211449	0					
ANR	5211537	Identifier	g		5211449	1					
ANR	5211538	Parameter	int c1	1434:28:32892:32897	5211449	1	True				
ANR	5211539	ParameterType	int		5211449	0					
ANR	5211540	Identifier	c1		5211449	1					
ANR	5211541	Parameter	int c2	1434:36:32900:32905	5211449	2	True				
ANR	5211542	ParameterType	int		5211449	0					
ANR	5211543	Identifier	c2		5211449	1					
ANR	5211544	CFGEntryNode	ENTRY		5211449		True				
ANR	5211545	CFGExitNode	EXIT		5211449		True				
ANR	5211546	Symbol	col		5211449						
ANR	5211547	Symbol	uc1		5211449						
ANR	5211548	Symbol	uc2		5211449						
ANR	5211549	Symbol	g		5211449						
ANR	5211550	Symbol	i		5211449						
ANR	5211551	Symbol	* uc1		5211449						
ANR	5211552	Symbol	c1		5211449						
ANR	5211553	Symbol	CHAR_BIT		5211449						
ANR	5211554	Symbol	* uc2		5211449						
ANR	5211555	Symbol	c2		5211449						
ANR	5211556	Symbol	* g		5211449						
ANR	5211557	Symbol	* col		5211449						
ANR	5211558	Symbol	g -> setbits		5211449						
ANR	5211559	Symbol	g -> ncsets		5211449						
ANR	5211560	Symbol	ncols		5211449						
ANR	5211561	Symbol	g -> csetsize		5211449						
ANR	5211562	Function	categorize	1453:0:33219:33718							
ANR	5211563	FunctionDef	"categorize (struct parse * p , struct re_guts * g)"		5211562	0					
ANR	5211564	CompoundStatement		1455:0:33278:33718	5211562	0					
ANR	5211565	IdentifierDeclStatement	cat_t * cats = g ? g -> categories : NULL ;	1456:1:33281:33318	5211562	0	True				
ANR	5211566	IdentifierDecl	* cats = g ? g -> categories : NULL		5211562	0					
ANR	5211567	IdentifierDeclType	cat_t *		5211562	0					
ANR	5211568	Identifier	cats		5211562	1					
ANR	5211569	AssignmentExpression	* cats = g ? g -> categories : NULL		5211562	2		=			
ANR	5211570	Identifier	cats		5211562	0					
ANR	5211571	ConditionalExpression	g ? g -> categories : NULL		5211562	1					
ANR	5211572	Condition	g		5211562	0					
ANR	5211573	Identifier	g		5211562	0					
ANR	5211574	PtrMemberAccess	g -> categories		5211562	1					
ANR	5211575	Identifier	g		5211562	0					
ANR	5211576	Identifier	categories		5211562	1					
ANR	5211577	Identifier	NULL		5211562	2					
ANR	5211578	IdentifierDeclStatement	unsigned int c ;	1457:1:33321:33335	5211562	1	True				
ANR	5211579	IdentifierDecl	c		5211562	0					
ANR	5211580	IdentifierDeclType	unsigned int		5211562	0					
ANR	5211581	Identifier	c		5211562	1					
ANR	5211582	IdentifierDeclStatement	unsigned int c2 ;	1458:1:33338:33353	5211562	2	True				
ANR	5211583	IdentifierDecl	c2		5211562	0					
ANR	5211584	IdentifierDeclType	unsigned int		5211562	0					
ANR	5211585	Identifier	c2		5211562	1					
ANR	5211586	IdentifierDeclStatement	cat_t cat ;	1459:1:33356:33365	5211562	3	True				
ANR	5211587	IdentifierDecl	cat		5211562	0					
ANR	5211588	IdentifierDeclType	cat_t		5211562	0					
ANR	5211589	Identifier	cat		5211562	1					
ANR	5211590	IfStatement	if ( ! p || p -> error != 0 || ! cats )		5211562	4					
ANR	5211591	Condition	! p || p -> error != 0 || ! cats	1462:5:33416:33443	5211562	0	True				
ANR	5211592	OrExpression	! p || p -> error != 0 || ! cats		5211562	0		||			
ANR	5211593	UnaryOperationExpression	! p		5211562	0					
ANR	5211594	UnaryOperator	!		5211562	0					
ANR	5211595	Identifier	p		5211562	1					
ANR	5211596	OrExpression	p -> error != 0 || ! cats		5211562	1		||			
ANR	5211597	EqualityExpression	p -> error != 0		5211562	0		!=			
ANR	5211598	PtrMemberAccess	p -> error		5211562	0					
ANR	5211599	Identifier	p		5211562	0					
ANR	5211600	Identifier	error		5211562	1					
ANR	5211601	PrimaryExpression	0		5211562	1					
ANR	5211602	UnaryOperationExpression	! cats		5211562	1					
ANR	5211603	UnaryOperator	!		5211562	0					
ANR	5211604	Identifier	cats		5211562	1					
ANR	5211605	CompoundStatement		8:35:167:167	5211562	1					
ANR	5211606	ReturnStatement	return ;	1463:2:33450:33456	5211562	0	True				
ANR	5211607	ForStatement	for ( c = CHAR_MIN ; c <= CHAR_MAX ; c ++ )		5211562	5					
ANR	5211608	ForInit	c = CHAR_MIN ;	1466:6:33468:33480	5211562	0	True				
ANR	5211609	AssignmentExpression	c = CHAR_MIN		5211562	0		=			
ANR	5211610	Identifier	c		5211562	0					
ANR	5211611	Identifier	CHAR_MIN		5211562	1					
ANR	5211612	Condition	c <= CHAR_MAX	1466:20:33482:33494	5211562	1	True				
ANR	5211613	RelationalExpression	c <= CHAR_MAX		5211562	0		<=			
ANR	5211614	Identifier	c		5211562	0					
ANR	5211615	Identifier	CHAR_MAX		5211562	1					
ANR	5211616	PostIncDecOperationExpression	c ++	1466:35:33497:33499	5211562	2	True				
ANR	5211617	Identifier	c		5211562	0					
ANR	5211618	IncDec	++		5211562	1					
ANR	5211619	CompoundStatement		12:40:223:223	5211562	3					
ANR	5211620	IfStatement	"if ( * ( cats + c ) && isinsets ( g , c ) )"		5211562	0					
ANR	5211621	Condition	"* ( cats + c ) && isinsets ( g , c )"	1467:7:33511:33537	5211562	0	True				
ANR	5211622	AndExpression	"* ( cats + c ) && isinsets ( g , c )"		5211562	0		&&			
ANR	5211623	UnaryOperationExpression	* ( cats + c )		5211562	0					
ANR	5211624	UnaryOperator	*		5211562	0					
ANR	5211625	AdditiveExpression	cats + c		5211562	1		+			
ANR	5211626	Identifier	cats		5211562	0					
ANR	5211627	Identifier	c		5211562	1					
ANR	5211628	CallExpression	"isinsets ( g , c )"		5211562	1					
ANR	5211629	Callee	isinsets		5211562	0					
ANR	5211630	Identifier	isinsets		5211562	0					
ANR	5211631	ArgumentList	g		5211562	1					
ANR	5211632	Argument	g		5211562	0					
ANR	5211633	Identifier	g		5211562	0					
ANR	5211634	Argument	c		5211562	1					
ANR	5211635	Identifier	c		5211562	0					
ANR	5211636	CompoundStatement		13:36:261:261	5211562	1					
ANR	5211637	ExpressionStatement	cat = g -> ncategories ++	1468:3:33545:33567	5211562	0	True				
ANR	5211638	AssignmentExpression	cat = g -> ncategories ++		5211562	0		=			
ANR	5211639	Identifier	cat		5211562	0					
ANR	5211640	PostIncDecOperationExpression	g -> ncategories ++		5211562	1					
ANR	5211641	PtrMemberAccess	g -> ncategories		5211562	0					
ANR	5211642	Identifier	g		5211562	0					
ANR	5211643	Identifier	ncategories		5211562	1					
ANR	5211644	IncDec	++		5211562	1					
ANR	5211645	ExpressionStatement	cats [ c ] = cat	1469:3:33572:33585	5211562	1	True				
ANR	5211646	AssignmentExpression	cats [ c ] = cat		5211562	0		=			
ANR	5211647	ArrayIndexing	cats [ c ]		5211562	0					
ANR	5211648	Identifier	cats		5211562	0					
ANR	5211649	Identifier	c		5211562	1					
ANR	5211650	Identifier	cat		5211562	1					
ANR	5211651	ForStatement	for ( c2 = c + 1 ; c2 <= CHAR_MAX ; c2 ++ )		5211562	2					
ANR	5211652	ForInit	c2 = c + 1 ;	1470:8:33595:33605	5211562	0	True				
ANR	5211653	AssignmentExpression	c2 = c + 1		5211562	0		=			
ANR	5211654	Identifier	c2		5211562	0					
ANR	5211655	AdditiveExpression	c + 1		5211562	1		+			
ANR	5211656	Identifier	c		5211562	0					
ANR	5211657	PrimaryExpression	1		5211562	1					
ANR	5211658	Condition	c2 <= CHAR_MAX	1470:20:33607:33620	5211562	1	True				
ANR	5211659	RelationalExpression	c2 <= CHAR_MAX		5211562	0		<=			
ANR	5211660	Identifier	c2		5211562	0					
ANR	5211661	Identifier	CHAR_MAX		5211562	1					
ANR	5211662	PostIncDecOperationExpression	c2 ++	1470:36:33623:33626	5211562	2	True				
ANR	5211663	Identifier	c2		5211562	0					
ANR	5211664	IncDec	++		5211562	1					
ANR	5211665	CompoundStatement		16:42:350:350	5211562	3					
ANR	5211666	IfStatement	"if ( cats [ c2 ] == 0 && samesets ( g , c , c2 ) )"		5211562	0					
ANR	5211667	Condition	"cats [ c2 ] == 0 && samesets ( g , c , c2 )"	1471:8:33639:33674	5211562	0	True				
ANR	5211668	AndExpression	"cats [ c2 ] == 0 && samesets ( g , c , c2 )"		5211562	0		&&			
ANR	5211669	EqualityExpression	cats [ c2 ] == 0		5211562	0		==			
ANR	5211670	ArrayIndexing	cats [ c2 ]		5211562	0					
ANR	5211671	Identifier	cats		5211562	0					
ANR	5211672	Identifier	c2		5211562	1					
ANR	5211673	PrimaryExpression	0		5211562	1					
ANR	5211674	CallExpression	"samesets ( g , c , c2 )"		5211562	1					
ANR	5211675	Callee	samesets		5211562	0					
ANR	5211676	Identifier	samesets		5211562	0					
ANR	5211677	ArgumentList	g		5211562	1					
ANR	5211678	Argument	g		5211562	0					
ANR	5211679	Identifier	g		5211562	0					
ANR	5211680	Argument	c		5211562	1					
ANR	5211681	Identifier	c		5211562	0					
ANR	5211682	Argument	c2		5211562	2					
ANR	5211683	Identifier	c2		5211562	0					
ANR	5211684	CompoundStatement		17:46:398:398	5211562	1					
ANR	5211685	ExpressionStatement	cats [ c2 ] = cat	1472:5:33684:33698	5211562	0	True				
ANR	5211686	AssignmentExpression	cats [ c2 ] = cat		5211562	0		=			
ANR	5211687	ArrayIndexing	cats [ c2 ]		5211562	0					
ANR	5211688	Identifier	cats		5211562	0					
ANR	5211689	Identifier	c2		5211562	1					
ANR	5211690	Identifier	cat		5211562	1					
ANR	5211691	ReturnType	static void		5211562	1					
ANR	5211692	Identifier	categorize		5211562	2					
ANR	5211693	ParameterList	"struct parse * p , struct re_guts * g"		5211562	3					
ANR	5211694	Parameter	struct parse * p	1454:11:33242:33256	5211562	0	True				
ANR	5211695	ParameterType	struct parse *		5211562	0					
ANR	5211696	Identifier	p		5211562	1					
ANR	5211697	Parameter	struct re_guts * g	1454:28:33259:33275	5211562	1	True				
ANR	5211698	ParameterType	struct re_guts *		5211562	0					
ANR	5211699	Identifier	g		5211562	1					
ANR	5211700	CFGEntryNode	ENTRY		5211562		True				
ANR	5211701	CFGExitNode	EXIT		5211562		True				
ANR	5211702	Symbol	g -> ncategories		5211562						
ANR	5211703	Symbol	NULL		5211562						
ANR	5211704	Symbol	c		5211562						
ANR	5211705	Symbol	CHAR_MIN		5211562						
ANR	5211706	Symbol	g		5211562						
ANR	5211707	Symbol	* ( cats + c )		5211562						
ANR	5211708	Symbol	* c		5211562						
ANR	5211709	Symbol	c2		5211562						
ANR	5211710	Symbol	p -> error		5211562						
ANR	5211711	Symbol	* cats		5211562						
ANR	5211712	Symbol	p		5211562						
ANR	5211713	Symbol	* g		5211562						
ANR	5211714	Symbol	CHAR_MAX		5211562						
ANR	5211715	Symbol	cats		5211562						
ANR	5211716	Symbol	* c2		5211562						
ANR	5211717	Symbol	cat		5211562						
ANR	5211718	Symbol	isinsets		5211562						
ANR	5211719	Symbol	* p		5211562						
ANR	5211720	Symbol	g -> categories		5211562						
ANR	5211721	Symbol	samesets		5211562						
ANR	5211722	Function	dupl	1482:0:33774:34291							
ANR	5211723	FunctionDef	"dupl (struct parse * p , sopno start , sopno finish)"		5211722	0					
ANR	5211724	CompoundStatement		1486:0:33912:34291	5211722	0					
ANR	5211725	IdentifierDeclStatement	sopno ret = HERE ( ) ;	1487:1:33915:33933	5211722	0	True				
ANR	5211726	IdentifierDecl	ret = HERE ( )		5211722	0					
ANR	5211727	IdentifierDeclType	sopno		5211722	0					
ANR	5211728	Identifier	ret		5211722	1					
ANR	5211729	AssignmentExpression	ret = HERE ( )		5211722	2		=			
ANR	5211730	Identifier	ret		5211722	0					
ANR	5211731	CallExpression	HERE ( )		5211722	1					
ANR	5211732	Callee	HERE		5211722	0					
ANR	5211733	Identifier	HERE		5211722	0					
ANR	5211734	ArgumentList			5211722	1					
ANR	5211735	IdentifierDeclStatement	sopno len = finish - start ;	1488:1:33936:33962	5211722	1	True				
ANR	5211736	IdentifierDecl	len = finish - start		5211722	0					
ANR	5211737	IdentifierDeclType	sopno		5211722	0					
ANR	5211738	Identifier	len		5211722	1					
ANR	5211739	AssignmentExpression	len = finish - start		5211722	2		=			
ANR	5211740	Identifier	len		5211722	0					
ANR	5211741	AdditiveExpression	finish - start		5211722	1		-			
ANR	5211742	Identifier	finish		5211722	0					
ANR	5211743	Identifier	start		5211722	1					
ANR	5211744	IfStatement	if ( finish >= start )		5211722	2					
ANR	5211745	Condition	finish >= start	1490:5:33970:33984	5211722	0	True				
ANR	5211746	RelationalExpression	finish >= start		5211722	0		>=			
ANR	5211747	Identifier	finish		5211722	0					
ANR	5211748	Identifier	start		5211722	1					
ANR	5211749	CompoundStatement		5:22:74:74	5211722	1					
ANR	5211750	IfStatement	if ( len == 0 )		5211722	0					
ANR	5211751	Condition	len == 0	1491:6:33995:34002	5211722	0	True				
ANR	5211752	EqualityExpression	len == 0		5211722	0		==			
ANR	5211753	Identifier	len		5211722	0					
ANR	5211754	PrimaryExpression	0		5211722	1					
ANR	5211755	CompoundStatement		6:16:92:92	5211722	1					
ANR	5211756	ReturnStatement	return ( ret ) ;	1492:3:34010:34022	5211722	0	True				
ANR	5211757	Identifier	ret		5211722	0					
ANR	5211758	ExpressionStatement	"enlarge ( p , p -> ssize + len )"	1494:2:34030:34056	5211722	1	True				
ANR	5211759	CallExpression	"enlarge ( p , p -> ssize + len )"		5211722	0					
ANR	5211760	Callee	enlarge		5211722	0					
ANR	5211761	Identifier	enlarge		5211722	0					
ANR	5211762	ArgumentList	p		5211722	1					
ANR	5211763	Argument	p		5211722	0					
ANR	5211764	Identifier	p		5211722	0					
ANR	5211765	Argument	p -> ssize + len		5211722	1					
ANR	5211766	AdditiveExpression	p -> ssize + len		5211722	0		+			
ANR	5211767	PtrMemberAccess	p -> ssize		5211722	0					
ANR	5211768	Identifier	p		5211722	0					
ANR	5211769	Identifier	ssize		5211722	1					
ANR	5211770	Identifier	len		5211722	1					
ANR	5211771	IfStatement	if ( p -> ssize >= p -> slen + len )		5211722	2					
ANR	5211772	Condition	p -> ssize >= p -> slen + len	1495:6:34101:34125	5211722	0	True				
ANR	5211773	RelationalExpression	p -> ssize >= p -> slen + len		5211722	0		>=			
ANR	5211774	PtrMemberAccess	p -> ssize		5211722	0					
ANR	5211775	Identifier	p		5211722	0					
ANR	5211776	Identifier	ssize		5211722	1					
ANR	5211777	AdditiveExpression	p -> slen + len		5211722	1		+			
ANR	5211778	PtrMemberAccess	p -> slen		5211722	0					
ANR	5211779	Identifier	p		5211722	0					
ANR	5211780	Identifier	slen		5211722	1					
ANR	5211781	Identifier	len		5211722	1					
ANR	5211782	CompoundStatement		10:33:215:215	5211722	1					
ANR	5211783	ExpressionStatement	"( void ) memcpy ( ( char * ) ( p -> strip + p -> slen ) , ( char * ) ( p -> strip + start ) , ( size_t ) len * sizeof ( sop ) )"	1496:3:34133:34234	5211722	0	True				
ANR	5211784	CastExpression	"( void ) memcpy ( ( char * ) ( p -> strip + p -> slen ) , ( char * ) ( p -> strip + start ) , ( size_t ) len * sizeof ( sop ) )"		5211722	0					
ANR	5211785	CastTarget	void		5211722	0					
ANR	5211786	CallExpression	"memcpy ( ( char * ) ( p -> strip + p -> slen ) , ( char * ) ( p -> strip + start ) , ( size_t ) len * sizeof ( sop ) )"		5211722	1					
ANR	5211787	Callee	memcpy		5211722	0					
ANR	5211788	Identifier	memcpy		5211722	0					
ANR	5211789	ArgumentList	( char * ) ( p -> strip + p -> slen )		5211722	1					
ANR	5211790	Argument	( char * ) ( p -> strip + p -> slen )		5211722	0					
ANR	5211791	CastExpression	( char * ) ( p -> strip + p -> slen )		5211722	0					
ANR	5211792	CastTarget	char *		5211722	0					
ANR	5211793	AdditiveExpression	p -> strip + p -> slen		5211722	1		+			
ANR	5211794	PtrMemberAccess	p -> strip		5211722	0					
ANR	5211795	Identifier	p		5211722	0					
ANR	5211796	Identifier	strip		5211722	1					
ANR	5211797	PtrMemberAccess	p -> slen		5211722	1					
ANR	5211798	Identifier	p		5211722	0					
ANR	5211799	Identifier	slen		5211722	1					
ANR	5211800	Argument	( char * ) ( p -> strip + start )		5211722	1					
ANR	5211801	CastExpression	( char * ) ( p -> strip + start )		5211722	0					
ANR	5211802	CastTarget	char *		5211722	0					
ANR	5211803	AdditiveExpression	p -> strip + start		5211722	1		+			
ANR	5211804	PtrMemberAccess	p -> strip		5211722	0					
ANR	5211805	Identifier	p		5211722	0					
ANR	5211806	Identifier	strip		5211722	1					
ANR	5211807	Identifier	start		5211722	1					
ANR	5211808	Argument	( size_t ) len * sizeof ( sop )		5211722	2					
ANR	5211809	MultiplicativeExpression	( size_t ) len * sizeof ( sop )		5211722	0		*			
ANR	5211810	CastExpression	( size_t ) len		5211722	0					
ANR	5211811	CastTarget	size_t		5211722	0					
ANR	5211812	Identifier	len		5211722	1					
ANR	5211813	SizeofExpression	sizeof ( sop )		5211722	1					
ANR	5211814	Sizeof	sizeof		5211722	0					
ANR	5211815	SizeofOperand	sop		5211722	1					
ANR	5211816	ExpressionStatement	p -> slen += len	1498:3:34239:34253	5211722	1	True				
ANR	5211817	AssignmentExpression	p -> slen += len		5211722	0		+=			
ANR	5211818	PtrMemberAccess	p -> slen		5211722	0					
ANR	5211819	Identifier	p		5211722	0					
ANR	5211820	Identifier	slen		5211722	1					
ANR	5211821	Identifier	len		5211722	1					
ANR	5211822	ReturnStatement	return ( ret ) ;	1499:3:34258:34269	5211722	2	True				
ANR	5211823	Identifier	ret		5211722	0					
ANR	5211824	ReturnStatement	return ret ;	1502:1:34279:34289	5211722	3	True				
ANR	5211825	Identifier	ret		5211722	0					
ANR	5211826	ReturnType	static sopno		5211722	1					
ANR	5211827	Identifier	dupl		5211722	2					
ANR	5211828	ParameterList	"struct parse * p , sopno start , sopno finish"		5211722	3					
ANR	5211829	Parameter	struct parse * p	1483:5:33819:33833	5211722	0	True				
ANR	5211830	ParameterType	struct parse *		5211722	0					
ANR	5211831	Identifier	p		5211722	1					
ANR	5211832	Parameter	sopno start	1484:4:33840:33850	5211722	1	True				
ANR	5211833	ParameterType	sopno		5211722	0					
ANR	5211834	Identifier	start		5211722	1					
ANR	5211835	Parameter	sopno finish	1485:4:33874:33885	5211722	2	True				
ANR	5211836	ParameterType	sopno		5211722	0					
ANR	5211837	Identifier	finish		5211722	1					
ANR	5211838	CFGEntryNode	ENTRY		5211722		True				
ANR	5211839	CFGExitNode	EXIT		5211722		True				
ANR	5211840	Symbol	p		5211722						
ANR	5211841	Symbol	ret		5211722						
ANR	5211842	Symbol	HERE		5211722						
ANR	5211843	Symbol	p -> slen		5211722						
ANR	5211844	Symbol	len		5211722						
ANR	5211845	Symbol	p -> strip		5211722						
ANR	5211846	Symbol	start		5211722						
ANR	5211847	Symbol	p -> ssize		5211722						
ANR	5211848	Symbol	finish		5211722						
ANR	5211849	Symbol	* p		5211722						
ANR	5211850	Function	doemit	1512:0:34534:35011							
ANR	5211851	FunctionDef	"doemit (struct parse * p , sop op , size_t opnd)"		5211850	0					
ANR	5211852	CompoundStatement		1514:0:34591:35011	5211850	0					
ANR	5211853	IfStatement	if ( p -> error != 0 )		5211850	0					
ANR	5211854	Condition	p -> error != 0	1516:5:34641:34653	5211850	0	True				
ANR	5211855	EqualityExpression	p -> error != 0		5211850	0		!=			
ANR	5211856	PtrMemberAccess	p -> error		5211850	0					
ANR	5211857	Identifier	p		5211850	0					
ANR	5211858	Identifier	error		5211850	1					
ANR	5211859	PrimaryExpression	0		5211850	1					
ANR	5211860	CompoundStatement		3:20:64:64	5211850	1					
ANR	5211861	ReturnStatement	return ;	1517:2:34660:34666	5211850	0	True				
ANR	5211862	IfStatement	if ( opnd < 1 << OPSHIFT )		5211850	1					
ANR	5211863	Condition	opnd < 1 << OPSHIFT	1521:5:34743:34759	5211850	0	True				
ANR	5211864	RelationalExpression	opnd < 1 << OPSHIFT		5211850	0		<			
ANR	5211865	Identifier	opnd		5211850	0					
ANR	5211866	ShiftExpression	1 << OPSHIFT		5211850	1		<<			
ANR	5211867	PrimaryExpression	1		5211850	0					
ANR	5211868	Identifier	OPSHIFT		5211850	1					
ANR	5211869	CompoundStatement		8:24:170:170	5211850	1					
ANR	5211870	IfStatement	if ( p -> slen >= p -> ssize )		5211850	0					
ANR	5211871	Condition	p -> slen >= p -> ssize	1524:6:34806:34824	5211850	0	True				
ANR	5211872	RelationalExpression	p -> slen >= p -> ssize		5211850	0		>=			
ANR	5211873	PtrMemberAccess	p -> slen		5211850	0					
ANR	5211874	Identifier	p		5211850	0					
ANR	5211875	Identifier	slen		5211850	1					
ANR	5211876	PtrMemberAccess	p -> ssize		5211850	1					
ANR	5211877	Identifier	p		5211850	0					
ANR	5211878	Identifier	ssize		5211850	1					
ANR	5211879	CompoundStatement		11:27:235:235	5211850	1					
ANR	5211880	ExpressionStatement	"enlarge ( p , ( p -> ssize + 1 ) / 2 * 3 )"	1525:3:34832:34867	5211850	0	True				
ANR	5211881	CallExpression	"enlarge ( p , ( p -> ssize + 1 ) / 2 * 3 )"		5211850	0					
ANR	5211882	Callee	enlarge		5211850	0					
ANR	5211883	Identifier	enlarge		5211850	0					
ANR	5211884	ArgumentList	p		5211850	1					
ANR	5211885	Argument	p		5211850	0					
ANR	5211886	Identifier	p		5211850	0					
ANR	5211887	Argument	( p -> ssize + 1 ) / 2 * 3		5211850	1					
ANR	5211888	MultiplicativeExpression	( p -> ssize + 1 ) / 2 * 3		5211850	0		/			
ANR	5211889	AdditiveExpression	p -> ssize + 1		5211850	0		+			
ANR	5211890	PtrMemberAccess	p -> ssize		5211850	0					
ANR	5211891	Identifier	p		5211850	0					
ANR	5211892	Identifier	ssize		5211850	1					
ANR	5211893	PrimaryExpression	1		5211850	1					
ANR	5211894	MultiplicativeExpression	2 * 3		5211850	1		*			
ANR	5211895	PrimaryExpression	2		5211850	0					
ANR	5211896	PrimaryExpression	3		5211850	1					
ANR	5211897	IfStatement	if ( p -> slen < p -> ssize )		5211850	1					
ANR	5211898	Condition	p -> slen < p -> ssize	1527:6:34890:34907	5211850	0	True				
ANR	5211899	RelationalExpression	p -> slen < p -> ssize		5211850	0		<			
ANR	5211900	PtrMemberAccess	p -> slen		5211850	0					
ANR	5211901	Identifier	p		5211850	0					
ANR	5211902	Identifier	slen		5211850	1					
ANR	5211903	PtrMemberAccess	p -> ssize		5211850	1					
ANR	5211904	Identifier	p		5211850	0					
ANR	5211905	Identifier	ssize		5211850	1					
ANR	5211906	CompoundStatement		14:26:318:318	5211850	1					
ANR	5211907	ExpressionStatement	"p -> strip [ p -> slen ++ ] = SOP ( op , opnd )"	1529:3:34967:35002	5211850	0	True				
ANR	5211908	AssignmentExpression	"p -> strip [ p -> slen ++ ] = SOP ( op , opnd )"		5211850	0		=			
ANR	5211909	ArrayIndexing	p -> strip [ p -> slen ++ ]		5211850	0					
ANR	5211910	PtrMemberAccess	p -> strip		5211850	0					
ANR	5211911	Identifier	p		5211850	0					
ANR	5211912	Identifier	strip		5211850	1					
ANR	5211913	PostIncDecOperationExpression	p -> slen ++		5211850	1					
ANR	5211914	PtrMemberAccess	p -> slen		5211850	0					
ANR	5211915	Identifier	p		5211850	0					
ANR	5211916	Identifier	slen		5211850	1					
ANR	5211917	IncDec	++		5211850	1					
ANR	5211918	CallExpression	"SOP ( op , opnd )"		5211850	1					
ANR	5211919	Callee	SOP		5211850	0					
ANR	5211920	Identifier	SOP		5211850	0					
ANR	5211921	ArgumentList	op		5211850	1					
ANR	5211922	Argument	op		5211850	0					
ANR	5211923	Identifier	op		5211850	0					
ANR	5211924	Argument	opnd		5211850	1					
ANR	5211925	Identifier	opnd		5211850	0					
ANR	5211926	ReturnType	static void		5211850	1					
ANR	5211927	Identifier	doemit		5211850	2					
ANR	5211928	ParameterList	"struct parse * p , sop op , size_t opnd"		5211850	3					
ANR	5211929	Parameter	struct parse * p	1513:7:34553:34567	5211850	0	True				
ANR	5211930	ParameterType	struct parse *		5211850	0					
ANR	5211931	Identifier	p		5211850	1					
ANR	5211932	Parameter	sop op	1513:24:34570:34575	5211850	1	True				
ANR	5211933	ParameterType	sop		5211850	0					
ANR	5211934	Identifier	op		5211850	1					
ANR	5211935	Parameter	size_t opnd	1513:32:34578:34588	5211850	2	True				
ANR	5211936	ParameterType	size_t		5211850	0					
ANR	5211937	Identifier	opnd		5211850	1					
ANR	5211938	CFGEntryNode	ENTRY		5211850		True				
ANR	5211939	CFGExitNode	EXIT		5211850		True				
ANR	5211940	Symbol	p		5211850						
ANR	5211941	Symbol	op		5211850						
ANR	5211942	Symbol	OPSHIFT		5211850						
ANR	5211943	Symbol	p -> slen		5211850						
ANR	5211944	Symbol	opnd		5211850						
ANR	5211945	Symbol	p -> strip		5211850						
ANR	5211946	Symbol	SOP		5211850						
ANR	5211947	Symbol	* p -> strip		5211850						
ANR	5211948	Symbol	p -> ssize		5211850						
ANR	5211949	Symbol	* p		5211850						
ANR	5211950	Symbol	* * p		5211850						
ANR	5211951	Symbol	p -> error		5211850						
ANR	5211952	Function	doinsert	1537:0:35063:35667							
ANR	5211953	FunctionDef	"doinsert (struct parse * p , sop op , size_t opnd , sopno pos)"		5211952	0					
ANR	5211954	CompoundStatement		1539:0:35133:35667	5211952	0					
ANR	5211955	IdentifierDeclStatement	sopno sn ;	1540:1:35136:35144	5211952	0	True				
ANR	5211956	IdentifierDecl	sn		5211952	0					
ANR	5211957	IdentifierDeclType	sopno		5211952	0					
ANR	5211958	Identifier	sn		5211952	1					
ANR	5211959	IdentifierDeclStatement	sop s ;	1541:1:35147:35152	5211952	1	True				
ANR	5211960	IdentifierDecl	s		5211952	0					
ANR	5211961	IdentifierDeclType	sop		5211952	0					
ANR	5211962	Identifier	s		5211952	1					
ANR	5211963	IdentifierDeclStatement	int i ;	1542:1:35155:35160	5211952	2	True				
ANR	5211964	IdentifierDecl	i		5211952	0					
ANR	5211965	IdentifierDeclType	int		5211952	0					
ANR	5211966	Identifier	i		5211952	1					
ANR	5211967	IfStatement	if ( p -> error != 0 )		5211952	3					
ANR	5211968	Condition	p -> error != 0	1545:5:35211:35223	5211952	0	True				
ANR	5211969	EqualityExpression	p -> error != 0		5211952	0		!=			
ANR	5211970	PtrMemberAccess	p -> error		5211952	0					
ANR	5211971	Identifier	p		5211952	0					
ANR	5211972	Identifier	error		5211952	1					
ANR	5211973	PrimaryExpression	0		5211952	1					
ANR	5211974	CompoundStatement		7:20:92:92	5211952	1					
ANR	5211975	ReturnStatement	return ;	1546:2:35230:35236	5211952	0	True				
ANR	5211976	ExpressionStatement	sn = HERE ( )	1549:1:35243:35254	5211952	4	True				
ANR	5211977	AssignmentExpression	sn = HERE ( )		5211952	0		=			
ANR	5211978	Identifier	sn		5211952	0					
ANR	5211979	CallExpression	HERE ( )		5211952	1					
ANR	5211980	Callee	HERE		5211952	0					
ANR	5211981	Identifier	HERE		5211952	0					
ANR	5211982	ArgumentList			5211952	1					
ANR	5211983	ExpressionStatement	"EMIT ( op , opnd )"	1550:1:35257:35271	5211952	5	True				
ANR	5211984	CallExpression	"EMIT ( op , opnd )"		5211952	0					
ANR	5211985	Callee	EMIT		5211952	0					
ANR	5211986	Identifier	EMIT		5211952	0					
ANR	5211987	ArgumentList	op		5211952	1					
ANR	5211988	Argument	op		5211952	0					
ANR	5211989	Identifier	op		5211952	0					
ANR	5211990	Argument	opnd		5211952	1					
ANR	5211991	Identifier	opnd		5211952	0					
ANR	5211992	IfStatement	if ( HERE ( ) != sn + 1 )		5211952	6					
ANR	5211993	Condition	HERE ( ) != sn + 1	1551:5:35309:35322	5211952	0	True				
ANR	5211994	EqualityExpression	HERE ( ) != sn + 1		5211952	0		!=			
ANR	5211995	CallExpression	HERE ( )		5211952	0					
ANR	5211996	Callee	HERE		5211952	0					
ANR	5211997	Identifier	HERE		5211952	0					
ANR	5211998	ArgumentList			5211952	1					
ANR	5211999	AdditiveExpression	sn + 1		5211952	1		+			
ANR	5212000	Identifier	sn		5211952	0					
ANR	5212001	PrimaryExpression	1		5211952	1					
ANR	5212002	CompoundStatement		13:21:191:191	5211952	1					
ANR	5212003	ReturnStatement	return ;	1552:2:35329:35335	5211952	0	True				
ANR	5212004	ExpressionStatement	s = p -> strip [ sn ]	1554:1:35341:35357	5211952	7	True				
ANR	5212005	AssignmentExpression	s = p -> strip [ sn ]		5211952	0		=			
ANR	5212006	Identifier	s		5211952	0					
ANR	5212007	ArrayIndexing	p -> strip [ sn ]		5211952	1					
ANR	5212008	PtrMemberAccess	p -> strip		5211952	0					
ANR	5212009	Identifier	p		5211952	0					
ANR	5212010	Identifier	strip		5211952	1					
ANR	5212011	Identifier	sn		5211952	1					
ANR	5212012	IfStatement	if ( pos > 0 )		5211952	8					
ANR	5212013	Condition	pos > 0	1557:5:35394:35400	5211952	0	True				
ANR	5212014	RelationalExpression	pos > 0		5211952	0		>			
ANR	5212015	Identifier	pos		5211952	0					
ANR	5212016	PrimaryExpression	0		5211952	1					
ANR	5212017	CompoundStatement		19:14:269:269	5211952	1					
ANR	5212018	ForStatement	for ( i = 1 ; i < NPAREN ; i ++ )		5211952	0					
ANR	5212019	ForInit	i = 1 ;	1558:7:35412:35417	5211952	0	True				
ANR	5212020	AssignmentExpression	i = 1		5211952	0		=			
ANR	5212021	Identifier	i		5211952	0					
ANR	5212022	PrimaryExpression	1		5211952	1					
ANR	5212023	Condition	i < NPAREN	1558:14:35419:35428	5211952	1	True				
ANR	5212024	RelationalExpression	i < NPAREN		5211952	0		<			
ANR	5212025	Identifier	i		5211952	0					
ANR	5212026	Identifier	NPAREN		5211952	1					
ANR	5212027	PostIncDecOperationExpression	i ++	1558:26:35431:35433	5211952	2	True				
ANR	5212028	Identifier	i		5211952	0					
ANR	5212029	IncDec	++		5211952	1					
ANR	5212030	CompoundStatement		20:31:302:302	5211952	3					
ANR	5212031	IfStatement	if ( p -> pbegin [ i ] >= pos )		5211952	0					
ANR	5212032	Condition	p -> pbegin [ i ] >= pos	1559:7:35445:35463	5211952	0	True				
ANR	5212033	RelationalExpression	p -> pbegin [ i ] >= pos		5211952	0		>=			
ANR	5212034	ArrayIndexing	p -> pbegin [ i ]		5211952	0					
ANR	5212035	PtrMemberAccess	p -> pbegin		5211952	0					
ANR	5212036	Identifier	p		5211952	0					
ANR	5212037	Identifier	pbegin		5211952	1					
ANR	5212038	Identifier	i		5211952	1					
ANR	5212039	Identifier	pos		5211952	1					
ANR	5212040	CompoundStatement		21:28:332:332	5211952	1					
ANR	5212041	ExpressionStatement	p -> pbegin [ i ] ++	1560:4:35472:35486	5211952	0	True				
ANR	5212042	PostIncDecOperationExpression	p -> pbegin [ i ] ++		5211952	0					
ANR	5212043	ArrayIndexing	p -> pbegin [ i ]		5211952	0					
ANR	5212044	PtrMemberAccess	p -> pbegin		5211952	0					
ANR	5212045	Identifier	p		5211952	0					
ANR	5212046	Identifier	pbegin		5211952	1					
ANR	5212047	Identifier	i		5211952	1					
ANR	5212048	IncDec	++		5211952	1					
ANR	5212049	IfStatement	if ( p -> pend [ i ] >= pos )		5211952	1					
ANR	5212050	Condition	p -> pend [ i ] >= pos	1562:7:35500:35516	5211952	0	True				
ANR	5212051	RelationalExpression	p -> pend [ i ] >= pos		5211952	0		>=			
ANR	5212052	ArrayIndexing	p -> pend [ i ]		5211952	0					
ANR	5212053	PtrMemberAccess	p -> pend		5211952	0					
ANR	5212054	Identifier	p		5211952	0					
ANR	5212055	Identifier	pend		5211952	1					
ANR	5212056	Identifier	i		5211952	1					
ANR	5212057	Identifier	pos		5211952	1					
ANR	5212058	CompoundStatement		24:26:385:385	5211952	1					
ANR	5212059	ExpressionStatement	p -> pend [ i ] ++	1563:4:35525:35537	5211952	0	True				
ANR	5212060	PostIncDecOperationExpression	p -> pend [ i ] ++		5211952	0					
ANR	5212061	ArrayIndexing	p -> pend [ i ]		5211952	0					
ANR	5212062	PtrMemberAccess	p -> pend		5211952	0					
ANR	5212063	Identifier	p		5211952	0					
ANR	5212064	Identifier	pend		5211952	1					
ANR	5212065	Identifier	i		5211952	1					
ANR	5212066	IncDec	++		5211952	1					
ANR	5212067	ExpressionStatement	"memmove ( ( char * ) & p -> strip [ pos + 1 ] , ( char * ) & p -> strip [ pos ] , ( HERE ( ) - pos - 1 ) * sizeof ( sop ) )"	1568:1:35554:35645	5211952	9	True				
ANR	5212068	CallExpression	"memmove ( ( char * ) & p -> strip [ pos + 1 ] , ( char * ) & p -> strip [ pos ] , ( HERE ( ) - pos - 1 ) * sizeof ( sop ) )"		5211952	0					
ANR	5212069	Callee	memmove		5211952	0					
ANR	5212070	Identifier	memmove		5211952	0					
ANR	5212071	ArgumentList	( char * ) & p -> strip [ pos + 1 ]		5211952	1					
ANR	5212072	Argument	( char * ) & p -> strip [ pos + 1 ]		5211952	0					
ANR	5212073	CastExpression	( char * ) & p -> strip [ pos + 1 ]		5211952	0					
ANR	5212074	CastTarget	char *		5211952	0					
ANR	5212075	UnaryOperationExpression	& p -> strip [ pos + 1 ]		5211952	1					
ANR	5212076	UnaryOperator	&		5211952	0					
ANR	5212077	ArrayIndexing	p -> strip [ pos + 1 ]		5211952	1					
ANR	5212078	PtrMemberAccess	p -> strip		5211952	0					
ANR	5212079	Identifier	p		5211952	0					
ANR	5212080	Identifier	strip		5211952	1					
ANR	5212081	AdditiveExpression	pos + 1		5211952	1		+			
ANR	5212082	Identifier	pos		5211952	0					
ANR	5212083	PrimaryExpression	1		5211952	1					
ANR	5212084	Argument	( char * ) & p -> strip [ pos ]		5211952	1					
ANR	5212085	CastExpression	( char * ) & p -> strip [ pos ]		5211952	0					
ANR	5212086	CastTarget	char *		5211952	0					
ANR	5212087	UnaryOperationExpression	& p -> strip [ pos ]		5211952	1					
ANR	5212088	UnaryOperator	&		5211952	0					
ANR	5212089	ArrayIndexing	p -> strip [ pos ]		5211952	1					
ANR	5212090	PtrMemberAccess	p -> strip		5211952	0					
ANR	5212091	Identifier	p		5211952	0					
ANR	5212092	Identifier	strip		5211952	1					
ANR	5212093	Identifier	pos		5211952	1					
ANR	5212094	Argument	( HERE ( ) - pos - 1 ) * sizeof ( sop )		5211952	2					
ANR	5212095	MultiplicativeExpression	( HERE ( ) - pos - 1 ) * sizeof ( sop )		5211952	0		*			
ANR	5212096	AdditiveExpression	HERE ( ) - pos - 1		5211952	0		-			
ANR	5212097	CallExpression	HERE ( )		5211952	0					
ANR	5212098	Callee	HERE		5211952	0					
ANR	5212099	Identifier	HERE		5211952	0					
ANR	5212100	ArgumentList			5211952	1					
ANR	5212101	AdditiveExpression	pos - 1		5211952	1		-			
ANR	5212102	Identifier	pos		5211952	0					
ANR	5212103	PrimaryExpression	1		5211952	1					
ANR	5212104	SizeofExpression	sizeof ( sop )		5211952	1					
ANR	5212105	Sizeof	sizeof		5211952	0					
ANR	5212106	SizeofOperand	sop		5211952	1					
ANR	5212107	ExpressionStatement	p -> strip [ pos ] = s	1570:1:35648:35665	5211952	10	True				
ANR	5212108	AssignmentExpression	p -> strip [ pos ] = s		5211952	0		=			
ANR	5212109	ArrayIndexing	p -> strip [ pos ]		5211952	0					
ANR	5212110	PtrMemberAccess	p -> strip		5211952	0					
ANR	5212111	Identifier	p		5211952	0					
ANR	5212112	Identifier	strip		5211952	1					
ANR	5212113	Identifier	pos		5211952	1					
ANR	5212114	Identifier	s		5211952	1					
ANR	5212115	ReturnType	static void		5211952	1					
ANR	5212116	Identifier	doinsert		5211952	2					
ANR	5212117	ParameterList	"struct parse * p , sop op , size_t opnd , sopno pos"		5211952	3					
ANR	5212118	Parameter	struct parse * p	1538:9:35084:35098	5211952	0	True				
ANR	5212119	ParameterType	struct parse *		5211952	0					
ANR	5212120	Identifier	p		5211952	1					
ANR	5212121	Parameter	sop op	1538:26:35101:35106	5211952	1	True				
ANR	5212122	ParameterType	sop		5211952	0					
ANR	5212123	Identifier	op		5211952	1					
ANR	5212124	Parameter	size_t opnd	1538:34:35109:35119	5211952	2	True				
ANR	5212125	ParameterType	size_t		5211952	0					
ANR	5212126	Identifier	opnd		5211952	1					
ANR	5212127	Parameter	sopno pos	1538:47:35122:35130	5211952	3	True				
ANR	5212128	ParameterType	sopno		5211952	0					
ANR	5212129	Identifier	pos		5211952	1					
ANR	5212130	CFGEntryNode	ENTRY		5211952		True				
ANR	5212131	CFGExitNode	EXIT		5211952		True				
ANR	5212132	Symbol	op		5211952						
ANR	5212133	Symbol	* sn		5211952						
ANR	5212134	Symbol	opnd		5211952						
ANR	5212135	Symbol	* p -> strip		5211952						
ANR	5212136	Symbol	i		5211952						
ANR	5212137	Symbol	p -> error		5211952						
ANR	5212138	Symbol	p		5211952						
ANR	5212139	Symbol	HERE		5211952						
ANR	5212140	Symbol	* p -> pend		5211952						
ANR	5212141	Symbol	s		5211952						
ANR	5212142	Symbol	* i		5211952						
ANR	5212143	Symbol	pos		5211952						
ANR	5212144	Symbol	p -> strip		5211952						
ANR	5212145	Symbol	p -> pend		5211952						
ANR	5212146	Symbol	* p -> pbegin		5211952						
ANR	5212147	Symbol	* p		5211952						
ANR	5212148	Symbol	sn		5211952						
ANR	5212149	Symbol	* * p		5211952						
ANR	5212150	Symbol	NPAREN		5211952						
ANR	5212151	Symbol	* pos		5211952						
ANR	5212152	Symbol	p -> pbegin		5211952						
ANR	5212153	Function	dofwd	1576:0:35717:35930							
ANR	5212154	FunctionDef	"dofwd (struct parse * p , sopno pos , sop value)"		5212153	0					
ANR	5212155	CompoundStatement		1578:0:35774:35930	5212153	0					
ANR	5212156	IfStatement	if ( p -> error != 0 )		5212153	0					
ANR	5212157	Condition	p -> error != 0	1580:5:35824:35836	5212153	0	True				
ANR	5212158	EqualityExpression	p -> error != 0		5212153	0		!=			
ANR	5212159	PtrMemberAccess	p -> error		5212153	0					
ANR	5212160	Identifier	p		5212153	0					
ANR	5212161	Identifier	error		5212153	1					
ANR	5212162	PrimaryExpression	0		5212153	1					
ANR	5212163	CompoundStatement		3:20:64:64	5212153	1					
ANR	5212164	ReturnStatement	return ;	1581:2:35843:35849	5212153	0	True				
ANR	5212165	IfStatement	if ( value < 1 << OPSHIFT )		5212153	1					
ANR	5212166	Condition	value < 1 << OPSHIFT	1584:5:35860:35877	5212153	0	True				
ANR	5212167	RelationalExpression	value < 1 << OPSHIFT		5212153	0		<			
ANR	5212168	Identifier	value		5212153	0					
ANR	5212169	ShiftExpression	1 << OPSHIFT		5212153	1		<<			
ANR	5212170	PrimaryExpression	1		5212153	0					
ANR	5212171	Identifier	OPSHIFT		5212153	1					
ANR	5212172	CompoundStatement		7:25:105:105	5212153	1					
ANR	5212173	ExpressionStatement	p -> strip [ pos ] = OP ( p -> strip [ pos ] ) | value	1585:2:35884:35925	5212153	0	True				
ANR	5212174	AssignmentExpression	p -> strip [ pos ] = OP ( p -> strip [ pos ] ) | value		5212153	0		=			
ANR	5212175	ArrayIndexing	p -> strip [ pos ]		5212153	0					
ANR	5212176	PtrMemberAccess	p -> strip		5212153	0					
ANR	5212177	Identifier	p		5212153	0					
ANR	5212178	Identifier	strip		5212153	1					
ANR	5212179	Identifier	pos		5212153	1					
ANR	5212180	InclusiveOrExpression	OP ( p -> strip [ pos ] ) | value		5212153	1		|			
ANR	5212181	CallExpression	OP ( p -> strip [ pos ] )		5212153	0					
ANR	5212182	Callee	OP		5212153	0					
ANR	5212183	Identifier	OP		5212153	0					
ANR	5212184	ArgumentList	p -> strip [ pos ]		5212153	1					
ANR	5212185	Argument	p -> strip [ pos ]		5212153	0					
ANR	5212186	ArrayIndexing	p -> strip [ pos ]		5212153	0					
ANR	5212187	PtrMemberAccess	p -> strip		5212153	0					
ANR	5212188	Identifier	p		5212153	0					
ANR	5212189	Identifier	strip		5212153	1					
ANR	5212190	Identifier	pos		5212153	1					
ANR	5212191	Identifier	value		5212153	1					
ANR	5212192	ReturnType	static void		5212153	1					
ANR	5212193	Identifier	dofwd		5212153	2					
ANR	5212194	ParameterList	"struct parse * p , sopno pos , sop value"		5212153	3					
ANR	5212195	Parameter	struct parse * p	1577:6:35735:35749	5212153	0	True				
ANR	5212196	ParameterType	struct parse *		5212153	0					
ANR	5212197	Identifier	p		5212153	1					
ANR	5212198	Parameter	sopno pos	1577:23:35752:35760	5212153	1	True				
ANR	5212199	ParameterType	sopno		5212153	0					
ANR	5212200	Identifier	pos		5212153	1					
ANR	5212201	Parameter	sop value	1577:34:35763:35771	5212153	2	True				
ANR	5212202	ParameterType	sop		5212153	0					
ANR	5212203	Identifier	value		5212153	1					
ANR	5212204	CFGEntryNode	ENTRY		5212153		True				
ANR	5212205	CFGExitNode	EXIT		5212153		True				
ANR	5212206	Symbol	p		5212153						
ANR	5212207	Symbol	OP		5212153						
ANR	5212208	Symbol	OPSHIFT		5212153						
ANR	5212209	Symbol	pos		5212153						
ANR	5212210	Symbol	p -> strip		5212153						
ANR	5212211	Symbol	* p -> strip		5212153						
ANR	5212212	Symbol	* p		5212153						
ANR	5212213	Symbol	* * p		5212153						
ANR	5212214	Symbol	value		5212153						
ANR	5212215	Symbol	* pos		5212153						
ANR	5212216	Symbol	p -> error		5212153						
ANR	5212217	Function	enlarge	1592:0:35971:36209							
ANR	5212218	FunctionDef	"enlarge (struct parse * p , sopno size)"		5212217	0					
ANR	5212219	CompoundStatement		1594:0:36020:36209	5212217	0					
ANR	5212220	IdentifierDeclStatement	sop * sp ;	1595:1:36023:36030	5212217	0	True				
ANR	5212221	IdentifierDecl	* sp		5212217	0					
ANR	5212222	IdentifierDeclType	sop *		5212217	0					
ANR	5212223	Identifier	sp		5212217	1					
ANR	5212224	IfStatement	if ( p -> ssize >= size )		5212217	1					
ANR	5212225	Condition	p -> ssize >= size	1597:5:36038:36053	5212217	0	True				
ANR	5212226	RelationalExpression	p -> ssize >= size		5212217	0		>=			
ANR	5212227	PtrMemberAccess	p -> ssize		5212217	0					
ANR	5212228	Identifier	p		5212217	0					
ANR	5212229	Identifier	ssize		5212217	1					
ANR	5212230	Identifier	size		5212217	1					
ANR	5212231	CompoundStatement		4:23:35:35	5212217	1					
ANR	5212232	ReturnStatement	return ;	1598:2:36060:36066	5212217	0	True				
ANR	5212233	ExpressionStatement	"sp = ( sop * ) realloc ( p -> strip , size * sizeof ( sop ) )"	1601:1:36073:36120	5212217	2	True				
ANR	5212234	AssignmentExpression	"sp = ( sop * ) realloc ( p -> strip , size * sizeof ( sop ) )"		5212217	0		=			
ANR	5212235	Identifier	sp		5212217	0					
ANR	5212236	CastExpression	"( sop * ) realloc ( p -> strip , size * sizeof ( sop ) )"		5212217	1					
ANR	5212237	CastTarget	sop *		5212217	0					
ANR	5212238	CallExpression	"realloc ( p -> strip , size * sizeof ( sop ) )"		5212217	1					
ANR	5212239	Callee	realloc		5212217	0					
ANR	5212240	Identifier	realloc		5212217	0					
ANR	5212241	ArgumentList	p -> strip		5212217	1					
ANR	5212242	Argument	p -> strip		5212217	0					
ANR	5212243	PtrMemberAccess	p -> strip		5212217	0					
ANR	5212244	Identifier	p		5212217	0					
ANR	5212245	Identifier	strip		5212217	1					
ANR	5212246	Argument	size * sizeof ( sop )		5212217	1					
ANR	5212247	MultiplicativeExpression	size * sizeof ( sop )		5212217	0		*			
ANR	5212248	Identifier	size		5212217	0					
ANR	5212249	SizeofExpression	sizeof ( sop )		5212217	1					
ANR	5212250	Sizeof	sizeof		5212217	0					
ANR	5212251	SizeofOperand	sop		5212217	1					
ANR	5212252	IfStatement	if ( ! sp )		5212217	3					
ANR	5212253	Condition	! sp	1602:5:36127:36129	5212217	0	True				
ANR	5212254	UnaryOperationExpression	! sp		5212217	0					
ANR	5212255	UnaryOperator	!		5212217	0					
ANR	5212256	Identifier	sp		5212217	1					
ANR	5212257	CompoundStatement		9:10:111:111	5212217	1					
ANR	5212258	ExpressionStatement	SETERROR ( R_REGEX_ESPACE )	1603:2:36136:36160	5212217	0	True				
ANR	5212259	CallExpression	SETERROR ( R_REGEX_ESPACE )		5212217	0					
ANR	5212260	Callee	SETERROR		5212217	0					
ANR	5212261	Identifier	SETERROR		5212217	0					
ANR	5212262	ArgumentList	R_REGEX_ESPACE		5212217	1					
ANR	5212263	Argument	R_REGEX_ESPACE		5212217	0					
ANR	5212264	Identifier	R_REGEX_ESPACE		5212217	0					
ANR	5212265	ReturnStatement	return ;	1604:2:36164:36170	5212217	1	True				
ANR	5212266	ExpressionStatement	p -> strip = sp	1606:1:36176:36189	5212217	4	True				
ANR	5212267	AssignmentExpression	p -> strip = sp		5212217	0		=			
ANR	5212268	PtrMemberAccess	p -> strip		5212217	0					
ANR	5212269	Identifier	p		5212217	0					
ANR	5212270	Identifier	strip		5212217	1					
ANR	5212271	Identifier	sp		5212217	1					
ANR	5212272	ExpressionStatement	p -> ssize = size	1607:1:36192:36207	5212217	5	True				
ANR	5212273	AssignmentExpression	p -> ssize = size		5212217	0		=			
ANR	5212274	PtrMemberAccess	p -> ssize		5212217	0					
ANR	5212275	Identifier	p		5212217	0					
ANR	5212276	Identifier	ssize		5212217	1					
ANR	5212277	Identifier	size		5212217	1					
ANR	5212278	ReturnType	static void		5212217	1					
ANR	5212279	Identifier	enlarge		5212217	2					
ANR	5212280	ParameterList	"struct parse * p , sopno size"		5212217	3					
ANR	5212281	Parameter	struct parse * p	1593:8:35991:36005	5212217	0	True				
ANR	5212282	ParameterType	struct parse *		5212217	0					
ANR	5212283	Identifier	p		5212217	1					
ANR	5212284	Parameter	sopno size	1593:25:36008:36017	5212217	1	True				
ANR	5212285	ParameterType	sopno		5212217	0					
ANR	5212286	Identifier	size		5212217	1					
ANR	5212287	CFGEntryNode	ENTRY		5212217		True				
ANR	5212288	CFGExitNode	EXIT		5212217		True				
ANR	5212289	Symbol	p		5212217						
ANR	5212290	Symbol	size		5212217						
ANR	5212291	Symbol	R_REGEX_ESPACE		5212217						
ANR	5212292	Symbol	p -> strip		5212217						
ANR	5212293	Symbol	p -> ssize		5212217						
ANR	5212294	Symbol	* p		5212217						
ANR	5212295	Symbol	realloc		5212217						
ANR	5212296	Symbol	sp		5212217						
ANR	5212297	Function	stripsnug	1613:0:36252:36476							
ANR	5212298	FunctionDef	"stripsnug (struct parse * p , struct re_guts * g)"		5212297	0					
ANR	5212299	CompoundStatement		1615:0:36310:36476	5212297	0					
ANR	5212300	ExpressionStatement	g -> nstates = p -> slen	1616:1:36313:36333	5212297	0	True				
ANR	5212301	AssignmentExpression	g -> nstates = p -> slen		5212297	0		=			
ANR	5212302	PtrMemberAccess	g -> nstates		5212297	0					
ANR	5212303	Identifier	g		5212297	0					
ANR	5212304	Identifier	nstates		5212297	1					
ANR	5212305	PtrMemberAccess	p -> slen		5212297	1					
ANR	5212306	Identifier	p		5212297	0					
ANR	5212307	Identifier	slen		5212297	1					
ANR	5212308	ExpressionStatement	"g -> strip = ( sop * ) realloc ( ( char * ) p -> strip , p -> slen * sizeof ( sop ) )"	1617:1:36336:36402	5212297	1	True				
ANR	5212309	AssignmentExpression	"g -> strip = ( sop * ) realloc ( ( char * ) p -> strip , p -> slen * sizeof ( sop ) )"		5212297	0		=			
ANR	5212310	PtrMemberAccess	g -> strip		5212297	0					
ANR	5212311	Identifier	g		5212297	0					
ANR	5212312	Identifier	strip		5212297	1					
ANR	5212313	CastExpression	"( sop * ) realloc ( ( char * ) p -> strip , p -> slen * sizeof ( sop ) )"		5212297	1					
ANR	5212314	CastTarget	sop *		5212297	0					
ANR	5212315	CallExpression	"realloc ( ( char * ) p -> strip , p -> slen * sizeof ( sop ) )"		5212297	1					
ANR	5212316	Callee	realloc		5212297	0					
ANR	5212317	Identifier	realloc		5212297	0					
ANR	5212318	ArgumentList	( char * ) p -> strip		5212297	1					
ANR	5212319	Argument	( char * ) p -> strip		5212297	0					
ANR	5212320	CastExpression	( char * ) p -> strip		5212297	0					
ANR	5212321	CastTarget	char *		5212297	0					
ANR	5212322	PtrMemberAccess	p -> strip		5212297	1					
ANR	5212323	Identifier	p		5212297	0					
ANR	5212324	Identifier	strip		5212297	1					
ANR	5212325	Argument	p -> slen * sizeof ( sop )		5212297	1					
ANR	5212326	MultiplicativeExpression	p -> slen * sizeof ( sop )		5212297	0		*			
ANR	5212327	PtrMemberAccess	p -> slen		5212297	0					
ANR	5212328	Identifier	p		5212297	0					
ANR	5212329	Identifier	slen		5212297	1					
ANR	5212330	SizeofExpression	sizeof ( sop )		5212297	1					
ANR	5212331	Sizeof	sizeof		5212297	0					
ANR	5212332	SizeofOperand	sop		5212297	1					
ANR	5212333	IfStatement	if ( ! g -> strip )		5212297	2					
ANR	5212334	Condition	! g -> strip	1618:5:36409:36417	5212297	0	True				
ANR	5212335	UnaryOperationExpression	! g -> strip		5212297	0					
ANR	5212336	UnaryOperator	!		5212297	0					
ANR	5212337	PtrMemberAccess	g -> strip		5212297	1					
ANR	5212338	Identifier	g		5212297	0					
ANR	5212339	Identifier	strip		5212297	1					
ANR	5212340	CompoundStatement		4:16:109:109	5212297	1					
ANR	5212341	ExpressionStatement	SETERROR ( R_REGEX_ESPACE )	1619:2:36424:36448	5212297	0	True				
ANR	5212342	CallExpression	SETERROR ( R_REGEX_ESPACE )		5212297	0					
ANR	5212343	Callee	SETERROR		5212297	0					
ANR	5212344	Identifier	SETERROR		5212297	0					
ANR	5212345	ArgumentList	R_REGEX_ESPACE		5212297	1					
ANR	5212346	Argument	R_REGEX_ESPACE		5212297	0					
ANR	5212347	Identifier	R_REGEX_ESPACE		5212297	0					
ANR	5212348	ExpressionStatement	g -> strip = p -> strip	1620:2:36452:36471	5212297	1	True				
ANR	5212349	AssignmentExpression	g -> strip = p -> strip		5212297	0		=			
ANR	5212350	PtrMemberAccess	g -> strip		5212297	0					
ANR	5212351	Identifier	g		5212297	0					
ANR	5212352	Identifier	strip		5212297	1					
ANR	5212353	PtrMemberAccess	p -> strip		5212297	1					
ANR	5212354	Identifier	p		5212297	0					
ANR	5212355	Identifier	strip		5212297	1					
ANR	5212356	ReturnType	static void		5212297	1					
ANR	5212357	Identifier	stripsnug		5212297	2					
ANR	5212358	ParameterList	"struct parse * p , struct re_guts * g"		5212297	3					
ANR	5212359	Parameter	struct parse * p	1614:10:36274:36288	5212297	0	True				
ANR	5212360	ParameterType	struct parse *		5212297	0					
ANR	5212361	Identifier	p		5212297	1					
ANR	5212362	Parameter	struct re_guts * g	1614:27:36291:36307	5212297	1	True				
ANR	5212363	ParameterType	struct re_guts *		5212297	0					
ANR	5212364	Identifier	g		5212297	1					
ANR	5212365	CFGEntryNode	ENTRY		5212297		True				
ANR	5212366	CFGExitNode	EXIT		5212297		True				
ANR	5212367	Symbol	p		5212297						
ANR	5212368	Symbol	* g		5212297						
ANR	5212369	Symbol	p -> slen		5212297						
ANR	5212370	Symbol	R_REGEX_ESPACE		5212297						
ANR	5212371	Symbol	p -> strip		5212297						
ANR	5212372	Symbol	g -> strip		5212297						
ANR	5212373	Symbol	g -> nstates		5212297						
ANR	5212374	Symbol	g		5212297						
ANR	5212375	Symbol	* p		5212297						
ANR	5212376	Symbol	realloc		5212297						
ANR	5212377	Function	findmust	1633:0:36799:38517							
ANR	5212378	FunctionDef	"findmust (struct parse * p , struct re_guts * g)"		5212377	0					
ANR	5212379	CompoundStatement		1635:0:36856:38517	5212377	0					
ANR	5212380	IdentifierDeclStatement	sop * scan ;	1636:1:36859:36868	5212377	0	True				
ANR	5212381	IdentifierDecl	* scan		5212377	0					
ANR	5212382	IdentifierDeclType	sop *		5212377	0					
ANR	5212383	Identifier	scan		5212377	1					
ANR	5212384	IdentifierDeclStatement	sop * start = NULL ;	1637:1:36871:36888	5212377	1	True				
ANR	5212385	IdentifierDecl	* start = NULL		5212377	0					
ANR	5212386	IdentifierDeclType	sop *		5212377	0					
ANR	5212387	Identifier	start		5212377	1					
ANR	5212388	AssignmentExpression	* start = NULL		5212377	2		=			
ANR	5212389	Identifier	NULL		5212377	0					
ANR	5212390	Identifier	NULL		5212377	1					
ANR	5212391	IdentifierDeclStatement	sop * newstart = NULL ;	1638:1:36950:36970	5212377	2	True				
ANR	5212392	IdentifierDecl	* newstart = NULL		5212377	0					
ANR	5212393	IdentifierDeclType	sop *		5212377	0					
ANR	5212394	Identifier	newstart		5212377	1					
ANR	5212395	AssignmentExpression	* newstart = NULL		5212377	2		=			
ANR	5212396	Identifier	NULL		5212377	0					
ANR	5212397	Identifier	NULL		5212377	1					
ANR	5212398	IdentifierDeclStatement	sopno newlen ;	1639:1:37022:37034	5212377	3	True				
ANR	5212399	IdentifierDecl	newlen		5212377	0					
ANR	5212400	IdentifierDeclType	sopno		5212377	0					
ANR	5212401	Identifier	newlen		5212377	1					
ANR	5212402	IdentifierDeclStatement	sop s ;	1640:1:37037:37042	5212377	4	True				
ANR	5212403	IdentifierDecl	s		5212377	0					
ANR	5212404	IdentifierDeclType	sop		5212377	0					
ANR	5212405	Identifier	s		5212377	1					
ANR	5212406	IdentifierDeclStatement	char * cp ;	1641:1:37045:37053	5212377	5	True				
ANR	5212407	IdentifierDecl	* cp		5212377	0					
ANR	5212408	IdentifierDeclType	char *		5212377	0					
ANR	5212409	Identifier	cp		5212377	1					
ANR	5212410	IdentifierDeclStatement	sopno i ;	1642:1:37056:37063	5212377	6	True				
ANR	5212411	IdentifierDecl	i		5212377	0					
ANR	5212412	IdentifierDeclType	sopno		5212377	0					
ANR	5212413	Identifier	i		5212377	1					
ANR	5212414	IfStatement	if ( p -> error != 0 )		5212377	7					
ANR	5212415	Condition	p -> error != 0	1645:5:37114:37126	5212377	0	True				
ANR	5212416	EqualityExpression	p -> error != 0		5212377	0		!=			
ANR	5212417	PtrMemberAccess	p -> error		5212377	0					
ANR	5212418	Identifier	p		5212377	0					
ANR	5212419	Identifier	error		5212377	1					
ANR	5212420	PrimaryExpression	0		5212377	1					
ANR	5212421	CompoundStatement		11:20:272:272	5212377	1					
ANR	5212422	ReturnStatement	return ;	1646:2:37133:37139	5212377	0	True				
ANR	5212423	ExpressionStatement	newlen = 0	1650:1:37194:37204	5212377	8	True				
ANR	5212424	AssignmentExpression	newlen = 0		5212377	0		=			
ANR	5212425	Identifier	newlen		5212377	0					
ANR	5212426	PrimaryExpression	0		5212377	1					
ANR	5212427	ExpressionStatement	start = scan = g -> strip + 1	1651:1:37207:37234	5212377	9	True				
ANR	5212428	AssignmentExpression	start = scan = g -> strip + 1		5212377	0		=			
ANR	5212429	Identifier	start		5212377	0					
ANR	5212430	AssignmentExpression	scan = g -> strip + 1		5212377	1		=			
ANR	5212431	Identifier	scan		5212377	0					
ANR	5212432	AdditiveExpression	g -> strip + 1		5212377	1		+			
ANR	5212433	PtrMemberAccess	g -> strip		5212377	0					
ANR	5212434	Identifier	g		5212377	0					
ANR	5212435	Identifier	strip		5212377	1					
ANR	5212436	PrimaryExpression	1		5212377	1					
ANR	5212437	DoStatement	do		5212377	10					
ANR	5212438	CompoundStatement		18:4:383:383	5212377	0					
ANR	5212439	ExpressionStatement	s = * scan ++	1653:2:37244:37255	5212377	0	True				
ANR	5212440	AssignmentExpression	s = * scan ++		5212377	0		=			
ANR	5212441	Identifier	s		5212377	0					
ANR	5212442	UnaryOperationExpression	* scan ++		5212377	1					
ANR	5212443	UnaryOperator	*		5212377	0					
ANR	5212444	PostIncDecOperationExpression	scan ++		5212377	1					
ANR	5212445	Identifier	scan		5212377	0					
ANR	5212446	IncDec	++		5212377	1					
ANR	5212447	SwitchStatement	switch ( OP ( s ) )		5212377	1					
ANR	5212448	Condition	OP ( s )	1654:10:37267:37271	5212377	0	True				
ANR	5212449	CallExpression	OP ( s )		5212377	0					
ANR	5212450	Callee	OP		5212377	0					
ANR	5212451	Identifier	OP		5212377	0					
ANR	5212452	ArgumentList	s		5212377	1					
ANR	5212453	Argument	s		5212377	0					
ANR	5212454	Identifier	s		5212377	0					
ANR	5212455	CompoundStatement		20:17:417:417	5212377	1					
ANR	5212456	Label	case OCHAR :	1655:2:37278:37288	5212377	0	True				
ANR	5212457	Identifier	OCHAR		5212377	0					
ANR	5212458	IfStatement	if ( newlen == 0 )		5212377	1					
ANR	5212459	Condition	newlen == 0	1656:7:37320:37330	5212377	0	True				
ANR	5212460	EqualityExpression	newlen == 0		5212377	0		==			
ANR	5212461	Identifier	newlen		5212377	0					
ANR	5212462	PrimaryExpression	0		5212377	1					
ANR	5212463	CompoundStatement		22:20:476:476	5212377	1					
ANR	5212464	ExpressionStatement	newstart = scan - 1	1657:4:37358:37377	5212377	0	True				
ANR	5212465	AssignmentExpression	newstart = scan - 1		5212377	0		=			
ANR	5212466	Identifier	newstart		5212377	0					
ANR	5212467	AdditiveExpression	scan - 1		5212377	1		-			
ANR	5212468	Identifier	scan		5212377	0					
ANR	5212469	PrimaryExpression	1		5212377	1					
ANR	5212470	ExpressionStatement	newlen ++	1659:3:37387:37395	5212377	2	True				
ANR	5212471	PostIncDecOperationExpression	newlen ++		5212377	0					
ANR	5212472	Identifier	newlen		5212377	0					
ANR	5212473	IncDec	++		5212377	1					
ANR	5212474	BreakStatement	break ;	1660:3:37400:37405	5212377	3	True				
ANR	5212475	Label	case OPLUS_ :	1661:2:37409:37420	5212377	4	True				
ANR	5212476	Identifier	OPLUS_		5212377	0					
ANR	5212477	Label	case OLPAREN :	1662:2:37459:37471	5212377	5	True				
ANR	5212478	Identifier	OLPAREN		5212377	0					
ANR	5212479	Label	case ORPAREN :	1663:2:37475:37487	5212377	6	True				
ANR	5212480	Identifier	ORPAREN		5212377	0					
ANR	5212481	BreakStatement	break ;	1664:3:37492:37497	5212377	7	True				
ANR	5212482	Label	case OQUEST_ :	1665:2:37501:37513	5212377	8	True				
ANR	5212483	Identifier	OQUEST_		5212377	0					
ANR	5212484	Label	case OCH_ :	1666:2:37552:37561	5212377	9	True				
ANR	5212485	Identifier	OCH_		5212377	0					
ANR	5212486	ExpressionStatement	scan --	1667:3:37566:37572	5212377	10	True				
ANR	5212487	PostIncDecOperationExpression	scan --		5212377	0					
ANR	5212488	Identifier	scan		5212377	0					
ANR	5212489	IncDec	--		5212377	1					
ANR	5212490	DoStatement	do		5212377	11					
ANR	5212491	CompoundStatement		34:6:723:723	5212377	0					
ANR	5212492	ExpressionStatement	scan += OPND ( s )	1669:4:37586:37601	5212377	0	True				
ANR	5212493	AssignmentExpression	scan += OPND ( s )		5212377	0		+=			
ANR	5212494	Identifier	scan		5212377	0					
ANR	5212495	CallExpression	OPND ( s )		5212377	1					
ANR	5212496	Callee	OPND		5212377	0					
ANR	5212497	Identifier	OPND		5212377	0					
ANR	5212498	ArgumentList	s		5212377	1					
ANR	5212499	Argument	s		5212377	0					
ANR	5212500	Identifier	s		5212377	0					
ANR	5212501	ExpressionStatement	s = * scan	1670:4:37607:37616	5212377	1	True				
ANR	5212502	AssignmentExpression	s = * scan		5212377	0		=			
ANR	5212503	Identifier	s		5212377	0					
ANR	5212504	UnaryOperationExpression	* scan		5212377	1					
ANR	5212505	UnaryOperator	*		5212377	0					
ANR	5212506	Identifier	scan		5212377	1					
ANR	5212507	IfStatement	if ( OP ( s ) != O_QUEST && OP ( s ) != O_CH && OP ( s ) != OOR2 )		5212377	2					
ANR	5212508	Condition	OP ( s ) != O_QUEST && OP ( s ) != O_CH && OP ( s ) != OOR2	1672:8:37673:37729	5212377	0	True				
ANR	5212509	AndExpression	OP ( s ) != O_QUEST && OP ( s ) != O_CH && OP ( s ) != OOR2		5212377	0		&&			
ANR	5212510	EqualityExpression	OP ( s ) != O_QUEST		5212377	0		!=			
ANR	5212511	CallExpression	OP ( s )		5212377	0					
ANR	5212512	Callee	OP		5212377	0					
ANR	5212513	Identifier	OP		5212377	0					
ANR	5212514	ArgumentList	s		5212377	1					
ANR	5212515	Argument	s		5212377	0					
ANR	5212516	Identifier	s		5212377	0					
ANR	5212517	Identifier	O_QUEST		5212377	1					
ANR	5212518	AndExpression	OP ( s ) != O_CH && OP ( s ) != OOR2		5212377	1		&&			
ANR	5212519	EqualityExpression	OP ( s ) != O_CH		5212377	0		!=			
ANR	5212520	CallExpression	OP ( s )		5212377	0					
ANR	5212521	Callee	OP		5212377	0					
ANR	5212522	Identifier	OP		5212377	0					
ANR	5212523	ArgumentList	s		5212377	1					
ANR	5212524	Argument	s		5212377	0					
ANR	5212525	Identifier	s		5212377	0					
ANR	5212526	Identifier	O_CH		5212377	1					
ANR	5212527	EqualityExpression	OP ( s ) != OOR2		5212377	1		!=			
ANR	5212528	CallExpression	OP ( s )		5212377	0					
ANR	5212529	Callee	OP		5212377	0					
ANR	5212530	Identifier	OP		5212377	0					
ANR	5212531	ArgumentList	s		5212377	1					
ANR	5212532	Argument	s		5212377	0					
ANR	5212533	Identifier	s		5212377	0					
ANR	5212534	Identifier	OOR2		5212377	1					
ANR	5212535	CompoundStatement		39:22:875:875	5212377	1					
ANR	5212536	ExpressionStatement	g -> iflags |= BAD	1674:5:37739:37755	5212377	0	True				
ANR	5212537	AssignmentExpression	g -> iflags |= BAD		5212377	0		|=			
ANR	5212538	PtrMemberAccess	g -> iflags		5212377	0					
ANR	5212539	Identifier	g		5212377	0					
ANR	5212540	Identifier	iflags		5212377	1					
ANR	5212541	Identifier	BAD		5212377	1					
ANR	5212542	ReturnStatement	return ;	1675:5:37762:37768	5212377	1	True				
ANR	5212543	Condition	OP ( s ) != O_QUEST && OP ( s ) != O_CH	1677:12:37788:37820	5212377	1	True				
ANR	5212544	AndExpression	OP ( s ) != O_QUEST && OP ( s ) != O_CH		5212377	0		&&			
ANR	5212545	EqualityExpression	OP ( s ) != O_QUEST		5212377	0		!=			
ANR	5212546	CallExpression	OP ( s )		5212377	0					
ANR	5212547	Callee	OP		5212377	0					
ANR	5212548	Identifier	OP		5212377	0					
ANR	5212549	ArgumentList	s		5212377	1					
ANR	5212550	Argument	s		5212377	0					
ANR	5212551	Identifier	s		5212377	0					
ANR	5212552	Identifier	O_QUEST		5212377	1					
ANR	5212553	EqualityExpression	OP ( s ) != O_CH		5212377	1		!=			
ANR	5212554	CallExpression	OP ( s )		5212377	0					
ANR	5212555	Callee	OP		5212377	0					
ANR	5212556	Identifier	OP		5212377	0					
ANR	5212557	ArgumentList	s		5212377	1					
ANR	5212558	Argument	s		5212377	0					
ANR	5212559	Identifier	s		5212377	0					
ANR	5212560	Identifier	O_CH		5212377	1					
ANR	5212561	Label	default :	1679:2:37847:37854	5212377	12	True				
ANR	5212562	Identifier	default		5212377	0					
ANR	5212563	IfStatement	if ( newlen > g -> mlen )		5212377	13					
ANR	5212564	Condition	newlen > g -> mlen	1680:7:37899:37914	5212377	0	True				
ANR	5212565	RelationalExpression	newlen > g -> mlen		5212377	0		>			
ANR	5212566	Identifier	newlen		5212377	0					
ANR	5212567	PtrMemberAccess	g -> mlen		5212377	1					
ANR	5212568	Identifier	g		5212377	0					
ANR	5212569	Identifier	mlen		5212377	1					
ANR	5212570	CompoundStatement		46:25:1060:1060	5212377	1					
ANR	5212571	ExpressionStatement	start = newstart	1681:4:37939:37955	5212377	0	True				
ANR	5212572	AssignmentExpression	start = newstart		5212377	0		=			
ANR	5212573	Identifier	start		5212377	0					
ANR	5212574	Identifier	newstart		5212377	1					
ANR	5212575	ExpressionStatement	g -> mlen = newlen	1682:4:37961:37977	5212377	1	True				
ANR	5212576	AssignmentExpression	g -> mlen = newlen		5212377	0		=			
ANR	5212577	PtrMemberAccess	g -> mlen		5212377	0					
ANR	5212578	Identifier	g		5212377	0					
ANR	5212579	Identifier	mlen		5212377	1					
ANR	5212580	Identifier	newlen		5212377	1					
ANR	5212581	ExpressionStatement	newlen = 0	1684:3:37987:37997	5212377	14	True				
ANR	5212582	AssignmentExpression	newlen = 0		5212377	0		=			
ANR	5212583	Identifier	newlen		5212377	0					
ANR	5212584	PrimaryExpression	0		5212377	1					
ANR	5212585	BreakStatement	break ;	1685:3:38002:38007	5212377	15	True				
ANR	5212586	Condition	OP ( s ) != OEND	1687:10:38023:38035	5212377	1	True				
ANR	5212587	EqualityExpression	OP ( s ) != OEND		5212377	0		!=			
ANR	5212588	CallExpression	OP ( s )		5212377	0					
ANR	5212589	Callee	OP		5212377	0					
ANR	5212590	Identifier	OP		5212377	0					
ANR	5212591	ArgumentList	s		5212377	1					
ANR	5212592	Argument	s		5212377	0					
ANR	5212593	Identifier	s		5212377	0					
ANR	5212594	Identifier	OEND		5212377	1					
ANR	5212595	IfStatement	if ( g -> mlen == 0 )		5212377	11					
ANR	5212596	Condition	g -> mlen == 0	1689:5:38045:38056	5212377	0	True				
ANR	5212597	EqualityExpression	g -> mlen == 0		5212377	0		==			
ANR	5212598	PtrMemberAccess	g -> mlen		5212377	0					
ANR	5212599	Identifier	g		5212377	0					
ANR	5212600	Identifier	mlen		5212377	1					
ANR	5212601	PrimaryExpression	0		5212377	1					
ANR	5212602	CompoundStatement		55:19:1202:1202	5212377	1					
ANR	5212603	ReturnStatement	return ;	1690:2:38085:38091	5212377	0	True				
ANR	5212604	ExpressionStatement	g -> must = malloc ( ( size_t ) g -> mlen + 1 )	1694:1:38137:38174	5212377	12	True				
ANR	5212605	AssignmentExpression	g -> must = malloc ( ( size_t ) g -> mlen + 1 )		5212377	0		=			
ANR	5212606	PtrMemberAccess	g -> must		5212377	0					
ANR	5212607	Identifier	g		5212377	0					
ANR	5212608	Identifier	must		5212377	1					
ANR	5212609	CallExpression	malloc ( ( size_t ) g -> mlen + 1 )		5212377	1					
ANR	5212610	Callee	malloc		5212377	0					
ANR	5212611	Identifier	malloc		5212377	0					
ANR	5212612	ArgumentList	( size_t ) g -> mlen + 1		5212377	1					
ANR	5212613	Argument	( size_t ) g -> mlen + 1		5212377	0					
ANR	5212614	AdditiveExpression	( size_t ) g -> mlen + 1		5212377	0		+			
ANR	5212615	CastExpression	( size_t ) g -> mlen		5212377	0					
ANR	5212616	CastTarget	size_t		5212377	0					
ANR	5212617	PtrMemberAccess	g -> mlen		5212377	1					
ANR	5212618	Identifier	g		5212377	0					
ANR	5212619	Identifier	mlen		5212377	1					
ANR	5212620	PrimaryExpression	1		5212377	1					
ANR	5212621	IfStatement	if ( ! g -> must )		5212377	13					
ANR	5212622	Condition	! g -> must	1695:5:38181:38188	5212377	0	True				
ANR	5212623	UnaryOperationExpression	! g -> must		5212377	0					
ANR	5212624	UnaryOperator	!		5212377	0					
ANR	5212625	PtrMemberAccess	g -> must		5212377	1					
ANR	5212626	Identifier	g		5212377	0					
ANR	5212627	Identifier	must		5212377	1					
ANR	5212628	CompoundStatement		61:15:1334:1334	5212377	1					
ANR	5212629	ExpressionStatement	g -> mlen = 0	1696:2:38223:38234	5212377	0	True				
ANR	5212630	AssignmentExpression	g -> mlen = 0		5212377	0		=			
ANR	5212631	PtrMemberAccess	g -> mlen		5212377	0					
ANR	5212632	Identifier	g		5212377	0					
ANR	5212633	Identifier	mlen		5212377	1					
ANR	5212634	PrimaryExpression	0		5212377	1					
ANR	5212635	ReturnStatement	return ;	1697:2:38238:38244	5212377	1	True				
ANR	5212636	ExpressionStatement	cp = g -> must	1699:1:38250:38262	5212377	14	True				
ANR	5212637	AssignmentExpression	cp = g -> must		5212377	0		=			
ANR	5212638	Identifier	cp		5212377	0					
ANR	5212639	PtrMemberAccess	g -> must		5212377	1					
ANR	5212640	Identifier	g		5212377	0					
ANR	5212641	Identifier	must		5212377	1					
ANR	5212642	ExpressionStatement	scan = start	1700:1:38265:38277	5212377	15	True				
ANR	5212643	AssignmentExpression	scan = start		5212377	0		=			
ANR	5212644	Identifier	scan		5212377	0					
ANR	5212645	Identifier	start		5212377	1					
ANR	5212646	ForStatement	for ( i = g -> mlen ; i > 0 ; i -- )		5212377	16					
ANR	5212647	ForInit	i = g -> mlen ;	1701:6:38285:38296	5212377	0	True				
ANR	5212648	AssignmentExpression	i = g -> mlen		5212377	0		=			
ANR	5212649	Identifier	i		5212377	0					
ANR	5212650	PtrMemberAccess	g -> mlen		5212377	1					
ANR	5212651	Identifier	g		5212377	0					
ANR	5212652	Identifier	mlen		5212377	1					
ANR	5212653	Condition	i > 0	1701:19:38298:38302	5212377	1	True				
ANR	5212654	RelationalExpression	i > 0		5212377	0		>			
ANR	5212655	Identifier	i		5212377	0					
ANR	5212656	PrimaryExpression	0		5212377	1					
ANR	5212657	PostIncDecOperationExpression	i --	1701:26:38305:38307	5212377	2	True				
ANR	5212658	Identifier	i		5212377	0					
ANR	5212659	IncDec	--		5212377	1					
ANR	5212660	CompoundStatement		67:31:1453:1453	5212377	3					
ANR	5212661	WhileStatement	while ( OP ( s = * scan ++ ) != OCHAR )		5212377	0					
ANR	5212662	Condition	OP ( s = * scan ++ ) != OCHAR	1702:9:38321:38345	5212377	0	True				
ANR	5212663	EqualityExpression	OP ( s = * scan ++ ) != OCHAR		5212377	0		!=			
ANR	5212664	CallExpression	OP ( s = * scan ++ )		5212377	0					
ANR	5212665	Callee	OP		5212377	0					
ANR	5212666	Identifier	OP		5212377	0					
ANR	5212667	ArgumentList	s = * scan ++		5212377	1					
ANR	5212668	Argument	s = * scan ++		5212377	0					
ANR	5212669	AssignmentExpression	s = * scan ++		5212377	0		=			
ANR	5212670	Identifier	s		5212377	0					
ANR	5212671	UnaryOperationExpression	* scan ++		5212377	1					
ANR	5212672	UnaryOperator	*		5212377	0					
ANR	5212673	PostIncDecOperationExpression	scan ++		5212377	1					
ANR	5212674	Identifier	scan		5212377	0					
ANR	5212675	IncDec	++		5212377	1					
ANR	5212676	Identifier	OCHAR		5212377	1					
ANR	5212677	CompoundStatement		68:36:1491:1491	5212377	1					
ANR	5212678	ContinueStatement	continue ;	1703:3:38353:38361	5212377	0	True				
ANR	5212679	IfStatement	if ( cp < g -> must + g -> mlen )		5212377	1					
ANR	5212680	Condition	cp < g -> must + g -> mlen	1705:6:38373:38394	5212377	0	True				
ANR	5212681	RelationalExpression	cp < g -> must + g -> mlen		5212377	0		<			
ANR	5212682	Identifier	cp		5212377	0					
ANR	5212683	AdditiveExpression	g -> must + g -> mlen		5212377	1		+			
ANR	5212684	PtrMemberAccess	g -> must		5212377	0					
ANR	5212685	Identifier	g		5212377	0					
ANR	5212686	Identifier	must		5212377	1					
ANR	5212687	PtrMemberAccess	g -> mlen		5212377	1					
ANR	5212688	Identifier	g		5212377	0					
ANR	5212689	Identifier	mlen		5212377	1					
ANR	5212690	CompoundStatement		71:30:1540:1540	5212377	1					
ANR	5212691	ExpressionStatement	* cp ++ = ( char ) OPND ( s )	1706:3:38402:38423	5212377	0	True				
ANR	5212692	AssignmentExpression	* cp ++ = ( char ) OPND ( s )		5212377	0		=			
ANR	5212693	UnaryOperationExpression	* cp ++		5212377	0					
ANR	5212694	UnaryOperator	*		5212377	0					
ANR	5212695	PostIncDecOperationExpression	cp ++		5212377	1					
ANR	5212696	Identifier	cp		5212377	0					
ANR	5212697	IncDec	++		5212377	1					
ANR	5212698	CastExpression	( char ) OPND ( s )		5212377	1					
ANR	5212699	CastTarget	char		5212377	0					
ANR	5212700	CallExpression	OPND ( s )		5212377	1					
ANR	5212701	Callee	OPND		5212377	0					
ANR	5212702	Identifier	OPND		5212377	0					
ANR	5212703	ArgumentList	s		5212377	1					
ANR	5212704	Argument	s		5212377	0					
ANR	5212705	Identifier	s		5212377	0					
ANR	5212706	IfStatement	if ( cp == g -> must + g -> mlen )		5212377	17					
ANR	5212707	Condition	cp == g -> must + g -> mlen	1709:5:38437:38459	5212377	0	True				
ANR	5212708	EqualityExpression	cp == g -> must + g -> mlen		5212377	0		==			
ANR	5212709	Identifier	cp		5212377	0					
ANR	5212710	AdditiveExpression	g -> must + g -> mlen		5212377	1		+			
ANR	5212711	PtrMemberAccess	g -> must		5212377	0					
ANR	5212712	Identifier	g		5212377	0					
ANR	5212713	Identifier	must		5212377	1					
ANR	5212714	PtrMemberAccess	g -> mlen		5212377	1					
ANR	5212715	Identifier	g		5212377	0					
ANR	5212716	Identifier	mlen		5212377	1					
ANR	5212717	CompoundStatement		75:30:1605:1605	5212377	1					
ANR	5212718	ExpressionStatement	* cp ++ = '\\0'	1710:2:38466:38478	5212377	0	True				
ANR	5212719	AssignmentExpression	* cp ++ = '\\0'		5212377	0		=			
ANR	5212720	UnaryOperationExpression	* cp ++		5212377	0					
ANR	5212721	UnaryOperator	*		5212377	0					
ANR	5212722	PostIncDecOperationExpression	cp ++		5212377	1					
ANR	5212723	Identifier	cp		5212377	0					
ANR	5212724	IncDec	++		5212377	1					
ANR	5212725	PrimaryExpression	'\\0'		5212377	1					
ANR	5212726	ReturnType	static void		5212377	1					
ANR	5212727	Identifier	findmust		5212377	2					
ANR	5212728	ParameterList	"struct parse * p , struct re_guts * g"		5212377	3					
ANR	5212729	Parameter	struct parse * p	1634:9:36820:36834	5212377	0	True				
ANR	5212730	ParameterType	struct parse *		5212377	0					
ANR	5212731	Identifier	p		5212377	1					
ANR	5212732	Parameter	struct re_guts * g	1634:26:36837:36853	5212377	1	True				
ANR	5212733	ParameterType	struct re_guts *		5212377	0					
ANR	5212734	Identifier	g		5212377	1					
ANR	5212735	CFGEntryNode	ENTRY		5212377		True				
ANR	5212736	CFGExitNode	EXIT		5212377		True				
ANR	5212737	Symbol	scan		5212377						
ANR	5212738	Symbol	newlen		5212377						
ANR	5212739	Symbol	g -> iflags		5212377						
ANR	5212740	Symbol	g -> strip		5212377						
ANR	5212741	Symbol	O_QUEST		5212377						
ANR	5212742	Symbol	* scan		5212377						
ANR	5212743	Symbol	OCHAR		5212377						
ANR	5212744	Symbol	OP		5212377						
ANR	5212745	Symbol	malloc		5212377						
ANR	5212746	Symbol	NULL		5212377						
ANR	5212747	Symbol	OOR2		5212377						
ANR	5212748	Symbol	BAD		5212377						
ANR	5212749	Symbol	g		5212377						
ANR	5212750	Symbol	start		5212377						
ANR	5212751	Symbol	OEND		5212377						
ANR	5212752	Symbol	* scan ++		5212377						
ANR	5212753	Symbol	i		5212377						
ANR	5212754	Symbol	cp		5212377						
ANR	5212755	Symbol	p -> error		5212377						
ANR	5212756	Symbol	p		5212377						
ANR	5212757	Symbol	newstart		5212377						
ANR	5212758	Symbol	O_CH		5212377						
ANR	5212759	Symbol	* g		5212377						
ANR	5212760	Symbol	OPND		5212377						
ANR	5212761	Symbol	s		5212377						
ANR	5212762	Symbol	g -> must		5212377						
ANR	5212763	Symbol	g -> mlen		5212377						
ANR	5212764	Symbol	* p		5212377						
ANR	5212765	Symbol	* cp ++		5212377						
ANR	5212766	Function	pluscount	1717:0:38558:39067							
ANR	5212767	FunctionDef	"pluscount (struct parse * p , struct re_guts * g)"		5212766	0					
ANR	5212768	CompoundStatement		1719:0:38639:39067	5212766	0					
ANR	5212769	IdentifierDeclStatement	sop * scan ;	1720:1:38642:38651	5212766	0	True				
ANR	5212770	IdentifierDecl	* scan		5212766	0					
ANR	5212771	IdentifierDeclType	sop *		5212766	0					
ANR	5212772	Identifier	scan		5212766	1					
ANR	5212773	IdentifierDeclStatement	sop s ;	1721:1:38654:38659	5212766	1	True				
ANR	5212774	IdentifierDecl	s		5212766	0					
ANR	5212775	IdentifierDeclType	sop		5212766	0					
ANR	5212776	Identifier	s		5212766	1					
ANR	5212777	IdentifierDeclStatement	sopno plusnest = 0 ;	1722:1:38662:38680	5212766	2	True				
ANR	5212778	IdentifierDecl	plusnest = 0		5212766	0					
ANR	5212779	IdentifierDeclType	sopno		5212766	0					
ANR	5212780	Identifier	plusnest		5212766	1					
ANR	5212781	AssignmentExpression	plusnest = 0		5212766	2		=			
ANR	5212782	Identifier	plusnest		5212766	0					
ANR	5212783	PrimaryExpression	0		5212766	1					
ANR	5212784	IdentifierDeclStatement	sopno maxnest = 0 ;	1723:1:38683:38700	5212766	3	True				
ANR	5212785	IdentifierDecl	maxnest = 0		5212766	0					
ANR	5212786	IdentifierDeclType	sopno		5212766	0					
ANR	5212787	Identifier	maxnest		5212766	1					
ANR	5212788	AssignmentExpression	maxnest = 0		5212766	2		=			
ANR	5212789	Identifier	maxnest		5212766	0					
ANR	5212790	PrimaryExpression	0		5212766	1					
ANR	5212791	IfStatement	if ( p -> error != 0 )		5212766	4					
ANR	5212792	Condition	p -> error != 0	1725:5:38708:38720	5212766	0	True				
ANR	5212793	EqualityExpression	p -> error != 0		5212766	0		!=			
ANR	5212794	PtrMemberAccess	p -> error		5212766	0					
ANR	5212795	Identifier	p		5212766	0					
ANR	5212796	Identifier	error		5212766	1					
ANR	5212797	PrimaryExpression	0		5212766	1					
ANR	5212798	CompoundStatement		7:20:83:83	5212766	1					
ANR	5212799	ReturnStatement	return ( 0 ) ;	1726:2:38727:38737	5212766	0	True				
ANR	5212800	PrimaryExpression	0		5212766	0					
ANR	5212801	ExpressionStatement	scan = g -> strip + 1	1729:1:38775:38794	5212766	5	True				
ANR	5212802	AssignmentExpression	scan = g -> strip + 1		5212766	0		=			
ANR	5212803	Identifier	scan		5212766	0					
ANR	5212804	AdditiveExpression	g -> strip + 1		5212766	1		+			
ANR	5212805	PtrMemberAccess	g -> strip		5212766	0					
ANR	5212806	Identifier	g		5212766	0					
ANR	5212807	Identifier	strip		5212766	1					
ANR	5212808	PrimaryExpression	1		5212766	1					
ANR	5212809	DoStatement	do		5212766	6					
ANR	5212810	CompoundStatement		12:4:160:160	5212766	0					
ANR	5212811	ExpressionStatement	s = * scan ++	1731:2:38804:38815	5212766	0	True				
ANR	5212812	AssignmentExpression	s = * scan ++		5212766	0		=			
ANR	5212813	Identifier	s		5212766	0					
ANR	5212814	UnaryOperationExpression	* scan ++		5212766	1					
ANR	5212815	UnaryOperator	*		5212766	0					
ANR	5212816	PostIncDecOperationExpression	scan ++		5212766	1					
ANR	5212817	Identifier	scan		5212766	0					
ANR	5212818	IncDec	++		5212766	1					
ANR	5212819	SwitchStatement	switch ( OP ( s ) )		5212766	1					
ANR	5212820	Condition	OP ( s )	1732:10:38827:38831	5212766	0	True				
ANR	5212821	CallExpression	OP ( s )		5212766	0					
ANR	5212822	Callee	OP		5212766	0					
ANR	5212823	Identifier	OP		5212766	0					
ANR	5212824	ArgumentList	s		5212766	1					
ANR	5212825	Argument	s		5212766	0					
ANR	5212826	Identifier	s		5212766	0					
ANR	5212827	CompoundStatement		14:17:194:194	5212766	1					
ANR	5212828	Label	case OPLUS_ :	1733:2:38838:38849	5212766	0	True				
ANR	5212829	Identifier	OPLUS_		5212766	0					
ANR	5212830	ExpressionStatement	plusnest ++	1734:3:38854:38864	5212766	1	True				
ANR	5212831	PostIncDecOperationExpression	plusnest ++		5212766	0					
ANR	5212832	Identifier	plusnest		5212766	0					
ANR	5212833	IncDec	++		5212766	1					
ANR	5212834	BreakStatement	break ;	1735:3:38869:38874	5212766	2	True				
ANR	5212835	Label	case O_PLUS :	1736:2:38878:38889	5212766	3	True				
ANR	5212836	Identifier	O_PLUS		5212766	0					
ANR	5212837	IfStatement	if ( plusnest > maxnest )		5212766	4					
ANR	5212838	Condition	plusnest > maxnest	1737:7:38898:38915	5212766	0	True				
ANR	5212839	RelationalExpression	plusnest > maxnest		5212766	0		>			
ANR	5212840	Identifier	plusnest		5212766	0					
ANR	5212841	Identifier	maxnest		5212766	1					
ANR	5212842	CompoundStatement		19:27:278:278	5212766	1					
ANR	5212843	ExpressionStatement	maxnest = plusnest	1738:4:38924:38942	5212766	0	True				
ANR	5212844	AssignmentExpression	maxnest = plusnest		5212766	0		=			
ANR	5212845	Identifier	maxnest		5212766	0					
ANR	5212846	Identifier	plusnest		5212766	1					
ANR	5212847	ExpressionStatement	plusnest --	1740:3:38952:38962	5212766	5	True				
ANR	5212848	PostIncDecOperationExpression	plusnest --		5212766	0					
ANR	5212849	Identifier	plusnest		5212766	0					
ANR	5212850	IncDec	--		5212766	1					
ANR	5212851	BreakStatement	break ;	1741:3:38967:38972	5212766	6	True				
ANR	5212852	Condition	OP ( s ) != OEND	1743:10:38988:39000	5212766	1	True				
ANR	5212853	EqualityExpression	OP ( s ) != OEND		5212766	0		!=			
ANR	5212854	CallExpression	OP ( s )		5212766	0					
ANR	5212855	Callee	OP		5212766	0					
ANR	5212856	Identifier	OP		5212766	0					
ANR	5212857	ArgumentList	s		5212766	1					
ANR	5212858	Argument	s		5212766	0					
ANR	5212859	Identifier	s		5212766	0					
ANR	5212860	Identifier	OEND		5212766	1					
ANR	5212861	IfStatement	if ( plusnest != 0 )		5212766	7					
ANR	5212862	Condition	plusnest != 0	1744:5:39009:39021	5212766	0	True				
ANR	5212863	EqualityExpression	plusnest != 0		5212766	0		!=			
ANR	5212864	Identifier	plusnest		5212766	0					
ANR	5212865	PrimaryExpression	0		5212766	1					
ANR	5212866	CompoundStatement		26:20:384:384	5212766	1					
ANR	5212867	ExpressionStatement	g -> iflags |= BAD	1745:2:39028:39044	5212766	0	True				
ANR	5212868	AssignmentExpression	g -> iflags |= BAD		5212766	0		|=			
ANR	5212869	PtrMemberAccess	g -> iflags		5212766	0					
ANR	5212870	Identifier	g		5212766	0					
ANR	5212871	Identifier	iflags		5212766	1					
ANR	5212872	Identifier	BAD		5212766	1					
ANR	5212873	ReturnStatement	return ( maxnest ) ;	1747:1:39050:39065	5212766	8	True				
ANR	5212874	Identifier	maxnest		5212766	0					
ANR	5212875	ReturnType	static sopno		5212766	1					
ANR	5212876	Identifier	pluscount		5212766	2					
ANR	5212877	ParameterList	"struct parse * p , struct re_guts * g"		5212766	3					
ANR	5212878	Parameter	struct parse * p	1718:10:38603:38617	5212766	0	True				
ANR	5212879	ParameterType	struct parse *		5212766	0					
ANR	5212880	Identifier	p		5212766	1					
ANR	5212881	Parameter	struct re_guts * g	1718:27:38620:38636	5212766	1	True				
ANR	5212882	ParameterType	struct re_guts *		5212766	0					
ANR	5212883	Identifier	g		5212766	1					
ANR	5212884	CFGEntryNode	ENTRY		5212766		True				
ANR	5212885	CFGExitNode	EXIT		5212766		True				
ANR	5212886	Symbol	plusnest		5212766						
ANR	5212887	Symbol	OP		5212766						
ANR	5212888	Symbol	BAD		5212766						
ANR	5212889	Symbol	g		5212766						
ANR	5212890	Symbol	maxnest		5212766						
ANR	5212891	Symbol	scan		5212766						
ANR	5212892	Symbol	OEND		5212766						
ANR	5212893	Symbol	* scan ++		5212766						
ANR	5212894	Symbol	p -> error		5212766						
ANR	5212895	Symbol	p		5212766						
ANR	5212896	Symbol	* g		5212766						
ANR	5212897	Symbol	g -> iflags		5212766						
ANR	5212898	Symbol	s		5212766						
ANR	5212899	Symbol	g -> strip		5212766						
ANR	5212900	Symbol	* p		5212766						
