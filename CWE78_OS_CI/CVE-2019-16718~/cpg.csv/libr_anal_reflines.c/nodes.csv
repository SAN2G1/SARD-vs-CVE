command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2499296	File	data/converged/CVE-2019-16718~_radare2/libr_anal_reflines.c								
ANR	2499297	ClassDef	refline_end	12:8:468:544							
ANR	2499298	DeclStmt									
ANR	2499299	Decl							int	int	val
ANR	2499300	DeclStmt									
ANR	2499301	Decl							bool	bool	is_from
ANR	2499302	DeclStmt									
ANR	2499303	Decl							RAnalRefline	RAnalRefline *	r
ANR	2499304	DeclStmt									
ANR	2499305	Decl							refline_end	refline_end	ReflineEnd
ANR	2499306	Function	cmp_asc	18:0:547:651							
ANR	2499307	FunctionDef	"cmp_asc (const struct refline_end * a , const struct refline_end * b)"		2499306	0					
ANR	2499308	CompoundStatement		18:77:624:651	2499306	0					
ANR	2499309	ReturnStatement	return a -> val > b -> val ;	19:1:627:649	2499306	0	True				
ANR	2499310	RelationalExpression	a -> val > b -> val		2499306	0		>			
ANR	2499311	PtrMemberAccess	a -> val		2499306	0					
ANR	2499312	Identifier	a		2499306	0					
ANR	2499313	Identifier	val		2499306	1					
ANR	2499314	PtrMemberAccess	b -> val		2499306	1					
ANR	2499315	Identifier	b		2499306	0					
ANR	2499316	Identifier	val		2499306	1					
ANR	2499317	ReturnType	static int		2499306	1					
ANR	2499318	Identifier	cmp_asc		2499306	2					
ANR	2499319	ParameterList	"const struct refline_end * a , const struct refline_end * b"		2499306	3					
ANR	2499320	Parameter	const struct refline_end * a	18:19:566:592	2499306	0	True				
ANR	2499321	ParameterType	const struct refline_end *		2499306	0					
ANR	2499322	Identifier	a		2499306	1					
ANR	2499323	Parameter	const struct refline_end * b	18:48:595:621	2499306	1	True				
ANR	2499324	ParameterType	const struct refline_end *		2499306	0					
ANR	2499325	Identifier	b		2499306	1					
ANR	2499326	CFGEntryNode	ENTRY		2499306		True				
ANR	2499327	CFGExitNode	EXIT		2499306		True				
ANR	2499328	Symbol	a		2499306						
ANR	2499329	Symbol	b		2499306						
ANR	2499330	Symbol	* a		2499306						
ANR	2499331	Symbol	* b		2499306						
ANR	2499332	Symbol	a -> val		2499306						
ANR	2499333	Symbol	b -> val		2499306						
ANR	2499334	Function	cmp_by_ref_lvl	22:0:654:757							
ANR	2499335	FunctionDef	"cmp_by_ref_lvl (const RAnalRefline * a , const RAnalRefline * b)"		2499334	0					
ANR	2499336	CompoundStatement		22:72:726:757	2499334	0					
ANR	2499337	ReturnStatement	return a -> level < b -> level ;	23:1:729:755	2499334	0	True				
ANR	2499338	RelationalExpression	a -> level < b -> level		2499334	0		<			
ANR	2499339	PtrMemberAccess	a -> level		2499334	0					
ANR	2499340	Identifier	a		2499334	0					
ANR	2499341	Identifier	level		2499334	1					
ANR	2499342	PtrMemberAccess	b -> level		2499334	1					
ANR	2499343	Identifier	b		2499334	0					
ANR	2499344	Identifier	level		2499334	1					
ANR	2499345	ReturnType	static int		2499334	1					
ANR	2499346	Identifier	cmp_by_ref_lvl		2499334	2					
ANR	2499347	ParameterList	"const RAnalRefline * a , const RAnalRefline * b"		2499334	3					
ANR	2499348	Parameter	const RAnalRefline * a	22:26:680:700	2499334	0	True				
ANR	2499349	ParameterType	const RAnalRefline *		2499334	0					
ANR	2499350	Identifier	a		2499334	1					
ANR	2499351	Parameter	const RAnalRefline * b	22:49:703:723	2499334	1	True				
ANR	2499352	ParameterType	const RAnalRefline *		2499334	0					
ANR	2499353	Identifier	b		2499334	1					
ANR	2499354	CFGEntryNode	ENTRY		2499334		True				
ANR	2499355	CFGExitNode	EXIT		2499334		True				
ANR	2499356	Symbol	a		2499334						
ANR	2499357	Symbol	a -> level		2499334						
ANR	2499358	Symbol	b		2499334						
ANR	2499359	Symbol	* a		2499334						
ANR	2499360	Symbol	* b		2499334						
ANR	2499361	Symbol	b -> level		2499334						
ANR	2499362	Function	refline_end_new	26:0:760:983							
ANR	2499363	FunctionDef	"refline_end_new (ut64 val , bool is_from , RAnalRefline * ref)"		2499362	0					
ANR	2499364	CompoundStatement		26:78:838:983	2499362	0					
ANR	2499365	Statement	ReflineEnd	27:1:841:850	2499362	0	True				
ANR	2499366	Statement	*	27:12:852:852	2499362	1	True				
ANR	2499367	Statement	re	27:13:853:854	2499362	2	True				
ANR	2499368	Statement	=	27:16:856:856	2499362	3	True				
ANR	2499369	Statement	R_NEW0	27:18:858:863	2499362	4	True				
ANR	2499370	Statement	(	27:25:865:865	2499362	5	True				
ANR	2499371	Statement	struct	27:26:866:871	2499362	6	True				
ANR	2499372	Statement	refline_end	27:33:873:883	2499362	7	True				
ANR	2499373	Statement	)	27:44:884:884	2499362	8	True				
ANR	2499374	ExpressionStatement		27:45:885:885	2499362	9	True				
ANR	2499375	IfStatement	if ( ! re )		2499362	10					
ANR	2499376	Condition	! re	28:5:892:894	2499362	0	True				
ANR	2499377	UnaryOperationExpression	! re		2499362	0					
ANR	2499378	UnaryOperator	!		2499362	0					
ANR	2499379	Identifier	re		2499362	1					
ANR	2499380	CompoundStatement		3:10:58:58	2499362	1					
ANR	2499381	ReturnStatement	return NULL ;	29:2:901:912	2499362	0	True				
ANR	2499382	Identifier	NULL		2499362	0					
ANR	2499383	ExpressionStatement	re -> val = val	31:1:918:931	2499362	11	True				
ANR	2499384	AssignmentExpression	re -> val = val		2499362	0		=			
ANR	2499385	PtrMemberAccess	re -> val		2499362	0					
ANR	2499386	Identifier	re		2499362	0					
ANR	2499387	Identifier	val		2499362	1					
ANR	2499388	Identifier	val		2499362	1					
ANR	2499389	ExpressionStatement	re -> is_from = is_from	32:1:934:955	2499362	12	True				
ANR	2499390	AssignmentExpression	re -> is_from = is_from		2499362	0		=			
ANR	2499391	PtrMemberAccess	re -> is_from		2499362	0					
ANR	2499392	Identifier	re		2499362	0					
ANR	2499393	Identifier	is_from		2499362	1					
ANR	2499394	Identifier	is_from		2499362	1					
ANR	2499395	ExpressionStatement	re -> r = ref	33:1:958:969	2499362	13	True				
ANR	2499396	AssignmentExpression	re -> r = ref		2499362	0		=			
ANR	2499397	PtrMemberAccess	re -> r		2499362	0					
ANR	2499398	Identifier	re		2499362	0					
ANR	2499399	Identifier	r		2499362	1					
ANR	2499400	Identifier	ref		2499362	1					
ANR	2499401	ReturnStatement	return re ;	34:1:972:981	2499362	14	True				
ANR	2499402	Identifier	re		2499362	0					
ANR	2499403	ReturnType	static ReflineEnd *		2499362	1					
ANR	2499404	Identifier	refline_end_new		2499362	2					
ANR	2499405	ParameterList	"ut64 val , bool is_from , RAnalRefline * ref"		2499362	3					
ANR	2499406	Parameter	ut64 val	26:35:795:802	2499362	0	True				
ANR	2499407	ParameterType	ut64		2499362	0					
ANR	2499408	Identifier	val		2499362	1					
ANR	2499409	Parameter	bool is_from	26:45:805:816	2499362	1	True				
ANR	2499410	ParameterType	bool		2499362	0					
ANR	2499411	Identifier	is_from		2499362	1					
ANR	2499412	Parameter	RAnalRefline * ref	26:59:819:835	2499362	2	True				
ANR	2499413	ParameterType	RAnalRefline *		2499362	0					
ANR	2499414	Identifier	ref		2499362	1					
ANR	2499415	CFGEntryNode	ENTRY		2499362		True				
ANR	2499416	CFGExitNode	EXIT		2499362		True				
ANR	2499417	Symbol	val		2499362						
ANR	2499418	Symbol	re -> is_from		2499362						
ANR	2499419	Symbol	ref		2499362						
ANR	2499420	Symbol	re		2499362						
ANR	2499421	Symbol	NULL		2499362						
ANR	2499422	Symbol	re -> val		2499362						
ANR	2499423	Symbol	re -> r		2499362						
ANR	2499424	Symbol	is_from		2499362						
ANR	2499425	Symbol	* re		2499362						
ANR	2499426	Function	add_refline	37:0:986:1663							
ANR	2499427	FunctionDef	"add_refline (RList * list , RList * sten , ut64 addr , ut64 to , int * idx)"		2499426	0					
ANR	2499428	CompoundStatement		37:80:1066:1663	2499426	0					
ANR	2499429	IdentifierDeclStatement	"ReflineEnd * re1 , * re2 ;"	38:1:1069:1090	2499426	0	True				
ANR	2499430	IdentifierDecl	* re1		2499426	0					
ANR	2499431	IdentifierDeclType	ReflineEnd *		2499426	0					
ANR	2499432	Identifier	re1		2499426	1					
ANR	2499433	IdentifierDecl	* re2		2499426	1					
ANR	2499434	IdentifierDeclType	ReflineEnd *		2499426	0					
ANR	2499435	Identifier	re2		2499426	1					
ANR	2499436	IdentifierDeclStatement	RAnalRefline * item = R_NEW0 ( RAnalRefline ) ;	39:1:1093:1135	2499426	1	True				
ANR	2499437	IdentifierDecl	* item = R_NEW0 ( RAnalRefline )		2499426	0					
ANR	2499438	IdentifierDeclType	RAnalRefline *		2499426	0					
ANR	2499439	Identifier	item		2499426	1					
ANR	2499440	AssignmentExpression	* item = R_NEW0 ( RAnalRefline )		2499426	2		=			
ANR	2499441	Identifier	item		2499426	0					
ANR	2499442	CallExpression	R_NEW0 ( RAnalRefline )		2499426	1					
ANR	2499443	Callee	R_NEW0		2499426	0					
ANR	2499444	Identifier	R_NEW0		2499426	0					
ANR	2499445	ArgumentList	RAnalRefline		2499426	1					
ANR	2499446	Argument	RAnalRefline		2499426	0					
ANR	2499447	Identifier	RAnalRefline		2499426	0					
ANR	2499448	IfStatement	if ( ! item )		2499426	2					
ANR	2499449	Condition	! item	40:5:1142:1146	2499426	0	True				
ANR	2499450	UnaryOperationExpression	! item		2499426	0					
ANR	2499451	UnaryOperator	!		2499426	0					
ANR	2499452	Identifier	item		2499426	1					
ANR	2499453	CompoundStatement		4:12:82:82	2499426	1					
ANR	2499454	ReturnStatement	return false ;	41:2:1153:1165	2499426	0	True				
ANR	2499455	Identifier	false		2499426	0					
ANR	2499456	ExpressionStatement	item -> from = addr	43:1:1171:1188	2499426	3	True				
ANR	2499457	AssignmentExpression	item -> from = addr		2499426	0		=			
ANR	2499458	PtrMemberAccess	item -> from		2499426	0					
ANR	2499459	Identifier	item		2499426	0					
ANR	2499460	Identifier	from		2499426	1					
ANR	2499461	Identifier	addr		2499426	1					
ANR	2499462	ExpressionStatement	item -> to = to	44:1:1191:1204	2499426	4	True				
ANR	2499463	AssignmentExpression	item -> to = to		2499426	0		=			
ANR	2499464	PtrMemberAccess	item -> to		2499426	0					
ANR	2499465	Identifier	item		2499426	0					
ANR	2499466	Identifier	to		2499426	1					
ANR	2499467	Identifier	to		2499426	1					
ANR	2499468	ExpressionStatement	item -> index = * idx	45:1:1207:1225	2499426	5	True				
ANR	2499469	AssignmentExpression	item -> index = * idx		2499426	0		=			
ANR	2499470	PtrMemberAccess	item -> index		2499426	0					
ANR	2499471	Identifier	item		2499426	0					
ANR	2499472	Identifier	index		2499426	1					
ANR	2499473	UnaryOperationExpression	* idx		2499426	1					
ANR	2499474	UnaryOperator	*		2499426	0					
ANR	2499475	Identifier	idx		2499426	1					
ANR	2499476	ExpressionStatement	item -> level = - 1	46:1:1228:1244	2499426	6	True				
ANR	2499477	AssignmentExpression	item -> level = - 1		2499426	0		=			
ANR	2499478	PtrMemberAccess	item -> level		2499426	0					
ANR	2499479	Identifier	item		2499426	0					
ANR	2499480	Identifier	level		2499426	1					
ANR	2499481	UnaryOperationExpression	- 1		2499426	1					
ANR	2499482	UnaryOperator	-		2499426	0					
ANR	2499483	PrimaryExpression	1		2499426	1					
ANR	2499484	ExpressionStatement	item -> direction = ( to > addr ) ? 1 : - 1	47:1:1247:1283	2499426	7	True				
ANR	2499485	AssignmentExpression	item -> direction = ( to > addr ) ? 1 : - 1		2499426	0		=			
ANR	2499486	PtrMemberAccess	item -> direction		2499426	0					
ANR	2499487	Identifier	item		2499426	0					
ANR	2499488	Identifier	direction		2499426	1					
ANR	2499489	ConditionalExpression	( to > addr ) ? 1 : - 1		2499426	1					
ANR	2499490	Condition	to > addr		2499426	0					
ANR	2499491	RelationalExpression	to > addr		2499426	0		>			
ANR	2499492	Identifier	to		2499426	0					
ANR	2499493	Identifier	addr		2499426	1					
ANR	2499494	PrimaryExpression	1		2499426	1					
ANR	2499495	UnaryOperationExpression	- 1		2499426	2					
ANR	2499496	UnaryOperator	-		2499426	0					
ANR	2499497	PrimaryExpression	1		2499426	1					
ANR	2499498	ExpressionStatement	* idx += 1	48:1:1286:1295	2499426	8	True				
ANR	2499499	AssignmentExpression	* idx += 1		2499426	0		+=			
ANR	2499500	UnaryOperationExpression	* idx		2499426	0					
ANR	2499501	UnaryOperator	*		2499426	0					
ANR	2499502	Identifier	idx		2499426	1					
ANR	2499503	PrimaryExpression	1		2499426	1					
ANR	2499504	ExpressionStatement	"r_list_append ( list , item )"	49:1:1298:1324	2499426	9	True				
ANR	2499505	CallExpression	"r_list_append ( list , item )"		2499426	0					
ANR	2499506	Callee	r_list_append		2499426	0					
ANR	2499507	Identifier	r_list_append		2499426	0					
ANR	2499508	ArgumentList	list		2499426	1					
ANR	2499509	Argument	list		2499426	0					
ANR	2499510	Identifier	list		2499426	0					
ANR	2499511	Argument	item		2499426	1					
ANR	2499512	Identifier	item		2499426	0					
ANR	2499513	ExpressionStatement	"re1 = refline_end_new ( item -> from , true , item )"	51:1:1328:1374	2499426	10	True				
ANR	2499514	AssignmentExpression	"re1 = refline_end_new ( item -> from , true , item )"		2499426	0		=			
ANR	2499515	Identifier	re1		2499426	0					
ANR	2499516	CallExpression	"refline_end_new ( item -> from , true , item )"		2499426	1					
ANR	2499517	Callee	refline_end_new		2499426	0					
ANR	2499518	Identifier	refline_end_new		2499426	0					
ANR	2499519	ArgumentList	item -> from		2499426	1					
ANR	2499520	Argument	item -> from		2499426	0					
ANR	2499521	PtrMemberAccess	item -> from		2499426	0					
ANR	2499522	Identifier	item		2499426	0					
ANR	2499523	Identifier	from		2499426	1					
ANR	2499524	Argument	true		2499426	1					
ANR	2499525	Identifier	true		2499426	0					
ANR	2499526	Argument	item		2499426	2					
ANR	2499527	Identifier	item		2499426	0					
ANR	2499528	IfStatement	if ( ! re1 )		2499426	11					
ANR	2499529	Condition	! re1	52:5:1381:1384	2499426	0	True				
ANR	2499530	UnaryOperationExpression	! re1		2499426	0					
ANR	2499531	UnaryOperator	!		2499426	0					
ANR	2499532	Identifier	re1		2499426	1					
ANR	2499533	CompoundStatement		16:11:320:320	2499426	1					
ANR	2499534	ExpressionStatement	free ( item )	53:2:1391:1402	2499426	0	True				
ANR	2499535	CallExpression	free ( item )		2499426	0					
ANR	2499536	Callee	free		2499426	0					
ANR	2499537	Identifier	free		2499426	0					
ANR	2499538	ArgumentList	item		2499426	1					
ANR	2499539	Argument	item		2499426	0					
ANR	2499540	Identifier	item		2499426	0					
ANR	2499541	ReturnStatement	return false ;	54:2:1406:1418	2499426	1	True				
ANR	2499542	Identifier	false		2499426	0					
ANR	2499543	ExpressionStatement	"r_list_add_sorted ( sten , re1 , ( RListComparator ) cmp_asc )"	56:1:1424:1479	2499426	12	True				
ANR	2499544	CallExpression	"r_list_add_sorted ( sten , re1 , ( RListComparator ) cmp_asc )"		2499426	0					
ANR	2499545	Callee	r_list_add_sorted		2499426	0					
ANR	2499546	Identifier	r_list_add_sorted		2499426	0					
ANR	2499547	ArgumentList	sten		2499426	1					
ANR	2499548	Argument	sten		2499426	0					
ANR	2499549	Identifier	sten		2499426	0					
ANR	2499550	Argument	re1		2499426	1					
ANR	2499551	Identifier	re1		2499426	0					
ANR	2499552	Argument	( RListComparator ) cmp_asc		2499426	2					
ANR	2499553	CastExpression	( RListComparator ) cmp_asc		2499426	0					
ANR	2499554	CastTarget	RListComparator		2499426	0					
ANR	2499555	Identifier	cmp_asc		2499426	1					
ANR	2499556	ExpressionStatement	"re2 = refline_end_new ( item -> to , false , item )"	58:1:1483:1528	2499426	13	True				
ANR	2499557	AssignmentExpression	"re2 = refline_end_new ( item -> to , false , item )"		2499426	0		=			
ANR	2499558	Identifier	re2		2499426	0					
ANR	2499559	CallExpression	"refline_end_new ( item -> to , false , item )"		2499426	1					
ANR	2499560	Callee	refline_end_new		2499426	0					
ANR	2499561	Identifier	refline_end_new		2499426	0					
ANR	2499562	ArgumentList	item -> to		2499426	1					
ANR	2499563	Argument	item -> to		2499426	0					
ANR	2499564	PtrMemberAccess	item -> to		2499426	0					
ANR	2499565	Identifier	item		2499426	0					
ANR	2499566	Identifier	to		2499426	1					
ANR	2499567	Argument	false		2499426	1					
ANR	2499568	Identifier	false		2499426	0					
ANR	2499569	Argument	item		2499426	2					
ANR	2499570	Identifier	item		2499426	0					
ANR	2499571	IfStatement	if ( ! re2 )		2499426	14					
ANR	2499572	Condition	! re2	59:5:1535:1538	2499426	0	True				
ANR	2499573	UnaryOperationExpression	! re2		2499426	0					
ANR	2499574	UnaryOperator	!		2499426	0					
ANR	2499575	Identifier	re2		2499426	1					
ANR	2499576	CompoundStatement		23:11:474:474	2499426	1					
ANR	2499577	ExpressionStatement	free ( re1 )	60:2:1545:1555	2499426	0	True				
ANR	2499578	CallExpression	free ( re1 )		2499426	0					
ANR	2499579	Callee	free		2499426	0					
ANR	2499580	Identifier	free		2499426	0					
ANR	2499581	ArgumentList	re1		2499426	1					
ANR	2499582	Argument	re1		2499426	0					
ANR	2499583	Identifier	re1		2499426	0					
ANR	2499584	ExpressionStatement	free ( item )	61:2:1559:1570	2499426	1	True				
ANR	2499585	CallExpression	free ( item )		2499426	0					
ANR	2499586	Callee	free		2499426	0					
ANR	2499587	Identifier	free		2499426	0					
ANR	2499588	ArgumentList	item		2499426	1					
ANR	2499589	Argument	item		2499426	0					
ANR	2499590	Identifier	item		2499426	0					
ANR	2499591	ReturnStatement	return false ;	62:2:1574:1586	2499426	2	True				
ANR	2499592	Identifier	false		2499426	0					
ANR	2499593	ExpressionStatement	"r_list_add_sorted ( sten , re2 , ( RListComparator ) cmp_asc )"	64:1:1592:1647	2499426	15	True				
ANR	2499594	CallExpression	"r_list_add_sorted ( sten , re2 , ( RListComparator ) cmp_asc )"		2499426	0					
ANR	2499595	Callee	r_list_add_sorted		2499426	0					
ANR	2499596	Identifier	r_list_add_sorted		2499426	0					
ANR	2499597	ArgumentList	sten		2499426	1					
ANR	2499598	Argument	sten		2499426	0					
ANR	2499599	Identifier	sten		2499426	0					
ANR	2499600	Argument	re2		2499426	1					
ANR	2499601	Identifier	re2		2499426	0					
ANR	2499602	Argument	( RListComparator ) cmp_asc		2499426	2					
ANR	2499603	CastExpression	( RListComparator ) cmp_asc		2499426	0					
ANR	2499604	CastTarget	RListComparator		2499426	0					
ANR	2499605	Identifier	cmp_asc		2499426	1					
ANR	2499606	ReturnStatement	return true ;	65:1:1650:1661	2499426	16	True				
ANR	2499607	Identifier	true		2499426	0					
ANR	2499608	ReturnType	static bool		2499426	1					
ANR	2499609	Identifier	add_refline		2499426	2					
ANR	2499610	ParameterList	"RList * list , RList * sten , ut64 addr , ut64 to , int * idx"		2499426	3					
ANR	2499611	Parameter	RList * list	37:24:1010:1020	2499426	0	True				
ANR	2499612	ParameterType	RList *		2499426	0					
ANR	2499613	Identifier	list		2499426	1					
ANR	2499614	Parameter	RList * sten	37:37:1023:1033	2499426	1	True				
ANR	2499615	ParameterType	RList *		2499426	0					
ANR	2499616	Identifier	sten		2499426	1					
ANR	2499617	Parameter	ut64 addr	37:50:1036:1044	2499426	2	True				
ANR	2499618	ParameterType	ut64		2499426	0					
ANR	2499619	Identifier	addr		2499426	1					
ANR	2499620	Parameter	ut64 to	37:61:1047:1053	2499426	3	True				
ANR	2499621	ParameterType	ut64		2499426	0					
ANR	2499622	Identifier	to		2499426	1					
ANR	2499623	Parameter	int * idx	37:70:1056:1063	2499426	4	True				
ANR	2499624	ParameterType	int *		2499426	0					
ANR	2499625	Identifier	idx		2499426	1					
ANR	2499626	CFGEntryNode	ENTRY		2499426		True				
ANR	2499627	CFGExitNode	EXIT		2499426		True				
ANR	2499628	Symbol	RAnalRefline		2499426						
ANR	2499629	Symbol	item		2499426						
ANR	2499630	Symbol	refline_end_new		2499426						
ANR	2499631	Symbol	item -> index		2499426						
ANR	2499632	Symbol	false		2499426						
ANR	2499633	Symbol	list		2499426						
ANR	2499634	Symbol	item -> to		2499426						
ANR	2499635	Symbol	item -> direction		2499426						
ANR	2499636	Symbol	R_NEW0		2499426						
ANR	2499637	Symbol	item -> from		2499426						
ANR	2499638	Symbol	* item		2499426						
ANR	2499639	Symbol	* idx		2499426						
ANR	2499640	Symbol	true		2499426						
ANR	2499641	Symbol	cmp_asc		2499426						
ANR	2499642	Symbol	to		2499426						
ANR	2499643	Symbol	sten		2499426						
ANR	2499644	Symbol	addr		2499426						
ANR	2499645	Symbol	idx		2499426						
ANR	2499646	Symbol	item -> level		2499426						
ANR	2499647	Symbol	re2		2499426						
ANR	2499648	Symbol	re1		2499426						
ANR	2499649	Function	r_anal_reflines_free	68:0:1666:1731							
ANR	2499650	FunctionDef	r_anal_reflines_free (RAnalRefline * rl)		2499649	0					
ANR	2499651	CompoundStatement		68:51:1717:1731	2499649	0					
ANR	2499652	ExpressionStatement	free ( rl )	69:1:1720:1729	2499649	0	True				
ANR	2499653	CallExpression	free ( rl )		2499649	0					
ANR	2499654	Callee	free		2499649	0					
ANR	2499655	Identifier	free		2499649	0					
ANR	2499656	ArgumentList	rl		2499649	1					
ANR	2499657	Argument	rl		2499649	0					
ANR	2499658	Identifier	rl		2499649	0					
ANR	2499659	ReturnType	R_API void		2499649	1					
ANR	2499660	Identifier	r_anal_reflines_free		2499649	2					
ANR	2499661	ParameterList	RAnalRefline * rl		2499649	3					
ANR	2499662	Parameter	RAnalRefline * rl	68:33:1699:1714	2499649	0	True				
ANR	2499663	ParameterType	RAnalRefline *		2499649	0					
ANR	2499664	Identifier	rl		2499649	1					
ANR	2499665	CFGEntryNode	ENTRY		2499649		True				
ANR	2499666	CFGExitNode	EXIT		2499649		True				
ANR	2499667	Symbol	rl		2499649						
ANR	2499668	Function	r_anal_reflines_get	80:0:2179:6095							
ANR	2499669	FunctionDef	"r_anal_reflines_get (RAnal * anal , ut64 addr , const ut8 * buf , ut64 len , int nlines , int linesout , int linescall)"		2499668	0					
ANR	2499670	CompoundStatement		80:124:2303:6095	2499668	0					
ANR	2499671	IdentifierDeclStatement	"RList * list , * sten ;"	81:1:2306:2324	2499668	0	True				
ANR	2499672	IdentifierDecl	* list		2499668	0					
ANR	2499673	IdentifierDeclType	RList *		2499668	0					
ANR	2499674	Identifier	list		2499668	1					
ANR	2499675	IdentifierDecl	* sten		2499668	1					
ANR	2499676	IdentifierDeclType	RList *		2499668	0					
ANR	2499677	Identifier	sten		2499668	1					
ANR	2499678	IdentifierDeclStatement	RListIter * iter ;	82:1:2327:2342	2499668	1	True				
ANR	2499679	IdentifierDecl	* iter		2499668	0					
ANR	2499680	IdentifierDeclType	RListIter *		2499668	0					
ANR	2499681	Identifier	iter		2499668	1					
ANR	2499682	IdentifierDeclStatement	RAnalOp op ;	83:1:2345:2355	2499668	2	True				
ANR	2499683	IdentifierDecl	op		2499668	0					
ANR	2499684	IdentifierDeclType	RAnalOp		2499668	0					
ANR	2499685	Identifier	op		2499668	1					
ANR	2499686	IdentifierDeclStatement	struct refline_end * el ;	84:1:2358:2380	2499668	3	True				
ANR	2499687	IdentifierDecl	* el		2499668	0					
ANR	2499688	IdentifierDeclType	struct refline_end *		2499668	0					
ANR	2499689	Identifier	el		2499668	1					
ANR	2499690	IdentifierDeclStatement	const ut8 * ptr = buf ;	85:1:2383:2403	2499668	4	True				
ANR	2499691	IdentifierDecl	* ptr = buf		2499668	0					
ANR	2499692	IdentifierDeclType	const ut8 *		2499668	0					
ANR	2499693	Identifier	ptr		2499668	1					
ANR	2499694	AssignmentExpression	* ptr = buf		2499668	2		=			
ANR	2499695	Identifier	buf		2499668	0					
ANR	2499696	Identifier	buf		2499668	1					
ANR	2499697	IdentifierDeclStatement	const ut8 * end = buf + len ;	86:1:2406:2432	2499668	5	True				
ANR	2499698	IdentifierDecl	* end = buf + len		2499668	0					
ANR	2499699	IdentifierDeclType	const ut8 *		2499668	0					
ANR	2499700	Identifier	end		2499668	1					
ANR	2499701	AssignmentExpression	* end = buf + len		2499668	2		=			
ANR	2499702	Identifier	end		2499668	0					
ANR	2499703	AdditiveExpression	buf + len		2499668	1		+			
ANR	2499704	Identifier	buf		2499668	0					
ANR	2499705	Identifier	len		2499668	1					
ANR	2499706	IdentifierDeclStatement	ut8 * free_levels ;	87:1:2435:2451	2499668	6	True				
ANR	2499707	IdentifierDecl	* free_levels		2499668	0					
ANR	2499708	IdentifierDeclType	ut8 *		2499668	0					
ANR	2499709	Identifier	free_levels		2499668	1					
ANR	2499710	IdentifierDeclStatement	"int res , sz = 0 , count = 0 ;"	88:1:2454:2480	2499668	7	True				
ANR	2499711	IdentifierDecl	res		2499668	0					
ANR	2499712	IdentifierDeclType	int		2499668	0					
ANR	2499713	Identifier	res		2499668	1					
ANR	2499714	IdentifierDecl	sz = 0		2499668	1					
ANR	2499715	IdentifierDeclType	int		2499668	0					
ANR	2499716	Identifier	sz		2499668	1					
ANR	2499717	AssignmentExpression	sz = 0		2499668	2		=			
ANR	2499718	Identifier	sz		2499668	0					
ANR	2499719	PrimaryExpression	0		2499668	1					
ANR	2499720	IdentifierDecl	count = 0		2499668	2					
ANR	2499721	IdentifierDeclType	int		2499668	0					
ANR	2499722	Identifier	count		2499668	1					
ANR	2499723	AssignmentExpression	count = 0		2499668	2		=			
ANR	2499724	Identifier	count		2499668	0					
ANR	2499725	PrimaryExpression	0		2499668	1					
ANR	2499726	IdentifierDeclStatement	ut64 opc = addr ;	89:1:2483:2498	2499668	8	True				
ANR	2499727	IdentifierDecl	opc = addr		2499668	0					
ANR	2499728	IdentifierDeclType	ut64		2499668	0					
ANR	2499729	Identifier	opc		2499668	1					
ANR	2499730	AssignmentExpression	opc = addr		2499668	2		=			
ANR	2499731	Identifier	addr		2499668	0					
ANR	2499732	Identifier	addr		2499668	1					
ANR	2499733	ExpressionStatement	"memset ( & op , 0 , sizeof ( op ) )"	91:1:2502:2530	2499668	9	True				
ANR	2499734	CallExpression	"memset ( & op , 0 , sizeof ( op ) )"		2499668	0					
ANR	2499735	Callee	memset		2499668	0					
ANR	2499736	Identifier	memset		2499668	0					
ANR	2499737	ArgumentList	& op		2499668	1					
ANR	2499738	Argument	& op		2499668	0					
ANR	2499739	UnaryOperationExpression	& op		2499668	0					
ANR	2499740	UnaryOperator	&		2499668	0					
ANR	2499741	Identifier	op		2499668	1					
ANR	2499742	Argument	0		2499668	1					
ANR	2499743	PrimaryExpression	0		2499668	0					
ANR	2499744	Argument	sizeof ( op )		2499668	2					
ANR	2499745	SizeofExpression	sizeof ( op )		2499668	0					
ANR	2499746	Sizeof	sizeof		2499668	0					
ANR	2499747	SizeofOperand	op		2499668	1					
ANR	2499748	ExpressionStatement	list = r_list_newf ( free )	103:1:2982:3007	2499668	10	True				
ANR	2499749	AssignmentExpression	list = r_list_newf ( free )		2499668	0		=			
ANR	2499750	Identifier	list		2499668	0					
ANR	2499751	CallExpression	r_list_newf ( free )		2499668	1					
ANR	2499752	Callee	r_list_newf		2499668	0					
ANR	2499753	Identifier	r_list_newf		2499668	0					
ANR	2499754	ArgumentList	free		2499668	1					
ANR	2499755	Argument	free		2499668	0					
ANR	2499756	Identifier	free		2499668	0					
ANR	2499757	IfStatement	if ( ! list )		2499668	11					
ANR	2499758	Condition	! list	104:5:3014:3018	2499668	0	True				
ANR	2499759	UnaryOperationExpression	! list		2499668	0					
ANR	2499760	UnaryOperator	!		2499668	0					
ANR	2499761	Identifier	list		2499668	1					
ANR	2499762	CompoundStatement		25:12:717:717	2499668	1					
ANR	2499763	ReturnStatement	return NULL ;	105:2:3025:3036	2499668	0	True				
ANR	2499764	Identifier	NULL		2499668	0					
ANR	2499765	ExpressionStatement	sten = r_list_newf ( ( RListFree ) free )	107:1:3042:3078	2499668	12	True				
ANR	2499766	AssignmentExpression	sten = r_list_newf ( ( RListFree ) free )		2499668	0		=			
ANR	2499767	Identifier	sten		2499668	0					
ANR	2499768	CallExpression	r_list_newf ( ( RListFree ) free )		2499668	1					
ANR	2499769	Callee	r_list_newf		2499668	0					
ANR	2499770	Identifier	r_list_newf		2499668	0					
ANR	2499771	ArgumentList	( RListFree ) free		2499668	1					
ANR	2499772	Argument	( RListFree ) free		2499668	0					
ANR	2499773	CastExpression	( RListFree ) free		2499668	0					
ANR	2499774	CastTarget	RListFree		2499668	0					
ANR	2499775	Identifier	free		2499668	1					
ANR	2499776	IfStatement	if ( ! sten )		2499668	13					
ANR	2499777	Condition	! sten	108:5:3085:3089	2499668	0	True				
ANR	2499778	UnaryOperationExpression	! sten		2499668	0					
ANR	2499779	UnaryOperator	!		2499668	0					
ANR	2499780	Identifier	sten		2499668	1					
ANR	2499781	CompoundStatement		29:12:788:788	2499668	1					
ANR	2499782	GotoStatement	goto list_err ;	109:2:3096:3109	2499668	0	True				
ANR	2499783	Identifier	list_err		2499668	0					
ANR	2499784	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	111:1:3115:3145	2499668	14	True				
ANR	2499785	CallExpression	"r_cons_break_push ( NULL , NULL )"		2499668	0					
ANR	2499786	Callee	r_cons_break_push		2499668	0					
ANR	2499787	Identifier	r_cons_break_push		2499668	0					
ANR	2499788	ArgumentList	NULL		2499668	1					
ANR	2499789	Argument	NULL		2499668	0					
ANR	2499790	Identifier	NULL		2499668	0					
ANR	2499791	Argument	NULL		2499668	1					
ANR	2499792	Identifier	NULL		2499668	0					
ANR	2499793	WhileStatement	while ( ptr < end && ! r_cons_is_breaked ( ) )		2499668	15					
ANR	2499794	Condition	ptr < end && ! r_cons_is_breaked ( )	113:8:3181:3214	2499668	0	True				
ANR	2499795	AndExpression	ptr < end && ! r_cons_is_breaked ( )		2499668	0		&&			
ANR	2499796	RelationalExpression	ptr < end		2499668	0		<			
ANR	2499797	Identifier	ptr		2499668	0					
ANR	2499798	Identifier	end		2499668	1					
ANR	2499799	UnaryOperationExpression	! r_cons_is_breaked ( )		2499668	1					
ANR	2499800	UnaryOperator	!		2499668	0					
ANR	2499801	CallExpression	r_cons_is_breaked ( )		2499668	1					
ANR	2499802	Callee	r_cons_is_breaked		2499668	0					
ANR	2499803	Identifier	r_cons_is_breaked		2499668	0					
ANR	2499804	ArgumentList			2499668	1					
ANR	2499805	CompoundStatement		34:44:913:913	2499668	1					
ANR	2499806	IfStatement	if ( nlines != - 1 )		2499668	0					
ANR	2499807	Condition	nlines != - 1	114:6:3225:3236	2499668	0	True				
ANR	2499808	EqualityExpression	nlines != - 1		2499668	0		!=			
ANR	2499809	Identifier	nlines		2499668	0					
ANR	2499810	UnaryOperationExpression	- 1		2499668	1					
ANR	2499811	UnaryOperator	-		2499668	0					
ANR	2499812	PrimaryExpression	1		2499668	1					
ANR	2499813	CompoundStatement		35:20:935:935	2499668	1					
ANR	2499814	IfStatement	if ( ! nlines )		2499668	0					
ANR	2499815	Condition	! nlines	115:7:3248:3254	2499668	0	True				
ANR	2499816	UnaryOperationExpression	! nlines		2499668	0					
ANR	2499817	UnaryOperator	!		2499668	0					
ANR	2499818	Identifier	nlines		2499668	1					
ANR	2499819	CompoundStatement		36:16:953:953	2499668	1					
ANR	2499820	BreakStatement	break ;	116:4:3263:3268	2499668	0	True				
ANR	2499821	ExpressionStatement	nlines --	118:3:3278:3286	2499668	1	True				
ANR	2499822	PostIncDecOperationExpression	nlines --		2499668	0					
ANR	2499823	Identifier	nlines		2499668	0					
ANR	2499824	IncDec	--		2499668	1					
ANR	2499825	IfStatement	if ( anal -> maxreflines && count > anal -> maxreflines )		2499668	1					
ANR	2499826	Condition	anal -> maxreflines && count > anal -> maxreflines	120:6:3298:3343	2499668	0	True				
ANR	2499827	AndExpression	anal -> maxreflines && count > anal -> maxreflines		2499668	0		&&			
ANR	2499828	PtrMemberAccess	anal -> maxreflines		2499668	0					
ANR	2499829	Identifier	anal		2499668	0					
ANR	2499830	Identifier	maxreflines		2499668	1					
ANR	2499831	RelationalExpression	count > anal -> maxreflines		2499668	1		>			
ANR	2499832	Identifier	count		2499668	0					
ANR	2499833	PtrMemberAccess	anal -> maxreflines		2499668	1					
ANR	2499834	Identifier	anal		2499668	0					
ANR	2499835	Identifier	maxreflines		2499668	1					
ANR	2499836	CompoundStatement		41:54:1042:1042	2499668	1					
ANR	2499837	BreakStatement	break ;	121:3:3351:3356	2499668	0	True				
ANR	2499838	ExpressionStatement	addr += sz	123:2:3364:3374	2499668	2	True				
ANR	2499839	AssignmentExpression	addr += sz		2499668	0		+=			
ANR	2499840	Identifier	addr		2499668	0					
ANR	2499841	Identifier	sz		2499668	1					
ANR	2499842	CompoundStatement		46:3:1079:1164	2499668	3					
ANR	2499843	IdentifierDeclStatement	"const RAnalMetaItem * mi = r_meta_find_any_except ( anal , addr , R_META_TYPE_COMMENT , 0 ) ;"	125:3:3383:3468	2499668	0	True				
ANR	2499844	IdentifierDecl	"* mi = r_meta_find_any_except ( anal , addr , R_META_TYPE_COMMENT , 0 )"		2499668	0					
ANR	2499845	IdentifierDeclType	const RAnalMetaItem *		2499668	0					
ANR	2499846	Identifier	mi		2499668	1					
ANR	2499847	AssignmentExpression	"* mi = r_meta_find_any_except ( anal , addr , R_META_TYPE_COMMENT , 0 )"		2499668	2		=			
ANR	2499848	Identifier	mi		2499668	0					
ANR	2499849	CallExpression	"r_meta_find_any_except ( anal , addr , R_META_TYPE_COMMENT , 0 )"		2499668	1					
ANR	2499850	Callee	r_meta_find_any_except		2499668	0					
ANR	2499851	Identifier	r_meta_find_any_except		2499668	0					
ANR	2499852	ArgumentList	anal		2499668	1					
ANR	2499853	Argument	anal		2499668	0					
ANR	2499854	Identifier	anal		2499668	0					
ANR	2499855	Argument	addr		2499668	1					
ANR	2499856	Identifier	addr		2499668	0					
ANR	2499857	Argument	R_META_TYPE_COMMENT		2499668	2					
ANR	2499858	Identifier	R_META_TYPE_COMMENT		2499668	0					
ANR	2499859	Argument	0		2499668	3					
ANR	2499860	PrimaryExpression	0		2499668	0					
ANR	2499861	IfStatement	if ( mi )		2499668	1					
ANR	2499862	Condition	mi	126:7:3477:3478	2499668	0	True				
ANR	2499863	Identifier	mi		2499668	0					
ANR	2499864	CompoundStatement		47:11:1177:1177	2499668	1					
ANR	2499865	ExpressionStatement	ptr += mi -> size	127:4:3487:3502	2499668	0	True				
ANR	2499866	AssignmentExpression	ptr += mi -> size		2499668	0		+=			
ANR	2499867	Identifier	ptr		2499668	0					
ANR	2499868	PtrMemberAccess	mi -> size		2499668	1					
ANR	2499869	Identifier	mi		2499668	0					
ANR	2499870	Identifier	size		2499668	1					
ANR	2499871	ExpressionStatement	addr += mi -> size	128:4:3508:3524	2499668	1	True				
ANR	2499872	AssignmentExpression	addr += mi -> size		2499668	0		+=			
ANR	2499873	Identifier	addr		2499668	0					
ANR	2499874	PtrMemberAccess	mi -> size		2499668	1					
ANR	2499875	Identifier	mi		2499668	0					
ANR	2499876	Identifier	size		2499668	1					
ANR	2499877	ExpressionStatement	r_meta_item_free ( mi )	129:4:3530:3551	2499668	2	True				
ANR	2499878	CallExpression	r_meta_item_free ( mi )		2499668	0					
ANR	2499879	Callee	r_meta_item_free		2499668	0					
ANR	2499880	Identifier	r_meta_item_free		2499668	0					
ANR	2499881	ArgumentList	mi		2499668	1					
ANR	2499882	Argument	mi		2499668	0					
ANR	2499883	Identifier	mi		2499668	0					
ANR	2499884	ContinueStatement	continue ;	130:4:3557:3565	2499668	3	True				
ANR	2499885	IfStatement	"if ( ! anal -> iob . is_valid_offset ( anal -> iob . io , addr , 1 ) )"		2499668	4					
ANR	2499886	Condition	"! anal -> iob . is_valid_offset ( anal -> iob . io , addr , 1 )"	133:6:3582:3631	2499668	0	True				
ANR	2499887	UnaryOperationExpression	"! anal -> iob . is_valid_offset ( anal -> iob . io , addr , 1 )"		2499668	0					
ANR	2499888	UnaryOperator	!		2499668	0					
ANR	2499889	CallExpression	"anal -> iob . is_valid_offset ( anal -> iob . io , addr , 1 )"		2499668	1					
ANR	2499890	Callee	anal -> iob . is_valid_offset		2499668	0					
ANR	2499891	MemberAccess	anal -> iob . is_valid_offset		2499668	0					
ANR	2499892	PtrMemberAccess	anal -> iob		2499668	0					
ANR	2499893	Identifier	anal		2499668	0					
ANR	2499894	Identifier	iob		2499668	1					
ANR	2499895	Identifier	is_valid_offset		2499668	1					
ANR	2499896	ArgumentList	anal -> iob . io		2499668	1					
ANR	2499897	Argument	anal -> iob . io		2499668	0					
ANR	2499898	MemberAccess	anal -> iob . io		2499668	0					
ANR	2499899	PtrMemberAccess	anal -> iob		2499668	0					
ANR	2499900	Identifier	anal		2499668	0					
ANR	2499901	Identifier	iob		2499668	1					
ANR	2499902	Identifier	io		2499668	1					
ANR	2499903	Argument	addr		2499668	1					
ANR	2499904	Identifier	addr		2499668	0					
ANR	2499905	Argument	1		2499668	2					
ANR	2499906	PrimaryExpression	1		2499668	0					
ANR	2499907	CompoundStatement		55:3:1335:1353	2499668	1					
ANR	2499908	IdentifierDeclStatement	const int size = 4 ;	134:3:3639:3657	2499668	0	True				
ANR	2499909	IdentifierDecl	size = 4		2499668	0					
ANR	2499910	IdentifierDeclType	const int		2499668	0					
ANR	2499911	Identifier	size		2499668	1					
ANR	2499912	AssignmentExpression	size = 4		2499668	2		=			
ANR	2499913	Identifier	size		2499668	0					
ANR	2499914	PrimaryExpression	4		2499668	1					
ANR	2499915	ExpressionStatement	ptr += size	135:3:3662:3673	2499668	1	True				
ANR	2499916	AssignmentExpression	ptr += size		2499668	0		+=			
ANR	2499917	Identifier	ptr		2499668	0					
ANR	2499918	Identifier	size		2499668	1					
ANR	2499919	ExpressionStatement	addr += size	136:3:3678:3690	2499668	2	True				
ANR	2499920	AssignmentExpression	addr += size		2499668	0		+=			
ANR	2499921	Identifier	addr		2499668	0					
ANR	2499922	Identifier	size		2499668	1					
ANR	2499923	ContinueStatement	continue ;	137:3:3695:3703	2499668	3	True				
ANR	2499924	ExpressionStatement	r_anal_op_fini ( & op )	141:2:3775:3795	2499668	5	True				
ANR	2499925	CallExpression	r_anal_op_fini ( & op )		2499668	0					
ANR	2499926	Callee	r_anal_op_fini		2499668	0					
ANR	2499927	Identifier	r_anal_op_fini		2499668	0					
ANR	2499928	ArgumentList	& op		2499668	1					
ANR	2499929	Argument	& op		2499668	0					
ANR	2499930	UnaryOperationExpression	& op		2499668	0					
ANR	2499931	UnaryOperator	&		2499668	0					
ANR	2499932	Identifier	op		2499668	1					
ANR	2499933	ExpressionStatement	"sz = r_anal_op ( anal , & op , addr , ptr , ( int ) ( end - ptr ) , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT )"	142:2:3799:3898	2499668	6	True				
ANR	2499934	AssignmentExpression	"sz = r_anal_op ( anal , & op , addr , ptr , ( int ) ( end - ptr ) , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT )"		2499668	0		=			
ANR	2499935	Identifier	sz		2499668	0					
ANR	2499936	CallExpression	"r_anal_op ( anal , & op , addr , ptr , ( int ) ( end - ptr ) , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT )"		2499668	1					
ANR	2499937	Callee	r_anal_op		2499668	0					
ANR	2499938	Identifier	r_anal_op		2499668	0					
ANR	2499939	ArgumentList	anal		2499668	1					
ANR	2499940	Argument	anal		2499668	0					
ANR	2499941	Identifier	anal		2499668	0					
ANR	2499942	Argument	& op		2499668	1					
ANR	2499943	UnaryOperationExpression	& op		2499668	0					
ANR	2499944	UnaryOperator	&		2499668	0					
ANR	2499945	Identifier	op		2499668	1					
ANR	2499946	Argument	addr		2499668	2					
ANR	2499947	Identifier	addr		2499668	0					
ANR	2499948	Argument	ptr		2499668	3					
ANR	2499949	Identifier	ptr		2499668	0					
ANR	2499950	Argument	( int ) ( end - ptr )		2499668	4					
ANR	2499951	CastExpression	( int ) ( end - ptr )		2499668	0					
ANR	2499952	CastTarget	int		2499668	0					
ANR	2499953	AdditiveExpression	end - ptr		2499668	1		-			
ANR	2499954	Identifier	end		2499668	0					
ANR	2499955	Identifier	ptr		2499668	1					
ANR	2499956	Argument	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT		2499668	5					
ANR	2499957	InclusiveOrExpression	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT		2499668	0		|			
ANR	2499958	Identifier	R_ANAL_OP_MASK_BASIC		2499668	0					
ANR	2499959	Identifier	R_ANAL_OP_MASK_HINT		2499668	1					
ANR	2499960	IfStatement	if ( sz <= 0 )		2499668	7					
ANR	2499961	Condition	sz <= 0	143:6:3906:3912	2499668	0	True				
ANR	2499962	RelationalExpression	sz <= 0		2499668	0		<=			
ANR	2499963	Identifier	sz		2499668	0					
ANR	2499964	PrimaryExpression	0		2499668	1					
ANR	2499965	CompoundStatement		64:15:1611:1611	2499668	1					
ANR	2499966	ExpressionStatement	sz = 1	144:3:3920:3926	2499668	0	True				
ANR	2499967	AssignmentExpression	sz = 1		2499668	0		=			
ANR	2499968	Identifier	sz		2499668	0					
ANR	2499969	PrimaryExpression	1		2499668	1					
ANR	2499970	GotoStatement	goto __next ;	145:3:3931:3942	2499668	1	True				
ANR	2499971	Identifier	__next		2499668	0					
ANR	2499972	SwitchStatement	switch ( op . type )		2499668	8					
ANR	2499973	Condition	op . type	149:10:3978:3984	2499668	0	True				
ANR	2499974	MemberAccess	op . type		2499668	0					
ANR	2499975	Identifier	op		2499668	0					
ANR	2499976	Identifier	type		2499668	1					
ANR	2499977	CompoundStatement		70:19:1683:1683	2499668	1					
ANR	2499978	Label	case R_ANAL_OP_TYPE_CALL :	150:2:3991:4015	2499668	0	True				
ANR	2499979	Identifier	R_ANAL_OP_TYPE_CALL		2499668	0					
ANR	2499980	IfStatement	if ( ! linescall )		2499668	1					
ANR	2499981	Condition	! linescall	151:7:4024:4033	2499668	0	True				
ANR	2499982	UnaryOperationExpression	! linescall		2499668	0					
ANR	2499983	UnaryOperator	!		2499668	0					
ANR	2499984	Identifier	linescall		2499668	1					
ANR	2499985	CompoundStatement		72:19:1732:1732	2499668	1					
ANR	2499986	BreakStatement	break ;	152:4:4042:4047	2499668	0	True				
ANR	2499987	Label	case R_ANAL_OP_TYPE_CJMP :	154:2:4056:4080	2499668	2	True				
ANR	2499988	Identifier	R_ANAL_OP_TYPE_CJMP		2499668	0					
ANR	2499989	Label	case R_ANAL_OP_TYPE_JMP :	155:2:4084:4107	2499668	3	True				
ANR	2499990	Identifier	R_ANAL_OP_TYPE_JMP		2499668	0					
ANR	2499991	IfStatement	if ( ( ! linesout && ( op . jump > opc + len || op . jump < opc ) ) || ! op . jump )		2499668	4					
ANR	2499992	Condition	( ! linesout && ( op . jump > opc + len || op . jump < opc ) ) || ! op . jump	156:7:4116:4180	2499668	0	True				
ANR	2499993	OrExpression	( ! linesout && ( op . jump > opc + len || op . jump < opc ) ) || ! op . jump		2499668	0		||			
ANR	2499994	AndExpression	! linesout && ( op . jump > opc + len || op . jump < opc )		2499668	0		&&			
ANR	2499995	UnaryOperationExpression	! linesout		2499668	0					
ANR	2499996	UnaryOperator	!		2499668	0					
ANR	2499997	Identifier	linesout		2499668	1					
ANR	2499998	OrExpression	op . jump > opc + len || op . jump < opc		2499668	1		||			
ANR	2499999	RelationalExpression	op . jump > opc + len		2499668	0		>			
ANR	2500000	MemberAccess	op . jump		2499668	0					
ANR	2500001	Identifier	op		2499668	0					
ANR	2500002	Identifier	jump		2499668	1					
ANR	2500003	AdditiveExpression	opc + len		2499668	1		+			
ANR	2500004	Identifier	opc		2499668	0					
ANR	2500005	Identifier	len		2499668	1					
ANR	2500006	RelationalExpression	op . jump < opc		2499668	1		<			
ANR	2500007	MemberAccess	op . jump		2499668	0					
ANR	2500008	Identifier	op		2499668	0					
ANR	2500009	Identifier	jump		2499668	1					
ANR	2500010	Identifier	opc		2499668	1					
ANR	2500011	UnaryOperationExpression	! op . jump		2499668	1					
ANR	2500012	UnaryOperator	!		2499668	0					
ANR	2500013	MemberAccess	op . jump		2499668	1					
ANR	2500014	Identifier	op		2499668	0					
ANR	2500015	Identifier	jump		2499668	1					
ANR	2500016	CompoundStatement		77:74:1879:1879	2499668	1					
ANR	2500017	BreakStatement	break ;	157:4:4189:4194	2499668	0	True				
ANR	2500018	IfStatement	"if ( ! ( res = add_refline ( list , sten , addr , op . jump , & count ) ) )"		2499668	5					
ANR	2500019	Condition	"! ( res = add_refline ( list , sten , addr , op . jump , & count ) )"	159:7:4208:4263	2499668	0	True				
ANR	2500020	UnaryOperationExpression	"! ( res = add_refline ( list , sten , addr , op . jump , & count ) )"		2499668	0					
ANR	2500021	UnaryOperator	!		2499668	0					
ANR	2500022	AssignmentExpression	"res = add_refline ( list , sten , addr , op . jump , & count )"		2499668	1		=			
ANR	2500023	Identifier	res		2499668	0					
ANR	2500024	CallExpression	"add_refline ( list , sten , addr , op . jump , & count )"		2499668	1					
ANR	2500025	Callee	add_refline		2499668	0					
ANR	2500026	Identifier	add_refline		2499668	0					
ANR	2500027	ArgumentList	list		2499668	1					
ANR	2500028	Argument	list		2499668	0					
ANR	2500029	Identifier	list		2499668	0					
ANR	2500030	Argument	sten		2499668	1					
ANR	2500031	Identifier	sten		2499668	0					
ANR	2500032	Argument	addr		2499668	2					
ANR	2500033	Identifier	addr		2499668	0					
ANR	2500034	Argument	op . jump		2499668	3					
ANR	2500035	MemberAccess	op . jump		2499668	0					
ANR	2500036	Identifier	op		2499668	0					
ANR	2500037	Identifier	jump		2499668	1					
ANR	2500038	Argument	& count		2499668	4					
ANR	2500039	UnaryOperationExpression	& count		2499668	0					
ANR	2500040	UnaryOperator	&		2499668	0					
ANR	2500041	Identifier	count		2499668	1					
ANR	2500042	CompoundStatement		80:65:1962:1962	2499668	1					
ANR	2500043	ExpressionStatement	r_anal_op_fini ( & op )	160:4:4272:4292	2499668	0	True				
ANR	2500044	CallExpression	r_anal_op_fini ( & op )		2499668	0					
ANR	2500045	Callee	r_anal_op_fini		2499668	0					
ANR	2500046	Identifier	r_anal_op_fini		2499668	0					
ANR	2500047	ArgumentList	& op		2499668	1					
ANR	2500048	Argument	& op		2499668	0					
ANR	2500049	UnaryOperationExpression	& op		2499668	0					
ANR	2500050	UnaryOperator	&		2499668	0					
ANR	2500051	Identifier	op		2499668	1					
ANR	2500052	GotoStatement	goto sten_err ;	161:4:4298:4311	2499668	1	True				
ANR	2500053	Identifier	sten_err		2499668	0					
ANR	2500054	BreakStatement	break ;	163:3:4321:4326	2499668	6	True				
ANR	2500055	Label	case R_ANAL_OP_TYPE_SWITCH :	164:2:4330:4356	2499668	7	True				
ANR	2500056	Identifier	R_ANAL_OP_TYPE_SWITCH		2499668	0					
ANR	2500057	CompoundStatement		88:3:2085:2100	2499668	8					
ANR	2500058	IdentifierDeclStatement	RAnalCaseOp * caseop ;	166:3:4365:4384	2499668	0	True				
ANR	2500059	IdentifierDecl	* caseop		2499668	0					
ANR	2500060	IdentifierDeclType	RAnalCaseOp *		2499668	0					
ANR	2500061	Identifier	caseop		2499668	1					
ANR	2500062	IdentifierDeclStatement	RListIter * iter ;	167:3:4389:4404	2499668	1	True				
ANR	2500063	IdentifierDecl	* iter		2499668	0					
ANR	2500064	IdentifierDeclType	RListIter *		2499668	0					
ANR	2500065	Identifier	iter		2499668	1					
ANR	2500066	IfStatement	if ( ! op . switch_op )		2499668	2					
ANR	2500067	Condition	! op . switch_op	170:7:4432:4444	2499668	0	True				
ANR	2500068	UnaryOperationExpression	! op . switch_op		2499668	0					
ANR	2500069	UnaryOperator	!		2499668	0					
ANR	2500070	MemberAccess	op . switch_op		2499668	1					
ANR	2500071	Identifier	op		2499668	0					
ANR	2500072	Identifier	switch_op		2499668	1					
ANR	2500073	CompoundStatement		91:22:2143:2143	2499668	1					
ANR	2500074	BreakStatement	break ;	171:4:4453:4458	2499668	0	True				
ANR	2500075	Statement	r_list_foreach	173:3:4468:4481	2499668	3	True				
ANR	2500076	Statement	(	173:18:4483:4483	2499668	4	True				
ANR	2500077	Statement	op	173:19:4484:4485	2499668	5	True				
ANR	2500078	Statement	.	173:21:4486:4486	2499668	6	True				
ANR	2500079	Statement	switch_op	173:22:4487:4495	2499668	7	True				
ANR	2500080	Statement	->	173:31:4496:4497	2499668	8	True				
ANR	2500081	Statement	cases	173:33:4498:4502	2499668	9	True				
ANR	2500082	Statement	","	173:38:4503:4503	2499668	10	True				
ANR	2500083	Statement	iter	173:40:4505:4508	2499668	11	True				
ANR	2500084	Statement	","	173:44:4509:4509	2499668	12	True				
ANR	2500085	Statement	caseop	173:46:4511:4516	2499668	13	True				
ANR	2500086	Statement	)	173:52:4517:4517	2499668	14	True				
ANR	2500087	CompoundStatement		94:54:2215:2215	2499668	15					
ANR	2500088	IfStatement	if ( ! linesout && ( op . jump > opc + len || op . jump < opc ) )		2499668	0					
ANR	2500089	Condition	! linesout && ( op . jump > opc + len || op . jump < opc )	174:8:4529:4579	2499668	0	True				
ANR	2500090	AndExpression	! linesout && ( op . jump > opc + len || op . jump < opc )		2499668	0		&&			
ANR	2500091	UnaryOperationExpression	! linesout		2499668	0					
ANR	2500092	UnaryOperator	!		2499668	0					
ANR	2500093	Identifier	linesout		2499668	1					
ANR	2500094	OrExpression	op . jump > opc + len || op . jump < opc		2499668	1		||			
ANR	2500095	RelationalExpression	op . jump > opc + len		2499668	0		>			
ANR	2500096	MemberAccess	op . jump		2499668	0					
ANR	2500097	Identifier	op		2499668	0					
ANR	2500098	Identifier	jump		2499668	1					
ANR	2500099	AdditiveExpression	opc + len		2499668	1		+			
ANR	2500100	Identifier	opc		2499668	0					
ANR	2500101	Identifier	len		2499668	1					
ANR	2500102	RelationalExpression	op . jump < opc		2499668	1		<			
ANR	2500103	MemberAccess	op . jump		2499668	0					
ANR	2500104	Identifier	op		2499668	0					
ANR	2500105	Identifier	jump		2499668	1					
ANR	2500106	Identifier	opc		2499668	1					
ANR	2500107	CompoundStatement		95:61:2278:2278	2499668	1					
ANR	2500108	ContinueStatement	continue ;	175:5:4589:4597	2499668	0	True				
ANR	2500109	IfStatement	"if ( ! ( res = add_refline ( list , sten , op . switch_op -> addr , caseop -> jump , & count ) ) )"		2499668	1					
ANR	2500110	Condition	"! ( res = add_refline ( list , sten , op . switch_op -> addr , caseop -> jump , & count ) )"	177:8:4613:4687	2499668	0	True				
ANR	2500111	UnaryOperationExpression	"! ( res = add_refline ( list , sten , op . switch_op -> addr , caseop -> jump , & count ) )"		2499668	0					
ANR	2500112	UnaryOperator	!		2499668	0					
ANR	2500113	AssignmentExpression	"res = add_refline ( list , sten , op . switch_op -> addr , caseop -> jump , & count )"		2499668	1		=			
ANR	2500114	Identifier	res		2499668	0					
ANR	2500115	CallExpression	"add_refline ( list , sten , op . switch_op -> addr , caseop -> jump , & count )"		2499668	1					
ANR	2500116	Callee	add_refline		2499668	0					
ANR	2500117	Identifier	add_refline		2499668	0					
ANR	2500118	ArgumentList	list		2499668	1					
ANR	2500119	Argument	list		2499668	0					
ANR	2500120	Identifier	list		2499668	0					
ANR	2500121	Argument	sten		2499668	1					
ANR	2500122	Identifier	sten		2499668	0					
ANR	2500123	Argument	op . switch_op -> addr		2499668	2					
ANR	2500124	PtrMemberAccess	op . switch_op -> addr		2499668	0					
ANR	2500125	MemberAccess	op . switch_op		2499668	0					
ANR	2500126	Identifier	op		2499668	0					
ANR	2500127	Identifier	switch_op		2499668	1					
ANR	2500128	Identifier	addr		2499668	1					
ANR	2500129	Argument	caseop -> jump		2499668	3					
ANR	2500130	PtrMemberAccess	caseop -> jump		2499668	0					
ANR	2500131	Identifier	caseop		2499668	0					
ANR	2500132	Identifier	jump		2499668	1					
ANR	2500133	Argument	& count		2499668	4					
ANR	2500134	UnaryOperationExpression	& count		2499668	0					
ANR	2500135	UnaryOperator	&		2499668	0					
ANR	2500136	Identifier	count		2499668	1					
ANR	2500137	CompoundStatement		98:85:2386:2386	2499668	1					
ANR	2500138	ExpressionStatement	r_anal_op_fini ( & op )	178:5:4697:4717	2499668	0	True				
ANR	2500139	CallExpression	r_anal_op_fini ( & op )		2499668	0					
ANR	2500140	Callee	r_anal_op_fini		2499668	0					
ANR	2500141	Identifier	r_anal_op_fini		2499668	0					
ANR	2500142	ArgumentList	& op		2499668	1					
ANR	2500143	Argument	& op		2499668	0					
ANR	2500144	UnaryOperationExpression	& op		2499668	0					
ANR	2500145	UnaryOperator	&		2499668	0					
ANR	2500146	Identifier	op		2499668	1					
ANR	2500147	GotoStatement	goto sten_err ;	179:5:4724:4737	2499668	1	True				
ANR	2500148	Identifier	sten_err		2499668	0					
ANR	2500149	BreakStatement	break ;	182:3:4753:4758	2499668	16	True				
ANR	2500150	Label	__next :	185:1:4769:4775	2499668	9	True				
ANR	2500151	Identifier	__next		2499668	0					
ANR	2500152	ExpressionStatement	ptr += sz	186:2:4779:4788	2499668	10	True				
ANR	2500153	AssignmentExpression	ptr += sz		2499668	0		+=			
ANR	2500154	Identifier	ptr		2499668	0					
ANR	2500155	Identifier	sz		2499668	1					
ANR	2500156	ExpressionStatement	r_anal_op_fini ( & op )	188:1:4794:4814	2499668	16	True				
ANR	2500157	CallExpression	r_anal_op_fini ( & op )		2499668	0					
ANR	2500158	Callee	r_anal_op_fini		2499668	0					
ANR	2500159	Identifier	r_anal_op_fini		2499668	0					
ANR	2500160	ArgumentList	& op		2499668	1					
ANR	2500161	Argument	& op		2499668	0					
ANR	2500162	UnaryOperationExpression	& op		2499668	0					
ANR	2500163	UnaryOperator	&		2499668	0					
ANR	2500164	Identifier	op		2499668	1					
ANR	2500165	ExpressionStatement	r_cons_break_pop ( )	189:1:4817:4836	2499668	17	True				
ANR	2500166	CallExpression	r_cons_break_pop ( )		2499668	0					
ANR	2500167	Callee	r_cons_break_pop		2499668	0					
ANR	2500168	Identifier	r_cons_break_pop		2499668	0					
ANR	2500169	ArgumentList			2499668	1					
ANR	2500170	ExpressionStatement	"free_levels = R_NEWS0 ( ut8 , r_list_length ( list ) + 1 )"	191:1:4840:4893	2499668	18	True				
ANR	2500171	AssignmentExpression	"free_levels = R_NEWS0 ( ut8 , r_list_length ( list ) + 1 )"		2499668	0		=			
ANR	2500172	Identifier	free_levels		2499668	0					
ANR	2500173	CallExpression	"R_NEWS0 ( ut8 , r_list_length ( list ) + 1 )"		2499668	1					
ANR	2500174	Callee	R_NEWS0		2499668	0					
ANR	2500175	Identifier	R_NEWS0		2499668	0					
ANR	2500176	ArgumentList	ut8		2499668	1					
ANR	2500177	Argument	ut8		2499668	0					
ANR	2500178	Identifier	ut8		2499668	0					
ANR	2500179	Argument	r_list_length ( list ) + 1		2499668	1					
ANR	2500180	AdditiveExpression	r_list_length ( list ) + 1		2499668	0		+			
ANR	2500181	CallExpression	r_list_length ( list )		2499668	0					
ANR	2500182	Callee	r_list_length		2499668	0					
ANR	2500183	Identifier	r_list_length		2499668	0					
ANR	2500184	ArgumentList	list		2499668	1					
ANR	2500185	Argument	list		2499668	0					
ANR	2500186	Identifier	list		2499668	0					
ANR	2500187	PrimaryExpression	1		2499668	1					
ANR	2500188	IfStatement	if ( ! free_levels )		2499668	19					
ANR	2500189	Condition	! free_levels	192:5:4900:4911	2499668	0	True				
ANR	2500190	UnaryOperationExpression	! free_levels		2499668	0					
ANR	2500191	UnaryOperator	!		2499668	0					
ANR	2500192	Identifier	free_levels		2499668	1					
ANR	2500193	CompoundStatement		113:19:2610:2610	2499668	1					
ANR	2500194	GotoStatement	goto sten_err ;	193:2:4918:4931	2499668	0	True				
ANR	2500195	Identifier	sten_err		2499668	0					
ANR	2500196	IdentifierDeclStatement	int min = 0 ;	195:1:4937:4948	2499668	20	True				
ANR	2500197	IdentifierDecl	min = 0		2499668	0					
ANR	2500198	IdentifierDeclType	int		2499668	0					
ANR	2500199	Identifier	min		2499668	1					
ANR	2500200	AssignmentExpression	min = 0		2499668	2		=			
ANR	2500201	Identifier	min		2499668	0					
ANR	2500202	PrimaryExpression	0		2499668	1					
ANR	2500203	Statement	r_list_foreach	197:1:4952:4965	2499668	21	True				
ANR	2500204	Statement	(	197:16:4967:4967	2499668	22	True				
ANR	2500205	Statement	sten	197:17:4968:4971	2499668	23	True				
ANR	2500206	Statement	","	197:21:4972:4972	2499668	24	True				
ANR	2500207	Statement	iter	197:23:4974:4977	2499668	25	True				
ANR	2500208	Statement	","	197:27:4978:4978	2499668	26	True				
ANR	2500209	Statement	el	197:29:4980:4981	2499668	27	True				
ANR	2500210	Statement	)	197:31:4982:4982	2499668	28	True				
ANR	2500211	CompoundStatement		118:33:2680:2680	2499668	29					
ANR	2500212	IfStatement	if ( ( el -> is_from && el -> r -> level == - 1 ) || ( ! el -> is_from && el -> r -> level == - 1 ) )		2499668	0					
ANR	2500213	Condition	( el -> is_from && el -> r -> level == - 1 ) || ( ! el -> is_from && el -> r -> level == - 1 )	198:6:4992:5066	2499668	0	True				
ANR	2500214	OrExpression	( el -> is_from && el -> r -> level == - 1 ) || ( ! el -> is_from && el -> r -> level == - 1 )		2499668	0		||			
ANR	2500215	AndExpression	el -> is_from && el -> r -> level == - 1		2499668	0		&&			
ANR	2500216	PtrMemberAccess	el -> is_from		2499668	0					
ANR	2500217	Identifier	el		2499668	0					
ANR	2500218	Identifier	is_from		2499668	1					
ANR	2500219	EqualityExpression	el -> r -> level == - 1		2499668	1		==			
ANR	2500220	PtrMemberAccess	el -> r -> level		2499668	0					
ANR	2500221	PtrMemberAccess	el -> r		2499668	0					
ANR	2500222	Identifier	el		2499668	0					
ANR	2500223	Identifier	r		2499668	1					
ANR	2500224	Identifier	level		2499668	1					
ANR	2500225	UnaryOperationExpression	- 1		2499668	1					
ANR	2500226	UnaryOperator	-		2499668	0					
ANR	2500227	PrimaryExpression	1		2499668	1					
ANR	2500228	AndExpression	! el -> is_from && el -> r -> level == - 1		2499668	1		&&			
ANR	2500229	UnaryOperationExpression	! el -> is_from		2499668	0					
ANR	2500230	UnaryOperator	!		2499668	0					
ANR	2500231	PtrMemberAccess	el -> is_from		2499668	1					
ANR	2500232	Identifier	el		2499668	0					
ANR	2500233	Identifier	is_from		2499668	1					
ANR	2500234	EqualityExpression	el -> r -> level == - 1		2499668	1		==			
ANR	2500235	PtrMemberAccess	el -> r -> level		2499668	0					
ANR	2500236	PtrMemberAccess	el -> r		2499668	0					
ANR	2500237	Identifier	el		2499668	0					
ANR	2500238	Identifier	r		2499668	1					
ANR	2500239	Identifier	level		2499668	1					
ANR	2500240	UnaryOperationExpression	- 1		2499668	1					
ANR	2500241	UnaryOperator	-		2499668	0					
ANR	2500242	PrimaryExpression	1		2499668	1					
ANR	2500243	CompoundStatement		119:83:2765:2765	2499668	1					
ANR	2500244	ExpressionStatement	el -> r -> level = min + 1	199:3:5074:5096	2499668	0	True				
ANR	2500245	AssignmentExpression	el -> r -> level = min + 1		2499668	0		=			
ANR	2500246	PtrMemberAccess	el -> r -> level		2499668	0					
ANR	2500247	PtrMemberAccess	el -> r		2499668	0					
ANR	2500248	Identifier	el		2499668	0					
ANR	2500249	Identifier	r		2499668	1					
ANR	2500250	Identifier	level		2499668	1					
ANR	2500251	AdditiveExpression	min + 1		2499668	1		+			
ANR	2500252	Identifier	min		2499668	0					
ANR	2500253	PrimaryExpression	1		2499668	1					
ANR	2500254	ExpressionStatement	free_levels [ min ] = 1	200:3:5101:5121	2499668	1	True				
ANR	2500255	AssignmentExpression	free_levels [ min ] = 1		2499668	0		=			
ANR	2500256	ArrayIndexing	free_levels [ min ]		2499668	0					
ANR	2500257	Identifier	free_levels		2499668	0					
ANR	2500258	Identifier	min		2499668	1					
ANR	2500259	PrimaryExpression	1		2499668	1					
ANR	2500260	IfStatement	if ( min < 0 )		2499668	2					
ANR	2500261	Condition	min < 0	201:7:5130:5136	2499668	0	True				
ANR	2500262	RelationalExpression	min < 0		2499668	0		<			
ANR	2500263	Identifier	min		2499668	0					
ANR	2500264	PrimaryExpression	0		2499668	1					
ANR	2500265	CompoundStatement		122:16:2835:2835	2499668	1					
ANR	2500266	ExpressionStatement	min = 0	202:4:5145:5152	2499668	0	True				
ANR	2500267	AssignmentExpression	min = 0		2499668	0		=			
ANR	2500268	Identifier	min		2499668	0					
ANR	2500269	PrimaryExpression	0		2499668	1					
ANR	2500270	WhileStatement	while ( free_levels [ ++ min ] == 1 )		2499668	3					
ANR	2500271	Condition	free_levels [ ++ min ] == 1	204:10:5169:5191	2499668	0	True				
ANR	2500272	EqualityExpression	free_levels [ ++ min ] == 1		2499668	0		==			
ANR	2500273	ArrayIndexing	free_levels [ ++ min ]		2499668	0					
ANR	2500274	Identifier	free_levels		2499668	0					
ANR	2500275	UnaryExpression	++ min		2499668	1					
ANR	2500276	IncDec	++		2499668	0					
ANR	2500277	Identifier	min		2499668	1					
ANR	2500278	PrimaryExpression	1		2499668	1					
ANR	2500279	CompoundStatement		125:35:2890:2890	2499668	1					
ANR	2500280	ExpressionStatement		205:4:5200:5200	2499668	0	True				
ANR	2500281	ElseStatement	else		2499668	0					
ANR	2500282	CompoundStatement		128:9:2912:2912	2499668	0					
ANR	2500283	ExpressionStatement	free_levels [ el -> r -> level - 1 ] = 0	208:3:5221:5254	2499668	0	True				
ANR	2500284	AssignmentExpression	free_levels [ el -> r -> level - 1 ] = 0		2499668	0		=			
ANR	2500285	ArrayIndexing	free_levels [ el -> r -> level - 1 ]		2499668	0					
ANR	2500286	Identifier	free_levels		2499668	0					
ANR	2500287	AdditiveExpression	el -> r -> level - 1		2499668	1		-			
ANR	2500288	PtrMemberAccess	el -> r -> level		2499668	0					
ANR	2500289	PtrMemberAccess	el -> r		2499668	0					
ANR	2500290	Identifier	el		2499668	0					
ANR	2500291	Identifier	r		2499668	1					
ANR	2500292	Identifier	level		2499668	1					
ANR	2500293	PrimaryExpression	1		2499668	1					
ANR	2500294	PrimaryExpression	0		2499668	1					
ANR	2500295	IfStatement	if ( min > el -> r -> level - 1 )		2499668	1					
ANR	2500296	Condition	min > el -> r -> level - 1	209:7:5263:5284	2499668	0	True				
ANR	2500297	RelationalExpression	min > el -> r -> level - 1		2499668	0		>			
ANR	2500298	Identifier	min		2499668	0					
ANR	2500299	AdditiveExpression	el -> r -> level - 1		2499668	1		-			
ANR	2500300	PtrMemberAccess	el -> r -> level		2499668	0					
ANR	2500301	PtrMemberAccess	el -> r		2499668	0					
ANR	2500302	Identifier	el		2499668	0					
ANR	2500303	Identifier	r		2499668	1					
ANR	2500304	Identifier	level		2499668	1					
ANR	2500305	PrimaryExpression	1		2499668	1					
ANR	2500306	CompoundStatement		130:31:2983:2983	2499668	1					
ANR	2500307	ExpressionStatement	min = el -> r -> level - 1	210:4:5293:5315	2499668	0	True				
ANR	2500308	AssignmentExpression	min = el -> r -> level - 1		2499668	0		=			
ANR	2500309	Identifier	min		2499668	0					
ANR	2500310	AdditiveExpression	el -> r -> level - 1		2499668	1		-			
ANR	2500311	PtrMemberAccess	el -> r -> level		2499668	0					
ANR	2500312	PtrMemberAccess	el -> r		2499668	0					
ANR	2500313	Identifier	el		2499668	0					
ANR	2500314	Identifier	r		2499668	1					
ANR	2500315	Identifier	level		2499668	1					
ANR	2500316	PrimaryExpression	1		2499668	1					
ANR	2500317	ExpressionStatement	free ( free_levels )	225:1:5963:5981	2499668	30	True				
ANR	2500318	CallExpression	free ( free_levels )		2499668	0					
ANR	2500319	Callee	free		2499668	0					
ANR	2500320	Identifier	free		2499668	0					
ANR	2500321	ArgumentList	free_levels		2499668	1					
ANR	2500322	Argument	free_levels		2499668	0					
ANR	2500323	Identifier	free_levels		2499668	0					
ANR	2500324	ExpressionStatement	r_list_free ( sten )	226:1:5984:6002	2499668	31	True				
ANR	2500325	CallExpression	r_list_free ( sten )		2499668	0					
ANR	2500326	Callee	r_list_free		2499668	0					
ANR	2500327	Identifier	r_list_free		2499668	0					
ANR	2500328	ArgumentList	sten		2499668	1					
ANR	2500329	Argument	sten		2499668	0					
ANR	2500330	Identifier	sten		2499668	0					
ANR	2500331	ReturnStatement	return list ;	227:1:6005:6016	2499668	32	True				
ANR	2500332	Identifier	list		2499668	0					
ANR	2500333	Label	sten_err :	229:0:6019:6027	2499668	33	True				
ANR	2500334	Identifier	sten_err		2499668	0					
ANR	2500335	Label	list_err :	230:0:6029:6037	2499668	34	True				
ANR	2500336	Identifier	list_err		2499668	0					
ANR	2500337	ExpressionStatement	r_list_free ( sten )	231:1:6040:6058	2499668	35	True				
ANR	2500338	CallExpression	r_list_free ( sten )		2499668	0					
ANR	2500339	Callee	r_list_free		2499668	0					
ANR	2500340	Identifier	r_list_free		2499668	0					
ANR	2500341	ArgumentList	sten		2499668	1					
ANR	2500342	Argument	sten		2499668	0					
ANR	2500343	Identifier	sten		2499668	0					
ANR	2500344	ExpressionStatement	r_list_free ( list )	232:1:6061:6079	2499668	36	True				
ANR	2500345	CallExpression	r_list_free ( list )		2499668	0					
ANR	2500346	Callee	r_list_free		2499668	0					
ANR	2500347	Identifier	r_list_free		2499668	0					
ANR	2500348	ArgumentList	list		2499668	1					
ANR	2500349	Argument	list		2499668	0					
ANR	2500350	Identifier	list		2499668	0					
ANR	2500351	ReturnStatement	return NULL ;	233:1:6082:6093	2499668	37	True				
ANR	2500352	Identifier	NULL		2499668	0					
ANR	2500353	ReturnType	R_API RList *		2499668	1					
ANR	2500354	Identifier	r_anal_reflines_get		2499668	2					
ANR	2500355	ParameterList	"RAnal * anal , ut64 addr , const ut8 * buf , ut64 len , int nlines , int linesout , int linescall"		2499668	3					
ANR	2500356	Parameter	RAnal * anal	80:33:2212:2222	2499668	0	True				
ANR	2500357	ParameterType	RAnal *		2499668	0					
ANR	2500358	Identifier	anal		2499668	1					
ANR	2500359	Parameter	ut64 addr	80:46:2225:2233	2499668	1	True				
ANR	2500360	ParameterType	ut64		2499668	0					
ANR	2500361	Identifier	addr		2499668	1					
ANR	2500362	Parameter	const ut8 * buf	80:57:2236:2249	2499668	2	True				
ANR	2500363	ParameterType	const ut8 *		2499668	0					
ANR	2500364	Identifier	buf		2499668	1					
ANR	2500365	Parameter	ut64 len	80:73:2252:2259	2499668	3	True				
ANR	2500366	ParameterType	ut64		2499668	0					
ANR	2500367	Identifier	len		2499668	1					
ANR	2500368	Parameter	int nlines	80:83:2262:2271	2499668	4	True				
ANR	2500369	ParameterType	int		2499668	0					
ANR	2500370	Identifier	nlines		2499668	1					
ANR	2500371	Parameter	int linesout	80:95:2274:2285	2499668	5	True				
ANR	2500372	ParameterType	int		2499668	0					
ANR	2500373	Identifier	linesout		2499668	1					
ANR	2500374	Parameter	int linescall	80:109:2288:2300	2499668	6	True				
ANR	2500375	ParameterType	int		2499668	0					
ANR	2500376	Identifier	linescall		2499668	1					
ANR	2500377	CFGEntryNode	ENTRY		2499668		True				
ANR	2500378	CFGExitNode	EXIT		2499668		True				
ANR	2500379	Symbol	* op		2499668						
ANR	2500380	Symbol	linesout		2499668						
ANR	2500381	Symbol	el -> r -> level		2499668						
ANR	2500382	Symbol	nlines		2499668						
ANR	2500383	Symbol	free_levels		2499668						
ANR	2500384	Symbol	& op		2499668						
ANR	2500385	Symbol	* op . switch_op		2499668						
ANR	2500386	Symbol	* * el		2499668						
ANR	2500387	Symbol	len		2499668						
ANR	2500388	Symbol	op . switch_op -> addr		2499668						
ANR	2500389	Symbol	op . jump		2499668						
ANR	2500390	Symbol	mi		2499668						
ANR	2500391	Symbol	r_anal_op		2499668						
ANR	2500392	Symbol	res		2499668						
ANR	2500393	Symbol	opc		2499668						
ANR	2500394	Symbol	NULL		2499668						
ANR	2500395	Symbol	r_list_newf		2499668						
ANR	2500396	Symbol	el		2499668						
ANR	2500397	Symbol	count		2499668						
ANR	2500398	Symbol	iter		2499668						
ANR	2500399	Symbol	list		2499668						
ANR	2500400	Symbol	size		2499668						
ANR	2500401	Symbol	caseop -> jump		2499668						
ANR	2500402	Symbol	anal		2499668						
ANR	2500403	Symbol	mi -> size		2499668						
ANR	2500404	Symbol	el -> is_from		2499668						
ANR	2500405	Symbol	anal -> iob		2499668						
ANR	2500406	Symbol	add_refline		2499668						
ANR	2500407	Symbol	* min		2499668						
ANR	2500408	Symbol	* * el -> r		2499668						
ANR	2500409	Symbol	r_meta_find_any_except		2499668						
ANR	2500410	Symbol	* mi		2499668						
ANR	2500411	Symbol	R_META_TYPE_COMMENT		2499668						
ANR	2500412	Symbol	R_ANAL_OP_MASK_BASIC		2499668						
ANR	2500413	Symbol	* el		2499668						
ANR	2500414	Symbol	r_cons_is_breaked		2499668						
ANR	2500415	Symbol	* anal		2499668						
ANR	2500416	Symbol	min		2499668						
ANR	2500417	Symbol	R_NEWS0		2499668						
ANR	2500418	Symbol	linescall		2499668						
ANR	2500419	Symbol	end		2499668						
ANR	2500420	Symbol	anal -> maxreflines		2499668						
ANR	2500421	Symbol	addr		2499668						
ANR	2500422	Symbol	free		2499668						
ANR	2500423	Symbol	anal -> iob . io		2499668						
ANR	2500424	Symbol	op		2499668						
ANR	2500425	Symbol	op . type		2499668						
ANR	2500426	Symbol	el -> r		2499668						
ANR	2500427	Symbol	sz		2499668						
ANR	2500428	Symbol	caseop		2499668						
ANR	2500429	Symbol	ptr		2499668						
ANR	2500430	Symbol	buf		2499668						
ANR	2500431	Symbol	* caseop		2499668						
ANR	2500432	Symbol	* free_levels		2499668						
ANR	2500433	Symbol	* el -> r -> level		2499668						
ANR	2500434	Symbol	* * * el		2499668						
ANR	2500435	Symbol	anal -> iob . is_valid_offset		2499668						
ANR	2500436	Symbol	R_ANAL_OP_MASK_HINT		2499668						
ANR	2500437	Symbol	ut8		2499668						
ANR	2500438	Symbol	& count		2499668						
ANR	2500439	Symbol	sten		2499668						
ANR	2500440	Symbol	op . switch_op		2499668						
ANR	2500441	Symbol	r_list_length		2499668						
ANR	2500442	Symbol	* el -> r		2499668						
ANR	2500443	Function	r_anal_reflines_fcn_get	236:0:6098:8414							
ANR	2500444	FunctionDef	"r_anal_reflines_fcn_get (RAnal * anal , RAnalFunction * fcn , int nlines , int linesout , int linescall)"		2500443	0					
ANR	2500445	CompoundStatement		236:111:6209:8414	2500443	0					
ANR	2500446	IdentifierDeclStatement	RAnalBlock * bb ;	237:1:6212:6226	2500443	0	True				
ANR	2500447	IdentifierDecl	* bb		2500443	0					
ANR	2500448	IdentifierDeclType	RAnalBlock *		2500443	0					
ANR	2500449	Identifier	bb		2500443	1					
ANR	2500450	IdentifierDeclStatement	RListIter * bb_iter ;	238:1:6229:6247	2500443	1	True				
ANR	2500451	IdentifierDecl	* bb_iter		2500443	0					
ANR	2500452	IdentifierDeclType	RListIter *		2500443	0					
ANR	2500453	Identifier	bb_iter		2500443	1					
ANR	2500454	IdentifierDeclStatement	RAnalRefline * item ;	239:1:6250:6268	2500443	2	True				
ANR	2500455	IdentifierDecl	* item		2500443	0					
ANR	2500456	IdentifierDeclType	RAnalRefline *		2500443	0					
ANR	2500457	Identifier	item		2500443	1					
ANR	2500458	IdentifierDeclStatement	int index = 0 ;	240:1:6271:6284	2500443	3	True				
ANR	2500459	IdentifierDecl	index = 0		2500443	0					
ANR	2500460	IdentifierDeclType	int		2500443	0					
ANR	2500461	Identifier	index		2500443	1					
ANR	2500462	AssignmentExpression	index = 0		2500443	2		=			
ANR	2500463	Identifier	index		2500443	0					
ANR	2500464	PrimaryExpression	0		2500443	1					
ANR	2500465	IdentifierDeclStatement	ut32 len ;	241:1:6287:6295	2500443	4	True				
ANR	2500466	IdentifierDecl	len		2500443	0					
ANR	2500467	IdentifierDeclType	ut32		2500443	0					
ANR	2500468	Identifier	len		2500443	1					
ANR	2500469	IdentifierDeclStatement	RList * list = r_list_new ( ) ;	243:1:6299:6326	2500443	5	True				
ANR	2500470	IdentifierDecl	* list = r_list_new ( )		2500443	0					
ANR	2500471	IdentifierDeclType	RList *		2500443	0					
ANR	2500472	Identifier	list		2500443	1					
ANR	2500473	AssignmentExpression	* list = r_list_new ( )		2500443	2		=			
ANR	2500474	Identifier	list		2500443	0					
ANR	2500475	CallExpression	r_list_new ( )		2500443	1					
ANR	2500476	Callee	r_list_new		2500443	0					
ANR	2500477	Identifier	r_list_new		2500443	0					
ANR	2500478	ArgumentList			2500443	1					
ANR	2500479	IfStatement	if ( ! list )		2500443	6					
ANR	2500480	Condition	! list	244:5:6333:6337	2500443	0	True				
ANR	2500481	UnaryOperationExpression	! list		2500443	0					
ANR	2500482	UnaryOperator	!		2500443	0					
ANR	2500483	Identifier	list		2500443	1					
ANR	2500484	CompoundStatement		9:12:130:130	2500443	1					
ANR	2500485	ReturnStatement	return NULL ;	245:2:6344:6355	2500443	0	True				
ANR	2500486	Identifier	NULL		2500443	0					
ANR	2500487	Statement	r_list_foreach	249:1:6388:6401	2500443	7	True				
ANR	2500488	Statement	(	249:16:6403:6403	2500443	8	True				
ANR	2500489	Statement	fcn	249:17:6404:6406	2500443	9	True				
ANR	2500490	Statement	->	249:20:6407:6408	2500443	10	True				
ANR	2500491	Statement	bbs	249:22:6409:6411	2500443	11	True				
ANR	2500492	Statement	","	249:25:6412:6412	2500443	12	True				
ANR	2500493	Statement	bb_iter	249:27:6414:6420	2500443	13	True				
ANR	2500494	Statement	","	249:34:6421:6421	2500443	14	True				
ANR	2500495	Statement	bb	249:36:6423:6424	2500443	15	True				
ANR	2500496	Statement	)	249:38:6425:6425	2500443	16	True				
ANR	2500497	CompoundStatement		23:2:350:378	2500443	17					
ANR	2500498	IfStatement	if ( ! bb || ! bb -> size )		2500443	0					
ANR	2500499	Condition	! bb || ! bb -> size	250:6:6435:6450	2500443	0	True				
ANR	2500500	OrExpression	! bb || ! bb -> size		2500443	0		||			
ANR	2500501	UnaryOperationExpression	! bb		2500443	0					
ANR	2500502	UnaryOperator	!		2500443	0					
ANR	2500503	Identifier	bb		2500443	1					
ANR	2500504	UnaryOperationExpression	! bb -> size		2500443	1					
ANR	2500505	UnaryOperator	!		2500443	0					
ANR	2500506	PtrMemberAccess	bb -> size		2500443	1					
ANR	2500507	Identifier	bb		2500443	0					
ANR	2500508	Identifier	size		2500443	1					
ANR	2500509	CompoundStatement		15:24:243:243	2500443	1					
ANR	2500510	ContinueStatement	continue ;	251:3:6458:6466	2500443	0	True				
ANR	2500511	IfStatement	if ( nlines != - 1 && ! -- nlines )		2500443	1					
ANR	2500512	Condition	nlines != - 1 && ! -- nlines	253:6:6478:6502	2500443	0	True				
ANR	2500513	AndExpression	nlines != - 1 && ! -- nlines		2500443	0		&&			
ANR	2500514	EqualityExpression	nlines != - 1		2500443	0		!=			
ANR	2500515	Identifier	nlines		2500443	0					
ANR	2500516	UnaryOperationExpression	- 1		2500443	1					
ANR	2500517	UnaryOperator	-		2500443	0					
ANR	2500518	PrimaryExpression	1		2500443	1					
ANR	2500519	UnaryOperationExpression	! -- nlines		2500443	1					
ANR	2500520	UnaryOperator	!		2500443	0					
ANR	2500521	UnaryExpression	-- nlines		2500443	1					
ANR	2500522	IncDec	--		2500443	0					
ANR	2500523	Identifier	nlines		2500443	1					
ANR	2500524	CompoundStatement		18:33:295:295	2500443	1					
ANR	2500525	BreakStatement	break ;	254:3:6510:6515	2500443	0	True				
ANR	2500526	ExpressionStatement	len = bb -> size	256:2:6523:6537	2500443	2	True				
ANR	2500527	AssignmentExpression	len = bb -> size		2500443	0		=			
ANR	2500528	Identifier	len		2500443	0					
ANR	2500529	PtrMemberAccess	bb -> size		2500443	1					
ANR	2500530	Identifier	bb		2500443	0					
ANR	2500531	Identifier	size		2500443	1					
ANR	2500532	IdentifierDeclStatement	ut64 control_type = bb -> type ;	258:2:6560:6588	2500443	3	True				
ANR	2500533	IdentifierDecl	control_type = bb -> type		2500443	0					
ANR	2500534	IdentifierDeclType	ut64		2500443	0					
ANR	2500535	Identifier	control_type		2500443	1					
ANR	2500536	AssignmentExpression	control_type = bb -> type		2500443	2		=			
ANR	2500537	Identifier	control_type		2500443	0					
ANR	2500538	PtrMemberAccess	bb -> type		2500443	1					
ANR	2500539	Identifier	bb		2500443	0					
ANR	2500540	Identifier	type		2500443	1					
ANR	2500541	ExpressionStatement	control_type &= R_ANAL_BB_TYPE_SWITCH | R_ANAL_BB_TYPE_JMP | R_ANAL_BB_TYPE_COND | R_ANAL_BB_TYPE_CALL	259:2:6592:6694	2500443	4	True				
ANR	2500542	AssignmentExpression	control_type &= R_ANAL_BB_TYPE_SWITCH | R_ANAL_BB_TYPE_JMP | R_ANAL_BB_TYPE_COND | R_ANAL_BB_TYPE_CALL		2500443	0		&=			
ANR	2500543	Identifier	control_type		2500443	0					
ANR	2500544	InclusiveOrExpression	R_ANAL_BB_TYPE_SWITCH | R_ANAL_BB_TYPE_JMP | R_ANAL_BB_TYPE_COND | R_ANAL_BB_TYPE_CALL		2500443	1		|			
ANR	2500545	Identifier	R_ANAL_BB_TYPE_SWITCH		2500443	0					
ANR	2500546	InclusiveOrExpression	R_ANAL_BB_TYPE_JMP | R_ANAL_BB_TYPE_COND | R_ANAL_BB_TYPE_CALL		2500443	1		|			
ANR	2500547	Identifier	R_ANAL_BB_TYPE_JMP		2500443	0					
ANR	2500548	InclusiveOrExpression	R_ANAL_BB_TYPE_COND | R_ANAL_BB_TYPE_CALL		2500443	1		|			
ANR	2500549	Identifier	R_ANAL_BB_TYPE_COND		2500443	0					
ANR	2500550	Identifier	R_ANAL_BB_TYPE_CALL		2500443	1					
ANR	2500551	IfStatement	if ( ! linescall )		2500443	5					
ANR	2500552	Condition	! linescall	262:6:6720:6729	2500443	0	True				
ANR	2500553	UnaryOperationExpression	! linescall		2500443	0					
ANR	2500554	UnaryOperator	!		2500443	0					
ANR	2500555	Identifier	linescall		2500443	1					
ANR	2500556	CompoundStatement		27:18:522:522	2500443	1					
ANR	2500557	IfStatement	if ( ( control_type & R_ANAL_BB_TYPE_CALL ) == R_ANAL_BB_TYPE_CALL )		2500443	0					
ANR	2500558	Condition	( control_type & R_ANAL_BB_TYPE_CALL ) == R_ANAL_BB_TYPE_CALL	263:7:6741:6799	2500443	0	True				
ANR	2500559	EqualityExpression	( control_type & R_ANAL_BB_TYPE_CALL ) == R_ANAL_BB_TYPE_CALL		2500443	0		==			
ANR	2500560	BitAndExpression	control_type & R_ANAL_BB_TYPE_CALL		2500443	0		&			
ANR	2500561	Identifier	control_type		2500443	0					
ANR	2500562	Identifier	R_ANAL_BB_TYPE_CALL		2500443	1					
ANR	2500563	Identifier	R_ANAL_BB_TYPE_CALL		2500443	1					
ANR	2500564	CompoundStatement		28:68:592:592	2500443	1					
ANR	2500565	ContinueStatement	continue ;	264:4:6808:6816	2500443	0	True				
ANR	2500566	IfStatement	if ( ( control_type & R_ANAL_BB_TYPE_CJMP ) == R_ANAL_BB_TYPE_CJMP )		2500443	6					
ANR	2500567	Condition	( control_type & R_ANAL_BB_TYPE_CJMP ) == R_ANAL_BB_TYPE_CJMP	268:6:6879:6937	2500443	0	True				
ANR	2500568	EqualityExpression	( control_type & R_ANAL_BB_TYPE_CJMP ) == R_ANAL_BB_TYPE_CJMP		2500443	0		==			
ANR	2500569	BitAndExpression	control_type & R_ANAL_BB_TYPE_CJMP		2500443	0		&			
ANR	2500570	Identifier	control_type		2500443	0					
ANR	2500571	Identifier	R_ANAL_BB_TYPE_CJMP		2500443	1					
ANR	2500572	Identifier	R_ANAL_BB_TYPE_CJMP		2500443	1					
ANR	2500573	CompoundStatement		33:67:730:730	2500443	1					
ANR	2500574	Statement	if	270:3:7012:7013	2500443	0	True				
ANR	2500575	Statement	(	270:6:7015:7015	2500443	1	True				
ANR	2500576	Statement	linesout	270:7:7016:7023	2500443	2	True				
ANR	2500577	Statement	&&	270:16:7025:7026	2500443	3	True				
ANR	2500578	Statement	bb	270:19:7028:7029	2500443	4	True				
ANR	2500579	Statement	->	270:21:7030:7031	2500443	5	True				
ANR	2500580	Statement	fail	270:23:7032:7035	2500443	6	True				
ANR	2500581	Statement	>	270:28:7037:7037	2500443	7	True				
ANR	2500582	Statement	0L	270:30:7039:7040	2500443	8	True				
ANR	2500583	Statement	L	270:32:7041:7041	2500443	9	True				
ANR	2500584	Statement	&&	270:34:7043:7044	2500443	10	True				
ANR	2500585	Statement	bb	270:37:7046:7047	2500443	11	True				
ANR	2500586	Statement	->	270:39:7048:7049	2500443	12	True				
ANR	2500587	Statement	fail	270:41:7050:7053	2500443	13	True				
ANR	2500588	Statement	!=	270:46:7055:7056	2500443	14	True				
ANR	2500589	Statement	bb	270:49:7058:7059	2500443	15	True				
ANR	2500590	Statement	->	270:51:7060:7061	2500443	16	True				
ANR	2500591	Statement	addr	270:53:7062:7065	2500443	17	True				
ANR	2500592	Statement	+	270:58:7067:7067	2500443	18	True				
ANR	2500593	Statement	len	270:60:7069:7071	2500443	19	True				
ANR	2500594	Statement	)	270:63:7072:7072	2500443	20	True				
ANR	2500595	CompoundStatement		35:65:864:864	2500443	21					
ANR	2500596	ExpressionStatement	item = R_NEW0 ( RAnalRefline )	271:4:7080:7108	2500443	0	True				
ANR	2500597	AssignmentExpression	item = R_NEW0 ( RAnalRefline )		2500443	0		=			
ANR	2500598	Identifier	item		2500443	0					
ANR	2500599	CallExpression	R_NEW0 ( RAnalRefline )		2500443	1					
ANR	2500600	Callee	R_NEW0		2500443	0					
ANR	2500601	Identifier	R_NEW0		2500443	0					
ANR	2500602	ArgumentList	RAnalRefline		2500443	1					
ANR	2500603	Argument	RAnalRefline		2500443	0					
ANR	2500604	Identifier	RAnalRefline		2500443	0					
ANR	2500605	IfStatement	if ( ! item )		2500443	1					
ANR	2500606	Condition	! item	272:8:7118:7122	2500443	0	True				
ANR	2500607	UnaryOperationExpression	! item		2500443	0					
ANR	2500608	UnaryOperator	!		2500443	0					
ANR	2500609	Identifier	item		2500443	1					
ANR	2500610	CompoundStatement		37:15:915:915	2500443	1					
ANR	2500611	ExpressionStatement	r_list_free ( list )	273:5:7132:7150	2500443	0	True				
ANR	2500612	CallExpression	r_list_free ( list )		2500443	0					
ANR	2500613	Callee	r_list_free		2500443	0					
ANR	2500614	Identifier	r_list_free		2500443	0					
ANR	2500615	ArgumentList	list		2500443	1					
ANR	2500616	Argument	list		2500443	0					
ANR	2500617	Identifier	list		2500443	0					
ANR	2500618	ReturnStatement	return NULL ;	274:5:7157:7168	2500443	1	True				
ANR	2500619	Identifier	NULL		2500443	0					
ANR	2500620	ExpressionStatement	item -> from = bb -> addr	276:4:7180:7201	2500443	2	True				
ANR	2500621	AssignmentExpression	item -> from = bb -> addr		2500443	0		=			
ANR	2500622	PtrMemberAccess	item -> from		2500443	0					
ANR	2500623	Identifier	item		2500443	0					
ANR	2500624	Identifier	from		2500443	1					
ANR	2500625	PtrMemberAccess	bb -> addr		2500443	1					
ANR	2500626	Identifier	bb		2500443	0					
ANR	2500627	Identifier	addr		2500443	1					
ANR	2500628	ExpressionStatement	item -> to = bb -> fail	277:4:7207:7226	2500443	3	True				
ANR	2500629	AssignmentExpression	item -> to = bb -> fail		2500443	0		=			
ANR	2500630	PtrMemberAccess	item -> to		2500443	0					
ANR	2500631	Identifier	item		2500443	0					
ANR	2500632	Identifier	to		2500443	1					
ANR	2500633	PtrMemberAccess	bb -> fail		2500443	1					
ANR	2500634	Identifier	bb		2500443	0					
ANR	2500635	Identifier	fail		2500443	1					
ANR	2500636	ExpressionStatement	item -> index = index ++	278:4:7232:7253	2500443	4	True				
ANR	2500637	AssignmentExpression	item -> index = index ++		2500443	0		=			
ANR	2500638	PtrMemberAccess	item -> index		2500443	0					
ANR	2500639	Identifier	item		2500443	0					
ANR	2500640	Identifier	index		2500443	1					
ANR	2500641	PostIncDecOperationExpression	index ++		2500443	1					
ANR	2500642	Identifier	index		2500443	0					
ANR	2500643	IncDec	++		2500443	1					
ANR	2500644	ExpressionStatement	item -> type = 'c'	279:4:7259:7275	2500443	5	True				
ANR	2500645	AssignmentExpression	item -> type = 'c'		2500443	0		=			
ANR	2500646	PtrMemberAccess	item -> type		2500443	0					
ANR	2500647	Identifier	item		2500443	0					
ANR	2500648	Identifier	type		2500443	1					
ANR	2500649	PrimaryExpression	'c'		2500443	1					
ANR	2500650	ExpressionStatement	item -> direction = ( bb -> jump > bb -> addr ) ? 1 : - 1	280:4:7281:7327	2500443	6	True				
ANR	2500651	AssignmentExpression	item -> direction = ( bb -> jump > bb -> addr ) ? 1 : - 1		2500443	0		=			
ANR	2500652	PtrMemberAccess	item -> direction		2500443	0					
ANR	2500653	Identifier	item		2500443	0					
ANR	2500654	Identifier	direction		2500443	1					
ANR	2500655	ConditionalExpression	( bb -> jump > bb -> addr ) ? 1 : - 1		2500443	1					
ANR	2500656	Condition	bb -> jump > bb -> addr		2500443	0					
ANR	2500657	RelationalExpression	bb -> jump > bb -> addr		2500443	0		>			
ANR	2500658	PtrMemberAccess	bb -> jump		2500443	0					
ANR	2500659	Identifier	bb		2500443	0					
ANR	2500660	Identifier	jump		2500443	1					
ANR	2500661	PtrMemberAccess	bb -> addr		2500443	1					
ANR	2500662	Identifier	bb		2500443	0					
ANR	2500663	Identifier	addr		2500443	1					
ANR	2500664	PrimaryExpression	1		2500443	1					
ANR	2500665	UnaryOperationExpression	- 1		2500443	2					
ANR	2500666	UnaryOperator	-		2500443	0					
ANR	2500667	PrimaryExpression	1		2500443	1					
ANR	2500668	ExpressionStatement	"r_list_append ( list , item )"	281:4:7333:7359	2500443	7	True				
ANR	2500669	CallExpression	"r_list_append ( list , item )"		2500443	0					
ANR	2500670	Callee	r_list_append		2500443	0					
ANR	2500671	Identifier	r_list_append		2500443	0					
ANR	2500672	ArgumentList	list		2500443	1					
ANR	2500673	Argument	list		2500443	0					
ANR	2500674	Identifier	list		2500443	0					
ANR	2500675	Argument	item		2500443	1					
ANR	2500676	Identifier	item		2500443	0					
ANR	2500677	IfStatement	if ( ( control_type & R_ANAL_BB_TYPE_JMP ) == R_ANAL_BB_TYPE_JMP )		2500443	7					
ANR	2500678	Condition	( control_type & R_ANAL_BB_TYPE_JMP ) == R_ANAL_BB_TYPE_JMP	284:6:7376:7432	2500443	0	True				
ANR	2500679	EqualityExpression	( control_type & R_ANAL_BB_TYPE_JMP ) == R_ANAL_BB_TYPE_JMP		2500443	0		==			
ANR	2500680	BitAndExpression	control_type & R_ANAL_BB_TYPE_JMP		2500443	0		&			
ANR	2500681	Identifier	control_type		2500443	0					
ANR	2500682	Identifier	R_ANAL_BB_TYPE_JMP		2500443	1					
ANR	2500683	Identifier	R_ANAL_BB_TYPE_JMP		2500443	1					
ANR	2500684	CompoundStatement		49:65:1225:1225	2500443	1					
ANR	2500685	IfStatement	if ( ! linesout || ! bb -> jump || bb -> jump == bb -> addr + len )		2500443	0					
ANR	2500686	Condition	! linesout || ! bb -> jump || bb -> jump == bb -> addr + len	285:7:7444:7495	2500443	0	True				
ANR	2500687	OrExpression	! linesout || ! bb -> jump || bb -> jump == bb -> addr + len		2500443	0		||			
ANR	2500688	UnaryOperationExpression	! linesout		2500443	0					
ANR	2500689	UnaryOperator	!		2500443	0					
ANR	2500690	Identifier	linesout		2500443	1					
ANR	2500691	OrExpression	! bb -> jump || bb -> jump == bb -> addr + len		2500443	1		||			
ANR	2500692	UnaryOperationExpression	! bb -> jump		2500443	0					
ANR	2500693	UnaryOperator	!		2500443	0					
ANR	2500694	PtrMemberAccess	bb -> jump		2500443	1					
ANR	2500695	Identifier	bb		2500443	0					
ANR	2500696	Identifier	jump		2500443	1					
ANR	2500697	EqualityExpression	bb -> jump == bb -> addr + len		2500443	1		==			
ANR	2500698	PtrMemberAccess	bb -> jump		2500443	0					
ANR	2500699	Identifier	bb		2500443	0					
ANR	2500700	Identifier	jump		2500443	1					
ANR	2500701	AdditiveExpression	bb -> addr + len		2500443	1		+			
ANR	2500702	PtrMemberAccess	bb -> addr		2500443	0					
ANR	2500703	Identifier	bb		2500443	0					
ANR	2500704	Identifier	addr		2500443	1					
ANR	2500705	Identifier	len		2500443	1					
ANR	2500706	CompoundStatement		50:61:1288:1288	2500443	1					
ANR	2500707	ContinueStatement	continue ;	286:4:7504:7512	2500443	0	True				
ANR	2500708	ExpressionStatement	item = R_NEW0 ( RAnalRefline )	288:3:7522:7550	2500443	1	True				
ANR	2500709	AssignmentExpression	item = R_NEW0 ( RAnalRefline )		2500443	0		=			
ANR	2500710	Identifier	item		2500443	0					
ANR	2500711	CallExpression	R_NEW0 ( RAnalRefline )		2500443	1					
ANR	2500712	Callee	R_NEW0		2500443	0					
ANR	2500713	Identifier	R_NEW0		2500443	0					
ANR	2500714	ArgumentList	RAnalRefline		2500443	1					
ANR	2500715	Argument	RAnalRefline		2500443	0					
ANR	2500716	Identifier	RAnalRefline		2500443	0					
ANR	2500717	IfStatement	if ( ! item )		2500443	2					
ANR	2500718	Condition	! item	289:7:7559:7563	2500443	0	True				
ANR	2500719	UnaryOperationExpression	! item		2500443	0					
ANR	2500720	UnaryOperator	!		2500443	0					
ANR	2500721	Identifier	item		2500443	1					
ANR	2500722	CompoundStatement		54:14:1356:1356	2500443	1					
ANR	2500723	ExpressionStatement	r_list_free ( list )	290:4:7572:7590	2500443	0	True				
ANR	2500724	CallExpression	r_list_free ( list )		2500443	0					
ANR	2500725	Callee	r_list_free		2500443	0					
ANR	2500726	Identifier	r_list_free		2500443	0					
ANR	2500727	ArgumentList	list		2500443	1					
ANR	2500728	Argument	list		2500443	0					
ANR	2500729	Identifier	list		2500443	0					
ANR	2500730	ReturnStatement	return NULL ;	291:4:7596:7607	2500443	1	True				
ANR	2500731	Identifier	NULL		2500443	0					
ANR	2500732	ExpressionStatement	item -> from = bb -> addr	293:3:7617:7638	2500443	3	True				
ANR	2500733	AssignmentExpression	item -> from = bb -> addr		2500443	0		=			
ANR	2500734	PtrMemberAccess	item -> from		2500443	0					
ANR	2500735	Identifier	item		2500443	0					
ANR	2500736	Identifier	from		2500443	1					
ANR	2500737	PtrMemberAccess	bb -> addr		2500443	1					
ANR	2500738	Identifier	bb		2500443	0					
ANR	2500739	Identifier	addr		2500443	1					
ANR	2500740	ExpressionStatement	item -> to = bb -> jump	294:3:7643:7662	2500443	4	True				
ANR	2500741	AssignmentExpression	item -> to = bb -> jump		2500443	0		=			
ANR	2500742	PtrMemberAccess	item -> to		2500443	0					
ANR	2500743	Identifier	item		2500443	0					
ANR	2500744	Identifier	to		2500443	1					
ANR	2500745	PtrMemberAccess	bb -> jump		2500443	1					
ANR	2500746	Identifier	bb		2500443	0					
ANR	2500747	Identifier	jump		2500443	1					
ANR	2500748	ExpressionStatement	item -> index = index ++	295:3:7667:7688	2500443	5	True				
ANR	2500749	AssignmentExpression	item -> index = index ++		2500443	0		=			
ANR	2500750	PtrMemberAccess	item -> index		2500443	0					
ANR	2500751	Identifier	item		2500443	0					
ANR	2500752	Identifier	index		2500443	1					
ANR	2500753	PostIncDecOperationExpression	index ++		2500443	1					
ANR	2500754	Identifier	index		2500443	0					
ANR	2500755	IncDec	++		2500443	1					
ANR	2500756	ExpressionStatement	item -> type = 'j'	296:3:7693:7709	2500443	6	True				
ANR	2500757	AssignmentExpression	item -> type = 'j'		2500443	0		=			
ANR	2500758	PtrMemberAccess	item -> type		2500443	0					
ANR	2500759	Identifier	item		2500443	0					
ANR	2500760	Identifier	type		2500443	1					
ANR	2500761	PrimaryExpression	'j'		2500443	1					
ANR	2500762	ExpressionStatement	item -> direction = ( bb -> jump > bb -> addr ) ? 1 : - 1	297:3:7714:7760	2500443	7	True				
ANR	2500763	AssignmentExpression	item -> direction = ( bb -> jump > bb -> addr ) ? 1 : - 1		2500443	0		=			
ANR	2500764	PtrMemberAccess	item -> direction		2500443	0					
ANR	2500765	Identifier	item		2500443	0					
ANR	2500766	Identifier	direction		2500443	1					
ANR	2500767	ConditionalExpression	( bb -> jump > bb -> addr ) ? 1 : - 1		2500443	1					
ANR	2500768	Condition	bb -> jump > bb -> addr		2500443	0					
ANR	2500769	RelationalExpression	bb -> jump > bb -> addr		2500443	0		>			
ANR	2500770	PtrMemberAccess	bb -> jump		2500443	0					
ANR	2500771	Identifier	bb		2500443	0					
ANR	2500772	Identifier	jump		2500443	1					
ANR	2500773	PtrMemberAccess	bb -> addr		2500443	1					
ANR	2500774	Identifier	bb		2500443	0					
ANR	2500775	Identifier	addr		2500443	1					
ANR	2500776	PrimaryExpression	1		2500443	1					
ANR	2500777	UnaryOperationExpression	- 1		2500443	2					
ANR	2500778	UnaryOperator	-		2500443	0					
ANR	2500779	PrimaryExpression	1		2500443	1					
ANR	2500780	ExpressionStatement	"r_list_append ( list , item )"	298:3:7765:7791	2500443	8	True				
ANR	2500781	CallExpression	"r_list_append ( list , item )"		2500443	0					
ANR	2500782	Callee	r_list_append		2500443	0					
ANR	2500783	Identifier	r_list_append		2500443	0					
ANR	2500784	ArgumentList	list		2500443	1					
ANR	2500785	Argument	list		2500443	0					
ANR	2500786	Identifier	list		2500443	0					
ANR	2500787	Argument	item		2500443	1					
ANR	2500788	Identifier	item		2500443	0					
ANR	2500789	ContinueStatement	continue ;	299:3:7796:7804	2500443	9	True				
ANR	2500790	IfStatement	if ( control_type & R_ANAL_BB_TYPE_SWITCH )		2500443	8					
ANR	2500791	Condition	control_type & R_ANAL_BB_TYPE_SWITCH	303:6:7855:7890	2500443	0	True				
ANR	2500792	BitAndExpression	control_type & R_ANAL_BB_TYPE_SWITCH		2500443	0		&			
ANR	2500793	Identifier	control_type		2500443	0					
ANR	2500794	Identifier	R_ANAL_BB_TYPE_SWITCH		2500443	1					
ANR	2500795	CompoundStatement		68:44:1683:1683	2500443	1					
ANR	2500796	IfStatement	if ( bb -> switch_op )		2500443	0					
ANR	2500797	Condition	bb -> switch_op	304:7:7902:7914	2500443	0	True				
ANR	2500798	PtrMemberAccess	bb -> switch_op		2500443	0					
ANR	2500799	Identifier	bb		2500443	0					
ANR	2500800	Identifier	switch_op		2500443	1					
ANR	2500801	CompoundStatement		71:4:1738:1753	2500443	1					
ANR	2500802	IdentifierDeclStatement	RAnalCaseOp * caseop ;	305:4:7923:7942	2500443	0	True				
ANR	2500803	IdentifierDecl	* caseop		2500443	0					
ANR	2500804	IdentifierDeclType	RAnalCaseOp *		2500443	0					
ANR	2500805	Identifier	caseop		2500443	1					
ANR	2500806	IdentifierDeclStatement	RListIter * iter ;	306:4:7948:7963	2500443	1	True				
ANR	2500807	IdentifierDecl	* iter		2500443	0					
ANR	2500808	IdentifierDeclType	RListIter *		2500443	0					
ANR	2500809	Identifier	iter		2500443	1					
ANR	2500810	Statement	r_list_foreach	307:4:7969:7982	2500443	2	True				
ANR	2500811	Statement	(	307:19:7984:7984	2500443	3	True				
ANR	2500812	Statement	bb	307:20:7985:7986	2500443	4	True				
ANR	2500813	Statement	->	307:22:7987:7988	2500443	5	True				
ANR	2500814	Statement	switch_op	307:24:7989:7997	2500443	6	True				
ANR	2500815	Statement	->	307:33:7998:7999	2500443	7	True				
ANR	2500816	Statement	cases	307:35:8000:8004	2500443	8	True				
ANR	2500817	Statement	","	307:40:8005:8005	2500443	9	True				
ANR	2500818	Statement	iter	307:42:8007:8010	2500443	10	True				
ANR	2500819	Statement	","	307:46:8011:8011	2500443	11	True				
ANR	2500820	Statement	caseop	307:48:8013:8018	2500443	12	True				
ANR	2500821	Statement	)	307:54:8019:8019	2500443	13	True				
ANR	2500822	CompoundStatement		72:56:1811:1811	2500443	14					
ANR	2500823	IfStatement	if ( caseop )		2500443	0					
ANR	2500824	Condition	caseop	308:9:8032:8037	2500443	0	True				
ANR	2500825	Identifier	caseop		2500443	0					
ANR	2500826	CompoundStatement		73:17:1830:1830	2500443	1					
ANR	2500827	IfStatement	if ( ! linesout )		2500443	0					
ANR	2500828	Condition	! linesout	309:10:8052:8060	2500443	0	True				
ANR	2500829	UnaryOperationExpression	! linesout		2500443	0					
ANR	2500830	UnaryOperator	!		2500443	0					
ANR	2500831	Identifier	linesout		2500443	1					
ANR	2500832	CompoundStatement		74:21:1853:1853	2500443	1					
ANR	2500833	ContinueStatement	continue ;	310:7:8114:8122	2500443	0	True				
ANR	2500834	ExpressionStatement	item = R_NEW0 ( RAnalRefline )	312:6:8138:8166	2500443	1	True				
ANR	2500835	AssignmentExpression	item = R_NEW0 ( RAnalRefline )		2500443	0		=			
ANR	2500836	Identifier	item		2500443	0					
ANR	2500837	CallExpression	R_NEW0 ( RAnalRefline )		2500443	1					
ANR	2500838	Callee	R_NEW0		2500443	0					
ANR	2500839	Identifier	R_NEW0		2500443	0					
ANR	2500840	ArgumentList	RAnalRefline		2500443	1					
ANR	2500841	Argument	RAnalRefline		2500443	0					
ANR	2500842	Identifier	RAnalRefline		2500443	0					
ANR	2500843	IfStatement	if ( ! item )		2500443	2					
ANR	2500844	Condition	! item	313:10:8178:8182	2500443	0	True				
ANR	2500845	UnaryOperationExpression	! item		2500443	0					
ANR	2500846	UnaryOperator	!		2500443	0					
ANR	2500847	Identifier	item		2500443	1					
ANR	2500848	CompoundStatement		78:16:1974:1974	2500443	1					
ANR	2500849	ExpressionStatement	r_list_free ( list )	314:7:8193:8211	2500443	0	True				
ANR	2500850	CallExpression	r_list_free ( list )		2500443	0					
ANR	2500851	Callee	r_list_free		2500443	0					
ANR	2500852	Identifier	r_list_free		2500443	0					
ANR	2500853	ArgumentList	list		2500443	1					
ANR	2500854	Argument	list		2500443	0					
ANR	2500855	Identifier	list		2500443	0					
ANR	2500856	ReturnStatement	return NULL ;	315:7:8220:8231	2500443	1	True				
ANR	2500857	Identifier	NULL		2500443	0					
ANR	2500858	ExpressionStatement	item -> from = bb -> switch_op -> addr	317:6:8247:8279	2500443	3	True				
ANR	2500859	AssignmentExpression	item -> from = bb -> switch_op -> addr		2500443	0		=			
ANR	2500860	PtrMemberAccess	item -> from		2500443	0					
ANR	2500861	Identifier	item		2500443	0					
ANR	2500862	Identifier	from		2500443	1					
ANR	2500863	PtrMemberAccess	bb -> switch_op -> addr		2500443	1					
ANR	2500864	PtrMemberAccess	bb -> switch_op		2500443	0					
ANR	2500865	Identifier	bb		2500443	0					
ANR	2500866	Identifier	switch_op		2500443	1					
ANR	2500867	Identifier	addr		2500443	1					
ANR	2500868	ExpressionStatement	item -> to = caseop -> jump	318:6:8287:8310	2500443	4	True				
ANR	2500869	AssignmentExpression	item -> to = caseop -> jump		2500443	0		=			
ANR	2500870	PtrMemberAccess	item -> to		2500443	0					
ANR	2500871	Identifier	item		2500443	0					
ANR	2500872	Identifier	to		2500443	1					
ANR	2500873	PtrMemberAccess	caseop -> jump		2500443	1					
ANR	2500874	Identifier	caseop		2500443	0					
ANR	2500875	Identifier	jump		2500443	1					
ANR	2500876	ExpressionStatement	item -> index = index ++	319:6:8318:8339	2500443	5	True				
ANR	2500877	AssignmentExpression	item -> index = index ++		2500443	0		=			
ANR	2500878	PtrMemberAccess	item -> index		2500443	0					
ANR	2500879	Identifier	item		2500443	0					
ANR	2500880	Identifier	index		2500443	1					
ANR	2500881	PostIncDecOperationExpression	index ++		2500443	1					
ANR	2500882	Identifier	index		2500443	0					
ANR	2500883	IncDec	++		2500443	1					
ANR	2500884	ExpressionStatement	"r_list_append ( list , item )"	320:6:8347:8373	2500443	6	True				
ANR	2500885	CallExpression	"r_list_append ( list , item )"		2500443	0					
ANR	2500886	Callee	r_list_append		2500443	0					
ANR	2500887	Identifier	r_list_append		2500443	0					
ANR	2500888	ArgumentList	list		2500443	1					
ANR	2500889	Argument	list		2500443	0					
ANR	2500890	Identifier	list		2500443	0					
ANR	2500891	Argument	item		2500443	1					
ANR	2500892	Identifier	item		2500443	0					
ANR	2500893	ReturnStatement	return list ;	326:1:8401:8412	2500443	18	True				
ANR	2500894	Identifier	list		2500443	0					
ANR	2500895	ReturnType	R_API RList *		2500443	1					
ANR	2500896	Identifier	r_anal_reflines_fcn_get		2500443	2					
ANR	2500897	ParameterList	"RAnal * anal , RAnalFunction * fcn , int nlines , int linesout , int linescall"		2500443	3					
ANR	2500898	Parameter	RAnal * anal	236:37:6135:6145	2500443	0	True				
ANR	2500899	ParameterType	RAnal *		2500443	0					
ANR	2500900	Identifier	anal		2500443	1					
ANR	2500901	Parameter	RAnalFunction * fcn	236:50:6148:6165	2500443	1	True				
ANR	2500902	ParameterType	RAnalFunction *		2500443	0					
ANR	2500903	Identifier	fcn		2500443	1					
ANR	2500904	Parameter	int nlines	236:70:6168:6177	2500443	2	True				
ANR	2500905	ParameterType	int		2500443	0					
ANR	2500906	Identifier	nlines		2500443	1					
ANR	2500907	Parameter	int linesout	236:82:6180:6191	2500443	3	True				
ANR	2500908	ParameterType	int		2500443	0					
ANR	2500909	Identifier	linesout		2500443	1					
ANR	2500910	Parameter	int linescall	236:96:6194:6206	2500443	4	True				
ANR	2500911	ParameterType	int		2500443	0					
ANR	2500912	Identifier	linescall		2500443	1					
ANR	2500913	CFGEntryNode	ENTRY		2500443		True				
ANR	2500914	CFGExitNode	EXIT		2500443		True				
ANR	2500915	CFGErrorNode	ERROR		2500443		True				
ANR	2500916	Symbol	bb		2500443						
ANR	2500917	Symbol	RAnalRefline		2500443						
ANR	2500918	Symbol	item -> type		2500443						
ANR	2500919	Symbol	bb -> size		2500443						
ANR	2500920	Symbol	linesout		2500443						
ANR	2500921	Symbol	R_ANAL_BB_TYPE_CJMP		2500443						
ANR	2500922	Symbol	nlines		2500443						
ANR	2500923	Symbol	bb -> addr		2500443						
ANR	2500924	Symbol	item -> to		2500443						
ANR	2500925	Symbol	fcn		2500443						
ANR	2500926	Symbol	R_ANAL_BB_TYPE_SWITCH		2500443						
ANR	2500927	Symbol	R_ANAL_BB_TYPE_JMP		2500443						
ANR	2500928	Symbol	len		2500443						
ANR	2500929	Symbol	item -> from		2500443						
ANR	2500930	Symbol	* item		2500443						
ANR	2500931	Symbol	linescall		2500443						
ANR	2500932	Symbol	bb -> type		2500443						
ANR	2500933	Symbol	R_ANAL_BB_TYPE_CALL		2500443						
ANR	2500934	Symbol	* bb -> switch_op		2500443						
ANR	2500935	Symbol	control_type		2500443						
ANR	2500936	Symbol	R_ANAL_BB_TYPE_COND		2500443						
ANR	2500937	Symbol	bb -> fail		2500443						
ANR	2500938	Symbol	item		2500443						
ANR	2500939	Symbol	NULL		2500443						
ANR	2500940	Symbol	* bb		2500443						
ANR	2500941	Symbol	item -> index		2500443						
ANR	2500942	Symbol	index		2500443						
ANR	2500943	Symbol	iter		2500443						
ANR	2500944	Symbol	list		2500443						
ANR	2500945	Symbol	item -> direction		2500443						
ANR	2500946	Symbol	caseop		2500443						
ANR	2500947	Symbol	* * bb		2500443						
ANR	2500948	Symbol	bb -> switch_op -> addr		2500443						
ANR	2500949	Symbol	R_NEW0		2500443						
ANR	2500950	Symbol	bb -> jump		2500443						
ANR	2500951	Symbol	* caseop		2500443						
ANR	2500952	Symbol	caseop -> jump		2500443						
ANR	2500953	Symbol	anal		2500443						
ANR	2500954	Symbol	bb -> switch_op		2500443						
ANR	2500955	Symbol	bb_iter		2500443						
ANR	2500956	Symbol	r_list_new		2500443						
ANR	2500957	Function	r_anal_reflines_middle	329:0:8417:8706							
ANR	2500958	FunctionDef	"r_anal_reflines_middle (RAnal * a , RList * list , ut64 addr , int len)"		2500957	0					
ANR	2500959	CompoundStatement		329:95:8512:8706	2500957	0					
ANR	2500960	IfStatement	if ( a && list )		2500957	0					
ANR	2500961	Condition	a && list	330:5:8519:8527	2500957	0	True				
ANR	2500962	AndExpression	a && list		2500957	0		&&			
ANR	2500963	Identifier	a		2500957	0					
ANR	2500964	Identifier	list		2500957	1					
ANR	2500965	CompoundStatement		4:2:42:57	2500957	1					
ANR	2500966	IdentifierDeclStatement	RAnalRefline * ref ;	331:2:8534:8551	2500957	0	True				
ANR	2500967	IdentifierDecl	* ref		2500957	0					
ANR	2500968	IdentifierDeclType	RAnalRefline *		2500957	0					
ANR	2500969	Identifier	ref		2500957	1					
ANR	2500970	IdentifierDeclStatement	RListIter * iter ;	332:2:8555:8570	2500957	1	True				
ANR	2500971	IdentifierDecl	* iter		2500957	0					
ANR	2500972	IdentifierDeclType	RListIter *		2500957	0					
ANR	2500973	Identifier	iter		2500957	1					
ANR	2500974	Statement	r_list_foreach	333:2:8574:8587	2500957	2	True				
ANR	2500975	Statement	(	333:17:8589:8589	2500957	3	True				
ANR	2500976	Statement	list	333:18:8590:8593	2500957	4	True				
ANR	2500977	Statement	","	333:22:8594:8594	2500957	5	True				
ANR	2500978	Statement	iter	333:24:8596:8599	2500957	6	True				
ANR	2500979	Statement	","	333:28:8600:8600	2500957	7	True				
ANR	2500980	Statement	ref	333:30:8602:8604	2500957	8	True				
ANR	2500981	Statement	)	333:33:8605:8605	2500957	9	True				
ANR	2500982	CompoundStatement		5:35:94:94	2500957	10					
ANR	2500983	IfStatement	if ( ( ref -> to > addr ) && ( ref -> to < addr + len ) )		2500957	0					
ANR	2500984	Condition	( ref -> to > addr ) && ( ref -> to < addr + len )	334:7:8616:8657	2500957	0	True				
ANR	2500985	AndExpression	( ref -> to > addr ) && ( ref -> to < addr + len )		2500957	0		&&			
ANR	2500986	RelationalExpression	ref -> to > addr		2500957	0		>			
ANR	2500987	PtrMemberAccess	ref -> to		2500957	0					
ANR	2500988	Identifier	ref		2500957	0					
ANR	2500989	Identifier	to		2500957	1					
ANR	2500990	Identifier	addr		2500957	1					
ANR	2500991	RelationalExpression	ref -> to < addr + len		2500957	1		<			
ANR	2500992	PtrMemberAccess	ref -> to		2500957	0					
ANR	2500993	Identifier	ref		2500957	0					
ANR	2500994	Identifier	to		2500957	1					
ANR	2500995	AdditiveExpression	addr + len		2500957	1		+			
ANR	2500996	Identifier	addr		2500957	0					
ANR	2500997	Identifier	len		2500957	1					
ANR	2500998	CompoundStatement		6:51:147:147	2500957	1					
ANR	2500999	ReturnStatement	return true ;	335:4:8666:8677	2500957	0	True				
ANR	2501000	Identifier	true		2500957	0					
ANR	2501001	ReturnStatement	return false ;	339:1:8692:8704	2500957	1	True				
ANR	2501002	Identifier	false		2500957	0					
ANR	2501003	ReturnType	R_API int		2500957	1					
ANR	2501004	Identifier	r_anal_reflines_middle		2500957	2					
ANR	2501005	ParameterList	"RAnal * a , RList * list , ut64 addr , int len"		2500957	3					
ANR	2501006	Parameter	RAnal * a	329:33:8450:8457	2500957	0	True				
ANR	2501007	ParameterType	RAnal *		2500957	0					
ANR	2501008	Identifier	a		2500957	1					
ANR	2501009	Parameter	RList * list	329:43:8460:8489	2500957	1	True				
ANR	2501010	ParameterType	RList *		2500957	0					
ANR	2501011	Identifier	list		2500957	1					
ANR	2501012	Parameter	ut64 addr	329:75:8492:8500	2500957	2	True				
ANR	2501013	ParameterType	ut64		2500957	0					
ANR	2501014	Identifier	addr		2500957	1					
ANR	2501015	Parameter	int len	329:86:8503:8509	2500957	3	True				
ANR	2501016	ParameterType	int		2500957	0					
ANR	2501017	Identifier	len		2500957	1					
ANR	2501018	CFGEntryNode	ENTRY		2500957		True				
ANR	2501019	CFGExitNode	EXIT		2500957		True				
ANR	2501020	Symbol	ref -> to		2500957						
ANR	2501021	Symbol	a		2500957						
ANR	2501022	Symbol	ref		2500957						
ANR	2501023	Symbol	len		2500957						
ANR	2501024	Symbol	true		2500957						
ANR	2501025	Symbol	false		2500957						
ANR	2501026	Symbol	iter		2500957						
ANR	2501027	Symbol	list		2500957						
ANR	2501028	Symbol	addr		2500957						
ANR	2501029	Symbol	* ref		2500957						
ANR	2501030	Function	get_corner_char	342:0:8709:9151							
ANR	2501031	FunctionDef	"get_corner_char (RAnalRefline * ref , ut64 addr , bool is_middle_before)"		2501030	0					
ANR	2501032	CompoundStatement		342:88:8797:9151	2501030	0					
ANR	2501033	IfStatement	if ( ref -> from == ref -> to )		2501030	0					
ANR	2501034	Condition	ref -> from == ref -> to	343:5:8804:8823	2501030	0	True				
ANR	2501035	EqualityExpression	ref -> from == ref -> to		2501030	0		==			
ANR	2501036	PtrMemberAccess	ref -> from		2501030	0					
ANR	2501037	Identifier	ref		2501030	0					
ANR	2501038	Identifier	from		2501030	1					
ANR	2501039	PtrMemberAccess	ref -> to		2501030	1					
ANR	2501040	Identifier	ref		2501030	0					
ANR	2501041	Identifier	to		2501030	1					
ANR	2501042	CompoundStatement		2:27:28:28	2501030	1					
ANR	2501043	ReturnStatement	"return ""@"" ;"	344:2:8830:8840	2501030	0	True				
ANR	2501044	PrimaryExpression	"""@"""		2501030	0					
ANR	2501045	IfStatement	if ( addr == ref -> to )		2501030	1					
ANR	2501046	Condition	addr == ref -> to	346:5:8850:8864	2501030	0	True				
ANR	2501047	EqualityExpression	addr == ref -> to		2501030	0		==			
ANR	2501048	Identifier	addr		2501030	0					
ANR	2501049	PtrMemberAccess	ref -> to		2501030	1					
ANR	2501050	Identifier	ref		2501030	0					
ANR	2501051	Identifier	to		2501030	1					
ANR	2501052	CompoundStatement		5:22:69:69	2501030	1					
ANR	2501053	IfStatement	if ( is_middle_before )		2501030	0					
ANR	2501054	Condition	is_middle_before	347:6:8875:8890	2501030	0	True				
ANR	2501055	Identifier	is_middle_before		2501030	0					
ANR	2501056	CompoundStatement		6:24:95:95	2501030	1					
ANR	2501057	ReturnStatement	"return ( ref -> from > ref -> to ) ? "" "" : ""|"" ;"	348:3:8898:8938	2501030	0	True				
ANR	2501058	ConditionalExpression	"( ref -> from > ref -> to ) ? "" "" : ""|"""		2501030	0					
ANR	2501059	Condition	ref -> from > ref -> to		2501030	0					
ANR	2501060	RelationalExpression	ref -> from > ref -> to		2501030	0		>			
ANR	2501061	PtrMemberAccess	ref -> from		2501030	0					
ANR	2501062	Identifier	ref		2501030	0					
ANR	2501063	Identifier	from		2501030	1					
ANR	2501064	PtrMemberAccess	ref -> to		2501030	1					
ANR	2501065	Identifier	ref		2501030	0					
ANR	2501066	Identifier	to		2501030	1					
ANR	2501067	PrimaryExpression	""" """		2501030	1					
ANR	2501068	PrimaryExpression	"""|"""		2501030	2					
ANR	2501069	ReturnStatement	"return ( ref -> from > ref -> to ) ? ""."" : ""`"" ;"	350:2:8946:8986	2501030	1	True				
ANR	2501070	ConditionalExpression	"( ref -> from > ref -> to ) ? ""."" : ""`"""		2501030	0					
ANR	2501071	Condition	ref -> from > ref -> to		2501030	0					
ANR	2501072	RelationalExpression	ref -> from > ref -> to		2501030	0		>			
ANR	2501073	PtrMemberAccess	ref -> from		2501030	0					
ANR	2501074	Identifier	ref		2501030	0					
ANR	2501075	Identifier	from		2501030	1					
ANR	2501076	PtrMemberAccess	ref -> to		2501030	1					
ANR	2501077	Identifier	ref		2501030	0					
ANR	2501078	Identifier	to		2501030	1					
ANR	2501079	PrimaryExpression	"""."""		2501030	1					
ANR	2501080	PrimaryExpression	"""`"""		2501030	2					
ANR	2501081	IfStatement	if ( addr == ref -> from )		2501030	2					
ANR	2501082	Condition	addr == ref -> from	352:5:8996:9012	2501030	0	True				
ANR	2501083	EqualityExpression	addr == ref -> from		2501030	0		==			
ANR	2501084	Identifier	addr		2501030	0					
ANR	2501085	PtrMemberAccess	ref -> from		2501030	1					
ANR	2501086	Identifier	ref		2501030	0					
ANR	2501087	Identifier	from		2501030	1					
ANR	2501088	CompoundStatement		11:24:217:217	2501030	1					
ANR	2501089	IfStatement	if ( is_middle_before )		2501030	0					
ANR	2501090	Condition	is_middle_before	353:6:9023:9038	2501030	0	True				
ANR	2501091	Identifier	is_middle_before		2501030	0					
ANR	2501092	CompoundStatement		12:24:243:243	2501030	1					
ANR	2501093	ReturnStatement	"return ( ref -> from > ref -> to ) ? ""|"" : "" "" ;"	354:3:9046:9086	2501030	0	True				
ANR	2501094	ConditionalExpression	"( ref -> from > ref -> to ) ? ""|"" : "" """		2501030	0					
ANR	2501095	Condition	ref -> from > ref -> to		2501030	0					
ANR	2501096	RelationalExpression	ref -> from > ref -> to		2501030	0		>			
ANR	2501097	PtrMemberAccess	ref -> from		2501030	0					
ANR	2501098	Identifier	ref		2501030	0					
ANR	2501099	Identifier	from		2501030	1					
ANR	2501100	PtrMemberAccess	ref -> to		2501030	1					
ANR	2501101	Identifier	ref		2501030	0					
ANR	2501102	Identifier	to		2501030	1					
ANR	2501103	PrimaryExpression	"""|"""		2501030	1					
ANR	2501104	PrimaryExpression	""" """		2501030	2					
ANR	2501105	ReturnStatement	"return ( ref -> from > ref -> to ) ? ""`"" : "","" ;"	356:2:9094:9134	2501030	1	True				
ANR	2501106	ConditionalExpression	"( ref -> from > ref -> to ) ? ""`"" : "","""		2501030	0					
ANR	2501107	Condition	ref -> from > ref -> to		2501030	0					
ANR	2501108	RelationalExpression	ref -> from > ref -> to		2501030	0		>			
ANR	2501109	PtrMemberAccess	ref -> from		2501030	0					
ANR	2501110	Identifier	ref		2501030	0					
ANR	2501111	Identifier	from		2501030	1					
ANR	2501112	PtrMemberAccess	ref -> to		2501030	1					
ANR	2501113	Identifier	ref		2501030	0					
ANR	2501114	Identifier	to		2501030	1					
ANR	2501115	PrimaryExpression	"""`"""		2501030	1					
ANR	2501116	PrimaryExpression	""","""		2501030	2					
ANR	2501117	ReturnStatement	"return """" ;"	358:1:9140:9149	2501030	3	True				
ANR	2501118	PrimaryExpression	""""""		2501030	0					
ANR	2501119	ReturnType	static const char *		2501030	1					
ANR	2501120	Identifier	get_corner_char		2501030	2					
ANR	2501121	ParameterList	"RAnalRefline * ref , ut64 addr , bool is_middle_before"		2501030	3					
ANR	2501122	Parameter	RAnalRefline * ref	342:35:8744:8760	2501030	0	True				
ANR	2501123	ParameterType	RAnalRefline *		2501030	0					
ANR	2501124	Identifier	ref		2501030	1					
ANR	2501125	Parameter	ut64 addr	342:54:8763:8771	2501030	1	True				
ANR	2501126	ParameterType	ut64		2501030	0					
ANR	2501127	Identifier	addr		2501030	1					
ANR	2501128	Parameter	bool is_middle_before	342:65:8774:8794	2501030	2	True				
ANR	2501129	ParameterType	bool		2501030	0					
ANR	2501130	Identifier	is_middle_before		2501030	1					
ANR	2501131	CFGEntryNode	ENTRY		2501030		True				
ANR	2501132	CFGExitNode	EXIT		2501030		True				
ANR	2501133	Symbol	ref -> to		2501030						
ANR	2501134	Symbol	ref		2501030						
ANR	2501135	Symbol	is_middle_before		2501030						
ANR	2501136	Symbol	addr		2501030						
ANR	2501137	Symbol	* ref		2501030						
ANR	2501138	Symbol	ref -> from		2501030						
ANR	2501139	Function	add_spaces	361:0:9154:9404							
ANR	2501140	FunctionDef	"add_spaces (RBuffer * b , int level , int pos , bool wide)"		2501139	0					
ANR	2501141	CompoundStatement		361:66:9220:9404	2501139	0					
ANR	2501142	IfStatement	if ( pos != - 1 )		2501139	0					
ANR	2501143	Condition	pos != - 1	362:5:9227:9235	2501139	0	True				
ANR	2501144	EqualityExpression	pos != - 1		2501139	0		!=			
ANR	2501145	Identifier	pos		2501139	0					
ANR	2501146	UnaryOperationExpression	- 1		2501139	1					
ANR	2501147	UnaryOperator	-		2501139	0					
ANR	2501148	PrimaryExpression	1		2501139	1					
ANR	2501149	CompoundStatement		2:16:17:17	2501139	1					
ANR	2501150	IfStatement	if ( wide )		2501139	0					
ANR	2501151	Condition	wide	363:6:9246:9249	2501139	0	True				
ANR	2501152	Identifier	wide		2501139	0					
ANR	2501153	CompoundStatement		3:12:31:31	2501139	1					
ANR	2501154	ExpressionStatement	pos *= 2	364:3:9257:9265	2501139	0	True				
ANR	2501155	AssignmentExpression	pos *= 2		2501139	0		*=			
ANR	2501156	Identifier	pos		2501139	0					
ANR	2501157	PrimaryExpression	2		2501139	1					
ANR	2501158	ExpressionStatement	level *= 2	365:3:9270:9280	2501139	1	True				
ANR	2501159	AssignmentExpression	level *= 2		2501139	0		*=			
ANR	2501160	Identifier	level		2501139	0					
ANR	2501161	PrimaryExpression	2		2501139	1					
ANR	2501162	IfStatement	if ( pos > level + 1 )		2501139	1					
ANR	2501163	Condition	pos > level + 1	367:6:9292:9306	2501139	0	True				
ANR	2501164	RelationalExpression	pos > level + 1		2501139	0		>			
ANR	2501165	Identifier	pos		2501139	0					
ANR	2501166	AdditiveExpression	level + 1		2501139	1		+			
ANR	2501167	Identifier	level		2501139	0					
ANR	2501168	PrimaryExpression	1		2501139	1					
ANR	2501169	CompoundStatement		8:3:93:142	2501139	1					
ANR	2501170	IdentifierDeclStatement	"const char * pd = r_str_pad ( ' ' , pos - level - 1 ) ;"	368:3:9314:9363	2501139	0	True				
ANR	2501171	IdentifierDecl	"* pd = r_str_pad ( ' ' , pos - level - 1 )"		2501139	0					
ANR	2501172	IdentifierDeclType	const char *		2501139	0					
ANR	2501173	Identifier	pd		2501139	1					
ANR	2501174	AssignmentExpression	"* pd = r_str_pad ( ' ' , pos - level - 1 )"		2501139	2		=			
ANR	2501175	Identifier	pd		2501139	0					
ANR	2501176	CallExpression	"r_str_pad ( ' ' , pos - level - 1 )"		2501139	1					
ANR	2501177	Callee	r_str_pad		2501139	0					
ANR	2501178	Identifier	r_str_pad		2501139	0					
ANR	2501179	ArgumentList	' '		2501139	1					
ANR	2501180	Argument	' '		2501139	0					
ANR	2501181	PrimaryExpression	' '		2501139	0					
ANR	2501182	Argument	pos - level - 1		2501139	1					
ANR	2501183	AdditiveExpression	pos - level - 1		2501139	0		-			
ANR	2501184	Identifier	pos		2501139	0					
ANR	2501185	AdditiveExpression	level - 1		2501139	1		-			
ANR	2501186	Identifier	level		2501139	0					
ANR	2501187	PrimaryExpression	1		2501139	1					
ANR	2501188	ExpressionStatement	"r_buf_append_string ( b , pd )"	369:3:9368:9395	2501139	1	True				
ANR	2501189	CallExpression	"r_buf_append_string ( b , pd )"		2501139	0					
ANR	2501190	Callee	r_buf_append_string		2501139	0					
ANR	2501191	Identifier	r_buf_append_string		2501139	0					
ANR	2501192	ArgumentList	b		2501139	1					
ANR	2501193	Argument	b		2501139	0					
ANR	2501194	Identifier	b		2501139	0					
ANR	2501195	Argument	pd		2501139	1					
ANR	2501196	Identifier	pd		2501139	0					
ANR	2501197	ReturnType	static void		2501139	1					
ANR	2501198	Identifier	add_spaces		2501139	2					
ANR	2501199	ParameterList	"RBuffer * b , int level , int pos , bool wide"		2501139	3					
ANR	2501200	Parameter	RBuffer * b	361:23:9177:9186	2501139	0	True				
ANR	2501201	ParameterType	RBuffer *		2501139	0					
ANR	2501202	Identifier	b		2501139	1					
ANR	2501203	Parameter	int level	361:35:9189:9197	2501139	1	True				
ANR	2501204	ParameterType	int		2501139	0					
ANR	2501205	Identifier	level		2501139	1					
ANR	2501206	Parameter	int pos	361:46:9200:9206	2501139	2	True				
ANR	2501207	ParameterType	int		2501139	0					
ANR	2501208	Identifier	pos		2501139	1					
ANR	2501209	Parameter	bool wide	361:55:9209:9217	2501139	3	True				
ANR	2501210	ParameterType	bool		2501139	0					
ANR	2501211	Identifier	wide		2501139	1					
ANR	2501212	CFGEntryNode	ENTRY		2501139		True				
ANR	2501213	CFGExitNode	EXIT		2501139		True				
ANR	2501214	Symbol	b		2501139						
ANR	2501215	Symbol	r_str_pad		2501139						
ANR	2501216	Symbol	wide		2501139						
ANR	2501217	Symbol	pd		2501139						
ANR	2501218	Symbol	level		2501139						
ANR	2501219	Symbol	pos		2501139						
ANR	2501220	Function	fill_level	374:0:9407:9743							
ANR	2501221	FunctionDef	"fill_level (RBuffer * b , int pos , char ch , RAnalRefline * r , bool wide)"		2501220	0					
ANR	2501222	CompoundStatement		374:81:9488:9743	2501220	0					
ANR	2501223	IdentifierDeclStatement	int sz = r -> level ;	375:1:9491:9508	2501220	0	True				
ANR	2501224	IdentifierDecl	sz = r -> level		2501220	0					
ANR	2501225	IdentifierDeclType	int		2501220	0					
ANR	2501226	Identifier	sz		2501220	1					
ANR	2501227	AssignmentExpression	sz = r -> level		2501220	2		=			
ANR	2501228	Identifier	sz		2501220	0					
ANR	2501229	PtrMemberAccess	r -> level		2501220	1					
ANR	2501230	Identifier	r		2501220	0					
ANR	2501231	Identifier	level		2501220	1					
ANR	2501232	IfStatement	if ( wide )		2501220	1					
ANR	2501233	Condition	wide	376:5:9515:9518	2501220	0	True				
ANR	2501234	Identifier	wide		2501220	0					
ANR	2501235	CompoundStatement		3:11:32:32	2501220	1					
ANR	2501236	ExpressionStatement	sz *= 2	377:2:9525:9532	2501220	0	True				
ANR	2501237	AssignmentExpression	sz *= 2		2501220	0		*=			
ANR	2501238	Identifier	sz		2501220	0					
ANR	2501239	PrimaryExpression	2		2501220	1					
ANR	2501240	IdentifierDeclStatement	"const char * pd = r_str_pad ( ch , sz - 1 ) ;"	379:1:9538:9577	2501220	2	True				
ANR	2501241	IdentifierDecl	"* pd = r_str_pad ( ch , sz - 1 )"		2501220	0					
ANR	2501242	IdentifierDeclType	const char *		2501220	0					
ANR	2501243	Identifier	pd		2501220	1					
ANR	2501244	AssignmentExpression	"* pd = r_str_pad ( ch , sz - 1 )"		2501220	2		=			
ANR	2501245	Identifier	pd		2501220	0					
ANR	2501246	CallExpression	"r_str_pad ( ch , sz - 1 )"		2501220	1					
ANR	2501247	Callee	r_str_pad		2501220	0					
ANR	2501248	Identifier	r_str_pad		2501220	0					
ANR	2501249	ArgumentList	ch		2501220	1					
ANR	2501250	Argument	ch		2501220	0					
ANR	2501251	Identifier	ch		2501220	0					
ANR	2501252	Argument	sz - 1		2501220	1					
ANR	2501253	AdditiveExpression	sz - 1		2501220	0		-			
ANR	2501254	Identifier	sz		2501220	0					
ANR	2501255	PrimaryExpression	1		2501220	1					
ANR	2501256	IfStatement	if ( pos == - 1 )		2501220	3					
ANR	2501257	Condition	pos == - 1	380:5:9584:9592	2501220	0	True				
ANR	2501258	EqualityExpression	pos == - 1		2501220	0		==			
ANR	2501259	Identifier	pos		2501220	0					
ANR	2501260	UnaryOperationExpression	- 1		2501220	1					
ANR	2501261	UnaryOperator	-		2501220	0					
ANR	2501262	PrimaryExpression	1		2501220	1					
ANR	2501263	CompoundStatement		7:16:106:106	2501220	1					
ANR	2501264	ExpressionStatement	"r_buf_append_string ( b , pd )"	381:2:9599:9626	2501220	0	True				
ANR	2501265	CallExpression	"r_buf_append_string ( b , pd )"		2501220	0					
ANR	2501266	Callee	r_buf_append_string		2501220	0					
ANR	2501267	Identifier	r_buf_append_string		2501220	0					
ANR	2501268	ArgumentList	b		2501220	1					
ANR	2501269	Argument	b		2501220	0					
ANR	2501270	Identifier	b		2501220	0					
ANR	2501271	Argument	pd		2501220	1					
ANR	2501272	Identifier	pd		2501220	0					
ANR	2501273	ElseStatement	else		2501220	0					
ANR	2501274	CompoundStatement		10:2:151:174	2501220	0					
ANR	2501275	IdentifierDeclStatement	int pdlen = strlen ( pd ) ;	383:2:9640:9663	2501220	0	True				
ANR	2501276	IdentifierDecl	pdlen = strlen ( pd )		2501220	0					
ANR	2501277	IdentifierDeclType	int		2501220	0					
ANR	2501278	Identifier	pdlen		2501220	1					
ANR	2501279	AssignmentExpression	pdlen = strlen ( pd )		2501220	2		=			
ANR	2501280	Identifier	pdlen		2501220	0					
ANR	2501281	CallExpression	strlen ( pd )		2501220	1					
ANR	2501282	Callee	strlen		2501220	0					
ANR	2501283	Identifier	strlen		2501220	0					
ANR	2501284	ArgumentList	pd		2501220	1					
ANR	2501285	Argument	pd		2501220	0					
ANR	2501286	Identifier	pd		2501220	0					
ANR	2501287	IfStatement	if ( pdlen > 0 )		2501220	1					
ANR	2501288	Condition	pdlen > 0	384:6:9671:9679	2501220	0	True				
ANR	2501289	RelationalExpression	pdlen > 0		2501220	0		>			
ANR	2501290	Identifier	pdlen		2501220	0					
ANR	2501291	PrimaryExpression	0		2501220	1					
ANR	2501292	CompoundStatement		11:17:193:193	2501220	1					
ANR	2501293	ExpressionStatement	"r_buf_write_at ( b , pos , ( const ut8 * ) pd , pdlen )"	385:3:9687:9734	2501220	0	True				
ANR	2501294	CallExpression	"r_buf_write_at ( b , pos , ( const ut8 * ) pd , pdlen )"		2501220	0					
ANR	2501295	Callee	r_buf_write_at		2501220	0					
ANR	2501296	Identifier	r_buf_write_at		2501220	0					
ANR	2501297	ArgumentList	b		2501220	1					
ANR	2501298	Argument	b		2501220	0					
ANR	2501299	Identifier	b		2501220	0					
ANR	2501300	Argument	pos		2501220	1					
ANR	2501301	Identifier	pos		2501220	0					
ANR	2501302	Argument	( const ut8 * ) pd		2501220	2					
ANR	2501303	CastExpression	( const ut8 * ) pd		2501220	0					
ANR	2501304	CastTarget	const ut8 *		2501220	0					
ANR	2501305	Identifier	pd		2501220	1					
ANR	2501306	Argument	pdlen		2501220	3					
ANR	2501307	Identifier	pdlen		2501220	0					
ANR	2501308	ReturnType	static void		2501220	1					
ANR	2501309	Identifier	fill_level		2501220	2					
ANR	2501310	ParameterList	"RBuffer * b , int pos , char ch , RAnalRefline * r , bool wide"		2501220	3					
ANR	2501311	Parameter	RBuffer * b	374:23:9430:9439	2501220	0	True				
ANR	2501312	ParameterType	RBuffer *		2501220	0					
ANR	2501313	Identifier	b		2501220	1					
ANR	2501314	Parameter	int pos	374:35:9442:9448	2501220	1	True				
ANR	2501315	ParameterType	int		2501220	0					
ANR	2501316	Identifier	pos		2501220	1					
ANR	2501317	Parameter	char ch	374:44:9451:9457	2501220	2	True				
ANR	2501318	ParameterType	char		2501220	0					
ANR	2501319	Identifier	ch		2501220	1					
ANR	2501320	Parameter	RAnalRefline * r	374:53:9460:9474	2501220	3	True				
ANR	2501321	ParameterType	RAnalRefline *		2501220	0					
ANR	2501322	Identifier	r		2501220	1					
ANR	2501323	Parameter	bool wide	374:70:9477:9485	2501220	4	True				
ANR	2501324	ParameterType	bool		2501220	0					
ANR	2501325	Identifier	wide		2501220	1					
ANR	2501326	CFGEntryNode	ENTRY		2501220		True				
ANR	2501327	CFGExitNode	EXIT		2501220		True				
ANR	2501328	Symbol	strlen		2501220						
ANR	2501329	Symbol	b		2501220						
ANR	2501330	Symbol	r		2501220						
ANR	2501331	Symbol	r_str_pad		2501220						
ANR	2501332	Symbol	wide		2501220						
ANR	2501333	Symbol	pd		2501220						
ANR	2501334	Symbol	pos		2501220						
ANR	2501335	Symbol	ch		2501220						
ANR	2501336	Symbol	r -> level		2501220						
ANR	2501337	Symbol	sz		2501220						
ANR	2501338	Symbol	pdlen		2501220						
ANR	2501339	Symbol	* r		2501220						
ANR	2501340	Function	refline_kept	390:0:9746:10010							
ANR	2501341	FunctionDef	"refline_kept (RAnalRefline * ref , bool middle_after , ut64 addr)"		2501340	0					
ANR	2501342	CompoundStatement		390:81:9827:10010	2501340	0					
ANR	2501343	IfStatement	if ( middle_after )		2501340	0					
ANR	2501344	Condition	middle_after	391:5:9834:9845	2501340	0	True				
ANR	2501345	Identifier	middle_after		2501340	0					
ANR	2501346	CompoundStatement		2:19:20:20	2501340	1					
ANR	2501347	IfStatement	if ( ref -> direction < 0 )		2501340	0					
ANR	2501348	Condition	ref -> direction < 0	392:6:9856:9873	2501340	0	True				
ANR	2501349	RelationalExpression	ref -> direction < 0		2501340	0		<			
ANR	2501350	PtrMemberAccess	ref -> direction		2501340	0					
ANR	2501351	Identifier	ref		2501340	0					
ANR	2501352	Identifier	direction		2501340	1					
ANR	2501353	PrimaryExpression	0		2501340	1					
ANR	2501354	CompoundStatement		3:26:48:48	2501340	1					
ANR	2501355	IfStatement	if ( ref -> from == addr )		2501340	0					
ANR	2501356	Condition	ref -> from == addr	393:7:9885:9901	2501340	0	True				
ANR	2501357	EqualityExpression	ref -> from == addr		2501340	0		==			
ANR	2501358	PtrMemberAccess	ref -> from		2501340	0					
ANR	2501359	Identifier	ref		2501340	0					
ANR	2501360	Identifier	from		2501340	1					
ANR	2501361	Identifier	addr		2501340	1					
ANR	2501362	CompoundStatement		4:26:76:76	2501340	1					
ANR	2501363	ReturnStatement	return false ;	394:4:9910:9922	2501340	0	True				
ANR	2501364	Identifier	false		2501340	0					
ANR	2501365	ElseStatement	else		2501340	0					
ANR	2501366	CompoundStatement		7:9:110:110	2501340	0					
ANR	2501367	IfStatement	if ( ref -> to == addr )		2501340	0					
ANR	2501368	Condition	ref -> to == addr	397:7:9947:9961	2501340	0	True				
ANR	2501369	EqualityExpression	ref -> to == addr		2501340	0		==			
ANR	2501370	PtrMemberAccess	ref -> to		2501340	0					
ANR	2501371	Identifier	ref		2501340	0					
ANR	2501372	Identifier	to		2501340	1					
ANR	2501373	Identifier	addr		2501340	1					
ANR	2501374	CompoundStatement		8:24:136:136	2501340	1					
ANR	2501375	ReturnStatement	return false ;	398:4:9970:9982	2501340	0	True				
ANR	2501376	Identifier	false		2501340	0					
ANR	2501377	ReturnStatement	return true ;	402:1:9997:10008	2501340	1	True				
ANR	2501378	Identifier	true		2501340	0					
ANR	2501379	ReturnType	static inline bool		2501340	1					
ANR	2501380	Identifier	refline_kept		2501340	2					
ANR	2501381	ParameterList	"RAnalRefline * ref , bool middle_after , ut64 addr"		2501340	3					
ANR	2501382	Parameter	RAnalRefline * ref	390:32:9778:9794	2501340	0	True				
ANR	2501383	ParameterType	RAnalRefline *		2501340	0					
ANR	2501384	Identifier	ref		2501340	1					
ANR	2501385	Parameter	bool middle_after	390:51:9797:9813	2501340	1	True				
ANR	2501386	ParameterType	bool		2501340	0					
ANR	2501387	Identifier	middle_after		2501340	1					
ANR	2501388	Parameter	ut64 addr	390:70:9816:9824	2501340	2	True				
ANR	2501389	ParameterType	ut64		2501340	0					
ANR	2501390	Identifier	addr		2501340	1					
ANR	2501391	CFGEntryNode	ENTRY		2501340		True				
ANR	2501392	CFGExitNode	EXIT		2501340		True				
ANR	2501393	Symbol	ref -> to		2501340						
ANR	2501394	Symbol	middle_after		2501340						
ANR	2501395	Symbol	ref		2501340						
ANR	2501396	Symbol	false		2501340						
ANR	2501397	Symbol	true		2501340						
ANR	2501398	Symbol	addr		2501340						
ANR	2501399	Symbol	* ref		2501340						
ANR	2501400	Symbol	ref -> direction		2501340						
ANR	2501401	Symbol	ref -> from		2501340						
ANR	2501402	Function	r_anal_reflines_str	407:0:10113:13929							
ANR	2501403	FunctionDef	"r_anal_reflines_str (void * _core , ut64 addr , int opts)"		2501402	0					
ANR	2501404	CompoundStatement		407:73:10186:13929	2501402	0					
ANR	2501405	IdentifierDeclStatement	RCore * core = _core ;	408:1:10189:10208	2501402	0	True				
ANR	2501406	IdentifierDecl	* core = _core		2501402	0					
ANR	2501407	IdentifierDeclType	RCore *		2501402	0					
ANR	2501408	Identifier	core		2501402	1					
ANR	2501409	AssignmentExpression	* core = _core		2501402	2		=			
ANR	2501410	Identifier	_core		2501402	0					
ANR	2501411	Identifier	_core		2501402	1					
ANR	2501412	IdentifierDeclStatement	RCons * cons = core -> cons ;	409:1:10211:10235	2501402	1	True				
ANR	2501413	IdentifierDecl	* cons = core -> cons		2501402	0					
ANR	2501414	IdentifierDeclType	RCons *		2501402	0					
ANR	2501415	Identifier	cons		2501402	1					
ANR	2501416	AssignmentExpression	* cons = core -> cons		2501402	2		=			
ANR	2501417	Identifier	cons		2501402	0					
ANR	2501418	PtrMemberAccess	core -> cons		2501402	1					
ANR	2501419	Identifier	core		2501402	0					
ANR	2501420	Identifier	cons		2501402	1					
ANR	2501421	IdentifierDeclStatement	RAnal * anal = core -> anal ;	410:1:10238:10262	2501402	2	True				
ANR	2501422	IdentifierDecl	* anal = core -> anal		2501402	0					
ANR	2501423	IdentifierDeclType	RAnal *		2501402	0					
ANR	2501424	Identifier	anal		2501402	1					
ANR	2501425	AssignmentExpression	* anal = core -> anal		2501402	2		=			
ANR	2501426	Identifier	anal		2501402	0					
ANR	2501427	PtrMemberAccess	core -> anal		2501402	1					
ANR	2501428	Identifier	core		2501402	0					
ANR	2501429	Identifier	anal		2501402	1					
ANR	2501430	IdentifierDeclStatement	RBuffer * b ;	411:1:10265:10275	2501402	3	True				
ANR	2501431	IdentifierDecl	* b		2501402	0					
ANR	2501432	IdentifierDeclType	RBuffer *		2501402	0					
ANR	2501433	Identifier	b		2501402	1					
ANR	2501434	IdentifierDeclStatement	RBuffer * c ;	412:1:10278:10288	2501402	4	True				
ANR	2501435	IdentifierDecl	* c		2501402	0					
ANR	2501436	IdentifierDeclType	RBuffer *		2501402	0					
ANR	2501437	Identifier	c		2501402	1					
ANR	2501438	IdentifierDeclStatement	RListIter * iter ;	413:1:10291:10306	2501402	5	True				
ANR	2501439	IdentifierDecl	* iter		2501402	0					
ANR	2501440	IdentifierDeclType	RListIter *		2501402	0					
ANR	2501441	Identifier	iter		2501402	1					
ANR	2501442	IdentifierDeclStatement	RAnalRefline * ref ;	414:1:10309:10326	2501402	6	True				
ANR	2501443	IdentifierDecl	* ref		2501402	0					
ANR	2501444	IdentifierDeclType	RAnalRefline *		2501402	0					
ANR	2501445	Identifier	ref		2501402	1					
ANR	2501446	IdentifierDeclStatement	int l ;	415:1:10329:10334	2501402	7	True				
ANR	2501447	IdentifierDecl	l		2501402	0					
ANR	2501448	IdentifierDeclType	int		2501402	0					
ANR	2501449	Identifier	l		2501402	1					
ANR	2501450	IdentifierDeclStatement	bool wide = opts & R_ANAL_REFLINE_TYPE_WIDE ;	416:1:10337:10380	2501402	8	True				
ANR	2501451	IdentifierDecl	wide = opts & R_ANAL_REFLINE_TYPE_WIDE		2501402	0					
ANR	2501452	IdentifierDeclType	bool		2501402	0					
ANR	2501453	Identifier	wide		2501402	1					
ANR	2501454	AssignmentExpression	wide = opts & R_ANAL_REFLINE_TYPE_WIDE		2501402	2		=			
ANR	2501455	Identifier	wide		2501402	0					
ANR	2501456	BitAndExpression	opts & R_ANAL_REFLINE_TYPE_WIDE		2501402	1		&			
ANR	2501457	Identifier	opts		2501402	0					
ANR	2501458	Identifier	R_ANAL_REFLINE_TYPE_WIDE		2501402	1					
ANR	2501459	IdentifierDeclStatement	"int dir = 0 , pos = - 1 , max_level = - 1 ;"	417:1:10383:10420	2501402	9	True				
ANR	2501460	IdentifierDecl	dir = 0		2501402	0					
ANR	2501461	IdentifierDeclType	int		2501402	0					
ANR	2501462	Identifier	dir		2501402	1					
ANR	2501463	AssignmentExpression	dir = 0		2501402	2		=			
ANR	2501464	Identifier	dir		2501402	0					
ANR	2501465	PrimaryExpression	0		2501402	1					
ANR	2501466	IdentifierDecl	pos = - 1		2501402	1					
ANR	2501467	IdentifierDeclType	int		2501402	0					
ANR	2501468	Identifier	pos		2501402	1					
ANR	2501469	AssignmentExpression	pos = - 1		2501402	2		=			
ANR	2501470	Identifier	pos		2501402	0					
ANR	2501471	UnaryOperationExpression	- 1		2501402	1					
ANR	2501472	UnaryOperator	-		2501402	0					
ANR	2501473	PrimaryExpression	1		2501402	1					
ANR	2501474	IdentifierDecl	max_level = - 1		2501402	2					
ANR	2501475	IdentifierDeclType	int		2501402	0					
ANR	2501476	Identifier	max_level		2501402	1					
ANR	2501477	AssignmentExpression	max_level = - 1		2501402	2		=			
ANR	2501478	Identifier	max_level		2501402	0					
ANR	2501479	UnaryOperationExpression	- 1		2501402	1					
ANR	2501480	UnaryOperator	-		2501402	0					
ANR	2501481	PrimaryExpression	1		2501402	1					
ANR	2501482	IdentifierDeclStatement	bool middle_before = opts & R_ANAL_REFLINE_TYPE_MIDDLE_BEFORE ;	418:1:10423:10484	2501402	10	True				
ANR	2501483	IdentifierDecl	middle_before = opts & R_ANAL_REFLINE_TYPE_MIDDLE_BEFORE		2501402	0					
ANR	2501484	IdentifierDeclType	bool		2501402	0					
ANR	2501485	Identifier	middle_before		2501402	1					
ANR	2501486	AssignmentExpression	middle_before = opts & R_ANAL_REFLINE_TYPE_MIDDLE_BEFORE		2501402	2		=			
ANR	2501487	Identifier	middle_before		2501402	0					
ANR	2501488	BitAndExpression	opts & R_ANAL_REFLINE_TYPE_MIDDLE_BEFORE		2501402	1		&			
ANR	2501489	Identifier	opts		2501402	0					
ANR	2501490	Identifier	R_ANAL_REFLINE_TYPE_MIDDLE_BEFORE		2501402	1					
ANR	2501491	IdentifierDeclStatement	bool middle_after = opts & R_ANAL_REFLINE_TYPE_MIDDLE_AFTER ;	419:1:10487:10546	2501402	11	True				
ANR	2501492	IdentifierDecl	middle_after = opts & R_ANAL_REFLINE_TYPE_MIDDLE_AFTER		2501402	0					
ANR	2501493	IdentifierDeclType	bool		2501402	0					
ANR	2501494	Identifier	middle_after		2501402	1					
ANR	2501495	AssignmentExpression	middle_after = opts & R_ANAL_REFLINE_TYPE_MIDDLE_AFTER		2501402	2		=			
ANR	2501496	Identifier	middle_after		2501402	0					
ANR	2501497	BitAndExpression	opts & R_ANAL_REFLINE_TYPE_MIDDLE_AFTER		2501402	1		&			
ANR	2501498	Identifier	opts		2501402	0					
ANR	2501499	Identifier	R_ANAL_REFLINE_TYPE_MIDDLE_AFTER		2501402	1					
ANR	2501500	IdentifierDeclStatement	char * str = NULL ;	420:1:10549:10565	2501402	12	True				
ANR	2501501	IdentifierDecl	* str = NULL		2501402	0					
ANR	2501502	IdentifierDeclType	char *		2501402	0					
ANR	2501503	Identifier	str		2501402	1					
ANR	2501504	AssignmentExpression	* str = NULL		2501402	2		=			
ANR	2501505	Identifier	NULL		2501402	0					
ANR	2501506	Identifier	NULL		2501402	1					
ANR	2501507	IdentifierDeclStatement	char * col_str = NULL ;	421:1:10568:10588	2501402	13	True				
ANR	2501508	IdentifierDecl	* col_str = NULL		2501402	0					
ANR	2501509	IdentifierDeclType	char *		2501402	0					
ANR	2501510	Identifier	col_str		2501402	1					
ANR	2501511	AssignmentExpression	* col_str = NULL		2501402	2		=			
ANR	2501512	Identifier	NULL		2501402	0					
ANR	2501513	Identifier	NULL		2501402	1					
ANR	2501514	ExpressionStatement	"r_return_val_if_fail ( cons && anal && anal -> reflines , NULL )"	423:1:10592:10651	2501402	14	True				
ANR	2501515	CallExpression	"r_return_val_if_fail ( cons && anal && anal -> reflines , NULL )"		2501402	0					
ANR	2501516	Callee	r_return_val_if_fail		2501402	0					
ANR	2501517	Identifier	r_return_val_if_fail		2501402	0					
ANR	2501518	ArgumentList	cons && anal && anal -> reflines		2501402	1					
ANR	2501519	Argument	cons && anal && anal -> reflines		2501402	0					
ANR	2501520	AndExpression	cons && anal && anal -> reflines		2501402	0		&&			
ANR	2501521	Identifier	cons		2501402	0					
ANR	2501522	AndExpression	anal && anal -> reflines		2501402	1		&&			
ANR	2501523	Identifier	anal		2501402	0					
ANR	2501524	PtrMemberAccess	anal -> reflines		2501402	1					
ANR	2501525	Identifier	anal		2501402	0					
ANR	2501526	Identifier	reflines		2501402	1					
ANR	2501527	Argument	NULL		2501402	1					
ANR	2501528	Identifier	NULL		2501402	0					
ANR	2501529	IdentifierDeclStatement	RList * lvls = r_list_new ( ) ;	425:1:10655:10682	2501402	15	True				
ANR	2501530	IdentifierDecl	* lvls = r_list_new ( )		2501402	0					
ANR	2501531	IdentifierDeclType	RList *		2501402	0					
ANR	2501532	Identifier	lvls		2501402	1					
ANR	2501533	AssignmentExpression	* lvls = r_list_new ( )		2501402	2		=			
ANR	2501534	Identifier	lvls		2501402	0					
ANR	2501535	CallExpression	r_list_new ( )		2501402	1					
ANR	2501536	Callee	r_list_new		2501402	0					
ANR	2501537	Identifier	r_list_new		2501402	0					
ANR	2501538	ArgumentList			2501402	1					
ANR	2501539	IfStatement	if ( ! lvls )		2501402	16					
ANR	2501540	Condition	! lvls	426:5:10689:10693	2501402	0	True				
ANR	2501541	UnaryOperationExpression	! lvls		2501402	0					
ANR	2501542	UnaryOperator	!		2501402	0					
ANR	2501543	Identifier	lvls		2501402	1					
ANR	2501544	CompoundStatement		20:12:509:509	2501402	1					
ANR	2501545	ReturnStatement	return NULL ;	427:2:10700:10711	2501402	0	True				
ANR	2501546	Identifier	NULL		2501402	0					
ANR	2501547	Statement	r_list_foreach	429:1:10717:10730	2501402	17	True				
ANR	2501548	Statement	(	429:16:10732:10732	2501402	18	True				
ANR	2501549	Statement	anal	429:17:10733:10736	2501402	19	True				
ANR	2501550	Statement	->	429:21:10737:10738	2501402	20	True				
ANR	2501551	Statement	reflines	429:23:10739:10746	2501402	21	True				
ANR	2501552	Statement	","	429:31:10747:10747	2501402	22	True				
ANR	2501553	Statement	iter	429:33:10749:10752	2501402	23	True				
ANR	2501554	Statement	","	429:37:10753:10753	2501402	24	True				
ANR	2501555	Statement	ref	429:39:10755:10757	2501402	25	True				
ANR	2501556	Statement	)	429:42:10758:10758	2501402	26	True				
ANR	2501557	CompoundStatement		23:44:573:573	2501402	27					
ANR	2501558	IfStatement	if ( core -> cons && core -> cons -> context -> breaked )		2501402	0					
ANR	2501559	Condition	core -> cons && core -> cons -> context -> breaked	430:6:10768:10809	2501402	0	True				
ANR	2501560	AndExpression	core -> cons && core -> cons -> context -> breaked		2501402	0		&&			
ANR	2501561	PtrMemberAccess	core -> cons		2501402	0					
ANR	2501562	Identifier	core		2501402	0					
ANR	2501563	Identifier	cons		2501402	1					
ANR	2501564	PtrMemberAccess	core -> cons -> context -> breaked		2501402	1					
ANR	2501565	PtrMemberAccess	core -> cons -> context		2501402	0					
ANR	2501566	PtrMemberAccess	core -> cons		2501402	0					
ANR	2501567	Identifier	core		2501402	0					
ANR	2501568	Identifier	cons		2501402	1					
ANR	2501569	Identifier	context		2501402	1					
ANR	2501570	Identifier	breaked		2501402	1					
ANR	2501571	CompoundStatement		24:50:625:625	2501402	1					
ANR	2501572	ExpressionStatement	r_list_free ( lvls )	431:3:10817:10835	2501402	0	True				
ANR	2501573	CallExpression	r_list_free ( lvls )		2501402	0					
ANR	2501574	Callee	r_list_free		2501402	0					
ANR	2501575	Identifier	r_list_free		2501402	0					
ANR	2501576	ArgumentList	lvls		2501402	1					
ANR	2501577	Argument	lvls		2501402	0					
ANR	2501578	Identifier	lvls		2501402	0					
ANR	2501579	ReturnStatement	return NULL ;	432:3:10840:10851	2501402	1	True				
ANR	2501580	Identifier	NULL		2501402	0					
ANR	2501581	IfStatement	"if ( in_refline ( addr , ref ) && refline_kept ( ref , middle_after , addr ) )"		2501402	1					
ANR	2501582	Condition	"in_refline ( addr , ref ) && refline_kept ( ref , middle_after , addr )"	434:6:10863:10926	2501402	0	True				
ANR	2501583	AndExpression	"in_refline ( addr , ref ) && refline_kept ( ref , middle_after , addr )"		2501402	0		&&			
ANR	2501584	CallExpression	"in_refline ( addr , ref )"		2501402	0					
ANR	2501585	Callee	in_refline		2501402	0					
ANR	2501586	Identifier	in_refline		2501402	0					
ANR	2501587	ArgumentList	addr		2501402	1					
ANR	2501588	Argument	addr		2501402	0					
ANR	2501589	Identifier	addr		2501402	0					
ANR	2501590	Argument	ref		2501402	1					
ANR	2501591	Identifier	ref		2501402	0					
ANR	2501592	CallExpression	"refline_kept ( ref , middle_after , addr )"		2501402	1					
ANR	2501593	Callee	refline_kept		2501402	0					
ANR	2501594	Identifier	refline_kept		2501402	0					
ANR	2501595	ArgumentList	ref		2501402	1					
ANR	2501596	Argument	ref		2501402	0					
ANR	2501597	Identifier	ref		2501402	0					
ANR	2501598	Argument	middle_after		2501402	1					
ANR	2501599	Identifier	middle_after		2501402	0					
ANR	2501600	Argument	addr		2501402	2					
ANR	2501601	Identifier	addr		2501402	0					
ANR	2501602	CompoundStatement		28:72:742:742	2501402	1					
ANR	2501603	ExpressionStatement	"r_list_add_sorted ( lvls , ( void * ) ref , ( RListComparator ) cmp_by_ref_lvl )"	435:3:10934:11004	2501402	0	True				
ANR	2501604	CallExpression	"r_list_add_sorted ( lvls , ( void * ) ref , ( RListComparator ) cmp_by_ref_lvl )"		2501402	0					
ANR	2501605	Callee	r_list_add_sorted		2501402	0					
ANR	2501606	Identifier	r_list_add_sorted		2501402	0					
ANR	2501607	ArgumentList	lvls		2501402	1					
ANR	2501608	Argument	lvls		2501402	0					
ANR	2501609	Identifier	lvls		2501402	0					
ANR	2501610	Argument	( void * ) ref		2501402	1					
ANR	2501611	CastExpression	( void * ) ref		2501402	0					
ANR	2501612	CastTarget	void *		2501402	0					
ANR	2501613	Identifier	ref		2501402	1					
ANR	2501614	Argument	( RListComparator ) cmp_by_ref_lvl		2501402	2					
ANR	2501615	CastExpression	( RListComparator ) cmp_by_ref_lvl		2501402	0					
ANR	2501616	CastTarget	RListComparator		2501402	0					
ANR	2501617	Identifier	cmp_by_ref_lvl		2501402	1					
ANR	2501618	ExpressionStatement	b = r_buf_new ( )	438:1:11014:11030	2501402	28	True				
ANR	2501619	AssignmentExpression	b = r_buf_new ( )		2501402	0		=			
ANR	2501620	Identifier	b		2501402	0					
ANR	2501621	CallExpression	r_buf_new ( )		2501402	1					
ANR	2501622	Callee	r_buf_new		2501402	0					
ANR	2501623	Identifier	r_buf_new		2501402	0					
ANR	2501624	ArgumentList			2501402	1					
ANR	2501625	ExpressionStatement	c = r_buf_new ( )	439:1:11033:11049	2501402	29	True				
ANR	2501626	AssignmentExpression	c = r_buf_new ( )		2501402	0		=			
ANR	2501627	Identifier	c		2501402	0					
ANR	2501628	CallExpression	r_buf_new ( )		2501402	1					
ANR	2501629	Callee	r_buf_new		2501402	0					
ANR	2501630	Identifier	r_buf_new		2501402	0					
ANR	2501631	ArgumentList			2501402	1					
ANR	2501632	ExpressionStatement	"r_buf_append_string ( c , "" "" )"	440:1:11052:11080	2501402	30	True				
ANR	2501633	CallExpression	"r_buf_append_string ( c , "" "" )"		2501402	0					
ANR	2501634	Callee	r_buf_append_string		2501402	0					
ANR	2501635	Identifier	r_buf_append_string		2501402	0					
ANR	2501636	ArgumentList	c		2501402	1					
ANR	2501637	Argument	c		2501402	0					
ANR	2501638	Identifier	c		2501402	0					
ANR	2501639	Argument	""" """		2501402	1					
ANR	2501640	PrimaryExpression	""" """		2501402	0					
ANR	2501641	ExpressionStatement	"r_buf_append_string ( b , "" "" )"	441:1:11083:11111	2501402	31	True				
ANR	2501642	CallExpression	"r_buf_append_string ( b , "" "" )"		2501402	0					
ANR	2501643	Callee	r_buf_append_string		2501402	0					
ANR	2501644	Identifier	r_buf_append_string		2501402	0					
ANR	2501645	ArgumentList	b		2501402	1					
ANR	2501646	Argument	b		2501402	0					
ANR	2501647	Identifier	b		2501402	0					
ANR	2501648	Argument	""" """		2501402	1					
ANR	2501649	PrimaryExpression	""" """		2501402	0					
ANR	2501650	Statement	r_list_foreach	442:1:11114:11127	2501402	32	True				
ANR	2501651	Statement	(	442:16:11129:11129	2501402	33	True				
ANR	2501652	Statement	lvls	442:17:11130:11133	2501402	34	True				
ANR	2501653	Statement	","	442:21:11134:11134	2501402	35	True				
ANR	2501654	Statement	iter	442:23:11136:11139	2501402	36	True				
ANR	2501655	Statement	","	442:27:11140:11140	2501402	37	True				
ANR	2501656	Statement	ref	442:29:11142:11144	2501402	38	True				
ANR	2501657	Statement	)	442:32:11145:11145	2501402	39	True				
ANR	2501658	CompoundStatement		36:34:960:960	2501402	40					
ANR	2501659	IfStatement	if ( core -> cons && core -> cons -> context -> breaked )		2501402	0					
ANR	2501660	Condition	core -> cons && core -> cons -> context -> breaked	443:6:11155:11196	2501402	0	True				
ANR	2501661	AndExpression	core -> cons && core -> cons -> context -> breaked		2501402	0		&&			
ANR	2501662	PtrMemberAccess	core -> cons		2501402	0					
ANR	2501663	Identifier	core		2501402	0					
ANR	2501664	Identifier	cons		2501402	1					
ANR	2501665	PtrMemberAccess	core -> cons -> context -> breaked		2501402	1					
ANR	2501666	PtrMemberAccess	core -> cons -> context		2501402	0					
ANR	2501667	PtrMemberAccess	core -> cons		2501402	0					
ANR	2501668	Identifier	core		2501402	0					
ANR	2501669	Identifier	cons		2501402	1					
ANR	2501670	Identifier	context		2501402	1					
ANR	2501671	Identifier	breaked		2501402	1					
ANR	2501672	CompoundStatement		37:50:1012:1012	2501402	1					
ANR	2501673	ExpressionStatement	r_list_free ( lvls )	444:3:11204:11222	2501402	0	True				
ANR	2501674	CallExpression	r_list_free ( lvls )		2501402	0					
ANR	2501675	Callee	r_list_free		2501402	0					
ANR	2501676	Identifier	r_list_free		2501402	0					
ANR	2501677	ArgumentList	lvls		2501402	1					
ANR	2501678	Argument	lvls		2501402	0					
ANR	2501679	Identifier	lvls		2501402	0					
ANR	2501680	ExpressionStatement	r_buf_free ( b )	445:3:11227:11241	2501402	1	True				
ANR	2501681	CallExpression	r_buf_free ( b )		2501402	0					
ANR	2501682	Callee	r_buf_free		2501402	0					
ANR	2501683	Identifier	r_buf_free		2501402	0					
ANR	2501684	ArgumentList	b		2501402	1					
ANR	2501685	Argument	b		2501402	0					
ANR	2501686	Identifier	b		2501402	0					
ANR	2501687	ExpressionStatement	r_buf_free ( c )	446:3:11246:11260	2501402	2	True				
ANR	2501688	CallExpression	r_buf_free ( c )		2501402	0					
ANR	2501689	Callee	r_buf_free		2501402	0					
ANR	2501690	Identifier	r_buf_free		2501402	0					
ANR	2501691	ArgumentList	c		2501402	1					
ANR	2501692	Argument	c		2501402	0					
ANR	2501693	Identifier	c		2501402	0					
ANR	2501694	ReturnStatement	return NULL ;	447:3:11265:11276	2501402	3	True				
ANR	2501695	Identifier	NULL		2501402	0					
ANR	2501696	IfStatement	if ( ( ref -> from == addr || ref -> to == addr ) && ! middle_after )		2501402	1					
ANR	2501697	Condition	( ref -> from == addr || ref -> to == addr ) && ! middle_after	449:6:11288:11342	2501402	0	True				
ANR	2501698	AndExpression	( ref -> from == addr || ref -> to == addr ) && ! middle_after		2501402	0		&&			
ANR	2501699	OrExpression	ref -> from == addr || ref -> to == addr		2501402	0		||			
ANR	2501700	EqualityExpression	ref -> from == addr		2501402	0		==			
ANR	2501701	PtrMemberAccess	ref -> from		2501402	0					
ANR	2501702	Identifier	ref		2501402	0					
ANR	2501703	Identifier	from		2501402	1					
ANR	2501704	Identifier	addr		2501402	1					
ANR	2501705	EqualityExpression	ref -> to == addr		2501402	1		==			
ANR	2501706	PtrMemberAccess	ref -> to		2501402	0					
ANR	2501707	Identifier	ref		2501402	0					
ANR	2501708	Identifier	to		2501402	1					
ANR	2501709	Identifier	addr		2501402	1					
ANR	2501710	UnaryOperationExpression	! middle_after		2501402	1					
ANR	2501711	UnaryOperator	!		2501402	0					
ANR	2501712	Identifier	middle_after		2501402	1					
ANR	2501713	CompoundStatement		47:3:1337:1389	2501402	1					
ANR	2501714	IdentifierDeclStatement	"const char * corner = get_corner_char ( ref , addr , middle_before ) ;"	450:3:11350:11413	2501402	0	True				
ANR	2501715	IdentifierDecl	"* corner = get_corner_char ( ref , addr , middle_before )"		2501402	0					
ANR	2501716	IdentifierDeclType	const char *		2501402	0					
ANR	2501717	Identifier	corner		2501402	1					
ANR	2501718	AssignmentExpression	"* corner = get_corner_char ( ref , addr , middle_before )"		2501402	2		=			
ANR	2501719	Identifier	corner		2501402	0					
ANR	2501720	CallExpression	"get_corner_char ( ref , addr , middle_before )"		2501402	1					
ANR	2501721	Callee	get_corner_char		2501402	0					
ANR	2501722	Identifier	get_corner_char		2501402	0					
ANR	2501723	ArgumentList	ref		2501402	1					
ANR	2501724	Argument	ref		2501402	0					
ANR	2501725	Identifier	ref		2501402	0					
ANR	2501726	Argument	addr		2501402	1					
ANR	2501727	Identifier	addr		2501402	0					
ANR	2501728	Argument	middle_before		2501402	2					
ANR	2501729	Identifier	middle_before		2501402	0					
ANR	2501730	IdentifierDeclStatement	const char ch = ref -> from == addr ? '=' : '-' ;	451:3:11418:11463	2501402	1	True				
ANR	2501731	IdentifierDecl	ch = ref -> from == addr ? '=' : '-'		2501402	0					
ANR	2501732	IdentifierDeclType	const char		2501402	0					
ANR	2501733	Identifier	ch		2501402	1					
ANR	2501734	AssignmentExpression	ch = ref -> from == addr ? '=' : '-'		2501402	2		=			
ANR	2501735	Identifier	ch		2501402	0					
ANR	2501736	ConditionalExpression	ref -> from == addr ? '=' : '-'		2501402	1					
ANR	2501737	Condition	ref -> from == addr		2501402	0					
ANR	2501738	EqualityExpression	ref -> from == addr		2501402	0		==			
ANR	2501739	PtrMemberAccess	ref -> from		2501402	0					
ANR	2501740	Identifier	ref		2501402	0					
ANR	2501741	Identifier	from		2501402	1					
ANR	2501742	Identifier	addr		2501402	1					
ANR	2501743	PrimaryExpression	'='		2501402	1					
ANR	2501744	PrimaryExpression	'-'		2501402	2					
ANR	2501745	IdentifierDeclStatement	const char ch_col = ref -> from >= ref -> to ? 't' : 'd' ;	452:3:11468:11519	2501402	2	True				
ANR	2501746	IdentifierDecl	ch_col = ref -> from >= ref -> to ? 't' : 'd'		2501402	0					
ANR	2501747	IdentifierDeclType	const char		2501402	0					
ANR	2501748	Identifier	ch_col		2501402	1					
ANR	2501749	AssignmentExpression	ch_col = ref -> from >= ref -> to ? 't' : 'd'		2501402	2		=			
ANR	2501750	Identifier	ch_col		2501402	0					
ANR	2501751	ConditionalExpression	ref -> from >= ref -> to ? 't' : 'd'		2501402	1					
ANR	2501752	Condition	ref -> from >= ref -> to		2501402	0					
ANR	2501753	RelationalExpression	ref -> from >= ref -> to		2501402	0		>=			
ANR	2501754	PtrMemberAccess	ref -> from		2501402	0					
ANR	2501755	Identifier	ref		2501402	0					
ANR	2501756	Identifier	from		2501402	1					
ANR	2501757	PtrMemberAccess	ref -> to		2501402	1					
ANR	2501758	Identifier	ref		2501402	0					
ANR	2501759	Identifier	to		2501402	1					
ANR	2501760	PrimaryExpression	't'		2501402	1					
ANR	2501761	PrimaryExpression	'd'		2501402	2					
ANR	2501762	IdentifierDeclStatement	"const char * col = ( ref -> from >= ref -> to ) ? ""t"" : ""d"" ;"	453:3:11524:11576	2501402	3	True				
ANR	2501763	IdentifierDecl	"* col = ( ref -> from >= ref -> to ) ? ""t"" : ""d"""		2501402	0					
ANR	2501764	IdentifierDeclType	const char *		2501402	0					
ANR	2501765	Identifier	col		2501402	1					
ANR	2501766	AssignmentExpression	"* col = ( ref -> from >= ref -> to ) ? ""t"" : ""d"""		2501402	2		=			
ANR	2501767	Identifier	col		2501402	0					
ANR	2501768	ConditionalExpression	"( ref -> from >= ref -> to ) ? ""t"" : ""d"""		2501402	1					
ANR	2501769	Condition	ref -> from >= ref -> to		2501402	0					
ANR	2501770	RelationalExpression	ref -> from >= ref -> to		2501402	0		>=			
ANR	2501771	PtrMemberAccess	ref -> from		2501402	0					
ANR	2501772	Identifier	ref		2501402	0					
ANR	2501773	Identifier	from		2501402	1					
ANR	2501774	PtrMemberAccess	ref -> to		2501402	1					
ANR	2501775	Identifier	ref		2501402	0					
ANR	2501776	Identifier	to		2501402	1					
ANR	2501777	PrimaryExpression	"""t"""		2501402	1					
ANR	2501778	PrimaryExpression	"""d"""		2501402	2					
ANR	2501779	IfStatement	if ( ! pos )		2501402	4					
ANR	2501780	Condition	! pos	454:7:11585:11588	2501402	0	True				
ANR	2501781	UnaryOperationExpression	! pos		2501402	0					
ANR	2501782	UnaryOperator	!		2501402	0					
ANR	2501783	Identifier	pos		2501402	1					
ANR	2501784	CompoundStatement		49:4:1410:1449	2501402	1					
ANR	2501785	IdentifierDeclStatement	int ch_pos = max_level + 1 - ref -> level ;	455:4:11597:11636	2501402	0	True				
ANR	2501786	IdentifierDecl	ch_pos = max_level + 1 - ref -> level		2501402	0					
ANR	2501787	IdentifierDeclType	int		2501402	0					
ANR	2501788	Identifier	ch_pos		2501402	1					
ANR	2501789	AssignmentExpression	ch_pos = max_level + 1 - ref -> level		2501402	2		=			
ANR	2501790	Identifier	ch_pos		2501402	0					
ANR	2501791	AdditiveExpression	max_level + 1 - ref -> level		2501402	1		+			
ANR	2501792	Identifier	max_level		2501402	0					
ANR	2501793	AdditiveExpression	1 - ref -> level		2501402	1		-			
ANR	2501794	PrimaryExpression	1		2501402	0					
ANR	2501795	PtrMemberAccess	ref -> level		2501402	1					
ANR	2501796	Identifier	ref		2501402	0					
ANR	2501797	Identifier	level		2501402	1					
ANR	2501798	IfStatement	if ( wide )		2501402	1					
ANR	2501799	Condition	wide	456:8:11646:11649	2501402	0	True				
ANR	2501800	Identifier	wide		2501402	0					
ANR	2501801	CompoundStatement		50:14:1465:1465	2501402	1					
ANR	2501802	ExpressionStatement	ch_pos = ch_pos * 2 - 1	457:5:11659:11682	2501402	0	True				
ANR	2501803	AssignmentExpression	ch_pos = ch_pos * 2 - 1		2501402	0		=			
ANR	2501804	Identifier	ch_pos		2501402	0					
ANR	2501805	AdditiveExpression	ch_pos * 2 - 1		2501402	1		-			
ANR	2501806	MultiplicativeExpression	ch_pos * 2		2501402	0		*			
ANR	2501807	Identifier	ch_pos		2501402	0					
ANR	2501808	PrimaryExpression	2		2501402	1					
ANR	2501809	PrimaryExpression	1		2501402	1					
ANR	2501810	ExpressionStatement	"r_buf_write_at ( b , ch_pos , ( ut8 * ) corner , 1 )"	459:4:11694:11738	2501402	2	True				
ANR	2501811	CallExpression	"r_buf_write_at ( b , ch_pos , ( ut8 * ) corner , 1 )"		2501402	0					
ANR	2501812	Callee	r_buf_write_at		2501402	0					
ANR	2501813	Identifier	r_buf_write_at		2501402	0					
ANR	2501814	ArgumentList	b		2501402	1					
ANR	2501815	Argument	b		2501402	0					
ANR	2501816	Identifier	b		2501402	0					
ANR	2501817	Argument	ch_pos		2501402	1					
ANR	2501818	Identifier	ch_pos		2501402	0					
ANR	2501819	Argument	( ut8 * ) corner		2501402	2					
ANR	2501820	CastExpression	( ut8 * ) corner		2501402	0					
ANR	2501821	CastTarget	ut8 *		2501402	0					
ANR	2501822	Identifier	corner		2501402	1					
ANR	2501823	Argument	1		2501402	3					
ANR	2501824	PrimaryExpression	1		2501402	0					
ANR	2501825	ExpressionStatement	"r_buf_write_at ( c , ch_pos , ( ut8 * ) col , 1 )"	460:4:11744:11785	2501402	3	True				
ANR	2501826	CallExpression	"r_buf_write_at ( c , ch_pos , ( ut8 * ) col , 1 )"		2501402	0					
ANR	2501827	Callee	r_buf_write_at		2501402	0					
ANR	2501828	Identifier	r_buf_write_at		2501402	0					
ANR	2501829	ArgumentList	c		2501402	1					
ANR	2501830	Argument	c		2501402	0					
ANR	2501831	Identifier	c		2501402	0					
ANR	2501832	Argument	ch_pos		2501402	1					
ANR	2501833	Identifier	ch_pos		2501402	0					
ANR	2501834	Argument	( ut8 * ) col		2501402	2					
ANR	2501835	CastExpression	( ut8 * ) col		2501402	0					
ANR	2501836	CastTarget	ut8 *		2501402	0					
ANR	2501837	Identifier	col		2501402	1					
ANR	2501838	Argument	1		2501402	3					
ANR	2501839	PrimaryExpression	1		2501402	0					
ANR	2501840	ExpressionStatement	"fill_level ( b , ch_pos + 1 , ch , ref , wide )"	461:4:11791:11832	2501402	4	True				
ANR	2501841	CallExpression	"fill_level ( b , ch_pos + 1 , ch , ref , wide )"		2501402	0					
ANR	2501842	Callee	fill_level		2501402	0					
ANR	2501843	Identifier	fill_level		2501402	0					
ANR	2501844	ArgumentList	b		2501402	1					
ANR	2501845	Argument	b		2501402	0					
ANR	2501846	Identifier	b		2501402	0					
ANR	2501847	Argument	ch_pos + 1		2501402	1					
ANR	2501848	AdditiveExpression	ch_pos + 1		2501402	0		+			
ANR	2501849	Identifier	ch_pos		2501402	0					
ANR	2501850	PrimaryExpression	1		2501402	1					
ANR	2501851	Argument	ch		2501402	2					
ANR	2501852	Identifier	ch		2501402	0					
ANR	2501853	Argument	ref		2501402	3					
ANR	2501854	Identifier	ref		2501402	0					
ANR	2501855	Argument	wide		2501402	4					
ANR	2501856	Identifier	wide		2501402	0					
ANR	2501857	ExpressionStatement	"fill_level ( c , ch_pos + 1 , ch_col , ref , wide )"	462:4:11838:11883	2501402	5	True				
ANR	2501858	CallExpression	"fill_level ( c , ch_pos + 1 , ch_col , ref , wide )"		2501402	0					
ANR	2501859	Callee	fill_level		2501402	0					
ANR	2501860	Identifier	fill_level		2501402	0					
ANR	2501861	ArgumentList	c		2501402	1					
ANR	2501862	Argument	c		2501402	0					
ANR	2501863	Identifier	c		2501402	0					
ANR	2501864	Argument	ch_pos + 1		2501402	1					
ANR	2501865	AdditiveExpression	ch_pos + 1		2501402	0		+			
ANR	2501866	Identifier	ch_pos		2501402	0					
ANR	2501867	PrimaryExpression	1		2501402	1					
ANR	2501868	Argument	ch_col		2501402	2					
ANR	2501869	Identifier	ch_col		2501402	0					
ANR	2501870	Argument	ref		2501402	3					
ANR	2501871	Identifier	ref		2501402	0					
ANR	2501872	Argument	wide		2501402	4					
ANR	2501873	Identifier	wide		2501402	0					
ANR	2501874	ElseStatement	else		2501402	0					
ANR	2501875	CompoundStatement		57:10:1708:1708	2501402	0					
ANR	2501876	ExpressionStatement	"add_spaces ( b , ref -> level , pos , wide )"	464:4:11901:11938	2501402	0	True				
ANR	2501877	CallExpression	"add_spaces ( b , ref -> level , pos , wide )"		2501402	0					
ANR	2501878	Callee	add_spaces		2501402	0					
ANR	2501879	Identifier	add_spaces		2501402	0					
ANR	2501880	ArgumentList	b		2501402	1					
ANR	2501881	Argument	b		2501402	0					
ANR	2501882	Identifier	b		2501402	0					
ANR	2501883	Argument	ref -> level		2501402	1					
ANR	2501884	PtrMemberAccess	ref -> level		2501402	0					
ANR	2501885	Identifier	ref		2501402	0					
ANR	2501886	Identifier	level		2501402	1					
ANR	2501887	Argument	pos		2501402	2					
ANR	2501888	Identifier	pos		2501402	0					
ANR	2501889	Argument	wide		2501402	3					
ANR	2501890	Identifier	wide		2501402	0					
ANR	2501891	ExpressionStatement	"add_spaces ( c , ref -> level , pos , wide )"	465:4:11944:11981	2501402	1	True				
ANR	2501892	CallExpression	"add_spaces ( c , ref -> level , pos , wide )"		2501402	0					
ANR	2501893	Callee	add_spaces		2501402	0					
ANR	2501894	Identifier	add_spaces		2501402	0					
ANR	2501895	ArgumentList	c		2501402	1					
ANR	2501896	Argument	c		2501402	0					
ANR	2501897	Identifier	c		2501402	0					
ANR	2501898	Argument	ref -> level		2501402	1					
ANR	2501899	PtrMemberAccess	ref -> level		2501402	0					
ANR	2501900	Identifier	ref		2501402	0					
ANR	2501901	Identifier	level		2501402	1					
ANR	2501902	Argument	pos		2501402	2					
ANR	2501903	Identifier	pos		2501402	0					
ANR	2501904	Argument	wide		2501402	3					
ANR	2501905	Identifier	wide		2501402	0					
ANR	2501906	ExpressionStatement	"r_buf_append_string ( b , corner )"	466:4:11987:12018	2501402	2	True				
ANR	2501907	CallExpression	"r_buf_append_string ( b , corner )"		2501402	0					
ANR	2501908	Callee	r_buf_append_string		2501402	0					
ANR	2501909	Identifier	r_buf_append_string		2501402	0					
ANR	2501910	ArgumentList	b		2501402	1					
ANR	2501911	Argument	b		2501402	0					
ANR	2501912	Identifier	b		2501402	0					
ANR	2501913	Argument	corner		2501402	1					
ANR	2501914	Identifier	corner		2501402	0					
ANR	2501915	ExpressionStatement	"r_buf_append_string ( c , col )"	467:4:12024:12052	2501402	3	True				
ANR	2501916	CallExpression	"r_buf_append_string ( c , col )"		2501402	0					
ANR	2501917	Callee	r_buf_append_string		2501402	0					
ANR	2501918	Identifier	r_buf_append_string		2501402	0					
ANR	2501919	ArgumentList	c		2501402	1					
ANR	2501920	Argument	c		2501402	0					
ANR	2501921	Identifier	c		2501402	0					
ANR	2501922	Argument	col		2501402	1					
ANR	2501923	Identifier	col		2501402	0					
ANR	2501924	IfStatement	if ( ! middle_before )		2501402	4					
ANR	2501925	Condition	! middle_before	468:8:12062:12075	2501402	0	True				
ANR	2501926	UnaryOperationExpression	! middle_before		2501402	0					
ANR	2501927	UnaryOperator	!		2501402	0					
ANR	2501928	Identifier	middle_before		2501402	1					
ANR	2501929	CompoundStatement		62:24:1891:1891	2501402	1					
ANR	2501930	ExpressionStatement	"fill_level ( b , - 1 , ch , ref , wide )"	469:5:12085:12118	2501402	0	True				
ANR	2501931	CallExpression	"fill_level ( b , - 1 , ch , ref , wide )"		2501402	0					
ANR	2501932	Callee	fill_level		2501402	0					
ANR	2501933	Identifier	fill_level		2501402	0					
ANR	2501934	ArgumentList	b		2501402	1					
ANR	2501935	Argument	b		2501402	0					
ANR	2501936	Identifier	b		2501402	0					
ANR	2501937	Argument	- 1		2501402	1					
ANR	2501938	UnaryOperationExpression	- 1		2501402	0					
ANR	2501939	UnaryOperator	-		2501402	0					
ANR	2501940	PrimaryExpression	1		2501402	1					
ANR	2501941	Argument	ch		2501402	2					
ANR	2501942	Identifier	ch		2501402	0					
ANR	2501943	Argument	ref		2501402	3					
ANR	2501944	Identifier	ref		2501402	0					
ANR	2501945	Argument	wide		2501402	4					
ANR	2501946	Identifier	wide		2501402	0					
ANR	2501947	ExpressionStatement	"fill_level ( c , - 1 , ch_col , ref , wide )"	470:5:12125:12162	2501402	1	True				
ANR	2501948	CallExpression	"fill_level ( c , - 1 , ch_col , ref , wide )"		2501402	0					
ANR	2501949	Callee	fill_level		2501402	0					
ANR	2501950	Identifier	fill_level		2501402	0					
ANR	2501951	ArgumentList	c		2501402	1					
ANR	2501952	Argument	c		2501402	0					
ANR	2501953	Identifier	c		2501402	0					
ANR	2501954	Argument	- 1		2501402	1					
ANR	2501955	UnaryOperationExpression	- 1		2501402	0					
ANR	2501956	UnaryOperator	-		2501402	0					
ANR	2501957	PrimaryExpression	1		2501402	1					
ANR	2501958	Argument	ch_col		2501402	2					
ANR	2501959	Identifier	ch_col		2501402	0					
ANR	2501960	Argument	ref		2501402	3					
ANR	2501961	Identifier	ref		2501402	0					
ANR	2501962	Argument	wide		2501402	4					
ANR	2501963	Identifier	wide		2501402	0					
ANR	2501964	IfStatement	if ( ! middle_before )		2501402	5					
ANR	2501965	Condition	! middle_before	473:7:12182:12195	2501402	0	True				
ANR	2501966	UnaryOperationExpression	! middle_before		2501402	0					
ANR	2501967	UnaryOperator	!		2501402	0					
ANR	2501968	Identifier	middle_before		2501402	1					
ANR	2501969	CompoundStatement		67:23:2011:2011	2501402	1					
ANR	2501970	ExpressionStatement	dir = ref -> to == addr ? 1 : 2	474:4:12204:12233	2501402	0	True				
ANR	2501971	AssignmentExpression	dir = ref -> to == addr ? 1 : 2		2501402	0		=			
ANR	2501972	Identifier	dir		2501402	0					
ANR	2501973	ConditionalExpression	ref -> to == addr ? 1 : 2		2501402	1					
ANR	2501974	Condition	ref -> to == addr		2501402	0					
ANR	2501975	EqualityExpression	ref -> to == addr		2501402	0		==			
ANR	2501976	PtrMemberAccess	ref -> to		2501402	0					
ANR	2501977	Identifier	ref		2501402	0					
ANR	2501978	Identifier	to		2501402	1					
ANR	2501979	Identifier	addr		2501402	1					
ANR	2501980	PrimaryExpression	1		2501402	1					
ANR	2501981	PrimaryExpression	2		2501402	2					
ANR	2501982	ExpressionStatement	pos = middle_before ? ref -> level : 0	476:3:12243:12279	2501402	6	True				
ANR	2501983	AssignmentExpression	pos = middle_before ? ref -> level : 0		2501402	0		=			
ANR	2501984	Identifier	pos		2501402	0					
ANR	2501985	ConditionalExpression	middle_before ? ref -> level : 0		2501402	1					
ANR	2501986	Condition	middle_before		2501402	0					
ANR	2501987	Identifier	middle_before		2501402	0					
ANR	2501988	PtrMemberAccess	ref -> level		2501402	1					
ANR	2501989	Identifier	ref		2501402	0					
ANR	2501990	Identifier	level		2501402	1					
ANR	2501991	PrimaryExpression	0		2501402	2					
ANR	2501992	ElseStatement	else		2501402	0					
ANR	2501993	CompoundStatement		71:9:2103:2103	2501402	0					
ANR	2501994	IfStatement	if ( ! pos )		2501402	0					
ANR	2501995	Condition	! pos	478:7:12299:12302	2501402	0	True				
ANR	2501996	UnaryOperationExpression	! pos		2501402	0					
ANR	2501997	UnaryOperator	!		2501402	0					
ANR	2501998	Identifier	pos		2501402	1					
ANR	2501999	CompoundStatement		72:13:2118:2118	2501402	1					
ANR	2502000	ContinueStatement	continue ;	479:4:12311:12319	2501402	0	True				
ANR	2502001	ExpressionStatement	"add_spaces ( b , ref -> level , pos , wide )"	481:3:12329:12366	2501402	1	True				
ANR	2502002	CallExpression	"add_spaces ( b , ref -> level , pos , wide )"		2501402	0					
ANR	2502003	Callee	add_spaces		2501402	0					
ANR	2502004	Identifier	add_spaces		2501402	0					
ANR	2502005	ArgumentList	b		2501402	1					
ANR	2502006	Argument	b		2501402	0					
ANR	2502007	Identifier	b		2501402	0					
ANR	2502008	Argument	ref -> level		2501402	1					
ANR	2502009	PtrMemberAccess	ref -> level		2501402	0					
ANR	2502010	Identifier	ref		2501402	0					
ANR	2502011	Identifier	level		2501402	1					
ANR	2502012	Argument	pos		2501402	2					
ANR	2502013	Identifier	pos		2501402	0					
ANR	2502014	Argument	wide		2501402	3					
ANR	2502015	Identifier	wide		2501402	0					
ANR	2502016	ExpressionStatement	"add_spaces ( c , ref -> level , pos , wide )"	482:3:12371:12408	2501402	2	True				
ANR	2502017	CallExpression	"add_spaces ( c , ref -> level , pos , wide )"		2501402	0					
ANR	2502018	Callee	add_spaces		2501402	0					
ANR	2502019	Identifier	add_spaces		2501402	0					
ANR	2502020	ArgumentList	c		2501402	1					
ANR	2502021	Argument	c		2501402	0					
ANR	2502022	Identifier	c		2501402	0					
ANR	2502023	Argument	ref -> level		2501402	1					
ANR	2502024	PtrMemberAccess	ref -> level		2501402	0					
ANR	2502025	Identifier	ref		2501402	0					
ANR	2502026	Identifier	level		2501402	1					
ANR	2502027	Argument	pos		2501402	2					
ANR	2502028	Identifier	pos		2501402	0					
ANR	2502029	Argument	wide		2501402	3					
ANR	2502030	Identifier	wide		2501402	0					
ANR	2502031	IfStatement	if ( ref -> from >= ref -> to )		2501402	3					
ANR	2502032	Condition	ref -> from >= ref -> to	483:7:12417:12436	2501402	0	True				
ANR	2502033	RelationalExpression	ref -> from >= ref -> to		2501402	0		>=			
ANR	2502034	PtrMemberAccess	ref -> from		2501402	0					
ANR	2502035	Identifier	ref		2501402	0					
ANR	2502036	Identifier	from		2501402	1					
ANR	2502037	PtrMemberAccess	ref -> to		2501402	1					
ANR	2502038	Identifier	ref		2501402	0					
ANR	2502039	Identifier	to		2501402	1					
ANR	2502040	CompoundStatement		77:29:2252:2252	2501402	1					
ANR	2502041	ExpressionStatement	"r_buf_append_string ( b , "":"" )"	484:4:12445:12473	2501402	0	True				
ANR	2502042	CallExpression	"r_buf_append_string ( b , "":"" )"		2501402	0					
ANR	2502043	Callee	r_buf_append_string		2501402	0					
ANR	2502044	Identifier	r_buf_append_string		2501402	0					
ANR	2502045	ArgumentList	b		2501402	1					
ANR	2502046	Argument	b		2501402	0					
ANR	2502047	Identifier	b		2501402	0					
ANR	2502048	Argument	""":"""		2501402	1					
ANR	2502049	PrimaryExpression	""":"""		2501402	0					
ANR	2502050	ExpressionStatement	"r_buf_append_string ( c , ""t"" )"	485:4:12479:12507	2501402	1	True				
ANR	2502051	CallExpression	"r_buf_append_string ( c , ""t"" )"		2501402	0					
ANR	2502052	Callee	r_buf_append_string		2501402	0					
ANR	2502053	Identifier	r_buf_append_string		2501402	0					
ANR	2502054	ArgumentList	c		2501402	1					
ANR	2502055	Argument	c		2501402	0					
ANR	2502056	Identifier	c		2501402	0					
ANR	2502057	Argument	"""t"""		2501402	1					
ANR	2502058	PrimaryExpression	"""t"""		2501402	0					
ANR	2502059	ElseStatement	else		2501402	0					
ANR	2502060	CompoundStatement		80:10:2332:2332	2501402	0					
ANR	2502061	ExpressionStatement	"r_buf_append_string ( b , ""|"" )"	487:4:12525:12553	2501402	0	True				
ANR	2502062	CallExpression	"r_buf_append_string ( b , ""|"" )"		2501402	0					
ANR	2502063	Callee	r_buf_append_string		2501402	0					
ANR	2502064	Identifier	r_buf_append_string		2501402	0					
ANR	2502065	ArgumentList	b		2501402	1					
ANR	2502066	Argument	b		2501402	0					
ANR	2502067	Identifier	b		2501402	0					
ANR	2502068	Argument	"""|"""		2501402	1					
ANR	2502069	PrimaryExpression	"""|"""		2501402	0					
ANR	2502070	ExpressionStatement	"r_buf_append_string ( c , ""d"" )"	488:4:12559:12587	2501402	1	True				
ANR	2502071	CallExpression	"r_buf_append_string ( c , ""d"" )"		2501402	0					
ANR	2502072	Callee	r_buf_append_string		2501402	0					
ANR	2502073	Identifier	r_buf_append_string		2501402	0					
ANR	2502074	ArgumentList	c		2501402	1					
ANR	2502075	Argument	c		2501402	0					
ANR	2502076	Identifier	c		2501402	0					
ANR	2502077	Argument	"""d"""		2501402	1					
ANR	2502078	PrimaryExpression	"""d"""		2501402	0					
ANR	2502079	ExpressionStatement	pos = ref -> level	490:3:12597:12613	2501402	4	True				
ANR	2502080	AssignmentExpression	pos = ref -> level		2501402	0		=			
ANR	2502081	Identifier	pos		2501402	0					
ANR	2502082	PtrMemberAccess	ref -> level		2501402	1					
ANR	2502083	Identifier	ref		2501402	0					
ANR	2502084	Identifier	level		2501402	1					
ANR	2502085	IfStatement	if ( max_level == - 1 )		2501402	2					
ANR	2502086	Condition	max_level == - 1	492:6:12625:12639	2501402	0	True				
ANR	2502087	EqualityExpression	max_level == - 1		2501402	0		==			
ANR	2502088	Identifier	max_level		2501402	0					
ANR	2502089	UnaryOperationExpression	- 1		2501402	1					
ANR	2502090	UnaryOperator	-		2501402	0					
ANR	2502091	PrimaryExpression	1		2501402	1					
ANR	2502092	CompoundStatement		86:23:2455:2455	2501402	1					
ANR	2502093	ExpressionStatement	max_level = ref -> level	493:3:12647:12669	2501402	0	True				
ANR	2502094	AssignmentExpression	max_level = ref -> level		2501402	0		=			
ANR	2502095	Identifier	max_level		2501402	0					
ANR	2502096	PtrMemberAccess	ref -> level		2501402	1					
ANR	2502097	Identifier	ref		2501402	0					
ANR	2502098	Identifier	level		2501402	1					
ANR	2502099	ExpressionStatement	"add_spaces ( c , 0 , pos , wide )"	496:1:12679:12707	2501402	41	True				
ANR	2502100	CallExpression	"add_spaces ( c , 0 , pos , wide )"		2501402	0					
ANR	2502101	Callee	add_spaces		2501402	0					
ANR	2502102	Identifier	add_spaces		2501402	0					
ANR	2502103	ArgumentList	c		2501402	1					
ANR	2502104	Argument	c		2501402	0					
ANR	2502105	Identifier	c		2501402	0					
ANR	2502106	Argument	0		2501402	1					
ANR	2502107	PrimaryExpression	0		2501402	0					
ANR	2502108	Argument	pos		2501402	2					
ANR	2502109	Identifier	pos		2501402	0					
ANR	2502110	Argument	wide		2501402	3					
ANR	2502111	Identifier	wide		2501402	0					
ANR	2502112	ExpressionStatement	"add_spaces ( b , 0 , pos , wide )"	497:1:12710:12738	2501402	42	True				
ANR	2502113	CallExpression	"add_spaces ( b , 0 , pos , wide )"		2501402	0					
ANR	2502114	Callee	add_spaces		2501402	0					
ANR	2502115	Identifier	add_spaces		2501402	0					
ANR	2502116	ArgumentList	b		2501402	1					
ANR	2502117	Argument	b		2501402	0					
ANR	2502118	Identifier	b		2501402	0					
ANR	2502119	Argument	0		2501402	1					
ANR	2502120	PrimaryExpression	0		2501402	0					
ANR	2502121	Argument	pos		2501402	2					
ANR	2502122	Identifier	pos		2501402	0					
ANR	2502123	Argument	wide		2501402	3					
ANR	2502124	Identifier	wide		2501402	0					
ANR	2502125	ExpressionStatement	str = r_buf_to_string ( b )	498:1:12741:12766	2501402	43	True				
ANR	2502126	AssignmentExpression	str = r_buf_to_string ( b )		2501402	0		=			
ANR	2502127	Identifier	str		2501402	0					
ANR	2502128	CallExpression	r_buf_to_string ( b )		2501402	1					
ANR	2502129	Callee	r_buf_to_string		2501402	0					
ANR	2502130	Identifier	r_buf_to_string		2501402	0					
ANR	2502131	ArgumentList	b		2501402	1					
ANR	2502132	Argument	b		2501402	0					
ANR	2502133	Identifier	b		2501402	0					
ANR	2502134	ExpressionStatement	col_str = r_buf_to_string ( c )	499:1:12769:12798	2501402	44	True				
ANR	2502135	AssignmentExpression	col_str = r_buf_to_string ( c )		2501402	0		=			
ANR	2502136	Identifier	col_str		2501402	0					
ANR	2502137	CallExpression	r_buf_to_string ( c )		2501402	1					
ANR	2502138	Callee	r_buf_to_string		2501402	0					
ANR	2502139	Identifier	r_buf_to_string		2501402	0					
ANR	2502140	ArgumentList	c		2501402	1					
ANR	2502141	Argument	c		2501402	0					
ANR	2502142	Identifier	c		2501402	0					
ANR	2502143	ExpressionStatement	r_buf_free ( b )	500:1:12801:12815	2501402	45	True				
ANR	2502144	CallExpression	r_buf_free ( b )		2501402	0					
ANR	2502145	Callee	r_buf_free		2501402	0					
ANR	2502146	Identifier	r_buf_free		2501402	0					
ANR	2502147	ArgumentList	b		2501402	1					
ANR	2502148	Argument	b		2501402	0					
ANR	2502149	Identifier	b		2501402	0					
ANR	2502150	ExpressionStatement	r_buf_free ( c )	501:1:12818:12832	2501402	46	True				
ANR	2502151	CallExpression	r_buf_free ( c )		2501402	0					
ANR	2502152	Callee	r_buf_free		2501402	0					
ANR	2502153	Identifier	r_buf_free		2501402	0					
ANR	2502154	ArgumentList	c		2501402	1					
ANR	2502155	Argument	c		2501402	0					
ANR	2502156	Identifier	c		2501402	0					
ANR	2502157	ExpressionStatement	b = NULL	502:1:12835:12843	2501402	47	True				
ANR	2502158	AssignmentExpression	b = NULL		2501402	0		=			
ANR	2502159	Identifier	b		2501402	0					
ANR	2502160	Identifier	NULL		2501402	1					
ANR	2502161	ExpressionStatement	c = NULL	503:1:12846:12854	2501402	48	True				
ANR	2502162	AssignmentExpression	c = NULL		2501402	0		=			
ANR	2502163	Identifier	c		2501402	0					
ANR	2502164	Identifier	NULL		2501402	1					
ANR	2502165	IfStatement	if ( ! str || ! col_str )		2501402	49					
ANR	2502166	Condition	! str || ! col_str	504:5:12861:12876	2501402	0	True				
ANR	2502167	OrExpression	! str || ! col_str		2501402	0		||			
ANR	2502168	UnaryOperationExpression	! str		2501402	0					
ANR	2502169	UnaryOperator	!		2501402	0					
ANR	2502170	Identifier	str		2501402	1					
ANR	2502171	UnaryOperationExpression	! col_str		2501402	1					
ANR	2502172	UnaryOperator	!		2501402	0					
ANR	2502173	Identifier	col_str		2501402	1					
ANR	2502174	CompoundStatement		98:23:2692:2692	2501402	1					
ANR	2502175	ExpressionStatement	r_list_free ( lvls )	505:2:12883:12901	2501402	0	True				
ANR	2502176	CallExpression	r_list_free ( lvls )		2501402	0					
ANR	2502177	Callee	r_list_free		2501402	0					
ANR	2502178	Identifier	r_list_free		2501402	0					
ANR	2502179	ArgumentList	lvls		2501402	1					
ANR	2502180	Argument	lvls		2501402	0					
ANR	2502181	Identifier	lvls		2501402	0					
ANR	2502182	ExpressionStatement	r_buf_free ( b )	509:2:13086:13100	2501402	1	True				
ANR	2502183	CallExpression	r_buf_free ( b )		2501402	0					
ANR	2502184	Callee	r_buf_free		2501402	0					
ANR	2502185	Identifier	r_buf_free		2501402	0					
ANR	2502186	ArgumentList	b		2501402	1					
ANR	2502187	Argument	b		2501402	0					
ANR	2502188	Identifier	b		2501402	0					
ANR	2502189	ExpressionStatement	r_buf_free ( c )	510:2:13104:13118	2501402	2	True				
ANR	2502190	CallExpression	r_buf_free ( c )		2501402	0					
ANR	2502191	Callee	r_buf_free		2501402	0					
ANR	2502192	Identifier	r_buf_free		2501402	0					
ANR	2502193	ArgumentList	c		2501402	1					
ANR	2502194	Argument	c		2501402	0					
ANR	2502195	Identifier	c		2501402	0					
ANR	2502196	ReturnStatement	return NULL ;	511:2:13122:13133	2501402	3	True				
ANR	2502197	Identifier	NULL		2501402	0					
ANR	2502198	IfStatement	if ( core -> anal -> lineswidth > 0 )		2501402	50					
ANR	2502199	Condition	core -> anal -> lineswidth > 0	513:5:13143:13168	2501402	0	True				
ANR	2502200	RelationalExpression	core -> anal -> lineswidth > 0		2501402	0		>			
ANR	2502201	PtrMemberAccess	core -> anal -> lineswidth		2501402	0					
ANR	2502202	PtrMemberAccess	core -> anal		2501402	0					
ANR	2502203	Identifier	core		2501402	0					
ANR	2502204	Identifier	anal		2501402	1					
ANR	2502205	Identifier	lineswidth		2501402	1					
ANR	2502206	PrimaryExpression	0		2501402	1					
ANR	2502207	CompoundStatement		108:2:2988:3019	2501402	1					
ANR	2502208	IdentifierDeclStatement	int lw = core -> anal -> lineswidth ;	514:2:13175:13206	2501402	0	True				
ANR	2502209	IdentifierDecl	lw = core -> anal -> lineswidth		2501402	0					
ANR	2502210	IdentifierDeclType	int		2501402	0					
ANR	2502211	Identifier	lw		2501402	1					
ANR	2502212	AssignmentExpression	lw = core -> anal -> lineswidth		2501402	2		=			
ANR	2502213	Identifier	lw		2501402	0					
ANR	2502214	PtrMemberAccess	core -> anal -> lineswidth		2501402	1					
ANR	2502215	PtrMemberAccess	core -> anal		2501402	0					
ANR	2502216	Identifier	core		2501402	0					
ANR	2502217	Identifier	anal		2501402	1					
ANR	2502218	Identifier	lineswidth		2501402	1					
ANR	2502219	ExpressionStatement	l = strlen ( str )	515:2:13210:13226	2501402	1	True				
ANR	2502220	AssignmentExpression	l = strlen ( str )		2501402	0		=			
ANR	2502221	Identifier	l		2501402	0					
ANR	2502222	CallExpression	strlen ( str )		2501402	1					
ANR	2502223	Callee	strlen		2501402	0					
ANR	2502224	Identifier	strlen		2501402	0					
ANR	2502225	ArgumentList	str		2501402	1					
ANR	2502226	Argument	str		2501402	0					
ANR	2502227	Identifier	str		2501402	0					
ANR	2502228	IfStatement	if ( l > lw )		2501402	2					
ANR	2502229	Condition	l > lw	516:6:13234:13239	2501402	0	True				
ANR	2502230	RelationalExpression	l > lw		2501402	0		>			
ANR	2502231	Identifier	l		2501402	0					
ANR	2502232	Identifier	lw		2501402	1					
ANR	2502233	CompoundStatement		110:14:3055:3055	2501402	1					
ANR	2502234	ExpressionStatement	"r_str_cpy ( str , str + l - lw )"	517:3:13247:13276	2501402	0	True				
ANR	2502235	CallExpression	"r_str_cpy ( str , str + l - lw )"		2501402	0					
ANR	2502236	Callee	r_str_cpy		2501402	0					
ANR	2502237	Identifier	r_str_cpy		2501402	0					
ANR	2502238	ArgumentList	str		2501402	1					
ANR	2502239	Argument	str		2501402	0					
ANR	2502240	Identifier	str		2501402	0					
ANR	2502241	Argument	str + l - lw		2501402	1					
ANR	2502242	AdditiveExpression	str + l - lw		2501402	0		+			
ANR	2502243	Identifier	str		2501402	0					
ANR	2502244	AdditiveExpression	l - lw		2501402	1		-			
ANR	2502245	Identifier	l		2501402	0					
ANR	2502246	Identifier	lw		2501402	1					
ANR	2502247	ExpressionStatement	"r_str_cpy ( col_str , col_str + l - lw )"	518:3:13281:13318	2501402	1	True				
ANR	2502248	CallExpression	"r_str_cpy ( col_str , col_str + l - lw )"		2501402	0					
ANR	2502249	Callee	r_str_cpy		2501402	0					
ANR	2502250	Identifier	r_str_cpy		2501402	0					
ANR	2502251	ArgumentList	col_str		2501402	1					
ANR	2502252	Argument	col_str		2501402	0					
ANR	2502253	Identifier	col_str		2501402	0					
ANR	2502254	Argument	col_str + l - lw		2501402	1					
ANR	2502255	AdditiveExpression	col_str + l - lw		2501402	0		+			
ANR	2502256	Identifier	col_str		2501402	0					
ANR	2502257	AdditiveExpression	l - lw		2501402	1		-			
ANR	2502258	Identifier	l		2501402	0					
ANR	2502259	Identifier	lw		2501402	1					
ANR	2502260	ElseStatement	else		2501402	0					
ANR	2502261	CompoundStatement		114:3:3147:3160	2501402	0					
ANR	2502262	IdentifierDeclStatement	char pfx [ 128 ] ;	520:3:13334:13347	2501402	0	True				
ANR	2502263	IdentifierDecl	pfx [ 128 ]		2501402	0					
ANR	2502264	IdentifierDeclType	char [ 128 ]		2501402	0					
ANR	2502265	Identifier	pfx		2501402	1					
ANR	2502266	PrimaryExpression	128		2501402	2					
ANR	2502267	ExpressionStatement	lw -= l	521:3:13352:13359	2501402	1	True				
ANR	2502268	AssignmentExpression	lw -= l		2501402	0		-=			
ANR	2502269	Identifier	lw		2501402	0					
ANR	2502270	Identifier	l		2501402	1					
ANR	2502271	ExpressionStatement	"memset ( pfx , ' ' , sizeof ( pfx ) )"	522:3:13364:13395	2501402	2	True				
ANR	2502272	CallExpression	"memset ( pfx , ' ' , sizeof ( pfx ) )"		2501402	0					
ANR	2502273	Callee	memset		2501402	0					
ANR	2502274	Identifier	memset		2501402	0					
ANR	2502275	ArgumentList	pfx		2501402	1					
ANR	2502276	Argument	pfx		2501402	0					
ANR	2502277	Identifier	pfx		2501402	0					
ANR	2502278	Argument	' '		2501402	1					
ANR	2502279	PrimaryExpression	' '		2501402	0					
ANR	2502280	Argument	sizeof ( pfx )		2501402	2					
ANR	2502281	SizeofExpression	sizeof ( pfx )		2501402	0					
ANR	2502282	Sizeof	sizeof		2501402	0					
ANR	2502283	SizeofOperand	pfx		2501402	1					
ANR	2502284	IfStatement	if ( lw >= sizeof ( pfx ) )		2501402	3					
ANR	2502285	Condition	lw >= sizeof ( pfx )	523:7:13404:13421	2501402	0	True				
ANR	2502286	RelationalExpression	lw >= sizeof ( pfx )		2501402	0		>=			
ANR	2502287	Identifier	lw		2501402	0					
ANR	2502288	SizeofExpression	sizeof ( pfx )		2501402	1					
ANR	2502289	Sizeof	sizeof		2501402	0					
ANR	2502290	SizeofOperand	pfx		2501402	1					
ANR	2502291	CompoundStatement		117:27:3237:3237	2501402	1					
ANR	2502292	ExpressionStatement	lw = sizeof ( pfx ) - 1	524:4:13430:13449	2501402	0	True				
ANR	2502293	AssignmentExpression	lw = sizeof ( pfx ) - 1		2501402	0		=			
ANR	2502294	Identifier	lw		2501402	0					
ANR	2502295	AdditiveExpression	sizeof ( pfx ) - 1		2501402	1		-			
ANR	2502296	SizeofExpression	sizeof ( pfx )		2501402	0					
ANR	2502297	Sizeof	sizeof		2501402	0					
ANR	2502298	SizeofOperand	pfx		2501402	1					
ANR	2502299	PrimaryExpression	1		2501402	1					
ANR	2502300	IfStatement	if ( lw > 0 )		2501402	4					
ANR	2502301	Condition	lw > 0	526:7:13463:13468	2501402	0	True				
ANR	2502302	RelationalExpression	lw > 0		2501402	0		>			
ANR	2502303	Identifier	lw		2501402	0					
ANR	2502304	PrimaryExpression	0		2501402	1					
ANR	2502305	CompoundStatement		120:15:3284:3284	2501402	1					
ANR	2502306	ExpressionStatement	pfx [ lw ] = 0	527:4:13477:13488	2501402	0	True				
ANR	2502307	AssignmentExpression	pfx [ lw ] = 0		2501402	0		=			
ANR	2502308	ArrayIndexing	pfx [ lw ]		2501402	0					
ANR	2502309	Identifier	pfx		2501402	0					
ANR	2502310	Identifier	lw		2501402	1					
ANR	2502311	PrimaryExpression	0		2501402	1					
ANR	2502312	ExpressionStatement	"str = r_str_prepend ( str , pfx )"	528:4:13494:13524	2501402	1	True				
ANR	2502313	AssignmentExpression	"str = r_str_prepend ( str , pfx )"		2501402	0		=			
ANR	2502314	Identifier	str		2501402	0					
ANR	2502315	CallExpression	"r_str_prepend ( str , pfx )"		2501402	1					
ANR	2502316	Callee	r_str_prepend		2501402	0					
ANR	2502317	Identifier	r_str_prepend		2501402	0					
ANR	2502318	ArgumentList	str		2501402	1					
ANR	2502319	Argument	str		2501402	0					
ANR	2502320	Identifier	str		2501402	0					
ANR	2502321	Argument	pfx		2501402	1					
ANR	2502322	Identifier	pfx		2501402	0					
ANR	2502323	ExpressionStatement	"col_str = r_str_prepend ( col_str , pfx )"	529:4:13530:13568	2501402	2	True				
ANR	2502324	AssignmentExpression	"col_str = r_str_prepend ( col_str , pfx )"		2501402	0		=			
ANR	2502325	Identifier	col_str		2501402	0					
ANR	2502326	CallExpression	"r_str_prepend ( col_str , pfx )"		2501402	1					
ANR	2502327	Callee	r_str_prepend		2501402	0					
ANR	2502328	Identifier	r_str_prepend		2501402	0					
ANR	2502329	ArgumentList	col_str		2501402	1					
ANR	2502330	Argument	col_str		2501402	0					
ANR	2502331	Identifier	col_str		2501402	0					
ANR	2502332	Argument	pfx		2501402	1					
ANR	2502333	Identifier	pfx		2501402	0					
ANR	2502334	IdentifierDeclStatement	const char prev_col = col_str [ strlen ( col_str ) - 1 ] ;	533:1:13583:13634	2501402	51	True				
ANR	2502335	IdentifierDecl	prev_col = col_str [ strlen ( col_str ) - 1 ]		2501402	0					
ANR	2502336	IdentifierDeclType	const char		2501402	0					
ANR	2502337	Identifier	prev_col		2501402	1					
ANR	2502338	AssignmentExpression	prev_col = col_str [ strlen ( col_str ) - 1 ]		2501402	2		=			
ANR	2502339	Identifier	prev_col		2501402	0					
ANR	2502340	ArrayIndexing	col_str [ strlen ( col_str ) - 1 ]		2501402	1					
ANR	2502341	Identifier	col_str		2501402	0					
ANR	2502342	AdditiveExpression	strlen ( col_str ) - 1		2501402	1		-			
ANR	2502343	CallExpression	strlen ( col_str )		2501402	0					
ANR	2502344	Callee	strlen		2501402	0					
ANR	2502345	Identifier	strlen		2501402	0					
ANR	2502346	ArgumentList	col_str		2501402	1					
ANR	2502347	Argument	col_str		2501402	0					
ANR	2502348	Identifier	col_str		2501402	0					
ANR	2502349	PrimaryExpression	1		2501402	1					
ANR	2502350	IdentifierDeclStatement	"const char * arr_col = prev_col == 't' ? ""tt "" : ""dd "" ;"	534:1:13637:13689	2501402	52	True				
ANR	2502351	IdentifierDecl	"* arr_col = prev_col == 't' ? ""tt "" : ""dd """		2501402	0					
ANR	2502352	IdentifierDeclType	const char *		2501402	0					
ANR	2502353	Identifier	arr_col		2501402	1					
ANR	2502354	AssignmentExpression	"* arr_col = prev_col == 't' ? ""tt "" : ""dd """		2501402	2		=			
ANR	2502355	Identifier	arr_col		2501402	0					
ANR	2502356	ConditionalExpression	"prev_col == 't' ? ""tt "" : ""dd """		2501402	1					
ANR	2502357	Condition	prev_col == 't'		2501402	0					
ANR	2502358	EqualityExpression	prev_col == 't'		2501402	0		==			
ANR	2502359	Identifier	prev_col		2501402	0					
ANR	2502360	PrimaryExpression	't'		2501402	1					
ANR	2502361	PrimaryExpression	"""tt """		2501402	1					
ANR	2502362	PrimaryExpression	"""dd """		2501402	2					
ANR	2502363	ExpressionStatement	"str = r_str_append ( str , ( dir == 1 ) ? ""-> "" : ( dir == 2 ) ? ""=< "" : ""   "" )"	535:1:13692:13767	2501402	53	True				
ANR	2502364	AssignmentExpression	"str = r_str_append ( str , ( dir == 1 ) ? ""-> "" : ( dir == 2 ) ? ""=< "" : ""   "" )"		2501402	0		=			
ANR	2502365	Identifier	str		2501402	0					
ANR	2502366	CallExpression	"r_str_append ( str , ( dir == 1 ) ? ""-> "" : ( dir == 2 ) ? ""=< "" : ""   "" )"		2501402	1					
ANR	2502367	Callee	r_str_append		2501402	0					
ANR	2502368	Identifier	r_str_append		2501402	0					
ANR	2502369	ArgumentList	str		2501402	1					
ANR	2502370	Argument	str		2501402	0					
ANR	2502371	Identifier	str		2501402	0					
ANR	2502372	Argument	"( dir == 1 ) ? ""-> "" : ( dir == 2 ) ? ""=< "" : ""   """		2501402	1					
ANR	2502373	ConditionalExpression	"( dir == 1 ) ? ""-> "" : ( dir == 2 ) ? ""=< "" : ""   """		2501402	0					
ANR	2502374	Condition	dir == 1		2501402	0					
ANR	2502375	EqualityExpression	dir == 1		2501402	0		==			
ANR	2502376	Identifier	dir		2501402	0					
ANR	2502377	PrimaryExpression	1		2501402	1					
ANR	2502378	PrimaryExpression	"""-> """		2501402	1					
ANR	2502379	ConditionalExpression	"( dir == 2 ) ? ""=< "" : ""   """		2501402	2					
ANR	2502380	Condition	dir == 2		2501402	0					
ANR	2502381	EqualityExpression	dir == 2		2501402	0		==			
ANR	2502382	Identifier	dir		2501402	0					
ANR	2502383	PrimaryExpression	2		2501402	1					
ANR	2502384	PrimaryExpression	"""=< """		2501402	1					
ANR	2502385	PrimaryExpression	"""   """		2501402	2					
ANR	2502386	ExpressionStatement	"col_str = r_str_append ( col_str , arr_col )"	537:1:13770:13811	2501402	54	True				
ANR	2502387	AssignmentExpression	"col_str = r_str_append ( col_str , arr_col )"		2501402	0		=			
ANR	2502388	Identifier	col_str		2501402	0					
ANR	2502389	CallExpression	"r_str_append ( col_str , arr_col )"		2501402	1					
ANR	2502390	Callee	r_str_append		2501402	0					
ANR	2502391	Identifier	r_str_append		2501402	0					
ANR	2502392	ArgumentList	col_str		2501402	1					
ANR	2502393	Argument	col_str		2501402	0					
ANR	2502394	Identifier	col_str		2501402	0					
ANR	2502395	Argument	arr_col		2501402	1					
ANR	2502396	Identifier	arr_col		2501402	0					
ANR	2502397	ExpressionStatement	r_list_free ( lvls )	539:1:13815:13833	2501402	55	True				
ANR	2502398	CallExpression	r_list_free ( lvls )		2501402	0					
ANR	2502399	Callee	r_list_free		2501402	0					
ANR	2502400	Identifier	r_list_free		2501402	0					
ANR	2502401	ArgumentList	lvls		2501402	1					
ANR	2502402	Argument	lvls		2501402	0					
ANR	2502403	Identifier	lvls		2501402	0					
ANR	2502404	IdentifierDeclStatement	RAnalRefStr * out = R_NEW0 ( RAnalRefStr ) ;	540:1:13836:13875	2501402	56	True				
ANR	2502405	IdentifierDecl	* out = R_NEW0 ( RAnalRefStr )		2501402	0					
ANR	2502406	IdentifierDeclType	RAnalRefStr *		2501402	0					
ANR	2502407	Identifier	out		2501402	1					
ANR	2502408	AssignmentExpression	* out = R_NEW0 ( RAnalRefStr )		2501402	2		=			
ANR	2502409	Identifier	out		2501402	0					
ANR	2502410	CallExpression	R_NEW0 ( RAnalRefStr )		2501402	1					
ANR	2502411	Callee	R_NEW0		2501402	0					
ANR	2502412	Identifier	R_NEW0		2501402	0					
ANR	2502413	ArgumentList	RAnalRefStr		2501402	1					
ANR	2502414	Argument	RAnalRefStr		2501402	0					
ANR	2502415	Identifier	RAnalRefStr		2501402	0					
ANR	2502416	ExpressionStatement	out -> cols = col_str	541:1:13878:13897	2501402	57	True				
ANR	2502417	AssignmentExpression	out -> cols = col_str		2501402	0		=			
ANR	2502418	PtrMemberAccess	out -> cols		2501402	0					
ANR	2502419	Identifier	out		2501402	0					
ANR	2502420	Identifier	cols		2501402	1					
ANR	2502421	Identifier	col_str		2501402	1					
ANR	2502422	ExpressionStatement	out -> str = str	542:1:13900:13914	2501402	58	True				
ANR	2502423	AssignmentExpression	out -> str = str		2501402	0		=			
ANR	2502424	PtrMemberAccess	out -> str		2501402	0					
ANR	2502425	Identifier	out		2501402	0					
ANR	2502426	Identifier	str		2501402	1					
ANR	2502427	Identifier	str		2501402	1					
ANR	2502428	ReturnStatement	return out ;	543:1:13917:13927	2501402	59	True				
ANR	2502429	Identifier	out		2501402	0					
ANR	2502430	ReturnType	R_API RAnalRefStr *		2501402	1					
ANR	2502431	Identifier	r_anal_reflines_str		2501402	2					
ANR	2502432	ParameterList	"void * _core , ut64 addr , int opts"		2501402	3					
ANR	2502433	Parameter	void * _core	407:39:10152:10162	2501402	0	True				
ANR	2502434	ParameterType	void *		2501402	0					
ANR	2502435	Identifier	_core		2501402	1					
ANR	2502436	Parameter	ut64 addr	407:52:10165:10173	2501402	1	True				
ANR	2502437	ParameterType	ut64		2501402	0					
ANR	2502438	Identifier	addr		2501402	1					
ANR	2502439	Parameter	int opts	407:63:10176:10183	2501402	2	True				
ANR	2502440	ParameterType	int		2501402	0					
ANR	2502441	Identifier	opts		2501402	1					
ANR	2502442	CFGEntryNode	ENTRY		2501402		True				
ANR	2502443	CFGExitNode	EXIT		2501402		True				
ANR	2502444	CFGErrorNode	ERROR		2501402		True				
ANR	2502445	Symbol	col		2501402						
ANR	2502446	Symbol	lw		2501402						
ANR	2502447	Symbol	R_ANAL_REFLINE_TYPE_WIDE		2501402						
ANR	2502448	Symbol	dir		2501402						
ANR	2502449	Symbol	* col_str		2501402						
ANR	2502450	Symbol	refline_kept		2501402						
ANR	2502451	Symbol	strlen		2501402						
ANR	2502452	Symbol	ref		2501402						
ANR	2502453	Symbol	core -> anal -> lineswidth		2501402						
ANR	2502454	Symbol	opts		2501402						
ANR	2502455	Symbol	corner		2501402						
ANR	2502456	Symbol	_core		2501402						
ANR	2502457	Symbol	arr_col		2501402						
ANR	2502458	Symbol	r_buf_new		2501402						
ANR	2502459	Symbol	cons		2501402						
ANR	2502460	Symbol	NULL		2501402						
ANR	2502461	Symbol	lvls		2501402						
ANR	2502462	Symbol	middle_before		2501402						
ANR	2502463	Symbol	RAnalRefStr		2501402						
ANR	2502464	Symbol	* * core -> cons		2501402						
ANR	2502465	Symbol	out -> cols		2501402						
ANR	2502466	Symbol	iter		2501402						
ANR	2502467	Symbol	R_ANAL_REFLINE_TYPE_MIDDLE_AFTER		2501402						
ANR	2502468	Symbol	in_refline		2501402						
ANR	2502469	Symbol	ch_pos		2501402						
ANR	2502470	Symbol	* pfx		2501402						
ANR	2502471	Symbol	str		2501402						
ANR	2502472	Symbol	core		2501402						
ANR	2502473	Symbol	* * * core		2501402						
ANR	2502474	Symbol	R_NEW0		2501402						
ANR	2502475	Symbol	anal		2501402						
ANR	2502476	Symbol	* out		2501402						
ANR	2502477	Symbol	anal -> reflines		2501402						
ANR	2502478	Symbol	core -> cons -> context		2501402						
ANR	2502479	Symbol	ref -> to		2501402						
ANR	2502480	Symbol	r_str_append		2501402						
ANR	2502481	Symbol	pfx		2501402						
ANR	2502482	Symbol	* core -> cons		2501402						
ANR	2502483	Symbol	* core		2501402						
ANR	2502484	Symbol	get_corner_char		2501402						
ANR	2502485	Symbol	core -> anal		2501402						
ANR	2502486	Symbol	out		2501402						
ANR	2502487	Symbol	* anal		2501402						
ANR	2502488	Symbol	* lw		2501402						
ANR	2502489	Symbol	core -> cons		2501402						
ANR	2502490	Symbol	pos		2501402						
ANR	2502491	Symbol	* core -> cons -> context		2501402						
ANR	2502492	Symbol	r_buf_to_string		2501402						
ANR	2502493	Symbol	addr		2501402						
ANR	2502494	Symbol	R_ANAL_REFLINE_TYPE_MIDDLE_BEFORE		2501402						
ANR	2502495	Symbol	* * core		2501402						
ANR	2502496	Symbol	ref -> from		2501402						
ANR	2502497	Symbol	middle_after		2501402						
ANR	2502498	Symbol	b		2501402						
ANR	2502499	Symbol	c		2501402						
ANR	2502500	Symbol	col_str		2501402						
ANR	2502501	Symbol	wide		2501402						
ANR	2502502	Symbol	ch		2501402						
ANR	2502503	Symbol	out -> str		2501402						
ANR	2502504	Symbol	core -> cons -> context -> breaked		2501402						
ANR	2502505	Symbol	r_str_prepend		2501402						
ANR	2502506	Symbol	l		2501402						
ANR	2502507	Symbol	ch_col		2501402						
ANR	2502508	Symbol	cmp_by_ref_lvl		2501402						
ANR	2502509	Symbol	* core -> anal		2501402						
ANR	2502510	Symbol	* strlen		2501402						
ANR	2502511	Symbol	max_level		2501402						
ANR	2502512	Symbol	ref -> level		2501402						
ANR	2502513	Symbol	prev_col		2501402						
ANR	2502514	Symbol	* ref		2501402						
ANR	2502515	Symbol	r_list_new		2501402						
