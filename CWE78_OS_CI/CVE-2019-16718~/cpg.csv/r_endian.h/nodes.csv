command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5644596	File	data/converged/CVE-2019-16718~_radare2/r_endian.h								
ANR	5644597	Function	r_read_ble8	10:0:136:240							
ANR	5644598	FunctionDef	r_read_ble8 (const void * src)		5644597	0					
ANR	5644599	CompoundStatement		10:47:183:240	5644597	0					
ANR	5644600	IfStatement	if ( ! src )		5644597	0					
ANR	5644601	Condition	! src	11:5:190:193	5644597	0	True				
ANR	5644602	UnaryOperationExpression	! src		5644597	0					
ANR	5644603	UnaryOperator	!		5644597	0					
ANR	5644604	Identifier	src		5644597	1					
ANR	5644605	CompoundStatement		2:11:12:12	5644597	1					
ANR	5644606	ReturnStatement	return UT8_MAX ;	12:2:200:214	5644597	0	True				
ANR	5644607	Identifier	UT8_MAX		5644597	0					
ANR	5644608	ReturnStatement	return * ( ut8 * ) src ;	14:1:220:238	5644597	1	True				
ANR	5644609	UnaryOperationExpression	* ( ut8 * ) src		5644597	0					
ANR	5644610	UnaryOperator	*		5644597	0					
ANR	5644611	CastExpression	( ut8 * ) src		5644597	1					
ANR	5644612	CastTarget	ut8 *		5644597	0					
ANR	5644613	Identifier	src		5644597	1					
ANR	5644614	ReturnType	static inline ut8		5644597	1					
ANR	5644615	Identifier	r_read_ble8		5644597	2					
ANR	5644616	ParameterList	const void * src		5644597	3					
ANR	5644617	Parameter	const void * src	10:30:166:180	5644597	0	True				
ANR	5644618	ParameterType	const void *		5644597	0					
ANR	5644619	Identifier	src		5644597	1					
ANR	5644620	CFGEntryNode	ENTRY		5644597		True				
ANR	5644621	CFGExitNode	EXIT		5644597		True				
ANR	5644622	Symbol	UT8_MAX		5644597						
ANR	5644623	Symbol	src		5644597						
ANR	5644624	Symbol	* ( ut8 * ) src		5644597						
ANR	5644625	Symbol	* src		5644597						
ANR	5644626	Function	r_read_at_ble8	17:0:243:360							
ANR	5644627	FunctionDef	"r_read_at_ble8 (const void * src , size_t offset)"		5644626	0					
ANR	5644628	CompoundStatement		17:65:308:360	5644626	0					
ANR	5644629	ReturnStatement	return r_read_ble8 ( ( ( const ut8 * ) src ) + offset ) ;	18:1:311:358	5644626	0	True				
ANR	5644630	CallExpression	r_read_ble8 ( ( ( const ut8 * ) src ) + offset )		5644626	0					
ANR	5644631	Callee	r_read_ble8		5644626	0					
ANR	5644632	Identifier	r_read_ble8		5644626	0					
ANR	5644633	ArgumentList	( ( const ut8 * ) src ) + offset		5644626	1					
ANR	5644634	Argument	( ( const ut8 * ) src ) + offset		5644626	0					
ANR	5644635	AdditiveExpression	( ( const ut8 * ) src ) + offset		5644626	0		+			
ANR	5644636	CastExpression	( const ut8 * ) src		5644626	0					
ANR	5644637	CastTarget	const ut8 *		5644626	0					
ANR	5644638	Identifier	src		5644626	1					
ANR	5644639	Identifier	offset		5644626	1					
ANR	5644640	ReturnType	static inline ut8		5644626	1					
ANR	5644641	Identifier	r_read_at_ble8		5644626	2					
ANR	5644642	ParameterList	"const void * src , size_t offset"		5644626	3					
ANR	5644643	Parameter	const void * src	17:33:276:290	5644626	0	True				
ANR	5644644	ParameterType	const void *		5644626	0					
ANR	5644645	Identifier	src		5644626	1					
ANR	5644646	Parameter	size_t offset	17:50:293:305	5644626	1	True				
ANR	5644647	ParameterType	size_t		5644626	0					
ANR	5644648	Identifier	offset		5644626	1					
ANR	5644649	CFGEntryNode	ENTRY		5644626		True				
ANR	5644650	CFGExitNode	EXIT		5644626		True				
ANR	5644651	Symbol	offset		5644626						
ANR	5644652	Symbol	src		5644626						
ANR	5644653	Symbol	r_read_ble8		5644626						
ANR	5644654	Function	r_write_ble8	21:0:363:439							
ANR	5644655	FunctionDef	"r_write_ble8 (void * dest , ut8 val)"		5644654	0					
ANR	5644656	CompoundStatement		21:53:416:439	5644654	0					
ANR	5644657	ExpressionStatement	* ( ut8 * ) dest = val	22:1:419:437	5644654	0	True				
ANR	5644658	AssignmentExpression	* ( ut8 * ) dest = val		5644654	0		=			
ANR	5644659	UnaryOperationExpression	* ( ut8 * ) dest		5644654	0					
ANR	5644660	UnaryOperator	*		5644654	0					
ANR	5644661	CastExpression	( ut8 * ) dest		5644654	1					
ANR	5644662	CastTarget	ut8 *		5644654	0					
ANR	5644663	Identifier	dest		5644654	1					
ANR	5644664	Identifier	val		5644654	1					
ANR	5644665	ReturnType	static inline void		5644654	1					
ANR	5644666	Identifier	r_write_ble8		5644654	2					
ANR	5644667	ParameterList	"void * dest , ut8 val"		5644654	3					
ANR	5644668	Parameter	void * dest	21:32:395:404	5644654	0	True				
ANR	5644669	ParameterType	void *		5644654	0					
ANR	5644670	Identifier	dest		5644654	1					
ANR	5644671	Parameter	ut8 val	21:44:407:413	5644654	1	True				
ANR	5644672	ParameterType	ut8		5644654	0					
ANR	5644673	Identifier	val		5644654	1					
ANR	5644674	CFGEntryNode	ENTRY		5644654		True				
ANR	5644675	CFGExitNode	EXIT		5644654		True				
ANR	5644676	Symbol	val		5644654						
ANR	5644677	Symbol	* ( ut8 * ) dest		5644654						
ANR	5644678	Symbol	* dest		5644654						
ANR	5644679	Symbol	dest		5644654						
ANR	5644680	Function	r_write_at_ble8	25:0:442:570							
ANR	5644681	FunctionDef	"r_write_at_ble8 (void * dest , ut8 val , size_t offset)"		5644680	0					
ANR	5644682	CompoundStatement		25:71:513:570	5644680	0					
ANR	5644683	IdentifierDeclStatement	ut8 * d = ( ut8 * ) dest + offset ;	26:1:516:544	5644680	0	True				
ANR	5644684	IdentifierDecl	* d = ( ut8 * ) dest + offset		5644680	0					
ANR	5644685	IdentifierDeclType	ut8 *		5644680	0					
ANR	5644686	Identifier	d		5644680	1					
ANR	5644687	AssignmentExpression	* d = ( ut8 * ) dest + offset		5644680	2		=			
ANR	5644688	Identifier	d		5644680	0					
ANR	5644689	AdditiveExpression	( ut8 * ) dest + offset		5644680	1		+			
ANR	5644690	CastExpression	( ut8 * ) dest		5644680	0					
ANR	5644691	CastTarget	ut8 *		5644680	0					
ANR	5644692	Identifier	dest		5644680	1					
ANR	5644693	Identifier	offset		5644680	1					
ANR	5644694	ExpressionStatement	"r_write_ble8 ( d , val )"	27:1:547:568	5644680	1	True				
ANR	5644695	CallExpression	"r_write_ble8 ( d , val )"		5644680	0					
ANR	5644696	Callee	r_write_ble8		5644680	0					
ANR	5644697	Identifier	r_write_ble8		5644680	0					
ANR	5644698	ArgumentList	d		5644680	1					
ANR	5644699	Argument	d		5644680	0					
ANR	5644700	Identifier	d		5644680	0					
ANR	5644701	Argument	val		5644680	1					
ANR	5644702	Identifier	val		5644680	0					
ANR	5644703	ReturnType	static inline void		5644680	1					
ANR	5644704	Identifier	r_write_at_ble8		5644680	2					
ANR	5644705	ParameterList	"void * dest , ut8 val , size_t offset"		5644680	3					
ANR	5644706	Parameter	void * dest	25:35:477:486	5644680	0	True				
ANR	5644707	ParameterType	void *		5644680	0					
ANR	5644708	Identifier	dest		5644680	1					
ANR	5644709	Parameter	ut8 val	25:47:489:495	5644680	1	True				
ANR	5644710	ParameterType	ut8		5644680	0					
ANR	5644711	Identifier	val		5644680	1					
ANR	5644712	Parameter	size_t offset	25:56:498:510	5644680	2	True				
ANR	5644713	ParameterType	size_t		5644680	0					
ANR	5644714	Identifier	offset		5644680	1					
ANR	5644715	CFGEntryNode	ENTRY		5644680		True				
ANR	5644716	CFGExitNode	EXIT		5644680		True				
ANR	5644717	Symbol	val		5644680						
ANR	5644718	Symbol	offset		5644680						
ANR	5644719	Symbol	d		5644680						
ANR	5644720	Symbol	dest		5644680						
ANR	5644721	Function	r_read_be8	32:0:602:677							
ANR	5644722	FunctionDef	r_read_be8 (const void * src)		5644721	0					
ANR	5644723	CompoundStatement		32:46:648:677	5644721	0					
ANR	5644724	ReturnStatement	return r_read_ble8 ( src ) ;	33:1:651:675	5644721	0	True				
ANR	5644725	CallExpression	r_read_ble8 ( src )		5644721	0					
ANR	5644726	Callee	r_read_ble8		5644721	0					
ANR	5644727	Identifier	r_read_ble8		5644721	0					
ANR	5644728	ArgumentList	src		5644721	1					
ANR	5644729	Argument	src		5644721	0					
ANR	5644730	Identifier	src		5644721	0					
ANR	5644731	ReturnType	static inline ut8		5644721	1					
ANR	5644732	Identifier	r_read_be8		5644721	2					
ANR	5644733	ParameterList	const void * src		5644721	3					
ANR	5644734	Parameter	const void * src	32:29:631:645	5644721	0	True				
ANR	5644735	ParameterType	const void *		5644721	0					
ANR	5644736	Identifier	src		5644721	1					
ANR	5644737	CFGEntryNode	ENTRY		5644721		True				
ANR	5644738	CFGExitNode	EXIT		5644721		True				
ANR	5644739	Symbol	src		5644721						
ANR	5644740	Symbol	r_read_ble8		5644721						
ANR	5644741	Function	r_read_at_be8	36:0:680:784							
ANR	5644742	FunctionDef	"r_read_at_be8 (const void * src , size_t offset)"		5644741	0					
ANR	5644743	CompoundStatement		36:64:744:784	5644741	0					
ANR	5644744	ReturnStatement	"return r_read_at_ble8 ( src , offset ) ;"	37:1:747:782	5644741	0	True				
ANR	5644745	CallExpression	"r_read_at_ble8 ( src , offset )"		5644741	0					
ANR	5644746	Callee	r_read_at_ble8		5644741	0					
ANR	5644747	Identifier	r_read_at_ble8		5644741	0					
ANR	5644748	ArgumentList	src		5644741	1					
ANR	5644749	Argument	src		5644741	0					
ANR	5644750	Identifier	src		5644741	0					
ANR	5644751	Argument	offset		5644741	1					
ANR	5644752	Identifier	offset		5644741	0					
ANR	5644753	ReturnType	static inline ut8		5644741	1					
ANR	5644754	Identifier	r_read_at_be8		5644741	2					
ANR	5644755	ParameterList	"const void * src , size_t offset"		5644741	3					
ANR	5644756	Parameter	const void * src	36:32:712:726	5644741	0	True				
ANR	5644757	ParameterType	const void *		5644741	0					
ANR	5644758	Identifier	src		5644741	1					
ANR	5644759	Parameter	size_t offset	36:49:729:741	5644741	1	True				
ANR	5644760	ParameterType	size_t		5644741	0					
ANR	5644761	Identifier	offset		5644741	1					
ANR	5644762	CFGEntryNode	ENTRY		5644741		True				
ANR	5644763	CFGExitNode	EXIT		5644741		True				
ANR	5644764	Symbol	r_read_at_ble8		5644741						
ANR	5644765	Symbol	offset		5644741						
ANR	5644766	Symbol	src		5644741						
ANR	5644767	Function	r_write_be8	40:0:787:868							
ANR	5644768	FunctionDef	"r_write_be8 (void * dest , ut8 val)"		5644767	0					
ANR	5644769	CompoundStatement		40:52:839:868	5644767	0					
ANR	5644770	ExpressionStatement	"r_write_ble8 ( dest , val )"	41:1:842:866	5644767	0	True				
ANR	5644771	CallExpression	"r_write_ble8 ( dest , val )"		5644767	0					
ANR	5644772	Callee	r_write_ble8		5644767	0					
ANR	5644773	Identifier	r_write_ble8		5644767	0					
ANR	5644774	ArgumentList	dest		5644767	1					
ANR	5644775	Argument	dest		5644767	0					
ANR	5644776	Identifier	dest		5644767	0					
ANR	5644777	Argument	val		5644767	1					
ANR	5644778	Identifier	val		5644767	0					
ANR	5644779	ReturnType	static inline void		5644767	1					
ANR	5644780	Identifier	r_write_be8		5644767	2					
ANR	5644781	ParameterList	"void * dest , ut8 val"		5644767	3					
ANR	5644782	Parameter	void * dest	40:31:818:827	5644767	0	True				
ANR	5644783	ParameterType	void *		5644767	0					
ANR	5644784	Identifier	dest		5644767	1					
ANR	5644785	Parameter	ut8 val	40:43:830:836	5644767	1	True				
ANR	5644786	ParameterType	ut8		5644767	0					
ANR	5644787	Identifier	val		5644767	1					
ANR	5644788	CFGEntryNode	ENTRY		5644767		True				
ANR	5644789	CFGExitNode	EXIT		5644767		True				
ANR	5644790	Symbol	val		5644767						
ANR	5644791	Symbol	dest		5644767						
ANR	5644792	Function	r_write_at_be8	44:0:871:981							
ANR	5644793	FunctionDef	"r_write_at_be8 (void * dest , ut8 val , size_t offset)"		5644792	0					
ANR	5644794	CompoundStatement		44:70:941:981	5644792	0					
ANR	5644795	ExpressionStatement	"r_write_at_ble8 ( dest , val , offset )"	45:1:944:979	5644792	0	True				
ANR	5644796	CallExpression	"r_write_at_ble8 ( dest , val , offset )"		5644792	0					
ANR	5644797	Callee	r_write_at_ble8		5644792	0					
ANR	5644798	Identifier	r_write_at_ble8		5644792	0					
ANR	5644799	ArgumentList	dest		5644792	1					
ANR	5644800	Argument	dest		5644792	0					
ANR	5644801	Identifier	dest		5644792	0					
ANR	5644802	Argument	val		5644792	1					
ANR	5644803	Identifier	val		5644792	0					
ANR	5644804	Argument	offset		5644792	2					
ANR	5644805	Identifier	offset		5644792	0					
ANR	5644806	ReturnType	static inline void		5644792	1					
ANR	5644807	Identifier	r_write_at_be8		5644792	2					
ANR	5644808	ParameterList	"void * dest , ut8 val , size_t offset"		5644792	3					
ANR	5644809	Parameter	void * dest	44:34:905:914	5644792	0	True				
ANR	5644810	ParameterType	void *		5644792	0					
ANR	5644811	Identifier	dest		5644792	1					
ANR	5644812	Parameter	ut8 val	44:46:917:923	5644792	1	True				
ANR	5644813	ParameterType	ut8		5644792	0					
ANR	5644814	Identifier	val		5644792	1					
ANR	5644815	Parameter	size_t offset	44:55:926:938	5644792	2	True				
ANR	5644816	ParameterType	size_t		5644792	0					
ANR	5644817	Identifier	offset		5644792	1					
ANR	5644818	CFGEntryNode	ENTRY		5644792		True				
ANR	5644819	CFGExitNode	EXIT		5644792		True				
ANR	5644820	Symbol	val		5644792						
ANR	5644821	Symbol	offset		5644792						
ANR	5644822	Symbol	dest		5644792						
ANR	5644823	Function	r_read_be16	48:0:984:1118							
ANR	5644824	FunctionDef	r_read_be16 (const void * src)		5644823	0					
ANR	5644825	CompoundStatement		48:48:1032:1118	5644823	0					
ANR	5644826	IdentifierDeclStatement	const ut8 * s = ( const ut8 * ) src ;	49:1:1035:1065	5644823	0	True				
ANR	5644827	IdentifierDecl	* s = ( const ut8 * ) src		5644823	0					
ANR	5644828	IdentifierDeclType	const ut8 *		5644823	0					
ANR	5644829	Identifier	s		5644823	1					
ANR	5644830	AssignmentExpression	* s = ( const ut8 * ) src		5644823	2		=			
ANR	5644831	Identifier	s		5644823	0					
ANR	5644832	CastExpression	( const ut8 * ) src		5644823	1					
ANR	5644833	CastTarget	const ut8 *		5644823	0					
ANR	5644834	Identifier	src		5644823	1					
ANR	5644835	ReturnStatement	return ( ( ( ut16 ) s [ 0 ] ) << 8 ) | ( ( ( ut16 ) s [ 1 ] ) << 0 ) ;	50:1:1068:1116	5644823	1	True				
ANR	5644836	InclusiveOrExpression	( ( ( ut16 ) s [ 0 ] ) << 8 ) | ( ( ( ut16 ) s [ 1 ] ) << 0 )		5644823	0		|			
ANR	5644837	ShiftExpression	( ( ut16 ) s [ 0 ] ) << 8		5644823	0		<<			
ANR	5644838	CastExpression	( ut16 ) s [ 0 ]		5644823	0					
ANR	5644839	CastTarget	ut16		5644823	0					
ANR	5644840	ArrayIndexing	s [ 0 ]		5644823	1					
ANR	5644841	Identifier	s		5644823	0					
ANR	5644842	PrimaryExpression	0		5644823	1					
ANR	5644843	PrimaryExpression	8		5644823	1					
ANR	5644844	ShiftExpression	( ( ut16 ) s [ 1 ] ) << 0		5644823	1		<<			
ANR	5644845	CastExpression	( ut16 ) s [ 1 ]		5644823	0					
ANR	5644846	CastTarget	ut16		5644823	0					
ANR	5644847	ArrayIndexing	s [ 1 ]		5644823	1					
ANR	5644848	Identifier	s		5644823	0					
ANR	5644849	PrimaryExpression	1		5644823	1					
ANR	5644850	PrimaryExpression	0		5644823	1					
ANR	5644851	ReturnType	static inline ut16		5644823	1					
ANR	5644852	Identifier	r_read_be16		5644823	2					
ANR	5644853	ParameterList	const void * src		5644823	3					
ANR	5644854	Parameter	const void * src	48:31:1015:1029	5644823	0	True				
ANR	5644855	ParameterType	const void *		5644823	0					
ANR	5644856	Identifier	src		5644823	1					
ANR	5644857	CFGEntryNode	ENTRY		5644823		True				
ANR	5644858	CFGExitNode	EXIT		5644823		True				
ANR	5644859	Symbol	s		5644823						
ANR	5644860	Symbol	src		5644823						
ANR	5644861	Symbol	* s		5644823						
ANR	5644862	Function	r_read_at_be16	53:0:1121:1256							
ANR	5644863	FunctionDef	"r_read_at_be16 (const void * src , size_t offset)"		5644862	0					
ANR	5644864	CompoundStatement		53:66:1187:1256	5644862	0					
ANR	5644865	IdentifierDeclStatement	const ut8 * s = ( const ut8 * ) src + offset ;	54:1:1190:1229	5644862	0	True				
ANR	5644866	IdentifierDecl	* s = ( const ut8 * ) src + offset		5644862	0					
ANR	5644867	IdentifierDeclType	const ut8 *		5644862	0					
ANR	5644868	Identifier	s		5644862	1					
ANR	5644869	AssignmentExpression	* s = ( const ut8 * ) src + offset		5644862	2		=			
ANR	5644870	Identifier	s		5644862	0					
ANR	5644871	AdditiveExpression	( const ut8 * ) src + offset		5644862	1		+			
ANR	5644872	CastExpression	( const ut8 * ) src		5644862	0					
ANR	5644873	CastTarget	const ut8 *		5644862	0					
ANR	5644874	Identifier	src		5644862	1					
ANR	5644875	Identifier	offset		5644862	1					
ANR	5644876	ReturnStatement	return r_read_be16 ( s ) ;	55:1:1232:1254	5644862	1	True				
ANR	5644877	CallExpression	r_read_be16 ( s )		5644862	0					
ANR	5644878	Callee	r_read_be16		5644862	0					
ANR	5644879	Identifier	r_read_be16		5644862	0					
ANR	5644880	ArgumentList	s		5644862	1					
ANR	5644881	Argument	s		5644862	0					
ANR	5644882	Identifier	s		5644862	0					
ANR	5644883	ReturnType	static inline ut16		5644862	1					
ANR	5644884	Identifier	r_read_at_be16		5644862	2					
ANR	5644885	ParameterList	"const void * src , size_t offset"		5644862	3					
ANR	5644886	Parameter	const void * src	53:34:1155:1169	5644862	0	True				
ANR	5644887	ParameterType	const void *		5644862	0					
ANR	5644888	Identifier	src		5644862	1					
ANR	5644889	Parameter	size_t offset	53:51:1172:1184	5644862	1	True				
ANR	5644890	ParameterType	size_t		5644862	0					
ANR	5644891	Identifier	offset		5644862	1					
ANR	5644892	CFGEntryNode	ENTRY		5644862		True				
ANR	5644893	CFGExitNode	EXIT		5644862		True				
ANR	5644894	Symbol	s		5644862						
ANR	5644895	Symbol	offset		5644862						
ANR	5644896	Symbol	src		5644862						
ANR	5644897	Symbol	r_read_be16		5644862						
ANR	5644898	Function	r_write_be16	58:0:1259:1394							
ANR	5644899	FunctionDef	"r_write_be16 (void * dest , ut16 val)"		5644898	0					
ANR	5644900	CompoundStatement		58:54:1313:1394	5644898	0					
ANR	5644901	ExpressionStatement	"r_write_be8 ( dest , val >> 8 )"	59:1:1316:1344	5644898	0	True				
ANR	5644902	CallExpression	"r_write_be8 ( dest , val >> 8 )"		5644898	0					
ANR	5644903	Callee	r_write_be8		5644898	0					
ANR	5644904	Identifier	r_write_be8		5644898	0					
ANR	5644905	ArgumentList	dest		5644898	1					
ANR	5644906	Argument	dest		5644898	0					
ANR	5644907	Identifier	dest		5644898	0					
ANR	5644908	Argument	val >> 8		5644898	1					
ANR	5644909	ShiftExpression	val >> 8		5644898	0		>>			
ANR	5644910	Identifier	val		5644898	0					
ANR	5644911	PrimaryExpression	8		5644898	1					
ANR	5644912	ExpressionStatement	"r_write_at_be8 ( dest , ( ut8 ) val , sizeof ( ut8 ) )"	60:1:1347:1392	5644898	1	True				
ANR	5644913	CallExpression	"r_write_at_be8 ( dest , ( ut8 ) val , sizeof ( ut8 ) )"		5644898	0					
ANR	5644914	Callee	r_write_at_be8		5644898	0					
ANR	5644915	Identifier	r_write_at_be8		5644898	0					
ANR	5644916	ArgumentList	dest		5644898	1					
ANR	5644917	Argument	dest		5644898	0					
ANR	5644918	Identifier	dest		5644898	0					
ANR	5644919	Argument	( ut8 ) val		5644898	1					
ANR	5644920	CastExpression	( ut8 ) val		5644898	0					
ANR	5644921	CastTarget	ut8		5644898	0					
ANR	5644922	Identifier	val		5644898	1					
ANR	5644923	Argument	sizeof ( ut8 )		5644898	2					
ANR	5644924	SizeofExpression	sizeof ( ut8 )		5644898	0					
ANR	5644925	Sizeof	sizeof		5644898	0					
ANR	5644926	SizeofOperand	ut8		5644898	1					
ANR	5644927	ReturnType	static inline void		5644898	1					
ANR	5644928	Identifier	r_write_be16		5644898	2					
ANR	5644929	ParameterList	"void * dest , ut16 val"		5644898	3					
ANR	5644930	Parameter	void * dest	58:32:1291:1300	5644898	0	True				
ANR	5644931	ParameterType	void *		5644898	0					
ANR	5644932	Identifier	dest		5644898	1					
ANR	5644933	Parameter	ut16 val	58:44:1303:1310	5644898	1	True				
ANR	5644934	ParameterType	ut16		5644898	0					
ANR	5644935	Identifier	val		5644898	1					
ANR	5644936	CFGEntryNode	ENTRY		5644898		True				
ANR	5644937	CFGExitNode	EXIT		5644898		True				
ANR	5644938	Symbol	val		5644898						
ANR	5644939	Symbol	dest		5644898						
ANR	5644940	Function	r_write_at_be16	63:0:1397:1526							
ANR	5644941	FunctionDef	"r_write_at_be16 (void * dest , ut16 val , size_t offset)"		5644940	0					
ANR	5644942	CompoundStatement		63:72:1469:1526	5644940	0					
ANR	5644943	IdentifierDeclStatement	ut8 * d = ( ut8 * ) dest + offset ;	64:1:1472:1500	5644940	0	True				
ANR	5644944	IdentifierDecl	* d = ( ut8 * ) dest + offset		5644940	0					
ANR	5644945	IdentifierDeclType	ut8 *		5644940	0					
ANR	5644946	Identifier	d		5644940	1					
ANR	5644947	AssignmentExpression	* d = ( ut8 * ) dest + offset		5644940	2		=			
ANR	5644948	Identifier	d		5644940	0					
ANR	5644949	AdditiveExpression	( ut8 * ) dest + offset		5644940	1		+			
ANR	5644950	CastExpression	( ut8 * ) dest		5644940	0					
ANR	5644951	CastTarget	ut8 *		5644940	0					
ANR	5644952	Identifier	dest		5644940	1					
ANR	5644953	Identifier	offset		5644940	1					
ANR	5644954	ExpressionStatement	"r_write_be16 ( d , val )"	65:1:1503:1524	5644940	1	True				
ANR	5644955	CallExpression	"r_write_be16 ( d , val )"		5644940	0					
ANR	5644956	Callee	r_write_be16		5644940	0					
ANR	5644957	Identifier	r_write_be16		5644940	0					
ANR	5644958	ArgumentList	d		5644940	1					
ANR	5644959	Argument	d		5644940	0					
ANR	5644960	Identifier	d		5644940	0					
ANR	5644961	Argument	val		5644940	1					
ANR	5644962	Identifier	val		5644940	0					
ANR	5644963	ReturnType	static inline void		5644940	1					
ANR	5644964	Identifier	r_write_at_be16		5644940	2					
ANR	5644965	ParameterList	"void * dest , ut16 val , size_t offset"		5644940	3					
ANR	5644966	Parameter	void * dest	63:35:1432:1441	5644940	0	True				
ANR	5644967	ParameterType	void *		5644940	0					
ANR	5644968	Identifier	dest		5644940	1					
ANR	5644969	Parameter	ut16 val	63:47:1444:1451	5644940	1	True				
ANR	5644970	ParameterType	ut16		5644940	0					
ANR	5644971	Identifier	val		5644940	1					
ANR	5644972	Parameter	size_t offset	63:57:1454:1466	5644940	2	True				
ANR	5644973	ParameterType	size_t		5644940	0					
ANR	5644974	Identifier	offset		5644940	1					
ANR	5644975	CFGEntryNode	ENTRY		5644940		True				
ANR	5644976	CFGExitNode	EXIT		5644940		True				
ANR	5644977	Symbol	val		5644940						
ANR	5644978	Symbol	offset		5644940						
ANR	5644979	Symbol	d		5644940						
ANR	5644980	Symbol	dest		5644940						
ANR	5644981	Function	r_read_be32	68:0:1529:1711							
ANR	5644982	FunctionDef	r_read_be32 (const void * src)		5644981	0					
ANR	5644983	CompoundStatement		68:48:1577:1711	5644981	0					
ANR	5644984	IdentifierDeclStatement	const ut8 * s = ( const ut8 * ) src ;	69:1:1580:1610	5644981	0	True				
ANR	5644985	IdentifierDecl	* s = ( const ut8 * ) src		5644981	0					
ANR	5644986	IdentifierDeclType	const ut8 *		5644981	0					
ANR	5644987	Identifier	s		5644981	1					
ANR	5644988	AssignmentExpression	* s = ( const ut8 * ) src		5644981	2		=			
ANR	5644989	Identifier	s		5644981	0					
ANR	5644990	CastExpression	( const ut8 * ) src		5644981	1					
ANR	5644991	CastTarget	const ut8 *		5644981	0					
ANR	5644992	Identifier	src		5644981	1					
ANR	5644993	ReturnStatement	return ( ( ( ut32 ) s [ 0 ] ) << 24 ) | ( ( ( ut32 ) s [ 1 ] ) << 16 ) | ( ( ( ut32 ) s [ 2 ] ) << 8 ) | ( ( ( ut32 ) s [ 3 ] ) << 0 ) ;	70:1:1613:1709	5644981	1	True				
ANR	5644994	InclusiveOrExpression	( ( ( ut32 ) s [ 0 ] ) << 24 ) | ( ( ( ut32 ) s [ 1 ] ) << 16 ) | ( ( ( ut32 ) s [ 2 ] ) << 8 ) | ( ( ( ut32 ) s [ 3 ] ) << 0 )		5644981	0		|			
ANR	5644995	ShiftExpression	( ( ut32 ) s [ 0 ] ) << 24		5644981	0		<<			
ANR	5644996	CastExpression	( ut32 ) s [ 0 ]		5644981	0					
ANR	5644997	CastTarget	ut32		5644981	0					
ANR	5644998	ArrayIndexing	s [ 0 ]		5644981	1					
ANR	5644999	Identifier	s		5644981	0					
ANR	5645000	PrimaryExpression	0		5644981	1					
ANR	5645001	PrimaryExpression	24		5644981	1					
ANR	5645002	InclusiveOrExpression	( ( ( ut32 ) s [ 1 ] ) << 16 ) | ( ( ( ut32 ) s [ 2 ] ) << 8 ) | ( ( ( ut32 ) s [ 3 ] ) << 0 )		5644981	1		|			
ANR	5645003	ShiftExpression	( ( ut32 ) s [ 1 ] ) << 16		5644981	0		<<			
ANR	5645004	CastExpression	( ut32 ) s [ 1 ]		5644981	0					
ANR	5645005	CastTarget	ut32		5644981	0					
ANR	5645006	ArrayIndexing	s [ 1 ]		5644981	1					
ANR	5645007	Identifier	s		5644981	0					
ANR	5645008	PrimaryExpression	1		5644981	1					
ANR	5645009	PrimaryExpression	16		5644981	1					
ANR	5645010	InclusiveOrExpression	( ( ( ut32 ) s [ 2 ] ) << 8 ) | ( ( ( ut32 ) s [ 3 ] ) << 0 )		5644981	1		|			
ANR	5645011	ShiftExpression	( ( ut32 ) s [ 2 ] ) << 8		5644981	0		<<			
ANR	5645012	CastExpression	( ut32 ) s [ 2 ]		5644981	0					
ANR	5645013	CastTarget	ut32		5644981	0					
ANR	5645014	ArrayIndexing	s [ 2 ]		5644981	1					
ANR	5645015	Identifier	s		5644981	0					
ANR	5645016	PrimaryExpression	2		5644981	1					
ANR	5645017	PrimaryExpression	8		5644981	1					
ANR	5645018	ShiftExpression	( ( ut32 ) s [ 3 ] ) << 0		5644981	1		<<			
ANR	5645019	CastExpression	( ut32 ) s [ 3 ]		5644981	0					
ANR	5645020	CastTarget	ut32		5644981	0					
ANR	5645021	ArrayIndexing	s [ 3 ]		5644981	1					
ANR	5645022	Identifier	s		5644981	0					
ANR	5645023	PrimaryExpression	3		5644981	1					
ANR	5645024	PrimaryExpression	0		5644981	1					
ANR	5645025	ReturnType	static inline ut32		5644981	1					
ANR	5645026	Identifier	r_read_be32		5644981	2					
ANR	5645027	ParameterList	const void * src		5644981	3					
ANR	5645028	Parameter	const void * src	68:31:1560:1574	5644981	0	True				
ANR	5645029	ParameterType	const void *		5644981	0					
ANR	5645030	Identifier	src		5644981	1					
ANR	5645031	CFGEntryNode	ENTRY		5644981		True				
ANR	5645032	CFGExitNode	EXIT		5644981		True				
ANR	5645033	Symbol	s		5644981						
ANR	5645034	Symbol	src		5644981						
ANR	5645035	Symbol	* s		5644981						
ANR	5645036	Function	r_read_at_be32	74:0:1714:1849							
ANR	5645037	FunctionDef	"r_read_at_be32 (const void * src , size_t offset)"		5645036	0					
ANR	5645038	CompoundStatement		74:66:1780:1849	5645036	0					
ANR	5645039	IdentifierDeclStatement	const ut8 * s = ( const ut8 * ) src + offset ;	75:1:1783:1822	5645036	0	True				
ANR	5645040	IdentifierDecl	* s = ( const ut8 * ) src + offset		5645036	0					
ANR	5645041	IdentifierDeclType	const ut8 *		5645036	0					
ANR	5645042	Identifier	s		5645036	1					
ANR	5645043	AssignmentExpression	* s = ( const ut8 * ) src + offset		5645036	2		=			
ANR	5645044	Identifier	s		5645036	0					
ANR	5645045	AdditiveExpression	( const ut8 * ) src + offset		5645036	1		+			
ANR	5645046	CastExpression	( const ut8 * ) src		5645036	0					
ANR	5645047	CastTarget	const ut8 *		5645036	0					
ANR	5645048	Identifier	src		5645036	1					
ANR	5645049	Identifier	offset		5645036	1					
ANR	5645050	ReturnStatement	return r_read_be32 ( s ) ;	76:1:1825:1847	5645036	1	True				
ANR	5645051	CallExpression	r_read_be32 ( s )		5645036	0					
ANR	5645052	Callee	r_read_be32		5645036	0					
ANR	5645053	Identifier	r_read_be32		5645036	0					
ANR	5645054	ArgumentList	s		5645036	1					
ANR	5645055	Argument	s		5645036	0					
ANR	5645056	Identifier	s		5645036	0					
ANR	5645057	ReturnType	static inline ut32		5645036	1					
ANR	5645058	Identifier	r_read_at_be32		5645036	2					
ANR	5645059	ParameterList	"const void * src , size_t offset"		5645036	3					
ANR	5645060	Parameter	const void * src	74:34:1748:1762	5645036	0	True				
ANR	5645061	ParameterType	const void *		5645036	0					
ANR	5645062	Identifier	src		5645036	1					
ANR	5645063	Parameter	size_t offset	74:51:1765:1777	5645036	1	True				
ANR	5645064	ParameterType	size_t		5645036	0					
ANR	5645065	Identifier	offset		5645036	1					
ANR	5645066	CFGEntryNode	ENTRY		5645036		True				
ANR	5645067	CFGExitNode	EXIT		5645036		True				
ANR	5645068	Symbol	s		5645036						
ANR	5645069	Symbol	offset		5645036						
ANR	5645070	Symbol	src		5645036						
ANR	5645071	Symbol	r_read_be32		5645036						
ANR	5645072	Function	r_write_be32	79:0:1852:1986							
ANR	5645073	FunctionDef	"r_write_be32 (void * dest , ut32 val)"		5645072	0					
ANR	5645074	CompoundStatement		79:54:1906:1986	5645072	0					
ANR	5645075	ExpressionStatement	"r_write_be16 ( dest , val >> 16 )"	80:1:1909:1939	5645072	0	True				
ANR	5645076	CallExpression	"r_write_be16 ( dest , val >> 16 )"		5645072	0					
ANR	5645077	Callee	r_write_be16		5645072	0					
ANR	5645078	Identifier	r_write_be16		5645072	0					
ANR	5645079	ArgumentList	dest		5645072	1					
ANR	5645080	Argument	dest		5645072	0					
ANR	5645081	Identifier	dest		5645072	0					
ANR	5645082	Argument	val >> 16		5645072	1					
ANR	5645083	ShiftExpression	val >> 16		5645072	0		>>			
ANR	5645084	Identifier	val		5645072	0					
ANR	5645085	PrimaryExpression	16		5645072	1					
ANR	5645086	ExpressionStatement	"r_write_at_be16 ( dest , val , sizeof ( ut16 ) )"	81:1:1942:1984	5645072	1	True				
ANR	5645087	CallExpression	"r_write_at_be16 ( dest , val , sizeof ( ut16 ) )"		5645072	0					
ANR	5645088	Callee	r_write_at_be16		5645072	0					
ANR	5645089	Identifier	r_write_at_be16		5645072	0					
ANR	5645090	ArgumentList	dest		5645072	1					
ANR	5645091	Argument	dest		5645072	0					
ANR	5645092	Identifier	dest		5645072	0					
ANR	5645093	Argument	val		5645072	1					
ANR	5645094	Identifier	val		5645072	0					
ANR	5645095	Argument	sizeof ( ut16 )		5645072	2					
ANR	5645096	SizeofExpression	sizeof ( ut16 )		5645072	0					
ANR	5645097	Sizeof	sizeof		5645072	0					
ANR	5645098	SizeofOperand	ut16		5645072	1					
ANR	5645099	ReturnType	static inline void		5645072	1					
ANR	5645100	Identifier	r_write_be32		5645072	2					
ANR	5645101	ParameterList	"void * dest , ut32 val"		5645072	3					
ANR	5645102	Parameter	void * dest	79:32:1884:1893	5645072	0	True				
ANR	5645103	ParameterType	void *		5645072	0					
ANR	5645104	Identifier	dest		5645072	1					
ANR	5645105	Parameter	ut32 val	79:44:1896:1903	5645072	1	True				
ANR	5645106	ParameterType	ut32		5645072	0					
ANR	5645107	Identifier	val		5645072	1					
ANR	5645108	CFGEntryNode	ENTRY		5645072		True				
ANR	5645109	CFGExitNode	EXIT		5645072		True				
ANR	5645110	Symbol	val		5645072						
ANR	5645111	Symbol	dest		5645072						
ANR	5645112	Function	r_write_be24	84:0:1989:2165							
ANR	5645113	FunctionDef	"r_write_be24 (void * _dest , ut32 val)"		5645112	0					
ANR	5645114	CompoundStatement		84:55:2044:2165	5645112	0					
ANR	5645115	IdentifierDeclStatement	ut8 * dest = ( ut8 * ) _dest ;	85:1:2047:2070	5645112	0	True				
ANR	5645116	IdentifierDecl	* dest = ( ut8 * ) _dest		5645112	0					
ANR	5645117	IdentifierDeclType	ut8 *		5645112	0					
ANR	5645118	Identifier	dest		5645112	1					
ANR	5645119	AssignmentExpression	* dest = ( ut8 * ) _dest		5645112	2		=			
ANR	5645120	Identifier	dest		5645112	0					
ANR	5645121	CastExpression	( ut8 * ) _dest		5645112	1					
ANR	5645122	CastTarget	ut8 *		5645112	0					
ANR	5645123	Identifier	_dest		5645112	1					
ANR	5645124	ExpressionStatement	"r_write_be8 ( dest ++ , val >> 16 )"	86:1:2073:2104	5645112	1	True				
ANR	5645125	CallExpression	"r_write_be8 ( dest ++ , val >> 16 )"		5645112	0					
ANR	5645126	Callee	r_write_be8		5645112	0					
ANR	5645127	Identifier	r_write_be8		5645112	0					
ANR	5645128	ArgumentList	dest ++		5645112	1					
ANR	5645129	Argument	dest ++		5645112	0					
ANR	5645130	PostIncDecOperationExpression	dest ++		5645112	0					
ANR	5645131	Identifier	dest		5645112	0					
ANR	5645132	IncDec	++		5645112	1					
ANR	5645133	Argument	val >> 16		5645112	1					
ANR	5645134	ShiftExpression	val >> 16		5645112	0		>>			
ANR	5645135	Identifier	val		5645112	0					
ANR	5645136	PrimaryExpression	16		5645112	1					
ANR	5645137	ExpressionStatement	"r_write_be8 ( dest ++ , val >> 8 )"	87:1:2107:2137	5645112	2	True				
ANR	5645138	CallExpression	"r_write_be8 ( dest ++ , val >> 8 )"		5645112	0					
ANR	5645139	Callee	r_write_be8		5645112	0					
ANR	5645140	Identifier	r_write_be8		5645112	0					
ANR	5645141	ArgumentList	dest ++		5645112	1					
ANR	5645142	Argument	dest ++		5645112	0					
ANR	5645143	PostIncDecOperationExpression	dest ++		5645112	0					
ANR	5645144	Identifier	dest		5645112	0					
ANR	5645145	IncDec	++		5645112	1					
ANR	5645146	Argument	val >> 8		5645112	1					
ANR	5645147	ShiftExpression	val >> 8		5645112	0		>>			
ANR	5645148	Identifier	val		5645112	0					
ANR	5645149	PrimaryExpression	8		5645112	1					
ANR	5645150	ExpressionStatement	"r_write_be8 ( dest , val )"	88:1:2140:2163	5645112	3	True				
ANR	5645151	CallExpression	"r_write_be8 ( dest , val )"		5645112	0					
ANR	5645152	Callee	r_write_be8		5645112	0					
ANR	5645153	Identifier	r_write_be8		5645112	0					
ANR	5645154	ArgumentList	dest		5645112	1					
ANR	5645155	Argument	dest		5645112	0					
ANR	5645156	Identifier	dest		5645112	0					
ANR	5645157	Argument	val		5645112	1					
ANR	5645158	Identifier	val		5645112	0					
ANR	5645159	ReturnType	static inline void		5645112	1					
ANR	5645160	Identifier	r_write_be24		5645112	2					
ANR	5645161	ParameterList	"void * _dest , ut32 val"		5645112	3					
ANR	5645162	Parameter	void * _dest	84:32:2021:2031	5645112	0	True				
ANR	5645163	ParameterType	void *		5645112	0					
ANR	5645164	Identifier	_dest		5645112	1					
ANR	5645165	Parameter	ut32 val	84:45:2034:2041	5645112	1	True				
ANR	5645166	ParameterType	ut32		5645112	0					
ANR	5645167	Identifier	val		5645112	1					
ANR	5645168	CFGEntryNode	ENTRY		5645112		True				
ANR	5645169	CFGExitNode	EXIT		5645112		True				
ANR	5645170	Symbol	val		5645112						
ANR	5645171	Symbol	_dest		5645112						
ANR	5645172	Symbol	dest		5645112						
ANR	5645173	Function	r_write_at_be32	91:0:2168:2297							
ANR	5645174	FunctionDef	"r_write_at_be32 (void * dest , ut32 val , size_t offset)"		5645173	0					
ANR	5645175	CompoundStatement		91:72:2240:2297	5645173	0					
ANR	5645176	IdentifierDeclStatement	ut8 * d = ( ut8 * ) dest + offset ;	92:1:2243:2271	5645173	0	True				
ANR	5645177	IdentifierDecl	* d = ( ut8 * ) dest + offset		5645173	0					
ANR	5645178	IdentifierDeclType	ut8 *		5645173	0					
ANR	5645179	Identifier	d		5645173	1					
ANR	5645180	AssignmentExpression	* d = ( ut8 * ) dest + offset		5645173	2		=			
ANR	5645181	Identifier	d		5645173	0					
ANR	5645182	AdditiveExpression	( ut8 * ) dest + offset		5645173	1		+			
ANR	5645183	CastExpression	( ut8 * ) dest		5645173	0					
ANR	5645184	CastTarget	ut8 *		5645173	0					
ANR	5645185	Identifier	dest		5645173	1					
ANR	5645186	Identifier	offset		5645173	1					
ANR	5645187	ExpressionStatement	"r_write_be32 ( d , val )"	93:1:2274:2295	5645173	1	True				
ANR	5645188	CallExpression	"r_write_be32 ( d , val )"		5645173	0					
ANR	5645189	Callee	r_write_be32		5645173	0					
ANR	5645190	Identifier	r_write_be32		5645173	0					
ANR	5645191	ArgumentList	d		5645173	1					
ANR	5645192	Argument	d		5645173	0					
ANR	5645193	Identifier	d		5645173	0					
ANR	5645194	Argument	val		5645173	1					
ANR	5645195	Identifier	val		5645173	0					
ANR	5645196	ReturnType	static inline void		5645173	1					
ANR	5645197	Identifier	r_write_at_be32		5645173	2					
ANR	5645198	ParameterList	"void * dest , ut32 val , size_t offset"		5645173	3					
ANR	5645199	Parameter	void * dest	91:35:2203:2212	5645173	0	True				
ANR	5645200	ParameterType	void *		5645173	0					
ANR	5645201	Identifier	dest		5645173	1					
ANR	5645202	Parameter	ut32 val	91:47:2215:2222	5645173	1	True				
ANR	5645203	ParameterType	ut32		5645173	0					
ANR	5645204	Identifier	val		5645173	1					
ANR	5645205	Parameter	size_t offset	91:57:2225:2237	5645173	2	True				
ANR	5645206	ParameterType	size_t		5645173	0					
ANR	5645207	Identifier	offset		5645173	1					
ANR	5645208	CFGEntryNode	ENTRY		5645173		True				
ANR	5645209	CFGExitNode	EXIT		5645173		True				
ANR	5645210	Symbol	val		5645173						
ANR	5645211	Symbol	offset		5645173						
ANR	5645212	Symbol	d		5645173						
ANR	5645213	Symbol	dest		5645173						
ANR	5645214	Function	r_read_be64	96:0:2300:2455							
ANR	5645215	FunctionDef	r_read_be64 (const void * src)		5645214	0					
ANR	5645216	CompoundStatement		96:48:2348:2455	5645214	0					
ANR	5645217	IdentifierDeclStatement	ut64 val = ( ( ut64 ) ( r_read_be32 ( src ) ) ) << 32 ;	97:1:2351:2395	5645214	0	True				
ANR	5645218	IdentifierDecl	val = ( ( ut64 ) ( r_read_be32 ( src ) ) ) << 32		5645214	0					
ANR	5645219	IdentifierDeclType	ut64		5645214	0					
ANR	5645220	Identifier	val		5645214	1					
ANR	5645221	AssignmentExpression	val = ( ( ut64 ) ( r_read_be32 ( src ) ) ) << 32		5645214	2		=			
ANR	5645222	Identifier	val		5645214	0					
ANR	5645223	ShiftExpression	( ( ut64 ) ( r_read_be32 ( src ) ) ) << 32		5645214	1		<<			
ANR	5645224	CastExpression	( ut64 ) ( r_read_be32 ( src ) )		5645214	0					
ANR	5645225	CastTarget	ut64		5645214	0					
ANR	5645226	CallExpression	r_read_be32 ( src )		5645214	1					
ANR	5645227	Callee	r_read_be32		5645214	0					
ANR	5645228	Identifier	r_read_be32		5645214	0					
ANR	5645229	ArgumentList	src		5645214	1					
ANR	5645230	Argument	src		5645214	0					
ANR	5645231	Identifier	src		5645214	0					
ANR	5645232	PrimaryExpression	32		5645214	1					
ANR	5645233	ExpressionStatement	"val |= r_read_at_be32 ( src , sizeof ( ut32 ) )"	98:1:2398:2440	5645214	1	True				
ANR	5645234	AssignmentExpression	"val |= r_read_at_be32 ( src , sizeof ( ut32 ) )"		5645214	0		|=			
ANR	5645235	Identifier	val		5645214	0					
ANR	5645236	CallExpression	"r_read_at_be32 ( src , sizeof ( ut32 ) )"		5645214	1					
ANR	5645237	Callee	r_read_at_be32		5645214	0					
ANR	5645238	Identifier	r_read_at_be32		5645214	0					
ANR	5645239	ArgumentList	src		5645214	1					
ANR	5645240	Argument	src		5645214	0					
ANR	5645241	Identifier	src		5645214	0					
ANR	5645242	Argument	sizeof ( ut32 )		5645214	1					
ANR	5645243	SizeofExpression	sizeof ( ut32 )		5645214	0					
ANR	5645244	Sizeof	sizeof		5645214	0					
ANR	5645245	SizeofOperand	ut32		5645214	1					
ANR	5645246	ReturnStatement	return val ;	99:1:2443:2453	5645214	2	True				
ANR	5645247	Identifier	val		5645214	0					
ANR	5645248	ReturnType	static inline ut64		5645214	1					
ANR	5645249	Identifier	r_read_be64		5645214	2					
ANR	5645250	ParameterList	const void * src		5645214	3					
ANR	5645251	Parameter	const void * src	96:31:2331:2345	5645214	0	True				
ANR	5645252	ParameterType	const void *		5645214	0					
ANR	5645253	Identifier	src		5645214	1					
ANR	5645254	CFGEntryNode	ENTRY		5645214		True				
ANR	5645255	CFGExitNode	EXIT		5645214		True				
ANR	5645256	Symbol	val		5645214						
ANR	5645257	Symbol	src		5645214						
ANR	5645258	Symbol	r_read_be32		5645214						
ANR	5645259	Symbol	r_read_at_be32		5645214						
ANR	5645260	Function	r_read_at_be64	102:0:2458:2593							
ANR	5645261	FunctionDef	"r_read_at_be64 (const void * src , size_t offset)"		5645260	0					
ANR	5645262	CompoundStatement		102:66:2524:2593	5645260	0					
ANR	5645263	IdentifierDeclStatement	const ut8 * s = ( const ut8 * ) src + offset ;	103:1:2527:2566	5645260	0	True				
ANR	5645264	IdentifierDecl	* s = ( const ut8 * ) src + offset		5645260	0					
ANR	5645265	IdentifierDeclType	const ut8 *		5645260	0					
ANR	5645266	Identifier	s		5645260	1					
ANR	5645267	AssignmentExpression	* s = ( const ut8 * ) src + offset		5645260	2		=			
ANR	5645268	Identifier	s		5645260	0					
ANR	5645269	AdditiveExpression	( const ut8 * ) src + offset		5645260	1		+			
ANR	5645270	CastExpression	( const ut8 * ) src		5645260	0					
ANR	5645271	CastTarget	const ut8 *		5645260	0					
ANR	5645272	Identifier	src		5645260	1					
ANR	5645273	Identifier	offset		5645260	1					
ANR	5645274	ReturnStatement	return r_read_be64 ( s ) ;	104:1:2569:2591	5645260	1	True				
ANR	5645275	CallExpression	r_read_be64 ( s )		5645260	0					
ANR	5645276	Callee	r_read_be64		5645260	0					
ANR	5645277	Identifier	r_read_be64		5645260	0					
ANR	5645278	ArgumentList	s		5645260	1					
ANR	5645279	Argument	s		5645260	0					
ANR	5645280	Identifier	s		5645260	0					
ANR	5645281	ReturnType	static inline ut64		5645260	1					
ANR	5645282	Identifier	r_read_at_be64		5645260	2					
ANR	5645283	ParameterList	"const void * src , size_t offset"		5645260	3					
ANR	5645284	Parameter	const void * src	102:34:2492:2506	5645260	0	True				
ANR	5645285	ParameterType	const void *		5645260	0					
ANR	5645286	Identifier	src		5645260	1					
ANR	5645287	Parameter	size_t offset	102:51:2509:2521	5645260	1	True				
ANR	5645288	ParameterType	size_t		5645260	0					
ANR	5645289	Identifier	offset		5645260	1					
ANR	5645290	CFGEntryNode	ENTRY		5645260		True				
ANR	5645291	CFGExitNode	EXIT		5645260		True				
ANR	5645292	Symbol	s		5645260						
ANR	5645293	Symbol	offset		5645260						
ANR	5645294	Symbol	src		5645260						
ANR	5645295	Symbol	r_read_be64		5645260						
ANR	5645296	Function	r_write_be64	107:0:2596:2736							
ANR	5645297	FunctionDef	"r_write_be64 (void * dest , ut64 val)"		5645296	0					
ANR	5645298	CompoundStatement		107:54:2650:2736	5645296	0					
ANR	5645299	ExpressionStatement	"r_write_be32 ( dest , val >> 32 )"	108:1:2653:2683	5645296	0	True				
ANR	5645300	CallExpression	"r_write_be32 ( dest , val >> 32 )"		5645296	0					
ANR	5645301	Callee	r_write_be32		5645296	0					
ANR	5645302	Identifier	r_write_be32		5645296	0					
ANR	5645303	ArgumentList	dest		5645296	1					
ANR	5645304	Argument	dest		5645296	0					
ANR	5645305	Identifier	dest		5645296	0					
ANR	5645306	Argument	val >> 32		5645296	1					
ANR	5645307	ShiftExpression	val >> 32		5645296	0		>>			
ANR	5645308	Identifier	val		5645296	0					
ANR	5645309	PrimaryExpression	32		5645296	1					
ANR	5645310	ExpressionStatement	"r_write_at_be32 ( dest , ( ut32 ) val , sizeof ( ut32 ) )"	109:1:2686:2734	5645296	1	True				
ANR	5645311	CallExpression	"r_write_at_be32 ( dest , ( ut32 ) val , sizeof ( ut32 ) )"		5645296	0					
ANR	5645312	Callee	r_write_at_be32		5645296	0					
ANR	5645313	Identifier	r_write_at_be32		5645296	0					
ANR	5645314	ArgumentList	dest		5645296	1					
ANR	5645315	Argument	dest		5645296	0					
ANR	5645316	Identifier	dest		5645296	0					
ANR	5645317	Argument	( ut32 ) val		5645296	1					
ANR	5645318	CastExpression	( ut32 ) val		5645296	0					
ANR	5645319	CastTarget	ut32		5645296	0					
ANR	5645320	Identifier	val		5645296	1					
ANR	5645321	Argument	sizeof ( ut32 )		5645296	2					
ANR	5645322	SizeofExpression	sizeof ( ut32 )		5645296	0					
ANR	5645323	Sizeof	sizeof		5645296	0					
ANR	5645324	SizeofOperand	ut32		5645296	1					
ANR	5645325	ReturnType	static inline void		5645296	1					
ANR	5645326	Identifier	r_write_be64		5645296	2					
ANR	5645327	ParameterList	"void * dest , ut64 val"		5645296	3					
ANR	5645328	Parameter	void * dest	107:32:2628:2637	5645296	0	True				
ANR	5645329	ParameterType	void *		5645296	0					
ANR	5645330	Identifier	dest		5645296	1					
ANR	5645331	Parameter	ut64 val	107:44:2640:2647	5645296	1	True				
ANR	5645332	ParameterType	ut64		5645296	0					
ANR	5645333	Identifier	val		5645296	1					
ANR	5645334	CFGEntryNode	ENTRY		5645296		True				
ANR	5645335	CFGExitNode	EXIT		5645296		True				
ANR	5645336	Symbol	val		5645296						
ANR	5645337	Symbol	dest		5645296						
ANR	5645338	Function	r_write_at_be64	112:0:2739:2868							
ANR	5645339	FunctionDef	"r_write_at_be64 (void * dest , ut64 val , size_t offset)"		5645338	0					
ANR	5645340	CompoundStatement		112:72:2811:2868	5645338	0					
ANR	5645341	IdentifierDeclStatement	ut8 * d = ( ut8 * ) dest + offset ;	113:1:2814:2842	5645338	0	True				
ANR	5645342	IdentifierDecl	* d = ( ut8 * ) dest + offset		5645338	0					
ANR	5645343	IdentifierDeclType	ut8 *		5645338	0					
ANR	5645344	Identifier	d		5645338	1					
ANR	5645345	AssignmentExpression	* d = ( ut8 * ) dest + offset		5645338	2		=			
ANR	5645346	Identifier	d		5645338	0					
ANR	5645347	AdditiveExpression	( ut8 * ) dest + offset		5645338	1		+			
ANR	5645348	CastExpression	( ut8 * ) dest		5645338	0					
ANR	5645349	CastTarget	ut8 *		5645338	0					
ANR	5645350	Identifier	dest		5645338	1					
ANR	5645351	Identifier	offset		5645338	1					
ANR	5645352	ExpressionStatement	"r_write_be64 ( d , val )"	114:1:2845:2866	5645338	1	True				
ANR	5645353	CallExpression	"r_write_be64 ( d , val )"		5645338	0					
ANR	5645354	Callee	r_write_be64		5645338	0					
ANR	5645355	Identifier	r_write_be64		5645338	0					
ANR	5645356	ArgumentList	d		5645338	1					
ANR	5645357	Argument	d		5645338	0					
ANR	5645358	Identifier	d		5645338	0					
ANR	5645359	Argument	val		5645338	1					
ANR	5645360	Identifier	val		5645338	0					
ANR	5645361	ReturnType	static inline void		5645338	1					
ANR	5645362	Identifier	r_write_at_be64		5645338	2					
ANR	5645363	ParameterList	"void * dest , ut64 val , size_t offset"		5645338	3					
ANR	5645364	Parameter	void * dest	112:35:2774:2783	5645338	0	True				
ANR	5645365	ParameterType	void *		5645338	0					
ANR	5645366	Identifier	dest		5645338	1					
ANR	5645367	Parameter	ut64 val	112:47:2786:2793	5645338	1	True				
ANR	5645368	ParameterType	ut64		5645338	0					
ANR	5645369	Identifier	val		5645338	1					
ANR	5645370	Parameter	size_t offset	112:57:2796:2808	5645338	2	True				
ANR	5645371	ParameterType	size_t		5645338	0					
ANR	5645372	Identifier	offset		5645338	1					
ANR	5645373	CFGEntryNode	ENTRY		5645338		True				
ANR	5645374	CFGExitNode	EXIT		5645338		True				
ANR	5645375	Symbol	val		5645338						
ANR	5645376	Symbol	offset		5645338						
ANR	5645377	Symbol	d		5645338						
ANR	5645378	Symbol	dest		5645338						
ANR	5645379	Function	r_read_le8	119:0:2903:3012							
ANR	5645380	FunctionDef	r_read_le8 (const void * src)		5645379	0					
ANR	5645381	CompoundStatement		119:46:2949:3012	5645379	0					
ANR	5645382	IfStatement	if ( ! src )		5645379	0					
ANR	5645383	Condition	! src	120:5:2956:2959	5645379	0	True				
ANR	5645384	UnaryOperationExpression	! src		5645379	0					
ANR	5645385	UnaryOperator	!		5645379	0					
ANR	5645386	Identifier	src		5645379	1					
ANR	5645387	CompoundStatement		2:11:12:12	5645379	1					
ANR	5645388	ReturnStatement	return UT8_MAX ;	121:2:2966:2980	5645379	0	True				
ANR	5645389	Identifier	UT8_MAX		5645379	0					
ANR	5645390	ReturnStatement	return r_read_ble8 ( src ) ;	123:1:2986:3010	5645379	1	True				
ANR	5645391	CallExpression	r_read_ble8 ( src )		5645379	0					
ANR	5645392	Callee	r_read_ble8		5645379	0					
ANR	5645393	Identifier	r_read_ble8		5645379	0					
ANR	5645394	ArgumentList	src		5645379	1					
ANR	5645395	Argument	src		5645379	0					
ANR	5645396	Identifier	src		5645379	0					
ANR	5645397	ReturnType	static inline ut8		5645379	1					
ANR	5645398	Identifier	r_read_le8		5645379	2					
ANR	5645399	ParameterList	const void * src		5645379	3					
ANR	5645400	Parameter	const void * src	119:29:2932:2946	5645379	0	True				
ANR	5645401	ParameterType	const void *		5645379	0					
ANR	5645402	Identifier	src		5645379	1					
ANR	5645403	CFGEntryNode	ENTRY		5645379		True				
ANR	5645404	CFGExitNode	EXIT		5645379		True				
ANR	5645405	Symbol	UT8_MAX		5645379						
ANR	5645406	Symbol	src		5645379						
ANR	5645407	Symbol	r_read_ble8		5645379						
ANR	5645408	Function	r_read_at_le8	126:0:3015:3119							
ANR	5645409	FunctionDef	"r_read_at_le8 (const void * src , size_t offset)"		5645408	0					
ANR	5645410	CompoundStatement		126:64:3079:3119	5645408	0					
ANR	5645411	ReturnStatement	"return r_read_at_ble8 ( src , offset ) ;"	127:1:3082:3117	5645408	0	True				
ANR	5645412	CallExpression	"r_read_at_ble8 ( src , offset )"		5645408	0					
ANR	5645413	Callee	r_read_at_ble8		5645408	0					
ANR	5645414	Identifier	r_read_at_ble8		5645408	0					
ANR	5645415	ArgumentList	src		5645408	1					
ANR	5645416	Argument	src		5645408	0					
ANR	5645417	Identifier	src		5645408	0					
ANR	5645418	Argument	offset		5645408	1					
ANR	5645419	Identifier	offset		5645408	0					
ANR	5645420	ReturnType	static inline ut8		5645408	1					
ANR	5645421	Identifier	r_read_at_le8		5645408	2					
ANR	5645422	ParameterList	"const void * src , size_t offset"		5645408	3					
ANR	5645423	Parameter	const void * src	126:32:3047:3061	5645408	0	True				
ANR	5645424	ParameterType	const void *		5645408	0					
ANR	5645425	Identifier	src		5645408	1					
ANR	5645426	Parameter	size_t offset	126:49:3064:3076	5645408	1	True				
ANR	5645427	ParameterType	size_t		5645408	0					
ANR	5645428	Identifier	offset		5645408	1					
ANR	5645429	CFGEntryNode	ENTRY		5645408		True				
ANR	5645430	CFGExitNode	EXIT		5645408		True				
ANR	5645431	Symbol	r_read_at_ble8		5645408						
ANR	5645432	Symbol	offset		5645408						
ANR	5645433	Symbol	src		5645408						
ANR	5645434	Function	r_write_le8	130:0:3122:3203							
ANR	5645435	FunctionDef	"r_write_le8 (void * dest , ut8 val)"		5645434	0					
ANR	5645436	CompoundStatement		130:52:3174:3203	5645434	0					
ANR	5645437	ExpressionStatement	"r_write_ble8 ( dest , val )"	131:1:3177:3201	5645434	0	True				
ANR	5645438	CallExpression	"r_write_ble8 ( dest , val )"		5645434	0					
ANR	5645439	Callee	r_write_ble8		5645434	0					
ANR	5645440	Identifier	r_write_ble8		5645434	0					
ANR	5645441	ArgumentList	dest		5645434	1					
ANR	5645442	Argument	dest		5645434	0					
ANR	5645443	Identifier	dest		5645434	0					
ANR	5645444	Argument	val		5645434	1					
ANR	5645445	Identifier	val		5645434	0					
ANR	5645446	ReturnType	static inline void		5645434	1					
ANR	5645447	Identifier	r_write_le8		5645434	2					
ANR	5645448	ParameterList	"void * dest , ut8 val"		5645434	3					
ANR	5645449	Parameter	void * dest	130:31:3153:3162	5645434	0	True				
ANR	5645450	ParameterType	void *		5645434	0					
ANR	5645451	Identifier	dest		5645434	1					
ANR	5645452	Parameter	ut8 val	130:43:3165:3171	5645434	1	True				
ANR	5645453	ParameterType	ut8		5645434	0					
ANR	5645454	Identifier	val		5645434	1					
ANR	5645455	CFGEntryNode	ENTRY		5645434		True				
ANR	5645456	CFGExitNode	EXIT		5645434		True				
ANR	5645457	Symbol	val		5645434						
ANR	5645458	Symbol	dest		5645434						
ANR	5645459	Function	r_write_at_le8	134:0:3206:3316							
ANR	5645460	FunctionDef	"r_write_at_le8 (void * dest , ut8 val , size_t offset)"		5645459	0					
ANR	5645461	CompoundStatement		134:70:3276:3316	5645459	0					
ANR	5645462	ExpressionStatement	"r_write_at_ble8 ( dest , val , offset )"	135:1:3279:3314	5645459	0	True				
ANR	5645463	CallExpression	"r_write_at_ble8 ( dest , val , offset )"		5645459	0					
ANR	5645464	Callee	r_write_at_ble8		5645459	0					
ANR	5645465	Identifier	r_write_at_ble8		5645459	0					
ANR	5645466	ArgumentList	dest		5645459	1					
ANR	5645467	Argument	dest		5645459	0					
ANR	5645468	Identifier	dest		5645459	0					
ANR	5645469	Argument	val		5645459	1					
ANR	5645470	Identifier	val		5645459	0					
ANR	5645471	Argument	offset		5645459	2					
ANR	5645472	Identifier	offset		5645459	0					
ANR	5645473	ReturnType	static inline void		5645459	1					
ANR	5645474	Identifier	r_write_at_le8		5645459	2					
ANR	5645475	ParameterList	"void * dest , ut8 val , size_t offset"		5645459	3					
ANR	5645476	Parameter	void * dest	134:34:3240:3249	5645459	0	True				
ANR	5645477	ParameterType	void *		5645459	0					
ANR	5645478	Identifier	dest		5645459	1					
ANR	5645479	Parameter	ut8 val	134:46:3252:3258	5645459	1	True				
ANR	5645480	ParameterType	ut8		5645459	0					
ANR	5645481	Identifier	val		5645459	1					
ANR	5645482	Parameter	size_t offset	134:55:3261:3273	5645459	2	True				
ANR	5645483	ParameterType	size_t		5645459	0					
ANR	5645484	Identifier	offset		5645459	1					
ANR	5645485	CFGEntryNode	ENTRY		5645459		True				
ANR	5645486	CFGExitNode	EXIT		5645459		True				
ANR	5645487	Symbol	val		5645459						
ANR	5645488	Symbol	offset		5645459						
ANR	5645489	Symbol	dest		5645459						
ANR	5645490	Function	r_read_le16	138:0:3319:3488							
ANR	5645491	FunctionDef	r_read_le16 (const void * src)		5645490	0					
ANR	5645492	CompoundStatement		138:48:3367:3488	5645490	0					
ANR	5645493	IfStatement	if ( ! src )		5645490	0					
ANR	5645494	Condition	! src	139:5:3374:3377	5645490	0	True				
ANR	5645495	UnaryOperationExpression	! src		5645490	0					
ANR	5645496	UnaryOperator	!		5645490	0					
ANR	5645497	Identifier	src		5645490	1					
ANR	5645498	CompoundStatement		2:11:12:12	5645490	1					
ANR	5645499	ReturnStatement	return UT16_MAX ;	140:2:3384:3399	5645490	0	True				
ANR	5645500	Identifier	UT16_MAX		5645490	0					
ANR	5645501	IdentifierDeclStatement	const ut8 * s = ( const ut8 * ) src ;	142:1:3405:3435	5645490	1	True				
ANR	5645502	IdentifierDecl	* s = ( const ut8 * ) src		5645490	0					
ANR	5645503	IdentifierDeclType	const ut8 *		5645490	0					
ANR	5645504	Identifier	s		5645490	1					
ANR	5645505	AssignmentExpression	* s = ( const ut8 * ) src		5645490	2		=			
ANR	5645506	Identifier	s		5645490	0					
ANR	5645507	CastExpression	( const ut8 * ) src		5645490	1					
ANR	5645508	CastTarget	const ut8 *		5645490	0					
ANR	5645509	Identifier	src		5645490	1					
ANR	5645510	ReturnStatement	return ( ( ( ut16 ) s [ 1 ] ) << 8 ) | ( ( ( ut16 ) s [ 0 ] ) << 0 ) ;	143:1:3438:3486	5645490	2	True				
ANR	5645511	InclusiveOrExpression	( ( ( ut16 ) s [ 1 ] ) << 8 ) | ( ( ( ut16 ) s [ 0 ] ) << 0 )		5645490	0		|			
ANR	5645512	ShiftExpression	( ( ut16 ) s [ 1 ] ) << 8		5645490	0		<<			
ANR	5645513	CastExpression	( ut16 ) s [ 1 ]		5645490	0					
ANR	5645514	CastTarget	ut16		5645490	0					
ANR	5645515	ArrayIndexing	s [ 1 ]		5645490	1					
ANR	5645516	Identifier	s		5645490	0					
ANR	5645517	PrimaryExpression	1		5645490	1					
ANR	5645518	PrimaryExpression	8		5645490	1					
ANR	5645519	ShiftExpression	( ( ut16 ) s [ 0 ] ) << 0		5645490	1		<<			
ANR	5645520	CastExpression	( ut16 ) s [ 0 ]		5645490	0					
ANR	5645521	CastTarget	ut16		5645490	0					
ANR	5645522	ArrayIndexing	s [ 0 ]		5645490	1					
ANR	5645523	Identifier	s		5645490	0					
ANR	5645524	PrimaryExpression	0		5645490	1					
ANR	5645525	PrimaryExpression	0		5645490	1					
ANR	5645526	ReturnType	static inline ut16		5645490	1					
ANR	5645527	Identifier	r_read_le16		5645490	2					
ANR	5645528	ParameterList	const void * src		5645490	3					
ANR	5645529	Parameter	const void * src	138:31:3350:3364	5645490	0	True				
ANR	5645530	ParameterType	const void *		5645490	0					
ANR	5645531	Identifier	src		5645490	1					
ANR	5645532	CFGEntryNode	ENTRY		5645490		True				
ANR	5645533	CFGExitNode	EXIT		5645490		True				
ANR	5645534	Symbol	s		5645490						
ANR	5645535	Symbol	src		5645490						
ANR	5645536	Symbol	UT16_MAX		5645490						
ANR	5645537	Symbol	* s		5645490						
ANR	5645538	Function	r_read_at_le16	146:0:3491:3661							
ANR	5645539	FunctionDef	"r_read_at_le16 (const void * src , size_t offset)"		5645538	0					
ANR	5645540	CompoundStatement		146:66:3557:3661	5645538	0					
ANR	5645541	IfStatement	if ( ! src )		5645538	0					
ANR	5645542	Condition	! src	147:5:3564:3567	5645538	0	True				
ANR	5645543	UnaryOperationExpression	! src		5645538	0					
ANR	5645544	UnaryOperator	!		5645538	0					
ANR	5645545	Identifier	src		5645538	1					
ANR	5645546	CompoundStatement		2:11:12:12	5645538	1					
ANR	5645547	ReturnStatement	return UT16_MAX ;	148:2:3574:3589	5645538	0	True				
ANR	5645548	Identifier	UT16_MAX		5645538	0					
ANR	5645549	IdentifierDeclStatement	const ut8 * s = ( const ut8 * ) src + offset ;	150:1:3595:3634	5645538	1	True				
ANR	5645550	IdentifierDecl	* s = ( const ut8 * ) src + offset		5645538	0					
ANR	5645551	IdentifierDeclType	const ut8 *		5645538	0					
ANR	5645552	Identifier	s		5645538	1					
ANR	5645553	AssignmentExpression	* s = ( const ut8 * ) src + offset		5645538	2		=			
ANR	5645554	Identifier	s		5645538	0					
ANR	5645555	AdditiveExpression	( const ut8 * ) src + offset		5645538	1		+			
ANR	5645556	CastExpression	( const ut8 * ) src		5645538	0					
ANR	5645557	CastTarget	const ut8 *		5645538	0					
ANR	5645558	Identifier	src		5645538	1					
ANR	5645559	Identifier	offset		5645538	1					
ANR	5645560	ReturnStatement	return r_read_le16 ( s ) ;	151:1:3637:3659	5645538	2	True				
ANR	5645561	CallExpression	r_read_le16 ( s )		5645538	0					
ANR	5645562	Callee	r_read_le16		5645538	0					
ANR	5645563	Identifier	r_read_le16		5645538	0					
ANR	5645564	ArgumentList	s		5645538	1					
ANR	5645565	Argument	s		5645538	0					
ANR	5645566	Identifier	s		5645538	0					
ANR	5645567	ReturnType	static inline ut16		5645538	1					
ANR	5645568	Identifier	r_read_at_le16		5645538	2					
ANR	5645569	ParameterList	"const void * src , size_t offset"		5645538	3					
ANR	5645570	Parameter	const void * src	146:34:3525:3539	5645538	0	True				
ANR	5645571	ParameterType	const void *		5645538	0					
ANR	5645572	Identifier	src		5645538	1					
ANR	5645573	Parameter	size_t offset	146:51:3542:3554	5645538	1	True				
ANR	5645574	ParameterType	size_t		5645538	0					
ANR	5645575	Identifier	offset		5645538	1					
ANR	5645576	CFGEntryNode	ENTRY		5645538		True				
ANR	5645577	CFGExitNode	EXIT		5645538		True				
ANR	5645578	Symbol	s		5645538						
ANR	5645579	Symbol	offset		5645538						
ANR	5645580	Symbol	src		5645538						
ANR	5645581	Symbol	UT16_MAX		5645538						
ANR	5645582	Symbol	r_read_le16		5645538						
ANR	5645583	Function	r_write_le16	154:0:3664:3799							
ANR	5645584	FunctionDef	"r_write_le16 (void * dest , ut16 val)"		5645583	0					
ANR	5645585	CompoundStatement		154:54:3718:3799	5645583	0					
ANR	5645586	ExpressionStatement	"r_write_le8 ( dest , ( ut8 ) val )"	155:1:3721:3749	5645583	0	True				
ANR	5645587	CallExpression	"r_write_le8 ( dest , ( ut8 ) val )"		5645583	0					
ANR	5645588	Callee	r_write_le8		5645583	0					
ANR	5645589	Identifier	r_write_le8		5645583	0					
ANR	5645590	ArgumentList	dest		5645583	1					
ANR	5645591	Argument	dest		5645583	0					
ANR	5645592	Identifier	dest		5645583	0					
ANR	5645593	Argument	( ut8 ) val		5645583	1					
ANR	5645594	CastExpression	( ut8 ) val		5645583	0					
ANR	5645595	CastTarget	ut8		5645583	0					
ANR	5645596	Identifier	val		5645583	1					
ANR	5645597	ExpressionStatement	"r_write_at_le8 ( dest , val >> 8 , sizeof ( ut8 ) )"	156:1:3752:3797	5645583	1	True				
ANR	5645598	CallExpression	"r_write_at_le8 ( dest , val >> 8 , sizeof ( ut8 ) )"		5645583	0					
ANR	5645599	Callee	r_write_at_le8		5645583	0					
ANR	5645600	Identifier	r_write_at_le8		5645583	0					
ANR	5645601	ArgumentList	dest		5645583	1					
ANR	5645602	Argument	dest		5645583	0					
ANR	5645603	Identifier	dest		5645583	0					
ANR	5645604	Argument	val >> 8		5645583	1					
ANR	5645605	ShiftExpression	val >> 8		5645583	0		>>			
ANR	5645606	Identifier	val		5645583	0					
ANR	5645607	PrimaryExpression	8		5645583	1					
ANR	5645608	Argument	sizeof ( ut8 )		5645583	2					
ANR	5645609	SizeofExpression	sizeof ( ut8 )		5645583	0					
ANR	5645610	Sizeof	sizeof		5645583	0					
ANR	5645611	SizeofOperand	ut8		5645583	1					
ANR	5645612	ReturnType	static inline void		5645583	1					
ANR	5645613	Identifier	r_write_le16		5645583	2					
ANR	5645614	ParameterList	"void * dest , ut16 val"		5645583	3					
ANR	5645615	Parameter	void * dest	154:32:3696:3705	5645583	0	True				
ANR	5645616	ParameterType	void *		5645583	0					
ANR	5645617	Identifier	dest		5645583	1					
ANR	5645618	Parameter	ut16 val	154:44:3708:3715	5645583	1	True				
ANR	5645619	ParameterType	ut16		5645583	0					
ANR	5645620	Identifier	val		5645583	1					
ANR	5645621	CFGEntryNode	ENTRY		5645583		True				
ANR	5645622	CFGExitNode	EXIT		5645583		True				
ANR	5645623	Symbol	val		5645583						
ANR	5645624	Symbol	dest		5645583						
ANR	5645625	Function	r_write_at_le16	159:0:3802:3932							
ANR	5645626	FunctionDef	"r_write_at_le16 (void * dest , ut16 val , size_t offset)"		5645625	0					
ANR	5645627	CompoundStatement		159:72:3874:3932	5645625	0					
ANR	5645628	IdentifierDeclStatement	ut8 * d = ( ut8 * ) dest + offset ;	160:1:3877:3906	5645625	0	True				
ANR	5645629	IdentifierDecl	* d = ( ut8 * ) dest + offset		5645625	0					
ANR	5645630	IdentifierDeclType	ut8 *		5645625	0					
ANR	5645631	Identifier	d		5645625	1					
ANR	5645632	AssignmentExpression	* d = ( ut8 * ) dest + offset		5645625	2		=			
ANR	5645633	Identifier	d		5645625	0					
ANR	5645634	AdditiveExpression	( ut8 * ) dest + offset		5645625	1		+			
ANR	5645635	CastExpression	( ut8 * ) dest		5645625	0					
ANR	5645636	CastTarget	ut8 *		5645625	0					
ANR	5645637	Identifier	dest		5645625	1					
ANR	5645638	Identifier	offset		5645625	1					
ANR	5645639	ExpressionStatement	"r_write_le16 ( d , val )"	161:1:3909:3930	5645625	1	True				
ANR	5645640	CallExpression	"r_write_le16 ( d , val )"		5645625	0					
ANR	5645641	Callee	r_write_le16		5645625	0					
ANR	5645642	Identifier	r_write_le16		5645625	0					
ANR	5645643	ArgumentList	d		5645625	1					
ANR	5645644	Argument	d		5645625	0					
ANR	5645645	Identifier	d		5645625	0					
ANR	5645646	Argument	val		5645625	1					
ANR	5645647	Identifier	val		5645625	0					
ANR	5645648	ReturnType	static inline void		5645625	1					
ANR	5645649	Identifier	r_write_at_le16		5645625	2					
ANR	5645650	ParameterList	"void * dest , ut16 val , size_t offset"		5645625	3					
ANR	5645651	Parameter	void * dest	159:35:3837:3846	5645625	0	True				
ANR	5645652	ParameterType	void *		5645625	0					
ANR	5645653	Identifier	dest		5645625	1					
ANR	5645654	Parameter	ut16 val	159:47:3849:3856	5645625	1	True				
ANR	5645655	ParameterType	ut16		5645625	0					
ANR	5645656	Identifier	val		5645625	1					
ANR	5645657	Parameter	size_t offset	159:57:3859:3871	5645625	2	True				
ANR	5645658	ParameterType	size_t		5645625	0					
ANR	5645659	Identifier	offset		5645625	1					
ANR	5645660	CFGEntryNode	ENTRY		5645625		True				
ANR	5645661	CFGExitNode	EXIT		5645625		True				
ANR	5645662	Symbol	val		5645625						
ANR	5645663	Symbol	offset		5645625						
ANR	5645664	Symbol	d		5645625						
ANR	5645665	Symbol	dest		5645625						
ANR	5645666	Function	r_write_le24	164:0:3935:4113							
ANR	5645667	FunctionDef	"r_write_le24 (void * _dest , ut32 val)"		5645666	0					
ANR	5645668	CompoundStatement		164:55:3990:4113	5645666	0					
ANR	5645669	IdentifierDeclStatement	ut8 * dest = ( ut8 * ) _dest ;	165:1:3993:4016	5645666	0	True				
ANR	5645670	IdentifierDecl	* dest = ( ut8 * ) _dest		5645666	0					
ANR	5645671	IdentifierDeclType	ut8 *		5645666	0					
ANR	5645672	Identifier	dest		5645666	1					
ANR	5645673	AssignmentExpression	* dest = ( ut8 * ) _dest		5645666	2		=			
ANR	5645674	Identifier	dest		5645666	0					
ANR	5645675	CastExpression	( ut8 * ) _dest		5645666	1					
ANR	5645676	CastTarget	ut8 *		5645666	0					
ANR	5645677	Identifier	_dest		5645666	1					
ANR	5645678	ExpressionStatement	"r_write_le8 ( dest ++ , val )"	166:1:4019:4044	5645666	1	True				
ANR	5645679	CallExpression	"r_write_le8 ( dest ++ , val )"		5645666	0					
ANR	5645680	Callee	r_write_le8		5645666	0					
ANR	5645681	Identifier	r_write_le8		5645666	0					
ANR	5645682	ArgumentList	dest ++		5645666	1					
ANR	5645683	Argument	dest ++		5645666	0					
ANR	5645684	PostIncDecOperationExpression	dest ++		5645666	0					
ANR	5645685	Identifier	dest		5645666	0					
ANR	5645686	IncDec	++		5645666	1					
ANR	5645687	Argument	val		5645666	1					
ANR	5645688	Identifier	val		5645666	0					
ANR	5645689	ExpressionStatement	"r_write_le8 ( dest ++ , val >> 8 )"	167:1:4047:4077	5645666	2	True				
ANR	5645690	CallExpression	"r_write_le8 ( dest ++ , val >> 8 )"		5645666	0					
ANR	5645691	Callee	r_write_le8		5645666	0					
ANR	5645692	Identifier	r_write_le8		5645666	0					
ANR	5645693	ArgumentList	dest ++		5645666	1					
ANR	5645694	Argument	dest ++		5645666	0					
ANR	5645695	PostIncDecOperationExpression	dest ++		5645666	0					
ANR	5645696	Identifier	dest		5645666	0					
ANR	5645697	IncDec	++		5645666	1					
ANR	5645698	Argument	val >> 8		5645666	1					
ANR	5645699	ShiftExpression	val >> 8		5645666	0		>>			
ANR	5645700	Identifier	val		5645666	0					
ANR	5645701	PrimaryExpression	8		5645666	1					
ANR	5645702	ExpressionStatement	"r_write_le8 ( dest , val >> 16 )"	168:1:4080:4111	5645666	3	True				
ANR	5645703	CallExpression	"r_write_le8 ( dest , val >> 16 )"		5645666	0					
ANR	5645704	Callee	r_write_le8		5645666	0					
ANR	5645705	Identifier	r_write_le8		5645666	0					
ANR	5645706	ArgumentList	dest		5645666	1					
ANR	5645707	Argument	dest		5645666	0					
ANR	5645708	Identifier	dest		5645666	0					
ANR	5645709	Argument	val >> 16		5645666	1					
ANR	5645710	ShiftExpression	val >> 16		5645666	0		>>			
ANR	5645711	Identifier	val		5645666	0					
ANR	5645712	PrimaryExpression	16		5645666	1					
ANR	5645713	ReturnType	static inline void		5645666	1					
ANR	5645714	Identifier	r_write_le24		5645666	2					
ANR	5645715	ParameterList	"void * _dest , ut32 val"		5645666	3					
ANR	5645716	Parameter	void * _dest	164:32:3967:3977	5645666	0	True				
ANR	5645717	ParameterType	void *		5645666	0					
ANR	5645718	Identifier	_dest		5645666	1					
ANR	5645719	Parameter	ut32 val	164:45:3980:3987	5645666	1	True				
ANR	5645720	ParameterType	ut32		5645666	0					
ANR	5645721	Identifier	val		5645666	1					
ANR	5645722	CFGEntryNode	ENTRY		5645666		True				
ANR	5645723	CFGExitNode	EXIT		5645666		True				
ANR	5645724	Symbol	val		5645666						
ANR	5645725	Symbol	_dest		5645666						
ANR	5645726	Symbol	dest		5645666						
ANR	5645727	Function	r_read_le32	171:0:4116:4333							
ANR	5645728	FunctionDef	r_read_le32 (const void * src)		5645727	0					
ANR	5645729	CompoundStatement		171:48:4164:4333	5645727	0					
ANR	5645730	IfStatement	if ( ! src )		5645727	0					
ANR	5645731	Condition	! src	172:5:4171:4174	5645727	0	True				
ANR	5645732	UnaryOperationExpression	! src		5645727	0					
ANR	5645733	UnaryOperator	!		5645727	0					
ANR	5645734	Identifier	src		5645727	1					
ANR	5645735	CompoundStatement		2:11:12:12	5645727	1					
ANR	5645736	ReturnStatement	return UT32_MAX ;	173:2:4181:4196	5645727	0	True				
ANR	5645737	Identifier	UT32_MAX		5645727	0					
ANR	5645738	IdentifierDeclStatement	const ut8 * s = ( const ut8 * ) src ;	175:1:4202:4232	5645727	1	True				
ANR	5645739	IdentifierDecl	* s = ( const ut8 * ) src		5645727	0					
ANR	5645740	IdentifierDeclType	const ut8 *		5645727	0					
ANR	5645741	Identifier	s		5645727	1					
ANR	5645742	AssignmentExpression	* s = ( const ut8 * ) src		5645727	2		=			
ANR	5645743	Identifier	s		5645727	0					
ANR	5645744	CastExpression	( const ut8 * ) src		5645727	1					
ANR	5645745	CastTarget	const ut8 *		5645727	0					
ANR	5645746	Identifier	src		5645727	1					
ANR	5645747	ReturnStatement	return ( ( ( ut32 ) s [ 3 ] ) << 24 ) | ( ( ( ut32 ) s [ 2 ] ) << 16 ) | ( ( ( ut32 ) s [ 1 ] ) << 8 ) | ( ( ( ut32 ) s [ 0 ] ) << 0 ) ;	176:1:4235:4331	5645727	2	True				
ANR	5645748	InclusiveOrExpression	( ( ( ut32 ) s [ 3 ] ) << 24 ) | ( ( ( ut32 ) s [ 2 ] ) << 16 ) | ( ( ( ut32 ) s [ 1 ] ) << 8 ) | ( ( ( ut32 ) s [ 0 ] ) << 0 )		5645727	0		|			
ANR	5645749	ShiftExpression	( ( ut32 ) s [ 3 ] ) << 24		5645727	0		<<			
ANR	5645750	CastExpression	( ut32 ) s [ 3 ]		5645727	0					
ANR	5645751	CastTarget	ut32		5645727	0					
ANR	5645752	ArrayIndexing	s [ 3 ]		5645727	1					
ANR	5645753	Identifier	s		5645727	0					
ANR	5645754	PrimaryExpression	3		5645727	1					
ANR	5645755	PrimaryExpression	24		5645727	1					
ANR	5645756	InclusiveOrExpression	( ( ( ut32 ) s [ 2 ] ) << 16 ) | ( ( ( ut32 ) s [ 1 ] ) << 8 ) | ( ( ( ut32 ) s [ 0 ] ) << 0 )		5645727	1		|			
ANR	5645757	ShiftExpression	( ( ut32 ) s [ 2 ] ) << 16		5645727	0		<<			
ANR	5645758	CastExpression	( ut32 ) s [ 2 ]		5645727	0					
ANR	5645759	CastTarget	ut32		5645727	0					
ANR	5645760	ArrayIndexing	s [ 2 ]		5645727	1					
ANR	5645761	Identifier	s		5645727	0					
ANR	5645762	PrimaryExpression	2		5645727	1					
ANR	5645763	PrimaryExpression	16		5645727	1					
ANR	5645764	InclusiveOrExpression	( ( ( ut32 ) s [ 1 ] ) << 8 ) | ( ( ( ut32 ) s [ 0 ] ) << 0 )		5645727	1		|			
ANR	5645765	ShiftExpression	( ( ut32 ) s [ 1 ] ) << 8		5645727	0		<<			
ANR	5645766	CastExpression	( ut32 ) s [ 1 ]		5645727	0					
ANR	5645767	CastTarget	ut32		5645727	0					
ANR	5645768	ArrayIndexing	s [ 1 ]		5645727	1					
ANR	5645769	Identifier	s		5645727	0					
ANR	5645770	PrimaryExpression	1		5645727	1					
ANR	5645771	PrimaryExpression	8		5645727	1					
ANR	5645772	ShiftExpression	( ( ut32 ) s [ 0 ] ) << 0		5645727	1		<<			
ANR	5645773	CastExpression	( ut32 ) s [ 0 ]		5645727	0					
ANR	5645774	CastTarget	ut32		5645727	0					
ANR	5645775	ArrayIndexing	s [ 0 ]		5645727	1					
ANR	5645776	Identifier	s		5645727	0					
ANR	5645777	PrimaryExpression	0		5645727	1					
ANR	5645778	PrimaryExpression	0		5645727	1					
ANR	5645779	ReturnType	static inline ut32		5645727	1					
ANR	5645780	Identifier	r_read_le32		5645727	2					
ANR	5645781	ParameterList	const void * src		5645727	3					
ANR	5645782	Parameter	const void * src	171:31:4147:4161	5645727	0	True				
ANR	5645783	ParameterType	const void *		5645727	0					
ANR	5645784	Identifier	src		5645727	1					
ANR	5645785	CFGEntryNode	ENTRY		5645727		True				
ANR	5645786	CFGExitNode	EXIT		5645727		True				
ANR	5645787	Symbol	UT32_MAX		5645727						
ANR	5645788	Symbol	s		5645727						
ANR	5645789	Symbol	src		5645727						
ANR	5645790	Symbol	* s		5645727						
ANR	5645791	Function	r_read_at_le32	180:0:4336:4506							
ANR	5645792	FunctionDef	"r_read_at_le32 (const void * src , size_t offset)"		5645791	0					
ANR	5645793	CompoundStatement		180:66:4402:4506	5645791	0					
ANR	5645794	IfStatement	if ( ! src )		5645791	0					
ANR	5645795	Condition	! src	181:5:4409:4412	5645791	0	True				
ANR	5645796	UnaryOperationExpression	! src		5645791	0					
ANR	5645797	UnaryOperator	!		5645791	0					
ANR	5645798	Identifier	src		5645791	1					
ANR	5645799	CompoundStatement		2:11:12:12	5645791	1					
ANR	5645800	ReturnStatement	return UT32_MAX ;	182:2:4419:4434	5645791	0	True				
ANR	5645801	Identifier	UT32_MAX		5645791	0					
ANR	5645802	IdentifierDeclStatement	const ut8 * s = ( const ut8 * ) src + offset ;	184:1:4440:4479	5645791	1	True				
ANR	5645803	IdentifierDecl	* s = ( const ut8 * ) src + offset		5645791	0					
ANR	5645804	IdentifierDeclType	const ut8 *		5645791	0					
ANR	5645805	Identifier	s		5645791	1					
ANR	5645806	AssignmentExpression	* s = ( const ut8 * ) src + offset		5645791	2		=			
ANR	5645807	Identifier	s		5645791	0					
ANR	5645808	AdditiveExpression	( const ut8 * ) src + offset		5645791	1		+			
ANR	5645809	CastExpression	( const ut8 * ) src		5645791	0					
ANR	5645810	CastTarget	const ut8 *		5645791	0					
ANR	5645811	Identifier	src		5645791	1					
ANR	5645812	Identifier	offset		5645791	1					
ANR	5645813	ReturnStatement	return r_read_le32 ( s ) ;	185:1:4482:4504	5645791	2	True				
ANR	5645814	CallExpression	r_read_le32 ( s )		5645791	0					
ANR	5645815	Callee	r_read_le32		5645791	0					
ANR	5645816	Identifier	r_read_le32		5645791	0					
ANR	5645817	ArgumentList	s		5645791	1					
ANR	5645818	Argument	s		5645791	0					
ANR	5645819	Identifier	s		5645791	0					
ANR	5645820	ReturnType	static inline ut32		5645791	1					
ANR	5645821	Identifier	r_read_at_le32		5645791	2					
ANR	5645822	ParameterList	"const void * src , size_t offset"		5645791	3					
ANR	5645823	Parameter	const void * src	180:34:4370:4384	5645791	0	True				
ANR	5645824	ParameterType	const void *		5645791	0					
ANR	5645825	Identifier	src		5645791	1					
ANR	5645826	Parameter	size_t offset	180:51:4387:4399	5645791	1	True				
ANR	5645827	ParameterType	size_t		5645791	0					
ANR	5645828	Identifier	offset		5645791	1					
ANR	5645829	CFGEntryNode	ENTRY		5645791		True				
ANR	5645830	CFGExitNode	EXIT		5645791		True				
ANR	5645831	Symbol	UT32_MAX		5645791						
ANR	5645832	Symbol	s		5645791						
ANR	5645833	Symbol	r_read_le32		5645791						
ANR	5645834	Symbol	offset		5645791						
ANR	5645835	Symbol	src		5645791						
ANR	5645836	Function	r_write_le32	188:0:4509:4643							
ANR	5645837	FunctionDef	"r_write_le32 (void * dest , ut32 val)"		5645836	0					
ANR	5645838	CompoundStatement		188:54:4563:4643	5645836	0					
ANR	5645839	ExpressionStatement	"r_write_le16 ( dest , val )"	189:1:4566:4590	5645836	0	True				
ANR	5645840	CallExpression	"r_write_le16 ( dest , val )"		5645836	0					
ANR	5645841	Callee	r_write_le16		5645836	0					
ANR	5645842	Identifier	r_write_le16		5645836	0					
ANR	5645843	ArgumentList	dest		5645836	1					
ANR	5645844	Argument	dest		5645836	0					
ANR	5645845	Identifier	dest		5645836	0					
ANR	5645846	Argument	val		5645836	1					
ANR	5645847	Identifier	val		5645836	0					
ANR	5645848	ExpressionStatement	"r_write_at_le16 ( dest , val >> 16 , sizeof ( ut16 ) )"	190:1:4593:4641	5645836	1	True				
ANR	5645849	CallExpression	"r_write_at_le16 ( dest , val >> 16 , sizeof ( ut16 ) )"		5645836	0					
ANR	5645850	Callee	r_write_at_le16		5645836	0					
ANR	5645851	Identifier	r_write_at_le16		5645836	0					
ANR	5645852	ArgumentList	dest		5645836	1					
ANR	5645853	Argument	dest		5645836	0					
ANR	5645854	Identifier	dest		5645836	0					
ANR	5645855	Argument	val >> 16		5645836	1					
ANR	5645856	ShiftExpression	val >> 16		5645836	0		>>			
ANR	5645857	Identifier	val		5645836	0					
ANR	5645858	PrimaryExpression	16		5645836	1					
ANR	5645859	Argument	sizeof ( ut16 )		5645836	2					
ANR	5645860	SizeofExpression	sizeof ( ut16 )		5645836	0					
ANR	5645861	Sizeof	sizeof		5645836	0					
ANR	5645862	SizeofOperand	ut16		5645836	1					
ANR	5645863	ReturnType	static inline void		5645836	1					
ANR	5645864	Identifier	r_write_le32		5645836	2					
ANR	5645865	ParameterList	"void * dest , ut32 val"		5645836	3					
ANR	5645866	Parameter	void * dest	188:32:4541:4550	5645836	0	True				
ANR	5645867	ParameterType	void *		5645836	0					
ANR	5645868	Identifier	dest		5645836	1					
ANR	5645869	Parameter	ut32 val	188:44:4553:4560	5645836	1	True				
ANR	5645870	ParameterType	ut32		5645836	0					
ANR	5645871	Identifier	val		5645836	1					
ANR	5645872	CFGEntryNode	ENTRY		5645836		True				
ANR	5645873	CFGExitNode	EXIT		5645836		True				
ANR	5645874	Symbol	val		5645836						
ANR	5645875	Symbol	dest		5645836						
ANR	5645876	Function	r_write_at_le32	193:0:4646:4777							
ANR	5645877	FunctionDef	"r_write_at_le32 (void * dest , ut32 val , size_t offset)"		5645876	0					
ANR	5645878	CompoundStatement		193:72:4718:4777	5645876	0					
ANR	5645879	IdentifierDeclStatement	ut8 * d = ( ( ut8 * ) dest ) + offset ;	194:1:4721:4751	5645876	0	True				
ANR	5645880	IdentifierDecl	* d = ( ( ut8 * ) dest ) + offset		5645876	0					
ANR	5645881	IdentifierDeclType	ut8 *		5645876	0					
ANR	5645882	Identifier	d		5645876	1					
ANR	5645883	AssignmentExpression	* d = ( ( ut8 * ) dest ) + offset		5645876	2		=			
ANR	5645884	Identifier	d		5645876	0					
ANR	5645885	AdditiveExpression	( ( ut8 * ) dest ) + offset		5645876	1		+			
ANR	5645886	CastExpression	( ut8 * ) dest		5645876	0					
ANR	5645887	CastTarget	ut8 *		5645876	0					
ANR	5645888	Identifier	dest		5645876	1					
ANR	5645889	Identifier	offset		5645876	1					
ANR	5645890	ExpressionStatement	"r_write_le32 ( d , val )"	195:1:4754:4775	5645876	1	True				
ANR	5645891	CallExpression	"r_write_le32 ( d , val )"		5645876	0					
ANR	5645892	Callee	r_write_le32		5645876	0					
ANR	5645893	Identifier	r_write_le32		5645876	0					
ANR	5645894	ArgumentList	d		5645876	1					
ANR	5645895	Argument	d		5645876	0					
ANR	5645896	Identifier	d		5645876	0					
ANR	5645897	Argument	val		5645876	1					
ANR	5645898	Identifier	val		5645876	0					
ANR	5645899	ReturnType	static inline void		5645876	1					
ANR	5645900	Identifier	r_write_at_le32		5645876	2					
ANR	5645901	ParameterList	"void * dest , ut32 val , size_t offset"		5645876	3					
ANR	5645902	Parameter	void * dest	193:35:4681:4690	5645876	0	True				
ANR	5645903	ParameterType	void *		5645876	0					
ANR	5645904	Identifier	dest		5645876	1					
ANR	5645905	Parameter	ut32 val	193:47:4693:4700	5645876	1	True				
ANR	5645906	ParameterType	ut32		5645876	0					
ANR	5645907	Identifier	val		5645876	1					
ANR	5645908	Parameter	size_t offset	193:57:4703:4715	5645876	2	True				
ANR	5645909	ParameterType	size_t		5645876	0					
ANR	5645910	Identifier	offset		5645876	1					
ANR	5645911	CFGEntryNode	ENTRY		5645876		True				
ANR	5645912	CFGExitNode	EXIT		5645876		True				
ANR	5645913	Symbol	val		5645876						
ANR	5645914	Symbol	offset		5645876						
ANR	5645915	Symbol	d		5645876						
ANR	5645916	Symbol	dest		5645876						
ANR	5645917	Function	r_read_le64	198:0:4780:4936							
ANR	5645918	FunctionDef	r_read_le64 (const void * src)		5645917	0					
ANR	5645919	CompoundStatement		198:48:4828:4936	5645917	0					
ANR	5645920	IdentifierDeclStatement	"ut64 val = ( ( ut64 ) ( r_read_at_le32 ( src , sizeof ( ut32 ) ) ) ) << 32 ;"	199:1:4831:4894	5645917	0	True				
ANR	5645921	IdentifierDecl	"val = ( ( ut64 ) ( r_read_at_le32 ( src , sizeof ( ut32 ) ) ) ) << 32"		5645917	0					
ANR	5645922	IdentifierDeclType	ut64		5645917	0					
ANR	5645923	Identifier	val		5645917	1					
ANR	5645924	AssignmentExpression	"val = ( ( ut64 ) ( r_read_at_le32 ( src , sizeof ( ut32 ) ) ) ) << 32"		5645917	2		=			
ANR	5645925	Identifier	val		5645917	0					
ANR	5645926	ShiftExpression	"( ( ut64 ) ( r_read_at_le32 ( src , sizeof ( ut32 ) ) ) ) << 32"		5645917	1		<<			
ANR	5645927	CastExpression	"( ut64 ) ( r_read_at_le32 ( src , sizeof ( ut32 ) ) )"		5645917	0					
ANR	5645928	CastTarget	ut64		5645917	0					
ANR	5645929	CallExpression	"r_read_at_le32 ( src , sizeof ( ut32 ) )"		5645917	1					
ANR	5645930	Callee	r_read_at_le32		5645917	0					
ANR	5645931	Identifier	r_read_at_le32		5645917	0					
ANR	5645932	ArgumentList	src		5645917	1					
ANR	5645933	Argument	src		5645917	0					
ANR	5645934	Identifier	src		5645917	0					
ANR	5645935	Argument	sizeof ( ut32 )		5645917	1					
ANR	5645936	SizeofExpression	sizeof ( ut32 )		5645917	0					
ANR	5645937	Sizeof	sizeof		5645917	0					
ANR	5645938	SizeofOperand	ut32		5645917	1					
ANR	5645939	PrimaryExpression	32		5645917	1					
ANR	5645940	ExpressionStatement	val |= r_read_le32 ( src )	200:1:4897:4921	5645917	1	True				
ANR	5645941	AssignmentExpression	val |= r_read_le32 ( src )		5645917	0		|=			
ANR	5645942	Identifier	val		5645917	0					
ANR	5645943	CallExpression	r_read_le32 ( src )		5645917	1					
ANR	5645944	Callee	r_read_le32		5645917	0					
ANR	5645945	Identifier	r_read_le32		5645917	0					
ANR	5645946	ArgumentList	src		5645917	1					
ANR	5645947	Argument	src		5645917	0					
ANR	5645948	Identifier	src		5645917	0					
ANR	5645949	ReturnStatement	return val ;	201:1:4924:4934	5645917	2	True				
ANR	5645950	Identifier	val		5645917	0					
ANR	5645951	ReturnType	static inline ut64		5645917	1					
ANR	5645952	Identifier	r_read_le64		5645917	2					
ANR	5645953	ParameterList	const void * src		5645917	3					
ANR	5645954	Parameter	const void * src	198:31:4811:4825	5645917	0	True				
ANR	5645955	ParameterType	const void *		5645917	0					
ANR	5645956	Identifier	src		5645917	1					
ANR	5645957	CFGEntryNode	ENTRY		5645917		True				
ANR	5645958	CFGExitNode	EXIT		5645917		True				
ANR	5645959	Symbol	val		5645917						
ANR	5645960	Symbol	r_read_le32		5645917						
ANR	5645961	Symbol	src		5645917						
ANR	5645962	Symbol	r_read_at_le32		5645917						
ANR	5645963	Function	r_read_at_le64	204:0:4939:5076							
ANR	5645964	FunctionDef	"r_read_at_le64 (const void * src , size_t offset)"		5645963	0					
ANR	5645965	CompoundStatement		204:66:5005:5076	5645963	0					
ANR	5645966	IdentifierDeclStatement	const ut8 * s = ( ( const ut8 * ) src ) + offset ;	205:1:5008:5049	5645963	0	True				
ANR	5645967	IdentifierDecl	* s = ( ( const ut8 * ) src ) + offset		5645963	0					
ANR	5645968	IdentifierDeclType	const ut8 *		5645963	0					
ANR	5645969	Identifier	s		5645963	1					
ANR	5645970	AssignmentExpression	* s = ( ( const ut8 * ) src ) + offset		5645963	2		=			
ANR	5645971	Identifier	s		5645963	0					
ANR	5645972	AdditiveExpression	( ( const ut8 * ) src ) + offset		5645963	1		+			
ANR	5645973	CastExpression	( const ut8 * ) src		5645963	0					
ANR	5645974	CastTarget	const ut8 *		5645963	0					
ANR	5645975	Identifier	src		5645963	1					
ANR	5645976	Identifier	offset		5645963	1					
ANR	5645977	ReturnStatement	return r_read_le64 ( s ) ;	206:1:5052:5074	5645963	1	True				
ANR	5645978	CallExpression	r_read_le64 ( s )		5645963	0					
ANR	5645979	Callee	r_read_le64		5645963	0					
ANR	5645980	Identifier	r_read_le64		5645963	0					
ANR	5645981	ArgumentList	s		5645963	1					
ANR	5645982	Argument	s		5645963	0					
ANR	5645983	Identifier	s		5645963	0					
ANR	5645984	ReturnType	static inline ut64		5645963	1					
ANR	5645985	Identifier	r_read_at_le64		5645963	2					
ANR	5645986	ParameterList	"const void * src , size_t offset"		5645963	3					
ANR	5645987	Parameter	const void * src	204:34:4973:4987	5645963	0	True				
ANR	5645988	ParameterType	const void *		5645963	0					
ANR	5645989	Identifier	src		5645963	1					
ANR	5645990	Parameter	size_t offset	204:51:4990:5002	5645963	1	True				
ANR	5645991	ParameterType	size_t		5645963	0					
ANR	5645992	Identifier	offset		5645963	1					
ANR	5645993	CFGEntryNode	ENTRY		5645963		True				
ANR	5645994	CFGExitNode	EXIT		5645963		True				
ANR	5645995	Symbol	s		5645963						
ANR	5645996	Symbol	offset		5645963						
ANR	5645997	Symbol	r_read_le64		5645963						
ANR	5645998	Symbol	src		5645963						
ANR	5645999	Function	r_write_le64	209:0:5079:5219							
ANR	5646000	FunctionDef	"r_write_le64 (void * dest , ut64 val)"		5645999	0					
ANR	5646001	CompoundStatement		209:54:5133:5219	5645999	0					
ANR	5646002	ExpressionStatement	"r_write_le32 ( dest , ( ut32 ) val )"	210:1:5136:5166	5645999	0	True				
ANR	5646003	CallExpression	"r_write_le32 ( dest , ( ut32 ) val )"		5645999	0					
ANR	5646004	Callee	r_write_le32		5645999	0					
ANR	5646005	Identifier	r_write_le32		5645999	0					
ANR	5646006	ArgumentList	dest		5645999	1					
ANR	5646007	Argument	dest		5645999	0					
ANR	5646008	Identifier	dest		5645999	0					
ANR	5646009	Argument	( ut32 ) val		5645999	1					
ANR	5646010	CastExpression	( ut32 ) val		5645999	0					
ANR	5646011	CastTarget	ut32		5645999	0					
ANR	5646012	Identifier	val		5645999	1					
ANR	5646013	ExpressionStatement	"r_write_at_le32 ( dest , val >> 32 , sizeof ( ut32 ) )"	211:1:5169:5217	5645999	1	True				
ANR	5646014	CallExpression	"r_write_at_le32 ( dest , val >> 32 , sizeof ( ut32 ) )"		5645999	0					
ANR	5646015	Callee	r_write_at_le32		5645999	0					
ANR	5646016	Identifier	r_write_at_le32		5645999	0					
ANR	5646017	ArgumentList	dest		5645999	1					
ANR	5646018	Argument	dest		5645999	0					
ANR	5646019	Identifier	dest		5645999	0					
ANR	5646020	Argument	val >> 32		5645999	1					
ANR	5646021	ShiftExpression	val >> 32		5645999	0		>>			
ANR	5646022	Identifier	val		5645999	0					
ANR	5646023	PrimaryExpression	32		5645999	1					
ANR	5646024	Argument	sizeof ( ut32 )		5645999	2					
ANR	5646025	SizeofExpression	sizeof ( ut32 )		5645999	0					
ANR	5646026	Sizeof	sizeof		5645999	0					
ANR	5646027	SizeofOperand	ut32		5645999	1					
ANR	5646028	ReturnType	static inline void		5645999	1					
ANR	5646029	Identifier	r_write_le64		5645999	2					
ANR	5646030	ParameterList	"void * dest , ut64 val"		5645999	3					
ANR	5646031	Parameter	void * dest	209:32:5111:5120	5645999	0	True				
ANR	5646032	ParameterType	void *		5645999	0					
ANR	5646033	Identifier	dest		5645999	1					
ANR	5646034	Parameter	ut64 val	209:44:5123:5130	5645999	1	True				
ANR	5646035	ParameterType	ut64		5645999	0					
ANR	5646036	Identifier	val		5645999	1					
ANR	5646037	CFGEntryNode	ENTRY		5645999		True				
ANR	5646038	CFGExitNode	EXIT		5645999		True				
ANR	5646039	Symbol	val		5645999						
ANR	5646040	Symbol	dest		5645999						
ANR	5646041	Function	r_write_at_le64	214:0:5222:5351							
ANR	5646042	FunctionDef	"r_write_at_le64 (void * dest , ut64 val , size_t offset)"		5646041	0					
ANR	5646043	CompoundStatement		214:72:5294:5351	5646041	0					
ANR	5646044	IdentifierDeclStatement	ut8 * d = ( ut8 * ) dest + offset ;	215:1:5297:5325	5646041	0	True				
ANR	5646045	IdentifierDecl	* d = ( ut8 * ) dest + offset		5646041	0					
ANR	5646046	IdentifierDeclType	ut8 *		5646041	0					
ANR	5646047	Identifier	d		5646041	1					
ANR	5646048	AssignmentExpression	* d = ( ut8 * ) dest + offset		5646041	2		=			
ANR	5646049	Identifier	d		5646041	0					
ANR	5646050	AdditiveExpression	( ut8 * ) dest + offset		5646041	1		+			
ANR	5646051	CastExpression	( ut8 * ) dest		5646041	0					
ANR	5646052	CastTarget	ut8 *		5646041	0					
ANR	5646053	Identifier	dest		5646041	1					
ANR	5646054	Identifier	offset		5646041	1					
ANR	5646055	ExpressionStatement	"r_write_le64 ( d , val )"	216:1:5328:5349	5646041	1	True				
ANR	5646056	CallExpression	"r_write_le64 ( d , val )"		5646041	0					
ANR	5646057	Callee	r_write_le64		5646041	0					
ANR	5646058	Identifier	r_write_le64		5646041	0					
ANR	5646059	ArgumentList	d		5646041	1					
ANR	5646060	Argument	d		5646041	0					
ANR	5646061	Identifier	d		5646041	0					
ANR	5646062	Argument	val		5646041	1					
ANR	5646063	Identifier	val		5646041	0					
ANR	5646064	ReturnType	static inline void		5646041	1					
ANR	5646065	Identifier	r_write_at_le64		5646041	2					
ANR	5646066	ParameterList	"void * dest , ut64 val , size_t offset"		5646041	3					
ANR	5646067	Parameter	void * dest	214:35:5257:5266	5646041	0	True				
ANR	5646068	ParameterType	void *		5646041	0					
ANR	5646069	Identifier	dest		5646041	1					
ANR	5646070	Parameter	ut64 val	214:47:5269:5276	5646041	1	True				
ANR	5646071	ParameterType	ut64		5646041	0					
ANR	5646072	Identifier	val		5646041	1					
ANR	5646073	Parameter	size_t offset	214:57:5279:5291	5646041	2	True				
ANR	5646074	ParameterType	size_t		5646041	0					
ANR	5646075	Identifier	offset		5646041	1					
ANR	5646076	CFGEntryNode	ENTRY		5646041		True				
ANR	5646077	CFGExitNode	EXIT		5646041		True				
ANR	5646078	Symbol	val		5646041						
ANR	5646079	Symbol	offset		5646041						
ANR	5646080	Symbol	d		5646041						
ANR	5646081	Symbol	dest		5646041						
ANR	5646082	Function	r_read_me8	221:0:5386:5476							
ANR	5646083	FunctionDef	r_read_me8 (const void * src)		5646082	0					
ANR	5646084	CompoundStatement		221:46:5432:5476	5646082	0					
ANR	5646085	ReturnStatement	return src ? r_read_ble8 ( src ) : UT8_MAX ;	222:1:5435:5474	5646082	0	True				
ANR	5646086	ConditionalExpression	src ? r_read_ble8 ( src ) : UT8_MAX		5646082	0					
ANR	5646087	Condition	src		5646082	0					
ANR	5646088	Identifier	src		5646082	0					
ANR	5646089	CallExpression	r_read_ble8 ( src )		5646082	1					
ANR	5646090	Callee	r_read_ble8		5646082	0					
ANR	5646091	Identifier	r_read_ble8		5646082	0					
ANR	5646092	ArgumentList	src		5646082	1					
ANR	5646093	Argument	src		5646082	0					
ANR	5646094	Identifier	src		5646082	0					
ANR	5646095	Identifier	UT8_MAX		5646082	2					
ANR	5646096	ReturnType	static inline ut8		5646082	1					
ANR	5646097	Identifier	r_read_me8		5646082	2					
ANR	5646098	ParameterList	const void * src		5646082	3					
ANR	5646099	Parameter	const void * src	221:29:5415:5429	5646082	0	True				
ANR	5646100	ParameterType	const void *		5646082	0					
ANR	5646101	Identifier	src		5646082	1					
ANR	5646102	CFGEntryNode	ENTRY		5646082		True				
ANR	5646103	CFGExitNode	EXIT		5646082		True				
ANR	5646104	Symbol	UT8_MAX		5646082						
ANR	5646105	Symbol	src		5646082						
ANR	5646106	Symbol	r_read_ble8		5646082						
ANR	5646107	Function	r_read_at_me8	225:0:5479:5583							
ANR	5646108	FunctionDef	"r_read_at_me8 (const void * src , size_t offset)"		5646107	0					
ANR	5646109	CompoundStatement		225:64:5543:5583	5646107	0					
ANR	5646110	ReturnStatement	"return r_read_at_ble8 ( src , offset ) ;"	226:1:5546:5581	5646107	0	True				
ANR	5646111	CallExpression	"r_read_at_ble8 ( src , offset )"		5646107	0					
ANR	5646112	Callee	r_read_at_ble8		5646107	0					
ANR	5646113	Identifier	r_read_at_ble8		5646107	0					
ANR	5646114	ArgumentList	src		5646107	1					
ANR	5646115	Argument	src		5646107	0					
ANR	5646116	Identifier	src		5646107	0					
ANR	5646117	Argument	offset		5646107	1					
ANR	5646118	Identifier	offset		5646107	0					
ANR	5646119	ReturnType	static inline ut8		5646107	1					
ANR	5646120	Identifier	r_read_at_me8		5646107	2					
ANR	5646121	ParameterList	"const void * src , size_t offset"		5646107	3					
ANR	5646122	Parameter	const void * src	225:32:5511:5525	5646107	0	True				
ANR	5646123	ParameterType	const void *		5646107	0					
ANR	5646124	Identifier	src		5646107	1					
ANR	5646125	Parameter	size_t offset	225:49:5528:5540	5646107	1	True				
ANR	5646126	ParameterType	size_t		5646107	0					
ANR	5646127	Identifier	offset		5646107	1					
ANR	5646128	CFGEntryNode	ENTRY		5646107		True				
ANR	5646129	CFGExitNode	EXIT		5646107		True				
ANR	5646130	Symbol	r_read_at_ble8		5646107						
ANR	5646131	Symbol	offset		5646107						
ANR	5646132	Symbol	src		5646107						
ANR	5646133	Function	r_write_me8	229:0:5586:5667							
ANR	5646134	FunctionDef	"r_write_me8 (void * dest , ut8 val)"		5646133	0					
ANR	5646135	CompoundStatement		229:52:5638:5667	5646133	0					
ANR	5646136	ExpressionStatement	"r_write_ble8 ( dest , val )"	230:1:5641:5665	5646133	0	True				
ANR	5646137	CallExpression	"r_write_ble8 ( dest , val )"		5646133	0					
ANR	5646138	Callee	r_write_ble8		5646133	0					
ANR	5646139	Identifier	r_write_ble8		5646133	0					
ANR	5646140	ArgumentList	dest		5646133	1					
ANR	5646141	Argument	dest		5646133	0					
ANR	5646142	Identifier	dest		5646133	0					
ANR	5646143	Argument	val		5646133	1					
ANR	5646144	Identifier	val		5646133	0					
ANR	5646145	ReturnType	static inline void		5646133	1					
ANR	5646146	Identifier	r_write_me8		5646133	2					
ANR	5646147	ParameterList	"void * dest , ut8 val"		5646133	3					
ANR	5646148	Parameter	void * dest	229:31:5617:5626	5646133	0	True				
ANR	5646149	ParameterType	void *		5646133	0					
ANR	5646150	Identifier	dest		5646133	1					
ANR	5646151	Parameter	ut8 val	229:43:5629:5635	5646133	1	True				
ANR	5646152	ParameterType	ut8		5646133	0					
ANR	5646153	Identifier	val		5646133	1					
ANR	5646154	CFGEntryNode	ENTRY		5646133		True				
ANR	5646155	CFGExitNode	EXIT		5646133		True				
ANR	5646156	Symbol	val		5646133						
ANR	5646157	Symbol	dest		5646133						
ANR	5646158	Function	r_write_at_me8	233:0:5670:5780							
ANR	5646159	FunctionDef	"r_write_at_me8 (void * dest , ut8 val , size_t offset)"		5646158	0					
ANR	5646160	CompoundStatement		233:70:5740:5780	5646158	0					
ANR	5646161	ExpressionStatement	"r_write_at_ble8 ( dest , val , offset )"	234:1:5743:5778	5646158	0	True				
ANR	5646162	CallExpression	"r_write_at_ble8 ( dest , val , offset )"		5646158	0					
ANR	5646163	Callee	r_write_at_ble8		5646158	0					
ANR	5646164	Identifier	r_write_at_ble8		5646158	0					
ANR	5646165	ArgumentList	dest		5646158	1					
ANR	5646166	Argument	dest		5646158	0					
ANR	5646167	Identifier	dest		5646158	0					
ANR	5646168	Argument	val		5646158	1					
ANR	5646169	Identifier	val		5646158	0					
ANR	5646170	Argument	offset		5646158	2					
ANR	5646171	Identifier	offset		5646158	0					
ANR	5646172	ReturnType	static inline void		5646158	1					
ANR	5646173	Identifier	r_write_at_me8		5646158	2					
ANR	5646174	ParameterList	"void * dest , ut8 val , size_t offset"		5646158	3					
ANR	5646175	Parameter	void * dest	233:34:5704:5713	5646158	0	True				
ANR	5646176	ParameterType	void *		5646158	0					
ANR	5646177	Identifier	dest		5646158	1					
ANR	5646178	Parameter	ut8 val	233:46:5716:5722	5646158	1	True				
ANR	5646179	ParameterType	ut8		5646158	0					
ANR	5646180	Identifier	val		5646158	1					
ANR	5646181	Parameter	size_t offset	233:55:5725:5737	5646158	2	True				
ANR	5646182	ParameterType	size_t		5646158	0					
ANR	5646183	Identifier	offset		5646158	1					
ANR	5646184	CFGEntryNode	ENTRY		5646158		True				
ANR	5646185	CFGExitNode	EXIT		5646158		True				
ANR	5646186	Symbol	val		5646158						
ANR	5646187	Symbol	offset		5646158						
ANR	5646188	Symbol	dest		5646158						
ANR	5646189	Function	r_read_me16	237:0:5783:5952							
ANR	5646190	FunctionDef	r_read_me16 (const void * src)		5646189	0					
ANR	5646191	CompoundStatement		237:48:5831:5952	5646189	0					
ANR	5646192	IfStatement	if ( ! src )		5646189	0					
ANR	5646193	Condition	! src	238:5:5838:5841	5646189	0	True				
ANR	5646194	UnaryOperationExpression	! src		5646189	0					
ANR	5646195	UnaryOperator	!		5646189	0					
ANR	5646196	Identifier	src		5646189	1					
ANR	5646197	CompoundStatement		2:11:12:12	5646189	1					
ANR	5646198	ReturnStatement	return UT16_MAX ;	239:2:5848:5863	5646189	0	True				
ANR	5646199	Identifier	UT16_MAX		5646189	0					
ANR	5646200	IdentifierDeclStatement	const ut8 * s = ( const ut8 * ) src ;	241:1:5869:5899	5646189	1	True				
ANR	5646201	IdentifierDecl	* s = ( const ut8 * ) src		5646189	0					
ANR	5646202	IdentifierDeclType	const ut8 *		5646189	0					
ANR	5646203	Identifier	s		5646189	1					
ANR	5646204	AssignmentExpression	* s = ( const ut8 * ) src		5646189	2		=			
ANR	5646205	Identifier	s		5646189	0					
ANR	5646206	CastExpression	( const ut8 * ) src		5646189	1					
ANR	5646207	CastTarget	const ut8 *		5646189	0					
ANR	5646208	Identifier	src		5646189	1					
ANR	5646209	ReturnStatement	return ( ( ( ut16 ) s [ 0 ] ) << 8 ) | ( ( ( ut16 ) s [ 1 ] ) << 0 ) ;	242:1:5902:5950	5646189	2	True				
ANR	5646210	InclusiveOrExpression	( ( ( ut16 ) s [ 0 ] ) << 8 ) | ( ( ( ut16 ) s [ 1 ] ) << 0 )		5646189	0		|			
ANR	5646211	ShiftExpression	( ( ut16 ) s [ 0 ] ) << 8		5646189	0		<<			
ANR	5646212	CastExpression	( ut16 ) s [ 0 ]		5646189	0					
ANR	5646213	CastTarget	ut16		5646189	0					
ANR	5646214	ArrayIndexing	s [ 0 ]		5646189	1					
ANR	5646215	Identifier	s		5646189	0					
ANR	5646216	PrimaryExpression	0		5646189	1					
ANR	5646217	PrimaryExpression	8		5646189	1					
ANR	5646218	ShiftExpression	( ( ut16 ) s [ 1 ] ) << 0		5646189	1		<<			
ANR	5646219	CastExpression	( ut16 ) s [ 1 ]		5646189	0					
ANR	5646220	CastTarget	ut16		5646189	0					
ANR	5646221	ArrayIndexing	s [ 1 ]		5646189	1					
ANR	5646222	Identifier	s		5646189	0					
ANR	5646223	PrimaryExpression	1		5646189	1					
ANR	5646224	PrimaryExpression	0		5646189	1					
ANR	5646225	ReturnType	static inline ut16		5646189	1					
ANR	5646226	Identifier	r_read_me16		5646189	2					
ANR	5646227	ParameterList	const void * src		5646189	3					
ANR	5646228	Parameter	const void * src	237:31:5814:5828	5646189	0	True				
ANR	5646229	ParameterType	const void *		5646189	0					
ANR	5646230	Identifier	src		5646189	1					
ANR	5646231	CFGEntryNode	ENTRY		5646189		True				
ANR	5646232	CFGExitNode	EXIT		5646189		True				
ANR	5646233	Symbol	s		5646189						
ANR	5646234	Symbol	src		5646189						
ANR	5646235	Symbol	UT16_MAX		5646189						
ANR	5646236	Symbol	* s		5646189						
ANR	5646237	Function	r_read_at_me16	245:0:5955:6125							
ANR	5646238	FunctionDef	"r_read_at_me16 (const void * src , size_t offset)"		5646237	0					
ANR	5646239	CompoundStatement		245:66:6021:6125	5646237	0					
ANR	5646240	IfStatement	if ( ! src )		5646237	0					
ANR	5646241	Condition	! src	246:5:6028:6031	5646237	0	True				
ANR	5646242	UnaryOperationExpression	! src		5646237	0					
ANR	5646243	UnaryOperator	!		5646237	0					
ANR	5646244	Identifier	src		5646237	1					
ANR	5646245	CompoundStatement		2:11:12:12	5646237	1					
ANR	5646246	ReturnStatement	return UT16_MAX ;	247:2:6038:6053	5646237	0	True				
ANR	5646247	Identifier	UT16_MAX		5646237	0					
ANR	5646248	IdentifierDeclStatement	const ut8 * s = ( const ut8 * ) src + offset ;	249:1:6059:6098	5646237	1	True				
ANR	5646249	IdentifierDecl	* s = ( const ut8 * ) src + offset		5646237	0					
ANR	5646250	IdentifierDeclType	const ut8 *		5646237	0					
ANR	5646251	Identifier	s		5646237	1					
ANR	5646252	AssignmentExpression	* s = ( const ut8 * ) src + offset		5646237	2		=			
ANR	5646253	Identifier	s		5646237	0					
ANR	5646254	AdditiveExpression	( const ut8 * ) src + offset		5646237	1		+			
ANR	5646255	CastExpression	( const ut8 * ) src		5646237	0					
ANR	5646256	CastTarget	const ut8 *		5646237	0					
ANR	5646257	Identifier	src		5646237	1					
ANR	5646258	Identifier	offset		5646237	1					
ANR	5646259	ReturnStatement	return r_read_me16 ( s ) ;	250:1:6101:6123	5646237	2	True				
ANR	5646260	CallExpression	r_read_me16 ( s )		5646237	0					
ANR	5646261	Callee	r_read_me16		5646237	0					
ANR	5646262	Identifier	r_read_me16		5646237	0					
ANR	5646263	ArgumentList	s		5646237	1					
ANR	5646264	Argument	s		5646237	0					
ANR	5646265	Identifier	s		5646237	0					
ANR	5646266	ReturnType	static inline ut16		5646237	1					
ANR	5646267	Identifier	r_read_at_me16		5646237	2					
ANR	5646268	ParameterList	"const void * src , size_t offset"		5646237	3					
ANR	5646269	Parameter	const void * src	245:34:5989:6003	5646237	0	True				
ANR	5646270	ParameterType	const void *		5646237	0					
ANR	5646271	Identifier	src		5646237	1					
ANR	5646272	Parameter	size_t offset	245:51:6006:6018	5646237	1	True				
ANR	5646273	ParameterType	size_t		5646237	0					
ANR	5646274	Identifier	offset		5646237	1					
ANR	5646275	CFGEntryNode	ENTRY		5646237		True				
ANR	5646276	CFGExitNode	EXIT		5646237		True				
ANR	5646277	Symbol	s		5646237						
ANR	5646278	Symbol	offset		5646237						
ANR	5646279	Symbol	src		5646237						
ANR	5646280	Symbol	UT16_MAX		5646237						
ANR	5646281	Symbol	r_read_me16		5646237						
ANR	5646282	Function	r_write_me16	253:0:6128:6263							
ANR	5646283	FunctionDef	"r_write_me16 (void * dest , ut16 val)"		5646282	0					
ANR	5646284	CompoundStatement		253:54:6182:6263	5646282	0					
ANR	5646285	ExpressionStatement	"r_write_me8 ( dest , val >> 8 )"	254:1:6185:6213	5646282	0	True				
ANR	5646286	CallExpression	"r_write_me8 ( dest , val >> 8 )"		5646282	0					
ANR	5646287	Callee	r_write_me8		5646282	0					
ANR	5646288	Identifier	r_write_me8		5646282	0					
ANR	5646289	ArgumentList	dest		5646282	1					
ANR	5646290	Argument	dest		5646282	0					
ANR	5646291	Identifier	dest		5646282	0					
ANR	5646292	Argument	val >> 8		5646282	1					
ANR	5646293	ShiftExpression	val >> 8		5646282	0		>>			
ANR	5646294	Identifier	val		5646282	0					
ANR	5646295	PrimaryExpression	8		5646282	1					
ANR	5646296	ExpressionStatement	"r_write_at_me8 ( dest , ( ut8 ) val , sizeof ( ut8 ) )"	255:1:6216:6261	5646282	1	True				
ANR	5646297	CallExpression	"r_write_at_me8 ( dest , ( ut8 ) val , sizeof ( ut8 ) )"		5646282	0					
ANR	5646298	Callee	r_write_at_me8		5646282	0					
ANR	5646299	Identifier	r_write_at_me8		5646282	0					
ANR	5646300	ArgumentList	dest		5646282	1					
ANR	5646301	Argument	dest		5646282	0					
ANR	5646302	Identifier	dest		5646282	0					
ANR	5646303	Argument	( ut8 ) val		5646282	1					
ANR	5646304	CastExpression	( ut8 ) val		5646282	0					
ANR	5646305	CastTarget	ut8		5646282	0					
ANR	5646306	Identifier	val		5646282	1					
ANR	5646307	Argument	sizeof ( ut8 )		5646282	2					
ANR	5646308	SizeofExpression	sizeof ( ut8 )		5646282	0					
ANR	5646309	Sizeof	sizeof		5646282	0					
ANR	5646310	SizeofOperand	ut8		5646282	1					
ANR	5646311	ReturnType	static inline void		5646282	1					
ANR	5646312	Identifier	r_write_me16		5646282	2					
ANR	5646313	ParameterList	"void * dest , ut16 val"		5646282	3					
ANR	5646314	Parameter	void * dest	253:32:6160:6169	5646282	0	True				
ANR	5646315	ParameterType	void *		5646282	0					
ANR	5646316	Identifier	dest		5646282	1					
ANR	5646317	Parameter	ut16 val	253:44:6172:6179	5646282	1	True				
ANR	5646318	ParameterType	ut16		5646282	0					
ANR	5646319	Identifier	val		5646282	1					
ANR	5646320	CFGEntryNode	ENTRY		5646282		True				
ANR	5646321	CFGExitNode	EXIT		5646282		True				
ANR	5646322	Symbol	val		5646282						
ANR	5646323	Symbol	dest		5646282						
ANR	5646324	Function	r_write_at_me16	258:0:6266:6396							
ANR	5646325	FunctionDef	"r_write_at_me16 (void * dest , ut16 val , size_t offset)"		5646324	0					
ANR	5646326	CompoundStatement		258:72:6338:6396	5646324	0					
ANR	5646327	IdentifierDeclStatement	ut8 * d = ( ut8 * ) dest + offset ;	259:1:6341:6370	5646324	0	True				
ANR	5646328	IdentifierDecl	* d = ( ut8 * ) dest + offset		5646324	0					
ANR	5646329	IdentifierDeclType	ut8 *		5646324	0					
ANR	5646330	Identifier	d		5646324	1					
ANR	5646331	AssignmentExpression	* d = ( ut8 * ) dest + offset		5646324	2		=			
ANR	5646332	Identifier	d		5646324	0					
ANR	5646333	AdditiveExpression	( ut8 * ) dest + offset		5646324	1		+			
ANR	5646334	CastExpression	( ut8 * ) dest		5646324	0					
ANR	5646335	CastTarget	ut8 *		5646324	0					
ANR	5646336	Identifier	dest		5646324	1					
ANR	5646337	Identifier	offset		5646324	1					
ANR	5646338	ExpressionStatement	"r_write_me16 ( d , val )"	260:1:6373:6394	5646324	1	True				
ANR	5646339	CallExpression	"r_write_me16 ( d , val )"		5646324	0					
ANR	5646340	Callee	r_write_me16		5646324	0					
ANR	5646341	Identifier	r_write_me16		5646324	0					
ANR	5646342	ArgumentList	d		5646324	1					
ANR	5646343	Argument	d		5646324	0					
ANR	5646344	Identifier	d		5646324	0					
ANR	5646345	Argument	val		5646324	1					
ANR	5646346	Identifier	val		5646324	0					
ANR	5646347	ReturnType	static inline void		5646324	1					
ANR	5646348	Identifier	r_write_at_me16		5646324	2					
ANR	5646349	ParameterList	"void * dest , ut16 val , size_t offset"		5646324	3					
ANR	5646350	Parameter	void * dest	258:35:6301:6310	5646324	0	True				
ANR	5646351	ParameterType	void *		5646324	0					
ANR	5646352	Identifier	dest		5646324	1					
ANR	5646353	Parameter	ut16 val	258:47:6313:6320	5646324	1	True				
ANR	5646354	ParameterType	ut16		5646324	0					
ANR	5646355	Identifier	val		5646324	1					
ANR	5646356	Parameter	size_t offset	258:57:6323:6335	5646324	2	True				
ANR	5646357	ParameterType	size_t		5646324	0					
ANR	5646358	Identifier	offset		5646324	1					
ANR	5646359	CFGEntryNode	ENTRY		5646324		True				
ANR	5646360	CFGExitNode	EXIT		5646324		True				
ANR	5646361	Symbol	val		5646324						
ANR	5646362	Symbol	offset		5646324						
ANR	5646363	Symbol	d		5646324						
ANR	5646364	Symbol	dest		5646324						
ANR	5646365	Function	r_read_me32	263:0:6399:6616							
ANR	5646366	FunctionDef	r_read_me32 (const void * src)		5646365	0					
ANR	5646367	CompoundStatement		263:48:6447:6616	5646365	0					
ANR	5646368	IfStatement	if ( ! src )		5646365	0					
ANR	5646369	Condition	! src	264:5:6454:6457	5646365	0	True				
ANR	5646370	UnaryOperationExpression	! src		5646365	0					
ANR	5646371	UnaryOperator	!		5646365	0					
ANR	5646372	Identifier	src		5646365	1					
ANR	5646373	CompoundStatement		2:11:12:12	5646365	1					
ANR	5646374	ReturnStatement	return UT32_MAX ;	265:2:6464:6479	5646365	0	True				
ANR	5646375	Identifier	UT32_MAX		5646365	0					
ANR	5646376	IdentifierDeclStatement	const ut8 * s = ( const ut8 * ) src ;	267:1:6485:6515	5646365	1	True				
ANR	5646377	IdentifierDecl	* s = ( const ut8 * ) src		5646365	0					
ANR	5646378	IdentifierDeclType	const ut8 *		5646365	0					
ANR	5646379	Identifier	s		5646365	1					
ANR	5646380	AssignmentExpression	* s = ( const ut8 * ) src		5646365	2		=			
ANR	5646381	Identifier	s		5646365	0					
ANR	5646382	CastExpression	( const ut8 * ) src		5646365	1					
ANR	5646383	CastTarget	const ut8 *		5646365	0					
ANR	5646384	Identifier	src		5646365	1					
ANR	5646385	ReturnStatement	return ( ( ( ut32 ) s [ 2 ] ) << 24 ) | ( ( ( ut32 ) s [ 1 ] ) << 16 ) | ( ( ( ut32 ) s [ 0 ] ) << 8 ) | ( ( ( ut32 ) s [ 1 ] ) << 0 ) ;	268:1:6518:6614	5646365	2	True				
ANR	5646386	InclusiveOrExpression	( ( ( ut32 ) s [ 2 ] ) << 24 ) | ( ( ( ut32 ) s [ 1 ] ) << 16 ) | ( ( ( ut32 ) s [ 0 ] ) << 8 ) | ( ( ( ut32 ) s [ 1 ] ) << 0 )		5646365	0		|			
ANR	5646387	ShiftExpression	( ( ut32 ) s [ 2 ] ) << 24		5646365	0		<<			
ANR	5646388	CastExpression	( ut32 ) s [ 2 ]		5646365	0					
ANR	5646389	CastTarget	ut32		5646365	0					
ANR	5646390	ArrayIndexing	s [ 2 ]		5646365	1					
ANR	5646391	Identifier	s		5646365	0					
ANR	5646392	PrimaryExpression	2		5646365	1					
ANR	5646393	PrimaryExpression	24		5646365	1					
ANR	5646394	InclusiveOrExpression	( ( ( ut32 ) s [ 1 ] ) << 16 ) | ( ( ( ut32 ) s [ 0 ] ) << 8 ) | ( ( ( ut32 ) s [ 1 ] ) << 0 )		5646365	1		|			
ANR	5646395	ShiftExpression	( ( ut32 ) s [ 1 ] ) << 16		5646365	0		<<			
ANR	5646396	CastExpression	( ut32 ) s [ 1 ]		5646365	0					
ANR	5646397	CastTarget	ut32		5646365	0					
ANR	5646398	ArrayIndexing	s [ 1 ]		5646365	1					
ANR	5646399	Identifier	s		5646365	0					
ANR	5646400	PrimaryExpression	1		5646365	1					
ANR	5646401	PrimaryExpression	16		5646365	1					
ANR	5646402	InclusiveOrExpression	( ( ( ut32 ) s [ 0 ] ) << 8 ) | ( ( ( ut32 ) s [ 1 ] ) << 0 )		5646365	1		|			
ANR	5646403	ShiftExpression	( ( ut32 ) s [ 0 ] ) << 8		5646365	0		<<			
ANR	5646404	CastExpression	( ut32 ) s [ 0 ]		5646365	0					
ANR	5646405	CastTarget	ut32		5646365	0					
ANR	5646406	ArrayIndexing	s [ 0 ]		5646365	1					
ANR	5646407	Identifier	s		5646365	0					
ANR	5646408	PrimaryExpression	0		5646365	1					
ANR	5646409	PrimaryExpression	8		5646365	1					
ANR	5646410	ShiftExpression	( ( ut32 ) s [ 1 ] ) << 0		5646365	1		<<			
ANR	5646411	CastExpression	( ut32 ) s [ 1 ]		5646365	0					
ANR	5646412	CastTarget	ut32		5646365	0					
ANR	5646413	ArrayIndexing	s [ 1 ]		5646365	1					
ANR	5646414	Identifier	s		5646365	0					
ANR	5646415	PrimaryExpression	1		5646365	1					
ANR	5646416	PrimaryExpression	0		5646365	1					
ANR	5646417	ReturnType	static inline ut32		5646365	1					
ANR	5646418	Identifier	r_read_me32		5646365	2					
ANR	5646419	ParameterList	const void * src		5646365	3					
ANR	5646420	Parameter	const void * src	263:31:6430:6444	5646365	0	True				
ANR	5646421	ParameterType	const void *		5646365	0					
ANR	5646422	Identifier	src		5646365	1					
ANR	5646423	CFGEntryNode	ENTRY		5646365		True				
ANR	5646424	CFGExitNode	EXIT		5646365		True				
ANR	5646425	Symbol	UT32_MAX		5646365						
ANR	5646426	Symbol	s		5646365						
ANR	5646427	Symbol	src		5646365						
ANR	5646428	Symbol	* s		5646365						
ANR	5646429	Function	r_read_at_me32	272:0:6619:6789							
ANR	5646430	FunctionDef	"r_read_at_me32 (const void * src , size_t offset)"		5646429	0					
ANR	5646431	CompoundStatement		272:66:6685:6789	5646429	0					
ANR	5646432	IfStatement	if ( ! src )		5646429	0					
ANR	5646433	Condition	! src	273:5:6692:6695	5646429	0	True				
ANR	5646434	UnaryOperationExpression	! src		5646429	0					
ANR	5646435	UnaryOperator	!		5646429	0					
ANR	5646436	Identifier	src		5646429	1					
ANR	5646437	CompoundStatement		2:11:12:12	5646429	1					
ANR	5646438	ReturnStatement	return UT32_MAX ;	274:2:6702:6717	5646429	0	True				
ANR	5646439	Identifier	UT32_MAX		5646429	0					
ANR	5646440	IdentifierDeclStatement	const ut8 * s = ( const ut8 * ) src + offset ;	276:1:6723:6762	5646429	1	True				
ANR	5646441	IdentifierDecl	* s = ( const ut8 * ) src + offset		5646429	0					
ANR	5646442	IdentifierDeclType	const ut8 *		5646429	0					
ANR	5646443	Identifier	s		5646429	1					
ANR	5646444	AssignmentExpression	* s = ( const ut8 * ) src + offset		5646429	2		=			
ANR	5646445	Identifier	s		5646429	0					
ANR	5646446	AdditiveExpression	( const ut8 * ) src + offset		5646429	1		+			
ANR	5646447	CastExpression	( const ut8 * ) src		5646429	0					
ANR	5646448	CastTarget	const ut8 *		5646429	0					
ANR	5646449	Identifier	src		5646429	1					
ANR	5646450	Identifier	offset		5646429	1					
ANR	5646451	ReturnStatement	return r_read_me32 ( s ) ;	277:1:6765:6787	5646429	2	True				
ANR	5646452	CallExpression	r_read_me32 ( s )		5646429	0					
ANR	5646453	Callee	r_read_me32		5646429	0					
ANR	5646454	Identifier	r_read_me32		5646429	0					
ANR	5646455	ArgumentList	s		5646429	1					
ANR	5646456	Argument	s		5646429	0					
ANR	5646457	Identifier	s		5646429	0					
ANR	5646458	ReturnType	static inline ut32		5646429	1					
ANR	5646459	Identifier	r_read_at_me32		5646429	2					
ANR	5646460	ParameterList	"const void * src , size_t offset"		5646429	3					
ANR	5646461	Parameter	const void * src	272:34:6653:6667	5646429	0	True				
ANR	5646462	ParameterType	const void *		5646429	0					
ANR	5646463	Identifier	src		5646429	1					
ANR	5646464	Parameter	size_t offset	272:51:6670:6682	5646429	1	True				
ANR	5646465	ParameterType	size_t		5646429	0					
ANR	5646466	Identifier	offset		5646429	1					
ANR	5646467	CFGEntryNode	ENTRY		5646429		True				
ANR	5646468	CFGExitNode	EXIT		5646429		True				
ANR	5646469	Symbol	UT32_MAX		5646429						
ANR	5646470	Symbol	s		5646429						
ANR	5646471	Symbol	offset		5646429						
ANR	5646472	Symbol	r_read_me32		5646429						
ANR	5646473	Symbol	src		5646429						
ANR	5646474	Function	r_write_me32	280:0:6792:6926							
ANR	5646475	FunctionDef	"r_write_me32 (void * dest , ut32 val)"		5646474	0					
ANR	5646476	CompoundStatement		280:54:6846:6926	5646474	0					
ANR	5646477	ExpressionStatement	"r_write_me16 ( dest , val )"	281:1:6849:6873	5646474	0	True				
ANR	5646478	CallExpression	"r_write_me16 ( dest , val )"		5646474	0					
ANR	5646479	Callee	r_write_me16		5646474	0					
ANR	5646480	Identifier	r_write_me16		5646474	0					
ANR	5646481	ArgumentList	dest		5646474	1					
ANR	5646482	Argument	dest		5646474	0					
ANR	5646483	Identifier	dest		5646474	0					
ANR	5646484	Argument	val		5646474	1					
ANR	5646485	Identifier	val		5646474	0					
ANR	5646486	ExpressionStatement	"r_write_at_me16 ( dest , val >> 16 , sizeof ( ut16 ) )"	282:1:6876:6924	5646474	1	True				
ANR	5646487	CallExpression	"r_write_at_me16 ( dest , val >> 16 , sizeof ( ut16 ) )"		5646474	0					
ANR	5646488	Callee	r_write_at_me16		5646474	0					
ANR	5646489	Identifier	r_write_at_me16		5646474	0					
ANR	5646490	ArgumentList	dest		5646474	1					
ANR	5646491	Argument	dest		5646474	0					
ANR	5646492	Identifier	dest		5646474	0					
ANR	5646493	Argument	val >> 16		5646474	1					
ANR	5646494	ShiftExpression	val >> 16		5646474	0		>>			
ANR	5646495	Identifier	val		5646474	0					
ANR	5646496	PrimaryExpression	16		5646474	1					
ANR	5646497	Argument	sizeof ( ut16 )		5646474	2					
ANR	5646498	SizeofExpression	sizeof ( ut16 )		5646474	0					
ANR	5646499	Sizeof	sizeof		5646474	0					
ANR	5646500	SizeofOperand	ut16		5646474	1					
ANR	5646501	ReturnType	static inline void		5646474	1					
ANR	5646502	Identifier	r_write_me32		5646474	2					
ANR	5646503	ParameterList	"void * dest , ut32 val"		5646474	3					
ANR	5646504	Parameter	void * dest	280:32:6824:6833	5646474	0	True				
ANR	5646505	ParameterType	void *		5646474	0					
ANR	5646506	Identifier	dest		5646474	1					
ANR	5646507	Parameter	ut32 val	280:44:6836:6843	5646474	1	True				
ANR	5646508	ParameterType	ut32		5646474	0					
ANR	5646509	Identifier	val		5646474	1					
ANR	5646510	CFGEntryNode	ENTRY		5646474		True				
ANR	5646511	CFGExitNode	EXIT		5646474		True				
ANR	5646512	Symbol	val		5646474						
ANR	5646513	Symbol	dest		5646474						
ANR	5646514	Function	r_write_at_me32	285:0:6929:7060							
ANR	5646515	FunctionDef	"r_write_at_me32 (void * dest , ut32 val , size_t offset)"		5646514	0					
ANR	5646516	CompoundStatement		285:72:7001:7060	5646514	0					
ANR	5646517	IdentifierDeclStatement	ut8 * d = ( ( ut8 * ) dest ) + offset ;	286:1:7004:7034	5646514	0	True				
ANR	5646518	IdentifierDecl	* d = ( ( ut8 * ) dest ) + offset		5646514	0					
ANR	5646519	IdentifierDeclType	ut8 *		5646514	0					
ANR	5646520	Identifier	d		5646514	1					
ANR	5646521	AssignmentExpression	* d = ( ( ut8 * ) dest ) + offset		5646514	2		=			
ANR	5646522	Identifier	d		5646514	0					
ANR	5646523	AdditiveExpression	( ( ut8 * ) dest ) + offset		5646514	1		+			
ANR	5646524	CastExpression	( ut8 * ) dest		5646514	0					
ANR	5646525	CastTarget	ut8 *		5646514	0					
ANR	5646526	Identifier	dest		5646514	1					
ANR	5646527	Identifier	offset		5646514	1					
ANR	5646528	ExpressionStatement	"r_write_me32 ( d , val )"	287:1:7037:7058	5646514	1	True				
ANR	5646529	CallExpression	"r_write_me32 ( d , val )"		5646514	0					
ANR	5646530	Callee	r_write_me32		5646514	0					
ANR	5646531	Identifier	r_write_me32		5646514	0					
ANR	5646532	ArgumentList	d		5646514	1					
ANR	5646533	Argument	d		5646514	0					
ANR	5646534	Identifier	d		5646514	0					
ANR	5646535	Argument	val		5646514	1					
ANR	5646536	Identifier	val		5646514	0					
ANR	5646537	ReturnType	static inline void		5646514	1					
ANR	5646538	Identifier	r_write_at_me32		5646514	2					
ANR	5646539	ParameterList	"void * dest , ut32 val , size_t offset"		5646514	3					
ANR	5646540	Parameter	void * dest	285:35:6964:6973	5646514	0	True				
ANR	5646541	ParameterType	void *		5646514	0					
ANR	5646542	Identifier	dest		5646514	1					
ANR	5646543	Parameter	ut32 val	285:47:6976:6983	5646514	1	True				
ANR	5646544	ParameterType	ut32		5646514	0					
ANR	5646545	Identifier	val		5646514	1					
ANR	5646546	Parameter	size_t offset	285:57:6986:6998	5646514	2	True				
ANR	5646547	ParameterType	size_t		5646514	0					
ANR	5646548	Identifier	offset		5646514	1					
ANR	5646549	CFGEntryNode	ENTRY		5646514		True				
ANR	5646550	CFGExitNode	EXIT		5646514		True				
ANR	5646551	Symbol	val		5646514						
ANR	5646552	Symbol	offset		5646514						
ANR	5646553	Symbol	d		5646514						
ANR	5646554	Symbol	dest		5646514						
ANR	5646555	Function	r_read_me64	290:0:7063:7219							
ANR	5646556	FunctionDef	r_read_me64 (const void * src)		5646555	0					
ANR	5646557	CompoundStatement		290:48:7111:7219	5646555	0					
ANR	5646558	IdentifierDeclStatement	"ut64 val = ( ( ut64 ) ( r_read_at_me32 ( src , sizeof ( ut32 ) ) ) ) << 32 ;"	291:1:7114:7177	5646555	0	True				
ANR	5646559	IdentifierDecl	"val = ( ( ut64 ) ( r_read_at_me32 ( src , sizeof ( ut32 ) ) ) ) << 32"		5646555	0					
ANR	5646560	IdentifierDeclType	ut64		5646555	0					
ANR	5646561	Identifier	val		5646555	1					
ANR	5646562	AssignmentExpression	"val = ( ( ut64 ) ( r_read_at_me32 ( src , sizeof ( ut32 ) ) ) ) << 32"		5646555	2		=			
ANR	5646563	Identifier	val		5646555	0					
ANR	5646564	ShiftExpression	"( ( ut64 ) ( r_read_at_me32 ( src , sizeof ( ut32 ) ) ) ) << 32"		5646555	1		<<			
ANR	5646565	CastExpression	"( ut64 ) ( r_read_at_me32 ( src , sizeof ( ut32 ) ) )"		5646555	0					
ANR	5646566	CastTarget	ut64		5646555	0					
ANR	5646567	CallExpression	"r_read_at_me32 ( src , sizeof ( ut32 ) )"		5646555	1					
ANR	5646568	Callee	r_read_at_me32		5646555	0					
ANR	5646569	Identifier	r_read_at_me32		5646555	0					
ANR	5646570	ArgumentList	src		5646555	1					
ANR	5646571	Argument	src		5646555	0					
ANR	5646572	Identifier	src		5646555	0					
ANR	5646573	Argument	sizeof ( ut32 )		5646555	1					
ANR	5646574	SizeofExpression	sizeof ( ut32 )		5646555	0					
ANR	5646575	Sizeof	sizeof		5646555	0					
ANR	5646576	SizeofOperand	ut32		5646555	1					
ANR	5646577	PrimaryExpression	32		5646555	1					
ANR	5646578	ExpressionStatement	val |= r_read_me32 ( src )	292:1:7180:7204	5646555	1	True				
ANR	5646579	AssignmentExpression	val |= r_read_me32 ( src )		5646555	0		|=			
ANR	5646580	Identifier	val		5646555	0					
ANR	5646581	CallExpression	r_read_me32 ( src )		5646555	1					
ANR	5646582	Callee	r_read_me32		5646555	0					
ANR	5646583	Identifier	r_read_me32		5646555	0					
ANR	5646584	ArgumentList	src		5646555	1					
ANR	5646585	Argument	src		5646555	0					
ANR	5646586	Identifier	src		5646555	0					
ANR	5646587	ReturnStatement	return val ;	293:1:7207:7217	5646555	2	True				
ANR	5646588	Identifier	val		5646555	0					
ANR	5646589	ReturnType	static inline ut64		5646555	1					
ANR	5646590	Identifier	r_read_me64		5646555	2					
ANR	5646591	ParameterList	const void * src		5646555	3					
ANR	5646592	Parameter	const void * src	290:31:7094:7108	5646555	0	True				
ANR	5646593	ParameterType	const void *		5646555	0					
ANR	5646594	Identifier	src		5646555	1					
ANR	5646595	CFGEntryNode	ENTRY		5646555		True				
ANR	5646596	CFGExitNode	EXIT		5646555		True				
ANR	5646597	Symbol	val		5646555						
ANR	5646598	Symbol	r_read_at_me32		5646555						
ANR	5646599	Symbol	r_read_me32		5646555						
ANR	5646600	Symbol	src		5646555						
ANR	5646601	Function	r_read_at_me64	296:0:7222:7359							
ANR	5646602	FunctionDef	"r_read_at_me64 (const void * src , size_t offset)"		5646601	0					
ANR	5646603	CompoundStatement		296:66:7288:7359	5646601	0					
ANR	5646604	IdentifierDeclStatement	const ut8 * s = ( ( const ut8 * ) src ) + offset ;	297:1:7291:7332	5646601	0	True				
ANR	5646605	IdentifierDecl	* s = ( ( const ut8 * ) src ) + offset		5646601	0					
ANR	5646606	IdentifierDeclType	const ut8 *		5646601	0					
ANR	5646607	Identifier	s		5646601	1					
ANR	5646608	AssignmentExpression	* s = ( ( const ut8 * ) src ) + offset		5646601	2		=			
ANR	5646609	Identifier	s		5646601	0					
ANR	5646610	AdditiveExpression	( ( const ut8 * ) src ) + offset		5646601	1		+			
ANR	5646611	CastExpression	( const ut8 * ) src		5646601	0					
ANR	5646612	CastTarget	const ut8 *		5646601	0					
ANR	5646613	Identifier	src		5646601	1					
ANR	5646614	Identifier	offset		5646601	1					
ANR	5646615	ReturnStatement	return r_read_me64 ( s ) ;	298:1:7335:7357	5646601	1	True				
ANR	5646616	CallExpression	r_read_me64 ( s )		5646601	0					
ANR	5646617	Callee	r_read_me64		5646601	0					
ANR	5646618	Identifier	r_read_me64		5646601	0					
ANR	5646619	ArgumentList	s		5646601	1					
ANR	5646620	Argument	s		5646601	0					
ANR	5646621	Identifier	s		5646601	0					
ANR	5646622	ReturnType	static inline ut64		5646601	1					
ANR	5646623	Identifier	r_read_at_me64		5646601	2					
ANR	5646624	ParameterList	"const void * src , size_t offset"		5646601	3					
ANR	5646625	Parameter	const void * src	296:34:7256:7270	5646601	0	True				
ANR	5646626	ParameterType	const void *		5646601	0					
ANR	5646627	Identifier	src		5646601	1					
ANR	5646628	Parameter	size_t offset	296:51:7273:7285	5646601	1	True				
ANR	5646629	ParameterType	size_t		5646601	0					
ANR	5646630	Identifier	offset		5646601	1					
ANR	5646631	CFGEntryNode	ENTRY		5646601		True				
ANR	5646632	CFGExitNode	EXIT		5646601		True				
ANR	5646633	Symbol	s		5646601						
ANR	5646634	Symbol	offset		5646601						
ANR	5646635	Symbol	src		5646601						
ANR	5646636	Symbol	r_read_me64		5646601						
ANR	5646637	Function	r_write_me64	301:0:7362:7502							
ANR	5646638	FunctionDef	"r_write_me64 (void * dest , ut64 val)"		5646637	0					
ANR	5646639	CompoundStatement		301:54:7416:7502	5646637	0					
ANR	5646640	ExpressionStatement	"r_write_me32 ( dest , ( ut32 ) val )"	302:1:7419:7449	5646637	0	True				
ANR	5646641	CallExpression	"r_write_me32 ( dest , ( ut32 ) val )"		5646637	0					
ANR	5646642	Callee	r_write_me32		5646637	0					
ANR	5646643	Identifier	r_write_me32		5646637	0					
ANR	5646644	ArgumentList	dest		5646637	1					
ANR	5646645	Argument	dest		5646637	0					
ANR	5646646	Identifier	dest		5646637	0					
ANR	5646647	Argument	( ut32 ) val		5646637	1					
ANR	5646648	CastExpression	( ut32 ) val		5646637	0					
ANR	5646649	CastTarget	ut32		5646637	0					
ANR	5646650	Identifier	val		5646637	1					
ANR	5646651	ExpressionStatement	"r_write_at_me32 ( dest , val >> 32 , sizeof ( ut32 ) )"	303:1:7452:7500	5646637	1	True				
ANR	5646652	CallExpression	"r_write_at_me32 ( dest , val >> 32 , sizeof ( ut32 ) )"		5646637	0					
ANR	5646653	Callee	r_write_at_me32		5646637	0					
ANR	5646654	Identifier	r_write_at_me32		5646637	0					
ANR	5646655	ArgumentList	dest		5646637	1					
ANR	5646656	Argument	dest		5646637	0					
ANR	5646657	Identifier	dest		5646637	0					
ANR	5646658	Argument	val >> 32		5646637	1					
ANR	5646659	ShiftExpression	val >> 32		5646637	0		>>			
ANR	5646660	Identifier	val		5646637	0					
ANR	5646661	PrimaryExpression	32		5646637	1					
ANR	5646662	Argument	sizeof ( ut32 )		5646637	2					
ANR	5646663	SizeofExpression	sizeof ( ut32 )		5646637	0					
ANR	5646664	Sizeof	sizeof		5646637	0					
ANR	5646665	SizeofOperand	ut32		5646637	1					
ANR	5646666	ReturnType	static inline void		5646637	1					
ANR	5646667	Identifier	r_write_me64		5646637	2					
ANR	5646668	ParameterList	"void * dest , ut64 val"		5646637	3					
ANR	5646669	Parameter	void * dest	301:32:7394:7403	5646637	0	True				
ANR	5646670	ParameterType	void *		5646637	0					
ANR	5646671	Identifier	dest		5646637	1					
ANR	5646672	Parameter	ut64 val	301:44:7406:7413	5646637	1	True				
ANR	5646673	ParameterType	ut64		5646637	0					
ANR	5646674	Identifier	val		5646637	1					
ANR	5646675	CFGEntryNode	ENTRY		5646637		True				
ANR	5646676	CFGExitNode	EXIT		5646637		True				
ANR	5646677	Symbol	val		5646637						
ANR	5646678	Symbol	dest		5646637						
ANR	5646679	Function	r_write_at_me64	306:0:7505:7634							
ANR	5646680	FunctionDef	"r_write_at_me64 (void * dest , ut64 val , size_t offset)"		5646679	0					
ANR	5646681	CompoundStatement		306:72:7577:7634	5646679	0					
ANR	5646682	IdentifierDeclStatement	ut8 * d = ( ut8 * ) dest + offset ;	307:1:7580:7608	5646679	0	True				
ANR	5646683	IdentifierDecl	* d = ( ut8 * ) dest + offset		5646679	0					
ANR	5646684	IdentifierDeclType	ut8 *		5646679	0					
ANR	5646685	Identifier	d		5646679	1					
ANR	5646686	AssignmentExpression	* d = ( ut8 * ) dest + offset		5646679	2		=			
ANR	5646687	Identifier	d		5646679	0					
ANR	5646688	AdditiveExpression	( ut8 * ) dest + offset		5646679	1		+			
ANR	5646689	CastExpression	( ut8 * ) dest		5646679	0					
ANR	5646690	CastTarget	ut8 *		5646679	0					
ANR	5646691	Identifier	dest		5646679	1					
ANR	5646692	Identifier	offset		5646679	1					
ANR	5646693	ExpressionStatement	"r_write_me64 ( d , val )"	308:1:7611:7632	5646679	1	True				
ANR	5646694	CallExpression	"r_write_me64 ( d , val )"		5646679	0					
ANR	5646695	Callee	r_write_me64		5646679	0					
ANR	5646696	Identifier	r_write_me64		5646679	0					
ANR	5646697	ArgumentList	d		5646679	1					
ANR	5646698	Argument	d		5646679	0					
ANR	5646699	Identifier	d		5646679	0					
ANR	5646700	Argument	val		5646679	1					
ANR	5646701	Identifier	val		5646679	0					
ANR	5646702	ReturnType	static inline void		5646679	1					
ANR	5646703	Identifier	r_write_at_me64		5646679	2					
ANR	5646704	ParameterList	"void * dest , ut64 val , size_t offset"		5646679	3					
ANR	5646705	Parameter	void * dest	306:35:7540:7549	5646679	0	True				
ANR	5646706	ParameterType	void *		5646679	0					
ANR	5646707	Identifier	dest		5646679	1					
ANR	5646708	Parameter	ut64 val	306:47:7552:7559	5646679	1	True				
ANR	5646709	ParameterType	ut64		5646679	0					
ANR	5646710	Identifier	val		5646679	1					
ANR	5646711	Parameter	size_t offset	306:57:7562:7574	5646679	2	True				
ANR	5646712	ParameterType	size_t		5646679	0					
ANR	5646713	Identifier	offset		5646679	1					
ANR	5646714	CFGEntryNode	ENTRY		5646679		True				
ANR	5646715	CFGExitNode	EXIT		5646679		True				
ANR	5646716	Symbol	val		5646679						
ANR	5646717	Symbol	offset		5646679						
ANR	5646718	Symbol	d		5646679						
ANR	5646719	Symbol	dest		5646679						
ANR	5646720	Function	r_read_ble16	313:0:7661:7787							
ANR	5646721	FunctionDef	"r_read_ble16 (const void * src , bool big_endian)"		5646720	0					
ANR	5646722	CompoundStatement		313:66:7727:7787	5646720	0					
ANR	5646723	ReturnStatement	return big_endian ? r_read_be16 ( src ) : r_read_le16 ( src ) ;	314:1:7730:7785	5646720	0	True				
ANR	5646724	ConditionalExpression	big_endian ? r_read_be16 ( src ) : r_read_le16 ( src )		5646720	0					
ANR	5646725	Condition	big_endian		5646720	0					
ANR	5646726	Identifier	big_endian		5646720	0					
ANR	5646727	CallExpression	r_read_be16 ( src )		5646720	1					
ANR	5646728	Callee	r_read_be16		5646720	0					
ANR	5646729	Identifier	r_read_be16		5646720	0					
ANR	5646730	ArgumentList	src		5646720	1					
ANR	5646731	Argument	src		5646720	0					
ANR	5646732	Identifier	src		5646720	0					
ANR	5646733	CallExpression	r_read_le16 ( src )		5646720	2					
ANR	5646734	Callee	r_read_le16		5646720	0					
ANR	5646735	Identifier	r_read_le16		5646720	0					
ANR	5646736	ArgumentList	src		5646720	1					
ANR	5646737	Argument	src		5646720	0					
ANR	5646738	Identifier	src		5646720	0					
ANR	5646739	ReturnType	static inline ut16		5646720	1					
ANR	5646740	Identifier	r_read_ble16		5646720	2					
ANR	5646741	ParameterList	"const void * src , bool big_endian"		5646720	3					
ANR	5646742	Parameter	const void * src	313:32:7693:7707	5646720	0	True				
ANR	5646743	ParameterType	const void *		5646720	0					
ANR	5646744	Identifier	src		5646720	1					
ANR	5646745	Parameter	bool big_endian	313:49:7710:7724	5646720	1	True				
ANR	5646746	ParameterType	bool		5646720	0					
ANR	5646747	Identifier	big_endian		5646720	1					
ANR	5646748	CFGEntryNode	ENTRY		5646720		True				
ANR	5646749	CFGExitNode	EXIT		5646720		True				
ANR	5646750	Symbol	big_endian		5646720						
ANR	5646751	Symbol	src		5646720						
ANR	5646752	Symbol	r_read_be16		5646720						
ANR	5646753	Symbol	r_read_le16		5646720						
ANR	5646754	Function	r_read_ble32	317:0:7790:7916							
ANR	5646755	FunctionDef	"r_read_ble32 (const void * src , bool big_endian)"		5646754	0					
ANR	5646756	CompoundStatement		317:66:7856:7916	5646754	0					
ANR	5646757	ReturnStatement	return big_endian ? r_read_be32 ( src ) : r_read_le32 ( src ) ;	318:1:7859:7914	5646754	0	True				
ANR	5646758	ConditionalExpression	big_endian ? r_read_be32 ( src ) : r_read_le32 ( src )		5646754	0					
ANR	5646759	Condition	big_endian		5646754	0					
ANR	5646760	Identifier	big_endian		5646754	0					
ANR	5646761	CallExpression	r_read_be32 ( src )		5646754	1					
ANR	5646762	Callee	r_read_be32		5646754	0					
ANR	5646763	Identifier	r_read_be32		5646754	0					
ANR	5646764	ArgumentList	src		5646754	1					
ANR	5646765	Argument	src		5646754	0					
ANR	5646766	Identifier	src		5646754	0					
ANR	5646767	CallExpression	r_read_le32 ( src )		5646754	2					
ANR	5646768	Callee	r_read_le32		5646754	0					
ANR	5646769	Identifier	r_read_le32		5646754	0					
ANR	5646770	ArgumentList	src		5646754	1					
ANR	5646771	Argument	src		5646754	0					
ANR	5646772	Identifier	src		5646754	0					
ANR	5646773	ReturnType	static inline ut32		5646754	1					
ANR	5646774	Identifier	r_read_ble32		5646754	2					
ANR	5646775	ParameterList	"const void * src , bool big_endian"		5646754	3					
ANR	5646776	Parameter	const void * src	317:32:7822:7836	5646754	0	True				
ANR	5646777	ParameterType	const void *		5646754	0					
ANR	5646778	Identifier	src		5646754	1					
ANR	5646779	Parameter	bool big_endian	317:49:7839:7853	5646754	1	True				
ANR	5646780	ParameterType	bool		5646754	0					
ANR	5646781	Identifier	big_endian		5646754	1					
ANR	5646782	CFGEntryNode	ENTRY		5646754		True				
ANR	5646783	CFGExitNode	EXIT		5646754		True				
ANR	5646784	Symbol	r_read_le32		5646754						
ANR	5646785	Symbol	big_endian		5646754						
ANR	5646786	Symbol	src		5646754						
ANR	5646787	Symbol	r_read_be32		5646754						
ANR	5646788	Function	r_read_ble64	321:0:7919:8045							
ANR	5646789	FunctionDef	"r_read_ble64 (const void * src , bool big_endian)"		5646788	0					
ANR	5646790	CompoundStatement		321:66:7985:8045	5646788	0					
ANR	5646791	ReturnStatement	return big_endian ? r_read_be64 ( src ) : r_read_le64 ( src ) ;	322:1:7988:8043	5646788	0	True				
ANR	5646792	ConditionalExpression	big_endian ? r_read_be64 ( src ) : r_read_le64 ( src )		5646788	0					
ANR	5646793	Condition	big_endian		5646788	0					
ANR	5646794	Identifier	big_endian		5646788	0					
ANR	5646795	CallExpression	r_read_be64 ( src )		5646788	1					
ANR	5646796	Callee	r_read_be64		5646788	0					
ANR	5646797	Identifier	r_read_be64		5646788	0					
ANR	5646798	ArgumentList	src		5646788	1					
ANR	5646799	Argument	src		5646788	0					
ANR	5646800	Identifier	src		5646788	0					
ANR	5646801	CallExpression	r_read_le64 ( src )		5646788	2					
ANR	5646802	Callee	r_read_le64		5646788	0					
ANR	5646803	Identifier	r_read_le64		5646788	0					
ANR	5646804	ArgumentList	src		5646788	1					
ANR	5646805	Argument	src		5646788	0					
ANR	5646806	Identifier	src		5646788	0					
ANR	5646807	ReturnType	static inline ut64		5646788	1					
ANR	5646808	Identifier	r_read_ble64		5646788	2					
ANR	5646809	ParameterList	"const void * src , bool big_endian"		5646788	3					
ANR	5646810	Parameter	const void * src	321:32:7951:7965	5646788	0	True				
ANR	5646811	ParameterType	const void *		5646788	0					
ANR	5646812	Identifier	src		5646788	1					
ANR	5646813	Parameter	bool big_endian	321:49:7968:7982	5646788	1	True				
ANR	5646814	ParameterType	bool		5646788	0					
ANR	5646815	Identifier	big_endian		5646788	1					
ANR	5646816	CFGEntryNode	ENTRY		5646788		True				
ANR	5646817	CFGExitNode	EXIT		5646788		True				
ANR	5646818	Symbol	big_endian		5646788						
ANR	5646819	Symbol	r_read_le64		5646788						
ANR	5646820	Symbol	src		5646788						
ANR	5646821	Symbol	r_read_be64		5646788						
ANR	5646822	Function	r_read_ble	325:0:8048:8367							
ANR	5646823	FunctionDef	"r_read_ble (const void * src , bool big_endian , int size)"		5646822	0					
ANR	5646824	CompoundStatement		325:74:8122:8367	5646822	0					
ANR	5646825	SwitchStatement	switch ( size )		5646822	0					
ANR	5646826	Condition	size	326:9:8133:8136	5646822	0	True				
ANR	5646827	Identifier	size		5646822	0					
ANR	5646828	CompoundStatement		2:15:16:16	5646822	1					
ANR	5646829	Label	case 8 :	327:1:8142:8148	5646822	0	True				
ANR	5646830	ReturnStatement	return ( ut64 ) ( ( ut8 * ) src ) [ 0 ] ;	328:2:8152:8180	5646822	1	True				
ANR	5646831	CastExpression	( ut64 ) ( ( ut8 * ) src ) [ 0 ]		5646822	0					
ANR	5646832	CastTarget	ut64		5646822	0					
ANR	5646833	ArrayIndexing	( ( ut8 * ) src ) [ 0 ]		5646822	1					
ANR	5646834	CastExpression	( ut8 * ) src		5646822	0					
ANR	5646835	CastTarget	ut8 *		5646822	0					
ANR	5646836	Identifier	src		5646822	1					
ANR	5646837	PrimaryExpression	0		5646822	1					
ANR	5646838	Label	case 16 :	329:1:8183:8190	5646822	2	True				
ANR	5646839	ReturnStatement	"return r_read_ble16 ( src , big_endian ) ;"	330:2:8194:8231	5646822	3	True				
ANR	5646840	CallExpression	"r_read_ble16 ( src , big_endian )"		5646822	0					
ANR	5646841	Callee	r_read_ble16		5646822	0					
ANR	5646842	Identifier	r_read_ble16		5646822	0					
ANR	5646843	ArgumentList	src		5646822	1					
ANR	5646844	Argument	src		5646822	0					
ANR	5646845	Identifier	src		5646822	0					
ANR	5646846	Argument	big_endian		5646822	1					
ANR	5646847	Identifier	big_endian		5646822	0					
ANR	5646848	Label	case 32 :	331:1:8234:8241	5646822	4	True				
ANR	5646849	ReturnStatement	"return r_read_ble32 ( src , big_endian ) ;"	332:2:8245:8282	5646822	5	True				
ANR	5646850	CallExpression	"r_read_ble32 ( src , big_endian )"		5646822	0					
ANR	5646851	Callee	r_read_ble32		5646822	0					
ANR	5646852	Identifier	r_read_ble32		5646822	0					
ANR	5646853	ArgumentList	src		5646822	1					
ANR	5646854	Argument	src		5646822	0					
ANR	5646855	Identifier	src		5646822	0					
ANR	5646856	Argument	big_endian		5646822	1					
ANR	5646857	Identifier	big_endian		5646822	0					
ANR	5646858	Label	case 64 :	333:1:8285:8292	5646822	6	True				
ANR	5646859	ReturnStatement	"return r_read_ble64 ( src , big_endian ) ;"	334:2:8296:8333	5646822	7	True				
ANR	5646860	CallExpression	"r_read_ble64 ( src , big_endian )"		5646822	0					
ANR	5646861	Callee	r_read_ble64		5646822	0					
ANR	5646862	Identifier	r_read_ble64		5646822	0					
ANR	5646863	ArgumentList	src		5646822	1					
ANR	5646864	Argument	src		5646822	0					
ANR	5646865	Identifier	src		5646822	0					
ANR	5646866	Argument	big_endian		5646822	1					
ANR	5646867	Identifier	big_endian		5646822	0					
ANR	5646868	Label	default :	335:1:8336:8343	5646822	8	True				
ANR	5646869	Identifier	default		5646822	0					
ANR	5646870	ReturnStatement	return UT64_MAX ;	336:2:8347:8362	5646822	9	True				
ANR	5646871	Identifier	UT64_MAX		5646822	0					
ANR	5646872	ReturnType	static inline ut64		5646822	1					
ANR	5646873	Identifier	r_read_ble		5646822	2					
ANR	5646874	ParameterList	"const void * src , bool big_endian , int size"		5646822	3					
ANR	5646875	Parameter	const void * src	325:30:8078:8092	5646822	0	True				
ANR	5646876	ParameterType	const void *		5646822	0					
ANR	5646877	Identifier	src		5646822	1					
ANR	5646878	Parameter	bool big_endian	325:47:8095:8109	5646822	1	True				
ANR	5646879	ParameterType	bool		5646822	0					
ANR	5646880	Identifier	big_endian		5646822	1					
ANR	5646881	Parameter	int size	325:64:8112:8119	5646822	2	True				
ANR	5646882	ParameterType	int		5646822	0					
ANR	5646883	Identifier	size		5646822	1					
ANR	5646884	CFGEntryNode	ENTRY		5646822		True				
ANR	5646885	CFGExitNode	EXIT		5646822		True				
ANR	5646886	Symbol	big_endian		5646822						
ANR	5646887	Symbol	size		5646822						
ANR	5646888	Symbol	src		5646822						
ANR	5646889	Symbol	r_read_ble16		5646822						
ANR	5646890	Symbol	UT64_MAX		5646822						
ANR	5646891	Symbol	r_read_ble32		5646822						
ANR	5646892	Symbol	* src		5646822						
ANR	5646893	Symbol	r_read_ble64		5646822						
ANR	5646894	Function	r_write_ble16	340:0:8370:8509							
ANR	5646895	FunctionDef	"r_write_ble16 (void * dest , ut16 val , bool big_endian)"		5646894	0					
ANR	5646896	CompoundStatement		340:72:8442:8509	5646894	0					
ANR	5646897	ExpressionStatement	"big_endian ? r_write_be16 ( dest , val ) : r_write_le16 ( dest , val )"	341:1:8445:8507	5646894	0	True				
ANR	5646898	ConditionalExpression	"big_endian ? r_write_be16 ( dest , val ) : r_write_le16 ( dest , val )"		5646894	0					
ANR	5646899	Condition	big_endian		5646894	0					
ANR	5646900	Identifier	big_endian		5646894	0					
ANR	5646901	CallExpression	"r_write_be16 ( dest , val )"		5646894	1					
ANR	5646902	Callee	r_write_be16		5646894	0					
ANR	5646903	Identifier	r_write_be16		5646894	0					
ANR	5646904	ArgumentList	dest		5646894	1					
ANR	5646905	Argument	dest		5646894	0					
ANR	5646906	Identifier	dest		5646894	0					
ANR	5646907	Argument	val		5646894	1					
ANR	5646908	Identifier	val		5646894	0					
ANR	5646909	CallExpression	"r_write_le16 ( dest , val )"		5646894	2					
ANR	5646910	Callee	r_write_le16		5646894	0					
ANR	5646911	Identifier	r_write_le16		5646894	0					
ANR	5646912	ArgumentList	dest		5646894	1					
ANR	5646913	Argument	dest		5646894	0					
ANR	5646914	Identifier	dest		5646894	0					
ANR	5646915	Argument	val		5646894	1					
ANR	5646916	Identifier	val		5646894	0					
ANR	5646917	ReturnType	static inline void		5646894	1					
ANR	5646918	Identifier	r_write_ble16		5646894	2					
ANR	5646919	ParameterList	"void * dest , ut16 val , bool big_endian"		5646894	3					
ANR	5646920	Parameter	void * dest	340:33:8403:8412	5646894	0	True				
ANR	5646921	ParameterType	void *		5646894	0					
ANR	5646922	Identifier	dest		5646894	1					
ANR	5646923	Parameter	ut16 val	340:45:8415:8422	5646894	1	True				
ANR	5646924	ParameterType	ut16		5646894	0					
ANR	5646925	Identifier	val		5646894	1					
ANR	5646926	Parameter	bool big_endian	340:55:8425:8439	5646894	2	True				
ANR	5646927	ParameterType	bool		5646894	0					
ANR	5646928	Identifier	big_endian		5646894	1					
ANR	5646929	CFGEntryNode	ENTRY		5646894		True				
ANR	5646930	CFGExitNode	EXIT		5646894		True				
ANR	5646931	Symbol	val		5646894						
ANR	5646932	Symbol	big_endian		5646894						
ANR	5646933	Symbol	dest		5646894						
ANR	5646934	Function	r_write_ble24	344:0:8512:8651							
ANR	5646935	FunctionDef	"r_write_ble24 (void * dest , ut32 val , bool big_endian)"		5646934	0					
ANR	5646936	CompoundStatement		344:72:8584:8651	5646934	0					
ANR	5646937	ExpressionStatement	"big_endian ? r_write_be24 ( dest , val ) : r_write_le24 ( dest , val )"	345:1:8587:8649	5646934	0	True				
ANR	5646938	ConditionalExpression	"big_endian ? r_write_be24 ( dest , val ) : r_write_le24 ( dest , val )"		5646934	0					
ANR	5646939	Condition	big_endian		5646934	0					
ANR	5646940	Identifier	big_endian		5646934	0					
ANR	5646941	CallExpression	"r_write_be24 ( dest , val )"		5646934	1					
ANR	5646942	Callee	r_write_be24		5646934	0					
ANR	5646943	Identifier	r_write_be24		5646934	0					
ANR	5646944	ArgumentList	dest		5646934	1					
ANR	5646945	Argument	dest		5646934	0					
ANR	5646946	Identifier	dest		5646934	0					
ANR	5646947	Argument	val		5646934	1					
ANR	5646948	Identifier	val		5646934	0					
ANR	5646949	CallExpression	"r_write_le24 ( dest , val )"		5646934	2					
ANR	5646950	Callee	r_write_le24		5646934	0					
ANR	5646951	Identifier	r_write_le24		5646934	0					
ANR	5646952	ArgumentList	dest		5646934	1					
ANR	5646953	Argument	dest		5646934	0					
ANR	5646954	Identifier	dest		5646934	0					
ANR	5646955	Argument	val		5646934	1					
ANR	5646956	Identifier	val		5646934	0					
ANR	5646957	ReturnType	static inline void		5646934	1					
ANR	5646958	Identifier	r_write_ble24		5646934	2					
ANR	5646959	ParameterList	"void * dest , ut32 val , bool big_endian"		5646934	3					
ANR	5646960	Parameter	void * dest	344:33:8545:8554	5646934	0	True				
ANR	5646961	ParameterType	void *		5646934	0					
ANR	5646962	Identifier	dest		5646934	1					
ANR	5646963	Parameter	ut32 val	344:45:8557:8564	5646934	1	True				
ANR	5646964	ParameterType	ut32		5646934	0					
ANR	5646965	Identifier	val		5646934	1					
ANR	5646966	Parameter	bool big_endian	344:55:8567:8581	5646934	2	True				
ANR	5646967	ParameterType	bool		5646934	0					
ANR	5646968	Identifier	big_endian		5646934	1					
ANR	5646969	CFGEntryNode	ENTRY		5646934		True				
ANR	5646970	CFGExitNode	EXIT		5646934		True				
ANR	5646971	Symbol	val		5646934						
ANR	5646972	Symbol	big_endian		5646934						
ANR	5646973	Symbol	dest		5646934						
ANR	5646974	Function	r_write_ble32	348:0:8654:8793							
ANR	5646975	FunctionDef	"r_write_ble32 (void * dest , ut32 val , bool big_endian)"		5646974	0					
ANR	5646976	CompoundStatement		348:72:8726:8793	5646974	0					
ANR	5646977	ExpressionStatement	"big_endian ? r_write_be32 ( dest , val ) : r_write_le32 ( dest , val )"	349:1:8729:8791	5646974	0	True				
ANR	5646978	ConditionalExpression	"big_endian ? r_write_be32 ( dest , val ) : r_write_le32 ( dest , val )"		5646974	0					
ANR	5646979	Condition	big_endian		5646974	0					
ANR	5646980	Identifier	big_endian		5646974	0					
ANR	5646981	CallExpression	"r_write_be32 ( dest , val )"		5646974	1					
ANR	5646982	Callee	r_write_be32		5646974	0					
ANR	5646983	Identifier	r_write_be32		5646974	0					
ANR	5646984	ArgumentList	dest		5646974	1					
ANR	5646985	Argument	dest		5646974	0					
ANR	5646986	Identifier	dest		5646974	0					
ANR	5646987	Argument	val		5646974	1					
ANR	5646988	Identifier	val		5646974	0					
ANR	5646989	CallExpression	"r_write_le32 ( dest , val )"		5646974	2					
ANR	5646990	Callee	r_write_le32		5646974	0					
ANR	5646991	Identifier	r_write_le32		5646974	0					
ANR	5646992	ArgumentList	dest		5646974	1					
ANR	5646993	Argument	dest		5646974	0					
ANR	5646994	Identifier	dest		5646974	0					
ANR	5646995	Argument	val		5646974	1					
ANR	5646996	Identifier	val		5646974	0					
ANR	5646997	ReturnType	static inline void		5646974	1					
ANR	5646998	Identifier	r_write_ble32		5646974	2					
ANR	5646999	ParameterList	"void * dest , ut32 val , bool big_endian"		5646974	3					
ANR	5647000	Parameter	void * dest	348:33:8687:8696	5646974	0	True				
ANR	5647001	ParameterType	void *		5646974	0					
ANR	5647002	Identifier	dest		5646974	1					
ANR	5647003	Parameter	ut32 val	348:45:8699:8706	5646974	1	True				
ANR	5647004	ParameterType	ut32		5646974	0					
ANR	5647005	Identifier	val		5646974	1					
ANR	5647006	Parameter	bool big_endian	348:55:8709:8723	5646974	2	True				
ANR	5647007	ParameterType	bool		5646974	0					
ANR	5647008	Identifier	big_endian		5646974	1					
ANR	5647009	CFGEntryNode	ENTRY		5646974		True				
ANR	5647010	CFGExitNode	EXIT		5646974		True				
ANR	5647011	Symbol	val		5646974						
ANR	5647012	Symbol	big_endian		5646974						
ANR	5647013	Symbol	dest		5646974						
ANR	5647014	Function	r_write_ble64	352:0:8796:8935							
ANR	5647015	FunctionDef	"r_write_ble64 (void * dest , ut64 val , bool big_endian)"		5647014	0					
ANR	5647016	CompoundStatement		352:72:8868:8935	5647014	0					
ANR	5647017	ExpressionStatement	"big_endian ? r_write_be64 ( dest , val ) : r_write_le64 ( dest , val )"	353:1:8871:8933	5647014	0	True				
ANR	5647018	ConditionalExpression	"big_endian ? r_write_be64 ( dest , val ) : r_write_le64 ( dest , val )"		5647014	0					
ANR	5647019	Condition	big_endian		5647014	0					
ANR	5647020	Identifier	big_endian		5647014	0					
ANR	5647021	CallExpression	"r_write_be64 ( dest , val )"		5647014	1					
ANR	5647022	Callee	r_write_be64		5647014	0					
ANR	5647023	Identifier	r_write_be64		5647014	0					
ANR	5647024	ArgumentList	dest		5647014	1					
ANR	5647025	Argument	dest		5647014	0					
ANR	5647026	Identifier	dest		5647014	0					
ANR	5647027	Argument	val		5647014	1					
ANR	5647028	Identifier	val		5647014	0					
ANR	5647029	CallExpression	"r_write_le64 ( dest , val )"		5647014	2					
ANR	5647030	Callee	r_write_le64		5647014	0					
ANR	5647031	Identifier	r_write_le64		5647014	0					
ANR	5647032	ArgumentList	dest		5647014	1					
ANR	5647033	Argument	dest		5647014	0					
ANR	5647034	Identifier	dest		5647014	0					
ANR	5647035	Argument	val		5647014	1					
ANR	5647036	Identifier	val		5647014	0					
ANR	5647037	ReturnType	static inline void		5647014	1					
ANR	5647038	Identifier	r_write_ble64		5647014	2					
ANR	5647039	ParameterList	"void * dest , ut64 val , bool big_endian"		5647014	3					
ANR	5647040	Parameter	void * dest	352:33:8829:8838	5647014	0	True				
ANR	5647041	ParameterType	void *		5647014	0					
ANR	5647042	Identifier	dest		5647014	1					
ANR	5647043	Parameter	ut64 val	352:45:8841:8848	5647014	1	True				
ANR	5647044	ParameterType	ut64		5647014	0					
ANR	5647045	Identifier	val		5647014	1					
ANR	5647046	Parameter	bool big_endian	352:55:8851:8865	5647014	2	True				
ANR	5647047	ParameterType	bool		5647014	0					
ANR	5647048	Identifier	big_endian		5647014	1					
ANR	5647049	CFGEntryNode	ENTRY		5647014		True				
ANR	5647050	CFGExitNode	EXIT		5647014		True				
ANR	5647051	Symbol	val		5647014						
ANR	5647052	Symbol	big_endian		5647014						
ANR	5647053	Symbol	dest		5647014						
ANR	5647054	Function	r_write_ble	356:0:8938:9363							
ANR	5647055	FunctionDef	"r_write_ble (void * dst , ut64 val , bool big_endian , int size)"		5647054	0					
ANR	5647056	CompoundStatement		356:79:9017:9363	5647054	0					
ANR	5647057	SwitchStatement	switch ( size )		5647054	0					
ANR	5647058	Condition	size	357:9:9028:9031	5647054	0	True				
ANR	5647059	Identifier	size		5647054	0					
ANR	5647060	CompoundStatement		2:15:16:16	5647054	1					
ANR	5647061	Label	case 8 :	358:1:9037:9043	5647054	0	True				
ANR	5647062	ExpressionStatement	( ( ut8 * ) dst ) [ 0 ] = ( ut8 ) val	359:2:9047:9073	5647054	1	True				
ANR	5647063	AssignmentExpression	( ( ut8 * ) dst ) [ 0 ] = ( ut8 ) val		5647054	0		=			
ANR	5647064	ArrayIndexing	( ( ut8 * ) dst ) [ 0 ]		5647054	0					
ANR	5647065	CastExpression	( ut8 * ) dst		5647054	0					
ANR	5647066	CastTarget	ut8 *		5647054	0					
ANR	5647067	Identifier	dst		5647054	1					
ANR	5647068	PrimaryExpression	0		5647054	1					
ANR	5647069	CastExpression	( ut8 ) val		5647054	1					
ANR	5647070	CastTarget	ut8		5647054	0					
ANR	5647071	Identifier	val		5647054	1					
ANR	5647072	BreakStatement	break ;	360:2:9077:9082	5647054	2	True				
ANR	5647073	Label	case 16 :	361:1:9085:9092	5647054	3	True				
ANR	5647074	ExpressionStatement	"r_write_ble16 ( dst , ( ut16 ) val , big_endian )"	362:2:9096:9139	5647054	4	True				
ANR	5647075	CallExpression	"r_write_ble16 ( dst , ( ut16 ) val , big_endian )"		5647054	0					
ANR	5647076	Callee	r_write_ble16		5647054	0					
ANR	5647077	Identifier	r_write_ble16		5647054	0					
ANR	5647078	ArgumentList	dst		5647054	1					
ANR	5647079	Argument	dst		5647054	0					
ANR	5647080	Identifier	dst		5647054	0					
ANR	5647081	Argument	( ut16 ) val		5647054	1					
ANR	5647082	CastExpression	( ut16 ) val		5647054	0					
ANR	5647083	CastTarget	ut16		5647054	0					
ANR	5647084	Identifier	val		5647054	1					
ANR	5647085	Argument	big_endian		5647054	2					
ANR	5647086	Identifier	big_endian		5647054	0					
ANR	5647087	BreakStatement	break ;	363:2:9143:9148	5647054	5	True				
ANR	5647088	Label	case 24 :	364:1:9151:9158	5647054	6	True				
ANR	5647089	ExpressionStatement	"r_write_ble24 ( dst , ( ut32 ) val , big_endian )"	365:2:9162:9205	5647054	7	True				
ANR	5647090	CallExpression	"r_write_ble24 ( dst , ( ut32 ) val , big_endian )"		5647054	0					
ANR	5647091	Callee	r_write_ble24		5647054	0					
ANR	5647092	Identifier	r_write_ble24		5647054	0					
ANR	5647093	ArgumentList	dst		5647054	1					
ANR	5647094	Argument	dst		5647054	0					
ANR	5647095	Identifier	dst		5647054	0					
ANR	5647096	Argument	( ut32 ) val		5647054	1					
ANR	5647097	CastExpression	( ut32 ) val		5647054	0					
ANR	5647098	CastTarget	ut32		5647054	0					
ANR	5647099	Identifier	val		5647054	1					
ANR	5647100	Argument	big_endian		5647054	2					
ANR	5647101	Identifier	big_endian		5647054	0					
ANR	5647102	BreakStatement	break ;	366:2:9209:9214	5647054	8	True				
ANR	5647103	Label	case 32 :	367:1:9217:9224	5647054	9	True				
ANR	5647104	ExpressionStatement	"r_write_ble32 ( dst , ( ut32 ) val , big_endian )"	368:2:9228:9271	5647054	10	True				
ANR	5647105	CallExpression	"r_write_ble32 ( dst , ( ut32 ) val , big_endian )"		5647054	0					
ANR	5647106	Callee	r_write_ble32		5647054	0					
ANR	5647107	Identifier	r_write_ble32		5647054	0					
ANR	5647108	ArgumentList	dst		5647054	1					
ANR	5647109	Argument	dst		5647054	0					
ANR	5647110	Identifier	dst		5647054	0					
ANR	5647111	Argument	( ut32 ) val		5647054	1					
ANR	5647112	CastExpression	( ut32 ) val		5647054	0					
ANR	5647113	CastTarget	ut32		5647054	0					
ANR	5647114	Identifier	val		5647054	1					
ANR	5647115	Argument	big_endian		5647054	2					
ANR	5647116	Identifier	big_endian		5647054	0					
ANR	5647117	BreakStatement	break ;	369:2:9275:9280	5647054	11	True				
ANR	5647118	Label	case 64 :	370:1:9283:9290	5647054	12	True				
ANR	5647119	ExpressionStatement	"r_write_ble64 ( dst , val , big_endian )"	371:2:9294:9330	5647054	13	True				
ANR	5647120	CallExpression	"r_write_ble64 ( dst , val , big_endian )"		5647054	0					
ANR	5647121	Callee	r_write_ble64		5647054	0					
ANR	5647122	Identifier	r_write_ble64		5647054	0					
ANR	5647123	ArgumentList	dst		5647054	1					
ANR	5647124	Argument	dst		5647054	0					
ANR	5647125	Identifier	dst		5647054	0					
ANR	5647126	Argument	val		5647054	1					
ANR	5647127	Identifier	val		5647054	0					
ANR	5647128	Argument	big_endian		5647054	2					
ANR	5647129	Identifier	big_endian		5647054	0					
ANR	5647130	BreakStatement	break ;	372:2:9334:9339	5647054	14	True				
ANR	5647131	Label	default :	373:1:9342:9349	5647054	15	True				
ANR	5647132	Identifier	default		5647054	0					
ANR	5647133	BreakStatement	break ;	374:2:9353:9358	5647054	16	True				
ANR	5647134	ReturnType	static inline void		5647054	1					
ANR	5647135	Identifier	r_write_ble		5647054	2					
ANR	5647136	ParameterList	"void * dst , ut64 val , bool big_endian , int size"		5647054	3					
ANR	5647137	Parameter	void * dst	356:31:8969:8977	5647054	0	True				
ANR	5647138	ParameterType	void *		5647054	0					
ANR	5647139	Identifier	dst		5647054	1					
ANR	5647140	Parameter	ut64 val	356:42:8980:8987	5647054	1	True				
ANR	5647141	ParameterType	ut64		5647054	0					
ANR	5647142	Identifier	val		5647054	1					
ANR	5647143	Parameter	bool big_endian	356:52:8990:9004	5647054	2	True				
ANR	5647144	ParameterType	bool		5647054	0					
ANR	5647145	Identifier	big_endian		5647054	1					
ANR	5647146	Parameter	int size	356:69:9007:9014	5647054	3	True				
ANR	5647147	ParameterType	int		5647054	0					
ANR	5647148	Identifier	size		5647054	1					
ANR	5647149	CFGEntryNode	ENTRY		5647054		True				
ANR	5647150	CFGExitNode	EXIT		5647054		True				
ANR	5647151	Symbol	val		5647054						
ANR	5647152	Symbol	* dst		5647054						
ANR	5647153	Symbol	dst		5647054						
ANR	5647154	Symbol	big_endian		5647054						
ANR	5647155	Symbol	size		5647054						
ANR	5647156	Function	r_swap_ut16	388:0:9894:9971							
ANR	5647157	FunctionDef	r_swap_ut16 (ut16 val)		5647156	0					
ANR	5647158	CompoundStatement		388:41:9935:9971	5647156	0					
ANR	5647159	ReturnStatement	return ( val << 8 ) | ( val >> 8 ) ;	389:1:9938:9969	5647156	0	True				
ANR	5647160	InclusiveOrExpression	( val << 8 ) | ( val >> 8 )		5647156	0		|			
ANR	5647161	ShiftExpression	val << 8		5647156	0		<<			
ANR	5647162	Identifier	val		5647156	0					
ANR	5647163	PrimaryExpression	8		5647156	1					
ANR	5647164	ShiftExpression	val >> 8		5647156	1		>>			
ANR	5647165	Identifier	val		5647156	0					
ANR	5647166	PrimaryExpression	8		5647156	1					
ANR	5647167	ReturnType	static inline ut16		5647156	1					
ANR	5647168	Identifier	r_swap_ut16		5647156	2					
ANR	5647169	ParameterList	ut16 val		5647156	3					
ANR	5647170	Parameter	ut16 val	388:31:9925:9932	5647156	0	True				
ANR	5647171	ParameterType	ut16		5647156	0					
ANR	5647172	Identifier	val		5647156	1					
ANR	5647173	CFGEntryNode	ENTRY		5647156		True				
ANR	5647174	CFGExitNode	EXIT		5647156		True				
ANR	5647175	Symbol	val		5647156						
ANR	5647176	Function	r_swap_st16	392:0:9974:10114							
ANR	5647177	FunctionDef	r_swap_st16 (st16 val)		5647176	0					
ANR	5647178	CompoundStatement		392:41:10015:10114	5647176	0					
ANR	5647179	ExpressionStatement	val = ( ( val << 8 ) & 0xFF00FF00 ) | ( ( val >> 8 ) & 0xFF00FF )	393:1:10018:10077	5647176	0	True				
ANR	5647180	AssignmentExpression	val = ( ( val << 8 ) & 0xFF00FF00 ) | ( ( val >> 8 ) & 0xFF00FF )		5647176	0		=			
ANR	5647181	Identifier	val		5647176	0					
ANR	5647182	InclusiveOrExpression	( ( val << 8 ) & 0xFF00FF00 ) | ( ( val >> 8 ) & 0xFF00FF )		5647176	1		|			
ANR	5647183	BitAndExpression	( val << 8 ) & 0xFF00FF00		5647176	0		&			
ANR	5647184	ShiftExpression	val << 8		5647176	0		<<			
ANR	5647185	Identifier	val		5647176	0					
ANR	5647186	PrimaryExpression	8		5647176	1					
ANR	5647187	PrimaryExpression	0xFF00FF00		5647176	1					
ANR	5647188	BitAndExpression	( val >> 8 ) & 0xFF00FF		5647176	1		&			
ANR	5647189	ShiftExpression	val >> 8		5647176	0		>>			
ANR	5647190	Identifier	val		5647176	0					
ANR	5647191	PrimaryExpression	8		5647176	1					
ANR	5647192	PrimaryExpression	0xFF00FF		5647176	1					
ANR	5647193	ReturnStatement	return ( val << 16 ) | ( val >> 16 ) ;	394:1:10080:10112	5647176	1	True				
ANR	5647194	InclusiveOrExpression	( val << 16 ) | ( val >> 16 )		5647176	0		|			
ANR	5647195	ShiftExpression	val << 16		5647176	0		<<			
ANR	5647196	Identifier	val		5647176	0					
ANR	5647197	PrimaryExpression	16		5647176	1					
ANR	5647198	ShiftExpression	val >> 16		5647176	1		>>			
ANR	5647199	Identifier	val		5647176	0					
ANR	5647200	PrimaryExpression	16		5647176	1					
ANR	5647201	ReturnType	static inline st16		5647176	1					
ANR	5647202	Identifier	r_swap_st16		5647176	2					
ANR	5647203	ParameterList	st16 val		5647176	3					
ANR	5647204	Parameter	st16 val	392:31:10005:10012	5647176	0	True				
ANR	5647205	ParameterType	st16		5647176	0					
ANR	5647206	Identifier	val		5647176	1					
ANR	5647207	CFGEntryNode	ENTRY		5647176		True				
ANR	5647208	CFGExitNode	EXIT		5647176		True				
ANR	5647209	Symbol	val		5647176						
ANR	5647210	Function	r_swap_ut32	397:0:10117:10257							
ANR	5647211	FunctionDef	r_swap_ut32 (ut32 val)		5647210	0					
ANR	5647212	CompoundStatement		397:41:10158:10257	5647210	0					
ANR	5647213	ExpressionStatement	val = ( ( val << 8 ) & 0xFF00FF00 ) | ( ( val >> 8 ) & 0xFF00FF )	398:1:10161:10220	5647210	0	True				
ANR	5647214	AssignmentExpression	val = ( ( val << 8 ) & 0xFF00FF00 ) | ( ( val >> 8 ) & 0xFF00FF )		5647210	0		=			
ANR	5647215	Identifier	val		5647210	0					
ANR	5647216	InclusiveOrExpression	( ( val << 8 ) & 0xFF00FF00 ) | ( ( val >> 8 ) & 0xFF00FF )		5647210	1		|			
ANR	5647217	BitAndExpression	( val << 8 ) & 0xFF00FF00		5647210	0		&			
ANR	5647218	ShiftExpression	val << 8		5647210	0		<<			
ANR	5647219	Identifier	val		5647210	0					
ANR	5647220	PrimaryExpression	8		5647210	1					
ANR	5647221	PrimaryExpression	0xFF00FF00		5647210	1					
ANR	5647222	BitAndExpression	( val >> 8 ) & 0xFF00FF		5647210	1		&			
ANR	5647223	ShiftExpression	val >> 8		5647210	0		>>			
ANR	5647224	Identifier	val		5647210	0					
ANR	5647225	PrimaryExpression	8		5647210	1					
ANR	5647226	PrimaryExpression	0xFF00FF		5647210	1					
ANR	5647227	ReturnStatement	return ( val << 16 ) | ( val >> 16 ) ;	399:1:10223:10255	5647210	1	True				
ANR	5647228	InclusiveOrExpression	( val << 16 ) | ( val >> 16 )		5647210	0		|			
ANR	5647229	ShiftExpression	val << 16		5647210	0		<<			
ANR	5647230	Identifier	val		5647210	0					
ANR	5647231	PrimaryExpression	16		5647210	1					
ANR	5647232	ShiftExpression	val >> 16		5647210	1		>>			
ANR	5647233	Identifier	val		5647210	0					
ANR	5647234	PrimaryExpression	16		5647210	1					
ANR	5647235	ReturnType	static inline ut32		5647210	1					
ANR	5647236	Identifier	r_swap_ut32		5647210	2					
ANR	5647237	ParameterList	ut32 val		5647210	3					
ANR	5647238	Parameter	ut32 val	397:31:10148:10155	5647210	0	True				
ANR	5647239	ParameterType	ut32		5647210	0					
ANR	5647240	Identifier	val		5647210	1					
ANR	5647241	CFGEntryNode	ENTRY		5647210		True				
ANR	5647242	CFGExitNode	EXIT		5647210		True				
ANR	5647243	Symbol	val		5647210						
ANR	5647244	Function	r_swap_st32	402:0:10260:10410							
ANR	5647245	FunctionDef	r_swap_st32 (st32 val)		5647244	0					
ANR	5647246	CompoundStatement		402:41:10301:10410	5647244	0					
ANR	5647247	ExpressionStatement	val = ( ( val << 8 ) & 0xFF00FF00 ) | ( ( val >> 8 ) & 0xFF00FF )	403:1:10304:10362	5647244	0	True				
ANR	5647248	AssignmentExpression	val = ( ( val << 8 ) & 0xFF00FF00 ) | ( ( val >> 8 ) & 0xFF00FF )		5647244	0		=			
ANR	5647249	Identifier	val		5647244	0					
ANR	5647250	InclusiveOrExpression	( ( val << 8 ) & 0xFF00FF00 ) | ( ( val >> 8 ) & 0xFF00FF )		5647244	1		|			
ANR	5647251	BitAndExpression	( val << 8 ) & 0xFF00FF00		5647244	0		&			
ANR	5647252	ShiftExpression	val << 8		5647244	0		<<			
ANR	5647253	Identifier	val		5647244	0					
ANR	5647254	PrimaryExpression	8		5647244	1					
ANR	5647255	PrimaryExpression	0xFF00FF00		5647244	1					
ANR	5647256	BitAndExpression	( val >> 8 ) & 0xFF00FF		5647244	1		&			
ANR	5647257	ShiftExpression	val >> 8		5647244	0		>>			
ANR	5647258	Identifier	val		5647244	0					
ANR	5647259	PrimaryExpression	8		5647244	1					
ANR	5647260	PrimaryExpression	0xFF00FF		5647244	1					
ANR	5647261	ReturnStatement	return ( val << 16 ) | ( ( val >> 16 ) & 0xFFFF ) ;	404:1:10365:10408	5647244	1	True				
ANR	5647262	InclusiveOrExpression	( val << 16 ) | ( ( val >> 16 ) & 0xFFFF )		5647244	0		|			
ANR	5647263	ShiftExpression	val << 16		5647244	0		<<			
ANR	5647264	Identifier	val		5647244	0					
ANR	5647265	PrimaryExpression	16		5647244	1					
ANR	5647266	BitAndExpression	( val >> 16 ) & 0xFFFF		5647244	1		&			
ANR	5647267	ShiftExpression	val >> 16		5647244	0		>>			
ANR	5647268	Identifier	val		5647244	0					
ANR	5647269	PrimaryExpression	16		5647244	1					
ANR	5647270	PrimaryExpression	0xFFFF		5647244	1					
ANR	5647271	ReturnType	static inline st32		5647244	1					
ANR	5647272	Identifier	r_swap_st32		5647244	2					
ANR	5647273	ParameterList	st32 val		5647244	3					
ANR	5647274	Parameter	st32 val	402:31:10291:10298	5647244	0	True				
ANR	5647275	ParameterType	st32		5647244	0					
ANR	5647276	Identifier	val		5647244	1					
ANR	5647277	CFGEntryNode	ENTRY		5647244		True				
ANR	5647278	CFGExitNode	EXIT		5647244		True				
ANR	5647279	Symbol	val		5647244						
ANR	5647280	Function	r_swap_ut64	407:0:10413:10665							
ANR	5647281	FunctionDef	r_swap_ut64 (ut64 val)		5647280	0					
ANR	5647282	CompoundStatement		407:41:10454:10665	5647280	0					
ANR	5647283	Statement	val	408:1:10457:10459	5647280	0	True				
ANR	5647284	Statement	=	408:5:10461:10461	5647280	1	True				
ANR	5647285	Statement	(	408:7:10463:10463	5647280	2	True				
ANR	5647286	Statement	(	408:8:10464:10464	5647280	3	True				
ANR	5647287	Statement	val	408:9:10465:10467	5647280	4	True				
ANR	5647288	Statement	<<	408:13:10469:10470	5647280	5	True				
ANR	5647289	Statement	8	408:16:10472:10472	5647280	6	True				
ANR	5647290	Statement	)	408:17:10473:10473	5647280	7	True				
ANR	5647291	Statement	&	408:19:10475:10475	5647280	8	True				
ANR	5647292	Statement	0xFF00FF00FF00FF00UL	408:21:10477:10496	5647280	9	True				
ANR	5647293	Statement	L	408:41:10497:10497	5647280	10	True				
ANR	5647294	Statement	)	408:43:10499:10499	5647280	11	True				
ANR	5647295	Statement	|	408:45:10501:10501	5647280	12	True				
ANR	5647296	Statement	(	408:47:10503:10503	5647280	13	True				
ANR	5647297	Statement	(	408:48:10504:10504	5647280	14	True				
ANR	5647298	Statement	val	408:49:10505:10507	5647280	15	True				
ANR	5647299	Statement	>>	408:53:10509:10510	5647280	16	True				
ANR	5647300	Statement	8	408:56:10512:10512	5647280	17	True				
ANR	5647301	Statement	)	408:57:10513:10513	5647280	18	True				
ANR	5647302	Statement	&	408:59:10515:10515	5647280	19	True				
ANR	5647303	Statement	0x00FF00FF00FF00FFUL	408:61:10517:10536	5647280	20	True				
ANR	5647304	Statement	L	408:81:10537:10537	5647280	21	True				
ANR	5647305	Statement	)	408:83:10539:10539	5647280	22	True				
ANR	5647306	ExpressionStatement		408:84:10540:10540	5647280	23	True				
ANR	5647307	Statement	val	409:1:10543:10545	5647280	24	True				
ANR	5647308	Statement	=	409:5:10547:10547	5647280	25	True				
ANR	5647309	Statement	(	409:7:10549:10549	5647280	26	True				
ANR	5647310	Statement	(	409:8:10550:10550	5647280	27	True				
ANR	5647311	Statement	val	409:9:10551:10553	5647280	28	True				
ANR	5647312	Statement	<<	409:13:10555:10556	5647280	29	True				
ANR	5647313	Statement	16	409:16:10558:10559	5647280	30	True				
ANR	5647314	Statement	)	409:18:10560:10560	5647280	31	True				
ANR	5647315	Statement	&	409:20:10562:10562	5647280	32	True				
ANR	5647316	Statement	0xFFFF0000FFFF0000UL	409:22:10564:10583	5647280	33	True				
ANR	5647317	Statement	L	409:42:10584:10584	5647280	34	True				
ANR	5647318	Statement	)	409:44:10586:10586	5647280	35	True				
ANR	5647319	Statement	|	409:46:10588:10588	5647280	36	True				
ANR	5647320	Statement	(	409:48:10590:10590	5647280	37	True				
ANR	5647321	Statement	(	409:49:10591:10591	5647280	38	True				
ANR	5647322	Statement	val	409:50:10592:10594	5647280	39	True				
ANR	5647323	Statement	>>	409:54:10596:10597	5647280	40	True				
ANR	5647324	Statement	16	409:57:10599:10600	5647280	41	True				
ANR	5647325	Statement	)	409:59:10601:10601	5647280	42	True				
ANR	5647326	Statement	&	409:61:10603:10603	5647280	43	True				
ANR	5647327	Statement	0x0000FFFF0000FFFFUL	409:63:10605:10624	5647280	44	True				
ANR	5647328	Statement	L	409:83:10625:10625	5647280	45	True				
ANR	5647329	Statement	)	409:85:10627:10627	5647280	46	True				
ANR	5647330	ExpressionStatement		409:86:10628:10628	5647280	47	True				
ANR	5647331	ReturnStatement	return ( val << 32 ) | ( val >> 32 ) ;	410:1:10631:10663	5647280	48	True				
ANR	5647332	InclusiveOrExpression	( val << 32 ) | ( val >> 32 )		5647280	0		|			
ANR	5647333	ShiftExpression	val << 32		5647280	0		<<			
ANR	5647334	Identifier	val		5647280	0					
ANR	5647335	PrimaryExpression	32		5647280	1					
ANR	5647336	ShiftExpression	val >> 32		5647280	1		>>			
ANR	5647337	Identifier	val		5647280	0					
ANR	5647338	PrimaryExpression	32		5647280	1					
ANR	5647339	ReturnType	static inline ut64		5647280	1					
ANR	5647340	Identifier	r_swap_ut64		5647280	2					
ANR	5647341	ParameterList	ut64 val		5647280	3					
ANR	5647342	Parameter	ut64 val	407:31:10444:10451	5647280	0	True				
ANR	5647343	ParameterType	ut64		5647280	0					
ANR	5647344	Identifier	val		5647280	1					
ANR	5647345	CFGEntryNode	ENTRY		5647280		True				
ANR	5647346	CFGExitNode	EXIT		5647280		True				
ANR	5647347	Symbol	val		5647280						
ANR	5647348	Function	r_swap_st64	413:0:10668:10938							
ANR	5647349	FunctionDef	r_swap_st64 (st64 val)		5647348	0					
ANR	5647350	CompoundStatement		413:41:10709:10938	5647348	0					
ANR	5647351	Statement	val	414:1:10712:10714	5647348	0	True				
ANR	5647352	Statement	=	414:5:10716:10716	5647348	1	True				
ANR	5647353	Statement	(	414:7:10718:10718	5647348	2	True				
ANR	5647354	Statement	(	414:8:10719:10719	5647348	3	True				
ANR	5647355	Statement	val	414:9:10720:10722	5647348	4	True				
ANR	5647356	Statement	<<	414:13:10724:10725	5647348	5	True				
ANR	5647357	Statement	8	414:16:10727:10727	5647348	6	True				
ANR	5647358	Statement	)	414:17:10728:10728	5647348	7	True				
ANR	5647359	Statement	&	414:19:10730:10730	5647348	8	True				
ANR	5647360	Statement	0xFF00FF00FF00FF00UL	414:21:10732:10751	5647348	9	True				
ANR	5647361	Statement	L	414:41:10752:10752	5647348	10	True				
ANR	5647362	Statement	)	414:43:10754:10754	5647348	11	True				
ANR	5647363	Statement	|	414:45:10756:10756	5647348	12	True				
ANR	5647364	Statement	(	414:47:10758:10758	5647348	13	True				
ANR	5647365	Statement	(	414:48:10759:10759	5647348	14	True				
ANR	5647366	Statement	val	414:49:10760:10762	5647348	15	True				
ANR	5647367	Statement	>>	414:53:10764:10765	5647348	16	True				
ANR	5647368	Statement	8	414:56:10767:10767	5647348	17	True				
ANR	5647369	Statement	)	414:57:10768:10768	5647348	18	True				
ANR	5647370	Statement	&	414:59:10770:10770	5647348	19	True				
ANR	5647371	Statement	0x00FF00FF00FF00FFUL	414:61:10772:10791	5647348	20	True				
ANR	5647372	Statement	L	414:81:10792:10792	5647348	21	True				
ANR	5647373	Statement	)	414:83:10794:10794	5647348	22	True				
ANR	5647374	ExpressionStatement		414:84:10795:10795	5647348	23	True				
ANR	5647375	Statement	val	415:1:10798:10800	5647348	24	True				
ANR	5647376	Statement	=	415:5:10802:10802	5647348	25	True				
ANR	5647377	Statement	(	415:7:10804:10804	5647348	26	True				
ANR	5647378	Statement	(	415:8:10805:10805	5647348	27	True				
ANR	5647379	Statement	val	415:9:10806:10808	5647348	28	True				
ANR	5647380	Statement	<<	415:13:10810:10811	5647348	29	True				
ANR	5647381	Statement	16	415:16:10813:10814	5647348	30	True				
ANR	5647382	Statement	)	415:18:10815:10815	5647348	31	True				
ANR	5647383	Statement	&	415:20:10817:10817	5647348	32	True				
ANR	5647384	Statement	0xFFFF0000FFFF0000UL	415:22:10819:10838	5647348	33	True				
ANR	5647385	Statement	L	415:42:10839:10839	5647348	34	True				
ANR	5647386	Statement	)	415:44:10841:10841	5647348	35	True				
ANR	5647387	Statement	|	415:46:10843:10843	5647348	36	True				
ANR	5647388	Statement	(	415:48:10845:10845	5647348	37	True				
ANR	5647389	Statement	(	415:49:10846:10846	5647348	38	True				
ANR	5647390	Statement	val	415:50:10847:10849	5647348	39	True				
ANR	5647391	Statement	>>	415:54:10851:10852	5647348	40	True				
ANR	5647392	Statement	16	415:57:10854:10855	5647348	41	True				
ANR	5647393	Statement	)	415:59:10856:10856	5647348	42	True				
ANR	5647394	Statement	&	415:61:10858:10858	5647348	43	True				
ANR	5647395	Statement	0x0000FFFF0000FFFFUL	415:63:10860:10879	5647348	44	True				
ANR	5647396	Statement	L	415:83:10880:10880	5647348	45	True				
ANR	5647397	Statement	)	415:85:10882:10882	5647348	46	True				
ANR	5647398	ExpressionStatement		415:86:10883:10883	5647348	47	True				
ANR	5647399	Statement	return	416:1:10886:10891	5647348	48	True				
ANR	5647400	Statement	(	416:8:10893:10893	5647348	49	True				
ANR	5647401	Statement	val	416:9:10894:10896	5647348	50	True				
ANR	5647402	Statement	<<	416:13:10898:10899	5647348	51	True				
ANR	5647403	Statement	32	416:16:10901:10902	5647348	52	True				
ANR	5647404	Statement	)	416:18:10903:10903	5647348	53	True				
ANR	5647405	Statement	|	416:20:10905:10905	5647348	54	True				
ANR	5647406	Statement	(	416:22:10907:10907	5647348	55	True				
ANR	5647407	Statement	(	416:23:10908:10908	5647348	56	True				
ANR	5647408	Statement	val	416:24:10909:10911	5647348	57	True				
ANR	5647409	Statement	>>	416:28:10913:10914	5647348	58	True				
ANR	5647410	Statement	32	416:31:10916:10917	5647348	59	True				
ANR	5647411	Statement	)	416:33:10918:10918	5647348	60	True				
ANR	5647412	Statement	&	416:35:10920:10920	5647348	61	True				
ANR	5647413	Statement	0xFFFFFFFFUL	416:37:10922:10933	5647348	62	True				
ANR	5647414	Statement	L	416:49:10934:10934	5647348	63	True				
ANR	5647415	Statement	)	416:50:10935:10935	5647348	64	True				
ANR	5647416	ExpressionStatement		416:51:10936:10936	5647348	65	True				
ANR	5647417	ReturnType	static inline st64		5647348	1					
ANR	5647418	Identifier	r_swap_st64		5647348	2					
ANR	5647419	ParameterList	st64 val		5647348	3					
ANR	5647420	Parameter	st64 val	413:31:10699:10706	5647348	0	True				
ANR	5647421	ParameterType	st64		5647348	0					
ANR	5647422	Identifier	val		5647348	1					
ANR	5647423	CFGEntryNode	ENTRY		5647348		True				
ANR	5647424	CFGExitNode	EXIT		5647348		True				
ANR	5647425	Symbol	val		5647348						
ANR	5647426	Function	UT64_ADD	420:0:11026:11158							
ANR	5647427	FunctionDef	"UT64_ADD (ut64 * r , ut64 a , ut64 b)"		5647426	0					
ANR	5647428	CompoundStatement		420:52:11078:11158	5647426	0					
ANR	5647429	IfStatement	if ( UT64_MAX - a < b )		5647426	0					
ANR	5647430	Condition	UT64_MAX - a < b	421:5:11085:11100	5647426	0	True				
ANR	5647431	RelationalExpression	UT64_MAX - a < b		5647426	0		<			
ANR	5647432	AdditiveExpression	UT64_MAX - a		5647426	0		-			
ANR	5647433	Identifier	UT64_MAX		5647426	0					
ANR	5647434	Identifier	a		5647426	1					
ANR	5647435	Identifier	b		5647426	1					
ANR	5647436	CompoundStatement		2:23:24:24	5647426	1					
ANR	5647437	ReturnStatement	return 0 ;	422:2:11107:11115	5647426	0	True				
ANR	5647438	PrimaryExpression	0		5647426	0					
ANR	5647439	IfStatement	if ( r )		5647426	1					
ANR	5647440	Condition	r	424:5:11125:11125	5647426	0	True				
ANR	5647441	Identifier	r		5647426	0					
ANR	5647442	CompoundStatement		5:8:49:49	5647426	1					
ANR	5647443	ExpressionStatement	* r = a + b	425:2:11132:11142	5647426	0	True				
ANR	5647444	AssignmentExpression	* r = a + b		5647426	0		=			
ANR	5647445	UnaryOperationExpression	* r		5647426	0					
ANR	5647446	UnaryOperator	*		5647426	0					
ANR	5647447	Identifier	r		5647426	1					
ANR	5647448	AdditiveExpression	a + b		5647426	1		+			
ANR	5647449	Identifier	a		5647426	0					
ANR	5647450	Identifier	b		5647426	1					
ANR	5647451	ReturnStatement	return 1 ;	427:1:11148:11156	5647426	2	True				
ANR	5647452	PrimaryExpression	1		5647426	0					
ANR	5647453	ReturnType	static inline int		5647426	1					
ANR	5647454	Identifier	UT64_ADD		5647426	2					
ANR	5647455	ParameterList	"ut64 * r , ut64 a , ut64 b"		5647426	3					
ANR	5647456	Parameter	ut64 * r	420:27:11053:11059	5647426	0	True				
ANR	5647457	ParameterType	ut64 *		5647426	0					
ANR	5647458	Identifier	r		5647426	1					
ANR	5647459	Parameter	ut64 a	420:36:11062:11067	5647426	1	True				
ANR	5647460	ParameterType	ut64		5647426	0					
ANR	5647461	Identifier	a		5647426	1					
ANR	5647462	Parameter	ut64 b	420:44:11070:11075	5647426	2	True				
ANR	5647463	ParameterType	ut64		5647426	0					
ANR	5647464	Identifier	b		5647426	1					
ANR	5647465	CFGEntryNode	ENTRY		5647426		True				
ANR	5647466	CFGExitNode	EXIT		5647426		True				
ANR	5647467	Symbol	a		5647426						
ANR	5647468	Symbol	r		5647426						
ANR	5647469	Symbol	b		5647426						
ANR	5647470	Symbol	UT64_MAX		5647426						
ANR	5647471	Symbol	* r		5647426						
ANR	5647472	Function	UT64_MUL	430:0:11161:11298							
ANR	5647473	FunctionDef	"UT64_MUL (ut64 * r , ut64 a , ut64 b)"		5647472	0					
ANR	5647474	CompoundStatement		430:52:11213:11298	5647472	0					
ANR	5647475	IfStatement	if ( a && UT64_MAX / a < b )		5647472	0					
ANR	5647476	Condition	a && UT64_MAX / a < b	431:5:11220:11240	5647472	0	True				
ANR	5647477	AndExpression	a && UT64_MAX / a < b		5647472	0		&&			
ANR	5647478	Identifier	a		5647472	0					
ANR	5647479	RelationalExpression	UT64_MAX / a < b		5647472	1		<			
ANR	5647480	MultiplicativeExpression	UT64_MAX / a		5647472	0		/			
ANR	5647481	Identifier	UT64_MAX		5647472	0					
ANR	5647482	Identifier	a		5647472	1					
ANR	5647483	Identifier	b		5647472	1					
ANR	5647484	CompoundStatement		2:28:29:29	5647472	1					
ANR	5647485	ReturnStatement	return 0 ;	432:2:11247:11255	5647472	0	True				
ANR	5647486	PrimaryExpression	0		5647472	0					
ANR	5647487	IfStatement	if ( r )		5647472	1					
ANR	5647488	Condition	r	434:5:11265:11265	5647472	0	True				
ANR	5647489	Identifier	r		5647472	0					
ANR	5647490	CompoundStatement		5:8:54:54	5647472	1					
ANR	5647491	ExpressionStatement	* r = a * b	435:2:11272:11282	5647472	0	True				
ANR	5647492	AssignmentExpression	* r = a * b		5647472	0		=			
ANR	5647493	UnaryOperationExpression	* r		5647472	0					
ANR	5647494	UnaryOperator	*		5647472	0					
ANR	5647495	Identifier	r		5647472	1					
ANR	5647496	MultiplicativeExpression	a * b		5647472	1		*			
ANR	5647497	Identifier	a		5647472	0					
ANR	5647498	Identifier	b		5647472	1					
ANR	5647499	ReturnStatement	return 1 ;	437:1:11288:11296	5647472	2	True				
ANR	5647500	PrimaryExpression	1		5647472	0					
ANR	5647501	ReturnType	static inline int		5647472	1					
ANR	5647502	Identifier	UT64_MUL		5647472	2					
ANR	5647503	ParameterList	"ut64 * r , ut64 a , ut64 b"		5647472	3					
ANR	5647504	Parameter	ut64 * r	430:27:11188:11194	5647472	0	True				
ANR	5647505	ParameterType	ut64 *		5647472	0					
ANR	5647506	Identifier	r		5647472	1					
ANR	5647507	Parameter	ut64 a	430:36:11197:11202	5647472	1	True				
ANR	5647508	ParameterType	ut64		5647472	0					
ANR	5647509	Identifier	a		5647472	1					
ANR	5647510	Parameter	ut64 b	430:44:11205:11210	5647472	2	True				
ANR	5647511	ParameterType	ut64		5647472	0					
ANR	5647512	Identifier	b		5647472	1					
ANR	5647513	CFGEntryNode	ENTRY		5647472		True				
ANR	5647514	CFGExitNode	EXIT		5647472		True				
ANR	5647515	Symbol	a		5647472						
ANR	5647516	Symbol	r		5647472						
ANR	5647517	Symbol	b		5647472						
ANR	5647518	Symbol	UT64_MAX		5647472						
ANR	5647519	Symbol	* r		5647472						
ANR	5647520	Function	UT64_SUB	440:0:11301:11422							
ANR	5647521	FunctionDef	"UT64_SUB (ut64 * r , ut64 a , ut64 b)"		5647520	0					
ANR	5647522	CompoundStatement		440:52:11353:11422	5647520	0					
ANR	5647523	IfStatement	if ( b > a )		5647520	0					
ANR	5647524	Condition	b > a	441:5:11360:11364	5647520	0	True				
ANR	5647525	RelationalExpression	b > a		5647520	0		>			
ANR	5647526	Identifier	b		5647520	0					
ANR	5647527	Identifier	a		5647520	1					
ANR	5647528	CompoundStatement		2:12:13:13	5647520	1					
ANR	5647529	ReturnStatement	return 0 ;	442:2:11371:11379	5647520	0	True				
ANR	5647530	PrimaryExpression	0		5647520	0					
ANR	5647531	IfStatement	if ( r )		5647520	1					
ANR	5647532	Condition	r	444:5:11389:11389	5647520	0	True				
ANR	5647533	Identifier	r		5647520	0					
ANR	5647534	CompoundStatement		5:8:38:38	5647520	1					
ANR	5647535	ExpressionStatement	* r = a - b	445:2:11396:11406	5647520	0	True				
ANR	5647536	AssignmentExpression	* r = a - b		5647520	0		=			
ANR	5647537	UnaryOperationExpression	* r		5647520	0					
ANR	5647538	UnaryOperator	*		5647520	0					
ANR	5647539	Identifier	r		5647520	1					
ANR	5647540	AdditiveExpression	a - b		5647520	1		-			
ANR	5647541	Identifier	a		5647520	0					
ANR	5647542	Identifier	b		5647520	1					
ANR	5647543	ReturnStatement	return 1 ;	447:1:11412:11420	5647520	2	True				
ANR	5647544	PrimaryExpression	1		5647520	0					
ANR	5647545	ReturnType	static inline int		5647520	1					
ANR	5647546	Identifier	UT64_SUB		5647520	2					
ANR	5647547	ParameterList	"ut64 * r , ut64 a , ut64 b"		5647520	3					
ANR	5647548	Parameter	ut64 * r	440:27:11328:11334	5647520	0	True				
ANR	5647549	ParameterType	ut64 *		5647520	0					
ANR	5647550	Identifier	r		5647520	1					
ANR	5647551	Parameter	ut64 a	440:36:11337:11342	5647520	1	True				
ANR	5647552	ParameterType	ut64		5647520	0					
ANR	5647553	Identifier	a		5647520	1					
ANR	5647554	Parameter	ut64 b	440:44:11345:11350	5647520	2	True				
ANR	5647555	ParameterType	ut64		5647520	0					
ANR	5647556	Identifier	b		5647520	1					
ANR	5647557	CFGEntryNode	ENTRY		5647520		True				
ANR	5647558	CFGExitNode	EXIT		5647520		True				
ANR	5647559	Symbol	a		5647520						
ANR	5647560	Symbol	r		5647520						
ANR	5647561	Symbol	b		5647520						
ANR	5647562	Symbol	* r		5647520						
ANR	5647563	Function	UT32_ADD	450:0:11425:11557							
ANR	5647564	FunctionDef	"UT32_ADD (ut32 * r , ut32 a , ut32 b)"		5647563	0					
ANR	5647565	CompoundStatement		450:52:11477:11557	5647563	0					
ANR	5647566	IfStatement	if ( UT32_MAX - a < b )		5647563	0					
ANR	5647567	Condition	UT32_MAX - a < b	451:5:11484:11499	5647563	0	True				
ANR	5647568	RelationalExpression	UT32_MAX - a < b		5647563	0		<			
ANR	5647569	AdditiveExpression	UT32_MAX - a		5647563	0		-			
ANR	5647570	Identifier	UT32_MAX		5647563	0					
ANR	5647571	Identifier	a		5647563	1					
ANR	5647572	Identifier	b		5647563	1					
ANR	5647573	CompoundStatement		2:23:24:24	5647563	1					
ANR	5647574	ReturnStatement	return 0 ;	452:2:11506:11514	5647563	0	True				
ANR	5647575	PrimaryExpression	0		5647563	0					
ANR	5647576	IfStatement	if ( r )		5647563	1					
ANR	5647577	Condition	r	454:5:11524:11524	5647563	0	True				
ANR	5647578	Identifier	r		5647563	0					
ANR	5647579	CompoundStatement		5:8:49:49	5647563	1					
ANR	5647580	ExpressionStatement	* r = a + b	455:2:11531:11541	5647563	0	True				
ANR	5647581	AssignmentExpression	* r = a + b		5647563	0		=			
ANR	5647582	UnaryOperationExpression	* r		5647563	0					
ANR	5647583	UnaryOperator	*		5647563	0					
ANR	5647584	Identifier	r		5647563	1					
ANR	5647585	AdditiveExpression	a + b		5647563	1		+			
ANR	5647586	Identifier	a		5647563	0					
ANR	5647587	Identifier	b		5647563	1					
ANR	5647588	ReturnStatement	return 1 ;	457:1:11547:11555	5647563	2	True				
ANR	5647589	PrimaryExpression	1		5647563	0					
ANR	5647590	ReturnType	static inline int		5647563	1					
ANR	5647591	Identifier	UT32_ADD		5647563	2					
ANR	5647592	ParameterList	"ut32 * r , ut32 a , ut32 b"		5647563	3					
ANR	5647593	Parameter	ut32 * r	450:27:11452:11458	5647563	0	True				
ANR	5647594	ParameterType	ut32 *		5647563	0					
ANR	5647595	Identifier	r		5647563	1					
ANR	5647596	Parameter	ut32 a	450:36:11461:11466	5647563	1	True				
ANR	5647597	ParameterType	ut32		5647563	0					
ANR	5647598	Identifier	a		5647563	1					
ANR	5647599	Parameter	ut32 b	450:44:11469:11474	5647563	2	True				
ANR	5647600	ParameterType	ut32		5647563	0					
ANR	5647601	Identifier	b		5647563	1					
ANR	5647602	CFGEntryNode	ENTRY		5647563		True				
ANR	5647603	CFGExitNode	EXIT		5647563		True				
ANR	5647604	Symbol	UT32_MAX		5647563						
ANR	5647605	Symbol	a		5647563						
ANR	5647606	Symbol	r		5647563						
ANR	5647607	Symbol	b		5647563						
ANR	5647608	Symbol	* r		5647563						
ANR	5647609	Function	UT32_MUL	460:0:11560:11697							
ANR	5647610	FunctionDef	"UT32_MUL (ut32 * r , ut32 a , ut32 b)"		5647609	0					
ANR	5647611	CompoundStatement		460:52:11612:11697	5647609	0					
ANR	5647612	IfStatement	if ( a && UT32_MAX / a < b )		5647609	0					
ANR	5647613	Condition	a && UT32_MAX / a < b	461:5:11619:11639	5647609	0	True				
ANR	5647614	AndExpression	a && UT32_MAX / a < b		5647609	0		&&			
ANR	5647615	Identifier	a		5647609	0					
ANR	5647616	RelationalExpression	UT32_MAX / a < b		5647609	1		<			
ANR	5647617	MultiplicativeExpression	UT32_MAX / a		5647609	0		/			
ANR	5647618	Identifier	UT32_MAX		5647609	0					
ANR	5647619	Identifier	a		5647609	1					
ANR	5647620	Identifier	b		5647609	1					
ANR	5647621	CompoundStatement		2:28:29:29	5647609	1					
ANR	5647622	ReturnStatement	return 0 ;	462:2:11646:11654	5647609	0	True				
ANR	5647623	PrimaryExpression	0		5647609	0					
ANR	5647624	IfStatement	if ( r )		5647609	1					
ANR	5647625	Condition	r	464:5:11664:11664	5647609	0	True				
ANR	5647626	Identifier	r		5647609	0					
ANR	5647627	CompoundStatement		5:8:54:54	5647609	1					
ANR	5647628	ExpressionStatement	* r = a * b	465:2:11671:11681	5647609	0	True				
ANR	5647629	AssignmentExpression	* r = a * b		5647609	0		=			
ANR	5647630	UnaryOperationExpression	* r		5647609	0					
ANR	5647631	UnaryOperator	*		5647609	0					
ANR	5647632	Identifier	r		5647609	1					
ANR	5647633	MultiplicativeExpression	a * b		5647609	1		*			
ANR	5647634	Identifier	a		5647609	0					
ANR	5647635	Identifier	b		5647609	1					
ANR	5647636	ReturnStatement	return 1 ;	467:1:11687:11695	5647609	2	True				
ANR	5647637	PrimaryExpression	1		5647609	0					
ANR	5647638	ReturnType	static inline int		5647609	1					
ANR	5647639	Identifier	UT32_MUL		5647609	2					
ANR	5647640	ParameterList	"ut32 * r , ut32 a , ut32 b"		5647609	3					
ANR	5647641	Parameter	ut32 * r	460:27:11587:11593	5647609	0	True				
ANR	5647642	ParameterType	ut32 *		5647609	0					
ANR	5647643	Identifier	r		5647609	1					
ANR	5647644	Parameter	ut32 a	460:36:11596:11601	5647609	1	True				
ANR	5647645	ParameterType	ut32		5647609	0					
ANR	5647646	Identifier	a		5647609	1					
ANR	5647647	Parameter	ut32 b	460:44:11604:11609	5647609	2	True				
ANR	5647648	ParameterType	ut32		5647609	0					
ANR	5647649	Identifier	b		5647609	1					
ANR	5647650	CFGEntryNode	ENTRY		5647609		True				
ANR	5647651	CFGExitNode	EXIT		5647609		True				
ANR	5647652	Symbol	UT32_MAX		5647609						
ANR	5647653	Symbol	a		5647609						
ANR	5647654	Symbol	r		5647609						
ANR	5647655	Symbol	b		5647609						
ANR	5647656	Symbol	* r		5647609						
ANR	5647657	Function	UT32_SUB	470:0:11700:11821							
ANR	5647658	FunctionDef	"UT32_SUB (ut32 * r , ut32 a , ut32 b)"		5647657	0					
ANR	5647659	CompoundStatement		470:52:11752:11821	5647657	0					
ANR	5647660	IfStatement	if ( b > a )		5647657	0					
ANR	5647661	Condition	b > a	471:5:11759:11763	5647657	0	True				
ANR	5647662	RelationalExpression	b > a		5647657	0		>			
ANR	5647663	Identifier	b		5647657	0					
ANR	5647664	Identifier	a		5647657	1					
ANR	5647665	CompoundStatement		2:12:13:13	5647657	1					
ANR	5647666	ReturnStatement	return 0 ;	472:2:11770:11778	5647657	0	True				
ANR	5647667	PrimaryExpression	0		5647657	0					
ANR	5647668	IfStatement	if ( r )		5647657	1					
ANR	5647669	Condition	r	474:5:11788:11788	5647657	0	True				
ANR	5647670	Identifier	r		5647657	0					
ANR	5647671	CompoundStatement		5:8:38:38	5647657	1					
ANR	5647672	ExpressionStatement	* r = a - b	475:2:11795:11805	5647657	0	True				
ANR	5647673	AssignmentExpression	* r = a - b		5647657	0		=			
ANR	5647674	UnaryOperationExpression	* r		5647657	0					
ANR	5647675	UnaryOperator	*		5647657	0					
ANR	5647676	Identifier	r		5647657	1					
ANR	5647677	AdditiveExpression	a - b		5647657	1		-			
ANR	5647678	Identifier	a		5647657	0					
ANR	5647679	Identifier	b		5647657	1					
ANR	5647680	ReturnStatement	return 1 ;	477:1:11811:11819	5647657	2	True				
ANR	5647681	PrimaryExpression	1		5647657	0					
ANR	5647682	ReturnType	static inline int		5647657	1					
ANR	5647683	Identifier	UT32_SUB		5647657	2					
ANR	5647684	ParameterList	"ut32 * r , ut32 a , ut32 b"		5647657	3					
ANR	5647685	Parameter	ut32 * r	470:27:11727:11733	5647657	0	True				
ANR	5647686	ParameterType	ut32 *		5647657	0					
ANR	5647687	Identifier	r		5647657	1					
ANR	5647688	Parameter	ut32 a	470:36:11736:11741	5647657	1	True				
ANR	5647689	ParameterType	ut32		5647657	0					
ANR	5647690	Identifier	a		5647657	1					
ANR	5647691	Parameter	ut32 b	470:44:11744:11749	5647657	2	True				
ANR	5647692	ParameterType	ut32		5647657	0					
ANR	5647693	Identifier	b		5647657	1					
ANR	5647694	CFGEntryNode	ENTRY		5647657		True				
ANR	5647695	CFGExitNode	EXIT		5647657		True				
ANR	5647696	Symbol	a		5647657						
ANR	5647697	Symbol	r		5647657						
ANR	5647698	Symbol	b		5647657						
ANR	5647699	Symbol	* r		5647657						
ANR	5647700	Function	UT16_ADD	480:0:11824:11956							
ANR	5647701	FunctionDef	"UT16_ADD (ut16 * r , ut16 a , ut16 b)"		5647700	0					
ANR	5647702	CompoundStatement		480:52:11876:11956	5647700	0					
ANR	5647703	IfStatement	if ( UT16_MAX - a < b )		5647700	0					
ANR	5647704	Condition	UT16_MAX - a < b	481:5:11883:11898	5647700	0	True				
ANR	5647705	RelationalExpression	UT16_MAX - a < b		5647700	0		<			
ANR	5647706	AdditiveExpression	UT16_MAX - a		5647700	0		-			
ANR	5647707	Identifier	UT16_MAX		5647700	0					
ANR	5647708	Identifier	a		5647700	1					
ANR	5647709	Identifier	b		5647700	1					
ANR	5647710	CompoundStatement		2:23:24:24	5647700	1					
ANR	5647711	ReturnStatement	return 0 ;	482:2:11905:11913	5647700	0	True				
ANR	5647712	PrimaryExpression	0		5647700	0					
ANR	5647713	IfStatement	if ( r )		5647700	1					
ANR	5647714	Condition	r	484:5:11923:11923	5647700	0	True				
ANR	5647715	Identifier	r		5647700	0					
ANR	5647716	CompoundStatement		5:8:49:49	5647700	1					
ANR	5647717	ExpressionStatement	* r = a + b	485:2:11930:11940	5647700	0	True				
ANR	5647718	AssignmentExpression	* r = a + b		5647700	0		=			
ANR	5647719	UnaryOperationExpression	* r		5647700	0					
ANR	5647720	UnaryOperator	*		5647700	0					
ANR	5647721	Identifier	r		5647700	1					
ANR	5647722	AdditiveExpression	a + b		5647700	1		+			
ANR	5647723	Identifier	a		5647700	0					
ANR	5647724	Identifier	b		5647700	1					
ANR	5647725	ReturnStatement	return 1 ;	487:1:11946:11954	5647700	2	True				
ANR	5647726	PrimaryExpression	1		5647700	0					
ANR	5647727	ReturnType	static inline int		5647700	1					
ANR	5647728	Identifier	UT16_ADD		5647700	2					
ANR	5647729	ParameterList	"ut16 * r , ut16 a , ut16 b"		5647700	3					
ANR	5647730	Parameter	ut16 * r	480:27:11851:11857	5647700	0	True				
ANR	5647731	ParameterType	ut16 *		5647700	0					
ANR	5647732	Identifier	r		5647700	1					
ANR	5647733	Parameter	ut16 a	480:36:11860:11865	5647700	1	True				
ANR	5647734	ParameterType	ut16		5647700	0					
ANR	5647735	Identifier	a		5647700	1					
ANR	5647736	Parameter	ut16 b	480:44:11868:11873	5647700	2	True				
ANR	5647737	ParameterType	ut16		5647700	0					
ANR	5647738	Identifier	b		5647700	1					
ANR	5647739	CFGEntryNode	ENTRY		5647700		True				
ANR	5647740	CFGExitNode	EXIT		5647700		True				
ANR	5647741	Symbol	a		5647700						
ANR	5647742	Symbol	r		5647700						
ANR	5647743	Symbol	b		5647700						
ANR	5647744	Symbol	UT16_MAX		5647700						
ANR	5647745	Symbol	* r		5647700						
ANR	5647746	Function	UT16_MUL	490:0:11959:12096							
ANR	5647747	FunctionDef	"UT16_MUL (ut16 * r , ut16 a , ut16 b)"		5647746	0					
ANR	5647748	CompoundStatement		490:52:12011:12096	5647746	0					
ANR	5647749	IfStatement	if ( a && UT16_MAX / a < b )		5647746	0					
ANR	5647750	Condition	a && UT16_MAX / a < b	491:5:12018:12038	5647746	0	True				
ANR	5647751	AndExpression	a && UT16_MAX / a < b		5647746	0		&&			
ANR	5647752	Identifier	a		5647746	0					
ANR	5647753	RelationalExpression	UT16_MAX / a < b		5647746	1		<			
ANR	5647754	MultiplicativeExpression	UT16_MAX / a		5647746	0		/			
ANR	5647755	Identifier	UT16_MAX		5647746	0					
ANR	5647756	Identifier	a		5647746	1					
ANR	5647757	Identifier	b		5647746	1					
ANR	5647758	CompoundStatement		2:28:29:29	5647746	1					
ANR	5647759	ReturnStatement	return 0 ;	492:2:12045:12053	5647746	0	True				
ANR	5647760	PrimaryExpression	0		5647746	0					
ANR	5647761	IfStatement	if ( r )		5647746	1					
ANR	5647762	Condition	r	494:5:12063:12063	5647746	0	True				
ANR	5647763	Identifier	r		5647746	0					
ANR	5647764	CompoundStatement		5:8:54:54	5647746	1					
ANR	5647765	ExpressionStatement	* r = a * b	495:2:12070:12080	5647746	0	True				
ANR	5647766	AssignmentExpression	* r = a * b		5647746	0		=			
ANR	5647767	UnaryOperationExpression	* r		5647746	0					
ANR	5647768	UnaryOperator	*		5647746	0					
ANR	5647769	Identifier	r		5647746	1					
ANR	5647770	MultiplicativeExpression	a * b		5647746	1		*			
ANR	5647771	Identifier	a		5647746	0					
ANR	5647772	Identifier	b		5647746	1					
ANR	5647773	ReturnStatement	return 1 ;	497:1:12086:12094	5647746	2	True				
ANR	5647774	PrimaryExpression	1		5647746	0					
ANR	5647775	ReturnType	static inline int		5647746	1					
ANR	5647776	Identifier	UT16_MUL		5647746	2					
ANR	5647777	ParameterList	"ut16 * r , ut16 a , ut16 b"		5647746	3					
ANR	5647778	Parameter	ut16 * r	490:27:11986:11992	5647746	0	True				
ANR	5647779	ParameterType	ut16 *		5647746	0					
ANR	5647780	Identifier	r		5647746	1					
ANR	5647781	Parameter	ut16 a	490:36:11995:12000	5647746	1	True				
ANR	5647782	ParameterType	ut16		5647746	0					
ANR	5647783	Identifier	a		5647746	1					
ANR	5647784	Parameter	ut16 b	490:44:12003:12008	5647746	2	True				
ANR	5647785	ParameterType	ut16		5647746	0					
ANR	5647786	Identifier	b		5647746	1					
ANR	5647787	CFGEntryNode	ENTRY		5647746		True				
ANR	5647788	CFGExitNode	EXIT		5647746		True				
ANR	5647789	Symbol	a		5647746						
ANR	5647790	Symbol	r		5647746						
ANR	5647791	Symbol	b		5647746						
ANR	5647792	Symbol	UT16_MAX		5647746						
ANR	5647793	Symbol	* r		5647746						
ANR	5647794	Function	UT16_SUB	500:0:12099:12220							
ANR	5647795	FunctionDef	"UT16_SUB (ut16 * r , ut16 a , ut16 b)"		5647794	0					
ANR	5647796	CompoundStatement		500:52:12151:12220	5647794	0					
ANR	5647797	IfStatement	if ( b > a )		5647794	0					
ANR	5647798	Condition	b > a	501:5:12158:12162	5647794	0	True				
ANR	5647799	RelationalExpression	b > a		5647794	0		>			
ANR	5647800	Identifier	b		5647794	0					
ANR	5647801	Identifier	a		5647794	1					
ANR	5647802	CompoundStatement		2:12:13:13	5647794	1					
ANR	5647803	ReturnStatement	return 0 ;	502:2:12169:12177	5647794	0	True				
ANR	5647804	PrimaryExpression	0		5647794	0					
ANR	5647805	IfStatement	if ( r )		5647794	1					
ANR	5647806	Condition	r	504:5:12187:12187	5647794	0	True				
ANR	5647807	Identifier	r		5647794	0					
ANR	5647808	CompoundStatement		5:8:38:38	5647794	1					
ANR	5647809	ExpressionStatement	* r = a - b	505:2:12194:12204	5647794	0	True				
ANR	5647810	AssignmentExpression	* r = a - b		5647794	0		=			
ANR	5647811	UnaryOperationExpression	* r		5647794	0					
ANR	5647812	UnaryOperator	*		5647794	0					
ANR	5647813	Identifier	r		5647794	1					
ANR	5647814	AdditiveExpression	a - b		5647794	1		-			
ANR	5647815	Identifier	a		5647794	0					
ANR	5647816	Identifier	b		5647794	1					
ANR	5647817	ReturnStatement	return 1 ;	507:1:12210:12218	5647794	2	True				
ANR	5647818	PrimaryExpression	1		5647794	0					
ANR	5647819	ReturnType	static inline int		5647794	1					
ANR	5647820	Identifier	UT16_SUB		5647794	2					
ANR	5647821	ParameterList	"ut16 * r , ut16 a , ut16 b"		5647794	3					
ANR	5647822	Parameter	ut16 * r	500:27:12126:12132	5647794	0	True				
ANR	5647823	ParameterType	ut16 *		5647794	0					
ANR	5647824	Identifier	r		5647794	1					
ANR	5647825	Parameter	ut16 a	500:36:12135:12140	5647794	1	True				
ANR	5647826	ParameterType	ut16		5647794	0					
ANR	5647827	Identifier	a		5647794	1					
ANR	5647828	Parameter	ut16 b	500:44:12143:12148	5647794	2	True				
ANR	5647829	ParameterType	ut16		5647794	0					
ANR	5647830	Identifier	b		5647794	1					
ANR	5647831	CFGEntryNode	ENTRY		5647794		True				
ANR	5647832	CFGExitNode	EXIT		5647794		True				
ANR	5647833	Symbol	a		5647794						
ANR	5647834	Symbol	r		5647794						
ANR	5647835	Symbol	b		5647794						
ANR	5647836	Symbol	* r		5647794						
ANR	5647837	Function	UT8_ADD	510:0:12223:12350							
ANR	5647838	FunctionDef	"UT8_ADD (ut8 * r , ut8 a , ut8 b)"		5647837	0					
ANR	5647839	CompoundStatement		510:48:12271:12350	5647837	0					
ANR	5647840	IfStatement	if ( UT8_MAX - a < b )		5647837	0					
ANR	5647841	Condition	UT8_MAX - a < b	511:5:12278:12292	5647837	0	True				
ANR	5647842	RelationalExpression	UT8_MAX - a < b		5647837	0		<			
ANR	5647843	AdditiveExpression	UT8_MAX - a		5647837	0		-			
ANR	5647844	Identifier	UT8_MAX		5647837	0					
ANR	5647845	Identifier	a		5647837	1					
ANR	5647846	Identifier	b		5647837	1					
ANR	5647847	CompoundStatement		2:22:23:23	5647837	1					
ANR	5647848	ReturnStatement	return 0 ;	512:2:12299:12307	5647837	0	True				
ANR	5647849	PrimaryExpression	0		5647837	0					
ANR	5647850	IfStatement	if ( r )		5647837	1					
ANR	5647851	Condition	r	514:5:12317:12317	5647837	0	True				
ANR	5647852	Identifier	r		5647837	0					
ANR	5647853	CompoundStatement		5:8:48:48	5647837	1					
ANR	5647854	ExpressionStatement	* r = a + b	515:2:12324:12334	5647837	0	True				
ANR	5647855	AssignmentExpression	* r = a + b		5647837	0		=			
ANR	5647856	UnaryOperationExpression	* r		5647837	0					
ANR	5647857	UnaryOperator	*		5647837	0					
ANR	5647858	Identifier	r		5647837	1					
ANR	5647859	AdditiveExpression	a + b		5647837	1		+			
ANR	5647860	Identifier	a		5647837	0					
ANR	5647861	Identifier	b		5647837	1					
ANR	5647862	ReturnStatement	return 1 ;	517:1:12340:12348	5647837	2	True				
ANR	5647863	PrimaryExpression	1		5647837	0					
ANR	5647864	ReturnType	static inline int		5647837	1					
ANR	5647865	Identifier	UT8_ADD		5647837	2					
ANR	5647866	ParameterList	"ut8 * r , ut8 a , ut8 b"		5647837	3					
ANR	5647867	Parameter	ut8 * r	510:26:12249:12254	5647837	0	True				
ANR	5647868	ParameterType	ut8 *		5647837	0					
ANR	5647869	Identifier	r		5647837	1					
ANR	5647870	Parameter	ut8 a	510:34:12257:12261	5647837	1	True				
ANR	5647871	ParameterType	ut8		5647837	0					
ANR	5647872	Identifier	a		5647837	1					
ANR	5647873	Parameter	ut8 b	510:41:12264:12268	5647837	2	True				
ANR	5647874	ParameterType	ut8		5647837	0					
ANR	5647875	Identifier	b		5647837	1					
ANR	5647876	CFGEntryNode	ENTRY		5647837		True				
ANR	5647877	CFGExitNode	EXIT		5647837		True				
ANR	5647878	Symbol	a		5647837						
ANR	5647879	Symbol	r		5647837						
ANR	5647880	Symbol	b		5647837						
ANR	5647881	Symbol	UT8_MAX		5647837						
ANR	5647882	Symbol	* r		5647837						
ANR	5647883	Function	UT8_MUL	520:0:12353:12485							
ANR	5647884	FunctionDef	"UT8_MUL (ut8 * r , ut8 a , ut8 b)"		5647883	0					
ANR	5647885	CompoundStatement		520:48:12401:12485	5647883	0					
ANR	5647886	IfStatement	if ( a && UT8_MAX / a < b )		5647883	0					
ANR	5647887	Condition	a && UT8_MAX / a < b	521:5:12408:12427	5647883	0	True				
ANR	5647888	AndExpression	a && UT8_MAX / a < b		5647883	0		&&			
ANR	5647889	Identifier	a		5647883	0					
ANR	5647890	RelationalExpression	UT8_MAX / a < b		5647883	1		<			
ANR	5647891	MultiplicativeExpression	UT8_MAX / a		5647883	0		/			
ANR	5647892	Identifier	UT8_MAX		5647883	0					
ANR	5647893	Identifier	a		5647883	1					
ANR	5647894	Identifier	b		5647883	1					
ANR	5647895	CompoundStatement		2:27:28:28	5647883	1					
ANR	5647896	ReturnStatement	return 0 ;	522:2:12434:12442	5647883	0	True				
ANR	5647897	PrimaryExpression	0		5647883	0					
ANR	5647898	IfStatement	if ( r )		5647883	1					
ANR	5647899	Condition	r	524:5:12452:12452	5647883	0	True				
ANR	5647900	Identifier	r		5647883	0					
ANR	5647901	CompoundStatement		5:8:53:53	5647883	1					
ANR	5647902	ExpressionStatement	* r = a * b	525:2:12459:12469	5647883	0	True				
ANR	5647903	AssignmentExpression	* r = a * b		5647883	0		=			
ANR	5647904	UnaryOperationExpression	* r		5647883	0					
ANR	5647905	UnaryOperator	*		5647883	0					
ANR	5647906	Identifier	r		5647883	1					
ANR	5647907	MultiplicativeExpression	a * b		5647883	1		*			
ANR	5647908	Identifier	a		5647883	0					
ANR	5647909	Identifier	b		5647883	1					
ANR	5647910	ReturnStatement	return 1 ;	527:1:12475:12483	5647883	2	True				
ANR	5647911	PrimaryExpression	1		5647883	0					
ANR	5647912	ReturnType	static inline int		5647883	1					
ANR	5647913	Identifier	UT8_MUL		5647883	2					
ANR	5647914	ParameterList	"ut8 * r , ut8 a , ut8 b"		5647883	3					
ANR	5647915	Parameter	ut8 * r	520:26:12379:12384	5647883	0	True				
ANR	5647916	ParameterType	ut8 *		5647883	0					
ANR	5647917	Identifier	r		5647883	1					
ANR	5647918	Parameter	ut8 a	520:34:12387:12391	5647883	1	True				
ANR	5647919	ParameterType	ut8		5647883	0					
ANR	5647920	Identifier	a		5647883	1					
ANR	5647921	Parameter	ut8 b	520:41:12394:12398	5647883	2	True				
ANR	5647922	ParameterType	ut8		5647883	0					
ANR	5647923	Identifier	b		5647883	1					
ANR	5647924	CFGEntryNode	ENTRY		5647883		True				
ANR	5647925	CFGExitNode	EXIT		5647883		True				
ANR	5647926	Symbol	a		5647883						
ANR	5647927	Symbol	r		5647883						
ANR	5647928	Symbol	b		5647883						
ANR	5647929	Symbol	UT8_MAX		5647883						
ANR	5647930	Symbol	* r		5647883						
ANR	5647931	Function	UT8_SUB	530:0:12488:12605							
ANR	5647932	FunctionDef	"UT8_SUB (ut8 * r , ut8 a , ut8 b)"		5647931	0					
ANR	5647933	CompoundStatement		530:48:12536:12605	5647931	0					
ANR	5647934	IfStatement	if ( b > a )		5647931	0					
ANR	5647935	Condition	b > a	531:5:12543:12547	5647931	0	True				
ANR	5647936	RelationalExpression	b > a		5647931	0		>			
ANR	5647937	Identifier	b		5647931	0					
ANR	5647938	Identifier	a		5647931	1					
ANR	5647939	CompoundStatement		2:12:13:13	5647931	1					
ANR	5647940	ReturnStatement	return 0 ;	532:2:12554:12562	5647931	0	True				
ANR	5647941	PrimaryExpression	0		5647931	0					
ANR	5647942	IfStatement	if ( r )		5647931	1					
ANR	5647943	Condition	r	534:5:12572:12572	5647931	0	True				
ANR	5647944	Identifier	r		5647931	0					
ANR	5647945	CompoundStatement		5:8:38:38	5647931	1					
ANR	5647946	ExpressionStatement	* r = a - b	535:2:12579:12589	5647931	0	True				
ANR	5647947	AssignmentExpression	* r = a - b		5647931	0		=			
ANR	5647948	UnaryOperationExpression	* r		5647931	0					
ANR	5647949	UnaryOperator	*		5647931	0					
ANR	5647950	Identifier	r		5647931	1					
ANR	5647951	AdditiveExpression	a - b		5647931	1		-			
ANR	5647952	Identifier	a		5647931	0					
ANR	5647953	Identifier	b		5647931	1					
ANR	5647954	ReturnStatement	return 1 ;	537:1:12595:12603	5647931	2	True				
ANR	5647955	PrimaryExpression	1		5647931	0					
ANR	5647956	ReturnType	static inline int		5647931	1					
ANR	5647957	Identifier	UT8_SUB		5647931	2					
ANR	5647958	ParameterList	"ut8 * r , ut8 a , ut8 b"		5647931	3					
ANR	5647959	Parameter	ut8 * r	530:26:12514:12519	5647931	0	True				
ANR	5647960	ParameterType	ut8 *		5647931	0					
ANR	5647961	Identifier	r		5647931	1					
ANR	5647962	Parameter	ut8 a	530:34:12522:12526	5647931	1	True				
ANR	5647963	ParameterType	ut8		5647931	0					
ANR	5647964	Identifier	a		5647931	1					
ANR	5647965	Parameter	ut8 b	530:41:12529:12533	5647931	2	True				
ANR	5647966	ParameterType	ut8		5647931	0					
ANR	5647967	Identifier	b		5647931	1					
ANR	5647968	CFGEntryNode	ENTRY		5647931		True				
ANR	5647969	CFGExitNode	EXIT		5647931		True				
ANR	5647970	Symbol	a		5647931						
ANR	5647971	Symbol	r		5647931						
ANR	5647972	Symbol	b		5647931						
ANR	5647973	Symbol	* r		5647931						
