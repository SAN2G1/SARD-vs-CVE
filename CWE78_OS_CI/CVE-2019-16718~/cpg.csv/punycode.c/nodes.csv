command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5612753	File	data/converged/CVE-2019-16718~_radare2/punycode.c								
ANR	5612754	Function	utf32len	14:0:201:287							
ANR	5612755	FunctionDef	utf32len (ut32 * input)		5612754	0					
ANR	5612756	CompoundStatement		14:27:228:287	5612754	0					
ANR	5612757	IdentifierDeclStatement	int i = 0 ;	15:1:231:240	5612754	0	True				
ANR	5612758	IdentifierDecl	i = 0		5612754	0					
ANR	5612759	IdentifierDeclType	int		5612754	0					
ANR	5612760	Identifier	i		5612754	1					
ANR	5612761	AssignmentExpression	i = 0		5612754	2		=			
ANR	5612762	Identifier	i		5612754	0					
ANR	5612763	PrimaryExpression	0		5612754	1					
ANR	5612764	WhileStatement	while ( * ( input + i ) )		5612754	1					
ANR	5612765	Condition	* ( input + i )	16:8:250:261	5612754	0	True				
ANR	5612766	UnaryOperationExpression	* ( input + i )		5612754	0					
ANR	5612767	UnaryOperator	*		5612754	0					
ANR	5612768	AdditiveExpression	input + i		5612754	1		+			
ANR	5612769	Identifier	input		5612754	0					
ANR	5612770	Identifier	i		5612754	1					
ANR	5612771	CompoundStatement		3:22:35:35	5612754	1					
ANR	5612772	ExpressionStatement	i ++	17:2:268:271	5612754	0	True				
ANR	5612773	PostIncDecOperationExpression	i ++		5612754	0					
ANR	5612774	Identifier	i		5612754	0					
ANR	5612775	IncDec	++		5612754	1					
ANR	5612776	ReturnStatement	return i ;	19:1:277:285	5612754	2	True				
ANR	5612777	Identifier	i		5612754	0					
ANR	5612778	ReturnType	int		5612754	1					
ANR	5612779	Identifier	utf32len		5612754	2					
ANR	5612780	ParameterList	ut32 * input		5612754	3					
ANR	5612781	Parameter	ut32 * input	14:14:215:225	5612754	0	True				
ANR	5612782	ParameterType	ut32 *		5612754	0					
ANR	5612783	Identifier	input		5612754	1					
ANR	5612784	CFGEntryNode	ENTRY		5612754		True				
ANR	5612785	CFGExitNode	EXIT		5612754		True				
ANR	5612786	Symbol	input		5612754						
ANR	5612787	Symbol	* ( input + i )		5612754						
ANR	5612788	Symbol	* i		5612754						
ANR	5612789	Symbol	* input		5612754						
ANR	5612790	Symbol	i		5612754						
ANR	5612791	Function	utf32toutf8	22:0:290:1364							
ANR	5612792	FunctionDef	utf32toutf8 (ut32 * input)		5612791	0					
ANR	5612793	CompoundStatement		22:31:321:1364	5612791	0					
ANR	5612794	IfStatement	if ( ! input )		5612791	0					
ANR	5612795	Condition	! input	23:5:328:333	5612791	0	True				
ANR	5612796	UnaryOperationExpression	! input		5612791	0					
ANR	5612797	UnaryOperator	!		5612791	0					
ANR	5612798	Identifier	input		5612791	1					
ANR	5612799	CompoundStatement		2:13:14:14	5612791	1					
ANR	5612800	ExpressionStatement	"eprintf ( ""ERROR input is null\\n"" )"	24:2:340:373	5612791	0	True				
ANR	5612801	CallExpression	"eprintf ( ""ERROR input is null\\n"" )"		5612791	0					
ANR	5612802	Callee	eprintf		5612791	0					
ANR	5612803	Identifier	eprintf		5612791	0					
ANR	5612804	ArgumentList	"""ERROR input is null\\n"""		5612791	1					
ANR	5612805	Argument	"""ERROR input is null\\n"""		5612791	0					
ANR	5612806	PrimaryExpression	"""ERROR input is null\\n"""		5612791	0					
ANR	5612807	ReturnStatement	return NULL ;	25:2:377:388	5612791	1	True				
ANR	5612808	Identifier	NULL		5612791	0					
ANR	5612809	IdentifierDeclStatement	int i = 0 ;	28:1:395:404	5612791	1	True				
ANR	5612810	IdentifierDecl	i = 0		5612791	0					
ANR	5612811	IdentifierDeclType	int		5612791	0					
ANR	5612812	Identifier	i		5612791	1					
ANR	5612813	AssignmentExpression	i = 0		5612791	2		=			
ANR	5612814	Identifier	i		5612791	0					
ANR	5612815	PrimaryExpression	0		5612791	1					
ANR	5612816	IdentifierDeclStatement	int j = 0 ;	29:1:407:416	5612791	2	True				
ANR	5612817	IdentifierDecl	j = 0		5612791	0					
ANR	5612818	IdentifierDeclType	int		5612791	0					
ANR	5612819	Identifier	j		5612791	1					
ANR	5612820	AssignmentExpression	j = 0		5612791	2		=			
ANR	5612821	Identifier	j		5612791	0					
ANR	5612822	PrimaryExpression	0		5612791	1					
ANR	5612823	IdentifierDeclStatement	int len = utf32len ( input ) ;	30:1:419:445	5612791	3	True				
ANR	5612824	IdentifierDecl	len = utf32len ( input )		5612791	0					
ANR	5612825	IdentifierDeclType	int		5612791	0					
ANR	5612826	Identifier	len		5612791	1					
ANR	5612827	AssignmentExpression	len = utf32len ( input )		5612791	2		=			
ANR	5612828	Identifier	len		5612791	0					
ANR	5612829	CallExpression	utf32len ( input )		5612791	1					
ANR	5612830	Callee	utf32len		5612791	0					
ANR	5612831	Identifier	utf32len		5612791	0					
ANR	5612832	ArgumentList	input		5612791	1					
ANR	5612833	Argument	input		5612791	0					
ANR	5612834	Identifier	input		5612791	0					
ANR	5612835	IdentifierDeclStatement	"ut8 * result = calloc ( 4 , len + 1 ) ;"	31:1:448:481	5612791	4	True				
ANR	5612836	IdentifierDecl	"* result = calloc ( 4 , len + 1 )"		5612791	0					
ANR	5612837	IdentifierDeclType	ut8 *		5612791	0					
ANR	5612838	Identifier	result		5612791	1					
ANR	5612839	AssignmentExpression	"* result = calloc ( 4 , len + 1 )"		5612791	2		=			
ANR	5612840	Identifier	result		5612791	0					
ANR	5612841	CallExpression	"calloc ( 4 , len + 1 )"		5612791	1					
ANR	5612842	Callee	calloc		5612791	0					
ANR	5612843	Identifier	calloc		5612791	0					
ANR	5612844	ArgumentList	4		5612791	1					
ANR	5612845	Argument	4		5612791	0					
ANR	5612846	PrimaryExpression	4		5612791	0					
ANR	5612847	Argument	len + 1		5612791	1					
ANR	5612848	AdditiveExpression	len + 1		5612791	0		+			
ANR	5612849	Identifier	len		5612791	0					
ANR	5612850	PrimaryExpression	1		5612791	1					
ANR	5612851	IfStatement	if ( ! result )		5612791	5					
ANR	5612852	Condition	! result	32:5:488:494	5612791	0	True				
ANR	5612853	UnaryOperationExpression	! result		5612791	0					
ANR	5612854	UnaryOperator	!		5612791	0					
ANR	5612855	Identifier	result		5612791	1					
ANR	5612856	CompoundStatement		11:14:175:175	5612791	1					
ANR	5612857	ExpressionStatement	"eprintf ( ""ERROR: out of memory\\n"" )"	33:2:501:535	5612791	0	True				
ANR	5612858	CallExpression	"eprintf ( ""ERROR: out of memory\\n"" )"		5612791	0					
ANR	5612859	Callee	eprintf		5612791	0					
ANR	5612860	Identifier	eprintf		5612791	0					
ANR	5612861	ArgumentList	"""ERROR: out of memory\\n"""		5612791	1					
ANR	5612862	Argument	"""ERROR: out of memory\\n"""		5612791	0					
ANR	5612863	PrimaryExpression	"""ERROR: out of memory\\n"""		5612791	0					
ANR	5612864	ReturnStatement	return NULL ;	34:2:539:550	5612791	1	True				
ANR	5612865	Identifier	NULL		5612791	0					
ANR	5612866	ForStatement	for ( i = 0 ; i < len ; i ++ )		5612791	6					
ANR	5612867	ForInit	i = 0 ;	37:6:562:567	5612791	0	True				
ANR	5612868	AssignmentExpression	i = 0		5612791	0		=			
ANR	5612869	Identifier	i		5612791	0					
ANR	5612870	PrimaryExpression	0		5612791	1					
ANR	5612871	Condition	i < len	37:13:569:575	5612791	1	True				
ANR	5612872	RelationalExpression	i < len		5612791	0		<			
ANR	5612873	Identifier	i		5612791	0					
ANR	5612874	Identifier	len		5612791	1					
ANR	5612875	PostIncDecOperationExpression	i ++	37:22:578:580	5612791	2	True				
ANR	5612876	Identifier	i		5612791	0					
ANR	5612877	IncDec	++		5612791	1					
ANR	5612878	CompoundStatement		16:27:261:261	5612791	3					
ANR	5612879	IfStatement	if ( input [ i ] < 0x80 )		5612791	0					
ANR	5612880	Condition	input [ i ] < 0x80	38:6:591:605	5612791	0	True				
ANR	5612881	RelationalExpression	input [ i ] < 0x80		5612791	0		<			
ANR	5612882	ArrayIndexing	input [ i ]		5612791	0					
ANR	5612883	Identifier	input		5612791	0					
ANR	5612884	Identifier	i		5612791	1					
ANR	5612885	PrimaryExpression	0x80		5612791	1					
ANR	5612886	CompoundStatement		17:23:286:286	5612791	1					
ANR	5612887	ExpressionStatement	result [ j ] = input [ i ]	39:3:613:633	5612791	0	True				
ANR	5612888	AssignmentExpression	result [ j ] = input [ i ]		5612791	0		=			
ANR	5612889	ArrayIndexing	result [ j ]		5612791	0					
ANR	5612890	Identifier	result		5612791	0					
ANR	5612891	Identifier	j		5612791	1					
ANR	5612892	ArrayIndexing	input [ i ]		5612791	1					
ANR	5612893	Identifier	input		5612791	0					
ANR	5612894	Identifier	i		5612791	1					
ANR	5612895	ExpressionStatement	j ++	40:3:638:641	5612791	1	True				
ANR	5612896	PostIncDecOperationExpression	j ++		5612791	0					
ANR	5612897	Identifier	j		5612791	0					
ANR	5612898	IncDec	++		5612791	1					
ANR	5612899	ElseStatement	else		5612791	0					
ANR	5612900	IfStatement	if ( input [ i ] < 0x800 )		5612791	0					
ANR	5612901	Condition	input [ i ] < 0x800	41:13:656:671	5612791	0	True				
ANR	5612902	RelationalExpression	input [ i ] < 0x800		5612791	0		<			
ANR	5612903	ArrayIndexing	input [ i ]		5612791	0					
ANR	5612904	Identifier	input		5612791	0					
ANR	5612905	Identifier	i		5612791	1					
ANR	5612906	PrimaryExpression	0x800		5612791	1					
ANR	5612907	CompoundStatement		20:31:352:352	5612791	1					
ANR	5612908	ExpressionStatement	result [ j + 1 ] = 0x80 | ( input [ i ] & 0x3f )	42:3:679:719	5612791	0	True				
ANR	5612909	AssignmentExpression	result [ j + 1 ] = 0x80 | ( input [ i ] & 0x3f )		5612791	0		=			
ANR	5612910	ArrayIndexing	result [ j + 1 ]		5612791	0					
ANR	5612911	Identifier	result		5612791	0					
ANR	5612912	AdditiveExpression	j + 1		5612791	1		+			
ANR	5612913	Identifier	j		5612791	0					
ANR	5612914	PrimaryExpression	1		5612791	1					
ANR	5612915	InclusiveOrExpression	0x80 | ( input [ i ] & 0x3f )		5612791	1		|			
ANR	5612916	PrimaryExpression	0x80		5612791	0					
ANR	5612917	BitAndExpression	input [ i ] & 0x3f		5612791	1		&			
ANR	5612918	ArrayIndexing	input [ i ]		5612791	0					
ANR	5612919	Identifier	input		5612791	0					
ANR	5612920	Identifier	i		5612791	1					
ANR	5612921	PrimaryExpression	0x3f		5612791	1					
ANR	5612922	ExpressionStatement	result [ j ] = 0xc0 | ( ( input [ i ] >> 6 ) & 0x1f )	43:3:724:767	5612791	1	True				
ANR	5612923	AssignmentExpression	result [ j ] = 0xc0 | ( ( input [ i ] >> 6 ) & 0x1f )		5612791	0		=			
ANR	5612924	ArrayIndexing	result [ j ]		5612791	0					
ANR	5612925	Identifier	result		5612791	0					
ANR	5612926	Identifier	j		5612791	1					
ANR	5612927	InclusiveOrExpression	0xc0 | ( ( input [ i ] >> 6 ) & 0x1f )		5612791	1		|			
ANR	5612928	PrimaryExpression	0xc0		5612791	0					
ANR	5612929	BitAndExpression	( input [ i ] >> 6 ) & 0x1f		5612791	1		&			
ANR	5612930	ShiftExpression	input [ i ] >> 6		5612791	0		>>			
ANR	5612931	ArrayIndexing	input [ i ]		5612791	0					
ANR	5612932	Identifier	input		5612791	0					
ANR	5612933	Identifier	i		5612791	1					
ANR	5612934	PrimaryExpression	6		5612791	1					
ANR	5612935	PrimaryExpression	0x1f		5612791	1					
ANR	5612936	ExpressionStatement	j += 2	44:3:772:778	5612791	2	True				
ANR	5612937	AssignmentExpression	j += 2		5612791	0		+=			
ANR	5612938	Identifier	j		5612791	0					
ANR	5612939	PrimaryExpression	2		5612791	1					
ANR	5612940	ElseStatement	else		5612791	0					
ANR	5612941	IfStatement	if ( input [ i ] < 0x10000 )		5612791	0					
ANR	5612942	Condition	input [ i ] < 0x10000	45:13:793:810	5612791	0	True				
ANR	5612943	RelationalExpression	input [ i ] < 0x10000		5612791	0		<			
ANR	5612944	ArrayIndexing	input [ i ]		5612791	0					
ANR	5612945	Identifier	input		5612791	0					
ANR	5612946	Identifier	i		5612791	1					
ANR	5612947	PrimaryExpression	0x10000		5612791	1					
ANR	5612948	CompoundStatement		24:33:491:491	5612791	1					
ANR	5612949	ExpressionStatement	result [ j + 2 ] = 0x80 | ( input [ i ] & 0x3f )	46:3:818:858	5612791	0	True				
ANR	5612950	AssignmentExpression	result [ j + 2 ] = 0x80 | ( input [ i ] & 0x3f )		5612791	0		=			
ANR	5612951	ArrayIndexing	result [ j + 2 ]		5612791	0					
ANR	5612952	Identifier	result		5612791	0					
ANR	5612953	AdditiveExpression	j + 2		5612791	1		+			
ANR	5612954	Identifier	j		5612791	0					
ANR	5612955	PrimaryExpression	2		5612791	1					
ANR	5612956	InclusiveOrExpression	0x80 | ( input [ i ] & 0x3f )		5612791	1		|			
ANR	5612957	PrimaryExpression	0x80		5612791	0					
ANR	5612958	BitAndExpression	input [ i ] & 0x3f		5612791	1		&			
ANR	5612959	ArrayIndexing	input [ i ]		5612791	0					
ANR	5612960	Identifier	input		5612791	0					
ANR	5612961	Identifier	i		5612791	1					
ANR	5612962	PrimaryExpression	0x3f		5612791	1					
ANR	5612963	ExpressionStatement	result [ j + 1 ] = 0x80 | ( ( input [ i ] >> 6 ) & 0x3f )	47:3:863:910	5612791	1	True				
ANR	5612964	AssignmentExpression	result [ j + 1 ] = 0x80 | ( ( input [ i ] >> 6 ) & 0x3f )		5612791	0		=			
ANR	5612965	ArrayIndexing	result [ j + 1 ]		5612791	0					
ANR	5612966	Identifier	result		5612791	0					
ANR	5612967	AdditiveExpression	j + 1		5612791	1		+			
ANR	5612968	Identifier	j		5612791	0					
ANR	5612969	PrimaryExpression	1		5612791	1					
ANR	5612970	InclusiveOrExpression	0x80 | ( ( input [ i ] >> 6 ) & 0x3f )		5612791	1		|			
ANR	5612971	PrimaryExpression	0x80		5612791	0					
ANR	5612972	BitAndExpression	( input [ i ] >> 6 ) & 0x3f		5612791	1		&			
ANR	5612973	ShiftExpression	input [ i ] >> 6		5612791	0		>>			
ANR	5612974	ArrayIndexing	input [ i ]		5612791	0					
ANR	5612975	Identifier	input		5612791	0					
ANR	5612976	Identifier	i		5612791	1					
ANR	5612977	PrimaryExpression	6		5612791	1					
ANR	5612978	PrimaryExpression	0x3f		5612791	1					
ANR	5612979	ExpressionStatement	result [ j ] = 0xe0 | ( ( input [ i ] >> 12 ) & 0xf )	48:3:915:958	5612791	2	True				
ANR	5612980	AssignmentExpression	result [ j ] = 0xe0 | ( ( input [ i ] >> 12 ) & 0xf )		5612791	0		=			
ANR	5612981	ArrayIndexing	result [ j ]		5612791	0					
ANR	5612982	Identifier	result		5612791	0					
ANR	5612983	Identifier	j		5612791	1					
ANR	5612984	InclusiveOrExpression	0xe0 | ( ( input [ i ] >> 12 ) & 0xf )		5612791	1		|			
ANR	5612985	PrimaryExpression	0xe0		5612791	0					
ANR	5612986	BitAndExpression	( input [ i ] >> 12 ) & 0xf		5612791	1		&			
ANR	5612987	ShiftExpression	input [ i ] >> 12		5612791	0		>>			
ANR	5612988	ArrayIndexing	input [ i ]		5612791	0					
ANR	5612989	Identifier	input		5612791	0					
ANR	5612990	Identifier	i		5612791	1					
ANR	5612991	PrimaryExpression	12		5612791	1					
ANR	5612992	PrimaryExpression	0xf		5612791	1					
ANR	5612993	ExpressionStatement	j += 3	49:3:963:969	5612791	3	True				
ANR	5612994	AssignmentExpression	j += 3		5612791	0		+=			
ANR	5612995	Identifier	j		5612791	0					
ANR	5612996	PrimaryExpression	3		5612791	1					
ANR	5612997	ElseStatement	else		5612791	0					
ANR	5612998	IfStatement	if ( input [ i ] < 0x200000 )		5612791	0					
ANR	5612999	Condition	input [ i ] < 0x200000	50:13:984:1002	5612791	0	True				
ANR	5613000	RelationalExpression	input [ i ] < 0x200000		5612791	0		<			
ANR	5613001	ArrayIndexing	input [ i ]		5612791	0					
ANR	5613002	Identifier	input		5612791	0					
ANR	5613003	Identifier	i		5612791	1					
ANR	5613004	PrimaryExpression	0x200000		5612791	1					
ANR	5613005	CompoundStatement		29:34:683:683	5612791	1					
ANR	5613006	ExpressionStatement	result [ j + 3 ] = 0x80 | ( input [ i ] & 0x3f )	51:3:1010:1050	5612791	0	True				
ANR	5613007	AssignmentExpression	result [ j + 3 ] = 0x80 | ( input [ i ] & 0x3f )		5612791	0		=			
ANR	5613008	ArrayIndexing	result [ j + 3 ]		5612791	0					
ANR	5613009	Identifier	result		5612791	0					
ANR	5613010	AdditiveExpression	j + 3		5612791	1		+			
ANR	5613011	Identifier	j		5612791	0					
ANR	5613012	PrimaryExpression	3		5612791	1					
ANR	5613013	InclusiveOrExpression	0x80 | ( input [ i ] & 0x3f )		5612791	1		|			
ANR	5613014	PrimaryExpression	0x80		5612791	0					
ANR	5613015	BitAndExpression	input [ i ] & 0x3f		5612791	1		&			
ANR	5613016	ArrayIndexing	input [ i ]		5612791	0					
ANR	5613017	Identifier	input		5612791	0					
ANR	5613018	Identifier	i		5612791	1					
ANR	5613019	PrimaryExpression	0x3f		5612791	1					
ANR	5613020	ExpressionStatement	result [ j + 2 ] = 0x80 | ( ( input [ i ] >> 6 ) & 0x3f )	52:3:1055:1102	5612791	1	True				
ANR	5613021	AssignmentExpression	result [ j + 2 ] = 0x80 | ( ( input [ i ] >> 6 ) & 0x3f )		5612791	0		=			
ANR	5613022	ArrayIndexing	result [ j + 2 ]		5612791	0					
ANR	5613023	Identifier	result		5612791	0					
ANR	5613024	AdditiveExpression	j + 2		5612791	1		+			
ANR	5613025	Identifier	j		5612791	0					
ANR	5613026	PrimaryExpression	2		5612791	1					
ANR	5613027	InclusiveOrExpression	0x80 | ( ( input [ i ] >> 6 ) & 0x3f )		5612791	1		|			
ANR	5613028	PrimaryExpression	0x80		5612791	0					
ANR	5613029	BitAndExpression	( input [ i ] >> 6 ) & 0x3f		5612791	1		&			
ANR	5613030	ShiftExpression	input [ i ] >> 6		5612791	0		>>			
ANR	5613031	ArrayIndexing	input [ i ]		5612791	0					
ANR	5613032	Identifier	input		5612791	0					
ANR	5613033	Identifier	i		5612791	1					
ANR	5613034	PrimaryExpression	6		5612791	1					
ANR	5613035	PrimaryExpression	0x3f		5612791	1					
ANR	5613036	ExpressionStatement	result [ j + 1 ] = 0x80 | ( ( input [ i ] >> 12 ) & 0x3f )	53:3:1107:1155	5612791	2	True				
ANR	5613037	AssignmentExpression	result [ j + 1 ] = 0x80 | ( ( input [ i ] >> 12 ) & 0x3f )		5612791	0		=			
ANR	5613038	ArrayIndexing	result [ j + 1 ]		5612791	0					
ANR	5613039	Identifier	result		5612791	0					
ANR	5613040	AdditiveExpression	j + 1		5612791	1		+			
ANR	5613041	Identifier	j		5612791	0					
ANR	5613042	PrimaryExpression	1		5612791	1					
ANR	5613043	InclusiveOrExpression	0x80 | ( ( input [ i ] >> 12 ) & 0x3f )		5612791	1		|			
ANR	5613044	PrimaryExpression	0x80		5612791	0					
ANR	5613045	BitAndExpression	( input [ i ] >> 12 ) & 0x3f		5612791	1		&			
ANR	5613046	ShiftExpression	input [ i ] >> 12		5612791	0		>>			
ANR	5613047	ArrayIndexing	input [ i ]		5612791	0					
ANR	5613048	Identifier	input		5612791	0					
ANR	5613049	Identifier	i		5612791	1					
ANR	5613050	PrimaryExpression	12		5612791	1					
ANR	5613051	PrimaryExpression	0x3f		5612791	1					
ANR	5613052	ExpressionStatement	result [ j ] = 0xf0 | ( ( input [ i ] >> 18 ) & 0x7 )	54:3:1160:1203	5612791	3	True				
ANR	5613053	AssignmentExpression	result [ j ] = 0xf0 | ( ( input [ i ] >> 18 ) & 0x7 )		5612791	0		=			
ANR	5613054	ArrayIndexing	result [ j ]		5612791	0					
ANR	5613055	Identifier	result		5612791	0					
ANR	5613056	Identifier	j		5612791	1					
ANR	5613057	InclusiveOrExpression	0xf0 | ( ( input [ i ] >> 18 ) & 0x7 )		5612791	1		|			
ANR	5613058	PrimaryExpression	0xf0		5612791	0					
ANR	5613059	BitAndExpression	( input [ i ] >> 18 ) & 0x7		5612791	1		&			
ANR	5613060	ShiftExpression	input [ i ] >> 18		5612791	0		>>			
ANR	5613061	ArrayIndexing	input [ i ]		5612791	0					
ANR	5613062	Identifier	input		5612791	0					
ANR	5613063	Identifier	i		5612791	1					
ANR	5613064	PrimaryExpression	18		5612791	1					
ANR	5613065	PrimaryExpression	0x7		5612791	1					
ANR	5613066	ExpressionStatement	j += 4	55:3:1208:1214	5612791	4	True				
ANR	5613067	AssignmentExpression	j += 4		5612791	0		+=			
ANR	5613068	Identifier	j		5612791	0					
ANR	5613069	PrimaryExpression	4		5612791	1					
ANR	5613070	ElseStatement	else		5612791	0					
ANR	5613071	CompoundStatement		35:9:903:903	5612791	0					
ANR	5613072	ExpressionStatement	"eprintf ( ""ERROR in toutf8. Seems like input is invalid\\n"" )"	57:3:1230:1288	5612791	0	True				
ANR	5613073	CallExpression	"eprintf ( ""ERROR in toutf8. Seems like input is invalid\\n"" )"		5612791	0					
ANR	5613074	Callee	eprintf		5612791	0					
ANR	5613075	Identifier	eprintf		5612791	0					
ANR	5613076	ArgumentList	"""ERROR in toutf8. Seems like input is invalid\\n"""		5612791	1					
ANR	5613077	Argument	"""ERROR in toutf8. Seems like input is invalid\\n"""		5612791	0					
ANR	5613078	PrimaryExpression	"""ERROR in toutf8. Seems like input is invalid\\n"""		5612791	0					
ANR	5613079	ExpressionStatement	free ( result )	58:3:1293:1306	5612791	1	True				
ANR	5613080	CallExpression	free ( result )		5612791	0					
ANR	5613081	Callee	free		5612791	0					
ANR	5613082	Identifier	free		5612791	0					
ANR	5613083	ArgumentList	result		5612791	1					
ANR	5613084	Argument	result		5612791	0					
ANR	5613085	Identifier	result		5612791	0					
ANR	5613086	ReturnStatement	return NULL ;	59:3:1311:1322	5612791	2	True				
ANR	5613087	Identifier	NULL		5612791	0					
ANR	5613088	ExpressionStatement	result [ j ] = 0	63:1:1333:1346	5612791	7	True				
ANR	5613089	AssignmentExpression	result [ j ] = 0		5612791	0		=			
ANR	5613090	ArrayIndexing	result [ j ]		5612791	0					
ANR	5613091	Identifier	result		5612791	0					
ANR	5613092	Identifier	j		5612791	1					
ANR	5613093	PrimaryExpression	0		5612791	1					
ANR	5613094	ReturnStatement	return result ;	64:1:1349:1362	5612791	8	True				
ANR	5613095	Identifier	result		5612791	0					
ANR	5613096	ReturnType	ut8 *		5612791	1					
ANR	5613097	Identifier	utf32toutf8		5612791	2					
ANR	5613098	ParameterList	ut32 * input		5612791	3					
ANR	5613099	Parameter	ut32 * input	22:18:308:318	5612791	0	True				
ANR	5613100	ParameterType	ut32 *		5612791	0					
ANR	5613101	Identifier	input		5612791	1					
ANR	5613102	CFGEntryNode	ENTRY		5612791		True				
ANR	5613103	CFGExitNode	EXIT		5612791		True				
ANR	5613104	Symbol	result		5612791						
ANR	5613105	Symbol	input		5612791						
ANR	5613106	Symbol	NULL		5612791						
ANR	5613107	Symbol	* i		5612791						
ANR	5613108	Symbol	len		5612791						
ANR	5613109	Symbol	* j		5612791						
ANR	5613110	Symbol	* result		5612791						
ANR	5613111	Symbol	* input		5612791						
ANR	5613112	Symbol	i		5612791						
ANR	5613113	Symbol	j		5612791						
ANR	5613114	Symbol	calloc		5612791						
ANR	5613115	Symbol	utf32len		5612791						
ANR	5613116	Function	utf8toutf32	67:0:1367:2436							
ANR	5613117	FunctionDef	utf8toutf32 (const ut8 * input)		5613116	0					
ANR	5613118	CompoundStatement		67:37:1404:2436	5613116	0					
ANR	5613119	IfStatement	if ( ! input )		5613116	0					
ANR	5613120	Condition	! input	68:5:1411:1416	5613116	0	True				
ANR	5613121	UnaryOperationExpression	! input		5613116	0					
ANR	5613122	UnaryOperator	!		5613116	0					
ANR	5613123	Identifier	input		5613116	1					
ANR	5613124	CompoundStatement		2:13:14:14	5613116	1					
ANR	5613125	ExpressionStatement	"eprintf ( ""ERROR input is null\\n"" )"	69:2:1423:1456	5613116	0	True				
ANR	5613126	CallExpression	"eprintf ( ""ERROR input is null\\n"" )"		5613116	0					
ANR	5613127	Callee	eprintf		5613116	0					
ANR	5613128	Identifier	eprintf		5613116	0					
ANR	5613129	ArgumentList	"""ERROR input is null\\n"""		5613116	1					
ANR	5613130	Argument	"""ERROR input is null\\n"""		5613116	0					
ANR	5613131	PrimaryExpression	"""ERROR input is null\\n"""		5613116	0					
ANR	5613132	ReturnStatement	return NULL ;	70:2:1460:1471	5613116	1	True				
ANR	5613133	Identifier	NULL		5613116	0					
ANR	5613134	IdentifierDeclStatement	int i = 0 ;	73:1:1478:1487	5613116	1	True				
ANR	5613135	IdentifierDecl	i = 0		5613116	0					
ANR	5613136	IdentifierDeclType	int		5613116	0					
ANR	5613137	Identifier	i		5613116	1					
ANR	5613138	AssignmentExpression	i = 0		5613116	2		=			
ANR	5613139	Identifier	i		5613116	0					
ANR	5613140	PrimaryExpression	0		5613116	1					
ANR	5613141	IdentifierDeclStatement	int j = 0 ;	74:1:1490:1499	5613116	2	True				
ANR	5613142	IdentifierDecl	j = 0		5613116	0					
ANR	5613143	IdentifierDeclType	int		5613116	0					
ANR	5613144	Identifier	j		5613116	1					
ANR	5613145	AssignmentExpression	j = 0		5613116	2		=			
ANR	5613146	Identifier	j		5613116	0					
ANR	5613147	PrimaryExpression	0		5613116	1					
ANR	5613148	IdentifierDeclStatement	int val = 0 ;	75:1:1502:1513	5613116	3	True				
ANR	5613149	IdentifierDecl	val = 0		5613116	0					
ANR	5613150	IdentifierDeclType	int		5613116	0					
ANR	5613151	Identifier	val		5613116	1					
ANR	5613152	AssignmentExpression	val = 0		5613116	2		=			
ANR	5613153	Identifier	val		5613116	0					
ANR	5613154	PrimaryExpression	0		5613116	1					
ANR	5613155	IdentifierDeclStatement	int len = strlen ( ( const char * ) input ) ;	76:1:1516:1555	5613116	4	True				
ANR	5613156	IdentifierDecl	len = strlen ( ( const char * ) input )		5613116	0					
ANR	5613157	IdentifierDeclType	int		5613116	0					
ANR	5613158	Identifier	len		5613116	1					
ANR	5613159	AssignmentExpression	len = strlen ( ( const char * ) input )		5613116	2		=			
ANR	5613160	Identifier	len		5613116	0					
ANR	5613161	CallExpression	strlen ( ( const char * ) input )		5613116	1					
ANR	5613162	Callee	strlen		5613116	0					
ANR	5613163	Identifier	strlen		5613116	0					
ANR	5613164	ArgumentList	( const char * ) input		5613116	1					
ANR	5613165	Argument	( const char * ) input		5613116	0					
ANR	5613166	CastExpression	( const char * ) input		5613116	0					
ANR	5613167	CastTarget	const char *		5613116	0					
ANR	5613168	Identifier	input		5613116	1					
ANR	5613169	IdentifierDeclStatement	"ut32 * result = calloc ( strlen ( ( const char * ) input ) + 1 , 4 ) ;"	77:1:1558:1618	5613116	5	True				
ANR	5613170	IdentifierDecl	"* result = calloc ( strlen ( ( const char * ) input ) + 1 , 4 )"		5613116	0					
ANR	5613171	IdentifierDeclType	ut32 *		5613116	0					
ANR	5613172	Identifier	result		5613116	1					
ANR	5613173	AssignmentExpression	"* result = calloc ( strlen ( ( const char * ) input ) + 1 , 4 )"		5613116	2		=			
ANR	5613174	Identifier	result		5613116	0					
ANR	5613175	CallExpression	"calloc ( strlen ( ( const char * ) input ) + 1 , 4 )"		5613116	1					
ANR	5613176	Callee	calloc		5613116	0					
ANR	5613177	Identifier	calloc		5613116	0					
ANR	5613178	ArgumentList	strlen ( ( const char * ) input ) + 1		5613116	1					
ANR	5613179	Argument	strlen ( ( const char * ) input ) + 1		5613116	0					
ANR	5613180	AdditiveExpression	strlen ( ( const char * ) input ) + 1		5613116	0		+			
ANR	5613181	CallExpression	strlen ( ( const char * ) input )		5613116	0					
ANR	5613182	Callee	strlen		5613116	0					
ANR	5613183	Identifier	strlen		5613116	0					
ANR	5613184	ArgumentList	( const char * ) input		5613116	1					
ANR	5613185	Argument	( const char * ) input		5613116	0					
ANR	5613186	CastExpression	( const char * ) input		5613116	0					
ANR	5613187	CastTarget	const char *		5613116	0					
ANR	5613188	Identifier	input		5613116	1					
ANR	5613189	PrimaryExpression	1		5613116	1					
ANR	5613190	Argument	4		5613116	1					
ANR	5613191	PrimaryExpression	4		5613116	0					
ANR	5613192	IfStatement	if ( ! result )		5613116	6					
ANR	5613193	Condition	! result	79:5:1626:1632	5613116	0	True				
ANR	5613194	UnaryOperationExpression	! result		5613116	0					
ANR	5613195	UnaryOperator	!		5613116	0					
ANR	5613196	Identifier	result		5613116	1					
ANR	5613197	CompoundStatement		13:14:230:230	5613116	1					
ANR	5613198	ExpressionStatement	"eprintf ( ""ERROR: out of memory\\n"" )"	80:2:1639:1673	5613116	0	True				
ANR	5613199	CallExpression	"eprintf ( ""ERROR: out of memory\\n"" )"		5613116	0					
ANR	5613200	Callee	eprintf		5613116	0					
ANR	5613201	Identifier	eprintf		5613116	0					
ANR	5613202	ArgumentList	"""ERROR: out of memory\\n"""		5613116	1					
ANR	5613203	Argument	"""ERROR: out of memory\\n"""		5613116	0					
ANR	5613204	PrimaryExpression	"""ERROR: out of memory\\n"""		5613116	0					
ANR	5613205	ReturnStatement	return NULL ;	81:2:1677:1688	5613116	1	True				
ANR	5613206	Identifier	NULL		5613116	0					
ANR	5613207	WhileStatement	while ( i < len )		5613116	7					
ANR	5613208	Condition	i < len	84:8:1702:1708	5613116	0	True				
ANR	5613209	RelationalExpression	i < len		5613116	0		<			
ANR	5613210	Identifier	i		5613116	0					
ANR	5613211	Identifier	len		5613116	1					
ANR	5613212	CompoundStatement		18:17:306:306	5613116	1					
ANR	5613213	IfStatement	if ( input [ i ] >> 7 == 0 )		5613116	0					
ANR	5613214	Condition	input [ i ] >> 7 == 0	85:6:1719:1736	5613116	0	True				
ANR	5613215	EqualityExpression	input [ i ] >> 7 == 0		5613116	0		==			
ANR	5613216	ShiftExpression	input [ i ] >> 7		5613116	0		>>			
ANR	5613217	ArrayIndexing	input [ i ]		5613116	0					
ANR	5613218	Identifier	input		5613116	0					
ANR	5613219	Identifier	i		5613116	1					
ANR	5613220	PrimaryExpression	7		5613116	1					
ANR	5613221	PrimaryExpression	0		5613116	1					
ANR	5613222	CompoundStatement		19:26:334:334	5613116	1					
ANR	5613223	ExpressionStatement	val = input [ i ]	86:3:1744:1758	5613116	0	True				
ANR	5613224	AssignmentExpression	val = input [ i ]		5613116	0		=			
ANR	5613225	Identifier	val		5613116	0					
ANR	5613226	ArrayIndexing	input [ i ]		5613116	1					
ANR	5613227	Identifier	input		5613116	0					
ANR	5613228	Identifier	i		5613116	1					
ANR	5613229	ExpressionStatement	i += 1	87:3:1763:1769	5613116	1	True				
ANR	5613230	AssignmentExpression	i += 1		5613116	0		+=			
ANR	5613231	Identifier	i		5613116	0					
ANR	5613232	PrimaryExpression	1		5613116	1					
ANR	5613233	ElseStatement	else		5613116	0					
ANR	5613234	IfStatement	if ( input [ i ] >> 5 == 0x6 )		5613116	0					
ANR	5613235	Condition	input [ i ] >> 5 == 0x6	88:13:1784:1803	5613116	0	True				
ANR	5613236	EqualityExpression	input [ i ] >> 5 == 0x6		5613116	0		==			
ANR	5613237	ShiftExpression	input [ i ] >> 5		5613116	0		>>			
ANR	5613238	ArrayIndexing	input [ i ]		5613116	0					
ANR	5613239	Identifier	input		5613116	0					
ANR	5613240	Identifier	i		5613116	1					
ANR	5613241	PrimaryExpression	5		5613116	1					
ANR	5613242	PrimaryExpression	0x6		5613116	1					
ANR	5613243	CompoundStatement		22:35:401:401	5613116	1					
ANR	5613244	ExpressionStatement	val = ( ( ( input [ i ] & 0x1f ) << 6 ) & 0xfc0 ) | ( input [ i + 1 ] & 0x3f )	89:3:1811:1878	5613116	0	True				
ANR	5613245	AssignmentExpression	val = ( ( ( input [ i ] & 0x1f ) << 6 ) & 0xfc0 ) | ( input [ i + 1 ] & 0x3f )		5613116	0		=			
ANR	5613246	Identifier	val		5613116	0					
ANR	5613247	InclusiveOrExpression	( ( ( input [ i ] & 0x1f ) << 6 ) & 0xfc0 ) | ( input [ i + 1 ] & 0x3f )		5613116	1		|			
ANR	5613248	BitAndExpression	( ( input [ i ] & 0x1f ) << 6 ) & 0xfc0		5613116	0		&			
ANR	5613249	ShiftExpression	( input [ i ] & 0x1f ) << 6		5613116	0		<<			
ANR	5613250	BitAndExpression	input [ i ] & 0x1f		5613116	0		&			
ANR	5613251	ArrayIndexing	input [ i ]		5613116	0					
ANR	5613252	Identifier	input		5613116	0					
ANR	5613253	Identifier	i		5613116	1					
ANR	5613254	PrimaryExpression	0x1f		5613116	1					
ANR	5613255	PrimaryExpression	6		5613116	1					
ANR	5613256	PrimaryExpression	0xfc0		5613116	1					
ANR	5613257	BitAndExpression	input [ i + 1 ] & 0x3f		5613116	1		&			
ANR	5613258	ArrayIndexing	input [ i + 1 ]		5613116	0					
ANR	5613259	Identifier	input		5613116	0					
ANR	5613260	AdditiveExpression	i + 1		5613116	1		+			
ANR	5613261	Identifier	i		5613116	0					
ANR	5613262	PrimaryExpression	1		5613116	1					
ANR	5613263	PrimaryExpression	0x3f		5613116	1					
ANR	5613264	ExpressionStatement	i += 2	91:3:1883:1889	5613116	1	True				
ANR	5613265	AssignmentExpression	i += 2		5613116	0		+=			
ANR	5613266	Identifier	i		5613116	0					
ANR	5613267	PrimaryExpression	2		5613116	1					
ANR	5613268	ElseStatement	else		5613116	0					
ANR	5613269	IfStatement	if ( input [ i ] >> 4 == 0xe )		5613116	0					
ANR	5613270	Condition	input [ i ] >> 4 == 0xe	92:13:1904:1923	5613116	0	True				
ANR	5613271	EqualityExpression	input [ i ] >> 4 == 0xe		5613116	0		==			
ANR	5613272	ShiftExpression	input [ i ] >> 4		5613116	0		>>			
ANR	5613273	ArrayIndexing	input [ i ]		5613116	0					
ANR	5613274	Identifier	input		5613116	0					
ANR	5613275	Identifier	i		5613116	1					
ANR	5613276	PrimaryExpression	4		5613116	1					
ANR	5613277	PrimaryExpression	0xe		5613116	1					
ANR	5613278	CompoundStatement		26:35:521:521	5613116	1					
ANR	5613279	ExpressionStatement	val = ( ( ( input [ i ] & 0xf ) << 12 ) & 0xf000 ) | ( ( ( input [ i + 1 ] & 0x3f ) << 6 ) & 0xffc0 ) | ( input [ i + 2 ] & 0x3f )	93:3:1931:2044	5613116	0	True				
ANR	5613280	AssignmentExpression	val = ( ( ( input [ i ] & 0xf ) << 12 ) & 0xf000 ) | ( ( ( input [ i + 1 ] & 0x3f ) << 6 ) & 0xffc0 ) | ( input [ i + 2 ] & 0x3f )		5613116	0		=			
ANR	5613281	Identifier	val		5613116	0					
ANR	5613282	InclusiveOrExpression	( ( ( input [ i ] & 0xf ) << 12 ) & 0xf000 ) | ( ( ( input [ i + 1 ] & 0x3f ) << 6 ) & 0xffc0 ) | ( input [ i + 2 ] & 0x3f )		5613116	1		|			
ANR	5613283	BitAndExpression	( ( input [ i ] & 0xf ) << 12 ) & 0xf000		5613116	0		&			
ANR	5613284	ShiftExpression	( input [ i ] & 0xf ) << 12		5613116	0		<<			
ANR	5613285	BitAndExpression	input [ i ] & 0xf		5613116	0		&			
ANR	5613286	ArrayIndexing	input [ i ]		5613116	0					
ANR	5613287	Identifier	input		5613116	0					
ANR	5613288	Identifier	i		5613116	1					
ANR	5613289	PrimaryExpression	0xf		5613116	1					
ANR	5613290	PrimaryExpression	12		5613116	1					
ANR	5613291	PrimaryExpression	0xf000		5613116	1					
ANR	5613292	InclusiveOrExpression	( ( ( input [ i + 1 ] & 0x3f ) << 6 ) & 0xffc0 ) | ( input [ i + 2 ] & 0x3f )		5613116	1		|			
ANR	5613293	BitAndExpression	( ( input [ i + 1 ] & 0x3f ) << 6 ) & 0xffc0		5613116	0		&			
ANR	5613294	ShiftExpression	( input [ i + 1 ] & 0x3f ) << 6		5613116	0		<<			
ANR	5613295	BitAndExpression	input [ i + 1 ] & 0x3f		5613116	0		&			
ANR	5613296	ArrayIndexing	input [ i + 1 ]		5613116	0					
ANR	5613297	Identifier	input		5613116	0					
ANR	5613298	AdditiveExpression	i + 1		5613116	1		+			
ANR	5613299	Identifier	i		5613116	0					
ANR	5613300	PrimaryExpression	1		5613116	1					
ANR	5613301	PrimaryExpression	0x3f		5613116	1					
ANR	5613302	PrimaryExpression	6		5613116	1					
ANR	5613303	PrimaryExpression	0xffc0		5613116	1					
ANR	5613304	BitAndExpression	input [ i + 2 ] & 0x3f		5613116	1		&			
ANR	5613305	ArrayIndexing	input [ i + 2 ]		5613116	0					
ANR	5613306	Identifier	input		5613116	0					
ANR	5613307	AdditiveExpression	i + 2		5613116	1		+			
ANR	5613308	Identifier	i		5613116	0					
ANR	5613309	PrimaryExpression	2		5613116	1					
ANR	5613310	PrimaryExpression	0x3f		5613116	1					
ANR	5613311	ExpressionStatement	i += 3	96:3:2049:2055	5613116	1	True				
ANR	5613312	AssignmentExpression	i += 3		5613116	0		+=			
ANR	5613313	Identifier	i		5613116	0					
ANR	5613314	PrimaryExpression	3		5613116	1					
ANR	5613315	ElseStatement	else		5613116	0					
ANR	5613316	IfStatement	if ( input [ i ] >> 3 == 0x1e )		5613116	0					
ANR	5613317	Condition	input [ i ] >> 3 == 0x1e	97:13:2070:2090	5613116	0	True				
ANR	5613318	EqualityExpression	input [ i ] >> 3 == 0x1e		5613116	0		==			
ANR	5613319	ShiftExpression	input [ i ] >> 3		5613116	0		>>			
ANR	5613320	ArrayIndexing	input [ i ]		5613116	0					
ANR	5613321	Identifier	input		5613116	0					
ANR	5613322	Identifier	i		5613116	1					
ANR	5613323	PrimaryExpression	3		5613116	1					
ANR	5613324	PrimaryExpression	0x1e		5613116	1					
ANR	5613325	CompoundStatement		31:36:688:688	5613116	1					
ANR	5613326	ExpressionStatement	val = ( ( ( input [ i ] & 0xf ) << 18 ) & 0x1c0000 ) | ( ( ( input [ i + 1 ] & 0x3f ) << 12 ) & 0x1ff000 ) | ( ( ( input [ i + 2 ] & 0x3f ) << 6 ) & 0x1fffc0 ) | ( input [ i + 3 ] & 0x3f )	98:3:2098:2263	5613116	0	True				
ANR	5613327	AssignmentExpression	val = ( ( ( input [ i ] & 0xf ) << 18 ) & 0x1c0000 ) | ( ( ( input [ i + 1 ] & 0x3f ) << 12 ) & 0x1ff000 ) | ( ( ( input [ i + 2 ] & 0x3f ) << 6 ) & 0x1fffc0 ) | ( input [ i + 3 ] & 0x3f )		5613116	0		=			
ANR	5613328	Identifier	val		5613116	0					
ANR	5613329	InclusiveOrExpression	( ( ( input [ i ] & 0xf ) << 18 ) & 0x1c0000 ) | ( ( ( input [ i + 1 ] & 0x3f ) << 12 ) & 0x1ff000 ) | ( ( ( input [ i + 2 ] & 0x3f ) << 6 ) & 0x1fffc0 ) | ( input [ i + 3 ] & 0x3f )		5613116	1		|			
ANR	5613330	BitAndExpression	( ( input [ i ] & 0xf ) << 18 ) & 0x1c0000		5613116	0		&			
ANR	5613331	ShiftExpression	( input [ i ] & 0xf ) << 18		5613116	0		<<			
ANR	5613332	BitAndExpression	input [ i ] & 0xf		5613116	0		&			
ANR	5613333	ArrayIndexing	input [ i ]		5613116	0					
ANR	5613334	Identifier	input		5613116	0					
ANR	5613335	Identifier	i		5613116	1					
ANR	5613336	PrimaryExpression	0xf		5613116	1					
ANR	5613337	PrimaryExpression	18		5613116	1					
ANR	5613338	PrimaryExpression	0x1c0000		5613116	1					
ANR	5613339	InclusiveOrExpression	( ( ( input [ i + 1 ] & 0x3f ) << 12 ) & 0x1ff000 ) | ( ( ( input [ i + 2 ] & 0x3f ) << 6 ) & 0x1fffc0 ) | ( input [ i + 3 ] & 0x3f )		5613116	1		|			
ANR	5613340	BitAndExpression	( ( input [ i + 1 ] & 0x3f ) << 12 ) & 0x1ff000		5613116	0		&			
ANR	5613341	ShiftExpression	( input [ i + 1 ] & 0x3f ) << 12		5613116	0		<<			
ANR	5613342	BitAndExpression	input [ i + 1 ] & 0x3f		5613116	0		&			
ANR	5613343	ArrayIndexing	input [ i + 1 ]		5613116	0					
ANR	5613344	Identifier	input		5613116	0					
ANR	5613345	AdditiveExpression	i + 1		5613116	1		+			
ANR	5613346	Identifier	i		5613116	0					
ANR	5613347	PrimaryExpression	1		5613116	1					
ANR	5613348	PrimaryExpression	0x3f		5613116	1					
ANR	5613349	PrimaryExpression	12		5613116	1					
ANR	5613350	PrimaryExpression	0x1ff000		5613116	1					
ANR	5613351	InclusiveOrExpression	( ( ( input [ i + 2 ] & 0x3f ) << 6 ) & 0x1fffc0 ) | ( input [ i + 3 ] & 0x3f )		5613116	1		|			
ANR	5613352	BitAndExpression	( ( input [ i + 2 ] & 0x3f ) << 6 ) & 0x1fffc0		5613116	0		&			
ANR	5613353	ShiftExpression	( input [ i + 2 ] & 0x3f ) << 6		5613116	0		<<			
ANR	5613354	BitAndExpression	input [ i + 2 ] & 0x3f		5613116	0		&			
ANR	5613355	ArrayIndexing	input [ i + 2 ]		5613116	0					
ANR	5613356	Identifier	input		5613116	0					
ANR	5613357	AdditiveExpression	i + 2		5613116	1		+			
ANR	5613358	Identifier	i		5613116	0					
ANR	5613359	PrimaryExpression	2		5613116	1					
ANR	5613360	PrimaryExpression	0x3f		5613116	1					
ANR	5613361	PrimaryExpression	6		5613116	1					
ANR	5613362	PrimaryExpression	0x1fffc0		5613116	1					
ANR	5613363	BitAndExpression	input [ i + 3 ] & 0x3f		5613116	1		&			
ANR	5613364	ArrayIndexing	input [ i + 3 ]		5613116	0					
ANR	5613365	Identifier	input		5613116	0					
ANR	5613366	AdditiveExpression	i + 3		5613116	1		+			
ANR	5613367	Identifier	i		5613116	0					
ANR	5613368	PrimaryExpression	3		5613116	1					
ANR	5613369	PrimaryExpression	0x3f		5613116	1					
ANR	5613370	ExpressionStatement	i += 4	102:3:2268:2274	5613116	1	True				
ANR	5613371	AssignmentExpression	i += 4		5613116	0		+=			
ANR	5613372	Identifier	i		5613116	0					
ANR	5613373	PrimaryExpression	4		5613116	1					
ANR	5613374	ElseStatement	else		5613116	0					
ANR	5613375	CompoundStatement		37:9:880:880	5613116	0					
ANR	5613376	ExpressionStatement	"eprintf ( ""ERROR in toutf32. Seems like input is invalid.\\n"" )"	104:3:2290:2350	5613116	0	True				
ANR	5613377	CallExpression	"eprintf ( ""ERROR in toutf32. Seems like input is invalid.\\n"" )"		5613116	0					
ANR	5613378	Callee	eprintf		5613116	0					
ANR	5613379	Identifier	eprintf		5613116	0					
ANR	5613380	ArgumentList	"""ERROR in toutf32. Seems like input is invalid.\\n"""		5613116	1					
ANR	5613381	Argument	"""ERROR in toutf32. Seems like input is invalid.\\n"""		5613116	0					
ANR	5613382	PrimaryExpression	"""ERROR in toutf32. Seems like input is invalid.\\n"""		5613116	0					
ANR	5613383	ExpressionStatement	free ( result )	105:3:2355:2368	5613116	1	True				
ANR	5613384	CallExpression	free ( result )		5613116	0					
ANR	5613385	Callee	free		5613116	0					
ANR	5613386	Identifier	free		5613116	0					
ANR	5613387	ArgumentList	result		5613116	1					
ANR	5613388	Argument	result		5613116	0					
ANR	5613389	Identifier	result		5613116	0					
ANR	5613390	ReturnStatement	return NULL ;	106:3:2373:2384	5613116	2	True				
ANR	5613391	Identifier	NULL		5613116	0					
ANR	5613392	ExpressionStatement	result [ j ] = val	108:2:2392:2407	5613116	1	True				
ANR	5613393	AssignmentExpression	result [ j ] = val		5613116	0		=			
ANR	5613394	ArrayIndexing	result [ j ]		5613116	0					
ANR	5613395	Identifier	result		5613116	0					
ANR	5613396	Identifier	j		5613116	1					
ANR	5613397	Identifier	val		5613116	1					
ANR	5613398	ExpressionStatement	j ++	109:2:2411:2414	5613116	2	True				
ANR	5613399	PostIncDecOperationExpression	j ++		5613116	0					
ANR	5613400	Identifier	j		5613116	0					
ANR	5613401	IncDec	++		5613116	1					
ANR	5613402	ReturnStatement	return result ;	112:1:2421:2434	5613116	8	True				
ANR	5613403	Identifier	result		5613116	0					
ANR	5613404	ReturnType	ut32 *		5613116	1					
ANR	5613405	Identifier	utf8toutf32		5613116	2					
ANR	5613406	ParameterList	const ut8 * input		5613116	3					
ANR	5613407	Parameter	const ut8 * input	67:19:1386:1401	5613116	0	True				
ANR	5613408	ParameterType	const ut8 *		5613116	0					
ANR	5613409	Identifier	input		5613116	1					
ANR	5613410	CFGEntryNode	ENTRY		5613116		True				
ANR	5613411	CFGExitNode	EXIT		5613116		True				
ANR	5613412	Symbol	val		5613116						
ANR	5613413	Symbol	NULL		5613116						
ANR	5613414	Symbol	* input		5613116						
ANR	5613415	Symbol	i		5613116						
ANR	5613416	Symbol	j		5613116						
ANR	5613417	Symbol	calloc		5613116						
ANR	5613418	Symbol	result		5613116						
ANR	5613419	Symbol	input		5613116						
ANR	5613420	Symbol	strlen		5613116						
ANR	5613421	Symbol	* i		5613116						
ANR	5613422	Symbol	len		5613116						
ANR	5613423	Symbol	* j		5613116						
ANR	5613424	Symbol	* result		5613116						
ANR	5613425	Function	adapt_bias	116:0:2440:2723							
ANR	5613426	FunctionDef	"adapt_bias (ut32 delta , unsigned n_points , int is_first)"		5613425	0					
ANR	5613427	CompoundStatement		116:61:2501:2723	5613425	0					
ANR	5613428	IdentifierDeclStatement	ut32 k = 0 ;	117:1:2504:2514	5613425	0	True				
ANR	5613429	IdentifierDecl	k = 0		5613425	0					
ANR	5613430	IdentifierDeclType	ut32		5613425	0					
ANR	5613431	Identifier	k		5613425	1					
ANR	5613432	AssignmentExpression	k = 0		5613425	2		=			
ANR	5613433	Identifier	k		5613425	0					
ANR	5613434	PrimaryExpression	0		5613425	1					
ANR	5613435	ExpressionStatement	delta /= is_first ? DAMP : 2	118:1:2517:2543	5613425	1	True				
ANR	5613436	AssignmentExpression	delta /= is_first ? DAMP : 2		5613425	0		/=			
ANR	5613437	Identifier	delta		5613425	0					
ANR	5613438	ConditionalExpression	is_first ? DAMP : 2		5613425	1					
ANR	5613439	Condition	is_first		5613425	0					
ANR	5613440	Identifier	is_first		5613425	0					
ANR	5613441	Identifier	DAMP		5613425	1					
ANR	5613442	PrimaryExpression	2		5613425	2					
ANR	5613443	ExpressionStatement	delta += delta / n_points	119:1:2546:2571	5613425	2	True				
ANR	5613444	AssignmentExpression	delta += delta / n_points		5613425	0		+=			
ANR	5613445	Identifier	delta		5613425	0					
ANR	5613446	MultiplicativeExpression	delta / n_points		5613425	1		/			
ANR	5613447	Identifier	delta		5613425	0					
ANR	5613448	Identifier	n_points		5613425	1					
ANR	5613449	WhileStatement	while ( delta > ( ( BASE - TMIN ) * TMAX ) / 2 )		5613425	3					
ANR	5613450	Condition	delta > ( ( BASE - TMIN ) * TMAX ) / 2	121:8:2582:2615	5613425	0	True				
ANR	5613451	RelationalExpression	delta > ( ( BASE - TMIN ) * TMAX ) / 2		5613425	0		>			
ANR	5613452	Identifier	delta		5613425	0					
ANR	5613453	MultiplicativeExpression	( ( BASE - TMIN ) * TMAX ) / 2		5613425	1		/			
ANR	5613454	MultiplicativeExpression	( BASE - TMIN ) * TMAX		5613425	0		*			
ANR	5613455	AdditiveExpression	BASE - TMIN		5613425	0		-			
ANR	5613456	Identifier	BASE		5613425	0					
ANR	5613457	Identifier	TMIN		5613425	1					
ANR	5613458	Identifier	TMAX		5613425	1					
ANR	5613459	PrimaryExpression	2		5613425	1					
ANR	5613460	CompoundStatement		6:44:116:116	5613425	1					
ANR	5613461	ExpressionStatement	delta /= ( BASE - TMIN )	122:2:2622:2644	5613425	0	True				
ANR	5613462	AssignmentExpression	delta /= ( BASE - TMIN )		5613425	0		/=			
ANR	5613463	Identifier	delta		5613425	0					
ANR	5613464	AdditiveExpression	BASE - TMIN		5613425	1		-			
ANR	5613465	Identifier	BASE		5613425	0					
ANR	5613466	Identifier	TMIN		5613425	1					
ANR	5613467	ExpressionStatement	k += BASE	123:2:2648:2657	5613425	1	True				
ANR	5613468	AssignmentExpression	k += BASE		5613425	0		+=			
ANR	5613469	Identifier	k		5613425	0					
ANR	5613470	Identifier	BASE		5613425	1					
ANR	5613471	ReturnStatement	return k + ( ( ( BASE - TMIN + 1 ) * delta ) / ( delta + SKEW ) ) ;	126:1:2664:2721	5613425	4	True				
ANR	5613472	AdditiveExpression	k + ( ( ( BASE - TMIN + 1 ) * delta ) / ( delta + SKEW ) )		5613425	0		+			
ANR	5613473	Identifier	k		5613425	0					
ANR	5613474	MultiplicativeExpression	( ( BASE - TMIN + 1 ) * delta ) / ( delta + SKEW )		5613425	1		/			
ANR	5613475	MultiplicativeExpression	( BASE - TMIN + 1 ) * delta		5613425	0		*			
ANR	5613476	AdditiveExpression	BASE - TMIN + 1		5613425	0		-			
ANR	5613477	Identifier	BASE		5613425	0					
ANR	5613478	AdditiveExpression	TMIN + 1		5613425	1		+			
ANR	5613479	Identifier	TMIN		5613425	0					
ANR	5613480	PrimaryExpression	1		5613425	1					
ANR	5613481	Identifier	delta		5613425	1					
ANR	5613482	AdditiveExpression	delta + SKEW		5613425	1		+			
ANR	5613483	Identifier	delta		5613425	0					
ANR	5613484	Identifier	SKEW		5613425	1					
ANR	5613485	ReturnType	ut32		5613425	1					
ANR	5613486	Identifier	adapt_bias		5613425	2					
ANR	5613487	ParameterList	"ut32 delta , unsigned n_points , int is_first"		5613425	3					
ANR	5613488	Parameter	ut32 delta	116:16:2456:2465	5613425	0	True				
ANR	5613489	ParameterType	ut32		5613425	0					
ANR	5613490	Identifier	delta		5613425	1					
ANR	5613491	Parameter	unsigned n_points	116:28:2468:2484	5613425	1	True				
ANR	5613492	ParameterType	unsigned		5613425	0					
ANR	5613493	Identifier	n_points		5613425	1					
ANR	5613494	Parameter	int is_first	116:47:2487:2498	5613425	2	True				
ANR	5613495	ParameterType	int		5613425	0					
ANR	5613496	Identifier	is_first		5613425	1					
ANR	5613497	CFGEntryNode	ENTRY		5613425		True				
ANR	5613498	CFGExitNode	EXIT		5613425		True				
ANR	5613499	Symbol	TMAX		5613425						
ANR	5613500	Symbol	delta		5613425						
ANR	5613501	Symbol	is_first		5613425						
ANR	5613502	Symbol	n_points		5613425						
ANR	5613503	Symbol	TMIN		5613425						
ANR	5613504	Symbol	k		5613425						
ANR	5613505	Symbol	SKEW		5613425						
ANR	5613506	Symbol	DAMP		5613425						
ANR	5613507	Symbol	BASE		5613425						
ANR	5613508	Function	encode_digit	129:0:2726:2845							
ANR	5613509	FunctionDef	encode_digit (int c)		5613508	0					
ANR	5613510	CompoundStatement		129:25:2751:2845	5613508	0					
ANR	5613511	IfStatement	if ( c > 25 )		5613508	0					
ANR	5613512	Condition	c > 25	131:5:2798:2803	5613508	0	True				
ANR	5613513	RelationalExpression	c > 25		5613508	0		>			
ANR	5613514	Identifier	c		5613508	0					
ANR	5613515	PrimaryExpression	25		5613508	1					
ANR	5613516	CompoundStatement		3:13:54:54	5613508	1					
ANR	5613517	ReturnStatement	return c + 22 ;	132:2:2810:2823	5613508	0	True				
ANR	5613518	AdditiveExpression	c + 22		5613508	0		+			
ANR	5613519	Identifier	c		5613508	0					
ANR	5613520	PrimaryExpression	22		5613508	1					
ANR	5613521	ReturnStatement	return c + 'a' ;	134:1:2829:2843	5613508	1	True				
ANR	5613522	AdditiveExpression	c + 'a'		5613508	0		+			
ANR	5613523	Identifier	c		5613508	0					
ANR	5613524	PrimaryExpression	'a'		5613508	1					
ANR	5613525	ReturnType	char		5613508	1					
ANR	5613526	Identifier	encode_digit		5613508	2					
ANR	5613527	ParameterList	int c		5613508	3					
ANR	5613528	Parameter	int c	129:18:2744:2748	5613508	0	True				
ANR	5613529	ParameterType	int		5613508	0					
ANR	5613530	Identifier	c		5613508	1					
ANR	5613531	CFGEntryNode	ENTRY		5613508		True				
ANR	5613532	CFGExitNode	EXIT		5613508		True				
ANR	5613533	Symbol	c		5613508						
ANR	5613534	Function	encode_var_int	137:0:2848:3272							
ANR	5613535	FunctionDef	"encode_var_int (const ut32 bias , const ut32 delta , char * dst)"		5613534	0					
ANR	5613536	CompoundStatement		137:73:2921:3272	5613534	0					
ANR	5613537	IdentifierDeclStatement	"ut32 i , k , q , t ;"	138:1:2924:2939	5613534	0	True				
ANR	5613538	IdentifierDecl	i		5613534	0					
ANR	5613539	IdentifierDeclType	ut32		5613534	0					
ANR	5613540	Identifier	i		5613534	1					
ANR	5613541	IdentifierDecl	k		5613534	1					
ANR	5613542	IdentifierDeclType	ut32		5613534	0					
ANR	5613543	Identifier	k		5613534	1					
ANR	5613544	IdentifierDecl	q		5613534	2					
ANR	5613545	IdentifierDeclType	ut32		5613534	0					
ANR	5613546	Identifier	q		5613534	1					
ANR	5613547	IdentifierDecl	t		5613534	3					
ANR	5613548	IdentifierDeclType	ut32		5613534	0					
ANR	5613549	Identifier	t		5613534	1					
ANR	5613550	ExpressionStatement	i = 0	139:1:2942:2947	5613534	1	True				
ANR	5613551	AssignmentExpression	i = 0		5613534	0		=			
ANR	5613552	Identifier	i		5613534	0					
ANR	5613553	PrimaryExpression	0		5613534	1					
ANR	5613554	ExpressionStatement	k = BASE	140:1:2950:2958	5613534	2	True				
ANR	5613555	AssignmentExpression	k = BASE		5613534	0		=			
ANR	5613556	Identifier	k		5613534	0					
ANR	5613557	Identifier	BASE		5613534	1					
ANR	5613558	ExpressionStatement	q = delta	141:1:2961:2970	5613534	3	True				
ANR	5613559	AssignmentExpression	q = delta		5613534	0		=			
ANR	5613560	Identifier	q		5613534	0					
ANR	5613561	Identifier	delta		5613534	1					
ANR	5613562	WhileStatement	while ( true )		5613534	4					
ANR	5613563	Condition	true	143:8:2981:2984	5613534	0	True				
ANR	5613564	Identifier	true		5613534	0					
ANR	5613565	CompoundStatement		7:14:65:65	5613534	1					
ANR	5613566	IfStatement	if ( k <= bias )		5613534	0					
ANR	5613567	Condition	k <= bias	144:6:2995:3003	5613534	0	True				
ANR	5613568	RelationalExpression	k <= bias		5613534	0		<=			
ANR	5613569	Identifier	k		5613534	0					
ANR	5613570	Identifier	bias		5613534	1					
ANR	5613571	CompoundStatement		8:17:84:84	5613534	1					
ANR	5613572	ExpressionStatement	t = TMIN	145:3:3011:3019	5613534	0	True				
ANR	5613573	AssignmentExpression	t = TMIN		5613534	0		=			
ANR	5613574	Identifier	t		5613534	0					
ANR	5613575	Identifier	TMIN		5613534	1					
ANR	5613576	ElseStatement	else		5613534	0					
ANR	5613577	IfStatement	if ( k >= bias + TMAX )		5613534	0					
ANR	5613578	Condition	k >= bias + TMAX	146:13:3034:3049	5613534	0	True				
ANR	5613579	RelationalExpression	k >= bias + TMAX		5613534	0		>=			
ANR	5613580	Identifier	k		5613534	0					
ANR	5613581	AdditiveExpression	bias + TMAX		5613534	1		+			
ANR	5613582	Identifier	bias		5613534	0					
ANR	5613583	Identifier	TMAX		5613534	1					
ANR	5613584	CompoundStatement		10:31:130:130	5613534	1					
ANR	5613585	ExpressionStatement	t = TMAX	147:3:3057:3065	5613534	0	True				
ANR	5613586	AssignmentExpression	t = TMAX		5613534	0		=			
ANR	5613587	Identifier	t		5613534	0					
ANR	5613588	Identifier	TMAX		5613534	1					
ANR	5613589	ElseStatement	else		5613534	0					
ANR	5613590	CompoundStatement		12:9:154:154	5613534	0					
ANR	5613591	ExpressionStatement	t = k - bias	149:3:3081:3093	5613534	0	True				
ANR	5613592	AssignmentExpression	t = k - bias		5613534	0		=			
ANR	5613593	Identifier	t		5613534	0					
ANR	5613594	AdditiveExpression	k - bias		5613534	1		-			
ANR	5613595	Identifier	k		5613534	0					
ANR	5613596	Identifier	bias		5613534	1					
ANR	5613597	IfStatement	if ( q < t )		5613534	1					
ANR	5613598	Condition	q < t	152:6:3106:3110	5613534	0	True				
ANR	5613599	RelationalExpression	q < t		5613534	0		<			
ANR	5613600	Identifier	q		5613534	0					
ANR	5613601	Identifier	t		5613534	1					
ANR	5613602	CompoundStatement		16:13:191:191	5613534	1					
ANR	5613603	BreakStatement	break ;	153:3:3118:3123	5613534	0	True				
ANR	5613604	ExpressionStatement	dst [ i ++ ] = encode_digit ( t + ( q - t ) % ( BASE - t ) )	156:2:3132:3182	5613534	2	True				
ANR	5613605	AssignmentExpression	dst [ i ++ ] = encode_digit ( t + ( q - t ) % ( BASE - t ) )		5613534	0		=			
ANR	5613606	ArrayIndexing	dst [ i ++ ]		5613534	0					
ANR	5613607	Identifier	dst		5613534	0					
ANR	5613608	PostIncDecOperationExpression	i ++		5613534	1					
ANR	5613609	Identifier	i		5613534	0					
ANR	5613610	IncDec	++		5613534	1					
ANR	5613611	CallExpression	encode_digit ( t + ( q - t ) % ( BASE - t ) )		5613534	1					
ANR	5613612	Callee	encode_digit		5613534	0					
ANR	5613613	Identifier	encode_digit		5613534	0					
ANR	5613614	ArgumentList	t + ( q - t ) % ( BASE - t )		5613534	1					
ANR	5613615	Argument	t + ( q - t ) % ( BASE - t )		5613534	0					
ANR	5613616	AdditiveExpression	t + ( q - t ) % ( BASE - t )		5613534	0		+			
ANR	5613617	Identifier	t		5613534	0					
ANR	5613618	MultiplicativeExpression	( q - t ) % ( BASE - t )		5613534	1		%			
ANR	5613619	AdditiveExpression	q - t		5613534	0		-			
ANR	5613620	Identifier	q		5613534	0					
ANR	5613621	Identifier	t		5613534	1					
ANR	5613622	AdditiveExpression	BASE - t		5613534	1		-			
ANR	5613623	Identifier	BASE		5613534	0					
ANR	5613624	Identifier	t		5613534	1					
ANR	5613625	ExpressionStatement	q = ( q - t ) / ( BASE - t )	158:2:3187:3211	5613534	3	True				
ANR	5613626	AssignmentExpression	q = ( q - t ) / ( BASE - t )		5613534	0		=			
ANR	5613627	Identifier	q		5613534	0					
ANR	5613628	MultiplicativeExpression	( q - t ) / ( BASE - t )		5613534	1		/			
ANR	5613629	AdditiveExpression	q - t		5613534	0		-			
ANR	5613630	Identifier	q		5613534	0					
ANR	5613631	Identifier	t		5613534	1					
ANR	5613632	AdditiveExpression	BASE - t		5613534	1		-			
ANR	5613633	Identifier	BASE		5613534	0					
ANR	5613634	Identifier	t		5613534	1					
ANR	5613635	ExpressionStatement	k += BASE	159:2:3215:3224	5613534	4	True				
ANR	5613636	AssignmentExpression	k += BASE		5613534	0		+=			
ANR	5613637	Identifier	k		5613534	0					
ANR	5613638	Identifier	BASE		5613534	1					
ANR	5613639	ExpressionStatement	dst [ i ++ ] = encode_digit ( q )	162:1:3231:3258	5613534	5	True				
ANR	5613640	AssignmentExpression	dst [ i ++ ] = encode_digit ( q )		5613534	0		=			
ANR	5613641	ArrayIndexing	dst [ i ++ ]		5613534	0					
ANR	5613642	Identifier	dst		5613534	0					
ANR	5613643	PostIncDecOperationExpression	i ++		5613534	1					
ANR	5613644	Identifier	i		5613534	0					
ANR	5613645	IncDec	++		5613534	1					
ANR	5613646	CallExpression	encode_digit ( q )		5613534	1					
ANR	5613647	Callee	encode_digit		5613534	0					
ANR	5613648	Identifier	encode_digit		5613534	0					
ANR	5613649	ArgumentList	q		5613534	1					
ANR	5613650	Argument	q		5613534	0					
ANR	5613651	Identifier	q		5613534	0					
ANR	5613652	ReturnStatement	return i ;	164:1:3262:3270	5613534	6	True				
ANR	5613653	Identifier	i		5613534	0					
ANR	5613654	ReturnType	static ut32		5613534	1					
ANR	5613655	Identifier	encode_var_int		5613534	2					
ANR	5613656	ParameterList	"const ut32 bias , const ut32 delta , char * dst"		5613534	3					
ANR	5613657	Parameter	const ut32 bias	137:27:2875:2889	5613534	0	True				
ANR	5613658	ParameterType	const ut32		5613534	0					
ANR	5613659	Identifier	bias		5613534	1					
ANR	5613660	Parameter	const ut32 delta	137:44:2892:2907	5613534	1	True				
ANR	5613661	ParameterType	const ut32		5613534	0					
ANR	5613662	Identifier	delta		5613534	1					
ANR	5613663	Parameter	char * dst	137:62:2910:2918	5613534	2	True				
ANR	5613664	ParameterType	char *		5613534	0					
ANR	5613665	Identifier	dst		5613534	1					
ANR	5613666	CFGEntryNode	ENTRY		5613534		True				
ANR	5613667	CFGExitNode	EXIT		5613534		True				
ANR	5613668	Symbol	encode_digit		5613534						
ANR	5613669	Symbol	dst		5613534						
ANR	5613670	Symbol	delta		5613534						
ANR	5613671	Symbol	i		5613534						
ANR	5613672	Symbol	k		5613534						
ANR	5613673	Symbol	BASE		5613534						
ANR	5613674	Symbol	* dst		5613534						
ANR	5613675	Symbol	q		5613534						
ANR	5613676	Symbol	t		5613534						
ANR	5613677	Symbol	bias		5613534						
ANR	5613678	Symbol	TMAX		5613534						
ANR	5613679	Symbol	true		5613534						
ANR	5613680	Symbol	TMIN		5613534						
ANR	5613681	Function	decode_digit	167:0:3275:3469							
ANR	5613682	FunctionDef	decode_digit (ut32 v)		5613681	0					
ANR	5613683	CompoundStatement		167:33:3308:3469	5613681	0					
ANR	5613684	IfStatement	if ( IS_DIGIT ( v ) )		5613681	0					
ANR	5613685	Condition	IS_DIGIT ( v )	168:5:3315:3326	5613681	0	True				
ANR	5613686	CallExpression	IS_DIGIT ( v )		5613681	0					
ANR	5613687	Callee	IS_DIGIT		5613681	0					
ANR	5613688	Identifier	IS_DIGIT		5613681	0					
ANR	5613689	ArgumentList	v		5613681	1					
ANR	5613690	Argument	v		5613681	0					
ANR	5613691	Identifier	v		5613681	0					
ANR	5613692	CompoundStatement		2:19:20:20	5613681	1					
ANR	5613693	ReturnStatement	return v - 22 ;	169:2:3333:3346	5613681	0	True				
ANR	5613694	AdditiveExpression	v - 22		5613681	0		-			
ANR	5613695	Identifier	v		5613681	0					
ANR	5613696	PrimaryExpression	22		5613681	1					
ANR	5613697	IfStatement	if ( v >= 'a' && v <= 'z' )		5613681	1					
ANR	5613698	Condition	v >= 'a' && v <= 'z'	171:5:3356:3375	5613681	0	True				
ANR	5613699	AndExpression	v >= 'a' && v <= 'z'		5613681	0		&&			
ANR	5613700	RelationalExpression	v >= 'a'		5613681	0		>=			
ANR	5613701	Identifier	v		5613681	0					
ANR	5613702	PrimaryExpression	'a'		5613681	1					
ANR	5613703	RelationalExpression	v <= 'z'		5613681	1		<=			
ANR	5613704	Identifier	v		5613681	0					
ANR	5613705	PrimaryExpression	'z'		5613681	1					
ANR	5613706	CompoundStatement		5:27:69:69	5613681	1					
ANR	5613707	ReturnStatement	return v - 'a' ;	172:2:3382:3396	5613681	0	True				
ANR	5613708	AdditiveExpression	v - 'a'		5613681	0		-			
ANR	5613709	Identifier	v		5613681	0					
ANR	5613710	PrimaryExpression	'a'		5613681	1					
ANR	5613711	IfStatement	if ( v >= 'A' && v <= 'Z' )		5613681	2					
ANR	5613712	Condition	v >= 'A' && v <= 'Z'	174:5:3406:3425	5613681	0	True				
ANR	5613713	AndExpression	v >= 'A' && v <= 'Z'		5613681	0		&&			
ANR	5613714	RelationalExpression	v >= 'A'		5613681	0		>=			
ANR	5613715	Identifier	v		5613681	0					
ANR	5613716	PrimaryExpression	'A'		5613681	1					
ANR	5613717	RelationalExpression	v <= 'Z'		5613681	1		<=			
ANR	5613718	Identifier	v		5613681	0					
ANR	5613719	PrimaryExpression	'Z'		5613681	1					
ANR	5613720	CompoundStatement		8:27:119:119	5613681	1					
ANR	5613721	ReturnStatement	return v - 'A' ;	175:2:3432:3446	5613681	0	True				
ANR	5613722	AdditiveExpression	v - 'A'		5613681	0		-			
ANR	5613723	Identifier	v		5613681	0					
ANR	5613724	PrimaryExpression	'A'		5613681	1					
ANR	5613725	ReturnStatement	return UT32_MAX ;	177:1:3452:3467	5613681	3	True				
ANR	5613726	Identifier	UT32_MAX		5613681	0					
ANR	5613727	ReturnType	static ut32		5613681	1					
ANR	5613728	Identifier	decode_digit		5613681	2					
ANR	5613729	ParameterList	ut32 v		5613681	3					
ANR	5613730	Parameter	ut32 v	167:25:3300:3305	5613681	0	True				
ANR	5613731	ParameterType	ut32		5613681	0					
ANR	5613732	Identifier	v		5613681	1					
ANR	5613733	CFGEntryNode	ENTRY		5613681		True				
ANR	5613734	CFGExitNode	EXIT		5613681		True				
ANR	5613735	Symbol	UT32_MAX		5613681						
ANR	5613736	Symbol	v		5613681						
ANR	5613737	Symbol	IS_DIGIT		5613681						
ANR	5613738	Function	r_punycode_encode	180:0:3472:4787							
ANR	5613739	FunctionDef	"r_punycode_encode (const ut8 * src , int srclen , int * dstlen)"		5613738	0					
ANR	5613740	CompoundStatement		180:71:3543:4787	5613738	0					
ANR	5613741	IdentifierDeclStatement	"ut32 m , n ;"	181:1:3546:3555	5613738	0	True				
ANR	5613742	IdentifierDecl	m		5613738	0					
ANR	5613743	IdentifierDeclType	ut32		5613738	0					
ANR	5613744	Identifier	m		5613738	1					
ANR	5613745	IdentifierDecl	n		5613738	1					
ANR	5613746	IdentifierDeclType	ut32		5613738	0					
ANR	5613747	Identifier	n		5613738	1					
ANR	5613748	IdentifierDeclStatement	"ut32 b , h ;"	182:1:3558:3567	5613738	1	True				
ANR	5613749	IdentifierDecl	b		5613738	0					
ANR	5613750	IdentifierDeclType	ut32		5613738	0					
ANR	5613751	Identifier	b		5613738	1					
ANR	5613752	IdentifierDecl	h		5613738	1					
ANR	5613753	IdentifierDeclType	ut32		5613738	0					
ANR	5613754	Identifier	h		5613738	1					
ANR	5613755	IdentifierDeclStatement	"ut32 si , di ;"	183:1:3570:3581	5613738	2	True				
ANR	5613756	IdentifierDecl	si		5613738	0					
ANR	5613757	IdentifierDeclType	ut32		5613738	0					
ANR	5613758	Identifier	si		5613738	1					
ANR	5613759	IdentifierDecl	di		5613738	1					
ANR	5613760	IdentifierDeclType	ut32		5613738	0					
ANR	5613761	Identifier	di		5613738	1					
ANR	5613762	IdentifierDeclStatement	"ut32 delta , bias ;"	184:1:3584:3600	5613738	3	True				
ANR	5613763	IdentifierDecl	delta		5613738	0					
ANR	5613764	IdentifierDeclType	ut32		5613738	0					
ANR	5613765	Identifier	delta		5613738	1					
ANR	5613766	IdentifierDecl	bias		5613738	1					
ANR	5613767	IdentifierDeclType	ut32		5613738	0					
ANR	5613768	Identifier	bias		5613738	1					
ANR	5613769	IdentifierDeclStatement	ut32 * actualsrc = NULL ;	185:1:3603:3625	5613738	4	True				
ANR	5613770	IdentifierDecl	* actualsrc = NULL		5613738	0					
ANR	5613771	IdentifierDeclType	ut32 *		5613738	0					
ANR	5613772	Identifier	actualsrc		5613738	1					
ANR	5613773	AssignmentExpression	* actualsrc = NULL		5613738	2		=			
ANR	5613774	Identifier	NULL		5613738	0					
ANR	5613775	Identifier	NULL		5613738	1					
ANR	5613776	IdentifierDeclStatement	ut32 len = 0 ;	186:1:3628:3640	5613738	5	True				
ANR	5613777	IdentifierDecl	len = 0		5613738	0					
ANR	5613778	IdentifierDeclType	ut32		5613738	0					
ANR	5613779	Identifier	len		5613738	1					
ANR	5613780	AssignmentExpression	len = 0		5613738	2		=			
ANR	5613781	Identifier	len		5613738	0					
ANR	5613782	PrimaryExpression	0		5613738	1					
ANR	5613783	IdentifierDeclStatement	char * dst = NULL ;	187:1:3643:3659	5613738	6	True				
ANR	5613784	IdentifierDecl	* dst = NULL		5613738	0					
ANR	5613785	IdentifierDeclType	char *		5613738	0					
ANR	5613786	Identifier	dst		5613738	1					
ANR	5613787	AssignmentExpression	* dst = NULL		5613738	2		=			
ANR	5613788	Identifier	NULL		5613738	0					
ANR	5613789	Identifier	NULL		5613738	1					
ANR	5613790	ExpressionStatement	* dstlen = 0	189:1:3663:3674	5613738	7	True				
ANR	5613791	AssignmentExpression	* dstlen = 0		5613738	0		=			
ANR	5613792	UnaryOperationExpression	* dstlen		5613738	0					
ANR	5613793	UnaryOperator	*		5613738	0					
ANR	5613794	Identifier	dstlen		5613738	1					
ANR	5613795	PrimaryExpression	0		5613738	1					
ANR	5613796	IfStatement	if ( ! src || srclen < 1 )		5613738	8					
ANR	5613797	Condition	! src || srclen < 1	191:5:3682:3699	5613738	0	True				
ANR	5613798	OrExpression	! src || srclen < 1		5613738	0		||			
ANR	5613799	UnaryOperationExpression	! src		5613738	0					
ANR	5613800	UnaryOperator	!		5613738	0					
ANR	5613801	Identifier	src		5613738	1					
ANR	5613802	RelationalExpression	srclen < 1		5613738	1		<			
ANR	5613803	Identifier	srclen		5613738	0					
ANR	5613804	PrimaryExpression	1		5613738	1					
ANR	5613805	CompoundStatement		12:25:158:158	5613738	1					
ANR	5613806	ReturnStatement	return NULL ;	192:2:3706:3717	5613738	0	True				
ANR	5613807	Identifier	NULL		5613738	0					
ANR	5613808	ExpressionStatement	actualsrc = utf8toutf32 ( src )	195:1:3724:3753	5613738	9	True				
ANR	5613809	AssignmentExpression	actualsrc = utf8toutf32 ( src )		5613738	0		=			
ANR	5613810	Identifier	actualsrc		5613738	0					
ANR	5613811	CallExpression	utf8toutf32 ( src )		5613738	1					
ANR	5613812	Callee	utf8toutf32		5613738	0					
ANR	5613813	Identifier	utf8toutf32		5613738	0					
ANR	5613814	ArgumentList	src		5613738	1					
ANR	5613815	Argument	src		5613738	0					
ANR	5613816	Identifier	src		5613738	0					
ANR	5613817	IfStatement	if ( ! actualsrc )		5613738	10					
ANR	5613818	Condition	! actualsrc	196:5:3760:3769	5613738	0	True				
ANR	5613819	UnaryOperationExpression	! actualsrc		5613738	0					
ANR	5613820	UnaryOperator	!		5613738	0					
ANR	5613821	Identifier	actualsrc		5613738	1					
ANR	5613822	CompoundStatement		17:17:228:228	5613738	1					
ANR	5613823	ReturnStatement	return NULL ;	197:2:3776:3787	5613738	0	True				
ANR	5613824	Identifier	NULL		5613738	0					
ANR	5613825	ExpressionStatement	len = utf32len ( actualsrc )	200:1:3794:3820	5613738	11	True				
ANR	5613826	AssignmentExpression	len = utf32len ( actualsrc )		5613738	0		=			
ANR	5613827	Identifier	len		5613738	0					
ANR	5613828	CallExpression	utf32len ( actualsrc )		5613738	1					
ANR	5613829	Callee	utf32len		5613738	0					
ANR	5613830	Identifier	utf32len		5613738	0					
ANR	5613831	ArgumentList	actualsrc		5613738	1					
ANR	5613832	Argument	actualsrc		5613738	0					
ANR	5613833	Identifier	actualsrc		5613738	0					
ANR	5613834	ExpressionStatement	"dst = calloc ( 2 * len + 10 , 1 )"	202:1:3824:3854	5613738	12	True				
ANR	5613835	AssignmentExpression	"dst = calloc ( 2 * len + 10 , 1 )"		5613738	0		=			
ANR	5613836	Identifier	dst		5613738	0					
ANR	5613837	CallExpression	"calloc ( 2 * len + 10 , 1 )"		5613738	1					
ANR	5613838	Callee	calloc		5613738	0					
ANR	5613839	Identifier	calloc		5613738	0					
ANR	5613840	ArgumentList	2 * len + 10		5613738	1					
ANR	5613841	Argument	2 * len + 10		5613738	0					
ANR	5613842	AdditiveExpression	2 * len + 10		5613738	0		+			
ANR	5613843	MultiplicativeExpression	2 * len		5613738	0		*			
ANR	5613844	PrimaryExpression	2		5613738	0					
ANR	5613845	Identifier	len		5613738	1					
ANR	5613846	PrimaryExpression	10		5613738	1					
ANR	5613847	Argument	1		5613738	1					
ANR	5613848	PrimaryExpression	1		5613738	0					
ANR	5613849	IfStatement	if ( ! dst )		5613738	13					
ANR	5613850	Condition	! dst	203:5:3861:3864	5613738	0	True				
ANR	5613851	UnaryOperationExpression	! dst		5613738	0					
ANR	5613852	UnaryOperator	!		5613738	0					
ANR	5613853	Identifier	dst		5613738	1					
ANR	5613854	CompoundStatement		24:11:323:323	5613738	1					
ANR	5613855	ExpressionStatement	free ( actualsrc )	204:2:3871:3887	5613738	0	True				
ANR	5613856	CallExpression	free ( actualsrc )		5613738	0					
ANR	5613857	Callee	free		5613738	0					
ANR	5613858	Identifier	free		5613738	0					
ANR	5613859	ArgumentList	actualsrc		5613738	1					
ANR	5613860	Argument	actualsrc		5613738	0					
ANR	5613861	Identifier	actualsrc		5613738	0					
ANR	5613862	ReturnStatement	return NULL ;	205:2:3891:3902	5613738	1	True				
ANR	5613863	Identifier	NULL		5613738	0					
ANR	5613864	ForStatement	"for ( si = 0 , di = 0 ; si < len ; si ++ )"		5613738	14					
ANR	5613865	ForInit	"si = 0 , di = 0 ;"	208:6:3914:3928	5613738	0	True				
ANR	5613866	Expression	"si = 0 , di = 0"		5613738	0					
ANR	5613867	AssignmentExpression	si = 0		5613738	0		=			
ANR	5613868	Identifier	si		5613738	0					
ANR	5613869	PrimaryExpression	0		5613738	1					
ANR	5613870	AssignmentExpression	di = 0		5613738	1		=			
ANR	5613871	Identifier	di		5613738	0					
ANR	5613872	PrimaryExpression	0		5613738	1					
ANR	5613873	Condition	si < len	208:22:3930:3937	5613738	1	True				
ANR	5613874	RelationalExpression	si < len		5613738	0		<			
ANR	5613875	Identifier	si		5613738	0					
ANR	5613876	Identifier	len		5613738	1					
ANR	5613877	PostIncDecOperationExpression	si ++	208:32:3940:3943	5613738	2	True				
ANR	5613878	Identifier	si		5613738	0					
ANR	5613879	IncDec	++		5613738	1					
ANR	5613880	CompoundStatement		29:38:402:402	5613738	3					
ANR	5613881	IfStatement	if ( actualsrc [ si ] < 128 )		5613738	0					
ANR	5613882	Condition	actualsrc [ si ] < 128	209:6:3954:3972	5613738	0	True				
ANR	5613883	RelationalExpression	actualsrc [ si ] < 128		5613738	0		<			
ANR	5613884	ArrayIndexing	actualsrc [ si ]		5613738	0					
ANR	5613885	Identifier	actualsrc		5613738	0					
ANR	5613886	Identifier	si		5613738	1					
ANR	5613887	PrimaryExpression	128		5613738	1					
ANR	5613888	CompoundStatement		30:27:431:431	5613738	1					
ANR	5613889	ExpressionStatement	dst [ di ++ ] = actualsrc [ si ]	210:3:3980:4005	5613738	0	True				
ANR	5613890	AssignmentExpression	dst [ di ++ ] = actualsrc [ si ]		5613738	0		=			
ANR	5613891	ArrayIndexing	dst [ di ++ ]		5613738	0					
ANR	5613892	Identifier	dst		5613738	0					
ANR	5613893	PostIncDecOperationExpression	di ++		5613738	1					
ANR	5613894	Identifier	di		5613738	0					
ANR	5613895	IncDec	++		5613738	1					
ANR	5613896	ArrayIndexing	actualsrc [ si ]		5613738	1					
ANR	5613897	Identifier	actualsrc		5613738	0					
ANR	5613898	Identifier	si		5613738	1					
ANR	5613899	ExpressionStatement	b = h = di	214:1:4016:4026	5613738	15	True				
ANR	5613900	AssignmentExpression	b = h = di		5613738	0		=			
ANR	5613901	Identifier	b		5613738	0					
ANR	5613902	AssignmentExpression	h = di		5613738	1		=			
ANR	5613903	Identifier	h		5613738	0					
ANR	5613904	Identifier	di		5613738	1					
ANR	5613905	IfStatement	if ( di > 0 )		5613738	16					
ANR	5613906	Condition	di > 0	216:5:4034:4039	5613738	0	True				
ANR	5613907	RelationalExpression	di > 0		5613738	0		>			
ANR	5613908	Identifier	di		5613738	0					
ANR	5613909	PrimaryExpression	0		5613738	1					
ANR	5613910	CompoundStatement		37:13:498:498	5613738	1					
ANR	5613911	ExpressionStatement	dst [ di ++ ] = '-'	217:2:4046:4061	5613738	0	True				
ANR	5613912	AssignmentExpression	dst [ di ++ ] = '-'		5613738	0		=			
ANR	5613913	ArrayIndexing	dst [ di ++ ]		5613738	0					
ANR	5613914	Identifier	dst		5613738	0					
ANR	5613915	PostIncDecOperationExpression	di ++		5613738	1					
ANR	5613916	Identifier	di		5613738	0					
ANR	5613917	IncDec	++		5613738	1					
ANR	5613918	PrimaryExpression	'-'		5613738	1					
ANR	5613919	ExpressionStatement	n = INITIAL_N	220:1:4068:4081	5613738	17	True				
ANR	5613920	AssignmentExpression	n = INITIAL_N		5613738	0		=			
ANR	5613921	Identifier	n		5613738	0					
ANR	5613922	Identifier	INITIAL_N		5613738	1					
ANR	5613923	ExpressionStatement	bias = INITIAL_BIAS	221:1:4084:4103	5613738	18	True				
ANR	5613924	AssignmentExpression	bias = INITIAL_BIAS		5613738	0		=			
ANR	5613925	Identifier	bias		5613738	0					
ANR	5613926	Identifier	INITIAL_BIAS		5613738	1					
ANR	5613927	ForStatement	"for ( delta = 0 ; h < len ; n ++ , delta ++ )"		5613738	19					
ANR	5613928	ForInit	delta = 0 ;	223:6:4112:4121	5613738	0	True				
ANR	5613929	AssignmentExpression	delta = 0		5613738	0		=			
ANR	5613930	Identifier	delta		5613738	0					
ANR	5613931	PrimaryExpression	0		5613738	1					
ANR	5613932	Condition	h < len	223:17:4123:4129	5613738	1	True				
ANR	5613933	RelationalExpression	h < len		5613738	0		<			
ANR	5613934	Identifier	h		5613738	0					
ANR	5613935	Identifier	len		5613738	1					
ANR	5613936	Expression	"n ++ , delta ++"	223:26:4132:4143	5613738	2	True				
ANR	5613937	PostIncDecOperationExpression	n ++		5613738	0					
ANR	5613938	Identifier	n		5613738	0					
ANR	5613939	IncDec	++		5613738	1					
ANR	5613940	PostIncDecOperationExpression	delta ++		5613738	1					
ANR	5613941	Identifier	delta		5613738	0					
ANR	5613942	IncDec	++		5613738	1					
ANR	5613943	CompoundStatement		44:40:602:602	5613738	3					
ANR	5613944	ForStatement	"for ( m = UT32_MAX , si = 0 ; si < len ; si ++ )"		5613738	0					
ANR	5613945	ForInit	"m = UT32_MAX , si = 0 ;"	224:7:4155:4175	5613738	0	True				
ANR	5613946	Expression	"m = UT32_MAX , si = 0"		5613738	0					
ANR	5613947	AssignmentExpression	m = UT32_MAX		5613738	0		=			
ANR	5613948	Identifier	m		5613738	0					
ANR	5613949	Identifier	UT32_MAX		5613738	1					
ANR	5613950	AssignmentExpression	si = 0		5613738	1		=			
ANR	5613951	Identifier	si		5613738	0					
ANR	5613952	PrimaryExpression	0		5613738	1					
ANR	5613953	Condition	si < len	224:29:4177:4184	5613738	1	True				
ANR	5613954	RelationalExpression	si < len		5613738	0		<			
ANR	5613955	Identifier	si		5613738	0					
ANR	5613956	Identifier	len		5613738	1					
ANR	5613957	PostIncDecOperationExpression	si ++	224:39:4187:4190	5613738	2	True				
ANR	5613958	Identifier	si		5613738	0					
ANR	5613959	IncDec	++		5613738	1					
ANR	5613960	CompoundStatement		45:45:649:649	5613738	3					
ANR	5613961	IfStatement	if ( actualsrc [ si ] >= n && actualsrc [ si ] < m )		5613738	0					
ANR	5613962	Condition	actualsrc [ si ] >= n && actualsrc [ si ] < m	225:7:4202:4240	5613738	0	True				
ANR	5613963	AndExpression	actualsrc [ si ] >= n && actualsrc [ si ] < m		5613738	0		&&			
ANR	5613964	RelationalExpression	actualsrc [ si ] >= n		5613738	0		>=			
ANR	5613965	ArrayIndexing	actualsrc [ si ]		5613738	0					
ANR	5613966	Identifier	actualsrc		5613738	0					
ANR	5613967	Identifier	si		5613738	1					
ANR	5613968	Identifier	n		5613738	1					
ANR	5613969	RelationalExpression	actualsrc [ si ] < m		5613738	1		<			
ANR	5613970	ArrayIndexing	actualsrc [ si ]		5613738	0					
ANR	5613971	Identifier	actualsrc		5613738	0					
ANR	5613972	Identifier	si		5613738	1					
ANR	5613973	Identifier	m		5613738	1					
ANR	5613974	CompoundStatement		46:48:699:699	5613738	1					
ANR	5613975	ExpressionStatement	m = actualsrc [ si ]	226:4:4249:4266	5613738	0	True				
ANR	5613976	AssignmentExpression	m = actualsrc [ si ]		5613738	0		=			
ANR	5613977	Identifier	m		5613738	0					
ANR	5613978	ArrayIndexing	actualsrc [ si ]		5613738	1					
ANR	5613979	Identifier	actualsrc		5613738	0					
ANR	5613980	Identifier	si		5613738	1					
ANR	5613981	IfStatement	if ( ( m - n ) > ( UT32_MAX - delta ) / ( h + 1 ) )		5613738	1					
ANR	5613982	Condition	( m - n ) > ( UT32_MAX - delta ) / ( h + 1 )	230:6:4284:4321	5613738	0	True				
ANR	5613983	RelationalExpression	( m - n ) > ( UT32_MAX - delta ) / ( h + 1 )		5613738	0		>			
ANR	5613984	AdditiveExpression	m - n		5613738	0		-			
ANR	5613985	Identifier	m		5613738	0					
ANR	5613986	Identifier	n		5613738	1					
ANR	5613987	MultiplicativeExpression	( UT32_MAX - delta ) / ( h + 1 )		5613738	1		/			
ANR	5613988	AdditiveExpression	UT32_MAX - delta		5613738	0		-			
ANR	5613989	Identifier	UT32_MAX		5613738	0					
ANR	5613990	Identifier	delta		5613738	1					
ANR	5613991	AdditiveExpression	h + 1		5613738	1		+			
ANR	5613992	Identifier	h		5613738	0					
ANR	5613993	PrimaryExpression	1		5613738	1					
ANR	5613994	CompoundStatement		51:46:780:780	5613738	1					
ANR	5613995	ExpressionStatement	free ( actualsrc )	231:3:4329:4345	5613738	0	True				
ANR	5613996	CallExpression	free ( actualsrc )		5613738	0					
ANR	5613997	Callee	free		5613738	0					
ANR	5613998	Identifier	free		5613738	0					
ANR	5613999	ArgumentList	actualsrc		5613738	1					
ANR	5614000	Argument	actualsrc		5613738	0					
ANR	5614001	Identifier	actualsrc		5613738	0					
ANR	5614002	ExpressionStatement	free ( dst )	232:3:4350:4360	5613738	1	True				
ANR	5614003	CallExpression	free ( dst )		5613738	0					
ANR	5614004	Callee	free		5613738	0					
ANR	5614005	Identifier	free		5613738	0					
ANR	5614006	ArgumentList	dst		5613738	1					
ANR	5614007	Argument	dst		5613738	0					
ANR	5614008	Identifier	dst		5613738	0					
ANR	5614009	ReturnStatement	return NULL ;	233:3:4365:4376	5613738	2	True				
ANR	5614010	Identifier	NULL		5613738	0					
ANR	5614011	ExpressionStatement	delta += ( m - n ) * ( h + 1 )	236:2:4385:4411	5613738	2	True				
ANR	5614012	AssignmentExpression	delta += ( m - n ) * ( h + 1 )		5613738	0		+=			
ANR	5614013	Identifier	delta		5613738	0					
ANR	5614014	MultiplicativeExpression	( m - n ) * ( h + 1 )		5613738	1		*			
ANR	5614015	AdditiveExpression	m - n		5613738	0		-			
ANR	5614016	Identifier	m		5613738	0					
ANR	5614017	Identifier	n		5613738	1					
ANR	5614018	AdditiveExpression	h + 1		5613738	1		+			
ANR	5614019	Identifier	h		5613738	0					
ANR	5614020	PrimaryExpression	1		5613738	1					
ANR	5614021	ExpressionStatement	n = m	237:2:4415:4420	5613738	3	True				
ANR	5614022	AssignmentExpression	n = m		5613738	0		=			
ANR	5614023	Identifier	n		5613738	0					
ANR	5614024	Identifier	m		5613738	1					
ANR	5614025	ForStatement	for ( si = 0 ; si < len ; si ++ )		5613738	4					
ANR	5614026	ForInit	si = 0 ;	239:7:4430:4436	5613738	0	True				
ANR	5614027	AssignmentExpression	si = 0		5613738	0		=			
ANR	5614028	Identifier	si		5613738	0					
ANR	5614029	PrimaryExpression	0		5613738	1					
ANR	5614030	Condition	si < len	239:15:4438:4445	5613738	1	True				
ANR	5614031	RelationalExpression	si < len		5613738	0		<			
ANR	5614032	Identifier	si		5613738	0					
ANR	5614033	Identifier	len		5613738	1					
ANR	5614034	PostIncDecOperationExpression	si ++	239:25:4448:4451	5613738	2	True				
ANR	5614035	Identifier	si		5613738	0					
ANR	5614036	IncDec	++		5613738	1					
ANR	5614037	CompoundStatement		60:31:910:910	5613738	3					
ANR	5614038	IfStatement	if ( actualsrc [ si ] < n )		5613738	0					
ANR	5614039	Condition	actualsrc [ si ] < n	240:7:4463:4479	5613738	0	True				
ANR	5614040	RelationalExpression	actualsrc [ si ] < n		5613738	0		<			
ANR	5614041	ArrayIndexing	actualsrc [ si ]		5613738	0					
ANR	5614042	Identifier	actualsrc		5613738	0					
ANR	5614043	Identifier	si		5613738	1					
ANR	5614044	Identifier	n		5613738	1					
ANR	5614045	CompoundStatement		61:26:938:938	5613738	1					
ANR	5614046	IfStatement	if ( ++ delta == 0 )		5613738	0					
ANR	5614047	Condition	++ delta == 0	241:8:4492:4503	5613738	0	True				
ANR	5614048	EqualityExpression	++ delta == 0		5613738	0		==			
ANR	5614049	UnaryExpression	++ delta		5613738	0					
ANR	5614050	IncDec	++		5613738	0					
ANR	5614051	Identifier	delta		5613738	1					
ANR	5614052	PrimaryExpression	0		5613738	1					
ANR	5614053	CompoundStatement		62:22:962:962	5613738	1					
ANR	5614054	ExpressionStatement	free ( actualsrc )	242:5:4513:4529	5613738	0	True				
ANR	5614055	CallExpression	free ( actualsrc )		5613738	0					
ANR	5614056	Callee	free		5613738	0					
ANR	5614057	Identifier	free		5613738	0					
ANR	5614058	ArgumentList	actualsrc		5613738	1					
ANR	5614059	Argument	actualsrc		5613738	0					
ANR	5614060	Identifier	actualsrc		5613738	0					
ANR	5614061	ExpressionStatement	free ( dst )	243:5:4536:4546	5613738	1	True				
ANR	5614062	CallExpression	free ( dst )		5613738	0					
ANR	5614063	Callee	free		5613738	0					
ANR	5614064	Identifier	free		5613738	0					
ANR	5614065	ArgumentList	dst		5613738	1					
ANR	5614066	Argument	dst		5613738	0					
ANR	5614067	Identifier	dst		5613738	0					
ANR	5614068	ReturnStatement	return NULL ;	244:5:4553:4564	5613738	2	True				
ANR	5614069	Identifier	NULL		5613738	0					
ANR	5614070	ElseStatement	else		5613738	0					
ANR	5614071	IfStatement	if ( actualsrc [ si ] == n )		5613738	0					
ANR	5614072	Condition	actualsrc [ si ] == n	246:14:4586:4603	5613738	0	True				
ANR	5614073	EqualityExpression	actualsrc [ si ] == n		5613738	0		==			
ANR	5614074	ArrayIndexing	actualsrc [ si ]		5613738	0					
ANR	5614075	Identifier	actualsrc		5613738	0					
ANR	5614076	Identifier	si		5613738	1					
ANR	5614077	Identifier	n		5613738	1					
ANR	5614078	CompoundStatement		67:34:1062:1062	5613738	1					
ANR	5614079	ExpressionStatement	"di += encode_var_int ( bias , delta , & dst [ di ] )"	247:4:4612:4656	5613738	0	True				
ANR	5614080	AssignmentExpression	"di += encode_var_int ( bias , delta , & dst [ di ] )"		5613738	0		+=			
ANR	5614081	Identifier	di		5613738	0					
ANR	5614082	CallExpression	"encode_var_int ( bias , delta , & dst [ di ] )"		5613738	1					
ANR	5614083	Callee	encode_var_int		5613738	0					
ANR	5614084	Identifier	encode_var_int		5613738	0					
ANR	5614085	ArgumentList	bias		5613738	1					
ANR	5614086	Argument	bias		5613738	0					
ANR	5614087	Identifier	bias		5613738	0					
ANR	5614088	Argument	delta		5613738	1					
ANR	5614089	Identifier	delta		5613738	0					
ANR	5614090	Argument	& dst [ di ]		5613738	2					
ANR	5614091	UnaryOperationExpression	& dst [ di ]		5613738	0					
ANR	5614092	UnaryOperator	&		5613738	0					
ANR	5614093	ArrayIndexing	dst [ di ]		5613738	1					
ANR	5614094	Identifier	dst		5613738	0					
ANR	5614095	Identifier	di		5613738	1					
ANR	5614096	ExpressionStatement	"bias = adapt_bias ( delta , h + 1 , h == b )"	248:4:4662:4702	5613738	1	True				
ANR	5614097	AssignmentExpression	"bias = adapt_bias ( delta , h + 1 , h == b )"		5613738	0		=			
ANR	5614098	Identifier	bias		5613738	0					
ANR	5614099	CallExpression	"adapt_bias ( delta , h + 1 , h == b )"		5613738	1					
ANR	5614100	Callee	adapt_bias		5613738	0					
ANR	5614101	Identifier	adapt_bias		5613738	0					
ANR	5614102	ArgumentList	delta		5613738	1					
ANR	5614103	Argument	delta		5613738	0					
ANR	5614104	Identifier	delta		5613738	0					
ANR	5614105	Argument	h + 1		5613738	1					
ANR	5614106	AdditiveExpression	h + 1		5613738	0		+			
ANR	5614107	Identifier	h		5613738	0					
ANR	5614108	PrimaryExpression	1		5613738	1					
ANR	5614109	Argument	h == b		5613738	2					
ANR	5614110	EqualityExpression	h == b		5613738	0		==			
ANR	5614111	Identifier	h		5613738	0					
ANR	5614112	Identifier	b		5613738	1					
ANR	5614113	ExpressionStatement	delta = 0	249:4:4708:4717	5613738	2	True				
ANR	5614114	AssignmentExpression	delta = 0		5613738	0		=			
ANR	5614115	Identifier	delta		5613738	0					
ANR	5614116	PrimaryExpression	0		5613738	1					
ANR	5614117	ExpressionStatement	h ++	250:4:4723:4726	5613738	3	True				
ANR	5614118	PostIncDecOperationExpression	h ++		5613738	0					
ANR	5614119	Identifier	h		5613738	0					
ANR	5614120	IncDec	++		5613738	1					
ANR	5614121	ExpressionStatement	* dstlen = di	254:1:4741:4753	5613738	20	True				
ANR	5614122	AssignmentExpression	* dstlen = di		5613738	0		=			
ANR	5614123	UnaryOperationExpression	* dstlen		5613738	0					
ANR	5614124	UnaryOperator	*		5613738	0					
ANR	5614125	Identifier	dstlen		5613738	1					
ANR	5614126	Identifier	di		5613738	1					
ANR	5614127	ExpressionStatement	free ( actualsrc )	255:1:4756:4772	5613738	21	True				
ANR	5614128	CallExpression	free ( actualsrc )		5613738	0					
ANR	5614129	Callee	free		5613738	0					
ANR	5614130	Identifier	free		5613738	0					
ANR	5614131	ArgumentList	actualsrc		5613738	1					
ANR	5614132	Argument	actualsrc		5613738	0					
ANR	5614133	Identifier	actualsrc		5613738	0					
ANR	5614134	ReturnStatement	return dst ;	256:1:4775:4785	5613738	22	True				
ANR	5614135	Identifier	dst		5613738	0					
ANR	5614136	ReturnType	R_API char *		5613738	1					
ANR	5614137	Identifier	r_punycode_encode		5613738	2					
ANR	5614138	ParameterList	"const ut8 * src , int srclen , int * dstlen"		5613738	3					
ANR	5614139	Parameter	const ut8 * src	180:30:3502:3515	5613738	0	True				
ANR	5614140	ParameterType	const ut8 *		5613738	0					
ANR	5614141	Identifier	src		5613738	1					
ANR	5614142	Parameter	int srclen	180:46:3518:3527	5613738	1	True				
ANR	5614143	ParameterType	int		5613738	0					
ANR	5614144	Identifier	srclen		5613738	1					
ANR	5614145	Parameter	int * dstlen	180:58:3530:3540	5613738	2	True				
ANR	5614146	ParameterType	int *		5613738	0					
ANR	5614147	Identifier	dstlen		5613738	1					
ANR	5614148	CFGEntryNode	ENTRY		5613738		True				
ANR	5614149	CFGExitNode	EXIT		5613738		True				
ANR	5614150	Symbol	UT32_MAX		5613738						
ANR	5614151	Symbol	adapt_bias		5613738						
ANR	5614152	Symbol	srclen		5613738						
ANR	5614153	Symbol	dst		5613738						
ANR	5614154	Symbol	di		5613738						
ANR	5614155	Symbol	INITIAL_BIAS		5613738						
ANR	5614156	Symbol	delta		5613738						
ANR	5614157	Symbol	calloc		5613738						
ANR	5614158	Symbol	* dstlen		5613738						
ANR	5614159	Symbol	actualsrc		5613738						
ANR	5614160	Symbol	* dst		5613738						
ANR	5614161	Symbol	len		5613738						
ANR	5614162	Symbol	si		5613738						
ANR	5614163	Symbol	bias		5613738						
ANR	5614164	Symbol	* actualsrc		5613738						
ANR	5614165	Symbol	dstlen		5613738						
ANR	5614166	Symbol	* si		5613738						
ANR	5614167	Symbol	b		5613738						
ANR	5614168	Symbol	NULL		5613738						
ANR	5614169	Symbol	src		5613738						
ANR	5614170	Symbol	h		5613738						
ANR	5614171	Symbol	utf8toutf32		5613738						
ANR	5614172	Symbol	encode_var_int		5613738						
ANR	5614173	Symbol	m		5613738						
ANR	5614174	Symbol	n		5613738						
ANR	5614175	Symbol	INITIAL_N		5613738						
ANR	5614176	Symbol	utf32len		5613738						
ANR	5614177	Function	r_punycode_decode	259:0:4790:6423							
ANR	5614178	FunctionDef	"r_punycode_decode (const char * src , int srclen , int * dstlen)"		5614177	0					
ANR	5614179	CompoundStatement		259:72:4862:6423	5614177	0					
ANR	5614180	IdentifierDeclStatement	const char * p ;	260:1:4865:4878	5614177	0	True				
ANR	5614181	IdentifierDecl	* p		5614177	0					
ANR	5614182	IdentifierDeclType	const char *		5614177	0					
ANR	5614183	Identifier	p		5614177	1					
ANR	5614184	IdentifierDeclStatement	"ut32 si , di ;"	261:1:4881:4892	5614177	1	True				
ANR	5614185	IdentifierDecl	si		5614177	0					
ANR	5614186	IdentifierDeclType	ut32		5614177	0					
ANR	5614187	Identifier	si		5614177	1					
ANR	5614188	IdentifierDecl	di		5614177	1					
ANR	5614189	IdentifierDeclType	ut32		5614177	0					
ANR	5614190	Identifier	di		5614177	1					
ANR	5614191	IdentifierDeclStatement	"ut32 b , n , t , i , k , w ;"	262:1:4895:4916	5614177	2	True				
ANR	5614192	IdentifierDecl	b		5614177	0					
ANR	5614193	IdentifierDeclType	ut32		5614177	0					
ANR	5614194	Identifier	b		5614177	1					
ANR	5614195	IdentifierDecl	n		5614177	1					
ANR	5614196	IdentifierDeclType	ut32		5614177	0					
ANR	5614197	Identifier	n		5614177	1					
ANR	5614198	IdentifierDecl	t		5614177	2					
ANR	5614199	IdentifierDeclType	ut32		5614177	0					
ANR	5614200	Identifier	t		5614177	1					
ANR	5614201	IdentifierDecl	i		5614177	3					
ANR	5614202	IdentifierDeclType	ut32		5614177	0					
ANR	5614203	Identifier	i		5614177	1					
ANR	5614204	IdentifierDecl	k		5614177	4					
ANR	5614205	IdentifierDeclType	ut32		5614177	0					
ANR	5614206	Identifier	k		5614177	1					
ANR	5614207	IdentifierDecl	w		5614177	5					
ANR	5614208	IdentifierDeclType	ut32		5614177	0					
ANR	5614209	Identifier	w		5614177	1					
ANR	5614210	IdentifierDeclStatement	"ut32 digit , org_i , bias ;"	263:1:4919:4942	5614177	3	True				
ANR	5614211	IdentifierDecl	digit		5614177	0					
ANR	5614212	IdentifierDeclType	ut32		5614177	0					
ANR	5614213	Identifier	digit		5614177	1					
ANR	5614214	IdentifierDecl	org_i		5614177	1					
ANR	5614215	IdentifierDeclType	ut32		5614177	0					
ANR	5614216	Identifier	org_i		5614177	1					
ANR	5614217	IdentifierDecl	bias		5614177	2					
ANR	5614218	IdentifierDeclType	ut32		5614177	0					
ANR	5614219	Identifier	bias		5614177	1					
ANR	5614220	IdentifierDeclStatement	ut32 * dst = NULL ;	264:1:4945:4961	5614177	4	True				
ANR	5614221	IdentifierDecl	* dst = NULL		5614177	0					
ANR	5614222	IdentifierDeclType	ut32 *		5614177	0					
ANR	5614223	Identifier	dst		5614177	1					
ANR	5614224	AssignmentExpression	* dst = NULL		5614177	2		=			
ANR	5614225	Identifier	NULL		5614177	0					
ANR	5614226	Identifier	NULL		5614177	1					
ANR	5614227	IdentifierDeclStatement	ut8 * finaldst = NULL ;	265:1:4964:4984	5614177	5	True				
ANR	5614228	IdentifierDecl	* finaldst = NULL		5614177	0					
ANR	5614229	IdentifierDeclType	ut8 *		5614177	0					
ANR	5614230	Identifier	finaldst		5614177	1					
ANR	5614231	AssignmentExpression	* finaldst = NULL		5614177	2		=			
ANR	5614232	Identifier	NULL		5614177	0					
ANR	5614233	Identifier	NULL		5614177	1					
ANR	5614234	ExpressionStatement	* dstlen = 0	267:1:4988:4999	5614177	6	True				
ANR	5614235	AssignmentExpression	* dstlen = 0		5614177	0		=			
ANR	5614236	UnaryOperationExpression	* dstlen		5614177	0					
ANR	5614237	UnaryOperator	*		5614177	0					
ANR	5614238	Identifier	dstlen		5614177	1					
ANR	5614239	PrimaryExpression	0		5614177	1					
ANR	5614240	IfStatement	if ( ! src || srclen < 1 )		5614177	7					
ANR	5614241	Condition	! src || srclen < 1	268:5:5006:5023	5614177	0	True				
ANR	5614242	OrExpression	! src || srclen < 1		5614177	0		||			
ANR	5614243	UnaryOperationExpression	! src		5614177	0					
ANR	5614244	UnaryOperator	!		5614177	0					
ANR	5614245	Identifier	src		5614177	1					
ANR	5614246	RelationalExpression	srclen < 1		5614177	1		<			
ANR	5614247	Identifier	srclen		5614177	0					
ANR	5614248	PrimaryExpression	1		5614177	1					
ANR	5614249	CompoundStatement		10:25:163:163	5614177	1					
ANR	5614250	ReturnStatement	return NULL ;	269:2:5030:5041	5614177	0	True				
ANR	5614251	Identifier	NULL		5614177	0					
ANR	5614252	ExpressionStatement	"dst = calloc ( 2 * srclen + 10 , 4 )"	272:1:5048:5081	5614177	8	True				
ANR	5614253	AssignmentExpression	"dst = calloc ( 2 * srclen + 10 , 4 )"		5614177	0		=			
ANR	5614254	Identifier	dst		5614177	0					
ANR	5614255	CallExpression	"calloc ( 2 * srclen + 10 , 4 )"		5614177	1					
ANR	5614256	Callee	calloc		5614177	0					
ANR	5614257	Identifier	calloc		5614177	0					
ANR	5614258	ArgumentList	2 * srclen + 10		5614177	1					
ANR	5614259	Argument	2 * srclen + 10		5614177	0					
ANR	5614260	AdditiveExpression	2 * srclen + 10		5614177	0		+			
ANR	5614261	MultiplicativeExpression	2 * srclen		5614177	0		*			
ANR	5614262	PrimaryExpression	2		5614177	0					
ANR	5614263	Identifier	srclen		5614177	1					
ANR	5614264	PrimaryExpression	10		5614177	1					
ANR	5614265	Argument	4		5614177	1					
ANR	5614266	PrimaryExpression	4		5614177	0					
ANR	5614267	IfStatement	if ( ! dst )		5614177	9					
ANR	5614268	Condition	! dst	273:5:5088:5091	5614177	0	True				
ANR	5614269	UnaryOperationExpression	! dst		5614177	0					
ANR	5614270	UnaryOperator	!		5614177	0					
ANR	5614271	Identifier	dst		5614177	1					
ANR	5614272	CompoundStatement		15:11:231:231	5614177	1					
ANR	5614273	ReturnStatement	return NULL ;	274:2:5098:5109	5614177	0	True				
ANR	5614274	Identifier	NULL		5614177	0					
ANR	5614275	ForStatement	for ( si = 0 ; si < srclen ; si ++ )		5614177	10					
ANR	5614276	ForInit	si = 0 ;	277:6:5121:5127	5614177	0	True				
ANR	5614277	AssignmentExpression	si = 0		5614177	0		=			
ANR	5614278	Identifier	si		5614177	0					
ANR	5614279	PrimaryExpression	0		5614177	1					
ANR	5614280	Condition	si < srclen	277:14:5129:5139	5614177	1	True				
ANR	5614281	RelationalExpression	si < srclen		5614177	0		<			
ANR	5614282	Identifier	si		5614177	0					
ANR	5614283	Identifier	srclen		5614177	1					
ANR	5614284	PostIncDecOperationExpression	si ++	277:27:5142:5145	5614177	2	True				
ANR	5614285	Identifier	si		5614177	0					
ANR	5614286	IncDec	++		5614177	1					
ANR	5614287	CompoundStatement		19:33:285:285	5614177	3					
ANR	5614288	IfStatement	if ( src [ si ] & 0x80 )		5614177	0					
ANR	5614289	Condition	src [ si ] & 0x80	278:6:5156:5169	5614177	0	True				
ANR	5614290	BitAndExpression	src [ si ] & 0x80		5614177	0		&			
ANR	5614291	ArrayIndexing	src [ si ]		5614177	0					
ANR	5614292	Identifier	src		5614177	0					
ANR	5614293	Identifier	si		5614177	1					
ANR	5614294	PrimaryExpression	0x80		5614177	1					
ANR	5614295	CompoundStatement		20:22:309:309	5614177	1					
ANR	5614296	ExpressionStatement	free ( dst )	279:3:5177:5187	5614177	0	True				
ANR	5614297	CallExpression	free ( dst )		5614177	0					
ANR	5614298	Callee	free		5614177	0					
ANR	5614299	Identifier	free		5614177	0					
ANR	5614300	ArgumentList	dst		5614177	1					
ANR	5614301	Argument	dst		5614177	0					
ANR	5614302	Identifier	dst		5614177	0					
ANR	5614303	ReturnStatement	return NULL ;	280:3:5192:5203	5614177	1	True				
ANR	5614304	Identifier	NULL		5614177	0					
ANR	5614305	ForStatement	for ( p = src + srclen - 1 ; p > src && * p != '-' ; p -- )		5614177	11					
ANR	5614306	ForInit	p = src + srclen - 1 ;	284:6:5244:5264	5614177	0	True				
ANR	5614307	AssignmentExpression	p = src + srclen - 1		5614177	0		=			
ANR	5614308	Identifier	p		5614177	0					
ANR	5614309	AdditiveExpression	src + srclen - 1		5614177	1		+			
ANR	5614310	Identifier	src		5614177	0					
ANR	5614311	AdditiveExpression	srclen - 1		5614177	1		-			
ANR	5614312	Identifier	srclen		5614177	0					
ANR	5614313	PrimaryExpression	1		5614177	1					
ANR	5614314	Condition	p > src && * p != '-'	284:28:5266:5285	5614177	1	True				
ANR	5614315	AndExpression	p > src && * p != '-'		5614177	0		&&			
ANR	5614316	RelationalExpression	p > src		5614177	0		>			
ANR	5614317	Identifier	p		5614177	0					
ANR	5614318	Identifier	src		5614177	1					
ANR	5614319	EqualityExpression	* p != '-'		5614177	1		!=			
ANR	5614320	UnaryOperationExpression	* p		5614177	0					
ANR	5614321	UnaryOperator	*		5614177	0					
ANR	5614322	Identifier	p		5614177	1					
ANR	5614323	PrimaryExpression	'-'		5614177	1					
ANR	5614324	PostIncDecOperationExpression	p --	284:50:5288:5290	5614177	2	True				
ANR	5614325	Identifier	p		5614177	0					
ANR	5614326	IncDec	--		5614177	1					
ANR	5614327	CompoundStatement		26:55:430:430	5614177	3					
ANR	5614328	ExpressionStatement		285:2:5297:5297	5614177	0	True				
ANR	5614329	ExpressionStatement	b = p - src	287:1:5303:5314	5614177	12	True				
ANR	5614330	AssignmentExpression	b = p - src		5614177	0		=			
ANR	5614331	Identifier	b		5614177	0					
ANR	5614332	AdditiveExpression	p - src		5614177	1		-			
ANR	5614333	Identifier	p		5614177	0					
ANR	5614334	Identifier	src		5614177	1					
ANR	5614335	ExpressionStatement	di = b	289:1:5318:5324	5614177	13	True				
ANR	5614336	AssignmentExpression	di = b		5614177	0		=			
ANR	5614337	Identifier	di		5614177	0					
ANR	5614338	Identifier	b		5614177	1					
ANR	5614339	ForStatement	for ( i = 0 ; i < di ; i ++ )		5614177	14					
ANR	5614340	ForInit	i = 0 ;	290:6:5332:5337	5614177	0	True				
ANR	5614341	AssignmentExpression	i = 0		5614177	0		=			
ANR	5614342	Identifier	i		5614177	0					
ANR	5614343	PrimaryExpression	0		5614177	1					
ANR	5614344	Condition	i < di	290:13:5339:5344	5614177	1	True				
ANR	5614345	RelationalExpression	i < di		5614177	0		<			
ANR	5614346	Identifier	i		5614177	0					
ANR	5614347	Identifier	di		5614177	1					
ANR	5614348	PostIncDecOperationExpression	i ++	290:21:5347:5349	5614177	2	True				
ANR	5614349	Identifier	i		5614177	0					
ANR	5614350	IncDec	++		5614177	1					
ANR	5614351	CompoundStatement		32:26:489:489	5614177	3					
ANR	5614352	ExpressionStatement	dst [ i ] = src [ i ]	291:2:5356:5371	5614177	0	True				
ANR	5614353	AssignmentExpression	dst [ i ] = src [ i ]		5614177	0		=			
ANR	5614354	ArrayIndexing	dst [ i ]		5614177	0					
ANR	5614355	Identifier	dst		5614177	0					
ANR	5614356	Identifier	i		5614177	1					
ANR	5614357	ArrayIndexing	src [ i ]		5614177	1					
ANR	5614358	Identifier	src		5614177	0					
ANR	5614359	Identifier	i		5614177	1					
ANR	5614360	ExpressionStatement	i = 0	294:1:5378:5383	5614177	15	True				
ANR	5614361	AssignmentExpression	i = 0		5614177	0		=			
ANR	5614362	Identifier	i		5614177	0					
ANR	5614363	PrimaryExpression	0		5614177	1					
ANR	5614364	ExpressionStatement	n = INITIAL_N	295:1:5386:5399	5614177	16	True				
ANR	5614365	AssignmentExpression	n = INITIAL_N		5614177	0		=			
ANR	5614366	Identifier	n		5614177	0					
ANR	5614367	Identifier	INITIAL_N		5614177	1					
ANR	5614368	ExpressionStatement	bias = INITIAL_BIAS	296:1:5402:5421	5614177	17	True				
ANR	5614369	AssignmentExpression	bias = INITIAL_BIAS		5614177	0		=			
ANR	5614370	Identifier	bias		5614177	0					
ANR	5614371	Identifier	INITIAL_BIAS		5614177	1					
ANR	5614372	ForStatement	for ( si = b + ( b > 0 ) ; si < srclen ; di ++ )		5614177	18					
ANR	5614373	ForInit	si = b + ( b > 0 ) ;	298:6:5430:5446	5614177	0	True				
ANR	5614374	AssignmentExpression	si = b + ( b > 0 )		5614177	0		=			
ANR	5614375	Identifier	si		5614177	0					
ANR	5614376	AdditiveExpression	b + ( b > 0 )		5614177	1		+			
ANR	5614377	Identifier	b		5614177	0					
ANR	5614378	RelationalExpression	b > 0		5614177	1		>			
ANR	5614379	Identifier	b		5614177	0					
ANR	5614380	PrimaryExpression	0		5614177	1					
ANR	5614381	Condition	si < srclen	298:24:5448:5458	5614177	1	True				
ANR	5614382	RelationalExpression	si < srclen		5614177	0		<			
ANR	5614383	Identifier	si		5614177	0					
ANR	5614384	Identifier	srclen		5614177	1					
ANR	5614385	PostIncDecOperationExpression	di ++	298:37:5461:5464	5614177	2	True				
ANR	5614386	Identifier	di		5614177	0					
ANR	5614387	IncDec	++		5614177	1					
ANR	5614388	CompoundStatement		40:43:604:604	5614177	3					
ANR	5614389	ExpressionStatement	org_i = i	299:2:5471:5480	5614177	0	True				
ANR	5614390	AssignmentExpression	org_i = i		5614177	0		=			
ANR	5614391	Identifier	org_i		5614177	0					
ANR	5614392	Identifier	i		5614177	1					
ANR	5614393	ForStatement	"for ( w = 1 , k = BASE ; ; k += BASE )"		5614177	1					
ANR	5614394	ForInit	"w = 1 , k = BASE ;"	301:7:5490:5505	5614177	0	True				
ANR	5614395	Expression	"w = 1 , k = BASE"		5614177	0					
ANR	5614396	AssignmentExpression	w = 1		5614177	0		=			
ANR	5614397	Identifier	w		5614177	0					
ANR	5614398	PrimaryExpression	1		5614177	1					
ANR	5614399	AssignmentExpression	k = BASE		5614177	1		=			
ANR	5614400	Identifier	k		5614177	0					
ANR	5614401	Identifier	BASE		5614177	1					
ANR	5614402	AssignmentExpression	k += BASE	301:25:5508:5516	5614177	1	True	+=			
ANR	5614403	Identifier	k		5614177	0					
ANR	5614404	Identifier	BASE		5614177	1					
ANR	5614405	CompoundStatement		43:36:656:656	5614177	2					
ANR	5614406	ExpressionStatement	digit = decode_digit ( src [ si ++ ] )	302:3:5524:5556	5614177	0	True				
ANR	5614407	AssignmentExpression	digit = decode_digit ( src [ si ++ ] )		5614177	0		=			
ANR	5614408	Identifier	digit		5614177	0					
ANR	5614409	CallExpression	decode_digit ( src [ si ++ ] )		5614177	1					
ANR	5614410	Callee	decode_digit		5614177	0					
ANR	5614411	Identifier	decode_digit		5614177	0					
ANR	5614412	ArgumentList	src [ si ++ ]		5614177	1					
ANR	5614413	Argument	src [ si ++ ]		5614177	0					
ANR	5614414	ArrayIndexing	src [ si ++ ]		5614177	0					
ANR	5614415	Identifier	src		5614177	0					
ANR	5614416	PostIncDecOperationExpression	si ++		5614177	1					
ANR	5614417	Identifier	si		5614177	0					
ANR	5614418	IncDec	++		5614177	1					
ANR	5614419	IfStatement	if ( digit == UT32_MAX )		5614177	1					
ANR	5614420	Condition	digit == UT32_MAX	304:7:5566:5582	5614177	0	True				
ANR	5614421	EqualityExpression	digit == UT32_MAX		5614177	0		==			
ANR	5614422	Identifier	digit		5614177	0					
ANR	5614423	Identifier	UT32_MAX		5614177	1					
ANR	5614424	CompoundStatement		46:26:722:722	5614177	1					
ANR	5614425	ExpressionStatement	free ( dst )	305:4:5591:5601	5614177	0	True				
ANR	5614426	CallExpression	free ( dst )		5614177	0					
ANR	5614427	Callee	free		5614177	0					
ANR	5614428	Identifier	free		5614177	0					
ANR	5614429	ArgumentList	dst		5614177	1					
ANR	5614430	Argument	dst		5614177	0					
ANR	5614431	Identifier	dst		5614177	0					
ANR	5614432	ReturnStatement	return NULL ;	306:4:5607:5618	5614177	1	True				
ANR	5614433	Identifier	NULL		5614177	0					
ANR	5614434	IfStatement	if ( digit > ( UT32_MAX - i ) / w )		5614177	2					
ANR	5614435	Condition	digit > ( UT32_MAX - i ) / w	309:7:5633:5658	5614177	0	True				
ANR	5614436	RelationalExpression	digit > ( UT32_MAX - i ) / w		5614177	0		>			
ANR	5614437	Identifier	digit		5614177	0					
ANR	5614438	MultiplicativeExpression	( UT32_MAX - i ) / w		5614177	1		/			
ANR	5614439	AdditiveExpression	UT32_MAX - i		5614177	0		-			
ANR	5614440	Identifier	UT32_MAX		5614177	0					
ANR	5614441	Identifier	i		5614177	1					
ANR	5614442	Identifier	w		5614177	1					
ANR	5614443	CompoundStatement		51:35:798:798	5614177	1					
ANR	5614444	ExpressionStatement	free ( dst )	310:4:5667:5677	5614177	0	True				
ANR	5614445	CallExpression	free ( dst )		5614177	0					
ANR	5614446	Callee	free		5614177	0					
ANR	5614447	Identifier	free		5614177	0					
ANR	5614448	ArgumentList	dst		5614177	1					
ANR	5614449	Argument	dst		5614177	0					
ANR	5614450	Identifier	dst		5614177	0					
ANR	5614451	ReturnStatement	return NULL ;	311:4:5683:5694	5614177	1	True				
ANR	5614452	Identifier	NULL		5614177	0					
ANR	5614453	ExpressionStatement	i += digit * w	314:3:5705:5719	5614177	3	True				
ANR	5614454	AssignmentExpression	i += digit * w		5614177	0		+=			
ANR	5614455	Identifier	i		5614177	0					
ANR	5614456	MultiplicativeExpression	digit * w		5614177	1		*			
ANR	5614457	Identifier	digit		5614177	0					
ANR	5614458	Identifier	w		5614177	1					
ANR	5614459	IfStatement	if ( k <= bias )		5614177	4					
ANR	5614460	Condition	k <= bias	316:7:5729:5737	5614177	0	True				
ANR	5614461	RelationalExpression	k <= bias		5614177	0		<=			
ANR	5614462	Identifier	k		5614177	0					
ANR	5614463	Identifier	bias		5614177	1					
ANR	5614464	CompoundStatement		58:18:877:877	5614177	1					
ANR	5614465	ExpressionStatement	t = TMIN	317:4:5746:5754	5614177	0	True				
ANR	5614466	AssignmentExpression	t = TMIN		5614177	0		=			
ANR	5614467	Identifier	t		5614177	0					
ANR	5614468	Identifier	TMIN		5614177	1					
ANR	5614469	ElseStatement	else		5614177	0					
ANR	5614470	IfStatement	if ( k >= bias + TMAX )		5614177	0					
ANR	5614471	Condition	k >= bias + TMAX	318:14:5770:5785	5614177	0	True				
ANR	5614472	RelationalExpression	k >= bias + TMAX		5614177	0		>=			
ANR	5614473	Identifier	k		5614177	0					
ANR	5614474	AdditiveExpression	bias + TMAX		5614177	1		+			
ANR	5614475	Identifier	bias		5614177	0					
ANR	5614476	Identifier	TMAX		5614177	1					
ANR	5614477	CompoundStatement		60:32:925:925	5614177	1					
ANR	5614478	ExpressionStatement	t = TMAX	319:4:5794:5802	5614177	0	True				
ANR	5614479	AssignmentExpression	t = TMAX		5614177	0		=			
ANR	5614480	Identifier	t		5614177	0					
ANR	5614481	Identifier	TMAX		5614177	1					
ANR	5614482	ElseStatement	else		5614177	0					
ANR	5614483	CompoundStatement		62:10:951:951	5614177	0					
ANR	5614484	ExpressionStatement	t = k - bias	321:4:5820:5832	5614177	0	True				
ANR	5614485	AssignmentExpression	t = k - bias		5614177	0		=			
ANR	5614486	Identifier	t		5614177	0					
ANR	5614487	AdditiveExpression	k - bias		5614177	1		-			
ANR	5614488	Identifier	k		5614177	0					
ANR	5614489	Identifier	bias		5614177	1					
ANR	5614490	IfStatement	if ( digit < t )		5614177	5					
ANR	5614491	Condition	digit < t	324:7:5847:5855	5614177	0	True				
ANR	5614492	RelationalExpression	digit < t		5614177	0		<			
ANR	5614493	Identifier	digit		5614177	0					
ANR	5614494	Identifier	t		5614177	1					
ANR	5614495	CompoundStatement		66:18:995:995	5614177	1					
ANR	5614496	BreakStatement	break ;	325:4:5864:5869	5614177	0	True				
ANR	5614497	IfStatement	if ( w > UT32_MAX / ( BASE - t ) )		5614177	6					
ANR	5614498	Condition	w > UT32_MAX / ( BASE - t )	328:7:5884:5908	5614177	0	True				
ANR	5614499	RelationalExpression	w > UT32_MAX / ( BASE - t )		5614177	0		>			
ANR	5614500	Identifier	w		5614177	0					
ANR	5614501	MultiplicativeExpression	UT32_MAX / ( BASE - t )		5614177	1		/			
ANR	5614502	Identifier	UT32_MAX		5614177	0					
ANR	5614503	AdditiveExpression	BASE - t		5614177	1		-			
ANR	5614504	Identifier	BASE		5614177	0					
ANR	5614505	Identifier	t		5614177	1					
ANR	5614506	CompoundStatement		70:34:1048:1048	5614177	1					
ANR	5614507	ExpressionStatement	free ( dst )	329:4:5917:5927	5614177	0	True				
ANR	5614508	CallExpression	free ( dst )		5614177	0					
ANR	5614509	Callee	free		5614177	0					
ANR	5614510	Identifier	free		5614177	0					
ANR	5614511	ArgumentList	dst		5614177	1					
ANR	5614512	Argument	dst		5614177	0					
ANR	5614513	Identifier	dst		5614177	0					
ANR	5614514	ReturnStatement	return NULL ;	330:4:5933:5944	5614177	1	True				
ANR	5614515	Identifier	NULL		5614177	0					
ANR	5614516	ExpressionStatement	w *= BASE - t	333:3:5955:5968	5614177	7	True				
ANR	5614517	AssignmentExpression	w *= BASE - t		5614177	0		*=			
ANR	5614518	Identifier	w		5614177	0					
ANR	5614519	AdditiveExpression	BASE - t		5614177	1		-			
ANR	5614520	Identifier	BASE		5614177	0					
ANR	5614521	Identifier	t		5614177	1					
ANR	5614522	ExpressionStatement	"bias = adapt_bias ( i - org_i , di + 1 , org_i == 0 )"	336:2:5977:6026	5614177	2	True				
ANR	5614523	AssignmentExpression	"bias = adapt_bias ( i - org_i , di + 1 , org_i == 0 )"		5614177	0		=			
ANR	5614524	Identifier	bias		5614177	0					
ANR	5614525	CallExpression	"adapt_bias ( i - org_i , di + 1 , org_i == 0 )"		5614177	1					
ANR	5614526	Callee	adapt_bias		5614177	0					
ANR	5614527	Identifier	adapt_bias		5614177	0					
ANR	5614528	ArgumentList	i - org_i		5614177	1					
ANR	5614529	Argument	i - org_i		5614177	0					
ANR	5614530	AdditiveExpression	i - org_i		5614177	0		-			
ANR	5614531	Identifier	i		5614177	0					
ANR	5614532	Identifier	org_i		5614177	1					
ANR	5614533	Argument	di + 1		5614177	1					
ANR	5614534	AdditiveExpression	di + 1		5614177	0		+			
ANR	5614535	Identifier	di		5614177	0					
ANR	5614536	PrimaryExpression	1		5614177	1					
ANR	5614537	Argument	org_i == 0		5614177	2					
ANR	5614538	EqualityExpression	org_i == 0		5614177	0		==			
ANR	5614539	Identifier	org_i		5614177	0					
ANR	5614540	PrimaryExpression	0		5614177	1					
ANR	5614541	IfStatement	if ( i / ( di + 1 ) > UT32_MAX - n )		5614177	3					
ANR	5614542	Condition	i / ( di + 1 ) > UT32_MAX - n	338:6:6035:6061	5614177	0	True				
ANR	5614543	RelationalExpression	i / ( di + 1 ) > UT32_MAX - n		5614177	0		>			
ANR	5614544	MultiplicativeExpression	i / ( di + 1 )		5614177	0		/			
ANR	5614545	Identifier	i		5614177	0					
ANR	5614546	AdditiveExpression	di + 1		5614177	1		+			
ANR	5614547	Identifier	di		5614177	0					
ANR	5614548	PrimaryExpression	1		5614177	1					
ANR	5614549	AdditiveExpression	UT32_MAX - n		5614177	1		-			
ANR	5614550	Identifier	UT32_MAX		5614177	0					
ANR	5614551	Identifier	n		5614177	1					
ANR	5614552	CompoundStatement		80:35:1201:1201	5614177	1					
ANR	5614553	ExpressionStatement	free ( dst )	339:3:6069:6079	5614177	0	True				
ANR	5614554	CallExpression	free ( dst )		5614177	0					
ANR	5614555	Callee	free		5614177	0					
ANR	5614556	Identifier	free		5614177	0					
ANR	5614557	ArgumentList	dst		5614177	1					
ANR	5614558	Argument	dst		5614177	0					
ANR	5614559	Identifier	dst		5614177	0					
ANR	5614560	ReturnStatement	return NULL ;	340:3:6084:6095	5614177	1	True				
ANR	5614561	Identifier	NULL		5614177	0					
ANR	5614562	ExpressionStatement	n += i / ( di + 1 )	343:2:6104:6121	5614177	4	True				
ANR	5614563	AssignmentExpression	n += i / ( di + 1 )		5614177	0		+=			
ANR	5614564	Identifier	n		5614177	0					
ANR	5614565	MultiplicativeExpression	i / ( di + 1 )		5614177	1		/			
ANR	5614566	Identifier	i		5614177	0					
ANR	5614567	AdditiveExpression	di + 1		5614177	1		+			
ANR	5614568	Identifier	di		5614177	0					
ANR	5614569	PrimaryExpression	1		5614177	1					
ANR	5614570	ExpressionStatement	i %= ( di + 1 )	344:2:6125:6138	5614177	5	True				
ANR	5614571	AssignmentExpression	i %= ( di + 1 )		5614177	0		%=			
ANR	5614572	Identifier	i		5614177	0					
ANR	5614573	AdditiveExpression	di + 1		5614177	1		+			
ANR	5614574	Identifier	di		5614177	0					
ANR	5614575	PrimaryExpression	1		5614177	1					
ANR	5614576	ExpressionStatement	"memmove ( dst + i + 1 , dst + i , ( di - i ) * sizeof ( ut32 ) )"	346:2:6143:6198	5614177	6	True				
ANR	5614577	CallExpression	"memmove ( dst + i + 1 , dst + i , ( di - i ) * sizeof ( ut32 ) )"		5614177	0					
ANR	5614578	Callee	memmove		5614177	0					
ANR	5614579	Identifier	memmove		5614177	0					
ANR	5614580	ArgumentList	dst + i + 1		5614177	1					
ANR	5614581	Argument	dst + i + 1		5614177	0					
ANR	5614582	AdditiveExpression	dst + i + 1		5614177	0		+			
ANR	5614583	Identifier	dst		5614177	0					
ANR	5614584	AdditiveExpression	i + 1		5614177	1		+			
ANR	5614585	Identifier	i		5614177	0					
ANR	5614586	PrimaryExpression	1		5614177	1					
ANR	5614587	Argument	dst + i		5614177	1					
ANR	5614588	AdditiveExpression	dst + i		5614177	0		+			
ANR	5614589	Identifier	dst		5614177	0					
ANR	5614590	Identifier	i		5614177	1					
ANR	5614591	Argument	( di - i ) * sizeof ( ut32 )		5614177	2					
ANR	5614592	MultiplicativeExpression	( di - i ) * sizeof ( ut32 )		5614177	0		*			
ANR	5614593	AdditiveExpression	di - i		5614177	0		-			
ANR	5614594	Identifier	di		5614177	0					
ANR	5614595	Identifier	i		5614177	1					
ANR	5614596	SizeofExpression	sizeof ( ut32 )		5614177	1					
ANR	5614597	Sizeof	sizeof		5614177	0					
ANR	5614598	SizeofOperand	ut32		5614177	1					
ANR	5614599	ExpressionStatement	dst [ i ++ ] = n	347:2:6202:6214	5614177	7	True				
ANR	5614600	AssignmentExpression	dst [ i ++ ] = n		5614177	0		=			
ANR	5614601	ArrayIndexing	dst [ i ++ ]		5614177	0					
ANR	5614602	Identifier	dst		5614177	0					
ANR	5614603	PostIncDecOperationExpression	i ++		5614177	1					
ANR	5614604	Identifier	i		5614177	0					
ANR	5614605	IncDec	++		5614177	1					
ANR	5614606	Identifier	n		5614177	1					
ANR	5614607	ExpressionStatement	finaldst = utf32toutf8 ( dst )	350:1:6221:6249	5614177	19	True				
ANR	5614608	AssignmentExpression	finaldst = utf32toutf8 ( dst )		5614177	0		=			
ANR	5614609	Identifier	finaldst		5614177	0					
ANR	5614610	CallExpression	utf32toutf8 ( dst )		5614177	1					
ANR	5614611	Callee	utf32toutf8		5614177	0					
ANR	5614612	Identifier	utf32toutf8		5614177	0					
ANR	5614613	ArgumentList	dst		5614177	1					
ANR	5614614	Argument	dst		5614177	0					
ANR	5614615	Identifier	dst		5614177	0					
ANR	5614616	ExpressionStatement	free ( dst )	351:1:6252:6262	5614177	20	True				
ANR	5614617	CallExpression	free ( dst )		5614177	0					
ANR	5614618	Callee	free		5614177	0					
ANR	5614619	Identifier	free		5614177	0					
ANR	5614620	ArgumentList	dst		5614177	1					
ANR	5614621	Argument	dst		5614177	0					
ANR	5614622	Identifier	dst		5614177	0					
ANR	5614623	IfStatement	if ( finaldst )		5614177	21					
ANR	5614624	Condition	finaldst	352:5:6269:6276	5614177	0	True				
ANR	5614625	Identifier	finaldst		5614177	0					
ANR	5614626	CompoundStatement		94:15:1416:1416	5614177	1					
ANR	5614627	ExpressionStatement	* dstlen = strlen ( ( const char * ) finaldst )	353:2:6283:6325	5614177	0	True				
ANR	5614628	AssignmentExpression	* dstlen = strlen ( ( const char * ) finaldst )		5614177	0		=			
ANR	5614629	UnaryOperationExpression	* dstlen		5614177	0					
ANR	5614630	UnaryOperator	*		5614177	0					
ANR	5614631	Identifier	dstlen		5614177	1					
ANR	5614632	CallExpression	strlen ( ( const char * ) finaldst )		5614177	1					
ANR	5614633	Callee	strlen		5614177	0					
ANR	5614634	Identifier	strlen		5614177	0					
ANR	5614635	ArgumentList	( const char * ) finaldst		5614177	1					
ANR	5614636	Argument	( const char * ) finaldst		5614177	0					
ANR	5614637	CastExpression	( const char * ) finaldst		5614177	0					
ANR	5614638	CastTarget	const char *		5614177	0					
ANR	5614639	Identifier	finaldst		5614177	1					
ANR	5614640	ElseStatement	else		5614177	0					
ANR	5614641	CompoundStatement		96:8:1472:1472	5614177	0					
ANR	5614642	ExpressionStatement	"eprintf ( ""ERROR: finaldst is null\\n"" )"	355:2:6339:6376	5614177	0	True				
ANR	5614643	CallExpression	"eprintf ( ""ERROR: finaldst is null\\n"" )"		5614177	0					
ANR	5614644	Callee	eprintf		5614177	0					
ANR	5614645	Identifier	eprintf		5614177	0					
ANR	5614646	ArgumentList	"""ERROR: finaldst is null\\n"""		5614177	1					
ANR	5614647	Argument	"""ERROR: finaldst is null\\n"""		5614177	0					
ANR	5614648	PrimaryExpression	"""ERROR: finaldst is null\\n"""		5614177	0					
ANR	5614649	ReturnStatement	return NULL ;	356:2:6380:6391	5614177	1	True				
ANR	5614650	Identifier	NULL		5614177	0					
ANR	5614651	ReturnStatement	return ( char * ) finaldst ;	358:1:6397:6421	5614177	22	True				
ANR	5614652	CastExpression	( char * ) finaldst		5614177	0					
ANR	5614653	CastTarget	char *		5614177	0					
ANR	5614654	Identifier	finaldst		5614177	1					
ANR	5614655	ReturnType	R_API char *		5614177	1					
ANR	5614656	Identifier	r_punycode_decode		5614177	2					
ANR	5614657	ParameterList	"const char * src , int srclen , int * dstlen"		5614177	3					
ANR	5614658	Parameter	const char * src	259:30:4820:4834	5614177	0	True				
ANR	5614659	ParameterType	const char *		5614177	0					
ANR	5614660	Identifier	src		5614177	1					
ANR	5614661	Parameter	int srclen	259:47:4837:4846	5614177	1	True				
ANR	5614662	ParameterType	int		5614177	0					
ANR	5614663	Identifier	srclen		5614177	1					
ANR	5614664	Parameter	int * dstlen	259:59:4849:4859	5614177	2	True				
ANR	5614665	ParameterType	int *		5614177	0					
ANR	5614666	Identifier	dstlen		5614177	1					
ANR	5614667	CFGEntryNode	ENTRY		5614177		True				
ANR	5614668	CFGExitNode	EXIT		5614177		True				
ANR	5614669	InfiniteForNode	true		5614177		True				
ANR	5614670	Symbol	UT32_MAX		5614177						
ANR	5614671	Symbol	adapt_bias		5614177						
ANR	5614672	Symbol	srclen		5614177						
ANR	5614673	Symbol	dst		5614177						
ANR	5614674	Symbol	di		5614177						
ANR	5614675	Symbol	INITIAL_BIAS		5614177						
ANR	5614676	Symbol	calloc		5614177						
ANR	5614677	Symbol	* dstlen		5614177						
ANR	5614678	Symbol	* src		5614177						
ANR	5614679	Symbol	BASE		5614177						
ANR	5614680	Symbol	* dst		5614177						
ANR	5614681	Symbol	strlen		5614177						
ANR	5614682	Symbol	si		5614177						
ANR	5614683	Symbol	bias		5614177						
ANR	5614684	Symbol	decode_digit		5614177						
ANR	5614685	Symbol	TMAX		5614177						
ANR	5614686	Symbol	utf32toutf8		5614177						
ANR	5614687	Symbol	dstlen		5614177						
ANR	5614688	Symbol	org_i		5614177						
ANR	5614689	Symbol	digit		5614177						
ANR	5614690	Symbol	* si		5614177						
ANR	5614691	Symbol	b		5614177						
ANR	5614692	Symbol	NULL		5614177						
ANR	5614693	Symbol	src		5614177						
ANR	5614694	Symbol	i		5614177						
ANR	5614695	Symbol	k		5614177						
ANR	5614696	Symbol	finaldst		5614177						
ANR	5614697	Symbol	n		5614177						
ANR	5614698	Symbol	p		5614177						
ANR	5614699	Symbol	* i		5614177						
ANR	5614700	Symbol	INITIAL_N		5614177						
ANR	5614701	Symbol	t		5614177						
ANR	5614702	Symbol	w		5614177						
ANR	5614703	Symbol	TMIN		5614177						
ANR	5614704	Symbol	* p		5614177						
