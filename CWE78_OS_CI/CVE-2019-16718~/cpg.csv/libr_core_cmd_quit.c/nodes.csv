command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4321651	File	data/converged/CVE-2019-16718~_radare2/libr_core_cmd_quit.c								
ANR	4321652	DeclStmt									
ANR	4321653	Decl							const char	const char * [ ]	help_msg_q
ANR	4321654	Function	cmd_quit_init	18:0:492:567							
ANR	4321655	FunctionDef	cmd_quit_init (RCore * core)		4321654	0					
ANR	4321656	CompoundStatement		18:39:531:567	4321654	0					
ANR	4321657	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , q )"	19:1:534:565	4321654	0	True				
ANR	4321658	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , q )"		4321654	0					
ANR	4321659	Callee	DEFINE_CMD_DESCRIPTOR		4321654	0					
ANR	4321660	Identifier	DEFINE_CMD_DESCRIPTOR		4321654	0					
ANR	4321661	ArgumentList	core		4321654	1					
ANR	4321662	Argument	core		4321654	0					
ANR	4321663	Identifier	core		4321654	0					
ANR	4321664	Argument	q		4321654	1					
ANR	4321665	Identifier	q		4321654	0					
ANR	4321666	ReturnType	static void		4321654	1					
ANR	4321667	Identifier	cmd_quit_init		4321654	2					
ANR	4321668	ParameterList	RCore * core		4321654	3					
ANR	4321669	Parameter	RCore * core	18:26:518:528	4321654	0	True				
ANR	4321670	ParameterType	RCore *		4321654	0					
ANR	4321671	Identifier	core		4321654	1					
ANR	4321672	CFGEntryNode	ENTRY		4321654		True				
ANR	4321673	CFGExitNode	EXIT		4321654		True				
ANR	4321674	Symbol	core		4321654						
ANR	4321675	Symbol	q		4321654						
ANR	4321676	Function	cmd_Quit	22:0:570:983							
ANR	4321677	FunctionDef	"cmd_Quit (void * data , const char * input)"		4321676	0					
ANR	4321678	CompoundStatement		22:51:621:983	4321676	0					
ANR	4321679	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	23:1:624:651	4321676	0	True				
ANR	4321680	IdentifierDecl	* core = ( RCore * ) data		4321676	0					
ANR	4321681	IdentifierDeclType	RCore *		4321676	0					
ANR	4321682	Identifier	core		4321676	1					
ANR	4321683	AssignmentExpression	* core = ( RCore * ) data		4321676	2		=			
ANR	4321684	Identifier	core		4321676	0					
ANR	4321685	CastExpression	( RCore * ) data		4321676	1					
ANR	4321686	CastTarget	RCore *		4321676	0					
ANR	4321687	Identifier	data		4321676	1					
ANR	4321688	IfStatement	if ( input [ 0 ] == '!' )		4321676	1					
ANR	4321689	Condition	input [ 0 ] == '!'	24:5:658:672	4321676	0	True				
ANR	4321690	EqualityExpression	input [ 0 ] == '!'		4321676	0		==			
ANR	4321691	ArrayIndexing	input [ 0 ]		4321676	0					
ANR	4321692	Identifier	input		4321676	0					
ANR	4321693	PrimaryExpression	0		4321676	1					
ANR	4321694	PrimaryExpression	'!'		4321676	1					
ANR	4321695	CompoundStatement		3:22:53:53	4321676	1					
ANR	4321696	IfStatement	if ( input [ 1 ] == '!' )		4321676	0					
ANR	4321697	Condition	input [ 1 ] == '!'	25:6:683:697	4321676	0	True				
ANR	4321698	EqualityExpression	input [ 1 ] == '!'		4321676	0		==			
ANR	4321699	ArrayIndexing	input [ 1 ]		4321676	0					
ANR	4321700	Identifier	input		4321676	0					
ANR	4321701	PrimaryExpression	1		4321676	1					
ANR	4321702	PrimaryExpression	'!'		4321676	1					
ANR	4321703	CompoundStatement		4:23:78:78	4321676	1					
ANR	4321704	IfStatement	if ( ! r_sandbox_enable ( false ) )		4321676	0					
ANR	4321705	Condition	! r_sandbox_enable ( false )	26:7:709:733	4321676	0	True				
ANR	4321706	UnaryOperationExpression	! r_sandbox_enable ( false )		4321676	0					
ANR	4321707	UnaryOperator	!		4321676	0					
ANR	4321708	CallExpression	r_sandbox_enable ( false )		4321676	1					
ANR	4321709	Callee	r_sandbox_enable		4321676	0					
ANR	4321710	Identifier	r_sandbox_enable		4321676	0					
ANR	4321711	ArgumentList	false		4321676	1					
ANR	4321712	Argument	false		4321676	0					
ANR	4321713	Identifier	false		4321676	0					
ANR	4321714	CompoundStatement		5:34:114:114	4321676	1					
ANR	4321715	ExpressionStatement	exit ( 0 )	27:4:742:750	4321676	0	True				
ANR	4321716	CallExpression	exit ( 0 )		4321676	0					
ANR	4321717	Callee	exit		4321676	0					
ANR	4321718	Identifier	exit		4321676	0					
ANR	4321719	ArgumentList	0		4321676	1					
ANR	4321720	Argument	0		4321676	0					
ANR	4321721	PrimaryExpression	0		4321676	0					
ANR	4321722	ReturnStatement	return - 2 ;	29:3:760:769	4321676	1	True				
ANR	4321723	UnaryOperationExpression	- 2		4321676	0					
ANR	4321724	UnaryOperator	-		4321676	0					
ANR	4321725	PrimaryExpression	2		4321676	1					
ANR	4321726	ExpressionStatement	"r_config_set ( core -> config , ""scr.histsave"" , ""false"" )"	31:2:777:829	4321676	1	True				
ANR	4321727	CallExpression	"r_config_set ( core -> config , ""scr.histsave"" , ""false"" )"		4321676	0					
ANR	4321728	Callee	r_config_set		4321676	0					
ANR	4321729	Identifier	r_config_set		4321676	0					
ANR	4321730	ArgumentList	core -> config		4321676	1					
ANR	4321731	Argument	core -> config		4321676	0					
ANR	4321732	PtrMemberAccess	core -> config		4321676	0					
ANR	4321733	Identifier	core		4321676	0					
ANR	4321734	Identifier	config		4321676	1					
ANR	4321735	Argument	"""scr.histsave"""		4321676	1					
ANR	4321736	PrimaryExpression	"""scr.histsave"""		4321676	0					
ANR	4321737	Argument	"""false"""		4321676	2					
ANR	4321738	PrimaryExpression	"""false"""		4321676	0					
ANR	4321739	IfStatement	if ( IS_DIGIT ( input [ 0 ] ) || input [ 0 ] == ' ' )		4321676	2					
ANR	4321740	Condition	IS_DIGIT ( input [ 0 ] ) || input [ 0 ] == ' '	33:5:839:876	4321676	0	True				
ANR	4321741	OrExpression	IS_DIGIT ( input [ 0 ] ) || input [ 0 ] == ' '		4321676	0		||			
ANR	4321742	CallExpression	IS_DIGIT ( input [ 0 ] )		4321676	0					
ANR	4321743	Callee	IS_DIGIT		4321676	0					
ANR	4321744	Identifier	IS_DIGIT		4321676	0					
ANR	4321745	ArgumentList	input [ 0 ]		4321676	1					
ANR	4321746	Argument	input [ 0 ]		4321676	0					
ANR	4321747	ArrayIndexing	input [ 0 ]		4321676	0					
ANR	4321748	Identifier	input		4321676	0					
ANR	4321749	PrimaryExpression	0		4321676	1					
ANR	4321750	EqualityExpression	input [ 0 ] == ' '		4321676	1		==			
ANR	4321751	ArrayIndexing	input [ 0 ]		4321676	0					
ANR	4321752	Identifier	input		4321676	0					
ANR	4321753	PrimaryExpression	0		4321676	1					
ANR	4321754	PrimaryExpression	' '		4321676	1					
ANR	4321755	CompoundStatement		12:45:257:257	4321676	1					
ANR	4321756	ExpressionStatement	"core -> num -> value = r_num_math ( core -> num , input )"	34:2:883:931	4321676	0	True				
ANR	4321757	AssignmentExpression	"core -> num -> value = r_num_math ( core -> num , input )"		4321676	0		=			
ANR	4321758	PtrMemberAccess	core -> num -> value		4321676	0					
ANR	4321759	PtrMemberAccess	core -> num		4321676	0					
ANR	4321760	Identifier	core		4321676	0					
ANR	4321761	Identifier	num		4321676	1					
ANR	4321762	Identifier	value		4321676	1					
ANR	4321763	CallExpression	"r_num_math ( core -> num , input )"		4321676	1					
ANR	4321764	Callee	r_num_math		4321676	0					
ANR	4321765	Identifier	r_num_math		4321676	0					
ANR	4321766	ArgumentList	core -> num		4321676	1					
ANR	4321767	Argument	core -> num		4321676	0					
ANR	4321768	PtrMemberAccess	core -> num		4321676	0					
ANR	4321769	Identifier	core		4321676	0					
ANR	4321770	Identifier	num		4321676	1					
ANR	4321771	Argument	input		4321676	1					
ANR	4321772	Identifier	input		4321676	0					
ANR	4321773	ElseStatement	else		4321676	0					
ANR	4321774	CompoundStatement		14:8:319:319	4321676	0					
ANR	4321775	ExpressionStatement	core -> num -> value = - 1	36:2:945:966	4321676	0	True				
ANR	4321776	AssignmentExpression	core -> num -> value = - 1		4321676	0		=			
ANR	4321777	PtrMemberAccess	core -> num -> value		4321676	0					
ANR	4321778	PtrMemberAccess	core -> num		4321676	0					
ANR	4321779	Identifier	core		4321676	0					
ANR	4321780	Identifier	num		4321676	1					
ANR	4321781	Identifier	value		4321676	1					
ANR	4321782	UnaryOperationExpression	- 1		4321676	1					
ANR	4321783	UnaryOperator	-		4321676	0					
ANR	4321784	PrimaryExpression	1		4321676	1					
ANR	4321785	ReturnStatement	return - 2 ;	38:1:972:981	4321676	3	True				
ANR	4321786	UnaryOperationExpression	- 2		4321676	0					
ANR	4321787	UnaryOperator	-		4321676	0					
ANR	4321788	PrimaryExpression	2		4321676	1					
ANR	4321789	ReturnType	static int		4321676	1					
ANR	4321790	Identifier	cmd_Quit		4321676	2					
ANR	4321791	ParameterList	"void * data , const char * input"		4321676	3					
ANR	4321792	Parameter	void * data	22:20:590:599	4321676	0	True				
ANR	4321793	ParameterType	void *		4321676	0					
ANR	4321794	Identifier	data		4321676	1					
ANR	4321795	Parameter	const char * input	22:32:602:618	4321676	1	True				
ANR	4321796	ParameterType	const char *		4321676	0					
ANR	4321797	Identifier	input		4321676	1					
ANR	4321798	CFGEntryNode	ENTRY		4321676		True				
ANR	4321799	CFGExitNode	EXIT		4321676		True				
ANR	4321800	Symbol	core -> config		4321676						
ANR	4321801	Symbol	data		4321676						
ANR	4321802	Symbol	r_sandbox_enable		4321676						
ANR	4321803	Symbol	* input		4321676						
ANR	4321804	Symbol	false		4321676						
ANR	4321805	Symbol	* core		4321676						
ANR	4321806	Symbol	core -> num -> value		4321676						
ANR	4321807	Symbol	IS_DIGIT		4321676						
ANR	4321808	Symbol	r_num_math		4321676						
ANR	4321809	Symbol	input		4321676						
ANR	4321810	Symbol	core		4321676						
ANR	4321811	Symbol	* core -> num		4321676						
ANR	4321812	Symbol	core -> num		4321676						
ANR	4321813	Symbol	* * core		4321676						
ANR	4321814	Function	cmd_quit	41:0:986:1779							
ANR	4321815	FunctionDef	"cmd_quit (void * data , const char * input)"		4321814	0					
ANR	4321816	CompoundStatement		41:51:1037:1779	4321814	0					
ANR	4321817	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	42:1:1040:1067	4321814	0	True				
ANR	4321818	IdentifierDecl	* core = ( RCore * ) data		4321814	0					
ANR	4321819	IdentifierDeclType	RCore *		4321814	0					
ANR	4321820	Identifier	core		4321814	1					
ANR	4321821	AssignmentExpression	* core = ( RCore * ) data		4321814	2		=			
ANR	4321822	Identifier	core		4321814	0					
ANR	4321823	CastExpression	( RCore * ) data		4321814	1					
ANR	4321824	CastTarget	RCore *		4321814	0					
ANR	4321825	Identifier	data		4321814	1					
ANR	4321826	IfStatement	if ( input )		4321814	1					
ANR	4321827	Condition	input	43:5:1074:1078	4321814	0	True				
ANR	4321828	Identifier	input		4321814	0					
ANR	4321829	SwitchStatement	switch ( * input )		4321814	1					
ANR	4321830	Condition	* input	44:9:1090:1095	4321814	0	True				
ANR	4321831	UnaryOperationExpression	* input		4321814	0					
ANR	4321832	UnaryOperator	*		4321814	0					
ANR	4321833	Identifier	input		4321814	1					
ANR	4321834	CompoundStatement		4:17:60:60	4321814	1					
ANR	4321835	Label	case '?' :	45:1:1101:1109	4321814	0	True				
ANR	4321836	ExpressionStatement	"r_core_cmd_help ( core , help_msg_q )"	46:2:1113:1147	4321814	1	True				
ANR	4321837	CallExpression	"r_core_cmd_help ( core , help_msg_q )"		4321814	0					
ANR	4321838	Callee	r_core_cmd_help		4321814	0					
ANR	4321839	Identifier	r_core_cmd_help		4321814	0					
ANR	4321840	ArgumentList	core		4321814	1					
ANR	4321841	Argument	core		4321814	0					
ANR	4321842	Identifier	core		4321814	0					
ANR	4321843	Argument	help_msg_q		4321814	1					
ANR	4321844	Identifier	help_msg_q		4321814	0					
ANR	4321845	BreakStatement	break ;	47:2:1151:1156	4321814	2	True				
ANR	4321846	Label	case '!' :	48:1:1159:1167	4321814	3	True				
ANR	4321847	ReturnStatement	"return cmd_Quit ( core , input ) ;"	49:2:1171:1200	4321814	4	True				
ANR	4321848	CallExpression	"cmd_Quit ( core , input )"		4321814	0					
ANR	4321849	Callee	cmd_Quit		4321814	0					
ANR	4321850	Identifier	cmd_Quit		4321814	0					
ANR	4321851	ArgumentList	core		4321814	1					
ANR	4321852	Argument	core		4321814	0					
ANR	4321853	Identifier	core		4321814	0					
ANR	4321854	Argument	input		4321814	1					
ANR	4321855	Identifier	input		4321814	0					
ANR	4321856	Label	case '\\0' :	50:1:1203:1212	4321814	5	True				
ANR	4321857	Statement	core	51:2:1216:1219	4321814	6	True				
ANR	4321858	Statement	->	51:6:1220:1221	4321814	7	True				
ANR	4321859	Statement	num	51:8:1222:1224	4321814	8	True				
ANR	4321860	Statement	->	51:11:1225:1226	4321814	9	True				
ANR	4321861	Statement	value	51:13:1227:1231	4321814	10	True				
ANR	4321862	Statement	=	51:19:1233:1233	4321814	11	True				
ANR	4321863	Statement	0L	51:21:1235:1236	4321814	12	True				
ANR	4321864	ExpressionStatement	L	51:23:1237:1238	4321814	13	True				
ANR	4321865	Identifier	L		4321814	0					
ANR	4321866	ReturnStatement	return - 2 ;	52:2:1242:1251	4321814	14	True				
ANR	4321867	UnaryOperationExpression	- 2		4321814	0					
ANR	4321868	UnaryOperator	-		4321814	0					
ANR	4321869	PrimaryExpression	2		4321814	1					
ANR	4321870	Label	default :	53:1:1254:1261	4321814	15	True				
ANR	4321871	Identifier	default		4321814	0					
ANR	4321872	WhileStatement	while ( * input == ' ' )		4321814	16					
ANR	4321873	Condition	* input == ' '	54:9:1272:1284	4321814	0	True				
ANR	4321874	EqualityExpression	* input == ' '		4321814	0		==			
ANR	4321875	UnaryOperationExpression	* input		4321814	0					
ANR	4321876	UnaryOperator	*		4321814	0					
ANR	4321877	Identifier	input		4321814	1					
ANR	4321878	PrimaryExpression	' '		4321814	1					
ANR	4321879	CompoundStatement		14:24:249:249	4321814	1					
ANR	4321880	ExpressionStatement	input ++	55:3:1292:1299	4321814	0	True				
ANR	4321881	PostIncDecOperationExpression	input ++		4321814	0					
ANR	4321882	Identifier	input		4321814	0					
ANR	4321883	IncDec	++		4321814	1					
ANR	4321884	IfStatement	if ( * input )		4321814	17					
ANR	4321885	Condition	* input	57:6:1311:1316	4321814	0	True				
ANR	4321886	UnaryOperationExpression	* input		4321814	0					
ANR	4321887	UnaryOperator	*		4321814	0					
ANR	4321888	Identifier	input		4321814	1					
ANR	4321889	CompoundStatement		17:14:281:281	4321814	1					
ANR	4321890	ExpressionStatement	"r_num_math ( core -> num , input )"	58:3:1324:1353	4321814	0	True				
ANR	4321891	CallExpression	"r_num_math ( core -> num , input )"		4321814	0					
ANR	4321892	Callee	r_num_math		4321814	0					
ANR	4321893	Identifier	r_num_math		4321814	0					
ANR	4321894	ArgumentList	core -> num		4321814	1					
ANR	4321895	Argument	core -> num		4321814	0					
ANR	4321896	PtrMemberAccess	core -> num		4321814	0					
ANR	4321897	Identifier	core		4321814	0					
ANR	4321898	Identifier	num		4321814	1					
ANR	4321899	Argument	input		4321814	1					
ANR	4321900	Identifier	input		4321814	0					
ANR	4321901	ElseStatement	else		4321814	0					
ANR	4321902	CompoundStatement		19:9:326:326	4321814	0					
ANR	4321903	Statement	core	60:3:1369:1372	4321814	0	True				
ANR	4321904	Statement	->	60:7:1373:1374	4321814	1	True				
ANR	4321905	Statement	num	60:9:1375:1377	4321814	2	True				
ANR	4321906	Statement	->	60:12:1378:1379	4321814	3	True				
ANR	4321907	Statement	value	60:14:1380:1384	4321814	4	True				
ANR	4321908	Statement	=	60:20:1386:1386	4321814	5	True				
ANR	4321909	Statement	0L	60:22:1388:1389	4321814	6	True				
ANR	4321910	ExpressionStatement	L	60:24:1390:1391	4321814	7	True				
ANR	4321911	Identifier	L		4321814	0					
ANR	4321912	IfStatement	if ( * input == 'y' )		4321814	18					
ANR	4321913	Condition	* input == 'y'	63:6:1404:1416	4321814	0	True				
ANR	4321914	EqualityExpression	* input == 'y'		4321814	0		==			
ANR	4321915	UnaryOperationExpression	* input		4321814	0					
ANR	4321916	UnaryOperator	*		4321814	0					
ANR	4321917	Identifier	input		4321814	1					
ANR	4321918	PrimaryExpression	'y'		4321814	1					
ANR	4321919	CompoundStatement		23:21:381:381	4321814	1					
ANR	4321920	ExpressionStatement	core -> num -> value = 5	64:3:1424:1444	4321814	0	True				
ANR	4321921	AssignmentExpression	core -> num -> value = 5		4321814	0		=			
ANR	4321922	PtrMemberAccess	core -> num -> value		4321814	0					
ANR	4321923	PtrMemberAccess	core -> num		4321814	0					
ANR	4321924	Identifier	core		4321814	0					
ANR	4321925	Identifier	num		4321814	1					
ANR	4321926	Identifier	value		4321814	1					
ANR	4321927	PrimaryExpression	5		4321814	1					
ANR	4321928	ElseStatement	else		4321814	0					
ANR	4321929	IfStatement	if ( * input == 'n' )		4321814	0					
ANR	4321930	Condition	* input == 'n'	65:13:1459:1471	4321814	0	True				
ANR	4321931	EqualityExpression	* input == 'n'		4321814	0		==			
ANR	4321932	UnaryOperationExpression	* input		4321814	0					
ANR	4321933	UnaryOperator	*		4321814	0					
ANR	4321934	Identifier	input		4321814	1					
ANR	4321935	PrimaryExpression	'n'		4321814	1					
ANR	4321936	CompoundStatement		25:28:436:436	4321814	1					
ANR	4321937	ExpressionStatement	core -> num -> value = 1	66:3:1479:1499	4321814	0	True				
ANR	4321938	AssignmentExpression	core -> num -> value = 1		4321814	0		=			
ANR	4321939	PtrMemberAccess	core -> num -> value		4321814	0					
ANR	4321940	PtrMemberAccess	core -> num		4321814	0					
ANR	4321941	Identifier	core		4321814	0					
ANR	4321942	Identifier	num		4321814	1					
ANR	4321943	Identifier	value		4321814	1					
ANR	4321944	PrimaryExpression	1		4321814	1					
ANR	4321945	IfStatement	if ( input [ 1 ] == 'y' )		4321814	19					
ANR	4321946	Condition	input [ 1 ] == 'y'	69:6:1512:1526	4321814	0	True				
ANR	4321947	EqualityExpression	input [ 1 ] == 'y'		4321814	0		==			
ANR	4321948	ArrayIndexing	input [ 1 ]		4321814	0					
ANR	4321949	Identifier	input		4321814	0					
ANR	4321950	PrimaryExpression	1		4321814	1					
ANR	4321951	PrimaryExpression	'y'		4321814	1					
ANR	4321952	CompoundStatement		29:23:491:491	4321814	1					
ANR	4321953	ExpressionStatement	core -> num -> value += 10	70:3:1534:1556	4321814	0	True				
ANR	4321954	AssignmentExpression	core -> num -> value += 10		4321814	0		+=			
ANR	4321955	PtrMemberAccess	core -> num -> value		4321814	0					
ANR	4321956	PtrMemberAccess	core -> num		4321814	0					
ANR	4321957	Identifier	core		4321814	0					
ANR	4321958	Identifier	num		4321814	1					
ANR	4321959	Identifier	value		4321814	1					
ANR	4321960	PrimaryExpression	10		4321814	1					
ANR	4321961	ElseStatement	else		4321814	0					
ANR	4321962	IfStatement	if ( input [ 1 ] == 'n' )		4321814	0					
ANR	4321963	Condition	input [ 1 ] == 'n'	71:13:1572:1586	4321814	0	True				
ANR	4321964	EqualityExpression	input [ 1 ] == 'n'		4321814	0		==			
ANR	4321965	ArrayIndexing	input [ 1 ]		4321814	0					
ANR	4321966	Identifier	input		4321814	0					
ANR	4321967	PrimaryExpression	1		4321814	1					
ANR	4321968	PrimaryExpression	'n'		4321814	1					
ANR	4321969	CompoundStatement		31:30:551:551	4321814	1					
ANR	4321970	ExpressionStatement	core -> num -> value += 2	72:3:1594:1615	4321814	0	True				
ANR	4321971	AssignmentExpression	core -> num -> value += 2		4321814	0		+=			
ANR	4321972	PtrMemberAccess	core -> num -> value		4321814	0					
ANR	4321973	PtrMemberAccess	core -> num		4321814	0					
ANR	4321974	Identifier	core		4321814	0					
ANR	4321975	Identifier	num		4321814	1					
ANR	4321976	Identifier	value		4321814	1					
ANR	4321977	PrimaryExpression	2		4321814	1					
ANR	4321978	ReturnStatement	return - 2 ;	76:2:1750:1759	4321814	20	True				
ANR	4321979	UnaryOperationExpression	- 2		4321814	0					
ANR	4321980	UnaryOperator	-		4321814	0					
ANR	4321981	PrimaryExpression	2		4321814	1					
ANR	4321982	ReturnStatement	return false ;	78:1:1765:1777	4321814	2	True				
ANR	4321983	Identifier	false		4321814	0					
ANR	4321984	ReturnType	static int		4321814	1					
ANR	4321985	Identifier	cmd_quit		4321814	2					
ANR	4321986	ParameterList	"void * data , const char * input"		4321814	3					
ANR	4321987	Parameter	void * data	41:20:1006:1015	4321814	0	True				
ANR	4321988	ParameterType	void *		4321814	0					
ANR	4321989	Identifier	data		4321814	1					
ANR	4321990	Parameter	const char * input	41:32:1018:1034	4321814	1	True				
ANR	4321991	ParameterType	const char *		4321814	0					
ANR	4321992	Identifier	input		4321814	1					
ANR	4321993	CFGEntryNode	ENTRY		4321814		True				
ANR	4321994	CFGExitNode	EXIT		4321814		True				
ANR	4321995	Symbol	input		4321814						
ANR	4321996	Symbol	core		4321814						
ANR	4321997	Symbol	data		4321814						
ANR	4321998	Symbol	help_msg_q		4321814						
ANR	4321999	Symbol	cmd_Quit		4321814						
ANR	4322000	Symbol	* input		4321814						
ANR	4322001	Symbol	* core		4321814						
ANR	4322002	Symbol	false		4321814						
ANR	4322003	Symbol	core -> num -> value		4321814						
ANR	4322004	Symbol	* core -> num		4321814						
ANR	4322005	Symbol	core -> num		4321814						
ANR	4322006	Symbol	* * core		4321814						
