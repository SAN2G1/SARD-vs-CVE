command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	457814	File	data/converged/CVE-2019-16718~_radare2/avr_disasm.c								
ANR	457815	DeclStmt									
ANR	457816	Decl							int	int	AVR_Long_Instruction
ANR	457817	DeclStmt									
ANR	457818	Decl							uint32_t	uint32_t	AVR_Long_Address
ANR	457819	DeclStmt									
ANR	457820	Decl							disassembledInstruction	disassembledInstruction	longInstruction
ANR	457821	DeclStmt									
ANR	457822	Decl							int	int ( disassembledInstruction * dInstruction )	disassembleOperands
ANR	457823	DeclStmt									
ANR	457824	Decl							uint16_t	"uint16_t ( uint16_t data , uint16_t mask )"	extractDataFromMask
ANR	457825	DeclStmt									
ANR	457826	Decl							int	"int ( uint16_t opcode , int offset )"	lookupInstruction
ANR	457827	Function	disassembleInstruction	58:0:2759:5632							
ANR	457828	FunctionDef	"disassembleInstruction (disassembledInstruction * dInstruction , const assembledInstruction aInstruction)"		457827	0					
ANR	457829	CompoundStatement		58:114:2873:5632	457827	0					
ANR	457830	IdentifierDeclStatement	"int insidx , i ;"	59:1:2876:2889	457827	0	True				
ANR	457831	IdentifierDecl	insidx		457827	0					
ANR	457832	IdentifierDeclType	int		457827	0					
ANR	457833	Identifier	insidx		457827	1					
ANR	457834	IdentifierDecl	i		457827	1					
ANR	457835	IdentifierDeclType	int		457827	0					
ANR	457836	Identifier	i		457827	1					
ANR	457837	IfStatement	if ( ! dInstruction )		457827	1					
ANR	457838	Condition	! dInstruction	61:5:2898:2910	457827	0	True				
ANR	457839	UnaryOperationExpression	! dInstruction		457827	0					
ANR	457840	UnaryOperator	!		457827	0					
ANR	457841	Identifier	dInstruction		457827	1					
ANR	457842	ReturnStatement	return ERROR_INVALID_ARGUMENTS ;	62:2:2915:2945	457827	1	True				
ANR	457843	Identifier	ERROR_INVALID_ARGUMENTS		457827	0					
ANR	457844	ExpressionStatement	"insidx = lookupInstruction ( aInstruction . opcode , 0 )"	66:1:2983:3033	457827	2	True				
ANR	457845	AssignmentExpression	"insidx = lookupInstruction ( aInstruction . opcode , 0 )"		457827	0		=			
ANR	457846	Identifier	insidx		457827	0					
ANR	457847	CallExpression	"lookupInstruction ( aInstruction . opcode , 0 )"		457827	1					
ANR	457848	Callee	lookupInstruction		457827	0					
ANR	457849	Identifier	lookupInstruction		457827	0					
ANR	457850	ArgumentList	aInstruction . opcode		457827	1					
ANR	457851	Argument	aInstruction . opcode		457827	0					
ANR	457852	MemberAccess	aInstruction . opcode		457827	0					
ANR	457853	Identifier	aInstruction		457827	0					
ANR	457854	Identifier	opcode		457827	1					
ANR	457855	Argument	0		457827	1					
ANR	457856	PrimaryExpression	0		457827	0					
ANR	457857	IfStatement	if ( insidx == AVR_TOTAL_INSTRUCTIONS )		457827	3					
ANR	457858	Condition	insidx == AVR_TOTAL_INSTRUCTIONS	67:5:3040:3071	457827	0	True				
ANR	457859	EqualityExpression	insidx == AVR_TOTAL_INSTRUCTIONS		457827	0		==			
ANR	457860	Identifier	insidx		457827	0					
ANR	457861	Identifier	AVR_TOTAL_INSTRUCTIONS		457827	1					
ANR	457862	CompoundStatement		10:39:200:200	457827	1					
ANR	457863	ReturnStatement	return 0 ;	69:2:3103:3111	457827	0	True				
ANR	457864	PrimaryExpression	0		457827	0					
ANR	457865	IfStatement	if ( AVR_Long_Instruction == AVR_LONG_INSTRUCTION_FOUND )		457827	4					
ANR	457866	Condition	AVR_Long_Instruction == AVR_LONG_INSTRUCTION_FOUND	75:5:3295:3344	457827	0	True				
ANR	457867	EqualityExpression	AVR_Long_Instruction == AVR_LONG_INSTRUCTION_FOUND		457827	0		==			
ANR	457868	Identifier	AVR_Long_Instruction		457827	0					
ANR	457869	Identifier	AVR_LONG_INSTRUCTION_FOUND		457827	1					
ANR	457870	CompoundStatement		18:57:473:473	457827	1					
ANR	457871	ExpressionStatement	AVR_Long_Instruction = AVR_LONG_INSTRUCTION_PRINT	76:2:3351:3400	457827	0	True				
ANR	457872	AssignmentExpression	AVR_Long_Instruction = AVR_LONG_INSTRUCTION_PRINT		457827	0		=			
ANR	457873	Identifier	AVR_Long_Instruction		457827	0					
ANR	457874	Identifier	AVR_LONG_INSTRUCTION_PRINT		457827	1					
ANR	457875	ExpressionStatement	AVR_Long_Address |= aInstruction . opcode	77:2:3404:3443	457827	1	True				
ANR	457876	AssignmentExpression	AVR_Long_Address |= aInstruction . opcode		457827	0		|=			
ANR	457877	Identifier	AVR_Long_Address		457827	0					
ANR	457878	MemberAccess	aInstruction . opcode		457827	1					
ANR	457879	Identifier	aInstruction		457827	0					
ANR	457880	Identifier	opcode		457827	1					
ANR	457881	IfStatement	"if ( ! strcmp ( longInstruction . instruction -> mnemonic , ""call"" ) || ! strcmp ( longInstruction . instruction -> mnemonic , ""jmp"" ) )"		457827	2					
ANR	457882	Condition	"! strcmp ( longInstruction . instruction -> mnemonic , ""call"" ) || ! strcmp ( longInstruction . instruction -> mnemonic , ""jmp"" )"	82:19:3711:3837	457827	0	True				
ANR	457883	OrExpression	"! strcmp ( longInstruction . instruction -> mnemonic , ""call"" ) || ! strcmp ( longInstruction . instruction -> mnemonic , ""jmp"" )"		457827	0		||			
ANR	457884	UnaryOperationExpression	"! strcmp ( longInstruction . instruction -> mnemonic , ""call"" )"		457827	0					
ANR	457885	UnaryOperator	!		457827	0					
ANR	457886	CallExpression	"strcmp ( longInstruction . instruction -> mnemonic , ""call"" )"		457827	1					
ANR	457887	Callee	strcmp		457827	0					
ANR	457888	Identifier	strcmp		457827	0					
ANR	457889	ArgumentList	longInstruction . instruction -> mnemonic		457827	1					
ANR	457890	Argument	longInstruction . instruction -> mnemonic		457827	0					
ANR	457891	PtrMemberAccess	longInstruction . instruction -> mnemonic		457827	0					
ANR	457892	MemberAccess	longInstruction . instruction		457827	0					
ANR	457893	Identifier	longInstruction		457827	0					
ANR	457894	Identifier	instruction		457827	1					
ANR	457895	Identifier	mnemonic		457827	1					
ANR	457896	Argument	"""call"""		457827	1					
ANR	457897	PrimaryExpression	"""call"""		457827	0					
ANR	457898	UnaryOperationExpression	"! strcmp ( longInstruction . instruction -> mnemonic , ""jmp"" )"		457827	1					
ANR	457899	UnaryOperator	!		457827	0					
ANR	457900	CallExpression	"strcmp ( longInstruction . instruction -> mnemonic , ""jmp"" )"		457827	1					
ANR	457901	Callee	strcmp		457827	0					
ANR	457902	Identifier	strcmp		457827	0					
ANR	457903	ArgumentList	longInstruction . instruction -> mnemonic		457827	1					
ANR	457904	Argument	longInstruction . instruction -> mnemonic		457827	0					
ANR	457905	PtrMemberAccess	longInstruction . instruction -> mnemonic		457827	0					
ANR	457906	MemberAccess	longInstruction . instruction		457827	0					
ANR	457907	Identifier	longInstruction		457827	0					
ANR	457908	Identifier	instruction		457827	1					
ANR	457909	Identifier	mnemonic		457827	1					
ANR	457910	Argument	"""jmp"""		457827	1					
ANR	457911	PrimaryExpression	"""jmp"""		457827	0					
ANR	457912	CompoundStatement		27:9:975:975	457827	1					
ANR	457913	ExpressionStatement	AVR_Long_Address *= 2	85:3:3854:3875	457827	0	True				
ANR	457914	AssignmentExpression	AVR_Long_Address *= 2		457827	0		*=			
ANR	457915	Identifier	AVR_Long_Address		457827	0					
ANR	457916	PrimaryExpression	2		457827	1					
ANR	457917	ExpressionStatement	* dInstruction = longInstruction	87:2:3897:3928	457827	3	True				
ANR	457918	AssignmentExpression	* dInstruction = longInstruction		457827	0		=			
ANR	457919	UnaryOperationExpression	* dInstruction		457827	0					
ANR	457920	UnaryOperator	*		457827	0					
ANR	457921	Identifier	dInstruction		457827	1					
ANR	457922	Identifier	longInstruction		457827	1					
ANR	457923	ReturnStatement	return 0 ;	88:2:3932:3940	457827	4	True				
ANR	457924	PrimaryExpression	0		457827	0					
ANR	457925	ElseStatement	else		457827	0					
ANR	457926	IfStatement	if ( AVR_Long_Instruction == AVR_LONG_INSTRUCTION_PRINT )		457827	0					
ANR	457927	Condition	AVR_Long_Instruction == AVR_LONG_INSTRUCTION_PRINT	91:12:4090:4139	457827	0	True				
ANR	457928	EqualityExpression	AVR_Long_Instruction == AVR_LONG_INSTRUCTION_PRINT		457827	0		==			
ANR	457929	Identifier	AVR_Long_Instruction		457827	0					
ANR	457930	Identifier	AVR_LONG_INSTRUCTION_PRINT		457827	1					
ANR	457931	CompoundStatement		34:64:1268:1268	457827	1					
ANR	457932	ExpressionStatement	AVR_Long_Instruction = 0	92:2:4146:4170	457827	0	True				
ANR	457933	AssignmentExpression	AVR_Long_Instruction = 0		457827	0		=			
ANR	457934	Identifier	AVR_Long_Instruction		457827	0					
ANR	457935	PrimaryExpression	0		457827	1					
ANR	457936	ExpressionStatement	dInstruction -> address = aInstruction . address	97:1:4315:4359	457827	5	True				
ANR	457937	AssignmentExpression	dInstruction -> address = aInstruction . address		457827	0		=			
ANR	457938	PtrMemberAccess	dInstruction -> address		457827	0					
ANR	457939	Identifier	dInstruction		457827	0					
ANR	457940	Identifier	address		457827	1					
ANR	457941	MemberAccess	aInstruction . address		457827	1					
ANR	457942	Identifier	aInstruction		457827	0					
ANR	457943	Identifier	address		457827	1					
ANR	457944	ExpressionStatement	dInstruction -> instruction = & instructionSet [ insidx ]	98:1:4362:4413	457827	6	True				
ANR	457945	AssignmentExpression	dInstruction -> instruction = & instructionSet [ insidx ]		457827	0		=			
ANR	457946	PtrMemberAccess	dInstruction -> instruction		457827	0					
ANR	457947	Identifier	dInstruction		457827	0					
ANR	457948	Identifier	instruction		457827	1					
ANR	457949	UnaryOperationExpression	& instructionSet [ insidx ]		457827	1					
ANR	457950	UnaryOperator	&		457827	0					
ANR	457951	ArrayIndexing	instructionSet [ insidx ]		457827	1					
ANR	457952	Identifier	instructionSet		457827	0					
ANR	457953	Identifier	insidx		457827	1					
ANR	457954	ExpressionStatement	dInstruction -> alternateInstruction = NULL	99:1:4416:4457	457827	7	True				
ANR	457955	AssignmentExpression	dInstruction -> alternateInstruction = NULL		457827	0		=			
ANR	457956	PtrMemberAccess	dInstruction -> alternateInstruction		457827	0					
ANR	457957	Identifier	dInstruction		457827	0					
ANR	457958	Identifier	alternateInstruction		457827	1					
ANR	457959	Identifier	NULL		457827	1					
ANR	457960	ForStatement	for ( i = 0 ; i < instructionSet [ insidx ] . numOperands ; i ++ )		457827	8					
ANR	457961	ForInit	i = 0 ;	103:6:4578:4583	457827	0	True				
ANR	457962	AssignmentExpression	i = 0		457827	0		=			
ANR	457963	Identifier	i		457827	0					
ANR	457964	PrimaryExpression	0		457827	1					
ANR	457965	Condition	i < instructionSet [ insidx ] . numOperands	103:13:4585:4622	457827	1	True				
ANR	457966	RelationalExpression	i < instructionSet [ insidx ] . numOperands		457827	0		<			
ANR	457967	Identifier	i		457827	0					
ANR	457968	MemberAccess	instructionSet [ insidx ] . numOperands		457827	1					
ANR	457969	ArrayIndexing	instructionSet [ insidx ]		457827	0					
ANR	457970	Identifier	instructionSet		457827	0					
ANR	457971	Identifier	insidx		457827	1					
ANR	457972	Identifier	numOperands		457827	1					
ANR	457973	PostIncDecOperationExpression	i ++	103:53:4625:4627	457827	2	True				
ANR	457974	Identifier	i		457827	0					
ANR	457975	IncDec	++		457827	1					
ANR	457976	CompoundStatement		46:58:1756:1756	457827	3					
ANR	457977	ExpressionStatement	"dInstruction -> operands [ i ] = extractDataFromMask ( aInstruction . opcode , dInstruction -> instruction -> operandMasks [ i ] )"	104:2:4634:4746	457827	0	True				
ANR	457978	AssignmentExpression	"dInstruction -> operands [ i ] = extractDataFromMask ( aInstruction . opcode , dInstruction -> instruction -> operandMasks [ i ] )"		457827	0		=			
ANR	457979	ArrayIndexing	dInstruction -> operands [ i ]		457827	0					
ANR	457980	PtrMemberAccess	dInstruction -> operands		457827	0					
ANR	457981	Identifier	dInstruction		457827	0					
ANR	457982	Identifier	operands		457827	1					
ANR	457983	Identifier	i		457827	1					
ANR	457984	CallExpression	"extractDataFromMask ( aInstruction . opcode , dInstruction -> instruction -> operandMasks [ i ] )"		457827	1					
ANR	457985	Callee	extractDataFromMask		457827	0					
ANR	457986	Identifier	extractDataFromMask		457827	0					
ANR	457987	ArgumentList	aInstruction . opcode		457827	1					
ANR	457988	Argument	aInstruction . opcode		457827	0					
ANR	457989	MemberAccess	aInstruction . opcode		457827	0					
ANR	457990	Identifier	aInstruction		457827	0					
ANR	457991	Identifier	opcode		457827	1					
ANR	457992	Argument	dInstruction -> instruction -> operandMasks [ i ]		457827	1					
ANR	457993	ArrayIndexing	dInstruction -> instruction -> operandMasks [ i ]		457827	0					
ANR	457994	PtrMemberAccess	dInstruction -> instruction -> operandMasks		457827	0					
ANR	457995	PtrMemberAccess	dInstruction -> instruction		457827	0					
ANR	457996	Identifier	dInstruction		457827	0					
ANR	457997	Identifier	instruction		457827	1					
ANR	457998	Identifier	operandMasks		457827	1					
ANR	457999	Identifier	i		457827	1					
ANR	458000	IfStatement	if ( dInstruction -> instruction -> operandTypes [ i ] == OPERAND_LONG_ABSOLUTE_ADDRESS )		457827	1					
ANR	458001	Condition	dInstruction -> instruction -> operandTypes [ i ] == OPERAND_LONG_ABSOLUTE_ADDRESS	108:6:4943:5017	457827	0	True				
ANR	458002	EqualityExpression	dInstruction -> instruction -> operandTypes [ i ] == OPERAND_LONG_ABSOLUTE_ADDRESS		457827	0		==			
ANR	458003	ArrayIndexing	dInstruction -> instruction -> operandTypes [ i ]		457827	0					
ANR	458004	PtrMemberAccess	dInstruction -> instruction -> operandTypes		457827	0					
ANR	458005	PtrMemberAccess	dInstruction -> instruction		457827	0					
ANR	458006	Identifier	dInstruction		457827	0					
ANR	458007	Identifier	instruction		457827	1					
ANR	458008	Identifier	operandTypes		457827	1					
ANR	458009	Identifier	i		457827	1					
ANR	458010	Identifier	OPERAND_LONG_ABSOLUTE_ADDRESS		457827	1					
ANR	458011	CompoundStatement		51:83:2146:2146	457827	1					
ANR	458012	ExpressionStatement	AVR_Long_Instruction = AVR_LONG_INSTRUCTION_FOUND	109:3:5025:5074	457827	0	True				
ANR	458013	AssignmentExpression	AVR_Long_Instruction = AVR_LONG_INSTRUCTION_FOUND		457827	0		=			
ANR	458014	Identifier	AVR_Long_Instruction		457827	0					
ANR	458015	Identifier	AVR_LONG_INSTRUCTION_FOUND		457827	1					
ANR	458016	ExpressionStatement	AVR_Long_Address = dInstruction -> operands [ i ] << 16	110:3:5079:5129	457827	1	True				
ANR	458017	AssignmentExpression	AVR_Long_Address = dInstruction -> operands [ i ] << 16		457827	0		=			
ANR	458018	Identifier	AVR_Long_Address		457827	0					
ANR	458019	ShiftExpression	dInstruction -> operands [ i ] << 16		457827	1		<<			
ANR	458020	ArrayIndexing	dInstruction -> operands [ i ]		457827	0					
ANR	458021	PtrMemberAccess	dInstruction -> operands		457827	0					
ANR	458022	Identifier	dInstruction		457827	0					
ANR	458023	Identifier	operands		457827	1					
ANR	458024	Identifier	i		457827	1					
ANR	458025	PrimaryExpression	16		457827	1					
ANR	458026	ExpressionStatement	longInstruction = * dInstruction	111:3:5134:5165	457827	2	True				
ANR	458027	AssignmentExpression	longInstruction = * dInstruction		457827	0		=			
ANR	458028	Identifier	longInstruction		457827	0					
ANR	458029	UnaryOperationExpression	* dInstruction		457827	1					
ANR	458030	UnaryOperator	*		457827	0					
ANR	458031	Identifier	dInstruction		457827	1					
ANR	458032	IfStatement	if ( disassembleOperands ( dInstruction ) < 0 )		457827	9					
ANR	458033	Condition	disassembleOperands ( dInstruction ) < 0	116:5:5209:5245	457827	0	True				
ANR	458034	RelationalExpression	disassembleOperands ( dInstruction ) < 0		457827	0		<			
ANR	458035	CallExpression	disassembleOperands ( dInstruction )		457827	0					
ANR	458036	Callee	disassembleOperands		457827	0					
ANR	458037	Identifier	disassembleOperands		457827	0					
ANR	458038	ArgumentList	dInstruction		457827	1					
ANR	458039	Argument	dInstruction		457827	0					
ANR	458040	Identifier	dInstruction		457827	0					
ANR	458041	PrimaryExpression	0		457827	1					
ANR	458042	ReturnStatement	return ERROR_INVALID_ARGUMENTS ;	117:2:5250:5280	457827	1	True				
ANR	458043	Identifier	ERROR_INVALID_ARGUMENTS		457827	0					
ANR	458044	IfStatement	if ( AVR_Long_Instruction == AVR_LONG_INSTRUCTION_FOUND )		457827	10					
ANR	458045	Condition	AVR_Long_Instruction == AVR_LONG_INSTRUCTION_FOUND	119:5:5340:5389	457827	0	True				
ANR	458046	EqualityExpression	AVR_Long_Instruction == AVR_LONG_INSTRUCTION_FOUND		457827	0		==			
ANR	458047	Identifier	AVR_Long_Instruction		457827	0					
ANR	458048	Identifier	AVR_LONG_INSTRUCTION_FOUND		457827	1					
ANR	458049	CompoundStatement		62:57:2518:2518	457827	1					
ANR	458050	ExpressionStatement	longInstruction = * dInstruction	123:2:5584:5615	457827	0	True				
ANR	458051	AssignmentExpression	longInstruction = * dInstruction		457827	0		=			
ANR	458052	Identifier	longInstruction		457827	0					
ANR	458053	UnaryOperationExpression	* dInstruction		457827	1					
ANR	458054	UnaryOperator	*		457827	0					
ANR	458055	Identifier	dInstruction		457827	1					
ANR	458056	ReturnStatement	return 0 ;	126:1:5622:5630	457827	11	True				
ANR	458057	PrimaryExpression	0		457827	0					
ANR	458058	ReturnType	static int		457827	1					
ANR	458059	Identifier	disassembleInstruction		457827	2					
ANR	458060	ParameterList	"disassembledInstruction * dInstruction , const assembledInstruction aInstruction"		457827	3					
ANR	458061	Parameter	disassembledInstruction * dInstruction	58:34:2793:2829	457827	0	True				
ANR	458062	ParameterType	disassembledInstruction *		457827	0					
ANR	458063	Identifier	dInstruction		457827	1					
ANR	458064	Parameter	const assembledInstruction aInstruction	58:73:2832:2870	457827	1	True				
ANR	458065	ParameterType	const assembledInstruction		457827	0					
ANR	458066	Identifier	aInstruction		457827	1					
ANR	458067	CFGEntryNode	ENTRY		457827		True				
ANR	458068	CFGExitNode	EXIT		457827		True				
ANR	458069	Symbol	OPERAND_LONG_ABSOLUTE_ADDRESS		457827						
ANR	458070	Symbol	disassembleOperands		457827						
ANR	458071	Symbol	* longInstruction		457827						
ANR	458072	Symbol	aInstruction . opcode		457827						
ANR	458073	Symbol	* instructionSet		457827						
ANR	458074	Symbol	lookupInstruction		457827						
ANR	458075	Symbol	longInstruction . instruction		457827						
ANR	458076	Symbol	* dInstruction		457827						
ANR	458077	Symbol	dInstruction		457827						
ANR	458078	Symbol	* * dInstruction		457827						
ANR	458079	Symbol	AVR_Long_Instruction		457827						
ANR	458080	Symbol	dInstruction -> instruction -> operandTypes		457827						
ANR	458081	Symbol	* longInstruction . instruction		457827						
ANR	458082	Symbol	AVR_LONG_INSTRUCTION_PRINT		457827						
ANR	458083	Symbol	longInstruction		457827						
ANR	458084	Symbol	dInstruction -> alternateInstruction		457827						
ANR	458085	Symbol	* * dInstruction -> instruction		457827						
ANR	458086	Symbol	instructionSet [ insidx ] . numOperands		457827						
ANR	458087	Symbol	AVR_TOTAL_INSTRUCTIONS		457827						
ANR	458088	Symbol	* dInstruction -> operands		457827						
ANR	458089	Symbol	aInstruction		457827						
ANR	458090	Symbol	strcmp		457827						
ANR	458091	Symbol	extractDataFromMask		457827						
ANR	458092	Symbol	ERROR_INVALID_ARGUMENTS		457827						
ANR	458093	Symbol	NULL		457827						
ANR	458094	Symbol	instructionSet		457827						
ANR	458095	Symbol	dInstruction -> address		457827						
ANR	458096	Symbol	i		457827						
ANR	458097	Symbol	* dInstruction -> instruction -> operandMasks		457827						
ANR	458098	Symbol	* insidx		457827						
ANR	458099	Symbol	* dInstruction -> instruction -> operandTypes		457827						
ANR	458100	Symbol	aInstruction . address		457827						
ANR	458101	Symbol	AVR_LONG_INSTRUCTION_FOUND		457827						
ANR	458102	Symbol	* i		457827						
ANR	458103	Symbol	AVR_Long_Address		457827						
ANR	458104	Symbol	* dInstruction -> instruction		457827						
ANR	458105	Symbol	dInstruction -> operands		457827						
ANR	458106	Symbol	dInstruction -> instruction		457827						
ANR	458107	Symbol	longInstruction . instruction -> mnemonic		457827						
ANR	458108	Symbol	dInstruction -> instruction -> operandMasks		457827						
ANR	458109	Symbol	* * * dInstruction		457827						
ANR	458110	Symbol	insidx		457827						
ANR	458111	Function	extractDataFromMask	130:0:5744:6363							
ANR	458112	FunctionDef	"extractDataFromMask (uint16_t data , uint16_t mask)"		458111	0					
ANR	458113	CompoundStatement		130:66:5810:6363	458111	0					
ANR	458114	IdentifierDeclStatement	"int i , j ;"	131:1:5813:5821	458111	0	True				
ANR	458115	IdentifierDecl	i		458111	0					
ANR	458116	IdentifierDeclType	int		458111	0					
ANR	458117	Identifier	i		458111	1					
ANR	458118	IdentifierDecl	j		458111	1					
ANR	458119	IdentifierDeclType	int		458111	0					
ANR	458120	Identifier	j		458111	1					
ANR	458121	IdentifierDeclStatement	uint16_t result = 0 ;	132:1:5824:5843	458111	1	True				
ANR	458122	IdentifierDecl	result = 0		458111	0					
ANR	458123	IdentifierDeclType	uint16_t		458111	0					
ANR	458124	Identifier	result		458111	1					
ANR	458125	AssignmentExpression	result = 0		458111	2		=			
ANR	458126	Identifier	result		458111	0					
ANR	458127	PrimaryExpression	0		458111	1					
ANR	458128	ForStatement	"for ( i = 0 , j = 0 ; i < 16 ; i ++ )"		458111	2					
ANR	458129	ForInit	"i = 0 , j = 0 ;"	136:6:5962:5974	458111	0	True				
ANR	458130	Expression	"i = 0 , j = 0"		458111	0					
ANR	458131	AssignmentExpression	i = 0		458111	0		=			
ANR	458132	Identifier	i		458111	0					
ANR	458133	PrimaryExpression	0		458111	1					
ANR	458134	AssignmentExpression	j = 0		458111	1		=			
ANR	458135	Identifier	j		458111	0					
ANR	458136	PrimaryExpression	0		458111	1					
ANR	458137	Condition	i < 16	136:20:5976:5981	458111	1	True				
ANR	458138	RelationalExpression	i < 16		458111	0		<			
ANR	458139	Identifier	i		458111	0					
ANR	458140	PrimaryExpression	16		458111	1					
ANR	458141	PostIncDecOperationExpression	i ++	136:28:5984:5986	458111	2	True				
ANR	458142	Identifier	i		458111	0					
ANR	458143	IncDec	++		458111	1					
ANR	458144	CompoundStatement		7:33:178:178	458111	3					
ANR	458145	IfStatement	if ( mask & ( 1 << i ) )		458111	0					
ANR	458146	Condition	mask & ( 1 << i )	138:6:6044:6056	458111	0	True				
ANR	458147	BitAndExpression	mask & ( 1 << i )		458111	0		&			
ANR	458148	Identifier	mask		458111	0					
ANR	458149	ShiftExpression	1 << i		458111	1		<<			
ANR	458150	PrimaryExpression	1		458111	0					
ANR	458151	Identifier	i		458111	1					
ANR	458152	CompoundStatement		9:21:248:248	458111	1					
ANR	458153	IfStatement	if ( ( ( mask & ( 1 << i ) ) & data ) != 0 )		458111	0					
ANR	458154	Condition	( ( mask & ( 1 << i ) ) & data ) != 0	142:7:6228:6256	458111	0	True				
ANR	458155	EqualityExpression	( ( mask & ( 1 << i ) ) & data ) != 0		458111	0		!=			
ANR	458156	BitAndExpression	( mask & ( 1 << i ) ) & data		458111	0		&			
ANR	458157	BitAndExpression	mask & ( 1 << i )		458111	0		&			
ANR	458158	Identifier	mask		458111	0					
ANR	458159	ShiftExpression	1 << i		458111	1		<<			
ANR	458160	PrimaryExpression	1		458111	0					
ANR	458161	Identifier	i		458111	1					
ANR	458162	Identifier	data		458111	1					
ANR	458163	PrimaryExpression	0		458111	1					
ANR	458164	ExpressionStatement	result |= ( 1 << j )	143:4:6263:6279	458111	1	True				
ANR	458165	AssignmentExpression	result |= ( 1 << j )		458111	0		|=			
ANR	458166	Identifier	result		458111	0					
ANR	458167	ShiftExpression	1 << j		458111	1		<<			
ANR	458168	PrimaryExpression	1		458111	0					
ANR	458169	Identifier	j		458111	1					
ANR	458170	ExpressionStatement	j ++	145:3:6333:6336	458111	1	True				
ANR	458171	PostIncDecOperationExpression	j ++		458111	0					
ANR	458172	Identifier	j		458111	0					
ANR	458173	IncDec	++		458111	1					
ANR	458174	ReturnStatement	return result ;	149:1:6348:6361	458111	3	True				
ANR	458175	Identifier	result		458111	0					
ANR	458176	ReturnType	static uint16_t		458111	1					
ANR	458177	Identifier	extractDataFromMask		458111	2					
ANR	458178	ParameterList	"uint16_t data , uint16_t mask"		458111	3					
ANR	458179	Parameter	uint16_t data	130:36:5780:5792	458111	0	True				
ANR	458180	ParameterType	uint16_t		458111	0					
ANR	458181	Identifier	data		458111	1					
ANR	458182	Parameter	uint16_t mask	130:51:5795:5807	458111	1	True				
ANR	458183	ParameterType	uint16_t		458111	0					
ANR	458184	Identifier	mask		458111	1					
ANR	458185	CFGEntryNode	ENTRY		458111		True				
ANR	458186	CFGExitNode	EXIT		458111		True				
ANR	458187	Symbol	result		458111						
ANR	458188	Symbol	data		458111						
ANR	458189	Symbol	i		458111						
ANR	458190	Symbol	j		458111						
ANR	458191	Symbol	mask		458111						
ANR	458192	Function	lookupInstruction	156:0:6612:8555							
ANR	458193	FunctionDef	"lookupInstruction (uint16_t opcode , int offset)"		458192	0					
ANR	458194	CompoundStatement		156:58:6670:8555	458192	0					
ANR	458195	IdentifierDeclStatement	"uint16_t opcodeSearch , operandTemp ;"	157:1:6673:6707	458192	0	True				
ANR	458196	IdentifierDecl	opcodeSearch		458192	0					
ANR	458197	IdentifierDeclType	uint16_t		458192	0					
ANR	458198	Identifier	opcodeSearch		458192	1					
ANR	458199	IdentifierDecl	operandTemp		458192	1					
ANR	458200	IdentifierDeclType	uint16_t		458192	0					
ANR	458201	Identifier	operandTemp		458192	1					
ANR	458202	IdentifierDeclStatement	"int insidx , ghostRegisterConfirmed , i , j ;"	158:1:6710:6750	458192	1	True				
ANR	458203	IdentifierDecl	insidx		458192	0					
ANR	458204	IdentifierDeclType	int		458192	0					
ANR	458205	Identifier	insidx		458192	1					
ANR	458206	IdentifierDecl	ghostRegisterConfirmed		458192	1					
ANR	458207	IdentifierDeclType	int		458192	0					
ANR	458208	Identifier	ghostRegisterConfirmed		458192	1					
ANR	458209	IdentifierDecl	i		458192	2					
ANR	458210	IdentifierDeclType	int		458192	0					
ANR	458211	Identifier	i		458192	1					
ANR	458212	IdentifierDecl	j		458192	3					
ANR	458213	IdentifierDeclType	int		458192	0					
ANR	458214	Identifier	j		458192	1					
ANR	458215	ForStatement	for ( insidx = offset ; insidx < AVR_TOTAL_INSTRUCTIONS ; insidx ++ )		458192	2					
ANR	458216	ForInit	insidx = offset ;	160:6:6760:6775	458192	0	True				
ANR	458217	AssignmentExpression	insidx = offset		458192	0		=			
ANR	458218	Identifier	insidx		458192	0					
ANR	458219	Identifier	offset		458192	1					
ANR	458220	Condition	insidx < AVR_TOTAL_INSTRUCTIONS	160:23:6777:6807	458192	1	True				
ANR	458221	RelationalExpression	insidx < AVR_TOTAL_INSTRUCTIONS		458192	0		<			
ANR	458222	Identifier	insidx		458192	0					
ANR	458223	Identifier	AVR_TOTAL_INSTRUCTIONS		458192	1					
ANR	458224	PostIncDecOperationExpression	insidx ++	160:56:6810:6817	458192	2	True				
ANR	458225	Identifier	insidx		458192	0					
ANR	458226	IncDec	++		458192	1					
ANR	458227	CompoundStatement		5:66:149:149	458192	3					
ANR	458228	ExpressionStatement	opcodeSearch = opcode	161:2:6824:6845	458192	0	True				
ANR	458229	AssignmentExpression	opcodeSearch = opcode		458192	0		=			
ANR	458230	Identifier	opcodeSearch		458192	0					
ANR	458231	Identifier	opcode		458192	1					
ANR	458232	ExpressionStatement	ghostRegisterConfirmed = 1	164:2:6996:7022	458192	1	True				
ANR	458233	AssignmentExpression	ghostRegisterConfirmed = 1		458192	0		=			
ANR	458234	Identifier	ghostRegisterConfirmed		458192	0					
ANR	458235	PrimaryExpression	1		458192	1					
ANR	458236	ForStatement	for ( i = 0 ; i < AVR_MAX_NUM_OPERANDS ; i ++ )		458192	2					
ANR	458237	ForInit	i = 0 ;	170:7:7352:7357	458192	0	True				
ANR	458238	AssignmentExpression	i = 0		458192	0		=			
ANR	458239	Identifier	i		458192	0					
ANR	458240	PrimaryExpression	0		458192	1					
ANR	458241	Condition	i < AVR_MAX_NUM_OPERANDS	170:14:7359:7382	458192	1	True				
ANR	458242	RelationalExpression	i < AVR_MAX_NUM_OPERANDS		458192	0		<			
ANR	458243	Identifier	i		458192	0					
ANR	458244	Identifier	AVR_MAX_NUM_OPERANDS		458192	1					
ANR	458245	PostIncDecOperationExpression	i ++	170:40:7385:7387	458192	2	True				
ANR	458246	Identifier	i		458192	0					
ANR	458247	IncDec	++		458192	1					
ANR	458248	CompoundStatement		15:45:719:719	458192	3					
ANR	458249	IfStatement	if ( instructionSet [ insidx ] . operandTypes [ i ] == OPERAND_REGISTER_GHOST )		458192	0					
ANR	458250	Condition	instructionSet [ insidx ] . operandTypes [ i ] == OPERAND_REGISTER_GHOST	171:7:7399:7462	458192	0	True				
ANR	458251	EqualityExpression	instructionSet [ insidx ] . operandTypes [ i ] == OPERAND_REGISTER_GHOST		458192	0		==			
ANR	458252	ArrayIndexing	instructionSet [ insidx ] . operandTypes [ i ]		458192	0					
ANR	458253	MemberAccess	instructionSet [ insidx ] . operandTypes		458192	0					
ANR	458254	ArrayIndexing	instructionSet [ insidx ]		458192	0					
ANR	458255	Identifier	instructionSet		458192	0					
ANR	458256	Identifier	insidx		458192	1					
ANR	458257	Identifier	operandTypes		458192	1					
ANR	458258	Identifier	i		458192	1					
ANR	458259	Identifier	OPERAND_REGISTER_GHOST		458192	1					
ANR	458260	CompoundStatement		16:73:794:794	458192	1					
ANR	458261	ExpressionStatement	"operandTemp = extractDataFromMask ( opcode , instructionSet [ insidx ] . operandMasks [ 0 ] )"	173:4:7504:7585	458192	0	True				
ANR	458262	AssignmentExpression	"operandTemp = extractDataFromMask ( opcode , instructionSet [ insidx ] . operandMasks [ 0 ] )"		458192	0		=			
ANR	458263	Identifier	operandTemp		458192	0					
ANR	458264	CallExpression	"extractDataFromMask ( opcode , instructionSet [ insidx ] . operandMasks [ 0 ] )"		458192	1					
ANR	458265	Callee	extractDataFromMask		458192	0					
ANR	458266	Identifier	extractDataFromMask		458192	0					
ANR	458267	ArgumentList	opcode		458192	1					
ANR	458268	Argument	opcode		458192	0					
ANR	458269	Identifier	opcode		458192	0					
ANR	458270	Argument	instructionSet [ insidx ] . operandMasks [ 0 ]		458192	1					
ANR	458271	ArrayIndexing	instructionSet [ insidx ] . operandMasks [ 0 ]		458192	0					
ANR	458272	MemberAccess	instructionSet [ insidx ] . operandMasks		458192	0					
ANR	458273	ArrayIndexing	instructionSet [ insidx ]		458192	0					
ANR	458274	Identifier	instructionSet		458192	0					
ANR	458275	Identifier	insidx		458192	1					
ANR	458276	Identifier	operandMasks		458192	1					
ANR	458277	PrimaryExpression	0		458192	1					
ANR	458278	ForStatement	for ( j = 1 ; j < AVR_MAX_NUM_OPERANDS ; j ++ )		458192	1					
ANR	458279	ForInit	j = 1 ;	175:9:7650:7655	458192	0	True				
ANR	458280	AssignmentExpression	j = 1		458192	0		=			
ANR	458281	Identifier	j		458192	0					
ANR	458282	PrimaryExpression	1		458192	1					
ANR	458283	Condition	j < AVR_MAX_NUM_OPERANDS	175:16:7657:7680	458192	1	True				
ANR	458284	RelationalExpression	j < AVR_MAX_NUM_OPERANDS		458192	0		<			
ANR	458285	Identifier	j		458192	0					
ANR	458286	Identifier	AVR_MAX_NUM_OPERANDS		458192	1					
ANR	458287	PostIncDecOperationExpression	j ++	175:42:7683:7685	458192	2	True				
ANR	458288	Identifier	j		458192	0					
ANR	458289	IncDec	++		458192	1					
ANR	458290	CompoundStatement		20:47:1017:1017	458192	3					
ANR	458291	IfStatement	"if ( extractDataFromMask ( opcode , instructionSet [ insidx ] . operandMasks [ i ] ) != operandTemp )"		458192	0					
ANR	458292	Condition	"extractDataFromMask ( opcode , instructionSet [ insidx ] . operandMasks [ i ] ) != operandTemp"	176:9:7699:7787	458192	0	True				
ANR	458293	EqualityExpression	"extractDataFromMask ( opcode , instructionSet [ insidx ] . operandMasks [ i ] ) != operandTemp"		458192	0		!=			
ANR	458294	CallExpression	"extractDataFromMask ( opcode , instructionSet [ insidx ] . operandMasks [ i ] )"		458192	0					
ANR	458295	Callee	extractDataFromMask		458192	0					
ANR	458296	Identifier	extractDataFromMask		458192	0					
ANR	458297	ArgumentList	opcode		458192	1					
ANR	458298	Argument	opcode		458192	0					
ANR	458299	Identifier	opcode		458192	0					
ANR	458300	Argument	instructionSet [ insidx ] . operandMasks [ i ]		458192	1					
ANR	458301	ArrayIndexing	instructionSet [ insidx ] . operandMasks [ i ]		458192	0					
ANR	458302	MemberAccess	instructionSet [ insidx ] . operandMasks		458192	0					
ANR	458303	ArrayIndexing	instructionSet [ insidx ]		458192	0					
ANR	458304	Identifier	instructionSet		458192	0					
ANR	458305	Identifier	insidx		458192	1					
ANR	458306	Identifier	operandMasks		458192	1					
ANR	458307	Identifier	i		458192	1					
ANR	458308	Identifier	operandTemp		458192	1					
ANR	458309	ExpressionStatement	ghostRegisterConfirmed = 0	178:6:7796:7822	458192	1	True				
ANR	458310	AssignmentExpression	ghostRegisterConfirmed = 0		458192	0		=			
ANR	458311	Identifier	ghostRegisterConfirmed		458192	0					
ANR	458312	PrimaryExpression	0		458192	1					
ANR	458313	ExpressionStatement	opcodeSearch &= ~ ( instructionSet [ insidx ] . operandMasks [ i ] )	181:3:7839:7896	458192	1	True				
ANR	458314	AssignmentExpression	opcodeSearch &= ~ ( instructionSet [ insidx ] . operandMasks [ i ] )		458192	0		&=			
ANR	458315	Identifier	opcodeSearch		458192	0					
ANR	458316	UnaryOperationExpression	~ ( instructionSet [ insidx ] . operandMasks [ i ] )		458192	1					
ANR	458317	UnaryOperator	~		458192	0					
ANR	458318	ArrayIndexing	instructionSet [ insidx ] . operandMasks [ i ]		458192	1					
ANR	458319	MemberAccess	instructionSet [ insidx ] . operandMasks		458192	0					
ANR	458320	ArrayIndexing	instructionSet [ insidx ]		458192	0					
ANR	458321	Identifier	instructionSet		458192	0					
ANR	458322	Identifier	insidx		458192	1					
ANR	458323	Identifier	operandMasks		458192	1					
ANR	458324	Identifier	i		458192	1					
ANR	458325	IfStatement	if ( ghostRegisterConfirmed == 0 )		458192	3					
ANR	458326	Condition	ghostRegisterConfirmed == 0	186:6:8135:8161	458192	0	True				
ANR	458327	EqualityExpression	ghostRegisterConfirmed == 0		458192	0		==			
ANR	458328	Identifier	ghostRegisterConfirmed		458192	0					
ANR	458329	PrimaryExpression	0		458192	1					
ANR	458330	ContinueStatement	continue ;	187:3:8167:8175	458192	1	True				
ANR	458331	IfStatement	if ( opcodeSearch == instructionSet [ insidx ] . opcodeMask )		458192	4					
ANR	458332	Condition	opcodeSearch == instructionSet [ insidx ] . opcodeMask	189:6:8184:8232	458192	0	True				
ANR	458333	EqualityExpression	opcodeSearch == instructionSet [ insidx ] . opcodeMask		458192	0		==			
ANR	458334	Identifier	opcodeSearch		458192	0					
ANR	458335	MemberAccess	instructionSet [ insidx ] . opcodeMask		458192	1					
ANR	458336	ArrayIndexing	instructionSet [ insidx ]		458192	0					
ANR	458337	Identifier	instructionSet		458192	0					
ANR	458338	Identifier	insidx		458192	1					
ANR	458339	Identifier	opcodeMask		458192	1					
ANR	458340	BreakStatement	break ;	190:3:8239:8244	458192	1	True				
ANR	458341	ReturnStatement	return insidx ;	196:1:8540:8553	458192	3	True				
ANR	458342	Identifier	insidx		458192	0					
ANR	458343	ReturnType	static int		458192	1					
ANR	458344	Identifier	lookupInstruction		458192	2					
ANR	458345	ParameterList	"uint16_t opcode , int offset"		458192	3					
ANR	458346	Parameter	uint16_t opcode	156:29:6641:6655	458192	0	True				
ANR	458347	ParameterType	uint16_t		458192	0					
ANR	458348	Identifier	opcode		458192	1					
ANR	458349	Parameter	int offset	156:46:6658:6667	458192	1	True				
ANR	458350	ParameterType	int		458192	0					
ANR	458351	Identifier	offset		458192	1					
ANR	458352	CFGEntryNode	ENTRY		458192		True				
ANR	458353	CFGExitNode	EXIT		458192		True				
ANR	458354	Symbol	extractDataFromMask		458192						
ANR	458355	Symbol	offset		458192						
ANR	458356	Symbol	opcodeSearch		458192						
ANR	458357	Symbol	OPERAND_REGISTER_GHOST		458192						
ANR	458358	Symbol	instructionSet		458192						
ANR	458359	Symbol	instructionSet [ insidx ] . operandMasks		458192						
ANR	458360	Symbol	AVR_MAX_NUM_OPERANDS		458192						
ANR	458361	Symbol	instructionSet [ insidx ] . operandTypes		458192						
ANR	458362	Symbol	* instructionSet		458192						
ANR	458363	Symbol	ghostRegisterConfirmed		458192						
ANR	458364	Symbol	i		458192						
ANR	458365	Symbol	instructionSet [ insidx ] . opcodeMask		458192						
ANR	458366	Symbol	j		458192						
ANR	458367	Symbol	opcode		458192						
ANR	458368	Symbol	* insidx		458192						
ANR	458369	Symbol	* i		458192						
ANR	458370	Symbol	operandTemp		458192						
ANR	458371	Symbol	* * instructionSet		458192						
ANR	458372	Symbol	* instructionSet [ insidx ] . operandTypes		458192						
ANR	458373	Symbol	AVR_TOTAL_INSTRUCTIONS		458192						
ANR	458374	Symbol	insidx		458192						
ANR	458375	Symbol	* * insidx		458192						
ANR	458376	Symbol	* instructionSet [ insidx ] . operandMasks		458192						
ANR	458377	Function	disassembleOperands	200:0:8623:12434							
ANR	458378	FunctionDef	disassembleOperands (disassembledInstruction * dInstruction)		458377	0					
ANR	458379	CompoundStatement		200:70:8693:12434	458377	0					
ANR	458380	IdentifierDeclStatement	int i ;	201:1:8696:8701	458377	0	True				
ANR	458381	IdentifierDecl	i		458377	0					
ANR	458382	IdentifierDeclType	int		458377	0					
ANR	458383	Identifier	i		458377	1					
ANR	458384	IfStatement	if ( ! dInstruction )		458377	1					
ANR	458385	Condition	! dInstruction	204:5:8742:8754	458377	0	True				
ANR	458386	UnaryOperationExpression	! dInstruction		458377	0					
ANR	458387	UnaryOperator	!		458377	0					
ANR	458388	Identifier	dInstruction		458377	1					
ANR	458389	ReturnStatement	return ERROR_INVALID_ARGUMENTS ;	205:2:8759:8789	458377	1	True				
ANR	458390	Identifier	ERROR_INVALID_ARGUMENTS		458377	0					
ANR	458391	IfStatement	if ( ! dInstruction -> instruction )		458377	2					
ANR	458392	Condition	! dInstruction -> instruction	206:5:8796:8821	458377	0	True				
ANR	458393	UnaryOperationExpression	! dInstruction -> instruction		458377	0					
ANR	458394	UnaryOperator	!		458377	0					
ANR	458395	PtrMemberAccess	dInstruction -> instruction		458377	1					
ANR	458396	Identifier	dInstruction		458377	0					
ANR	458397	Identifier	instruction		458377	1					
ANR	458398	ReturnStatement	return ERROR_INVALID_ARGUMENTS ;	207:2:8826:8856	458377	1	True				
ANR	458399	Identifier	ERROR_INVALID_ARGUMENTS		458377	0					
ANR	458400	ForStatement	for ( i = 0 ; i < dInstruction -> instruction -> numOperands ; i ++ )		458377	3					
ANR	458401	ForInit	i = 0 ;	210:6:8918:8923	458377	0	True				
ANR	458402	AssignmentExpression	i = 0		458377	0		=			
ANR	458403	Identifier	i		458377	0					
ANR	458404	PrimaryExpression	0		458377	1					
ANR	458405	Condition	i < dInstruction -> instruction -> numOperands	210:13:8925:8966	458377	1	True				
ANR	458406	RelationalExpression	i < dInstruction -> instruction -> numOperands		458377	0		<			
ANR	458407	Identifier	i		458377	0					
ANR	458408	PtrMemberAccess	dInstruction -> instruction -> numOperands		458377	1					
ANR	458409	PtrMemberAccess	dInstruction -> instruction		458377	0					
ANR	458410	Identifier	dInstruction		458377	0					
ANR	458411	Identifier	instruction		458377	1					
ANR	458412	Identifier	numOperands		458377	1					
ANR	458413	PostIncDecOperationExpression	i ++	210:57:8969:8971	458377	2	True				
ANR	458414	Identifier	i		458377	0					
ANR	458415	IncDec	++		458377	1					
ANR	458416	CompoundStatement		11:62:280:280	458377	3					
ANR	458417	SwitchStatement	switch ( dInstruction -> instruction -> operandTypes [ i ] )		458377	0					
ANR	458418	Condition	dInstruction -> instruction -> operandTypes [ i ]	211:10:8986:9027	458377	0	True				
ANR	458419	ArrayIndexing	dInstruction -> instruction -> operandTypes [ i ]		458377	0					
ANR	458420	PtrMemberAccess	dInstruction -> instruction -> operandTypes		458377	0					
ANR	458421	PtrMemberAccess	dInstruction -> instruction		458377	0					
ANR	458422	Identifier	dInstruction		458377	0					
ANR	458423	Identifier	instruction		458377	1					
ANR	458424	Identifier	operandTypes		458377	1					
ANR	458425	Identifier	i		458377	1					
ANR	458426	CompoundStatement		12:54:336:336	458377	1					
ANR	458427	Label	case OPERAND_BRANCH_ADDRESS :	212:2:9034:9061	458377	0	True				
ANR	458428	Identifier	OPERAND_BRANCH_ADDRESS		458377	0					
ANR	458429	ExpressionStatement	dInstruction -> operands [ i ] <<= 1	227:3:9904:9935	458377	1	True				
ANR	458430	AssignmentExpression	dInstruction -> operands [ i ] <<= 1		458377	0		<<=			
ANR	458431	ArrayIndexing	dInstruction -> operands [ i ]		458377	0					
ANR	458432	PtrMemberAccess	dInstruction -> operands		458377	0					
ANR	458433	Identifier	dInstruction		458377	0					
ANR	458434	Identifier	operands		458377	1					
ANR	458435	Identifier	i		458377	1					
ANR	458436	PrimaryExpression	1		458377	1					
ANR	458437	IfStatement	if ( dInstruction -> operands [ i ] & 0x80 )		458377	2					
ANR	458438	Condition	dInstruction -> operands [ i ] & 0x80	228:7:9944:9975	458377	0	True				
ANR	458439	BitAndExpression	dInstruction -> operands [ i ] & 0x80		458377	0		&			
ANR	458440	ArrayIndexing	dInstruction -> operands [ i ]		458377	0					
ANR	458441	PtrMemberAccess	dInstruction -> operands		458377	0					
ANR	458442	Identifier	dInstruction		458377	0					
ANR	458443	Identifier	operands		458377	1					
ANR	458444	Identifier	i		458377	1					
ANR	458445	PrimaryExpression	0x80		458377	1					
ANR	458446	CompoundStatement		29:41:1284:1284	458377	1					
ANR	458447	ExpressionStatement	dInstruction -> operands [ i ] = ( ~dInstruction -> operands [ i ] + 1 ) & 0x7F	233:4:10242:10305	458377	0	True				
ANR	458448	AssignmentExpression	dInstruction -> operands [ i ] = ( ~dInstruction -> operands [ i ] + 1 ) & 0x7F		458377	0		=			
ANR	458449	ArrayIndexing	dInstruction -> operands [ i ]		458377	0					
ANR	458450	PtrMemberAccess	dInstruction -> operands		458377	0					
ANR	458451	Identifier	dInstruction		458377	0					
ANR	458452	Identifier	operands		458377	1					
ANR	458453	Identifier	i		458377	1					
ANR	458454	BitAndExpression	( ~dInstruction -> operands [ i ] + 1 ) & 0x7F		458377	1		&			
ANR	458455	AdditiveExpression	~dInstruction -> operands [ i ] + 1		458377	0		+			
ANR	458456	ArrayIndexing	~dInstruction -> operands [ i ]		458377	0					
ANR	458457	PtrMemberAccess	~dInstruction -> operands		458377	0					
ANR	458458	Identifier	~dInstruction		458377	0					
ANR	458459	Identifier	operands		458377	1					
ANR	458460	Identifier	i		458377	1					
ANR	458461	PrimaryExpression	1		458377	1					
ANR	458462	PrimaryExpression	0x7F		458377	1					
ANR	458463	ExpressionStatement	dInstruction -> operands [ i ] = - dInstruction -> operands [ i ] + 2	234:4:10311:10367	458377	1	True				
ANR	458464	AssignmentExpression	dInstruction -> operands [ i ] = - dInstruction -> operands [ i ] + 2		458377	0		=			
ANR	458465	ArrayIndexing	dInstruction -> operands [ i ]		458377	0					
ANR	458466	PtrMemberAccess	dInstruction -> operands		458377	0					
ANR	458467	Identifier	dInstruction		458377	0					
ANR	458468	Identifier	operands		458377	1					
ANR	458469	Identifier	i		458377	1					
ANR	458470	AdditiveExpression	- dInstruction -> operands [ i ] + 2		458377	1		+			
ANR	458471	UnaryOperationExpression	- dInstruction -> operands [ i ]		458377	0					
ANR	458472	UnaryOperator	-		458377	0					
ANR	458473	ArrayIndexing	dInstruction -> operands [ i ]		458377	1					
ANR	458474	PtrMemberAccess	dInstruction -> operands		458377	0					
ANR	458475	Identifier	dInstruction		458377	0					
ANR	458476	Identifier	operands		458377	1					
ANR	458477	Identifier	i		458377	1					
ANR	458478	PrimaryExpression	2		458377	1					
ANR	458479	ElseStatement	else		458377	0					
ANR	458480	CompoundStatement		36:10:1685:1685	458377	0					
ANR	458481	ExpressionStatement	dInstruction -> operands [ i ] += 2	236:4:10385:10415	458377	0	True				
ANR	458482	AssignmentExpression	dInstruction -> operands [ i ] += 2		458377	0		+=			
ANR	458483	ArrayIndexing	dInstruction -> operands [ i ]		458377	0					
ANR	458484	PtrMemberAccess	dInstruction -> operands		458377	0					
ANR	458485	Identifier	dInstruction		458377	0					
ANR	458486	Identifier	operands		458377	1					
ANR	458487	Identifier	i		458377	1					
ANR	458488	PrimaryExpression	2		458377	1					
ANR	458489	BreakStatement	break ;	238:3:10425:10430	458377	3	True				
ANR	458490	Label	case OPERAND_RELATIVE_ADDRESS :	239:2:10434:10463	458377	4	True				
ANR	458491	Identifier	OPERAND_RELATIVE_ADDRESS		458377	0					
ANR	458492	ExpressionStatement	dInstruction -> operands [ i ] <<= 1	254:3:11339:11370	458377	5	True				
ANR	458493	AssignmentExpression	dInstruction -> operands [ i ] <<= 1		458377	0		<<=			
ANR	458494	ArrayIndexing	dInstruction -> operands [ i ]		458377	0					
ANR	458495	PtrMemberAccess	dInstruction -> operands		458377	0					
ANR	458496	Identifier	dInstruction		458377	0					
ANR	458497	Identifier	operands		458377	1					
ANR	458498	Identifier	i		458377	1					
ANR	458499	PrimaryExpression	1		458377	1					
ANR	458500	IfStatement	if ( dInstruction -> operands [ i ] & 0x1000 )		458377	6					
ANR	458501	Condition	dInstruction -> operands [ i ] & 0x1000	255:7:11379:11412	458377	0	True				
ANR	458502	BitAndExpression	dInstruction -> operands [ i ] & 0x1000		458377	0		&			
ANR	458503	ArrayIndexing	dInstruction -> operands [ i ]		458377	0					
ANR	458504	PtrMemberAccess	dInstruction -> operands		458377	0					
ANR	458505	Identifier	dInstruction		458377	0					
ANR	458506	Identifier	operands		458377	1					
ANR	458507	Identifier	i		458377	1					
ANR	458508	PrimaryExpression	0x1000		458377	1					
ANR	458509	CompoundStatement		61:4:2987:3038	458377	1					
ANR	458510	IdentifierDeclStatement	short val = ( ( ~dInstruction -> operands [ i ] ) ) & 0xFFF ;	260:4:11681:11732	458377	0	True				
ANR	458511	IdentifierDecl	val = ( ( ~dInstruction -> operands [ i ] ) ) & 0xFFF		458377	0					
ANR	458512	IdentifierDeclType	short		458377	0					
ANR	458513	Identifier	val		458377	1					
ANR	458514	AssignmentExpression	val = ( ( ~dInstruction -> operands [ i ] ) ) & 0xFFF		458377	2		=			
ANR	458515	Identifier	val		458377	0					
ANR	458516	BitAndExpression	( ( ~dInstruction -> operands [ i ] ) ) & 0xFFF		458377	1		&			
ANR	458517	ArrayIndexing	~dInstruction -> operands [ i ]		458377	0					
ANR	458518	PtrMemberAccess	~dInstruction -> operands		458377	0					
ANR	458519	Identifier	~dInstruction		458377	0					
ANR	458520	Identifier	operands		458377	1					
ANR	458521	Identifier	i		458377	1					
ANR	458522	PrimaryExpression	0xFFF		458377	1					
ANR	458523	ExpressionStatement	dInstruction -> operands [ i ] = - val + 1	262:4:11808:11844	458377	1	True				
ANR	458524	AssignmentExpression	dInstruction -> operands [ i ] = - val + 1		458377	0		=			
ANR	458525	ArrayIndexing	dInstruction -> operands [ i ]		458377	0					
ANR	458526	PtrMemberAccess	dInstruction -> operands		458377	0					
ANR	458527	Identifier	dInstruction		458377	0					
ANR	458528	Identifier	operands		458377	1					
ANR	458529	Identifier	i		458377	1					
ANR	458530	AdditiveExpression	- val + 1		458377	1		+			
ANR	458531	UnaryOperationExpression	- val		458377	0					
ANR	458532	UnaryOperator	-		458377	0					
ANR	458533	Identifier	val		458377	1					
ANR	458534	PrimaryExpression	1		458377	1					
ANR	458535	ElseStatement	else		458377	0					
ANR	458536	CompoundStatement		65:10:3200:3200	458377	0					
ANR	458537	ExpressionStatement	dInstruction -> operands [ i ] += 2	265:4:11900:11930	458377	0	True				
ANR	458538	AssignmentExpression	dInstruction -> operands [ i ] += 2		458377	0		+=			
ANR	458539	ArrayIndexing	dInstruction -> operands [ i ]		458377	0					
ANR	458540	PtrMemberAccess	dInstruction -> operands		458377	0					
ANR	458541	Identifier	dInstruction		458377	0					
ANR	458542	Identifier	operands		458377	1					
ANR	458543	Identifier	i		458377	1					
ANR	458544	PrimaryExpression	2		458377	1					
ANR	458545	BreakStatement	break ;	267:3:11940:11945	458377	7	True				
ANR	458546	Label	case OPERAND_REGISTER_STARTR16 :	268:2:11949:11979	458377	8	True				
ANR	458547	Identifier	OPERAND_REGISTER_STARTR16		458377	0					
ANR	458548	ExpressionStatement	dInstruction -> operands [ i ] = 16 + dInstruction -> operands [ i ]	269:3:11984:12043	458377	9	True				
ANR	458549	AssignmentExpression	dInstruction -> operands [ i ] = 16 + dInstruction -> operands [ i ]		458377	0		=			
ANR	458550	ArrayIndexing	dInstruction -> operands [ i ]		458377	0					
ANR	458551	PtrMemberAccess	dInstruction -> operands		458377	0					
ANR	458552	Identifier	dInstruction		458377	0					
ANR	458553	Identifier	operands		458377	1					
ANR	458554	Identifier	i		458377	1					
ANR	458555	AdditiveExpression	16 + dInstruction -> operands [ i ]		458377	1		+			
ANR	458556	PrimaryExpression	16		458377	0					
ANR	458557	ArrayIndexing	dInstruction -> operands [ i ]		458377	1					
ANR	458558	PtrMemberAccess	dInstruction -> operands		458377	0					
ANR	458559	Identifier	dInstruction		458377	0					
ANR	458560	Identifier	operands		458377	1					
ANR	458561	Identifier	i		458377	1					
ANR	458562	BreakStatement	break ;	270:3:12048:12053	458377	10	True				
ANR	458563	Label	case OPERAND_REGISTER_EVEN_PAIR :	271:2:12057:12088	458377	11	True				
ANR	458564	Identifier	OPERAND_REGISTER_EVEN_PAIR		458377	0					
ANR	458565	ExpressionStatement	dInstruction -> operands [ i ] = dInstruction -> operands [ i ] * 2	272:3:12093:12150	458377	12	True				
ANR	458566	AssignmentExpression	dInstruction -> operands [ i ] = dInstruction -> operands [ i ] * 2		458377	0		=			
ANR	458567	ArrayIndexing	dInstruction -> operands [ i ]		458377	0					
ANR	458568	PtrMemberAccess	dInstruction -> operands		458377	0					
ANR	458569	Identifier	dInstruction		458377	0					
ANR	458570	Identifier	operands		458377	1					
ANR	458571	Identifier	i		458377	1					
ANR	458572	MultiplicativeExpression	dInstruction -> operands [ i ] * 2		458377	1		*			
ANR	458573	ArrayIndexing	dInstruction -> operands [ i ]		458377	0					
ANR	458574	PtrMemberAccess	dInstruction -> operands		458377	0					
ANR	458575	Identifier	dInstruction		458377	0					
ANR	458576	Identifier	operands		458377	1					
ANR	458577	Identifier	i		458377	1					
ANR	458578	PrimaryExpression	2		458377	1					
ANR	458579	BreakStatement	break ;	273:3:12155:12160	458377	13	True				
ANR	458580	Label	case OPERAND_REGISTER_EVEN_PAIR_STARTR24 :	274:2:12164:12204	458377	14	True				
ANR	458581	Identifier	OPERAND_REGISTER_EVEN_PAIR_STARTR24		458377	0					
ANR	458582	ExpressionStatement	dInstruction -> operands [ i ] = 24 + ( dInstruction -> operands [ i ] * 2 )	275:3:12209:12273	458377	15	True				
ANR	458583	AssignmentExpression	dInstruction -> operands [ i ] = 24 + ( dInstruction -> operands [ i ] * 2 )		458377	0		=			
ANR	458584	ArrayIndexing	dInstruction -> operands [ i ]		458377	0					
ANR	458585	PtrMemberAccess	dInstruction -> operands		458377	0					
ANR	458586	Identifier	dInstruction		458377	0					
ANR	458587	Identifier	operands		458377	1					
ANR	458588	Identifier	i		458377	1					
ANR	458589	AdditiveExpression	24 + ( dInstruction -> operands [ i ] * 2 )		458377	1		+			
ANR	458590	PrimaryExpression	24		458377	0					
ANR	458591	MultiplicativeExpression	dInstruction -> operands [ i ] * 2		458377	1		*			
ANR	458592	ArrayIndexing	dInstruction -> operands [ i ]		458377	0					
ANR	458593	PtrMemberAccess	dInstruction -> operands		458377	0					
ANR	458594	Identifier	dInstruction		458377	0					
ANR	458595	Identifier	operands		458377	1					
ANR	458596	Identifier	i		458377	1					
ANR	458597	PrimaryExpression	2		458377	1					
ANR	458598	BreakStatement	break ;	276:3:12278:12283	458377	16	True				
ANR	458599	Label	case OPERAND_COMPLEMENTED_DATA :	277:2:12287:12317	458377	17	True				
ANR	458600	Identifier	OPERAND_COMPLEMENTED_DATA		458377	0					
ANR	458601	ExpressionStatement	dInstruction -> operands [ i ] = ~dInstruction -> operands [ i ] & 0xFF	278:3:12322:12383	458377	18	True				
ANR	458602	AssignmentExpression	dInstruction -> operands [ i ] = ~dInstruction -> operands [ i ] & 0xFF		458377	0		=			
ANR	458603	ArrayIndexing	dInstruction -> operands [ i ]		458377	0					
ANR	458604	PtrMemberAccess	dInstruction -> operands		458377	0					
ANR	458605	Identifier	dInstruction		458377	0					
ANR	458606	Identifier	operands		458377	1					
ANR	458607	Identifier	i		458377	1					
ANR	458608	BitAndExpression	~dInstruction -> operands [ i ] & 0xFF		458377	1		&			
ANR	458609	ArrayIndexing	~dInstruction -> operands [ i ]		458377	0					
ANR	458610	PtrMemberAccess	~dInstruction -> operands		458377	0					
ANR	458611	Identifier	~dInstruction		458377	0					
ANR	458612	Identifier	operands		458377	1					
ANR	458613	Identifier	i		458377	1					
ANR	458614	PrimaryExpression	0xFF		458377	1					
ANR	458615	BreakStatement	break ;	279:3:12388:12393	458377	19	True				
ANR	458616	Label	default :	280:2:12397:12404	458377	20	True				
ANR	458617	Identifier	default		458377	0					
ANR	458618	BreakStatement	break ;	281:3:12409:12414	458377	21	True				
ANR	458619	ReturnStatement	return 0 ;	284:1:12424:12432	458377	4	True				
ANR	458620	PrimaryExpression	0		458377	0					
ANR	458621	ReturnType	static int		458377	1					
ANR	458622	Identifier	disassembleOperands		458377	2					
ANR	458623	ParameterList	disassembledInstruction * dInstruction		458377	3					
ANR	458624	Parameter	disassembledInstruction * dInstruction	200:31:8654:8690	458377	0	True				
ANR	458625	ParameterType	disassembledInstruction *		458377	0					
ANR	458626	Identifier	dInstruction		458377	1					
ANR	458627	CFGEntryNode	ENTRY		458377		True				
ANR	458628	CFGExitNode	EXIT		458377		True				
ANR	458629	Symbol	val		458377						
ANR	458630	Symbol	ERROR_INVALID_ARGUMENTS		458377						
ANR	458631	Symbol	dInstruction -> instruction -> numOperands		458377						
ANR	458632	Symbol	i		458377						
ANR	458633	Symbol	* dInstruction		458377						
ANR	458634	Symbol	* * ~dInstruction		458377						
ANR	458635	Symbol	~dInstruction		458377						
ANR	458636	Symbol	dInstruction		458377						
ANR	458637	Symbol	* dInstruction -> instruction -> operandTypes		458377						
ANR	458638	Symbol	* ~dInstruction		458377						
ANR	458639	Symbol	* * dInstruction		458377						
ANR	458640	Symbol	dInstruction -> instruction -> operandTypes		458377						
ANR	458641	Symbol	* i		458377						
ANR	458642	Symbol	* dInstruction -> instruction		458377						
ANR	458643	Symbol	dInstruction -> operands		458377						
ANR	458644	Symbol	dInstruction -> instruction		458377						
ANR	458645	Symbol	* ~dInstruction -> operands		458377						
ANR	458646	Symbol	* * dInstruction -> instruction		458377						
ANR	458647	Symbol	* * * dInstruction		458377						
ANR	458648	Symbol	~dInstruction -> operands		458377						
ANR	458649	Symbol	* dInstruction -> operands		458377						
