command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1089458	File	data/converged/CVE-2019-16718~_radare2/core.c								
ANR	1089459	DeclStmt									
ANR	1089460	Decl							sdb	sdb ( r_core )	R_LIB_VERSION
ANR	1089461	DeclStmt									
ANR	1089462	Decl							ut64	ut64 [ R_CORE_ASMQJMPS_LEN_LETTERS - 1 ]	letter_divs
ANR	1089463	DeclStmt									
ANR	1089464	Decl							extern bool	"extern bool ( RCore * core , const char * name )"	r_core_is_project
ANR	1089465	Function	on_fcn_new	24:0:611:953							
ANR	1089466	FunctionDef	"on_fcn_new (RAnal * _anal , void * _user , RAnalFunction * fcn)"		1089465	0					
ANR	1089467	CompoundStatement		24:69:680:953	1089465	0					
ANR	1089468	IdentifierDeclStatement	RCore * core = ( RCore * ) _user ;	25:1:683:710	1089465	0	True				
ANR	1089469	IdentifierDecl	* core = ( RCore * ) _user		1089465	0					
ANR	1089470	IdentifierDeclType	RCore *		1089465	0					
ANR	1089471	Identifier	core		1089465	1					
ANR	1089472	AssignmentExpression	* core = ( RCore * ) _user		1089465	2		=			
ANR	1089473	Identifier	core		1089465	0					
ANR	1089474	CastExpression	( RCore * ) _user		1089465	1					
ANR	1089475	CastTarget	RCore *		1089465	0					
ANR	1089476	Identifier	_user		1089465	1					
ANR	1089477	IdentifierDeclStatement	"const char * cmd = r_config_get ( core -> config , ""cmd.fcn.new"" ) ;"	26:1:713:773	1089465	1	True				
ANR	1089478	IdentifierDecl	"* cmd = r_config_get ( core -> config , ""cmd.fcn.new"" )"		1089465	0					
ANR	1089479	IdentifierDeclType	const char *		1089465	0					
ANR	1089480	Identifier	cmd		1089465	1					
ANR	1089481	AssignmentExpression	"* cmd = r_config_get ( core -> config , ""cmd.fcn.new"" )"		1089465	2		=			
ANR	1089482	Identifier	cmd		1089465	0					
ANR	1089483	CallExpression	"r_config_get ( core -> config , ""cmd.fcn.new"" )"		1089465	1					
ANR	1089484	Callee	r_config_get		1089465	0					
ANR	1089485	Identifier	r_config_get		1089465	0					
ANR	1089486	ArgumentList	core -> config		1089465	1					
ANR	1089487	Argument	core -> config		1089465	0					
ANR	1089488	PtrMemberAccess	core -> config		1089465	0					
ANR	1089489	Identifier	core		1089465	0					
ANR	1089490	Identifier	config		1089465	1					
ANR	1089491	Argument	"""cmd.fcn.new"""		1089465	1					
ANR	1089492	PrimaryExpression	"""cmd.fcn.new"""		1089465	0					
ANR	1089493	IfStatement	if ( cmd && * cmd )		1089465	2					
ANR	1089494	Condition	cmd && * cmd	27:5:780:790	1089465	0	True				
ANR	1089495	AndExpression	cmd && * cmd		1089465	0		&&			
ANR	1089496	Identifier	cmd		1089465	0					
ANR	1089497	UnaryOperationExpression	* cmd		1089465	1					
ANR	1089498	UnaryOperator	*		1089465	0					
ANR	1089499	Identifier	cmd		1089465	1					
ANR	1089500	CompoundStatement		6:2:145:166	1089465	1					
ANR	1089501	IdentifierDeclStatement	ut64 oaddr = core -> offset ;	28:2:797:822	1089465	0	True				
ANR	1089502	IdentifierDecl	oaddr = core -> offset		1089465	0					
ANR	1089503	IdentifierDeclType	ut64		1089465	0					
ANR	1089504	Identifier	oaddr		1089465	1					
ANR	1089505	AssignmentExpression	oaddr = core -> offset		1089465	2		=			
ANR	1089506	Identifier	oaddr		1089465	0					
ANR	1089507	PtrMemberAccess	core -> offset		1089465	1					
ANR	1089508	Identifier	core		1089465	0					
ANR	1089509	Identifier	offset		1089465	1					
ANR	1089510	IdentifierDeclStatement	ut64 addr = fcn -> addr ;	29:2:826:847	1089465	1	True				
ANR	1089511	IdentifierDecl	addr = fcn -> addr		1089465	0					
ANR	1089512	IdentifierDeclType	ut64		1089465	0					
ANR	1089513	Identifier	addr		1089465	1					
ANR	1089514	AssignmentExpression	addr = fcn -> addr		1089465	2		=			
ANR	1089515	Identifier	addr		1089465	0					
ANR	1089516	PtrMemberAccess	fcn -> addr		1089465	1					
ANR	1089517	Identifier	fcn		1089465	0					
ANR	1089518	Identifier	addr		1089465	1					
ANR	1089519	ExpressionStatement	"r_core_seek ( core , addr , 1 )"	30:2:851:878	1089465	2	True				
ANR	1089520	CallExpression	"r_core_seek ( core , addr , 1 )"		1089465	0					
ANR	1089521	Callee	r_core_seek		1089465	0					
ANR	1089522	Identifier	r_core_seek		1089465	0					
ANR	1089523	ArgumentList	core		1089465	1					
ANR	1089524	Argument	core		1089465	0					
ANR	1089525	Identifier	core		1089465	0					
ANR	1089526	Argument	addr		1089465	1					
ANR	1089527	Identifier	addr		1089465	0					
ANR	1089528	Argument	1		1089465	2					
ANR	1089529	PrimaryExpression	1		1089465	0					
ANR	1089530	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	31:2:882:905	1089465	3	True				
ANR	1089531	CallExpression	"r_core_cmd0 ( core , cmd )"		1089465	0					
ANR	1089532	Callee	r_core_cmd0		1089465	0					
ANR	1089533	Identifier	r_core_cmd0		1089465	0					
ANR	1089534	ArgumentList	core		1089465	1					
ANR	1089535	Argument	core		1089465	0					
ANR	1089536	Identifier	core		1089465	0					
ANR	1089537	Argument	cmd		1089465	1					
ANR	1089538	Identifier	cmd		1089465	0					
ANR	1089539	ExpressionStatement	"r_core_seek ( core , oaddr , 1 )"	32:2:909:937	1089465	4	True				
ANR	1089540	CallExpression	"r_core_seek ( core , oaddr , 1 )"		1089465	0					
ANR	1089541	Callee	r_core_seek		1089465	0					
ANR	1089542	Identifier	r_core_seek		1089465	0					
ANR	1089543	ArgumentList	core		1089465	1					
ANR	1089544	Argument	core		1089465	0					
ANR	1089545	Identifier	core		1089465	0					
ANR	1089546	Argument	oaddr		1089465	1					
ANR	1089547	Identifier	oaddr		1089465	0					
ANR	1089548	Argument	1		1089465	2					
ANR	1089549	PrimaryExpression	1		1089465	0					
ANR	1089550	ReturnStatement	return 0 ;	34:1:943:951	1089465	3	True				
ANR	1089551	PrimaryExpression	0		1089465	0					
ANR	1089552	ReturnType	static int		1089465	1					
ANR	1089553	Identifier	on_fcn_new		1089465	2					
ANR	1089554	ParameterList	"RAnal * _anal , void * _user , RAnalFunction * fcn"		1089465	3					
ANR	1089555	Parameter	RAnal * _anal	24:22:633:644	1089465	0	True				
ANR	1089556	ParameterType	RAnal *		1089465	0					
ANR	1089557	Identifier	_anal		1089465	1					
ANR	1089558	Parameter	void * _user	24:36:647:657	1089465	1	True				
ANR	1089559	ParameterType	void *		1089465	0					
ANR	1089560	Identifier	_user		1089465	1					
ANR	1089561	Parameter	RAnalFunction * fcn	24:49:660:677	1089465	2	True				
ANR	1089562	ParameterType	RAnalFunction *		1089465	0					
ANR	1089563	Identifier	fcn		1089465	1					
ANR	1089564	CFGEntryNode	ENTRY		1089465		True				
ANR	1089565	CFGExitNode	EXIT		1089465		True				
ANR	1089566	Symbol	core -> config		1089465						
ANR	1089567	Symbol	* fcn		1089465						
ANR	1089568	Symbol	r_config_get		1089465						
ANR	1089569	Symbol	* core		1089465						
ANR	1089570	Symbol	core -> offset		1089465						
ANR	1089571	Symbol	oaddr		1089465						
ANR	1089572	Symbol	fcn		1089465						
ANR	1089573	Symbol	core		1089465						
ANR	1089574	Symbol	fcn -> addr		1089465						
ANR	1089575	Symbol	_user		1089465						
ANR	1089576	Symbol	cmd		1089465						
ANR	1089577	Symbol	* cmd		1089465						
ANR	1089578	Symbol	addr		1089465						
ANR	1089579	Symbol	_anal		1089465						
ANR	1089580	Function	on_fcn_delete	37:0:956:1305							
ANR	1089581	FunctionDef	"on_fcn_delete (RAnal * _anal , void * _user , RAnalFunction * fcn)"		1089580	0					
ANR	1089582	CompoundStatement		37:73:1029:1305	1089580	0					
ANR	1089583	IdentifierDeclStatement	RCore * core = ( RCore * ) _user ;	38:1:1032:1059	1089580	0	True				
ANR	1089584	IdentifierDecl	* core = ( RCore * ) _user		1089580	0					
ANR	1089585	IdentifierDeclType	RCore *		1089580	0					
ANR	1089586	Identifier	core		1089580	1					
ANR	1089587	AssignmentExpression	* core = ( RCore * ) _user		1089580	2		=			
ANR	1089588	Identifier	core		1089580	0					
ANR	1089589	CastExpression	( RCore * ) _user		1089580	1					
ANR	1089590	CastTarget	RCore *		1089580	0					
ANR	1089591	Identifier	_user		1089580	1					
ANR	1089592	IdentifierDeclStatement	"const char * cmd = r_config_get ( core -> config , ""cmd.fcn.delete"" ) ;"	39:1:1062:1125	1089580	1	True				
ANR	1089593	IdentifierDecl	"* cmd = r_config_get ( core -> config , ""cmd.fcn.delete"" )"		1089580	0					
ANR	1089594	IdentifierDeclType	const char *		1089580	0					
ANR	1089595	Identifier	cmd		1089580	1					
ANR	1089596	AssignmentExpression	"* cmd = r_config_get ( core -> config , ""cmd.fcn.delete"" )"		1089580	2		=			
ANR	1089597	Identifier	cmd		1089580	0					
ANR	1089598	CallExpression	"r_config_get ( core -> config , ""cmd.fcn.delete"" )"		1089580	1					
ANR	1089599	Callee	r_config_get		1089580	0					
ANR	1089600	Identifier	r_config_get		1089580	0					
ANR	1089601	ArgumentList	core -> config		1089580	1					
ANR	1089602	Argument	core -> config		1089580	0					
ANR	1089603	PtrMemberAccess	core -> config		1089580	0					
ANR	1089604	Identifier	core		1089580	0					
ANR	1089605	Identifier	config		1089580	1					
ANR	1089606	Argument	"""cmd.fcn.delete"""		1089580	1					
ANR	1089607	PrimaryExpression	"""cmd.fcn.delete"""		1089580	0					
ANR	1089608	IfStatement	if ( cmd && * cmd )		1089580	2					
ANR	1089609	Condition	cmd && * cmd	40:5:1132:1142	1089580	0	True				
ANR	1089610	AndExpression	cmd && * cmd		1089580	0		&&			
ANR	1089611	Identifier	cmd		1089580	0					
ANR	1089612	UnaryOperationExpression	* cmd		1089580	1					
ANR	1089613	UnaryOperator	*		1089580	0					
ANR	1089614	Identifier	cmd		1089580	1					
ANR	1089615	CompoundStatement		6:2:148:169	1089580	1					
ANR	1089616	IdentifierDeclStatement	ut64 oaddr = core -> offset ;	41:2:1149:1174	1089580	0	True				
ANR	1089617	IdentifierDecl	oaddr = core -> offset		1089580	0					
ANR	1089618	IdentifierDeclType	ut64		1089580	0					
ANR	1089619	Identifier	oaddr		1089580	1					
ANR	1089620	AssignmentExpression	oaddr = core -> offset		1089580	2		=			
ANR	1089621	Identifier	oaddr		1089580	0					
ANR	1089622	PtrMemberAccess	core -> offset		1089580	1					
ANR	1089623	Identifier	core		1089580	0					
ANR	1089624	Identifier	offset		1089580	1					
ANR	1089625	IdentifierDeclStatement	ut64 addr = fcn -> addr ;	42:2:1178:1199	1089580	1	True				
ANR	1089626	IdentifierDecl	addr = fcn -> addr		1089580	0					
ANR	1089627	IdentifierDeclType	ut64		1089580	0					
ANR	1089628	Identifier	addr		1089580	1					
ANR	1089629	AssignmentExpression	addr = fcn -> addr		1089580	2		=			
ANR	1089630	Identifier	addr		1089580	0					
ANR	1089631	PtrMemberAccess	fcn -> addr		1089580	1					
ANR	1089632	Identifier	fcn		1089580	0					
ANR	1089633	Identifier	addr		1089580	1					
ANR	1089634	ExpressionStatement	"r_core_seek ( core , addr , 1 )"	43:2:1203:1230	1089580	2	True				
ANR	1089635	CallExpression	"r_core_seek ( core , addr , 1 )"		1089580	0					
ANR	1089636	Callee	r_core_seek		1089580	0					
ANR	1089637	Identifier	r_core_seek		1089580	0					
ANR	1089638	ArgumentList	core		1089580	1					
ANR	1089639	Argument	core		1089580	0					
ANR	1089640	Identifier	core		1089580	0					
ANR	1089641	Argument	addr		1089580	1					
ANR	1089642	Identifier	addr		1089580	0					
ANR	1089643	Argument	1		1089580	2					
ANR	1089644	PrimaryExpression	1		1089580	0					
ANR	1089645	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	44:2:1234:1257	1089580	3	True				
ANR	1089646	CallExpression	"r_core_cmd0 ( core , cmd )"		1089580	0					
ANR	1089647	Callee	r_core_cmd0		1089580	0					
ANR	1089648	Identifier	r_core_cmd0		1089580	0					
ANR	1089649	ArgumentList	core		1089580	1					
ANR	1089650	Argument	core		1089580	0					
ANR	1089651	Identifier	core		1089580	0					
ANR	1089652	Argument	cmd		1089580	1					
ANR	1089653	Identifier	cmd		1089580	0					
ANR	1089654	ExpressionStatement	"r_core_seek ( core , oaddr , 1 )"	45:2:1261:1289	1089580	4	True				
ANR	1089655	CallExpression	"r_core_seek ( core , oaddr , 1 )"		1089580	0					
ANR	1089656	Callee	r_core_seek		1089580	0					
ANR	1089657	Identifier	r_core_seek		1089580	0					
ANR	1089658	ArgumentList	core		1089580	1					
ANR	1089659	Argument	core		1089580	0					
ANR	1089660	Identifier	core		1089580	0					
ANR	1089661	Argument	oaddr		1089580	1					
ANR	1089662	Identifier	oaddr		1089580	0					
ANR	1089663	Argument	1		1089580	2					
ANR	1089664	PrimaryExpression	1		1089580	0					
ANR	1089665	ReturnStatement	return 0 ;	47:1:1295:1303	1089580	3	True				
ANR	1089666	PrimaryExpression	0		1089580	0					
ANR	1089667	ReturnType	static int		1089580	1					
ANR	1089668	Identifier	on_fcn_delete		1089580	2					
ANR	1089669	ParameterList	"RAnal * _anal , void * _user , RAnalFunction * fcn"		1089580	3					
ANR	1089670	Parameter	RAnal * _anal	37:26:982:993	1089580	0	True				
ANR	1089671	ParameterType	RAnal *		1089580	0					
ANR	1089672	Identifier	_anal		1089580	1					
ANR	1089673	Parameter	void * _user	37:40:996:1006	1089580	1	True				
ANR	1089674	ParameterType	void *		1089580	0					
ANR	1089675	Identifier	_user		1089580	1					
ANR	1089676	Parameter	RAnalFunction * fcn	37:53:1009:1026	1089580	2	True				
ANR	1089677	ParameterType	RAnalFunction *		1089580	0					
ANR	1089678	Identifier	fcn		1089580	1					
ANR	1089679	CFGEntryNode	ENTRY		1089580		True				
ANR	1089680	CFGExitNode	EXIT		1089580		True				
ANR	1089681	Symbol	core -> config		1089580						
ANR	1089682	Symbol	* fcn		1089580						
ANR	1089683	Symbol	r_config_get		1089580						
ANR	1089684	Symbol	* core		1089580						
ANR	1089685	Symbol	oaddr		1089580						
ANR	1089686	Symbol	core -> offset		1089580						
ANR	1089687	Symbol	fcn		1089580						
ANR	1089688	Symbol	core		1089580						
ANR	1089689	Symbol	fcn -> addr		1089580						
ANR	1089690	Symbol	_user		1089580						
ANR	1089691	Symbol	cmd		1089580						
ANR	1089692	Symbol	* cmd		1089580						
ANR	1089693	Symbol	addr		1089580						
ANR	1089694	Symbol	_anal		1089580						
ANR	1089695	Function	on_fcn_rename	50:0:1308:1712							
ANR	1089696	FunctionDef	"on_fcn_rename (RAnal * _anal , void * _user , RAnalFunction * fcn , const char * oname)"		1089695	0					
ANR	1089697	CompoundStatement		50:91:1399:1712	1089695	0					
ANR	1089698	IdentifierDeclStatement	RCore * core = ( RCore * ) _user ;	51:1:1402:1429	1089695	0	True				
ANR	1089699	IdentifierDecl	* core = ( RCore * ) _user		1089695	0					
ANR	1089700	IdentifierDeclType	RCore *		1089695	0					
ANR	1089701	Identifier	core		1089695	1					
ANR	1089702	AssignmentExpression	* core = ( RCore * ) _user		1089695	2		=			
ANR	1089703	Identifier	core		1089695	0					
ANR	1089704	CastExpression	( RCore * ) _user		1089695	1					
ANR	1089705	CastTarget	RCore *		1089695	0					
ANR	1089706	Identifier	_user		1089695	1					
ANR	1089707	IdentifierDeclStatement	"const char * cmd = r_config_get ( core -> config , ""cmd.fcn.rename"" ) ;"	52:1:1432:1495	1089695	1	True				
ANR	1089708	IdentifierDecl	"* cmd = r_config_get ( core -> config , ""cmd.fcn.rename"" )"		1089695	0					
ANR	1089709	IdentifierDeclType	const char *		1089695	0					
ANR	1089710	Identifier	cmd		1089695	1					
ANR	1089711	AssignmentExpression	"* cmd = r_config_get ( core -> config , ""cmd.fcn.rename"" )"		1089695	2		=			
ANR	1089712	Identifier	cmd		1089695	0					
ANR	1089713	CallExpression	"r_config_get ( core -> config , ""cmd.fcn.rename"" )"		1089695	1					
ANR	1089714	Callee	r_config_get		1089695	0					
ANR	1089715	Identifier	r_config_get		1089695	0					
ANR	1089716	ArgumentList	core -> config		1089695	1					
ANR	1089717	Argument	core -> config		1089695	0					
ANR	1089718	PtrMemberAccess	core -> config		1089695	0					
ANR	1089719	Identifier	core		1089695	0					
ANR	1089720	Identifier	config		1089695	1					
ANR	1089721	Argument	"""cmd.fcn.rename"""		1089695	1					
ANR	1089722	PrimaryExpression	"""cmd.fcn.rename"""		1089695	0					
ANR	1089723	IfStatement	if ( cmd && * cmd )		1089695	2					
ANR	1089724	Condition	cmd && * cmd	53:5:1502:1512	1089695	0	True				
ANR	1089725	AndExpression	cmd && * cmd		1089695	0		&&			
ANR	1089726	Identifier	cmd		1089695	0					
ANR	1089727	UnaryOperationExpression	* cmd		1089695	1					
ANR	1089728	UnaryOperator	*		1089695	0					
ANR	1089729	Identifier	cmd		1089695	1					
ANR	1089730	CompoundStatement		7:2:185:206	1089695	1					
ANR	1089731	IdentifierDeclStatement	ut64 oaddr = core -> offset ;	55:2:1556:1581	1089695	0	True				
ANR	1089732	IdentifierDecl	oaddr = core -> offset		1089695	0					
ANR	1089733	IdentifierDeclType	ut64		1089695	0					
ANR	1089734	Identifier	oaddr		1089695	1					
ANR	1089735	AssignmentExpression	oaddr = core -> offset		1089695	2		=			
ANR	1089736	Identifier	oaddr		1089695	0					
ANR	1089737	PtrMemberAccess	core -> offset		1089695	1					
ANR	1089738	Identifier	core		1089695	0					
ANR	1089739	Identifier	offset		1089695	1					
ANR	1089740	IdentifierDeclStatement	ut64 addr = fcn -> addr ;	56:2:1585:1606	1089695	1	True				
ANR	1089741	IdentifierDecl	addr = fcn -> addr		1089695	0					
ANR	1089742	IdentifierDeclType	ut64		1089695	0					
ANR	1089743	Identifier	addr		1089695	1					
ANR	1089744	AssignmentExpression	addr = fcn -> addr		1089695	2		=			
ANR	1089745	Identifier	addr		1089695	0					
ANR	1089746	PtrMemberAccess	fcn -> addr		1089695	1					
ANR	1089747	Identifier	fcn		1089695	0					
ANR	1089748	Identifier	addr		1089695	1					
ANR	1089749	ExpressionStatement	"r_core_seek ( core , addr , 1 )"	57:2:1610:1637	1089695	2	True				
ANR	1089750	CallExpression	"r_core_seek ( core , addr , 1 )"		1089695	0					
ANR	1089751	Callee	r_core_seek		1089695	0					
ANR	1089752	Identifier	r_core_seek		1089695	0					
ANR	1089753	ArgumentList	core		1089695	1					
ANR	1089754	Argument	core		1089695	0					
ANR	1089755	Identifier	core		1089695	0					
ANR	1089756	Argument	addr		1089695	1					
ANR	1089757	Identifier	addr		1089695	0					
ANR	1089758	Argument	1		1089695	2					
ANR	1089759	PrimaryExpression	1		1089695	0					
ANR	1089760	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	58:2:1641:1664	1089695	3	True				
ANR	1089761	CallExpression	"r_core_cmd0 ( core , cmd )"		1089695	0					
ANR	1089762	Callee	r_core_cmd0		1089695	0					
ANR	1089763	Identifier	r_core_cmd0		1089695	0					
ANR	1089764	ArgumentList	core		1089695	1					
ANR	1089765	Argument	core		1089695	0					
ANR	1089766	Identifier	core		1089695	0					
ANR	1089767	Argument	cmd		1089695	1					
ANR	1089768	Identifier	cmd		1089695	0					
ANR	1089769	ExpressionStatement	"r_core_seek ( core , oaddr , 1 )"	59:2:1668:1696	1089695	4	True				
ANR	1089770	CallExpression	"r_core_seek ( core , oaddr , 1 )"		1089695	0					
ANR	1089771	Callee	r_core_seek		1089695	0					
ANR	1089772	Identifier	r_core_seek		1089695	0					
ANR	1089773	ArgumentList	core		1089695	1					
ANR	1089774	Argument	core		1089695	0					
ANR	1089775	Identifier	core		1089695	0					
ANR	1089776	Argument	oaddr		1089695	1					
ANR	1089777	Identifier	oaddr		1089695	0					
ANR	1089778	Argument	1		1089695	2					
ANR	1089779	PrimaryExpression	1		1089695	0					
ANR	1089780	ReturnStatement	return 0 ;	61:1:1702:1710	1089695	3	True				
ANR	1089781	PrimaryExpression	0		1089695	0					
ANR	1089782	ReturnType	static int		1089695	1					
ANR	1089783	Identifier	on_fcn_rename		1089695	2					
ANR	1089784	ParameterList	"RAnal * _anal , void * _user , RAnalFunction * fcn , const char * oname"		1089695	3					
ANR	1089785	Parameter	RAnal * _anal	50:25:1333:1344	1089695	0	True				
ANR	1089786	ParameterType	RAnal *		1089695	0					
ANR	1089787	Identifier	_anal		1089695	1					
ANR	1089788	Parameter	void * _user	50:39:1347:1357	1089695	1	True				
ANR	1089789	ParameterType	void *		1089695	0					
ANR	1089790	Identifier	_user		1089695	1					
ANR	1089791	Parameter	RAnalFunction * fcn	50:52:1360:1377	1089695	2	True				
ANR	1089792	ParameterType	RAnalFunction *		1089695	0					
ANR	1089793	Identifier	fcn		1089695	1					
ANR	1089794	Parameter	const char * oname	50:72:1380:1396	1089695	3	True				
ANR	1089795	ParameterType	const char *		1089695	0					
ANR	1089796	Identifier	oname		1089695	1					
ANR	1089797	CFGEntryNode	ENTRY		1089695		True				
ANR	1089798	CFGExitNode	EXIT		1089695		True				
ANR	1089799	Symbol	core -> config		1089695						
ANR	1089800	Symbol	* fcn		1089695						
ANR	1089801	Symbol	r_config_get		1089695						
ANR	1089802	Symbol	* core		1089695						
ANR	1089803	Symbol	oaddr		1089695						
ANR	1089804	Symbol	core -> offset		1089695						
ANR	1089805	Symbol	fcn		1089695						
ANR	1089806	Symbol	core		1089695						
ANR	1089807	Symbol	oname		1089695						
ANR	1089808	Symbol	fcn -> addr		1089695						
ANR	1089809	Symbol	_user		1089695						
ANR	1089810	Symbol	cmd		1089695						
ANR	1089811	Symbol	* cmd		1089695						
ANR	1089812	Symbol	addr		1089695						
ANR	1089813	Symbol	_anal		1089695						
ANR	1089814	Function	r_core_debug_breakpoint_hit	64:0:1715:2219							
ANR	1089815	FunctionDef	"r_core_debug_breakpoint_hit (RCore * core , RBreakpointItem * bpi)"		1089814	0					
ANR	1089816	CompoundStatement		64:75:1790:2219	1089814	0					
ANR	1089817	IdentifierDeclStatement	"const char * cmdbp = r_config_get ( core -> config , ""cmd.bp"" ) ;"	65:1:1793:1850	1089814	0	True				
ANR	1089818	IdentifierDecl	"* cmdbp = r_config_get ( core -> config , ""cmd.bp"" )"		1089814	0					
ANR	1089819	IdentifierDeclType	const char *		1089814	0					
ANR	1089820	Identifier	cmdbp		1089814	1					
ANR	1089821	AssignmentExpression	"* cmdbp = r_config_get ( core -> config , ""cmd.bp"" )"		1089814	2		=			
ANR	1089822	Identifier	cmdbp		1089814	0					
ANR	1089823	CallExpression	"r_config_get ( core -> config , ""cmd.bp"" )"		1089814	1					
ANR	1089824	Callee	r_config_get		1089814	0					
ANR	1089825	Identifier	r_config_get		1089814	0					
ANR	1089826	ArgumentList	core -> config		1089814	1					
ANR	1089827	Argument	core -> config		1089814	0					
ANR	1089828	PtrMemberAccess	core -> config		1089814	0					
ANR	1089829	Identifier	core		1089814	0					
ANR	1089830	Identifier	config		1089814	1					
ANR	1089831	Argument	"""cmd.bp"""		1089814	1					
ANR	1089832	PrimaryExpression	"""cmd.bp"""		1089814	0					
ANR	1089833	IdentifierDeclStatement	const bool cmdbp_exists = ( cmdbp && * cmdbp ) ;	66:1:1853:1896	1089814	1	True				
ANR	1089834	IdentifierDecl	cmdbp_exists = ( cmdbp && * cmdbp )		1089814	0					
ANR	1089835	IdentifierDeclType	const bool		1089814	0					
ANR	1089836	Identifier	cmdbp_exists		1089814	1					
ANR	1089837	AssignmentExpression	cmdbp_exists = ( cmdbp && * cmdbp )		1089814	2		=			
ANR	1089838	Identifier	cmdbp_exists		1089814	0					
ANR	1089839	AndExpression	cmdbp && * cmdbp		1089814	1		&&			
ANR	1089840	Identifier	cmdbp		1089814	0					
ANR	1089841	UnaryOperationExpression	* cmdbp		1089814	1					
ANR	1089842	UnaryOperator	*		1089814	0					
ANR	1089843	Identifier	cmdbp		1089814	1					
ANR	1089844	IdentifierDeclStatement	const bool bpcmd_exists = ( bpi -> data && bpi -> data [ 0 ] ) ;	67:1:1899:1952	1089814	2	True				
ANR	1089845	IdentifierDecl	bpcmd_exists = ( bpi -> data && bpi -> data [ 0 ] )		1089814	0					
ANR	1089846	IdentifierDeclType	const bool		1089814	0					
ANR	1089847	Identifier	bpcmd_exists		1089814	1					
ANR	1089848	AssignmentExpression	bpcmd_exists = ( bpi -> data && bpi -> data [ 0 ] )		1089814	2		=			
ANR	1089849	Identifier	bpcmd_exists		1089814	0					
ANR	1089850	AndExpression	bpi -> data && bpi -> data [ 0 ]		1089814	1		&&			
ANR	1089851	PtrMemberAccess	bpi -> data		1089814	0					
ANR	1089852	Identifier	bpi		1089814	0					
ANR	1089853	Identifier	data		1089814	1					
ANR	1089854	ArrayIndexing	bpi -> data [ 0 ]		1089814	1					
ANR	1089855	PtrMemberAccess	bpi -> data		1089814	0					
ANR	1089856	Identifier	bpi		1089814	0					
ANR	1089857	Identifier	data		1089814	1					
ANR	1089858	PrimaryExpression	0		1089814	1					
ANR	1089859	IdentifierDeclStatement	const bool may_output = ( cmdbp_exists || bpcmd_exists ) ;	68:1:1955:2009	1089814	3	True				
ANR	1089860	IdentifierDecl	may_output = ( cmdbp_exists || bpcmd_exists )		1089814	0					
ANR	1089861	IdentifierDeclType	const bool		1089814	0					
ANR	1089862	Identifier	may_output		1089814	1					
ANR	1089863	AssignmentExpression	may_output = ( cmdbp_exists || bpcmd_exists )		1089814	2		=			
ANR	1089864	Identifier	may_output		1089814	0					
ANR	1089865	OrExpression	cmdbp_exists || bpcmd_exists		1089814	1		||			
ANR	1089866	Identifier	cmdbp_exists		1089814	0					
ANR	1089867	Identifier	bpcmd_exists		1089814	1					
ANR	1089868	IfStatement	if ( may_output )		1089814	4					
ANR	1089869	Condition	may_output	69:5:2016:2025	1089814	0	True				
ANR	1089870	Identifier	may_output		1089814	0					
ANR	1089871	CompoundStatement		6:17:237:237	1089814	1					
ANR	1089872	ExpressionStatement	r_cons_push ( )	70:2:2032:2046	1089814	0	True				
ANR	1089873	CallExpression	r_cons_push ( )		1089814	0					
ANR	1089874	Callee	r_cons_push		1089814	0					
ANR	1089875	Identifier	r_cons_push		1089814	0					
ANR	1089876	ArgumentList			1089814	1					
ANR	1089877	IfStatement	if ( cmdbp_exists )		1089814	5					
ANR	1089878	Condition	cmdbp_exists	72:5:2056:2067	1089814	0	True				
ANR	1089879	Identifier	cmdbp_exists		1089814	0					
ANR	1089880	CompoundStatement		9:19:279:279	1089814	1					
ANR	1089881	ExpressionStatement	"r_core_cmd0 ( core , cmdbp )"	73:2:2074:2099	1089814	0	True				
ANR	1089882	CallExpression	"r_core_cmd0 ( core , cmdbp )"		1089814	0					
ANR	1089883	Callee	r_core_cmd0		1089814	0					
ANR	1089884	Identifier	r_core_cmd0		1089814	0					
ANR	1089885	ArgumentList	core		1089814	1					
ANR	1089886	Argument	core		1089814	0					
ANR	1089887	Identifier	core		1089814	0					
ANR	1089888	Argument	cmdbp		1089814	1					
ANR	1089889	Identifier	cmdbp		1089814	0					
ANR	1089890	IfStatement	if ( bpcmd_exists )		1089814	6					
ANR	1089891	Condition	bpcmd_exists	75:5:2109:2120	1089814	0	True				
ANR	1089892	Identifier	bpcmd_exists		1089814	0					
ANR	1089893	CompoundStatement		12:19:332:332	1089814	1					
ANR	1089894	ExpressionStatement	"r_core_cmd0 ( core , bpi -> data )"	76:2:2127:2156	1089814	0	True				
ANR	1089895	CallExpression	"r_core_cmd0 ( core , bpi -> data )"		1089814	0					
ANR	1089896	Callee	r_core_cmd0		1089814	0					
ANR	1089897	Identifier	r_core_cmd0		1089814	0					
ANR	1089898	ArgumentList	core		1089814	1					
ANR	1089899	Argument	core		1089814	0					
ANR	1089900	Identifier	core		1089814	0					
ANR	1089901	Argument	bpi -> data		1089814	1					
ANR	1089902	PtrMemberAccess	bpi -> data		1089814	0					
ANR	1089903	Identifier	bpi		1089814	0					
ANR	1089904	Identifier	data		1089814	1					
ANR	1089905	IfStatement	if ( may_output )		1089814	7					
ANR	1089906	Condition	may_output	78:5:2166:2175	1089814	0	True				
ANR	1089907	Identifier	may_output		1089814	0					
ANR	1089908	CompoundStatement		15:17:387:387	1089814	1					
ANR	1089909	ExpressionStatement	r_cons_flush ( )	79:2:2182:2197	1089814	0	True				
ANR	1089910	CallExpression	r_cons_flush ( )		1089814	0					
ANR	1089911	Callee	r_cons_flush		1089814	0					
ANR	1089912	Identifier	r_cons_flush		1089814	0					
ANR	1089913	ArgumentList			1089814	1					
ANR	1089914	ExpressionStatement	r_cons_pop ( )	80:2:2201:2214	1089814	1	True				
ANR	1089915	CallExpression	r_cons_pop ( )		1089814	0					
ANR	1089916	Callee	r_cons_pop		1089814	0					
ANR	1089917	Identifier	r_cons_pop		1089814	0					
ANR	1089918	ArgumentList			1089814	1					
ANR	1089919	ReturnType	static void		1089814	1					
ANR	1089920	Identifier	r_core_debug_breakpoint_hit		1089814	2					
ANR	1089921	ParameterList	"RCore * core , RBreakpointItem * bpi"		1089814	3					
ANR	1089922	Parameter	RCore * core	64:40:1755:1765	1089814	0	True				
ANR	1089923	ParameterType	RCore *		1089814	0					
ANR	1089924	Identifier	core		1089814	1					
ANR	1089925	Parameter	RBreakpointItem * bpi	64:53:1768:1787	1089814	1	True				
ANR	1089926	ParameterType	RBreakpointItem *		1089814	0					
ANR	1089927	Identifier	bpi		1089814	1					
ANR	1089928	CFGEntryNode	ENTRY		1089814		True				
ANR	1089929	CFGExitNode	EXIT		1089814		True				
ANR	1089930	Symbol	core -> config		1089814						
ANR	1089931	Symbol	* core		1089814						
ANR	1089932	Symbol	r_config_get		1089814						
ANR	1089933	Symbol	bpcmd_exists		1089814						
ANR	1089934	Symbol	cmdbp		1089814						
ANR	1089935	Symbol	bpi -> data		1089814						
ANR	1089936	Symbol	* * bpi		1089814						
ANR	1089937	Symbol	core		1089814						
ANR	1089938	Symbol	* bpi -> data		1089814						
ANR	1089939	Symbol	* cmdbp		1089814						
ANR	1089940	Symbol	may_output		1089814						
ANR	1089941	Symbol	bpi		1089814						
ANR	1089942	Symbol	* bpi		1089814						
ANR	1089943	Symbol	cmdbp_exists		1089814						
ANR	1089944	Function	r_core_debug_syscall_hit	84:0:2222:2427							
ANR	1089945	FunctionDef	r_core_debug_syscall_hit (RCore * core)		1089944	0					
ANR	1089946	CompoundStatement		84:50:2272:2427	1089944	0					
ANR	1089947	IdentifierDeclStatement	"const char * cmdhit = r_config_get ( core -> config , ""cmd.onsyscall"" ) ;"	85:1:2275:2340	1089944	0	True				
ANR	1089948	IdentifierDecl	"* cmdhit = r_config_get ( core -> config , ""cmd.onsyscall"" )"		1089944	0					
ANR	1089949	IdentifierDeclType	const char *		1089944	0					
ANR	1089950	Identifier	cmdhit		1089944	1					
ANR	1089951	AssignmentExpression	"* cmdhit = r_config_get ( core -> config , ""cmd.onsyscall"" )"		1089944	2		=			
ANR	1089952	Identifier	cmdhit		1089944	0					
ANR	1089953	CallExpression	"r_config_get ( core -> config , ""cmd.onsyscall"" )"		1089944	1					
ANR	1089954	Callee	r_config_get		1089944	0					
ANR	1089955	Identifier	r_config_get		1089944	0					
ANR	1089956	ArgumentList	core -> config		1089944	1					
ANR	1089957	Argument	core -> config		1089944	0					
ANR	1089958	PtrMemberAccess	core -> config		1089944	0					
ANR	1089959	Identifier	core		1089944	0					
ANR	1089960	Identifier	config		1089944	1					
ANR	1089961	Argument	"""cmd.onsyscall"""		1089944	1					
ANR	1089962	PrimaryExpression	"""cmd.onsyscall"""		1089944	0					
ANR	1089963	IfStatement	if ( cmdhit && cmdhit [ 0 ] != 0 )		1089944	1					
ANR	1089964	Condition	cmdhit && cmdhit [ 0 ] != 0	87:5:2348:2371	1089944	0	True				
ANR	1089965	AndExpression	cmdhit && cmdhit [ 0 ] != 0		1089944	0		&&			
ANR	1089966	Identifier	cmdhit		1089944	0					
ANR	1089967	EqualityExpression	cmdhit [ 0 ] != 0		1089944	1		!=			
ANR	1089968	ArrayIndexing	cmdhit [ 0 ]		1089944	0					
ANR	1089969	Identifier	cmdhit		1089944	0					
ANR	1089970	PrimaryExpression	0		1089944	1					
ANR	1089971	PrimaryExpression	0		1089944	1					
ANR	1089972	CompoundStatement		4:31:101:101	1089944	1					
ANR	1089973	ExpressionStatement	"r_core_cmd0 ( core , cmdhit )"	88:2:2378:2404	1089944	0	True				
ANR	1089974	CallExpression	"r_core_cmd0 ( core , cmdhit )"		1089944	0					
ANR	1089975	Callee	r_core_cmd0		1089944	0					
ANR	1089976	Identifier	r_core_cmd0		1089944	0					
ANR	1089977	ArgumentList	core		1089944	1					
ANR	1089978	Argument	core		1089944	0					
ANR	1089979	Identifier	core		1089944	0					
ANR	1089980	Argument	cmdhit		1089944	1					
ANR	1089981	Identifier	cmdhit		1089944	0					
ANR	1089982	ExpressionStatement	r_cons_flush ( )	89:2:2408:2422	1089944	1	True				
ANR	1089983	CallExpression	r_cons_flush ( )		1089944	0					
ANR	1089984	Callee	r_cons_flush		1089944	0					
ANR	1089985	Identifier	r_cons_flush		1089944	0					
ANR	1089986	ArgumentList			1089944	1					
ANR	1089987	ReturnType	static void		1089944	1					
ANR	1089988	Identifier	r_core_debug_syscall_hit		1089944	2					
ANR	1089989	ParameterList	RCore * core		1089944	3					
ANR	1089990	Parameter	RCore * core	84:37:2259:2269	1089944	0	True				
ANR	1089991	ParameterType	RCore *		1089944	0					
ANR	1089992	Identifier	core		1089944	1					
ANR	1089993	CFGEntryNode	ENTRY		1089944		True				
ANR	1089994	CFGExitNode	EXIT		1089944		True				
ANR	1089995	Symbol	core -> config		1089944						
ANR	1089996	Symbol	core		1089944						
ANR	1089997	Symbol	cmdhit		1089944						
ANR	1089998	Symbol	r_config_get		1089944						
ANR	1089999	Symbol	* core		1089944						
ANR	1090000	Symbol	* cmdhit		1089944						
ANR	1090001	ClassDef	getreloc_t	93:0:2430:2488							
ANR	1090002	DeclStmt									
ANR	1090003	Decl							ut64	ut64	vaddr
ANR	1090004	DeclStmt									
ANR	1090005	Decl							int	int	size
ANR	1090006	Function	getreloc_tree	98:0:2492:2960							
ANR	1090007	FunctionDef	"getreloc_tree (const void * user , const RBNode * n)"		1090006	0					
ANR	1090008	CompoundStatement		98:60:2552:2960	1090006	0					
ANR	1090009	IdentifierDeclStatement	struct getreloc_t * gr = ( struct getreloc_t * ) user ;	99:8:2562:2611	1090006	0	True				
ANR	1090010	IdentifierDecl	* gr = ( struct getreloc_t * ) user		1090006	0					
ANR	1090011	IdentifierDeclType	struct getreloc_t *		1090006	0					
ANR	1090012	Identifier	gr		1090006	1					
ANR	1090013	AssignmentExpression	* gr = ( struct getreloc_t * ) user		1090006	2		=			
ANR	1090014	Identifier	gr		1090006	0					
ANR	1090015	CastExpression	( struct getreloc_t * ) user		1090006	1					
ANR	1090016	CastTarget	struct getreloc_t *		1090006	0					
ANR	1090017	Identifier	user		1090006	1					
ANR	1090018	Statement	const	100:8:2621:2625	1090006	1	True				
ANR	1090019	Statement	RBinReloc	100:14:2627:2635	1090006	2	True				
ANR	1090020	Statement	*	100:24:2637:2637	1090006	3	True				
ANR	1090021	Statement	r	100:25:2638:2638	1090006	4	True				
ANR	1090022	Statement	=	100:27:2640:2640	1090006	5	True				
ANR	1090023	Statement	container_of	100:29:2642:2653	1090006	6	True				
ANR	1090024	Statement	(	100:42:2655:2655	1090006	7	True				
ANR	1090025	Statement	n	100:43:2656:2656	1090006	8	True				
ANR	1090026	Statement	","	100:44:2657:2657	1090006	9	True				
ANR	1090027	Statement	const	100:46:2659:2663	1090006	10	True				
ANR	1090028	Statement	RBinReloc	100:52:2665:2673	1090006	11	True				
ANR	1090029	Statement	","	100:61:2674:2674	1090006	12	True				
ANR	1090030	Statement	vrb	100:63:2676:2678	1090006	13	True				
ANR	1090031	Statement	)	100:66:2679:2679	1090006	14	True				
ANR	1090032	ExpressionStatement		100:67:2680:2680	1090006	15	True				
ANR	1090033	IfStatement	if ( ( r -> vaddr >= gr -> vaddr ) && ( r -> vaddr < ( gr -> vaddr + gr -> size ) ) )		1090006	16					
ANR	1090034	Condition	( r -> vaddr >= gr -> vaddr ) && ( r -> vaddr < ( gr -> vaddr + gr -> size ) )	101:12:2694:2755	1090006	0	True				
ANR	1090035	AndExpression	( r -> vaddr >= gr -> vaddr ) && ( r -> vaddr < ( gr -> vaddr + gr -> size ) )		1090006	0		&&			
ANR	1090036	RelationalExpression	r -> vaddr >= gr -> vaddr		1090006	0		>=			
ANR	1090037	PtrMemberAccess	r -> vaddr		1090006	0					
ANR	1090038	Identifier	r		1090006	0					
ANR	1090039	Identifier	vaddr		1090006	1					
ANR	1090040	PtrMemberAccess	gr -> vaddr		1090006	1					
ANR	1090041	Identifier	gr		1090006	0					
ANR	1090042	Identifier	vaddr		1090006	1					
ANR	1090043	RelationalExpression	r -> vaddr < ( gr -> vaddr + gr -> size )		1090006	1		<			
ANR	1090044	PtrMemberAccess	r -> vaddr		1090006	0					
ANR	1090045	Identifier	r		1090006	0					
ANR	1090046	Identifier	vaddr		1090006	1					
ANR	1090047	AdditiveExpression	gr -> vaddr + gr -> size		1090006	1		+			
ANR	1090048	PtrMemberAccess	gr -> vaddr		1090006	0					
ANR	1090049	Identifier	gr		1090006	0					
ANR	1090050	Identifier	vaddr		1090006	1					
ANR	1090051	PtrMemberAccess	gr -> size		1090006	1					
ANR	1090052	Identifier	gr		1090006	0					
ANR	1090053	Identifier	size		1090006	1					
ANR	1090054	CompoundStatement		4:76:205:205	1090006	1					
ANR	1090055	ReturnStatement	return 0 ;	102:16:2776:2784	1090006	0	True				
ANR	1090056	PrimaryExpression	0		1090006	0					
ANR	1090057	IfStatement	if ( gr -> vaddr > r -> vaddr )		1090006	17					
ANR	1090058	Condition	gr -> vaddr > r -> vaddr	105:12:2809:2828	1090006	0	True				
ANR	1090059	RelationalExpression	gr -> vaddr > r -> vaddr		1090006	0		>			
ANR	1090060	PtrMemberAccess	gr -> vaddr		1090006	0					
ANR	1090061	Identifier	gr		1090006	0					
ANR	1090062	Identifier	vaddr		1090006	1					
ANR	1090063	PtrMemberAccess	r -> vaddr		1090006	1					
ANR	1090064	Identifier	r		1090006	0					
ANR	1090065	Identifier	vaddr		1090006	1					
ANR	1090066	CompoundStatement		8:34:278:278	1090006	1					
ANR	1090067	ReturnStatement	return 1 ;	106:16:2849:2857	1090006	0	True				
ANR	1090068	PrimaryExpression	1		1090006	0					
ANR	1090069	IfStatement	if ( gr -> vaddr < r -> vaddr )		1090006	18					
ANR	1090070	Condition	gr -> vaddr < r -> vaddr	108:12:2881:2900	1090006	0	True				
ANR	1090071	RelationalExpression	gr -> vaddr < r -> vaddr		1090006	0		<			
ANR	1090072	PtrMemberAccess	gr -> vaddr		1090006	0					
ANR	1090073	Identifier	gr		1090006	0					
ANR	1090074	Identifier	vaddr		1090006	1					
ANR	1090075	PtrMemberAccess	r -> vaddr		1090006	1					
ANR	1090076	Identifier	r		1090006	0					
ANR	1090077	Identifier	vaddr		1090006	1					
ANR	1090078	CompoundStatement		11:34:350:350	1090006	1					
ANR	1090079	ReturnStatement	return - 1 ;	109:16:2921:2930	1090006	0	True				
ANR	1090080	UnaryOperationExpression	- 1		1090006	0					
ANR	1090081	UnaryOperator	-		1090006	0					
ANR	1090082	PrimaryExpression	1		1090006	1					
ANR	1090083	ReturnStatement	return 0 ;	111:8:2950:2958	1090006	19	True				
ANR	1090084	PrimaryExpression	0		1090006	0					
ANR	1090085	ReturnType	static int		1090006	1					
ANR	1090086	Identifier	getreloc_tree		1090006	2					
ANR	1090087	ParameterList	"const void * user , const RBNode * n"		1090006	3					
ANR	1090088	Parameter	const void * user	98:25:2517:2532	1090006	0	True				
ANR	1090089	ParameterType	const void *		1090006	0					
ANR	1090090	Identifier	user		1090006	1					
ANR	1090091	Parameter	const RBNode * n	98:43:2535:2549	1090006	1	True				
ANR	1090092	ParameterType	const RBNode *		1090006	0					
ANR	1090093	Identifier	n		1090006	1					
ANR	1090094	CFGEntryNode	ENTRY		1090006		True				
ANR	1090095	CFGExitNode	EXIT		1090006		True				
ANR	1090096	Symbol	gr -> size		1090006						
ANR	1090097	Symbol	r		1090006						
ANR	1090098	Symbol	* gr		1090006						
ANR	1090099	Symbol	r -> vaddr		1090006						
ANR	1090100	Symbol	gr -> vaddr		1090006						
ANR	1090101	Symbol	gr		1090006						
ANR	1090102	Symbol	* r		1090006						
ANR	1090103	Symbol	user		1090006						
ANR	1090104	Symbol	n		1090006						
ANR	1090105	Function	r_core_getreloc	116:0:3081:3542							
ANR	1090106	FunctionDef	"r_core_getreloc (RCore * core , ut64 addr , int size)"		1090105	0					
ANR	1090107	CompoundStatement		116:67:3148:3542	1090105	0					
ANR	1090108	IfStatement	if ( size < 1 || addr == UT64_MAX )		1090105	0					
ANR	1090109	Condition	size < 1 || addr == UT64_MAX	117:12:3162:3189	1090105	0	True				
ANR	1090110	OrExpression	size < 1 || addr == UT64_MAX		1090105	0		||			
ANR	1090111	RelationalExpression	size < 1		1090105	0		<			
ANR	1090112	Identifier	size		1090105	0					
ANR	1090113	PrimaryExpression	1		1090105	1					
ANR	1090114	EqualityExpression	addr == UT64_MAX		1090105	1		==			
ANR	1090115	Identifier	addr		1090105	0					
ANR	1090116	Identifier	UT64_MAX		1090105	1					
ANR	1090117	CompoundStatement		2:42:43:43	1090105	1					
ANR	1090118	ReturnStatement	return NULL ;	118:16:3210:3221	1090105	0	True				
ANR	1090119	Identifier	NULL		1090105	0					
ANR	1090120	IdentifierDeclStatement	RBNode * relocs = r_bin_get_relocs ( core -> bin ) ;	120:8:3241:3286	1090105	1	True				
ANR	1090121	IdentifierDecl	* relocs = r_bin_get_relocs ( core -> bin )		1090105	0					
ANR	1090122	IdentifierDeclType	RBNode *		1090105	0					
ANR	1090123	Identifier	relocs		1090105	1					
ANR	1090124	AssignmentExpression	* relocs = r_bin_get_relocs ( core -> bin )		1090105	2		=			
ANR	1090125	Identifier	relocs		1090105	0					
ANR	1090126	CallExpression	r_bin_get_relocs ( core -> bin )		1090105	1					
ANR	1090127	Callee	r_bin_get_relocs		1090105	0					
ANR	1090128	Identifier	r_bin_get_relocs		1090105	0					
ANR	1090129	ArgumentList	core -> bin		1090105	1					
ANR	1090130	Argument	core -> bin		1090105	0					
ANR	1090131	PtrMemberAccess	core -> bin		1090105	0					
ANR	1090132	Identifier	core		1090105	0					
ANR	1090133	Identifier	bin		1090105	1					
ANR	1090134	IfStatement	if ( ! relocs )		1090105	2					
ANR	1090135	Condition	! relocs	121:12:3300:3306	1090105	0	True				
ANR	1090136	UnaryOperationExpression	! relocs		1090105	0					
ANR	1090137	UnaryOperator	!		1090105	0					
ANR	1090138	Identifier	relocs		1090105	1					
ANR	1090139	CompoundStatement		6:21:160:160	1090105	1					
ANR	1090140	ReturnStatement	return NULL ;	122:16:3327:3338	1090105	0	True				
ANR	1090141	Identifier	NULL		1090105	0					
ANR	1090142	Statement	struct	124:8:3358:3363	1090105	3	True				
ANR	1090143	Statement	getreloc_t	124:15:3365:3374	1090105	4	True				
ANR	1090144	Statement	gr	124:26:3376:3377	1090105	5	True				
ANR	1090145	Statement	=	124:29:3379:3379	1090105	6	True				
ANR	1090146	CompoundStatement		9:31:232:232	1090105	7					
ANR	1090147	Statement	.	124:33:3383:3383	1090105	0	True				
ANR	1090148	Statement	vaddr	124:34:3384:3388	1090105	1	True				
ANR	1090149	Statement	=	124:40:3390:3390	1090105	2	True				
ANR	1090150	Statement	addr	124:42:3392:3395	1090105	3	True				
ANR	1090151	Statement	","	124:46:3396:3396	1090105	4	True				
ANR	1090152	Statement	.	124:48:3398:3398	1090105	5	True				
ANR	1090153	Statement	size	124:49:3399:3402	1090105	6	True				
ANR	1090154	Statement	=	124:54:3404:3404	1090105	7	True				
ANR	1090155	Statement	size	124:56:3406:3409	1090105	8	True				
ANR	1090156	ExpressionStatement		124:62:3412:3412	1090105	8	True				
ANR	1090157	IdentifierDeclStatement	"RBNode * res = r_rbtree_find ( relocs , & gr , getreloc_tree ) ;"	125:8:3422:3478	1090105	9	True				
ANR	1090158	IdentifierDecl	"* res = r_rbtree_find ( relocs , & gr , getreloc_tree )"		1090105	0					
ANR	1090159	IdentifierDeclType	RBNode *		1090105	0					
ANR	1090160	Identifier	res		1090105	1					
ANR	1090161	AssignmentExpression	"* res = r_rbtree_find ( relocs , & gr , getreloc_tree )"		1090105	2		=			
ANR	1090162	Identifier	res		1090105	0					
ANR	1090163	CallExpression	"r_rbtree_find ( relocs , & gr , getreloc_tree )"		1090105	1					
ANR	1090164	Callee	r_rbtree_find		1090105	0					
ANR	1090165	Identifier	r_rbtree_find		1090105	0					
ANR	1090166	ArgumentList	relocs		1090105	1					
ANR	1090167	Argument	relocs		1090105	0					
ANR	1090168	Identifier	relocs		1090105	0					
ANR	1090169	Argument	& gr		1090105	1					
ANR	1090170	UnaryOperationExpression	& gr		1090105	0					
ANR	1090171	UnaryOperator	&		1090105	0					
ANR	1090172	Identifier	gr		1090105	1					
ANR	1090173	Argument	getreloc_tree		1090105	2					
ANR	1090174	Identifier	getreloc_tree		1090105	0					
ANR	1090175	ReturnStatement	"return res ? container_of ( res , RBinReloc , vrb ) : NULL ;"	126:8:3488:3540	1090105	10	True				
ANR	1090176	ConditionalExpression	"res ? container_of ( res , RBinReloc , vrb ) : NULL"		1090105	0					
ANR	1090177	Condition	res		1090105	0					
ANR	1090178	Identifier	res		1090105	0					
ANR	1090179	CallExpression	"container_of ( res , RBinReloc , vrb )"		1090105	1					
ANR	1090180	Callee	container_of		1090105	0					
ANR	1090181	Identifier	container_of		1090105	0					
ANR	1090182	ArgumentList	res		1090105	1					
ANR	1090183	Argument	res		1090105	0					
ANR	1090184	Identifier	res		1090105	0					
ANR	1090185	Argument	RBinReloc		1090105	1					
ANR	1090186	Identifier	RBinReloc		1090105	0					
ANR	1090187	Argument	vrb		1090105	2					
ANR	1090188	Identifier	vrb		1090105	0					
ANR	1090189	Identifier	NULL		1090105	2					
ANR	1090190	ReturnType	R_API RBinReloc *		1090105	1					
ANR	1090191	Identifier	r_core_getreloc		1090105	2					
ANR	1090192	ParameterList	"RCore * core , ut64 addr , int size"		1090105	3					
ANR	1090193	Parameter	RCore * core	116:33:3114:3124	1090105	0	True				
ANR	1090194	ParameterType	RCore *		1090105	0					
ANR	1090195	Identifier	core		1090105	1					
ANR	1090196	Parameter	ut64 addr	116:46:3127:3135	1090105	1	True				
ANR	1090197	ParameterType	ut64		1090105	0					
ANR	1090198	Identifier	addr		1090105	1					
ANR	1090199	Parameter	int size	116:57:3138:3145	1090105	2	True				
ANR	1090200	ParameterType	int		1090105	0					
ANR	1090201	Identifier	size		1090105	1					
ANR	1090202	CFGEntryNode	ENTRY		1090105		True				
ANR	1090203	CFGExitNode	EXIT		1090105		True				
ANR	1090204	Symbol	res		1090105						
ANR	1090205	Symbol	NULL		1090105						
ANR	1090206	Symbol	r_rbtree_find		1090105						
ANR	1090207	Symbol	vrb		1090105						
ANR	1090208	Symbol	* core		1090105						
ANR	1090209	Symbol	relocs		1090105						
ANR	1090210	Symbol	getreloc_tree		1090105						
ANR	1090211	Symbol	core		1090105						
ANR	1090212	Symbol	container_of		1090105						
ANR	1090213	Symbol	size		1090105						
ANR	1090214	Symbol	& gr		1090105						
ANR	1090215	Symbol	RBinReloc		1090105						
ANR	1090216	Symbol	addr		1090105						
ANR	1090217	Symbol	UT64_MAX		1090105						
ANR	1090218	Symbol	r_bin_get_relocs		1090105						
ANR	1090219	Symbol	core -> bin		1090105						
ANR	1090220	Function	r_core_get_asmqjmps	134:0:3888:4586							
ANR	1090221	FunctionDef	"r_core_get_asmqjmps (RCore * core , const char * str)"		1090220	0					
ANR	1090222	CompoundStatement		134:61:3949:4586	1090220	0					
ANR	1090223	IfStatement	if ( ! core -> asmqjmps )		1090220	0					
ANR	1090224	Condition	! core -> asmqjmps	135:5:3956:3970	1090220	0	True				
ANR	1090225	UnaryOperationExpression	! core -> asmqjmps		1090220	0					
ANR	1090226	UnaryOperator	!		1090220	0					
ANR	1090227	PtrMemberAccess	core -> asmqjmps		1090220	1					
ANR	1090228	Identifier	core		1090220	0					
ANR	1090229	Identifier	asmqjmps		1090220	1					
ANR	1090230	CompoundStatement		2:22:23:23	1090220	1					
ANR	1090231	ReturnStatement	return UT64_MAX ;	136:2:3977:3992	1090220	0	True				
ANR	1090232	Identifier	UT64_MAX		1090220	0					
ANR	1090233	IfStatement	if ( core -> is_asmqjmps_letter )		1090220	1					
ANR	1090234	Condition	core -> is_asmqjmps_letter	138:5:4002:4025	1090220	0	True				
ANR	1090235	PtrMemberAccess	core -> is_asmqjmps_letter		1090220	0					
ANR	1090236	Identifier	core		1090220	0					
ANR	1090237	Identifier	is_asmqjmps_letter		1090220	1					
ANR	1090238	CompoundStatement		7:2:100:122	1090220	1					
ANR	1090239	IdentifierDeclStatement	"int i , pos = 0 ;"	139:2:4032:4046	1090220	0	True				
ANR	1090240	IdentifierDecl	i		1090220	0					
ANR	1090241	IdentifierDeclType	int		1090220	0					
ANR	1090242	Identifier	i		1090220	1					
ANR	1090243	IdentifierDecl	pos = 0		1090220	1					
ANR	1090244	IdentifierDeclType	int		1090220	0					
ANR	1090245	Identifier	pos		1090220	1					
ANR	1090246	AssignmentExpression	pos = 0		1090220	2		=			
ANR	1090247	Identifier	pos		1090220	0					
ANR	1090248	PrimaryExpression	0		1090220	1					
ANR	1090249	IdentifierDeclStatement	int len = strlen ( str ) ;	140:2:4050:4072	1090220	1	True				
ANR	1090250	IdentifierDecl	len = strlen ( str )		1090220	0					
ANR	1090251	IdentifierDeclType	int		1090220	0					
ANR	1090252	Identifier	len		1090220	1					
ANR	1090253	AssignmentExpression	len = strlen ( str )		1090220	2		=			
ANR	1090254	Identifier	len		1090220	0					
ANR	1090255	CallExpression	strlen ( str )		1090220	1					
ANR	1090256	Callee	strlen		1090220	0					
ANR	1090257	Identifier	strlen		1090220	0					
ANR	1090258	ArgumentList	str		1090220	1					
ANR	1090259	Argument	str		1090220	0					
ANR	1090260	Identifier	str		1090220	0					
ANR	1090261	ForStatement	for ( i = 0 ; i < len - 1 ; ++ i )		1090220	2					
ANR	1090262	ForInit	i = 0 ;	141:7:4081:4086	1090220	0	True				
ANR	1090263	AssignmentExpression	i = 0		1090220	0		=			
ANR	1090264	Identifier	i		1090220	0					
ANR	1090265	PrimaryExpression	0		1090220	1					
ANR	1090266	Condition	i < len - 1	141:14:4088:4098	1090220	1	True				
ANR	1090267	RelationalExpression	i < len - 1		1090220	0		<			
ANR	1090268	Identifier	i		1090220	0					
ANR	1090269	AdditiveExpression	len - 1		1090220	1		-			
ANR	1090270	Identifier	len		1090220	0					
ANR	1090271	PrimaryExpression	1		1090220	1					
ANR	1090272	UnaryExpression	++ i	141:27:4101:4103	1090220	2	True				
ANR	1090273	IncDec	++		1090220	0					
ANR	1090274	Identifier	i		1090220	1					
ANR	1090275	CompoundStatement		8:32:156:156	1090220	3					
ANR	1090276	IfStatement	if ( ! isupper ( ( ut8 ) str [ i ] ) )		1090220	0					
ANR	1090277	Condition	! isupper ( ( ut8 ) str [ i ] )	142:7:4115:4136	1090220	0	True				
ANR	1090278	UnaryOperationExpression	! isupper ( ( ut8 ) str [ i ] )		1090220	0					
ANR	1090279	UnaryOperator	!		1090220	0					
ANR	1090280	CallExpression	isupper ( ( ut8 ) str [ i ] )		1090220	1					
ANR	1090281	Callee	isupper		1090220	0					
ANR	1090282	Identifier	isupper		1090220	0					
ANR	1090283	ArgumentList	( ut8 ) str [ i ]		1090220	1					
ANR	1090284	Argument	( ut8 ) str [ i ]		1090220	0					
ANR	1090285	CastExpression	( ut8 ) str [ i ]		1090220	0					
ANR	1090286	CastTarget	ut8		1090220	0					
ANR	1090287	ArrayIndexing	str [ i ]		1090220	1					
ANR	1090288	Identifier	str		1090220	0					
ANR	1090289	Identifier	i		1090220	1					
ANR	1090290	CompoundStatement		9:31:189:189	1090220	1					
ANR	1090291	ReturnStatement	return UT64_MAX ;	143:4:4145:4160	1090220	0	True				
ANR	1090292	Identifier	UT64_MAX		1090220	0					
ANR	1090293	ExpressionStatement	pos *= R_CORE_ASMQJMPS_LETTERS	145:3:4170:4200	1090220	1	True				
ANR	1090294	AssignmentExpression	pos *= R_CORE_ASMQJMPS_LETTERS		1090220	0		*=			
ANR	1090295	Identifier	pos		1090220	0					
ANR	1090296	Identifier	R_CORE_ASMQJMPS_LETTERS		1090220	1					
ANR	1090297	ExpressionStatement	pos += str [ i ] - 'A' + 1	146:3:4205:4228	1090220	2	True				
ANR	1090298	AssignmentExpression	pos += str [ i ] - 'A' + 1		1090220	0		+=			
ANR	1090299	Identifier	pos		1090220	0					
ANR	1090300	AdditiveExpression	str [ i ] - 'A' + 1		1090220	1		-			
ANR	1090301	ArrayIndexing	str [ i ]		1090220	0					
ANR	1090302	Identifier	str		1090220	0					
ANR	1090303	Identifier	i		1090220	1					
ANR	1090304	AdditiveExpression	'A' + 1		1090220	1		+			
ANR	1090305	PrimaryExpression	'A'		1090220	0					
ANR	1090306	PrimaryExpression	1		1090220	1					
ANR	1090307	IfStatement	if ( ! islower ( ( ut8 ) str [ i ] ) )		1090220	3					
ANR	1090308	Condition	! islower ( ( ut8 ) str [ i ] )	148:6:4240:4261	1090220	0	True				
ANR	1090309	UnaryOperationExpression	! islower ( ( ut8 ) str [ i ] )		1090220	0					
ANR	1090310	UnaryOperator	!		1090220	0					
ANR	1090311	CallExpression	islower ( ( ut8 ) str [ i ] )		1090220	1					
ANR	1090312	Callee	islower		1090220	0					
ANR	1090313	Identifier	islower		1090220	0					
ANR	1090314	ArgumentList	( ut8 ) str [ i ]		1090220	1					
ANR	1090315	Argument	( ut8 ) str [ i ]		1090220	0					
ANR	1090316	CastExpression	( ut8 ) str [ i ]		1090220	0					
ANR	1090317	CastTarget	ut8		1090220	0					
ANR	1090318	ArrayIndexing	str [ i ]		1090220	1					
ANR	1090319	Identifier	str		1090220	0					
ANR	1090320	Identifier	i		1090220	1					
ANR	1090321	CompoundStatement		15:30:314:314	1090220	1					
ANR	1090322	ReturnStatement	return UT64_MAX ;	149:3:4269:4284	1090220	0	True				
ANR	1090323	Identifier	UT64_MAX		1090220	0					
ANR	1090324	ExpressionStatement	pos *= R_CORE_ASMQJMPS_LETTERS	151:2:4292:4322	1090220	4	True				
ANR	1090325	AssignmentExpression	pos *= R_CORE_ASMQJMPS_LETTERS		1090220	0		*=			
ANR	1090326	Identifier	pos		1090220	0					
ANR	1090327	Identifier	R_CORE_ASMQJMPS_LETTERS		1090220	1					
ANR	1090328	ExpressionStatement	pos += str [ i ] - 'a'	152:2:4326:4345	1090220	5	True				
ANR	1090329	AssignmentExpression	pos += str [ i ] - 'a'		1090220	0		+=			
ANR	1090330	Identifier	pos		1090220	0					
ANR	1090331	AdditiveExpression	str [ i ] - 'a'		1090220	1		-			
ANR	1090332	ArrayIndexing	str [ i ]		1090220	0					
ANR	1090333	Identifier	str		1090220	0					
ANR	1090334	Identifier	i		1090220	1					
ANR	1090335	PrimaryExpression	'a'		1090220	1					
ANR	1090336	IfStatement	if ( pos < core -> asmqjmps_count )		1090220	6					
ANR	1090337	Condition	pos < core -> asmqjmps_count	153:6:4353:4378	1090220	0	True				
ANR	1090338	RelationalExpression	pos < core -> asmqjmps_count		1090220	0		<			
ANR	1090339	Identifier	pos		1090220	0					
ANR	1090340	PtrMemberAccess	core -> asmqjmps_count		1090220	1					
ANR	1090341	Identifier	core		1090220	0					
ANR	1090342	Identifier	asmqjmps_count		1090220	1					
ANR	1090343	CompoundStatement		20:34:431:431	1090220	1					
ANR	1090344	ReturnStatement	return core -> asmqjmps [ pos + 1 ] ;	154:3:4386:4416	1090220	0	True				
ANR	1090345	ArrayIndexing	core -> asmqjmps [ pos + 1 ]		1090220	0					
ANR	1090346	PtrMemberAccess	core -> asmqjmps		1090220	0					
ANR	1090347	Identifier	core		1090220	0					
ANR	1090348	Identifier	asmqjmps		1090220	1					
ANR	1090349	AdditiveExpression	pos + 1		1090220	1		+			
ANR	1090350	Identifier	pos		1090220	0					
ANR	1090351	PrimaryExpression	1		1090220	1					
ANR	1090352	ElseStatement	else		1090220	0					
ANR	1090353	IfStatement	if ( str [ 0 ] > '0' && str [ 1 ] <= '9' )		1090220	0					
ANR	1090354	Condition	str [ 0 ] > '0' && str [ 1 ] <= '9'	156:12:4434:4462	1090220	0	True				
ANR	1090355	AndExpression	str [ 0 ] > '0' && str [ 1 ] <= '9'		1090220	0		&&			
ANR	1090356	RelationalExpression	str [ 0 ] > '0'		1090220	0		>			
ANR	1090357	ArrayIndexing	str [ 0 ]		1090220	0					
ANR	1090358	Identifier	str		1090220	0					
ANR	1090359	PrimaryExpression	0		1090220	1					
ANR	1090360	PrimaryExpression	'0'		1090220	1					
ANR	1090361	RelationalExpression	str [ 1 ] <= '9'		1090220	1		<=			
ANR	1090362	ArrayIndexing	str [ 1 ]		1090220	0					
ANR	1090363	Identifier	str		1090220	0					
ANR	1090364	PrimaryExpression	1		1090220	1					
ANR	1090365	PrimaryExpression	'9'		1090220	1					
ANR	1090366	CompoundStatement		24:2:519:541	1090220	1					
ANR	1090367	IdentifierDeclStatement	int pos = str [ 0 ] - '0' ;	157:2:4469:4491	1090220	0	True				
ANR	1090368	IdentifierDecl	pos = str [ 0 ] - '0'		1090220	0					
ANR	1090369	IdentifierDeclType	int		1090220	0					
ANR	1090370	Identifier	pos		1090220	1					
ANR	1090371	AssignmentExpression	pos = str [ 0 ] - '0'		1090220	2		=			
ANR	1090372	Identifier	pos		1090220	0					
ANR	1090373	AdditiveExpression	str [ 0 ] - '0'		1090220	1		-			
ANR	1090374	ArrayIndexing	str [ 0 ]		1090220	0					
ANR	1090375	Identifier	str		1090220	0					
ANR	1090376	PrimaryExpression	0		1090220	1					
ANR	1090377	PrimaryExpression	'0'		1090220	1					
ANR	1090378	IfStatement	if ( pos <= core -> asmqjmps_count )		1090220	1					
ANR	1090379	Condition	pos <= core -> asmqjmps_count	158:6:4499:4525	1090220	0	True				
ANR	1090380	RelationalExpression	pos <= core -> asmqjmps_count		1090220	0		<=			
ANR	1090381	Identifier	pos		1090220	0					
ANR	1090382	PtrMemberAccess	core -> asmqjmps_count		1090220	1					
ANR	1090383	Identifier	core		1090220	0					
ANR	1090384	Identifier	asmqjmps_count		1090220	1					
ANR	1090385	CompoundStatement		25:35:578:578	1090220	1					
ANR	1090386	ReturnStatement	return core -> asmqjmps [ pos ] ;	159:3:4533:4559	1090220	0	True				
ANR	1090387	ArrayIndexing	core -> asmqjmps [ pos ]		1090220	0					
ANR	1090388	PtrMemberAccess	core -> asmqjmps		1090220	0					
ANR	1090389	Identifier	core		1090220	0					
ANR	1090390	Identifier	asmqjmps		1090220	1					
ANR	1090391	Identifier	pos		1090220	1					
ANR	1090392	ReturnStatement	return UT64_MAX ;	162:1:4569:4584	1090220	2	True				
ANR	1090393	Identifier	UT64_MAX		1090220	0					
ANR	1090394	ReturnType	R_API ut64		1090220	1					
ANR	1090395	Identifier	r_core_get_asmqjmps		1090220	2					
ANR	1090396	ParameterList	"RCore * core , const char * str"		1090220	3					
ANR	1090397	Parameter	RCore * core	134:31:3919:3929	1090220	0	True				
ANR	1090398	ParameterType	RCore *		1090220	0					
ANR	1090399	Identifier	core		1090220	1					
ANR	1090400	Parameter	const char * str	134:44:3932:3946	1090220	1	True				
ANR	1090401	ParameterType	const char *		1090220	0					
ANR	1090402	Identifier	str		1090220	1					
ANR	1090403	CFGEntryNode	ENTRY		1090220		True				
ANR	1090404	CFGExitNode	EXIT		1090220		True				
ANR	1090405	Symbol	core -> asmqjmps		1090220						
ANR	1090406	Symbol	core -> is_asmqjmps_letter		1090220						
ANR	1090407	Symbol	R_CORE_ASMQJMPS_LETTERS		1090220						
ANR	1090408	Symbol	islower		1090220						
ANR	1090409	Symbol	* core		1090220						
ANR	1090410	Symbol	isupper		1090220						
ANR	1090411	Symbol	i		1090220						
ANR	1090412	Symbol	str		1090220						
ANR	1090413	Symbol	core		1090220						
ANR	1090414	Symbol	strlen		1090220						
ANR	1090415	Symbol	core -> asmqjmps_count		1090220						
ANR	1090416	Symbol	* i		1090220						
ANR	1090417	Symbol	len		1090220						
ANR	1090418	Symbol	* core -> asmqjmps		1090220						
ANR	1090419	Symbol	pos		1090220						
ANR	1090420	Symbol	* str		1090220						
ANR	1090421	Symbol	UT64_MAX		1090220						
ANR	1090422	Symbol	* pos		1090220						
ANR	1090423	Symbol	* * core		1090220						
ANR	1090424	Function	r_core_add_asmqjmp	169:0:4700:5675							
ANR	1090425	FunctionDef	"r_core_add_asmqjmp (RCore * core , ut64 addr)"		1090424	0					
ANR	1090426	CompoundStatement		169:55:4755:5675	1090424	0					
ANR	1090427	IdentifierDeclStatement	bool found = false ;	170:1:4758:4776	1090424	0	True				
ANR	1090428	IdentifierDecl	found = false		1090424	0					
ANR	1090429	IdentifierDeclType	bool		1090424	0					
ANR	1090430	Identifier	found		1090424	1					
ANR	1090431	AssignmentExpression	found = false		1090424	2		=			
ANR	1090432	Identifier	false		1090424	0					
ANR	1090433	Identifier	false		1090424	1					
ANR	1090434	IfStatement	if ( ! core -> asmqjmps )		1090424	1					
ANR	1090435	Condition	! core -> asmqjmps	171:5:4783:4797	1090424	0	True				
ANR	1090436	UnaryOperationExpression	! core -> asmqjmps		1090424	0					
ANR	1090437	UnaryOperator	!		1090424	0					
ANR	1090438	PtrMemberAccess	core -> asmqjmps		1090424	1					
ANR	1090439	Identifier	core		1090424	0					
ANR	1090440	Identifier	asmqjmps		1090424	1					
ANR	1090441	CompoundStatement		3:22:44:44	1090424	1					
ANR	1090442	ReturnStatement	return NULL ;	172:2:4804:4815	1090424	0	True				
ANR	1090443	Identifier	NULL		1090424	0					
ANR	1090444	IfStatement	if ( core -> is_asmqjmps_letter )		1090424	2					
ANR	1090445	Condition	core -> is_asmqjmps_letter	174:5:4825:4848	1090424	0	True				
ANR	1090446	PtrMemberAccess	core -> is_asmqjmps_letter		1090424	0					
ANR	1090447	Identifier	core		1090424	0					
ANR	1090448	Identifier	is_asmqjmps_letter		1090424	1					
ANR	1090449	CompoundStatement		6:31:95:95	1090424	1					
ANR	1090450	IfStatement	if ( core -> asmqjmps_count >= R_CORE_ASMQJMPS_MAX_LETTERS )		1090424	0					
ANR	1090451	Condition	core -> asmqjmps_count >= R_CORE_ASMQJMPS_MAX_LETTERS	175:6:4859:4909	1090424	0	True				
ANR	1090452	RelationalExpression	core -> asmqjmps_count >= R_CORE_ASMQJMPS_MAX_LETTERS		1090424	0		>=			
ANR	1090453	PtrMemberAccess	core -> asmqjmps_count		1090424	0					
ANR	1090454	Identifier	core		1090424	0					
ANR	1090455	Identifier	asmqjmps_count		1090424	1					
ANR	1090456	Identifier	R_CORE_ASMQJMPS_MAX_LETTERS		1090424	1					
ANR	1090457	CompoundStatement		7:59:156:156	1090424	1					
ANR	1090458	ReturnStatement	return NULL ;	176:3:4917:4928	1090424	0	True				
ANR	1090459	Identifier	NULL		1090424	0					
ANR	1090460	IfStatement	if ( core -> asmqjmps_count >= core -> asmqjmps_size - 2 )		1090424	1					
ANR	1090461	Condition	core -> asmqjmps_count >= core -> asmqjmps_size - 2	178:6:4940:4986	1090424	0	True				
ANR	1090462	RelationalExpression	core -> asmqjmps_count >= core -> asmqjmps_size - 2		1090424	0		>=			
ANR	1090463	PtrMemberAccess	core -> asmqjmps_count		1090424	0					
ANR	1090464	Identifier	core		1090424	0					
ANR	1090465	Identifier	asmqjmps_count		1090424	1					
ANR	1090466	AdditiveExpression	core -> asmqjmps_size - 2		1090424	1		-			
ANR	1090467	PtrMemberAccess	core -> asmqjmps_size		1090424	0					
ANR	1090468	Identifier	core		1090424	0					
ANR	1090469	Identifier	asmqjmps_size		1090424	1					
ANR	1090470	PrimaryExpression	2		1090424	1					
ANR	1090471	CompoundStatement		10:55:233:233	1090424	1					
ANR	1090472	ExpressionStatement	"core -> asmqjmps = realloc ( core -> asmqjmps , core -> asmqjmps_size * 2 * sizeof ( ut64 ) )"	179:3:4994:5076	1090424	0	True				
ANR	1090473	AssignmentExpression	"core -> asmqjmps = realloc ( core -> asmqjmps , core -> asmqjmps_size * 2 * sizeof ( ut64 ) )"		1090424	0		=			
ANR	1090474	PtrMemberAccess	core -> asmqjmps		1090424	0					
ANR	1090475	Identifier	core		1090424	0					
ANR	1090476	Identifier	asmqjmps		1090424	1					
ANR	1090477	CallExpression	"realloc ( core -> asmqjmps , core -> asmqjmps_size * 2 * sizeof ( ut64 ) )"		1090424	1					
ANR	1090478	Callee	realloc		1090424	0					
ANR	1090479	Identifier	realloc		1090424	0					
ANR	1090480	ArgumentList	core -> asmqjmps		1090424	1					
ANR	1090481	Argument	core -> asmqjmps		1090424	0					
ANR	1090482	PtrMemberAccess	core -> asmqjmps		1090424	0					
ANR	1090483	Identifier	core		1090424	0					
ANR	1090484	Identifier	asmqjmps		1090424	1					
ANR	1090485	Argument	core -> asmqjmps_size * 2 * sizeof ( ut64 )		1090424	1					
ANR	1090486	MultiplicativeExpression	core -> asmqjmps_size * 2 * sizeof ( ut64 )		1090424	0		*			
ANR	1090487	PtrMemberAccess	core -> asmqjmps_size		1090424	0					
ANR	1090488	Identifier	core		1090424	0					
ANR	1090489	Identifier	asmqjmps_size		1090424	1					
ANR	1090490	MultiplicativeExpression	2 * sizeof ( ut64 )		1090424	1		*			
ANR	1090491	PrimaryExpression	2		1090424	0					
ANR	1090492	SizeofExpression	sizeof ( ut64 )		1090424	1					
ANR	1090493	Sizeof	sizeof		1090424	0					
ANR	1090494	SizeofOperand	ut64		1090424	1					
ANR	1090495	IfStatement	if ( ! core -> asmqjmps )		1090424	1					
ANR	1090496	Condition	! core -> asmqjmps	180:7:5085:5099	1090424	0	True				
ANR	1090497	UnaryOperationExpression	! core -> asmqjmps		1090424	0					
ANR	1090498	UnaryOperator	!		1090424	0					
ANR	1090499	PtrMemberAccess	core -> asmqjmps		1090424	1					
ANR	1090500	Identifier	core		1090424	0					
ANR	1090501	Identifier	asmqjmps		1090424	1					
ANR	1090502	CompoundStatement		12:24:346:346	1090424	1					
ANR	1090503	ReturnStatement	return NULL ;	181:4:5108:5119	1090424	0	True				
ANR	1090504	Identifier	NULL		1090424	0					
ANR	1090505	ExpressionStatement	core -> asmqjmps_size *= 2	183:3:5129:5153	1090424	2	True				
ANR	1090506	AssignmentExpression	core -> asmqjmps_size *= 2		1090424	0		*=			
ANR	1090507	PtrMemberAccess	core -> asmqjmps_size		1090424	0					
ANR	1090508	Identifier	core		1090424	0					
ANR	1090509	Identifier	asmqjmps_size		1090424	1					
ANR	1090510	PrimaryExpression	2		1090424	1					
ANR	1090511	IfStatement	if ( core -> asmqjmps_count < core -> asmqjmps_size - 1 )		1090424	3					
ANR	1090512	Condition	core -> asmqjmps_count < core -> asmqjmps_size - 1	186:5:5167:5212	1090424	0	True				
ANR	1090513	RelationalExpression	core -> asmqjmps_count < core -> asmqjmps_size - 1		1090424	0		<			
ANR	1090514	PtrMemberAccess	core -> asmqjmps_count		1090424	0					
ANR	1090515	Identifier	core		1090424	0					
ANR	1090516	Identifier	asmqjmps_count		1090424	1					
ANR	1090517	AdditiveExpression	core -> asmqjmps_size - 1		1090424	1		-			
ANR	1090518	PtrMemberAccess	core -> asmqjmps_size		1090424	0					
ANR	1090519	Identifier	core		1090424	0					
ANR	1090520	Identifier	asmqjmps_size		1090424	1					
ANR	1090521	PrimaryExpression	1		1090424	1					
ANR	1090522	CompoundStatement		20:2:476:521	1090424	1					
ANR	1090523	IdentifierDeclStatement	int i = 0 ;	187:2:5219:5228	1090424	0	True				
ANR	1090524	IdentifierDecl	i = 0		1090424	0					
ANR	1090525	IdentifierDeclType	int		1090424	0					
ANR	1090526	Identifier	i		1090424	1					
ANR	1090527	AssignmentExpression	i = 0		1090424	2		=			
ANR	1090528	Identifier	i		1090424	0					
ANR	1090529	PrimaryExpression	0		1090424	1					
ANR	1090530	IdentifierDeclStatement	char t [ R_CORE_ASMQJMPS_LEN_LETTERS + 1 ] = { 0 } ;	188:2:5232:5277	1090424	1	True				
ANR	1090531	IdentifierDecl	t [ R_CORE_ASMQJMPS_LEN_LETTERS + 1 ] = { 0 }		1090424	0					
ANR	1090532	IdentifierDeclType	char [ R_CORE_ASMQJMPS_LEN_LETTERS + 1 ]		1090424	0					
ANR	1090533	Identifier	t		1090424	1					
ANR	1090534	AdditiveExpression	R_CORE_ASMQJMPS_LEN_LETTERS + 1		1090424	2		+			
ANR	1090535	Identifier	R_CORE_ASMQJMPS_LEN_LETTERS		1090424	0					
ANR	1090536	PrimaryExpression	1		1090424	1					
ANR	1090537	AssignmentExpression	t [ R_CORE_ASMQJMPS_LEN_LETTERS + 1 ] = { 0 }		1090424	3		=			
ANR	1090538	Identifier	t		1090424	0					
ANR	1090539	InitializerList	0		1090424	1					
ANR	1090540	PrimaryExpression	0		1090424	0					
ANR	1090541	ForStatement	for ( i = 0 ; i < core -> asmqjmps_count + 1 ; i ++ )		1090424	2					
ANR	1090542	ForInit	i = 0 ;	189:7:5286:5291	1090424	0	True				
ANR	1090543	AssignmentExpression	i = 0		1090424	0		=			
ANR	1090544	Identifier	i		1090424	0					
ANR	1090545	PrimaryExpression	0		1090424	1					
ANR	1090546	Condition	i < core -> asmqjmps_count + 1	189:14:5293:5320	1090424	1	True				
ANR	1090547	RelationalExpression	i < core -> asmqjmps_count + 1		1090424	0		<			
ANR	1090548	Identifier	i		1090424	0					
ANR	1090549	AdditiveExpression	core -> asmqjmps_count + 1		1090424	1		+			
ANR	1090550	PtrMemberAccess	core -> asmqjmps_count		1090424	0					
ANR	1090551	Identifier	core		1090424	0					
ANR	1090552	Identifier	asmqjmps_count		1090424	1					
ANR	1090553	PrimaryExpression	1		1090424	1					
ANR	1090554	PostIncDecOperationExpression	i ++	189:44:5323:5325	1090424	2	True				
ANR	1090555	Identifier	i		1090424	0					
ANR	1090556	IncDec	++		1090424	1					
ANR	1090557	CompoundStatement		21:49:572:572	1090424	3					
ANR	1090558	IfStatement	if ( core -> asmqjmps [ i ] == addr )		1090424	0					
ANR	1090559	Condition	core -> asmqjmps [ i ] == addr	190:7:5337:5361	1090424	0	True				
ANR	1090560	EqualityExpression	core -> asmqjmps [ i ] == addr		1090424	0		==			
ANR	1090561	ArrayIndexing	core -> asmqjmps [ i ]		1090424	0					
ANR	1090562	PtrMemberAccess	core -> asmqjmps		1090424	0					
ANR	1090563	Identifier	core		1090424	0					
ANR	1090564	Identifier	asmqjmps		1090424	1					
ANR	1090565	Identifier	i		1090424	1					
ANR	1090566	Identifier	addr		1090424	1					
ANR	1090567	CompoundStatement		22:34:608:608	1090424	1					
ANR	1090568	ExpressionStatement	found = true	191:4:5370:5382	1090424	0	True				
ANR	1090569	AssignmentExpression	found = true		1090424	0		=			
ANR	1090570	Identifier	found		1090424	0					
ANR	1090571	Identifier	true		1090424	1					
ANR	1090572	BreakStatement	break ;	192:4:5388:5393	1090424	1	True				
ANR	1090573	IfStatement	if ( ! found )		1090424	3					
ANR	1090574	Condition	! found	195:6:5410:5415	1090424	0	True				
ANR	1090575	UnaryOperationExpression	! found		1090424	0					
ANR	1090576	UnaryOperator	!		1090424	0					
ANR	1090577	Identifier	found		1090424	1					
ANR	1090578	CompoundStatement		27:14:662:662	1090424	1					
ANR	1090579	ExpressionStatement	i = ++ core -> asmqjmps_count	196:3:5423:5449	1090424	0	True				
ANR	1090580	AssignmentExpression	i = ++ core -> asmqjmps_count		1090424	0		=			
ANR	1090581	Identifier	i		1090424	0					
ANR	1090582	UnaryExpression	++ core -> asmqjmps_count		1090424	1					
ANR	1090583	IncDec	++		1090424	0					
ANR	1090584	PtrMemberAccess	core -> asmqjmps_count		1090424	1					
ANR	1090585	Identifier	core		1090424	0					
ANR	1090586	Identifier	asmqjmps_count		1090424	1					
ANR	1090587	ExpressionStatement	core -> asmqjmps [ i ] = addr	197:3:5454:5478	1090424	1	True				
ANR	1090588	AssignmentExpression	core -> asmqjmps [ i ] = addr		1090424	0		=			
ANR	1090589	ArrayIndexing	core -> asmqjmps [ i ]		1090424	0					
ANR	1090590	PtrMemberAccess	core -> asmqjmps		1090424	0					
ANR	1090591	Identifier	core		1090424	0					
ANR	1090592	Identifier	asmqjmps		1090424	1					
ANR	1090593	Identifier	i		1090424	1					
ANR	1090594	Identifier	addr		1090424	1					
ANR	1090595	IfStatement	if ( i < 1 )		1090424	4					
ANR	1090596	Condition	i < 1	200:6:5560:5564	1090424	0	True				
ANR	1090597	RelationalExpression	i < 1		1090424	0		<			
ANR	1090598	Identifier	i		1090424	0					
ANR	1090599	PrimaryExpression	1		1090424	1					
ANR	1090600	CompoundStatement		32:13:811:811	1090424	1					
ANR	1090601	ReturnStatement	return NULL ;	201:3:5572:5583	1090424	0	True				
ANR	1090602	Identifier	NULL		1090424	0					
ANR	1090603	ExpressionStatement	"r_core_set_asmqjmps ( core , t , sizeof ( t ) , i )"	203:2:5591:5635	1090424	5	True				
ANR	1090604	CallExpression	"r_core_set_asmqjmps ( core , t , sizeof ( t ) , i )"		1090424	0					
ANR	1090605	Callee	r_core_set_asmqjmps		1090424	0					
ANR	1090606	Identifier	r_core_set_asmqjmps		1090424	0					
ANR	1090607	ArgumentList	core		1090424	1					
ANR	1090608	Argument	core		1090424	0					
ANR	1090609	Identifier	core		1090424	0					
ANR	1090610	Argument	t		1090424	1					
ANR	1090611	Identifier	t		1090424	0					
ANR	1090612	Argument	sizeof ( t )		1090424	2					
ANR	1090613	SizeofExpression	sizeof ( t )		1090424	0					
ANR	1090614	Sizeof	sizeof		1090424	0					
ANR	1090615	SizeofOperand	t		1090424	1					
ANR	1090616	Argument	i		1090424	3					
ANR	1090617	Identifier	i		1090424	0					
ANR	1090618	ReturnStatement	return strdup ( t ) ;	204:2:5639:5656	1090424	6	True				
ANR	1090619	CallExpression	strdup ( t )		1090424	0					
ANR	1090620	Callee	strdup		1090424	0					
ANR	1090621	Identifier	strdup		1090424	0					
ANR	1090622	ArgumentList	t		1090424	1					
ANR	1090623	Argument	t		1090424	0					
ANR	1090624	Identifier	t		1090424	0					
ANR	1090625	ReturnStatement	return NULL ;	206:1:5662:5673	1090424	4	True				
ANR	1090626	Identifier	NULL		1090424	0					
ANR	1090627	ReturnType	R_API char *		1090424	1					
ANR	1090628	Identifier	r_core_add_asmqjmp		1090424	2					
ANR	1090629	ParameterList	"RCore * core , ut64 addr"		1090424	3					
ANR	1090630	Parameter	RCore * core	169:31:4731:4741	1090424	0	True				
ANR	1090631	ParameterType	RCore *		1090424	0					
ANR	1090632	Identifier	core		1090424	1					
ANR	1090633	Parameter	ut64 addr	169:44:4744:4752	1090424	1	True				
ANR	1090634	ParameterType	ut64		1090424	0					
ANR	1090635	Identifier	addr		1090424	1					
ANR	1090636	CFGEntryNode	ENTRY		1090424		True				
ANR	1090637	CFGExitNode	EXIT		1090424		True				
ANR	1090638	Symbol	core -> asmqjmps		1090424						
ANR	1090639	Symbol	NULL		1090424						
ANR	1090640	Symbol	core -> is_asmqjmps_letter		1090424						
ANR	1090641	Symbol	R_CORE_ASMQJMPS_MAX_LETTERS		1090424						
ANR	1090642	Symbol	false		1090424						
ANR	1090643	Symbol	* core		1090424						
ANR	1090644	Symbol	i		1090424						
ANR	1090645	Symbol	realloc		1090424						
ANR	1090646	Symbol	core -> asmqjmps_size		1090424						
ANR	1090647	Symbol	core		1090424						
ANR	1090648	Symbol	core -> asmqjmps_count		1090424						
ANR	1090649	Symbol	found		1090424						
ANR	1090650	Symbol	* i		1090424						
ANR	1090651	Symbol	t		1090424						
ANR	1090652	Symbol	* core -> asmqjmps		1090424						
ANR	1090653	Symbol	true		1090424						
ANR	1090654	Symbol	strdup		1090424						
ANR	1090655	Symbol	addr		1090424						
ANR	1090656	Symbol	* * core		1090424						
ANR	1090657	Function	r_core_set_asmqjmps	213:0:5996:6505							
ANR	1090658	FunctionDef	"r_core_set_asmqjmps (RCore * core , char * str , size_t len , int pos)"		1090657	0					
ANR	1090659	CompoundStatement		213:76:6072:6505	1090657	0					
ANR	1090660	IfStatement	if ( core -> is_asmqjmps_letter )		1090657	0					
ANR	1090661	Condition	core -> is_asmqjmps_letter	214:5:6079:6102	1090657	0	True				
ANR	1090662	PtrMemberAccess	core -> is_asmqjmps_letter		1090657	0					
ANR	1090663	Identifier	core		1090657	0					
ANR	1090664	Identifier	is_asmqjmps_letter		1090657	1					
ANR	1090665	CompoundStatement		3:2:36:48	1090657	1					
ANR	1090666	IdentifierDeclStatement	"int i , j = 0 ;"	215:2:6109:6121	1090657	0	True				
ANR	1090667	IdentifierDecl	i		1090657	0					
ANR	1090668	IdentifierDeclType	int		1090657	0					
ANR	1090669	Identifier	i		1090657	1					
ANR	1090670	IdentifierDecl	j = 0		1090657	1					
ANR	1090671	IdentifierDeclType	int		1090657	0					
ANR	1090672	Identifier	j		1090657	1					
ANR	1090673	AssignmentExpression	j = 0		1090657	2		=			
ANR	1090674	Identifier	j		1090657	0					
ANR	1090675	PrimaryExpression	0		1090657	1					
ANR	1090676	ExpressionStatement	pos --	217:3:6146:6152	1090657	1	True				
ANR	1090677	PostIncDecOperationExpression	pos --		1090657	0					
ANR	1090678	Identifier	pos		1090657	0					
ANR	1090679	IncDec	--		1090657	1					
ANR	1090680	ForStatement	for ( i = 0 ; i < R_CORE_ASMQJMPS_LEN_LETTERS - 1 ; i ++ )		1090657	2					
ANR	1090681	ForInit	i = 0 ;	219:7:6171:6176	1090657	0	True				
ANR	1090682	AssignmentExpression	i = 0		1090657	0		=			
ANR	1090683	Identifier	i		1090657	0					
ANR	1090684	PrimaryExpression	0		1090657	1					
ANR	1090685	Condition	i < R_CORE_ASMQJMPS_LEN_LETTERS - 1	219:14:6178:6212	1090657	1	True				
ANR	1090686	RelationalExpression	i < R_CORE_ASMQJMPS_LEN_LETTERS - 1		1090657	0		<			
ANR	1090687	Identifier	i		1090657	0					
ANR	1090688	AdditiveExpression	R_CORE_ASMQJMPS_LEN_LETTERS - 1		1090657	1		-			
ANR	1090689	Identifier	R_CORE_ASMQJMPS_LEN_LETTERS		1090657	0					
ANR	1090690	PrimaryExpression	1		1090657	1					
ANR	1090691	PostIncDecOperationExpression	i ++	219:51:6215:6217	1090657	2	True				
ANR	1090692	Identifier	i		1090657	0					
ANR	1090693	IncDec	++		1090657	1					
ANR	1090694	CompoundStatement		8:3:152:182	1090657	3					
ANR	1090695	IdentifierDeclStatement	int div = pos / letter_divs [ i ] ;	220:3:6225:6255	1090657	0	True				
ANR	1090696	IdentifierDecl	div = pos / letter_divs [ i ]		1090657	0					
ANR	1090697	IdentifierDeclType	int		1090657	0					
ANR	1090698	Identifier	div		1090657	1					
ANR	1090699	AssignmentExpression	div = pos / letter_divs [ i ]		1090657	2		=			
ANR	1090700	Identifier	div		1090657	0					
ANR	1090701	MultiplicativeExpression	pos / letter_divs [ i ]		1090657	1		/			
ANR	1090702	Identifier	pos		1090657	0					
ANR	1090703	ArrayIndexing	letter_divs [ i ]		1090657	1					
ANR	1090704	Identifier	letter_divs		1090657	0					
ANR	1090705	Identifier	i		1090657	1					
ANR	1090706	ExpressionStatement	pos %= letter_divs [ i ]	221:3:6260:6281	1090657	1	True				
ANR	1090707	AssignmentExpression	pos %= letter_divs [ i ]		1090657	0		%=			
ANR	1090708	Identifier	pos		1090657	0					
ANR	1090709	ArrayIndexing	letter_divs [ i ]		1090657	1					
ANR	1090710	Identifier	letter_divs		1090657	0					
ANR	1090711	Identifier	i		1090657	1					
ANR	1090712	IfStatement	if ( div > 0 && j < len )		1090657	2					
ANR	1090713	Condition	div > 0 && j < len	222:7:6290:6307	1090657	0	True				
ANR	1090714	AndExpression	div > 0 && j < len		1090657	0		&&			
ANR	1090715	RelationalExpression	div > 0		1090657	0		>			
ANR	1090716	Identifier	div		1090657	0					
ANR	1090717	PrimaryExpression	0		1090657	1					
ANR	1090718	RelationalExpression	j < len		1090657	1		<			
ANR	1090719	Identifier	j		1090657	0					
ANR	1090720	Identifier	len		1090657	1					
ANR	1090721	CompoundStatement		10:27:237:237	1090657	1					
ANR	1090722	ExpressionStatement	str [ j ++ ] = 'A' + div - 1	223:4:6316:6340	1090657	0	True				
ANR	1090723	AssignmentExpression	str [ j ++ ] = 'A' + div - 1		1090657	0		=			
ANR	1090724	ArrayIndexing	str [ j ++ ]		1090657	0					
ANR	1090725	Identifier	str		1090657	0					
ANR	1090726	PostIncDecOperationExpression	j ++		1090657	1					
ANR	1090727	Identifier	j		1090657	0					
ANR	1090728	IncDec	++		1090657	1					
ANR	1090729	AdditiveExpression	'A' + div - 1		1090657	1		+			
ANR	1090730	PrimaryExpression	'A'		1090657	0					
ANR	1090731	AdditiveExpression	div - 1		1090657	1		-			
ANR	1090732	Identifier	div		1090657	0					
ANR	1090733	PrimaryExpression	1		1090657	1					
ANR	1090734	IfStatement	if ( j < len )		1090657	3					
ANR	1090735	Condition	j < len	226:6:6357:6363	1090657	0	True				
ANR	1090736	RelationalExpression	j < len		1090657	0		<			
ANR	1090737	Identifier	j		1090657	0					
ANR	1090738	Identifier	len		1090657	1					
ANR	1090739	CompoundStatement		15:3:298:337	1090657	1					
ANR	1090740	IdentifierDeclStatement	int div = pos % R_CORE_ASMQJMPS_LETTERS ;	227:3:6371:6410	1090657	0	True				
ANR	1090741	IdentifierDecl	div = pos % R_CORE_ASMQJMPS_LETTERS		1090657	0					
ANR	1090742	IdentifierDeclType	int		1090657	0					
ANR	1090743	Identifier	div		1090657	1					
ANR	1090744	AssignmentExpression	div = pos % R_CORE_ASMQJMPS_LETTERS		1090657	2		=			
ANR	1090745	Identifier	div		1090657	0					
ANR	1090746	MultiplicativeExpression	pos % R_CORE_ASMQJMPS_LETTERS		1090657	1		%			
ANR	1090747	Identifier	pos		1090657	0					
ANR	1090748	Identifier	R_CORE_ASMQJMPS_LETTERS		1090657	1					
ANR	1090749	ExpressionStatement	str [ j ++ ] = 'a' + div	228:3:6415:6435	1090657	1	True				
ANR	1090750	AssignmentExpression	str [ j ++ ] = 'a' + div		1090657	0		=			
ANR	1090751	ArrayIndexing	str [ j ++ ]		1090657	0					
ANR	1090752	Identifier	str		1090657	0					
ANR	1090753	PostIncDecOperationExpression	j ++		1090657	1					
ANR	1090754	Identifier	j		1090657	0					
ANR	1090755	IncDec	++		1090657	1					
ANR	1090756	AdditiveExpression	'a' + div		1090657	1		+			
ANR	1090757	PrimaryExpression	'a'		1090657	0					
ANR	1090758	Identifier	div		1090657	1					
ANR	1090759	ExpressionStatement	str [ j ] = '\\0'	230:2:6443:6456	1090657	4	True				
ANR	1090760	AssignmentExpression	str [ j ] = '\\0'		1090657	0		=			
ANR	1090761	ArrayIndexing	str [ j ]		1090657	0					
ANR	1090762	Identifier	str		1090657	0					
ANR	1090763	Identifier	j		1090657	1					
ANR	1090764	PrimaryExpression	'\\0'		1090657	1					
ANR	1090765	ElseStatement	else		1090657	0					
ANR	1090766	CompoundStatement		19:8:393:393	1090657	0					
ANR	1090767	ExpressionStatement	"snprintf ( str , len , ""%d"" , pos )"	232:2:6470:6500	1090657	0	True				
ANR	1090768	CallExpression	"snprintf ( str , len , ""%d"" , pos )"		1090657	0					
ANR	1090769	Callee	snprintf		1090657	0					
ANR	1090770	Identifier	snprintf		1090657	0					
ANR	1090771	ArgumentList	str		1090657	1					
ANR	1090772	Argument	str		1090657	0					
ANR	1090773	Identifier	str		1090657	0					
ANR	1090774	Argument	len		1090657	1					
ANR	1090775	Identifier	len		1090657	0					
ANR	1090776	Argument	"""%d"""		1090657	2					
ANR	1090777	PrimaryExpression	"""%d"""		1090657	0					
ANR	1090778	Argument	pos		1090657	3					
ANR	1090779	Identifier	pos		1090657	0					
ANR	1090780	ReturnType	R_API void		1090657	1					
ANR	1090781	Identifier	r_core_set_asmqjmps		1090657	2					
ANR	1090782	ParameterList	"RCore * core , char * str , size_t len , int pos"		1090657	3					
ANR	1090783	Parameter	RCore * core	213:31:6027:6037	1090657	0	True				
ANR	1090784	ParameterType	RCore *		1090657	0					
ANR	1090785	Identifier	core		1090657	1					
ANR	1090786	Parameter	char * str	213:44:6040:6048	1090657	1	True				
ANR	1090787	ParameterType	char *		1090657	0					
ANR	1090788	Identifier	str		1090657	1					
ANR	1090789	Parameter	size_t len	213:55:6051:6060	1090657	2	True				
ANR	1090790	ParameterType	size_t		1090657	0					
ANR	1090791	Identifier	len		1090657	1					
ANR	1090792	Parameter	int pos	213:67:6063:6069	1090657	3	True				
ANR	1090793	ParameterType	int		1090657	0					
ANR	1090794	Identifier	pos		1090657	1					
ANR	1090795	CFGEntryNode	ENTRY		1090657		True				
ANR	1090796	CFGExitNode	EXIT		1090657		True				
ANR	1090797	Symbol	core -> is_asmqjmps_letter		1090657						
ANR	1090798	Symbol	R_CORE_ASMQJMPS_LETTERS		1090657						
ANR	1090799	Symbol	* core		1090657						
ANR	1090800	Symbol	R_CORE_ASMQJMPS_LEN_LETTERS		1090657						
ANR	1090801	Symbol	i		1090657						
ANR	1090802	Symbol	j		1090657						
ANR	1090803	Symbol	str		1090657						
ANR	1090804	Symbol	div		1090657						
ANR	1090805	Symbol	core		1090657						
ANR	1090806	Symbol	* i		1090657						
ANR	1090807	Symbol	len		1090657						
ANR	1090808	Symbol	* j		1090657						
ANR	1090809	Symbol	pos		1090657						
ANR	1090810	Symbol	* str		1090657						
ANR	1090811	Symbol	letter_divs		1090657						
ANR	1090812	Symbol	* letter_divs		1090657						
ANR	1090813	Function	setab	236:0:6508:6705							
ANR	1090814	FunctionDef	"setab (RCore * core , const char * arch , int bits)"		1090813	0					
ANR	1090815	CompoundStatement		236:59:6567:6705	1090813	0					
ANR	1090816	IfStatement	if ( arch )		1090813	0					
ANR	1090817	Condition	arch	237:5:6574:6577	1090813	0	True				
ANR	1090818	Identifier	arch		1090813	0					
ANR	1090819	CompoundStatement		2:11:12:12	1090813	1					
ANR	1090820	ExpressionStatement	"r_config_set ( core -> config , ""asm.arch"" , arch )"	238:2:6584:6629	1090813	0	True				
ANR	1090821	CallExpression	"r_config_set ( core -> config , ""asm.arch"" , arch )"		1090813	0					
ANR	1090822	Callee	r_config_set		1090813	0					
ANR	1090823	Identifier	r_config_set		1090813	0					
ANR	1090824	ArgumentList	core -> config		1090813	1					
ANR	1090825	Argument	core -> config		1090813	0					
ANR	1090826	PtrMemberAccess	core -> config		1090813	0					
ANR	1090827	Identifier	core		1090813	0					
ANR	1090828	Identifier	config		1090813	1					
ANR	1090829	Argument	"""asm.arch"""		1090813	1					
ANR	1090830	PrimaryExpression	"""asm.arch"""		1090813	0					
ANR	1090831	Argument	arch		1090813	2					
ANR	1090832	Identifier	arch		1090813	0					
ANR	1090833	IfStatement	if ( bits > 0 )		1090813	1					
ANR	1090834	Condition	bits > 0	240:5:6639:6646	1090813	0	True				
ANR	1090835	RelationalExpression	bits > 0		1090813	0		>			
ANR	1090836	Identifier	bits		1090813	0					
ANR	1090837	PrimaryExpression	0		1090813	1					
ANR	1090838	CompoundStatement		5:15:81:81	1090813	1					
ANR	1090839	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.bits"" , bits )"	241:2:6653:6700	1090813	0	True				
ANR	1090840	CallExpression	"r_config_set_i ( core -> config , ""asm.bits"" , bits )"		1090813	0					
ANR	1090841	Callee	r_config_set_i		1090813	0					
ANR	1090842	Identifier	r_config_set_i		1090813	0					
ANR	1090843	ArgumentList	core -> config		1090813	1					
ANR	1090844	Argument	core -> config		1090813	0					
ANR	1090845	PtrMemberAccess	core -> config		1090813	0					
ANR	1090846	Identifier	core		1090813	0					
ANR	1090847	Identifier	config		1090813	1					
ANR	1090848	Argument	"""asm.bits"""		1090813	1					
ANR	1090849	PrimaryExpression	"""asm.bits"""		1090813	0					
ANR	1090850	Argument	bits		1090813	2					
ANR	1090851	Identifier	bits		1090813	0					
ANR	1090852	ReturnType	static void		1090813	1					
ANR	1090853	Identifier	setab		1090813	2					
ANR	1090854	ParameterList	"RCore * core , const char * arch , int bits"		1090813	3					
ANR	1090855	Parameter	RCore * core	236:18:6526:6536	1090813	0	True				
ANR	1090856	ParameterType	RCore *		1090813	0					
ANR	1090857	Identifier	core		1090813	1					
ANR	1090858	Parameter	const char * arch	236:31:6539:6554	1090813	1	True				
ANR	1090859	ParameterType	const char *		1090813	0					
ANR	1090860	Identifier	arch		1090813	1					
ANR	1090861	Parameter	int bits	236:49:6557:6564	1090813	2	True				
ANR	1090862	ParameterType	int		1090813	0					
ANR	1090863	Identifier	bits		1090813	1					
ANR	1090864	CFGEntryNode	ENTRY		1090813		True				
ANR	1090865	CFGExitNode	EXIT		1090813		True				
ANR	1090866	Symbol	core -> config		1090813						
ANR	1090867	Symbol	core		1090813						
ANR	1090868	Symbol	bits		1090813						
ANR	1090869	Symbol	* core		1090813						
ANR	1090870	Symbol	arch		1090813						
ANR	1090871	Function	getName	245:0:6708:6848							
ANR	1090872	FunctionDef	"getName (RCore * core , ut64 addr)"		1090871	0					
ANR	1090873	CompoundStatement		245:51:6759:6848	1090871	0					
ANR	1090874	IdentifierDeclStatement	"RFlagItem * item = r_flag_get_i ( core -> flags , addr ) ;"	246:1:6762:6812	1090871	0	True				
ANR	1090875	IdentifierDecl	"* item = r_flag_get_i ( core -> flags , addr )"		1090871	0					
ANR	1090876	IdentifierDeclType	RFlagItem *		1090871	0					
ANR	1090877	Identifier	item		1090871	1					
ANR	1090878	AssignmentExpression	"* item = r_flag_get_i ( core -> flags , addr )"		1090871	2		=			
ANR	1090879	Identifier	item		1090871	0					
ANR	1090880	CallExpression	"r_flag_get_i ( core -> flags , addr )"		1090871	1					
ANR	1090881	Callee	r_flag_get_i		1090871	0					
ANR	1090882	Identifier	r_flag_get_i		1090871	0					
ANR	1090883	ArgumentList	core -> flags		1090871	1					
ANR	1090884	Argument	core -> flags		1090871	0					
ANR	1090885	PtrMemberAccess	core -> flags		1090871	0					
ANR	1090886	Identifier	core		1090871	0					
ANR	1090887	Identifier	flags		1090871	1					
ANR	1090888	Argument	addr		1090871	1					
ANR	1090889	Identifier	addr		1090871	0					
ANR	1090890	ReturnStatement	return item ? item -> name : NULL ;	247:1:6815:6846	1090871	1	True				
ANR	1090891	ConditionalExpression	item ? item -> name : NULL		1090871	0					
ANR	1090892	Condition	item		1090871	0					
ANR	1090893	Identifier	item		1090871	0					
ANR	1090894	PtrMemberAccess	item -> name		1090871	1					
ANR	1090895	Identifier	item		1090871	0					
ANR	1090896	Identifier	name		1090871	1					
ANR	1090897	Identifier	NULL		1090871	2					
ANR	1090898	ReturnType	static const char *		1090871	1					
ANR	1090899	Identifier	getName		1090871	2					
ANR	1090900	ParameterList	"RCore * core , ut64 addr"		1090871	3					
ANR	1090901	Parameter	RCore * core	245:27:6735:6745	1090871	0	True				
ANR	1090902	ParameterType	RCore *		1090871	0					
ANR	1090903	Identifier	core		1090871	1					
ANR	1090904	Parameter	ut64 addr	245:40:6748:6756	1090871	1	True				
ANR	1090905	ParameterType	ut64		1090871	0					
ANR	1090906	Identifier	addr		1090871	1					
ANR	1090907	CFGEntryNode	ENTRY		1090871		True				
ANR	1090908	CFGExitNode	EXIT		1090871		True				
ANR	1090909	Symbol	core		1090871						
ANR	1090910	Symbol	item		1090871						
ANR	1090911	Symbol	NULL		1090871						
ANR	1090912	Symbol	* item		1090871						
ANR	1090913	Symbol	item -> name		1090871						
ANR	1090914	Symbol	* core		1090871						
ANR	1090915	Symbol	core -> flags		1090871						
ANR	1090916	Symbol	addr		1090871						
ANR	1090917	Symbol	r_flag_get_i		1090871						
ANR	1090918	Function	getNameDelta	250:0:6851:7131							
ANR	1090919	FunctionDef	"getNameDelta (RCore * core , ut64 addr)"		1090918	0					
ANR	1090920	CompoundStatement		250:50:6901:7131	1090918	0					
ANR	1090921	IdentifierDeclStatement	"RFlagItem * item = r_flag_get_at ( core -> flags , addr , true ) ;"	251:1:6904:6961	1090918	0	True				
ANR	1090922	IdentifierDecl	"* item = r_flag_get_at ( core -> flags , addr , true )"		1090918	0					
ANR	1090923	IdentifierDeclType	RFlagItem *		1090918	0					
ANR	1090924	Identifier	item		1090918	1					
ANR	1090925	AssignmentExpression	"* item = r_flag_get_at ( core -> flags , addr , true )"		1090918	2		=			
ANR	1090926	Identifier	item		1090918	0					
ANR	1090927	CallExpression	"r_flag_get_at ( core -> flags , addr , true )"		1090918	1					
ANR	1090928	Callee	r_flag_get_at		1090918	0					
ANR	1090929	Identifier	r_flag_get_at		1090918	0					
ANR	1090930	ArgumentList	core -> flags		1090918	1					
ANR	1090931	Argument	core -> flags		1090918	0					
ANR	1090932	PtrMemberAccess	core -> flags		1090918	0					
ANR	1090933	Identifier	core		1090918	0					
ANR	1090934	Identifier	flags		1090918	1					
ANR	1090935	Argument	addr		1090918	1					
ANR	1090936	Identifier	addr		1090918	0					
ANR	1090937	Argument	true		1090918	2					
ANR	1090938	Identifier	true		1090918	0					
ANR	1090939	IfStatement	if ( item )		1090918	1					
ANR	1090940	Condition	item	252:5:6968:6971	1090918	0	True				
ANR	1090941	Identifier	item		1090918	0					
ANR	1090942	CompoundStatement		3:11:72:72	1090918	1					
ANR	1090943	IfStatement	if ( item -> offset != addr )		1090918	0					
ANR	1090944	Condition	item -> offset != addr	253:6:6982:7001	1090918	0	True				
ANR	1090945	EqualityExpression	item -> offset != addr		1090918	0		!=			
ANR	1090946	PtrMemberAccess	item -> offset		1090918	0					
ANR	1090947	Identifier	item		1090918	0					
ANR	1090948	Identifier	offset		1090918	1					
ANR	1090949	Identifier	addr		1090918	1					
ANR	1090950	CompoundStatement		4:28:102:102	1090918	1					
ANR	1090951	ReturnStatement	"return r_str_newf ( ""%s + %d"" , item -> name , ( int ) ( addr - item -> offset ) ) ;"	254:3:7009:7078	1090918	0	True				
ANR	1090952	CallExpression	"r_str_newf ( ""%s + %d"" , item -> name , ( int ) ( addr - item -> offset ) )"		1090918	0					
ANR	1090953	Callee	r_str_newf		1090918	0					
ANR	1090954	Identifier	r_str_newf		1090918	0					
ANR	1090955	ArgumentList	"""%s + %d"""		1090918	1					
ANR	1090956	Argument	"""%s + %d"""		1090918	0					
ANR	1090957	PrimaryExpression	"""%s + %d"""		1090918	0					
ANR	1090958	Argument	item -> name		1090918	1					
ANR	1090959	PtrMemberAccess	item -> name		1090918	0					
ANR	1090960	Identifier	item		1090918	0					
ANR	1090961	Identifier	name		1090918	1					
ANR	1090962	Argument	( int ) ( addr - item -> offset )		1090918	2					
ANR	1090963	CastExpression	( int ) ( addr - item -> offset )		1090918	0					
ANR	1090964	CastTarget	int		1090918	0					
ANR	1090965	AdditiveExpression	addr - item -> offset		1090918	1		-			
ANR	1090966	Identifier	addr		1090918	0					
ANR	1090967	PtrMemberAccess	item -> offset		1090918	1					
ANR	1090968	Identifier	item		1090918	0					
ANR	1090969	Identifier	offset		1090918	1					
ANR	1090970	ReturnStatement	return strdup ( item -> name ) ;	256:2:7086:7112	1090918	1	True				
ANR	1090971	CallExpression	strdup ( item -> name )		1090918	0					
ANR	1090972	Callee	strdup		1090918	0					
ANR	1090973	Identifier	strdup		1090918	0					
ANR	1090974	ArgumentList	item -> name		1090918	1					
ANR	1090975	Argument	item -> name		1090918	0					
ANR	1090976	PtrMemberAccess	item -> name		1090918	0					
ANR	1090977	Identifier	item		1090918	0					
ANR	1090978	Identifier	name		1090918	1					
ANR	1090979	ReturnStatement	return NULL ;	258:1:7118:7129	1090918	2	True				
ANR	1090980	Identifier	NULL		1090918	0					
ANR	1090981	ReturnType	static char *		1090918	1					
ANR	1090982	Identifier	getNameDelta		1090918	2					
ANR	1090983	ParameterList	"RCore * core , ut64 addr"		1090918	3					
ANR	1090984	Parameter	RCore * core	250:26:6877:6887	1090918	0	True				
ANR	1090985	ParameterType	RCore *		1090918	0					
ANR	1090986	Identifier	core		1090918	1					
ANR	1090987	Parameter	ut64 addr	250:39:6890:6898	1090918	1	True				
ANR	1090988	ParameterType	ut64		1090918	0					
ANR	1090989	Identifier	addr		1090918	1					
ANR	1090990	CFGEntryNode	ENTRY		1090918		True				
ANR	1090991	CFGExitNode	EXIT		1090918		True				
ANR	1090992	Symbol	item		1090918						
ANR	1090993	Symbol	NULL		1090918						
ANR	1090994	Symbol	* core		1090918						
ANR	1090995	Symbol	core -> flags		1090918						
ANR	1090996	Symbol	r_str_newf		1090918						
ANR	1090997	Symbol	core		1090918						
ANR	1090998	Symbol	* item		1090918						
ANR	1090999	Symbol	item -> name		1090918						
ANR	1091000	Symbol	true		1090918						
ANR	1091001	Symbol	strdup		1090918						
ANR	1091002	Symbol	addr		1090918						
ANR	1091003	Symbol	r_flag_get_at		1090918						
ANR	1091004	Symbol	item -> offset		1090918						
ANR	1091005	Function	archbits	261:0:7134:7217							
ANR	1091006	FunctionDef	"archbits (RCore * core , ut64 addr)"		1091005	0					
ANR	1091007	CompoundStatement		261:45:7179:7217	1091005	0					
ANR	1091008	ExpressionStatement	"r_core_seek_archbits ( core , addr )"	262:1:7182:7215	1091005	0	True				
ANR	1091009	CallExpression	"r_core_seek_archbits ( core , addr )"		1091005	0					
ANR	1091010	Callee	r_core_seek_archbits		1091005	0					
ANR	1091011	Identifier	r_core_seek_archbits		1091005	0					
ANR	1091012	ArgumentList	core		1091005	1					
ANR	1091013	Argument	core		1091005	0					
ANR	1091014	Identifier	core		1091005	0					
ANR	1091015	Argument	addr		1091005	1					
ANR	1091016	Identifier	addr		1091005	0					
ANR	1091017	ReturnType	static void		1091005	1					
ANR	1091018	Identifier	archbits		1091005	2					
ANR	1091019	ParameterList	"RCore * core , ut64 addr"		1091005	3					
ANR	1091020	Parameter	RCore * core	261:21:7155:7165	1091005	0	True				
ANR	1091021	ParameterType	RCore *		1091005	0					
ANR	1091022	Identifier	core		1091005	1					
ANR	1091023	Parameter	ut64 addr	261:34:7168:7176	1091005	1	True				
ANR	1091024	ParameterType	ut64		1091005	0					
ANR	1091025	Identifier	addr		1091005	1					
ANR	1091026	CFGEntryNode	ENTRY		1091005		True				
ANR	1091027	CFGExitNode	EXIT		1091005		True				
ANR	1091028	Symbol	core		1091005						
ANR	1091029	Symbol	addr		1091005						
ANR	1091030	Function	cfggeti	265:0:7220:7311							
ANR	1091031	FunctionDef	"cfggeti (RCore * core , const char * k)"		1091030	0					
ANR	1091032	CompoundStatement		265:47:7267:7311	1091030	0					
ANR	1091033	ReturnStatement	"return r_config_get_i ( core -> config , k ) ;"	266:1:7270:7309	1091030	0	True				
ANR	1091034	CallExpression	"r_config_get_i ( core -> config , k )"		1091030	0					
ANR	1091035	Callee	r_config_get_i		1091030	0					
ANR	1091036	Identifier	r_config_get_i		1091030	0					
ANR	1091037	ArgumentList	core -> config		1091030	1					
ANR	1091038	Argument	core -> config		1091030	0					
ANR	1091039	PtrMemberAccess	core -> config		1091030	0					
ANR	1091040	Identifier	core		1091030	0					
ANR	1091041	Identifier	config		1091030	1					
ANR	1091042	Argument	k		1091030	1					
ANR	1091043	Identifier	k		1091030	0					
ANR	1091044	ReturnType	static int		1091030	1					
ANR	1091045	Identifier	cfggeti		1091030	2					
ANR	1091046	ParameterList	"RCore * core , const char * k"		1091030	3					
ANR	1091047	Parameter	RCore * core	265:19:7239:7249	1091030	0	True				
ANR	1091048	ParameterType	RCore *		1091030	0					
ANR	1091049	Identifier	core		1091030	1					
ANR	1091050	Parameter	const char * k	265:32:7252:7264	1091030	1	True				
ANR	1091051	ParameterType	const char *		1091030	0					
ANR	1091052	Identifier	k		1091030	1					
ANR	1091053	CFGEntryNode	ENTRY		1091030		True				
ANR	1091054	CFGExitNode	EXIT		1091030		True				
ANR	1091055	Symbol	core -> config		1091030						
ANR	1091056	Symbol	core		1091030						
ANR	1091057	Symbol	r_config_get_i		1091030						
ANR	1091058	Symbol	* core		1091030						
ANR	1091059	Symbol	k		1091030						
ANR	1091060	Function	cfgget	269:0:7314:7410							
ANR	1091061	FunctionDef	"cfgget (RCore * core , const char * k)"		1091060	0					
ANR	1091062	CompoundStatement		269:54:7368:7410	1091060	0					
ANR	1091063	ReturnStatement	"return r_config_get ( core -> config , k ) ;"	270:1:7371:7408	1091060	0	True				
ANR	1091064	CallExpression	"r_config_get ( core -> config , k )"		1091060	0					
ANR	1091065	Callee	r_config_get		1091060	0					
ANR	1091066	Identifier	r_config_get		1091060	0					
ANR	1091067	ArgumentList	core -> config		1091060	1					
ANR	1091068	Argument	core -> config		1091060	0					
ANR	1091069	PtrMemberAccess	core -> config		1091060	0					
ANR	1091070	Identifier	core		1091060	0					
ANR	1091071	Identifier	config		1091060	1					
ANR	1091072	Argument	k		1091060	1					
ANR	1091073	Identifier	k		1091060	0					
ANR	1091074	ReturnType	static const char *		1091060	1					
ANR	1091075	Identifier	cfgget		1091060	2					
ANR	1091076	ParameterList	"RCore * core , const char * k"		1091060	3					
ANR	1091077	Parameter	RCore * core	269:26:7340:7350	1091060	0	True				
ANR	1091078	ParameterType	RCore *		1091060	0					
ANR	1091079	Identifier	core		1091060	1					
ANR	1091080	Parameter	const char * k	269:39:7353:7365	1091060	1	True				
ANR	1091081	ParameterType	const char *		1091060	0					
ANR	1091082	Identifier	k		1091060	1					
ANR	1091083	CFGEntryNode	ENTRY		1091060		True				
ANR	1091084	CFGExitNode	EXIT		1091060		True				
ANR	1091085	Symbol	core -> config		1091060						
ANR	1091086	Symbol	core		1091060						
ANR	1091087	Symbol	* core		1091060						
ANR	1091088	Symbol	r_config_get		1091060						
ANR	1091089	Symbol	k		1091060						
ANR	1091090	Function	numget	273:0:7413:7497							
ANR	1091091	FunctionDef	"numget (RCore * core , const char * k)"		1091090	0					
ANR	1091092	CompoundStatement		273:47:7460:7497	1091090	0					
ANR	1091093	ReturnStatement	"return r_num_math ( core -> num , k ) ;"	274:1:7463:7495	1091090	0	True				
ANR	1091094	CallExpression	"r_num_math ( core -> num , k )"		1091090	0					
ANR	1091095	Callee	r_num_math		1091090	0					
ANR	1091096	Identifier	r_num_math		1091090	0					
ANR	1091097	ArgumentList	core -> num		1091090	1					
ANR	1091098	Argument	core -> num		1091090	0					
ANR	1091099	PtrMemberAccess	core -> num		1091090	0					
ANR	1091100	Identifier	core		1091090	0					
ANR	1091101	Identifier	num		1091090	1					
ANR	1091102	Argument	k		1091090	1					
ANR	1091103	Identifier	k		1091090	0					
ANR	1091104	ReturnType	static ut64		1091090	1					
ANR	1091105	Identifier	numget		1091090	2					
ANR	1091106	ParameterList	"RCore * core , const char * k"		1091090	3					
ANR	1091107	Parameter	RCore * core	273:19:7432:7442	1091090	0	True				
ANR	1091108	ParameterType	RCore *		1091090	0					
ANR	1091109	Identifier	core		1091090	1					
ANR	1091110	Parameter	const char * k	273:32:7445:7457	1091090	1	True				
ANR	1091111	ParameterType	const char *		1091090	0					
ANR	1091112	Identifier	k		1091090	1					
ANR	1091113	CFGEntryNode	ENTRY		1091090		True				
ANR	1091114	CFGExitNode	EXIT		1091090		True				
ANR	1091115	Symbol	core		1091090						
ANR	1091116	Symbol	* core		1091090						
ANR	1091117	Symbol	k		1091090						
ANR	1091118	Symbol	core -> num		1091090						
ANR	1091119	Symbol	r_num_math		1091090						
ANR	1091120	Function	r_core_bind	277:0:7500:8206							
ANR	1091121	FunctionDef	"r_core_bind (RCore * core , RCoreBind * bnd)"		1091120	0					
ANR	1091122	CompoundStatement		277:51:7551:8206	1091120	0					
ANR	1091123	ExpressionStatement	bnd -> core = core	278:1:7554:7570	1091120	0	True				
ANR	1091124	AssignmentExpression	bnd -> core = core		1091120	0		=			
ANR	1091125	PtrMemberAccess	bnd -> core		1091120	0					
ANR	1091126	Identifier	bnd		1091120	0					
ANR	1091127	Identifier	core		1091120	1					
ANR	1091128	Identifier	core		1091120	1					
ANR	1091129	ExpressionStatement	bnd -> bphit = ( RCoreDebugBpHit ) r_core_debug_breakpoint_hit	279:1:7573:7630	1091120	1	True				
ANR	1091130	AssignmentExpression	bnd -> bphit = ( RCoreDebugBpHit ) r_core_debug_breakpoint_hit		1091120	0		=			
ANR	1091131	PtrMemberAccess	bnd -> bphit		1091120	0					
ANR	1091132	Identifier	bnd		1091120	0					
ANR	1091133	Identifier	bphit		1091120	1					
ANR	1091134	CastExpression	( RCoreDebugBpHit ) r_core_debug_breakpoint_hit		1091120	1					
ANR	1091135	CastTarget	RCoreDebugBpHit		1091120	0					
ANR	1091136	Identifier	r_core_debug_breakpoint_hit		1091120	1					
ANR	1091137	ExpressionStatement	bnd -> syshit = ( RCoreDebugSyscallHit ) r_core_debug_syscall_hit	280:1:7633:7693	1091120	2	True				
ANR	1091138	AssignmentExpression	bnd -> syshit = ( RCoreDebugSyscallHit ) r_core_debug_syscall_hit		1091120	0		=			
ANR	1091139	PtrMemberAccess	bnd -> syshit		1091120	0					
ANR	1091140	Identifier	bnd		1091120	0					
ANR	1091141	Identifier	syshit		1091120	1					
ANR	1091142	CastExpression	( RCoreDebugSyscallHit ) r_core_debug_syscall_hit		1091120	1					
ANR	1091143	CastTarget	RCoreDebugSyscallHit		1091120	0					
ANR	1091144	Identifier	r_core_debug_syscall_hit		1091120	1					
ANR	1091145	ExpressionStatement	bnd -> cmd = ( RCoreCmd ) r_core_cmd0	281:1:7696:7728	1091120	3	True				
ANR	1091146	AssignmentExpression	bnd -> cmd = ( RCoreCmd ) r_core_cmd0		1091120	0		=			
ANR	1091147	PtrMemberAccess	bnd -> cmd		1091120	0					
ANR	1091148	Identifier	bnd		1091120	0					
ANR	1091149	Identifier	cmd		1091120	1					
ANR	1091150	CastExpression	( RCoreCmd ) r_core_cmd0		1091120	1					
ANR	1091151	CastTarget	RCoreCmd		1091120	0					
ANR	1091152	Identifier	r_core_cmd0		1091120	1					
ANR	1091153	ExpressionStatement	bnd -> cmdf = ( RCoreCmdF ) r_core_cmdf	282:1:7731:7765	1091120	4	True				
ANR	1091154	AssignmentExpression	bnd -> cmdf = ( RCoreCmdF ) r_core_cmdf		1091120	0		=			
ANR	1091155	PtrMemberAccess	bnd -> cmdf		1091120	0					
ANR	1091156	Identifier	bnd		1091120	0					
ANR	1091157	Identifier	cmdf		1091120	1					
ANR	1091158	CastExpression	( RCoreCmdF ) r_core_cmdf		1091120	1					
ANR	1091159	CastTarget	RCoreCmdF		1091120	0					
ANR	1091160	Identifier	r_core_cmdf		1091120	1					
ANR	1091161	ExpressionStatement	bnd -> cmdstr = ( RCoreCmdStr ) r_core_cmd_str	283:1:7768:7809	1091120	5	True				
ANR	1091162	AssignmentExpression	bnd -> cmdstr = ( RCoreCmdStr ) r_core_cmd_str		1091120	0		=			
ANR	1091163	PtrMemberAccess	bnd -> cmdstr		1091120	0					
ANR	1091164	Identifier	bnd		1091120	0					
ANR	1091165	Identifier	cmdstr		1091120	1					
ANR	1091166	CastExpression	( RCoreCmdStr ) r_core_cmd_str		1091120	1					
ANR	1091167	CastTarget	RCoreCmdStr		1091120	0					
ANR	1091168	Identifier	r_core_cmd_str		1091120	1					
ANR	1091169	ExpressionStatement	bnd -> cmdstrf = ( RCoreCmdStrF ) r_core_cmd_strf	284:1:7812:7856	1091120	6	True				
ANR	1091170	AssignmentExpression	bnd -> cmdstrf = ( RCoreCmdStrF ) r_core_cmd_strf		1091120	0		=			
ANR	1091171	PtrMemberAccess	bnd -> cmdstrf		1091120	0					
ANR	1091172	Identifier	bnd		1091120	0					
ANR	1091173	Identifier	cmdstrf		1091120	1					
ANR	1091174	CastExpression	( RCoreCmdStrF ) r_core_cmd_strf		1091120	1					
ANR	1091175	CastTarget	RCoreCmdStrF		1091120	0					
ANR	1091176	Identifier	r_core_cmd_strf		1091120	1					
ANR	1091177	ExpressionStatement	bnd -> puts = ( RCorePuts ) r_cons_strcat	285:1:7859:7895	1091120	7	True				
ANR	1091178	AssignmentExpression	bnd -> puts = ( RCorePuts ) r_cons_strcat		1091120	0		=			
ANR	1091179	PtrMemberAccess	bnd -> puts		1091120	0					
ANR	1091180	Identifier	bnd		1091120	0					
ANR	1091181	Identifier	puts		1091120	1					
ANR	1091182	CastExpression	( RCorePuts ) r_cons_strcat		1091120	1					
ANR	1091183	CastTarget	RCorePuts		1091120	0					
ANR	1091184	Identifier	r_cons_strcat		1091120	1					
ANR	1091185	ExpressionStatement	bnd -> setab = ( RCoreSetArchBits ) setab	286:1:7898:7934	1091120	8	True				
ANR	1091186	AssignmentExpression	bnd -> setab = ( RCoreSetArchBits ) setab		1091120	0		=			
ANR	1091187	PtrMemberAccess	bnd -> setab		1091120	0					
ANR	1091188	Identifier	bnd		1091120	0					
ANR	1091189	Identifier	setab		1091120	1					
ANR	1091190	CastExpression	( RCoreSetArchBits ) setab		1091120	1					
ANR	1091191	CastTarget	RCoreSetArchBits		1091120	0					
ANR	1091192	Identifier	setab		1091120	1					
ANR	1091193	ExpressionStatement	bnd -> getName = ( RCoreGetName ) getName	287:1:7937:7973	1091120	9	True				
ANR	1091194	AssignmentExpression	bnd -> getName = ( RCoreGetName ) getName		1091120	0		=			
ANR	1091195	PtrMemberAccess	bnd -> getName		1091120	0					
ANR	1091196	Identifier	bnd		1091120	0					
ANR	1091197	Identifier	getName		1091120	1					
ANR	1091198	CastExpression	( RCoreGetName ) getName		1091120	1					
ANR	1091199	CastTarget	RCoreGetName		1091120	0					
ANR	1091200	Identifier	getName		1091120	1					
ANR	1091201	ExpressionStatement	bnd -> getNameDelta = ( RCoreGetNameDelta ) getNameDelta	288:1:7976:8027	1091120	10	True				
ANR	1091202	AssignmentExpression	bnd -> getNameDelta = ( RCoreGetNameDelta ) getNameDelta		1091120	0		=			
ANR	1091203	PtrMemberAccess	bnd -> getNameDelta		1091120	0					
ANR	1091204	Identifier	bnd		1091120	0					
ANR	1091205	Identifier	getNameDelta		1091120	1					
ANR	1091206	CastExpression	( RCoreGetNameDelta ) getNameDelta		1091120	1					
ANR	1091207	CastTarget	RCoreGetNameDelta		1091120	0					
ANR	1091208	Identifier	getNameDelta		1091120	1					
ANR	1091209	ExpressionStatement	bnd -> archbits = ( RCoreSeekArchBits ) archbits	289:1:8030:8073	1091120	11	True				
ANR	1091210	AssignmentExpression	bnd -> archbits = ( RCoreSeekArchBits ) archbits		1091120	0		=			
ANR	1091211	PtrMemberAccess	bnd -> archbits		1091120	0					
ANR	1091212	Identifier	bnd		1091120	0					
ANR	1091213	Identifier	archbits		1091120	1					
ANR	1091214	CastExpression	( RCoreSeekArchBits ) archbits		1091120	1					
ANR	1091215	CastTarget	RCoreSeekArchBits		1091120	0					
ANR	1091216	Identifier	archbits		1091120	1					
ANR	1091217	ExpressionStatement	bnd -> cfggeti = ( RCoreConfigGetI ) cfggeti	290:1:8076:8115	1091120	12	True				
ANR	1091218	AssignmentExpression	bnd -> cfggeti = ( RCoreConfigGetI ) cfggeti		1091120	0		=			
ANR	1091219	PtrMemberAccess	bnd -> cfggeti		1091120	0					
ANR	1091220	Identifier	bnd		1091120	0					
ANR	1091221	Identifier	cfggeti		1091120	1					
ANR	1091222	CastExpression	( RCoreConfigGetI ) cfggeti		1091120	1					
ANR	1091223	CastTarget	RCoreConfigGetI		1091120	0					
ANR	1091224	Identifier	cfggeti		1091120	1					
ANR	1091225	ExpressionStatement	bnd -> cfgGet = ( RCoreConfigGet ) cfgget	291:1:8118:8154	1091120	13	True				
ANR	1091226	AssignmentExpression	bnd -> cfgGet = ( RCoreConfigGet ) cfgget		1091120	0		=			
ANR	1091227	PtrMemberAccess	bnd -> cfgGet		1091120	0					
ANR	1091228	Identifier	bnd		1091120	0					
ANR	1091229	Identifier	cfgGet		1091120	1					
ANR	1091230	CastExpression	( RCoreConfigGet ) cfgget		1091120	1					
ANR	1091231	CastTarget	RCoreConfigGet		1091120	0					
ANR	1091232	Identifier	cfgget		1091120	1					
ANR	1091233	ExpressionStatement	bnd -> numGet = ( RCoreNumGet ) numget	292:1:8157:8190	1091120	14	True				
ANR	1091234	AssignmentExpression	bnd -> numGet = ( RCoreNumGet ) numget		1091120	0		=			
ANR	1091235	PtrMemberAccess	bnd -> numGet		1091120	0					
ANR	1091236	Identifier	bnd		1091120	0					
ANR	1091237	Identifier	numGet		1091120	1					
ANR	1091238	CastExpression	( RCoreNumGet ) numget		1091120	1					
ANR	1091239	CastTarget	RCoreNumGet		1091120	0					
ANR	1091240	Identifier	numget		1091120	1					
ANR	1091241	ReturnStatement	return true ;	293:1:8193:8204	1091120	15	True				
ANR	1091242	Identifier	true		1091120	0					
ANR	1091243	ReturnType	R_API int		1091120	1					
ANR	1091244	Identifier	r_core_bind		1091120	2					
ANR	1091245	ParameterList	"RCore * core , RCoreBind * bnd"		1091120	3					
ANR	1091246	Parameter	RCore * core	277:22:7522:7532	1091120	0	True				
ANR	1091247	ParameterType	RCore *		1091120	0					
ANR	1091248	Identifier	core		1091120	1					
ANR	1091249	Parameter	RCoreBind * bnd	277:35:7535:7548	1091120	1	True				
ANR	1091250	ParameterType	RCoreBind *		1091120	0					
ANR	1091251	Identifier	bnd		1091120	1					
ANR	1091252	CFGEntryNode	ENTRY		1091120		True				
ANR	1091253	CFGExitNode	EXIT		1091120		True				
ANR	1091254	Symbol	bnd -> cmdf		1091120						
ANR	1091255	Symbol	r_core_debug_syscall_hit		1091120						
ANR	1091256	Symbol	getNameDelta		1091120						
ANR	1091257	Symbol	r_core_cmd_str		1091120						
ANR	1091258	Symbol	getName		1091120						
ANR	1091259	Symbol	r_core_cmdf		1091120						
ANR	1091260	Symbol	cfggeti		1091120						
ANR	1091261	Symbol	bnd -> cmdstr		1091120						
ANR	1091262	Symbol	bnd -> numGet		1091120						
ANR	1091263	Symbol	setab		1091120						
ANR	1091264	Symbol	numget		1091120						
ANR	1091265	Symbol	bnd -> getName		1091120						
ANR	1091266	Symbol	bnd -> archbits		1091120						
ANR	1091267	Symbol	bnd -> cfgGet		1091120						
ANR	1091268	Symbol	cfgget		1091120						
ANR	1091269	Symbol	bnd -> bphit		1091120						
ANR	1091270	Symbol	r_core_cmd_strf		1091120						
ANR	1091271	Symbol	bnd -> cfggeti		1091120						
ANR	1091272	Symbol	bnd -> core		1091120						
ANR	1091273	Symbol	bnd -> cmd		1091120						
ANR	1091274	Symbol	bnd -> syshit		1091120						
ANR	1091275	Symbol	bnd		1091120						
ANR	1091276	Symbol	bnd -> getNameDelta		1091120						
ANR	1091277	Symbol	r_cons_strcat		1091120						
ANR	1091278	Symbol	bnd -> setab		1091120						
ANR	1091279	Symbol	r_core_debug_breakpoint_hit		1091120						
ANR	1091280	Symbol	core		1091120						
ANR	1091281	Symbol	r_core_cmd0		1091120						
ANR	1091282	Symbol	bnd -> puts		1091120						
ANR	1091283	Symbol	archbits		1091120						
ANR	1091284	Symbol	bnd -> cmdstrf		1091120						
ANR	1091285	Symbol	true		1091120						
ANR	1091286	Symbol	* bnd		1091120						
ANR	1091287	Function	r_core_ncast	296:0:8209:8272							
ANR	1091288	FunctionDef	r_core_ncast (ut64 p)		1091287	0					
ANR	1091289	CompoundStatement		296:34:8243:8272	1091287	0					
ANR	1091290	ReturnStatement	return ( RCore * ) ( size_t ) p ;	297:1:8246:8270	1091287	0	True				
ANR	1091291	CastExpression	( RCore * ) ( size_t ) p		1091287	0					
ANR	1091292	CastTarget	RCore *		1091287	0					
ANR	1091293	CastExpression	( size_t ) p		1091287	1					
ANR	1091294	CastTarget	size_t		1091287	0					
ANR	1091295	Identifier	p		1091287	1					
ANR	1091296	ReturnType	R_API RCore *		1091287	1					
ANR	1091297	Identifier	r_core_ncast		1091287	2					
ANR	1091298	ParameterList	ut64 p		1091287	3					
ANR	1091299	Parameter	ut64 p	296:26:8235:8240	1091287	0	True				
ANR	1091300	ParameterType	ut64		1091287	0					
ANR	1091301	Identifier	p		1091287	1					
ANR	1091302	CFGEntryNode	ENTRY		1091287		True				
ANR	1091303	CFGExitNode	EXIT		1091287		True				
ANR	1091304	Symbol	p		1091287						
ANR	1091305	Function	r_core_cast	300:0:8275:8330							
ANR	1091306	FunctionDef	r_core_cast (void * p)		1091305	0					
ANR	1091307	CompoundStatement		300:34:8309:8330	1091305	0					
ANR	1091308	ReturnStatement	return ( RCore * ) p ;	301:1:8312:8328	1091305	0	True				
ANR	1091309	CastExpression	( RCore * ) p		1091305	0					
ANR	1091310	CastTarget	RCore *		1091305	0					
ANR	1091311	Identifier	p		1091305	1					
ANR	1091312	ReturnType	R_API RCore *		1091305	1					
ANR	1091313	Identifier	r_core_cast		1091305	2					
ANR	1091314	ParameterList	void * p		1091305	3					
ANR	1091315	Parameter	void * p	300:25:8300:8306	1091305	0	True				
ANR	1091316	ParameterType	void *		1091305	0					
ANR	1091317	Identifier	p		1091305	1					
ANR	1091318	CFGEntryNode	ENTRY		1091305		True				
ANR	1091319	CFGExitNode	EXIT		1091305		True				
ANR	1091320	Symbol	p		1091305						
ANR	1091321	Function	core_post_write_callback	304:0:8333:9130							
ANR	1091322	FunctionDef	"core_post_write_callback (void * user , ut64 maddr , ut8 * bytes , int cnt)"		1091321	0					
ANR	1091323	CompoundStatement		304:82:8415:9130	1091321	0					
ANR	1091324	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	305:1:8418:8445	1091321	0	True				
ANR	1091325	IdentifierDecl	* core = ( RCore * ) user		1091321	0					
ANR	1091326	IdentifierDeclType	RCore *		1091321	0					
ANR	1091327	Identifier	core		1091321	1					
ANR	1091328	AssignmentExpression	* core = ( RCore * ) user		1091321	2		=			
ANR	1091329	Identifier	core		1091321	0					
ANR	1091330	CastExpression	( RCore * ) user		1091321	1					
ANR	1091331	CastTarget	RCore *		1091321	0					
ANR	1091332	Identifier	user		1091321	1					
ANR	1091333	IdentifierDeclStatement	RBinSection * sec ;	306:1:8448:8464	1091321	1	True				
ANR	1091334	IdentifierDecl	* sec		1091321	0					
ANR	1091335	IdentifierDeclType	RBinSection *		1091321	0					
ANR	1091336	Identifier	sec		1091321	1					
ANR	1091337	IdentifierDeclStatement	ut64 vaddr ;	307:1:8467:8477	1091321	2	True				
ANR	1091338	IdentifierDecl	vaddr		1091321	0					
ANR	1091339	IdentifierDeclType	ut64		1091321	0					
ANR	1091340	Identifier	vaddr		1091321	1					
ANR	1091341	IfStatement	"if ( ! r_config_get_i ( core -> config , ""asm.cmt.patch"" ) )"		1091321	3					
ANR	1091342	Condition	"! r_config_get_i ( core -> config , ""asm.cmt.patch"" )"	309:5:8485:8531	1091321	0	True				
ANR	1091343	UnaryOperationExpression	"! r_config_get_i ( core -> config , ""asm.cmt.patch"" )"		1091321	0					
ANR	1091344	UnaryOperator	!		1091321	0					
ANR	1091345	CallExpression	"r_config_get_i ( core -> config , ""asm.cmt.patch"" )"		1091321	1					
ANR	1091346	Callee	r_config_get_i		1091321	0					
ANR	1091347	Identifier	r_config_get_i		1091321	0					
ANR	1091348	ArgumentList	core -> config		1091321	1					
ANR	1091349	Argument	core -> config		1091321	0					
ANR	1091350	PtrMemberAccess	core -> config		1091321	0					
ANR	1091351	Identifier	core		1091321	0					
ANR	1091352	Identifier	config		1091321	1					
ANR	1091353	Argument	"""asm.cmt.patch"""		1091321	1					
ANR	1091354	PrimaryExpression	"""asm.cmt.patch"""		1091321	0					
ANR	1091355	CompoundStatement		6:54:118:118	1091321	1					
ANR	1091356	ReturnStatement	return ;	310:2:8538:8544	1091321	0	True				
ANR	1091357	IdentifierDeclStatement	"char * hex_pairs = r_hex_bin2strdup ( bytes , cnt ) ;"	313:1:8551:8598	1091321	4	True				
ANR	1091358	IdentifierDecl	"* hex_pairs = r_hex_bin2strdup ( bytes , cnt )"		1091321	0					
ANR	1091359	IdentifierDeclType	char *		1091321	0					
ANR	1091360	Identifier	hex_pairs		1091321	1					
ANR	1091361	AssignmentExpression	"* hex_pairs = r_hex_bin2strdup ( bytes , cnt )"		1091321	2		=			
ANR	1091362	Identifier	hex_pairs		1091321	0					
ANR	1091363	CallExpression	"r_hex_bin2strdup ( bytes , cnt )"		1091321	1					
ANR	1091364	Callee	r_hex_bin2strdup		1091321	0					
ANR	1091365	Identifier	r_hex_bin2strdup		1091321	0					
ANR	1091366	ArgumentList	bytes		1091321	1					
ANR	1091367	Argument	bytes		1091321	0					
ANR	1091368	Identifier	bytes		1091321	0					
ANR	1091369	Argument	cnt		1091321	1					
ANR	1091370	Identifier	cnt		1091321	0					
ANR	1091371	IfStatement	if ( ! hex_pairs )		1091321	5					
ANR	1091372	Condition	! hex_pairs	314:5:8605:8614	1091321	0	True				
ANR	1091373	UnaryOperationExpression	! hex_pairs		1091321	0					
ANR	1091374	UnaryOperator	!		1091321	0					
ANR	1091375	Identifier	hex_pairs		1091321	1					
ANR	1091376	CompoundStatement		11:17:201:201	1091321	1					
ANR	1091377	ExpressionStatement	"eprintf ( ""core_post_write_callback: Cannot obtain hex pairs\\n"" )"	315:2:8621:8684	1091321	0	True				
ANR	1091378	CallExpression	"eprintf ( ""core_post_write_callback: Cannot obtain hex pairs\\n"" )"		1091321	0					
ANR	1091379	Callee	eprintf		1091321	0					
ANR	1091380	Identifier	eprintf		1091321	0					
ANR	1091381	ArgumentList	"""core_post_write_callback: Cannot obtain hex pairs\\n"""		1091321	1					
ANR	1091382	Argument	"""core_post_write_callback: Cannot obtain hex pairs\\n"""		1091321	0					
ANR	1091383	PrimaryExpression	"""core_post_write_callback: Cannot obtain hex pairs\\n"""		1091321	0					
ANR	1091384	ReturnStatement	return ;	316:2:8688:8694	1091321	1	True				
ANR	1091385	IdentifierDeclStatement	"char * comment = r_str_newf ( ""patch: %d byte(s) (%s)"" , cnt , hex_pairs ) ;"	319:1:8701:8770	1091321	6	True				
ANR	1091386	IdentifierDecl	"* comment = r_str_newf ( ""patch: %d byte(s) (%s)"" , cnt , hex_pairs )"		1091321	0					
ANR	1091387	IdentifierDeclType	char *		1091321	0					
ANR	1091388	Identifier	comment		1091321	1					
ANR	1091389	AssignmentExpression	"* comment = r_str_newf ( ""patch: %d byte(s) (%s)"" , cnt , hex_pairs )"		1091321	2		=			
ANR	1091390	Identifier	comment		1091321	0					
ANR	1091391	CallExpression	"r_str_newf ( ""patch: %d byte(s) (%s)"" , cnt , hex_pairs )"		1091321	1					
ANR	1091392	Callee	r_str_newf		1091321	0					
ANR	1091393	Identifier	r_str_newf		1091321	0					
ANR	1091394	ArgumentList	"""patch: %d byte(s) (%s)"""		1091321	1					
ANR	1091395	Argument	"""patch: %d byte(s) (%s)"""		1091321	0					
ANR	1091396	PrimaryExpression	"""patch: %d byte(s) (%s)"""		1091321	0					
ANR	1091397	Argument	cnt		1091321	1					
ANR	1091398	Identifier	cnt		1091321	0					
ANR	1091399	Argument	hex_pairs		1091321	2					
ANR	1091400	Identifier	hex_pairs		1091321	0					
ANR	1091401	ExpressionStatement	free ( hex_pairs )	320:1:8773:8789	1091321	7	True				
ANR	1091402	CallExpression	free ( hex_pairs )		1091321	0					
ANR	1091403	Callee	free		1091321	0					
ANR	1091404	Identifier	free		1091321	0					
ANR	1091405	ArgumentList	hex_pairs		1091321	1					
ANR	1091406	Argument	hex_pairs		1091321	0					
ANR	1091407	Identifier	hex_pairs		1091321	0					
ANR	1091408	IfStatement	if ( ! comment )		1091321	8					
ANR	1091409	Condition	! comment	321:5:8796:8803	1091321	0	True				
ANR	1091410	UnaryOperationExpression	! comment		1091321	0					
ANR	1091411	UnaryOperator	!		1091321	0					
ANR	1091412	Identifier	comment		1091321	1					
ANR	1091413	CompoundStatement		18:15:390:390	1091321	1					
ANR	1091414	ExpressionStatement	"eprintf ( ""core_post_write_callback: Cannot create comment\\n"" )"	322:2:8810:8871	1091321	0	True				
ANR	1091415	CallExpression	"eprintf ( ""core_post_write_callback: Cannot create comment\\n"" )"		1091321	0					
ANR	1091416	Callee	eprintf		1091321	0					
ANR	1091417	Identifier	eprintf		1091321	0					
ANR	1091418	ArgumentList	"""core_post_write_callback: Cannot create comment\\n"""		1091321	1					
ANR	1091419	Argument	"""core_post_write_callback: Cannot create comment\\n"""		1091321	0					
ANR	1091420	PrimaryExpression	"""core_post_write_callback: Cannot create comment\\n"""		1091321	0					
ANR	1091421	ReturnStatement	return ;	323:2:8875:8881	1091321	1	True				
ANR	1091422	IfStatement	"if ( ( sec = r_bin_get_section_at ( r_bin_cur_object ( core -> bin ) , maddr , false ) ) )"		1091321	9					
ANR	1091423	Condition	"sec = r_bin_get_section_at ( r_bin_cur_object ( core -> bin ) , maddr , false )"	326:5:8892:8964	1091321	0	True				
ANR	1091424	AssignmentExpression	"sec = r_bin_get_section_at ( r_bin_cur_object ( core -> bin ) , maddr , false )"		1091321	0		=			
ANR	1091425	Identifier	sec		1091321	0					
ANR	1091426	CallExpression	"r_bin_get_section_at ( r_bin_cur_object ( core -> bin ) , maddr , false )"		1091321	1					
ANR	1091427	Callee	r_bin_get_section_at		1091321	0					
ANR	1091428	Identifier	r_bin_get_section_at		1091321	0					
ANR	1091429	ArgumentList	r_bin_cur_object ( core -> bin )		1091321	1					
ANR	1091430	Argument	r_bin_cur_object ( core -> bin )		1091321	0					
ANR	1091431	CallExpression	r_bin_cur_object ( core -> bin )		1091321	0					
ANR	1091432	Callee	r_bin_cur_object		1091321	0					
ANR	1091433	Identifier	r_bin_cur_object		1091321	0					
ANR	1091434	ArgumentList	core -> bin		1091321	1					
ANR	1091435	Argument	core -> bin		1091321	0					
ANR	1091436	PtrMemberAccess	core -> bin		1091321	0					
ANR	1091437	Identifier	core		1091321	0					
ANR	1091438	Identifier	bin		1091321	1					
ANR	1091439	Argument	maddr		1091321	1					
ANR	1091440	Identifier	maddr		1091321	0					
ANR	1091441	Argument	false		1091321	2					
ANR	1091442	Identifier	false		1091321	0					
ANR	1091443	CompoundStatement		23:80:551:551	1091321	1					
ANR	1091444	ExpressionStatement	vaddr = maddr + sec -> vaddr - sec -> paddr	327:2:8971:9010	1091321	0	True				
ANR	1091445	AssignmentExpression	vaddr = maddr + sec -> vaddr - sec -> paddr		1091321	0		=			
ANR	1091446	Identifier	vaddr		1091321	0					
ANR	1091447	AdditiveExpression	maddr + sec -> vaddr - sec -> paddr		1091321	1		+			
ANR	1091448	Identifier	maddr		1091321	0					
ANR	1091449	AdditiveExpression	sec -> vaddr - sec -> paddr		1091321	1		-			
ANR	1091450	PtrMemberAccess	sec -> vaddr		1091321	0					
ANR	1091451	Identifier	sec		1091321	0					
ANR	1091452	Identifier	vaddr		1091321	1					
ANR	1091453	PtrMemberAccess	sec -> paddr		1091321	1					
ANR	1091454	Identifier	sec		1091321	0					
ANR	1091455	Identifier	paddr		1091321	1					
ANR	1091456	ElseStatement	else		1091321	0					
ANR	1091457	CompoundStatement		25:8:604:604	1091321	0					
ANR	1091458	ExpressionStatement	vaddr = maddr	329:2:9024:9037	1091321	0	True				
ANR	1091459	AssignmentExpression	vaddr = maddr		1091321	0		=			
ANR	1091460	Identifier	vaddr		1091321	0					
ANR	1091461	Identifier	maddr		1091321	1					
ANR	1091462	ExpressionStatement	"r_meta_add ( core -> anal , R_META_TYPE_COMMENT , vaddr , vaddr , comment )"	332:1:9044:9111	1091321	10	True				
ANR	1091463	CallExpression	"r_meta_add ( core -> anal , R_META_TYPE_COMMENT , vaddr , vaddr , comment )"		1091321	0					
ANR	1091464	Callee	r_meta_add		1091321	0					
ANR	1091465	Identifier	r_meta_add		1091321	0					
ANR	1091466	ArgumentList	core -> anal		1091321	1					
ANR	1091467	Argument	core -> anal		1091321	0					
ANR	1091468	PtrMemberAccess	core -> anal		1091321	0					
ANR	1091469	Identifier	core		1091321	0					
ANR	1091470	Identifier	anal		1091321	1					
ANR	1091471	Argument	R_META_TYPE_COMMENT		1091321	1					
ANR	1091472	Identifier	R_META_TYPE_COMMENT		1091321	0					
ANR	1091473	Argument	vaddr		1091321	2					
ANR	1091474	Identifier	vaddr		1091321	0					
ANR	1091475	Argument	vaddr		1091321	3					
ANR	1091476	Identifier	vaddr		1091321	0					
ANR	1091477	Argument	comment		1091321	4					
ANR	1091478	Identifier	comment		1091321	0					
ANR	1091479	ExpressionStatement	free ( comment )	333:1:9114:9128	1091321	11	True				
ANR	1091480	CallExpression	free ( comment )		1091321	0					
ANR	1091481	Callee	free		1091321	0					
ANR	1091482	Identifier	free		1091321	0					
ANR	1091483	ArgumentList	comment		1091321	1					
ANR	1091484	Argument	comment		1091321	0					
ANR	1091485	Identifier	comment		1091321	0					
ANR	1091486	ReturnType	static void		1091321	1					
ANR	1091487	Identifier	core_post_write_callback		1091321	2					
ANR	1091488	ParameterList	"void * user , ut64 maddr , ut8 * bytes , int cnt"		1091321	3					
ANR	1091489	Parameter	void * user	304:37:8370:8379	1091321	0	True				
ANR	1091490	ParameterType	void *		1091321	0					
ANR	1091491	Identifier	user		1091321	1					
ANR	1091492	Parameter	ut64 maddr	304:49:8382:8391	1091321	1	True				
ANR	1091493	ParameterType	ut64		1091321	0					
ANR	1091494	Identifier	maddr		1091321	1					
ANR	1091495	Parameter	ut8 * bytes	304:61:8394:8403	1091321	2	True				
ANR	1091496	ParameterType	ut8 *		1091321	0					
ANR	1091497	Identifier	bytes		1091321	1					
ANR	1091498	Parameter	int cnt	304:73:8406:8412	1091321	3	True				
ANR	1091499	ParameterType	int		1091321	0					
ANR	1091500	Identifier	cnt		1091321	1					
ANR	1091501	CFGEntryNode	ENTRY		1091321		True				
ANR	1091502	CFGExitNode	EXIT		1091321		True				
ANR	1091503	Symbol	core -> config		1091321						
ANR	1091504	Symbol	r_hex_bin2strdup		1091321						
ANR	1091505	Symbol	sec -> paddr		1091321						
ANR	1091506	Symbol	R_META_TYPE_COMMENT		1091321						
ANR	1091507	Symbol	cnt		1091321						
ANR	1091508	Symbol	* core		1091321						
ANR	1091509	Symbol	false		1091321						
ANR	1091510	Symbol	vaddr		1091321						
ANR	1091511	Symbol	r_str_newf		1091321						
ANR	1091512	Symbol	r_bin_get_section_at		1091321						
ANR	1091513	Symbol	core -> anal		1091321						
ANR	1091514	Symbol	sec		1091321						
ANR	1091515	Symbol	core		1091321						
ANR	1091516	Symbol	maddr		1091321						
ANR	1091517	Symbol	bytes		1091321						
ANR	1091518	Symbol	hex_pairs		1091321						
ANR	1091519	Symbol	r_config_get_i		1091321						
ANR	1091520	Symbol	comment		1091321						
ANR	1091521	Symbol	* sec		1091321						
ANR	1091522	Symbol	sec -> vaddr		1091321						
ANR	1091523	Symbol	user		1091321						
ANR	1091524	Symbol	core -> bin		1091321						
ANR	1091525	Symbol	r_bin_cur_object		1091321						
ANR	1091526	Function	core_cmd_callback	336:0:9133:9263							
ANR	1091527	FunctionDef	"core_cmd_callback (void * user , const char * cmd)"		1091526	0					
ANR	1091528	CompoundStatement		336:59:9192:9263	1091526	0					
ANR	1091529	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	337:4:9198:9225	1091526	0	True				
ANR	1091530	IdentifierDecl	* core = ( RCore * ) user		1091526	0					
ANR	1091531	IdentifierDeclType	RCore *		1091526	0					
ANR	1091532	Identifier	core		1091526	1					
ANR	1091533	AssignmentExpression	* core = ( RCore * ) user		1091526	2		=			
ANR	1091534	Identifier	core		1091526	0					
ANR	1091535	CastExpression	( RCore * ) user		1091526	1					
ANR	1091536	CastTarget	RCore *		1091526	0					
ANR	1091537	Identifier	user		1091526	1					
ANR	1091538	ReturnStatement	"return r_core_cmd0 ( core , cmd ) ;"	338:4:9231:9261	1091526	1	True				
ANR	1091539	CallExpression	"r_core_cmd0 ( core , cmd )"		1091526	0					
ANR	1091540	Callee	r_core_cmd0		1091526	0					
ANR	1091541	Identifier	r_core_cmd0		1091526	0					
ANR	1091542	ArgumentList	core		1091526	1					
ANR	1091543	Argument	core		1091526	0					
ANR	1091544	Identifier	core		1091526	0					
ANR	1091545	Argument	cmd		1091526	1					
ANR	1091546	Identifier	cmd		1091526	0					
ANR	1091547	ReturnType	static int		1091526	1					
ANR	1091548	Identifier	core_cmd_callback		1091526	2					
ANR	1091549	ParameterList	"void * user , const char * cmd"		1091526	3					
ANR	1091550	Parameter	void * user	336:30:9163:9172	1091526	0	True				
ANR	1091551	ParameterType	void *		1091526	0					
ANR	1091552	Identifier	user		1091526	1					
ANR	1091553	Parameter	const char * cmd	336:42:9175:9189	1091526	1	True				
ANR	1091554	ParameterType	const char *		1091526	0					
ANR	1091555	Identifier	cmd		1091526	1					
ANR	1091556	CFGEntryNode	ENTRY		1091526		True				
ANR	1091557	CFGExitNode	EXIT		1091526		True				
ANR	1091558	Symbol	core		1091526						
ANR	1091559	Symbol	r_core_cmd0		1091526						
ANR	1091560	Symbol	cmd		1091526						
ANR	1091561	Symbol	user		1091526						
ANR	1091562	Function	core_cmdstr_callback	341:0:9266:9398							
ANR	1091563	FunctionDef	"core_cmdstr_callback (void * user , const char * cmd)"		1091562	0					
ANR	1091564	CompoundStatement		341:64:9330:9398	1091562	0					
ANR	1091565	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	342:1:9333:9360	1091562	0	True				
ANR	1091566	IdentifierDecl	* core = ( RCore * ) user		1091562	0					
ANR	1091567	IdentifierDeclType	RCore *		1091562	0					
ANR	1091568	Identifier	core		1091562	1					
ANR	1091569	AssignmentExpression	* core = ( RCore * ) user		1091562	2		=			
ANR	1091570	Identifier	core		1091562	0					
ANR	1091571	CastExpression	( RCore * ) user		1091562	1					
ANR	1091572	CastTarget	RCore *		1091562	0					
ANR	1091573	Identifier	user		1091562	1					
ANR	1091574	ReturnStatement	"return r_core_cmd_str ( core , cmd ) ;"	343:1:9363:9396	1091562	1	True				
ANR	1091575	CallExpression	"r_core_cmd_str ( core , cmd )"		1091562	0					
ANR	1091576	Callee	r_core_cmd_str		1091562	0					
ANR	1091577	Identifier	r_core_cmd_str		1091562	0					
ANR	1091578	ArgumentList	core		1091562	1					
ANR	1091579	Argument	core		1091562	0					
ANR	1091580	Identifier	core		1091562	0					
ANR	1091581	Argument	cmd		1091562	1					
ANR	1091582	Identifier	cmd		1091562	0					
ANR	1091583	ReturnType	static char *		1091562	1					
ANR	1091584	Identifier	core_cmdstr_callback		1091562	2					
ANR	1091585	ParameterList	"void * user , const char * cmd"		1091562	3					
ANR	1091586	Parameter	void * user	341:35:9301:9310	1091562	0	True				
ANR	1091587	ParameterType	void *		1091562	0					
ANR	1091588	Identifier	user		1091562	1					
ANR	1091589	Parameter	const char * cmd	341:47:9313:9327	1091562	1	True				
ANR	1091590	ParameterType	const char *		1091562	0					
ANR	1091591	Identifier	cmd		1091562	1					
ANR	1091592	CFGEntryNode	ENTRY		1091562		True				
ANR	1091593	CFGExitNode	EXIT		1091562		True				
ANR	1091594	Symbol	core		1091562						
ANR	1091595	Symbol	r_core_cmd_str		1091562						
ANR	1091596	Symbol	cmd		1091562						
ANR	1091597	Symbol	user		1091562						
ANR	1091598	Function	getref	346:0:9401:10016							
ANR	1091599	FunctionDef	"getref (RCore * core , int n , char t , int type)"		1091598	0					
ANR	1091600	CompoundStatement		346:58:9459:10016	1091598	0					
ANR	1091601	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 ) ;"	347:1:9462:9530	1091598	0	True				
ANR	1091602	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		1091598	0					
ANR	1091603	IdentifierDeclType	RAnalFunction *		1091598	0					
ANR	1091604	Identifier	fcn		1091598	1					
ANR	1091605	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		1091598	2		=			
ANR	1091606	Identifier	fcn		1091598	0					
ANR	1091607	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		1091598	1					
ANR	1091608	Callee	r_anal_get_fcn_in		1091598	0					
ANR	1091609	Identifier	r_anal_get_fcn_in		1091598	0					
ANR	1091610	ArgumentList	core -> anal		1091598	1					
ANR	1091611	Argument	core -> anal		1091598	0					
ANR	1091612	PtrMemberAccess	core -> anal		1091598	0					
ANR	1091613	Identifier	core		1091598	0					
ANR	1091614	Identifier	anal		1091598	1					
ANR	1091615	Argument	core -> offset		1091598	1					
ANR	1091616	PtrMemberAccess	core -> offset		1091598	0					
ANR	1091617	Identifier	core		1091598	0					
ANR	1091618	Identifier	offset		1091598	1					
ANR	1091619	Argument	0		1091598	2					
ANR	1091620	PrimaryExpression	0		1091598	0					
ANR	1091621	IdentifierDeclStatement	RListIter * iter ;	348:1:9533:9548	1091598	1	True				
ANR	1091622	IdentifierDecl	* iter		1091598	0					
ANR	1091623	IdentifierDeclType	RListIter *		1091598	0					
ANR	1091624	Identifier	iter		1091598	1					
ANR	1091625	IdentifierDeclStatement	RAnalRef * r ;	349:1:9551:9562	1091598	2	True				
ANR	1091626	IdentifierDecl	* r		1091598	0					
ANR	1091627	IdentifierDeclType	RAnalRef *		1091598	0					
ANR	1091628	Identifier	r		1091598	1					
ANR	1091629	IdentifierDeclStatement	RList * list ;	350:1:9565:9576	1091598	3	True				
ANR	1091630	IdentifierDecl	* list		1091598	0					
ANR	1091631	IdentifierDeclType	RList *		1091598	0					
ANR	1091632	Identifier	list		1091598	1					
ANR	1091633	IdentifierDeclStatement	int i = 0 ;	351:1:9579:9588	1091598	4	True				
ANR	1091634	IdentifierDecl	i = 0		1091598	0					
ANR	1091635	IdentifierDeclType	int		1091598	0					
ANR	1091636	Identifier	i		1091598	1					
ANR	1091637	AssignmentExpression	i = 0		1091598	2		=			
ANR	1091638	Identifier	i		1091598	0					
ANR	1091639	PrimaryExpression	0		1091598	1					
ANR	1091640	IfStatement	if ( ! fcn )		1091598	5					
ANR	1091641	Condition	! fcn	352:5:9595:9598	1091598	0	True				
ANR	1091642	UnaryOperationExpression	! fcn		1091598	0					
ANR	1091643	UnaryOperator	!		1091598	0					
ANR	1091644	Identifier	fcn		1091598	1					
ANR	1091645	CompoundStatement		7:11:141:141	1091598	1					
ANR	1091646	ReturnStatement	return UT64_MAX ;	353:2:9605:9620	1091598	0	True				
ANR	1091647	Identifier	UT64_MAX		1091598	0					
ANR	1091648	IfStatement	if ( t == 'r' )		1091598	6					
ANR	1091649	Condition	t == 'r'	356:5:9642:9649	1091598	0	True				
ANR	1091650	EqualityExpression	t == 'r'		1091598	0		==			
ANR	1091651	Identifier	t		1091598	0					
ANR	1091652	PrimaryExpression	'r'		1091598	1					
ANR	1091653	CompoundStatement		11:15:192:192	1091598	1					
ANR	1091654	ExpressionStatement	"list = r_anal_fcn_get_refs ( core -> anal , fcn )"	357:2:9656:9700	1091598	0	True				
ANR	1091655	AssignmentExpression	"list = r_anal_fcn_get_refs ( core -> anal , fcn )"		1091598	0		=			
ANR	1091656	Identifier	list		1091598	0					
ANR	1091657	CallExpression	"r_anal_fcn_get_refs ( core -> anal , fcn )"		1091598	1					
ANR	1091658	Callee	r_anal_fcn_get_refs		1091598	0					
ANR	1091659	Identifier	r_anal_fcn_get_refs		1091598	0					
ANR	1091660	ArgumentList	core -> anal		1091598	1					
ANR	1091661	Argument	core -> anal		1091598	0					
ANR	1091662	PtrMemberAccess	core -> anal		1091598	0					
ANR	1091663	Identifier	core		1091598	0					
ANR	1091664	Identifier	anal		1091598	1					
ANR	1091665	Argument	fcn		1091598	1					
ANR	1091666	Identifier	fcn		1091598	0					
ANR	1091667	ElseStatement	else		1091598	0					
ANR	1091668	CompoundStatement		13:8:250:250	1091598	0					
ANR	1091669	ExpressionStatement	"list = r_anal_fcn_get_xrefs ( core -> anal , fcn )"	359:2:9714:9759	1091598	0	True				
ANR	1091670	AssignmentExpression	"list = r_anal_fcn_get_xrefs ( core -> anal , fcn )"		1091598	0		=			
ANR	1091671	Identifier	list		1091598	0					
ANR	1091672	CallExpression	"r_anal_fcn_get_xrefs ( core -> anal , fcn )"		1091598	1					
ANR	1091673	Callee	r_anal_fcn_get_xrefs		1091598	0					
ANR	1091674	Identifier	r_anal_fcn_get_xrefs		1091598	0					
ANR	1091675	ArgumentList	core -> anal		1091598	1					
ANR	1091676	Argument	core -> anal		1091598	0					
ANR	1091677	PtrMemberAccess	core -> anal		1091598	0					
ANR	1091678	Identifier	core		1091598	0					
ANR	1091679	Identifier	anal		1091598	1					
ANR	1091680	Argument	fcn		1091598	1					
ANR	1091681	Identifier	fcn		1091598	0					
ANR	1091682	Statement	r_list_foreach	361:1:9765:9778	1091598	7	True				
ANR	1091683	Statement	(	361:16:9780:9780	1091598	8	True				
ANR	1091684	Statement	list	361:17:9781:9784	1091598	9	True				
ANR	1091685	Statement	","	361:21:9785:9785	1091598	10	True				
ANR	1091686	Statement	iter	361:23:9787:9790	1091598	11	True				
ANR	1091687	Statement	","	361:27:9791:9791	1091598	12	True				
ANR	1091688	Statement	r	361:29:9793:9793	1091598	13	True				
ANR	1091689	Statement	)	361:30:9794:9794	1091598	14	True				
ANR	1091690	CompoundStatement		16:32:336:336	1091598	15					
ANR	1091691	IfStatement	if ( r -> type == type )		1091598	0					
ANR	1091692	Condition	r -> type == type	362:6:9804:9818	1091598	0	True				
ANR	1091693	EqualityExpression	r -> type == type		1091598	0		==			
ANR	1091694	PtrMemberAccess	r -> type		1091598	0					
ANR	1091695	Identifier	r		1091598	0					
ANR	1091696	Identifier	type		1091598	1					
ANR	1091697	Identifier	type		1091598	1					
ANR	1091698	CompoundStatement		17:23:361:361	1091598	1					
ANR	1091699	IfStatement	if ( i == n )		1091598	0					
ANR	1091700	Condition	i == n	363:7:9830:9835	1091598	0	True				
ANR	1091701	EqualityExpression	i == n		1091598	0		==			
ANR	1091702	Identifier	i		1091598	0					
ANR	1091703	Identifier	n		1091598	1					
ANR	1091704	CompoundStatement		19:4:384:403	1091598	1					
ANR	1091705	IdentifierDeclStatement	ut64 addr = r -> addr ;	364:4:9844:9863	1091598	0	True				
ANR	1091706	IdentifierDecl	addr = r -> addr		1091598	0					
ANR	1091707	IdentifierDeclType	ut64		1091598	0					
ANR	1091708	Identifier	addr		1091598	1					
ANR	1091709	AssignmentExpression	addr = r -> addr		1091598	2		=			
ANR	1091710	Identifier	addr		1091598	0					
ANR	1091711	PtrMemberAccess	r -> addr		1091598	1					
ANR	1091712	Identifier	r		1091598	0					
ANR	1091713	Identifier	addr		1091598	1					
ANR	1091714	ExpressionStatement	r_list_free ( list )	365:4:9869:9887	1091598	1	True				
ANR	1091715	CallExpression	r_list_free ( list )		1091598	0					
ANR	1091716	Callee	r_list_free		1091598	0					
ANR	1091717	Identifier	r_list_free		1091598	0					
ANR	1091718	ArgumentList	list		1091598	1					
ANR	1091719	Argument	list		1091598	0					
ANR	1091720	Identifier	list		1091598	0					
ANR	1091721	ReturnStatement	return addr ;	366:4:9893:9904	1091598	2	True				
ANR	1091722	Identifier	addr		1091598	0					
ANR	1091723	ExpressionStatement	i ++	368:3:9914:9917	1091598	1	True				
ANR	1091724	PostIncDecOperationExpression	i ++		1091598	0					
ANR	1091725	Identifier	i		1091598	0					
ANR	1091726	IncDec	++		1091598	1					
ANR	1091727	ExpressionStatement	r_list_free ( list )	371:1:9927:9945	1091598	16	True				
ANR	1091728	CallExpression	r_list_free ( list )		1091598	0					
ANR	1091729	Callee	r_list_free		1091598	0					
ANR	1091730	Identifier	r_list_free		1091598	0					
ANR	1091731	ArgumentList	list		1091598	1					
ANR	1091732	Argument	list		1091598	0					
ANR	1091733	Identifier	list		1091598	0					
ANR	1091734	ReturnStatement	return UT64_MAX ;	375:1:9999:10014	1091598	17	True				
ANR	1091735	Identifier	UT64_MAX		1091598	0					
ANR	1091736	ReturnType	static ut64		1091598	1					
ANR	1091737	Identifier	getref		1091598	2					
ANR	1091738	ParameterList	"RCore * core , int n , char t , int type"		1091598	3					
ANR	1091739	Parameter	RCore * core	346:20:9421:9431	1091598	0	True				
ANR	1091740	ParameterType	RCore *		1091598	0					
ANR	1091741	Identifier	core		1091598	1					
ANR	1091742	Parameter	int n	346:33:9434:9438	1091598	1	True				
ANR	1091743	ParameterType	int		1091598	0					
ANR	1091744	Identifier	n		1091598	1					
ANR	1091745	Parameter	char t	346:40:9441:9446	1091598	2	True				
ANR	1091746	ParameterType	char		1091598	0					
ANR	1091747	Identifier	t		1091598	1					
ANR	1091748	Parameter	int type	346:48:9449:9456	1091598	3	True				
ANR	1091749	ParameterType	int		1091598	0					
ANR	1091750	Identifier	type		1091598	1					
ANR	1091751	CFGEntryNode	ENTRY		1091598		True				
ANR	1091752	CFGExitNode	EXIT		1091598		True				
ANR	1091753	Symbol	r -> type		1091598						
ANR	1091754	Symbol	r -> addr		1091598						
ANR	1091755	Symbol	* core		1091598						
ANR	1091756	Symbol	core -> offset		1091598						
ANR	1091757	Symbol	iter		1091598						
ANR	1091758	Symbol	i		1091598						
ANR	1091759	Symbol	type		1091598						
ANR	1091760	Symbol	list		1091598						
ANR	1091761	Symbol	core -> anal		1091598						
ANR	1091762	Symbol	n		1091598						
ANR	1091763	Symbol	r_anal_fcn_get_refs		1091598						
ANR	1091764	Symbol	fcn		1091598						
ANR	1091765	Symbol	core		1091598						
ANR	1091766	Symbol	r		1091598						
ANR	1091767	Symbol	r_anal_get_fcn_in		1091598						
ANR	1091768	Symbol	t		1091598						
ANR	1091769	Symbol	r_anal_fcn_get_xrefs		1091598						
ANR	1091770	Symbol	UT64_MAX		1091598						
ANR	1091771	Symbol	* r		1091598						
ANR	1091772	Symbol	addr		1091598						
ANR	1091773	Function	bbInstructions	378:0:10019:10261							
ANR	1091774	FunctionDef	"bbInstructions (RAnalFunction * fcn , ut64 addr)"		1091773	0					
ANR	1091775	CompoundStatement		378:58:10077:10261	1091773	0					
ANR	1091776	IdentifierDeclStatement	RListIter * iter ;	379:1:10080:10095	1091773	0	True				
ANR	1091777	IdentifierDecl	* iter		1091773	0					
ANR	1091778	IdentifierDeclType	RListIter *		1091773	0					
ANR	1091779	Identifier	iter		1091773	1					
ANR	1091780	IdentifierDeclStatement	RAnalBlock * bb ;	380:1:10098:10112	1091773	1	True				
ANR	1091781	IdentifierDecl	* bb		1091773	0					
ANR	1091782	IdentifierDeclType	RAnalBlock *		1091773	0					
ANR	1091783	Identifier	bb		1091773	1					
ANR	1091784	Statement	r_list_foreach	381:1:10115:10128	1091773	2	True				
ANR	1091785	Statement	(	381:16:10130:10130	1091773	3	True				
ANR	1091786	Statement	fcn	381:17:10131:10133	1091773	4	True				
ANR	1091787	Statement	->	381:20:10134:10135	1091773	5	True				
ANR	1091788	Statement	bbs	381:22:10136:10138	1091773	6	True				
ANR	1091789	Statement	","	381:25:10139:10139	1091773	7	True				
ANR	1091790	Statement	iter	381:27:10141:10144	1091773	8	True				
ANR	1091791	Statement	","	381:31:10145:10145	1091773	9	True				
ANR	1091792	Statement	bb	381:33:10147:10148	1091773	10	True				
ANR	1091793	Statement	)	381:35:10149:10149	1091773	11	True				
ANR	1091794	CompoundStatement		4:37:73:73	1091773	12					
ANR	1091795	IfStatement	"if ( R_BETWEEN ( bb -> addr , addr , bb -> addr + bb -> size - 1 ) )"		1091773	0					
ANR	1091796	Condition	"R_BETWEEN ( bb -> addr , addr , bb -> addr + bb -> size - 1 )"	382:6:10159:10209	1091773	0	True				
ANR	1091797	CallExpression	"R_BETWEEN ( bb -> addr , addr , bb -> addr + bb -> size - 1 )"		1091773	0					
ANR	1091798	Callee	R_BETWEEN		1091773	0					
ANR	1091799	Identifier	R_BETWEEN		1091773	0					
ANR	1091800	ArgumentList	bb -> addr		1091773	1					
ANR	1091801	Argument	bb -> addr		1091773	0					
ANR	1091802	PtrMemberAccess	bb -> addr		1091773	0					
ANR	1091803	Identifier	bb		1091773	0					
ANR	1091804	Identifier	addr		1091773	1					
ANR	1091805	Argument	addr		1091773	1					
ANR	1091806	Identifier	addr		1091773	0					
ANR	1091807	Argument	bb -> addr + bb -> size - 1		1091773	2					
ANR	1091808	AdditiveExpression	bb -> addr + bb -> size - 1		1091773	0		+			
ANR	1091809	PtrMemberAccess	bb -> addr		1091773	0					
ANR	1091810	Identifier	bb		1091773	0					
ANR	1091811	Identifier	addr		1091773	1					
ANR	1091812	AdditiveExpression	bb -> size - 1		1091773	1		-			
ANR	1091813	PtrMemberAccess	bb -> size		1091773	0					
ANR	1091814	Identifier	bb		1091773	0					
ANR	1091815	Identifier	size		1091773	1					
ANR	1091816	PrimaryExpression	1		1091773	1					
ANR	1091817	CompoundStatement		5:59:134:134	1091773	1					
ANR	1091818	ReturnStatement	return bb -> ninstr ;	383:3:10217:10234	1091773	0	True				
ANR	1091819	PtrMemberAccess	bb -> ninstr		1091773	0					
ANR	1091820	Identifier	bb		1091773	0					
ANR	1091821	Identifier	ninstr		1091773	1					
ANR	1091822	ReturnStatement	return UT64_MAX ;	386:1:10244:10259	1091773	13	True				
ANR	1091823	Identifier	UT64_MAX		1091773	0					
ANR	1091824	ReturnType	static ut64		1091773	1					
ANR	1091825	Identifier	bbInstructions		1091773	2					
ANR	1091826	ParameterList	"RAnalFunction * fcn , ut64 addr"		1091773	3					
ANR	1091827	Parameter	RAnalFunction * fcn	378:27:10046:10063	1091773	0	True				
ANR	1091828	ParameterType	RAnalFunction *		1091773	0					
ANR	1091829	Identifier	fcn		1091773	1					
ANR	1091830	Parameter	ut64 addr	378:47:10066:10074	1091773	1	True				
ANR	1091831	ParameterType	ut64		1091773	0					
ANR	1091832	Identifier	addr		1091773	1					
ANR	1091833	CFGEntryNode	ENTRY		1091773		True				
ANR	1091834	CFGExitNode	EXIT		1091773		True				
ANR	1091835	Symbol	fcn		1091773						
ANR	1091836	Symbol	bb		1091773						
ANR	1091837	Symbol	bb -> size		1091773						
ANR	1091838	Symbol	* bb		1091773						
ANR	1091839	Symbol	R_BETWEEN		1091773						
ANR	1091840	Symbol	iter		1091773						
ANR	1091841	Symbol	bb -> ninstr		1091773						
ANR	1091842	Symbol	bb -> addr		1091773						
ANR	1091843	Symbol	addr		1091773						
ANR	1091844	Symbol	UT64_MAX		1091773						
ANR	1091845	Function	bbBegin	389:0:10264:10497							
ANR	1091846	FunctionDef	"bbBegin (RAnalFunction * fcn , ut64 addr)"		1091845	0					
ANR	1091847	CompoundStatement		389:51:10315:10497	1091845	0					
ANR	1091848	IdentifierDeclStatement	RListIter * iter ;	390:1:10318:10333	1091845	0	True				
ANR	1091849	IdentifierDecl	* iter		1091845	0					
ANR	1091850	IdentifierDeclType	RListIter *		1091845	0					
ANR	1091851	Identifier	iter		1091845	1					
ANR	1091852	IdentifierDeclStatement	RAnalBlock * bb ;	391:1:10336:10350	1091845	1	True				
ANR	1091853	IdentifierDecl	* bb		1091845	0					
ANR	1091854	IdentifierDeclType	RAnalBlock *		1091845	0					
ANR	1091855	Identifier	bb		1091845	1					
ANR	1091856	Statement	r_list_foreach	392:1:10353:10366	1091845	2	True				
ANR	1091857	Statement	(	392:16:10368:10368	1091845	3	True				
ANR	1091858	Statement	fcn	392:17:10369:10371	1091845	4	True				
ANR	1091859	Statement	->	392:20:10372:10373	1091845	5	True				
ANR	1091860	Statement	bbs	392:22:10374:10376	1091845	6	True				
ANR	1091861	Statement	","	392:25:10377:10377	1091845	7	True				
ANR	1091862	Statement	iter	392:27:10379:10382	1091845	8	True				
ANR	1091863	Statement	","	392:31:10383:10383	1091845	9	True				
ANR	1091864	Statement	bb	392:33:10385:10386	1091845	10	True				
ANR	1091865	Statement	)	392:35:10387:10387	1091845	11	True				
ANR	1091866	CompoundStatement		4:37:73:73	1091845	12					
ANR	1091867	IfStatement	"if ( R_BETWEEN ( bb -> addr , addr , bb -> addr + bb -> size - 1 ) )"		1091845	0					
ANR	1091868	Condition	"R_BETWEEN ( bb -> addr , addr , bb -> addr + bb -> size - 1 )"	393:6:10397:10447	1091845	0	True				
ANR	1091869	CallExpression	"R_BETWEEN ( bb -> addr , addr , bb -> addr + bb -> size - 1 )"		1091845	0					
ANR	1091870	Callee	R_BETWEEN		1091845	0					
ANR	1091871	Identifier	R_BETWEEN		1091845	0					
ANR	1091872	ArgumentList	bb -> addr		1091845	1					
ANR	1091873	Argument	bb -> addr		1091845	0					
ANR	1091874	PtrMemberAccess	bb -> addr		1091845	0					
ANR	1091875	Identifier	bb		1091845	0					
ANR	1091876	Identifier	addr		1091845	1					
ANR	1091877	Argument	addr		1091845	1					
ANR	1091878	Identifier	addr		1091845	0					
ANR	1091879	Argument	bb -> addr + bb -> size - 1		1091845	2					
ANR	1091880	AdditiveExpression	bb -> addr + bb -> size - 1		1091845	0		+			
ANR	1091881	PtrMemberAccess	bb -> addr		1091845	0					
ANR	1091882	Identifier	bb		1091845	0					
ANR	1091883	Identifier	addr		1091845	1					
ANR	1091884	AdditiveExpression	bb -> size - 1		1091845	1		-			
ANR	1091885	PtrMemberAccess	bb -> size		1091845	0					
ANR	1091886	Identifier	bb		1091845	0					
ANR	1091887	Identifier	size		1091845	1					
ANR	1091888	PrimaryExpression	1		1091845	1					
ANR	1091889	CompoundStatement		5:59:134:134	1091845	1					
ANR	1091890	ReturnStatement	return bb -> addr ;	394:3:10455:10470	1091845	0	True				
ANR	1091891	PtrMemberAccess	bb -> addr		1091845	0					
ANR	1091892	Identifier	bb		1091845	0					
ANR	1091893	Identifier	addr		1091845	1					
ANR	1091894	ReturnStatement	return UT64_MAX ;	397:1:10480:10495	1091845	13	True				
ANR	1091895	Identifier	UT64_MAX		1091845	0					
ANR	1091896	ReturnType	static ut64		1091845	1					
ANR	1091897	Identifier	bbBegin		1091845	2					
ANR	1091898	ParameterList	"RAnalFunction * fcn , ut64 addr"		1091845	3					
ANR	1091899	Parameter	RAnalFunction * fcn	389:20:10284:10301	1091845	0	True				
ANR	1091900	ParameterType	RAnalFunction *		1091845	0					
ANR	1091901	Identifier	fcn		1091845	1					
ANR	1091902	Parameter	ut64 addr	389:40:10304:10312	1091845	1	True				
ANR	1091903	ParameterType	ut64		1091845	0					
ANR	1091904	Identifier	addr		1091845	1					
ANR	1091905	CFGEntryNode	ENTRY		1091845		True				
ANR	1091906	CFGExitNode	EXIT		1091845		True				
ANR	1091907	Symbol	fcn		1091845						
ANR	1091908	Symbol	bb		1091845						
ANR	1091909	Symbol	bb -> size		1091845						
ANR	1091910	Symbol	* bb		1091845						
ANR	1091911	Symbol	R_BETWEEN		1091845						
ANR	1091912	Symbol	iter		1091845						
ANR	1091913	Symbol	bb -> addr		1091845						
ANR	1091914	Symbol	addr		1091845						
ANR	1091915	Symbol	UT64_MAX		1091845						
ANR	1091916	Function	bbJump	400:0:10500:10732							
ANR	1091917	FunctionDef	"bbJump (RAnalFunction * fcn , ut64 addr)"		1091916	0					
ANR	1091918	CompoundStatement		400:50:10550:10732	1091916	0					
ANR	1091919	IdentifierDeclStatement	RListIter * iter ;	401:1:10553:10568	1091916	0	True				
ANR	1091920	IdentifierDecl	* iter		1091916	0					
ANR	1091921	IdentifierDeclType	RListIter *		1091916	0					
ANR	1091922	Identifier	iter		1091916	1					
ANR	1091923	IdentifierDeclStatement	RAnalBlock * bb ;	402:1:10571:10585	1091916	1	True				
ANR	1091924	IdentifierDecl	* bb		1091916	0					
ANR	1091925	IdentifierDeclType	RAnalBlock *		1091916	0					
ANR	1091926	Identifier	bb		1091916	1					
ANR	1091927	Statement	r_list_foreach	403:1:10588:10601	1091916	2	True				
ANR	1091928	Statement	(	403:16:10603:10603	1091916	3	True				
ANR	1091929	Statement	fcn	403:17:10604:10606	1091916	4	True				
ANR	1091930	Statement	->	403:20:10607:10608	1091916	5	True				
ANR	1091931	Statement	bbs	403:22:10609:10611	1091916	6	True				
ANR	1091932	Statement	","	403:25:10612:10612	1091916	7	True				
ANR	1091933	Statement	iter	403:27:10614:10617	1091916	8	True				
ANR	1091934	Statement	","	403:31:10618:10618	1091916	9	True				
ANR	1091935	Statement	bb	403:33:10620:10621	1091916	10	True				
ANR	1091936	Statement	)	403:35:10622:10622	1091916	11	True				
ANR	1091937	CompoundStatement		4:37:73:73	1091916	12					
ANR	1091938	IfStatement	"if ( R_BETWEEN ( bb -> addr , addr , bb -> addr + bb -> size - 1 ) )"		1091916	0					
ANR	1091939	Condition	"R_BETWEEN ( bb -> addr , addr , bb -> addr + bb -> size - 1 )"	404:6:10632:10682	1091916	0	True				
ANR	1091940	CallExpression	"R_BETWEEN ( bb -> addr , addr , bb -> addr + bb -> size - 1 )"		1091916	0					
ANR	1091941	Callee	R_BETWEEN		1091916	0					
ANR	1091942	Identifier	R_BETWEEN		1091916	0					
ANR	1091943	ArgumentList	bb -> addr		1091916	1					
ANR	1091944	Argument	bb -> addr		1091916	0					
ANR	1091945	PtrMemberAccess	bb -> addr		1091916	0					
ANR	1091946	Identifier	bb		1091916	0					
ANR	1091947	Identifier	addr		1091916	1					
ANR	1091948	Argument	addr		1091916	1					
ANR	1091949	Identifier	addr		1091916	0					
ANR	1091950	Argument	bb -> addr + bb -> size - 1		1091916	2					
ANR	1091951	AdditiveExpression	bb -> addr + bb -> size - 1		1091916	0		+			
ANR	1091952	PtrMemberAccess	bb -> addr		1091916	0					
ANR	1091953	Identifier	bb		1091916	0					
ANR	1091954	Identifier	addr		1091916	1					
ANR	1091955	AdditiveExpression	bb -> size - 1		1091916	1		-			
ANR	1091956	PtrMemberAccess	bb -> size		1091916	0					
ANR	1091957	Identifier	bb		1091916	0					
ANR	1091958	Identifier	size		1091916	1					
ANR	1091959	PrimaryExpression	1		1091916	1					
ANR	1091960	CompoundStatement		5:59:134:134	1091916	1					
ANR	1091961	ReturnStatement	return bb -> jump ;	405:3:10690:10705	1091916	0	True				
ANR	1091962	PtrMemberAccess	bb -> jump		1091916	0					
ANR	1091963	Identifier	bb		1091916	0					
ANR	1091964	Identifier	jump		1091916	1					
ANR	1091965	ReturnStatement	return UT64_MAX ;	408:1:10715:10730	1091916	13	True				
ANR	1091966	Identifier	UT64_MAX		1091916	0					
ANR	1091967	ReturnType	static ut64		1091916	1					
ANR	1091968	Identifier	bbJump		1091916	2					
ANR	1091969	ParameterList	"RAnalFunction * fcn , ut64 addr"		1091916	3					
ANR	1091970	Parameter	RAnalFunction * fcn	400:19:10519:10536	1091916	0	True				
ANR	1091971	ParameterType	RAnalFunction *		1091916	0					
ANR	1091972	Identifier	fcn		1091916	1					
ANR	1091973	Parameter	ut64 addr	400:39:10539:10547	1091916	1	True				
ANR	1091974	ParameterType	ut64		1091916	0					
ANR	1091975	Identifier	addr		1091916	1					
ANR	1091976	CFGEntryNode	ENTRY		1091916		True				
ANR	1091977	CFGExitNode	EXIT		1091916		True				
ANR	1091978	Symbol	fcn		1091916						
ANR	1091979	Symbol	bb		1091916						
ANR	1091980	Symbol	bb -> jump		1091916						
ANR	1091981	Symbol	bb -> size		1091916						
ANR	1091982	Symbol	* bb		1091916						
ANR	1091983	Symbol	R_BETWEEN		1091916						
ANR	1091984	Symbol	iter		1091916						
ANR	1091985	Symbol	bb -> addr		1091916						
ANR	1091986	Symbol	addr		1091916						
ANR	1091987	Symbol	UT64_MAX		1091916						
ANR	1091988	Function	bbFail	411:0:10735:10967							
ANR	1091989	FunctionDef	"bbFail (RAnalFunction * fcn , ut64 addr)"		1091988	0					
ANR	1091990	CompoundStatement		411:50:10785:10967	1091988	0					
ANR	1091991	IdentifierDeclStatement	RListIter * iter ;	412:1:10788:10803	1091988	0	True				
ANR	1091992	IdentifierDecl	* iter		1091988	0					
ANR	1091993	IdentifierDeclType	RListIter *		1091988	0					
ANR	1091994	Identifier	iter		1091988	1					
ANR	1091995	IdentifierDeclStatement	RAnalBlock * bb ;	413:1:10806:10820	1091988	1	True				
ANR	1091996	IdentifierDecl	* bb		1091988	0					
ANR	1091997	IdentifierDeclType	RAnalBlock *		1091988	0					
ANR	1091998	Identifier	bb		1091988	1					
ANR	1091999	Statement	r_list_foreach	414:1:10823:10836	1091988	2	True				
ANR	1092000	Statement	(	414:16:10838:10838	1091988	3	True				
ANR	1092001	Statement	fcn	414:17:10839:10841	1091988	4	True				
ANR	1092002	Statement	->	414:20:10842:10843	1091988	5	True				
ANR	1092003	Statement	bbs	414:22:10844:10846	1091988	6	True				
ANR	1092004	Statement	","	414:25:10847:10847	1091988	7	True				
ANR	1092005	Statement	iter	414:27:10849:10852	1091988	8	True				
ANR	1092006	Statement	","	414:31:10853:10853	1091988	9	True				
ANR	1092007	Statement	bb	414:33:10855:10856	1091988	10	True				
ANR	1092008	Statement	)	414:35:10857:10857	1091988	11	True				
ANR	1092009	CompoundStatement		4:37:73:73	1091988	12					
ANR	1092010	IfStatement	"if ( R_BETWEEN ( bb -> addr , addr , bb -> addr + bb -> size - 1 ) )"		1091988	0					
ANR	1092011	Condition	"R_BETWEEN ( bb -> addr , addr , bb -> addr + bb -> size - 1 )"	415:6:10867:10917	1091988	0	True				
ANR	1092012	CallExpression	"R_BETWEEN ( bb -> addr , addr , bb -> addr + bb -> size - 1 )"		1091988	0					
ANR	1092013	Callee	R_BETWEEN		1091988	0					
ANR	1092014	Identifier	R_BETWEEN		1091988	0					
ANR	1092015	ArgumentList	bb -> addr		1091988	1					
ANR	1092016	Argument	bb -> addr		1091988	0					
ANR	1092017	PtrMemberAccess	bb -> addr		1091988	0					
ANR	1092018	Identifier	bb		1091988	0					
ANR	1092019	Identifier	addr		1091988	1					
ANR	1092020	Argument	addr		1091988	1					
ANR	1092021	Identifier	addr		1091988	0					
ANR	1092022	Argument	bb -> addr + bb -> size - 1		1091988	2					
ANR	1092023	AdditiveExpression	bb -> addr + bb -> size - 1		1091988	0		+			
ANR	1092024	PtrMemberAccess	bb -> addr		1091988	0					
ANR	1092025	Identifier	bb		1091988	0					
ANR	1092026	Identifier	addr		1091988	1					
ANR	1092027	AdditiveExpression	bb -> size - 1		1091988	1		-			
ANR	1092028	PtrMemberAccess	bb -> size		1091988	0					
ANR	1092029	Identifier	bb		1091988	0					
ANR	1092030	Identifier	size		1091988	1					
ANR	1092031	PrimaryExpression	1		1091988	1					
ANR	1092032	CompoundStatement		5:59:134:134	1091988	1					
ANR	1092033	ReturnStatement	return bb -> fail ;	416:3:10925:10940	1091988	0	True				
ANR	1092034	PtrMemberAccess	bb -> fail		1091988	0					
ANR	1092035	Identifier	bb		1091988	0					
ANR	1092036	Identifier	fail		1091988	1					
ANR	1092037	ReturnStatement	return UT64_MAX ;	419:1:10950:10965	1091988	13	True				
ANR	1092038	Identifier	UT64_MAX		1091988	0					
ANR	1092039	ReturnType	static ut64		1091988	1					
ANR	1092040	Identifier	bbFail		1091988	2					
ANR	1092041	ParameterList	"RAnalFunction * fcn , ut64 addr"		1091988	3					
ANR	1092042	Parameter	RAnalFunction * fcn	411:19:10754:10771	1091988	0	True				
ANR	1092043	ParameterType	RAnalFunction *		1091988	0					
ANR	1092044	Identifier	fcn		1091988	1					
ANR	1092045	Parameter	ut64 addr	411:39:10774:10782	1091988	1	True				
ANR	1092046	ParameterType	ut64		1091988	0					
ANR	1092047	Identifier	addr		1091988	1					
ANR	1092048	CFGEntryNode	ENTRY		1091988		True				
ANR	1092049	CFGExitNode	EXIT		1091988		True				
ANR	1092050	Symbol	fcn		1091988						
ANR	1092051	Symbol	bb		1091988						
ANR	1092052	Symbol	bb -> fail		1091988						
ANR	1092053	Symbol	bb -> size		1091988						
ANR	1092054	Symbol	* bb		1091988						
ANR	1092055	Symbol	R_BETWEEN		1091988						
ANR	1092056	Symbol	iter		1091988						
ANR	1092057	Symbol	bb -> addr		1091988						
ANR	1092058	Symbol	addr		1091988						
ANR	1092059	Symbol	UT64_MAX		1091988						
ANR	1092060	Function	bbSize	422:0:10970:11195							
ANR	1092061	FunctionDef	"bbSize (RAnalFunction * fcn , ut64 addr)"		1092060	0					
ANR	1092062	CompoundStatement		422:50:11020:11195	1092060	0					
ANR	1092063	IdentifierDeclStatement	RListIter * iter ;	423:1:11023:11038	1092060	0	True				
ANR	1092064	IdentifierDecl	* iter		1092060	0					
ANR	1092065	IdentifierDeclType	RListIter *		1092060	0					
ANR	1092066	Identifier	iter		1092060	1					
ANR	1092067	IdentifierDeclStatement	RAnalBlock * bb ;	424:1:11041:11055	1092060	1	True				
ANR	1092068	IdentifierDecl	* bb		1092060	0					
ANR	1092069	IdentifierDeclType	RAnalBlock *		1092060	0					
ANR	1092070	Identifier	bb		1092060	1					
ANR	1092071	Statement	r_list_foreach	425:1:11058:11071	1092060	2	True				
ANR	1092072	Statement	(	425:16:11073:11073	1092060	3	True				
ANR	1092073	Statement	fcn	425:17:11074:11076	1092060	4	True				
ANR	1092074	Statement	->	425:20:11077:11078	1092060	5	True				
ANR	1092075	Statement	bbs	425:22:11079:11081	1092060	6	True				
ANR	1092076	Statement	","	425:25:11082:11082	1092060	7	True				
ANR	1092077	Statement	iter	425:27:11084:11087	1092060	8	True				
ANR	1092078	Statement	","	425:31:11088:11088	1092060	9	True				
ANR	1092079	Statement	bb	425:33:11090:11091	1092060	10	True				
ANR	1092080	Statement	)	425:35:11092:11092	1092060	11	True				
ANR	1092081	CompoundStatement		4:37:73:73	1092060	12					
ANR	1092082	IfStatement	"if ( R_BETWEEN ( bb -> addr , addr , bb -> addr + bb -> size - 1 ) )"		1092060	0					
ANR	1092083	Condition	"R_BETWEEN ( bb -> addr , addr , bb -> addr + bb -> size - 1 )"	426:6:11102:11152	1092060	0	True				
ANR	1092084	CallExpression	"R_BETWEEN ( bb -> addr , addr , bb -> addr + bb -> size - 1 )"		1092060	0					
ANR	1092085	Callee	R_BETWEEN		1092060	0					
ANR	1092086	Identifier	R_BETWEEN		1092060	0					
ANR	1092087	ArgumentList	bb -> addr		1092060	1					
ANR	1092088	Argument	bb -> addr		1092060	0					
ANR	1092089	PtrMemberAccess	bb -> addr		1092060	0					
ANR	1092090	Identifier	bb		1092060	0					
ANR	1092091	Identifier	addr		1092060	1					
ANR	1092092	Argument	addr		1092060	1					
ANR	1092093	Identifier	addr		1092060	0					
ANR	1092094	Argument	bb -> addr + bb -> size - 1		1092060	2					
ANR	1092095	AdditiveExpression	bb -> addr + bb -> size - 1		1092060	0		+			
ANR	1092096	PtrMemberAccess	bb -> addr		1092060	0					
ANR	1092097	Identifier	bb		1092060	0					
ANR	1092098	Identifier	addr		1092060	1					
ANR	1092099	AdditiveExpression	bb -> size - 1		1092060	1		-			
ANR	1092100	PtrMemberAccess	bb -> size		1092060	0					
ANR	1092101	Identifier	bb		1092060	0					
ANR	1092102	Identifier	size		1092060	1					
ANR	1092103	PrimaryExpression	1		1092060	1					
ANR	1092104	CompoundStatement		5:59:134:134	1092060	1					
ANR	1092105	ReturnStatement	return bb -> size ;	427:3:11160:11175	1092060	0	True				
ANR	1092106	PtrMemberAccess	bb -> size		1092060	0					
ANR	1092107	Identifier	bb		1092060	0					
ANR	1092108	Identifier	size		1092060	1					
ANR	1092109	ReturnStatement	return 0 ;	430:1:11185:11193	1092060	13	True				
ANR	1092110	PrimaryExpression	0		1092060	0					
ANR	1092111	ReturnType	static ut64		1092060	1					
ANR	1092112	Identifier	bbSize		1092060	2					
ANR	1092113	ParameterList	"RAnalFunction * fcn , ut64 addr"		1092060	3					
ANR	1092114	Parameter	RAnalFunction * fcn	422:19:10989:11006	1092060	0	True				
ANR	1092115	ParameterType	RAnalFunction *		1092060	0					
ANR	1092116	Identifier	fcn		1092060	1					
ANR	1092117	Parameter	ut64 addr	422:39:11009:11017	1092060	1	True				
ANR	1092118	ParameterType	ut64		1092060	0					
ANR	1092119	Identifier	addr		1092060	1					
ANR	1092120	CFGEntryNode	ENTRY		1092060		True				
ANR	1092121	CFGExitNode	EXIT		1092060		True				
ANR	1092122	Symbol	fcn		1092060						
ANR	1092123	Symbol	bb		1092060						
ANR	1092124	Symbol	bb -> size		1092060						
ANR	1092125	Symbol	* bb		1092060						
ANR	1092126	Symbol	R_BETWEEN		1092060						
ANR	1092127	Symbol	iter		1092060						
ANR	1092128	Symbol	bb -> addr		1092060						
ANR	1092129	Symbol	addr		1092060						
ANR	1092130	Function	str_callback	433:0:11198:11458							
ANR	1092131	FunctionDef	"str_callback (RNum * user , ut64 off , int * ok)"		1092130	0					
ANR	1092132	CompoundStatement		433:63:11261:11458	1092130	0					
ANR	1092133	IdentifierDeclStatement	RFlag * f = ( RFlag * ) user ;	434:1:11264:11287	1092130	0	True				
ANR	1092134	IdentifierDecl	* f = ( RFlag * ) user		1092130	0					
ANR	1092135	IdentifierDeclType	RFlag *		1092130	0					
ANR	1092136	Identifier	f		1092130	1					
ANR	1092137	AssignmentExpression	* f = ( RFlag * ) user		1092130	2		=			
ANR	1092138	Identifier	f		1092130	0					
ANR	1092139	CastExpression	( RFlag * ) user		1092130	1					
ANR	1092140	CastTarget	RFlag *		1092130	0					
ANR	1092141	Identifier	user		1092130	1					
ANR	1092142	IfStatement	if ( ok )		1092130	1					
ANR	1092143	Condition	ok	435:5:11294:11295	1092130	0	True				
ANR	1092144	Identifier	ok		1092130	0					
ANR	1092145	CompoundStatement		3:9:36:36	1092130	1					
ANR	1092146	ExpressionStatement	* ok = 0	436:2:11302:11309	1092130	0	True				
ANR	1092147	AssignmentExpression	* ok = 0		1092130	0		=			
ANR	1092148	UnaryOperationExpression	* ok		1092130	0					
ANR	1092149	UnaryOperator	*		1092130	0					
ANR	1092150	Identifier	ok		1092130	1					
ANR	1092151	PrimaryExpression	0		1092130	1					
ANR	1092152	IfStatement	if ( f )		1092130	2					
ANR	1092153	Condition	f	438:5:11319:11319	1092130	0	True				
ANR	1092154	Identifier	f		1092130	0					
ANR	1092155	CompoundStatement		7:2:64:103	1092130	1					
ANR	1092156	IdentifierDeclStatement	"RFlagItem * item = r_flag_get_i ( f , off ) ;"	439:2:11326:11365	1092130	0	True				
ANR	1092157	IdentifierDecl	"* item = r_flag_get_i ( f , off )"		1092130	0					
ANR	1092158	IdentifierDeclType	RFlagItem *		1092130	0					
ANR	1092159	Identifier	item		1092130	1					
ANR	1092160	AssignmentExpression	"* item = r_flag_get_i ( f , off )"		1092130	2		=			
ANR	1092161	Identifier	item		1092130	0					
ANR	1092162	CallExpression	"r_flag_get_i ( f , off )"		1092130	1					
ANR	1092163	Callee	r_flag_get_i		1092130	0					
ANR	1092164	Identifier	r_flag_get_i		1092130	0					
ANR	1092165	ArgumentList	f		1092130	1					
ANR	1092166	Argument	f		1092130	0					
ANR	1092167	Identifier	f		1092130	0					
ANR	1092168	Argument	off		1092130	1					
ANR	1092169	Identifier	off		1092130	0					
ANR	1092170	IfStatement	if ( item )		1092130	1					
ANR	1092171	Condition	item	440:6:11373:11376	1092130	0	True				
ANR	1092172	Identifier	item		1092130	0					
ANR	1092173	CompoundStatement		8:12:117:117	1092130	1					
ANR	1092174	IfStatement	if ( ok )		1092130	0					
ANR	1092175	Condition	ok	441:7:11388:11389	1092130	0	True				
ANR	1092176	Identifier	ok		1092130	0					
ANR	1092177	CompoundStatement		9:11:130:130	1092130	1					
ANR	1092178	ExpressionStatement	* ok = true	442:4:11398:11408	1092130	0	True				
ANR	1092179	AssignmentExpression	* ok = true		1092130	0		=			
ANR	1092180	UnaryOperationExpression	* ok		1092130	0					
ANR	1092181	UnaryOperator	*		1092130	0					
ANR	1092182	Identifier	ok		1092130	1					
ANR	1092183	Identifier	true		1092130	1					
ANR	1092184	ReturnStatement	return item -> name ;	444:3:11418:11435	1092130	1	True				
ANR	1092185	PtrMemberAccess	item -> name		1092130	0					
ANR	1092186	Identifier	item		1092130	0					
ANR	1092187	Identifier	name		1092130	1					
ANR	1092188	ReturnStatement	return NULL ;	447:1:11445:11456	1092130	3	True				
ANR	1092189	Identifier	NULL		1092130	0					
ANR	1092190	ReturnType	static const char *		1092130	1					
ANR	1092191	Identifier	str_callback		1092130	2					
ANR	1092192	ParameterList	"RNum * user , ut64 off , int * ok"		1092130	3					
ANR	1092193	Parameter	RNum * user	433:32:11230:11239	1092130	0	True				
ANR	1092194	ParameterType	RNum *		1092130	0					
ANR	1092195	Identifier	user		1092130	1					
ANR	1092196	Parameter	ut64 off	433:44:11242:11249	1092130	1	True				
ANR	1092197	ParameterType	ut64		1092130	0					
ANR	1092198	Identifier	off		1092130	1					
ANR	1092199	Parameter	int * ok	433:54:11252:11258	1092130	2	True				
ANR	1092200	ParameterType	int *		1092130	0					
ANR	1092201	Identifier	ok		1092130	1					
ANR	1092202	CFGEntryNode	ENTRY		1092130		True				
ANR	1092203	CFGExitNode	EXIT		1092130		True				
ANR	1092204	Symbol	* ok		1092130						
ANR	1092205	Symbol	item		1092130						
ANR	1092206	Symbol	NULL		1092130						
ANR	1092207	Symbol	f		1092130						
ANR	1092208	Symbol	* item		1092130						
ANR	1092209	Symbol	item -> name		1092130						
ANR	1092210	Symbol	true		1092130						
ANR	1092211	Symbol	ok		1092130						
ANR	1092212	Symbol	user		1092130						
ANR	1092213	Symbol	r_flag_get_i		1092130						
ANR	1092214	Symbol	off		1092130						
ANR	1092215	Function	num_callback	450:0:11461:20883							
ANR	1092216	FunctionDef	"num_callback (RNum * userptr , const char * str , int * ok)"		1092215	0					
ANR	1092217	CompoundStatement		450:66:11527:20883	1092215	0					
ANR	1092218	IdentifierDeclStatement	RCore * core = ( RCore * ) userptr ;	451:1:11530:11560	1092215	0	True				
ANR	1092219	IdentifierDecl	* core = ( RCore * ) userptr		1092215	0					
ANR	1092220	IdentifierDeclType	RCore *		1092215	0					
ANR	1092221	Identifier	core		1092215	1					
ANR	1092222	AssignmentExpression	* core = ( RCore * ) userptr		1092215	2		=			
ANR	1092223	Identifier	core		1092215	0					
ANR	1092224	CastExpression	( RCore * ) userptr		1092215	1					
ANR	1092225	CastTarget	RCore *		1092215	0					
ANR	1092226	Identifier	userptr		1092215	1					
ANR	1092227	IdentifierDeclStatement	RAnalFunction * fcn ;	452:1:11572:11590	1092215	1	True				
ANR	1092228	IdentifierDecl	* fcn		1092215	0					
ANR	1092229	IdentifierDeclType	RAnalFunction *		1092215	0					
ANR	1092230	Identifier	fcn		1092215	1					
ANR	1092231	IdentifierDeclStatement	"char * ptr , * bptr , * out = NULL ;"	453:1:11593:11622	1092215	2	True				
ANR	1092232	IdentifierDecl	* ptr		1092215	0					
ANR	1092233	IdentifierDeclType	char *		1092215	0					
ANR	1092234	Identifier	ptr		1092215	1					
ANR	1092235	IdentifierDecl	* bptr		1092215	1					
ANR	1092236	IdentifierDeclType	char *		1092215	0					
ANR	1092237	Identifier	bptr		1092215	1					
ANR	1092238	IdentifierDecl	* out = NULL		1092215	2					
ANR	1092239	IdentifierDeclType	char *		1092215	0					
ANR	1092240	Identifier	out		1092215	1					
ANR	1092241	AssignmentExpression	* out = NULL		1092215	2		=			
ANR	1092242	Identifier	NULL		1092215	0					
ANR	1092243	Identifier	NULL		1092215	1					
ANR	1092244	IdentifierDeclStatement	RFlagItem * flag ;	454:1:11625:11640	1092215	3	True				
ANR	1092245	IdentifierDecl	* flag		1092215	0					
ANR	1092246	IdentifierDeclType	RFlagItem *		1092215	0					
ANR	1092247	Identifier	flag		1092215	1					
ANR	1092248	IdentifierDeclStatement	RBinSection * s ;	455:1:11643:11657	1092215	4	True				
ANR	1092249	IdentifierDecl	* s		1092215	0					
ANR	1092250	IdentifierDeclType	RBinSection *		1092215	0					
ANR	1092251	Identifier	s		1092215	1					
ANR	1092252	IdentifierDeclStatement	RAnalOp op ;	456:1:11660:11670	1092215	5	True				
ANR	1092253	IdentifierDecl	op		1092215	0					
ANR	1092254	IdentifierDeclType	RAnalOp		1092215	0					
ANR	1092255	Identifier	op		1092215	1					
ANR	1092256	IdentifierDeclStatement	ut64 ret = 0 ;	457:1:11673:11685	1092215	6	True				
ANR	1092257	IdentifierDecl	ret = 0		1092215	0					
ANR	1092258	IdentifierDeclType	ut64		1092215	0					
ANR	1092259	Identifier	ret		1092215	1					
ANR	1092260	AssignmentExpression	ret = 0		1092215	2		=			
ANR	1092261	Identifier	ret		1092215	0					
ANR	1092262	PrimaryExpression	0		1092215	1					
ANR	1092263	IfStatement	if ( ok )		1092215	7					
ANR	1092264	Condition	ok	459:5:11693:11694	1092215	0	True				
ANR	1092265	Identifier	ok		1092215	0					
ANR	1092266	CompoundStatement		10:9:169:169	1092215	1					
ANR	1092267	ExpressionStatement	* ok = false	460:2:11701:11712	1092215	0	True				
ANR	1092268	AssignmentExpression	* ok = false		1092215	0		=			
ANR	1092269	UnaryOperationExpression	* ok		1092215	0					
ANR	1092270	UnaryOperator	*		1092215	0					
ANR	1092271	Identifier	ok		1092215	1					
ANR	1092272	Identifier	false		1092215	1					
ANR	1092273	SwitchStatement	switch ( * str )		1092215	8					
ANR	1092274	Condition	* str	462:9:11726:11729	1092215	0	True				
ANR	1092275	UnaryOperationExpression	* str		1092215	0					
ANR	1092276	UnaryOperator	*		1092215	0					
ANR	1092277	Identifier	str		1092215	1					
ANR	1092278	CompoundStatement		13:15:204:204	1092215	1					
ANR	1092279	Label	case '.' :	463:1:11735:11743	1092215	0	True				
ANR	1092280	IfStatement	if ( str [ 1 ] == '.' )		1092215	1					
ANR	1092281	Condition	str [ 1 ] == '.'	464:6:11751:11763	1092215	0	True				
ANR	1092282	EqualityExpression	str [ 1 ] == '.'		1092215	0		==			
ANR	1092283	ArrayIndexing	str [ 1 ]		1092215	0					
ANR	1092284	Identifier	str		1092215	0					
ANR	1092285	PrimaryExpression	1		1092215	1					
ANR	1092286	PrimaryExpression	'.'		1092215	1					
ANR	1092287	CompoundStatement		15:21:238:238	1092215	1					
ANR	1092288	IfStatement	if ( ok )		1092215	0					
ANR	1092289	Condition	ok	465:7:11775:11776	1092215	0	True				
ANR	1092290	Identifier	ok		1092215	0					
ANR	1092291	CompoundStatement		16:11:251:251	1092215	1					
ANR	1092292	ExpressionStatement	* ok = true	466:4:11785:11795	1092215	0	True				
ANR	1092293	AssignmentExpression	* ok = true		1092215	0		=			
ANR	1092294	UnaryOperationExpression	* ok		1092215	0					
ANR	1092295	UnaryOperator	*		1092215	0					
ANR	1092296	Identifier	ok		1092215	1					
ANR	1092297	Identifier	true		1092215	1					
ANR	1092298	ReturnStatement	"return r_num_tail ( core -> num , core -> offset , str + 2 ) ;"	468:3:11805:11857	1092215	1	True				
ANR	1092299	CallExpression	"r_num_tail ( core -> num , core -> offset , str + 2 )"		1092215	0					
ANR	1092300	Callee	r_num_tail		1092215	0					
ANR	1092301	Identifier	r_num_tail		1092215	0					
ANR	1092302	ArgumentList	core -> num		1092215	1					
ANR	1092303	Argument	core -> num		1092215	0					
ANR	1092304	PtrMemberAccess	core -> num		1092215	0					
ANR	1092305	Identifier	core		1092215	0					
ANR	1092306	Identifier	num		1092215	1					
ANR	1092307	Argument	core -> offset		1092215	1					
ANR	1092308	PtrMemberAccess	core -> offset		1092215	0					
ANR	1092309	Identifier	core		1092215	0					
ANR	1092310	Identifier	offset		1092215	1					
ANR	1092311	Argument	str + 2		1092215	2					
ANR	1092312	AdditiveExpression	str + 2		1092215	0		+			
ANR	1092313	Identifier	str		1092215	0					
ANR	1092314	PrimaryExpression	2		1092215	1					
ANR	1092315	IfStatement	if ( core -> num -> nc . curr_tok == '+' )		1092215	2					
ANR	1092316	Condition	core -> num -> nc . curr_tok == '+'	470:6:11869:11897	1092215	0	True				
ANR	1092317	EqualityExpression	core -> num -> nc . curr_tok == '+'		1092215	0		==			
ANR	1092318	MemberAccess	core -> num -> nc . curr_tok		1092215	0					
ANR	1092319	PtrMemberAccess	core -> num -> nc		1092215	0					
ANR	1092320	PtrMemberAccess	core -> num		1092215	0					
ANR	1092321	Identifier	core		1092215	0					
ANR	1092322	Identifier	num		1092215	1					
ANR	1092323	Identifier	nc		1092215	1					
ANR	1092324	Identifier	curr_tok		1092215	1					
ANR	1092325	PrimaryExpression	'+'		1092215	1					
ANR	1092326	CompoundStatement		26:3:465:524	1092215	1					
ANR	1092327	IdentifierDeclStatement	ut64 off = core -> num -> nc . number_value . n ;	471:3:11905:11944	1092215	0	True				
ANR	1092328	IdentifierDecl	off = core -> num -> nc . number_value . n		1092215	0					
ANR	1092329	IdentifierDeclType	ut64		1092215	0					
ANR	1092330	Identifier	off		1092215	1					
ANR	1092331	AssignmentExpression	off = core -> num -> nc . number_value . n		1092215	2		=			
ANR	1092332	Identifier	off		1092215	0					
ANR	1092333	MemberAccess	core -> num -> nc . number_value . n		1092215	1					
ANR	1092334	MemberAccess	core -> num -> nc . number_value		1092215	0					
ANR	1092335	PtrMemberAccess	core -> num -> nc		1092215	0					
ANR	1092336	PtrMemberAccess	core -> num		1092215	0					
ANR	1092337	Identifier	core		1092215	0					
ANR	1092338	Identifier	num		1092215	1					
ANR	1092339	Identifier	nc		1092215	1					
ANR	1092340	Identifier	number_value		1092215	1					
ANR	1092341	Identifier	n		1092215	1					
ANR	1092342	IfStatement	if ( ! off )		1092215	1					
ANR	1092343	Condition	! off	472:7:11953:11956	1092215	0	True				
ANR	1092344	UnaryOperationExpression	! off		1092215	0					
ANR	1092345	UnaryOperator	!		1092215	0					
ANR	1092346	Identifier	off		1092215	1					
ANR	1092347	CompoundStatement		23:13:431:431	1092215	1					
ANR	1092348	ExpressionStatement	off = core -> offset	473:4:11965:11983	1092215	0	True				
ANR	1092349	AssignmentExpression	off = core -> offset		1092215	0		=			
ANR	1092350	Identifier	off		1092215	0					
ANR	1092351	PtrMemberAccess	core -> offset		1092215	1					
ANR	1092352	Identifier	core		1092215	0					
ANR	1092353	Identifier	offset		1092215	1					
ANR	1092354	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_at ( core -> anal , off , 0 ) ;"	475:3:11993:12052	1092215	2	True				
ANR	1092355	IdentifierDecl	"* fcn = r_anal_get_fcn_at ( core -> anal , off , 0 )"		1092215	0					
ANR	1092356	IdentifierDeclType	RAnalFunction *		1092215	0					
ANR	1092357	Identifier	fcn		1092215	1					
ANR	1092358	AssignmentExpression	"* fcn = r_anal_get_fcn_at ( core -> anal , off , 0 )"		1092215	2		=			
ANR	1092359	Identifier	fcn		1092215	0					
ANR	1092360	CallExpression	"r_anal_get_fcn_at ( core -> anal , off , 0 )"		1092215	1					
ANR	1092361	Callee	r_anal_get_fcn_at		1092215	0					
ANR	1092362	Identifier	r_anal_get_fcn_at		1092215	0					
ANR	1092363	ArgumentList	core -> anal		1092215	1					
ANR	1092364	Argument	core -> anal		1092215	0					
ANR	1092365	PtrMemberAccess	core -> anal		1092215	0					
ANR	1092366	Identifier	core		1092215	0					
ANR	1092367	Identifier	anal		1092215	1					
ANR	1092368	Argument	off		1092215	1					
ANR	1092369	Identifier	off		1092215	0					
ANR	1092370	Argument	0		1092215	2					
ANR	1092371	PrimaryExpression	0		1092215	0					
ANR	1092372	IfStatement	if ( fcn )		1092215	3					
ANR	1092373	Condition	fcn	476:7:12061:12063	1092215	0	True				
ANR	1092374	Identifier	fcn		1092215	0					
ANR	1092375	CompoundStatement		35:4:700:722	1092215	1					
ANR	1092376	IfStatement	if ( ok )		1092215	0					
ANR	1092377	Condition	ok	477:8:12076:12077	1092215	0	True				
ANR	1092378	Identifier	ok		1092215	0					
ANR	1092379	CompoundStatement		28:12:552:552	1092215	1					
ANR	1092380	ExpressionStatement	* ok = true	478:5:12087:12097	1092215	0	True				
ANR	1092381	AssignmentExpression	* ok = true		1092215	0		=			
ANR	1092382	UnaryOperationExpression	* ok		1092215	0					
ANR	1092383	UnaryOperator	*		1092215	0					
ANR	1092384	Identifier	ok		1092215	1					
ANR	1092385	Identifier	true		1092215	1					
ANR	1092386	IdentifierDeclStatement	"ut64 dst = r_anal_fcn_label_get ( core -> anal , fcn , str + 1 ) ;"	480:4:12109:12167	1092215	1	True				
ANR	1092387	IdentifierDecl	"dst = r_anal_fcn_label_get ( core -> anal , fcn , str + 1 )"		1092215	0					
ANR	1092388	IdentifierDeclType	ut64		1092215	0					
ANR	1092389	Identifier	dst		1092215	1					
ANR	1092390	AssignmentExpression	"dst = r_anal_fcn_label_get ( core -> anal , fcn , str + 1 )"		1092215	2		=			
ANR	1092391	Identifier	dst		1092215	0					
ANR	1092392	CallExpression	"r_anal_fcn_label_get ( core -> anal , fcn , str + 1 )"		1092215	1					
ANR	1092393	Callee	r_anal_fcn_label_get		1092215	0					
ANR	1092394	Identifier	r_anal_fcn_label_get		1092215	0					
ANR	1092395	ArgumentList	core -> anal		1092215	1					
ANR	1092396	Argument	core -> anal		1092215	0					
ANR	1092397	PtrMemberAccess	core -> anal		1092215	0					
ANR	1092398	Identifier	core		1092215	0					
ANR	1092399	Identifier	anal		1092215	1					
ANR	1092400	Argument	fcn		1092215	1					
ANR	1092401	Identifier	fcn		1092215	0					
ANR	1092402	Argument	str + 1		1092215	2					
ANR	1092403	AdditiveExpression	str + 1		1092215	0		+			
ANR	1092404	Identifier	str		1092215	0					
ANR	1092405	PrimaryExpression	1		1092215	1					
ANR	1092406	IfStatement	if ( dst == UT64_MAX )		1092215	2					
ANR	1092407	Condition	dst == UT64_MAX	481:8:12177:12191	1092215	0	True				
ANR	1092408	EqualityExpression	dst == UT64_MAX		1092215	0		==			
ANR	1092409	Identifier	dst		1092215	0					
ANR	1092410	Identifier	UT64_MAX		1092215	1					
ANR	1092411	CompoundStatement		32:25:666:666	1092215	1					
ANR	1092412	ExpressionStatement	dst = fcn -> addr	482:5:12201:12216	1092215	0	True				
ANR	1092413	AssignmentExpression	dst = fcn -> addr		1092215	0		=			
ANR	1092414	Identifier	dst		1092215	0					
ANR	1092415	PtrMemberAccess	fcn -> addr		1092215	1					
ANR	1092416	Identifier	fcn		1092215	0					
ANR	1092417	Identifier	addr		1092215	1					
ANR	1092418	IdentifierDeclStatement	st64 delta = dst - off ;	484:4:12228:12250	1092215	3	True				
ANR	1092419	IdentifierDecl	delta = dst - off		1092215	0					
ANR	1092420	IdentifierDeclType	st64		1092215	0					
ANR	1092421	Identifier	delta		1092215	1					
ANR	1092422	AssignmentExpression	delta = dst - off		1092215	2		=			
ANR	1092423	Identifier	delta		1092215	0					
ANR	1092424	AdditiveExpression	dst - off		1092215	1		-			
ANR	1092425	Identifier	dst		1092215	0					
ANR	1092426	Identifier	off		1092215	1					
ANR	1092427	IfStatement	if ( delta < 0 )		1092215	4					
ANR	1092428	Condition	delta < 0	485:8:12260:12268	1092215	0	True				
ANR	1092429	RelationalExpression	delta < 0		1092215	0		<			
ANR	1092430	Identifier	delta		1092215	0					
ANR	1092431	PrimaryExpression	0		1092215	1					
ANR	1092432	CompoundStatement		36:19:743:743	1092215	1					
ANR	1092433	ExpressionStatement	core -> num -> nc . curr_tok = '-'	486:5:12278:12306	1092215	0	True				
ANR	1092434	AssignmentExpression	core -> num -> nc . curr_tok = '-'		1092215	0		=			
ANR	1092435	MemberAccess	core -> num -> nc . curr_tok		1092215	0					
ANR	1092436	PtrMemberAccess	core -> num -> nc		1092215	0					
ANR	1092437	PtrMemberAccess	core -> num		1092215	0					
ANR	1092438	Identifier	core		1092215	0					
ANR	1092439	Identifier	num		1092215	1					
ANR	1092440	Identifier	nc		1092215	1					
ANR	1092441	Identifier	curr_tok		1092215	1					
ANR	1092442	PrimaryExpression	'-'		1092215	1					
ANR	1092443	ExpressionStatement	delta = off - dst	487:5:12313:12330	1092215	1	True				
ANR	1092444	AssignmentExpression	delta = off - dst		1092215	0		=			
ANR	1092445	Identifier	delta		1092215	0					
ANR	1092446	AdditiveExpression	off - dst		1092215	1		-			
ANR	1092447	Identifier	off		1092215	0					
ANR	1092448	Identifier	dst		1092215	1					
ANR	1092449	ReturnStatement	return delta ;	489:4:12342:12354	1092215	5	True				
ANR	1092450	Identifier	delta		1092215	0					
ANR	1092451	BreakStatement	break ;	492:2:12367:12372	1092215	3	True				
ANR	1092452	Label	case '[' :	493:1:12375:12383	1092215	4	True				
ANR	1092453	CompoundStatement		80:2:1499:1531	1092215	5					
ANR	1092454	Statement	ut64	495:2:12389:12392	1092215	0	True				
ANR	1092455	Statement	n	495:7:12394:12394	1092215	1	True				
ANR	1092456	Statement	=	495:9:12396:12396	1092215	2	True				
ANR	1092457	Statement	0L	495:11:12398:12399	1092215	3	True				
ANR	1092458	ExpressionStatement	L	495:13:12400:12401	1092215	4	True				
ANR	1092459	Identifier	L		1092215	0					
ANR	1092460	IdentifierDeclStatement	int refsz = core -> assembler -> bits / 8 ;	496:2:12405:12442	1092215	5	True				
ANR	1092461	IdentifierDecl	refsz = core -> assembler -> bits / 8		1092215	0					
ANR	1092462	IdentifierDeclType	int		1092215	0					
ANR	1092463	Identifier	refsz		1092215	1					
ANR	1092464	AssignmentExpression	refsz = core -> assembler -> bits / 8		1092215	2		=			
ANR	1092465	Identifier	refsz		1092215	0					
ANR	1092466	MultiplicativeExpression	core -> assembler -> bits / 8		1092215	1		/			
ANR	1092467	PtrMemberAccess	core -> assembler -> bits		1092215	0					
ANR	1092468	PtrMemberAccess	core -> assembler		1092215	0					
ANR	1092469	Identifier	core		1092215	0					
ANR	1092470	Identifier	assembler		1092215	1					
ANR	1092471	Identifier	bits		1092215	1					
ANR	1092472	PrimaryExpression	8		1092215	1					
ANR	1092473	IdentifierDeclStatement	const char * p = NULL ;	497:2:12446:12466	1092215	6	True				
ANR	1092474	IdentifierDecl	* p = NULL		1092215	0					
ANR	1092475	IdentifierDeclType	const char *		1092215	0					
ANR	1092476	Identifier	p		1092215	1					
ANR	1092477	AssignmentExpression	* p = NULL		1092215	2		=			
ANR	1092478	Identifier	NULL		1092215	0					
ANR	1092479	Identifier	NULL		1092215	1					
ANR	1092480	IfStatement	if ( strlen ( str ) > 5 )		1092215	7					
ANR	1092481	Condition	strlen ( str ) > 5	498:6:12474:12489	1092215	0	True				
ANR	1092482	RelationalExpression	strlen ( str ) > 5		1092215	0		>			
ANR	1092483	CallExpression	strlen ( str )		1092215	0					
ANR	1092484	Callee	strlen		1092215	0					
ANR	1092485	Identifier	strlen		1092215	0					
ANR	1092486	ArgumentList	str		1092215	1					
ANR	1092487	Argument	str		1092215	0					
ANR	1092488	Identifier	str		1092215	0					
ANR	1092489	PrimaryExpression	5		1092215	1					
ANR	1092490	CompoundStatement		49:24:964:964	1092215	1					
ANR	1092491	ExpressionStatement	"p = strchr ( str + 5 , ':' )"	499:3:12497:12522	1092215	0	True				
ANR	1092492	AssignmentExpression	"p = strchr ( str + 5 , ':' )"		1092215	0		=			
ANR	1092493	Identifier	p		1092215	0					
ANR	1092494	CallExpression	"strchr ( str + 5 , ':' )"		1092215	1					
ANR	1092495	Callee	strchr		1092215	0					
ANR	1092496	Identifier	strchr		1092215	0					
ANR	1092497	ArgumentList	str + 5		1092215	1					
ANR	1092498	Argument	str + 5		1092215	0					
ANR	1092499	AdditiveExpression	str + 5		1092215	0		+			
ANR	1092500	Identifier	str		1092215	0					
ANR	1092501	PrimaryExpression	5		1092215	1					
ANR	1092502	Argument	':'		1092215	1					
ANR	1092503	PrimaryExpression	':'		1092215	0					
ANR	1092504	IfStatement	if ( p )		1092215	8					
ANR	1092505	Condition	p	501:6:12534:12534	1092215	0	True				
ANR	1092506	Identifier	p		1092215	0					
ANR	1092507	CompoundStatement		52:9:1009:1009	1092215	1					
ANR	1092508	ExpressionStatement	refsz = atoi ( str + 1 )	502:3:12542:12564	1092215	0	True				
ANR	1092509	AssignmentExpression	refsz = atoi ( str + 1 )		1092215	0		=			
ANR	1092510	Identifier	refsz		1092215	0					
ANR	1092511	CallExpression	atoi ( str + 1 )		1092215	1					
ANR	1092512	Callee	atoi		1092215	0					
ANR	1092513	Identifier	atoi		1092215	0					
ANR	1092514	ArgumentList	str + 1		1092215	1					
ANR	1092515	Argument	str + 1		1092215	0					
ANR	1092516	AdditiveExpression	str + 1		1092215	0		+			
ANR	1092517	Identifier	str		1092215	0					
ANR	1092518	PrimaryExpression	1		1092215	1					
ANR	1092519	ExpressionStatement	str = p	503:3:12569:12576	1092215	1	True				
ANR	1092520	AssignmentExpression	str = p		1092215	0		=			
ANR	1092521	Identifier	str		1092215	0					
ANR	1092522	Identifier	p		1092215	1					
ANR	1092523	IfStatement	if ( str [ 0 ] && str [ 1 ] )		1092215	9					
ANR	1092524	Condition	str [ 0 ] && str [ 1 ]	506:6:12604:12619	1092215	0	True				
ANR	1092525	AndExpression	str [ 0 ] && str [ 1 ]		1092215	0		&&			
ANR	1092526	ArrayIndexing	str [ 0 ]		1092215	0					
ANR	1092527	Identifier	str		1092215	0					
ANR	1092528	PrimaryExpression	0		1092215	1					
ANR	1092529	ArrayIndexing	str [ 1 ]		1092215	1					
ANR	1092530	Identifier	str		1092215	0					
ANR	1092531	PrimaryExpression	1		1092215	1					
ANR	1092532	CompoundStatement		59:3:1117:1143	1092215	1					
ANR	1092533	IdentifierDeclStatement	const char * q ;	507:3:12627:12640	1092215	0	True				
ANR	1092534	IdentifierDecl	* q		1092215	0					
ANR	1092535	IdentifierDeclType	const char *		1092215	0					
ANR	1092536	Identifier	q		1092215	1					
ANR	1092537	IdentifierDeclStatement	char * o = strdup ( str + 1 ) ;	508:3:12645:12671	1092215	1	True				
ANR	1092538	IdentifierDecl	* o = strdup ( str + 1 )		1092215	0					
ANR	1092539	IdentifierDeclType	char *		1092215	0					
ANR	1092540	Identifier	o		1092215	1					
ANR	1092541	AssignmentExpression	* o = strdup ( str + 1 )		1092215	2		=			
ANR	1092542	Identifier	o		1092215	0					
ANR	1092543	CallExpression	strdup ( str + 1 )		1092215	1					
ANR	1092544	Callee	strdup		1092215	0					
ANR	1092545	Identifier	strdup		1092215	0					
ANR	1092546	ArgumentList	str + 1		1092215	1					
ANR	1092547	Argument	str + 1		1092215	0					
ANR	1092548	AdditiveExpression	str + 1		1092215	0		+			
ANR	1092549	Identifier	str		1092215	0					
ANR	1092550	PrimaryExpression	1		1092215	1					
ANR	1092551	IfStatement	if ( o )		1092215	2					
ANR	1092552	Condition	o	509:7:12680:12680	1092215	0	True				
ANR	1092553	Identifier	o		1092215	0					
ANR	1092554	CompoundStatement		60:10:1155:1155	1092215	1					
ANR	1092555	ExpressionStatement	"q = r_num_calc_index ( core -> num , NULL )"	510:4:12689:12727	1092215	0	True				
ANR	1092556	AssignmentExpression	"q = r_num_calc_index ( core -> num , NULL )"		1092215	0		=			
ANR	1092557	Identifier	q		1092215	0					
ANR	1092558	CallExpression	"r_num_calc_index ( core -> num , NULL )"		1092215	1					
ANR	1092559	Callee	r_num_calc_index		1092215	0					
ANR	1092560	Identifier	r_num_calc_index		1092215	0					
ANR	1092561	ArgumentList	core -> num		1092215	1					
ANR	1092562	Argument	core -> num		1092215	0					
ANR	1092563	PtrMemberAccess	core -> num		1092215	0					
ANR	1092564	Identifier	core		1092215	0					
ANR	1092565	Identifier	num		1092215	1					
ANR	1092566	Argument	NULL		1092215	1					
ANR	1092567	Identifier	NULL		1092215	0					
ANR	1092568	IfStatement	if ( q )		1092215	1					
ANR	1092569	Condition	q	511:8:12737:12737	1092215	0	True				
ANR	1092570	Identifier	q		1092215	0					
ANR	1092571	CompoundStatement		62:11:1212:1212	1092215	1					
ANR	1092572	IfStatement	"if ( r_str_replace_char ( o , ']' , 0 ) > 0 )"		1092215	0					
ANR	1092573	Condition	"r_str_replace_char ( o , ']' , 0 ) > 0"	512:9:12751:12782	1092215	0	True				
ANR	1092574	RelationalExpression	"r_str_replace_char ( o , ']' , 0 ) > 0"		1092215	0		>			
ANR	1092575	CallExpression	"r_str_replace_char ( o , ']' , 0 )"		1092215	0					
ANR	1092576	Callee	r_str_replace_char		1092215	0					
ANR	1092577	Identifier	r_str_replace_char		1092215	0					
ANR	1092578	ArgumentList	o		1092215	1					
ANR	1092579	Argument	o		1092215	0					
ANR	1092580	Identifier	o		1092215	0					
ANR	1092581	Argument	']'		1092215	1					
ANR	1092582	PrimaryExpression	']'		1092215	0					
ANR	1092583	Argument	0		1092215	2					
ANR	1092584	PrimaryExpression	0		1092215	0					
ANR	1092585	PrimaryExpression	0		1092215	1					
ANR	1092586	CompoundStatement		63:43:1257:1257	1092215	1					
ANR	1092587	ExpressionStatement	"n = r_num_math ( core -> num , o )"	513:6:12793:12822	1092215	0	True				
ANR	1092588	AssignmentExpression	"n = r_num_math ( core -> num , o )"		1092215	0		=			
ANR	1092589	Identifier	n		1092215	0					
ANR	1092590	CallExpression	"r_num_math ( core -> num , o )"		1092215	1					
ANR	1092591	Callee	r_num_math		1092215	0					
ANR	1092592	Identifier	r_num_math		1092215	0					
ANR	1092593	ArgumentList	core -> num		1092215	1					
ANR	1092594	Argument	core -> num		1092215	0					
ANR	1092595	PtrMemberAccess	core -> num		1092215	0					
ANR	1092596	Identifier	core		1092215	0					
ANR	1092597	Identifier	num		1092215	1					
ANR	1092598	Argument	o		1092215	1					
ANR	1092599	Identifier	o		1092215	0					
ANR	1092600	IfStatement	if ( core -> num -> nc . errors )		1092215	1					
ANR	1092601	Condition	core -> num -> nc . errors	514:10:12834:12853	1092215	0	True				
ANR	1092602	MemberAccess	core -> num -> nc . errors		1092215	0					
ANR	1092603	PtrMemberAccess	core -> num -> nc		1092215	0					
ANR	1092604	PtrMemberAccess	core -> num		1092215	0					
ANR	1092605	Identifier	core		1092215	0					
ANR	1092606	Identifier	num		1092215	1					
ANR	1092607	Identifier	nc		1092215	1					
ANR	1092608	Identifier	errors		1092215	1					
ANR	1092609	CompoundStatement		65:32:1328:1328	1092215	1					
ANR	1092610	ReturnStatement	return 0 ;	515:7:12865:12873	1092215	0	True				
ANR	1092611	PrimaryExpression	0		1092215	0					
ANR	1092612	ExpressionStatement	"r_num_calc_index ( core -> num , q )"	517:6:12889:12920	1092215	2	True				
ANR	1092613	CallExpression	"r_num_calc_index ( core -> num , q )"		1092215	0					
ANR	1092614	Callee	r_num_calc_index		1092215	0					
ANR	1092615	Identifier	r_num_calc_index		1092215	0					
ANR	1092616	ArgumentList	core -> num		1092215	1					
ANR	1092617	Argument	core -> num		1092215	0					
ANR	1092618	PtrMemberAccess	core -> num		1092215	0					
ANR	1092619	Identifier	core		1092215	0					
ANR	1092620	Identifier	num		1092215	1					
ANR	1092621	Argument	q		1092215	1					
ANR	1092622	Identifier	q		1092215	0					
ANR	1092623	ExpressionStatement	free ( o )	520:4:12939:12947	1092215	2	True				
ANR	1092624	CallExpression	free ( o )		1092215	0					
ANR	1092625	Callee	free		1092215	0					
ANR	1092626	Identifier	free		1092215	0					
ANR	1092627	ArgumentList	o		1092215	1					
ANR	1092628	Argument	o		1092215	0					
ANR	1092629	Identifier	o		1092215	0					
ANR	1092630	ElseStatement	else		1092215	0					
ANR	1092631	CompoundStatement		73:9:1435:1435	1092215	0					
ANR	1092632	ReturnStatement	return 0 ;	523:3:12968:12976	1092215	0	True				
ANR	1092633	PrimaryExpression	0		1092215	0					
ANR	1092634	IfStatement	if ( ok )		1092215	10					
ANR	1092635	Condition	ok	526:6:13003:13004	1092215	0	True				
ANR	1092636	Identifier	ok		1092215	0					
ANR	1092637	CompoundStatement		77:10:1479:1479	1092215	1					
ANR	1092638	ExpressionStatement	* ok = 1	527:3:13012:13019	1092215	0	True				
ANR	1092639	AssignmentExpression	* ok = 1		1092215	0		=			
ANR	1092640	UnaryOperationExpression	* ok		1092215	0					
ANR	1092641	UnaryOperator	*		1092215	0					
ANR	1092642	Identifier	ok		1092215	1					
ANR	1092643	PrimaryExpression	1		1092215	1					
ANR	1092644	IdentifierDeclStatement	ut8 buf [ sizeof ( ut64 ) ] = R_EMPTY ;	529:2:13027:13059	1092215	11	True				
ANR	1092645	IdentifierDecl	buf [ sizeof ( ut64 ) ] = R_EMPTY		1092215	0					
ANR	1092646	IdentifierDeclType	ut8 [ sizeof ( ut64 ) ]		1092215	0					
ANR	1092647	Identifier	buf		1092215	1					
ANR	1092648	SizeofExpression	sizeof ( ut64 )		1092215	2					
ANR	1092649	Sizeof	sizeof		1092215	0					
ANR	1092650	SizeofOperand	ut64		1092215	1					
ANR	1092651	AssignmentExpression	buf [ sizeof ( ut64 ) ] = R_EMPTY		1092215	3		=			
ANR	1092652	Identifier	R_EMPTY		1092215	0					
ANR	1092653	Identifier	R_EMPTY		1092215	1					
ANR	1092654	ExpressionStatement	"( void ) r_io_read_at ( core -> io , n , buf , R_MIN ( sizeof ( buf ) , refsz ) )"	530:2:13063:13129	1092215	12	True				
ANR	1092655	CastExpression	"( void ) r_io_read_at ( core -> io , n , buf , R_MIN ( sizeof ( buf ) , refsz ) )"		1092215	0					
ANR	1092656	CastTarget	void		1092215	0					
ANR	1092657	CallExpression	"r_io_read_at ( core -> io , n , buf , R_MIN ( sizeof ( buf ) , refsz ) )"		1092215	1					
ANR	1092658	Callee	r_io_read_at		1092215	0					
ANR	1092659	Identifier	r_io_read_at		1092215	0					
ANR	1092660	ArgumentList	core -> io		1092215	1					
ANR	1092661	Argument	core -> io		1092215	0					
ANR	1092662	PtrMemberAccess	core -> io		1092215	0					
ANR	1092663	Identifier	core		1092215	0					
ANR	1092664	Identifier	io		1092215	1					
ANR	1092665	Argument	n		1092215	1					
ANR	1092666	Identifier	n		1092215	0					
ANR	1092667	Argument	buf		1092215	2					
ANR	1092668	Identifier	buf		1092215	0					
ANR	1092669	Argument	"R_MIN ( sizeof ( buf ) , refsz )"		1092215	3					
ANR	1092670	CallExpression	"R_MIN ( sizeof ( buf ) , refsz )"		1092215	0					
ANR	1092671	Callee	R_MIN		1092215	0					
ANR	1092672	Identifier	R_MIN		1092215	0					
ANR	1092673	ArgumentList	sizeof ( buf )		1092215	1					
ANR	1092674	Argument	sizeof ( buf )		1092215	0					
ANR	1092675	SizeofExpression	sizeof ( buf )		1092215	0					
ANR	1092676	Sizeof	sizeof		1092215	0					
ANR	1092677	SizeofOperand	buf		1092215	1					
ANR	1092678	Argument	refsz		1092215	1					
ANR	1092679	Identifier	refsz		1092215	0					
ANR	1092680	SwitchStatement	switch ( refsz )		1092215	13					
ANR	1092681	Condition	refsz	531:10:13141:13145	1092215	0	True				
ANR	1092682	Identifier	refsz		1092215	0					
ANR	1092683	CompoundStatement		82:17:1620:1620	1092215	1					
ANR	1092684	Label	case 8 :	532:2:13152:13158	1092215	0	True				
ANR	1092685	ReturnStatement	"return r_read_ble64 ( buf , core -> print -> big_endian ) ;"	533:3:13163:13213	1092215	1	True				
ANR	1092686	CallExpression	"r_read_ble64 ( buf , core -> print -> big_endian )"		1092215	0					
ANR	1092687	Callee	r_read_ble64		1092215	0					
ANR	1092688	Identifier	r_read_ble64		1092215	0					
ANR	1092689	ArgumentList	buf		1092215	1					
ANR	1092690	Argument	buf		1092215	0					
ANR	1092691	Identifier	buf		1092215	0					
ANR	1092692	Argument	core -> print -> big_endian		1092215	1					
ANR	1092693	PtrMemberAccess	core -> print -> big_endian		1092215	0					
ANR	1092694	PtrMemberAccess	core -> print		1092215	0					
ANR	1092695	Identifier	core		1092215	0					
ANR	1092696	Identifier	print		1092215	1					
ANR	1092697	Identifier	big_endian		1092215	1					
ANR	1092698	Label	case 4 :	534:2:13217:13223	1092215	2	True				
ANR	1092699	ReturnStatement	"return r_read_ble32 ( buf , core -> print -> big_endian ) ;"	535:3:13228:13278	1092215	3	True				
ANR	1092700	CallExpression	"r_read_ble32 ( buf , core -> print -> big_endian )"		1092215	0					
ANR	1092701	Callee	r_read_ble32		1092215	0					
ANR	1092702	Identifier	r_read_ble32		1092215	0					
ANR	1092703	ArgumentList	buf		1092215	1					
ANR	1092704	Argument	buf		1092215	0					
ANR	1092705	Identifier	buf		1092215	0					
ANR	1092706	Argument	core -> print -> big_endian		1092215	1					
ANR	1092707	PtrMemberAccess	core -> print -> big_endian		1092215	0					
ANR	1092708	PtrMemberAccess	core -> print		1092215	0					
ANR	1092709	Identifier	core		1092215	0					
ANR	1092710	Identifier	print		1092215	1					
ANR	1092711	Identifier	big_endian		1092215	1					
ANR	1092712	Label	case 2 :	536:2:13282:13288	1092215	4	True				
ANR	1092713	ReturnStatement	"return r_read_ble16 ( buf , core -> print -> big_endian ) ;"	537:3:13293:13343	1092215	5	True				
ANR	1092714	CallExpression	"r_read_ble16 ( buf , core -> print -> big_endian )"		1092215	0					
ANR	1092715	Callee	r_read_ble16		1092215	0					
ANR	1092716	Identifier	r_read_ble16		1092215	0					
ANR	1092717	ArgumentList	buf		1092215	1					
ANR	1092718	Argument	buf		1092215	0					
ANR	1092719	Identifier	buf		1092215	0					
ANR	1092720	Argument	core -> print -> big_endian		1092215	1					
ANR	1092721	PtrMemberAccess	core -> print -> big_endian		1092215	0					
ANR	1092722	PtrMemberAccess	core -> print		1092215	0					
ANR	1092723	Identifier	core		1092215	0					
ANR	1092724	Identifier	print		1092215	1					
ANR	1092725	Identifier	big_endian		1092215	1					
ANR	1092726	Label	case 1 :	538:2:13347:13353	1092215	6	True				
ANR	1092727	ReturnStatement	return r_read_ble8 ( buf ) ;	539:3:13358:13382	1092215	7	True				
ANR	1092728	CallExpression	r_read_ble8 ( buf )		1092215	0					
ANR	1092729	Callee	r_read_ble8		1092215	0					
ANR	1092730	Identifier	r_read_ble8		1092215	0					
ANR	1092731	ArgumentList	buf		1092215	1					
ANR	1092732	Argument	buf		1092215	0					
ANR	1092733	Identifier	buf		1092215	0					
ANR	1092734	Label	default :	540:2:13386:13393	1092215	8	True				
ANR	1092735	Identifier	default		1092215	0					
ANR	1092736	ExpressionStatement	"eprintf ( ""Invalid reference size: %d (%s)\\n"" , refsz , str )"	541:3:13398:13455	1092215	9	True				
ANR	1092737	CallExpression	"eprintf ( ""Invalid reference size: %d (%s)\\n"" , refsz , str )"		1092215	0					
ANR	1092738	Callee	eprintf		1092215	0					
ANR	1092739	Identifier	eprintf		1092215	0					
ANR	1092740	ArgumentList	"""Invalid reference size: %d (%s)\\n"""		1092215	1					
ANR	1092741	Argument	"""Invalid reference size: %d (%s)\\n"""		1092215	0					
ANR	1092742	PrimaryExpression	"""Invalid reference size: %d (%s)\\n"""		1092215	0					
ANR	1092743	Argument	refsz		1092215	1					
ANR	1092744	Identifier	refsz		1092215	0					
ANR	1092745	Argument	str		1092215	2					
ANR	1092746	Identifier	str		1092215	0					
ANR	1092747	Statement	return	542:3:13460:13465	1092215	10	True				
ANR	1092748	Statement	0L	542:10:13467:13468	1092215	11	True				
ANR	1092749	ExpressionStatement	L	542:12:13469:13470	1092215	12	True				
ANR	1092750	Identifier	L		1092215	0					
ANR	1092751	BreakStatement	break ;	545:2:13480:13485	1092215	6	True				
ANR	1092752	Label	case '$' :	546:1:13488:13496	1092215	7	True				
ANR	1092753	IfStatement	if ( ok )		1092215	8					
ANR	1092754	Condition	ok	547:6:13504:13505	1092215	0	True				
ANR	1092755	Identifier	ok		1092215	0					
ANR	1092756	CompoundStatement		98:10:1980:1980	1092215	1					
ANR	1092757	ExpressionStatement	* ok = 1	548:3:13513:13520	1092215	0	True				
ANR	1092758	AssignmentExpression	* ok = 1		1092215	0		=			
ANR	1092759	UnaryOperationExpression	* ok		1092215	0					
ANR	1092760	UnaryOperator	*		1092215	0					
ANR	1092761	Identifier	ok		1092215	1					
ANR	1092762	PrimaryExpression	1		1092215	1					
ANR	1092763	ExpressionStatement	"r_anal_op ( core -> anal , & op , core -> offset , core -> block , core -> blocksize , R_ANAL_OP_MASK_BASIC )"	551:2:13597:13690	1092215	9	True				
ANR	1092764	CallExpression	"r_anal_op ( core -> anal , & op , core -> offset , core -> block , core -> blocksize , R_ANAL_OP_MASK_BASIC )"		1092215	0					
ANR	1092765	Callee	r_anal_op		1092215	0					
ANR	1092766	Identifier	r_anal_op		1092215	0					
ANR	1092767	ArgumentList	core -> anal		1092215	1					
ANR	1092768	Argument	core -> anal		1092215	0					
ANR	1092769	PtrMemberAccess	core -> anal		1092215	0					
ANR	1092770	Identifier	core		1092215	0					
ANR	1092771	Identifier	anal		1092215	1					
ANR	1092772	Argument	& op		1092215	1					
ANR	1092773	UnaryOperationExpression	& op		1092215	0					
ANR	1092774	UnaryOperator	&		1092215	0					
ANR	1092775	Identifier	op		1092215	1					
ANR	1092776	Argument	core -> offset		1092215	2					
ANR	1092777	PtrMemberAccess	core -> offset		1092215	0					
ANR	1092778	Identifier	core		1092215	0					
ANR	1092779	Identifier	offset		1092215	1					
ANR	1092780	Argument	core -> block		1092215	3					
ANR	1092781	PtrMemberAccess	core -> block		1092215	0					
ANR	1092782	Identifier	core		1092215	0					
ANR	1092783	Identifier	block		1092215	1					
ANR	1092784	Argument	core -> blocksize		1092215	4					
ANR	1092785	PtrMemberAccess	core -> blocksize		1092215	0					
ANR	1092786	Identifier	core		1092215	0					
ANR	1092787	Identifier	blocksize		1092215	1					
ANR	1092788	Argument	R_ANAL_OP_MASK_BASIC		1092215	5					
ANR	1092789	Identifier	R_ANAL_OP_MASK_BASIC		1092215	0					
ANR	1092790	ExpressionStatement	r_anal_op_fini ( & op )	552:2:13694:13714	1092215	10	True				
ANR	1092791	CallExpression	r_anal_op_fini ( & op )		1092215	0					
ANR	1092792	Callee	r_anal_op_fini		1092215	0					
ANR	1092793	Identifier	r_anal_op_fini		1092215	0					
ANR	1092794	ArgumentList	& op		1092215	1					
ANR	1092795	Argument	& op		1092215	0					
ANR	1092796	UnaryOperationExpression	& op		1092215	0					
ANR	1092797	UnaryOperator	&		1092215	0					
ANR	1092798	Identifier	op		1092215	1					
ANR	1092799	SwitchStatement	switch ( str [ 1 ] )		1092215	11					
ANR	1092800	Condition	str [ 1 ]	553:10:13809:13814	1092215	0	True				
ANR	1092801	ArrayIndexing	str [ 1 ]		1092215	0					
ANR	1092802	Identifier	str		1092215	0					
ANR	1092803	PrimaryExpression	1		1092215	1					
ANR	1092804	CompoundStatement		104:18:2289:2289	1092215	1					
ANR	1092805	Label	case '.' :	554:2:13821:13829	1092215	0	True				
ANR	1092806	ReturnStatement	"return r_debug_reg_get ( core -> dbg , str + 2 ) ;"	555:3:13865:13908	1092215	1	True				
ANR	1092807	CallExpression	"r_debug_reg_get ( core -> dbg , str + 2 )"		1092215	0					
ANR	1092808	Callee	r_debug_reg_get		1092215	0					
ANR	1092809	Identifier	r_debug_reg_get		1092215	0					
ANR	1092810	ArgumentList	core -> dbg		1092215	1					
ANR	1092811	Argument	core -> dbg		1092215	0					
ANR	1092812	PtrMemberAccess	core -> dbg		1092215	0					
ANR	1092813	Identifier	core		1092215	0					
ANR	1092814	Identifier	dbg		1092215	1					
ANR	1092815	Argument	str + 2		1092215	1					
ANR	1092816	AdditiveExpression	str + 2		1092215	0		+			
ANR	1092817	Identifier	str		1092215	0					
ANR	1092818	PrimaryExpression	2		1092215	1					
ANR	1092819	Label	case 'k' :	556:2:13912:13920	1092215	2	True				
ANR	1092820	IfStatement	if ( str [ 2 ] != '{' )		1092215	3					
ANR	1092821	Condition	str [ 2 ] != '{'	557:7:13939:13951	1092215	0	True				
ANR	1092822	EqualityExpression	str [ 2 ] != '{'		1092215	0		!=			
ANR	1092823	ArrayIndexing	str [ 2 ]		1092215	0					
ANR	1092824	Identifier	str		1092215	0					
ANR	1092825	PrimaryExpression	2		1092215	1					
ANR	1092826	PrimaryExpression	'{'		1092215	1					
ANR	1092827	CompoundStatement		108:22:2426:2426	1092215	1					
ANR	1092828	ExpressionStatement	"eprintf ( ""Expected '{' after 'k'.\\n"" )"	558:4:13960:13997	1092215	0	True				
ANR	1092829	CallExpression	"eprintf ( ""Expected '{' after 'k'.\\n"" )"		1092215	0					
ANR	1092830	Callee	eprintf		1092215	0					
ANR	1092831	Identifier	eprintf		1092215	0					
ANR	1092832	ArgumentList	"""Expected '{' after 'k'.\\n"""		1092215	1					
ANR	1092833	Argument	"""Expected '{' after 'k'.\\n"""		1092215	0					
ANR	1092834	PrimaryExpression	"""Expected '{' after 'k'.\\n"""		1092215	0					
ANR	1092835	BreakStatement	break ;	559:4:14003:14008	1092215	1	True				
ANR	1092836	ExpressionStatement	bptr = strdup ( str + 3 )	561:3:14018:14041	1092215	4	True				
ANR	1092837	AssignmentExpression	bptr = strdup ( str + 3 )		1092215	0		=			
ANR	1092838	Identifier	bptr		1092215	0					
ANR	1092839	CallExpression	strdup ( str + 3 )		1092215	1					
ANR	1092840	Callee	strdup		1092215	0					
ANR	1092841	Identifier	strdup		1092215	0					
ANR	1092842	ArgumentList	str + 3		1092215	1					
ANR	1092843	Argument	str + 3		1092215	0					
ANR	1092844	AdditiveExpression	str + 3		1092215	0		+			
ANR	1092845	Identifier	str		1092215	0					
ANR	1092846	PrimaryExpression	3		1092215	1					
ANR	1092847	ExpressionStatement	"ptr = strchr ( bptr , '}' )"	562:3:14046:14070	1092215	5	True				
ANR	1092848	AssignmentExpression	"ptr = strchr ( bptr , '}' )"		1092215	0		=			
ANR	1092849	Identifier	ptr		1092215	0					
ANR	1092850	CallExpression	"strchr ( bptr , '}' )"		1092215	1					
ANR	1092851	Callee	strchr		1092215	0					
ANR	1092852	Identifier	strchr		1092215	0					
ANR	1092853	ArgumentList	bptr		1092215	1					
ANR	1092854	Argument	bptr		1092215	0					
ANR	1092855	Identifier	bptr		1092215	0					
ANR	1092856	Argument	'}'		1092215	1					
ANR	1092857	PrimaryExpression	'}'		1092215	0					
ANR	1092858	IfStatement	if ( ! ptr )		1092215	6					
ANR	1092859	Condition	! ptr	563:7:14079:14082	1092215	0	True				
ANR	1092860	UnaryOperationExpression	! ptr		1092215	0					
ANR	1092861	UnaryOperator	!		1092215	0					
ANR	1092862	Identifier	ptr		1092215	1					
ANR	1092863	CompoundStatement		114:13:2557:2557	1092215	1					
ANR	1092864	ExpressionStatement	free ( bptr )	565:4:14111:14122	1092215	0	True				
ANR	1092865	CallExpression	free ( bptr )		1092215	0					
ANR	1092866	Callee	free		1092215	0					
ANR	1092867	Identifier	free		1092215	0					
ANR	1092868	ArgumentList	bptr		1092215	1					
ANR	1092869	Argument	bptr		1092215	0					
ANR	1092870	Identifier	bptr		1092215	0					
ANR	1092871	BreakStatement	break ;	566:4:14128:14133	1092215	1	True				
ANR	1092872	ExpressionStatement	* ptr = '\\0'	568:3:14143:14154	1092215	7	True				
ANR	1092873	AssignmentExpression	* ptr = '\\0'		1092215	0		=			
ANR	1092874	UnaryOperationExpression	* ptr		1092215	0					
ANR	1092875	UnaryOperator	*		1092215	0					
ANR	1092876	Identifier	ptr		1092215	1					
ANR	1092877	PrimaryExpression	'\\0'		1092215	1					
ANR	1092878	Statement	ret	569:3:14159:14161	1092215	8	True				
ANR	1092879	Statement	=	569:7:14163:14163	1092215	9	True				
ANR	1092880	Statement	0L	569:9:14165:14166	1092215	10	True				
ANR	1092881	ExpressionStatement	L	569:11:14167:14168	1092215	11	True				
ANR	1092882	Identifier	L		1092215	0					
ANR	1092883	ExpressionStatement	"out = sdb_querys ( core -> sdb , NULL , 0 , bptr )"	570:3:14173:14216	1092215	12	True				
ANR	1092884	AssignmentExpression	"out = sdb_querys ( core -> sdb , NULL , 0 , bptr )"		1092215	0		=			
ANR	1092885	Identifier	out		1092215	0					
ANR	1092886	CallExpression	"sdb_querys ( core -> sdb , NULL , 0 , bptr )"		1092215	1					
ANR	1092887	Callee	sdb_querys		1092215	0					
ANR	1092888	Identifier	sdb_querys		1092215	0					
ANR	1092889	ArgumentList	core -> sdb		1092215	1					
ANR	1092890	Argument	core -> sdb		1092215	0					
ANR	1092891	PtrMemberAccess	core -> sdb		1092215	0					
ANR	1092892	Identifier	core		1092215	0					
ANR	1092893	Identifier	sdb		1092215	1					
ANR	1092894	Argument	NULL		1092215	1					
ANR	1092895	Identifier	NULL		1092215	0					
ANR	1092896	Argument	0		1092215	2					
ANR	1092897	PrimaryExpression	0		1092215	0					
ANR	1092898	Argument	bptr		1092215	3					
ANR	1092899	Identifier	bptr		1092215	0					
ANR	1092900	IfStatement	if ( out && * out )		1092215	13					
ANR	1092901	Condition	out && * out	571:7:14225:14235	1092215	0	True				
ANR	1092902	AndExpression	out && * out		1092215	0		&&			
ANR	1092903	Identifier	out		1092215	0					
ANR	1092904	UnaryOperationExpression	* out		1092215	1					
ANR	1092905	UnaryOperator	*		1092215	0					
ANR	1092906	Identifier	out		1092215	1					
ANR	1092907	CompoundStatement		122:20:2710:2710	1092215	1					
ANR	1092908	IfStatement	"if ( strstr ( out , ""$k{"" ) )"		1092215	0					
ANR	1092909	Condition	"strstr ( out , ""$k{"" )"	572:8:14248:14266	1092215	0	True				
ANR	1092910	CallExpression	"strstr ( out , ""$k{"" )"		1092215	0					
ANR	1092911	Callee	strstr		1092215	0					
ANR	1092912	Identifier	strstr		1092215	0					
ANR	1092913	ArgumentList	out		1092215	1					
ANR	1092914	Argument	out		1092215	0					
ANR	1092915	Identifier	out		1092215	0					
ANR	1092916	Argument	"""$k{"""		1092215	1					
ANR	1092917	PrimaryExpression	"""$k{"""		1092215	0					
ANR	1092918	CompoundStatement		123:29:2741:2741	1092215	1					
ANR	1092919	ExpressionStatement	"eprintf ( ""Recursivity is not permitted here\\n"" )"	573:5:14276:14323	1092215	0	True				
ANR	1092920	CallExpression	"eprintf ( ""Recursivity is not permitted here\\n"" )"		1092215	0					
ANR	1092921	Callee	eprintf		1092215	0					
ANR	1092922	Identifier	eprintf		1092215	0					
ANR	1092923	ArgumentList	"""Recursivity is not permitted here\\n"""		1092215	1					
ANR	1092924	Argument	"""Recursivity is not permitted here\\n"""		1092215	0					
ANR	1092925	PrimaryExpression	"""Recursivity is not permitted here\\n"""		1092215	0					
ANR	1092926	ElseStatement	else		1092215	0					
ANR	1092927	CompoundStatement		125:11:2808:2808	1092215	0					
ANR	1092928	ExpressionStatement	"ret = r_num_math ( core -> num , out )"	575:5:14343:14376	1092215	0	True				
ANR	1092929	AssignmentExpression	"ret = r_num_math ( core -> num , out )"		1092215	0		=			
ANR	1092930	Identifier	ret		1092215	0					
ANR	1092931	CallExpression	"r_num_math ( core -> num , out )"		1092215	1					
ANR	1092932	Callee	r_num_math		1092215	0					
ANR	1092933	Identifier	r_num_math		1092215	0					
ANR	1092934	ArgumentList	core -> num		1092215	1					
ANR	1092935	Argument	core -> num		1092215	0					
ANR	1092936	PtrMemberAccess	core -> num		1092215	0					
ANR	1092937	Identifier	core		1092215	0					
ANR	1092938	Identifier	num		1092215	1					
ANR	1092939	Argument	out		1092215	1					
ANR	1092940	Identifier	out		1092215	0					
ANR	1092941	ExpressionStatement	free ( bptr )	578:3:14392:14403	1092215	14	True				
ANR	1092942	CallExpression	free ( bptr )		1092215	0					
ANR	1092943	Callee	free		1092215	0					
ANR	1092944	Identifier	free		1092215	0					
ANR	1092945	ArgumentList	bptr		1092215	1					
ANR	1092946	Argument	bptr		1092215	0					
ANR	1092947	Identifier	bptr		1092215	0					
ANR	1092948	ExpressionStatement	free ( out )	579:3:14408:14418	1092215	15	True				
ANR	1092949	CallExpression	free ( out )		1092215	0					
ANR	1092950	Callee	free		1092215	0					
ANR	1092951	Identifier	free		1092215	0					
ANR	1092952	ArgumentList	out		1092215	1					
ANR	1092953	Argument	out		1092215	0					
ANR	1092954	Identifier	out		1092215	0					
ANR	1092955	ReturnStatement	return ret ;	580:3:14423:14433	1092215	16	True				
ANR	1092956	Identifier	ret		1092215	0					
ANR	1092957	BreakStatement	break ;	581:3:14438:14443	1092215	17	True				
ANR	1092958	Label	case '{' :	582:2:14447:14455	1092215	18	True				
ANR	1092959	ExpressionStatement	bptr = strdup ( str + 2 )	583:3:14478:14501	1092215	19	True				
ANR	1092960	AssignmentExpression	bptr = strdup ( str + 2 )		1092215	0		=			
ANR	1092961	Identifier	bptr		1092215	0					
ANR	1092962	CallExpression	strdup ( str + 2 )		1092215	1					
ANR	1092963	Callee	strdup		1092215	0					
ANR	1092964	Identifier	strdup		1092215	0					
ANR	1092965	ArgumentList	str + 2		1092215	1					
ANR	1092966	Argument	str + 2		1092215	0					
ANR	1092967	AdditiveExpression	str + 2		1092215	0		+			
ANR	1092968	Identifier	str		1092215	0					
ANR	1092969	PrimaryExpression	2		1092215	1					
ANR	1092970	ExpressionStatement	"ptr = strchr ( bptr , '}' )"	584:3:14506:14530	1092215	20	True				
ANR	1092971	AssignmentExpression	"ptr = strchr ( bptr , '}' )"		1092215	0		=			
ANR	1092972	Identifier	ptr		1092215	0					
ANR	1092973	CallExpression	"strchr ( bptr , '}' )"		1092215	1					
ANR	1092974	Callee	strchr		1092215	0					
ANR	1092975	Identifier	strchr		1092215	0					
ANR	1092976	ArgumentList	bptr		1092215	1					
ANR	1092977	Argument	bptr		1092215	0					
ANR	1092978	Identifier	bptr		1092215	0					
ANR	1092979	Argument	'}'		1092215	1					
ANR	1092980	PrimaryExpression	'}'		1092215	0					
ANR	1092981	IfStatement	if ( ptr )		1092215	21					
ANR	1092982	Condition	ptr	585:7:14539:14541	1092215	0	True				
ANR	1092983	Identifier	ptr		1092215	0					
ANR	1092984	CompoundStatement		138:4:3041:3087	1092215	1					
ANR	1092985	ExpressionStatement	ptr [ 0 ] = '\\0'	586:4:14550:14563	1092215	0	True				
ANR	1092986	AssignmentExpression	ptr [ 0 ] = '\\0'		1092215	0		=			
ANR	1092987	ArrayIndexing	ptr [ 0 ]		1092215	0					
ANR	1092988	Identifier	ptr		1092215	0					
ANR	1092989	PrimaryExpression	0		1092215	1					
ANR	1092990	PrimaryExpression	'\\0'		1092215	1					
ANR	1092991	IdentifierDeclStatement	"ut64 ret = r_config_get_i ( core -> config , bptr ) ;"	587:4:14569:14615	1092215	1	True				
ANR	1092992	IdentifierDecl	"ret = r_config_get_i ( core -> config , bptr )"		1092215	0					
ANR	1092993	IdentifierDeclType	ut64		1092215	0					
ANR	1092994	Identifier	ret		1092215	1					
ANR	1092995	AssignmentExpression	"ret = r_config_get_i ( core -> config , bptr )"		1092215	2		=			
ANR	1092996	Identifier	ret		1092215	0					
ANR	1092997	CallExpression	"r_config_get_i ( core -> config , bptr )"		1092215	1					
ANR	1092998	Callee	r_config_get_i		1092215	0					
ANR	1092999	Identifier	r_config_get_i		1092215	0					
ANR	1093000	ArgumentList	core -> config		1092215	1					
ANR	1093001	Argument	core -> config		1092215	0					
ANR	1093002	PtrMemberAccess	core -> config		1092215	0					
ANR	1093003	Identifier	core		1092215	0					
ANR	1093004	Identifier	config		1092215	1					
ANR	1093005	Argument	bptr		1092215	1					
ANR	1093006	Identifier	bptr		1092215	0					
ANR	1093007	ExpressionStatement	free ( bptr )	588:4:14621:14632	1092215	2	True				
ANR	1093008	CallExpression	free ( bptr )		1092215	0					
ANR	1093009	Callee	free		1092215	0					
ANR	1093010	Identifier	free		1092215	0					
ANR	1093011	ArgumentList	bptr		1092215	1					
ANR	1093012	Argument	bptr		1092215	0					
ANR	1093013	Identifier	bptr		1092215	0					
ANR	1093014	ReturnStatement	return ret ;	589:4:14638:14648	1092215	3	True				
ANR	1093015	Identifier	ret		1092215	0					
ANR	1093016	ExpressionStatement	free ( bptr )	592:3:14679:14690	1092215	22	True				
ANR	1093017	CallExpression	free ( bptr )		1092215	0					
ANR	1093018	Callee	free		1092215	0					
ANR	1093019	Identifier	free		1092215	0					
ANR	1093020	ArgumentList	bptr		1092215	1					
ANR	1093021	Argument	bptr		1092215	0					
ANR	1093022	Identifier	bptr		1092215	0					
ANR	1093023	BreakStatement	break ;	593:3:14695:14700	1092215	23	True				
ANR	1093024	Label	case 'c' :	594:2:14704:14712	1092215	24	True				
ANR	1093025	ReturnStatement	return r_cons_get_size ( NULL ) ;	595:3:14737:14766	1092215	25	True				
ANR	1093026	CallExpression	r_cons_get_size ( NULL )		1092215	0					
ANR	1093027	Callee	r_cons_get_size		1092215	0					
ANR	1093028	Identifier	r_cons_get_size		1092215	0					
ANR	1093029	ArgumentList	NULL		1092215	1					
ANR	1093030	Argument	NULL		1092215	0					
ANR	1093031	Identifier	NULL		1092215	0					
ANR	1093032	Label	case 'r' :	596:2:14770:14778	1092215	26	True				
ANR	1093033	IfStatement	if ( str [ 2 ] == '{' )		1092215	27					
ANR	1093034	Condition	str [ 2 ] == '{'	597:7:14793:14805	1092215	0	True				
ANR	1093035	EqualityExpression	str [ 2 ] == '{'		1092215	0		==			
ANR	1093036	ArrayIndexing	str [ 2 ]		1092215	0					
ANR	1093037	Identifier	str		1092215	0					
ANR	1093038	PrimaryExpression	2		1092215	1					
ANR	1093039	PrimaryExpression	'{'		1092215	1					
ANR	1093040	CompoundStatement		148:22:3280:3280	1092215	1					
ANR	1093041	ExpressionStatement	bptr = strdup ( str + 3 )	598:4:14814:14837	1092215	0	True				
ANR	1093042	AssignmentExpression	bptr = strdup ( str + 3 )		1092215	0		=			
ANR	1093043	Identifier	bptr		1092215	0					
ANR	1093044	CallExpression	strdup ( str + 3 )		1092215	1					
ANR	1093045	Callee	strdup		1092215	0					
ANR	1093046	Identifier	strdup		1092215	0					
ANR	1093047	ArgumentList	str + 3		1092215	1					
ANR	1093048	Argument	str + 3		1092215	0					
ANR	1093049	AdditiveExpression	str + 3		1092215	0		+			
ANR	1093050	Identifier	str		1092215	0					
ANR	1093051	PrimaryExpression	3		1092215	1					
ANR	1093052	ExpressionStatement	"ptr = strchr ( bptr , '}' )"	599:4:14843:14867	1092215	1	True				
ANR	1093053	AssignmentExpression	"ptr = strchr ( bptr , '}' )"		1092215	0		=			
ANR	1093054	Identifier	ptr		1092215	0					
ANR	1093055	CallExpression	"strchr ( bptr , '}' )"		1092215	1					
ANR	1093056	Callee	strchr		1092215	0					
ANR	1093057	Identifier	strchr		1092215	0					
ANR	1093058	ArgumentList	bptr		1092215	1					
ANR	1093059	Argument	bptr		1092215	0					
ANR	1093060	Identifier	bptr		1092215	0					
ANR	1093061	Argument	'}'		1092215	1					
ANR	1093062	PrimaryExpression	'}'		1092215	0					
ANR	1093063	IfStatement	if ( ! ptr )		1092215	2					
ANR	1093064	Condition	! ptr	600:8:14877:14880	1092215	0	True				
ANR	1093065	UnaryOperationExpression	! ptr		1092215	0					
ANR	1093066	UnaryOperator	!		1092215	0					
ANR	1093067	Identifier	ptr		1092215	1					
ANR	1093068	CompoundStatement		151:14:3355:3355	1092215	1					
ANR	1093069	ExpressionStatement	free ( bptr )	601:5:14890:14901	1092215	0	True				
ANR	1093070	CallExpression	free ( bptr )		1092215	0					
ANR	1093071	Callee	free		1092215	0					
ANR	1093072	Identifier	free		1092215	0					
ANR	1093073	ArgumentList	bptr		1092215	1					
ANR	1093074	Argument	bptr		1092215	0					
ANR	1093075	Identifier	bptr		1092215	0					
ANR	1093076	BreakStatement	break ;	602:5:14908:14913	1092215	1	True				
ANR	1093077	ExpressionStatement	* ptr = 0	604:4:14925:14933	1092215	3	True				
ANR	1093078	AssignmentExpression	* ptr = 0		1092215	0		=			
ANR	1093079	UnaryOperationExpression	* ptr		1092215	0					
ANR	1093080	UnaryOperator	*		1092215	0					
ANR	1093081	Identifier	ptr		1092215	1					
ANR	1093082	PrimaryExpression	0		1092215	1					
ANR	1093083	IfStatement	"if ( r_config_get_i ( core -> config , ""cfg.debug"" ) )"		1092215	4					
ANR	1093084	Condition	"r_config_get_i ( core -> config , ""cfg.debug"" )"	605:8:14943:14984	1092215	0	True				
ANR	1093085	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		1092215	0					
ANR	1093086	Callee	r_config_get_i		1092215	0					
ANR	1093087	Identifier	r_config_get_i		1092215	0					
ANR	1093088	ArgumentList	core -> config		1092215	1					
ANR	1093089	Argument	core -> config		1092215	0					
ANR	1093090	PtrMemberAccess	core -> config		1092215	0					
ANR	1093091	Identifier	core		1092215	0					
ANR	1093092	Identifier	config		1092215	1					
ANR	1093093	Argument	"""cfg.debug"""		1092215	1					
ANR	1093094	PrimaryExpression	"""cfg.debug"""		1092215	0					
ANR	1093095	CompoundStatement		156:52:3459:3459	1092215	1					
ANR	1093096	IfStatement	"if ( r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false ) )"		1092215	0					
ANR	1093097	Condition	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	606:9:14998:15048	1092215	0	True				
ANR	1093098	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		1092215	0					
ANR	1093099	Callee	r_debug_reg_sync		1092215	0					
ANR	1093100	Identifier	r_debug_reg_sync		1092215	0					
ANR	1093101	ArgumentList	core -> dbg		1092215	1					
ANR	1093102	Argument	core -> dbg		1092215	0					
ANR	1093103	PtrMemberAccess	core -> dbg		1092215	0					
ANR	1093104	Identifier	core		1092215	0					
ANR	1093105	Identifier	dbg		1092215	1					
ANR	1093106	Argument	R_REG_TYPE_GPR		1092215	1					
ANR	1093107	Identifier	R_REG_TYPE_GPR		1092215	0					
ANR	1093108	Argument	false		1092215	2					
ANR	1093109	Identifier	false		1092215	0					
ANR	1093110	CompoundStatement		158:6:3531:3581	1092215	1					
ANR	1093111	IdentifierDeclStatement	"RRegItem * r = r_reg_get ( core -> dbg -> reg , bptr , - 1 ) ;"	607:6:15059:15109	1092215	0	True				
ANR	1093112	IdentifierDecl	"* r = r_reg_get ( core -> dbg -> reg , bptr , - 1 )"		1092215	0					
ANR	1093113	IdentifierDeclType	RRegItem *		1092215	0					
ANR	1093114	Identifier	r		1092215	1					
ANR	1093115	AssignmentExpression	"* r = r_reg_get ( core -> dbg -> reg , bptr , - 1 )"		1092215	2		=			
ANR	1093116	Identifier	r		1092215	0					
ANR	1093117	CallExpression	"r_reg_get ( core -> dbg -> reg , bptr , - 1 )"		1092215	1					
ANR	1093118	Callee	r_reg_get		1092215	0					
ANR	1093119	Identifier	r_reg_get		1092215	0					
ANR	1093120	ArgumentList	core -> dbg -> reg		1092215	1					
ANR	1093121	Argument	core -> dbg -> reg		1092215	0					
ANR	1093122	PtrMemberAccess	core -> dbg -> reg		1092215	0					
ANR	1093123	PtrMemberAccess	core -> dbg		1092215	0					
ANR	1093124	Identifier	core		1092215	0					
ANR	1093125	Identifier	dbg		1092215	1					
ANR	1093126	Identifier	reg		1092215	1					
ANR	1093127	Argument	bptr		1092215	1					
ANR	1093128	Identifier	bptr		1092215	0					
ANR	1093129	Argument	- 1		1092215	2					
ANR	1093130	UnaryOperationExpression	- 1		1092215	0					
ANR	1093131	UnaryOperator	-		1092215	0					
ANR	1093132	PrimaryExpression	1		1092215	1					
ANR	1093133	IfStatement	if ( r )		1092215	1					
ANR	1093134	Condition	r	608:10:15121:15121	1092215	0	True				
ANR	1093135	Identifier	r		1092215	0					
ANR	1093136	CompoundStatement		159:13:3596:3596	1092215	1					
ANR	1093137	ExpressionStatement	free ( bptr )	609:7:15133:15144	1092215	0	True				
ANR	1093138	CallExpression	free ( bptr )		1092215	0					
ANR	1093139	Callee	free		1092215	0					
ANR	1093140	Identifier	free		1092215	0					
ANR	1093141	ArgumentList	bptr		1092215	1					
ANR	1093142	Argument	bptr		1092215	0					
ANR	1093143	Identifier	bptr		1092215	0					
ANR	1093144	ReturnStatement	"return r_reg_get_value ( core -> dbg -> reg , r ) ;"	610:7:15153:15195	1092215	1	True				
ANR	1093145	CallExpression	"r_reg_get_value ( core -> dbg -> reg , r )"		1092215	0					
ANR	1093146	Callee	r_reg_get_value		1092215	0					
ANR	1093147	Identifier	r_reg_get_value		1092215	0					
ANR	1093148	ArgumentList	core -> dbg -> reg		1092215	1					
ANR	1093149	Argument	core -> dbg -> reg		1092215	0					
ANR	1093150	PtrMemberAccess	core -> dbg -> reg		1092215	0					
ANR	1093151	PtrMemberAccess	core -> dbg		1092215	0					
ANR	1093152	Identifier	core		1092215	0					
ANR	1093153	Identifier	dbg		1092215	1					
ANR	1093154	Identifier	reg		1092215	1					
ANR	1093155	Argument	r		1092215	1					
ANR	1093156	Identifier	r		1092215	0					
ANR	1093157	ElseStatement	else		1092215	0					
ANR	1093158	CompoundStatement		165:5:3702:3753	1092215	0					
ANR	1093159	IdentifierDeclStatement	"RRegItem * r = r_reg_get ( core -> anal -> reg , bptr , - 1 ) ;"	614:5:15230:15281	1092215	0	True				
ANR	1093160	IdentifierDecl	"* r = r_reg_get ( core -> anal -> reg , bptr , - 1 )"		1092215	0					
ANR	1093161	IdentifierDeclType	RRegItem *		1092215	0					
ANR	1093162	Identifier	r		1092215	1					
ANR	1093163	AssignmentExpression	"* r = r_reg_get ( core -> anal -> reg , bptr , - 1 )"		1092215	2		=			
ANR	1093164	Identifier	r		1092215	0					
ANR	1093165	CallExpression	"r_reg_get ( core -> anal -> reg , bptr , - 1 )"		1092215	1					
ANR	1093166	Callee	r_reg_get		1092215	0					
ANR	1093167	Identifier	r_reg_get		1092215	0					
ANR	1093168	ArgumentList	core -> anal -> reg		1092215	1					
ANR	1093169	Argument	core -> anal -> reg		1092215	0					
ANR	1093170	PtrMemberAccess	core -> anal -> reg		1092215	0					
ANR	1093171	PtrMemberAccess	core -> anal		1092215	0					
ANR	1093172	Identifier	core		1092215	0					
ANR	1093173	Identifier	anal		1092215	1					
ANR	1093174	Identifier	reg		1092215	1					
ANR	1093175	Argument	bptr		1092215	1					
ANR	1093176	Identifier	bptr		1092215	0					
ANR	1093177	Argument	- 1		1092215	2					
ANR	1093178	UnaryOperationExpression	- 1		1092215	0					
ANR	1093179	UnaryOperator	-		1092215	0					
ANR	1093180	PrimaryExpression	1		1092215	1					
ANR	1093181	IfStatement	if ( r )		1092215	1					
ANR	1093182	Condition	r	615:9:15292:15292	1092215	0	True				
ANR	1093183	Identifier	r		1092215	0					
ANR	1093184	CompoundStatement		166:12:3767:3767	1092215	1					
ANR	1093185	ExpressionStatement	free ( bptr )	616:6:15303:15314	1092215	0	True				
ANR	1093186	CallExpression	free ( bptr )		1092215	0					
ANR	1093187	Callee	free		1092215	0					
ANR	1093188	Identifier	free		1092215	0					
ANR	1093189	ArgumentList	bptr		1092215	1					
ANR	1093190	Argument	bptr		1092215	0					
ANR	1093191	Identifier	bptr		1092215	0					
ANR	1093192	ReturnStatement	"return r_reg_get_value ( core -> anal -> reg , r ) ;"	617:6:15322:15365	1092215	1	True				
ANR	1093193	CallExpression	"r_reg_get_value ( core -> anal -> reg , r )"		1092215	0					
ANR	1093194	Callee	r_reg_get_value		1092215	0					
ANR	1093195	Identifier	r_reg_get_value		1092215	0					
ANR	1093196	ArgumentList	core -> anal -> reg		1092215	1					
ANR	1093197	Argument	core -> anal -> reg		1092215	0					
ANR	1093198	PtrMemberAccess	core -> anal -> reg		1092215	0					
ANR	1093199	PtrMemberAccess	core -> anal		1092215	0					
ANR	1093200	Identifier	core		1092215	0					
ANR	1093201	Identifier	anal		1092215	1					
ANR	1093202	Identifier	reg		1092215	1					
ANR	1093203	Argument	r		1092215	1					
ANR	1093204	Identifier	r		1092215	0					
ANR	1093205	ExpressionStatement	free ( bptr )	620:4:15384:15395	1092215	5	True				
ANR	1093206	CallExpression	free ( bptr )		1092215	0					
ANR	1093207	Callee	free		1092215	0					
ANR	1093208	Identifier	free		1092215	0					
ANR	1093209	ArgumentList	bptr		1092215	1					
ANR	1093210	Argument	bptr		1092215	0					
ANR	1093211	Identifier	bptr		1092215	0					
ANR	1093212	ReturnStatement	return 0 ;	621:4:15401:15409	1092215	6	True				
ANR	1093213	PrimaryExpression	0		1092215	0					
ANR	1093214	ElseStatement	else		1092215	0					
ANR	1093215	CompoundStatement		174:4:3912:3920	1092215	0					
ANR	1093216	IdentifierDeclStatement	int rows ;	623:4:15440:15448	1092215	0	True				
ANR	1093217	IdentifierDecl	rows		1092215	0					
ANR	1093218	IdentifierDeclType	int		1092215	0					
ANR	1093219	Identifier	rows		1092215	1					
ANR	1093220	ExpressionStatement	( void ) r_cons_get_size ( & rows )	624:4:15454:15483	1092215	1	True				
ANR	1093221	CastExpression	( void ) r_cons_get_size ( & rows )		1092215	0					
ANR	1093222	CastTarget	void		1092215	0					
ANR	1093223	CallExpression	r_cons_get_size ( & rows )		1092215	1					
ANR	1093224	Callee	r_cons_get_size		1092215	0					
ANR	1093225	Identifier	r_cons_get_size		1092215	0					
ANR	1093226	ArgumentList	& rows		1092215	1					
ANR	1093227	Argument	& rows		1092215	0					
ANR	1093228	UnaryOperationExpression	& rows		1092215	0					
ANR	1093229	UnaryOperator	&		1092215	0					
ANR	1093230	Identifier	rows		1092215	1					
ANR	1093231	ReturnStatement	return rows ;	625:4:15489:15500	1092215	2	True				
ANR	1093232	Identifier	rows		1092215	0					
ANR	1093233	BreakStatement	break ;	627:3:15510:15515	1092215	28	True				
ANR	1093234	Label	case 'e' :	628:2:15519:15527	1092215	29	True				
ANR	1093235	IfStatement	if ( str [ 2 ] == '{' )		1092215	30					
ANR	1093236	Condition	str [ 2 ] == '{'	629:7:15542:15554	1092215	0	True				
ANR	1093237	EqualityExpression	str [ 2 ] == '{'		1092215	0		==			
ANR	1093238	ArrayIndexing	str [ 2 ]		1092215	0					
ANR	1093239	Identifier	str		1092215	0					
ANR	1093240	PrimaryExpression	2		1092215	1					
ANR	1093241	PrimaryExpression	'{'		1092215	1					
ANR	1093242	CompoundStatement		186:4:4209:4261	1092215	1					
ANR	1093243	IdentifierDeclStatement	char * flagName = strdup ( str + 3 ) ;	630:4:15591:15624	1092215	0	True				
ANR	1093244	IdentifierDecl	* flagName = strdup ( str + 3 )		1092215	0					
ANR	1093245	IdentifierDeclType	char *		1092215	0					
ANR	1093246	Identifier	flagName		1092215	1					
ANR	1093247	AssignmentExpression	* flagName = strdup ( str + 3 )		1092215	2		=			
ANR	1093248	Identifier	flagName		1092215	0					
ANR	1093249	CallExpression	strdup ( str + 3 )		1092215	1					
ANR	1093250	Callee	strdup		1092215	0					
ANR	1093251	Identifier	strdup		1092215	0					
ANR	1093252	ArgumentList	str + 3		1092215	1					
ANR	1093253	Argument	str + 3		1092215	0					
ANR	1093254	AdditiveExpression	str + 3		1092215	0		+			
ANR	1093255	Identifier	str		1092215	0					
ANR	1093256	PrimaryExpression	3		1092215	1					
ANR	1093257	IdentifierDeclStatement	int flagLength = strlen ( flagName ) ;	631:4:15630:15664	1092215	1	True				
ANR	1093258	IdentifierDecl	flagLength = strlen ( flagName )		1092215	0					
ANR	1093259	IdentifierDeclType	int		1092215	0					
ANR	1093260	Identifier	flagLength		1092215	1					
ANR	1093261	AssignmentExpression	flagLength = strlen ( flagName )		1092215	2		=			
ANR	1093262	Identifier	flagLength		1092215	0					
ANR	1093263	CallExpression	strlen ( flagName )		1092215	1					
ANR	1093264	Callee	strlen		1092215	0					
ANR	1093265	Identifier	strlen		1092215	0					
ANR	1093266	ArgumentList	flagName		1092215	1					
ANR	1093267	Argument	flagName		1092215	0					
ANR	1093268	Identifier	flagName		1092215	0					
ANR	1093269	IfStatement	if ( flagLength > 0 )		1092215	2					
ANR	1093270	Condition	flagLength > 0	632:8:15674:15687	1092215	0	True				
ANR	1093271	RelationalExpression	flagLength > 0		1092215	0		>			
ANR	1093272	Identifier	flagLength		1092215	0					
ANR	1093273	PrimaryExpression	0		1092215	1					
ANR	1093274	CompoundStatement		183:24:4162:4162	1092215	1					
ANR	1093275	ExpressionStatement	flagName [ flagLength - 1 ] = 0	633:5:15697:15725	1092215	0	True				
ANR	1093276	AssignmentExpression	flagName [ flagLength - 1 ] = 0		1092215	0		=			
ANR	1093277	ArrayIndexing	flagName [ flagLength - 1 ]		1092215	0					
ANR	1093278	Identifier	flagName		1092215	0					
ANR	1093279	AdditiveExpression	flagLength - 1		1092215	1		-			
ANR	1093280	Identifier	flagLength		1092215	0					
ANR	1093281	PrimaryExpression	1		1092215	1					
ANR	1093282	PrimaryExpression	0		1092215	1					
ANR	1093283	IdentifierDeclStatement	"RFlagItem * flag = r_flag_get ( core -> flags , flagName ) ;"	635:4:15737:15789	1092215	3	True				
ANR	1093284	IdentifierDecl	"* flag = r_flag_get ( core -> flags , flagName )"		1092215	0					
ANR	1093285	IdentifierDeclType	RFlagItem *		1092215	0					
ANR	1093286	Identifier	flag		1092215	1					
ANR	1093287	AssignmentExpression	"* flag = r_flag_get ( core -> flags , flagName )"		1092215	2		=			
ANR	1093288	Identifier	flag		1092215	0					
ANR	1093289	CallExpression	"r_flag_get ( core -> flags , flagName )"		1092215	1					
ANR	1093290	Callee	r_flag_get		1092215	0					
ANR	1093291	Identifier	r_flag_get		1092215	0					
ANR	1093292	ArgumentList	core -> flags		1092215	1					
ANR	1093293	Argument	core -> flags		1092215	0					
ANR	1093294	PtrMemberAccess	core -> flags		1092215	0					
ANR	1093295	Identifier	core		1092215	0					
ANR	1093296	Identifier	flags		1092215	1					
ANR	1093297	Argument	flagName		1092215	1					
ANR	1093298	Identifier	flagName		1092215	0					
ANR	1093299	ExpressionStatement	free ( flagName )	636:4:15795:15810	1092215	4	True				
ANR	1093300	CallExpression	free ( flagName )		1092215	0					
ANR	1093301	Callee	free		1092215	0					
ANR	1093302	Identifier	free		1092215	0					
ANR	1093303	ArgumentList	flagName		1092215	1					
ANR	1093304	Argument	flagName		1092215	0					
ANR	1093305	Identifier	flagName		1092215	0					
ANR	1093306	IfStatement	if ( flag )		1092215	5					
ANR	1093307	Condition	flag	637:8:15820:15823	1092215	0	True				
ANR	1093308	Identifier	flag		1092215	0					
ANR	1093309	CompoundStatement		188:14:4298:4298	1092215	1					
ANR	1093310	ReturnStatement	return flag -> offset + flag -> size ;	638:5:15833:15865	1092215	0	True				
ANR	1093311	AdditiveExpression	flag -> offset + flag -> size		1092215	0		+			
ANR	1093312	PtrMemberAccess	flag -> offset		1092215	0					
ANR	1093313	Identifier	flag		1092215	0					
ANR	1093314	Identifier	offset		1092215	1					
ANR	1093315	PtrMemberAccess	flag -> size		1092215	1					
ANR	1093316	Identifier	flag		1092215	0					
ANR	1093317	Identifier	size		1092215	1					
ANR	1093318	ReturnStatement	return UT64_MAX ;	640:4:15877:15892	1092215	6	True				
ANR	1093319	Identifier	UT64_MAX		1092215	0					
ANR	1093320	ReturnStatement	return r_anal_op_is_eob ( & op ) ;	642:3:15902:15931	1092215	31	True				
ANR	1093321	CallExpression	r_anal_op_is_eob ( & op )		1092215	0					
ANR	1093322	Callee	r_anal_op_is_eob		1092215	0					
ANR	1093323	Identifier	r_anal_op_is_eob		1092215	0					
ANR	1093324	ArgumentList	& op		1092215	1					
ANR	1093325	Argument	& op		1092215	0					
ANR	1093326	UnaryOperationExpression	& op		1092215	0					
ANR	1093327	UnaryOperator	&		1092215	0					
ANR	1093328	Identifier	op		1092215	1					
ANR	1093329	Label	case 'j' :	643:2:15935:15943	1092215	32	True				
ANR	1093330	ReturnStatement	return op . jump ;	644:3:15967:15981	1092215	33	True				
ANR	1093331	MemberAccess	op . jump		1092215	0					
ANR	1093332	Identifier	op		1092215	0					
ANR	1093333	Identifier	jump		1092215	1					
ANR	1093334	Label	case 'p' :	645:2:15985:15993	1092215	34	True				
ANR	1093335	ReturnStatement	return r_sys_getpid ( ) ;	646:3:16004:16026	1092215	35	True				
ANR	1093336	CallExpression	r_sys_getpid ( )		1092215	0					
ANR	1093337	Callee	r_sys_getpid		1092215	0					
ANR	1093338	Identifier	r_sys_getpid		1092215	0					
ANR	1093339	ArgumentList			1092215	1					
ANR	1093340	Label	case 'P' :	647:2:16030:16038	1092215	36	True				
ANR	1093341	ReturnStatement	return core -> dbg -> pid > 0 ? core -> dbg -> pid : 0 ;	648:3:16049:16095	1092215	37	True				
ANR	1093342	ConditionalExpression	core -> dbg -> pid > 0 ? core -> dbg -> pid : 0		1092215	0					
ANR	1093343	Condition	core -> dbg -> pid > 0		1092215	0					
ANR	1093344	RelationalExpression	core -> dbg -> pid > 0		1092215	0		>			
ANR	1093345	PtrMemberAccess	core -> dbg -> pid		1092215	0					
ANR	1093346	PtrMemberAccess	core -> dbg		1092215	0					
ANR	1093347	Identifier	core		1092215	0					
ANR	1093348	Identifier	dbg		1092215	1					
ANR	1093349	Identifier	pid		1092215	1					
ANR	1093350	PrimaryExpression	0		1092215	1					
ANR	1093351	PtrMemberAccess	core -> dbg -> pid		1092215	1					
ANR	1093352	PtrMemberAccess	core -> dbg		1092215	0					
ANR	1093353	Identifier	core		1092215	0					
ANR	1093354	Identifier	dbg		1092215	1					
ANR	1093355	Identifier	pid		1092215	1					
ANR	1093356	PrimaryExpression	0		1092215	2					
ANR	1093357	Label	case 'f' :	649:2:16099:16107	1092215	38	True				
ANR	1093358	IfStatement	if ( str [ 2 ] == 'l' )		1092215	39					
ANR	1093359	Condition	str [ 2 ] == 'l'	650:7:16140:16152	1092215	0	True				
ANR	1093360	EqualityExpression	str [ 2 ] == 'l'		1092215	0		==			
ANR	1093361	ArrayIndexing	str [ 2 ]		1092215	0					
ANR	1093362	Identifier	str		1092215	0					
ANR	1093363	PrimaryExpression	2		1092215	1					
ANR	1093364	PrimaryExpression	'l'		1092215	1					
ANR	1093365	CompoundStatement		202:4:4652:4708	1092215	1					
ANR	1093366	IdentifierDeclStatement	"RFlagItem * fi = r_flag_get_i ( core -> flags , core -> offset ) ;"	651:4:16180:16236	1092215	0	True				
ANR	1093367	IdentifierDecl	"* fi = r_flag_get_i ( core -> flags , core -> offset )"		1092215	0					
ANR	1093368	IdentifierDeclType	RFlagItem *		1092215	0					
ANR	1093369	Identifier	fi		1092215	1					
ANR	1093370	AssignmentExpression	"* fi = r_flag_get_i ( core -> flags , core -> offset )"		1092215	2		=			
ANR	1093371	Identifier	fi		1092215	0					
ANR	1093372	CallExpression	"r_flag_get_i ( core -> flags , core -> offset )"		1092215	1					
ANR	1093373	Callee	r_flag_get_i		1092215	0					
ANR	1093374	Identifier	r_flag_get_i		1092215	0					
ANR	1093375	ArgumentList	core -> flags		1092215	1					
ANR	1093376	Argument	core -> flags		1092215	0					
ANR	1093377	PtrMemberAccess	core -> flags		1092215	0					
ANR	1093378	Identifier	core		1092215	0					
ANR	1093379	Identifier	flags		1092215	1					
ANR	1093380	Argument	core -> offset		1092215	1					
ANR	1093381	PtrMemberAccess	core -> offset		1092215	0					
ANR	1093382	Identifier	core		1092215	0					
ANR	1093383	Identifier	offset		1092215	1					
ANR	1093384	IfStatement	if ( fi )		1092215	1					
ANR	1093385	Condition	fi	652:8:16246:16247	1092215	0	True				
ANR	1093386	Identifier	fi		1092215	0					
ANR	1093387	CompoundStatement		203:12:4722:4722	1092215	1					
ANR	1093388	ReturnStatement	return fi -> size ;	653:5:16257:16272	1092215	0	True				
ANR	1093389	PtrMemberAccess	fi -> size		1092215	0					
ANR	1093390	Identifier	fi		1092215	0					
ANR	1093391	Identifier	size		1092215	1					
ANR	1093392	ReturnStatement	return 0 ;	655:4:16284:16292	1092215	2	True				
ANR	1093393	PrimaryExpression	0		1092215	0					
ANR	1093394	ReturnStatement	return op . fail ;	657:3:16302:16316	1092215	40	True				
ANR	1093395	MemberAccess	op . fail		1092215	0					
ANR	1093396	Identifier	op		1092215	0					
ANR	1093397	Identifier	fail		1092215	1					
ANR	1093398	Label	case 'm' :	658:2:16320:16328	1092215	41	True				
ANR	1093399	ReturnStatement	return op . ptr ;	659:3:16346:16359	1092215	42	True				
ANR	1093400	MemberAccess	op . ptr		1092215	0					
ANR	1093401	Identifier	op		1092215	0					
ANR	1093402	Identifier	ptr		1092215	1					
ANR	1093403	Label	case 'B' :	660:2:16363:16371	1092215	43	True				
ANR	1093404	Label	case 'M' :	661:2:16394:16402	1092215	44	True				
ANR	1093405	CompoundStatement		215:4:4948:4999	1092215	45					
ANR	1093406	IdentifierDeclStatement	ut64 lower = UT64_MAX ;	662:4:16428:16449	1092215	0	True				
ANR	1093407	IdentifierDecl	lower = UT64_MAX		1092215	0					
ANR	1093408	IdentifierDeclType	ut64		1092215	0					
ANR	1093409	Identifier	lower		1092215	1					
ANR	1093410	AssignmentExpression	lower = UT64_MAX		1092215	2		=			
ANR	1093411	Identifier	UT64_MAX		1092215	0					
ANR	1093412	Identifier	UT64_MAX		1092215	1					
ANR	1093413	Statement	ut64	663:4:16455:16458	1092215	1	True				
ANR	1093414	Statement	size	663:9:16460:16463	1092215	2	True				
ANR	1093415	Statement	=	663:14:16465:16465	1092215	3	True				
ANR	1093416	Statement	0L	663:16:16467:16468	1092215	4	True				
ANR	1093417	ExpressionStatement	L	663:18:16469:16470	1092215	5	True				
ANR	1093418	Identifier	L		1092215	0					
ANR	1093419	IdentifierDeclStatement	"RIOMap * map = r_io_map_get ( core -> io , core -> offset ) ;"	664:4:16476:16527	1092215	6	True				
ANR	1093420	IdentifierDecl	"* map = r_io_map_get ( core -> io , core -> offset )"		1092215	0					
ANR	1093421	IdentifierDeclType	RIOMap *		1092215	0					
ANR	1093422	Identifier	map		1092215	1					
ANR	1093423	AssignmentExpression	"* map = r_io_map_get ( core -> io , core -> offset )"		1092215	2		=			
ANR	1093424	Identifier	map		1092215	0					
ANR	1093425	CallExpression	"r_io_map_get ( core -> io , core -> offset )"		1092215	1					
ANR	1093426	Callee	r_io_map_get		1092215	0					
ANR	1093427	Identifier	r_io_map_get		1092215	0					
ANR	1093428	ArgumentList	core -> io		1092215	1					
ANR	1093429	Argument	core -> io		1092215	0					
ANR	1093430	PtrMemberAccess	core -> io		1092215	0					
ANR	1093431	Identifier	core		1092215	0					
ANR	1093432	Identifier	io		1092215	1					
ANR	1093433	Argument	core -> offset		1092215	1					
ANR	1093434	PtrMemberAccess	core -> offset		1092215	0					
ANR	1093435	Identifier	core		1092215	0					
ANR	1093436	Identifier	offset		1092215	1					
ANR	1093437	IfStatement	if ( map )		1092215	7					
ANR	1093438	Condition	map	665:8:16537:16539	1092215	0	True				
ANR	1093439	Identifier	map		1092215	0					
ANR	1093440	CompoundStatement		216:13:5014:5014	1092215	1					
ANR	1093441	ExpressionStatement	lower = r_itv_begin ( map -> itv )	666:5:16549:16579	1092215	0	True				
ANR	1093442	AssignmentExpression	lower = r_itv_begin ( map -> itv )		1092215	0		=			
ANR	1093443	Identifier	lower		1092215	0					
ANR	1093444	CallExpression	r_itv_begin ( map -> itv )		1092215	1					
ANR	1093445	Callee	r_itv_begin		1092215	0					
ANR	1093446	Identifier	r_itv_begin		1092215	0					
ANR	1093447	ArgumentList	map -> itv		1092215	1					
ANR	1093448	Argument	map -> itv		1092215	0					
ANR	1093449	PtrMemberAccess	map -> itv		1092215	0					
ANR	1093450	Identifier	map		1092215	0					
ANR	1093451	Identifier	itv		1092215	1					
ANR	1093452	ExpressionStatement	size = r_itv_size ( map -> itv )	667:5:16586:16614	1092215	1	True				
ANR	1093453	AssignmentExpression	size = r_itv_size ( map -> itv )		1092215	0		=			
ANR	1093454	Identifier	size		1092215	0					
ANR	1093455	CallExpression	r_itv_size ( map -> itv )		1092215	1					
ANR	1093456	Callee	r_itv_size		1092215	0					
ANR	1093457	Identifier	r_itv_size		1092215	0					
ANR	1093458	ArgumentList	map -> itv		1092215	1					
ANR	1093459	Argument	map -> itv		1092215	0					
ANR	1093460	PtrMemberAccess	map -> itv		1092215	0					
ANR	1093461	Identifier	map		1092215	0					
ANR	1093462	Identifier	itv		1092215	1					
ANR	1093463	IfStatement	if ( str [ 1 ] == 'B' )		1092215	8					
ANR	1093464	Condition	str [ 1 ] == 'B'	670:8:16631:16643	1092215	0	True				
ANR	1093465	EqualityExpression	str [ 1 ] == 'B'		1092215	0		==			
ANR	1093466	ArrayIndexing	str [ 1 ]		1092215	0					
ANR	1093467	Identifier	str		1092215	0					
ANR	1093468	PrimaryExpression	1		1092215	1					
ANR	1093469	PrimaryExpression	'B'		1092215	1					
ANR	1093470	CompoundStatement		223:5:5206:5231	1092215	1					
ANR	1093471	IdentifierDeclStatement	const int clear_bits = 16 ;	672:5:16734:16759	1092215	0	True				
ANR	1093472	IdentifierDecl	clear_bits = 16		1092215	0					
ANR	1093473	IdentifierDeclType	const int		1092215	0					
ANR	1093474	Identifier	clear_bits		1092215	1					
ANR	1093475	AssignmentExpression	clear_bits = 16		1092215	2		=			
ANR	1093476	Identifier	clear_bits		1092215	0					
ANR	1093477	PrimaryExpression	16		1092215	1					
ANR	1093478	ExpressionStatement	lower >>= clear_bits	673:5:16766:16786	1092215	1	True				
ANR	1093479	AssignmentExpression	lower >>= clear_bits		1092215	0		>>=			
ANR	1093480	Identifier	lower		1092215	0					
ANR	1093481	Identifier	clear_bits		1092215	1					
ANR	1093482	ExpressionStatement	lower <<= clear_bits	674:5:16793:16813	1092215	2	True				
ANR	1093483	AssignmentExpression	lower <<= clear_bits		1092215	0		<<=			
ANR	1093484	Identifier	lower		1092215	0					
ANR	1093485	Identifier	clear_bits		1092215	1					
ANR	1093486	IfStatement	if ( str [ 2 ] == 'M' )		1092215	9					
ANR	1093487	Condition	str [ 2 ] == 'M'	676:8:16829:16841	1092215	0	True				
ANR	1093488	EqualityExpression	str [ 2 ] == 'M'		1092215	0		==			
ANR	1093489	ArrayIndexing	str [ 2 ]		1092215	0					
ANR	1093490	Identifier	str		1092215	0					
ANR	1093491	PrimaryExpression	2		1092215	1					
ANR	1093492	PrimaryExpression	'M'		1092215	1					
ANR	1093493	CompoundStatement		227:23:5316:5316	1092215	1					
ANR	1093494	ReturnStatement	return size ;	677:5:16851:16862	1092215	0	True				
ANR	1093495	Identifier	size		1092215	0					
ANR	1093496	Statement	return	679:4:16874:16879	1092215	10	True				
ANR	1093497	Statement	(	679:11:16881:16881	1092215	11	True				
ANR	1093498	Statement	lower	679:12:16882:16886	1092215	12	True				
ANR	1093499	Statement	==	679:18:16888:16889	1092215	13	True				
ANR	1093500	Statement	UT64_MAX	679:21:16891:16898	1092215	14	True				
ANR	1093501	Statement	)	679:29:16899:16899	1092215	15	True				
ANR	1093502	Statement	?	679:30:16900:16900	1092215	16	True				
ANR	1093503	Statement	0L	679:32:16902:16903	1092215	17	True				
ANR	1093504	Label	L :	679:34:16904:16905	1092215	18	True				
ANR	1093505	Identifier	L		1092215	0					
ANR	1093506	ExpressionStatement	lower	679:37:16907:16912	1092215	19	True				
ANR	1093507	Identifier	lower		1092215	0					
ANR	1093508	BreakStatement	break ;	681:3:16922:16927	1092215	46	True				
ANR	1093509	Label	case 'v' :	682:2:16931:16939	1092215	47	True				
ANR	1093510	ReturnStatement	return op . val ;	683:3:16966:16979	1092215	48	True				
ANR	1093511	MemberAccess	op . val		1092215	0					
ANR	1093512	Identifier	op		1092215	0					
ANR	1093513	Identifier	val		1092215	1					
ANR	1093514	Label	case 'l' :	684:2:16983:16991	1092215	49	True				
ANR	1093515	ReturnStatement	return op . size ;	685:3:17016:17030	1092215	50	True				
ANR	1093516	MemberAccess	op . size		1092215	0					
ANR	1093517	Identifier	op		1092215	0					
ANR	1093518	Identifier	size		1092215	1					
ANR	1093519	Label	case 'b' :	686:2:17034:17042	1092215	51	True				
ANR	1093520	ReturnStatement	return core -> blocksize ;	687:3:17053:17075	1092215	52	True				
ANR	1093521	PtrMemberAccess	core -> blocksize		1092215	0					
ANR	1093522	Identifier	core		1092215	0					
ANR	1093523	Identifier	blocksize		1092215	1					
ANR	1093524	Label	case 's' :	688:2:17079:17087	1092215	53	True				
ANR	1093525	IfStatement	if ( str [ 2 ] == '{' )		1092215	54					
ANR	1093526	Condition	str [ 2 ] == '{'	689:7:17112:17124	1092215	0	True				
ANR	1093527	EqualityExpression	str [ 2 ] == '{'		1092215	0		==			
ANR	1093528	ArrayIndexing	str [ 2 ]		1092215	0					
ANR	1093529	Identifier	str		1092215	0					
ANR	1093530	PrimaryExpression	2		1092215	1					
ANR	1093531	PrimaryExpression	'{'		1092215	1					
ANR	1093532	CompoundStatement		249:4:5776:5824	1092215	1					
ANR	1093533	ExpressionStatement	bptr = strdup ( str + 3 )	690:4:17155:17178	1092215	0	True				
ANR	1093534	AssignmentExpression	bptr = strdup ( str + 3 )		1092215	0		=			
ANR	1093535	Identifier	bptr		1092215	0					
ANR	1093536	CallExpression	strdup ( str + 3 )		1092215	1					
ANR	1093537	Callee	strdup		1092215	0					
ANR	1093538	Identifier	strdup		1092215	0					
ANR	1093539	ArgumentList	str + 3		1092215	1					
ANR	1093540	Argument	str + 3		1092215	0					
ANR	1093541	AdditiveExpression	str + 3		1092215	0		+			
ANR	1093542	Identifier	str		1092215	0					
ANR	1093543	PrimaryExpression	3		1092215	1					
ANR	1093544	ExpressionStatement	"ptr = strchr ( bptr , '}' )"	691:4:17184:17208	1092215	1	True				
ANR	1093545	AssignmentExpression	"ptr = strchr ( bptr , '}' )"		1092215	0		=			
ANR	1093546	Identifier	ptr		1092215	0					
ANR	1093547	CallExpression	"strchr ( bptr , '}' )"		1092215	1					
ANR	1093548	Callee	strchr		1092215	0					
ANR	1093549	Identifier	strchr		1092215	0					
ANR	1093550	ArgumentList	bptr		1092215	1					
ANR	1093551	Argument	bptr		1092215	0					
ANR	1093552	Identifier	bptr		1092215	0					
ANR	1093553	Argument	'}'		1092215	1					
ANR	1093554	PrimaryExpression	'}'		1092215	0					
ANR	1093555	IfStatement	if ( ! ptr )		1092215	2					
ANR	1093556	Condition	! ptr	692:8:17218:17221	1092215	0	True				
ANR	1093557	UnaryOperationExpression	! ptr		1092215	0					
ANR	1093558	UnaryOperator	!		1092215	0					
ANR	1093559	Identifier	ptr		1092215	1					
ANR	1093560	CompoundStatement		243:14:5696:5696	1092215	1					
ANR	1093561	ExpressionStatement	free ( bptr )	694:5:17252:17263	1092215	0	True				
ANR	1093562	CallExpression	free ( bptr )		1092215	0					
ANR	1093563	Callee	free		1092215	0					
ANR	1093564	Identifier	free		1092215	0					
ANR	1093565	ArgumentList	bptr		1092215	1					
ANR	1093566	Argument	bptr		1092215	0					
ANR	1093567	Identifier	bptr		1092215	0					
ANR	1093568	BreakStatement	break ;	695:5:17270:17275	1092215	1	True				
ANR	1093569	ExpressionStatement	* ptr = '\\0'	697:4:17287:17298	1092215	3	True				
ANR	1093570	AssignmentExpression	* ptr = '\\0'		1092215	0		=			
ANR	1093571	UnaryOperationExpression	* ptr		1092215	0					
ANR	1093572	UnaryOperator	*		1092215	0					
ANR	1093573	Identifier	ptr		1092215	1					
ANR	1093574	PrimaryExpression	'\\0'		1092215	1					
ANR	1093575	IdentifierDeclStatement	"RFlagItem * flag = r_flag_get ( core -> flags , bptr ) ;"	698:4:17304:17352	1092215	4	True				
ANR	1093576	IdentifierDecl	"* flag = r_flag_get ( core -> flags , bptr )"		1092215	0					
ANR	1093577	IdentifierDeclType	RFlagItem *		1092215	0					
ANR	1093578	Identifier	flag		1092215	1					
ANR	1093579	AssignmentExpression	"* flag = r_flag_get ( core -> flags , bptr )"		1092215	2		=			
ANR	1093580	Identifier	flag		1092215	0					
ANR	1093581	CallExpression	"r_flag_get ( core -> flags , bptr )"		1092215	1					
ANR	1093582	Callee	r_flag_get		1092215	0					
ANR	1093583	Identifier	r_flag_get		1092215	0					
ANR	1093584	ArgumentList	core -> flags		1092215	1					
ANR	1093585	Argument	core -> flags		1092215	0					
ANR	1093586	PtrMemberAccess	core -> flags		1092215	0					
ANR	1093587	Identifier	core		1092215	0					
ANR	1093588	Identifier	flags		1092215	1					
ANR	1093589	Argument	bptr		1092215	1					
ANR	1093590	Identifier	bptr		1092215	0					
ANR	1093591	Statement	ret	699:4:17358:17360	1092215	5	True				
ANR	1093592	Statement	=	699:8:17362:17362	1092215	6	True				
ANR	1093593	Statement	flag	699:10:17364:17367	1092215	7	True				
ANR	1093594	Statement	?	699:14:17368:17368	1092215	8	True				
ANR	1093595	Statement	flag	699:16:17370:17373	1092215	9	True				
ANR	1093596	Statement	->	699:20:17374:17375	1092215	10	True				
ANR	1093597	Label	size :	699:22:17376:17380	1092215	11	True				
ANR	1093598	Identifier	size		1092215	0					
ANR	1093599	Statement	0L	699:28:17382:17383	1092215	12	True				
ANR	1093600	ExpressionStatement	L	699:30:17384:17385	1092215	13	True				
ANR	1093601	Identifier	L		1092215	0					
ANR	1093602	ExpressionStatement	free ( bptr )	700:4:17400:17411	1092215	14	True				
ANR	1093603	CallExpression	free ( bptr )		1092215	0					
ANR	1093604	Callee	free		1092215	0					
ANR	1093605	Identifier	free		1092215	0					
ANR	1093606	ArgumentList	bptr		1092215	1					
ANR	1093607	Argument	bptr		1092215	0					
ANR	1093608	Identifier	bptr		1092215	0					
ANR	1093609	ExpressionStatement	free ( out )	701:4:17417:17427	1092215	15	True				
ANR	1093610	CallExpression	free ( out )		1092215	0					
ANR	1093611	Callee	free		1092215	0					
ANR	1093612	Identifier	free		1092215	0					
ANR	1093613	ArgumentList	out		1092215	1					
ANR	1093614	Argument	out		1092215	0					
ANR	1093615	Identifier	out		1092215	0					
ANR	1093616	ReturnStatement	return ret ;	702:4:17433:17443	1092215	16	True				
ANR	1093617	Identifier	ret		1092215	0					
ANR	1093618	ElseStatement	else		1092215	0					
ANR	1093619	IfStatement	if ( core -> file )		1092215	0					
ANR	1093620	Condition	core -> file	703:14:17459:17468	1092215	0	True				
ANR	1093621	PtrMemberAccess	core -> file		1092215	0					
ANR	1093622	Identifier	core		1092215	0					
ANR	1093623	Identifier	file		1092215	1					
ANR	1093624	CompoundStatement		254:26:5943:5943	1092215	1					
ANR	1093625	ReturnStatement	"return r_io_fd_size ( core -> io , core -> file -> fd ) ;"	704:4:17477:17523	1092215	0	True				
ANR	1093626	CallExpression	"r_io_fd_size ( core -> io , core -> file -> fd )"		1092215	0					
ANR	1093627	Callee	r_io_fd_size		1092215	0					
ANR	1093628	Identifier	r_io_fd_size		1092215	0					
ANR	1093629	ArgumentList	core -> io		1092215	1					
ANR	1093630	Argument	core -> io		1092215	0					
ANR	1093631	PtrMemberAccess	core -> io		1092215	0					
ANR	1093632	Identifier	core		1092215	0					
ANR	1093633	Identifier	io		1092215	1					
ANR	1093634	Argument	core -> file -> fd		1092215	1					
ANR	1093635	PtrMemberAccess	core -> file -> fd		1092215	0					
ANR	1093636	PtrMemberAccess	core -> file		1092215	0					
ANR	1093637	Identifier	core		1092215	0					
ANR	1093638	Identifier	file		1092215	1					
ANR	1093639	Identifier	fd		1092215	1					
ANR	1093640	Statement	return	706:3:17533:17538	1092215	55	True				
ANR	1093641	Statement	0L	706:10:17540:17541	1092215	56	True				
ANR	1093642	ExpressionStatement	L	706:12:17542:17543	1092215	57	True				
ANR	1093643	Identifier	L		1092215	0					
ANR	1093644	Label	case 'w' :	707:2:17547:17555	1092215	58	True				
ANR	1093645	ReturnStatement	"return r_config_get_i ( core -> config , ""asm.bits"" ) / 8 ;"	708:3:17576:17628	1092215	59	True				
ANR	1093646	MultiplicativeExpression	"r_config_get_i ( core -> config , ""asm.bits"" ) / 8"		1092215	0		/			
ANR	1093647	CallExpression	"r_config_get_i ( core -> config , ""asm.bits"" )"		1092215	0					
ANR	1093648	Callee	r_config_get_i		1092215	0					
ANR	1093649	Identifier	r_config_get_i		1092215	0					
ANR	1093650	ArgumentList	core -> config		1092215	1					
ANR	1093651	Argument	core -> config		1092215	0					
ANR	1093652	PtrMemberAccess	core -> config		1092215	0					
ANR	1093653	Identifier	core		1092215	0					
ANR	1093654	Identifier	config		1092215	1					
ANR	1093655	Argument	"""asm.bits"""		1092215	1					
ANR	1093656	PrimaryExpression	"""asm.bits"""		1092215	0					
ANR	1093657	PrimaryExpression	8		1092215	1					
ANR	1093658	Label	case 'S' :	709:2:17632:17640	1092215	60	True				
ANR	1093659	CompoundStatement		262:4:6144:6189	1092215	61					
ANR	1093660	IdentifierDeclStatement	RBinObject * bo = r_bin_cur_object ( core -> bin ) ;	711:4:17672:17717	1092215	0	True				
ANR	1093661	IdentifierDecl	* bo = r_bin_cur_object ( core -> bin )		1092215	0					
ANR	1093662	IdentifierDeclType	RBinObject *		1092215	0					
ANR	1093663	Identifier	bo		1092215	1					
ANR	1093664	AssignmentExpression	* bo = r_bin_cur_object ( core -> bin )		1092215	2		=			
ANR	1093665	Identifier	bo		1092215	0					
ANR	1093666	CallExpression	r_bin_cur_object ( core -> bin )		1092215	1					
ANR	1093667	Callee	r_bin_cur_object		1092215	0					
ANR	1093668	Identifier	r_bin_cur_object		1092215	0					
ANR	1093669	ArgumentList	core -> bin		1092215	1					
ANR	1093670	Argument	core -> bin		1092215	0					
ANR	1093671	PtrMemberAccess	core -> bin		1092215	0					
ANR	1093672	Identifier	core		1092215	0					
ANR	1093673	Identifier	bin		1092215	1					
ANR	1093674	IfStatement	"if ( bo && ( s = r_bin_get_section_at ( bo , core -> offset , true ) ) )"		1092215	1					
ANR	1093675	Condition	"bo && ( s = r_bin_get_section_at ( bo , core -> offset , true ) )"	712:8:17727:17783	1092215	0	True				
ANR	1093676	AndExpression	"bo && ( s = r_bin_get_section_at ( bo , core -> offset , true ) )"		1092215	0		&&			
ANR	1093677	Identifier	bo		1092215	0					
ANR	1093678	AssignmentExpression	"s = r_bin_get_section_at ( bo , core -> offset , true )"		1092215	1		=			
ANR	1093679	Identifier	s		1092215	0					
ANR	1093680	CallExpression	"r_bin_get_section_at ( bo , core -> offset , true )"		1092215	1					
ANR	1093681	Callee	r_bin_get_section_at		1092215	0					
ANR	1093682	Identifier	r_bin_get_section_at		1092215	0					
ANR	1093683	ArgumentList	bo		1092215	1					
ANR	1093684	Argument	bo		1092215	0					
ANR	1093685	Identifier	bo		1092215	0					
ANR	1093686	Argument	core -> offset		1092215	1					
ANR	1093687	PtrMemberAccess	core -> offset		1092215	0					
ANR	1093688	Identifier	core		1092215	0					
ANR	1093689	Identifier	offset		1092215	1					
ANR	1093690	Argument	true		1092215	2					
ANR	1093691	Identifier	true		1092215	0					
ANR	1093692	CompoundStatement		263:67:6258:6258	1092215	1					
ANR	1093693	ReturnStatement	return ( str [ 2 ] == 'S' ? s -> size : s -> vaddr ) ;	713:5:17793:17834	1092215	0	True				
ANR	1093694	ConditionalExpression	str [ 2 ] == 'S' ? s -> size : s -> vaddr		1092215	0					
ANR	1093695	Condition	str [ 2 ] == 'S'		1092215	0					
ANR	1093696	EqualityExpression	str [ 2 ] == 'S'		1092215	0		==			
ANR	1093697	ArrayIndexing	str [ 2 ]		1092215	0					
ANR	1093698	Identifier	str		1092215	0					
ANR	1093699	PrimaryExpression	2		1092215	1					
ANR	1093700	PrimaryExpression	'S'		1092215	1					
ANR	1093701	PtrMemberAccess	s -> size		1092215	1					
ANR	1093702	Identifier	s		1092215	0					
ANR	1093703	Identifier	size		1092215	1					
ANR	1093704	PtrMemberAccess	s -> vaddr		1092215	2					
ANR	1093705	Identifier	s		1092215	0					
ANR	1093706	Identifier	vaddr		1092215	1					
ANR	1093707	Statement	return	716:3:17850:17855	1092215	62	True				
ANR	1093708	Statement	0L	716:10:17857:17858	1092215	63	True				
ANR	1093709	ExpressionStatement	L	716:12:17859:17860	1092215	64	True				
ANR	1093710	Identifier	L		1092215	0					
ANR	1093711	Label	case 'D' :	717:2:17864:17872	1092215	65	True				
ANR	1093712	IfStatement	if ( IS_DIGIT ( str [ 2 ] ) )		1092215	66					
ANR	1093713	Condition	IS_DIGIT ( str [ 2 ] )	718:7:17887:17903	1092215	0	True				
ANR	1093714	CallExpression	IS_DIGIT ( str [ 2 ] )		1092215	0					
ANR	1093715	Callee	IS_DIGIT		1092215	0					
ANR	1093716	Identifier	IS_DIGIT		1092215	0					
ANR	1093717	ArgumentList	str [ 2 ]		1092215	1					
ANR	1093718	Argument	str [ 2 ]		1092215	0					
ANR	1093719	ArrayIndexing	str [ 2 ]		1092215	0					
ANR	1093720	Identifier	str		1092215	0					
ANR	1093721	PrimaryExpression	2		1092215	1					
ANR	1093722	CompoundStatement		269:26:6378:6378	1092215	1					
ANR	1093723	ReturnStatement	"return getref ( core , atoi ( str + 2 ) , 'r' , R_ANAL_REF_TYPE_DATA ) ;"	719:4:17912:17975	1092215	0	True				
ANR	1093724	CallExpression	"getref ( core , atoi ( str + 2 ) , 'r' , R_ANAL_REF_TYPE_DATA )"		1092215	0					
ANR	1093725	Callee	getref		1092215	0					
ANR	1093726	Identifier	getref		1092215	0					
ANR	1093727	ArgumentList	core		1092215	1					
ANR	1093728	Argument	core		1092215	0					
ANR	1093729	Identifier	core		1092215	0					
ANR	1093730	Argument	atoi ( str + 2 )		1092215	1					
ANR	1093731	CallExpression	atoi ( str + 2 )		1092215	0					
ANR	1093732	Callee	atoi		1092215	0					
ANR	1093733	Identifier	atoi		1092215	0					
ANR	1093734	ArgumentList	str + 2		1092215	1					
ANR	1093735	Argument	str + 2		1092215	0					
ANR	1093736	AdditiveExpression	str + 2		1092215	0		+			
ANR	1093737	Identifier	str		1092215	0					
ANR	1093738	PrimaryExpression	2		1092215	1					
ANR	1093739	Argument	'r'		1092215	2					
ANR	1093740	PrimaryExpression	'r'		1092215	0					
ANR	1093741	Argument	R_ANAL_REF_TYPE_DATA		1092215	3					
ANR	1093742	Identifier	R_ANAL_REF_TYPE_DATA		1092215	0					
ANR	1093743	ElseStatement	else		1092215	0					
ANR	1093744	CompoundStatement		273:4:6485:6500	1092215	0					
ANR	1093745	IdentifierDeclStatement	RDebugMap * map ;	721:4:17993:18007	1092215	0	True				
ANR	1093746	IdentifierDecl	* map		1092215	0					
ANR	1093747	IdentifierDeclType	RDebugMap *		1092215	0					
ANR	1093748	Identifier	map		1092215	1					
ANR	1093749	IdentifierDeclStatement	RListIter * iter ;	722:4:18013:18028	1092215	1	True				
ANR	1093750	IdentifierDecl	* iter		1092215	0					
ANR	1093751	IdentifierDeclType	RListIter *		1092215	0					
ANR	1093752	Identifier	iter		1092215	1					
ANR	1093753	Statement	r_list_foreach	723:4:18034:18047	1092215	2	True				
ANR	1093754	Statement	(	723:19:18049:18049	1092215	3	True				
ANR	1093755	Statement	core	723:20:18050:18053	1092215	4	True				
ANR	1093756	Statement	->	723:24:18054:18055	1092215	5	True				
ANR	1093757	Statement	dbg	723:26:18056:18058	1092215	6	True				
ANR	1093758	Statement	->	723:29:18059:18060	1092215	7	True				
ANR	1093759	Statement	maps	723:31:18061:18064	1092215	8	True				
ANR	1093760	Statement	","	723:35:18065:18065	1092215	9	True				
ANR	1093761	Statement	iter	723:37:18067:18070	1092215	10	True				
ANR	1093762	Statement	","	723:41:18071:18071	1092215	11	True				
ANR	1093763	Statement	map	723:43:18073:18075	1092215	12	True				
ANR	1093764	Statement	)	723:46:18076:18076	1092215	13	True				
ANR	1093765	CompoundStatement		274:48:6550:6550	1092215	14					
ANR	1093766	IfStatement	if ( core -> offset >= map -> addr && core -> offset < map -> addr_end )		1092215	0					
ANR	1093767	Condition	core -> offset >= map -> addr && core -> offset < map -> addr_end	724:9:18089:18145	1092215	0	True				
ANR	1093768	AndExpression	core -> offset >= map -> addr && core -> offset < map -> addr_end		1092215	0		&&			
ANR	1093769	RelationalExpression	core -> offset >= map -> addr		1092215	0		>=			
ANR	1093770	PtrMemberAccess	core -> offset		1092215	0					
ANR	1093771	Identifier	core		1092215	0					
ANR	1093772	Identifier	offset		1092215	1					
ANR	1093773	PtrMemberAccess	map -> addr		1092215	1					
ANR	1093774	Identifier	map		1092215	0					
ANR	1093775	Identifier	addr		1092215	1					
ANR	1093776	RelationalExpression	core -> offset < map -> addr_end		1092215	1		<			
ANR	1093777	PtrMemberAccess	core -> offset		1092215	0					
ANR	1093778	Identifier	core		1092215	0					
ANR	1093779	Identifier	offset		1092215	1					
ANR	1093780	PtrMemberAccess	map -> addr_end		1092215	1					
ANR	1093781	Identifier	map		1092215	0					
ANR	1093782	Identifier	addr_end		1092215	1					
ANR	1093783	CompoundStatement		275:68:6620:6620	1092215	1					
ANR	1093784	ReturnStatement	return ( str [ 2 ] == 'D' ) ? map -> size : map -> addr ;	725:6:18156:18200	1092215	0	True				
ANR	1093785	ConditionalExpression	( str [ 2 ] == 'D' ) ? map -> size : map -> addr		1092215	0					
ANR	1093786	Condition	str [ 2 ] == 'D'		1092215	0					
ANR	1093787	EqualityExpression	str [ 2 ] == 'D'		1092215	0		==			
ANR	1093788	ArrayIndexing	str [ 2 ]		1092215	0					
ANR	1093789	Identifier	str		1092215	0					
ANR	1093790	PrimaryExpression	2		1092215	1					
ANR	1093791	PrimaryExpression	'D'		1092215	1					
ANR	1093792	PtrMemberAccess	map -> size		1092215	1					
ANR	1093793	Identifier	map		1092215	0					
ANR	1093794	Identifier	size		1092215	1					
ANR	1093795	PtrMemberAccess	map -> addr		1092215	2					
ANR	1093796	Identifier	map		1092215	0					
ANR	1093797	Identifier	addr		1092215	1					
ANR	1093798	Statement	return	729:3:18223:18228	1092215	67	True				
ANR	1093799	Statement	0L	729:10:18230:18231	1092215	68	True				
ANR	1093800	ExpressionStatement	L	729:12:18232:18233	1092215	69	True				
ANR	1093801	Identifier	L		1092215	0					
ANR	1093802	Label	case '?' :	730:2:18266:18274	1092215	70	True				
ANR	1093803	ReturnStatement	return core -> num -> value ;	731:3:18285:18308	1092215	71	True				
ANR	1093804	PtrMemberAccess	core -> num -> value		1092215	0					
ANR	1093805	PtrMemberAccess	core -> num		1092215	0					
ANR	1093806	Identifier	core		1092215	0					
ANR	1093807	Identifier	num		1092215	1					
ANR	1093808	Identifier	value		1092215	1					
ANR	1093809	Label	case '$' :	732:2:18319:18327	1092215	72	True				
ANR	1093810	ReturnStatement	return str [ 2 ] == '$' ? core -> prompt_offset : core -> offset ;	733:3:18345:18402	1092215	73	True				
ANR	1093811	ConditionalExpression	str [ 2 ] == '$' ? core -> prompt_offset : core -> offset		1092215	0					
ANR	1093812	Condition	str [ 2 ] == '$'		1092215	0					
ANR	1093813	EqualityExpression	str [ 2 ] == '$'		1092215	0		==			
ANR	1093814	ArrayIndexing	str [ 2 ]		1092215	0					
ANR	1093815	Identifier	str		1092215	0					
ANR	1093816	PrimaryExpression	2		1092215	1					
ANR	1093817	PrimaryExpression	'$'		1092215	1					
ANR	1093818	PtrMemberAccess	core -> prompt_offset		1092215	1					
ANR	1093819	Identifier	core		1092215	0					
ANR	1093820	Identifier	prompt_offset		1092215	1					
ANR	1093821	PtrMemberAccess	core -> offset		1092215	2					
ANR	1093822	Identifier	core		1092215	0					
ANR	1093823	Identifier	offset		1092215	1					
ANR	1093824	Label	case 'o' :	734:2:18406:18414	1092215	74	True				
ANR	1093825	CompoundStatement		286:3:6899:6987	1092215	75					
ANR	1093826	IdentifierDeclStatement	"RBinSection * s = r_bin_get_section_at ( r_bin_cur_object ( core -> bin ) , core -> offset , true ) ;"	735:3:18427:18515	1092215	0	True				
ANR	1093827	IdentifierDecl	"* s = r_bin_get_section_at ( r_bin_cur_object ( core -> bin ) , core -> offset , true )"		1092215	0					
ANR	1093828	IdentifierDeclType	RBinSection *		1092215	0					
ANR	1093829	Identifier	s		1092215	1					
ANR	1093830	AssignmentExpression	"* s = r_bin_get_section_at ( r_bin_cur_object ( core -> bin ) , core -> offset , true )"		1092215	2		=			
ANR	1093831	Identifier	s		1092215	0					
ANR	1093832	CallExpression	"r_bin_get_section_at ( r_bin_cur_object ( core -> bin ) , core -> offset , true )"		1092215	1					
ANR	1093833	Callee	r_bin_get_section_at		1092215	0					
ANR	1093834	Identifier	r_bin_get_section_at		1092215	0					
ANR	1093835	ArgumentList	r_bin_cur_object ( core -> bin )		1092215	1					
ANR	1093836	Argument	r_bin_cur_object ( core -> bin )		1092215	0					
ANR	1093837	CallExpression	r_bin_cur_object ( core -> bin )		1092215	0					
ANR	1093838	Callee	r_bin_cur_object		1092215	0					
ANR	1093839	Identifier	r_bin_cur_object		1092215	0					
ANR	1093840	ArgumentList	core -> bin		1092215	1					
ANR	1093841	Argument	core -> bin		1092215	0					
ANR	1093842	PtrMemberAccess	core -> bin		1092215	0					
ANR	1093843	Identifier	core		1092215	0					
ANR	1093844	Identifier	bin		1092215	1					
ANR	1093845	Argument	core -> offset		1092215	1					
ANR	1093846	PtrMemberAccess	core -> offset		1092215	0					
ANR	1093847	Identifier	core		1092215	0					
ANR	1093848	Identifier	offset		1092215	1					
ANR	1093849	Argument	true		1092215	2					
ANR	1093850	Identifier	true		1092215	0					
ANR	1093851	ReturnStatement	return s ? core -> offset - s -> vaddr + s -> paddr : core -> offset ;	736:3:18520:18580	1092215	1	True				
ANR	1093852	ConditionalExpression	s ? core -> offset - s -> vaddr + s -> paddr : core -> offset		1092215	0					
ANR	1093853	Condition	s		1092215	0					
ANR	1093854	Identifier	s		1092215	0					
ANR	1093855	AdditiveExpression	core -> offset - s -> vaddr + s -> paddr		1092215	1		-			
ANR	1093856	PtrMemberAccess	core -> offset		1092215	0					
ANR	1093857	Identifier	core		1092215	0					
ANR	1093858	Identifier	offset		1092215	1					
ANR	1093859	AdditiveExpression	s -> vaddr + s -> paddr		1092215	1		+			
ANR	1093860	PtrMemberAccess	s -> vaddr		1092215	0					
ANR	1093861	Identifier	s		1092215	0					
ANR	1093862	Identifier	vaddr		1092215	1					
ANR	1093863	PtrMemberAccess	s -> paddr		1092215	1					
ANR	1093864	Identifier	s		1092215	0					
ANR	1093865	Identifier	paddr		1092215	1					
ANR	1093866	PtrMemberAccess	core -> offset		1092215	2					
ANR	1093867	Identifier	core		1092215	0					
ANR	1093868	Identifier	offset		1092215	1					
ANR	1093869	BreakStatement	break ;	737:3:18585:18590	1092215	2	True				
ANR	1093870	Label	case 'O' :	739:2:18598:18606	1092215	76	True				
ANR	1093871	IfStatement	if ( core -> print -> cur_enabled )		1092215	77					
ANR	1093872	Condition	core -> print -> cur_enabled	740:9:18623:18646	1092215	0	True				
ANR	1093873	PtrMemberAccess	core -> print -> cur_enabled		1092215	0					
ANR	1093874	PtrMemberAccess	core -> print		1092215	0					
ANR	1093875	Identifier	core		1092215	0					
ANR	1093876	Identifier	print		1092215	1					
ANR	1093877	Identifier	cur_enabled		1092215	1					
ANR	1093878	CompoundStatement		291:35:7121:7121	1092215	1					
ANR	1093879	ReturnStatement	return core -> offset + core -> print -> cur ;	741:6:18657:18695	1092215	0	True				
ANR	1093880	AdditiveExpression	core -> offset + core -> print -> cur		1092215	0		+			
ANR	1093881	PtrMemberAccess	core -> offset		1092215	0					
ANR	1093882	Identifier	core		1092215	0					
ANR	1093883	Identifier	offset		1092215	1					
ANR	1093884	PtrMemberAccess	core -> print -> cur		1092215	1					
ANR	1093885	PtrMemberAccess	core -> print		1092215	0					
ANR	1093886	Identifier	core		1092215	0					
ANR	1093887	Identifier	print		1092215	1					
ANR	1093888	Identifier	cur		1092215	1					
ANR	1093889	ReturnStatement	return core -> offset ;	743:5:18709:18728	1092215	78	True				
ANR	1093890	PtrMemberAccess	core -> offset		1092215	0					
ANR	1093891	Identifier	core		1092215	0					
ANR	1093892	Identifier	offset		1092215	1					
ANR	1093893	Label	case 'C' :	744:2:18732:18740	1092215	79	True				
ANR	1093894	ReturnStatement	"return getref ( core , atoi ( str + 2 ) , 'r' , R_ANAL_REF_TYPE_CALL ) ;"	745:3:18760:18823	1092215	80	True				
ANR	1093895	CallExpression	"getref ( core , atoi ( str + 2 ) , 'r' , R_ANAL_REF_TYPE_CALL )"		1092215	0					
ANR	1093896	Callee	getref		1092215	0					
ANR	1093897	Identifier	getref		1092215	0					
ANR	1093898	ArgumentList	core		1092215	1					
ANR	1093899	Argument	core		1092215	0					
ANR	1093900	Identifier	core		1092215	0					
ANR	1093901	Argument	atoi ( str + 2 )		1092215	1					
ANR	1093902	CallExpression	atoi ( str + 2 )		1092215	0					
ANR	1093903	Callee	atoi		1092215	0					
ANR	1093904	Identifier	atoi		1092215	0					
ANR	1093905	ArgumentList	str + 2		1092215	1					
ANR	1093906	Argument	str + 2		1092215	0					
ANR	1093907	AdditiveExpression	str + 2		1092215	0		+			
ANR	1093908	Identifier	str		1092215	0					
ANR	1093909	PrimaryExpression	2		1092215	1					
ANR	1093910	Argument	'r'		1092215	2					
ANR	1093911	PrimaryExpression	'r'		1092215	0					
ANR	1093912	Argument	R_ANAL_REF_TYPE_CALL		1092215	3					
ANR	1093913	Identifier	R_ANAL_REF_TYPE_CALL		1092215	0					
ANR	1093914	Label	case 'J' :	746:2:18827:18835	1092215	81	True				
ANR	1093915	ReturnStatement	"return getref ( core , atoi ( str + 2 ) , 'r' , R_ANAL_REF_TYPE_CODE ) ;"	747:3:18855:18918	1092215	82	True				
ANR	1093916	CallExpression	"getref ( core , atoi ( str + 2 ) , 'r' , R_ANAL_REF_TYPE_CODE )"		1092215	0					
ANR	1093917	Callee	getref		1092215	0					
ANR	1093918	Identifier	getref		1092215	0					
ANR	1093919	ArgumentList	core		1092215	1					
ANR	1093920	Argument	core		1092215	0					
ANR	1093921	Identifier	core		1092215	0					
ANR	1093922	Argument	atoi ( str + 2 )		1092215	1					
ANR	1093923	CallExpression	atoi ( str + 2 )		1092215	0					
ANR	1093924	Callee	atoi		1092215	0					
ANR	1093925	Identifier	atoi		1092215	0					
ANR	1093926	ArgumentList	str + 2		1092215	1					
ANR	1093927	Argument	str + 2		1092215	0					
ANR	1093928	AdditiveExpression	str + 2		1092215	0		+			
ANR	1093929	Identifier	str		1092215	0					
ANR	1093930	PrimaryExpression	2		1092215	1					
ANR	1093931	Argument	'r'		1092215	2					
ANR	1093932	PrimaryExpression	'r'		1092215	0					
ANR	1093933	Argument	R_ANAL_REF_TYPE_CODE		1092215	3					
ANR	1093934	Identifier	R_ANAL_REF_TYPE_CODE		1092215	0					
ANR	1093935	Label	case 'X' :	748:2:18922:18930	1092215	83	True				
ANR	1093936	ReturnStatement	"return getref ( core , atoi ( str + 2 ) , 'x' , R_ANAL_REF_TYPE_CALL ) ;"	749:3:18950:19013	1092215	84	True				
ANR	1093937	CallExpression	"getref ( core , atoi ( str + 2 ) , 'x' , R_ANAL_REF_TYPE_CALL )"		1092215	0					
ANR	1093938	Callee	getref		1092215	0					
ANR	1093939	Identifier	getref		1092215	0					
ANR	1093940	ArgumentList	core		1092215	1					
ANR	1093941	Argument	core		1092215	0					
ANR	1093942	Identifier	core		1092215	0					
ANR	1093943	Argument	atoi ( str + 2 )		1092215	1					
ANR	1093944	CallExpression	atoi ( str + 2 )		1092215	0					
ANR	1093945	Callee	atoi		1092215	0					
ANR	1093946	Identifier	atoi		1092215	0					
ANR	1093947	ArgumentList	str + 2		1092215	1					
ANR	1093948	Argument	str + 2		1092215	0					
ANR	1093949	AdditiveExpression	str + 2		1092215	0		+			
ANR	1093950	Identifier	str		1092215	0					
ANR	1093951	PrimaryExpression	2		1092215	1					
ANR	1093952	Argument	'x'		1092215	2					
ANR	1093953	PrimaryExpression	'x'		1092215	0					
ANR	1093954	Argument	R_ANAL_REF_TYPE_CALL		1092215	3					
ANR	1093955	Identifier	R_ANAL_REF_TYPE_CALL		1092215	0					
ANR	1093956	Label	case 'F' :	750:2:19017:19025	1092215	85	True				
ANR	1093957	ExpressionStatement	"fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"	751:3:19050:19103	1092215	86	True				
ANR	1093958	AssignmentExpression	"fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		1092215	0		=			
ANR	1093959	Identifier	fcn		1092215	0					
ANR	1093960	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		1092215	1					
ANR	1093961	Callee	r_anal_get_fcn_in		1092215	0					
ANR	1093962	Identifier	r_anal_get_fcn_in		1092215	0					
ANR	1093963	ArgumentList	core -> anal		1092215	1					
ANR	1093964	Argument	core -> anal		1092215	0					
ANR	1093965	PtrMemberAccess	core -> anal		1092215	0					
ANR	1093966	Identifier	core		1092215	0					
ANR	1093967	Identifier	anal		1092215	1					
ANR	1093968	Argument	core -> offset		1092215	1					
ANR	1093969	PtrMemberAccess	core -> offset		1092215	0					
ANR	1093970	Identifier	core		1092215	0					
ANR	1093971	Identifier	offset		1092215	1					
ANR	1093972	Argument	0		1092215	2					
ANR	1093973	PrimaryExpression	0		1092215	0					
ANR	1093974	IfStatement	if ( fcn )		1092215	87					
ANR	1093975	Condition	fcn	752:7:19112:19114	1092215	0	True				
ANR	1093976	Identifier	fcn		1092215	0					
ANR	1093977	CompoundStatement		303:12:7589:7589	1092215	1					
ANR	1093978	SwitchStatement	switch ( str [ 2 ] )		1092215	0					
ANR	1093979	Condition	str [ 2 ]	753:12:19131:19136	1092215	0	True				
ANR	1093980	ArrayIndexing	str [ 2 ]		1092215	0					
ANR	1093981	Identifier	str		1092215	0					
ANR	1093982	PrimaryExpression	2		1092215	1					
ANR	1093983	CompoundStatement		304:20:7611:7611	1092215	1					
ANR	1093984	Label	case 'B' :	755:4:19183:19191	1092215	0	True				
ANR	1093985	ReturnStatement	return fcn -> addr ;	755:14:19193:19209	1092215	1	True				
ANR	1093986	PtrMemberAccess	fcn -> addr		1092215	0					
ANR	1093987	Identifier	fcn		1092215	0					
ANR	1093988	Identifier	addr		1092215	1					
ANR	1093989	Label	case 'E' :	756:4:19224:19232	1092215	2	True				
ANR	1093990	ReturnStatement	return fcn -> addr + fcn -> _size ;	756:14:19234:19263	1092215	3	True				
ANR	1093991	AdditiveExpression	fcn -> addr + fcn -> _size		1092215	0		+			
ANR	1093992	PtrMemberAccess	fcn -> addr		1092215	0					
ANR	1093993	Identifier	fcn		1092215	0					
ANR	1093994	Identifier	addr		1092215	1					
ANR	1093995	PtrMemberAccess	fcn -> _size		1092215	1					
ANR	1093996	Identifier	fcn		1092215	0					
ANR	1093997	Identifier	_size		1092215	1					
ANR	1093998	Label	case 'S' :	757:4:19276:19284	1092215	4	True				
ANR	1093999	ReturnStatement	return ( str [ 3 ] == 'S' ) ? r_anal_fcn_realsize ( fcn ) : r_anal_fcn_size ( fcn ) ;	757:14:19286:19356	1092215	5	True				
ANR	1094000	ConditionalExpression	( str [ 3 ] == 'S' ) ? r_anal_fcn_realsize ( fcn ) : r_anal_fcn_size ( fcn )		1092215	0					
ANR	1094001	Condition	str [ 3 ] == 'S'		1092215	0					
ANR	1094002	EqualityExpression	str [ 3 ] == 'S'		1092215	0		==			
ANR	1094003	ArrayIndexing	str [ 3 ]		1092215	0					
ANR	1094004	Identifier	str		1092215	0					
ANR	1094005	PrimaryExpression	3		1092215	1					
ANR	1094006	PrimaryExpression	'S'		1092215	1					
ANR	1094007	CallExpression	r_anal_fcn_realsize ( fcn )		1092215	1					
ANR	1094008	Callee	r_anal_fcn_realsize		1092215	0					
ANR	1094009	Identifier	r_anal_fcn_realsize		1092215	0					
ANR	1094010	ArgumentList	fcn		1092215	1					
ANR	1094011	Argument	fcn		1092215	0					
ANR	1094012	Identifier	fcn		1092215	0					
ANR	1094013	CallExpression	r_anal_fcn_size ( fcn )		1092215	2					
ANR	1094014	Callee	r_anal_fcn_size		1092215	0					
ANR	1094015	Identifier	r_anal_fcn_size		1092215	0					
ANR	1094016	ArgumentList	fcn		1092215	1					
ANR	1094017	Argument	fcn		1092215	0					
ANR	1094018	Identifier	fcn		1092215	0					
ANR	1094019	Label	case 'I' :	758:4:19362:19370	1092215	6	True				
ANR	1094020	ReturnStatement	return fcn -> ninstr ;	758:14:19372:19390	1092215	7	True				
ANR	1094021	PtrMemberAccess	fcn -> ninstr		1092215	0					
ANR	1094022	Identifier	fcn		1092215	0					
ANR	1094023	Identifier	ninstr		1092215	1					
ANR	1094024	Label	case 'b' :	760:4:19431:19439	1092215	8	True				
ANR	1094025	ReturnStatement	"return bbBegin ( fcn , core -> offset ) ;"	760:14:19441:19475	1092215	9	True				
ANR	1094026	CallExpression	"bbBegin ( fcn , core -> offset )"		1092215	0					
ANR	1094027	Callee	bbBegin		1092215	0					
ANR	1094028	Identifier	bbBegin		1092215	0					
ANR	1094029	ArgumentList	fcn		1092215	1					
ANR	1094030	Argument	fcn		1092215	0					
ANR	1094031	Identifier	fcn		1092215	0					
ANR	1094032	Argument	core -> offset		1092215	1					
ANR	1094033	PtrMemberAccess	core -> offset		1092215	0					
ANR	1094034	Identifier	core		1092215	0					
ANR	1094035	Identifier	offset		1092215	1					
ANR	1094036	Label	case 'e' :	761:4:19481:19489	1092215	10	True				
ANR	1094037	ReturnStatement	"return bbBegin ( fcn , core -> offset ) + bbSize ( fcn , core -> offset ) ;"	761:14:19491:19554	1092215	11	True				
ANR	1094038	AdditiveExpression	"bbBegin ( fcn , core -> offset ) + bbSize ( fcn , core -> offset )"		1092215	0		+			
ANR	1094039	CallExpression	"bbBegin ( fcn , core -> offset )"		1092215	0					
ANR	1094040	Callee	bbBegin		1092215	0					
ANR	1094041	Identifier	bbBegin		1092215	0					
ANR	1094042	ArgumentList	fcn		1092215	1					
ANR	1094043	Argument	fcn		1092215	0					
ANR	1094044	Identifier	fcn		1092215	0					
ANR	1094045	Argument	core -> offset		1092215	1					
ANR	1094046	PtrMemberAccess	core -> offset		1092215	0					
ANR	1094047	Identifier	core		1092215	0					
ANR	1094048	Identifier	offset		1092215	1					
ANR	1094049	CallExpression	"bbSize ( fcn , core -> offset )"		1092215	1					
ANR	1094050	Callee	bbSize		1092215	0					
ANR	1094051	Identifier	bbSize		1092215	0					
ANR	1094052	ArgumentList	fcn		1092215	1					
ANR	1094053	Argument	fcn		1092215	0					
ANR	1094054	Identifier	fcn		1092215	0					
ANR	1094055	Argument	core -> offset		1092215	1					
ANR	1094056	PtrMemberAccess	core -> offset		1092215	0					
ANR	1094057	Identifier	core		1092215	0					
ANR	1094058	Identifier	offset		1092215	1					
ANR	1094059	Label	case 'i' :	762:4:19560:19568	1092215	12	True				
ANR	1094060	ReturnStatement	"return bbInstructions ( fcn , core -> offset ) ;"	762:14:19570:19611	1092215	13	True				
ANR	1094061	CallExpression	"bbInstructions ( fcn , core -> offset )"		1092215	0					
ANR	1094062	Callee	bbInstructions		1092215	0					
ANR	1094063	Identifier	bbInstructions		1092215	0					
ANR	1094064	ArgumentList	fcn		1092215	1					
ANR	1094065	Argument	fcn		1092215	0					
ANR	1094066	Identifier	fcn		1092215	0					
ANR	1094067	Argument	core -> offset		1092215	1					
ANR	1094068	PtrMemberAccess	core -> offset		1092215	0					
ANR	1094069	Identifier	core		1092215	0					
ANR	1094070	Identifier	offset		1092215	1					
ANR	1094071	Label	case 's' :	763:4:19617:19625	1092215	14	True				
ANR	1094072	ReturnStatement	"return bbSize ( fcn , core -> offset ) ;"	763:14:19627:19660	1092215	15	True				
ANR	1094073	CallExpression	"bbSize ( fcn , core -> offset )"		1092215	0					
ANR	1094074	Callee	bbSize		1092215	0					
ANR	1094075	Identifier	bbSize		1092215	0					
ANR	1094076	ArgumentList	fcn		1092215	1					
ANR	1094077	Argument	fcn		1092215	0					
ANR	1094078	Identifier	fcn		1092215	0					
ANR	1094079	Argument	core -> offset		1092215	1					
ANR	1094080	PtrMemberAccess	core -> offset		1092215	0					
ANR	1094081	Identifier	core		1092215	0					
ANR	1094082	Identifier	offset		1092215	1					
ANR	1094083	Label	case 'j' :	764:4:19666:19674	1092215	16	True				
ANR	1094084	ReturnStatement	"return bbJump ( fcn , core -> offset ) ;"	764:14:19676:19709	1092215	17	True				
ANR	1094085	CallExpression	"bbJump ( fcn , core -> offset )"		1092215	0					
ANR	1094086	Callee	bbJump		1092215	0					
ANR	1094087	Identifier	bbJump		1092215	0					
ANR	1094088	ArgumentList	fcn		1092215	1					
ANR	1094089	Argument	fcn		1092215	0					
ANR	1094090	Identifier	fcn		1092215	0					
ANR	1094091	Argument	core -> offset		1092215	1					
ANR	1094092	PtrMemberAccess	core -> offset		1092215	0					
ANR	1094093	Identifier	core		1092215	0					
ANR	1094094	Identifier	offset		1092215	1					
ANR	1094095	Label	case 'f' :	765:4:19723:19731	1092215	18	True				
ANR	1094096	ReturnStatement	"return bbFail ( fcn , core -> offset ) ;"	765:14:19733:19766	1092215	19	True				
ANR	1094097	CallExpression	"bbFail ( fcn , core -> offset )"		1092215	0					
ANR	1094098	Callee	bbFail		1092215	0					
ANR	1094099	Identifier	bbFail		1092215	0					
ANR	1094100	ArgumentList	fcn		1092215	1					
ANR	1094101	Argument	fcn		1092215	0					
ANR	1094102	Identifier	fcn		1092215	0					
ANR	1094103	Argument	core -> offset		1092215	1					
ANR	1094104	PtrMemberAccess	core -> offset		1092215	0					
ANR	1094105	Identifier	core		1092215	0					
ANR	1094106	Identifier	offset		1092215	1					
ANR	1094107	ReturnStatement	return fcn -> addr ;	767:4:19786:19802	1092215	1	True				
ANR	1094108	PtrMemberAccess	fcn -> addr		1092215	0					
ANR	1094109	Identifier	fcn		1092215	0					
ANR	1094110	Identifier	addr		1092215	1					
ANR	1094111	ReturnStatement	return 0 ;	769:3:19812:19820	1092215	88	True				
ANR	1094112	PrimaryExpression	0		1092215	0					
ANR	1094113	BreakStatement	break ;	771:2:19828:19833	1092215	12	True				
ANR	1094114	Label	default :	772:1:19836:19843	1092215	13	True				
ANR	1094115	Identifier	default		1092215	0					
ANR	1094116	IfStatement	if ( * str >= 'A' )		1092215	14					
ANR	1094117	Condition	* str >= 'A'	773:6:19851:19861	1092215	0	True				
ANR	1094118	RelationalExpression	* str >= 'A'		1092215	0		>=			
ANR	1094119	UnaryOperationExpression	* str		1092215	0					
ANR	1094120	UnaryOperator	*		1092215	0					
ANR	1094121	Identifier	str		1092215	1					
ANR	1094122	PrimaryExpression	'A'		1092215	1					
ANR	1094123	CompoundStatement		350:3:8821:8881	1092215	1					
ANR	1094124	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_fcn_find_name ( core -> anal , str ) ;"	775:3:19906:19965	1092215	0	True				
ANR	1094125	IdentifierDecl	"* fcn = r_anal_fcn_find_name ( core -> anal , str )"		1092215	0					
ANR	1094126	IdentifierDeclType	RAnalFunction *		1092215	0					
ANR	1094127	Identifier	fcn		1092215	1					
ANR	1094128	AssignmentExpression	"* fcn = r_anal_fcn_find_name ( core -> anal , str )"		1092215	2		=			
ANR	1094129	Identifier	fcn		1092215	0					
ANR	1094130	CallExpression	"r_anal_fcn_find_name ( core -> anal , str )"		1092215	1					
ANR	1094131	Callee	r_anal_fcn_find_name		1092215	0					
ANR	1094132	Identifier	r_anal_fcn_find_name		1092215	0					
ANR	1094133	ArgumentList	core -> anal		1092215	1					
ANR	1094134	Argument	core -> anal		1092215	0					
ANR	1094135	PtrMemberAccess	core -> anal		1092215	0					
ANR	1094136	Identifier	core		1092215	0					
ANR	1094137	Identifier	anal		1092215	1					
ANR	1094138	Argument	str		1092215	1					
ANR	1094139	Identifier	str		1092215	0					
ANR	1094140	IfStatement	if ( fcn )		1092215	1					
ANR	1094141	Condition	fcn	776:7:19974:19976	1092215	0	True				
ANR	1094142	Identifier	fcn		1092215	0					
ANR	1094143	CompoundStatement		327:12:8451:8451	1092215	1					
ANR	1094144	IfStatement	if ( ok )		1092215	0					
ANR	1094145	Condition	ok	777:8:19989:19990	1092215	0	True				
ANR	1094146	Identifier	ok		1092215	0					
ANR	1094147	CompoundStatement		328:12:8465:8465	1092215	1					
ANR	1094148	ExpressionStatement	* ok = true	778:5:20000:20010	1092215	0	True				
ANR	1094149	AssignmentExpression	* ok = true		1092215	0		=			
ANR	1094150	UnaryOperationExpression	* ok		1092215	0					
ANR	1094151	UnaryOperator	*		1092215	0					
ANR	1094152	Identifier	ok		1092215	1					
ANR	1094153	Identifier	true		1092215	1					
ANR	1094154	ReturnStatement	return fcn -> addr ;	780:4:20022:20038	1092215	1	True				
ANR	1094155	PtrMemberAccess	fcn -> addr		1092215	0					
ANR	1094156	Identifier	fcn		1092215	0					
ANR	1094157	Identifier	addr		1092215	1					
ANR	1094158	IdentifierDeclStatement	"ut64 addr = r_anal_fcn_label_get ( core -> anal , core -> offset , str ) ;"	783:3:20054:20118	1092215	2	True				
ANR	1094159	IdentifierDecl	"addr = r_anal_fcn_label_get ( core -> anal , core -> offset , str )"		1092215	0					
ANR	1094160	IdentifierDeclType	ut64		1092215	0					
ANR	1094161	Identifier	addr		1092215	1					
ANR	1094162	AssignmentExpression	"addr = r_anal_fcn_label_get ( core -> anal , core -> offset , str )"		1092215	2		=			
ANR	1094163	Identifier	addr		1092215	0					
ANR	1094164	CallExpression	"r_anal_fcn_label_get ( core -> anal , core -> offset , str )"		1092215	1					
ANR	1094165	Callee	r_anal_fcn_label_get		1092215	0					
ANR	1094166	Identifier	r_anal_fcn_label_get		1092215	0					
ANR	1094167	ArgumentList	core -> anal		1092215	1					
ANR	1094168	Argument	core -> anal		1092215	0					
ANR	1094169	PtrMemberAccess	core -> anal		1092215	0					
ANR	1094170	Identifier	core		1092215	0					
ANR	1094171	Identifier	anal		1092215	1					
ANR	1094172	Argument	core -> offset		1092215	1					
ANR	1094173	PtrMemberAccess	core -> offset		1092215	0					
ANR	1094174	Identifier	core		1092215	0					
ANR	1094175	Identifier	offset		1092215	1					
ANR	1094176	Argument	str		1092215	2					
ANR	1094177	Identifier	str		1092215	0					
ANR	1094178	IfStatement	if ( addr != 0 )		1092215	3					
ANR	1094179	Condition	addr != 0	784:7:20127:20135	1092215	0	True				
ANR	1094180	EqualityExpression	addr != 0		1092215	0		!=			
ANR	1094181	Identifier	addr		1092215	0					
ANR	1094182	PrimaryExpression	0		1092215	1					
ANR	1094183	CompoundStatement		335:18:8610:8610	1092215	1					
ANR	1094184	ExpressionStatement	ret = addr	785:4:20144:20154	1092215	0	True				
ANR	1094185	AssignmentExpression	ret = addr		1092215	0		=			
ANR	1094186	Identifier	ret		1092215	0					
ANR	1094187	Identifier	addr		1092215	1					
ANR	1094188	ElseStatement	else		1092215	0					
ANR	1094189	CompoundStatement		337:10:8638:8638	1092215	0					
ANR	1094190	Statement	...	787:4:20172:20174	1092215	0	True				
ANR	1094191	IfStatement	"if ( ( flag = r_flag_get ( core -> flags , str ) ) )"		1092215	4					
ANR	1094192	Condition	"flag = r_flag_get ( core -> flags , str )"	790:7:20195:20232	1092215	0	True				
ANR	1094193	AssignmentExpression	"flag = r_flag_get ( core -> flags , str )"		1092215	0		=			
ANR	1094194	Identifier	flag		1092215	0					
ANR	1094195	CallExpression	"r_flag_get ( core -> flags , str )"		1092215	1					
ANR	1094196	Callee	r_flag_get		1092215	0					
ANR	1094197	Identifier	r_flag_get		1092215	0					
ANR	1094198	ArgumentList	core -> flags		1092215	1					
ANR	1094199	Argument	core -> flags		1092215	0					
ANR	1094200	PtrMemberAccess	core -> flags		1092215	0					
ANR	1094201	Identifier	core		1092215	0					
ANR	1094202	Identifier	flags		1092215	1					
ANR	1094203	Argument	str		1092215	1					
ANR	1094204	Identifier	str		1092215	0					
ANR	1094205	CompoundStatement		341:47:8707:8707	1092215	1					
ANR	1094206	ExpressionStatement	ret = flag -> offset	791:4:20241:20259	1092215	0	True				
ANR	1094207	AssignmentExpression	ret = flag -> offset		1092215	0		=			
ANR	1094208	Identifier	ret		1092215	0					
ANR	1094209	PtrMemberAccess	flag -> offset		1092215	1					
ANR	1094210	Identifier	flag		1092215	0					
ANR	1094211	Identifier	offset		1092215	1					
ANR	1094212	IfStatement	if ( ok )		1092215	1					
ANR	1094213	Condition	ok	792:8:20269:20270	1092215	0	True				
ANR	1094214	Identifier	ok		1092215	0					
ANR	1094215	CompoundStatement		343:12:8745:8745	1092215	1					
ANR	1094216	ExpressionStatement	* ok = true	793:5:20280:20290	1092215	0	True				
ANR	1094217	AssignmentExpression	* ok = true		1092215	0		=			
ANR	1094218	UnaryOperationExpression	* ok		1092215	0					
ANR	1094219	UnaryOperator	*		1092215	0					
ANR	1094220	Identifier	ok		1092215	1					
ANR	1094221	Identifier	true		1092215	1					
ANR	1094222	ReturnStatement	return ret ;	795:4:20302:20312	1092215	2	True				
ANR	1094223	Identifier	ret		1092215	0					
ANR	1094224	IdentifierDeclStatement	"struct r_reg_item_t * r = r_reg_get ( core -> dbg -> reg , str , - 1 ) ;"	799:3:20349:20409	1092215	5	True				
ANR	1094225	IdentifierDecl	"* r = r_reg_get ( core -> dbg -> reg , str , - 1 )"		1092215	0					
ANR	1094226	IdentifierDeclType	struct r_reg_item_t *		1092215	0					
ANR	1094227	Identifier	r		1092215	1					
ANR	1094228	AssignmentExpression	"* r = r_reg_get ( core -> dbg -> reg , str , - 1 )"		1092215	2		=			
ANR	1094229	Identifier	r		1092215	0					
ANR	1094230	CallExpression	"r_reg_get ( core -> dbg -> reg , str , - 1 )"		1092215	1					
ANR	1094231	Callee	r_reg_get		1092215	0					
ANR	1094232	Identifier	r_reg_get		1092215	0					
ANR	1094233	ArgumentList	core -> dbg -> reg		1092215	1					
ANR	1094234	Argument	core -> dbg -> reg		1092215	0					
ANR	1094235	PtrMemberAccess	core -> dbg -> reg		1092215	0					
ANR	1094236	PtrMemberAccess	core -> dbg		1092215	0					
ANR	1094237	Identifier	core		1092215	0					
ANR	1094238	Identifier	dbg		1092215	1					
ANR	1094239	Identifier	reg		1092215	1					
ANR	1094240	Argument	str		1092215	1					
ANR	1094241	Identifier	str		1092215	0					
ANR	1094242	Argument	- 1		1092215	2					
ANR	1094243	UnaryOperationExpression	- 1		1092215	0					
ANR	1094244	UnaryOperator	-		1092215	0					
ANR	1094245	PrimaryExpression	1		1092215	1					
ANR	1094246	IfStatement	if ( ! r )		1092215	6					
ANR	1094247	Condition	! r	800:7:20418:20419	1092215	0	True				
ANR	1094248	UnaryOperationExpression	! r		1092215	0					
ANR	1094249	UnaryOperator	!		1092215	0					
ANR	1094250	Identifier	r		1092215	1					
ANR	1094251	CompoundStatement		352:4:8900:8935	1092215	1					
ANR	1094252	IdentifierDeclStatement	int role = r_reg_get_name_idx ( str ) ;	801:4:20428:20463	1092215	0	True				
ANR	1094253	IdentifierDecl	role = r_reg_get_name_idx ( str )		1092215	0					
ANR	1094254	IdentifierDeclType	int		1092215	0					
ANR	1094255	Identifier	role		1092215	1					
ANR	1094256	AssignmentExpression	role = r_reg_get_name_idx ( str )		1092215	2		=			
ANR	1094257	Identifier	role		1092215	0					
ANR	1094258	CallExpression	r_reg_get_name_idx ( str )		1092215	1					
ANR	1094259	Callee	r_reg_get_name_idx		1092215	0					
ANR	1094260	Identifier	r_reg_get_name_idx		1092215	0					
ANR	1094261	ArgumentList	str		1092215	1					
ANR	1094262	Argument	str		1092215	0					
ANR	1094263	Identifier	str		1092215	0					
ANR	1094264	IfStatement	if ( role != - 1 )		1092215	1					
ANR	1094265	Condition	role != - 1	802:8:20473:20482	1092215	0	True				
ANR	1094266	EqualityExpression	role != - 1		1092215	0		!=			
ANR	1094267	Identifier	role		1092215	0					
ANR	1094268	UnaryOperationExpression	- 1		1092215	1					
ANR	1094269	UnaryOperator	-		1092215	0					
ANR	1094270	PrimaryExpression	1		1092215	1					
ANR	1094271	CompoundStatement		354:5:8964:9021	1092215	1					
ANR	1094272	IdentifierDeclStatement	"const char * alias = r_reg_get_name ( core -> dbg -> reg , role ) ;"	803:5:20492:20549	1092215	0	True				
ANR	1094273	IdentifierDecl	"* alias = r_reg_get_name ( core -> dbg -> reg , role )"		1092215	0					
ANR	1094274	IdentifierDeclType	const char *		1092215	0					
ANR	1094275	Identifier	alias		1092215	1					
ANR	1094276	AssignmentExpression	"* alias = r_reg_get_name ( core -> dbg -> reg , role )"		1092215	2		=			
ANR	1094277	Identifier	alias		1092215	0					
ANR	1094278	CallExpression	"r_reg_get_name ( core -> dbg -> reg , role )"		1092215	1					
ANR	1094279	Callee	r_reg_get_name		1092215	0					
ANR	1094280	Identifier	r_reg_get_name		1092215	0					
ANR	1094281	ArgumentList	core -> dbg -> reg		1092215	1					
ANR	1094282	Argument	core -> dbg -> reg		1092215	0					
ANR	1094283	PtrMemberAccess	core -> dbg -> reg		1092215	0					
ANR	1094284	PtrMemberAccess	core -> dbg		1092215	0					
ANR	1094285	Identifier	core		1092215	0					
ANR	1094286	Identifier	dbg		1092215	1					
ANR	1094287	Identifier	reg		1092215	1					
ANR	1094288	Argument	role		1092215	1					
ANR	1094289	Identifier	role		1092215	0					
ANR	1094290	ExpressionStatement	"r = r_reg_get ( core -> dbg -> reg , alias , - 1 )"	804:5:20556:20597	1092215	1	True				
ANR	1094291	AssignmentExpression	"r = r_reg_get ( core -> dbg -> reg , alias , - 1 )"		1092215	0		=			
ANR	1094292	Identifier	r		1092215	0					
ANR	1094293	CallExpression	"r_reg_get ( core -> dbg -> reg , alias , - 1 )"		1092215	1					
ANR	1094294	Callee	r_reg_get		1092215	0					
ANR	1094295	Identifier	r_reg_get		1092215	0					
ANR	1094296	ArgumentList	core -> dbg -> reg		1092215	1					
ANR	1094297	Argument	core -> dbg -> reg		1092215	0					
ANR	1094298	PtrMemberAccess	core -> dbg -> reg		1092215	0					
ANR	1094299	PtrMemberAccess	core -> dbg		1092215	0					
ANR	1094300	Identifier	core		1092215	0					
ANR	1094301	Identifier	dbg		1092215	1					
ANR	1094302	Identifier	reg		1092215	1					
ANR	1094303	Argument	alias		1092215	1					
ANR	1094304	Identifier	alias		1092215	0					
ANR	1094305	Argument	- 1		1092215	2					
ANR	1094306	UnaryOperationExpression	- 1		1092215	0					
ANR	1094307	UnaryOperator	-		1092215	0					
ANR	1094308	PrimaryExpression	1		1092215	1					
ANR	1094309	IfStatement	if ( r )		1092215	2					
ANR	1094310	Condition	r	805:9:20608:20608	1092215	0	True				
ANR	1094311	Identifier	r		1092215	0					
ANR	1094312	CompoundStatement		356:12:9083:9083	1092215	1					
ANR	1094313	IfStatement	if ( ok )		1092215	0					
ANR	1094314	Condition	ok	806:10:20623:20624	1092215	0	True				
ANR	1094315	Identifier	ok		1092215	0					
ANR	1094316	CompoundStatement		357:14:9099:9099	1092215	1					
ANR	1094317	ExpressionStatement	* ok = true	807:7:20636:20646	1092215	0	True				
ANR	1094318	AssignmentExpression	* ok = true		1092215	0		=			
ANR	1094319	UnaryOperationExpression	* ok		1092215	0					
ANR	1094320	UnaryOperator	*		1092215	0					
ANR	1094321	Identifier	ok		1092215	1					
ANR	1094322	Identifier	true		1092215	1					
ANR	1094323	ExpressionStatement	"ret = r_reg_get_value ( core -> dbg -> reg , r )"	809:6:20662:20703	1092215	1	True				
ANR	1094324	AssignmentExpression	"ret = r_reg_get_value ( core -> dbg -> reg , r )"		1092215	0		=			
ANR	1094325	Identifier	ret		1092215	0					
ANR	1094326	CallExpression	"r_reg_get_value ( core -> dbg -> reg , r )"		1092215	1					
ANR	1094327	Callee	r_reg_get_value		1092215	0					
ANR	1094328	Identifier	r_reg_get_value		1092215	0					
ANR	1094329	ArgumentList	core -> dbg -> reg		1092215	1					
ANR	1094330	Argument	core -> dbg -> reg		1092215	0					
ANR	1094331	PtrMemberAccess	core -> dbg -> reg		1092215	0					
ANR	1094332	PtrMemberAccess	core -> dbg		1092215	0					
ANR	1094333	Identifier	core		1092215	0					
ANR	1094334	Identifier	dbg		1092215	1					
ANR	1094335	Identifier	reg		1092215	1					
ANR	1094336	Argument	r		1092215	1					
ANR	1094337	Identifier	r		1092215	0					
ANR	1094338	ReturnStatement	return ret ;	810:6:20711:20721	1092215	2	True				
ANR	1094339	Identifier	ret		1092215	0					
ANR	1094340	ElseStatement	else		1092215	0					
ANR	1094341	CompoundStatement		364:10:9218:9218	1092215	0					
ANR	1094342	IfStatement	if ( ok )		1092215	0					
ANR	1094343	Condition	ok	814:8:20756:20757	1092215	0	True				
ANR	1094344	Identifier	ok		1092215	0					
ANR	1094345	CompoundStatement		365:12:9232:9232	1092215	1					
ANR	1094346	ExpressionStatement	* ok = true	815:5:20767:20777	1092215	0	True				
ANR	1094347	AssignmentExpression	* ok = true		1092215	0		=			
ANR	1094348	UnaryOperationExpression	* ok		1092215	0					
ANR	1094349	UnaryOperator	*		1092215	0					
ANR	1094350	Identifier	ok		1092215	1					
ANR	1094351	Identifier	true		1092215	1					
ANR	1094352	ExpressionStatement	"ret = r_reg_get_value ( core -> dbg -> reg , r )"	817:4:20789:20830	1092215	1	True				
ANR	1094353	AssignmentExpression	"ret = r_reg_get_value ( core -> dbg -> reg , r )"		1092215	0		=			
ANR	1094354	Identifier	ret		1092215	0					
ANR	1094355	CallExpression	"r_reg_get_value ( core -> dbg -> reg , r )"		1092215	1					
ANR	1094356	Callee	r_reg_get_value		1092215	0					
ANR	1094357	Identifier	r_reg_get_value		1092215	0					
ANR	1094358	ArgumentList	core -> dbg -> reg		1092215	1					
ANR	1094359	Argument	core -> dbg -> reg		1092215	0					
ANR	1094360	PtrMemberAccess	core -> dbg -> reg		1092215	0					
ANR	1094361	PtrMemberAccess	core -> dbg		1092215	0					
ANR	1094362	Identifier	core		1092215	0					
ANR	1094363	Identifier	dbg		1092215	1					
ANR	1094364	Identifier	reg		1092215	1					
ANR	1094365	Argument	r		1092215	1					
ANR	1094366	Identifier	r		1092215	0					
ANR	1094367	ReturnStatement	return ret ;	818:4:20836:20846	1092215	2	True				
ANR	1094368	Identifier	ret		1092215	0					
ANR	1094369	BreakStatement	break ;	821:2:20859:20864	1092215	15	True				
ANR	1094370	ReturnStatement	return ret ;	824:1:20871:20881	1092215	9	True				
ANR	1094371	Identifier	ret		1092215	0					
ANR	1094372	ReturnType	static ut64		1092215	1					
ANR	1094373	Identifier	num_callback		1092215	2					
ANR	1094374	ParameterList	"RNum * userptr , const char * str , int * ok"		1092215	3					
ANR	1094375	Parameter	RNum * userptr	450:25:11486:11498	1092215	0	True				
ANR	1094376	ParameterType	RNum *		1092215	0					
ANR	1094377	Identifier	userptr		1092215	1					
ANR	1094378	Parameter	const char * str	450:40:11501:11515	1092215	1	True				
ANR	1094379	ParameterType	const char *		1092215	0					
ANR	1094380	Identifier	str		1092215	1					
ANR	1094381	Parameter	int * ok	450:57:11518:11524	1092215	2	True				
ANR	1094382	ParameterType	int *		1092215	0					
ANR	1094383	Identifier	ok		1092215	1					
ANR	1094384	CFGEntryNode	ENTRY		1092215		True				
ANR	1094385	CFGExitNode	EXIT		1092215		True				
ANR	1094386	Symbol	* fcn		1092215						
ANR	1094387	Symbol	fi -> size		1092215						
ANR	1094388	Symbol	* map		1092215						
ANR	1094389	Symbol	r_debug_reg_get		1092215						
ANR	1094390	Symbol	delta		1092215						
ANR	1094391	Symbol	core -> offset		1092215						
ANR	1094392	Symbol	strchr		1092215						
ANR	1094393	Symbol	& op		1092215						
ANR	1094394	Symbol	r_read_ble8		1092215						
ANR	1094395	Symbol	* core -> assembler		1092215						
ANR	1094396	Symbol	r_num_tail		1092215						
ANR	1094397	Symbol	fcn -> _size		1092215						
ANR	1094398	Symbol	* core -> num		1092215						
ANR	1094399	Symbol	fcn -> ninstr		1092215						
ANR	1094400	Symbol	r_flag_get_i		1092215						
ANR	1094401	Symbol	core -> bin		1092215						
ANR	1094402	Symbol	core -> blocksize		1092215						
ANR	1094403	Symbol	core -> block		1092215						
ANR	1094404	Symbol	lower		1092215						
ANR	1094405	Symbol	iter		1092215						
ANR	1094406	Symbol	r_anal_fcn_find_name		1092215						
ANR	1094407	Symbol	core -> print -> big_endian		1092215						
ANR	1094408	Symbol	R_ANAL_REF_TYPE_DATA		1092215						
ANR	1094409	Symbol	str		1092215						
ANR	1094410	Symbol	core -> print -> cur		1092215						
ANR	1094411	Symbol	size		1092215						
ANR	1094412	Symbol	r_config_get_i		1092215						
ANR	1094413	Symbol	* out		1092215						
ANR	1094414	Symbol	flagName		1092215						
ANR	1094415	Symbol	* flag		1092215						
ANR	1094416	Symbol	* core -> dbg		1092215						
ANR	1094417	Symbol	core -> num -> nc		1092215						
ANR	1094418	Symbol	r_debug_reg_sync		1092215						
ANR	1094419	Symbol	s -> size		1092215						
ANR	1094420	Symbol	flag		1092215						
ANR	1094421	Symbol	& rows		1092215						
ANR	1094422	Symbol	map -> addr		1092215						
ANR	1094423	Symbol	role		1092215						
ANR	1094424	Symbol	core -> sdb		1092215						
ANR	1094425	Symbol	* core		1092215						
ANR	1094426	Symbol	core -> assembler -> bits		1092215						
ANR	1094427	Symbol	core -> assembler		1092215						
ANR	1094428	Symbol	core -> anal		1092215						
ANR	1094429	Symbol	bo		1092215						
ANR	1094430	Symbol	bbJump		1092215						
ANR	1094431	Symbol	out		1092215						
ANR	1094432	Symbol	refsz		1092215						
ANR	1094433	Symbol	fcn		1092215						
ANR	1094434	Symbol	r_anal_fcn_realsize		1092215						
ANR	1094435	Symbol	core -> io		1092215						
ANR	1094436	Symbol	* str		1092215						
ANR	1094437	Symbol	core -> num -> nc . number_value		1092215						
ANR	1094438	Symbol	r_read_ble32		1092215						
ANR	1094439	Symbol	map		1092215						
ANR	1094440	Symbol	R_REG_TYPE_GPR		1092215						
ANR	1094441	Symbol	r_bin_cur_object		1092215						
ANR	1094442	Symbol	R_ANAL_REF_TYPE_CALL		1092215						
ANR	1094443	Symbol	flag -> size		1092215						
ANR	1094444	Symbol	atoi		1092215						
ANR	1094445	Symbol	r_flag_get		1092215						
ANR	1094446	Symbol	bptr		1092215						
ANR	1094447	Symbol	r_reg_get_value		1092215						
ANR	1094448	Symbol	r_sys_getpid		1092215						
ANR	1094449	Symbol	core -> num -> nc . curr_tok		1092215						
ANR	1094450	Symbol	bbBegin		1092215						
ANR	1094451	Symbol	r_read_ble16		1092215						
ANR	1094452	Symbol	R_MIN		1092215						
ANR	1094453	Symbol	core -> flags		1092215						
ANR	1094454	Symbol	* fi		1092215						
ANR	1094455	Symbol	* flagLength		1092215						
ANR	1094456	Symbol	r_bin_get_section_at		1092215						
ANR	1094457	Symbol	off		1092215						
ANR	1094458	Symbol	n		1092215						
ANR	1094459	Symbol	o		1092215						
ANR	1094460	Symbol	s -> vaddr		1092215						
ANR	1094461	Symbol	IS_DIGIT		1092215						
ANR	1094462	Symbol	p		1092215						
ANR	1094463	Symbol	q		1092215						
ANR	1094464	Symbol	buf		1092215						
ANR	1094465	Symbol	* core -> print		1092215						
ANR	1094466	Symbol	r		1092215						
ANR	1094467	Symbol	op . ptr		1092215						
ANR	1094468	Symbol	s		1092215						
ANR	1094469	Symbol	* core -> anal		1092215						
ANR	1094470	Symbol	core -> dbg -> reg		1092215						
ANR	1094471	Symbol	userptr		1092215						
ANR	1094472	Symbol	fcn -> addr		1092215						
ANR	1094473	Symbol	core -> dbg -> pid		1092215						
ANR	1094474	Symbol	* ok		1092215						
ANR	1094475	Symbol	core -> anal -> reg		1092215						
ANR	1094476	Symbol	* flagName		1092215						
ANR	1094477	Symbol	r_anal_fcn_size		1092215						
ANR	1094478	Symbol	op . fail		1092215						
ANR	1094479	Symbol	core -> num -> value		1092215						
ANR	1094480	Symbol	r_itv_begin		1092215						
ANR	1094481	Symbol	strlen		1092215						
ANR	1094482	Symbol	r_io_fd_size		1092215						
ANR	1094483	Symbol	op . jump		1092215						
ANR	1094484	Symbol	r_anal_op_is_eob		1092215						
ANR	1094485	Symbol	* ptr		1092215						
ANR	1094486	Symbol	flag -> offset		1092215						
ANR	1094487	Symbol	core -> num		1092215						
ANR	1094488	Symbol	r_reg_get		1092215						
ANR	1094489	Symbol	ret		1092215						
ANR	1094490	Symbol	op . val		1092215						
ANR	1094491	Symbol	NULL		1092215						
ANR	1094492	Symbol	r_cons_get_size		1092215						
ANR	1094493	Symbol	bbSize		1092215						
ANR	1094494	Symbol	sdb_querys		1092215						
ANR	1094495	Symbol	r_num_calc_index		1092215						
ANR	1094496	Symbol	core		1092215						
ANR	1094497	Symbol	r_reg_get_name_idx		1092215						
ANR	1094498	Symbol	strstr		1092215						
ANR	1094499	Symbol	r_reg_get_name		1092215						
ANR	1094500	Symbol	r_str_replace_char		1092215						
ANR	1094501	Symbol	true		1092215						
ANR	1094502	Symbol	core -> file -> fd		1092215						
ANR	1094503	Symbol	map -> addr_end		1092215						
ANR	1094504	Symbol	core -> print		1092215						
ANR	1094505	Symbol	op . size		1092215						
ANR	1094506	Symbol	bbFail		1092215						
ANR	1094507	Symbol	r_anal_get_fcn_at		1092215						
ANR	1094508	Symbol	map -> itv		1092215						
ANR	1094509	Symbol	fi		1092215						
ANR	1094510	Symbol	dst		1092215						
ANR	1094511	Symbol	core -> num -> nc . errors		1092215						
ANR	1094512	Symbol	R_EMPTY		1092215						
ANR	1094513	Symbol	map -> size		1092215						
ANR	1094514	Symbol	R_ANAL_OP_MASK_BASIC		1092215						
ANR	1094515	Symbol	r_anal_fcn_label_get		1092215						
ANR	1094516	Symbol	r_num_math		1092215						
ANR	1094517	Symbol	r_itv_size		1092215						
ANR	1094518	Symbol	alias		1092215						
ANR	1094519	Symbol	ok		1092215						
ANR	1094520	Symbol	UT64_MAX		1092215						
ANR	1094521	Symbol	addr		1092215						
ANR	1094522	Symbol	* * core		1092215						
ANR	1094523	Symbol	core -> config		1092215						
ANR	1094524	Symbol	op		1092215						
ANR	1094525	Symbol	core -> num -> nc . number_value . n		1092215						
ANR	1094526	Symbol	core -> file		1092215						
ANR	1094527	Symbol	false		1092215						
ANR	1094528	Symbol	s -> paddr		1092215						
ANR	1094529	Symbol	rows		1092215						
ANR	1094530	Symbol	ptr		1092215						
ANR	1094531	Symbol	R_ANAL_REF_TYPE_CODE		1092215						
ANR	1094532	Symbol	* core -> file		1092215						
ANR	1094533	Symbol	clear_bits		1092215						
ANR	1094534	Symbol	r_anal_get_fcn_in		1092215						
ANR	1094535	Symbol	getref		1092215						
ANR	1094536	Symbol	flagLength		1092215						
ANR	1094537	Symbol	core -> prompt_offset		1092215						
ANR	1094538	Symbol	bbInstructions		1092215						
ANR	1094539	Symbol	strdup		1092215						
ANR	1094540	Symbol	* s		1092215						
ANR	1094541	Symbol	r_read_ble64		1092215						
ANR	1094542	Symbol	r_io_map_get		1092215						
ANR	1094543	Symbol	core -> print -> cur_enabled		1092215						
ANR	1094544	Symbol	core -> dbg		1092215						
ANR	1094545	Function	r_core_new	827:0:20886:20985							
ANR	1094546	FunctionDef	r_core_new ()		1094545	0					
ANR	1094547	CompoundStatement		827:26:20912:20985	1094545	0					
ANR	1094548	IdentifierDeclStatement	RCore * c = R_NEW0 ( RCore ) ;	828:1:20915:20940	1094545	0	True				
ANR	1094549	IdentifierDecl	* c = R_NEW0 ( RCore )		1094545	0					
ANR	1094550	IdentifierDeclType	RCore *		1094545	0					
ANR	1094551	Identifier	c		1094545	1					
ANR	1094552	AssignmentExpression	* c = R_NEW0 ( RCore )		1094545	2		=			
ANR	1094553	Identifier	c		1094545	0					
ANR	1094554	CallExpression	R_NEW0 ( RCore )		1094545	1					
ANR	1094555	Callee	R_NEW0		1094545	0					
ANR	1094556	Identifier	R_NEW0		1094545	0					
ANR	1094557	ArgumentList	RCore		1094545	1					
ANR	1094558	Argument	RCore		1094545	0					
ANR	1094559	Identifier	RCore		1094545	0					
ANR	1094560	IfStatement	if ( c )		1094545	1					
ANR	1094561	Condition	c	829:5:20947:20947	1094545	0	True				
ANR	1094562	Identifier	c		1094545	0					
ANR	1094563	CompoundStatement		3:8:37:37	1094545	1					
ANR	1094564	ExpressionStatement	r_core_init ( c )	830:2:20954:20969	1094545	0	True				
ANR	1094565	CallExpression	r_core_init ( c )		1094545	0					
ANR	1094566	Callee	r_core_init		1094545	0					
ANR	1094567	Identifier	r_core_init		1094545	0					
ANR	1094568	ArgumentList	c		1094545	1					
ANR	1094569	Argument	c		1094545	0					
ANR	1094570	Identifier	c		1094545	0					
ANR	1094571	ReturnStatement	return c ;	832:1:20975:20983	1094545	2	True				
ANR	1094572	Identifier	c		1094545	0					
ANR	1094573	ReturnType	R_API RCore *		1094545	1					
ANR	1094574	Identifier	r_core_new		1094545	2					
ANR	1094575	ParameterList			1094545	3					
ANR	1094576	CFGEntryNode	ENTRY		1094545		True				
ANR	1094577	CFGExitNode	EXIT		1094545		True				
ANR	1094578	Symbol	R_NEW0		1094545						
ANR	1094579	Symbol	RCore		1094545						
ANR	1094580	Symbol	c		1094545						
ANR	1094581	DeclStmt									
ANR	1094582	Decl							const char	const char * [ ]	ms_argv
ANR	1094583	DeclStmt									
ANR	1094584	Decl							const char	const char * [ ]	radare_argv
ANR	1094585	Function	autocomplete_mount_point	1034:0:31770:32163							
ANR	1094586	FunctionDef	"autocomplete_mount_point (RLineCompletion * completion , RCore * core , const char * path)"		1094585	0					
ANR	1094587	CompoundStatement		1034:98:31868:32163	1094585	0					
ANR	1094588	IdentifierDeclStatement	RFSRoot * r ;	1035:1:31871:31881	1094585	0	True				
ANR	1094589	IdentifierDecl	* r		1094585	0					
ANR	1094590	IdentifierDeclType	RFSRoot *		1094585	0					
ANR	1094591	Identifier	r		1094585	1					
ANR	1094592	IdentifierDeclStatement	RListIter * iter ;	1036:1:31884:31899	1094585	1	True				
ANR	1094593	IdentifierDecl	* iter		1094585	0					
ANR	1094594	IdentifierDeclType	RListIter *		1094585	0					
ANR	1094595	Identifier	iter		1094585	1					
ANR	1094596	Statement	r_list_foreach	1037:1:31902:31915	1094585	2	True				
ANR	1094597	Statement	(	1037:16:31917:31917	1094585	3	True				
ANR	1094598	Statement	core	1037:17:31918:31921	1094585	4	True				
ANR	1094599	Statement	->	1037:21:31922:31923	1094585	5	True				
ANR	1094600	Statement	fs	1037:23:31924:31925	1094585	6	True				
ANR	1094601	Statement	->	1037:25:31926:31927	1094585	7	True				
ANR	1094602	Statement	roots	1037:27:31928:31932	1094585	8	True				
ANR	1094603	Statement	","	1037:32:31933:31933	1094585	9	True				
ANR	1094604	Statement	iter	1037:34:31935:31938	1094585	10	True				
ANR	1094605	Statement	","	1037:38:31939:31939	1094585	11	True				
ANR	1094606	Statement	r	1037:40:31941:31941	1094585	12	True				
ANR	1094607	Statement	)	1037:41:31942:31942	1094585	13	True				
ANR	1094608	CompoundStatement		6:2:112:154	1094585	14					
ANR	1094609	IdentifierDeclStatement	char * base = strdup ( r -> path ) ;	1038:2:31948:31977	1094585	0	True				
ANR	1094610	IdentifierDecl	* base = strdup ( r -> path )		1094585	0					
ANR	1094611	IdentifierDeclType	char *		1094585	0					
ANR	1094612	Identifier	base		1094585	1					
ANR	1094613	AssignmentExpression	* base = strdup ( r -> path )		1094585	2		=			
ANR	1094614	Identifier	base		1094585	0					
ANR	1094615	CallExpression	strdup ( r -> path )		1094585	1					
ANR	1094616	Callee	strdup		1094585	0					
ANR	1094617	Identifier	strdup		1094585	0					
ANR	1094618	ArgumentList	r -> path		1094585	1					
ANR	1094619	Argument	r -> path		1094585	0					
ANR	1094620	PtrMemberAccess	r -> path		1094585	0					
ANR	1094621	Identifier	r		1094585	0					
ANR	1094622	Identifier	path		1094585	1					
ANR	1094623	IdentifierDeclStatement	"char * ls = ( char * ) r_str_lchr ( base , '/' ) ;"	1039:2:31981:32023	1094585	1	True				
ANR	1094624	IdentifierDecl	"* ls = ( char * ) r_str_lchr ( base , '/' )"		1094585	0					
ANR	1094625	IdentifierDeclType	char *		1094585	0					
ANR	1094626	Identifier	ls		1094585	1					
ANR	1094627	AssignmentExpression	"* ls = ( char * ) r_str_lchr ( base , '/' )"		1094585	2		=			
ANR	1094628	Identifier	ls		1094585	0					
ANR	1094629	CastExpression	"( char * ) r_str_lchr ( base , '/' )"		1094585	1					
ANR	1094630	CastTarget	char *		1094585	0					
ANR	1094631	CallExpression	"r_str_lchr ( base , '/' )"		1094585	1					
ANR	1094632	Callee	r_str_lchr		1094585	0					
ANR	1094633	Identifier	r_str_lchr		1094585	0					
ANR	1094634	ArgumentList	base		1094585	1					
ANR	1094635	Argument	base		1094585	0					
ANR	1094636	Identifier	base		1094585	0					
ANR	1094637	Argument	'/'		1094585	1					
ANR	1094638	PrimaryExpression	'/'		1094585	0					
ANR	1094639	IfStatement	if ( ls )		1094585	2					
ANR	1094640	Condition	ls	1040:6:32031:32032	1094585	0	True				
ANR	1094641	Identifier	ls		1094585	0					
ANR	1094642	CompoundStatement		7:10:166:166	1094585	1					
ANR	1094643	ExpressionStatement	ls ++	1041:3:32040:32044	1094585	0	True				
ANR	1094644	PostIncDecOperationExpression	ls ++		1094585	0					
ANR	1094645	Identifier	ls		1094585	0					
ANR	1094646	IncDec	++		1094585	1					
ANR	1094647	ExpressionStatement	* ls = 0	1042:3:32049:32056	1094585	1	True				
ANR	1094648	AssignmentExpression	* ls = 0		1094585	0		=			
ANR	1094649	UnaryOperationExpression	* ls		1094585	0					
ANR	1094650	UnaryOperator	*		1094585	0					
ANR	1094651	Identifier	ls		1094585	1					
ANR	1094652	PrimaryExpression	0		1094585	1					
ANR	1094653	IfStatement	"if ( ! strcmp ( path , base ) )"		1094585	3					
ANR	1094654	Condition	"! strcmp ( path , base )"	1044:6:32068:32087	1094585	0	True				
ANR	1094655	UnaryOperationExpression	"! strcmp ( path , base )"		1094585	0					
ANR	1094656	UnaryOperator	!		1094585	0					
ANR	1094657	CallExpression	"strcmp ( path , base )"		1094585	1					
ANR	1094658	Callee	strcmp		1094585	0					
ANR	1094659	Identifier	strcmp		1094585	0					
ANR	1094660	ArgumentList	path		1094585	1					
ANR	1094661	Argument	path		1094585	0					
ANR	1094662	Identifier	path		1094585	0					
ANR	1094663	Argument	base		1094585	1					
ANR	1094664	Identifier	base		1094585	0					
ANR	1094665	CompoundStatement		11:28:221:221	1094585	1					
ANR	1094666	ExpressionStatement	"r_line_completion_push ( completion , r -> path )"	1045:3:32095:32139	1094585	0	True				
ANR	1094667	CallExpression	"r_line_completion_push ( completion , r -> path )"		1094585	0					
ANR	1094668	Callee	r_line_completion_push		1094585	0					
ANR	1094669	Identifier	r_line_completion_push		1094585	0					
ANR	1094670	ArgumentList	completion		1094585	1					
ANR	1094671	Argument	completion		1094585	0					
ANR	1094672	Identifier	completion		1094585	0					
ANR	1094673	Argument	r -> path		1094585	1					
ANR	1094674	PtrMemberAccess	r -> path		1094585	0					
ANR	1094675	Identifier	r		1094585	0					
ANR	1094676	Identifier	path		1094585	1					
ANR	1094677	ExpressionStatement	free ( base )	1047:2:32147:32158	1094585	4	True				
ANR	1094678	CallExpression	free ( base )		1094585	0					
ANR	1094679	Callee	free		1094585	0					
ANR	1094680	Identifier	free		1094585	0					
ANR	1094681	ArgumentList	base		1094585	1					
ANR	1094682	Argument	base		1094585	0					
ANR	1094683	Identifier	base		1094585	0					
ANR	1094684	ReturnType	static void		1094585	1					
ANR	1094685	Identifier	autocomplete_mount_point		1094585	2					
ANR	1094686	ParameterList	"RLineCompletion * completion , RCore * core , const char * path"		1094585	3					
ANR	1094687	Parameter	RLineCompletion * completion	1034:38:31808:31834	1094585	0	True				
ANR	1094688	ParameterType	RLineCompletion *		1094585	0					
ANR	1094689	Identifier	completion		1094585	1					
ANR	1094690	Parameter	RCore * core	1034:67:31837:31847	1094585	1	True				
ANR	1094691	ParameterType	RCore *		1094585	0					
ANR	1094692	Identifier	core		1094585	1					
ANR	1094693	Parameter	const char * path	1034:80:31850:31865	1094585	2	True				
ANR	1094694	ParameterType	const char *		1094585	0					
ANR	1094695	Identifier	path		1094585	1					
ANR	1094696	CFGEntryNode	ENTRY		1094585		True				
ANR	1094697	CFGExitNode	EXIT		1094585		True				
ANR	1094698	Symbol	strcmp		1094585						
ANR	1094699	Symbol	completion		1094585						
ANR	1094700	Symbol	ls		1094585						
ANR	1094701	Symbol	iter		1094585						
ANR	1094702	Symbol	* ls		1094585						
ANR	1094703	Symbol	core		1094585						
ANR	1094704	Symbol	path		1094585						
ANR	1094705	Symbol	r		1094585						
ANR	1094706	Symbol	r_str_lchr		1094585						
ANR	1094707	Symbol	strdup		1094585						
ANR	1094708	Symbol	* r		1094585						
ANR	1094709	Symbol	r -> path		1094585						
ANR	1094710	Symbol	base		1094585						
ANR	1094711	Function	autocomplete_ms_path	1051:0:32166:34116							
ANR	1094712	FunctionDef	"autocomplete_ms_path (RLineCompletion * completion , RCore * core , const char * str , const char * path)"		1094711	0					
ANR	1094713	CompoundStatement		1051:110:32276:34116	1094711	0					
ANR	1094714	IdentifierDeclStatement	"char * lpath = NULL , * dirname = NULL , * basename = NULL ;"	1052:1:32279:32333	1094711	0	True				
ANR	1094715	IdentifierDecl	* lpath = NULL		1094711	0					
ANR	1094716	IdentifierDeclType	char *		1094711	0					
ANR	1094717	Identifier	lpath		1094711	1					
ANR	1094718	AssignmentExpression	* lpath = NULL		1094711	2		=			
ANR	1094719	Identifier	NULL		1094711	0					
ANR	1094720	Identifier	NULL		1094711	1					
ANR	1094721	IdentifierDecl	* dirname = NULL		1094711	1					
ANR	1094722	IdentifierDeclType	char *		1094711	0					
ANR	1094723	Identifier	dirname		1094711	1					
ANR	1094724	AssignmentExpression	* dirname = NULL		1094711	2		=			
ANR	1094725	Identifier	NULL		1094711	0					
ANR	1094726	Identifier	NULL		1094711	1					
ANR	1094727	IdentifierDecl	* basename = NULL		1094711	2					
ANR	1094728	IdentifierDeclType	char *		1094711	0					
ANR	1094729	Identifier	basename		1094711	1					
ANR	1094730	AssignmentExpression	* basename = NULL		1094711	2		=			
ANR	1094731	Identifier	NULL		1094711	0					
ANR	1094732	Identifier	NULL		1094711	1					
ANR	1094733	IdentifierDeclStatement	char * p = NULL ;	1053:1:32336:32350	1094711	1	True				
ANR	1094734	IdentifierDecl	* p = NULL		1094711	0					
ANR	1094735	IdentifierDeclType	char *		1094711	0					
ANR	1094736	Identifier	p		1094711	1					
ANR	1094737	AssignmentExpression	* p = NULL		1094711	2		=			
ANR	1094738	Identifier	NULL		1094711	0					
ANR	1094739	Identifier	NULL		1094711	1					
ANR	1094740	IdentifierDeclStatement	"char * pwd = ( core -> rfs && * ( core -> rfs -> cwd ) ) ? * ( core -> rfs -> cwd ) : ""."" ;"	1054:1:32353:32422	1094711	2	True				
ANR	1094741	IdentifierDecl	"* pwd = ( core -> rfs && * ( core -> rfs -> cwd ) ) ? * ( core -> rfs -> cwd ) : ""."""		1094711	0					
ANR	1094742	IdentifierDeclType	char *		1094711	0					
ANR	1094743	Identifier	pwd		1094711	1					
ANR	1094744	AssignmentExpression	"* pwd = ( core -> rfs && * ( core -> rfs -> cwd ) ) ? * ( core -> rfs -> cwd ) : ""."""		1094711	2		=			
ANR	1094745	Identifier	pwd		1094711	0					
ANR	1094746	ConditionalExpression	"( core -> rfs && * ( core -> rfs -> cwd ) ) ? * ( core -> rfs -> cwd ) : ""."""		1094711	1					
ANR	1094747	Condition	core -> rfs && * ( core -> rfs -> cwd )		1094711	0					
ANR	1094748	AndExpression	core -> rfs && * ( core -> rfs -> cwd )		1094711	0		&&			
ANR	1094749	PtrMemberAccess	core -> rfs		1094711	0					
ANR	1094750	Identifier	core		1094711	0					
ANR	1094751	Identifier	rfs		1094711	1					
ANR	1094752	UnaryOperationExpression	* ( core -> rfs -> cwd )		1094711	1					
ANR	1094753	UnaryOperator	*		1094711	0					
ANR	1094754	PtrMemberAccess	core -> rfs -> cwd		1094711	1					
ANR	1094755	PtrMemberAccess	core -> rfs		1094711	0					
ANR	1094756	Identifier	core		1094711	0					
ANR	1094757	Identifier	rfs		1094711	1					
ANR	1094758	Identifier	cwd		1094711	1					
ANR	1094759	UnaryOperationExpression	* ( core -> rfs -> cwd )		1094711	1					
ANR	1094760	UnaryOperator	*		1094711	0					
ANR	1094761	PtrMemberAccess	core -> rfs -> cwd		1094711	1					
ANR	1094762	PtrMemberAccess	core -> rfs		1094711	0					
ANR	1094763	Identifier	core		1094711	0					
ANR	1094764	Identifier	rfs		1094711	1					
ANR	1094765	Identifier	cwd		1094711	1					
ANR	1094766	PrimaryExpression	"""."""		1094711	2					
ANR	1094767	IdentifierDeclStatement	int n = 0 ;	1055:1:32425:32434	1094711	3	True				
ANR	1094768	IdentifierDecl	n = 0		1094711	0					
ANR	1094769	IdentifierDeclType	int		1094711	0					
ANR	1094770	Identifier	n		1094711	1					
ANR	1094771	AssignmentExpression	n = 0		1094711	2		=			
ANR	1094772	Identifier	n		1094711	0					
ANR	1094773	PrimaryExpression	0		1094711	1					
ANR	1094774	IdentifierDeclStatement	RList * list ;	1056:1:32437:32448	1094711	4	True				
ANR	1094775	IdentifierDecl	* list		1094711	0					
ANR	1094776	IdentifierDeclType	RList *		1094711	0					
ANR	1094777	Identifier	list		1094711	1					
ANR	1094778	IdentifierDeclStatement	RListIter * iter ;	1057:1:32451:32466	1094711	5	True				
ANR	1094779	IdentifierDecl	* iter		1094711	0					
ANR	1094780	IdentifierDeclType	RListIter *		1094711	0					
ANR	1094781	Identifier	iter		1094711	1					
ANR	1094782	IdentifierDeclStatement	RFSFile * file ;	1058:1:32469:32482	1094711	6	True				
ANR	1094783	IdentifierDecl	* file		1094711	0					
ANR	1094784	IdentifierDeclType	RFSFile *		1094711	0					
ANR	1094785	Identifier	file		1094711	1					
ANR	1094786	ExpressionStatement	r_return_if_fail ( path )	1059:1:32485:32508	1094711	7	True				
ANR	1094787	CallExpression	r_return_if_fail ( path )		1094711	0					
ANR	1094788	Callee	r_return_if_fail		1094711	0					
ANR	1094789	Identifier	r_return_if_fail		1094711	0					
ANR	1094790	ArgumentList	path		1094711	1					
ANR	1094791	Argument	path		1094711	0					
ANR	1094792	Identifier	path		1094711	0					
ANR	1094793	ExpressionStatement	lpath = r_str_new ( path )	1060:1:32511:32535	1094711	8	True				
ANR	1094794	AssignmentExpression	lpath = r_str_new ( path )		1094711	0		=			
ANR	1094795	Identifier	lpath		1094711	0					
ANR	1094796	CallExpression	r_str_new ( path )		1094711	1					
ANR	1094797	Callee	r_str_new		1094711	0					
ANR	1094798	Identifier	r_str_new		1094711	0					
ANR	1094799	ArgumentList	path		1094711	1					
ANR	1094800	Argument	path		1094711	0					
ANR	1094801	Identifier	path		1094711	0					
ANR	1094802	ExpressionStatement	"p = ( char * ) r_str_last ( lpath , R_SYS_DIR )"	1061:1:32538:32579	1094711	9	True				
ANR	1094803	AssignmentExpression	"p = ( char * ) r_str_last ( lpath , R_SYS_DIR )"		1094711	0		=			
ANR	1094804	Identifier	p		1094711	0					
ANR	1094805	CastExpression	"( char * ) r_str_last ( lpath , R_SYS_DIR )"		1094711	1					
ANR	1094806	CastTarget	char *		1094711	0					
ANR	1094807	CallExpression	"r_str_last ( lpath , R_SYS_DIR )"		1094711	1					
ANR	1094808	Callee	r_str_last		1094711	0					
ANR	1094809	Identifier	r_str_last		1094711	0					
ANR	1094810	ArgumentList	lpath		1094711	1					
ANR	1094811	Argument	lpath		1094711	0					
ANR	1094812	Identifier	lpath		1094711	0					
ANR	1094813	Argument	R_SYS_DIR		1094711	1					
ANR	1094814	Identifier	R_SYS_DIR		1094711	0					
ANR	1094815	IfStatement	if ( p )		1094711	10					
ANR	1094816	Condition	p	1062:5:32586:32586	1094711	0	True				
ANR	1094817	Identifier	p		1094711	0					
ANR	1094818	CompoundStatement		12:8:312:312	1094711	1					
ANR	1094819	ExpressionStatement	* p = 0	1063:2:32593:32599	1094711	0	True				
ANR	1094820	AssignmentExpression	* p = 0		1094711	0		=			
ANR	1094821	UnaryOperationExpression	* p		1094711	0					
ANR	1094822	UnaryOperator	*		1094711	0					
ANR	1094823	Identifier	p		1094711	1					
ANR	1094824	PrimaryExpression	0		1094711	1					
ANR	1094825	IfStatement	if ( p == lpath )		1094711	1					
ANR	1094826	Condition	p == lpath	1064:6:32607:32616	1094711	0	True				
ANR	1094827	EqualityExpression	p == lpath		1094711	0		==			
ANR	1094828	Identifier	p		1094711	0					
ANR	1094829	Identifier	lpath		1094711	1					
ANR	1094830	CompoundStatement		14:18:342:342	1094711	1					
ANR	1094831	ExpressionStatement	"dirname = r_str_new ( ""/"" )"	1065:3:32632:32658	1094711	0	True				
ANR	1094832	AssignmentExpression	"dirname = r_str_new ( ""/"" )"		1094711	0		=			
ANR	1094833	Identifier	dirname		1094711	0					
ANR	1094834	CallExpression	"r_str_new ( ""/"" )"		1094711	1					
ANR	1094835	Callee	r_str_new		1094711	0					
ANR	1094836	Identifier	r_str_new		1094711	0					
ANR	1094837	ArgumentList	"""/"""		1094711	1					
ANR	1094838	Argument	"""/"""		1094711	0					
ANR	1094839	PrimaryExpression	"""/"""		1094711	0					
ANR	1094840	ElseStatement	else		1094711	0					
ANR	1094841	IfStatement	if ( lpath [ 0 ] == '.' )		1094711	0					
ANR	1094842	Condition	lpath [ 0 ] == '.'	1066:13:32673:32687	1094711	0	True				
ANR	1094843	EqualityExpression	lpath [ 0 ] == '.'		1094711	0		==			
ANR	1094844	ArrayIndexing	lpath [ 0 ]		1094711	0					
ANR	1094845	Identifier	lpath		1094711	0					
ANR	1094846	PrimaryExpression	0		1094711	1					
ANR	1094847	PrimaryExpression	'.'		1094711	1					
ANR	1094848	CompoundStatement		16:30:413:413	1094711	1					
ANR	1094849	ExpressionStatement	"dirname = r_str_newf ( ""%s%s"" , pwd , R_SYS_DIR )"	1067:3:32709:32754	1094711	0	True				
ANR	1094850	AssignmentExpression	"dirname = r_str_newf ( ""%s%s"" , pwd , R_SYS_DIR )"		1094711	0		=			
ANR	1094851	Identifier	dirname		1094711	0					
ANR	1094852	CallExpression	"r_str_newf ( ""%s%s"" , pwd , R_SYS_DIR )"		1094711	1					
ANR	1094853	Callee	r_str_newf		1094711	0					
ANR	1094854	Identifier	r_str_newf		1094711	0					
ANR	1094855	ArgumentList	"""%s%s"""		1094711	1					
ANR	1094856	Argument	"""%s%s"""		1094711	0					
ANR	1094857	PrimaryExpression	"""%s%s"""		1094711	0					
ANR	1094858	Argument	pwd		1094711	1					
ANR	1094859	Identifier	pwd		1094711	0					
ANR	1094860	Argument	R_SYS_DIR		1094711	2					
ANR	1094861	Identifier	R_SYS_DIR		1094711	0					
ANR	1094862	ElseStatement	else		1094711	0					
ANR	1094863	IfStatement	if ( lpath [ 0 ] == '/' )		1094711	0					
ANR	1094864	Condition	lpath [ 0 ] == '/'	1068:13:32769:32783	1094711	0	True				
ANR	1094865	EqualityExpression	lpath [ 0 ] == '/'		1094711	0		==			
ANR	1094866	ArrayIndexing	lpath [ 0 ]		1094711	0					
ANR	1094867	Identifier	lpath		1094711	0					
ANR	1094868	PrimaryExpression	0		1094711	1					
ANR	1094869	PrimaryExpression	'/'		1094711	1					
ANR	1094870	CompoundStatement		18:30:509:509	1094711	1					
ANR	1094871	ExpressionStatement	"dirname = r_str_newf ( ""%s%s"" , lpath , R_SYS_DIR )"	1069:9:32809:32856	1094711	0	True				
ANR	1094872	AssignmentExpression	"dirname = r_str_newf ( ""%s%s"" , lpath , R_SYS_DIR )"		1094711	0		=			
ANR	1094873	Identifier	dirname		1094711	0					
ANR	1094874	CallExpression	"r_str_newf ( ""%s%s"" , lpath , R_SYS_DIR )"		1094711	1					
ANR	1094875	Callee	r_str_newf		1094711	0					
ANR	1094876	Identifier	r_str_newf		1094711	0					
ANR	1094877	ArgumentList	"""%s%s"""		1094711	1					
ANR	1094878	Argument	"""%s%s"""		1094711	0					
ANR	1094879	PrimaryExpression	"""%s%s"""		1094711	0					
ANR	1094880	Argument	lpath		1094711	1					
ANR	1094881	Identifier	lpath		1094711	0					
ANR	1094882	Argument	R_SYS_DIR		1094711	2					
ANR	1094883	Identifier	R_SYS_DIR		1094711	0					
ANR	1094884	ElseStatement	else		1094711	0					
ANR	1094885	CompoundStatement		20:13:594:594	1094711	0					
ANR	1094886	IfStatement	if ( strlen ( pwd ) == 1 )		1094711	0					
ANR	1094887	Condition	strlen ( pwd ) == 1	1071:13:32897:32913	1094711	0	True				
ANR	1094888	EqualityExpression	strlen ( pwd ) == 1		1094711	0		==			
ANR	1094889	CallExpression	strlen ( pwd )		1094711	0					
ANR	1094890	Callee	strlen		1094711	0					
ANR	1094891	Identifier	strlen		1094711	0					
ANR	1094892	ArgumentList	pwd		1094711	1					
ANR	1094893	Argument	pwd		1094711	0					
ANR	1094894	Identifier	pwd		1094711	0					
ANR	1094895	PrimaryExpression	1		1094711	1					
ANR	1094896	CompoundStatement		21:32:639:639	1094711	1					
ANR	1094897	ExpressionStatement	"dirname = r_str_newf ( ""%s%s%s"" , R_SYS_DIR , lpath , R_SYS_DIR )"	1072:11:32947:33007	1094711	0	True				
ANR	1094898	AssignmentExpression	"dirname = r_str_newf ( ""%s%s%s"" , R_SYS_DIR , lpath , R_SYS_DIR )"		1094711	0		=			
ANR	1094899	Identifier	dirname		1094711	0					
ANR	1094900	CallExpression	"r_str_newf ( ""%s%s%s"" , R_SYS_DIR , lpath , R_SYS_DIR )"		1094711	1					
ANR	1094901	Callee	r_str_newf		1094711	0					
ANR	1094902	Identifier	r_str_newf		1094711	0					
ANR	1094903	ArgumentList	"""%s%s%s"""		1094711	1					
ANR	1094904	Argument	"""%s%s%s"""		1094711	0					
ANR	1094905	PrimaryExpression	"""%s%s%s"""		1094711	0					
ANR	1094906	Argument	R_SYS_DIR		1094711	1					
ANR	1094907	Identifier	R_SYS_DIR		1094711	0					
ANR	1094908	Argument	lpath		1094711	2					
ANR	1094909	Identifier	lpath		1094711	0					
ANR	1094910	Argument	R_SYS_DIR		1094711	3					
ANR	1094911	Identifier	R_SYS_DIR		1094711	0					
ANR	1094912	ElseStatement	else		1094711	0					
ANR	1094913	CompoundStatement		23:16:748:748	1094711	0					
ANR	1094914	ExpressionStatement	"dirname = r_str_newf ( ""%s%s%s%s"" , pwd , R_SYS_DIR , lpath , R_SYS_DIR )"	1074:4:33031:33098	1094711	0	True				
ANR	1094915	AssignmentExpression	"dirname = r_str_newf ( ""%s%s%s%s"" , pwd , R_SYS_DIR , lpath , R_SYS_DIR )"		1094711	0		=			
ANR	1094916	Identifier	dirname		1094711	0					
ANR	1094917	CallExpression	"r_str_newf ( ""%s%s%s%s"" , pwd , R_SYS_DIR , lpath , R_SYS_DIR )"		1094711	1					
ANR	1094918	Callee	r_str_newf		1094711	0					
ANR	1094919	Identifier	r_str_newf		1094711	0					
ANR	1094920	ArgumentList	"""%s%s%s%s"""		1094711	1					
ANR	1094921	Argument	"""%s%s%s%s"""		1094711	0					
ANR	1094922	PrimaryExpression	"""%s%s%s%s"""		1094711	0					
ANR	1094923	Argument	pwd		1094711	1					
ANR	1094924	Identifier	pwd		1094711	0					
ANR	1094925	Argument	R_SYS_DIR		1094711	2					
ANR	1094926	Identifier	R_SYS_DIR		1094711	0					
ANR	1094927	Argument	lpath		1094711	3					
ANR	1094928	Identifier	lpath		1094711	0					
ANR	1094929	Argument	R_SYS_DIR		1094711	4					
ANR	1094930	Identifier	R_SYS_DIR		1094711	0					
ANR	1094931	ExpressionStatement	basename = r_str_new ( p + 1 )	1077:2:33117:33145	1094711	2	True				
ANR	1094932	AssignmentExpression	basename = r_str_new ( p + 1 )		1094711	0		=			
ANR	1094933	Identifier	basename		1094711	0					
ANR	1094934	CallExpression	r_str_new ( p + 1 )		1094711	1					
ANR	1094935	Callee	r_str_new		1094711	0					
ANR	1094936	Identifier	r_str_new		1094711	0					
ANR	1094937	ArgumentList	p + 1		1094711	1					
ANR	1094938	Argument	p + 1		1094711	0					
ANR	1094939	AdditiveExpression	p + 1		1094711	0		+			
ANR	1094940	Identifier	p		1094711	0					
ANR	1094941	PrimaryExpression	1		1094711	1					
ANR	1094942	ElseStatement	else		1094711	0					
ANR	1094943	CompoundStatement		28:8:878:878	1094711	0					
ANR	1094944	IfStatement	if ( strlen ( pwd ) == 1 )		1094711	0					
ANR	1094945	Condition	strlen ( pwd ) == 1	1079:10:33174:33190	1094711	0	True				
ANR	1094946	EqualityExpression	strlen ( pwd ) == 1		1094711	0		==			
ANR	1094947	CallExpression	strlen ( pwd )		1094711	0					
ANR	1094948	Callee	strlen		1094711	0					
ANR	1094949	Identifier	strlen		1094711	0					
ANR	1094950	ArgumentList	pwd		1094711	1					
ANR	1094951	Argument	pwd		1094711	0					
ANR	1094952	Identifier	pwd		1094711	0					
ANR	1094953	PrimaryExpression	1		1094711	1					
ANR	1094954	CompoundStatement		29:29:916:916	1094711	1					
ANR	1094955	ExpressionStatement	"dirname = r_str_newf ( ""%s"" , R_SYS_DIR )"	1080:9:33204:33242	1094711	0	True				
ANR	1094956	AssignmentExpression	"dirname = r_str_newf ( ""%s"" , R_SYS_DIR )"		1094711	0		=			
ANR	1094957	Identifier	dirname		1094711	0					
ANR	1094958	CallExpression	"r_str_newf ( ""%s"" , R_SYS_DIR )"		1094711	1					
ANR	1094959	Callee	r_str_newf		1094711	0					
ANR	1094960	Identifier	r_str_newf		1094711	0					
ANR	1094961	ArgumentList	"""%s"""		1094711	1					
ANR	1094962	Argument	"""%s"""		1094711	0					
ANR	1094963	PrimaryExpression	"""%s"""		1094711	0					
ANR	1094964	Argument	R_SYS_DIR		1094711	1					
ANR	1094965	Identifier	R_SYS_DIR		1094711	0					
ANR	1094966	ElseStatement	else		1094711	0					
ANR	1094967	CompoundStatement		31:13:980:980	1094711	0					
ANR	1094968	ExpressionStatement	"dirname = r_str_newf ( ""%s%s"" , pwd , R_SYS_DIR )"	1082:9:33268:33313	1094711	0	True				
ANR	1094969	AssignmentExpression	"dirname = r_str_newf ( ""%s%s"" , pwd , R_SYS_DIR )"		1094711	0		=			
ANR	1094970	Identifier	dirname		1094711	0					
ANR	1094971	CallExpression	"r_str_newf ( ""%s%s"" , pwd , R_SYS_DIR )"		1094711	1					
ANR	1094972	Callee	r_str_newf		1094711	0					
ANR	1094973	Identifier	r_str_newf		1094711	0					
ANR	1094974	ArgumentList	"""%s%s"""		1094711	1					
ANR	1094975	Argument	"""%s%s"""		1094711	0					
ANR	1094976	PrimaryExpression	"""%s%s"""		1094711	0					
ANR	1094977	Argument	pwd		1094711	1					
ANR	1094978	Identifier	pwd		1094711	0					
ANR	1094979	Argument	R_SYS_DIR		1094711	2					
ANR	1094980	Identifier	R_SYS_DIR		1094711	0					
ANR	1094981	ExpressionStatement	basename = r_str_new ( lpath )	1084:2:33325:33353	1094711	1	True				
ANR	1094982	AssignmentExpression	basename = r_str_new ( lpath )		1094711	0		=			
ANR	1094983	Identifier	basename		1094711	0					
ANR	1094984	CallExpression	r_str_new ( lpath )		1094711	1					
ANR	1094985	Callee	r_str_new		1094711	0					
ANR	1094986	Identifier	r_str_new		1094711	0					
ANR	1094987	ArgumentList	lpath		1094711	1					
ANR	1094988	Argument	lpath		1094711	0					
ANR	1094989	Identifier	lpath		1094711	0					
ANR	1094990	IfStatement	if ( ! dirname || ! basename )		1094711	11					
ANR	1094991	Condition	! dirname || ! basename	1087:5:33364:33384	1094711	0	True				
ANR	1094992	OrExpression	! dirname || ! basename		1094711	0		||			
ANR	1094993	UnaryOperationExpression	! dirname		1094711	0					
ANR	1094994	UnaryOperator	!		1094711	0					
ANR	1094995	Identifier	dirname		1094711	1					
ANR	1094996	UnaryOperationExpression	! basename		1094711	1					
ANR	1094997	UnaryOperator	!		1094711	0					
ANR	1094998	Identifier	basename		1094711	1					
ANR	1094999	CompoundStatement		37:28:1110:1110	1094711	1					
ANR	1095000	GotoStatement	goto out ;	1088:2:33391:33399	1094711	0	True				
ANR	1095001	Identifier	out		1094711	0					
ANR	1095002	ExpressionStatement	"list = r_fs_dir ( core -> fs , dirname )"	1090:1:33405:33439	1094711	12	True				
ANR	1095003	AssignmentExpression	"list = r_fs_dir ( core -> fs , dirname )"		1094711	0		=			
ANR	1095004	Identifier	list		1094711	0					
ANR	1095005	CallExpression	"r_fs_dir ( core -> fs , dirname )"		1094711	1					
ANR	1095006	Callee	r_fs_dir		1094711	0					
ANR	1095007	Identifier	r_fs_dir		1094711	0					
ANR	1095008	ArgumentList	core -> fs		1094711	1					
ANR	1095009	Argument	core -> fs		1094711	0					
ANR	1095010	PtrMemberAccess	core -> fs		1094711	0					
ANR	1095011	Identifier	core		1094711	0					
ANR	1095012	Identifier	fs		1094711	1					
ANR	1095013	Argument	dirname		1094711	1					
ANR	1095014	Identifier	dirname		1094711	0					
ANR	1095015	ExpressionStatement	n = strlen ( basename )	1091:1:33442:33463	1094711	13	True				
ANR	1095016	AssignmentExpression	n = strlen ( basename )		1094711	0		=			
ANR	1095017	Identifier	n		1094711	0					
ANR	1095018	CallExpression	strlen ( basename )		1094711	1					
ANR	1095019	Callee	strlen		1094711	0					
ANR	1095020	Identifier	strlen		1094711	0					
ANR	1095021	ArgumentList	basename		1094711	1					
ANR	1095022	Argument	basename		1094711	0					
ANR	1095023	Identifier	basename		1094711	0					
ANR	1095024	IdentifierDeclStatement	"bool chgdir = ! strncmp ( str , ""cd  "" , 3 ) ;"	1092:1:33466:33505	1094711	14	True				
ANR	1095025	IdentifierDecl	"chgdir = ! strncmp ( str , ""cd  "" , 3 )"		1094711	0					
ANR	1095026	IdentifierDeclType	bool		1094711	0					
ANR	1095027	Identifier	chgdir		1094711	1					
ANR	1095028	AssignmentExpression	"chgdir = ! strncmp ( str , ""cd  "" , 3 )"		1094711	2		=			
ANR	1095029	Identifier	chgdir		1094711	0					
ANR	1095030	UnaryOperationExpression	"! strncmp ( str , ""cd  "" , 3 )"		1094711	1					
ANR	1095031	UnaryOperator	!		1094711	0					
ANR	1095032	CallExpression	"strncmp ( str , ""cd  "" , 3 )"		1094711	1					
ANR	1095033	Callee	strncmp		1094711	0					
ANR	1095034	Identifier	strncmp		1094711	0					
ANR	1095035	ArgumentList	str		1094711	1					
ANR	1095036	Argument	str		1094711	0					
ANR	1095037	Identifier	str		1094711	0					
ANR	1095038	Argument	"""cd  """		1094711	1					
ANR	1095039	PrimaryExpression	"""cd  """		1094711	0					
ANR	1095040	Argument	3		1094711	2					
ANR	1095041	PrimaryExpression	3		1094711	0					
ANR	1095042	IfStatement	if ( list )		1094711	15					
ANR	1095043	Condition	list	1093:5:33512:33515	1094711	0	True				
ANR	1095044	Identifier	list		1094711	0					
ANR	1095045	CompoundStatement		43:11:1241:1241	1094711	1					
ANR	1095046	Statement	r_list_foreach	1094:2:33522:33535	1094711	0	True				
ANR	1095047	Statement	(	1094:17:33537:33537	1094711	1	True				
ANR	1095048	Statement	list	1094:18:33538:33541	1094711	2	True				
ANR	1095049	Statement	","	1094:22:33542:33542	1094711	3	True				
ANR	1095050	Statement	iter	1094:24:33544:33547	1094711	4	True				
ANR	1095051	Statement	","	1094:28:33548:33548	1094711	5	True				
ANR	1095052	Statement	file	1094:30:33550:33553	1094711	6	True				
ANR	1095053	Statement	)	1094:34:33554:33554	1094711	7	True				
ANR	1095054	CompoundStatement		44:36:1279:1279	1094711	8					
ANR	1095055	IfStatement	if ( ! file )		1094711	0					
ANR	1095056	Condition	! file	1095:7:33565:33569	1094711	0	True				
ANR	1095057	UnaryOperationExpression	! file		1094711	0					
ANR	1095058	UnaryOperator	!		1094711	0					
ANR	1095059	Identifier	file		1094711	1					
ANR	1095060	CompoundStatement		45:14:1295:1295	1094711	1					
ANR	1095061	ContinueStatement	continue ;	1096:4:33578:33586	1094711	0	True				
ANR	1095062	IfStatement	"if ( ! basename [ 0 ] || ! strncmp ( file -> name , basename , n ) )"		1094711	1					
ANR	1095063	Condition	"! basename [ 0 ] || ! strncmp ( file -> name , basename , n )"	1098:7:33600:33649	1094711	0	True				
ANR	1095064	OrExpression	"! basename [ 0 ] || ! strncmp ( file -> name , basename , n )"		1094711	0		||			
ANR	1095065	UnaryOperationExpression	! basename [ 0 ]		1094711	0					
ANR	1095066	UnaryOperator	!		1094711	0					
ANR	1095067	ArrayIndexing	basename [ 0 ]		1094711	1					
ANR	1095068	Identifier	basename		1094711	0					
ANR	1095069	PrimaryExpression	0		1094711	1					
ANR	1095070	UnaryOperationExpression	"! strncmp ( file -> name , basename , n )"		1094711	1					
ANR	1095071	UnaryOperator	!		1094711	0					
ANR	1095072	CallExpression	"strncmp ( file -> name , basename , n )"		1094711	1					
ANR	1095073	Callee	strncmp		1094711	0					
ANR	1095074	Identifier	strncmp		1094711	0					
ANR	1095075	ArgumentList	file -> name		1094711	1					
ANR	1095076	Argument	file -> name		1094711	0					
ANR	1095077	PtrMemberAccess	file -> name		1094711	0					
ANR	1095078	Identifier	file		1094711	0					
ANR	1095079	Identifier	name		1094711	1					
ANR	1095080	Argument	basename		1094711	1					
ANR	1095081	Identifier	basename		1094711	0					
ANR	1095082	Argument	n		1094711	2					
ANR	1095083	Identifier	n		1094711	0					
ANR	1095084	CompoundStatement		49:4:1382:1440	1094711	1					
ANR	1095085	IdentifierDeclStatement	"char * tmpstring = r_str_newf ( ""%s%s"" , dirname , file -> name ) ;"	1099:4:33659:33717	1094711	0	True				
ANR	1095086	IdentifierDecl	"* tmpstring = r_str_newf ( ""%s%s"" , dirname , file -> name )"		1094711	0					
ANR	1095087	IdentifierDeclType	char *		1094711	0					
ANR	1095088	Identifier	tmpstring		1094711	1					
ANR	1095089	AssignmentExpression	"* tmpstring = r_str_newf ( ""%s%s"" , dirname , file -> name )"		1094711	2		=			
ANR	1095090	Identifier	tmpstring		1094711	0					
ANR	1095091	CallExpression	"r_str_newf ( ""%s%s"" , dirname , file -> name )"		1094711	1					
ANR	1095092	Callee	r_str_newf		1094711	0					
ANR	1095093	Identifier	r_str_newf		1094711	0					
ANR	1095094	ArgumentList	"""%s%s"""		1094711	1					
ANR	1095095	Argument	"""%s%s"""		1094711	0					
ANR	1095096	PrimaryExpression	"""%s%s"""		1094711	0					
ANR	1095097	Argument	dirname		1094711	1					
ANR	1095098	Identifier	dirname		1094711	0					
ANR	1095099	Argument	file -> name		1094711	2					
ANR	1095100	PtrMemberAccess	file -> name		1094711	0					
ANR	1095101	Identifier	file		1094711	0					
ANR	1095102	Identifier	name		1094711	1					
ANR	1095103	IfStatement	if ( r_file_is_directory ( tmpstring ) )		1094711	1					
ANR	1095104	Condition	r_file_is_directory ( tmpstring )	1100:8:33727:33757	1094711	0	True				
ANR	1095105	CallExpression	r_file_is_directory ( tmpstring )		1094711	0					
ANR	1095106	Callee	r_file_is_directory		1094711	0					
ANR	1095107	Identifier	r_file_is_directory		1094711	0					
ANR	1095108	ArgumentList	tmpstring		1094711	1					
ANR	1095109	Argument	tmpstring		1094711	0					
ANR	1095110	Identifier	tmpstring		1094711	0					
ANR	1095111	CompoundStatement		51:5:1490:1529	1094711	1					
ANR	1095112	IdentifierDeclStatement	"char * s = r_str_newf ( ""%s/"" , tmpstring ) ;"	1101:5:33767:33806	1094711	0	True				
ANR	1095113	IdentifierDecl	"* s = r_str_newf ( ""%s/"" , tmpstring )"		1094711	0					
ANR	1095114	IdentifierDeclType	char *		1094711	0					
ANR	1095115	Identifier	s		1094711	1					
ANR	1095116	AssignmentExpression	"* s = r_str_newf ( ""%s/"" , tmpstring )"		1094711	2		=			
ANR	1095117	Identifier	s		1094711	0					
ANR	1095118	CallExpression	"r_str_newf ( ""%s/"" , tmpstring )"		1094711	1					
ANR	1095119	Callee	r_str_newf		1094711	0					
ANR	1095120	Identifier	r_str_newf		1094711	0					
ANR	1095121	ArgumentList	"""%s/"""		1094711	1					
ANR	1095122	Argument	"""%s/"""		1094711	0					
ANR	1095123	PrimaryExpression	"""%s/"""		1094711	0					
ANR	1095124	Argument	tmpstring		1094711	1					
ANR	1095125	Identifier	tmpstring		1094711	0					
ANR	1095126	ExpressionStatement	"r_line_completion_push ( completion , s )"	1102:5:33813:33851	1094711	1	True				
ANR	1095127	CallExpression	"r_line_completion_push ( completion , s )"		1094711	0					
ANR	1095128	Callee	r_line_completion_push		1094711	0					
ANR	1095129	Identifier	r_line_completion_push		1094711	0					
ANR	1095130	ArgumentList	completion		1094711	1					
ANR	1095131	Argument	completion		1094711	0					
ANR	1095132	Identifier	completion		1094711	0					
ANR	1095133	Argument	s		1094711	1					
ANR	1095134	Identifier	s		1094711	0					
ANR	1095135	ExpressionStatement	free ( s )	1103:5:33858:33866	1094711	2	True				
ANR	1095136	CallExpression	free ( s )		1094711	0					
ANR	1095137	Callee	free		1094711	0					
ANR	1095138	Identifier	free		1094711	0					
ANR	1095139	ArgumentList	s		1094711	1					
ANR	1095140	Argument	s		1094711	0					
ANR	1095141	Identifier	s		1094711	0					
ANR	1095142	ElseStatement	else		1094711	0					
ANR	1095143	IfStatement	if ( ! chgdir )		1094711	0					
ANR	1095144	Condition	! chgdir	1104:15:33883:33889	1094711	0	True				
ANR	1095145	UnaryOperationExpression	! chgdir		1094711	0					
ANR	1095146	UnaryOperator	!		1094711	0					
ANR	1095147	Identifier	chgdir		1094711	1					
ANR	1095148	CompoundStatement		54:24:1615:1615	1094711	1					
ANR	1095149	ExpressionStatement	"r_line_completion_push ( completion , tmpstring )"	1105:5:33899:33945	1094711	0	True				
ANR	1095150	CallExpression	"r_line_completion_push ( completion , tmpstring )"		1094711	0					
ANR	1095151	Callee	r_line_completion_push		1094711	0					
ANR	1095152	Identifier	r_line_completion_push		1094711	0					
ANR	1095153	ArgumentList	completion		1094711	1					
ANR	1095154	Argument	completion		1094711	0					
ANR	1095155	Identifier	completion		1094711	0					
ANR	1095156	Argument	tmpstring		1094711	1					
ANR	1095157	Identifier	tmpstring		1094711	0					
ANR	1095158	ExpressionStatement	free ( tmpstring )	1107:4:33957:33973	1094711	2	True				
ANR	1095159	CallExpression	free ( tmpstring )		1094711	0					
ANR	1095160	Callee	free		1094711	0					
ANR	1095161	Identifier	free		1094711	0					
ANR	1095162	ArgumentList	tmpstring		1094711	1					
ANR	1095163	Argument	tmpstring		1094711	0					
ANR	1095164	Identifier	tmpstring		1094711	0					
ANR	1095165	ExpressionStatement	r_list_free ( list )	1110:2:33986:34004	1094711	9	True				
ANR	1095166	CallExpression	r_list_free ( list )		1094711	0					
ANR	1095167	Callee	r_list_free		1094711	0					
ANR	1095168	Identifier	r_list_free		1094711	0					
ANR	1095169	ArgumentList	list		1094711	1					
ANR	1095170	Argument	list		1094711	0					
ANR	1095171	Identifier	list		1094711	0					
ANR	1095172	ExpressionStatement	"autocomplete_mount_point ( completion , core , path )"	1112:1:34010:34059	1094711	16	True				
ANR	1095173	CallExpression	"autocomplete_mount_point ( completion , core , path )"		1094711	0					
ANR	1095174	Callee	autocomplete_mount_point		1094711	0					
ANR	1095175	Identifier	autocomplete_mount_point		1094711	0					
ANR	1095176	ArgumentList	completion		1094711	1					
ANR	1095177	Argument	completion		1094711	0					
ANR	1095178	Identifier	completion		1094711	0					
ANR	1095179	Argument	core		1094711	1					
ANR	1095180	Identifier	core		1094711	0					
ANR	1095181	Argument	path		1094711	2					
ANR	1095182	Identifier	path		1094711	0					
ANR	1095183	Label	out :	1113:0:34061:34064	1094711	17	True				
ANR	1095184	Identifier	out		1094711	0					
ANR	1095185	ExpressionStatement	free ( lpath )	1114:1:34067:34079	1094711	18	True				
ANR	1095186	CallExpression	free ( lpath )		1094711	0					
ANR	1095187	Callee	free		1094711	0					
ANR	1095188	Identifier	free		1094711	0					
ANR	1095189	ArgumentList	lpath		1094711	1					
ANR	1095190	Argument	lpath		1094711	0					
ANR	1095191	Identifier	lpath		1094711	0					
ANR	1095192	ExpressionStatement	free ( dirname )	1115:1:34082:34096	1094711	19	True				
ANR	1095193	CallExpression	free ( dirname )		1094711	0					
ANR	1095194	Callee	free		1094711	0					
ANR	1095195	Identifier	free		1094711	0					
ANR	1095196	ArgumentList	dirname		1094711	1					
ANR	1095197	Argument	dirname		1094711	0					
ANR	1095198	Identifier	dirname		1094711	0					
ANR	1095199	ExpressionStatement	free ( basename )	1116:1:34099:34114	1094711	20	True				
ANR	1095200	CallExpression	free ( basename )		1094711	0					
ANR	1095201	Callee	free		1094711	0					
ANR	1095202	Identifier	free		1094711	0					
ANR	1095203	ArgumentList	basename		1094711	1					
ANR	1095204	Argument	basename		1094711	0					
ANR	1095205	Identifier	basename		1094711	0					
ANR	1095206	ReturnType	static void		1094711	1					
ANR	1095207	Identifier	autocomplete_ms_path		1094711	2					
ANR	1095208	ParameterList	"RLineCompletion * completion , RCore * core , const char * str , const char * path"		1094711	3					
ANR	1095209	Parameter	RLineCompletion * completion	1051:33:32199:32225	1094711	0	True				
ANR	1095210	ParameterType	RLineCompletion *		1094711	0					
ANR	1095211	Identifier	completion		1094711	1					
ANR	1095212	Parameter	RCore * core	1051:62:32228:32238	1094711	1	True				
ANR	1095213	ParameterType	RCore *		1094711	0					
ANR	1095214	Identifier	core		1094711	1					
ANR	1095215	Parameter	const char * str	1051:75:32241:32255	1094711	2	True				
ANR	1095216	ParameterType	const char *		1094711	0					
ANR	1095217	Identifier	str		1094711	1					
ANR	1095218	Parameter	const char * path	1051:92:32258:32273	1094711	3	True				
ANR	1095219	ParameterType	const char *		1094711	0					
ANR	1095220	Identifier	path		1094711	1					
ANR	1095221	CFGEntryNode	ENTRY		1094711		True				
ANR	1095222	CFGExitNode	EXIT		1094711		True				
ANR	1095223	CFGErrorNode	ERROR		1094711		True				
ANR	1095224	Symbol	r_file_is_directory		1094711						
ANR	1095225	Symbol	file -> name		1094711						
ANR	1095226	Symbol	* core		1094711						
ANR	1095227	Symbol	r_str_newf		1094711						
ANR	1095228	Symbol	dirname		1094711						
ANR	1095229	Symbol	r_fs_dir		1094711						
ANR	1095230	Symbol	path		1094711						
ANR	1095231	Symbol	strlen		1094711						
ANR	1095232	Symbol	strncmp		1094711						
ANR	1095233	Symbol	file		1094711						
ANR	1095234	Symbol	R_SYS_DIR		1094711						
ANR	1095235	Symbol	* * core -> rfs		1094711						
ANR	1095236	Symbol	core -> rfs		1094711						
ANR	1095237	Symbol	r_str_last		1094711						
ANR	1095238	Symbol	* basename		1094711						
ANR	1095239	Symbol	tmpstring		1094711						
ANR	1095240	Symbol	* lpath		1094711						
ANR	1095241	Symbol	* * core		1094711						
ANR	1095242	Symbol	r_str_new		1094711						
ANR	1095243	Symbol	completion		1094711						
ANR	1095244	Symbol	NULL		1094711						
ANR	1095245	Symbol	* core -> rfs		1094711						
ANR	1095246	Symbol	iter		1094711						
ANR	1095247	Symbol	list		1094711						
ANR	1095248	Symbol	* file		1094711						
ANR	1095249	Symbol	n		1094711						
ANR	1095250	Symbol	str		1094711						
ANR	1095251	Symbol	p		1094711						
ANR	1095252	Symbol	core -> rfs -> cwd		1094711						
ANR	1095253	Symbol	core		1094711						
ANR	1095254	Symbol	* * * core		1094711						
ANR	1095255	Symbol	chgdir		1094711						
ANR	1095256	Symbol	basename		1094711						
ANR	1095257	Symbol	s		1094711						
ANR	1095258	Symbol	* ( core -> rfs -> cwd )		1094711						
ANR	1095259	Symbol	lpath		1094711						
ANR	1095260	Symbol	* p		1094711						
ANR	1095261	Symbol	core -> fs		1094711						
ANR	1095262	Symbol	pwd		1094711						
ANR	1095263	Symbol	* core -> rfs -> cwd		1094711						
ANR	1095264	Function	autocomplete_process_path	1120:0:34120:36122							
ANR	1095265	FunctionDef	"autocomplete_process_path (RLineCompletion * completion , const char * str , const char * path)"		1095264	0					
ANR	1095266	CompoundStatement		1120:102:34222:36122	1095264	0					
ANR	1095267	IdentifierDeclStatement	"char * lpath = NULL , * dirname = NULL , * basename = NULL ;"	1121:1:34225:34279	1095264	0	True				
ANR	1095268	IdentifierDecl	* lpath = NULL		1095264	0					
ANR	1095269	IdentifierDeclType	char *		1095264	0					
ANR	1095270	Identifier	lpath		1095264	1					
ANR	1095271	AssignmentExpression	* lpath = NULL		1095264	2		=			
ANR	1095272	Identifier	NULL		1095264	0					
ANR	1095273	Identifier	NULL		1095264	1					
ANR	1095274	IdentifierDecl	* dirname = NULL		1095264	1					
ANR	1095275	IdentifierDeclType	char *		1095264	0					
ANR	1095276	Identifier	dirname		1095264	1					
ANR	1095277	AssignmentExpression	* dirname = NULL		1095264	2		=			
ANR	1095278	Identifier	NULL		1095264	0					
ANR	1095279	Identifier	NULL		1095264	1					
ANR	1095280	IdentifierDecl	* basename = NULL		1095264	2					
ANR	1095281	IdentifierDeclType	char *		1095264	0					
ANR	1095282	Identifier	basename		1095264	1					
ANR	1095283	AssignmentExpression	* basename = NULL		1095264	2		=			
ANR	1095284	Identifier	NULL		1095264	0					
ANR	1095285	Identifier	NULL		1095264	1					
ANR	1095286	IdentifierDeclStatement	"char * home = NULL , * filename = NULL , * p = NULL ;"	1122:1:34282:34328	1095264	1	True				
ANR	1095287	IdentifierDecl	* home = NULL		1095264	0					
ANR	1095288	IdentifierDeclType	char *		1095264	0					
ANR	1095289	Identifier	home		1095264	1					
ANR	1095290	AssignmentExpression	* home = NULL		1095264	2		=			
ANR	1095291	Identifier	NULL		1095264	0					
ANR	1095292	Identifier	NULL		1095264	1					
ANR	1095293	IdentifierDecl	* filename = NULL		1095264	1					
ANR	1095294	IdentifierDeclType	char *		1095264	0					
ANR	1095295	Identifier	filename		1095264	1					
ANR	1095296	AssignmentExpression	* filename = NULL		1095264	2		=			
ANR	1095297	Identifier	NULL		1095264	0					
ANR	1095298	Identifier	NULL		1095264	1					
ANR	1095299	IdentifierDecl	* p = NULL		1095264	2					
ANR	1095300	IdentifierDeclType	char *		1095264	0					
ANR	1095301	Identifier	p		1095264	1					
ANR	1095302	AssignmentExpression	* p = NULL		1095264	2		=			
ANR	1095303	Identifier	NULL		1095264	0					
ANR	1095304	Identifier	NULL		1095264	1					
ANR	1095305	IdentifierDeclStatement	int n = 0 ;	1123:1:34331:34340	1095264	2	True				
ANR	1095306	IdentifierDecl	n = 0		1095264	0					
ANR	1095307	IdentifierDeclType	int		1095264	0					
ANR	1095308	Identifier	n		1095264	1					
ANR	1095309	AssignmentExpression	n = 0		1095264	2		=			
ANR	1095310	Identifier	n		1095264	0					
ANR	1095311	PrimaryExpression	0		1095264	1					
ANR	1095312	IdentifierDeclStatement	RList * list ;	1124:1:34343:34354	1095264	3	True				
ANR	1095313	IdentifierDecl	* list		1095264	0					
ANR	1095314	IdentifierDeclType	RList *		1095264	0					
ANR	1095315	Identifier	list		1095264	1					
ANR	1095316	IdentifierDeclStatement	RListIter * iter ;	1125:1:34357:34372	1095264	4	True				
ANR	1095317	IdentifierDecl	* iter		1095264	0					
ANR	1095318	IdentifierDeclType	RListIter *		1095264	0					
ANR	1095319	Identifier	iter		1095264	1					
ANR	1095320	IfStatement	if ( ! path )		1095264	5					
ANR	1095321	Condition	! path	1127:5:34380:34384	1095264	0	True				
ANR	1095322	UnaryOperationExpression	! path		1095264	0					
ANR	1095323	UnaryOperator	!		1095264	0					
ANR	1095324	Identifier	path		1095264	1					
ANR	1095325	CompoundStatement		8:12:164:164	1095264	1					
ANR	1095326	GotoStatement	goto out ;	1128:2:34391:34399	1095264	0	True				
ANR	1095327	Identifier	out		1095264	0					
ANR	1095328	ExpressionStatement	lpath = r_str_new ( path )	1131:1:34406:34430	1095264	6	True				
ANR	1095329	AssignmentExpression	lpath = r_str_new ( path )		1095264	0		=			
ANR	1095330	Identifier	lpath		1095264	0					
ANR	1095331	CallExpression	r_str_new ( path )		1095264	1					
ANR	1095332	Callee	r_str_new		1095264	0					
ANR	1095333	Identifier	r_str_new		1095264	0					
ANR	1095334	ArgumentList	path		1095264	1					
ANR	1095335	Argument	path		1095264	0					
ANR	1095336	Identifier	path		1095264	0					
ANR	1095337	ExpressionStatement	"r_str_replace_ch ( lpath , '/' , '\\\\' , true )"	1133:1:34449:34490	1095264	7	True				
ANR	1095338	CallExpression	"r_str_replace_ch ( lpath , '/' , '\\\\' , true )"		1095264	0					
ANR	1095339	Callee	r_str_replace_ch		1095264	0					
ANR	1095340	Identifier	r_str_replace_ch		1095264	0					
ANR	1095341	ArgumentList	lpath		1095264	1					
ANR	1095342	Argument	lpath		1095264	0					
ANR	1095343	Identifier	lpath		1095264	0					
ANR	1095344	Argument	'/'		1095264	1					
ANR	1095345	PrimaryExpression	'/'		1095264	0					
ANR	1095346	Argument	'\\\\'		1095264	2					
ANR	1095347	PrimaryExpression	'\\\\'		1095264	0					
ANR	1095348	Argument	true		1095264	3					
ANR	1095349	Identifier	true		1095264	0					
ANR	1095350	ExpressionStatement	"p = ( char * ) r_str_last ( lpath , R_SYS_DIR )"	1135:1:34500:34541	1095264	8	True				
ANR	1095351	AssignmentExpression	"p = ( char * ) r_str_last ( lpath , R_SYS_DIR )"		1095264	0		=			
ANR	1095352	Identifier	p		1095264	0					
ANR	1095353	CastExpression	"( char * ) r_str_last ( lpath , R_SYS_DIR )"		1095264	1					
ANR	1095354	CastTarget	char *		1095264	0					
ANR	1095355	CallExpression	"r_str_last ( lpath , R_SYS_DIR )"		1095264	1					
ANR	1095356	Callee	r_str_last		1095264	0					
ANR	1095357	Identifier	r_str_last		1095264	0					
ANR	1095358	ArgumentList	lpath		1095264	1					
ANR	1095359	Argument	lpath		1095264	0					
ANR	1095360	Identifier	lpath		1095264	0					
ANR	1095361	Argument	R_SYS_DIR		1095264	1					
ANR	1095362	Identifier	R_SYS_DIR		1095264	0					
ANR	1095363	IfStatement	if ( p )		1095264	9					
ANR	1095364	Condition	p	1136:5:34548:34548	1095264	0	True				
ANR	1095365	Identifier	p		1095264	0					
ANR	1095366	CompoundStatement		17:8:328:328	1095264	1					
ANR	1095367	ExpressionStatement	* p = 0	1137:2:34555:34561	1095264	0	True				
ANR	1095368	AssignmentExpression	* p = 0		1095264	0		=			
ANR	1095369	UnaryOperationExpression	* p		1095264	0					
ANR	1095370	UnaryOperator	*		1095264	0					
ANR	1095371	Identifier	p		1095264	1					
ANR	1095372	PrimaryExpression	0		1095264	1					
ANR	1095373	IfStatement	if ( p == lpath )		1095264	1					
ANR	1095374	Condition	p == lpath	1138:6:34569:34578	1095264	0	True				
ANR	1095375	EqualityExpression	p == lpath		1095264	0		==			
ANR	1095376	Identifier	p		1095264	0					
ANR	1095377	Identifier	lpath		1095264	1					
ANR	1095378	CompoundStatement		19:18:358:358	1095264	1					
ANR	1095379	ExpressionStatement	"dirname = strdup ( ""\\\\.\\\\"" )"	1140:3:34610:34636	1095264	0	True				
ANR	1095380	AssignmentExpression	"dirname = strdup ( ""\\\\.\\\\"" )"		1095264	0		=			
ANR	1095381	Identifier	dirname		1095264	0					
ANR	1095382	CallExpression	"strdup ( ""\\\\.\\\\"" )"		1095264	1					
ANR	1095383	Callee	strdup		1095264	0					
ANR	1095384	Identifier	strdup		1095264	0					
ANR	1095385	ArgumentList	"""\\\\.\\\\"""		1095264	1					
ANR	1095386	Argument	"""\\\\.\\\\"""		1095264	0					
ANR	1095387	PrimaryExpression	"""\\\\.\\\\"""		1095264	0					
ANR	1095388	ElseStatement	else		1095264	0					
ANR	1095389	IfStatement	if ( lpath [ 0 ] == '~' && lpath [ 1 ] )		1095264	0					
ANR	1095390	Condition	lpath [ 0 ] == '~' && lpath [ 1 ]	1144:13:34700:34726	1095264	0	True				
ANR	1095391	AndExpression	lpath [ 0 ] == '~' && lpath [ 1 ]		1095264	0		&&			
ANR	1095392	EqualityExpression	lpath [ 0 ] == '~'		1095264	0		==			
ANR	1095393	ArrayIndexing	lpath [ 0 ]		1095264	0					
ANR	1095394	Identifier	lpath		1095264	0					
ANR	1095395	PrimaryExpression	0		1095264	1					
ANR	1095396	PrimaryExpression	'~'		1095264	1					
ANR	1095397	ArrayIndexing	lpath [ 1 ]		1095264	1					
ANR	1095398	Identifier	lpath		1095264	0					
ANR	1095399	PrimaryExpression	1		1095264	1					
ANR	1095400	CompoundStatement		25:42:506:506	1095264	1					
ANR	1095401	ExpressionStatement	dirname = r_str_home ( lpath + 2 )	1145:3:34747:34779	1095264	0	True				
ANR	1095402	AssignmentExpression	dirname = r_str_home ( lpath + 2 )		1095264	0		=			
ANR	1095403	Identifier	dirname		1095264	0					
ANR	1095404	CallExpression	r_str_home ( lpath + 2 )		1095264	1					
ANR	1095405	Callee	r_str_home		1095264	0					
ANR	1095406	Identifier	r_str_home		1095264	0					
ANR	1095407	ArgumentList	lpath + 2		1095264	1					
ANR	1095408	Argument	lpath + 2		1095264	0					
ANR	1095409	AdditiveExpression	lpath + 2		1095264	0		+			
ANR	1095410	Identifier	lpath		1095264	0					
ANR	1095411	PrimaryExpression	2		1095264	1					
ANR	1095412	ElseStatement	else		1095264	0					
ANR	1095413	IfStatement	if ( lpath [ 0 ] == '~' )		1095264	0					
ANR	1095414	Condition	lpath [ 0 ] == '~'	1146:13:34794:34808	1095264	0	True				
ANR	1095415	EqualityExpression	lpath [ 0 ] == '~'		1095264	0		==			
ANR	1095416	ArrayIndexing	lpath [ 0 ]		1095264	0					
ANR	1095417	Identifier	lpath		1095264	0					
ANR	1095418	PrimaryExpression	0		1095264	1					
ANR	1095419	PrimaryExpression	'~'		1095264	1					
ANR	1095420	CompoundStatement		27:30:588:588	1095264	1					
ANR	1095421	IfStatement	if ( ! ( home = r_str_home ( NULL ) ) )		1095264	0					
ANR	1095422	Condition	! ( home = r_str_home ( NULL ) )	1147:7:34829:34855	1095264	0	True				
ANR	1095423	UnaryOperationExpression	! ( home = r_str_home ( NULL ) )		1095264	0					
ANR	1095424	UnaryOperator	!		1095264	0					
ANR	1095425	AssignmentExpression	home = r_str_home ( NULL )		1095264	1		=			
ANR	1095426	Identifier	home		1095264	0					
ANR	1095427	CallExpression	r_str_home ( NULL )		1095264	1					
ANR	1095428	Callee	r_str_home		1095264	0					
ANR	1095429	Identifier	r_str_home		1095264	0					
ANR	1095430	ArgumentList	NULL		1095264	1					
ANR	1095431	Argument	NULL		1095264	0					
ANR	1095432	Identifier	NULL		1095264	0					
ANR	1095433	CompoundStatement		28:36:635:635	1095264	1					
ANR	1095434	GotoStatement	goto out ;	1148:4:34864:34872	1095264	0	True				
ANR	1095435	Identifier	out		1095264	0					
ANR	1095436	ExpressionStatement	"dirname = r_str_newf ( ""%s%s"" , home , R_SYS_DIR )"	1150:3:34882:34928	1095264	1	True				
ANR	1095437	AssignmentExpression	"dirname = r_str_newf ( ""%s%s"" , home , R_SYS_DIR )"		1095264	0		=			
ANR	1095438	Identifier	dirname		1095264	0					
ANR	1095439	CallExpression	"r_str_newf ( ""%s%s"" , home , R_SYS_DIR )"		1095264	1					
ANR	1095440	Callee	r_str_newf		1095264	0					
ANR	1095441	Identifier	r_str_newf		1095264	0					
ANR	1095442	ArgumentList	"""%s%s"""		1095264	1					
ANR	1095443	Argument	"""%s%s"""		1095264	0					
ANR	1095444	PrimaryExpression	"""%s%s"""		1095264	0					
ANR	1095445	Argument	home		1095264	1					
ANR	1095446	Identifier	home		1095264	0					
ANR	1095447	Argument	R_SYS_DIR		1095264	2					
ANR	1095448	Identifier	R_SYS_DIR		1095264	0					
ANR	1095449	ExpressionStatement	free ( home )	1151:3:34933:34944	1095264	2	True				
ANR	1095450	CallExpression	free ( home )		1095264	0					
ANR	1095451	Callee	free		1095264	0					
ANR	1095452	Identifier	free		1095264	0					
ANR	1095453	ArgumentList	home		1095264	1					
ANR	1095454	Argument	home		1095264	0					
ANR	1095455	Identifier	home		1095264	0					
ANR	1095456	ElseStatement	else		1095264	0					
ANR	1095457	IfStatement	if ( lpath [ 0 ] == '.' || lpath [ 0 ] == R_SYS_DIR [ 0 ] )		1095264	0					
ANR	1095458	Condition	lpath [ 0 ] == '.' || lpath [ 0 ] == R_SYS_DIR [ 0 ]	1152:13:34959:35001	1095264	0	True				
ANR	1095459	OrExpression	lpath [ 0 ] == '.' || lpath [ 0 ] == R_SYS_DIR [ 0 ]		1095264	0		||			
ANR	1095460	EqualityExpression	lpath [ 0 ] == '.'		1095264	0		==			
ANR	1095461	ArrayIndexing	lpath [ 0 ]		1095264	0					
ANR	1095462	Identifier	lpath		1095264	0					
ANR	1095463	PrimaryExpression	0		1095264	1					
ANR	1095464	PrimaryExpression	'.'		1095264	1					
ANR	1095465	EqualityExpression	lpath [ 0 ] == R_SYS_DIR [ 0 ]		1095264	1		==			
ANR	1095466	ArrayIndexing	lpath [ 0 ]		1095264	0					
ANR	1095467	Identifier	lpath		1095264	0					
ANR	1095468	PrimaryExpression	0		1095264	1					
ANR	1095469	ArrayIndexing	R_SYS_DIR [ 0 ]		1095264	1					
ANR	1095470	Identifier	R_SYS_DIR		1095264	0					
ANR	1095471	PrimaryExpression	0		1095264	1					
ANR	1095472	CompoundStatement		33:59:782:782	1095264	1					
ANR	1095473	ExpressionStatement	"dirname = r_str_newf ( ""%s%s"" , lpath , R_SYS_DIR )"	1153:3:35035:35082	1095264	0	True				
ANR	1095474	AssignmentExpression	"dirname = r_str_newf ( ""%s%s"" , lpath , R_SYS_DIR )"		1095264	0		=			
ANR	1095475	Identifier	dirname		1095264	0					
ANR	1095476	CallExpression	"r_str_newf ( ""%s%s"" , lpath , R_SYS_DIR )"		1095264	1					
ANR	1095477	Callee	r_str_newf		1095264	0					
ANR	1095478	Identifier	r_str_newf		1095264	0					
ANR	1095479	ArgumentList	"""%s%s"""		1095264	1					
ANR	1095480	Argument	"""%s%s"""		1095264	0					
ANR	1095481	PrimaryExpression	"""%s%s"""		1095264	0					
ANR	1095482	Argument	lpath		1095264	1					
ANR	1095483	Identifier	lpath		1095264	0					
ANR	1095484	Argument	R_SYS_DIR		1095264	2					
ANR	1095485	Identifier	R_SYS_DIR		1095264	0					
ANR	1095486	ElseStatement	else		1095264	0					
ANR	1095487	CompoundStatement		36:3:886:907	1095264	0					
ANR	1095488	IdentifierDeclStatement	"char * fmt = "".%s%s%s"" ;"	1155:3:35109:35130	1095264	0	True				
ANR	1095489	IdentifierDecl	"* fmt = "".%s%s%s"""		1095264	0					
ANR	1095490	IdentifierDeclType	char *		1095264	0					
ANR	1095491	Identifier	fmt		1095264	1					
ANR	1095492	AssignmentExpression	"* fmt = "".%s%s%s"""		1095264	2		=			
ANR	1095493	Identifier	fmt		1095264	0					
ANR	1095494	PrimaryExpression	""".%s%s%s"""		1095264	1					
ANR	1095495	IfStatement	"if ( strchr ( path , ':' ) )"		1095264	1					
ANR	1095496	Condition	"strchr ( path , ':' )"	1157:7:35155:35172	1095264	0	True				
ANR	1095497	CallExpression	"strchr ( path , ':' )"		1095264	0					
ANR	1095498	Callee	strchr		1095264	0					
ANR	1095499	Identifier	strchr		1095264	0					
ANR	1095500	ArgumentList	path		1095264	1					
ANR	1095501	Argument	path		1095264	0					
ANR	1095502	Identifier	path		1095264	0					
ANR	1095503	Argument	':'		1095264	1					
ANR	1095504	PrimaryExpression	':'		1095264	0					
ANR	1095505	CompoundStatement		38:27:952:952	1095264	1					
ANR	1095506	ExpressionStatement	"fmt = ""%.0s%s%s"""	1158:4:35181:35197	1095264	0	True				
ANR	1095507	AssignmentExpression	"fmt = ""%.0s%s%s"""		1095264	0		=			
ANR	1095508	Identifier	fmt		1095264	0					
ANR	1095509	PrimaryExpression	"""%.0s%s%s"""		1095264	1					
ANR	1095510	ExpressionStatement	"dirname = r_str_newf ( fmt , R_SYS_DIR , lpath , R_SYS_DIR )"	1161:3:35214:35269	1095264	2	True				
ANR	1095511	AssignmentExpression	"dirname = r_str_newf ( fmt , R_SYS_DIR , lpath , R_SYS_DIR )"		1095264	0		=			
ANR	1095512	Identifier	dirname		1095264	0					
ANR	1095513	CallExpression	"r_str_newf ( fmt , R_SYS_DIR , lpath , R_SYS_DIR )"		1095264	1					
ANR	1095514	Callee	r_str_newf		1095264	0					
ANR	1095515	Identifier	r_str_newf		1095264	0					
ANR	1095516	ArgumentList	fmt		1095264	1					
ANR	1095517	Argument	fmt		1095264	0					
ANR	1095518	Identifier	fmt		1095264	0					
ANR	1095519	Argument	R_SYS_DIR		1095264	1					
ANR	1095520	Identifier	R_SYS_DIR		1095264	0					
ANR	1095521	Argument	lpath		1095264	2					
ANR	1095522	Identifier	lpath		1095264	0					
ANR	1095523	Argument	R_SYS_DIR		1095264	3					
ANR	1095524	Identifier	R_SYS_DIR		1095264	0					
ANR	1095525	ExpressionStatement	basename = r_str_new ( p + 1 )	1163:2:35277:35305	1095264	2	True				
ANR	1095526	AssignmentExpression	basename = r_str_new ( p + 1 )		1095264	0		=			
ANR	1095527	Identifier	basename		1095264	0					
ANR	1095528	CallExpression	r_str_new ( p + 1 )		1095264	1					
ANR	1095529	Callee	r_str_new		1095264	0					
ANR	1095530	Identifier	r_str_new		1095264	0					
ANR	1095531	ArgumentList	p + 1		1095264	1					
ANR	1095532	Argument	p + 1		1095264	0					
ANR	1095533	AdditiveExpression	p + 1		1095264	0		+			
ANR	1095534	Identifier	p		1095264	0					
ANR	1095535	PrimaryExpression	1		1095264	1					
ANR	1095536	ElseStatement	else		1095264	0					
ANR	1095537	CompoundStatement		45:8:1092:1092	1095264	0					
ANR	1095538	ExpressionStatement	"dirname = r_str_newf ( "".%s"" , R_SYS_DIR )"	1165:2:35326:35365	1095264	0	True				
ANR	1095539	AssignmentExpression	"dirname = r_str_newf ( "".%s"" , R_SYS_DIR )"		1095264	0		=			
ANR	1095540	Identifier	dirname		1095264	0					
ANR	1095541	CallExpression	"r_str_newf ( "".%s"" , R_SYS_DIR )"		1095264	1					
ANR	1095542	Callee	r_str_newf		1095264	0					
ANR	1095543	Identifier	r_str_newf		1095264	0					
ANR	1095544	ArgumentList	""".%s"""		1095264	1					
ANR	1095545	Argument	""".%s"""		1095264	0					
ANR	1095546	PrimaryExpression	""".%s"""		1095264	0					
ANR	1095547	Argument	R_SYS_DIR		1095264	1					
ANR	1095548	Identifier	R_SYS_DIR		1095264	0					
ANR	1095549	ExpressionStatement	basename = r_str_new ( lpath )	1166:2:35369:35397	1095264	1	True				
ANR	1095550	AssignmentExpression	basename = r_str_new ( lpath )		1095264	0		=			
ANR	1095551	Identifier	basename		1095264	0					
ANR	1095552	CallExpression	r_str_new ( lpath )		1095264	1					
ANR	1095553	Callee	r_str_new		1095264	0					
ANR	1095554	Identifier	r_str_new		1095264	0					
ANR	1095555	ArgumentList	lpath		1095264	1					
ANR	1095556	Argument	lpath		1095264	0					
ANR	1095557	Identifier	lpath		1095264	0					
ANR	1095558	IfStatement	if ( ! dirname || ! basename )		1095264	10					
ANR	1095559	Condition	! dirname || ! basename	1169:5:35408:35428	1095264	0	True				
ANR	1095560	OrExpression	! dirname || ! basename		1095264	0		||			
ANR	1095561	UnaryOperationExpression	! dirname		1095264	0					
ANR	1095562	UnaryOperator	!		1095264	0					
ANR	1095563	Identifier	dirname		1095264	1					
ANR	1095564	UnaryOperationExpression	! basename		1095264	1					
ANR	1095565	UnaryOperator	!		1095264	0					
ANR	1095566	Identifier	basename		1095264	1					
ANR	1095567	CompoundStatement		50:28:1208:1208	1095264	1					
ANR	1095568	GotoStatement	goto out ;	1170:2:35435:35443	1095264	0	True				
ANR	1095569	Identifier	out		1095264	0					
ANR	1095570	ExpressionStatement	list = r_sys_dir ( dirname )	1173:1:35450:35475	1095264	11	True				
ANR	1095571	AssignmentExpression	list = r_sys_dir ( dirname )		1095264	0		=			
ANR	1095572	Identifier	list		1095264	0					
ANR	1095573	CallExpression	r_sys_dir ( dirname )		1095264	1					
ANR	1095574	Callee	r_sys_dir		1095264	0					
ANR	1095575	Identifier	r_sys_dir		1095264	0					
ANR	1095576	ArgumentList	dirname		1095264	1					
ANR	1095577	Argument	dirname		1095264	0					
ANR	1095578	Identifier	dirname		1095264	0					
ANR	1095579	ExpressionStatement	n = strlen ( basename )	1174:1:35478:35499	1095264	12	True				
ANR	1095580	AssignmentExpression	n = strlen ( basename )		1095264	0		=			
ANR	1095581	Identifier	n		1095264	0					
ANR	1095582	CallExpression	strlen ( basename )		1095264	1					
ANR	1095583	Callee	strlen		1095264	0					
ANR	1095584	Identifier	strlen		1095264	0					
ANR	1095585	ArgumentList	basename		1095264	1					
ANR	1095586	Argument	basename		1095264	0					
ANR	1095587	Identifier	basename		1095264	0					
ANR	1095588	IdentifierDeclStatement	"bool chgdir = ! strncmp ( str , ""cd "" , 3 ) ;"	1175:1:35502:35540	1095264	13	True				
ANR	1095589	IdentifierDecl	"chgdir = ! strncmp ( str , ""cd "" , 3 )"		1095264	0					
ANR	1095590	IdentifierDeclType	bool		1095264	0					
ANR	1095591	Identifier	chgdir		1095264	1					
ANR	1095592	AssignmentExpression	"chgdir = ! strncmp ( str , ""cd "" , 3 )"		1095264	2		=			
ANR	1095593	Identifier	chgdir		1095264	0					
ANR	1095594	UnaryOperationExpression	"! strncmp ( str , ""cd "" , 3 )"		1095264	1					
ANR	1095595	UnaryOperator	!		1095264	0					
ANR	1095596	CallExpression	"strncmp ( str , ""cd "" , 3 )"		1095264	1					
ANR	1095597	Callee	strncmp		1095264	0					
ANR	1095598	Identifier	strncmp		1095264	0					
ANR	1095599	ArgumentList	str		1095264	1					
ANR	1095600	Argument	str		1095264	0					
ANR	1095601	Identifier	str		1095264	0					
ANR	1095602	Argument	"""cd """		1095264	1					
ANR	1095603	PrimaryExpression	"""cd """		1095264	0					
ANR	1095604	Argument	3		1095264	2					
ANR	1095605	PrimaryExpression	3		1095264	0					
ANR	1095606	IfStatement	if ( list )		1095264	14					
ANR	1095607	Condition	list	1176:5:35547:35550	1095264	0	True				
ANR	1095608	Identifier	list		1095264	0					
ANR	1095609	CompoundStatement		57:11:1330:1330	1095264	1					
ANR	1095610	Statement	r_list_foreach	1177:2:35557:35570	1095264	0	True				
ANR	1095611	Statement	(	1177:17:35572:35572	1095264	1	True				
ANR	1095612	Statement	list	1177:18:35573:35576	1095264	2	True				
ANR	1095613	Statement	","	1177:22:35577:35577	1095264	3	True				
ANR	1095614	Statement	iter	1177:24:35579:35582	1095264	4	True				
ANR	1095615	Statement	","	1177:28:35583:35583	1095264	5	True				
ANR	1095616	Statement	filename	1177:30:35585:35592	1095264	6	True				
ANR	1095617	Statement	)	1177:38:35593:35593	1095264	7	True				
ANR	1095618	CompoundStatement		58:40:1372:1372	1095264	8					
ANR	1095619	IfStatement	if ( * filename == '.' )		1095264	0					
ANR	1095620	Condition	* filename == '.'	1178:7:35604:35619	1095264	0	True				
ANR	1095621	EqualityExpression	* filename == '.'		1095264	0		==			
ANR	1095622	UnaryOperationExpression	* filename		1095264	0					
ANR	1095623	UnaryOperator	*		1095264	0					
ANR	1095624	Identifier	filename		1095264	1					
ANR	1095625	PrimaryExpression	'.'		1095264	1					
ANR	1095626	CompoundStatement		59:25:1399:1399	1095264	1					
ANR	1095627	ContinueStatement	continue ;	1179:4:35628:35636	1095264	0	True				
ANR	1095628	IfStatement	"if ( ! basename [ 0 ] || ! strncmp ( filename , basename , n ) )"		1095264	1					
ANR	1095629	Condition	"! basename [ 0 ] || ! strncmp ( filename , basename , n )"	1181:7:35650:35697	1095264	0	True				
ANR	1095630	OrExpression	"! basename [ 0 ] || ! strncmp ( filename , basename , n )"		1095264	0		||			
ANR	1095631	UnaryOperationExpression	! basename [ 0 ]		1095264	0					
ANR	1095632	UnaryOperator	!		1095264	0					
ANR	1095633	ArrayIndexing	basename [ 0 ]		1095264	1					
ANR	1095634	Identifier	basename		1095264	0					
ANR	1095635	PrimaryExpression	0		1095264	1					
ANR	1095636	UnaryOperationExpression	"! strncmp ( filename , basename , n )"		1095264	1					
ANR	1095637	UnaryOperator	!		1095264	0					
ANR	1095638	CallExpression	"strncmp ( filename , basename , n )"		1095264	1					
ANR	1095639	Callee	strncmp		1095264	0					
ANR	1095640	Identifier	strncmp		1095264	0					
ANR	1095641	ArgumentList	filename		1095264	1					
ANR	1095642	Argument	filename		1095264	0					
ANR	1095643	Identifier	filename		1095264	0					
ANR	1095644	Argument	basename		1095264	1					
ANR	1095645	Identifier	basename		1095264	0					
ANR	1095646	Argument	n		1095264	2					
ANR	1095647	Identifier	n		1095264	0					
ANR	1095648	CompoundStatement		63:4:1484:1540	1095264	1					
ANR	1095649	IdentifierDeclStatement	"char * tmpstring = r_str_newf ( ""%s%s"" , dirname , filename ) ;"	1182:4:35707:35763	1095264	0	True				
ANR	1095650	IdentifierDecl	"* tmpstring = r_str_newf ( ""%s%s"" , dirname , filename )"		1095264	0					
ANR	1095651	IdentifierDeclType	char *		1095264	0					
ANR	1095652	Identifier	tmpstring		1095264	1					
ANR	1095653	AssignmentExpression	"* tmpstring = r_str_newf ( ""%s%s"" , dirname , filename )"		1095264	2		=			
ANR	1095654	Identifier	tmpstring		1095264	0					
ANR	1095655	CallExpression	"r_str_newf ( ""%s%s"" , dirname , filename )"		1095264	1					
ANR	1095656	Callee	r_str_newf		1095264	0					
ANR	1095657	Identifier	r_str_newf		1095264	0					
ANR	1095658	ArgumentList	"""%s%s"""		1095264	1					
ANR	1095659	Argument	"""%s%s"""		1095264	0					
ANR	1095660	PrimaryExpression	"""%s%s"""		1095264	0					
ANR	1095661	Argument	dirname		1095264	1					
ANR	1095662	Identifier	dirname		1095264	0					
ANR	1095663	Argument	filename		1095264	2					
ANR	1095664	Identifier	filename		1095264	0					
ANR	1095665	IfStatement	if ( r_file_is_directory ( tmpstring ) )		1095264	1					
ANR	1095666	Condition	r_file_is_directory ( tmpstring )	1183:8:35773:35803	1095264	0	True				
ANR	1095667	CallExpression	r_file_is_directory ( tmpstring )		1095264	0					
ANR	1095668	Callee	r_file_is_directory		1095264	0					
ANR	1095669	Identifier	r_file_is_directory		1095264	0					
ANR	1095670	ArgumentList	tmpstring		1095264	1					
ANR	1095671	Argument	tmpstring		1095264	0					
ANR	1095672	Identifier	tmpstring		1095264	0					
ANR	1095673	CompoundStatement		65:5:1590:1641	1095264	1					
ANR	1095674	IdentifierDeclStatement	"char * s = r_str_newf ( ""%s%s"" , tmpstring , R_SYS_DIR ) ;"	1184:5:35813:35864	1095264	0	True				
ANR	1095675	IdentifierDecl	"* s = r_str_newf ( ""%s%s"" , tmpstring , R_SYS_DIR )"		1095264	0					
ANR	1095676	IdentifierDeclType	char *		1095264	0					
ANR	1095677	Identifier	s		1095264	1					
ANR	1095678	AssignmentExpression	"* s = r_str_newf ( ""%s%s"" , tmpstring , R_SYS_DIR )"		1095264	2		=			
ANR	1095679	Identifier	s		1095264	0					
ANR	1095680	CallExpression	"r_str_newf ( ""%s%s"" , tmpstring , R_SYS_DIR )"		1095264	1					
ANR	1095681	Callee	r_str_newf		1095264	0					
ANR	1095682	Identifier	r_str_newf		1095264	0					
ANR	1095683	ArgumentList	"""%s%s"""		1095264	1					
ANR	1095684	Argument	"""%s%s"""		1095264	0					
ANR	1095685	PrimaryExpression	"""%s%s"""		1095264	0					
ANR	1095686	Argument	tmpstring		1095264	1					
ANR	1095687	Identifier	tmpstring		1095264	0					
ANR	1095688	Argument	R_SYS_DIR		1095264	2					
ANR	1095689	Identifier	R_SYS_DIR		1095264	0					
ANR	1095690	ExpressionStatement	"r_line_completion_push ( completion , s )"	1185:5:35871:35909	1095264	1	True				
ANR	1095691	CallExpression	"r_line_completion_push ( completion , s )"		1095264	0					
ANR	1095692	Callee	r_line_completion_push		1095264	0					
ANR	1095693	Identifier	r_line_completion_push		1095264	0					
ANR	1095694	ArgumentList	completion		1095264	1					
ANR	1095695	Argument	completion		1095264	0					
ANR	1095696	Identifier	completion		1095264	0					
ANR	1095697	Argument	s		1095264	1					
ANR	1095698	Identifier	s		1095264	0					
ANR	1095699	ExpressionStatement	free ( s )	1186:5:35916:35924	1095264	2	True				
ANR	1095700	CallExpression	free ( s )		1095264	0					
ANR	1095701	Callee	free		1095264	0					
ANR	1095702	Identifier	free		1095264	0					
ANR	1095703	ArgumentList	s		1095264	1					
ANR	1095704	Argument	s		1095264	0					
ANR	1095705	Identifier	s		1095264	0					
ANR	1095706	ElseStatement	else		1095264	0					
ANR	1095707	IfStatement	if ( ! chgdir )		1095264	0					
ANR	1095708	Condition	! chgdir	1187:15:35941:35947	1095264	0	True				
ANR	1095709	UnaryOperationExpression	! chgdir		1095264	0					
ANR	1095710	UnaryOperator	!		1095264	0					
ANR	1095711	Identifier	chgdir		1095264	1					
ANR	1095712	CompoundStatement		68:24:1727:1727	1095264	1					
ANR	1095713	ExpressionStatement	"r_line_completion_push ( completion , tmpstring )"	1188:5:35957:36003	1095264	0	True				
ANR	1095714	CallExpression	"r_line_completion_push ( completion , tmpstring )"		1095264	0					
ANR	1095715	Callee	r_line_completion_push		1095264	0					
ANR	1095716	Identifier	r_line_completion_push		1095264	0					
ANR	1095717	ArgumentList	completion		1095264	1					
ANR	1095718	Argument	completion		1095264	0					
ANR	1095719	Identifier	completion		1095264	0					
ANR	1095720	Argument	tmpstring		1095264	1					
ANR	1095721	Identifier	tmpstring		1095264	0					
ANR	1095722	ExpressionStatement	free ( tmpstring )	1190:4:36015:36031	1095264	2	True				
ANR	1095723	CallExpression	free ( tmpstring )		1095264	0					
ANR	1095724	Callee	free		1095264	0					
ANR	1095725	Identifier	free		1095264	0					
ANR	1095726	ArgumentList	tmpstring		1095264	1					
ANR	1095727	Argument	tmpstring		1095264	0					
ANR	1095728	Identifier	tmpstring		1095264	0					
ANR	1095729	ExpressionStatement	r_list_free ( list )	1193:2:36044:36062	1095264	9	True				
ANR	1095730	CallExpression	r_list_free ( list )		1095264	0					
ANR	1095731	Callee	r_list_free		1095264	0					
ANR	1095732	Identifier	r_list_free		1095264	0					
ANR	1095733	ArgumentList	list		1095264	1					
ANR	1095734	Argument	list		1095264	0					
ANR	1095735	Identifier	list		1095264	0					
ANR	1095736	Label	out :	1195:0:36067:36070	1095264	15	True				
ANR	1095737	Identifier	out		1095264	0					
ANR	1095738	ExpressionStatement	free ( lpath )	1196:1:36073:36085	1095264	16	True				
ANR	1095739	CallExpression	free ( lpath )		1095264	0					
ANR	1095740	Callee	free		1095264	0					
ANR	1095741	Identifier	free		1095264	0					
ANR	1095742	ArgumentList	lpath		1095264	1					
ANR	1095743	Argument	lpath		1095264	0					
ANR	1095744	Identifier	lpath		1095264	0					
ANR	1095745	ExpressionStatement	free ( dirname )	1197:1:36088:36102	1095264	17	True				
ANR	1095746	CallExpression	free ( dirname )		1095264	0					
ANR	1095747	Callee	free		1095264	0					
ANR	1095748	Identifier	free		1095264	0					
ANR	1095749	ArgumentList	dirname		1095264	1					
ANR	1095750	Argument	dirname		1095264	0					
ANR	1095751	Identifier	dirname		1095264	0					
ANR	1095752	ExpressionStatement	free ( basename )	1198:1:36105:36120	1095264	18	True				
ANR	1095753	CallExpression	free ( basename )		1095264	0					
ANR	1095754	Callee	free		1095264	0					
ANR	1095755	Identifier	free		1095264	0					
ANR	1095756	ArgumentList	basename		1095264	1					
ANR	1095757	Argument	basename		1095264	0					
ANR	1095758	Identifier	basename		1095264	0					
ANR	1095759	ReturnType	static void		1095264	1					
ANR	1095760	Identifier	autocomplete_process_path		1095264	2					
ANR	1095761	ParameterList	"RLineCompletion * completion , const char * str , const char * path"		1095264	3					
ANR	1095762	Parameter	RLineCompletion * completion	1120:38:34158:34184	1095264	0	True				
ANR	1095763	ParameterType	RLineCompletion *		1095264	0					
ANR	1095764	Identifier	completion		1095264	1					
ANR	1095765	Parameter	const char * str	1120:67:34187:34201	1095264	1	True				
ANR	1095766	ParameterType	const char *		1095264	0					
ANR	1095767	Identifier	str		1095264	1					
ANR	1095768	Parameter	const char * path	1120:84:34204:34219	1095264	2	True				
ANR	1095769	ParameterType	const char *		1095264	0					
ANR	1095770	Identifier	path		1095264	1					
ANR	1095771	CFGEntryNode	ENTRY		1095264		True				
ANR	1095772	CFGExitNode	EXIT		1095264		True				
ANR	1095773	CFGErrorNode	ERROR		1095264		True				
ANR	1095774	Symbol	r_file_is_directory		1095264						
ANR	1095775	Symbol	* R_SYS_DIR		1095264						
ANR	1095776	Symbol	strchr		1095264						
ANR	1095777	Symbol	r_str_newf		1095264						
ANR	1095778	Symbol	fmt		1095264						
ANR	1095779	Symbol	dirname		1095264						
ANR	1095780	Symbol	path		1095264						
ANR	1095781	Symbol	strlen		1095264						
ANR	1095782	Symbol	strncmp		1095264						
ANR	1095783	Symbol	R_SYS_DIR		1095264						
ANR	1095784	Symbol	r_str_last		1095264						
ANR	1095785	Symbol	* basename		1095264						
ANR	1095786	Symbol	tmpstring		1095264						
ANR	1095787	Symbol	* lpath		1095264						
ANR	1095788	Symbol	r_str_home		1095264						
ANR	1095789	Symbol	r_str_new		1095264						
ANR	1095790	Symbol	completion		1095264						
ANR	1095791	Symbol	NULL		1095264						
ANR	1095792	Symbol	iter		1095264						
ANR	1095793	Symbol	list		1095264						
ANR	1095794	Symbol	n		1095264						
ANR	1095795	Symbol	home		1095264						
ANR	1095796	Symbol	str		1095264						
ANR	1095797	Symbol	p		1095264						
ANR	1095798	Symbol	chgdir		1095264						
ANR	1095799	Symbol	basename		1095264						
ANR	1095800	Symbol	filename		1095264						
ANR	1095801	Symbol	* filename		1095264						
ANR	1095802	Symbol	s		1095264						
ANR	1095803	Symbol	lpath		1095264						
ANR	1095804	Symbol	true		1095264						
ANR	1095805	Symbol	* p		1095264						
ANR	1095806	Symbol	strdup		1095264						
ANR	1095807	Symbol	r_sys_dir		1095264						
ANR	1095808	Function	autocompleteFilename	1201:0:36125:37000							
ANR	1095809	FunctionDef	"autocompleteFilename (RLineCompletion * completion , RLineBuffer * buf , char * * extra_paths , int narg)"		1095808	0					
ANR	1095810	CompoundStatement		1201:110:36235:37000	1095808	0					
ANR	1095811	IdentifierDeclStatement	"char * args = NULL , * input = NULL ;"	1202:1:36238:36270	1095808	0	True				
ANR	1095812	IdentifierDecl	* args = NULL		1095808	0					
ANR	1095813	IdentifierDeclType	char *		1095808	0					
ANR	1095814	Identifier	args		1095808	1					
ANR	1095815	AssignmentExpression	* args = NULL		1095808	2		=			
ANR	1095816	Identifier	NULL		1095808	0					
ANR	1095817	Identifier	NULL		1095808	1					
ANR	1095818	IdentifierDecl	* input = NULL		1095808	1					
ANR	1095819	IdentifierDeclType	char *		1095808	0					
ANR	1095820	Identifier	input		1095808	1					
ANR	1095821	AssignmentExpression	* input = NULL		1095808	2		=			
ANR	1095822	Identifier	NULL		1095808	0					
ANR	1095823	Identifier	NULL		1095808	1					
ANR	1095824	IdentifierDeclStatement	"int n = 0 , i = 0 ;"	1203:1:36273:36289	1095808	1	True				
ANR	1095825	IdentifierDecl	n = 0		1095808	0					
ANR	1095826	IdentifierDeclType	int		1095808	0					
ANR	1095827	Identifier	n		1095808	1					
ANR	1095828	AssignmentExpression	n = 0		1095808	2		=			
ANR	1095829	Identifier	n		1095808	0					
ANR	1095830	PrimaryExpression	0		1095808	1					
ANR	1095831	IdentifierDecl	i = 0		1095808	1					
ANR	1095832	IdentifierDeclType	int		1095808	0					
ANR	1095833	Identifier	i		1095808	1					
ANR	1095834	AssignmentExpression	i = 0		1095808	2		=			
ANR	1095835	Identifier	i		1095808	0					
ANR	1095836	PrimaryExpression	0		1095808	1					
ANR	1095837	IdentifierDeclStatement	"char * pipe = strchr ( buf -> data , '>' ) ;"	1204:1:36292:36328	1095808	2	True				
ANR	1095838	IdentifierDecl	"* pipe = strchr ( buf -> data , '>' )"		1095808	0					
ANR	1095839	IdentifierDeclType	char *		1095808	0					
ANR	1095840	Identifier	pipe		1095808	1					
ANR	1095841	AssignmentExpression	"* pipe = strchr ( buf -> data , '>' )"		1095808	2		=			
ANR	1095842	Identifier	pipe		1095808	0					
ANR	1095843	CallExpression	"strchr ( buf -> data , '>' )"		1095808	1					
ANR	1095844	Callee	strchr		1095808	0					
ANR	1095845	Identifier	strchr		1095808	0					
ANR	1095846	ArgumentList	buf -> data		1095808	1					
ANR	1095847	Argument	buf -> data		1095808	0					
ANR	1095848	PtrMemberAccess	buf -> data		1095808	0					
ANR	1095849	Identifier	buf		1095808	0					
ANR	1095850	Identifier	data		1095808	1					
ANR	1095851	Argument	'>'		1095808	1					
ANR	1095852	PrimaryExpression	'>'		1095808	0					
ANR	1095853	IfStatement	if ( pipe )		1095808	3					
ANR	1095854	Condition	pipe	1205:5:36335:36338	1095808	0	True				
ANR	1095855	Identifier	pipe		1095808	0					
ANR	1095856	CompoundStatement		5:11:105:105	1095808	1					
ANR	1095857	ExpressionStatement	args = r_str_new ( pipe + 1 )	1206:2:36345:36372	1095808	0	True				
ANR	1095858	AssignmentExpression	args = r_str_new ( pipe + 1 )		1095808	0		=			
ANR	1095859	Identifier	args		1095808	0					
ANR	1095860	CallExpression	r_str_new ( pipe + 1 )		1095808	1					
ANR	1095861	Callee	r_str_new		1095808	0					
ANR	1095862	Identifier	r_str_new		1095808	0					
ANR	1095863	ArgumentList	pipe + 1		1095808	1					
ANR	1095864	Argument	pipe + 1		1095808	0					
ANR	1095865	AdditiveExpression	pipe + 1		1095808	0		+			
ANR	1095866	Identifier	pipe		1095808	0					
ANR	1095867	PrimaryExpression	1		1095808	1					
ANR	1095868	ElseStatement	else		1095808	0					
ANR	1095869	CompoundStatement		7:8:146:146	1095808	0					
ANR	1095870	ExpressionStatement	args = r_str_new ( buf -> data )	1208:2:36386:36414	1095808	0	True				
ANR	1095871	AssignmentExpression	args = r_str_new ( buf -> data )		1095808	0		=			
ANR	1095872	Identifier	args		1095808	0					
ANR	1095873	CallExpression	r_str_new ( buf -> data )		1095808	1					
ANR	1095874	Callee	r_str_new		1095808	0					
ANR	1095875	Identifier	r_str_new		1095808	0					
ANR	1095876	ArgumentList	buf -> data		1095808	1					
ANR	1095877	Argument	buf -> data		1095808	0					
ANR	1095878	PtrMemberAccess	buf -> data		1095808	0					
ANR	1095879	Identifier	buf		1095808	0					
ANR	1095880	Identifier	data		1095808	1					
ANR	1095881	IfStatement	if ( ! args )		1095808	4					
ANR	1095882	Condition	! args	1210:5:36424:36428	1095808	0	True				
ANR	1095883	UnaryOperationExpression	! args		1095808	0					
ANR	1095884	UnaryOperator	!		1095808	0					
ANR	1095885	Identifier	args		1095808	1					
ANR	1095886	CompoundStatement		10:12:195:195	1095808	1					
ANR	1095887	GotoStatement	goto out ;	1211:2:36435:36443	1095808	0	True				
ANR	1095888	Identifier	out		1095808	0					
ANR	1095889	ExpressionStatement	n = r_str_word_set0 ( args )	1214:1:36450:36476	1095808	5	True				
ANR	1095890	AssignmentExpression	n = r_str_word_set0 ( args )		1095808	0		=			
ANR	1095891	Identifier	n		1095808	0					
ANR	1095892	CallExpression	r_str_word_set0 ( args )		1095808	1					
ANR	1095893	Callee	r_str_word_set0		1095808	0					
ANR	1095894	Identifier	r_str_word_set0		1095808	0					
ANR	1095895	ArgumentList	args		1095808	1					
ANR	1095896	Argument	args		1095808	0					
ANR	1095897	Identifier	args		1095808	0					
ANR	1095898	IfStatement	if ( n < narg )		1095808	6					
ANR	1095899	Condition	n < narg	1215:5:36483:36490	1095808	0	True				
ANR	1095900	RelationalExpression	n < narg		1095808	0		<			
ANR	1095901	Identifier	n		1095808	0					
ANR	1095902	Identifier	narg		1095808	1					
ANR	1095903	CompoundStatement		15:15:257:257	1095808	1					
ANR	1095904	GotoStatement	goto out ;	1216:2:36497:36505	1095808	0	True				
ANR	1095905	Identifier	out		1095808	0					
ANR	1095906	ExpressionStatement	"input = r_str_new ( r_str_word_get0 ( args , narg ) )"	1219:1:36512:36560	1095808	7	True				
ANR	1095907	AssignmentExpression	"input = r_str_new ( r_str_word_get0 ( args , narg ) )"		1095808	0		=			
ANR	1095908	Identifier	input		1095808	0					
ANR	1095909	CallExpression	"r_str_new ( r_str_word_get0 ( args , narg ) )"		1095808	1					
ANR	1095910	Callee	r_str_new		1095808	0					
ANR	1095911	Identifier	r_str_new		1095808	0					
ANR	1095912	ArgumentList	"r_str_word_get0 ( args , narg )"		1095808	1					
ANR	1095913	Argument	"r_str_word_get0 ( args , narg )"		1095808	0					
ANR	1095914	CallExpression	"r_str_word_get0 ( args , narg )"		1095808	0					
ANR	1095915	Callee	r_str_word_get0		1095808	0					
ANR	1095916	Identifier	r_str_word_get0		1095808	0					
ANR	1095917	ArgumentList	args		1095808	1					
ANR	1095918	Argument	args		1095808	0					
ANR	1095919	Identifier	args		1095808	0					
ANR	1095920	Argument	narg		1095808	1					
ANR	1095921	Identifier	narg		1095808	0					
ANR	1095922	IfStatement	if ( ! input )		1095808	8					
ANR	1095923	Condition	! input	1220:5:36567:36572	1095808	0	True				
ANR	1095924	UnaryOperationExpression	! input		1095808	0					
ANR	1095925	UnaryOperator	!		1095808	0					
ANR	1095926	Identifier	input		1095808	1					
ANR	1095927	CompoundStatement		20:13:339:339	1095808	1					
ANR	1095928	GotoStatement	goto out ;	1221:2:36579:36587	1095808	0	True				
ANR	1095929	Identifier	out		1095808	0					
ANR	1095930	IdentifierDeclStatement	const char * tinput = r_str_trim_ro ( input ) ;	1223:1:36593:36635	1095808	9	True				
ANR	1095931	IdentifierDecl	* tinput = r_str_trim_ro ( input )		1095808	0					
ANR	1095932	IdentifierDeclType	const char *		1095808	0					
ANR	1095933	Identifier	tinput		1095808	1					
ANR	1095934	AssignmentExpression	* tinput = r_str_trim_ro ( input )		1095808	2		=			
ANR	1095935	Identifier	tinput		1095808	0					
ANR	1095936	CallExpression	r_str_trim_ro ( input )		1095808	1					
ANR	1095937	Callee	r_str_trim_ro		1095808	0					
ANR	1095938	Identifier	r_str_trim_ro		1095808	0					
ANR	1095939	ArgumentList	input		1095808	1					
ANR	1095940	Argument	input		1095808	0					
ANR	1095941	Identifier	input		1095808	0					
ANR	1095942	ExpressionStatement	"autocomplete_process_path ( completion , buf -> data , tinput )"	1225:1:36639:36696	1095808	10	True				
ANR	1095943	CallExpression	"autocomplete_process_path ( completion , buf -> data , tinput )"		1095808	0					
ANR	1095944	Callee	autocomplete_process_path		1095808	0					
ANR	1095945	Identifier	autocomplete_process_path		1095808	0					
ANR	1095946	ArgumentList	completion		1095808	1					
ANR	1095947	Argument	completion		1095808	0					
ANR	1095948	Identifier	completion		1095808	0					
ANR	1095949	Argument	buf -> data		1095808	1					
ANR	1095950	PtrMemberAccess	buf -> data		1095808	0					
ANR	1095951	Identifier	buf		1095808	0					
ANR	1095952	Identifier	data		1095808	1					
ANR	1095953	Argument	tinput		1095808	2					
ANR	1095954	Identifier	tinput		1095808	0					
ANR	1095955	IfStatement	if ( input [ 0 ] == '/' || input [ 0 ] == '.' || ! extra_paths )		1095808	11					
ANR	1095956	Condition	input [ 0 ] == '/' || input [ 0 ] == '.' || ! extra_paths	1227:5:36704:36753	1095808	0	True				
ANR	1095957	OrExpression	input [ 0 ] == '/' || input [ 0 ] == '.' || ! extra_paths		1095808	0		||			
ANR	1095958	EqualityExpression	input [ 0 ] == '/'		1095808	0		==			
ANR	1095959	ArrayIndexing	input [ 0 ]		1095808	0					
ANR	1095960	Identifier	input		1095808	0					
ANR	1095961	PrimaryExpression	0		1095808	1					
ANR	1095962	PrimaryExpression	'/'		1095808	1					
ANR	1095963	OrExpression	input [ 0 ] == '.' || ! extra_paths		1095808	1		||			
ANR	1095964	EqualityExpression	input [ 0 ] == '.'		1095808	0		==			
ANR	1095965	ArrayIndexing	input [ 0 ]		1095808	0					
ANR	1095966	Identifier	input		1095808	0					
ANR	1095967	PrimaryExpression	0		1095808	1					
ANR	1095968	PrimaryExpression	'.'		1095808	1					
ANR	1095969	UnaryOperationExpression	! extra_paths		1095808	1					
ANR	1095970	UnaryOperator	!		1095808	0					
ANR	1095971	Identifier	extra_paths		1095808	1					
ANR	1095972	CompoundStatement		27:57:520:520	1095808	1					
ANR	1095973	GotoStatement	goto out ;	1228:2:36760:36768	1095808	0	True				
ANR	1095974	Identifier	out		1095808	0					
ANR	1095975	ForStatement	for ( i = 0 ; extra_paths [ i ] ; i ++ )		1095808	12					
ANR	1095976	ForInit	i = 0 ;	1231:6:36780:36785	1095808	0	True				
ANR	1095977	AssignmentExpression	i = 0		1095808	0		=			
ANR	1095978	Identifier	i		1095808	0					
ANR	1095979	PrimaryExpression	0		1095808	1					
ANR	1095980	Condition	extra_paths [ i ]	1231:13:36787:36800	1095808	1	True				
ANR	1095981	ArrayIndexing	extra_paths [ i ]		1095808	0					
ANR	1095982	Identifier	extra_paths		1095808	0					
ANR	1095983	Identifier	i		1095808	1					
ANR	1095984	PostIncDecOperationExpression	i ++	1231:29:36803:36806	1095808	2	True				
ANR	1095985	Identifier	i		1095808	0					
ANR	1095986	IncDec	++		1095808	1					
ANR	1095987	CompoundStatement		32:2:577:643	1095808	3					
ANR	1095988	IdentifierDeclStatement	"char * s = r_str_newf ( ""%s%s%s"" , extra_paths [ i ] , R_SYS_DIR , tinput ) ;"	1232:2:36813:36879	1095808	0	True				
ANR	1095989	IdentifierDecl	"* s = r_str_newf ( ""%s%s%s"" , extra_paths [ i ] , R_SYS_DIR , tinput )"		1095808	0					
ANR	1095990	IdentifierDeclType	char *		1095808	0					
ANR	1095991	Identifier	s		1095808	1					
ANR	1095992	AssignmentExpression	"* s = r_str_newf ( ""%s%s%s"" , extra_paths [ i ] , R_SYS_DIR , tinput )"		1095808	2		=			
ANR	1095993	Identifier	s		1095808	0					
ANR	1095994	CallExpression	"r_str_newf ( ""%s%s%s"" , extra_paths [ i ] , R_SYS_DIR , tinput )"		1095808	1					
ANR	1095995	Callee	r_str_newf		1095808	0					
ANR	1095996	Identifier	r_str_newf		1095808	0					
ANR	1095997	ArgumentList	"""%s%s%s"""		1095808	1					
ANR	1095998	Argument	"""%s%s%s"""		1095808	0					
ANR	1095999	PrimaryExpression	"""%s%s%s"""		1095808	0					
ANR	1096000	Argument	extra_paths [ i ]		1095808	1					
ANR	1096001	ArrayIndexing	extra_paths [ i ]		1095808	0					
ANR	1096002	Identifier	extra_paths		1095808	0					
ANR	1096003	Identifier	i		1095808	1					
ANR	1096004	Argument	R_SYS_DIR		1095808	2					
ANR	1096005	Identifier	R_SYS_DIR		1095808	0					
ANR	1096006	Argument	tinput		1095808	3					
ANR	1096007	Identifier	tinput		1095808	0					
ANR	1096008	IfStatement	if ( ! s )		1095808	1					
ANR	1096009	Condition	! s	1233:6:36887:36888	1095808	0	True				
ANR	1096010	UnaryOperationExpression	! s		1095808	0					
ANR	1096011	UnaryOperator	!		1095808	0					
ANR	1096012	Identifier	s		1095808	1					
ANR	1096013	CompoundStatement		33:10:655:655	1095808	1					
ANR	1096014	BreakStatement	break ;	1234:3:36896:36901	1095808	0	True				
ANR	1096015	ExpressionStatement	"autocomplete_process_path ( completion , buf -> data , s )"	1236:2:36909:36961	1095808	2	True				
ANR	1096016	CallExpression	"autocomplete_process_path ( completion , buf -> data , s )"		1095808	0					
ANR	1096017	Callee	autocomplete_process_path		1095808	0					
ANR	1096018	Identifier	autocomplete_process_path		1095808	0					
ANR	1096019	ArgumentList	completion		1095808	1					
ANR	1096020	Argument	completion		1095808	0					
ANR	1096021	Identifier	completion		1095808	0					
ANR	1096022	Argument	buf -> data		1095808	1					
ANR	1096023	PtrMemberAccess	buf -> data		1095808	0					
ANR	1096024	Identifier	buf		1095808	0					
ANR	1096025	Identifier	data		1095808	1					
ANR	1096026	Argument	s		1095808	2					
ANR	1096027	Identifier	s		1095808	0					
ANR	1096028	Label	out :	1238:0:36966:36969	1095808	13	True				
ANR	1096029	Identifier	out		1095808	0					
ANR	1096030	ExpressionStatement	free ( args )	1239:1:36972:36983	1095808	14	True				
ANR	1096031	CallExpression	free ( args )		1095808	0					
ANR	1096032	Callee	free		1095808	0					
ANR	1096033	Identifier	free		1095808	0					
ANR	1096034	ArgumentList	args		1095808	1					
ANR	1096035	Argument	args		1095808	0					
ANR	1096036	Identifier	args		1095808	0					
ANR	1096037	ExpressionStatement	free ( input )	1240:1:36986:36998	1095808	15	True				
ANR	1096038	CallExpression	free ( input )		1095808	0					
ANR	1096039	Callee	free		1095808	0					
ANR	1096040	Identifier	free		1095808	0					
ANR	1096041	ArgumentList	input		1095808	1					
ANR	1096042	Argument	input		1095808	0					
ANR	1096043	Identifier	input		1095808	0					
ANR	1096044	ReturnType	static void		1095808	1					
ANR	1096045	Identifier	autocompleteFilename		1095808	2					
ANR	1096046	ParameterList	"RLineCompletion * completion , RLineBuffer * buf , char * * extra_paths , int narg"		1095808	3					
ANR	1096047	Parameter	RLineCompletion * completion	1201:33:36158:36184	1095808	0	True				
ANR	1096048	ParameterType	RLineCompletion *		1095808	0					
ANR	1096049	Identifier	completion		1095808	1					
ANR	1096050	Parameter	RLineBuffer * buf	1201:62:36187:36202	1095808	1	True				
ANR	1096051	ParameterType	RLineBuffer *		1095808	0					
ANR	1096052	Identifier	buf		1095808	1					
ANR	1096053	Parameter	char * * extra_paths	1201:80:36205:36222	1095808	2	True				
ANR	1096054	ParameterType	char * *		1095808	0					
ANR	1096055	Identifier	extra_paths		1095808	1					
ANR	1096056	Parameter	int narg	1201:100:36225:36232	1095808	3	True				
ANR	1096057	ParameterType	int		1095808	0					
ANR	1096058	Identifier	narg		1095808	1					
ANR	1096059	CFGEntryNode	ENTRY		1095808		True				
ANR	1096060	CFGExitNode	EXIT		1095808		True				
ANR	1096061	Symbol	completion		1095808						
ANR	1096062	Symbol	* buf		1095808						
ANR	1096063	Symbol	NULL		1095808						
ANR	1096064	Symbol	* input		1095808						
ANR	1096065	Symbol	i		1095808						
ANR	1096066	Symbol	strchr		1095808						
ANR	1096067	Symbol	r_str_word_get0		1095808						
ANR	1096068	Symbol	r_str_newf		1095808						
ANR	1096069	Symbol	r_str_word_set0		1095808						
ANR	1096070	Symbol	n		1095808						
ANR	1096071	Symbol	args		1095808						
ANR	1096072	Symbol	input		1095808						
ANR	1096073	Symbol	buf -> data		1095808						
ANR	1096074	Symbol	buf		1095808						
ANR	1096075	Symbol	* i		1095808						
ANR	1096076	Symbol	s		1095808						
ANR	1096077	Symbol	R_SYS_DIR		1095808						
ANR	1096078	Symbol	r_str_trim_ro		1095808						
ANR	1096079	Symbol	pipe		1095808						
ANR	1096080	Symbol	narg		1095808						
ANR	1096081	Symbol	tinput		1095808						
ANR	1096082	Symbol	* extra_paths		1095808						
ANR	1096083	Symbol	r_str_new		1095808						
ANR	1096084	Symbol	extra_paths		1095808						
ANR	1096085	Function	autocomplete_pfele	1244:0:37053:37790							
ANR	1096086	FunctionDef	"autocomplete_pfele (RCore * core , RLineCompletion * completion , char * key , char * pfx , int idx , char * ptr)"		1096085	0					
ANR	1096087	CompoundStatement		1244:115:37168:37790	1096085	0					
ANR	1096088	IdentifierDeclStatement	"int i , ret = 0 ;"	1245:1:37171:37185	1096085	0	True				
ANR	1096089	IdentifierDecl	i		1096085	0					
ANR	1096090	IdentifierDeclType	int		1096085	0					
ANR	1096091	Identifier	i		1096085	1					
ANR	1096092	IdentifierDecl	ret = 0		1096085	1					
ANR	1096093	IdentifierDeclType	int		1096085	0					
ANR	1096094	Identifier	ret		1096085	1					
ANR	1096095	AssignmentExpression	ret = 0		1096085	2		=			
ANR	1096096	Identifier	ret		1096085	0					
ANR	1096097	PrimaryExpression	0		1096085	1					
ANR	1096098	IdentifierDeclStatement	int len = strlen ( ptr ) ;	1246:1:37188:37210	1096085	1	True				
ANR	1096099	IdentifierDecl	len = strlen ( ptr )		1096085	0					
ANR	1096100	IdentifierDeclType	int		1096085	0					
ANR	1096101	Identifier	len		1096085	1					
ANR	1096102	AssignmentExpression	len = strlen ( ptr )		1096085	2		=			
ANR	1096103	Identifier	len		1096085	0					
ANR	1096104	CallExpression	strlen ( ptr )		1096085	1					
ANR	1096105	Callee	strlen		1096085	0					
ANR	1096106	Identifier	strlen		1096085	0					
ANR	1096107	ArgumentList	ptr		1096085	1					
ANR	1096108	Argument	ptr		1096085	0					
ANR	1096109	Identifier	ptr		1096085	0					
ANR	1096110	IdentifierDeclStatement	"char * fmt = sdb_get ( core -> print -> formats , key , NULL ) ;"	1247:1:37213:37266	1096085	2	True				
ANR	1096111	IdentifierDecl	"* fmt = sdb_get ( core -> print -> formats , key , NULL )"		1096085	0					
ANR	1096112	IdentifierDeclType	char *		1096085	0					
ANR	1096113	Identifier	fmt		1096085	1					
ANR	1096114	AssignmentExpression	"* fmt = sdb_get ( core -> print -> formats , key , NULL )"		1096085	2		=			
ANR	1096115	Identifier	fmt		1096085	0					
ANR	1096116	CallExpression	"sdb_get ( core -> print -> formats , key , NULL )"		1096085	1					
ANR	1096117	Callee	sdb_get		1096085	0					
ANR	1096118	Identifier	sdb_get		1096085	0					
ANR	1096119	ArgumentList	core -> print -> formats		1096085	1					
ANR	1096120	Argument	core -> print -> formats		1096085	0					
ANR	1096121	PtrMemberAccess	core -> print -> formats		1096085	0					
ANR	1096122	PtrMemberAccess	core -> print		1096085	0					
ANR	1096123	Identifier	core		1096085	0					
ANR	1096124	Identifier	print		1096085	1					
ANR	1096125	Identifier	formats		1096085	1					
ANR	1096126	Argument	key		1096085	1					
ANR	1096127	Identifier	key		1096085	0					
ANR	1096128	Argument	NULL		1096085	2					
ANR	1096129	Identifier	NULL		1096085	0					
ANR	1096130	IfStatement	if ( fmt )		1096085	3					
ANR	1096131	Condition	fmt	1248:5:37273:37275	1096085	0	True				
ANR	1096132	Identifier	fmt		1096085	0					
ANR	1096133	CompoundStatement		6:2:113:152	1096085	1					
ANR	1096134	IdentifierDeclStatement	int nargs = r_str_word_set0_stack ( fmt ) ;	1249:2:37282:37321	1096085	0	True				
ANR	1096135	IdentifierDecl	nargs = r_str_word_set0_stack ( fmt )		1096085	0					
ANR	1096136	IdentifierDeclType	int		1096085	0					
ANR	1096137	Identifier	nargs		1096085	1					
ANR	1096138	AssignmentExpression	nargs = r_str_word_set0_stack ( fmt )		1096085	2		=			
ANR	1096139	Identifier	nargs		1096085	0					
ANR	1096140	CallExpression	r_str_word_set0_stack ( fmt )		1096085	1					
ANR	1096141	Callee	r_str_word_set0_stack		1096085	0					
ANR	1096142	Identifier	r_str_word_set0_stack		1096085	0					
ANR	1096143	ArgumentList	fmt		1096085	1					
ANR	1096144	Argument	fmt		1096085	0					
ANR	1096145	Identifier	fmt		1096085	0					
ANR	1096146	IfStatement	if ( nargs > 1 )		1096085	1					
ANR	1096147	Condition	nargs > 1	1250:6:37329:37337	1096085	0	True				
ANR	1096148	RelationalExpression	nargs > 1		1096085	0		>			
ANR	1096149	Identifier	nargs		1096085	0					
ANR	1096150	PrimaryExpression	1		1096085	1					
ANR	1096151	CompoundStatement		7:17:171:171	1096085	1					
ANR	1096152	ForStatement	for ( i = 1 ; i < nargs ; i ++ )		1096085	0					
ANR	1096153	ForInit	i = 1 ;	1251:8:37350:37355	1096085	0	True				
ANR	1096154	AssignmentExpression	i = 1		1096085	0		=			
ANR	1096155	Identifier	i		1096085	0					
ANR	1096156	PrimaryExpression	1		1096085	1					
ANR	1096157	Condition	i < nargs	1251:15:37357:37365	1096085	1	True				
ANR	1096158	RelationalExpression	i < nargs		1096085	0		<			
ANR	1096159	Identifier	i		1096085	0					
ANR	1096160	Identifier	nargs		1096085	1					
ANR	1096161	PostIncDecOperationExpression	i ++	1251:26:37368:37370	1096085	2	True				
ANR	1096162	Identifier	i		1096085	0					
ANR	1096163	IncDec	++		1096085	1					
ANR	1096164	CompoundStatement		11:4:291:319	1096085	3					
ANR	1096165	IdentifierDeclStatement	"const char * arg = r_str_word_get0 ( fmt , i ) ;"	1252:4:37379:37421	1096085	0	True				
ANR	1096166	IdentifierDecl	"* arg = r_str_word_get0 ( fmt , i )"		1096085	0					
ANR	1096167	IdentifierDeclType	const char *		1096085	0					
ANR	1096168	Identifier	arg		1096085	1					
ANR	1096169	AssignmentExpression	"* arg = r_str_word_get0 ( fmt , i )"		1096085	2		=			
ANR	1096170	Identifier	arg		1096085	0					
ANR	1096171	CallExpression	"r_str_word_get0 ( fmt , i )"		1096085	1					
ANR	1096172	Callee	r_str_word_get0		1096085	0					
ANR	1096173	Identifier	r_str_word_get0		1096085	0					
ANR	1096174	ArgumentList	fmt		1096085	1					
ANR	1096175	Argument	fmt		1096085	0					
ANR	1096176	Identifier	fmt		1096085	0					
ANR	1096177	Argument	i		1096085	1					
ANR	1096178	Identifier	i		1096085	0					
ANR	1096179	IdentifierDeclStatement	"char * p = strchr ( arg , '(' ) ;"	1253:4:37427:37454	1096085	1	True				
ANR	1096180	IdentifierDecl	"* p = strchr ( arg , '(' )"		1096085	0					
ANR	1096181	IdentifierDeclType	char *		1096085	0					
ANR	1096182	Identifier	p		1096085	1					
ANR	1096183	AssignmentExpression	"* p = strchr ( arg , '(' )"		1096085	2		=			
ANR	1096184	Identifier	p		1096085	0					
ANR	1096185	CallExpression	"strchr ( arg , '(' )"		1096085	1					
ANR	1096186	Callee	strchr		1096085	0					
ANR	1096187	Identifier	strchr		1096085	0					
ANR	1096188	ArgumentList	arg		1096085	1					
ANR	1096189	Argument	arg		1096085	0					
ANR	1096190	Identifier	arg		1096085	0					
ANR	1096191	Argument	'('		1096085	1					
ANR	1096192	PrimaryExpression	'('		1096085	0					
ANR	1096193	IdentifierDeclStatement	"char * p2 = strchr ( arg , ')' ) ;"	1254:4:37460:37488	1096085	2	True				
ANR	1096194	IdentifierDecl	"* p2 = strchr ( arg , ')' )"		1096085	0					
ANR	1096195	IdentifierDeclType	char *		1096085	0					
ANR	1096196	Identifier	p2		1096085	1					
ANR	1096197	AssignmentExpression	"* p2 = strchr ( arg , ')' )"		1096085	2		=			
ANR	1096198	Identifier	p2		1096085	0					
ANR	1096199	CallExpression	"strchr ( arg , ')' )"		1096085	1					
ANR	1096200	Callee	strchr		1096085	0					
ANR	1096201	Identifier	strchr		1096085	0					
ANR	1096202	ArgumentList	arg		1096085	1					
ANR	1096203	Argument	arg		1096085	0					
ANR	1096204	Identifier	arg		1096085	0					
ANR	1096205	Argument	')'		1096085	1					
ANR	1096206	PrimaryExpression	')'		1096085	0					
ANR	1096207	IfStatement	if ( p && p2 )		1096085	3					
ANR	1096208	Condition	p && p2	1256:8:37533:37539	1096085	0	True				
ANR	1096209	AndExpression	p && p2		1096085	0		&&			
ANR	1096210	Identifier	p		1096085	0					
ANR	1096211	Identifier	p2		1096085	1					
ANR	1096212	CompoundStatement		13:17:373:373	1096085	1					
ANR	1096213	ExpressionStatement	arg = p + 1	1257:5:37549:37560	1096085	0	True				
ANR	1096214	AssignmentExpression	arg = p + 1		1096085	0		=			
ANR	1096215	Identifier	arg		1096085	0					
ANR	1096216	AdditiveExpression	p + 1		1096085	1		+			
ANR	1096217	Identifier	p		1096085	0					
ANR	1096218	PrimaryExpression	1		1096085	1					
ANR	1096219	ExpressionStatement	* p2 = '\\0'	1258:5:37567:37577	1096085	1	True				
ANR	1096220	AssignmentExpression	* p2 = '\\0'		1096085	0		=			
ANR	1096221	UnaryOperationExpression	* p2		1096085	0					
ANR	1096222	UnaryOperator	*		1096085	0					
ANR	1096223	Identifier	p2		1096085	1					
ANR	1096224	PrimaryExpression	'\\0'		1096085	1					
ANR	1096225	IfStatement	"if ( ! len || ! strncmp ( ptr , arg , len ) )"		1096085	4					
ANR	1096226	Condition	"! len || ! strncmp ( ptr , arg , len )"	1260:8:37593:37624	1096085	0	True				
ANR	1096227	OrExpression	"! len || ! strncmp ( ptr , arg , len )"		1096085	0		||			
ANR	1096228	UnaryOperationExpression	! len		1096085	0					
ANR	1096229	UnaryOperator	!		1096085	0					
ANR	1096230	Identifier	len		1096085	1					
ANR	1096231	UnaryOperationExpression	"! strncmp ( ptr , arg , len )"		1096085	1					
ANR	1096232	UnaryOperator	!		1096085	0					
ANR	1096233	CallExpression	"strncmp ( ptr , arg , len )"		1096085	1					
ANR	1096234	Callee	strncmp		1096085	0					
ANR	1096235	Identifier	strncmp		1096085	0					
ANR	1096236	ArgumentList	ptr		1096085	1					
ANR	1096237	Argument	ptr		1096085	0					
ANR	1096238	Identifier	ptr		1096085	0					
ANR	1096239	Argument	arg		1096085	1					
ANR	1096240	Identifier	arg		1096085	0					
ANR	1096241	Argument	len		1096085	2					
ANR	1096242	Identifier	len		1096085	0					
ANR	1096243	CompoundStatement		18:5:465:515	1096085	1					
ANR	1096244	IdentifierDeclStatement	"char * s = r_str_newf ( ""pf%s.%s.%s"" , pfx , key , arg ) ;"	1261:5:37634:37684	1096085	0	True				
ANR	1096245	IdentifierDecl	"* s = r_str_newf ( ""pf%s.%s.%s"" , pfx , key , arg )"		1096085	0					
ANR	1096246	IdentifierDeclType	char *		1096085	0					
ANR	1096247	Identifier	s		1096085	1					
ANR	1096248	AssignmentExpression	"* s = r_str_newf ( ""pf%s.%s.%s"" , pfx , key , arg )"		1096085	2		=			
ANR	1096249	Identifier	s		1096085	0					
ANR	1096250	CallExpression	"r_str_newf ( ""pf%s.%s.%s"" , pfx , key , arg )"		1096085	1					
ANR	1096251	Callee	r_str_newf		1096085	0					
ANR	1096252	Identifier	r_str_newf		1096085	0					
ANR	1096253	ArgumentList	"""pf%s.%s.%s"""		1096085	1					
ANR	1096254	Argument	"""pf%s.%s.%s"""		1096085	0					
ANR	1096255	PrimaryExpression	"""pf%s.%s.%s"""		1096085	0					
ANR	1096256	Argument	pfx		1096085	1					
ANR	1096257	Identifier	pfx		1096085	0					
ANR	1096258	Argument	key		1096085	2					
ANR	1096259	Identifier	key		1096085	0					
ANR	1096260	Argument	arg		1096085	3					
ANR	1096261	Identifier	arg		1096085	0					
ANR	1096262	ExpressionStatement	"r_line_completion_push ( completion , s )"	1262:5:37691:37729	1096085	1	True				
ANR	1096263	CallExpression	"r_line_completion_push ( completion , s )"		1096085	0					
ANR	1096264	Callee	r_line_completion_push		1096085	0					
ANR	1096265	Identifier	r_line_completion_push		1096085	0					
ANR	1096266	ArgumentList	completion		1096085	1					
ANR	1096267	Argument	completion		1096085	0					
ANR	1096268	Identifier	completion		1096085	0					
ANR	1096269	Argument	s		1096085	1					
ANR	1096270	Identifier	s		1096085	0					
ANR	1096271	ExpressionStatement	free ( s )	1263:5:37736:37744	1096085	2	True				
ANR	1096272	CallExpression	free ( s )		1096085	0					
ANR	1096273	Callee	free		1096085	0					
ANR	1096274	Identifier	free		1096085	0					
ANR	1096275	ArgumentList	s		1096085	1					
ANR	1096276	Argument	s		1096085	0					
ANR	1096277	Identifier	s		1096085	0					
ANR	1096278	ExpressionStatement	free ( fmt )	1268:1:37765:37775	1096085	4	True				
ANR	1096279	CallExpression	free ( fmt )		1096085	0					
ANR	1096280	Callee	free		1096085	0					
ANR	1096281	Identifier	free		1096085	0					
ANR	1096282	ArgumentList	fmt		1096085	1					
ANR	1096283	Argument	fmt		1096085	0					
ANR	1096284	Identifier	fmt		1096085	0					
ANR	1096285	ReturnStatement	return ret ;	1269:1:37778:37788	1096085	5	True				
ANR	1096286	Identifier	ret		1096085	0					
ANR	1096287	ReturnType	static int		1096085	1					
ANR	1096288	Identifier	autocomplete_pfele		1096085	2					
ANR	1096289	ParameterList	"RCore * core , RLineCompletion * completion , char * key , char * pfx , int idx , char * ptr"		1096085	3					
ANR	1096290	Parameter	RCore * core	1244:31:37084:37094	1096085	0	True				
ANR	1096291	ParameterType	RCore *		1096085	0					
ANR	1096292	Identifier	core		1096085	1					
ANR	1096293	Parameter	RLineCompletion * completion	1244:44:37097:37123	1096085	1	True				
ANR	1096294	ParameterType	RLineCompletion *		1096085	0					
ANR	1096295	Identifier	completion		1096085	1					
ANR	1096296	Parameter	char * key	1244:73:37126:37134	1096085	2	True				
ANR	1096297	ParameterType	char *		1096085	0					
ANR	1096298	Identifier	key		1096085	1					
ANR	1096299	Parameter	char * pfx	1244:84:37137:37145	1096085	3	True				
ANR	1096300	ParameterType	char *		1096085	0					
ANR	1096301	Identifier	pfx		1096085	1					
ANR	1096302	Parameter	int idx	1244:95:37148:37154	1096085	4	True				
ANR	1096303	ParameterType	int		1096085	0					
ANR	1096304	Identifier	idx		1096085	1					
ANR	1096305	Parameter	char * ptr	1244:104:37157:37165	1096085	5	True				
ANR	1096306	ParameterType	char *		1096085	0					
ANR	1096307	Identifier	ptr		1096085	1					
ANR	1096308	CFGEntryNode	ENTRY		1096085		True				
ANR	1096309	CFGExitNode	EXIT		1096085		True				
ANR	1096310	Symbol	p2		1096085						
ANR	1096311	Symbol	pfx		1096085						
ANR	1096312	Symbol	* core		1096085						
ANR	1096313	Symbol	strchr		1096085						
ANR	1096314	Symbol	r_str_newf		1096085						
ANR	1096315	Symbol	fmt		1096085						
ANR	1096316	Symbol	strlen		1096085						
ANR	1096317	Symbol	strncmp		1096085						
ANR	1096318	Symbol	len		1096085						
ANR	1096319	Symbol	arg		1096085						
ANR	1096320	Symbol	key		1096085						
ANR	1096321	Symbol	* * core		1096085						
ANR	1096322	Symbol	ret		1096085						
ANR	1096323	Symbol	completion		1096085						
ANR	1096324	Symbol	r_str_word_set0_stack		1096085						
ANR	1096325	Symbol	NULL		1096085						
ANR	1096326	Symbol	i		1096085						
ANR	1096327	Symbol	sdb_get		1096085						
ANR	1096328	Symbol	r_str_word_get0		1096085						
ANR	1096329	Symbol	* p2		1096085						
ANR	1096330	Symbol	core -> print -> formats		1096085						
ANR	1096331	Symbol	ptr		1096085						
ANR	1096332	Symbol	nargs		1096085						
ANR	1096333	Symbol	p		1096085						
ANR	1096334	Symbol	core		1096085						
ANR	1096335	Symbol	* core -> print		1096085						
ANR	1096336	Symbol	s		1096085						
ANR	1096337	Symbol	idx		1096085						
ANR	1096338	Symbol	core -> print		1096085						
ANR	1096339	Function	autocomplete_default	1274:0:37913:38530							
ANR	1096340	FunctionDef	"autocomplete_default (R_NULLABLE RCore * core , RLineCompletion * completion , RLineBuffer * buf)"		1096339	0					
ANR	1096341	CompoundStatement		1274:104:38017:38530	1096339	0					
ANR	1096342	IdentifierDeclStatement	RCoreAutocomplete * a = core ? core -> autocomplete : NULL ;	1275:1:38020:38075	1096339	0	True				
ANR	1096343	IdentifierDecl	* a = core ? core -> autocomplete : NULL		1096339	0					
ANR	1096344	IdentifierDeclType	RCoreAutocomplete *		1096339	0					
ANR	1096345	Identifier	a		1096339	1					
ANR	1096346	AssignmentExpression	* a = core ? core -> autocomplete : NULL		1096339	2		=			
ANR	1096347	Identifier	a		1096339	0					
ANR	1096348	ConditionalExpression	core ? core -> autocomplete : NULL		1096339	1					
ANR	1096349	Condition	core		1096339	0					
ANR	1096350	Identifier	core		1096339	0					
ANR	1096351	PtrMemberAccess	core -> autocomplete		1096339	1					
ANR	1096352	Identifier	core		1096339	0					
ANR	1096353	Identifier	autocomplete		1096339	1					
ANR	1096354	Identifier	NULL		1096339	2					
ANR	1096355	IdentifierDeclStatement	int i ;	1276:1:38078:38083	1096339	1	True				
ANR	1096356	IdentifierDecl	i		1096339	0					
ANR	1096357	IdentifierDeclType	int		1096339	0					
ANR	1096358	Identifier	i		1096339	1					
ANR	1096359	IfStatement	if ( a )		1096339	2					
ANR	1096360	Condition	a	1277:5:38090:38090	1096339	0	True				
ANR	1096361	Identifier	a		1096339	0					
ANR	1096362	CompoundStatement		4:8:75:75	1096339	1					
ANR	1096363	ForStatement	for ( i = 0 ; i < a -> n_subcmds ; i ++ )		1096339	0					
ANR	1096364	ForInit	i = 0 ;	1278:7:38102:38107	1096339	0	True				
ANR	1096365	AssignmentExpression	i = 0		1096339	0		=			
ANR	1096366	Identifier	i		1096339	0					
ANR	1096367	PrimaryExpression	0		1096339	1					
ANR	1096368	Condition	i < a -> n_subcmds	1278:14:38109:38124	1096339	1	True				
ANR	1096369	RelationalExpression	i < a -> n_subcmds		1096339	0		<			
ANR	1096370	Identifier	i		1096339	0					
ANR	1096371	PtrMemberAccess	a -> n_subcmds		1096339	1					
ANR	1096372	Identifier	a		1096339	0					
ANR	1096373	Identifier	n_subcmds		1096339	1					
ANR	1096374	PostIncDecOperationExpression	i ++	1278:32:38127:38129	1096339	2	True				
ANR	1096375	Identifier	i		1096339	0					
ANR	1096376	IncDec	++		1096339	1					
ANR	1096377	CompoundStatement		5:37:114:114	1096339	3					
ANR	1096378	IfStatement	"if ( buf -> data [ 0 ] == 0 || ! strncmp ( a -> subcmds [ i ] -> cmd , buf -> data , a -> subcmds [ i ] -> length ) )"		1096339	0					
ANR	1096379	Condition	"buf -> data [ 0 ] == 0 || ! strncmp ( a -> subcmds [ i ] -> cmd , buf -> data , a -> subcmds [ i ] -> length )"	1279:7:38141:38224	1096339	0	True				
ANR	1096380	OrExpression	"buf -> data [ 0 ] == 0 || ! strncmp ( a -> subcmds [ i ] -> cmd , buf -> data , a -> subcmds [ i ] -> length )"		1096339	0		||			
ANR	1096381	EqualityExpression	buf -> data [ 0 ] == 0		1096339	0		==			
ANR	1096382	ArrayIndexing	buf -> data [ 0 ]		1096339	0					
ANR	1096383	PtrMemberAccess	buf -> data		1096339	0					
ANR	1096384	Identifier	buf		1096339	0					
ANR	1096385	Identifier	data		1096339	1					
ANR	1096386	PrimaryExpression	0		1096339	1					
ANR	1096387	PrimaryExpression	0		1096339	1					
ANR	1096388	UnaryOperationExpression	"! strncmp ( a -> subcmds [ i ] -> cmd , buf -> data , a -> subcmds [ i ] -> length )"		1096339	1					
ANR	1096389	UnaryOperator	!		1096339	0					
ANR	1096390	CallExpression	"strncmp ( a -> subcmds [ i ] -> cmd , buf -> data , a -> subcmds [ i ] -> length )"		1096339	1					
ANR	1096391	Callee	strncmp		1096339	0					
ANR	1096392	Identifier	strncmp		1096339	0					
ANR	1096393	ArgumentList	a -> subcmds [ i ] -> cmd		1096339	1					
ANR	1096394	Argument	a -> subcmds [ i ] -> cmd		1096339	0					
ANR	1096395	PtrMemberAccess	a -> subcmds [ i ] -> cmd		1096339	0					
ANR	1096396	ArrayIndexing	a -> subcmds [ i ]		1096339	0					
ANR	1096397	PtrMemberAccess	a -> subcmds		1096339	0					
ANR	1096398	Identifier	a		1096339	0					
ANR	1096399	Identifier	subcmds		1096339	1					
ANR	1096400	Identifier	i		1096339	1					
ANR	1096401	Identifier	cmd		1096339	1					
ANR	1096402	Argument	buf -> data		1096339	1					
ANR	1096403	PtrMemberAccess	buf -> data		1096339	0					
ANR	1096404	Identifier	buf		1096339	0					
ANR	1096405	Identifier	data		1096339	1					
ANR	1096406	Argument	a -> subcmds [ i ] -> length		1096339	2					
ANR	1096407	PtrMemberAccess	a -> subcmds [ i ] -> length		1096339	0					
ANR	1096408	ArrayIndexing	a -> subcmds [ i ]		1096339	0					
ANR	1096409	PtrMemberAccess	a -> subcmds		1096339	0					
ANR	1096410	Identifier	a		1096339	0					
ANR	1096411	Identifier	subcmds		1096339	1					
ANR	1096412	Identifier	i		1096339	1					
ANR	1096413	Identifier	length		1096339	1					
ANR	1096414	CompoundStatement		6:93:209:209	1096339	1					
ANR	1096415	ExpressionStatement	"r_line_completion_push ( completion , a -> subcmds [ i ] -> cmd )"	1280:4:38233:38288	1096339	0	True				
ANR	1096416	CallExpression	"r_line_completion_push ( completion , a -> subcmds [ i ] -> cmd )"		1096339	0					
ANR	1096417	Callee	r_line_completion_push		1096339	0					
ANR	1096418	Identifier	r_line_completion_push		1096339	0					
ANR	1096419	ArgumentList	completion		1096339	1					
ANR	1096420	Argument	completion		1096339	0					
ANR	1096421	Identifier	completion		1096339	0					
ANR	1096422	Argument	a -> subcmds [ i ] -> cmd		1096339	1					
ANR	1096423	PtrMemberAccess	a -> subcmds [ i ] -> cmd		1096339	0					
ANR	1096424	ArrayIndexing	a -> subcmds [ i ]		1096339	0					
ANR	1096425	PtrMemberAccess	a -> subcmds		1096339	0					
ANR	1096426	Identifier	a		1096339	0					
ANR	1096427	Identifier	subcmds		1096339	1					
ANR	1096428	Identifier	i		1096339	1					
ANR	1096429	Identifier	cmd		1096339	1					
ANR	1096430	ElseStatement	else		1096339	0					
ANR	1096431	CompoundStatement		10:8:289:289	1096339	0					
ANR	1096432	ForStatement	for ( i = 0 ; i < radare_argc && radare_argv [ i ] ; i ++ )		1096339	0					
ANR	1096433	ForInit	i = 0 ;	1284:7:38316:38321	1096339	0	True				
ANR	1096434	AssignmentExpression	i = 0		1096339	0		=			
ANR	1096435	Identifier	i		1096339	0					
ANR	1096436	PrimaryExpression	0		1096339	1					
ANR	1096437	Condition	i < radare_argc && radare_argv [ i ]	1284:14:38323:38355	1096339	1	True				
ANR	1096438	AndExpression	i < radare_argc && radare_argv [ i ]		1096339	0		&&			
ANR	1096439	RelationalExpression	i < radare_argc		1096339	0		<			
ANR	1096440	Identifier	i		1096339	0					
ANR	1096441	Identifier	radare_argc		1096339	1					
ANR	1096442	ArrayIndexing	radare_argv [ i ]		1096339	1					
ANR	1096443	Identifier	radare_argv		1096339	0					
ANR	1096444	Identifier	i		1096339	1					
ANR	1096445	PostIncDecOperationExpression	i ++	1284:49:38358:38360	1096339	2	True				
ANR	1096446	Identifier	i		1096339	0					
ANR	1096447	IncDec	++		1096339	1					
ANR	1096448	CompoundStatement		12:3:350:386	1096339	3					
ANR	1096449	IdentifierDeclStatement	int length = strlen ( radare_argv [ i ] ) ;	1285:3:38368:38404	1096339	0	True				
ANR	1096450	IdentifierDecl	length = strlen ( radare_argv [ i ] )		1096339	0					
ANR	1096451	IdentifierDeclType	int		1096339	0					
ANR	1096452	Identifier	length		1096339	1					
ANR	1096453	AssignmentExpression	length = strlen ( radare_argv [ i ] )		1096339	2		=			
ANR	1096454	Identifier	length		1096339	0					
ANR	1096455	CallExpression	strlen ( radare_argv [ i ] )		1096339	1					
ANR	1096456	Callee	strlen		1096339	0					
ANR	1096457	Identifier	strlen		1096339	0					
ANR	1096458	ArgumentList	radare_argv [ i ]		1096339	1					
ANR	1096459	Argument	radare_argv [ i ]		1096339	0					
ANR	1096460	ArrayIndexing	radare_argv [ i ]		1096339	0					
ANR	1096461	Identifier	radare_argv		1096339	0					
ANR	1096462	Identifier	i		1096339	1					
ANR	1096463	IfStatement	"if ( ! strncmp ( radare_argv [ i ] , buf -> data , length ) )"		1096339	1					
ANR	1096464	Condition	"! strncmp ( radare_argv [ i ] , buf -> data , length )"	1286:7:38413:38456	1096339	0	True				
ANR	1096465	UnaryOperationExpression	"! strncmp ( radare_argv [ i ] , buf -> data , length )"		1096339	0					
ANR	1096466	UnaryOperator	!		1096339	0					
ANR	1096467	CallExpression	"strncmp ( radare_argv [ i ] , buf -> data , length )"		1096339	1					
ANR	1096468	Callee	strncmp		1096339	0					
ANR	1096469	Identifier	strncmp		1096339	0					
ANR	1096470	ArgumentList	radare_argv [ i ]		1096339	1					
ANR	1096471	Argument	radare_argv [ i ]		1096339	0					
ANR	1096472	ArrayIndexing	radare_argv [ i ]		1096339	0					
ANR	1096473	Identifier	radare_argv		1096339	0					
ANR	1096474	Identifier	i		1096339	1					
ANR	1096475	Argument	buf -> data		1096339	1					
ANR	1096476	PtrMemberAccess	buf -> data		1096339	0					
ANR	1096477	Identifier	buf		1096339	0					
ANR	1096478	Identifier	data		1096339	1					
ANR	1096479	Argument	length		1096339	2					
ANR	1096480	Identifier	length		1096339	0					
ANR	1096481	CompoundStatement		13:53:441:441	1096339	1					
ANR	1096482	ExpressionStatement	"r_line_completion_push ( completion , radare_argv [ i ] )"	1287:4:38465:38516	1096339	0	True				
ANR	1096483	CallExpression	"r_line_completion_push ( completion , radare_argv [ i ] )"		1096339	0					
ANR	1096484	Callee	r_line_completion_push		1096339	0					
ANR	1096485	Identifier	r_line_completion_push		1096339	0					
ANR	1096486	ArgumentList	completion		1096339	1					
ANR	1096487	Argument	completion		1096339	0					
ANR	1096488	Identifier	completion		1096339	0					
ANR	1096489	Argument	radare_argv [ i ]		1096339	1					
ANR	1096490	ArrayIndexing	radare_argv [ i ]		1096339	0					
ANR	1096491	Identifier	radare_argv		1096339	0					
ANR	1096492	Identifier	i		1096339	1					
ANR	1096493	ReturnType	static void		1096339	1					
ANR	1096494	Identifier	autocomplete_default		1096339	2					
ANR	1096495	ParameterList	"R_NULLABLE RCore * core , RLineCompletion * completion , RLineBuffer * buf"		1096339	3					
ANR	1096496	Parameter	R_NULLABLE RCore * core	1274:33:37946:37967	1096339	0	True				
ANR	1096497	ParameterType	R_NULLABLE RCore *		1096339	0					
ANR	1096498	Identifier	core		1096339	1					
ANR	1096499	Parameter	RLineCompletion * completion	1274:57:37970:37996	1096339	1	True				
ANR	1096500	ParameterType	RLineCompletion *		1096339	0					
ANR	1096501	Identifier	completion		1096339	1					
ANR	1096502	Parameter	RLineBuffer * buf	1274:86:37999:38014	1096339	2	True				
ANR	1096503	ParameterType	RLineBuffer *		1096339	0					
ANR	1096504	Identifier	buf		1096339	1					
ANR	1096505	CFGEntryNode	ENTRY		1096339		True				
ANR	1096506	CFGExitNode	EXIT		1096339		True				
ANR	1096507	Symbol	* * * a		1096339						
ANR	1096508	Symbol	radare_argv		1096339						
ANR	1096509	Symbol	a -> subcmds		1096339						
ANR	1096510	Symbol	* * buf		1096339						
ANR	1096511	Symbol	* core		1096339						
ANR	1096512	Symbol	a -> n_subcmds		1096339						
ANR	1096513	Symbol	strncmp		1096339						
ANR	1096514	Symbol	strlen		1096339						
ANR	1096515	Symbol	core -> autocomplete		1096339						
ANR	1096516	Symbol	* * a -> subcmds		1096339						
ANR	1096517	Symbol	completion		1096339						
ANR	1096518	Symbol	a		1096339						
ANR	1096519	Symbol	a -> subcmds [ i ] -> length		1096339						
ANR	1096520	Symbol	* * i		1096339						
ANR	1096521	Symbol	* buf		1096339						
ANR	1096522	Symbol	NULL		1096339						
ANR	1096523	Symbol	* buf -> data		1096339						
ANR	1096524	Symbol	a -> subcmds [ i ] -> cmd		1096339						
ANR	1096525	Symbol	length		1096339						
ANR	1096526	Symbol	i		1096339						
ANR	1096527	Symbol	* * a		1096339						
ANR	1096528	Symbol	* a		1096339						
ANR	1096529	Symbol	radare_argc		1096339						
ANR	1096530	Symbol	* a -> subcmds		1096339						
ANR	1096531	Symbol	core		1096339						
ANR	1096532	Symbol	buf -> data		1096339						
ANR	1096533	Symbol	buf		1096339						
ANR	1096534	Symbol	* i		1096339						
ANR	1096535	Symbol	* radare_argv		1096339						
ANR	1096536	Function	autocomplete_evals	1293:0:38533:38945							
ANR	1096537	FunctionDef	"autocomplete_evals (RCore * core , RLineCompletion * completion , const char * str)"		1096536	0					
ANR	1096538	CompoundStatement		1293:90:38623:38945	1096536	0					
ANR	1096539	ExpressionStatement	r_return_if_fail ( str )	1294:1:38626:38648	1096536	0	True				
ANR	1096540	CallExpression	r_return_if_fail ( str )		1096536	0					
ANR	1096541	Callee	r_return_if_fail		1096536	0					
ANR	1096542	Identifier	r_return_if_fail		1096536	0					
ANR	1096543	ArgumentList	str		1096536	1					
ANR	1096544	Argument	str		1096536	0					
ANR	1096545	Identifier	str		1096536	0					
ANR	1096546	IdentifierDeclStatement	RConfigNode * bt ;	1295:1:38651:38666	1096536	1	True				
ANR	1096547	IdentifierDecl	* bt		1096536	0					
ANR	1096548	IdentifierDeclType	RConfigNode *		1096536	0					
ANR	1096549	Identifier	bt		1096536	1					
ANR	1096550	IdentifierDeclStatement	RListIter * iter ;	1296:1:38669:38684	1096536	2	True				
ANR	1096551	IdentifierDecl	* iter		1096536	0					
ANR	1096552	IdentifierDeclType	RListIter *		1096536	0					
ANR	1096553	Identifier	iter		1096536	1					
ANR	1096554	IdentifierDeclStatement	"char * tmp = strrchr ( str , ' ' ) ;"	1297:1:38687:38717	1096536	3	True				
ANR	1096555	IdentifierDecl	"* tmp = strrchr ( str , ' ' )"		1096536	0					
ANR	1096556	IdentifierDeclType	char *		1096536	0					
ANR	1096557	Identifier	tmp		1096536	1					
ANR	1096558	AssignmentExpression	"* tmp = strrchr ( str , ' ' )"		1096536	2		=			
ANR	1096559	Identifier	tmp		1096536	0					
ANR	1096560	CallExpression	"strrchr ( str , ' ' )"		1096536	1					
ANR	1096561	Callee	strrchr		1096536	0					
ANR	1096562	Identifier	strrchr		1096536	0					
ANR	1096563	ArgumentList	str		1096536	1					
ANR	1096564	Argument	str		1096536	0					
ANR	1096565	Identifier	str		1096536	0					
ANR	1096566	Argument	' '		1096536	1					
ANR	1096567	PrimaryExpression	' '		1096536	0					
ANR	1096568	IfStatement	if ( tmp )		1096536	4					
ANR	1096569	Condition	tmp	1298:5:38724:38726	1096536	0	True				
ANR	1096570	Identifier	tmp		1096536	0					
ANR	1096571	CompoundStatement		6:10:105:105	1096536	1					
ANR	1096572	ExpressionStatement	str = tmp + 1	1299:2:38733:38746	1096536	0	True				
ANR	1096573	AssignmentExpression	str = tmp + 1		1096536	0		=			
ANR	1096574	Identifier	str		1096536	0					
ANR	1096575	AdditiveExpression	tmp + 1		1096536	1		+			
ANR	1096576	Identifier	tmp		1096536	0					
ANR	1096577	PrimaryExpression	1		1096536	1					
ANR	1096578	IdentifierDeclStatement	int n = strlen ( str ) ;	1301:1:38752:38772	1096536	5	True				
ANR	1096579	IdentifierDecl	n = strlen ( str )		1096536	0					
ANR	1096580	IdentifierDeclType	int		1096536	0					
ANR	1096581	Identifier	n		1096536	1					
ANR	1096582	AssignmentExpression	n = strlen ( str )		1096536	2		=			
ANR	1096583	Identifier	n		1096536	0					
ANR	1096584	CallExpression	strlen ( str )		1096536	1					
ANR	1096585	Callee	strlen		1096536	0					
ANR	1096586	Identifier	strlen		1096536	0					
ANR	1096587	ArgumentList	str		1096536	1					
ANR	1096588	Argument	str		1096536	0					
ANR	1096589	Identifier	str		1096536	0					
ANR	1096590	IfStatement	if ( n < 1 )		1096536	6					
ANR	1096591	Condition	n < 1	1302:5:38779:38783	1096536	0	True				
ANR	1096592	RelationalExpression	n < 1		1096536	0		<			
ANR	1096593	Identifier	n		1096536	0					
ANR	1096594	PrimaryExpression	1		1096536	1					
ANR	1096595	CompoundStatement		10:12:162:162	1096536	1					
ANR	1096596	ReturnStatement	return ;	1303:2:38790:38796	1096536	0	True				
ANR	1096597	Statement	r_list_foreach	1305:1:38802:38815	1096536	7	True				
ANR	1096598	Statement	(	1305:16:38817:38817	1096536	8	True				
ANR	1096599	Statement	core	1305:17:38818:38821	1096536	9	True				
ANR	1096600	Statement	->	1305:21:38822:38823	1096536	10	True				
ANR	1096601	Statement	config	1305:23:38824:38829	1096536	11	True				
ANR	1096602	Statement	->	1305:29:38830:38831	1096536	12	True				
ANR	1096603	Statement	nodes	1305:31:38832:38836	1096536	13	True				
ANR	1096604	Statement	","	1305:36:38837:38837	1096536	14	True				
ANR	1096605	Statement	iter	1305:38:38839:38842	1096536	15	True				
ANR	1096606	Statement	","	1305:42:38843:38843	1096536	16	True				
ANR	1096607	Statement	bt	1305:44:38845:38846	1096536	17	True				
ANR	1096608	Statement	)	1305:46:38847:38847	1096536	18	True				
ANR	1096609	CompoundStatement		13:48:225:225	1096536	19					
ANR	1096610	IfStatement	"if ( ! strncmp ( bt -> name , str , n ) )"		1096536	0					
ANR	1096611	Condition	"! strncmp ( bt -> name , str , n )"	1306:6:38857:38883	1096536	0	True				
ANR	1096612	UnaryOperationExpression	"! strncmp ( bt -> name , str , n )"		1096536	0					
ANR	1096613	UnaryOperator	!		1096536	0					
ANR	1096614	CallExpression	"strncmp ( bt -> name , str , n )"		1096536	1					
ANR	1096615	Callee	strncmp		1096536	0					
ANR	1096616	Identifier	strncmp		1096536	0					
ANR	1096617	ArgumentList	bt -> name		1096536	1					
ANR	1096618	Argument	bt -> name		1096536	0					
ANR	1096619	PtrMemberAccess	bt -> name		1096536	0					
ANR	1096620	Identifier	bt		1096536	0					
ANR	1096621	Identifier	name		1096536	1					
ANR	1096622	Argument	str		1096536	1					
ANR	1096623	Identifier	str		1096536	0					
ANR	1096624	Argument	n		1096536	2					
ANR	1096625	Identifier	n		1096536	0					
ANR	1096626	CompoundStatement		14:35:262:262	1096536	1					
ANR	1096627	ExpressionStatement	"r_line_completion_push ( completion , bt -> name )"	1307:3:38891:38936	1096536	0	True				
ANR	1096628	CallExpression	"r_line_completion_push ( completion , bt -> name )"		1096536	0					
ANR	1096629	Callee	r_line_completion_push		1096536	0					
ANR	1096630	Identifier	r_line_completion_push		1096536	0					
ANR	1096631	ArgumentList	completion		1096536	1					
ANR	1096632	Argument	completion		1096536	0					
ANR	1096633	Identifier	completion		1096536	0					
ANR	1096634	Argument	bt -> name		1096536	1					
ANR	1096635	PtrMemberAccess	bt -> name		1096536	0					
ANR	1096636	Identifier	bt		1096536	0					
ANR	1096637	Identifier	name		1096536	1					
ANR	1096638	ReturnType	static void		1096536	1					
ANR	1096639	Identifier	autocomplete_evals		1096536	2					
ANR	1096640	ParameterList	"RCore * core , RLineCompletion * completion , const char * str"		1096536	3					
ANR	1096641	Parameter	RCore * core	1293:31:38564:38574	1096536	0	True				
ANR	1096642	ParameterType	RCore *		1096536	0					
ANR	1096643	Identifier	core		1096536	1					
ANR	1096644	Parameter	RLineCompletion * completion	1293:44:38577:38603	1096536	1	True				
ANR	1096645	ParameterType	RLineCompletion *		1096536	0					
ANR	1096646	Identifier	completion		1096536	1					
ANR	1096647	Parameter	const char * str	1293:73:38606:38620	1096536	2	True				
ANR	1096648	ParameterType	const char *		1096536	0					
ANR	1096649	Identifier	str		1096536	1					
ANR	1096650	CFGEntryNode	ENTRY		1096536		True				
ANR	1096651	CFGExitNode	EXIT		1096536		True				
ANR	1096652	Symbol	str		1096536						
ANR	1096653	Symbol	core		1096536						
ANR	1096654	Symbol	completion		1096536						
ANR	1096655	Symbol	strlen		1096536						
ANR	1096656	Symbol	strncmp		1096536						
ANR	1096657	Symbol	bt		1096536						
ANR	1096658	Symbol	tmp		1096536						
ANR	1096659	Symbol	strrchr		1096536						
ANR	1096660	Symbol	iter		1096536						
ANR	1096661	Symbol	* bt		1096536						
ANR	1096662	Symbol	bt -> name		1096536						
ANR	1096663	Symbol	n		1096536						
ANR	1096664	Function	autocomplete_project	1312:0:38948:39485							
ANR	1096665	FunctionDef	"autocomplete_project (RCore * core , RLineCompletion * completion , const char * str)"		1096664	0					
ANR	1096666	CompoundStatement		1312:92:39040:39485	1096664	0					
ANR	1096667	ExpressionStatement	r_return_if_fail ( str )	1313:1:39043:39065	1096664	0	True				
ANR	1096668	CallExpression	r_return_if_fail ( str )		1096664	0					
ANR	1096669	Callee	r_return_if_fail		1096664	0					
ANR	1096670	Identifier	r_return_if_fail		1096664	0					
ANR	1096671	ArgumentList	str		1096664	1					
ANR	1096672	Argument	str		1096664	0					
ANR	1096673	Identifier	str		1096664	0					
ANR	1096674	IdentifierDeclStatement	"char * foo , * projects_path = r_file_abspath ( r_config_get ( core -> config , ""dir.projects"" ) ) ;"	1314:1:39068:39156	1096664	1	True				
ANR	1096675	IdentifierDecl	* foo		1096664	0					
ANR	1096676	IdentifierDeclType	char *		1096664	0					
ANR	1096677	Identifier	foo		1096664	1					
ANR	1096678	IdentifierDecl	"* projects_path = r_file_abspath ( r_config_get ( core -> config , ""dir.projects"" ) )"		1096664	1					
ANR	1096679	IdentifierDeclType	char *		1096664	0					
ANR	1096680	Identifier	projects_path		1096664	1					
ANR	1096681	AssignmentExpression	"* projects_path = r_file_abspath ( r_config_get ( core -> config , ""dir.projects"" ) )"		1096664	2		=			
ANR	1096682	Identifier	projects_path		1096664	0					
ANR	1096683	CallExpression	"r_file_abspath ( r_config_get ( core -> config , ""dir.projects"" ) )"		1096664	1					
ANR	1096684	Callee	r_file_abspath		1096664	0					
ANR	1096685	Identifier	r_file_abspath		1096664	0					
ANR	1096686	ArgumentList	"r_config_get ( core -> config , ""dir.projects"" )"		1096664	1					
ANR	1096687	Argument	"r_config_get ( core -> config , ""dir.projects"" )"		1096664	0					
ANR	1096688	CallExpression	"r_config_get ( core -> config , ""dir.projects"" )"		1096664	0					
ANR	1096689	Callee	r_config_get		1096664	0					
ANR	1096690	Identifier	r_config_get		1096664	0					
ANR	1096691	ArgumentList	core -> config		1096664	1					
ANR	1096692	Argument	core -> config		1096664	0					
ANR	1096693	PtrMemberAccess	core -> config		1096664	0					
ANR	1096694	Identifier	core		1096664	0					
ANR	1096695	Identifier	config		1096664	1					
ANR	1096696	Argument	"""dir.projects"""		1096664	1					
ANR	1096697	PrimaryExpression	"""dir.projects"""		1096664	0					
ANR	1096698	IdentifierDeclStatement	RList * list = r_sys_dir ( projects_path ) ;	1315:1:39159:39198	1096664	2	True				
ANR	1096699	IdentifierDecl	* list = r_sys_dir ( projects_path )		1096664	0					
ANR	1096700	IdentifierDeclType	RList *		1096664	0					
ANR	1096701	Identifier	list		1096664	1					
ANR	1096702	AssignmentExpression	* list = r_sys_dir ( projects_path )		1096664	2		=			
ANR	1096703	Identifier	list		1096664	0					
ANR	1096704	CallExpression	r_sys_dir ( projects_path )		1096664	1					
ANR	1096705	Callee	r_sys_dir		1096664	0					
ANR	1096706	Identifier	r_sys_dir		1096664	0					
ANR	1096707	ArgumentList	projects_path		1096664	1					
ANR	1096708	Argument	projects_path		1096664	0					
ANR	1096709	Identifier	projects_path		1096664	0					
ANR	1096710	IdentifierDeclStatement	RListIter * iter ;	1316:1:39201:39216	1096664	3	True				
ANR	1096711	IdentifierDecl	* iter		1096664	0					
ANR	1096712	IdentifierDeclType	RListIter *		1096664	0					
ANR	1096713	Identifier	iter		1096664	1					
ANR	1096714	IdentifierDeclStatement	int n = strlen ( str ) ;	1317:1:39219:39239	1096664	4	True				
ANR	1096715	IdentifierDecl	n = strlen ( str )		1096664	0					
ANR	1096716	IdentifierDeclType	int		1096664	0					
ANR	1096717	Identifier	n		1096664	1					
ANR	1096718	AssignmentExpression	n = strlen ( str )		1096664	2		=			
ANR	1096719	Identifier	n		1096664	0					
ANR	1096720	CallExpression	strlen ( str )		1096664	1					
ANR	1096721	Callee	strlen		1096664	0					
ANR	1096722	Identifier	strlen		1096664	0					
ANR	1096723	ArgumentList	str		1096664	1					
ANR	1096724	Argument	str		1096664	0					
ANR	1096725	Identifier	str		1096664	0					
ANR	1096726	IfStatement	if ( projects_path )		1096664	5					
ANR	1096727	Condition	projects_path	1318:5:39246:39258	1096664	0	True				
ANR	1096728	Identifier	projects_path		1096664	0					
ANR	1096729	CompoundStatement		7:20:220:220	1096664	1					
ANR	1096730	Statement	r_list_foreach	1319:2:39265:39278	1096664	0	True				
ANR	1096731	Statement	(	1319:17:39280:39280	1096664	1	True				
ANR	1096732	Statement	list	1319:18:39281:39284	1096664	2	True				
ANR	1096733	Statement	","	1319:22:39285:39285	1096664	3	True				
ANR	1096734	Statement	iter	1319:24:39287:39290	1096664	4	True				
ANR	1096735	Statement	","	1319:28:39291:39291	1096664	5	True				
ANR	1096736	Statement	foo	1319:30:39293:39295	1096664	6	True				
ANR	1096737	Statement	)	1319:33:39296:39296	1096664	7	True				
ANR	1096738	CompoundStatement		8:35:257:257	1096664	8					
ANR	1096739	IfStatement	"if ( r_core_is_project ( core , foo ) )"		1096664	0					
ANR	1096740	Condition	"r_core_is_project ( core , foo )"	1320:7:39307:39335	1096664	0	True				
ANR	1096741	CallExpression	"r_core_is_project ( core , foo )"		1096664	0					
ANR	1096742	Callee	r_core_is_project		1096664	0					
ANR	1096743	Identifier	r_core_is_project		1096664	0					
ANR	1096744	ArgumentList	core		1096664	1					
ANR	1096745	Argument	core		1096664	0					
ANR	1096746	Identifier	core		1096664	0					
ANR	1096747	Argument	foo		1096664	1					
ANR	1096748	Identifier	foo		1096664	0					
ANR	1096749	CompoundStatement		9:38:297:297	1096664	1					
ANR	1096750	IfStatement	"if ( ! strncmp ( foo , str , n ) )"		1096664	0					
ANR	1096751	Condition	"! strncmp ( foo , str , n )"	1321:8:39348:39369	1096664	0	True				
ANR	1096752	UnaryOperationExpression	"! strncmp ( foo , str , n )"		1096664	0					
ANR	1096753	UnaryOperator	!		1096664	0					
ANR	1096754	CallExpression	"strncmp ( foo , str , n )"		1096664	1					
ANR	1096755	Callee	strncmp		1096664	0					
ANR	1096756	Identifier	strncmp		1096664	0					
ANR	1096757	ArgumentList	foo		1096664	1					
ANR	1096758	Argument	foo		1096664	0					
ANR	1096759	Identifier	foo		1096664	0					
ANR	1096760	Argument	str		1096664	1					
ANR	1096761	Identifier	str		1096664	0					
ANR	1096762	Argument	n		1096664	2					
ANR	1096763	Identifier	n		1096664	0					
ANR	1096764	CompoundStatement		10:32:331:331	1096664	1					
ANR	1096765	ExpressionStatement	"r_line_completion_push ( completion , foo )"	1322:5:39379:39419	1096664	0	True				
ANR	1096766	CallExpression	"r_line_completion_push ( completion , foo )"		1096664	0					
ANR	1096767	Callee	r_line_completion_push		1096664	0					
ANR	1096768	Identifier	r_line_completion_push		1096664	0					
ANR	1096769	ArgumentList	completion		1096664	1					
ANR	1096770	Argument	completion		1096664	0					
ANR	1096771	Identifier	completion		1096664	0					
ANR	1096772	Argument	foo		1096664	1					
ANR	1096773	Identifier	foo		1096664	0					
ANR	1096774	ExpressionStatement	free ( projects_path )	1326:2:39438:39458	1096664	9	True				
ANR	1096775	CallExpression	free ( projects_path )		1096664	0					
ANR	1096776	Callee	free		1096664	0					
ANR	1096777	Identifier	free		1096664	0					
ANR	1096778	ArgumentList	projects_path		1096664	1					
ANR	1096779	Argument	projects_path		1096664	0					
ANR	1096780	Identifier	projects_path		1096664	0					
ANR	1096781	ExpressionStatement	r_list_free ( list )	1327:2:39462:39480	1096664	10	True				
ANR	1096782	CallExpression	r_list_free ( list )		1096664	0					
ANR	1096783	Callee	r_list_free		1096664	0					
ANR	1096784	Identifier	r_list_free		1096664	0					
ANR	1096785	ArgumentList	list		1096664	1					
ANR	1096786	Argument	list		1096664	0					
ANR	1096787	Identifier	list		1096664	0					
ANR	1096788	ReturnType	static void		1096664	1					
ANR	1096789	Identifier	autocomplete_project		1096664	2					
ANR	1096790	ParameterList	"RCore * core , RLineCompletion * completion , const char * str"		1096664	3					
ANR	1096791	Parameter	RCore * core	1312:33:38981:38991	1096664	0	True				
ANR	1096792	ParameterType	RCore *		1096664	0					
ANR	1096793	Identifier	core		1096664	1					
ANR	1096794	Parameter	RLineCompletion * completion	1312:46:38994:39020	1096664	1	True				
ANR	1096795	ParameterType	RLineCompletion *		1096664	0					
ANR	1096796	Identifier	completion		1096664	1					
ANR	1096797	Parameter	const char * str	1312:75:39023:39037	1096664	2	True				
ANR	1096798	ParameterType	const char *		1096664	0					
ANR	1096799	Identifier	str		1096664	1					
ANR	1096800	CFGEntryNode	ENTRY		1096664		True				
ANR	1096801	CFGExitNode	EXIT		1096664		True				
ANR	1096802	Symbol	core -> config		1096664						
ANR	1096803	Symbol	completion		1096664						
ANR	1096804	Symbol	r_file_abspath		1096664						
ANR	1096805	Symbol	r_core_is_project		1096664						
ANR	1096806	Symbol	foo		1096664						
ANR	1096807	Symbol	* core		1096664						
ANR	1096808	Symbol	r_config_get		1096664						
ANR	1096809	Symbol	iter		1096664						
ANR	1096810	Symbol	list		1096664						
ANR	1096811	Symbol	n		1096664						
ANR	1096812	Symbol	str		1096664						
ANR	1096813	Symbol	core		1096664						
ANR	1096814	Symbol	strlen		1096664						
ANR	1096815	Symbol	strncmp		1096664						
ANR	1096816	Symbol	projects_path		1096664						
ANR	1096817	Symbol	r_sys_dir		1096664						
ANR	1096818	Function	autocomplete_minus	1331:0:39488:39861							
ANR	1096819	FunctionDef	"autocomplete_minus (RCore * core , RLineCompletion * completion , const char * str)"		1096818	0					
ANR	1096820	CompoundStatement		1331:90:39578:39861	1096818	0					
ANR	1096821	ExpressionStatement	r_return_if_fail ( str )	1332:1:39581:39603	1096818	0	True				
ANR	1096822	CallExpression	r_return_if_fail ( str )		1096818	0					
ANR	1096823	Callee	r_return_if_fail		1096818	0					
ANR	1096824	Identifier	r_return_if_fail		1096818	0					
ANR	1096825	ArgumentList	str		1096818	1					
ANR	1096826	Argument	str		1096818	0					
ANR	1096827	Identifier	str		1096818	0					
ANR	1096828	IdentifierDeclStatement	int count ;	1333:1:39606:39615	1096818	1	True				
ANR	1096829	IdentifierDecl	count		1096818	0					
ANR	1096830	IdentifierDeclType	int		1096818	0					
ANR	1096831	Identifier	count		1096818	1					
ANR	1096832	IdentifierDeclStatement	int length = strlen ( str ) ;	1334:1:39618:39643	1096818	2	True				
ANR	1096833	IdentifierDecl	length = strlen ( str )		1096818	0					
ANR	1096834	IdentifierDeclType	int		1096818	0					
ANR	1096835	Identifier	length		1096818	1					
ANR	1096836	AssignmentExpression	length = strlen ( str )		1096818	2		=			
ANR	1096837	Identifier	length		1096818	0					
ANR	1096838	CallExpression	strlen ( str )		1096818	1					
ANR	1096839	Callee	strlen		1096818	0					
ANR	1096840	Identifier	strlen		1096818	0					
ANR	1096841	ArgumentList	str		1096818	1					
ANR	1096842	Argument	str		1096818	0					
ANR	1096843	Identifier	str		1096818	0					
ANR	1096844	IdentifierDeclStatement	"char * * keys = r_cmd_alias_keys ( core -> rcmd , & count ) ;"	1335:1:39646:39696	1096818	3	True				
ANR	1096845	IdentifierDecl	"* * keys = r_cmd_alias_keys ( core -> rcmd , & count )"		1096818	0					
ANR	1096846	IdentifierDeclType	char * *		1096818	0					
ANR	1096847	Identifier	keys		1096818	1					
ANR	1096848	AssignmentExpression	"* * keys = r_cmd_alias_keys ( core -> rcmd , & count )"		1096818	2		=			
ANR	1096849	Identifier	keys		1096818	0					
ANR	1096850	CallExpression	"r_cmd_alias_keys ( core -> rcmd , & count )"		1096818	1					
ANR	1096851	Callee	r_cmd_alias_keys		1096818	0					
ANR	1096852	Identifier	r_cmd_alias_keys		1096818	0					
ANR	1096853	ArgumentList	core -> rcmd		1096818	1					
ANR	1096854	Argument	core -> rcmd		1096818	0					
ANR	1096855	PtrMemberAccess	core -> rcmd		1096818	0					
ANR	1096856	Identifier	core		1096818	0					
ANR	1096857	Identifier	rcmd		1096818	1					
ANR	1096858	Argument	& count		1096818	1					
ANR	1096859	UnaryOperationExpression	& count		1096818	0					
ANR	1096860	UnaryOperator	&		1096818	0					
ANR	1096861	Identifier	count		1096818	1					
ANR	1096862	IfStatement	if ( ! keys )		1096818	4					
ANR	1096863	Condition	! keys	1336:5:39703:39707	1096818	0	True				
ANR	1096864	UnaryOperationExpression	! keys		1096818	0					
ANR	1096865	UnaryOperator	!		1096818	0					
ANR	1096866	Identifier	keys		1096818	1					
ANR	1096867	CompoundStatement		6:12:131:131	1096818	1					
ANR	1096868	ReturnStatement	return ;	1337:2:39714:39720	1096818	0	True				
ANR	1096869	IdentifierDeclStatement	int i ;	1339:1:39726:39731	1096818	5	True				
ANR	1096870	IdentifierDecl	i		1096818	0					
ANR	1096871	IdentifierDeclType	int		1096818	0					
ANR	1096872	Identifier	i		1096818	1					
ANR	1096873	ForStatement	for ( i = 0 ; i < count ; i ++ )		1096818	6					
ANR	1096874	ForInit	i = 0 ;	1340:6:39739:39744	1096818	0	True				
ANR	1096875	AssignmentExpression	i = 0		1096818	0		=			
ANR	1096876	Identifier	i		1096818	0					
ANR	1096877	PrimaryExpression	0		1096818	1					
ANR	1096878	Condition	i < count	1340:13:39746:39754	1096818	1	True				
ANR	1096879	RelationalExpression	i < count		1096818	0		<			
ANR	1096880	Identifier	i		1096818	0					
ANR	1096881	Identifier	count		1096818	1					
ANR	1096882	PostIncDecOperationExpression	i ++	1340:24:39757:39759	1096818	2	True				
ANR	1096883	Identifier	i		1096818	0					
ANR	1096884	IncDec	++		1096818	1					
ANR	1096885	CompoundStatement		10:29:183:183	1096818	3					
ANR	1096886	IfStatement	"if ( ! strncmp ( keys [ i ] , str , length ) )"		1096818	0					
ANR	1096887	Condition	"! strncmp ( keys [ i ] , str , length )"	1341:6:39770:39800	1096818	0	True				
ANR	1096888	UnaryOperationExpression	"! strncmp ( keys [ i ] , str , length )"		1096818	0					
ANR	1096889	UnaryOperator	!		1096818	0					
ANR	1096890	CallExpression	"strncmp ( keys [ i ] , str , length )"		1096818	1					
ANR	1096891	Callee	strncmp		1096818	0					
ANR	1096892	Identifier	strncmp		1096818	0					
ANR	1096893	ArgumentList	keys [ i ]		1096818	1					
ANR	1096894	Argument	keys [ i ]		1096818	0					
ANR	1096895	ArrayIndexing	keys [ i ]		1096818	0					
ANR	1096896	Identifier	keys		1096818	0					
ANR	1096897	Identifier	i		1096818	1					
ANR	1096898	Argument	str		1096818	1					
ANR	1096899	Identifier	str		1096818	0					
ANR	1096900	Argument	length		1096818	2					
ANR	1096901	Identifier	length		1096818	0					
ANR	1096902	CompoundStatement		11:39:224:224	1096818	1					
ANR	1096903	ExpressionStatement	"r_line_completion_push ( completion , keys [ i ] )"	1342:3:39808:39852	1096818	0	True				
ANR	1096904	CallExpression	"r_line_completion_push ( completion , keys [ i ] )"		1096818	0					
ANR	1096905	Callee	r_line_completion_push		1096818	0					
ANR	1096906	Identifier	r_line_completion_push		1096818	0					
ANR	1096907	ArgumentList	completion		1096818	1					
ANR	1096908	Argument	completion		1096818	0					
ANR	1096909	Identifier	completion		1096818	0					
ANR	1096910	Argument	keys [ i ]		1096818	1					
ANR	1096911	ArrayIndexing	keys [ i ]		1096818	0					
ANR	1096912	Identifier	keys		1096818	0					
ANR	1096913	Identifier	i		1096818	1					
ANR	1096914	ReturnType	static void		1096818	1					
ANR	1096915	Identifier	autocomplete_minus		1096818	2					
ANR	1096916	ParameterList	"RCore * core , RLineCompletion * completion , const char * str"		1096818	3					
ANR	1096917	Parameter	RCore * core	1331:31:39519:39529	1096818	0	True				
ANR	1096918	ParameterType	RCore *		1096818	0					
ANR	1096919	Identifier	core		1096818	1					
ANR	1096920	Parameter	RLineCompletion * completion	1331:44:39532:39558	1096818	1	True				
ANR	1096921	ParameterType	RLineCompletion *		1096818	0					
ANR	1096922	Identifier	completion		1096818	1					
ANR	1096923	Parameter	const char * str	1331:73:39561:39575	1096818	2	True				
ANR	1096924	ParameterType	const char *		1096818	0					
ANR	1096925	Identifier	str		1096818	1					
ANR	1096926	CFGEntryNode	ENTRY		1096818		True				
ANR	1096927	CFGExitNode	EXIT		1096818		True				
ANR	1096928	Symbol	completion		1096818						
ANR	1096929	Symbol	core -> rcmd		1096818						
ANR	1096930	Symbol	keys		1096818						
ANR	1096931	Symbol	count		1096818						
ANR	1096932	Symbol	length		1096818						
ANR	1096933	Symbol	* core		1096818						
ANR	1096934	Symbol	i		1096818						
ANR	1096935	Symbol	* keys		1096818						
ANR	1096936	Symbol	str		1096818						
ANR	1096937	Symbol	core		1096818						
ANR	1096938	Symbol	strlen		1096818						
ANR	1096939	Symbol	strncmp		1096818						
ANR	1096940	Symbol	r_cmd_alias_keys		1096818						
ANR	1096941	Symbol	* i		1096818						
ANR	1096942	Symbol	& count		1096818						
ANR	1096943	Function	autocomplete_breakpoints	1347:0:39864:40274							
ANR	1096944	FunctionDef	"autocomplete_breakpoints (RCore * core , RLineCompletion * completion , const char * str)"		1096943	0					
ANR	1096945	CompoundStatement		1347:96:39960:40274	1096943	0					
ANR	1096946	ExpressionStatement	r_return_if_fail ( str )	1348:1:39963:39985	1096943	0	True				
ANR	1096947	CallExpression	r_return_if_fail ( str )		1096943	0					
ANR	1096948	Callee	r_return_if_fail		1096943	0					
ANR	1096949	Identifier	r_return_if_fail		1096943	0					
ANR	1096950	ArgumentList	str		1096943	1					
ANR	1096951	Argument	str		1096943	0					
ANR	1096952	Identifier	str		1096943	0					
ANR	1096953	IdentifierDeclStatement	RListIter * iter ;	1349:1:39988:40003	1096943	1	True				
ANR	1096954	IdentifierDecl	* iter		1096943	0					
ANR	1096955	IdentifierDeclType	RListIter *		1096943	0					
ANR	1096956	Identifier	iter		1096943	1					
ANR	1096957	IdentifierDeclStatement	RBreakpoint * bp = core -> dbg -> bp ;	1350:1:40006:40037	1096943	2	True				
ANR	1096958	IdentifierDecl	* bp = core -> dbg -> bp		1096943	0					
ANR	1096959	IdentifierDeclType	RBreakpoint *		1096943	0					
ANR	1096960	Identifier	bp		1096943	1					
ANR	1096961	AssignmentExpression	* bp = core -> dbg -> bp		1096943	2		=			
ANR	1096962	Identifier	bp		1096943	0					
ANR	1096963	PtrMemberAccess	core -> dbg -> bp		1096943	1					
ANR	1096964	PtrMemberAccess	core -> dbg		1096943	0					
ANR	1096965	Identifier	core		1096943	0					
ANR	1096966	Identifier	dbg		1096943	1					
ANR	1096967	Identifier	bp		1096943	1					
ANR	1096968	IdentifierDeclStatement	RBreakpointItem * b ;	1351:1:40040:40058	1096943	3	True				
ANR	1096969	IdentifierDecl	* b		1096943	0					
ANR	1096970	IdentifierDeclType	RBreakpointItem *		1096943	0					
ANR	1096971	Identifier	b		1096943	1					
ANR	1096972	IdentifierDeclStatement	int n = strlen ( str ) ;	1352:1:40061:40081	1096943	4	True				
ANR	1096973	IdentifierDecl	n = strlen ( str )		1096943	0					
ANR	1096974	IdentifierDeclType	int		1096943	0					
ANR	1096975	Identifier	n		1096943	1					
ANR	1096976	AssignmentExpression	n = strlen ( str )		1096943	2		=			
ANR	1096977	Identifier	n		1096943	0					
ANR	1096978	CallExpression	strlen ( str )		1096943	1					
ANR	1096979	Callee	strlen		1096943	0					
ANR	1096980	Identifier	strlen		1096943	0					
ANR	1096981	ArgumentList	str		1096943	1					
ANR	1096982	Argument	str		1096943	0					
ANR	1096983	Identifier	str		1096943	0					
ANR	1096984	Statement	r_list_foreach	1353:1:40084:40097	1096943	5	True				
ANR	1096985	Statement	(	1353:16:40099:40099	1096943	6	True				
ANR	1096986	Statement	bp	1353:17:40100:40101	1096943	7	True				
ANR	1096987	Statement	->	1353:19:40102:40103	1096943	8	True				
ANR	1096988	Statement	bps	1353:21:40104:40106	1096943	9	True				
ANR	1096989	Statement	","	1353:24:40107:40107	1096943	10	True				
ANR	1096990	Statement	iter	1353:26:40109:40112	1096943	11	True				
ANR	1096991	Statement	","	1353:30:40113:40113	1096943	12	True				
ANR	1096992	Statement	b	1353:32:40115:40115	1096943	13	True				
ANR	1096993	Statement	)	1353:33:40116:40116	1096943	14	True				
ANR	1096994	CompoundStatement		7:35:157:157	1096943	15					
ANR	1096995	Statement	char	1354:2:40122:40125	1096943	0	True				
ANR	1096996	Statement	*	1354:7:40127:40127	1096943	1	True				
ANR	1096997	Statement	addr	1354:8:40128:40131	1096943	2	True				
ANR	1096998	Statement	=	1354:13:40133:40133	1096943	3	True				
ANR	1096999	Statement	r_str_newf	1354:15:40135:40144	1096943	4	True				
ANR	1097000	Statement	(	1354:26:40146:40146	1096943	5	True				
ANR	1097001	Statement	"""0x%"""	1354:27:40147:40151	1096943	6	True				
ANR	1097002	Statement	PFMT64x	1354:32:40152:40158	1096943	7	True				
ANR	1097003	Statement	""""""	1354:39:40159:40160	1096943	8	True				
ANR	1097004	Statement	","	1354:41:40161:40161	1096943	9	True				
ANR	1097005	Statement	b	1354:43:40163:40163	1096943	10	True				
ANR	1097006	Statement	->	1354:44:40164:40165	1096943	11	True				
ANR	1097007	Statement	addr	1354:46:40166:40169	1096943	12	True				
ANR	1097008	Statement	)	1354:50:40170:40170	1096943	13	True				
ANR	1097009	ExpressionStatement		1354:51:40171:40171	1096943	14	True				
ANR	1097010	IfStatement	"if ( ! strncmp ( addr , str , n ) )"		1096943	15					
ANR	1097011	Condition	"! strncmp ( addr , str , n )"	1355:6:40179:40201	1096943	0	True				
ANR	1097012	UnaryOperationExpression	"! strncmp ( addr , str , n )"		1096943	0					
ANR	1097013	UnaryOperator	!		1096943	0					
ANR	1097014	CallExpression	"strncmp ( addr , str , n )"		1096943	1					
ANR	1097015	Callee	strncmp		1096943	0					
ANR	1097016	Identifier	strncmp		1096943	0					
ANR	1097017	ArgumentList	addr		1096943	1					
ANR	1097018	Argument	addr		1096943	0					
ANR	1097019	Identifier	addr		1096943	0					
ANR	1097020	Argument	str		1096943	1					
ANR	1097021	Identifier	str		1096943	0					
ANR	1097022	Argument	n		1096943	2					
ANR	1097023	Identifier	n		1096943	0					
ANR	1097024	CompoundStatement		9:31:243:243	1096943	1					
ANR	1097025	ExpressionStatement	"r_line_completion_push ( completion , addr )"	1356:3:40209:40250	1096943	0	True				
ANR	1097026	CallExpression	"r_line_completion_push ( completion , addr )"		1096943	0					
ANR	1097027	Callee	r_line_completion_push		1096943	0					
ANR	1097028	Identifier	r_line_completion_push		1096943	0					
ANR	1097029	ArgumentList	completion		1096943	1					
ANR	1097030	Argument	completion		1096943	0					
ANR	1097031	Identifier	completion		1096943	0					
ANR	1097032	Argument	addr		1096943	1					
ANR	1097033	Identifier	addr		1096943	0					
ANR	1097034	ExpressionStatement	free ( addr )	1358:2:40258:40269	1096943	16	True				
ANR	1097035	CallExpression	free ( addr )		1096943	0					
ANR	1097036	Callee	free		1096943	0					
ANR	1097037	Identifier	free		1096943	0					
ANR	1097038	ArgumentList	addr		1096943	1					
ANR	1097039	Argument	addr		1096943	0					
ANR	1097040	Identifier	addr		1096943	0					
ANR	1097041	ReturnType	static void		1096943	1					
ANR	1097042	Identifier	autocomplete_breakpoints		1096943	2					
ANR	1097043	ParameterList	"RCore * core , RLineCompletion * completion , const char * str"		1096943	3					
ANR	1097044	Parameter	RCore * core	1347:37:39901:39911	1096943	0	True				
ANR	1097045	ParameterType	RCore *		1096943	0					
ANR	1097046	Identifier	core		1096943	1					
ANR	1097047	Parameter	RLineCompletion * completion	1347:50:39914:39940	1096943	1	True				
ANR	1097048	ParameterType	RLineCompletion *		1096943	0					
ANR	1097049	Identifier	completion		1096943	1					
ANR	1097050	Parameter	const char * str	1347:79:39943:39957	1096943	2	True				
ANR	1097051	ParameterType	const char *		1096943	0					
ANR	1097052	Identifier	str		1096943	1					
ANR	1097053	CFGEntryNode	ENTRY		1096943		True				
ANR	1097054	CFGExitNode	EXIT		1096943		True				
ANR	1097055	Symbol	completion		1096943						
ANR	1097056	Symbol	b		1096943						
ANR	1097057	Symbol	* core		1096943						
ANR	1097058	Symbol	iter		1096943						
ANR	1097059	Symbol	core -> dbg -> bp		1096943						
ANR	1097060	Symbol	bp		1096943						
ANR	1097061	Symbol	n		1096943						
ANR	1097062	Symbol	str		1096943						
ANR	1097063	Symbol	core		1096943						
ANR	1097064	Symbol	strlen		1096943						
ANR	1097065	Symbol	strncmp		1096943						
ANR	1097066	Symbol	addr		1096943						
ANR	1097067	Symbol	* core -> dbg		1096943						
ANR	1097068	Symbol	* * core		1096943						
ANR	1097069	Symbol	core -> dbg		1096943						
ANR	1097070	Function	add_argv	1362:0:40277:40426							
ANR	1097071	FunctionDef	"add_argv (RFlagItem * fi , void * user)"		1097070	0					
ANR	1097072	CompoundStatement		1362:48:40325:40426	1097070	0					
ANR	1097073	IdentifierDeclStatement	RLineCompletion * completion = user ;	1363:1:40328:40362	1097070	0	True				
ANR	1097074	IdentifierDecl	* completion = user		1097070	0					
ANR	1097075	IdentifierDeclType	RLineCompletion *		1097070	0					
ANR	1097076	Identifier	completion		1097070	1					
ANR	1097077	AssignmentExpression	* completion = user		1097070	2		=			
ANR	1097078	Identifier	user		1097070	0					
ANR	1097079	Identifier	user		1097070	1					
ANR	1097080	ExpressionStatement	"r_line_completion_push ( completion , fi -> name )"	1364:1:40365:40410	1097070	1	True				
ANR	1097081	CallExpression	"r_line_completion_push ( completion , fi -> name )"		1097070	0					
ANR	1097082	Callee	r_line_completion_push		1097070	0					
ANR	1097083	Identifier	r_line_completion_push		1097070	0					
ANR	1097084	ArgumentList	completion		1097070	1					
ANR	1097085	Argument	completion		1097070	0					
ANR	1097086	Identifier	completion		1097070	0					
ANR	1097087	Argument	fi -> name		1097070	1					
ANR	1097088	PtrMemberAccess	fi -> name		1097070	0					
ANR	1097089	Identifier	fi		1097070	0					
ANR	1097090	Identifier	name		1097070	1					
ANR	1097091	ReturnStatement	return true ;	1365:1:40413:40424	1097070	2	True				
ANR	1097092	Identifier	true		1097070	0					
ANR	1097093	ReturnType	static bool		1097070	1					
ANR	1097094	Identifier	add_argv		1097070	2					
ANR	1097095	ParameterList	"RFlagItem * fi , void * user"		1097070	3					
ANR	1097096	Parameter	RFlagItem * fi	1362:21:40298:40310	1097070	0	True				
ANR	1097097	ParameterType	RFlagItem *		1097070	0					
ANR	1097098	Identifier	fi		1097070	1					
ANR	1097099	Parameter	void * user	1362:36:40313:40322	1097070	1	True				
ANR	1097100	ParameterType	void *		1097070	0					
ANR	1097101	Identifier	user		1097070	1					
ANR	1097102	CFGEntryNode	ENTRY		1097070		True				
ANR	1097103	CFGExitNode	EXIT		1097070		True				
ANR	1097104	Symbol	completion		1097070						
ANR	1097105	Symbol	fi		1097070						
ANR	1097106	Symbol	fi -> name		1097070						
ANR	1097107	Symbol	true		1097070						
ANR	1097108	Symbol	* fi		1097070						
ANR	1097109	Symbol	user		1097070						
ANR	1097110	Function	autocomplete_flags	1368:0:40429:40637							
ANR	1097111	FunctionDef	"autocomplete_flags (RCore * core , RLineCompletion * completion , const char * str)"		1097110	0					
ANR	1097112	CompoundStatement		1368:90:40519:40637	1097110	0					
ANR	1097113	ExpressionStatement	r_return_if_fail ( str )	1369:1:40522:40544	1097110	0	True				
ANR	1097114	CallExpression	r_return_if_fail ( str )		1097110	0					
ANR	1097115	Callee	r_return_if_fail		1097110	0					
ANR	1097116	Identifier	r_return_if_fail		1097110	0					
ANR	1097117	ArgumentList	str		1097110	1					
ANR	1097118	Argument	str		1097110	0					
ANR	1097119	Identifier	str		1097110	0					
ANR	1097120	IdentifierDeclStatement	int n = strlen ( str ) ;	1370:1:40547:40567	1097110	1	True				
ANR	1097121	IdentifierDecl	n = strlen ( str )		1097110	0					
ANR	1097122	IdentifierDeclType	int		1097110	0					
ANR	1097123	Identifier	n		1097110	1					
ANR	1097124	AssignmentExpression	n = strlen ( str )		1097110	2		=			
ANR	1097125	Identifier	n		1097110	0					
ANR	1097126	CallExpression	strlen ( str )		1097110	1					
ANR	1097127	Callee	strlen		1097110	0					
ANR	1097128	Identifier	strlen		1097110	0					
ANR	1097129	ArgumentList	str		1097110	1					
ANR	1097130	Argument	str		1097110	0					
ANR	1097131	Identifier	str		1097110	0					
ANR	1097132	ExpressionStatement	"r_flag_foreach_prefix ( core -> flags , str , n , add_argv , completion )"	1371:1:40570:40635	1097110	2	True				
ANR	1097133	CallExpression	"r_flag_foreach_prefix ( core -> flags , str , n , add_argv , completion )"		1097110	0					
ANR	1097134	Callee	r_flag_foreach_prefix		1097110	0					
ANR	1097135	Identifier	r_flag_foreach_prefix		1097110	0					
ANR	1097136	ArgumentList	core -> flags		1097110	1					
ANR	1097137	Argument	core -> flags		1097110	0					
ANR	1097138	PtrMemberAccess	core -> flags		1097110	0					
ANR	1097139	Identifier	core		1097110	0					
ANR	1097140	Identifier	flags		1097110	1					
ANR	1097141	Argument	str		1097110	1					
ANR	1097142	Identifier	str		1097110	0					
ANR	1097143	Argument	n		1097110	2					
ANR	1097144	Identifier	n		1097110	0					
ANR	1097145	Argument	add_argv		1097110	3					
ANR	1097146	Identifier	add_argv		1097110	0					
ANR	1097147	Argument	completion		1097110	4					
ANR	1097148	Identifier	completion		1097110	0					
ANR	1097149	ReturnType	static void		1097110	1					
ANR	1097150	Identifier	autocomplete_flags		1097110	2					
ANR	1097151	ParameterList	"RCore * core , RLineCompletion * completion , const char * str"		1097110	3					
ANR	1097152	Parameter	RCore * core	1368:31:40460:40470	1097110	0	True				
ANR	1097153	ParameterType	RCore *		1097110	0					
ANR	1097154	Identifier	core		1097110	1					
ANR	1097155	Parameter	RLineCompletion * completion	1368:44:40473:40499	1097110	1	True				
ANR	1097156	ParameterType	RLineCompletion *		1097110	0					
ANR	1097157	Identifier	completion		1097110	1					
ANR	1097158	Parameter	const char * str	1368:73:40502:40516	1097110	2	True				
ANR	1097159	ParameterType	const char *		1097110	0					
ANR	1097160	Identifier	str		1097110	1					
ANR	1097161	CFGEntryNode	ENTRY		1097110		True				
ANR	1097162	CFGExitNode	EXIT		1097110		True				
ANR	1097163	Symbol	str		1097110						
ANR	1097164	Symbol	add_argv		1097110						
ANR	1097165	Symbol	core		1097110						
ANR	1097166	Symbol	completion		1097110						
ANR	1097167	Symbol	strlen		1097110						
ANR	1097168	Symbol	* core		1097110						
ANR	1097169	Symbol	core -> flags		1097110						
ANR	1097170	Symbol	n		1097110						
ANR	1097171	Function	autocomplete_sdb	1374:0:40640:42434							
ANR	1097172	FunctionDef	"autocomplete_sdb (RCore * core , RLineCompletion * completion , const char * str)"		1097171	0					
ANR	1097173	CompoundStatement		1374:89:40729:42434	1097171	0					
ANR	1097174	ExpressionStatement	r_return_if_fail ( core && completion && str )	1375:1:40732:40776	1097171	0	True				
ANR	1097175	CallExpression	r_return_if_fail ( core && completion && str )		1097171	0					
ANR	1097176	Callee	r_return_if_fail		1097171	0					
ANR	1097177	Identifier	r_return_if_fail		1097171	0					
ANR	1097178	ArgumentList	core && completion && str		1097171	1					
ANR	1097179	Argument	core && completion && str		1097171	0					
ANR	1097180	AndExpression	core && completion && str		1097171	0		&&			
ANR	1097181	Identifier	core		1097171	0					
ANR	1097182	AndExpression	completion && str		1097171	1		&&			
ANR	1097183	Identifier	completion		1097171	0					
ANR	1097184	Identifier	str		1097171	1					
ANR	1097185	IdentifierDeclStatement	"char * pipe = strchr ( str , '>' ) ;"	1376:1:40779:40809	1097171	1	True				
ANR	1097186	IdentifierDecl	"* pipe = strchr ( str , '>' )"		1097171	0					
ANR	1097187	IdentifierDeclType	char *		1097171	0					
ANR	1097188	Identifier	pipe		1097171	1					
ANR	1097189	AssignmentExpression	"* pipe = strchr ( str , '>' )"		1097171	2		=			
ANR	1097190	Identifier	pipe		1097171	0					
ANR	1097191	CallExpression	"strchr ( str , '>' )"		1097171	1					
ANR	1097192	Callee	strchr		1097171	0					
ANR	1097193	Identifier	strchr		1097171	0					
ANR	1097194	ArgumentList	str		1097171	1					
ANR	1097195	Argument	str		1097171	0					
ANR	1097196	Identifier	str		1097171	0					
ANR	1097197	Argument	'>'		1097171	1					
ANR	1097198	PrimaryExpression	'>'		1097171	0					
ANR	1097199	IdentifierDeclStatement	Sdb * sdb = core -> sdb ;	1377:1:40812:40832	1097171	2	True				
ANR	1097200	IdentifierDecl	* sdb = core -> sdb		1097171	0					
ANR	1097201	IdentifierDeclType	Sdb *		1097171	0					
ANR	1097202	Identifier	sdb		1097171	1					
ANR	1097203	AssignmentExpression	* sdb = core -> sdb		1097171	2		=			
ANR	1097204	Identifier	sdb		1097171	0					
ANR	1097205	PtrMemberAccess	core -> sdb		1097171	1					
ANR	1097206	Identifier	core		1097171	0					
ANR	1097207	Identifier	sdb		1097171	1					
ANR	1097208	IdentifierDeclStatement	"char * lpath = NULL , * p1 = NULL , * out = NULL , * p2 = NULL ;"	1378:1:40835:40890	1097171	3	True				
ANR	1097209	IdentifierDecl	* lpath = NULL		1097171	0					
ANR	1097210	IdentifierDeclType	char *		1097171	0					
ANR	1097211	Identifier	lpath		1097171	1					
ANR	1097212	AssignmentExpression	* lpath = NULL		1097171	2		=			
ANR	1097213	Identifier	NULL		1097171	0					
ANR	1097214	Identifier	NULL		1097171	1					
ANR	1097215	IdentifierDecl	* p1 = NULL		1097171	1					
ANR	1097216	IdentifierDeclType	char *		1097171	0					
ANR	1097217	Identifier	p1		1097171	1					
ANR	1097218	AssignmentExpression	* p1 = NULL		1097171	2		=			
ANR	1097219	Identifier	NULL		1097171	0					
ANR	1097220	Identifier	NULL		1097171	1					
ANR	1097221	IdentifierDecl	* out = NULL		1097171	2					
ANR	1097222	IdentifierDeclType	char *		1097171	0					
ANR	1097223	Identifier	out		1097171	1					
ANR	1097224	AssignmentExpression	* out = NULL		1097171	2		=			
ANR	1097225	Identifier	NULL		1097171	0					
ANR	1097226	Identifier	NULL		1097171	1					
ANR	1097227	IdentifierDecl	* p2 = NULL		1097171	3					
ANR	1097228	IdentifierDeclType	char *		1097171	0					
ANR	1097229	Identifier	p2		1097171	1					
ANR	1097230	AssignmentExpression	* p2 = NULL		1097171	2		=			
ANR	1097231	Identifier	NULL		1097171	0					
ANR	1097232	Identifier	NULL		1097171	1					
ANR	1097233	IdentifierDeclStatement	"char * cur_pos = NULL , * cur_cmd = NULL , * next_cmd = NULL ;"	1379:1:40893:40948	1097171	4	True				
ANR	1097234	IdentifierDecl	* cur_pos = NULL		1097171	0					
ANR	1097235	IdentifierDeclType	char *		1097171	0					
ANR	1097236	Identifier	cur_pos		1097171	1					
ANR	1097237	AssignmentExpression	* cur_pos = NULL		1097171	2		=			
ANR	1097238	Identifier	NULL		1097171	0					
ANR	1097239	Identifier	NULL		1097171	1					
ANR	1097240	IdentifierDecl	* cur_cmd = NULL		1097171	1					
ANR	1097241	IdentifierDeclType	char *		1097171	0					
ANR	1097242	Identifier	cur_cmd		1097171	1					
ANR	1097243	AssignmentExpression	* cur_cmd = NULL		1097171	2		=			
ANR	1097244	Identifier	NULL		1097171	0					
ANR	1097245	Identifier	NULL		1097171	1					
ANR	1097246	IdentifierDecl	* next_cmd = NULL		1097171	2					
ANR	1097247	IdentifierDeclType	char *		1097171	0					
ANR	1097248	Identifier	next_cmd		1097171	1					
ANR	1097249	AssignmentExpression	* next_cmd = NULL		1097171	2		=			
ANR	1097250	Identifier	NULL		1097171	0					
ANR	1097251	Identifier	NULL		1097171	1					
ANR	1097252	IdentifierDeclStatement	"char * temp_cmd = NULL , * temp_pos = NULL , * key = NULL ;"	1380:1:40951:41003	1097171	5	True				
ANR	1097253	IdentifierDecl	* temp_cmd = NULL		1097171	0					
ANR	1097254	IdentifierDeclType	char *		1097171	0					
ANR	1097255	Identifier	temp_cmd		1097171	1					
ANR	1097256	AssignmentExpression	* temp_cmd = NULL		1097171	2		=			
ANR	1097257	Identifier	NULL		1097171	0					
ANR	1097258	Identifier	NULL		1097171	1					
ANR	1097259	IdentifierDecl	* temp_pos = NULL		1097171	1					
ANR	1097260	IdentifierDeclType	char *		1097171	0					
ANR	1097261	Identifier	temp_pos		1097171	1					
ANR	1097262	AssignmentExpression	* temp_pos = NULL		1097171	2		=			
ANR	1097263	Identifier	NULL		1097171	0					
ANR	1097264	Identifier	NULL		1097171	1					
ANR	1097265	IdentifierDecl	* key = NULL		1097171	2					
ANR	1097266	IdentifierDeclType	char *		1097171	0					
ANR	1097267	Identifier	key		1097171	1					
ANR	1097268	AssignmentExpression	* key = NULL		1097171	2		=			
ANR	1097269	Identifier	NULL		1097171	0					
ANR	1097270	Identifier	NULL		1097171	1					
ANR	1097271	IfStatement	if ( pipe )		1097171	6					
ANR	1097272	Condition	pipe	1381:5:41010:41013	1097171	0	True				
ANR	1097273	Identifier	pipe		1097171	0					
ANR	1097274	CompoundStatement		8:11:286:286	1097171	1					
ANR	1097275	ExpressionStatement	str = r_str_trim_ro ( pipe + 1 )	1382:2:41020:41050	1097171	0	True				
ANR	1097276	AssignmentExpression	str = r_str_trim_ro ( pipe + 1 )		1097171	0		=			
ANR	1097277	Identifier	str		1097171	0					
ANR	1097278	CallExpression	r_str_trim_ro ( pipe + 1 )		1097171	1					
ANR	1097279	Callee	r_str_trim_ro		1097171	0					
ANR	1097280	Identifier	r_str_trim_ro		1097171	0					
ANR	1097281	ArgumentList	pipe + 1		1097171	1					
ANR	1097282	Argument	pipe + 1		1097171	0					
ANR	1097283	AdditiveExpression	pipe + 1		1097171	0		+			
ANR	1097284	Identifier	pipe		1097171	0					
ANR	1097285	PrimaryExpression	1		1097171	1					
ANR	1097286	ExpressionStatement	lpath = r_str_new ( str )	1384:1:41056:41079	1097171	7	True				
ANR	1097287	AssignmentExpression	lpath = r_str_new ( str )		1097171	0		=			
ANR	1097288	Identifier	lpath		1097171	0					
ANR	1097289	CallExpression	r_str_new ( str )		1097171	1					
ANR	1097290	Callee	r_str_new		1097171	0					
ANR	1097291	Identifier	r_str_new		1097171	0					
ANR	1097292	ArgumentList	str		1097171	1					
ANR	1097293	Argument	str		1097171	0					
ANR	1097294	Identifier	str		1097171	0					
ANR	1097295	ExpressionStatement	"p1 = strstr ( lpath , ""/"" )"	1385:1:41082:41106	1097171	8	True				
ANR	1097296	AssignmentExpression	"p1 = strstr ( lpath , ""/"" )"		1097171	0		=			
ANR	1097297	Identifier	p1		1097171	0					
ANR	1097298	CallExpression	"strstr ( lpath , ""/"" )"		1097171	1					
ANR	1097299	Callee	strstr		1097171	0					
ANR	1097300	Identifier	strstr		1097171	0					
ANR	1097301	ArgumentList	lpath		1097171	1					
ANR	1097302	Argument	lpath		1097171	0					
ANR	1097303	Identifier	lpath		1097171	0					
ANR	1097304	Argument	"""/"""		1097171	1					
ANR	1097305	PrimaryExpression	"""/"""		1097171	0					
ANR	1097306	IfStatement	if ( p1 )		1097171	9					
ANR	1097307	Condition	p1	1386:5:41113:41114	1097171	0	True				
ANR	1097308	Identifier	p1		1097171	0					
ANR	1097309	CompoundStatement		15:2:402:419	1097171	1					
ANR	1097310	ExpressionStatement	* p1 = 0	1387:2:41121:41128	1097171	0	True				
ANR	1097311	AssignmentExpression	* p1 = 0		1097171	0		=			
ANR	1097312	UnaryOperationExpression	* p1		1097171	0					
ANR	1097313	UnaryOperator	*		1097171	0					
ANR	1097314	Identifier	p1		1097171	1					
ANR	1097315	PrimaryExpression	0		1097171	1					
ANR	1097316	IdentifierDeclStatement	char * ns = p1 + 1 ;	1388:2:41132:41149	1097171	1	True				
ANR	1097317	IdentifierDecl	* ns = p1 + 1		1097171	0					
ANR	1097318	IdentifierDeclType	char *		1097171	0					
ANR	1097319	Identifier	ns		1097171	1					
ANR	1097320	AssignmentExpression	* ns = p1 + 1		1097171	2		=			
ANR	1097321	Identifier	ns		1097171	0					
ANR	1097322	AdditiveExpression	p1 + 1		1097171	1		+			
ANR	1097323	Identifier	p1		1097171	0					
ANR	1097324	PrimaryExpression	1		1097171	1					
ANR	1097325	ExpressionStatement	"p2 = strstr ( ns , ""/"" )"	1389:2:41153:41174	1097171	2	True				
ANR	1097326	AssignmentExpression	"p2 = strstr ( ns , ""/"" )"		1097171	0		=			
ANR	1097327	Identifier	p2		1097171	0					
ANR	1097328	CallExpression	"strstr ( ns , ""/"" )"		1097171	1					
ANR	1097329	Callee	strstr		1097171	0					
ANR	1097330	Identifier	strstr		1097171	0					
ANR	1097331	ArgumentList	ns		1097171	1					
ANR	1097332	Argument	ns		1097171	0					
ANR	1097333	Identifier	ns		1097171	0					
ANR	1097334	Argument	"""/"""		1097171	1					
ANR	1097335	PrimaryExpression	"""/"""		1097171	0					
ANR	1097336	IfStatement	if ( ! p2 )		1097171	3					
ANR	1097337	Condition	! p2	1390:6:41182:41184	1097171	0	True				
ANR	1097338	UnaryOperationExpression	! p2		1097171	0					
ANR	1097339	UnaryOperator	!		1097171	0					
ANR	1097340	Identifier	p2		1097171	1					
ANR	1097341	CompoundStatement		19:3:495:515	1097171	1					
ANR	1097342	IdentifierDeclStatement	char * tmp = p1 + 1 ;	1391:3:41202:41220	1097171	0	True				
ANR	1097343	IdentifierDecl	* tmp = p1 + 1		1097171	0					
ANR	1097344	IdentifierDeclType	char *		1097171	0					
ANR	1097345	Identifier	tmp		1097171	1					
ANR	1097346	AssignmentExpression	* tmp = p1 + 1		1097171	2		=			
ANR	1097347	Identifier	tmp		1097171	0					
ANR	1097348	AdditiveExpression	p1 + 1		1097171	1		+			
ANR	1097349	Identifier	p1		1097171	0					
ANR	1097350	PrimaryExpression	1		1097171	1					
ANR	1097351	IdentifierDeclStatement	int n = strlen ( tmp ) ;	1392:3:41225:41245	1097171	1	True				
ANR	1097352	IdentifierDecl	n = strlen ( tmp )		1097171	0					
ANR	1097353	IdentifierDeclType	int		1097171	0					
ANR	1097354	Identifier	n		1097171	1					
ANR	1097355	AssignmentExpression	n = strlen ( tmp )		1097171	2		=			
ANR	1097356	Identifier	n		1097171	0					
ANR	1097357	CallExpression	strlen ( tmp )		1097171	1					
ANR	1097358	Callee	strlen		1097171	0					
ANR	1097359	Identifier	strlen		1097171	0					
ANR	1097360	ArgumentList	tmp		1097171	1					
ANR	1097361	Argument	tmp		1097171	0					
ANR	1097362	Identifier	tmp		1097171	0					
ANR	1097363	ExpressionStatement	"out = sdb_querys ( sdb , NULL , 0 , ""anal/**"" )"	1393:3:41250:41292	1097171	2	True				
ANR	1097364	AssignmentExpression	"out = sdb_querys ( sdb , NULL , 0 , ""anal/**"" )"		1097171	0		=			
ANR	1097365	Identifier	out		1097171	0					
ANR	1097366	CallExpression	"sdb_querys ( sdb , NULL , 0 , ""anal/**"" )"		1097171	1					
ANR	1097367	Callee	sdb_querys		1097171	0					
ANR	1097368	Identifier	sdb_querys		1097171	0					
ANR	1097369	ArgumentList	sdb		1097171	1					
ANR	1097370	Argument	sdb		1097171	0					
ANR	1097371	Identifier	sdb		1097171	0					
ANR	1097372	Argument	NULL		1097171	1					
ANR	1097373	Identifier	NULL		1097171	0					
ANR	1097374	Argument	0		1097171	2					
ANR	1097375	PrimaryExpression	0		1097171	0					
ANR	1097376	Argument	"""anal/**"""		1097171	3					
ANR	1097377	PrimaryExpression	"""anal/**"""		1097171	0					
ANR	1097378	IfStatement	if ( ! out )		1097171	3					
ANR	1097379	Condition	! out	1394:7:41301:41304	1097171	0	True				
ANR	1097380	UnaryOperationExpression	! out		1097171	0					
ANR	1097381	UnaryOperator	!		1097171	0					
ANR	1097382	Identifier	out		1097171	1					
ANR	1097383	CompoundStatement		21:13:577:577	1097171	1					
ANR	1097384	ReturnStatement	return ;	1395:4:41313:41319	1097171	0	True				
ANR	1097385	WhileStatement	while ( * out )		1097171	4					
ANR	1097386	Condition	* out	1397:10:41336:41339	1097171	0	True				
ANR	1097387	UnaryOperationExpression	* out		1097171	0					
ANR	1097388	UnaryOperator	*		1097171	0					
ANR	1097389	Identifier	out		1097171	1					
ANR	1097390	CompoundStatement		24:16:612:612	1097171	1					
ANR	1097391	ExpressionStatement	"cur_pos = strchr ( out , '\\n' )"	1398:4:41348:41376	1097171	0	True				
ANR	1097392	AssignmentExpression	"cur_pos = strchr ( out , '\\n' )"		1097171	0		=			
ANR	1097393	Identifier	cur_pos		1097171	0					
ANR	1097394	CallExpression	"strchr ( out , '\\n' )"		1097171	1					
ANR	1097395	Callee	strchr		1097171	0					
ANR	1097396	Identifier	strchr		1097171	0					
ANR	1097397	ArgumentList	out		1097171	1					
ANR	1097398	Argument	out		1097171	0					
ANR	1097399	Identifier	out		1097171	0					
ANR	1097400	Argument	'\\n'		1097171	1					
ANR	1097401	PrimaryExpression	'\\n'		1097171	0					
ANR	1097402	IfStatement	if ( ! cur_pos )		1097171	1					
ANR	1097403	Condition	! cur_pos	1399:8:41386:41393	1097171	0	True				
ANR	1097404	UnaryOperationExpression	! cur_pos		1097171	0					
ANR	1097405	UnaryOperator	!		1097171	0					
ANR	1097406	Identifier	cur_pos		1097171	1					
ANR	1097407	CompoundStatement		26:18:666:666	1097171	1					
ANR	1097408	BreakStatement	break ;	1400:5:41403:41408	1097171	0	True				
ANR	1097409	ExpressionStatement	"cur_cmd = r_str_ndup ( out , cur_pos - out )"	1402:4:41420:41461	1097171	2	True				
ANR	1097410	AssignmentExpression	"cur_cmd = r_str_ndup ( out , cur_pos - out )"		1097171	0		=			
ANR	1097411	Identifier	cur_cmd		1097171	0					
ANR	1097412	CallExpression	"r_str_ndup ( out , cur_pos - out )"		1097171	1					
ANR	1097413	Callee	r_str_ndup		1097171	0					
ANR	1097414	Identifier	r_str_ndup		1097171	0					
ANR	1097415	ArgumentList	out		1097171	1					
ANR	1097416	Argument	out		1097171	0					
ANR	1097417	Identifier	out		1097171	0					
ANR	1097418	Argument	cur_pos - out		1097171	1					
ANR	1097419	AdditiveExpression	cur_pos - out		1097171	0		-			
ANR	1097420	Identifier	cur_pos		1097171	0					
ANR	1097421	Identifier	out		1097171	1					
ANR	1097422	IfStatement	"if ( ! strncmp ( tmp , cur_cmd , n ) )"		1097171	3					
ANR	1097423	Condition	"! strncmp ( tmp , cur_cmd , n )"	1403:8:41471:41496	1097171	0	True				
ANR	1097424	UnaryOperationExpression	"! strncmp ( tmp , cur_cmd , n )"		1097171	0					
ANR	1097425	UnaryOperator	!		1097171	0					
ANR	1097426	CallExpression	"strncmp ( tmp , cur_cmd , n )"		1097171	1					
ANR	1097427	Callee	strncmp		1097171	0					
ANR	1097428	Identifier	strncmp		1097171	0					
ANR	1097429	ArgumentList	tmp		1097171	1					
ANR	1097430	Argument	tmp		1097171	0					
ANR	1097431	Identifier	tmp		1097171	0					
ANR	1097432	Argument	cur_cmd		1097171	1					
ANR	1097433	Identifier	cur_cmd		1097171	0					
ANR	1097434	Argument	n		1097171	2					
ANR	1097435	Identifier	n		1097171	0					
ANR	1097436	CompoundStatement		31:5:776:822	1097171	1					
ANR	1097437	IdentifierDeclStatement	"char * cmplt = r_str_newf ( ""anal/%s/"" , cur_cmd ) ;"	1404:5:41506:41552	1097171	0	True				
ANR	1097438	IdentifierDecl	"* cmplt = r_str_newf ( ""anal/%s/"" , cur_cmd )"		1097171	0					
ANR	1097439	IdentifierDeclType	char *		1097171	0					
ANR	1097440	Identifier	cmplt		1097171	1					
ANR	1097441	AssignmentExpression	"* cmplt = r_str_newf ( ""anal/%s/"" , cur_cmd )"		1097171	2		=			
ANR	1097442	Identifier	cmplt		1097171	0					
ANR	1097443	CallExpression	"r_str_newf ( ""anal/%s/"" , cur_cmd )"		1097171	1					
ANR	1097444	Callee	r_str_newf		1097171	0					
ANR	1097445	Identifier	r_str_newf		1097171	0					
ANR	1097446	ArgumentList	"""anal/%s/"""		1097171	1					
ANR	1097447	Argument	"""anal/%s/"""		1097171	0					
ANR	1097448	PrimaryExpression	"""anal/%s/"""		1097171	0					
ANR	1097449	Argument	cur_cmd		1097171	1					
ANR	1097450	Identifier	cur_cmd		1097171	0					
ANR	1097451	ExpressionStatement	"r_line_completion_push ( completion , cmplt )"	1405:5:41559:41601	1097171	1	True				
ANR	1097452	CallExpression	"r_line_completion_push ( completion , cmplt )"		1097171	0					
ANR	1097453	Callee	r_line_completion_push		1097171	0					
ANR	1097454	Identifier	r_line_completion_push		1097171	0					
ANR	1097455	ArgumentList	completion		1097171	1					
ANR	1097456	Argument	completion		1097171	0					
ANR	1097457	Identifier	completion		1097171	0					
ANR	1097458	Argument	cmplt		1097171	1					
ANR	1097459	Identifier	cmplt		1097171	0					
ANR	1097460	ExpressionStatement	out += cur_pos - out + 1	1407:4:41613:41637	1097171	4	True				
ANR	1097461	AssignmentExpression	out += cur_pos - out + 1		1097171	0		+=			
ANR	1097462	Identifier	out		1097171	0					
ANR	1097463	AdditiveExpression	cur_pos - out + 1		1097171	1		-			
ANR	1097464	Identifier	cur_pos		1097171	0					
ANR	1097465	AdditiveExpression	out + 1		1097171	1		+			
ANR	1097466	Identifier	out		1097171	0					
ANR	1097467	PrimaryExpression	1		1097171	1					
ANR	1097468	ElseStatement	else		1097171	0					
ANR	1097469	CompoundStatement		40:3:992:1022	1097171	0					
ANR	1097470	IdentifierDeclStatement	char * tmp = p2 + 1 ;	1411:3:41674:41692	1097171	0	True				
ANR	1097471	IdentifierDecl	* tmp = p2 + 1		1097171	0					
ANR	1097472	IdentifierDeclType	char *		1097171	0					
ANR	1097473	Identifier	tmp		1097171	1					
ANR	1097474	AssignmentExpression	* tmp = p2 + 1		1097171	2		=			
ANR	1097475	Identifier	tmp		1097171	0					
ANR	1097476	AdditiveExpression	p2 + 1		1097171	1		+			
ANR	1097477	Identifier	p2		1097171	0					
ANR	1097478	PrimaryExpression	1		1097171	1					
ANR	1097479	IdentifierDeclStatement	int n = strlen ( tmp ) ;	1412:3:41697:41717	1097171	1	True				
ANR	1097480	IdentifierDecl	n = strlen ( tmp )		1097171	0					
ANR	1097481	IdentifierDeclType	int		1097171	0					
ANR	1097482	Identifier	n		1097171	1					
ANR	1097483	AssignmentExpression	n = strlen ( tmp )		1097171	2		=			
ANR	1097484	Identifier	n		1097171	0					
ANR	1097485	CallExpression	strlen ( tmp )		1097171	1					
ANR	1097486	Callee	strlen		1097171	0					
ANR	1097487	Identifier	strlen		1097171	0					
ANR	1097488	ArgumentList	tmp		1097171	1					
ANR	1097489	Argument	tmp		1097171	0					
ANR	1097490	Identifier	tmp		1097171	0					
ANR	1097491	IdentifierDeclStatement	"char * spltr = strstr ( ns , ""/"" ) ;"	1413:3:41722:41752	1097171	2	True				
ANR	1097492	IdentifierDecl	"* spltr = strstr ( ns , ""/"" )"		1097171	0					
ANR	1097493	IdentifierDeclType	char *		1097171	0					
ANR	1097494	Identifier	spltr		1097171	1					
ANR	1097495	AssignmentExpression	"* spltr = strstr ( ns , ""/"" )"		1097171	2		=			
ANR	1097496	Identifier	spltr		1097171	0					
ANR	1097497	CallExpression	"strstr ( ns , ""/"" )"		1097171	1					
ANR	1097498	Callee	strstr		1097171	0					
ANR	1097499	Identifier	strstr		1097171	0					
ANR	1097500	ArgumentList	ns		1097171	1					
ANR	1097501	Argument	ns		1097171	0					
ANR	1097502	Identifier	ns		1097171	0					
ANR	1097503	Argument	"""/"""		1097171	1					
ANR	1097504	PrimaryExpression	"""/"""		1097171	0					
ANR	1097505	ExpressionStatement	* spltr = 0	1414:3:41757:41767	1097171	3	True				
ANR	1097506	AssignmentExpression	* spltr = 0		1097171	0		=			
ANR	1097507	UnaryOperationExpression	* spltr		1097171	0					
ANR	1097508	UnaryOperator	*		1097171	0					
ANR	1097509	Identifier	spltr		1097171	1					
ANR	1097510	PrimaryExpression	0		1097171	1					
ANR	1097511	ExpressionStatement	"next_cmd = r_str_newf ( ""anal/%s/*"" , ns )"	1415:3:41772:41811	1097171	4	True				
ANR	1097512	AssignmentExpression	"next_cmd = r_str_newf ( ""anal/%s/*"" , ns )"		1097171	0		=			
ANR	1097513	Identifier	next_cmd		1097171	0					
ANR	1097514	CallExpression	"r_str_newf ( ""anal/%s/*"" , ns )"		1097171	1					
ANR	1097515	Callee	r_str_newf		1097171	0					
ANR	1097516	Identifier	r_str_newf		1097171	0					
ANR	1097517	ArgumentList	"""anal/%s/*"""		1097171	1					
ANR	1097518	Argument	"""anal/%s/*"""		1097171	0					
ANR	1097519	PrimaryExpression	"""anal/%s/*"""		1097171	0					
ANR	1097520	Argument	ns		1097171	1					
ANR	1097521	Identifier	ns		1097171	0					
ANR	1097522	ExpressionStatement	"out = sdb_querys ( sdb , NULL , 0 , next_cmd )"	1416:3:41816:41857	1097171	5	True				
ANR	1097523	AssignmentExpression	"out = sdb_querys ( sdb , NULL , 0 , next_cmd )"		1097171	0		=			
ANR	1097524	Identifier	out		1097171	0					
ANR	1097525	CallExpression	"sdb_querys ( sdb , NULL , 0 , next_cmd )"		1097171	1					
ANR	1097526	Callee	sdb_querys		1097171	0					
ANR	1097527	Identifier	sdb_querys		1097171	0					
ANR	1097528	ArgumentList	sdb		1097171	1					
ANR	1097529	Argument	sdb		1097171	0					
ANR	1097530	Identifier	sdb		1097171	0					
ANR	1097531	Argument	NULL		1097171	1					
ANR	1097532	Identifier	NULL		1097171	0					
ANR	1097533	Argument	0		1097171	2					
ANR	1097534	PrimaryExpression	0		1097171	0					
ANR	1097535	Argument	next_cmd		1097171	3					
ANR	1097536	Identifier	next_cmd		1097171	0					
ANR	1097537	IfStatement	if ( ! out )		1097171	6					
ANR	1097538	Condition	! out	1417:7:41866:41869	1097171	0	True				
ANR	1097539	UnaryOperationExpression	! out		1097171	0					
ANR	1097540	UnaryOperator	!		1097171	0					
ANR	1097541	Identifier	out		1097171	1					
ANR	1097542	CompoundStatement		44:13:1142:1142	1097171	1					
ANR	1097543	ReturnStatement	return ;	1418:4:41878:41884	1097171	0	True				
ANR	1097544	WhileStatement	while ( * out )		1097171	7					
ANR	1097545	Condition	* out	1420:10:41901:41904	1097171	0	True				
ANR	1097546	UnaryOperationExpression	* out		1097171	0					
ANR	1097547	UnaryOperator	*		1097171	0					
ANR	1097548	Identifier	out		1097171	1					
ANR	1097549	CompoundStatement		47:16:1177:1177	1097171	1					
ANR	1097550	ExpressionStatement	"temp_pos = strchr ( out , '\\n' )"	1421:4:41913:41942	1097171	0	True				
ANR	1097551	AssignmentExpression	"temp_pos = strchr ( out , '\\n' )"		1097171	0		=			
ANR	1097552	Identifier	temp_pos		1097171	0					
ANR	1097553	CallExpression	"strchr ( out , '\\n' )"		1097171	1					
ANR	1097554	Callee	strchr		1097171	0					
ANR	1097555	Identifier	strchr		1097171	0					
ANR	1097556	ArgumentList	out		1097171	1					
ANR	1097557	Argument	out		1097171	0					
ANR	1097558	Identifier	out		1097171	0					
ANR	1097559	Argument	'\\n'		1097171	1					
ANR	1097560	PrimaryExpression	'\\n'		1097171	0					
ANR	1097561	IfStatement	if ( ! temp_pos )		1097171	1					
ANR	1097562	Condition	! temp_pos	1422:8:41952:41960	1097171	0	True				
ANR	1097563	UnaryOperationExpression	! temp_pos		1097171	0					
ANR	1097564	UnaryOperator	!		1097171	0					
ANR	1097565	Identifier	temp_pos		1097171	1					
ANR	1097566	CompoundStatement		49:19:1233:1233	1097171	1					
ANR	1097567	BreakStatement	break ;	1423:5:41970:41975	1097171	0	True				
ANR	1097568	ExpressionStatement	"temp_cmd = r_str_ndup ( out , temp_pos - out )"	1425:4:41987:42030	1097171	2	True				
ANR	1097569	AssignmentExpression	"temp_cmd = r_str_ndup ( out , temp_pos - out )"		1097171	0		=			
ANR	1097570	Identifier	temp_cmd		1097171	0					
ANR	1097571	CallExpression	"r_str_ndup ( out , temp_pos - out )"		1097171	1					
ANR	1097572	Callee	r_str_ndup		1097171	0					
ANR	1097573	Identifier	r_str_ndup		1097171	0					
ANR	1097574	ArgumentList	out		1097171	1					
ANR	1097575	Argument	out		1097171	0					
ANR	1097576	Identifier	out		1097171	0					
ANR	1097577	Argument	temp_pos - out		1097171	1					
ANR	1097578	AdditiveExpression	temp_pos - out		1097171	0		-			
ANR	1097579	Identifier	temp_pos		1097171	0					
ANR	1097580	Identifier	out		1097171	1					
ANR	1097581	ExpressionStatement	"key = strstr ( temp_cmd , ""="" )"	1426:4:42067:42095	1097171	3	True				
ANR	1097582	AssignmentExpression	"key = strstr ( temp_cmd , ""="" )"		1097171	0		=			
ANR	1097583	Identifier	key		1097171	0					
ANR	1097584	CallExpression	"strstr ( temp_cmd , ""="" )"		1097171	1					
ANR	1097585	Callee	strstr		1097171	0					
ANR	1097586	Identifier	strstr		1097171	0					
ANR	1097587	ArgumentList	temp_cmd		1097171	1					
ANR	1097588	Argument	temp_cmd		1097171	0					
ANR	1097589	Identifier	temp_cmd		1097171	0					
ANR	1097590	Argument	"""="""		1097171	1					
ANR	1097591	PrimaryExpression	"""="""		1097171	0					
ANR	1097592	ExpressionStatement	* key = 0	1427:4:42101:42109	1097171	4	True				
ANR	1097593	AssignmentExpression	* key = 0		1097171	0		=			
ANR	1097594	UnaryOperationExpression	* key		1097171	0					
ANR	1097595	UnaryOperator	*		1097171	0					
ANR	1097596	Identifier	key		1097171	1					
ANR	1097597	PrimaryExpression	0		1097171	1					
ANR	1097598	IfStatement	"if ( ! strncmp ( tmp , temp_cmd , n ) )"		1097171	5					
ANR	1097599	Condition	"! strncmp ( tmp , temp_cmd , n )"	1428:8:42119:42145	1097171	0	True				
ANR	1097600	UnaryOperationExpression	"! strncmp ( tmp , temp_cmd , n )"		1097171	0					
ANR	1097601	UnaryOperator	!		1097171	0					
ANR	1097602	CallExpression	"strncmp ( tmp , temp_cmd , n )"		1097171	1					
ANR	1097603	Callee	strncmp		1097171	0					
ANR	1097604	Identifier	strncmp		1097171	0					
ANR	1097605	ArgumentList	tmp		1097171	1					
ANR	1097606	Argument	tmp		1097171	0					
ANR	1097607	Identifier	tmp		1097171	0					
ANR	1097608	Argument	temp_cmd		1097171	1					
ANR	1097609	Identifier	temp_cmd		1097171	0					
ANR	1097610	Argument	n		1097171	2					
ANR	1097611	Identifier	n		1097171	0					
ANR	1097612	CompoundStatement		56:5:1425:1478	1097171	1					
ANR	1097613	IdentifierDeclStatement	"char * cmplt = r_str_newf ( ""anal/%s/%s"" , ns , temp_cmd ) ;"	1429:5:42155:42208	1097171	0	True				
ANR	1097614	IdentifierDecl	"* cmplt = r_str_newf ( ""anal/%s/%s"" , ns , temp_cmd )"		1097171	0					
ANR	1097615	IdentifierDeclType	char *		1097171	0					
ANR	1097616	Identifier	cmplt		1097171	1					
ANR	1097617	AssignmentExpression	"* cmplt = r_str_newf ( ""anal/%s/%s"" , ns , temp_cmd )"		1097171	2		=			
ANR	1097618	Identifier	cmplt		1097171	0					
ANR	1097619	CallExpression	"r_str_newf ( ""anal/%s/%s"" , ns , temp_cmd )"		1097171	1					
ANR	1097620	Callee	r_str_newf		1097171	0					
ANR	1097621	Identifier	r_str_newf		1097171	0					
ANR	1097622	ArgumentList	"""anal/%s/%s"""		1097171	1					
ANR	1097623	Argument	"""anal/%s/%s"""		1097171	0					
ANR	1097624	PrimaryExpression	"""anal/%s/%s"""		1097171	0					
ANR	1097625	Argument	ns		1097171	1					
ANR	1097626	Identifier	ns		1097171	0					
ANR	1097627	Argument	temp_cmd		1097171	2					
ANR	1097628	Identifier	temp_cmd		1097171	0					
ANR	1097629	ExpressionStatement	"r_line_completion_push ( completion , cmplt )"	1430:5:42215:42257	1097171	1	True				
ANR	1097630	CallExpression	"r_line_completion_push ( completion , cmplt )"		1097171	0					
ANR	1097631	Callee	r_line_completion_push		1097171	0					
ANR	1097632	Identifier	r_line_completion_push		1097171	0					
ANR	1097633	ArgumentList	completion		1097171	1					
ANR	1097634	Argument	completion		1097171	0					
ANR	1097635	Identifier	completion		1097171	0					
ANR	1097636	Argument	cmplt		1097171	1					
ANR	1097637	Identifier	cmplt		1097171	0					
ANR	1097638	ExpressionStatement	out += temp_pos - out + 1	1432:4:42269:42294	1097171	6	True				
ANR	1097639	AssignmentExpression	out += temp_pos - out + 1		1097171	0		+=			
ANR	1097640	Identifier	out		1097171	0					
ANR	1097641	AdditiveExpression	temp_pos - out + 1		1097171	1		-			
ANR	1097642	Identifier	temp_pos		1097171	0					
ANR	1097643	AdditiveExpression	out + 1		1097171	1		+			
ANR	1097644	Identifier	out		1097171	0					
ANR	1097645	PrimaryExpression	1		1097171	1					
ANR	1097646	ElseStatement	else		1097171	0					
ANR	1097647	CompoundStatement		63:2:1587:1609	1097171	0					
ANR	1097648	IdentifierDeclStatement	int n = strlen ( lpath ) ;	1436:2:42317:42339	1097171	0	True				
ANR	1097649	IdentifierDecl	n = strlen ( lpath )		1097171	0					
ANR	1097650	IdentifierDeclType	int		1097171	0					
ANR	1097651	Identifier	n		1097171	1					
ANR	1097652	AssignmentExpression	n = strlen ( lpath )		1097171	2		=			
ANR	1097653	Identifier	n		1097171	0					
ANR	1097654	CallExpression	strlen ( lpath )		1097171	1					
ANR	1097655	Callee	strlen		1097171	0					
ANR	1097656	Identifier	strlen		1097171	0					
ANR	1097657	ArgumentList	lpath		1097171	1					
ANR	1097658	Argument	lpath		1097171	0					
ANR	1097659	Identifier	lpath		1097171	0					
ANR	1097660	IfStatement	"if ( ! strncmp ( lpath , ""anal"" , n ) )"		1097171	1					
ANR	1097661	Condition	"! strncmp ( lpath , ""anal"" , n )"	1437:6:42347:42373	1097171	0	True				
ANR	1097662	UnaryOperationExpression	"! strncmp ( lpath , ""anal"" , n )"		1097171	0					
ANR	1097663	UnaryOperator	!		1097171	0					
ANR	1097664	CallExpression	"strncmp ( lpath , ""anal"" , n )"		1097171	1					
ANR	1097665	Callee	strncmp		1097171	0					
ANR	1097666	Identifier	strncmp		1097171	0					
ANR	1097667	ArgumentList	lpath		1097171	1					
ANR	1097668	Argument	lpath		1097171	0					
ANR	1097669	Identifier	lpath		1097171	0					
ANR	1097670	Argument	"""anal"""		1097171	1					
ANR	1097671	PrimaryExpression	"""anal"""		1097171	0					
ANR	1097672	Argument	n		1097171	2					
ANR	1097673	Identifier	n		1097171	0					
ANR	1097674	CompoundStatement		64:35:1646:1646	1097171	1					
ANR	1097675	ExpressionStatement	"r_line_completion_push ( completion , ""anal/"" )"	1438:3:42381:42425	1097171	0	True				
ANR	1097676	CallExpression	"r_line_completion_push ( completion , ""anal/"" )"		1097171	0					
ANR	1097677	Callee	r_line_completion_push		1097171	0					
ANR	1097678	Identifier	r_line_completion_push		1097171	0					
ANR	1097679	ArgumentList	completion		1097171	1					
ANR	1097680	Argument	completion		1097171	0					
ANR	1097681	Identifier	completion		1097171	0					
ANR	1097682	Argument	"""anal/"""		1097171	1					
ANR	1097683	PrimaryExpression	"""anal/"""		1097171	0					
ANR	1097684	ReturnType	static void		1097171	1					
ANR	1097685	Identifier	autocomplete_sdb		1097171	2					
ANR	1097686	ParameterList	"RCore * core , RLineCompletion * completion , const char * str"		1097171	3					
ANR	1097687	Parameter	RCore * core	1374:30:40670:40680	1097171	0	True				
ANR	1097688	ParameterType	RCore *		1097171	0					
ANR	1097689	Identifier	core		1097171	1					
ANR	1097690	Parameter	RLineCompletion * completion	1374:43:40683:40709	1097171	1	True				
ANR	1097691	ParameterType	RLineCompletion *		1097171	0					
ANR	1097692	Identifier	completion		1097171	1					
ANR	1097693	Parameter	const char * str	1374:72:40712:40726	1097171	2	True				
ANR	1097694	ParameterType	const char *		1097171	0					
ANR	1097695	Identifier	str		1097171	1					
ANR	1097696	CFGEntryNode	ENTRY		1097171		True				
ANR	1097697	CFGExitNode	EXIT		1097171		True				
ANR	1097698	Symbol	p1		1097171						
ANR	1097699	Symbol	p2		1097171						
ANR	1097700	Symbol	next_cmd		1097171						
ANR	1097701	Symbol	ns		1097171						
ANR	1097702	Symbol	r_str_ndup		1097171						
ANR	1097703	Symbol	core -> sdb		1097171						
ANR	1097704	Symbol	* core		1097171						
ANR	1097705	Symbol	strchr		1097171						
ANR	1097706	Symbol	* key		1097171						
ANR	1097707	Symbol	r_str_newf		1097171						
ANR	1097708	Symbol	out		1097171						
ANR	1097709	Symbol	strlen		1097171						
ANR	1097710	Symbol	strncmp		1097171						
ANR	1097711	Symbol	tmp		1097171						
ANR	1097712	Symbol	cur_cmd		1097171						
ANR	1097713	Symbol	pipe		1097171						
ANR	1097714	Symbol	temp_pos		1097171						
ANR	1097715	Symbol	key		1097171						
ANR	1097716	Symbol	r_str_new		1097171						
ANR	1097717	Symbol	* spltr		1097171						
ANR	1097718	Symbol	completion		1097171						
ANR	1097719	Symbol	NULL		1097171						
ANR	1097720	Symbol	* p1		1097171						
ANR	1097721	Symbol	spltr		1097171						
ANR	1097722	Symbol	cmplt		1097171						
ANR	1097723	Symbol	sdb_querys		1097171						
ANR	1097724	Symbol	n		1097171						
ANR	1097725	Symbol	str		1097171						
ANR	1097726	Symbol	sdb		1097171						
ANR	1097727	Symbol	core		1097171						
ANR	1097728	Symbol	strstr		1097171						
ANR	1097729	Symbol	cur_pos		1097171						
ANR	1097730	Symbol	lpath		1097171						
ANR	1097731	Symbol	r_str_trim_ro		1097171						
ANR	1097732	Symbol	* out		1097171						
ANR	1097733	Symbol	temp_cmd		1097171						
ANR	1097734	Function	autocomplete_zignatures	1443:0:42437:42860							
ANR	1097735	FunctionDef	"autocomplete_zignatures (RCore * core , RLineCompletion * completion , const char * msg)"		1097734	0					
ANR	1097736	CompoundStatement		1443:95:42532:42860	1097734	0					
ANR	1097737	ExpressionStatement	r_return_if_fail ( msg )	1444:1:42535:42557	1097734	0	True				
ANR	1097738	CallExpression	r_return_if_fail ( msg )		1097734	0					
ANR	1097739	Callee	r_return_if_fail		1097734	0					
ANR	1097740	Identifier	r_return_if_fail		1097734	0					
ANR	1097741	ArgumentList	msg		1097734	1					
ANR	1097742	Argument	msg		1097734	0					
ANR	1097743	Identifier	msg		1097734	0					
ANR	1097744	IdentifierDeclStatement	int length = strlen ( msg ) ;	1445:1:42560:42585	1097734	1	True				
ANR	1097745	IdentifierDecl	length = strlen ( msg )		1097734	0					
ANR	1097746	IdentifierDeclType	int		1097734	0					
ANR	1097747	Identifier	length		1097734	1					
ANR	1097748	AssignmentExpression	length = strlen ( msg )		1097734	2		=			
ANR	1097749	Identifier	length		1097734	0					
ANR	1097750	CallExpression	strlen ( msg )		1097734	1					
ANR	1097751	Callee	strlen		1097734	0					
ANR	1097752	Identifier	strlen		1097734	0					
ANR	1097753	ArgumentList	msg		1097734	1					
ANR	1097754	Argument	msg		1097734	0					
ANR	1097755	Identifier	msg		1097734	0					
ANR	1097756	IdentifierDeclStatement	RSpaces * zs = & core -> anal -> zign_spaces ;	1446:1:42588:42626	1097734	2	True				
ANR	1097757	IdentifierDecl	* zs = & core -> anal -> zign_spaces		1097734	0					
ANR	1097758	IdentifierDeclType	RSpaces *		1097734	0					
ANR	1097759	Identifier	zs		1097734	1					
ANR	1097760	AssignmentExpression	* zs = & core -> anal -> zign_spaces		1097734	2		=			
ANR	1097761	Identifier	zs		1097734	0					
ANR	1097762	UnaryOperationExpression	& core -> anal -> zign_spaces		1097734	1					
ANR	1097763	UnaryOperator	&		1097734	0					
ANR	1097764	PtrMemberAccess	core -> anal -> zign_spaces		1097734	1					
ANR	1097765	PtrMemberAccess	core -> anal		1097734	0					
ANR	1097766	Identifier	core		1097734	0					
ANR	1097767	Identifier	anal		1097734	1					
ANR	1097768	Identifier	zign_spaces		1097734	1					
ANR	1097769	IdentifierDeclStatement	RSpace * s ;	1447:1:42629:42638	1097734	3	True				
ANR	1097770	IdentifierDecl	* s		1097734	0					
ANR	1097771	IdentifierDeclType	RSpace *		1097734	0					
ANR	1097772	Identifier	s		1097734	1					
ANR	1097773	IdentifierDeclStatement	RSpaceIter it ;	1448:1:42641:42654	1097734	4	True				
ANR	1097774	IdentifierDecl	it		1097734	0					
ANR	1097775	IdentifierDeclType	RSpaceIter		1097734	0					
ANR	1097776	Identifier	it		1097734	1					
ANR	1097777	Statement	r_spaces_foreach	1450:1:42658:42673	1097734	5	True				
ANR	1097778	Statement	(	1450:18:42675:42675	1097734	6	True				
ANR	1097779	Statement	zs	1450:19:42676:42677	1097734	7	True				
ANR	1097780	Statement	","	1450:21:42678:42678	1097734	8	True				
ANR	1097781	Statement	it	1450:23:42680:42681	1097734	9	True				
ANR	1097782	Statement	","	1450:25:42682:42682	1097734	10	True				
ANR	1097783	Statement	s	1450:27:42684:42684	1097734	11	True				
ANR	1097784	Statement	)	1450:28:42685:42685	1097734	12	True				
ANR	1097785	CompoundStatement		8:30:154:154	1097734	13					
ANR	1097786	IfStatement	"if ( ! strncmp ( msg , s -> name , length ) )"		1097734	0					
ANR	1097787	Condition	"! strncmp ( msg , s -> name , length )"	1451:6:42695:42725	1097734	0	True				
ANR	1097788	UnaryOperationExpression	"! strncmp ( msg , s -> name , length )"		1097734	0					
ANR	1097789	UnaryOperator	!		1097734	0					
ANR	1097790	CallExpression	"strncmp ( msg , s -> name , length )"		1097734	1					
ANR	1097791	Callee	strncmp		1097734	0					
ANR	1097792	Identifier	strncmp		1097734	0					
ANR	1097793	ArgumentList	msg		1097734	1					
ANR	1097794	Argument	msg		1097734	0					
ANR	1097795	Identifier	msg		1097734	0					
ANR	1097796	Argument	s -> name		1097734	1					
ANR	1097797	PtrMemberAccess	s -> name		1097734	0					
ANR	1097798	Identifier	s		1097734	0					
ANR	1097799	Identifier	name		1097734	1					
ANR	1097800	Argument	length		1097734	2					
ANR	1097801	Identifier	length		1097734	0					
ANR	1097802	CompoundStatement		9:39:195:195	1097734	1					
ANR	1097803	ExpressionStatement	"r_line_completion_push ( completion , s -> name )"	1452:3:42733:42777	1097734	0	True				
ANR	1097804	CallExpression	"r_line_completion_push ( completion , s -> name )"		1097734	0					
ANR	1097805	Callee	r_line_completion_push		1097734	0					
ANR	1097806	Identifier	r_line_completion_push		1097734	0					
ANR	1097807	ArgumentList	completion		1097734	1					
ANR	1097808	Argument	completion		1097734	0					
ANR	1097809	Identifier	completion		1097734	0					
ANR	1097810	Argument	s -> name		1097734	1					
ANR	1097811	PtrMemberAccess	s -> name		1097734	0					
ANR	1097812	Identifier	s		1097734	0					
ANR	1097813	Identifier	name		1097734	1					
ANR	1097814	IfStatement	if ( strlen ( msg ) == 0 )		1097734	14					
ANR	1097815	Condition	strlen ( msg ) == 0	1456:5:42792:42808	1097734	0	True				
ANR	1097816	EqualityExpression	strlen ( msg ) == 0		1097734	0		==			
ANR	1097817	CallExpression	strlen ( msg )		1097734	0					
ANR	1097818	Callee	strlen		1097734	0					
ANR	1097819	Identifier	strlen		1097734	0					
ANR	1097820	ArgumentList	msg		1097734	1					
ANR	1097821	Argument	msg		1097734	0					
ANR	1097822	Identifier	msg		1097734	0					
ANR	1097823	PrimaryExpression	0		1097734	1					
ANR	1097824	CompoundStatement		14:24:278:278	1097734	1					
ANR	1097825	ExpressionStatement	"r_line_completion_push ( completion , ""*"" )"	1457:2:42815:42855	1097734	0	True				
ANR	1097826	CallExpression	"r_line_completion_push ( completion , ""*"" )"		1097734	0					
ANR	1097827	Callee	r_line_completion_push		1097734	0					
ANR	1097828	Identifier	r_line_completion_push		1097734	0					
ANR	1097829	ArgumentList	completion		1097734	1					
ANR	1097830	Argument	completion		1097734	0					
ANR	1097831	Identifier	completion		1097734	0					
ANR	1097832	Argument	"""*"""		1097734	1					
ANR	1097833	PrimaryExpression	"""*"""		1097734	0					
ANR	1097834	ReturnType	static void		1097734	1					
ANR	1097835	Identifier	autocomplete_zignatures		1097734	2					
ANR	1097836	ParameterList	"RCore * core , RLineCompletion * completion , const char * msg"		1097734	3					
ANR	1097837	Parameter	RCore * core	1443:36:42473:42483	1097734	0	True				
ANR	1097838	ParameterType	RCore *		1097734	0					
ANR	1097839	Identifier	core		1097734	1					
ANR	1097840	Parameter	RLineCompletion * completion	1443:49:42486:42512	1097734	1	True				
ANR	1097841	ParameterType	RLineCompletion *		1097734	0					
ANR	1097842	Identifier	completion		1097734	1					
ANR	1097843	Parameter	const char * msg	1443:78:42515:42529	1097734	2	True				
ANR	1097844	ParameterType	const char *		1097734	0					
ANR	1097845	Identifier	msg		1097734	1					
ANR	1097846	CFGEntryNode	ENTRY		1097734		True				
ANR	1097847	CFGExitNode	EXIT		1097734		True				
ANR	1097848	Symbol	msg		1097734						
ANR	1097849	Symbol	completion		1097734						
ANR	1097850	Symbol	length		1097734						
ANR	1097851	Symbol	* core		1097734						
ANR	1097852	Symbol	it		1097734						
ANR	1097853	Symbol	core -> anal		1097734						
ANR	1097854	Symbol	core		1097734						
ANR	1097855	Symbol	strlen		1097734						
ANR	1097856	Symbol	& core -> anal -> zign_spaces		1097734						
ANR	1097857	Symbol	strncmp		1097734						
ANR	1097858	Symbol	s		1097734						
ANR	1097859	Symbol	s -> name		1097734						
ANR	1097860	Symbol	zs		1097734						
ANR	1097861	Symbol	* s		1097734						
ANR	1097862	Function	autocomplete_flagspaces	1461:0:42863:43278							
ANR	1097863	FunctionDef	"autocomplete_flagspaces (RCore * core , RLineCompletion * completion , const char * msg)"		1097862	0					
ANR	1097864	CompoundStatement		1461:95:42958:43278	1097862	0					
ANR	1097865	ExpressionStatement	r_return_if_fail ( msg )	1462:1:42961:42983	1097862	0	True				
ANR	1097866	CallExpression	r_return_if_fail ( msg )		1097862	0					
ANR	1097867	Callee	r_return_if_fail		1097862	0					
ANR	1097868	Identifier	r_return_if_fail		1097862	0					
ANR	1097869	ArgumentList	msg		1097862	1					
ANR	1097870	Argument	msg		1097862	0					
ANR	1097871	Identifier	msg		1097862	0					
ANR	1097872	IdentifierDeclStatement	int length = strlen ( msg ) ;	1463:1:42986:43011	1097862	1	True				
ANR	1097873	IdentifierDecl	length = strlen ( msg )		1097862	0					
ANR	1097874	IdentifierDeclType	int		1097862	0					
ANR	1097875	Identifier	length		1097862	1					
ANR	1097876	AssignmentExpression	length = strlen ( msg )		1097862	2		=			
ANR	1097877	Identifier	length		1097862	0					
ANR	1097878	CallExpression	strlen ( msg )		1097862	1					
ANR	1097879	Callee	strlen		1097862	0					
ANR	1097880	Identifier	strlen		1097862	0					
ANR	1097881	ArgumentList	msg		1097862	1					
ANR	1097882	Argument	msg		1097862	0					
ANR	1097883	Identifier	msg		1097862	0					
ANR	1097884	IdentifierDeclStatement	RFlag * flag = core -> flags ;	1464:1:43014:43039	1097862	2	True				
ANR	1097885	IdentifierDecl	* flag = core -> flags		1097862	0					
ANR	1097886	IdentifierDeclType	RFlag *		1097862	0					
ANR	1097887	Identifier	flag		1097862	1					
ANR	1097888	AssignmentExpression	* flag = core -> flags		1097862	2		=			
ANR	1097889	Identifier	flag		1097862	0					
ANR	1097890	PtrMemberAccess	core -> flags		1097862	1					
ANR	1097891	Identifier	core		1097862	0					
ANR	1097892	Identifier	flags		1097862	1					
ANR	1097893	IdentifierDeclStatement	RSpaceIter it ;	1465:1:43042:43055	1097862	3	True				
ANR	1097894	IdentifierDecl	it		1097862	0					
ANR	1097895	IdentifierDeclType	RSpaceIter		1097862	0					
ANR	1097896	Identifier	it		1097862	1					
ANR	1097897	IdentifierDeclStatement	RSpace * s ;	1466:1:43058:43067	1097862	4	True				
ANR	1097898	IdentifierDecl	* s		1097862	0					
ANR	1097899	IdentifierDeclType	RSpace *		1097862	0					
ANR	1097900	Identifier	s		1097862	1					
ANR	1097901	Statement	r_flag_space_foreach	1467:1:43070:43089	1097862	5	True				
ANR	1097902	Statement	(	1467:22:43091:43091	1097862	6	True				
ANR	1097903	Statement	flag	1467:23:43092:43095	1097862	7	True				
ANR	1097904	Statement	","	1467:27:43096:43096	1097862	8	True				
ANR	1097905	Statement	it	1467:29:43098:43099	1097862	9	True				
ANR	1097906	Statement	","	1467:31:43100:43100	1097862	10	True				
ANR	1097907	Statement	s	1467:33:43102:43102	1097862	11	True				
ANR	1097908	Statement	)	1467:34:43103:43103	1097862	12	True				
ANR	1097909	CompoundStatement		7:36:146:146	1097862	13					
ANR	1097910	IfStatement	"if ( ! strncmp ( msg , s -> name , length ) )"		1097862	0					
ANR	1097911	Condition	"! strncmp ( msg , s -> name , length )"	1468:6:43113:43143	1097862	0	True				
ANR	1097912	UnaryOperationExpression	"! strncmp ( msg , s -> name , length )"		1097862	0					
ANR	1097913	UnaryOperator	!		1097862	0					
ANR	1097914	CallExpression	"strncmp ( msg , s -> name , length )"		1097862	1					
ANR	1097915	Callee	strncmp		1097862	0					
ANR	1097916	Identifier	strncmp		1097862	0					
ANR	1097917	ArgumentList	msg		1097862	1					
ANR	1097918	Argument	msg		1097862	0					
ANR	1097919	Identifier	msg		1097862	0					
ANR	1097920	Argument	s -> name		1097862	1					
ANR	1097921	PtrMemberAccess	s -> name		1097862	0					
ANR	1097922	Identifier	s		1097862	0					
ANR	1097923	Identifier	name		1097862	1					
ANR	1097924	Argument	length		1097862	2					
ANR	1097925	Identifier	length		1097862	0					
ANR	1097926	CompoundStatement		8:39:187:187	1097862	1					
ANR	1097927	ExpressionStatement	"r_line_completion_push ( completion , s -> name )"	1469:3:43151:43195	1097862	0	True				
ANR	1097928	CallExpression	"r_line_completion_push ( completion , s -> name )"		1097862	0					
ANR	1097929	Callee	r_line_completion_push		1097862	0					
ANR	1097930	Identifier	r_line_completion_push		1097862	0					
ANR	1097931	ArgumentList	completion		1097862	1					
ANR	1097932	Argument	completion		1097862	0					
ANR	1097933	Identifier	completion		1097862	0					
ANR	1097934	Argument	s -> name		1097862	1					
ANR	1097935	PtrMemberAccess	s -> name		1097862	0					
ANR	1097936	Identifier	s		1097862	0					
ANR	1097937	Identifier	name		1097862	1					
ANR	1097938	IfStatement	if ( strlen ( msg ) == 0 )		1097862	14					
ANR	1097939	Condition	strlen ( msg ) == 0	1473:5:43210:43226	1097862	0	True				
ANR	1097940	EqualityExpression	strlen ( msg ) == 0		1097862	0		==			
ANR	1097941	CallExpression	strlen ( msg )		1097862	0					
ANR	1097942	Callee	strlen		1097862	0					
ANR	1097943	Identifier	strlen		1097862	0					
ANR	1097944	ArgumentList	msg		1097862	1					
ANR	1097945	Argument	msg		1097862	0					
ANR	1097946	Identifier	msg		1097862	0					
ANR	1097947	PrimaryExpression	0		1097862	1					
ANR	1097948	CompoundStatement		13:24:270:270	1097862	1					
ANR	1097949	ExpressionStatement	"r_line_completion_push ( completion , ""*"" )"	1474:2:43233:43273	1097862	0	True				
ANR	1097950	CallExpression	"r_line_completion_push ( completion , ""*"" )"		1097862	0					
ANR	1097951	Callee	r_line_completion_push		1097862	0					
ANR	1097952	Identifier	r_line_completion_push		1097862	0					
ANR	1097953	ArgumentList	completion		1097862	1					
ANR	1097954	Argument	completion		1097862	0					
ANR	1097955	Identifier	completion		1097862	0					
ANR	1097956	Argument	"""*"""		1097862	1					
ANR	1097957	PrimaryExpression	"""*"""		1097862	0					
ANR	1097958	ReturnType	static void		1097862	1					
ANR	1097959	Identifier	autocomplete_flagspaces		1097862	2					
ANR	1097960	ParameterList	"RCore * core , RLineCompletion * completion , const char * msg"		1097862	3					
ANR	1097961	Parameter	RCore * core	1461:36:42899:42909	1097862	0	True				
ANR	1097962	ParameterType	RCore *		1097862	0					
ANR	1097963	Identifier	core		1097862	1					
ANR	1097964	Parameter	RLineCompletion * completion	1461:49:42912:42938	1097862	1	True				
ANR	1097965	ParameterType	RLineCompletion *		1097862	0					
ANR	1097966	Identifier	completion		1097862	1					
ANR	1097967	Parameter	const char * msg	1461:78:42941:42955	1097862	2	True				
ANR	1097968	ParameterType	const char *		1097862	0					
ANR	1097969	Identifier	msg		1097862	1					
ANR	1097970	CFGEntryNode	ENTRY		1097862		True				
ANR	1097971	CFGExitNode	EXIT		1097862		True				
ANR	1097972	Symbol	msg		1097862						
ANR	1097973	Symbol	completion		1097862						
ANR	1097974	Symbol	flag		1097862						
ANR	1097975	Symbol	length		1097862						
ANR	1097976	Symbol	* core		1097862						
ANR	1097977	Symbol	core -> flags		1097862						
ANR	1097978	Symbol	it		1097862						
ANR	1097979	Symbol	core		1097862						
ANR	1097980	Symbol	strlen		1097862						
ANR	1097981	Symbol	strncmp		1097862						
ANR	1097982	Symbol	s		1097862						
ANR	1097983	Symbol	s -> name		1097862						
ANR	1097984	Symbol	* s		1097862						
ANR	1097985	Function	autocomplete_functions	1478:0:43281:43663							
ANR	1097986	FunctionDef	"autocomplete_functions (RCore * core , RLineCompletion * completion , const char * str)"		1097985	0					
ANR	1097987	CompoundStatement		1478:95:43376:43663	1097985	0					
ANR	1097988	ExpressionStatement	r_return_if_fail ( str )	1479:1:43379:43401	1097985	0	True				
ANR	1097989	CallExpression	r_return_if_fail ( str )		1097985	0					
ANR	1097990	Callee	r_return_if_fail		1097985	0					
ANR	1097991	Identifier	r_return_if_fail		1097985	0					
ANR	1097992	ArgumentList	str		1097985	1					
ANR	1097993	Argument	str		1097985	0					
ANR	1097994	Identifier	str		1097985	0					
ANR	1097995	IdentifierDeclStatement	RListIter * iter ;	1480:1:43404:43419	1097985	1	True				
ANR	1097996	IdentifierDecl	* iter		1097985	0					
ANR	1097997	IdentifierDeclType	RListIter *		1097985	0					
ANR	1097998	Identifier	iter		1097985	1					
ANR	1097999	IdentifierDeclStatement	RAnalFunction * fcn ;	1481:1:43422:43440	1097985	2	True				
ANR	1098000	IdentifierDecl	* fcn		1097985	0					
ANR	1098001	IdentifierDeclType	RAnalFunction *		1097985	0					
ANR	1098002	Identifier	fcn		1097985	1					
ANR	1098003	IdentifierDeclStatement	int n = strlen ( str ) ;	1482:1:43443:43463	1097985	3	True				
ANR	1098004	IdentifierDecl	n = strlen ( str )		1097985	0					
ANR	1098005	IdentifierDeclType	int		1097985	0					
ANR	1098006	Identifier	n		1097985	1					
ANR	1098007	AssignmentExpression	n = strlen ( str )		1097985	2		=			
ANR	1098008	Identifier	n		1097985	0					
ANR	1098009	CallExpression	strlen ( str )		1097985	1					
ANR	1098010	Callee	strlen		1097985	0					
ANR	1098011	Identifier	strlen		1097985	0					
ANR	1098012	ArgumentList	str		1097985	1					
ANR	1098013	Argument	str		1097985	0					
ANR	1098014	Identifier	str		1097985	0					
ANR	1098015	Statement	r_list_foreach	1483:1:43466:43479	1097985	4	True				
ANR	1098016	Statement	(	1483:16:43481:43481	1097985	5	True				
ANR	1098017	Statement	core	1483:17:43482:43485	1097985	6	True				
ANR	1098018	Statement	->	1483:21:43486:43487	1097985	7	True				
ANR	1098019	Statement	anal	1483:23:43488:43491	1097985	8	True				
ANR	1098020	Statement	->	1483:27:43492:43493	1097985	9	True				
ANR	1098021	Statement	fcns	1483:29:43494:43497	1097985	10	True				
ANR	1098022	Statement	","	1483:33:43498:43498	1097985	11	True				
ANR	1098023	Statement	iter	1483:35:43500:43503	1097985	12	True				
ANR	1098024	Statement	","	1483:39:43504:43504	1097985	13	True				
ANR	1098025	Statement	fcn	1483:41:43506:43508	1097985	14	True				
ANR	1098026	Statement	)	1483:44:43509:43509	1097985	15	True				
ANR	1098027	CompoundStatement		7:2:138:183	1097985	16					
ANR	1098028	IdentifierDeclStatement	"char * name = r_core_anal_fcn_name ( core , fcn ) ;"	1484:2:43515:43560	1097985	0	True				
ANR	1098029	IdentifierDecl	"* name = r_core_anal_fcn_name ( core , fcn )"		1097985	0					
ANR	1098030	IdentifierDeclType	char *		1097985	0					
ANR	1098031	Identifier	name		1097985	1					
ANR	1098032	AssignmentExpression	"* name = r_core_anal_fcn_name ( core , fcn )"		1097985	2		=			
ANR	1098033	Identifier	name		1097985	0					
ANR	1098034	CallExpression	"r_core_anal_fcn_name ( core , fcn )"		1097985	1					
ANR	1098035	Callee	r_core_anal_fcn_name		1097985	0					
ANR	1098036	Identifier	r_core_anal_fcn_name		1097985	0					
ANR	1098037	ArgumentList	core		1097985	1					
ANR	1098038	Argument	core		1097985	0					
ANR	1098039	Identifier	core		1097985	0					
ANR	1098040	Argument	fcn		1097985	1					
ANR	1098041	Identifier	fcn		1097985	0					
ANR	1098042	IfStatement	"if ( ! strncmp ( name , str , n ) )"		1097985	1					
ANR	1098043	Condition	"! strncmp ( name , str , n )"	1485:6:43568:43590	1097985	0	True				
ANR	1098044	UnaryOperationExpression	"! strncmp ( name , str , n )"		1097985	0					
ANR	1098045	UnaryOperator	!		1097985	0					
ANR	1098046	CallExpression	"strncmp ( name , str , n )"		1097985	1					
ANR	1098047	Callee	strncmp		1097985	0					
ANR	1098048	Identifier	strncmp		1097985	0					
ANR	1098049	ArgumentList	name		1097985	1					
ANR	1098050	Argument	name		1097985	0					
ANR	1098051	Identifier	name		1097985	0					
ANR	1098052	Argument	str		1097985	1					
ANR	1098053	Identifier	str		1097985	0					
ANR	1098054	Argument	n		1097985	2					
ANR	1098055	Identifier	n		1097985	0					
ANR	1098056	CompoundStatement		8:31:216:216	1097985	1					
ANR	1098057	ExpressionStatement	"r_line_completion_push ( completion , name )"	1486:3:43598:43639	1097985	0	True				
ANR	1098058	CallExpression	"r_line_completion_push ( completion , name )"		1097985	0					
ANR	1098059	Callee	r_line_completion_push		1097985	0					
ANR	1098060	Identifier	r_line_completion_push		1097985	0					
ANR	1098061	ArgumentList	completion		1097985	1					
ANR	1098062	Argument	completion		1097985	0					
ANR	1098063	Identifier	completion		1097985	0					
ANR	1098064	Argument	name		1097985	1					
ANR	1098065	Identifier	name		1097985	0					
ANR	1098066	ExpressionStatement	free ( name )	1488:2:43647:43658	1097985	2	True				
ANR	1098067	CallExpression	free ( name )		1097985	0					
ANR	1098068	Callee	free		1097985	0					
ANR	1098069	Identifier	free		1097985	0					
ANR	1098070	ArgumentList	name		1097985	1					
ANR	1098071	Argument	name		1097985	0					
ANR	1098072	Identifier	name		1097985	0					
ANR	1098073	ReturnType	static void		1097985	1					
ANR	1098074	Identifier	autocomplete_functions		1097985	2					
ANR	1098075	ParameterList	"RCore * core , RLineCompletion * completion , const char * str"		1097985	3					
ANR	1098076	Parameter	RCore * core	1478:36:43317:43327	1097985	0	True				
ANR	1098077	ParameterType	RCore *		1097985	0					
ANR	1098078	Identifier	core		1097985	1					
ANR	1098079	Parameter	RLineCompletion * completion	1478:49:43330:43356	1097985	1	True				
ANR	1098080	ParameterType	RLineCompletion *		1097985	0					
ANR	1098081	Identifier	completion		1097985	1					
ANR	1098082	Parameter	const char * str	1478:78:43359:43373	1097985	2	True				
ANR	1098083	ParameterType	const char *		1097985	0					
ANR	1098084	Identifier	str		1097985	1					
ANR	1098085	CFGEntryNode	ENTRY		1097985		True				
ANR	1098086	CFGExitNode	EXIT		1097985		True				
ANR	1098087	Symbol	str		1097985						
ANR	1098088	Symbol	fcn		1097985						
ANR	1098089	Symbol	core		1097985						
ANR	1098090	Symbol	completion		1097985						
ANR	1098091	Symbol	strlen		1097985						
ANR	1098092	Symbol	strncmp		1097985						
ANR	1098093	Symbol	r_core_anal_fcn_name		1097985						
ANR	1098094	Symbol	name		1097985						
ANR	1098095	Symbol	iter		1097985						
ANR	1098096	Symbol	n		1097985						
ANR	1098097	Function	autocomplete_macro	1492:0:43666:44084							
ANR	1098098	FunctionDef	"autocomplete_macro (RCore * core , RLineCompletion * completion , const char * str)"		1098097	0					
ANR	1098099	CompoundStatement		1492:90:43756:44084	1098097	0					
ANR	1098100	ExpressionStatement	r_return_if_fail ( str )	1493:1:43759:43781	1098097	0	True				
ANR	1098101	CallExpression	r_return_if_fail ( str )		1098097	0					
ANR	1098102	Callee	r_return_if_fail		1098097	0					
ANR	1098103	Identifier	r_return_if_fail		1098097	0					
ANR	1098104	ArgumentList	str		1098097	1					
ANR	1098105	Argument	str		1098097	0					
ANR	1098106	Identifier	str		1098097	0					
ANR	1098107	IdentifierDeclStatement	RCmdMacroItem * item ;	1494:1:43784:43803	1098097	1	True				
ANR	1098108	IdentifierDecl	* item		1098097	0					
ANR	1098109	IdentifierDeclType	RCmdMacroItem *		1098097	0					
ANR	1098110	Identifier	item		1098097	1					
ANR	1098111	IdentifierDeclStatement	RListIter * iter ;	1495:1:43806:43821	1098097	2	True				
ANR	1098112	IdentifierDecl	* iter		1098097	0					
ANR	1098113	IdentifierDeclType	RListIter *		1098097	0					
ANR	1098114	Identifier	iter		1098097	1					
ANR	1098115	IdentifierDeclStatement	char buf [ 1024 ] ;	1496:1:43824:43838	1098097	3	True				
ANR	1098116	IdentifierDecl	buf [ 1024 ]		1098097	0					
ANR	1098117	IdentifierDeclType	char [ 1024 ]		1098097	0					
ANR	1098118	Identifier	buf		1098097	1					
ANR	1098119	PrimaryExpression	1024		1098097	2					
ANR	1098120	IdentifierDeclStatement	int n = strlen ( str ) ;	1497:1:43841:43860	1098097	4	True				
ANR	1098121	IdentifierDecl	n = strlen ( str )		1098097	0					
ANR	1098122	IdentifierDeclType	int		1098097	0					
ANR	1098123	Identifier	n		1098097	1					
ANR	1098124	AssignmentExpression	n = strlen ( str )		1098097	2		=			
ANR	1098125	Identifier	n		1098097	0					
ANR	1098126	CallExpression	strlen ( str )		1098097	1					
ANR	1098127	Callee	strlen		1098097	0					
ANR	1098128	Identifier	strlen		1098097	0					
ANR	1098129	ArgumentList	str		1098097	1					
ANR	1098130	Argument	str		1098097	0					
ANR	1098131	Identifier	str		1098097	0					
ANR	1098132	Statement	r_list_foreach	1498:1:43863:43876	1098097	5	True				
ANR	1098133	Statement	(	1498:16:43878:43878	1098097	6	True				
ANR	1098134	Statement	core	1498:17:43879:43882	1098097	7	True				
ANR	1098135	Statement	->	1498:21:43883:43884	1098097	8	True				
ANR	1098136	Statement	rcmd	1498:23:43885:43888	1098097	9	True				
ANR	1098137	Statement	->	1498:27:43889:43890	1098097	10	True				
ANR	1098138	Statement	macro	1498:29:43891:43895	1098097	11	True				
ANR	1098139	Statement	.	1498:34:43896:43896	1098097	12	True				
ANR	1098140	Statement	macros	1498:35:43897:43902	1098097	13	True				
ANR	1098141	Statement	","	1498:41:43903:43903	1098097	14	True				
ANR	1098142	Statement	iter	1498:43:43905:43908	1098097	15	True				
ANR	1098143	Statement	","	1498:47:43909:43909	1098097	16	True				
ANR	1098144	Statement	item	1498:49:43911:43914	1098097	17	True				
ANR	1098145	Statement	)	1498:53:43915:43915	1098097	18	True				
ANR	1098146	CompoundStatement		8:2:164:184	1098097	19					
ANR	1098147	IdentifierDeclStatement	char * p = item -> name ;	1499:2:43921:43941	1098097	0	True				
ANR	1098148	IdentifierDecl	* p = item -> name		1098097	0					
ANR	1098149	IdentifierDeclType	char *		1098097	0					
ANR	1098150	Identifier	p		1098097	1					
ANR	1098151	AssignmentExpression	* p = item -> name		1098097	2		=			
ANR	1098152	Identifier	p		1098097	0					
ANR	1098153	PtrMemberAccess	item -> name		1098097	1					
ANR	1098154	Identifier	item		1098097	0					
ANR	1098155	Identifier	name		1098097	1					
ANR	1098156	IfStatement	"if ( ! * str || ! strncmp ( str , p , n ) )"		1098097	1					
ANR	1098157	Condition	"! * str || ! strncmp ( str , p , n )"	1500:6:43949:43977	1098097	0	True				
ANR	1098158	OrExpression	"! * str || ! strncmp ( str , p , n )"		1098097	0		||			
ANR	1098159	UnaryOperationExpression	! * str		1098097	0					
ANR	1098160	UnaryOperator	!		1098097	0					
ANR	1098161	UnaryOperationExpression	* str		1098097	1					
ANR	1098162	UnaryOperator	*		1098097	0					
ANR	1098163	Identifier	str		1098097	1					
ANR	1098164	UnaryOperationExpression	"! strncmp ( str , p , n )"		1098097	1					
ANR	1098165	UnaryOperator	!		1098097	0					
ANR	1098166	CallExpression	"strncmp ( str , p , n )"		1098097	1					
ANR	1098167	Callee	strncmp		1098097	0					
ANR	1098168	Identifier	strncmp		1098097	0					
ANR	1098169	ArgumentList	str		1098097	1					
ANR	1098170	Argument	str		1098097	0					
ANR	1098171	Identifier	str		1098097	0					
ANR	1098172	Argument	p		1098097	1					
ANR	1098173	Identifier	p		1098097	0					
ANR	1098174	Argument	n		1098097	2					
ANR	1098175	Identifier	n		1098097	0					
ANR	1098176	CompoundStatement		9:37:223:223	1098097	1					
ANR	1098177	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""%s%s)"" , str , p )"	1501:3:43985:44030	1098097	0	True				
ANR	1098178	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""%s%s)"" , str , p )"		1098097	0					
ANR	1098179	Callee	snprintf		1098097	0					
ANR	1098180	Identifier	snprintf		1098097	0					
ANR	1098181	ArgumentList	buf		1098097	1					
ANR	1098182	Argument	buf		1098097	0					
ANR	1098183	Identifier	buf		1098097	0					
ANR	1098184	Argument	sizeof ( buf )		1098097	1					
ANR	1098185	SizeofExpression	sizeof ( buf )		1098097	0					
ANR	1098186	Sizeof	sizeof		1098097	0					
ANR	1098187	SizeofOperand	buf		1098097	1					
ANR	1098188	Argument	"""%s%s)"""		1098097	2					
ANR	1098189	PrimaryExpression	"""%s%s)"""		1098097	0					
ANR	1098190	Argument	str		1098097	3					
ANR	1098191	Identifier	str		1098097	0					
ANR	1098192	Argument	p		1098097	4					
ANR	1098193	Identifier	p		1098097	0					
ANR	1098194	ExpressionStatement	"r_line_completion_push ( completion , buf )"	1502:3:44035:44075	1098097	1	True				
ANR	1098195	CallExpression	"r_line_completion_push ( completion , buf )"		1098097	0					
ANR	1098196	Callee	r_line_completion_push		1098097	0					
ANR	1098197	Identifier	r_line_completion_push		1098097	0					
ANR	1098198	ArgumentList	completion		1098097	1					
ANR	1098199	Argument	completion		1098097	0					
ANR	1098200	Identifier	completion		1098097	0					
ANR	1098201	Argument	buf		1098097	1					
ANR	1098202	Identifier	buf		1098097	0					
ANR	1098203	ReturnType	static void		1098097	1					
ANR	1098204	Identifier	autocomplete_macro		1098097	2					
ANR	1098205	ParameterList	"RCore * core , RLineCompletion * completion , const char * str"		1098097	3					
ANR	1098206	Parameter	RCore * core	1492:31:43697:43707	1098097	0	True				
ANR	1098207	ParameterType	RCore *		1098097	0					
ANR	1098208	Identifier	core		1098097	1					
ANR	1098209	Parameter	RLineCompletion * completion	1492:44:43710:43736	1098097	1	True				
ANR	1098210	ParameterType	RLineCompletion *		1098097	0					
ANR	1098211	Identifier	completion		1098097	1					
ANR	1098212	Parameter	const char * str	1492:73:43739:43753	1098097	2	True				
ANR	1098213	ParameterType	const char *		1098097	0					
ANR	1098214	Identifier	str		1098097	1					
ANR	1098215	CFGEntryNode	ENTRY		1098097		True				
ANR	1098216	CFGExitNode	EXIT		1098097		True				
ANR	1098217	Symbol	completion		1098097						
ANR	1098218	Symbol	item		1098097						
ANR	1098219	Symbol	iter		1098097						
ANR	1098220	Symbol	n		1098097						
ANR	1098221	Symbol	str		1098097						
ANR	1098222	Symbol	p		1098097						
ANR	1098223	Symbol	core		1098097						
ANR	1098224	Symbol	strlen		1098097						
ANR	1098225	Symbol	strncmp		1098097						
ANR	1098226	Symbol	buf		1098097						
ANR	1098227	Symbol	item -> name		1098097						
ANR	1098228	Symbol	* item		1098097						
ANR	1098229	Symbol	* str		1098097						
ANR	1098230	Function	autocomplete_file	1507:0:44087:44414							
ANR	1098231	FunctionDef	"autocomplete_file (RLineCompletion * completion , const char * str)"		1098230	0					
ANR	1098232	CompoundStatement		1507:76:44163:44414	1098230	0					
ANR	1098233	ExpressionStatement	r_return_if_fail ( str )	1508:1:44166:44188	1098230	0	True				
ANR	1098234	CallExpression	r_return_if_fail ( str )		1098230	0					
ANR	1098235	Callee	r_return_if_fail		1098230	0					
ANR	1098236	Identifier	r_return_if_fail		1098230	0					
ANR	1098237	ArgumentList	str		1098230	1					
ANR	1098238	Argument	str		1098230	0					
ANR	1098239	Identifier	str		1098230	0					
ANR	1098240	IdentifierDeclStatement	"char * pipe = strchr ( str , '>' ) ;"	1509:1:44191:44221	1098230	1	True				
ANR	1098241	IdentifierDecl	"* pipe = strchr ( str , '>' )"		1098230	0					
ANR	1098242	IdentifierDeclType	char *		1098230	0					
ANR	1098243	Identifier	pipe		1098230	1					
ANR	1098244	AssignmentExpression	"* pipe = strchr ( str , '>' )"		1098230	2		=			
ANR	1098245	Identifier	pipe		1098230	0					
ANR	1098246	CallExpression	"strchr ( str , '>' )"		1098230	1					
ANR	1098247	Callee	strchr		1098230	0					
ANR	1098248	Identifier	strchr		1098230	0					
ANR	1098249	ArgumentList	str		1098230	1					
ANR	1098250	Argument	str		1098230	0					
ANR	1098251	Identifier	str		1098230	0					
ANR	1098252	Argument	'>'		1098230	1					
ANR	1098253	PrimaryExpression	'>'		1098230	0					
ANR	1098254	IfStatement	if ( pipe )		1098230	2					
ANR	1098255	Condition	pipe	1511:5:44229:44232	1098230	0	True				
ANR	1098256	Identifier	pipe		1098230	0					
ANR	1098257	CompoundStatement		5:11:71:71	1098230	1					
ANR	1098258	ExpressionStatement	str = r_str_trim_ro ( pipe + 1 )	1512:2:44239:44269	1098230	0	True				
ANR	1098259	AssignmentExpression	str = r_str_trim_ro ( pipe + 1 )		1098230	0		=			
ANR	1098260	Identifier	str		1098230	0					
ANR	1098261	CallExpression	r_str_trim_ro ( pipe + 1 )		1098230	1					
ANR	1098262	Callee	r_str_trim_ro		1098230	0					
ANR	1098263	Identifier	r_str_trim_ro		1098230	0					
ANR	1098264	ArgumentList	pipe + 1		1098230	1					
ANR	1098265	Argument	pipe + 1		1098230	0					
ANR	1098266	AdditiveExpression	pipe + 1		1098230	0		+			
ANR	1098267	Identifier	pipe		1098230	0					
ANR	1098268	PrimaryExpression	1		1098230	1					
ANR	1098269	IfStatement	if ( str && ! * str )		1098230	3					
ANR	1098270	Condition	str && ! * str	1514:5:44279:44290	1098230	0	True				
ANR	1098271	AndExpression	str && ! * str		1098230	0		&&			
ANR	1098272	Identifier	str		1098230	0					
ANR	1098273	UnaryOperationExpression	! * str		1098230	1					
ANR	1098274	UnaryOperator	!		1098230	0					
ANR	1098275	UnaryOperationExpression	* str		1098230	1					
ANR	1098276	UnaryOperator	*		1098230	0					
ANR	1098277	Identifier	str		1098230	1					
ANR	1098278	CompoundStatement		8:19:129:129	1098230	1					
ANR	1098279	ExpressionStatement	"autocomplete_process_path ( completion , str , ""./"" )"	1515:2:44297:44346	1098230	0	True				
ANR	1098280	CallExpression	"autocomplete_process_path ( completion , str , ""./"" )"		1098230	0					
ANR	1098281	Callee	autocomplete_process_path		1098230	0					
ANR	1098282	Identifier	autocomplete_process_path		1098230	0					
ANR	1098283	ArgumentList	completion		1098230	1					
ANR	1098284	Argument	completion		1098230	0					
ANR	1098285	Identifier	completion		1098230	0					
ANR	1098286	Argument	str		1098230	1					
ANR	1098287	Identifier	str		1098230	0					
ANR	1098288	Argument	"""./"""		1098230	2					
ANR	1098289	PrimaryExpression	"""./"""		1098230	0					
ANR	1098290	ElseStatement	else		1098230	0					
ANR	1098291	CompoundStatement		10:8:192:192	1098230	0					
ANR	1098292	ExpressionStatement	"autocomplete_process_path ( completion , str , str )"	1517:2:44360:44408	1098230	0	True				
ANR	1098293	CallExpression	"autocomplete_process_path ( completion , str , str )"		1098230	0					
ANR	1098294	Callee	autocomplete_process_path		1098230	0					
ANR	1098295	Identifier	autocomplete_process_path		1098230	0					
ANR	1098296	ArgumentList	completion		1098230	1					
ANR	1098297	Argument	completion		1098230	0					
ANR	1098298	Identifier	completion		1098230	0					
ANR	1098299	Argument	str		1098230	1					
ANR	1098300	Identifier	str		1098230	0					
ANR	1098301	Argument	str		1098230	2					
ANR	1098302	Identifier	str		1098230	0					
ANR	1098303	ReturnType	static void		1098230	1					
ANR	1098304	Identifier	autocomplete_file		1098230	2					
ANR	1098305	ParameterList	"RLineCompletion * completion , const char * str"		1098230	3					
ANR	1098306	Parameter	RLineCompletion * completion	1507:30:44117:44143	1098230	0	True				
ANR	1098307	ParameterType	RLineCompletion *		1098230	0					
ANR	1098308	Identifier	completion		1098230	1					
ANR	1098309	Parameter	const char * str	1507:59:44146:44160	1098230	1	True				
ANR	1098310	ParameterType	const char *		1098230	0					
ANR	1098311	Identifier	str		1098230	1					
ANR	1098312	CFGEntryNode	ENTRY		1098230		True				
ANR	1098313	CFGExitNode	EXIT		1098230		True				
ANR	1098314	Symbol	str		1098230						
ANR	1098315	Symbol	completion		1098230						
ANR	1098316	Symbol	r_str_trim_ro		1098230						
ANR	1098317	Symbol	strchr		1098230						
ANR	1098318	Symbol	pipe		1098230						
ANR	1098319	Symbol	* str		1098230						
ANR	1098320	Function	autocomplete_ms_file	1522:0:44417:44833							
ANR	1098321	FunctionDef	"autocomplete_ms_file (RCore * core , RLineCompletion * completion , const char * str)"		1098320	0					
ANR	1098322	CompoundStatement		1522:92:44509:44833	1098320	0					
ANR	1098323	ExpressionStatement	r_return_if_fail ( str )	1523:1:44512:44534	1098320	0	True				
ANR	1098324	CallExpression	r_return_if_fail ( str )		1098320	0					
ANR	1098325	Callee	r_return_if_fail		1098320	0					
ANR	1098326	Identifier	r_return_if_fail		1098320	0					
ANR	1098327	ArgumentList	str		1098320	1					
ANR	1098328	Argument	str		1098320	0					
ANR	1098329	Identifier	str		1098320	0					
ANR	1098330	IdentifierDeclStatement	"char * pipe = strchr ( str , '>' ) ;"	1524:1:44537:44567	1098320	1	True				
ANR	1098331	IdentifierDecl	"* pipe = strchr ( str , '>' )"		1098320	0					
ANR	1098332	IdentifierDeclType	char *		1098320	0					
ANR	1098333	Identifier	pipe		1098320	1					
ANR	1098334	AssignmentExpression	"* pipe = strchr ( str , '>' )"		1098320	2		=			
ANR	1098335	Identifier	pipe		1098320	0					
ANR	1098336	CallExpression	"strchr ( str , '>' )"		1098320	1					
ANR	1098337	Callee	strchr		1098320	0					
ANR	1098338	Identifier	strchr		1098320	0					
ANR	1098339	ArgumentList	str		1098320	1					
ANR	1098340	Argument	str		1098320	0					
ANR	1098341	Identifier	str		1098320	0					
ANR	1098342	Argument	'>'		1098320	1					
ANR	1098343	PrimaryExpression	'>'		1098320	0					
ANR	1098344	IdentifierDeclStatement	"char * path = ( core -> rfs && * ( core -> rfs -> cwd ) ) ? * ( core -> rfs -> cwd ) : ""/"" ;"	1525:1:44570:44640	1098320	2	True				
ANR	1098345	IdentifierDecl	"* path = ( core -> rfs && * ( core -> rfs -> cwd ) ) ? * ( core -> rfs -> cwd ) : ""/"""		1098320	0					
ANR	1098346	IdentifierDeclType	char *		1098320	0					
ANR	1098347	Identifier	path		1098320	1					
ANR	1098348	AssignmentExpression	"* path = ( core -> rfs && * ( core -> rfs -> cwd ) ) ? * ( core -> rfs -> cwd ) : ""/"""		1098320	2		=			
ANR	1098349	Identifier	path		1098320	0					
ANR	1098350	ConditionalExpression	"( core -> rfs && * ( core -> rfs -> cwd ) ) ? * ( core -> rfs -> cwd ) : ""/"""		1098320	1					
ANR	1098351	Condition	core -> rfs && * ( core -> rfs -> cwd )		1098320	0					
ANR	1098352	AndExpression	core -> rfs && * ( core -> rfs -> cwd )		1098320	0		&&			
ANR	1098353	PtrMemberAccess	core -> rfs		1098320	0					
ANR	1098354	Identifier	core		1098320	0					
ANR	1098355	Identifier	rfs		1098320	1					
ANR	1098356	UnaryOperationExpression	* ( core -> rfs -> cwd )		1098320	1					
ANR	1098357	UnaryOperator	*		1098320	0					
ANR	1098358	PtrMemberAccess	core -> rfs -> cwd		1098320	1					
ANR	1098359	PtrMemberAccess	core -> rfs		1098320	0					
ANR	1098360	Identifier	core		1098320	0					
ANR	1098361	Identifier	rfs		1098320	1					
ANR	1098362	Identifier	cwd		1098320	1					
ANR	1098363	UnaryOperationExpression	* ( core -> rfs -> cwd )		1098320	1					
ANR	1098364	UnaryOperator	*		1098320	0					
ANR	1098365	PtrMemberAccess	core -> rfs -> cwd		1098320	1					
ANR	1098366	PtrMemberAccess	core -> rfs		1098320	0					
ANR	1098367	Identifier	core		1098320	0					
ANR	1098368	Identifier	rfs		1098320	1					
ANR	1098369	Identifier	cwd		1098320	1					
ANR	1098370	PrimaryExpression	"""/"""		1098320	2					
ANR	1098371	IfStatement	if ( pipe )		1098320	3					
ANR	1098372	Condition	pipe	1526:5:44647:44650	1098320	0	True				
ANR	1098373	Identifier	pipe		1098320	0					
ANR	1098374	CompoundStatement		5:11:143:143	1098320	1					
ANR	1098375	ExpressionStatement	str = r_str_trim_ro ( pipe + 1 )	1527:2:44657:44687	1098320	0	True				
ANR	1098376	AssignmentExpression	str = r_str_trim_ro ( pipe + 1 )		1098320	0		=			
ANR	1098377	Identifier	str		1098320	0					
ANR	1098378	CallExpression	r_str_trim_ro ( pipe + 1 )		1098320	1					
ANR	1098379	Callee	r_str_trim_ro		1098320	0					
ANR	1098380	Identifier	r_str_trim_ro		1098320	0					
ANR	1098381	ArgumentList	pipe + 1		1098320	1					
ANR	1098382	Argument	pipe + 1		1098320	0					
ANR	1098383	AdditiveExpression	pipe + 1		1098320	0		+			
ANR	1098384	Identifier	pipe		1098320	0					
ANR	1098385	PrimaryExpression	1		1098320	1					
ANR	1098386	IfStatement	if ( str && ! * str )		1098320	4					
ANR	1098387	Condition	str && ! * str	1529:5:44697:44708	1098320	0	True				
ANR	1098388	AndExpression	str && ! * str		1098320	0		&&			
ANR	1098389	Identifier	str		1098320	0					
ANR	1098390	UnaryOperationExpression	! * str		1098320	1					
ANR	1098391	UnaryOperator	!		1098320	0					
ANR	1098392	UnaryOperationExpression	* str		1098320	1					
ANR	1098393	UnaryOperator	*		1098320	0					
ANR	1098394	Identifier	str		1098320	1					
ANR	1098395	CompoundStatement		8:19:201:201	1098320	1					
ANR	1098396	ExpressionStatement	"autocomplete_ms_path ( completion , core , str , path )"	1530:2:44715:44765	1098320	0	True				
ANR	1098397	CallExpression	"autocomplete_ms_path ( completion , core , str , path )"		1098320	0					
ANR	1098398	Callee	autocomplete_ms_path		1098320	0					
ANR	1098399	Identifier	autocomplete_ms_path		1098320	0					
ANR	1098400	ArgumentList	completion		1098320	1					
ANR	1098401	Argument	completion		1098320	0					
ANR	1098402	Identifier	completion		1098320	0					
ANR	1098403	Argument	core		1098320	1					
ANR	1098404	Identifier	core		1098320	0					
ANR	1098405	Argument	str		1098320	2					
ANR	1098406	Identifier	str		1098320	0					
ANR	1098407	Argument	path		1098320	3					
ANR	1098408	Identifier	path		1098320	0					
ANR	1098409	ElseStatement	else		1098320	0					
ANR	1098410	CompoundStatement		10:8:265:265	1098320	0					
ANR	1098411	ExpressionStatement	"autocomplete_ms_path ( completion , core , str , str )"	1532:2:44779:44828	1098320	0	True				
ANR	1098412	CallExpression	"autocomplete_ms_path ( completion , core , str , str )"		1098320	0					
ANR	1098413	Callee	autocomplete_ms_path		1098320	0					
ANR	1098414	Identifier	autocomplete_ms_path		1098320	0					
ANR	1098415	ArgumentList	completion		1098320	1					
ANR	1098416	Argument	completion		1098320	0					
ANR	1098417	Identifier	completion		1098320	0					
ANR	1098418	Argument	core		1098320	1					
ANR	1098419	Identifier	core		1098320	0					
ANR	1098420	Argument	str		1098320	2					
ANR	1098421	Identifier	str		1098320	0					
ANR	1098422	Argument	str		1098320	3					
ANR	1098423	Identifier	str		1098320	0					
ANR	1098424	ReturnType	static void		1098320	1					
ANR	1098425	Identifier	autocomplete_ms_file		1098320	2					
ANR	1098426	ParameterList	"RCore * core , RLineCompletion * completion , const char * str"		1098320	3					
ANR	1098427	Parameter	RCore * core	1522:33:44450:44460	1098320	0	True				
ANR	1098428	ParameterType	RCore *		1098320	0					
ANR	1098429	Identifier	core		1098320	1					
ANR	1098430	Parameter	RLineCompletion * completion	1522:46:44463:44489	1098320	1	True				
ANR	1098431	ParameterType	RLineCompletion *		1098320	0					
ANR	1098432	Identifier	completion		1098320	1					
ANR	1098433	Parameter	const char * str	1522:75:44492:44506	1098320	2	True				
ANR	1098434	ParameterType	const char *		1098320	0					
ANR	1098435	Identifier	str		1098320	1					
ANR	1098436	CFGEntryNode	ENTRY		1098320		True				
ANR	1098437	CFGExitNode	EXIT		1098320		True				
ANR	1098438	Symbol	completion		1098320						
ANR	1098439	Symbol	* core -> rfs		1098320						
ANR	1098440	Symbol	* core		1098320						
ANR	1098441	Symbol	strchr		1098320						
ANR	1098442	Symbol	str		1098320						
ANR	1098443	Symbol	core -> rfs -> cwd		1098320						
ANR	1098444	Symbol	core		1098320						
ANR	1098445	Symbol	* * * core		1098320						
ANR	1098446	Symbol	path		1098320						
ANR	1098447	Symbol	* * core -> rfs		1098320						
ANR	1098448	Symbol	core -> rfs		1098320						
ANR	1098449	Symbol	* ( core -> rfs -> cwd )		1098320						
ANR	1098450	Symbol	r_str_trim_ro		1098320						
ANR	1098451	Symbol	pipe		1098320						
ANR	1098452	Symbol	* str		1098320						
ANR	1098453	Symbol	* * core		1098320						
ANR	1098454	Symbol	* core -> rfs -> cwd		1098320						
ANR	1098455	Function	autocomplete_theme	1536:0:44836:45215							
ANR	1098456	FunctionDef	"autocomplete_theme (RCore * core , RLineCompletion * completion , const char * str)"		1098455	0					
ANR	1098457	CompoundStatement		1536:90:44926:45215	1098455	0					
ANR	1098458	ExpressionStatement	r_return_if_fail ( str )	1537:1:44929:44951	1098455	0	True				
ANR	1098459	CallExpression	r_return_if_fail ( str )		1098455	0					
ANR	1098460	Callee	r_return_if_fail		1098455	0					
ANR	1098461	Identifier	r_return_if_fail		1098455	0					
ANR	1098462	ArgumentList	str		1098455	1					
ANR	1098463	Argument	str		1098455	0					
ANR	1098464	Identifier	str		1098455	0					
ANR	1098465	IdentifierDeclStatement	int len = strlen ( str ) ;	1538:1:44954:44976	1098455	1	True				
ANR	1098466	IdentifierDecl	len = strlen ( str )		1098455	0					
ANR	1098467	IdentifierDeclType	int		1098455	0					
ANR	1098468	Identifier	len		1098455	1					
ANR	1098469	AssignmentExpression	len = strlen ( str )		1098455	2		=			
ANR	1098470	Identifier	len		1098455	0					
ANR	1098471	CallExpression	strlen ( str )		1098455	1					
ANR	1098472	Callee	strlen		1098455	0					
ANR	1098473	Identifier	strlen		1098455	0					
ANR	1098474	ArgumentList	str		1098455	1					
ANR	1098475	Argument	str		1098455	0					
ANR	1098476	Identifier	str		1098455	0					
ANR	1098477	IdentifierDeclStatement	char * theme ;	1539:1:44979:44990	1098455	2	True				
ANR	1098478	IdentifierDecl	* theme		1098455	0					
ANR	1098479	IdentifierDeclType	char *		1098455	0					
ANR	1098480	Identifier	theme		1098455	1					
ANR	1098481	IdentifierDeclStatement	RListIter * iter ;	1540:1:44993:45008	1098455	3	True				
ANR	1098482	IdentifierDecl	* iter		1098455	0					
ANR	1098483	IdentifierDeclType	RListIter *		1098455	0					
ANR	1098484	Identifier	iter		1098455	1					
ANR	1098485	IdentifierDeclStatement	RList * themes = r_core_list_themes ( core ) ;	1541:1:45011:45052	1098455	4	True				
ANR	1098486	IdentifierDecl	* themes = r_core_list_themes ( core )		1098455	0					
ANR	1098487	IdentifierDeclType	RList *		1098455	0					
ANR	1098488	Identifier	themes		1098455	1					
ANR	1098489	AssignmentExpression	* themes = r_core_list_themes ( core )		1098455	2		=			
ANR	1098490	Identifier	themes		1098455	0					
ANR	1098491	CallExpression	r_core_list_themes ( core )		1098455	1					
ANR	1098492	Callee	r_core_list_themes		1098455	0					
ANR	1098493	Identifier	r_core_list_themes		1098455	0					
ANR	1098494	ArgumentList	core		1098455	1					
ANR	1098495	Argument	core		1098455	0					
ANR	1098496	Identifier	core		1098455	0					
ANR	1098497	Statement	r_list_foreach	1542:1:45055:45068	1098455	5	True				
ANR	1098498	Statement	(	1542:16:45070:45070	1098455	6	True				
ANR	1098499	Statement	themes	1542:17:45071:45076	1098455	7	True				
ANR	1098500	Statement	","	1542:23:45077:45077	1098455	8	True				
ANR	1098501	Statement	iter	1542:25:45079:45082	1098455	9	True				
ANR	1098502	Statement	","	1542:29:45083:45083	1098455	10	True				
ANR	1098503	Statement	theme	1542:31:45085:45089	1098455	11	True				
ANR	1098504	Statement	)	1542:36:45090:45090	1098455	12	True				
ANR	1098505	CompoundStatement		7:38:165:165	1098455	13					
ANR	1098506	IfStatement	"if ( ! len || ! strncmp ( str , theme , len ) )"		1098455	0					
ANR	1098507	Condition	"! len || ! strncmp ( str , theme , len )"	1543:6:45100:45133	1098455	0	True				
ANR	1098508	OrExpression	"! len || ! strncmp ( str , theme , len )"		1098455	0		||			
ANR	1098509	UnaryOperationExpression	! len		1098455	0					
ANR	1098510	UnaryOperator	!		1098455	0					
ANR	1098511	Identifier	len		1098455	1					
ANR	1098512	UnaryOperationExpression	"! strncmp ( str , theme , len )"		1098455	1					
ANR	1098513	UnaryOperator	!		1098455	0					
ANR	1098514	CallExpression	"strncmp ( str , theme , len )"		1098455	1					
ANR	1098515	Callee	strncmp		1098455	0					
ANR	1098516	Identifier	strncmp		1098455	0					
ANR	1098517	ArgumentList	str		1098455	1					
ANR	1098518	Argument	str		1098455	0					
ANR	1098519	Identifier	str		1098455	0					
ANR	1098520	Argument	theme		1098455	1					
ANR	1098521	Identifier	theme		1098455	0					
ANR	1098522	Argument	len		1098455	2					
ANR	1098523	Identifier	len		1098455	0					
ANR	1098524	CompoundStatement		8:42:209:209	1098455	1					
ANR	1098525	ExpressionStatement	"r_line_completion_push ( completion , theme )"	1544:3:45141:45183	1098455	0	True				
ANR	1098526	CallExpression	"r_line_completion_push ( completion , theme )"		1098455	0					
ANR	1098527	Callee	r_line_completion_push		1098455	0					
ANR	1098528	Identifier	r_line_completion_push		1098455	0					
ANR	1098529	ArgumentList	completion		1098455	1					
ANR	1098530	Argument	completion		1098455	0					
ANR	1098531	Identifier	completion		1098455	0					
ANR	1098532	Argument	theme		1098455	1					
ANR	1098533	Identifier	theme		1098455	0					
ANR	1098534	ExpressionStatement	r_list_free ( themes )	1547:1:45193:45213	1098455	14	True				
ANR	1098535	CallExpression	r_list_free ( themes )		1098455	0					
ANR	1098536	Callee	r_list_free		1098455	0					
ANR	1098537	Identifier	r_list_free		1098455	0					
ANR	1098538	ArgumentList	themes		1098455	1					
ANR	1098539	Argument	themes		1098455	0					
ANR	1098540	Identifier	themes		1098455	0					
ANR	1098541	ReturnType	static void		1098455	1					
ANR	1098542	Identifier	autocomplete_theme		1098455	2					
ANR	1098543	ParameterList	"RCore * core , RLineCompletion * completion , const char * str"		1098455	3					
ANR	1098544	Parameter	RCore * core	1536:31:44867:44877	1098455	0	True				
ANR	1098545	ParameterType	RCore *		1098455	0					
ANR	1098546	Identifier	core		1098455	1					
ANR	1098547	Parameter	RLineCompletion * completion	1536:44:44880:44906	1098455	1	True				
ANR	1098548	ParameterType	RLineCompletion *		1098455	0					
ANR	1098549	Identifier	completion		1098455	1					
ANR	1098550	Parameter	const char * str	1536:73:44909:44923	1098455	2	True				
ANR	1098551	ParameterType	const char *		1098455	0					
ANR	1098552	Identifier	str		1098455	1					
ANR	1098553	CFGEntryNode	ENTRY		1098455		True				
ANR	1098554	CFGExitNode	EXIT		1098455		True				
ANR	1098555	Symbol	str		1098455						
ANR	1098556	Symbol	core		1098455						
ANR	1098557	Symbol	completion		1098455						
ANR	1098558	Symbol	strlen		1098455						
ANR	1098559	Symbol	themes		1098455						
ANR	1098560	Symbol	r_core_list_themes		1098455						
ANR	1098561	Symbol	strncmp		1098455						
ANR	1098562	Symbol	len		1098455						
ANR	1098563	Symbol	iter		1098455						
ANR	1098564	Symbol	theme		1098455						
ANR	1098565	Function	find_e_opts	1550:0:45218:46378							
ANR	1098566	FunctionDef	"find_e_opts (RCore * core , RLineCompletion * completion , RLineBuffer * buf)"		1098565	0					
ANR	1098567	CompoundStatement		1550:84:45302:46378	1098565	0					
ANR	1098568	IdentifierDeclStatement	"const char * pattern = ""e (.*)="" ;"	1551:1:45305:45336	1098565	0	True				
ANR	1098569	IdentifierDecl	"* pattern = ""e (.*)="""		1098565	0					
ANR	1098570	IdentifierDeclType	const char *		1098565	0					
ANR	1098571	Identifier	pattern		1098565	1					
ANR	1098572	AssignmentExpression	"* pattern = ""e (.*)="""		1098565	2		=			
ANR	1098573	Identifier	pattern		1098565	0					
ANR	1098574	PrimaryExpression	"""e (.*)="""		1098565	1					
ANR	1098575	IdentifierDeclStatement	"RRegex * rx = r_regex_new ( pattern , ""e"" ) ;"	1552:1:45339:45378	1098565	1	True				
ANR	1098576	IdentifierDecl	"* rx = r_regex_new ( pattern , ""e"" )"		1098565	0					
ANR	1098577	IdentifierDeclType	RRegex *		1098565	0					
ANR	1098578	Identifier	rx		1098565	1					
ANR	1098579	AssignmentExpression	"* rx = r_regex_new ( pattern , ""e"" )"		1098565	2		=			
ANR	1098580	Identifier	rx		1098565	0					
ANR	1098581	CallExpression	"r_regex_new ( pattern , ""e"" )"		1098565	1					
ANR	1098582	Callee	r_regex_new		1098565	0					
ANR	1098583	Identifier	r_regex_new		1098565	0					
ANR	1098584	ArgumentList	pattern		1098565	1					
ANR	1098585	Argument	pattern		1098565	0					
ANR	1098586	Identifier	pattern		1098565	0					
ANR	1098587	Argument	"""e"""		1098565	1					
ANR	1098588	PrimaryExpression	"""e"""		1098565	0					
ANR	1098589	IdentifierDeclStatement	const size_t nmatch = 2 ;	1553:1:45381:45404	1098565	2	True				
ANR	1098590	IdentifierDecl	nmatch = 2		1098565	0					
ANR	1098591	IdentifierDeclType	const size_t		1098565	0					
ANR	1098592	Identifier	nmatch		1098565	1					
ANR	1098593	AssignmentExpression	nmatch = 2		1098565	2		=			
ANR	1098594	Identifier	nmatch		1098565	0					
ANR	1098595	PrimaryExpression	2		1098565	1					
ANR	1098596	IdentifierDeclStatement	RRegexMatch pmatch [ 2 ] ;	1554:1:45407:45428	1098565	3	True				
ANR	1098597	IdentifierDecl	pmatch [ 2 ]		1098565	0					
ANR	1098598	IdentifierDeclType	RRegexMatch [ 2 ]		1098565	0					
ANR	1098599	Identifier	pmatch		1098565	1					
ANR	1098600	PrimaryExpression	2		1098565	2					
ANR	1098601	IdentifierDeclStatement	bool ret = false ;	1555:1:45431:45447	1098565	4	True				
ANR	1098602	IdentifierDecl	ret = false		1098565	0					
ANR	1098603	IdentifierDeclType	bool		1098565	0					
ANR	1098604	Identifier	ret		1098565	1					
ANR	1098605	AssignmentExpression	ret = false		1098565	2		=			
ANR	1098606	Identifier	false		1098565	0					
ANR	1098607	Identifier	false		1098565	1					
ANR	1098608	ExpressionStatement	r_core_config_update ( core )	1558:1:45530:45557	1098565	5	True				
ANR	1098609	CallExpression	r_core_config_update ( core )		1098565	0					
ANR	1098610	Callee	r_core_config_update		1098565	0					
ANR	1098611	Identifier	r_core_config_update		1098565	0					
ANR	1098612	ArgumentList	core		1098565	1					
ANR	1098613	Argument	core		1098565	0					
ANR	1098614	Identifier	core		1098565	0					
ANR	1098615	IfStatement	"if ( r_regex_exec ( rx , buf -> data , nmatch , pmatch , 1 ) )"		1098565	6					
ANR	1098616	Condition	"r_regex_exec ( rx , buf -> data , nmatch , pmatch , 1 )"	1560:5:45565:45611	1098565	0	True				
ANR	1098617	CallExpression	"r_regex_exec ( rx , buf -> data , nmatch , pmatch , 1 )"		1098565	0					
ANR	1098618	Callee	r_regex_exec		1098565	0					
ANR	1098619	Identifier	r_regex_exec		1098565	0					
ANR	1098620	ArgumentList	rx		1098565	1					
ANR	1098621	Argument	rx		1098565	0					
ANR	1098622	Identifier	rx		1098565	0					
ANR	1098623	Argument	buf -> data		1098565	1					
ANR	1098624	PtrMemberAccess	buf -> data		1098565	0					
ANR	1098625	Identifier	buf		1098565	0					
ANR	1098626	Identifier	data		1098565	1					
ANR	1098627	Argument	nmatch		1098565	2					
ANR	1098628	Identifier	nmatch		1098565	0					
ANR	1098629	Argument	pmatch		1098565	3					
ANR	1098630	Identifier	pmatch		1098565	0					
ANR	1098631	Argument	1		1098565	4					
ANR	1098632	PrimaryExpression	1		1098565	0					
ANR	1098633	CompoundStatement		11:54:311:311	1098565	1					
ANR	1098634	GotoStatement	goto out ;	1561:2:45618:45626	1098565	0	True				
ANR	1098635	Identifier	out		1098565	0					
ANR	1098636	IdentifierDeclStatement	int i ;	1563:1:45632:45637	1098565	7	True				
ANR	1098637	IdentifierDecl	i		1098565	0					
ANR	1098638	IdentifierDeclType	int		1098565	0					
ANR	1098639	Identifier	i		1098565	1					
ANR	1098640	IdentifierDeclStatement	"char * str = NULL , * sp ;"	1564:1:45640:45661	1098565	8	True				
ANR	1098641	IdentifierDecl	* str = NULL		1098565	0					
ANR	1098642	IdentifierDeclType	char *		1098565	0					
ANR	1098643	Identifier	str		1098565	1					
ANR	1098644	AssignmentExpression	* str = NULL		1098565	2		=			
ANR	1098645	Identifier	NULL		1098565	0					
ANR	1098646	Identifier	NULL		1098565	1					
ANR	1098647	IdentifierDecl	* sp		1098565	1					
ANR	1098648	IdentifierDeclType	char *		1098565	0					
ANR	1098649	Identifier	sp		1098565	1					
ANR	1098650	ForStatement	for ( i = pmatch [ 1 ] . rm_so ; i < pmatch [ 1 ] . rm_eo ; i ++ )		1098565	9					
ANR	1098651	ForInit	i = pmatch [ 1 ] . rm_so ;	1565:6:45669:45688	1098565	0	True				
ANR	1098652	AssignmentExpression	i = pmatch [ 1 ] . rm_so		1098565	0		=			
ANR	1098653	Identifier	i		1098565	0					
ANR	1098654	MemberAccess	pmatch [ 1 ] . rm_so		1098565	1					
ANR	1098655	ArrayIndexing	pmatch [ 1 ]		1098565	0					
ANR	1098656	Identifier	pmatch		1098565	0					
ANR	1098657	PrimaryExpression	1		1098565	1					
ANR	1098658	Identifier	rm_so		1098565	1					
ANR	1098659	Condition	i < pmatch [ 1 ] . rm_eo	1565:27:45690:45708	1098565	1	True				
ANR	1098660	RelationalExpression	i < pmatch [ 1 ] . rm_eo		1098565	0		<			
ANR	1098661	Identifier	i		1098565	0					
ANR	1098662	MemberAccess	pmatch [ 1 ] . rm_eo		1098565	1					
ANR	1098663	ArrayIndexing	pmatch [ 1 ]		1098565	0					
ANR	1098664	Identifier	pmatch		1098565	0					
ANR	1098665	PrimaryExpression	1		1098565	1					
ANR	1098666	Identifier	rm_eo		1098565	1					
ANR	1098667	PostIncDecOperationExpression	i ++	1565:48:45711:45713	1098565	2	True				
ANR	1098668	Identifier	i		1098565	0					
ANR	1098669	IncDec	++		1098565	1					
ANR	1098670	CompoundStatement		16:53:413:413	1098565	3					
ANR	1098671	ExpressionStatement	"str = r_str_appendch ( str , buf -> data [ i ] )"	1566:2:45720:45760	1098565	0	True				
ANR	1098672	AssignmentExpression	"str = r_str_appendch ( str , buf -> data [ i ] )"		1098565	0		=			
ANR	1098673	Identifier	str		1098565	0					
ANR	1098674	CallExpression	"r_str_appendch ( str , buf -> data [ i ] )"		1098565	1					
ANR	1098675	Callee	r_str_appendch		1098565	0					
ANR	1098676	Identifier	r_str_appendch		1098565	0					
ANR	1098677	ArgumentList	str		1098565	1					
ANR	1098678	Argument	str		1098565	0					
ANR	1098679	Identifier	str		1098565	0					
ANR	1098680	Argument	buf -> data [ i ]		1098565	1					
ANR	1098681	ArrayIndexing	buf -> data [ i ]		1098565	0					
ANR	1098682	PtrMemberAccess	buf -> data		1098565	0					
ANR	1098683	Identifier	buf		1098565	0					
ANR	1098684	Identifier	data		1098565	1					
ANR	1098685	Identifier	i		1098565	1					
ANR	1098686	IfStatement	if ( ! str )		1098565	10					
ANR	1098687	Condition	! str	1568:5:45770:45773	1098565	0	True				
ANR	1098688	UnaryOperationExpression	! str		1098565	0					
ANR	1098689	UnaryOperator	!		1098565	0					
ANR	1098690	Identifier	str		1098565	1					
ANR	1098691	CompoundStatement		19:11:473:473	1098565	1					
ANR	1098692	GotoStatement	goto out ;	1569:2:45780:45788	1098565	0	True				
ANR	1098693	Identifier	out		1098565	0					
ANR	1098694	IfStatement	"if ( ( sp = strchr ( str , ' ' ) ) )"		1098565	11					
ANR	1098695	Condition	"sp = strchr ( str , ' ' )"	1571:5:45798:45821	1098565	0	True				
ANR	1098696	AssignmentExpression	"sp = strchr ( str , ' ' )"		1098565	0		=			
ANR	1098697	Identifier	sp		1098565	0					
ANR	1098698	CallExpression	"strchr ( str , ' ' )"		1098565	1					
ANR	1098699	Callee	strchr		1098565	0					
ANR	1098700	Identifier	strchr		1098565	0					
ANR	1098701	ArgumentList	str		1098565	1					
ANR	1098702	Argument	str		1098565	0					
ANR	1098703	Identifier	str		1098565	0					
ANR	1098704	Argument	' '		1098565	1					
ANR	1098705	PrimaryExpression	' '		1098565	0					
ANR	1098706	CompoundStatement		22:31:521:521	1098565	1					
ANR	1098707	ExpressionStatement	* sp = 0	1573:2:45873:45880	1098565	0	True				
ANR	1098708	AssignmentExpression	* sp = 0		1098565	0		=			
ANR	1098709	UnaryOperationExpression	* sp		1098565	0					
ANR	1098710	UnaryOperator	*		1098565	0					
ANR	1098711	Identifier	sp		1098565	1					
ANR	1098712	PrimaryExpression	0		1098565	1					
ANR	1098713	IdentifierDeclStatement	"RConfigNode * node = r_config_node_get ( core -> config , str ) ;"	1575:1:45886:45943	1098565	12	True				
ANR	1098714	IdentifierDecl	"* node = r_config_node_get ( core -> config , str )"		1098565	0					
ANR	1098715	IdentifierDeclType	RConfigNode *		1098565	0					
ANR	1098716	Identifier	node		1098565	1					
ANR	1098717	AssignmentExpression	"* node = r_config_node_get ( core -> config , str )"		1098565	2		=			
ANR	1098718	Identifier	node		1098565	0					
ANR	1098719	CallExpression	"r_config_node_get ( core -> config , str )"		1098565	1					
ANR	1098720	Callee	r_config_node_get		1098565	0					
ANR	1098721	Identifier	r_config_node_get		1098565	0					
ANR	1098722	ArgumentList	core -> config		1098565	1					
ANR	1098723	Argument	core -> config		1098565	0					
ANR	1098724	PtrMemberAccess	core -> config		1098565	0					
ANR	1098725	Identifier	core		1098565	0					
ANR	1098726	Identifier	config		1098565	1					
ANR	1098727	Argument	str		1098565	1					
ANR	1098728	Identifier	str		1098565	0					
ANR	1098729	IfStatement	if ( sp )		1098565	13					
ANR	1098730	Condition	sp	1576:5:45950:45951	1098565	0	True				
ANR	1098731	Identifier	sp		1098565	0					
ANR	1098732	CompoundStatement		27:9:651:651	1098565	1					
ANR	1098733	ExpressionStatement	* sp = ' '	1578:2:45988:45997	1098565	0	True				
ANR	1098734	AssignmentExpression	* sp = ' '		1098565	0		=			
ANR	1098735	UnaryOperationExpression	* sp		1098565	0					
ANR	1098736	UnaryOperator	*		1098565	0					
ANR	1098737	Identifier	sp		1098565	1					
ANR	1098738	PrimaryExpression	' '		1098565	1					
ANR	1098739	IfStatement	if ( ! node )		1098565	14					
ANR	1098740	Condition	! node	1580:5:46007:46011	1098565	0	True				
ANR	1098741	UnaryOperationExpression	! node		1098565	0					
ANR	1098742	UnaryOperator	!		1098565	0					
ANR	1098743	Identifier	node		1098565	1					
ANR	1098744	CompoundStatement		31:12:711:711	1098565	1					
ANR	1098745	ReturnStatement	return false ;	1581:2:46018:46030	1098565	0	True				
ANR	1098746	Identifier	false		1098565	0					
ANR	1098747	IdentifierDeclStatement	RListIter * iter ;	1583:1:46036:46051	1098565	15	True				
ANR	1098748	IdentifierDecl	* iter		1098565	0					
ANR	1098749	IdentifierDeclType	RListIter *		1098565	0					
ANR	1098750	Identifier	iter		1098565	1					
ANR	1098751	IdentifierDeclStatement	char * option ;	1584:1:46054:46066	1098565	16	True				
ANR	1098752	IdentifierDecl	* option		1098565	0					
ANR	1098753	IdentifierDeclType	char *		1098565	0					
ANR	1098754	Identifier	option		1098565	1					
ANR	1098755	IdentifierDeclStatement	"char * p = ( char * ) strchr ( buf -> data , '=' ) ;"	1585:1:46069:46111	1098565	17	True				
ANR	1098756	IdentifierDecl	"* p = ( char * ) strchr ( buf -> data , '=' )"		1098565	0					
ANR	1098757	IdentifierDeclType	char *		1098565	0					
ANR	1098758	Identifier	p		1098565	1					
ANR	1098759	AssignmentExpression	"* p = ( char * ) strchr ( buf -> data , '=' )"		1098565	2		=			
ANR	1098760	Identifier	p		1098565	0					
ANR	1098761	CastExpression	"( char * ) strchr ( buf -> data , '=' )"		1098565	1					
ANR	1098762	CastTarget	char *		1098565	0					
ANR	1098763	CallExpression	"strchr ( buf -> data , '=' )"		1098565	1					
ANR	1098764	Callee	strchr		1098565	0					
ANR	1098765	Identifier	strchr		1098565	0					
ANR	1098766	ArgumentList	buf -> data		1098565	1					
ANR	1098767	Argument	buf -> data		1098565	0					
ANR	1098768	PtrMemberAccess	buf -> data		1098565	0					
ANR	1098769	Identifier	buf		1098565	0					
ANR	1098770	Identifier	data		1098565	1					
ANR	1098771	Argument	'='		1098565	1					
ANR	1098772	PrimaryExpression	'='		1098565	0					
ANR	1098773	ExpressionStatement	"p = r_str_ichr ( p + 1 , ' ' )"	1586:1:46114:46141	1098565	18	True				
ANR	1098774	AssignmentExpression	"p = r_str_ichr ( p + 1 , ' ' )"		1098565	0		=			
ANR	1098775	Identifier	p		1098565	0					
ANR	1098776	CallExpression	"r_str_ichr ( p + 1 , ' ' )"		1098565	1					
ANR	1098777	Callee	r_str_ichr		1098565	0					
ANR	1098778	Identifier	r_str_ichr		1098565	0					
ANR	1098779	ArgumentList	p + 1		1098565	1					
ANR	1098780	Argument	p + 1		1098565	0					
ANR	1098781	AdditiveExpression	p + 1		1098565	0		+			
ANR	1098782	Identifier	p		1098565	0					
ANR	1098783	PrimaryExpression	1		1098565	1					
ANR	1098784	Argument	' '		1098565	1					
ANR	1098785	PrimaryExpression	' '		1098565	0					
ANR	1098786	IdentifierDeclStatement	int n = strlen ( p ) ;	1587:1:46144:46162	1098565	19	True				
ANR	1098787	IdentifierDecl	n = strlen ( p )		1098565	0					
ANR	1098788	IdentifierDeclType	int		1098565	0					
ANR	1098789	Identifier	n		1098565	1					
ANR	1098790	AssignmentExpression	n = strlen ( p )		1098565	2		=			
ANR	1098791	Identifier	n		1098565	0					
ANR	1098792	CallExpression	strlen ( p )		1098565	1					
ANR	1098793	Callee	strlen		1098565	0					
ANR	1098794	Identifier	strlen		1098565	0					
ANR	1098795	ArgumentList	p		1098565	1					
ANR	1098796	Argument	p		1098565	0					
ANR	1098797	Identifier	p		1098565	0					
ANR	1098798	Statement	r_list_foreach	1588:1:46165:46178	1098565	20	True				
ANR	1098799	Statement	(	1588:16:46180:46180	1098565	21	True				
ANR	1098800	Statement	node	1588:17:46181:46184	1098565	22	True				
ANR	1098801	Statement	->	1588:21:46185:46186	1098565	23	True				
ANR	1098802	Statement	options	1588:23:46187:46193	1098565	24	True				
ANR	1098803	Statement	","	1588:30:46194:46194	1098565	25	True				
ANR	1098804	Statement	iter	1588:32:46196:46199	1098565	26	True				
ANR	1098805	Statement	","	1588:36:46200:46200	1098565	27	True				
ANR	1098806	Statement	option	1588:38:46202:46207	1098565	28	True				
ANR	1098807	Statement	)	1588:44:46208:46208	1098565	29	True				
ANR	1098808	CompoundStatement		39:46:907:907	1098565	30					
ANR	1098809	IfStatement	"if ( ! strncmp ( option , p , n ) )"		1098565	0					
ANR	1098810	Condition	"! strncmp ( option , p , n )"	1589:6:46218:46240	1098565	0	True				
ANR	1098811	UnaryOperationExpression	"! strncmp ( option , p , n )"		1098565	0					
ANR	1098812	UnaryOperator	!		1098565	0					
ANR	1098813	CallExpression	"strncmp ( option , p , n )"		1098565	1					
ANR	1098814	Callee	strncmp		1098565	0					
ANR	1098815	Identifier	strncmp		1098565	0					
ANR	1098816	ArgumentList	option		1098565	1					
ANR	1098817	Argument	option		1098565	0					
ANR	1098818	Identifier	option		1098565	0					
ANR	1098819	Argument	p		1098565	1					
ANR	1098820	Identifier	p		1098565	0					
ANR	1098821	Argument	n		1098565	2					
ANR	1098822	Identifier	n		1098565	0					
ANR	1098823	CompoundStatement		40:31:940:940	1098565	1					
ANR	1098824	ExpressionStatement	"r_line_completion_push ( completion , option )"	1590:3:46248:46291	1098565	0	True				
ANR	1098825	CallExpression	"r_line_completion_push ( completion , option )"		1098565	0					
ANR	1098826	Callee	r_line_completion_push		1098565	0					
ANR	1098827	Identifier	r_line_completion_push		1098565	0					
ANR	1098828	ArgumentList	completion		1098565	1					
ANR	1098829	Argument	completion		1098565	0					
ANR	1098830	Identifier	completion		1098565	0					
ANR	1098831	Argument	option		1098565	1					
ANR	1098832	Identifier	option		1098565	0					
ANR	1098833	ExpressionStatement	completion -> opt = true	1593:1:46301:46323	1098565	31	True				
ANR	1098834	AssignmentExpression	completion -> opt = true		1098565	0		=			
ANR	1098835	PtrMemberAccess	completion -> opt		1098565	0					
ANR	1098836	Identifier	completion		1098565	0					
ANR	1098837	Identifier	opt		1098565	1					
ANR	1098838	Identifier	true		1098565	1					
ANR	1098839	ExpressionStatement	ret = true	1594:1:46326:46336	1098565	32	True				
ANR	1098840	AssignmentExpression	ret = true		1098565	0		=			
ANR	1098841	Identifier	ret		1098565	0					
ANR	1098842	Identifier	true		1098565	1					
ANR	1098843	Label	out :	1596:1:46340:46343	1098565	33	True				
ANR	1098844	Identifier	out		1098565	0					
ANR	1098845	ExpressionStatement	r_regex_free ( rx )	1597:1:46346:46363	1098565	34	True				
ANR	1098846	CallExpression	r_regex_free ( rx )		1098565	0					
ANR	1098847	Callee	r_regex_free		1098565	0					
ANR	1098848	Identifier	r_regex_free		1098565	0					
ANR	1098849	ArgumentList	rx		1098565	1					
ANR	1098850	Argument	rx		1098565	0					
ANR	1098851	Identifier	rx		1098565	0					
ANR	1098852	ReturnStatement	return ret ;	1598:1:46366:46376	1098565	35	True				
ANR	1098853	Identifier	ret		1098565	0					
ANR	1098854	ReturnType	static bool		1098565	1					
ANR	1098855	Identifier	find_e_opts		1098565	2					
ANR	1098856	ParameterList	"RCore * core , RLineCompletion * completion , RLineBuffer * buf"		1098565	3					
ANR	1098857	Parameter	RCore * core	1550:24:45242:45252	1098565	0	True				
ANR	1098858	ParameterType	RCore *		1098565	0					
ANR	1098859	Identifier	core		1098565	1					
ANR	1098860	Parameter	RLineCompletion * completion	1550:37:45255:45281	1098565	1	True				
ANR	1098861	ParameterType	RLineCompletion *		1098565	0					
ANR	1098862	Identifier	completion		1098565	1					
ANR	1098863	Parameter	RLineBuffer * buf	1550:66:45284:45299	1098565	2	True				
ANR	1098864	ParameterType	RLineBuffer *		1098565	0					
ANR	1098865	Identifier	buf		1098565	1					
ANR	1098866	CFGEntryNode	ENTRY		1098565		True				
ANR	1098867	CFGExitNode	EXIT		1098565		True				
ANR	1098868	Symbol	* sp		1098565						
ANR	1098869	Symbol	rx		1098565						
ANR	1098870	Symbol	* * buf		1098565						
ANR	1098871	Symbol	pattern		1098565						
ANR	1098872	Symbol	* core		1098565						
ANR	1098873	Symbol	strchr		1098565						
ANR	1098874	Symbol	* pmatch		1098565						
ANR	1098875	Symbol	strlen		1098565						
ANR	1098876	Symbol	strncmp		1098565						
ANR	1098877	Symbol	r_str_ichr		1098565						
ANR	1098878	Symbol	pmatch		1098565						
ANR	1098879	Symbol	sp		1098565						
ANR	1098880	Symbol	ret		1098565						
ANR	1098881	Symbol	core -> config		1098565						
ANR	1098882	Symbol	completion		1098565						
ANR	1098883	Symbol	* buf		1098565						
ANR	1098884	Symbol	r_str_appendch		1098565						
ANR	1098885	Symbol	NULL		1098565						
ANR	1098886	Symbol	pmatch [ 1 ] . rm_so		1098565						
ANR	1098887	Symbol	* buf -> data		1098565						
ANR	1098888	Symbol	false		1098565						
ANR	1098889	Symbol	i		1098565						
ANR	1098890	Symbol	iter		1098565						
ANR	1098891	Symbol	* completion		1098565						
ANR	1098892	Symbol	n		1098565						
ANR	1098893	Symbol	r_regex_new		1098565						
ANR	1098894	Symbol	str		1098565						
ANR	1098895	Symbol	p		1098565						
ANR	1098896	Symbol	core		1098565						
ANR	1098897	Symbol	buf -> data		1098565						
ANR	1098898	Symbol	node		1098565						
ANR	1098899	Symbol	buf		1098565						
ANR	1098900	Symbol	completion -> opt		1098565						
ANR	1098901	Symbol	* i		1098565						
ANR	1098902	Symbol	nmatch		1098565						
ANR	1098903	Symbol	pmatch [ 1 ] . rm_eo		1098565						
ANR	1098904	Symbol	true		1098565						
ANR	1098905	Symbol	r_regex_exec		1098565						
ANR	1098906	Symbol	r_config_node_get		1098565						
ANR	1098907	Symbol	option		1098565						
ANR	1098908	Function	find_autocomplete	1601:0:46381:49140							
ANR	1098909	FunctionDef	"find_autocomplete (RCore * core , RLineCompletion * completion , RLineBuffer * buf)"		1098908	0					
ANR	1098910	CompoundStatement		1601:90:46471:49140	1098908	0					
ANR	1098911	IdentifierDeclStatement	RCoreAutocomplete * child = NULL ;	1602:1:46474:46505	1098908	0	True				
ANR	1098912	IdentifierDecl	* child = NULL		1098908	0					
ANR	1098913	IdentifierDeclType	RCoreAutocomplete *		1098908	0					
ANR	1098914	Identifier	child		1098908	1					
ANR	1098915	AssignmentExpression	* child = NULL		1098908	2		=			
ANR	1098916	Identifier	NULL		1098908	0					
ANR	1098917	Identifier	NULL		1098908	1					
ANR	1098918	IdentifierDeclStatement	RCoreAutocomplete * parent = core -> autocomplete ;	1603:1:46508:46554	1098908	1	True				
ANR	1098919	IdentifierDecl	* parent = core -> autocomplete		1098908	0					
ANR	1098920	IdentifierDeclType	RCoreAutocomplete *		1098908	0					
ANR	1098921	Identifier	parent		1098908	1					
ANR	1098922	AssignmentExpression	* parent = core -> autocomplete		1098908	2		=			
ANR	1098923	Identifier	parent		1098908	0					
ANR	1098924	PtrMemberAccess	core -> autocomplete		1098908	1					
ANR	1098925	Identifier	core		1098908	0					
ANR	1098926	Identifier	autocomplete		1098908	1					
ANR	1098927	IdentifierDeclStatement	const char * p = buf -> data ;	1604:1:46557:46582	1098908	2	True				
ANR	1098928	IdentifierDecl	* p = buf -> data		1098908	0					
ANR	1098929	IdentifierDeclType	const char *		1098908	0					
ANR	1098930	Identifier	p		1098908	1					
ANR	1098931	AssignmentExpression	* p = buf -> data		1098908	2		=			
ANR	1098932	Identifier	p		1098908	0					
ANR	1098933	PtrMemberAccess	buf -> data		1098908	1					
ANR	1098934	Identifier	buf		1098908	0					
ANR	1098935	Identifier	data		1098908	1					
ANR	1098936	IfStatement	if ( ! * p )		1098908	3					
ANR	1098937	Condition	! * p	1605:5:46589:46591	1098908	0	True				
ANR	1098938	UnaryOperationExpression	! * p		1098908	0					
ANR	1098939	UnaryOperator	!		1098908	0					
ANR	1098940	UnaryOperationExpression	* p		1098908	1					
ANR	1098941	UnaryOperator	*		1098908	0					
ANR	1098942	Identifier	p		1098908	1					
ANR	1098943	CompoundStatement		5:10:122:122	1098908	1					
ANR	1098944	ReturnStatement	return false ;	1606:2:46598:46610	1098908	0	True				
ANR	1098945	Identifier	false		1098908	0					
ANR	1098946	IdentifierDeclStatement	char arg [ 256 ] ;	1608:1:46616:46629	1098908	4	True				
ANR	1098947	IdentifierDecl	arg [ 256 ]		1098908	0					
ANR	1098948	IdentifierDeclType	char [ 256 ]		1098908	0					
ANR	1098949	Identifier	arg		1098908	1					
ANR	1098950	PrimaryExpression	256		1098908	2					
ANR	1098951	ExpressionStatement	arg [ 0 ] = 0	1609:1:46632:46642	1098908	5	True				
ANR	1098952	AssignmentExpression	arg [ 0 ] = 0		1098908	0		=			
ANR	1098953	ArrayIndexing	arg [ 0 ]		1098908	0					
ANR	1098954	Identifier	arg		1098908	0					
ANR	1098955	PrimaryExpression	0		1098908	1					
ANR	1098956	PrimaryExpression	0		1098908	1					
ANR	1098957	WhileStatement	while ( * p )		1098908	6					
ANR	1098958	Condition	* p	1610:8:46652:46653	1098908	0	True				
ANR	1098959	UnaryOperationExpression	* p		1098908	0					
ANR	1098960	UnaryOperator	*		1098908	0					
ANR	1098961	Identifier	p		1098908	1					
ANR	1098962	CompoundStatement		11:2:188:221	1098908	1					
ANR	1098963	IdentifierDeclStatement	const char * e = r_str_trim_wp ( p ) ;	1611:2:46660:46693	1098908	0	True				
ANR	1098964	IdentifierDecl	* e = r_str_trim_wp ( p )		1098908	0					
ANR	1098965	IdentifierDeclType	const char *		1098908	0					
ANR	1098966	Identifier	e		1098908	1					
ANR	1098967	AssignmentExpression	* e = r_str_trim_wp ( p )		1098908	2		=			
ANR	1098968	Identifier	e		1098908	0					
ANR	1098969	CallExpression	r_str_trim_wp ( p )		1098908	1					
ANR	1098970	Callee	r_str_trim_wp		1098908	0					
ANR	1098971	Identifier	r_str_trim_wp		1098908	0					
ANR	1098972	ArgumentList	p		1098908	1					
ANR	1098973	Argument	p		1098908	0					
ANR	1098974	Identifier	p		1098908	0					
ANR	1098975	IfStatement	if ( ! e || ( e - p ) >= 256 || e == p )		1098908	1					
ANR	1098976	Condition	! e || ( e - p ) >= 256 || e == p	1612:6:46701:46730	1098908	0	True				
ANR	1098977	OrExpression	! e || ( e - p ) >= 256 || e == p		1098908	0		||			
ANR	1098978	UnaryOperationExpression	! e		1098908	0					
ANR	1098979	UnaryOperator	!		1098908	0					
ANR	1098980	Identifier	e		1098908	1					
ANR	1098981	OrExpression	( e - p ) >= 256 || e == p		1098908	1		||			
ANR	1098982	RelationalExpression	( e - p ) >= 256		1098908	0		>=			
ANR	1098983	AdditiveExpression	e - p		1098908	0		-			
ANR	1098984	Identifier	e		1098908	0					
ANR	1098985	Identifier	p		1098908	1					
ANR	1098986	PrimaryExpression	256		1098908	1					
ANR	1098987	EqualityExpression	e == p		1098908	1		==			
ANR	1098988	Identifier	e		1098908	0					
ANR	1098989	Identifier	p		1098908	1					
ANR	1098990	CompoundStatement		12:38:261:261	1098908	1					
ANR	1098991	ReturnStatement	return false ;	1613:3:46738:46750	1098908	0	True				
ANR	1098992	Identifier	false		1098908	0					
ANR	1098993	ExpressionStatement	"memcpy ( arg , p , e - p )"	1615:2:46758:46780	1098908	2	True				
ANR	1098994	CallExpression	"memcpy ( arg , p , e - p )"		1098908	0					
ANR	1098995	Callee	memcpy		1098908	0					
ANR	1098996	Identifier	memcpy		1098908	0					
ANR	1098997	ArgumentList	arg		1098908	1					
ANR	1098998	Argument	arg		1098908	0					
ANR	1098999	Identifier	arg		1098908	0					
ANR	1099000	Argument	p		1098908	1					
ANR	1099001	Identifier	p		1098908	0					
ANR	1099002	Argument	e - p		1098908	2					
ANR	1099003	AdditiveExpression	e - p		1098908	0		-			
ANR	1099004	Identifier	e		1098908	0					
ANR	1099005	Identifier	p		1098908	1					
ANR	1099006	ExpressionStatement	arg [ e - p ] = 0	1616:2:46784:46798	1098908	3	True				
ANR	1099007	AssignmentExpression	arg [ e - p ] = 0		1098908	0		=			
ANR	1099008	ArrayIndexing	arg [ e - p ]		1098908	0					
ANR	1099009	Identifier	arg		1098908	0					
ANR	1099010	AdditiveExpression	e - p		1098908	1		-			
ANR	1099011	Identifier	e		1098908	0					
ANR	1099012	Identifier	p		1098908	1					
ANR	1099013	PrimaryExpression	0		1098908	1					
ANR	1099014	ExpressionStatement	"child = r_core_autocomplete_find ( parent , arg , false )"	1617:2:46802:46855	1098908	4	True				
ANR	1099015	AssignmentExpression	"child = r_core_autocomplete_find ( parent , arg , false )"		1098908	0		=			
ANR	1099016	Identifier	child		1098908	0					
ANR	1099017	CallExpression	"r_core_autocomplete_find ( parent , arg , false )"		1098908	1					
ANR	1099018	Callee	r_core_autocomplete_find		1098908	0					
ANR	1099019	Identifier	r_core_autocomplete_find		1098908	0					
ANR	1099020	ArgumentList	parent		1098908	1					
ANR	1099021	Argument	parent		1098908	0					
ANR	1099022	Identifier	parent		1098908	0					
ANR	1099023	Argument	arg		1098908	1					
ANR	1099024	Identifier	arg		1098908	0					
ANR	1099025	Argument	false		1098908	2					
ANR	1099026	Identifier	false		1098908	0					
ANR	1099027	IfStatement	if ( child && child -> length < buf -> length && p [ child -> length ] == ' ' )		1098908	5					
ANR	1099028	Condition	child && child -> length < buf -> length && p [ child -> length ] == ' '	1618:6:46863:46925	1098908	0	True				
ANR	1099029	AndExpression	child && child -> length < buf -> length && p [ child -> length ] == ' '		1098908	0		&&			
ANR	1099030	Identifier	child		1098908	0					
ANR	1099031	AndExpression	child -> length < buf -> length && p [ child -> length ] == ' '		1098908	1		&&			
ANR	1099032	RelationalExpression	child -> length < buf -> length		1098908	0		<			
ANR	1099033	PtrMemberAccess	child -> length		1098908	0					
ANR	1099034	Identifier	child		1098908	0					
ANR	1099035	Identifier	length		1098908	1					
ANR	1099036	PtrMemberAccess	buf -> length		1098908	1					
ANR	1099037	Identifier	buf		1098908	0					
ANR	1099038	Identifier	length		1098908	1					
ANR	1099039	EqualityExpression	p [ child -> length ] == ' '		1098908	1		==			
ANR	1099040	ArrayIndexing	p [ child -> length ]		1098908	0					
ANR	1099041	Identifier	p		1098908	0					
ANR	1099042	PtrMemberAccess	child -> length		1098908	1					
ANR	1099043	Identifier	child		1098908	0					
ANR	1099044	Identifier	length		1098908	1					
ANR	1099045	PrimaryExpression	' '		1098908	1					
ANR	1099046	CompoundStatement		18:71:456:456	1098908	1					
ANR	1099047	ExpressionStatement	p = r_str_trim_ro ( p + child -> length )	1621:3:47010:47047	1098908	0	True				
ANR	1099048	AssignmentExpression	p = r_str_trim_ro ( p + child -> length )		1098908	0		=			
ANR	1099049	Identifier	p		1098908	0					
ANR	1099050	CallExpression	r_str_trim_ro ( p + child -> length )		1098908	1					
ANR	1099051	Callee	r_str_trim_ro		1098908	0					
ANR	1099052	Identifier	r_str_trim_ro		1098908	0					
ANR	1099053	ArgumentList	p + child -> length		1098908	1					
ANR	1099054	Argument	p + child -> length		1098908	0					
ANR	1099055	AdditiveExpression	p + child -> length		1098908	0		+			
ANR	1099056	Identifier	p		1098908	0					
ANR	1099057	PtrMemberAccess	child -> length		1098908	1					
ANR	1099058	Identifier	child		1098908	0					
ANR	1099059	Identifier	length		1098908	1					
ANR	1099060	IfStatement	if ( child -> type == R_CORE_AUTOCMPLT_OPTN )		1098908	1					
ANR	1099061	Condition	child -> type == R_CORE_AUTOCMPLT_OPTN	1622:7:47056:47091	1098908	0	True				
ANR	1099062	EqualityExpression	child -> type == R_CORE_AUTOCMPLT_OPTN		1098908	0		==			
ANR	1099063	PtrMemberAccess	child -> type		1098908	0					
ANR	1099064	Identifier	child		1098908	0					
ANR	1099065	Identifier	type		1098908	1					
ANR	1099066	Identifier	R_CORE_AUTOCMPLT_OPTN		1098908	1					
ANR	1099067	CompoundStatement		22:45:622:622	1098908	1					
ANR	1099068	ContinueStatement	continue ;	1623:4:47100:47108	1098908	0	True				
ANR	1099069	ExpressionStatement	parent = child	1625:3:47118:47132	1098908	2	True				
ANR	1099070	AssignmentExpression	parent = child		1098908	0		=			
ANR	1099071	Identifier	parent		1098908	0					
ANR	1099072	Identifier	child		1098908	1					
ANR	1099073	ElseStatement	else		1098908	0					
ANR	1099074	CompoundStatement		26:9:671:671	1098908	0					
ANR	1099075	BreakStatement	break ;	1627:3:47148:47153	1098908	0	True				
ANR	1099076	IdentifierDeclStatement	int i ;	1630:1:47163:47168	1098908	7	True				
ANR	1099077	IdentifierDecl	i		1098908	0					
ANR	1099078	IdentifierDeclType	int		1098908	0					
ANR	1099079	Identifier	i		1098908	1					
ANR	1099080	ExpressionStatement	r_line_completion_clear ( completion )	1632:1:47233:47269	1098908	8	True				
ANR	1099081	CallExpression	r_line_completion_clear ( completion )		1098908	0					
ANR	1099082	Callee	r_line_completion_clear		1098908	0					
ANR	1099083	Identifier	r_line_completion_clear		1098908	0					
ANR	1099084	ArgumentList	completion		1098908	1					
ANR	1099085	Argument	completion		1098908	0					
ANR	1099086	Identifier	completion		1098908	0					
ANR	1099087	SwitchStatement	switch ( parent -> type )		1098908	9					
ANR	1099088	Condition	parent -> type	1633:9:47280:47291	1098908	0	True				
ANR	1099089	PtrMemberAccess	parent -> type		1098908	0					
ANR	1099090	Identifier	parent		1098908	0					
ANR	1099091	Identifier	type		1098908	1					
ANR	1099092	CompoundStatement		92:2:2438:2463	1098908	1					
ANR	1099093	Label	case R_CORE_AUTOCMPLT_SEEK :	1634:1:47297:47323	1098908	0	True				
ANR	1099094	Identifier	R_CORE_AUTOCMPLT_SEEK		1098908	0					
ANR	1099095	ExpressionStatement	"autocomplete_functions ( core , completion , p )"	1635:2:47327:47371	1098908	1	True				
ANR	1099096	CallExpression	"autocomplete_functions ( core , completion , p )"		1098908	0					
ANR	1099097	Callee	autocomplete_functions		1098908	0					
ANR	1099098	Identifier	autocomplete_functions		1098908	0					
ANR	1099099	ArgumentList	core		1098908	1					
ANR	1099100	Argument	core		1098908	0					
ANR	1099101	Identifier	core		1098908	0					
ANR	1099102	Argument	completion		1098908	1					
ANR	1099103	Identifier	completion		1098908	0					
ANR	1099104	Argument	p		1098908	2					
ANR	1099105	Identifier	p		1098908	0					
ANR	1099106	Label	case R_CORE_AUTOCMPLT_FLAG :	1636:1:47374:47400	1098908	2	True				
ANR	1099107	Identifier	R_CORE_AUTOCMPLT_FLAG		1098908	0					
ANR	1099108	ExpressionStatement	"autocomplete_flags ( core , completion , p )"	1637:2:47404:47444	1098908	3	True				
ANR	1099109	CallExpression	"autocomplete_flags ( core , completion , p )"		1098908	0					
ANR	1099110	Callee	autocomplete_flags		1098908	0					
ANR	1099111	Identifier	autocomplete_flags		1098908	0					
ANR	1099112	ArgumentList	core		1098908	1					
ANR	1099113	Argument	core		1098908	0					
ANR	1099114	Identifier	core		1098908	0					
ANR	1099115	Argument	completion		1098908	1					
ANR	1099116	Identifier	completion		1098908	0					
ANR	1099117	Argument	p		1098908	2					
ANR	1099118	Identifier	p		1098908	0					
ANR	1099119	BreakStatement	break ;	1638:2:47448:47453	1098908	4	True				
ANR	1099120	Label	case R_CORE_AUTOCMPLT_FLSP :	1639:1:47456:47482	1098908	5	True				
ANR	1099121	Identifier	R_CORE_AUTOCMPLT_FLSP		1098908	0					
ANR	1099122	ExpressionStatement	"autocomplete_flagspaces ( core , completion , p )"	1640:2:47486:47531	1098908	6	True				
ANR	1099123	CallExpression	"autocomplete_flagspaces ( core , completion , p )"		1098908	0					
ANR	1099124	Callee	autocomplete_flagspaces		1098908	0					
ANR	1099125	Identifier	autocomplete_flagspaces		1098908	0					
ANR	1099126	ArgumentList	core		1098908	1					
ANR	1099127	Argument	core		1098908	0					
ANR	1099128	Identifier	core		1098908	0					
ANR	1099129	Argument	completion		1098908	1					
ANR	1099130	Identifier	completion		1098908	0					
ANR	1099131	Argument	p		1098908	2					
ANR	1099132	Identifier	p		1098908	0					
ANR	1099133	BreakStatement	break ;	1641:2:47535:47540	1098908	7	True				
ANR	1099134	Label	case R_CORE_AUTOCMPLT_FCN :	1642:1:47543:47568	1098908	8	True				
ANR	1099135	Identifier	R_CORE_AUTOCMPLT_FCN		1098908	0					
ANR	1099136	ExpressionStatement	"autocomplete_functions ( core , completion , p )"	1643:2:47572:47616	1098908	9	True				
ANR	1099137	CallExpression	"autocomplete_functions ( core , completion , p )"		1098908	0					
ANR	1099138	Callee	autocomplete_functions		1098908	0					
ANR	1099139	Identifier	autocomplete_functions		1098908	0					
ANR	1099140	ArgumentList	core		1098908	1					
ANR	1099141	Argument	core		1098908	0					
ANR	1099142	Identifier	core		1098908	0					
ANR	1099143	Argument	completion		1098908	1					
ANR	1099144	Identifier	completion		1098908	0					
ANR	1099145	Argument	p		1098908	2					
ANR	1099146	Identifier	p		1098908	0					
ANR	1099147	BreakStatement	break ;	1644:2:47620:47625	1098908	10	True				
ANR	1099148	Label	case R_CORE_AUTOCMPLT_ZIGN :	1645:1:47628:47654	1098908	11	True				
ANR	1099149	Identifier	R_CORE_AUTOCMPLT_ZIGN		1098908	0					
ANR	1099150	ExpressionStatement	"autocomplete_zignatures ( core , completion , p )"	1646:2:47658:47703	1098908	12	True				
ANR	1099151	CallExpression	"autocomplete_zignatures ( core , completion , p )"		1098908	0					
ANR	1099152	Callee	autocomplete_zignatures		1098908	0					
ANR	1099153	Identifier	autocomplete_zignatures		1098908	0					
ANR	1099154	ArgumentList	core		1098908	1					
ANR	1099155	Argument	core		1098908	0					
ANR	1099156	Identifier	core		1098908	0					
ANR	1099157	Argument	completion		1098908	1					
ANR	1099158	Identifier	completion		1098908	0					
ANR	1099159	Argument	p		1098908	2					
ANR	1099160	Identifier	p		1098908	0					
ANR	1099161	BreakStatement	break ;	1647:2:47707:47712	1098908	13	True				
ANR	1099162	Label	case R_CORE_AUTOCMPLT_EVAL :	1648:1:47715:47741	1098908	14	True				
ANR	1099163	Identifier	R_CORE_AUTOCMPLT_EVAL		1098908	0					
ANR	1099164	ExpressionStatement	"autocomplete_evals ( core , completion , p )"	1649:2:47745:47785	1098908	15	True				
ANR	1099165	CallExpression	"autocomplete_evals ( core , completion , p )"		1098908	0					
ANR	1099166	Callee	autocomplete_evals		1098908	0					
ANR	1099167	Identifier	autocomplete_evals		1098908	0					
ANR	1099168	ArgumentList	core		1098908	1					
ANR	1099169	Argument	core		1098908	0					
ANR	1099170	Identifier	core		1098908	0					
ANR	1099171	Argument	completion		1098908	1					
ANR	1099172	Identifier	completion		1098908	0					
ANR	1099173	Argument	p		1098908	2					
ANR	1099174	Identifier	p		1098908	0					
ANR	1099175	BreakStatement	break ;	1650:2:47789:47794	1098908	16	True				
ANR	1099176	Label	case R_CORE_AUTOCMPLT_PRJT :	1651:1:47797:47823	1098908	17	True				
ANR	1099177	Identifier	R_CORE_AUTOCMPLT_PRJT		1098908	0					
ANR	1099178	ExpressionStatement	"autocomplete_project ( core , completion , p )"	1652:2:47827:47869	1098908	18	True				
ANR	1099179	CallExpression	"autocomplete_project ( core , completion , p )"		1098908	0					
ANR	1099180	Callee	autocomplete_project		1098908	0					
ANR	1099181	Identifier	autocomplete_project		1098908	0					
ANR	1099182	ArgumentList	core		1098908	1					
ANR	1099183	Argument	core		1098908	0					
ANR	1099184	Identifier	core		1098908	0					
ANR	1099185	Argument	completion		1098908	1					
ANR	1099186	Identifier	completion		1098908	0					
ANR	1099187	Argument	p		1098908	2					
ANR	1099188	Identifier	p		1098908	0					
ANR	1099189	BreakStatement	break ;	1653:2:47873:47878	1098908	19	True				
ANR	1099190	Label	case R_CORE_AUTOCMPLT_MINS :	1654:1:47881:47907	1098908	20	True				
ANR	1099191	Identifier	R_CORE_AUTOCMPLT_MINS		1098908	0					
ANR	1099192	ExpressionStatement	"autocomplete_minus ( core , completion , p )"	1655:2:47911:47951	1098908	21	True				
ANR	1099193	CallExpression	"autocomplete_minus ( core , completion , p )"		1098908	0					
ANR	1099194	Callee	autocomplete_minus		1098908	0					
ANR	1099195	Identifier	autocomplete_minus		1098908	0					
ANR	1099196	ArgumentList	core		1098908	1					
ANR	1099197	Argument	core		1098908	0					
ANR	1099198	Identifier	core		1098908	0					
ANR	1099199	Argument	completion		1098908	1					
ANR	1099200	Identifier	completion		1098908	0					
ANR	1099201	Argument	p		1098908	2					
ANR	1099202	Identifier	p		1098908	0					
ANR	1099203	BreakStatement	break ;	1656:2:47955:47960	1098908	22	True				
ANR	1099204	Label	case R_CORE_AUTOCMPLT_BRKP :	1657:1:47963:47989	1098908	23	True				
ANR	1099205	Identifier	R_CORE_AUTOCMPLT_BRKP		1098908	0					
ANR	1099206	ExpressionStatement	"autocomplete_breakpoints ( core , completion , p )"	1658:2:47993:48039	1098908	24	True				
ANR	1099207	CallExpression	"autocomplete_breakpoints ( core , completion , p )"		1098908	0					
ANR	1099208	Callee	autocomplete_breakpoints		1098908	0					
ANR	1099209	Identifier	autocomplete_breakpoints		1098908	0					
ANR	1099210	ArgumentList	core		1098908	1					
ANR	1099211	Argument	core		1098908	0					
ANR	1099212	Identifier	core		1098908	0					
ANR	1099213	Argument	completion		1098908	1					
ANR	1099214	Identifier	completion		1098908	0					
ANR	1099215	Argument	p		1098908	2					
ANR	1099216	Identifier	p		1098908	0					
ANR	1099217	BreakStatement	break ;	1659:2:48043:48048	1098908	25	True				
ANR	1099218	Label	case R_CORE_AUTOCMPLT_MACR :	1660:1:48051:48077	1098908	26	True				
ANR	1099219	Identifier	R_CORE_AUTOCMPLT_MACR		1098908	0					
ANR	1099220	ExpressionStatement	"autocomplete_macro ( core , completion , p )"	1661:2:48081:48121	1098908	27	True				
ANR	1099221	CallExpression	"autocomplete_macro ( core , completion , p )"		1098908	0					
ANR	1099222	Callee	autocomplete_macro		1098908	0					
ANR	1099223	Identifier	autocomplete_macro		1098908	0					
ANR	1099224	ArgumentList	core		1098908	1					
ANR	1099225	Argument	core		1098908	0					
ANR	1099226	Identifier	core		1098908	0					
ANR	1099227	Argument	completion		1098908	1					
ANR	1099228	Identifier	completion		1098908	0					
ANR	1099229	Argument	p		1098908	2					
ANR	1099230	Identifier	p		1098908	0					
ANR	1099231	BreakStatement	break ;	1662:2:48125:48130	1098908	28	True				
ANR	1099232	Label	case R_CORE_AUTOCMPLT_MS :	1663:1:48133:48157	1098908	29	True				
ANR	1099233	Identifier	R_CORE_AUTOCMPLT_MS		1098908	0					
ANR	1099234	ExpressionStatement	"autocomplete_ms_file ( core , completion , p )"	1664:2:48161:48202	1098908	30	True				
ANR	1099235	CallExpression	"autocomplete_ms_file ( core , completion , p )"		1098908	0					
ANR	1099236	Callee	autocomplete_ms_file		1098908	0					
ANR	1099237	Identifier	autocomplete_ms_file		1098908	0					
ANR	1099238	ArgumentList	core		1098908	1					
ANR	1099239	Argument	core		1098908	0					
ANR	1099240	Identifier	core		1098908	0					
ANR	1099241	Argument	completion		1098908	1					
ANR	1099242	Identifier	completion		1098908	0					
ANR	1099243	Argument	p		1098908	2					
ANR	1099244	Identifier	p		1098908	0					
ANR	1099245	BreakStatement	break ;	1665:2:48206:48211	1098908	31	True				
ANR	1099246	Label	case R_CORE_AUTOCMPLT_FILE :	1666:1:48214:48240	1098908	32	True				
ANR	1099247	Identifier	R_CORE_AUTOCMPLT_FILE		1098908	0					
ANR	1099248	ExpressionStatement	"autocomplete_file ( completion , p )"	1667:2:48244:48277	1098908	33	True				
ANR	1099249	CallExpression	"autocomplete_file ( completion , p )"		1098908	0					
ANR	1099250	Callee	autocomplete_file		1098908	0					
ANR	1099251	Identifier	autocomplete_file		1098908	0					
ANR	1099252	ArgumentList	completion		1098908	1					
ANR	1099253	Argument	completion		1098908	0					
ANR	1099254	Identifier	completion		1098908	0					
ANR	1099255	Argument	p		1098908	1					
ANR	1099256	Identifier	p		1098908	0					
ANR	1099257	BreakStatement	break ;	1668:2:48281:48286	1098908	34	True				
ANR	1099258	Label	case R_CORE_AUTOCMPLT_THME :	1669:1:48289:48315	1098908	35	True				
ANR	1099259	Identifier	R_CORE_AUTOCMPLT_THME		1098908	0					
ANR	1099260	ExpressionStatement	"autocomplete_theme ( core , completion , p )"	1670:2:48319:48359	1098908	36	True				
ANR	1099261	CallExpression	"autocomplete_theme ( core , completion , p )"		1098908	0					
ANR	1099262	Callee	autocomplete_theme		1098908	0					
ANR	1099263	Identifier	autocomplete_theme		1098908	0					
ANR	1099264	ArgumentList	core		1098908	1					
ANR	1099265	Argument	core		1098908	0					
ANR	1099266	Identifier	core		1098908	0					
ANR	1099267	Argument	completion		1098908	1					
ANR	1099268	Identifier	completion		1098908	0					
ANR	1099269	Argument	p		1098908	2					
ANR	1099270	Identifier	p		1098908	0					
ANR	1099271	BreakStatement	break ;	1671:2:48363:48368	1098908	37	True				
ANR	1099272	Label	case R_CORE_AUTOCMPLT_SDB :	1672:1:48371:48396	1098908	38	True				
ANR	1099273	Identifier	R_CORE_AUTOCMPLT_SDB		1098908	0					
ANR	1099274	ExpressionStatement	"autocomplete_sdb ( core , completion , p )"	1673:2:48400:48438	1098908	39	True				
ANR	1099275	CallExpression	"autocomplete_sdb ( core , completion , p )"		1098908	0					
ANR	1099276	Callee	autocomplete_sdb		1098908	0					
ANR	1099277	Identifier	autocomplete_sdb		1098908	0					
ANR	1099278	ArgumentList	core		1098908	1					
ANR	1099279	Argument	core		1098908	0					
ANR	1099280	Identifier	core		1098908	0					
ANR	1099281	Argument	completion		1098908	1					
ANR	1099282	Identifier	completion		1098908	0					
ANR	1099283	Argument	p		1098908	2					
ANR	1099284	Identifier	p		1098908	0					
ANR	1099285	BreakStatement	break ;	1674:2:48442:48447	1098908	40	True				
ANR	1099286	Label	case R_CORE_AUTOCMPLT_OPTN :	1675:1:48450:48476	1098908	41	True				
ANR	1099287	Identifier	R_CORE_AUTOCMPLT_OPTN		1098908	0					
ANR	1099288	BreakStatement	break ;	1677:2:48500:48505	1098908	42	True				
ANR	1099289	Label	default :	1678:1:48508:48515	1098908	43	True				
ANR	1099290	Identifier	default		1098908	0					
ANR	1099291	IfStatement	"if ( r_config_get_i ( core -> config , ""cfg.newtab"" ) )"		1098908	44					
ANR	1099292	Condition	"r_config_get_i ( core -> config , ""cfg.newtab"" )"	1679:6:48523:48565	1098908	0	True				
ANR	1099293	CallExpression	"r_config_get_i ( core -> config , ""cfg.newtab"" )"		1098908	0					
ANR	1099294	Callee	r_config_get_i		1098908	0					
ANR	1099295	Identifier	r_config_get_i		1098908	0					
ANR	1099296	ArgumentList	core -> config		1098908	1					
ANR	1099297	Argument	core -> config		1098908	0					
ANR	1099298	PtrMemberAccess	core -> config		1098908	0					
ANR	1099299	Identifier	core		1098908	0					
ANR	1099300	Identifier	config		1098908	1					
ANR	1099301	Argument	"""cfg.newtab"""		1098908	1					
ANR	1099302	PrimaryExpression	"""cfg.newtab"""		1098908	0					
ANR	1099303	CompoundStatement		80:3:2101:2150	1098908	1					
ANR	1099304	IdentifierDeclStatement	RCmdDescriptor * desc = & core -> root_cmd_descriptor ;	1680:3:48573:48622	1098908	0	True				
ANR	1099305	IdentifierDecl	* desc = & core -> root_cmd_descriptor		1098908	0					
ANR	1099306	IdentifierDeclType	RCmdDescriptor *		1098908	0					
ANR	1099307	Identifier	desc		1098908	1					
ANR	1099308	AssignmentExpression	* desc = & core -> root_cmd_descriptor		1098908	2		=			
ANR	1099309	Identifier	desc		1098908	0					
ANR	1099310	UnaryOperationExpression	& core -> root_cmd_descriptor		1098908	1					
ANR	1099311	UnaryOperator	&		1098908	0					
ANR	1099312	PtrMemberAccess	core -> root_cmd_descriptor		1098908	1					
ANR	1099313	Identifier	core		1098908	0					
ANR	1099314	Identifier	root_cmd_descriptor		1098908	1					
ANR	1099315	ForStatement	for ( i = 0 ; arg [ i ] && desc ; i ++ )		1098908	1					
ANR	1099316	ForInit	i = 0 ;	1681:8:48632:48637	1098908	0	True				
ANR	1099317	AssignmentExpression	i = 0		1098908	0		=			
ANR	1099318	Identifier	i		1098908	0					
ANR	1099319	PrimaryExpression	0		1098908	1					
ANR	1099320	Condition	arg [ i ] && desc	1681:15:48639:48652	1098908	1	True				
ANR	1099321	AndExpression	arg [ i ] && desc		1098908	0		&&			
ANR	1099322	ArrayIndexing	arg [ i ]		1098908	0					
ANR	1099323	Identifier	arg		1098908	0					
ANR	1099324	Identifier	i		1098908	1					
ANR	1099325	Identifier	desc		1098908	1					
ANR	1099326	PostIncDecOperationExpression	i ++	1681:31:48655:48657	1098908	2	True				
ANR	1099327	Identifier	i		1098908	0					
ANR	1099328	IncDec	++		1098908	1					
ANR	1099329	CompoundStatement		82:4:2194:2208	1098908	3					
ANR	1099330	IdentifierDeclStatement	ut8 c = arg [ i ] ;	1682:4:48666:48680	1098908	0	True				
ANR	1099331	IdentifierDecl	c = arg [ i ]		1098908	0					
ANR	1099332	IdentifierDeclType	ut8		1098908	0					
ANR	1099333	Identifier	c		1098908	1					
ANR	1099334	AssignmentExpression	c = arg [ i ]		1098908	2		=			
ANR	1099335	Identifier	c		1098908	0					
ANR	1099336	ArrayIndexing	arg [ i ]		1098908	1					
ANR	1099337	Identifier	arg		1098908	0					
ANR	1099338	Identifier	i		1098908	1					
ANR	1099339	ExpressionStatement	desc = c < R_ARRAY_SIZE ( desc -> sub ) ? desc -> sub [ c ] : NULL	1683:4:48686:48743	1098908	1	True				
ANR	1099340	AssignmentExpression	desc = c < R_ARRAY_SIZE ( desc -> sub ) ? desc -> sub [ c ] : NULL		1098908	0		=			
ANR	1099341	Identifier	desc		1098908	0					
ANR	1099342	ConditionalExpression	c < R_ARRAY_SIZE ( desc -> sub ) ? desc -> sub [ c ] : NULL		1098908	1					
ANR	1099343	Condition	c < R_ARRAY_SIZE ( desc -> sub )		1098908	0					
ANR	1099344	RelationalExpression	c < R_ARRAY_SIZE ( desc -> sub )		1098908	0		<			
ANR	1099345	Identifier	c		1098908	0					
ANR	1099346	CallExpression	R_ARRAY_SIZE ( desc -> sub )		1098908	1					
ANR	1099347	Callee	R_ARRAY_SIZE		1098908	0					
ANR	1099348	Identifier	R_ARRAY_SIZE		1098908	0					
ANR	1099349	ArgumentList	desc -> sub		1098908	1					
ANR	1099350	Argument	desc -> sub		1098908	0					
ANR	1099351	PtrMemberAccess	desc -> sub		1098908	0					
ANR	1099352	Identifier	desc		1098908	0					
ANR	1099353	Identifier	sub		1098908	1					
ANR	1099354	ArrayIndexing	desc -> sub [ c ]		1098908	1					
ANR	1099355	PtrMemberAccess	desc -> sub		1098908	0					
ANR	1099356	Identifier	desc		1098908	0					
ANR	1099357	Identifier	sub		1098908	1					
ANR	1099358	Identifier	c		1098908	1					
ANR	1099359	Identifier	NULL		1098908	2					
ANR	1099360	IfStatement	if ( desc && desc -> help_msg )		1098908	2					
ANR	1099361	Condition	desc && desc -> help_msg	1685:7:48757:48778	1098908	0	True				
ANR	1099362	AndExpression	desc && desc -> help_msg		1098908	0		&&			
ANR	1099363	Identifier	desc		1098908	0					
ANR	1099364	PtrMemberAccess	desc -> help_msg		1098908	1					
ANR	1099365	Identifier	desc		1098908	0					
ANR	1099366	Identifier	help_msg		1098908	1					
ANR	1099367	CompoundStatement		85:31:2309:2309	1098908	1					
ANR	1099368	ExpressionStatement	"r_core_cmd_help ( core , desc -> help_msg )"	1686:4:48787:48825	1098908	0	True				
ANR	1099369	CallExpression	"r_core_cmd_help ( core , desc -> help_msg )"		1098908	0					
ANR	1099370	Callee	r_core_cmd_help		1098908	0					
ANR	1099371	Identifier	r_core_cmd_help		1098908	0					
ANR	1099372	ArgumentList	core		1098908	1					
ANR	1099373	Argument	core		1098908	0					
ANR	1099374	Identifier	core		1098908	0					
ANR	1099375	Argument	desc -> help_msg		1098908	1					
ANR	1099376	PtrMemberAccess	desc -> help_msg		1098908	0					
ANR	1099377	Identifier	desc		1098908	0					
ANR	1099378	Identifier	help_msg		1098908	1					
ANR	1099379	ExpressionStatement	r_cons_flush ( )	1687:4:48831:48846	1098908	1	True				
ANR	1099380	CallExpression	r_cons_flush ( )		1098908	0					
ANR	1099381	Callee	r_cons_flush		1098908	0					
ANR	1099382	Identifier	r_cons_flush		1098908	0					
ANR	1099383	ArgumentList			1098908	1					
ANR	1099384	ReturnStatement	return true ;	1688:4:48852:48863	1098908	2	True				
ANR	1099385	Identifier	true		1098908	0					
ANR	1099386	IdentifierDeclStatement	int length = strlen ( arg ) ;	1692:2:48910:48935	1098908	45	True				
ANR	1099387	IdentifierDecl	length = strlen ( arg )		1098908	0					
ANR	1099388	IdentifierDeclType	int		1098908	0					
ANR	1099389	Identifier	length		1098908	1					
ANR	1099390	AssignmentExpression	length = strlen ( arg )		1098908	2		=			
ANR	1099391	Identifier	length		1098908	0					
ANR	1099392	CallExpression	strlen ( arg )		1098908	1					
ANR	1099393	Callee	strlen		1098908	0					
ANR	1099394	Identifier	strlen		1098908	0					
ANR	1099395	ArgumentList	arg		1098908	1					
ANR	1099396	Argument	arg		1098908	0					
ANR	1099397	Identifier	arg		1098908	0					
ANR	1099398	ForStatement	for ( i = 0 ; i < parent -> n_subcmds ; i ++ )		1098908	46					
ANR	1099399	ForInit	i = 0 ;	1693:7:48944:48949	1098908	0	True				
ANR	1099400	AssignmentExpression	i = 0		1098908	0		=			
ANR	1099401	Identifier	i		1098908	0					
ANR	1099402	PrimaryExpression	0		1098908	1					
ANR	1099403	Condition	i < parent -> n_subcmds	1693:14:48951:48971	1098908	1	True				
ANR	1099404	RelationalExpression	i < parent -> n_subcmds		1098908	0		<			
ANR	1099405	Identifier	i		1098908	0					
ANR	1099406	PtrMemberAccess	parent -> n_subcmds		1098908	1					
ANR	1099407	Identifier	parent		1098908	0					
ANR	1099408	Identifier	n_subcmds		1098908	1					
ANR	1099409	PostIncDecOperationExpression	i ++	1693:37:48974:48976	1098908	2	True				
ANR	1099410	Identifier	i		1098908	0					
ANR	1099411	IncDec	++		1098908	1					
ANR	1099412	CompoundStatement		93:42:2507:2507	1098908	3					
ANR	1099413	IfStatement	"if ( ! strncmp ( arg , parent -> subcmds [ i ] -> cmd , length ) )"		1098908	0					
ANR	1099414	Condition	"! strncmp ( arg , parent -> subcmds [ i ] -> cmd , length )"	1694:7:48988:49034	1098908	0	True				
ANR	1099415	UnaryOperationExpression	"! strncmp ( arg , parent -> subcmds [ i ] -> cmd , length )"		1098908	0					
ANR	1099416	UnaryOperator	!		1098908	0					
ANR	1099417	CallExpression	"strncmp ( arg , parent -> subcmds [ i ] -> cmd , length )"		1098908	1					
ANR	1099418	Callee	strncmp		1098908	0					
ANR	1099419	Identifier	strncmp		1098908	0					
ANR	1099420	ArgumentList	arg		1098908	1					
ANR	1099421	Argument	arg		1098908	0					
ANR	1099422	Identifier	arg		1098908	0					
ANR	1099423	Argument	parent -> subcmds [ i ] -> cmd		1098908	1					
ANR	1099424	PtrMemberAccess	parent -> subcmds [ i ] -> cmd		1098908	0					
ANR	1099425	ArrayIndexing	parent -> subcmds [ i ]		1098908	0					
ANR	1099426	PtrMemberAccess	parent -> subcmds		1098908	0					
ANR	1099427	Identifier	parent		1098908	0					
ANR	1099428	Identifier	subcmds		1098908	1					
ANR	1099429	Identifier	i		1098908	1					
ANR	1099430	Identifier	cmd		1098908	1					
ANR	1099431	Argument	length		1098908	2					
ANR	1099432	Identifier	length		1098908	0					
ANR	1099433	CompoundStatement		94:56:2565:2565	1098908	1					
ANR	1099434	ExpressionStatement	"r_line_completion_push ( completion , parent -> subcmds [ i ] -> cmd )"	1695:4:49043:49103	1098908	0	True				
ANR	1099435	CallExpression	"r_line_completion_push ( completion , parent -> subcmds [ i ] -> cmd )"		1098908	0					
ANR	1099436	Callee	r_line_completion_push		1098908	0					
ANR	1099437	Identifier	r_line_completion_push		1098908	0					
ANR	1099438	ArgumentList	completion		1098908	1					
ANR	1099439	Argument	completion		1098908	0					
ANR	1099440	Identifier	completion		1098908	0					
ANR	1099441	Argument	parent -> subcmds [ i ] -> cmd		1098908	1					
ANR	1099442	PtrMemberAccess	parent -> subcmds [ i ] -> cmd		1098908	0					
ANR	1099443	ArrayIndexing	parent -> subcmds [ i ]		1098908	0					
ANR	1099444	PtrMemberAccess	parent -> subcmds		1098908	0					
ANR	1099445	Identifier	parent		1098908	0					
ANR	1099446	Identifier	subcmds		1098908	1					
ANR	1099447	Identifier	i		1098908	1					
ANR	1099448	Identifier	cmd		1098908	1					
ANR	1099449	BreakStatement	break ;	1698:2:49116:49121	1098908	47	True				
ANR	1099450	ReturnStatement	return true ;	1700:1:49127:49138	1098908	10	True				
ANR	1099451	Identifier	true		1098908	0					
ANR	1099452	ReturnType	static bool		1098908	1					
ANR	1099453	Identifier	find_autocomplete		1098908	2					
ANR	1099454	ParameterList	"RCore * core , RLineCompletion * completion , RLineBuffer * buf"		1098908	3					
ANR	1099455	Parameter	RCore * core	1601:30:46411:46421	1098908	0	True				
ANR	1099456	ParameterType	RCore *		1098908	0					
ANR	1099457	Identifier	core		1098908	1					
ANR	1099458	Parameter	RLineCompletion * completion	1601:43:46424:46450	1098908	1	True				
ANR	1099459	ParameterType	RLineCompletion *		1098908	0					
ANR	1099460	Identifier	completion		1098908	1					
ANR	1099461	Parameter	RLineBuffer * buf	1601:72:46453:46468	1098908	2	True				
ANR	1099462	ParameterType	RLineBuffer *		1098908	0					
ANR	1099463	Identifier	buf		1098908	1					
ANR	1099464	CFGEntryNode	ENTRY		1098908		True				
ANR	1099465	CFGExitNode	EXIT		1098908		True				
ANR	1099466	Symbol	parent		1098908						
ANR	1099467	Symbol	* parent		1098908						
ANR	1099468	Symbol	parent -> subcmds [ i ] -> cmd		1098908						
ANR	1099469	Symbol	desc -> help_msg		1098908						
ANR	1099470	Symbol	strlen		1098908						
ANR	1099471	Symbol	strncmp		1098908						
ANR	1099472	Symbol	core -> autocomplete		1098908						
ANR	1099473	Symbol	R_CORE_AUTOCMPLT_OPTN		1098908						
ANR	1099474	Symbol	r_str_trim_wp		1098908						
ANR	1099475	Symbol	* child -> length		1098908						
ANR	1099476	Symbol	* buf		1098908						
ANR	1099477	Symbol	* child		1098908						
ANR	1099478	Symbol	* * i		1098908						
ANR	1099479	Symbol	NULL		1098908						
ANR	1099480	Symbol	* desc -> sub		1098908						
ANR	1099481	Symbol	parent -> type		1098908						
ANR	1099482	Symbol	* * desc		1098908						
ANR	1099483	Symbol	* parent -> subcmds		1098908						
ANR	1099484	Symbol	core		1098908						
ANR	1099485	Symbol	buf -> data		1098908						
ANR	1099486	Symbol	r_config_get_i		1098908						
ANR	1099487	Symbol	r_str_trim_ro		1098908						
ANR	1099488	Symbol	true		1098908						
ANR	1099489	Symbol	child -> length		1098908						
ANR	1099490	Symbol	child		1098908						
ANR	1099491	Symbol	* arg		1098908						
ANR	1099492	Symbol	desc		1098908						
ANR	1099493	Symbol	buf -> length		1098908						
ANR	1099494	Symbol	* core		1098908						
ANR	1099495	Symbol	r_core_autocomplete_find		1098908						
ANR	1099496	Symbol	* * child		1098908						
ANR	1099497	Symbol	arg		1098908						
ANR	1099498	Symbol	* desc		1098908						
ANR	1099499	Symbol	core -> config		1098908						
ANR	1099500	Symbol	completion		1098908						
ANR	1099501	Symbol	c		1098908						
ANR	1099502	Symbol	e		1098908						
ANR	1099503	Symbol	& core -> root_cmd_descriptor		1098908						
ANR	1099504	Symbol	false		1098908						
ANR	1099505	Symbol	length		1098908						
ANR	1099506	Symbol	* * parent		1098908						
ANR	1099507	Symbol	i		1098908						
ANR	1099508	Symbol	desc -> sub		1098908						
ANR	1099509	Symbol	* c		1098908						
ANR	1099510	Symbol	* * parent -> subcmds		1098908						
ANR	1099511	Symbol	* e		1098908						
ANR	1099512	Symbol	p		1098908						
ANR	1099513	Symbol	buf		1098908						
ANR	1099514	Symbol	* i		1098908						
ANR	1099515	Symbol	* * * parent		1098908						
ANR	1099516	Symbol	parent -> subcmds		1098908						
ANR	1099517	Symbol	R_ARRAY_SIZE		1098908						
ANR	1099518	Symbol	* p		1098908						
ANR	1099519	Symbol	child -> type		1098908						
ANR	1099520	Symbol	parent -> n_subcmds		1098908						
ANR	1099521	Function	r_core_autocomplete	1703:0:49143:56153							
ANR	1099522	FunctionDef	"r_core_autocomplete (R_NULLABLE RCore * core , RLineCompletion * completion , RLineBuffer * buf , RLinePromptType prompt_type)"		1099521	0					
ANR	1099523	CompoundStatement		1703:131:49274:56153	1099521	0					
ANR	1099524	IfStatement	if ( ! core )		1099521	0					
ANR	1099525	Condition	! core	1704:5:49281:49285	1099521	0	True				
ANR	1099526	UnaryOperationExpression	! core		1099521	0					
ANR	1099527	UnaryOperator	!		1099521	0					
ANR	1099528	Identifier	core		1099521	1					
ANR	1099529	CompoundStatement		2:12:13:13	1099521	1					
ANR	1099530	ExpressionStatement	"autocomplete_default ( core , completion , buf )"	1705:2:49292:49336	1099521	0	True				
ANR	1099531	CallExpression	"autocomplete_default ( core , completion , buf )"		1099521	0					
ANR	1099532	Callee	autocomplete_default		1099521	0					
ANR	1099533	Identifier	autocomplete_default		1099521	0					
ANR	1099534	ArgumentList	core		1099521	1					
ANR	1099535	Argument	core		1099521	0					
ANR	1099536	Identifier	core		1099521	0					
ANR	1099537	Argument	completion		1099521	1					
ANR	1099538	Identifier	completion		1099521	0					
ANR	1099539	Argument	buf		1099521	2					
ANR	1099540	Identifier	buf		1099521	0					
ANR	1099541	ReturnStatement	return ;	1706:2:49340:49346	1099521	1	True				
ANR	1099542	ExpressionStatement	r_line_completion_clear ( completion )	1708:1:49352:49388	1099521	1	True				
ANR	1099543	CallExpression	r_line_completion_clear ( completion )		1099521	0					
ANR	1099544	Callee	r_line_completion_clear		1099521	0					
ANR	1099545	Identifier	r_line_completion_clear		1099521	0					
ANR	1099546	ArgumentList	completion		1099521	1					
ANR	1099547	Argument	completion		1099521	0					
ANR	1099548	Identifier	completion		1099521	0					
ANR	1099549	IdentifierDeclStatement	"char * pipe = strchr ( buf -> data , '>' ) ;"	1709:1:49391:49427	1099521	2	True				
ANR	1099550	IdentifierDecl	"* pipe = strchr ( buf -> data , '>' )"		1099521	0					
ANR	1099551	IdentifierDeclType	char *		1099521	0					
ANR	1099552	Identifier	pipe		1099521	1					
ANR	1099553	AssignmentExpression	"* pipe = strchr ( buf -> data , '>' )"		1099521	2		=			
ANR	1099554	Identifier	pipe		1099521	0					
ANR	1099555	CallExpression	"strchr ( buf -> data , '>' )"		1099521	1					
ANR	1099556	Callee	strchr		1099521	0					
ANR	1099557	Identifier	strchr		1099521	0					
ANR	1099558	ArgumentList	buf -> data		1099521	1					
ANR	1099559	Argument	buf -> data		1099521	0					
ANR	1099560	PtrMemberAccess	buf -> data		1099521	0					
ANR	1099561	Identifier	buf		1099521	0					
ANR	1099562	Identifier	data		1099521	1					
ANR	1099563	Argument	'>'		1099521	1					
ANR	1099564	PrimaryExpression	'>'		1099521	0					
ANR	1099565	IdentifierDeclStatement	"char * ptr = strchr ( buf -> data , '@' ) ;"	1710:1:49430:49465	1099521	3	True				
ANR	1099566	IdentifierDecl	"* ptr = strchr ( buf -> data , '@' )"		1099521	0					
ANR	1099567	IdentifierDeclType	char *		1099521	0					
ANR	1099568	Identifier	ptr		1099521	1					
ANR	1099569	AssignmentExpression	"* ptr = strchr ( buf -> data , '@' )"		1099521	2		=			
ANR	1099570	Identifier	ptr		1099521	0					
ANR	1099571	CallExpression	"strchr ( buf -> data , '@' )"		1099521	1					
ANR	1099572	Callee	strchr		1099521	0					
ANR	1099573	Identifier	strchr		1099521	0					
ANR	1099574	ArgumentList	buf -> data		1099521	1					
ANR	1099575	Argument	buf -> data		1099521	0					
ANR	1099576	PtrMemberAccess	buf -> data		1099521	0					
ANR	1099577	Identifier	buf		1099521	0					
ANR	1099578	Identifier	data		1099521	1					
ANR	1099579	Argument	'@'		1099521	1					
ANR	1099580	PrimaryExpression	'@'		1099521	0					
ANR	1099581	IfStatement	"if ( pipe && strchr ( pipe + 1 , ' ' ) && buf -> data + buf -> index >= pipe )"		1099521	4					
ANR	1099582	Condition	"pipe && strchr ( pipe + 1 , ' ' ) && buf -> data + buf -> index >= pipe"	1711:5:49472:49535	1099521	0	True				
ANR	1099583	AndExpression	"pipe && strchr ( pipe + 1 , ' ' ) && buf -> data + buf -> index >= pipe"		1099521	0		&&			
ANR	1099584	Identifier	pipe		1099521	0					
ANR	1099585	AndExpression	"strchr ( pipe + 1 , ' ' ) && buf -> data + buf -> index >= pipe"		1099521	1		&&			
ANR	1099586	CallExpression	"strchr ( pipe + 1 , ' ' )"		1099521	0					
ANR	1099587	Callee	strchr		1099521	0					
ANR	1099588	Identifier	strchr		1099521	0					
ANR	1099589	ArgumentList	pipe + 1		1099521	1					
ANR	1099590	Argument	pipe + 1		1099521	0					
ANR	1099591	AdditiveExpression	pipe + 1		1099521	0		+			
ANR	1099592	Identifier	pipe		1099521	0					
ANR	1099593	PrimaryExpression	1		1099521	1					
ANR	1099594	Argument	' '		1099521	1					
ANR	1099595	PrimaryExpression	' '		1099521	0					
ANR	1099596	RelationalExpression	buf -> data + buf -> index >= pipe		1099521	1		>=			
ANR	1099597	AdditiveExpression	buf -> data + buf -> index		1099521	0		+			
ANR	1099598	PtrMemberAccess	buf -> data		1099521	0					
ANR	1099599	Identifier	buf		1099521	0					
ANR	1099600	Identifier	data		1099521	1					
ANR	1099601	PtrMemberAccess	buf -> index		1099521	1					
ANR	1099602	Identifier	buf		1099521	0					
ANR	1099603	Identifier	index		1099521	1					
ANR	1099604	Identifier	pipe		1099521	1					
ANR	1099605	CompoundStatement		9:71:263:263	1099521	1					
ANR	1099606	ExpressionStatement	"autocompleteFilename ( completion , buf , NULL , 1 )"	1712:2:49542:49589	1099521	0	True				
ANR	1099607	CallExpression	"autocompleteFilename ( completion , buf , NULL , 1 )"		1099521	0					
ANR	1099608	Callee	autocompleteFilename		1099521	0					
ANR	1099609	Identifier	autocompleteFilename		1099521	0					
ANR	1099610	ArgumentList	completion		1099521	1					
ANR	1099611	Argument	completion		1099521	0					
ANR	1099612	Identifier	completion		1099521	0					
ANR	1099613	Argument	buf		1099521	1					
ANR	1099614	Identifier	buf		1099521	0					
ANR	1099615	Argument	NULL		1099521	2					
ANR	1099616	Identifier	NULL		1099521	0					
ANR	1099617	Argument	1		1099521	3					
ANR	1099618	PrimaryExpression	1		1099521	0					
ANR	1099619	ElseStatement	else		1099521	0					
ANR	1099620	IfStatement	"if ( ptr && strchr ( ptr + 1 , ' ' ) && buf -> data + buf -> index >= ptr )"		1099521	0					
ANR	1099621	Condition	"ptr && strchr ( ptr + 1 , ' ' ) && buf -> data + buf -> index >= ptr"	1713:12:49603:49663	1099521	0	True				
ANR	1099622	AndExpression	"ptr && strchr ( ptr + 1 , ' ' ) && buf -> data + buf -> index >= ptr"		1099521	0		&&			
ANR	1099623	Identifier	ptr		1099521	0					
ANR	1099624	AndExpression	"strchr ( ptr + 1 , ' ' ) && buf -> data + buf -> index >= ptr"		1099521	1		&&			
ANR	1099625	CallExpression	"strchr ( ptr + 1 , ' ' )"		1099521	0					
ANR	1099626	Callee	strchr		1099521	0					
ANR	1099627	Identifier	strchr		1099521	0					
ANR	1099628	ArgumentList	ptr + 1		1099521	1					
ANR	1099629	Argument	ptr + 1		1099521	0					
ANR	1099630	AdditiveExpression	ptr + 1		1099521	0		+			
ANR	1099631	Identifier	ptr		1099521	0					
ANR	1099632	PrimaryExpression	1		1099521	1					
ANR	1099633	Argument	' '		1099521	1					
ANR	1099634	PrimaryExpression	' '		1099521	0					
ANR	1099635	RelationalExpression	buf -> data + buf -> index >= ptr		1099521	1		>=			
ANR	1099636	AdditiveExpression	buf -> data + buf -> index		1099521	0		+			
ANR	1099637	PtrMemberAccess	buf -> data		1099521	0					
ANR	1099638	Identifier	buf		1099521	0					
ANR	1099639	Identifier	data		1099521	1					
ANR	1099640	PtrMemberAccess	buf -> index		1099521	1					
ANR	1099641	Identifier	buf		1099521	0					
ANR	1099642	Identifier	index		1099521	1					
ANR	1099643	Identifier	ptr		1099521	1					
ANR	1099644	CompoundStatement		12:2:395:408	1099521	1					
ANR	1099645	IdentifierDeclStatement	"int sdelta , n ;"	1714:2:49670:49683	1099521	0	True				
ANR	1099646	IdentifierDecl	sdelta		1099521	0					
ANR	1099647	IdentifierDeclType	int		1099521	0					
ANR	1099648	Identifier	sdelta		1099521	1					
ANR	1099649	IdentifierDecl	n		1099521	1					
ANR	1099650	IdentifierDeclType	int		1099521	0					
ANR	1099651	Identifier	n		1099521	1					
ANR	1099652	ExpressionStatement	ptr = ( char * ) r_str_trim_ro ( ptr + 1 )	1715:2:49687:49724	1099521	1	True				
ANR	1099653	AssignmentExpression	ptr = ( char * ) r_str_trim_ro ( ptr + 1 )		1099521	0		=			
ANR	1099654	Identifier	ptr		1099521	0					
ANR	1099655	CastExpression	( char * ) r_str_trim_ro ( ptr + 1 )		1099521	1					
ANR	1099656	CastTarget	char *		1099521	0					
ANR	1099657	CallExpression	r_str_trim_ro ( ptr + 1 )		1099521	1					
ANR	1099658	Callee	r_str_trim_ro		1099521	0					
ANR	1099659	Identifier	r_str_trim_ro		1099521	0					
ANR	1099660	ArgumentList	ptr + 1		1099521	1					
ANR	1099661	Argument	ptr + 1		1099521	0					
ANR	1099662	AdditiveExpression	ptr + 1		1099521	0		+			
ANR	1099663	Identifier	ptr		1099521	0					
ANR	1099664	PrimaryExpression	1		1099521	1					
ANR	1099665	ExpressionStatement	n = strlen ( ptr )	1716:2:49728:49744	1099521	2	True				
ANR	1099666	AssignmentExpression	n = strlen ( ptr )		1099521	0		=			
ANR	1099667	Identifier	n		1099521	0					
ANR	1099668	CallExpression	strlen ( ptr )		1099521	1					
ANR	1099669	Callee	strlen		1099521	0					
ANR	1099670	Identifier	strlen		1099521	0					
ANR	1099671	ArgumentList	ptr		1099521	1					
ANR	1099672	Argument	ptr		1099521	0					
ANR	1099673	Identifier	ptr		1099521	0					
ANR	1099674	ExpressionStatement	sdelta = ( int ) ( size_t ) ( ptr - buf -> data )	1717:2:49769:49808	1099521	3	True				
ANR	1099675	AssignmentExpression	sdelta = ( int ) ( size_t ) ( ptr - buf -> data )		1099521	0		=			
ANR	1099676	Identifier	sdelta		1099521	0					
ANR	1099677	CastExpression	( int ) ( size_t ) ( ptr - buf -> data )		1099521	1					
ANR	1099678	CastTarget	int		1099521	0					
ANR	1099679	CastExpression	( size_t ) ( ptr - buf -> data )		1099521	1					
ANR	1099680	CastTarget	size_t		1099521	0					
ANR	1099681	AdditiveExpression	ptr - buf -> data		1099521	1		-			
ANR	1099682	Identifier	ptr		1099521	0					
ANR	1099683	PtrMemberAccess	buf -> data		1099521	1					
ANR	1099684	Identifier	buf		1099521	0					
ANR	1099685	Identifier	data		1099521	1					
ANR	1099686	ExpressionStatement	"r_flag_foreach_prefix ( core -> flags , buf -> data + sdelta , n , add_argv , completion )"	1718:2:49812:49892	1099521	4	True				
ANR	1099687	CallExpression	"r_flag_foreach_prefix ( core -> flags , buf -> data + sdelta , n , add_argv , completion )"		1099521	0					
ANR	1099688	Callee	r_flag_foreach_prefix		1099521	0					
ANR	1099689	Identifier	r_flag_foreach_prefix		1099521	0					
ANR	1099690	ArgumentList	core -> flags		1099521	1					
ANR	1099691	Argument	core -> flags		1099521	0					
ANR	1099692	PtrMemberAccess	core -> flags		1099521	0					
ANR	1099693	Identifier	core		1099521	0					
ANR	1099694	Identifier	flags		1099521	1					
ANR	1099695	Argument	buf -> data + sdelta		1099521	1					
ANR	1099696	AdditiveExpression	buf -> data + sdelta		1099521	0		+			
ANR	1099697	PtrMemberAccess	buf -> data		1099521	0					
ANR	1099698	Identifier	buf		1099521	0					
ANR	1099699	Identifier	data		1099521	1					
ANR	1099700	Identifier	sdelta		1099521	1					
ANR	1099701	Argument	n		1099521	2					
ANR	1099702	Identifier	n		1099521	0					
ANR	1099703	Argument	add_argv		1099521	3					
ANR	1099704	Identifier	add_argv		1099521	0					
ANR	1099705	Argument	completion		1099521	4					
ANR	1099706	Identifier	completion		1099521	0					
ANR	1099707	ElseStatement	else		1099521	0					
ANR	1099708	IfStatement	"if ( ! strncmp ( buf -> data , ""#!pipe "" , 7 ) )"		1099521	0					
ANR	1099709	Condition	"! strncmp ( buf -> data , ""#!pipe "" , 7 )"	1719:12:49906:49939	1099521	0	True				
ANR	1099710	UnaryOperationExpression	"! strncmp ( buf -> data , ""#!pipe "" , 7 )"		1099521	0					
ANR	1099711	UnaryOperator	!		1099521	0					
ANR	1099712	CallExpression	"strncmp ( buf -> data , ""#!pipe "" , 7 )"		1099521	1					
ANR	1099713	Callee	strncmp		1099521	0					
ANR	1099714	Identifier	strncmp		1099521	0					
ANR	1099715	ArgumentList	buf -> data		1099521	1					
ANR	1099716	Argument	buf -> data		1099521	0					
ANR	1099717	PtrMemberAccess	buf -> data		1099521	0					
ANR	1099718	Identifier	buf		1099521	0					
ANR	1099719	Identifier	data		1099521	1					
ANR	1099720	Argument	"""#!pipe """		1099521	1					
ANR	1099721	PrimaryExpression	"""#!pipe """		1099521	0					
ANR	1099722	Argument	7		1099521	2					
ANR	1099723	PrimaryExpression	7		1099521	0					
ANR	1099724	CompoundStatement		17:48:667:667	1099521	1					
ANR	1099725	IfStatement	"if ( strchr ( buf -> data + 7 , ' ' ) )"		1099521	0					
ANR	1099726	Condition	"strchr ( buf -> data + 7 , ' ' )"	1720:6:49950:49976	1099521	0	True				
ANR	1099727	CallExpression	"strchr ( buf -> data + 7 , ' ' )"		1099521	0					
ANR	1099728	Callee	strchr		1099521	0					
ANR	1099729	Identifier	strchr		1099521	0					
ANR	1099730	ArgumentList	buf -> data + 7		1099521	1					
ANR	1099731	Argument	buf -> data + 7		1099521	0					
ANR	1099732	AdditiveExpression	buf -> data + 7		1099521	0		+			
ANR	1099733	PtrMemberAccess	buf -> data		1099521	0					
ANR	1099734	Identifier	buf		1099521	0					
ANR	1099735	Identifier	data		1099521	1					
ANR	1099736	PrimaryExpression	7		1099521	1					
ANR	1099737	Argument	' '		1099521	1					
ANR	1099738	PrimaryExpression	' '		1099521	0					
ANR	1099739	CompoundStatement		18:35:704:704	1099521	1					
ANR	1099740	ExpressionStatement	"autocompleteFilename ( completion , buf , NULL , 2 )"	1721:3:49984:50031	1099521	0	True				
ANR	1099741	CallExpression	"autocompleteFilename ( completion , buf , NULL , 2 )"		1099521	0					
ANR	1099742	Callee	autocompleteFilename		1099521	0					
ANR	1099743	Identifier	autocompleteFilename		1099521	0					
ANR	1099744	ArgumentList	completion		1099521	1					
ANR	1099745	Argument	completion		1099521	0					
ANR	1099746	Identifier	completion		1099521	0					
ANR	1099747	Argument	buf		1099521	1					
ANR	1099748	Identifier	buf		1099521	0					
ANR	1099749	Argument	NULL		1099521	2					
ANR	1099750	Identifier	NULL		1099521	0					
ANR	1099751	Argument	2		1099521	3					
ANR	1099752	PrimaryExpression	2		1099521	0					
ANR	1099753	ElseStatement	else		1099521	0					
ANR	1099754	CompoundStatement		21:3:772:783	1099521	0					
ANR	1099755	IdentifierDeclStatement	int chr = 7 ;	1723:3:50047:50058	1099521	0	True				
ANR	1099756	IdentifierDecl	chr = 7		1099521	0					
ANR	1099757	IdentifierDeclType	int		1099521	0					
ANR	1099758	Identifier	chr		1099521	1					
ANR	1099759	AssignmentExpression	chr = 7		1099521	2		=			
ANR	1099760	Identifier	chr		1099521	0					
ANR	1099761	PrimaryExpression	7		1099521	1					
ANR	1099762	ExpressionStatement	"ADDARG ( ""node"" )"	1724:3:50063:50078	1099521	1	True				
ANR	1099763	CallExpression	"ADDARG ( ""node"" )"		1099521	0					
ANR	1099764	Callee	ADDARG		1099521	0					
ANR	1099765	Identifier	ADDARG		1099521	0					
ANR	1099766	ArgumentList	"""node"""		1099521	1					
ANR	1099767	Argument	"""node"""		1099521	0					
ANR	1099768	PrimaryExpression	"""node"""		1099521	0					
ANR	1099769	ExpressionStatement	"ADDARG ( ""vala"" )"	1725:3:50083:50098	1099521	2	True				
ANR	1099770	CallExpression	"ADDARG ( ""vala"" )"		1099521	0					
ANR	1099771	Callee	ADDARG		1099521	0					
ANR	1099772	Identifier	ADDARG		1099521	0					
ANR	1099773	ArgumentList	"""vala"""		1099521	1					
ANR	1099774	Argument	"""vala"""		1099521	0					
ANR	1099775	PrimaryExpression	"""vala"""		1099521	0					
ANR	1099776	ExpressionStatement	"ADDARG ( ""ruby"" )"	1726:3:50103:50118	1099521	3	True				
ANR	1099777	CallExpression	"ADDARG ( ""ruby"" )"		1099521	0					
ANR	1099778	Callee	ADDARG		1099521	0					
ANR	1099779	Identifier	ADDARG		1099521	0					
ANR	1099780	ArgumentList	"""ruby"""		1099521	1					
ANR	1099781	Argument	"""ruby"""		1099521	0					
ANR	1099782	PrimaryExpression	"""ruby"""		1099521	0					
ANR	1099783	ExpressionStatement	"ADDARG ( ""newlisp"" )"	1727:3:50123:50141	1099521	4	True				
ANR	1099784	CallExpression	"ADDARG ( ""newlisp"" )"		1099521	0					
ANR	1099785	Callee	ADDARG		1099521	0					
ANR	1099786	Identifier	ADDARG		1099521	0					
ANR	1099787	ArgumentList	"""newlisp"""		1099521	1					
ANR	1099788	Argument	"""newlisp"""		1099521	0					
ANR	1099789	PrimaryExpression	"""newlisp"""		1099521	0					
ANR	1099790	ExpressionStatement	"ADDARG ( ""perl"" )"	1728:3:50146:50161	1099521	5	True				
ANR	1099791	CallExpression	"ADDARG ( ""perl"" )"		1099521	0					
ANR	1099792	Callee	ADDARG		1099521	0					
ANR	1099793	Identifier	ADDARG		1099521	0					
ANR	1099794	ArgumentList	"""perl"""		1099521	1					
ANR	1099795	Argument	"""perl"""		1099521	0					
ANR	1099796	PrimaryExpression	"""perl"""		1099521	0					
ANR	1099797	ExpressionStatement	"ADDARG ( ""python"" )"	1729:3:50166:50183	1099521	6	True				
ANR	1099798	CallExpression	"ADDARG ( ""python"" )"		1099521	0					
ANR	1099799	Callee	ADDARG		1099521	0					
ANR	1099800	Identifier	ADDARG		1099521	0					
ANR	1099801	ArgumentList	"""python"""		1099521	1					
ANR	1099802	Argument	"""python"""		1099521	0					
ANR	1099803	PrimaryExpression	"""python"""		1099521	0					
ANR	1099804	ElseStatement	else		1099521	0					
ANR	1099805	IfStatement	"if ( ! strncmp ( buf -> data , ""ec "" , 3 ) )"		1099521	0					
ANR	1099806	Condition	"! strncmp ( buf -> data , ""ec "" , 3 )"	1731:12:50201:50230	1099521	0	True				
ANR	1099807	UnaryOperationExpression	"! strncmp ( buf -> data , ""ec "" , 3 )"		1099521	0					
ANR	1099808	UnaryOperator	!		1099521	0					
ANR	1099809	CallExpression	"strncmp ( buf -> data , ""ec "" , 3 )"		1099521	1					
ANR	1099810	Callee	strncmp		1099521	0					
ANR	1099811	Identifier	strncmp		1099521	0					
ANR	1099812	ArgumentList	buf -> data		1099521	1					
ANR	1099813	Argument	buf -> data		1099521	0					
ANR	1099814	PtrMemberAccess	buf -> data		1099521	0					
ANR	1099815	Identifier	buf		1099521	0					
ANR	1099816	Identifier	data		1099521	1					
ANR	1099817	Argument	"""ec """		1099521	1					
ANR	1099818	PrimaryExpression	"""ec """		1099521	0					
ANR	1099819	Argument	3		1099521	2					
ANR	1099820	PrimaryExpression	3		1099521	0					
ANR	1099821	CompoundStatement		29:44:958:958	1099521	1					
ANR	1099822	IfStatement	"if ( strchr ( buf -> data + 3 , ' ' ) )"		1099521	0					
ANR	1099823	Condition	"strchr ( buf -> data + 3 , ' ' )"	1732:6:50241:50267	1099521	0	True				
ANR	1099824	CallExpression	"strchr ( buf -> data + 3 , ' ' )"		1099521	0					
ANR	1099825	Callee	strchr		1099521	0					
ANR	1099826	Identifier	strchr		1099521	0					
ANR	1099827	ArgumentList	buf -> data + 3		1099521	1					
ANR	1099828	Argument	buf -> data + 3		1099521	0					
ANR	1099829	AdditiveExpression	buf -> data + 3		1099521	0		+			
ANR	1099830	PtrMemberAccess	buf -> data		1099521	0					
ANR	1099831	Identifier	buf		1099521	0					
ANR	1099832	Identifier	data		1099521	1					
ANR	1099833	PrimaryExpression	3		1099521	1					
ANR	1099834	Argument	' '		1099521	1					
ANR	1099835	PrimaryExpression	' '		1099521	0					
ANR	1099836	CompoundStatement		30:35:995:995	1099521	1					
ANR	1099837	ExpressionStatement	"autocompleteFilename ( completion , buf , NULL , 2 )"	1733:3:50275:50322	1099521	0	True				
ANR	1099838	CallExpression	"autocompleteFilename ( completion , buf , NULL , 2 )"		1099521	0					
ANR	1099839	Callee	autocompleteFilename		1099521	0					
ANR	1099840	Identifier	autocompleteFilename		1099521	0					
ANR	1099841	ArgumentList	completion		1099521	1					
ANR	1099842	Argument	completion		1099521	0					
ANR	1099843	Identifier	completion		1099521	0					
ANR	1099844	Argument	buf		1099521	1					
ANR	1099845	Identifier	buf		1099521	0					
ANR	1099846	Argument	NULL		1099521	2					
ANR	1099847	Identifier	NULL		1099521	0					
ANR	1099848	Argument	2		1099521	3					
ANR	1099849	PrimaryExpression	2		1099521	0					
ANR	1099850	ElseStatement	else		1099521	0					
ANR	1099851	CompoundStatement		33:3:1063:1074	1099521	0					
ANR	1099852	IdentifierDeclStatement	int chr = 3 ;	1735:3:50338:50349	1099521	0	True				
ANR	1099853	IdentifierDecl	chr = 3		1099521	0					
ANR	1099854	IdentifierDeclType	int		1099521	0					
ANR	1099855	Identifier	chr		1099521	1					
ANR	1099856	AssignmentExpression	chr = 3		1099521	2		=			
ANR	1099857	Identifier	chr		1099521	0					
ANR	1099858	PrimaryExpression	3		1099521	1					
ANR	1099859	Statement	ADDARG	1736:3:50354:50359	1099521	1	True				
ANR	1099860	Statement	(	1736:9:50360:50360	1099521	2	True				
ANR	1099861	Statement	"""comment"""	1736:10:50361:50369	1099521	3	True				
ANR	1099862	Statement	)	1736:19:50370:50370	1099521	4	True				
ANR	1099863	Statement	ADDARG	1737:3:50375:50380	1099521	5	True				
ANR	1099864	Statement	(	1737:9:50381:50381	1099521	6	True				
ANR	1099865	Statement	"""usrcmt"""	1737:10:50382:50389	1099521	7	True				
ANR	1099866	Statement	)	1737:18:50390:50390	1099521	8	True				
ANR	1099867	Statement	ADDARG	1738:3:50395:50400	1099521	9	True				
ANR	1099868	Statement	(	1738:9:50401:50401	1099521	10	True				
ANR	1099869	Statement	"""args"""	1738:10:50402:50407	1099521	11	True				
ANR	1099870	Statement	)	1738:16:50408:50408	1099521	12	True				
ANR	1099871	Statement	ADDARG	1739:3:50413:50418	1099521	13	True				
ANR	1099872	Statement	(	1739:9:50419:50419	1099521	14	True				
ANR	1099873	Statement	"""fname"""	1739:10:50420:50426	1099521	15	True				
ANR	1099874	Statement	)	1739:17:50427:50427	1099521	16	True				
ANR	1099875	Statement	ADDARG	1740:3:50432:50437	1099521	17	True				
ANR	1099876	Statement	(	1740:9:50438:50438	1099521	18	True				
ANR	1099877	Statement	"""floc"""	1740:10:50439:50444	1099521	19	True				
ANR	1099878	Statement	)	1740:16:50445:50445	1099521	20	True				
ANR	1099879	Statement	ADDARG	1741:3:50450:50455	1099521	21	True				
ANR	1099880	Statement	(	1741:9:50456:50456	1099521	22	True				
ANR	1099881	Statement	"""fline"""	1741:10:50457:50463	1099521	23	True				
ANR	1099882	Statement	)	1741:17:50464:50464	1099521	24	True				
ANR	1099883	Statement	ADDARG	1742:3:50469:50474	1099521	25	True				
ANR	1099884	Statement	(	1742:9:50475:50475	1099521	26	True				
ANR	1099885	Statement	"""flag"""	1742:10:50476:50481	1099521	27	True				
ANR	1099886	Statement	)	1742:16:50482:50482	1099521	28	True				
ANR	1099887	Statement	ADDARG	1743:3:50487:50492	1099521	29	True				
ANR	1099888	Statement	(	1743:9:50493:50493	1099521	30	True				
ANR	1099889	Statement	"""label"""	1743:10:50494:50500	1099521	31	True				
ANR	1099890	Statement	)	1743:17:50501:50501	1099521	32	True				
ANR	1099891	Statement	ADDARG	1744:3:50506:50511	1099521	33	True				
ANR	1099892	Statement	(	1744:9:50512:50512	1099521	34	True				
ANR	1099893	Statement	"""help"""	1744:10:50513:50518	1099521	35	True				
ANR	1099894	Statement	)	1744:16:50519:50519	1099521	36	True				
ANR	1099895	Statement	ADDARG	1745:3:50524:50529	1099521	37	True				
ANR	1099896	Statement	(	1745:9:50530:50530	1099521	38	True				
ANR	1099897	Statement	"""flow"""	1745:10:50531:50536	1099521	39	True				
ANR	1099898	Statement	)	1745:16:50537:50537	1099521	40	True				
ANR	1099899	Statement	ADDARG	1746:3:50542:50547	1099521	41	True				
ANR	1099900	Statement	(	1746:9:50548:50548	1099521	42	True				
ANR	1099901	Statement	"""prompt"""	1746:10:50549:50556	1099521	43	True				
ANR	1099902	Statement	)	1746:18:50557:50557	1099521	44	True				
ANR	1099903	Statement	ADDARG	1747:3:50562:50567	1099521	45	True				
ANR	1099904	Statement	(	1747:9:50568:50568	1099521	46	True				
ANR	1099905	Statement	"""offset"""	1747:10:50569:50576	1099521	47	True				
ANR	1099906	Statement	)	1747:18:50577:50577	1099521	48	True				
ANR	1099907	Statement	ADDARG	1748:3:50582:50587	1099521	49	True				
ANR	1099908	Statement	(	1748:9:50588:50588	1099521	50	True				
ANR	1099909	Statement	"""input"""	1748:10:50589:50595	1099521	51	True				
ANR	1099910	Statement	)	1748:17:50596:50596	1099521	52	True				
ANR	1099911	Statement	ADDARG	1749:3:50601:50606	1099521	53	True				
ANR	1099912	Statement	(	1749:9:50607:50607	1099521	54	True				
ANR	1099913	Statement	"""invalid"""	1749:10:50608:50616	1099521	55	True				
ANR	1099914	Statement	)	1749:19:50617:50617	1099521	56	True				
ANR	1099915	Statement	ADDARG	1750:3:50622:50627	1099521	57	True				
ANR	1099916	Statement	(	1750:9:50628:50628	1099521	58	True				
ANR	1099917	Statement	"""other"""	1750:10:50629:50635	1099521	59	True				
ANR	1099918	Statement	)	1750:17:50636:50636	1099521	60	True				
ANR	1099919	Statement	ADDARG	1751:3:50641:50646	1099521	61	True				
ANR	1099920	Statement	(	1751:9:50647:50647	1099521	62	True				
ANR	1099921	Statement	"""b0x00"""	1751:10:50648:50654	1099521	63	True				
ANR	1099922	Statement	)	1751:17:50655:50655	1099521	64	True				
ANR	1099923	Statement	ADDARG	1752:3:50660:50665	1099521	65	True				
ANR	1099924	Statement	(	1752:9:50666:50666	1099521	66	True				
ANR	1099925	Statement	"""b0x7f"""	1752:10:50667:50673	1099521	67	True				
ANR	1099926	Statement	)	1752:17:50674:50674	1099521	68	True				
ANR	1099927	Statement	ADDARG	1753:3:50679:50684	1099521	69	True				
ANR	1099928	Statement	(	1753:9:50685:50685	1099521	70	True				
ANR	1099929	Statement	"""b0xff"""	1753:10:50686:50692	1099521	71	True				
ANR	1099930	Statement	)	1753:17:50693:50693	1099521	72	True				
ANR	1099931	Statement	ADDARG	1754:3:50698:50703	1099521	73	True				
ANR	1099932	Statement	(	1754:9:50704:50704	1099521	74	True				
ANR	1099933	Statement	"""math"""	1754:10:50705:50710	1099521	75	True				
ANR	1099934	Statement	)	1754:16:50711:50711	1099521	76	True				
ANR	1099935	Statement	ADDARG	1755:3:50716:50721	1099521	77	True				
ANR	1099936	Statement	(	1755:9:50722:50722	1099521	78	True				
ANR	1099937	Statement	"""bin"""	1755:10:50723:50727	1099521	79	True				
ANR	1099938	Statement	)	1755:15:50728:50728	1099521	80	True				
ANR	1099939	Statement	ADDARG	1756:3:50733:50738	1099521	81	True				
ANR	1099940	Statement	(	1756:9:50739:50739	1099521	82	True				
ANR	1099941	Statement	"""btext"""	1756:10:50740:50746	1099521	83	True				
ANR	1099942	Statement	)	1756:17:50747:50747	1099521	84	True				
ANR	1099943	Statement	ADDARG	1757:3:50752:50757	1099521	85	True				
ANR	1099944	Statement	(	1757:9:50758:50758	1099521	86	True				
ANR	1099945	Statement	"""push"""	1757:10:50759:50764	1099521	87	True				
ANR	1099946	Statement	)	1757:16:50765:50765	1099521	88	True				
ANR	1099947	Statement	ADDARG	1758:3:50770:50775	1099521	89	True				
ANR	1099948	Statement	(	1758:9:50776:50776	1099521	90	True				
ANR	1099949	Statement	"""pop"""	1758:10:50777:50781	1099521	91	True				
ANR	1099950	Statement	)	1758:15:50782:50782	1099521	92	True				
ANR	1099951	Statement	ADDARG	1759:3:50787:50792	1099521	93	True				
ANR	1099952	Statement	(	1759:9:50793:50793	1099521	94	True				
ANR	1099953	Statement	"""crypto"""	1759:10:50794:50801	1099521	95	True				
ANR	1099954	Statement	)	1759:18:50802:50802	1099521	96	True				
ANR	1099955	Statement	ADDARG	1760:3:50807:50812	1099521	97	True				
ANR	1099956	Statement	(	1760:9:50813:50813	1099521	98	True				
ANR	1099957	Statement	"""jmp"""	1760:10:50814:50818	1099521	99	True				
ANR	1099958	Statement	)	1760:15:50819:50819	1099521	100	True				
ANR	1099959	Statement	ADDARG	1761:3:50824:50829	1099521	101	True				
ANR	1099960	Statement	(	1761:9:50830:50830	1099521	102	True				
ANR	1099961	Statement	"""cjmp"""	1761:10:50831:50836	1099521	103	True				
ANR	1099962	Statement	)	1761:16:50837:50837	1099521	104	True				
ANR	1099963	Statement	ADDARG	1762:3:50842:50847	1099521	105	True				
ANR	1099964	Statement	(	1762:9:50848:50848	1099521	106	True				
ANR	1099965	Statement	"""call"""	1762:10:50849:50854	1099521	107	True				
ANR	1099966	Statement	)	1762:16:50855:50855	1099521	108	True				
ANR	1099967	Statement	ADDARG	1763:3:50860:50865	1099521	109	True				
ANR	1099968	Statement	(	1763:9:50866:50866	1099521	110	True				
ANR	1099969	Statement	"""nop"""	1763:10:50867:50871	1099521	111	True				
ANR	1099970	Statement	)	1763:15:50872:50872	1099521	112	True				
ANR	1099971	Statement	ADDARG	1764:3:50877:50882	1099521	113	True				
ANR	1099972	Statement	(	1764:9:50883:50883	1099521	114	True				
ANR	1099973	Statement	"""ret"""	1764:10:50884:50888	1099521	115	True				
ANR	1099974	Statement	)	1764:15:50889:50889	1099521	116	True				
ANR	1099975	Statement	ADDARG	1765:3:50894:50899	1099521	117	True				
ANR	1099976	Statement	(	1765:9:50900:50900	1099521	118	True				
ANR	1099977	Statement	"""trap"""	1765:10:50901:50906	1099521	119	True				
ANR	1099978	Statement	)	1765:16:50907:50907	1099521	120	True				
ANR	1099979	Statement	ADDARG	1766:3:50912:50917	1099521	121	True				
ANR	1099980	Statement	(	1766:9:50918:50918	1099521	122	True				
ANR	1099981	Statement	"""swi"""	1766:10:50919:50923	1099521	123	True				
ANR	1099982	Statement	)	1766:15:50924:50924	1099521	124	True				
ANR	1099983	Statement	ADDARG	1767:3:50929:50934	1099521	125	True				
ANR	1099984	Statement	(	1767:9:50935:50935	1099521	126	True				
ANR	1099985	Statement	"""cmp"""	1767:10:50936:50940	1099521	127	True				
ANR	1099986	Statement	)	1767:15:50941:50941	1099521	128	True				
ANR	1099987	Statement	ADDARG	1768:3:50946:50951	1099521	129	True				
ANR	1099988	Statement	(	1768:9:50952:50952	1099521	130	True				
ANR	1099989	Statement	"""reg"""	1768:10:50953:50957	1099521	131	True				
ANR	1099990	Statement	)	1768:15:50958:50958	1099521	132	True				
ANR	1099991	Statement	ADDARG	1769:3:50963:50968	1099521	133	True				
ANR	1099992	Statement	(	1769:9:50969:50969	1099521	134	True				
ANR	1099993	Statement	"""creg"""	1769:10:50970:50975	1099521	135	True				
ANR	1099994	Statement	)	1769:16:50976:50976	1099521	136	True				
ANR	1099995	Statement	ADDARG	1770:3:50981:50986	1099521	137	True				
ANR	1099996	Statement	(	1770:9:50987:50987	1099521	138	True				
ANR	1099997	Statement	"""num"""	1770:10:50988:50992	1099521	139	True				
ANR	1099998	Statement	)	1770:15:50993:50993	1099521	140	True				
ANR	1099999	Statement	ADDARG	1771:3:50998:51003	1099521	141	True				
ANR	1100000	Statement	(	1771:9:51004:51004	1099521	142	True				
ANR	1100001	Statement	"""mov"""	1771:10:51005:51009	1099521	143	True				
ANR	1100002	Statement	)	1771:15:51010:51010	1099521	144	True				
ANR	1100003	Statement	ADDARG	1772:3:51015:51020	1099521	145	True				
ANR	1100004	Statement	(	1772:9:51021:51021	1099521	146	True				
ANR	1100005	Statement	"""func_var"""	1772:10:51022:51031	1099521	147	True				
ANR	1100006	Statement	)	1772:20:51032:51032	1099521	148	True				
ANR	1100007	Statement	ADDARG	1773:3:51037:51042	1099521	149	True				
ANR	1100008	Statement	(	1773:9:51043:51043	1099521	150	True				
ANR	1100009	Statement	"""func_var_type"""	1773:10:51044:51058	1099521	151	True				
ANR	1100010	Statement	)	1773:25:51059:51059	1099521	152	True				
ANR	1100011	Statement	ADDARG	1774:3:51064:51069	1099521	153	True				
ANR	1100012	Statement	(	1774:9:51070:51070	1099521	154	True				
ANR	1100013	Statement	"""func_var_addr"""	1774:10:51071:51085	1099521	155	True				
ANR	1100014	Statement	)	1774:25:51086:51086	1099521	156	True				
ANR	1100015	Statement	ADDARG	1775:3:51091:51096	1099521	157	True				
ANR	1100016	Statement	(	1775:9:51097:51097	1099521	158	True				
ANR	1100017	Statement	"""widget_bg"""	1775:10:51098:51108	1099521	159	True				
ANR	1100018	Statement	)	1775:21:51109:51109	1099521	160	True				
ANR	1100019	Statement	ADDARG	1776:3:51114:51119	1099521	161	True				
ANR	1100020	Statement	(	1776:9:51120:51120	1099521	162	True				
ANR	1100021	Statement	"""widget_sel"""	1776:10:51121:51132	1099521	163	True				
ANR	1100022	Statement	)	1776:22:51133:51133	1099521	164	True				
ANR	1100023	Statement	ADDARG	1777:3:51138:51143	1099521	165	True				
ANR	1100024	Statement	(	1777:9:51144:51144	1099521	166	True				
ANR	1100025	Statement	"""ai.read"""	1777:10:51145:51153	1099521	167	True				
ANR	1100026	Statement	)	1777:19:51154:51154	1099521	168	True				
ANR	1100027	Statement	ADDARG	1778:3:51159:51164	1099521	169	True				
ANR	1100028	Statement	(	1778:9:51165:51165	1099521	170	True				
ANR	1100029	Statement	"""ai.write"""	1778:10:51166:51175	1099521	171	True				
ANR	1100030	Statement	)	1778:20:51176:51176	1099521	172	True				
ANR	1100031	Statement	ADDARG	1779:3:51181:51186	1099521	173	True				
ANR	1100032	Statement	(	1779:9:51187:51187	1099521	174	True				
ANR	1100033	Statement	"""ai.exec"""	1779:10:51188:51196	1099521	175	True				
ANR	1100034	Statement	)	1779:19:51197:51197	1099521	176	True				
ANR	1100035	Statement	ADDARG	1780:3:51202:51207	1099521	177	True				
ANR	1100036	Statement	(	1780:9:51208:51208	1099521	178	True				
ANR	1100037	Statement	"""ai.seq"""	1780:10:51209:51216	1099521	179	True				
ANR	1100038	Statement	)	1780:18:51217:51217	1099521	180	True				
ANR	1100039	Statement	ADDARG	1781:3:51222:51227	1099521	181	True				
ANR	1100040	Statement	(	1781:9:51228:51228	1099521	182	True				
ANR	1100041	Statement	"""ai.ascii"""	1781:10:51229:51238	1099521	183	True				
ANR	1100042	Statement	)	1781:20:51239:51239	1099521	184	True				
ANR	1100043	Statement	ADDARG	1782:3:51244:51249	1099521	185	True				
ANR	1100044	Statement	(	1782:9:51250:51250	1099521	186	True				
ANR	1100045	Statement	"""ai.unmap"""	1782:10:51251:51260	1099521	187	True				
ANR	1100046	Statement	)	1782:20:51261:51261	1099521	188	True				
ANR	1100047	Statement	ADDARG	1783:3:51266:51271	1099521	189	True				
ANR	1100048	Statement	(	1783:9:51272:51272	1099521	190	True				
ANR	1100049	Statement	"""graph.box"""	1783:10:51273:51283	1099521	191	True				
ANR	1100050	Statement	)	1783:21:51284:51284	1099521	192	True				
ANR	1100051	Statement	ADDARG	1784:3:51289:51294	1099521	193	True				
ANR	1100052	Statement	(	1784:9:51295:51295	1099521	194	True				
ANR	1100053	Statement	"""graph.box2"""	1784:10:51296:51307	1099521	195	True				
ANR	1100054	Statement	)	1784:22:51308:51308	1099521	196	True				
ANR	1100055	Statement	ADDARG	1785:3:51313:51318	1099521	197	True				
ANR	1100056	Statement	(	1785:9:51319:51319	1099521	198	True				
ANR	1100057	Statement	"""graph.box3"""	1785:10:51320:51331	1099521	199	True				
ANR	1100058	Statement	)	1785:22:51332:51332	1099521	200	True				
ANR	1100059	Statement	ADDARG	1786:3:51337:51342	1099521	201	True				
ANR	1100060	Statement	(	1786:9:51343:51343	1099521	202	True				
ANR	1100061	Statement	"""graph.box4"""	1786:10:51344:51355	1099521	203	True				
ANR	1100062	Statement	)	1786:22:51356:51356	1099521	204	True				
ANR	1100063	Statement	ADDARG	1787:3:51361:51366	1099521	205	True				
ANR	1100064	Statement	(	1787:9:51367:51367	1099521	206	True				
ANR	1100065	Statement	"""graph.true"""	1787:10:51368:51379	1099521	207	True				
ANR	1100066	Statement	)	1787:22:51380:51380	1099521	208	True				
ANR	1100067	Statement	ADDARG	1788:3:51385:51390	1099521	209	True				
ANR	1100068	Statement	(	1788:9:51391:51391	1099521	210	True				
ANR	1100069	Statement	"""graph.false"""	1788:10:51392:51404	1099521	211	True				
ANR	1100070	Statement	)	1788:23:51405:51405	1099521	212	True				
ANR	1100071	Statement	ADDARG	1789:3:51410:51415	1099521	213	True				
ANR	1100072	Statement	(	1789:9:51416:51416	1099521	214	True				
ANR	1100073	Statement	"""graph.trufae"""	1789:10:51417:51430	1099521	215	True				
ANR	1100074	Statement	)	1789:24:51431:51431	1099521	216	True				
ANR	1100075	Statement	ADDARG	1790:3:51436:51441	1099521	217	True				
ANR	1100076	Statement	(	1790:9:51442:51442	1099521	218	True				
ANR	1100077	Statement	"""graph.current"""	1790:10:51443:51457	1099521	219	True				
ANR	1100078	Statement	)	1790:25:51458:51458	1099521	220	True				
ANR	1100079	Statement	ADDARG	1791:3:51463:51468	1099521	221	True				
ANR	1100080	Statement	(	1791:9:51469:51469	1099521	222	True				
ANR	1100081	Statement	"""graph.traced"""	1791:10:51470:51483	1099521	223	True				
ANR	1100082	Statement	)	1791:24:51484:51484	1099521	224	True				
ANR	1100083	Statement	ADDARG	1792:3:51489:51494	1099521	225	True				
ANR	1100084	Statement	(	1792:9:51495:51495	1099521	226	True				
ANR	1100085	Statement	"""gui.cflow"""	1792:10:51496:51506	1099521	227	True				
ANR	1100086	Statement	)	1792:21:51507:51507	1099521	228	True				
ANR	1100087	Statement	ADDARG	1793:3:51512:51517	1099521	229	True				
ANR	1100088	Statement	(	1793:9:51518:51518	1099521	230	True				
ANR	1100089	Statement	"""gui.dataoffset"""	1793:10:51519:51534	1099521	231	True				
ANR	1100090	Statement	)	1793:26:51535:51535	1099521	232	True				
ANR	1100091	Statement	ADDARG	1794:3:51540:51545	1099521	233	True				
ANR	1100092	Statement	(	1794:9:51546:51546	1099521	234	True				
ANR	1100093	Statement	"""gui.background"""	1794:10:51547:51562	1099521	235	True				
ANR	1100094	Statement	)	1794:26:51563:51563	1099521	236	True				
ANR	1100095	Statement	ADDARG	1795:3:51568:51573	1099521	237	True				
ANR	1100096	Statement	(	1795:9:51574:51574	1099521	238	True				
ANR	1100097	Statement	"""gui.alt_background"""	1795:10:51575:51594	1099521	239	True				
ANR	1100098	Statement	)	1795:30:51595:51595	1099521	240	True				
ANR	1100099	Statement	ADDARG	1796:3:51600:51605	1099521	241	True				
ANR	1100100	Statement	(	1796:9:51606:51606	1099521	242	True				
ANR	1100101	Statement	"""gui.border"""	1796:10:51607:51618	1099521	243	True				
ANR	1100102	Statement	)	1796:22:51619:51619	1099521	244	True				
ANR	1100103	ElseStatement	else		1099521	0					
ANR	1100104	IfStatement	"if ( ! strncmp ( buf -> data , ""pf."" , 3 ) || ! strncmp ( buf -> data , ""pf*."" , 4 ) || ! strncmp ( buf -> data , ""pfd."" , 4 ) || ! strncmp ( buf -> data , ""pfv."" , 4 ) || ! strncmp ( buf -> data , ""pfj."" , 4 ) )"		1099521	0					
ANR	1100105	Condition	"! strncmp ( buf -> data , ""pf."" , 3 ) || ! strncmp ( buf -> data , ""pf*."" , 4 ) || ! strncmp ( buf -> data , ""pfd."" , 4 ) || ! strncmp ( buf -> data , ""pfv."" , 4 ) || ! strncmp ( buf -> data , ""pfj."" , 4 )"	1798:12:51637:51810	1099521	0	True				
ANR	1100106	OrExpression	"! strncmp ( buf -> data , ""pf."" , 3 ) || ! strncmp ( buf -> data , ""pf*."" , 4 ) || ! strncmp ( buf -> data , ""pfd."" , 4 ) || ! strncmp ( buf -> data , ""pfv."" , 4 ) || ! strncmp ( buf -> data , ""pfj."" , 4 )"		1099521	0		||			
ANR	1100107	UnaryOperationExpression	"! strncmp ( buf -> data , ""pf."" , 3 )"		1099521	0					
ANR	1100108	UnaryOperator	!		1099521	0					
ANR	1100109	CallExpression	"strncmp ( buf -> data , ""pf."" , 3 )"		1099521	1					
ANR	1100110	Callee	strncmp		1099521	0					
ANR	1100111	Identifier	strncmp		1099521	0					
ANR	1100112	ArgumentList	buf -> data		1099521	1					
ANR	1100113	Argument	buf -> data		1099521	0					
ANR	1100114	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100115	Identifier	buf		1099521	0					
ANR	1100116	Identifier	data		1099521	1					
ANR	1100117	Argument	"""pf."""		1099521	1					
ANR	1100118	PrimaryExpression	"""pf."""		1099521	0					
ANR	1100119	Argument	3		1099521	2					
ANR	1100120	PrimaryExpression	3		1099521	0					
ANR	1100121	OrExpression	"! strncmp ( buf -> data , ""pf*."" , 4 ) || ! strncmp ( buf -> data , ""pfd."" , 4 ) || ! strncmp ( buf -> data , ""pfv."" , 4 ) || ! strncmp ( buf -> data , ""pfj."" , 4 )"		1099521	1		||			
ANR	1100122	UnaryOperationExpression	"! strncmp ( buf -> data , ""pf*."" , 4 )"		1099521	0					
ANR	1100123	UnaryOperator	!		1099521	0					
ANR	1100124	CallExpression	"strncmp ( buf -> data , ""pf*."" , 4 )"		1099521	1					
ANR	1100125	Callee	strncmp		1099521	0					
ANR	1100126	Identifier	strncmp		1099521	0					
ANR	1100127	ArgumentList	buf -> data		1099521	1					
ANR	1100128	Argument	buf -> data		1099521	0					
ANR	1100129	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100130	Identifier	buf		1099521	0					
ANR	1100131	Identifier	data		1099521	1					
ANR	1100132	Argument	"""pf*."""		1099521	1					
ANR	1100133	PrimaryExpression	"""pf*."""		1099521	0					
ANR	1100134	Argument	4		1099521	2					
ANR	1100135	PrimaryExpression	4		1099521	0					
ANR	1100136	OrExpression	"! strncmp ( buf -> data , ""pfd."" , 4 ) || ! strncmp ( buf -> data , ""pfv."" , 4 ) || ! strncmp ( buf -> data , ""pfj."" , 4 )"		1099521	1		||			
ANR	1100137	UnaryOperationExpression	"! strncmp ( buf -> data , ""pfd."" , 4 )"		1099521	0					
ANR	1100138	UnaryOperator	!		1099521	0					
ANR	1100139	CallExpression	"strncmp ( buf -> data , ""pfd."" , 4 )"		1099521	1					
ANR	1100140	Callee	strncmp		1099521	0					
ANR	1100141	Identifier	strncmp		1099521	0					
ANR	1100142	ArgumentList	buf -> data		1099521	1					
ANR	1100143	Argument	buf -> data		1099521	0					
ANR	1100144	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100145	Identifier	buf		1099521	0					
ANR	1100146	Identifier	data		1099521	1					
ANR	1100147	Argument	"""pfd."""		1099521	1					
ANR	1100148	PrimaryExpression	"""pfd."""		1099521	0					
ANR	1100149	Argument	4		1099521	2					
ANR	1100150	PrimaryExpression	4		1099521	0					
ANR	1100151	OrExpression	"! strncmp ( buf -> data , ""pfv."" , 4 ) || ! strncmp ( buf -> data , ""pfj."" , 4 )"		1099521	1		||			
ANR	1100152	UnaryOperationExpression	"! strncmp ( buf -> data , ""pfv."" , 4 )"		1099521	0					
ANR	1100153	UnaryOperator	!		1099521	0					
ANR	1100154	CallExpression	"strncmp ( buf -> data , ""pfv."" , 4 )"		1099521	1					
ANR	1100155	Callee	strncmp		1099521	0					
ANR	1100156	Identifier	strncmp		1099521	0					
ANR	1100157	ArgumentList	buf -> data		1099521	1					
ANR	1100158	Argument	buf -> data		1099521	0					
ANR	1100159	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100160	Identifier	buf		1099521	0					
ANR	1100161	Identifier	data		1099521	1					
ANR	1100162	Argument	"""pfv."""		1099521	1					
ANR	1100163	PrimaryExpression	"""pfv."""		1099521	0					
ANR	1100164	Argument	4		1099521	2					
ANR	1100165	PrimaryExpression	4		1099521	0					
ANR	1100166	UnaryOperationExpression	"! strncmp ( buf -> data , ""pfj."" , 4 )"		1099521	1					
ANR	1100167	UnaryOperator	!		1099521	0					
ANR	1100168	CallExpression	"strncmp ( buf -> data , ""pfj."" , 4 )"		1099521	1					
ANR	1100169	Callee	strncmp		1099521	0					
ANR	1100170	Identifier	strncmp		1099521	0					
ANR	1100171	ArgumentList	buf -> data		1099521	1					
ANR	1100172	Argument	buf -> data		1099521	0					
ANR	1100173	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100174	Identifier	buf		1099521	0					
ANR	1100175	Identifier	data		1099521	1					
ANR	1100176	Argument	"""pfj."""		1099521	1					
ANR	1100177	PrimaryExpression	"""pfj."""		1099521	0					
ANR	1100178	Argument	4		1099521	2					
ANR	1100179	PrimaryExpression	4		1099521	0					
ANR	1100180	CompoundStatement		112:2:2782:2791	1099521	1					
ANR	1100181	IdentifierDeclStatement	char pfx [ 2 ] ;	1803:2:51817:51828	1099521	0	True				
ANR	1100182	IdentifierDecl	pfx [ 2 ]		1099521	0					
ANR	1100183	IdentifierDeclType	char [ 2 ]		1099521	0					
ANR	1100184	Identifier	pfx		1099521	1					
ANR	1100185	PrimaryExpression	2		1099521	2					
ANR	1100186	IdentifierDeclStatement	int chr = ( buf -> data [ 2 ] == '.' ) ? 3 : 4 ;	1804:2:51832:51867	1099521	1	True				
ANR	1100187	IdentifierDecl	chr = ( buf -> data [ 2 ] == '.' ) ? 3 : 4		1099521	0					
ANR	1100188	IdentifierDeclType	int		1099521	0					
ANR	1100189	Identifier	chr		1099521	1					
ANR	1100190	AssignmentExpression	chr = ( buf -> data [ 2 ] == '.' ) ? 3 : 4		1099521	2		=			
ANR	1100191	Identifier	chr		1099521	0					
ANR	1100192	ConditionalExpression	( buf -> data [ 2 ] == '.' ) ? 3 : 4		1099521	1					
ANR	1100193	Condition	buf -> data [ 2 ] == '.'		1099521	0					
ANR	1100194	EqualityExpression	buf -> data [ 2 ] == '.'		1099521	0		==			
ANR	1100195	ArrayIndexing	buf -> data [ 2 ]		1099521	0					
ANR	1100196	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100197	Identifier	buf		1099521	0					
ANR	1100198	Identifier	data		1099521	1					
ANR	1100199	PrimaryExpression	2		1099521	1					
ANR	1100200	PrimaryExpression	'.'		1099521	1					
ANR	1100201	PrimaryExpression	3		1099521	1					
ANR	1100202	PrimaryExpression	4		1099521	2					
ANR	1100203	IfStatement	if ( chr == 4 )		1099521	2					
ANR	1100204	Condition	chr == 4	1805:6:51875:51882	1099521	0	True				
ANR	1100205	EqualityExpression	chr == 4		1099521	0		==			
ANR	1100206	Identifier	chr		1099521	0					
ANR	1100207	PrimaryExpression	4		1099521	1					
ANR	1100208	CompoundStatement		103:16:2610:2610	1099521	1					
ANR	1100209	ExpressionStatement	pfx [ 0 ] = buf -> data [ 2 ]	1806:3:51890:51911	1099521	0	True				
ANR	1100210	AssignmentExpression	pfx [ 0 ] = buf -> data [ 2 ]		1099521	0		=			
ANR	1100211	ArrayIndexing	pfx [ 0 ]		1099521	0					
ANR	1100212	Identifier	pfx		1099521	0					
ANR	1100213	PrimaryExpression	0		1099521	1					
ANR	1100214	ArrayIndexing	buf -> data [ 2 ]		1099521	1					
ANR	1100215	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100216	Identifier	buf		1099521	0					
ANR	1100217	Identifier	data		1099521	1					
ANR	1100218	PrimaryExpression	2		1099521	1					
ANR	1100219	ExpressionStatement	pfx [ 1 ] = 0	1807:3:51916:51926	1099521	1	True				
ANR	1100220	AssignmentExpression	pfx [ 1 ] = 0		1099521	0		=			
ANR	1100221	ArrayIndexing	pfx [ 1 ]		1099521	0					
ANR	1100222	Identifier	pfx		1099521	0					
ANR	1100223	PrimaryExpression	1		1099521	1					
ANR	1100224	PrimaryExpression	0		1099521	1					
ANR	1100225	ElseStatement	else		1099521	0					
ANR	1100226	CompoundStatement		106:9:2662:2662	1099521	0					
ANR	1100227	ExpressionStatement	* pfx = 0	1809:3:51942:51950	1099521	0	True				
ANR	1100228	AssignmentExpression	* pfx = 0		1099521	0		=			
ANR	1100229	UnaryOperationExpression	* pfx		1099521	0					
ANR	1100230	UnaryOperator	*		1099521	0					
ANR	1100231	Identifier	pfx		1099521	1					
ANR	1100232	PrimaryExpression	0		1099521	1					
ANR	1100233	IdentifierDeclStatement	"SdbList * sls = sdb_foreach_list ( core -> print -> formats , false ) ;"	1811:2:51958:52019	1099521	3	True				
ANR	1100234	IdentifierDecl	"* sls = sdb_foreach_list ( core -> print -> formats , false )"		1099521	0					
ANR	1100235	IdentifierDeclType	SdbList *		1099521	0					
ANR	1100236	Identifier	sls		1099521	1					
ANR	1100237	AssignmentExpression	"* sls = sdb_foreach_list ( core -> print -> formats , false )"		1099521	2		=			
ANR	1100238	Identifier	sls		1099521	0					
ANR	1100239	CallExpression	"sdb_foreach_list ( core -> print -> formats , false )"		1099521	1					
ANR	1100240	Callee	sdb_foreach_list		1099521	0					
ANR	1100241	Identifier	sdb_foreach_list		1099521	0					
ANR	1100242	ArgumentList	core -> print -> formats		1099521	1					
ANR	1100243	Argument	core -> print -> formats		1099521	0					
ANR	1100244	PtrMemberAccess	core -> print -> formats		1099521	0					
ANR	1100245	PtrMemberAccess	core -> print		1099521	0					
ANR	1100246	Identifier	core		1099521	0					
ANR	1100247	Identifier	print		1099521	1					
ANR	1100248	Identifier	formats		1099521	1					
ANR	1100249	Argument	false		1099521	1					
ANR	1100250	Identifier	false		1099521	0					
ANR	1100251	IdentifierDeclStatement	SdbListIter * iter ;	1812:2:52023:52040	1099521	4	True				
ANR	1100252	IdentifierDecl	* iter		1099521	0					
ANR	1100253	IdentifierDeclType	SdbListIter *		1099521	0					
ANR	1100254	Identifier	iter		1099521	1					
ANR	1100255	IdentifierDeclStatement	SdbKv * kv ;	1813:2:52044:52053	1099521	5	True				
ANR	1100256	IdentifierDecl	* kv		1099521	0					
ANR	1100257	IdentifierDeclType	SdbKv *		1099521	0					
ANR	1100258	Identifier	kv		1099521	1					
ANR	1100259	IdentifierDeclStatement	int j = 0 ;	1814:2:52057:52066	1099521	6	True				
ANR	1100260	IdentifierDecl	j = 0		1099521	0					
ANR	1100261	IdentifierDeclType	int		1099521	0					
ANR	1100262	Identifier	j		1099521	1					
ANR	1100263	AssignmentExpression	j = 0		1099521	2		=			
ANR	1100264	Identifier	j		1099521	0					
ANR	1100265	PrimaryExpression	0		1099521	1					
ANR	1100266	Statement	ls_foreach	1815:2:52070:52079	1099521	7	True				
ANR	1100267	Statement	(	1815:13:52081:52081	1099521	8	True				
ANR	1100268	Statement	sls	1815:14:52082:52084	1099521	9	True				
ANR	1100269	Statement	","	1815:17:52085:52085	1099521	10	True				
ANR	1100270	Statement	iter	1815:19:52087:52090	1099521	11	True				
ANR	1100271	Statement	","	1815:23:52091:52091	1099521	12	True				
ANR	1100272	Statement	kv	1815:25:52093:52094	1099521	13	True				
ANR	1100273	Statement	)	1815:27:52095:52095	1099521	14	True				
ANR	1100274	CompoundStatement		115:3:2866:2916	1099521	15					
ANR	1100275	IdentifierDeclStatement	int len = strlen ( buf -> data + chr ) ;	1816:3:52102:52136	1099521	0	True				
ANR	1100276	IdentifierDecl	len = strlen ( buf -> data + chr )		1099521	0					
ANR	1100277	IdentifierDeclType	int		1099521	0					
ANR	1100278	Identifier	len		1099521	1					
ANR	1100279	AssignmentExpression	len = strlen ( buf -> data + chr )		1099521	2		=			
ANR	1100280	Identifier	len		1099521	0					
ANR	1100281	CallExpression	strlen ( buf -> data + chr )		1099521	1					
ANR	1100282	Callee	strlen		1099521	0					
ANR	1100283	Identifier	strlen		1099521	0					
ANR	1100284	ArgumentList	buf -> data + chr		1099521	1					
ANR	1100285	Argument	buf -> data + chr		1099521	0					
ANR	1100286	AdditiveExpression	buf -> data + chr		1099521	0		+			
ANR	1100287	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100288	Identifier	buf		1099521	0					
ANR	1100289	Identifier	data		1099521	1					
ANR	1100290	Identifier	chr		1099521	1					
ANR	1100291	IdentifierDeclStatement	"int minlen = R_MIN ( len , strlen ( sdbkv_key ( kv ) ) ) ;"	1817:3:52141:52191	1099521	1	True				
ANR	1100292	IdentifierDecl	"minlen = R_MIN ( len , strlen ( sdbkv_key ( kv ) ) )"		1099521	0					
ANR	1100293	IdentifierDeclType	int		1099521	0					
ANR	1100294	Identifier	minlen		1099521	1					
ANR	1100295	AssignmentExpression	"minlen = R_MIN ( len , strlen ( sdbkv_key ( kv ) ) )"		1099521	2		=			
ANR	1100296	Identifier	minlen		1099521	0					
ANR	1100297	CallExpression	"R_MIN ( len , strlen ( sdbkv_key ( kv ) ) )"		1099521	1					
ANR	1100298	Callee	R_MIN		1099521	0					
ANR	1100299	Identifier	R_MIN		1099521	0					
ANR	1100300	ArgumentList	len		1099521	1					
ANR	1100301	Argument	len		1099521	0					
ANR	1100302	Identifier	len		1099521	0					
ANR	1100303	Argument	strlen ( sdbkv_key ( kv ) )		1099521	1					
ANR	1100304	CallExpression	strlen ( sdbkv_key ( kv ) )		1099521	0					
ANR	1100305	Callee	strlen		1099521	0					
ANR	1100306	Identifier	strlen		1099521	0					
ANR	1100307	ArgumentList	sdbkv_key ( kv )		1099521	1					
ANR	1100308	Argument	sdbkv_key ( kv )		1099521	0					
ANR	1100309	CallExpression	sdbkv_key ( kv )		1099521	0					
ANR	1100310	Callee	sdbkv_key		1099521	0					
ANR	1100311	Identifier	sdbkv_key		1099521	0					
ANR	1100312	ArgumentList	kv		1099521	1					
ANR	1100313	Argument	kv		1099521	0					
ANR	1100314	Identifier	kv		1099521	0					
ANR	1100315	IfStatement	"if ( ! len || ! strncmp ( buf -> data + chr , sdbkv_key ( kv ) , minlen ) )"		1099521	2					
ANR	1100316	Condition	"! len || ! strncmp ( buf -> data + chr , sdbkv_key ( kv ) , minlen )"	1818:7:52200:52257	1099521	0	True				
ANR	1100317	OrExpression	"! len || ! strncmp ( buf -> data + chr , sdbkv_key ( kv ) , minlen )"		1099521	0		||			
ANR	1100318	UnaryOperationExpression	! len		1099521	0					
ANR	1100319	UnaryOperator	!		1099521	0					
ANR	1100320	Identifier	len		1099521	1					
ANR	1100321	UnaryOperationExpression	"! strncmp ( buf -> data + chr , sdbkv_key ( kv ) , minlen )"		1099521	1					
ANR	1100322	UnaryOperator	!		1099521	0					
ANR	1100323	CallExpression	"strncmp ( buf -> data + chr , sdbkv_key ( kv ) , minlen )"		1099521	1					
ANR	1100324	Callee	strncmp		1099521	0					
ANR	1100325	Identifier	strncmp		1099521	0					
ANR	1100326	ArgumentList	buf -> data + chr		1099521	1					
ANR	1100327	Argument	buf -> data + chr		1099521	0					
ANR	1100328	AdditiveExpression	buf -> data + chr		1099521	0		+			
ANR	1100329	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100330	Identifier	buf		1099521	0					
ANR	1100331	Identifier	data		1099521	1					
ANR	1100332	Identifier	chr		1099521	1					
ANR	1100333	Argument	sdbkv_key ( kv )		1099521	1					
ANR	1100334	CallExpression	sdbkv_key ( kv )		1099521	0					
ANR	1100335	Callee	sdbkv_key		1099521	0					
ANR	1100336	Identifier	sdbkv_key		1099521	0					
ANR	1100337	ArgumentList	kv		1099521	1					
ANR	1100338	Argument	kv		1099521	0					
ANR	1100339	Identifier	kv		1099521	0					
ANR	1100340	Argument	minlen		1099521	2					
ANR	1100341	Identifier	minlen		1099521	0					
ANR	1100342	CompoundStatement		117:4:2991:3030	1099521	1					
ANR	1100343	IdentifierDeclStatement	"char * p = strchr ( buf -> data + chr , '.' ) ;"	1819:4:52266:52305	1099521	0	True				
ANR	1100344	IdentifierDecl	"* p = strchr ( buf -> data + chr , '.' )"		1099521	0					
ANR	1100345	IdentifierDeclType	char *		1099521	0					
ANR	1100346	Identifier	p		1099521	1					
ANR	1100347	AssignmentExpression	"* p = strchr ( buf -> data + chr , '.' )"		1099521	2		=			
ANR	1100348	Identifier	p		1099521	0					
ANR	1100349	CallExpression	"strchr ( buf -> data + chr , '.' )"		1099521	1					
ANR	1100350	Callee	strchr		1099521	0					
ANR	1100351	Identifier	strchr		1099521	0					
ANR	1100352	ArgumentList	buf -> data + chr		1099521	1					
ANR	1100353	Argument	buf -> data + chr		1099521	0					
ANR	1100354	AdditiveExpression	buf -> data + chr		1099521	0		+			
ANR	1100355	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100356	Identifier	buf		1099521	0					
ANR	1100357	Identifier	data		1099521	1					
ANR	1100358	Identifier	chr		1099521	1					
ANR	1100359	Argument	'.'		1099521	1					
ANR	1100360	PrimaryExpression	'.'		1099521	0					
ANR	1100361	IfStatement	if ( p )		1099521	1					
ANR	1100362	Condition	p	1820:8:52315:52315	1099521	0	True				
ANR	1100363	Identifier	p		1099521	0					
ANR	1100364	CompoundStatement		118:11:3043:3043	1099521	1					
ANR	1100365	ExpressionStatement	"j += autocomplete_pfele ( core , completion , sdbkv_key ( kv ) , pfx , j , p + 1 )"	1821:5:52325:52398	1099521	0	True				
ANR	1100366	AssignmentExpression	"j += autocomplete_pfele ( core , completion , sdbkv_key ( kv ) , pfx , j , p + 1 )"		1099521	0		+=			
ANR	1100367	Identifier	j		1099521	0					
ANR	1100368	CallExpression	"autocomplete_pfele ( core , completion , sdbkv_key ( kv ) , pfx , j , p + 1 )"		1099521	1					
ANR	1100369	Callee	autocomplete_pfele		1099521	0					
ANR	1100370	Identifier	autocomplete_pfele		1099521	0					
ANR	1100371	ArgumentList	core		1099521	1					
ANR	1100372	Argument	core		1099521	0					
ANR	1100373	Identifier	core		1099521	0					
ANR	1100374	Argument	completion		1099521	1					
ANR	1100375	Identifier	completion		1099521	0					
ANR	1100376	Argument	sdbkv_key ( kv )		1099521	2					
ANR	1100377	CallExpression	sdbkv_key ( kv )		1099521	0					
ANR	1100378	Callee	sdbkv_key		1099521	0					
ANR	1100379	Identifier	sdbkv_key		1099521	0					
ANR	1100380	ArgumentList	kv		1099521	1					
ANR	1100381	Argument	kv		1099521	0					
ANR	1100382	Identifier	kv		1099521	0					
ANR	1100383	Argument	pfx		1099521	3					
ANR	1100384	Identifier	pfx		1099521	0					
ANR	1100385	Argument	j		1099521	4					
ANR	1100386	Identifier	j		1099521	0					
ANR	1100387	Argument	p + 1		1099521	5					
ANR	1100388	AdditiveExpression	p + 1		1099521	0		+			
ANR	1100389	Identifier	p		1099521	0					
ANR	1100390	PrimaryExpression	1		1099521	1					
ANR	1100391	BreakStatement	break ;	1822:5:52405:52410	1099521	1	True				
ANR	1100392	ElseStatement	else		1099521	0					
ANR	1100393	CompoundStatement		122:5:3155:3208	1099521	0					
ANR	1100394	IdentifierDeclStatement	"char * s = r_str_newf ( ""pf%s.%s"" , pfx , sdbkv_key ( kv ) ) ;"	1824:5:52430:52483	1099521	0	True				
ANR	1100395	IdentifierDecl	"* s = r_str_newf ( ""pf%s.%s"" , pfx , sdbkv_key ( kv ) )"		1099521	0					
ANR	1100396	IdentifierDeclType	char *		1099521	0					
ANR	1100397	Identifier	s		1099521	1					
ANR	1100398	AssignmentExpression	"* s = r_str_newf ( ""pf%s.%s"" , pfx , sdbkv_key ( kv ) )"		1099521	2		=			
ANR	1100399	Identifier	s		1099521	0					
ANR	1100400	CallExpression	"r_str_newf ( ""pf%s.%s"" , pfx , sdbkv_key ( kv ) )"		1099521	1					
ANR	1100401	Callee	r_str_newf		1099521	0					
ANR	1100402	Identifier	r_str_newf		1099521	0					
ANR	1100403	ArgumentList	"""pf%s.%s"""		1099521	1					
ANR	1100404	Argument	"""pf%s.%s"""		1099521	0					
ANR	1100405	PrimaryExpression	"""pf%s.%s"""		1099521	0					
ANR	1100406	Argument	pfx		1099521	1					
ANR	1100407	Identifier	pfx		1099521	0					
ANR	1100408	Argument	sdbkv_key ( kv )		1099521	2					
ANR	1100409	CallExpression	sdbkv_key ( kv )		1099521	0					
ANR	1100410	Callee	sdbkv_key		1099521	0					
ANR	1100411	Identifier	sdbkv_key		1099521	0					
ANR	1100412	ArgumentList	kv		1099521	1					
ANR	1100413	Argument	kv		1099521	0					
ANR	1100414	Identifier	kv		1099521	0					
ANR	1100415	ExpressionStatement	"r_line_completion_push ( completion , s )"	1825:5:52490:52528	1099521	1	True				
ANR	1100416	CallExpression	"r_line_completion_push ( completion , s )"		1099521	0					
ANR	1100417	Callee	r_line_completion_push		1099521	0					
ANR	1100418	Identifier	r_line_completion_push		1099521	0					
ANR	1100419	ArgumentList	completion		1099521	1					
ANR	1100420	Argument	completion		1099521	0					
ANR	1100421	Identifier	completion		1099521	0					
ANR	1100422	Argument	s		1099521	1					
ANR	1100423	Identifier	s		1099521	0					
ANR	1100424	ExpressionStatement	free ( s )	1826:5:52535:52543	1099521	2	True				
ANR	1100425	CallExpression	free ( s )		1099521	0					
ANR	1100426	Callee	free		1099521	0					
ANR	1100427	Identifier	free		1099521	0					
ANR	1100428	ArgumentList	s		1099521	1					
ANR	1100429	Argument	s		1099521	0					
ANR	1100430	Identifier	s		1099521	0					
ANR	1100431	ElseStatement	else		1099521	0					
ANR	1100432	IfStatement	"if ( ( ! strncmp ( buf -> data , ""afvn "" , 5 ) ) || ( ! strncmp ( buf -> data , ""afan "" , 5 ) ) )"		1099521	0					
ANR	1100433	Condition	"( ! strncmp ( buf -> data , ""afvn "" , 5 ) ) || ( ! strncmp ( buf -> data , ""afan "" , 5 ) )"	1830:12:52572:52644	1099521	0	True				
ANR	1100434	OrExpression	"( ! strncmp ( buf -> data , ""afvn "" , 5 ) ) || ( ! strncmp ( buf -> data , ""afan "" , 5 ) )"		1099521	0		||			
ANR	1100435	UnaryOperationExpression	"! strncmp ( buf -> data , ""afvn "" , 5 )"		1099521	0					
ANR	1100436	UnaryOperator	!		1099521	0					
ANR	1100437	CallExpression	"strncmp ( buf -> data , ""afvn "" , 5 )"		1099521	1					
ANR	1100438	Callee	strncmp		1099521	0					
ANR	1100439	Identifier	strncmp		1099521	0					
ANR	1100440	ArgumentList	buf -> data		1099521	1					
ANR	1100441	Argument	buf -> data		1099521	0					
ANR	1100442	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100443	Identifier	buf		1099521	0					
ANR	1100444	Identifier	data		1099521	1					
ANR	1100445	Argument	"""afvn """		1099521	1					
ANR	1100446	PrimaryExpression	"""afvn """		1099521	0					
ANR	1100447	Argument	5		1099521	2					
ANR	1100448	PrimaryExpression	5		1099521	0					
ANR	1100449	UnaryOperationExpression	"! strncmp ( buf -> data , ""afan "" , 5 )"		1099521	1					
ANR	1100450	UnaryOperator	!		1099521	0					
ANR	1100451	CallExpression	"strncmp ( buf -> data , ""afan "" , 5 )"		1099521	1					
ANR	1100452	Callee	strncmp		1099521	0					
ANR	1100453	Identifier	strncmp		1099521	0					
ANR	1100454	ArgumentList	buf -> data		1099521	1					
ANR	1100455	Argument	buf -> data		1099521	0					
ANR	1100456	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100457	Identifier	buf		1099521	0					
ANR	1100458	Identifier	data		1099521	1					
ANR	1100459	Argument	"""afan """		1099521	1					
ANR	1100460	PrimaryExpression	"""afan """		1099521	0					
ANR	1100461	Argument	5		1099521	2					
ANR	1100462	PrimaryExpression	5		1099521	0					
ANR	1100463	CompoundStatement		147:2:3946:3961	1099521	1					
ANR	1100464	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 ) ;"	1832:2:52651:52719	1099521	0	True				
ANR	1100465	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		1099521	0					
ANR	1100466	IdentifierDeclType	RAnalFunction *		1099521	0					
ANR	1100467	Identifier	fcn		1099521	1					
ANR	1100468	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		1099521	2		=			
ANR	1100469	Identifier	fcn		1099521	0					
ANR	1100470	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		1099521	1					
ANR	1100471	Callee	r_anal_get_fcn_in		1099521	0					
ANR	1100472	Identifier	r_anal_get_fcn_in		1099521	0					
ANR	1100473	ArgumentList	core -> anal		1099521	1					
ANR	1100474	Argument	core -> anal		1099521	0					
ANR	1100475	PtrMemberAccess	core -> anal		1099521	0					
ANR	1100476	Identifier	core		1099521	0					
ANR	1100477	Identifier	anal		1099521	1					
ANR	1100478	Argument	core -> offset		1099521	1					
ANR	1100479	PtrMemberAccess	core -> offset		1099521	0					
ANR	1100480	Identifier	core		1099521	0					
ANR	1100481	Identifier	offset		1099521	1					
ANR	1100482	Argument	0		1099521	2					
ANR	1100483	PrimaryExpression	0		1099521	0					
ANR	1100484	IdentifierDeclStatement	RList * vars ;	1833:2:52723:52734	1099521	1	True				
ANR	1100485	IdentifierDecl	* vars		1099521	0					
ANR	1100486	IdentifierDeclType	RList *		1099521	0					
ANR	1100487	Identifier	vars		1099521	1					
ANR	1100488	IfStatement	"if ( ! strncmp ( buf -> data , ""afvn "" , 5 ) )"		1099521	2					
ANR	1100489	Condition	"! strncmp ( buf -> data , ""afvn "" , 5 )"	1834:6:52742:52773	1099521	0	True				
ANR	1100490	UnaryOperationExpression	"! strncmp ( buf -> data , ""afvn "" , 5 )"		1099521	0					
ANR	1100491	UnaryOperator	!		1099521	0					
ANR	1100492	CallExpression	"strncmp ( buf -> data , ""afvn "" , 5 )"		1099521	1					
ANR	1100493	Callee	strncmp		1099521	0					
ANR	1100494	Identifier	strncmp		1099521	0					
ANR	1100495	ArgumentList	buf -> data		1099521	1					
ANR	1100496	Argument	buf -> data		1099521	0					
ANR	1100497	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100498	Identifier	buf		1099521	0					
ANR	1100499	Identifier	data		1099521	1					
ANR	1100500	Argument	"""afvn """		1099521	1					
ANR	1100501	PrimaryExpression	"""afvn """		1099521	0					
ANR	1100502	Argument	5		1099521	2					
ANR	1100503	PrimaryExpression	5		1099521	0					
ANR	1100504	CompoundStatement		132:40:3501:3501	1099521	1					
ANR	1100505	ExpressionStatement	"vars = r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_BPV )"	1835:3:52781:52842	1099521	0	True				
ANR	1100506	AssignmentExpression	"vars = r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_BPV )"		1099521	0		=			
ANR	1100507	Identifier	vars		1099521	0					
ANR	1100508	CallExpression	"r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_BPV )"		1099521	1					
ANR	1100509	Callee	r_anal_var_list		1099521	0					
ANR	1100510	Identifier	r_anal_var_list		1099521	0					
ANR	1100511	ArgumentList	core -> anal		1099521	1					
ANR	1100512	Argument	core -> anal		1099521	0					
ANR	1100513	PtrMemberAccess	core -> anal		1099521	0					
ANR	1100514	Identifier	core		1099521	0					
ANR	1100515	Identifier	anal		1099521	1					
ANR	1100516	Argument	fcn		1099521	1					
ANR	1100517	Identifier	fcn		1099521	0					
ANR	1100518	Argument	R_ANAL_VAR_KIND_BPV		1099521	2					
ANR	1100519	Identifier	R_ANAL_VAR_KIND_BPV		1099521	0					
ANR	1100520	ElseStatement	else		1099521	0					
ANR	1100521	CompoundStatement		134:9:3578:3578	1099521	0					
ANR	1100522	ExpressionStatement	"vars = r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_ARG )"	1837:3:52858:52919	1099521	0	True				
ANR	1100523	AssignmentExpression	"vars = r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_ARG )"		1099521	0		=			
ANR	1100524	Identifier	vars		1099521	0					
ANR	1100525	CallExpression	"r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_ARG )"		1099521	1					
ANR	1100526	Callee	r_anal_var_list		1099521	0					
ANR	1100527	Identifier	r_anal_var_list		1099521	0					
ANR	1100528	ArgumentList	core -> anal		1099521	1					
ANR	1100529	Argument	core -> anal		1099521	0					
ANR	1100530	PtrMemberAccess	core -> anal		1099521	0					
ANR	1100531	Identifier	core		1099521	0					
ANR	1100532	Identifier	anal		1099521	1					
ANR	1100533	Argument	fcn		1099521	1					
ANR	1100534	Identifier	fcn		1099521	0					
ANR	1100535	Argument	R_ANAL_VAR_KIND_ARG		1099521	2					
ANR	1100536	Identifier	R_ANAL_VAR_KIND_ARG		1099521	0					
ANR	1100537	IdentifierDeclStatement	"const char * f_ptr , * l_ptr ;"	1839:2:52927:52952	1099521	3	True				
ANR	1100538	IdentifierDecl	* f_ptr		1099521	0					
ANR	1100539	IdentifierDeclType	const char *		1099521	0					
ANR	1100540	Identifier	f_ptr		1099521	1					
ANR	1100541	IdentifierDecl	* l_ptr		1099521	1					
ANR	1100542	IdentifierDeclType	const char *		1099521	0					
ANR	1100543	Identifier	l_ptr		1099521	1					
ANR	1100544	IdentifierDeclStatement	RAnalVar * var ;	1840:2:52956:52969	1099521	4	True				
ANR	1100545	IdentifierDecl	* var		1099521	0					
ANR	1100546	IdentifierDeclType	RAnalVar *		1099521	0					
ANR	1100547	Identifier	var		1099521	1					
ANR	1100548	IdentifierDeclStatement	int len = strlen ( buf -> data ) ;	1841:2:52973:53001	1099521	5	True				
ANR	1100549	IdentifierDecl	len = strlen ( buf -> data )		1099521	0					
ANR	1100550	IdentifierDeclType	int		1099521	0					
ANR	1100551	Identifier	len		1099521	1					
ANR	1100552	AssignmentExpression	len = strlen ( buf -> data )		1099521	2		=			
ANR	1100553	Identifier	len		1099521	0					
ANR	1100554	CallExpression	strlen ( buf -> data )		1099521	1					
ANR	1100555	Callee	strlen		1099521	0					
ANR	1100556	Identifier	strlen		1099521	0					
ANR	1100557	ArgumentList	buf -> data		1099521	1					
ANR	1100558	Argument	buf -> data		1099521	0					
ANR	1100559	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100560	Identifier	buf		1099521	0					
ANR	1100561	Identifier	data		1099521	1					
ANR	1100562	ExpressionStatement	"f_ptr = r_sub_str_lchr ( buf -> data , 0 , buf -> index , ' ' )"	1843:2:53006:53060	1099521	6	True				
ANR	1100563	AssignmentExpression	"f_ptr = r_sub_str_lchr ( buf -> data , 0 , buf -> index , ' ' )"		1099521	0		=			
ANR	1100564	Identifier	f_ptr		1099521	0					
ANR	1100565	CallExpression	"r_sub_str_lchr ( buf -> data , 0 , buf -> index , ' ' )"		1099521	1					
ANR	1100566	Callee	r_sub_str_lchr		1099521	0					
ANR	1100567	Identifier	r_sub_str_lchr		1099521	0					
ANR	1100568	ArgumentList	buf -> data		1099521	1					
ANR	1100569	Argument	buf -> data		1099521	0					
ANR	1100570	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100571	Identifier	buf		1099521	0					
ANR	1100572	Identifier	data		1099521	1					
ANR	1100573	Argument	0		1099521	1					
ANR	1100574	PrimaryExpression	0		1099521	0					
ANR	1100575	Argument	buf -> index		1099521	2					
ANR	1100576	PtrMemberAccess	buf -> index		1099521	0					
ANR	1100577	Identifier	buf		1099521	0					
ANR	1100578	Identifier	index		1099521	1					
ANR	1100579	Argument	' '		1099521	3					
ANR	1100580	PrimaryExpression	' '		1099521	0					
ANR	1100581	ExpressionStatement	f_ptr = f_ptr != NULL ? f_ptr + 1 : buf -> data	1844:2:53064:53109	1099521	7	True				
ANR	1100582	AssignmentExpression	f_ptr = f_ptr != NULL ? f_ptr + 1 : buf -> data		1099521	0		=			
ANR	1100583	Identifier	f_ptr		1099521	0					
ANR	1100584	ConditionalExpression	f_ptr != NULL ? f_ptr + 1 : buf -> data		1099521	1					
ANR	1100585	Condition	f_ptr != NULL		1099521	0					
ANR	1100586	EqualityExpression	f_ptr != NULL		1099521	0		!=			
ANR	1100587	Identifier	f_ptr		1099521	0					
ANR	1100588	Identifier	NULL		1099521	1					
ANR	1100589	AdditiveExpression	f_ptr + 1		1099521	1		+			
ANR	1100590	Identifier	f_ptr		1099521	0					
ANR	1100591	PrimaryExpression	1		1099521	1					
ANR	1100592	PtrMemberAccess	buf -> data		1099521	2					
ANR	1100593	Identifier	buf		1099521	0					
ANR	1100594	Identifier	data		1099521	1					
ANR	1100595	ExpressionStatement	"l_ptr = r_sub_str_rchr ( buf -> data , buf -> index , len , ' ' )"	1845:2:53113:53169	1099521	8	True				
ANR	1100596	AssignmentExpression	"l_ptr = r_sub_str_rchr ( buf -> data , buf -> index , len , ' ' )"		1099521	0		=			
ANR	1100597	Identifier	l_ptr		1099521	0					
ANR	1100598	CallExpression	"r_sub_str_rchr ( buf -> data , buf -> index , len , ' ' )"		1099521	1					
ANR	1100599	Callee	r_sub_str_rchr		1099521	0					
ANR	1100600	Identifier	r_sub_str_rchr		1099521	0					
ANR	1100601	ArgumentList	buf -> data		1099521	1					
ANR	1100602	Argument	buf -> data		1099521	0					
ANR	1100603	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100604	Identifier	buf		1099521	0					
ANR	1100605	Identifier	data		1099521	1					
ANR	1100606	Argument	buf -> index		1099521	1					
ANR	1100607	PtrMemberAccess	buf -> index		1099521	0					
ANR	1100608	Identifier	buf		1099521	0					
ANR	1100609	Identifier	index		1099521	1					
ANR	1100610	Argument	len		1099521	2					
ANR	1100611	Identifier	len		1099521	0					
ANR	1100612	Argument	' '		1099521	3					
ANR	1100613	PrimaryExpression	' '		1099521	0					
ANR	1100614	IfStatement	if ( ! l_ptr )		1099521	9					
ANR	1100615	Condition	! l_ptr	1846:6:53177:53182	1099521	0	True				
ANR	1100616	UnaryOperationExpression	! l_ptr		1099521	0					
ANR	1100617	UnaryOperator	!		1099521	0					
ANR	1100618	Identifier	l_ptr		1099521	1					
ANR	1100619	CompoundStatement		144:14:3910:3910	1099521	1					
ANR	1100620	ExpressionStatement	l_ptr = buf -> data + len	1847:3:53190:53213	1099521	0	True				
ANR	1100621	AssignmentExpression	l_ptr = buf -> data + len		1099521	0		=			
ANR	1100622	Identifier	l_ptr		1099521	0					
ANR	1100623	AdditiveExpression	buf -> data + len		1099521	1		+			
ANR	1100624	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100625	Identifier	buf		1099521	0					
ANR	1100626	Identifier	data		1099521	1					
ANR	1100627	Identifier	len		1099521	1					
ANR	1100628	IdentifierDeclStatement	RListIter * iter ;	1849:2:53221:53236	1099521	10	True				
ANR	1100629	IdentifierDecl	* iter		1099521	0					
ANR	1100630	IdentifierDeclType	RListIter *		1099521	0					
ANR	1100631	Identifier	iter		1099521	1					
ANR	1100632	Statement	r_list_foreach	1850:2:53240:53253	1099521	11	True				
ANR	1100633	Statement	(	1850:17:53255:53255	1099521	12	True				
ANR	1100634	Statement	vars	1850:18:53256:53259	1099521	13	True				
ANR	1100635	Statement	","	1850:22:53260:53260	1099521	14	True				
ANR	1100636	Statement	iter	1850:24:53262:53265	1099521	15	True				
ANR	1100637	Statement	","	1850:28:53266:53266	1099521	16	True				
ANR	1100638	Statement	var	1850:30:53268:53270	1099521	17	True				
ANR	1100639	Statement	)	1850:33:53271:53271	1099521	18	True				
ANR	1100640	CompoundStatement		148:35:3998:3998	1099521	19					
ANR	1100641	IfStatement	"if ( ! strncmp ( f_ptr , var -> name , l_ptr - f_ptr ) )"		1099521	0					
ANR	1100642	Condition	"! strncmp ( f_ptr , var -> name , l_ptr - f_ptr )"	1851:7:53282:53323	1099521	0	True				
ANR	1100643	UnaryOperationExpression	"! strncmp ( f_ptr , var -> name , l_ptr - f_ptr )"		1099521	0					
ANR	1100644	UnaryOperator	!		1099521	0					
ANR	1100645	CallExpression	"strncmp ( f_ptr , var -> name , l_ptr - f_ptr )"		1099521	1					
ANR	1100646	Callee	strncmp		1099521	0					
ANR	1100647	Identifier	strncmp		1099521	0					
ANR	1100648	ArgumentList	f_ptr		1099521	1					
ANR	1100649	Argument	f_ptr		1099521	0					
ANR	1100650	Identifier	f_ptr		1099521	0					
ANR	1100651	Argument	var -> name		1099521	1					
ANR	1100652	PtrMemberAccess	var -> name		1099521	0					
ANR	1100653	Identifier	var		1099521	0					
ANR	1100654	Identifier	name		1099521	1					
ANR	1100655	Argument	l_ptr - f_ptr		1099521	2					
ANR	1100656	AdditiveExpression	l_ptr - f_ptr		1099521	0		-			
ANR	1100657	Identifier	l_ptr		1099521	0					
ANR	1100658	Identifier	f_ptr		1099521	1					
ANR	1100659	CompoundStatement		149:51:4051:4051	1099521	1					
ANR	1100660	ExpressionStatement	"r_line_completion_push ( completion , var -> name )"	1852:4:53332:53378	1099521	0	True				
ANR	1100661	CallExpression	"r_line_completion_push ( completion , var -> name )"		1099521	0					
ANR	1100662	Callee	r_line_completion_push		1099521	0					
ANR	1100663	Identifier	r_line_completion_push		1099521	0					
ANR	1100664	ArgumentList	completion		1099521	1					
ANR	1100665	Argument	completion		1099521	0					
ANR	1100666	Identifier	completion		1099521	0					
ANR	1100667	Argument	var -> name		1099521	1					
ANR	1100668	PtrMemberAccess	var -> name		1099521	0					
ANR	1100669	Identifier	var		1099521	0					
ANR	1100670	Identifier	name		1099521	1					
ANR	1100671	ExpressionStatement	r_list_free ( vars )	1855:2:53391:53409	1099521	20	True				
ANR	1100672	CallExpression	r_list_free ( vars )		1099521	0					
ANR	1100673	Callee	r_list_free		1099521	0					
ANR	1100674	Identifier	r_list_free		1099521	0					
ANR	1100675	ArgumentList	vars		1099521	1					
ANR	1100676	Argument	vars		1099521	0					
ANR	1100677	Identifier	vars		1099521	0					
ANR	1100678	ElseStatement	else		1099521	0					
ANR	1100679	IfStatement	"if ( ! strncmp ( buf -> data , ""t "" , 2 ) || ! strncmp ( buf -> data , ""t- "" , 3 ) )"		1099521	0					
ANR	1100680	Condition	"! strncmp ( buf -> data , ""t "" , 2 ) || ! strncmp ( buf -> data , ""t- "" , 3 )"	1856:12:53423:53486	1099521	0	True				
ANR	1100681	OrExpression	"! strncmp ( buf -> data , ""t "" , 2 ) || ! strncmp ( buf -> data , ""t- "" , 3 )"		1099521	0		||			
ANR	1100682	UnaryOperationExpression	"! strncmp ( buf -> data , ""t "" , 2 )"		1099521	0					
ANR	1100683	UnaryOperator	!		1099521	0					
ANR	1100684	CallExpression	"strncmp ( buf -> data , ""t "" , 2 )"		1099521	1					
ANR	1100685	Callee	strncmp		1099521	0					
ANR	1100686	Identifier	strncmp		1099521	0					
ANR	1100687	ArgumentList	buf -> data		1099521	1					
ANR	1100688	Argument	buf -> data		1099521	0					
ANR	1100689	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100690	Identifier	buf		1099521	0					
ANR	1100691	Identifier	data		1099521	1					
ANR	1100692	Argument	"""t """		1099521	1					
ANR	1100693	PrimaryExpression	"""t """		1099521	0					
ANR	1100694	Argument	2		1099521	2					
ANR	1100695	PrimaryExpression	2		1099521	0					
ANR	1100696	UnaryOperationExpression	"! strncmp ( buf -> data , ""t- "" , 3 )"		1099521	1					
ANR	1100697	UnaryOperator	!		1099521	0					
ANR	1100698	CallExpression	"strncmp ( buf -> data , ""t- "" , 3 )"		1099521	1					
ANR	1100699	Callee	strncmp		1099521	0					
ANR	1100700	Identifier	strncmp		1099521	0					
ANR	1100701	ArgumentList	buf -> data		1099521	1					
ANR	1100702	Argument	buf -> data		1099521	0					
ANR	1100703	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100704	Identifier	buf		1099521	0					
ANR	1100705	Identifier	data		1099521	1					
ANR	1100706	Argument	"""t- """		1099521	1					
ANR	1100707	PrimaryExpression	"""t- """		1099521	0					
ANR	1100708	Argument	3		1099521	2					
ANR	1100709	PrimaryExpression	3		1099521	0					
ANR	1100710	CompoundStatement		159:2:4315:4352	1099521	1					
ANR	1100711	IdentifierDeclStatement	"SdbList * l = sdb_foreach_list ( core -> anal -> sdb_types , true ) ;"	1858:2:53493:53552	1099521	0	True				
ANR	1100712	IdentifierDecl	"* l = sdb_foreach_list ( core -> anal -> sdb_types , true )"		1099521	0					
ANR	1100713	IdentifierDeclType	SdbList *		1099521	0					
ANR	1100714	Identifier	l		1099521	1					
ANR	1100715	AssignmentExpression	"* l = sdb_foreach_list ( core -> anal -> sdb_types , true )"		1099521	2		=			
ANR	1100716	Identifier	l		1099521	0					
ANR	1100717	CallExpression	"sdb_foreach_list ( core -> anal -> sdb_types , true )"		1099521	1					
ANR	1100718	Callee	sdb_foreach_list		1099521	0					
ANR	1100719	Identifier	sdb_foreach_list		1099521	0					
ANR	1100720	ArgumentList	core -> anal -> sdb_types		1099521	1					
ANR	1100721	Argument	core -> anal -> sdb_types		1099521	0					
ANR	1100722	PtrMemberAccess	core -> anal -> sdb_types		1099521	0					
ANR	1100723	PtrMemberAccess	core -> anal		1099521	0					
ANR	1100724	Identifier	core		1099521	0					
ANR	1100725	Identifier	anal		1099521	1					
ANR	1100726	Identifier	sdb_types		1099521	1					
ANR	1100727	Argument	true		1099521	1					
ANR	1100728	Identifier	true		1099521	0					
ANR	1100729	IdentifierDeclStatement	SdbListIter * iter ;	1859:2:53556:53573	1099521	1	True				
ANR	1100730	IdentifierDecl	* iter		1099521	0					
ANR	1100731	IdentifierDeclType	SdbListIter *		1099521	0					
ANR	1100732	Identifier	iter		1099521	1					
ANR	1100733	IdentifierDeclStatement	SdbKv * kv ;	1860:2:53577:53586	1099521	2	True				
ANR	1100734	IdentifierDecl	* kv		1099521	0					
ANR	1100735	IdentifierDeclType	SdbKv *		1099521	0					
ANR	1100736	Identifier	kv		1099521	1					
ANR	1100737	IdentifierDeclStatement	int chr = ( buf -> data [ 1 ] == ' ' ) ? 2 : 3 ;	1861:2:53590:53627	1099521	3	True				
ANR	1100738	IdentifierDecl	chr = ( buf -> data [ 1 ] == ' ' ) ? 2 : 3		1099521	0					
ANR	1100739	IdentifierDeclType	int		1099521	0					
ANR	1100740	Identifier	chr		1099521	1					
ANR	1100741	AssignmentExpression	chr = ( buf -> data [ 1 ] == ' ' ) ? 2 : 3		1099521	2		=			
ANR	1100742	Identifier	chr		1099521	0					
ANR	1100743	ConditionalExpression	( buf -> data [ 1 ] == ' ' ) ? 2 : 3		1099521	1					
ANR	1100744	Condition	buf -> data [ 1 ] == ' '		1099521	0					
ANR	1100745	EqualityExpression	buf -> data [ 1 ] == ' '		1099521	0		==			
ANR	1100746	ArrayIndexing	buf -> data [ 1 ]		1099521	0					
ANR	1100747	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100748	Identifier	buf		1099521	0					
ANR	1100749	Identifier	data		1099521	1					
ANR	1100750	PrimaryExpression	1		1099521	1					
ANR	1100751	PrimaryExpression	' '		1099521	1					
ANR	1100752	PrimaryExpression	2		1099521	1					
ANR	1100753	PrimaryExpression	3		1099521	2					
ANR	1100754	Statement	ls_foreach	1862:2:53631:53640	1099521	4	True				
ANR	1100755	Statement	(	1862:13:53642:53642	1099521	5	True				
ANR	1100756	Statement	l	1862:14:53643:53643	1099521	6	True				
ANR	1100757	Statement	","	1862:15:53644:53644	1099521	7	True				
ANR	1100758	Statement	iter	1862:17:53646:53649	1099521	8	True				
ANR	1100759	Statement	","	1862:21:53650:53650	1099521	9	True				
ANR	1100760	Statement	kv	1862:23:53652:53653	1099521	10	True				
ANR	1100761	Statement	)	1862:25:53654:53654	1099521	11	True				
ANR	1100762	CompoundStatement		161:3:4386:4420	1099521	12					
ANR	1100763	IdentifierDeclStatement	int len = strlen ( buf -> data + chr ) ;	1863:3:53661:53695	1099521	0	True				
ANR	1100764	IdentifierDecl	len = strlen ( buf -> data + chr )		1099521	0					
ANR	1100765	IdentifierDeclType	int		1099521	0					
ANR	1100766	Identifier	len		1099521	1					
ANR	1100767	AssignmentExpression	len = strlen ( buf -> data + chr )		1099521	2		=			
ANR	1100768	Identifier	len		1099521	0					
ANR	1100769	CallExpression	strlen ( buf -> data + chr )		1099521	1					
ANR	1100770	Callee	strlen		1099521	0					
ANR	1100771	Identifier	strlen		1099521	0					
ANR	1100772	ArgumentList	buf -> data + chr		1099521	1					
ANR	1100773	Argument	buf -> data + chr		1099521	0					
ANR	1100774	AdditiveExpression	buf -> data + chr		1099521	0		+			
ANR	1100775	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100776	Identifier	buf		1099521	0					
ANR	1100777	Identifier	data		1099521	1					
ANR	1100778	Identifier	chr		1099521	1					
ANR	1100779	IfStatement	"if ( ! len || ! strncmp ( buf -> data + chr , sdbkv_key ( kv ) , len ) )"		1099521	1					
ANR	1100780	Condition	"! len || ! strncmp ( buf -> data + chr , sdbkv_key ( kv ) , len )"	1864:7:53704:53758	1099521	0	True				
ANR	1100781	OrExpression	"! len || ! strncmp ( buf -> data + chr , sdbkv_key ( kv ) , len )"		1099521	0		||			
ANR	1100782	UnaryOperationExpression	! len		1099521	0					
ANR	1100783	UnaryOperator	!		1099521	0					
ANR	1100784	Identifier	len		1099521	1					
ANR	1100785	UnaryOperationExpression	"! strncmp ( buf -> data + chr , sdbkv_key ( kv ) , len )"		1099521	1					
ANR	1100786	UnaryOperator	!		1099521	0					
ANR	1100787	CallExpression	"strncmp ( buf -> data + chr , sdbkv_key ( kv ) , len )"		1099521	1					
ANR	1100788	Callee	strncmp		1099521	0					
ANR	1100789	Identifier	strncmp		1099521	0					
ANR	1100790	ArgumentList	buf -> data + chr		1099521	1					
ANR	1100791	Argument	buf -> data + chr		1099521	0					
ANR	1100792	AdditiveExpression	buf -> data + chr		1099521	0		+			
ANR	1100793	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100794	Identifier	buf		1099521	0					
ANR	1100795	Identifier	data		1099521	1					
ANR	1100796	Identifier	chr		1099521	1					
ANR	1100797	Argument	sdbkv_key ( kv )		1099521	1					
ANR	1100798	CallExpression	sdbkv_key ( kv )		1099521	0					
ANR	1100799	Callee	sdbkv_key		1099521	0					
ANR	1100800	Identifier	sdbkv_key		1099521	0					
ANR	1100801	ArgumentList	kv		1099521	1					
ANR	1100802	Argument	kv		1099521	0					
ANR	1100803	Identifier	kv		1099521	0					
ANR	1100804	Argument	len		1099521	2					
ANR	1100805	Identifier	len		1099521	0					
ANR	1100806	CompoundStatement		162:64:4486:4486	1099521	1					
ANR	1100807	IfStatement	"if ( ! strcmp ( sdbkv_value ( kv ) , ""type"" ) || ! strcmp ( sdbkv_value ( kv ) , ""enum"" ) || ! strcmp ( sdbkv_value ( kv ) , ""struct"" ) )"		1099521	0					
ANR	1100808	Condition	"! strcmp ( sdbkv_value ( kv ) , ""type"" ) || ! strcmp ( sdbkv_value ( kv ) , ""enum"" ) || ! strcmp ( sdbkv_value ( kv ) , ""struct"" )"	1865:8:53771:53886	1099521	0	True				
ANR	1100809	OrExpression	"! strcmp ( sdbkv_value ( kv ) , ""type"" ) || ! strcmp ( sdbkv_value ( kv ) , ""enum"" ) || ! strcmp ( sdbkv_value ( kv ) , ""struct"" )"		1099521	0		||			
ANR	1100810	UnaryOperationExpression	"! strcmp ( sdbkv_value ( kv ) , ""type"" )"		1099521	0					
ANR	1100811	UnaryOperator	!		1099521	0					
ANR	1100812	CallExpression	"strcmp ( sdbkv_value ( kv ) , ""type"" )"		1099521	1					
ANR	1100813	Callee	strcmp		1099521	0					
ANR	1100814	Identifier	strcmp		1099521	0					
ANR	1100815	ArgumentList	sdbkv_value ( kv )		1099521	1					
ANR	1100816	Argument	sdbkv_value ( kv )		1099521	0					
ANR	1100817	CallExpression	sdbkv_value ( kv )		1099521	0					
ANR	1100818	Callee	sdbkv_value		1099521	0					
ANR	1100819	Identifier	sdbkv_value		1099521	0					
ANR	1100820	ArgumentList	kv		1099521	1					
ANR	1100821	Argument	kv		1099521	0					
ANR	1100822	Identifier	kv		1099521	0					
ANR	1100823	Argument	"""type"""		1099521	1					
ANR	1100824	PrimaryExpression	"""type"""		1099521	0					
ANR	1100825	OrExpression	"! strcmp ( sdbkv_value ( kv ) , ""enum"" ) || ! strcmp ( sdbkv_value ( kv ) , ""struct"" )"		1099521	1		||			
ANR	1100826	UnaryOperationExpression	"! strcmp ( sdbkv_value ( kv ) , ""enum"" )"		1099521	0					
ANR	1100827	UnaryOperator	!		1099521	0					
ANR	1100828	CallExpression	"strcmp ( sdbkv_value ( kv ) , ""enum"" )"		1099521	1					
ANR	1100829	Callee	strcmp		1099521	0					
ANR	1100830	Identifier	strcmp		1099521	0					
ANR	1100831	ArgumentList	sdbkv_value ( kv )		1099521	1					
ANR	1100832	Argument	sdbkv_value ( kv )		1099521	0					
ANR	1100833	CallExpression	sdbkv_value ( kv )		1099521	0					
ANR	1100834	Callee	sdbkv_value		1099521	0					
ANR	1100835	Identifier	sdbkv_value		1099521	0					
ANR	1100836	ArgumentList	kv		1099521	1					
ANR	1100837	Argument	kv		1099521	0					
ANR	1100838	Identifier	kv		1099521	0					
ANR	1100839	Argument	"""enum"""		1099521	1					
ANR	1100840	PrimaryExpression	"""enum"""		1099521	0					
ANR	1100841	UnaryOperationExpression	"! strcmp ( sdbkv_value ( kv ) , ""struct"" )"		1099521	1					
ANR	1100842	UnaryOperator	!		1099521	0					
ANR	1100843	CallExpression	"strcmp ( sdbkv_value ( kv ) , ""struct"" )"		1099521	1					
ANR	1100844	Callee	strcmp		1099521	0					
ANR	1100845	Identifier	strcmp		1099521	0					
ANR	1100846	ArgumentList	sdbkv_value ( kv )		1099521	1					
ANR	1100847	Argument	sdbkv_value ( kv )		1099521	0					
ANR	1100848	CallExpression	sdbkv_value ( kv )		1099521	0					
ANR	1100849	Callee	sdbkv_value		1099521	0					
ANR	1100850	Identifier	sdbkv_value		1099521	0					
ANR	1100851	ArgumentList	kv		1099521	1					
ANR	1100852	Argument	kv		1099521	0					
ANR	1100853	Identifier	kv		1099521	0					
ANR	1100854	Argument	"""struct"""		1099521	1					
ANR	1100855	PrimaryExpression	"""struct"""		1099521	0					
ANR	1100856	CompoundStatement		164:45:4614:4614	1099521	1					
ANR	1100857	ExpressionStatement	"r_line_completion_push ( completion , sdbkv_key ( kv ) )"	1867:5:53896:53947	1099521	0	True				
ANR	1100858	CallExpression	"r_line_completion_push ( completion , sdbkv_key ( kv ) )"		1099521	0					
ANR	1100859	Callee	r_line_completion_push		1099521	0					
ANR	1100860	Identifier	r_line_completion_push		1099521	0					
ANR	1100861	ArgumentList	completion		1099521	1					
ANR	1100862	Argument	completion		1099521	0					
ANR	1100863	Identifier	completion		1099521	0					
ANR	1100864	Argument	sdbkv_key ( kv )		1099521	1					
ANR	1100865	CallExpression	sdbkv_key ( kv )		1099521	0					
ANR	1100866	Callee	sdbkv_key		1099521	0					
ANR	1100867	Identifier	sdbkv_key		1099521	0					
ANR	1100868	ArgumentList	kv		1099521	1					
ANR	1100869	Argument	kv		1099521	0					
ANR	1100870	Identifier	kv		1099521	0					
ANR	1100871	ExpressionStatement	ls_free ( l )	1871:2:53966:53977	1099521	13	True				
ANR	1100872	CallExpression	ls_free ( l )		1099521	0					
ANR	1100873	Callee	ls_free		1099521	0					
ANR	1100874	Identifier	ls_free		1099521	0					
ANR	1100875	ArgumentList	l		1099521	1					
ANR	1100876	Argument	l		1099521	0					
ANR	1100877	Identifier	l		1099521	0					
ANR	1100878	ElseStatement	else		1099521	0					
ANR	1100879	IfStatement	"if ( ( ! strncmp ( buf -> data , ""te "" , 3 ) ) )"		1099521	0					
ANR	1100880	Condition	"! strncmp ( buf -> data , ""te "" , 3 )"	1872:12:53991:54022	1099521	0	True				
ANR	1100881	UnaryOperationExpression	"! strncmp ( buf -> data , ""te "" , 3 )"		1099521	0					
ANR	1100882	UnaryOperator	!		1099521	0					
ANR	1100883	CallExpression	"strncmp ( buf -> data , ""te "" , 3 )"		1099521	1					
ANR	1100884	Callee	strncmp		1099521	0					
ANR	1100885	Identifier	strncmp		1099521	0					
ANR	1100886	ArgumentList	buf -> data		1099521	1					
ANR	1100887	Argument	buf -> data		1099521	0					
ANR	1100888	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100889	Identifier	buf		1099521	0					
ANR	1100890	Identifier	data		1099521	1					
ANR	1100891	Argument	"""te """		1099521	1					
ANR	1100892	PrimaryExpression	"""te """		1099521	0					
ANR	1100893	Argument	3		1099521	2					
ANR	1100894	PrimaryExpression	3		1099521	0					
ANR	1100895	CompoundStatement		174:2:4851:4862	1099521	1					
ANR	1100896	IdentifierDeclStatement	"SdbList * l = sdb_foreach_list ( core -> anal -> sdb_types , true ) ;"	1873:2:54029:54088	1099521	0	True				
ANR	1100897	IdentifierDecl	"* l = sdb_foreach_list ( core -> anal -> sdb_types , true )"		1099521	0					
ANR	1100898	IdentifierDeclType	SdbList *		1099521	0					
ANR	1100899	Identifier	l		1099521	1					
ANR	1100900	AssignmentExpression	"* l = sdb_foreach_list ( core -> anal -> sdb_types , true )"		1099521	2		=			
ANR	1100901	Identifier	l		1099521	0					
ANR	1100902	CallExpression	"sdb_foreach_list ( core -> anal -> sdb_types , true )"		1099521	1					
ANR	1100903	Callee	sdb_foreach_list		1099521	0					
ANR	1100904	Identifier	sdb_foreach_list		1099521	0					
ANR	1100905	ArgumentList	core -> anal -> sdb_types		1099521	1					
ANR	1100906	Argument	core -> anal -> sdb_types		1099521	0					
ANR	1100907	PtrMemberAccess	core -> anal -> sdb_types		1099521	0					
ANR	1100908	PtrMemberAccess	core -> anal		1099521	0					
ANR	1100909	Identifier	core		1099521	0					
ANR	1100910	Identifier	anal		1099521	1					
ANR	1100911	Identifier	sdb_types		1099521	1					
ANR	1100912	Argument	true		1099521	1					
ANR	1100913	Identifier	true		1099521	0					
ANR	1100914	IdentifierDeclStatement	SdbListIter * iter ;	1874:2:54092:54109	1099521	1	True				
ANR	1100915	IdentifierDecl	* iter		1099521	0					
ANR	1100916	IdentifierDeclType	SdbListIter *		1099521	0					
ANR	1100917	Identifier	iter		1099521	1					
ANR	1100918	IdentifierDeclStatement	SdbKv * kv ;	1875:2:54113:54122	1099521	2	True				
ANR	1100919	IdentifierDecl	* kv		1099521	0					
ANR	1100920	IdentifierDeclType	SdbKv *		1099521	0					
ANR	1100921	Identifier	kv		1099521	1					
ANR	1100922	IdentifierDeclStatement	int chr = 3 ;	1876:2:54126:54137	1099521	3	True				
ANR	1100923	IdentifierDecl	chr = 3		1099521	0					
ANR	1100924	IdentifierDeclType	int		1099521	0					
ANR	1100925	Identifier	chr		1099521	1					
ANR	1100926	AssignmentExpression	chr = 3		1099521	2		=			
ANR	1100927	Identifier	chr		1099521	0					
ANR	1100928	PrimaryExpression	3		1099521	1					
ANR	1100929	Statement	ls_foreach	1877:2:54141:54150	1099521	4	True				
ANR	1100930	Statement	(	1877:13:54152:54152	1099521	5	True				
ANR	1100931	Statement	l	1877:14:54153:54153	1099521	6	True				
ANR	1100932	Statement	","	1877:15:54154:54154	1099521	7	True				
ANR	1100933	Statement	iter	1877:17:54156:54159	1099521	8	True				
ANR	1100934	Statement	","	1877:21:54160:54160	1099521	9	True				
ANR	1100935	Statement	kv	1877:23:54162:54163	1099521	10	True				
ANR	1100936	Statement	)	1877:25:54164:54164	1099521	11	True				
ANR	1100937	CompoundStatement		176:3:4896:4930	1099521	12					
ANR	1100938	IdentifierDeclStatement	int len = strlen ( buf -> data + chr ) ;	1878:3:54171:54205	1099521	0	True				
ANR	1100939	IdentifierDecl	len = strlen ( buf -> data + chr )		1099521	0					
ANR	1100940	IdentifierDeclType	int		1099521	0					
ANR	1100941	Identifier	len		1099521	1					
ANR	1100942	AssignmentExpression	len = strlen ( buf -> data + chr )		1099521	2		=			
ANR	1100943	Identifier	len		1099521	0					
ANR	1100944	CallExpression	strlen ( buf -> data + chr )		1099521	1					
ANR	1100945	Callee	strlen		1099521	0					
ANR	1100946	Identifier	strlen		1099521	0					
ANR	1100947	ArgumentList	buf -> data + chr		1099521	1					
ANR	1100948	Argument	buf -> data + chr		1099521	0					
ANR	1100949	AdditiveExpression	buf -> data + chr		1099521	0		+			
ANR	1100950	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100951	Identifier	buf		1099521	0					
ANR	1100952	Identifier	data		1099521	1					
ANR	1100953	Identifier	chr		1099521	1					
ANR	1100954	IfStatement	"if ( ! len || ! strncmp ( buf -> data + chr , sdbkv_key ( kv ) , len ) )"		1099521	1					
ANR	1100955	Condition	"! len || ! strncmp ( buf -> data + chr , sdbkv_key ( kv ) , len )"	1879:7:54214:54268	1099521	0	True				
ANR	1100956	OrExpression	"! len || ! strncmp ( buf -> data + chr , sdbkv_key ( kv ) , len )"		1099521	0		||			
ANR	1100957	UnaryOperationExpression	! len		1099521	0					
ANR	1100958	UnaryOperator	!		1099521	0					
ANR	1100959	Identifier	len		1099521	1					
ANR	1100960	UnaryOperationExpression	"! strncmp ( buf -> data + chr , sdbkv_key ( kv ) , len )"		1099521	1					
ANR	1100961	UnaryOperator	!		1099521	0					
ANR	1100962	CallExpression	"strncmp ( buf -> data + chr , sdbkv_key ( kv ) , len )"		1099521	1					
ANR	1100963	Callee	strncmp		1099521	0					
ANR	1100964	Identifier	strncmp		1099521	0					
ANR	1100965	ArgumentList	buf -> data + chr		1099521	1					
ANR	1100966	Argument	buf -> data + chr		1099521	0					
ANR	1100967	AdditiveExpression	buf -> data + chr		1099521	0		+			
ANR	1100968	PtrMemberAccess	buf -> data		1099521	0					
ANR	1100969	Identifier	buf		1099521	0					
ANR	1100970	Identifier	data		1099521	1					
ANR	1100971	Identifier	chr		1099521	1					
ANR	1100972	Argument	sdbkv_key ( kv )		1099521	1					
ANR	1100973	CallExpression	sdbkv_key ( kv )		1099521	0					
ANR	1100974	Callee	sdbkv_key		1099521	0					
ANR	1100975	Identifier	sdbkv_key		1099521	0					
ANR	1100976	ArgumentList	kv		1099521	1					
ANR	1100977	Argument	kv		1099521	0					
ANR	1100978	Identifier	kv		1099521	0					
ANR	1100979	Argument	len		1099521	2					
ANR	1100980	Identifier	len		1099521	0					
ANR	1100981	CompoundStatement		177:64:4996:4996	1099521	1					
ANR	1100982	IfStatement	"if ( ! strcmp ( sdbkv_value ( kv ) , ""enum"" ) )"		1099521	0					
ANR	1100983	Condition	"! strcmp ( sdbkv_value ( kv ) , ""enum"" )"	1880:8:54281:54314	1099521	0	True				
ANR	1100984	UnaryOperationExpression	"! strcmp ( sdbkv_value ( kv ) , ""enum"" )"		1099521	0					
ANR	1100985	UnaryOperator	!		1099521	0					
ANR	1100986	CallExpression	"strcmp ( sdbkv_value ( kv ) , ""enum"" )"		1099521	1					
ANR	1100987	Callee	strcmp		1099521	0					
ANR	1100988	Identifier	strcmp		1099521	0					
ANR	1100989	ArgumentList	sdbkv_value ( kv )		1099521	1					
ANR	1100990	Argument	sdbkv_value ( kv )		1099521	0					
ANR	1100991	CallExpression	sdbkv_value ( kv )		1099521	0					
ANR	1100992	Callee	sdbkv_value		1099521	0					
ANR	1100993	Identifier	sdbkv_value		1099521	0					
ANR	1100994	ArgumentList	kv		1099521	1					
ANR	1100995	Argument	kv		1099521	0					
ANR	1100996	Identifier	kv		1099521	0					
ANR	1100997	Argument	"""enum"""		1099521	1					
ANR	1100998	PrimaryExpression	"""enum"""		1099521	0					
ANR	1100999	CompoundStatement		178:44:5042:5042	1099521	1					
ANR	1101000	ExpressionStatement	"r_line_completion_push ( completion , sdbkv_key ( kv ) )"	1881:5:54324:54375	1099521	0	True				
ANR	1101001	CallExpression	"r_line_completion_push ( completion , sdbkv_key ( kv ) )"		1099521	0					
ANR	1101002	Callee	r_line_completion_push		1099521	0					
ANR	1101003	Identifier	r_line_completion_push		1099521	0					
ANR	1101004	ArgumentList	completion		1099521	1					
ANR	1101005	Argument	completion		1099521	0					
ANR	1101006	Identifier	completion		1099521	0					
ANR	1101007	Argument	sdbkv_key ( kv )		1099521	1					
ANR	1101008	CallExpression	sdbkv_key ( kv )		1099521	0					
ANR	1101009	Callee	sdbkv_key		1099521	0					
ANR	1101010	Identifier	sdbkv_key		1099521	0					
ANR	1101011	ArgumentList	kv		1099521	1					
ANR	1101012	Argument	kv		1099521	0					
ANR	1101013	Identifier	kv		1099521	0					
ANR	1101014	ExpressionStatement	ls_free ( l )	1885:2:54394:54405	1099521	13	True				
ANR	1101015	CallExpression	ls_free ( l )		1099521	0					
ANR	1101016	Callee	ls_free		1099521	0					
ANR	1101017	Identifier	ls_free		1099521	0					
ANR	1101018	ArgumentList	l		1099521	1					
ANR	1101019	Argument	l		1099521	0					
ANR	1101020	Identifier	l		1099521	0					
ANR	1101021	ElseStatement	else		1099521	0					
ANR	1101022	IfStatement	"if ( ! strncmp ( buf -> data , ""$"" , 1 ) )"		1099521	0					
ANR	1101023	Condition	"! strncmp ( buf -> data , ""$"" , 1 )"	1886:12:54419:54446	1099521	0	True				
ANR	1101024	UnaryOperationExpression	"! strncmp ( buf -> data , ""$"" , 1 )"		1099521	0					
ANR	1101025	UnaryOperator	!		1099521	0					
ANR	1101026	CallExpression	"strncmp ( buf -> data , ""$"" , 1 )"		1099521	1					
ANR	1101027	Callee	strncmp		1099521	0					
ANR	1101028	Identifier	strncmp		1099521	0					
ANR	1101029	ArgumentList	buf -> data		1099521	1					
ANR	1101030	Argument	buf -> data		1099521	0					
ANR	1101031	PtrMemberAccess	buf -> data		1099521	0					
ANR	1101032	Identifier	buf		1099521	0					
ANR	1101033	Identifier	data		1099521	1					
ANR	1101034	Argument	"""$"""		1099521	1					
ANR	1101035	PrimaryExpression	"""$"""		1099521	0					
ANR	1101036	Argument	1		1099521	2					
ANR	1101037	PrimaryExpression	1		1099521	0					
ANR	1101038	CompoundStatement		185:2:5178:5183	1099521	1					
ANR	1101039	IdentifierDeclStatement	int i ;	1887:2:54453:54458	1099521	0	True				
ANR	1101040	IdentifierDecl	i		1099521	0					
ANR	1101041	IdentifierDeclType	int		1099521	0					
ANR	1101042	Identifier	i		1099521	1					
ANR	1101043	ForStatement	for ( i = 0 ; i < core -> rcmd -> aliases . count ; i ++ )		1099521	1					
ANR	1101044	ForInit	i = 0 ;	1888:7:54467:54472	1099521	0	True				
ANR	1101045	AssignmentExpression	i = 0		1099521	0		=			
ANR	1101046	Identifier	i		1099521	0					
ANR	1101047	PrimaryExpression	0		1099521	1					
ANR	1101048	Condition	i < core -> rcmd -> aliases . count	1888:14:54474:54502	1099521	1	True				
ANR	1101049	RelationalExpression	i < core -> rcmd -> aliases . count		1099521	0		<			
ANR	1101050	Identifier	i		1099521	0					
ANR	1101051	MemberAccess	core -> rcmd -> aliases . count		1099521	1					
ANR	1101052	PtrMemberAccess	core -> rcmd -> aliases		1099521	0					
ANR	1101053	PtrMemberAccess	core -> rcmd		1099521	0					
ANR	1101054	Identifier	core		1099521	0					
ANR	1101055	Identifier	rcmd		1099521	1					
ANR	1101056	Identifier	aliases		1099521	1					
ANR	1101057	Identifier	count		1099521	1					
ANR	1101058	PostIncDecOperationExpression	i ++	1888:45:54505:54507	1099521	2	True				
ANR	1101059	Identifier	i		1099521	0					
ANR	1101060	IncDec	++		1099521	1					
ANR	1101061	CompoundStatement		188:3:5290:5318	1099521	3					
ANR	1101062	IdentifierDeclStatement	const char * key = core -> rcmd -> aliases . keys [ i ] ;	1889:3:54515:54560	1099521	0	True				
ANR	1101063	IdentifierDecl	* key = core -> rcmd -> aliases . keys [ i ]		1099521	0					
ANR	1101064	IdentifierDeclType	const char *		1099521	0					
ANR	1101065	Identifier	key		1099521	1					
ANR	1101066	AssignmentExpression	* key = core -> rcmd -> aliases . keys [ i ]		1099521	2		=			
ANR	1101067	Identifier	key		1099521	0					
ANR	1101068	ArrayIndexing	core -> rcmd -> aliases . keys [ i ]		1099521	1					
ANR	1101069	MemberAccess	core -> rcmd -> aliases . keys		1099521	0					
ANR	1101070	PtrMemberAccess	core -> rcmd -> aliases		1099521	0					
ANR	1101071	PtrMemberAccess	core -> rcmd		1099521	0					
ANR	1101072	Identifier	core		1099521	0					
ANR	1101073	Identifier	rcmd		1099521	1					
ANR	1101074	Identifier	aliases		1099521	1					
ANR	1101075	Identifier	keys		1099521	1					
ANR	1101076	Identifier	i		1099521	1					
ANR	1101077	IdentifierDeclStatement	int len = strlen ( buf -> data ) ;	1890:3:54565:54593	1099521	1	True				
ANR	1101078	IdentifierDecl	len = strlen ( buf -> data )		1099521	0					
ANR	1101079	IdentifierDeclType	int		1099521	0					
ANR	1101080	Identifier	len		1099521	1					
ANR	1101081	AssignmentExpression	len = strlen ( buf -> data )		1099521	2		=			
ANR	1101082	Identifier	len		1099521	0					
ANR	1101083	CallExpression	strlen ( buf -> data )		1099521	1					
ANR	1101084	Callee	strlen		1099521	0					
ANR	1101085	Identifier	strlen		1099521	0					
ANR	1101086	ArgumentList	buf -> data		1099521	1					
ANR	1101087	Argument	buf -> data		1099521	0					
ANR	1101088	PtrMemberAccess	buf -> data		1099521	0					
ANR	1101089	Identifier	buf		1099521	0					
ANR	1101090	Identifier	data		1099521	1					
ANR	1101091	IfStatement	"if ( ! len || ! strncmp ( buf -> data , key , len ) )"		1099521	2					
ANR	1101092	Condition	"! len || ! strncmp ( buf -> data , key , len )"	1891:7:54602:54639	1099521	0	True				
ANR	1101093	OrExpression	"! len || ! strncmp ( buf -> data , key , len )"		1099521	0		||			
ANR	1101094	UnaryOperationExpression	! len		1099521	0					
ANR	1101095	UnaryOperator	!		1099521	0					
ANR	1101096	Identifier	len		1099521	1					
ANR	1101097	UnaryOperationExpression	"! strncmp ( buf -> data , key , len )"		1099521	1					
ANR	1101098	UnaryOperator	!		1099521	0					
ANR	1101099	CallExpression	"strncmp ( buf -> data , key , len )"		1099521	1					
ANR	1101100	Callee	strncmp		1099521	0					
ANR	1101101	Identifier	strncmp		1099521	0					
ANR	1101102	ArgumentList	buf -> data		1099521	1					
ANR	1101103	Argument	buf -> data		1099521	0					
ANR	1101104	PtrMemberAccess	buf -> data		1099521	0					
ANR	1101105	Identifier	buf		1099521	0					
ANR	1101106	Identifier	data		1099521	1					
ANR	1101107	Argument	key		1099521	1					
ANR	1101108	Identifier	key		1099521	0					
ANR	1101109	Argument	len		1099521	2					
ANR	1101110	Identifier	len		1099521	0					
ANR	1101111	CompoundStatement		189:47:5367:5367	1099521	1					
ANR	1101112	ExpressionStatement	"r_line_completion_push ( completion , key )"	1892:4:54648:54688	1099521	0	True				
ANR	1101113	CallExpression	"r_line_completion_push ( completion , key )"		1099521	0					
ANR	1101114	Callee	r_line_completion_push		1099521	0					
ANR	1101115	Identifier	r_line_completion_push		1099521	0					
ANR	1101116	ArgumentList	completion		1099521	1					
ANR	1101117	Argument	completion		1099521	0					
ANR	1101118	Identifier	completion		1099521	0					
ANR	1101119	Argument	key		1099521	1					
ANR	1101120	Identifier	key		1099521	0					
ANR	1101121	ElseStatement	else		1099521	0					
ANR	1101122	IfStatement	"if ( ! strncmp ( buf -> data , ""ts "" , 3 ) || ! strncmp ( buf -> data , ""ta "" , 3 ) || ! strncmp ( buf -> data , ""tp "" , 3 ) || ! strncmp ( buf -> data , ""tl "" , 3 ) || ! strncmp ( buf -> data , ""tpx "" , 4 ) || ! strncmp ( buf -> data , ""tss "" , 4 ) || ! strncmp ( buf -> data , ""ts* "" , 4 ) )"		1099521	0					
ANR	1101123	Condition	"! strncmp ( buf -> data , ""ts "" , 3 ) || ! strncmp ( buf -> data , ""ta "" , 3 ) || ! strncmp ( buf -> data , ""tp "" , 3 ) || ! strncmp ( buf -> data , ""tl "" , 3 ) || ! strncmp ( buf -> data , ""tpx "" , 4 ) || ! strncmp ( buf -> data , ""tss "" , 4 ) || ! strncmp ( buf -> data , ""ts* "" , 4 )"	1895:12:54711:54953	1099521	0	True				
ANR	1101124	OrExpression	"! strncmp ( buf -> data , ""ts "" , 3 ) || ! strncmp ( buf -> data , ""ta "" , 3 ) || ! strncmp ( buf -> data , ""tp "" , 3 ) || ! strncmp ( buf -> data , ""tl "" , 3 ) || ! strncmp ( buf -> data , ""tpx "" , 4 ) || ! strncmp ( buf -> data , ""tss "" , 4 ) || ! strncmp ( buf -> data , ""ts* "" , 4 )"		1099521	0		||			
ANR	1101125	UnaryOperationExpression	"! strncmp ( buf -> data , ""ts "" , 3 )"		1099521	0					
ANR	1101126	UnaryOperator	!		1099521	0					
ANR	1101127	CallExpression	"strncmp ( buf -> data , ""ts "" , 3 )"		1099521	1					
ANR	1101128	Callee	strncmp		1099521	0					
ANR	1101129	Identifier	strncmp		1099521	0					
ANR	1101130	ArgumentList	buf -> data		1099521	1					
ANR	1101131	Argument	buf -> data		1099521	0					
ANR	1101132	PtrMemberAccess	buf -> data		1099521	0					
ANR	1101133	Identifier	buf		1099521	0					
ANR	1101134	Identifier	data		1099521	1					
ANR	1101135	Argument	"""ts """		1099521	1					
ANR	1101136	PrimaryExpression	"""ts """		1099521	0					
ANR	1101137	Argument	3		1099521	2					
ANR	1101138	PrimaryExpression	3		1099521	0					
ANR	1101139	OrExpression	"! strncmp ( buf -> data , ""ta "" , 3 ) || ! strncmp ( buf -> data , ""tp "" , 3 ) || ! strncmp ( buf -> data , ""tl "" , 3 ) || ! strncmp ( buf -> data , ""tpx "" , 4 ) || ! strncmp ( buf -> data , ""tss "" , 4 ) || ! strncmp ( buf -> data , ""ts* "" , 4 )"		1099521	1		||			
ANR	1101140	UnaryOperationExpression	"! strncmp ( buf -> data , ""ta "" , 3 )"		1099521	0					
ANR	1101141	UnaryOperator	!		1099521	0					
ANR	1101142	CallExpression	"strncmp ( buf -> data , ""ta "" , 3 )"		1099521	1					
ANR	1101143	Callee	strncmp		1099521	0					
ANR	1101144	Identifier	strncmp		1099521	0					
ANR	1101145	ArgumentList	buf -> data		1099521	1					
ANR	1101146	Argument	buf -> data		1099521	0					
ANR	1101147	PtrMemberAccess	buf -> data		1099521	0					
ANR	1101148	Identifier	buf		1099521	0					
ANR	1101149	Identifier	data		1099521	1					
ANR	1101150	Argument	"""ta """		1099521	1					
ANR	1101151	PrimaryExpression	"""ta """		1099521	0					
ANR	1101152	Argument	3		1099521	2					
ANR	1101153	PrimaryExpression	3		1099521	0					
ANR	1101154	OrExpression	"! strncmp ( buf -> data , ""tp "" , 3 ) || ! strncmp ( buf -> data , ""tl "" , 3 ) || ! strncmp ( buf -> data , ""tpx "" , 4 ) || ! strncmp ( buf -> data , ""tss "" , 4 ) || ! strncmp ( buf -> data , ""ts* "" , 4 )"		1099521	1		||			
ANR	1101155	UnaryOperationExpression	"! strncmp ( buf -> data , ""tp "" , 3 )"		1099521	0					
ANR	1101156	UnaryOperator	!		1099521	0					
ANR	1101157	CallExpression	"strncmp ( buf -> data , ""tp "" , 3 )"		1099521	1					
ANR	1101158	Callee	strncmp		1099521	0					
ANR	1101159	Identifier	strncmp		1099521	0					
ANR	1101160	ArgumentList	buf -> data		1099521	1					
ANR	1101161	Argument	buf -> data		1099521	0					
ANR	1101162	PtrMemberAccess	buf -> data		1099521	0					
ANR	1101163	Identifier	buf		1099521	0					
ANR	1101164	Identifier	data		1099521	1					
ANR	1101165	Argument	"""tp """		1099521	1					
ANR	1101166	PrimaryExpression	"""tp """		1099521	0					
ANR	1101167	Argument	3		1099521	2					
ANR	1101168	PrimaryExpression	3		1099521	0					
ANR	1101169	OrExpression	"! strncmp ( buf -> data , ""tl "" , 3 ) || ! strncmp ( buf -> data , ""tpx "" , 4 ) || ! strncmp ( buf -> data , ""tss "" , 4 ) || ! strncmp ( buf -> data , ""ts* "" , 4 )"		1099521	1		||			
ANR	1101170	UnaryOperationExpression	"! strncmp ( buf -> data , ""tl "" , 3 )"		1099521	0					
ANR	1101171	UnaryOperator	!		1099521	0					
ANR	1101172	CallExpression	"strncmp ( buf -> data , ""tl "" , 3 )"		1099521	1					
ANR	1101173	Callee	strncmp		1099521	0					
ANR	1101174	Identifier	strncmp		1099521	0					
ANR	1101175	ArgumentList	buf -> data		1099521	1					
ANR	1101176	Argument	buf -> data		1099521	0					
ANR	1101177	PtrMemberAccess	buf -> data		1099521	0					
ANR	1101178	Identifier	buf		1099521	0					
ANR	1101179	Identifier	data		1099521	1					
ANR	1101180	Argument	"""tl """		1099521	1					
ANR	1101181	PrimaryExpression	"""tl """		1099521	0					
ANR	1101182	Argument	3		1099521	2					
ANR	1101183	PrimaryExpression	3		1099521	0					
ANR	1101184	OrExpression	"! strncmp ( buf -> data , ""tpx "" , 4 ) || ! strncmp ( buf -> data , ""tss "" , 4 ) || ! strncmp ( buf -> data , ""ts* "" , 4 )"		1099521	1		||			
ANR	1101185	UnaryOperationExpression	"! strncmp ( buf -> data , ""tpx "" , 4 )"		1099521	0					
ANR	1101186	UnaryOperator	!		1099521	0					
ANR	1101187	CallExpression	"strncmp ( buf -> data , ""tpx "" , 4 )"		1099521	1					
ANR	1101188	Callee	strncmp		1099521	0					
ANR	1101189	Identifier	strncmp		1099521	0					
ANR	1101190	ArgumentList	buf -> data		1099521	1					
ANR	1101191	Argument	buf -> data		1099521	0					
ANR	1101192	PtrMemberAccess	buf -> data		1099521	0					
ANR	1101193	Identifier	buf		1099521	0					
ANR	1101194	Identifier	data		1099521	1					
ANR	1101195	Argument	"""tpx """		1099521	1					
ANR	1101196	PrimaryExpression	"""tpx """		1099521	0					
ANR	1101197	Argument	4		1099521	2					
ANR	1101198	PrimaryExpression	4		1099521	0					
ANR	1101199	OrExpression	"! strncmp ( buf -> data , ""tss "" , 4 ) || ! strncmp ( buf -> data , ""ts* "" , 4 )"		1099521	1		||			
ANR	1101200	UnaryOperationExpression	"! strncmp ( buf -> data , ""tss "" , 4 )"		1099521	0					
ANR	1101201	UnaryOperator	!		1099521	0					
ANR	1101202	CallExpression	"strncmp ( buf -> data , ""tss "" , 4 )"		1099521	1					
ANR	1101203	Callee	strncmp		1099521	0					
ANR	1101204	Identifier	strncmp		1099521	0					
ANR	1101205	ArgumentList	buf -> data		1099521	1					
ANR	1101206	Argument	buf -> data		1099521	0					
ANR	1101207	PtrMemberAccess	buf -> data		1099521	0					
ANR	1101208	Identifier	buf		1099521	0					
ANR	1101209	Identifier	data		1099521	1					
ANR	1101210	Argument	"""tss """		1099521	1					
ANR	1101211	PrimaryExpression	"""tss """		1099521	0					
ANR	1101212	Argument	4		1099521	2					
ANR	1101213	PrimaryExpression	4		1099521	0					
ANR	1101214	UnaryOperationExpression	"! strncmp ( buf -> data , ""ts* "" , 4 )"		1099521	1					
ANR	1101215	UnaryOperator	!		1099521	0					
ANR	1101216	CallExpression	"strncmp ( buf -> data , ""ts* "" , 4 )"		1099521	1					
ANR	1101217	Callee	strncmp		1099521	0					
ANR	1101218	Identifier	strncmp		1099521	0					
ANR	1101219	ArgumentList	buf -> data		1099521	1					
ANR	1101220	Argument	buf -> data		1099521	0					
ANR	1101221	PtrMemberAccess	buf -> data		1099521	0					
ANR	1101222	Identifier	buf		1099521	0					
ANR	1101223	Identifier	data		1099521	1					
ANR	1101224	Argument	"""ts* """		1099521	1					
ANR	1101225	PrimaryExpression	"""ts* """		1099521	0					
ANR	1101226	Argument	4		1099521	2					
ANR	1101227	PrimaryExpression	4		1099521	0					
ANR	1101228	CompoundStatement		203:2:5782:5819	1099521	1					
ANR	1101229	IdentifierDeclStatement	"SdbList * l = sdb_foreach_list ( core -> anal -> sdb_types , true ) ;"	1902:2:54960:55019	1099521	0	True				
ANR	1101230	IdentifierDecl	"* l = sdb_foreach_list ( core -> anal -> sdb_types , true )"		1099521	0					
ANR	1101231	IdentifierDeclType	SdbList *		1099521	0					
ANR	1101232	Identifier	l		1099521	1					
ANR	1101233	AssignmentExpression	"* l = sdb_foreach_list ( core -> anal -> sdb_types , true )"		1099521	2		=			
ANR	1101234	Identifier	l		1099521	0					
ANR	1101235	CallExpression	"sdb_foreach_list ( core -> anal -> sdb_types , true )"		1099521	1					
ANR	1101236	Callee	sdb_foreach_list		1099521	0					
ANR	1101237	Identifier	sdb_foreach_list		1099521	0					
ANR	1101238	ArgumentList	core -> anal -> sdb_types		1099521	1					
ANR	1101239	Argument	core -> anal -> sdb_types		1099521	0					
ANR	1101240	PtrMemberAccess	core -> anal -> sdb_types		1099521	0					
ANR	1101241	PtrMemberAccess	core -> anal		1099521	0					
ANR	1101242	Identifier	core		1099521	0					
ANR	1101243	Identifier	anal		1099521	1					
ANR	1101244	Identifier	sdb_types		1099521	1					
ANR	1101245	Argument	true		1099521	1					
ANR	1101246	Identifier	true		1099521	0					
ANR	1101247	IdentifierDeclStatement	SdbListIter * iter ;	1903:2:55023:55040	1099521	1	True				
ANR	1101248	IdentifierDecl	* iter		1099521	0					
ANR	1101249	IdentifierDeclType	SdbListIter *		1099521	0					
ANR	1101250	Identifier	iter		1099521	1					
ANR	1101251	IdentifierDeclStatement	SdbKv * kv ;	1904:2:55044:55053	1099521	2	True				
ANR	1101252	IdentifierDecl	* kv		1099521	0					
ANR	1101253	IdentifierDeclType	SdbKv *		1099521	0					
ANR	1101254	Identifier	kv		1099521	1					
ANR	1101255	IdentifierDeclStatement	int chr = ( buf -> data [ 2 ] == ' ' ) ? 3 : 4 ;	1905:2:55057:55094	1099521	3	True				
ANR	1101256	IdentifierDecl	chr = ( buf -> data [ 2 ] == ' ' ) ? 3 : 4		1099521	0					
ANR	1101257	IdentifierDeclType	int		1099521	0					
ANR	1101258	Identifier	chr		1099521	1					
ANR	1101259	AssignmentExpression	chr = ( buf -> data [ 2 ] == ' ' ) ? 3 : 4		1099521	2		=			
ANR	1101260	Identifier	chr		1099521	0					
ANR	1101261	ConditionalExpression	( buf -> data [ 2 ] == ' ' ) ? 3 : 4		1099521	1					
ANR	1101262	Condition	buf -> data [ 2 ] == ' '		1099521	0					
ANR	1101263	EqualityExpression	buf -> data [ 2 ] == ' '		1099521	0		==			
ANR	1101264	ArrayIndexing	buf -> data [ 2 ]		1099521	0					
ANR	1101265	PtrMemberAccess	buf -> data		1099521	0					
ANR	1101266	Identifier	buf		1099521	0					
ANR	1101267	Identifier	data		1099521	1					
ANR	1101268	PrimaryExpression	2		1099521	1					
ANR	1101269	PrimaryExpression	' '		1099521	1					
ANR	1101270	PrimaryExpression	3		1099521	1					
ANR	1101271	PrimaryExpression	4		1099521	2					
ANR	1101272	Statement	ls_foreach	1906:2:55098:55107	1099521	4	True				
ANR	1101273	Statement	(	1906:13:55109:55109	1099521	5	True				
ANR	1101274	Statement	l	1906:14:55110:55110	1099521	6	True				
ANR	1101275	Statement	","	1906:15:55111:55111	1099521	7	True				
ANR	1101276	Statement	iter	1906:17:55113:55116	1099521	8	True				
ANR	1101277	Statement	","	1906:21:55117:55117	1099521	9	True				
ANR	1101278	Statement	kv	1906:23:55119:55120	1099521	10	True				
ANR	1101279	Statement	)	1906:25:55121:55121	1099521	11	True				
ANR	1101280	CompoundStatement		206:3:5892:5924	1099521	12					
ANR	1101281	IdentifierDeclStatement	int len = strlen ( buf -> data + chr ) ;	1907:3:55128:55162	1099521	0	True				
ANR	1101282	IdentifierDecl	len = strlen ( buf -> data + chr )		1099521	0					
ANR	1101283	IdentifierDeclType	int		1099521	0					
ANR	1101284	Identifier	len		1099521	1					
ANR	1101285	AssignmentExpression	len = strlen ( buf -> data + chr )		1099521	2		=			
ANR	1101286	Identifier	len		1099521	0					
ANR	1101287	CallExpression	strlen ( buf -> data + chr )		1099521	1					
ANR	1101288	Callee	strlen		1099521	0					
ANR	1101289	Identifier	strlen		1099521	0					
ANR	1101290	ArgumentList	buf -> data + chr		1099521	1					
ANR	1101291	Argument	buf -> data + chr		1099521	0					
ANR	1101292	AdditiveExpression	buf -> data + chr		1099521	0		+			
ANR	1101293	PtrMemberAccess	buf -> data		1099521	0					
ANR	1101294	Identifier	buf		1099521	0					
ANR	1101295	Identifier	data		1099521	1					
ANR	1101296	Identifier	chr		1099521	1					
ANR	1101297	IdentifierDeclStatement	const char * key = sdbkv_key ( kv ) ;	1908:3:55167:55199	1099521	1	True				
ANR	1101298	IdentifierDecl	* key = sdbkv_key ( kv )		1099521	0					
ANR	1101299	IdentifierDeclType	const char *		1099521	0					
ANR	1101300	Identifier	key		1099521	1					
ANR	1101301	AssignmentExpression	* key = sdbkv_key ( kv )		1099521	2		=			
ANR	1101302	Identifier	key		1099521	0					
ANR	1101303	CallExpression	sdbkv_key ( kv )		1099521	1					
ANR	1101304	Callee	sdbkv_key		1099521	0					
ANR	1101305	Identifier	sdbkv_key		1099521	0					
ANR	1101306	ArgumentList	kv		1099521	1					
ANR	1101307	Argument	kv		1099521	0					
ANR	1101308	Identifier	kv		1099521	0					
ANR	1101309	IfStatement	"if ( ! len || ! strncmp ( buf -> data + chr , key , len ) )"		1099521	2					
ANR	1101310	Condition	"! len || ! strncmp ( buf -> data + chr , key , len )"	1909:7:55208:55251	1099521	0	True				
ANR	1101311	OrExpression	"! len || ! strncmp ( buf -> data + chr , key , len )"		1099521	0		||			
ANR	1101312	UnaryOperationExpression	! len		1099521	0					
ANR	1101313	UnaryOperator	!		1099521	0					
ANR	1101314	Identifier	len		1099521	1					
ANR	1101315	UnaryOperationExpression	"! strncmp ( buf -> data + chr , key , len )"		1099521	1					
ANR	1101316	UnaryOperator	!		1099521	0					
ANR	1101317	CallExpression	"strncmp ( buf -> data + chr , key , len )"		1099521	1					
ANR	1101318	Callee	strncmp		1099521	0					
ANR	1101319	Identifier	strncmp		1099521	0					
ANR	1101320	ArgumentList	buf -> data + chr		1099521	1					
ANR	1101321	Argument	buf -> data + chr		1099521	0					
ANR	1101322	AdditiveExpression	buf -> data + chr		1099521	0		+			
ANR	1101323	PtrMemberAccess	buf -> data		1099521	0					
ANR	1101324	Identifier	buf		1099521	0					
ANR	1101325	Identifier	data		1099521	1					
ANR	1101326	Identifier	chr		1099521	1					
ANR	1101327	Argument	key		1099521	1					
ANR	1101328	Identifier	key		1099521	0					
ANR	1101329	Argument	len		1099521	2					
ANR	1101330	Identifier	len		1099521	0					
ANR	1101331	CompoundStatement		207:53:5979:5979	1099521	1					
ANR	1101332	IfStatement	"if ( ! strncmp ( sdbkv_value ( kv ) , ""struct"" , strlen ( ""struct"" ) + 1 ) )"		1099521	0					
ANR	1101333	Condition	"! strncmp ( sdbkv_value ( kv ) , ""struct"" , strlen ( ""struct"" ) + 1 )"	1910:8:55264:55323	1099521	0	True				
ANR	1101334	UnaryOperationExpression	"! strncmp ( sdbkv_value ( kv ) , ""struct"" , strlen ( ""struct"" ) + 1 )"		1099521	0					
ANR	1101335	UnaryOperator	!		1099521	0					
ANR	1101336	CallExpression	"strncmp ( sdbkv_value ( kv ) , ""struct"" , strlen ( ""struct"" ) + 1 )"		1099521	1					
ANR	1101337	Callee	strncmp		1099521	0					
ANR	1101338	Identifier	strncmp		1099521	0					
ANR	1101339	ArgumentList	sdbkv_value ( kv )		1099521	1					
ANR	1101340	Argument	sdbkv_value ( kv )		1099521	0					
ANR	1101341	CallExpression	sdbkv_value ( kv )		1099521	0					
ANR	1101342	Callee	sdbkv_value		1099521	0					
ANR	1101343	Identifier	sdbkv_value		1099521	0					
ANR	1101344	ArgumentList	kv		1099521	1					
ANR	1101345	Argument	kv		1099521	0					
ANR	1101346	Identifier	kv		1099521	0					
ANR	1101347	Argument	"""struct"""		1099521	1					
ANR	1101348	PrimaryExpression	"""struct"""		1099521	0					
ANR	1101349	Argument	"strlen ( ""struct"" ) + 1"		1099521	2					
ANR	1101350	AdditiveExpression	"strlen ( ""struct"" ) + 1"		1099521	0		+			
ANR	1101351	CallExpression	"strlen ( ""struct"" )"		1099521	0					
ANR	1101352	Callee	strlen		1099521	0					
ANR	1101353	Identifier	strlen		1099521	0					
ANR	1101354	ArgumentList	"""struct"""		1099521	1					
ANR	1101355	Argument	"""struct"""		1099521	0					
ANR	1101356	PrimaryExpression	"""struct"""		1099521	0					
ANR	1101357	PrimaryExpression	1		1099521	1					
ANR	1101358	CompoundStatement		208:70:6051:6051	1099521	1					
ANR	1101359	ExpressionStatement	"r_line_completion_push ( completion , key )"	1911:5:55333:55373	1099521	0	True				
ANR	1101360	CallExpression	"r_line_completion_push ( completion , key )"		1099521	0					
ANR	1101361	Callee	r_line_completion_push		1099521	0					
ANR	1101362	Identifier	r_line_completion_push		1099521	0					
ANR	1101363	ArgumentList	completion		1099521	1					
ANR	1101364	Argument	completion		1099521	0					
ANR	1101365	Identifier	completion		1099521	0					
ANR	1101366	Argument	key		1099521	1					
ANR	1101367	Identifier	key		1099521	0					
ANR	1101368	ExpressionStatement	ls_free ( l )	1915:2:55392:55403	1099521	13	True				
ANR	1101369	CallExpression	ls_free ( l )		1099521	0					
ANR	1101370	Callee	ls_free		1099521	0					
ANR	1101371	Identifier	ls_free		1099521	0					
ANR	1101372	ArgumentList	l		1099521	1					
ANR	1101373	Argument	l		1099521	0					
ANR	1101374	Identifier	l		1099521	0					
ANR	1101375	ElseStatement	else		1099521	0					
ANR	1101376	IfStatement	"if ( ! strncmp ( buf -> data , ""zo "" , 3 ) || ! strncmp ( buf -> data , ""zoz "" , 4 ) )"		1099521	0					
ANR	1101377	Condition	"! strncmp ( buf -> data , ""zo "" , 3 ) || ! strncmp ( buf -> data , ""zoz "" , 4 )"	1916:12:55417:55482	1099521	0	True				
ANR	1101378	OrExpression	"! strncmp ( buf -> data , ""zo "" , 3 ) || ! strncmp ( buf -> data , ""zoz "" , 4 )"		1099521	0		||			
ANR	1101379	UnaryOperationExpression	"! strncmp ( buf -> data , ""zo "" , 3 )"		1099521	0					
ANR	1101380	UnaryOperator	!		1099521	0					
ANR	1101381	CallExpression	"strncmp ( buf -> data , ""zo "" , 3 )"		1099521	1					
ANR	1101382	Callee	strncmp		1099521	0					
ANR	1101383	Identifier	strncmp		1099521	0					
ANR	1101384	ArgumentList	buf -> data		1099521	1					
ANR	1101385	Argument	buf -> data		1099521	0					
ANR	1101386	PtrMemberAccess	buf -> data		1099521	0					
ANR	1101387	Identifier	buf		1099521	0					
ANR	1101388	Identifier	data		1099521	1					
ANR	1101389	Argument	"""zo """		1099521	1					
ANR	1101390	PrimaryExpression	"""zo """		1099521	0					
ANR	1101391	Argument	3		1099521	2					
ANR	1101392	PrimaryExpression	3		1099521	0					
ANR	1101393	UnaryOperationExpression	"! strncmp ( buf -> data , ""zoz "" , 4 )"		1099521	1					
ANR	1101394	UnaryOperator	!		1099521	0					
ANR	1101395	CallExpression	"strncmp ( buf -> data , ""zoz "" , 4 )"		1099521	1					
ANR	1101396	Callee	strncmp		1099521	0					
ANR	1101397	Identifier	strncmp		1099521	0					
ANR	1101398	ArgumentList	buf -> data		1099521	1					
ANR	1101399	Argument	buf -> data		1099521	0					
ANR	1101400	PtrMemberAccess	buf -> data		1099521	0					
ANR	1101401	Identifier	buf		1099521	0					
ANR	1101402	Identifier	data		1099521	1					
ANR	1101403	Argument	"""zoz """		1099521	1					
ANR	1101404	PrimaryExpression	"""zoz """		1099521	0					
ANR	1101405	Argument	4		1099521	2					
ANR	1101406	PrimaryExpression	4		1099521	0					
ANR	1101407	CompoundStatement		215:37:6210:6210	1099521	1					
ANR	1101408	IfStatement	if ( core -> anal -> zign_path && core -> anal -> zign_path [ 0 ] )		1099521	0					
ANR	1101409	Condition	core -> anal -> zign_path && core -> anal -> zign_path [ 0 ]	1918:6:55493:55541	1099521	0	True				
ANR	1101410	AndExpression	core -> anal -> zign_path && core -> anal -> zign_path [ 0 ]		1099521	0		&&			
ANR	1101411	PtrMemberAccess	core -> anal -> zign_path		1099521	0					
ANR	1101412	PtrMemberAccess	core -> anal		1099521	0					
ANR	1101413	Identifier	core		1099521	0					
ANR	1101414	Identifier	anal		1099521	1					
ANR	1101415	Identifier	zign_path		1099521	1					
ANR	1101416	ArrayIndexing	core -> anal -> zign_path [ 0 ]		1099521	1					
ANR	1101417	PtrMemberAccess	core -> anal -> zign_path		1099521	0					
ANR	1101418	PtrMemberAccess	core -> anal		1099521	0					
ANR	1101419	Identifier	core		1099521	0					
ANR	1101420	Identifier	anal		1099521	1					
ANR	1101421	Identifier	zign_path		1099521	1					
ANR	1101422	PrimaryExpression	0		1099521	1					
ANR	1101423	CompoundStatement		218:3:6334:6369	1099521	1					
ANR	1101424	IdentifierDeclStatement	char * zignpath = r_file_abspath ( core -> anal -> zign_path ) ;	1919:3:55549:55604	1099521	0	True				
ANR	1101425	IdentifierDecl	* zignpath = r_file_abspath ( core -> anal -> zign_path )		1099521	0					
ANR	1101426	IdentifierDeclType	char *		1099521	0					
ANR	1101427	Identifier	zignpath		1099521	1					
ANR	1101428	AssignmentExpression	* zignpath = r_file_abspath ( core -> anal -> zign_path )		1099521	2		=			
ANR	1101429	Identifier	zignpath		1099521	0					
ANR	1101430	CallExpression	r_file_abspath ( core -> anal -> zign_path )		1099521	1					
ANR	1101431	Callee	r_file_abspath		1099521	0					
ANR	1101432	Identifier	r_file_abspath		1099521	0					
ANR	1101433	ArgumentList	core -> anal -> zign_path		1099521	1					
ANR	1101434	Argument	core -> anal -> zign_path		1099521	0					
ANR	1101435	PtrMemberAccess	core -> anal -> zign_path		1099521	0					
ANR	1101436	PtrMemberAccess	core -> anal		1099521	0					
ANR	1101437	Identifier	core		1099521	0					
ANR	1101438	Identifier	anal		1099521	1					
ANR	1101439	Identifier	zign_path		1099521	1					
ANR	1101440	IdentifierDeclStatement	"char * paths [ 2 ] = { zignpath , NULL } ;"	1920:3:55609:55644	1099521	1	True				
ANR	1101441	IdentifierDecl	"* paths [ 2 ] = { zignpath , NULL }"		1099521	0					
ANR	1101442	IdentifierDeclType	char * [ 2 ]		1099521	0					
ANR	1101443	Identifier	paths		1099521	1					
ANR	1101444	PrimaryExpression	2		1099521	2					
ANR	1101445	AssignmentExpression	"* paths [ 2 ] = { zignpath , NULL }"		1099521	3		=			
ANR	1101446	Identifier	paths		1099521	0					
ANR	1101447	InitializerList	zignpath		1099521	1					
ANR	1101448	Identifier	zignpath		1099521	0					
ANR	1101449	Identifier	NULL		1099521	1					
ANR	1101450	ExpressionStatement	"autocompleteFilename ( completion , buf , paths , 1 )"	1921:3:55649:55697	1099521	2	True				
ANR	1101451	CallExpression	"autocompleteFilename ( completion , buf , paths , 1 )"		1099521	0					
ANR	1101452	Callee	autocompleteFilename		1099521	0					
ANR	1101453	Identifier	autocompleteFilename		1099521	0					
ANR	1101454	ArgumentList	completion		1099521	1					
ANR	1101455	Argument	completion		1099521	0					
ANR	1101456	Identifier	completion		1099521	0					
ANR	1101457	Argument	buf		1099521	1					
ANR	1101458	Identifier	buf		1099521	0					
ANR	1101459	Argument	paths		1099521	2					
ANR	1101460	Identifier	paths		1099521	0					
ANR	1101461	Argument	1		1099521	3					
ANR	1101462	PrimaryExpression	1		1099521	0					
ANR	1101463	ExpressionStatement	free ( zignpath )	1922:3:55702:55717	1099521	3	True				
ANR	1101464	CallExpression	free ( zignpath )		1099521	0					
ANR	1101465	Callee	free		1099521	0					
ANR	1101466	Identifier	free		1099521	0					
ANR	1101467	ArgumentList	zignpath		1099521	1					
ANR	1101468	Argument	zignpath		1099521	0					
ANR	1101469	Identifier	zignpath		1099521	0					
ANR	1101470	ElseStatement	else		1099521	0					
ANR	1101471	CompoundStatement		221:9:6453:6453	1099521	0					
ANR	1101472	ExpressionStatement	"autocompleteFilename ( completion , buf , NULL , 1 )"	1924:3:55733:55780	1099521	0	True				
ANR	1101473	CallExpression	"autocompleteFilename ( completion , buf , NULL , 1 )"		1099521	0					
ANR	1101474	Callee	autocompleteFilename		1099521	0					
ANR	1101475	Identifier	autocompleteFilename		1099521	0					
ANR	1101476	ArgumentList	completion		1099521	1					
ANR	1101477	Argument	completion		1099521	0					
ANR	1101478	Identifier	completion		1099521	0					
ANR	1101479	Argument	buf		1099521	1					
ANR	1101480	Identifier	buf		1099521	0					
ANR	1101481	Argument	NULL		1099521	2					
ANR	1101482	Identifier	NULL		1099521	0					
ANR	1101483	Argument	1		1099521	3					
ANR	1101484	PrimaryExpression	1		1099521	0					
ANR	1101485	ElseStatement	else		1099521	0					
ANR	1101486	IfStatement	"if ( find_e_opts ( core , completion , buf ) )"		1099521	0					
ANR	1101487	Condition	"find_e_opts ( core , completion , buf )"	1926:12:55798:55832	1099521	0	True				
ANR	1101488	CallExpression	"find_e_opts ( core , completion , buf )"		1099521	0					
ANR	1101489	Callee	find_e_opts		1099521	0					
ANR	1101490	Identifier	find_e_opts		1099521	0					
ANR	1101491	ArgumentList	core		1099521	1					
ANR	1101492	Argument	core		1099521	0					
ANR	1101493	Identifier	core		1099521	0					
ANR	1101494	Argument	completion		1099521	1					
ANR	1101495	Identifier	completion		1099521	0					
ANR	1101496	Argument	buf		1099521	2					
ANR	1101497	Identifier	buf		1099521	0					
ANR	1101498	CompoundStatement		224:49:6560:6560	1099521	1					
ANR	1101499	ReturnStatement	return ;	1927:2:55839:55845	1099521	0	True				
ANR	1101500	ElseStatement	else		1099521	0					
ANR	1101501	IfStatement	if ( prompt_type == R_LINE_PROMPT_OFFSET )		1099521	0					
ANR	1101502	Condition	prompt_type == R_LINE_PROMPT_OFFSET	1928:12:55859:55893	1099521	0	True				
ANR	1101503	EqualityExpression	prompt_type == R_LINE_PROMPT_OFFSET		1099521	0		==			
ANR	1101504	Identifier	prompt_type		1099521	0					
ANR	1101505	Identifier	R_LINE_PROMPT_OFFSET		1099521	1					
ANR	1101506	CompoundStatement		226:49:6621:6621	1099521	1					
ANR	1101507	ExpressionStatement	"autocomplete_flags ( core , completion , buf -> data )"	1929:2:55900:55948	1099521	0	True				
ANR	1101508	CallExpression	"autocomplete_flags ( core , completion , buf -> data )"		1099521	0					
ANR	1101509	Callee	autocomplete_flags		1099521	0					
ANR	1101510	Identifier	autocomplete_flags		1099521	0					
ANR	1101511	ArgumentList	core		1099521	1					
ANR	1101512	Argument	core		1099521	0					
ANR	1101513	Identifier	core		1099521	0					
ANR	1101514	Argument	completion		1099521	1					
ANR	1101515	Identifier	completion		1099521	0					
ANR	1101516	Argument	buf -> data		1099521	2					
ANR	1101517	PtrMemberAccess	buf -> data		1099521	0					
ANR	1101518	Identifier	buf		1099521	0					
ANR	1101519	Identifier	data		1099521	1					
ANR	1101520	ElseStatement	else		1099521	0					
ANR	1101521	IfStatement	if ( prompt_type == R_LINE_PROMPT_FILE )		1099521	0					
ANR	1101522	Condition	prompt_type == R_LINE_PROMPT_FILE	1930:12:55962:55994	1099521	0	True				
ANR	1101523	EqualityExpression	prompt_type == R_LINE_PROMPT_FILE		1099521	0		==			
ANR	1101524	Identifier	prompt_type		1099521	0					
ANR	1101525	Identifier	R_LINE_PROMPT_FILE		1099521	1					
ANR	1101526	CompoundStatement		228:47:6722:6722	1099521	1					
ANR	1101527	ExpressionStatement	"autocomplete_file ( completion , buf -> data )"	1931:2:56001:56042	1099521	0	True				
ANR	1101528	CallExpression	"autocomplete_file ( completion , buf -> data )"		1099521	0					
ANR	1101529	Callee	autocomplete_file		1099521	0					
ANR	1101530	Identifier	autocomplete_file		1099521	0					
ANR	1101531	ArgumentList	completion		1099521	1					
ANR	1101532	Argument	completion		1099521	0					
ANR	1101533	Identifier	completion		1099521	0					
ANR	1101534	Argument	buf -> data		1099521	1					
ANR	1101535	PtrMemberAccess	buf -> data		1099521	0					
ANR	1101536	Identifier	buf		1099521	0					
ANR	1101537	Identifier	data		1099521	1					
ANR	1101538	ElseStatement	else		1099521	0					
ANR	1101539	IfStatement	"if ( ! find_autocomplete ( core , completion , buf ) )"		1099521	0					
ANR	1101540	Condition	"! find_autocomplete ( core , completion , buf )"	1932:12:56056:56097	1099521	0	True				
ANR	1101541	UnaryOperationExpression	"! find_autocomplete ( core , completion , buf )"		1099521	0					
ANR	1101542	UnaryOperator	!		1099521	0					
ANR	1101543	CallExpression	"find_autocomplete ( core , completion , buf )"		1099521	1					
ANR	1101544	Callee	find_autocomplete		1099521	0					
ANR	1101545	Identifier	find_autocomplete		1099521	0					
ANR	1101546	ArgumentList	core		1099521	1					
ANR	1101547	Argument	core		1099521	0					
ANR	1101548	Identifier	core		1099521	0					
ANR	1101549	Argument	completion		1099521	1					
ANR	1101550	Identifier	completion		1099521	0					
ANR	1101551	Argument	buf		1099521	2					
ANR	1101552	Identifier	buf		1099521	0					
ANR	1101553	CompoundStatement		230:56:6825:6825	1099521	1					
ANR	1101554	ExpressionStatement	"autocomplete_default ( core , completion , buf )"	1933:2:56104:56148	1099521	0	True				
ANR	1101555	CallExpression	"autocomplete_default ( core , completion , buf )"		1099521	0					
ANR	1101556	Callee	autocomplete_default		1099521	0					
ANR	1101557	Identifier	autocomplete_default		1099521	0					
ANR	1101558	ArgumentList	core		1099521	1					
ANR	1101559	Argument	core		1099521	0					
ANR	1101560	Identifier	core		1099521	0					
ANR	1101561	Argument	completion		1099521	1					
ANR	1101562	Identifier	completion		1099521	0					
ANR	1101563	Argument	buf		1099521	2					
ANR	1101564	Identifier	buf		1099521	0					
ANR	1101565	ReturnType	R_API void		1099521	1					
ANR	1101566	Identifier	r_core_autocomplete		1099521	2					
ANR	1101567	ParameterList	"R_NULLABLE RCore * core , RLineCompletion * completion , RLineBuffer * buf , RLinePromptType prompt_type"		1099521	3					
ANR	1101568	Parameter	R_NULLABLE RCore * core	1703:31:49174:49195	1099521	0	True				
ANR	1101569	ParameterType	R_NULLABLE RCore *		1099521	0					
ANR	1101570	Identifier	core		1099521	1					
ANR	1101571	Parameter	RLineCompletion * completion	1703:55:49198:49224	1099521	1	True				
ANR	1101572	ParameterType	RLineCompletion *		1099521	0					
ANR	1101573	Identifier	completion		1099521	1					
ANR	1101574	Parameter	RLineBuffer * buf	1703:84:49227:49242	1099521	2	True				
ANR	1101575	ParameterType	RLineBuffer *		1099521	0					
ANR	1101576	Identifier	buf		1099521	1					
ANR	1101577	Parameter	RLinePromptType prompt_type	1703:102:49245:49271	1099521	3	True				
ANR	1101578	ParameterType	RLinePromptType		1099521	0					
ANR	1101579	Identifier	prompt_type		1099521	1					
ANR	1101580	CFGEntryNode	ENTRY		1099521		True				
ANR	1101581	CFGExitNode	EXIT		1099521		True				
ANR	1101582	CFGErrorNode	ERROR		1099521		True				
ANR	1101583	Symbol	r_file_abspath		1099521						
ANR	1101584	Symbol	l_ptr		1099521						
ANR	1101585	Symbol	strchr		1099521						
ANR	1101586	Symbol	core -> offset		1099521						
ANR	1101587	Symbol	* core -> rcmd -> aliases		1099521						
ANR	1101588	Symbol	* * core -> rcmd		1099521						
ANR	1101589	Symbol	strlen		1099521						
ANR	1101590	Symbol	strncmp		1099521						
ANR	1101591	Symbol	len		1099521						
ANR	1101592	Symbol	core -> rcmd -> aliases		1099521						
ANR	1101593	Symbol	R_LINE_PROMPT_FILE		1099521						
ANR	1101594	Symbol	core -> anal -> zign_path		1099521						
ANR	1101595	Symbol	R_ANAL_VAR_KIND_ARG		1099521						
ANR	1101596	Symbol	* * core -> anal		1099521						
ANR	1101597	Symbol	pipe		1099521						
ANR	1101598	Symbol	vars		1099521						
ANR	1101599	Symbol	strcmp		1099521						
ANR	1101600	Symbol	* buf		1099521						
ANR	1101601	Symbol	core -> rcmd -> aliases . keys		1099521						
ANR	1101602	Symbol	NULL		1099521						
ANR	1101603	Symbol	var		1099521						
ANR	1101604	Symbol	iter		1099521						
ANR	1101605	Symbol	R_ANAL_VAR_KIND_BPV		1099521						
ANR	1101606	Symbol	chr		1099521						
ANR	1101607	Symbol	* pfx		1099521						
ANR	1101608	Symbol	core -> print -> formats		1099521						
ANR	1101609	Symbol	core		1099521						
ANR	1101610	Symbol	buf -> data		1099521						
ANR	1101611	Symbol	* * * core		1099521						
ANR	1101612	Symbol	find_autocomplete		1099521						
ANR	1101613	Symbol	paths		1099521						
ANR	1101614	Symbol	r_str_trim_ro		1099521						
ANR	1101615	Symbol	true		1099521						
ANR	1101616	Symbol	zignpath		1099521						
ANR	1101617	Symbol	var -> name		1099521						
ANR	1101618	Symbol	sls		1099521						
ANR	1101619	Symbol	core -> print		1099521						
ANR	1101620	Symbol	r_sub_str_rchr		1099521						
ANR	1101621	Symbol	pfx		1099521						
ANR	1101622	Symbol	* * buf		1099521						
ANR	1101623	Symbol	* core		1099521						
ANR	1101624	Symbol	sdelta		1099521						
ANR	1101625	Symbol	r_str_newf		1099521						
ANR	1101626	Symbol	core -> anal -> sdb_types		1099521						
ANR	1101627	Symbol	core -> anal		1099521						
ANR	1101628	Symbol	core -> rcmd -> aliases . count		1099521						
ANR	1101629	Symbol	fcn		1099521						
ANR	1101630	Symbol	* var		1099521						
ANR	1101631	Symbol	find_e_opts		1099521						
ANR	1101632	Symbol	prompt_type		1099521						
ANR	1101633	Symbol	* * core		1099521						
ANR	1101634	Symbol	key		1099521						
ANR	1101635	Symbol	f_ptr		1099521						
ANR	1101636	Symbol	completion		1099521						
ANR	1101637	Symbol	sdbkv_key		1099521						
ANR	1101638	Symbol	core -> rcmd		1099521						
ANR	1101639	Symbol	* core -> anal -> zign_path		1099521						
ANR	1101640	Symbol	R_LINE_PROMPT_OFFSET		1099521						
ANR	1101641	Symbol	* buf -> data		1099521						
ANR	1101642	Symbol	false		1099521						
ANR	1101643	Symbol	sdb_foreach_list		1099521						
ANR	1101644	Symbol	i		1099521						
ANR	1101645	Symbol	core -> flags		1099521						
ANR	1101646	Symbol	j		1099521						
ANR	1101647	Symbol	R_MIN		1099521						
ANR	1101648	Symbol	kv		1099521						
ANR	1101649	Symbol	autocomplete_pfele		1099521						
ANR	1101650	Symbol	sdbkv_value		1099521						
ANR	1101651	Symbol	l		1099521						
ANR	1101652	Symbol	n		1099521						
ANR	1101653	Symbol	ptr		1099521						
ANR	1101654	Symbol	add_argv		1099521						
ANR	1101655	Symbol	p		1099521						
ANR	1101656	Symbol	* core -> rcmd -> aliases . keys		1099521						
ANR	1101657	Symbol	buf		1099521						
ANR	1101658	Symbol	* core -> print		1099521						
ANR	1101659	Symbol	s		1099521						
ANR	1101660	Symbol	r_anal_get_fcn_in		1099521						
ANR	1101661	Symbol	r_anal_var_list		1099521						
ANR	1101662	Symbol	r_sub_str_lchr		1099521						
ANR	1101663	Symbol	* core -> anal		1099521						
ANR	1101664	Symbol	* i		1099521						
ANR	1101665	Symbol	buf -> index		1099521						
ANR	1101666	Symbol	minlen		1099521						
ANR	1101667	Symbol	* core -> rcmd		1099521						
ANR	1101668	Function	autocomplete	1937:0:56156:56364							
ANR	1101669	FunctionDef	"autocomplete (RLineCompletion * completion , RLineBuffer * buf , RLinePromptType prompt_type , void * user)"		1101668	0					
ANR	1101670	CompoundStatement		1937:112:56268:56364	1101668	0					
ANR	1101671	IdentifierDeclStatement	RCore * core = user ;	1938:1:56271:56289	1101668	0	True				
ANR	1101672	IdentifierDecl	* core = user		1101668	0					
ANR	1101673	IdentifierDeclType	RCore *		1101668	0					
ANR	1101674	Identifier	core		1101668	1					
ANR	1101675	AssignmentExpression	* core = user		1101668	2		=			
ANR	1101676	Identifier	user		1101668	0					
ANR	1101677	Identifier	user		1101668	1					
ANR	1101678	ExpressionStatement	"r_core_autocomplete ( core , completion , buf , prompt_type )"	1939:1:56292:56348	1101668	1	True				
ANR	1101679	CallExpression	"r_core_autocomplete ( core , completion , buf , prompt_type )"		1101668	0					
ANR	1101680	Callee	r_core_autocomplete		1101668	0					
ANR	1101681	Identifier	r_core_autocomplete		1101668	0					
ANR	1101682	ArgumentList	core		1101668	1					
ANR	1101683	Argument	core		1101668	0					
ANR	1101684	Identifier	core		1101668	0					
ANR	1101685	Argument	completion		1101668	1					
ANR	1101686	Identifier	completion		1101668	0					
ANR	1101687	Argument	buf		1101668	2					
ANR	1101688	Identifier	buf		1101668	0					
ANR	1101689	Argument	prompt_type		1101668	3					
ANR	1101690	Identifier	prompt_type		1101668	0					
ANR	1101691	ReturnStatement	return true ;	1940:1:56351:56362	1101668	2	True				
ANR	1101692	Identifier	true		1101668	0					
ANR	1101693	ReturnType	static int		1101668	1					
ANR	1101694	Identifier	autocomplete		1101668	2					
ANR	1101695	ParameterList	"RLineCompletion * completion , RLineBuffer * buf , RLinePromptType prompt_type , void * user"		1101668	3					
ANR	1101696	Parameter	RLineCompletion * completion	1937:24:56180:56206	1101668	0	True				
ANR	1101697	ParameterType	RLineCompletion *		1101668	0					
ANR	1101698	Identifier	completion		1101668	1					
ANR	1101699	Parameter	RLineBuffer * buf	1937:53:56209:56224	1101668	1	True				
ANR	1101700	ParameterType	RLineBuffer *		1101668	0					
ANR	1101701	Identifier	buf		1101668	1					
ANR	1101702	Parameter	RLinePromptType prompt_type	1937:71:56227:56253	1101668	2	True				
ANR	1101703	ParameterType	RLinePromptType		1101668	0					
ANR	1101704	Identifier	prompt_type		1101668	1					
ANR	1101705	Parameter	void * user	1937:100:56256:56265	1101668	3	True				
ANR	1101706	ParameterType	void *		1101668	0					
ANR	1101707	Identifier	user		1101668	1					
ANR	1101708	CFGEntryNode	ENTRY		1101668		True				
ANR	1101709	CFGExitNode	EXIT		1101668		True				
ANR	1101710	Symbol	completion		1101668						
ANR	1101711	Symbol	core		1101668						
ANR	1101712	Symbol	buf		1101668						
ANR	1101713	Symbol	true		1101668						
ANR	1101714	Symbol	prompt_type		1101668						
ANR	1101715	Symbol	user		1101668						
ANR	1101716	Function	r_core_fgets	1943:0:56367:56755							
ANR	1101717	FunctionDef	"r_core_fgets (char * buf , int len)"		1101716	0					
ANR	1101718	CompoundStatement		1943:43:56410:56755	1101716	0					
ANR	1101719	IdentifierDeclStatement	const char * ptr ;	1944:1:56413:56428	1101716	0	True				
ANR	1101720	IdentifierDecl	* ptr		1101716	0					
ANR	1101721	IdentifierDeclType	const char *		1101716	0					
ANR	1101722	Identifier	ptr		1101716	1					
ANR	1101723	IdentifierDeclStatement	RLine * rli = r_line_singleton ( ) ;	1945:1:56431:56463	1101716	1	True				
ANR	1101724	IdentifierDecl	* rli = r_line_singleton ( )		1101716	0					
ANR	1101725	IdentifierDeclType	RLine *		1101716	0					
ANR	1101726	Identifier	rli		1101716	1					
ANR	1101727	AssignmentExpression	* rli = r_line_singleton ( )		1101716	2		=			
ANR	1101728	Identifier	rli		1101716	0					
ANR	1101729	CallExpression	r_line_singleton ( )		1101716	1					
ANR	1101730	Callee	r_line_singleton		1101716	0					
ANR	1101731	Identifier	r_line_singleton		1101716	0					
ANR	1101732	ArgumentList			1101716	1					
ANR	1101733	ExpressionStatement	buf [ 0 ] = '\\0'	1946:1:56466:56479	1101716	2	True				
ANR	1101734	AssignmentExpression	buf [ 0 ] = '\\0'		1101716	0		=			
ANR	1101735	ArrayIndexing	buf [ 0 ]		1101716	0					
ANR	1101736	Identifier	buf		1101716	0					
ANR	1101737	PrimaryExpression	0		1101716	1					
ANR	1101738	PrimaryExpression	'\\0'		1101716	1					
ANR	1101739	ExpressionStatement	"r_line_completion_set ( & rli -> completion , radare_argc , radare_argv )"	1947:1:56482:56548	1101716	3	True				
ANR	1101740	CallExpression	"r_line_completion_set ( & rli -> completion , radare_argc , radare_argv )"		1101716	0					
ANR	1101741	Callee	r_line_completion_set		1101716	0					
ANR	1101742	Identifier	r_line_completion_set		1101716	0					
ANR	1101743	ArgumentList	& rli -> completion		1101716	1					
ANR	1101744	Argument	& rli -> completion		1101716	0					
ANR	1101745	UnaryOperationExpression	& rli -> completion		1101716	0					
ANR	1101746	UnaryOperator	&		1101716	0					
ANR	1101747	PtrMemberAccess	rli -> completion		1101716	1					
ANR	1101748	Identifier	rli		1101716	0					
ANR	1101749	Identifier	completion		1101716	1					
ANR	1101750	Argument	radare_argc		1101716	1					
ANR	1101751	Identifier	radare_argc		1101716	0					
ANR	1101752	Argument	radare_argv		1101716	2					
ANR	1101753	Identifier	radare_argv		1101716	0					
ANR	1101754	ExpressionStatement	rli -> completion . run = autocomplete	1948:2:56552:56586	1101716	4	True				
ANR	1101755	AssignmentExpression	rli -> completion . run = autocomplete		1101716	0		=			
ANR	1101756	MemberAccess	rli -> completion . run		1101716	0					
ANR	1101757	PtrMemberAccess	rli -> completion		1101716	0					
ANR	1101758	Identifier	rli		1101716	0					
ANR	1101759	Identifier	completion		1101716	1					
ANR	1101760	Identifier	run		1101716	1					
ANR	1101761	Identifier	autocomplete		1101716	1					
ANR	1101762	ExpressionStatement	rli -> completion . run_user = rli -> user	1949:2:56590:56626	1101716	5	True				
ANR	1101763	AssignmentExpression	rli -> completion . run_user = rli -> user		1101716	0		=			
ANR	1101764	MemberAccess	rli -> completion . run_user		1101716	0					
ANR	1101765	PtrMemberAccess	rli -> completion		1101716	0					
ANR	1101766	Identifier	rli		1101716	0					
ANR	1101767	Identifier	completion		1101716	1					
ANR	1101768	Identifier	run_user		1101716	1					
ANR	1101769	PtrMemberAccess	rli -> user		1101716	1					
ANR	1101770	Identifier	rli		1101716	0					
ANR	1101771	Identifier	user		1101716	1					
ANR	1101772	ExpressionStatement	ptr = r_line_readline ( )	1950:1:56629:56653	1101716	6	True				
ANR	1101773	AssignmentExpression	ptr = r_line_readline ( )		1101716	0		=			
ANR	1101774	Identifier	ptr		1101716	0					
ANR	1101775	CallExpression	r_line_readline ( )		1101716	1					
ANR	1101776	Callee	r_line_readline		1101716	0					
ANR	1101777	Identifier	r_line_readline		1101716	0					
ANR	1101778	ArgumentList			1101716	1					
ANR	1101779	IfStatement	if ( ! ptr )		1101716	7					
ANR	1101780	Condition	! ptr	1951:5:56660:56663	1101716	0	True				
ANR	1101781	UnaryOperationExpression	! ptr		1101716	0					
ANR	1101782	UnaryOperator	!		1101716	0					
ANR	1101783	Identifier	ptr		1101716	1					
ANR	1101784	CompoundStatement		9:11:255:255	1101716	1					
ANR	1101785	ReturnStatement	return - 1 ;	1952:2:56670:56679	1101716	0	True				
ANR	1101786	UnaryOperationExpression	- 1		1101716	0					
ANR	1101787	UnaryOperator	-		1101716	0					
ANR	1101788	PrimaryExpression	1		1101716	1					
ANR	1101789	ExpressionStatement	"strncpy ( buf , ptr , len )"	1954:1:56685:56708	1101716	8	True				
ANR	1101790	CallExpression	"strncpy ( buf , ptr , len )"		1101716	0					
ANR	1101791	Callee	strncpy		1101716	0					
ANR	1101792	Identifier	strncpy		1101716	0					
ANR	1101793	ArgumentList	buf		1101716	1					
ANR	1101794	Argument	buf		1101716	0					
ANR	1101795	Identifier	buf		1101716	0					
ANR	1101796	Argument	ptr		1101716	1					
ANR	1101797	Identifier	ptr		1101716	0					
ANR	1101798	Argument	len		1101716	2					
ANR	1101799	Identifier	len		1101716	0					
ANR	1101800	ExpressionStatement	buf [ len - 1 ] = 0	1955:1:56711:56727	1101716	9	True				
ANR	1101801	AssignmentExpression	buf [ len - 1 ] = 0		1101716	0		=			
ANR	1101802	ArrayIndexing	buf [ len - 1 ]		1101716	0					
ANR	1101803	Identifier	buf		1101716	0					
ANR	1101804	AdditiveExpression	len - 1		1101716	1		-			
ANR	1101805	Identifier	len		1101716	0					
ANR	1101806	PrimaryExpression	1		1101716	1					
ANR	1101807	PrimaryExpression	0		1101716	1					
ANR	1101808	ReturnStatement	return strlen ( buf ) + 1 ;	1956:1:56730:56753	1101716	10	True				
ANR	1101809	AdditiveExpression	strlen ( buf ) + 1		1101716	0		+			
ANR	1101810	CallExpression	strlen ( buf )		1101716	0					
ANR	1101811	Callee	strlen		1101716	0					
ANR	1101812	Identifier	strlen		1101716	0					
ANR	1101813	ArgumentList	buf		1101716	1					
ANR	1101814	Argument	buf		1101716	0					
ANR	1101815	Identifier	buf		1101716	0					
ANR	1101816	PrimaryExpression	1		1101716	1					
ANR	1101817	ReturnType	R_API int		1101716	1					
ANR	1101818	Identifier	r_core_fgets		1101716	2					
ANR	1101819	ParameterList	"char * buf , int len"		1101716	3					
ANR	1101820	Parameter	char * buf	1943:23:56390:56398	1101716	0	True				
ANR	1101821	ParameterType	char *		1101716	0					
ANR	1101822	Identifier	buf		1101716	1					
ANR	1101823	Parameter	int len	1943:34:56401:56407	1101716	1	True				
ANR	1101824	ParameterType	int		1101716	0					
ANR	1101825	Identifier	len		1101716	1					
ANR	1101826	CFGEntryNode	ENTRY		1101716		True				
ANR	1101827	CFGExitNode	EXIT		1101716		True				
ANR	1101828	Symbol	rli -> user		1101716						
ANR	1101829	Symbol	radare_argv		1101716						
ANR	1101830	Symbol	rli -> completion . run		1101716						
ANR	1101831	Symbol	* buf		1101716						
ANR	1101832	Symbol	autocomplete		1101716						
ANR	1101833	Symbol	r_line_singleton		1101716						
ANR	1101834	Symbol	radare_argc		1101716						
ANR	1101835	Symbol	rli		1101716						
ANR	1101836	Symbol	ptr		1101716						
ANR	1101837	Symbol	& rli -> completion		1101716						
ANR	1101838	Symbol	strlen		1101716						
ANR	1101839	Symbol	buf		1101716						
ANR	1101840	Symbol	rli -> completion		1101716						
ANR	1101841	Symbol	len		1101716						
ANR	1101842	Symbol	rli -> completion . run_user		1101716						
ANR	1101843	Symbol	r_line_readline		1101716						
ANR	1101844	Symbol	* rli		1101716						
ANR	1101845	Symbol	* len		1101716						
ANR	1101846	Function	r_core_print_offname	1959:0:56758:56927							
ANR	1101847	FunctionDef	"r_core_print_offname (void * p , ut64 addr)"		1101846	0					
ANR	1101848	CompoundStatement		1959:60:56818:56927	1101846	0					
ANR	1101849	IdentifierDeclStatement	RCore * c = ( RCore * ) p ;	1960:1:56821:56841	1101846	0	True				
ANR	1101850	IdentifierDecl	* c = ( RCore * ) p		1101846	0					
ANR	1101851	IdentifierDeclType	RCore *		1101846	0					
ANR	1101852	Identifier	c		1101846	1					
ANR	1101853	AssignmentExpression	* c = ( RCore * ) p		1101846	2		=			
ANR	1101854	Identifier	c		1101846	0					
ANR	1101855	CastExpression	( RCore * ) p		1101846	1					
ANR	1101856	CastTarget	RCore *		1101846	0					
ANR	1101857	Identifier	p		1101846	1					
ANR	1101858	IdentifierDeclStatement	"RFlagItem * item = r_flag_get_i ( c -> flags , addr ) ;"	1961:1:56844:56891	1101846	1	True				
ANR	1101859	IdentifierDecl	"* item = r_flag_get_i ( c -> flags , addr )"		1101846	0					
ANR	1101860	IdentifierDeclType	RFlagItem *		1101846	0					
ANR	1101861	Identifier	item		1101846	1					
ANR	1101862	AssignmentExpression	"* item = r_flag_get_i ( c -> flags , addr )"		1101846	2		=			
ANR	1101863	Identifier	item		1101846	0					
ANR	1101864	CallExpression	"r_flag_get_i ( c -> flags , addr )"		1101846	1					
ANR	1101865	Callee	r_flag_get_i		1101846	0					
ANR	1101866	Identifier	r_flag_get_i		1101846	0					
ANR	1101867	ArgumentList	c -> flags		1101846	1					
ANR	1101868	Argument	c -> flags		1101846	0					
ANR	1101869	PtrMemberAccess	c -> flags		1101846	0					
ANR	1101870	Identifier	c		1101846	0					
ANR	1101871	Identifier	flags		1101846	1					
ANR	1101872	Argument	addr		1101846	1					
ANR	1101873	Identifier	addr		1101846	0					
ANR	1101874	ReturnStatement	return item ? item -> name : NULL ;	1962:1:56894:56925	1101846	2	True				
ANR	1101875	ConditionalExpression	item ? item -> name : NULL		1101846	0					
ANR	1101876	Condition	item		1101846	0					
ANR	1101877	Identifier	item		1101846	0					
ANR	1101878	PtrMemberAccess	item -> name		1101846	1					
ANR	1101879	Identifier	item		1101846	0					
ANR	1101880	Identifier	name		1101846	1					
ANR	1101881	Identifier	NULL		1101846	2					
ANR	1101882	ReturnType	static const char *		1101846	1					
ANR	1101883	Identifier	r_core_print_offname		1101846	2					
ANR	1101884	ParameterList	"void * p , ut64 addr"		1101846	3					
ANR	1101885	Parameter	void * p	1959:40:56798:56804	1101846	0	True				
ANR	1101886	ParameterType	void *		1101846	0					
ANR	1101887	Identifier	p		1101846	1					
ANR	1101888	Parameter	ut64 addr	1959:49:56807:56815	1101846	1	True				
ANR	1101889	ParameterType	ut64		1101846	0					
ANR	1101890	Identifier	addr		1101846	1					
ANR	1101891	CFGEntryNode	ENTRY		1101846		True				
ANR	1101892	CFGExitNode	EXIT		1101846		True				
ANR	1101893	Symbol	p		1101846						
ANR	1101894	Symbol	item		1101846						
ANR	1101895	Symbol	c		1101846						
ANR	1101896	Symbol	c -> flags		1101846						
ANR	1101897	Symbol	NULL		1101846						
ANR	1101898	Symbol	* item		1101846						
ANR	1101899	Symbol	item -> name		1101846						
ANR	1101900	Symbol	addr		1101846						
ANR	1101901	Symbol	* c		1101846						
ANR	1101902	Symbol	r_flag_get_i		1101846						
ANR	1101903	Function	r_core_print_offsize	1965:0:56930:57088							
ANR	1101904	FunctionDef	"r_core_print_offsize (void * p , ut64 addr)"		1101903	0					
ANR	1101905	CompoundStatement		1965:52:56982:57088	1101903	0					
ANR	1101906	IdentifierDeclStatement	RCore * c = ( RCore * ) p ;	1966:1:56985:57005	1101903	0	True				
ANR	1101907	IdentifierDecl	* c = ( RCore * ) p		1101903	0					
ANR	1101908	IdentifierDeclType	RCore *		1101903	0					
ANR	1101909	Identifier	c		1101903	1					
ANR	1101910	AssignmentExpression	* c = ( RCore * ) p		1101903	2		=			
ANR	1101911	Identifier	c		1101903	0					
ANR	1101912	CastExpression	( RCore * ) p		1101903	1					
ANR	1101913	CastTarget	RCore *		1101903	0					
ANR	1101914	Identifier	p		1101903	1					
ANR	1101915	IdentifierDeclStatement	"RFlagItem * item = r_flag_get_i ( c -> flags , addr ) ;"	1967:1:57008:57055	1101903	1	True				
ANR	1101916	IdentifierDecl	"* item = r_flag_get_i ( c -> flags , addr )"		1101903	0					
ANR	1101917	IdentifierDeclType	RFlagItem *		1101903	0					
ANR	1101918	Identifier	item		1101903	1					
ANR	1101919	AssignmentExpression	"* item = r_flag_get_i ( c -> flags , addr )"		1101903	2		=			
ANR	1101920	Identifier	item		1101903	0					
ANR	1101921	CallExpression	"r_flag_get_i ( c -> flags , addr )"		1101903	1					
ANR	1101922	Callee	r_flag_get_i		1101903	0					
ANR	1101923	Identifier	r_flag_get_i		1101903	0					
ANR	1101924	ArgumentList	c -> flags		1101903	1					
ANR	1101925	Argument	c -> flags		1101903	0					
ANR	1101926	PtrMemberAccess	c -> flags		1101903	0					
ANR	1101927	Identifier	c		1101903	0					
ANR	1101928	Identifier	flags		1101903	1					
ANR	1101929	Argument	addr		1101903	1					
ANR	1101930	Identifier	addr		1101903	0					
ANR	1101931	ReturnStatement	return item ? item -> size : - 1 ;	1968:1:57058:57086	1101903	2	True				
ANR	1101932	ConditionalExpression	item ? item -> size : - 1		1101903	0					
ANR	1101933	Condition	item		1101903	0					
ANR	1101934	Identifier	item		1101903	0					
ANR	1101935	PtrMemberAccess	item -> size		1101903	1					
ANR	1101936	Identifier	item		1101903	0					
ANR	1101937	Identifier	size		1101903	1					
ANR	1101938	UnaryOperationExpression	- 1		1101903	2					
ANR	1101939	UnaryOperator	-		1101903	0					
ANR	1101940	PrimaryExpression	1		1101903	1					
ANR	1101941	ReturnType	static int		1101903	1					
ANR	1101942	Identifier	r_core_print_offsize		1101903	2					
ANR	1101943	ParameterList	"void * p , ut64 addr"		1101903	3					
ANR	1101944	Parameter	void * p	1965:32:56962:56968	1101903	0	True				
ANR	1101945	ParameterType	void *		1101903	0					
ANR	1101946	Identifier	p		1101903	1					
ANR	1101947	Parameter	ut64 addr	1965:41:56971:56979	1101903	1	True				
ANR	1101948	ParameterType	ut64		1101903	0					
ANR	1101949	Identifier	addr		1101903	1					
ANR	1101950	CFGEntryNode	ENTRY		1101903		True				
ANR	1101951	CFGExitNode	EXIT		1101903		True				
ANR	1101952	Symbol	p		1101903						
ANR	1101953	Symbol	item		1101903						
ANR	1101954	Symbol	c		1101903						
ANR	1101955	Symbol	c -> flags		1101903						
ANR	1101956	Symbol	* item		1101903						
ANR	1101957	Symbol	addr		1101903						
ANR	1101958	Symbol	r_flag_get_i		1101903						
ANR	1101959	Symbol	* c		1101903						
ANR	1101960	Symbol	item -> size		1101903						
ANR	1101961	Function	__disasm	1974:0:57152:57400							
ANR	1101962	FunctionDef	"__disasm (void * _core , ut64 addr)"		1101961	0					
ANR	1101963	CompoundStatement		1974:44:57196:57400	1101961	0					
ANR	1101964	IdentifierDeclStatement	RCore * core = _core ;	1975:1:57199:57218	1101961	0	True				
ANR	1101965	IdentifierDecl	* core = _core		1101961	0					
ANR	1101966	IdentifierDeclType	RCore *		1101961	0					
ANR	1101967	Identifier	core		1101961	1					
ANR	1101968	AssignmentExpression	* core = _core		1101961	2		=			
ANR	1101969	Identifier	_core		1101961	0					
ANR	1101970	Identifier	_core		1101961	1					
ANR	1101971	IdentifierDeclStatement	ut64 prevaddr = core -> offset ;	1976:1:57221:57249	1101961	1	True				
ANR	1101972	IdentifierDecl	prevaddr = core -> offset		1101961	0					
ANR	1101973	IdentifierDeclType	ut64		1101961	0					
ANR	1101974	Identifier	prevaddr		1101961	1					
ANR	1101975	AssignmentExpression	prevaddr = core -> offset		1101961	2		=			
ANR	1101976	Identifier	prevaddr		1101961	0					
ANR	1101977	PtrMemberAccess	core -> offset		1101961	1					
ANR	1101978	Identifier	core		1101961	0					
ANR	1101979	Identifier	offset		1101961	1					
ANR	1101980	IdentifierDeclStatement	int len ;	1977:1:57252:57259	1101961	2	True				
ANR	1101981	IdentifierDecl	len		1101961	0					
ANR	1101982	IdentifierDeclType	int		1101961	0					
ANR	1101983	Identifier	len		1101961	1					
ANR	1101984	ExpressionStatement	"r_core_seek ( core , addr , true )"	1979:1:57263:57293	1101961	3	True				
ANR	1101985	CallExpression	"r_core_seek ( core , addr , true )"		1101961	0					
ANR	1101986	Callee	r_core_seek		1101961	0					
ANR	1101987	Identifier	r_core_seek		1101961	0					
ANR	1101988	ArgumentList	core		1101961	1					
ANR	1101989	Argument	core		1101961	0					
ANR	1101990	Identifier	core		1101961	0					
ANR	1101991	Argument	addr		1101961	1					
ANR	1101992	Identifier	addr		1101961	0					
ANR	1101993	Argument	true		1101961	2					
ANR	1101994	Identifier	true		1101961	0					
ANR	1101995	ExpressionStatement	"len = r_core_print_disasm_instructions ( core , 0 , 1 )"	1980:1:57296:57347	1101961	4	True				
ANR	1101996	AssignmentExpression	"len = r_core_print_disasm_instructions ( core , 0 , 1 )"		1101961	0		=			
ANR	1101997	Identifier	len		1101961	0					
ANR	1101998	CallExpression	"r_core_print_disasm_instructions ( core , 0 , 1 )"		1101961	1					
ANR	1101999	Callee	r_core_print_disasm_instructions		1101961	0					
ANR	1102000	Identifier	r_core_print_disasm_instructions		1101961	0					
ANR	1102001	ArgumentList	core		1101961	1					
ANR	1102002	Argument	core		1101961	0					
ANR	1102003	Identifier	core		1101961	0					
ANR	1102004	Argument	0		1101961	1					
ANR	1102005	PrimaryExpression	0		1101961	0					
ANR	1102006	Argument	1		1101961	2					
ANR	1102007	PrimaryExpression	1		1101961	0					
ANR	1102008	ExpressionStatement	"r_core_seek ( core , prevaddr , true )"	1981:1:57350:57384	1101961	5	True				
ANR	1102009	CallExpression	"r_core_seek ( core , prevaddr , true )"		1101961	0					
ANR	1102010	Callee	r_core_seek		1101961	0					
ANR	1102011	Identifier	r_core_seek		1101961	0					
ANR	1102012	ArgumentList	core		1101961	1					
ANR	1102013	Argument	core		1101961	0					
ANR	1102014	Identifier	core		1101961	0					
ANR	1102015	Argument	prevaddr		1101961	1					
ANR	1102016	Identifier	prevaddr		1101961	0					
ANR	1102017	Argument	true		1101961	2					
ANR	1102018	Identifier	true		1101961	0					
ANR	1102019	ReturnStatement	return len ;	1983:1:57388:57398	1101961	6	True				
ANR	1102020	Identifier	len		1101961	0					
ANR	1102021	ReturnType	static int		1101961	1					
ANR	1102022	Identifier	__disasm		1101961	2					
ANR	1102023	ParameterList	"void * _core , ut64 addr"		1101961	3					
ANR	1102024	Parameter	void * _core	1974:20:57172:57182	1101961	0	True				
ANR	1102025	ParameterType	void *		1101961	0					
ANR	1102026	Identifier	_core		1101961	1					
ANR	1102027	Parameter	ut64 addr	1974:33:57185:57193	1101961	1	True				
ANR	1102028	ParameterType	ut64		1101961	0					
ANR	1102029	Identifier	addr		1101961	1					
ANR	1102030	CFGEntryNode	ENTRY		1101961		True				
ANR	1102031	CFGExitNode	EXIT		1101961		True				
ANR	1102032	Symbol	core		1101961						
ANR	1102033	Symbol	len		1101961						
ANR	1102034	Symbol	_core		1101961						
ANR	1102035	Symbol	* core		1101961						
ANR	1102036	Symbol	true		1101961						
ANR	1102037	Symbol	r_core_print_disasm_instructions		1101961						
ANR	1102038	Symbol	core -> offset		1101961						
ANR	1102039	Symbol	prevaddr		1101961						
ANR	1102040	Symbol	addr		1101961						
ANR	1102041	Function	update_sdb	1986:0:57403:58249							
ANR	1102042	FunctionDef	update_sdb (RCore * core)		1102041	0					
ANR	1102043	CompoundStatement		1986:36:57439:58249	1102041	0					
ANR	1102044	IdentifierDeclStatement	Sdb * d ;	1987:1:57442:57448	1102041	0	True				
ANR	1102045	IdentifierDecl	* d		1102041	0					
ANR	1102046	IdentifierDeclType	Sdb *		1102041	0					
ANR	1102047	Identifier	d		1102041	1					
ANR	1102048	IdentifierDeclStatement	RBinObject * o ;	1988:1:57451:57464	1102041	1	True				
ANR	1102049	IdentifierDecl	* o		1102041	0					
ANR	1102050	IdentifierDeclType	RBinObject *		1102041	0					
ANR	1102051	Identifier	o		1102041	1					
ANR	1102052	IfStatement	if ( ! core )		1102041	2					
ANR	1102053	Condition	! core	1989:5:57471:57475	1102041	0	True				
ANR	1102054	UnaryOperationExpression	! core		1102041	0					
ANR	1102055	UnaryOperator	!		1102041	0					
ANR	1102056	Identifier	core		1102041	1					
ANR	1102057	CompoundStatement		4:12:38:38	1102041	1					
ANR	1102058	ReturnStatement	return ;	1990:2:57482:57488	1102041	0	True				
ANR	1102059	IfStatement	if ( core -> anal && core -> anal -> sdb )		1102041	3					
ANR	1102060	Condition	core -> anal && core -> anal -> sdb	1993:5:57513:57541	1102041	0	True				
ANR	1102061	AndExpression	core -> anal && core -> anal -> sdb		1102041	0		&&			
ANR	1102062	PtrMemberAccess	core -> anal		1102041	0					
ANR	1102063	Identifier	core		1102041	0					
ANR	1102064	Identifier	anal		1102041	1					
ANR	1102065	PtrMemberAccess	core -> anal -> sdb		1102041	1					
ANR	1102066	PtrMemberAccess	core -> anal		1102041	0					
ANR	1102067	Identifier	core		1102041	0					
ANR	1102068	Identifier	anal		1102041	1					
ANR	1102069	Identifier	sdb		1102041	1					
ANR	1102070	CompoundStatement		8:36:104:104	1102041	1					
ANR	1102071	ExpressionStatement	"sdb_ns_set ( DB , ""anal"" , core -> anal -> sdb )"	1994:2:57548:57588	1102041	0	True				
ANR	1102072	CallExpression	"sdb_ns_set ( DB , ""anal"" , core -> anal -> sdb )"		1102041	0					
ANR	1102073	Callee	sdb_ns_set		1102041	0					
ANR	1102074	Identifier	sdb_ns_set		1102041	0					
ANR	1102075	ArgumentList	DB		1102041	1					
ANR	1102076	Argument	DB		1102041	0					
ANR	1102077	Identifier	DB		1102041	0					
ANR	1102078	Argument	"""anal"""		1102041	1					
ANR	1102079	PrimaryExpression	"""anal"""		1102041	0					
ANR	1102080	Argument	core -> anal -> sdb		1102041	2					
ANR	1102081	PtrMemberAccess	core -> anal -> sdb		1102041	0					
ANR	1102082	PtrMemberAccess	core -> anal		1102041	0					
ANR	1102083	Identifier	core		1102041	0					
ANR	1102084	Identifier	anal		1102041	1					
ANR	1102085	Identifier	sdb		1102041	1					
ANR	1102086	IfStatement	if ( core -> bin && core -> bin -> sdb )		1102041	4					
ANR	1102087	Condition	core -> bin && core -> bin -> sdb	1997:5:57612:57638	1102041	0	True				
ANR	1102088	AndExpression	core -> bin && core -> bin -> sdb		1102041	0		&&			
ANR	1102089	PtrMemberAccess	core -> bin		1102041	0					
ANR	1102090	Identifier	core		1102041	0					
ANR	1102091	Identifier	bin		1102041	1					
ANR	1102092	PtrMemberAccess	core -> bin -> sdb		1102041	1					
ANR	1102093	PtrMemberAccess	core -> bin		1102041	0					
ANR	1102094	Identifier	core		1102041	0					
ANR	1102095	Identifier	bin		1102041	1					
ANR	1102096	Identifier	sdb		1102041	1					
ANR	1102097	CompoundStatement		12:34:201:201	1102041	1					
ANR	1102098	ExpressionStatement	"sdb_ns_set ( DB , ""bin"" , core -> bin -> sdb )"	1998:2:57645:57683	1102041	0	True				
ANR	1102099	CallExpression	"sdb_ns_set ( DB , ""bin"" , core -> bin -> sdb )"		1102041	0					
ANR	1102100	Callee	sdb_ns_set		1102041	0					
ANR	1102101	Identifier	sdb_ns_set		1102041	0					
ANR	1102102	ArgumentList	DB		1102041	1					
ANR	1102103	Argument	DB		1102041	0					
ANR	1102104	Identifier	DB		1102041	0					
ANR	1102105	Argument	"""bin"""		1102041	1					
ANR	1102106	PrimaryExpression	"""bin"""		1102041	0					
ANR	1102107	Argument	core -> bin -> sdb		1102041	2					
ANR	1102108	PtrMemberAccess	core -> bin -> sdb		1102041	0					
ANR	1102109	PtrMemberAccess	core -> bin		1102041	0					
ANR	1102110	Identifier	core		1102041	0					
ANR	1102111	Identifier	bin		1102041	1					
ANR	1102112	Identifier	sdb		1102041	1					
ANR	1102113	ExpressionStatement	o = r_bin_cur_object ( core -> bin )	2001:1:57707:57739	1102041	5	True				
ANR	1102114	AssignmentExpression	o = r_bin_cur_object ( core -> bin )		1102041	0		=			
ANR	1102115	Identifier	o		1102041	0					
ANR	1102116	CallExpression	r_bin_cur_object ( core -> bin )		1102041	1					
ANR	1102117	Callee	r_bin_cur_object		1102041	0					
ANR	1102118	Identifier	r_bin_cur_object		1102041	0					
ANR	1102119	ArgumentList	core -> bin		1102041	1					
ANR	1102120	Argument	core -> bin		1102041	0					
ANR	1102121	PtrMemberAccess	core -> bin		1102041	0					
ANR	1102122	Identifier	core		1102041	0					
ANR	1102123	Identifier	bin		1102041	1					
ANR	1102124	IfStatement	if ( o )		1102041	6					
ANR	1102125	Condition	o	2002:5:57746:57746	1102041	0	True				
ANR	1102126	Identifier	o		1102041	0					
ANR	1102127	CompoundStatement		17:8:309:309	1102041	1					
ANR	1102128	ExpressionStatement	"sdb_ns_set ( sdb_ns ( DB , ""bin"" , 1 ) , ""info"" , o -> kv )"	2003:2:57753:57802	1102041	0	True				
ANR	1102129	CallExpression	"sdb_ns_set ( sdb_ns ( DB , ""bin"" , 1 ) , ""info"" , o -> kv )"		1102041	0					
ANR	1102130	Callee	sdb_ns_set		1102041	0					
ANR	1102131	Identifier	sdb_ns_set		1102041	0					
ANR	1102132	ArgumentList	"sdb_ns ( DB , ""bin"" , 1 )"		1102041	1					
ANR	1102133	Argument	"sdb_ns ( DB , ""bin"" , 1 )"		1102041	0					
ANR	1102134	CallExpression	"sdb_ns ( DB , ""bin"" , 1 )"		1102041	0					
ANR	1102135	Callee	sdb_ns		1102041	0					
ANR	1102136	Identifier	sdb_ns		1102041	0					
ANR	1102137	ArgumentList	DB		1102041	1					
ANR	1102138	Argument	DB		1102041	0					
ANR	1102139	Identifier	DB		1102041	0					
ANR	1102140	Argument	"""bin"""		1102041	1					
ANR	1102141	PrimaryExpression	"""bin"""		1102041	0					
ANR	1102142	Argument	1		1102041	2					
ANR	1102143	PrimaryExpression	1		1102041	0					
ANR	1102144	Argument	"""info"""		1102041	1					
ANR	1102145	PrimaryExpression	"""info"""		1102041	0					
ANR	1102146	Argument	o -> kv		1102041	2					
ANR	1102147	PtrMemberAccess	o -> kv		1102041	0					
ANR	1102148	Identifier	o		1102041	0					
ANR	1102149	Identifier	kv		1102041	1					
ANR	1102150	IfStatement	if ( core -> assembler && core -> assembler -> syscall && core -> assembler -> syscall -> db )		1102041	7					
ANR	1102151	Condition	core -> assembler && core -> assembler -> syscall && core -> assembler -> syscall -> db	2008:5:57934:58008	1102041	0	True				
ANR	1102152	AndExpression	core -> assembler && core -> assembler -> syscall && core -> assembler -> syscall -> db		1102041	0		&&			
ANR	1102153	PtrMemberAccess	core -> assembler		1102041	0					
ANR	1102154	Identifier	core		1102041	0					
ANR	1102155	Identifier	assembler		1102041	1					
ANR	1102156	AndExpression	core -> assembler -> syscall && core -> assembler -> syscall -> db		1102041	1		&&			
ANR	1102157	PtrMemberAccess	core -> assembler -> syscall		1102041	0					
ANR	1102158	PtrMemberAccess	core -> assembler		1102041	0					
ANR	1102159	Identifier	core		1102041	0					
ANR	1102160	Identifier	assembler		1102041	1					
ANR	1102161	Identifier	syscall		1102041	1					
ANR	1102162	PtrMemberAccess	core -> assembler -> syscall -> db		1102041	1					
ANR	1102163	PtrMemberAccess	core -> assembler -> syscall		1102041	0					
ANR	1102164	PtrMemberAccess	core -> assembler		1102041	0					
ANR	1102165	Identifier	core		1102041	0					
ANR	1102166	Identifier	assembler		1102041	1					
ANR	1102167	Identifier	syscall		1102041	1					
ANR	1102168	Identifier	db		1102041	1					
ANR	1102169	CompoundStatement		23:82:571:571	1102041	1					
ANR	1102170	ExpressionStatement	core -> assembler -> syscall -> db -> refs ++	2009:2:58015:58051	1102041	0	True				
ANR	1102171	PostIncDecOperationExpression	core -> assembler -> syscall -> db -> refs ++		1102041	0					
ANR	1102172	PtrMemberAccess	core -> assembler -> syscall -> db -> refs		1102041	0					
ANR	1102173	PtrMemberAccess	core -> assembler -> syscall -> db		1102041	0					
ANR	1102174	PtrMemberAccess	core -> assembler -> syscall		1102041	0					
ANR	1102175	PtrMemberAccess	core -> assembler		1102041	0					
ANR	1102176	Identifier	core		1102041	0					
ANR	1102177	Identifier	assembler		1102041	1					
ANR	1102178	Identifier	syscall		1102041	1					
ANR	1102179	Identifier	db		1102041	1					
ANR	1102180	Identifier	refs		1102041	1					
ANR	1102181	IncDec	++		1102041	1					
ANR	1102182	ExpressionStatement	"sdb_ns_set ( DB , ""syscall"" , core -> assembler -> syscall -> db )"	2010:2:58055:58111	1102041	1	True				
ANR	1102183	CallExpression	"sdb_ns_set ( DB , ""syscall"" , core -> assembler -> syscall -> db )"		1102041	0					
ANR	1102184	Callee	sdb_ns_set		1102041	0					
ANR	1102185	Identifier	sdb_ns_set		1102041	0					
ANR	1102186	ArgumentList	DB		1102041	1					
ANR	1102187	Argument	DB		1102041	0					
ANR	1102188	Identifier	DB		1102041	0					
ANR	1102189	Argument	"""syscall"""		1102041	1					
ANR	1102190	PrimaryExpression	"""syscall"""		1102041	0					
ANR	1102191	Argument	core -> assembler -> syscall -> db		1102041	2					
ANR	1102192	PtrMemberAccess	core -> assembler -> syscall -> db		1102041	0					
ANR	1102193	PtrMemberAccess	core -> assembler -> syscall		1102041	0					
ANR	1102194	PtrMemberAccess	core -> assembler		1102041	0					
ANR	1102195	Identifier	core		1102041	0					
ANR	1102196	Identifier	assembler		1102041	1					
ANR	1102197	Identifier	syscall		1102041	1					
ANR	1102198	Identifier	db		1102041	1					
ANR	1102199	ExpressionStatement	"d = sdb_ns ( DB , ""debug"" , 1 )"	2012:1:58117:58144	1102041	8	True				
ANR	1102200	AssignmentExpression	"d = sdb_ns ( DB , ""debug"" , 1 )"		1102041	0		=			
ANR	1102201	Identifier	d		1102041	0					
ANR	1102202	CallExpression	"sdb_ns ( DB , ""debug"" , 1 )"		1102041	1					
ANR	1102203	Callee	sdb_ns		1102041	0					
ANR	1102204	Identifier	sdb_ns		1102041	0					
ANR	1102205	ArgumentList	DB		1102041	1					
ANR	1102206	Argument	DB		1102041	0					
ANR	1102207	Identifier	DB		1102041	0					
ANR	1102208	Argument	"""debug"""		1102041	1					
ANR	1102209	PrimaryExpression	"""debug"""		1102041	0					
ANR	1102210	Argument	1		1102041	2					
ANR	1102211	PrimaryExpression	1		1102041	0					
ANR	1102212	IfStatement	if ( core -> dbg -> sgnls )		1102041	9					
ANR	1102213	Condition	core -> dbg -> sgnls	2013:5:58151:58166	1102041	0	True				
ANR	1102214	PtrMemberAccess	core -> dbg -> sgnls		1102041	0					
ANR	1102215	PtrMemberAccess	core -> dbg		1102041	0					
ANR	1102216	Identifier	core		1102041	0					
ANR	1102217	Identifier	dbg		1102041	1					
ANR	1102218	Identifier	sgnls		1102041	1					
ANR	1102219	CompoundStatement		28:23:729:729	1102041	1					
ANR	1102220	ExpressionStatement	core -> dbg -> sgnls -> refs ++	2014:2:58173:58197	1102041	0	True				
ANR	1102221	PostIncDecOperationExpression	core -> dbg -> sgnls -> refs ++		1102041	0					
ANR	1102222	PtrMemberAccess	core -> dbg -> sgnls -> refs		1102041	0					
ANR	1102223	PtrMemberAccess	core -> dbg -> sgnls		1102041	0					
ANR	1102224	PtrMemberAccess	core -> dbg		1102041	0					
ANR	1102225	Identifier	core		1102041	0					
ANR	1102226	Identifier	dbg		1102041	1					
ANR	1102227	Identifier	sgnls		1102041	1					
ANR	1102228	Identifier	refs		1102041	1					
ANR	1102229	IncDec	++		1102041	1					
ANR	1102230	ExpressionStatement	"sdb_ns_set ( d , ""signals"" , core -> dbg -> sgnls )"	2015:2:58201:58244	1102041	1	True				
ANR	1102231	CallExpression	"sdb_ns_set ( d , ""signals"" , core -> dbg -> sgnls )"		1102041	0					
ANR	1102232	Callee	sdb_ns_set		1102041	0					
ANR	1102233	Identifier	sdb_ns_set		1102041	0					
ANR	1102234	ArgumentList	d		1102041	1					
ANR	1102235	Argument	d		1102041	0					
ANR	1102236	Identifier	d		1102041	0					
ANR	1102237	Argument	"""signals"""		1102041	1					
ANR	1102238	PrimaryExpression	"""signals"""		1102041	0					
ANR	1102239	Argument	core -> dbg -> sgnls		1102041	2					
ANR	1102240	PtrMemberAccess	core -> dbg -> sgnls		1102041	0					
ANR	1102241	PtrMemberAccess	core -> dbg		1102041	0					
ANR	1102242	Identifier	core		1102041	0					
ANR	1102243	Identifier	dbg		1102041	1					
ANR	1102244	Identifier	sgnls		1102041	1					
ANR	1102245	ReturnType	static void		1102041	1					
ANR	1102246	Identifier	update_sdb		1102041	2					
ANR	1102247	ParameterList	RCore * core		1102041	3					
ANR	1102248	Parameter	RCore * core	1986:23:57426:57436	1102041	0	True				
ANR	1102249	ParameterType	RCore *		1102041	0					
ANR	1102250	Identifier	core		1102041	1					
ANR	1102251	CFGEntryNode	ENTRY		1102041		True				
ANR	1102252	CFGExitNode	EXIT		1102041		True				
ANR	1102253	Symbol	* core		1102041						
ANR	1102254	Symbol	core -> assembler -> syscall -> db		1102041						
ANR	1102255	Symbol	core -> assembler		1102041						
ANR	1102256	Symbol	* * * core -> assembler		1102041						
ANR	1102257	Symbol	core -> assembler -> syscall		1102041						
ANR	1102258	Symbol	o -> kv		1102041						
ANR	1102259	Symbol	core -> anal		1102041						
ANR	1102260	Symbol	core -> dbg -> sgnls		1102041						
ANR	1102261	Symbol	* core -> assembler		1102041						
ANR	1102262	Symbol	* core -> assembler -> syscall		1102041						
ANR	1102263	Symbol	core -> dbg -> sgnls -> refs		1102041						
ANR	1102264	Symbol	* core -> assembler -> syscall -> db		1102041						
ANR	1102265	Symbol	* core -> bin		1102041						
ANR	1102266	Symbol	* * * * core		1102041						
ANR	1102267	Symbol	core -> bin		1102041						
ANR	1102268	Symbol	* * core		1102041						
ANR	1102269	Symbol	r_bin_cur_object		1102041						
ANR	1102270	Symbol	core -> anal -> sdb		1102041						
ANR	1102271	Symbol	* * core -> assembler -> syscall		1102041						
ANR	1102272	Symbol	d		1102041						
ANR	1102273	Symbol	* core -> dbg -> sgnls		1102041						
ANR	1102274	Symbol	o		1102041						
ANR	1102275	Symbol	core		1102041						
ANR	1102276	Symbol	* * * core		1102041						
ANR	1102277	Symbol	* core -> anal		1102041						
ANR	1102278	Symbol	core -> bin -> sdb		1102041						
ANR	1102279	Symbol	* o		1102041						
ANR	1102280	Symbol	* * core -> assembler		1102041						
ANR	1102281	Symbol	* core -> dbg		1102041						
ANR	1102282	Symbol	DB		1102041						
ANR	1102283	Symbol	sdb_ns		1102041						
ANR	1102284	Symbol	core -> assembler -> syscall -> db -> refs		1102041						
ANR	1102285	Symbol	core -> dbg		1102041						
ANR	1102286	Symbol	* * core -> dbg		1102041						
ANR	1102287	Function	is_string	2020:0:58269:58828							
ANR	1102288	FunctionDef	"is_string (const ut8 * buf , int size , int * len)"		1102287	0					
ANR	1102289	CompoundStatement		2020:58:58327:58828	1102287	0					
ANR	1102290	IdentifierDeclStatement	int i ;	2021:1:58330:58335	1102287	0	True				
ANR	1102291	IdentifierDecl	i		1102287	0					
ANR	1102292	IdentifierDeclType	int		1102287	0					
ANR	1102293	Identifier	i		1102287	1					
ANR	1102294	IfStatement	if ( size < 1 )		1102287	1					
ANR	1102295	Condition	size < 1	2022:5:58342:58349	1102287	0	True				
ANR	1102296	RelationalExpression	size < 1		1102287	0		<			
ANR	1102297	Identifier	size		1102287	0					
ANR	1102298	PrimaryExpression	1		1102287	1					
ANR	1102299	CompoundStatement		3:15:24:24	1102287	1					
ANR	1102300	ReturnStatement	return 0 ;	2023:2:58356:58364	1102287	0	True				
ANR	1102301	PrimaryExpression	0		1102287	0					
ANR	1102302	IfStatement	if ( size > 3 && buf [ 0 ] && ! buf [ 1 ] && buf [ 2 ] && ! buf [ 3 ] )		1102287	2					
ANR	1102303	Condition	size > 3 && buf [ 0 ] && ! buf [ 1 ] && buf [ 2 ] && ! buf [ 3 ]	2025:5:58374:58423	1102287	0	True				
ANR	1102304	AndExpression	size > 3 && buf [ 0 ] && ! buf [ 1 ] && buf [ 2 ] && ! buf [ 3 ]		1102287	0		&&			
ANR	1102305	RelationalExpression	size > 3		1102287	0		>			
ANR	1102306	Identifier	size		1102287	0					
ANR	1102307	PrimaryExpression	3		1102287	1					
ANR	1102308	AndExpression	buf [ 0 ] && ! buf [ 1 ] && buf [ 2 ] && ! buf [ 3 ]		1102287	1		&&			
ANR	1102309	ArrayIndexing	buf [ 0 ]		1102287	0					
ANR	1102310	Identifier	buf		1102287	0					
ANR	1102311	PrimaryExpression	0		1102287	1					
ANR	1102312	AndExpression	! buf [ 1 ] && buf [ 2 ] && ! buf [ 3 ]		1102287	1		&&			
ANR	1102313	UnaryOperationExpression	! buf [ 1 ]		1102287	0					
ANR	1102314	UnaryOperator	!		1102287	0					
ANR	1102315	ArrayIndexing	buf [ 1 ]		1102287	1					
ANR	1102316	Identifier	buf		1102287	0					
ANR	1102317	PrimaryExpression	1		1102287	1					
ANR	1102318	AndExpression	buf [ 2 ] && ! buf [ 3 ]		1102287	1		&&			
ANR	1102319	ArrayIndexing	buf [ 2 ]		1102287	0					
ANR	1102320	Identifier	buf		1102287	0					
ANR	1102321	PrimaryExpression	2		1102287	1					
ANR	1102322	UnaryOperationExpression	! buf [ 3 ]		1102287	1					
ANR	1102323	UnaryOperator	!		1102287	0					
ANR	1102324	ArrayIndexing	buf [ 3 ]		1102287	1					
ANR	1102325	Identifier	buf		1102287	0					
ANR	1102326	PrimaryExpression	3		1102287	1					
ANR	1102327	CompoundStatement		6:57:98:98	1102287	1					
ANR	1102328	ExpressionStatement	* len = 1	2026:2:58430:58438	1102287	0	True				
ANR	1102329	AssignmentExpression	* len = 1		1102287	0		=			
ANR	1102330	UnaryOperationExpression	* len		1102287	0					
ANR	1102331	UnaryOperator	*		1102287	0					
ANR	1102332	Identifier	len		1102287	1					
ANR	1102333	PrimaryExpression	1		1102287	1					
ANR	1102334	ReturnStatement	return 2 ;	2027:2:58483:58491	1102287	1	True				
ANR	1102335	PrimaryExpression	2		1102287	0					
ANR	1102336	ForStatement	for ( i = 0 ; i < size ; i ++ )		1102287	3					
ANR	1102337	ForInit	i = 0 ;	2029:6:58513:58518	1102287	0	True				
ANR	1102338	AssignmentExpression	i = 0		1102287	0		=			
ANR	1102339	Identifier	i		1102287	0					
ANR	1102340	PrimaryExpression	0		1102287	1					
ANR	1102341	Condition	i < size	2029:13:58520:58527	1102287	1	True				
ANR	1102342	RelationalExpression	i < size		1102287	0		<			
ANR	1102343	Identifier	i		1102287	0					
ANR	1102344	Identifier	size		1102287	1					
ANR	1102345	PostIncDecOperationExpression	i ++	2029:23:58530:58532	1102287	2	True				
ANR	1102346	Identifier	i		1102287	0					
ANR	1102347	IncDec	++		1102287	1					
ANR	1102348	CompoundStatement		10:28:207:207	1102287	3					
ANR	1102349	IfStatement	if ( ! buf [ i ] && i > MINLEN )		1102287	0					
ANR	1102350	Condition	! buf [ i ] && i > MINLEN	2030:6:58543:58563	1102287	0	True				
ANR	1102351	AndExpression	! buf [ i ] && i > MINLEN		1102287	0		&&			
ANR	1102352	UnaryOperationExpression	! buf [ i ]		1102287	0					
ANR	1102353	UnaryOperator	!		1102287	0					
ANR	1102354	ArrayIndexing	buf [ i ]		1102287	1					
ANR	1102355	Identifier	buf		1102287	0					
ANR	1102356	Identifier	i		1102287	1					
ANR	1102357	RelationalExpression	i > MINLEN		1102287	1		>			
ANR	1102358	Identifier	i		1102287	0					
ANR	1102359	Identifier	MINLEN		1102287	1					
ANR	1102360	CompoundStatement		11:29:238:238	1102287	1					
ANR	1102361	ExpressionStatement	* len = i	2031:3:58571:58579	1102287	0	True				
ANR	1102362	AssignmentExpression	* len = i		1102287	0		=			
ANR	1102363	UnaryOperationExpression	* len		1102287	0					
ANR	1102364	UnaryOperator	*		1102287	0					
ANR	1102365	Identifier	len		1102287	1					
ANR	1102366	Identifier	i		1102287	1					
ANR	1102367	ReturnStatement	return 1 ;	2032:3:58584:58592	1102287	1	True				
ANR	1102368	PrimaryExpression	1		1102287	0					
ANR	1102369	IfStatement	if ( buf [ i ] == 10 || buf [ i ] == 13 || buf [ i ] == 9 )		1102287	1					
ANR	1102370	Condition	buf [ i ] == 10 || buf [ i ] == 13 || buf [ i ] == 9	2034:6:58604:58644	1102287	0	True				
ANR	1102371	OrExpression	buf [ i ] == 10 || buf [ i ] == 13 || buf [ i ] == 9		1102287	0		||			
ANR	1102372	EqualityExpression	buf [ i ] == 10		1102287	0		==			
ANR	1102373	ArrayIndexing	buf [ i ]		1102287	0					
ANR	1102374	Identifier	buf		1102287	0					
ANR	1102375	Identifier	i		1102287	1					
ANR	1102376	PrimaryExpression	10		1102287	1					
ANR	1102377	OrExpression	buf [ i ] == 13 || buf [ i ] == 9		1102287	1		||			
ANR	1102378	EqualityExpression	buf [ i ] == 13		1102287	0		==			
ANR	1102379	ArrayIndexing	buf [ i ]		1102287	0					
ANR	1102380	Identifier	buf		1102287	0					
ANR	1102381	Identifier	i		1102287	1					
ANR	1102382	PrimaryExpression	13		1102287	1					
ANR	1102383	EqualityExpression	buf [ i ] == 9		1102287	1		==			
ANR	1102384	ArrayIndexing	buf [ i ]		1102287	0					
ANR	1102385	Identifier	buf		1102287	0					
ANR	1102386	Identifier	i		1102287	1					
ANR	1102387	PrimaryExpression	9		1102287	1					
ANR	1102388	CompoundStatement		15:49:319:319	1102287	1					
ANR	1102389	ContinueStatement	continue ;	2035:3:58652:58660	1102287	0	True				
ANR	1102390	IfStatement	if ( buf [ i ] < 32 || buf [ i ] > 127 )		1102287	2					
ANR	1102391	Condition	buf [ i ] < 32 || buf [ i ] > 127	2037:6:58672:58698	1102287	0	True				
ANR	1102392	OrExpression	buf [ i ] < 32 || buf [ i ] > 127		1102287	0		||			
ANR	1102393	RelationalExpression	buf [ i ] < 32		1102287	0		<			
ANR	1102394	ArrayIndexing	buf [ i ]		1102287	0					
ANR	1102395	Identifier	buf		1102287	0					
ANR	1102396	Identifier	i		1102287	1					
ANR	1102397	PrimaryExpression	32		1102287	1					
ANR	1102398	RelationalExpression	buf [ i ] > 127		1102287	1		>			
ANR	1102399	ArrayIndexing	buf [ i ]		1102287	0					
ANR	1102400	Identifier	buf		1102287	0					
ANR	1102401	Identifier	i		1102287	1					
ANR	1102402	PrimaryExpression	127		1102287	1					
ANR	1102403	CompoundStatement		18:35:373:373	1102287	1					
ANR	1102404	ReturnStatement	return 0 ;	2039:3:58727:58735	1102287	0	True				
ANR	1102405	PrimaryExpression	0		1102287	0					
ANR	1102406	IfStatement	if ( ! IS_PRINTABLE ( buf [ i ] ) )		1102287	3					
ANR	1102407	Condition	! IS_PRINTABLE ( buf [ i ] )	2041:6:58747:58768	1102287	0	True				
ANR	1102408	UnaryOperationExpression	! IS_PRINTABLE ( buf [ i ] )		1102287	0					
ANR	1102409	UnaryOperator	!		1102287	0					
ANR	1102410	CallExpression	IS_PRINTABLE ( buf [ i ] )		1102287	1					
ANR	1102411	Callee	IS_PRINTABLE		1102287	0					
ANR	1102412	Identifier	IS_PRINTABLE		1102287	0					
ANR	1102413	ArgumentList	buf [ i ]		1102287	1					
ANR	1102414	Argument	buf [ i ]		1102287	0					
ANR	1102415	ArrayIndexing	buf [ i ]		1102287	0					
ANR	1102416	Identifier	buf		1102287	0					
ANR	1102417	Identifier	i		1102287	1					
ANR	1102418	CompoundStatement		22:30:443:443	1102287	1					
ANR	1102419	ExpressionStatement	* len = i	2042:3:58776:58784	1102287	0	True				
ANR	1102420	AssignmentExpression	* len = i		1102287	0		=			
ANR	1102421	UnaryOperationExpression	* len		1102287	0					
ANR	1102422	UnaryOperator	*		1102287	0					
ANR	1102423	Identifier	len		1102287	1					
ANR	1102424	Identifier	i		1102287	1					
ANR	1102425	ReturnStatement	return 0 ;	2043:3:58789:58797	1102287	1	True				
ANR	1102426	PrimaryExpression	0		1102287	0					
ANR	1102427	ExpressionStatement	* len = i	2046:1:58807:58815	1102287	4	True				
ANR	1102428	AssignmentExpression	* len = i		1102287	0		=			
ANR	1102429	UnaryOperationExpression	* len		1102287	0					
ANR	1102430	UnaryOperator	*		1102287	0					
ANR	1102431	Identifier	len		1102287	1					
ANR	1102432	Identifier	i		1102287	1					
ANR	1102433	ReturnStatement	return 1 ;	2047:1:58818:58826	1102287	5	True				
ANR	1102434	PrimaryExpression	1		1102287	0					
ANR	1102435	ReturnType	static int		1102287	1					
ANR	1102436	Identifier	is_string		1102287	2					
ANR	1102437	ParameterList	"const ut8 * buf , int size , int * len"		1102287	3					
ANR	1102438	Parameter	const ut8 * buf	2020:22:58291:58304	1102287	0	True				
ANR	1102439	ParameterType	const ut8 *		1102287	0					
ANR	1102440	Identifier	buf		1102287	1					
ANR	1102441	Parameter	int size	2020:38:58307:58314	1102287	1	True				
ANR	1102442	ParameterType	int		1102287	0					
ANR	1102443	Identifier	size		1102287	1					
ANR	1102444	Parameter	int * len	2020:48:58317:58324	1102287	2	True				
ANR	1102445	ParameterType	int *		1102287	0					
ANR	1102446	Identifier	len		1102287	1					
ANR	1102447	CFGEntryNode	ENTRY		1102287		True				
ANR	1102448	CFGExitNode	EXIT		1102287		True				
ANR	1102449	Symbol	buf		1102287						
ANR	1102450	Symbol	* buf		1102287						
ANR	1102451	Symbol	* i		1102287						
ANR	1102452	Symbol	IS_PRINTABLE		1102287						
ANR	1102453	Symbol	size		1102287						
ANR	1102454	Symbol	len		1102287						
ANR	1102455	Symbol	i		1102287						
ANR	1102456	Symbol	MINLEN		1102287						
ANR	1102457	Symbol	* len		1102287						
ANR	1102458	DeclStmt									
ANR	1102459	Decl							char	"char * ( RCore * core , ut64 value , int depth )"	r_core_anal_hasrefs_to_depth
ANR	1102460	Function	r_core_anal_hasrefs	2051:0:58910:59223							
ANR	1102461	FunctionDef	"r_core_anal_hasrefs (RCore * core , ut64 value , bool verbose)"		1102460	0					
ANR	1102462	CompoundStatement		2051:71:58981:59223	1102460	0					
ANR	1102463	IfStatement	if ( verbose )		1102460	0					
ANR	1102464	Condition	verbose	2052:5:58988:58994	1102460	0	True				
ANR	1102465	Identifier	verbose		1102460	0					
ANR	1102466	CompoundStatement		3:2:19:83	1102460	1					
ANR	1102467	IdentifierDeclStatement	"const int hex_depth = r_config_get_i ( core -> config , ""hex.depth"" ) ;"	2053:2:59001:59065	1102460	0	True				
ANR	1102468	IdentifierDecl	"hex_depth = r_config_get_i ( core -> config , ""hex.depth"" )"		1102460	0					
ANR	1102469	IdentifierDeclType	const int		1102460	0					
ANR	1102470	Identifier	hex_depth		1102460	1					
ANR	1102471	AssignmentExpression	"hex_depth = r_config_get_i ( core -> config , ""hex.depth"" )"		1102460	2		=			
ANR	1102472	Identifier	hex_depth		1102460	0					
ANR	1102473	CallExpression	"r_config_get_i ( core -> config , ""hex.depth"" )"		1102460	1					
ANR	1102474	Callee	r_config_get_i		1102460	0					
ANR	1102475	Identifier	r_config_get_i		1102460	0					
ANR	1102476	ArgumentList	core -> config		1102460	1					
ANR	1102477	Argument	core -> config		1102460	0					
ANR	1102478	PtrMemberAccess	core -> config		1102460	0					
ANR	1102479	Identifier	core		1102460	0					
ANR	1102480	Identifier	config		1102460	1					
ANR	1102481	Argument	"""hex.depth"""		1102460	1					
ANR	1102482	PrimaryExpression	"""hex.depth"""		1102460	0					
ANR	1102483	ReturnStatement	"return r_core_anal_hasrefs_to_depth ( core , value , hex_depth ) ;"	2054:2:59069:59129	1102460	1	True				
ANR	1102484	CallExpression	"r_core_anal_hasrefs_to_depth ( core , value , hex_depth )"		1102460	0					
ANR	1102485	Callee	r_core_anal_hasrefs_to_depth		1102460	0					
ANR	1102486	Identifier	r_core_anal_hasrefs_to_depth		1102460	0					
ANR	1102487	ArgumentList	core		1102460	1					
ANR	1102488	Argument	core		1102460	0					
ANR	1102489	Identifier	core		1102460	0					
ANR	1102490	Argument	value		1102460	1					
ANR	1102491	Identifier	value		1102460	0					
ANR	1102492	Argument	hex_depth		1102460	2					
ANR	1102493	Identifier	hex_depth		1102460	0					
ANR	1102494	IdentifierDeclStatement	"RFlagItem * fi = r_flag_get_i ( core -> flags , value ) ;"	2056:1:59135:59184	1102460	1	True				
ANR	1102495	IdentifierDecl	"* fi = r_flag_get_i ( core -> flags , value )"		1102460	0					
ANR	1102496	IdentifierDeclType	RFlagItem *		1102460	0					
ANR	1102497	Identifier	fi		1102460	1					
ANR	1102498	AssignmentExpression	"* fi = r_flag_get_i ( core -> flags , value )"		1102460	2		=			
ANR	1102499	Identifier	fi		1102460	0					
ANR	1102500	CallExpression	"r_flag_get_i ( core -> flags , value )"		1102460	1					
ANR	1102501	Callee	r_flag_get_i		1102460	0					
ANR	1102502	Identifier	r_flag_get_i		1102460	0					
ANR	1102503	ArgumentList	core -> flags		1102460	1					
ANR	1102504	Argument	core -> flags		1102460	0					
ANR	1102505	PtrMemberAccess	core -> flags		1102460	0					
ANR	1102506	Identifier	core		1102460	0					
ANR	1102507	Identifier	flags		1102460	1					
ANR	1102508	Argument	value		1102460	1					
ANR	1102509	Identifier	value		1102460	0					
ANR	1102510	ReturnStatement	return fi ? strdup ( fi -> name ) : NULL ;	2057:1:59187:59221	1102460	2	True				
ANR	1102511	ConditionalExpression	fi ? strdup ( fi -> name ) : NULL		1102460	0					
ANR	1102512	Condition	fi		1102460	0					
ANR	1102513	Identifier	fi		1102460	0					
ANR	1102514	CallExpression	strdup ( fi -> name )		1102460	1					
ANR	1102515	Callee	strdup		1102460	0					
ANR	1102516	Identifier	strdup		1102460	0					
ANR	1102517	ArgumentList	fi -> name		1102460	1					
ANR	1102518	Argument	fi -> name		1102460	0					
ANR	1102519	PtrMemberAccess	fi -> name		1102460	0					
ANR	1102520	Identifier	fi		1102460	0					
ANR	1102521	Identifier	name		1102460	1					
ANR	1102522	Identifier	NULL		1102460	2					
ANR	1102523	ReturnType	R_API char *		1102460	1					
ANR	1102524	Identifier	r_core_anal_hasrefs		1102460	2					
ANR	1102525	ParameterList	"RCore * core , ut64 value , bool verbose"		1102460	3					
ANR	1102526	Parameter	RCore * core	2051:32:58942:58952	1102460	0	True				
ANR	1102527	ParameterType	RCore *		1102460	0					
ANR	1102528	Identifier	core		1102460	1					
ANR	1102529	Parameter	ut64 value	2051:45:58955:58964	1102460	1	True				
ANR	1102530	ParameterType	ut64		1102460	0					
ANR	1102531	Identifier	value		1102460	1					
ANR	1102532	Parameter	bool verbose	2051:57:58967:58978	1102460	2	True				
ANR	1102533	ParameterType	bool		1102460	0					
ANR	1102534	Identifier	verbose		1102460	1					
ANR	1102535	CFGEntryNode	ENTRY		1102460		True				
ANR	1102536	CFGExitNode	EXIT		1102460		True				
ANR	1102537	Symbol	core -> config		1102460						
ANR	1102538	Symbol	hex_depth		1102460						
ANR	1102539	Symbol	fi		1102460						
ANR	1102540	Symbol	NULL		1102460						
ANR	1102541	Symbol	* core		1102460						
ANR	1102542	Symbol	fi -> name		1102460						
ANR	1102543	Symbol	core -> flags		1102460						
ANR	1102544	Symbol	* fi		1102460						
ANR	1102545	Symbol	verbose		1102460						
ANR	1102546	Symbol	core		1102460						
ANR	1102547	Symbol	r_core_anal_hasrefs_to_depth		1102460						
ANR	1102548	Symbol	r_config_get_i		1102460						
ANR	1102549	Symbol	strdup		1102460						
ANR	1102550	Symbol	value		1102460						
ANR	1102551	Symbol	r_flag_get_i		1102460						
ANR	1102552	Function	r_core_anal_hasrefs_to_depth	2060:0:59226:64118							
ANR	1102553	FunctionDef	"r_core_anal_hasrefs_to_depth (RCore * core , ut64 value , int depth)"		1102552	0					
ANR	1102554	CompoundStatement		2060:78:59304:64118	1102552	0					
ANR	1102555	ExpressionStatement	"r_return_val_if_fail ( core && value != UT64_MAX , NULL )"	2061:1:59307:59361	1102552	0	True				
ANR	1102556	CallExpression	"r_return_val_if_fail ( core && value != UT64_MAX , NULL )"		1102552	0					
ANR	1102557	Callee	r_return_val_if_fail		1102552	0					
ANR	1102558	Identifier	r_return_val_if_fail		1102552	0					
ANR	1102559	ArgumentList	core && value != UT64_MAX		1102552	1					
ANR	1102560	Argument	core && value != UT64_MAX		1102552	0					
ANR	1102561	AndExpression	core && value != UT64_MAX		1102552	0		&&			
ANR	1102562	Identifier	core		1102552	0					
ANR	1102563	EqualityExpression	value != UT64_MAX		1102552	1		!=			
ANR	1102564	Identifier	value		1102552	0					
ANR	1102565	Identifier	UT64_MAX		1102552	1					
ANR	1102566	Argument	NULL		1102552	1					
ANR	1102567	Identifier	NULL		1102552	0					
ANR	1102568	IfStatement	if ( depth < 1 )		1102552	1					
ANR	1102569	Condition	depth < 1	2062:5:59368:59376	1102552	0	True				
ANR	1102570	RelationalExpression	depth < 1		1102552	0		<			
ANR	1102571	Identifier	depth		1102552	0					
ANR	1102572	PrimaryExpression	1		1102552	1					
ANR	1102573	CompoundStatement		3:16:74:74	1102552	1					
ANR	1102574	ReturnStatement	return NULL ;	2063:2:59383:59394	1102552	0	True				
ANR	1102575	Identifier	NULL		1102552	0					
ANR	1102576	IdentifierDeclStatement	RStrBuf * s = r_strbuf_new ( NULL ) ;	2065:1:59400:59432	1102552	2	True				
ANR	1102577	IdentifierDecl	* s = r_strbuf_new ( NULL )		1102552	0					
ANR	1102578	IdentifierDeclType	RStrBuf *		1102552	0					
ANR	1102579	Identifier	s		1102552	1					
ANR	1102580	AssignmentExpression	* s = r_strbuf_new ( NULL )		1102552	2		=			
ANR	1102581	Identifier	s		1102552	0					
ANR	1102582	CallExpression	r_strbuf_new ( NULL )		1102552	1					
ANR	1102583	Callee	r_strbuf_new		1102552	0					
ANR	1102584	Identifier	r_strbuf_new		1102552	0					
ANR	1102585	ArgumentList	NULL		1102552	1					
ANR	1102586	Argument	NULL		1102552	0					
ANR	1102587	Identifier	NULL		1102552	0					
ANR	1102588	IdentifierDeclStatement	char * mapname = NULL ;	2066:1:59435:59455	1102552	3	True				
ANR	1102589	IdentifierDecl	* mapname = NULL		1102552	0					
ANR	1102590	IdentifierDeclType	char *		1102552	0					
ANR	1102591	Identifier	mapname		1102552	1					
ANR	1102592	AssignmentExpression	* mapname = NULL		1102552	2		=			
ANR	1102593	Identifier	NULL		1102552	0					
ANR	1102594	Identifier	NULL		1102552	1					
ANR	1102595	IdentifierDeclStatement	"RFlagItem * fi = r_flag_get_i ( core -> flags , value ) ;"	2067:1:59458:59507	1102552	4	True				
ANR	1102596	IdentifierDecl	"* fi = r_flag_get_i ( core -> flags , value )"		1102552	0					
ANR	1102597	IdentifierDeclType	RFlagItem *		1102552	0					
ANR	1102598	Identifier	fi		1102552	1					
ANR	1102599	AssignmentExpression	"* fi = r_flag_get_i ( core -> flags , value )"		1102552	2		=			
ANR	1102600	Identifier	fi		1102552	0					
ANR	1102601	CallExpression	"r_flag_get_i ( core -> flags , value )"		1102552	1					
ANR	1102602	Callee	r_flag_get_i		1102552	0					
ANR	1102603	Identifier	r_flag_get_i		1102552	0					
ANR	1102604	ArgumentList	core -> flags		1102552	1					
ANR	1102605	Argument	core -> flags		1102552	0					
ANR	1102606	PtrMemberAccess	core -> flags		1102552	0					
ANR	1102607	Identifier	core		1102552	0					
ANR	1102608	Identifier	flags		1102552	1					
ANR	1102609	Argument	value		1102552	1					
ANR	1102610	Identifier	value		1102552	0					
ANR	1102611	IdentifierDeclStatement	"ut64 type = r_core_anal_address ( core , value ) ;"	2068:1:59510:59555	1102552	5	True				
ANR	1102612	IdentifierDecl	"type = r_core_anal_address ( core , value )"		1102552	0					
ANR	1102613	IdentifierDeclType	ut64		1102552	0					
ANR	1102614	Identifier	type		1102552	1					
ANR	1102615	AssignmentExpression	"type = r_core_anal_address ( core , value )"		1102552	2		=			
ANR	1102616	Identifier	type		1102552	0					
ANR	1102617	CallExpression	"r_core_anal_address ( core , value )"		1102552	1					
ANR	1102618	Callee	r_core_anal_address		1102552	0					
ANR	1102619	Identifier	r_core_anal_address		1102552	0					
ANR	1102620	ArgumentList	core		1102552	1					
ANR	1102621	Argument	core		1102552	0					
ANR	1102622	Identifier	core		1102552	0					
ANR	1102623	Argument	value		1102552	1					
ANR	1102624	Identifier	value		1102552	0					
ANR	1102625	IfStatement	if ( value && value != UT64_MAX )		1102552	6					
ANR	1102626	Condition	value && value != UT64_MAX	2069:5:59562:59587	1102552	0	True				
ANR	1102627	AndExpression	value && value != UT64_MAX		1102552	0		&&			
ANR	1102628	Identifier	value		1102552	0					
ANR	1102629	EqualityExpression	value != UT64_MAX		1102552	1		!=			
ANR	1102630	Identifier	value		1102552	0					
ANR	1102631	Identifier	UT64_MAX		1102552	1					
ANR	1102632	CompoundStatement		11:2:289:340	1102552	1					
ANR	1102633	IdentifierDeclStatement	"RDebugMap * map = r_debug_map_get ( core -> dbg , value ) ;"	2070:2:59594:59645	1102552	0	True				
ANR	1102634	IdentifierDecl	"* map = r_debug_map_get ( core -> dbg , value )"		1102552	0					
ANR	1102635	IdentifierDeclType	RDebugMap *		1102552	0					
ANR	1102636	Identifier	map		1102552	1					
ANR	1102637	AssignmentExpression	"* map = r_debug_map_get ( core -> dbg , value )"		1102552	2		=			
ANR	1102638	Identifier	map		1102552	0					
ANR	1102639	CallExpression	"r_debug_map_get ( core -> dbg , value )"		1102552	1					
ANR	1102640	Callee	r_debug_map_get		1102552	0					
ANR	1102641	Identifier	r_debug_map_get		1102552	0					
ANR	1102642	ArgumentList	core -> dbg		1102552	1					
ANR	1102643	Argument	core -> dbg		1102552	0					
ANR	1102644	PtrMemberAccess	core -> dbg		1102552	0					
ANR	1102645	Identifier	core		1102552	0					
ANR	1102646	Identifier	dbg		1102552	1					
ANR	1102647	Argument	value		1102552	1					
ANR	1102648	Identifier	value		1102552	0					
ANR	1102649	IfStatement	if ( map && map -> name && map -> name [ 0 ] )		1102552	1					
ANR	1102650	Condition	map && map -> name && map -> name [ 0 ]	2071:6:59653:59684	1102552	0	True				
ANR	1102651	AndExpression	map && map -> name && map -> name [ 0 ]		1102552	0		&&			
ANR	1102652	Identifier	map		1102552	0					
ANR	1102653	AndExpression	map -> name && map -> name [ 0 ]		1102552	1		&&			
ANR	1102654	PtrMemberAccess	map -> name		1102552	0					
ANR	1102655	Identifier	map		1102552	0					
ANR	1102656	Identifier	name		1102552	1					
ANR	1102657	ArrayIndexing	map -> name [ 0 ]		1102552	1					
ANR	1102658	PtrMemberAccess	map -> name		1102552	0					
ANR	1102659	Identifier	map		1102552	0					
ANR	1102660	Identifier	name		1102552	1					
ANR	1102661	PrimaryExpression	0		1102552	1					
ANR	1102662	CompoundStatement		12:40:382:382	1102552	1					
ANR	1102663	ExpressionStatement	mapname = strdup ( map -> name )	2072:3:59692:59720	1102552	0	True				
ANR	1102664	AssignmentExpression	mapname = strdup ( map -> name )		1102552	0		=			
ANR	1102665	Identifier	mapname		1102552	0					
ANR	1102666	CallExpression	strdup ( map -> name )		1102552	1					
ANR	1102667	Callee	strdup		1102552	0					
ANR	1102668	Identifier	strdup		1102552	0					
ANR	1102669	ArgumentList	map -> name		1102552	1					
ANR	1102670	Argument	map -> name		1102552	0					
ANR	1102671	PtrMemberAccess	map -> name		1102552	0					
ANR	1102672	Identifier	map		1102552	0					
ANR	1102673	Identifier	name		1102552	1					
ANR	1102674	IfStatement	if ( mapname )		1102552	7					
ANR	1102675	Condition	mapname	2075:5:59734:59740	1102552	0	True				
ANR	1102676	Identifier	mapname		1102552	0					
ANR	1102677	CompoundStatement		16:14:438:438	1102552	1					
ANR	1102678	ExpressionStatement	"r_strbuf_appendf ( s , "" (%s)"" , mapname )"	2076:2:59747:59785	1102552	0	True				
ANR	1102679	CallExpression	"r_strbuf_appendf ( s , "" (%s)"" , mapname )"		1102552	0					
ANR	1102680	Callee	r_strbuf_appendf		1102552	0					
ANR	1102681	Identifier	r_strbuf_appendf		1102552	0					
ANR	1102682	ArgumentList	s		1102552	1					
ANR	1102683	Argument	s		1102552	0					
ANR	1102684	Identifier	s		1102552	0					
ANR	1102685	Argument	""" (%s)"""		1102552	1					
ANR	1102686	PrimaryExpression	""" (%s)"""		1102552	0					
ANR	1102687	Argument	mapname		1102552	2					
ANR	1102688	Identifier	mapname		1102552	0					
ANR	1102689	ExpressionStatement	R_FREE ( mapname )	2077:2:59789:59805	1102552	1	True				
ANR	1102690	CallExpression	R_FREE ( mapname )		1102552	0					
ANR	1102691	Callee	R_FREE		1102552	0					
ANR	1102692	Identifier	R_FREE		1102552	0					
ANR	1102693	ArgumentList	mapname		1102552	1					
ANR	1102694	Argument	mapname		1102552	0					
ANR	1102695	Identifier	mapname		1102552	0					
ANR	1102696	IdentifierDeclStatement	int bits = core -> assembler -> bits ;	2079:1:59811:59843	1102552	8	True				
ANR	1102697	IdentifierDecl	bits = core -> assembler -> bits		1102552	0					
ANR	1102698	IdentifierDeclType	int		1102552	0					
ANR	1102699	Identifier	bits		1102552	1					
ANR	1102700	AssignmentExpression	bits = core -> assembler -> bits		1102552	2		=			
ANR	1102701	Identifier	bits		1102552	0					
ANR	1102702	PtrMemberAccess	core -> assembler -> bits		1102552	1					
ANR	1102703	PtrMemberAccess	core -> assembler		1102552	0					
ANR	1102704	Identifier	core		1102552	0					
ANR	1102705	Identifier	assembler		1102552	1					
ANR	1102706	Identifier	bits		1102552	1					
ANR	1102707	SwitchStatement	switch ( bits )		1102552	9					
ANR	1102708	Condition	bits	2080:9:59854:59857	1102552	0	True				
ANR	1102709	Identifier	bits		1102552	0					
ANR	1102710	CompoundStatement		21:15:555:555	1102552	1					
ANR	1102711	Label	case 16 :	2081:1:59863:59870	1102552	0	True				
ANR	1102712	CompoundStatement		25:3:641:666	1102552	1					
ANR	1102713	IdentifierDeclStatement	st16 v = ( st16 ) ( value & UT16_MAX ) ;	2083:3:59908:59941	1102552	0	True				
ANR	1102714	IdentifierDecl	v = ( st16 ) ( value & UT16_MAX )		1102552	0					
ANR	1102715	IdentifierDeclType	st16		1102552	0					
ANR	1102716	Identifier	v		1102552	1					
ANR	1102717	AssignmentExpression	v = ( st16 ) ( value & UT16_MAX )		1102552	2		=			
ANR	1102718	Identifier	v		1102552	0					
ANR	1102719	CastExpression	( st16 ) ( value & UT16_MAX )		1102552	1					
ANR	1102720	CastTarget	st16		1102552	0					
ANR	1102721	BitAndExpression	value & UT16_MAX		1102552	1		&			
ANR	1102722	Identifier	value		1102552	0					
ANR	1102723	Identifier	UT16_MAX		1102552	1					
ANR	1102724	IdentifierDeclStatement	st16 h = UT16_MAX / 0x100 ;	2084:3:59946:59971	1102552	1	True				
ANR	1102725	IdentifierDecl	h = UT16_MAX / 0x100		1102552	0					
ANR	1102726	IdentifierDeclType	st16		1102552	0					
ANR	1102727	Identifier	h		1102552	1					
ANR	1102728	AssignmentExpression	h = UT16_MAX / 0x100		1102552	2		=			
ANR	1102729	Identifier	h		1102552	0					
ANR	1102730	MultiplicativeExpression	UT16_MAX / 0x100		1102552	1		/			
ANR	1102731	Identifier	UT16_MAX		1102552	0					
ANR	1102732	PrimaryExpression	0x100		1102552	1					
ANR	1102733	IfStatement	if ( v > - h && v < h )		1102552	2					
ANR	1102734	Condition	v > - h && v < h	2085:7:59980:59994	1102552	0	True				
ANR	1102735	AndExpression	v > - h && v < h		1102552	0		&&			
ANR	1102736	RelationalExpression	v > - h		1102552	0		>			
ANR	1102737	Identifier	v		1102552	0					
ANR	1102738	UnaryOperationExpression	- h		1102552	1					
ANR	1102739	UnaryOperator	-		1102552	0					
ANR	1102740	Identifier	h		1102552	1					
ANR	1102741	RelationalExpression	v < h		1102552	1		<			
ANR	1102742	Identifier	v		1102552	0					
ANR	1102743	Identifier	h		1102552	1					
ANR	1102744	CompoundStatement		26:24:692:692	1102552	1					
ANR	1102745	ExpressionStatement	"r_strbuf_appendf ( s , "" %hd"" , v )"	2086:4:60003:60033	1102552	0	True				
ANR	1102746	CallExpression	"r_strbuf_appendf ( s , "" %hd"" , v )"		1102552	0					
ANR	1102747	Callee	r_strbuf_appendf		1102552	0					
ANR	1102748	Identifier	r_strbuf_appendf		1102552	0					
ANR	1102749	ArgumentList	s		1102552	1					
ANR	1102750	Argument	s		1102552	0					
ANR	1102751	Identifier	s		1102552	0					
ANR	1102752	Argument	""" %hd"""		1102552	1					
ANR	1102753	PrimaryExpression	""" %hd"""		1102552	0					
ANR	1102754	Argument	v		1102552	2					
ANR	1102755	Identifier	v		1102552	0					
ANR	1102756	BreakStatement	break ;	2089:2:60046:60051	1102552	2	True				
ANR	1102757	Label	case 32 :	2090:1:60054:60061	1102552	3	True				
ANR	1102758	CompoundStatement		34:3:805:832	1102552	4					
ANR	1102759	IdentifierDeclStatement	st32 v = ( st32 ) ( value & 0xffffffff ) ;	2092:3:60070:60105	1102552	0	True				
ANR	1102760	IdentifierDecl	v = ( st32 ) ( value & 0xffffffff )		1102552	0					
ANR	1102761	IdentifierDeclType	st32		1102552	0					
ANR	1102762	Identifier	v		1102552	1					
ANR	1102763	AssignmentExpression	v = ( st32 ) ( value & 0xffffffff )		1102552	2		=			
ANR	1102764	Identifier	v		1102552	0					
ANR	1102765	CastExpression	( st32 ) ( value & 0xffffffff )		1102552	1					
ANR	1102766	CastTarget	st32		1102552	0					
ANR	1102767	BitAndExpression	value & 0xffffffff		1102552	1		&			
ANR	1102768	Identifier	value		1102552	0					
ANR	1102769	PrimaryExpression	0xffffffff		1102552	1					
ANR	1102770	IdentifierDeclStatement	st32 h = UT32_MAX / 0x10000 ;	2093:3:60110:60137	1102552	1	True				
ANR	1102771	IdentifierDecl	h = UT32_MAX / 0x10000		1102552	0					
ANR	1102772	IdentifierDeclType	st32		1102552	0					
ANR	1102773	Identifier	h		1102552	1					
ANR	1102774	AssignmentExpression	h = UT32_MAX / 0x10000		1102552	2		=			
ANR	1102775	Identifier	h		1102552	0					
ANR	1102776	MultiplicativeExpression	UT32_MAX / 0x10000		1102552	1		/			
ANR	1102777	Identifier	UT32_MAX		1102552	0					
ANR	1102778	PrimaryExpression	0x10000		1102552	1					
ANR	1102779	IfStatement	if ( v > - h && v < h )		1102552	2					
ANR	1102780	Condition	v > - h && v < h	2094:7:60146:60160	1102552	0	True				
ANR	1102781	AndExpression	v > - h && v < h		1102552	0		&&			
ANR	1102782	RelationalExpression	v > - h		1102552	0		>			
ANR	1102783	Identifier	v		1102552	0					
ANR	1102784	UnaryOperationExpression	- h		1102552	1					
ANR	1102785	UnaryOperator	-		1102552	0					
ANR	1102786	Identifier	h		1102552	1					
ANR	1102787	RelationalExpression	v < h		1102552	1		<			
ANR	1102788	Identifier	v		1102552	0					
ANR	1102789	Identifier	h		1102552	1					
ANR	1102790	CompoundStatement		35:24:858:858	1102552	1					
ANR	1102791	ExpressionStatement	"r_strbuf_appendf ( s , "" %d"" , v )"	2095:4:60169:60198	1102552	0	True				
ANR	1102792	CallExpression	"r_strbuf_appendf ( s , "" %d"" , v )"		1102552	0					
ANR	1102793	Callee	r_strbuf_appendf		1102552	0					
ANR	1102794	Identifier	r_strbuf_appendf		1102552	0					
ANR	1102795	ArgumentList	s		1102552	1					
ANR	1102796	Argument	s		1102552	0					
ANR	1102797	Identifier	s		1102552	0					
ANR	1102798	Argument	""" %d"""		1102552	1					
ANR	1102799	PrimaryExpression	""" %d"""		1102552	0					
ANR	1102800	Argument	v		1102552	2					
ANR	1102801	Identifier	v		1102552	0					
ANR	1102802	BreakStatement	break ;	2098:2:60211:60216	1102552	5	True				
ANR	1102803	Label	case 64 :	2099:1:60219:60226	1102552	6	True				
ANR	1102804	CompoundStatement		43:3:957:986	1102552	7					
ANR	1102805	IdentifierDeclStatement	st64 v = ( st64 ) ( value ) ;	2101:3:60235:60257	1102552	0	True				
ANR	1102806	IdentifierDecl	v = ( st64 ) ( value )		1102552	0					
ANR	1102807	IdentifierDeclType	st64		1102552	0					
ANR	1102808	Identifier	v		1102552	1					
ANR	1102809	AssignmentExpression	v = ( st64 ) ( value )		1102552	2		=			
ANR	1102810	Identifier	v		1102552	0					
ANR	1102811	CastExpression	( st64 ) ( value )		1102552	1					
ANR	1102812	CastTarget	st64		1102552	0					
ANR	1102813	Identifier	value		1102552	1					
ANR	1102814	IdentifierDeclStatement	st64 h = UT64_MAX / 0x1000000 ;	2102:3:60262:60291	1102552	1	True				
ANR	1102815	IdentifierDecl	h = UT64_MAX / 0x1000000		1102552	0					
ANR	1102816	IdentifierDeclType	st64		1102552	0					
ANR	1102817	Identifier	h		1102552	1					
ANR	1102818	AssignmentExpression	h = UT64_MAX / 0x1000000		1102552	2		=			
ANR	1102819	Identifier	h		1102552	0					
ANR	1102820	MultiplicativeExpression	UT64_MAX / 0x1000000		1102552	1		/			
ANR	1102821	Identifier	UT64_MAX		1102552	0					
ANR	1102822	PrimaryExpression	0x1000000		1102552	1					
ANR	1102823	IfStatement	if ( v > - h && v < h )		1102552	2					
ANR	1102824	Condition	v > - h && v < h	2103:7:60300:60314	1102552	0	True				
ANR	1102825	AndExpression	v > - h && v < h		1102552	0		&&			
ANR	1102826	RelationalExpression	v > - h		1102552	0		>			
ANR	1102827	Identifier	v		1102552	0					
ANR	1102828	UnaryOperationExpression	- h		1102552	1					
ANR	1102829	UnaryOperator	-		1102552	0					
ANR	1102830	Identifier	h		1102552	1					
ANR	1102831	RelationalExpression	v < h		1102552	1		<			
ANR	1102832	Identifier	v		1102552	0					
ANR	1102833	Identifier	h		1102552	1					
ANR	1102834	CompoundStatement		44:24:1012:1012	1102552	1					
ANR	1102835	Statement	r_strbuf_appendf	2104:4:60323:60338	1102552	0	True				
ANR	1102836	Statement	(	2104:21:60340:60340	1102552	1	True				
ANR	1102837	Statement	s	2104:22:60341:60341	1102552	2	True				
ANR	1102838	Statement	","	2104:23:60342:60342	1102552	3	True				
ANR	1102839	Statement	""" %"""	2104:24:60343:60346	1102552	4	True				
ANR	1102840	Statement	PFMT64d	2104:28:60347:60353	1102552	5	True				
ANR	1102841	Statement	","	2104:35:60354:60354	1102552	6	True				
ANR	1102842	Statement	v	2104:37:60356:60356	1102552	7	True				
ANR	1102843	Statement	)	2104:38:60357:60357	1102552	8	True				
ANR	1102844	ExpressionStatement		2104:39:60358:60358	1102552	9	True				
ANR	1102845	BreakStatement	break ;	2107:2:60371:60376	1102552	8	True				
ANR	1102846	IdentifierDeclStatement	"RBinSection * sect = value ? r_bin_get_section_at ( r_bin_cur_object ( core -> bin ) , value , true ) : NULL ;"	2109:1:60382:60479	1102552	10	True				
ANR	1102847	IdentifierDecl	"* sect = value ? r_bin_get_section_at ( r_bin_cur_object ( core -> bin ) , value , true ) : NULL"		1102552	0					
ANR	1102848	IdentifierDeclType	RBinSection *		1102552	0					
ANR	1102849	Identifier	sect		1102552	1					
ANR	1102850	AssignmentExpression	"* sect = value ? r_bin_get_section_at ( r_bin_cur_object ( core -> bin ) , value , true ) : NULL"		1102552	2		=			
ANR	1102851	Identifier	sect		1102552	0					
ANR	1102852	ConditionalExpression	"value ? r_bin_get_section_at ( r_bin_cur_object ( core -> bin ) , value , true ) : NULL"		1102552	1					
ANR	1102853	Condition	value		1102552	0					
ANR	1102854	Identifier	value		1102552	0					
ANR	1102855	CallExpression	"r_bin_get_section_at ( r_bin_cur_object ( core -> bin ) , value , true )"		1102552	1					
ANR	1102856	Callee	r_bin_get_section_at		1102552	0					
ANR	1102857	Identifier	r_bin_get_section_at		1102552	0					
ANR	1102858	ArgumentList	r_bin_cur_object ( core -> bin )		1102552	1					
ANR	1102859	Argument	r_bin_cur_object ( core -> bin )		1102552	0					
ANR	1102860	CallExpression	r_bin_cur_object ( core -> bin )		1102552	0					
ANR	1102861	Callee	r_bin_cur_object		1102552	0					
ANR	1102862	Identifier	r_bin_cur_object		1102552	0					
ANR	1102863	ArgumentList	core -> bin		1102552	1					
ANR	1102864	Argument	core -> bin		1102552	0					
ANR	1102865	PtrMemberAccess	core -> bin		1102552	0					
ANR	1102866	Identifier	core		1102552	0					
ANR	1102867	Identifier	bin		1102552	1					
ANR	1102868	Argument	value		1102552	1					
ANR	1102869	Identifier	value		1102552	0					
ANR	1102870	Argument	true		1102552	2					
ANR	1102871	Identifier	true		1102552	0					
ANR	1102872	Identifier	NULL		1102552	2					
ANR	1102873	IfStatement	if ( ! ( ( type & R_ANAL_ADDR_TYPE_HEAP ) || ( type & R_ANAL_ADDR_TYPE_STACK ) ) )		1102552	11					
ANR	1102874	Condition	! ( ( type & R_ANAL_ADDR_TYPE_HEAP ) || ( type & R_ANAL_ADDR_TYPE_STACK ) )	2110:4:60485:60547	1102552	0	True				
ANR	1102875	UnaryOperationExpression	! ( ( type & R_ANAL_ADDR_TYPE_HEAP ) || ( type & R_ANAL_ADDR_TYPE_STACK ) )		1102552	0					
ANR	1102876	UnaryOperator	!		1102552	0					
ANR	1102877	OrExpression	( type & R_ANAL_ADDR_TYPE_HEAP ) || ( type & R_ANAL_ADDR_TYPE_STACK )		1102552	1		||			
ANR	1102878	BitAndExpression	type & R_ANAL_ADDR_TYPE_HEAP		1102552	0		&			
ANR	1102879	Identifier	type		1102552	0					
ANR	1102880	Identifier	R_ANAL_ADDR_TYPE_HEAP		1102552	1					
ANR	1102881	BitAndExpression	type & R_ANAL_ADDR_TYPE_STACK		1102552	1		&			
ANR	1102882	Identifier	type		1102552	0					
ANR	1102883	Identifier	R_ANAL_ADDR_TYPE_STACK		1102552	1					
ANR	1102884	CompoundStatement		51:70:1246:1246	1102552	1					
ANR	1102885	IfStatement	if ( sect && sect -> name [ 0 ] )		1102552	0					
ANR	1102886	Condition	sect && sect -> name [ 0 ]	2112:6:60617:60637	1102552	0	True				
ANR	1102887	AndExpression	sect && sect -> name [ 0 ]		1102552	0		&&			
ANR	1102888	Identifier	sect		1102552	0					
ANR	1102889	ArrayIndexing	sect -> name [ 0 ]		1102552	1					
ANR	1102890	PtrMemberAccess	sect -> name		1102552	0					
ANR	1102891	Identifier	sect		1102552	0					
ANR	1102892	Identifier	name		1102552	1					
ANR	1102893	PrimaryExpression	0		1102552	1					
ANR	1102894	CompoundStatement		53:29:1335:1335	1102552	1					
ANR	1102895	ExpressionStatement	"r_strbuf_appendf ( s , "" (%s)"" , sect -> name )"	2113:3:60645:60685	1102552	0	True				
ANR	1102896	CallExpression	"r_strbuf_appendf ( s , "" (%s)"" , sect -> name )"		1102552	0					
ANR	1102897	Callee	r_strbuf_appendf		1102552	0					
ANR	1102898	Identifier	r_strbuf_appendf		1102552	0					
ANR	1102899	ArgumentList	s		1102552	1					
ANR	1102900	Argument	s		1102552	0					
ANR	1102901	Identifier	s		1102552	0					
ANR	1102902	Argument	""" (%s)"""		1102552	1					
ANR	1102903	PrimaryExpression	""" (%s)"""		1102552	0					
ANR	1102904	Argument	sect -> name		1102552	2					
ANR	1102905	PtrMemberAccess	sect -> name		1102552	0					
ANR	1102906	Identifier	sect		1102552	0					
ANR	1102907	Identifier	name		1102552	1					
ANR	1102908	IfStatement	if ( fi )		1102552	12					
ANR	1102909	Condition	fi	2116:5:60699:60700	1102552	0	True				
ANR	1102910	Identifier	fi		1102552	0					
ANR	1102911	CompoundStatement		58:2:1402:1456	1102552	1					
ANR	1102912	IdentifierDeclStatement	"RRegItem * r = r_reg_get ( core -> dbg -> reg , fi -> name , - 1 ) ;"	2117:2:60707:60761	1102552	0	True				
ANR	1102913	IdentifierDecl	"* r = r_reg_get ( core -> dbg -> reg , fi -> name , - 1 )"		1102552	0					
ANR	1102914	IdentifierDeclType	RRegItem *		1102552	0					
ANR	1102915	Identifier	r		1102552	1					
ANR	1102916	AssignmentExpression	"* r = r_reg_get ( core -> dbg -> reg , fi -> name , - 1 )"		1102552	2		=			
ANR	1102917	Identifier	r		1102552	0					
ANR	1102918	CallExpression	"r_reg_get ( core -> dbg -> reg , fi -> name , - 1 )"		1102552	1					
ANR	1102919	Callee	r_reg_get		1102552	0					
ANR	1102920	Identifier	r_reg_get		1102552	0					
ANR	1102921	ArgumentList	core -> dbg -> reg		1102552	1					
ANR	1102922	Argument	core -> dbg -> reg		1102552	0					
ANR	1102923	PtrMemberAccess	core -> dbg -> reg		1102552	0					
ANR	1102924	PtrMemberAccess	core -> dbg		1102552	0					
ANR	1102925	Identifier	core		1102552	0					
ANR	1102926	Identifier	dbg		1102552	1					
ANR	1102927	Identifier	reg		1102552	1					
ANR	1102928	Argument	fi -> name		1102552	1					
ANR	1102929	PtrMemberAccess	fi -> name		1102552	0					
ANR	1102930	Identifier	fi		1102552	0					
ANR	1102931	Identifier	name		1102552	1					
ANR	1102932	Argument	- 1		1102552	2					
ANR	1102933	UnaryOperationExpression	- 1		1102552	0					
ANR	1102934	UnaryOperator	-		1102552	0					
ANR	1102935	PrimaryExpression	1		1102552	1					
ANR	1102936	IfStatement	if ( ! r )		1102552	1					
ANR	1102937	Condition	! r	2118:6:60769:60770	1102552	0	True				
ANR	1102938	UnaryOperationExpression	! r		1102552	0					
ANR	1102939	UnaryOperator	!		1102552	0					
ANR	1102940	Identifier	r		1102552	1					
ANR	1102941	CompoundStatement		59:10:1468:1468	1102552	1					
ANR	1102942	ExpressionStatement	"r_strbuf_appendf ( s , "" %s"" , fi -> name )"	2119:3:60778:60815	1102552	0	True				
ANR	1102943	CallExpression	"r_strbuf_appendf ( s , "" %s"" , fi -> name )"		1102552	0					
ANR	1102944	Callee	r_strbuf_appendf		1102552	0					
ANR	1102945	Identifier	r_strbuf_appendf		1102552	0					
ANR	1102946	ArgumentList	s		1102552	1					
ANR	1102947	Argument	s		1102552	0					
ANR	1102948	Identifier	s		1102552	0					
ANR	1102949	Argument	""" %s"""		1102552	1					
ANR	1102950	PrimaryExpression	""" %s"""		1102552	0					
ANR	1102951	Argument	fi -> name		1102552	2					
ANR	1102952	PtrMemberAccess	fi -> name		1102552	0					
ANR	1102953	Identifier	fi		1102552	0					
ANR	1102954	Identifier	name		1102552	1					
ANR	1102955	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , value , 0 ) ;"	2122:1:60825:60886	1102552	13	True				
ANR	1102956	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , value , 0 )"		1102552	0					
ANR	1102957	IdentifierDeclType	RAnalFunction *		1102552	0					
ANR	1102958	Identifier	fcn		1102552	1					
ANR	1102959	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , value , 0 )"		1102552	2		=			
ANR	1102960	Identifier	fcn		1102552	0					
ANR	1102961	CallExpression	"r_anal_get_fcn_in ( core -> anal , value , 0 )"		1102552	1					
ANR	1102962	Callee	r_anal_get_fcn_in		1102552	0					
ANR	1102963	Identifier	r_anal_get_fcn_in		1102552	0					
ANR	1102964	ArgumentList	core -> anal		1102552	1					
ANR	1102965	Argument	core -> anal		1102552	0					
ANR	1102966	PtrMemberAccess	core -> anal		1102552	0					
ANR	1102967	Identifier	core		1102552	0					
ANR	1102968	Identifier	anal		1102552	1					
ANR	1102969	Argument	value		1102552	1					
ANR	1102970	Identifier	value		1102552	0					
ANR	1102971	Argument	0		1102552	2					
ANR	1102972	PrimaryExpression	0		1102552	0					
ANR	1102973	IfStatement	if ( fcn )		1102552	14					
ANR	1102974	Condition	fcn	2123:5:60893:60895	1102552	0	True				
ANR	1102975	Identifier	fcn		1102552	0					
ANR	1102976	CompoundStatement		64:10:1593:1593	1102552	1					
ANR	1102977	ExpressionStatement	"r_strbuf_appendf ( s , "" %s"" , fcn -> name )"	2124:2:60902:60940	1102552	0	True				
ANR	1102978	CallExpression	"r_strbuf_appendf ( s , "" %s"" , fcn -> name )"		1102552	0					
ANR	1102979	Callee	r_strbuf_appendf		1102552	0					
ANR	1102980	Identifier	r_strbuf_appendf		1102552	0					
ANR	1102981	ArgumentList	s		1102552	1					
ANR	1102982	Argument	s		1102552	0					
ANR	1102983	Identifier	s		1102552	0					
ANR	1102984	Argument	""" %s"""		1102552	1					
ANR	1102985	PrimaryExpression	""" %s"""		1102552	0					
ANR	1102986	Argument	fcn -> name		1102552	2					
ANR	1102987	PtrMemberAccess	fcn -> name		1102552	0					
ANR	1102988	Identifier	fcn		1102552	0					
ANR	1102989	Identifier	name		1102552	1					
ANR	1102990	IfStatement	if ( type )		1102552	15					
ANR	1102991	Condition	type	2126:5:60950:60953	1102552	0	True				
ANR	1102992	Identifier	type		1102552	0					
ANR	1102993	CompoundStatement		69:2:1722:1768	1102552	1					
ANR	1102994	IdentifierDeclStatement	"const char * c = r_core_anal_optype_colorfor ( core , value , true ) ;"	2127:2:60960:61023	1102552	0	True				
ANR	1102995	IdentifierDecl	"* c = r_core_anal_optype_colorfor ( core , value , true )"		1102552	0					
ANR	1102996	IdentifierDeclType	const char *		1102552	0					
ANR	1102997	Identifier	c		1102552	1					
ANR	1102998	AssignmentExpression	"* c = r_core_anal_optype_colorfor ( core , value , true )"		1102552	2		=			
ANR	1102999	Identifier	c		1102552	0					
ANR	1103000	CallExpression	"r_core_anal_optype_colorfor ( core , value , true )"		1102552	1					
ANR	1103001	Callee	r_core_anal_optype_colorfor		1102552	0					
ANR	1103002	Identifier	r_core_anal_optype_colorfor		1102552	0					
ANR	1103003	ArgumentList	core		1102552	1					
ANR	1103004	Argument	core		1102552	0					
ANR	1103005	Identifier	core		1102552	0					
ANR	1103006	Argument	value		1102552	1					
ANR	1103007	Identifier	value		1102552	0					
ANR	1103008	Argument	true		1102552	2					
ANR	1103009	Identifier	true		1102552	0					
ANR	1103010	IdentifierDeclStatement	"const char * cend = ( c && * c ) ? Color_RESET : """" ;"	2128:2:61027:61073	1102552	1	True				
ANR	1103011	IdentifierDecl	"* cend = ( c && * c ) ? Color_RESET : """""		1102552	0					
ANR	1103012	IdentifierDeclType	const char *		1102552	0					
ANR	1103013	Identifier	cend		1102552	1					
ANR	1103014	AssignmentExpression	"* cend = ( c && * c ) ? Color_RESET : """""		1102552	2		=			
ANR	1103015	Identifier	cend		1102552	0					
ANR	1103016	ConditionalExpression	"( c && * c ) ? Color_RESET : """""		1102552	1					
ANR	1103017	Condition	c && * c		1102552	0					
ANR	1103018	AndExpression	c && * c		1102552	0		&&			
ANR	1103019	Identifier	c		1102552	0					
ANR	1103020	UnaryOperationExpression	* c		1102552	1					
ANR	1103021	UnaryOperator	*		1102552	0					
ANR	1103022	Identifier	c		1102552	1					
ANR	1103023	Identifier	Color_RESET		1102552	1					
ANR	1103024	PrimaryExpression	""""""		1102552	2					
ANR	1103025	IfStatement	if ( ! c )		1102552	2					
ANR	1103026	Condition	! c	2129:6:61081:61082	1102552	0	True				
ANR	1103027	UnaryOperationExpression	! c		1102552	0					
ANR	1103028	UnaryOperator	!		1102552	0					
ANR	1103029	Identifier	c		1102552	1					
ANR	1103030	CompoundStatement		70:10:1780:1780	1102552	1					
ANR	1103031	ExpressionStatement	"c = """""	2130:3:61090:61096	1102552	0	True				
ANR	1103032	AssignmentExpression	"c = """""		1102552	0		=			
ANR	1103033	Identifier	c		1102552	0					
ANR	1103034	PrimaryExpression	""""""		1102552	1					
ANR	1103035	IfStatement	if ( type & R_ANAL_ADDR_TYPE_HEAP )		1102552	3					
ANR	1103036	Condition	type & R_ANAL_ADDR_TYPE_HEAP	2132:6:61108:61135	1102552	0	True				
ANR	1103037	BitAndExpression	type & R_ANAL_ADDR_TYPE_HEAP		1102552	0		&			
ANR	1103038	Identifier	type		1102552	0					
ANR	1103039	Identifier	R_ANAL_ADDR_TYPE_HEAP		1102552	1					
ANR	1103040	CompoundStatement		73:36:1833:1833	1102552	1					
ANR	1103041	ExpressionStatement	"r_strbuf_appendf ( s , "" %sheap%s"" , c , cend )"	2133:3:61143:61185	1102552	0	True				
ANR	1103042	CallExpression	"r_strbuf_appendf ( s , "" %sheap%s"" , c , cend )"		1102552	0					
ANR	1103043	Callee	r_strbuf_appendf		1102552	0					
ANR	1103044	Identifier	r_strbuf_appendf		1102552	0					
ANR	1103045	ArgumentList	s		1102552	1					
ANR	1103046	Argument	s		1102552	0					
ANR	1103047	Identifier	s		1102552	0					
ANR	1103048	Argument	""" %sheap%s"""		1102552	1					
ANR	1103049	PrimaryExpression	""" %sheap%s"""		1102552	0					
ANR	1103050	Argument	c		1102552	2					
ANR	1103051	Identifier	c		1102552	0					
ANR	1103052	Argument	cend		1102552	3					
ANR	1103053	Identifier	cend		1102552	0					
ANR	1103054	ElseStatement	else		1102552	0					
ANR	1103055	IfStatement	if ( type & R_ANAL_ADDR_TYPE_STACK )		1102552	0					
ANR	1103056	Condition	type & R_ANAL_ADDR_TYPE_STACK	2134:13:61200:61228	1102552	0	True				
ANR	1103057	BitAndExpression	type & R_ANAL_ADDR_TYPE_STACK		1102552	0		&			
ANR	1103058	Identifier	type		1102552	0					
ANR	1103059	Identifier	R_ANAL_ADDR_TYPE_STACK		1102552	1					
ANR	1103060	CompoundStatement		75:44:1926:1926	1102552	1					
ANR	1103061	ExpressionStatement	"r_strbuf_appendf ( s , "" %sstack%s"" , c , cend )"	2135:3:61236:61279	1102552	0	True				
ANR	1103062	CallExpression	"r_strbuf_appendf ( s , "" %sstack%s"" , c , cend )"		1102552	0					
ANR	1103063	Callee	r_strbuf_appendf		1102552	0					
ANR	1103064	Identifier	r_strbuf_appendf		1102552	0					
ANR	1103065	ArgumentList	s		1102552	1					
ANR	1103066	Argument	s		1102552	0					
ANR	1103067	Identifier	s		1102552	0					
ANR	1103068	Argument	""" %sstack%s"""		1102552	1					
ANR	1103069	PrimaryExpression	""" %sstack%s"""		1102552	0					
ANR	1103070	Argument	c		1102552	2					
ANR	1103071	Identifier	c		1102552	0					
ANR	1103072	Argument	cend		1102552	3					
ANR	1103073	Identifier	cend		1102552	0					
ANR	1103074	IfStatement	if ( type & R_ANAL_ADDR_TYPE_PROGRAM )		1102552	4					
ANR	1103075	Condition	type & R_ANAL_ADDR_TYPE_PROGRAM	2137:6:61291:61321	1102552	0	True				
ANR	1103076	BitAndExpression	type & R_ANAL_ADDR_TYPE_PROGRAM		1102552	0		&			
ANR	1103077	Identifier	type		1102552	0					
ANR	1103078	Identifier	R_ANAL_ADDR_TYPE_PROGRAM		1102552	1					
ANR	1103079	CompoundStatement		78:39:2019:2019	1102552	1					
ANR	1103080	ExpressionStatement	"r_strbuf_appendf ( s , "" %sprogram%s"" , c , cend )"	2138:3:61329:61374	1102552	0	True				
ANR	1103081	CallExpression	"r_strbuf_appendf ( s , "" %sprogram%s"" , c , cend )"		1102552	0					
ANR	1103082	Callee	r_strbuf_appendf		1102552	0					
ANR	1103083	Identifier	r_strbuf_appendf		1102552	0					
ANR	1103084	ArgumentList	s		1102552	1					
ANR	1103085	Argument	s		1102552	0					
ANR	1103086	Identifier	s		1102552	0					
ANR	1103087	Argument	""" %sprogram%s"""		1102552	1					
ANR	1103088	PrimaryExpression	""" %sprogram%s"""		1102552	0					
ANR	1103089	Argument	c		1102552	2					
ANR	1103090	Identifier	c		1102552	0					
ANR	1103091	Argument	cend		1102552	3					
ANR	1103092	Identifier	cend		1102552	0					
ANR	1103093	IfStatement	if ( type & R_ANAL_ADDR_TYPE_LIBRARY )		1102552	5					
ANR	1103094	Condition	type & R_ANAL_ADDR_TYPE_LIBRARY	2140:6:61386:61416	1102552	0	True				
ANR	1103095	BitAndExpression	type & R_ANAL_ADDR_TYPE_LIBRARY		1102552	0		&			
ANR	1103096	Identifier	type		1102552	0					
ANR	1103097	Identifier	R_ANAL_ADDR_TYPE_LIBRARY		1102552	1					
ANR	1103098	CompoundStatement		81:39:2114:2114	1102552	1					
ANR	1103099	ExpressionStatement	"r_strbuf_appendf ( s , "" %slibrary%s"" , c , cend )"	2141:3:61424:61469	1102552	0	True				
ANR	1103100	CallExpression	"r_strbuf_appendf ( s , "" %slibrary%s"" , c , cend )"		1102552	0					
ANR	1103101	Callee	r_strbuf_appendf		1102552	0					
ANR	1103102	Identifier	r_strbuf_appendf		1102552	0					
ANR	1103103	ArgumentList	s		1102552	1					
ANR	1103104	Argument	s		1102552	0					
ANR	1103105	Identifier	s		1102552	0					
ANR	1103106	Argument	""" %slibrary%s"""		1102552	1					
ANR	1103107	PrimaryExpression	""" %slibrary%s"""		1102552	0					
ANR	1103108	Argument	c		1102552	2					
ANR	1103109	Identifier	c		1102552	0					
ANR	1103110	Argument	cend		1102552	3					
ANR	1103111	Identifier	cend		1102552	0					
ANR	1103112	IfStatement	if ( type & R_ANAL_ADDR_TYPE_ASCII )		1102552	6					
ANR	1103113	Condition	type & R_ANAL_ADDR_TYPE_ASCII	2143:6:61481:61509	1102552	0	True				
ANR	1103114	BitAndExpression	type & R_ANAL_ADDR_TYPE_ASCII		1102552	0		&			
ANR	1103115	Identifier	type		1102552	0					
ANR	1103116	Identifier	R_ANAL_ADDR_TYPE_ASCII		1102552	1					
ANR	1103117	CompoundStatement		84:37:2207:2207	1102552	1					
ANR	1103118	ExpressionStatement	"r_strbuf_appendf ( s , "" %sascii%s ('%c')"" , c , cend , value )"	2144:3:61517:61574	1102552	0	True				
ANR	1103119	CallExpression	"r_strbuf_appendf ( s , "" %sascii%s ('%c')"" , c , cend , value )"		1102552	0					
ANR	1103120	Callee	r_strbuf_appendf		1102552	0					
ANR	1103121	Identifier	r_strbuf_appendf		1102552	0					
ANR	1103122	ArgumentList	s		1102552	1					
ANR	1103123	Argument	s		1102552	0					
ANR	1103124	Identifier	s		1102552	0					
ANR	1103125	Argument	""" %sascii%s ('%c')"""		1102552	1					
ANR	1103126	PrimaryExpression	""" %sascii%s ('%c')"""		1102552	0					
ANR	1103127	Argument	c		1102552	2					
ANR	1103128	Identifier	c		1102552	0					
ANR	1103129	Argument	cend		1102552	3					
ANR	1103130	Identifier	cend		1102552	0					
ANR	1103131	Argument	value		1102552	4					
ANR	1103132	Identifier	value		1102552	0					
ANR	1103133	IfStatement	if ( type & R_ANAL_ADDR_TYPE_SEQUENCE )		1102552	7					
ANR	1103134	Condition	type & R_ANAL_ADDR_TYPE_SEQUENCE	2146:6:61586:61617	1102552	0	True				
ANR	1103135	BitAndExpression	type & R_ANAL_ADDR_TYPE_SEQUENCE		1102552	0		&			
ANR	1103136	Identifier	type		1102552	0					
ANR	1103137	Identifier	R_ANAL_ADDR_TYPE_SEQUENCE		1102552	1					
ANR	1103138	CompoundStatement		87:40:2315:2315	1102552	1					
ANR	1103139	ExpressionStatement	"r_strbuf_appendf ( s , "" %ssequence%s"" , c , cend )"	2147:3:61625:61671	1102552	0	True				
ANR	1103140	CallExpression	"r_strbuf_appendf ( s , "" %ssequence%s"" , c , cend )"		1102552	0					
ANR	1103141	Callee	r_strbuf_appendf		1102552	0					
ANR	1103142	Identifier	r_strbuf_appendf		1102552	0					
ANR	1103143	ArgumentList	s		1102552	1					
ANR	1103144	Argument	s		1102552	0					
ANR	1103145	Identifier	s		1102552	0					
ANR	1103146	Argument	""" %ssequence%s"""		1102552	1					
ANR	1103147	PrimaryExpression	""" %ssequence%s"""		1102552	0					
ANR	1103148	Argument	c		1102552	2					
ANR	1103149	Identifier	c		1102552	0					
ANR	1103150	Argument	cend		1102552	3					
ANR	1103151	Identifier	cend		1102552	0					
ANR	1103152	IfStatement	if ( type & R_ANAL_ADDR_TYPE_READ )		1102552	8					
ANR	1103153	Condition	type & R_ANAL_ADDR_TYPE_READ	2149:6:61683:61710	1102552	0	True				
ANR	1103154	BitAndExpression	type & R_ANAL_ADDR_TYPE_READ		1102552	0		&			
ANR	1103155	Identifier	type		1102552	0					
ANR	1103156	Identifier	R_ANAL_ADDR_TYPE_READ		1102552	1					
ANR	1103157	CompoundStatement		90:36:2408:2408	1102552	1					
ANR	1103158	ExpressionStatement	"r_strbuf_appendf ( s , "" %sR%s"" , c , cend )"	2150:3:61718:61757	1102552	0	True				
ANR	1103159	CallExpression	"r_strbuf_appendf ( s , "" %sR%s"" , c , cend )"		1102552	0					
ANR	1103160	Callee	r_strbuf_appendf		1102552	0					
ANR	1103161	Identifier	r_strbuf_appendf		1102552	0					
ANR	1103162	ArgumentList	s		1102552	1					
ANR	1103163	Argument	s		1102552	0					
ANR	1103164	Identifier	s		1102552	0					
ANR	1103165	Argument	""" %sR%s"""		1102552	1					
ANR	1103166	PrimaryExpression	""" %sR%s"""		1102552	0					
ANR	1103167	Argument	c		1102552	2					
ANR	1103168	Identifier	c		1102552	0					
ANR	1103169	Argument	cend		1102552	3					
ANR	1103170	Identifier	cend		1102552	0					
ANR	1103171	IfStatement	if ( type & R_ANAL_ADDR_TYPE_WRITE )		1102552	9					
ANR	1103172	Condition	type & R_ANAL_ADDR_TYPE_WRITE	2152:6:61769:61797	1102552	0	True				
ANR	1103173	BitAndExpression	type & R_ANAL_ADDR_TYPE_WRITE		1102552	0		&			
ANR	1103174	Identifier	type		1102552	0					
ANR	1103175	Identifier	R_ANAL_ADDR_TYPE_WRITE		1102552	1					
ANR	1103176	CompoundStatement		93:37:2495:2495	1102552	1					
ANR	1103177	ExpressionStatement	"r_strbuf_appendf ( s , "" %sW%s"" , c , cend )"	2153:3:61805:61844	1102552	0	True				
ANR	1103178	CallExpression	"r_strbuf_appendf ( s , "" %sW%s"" , c , cend )"		1102552	0					
ANR	1103179	Callee	r_strbuf_appendf		1102552	0					
ANR	1103180	Identifier	r_strbuf_appendf		1102552	0					
ANR	1103181	ArgumentList	s		1102552	1					
ANR	1103182	Argument	s		1102552	0					
ANR	1103183	Identifier	s		1102552	0					
ANR	1103184	Argument	""" %sW%s"""		1102552	1					
ANR	1103185	PrimaryExpression	""" %sW%s"""		1102552	0					
ANR	1103186	Argument	c		1102552	2					
ANR	1103187	Identifier	c		1102552	0					
ANR	1103188	Argument	cend		1102552	3					
ANR	1103189	Identifier	cend		1102552	0					
ANR	1103190	IfStatement	if ( type & R_ANAL_ADDR_TYPE_EXEC )		1102552	10					
ANR	1103191	Condition	type & R_ANAL_ADDR_TYPE_EXEC	2155:6:61856:61883	1102552	0	True				
ANR	1103192	BitAndExpression	type & R_ANAL_ADDR_TYPE_EXEC		1102552	0		&			
ANR	1103193	Identifier	type		1102552	0					
ANR	1103194	Identifier	R_ANAL_ADDR_TYPE_EXEC		1102552	1					
ANR	1103195	CompoundStatement		98:3:2600:2611	1102552	1					
ANR	1103196	IdentifierDeclStatement	RAsmOp op ;	2156:3:61891:61900	1102552	0	True				
ANR	1103197	IdentifierDecl	op		1102552	0					
ANR	1103198	IdentifierDeclType	RAsmOp		1102552	0					
ANR	1103199	Identifier	op		1102552	1					
ANR	1103200	IdentifierDeclStatement	ut8 buf [ 32 ] ;	2157:3:61905:61916	1102552	1	True				
ANR	1103201	IdentifierDecl	buf [ 32 ]		1102552	0					
ANR	1103202	IdentifierDeclType	ut8 [ 32 ]		1102552	0					
ANR	1103203	Identifier	buf		1102552	1					
ANR	1103204	PrimaryExpression	32		1102552	2					
ANR	1103205	ExpressionStatement	"r_strbuf_appendf ( s , "" %sX%s"" , c , cend )"	2158:3:61921:61960	1102552	2	True				
ANR	1103206	CallExpression	"r_strbuf_appendf ( s , "" %sX%s"" , c , cend )"		1102552	0					
ANR	1103207	Callee	r_strbuf_appendf		1102552	0					
ANR	1103208	Identifier	r_strbuf_appendf		1102552	0					
ANR	1103209	ArgumentList	s		1102552	1					
ANR	1103210	Argument	s		1102552	0					
ANR	1103211	Identifier	s		1102552	0					
ANR	1103212	Argument	""" %sX%s"""		1102552	1					
ANR	1103213	PrimaryExpression	""" %sX%s"""		1102552	0					
ANR	1103214	Argument	c		1102552	2					
ANR	1103215	Identifier	c		1102552	0					
ANR	1103216	Argument	cend		1102552	3					
ANR	1103217	Identifier	cend		1102552	0					
ANR	1103218	ExpressionStatement	"r_io_read_at ( core -> io , value , buf , sizeof ( buf ) )"	2160:3:61998:62047	1102552	3	True				
ANR	1103219	CallExpression	"r_io_read_at ( core -> io , value , buf , sizeof ( buf ) )"		1102552	0					
ANR	1103220	Callee	r_io_read_at		1102552	0					
ANR	1103221	Identifier	r_io_read_at		1102552	0					
ANR	1103222	ArgumentList	core -> io		1102552	1					
ANR	1103223	Argument	core -> io		1102552	0					
ANR	1103224	PtrMemberAccess	core -> io		1102552	0					
ANR	1103225	Identifier	core		1102552	0					
ANR	1103226	Identifier	io		1102552	1					
ANR	1103227	Argument	value		1102552	1					
ANR	1103228	Identifier	value		1102552	0					
ANR	1103229	Argument	buf		1102552	2					
ANR	1103230	Identifier	buf		1102552	0					
ANR	1103231	Argument	sizeof ( buf )		1102552	3					
ANR	1103232	SizeofExpression	sizeof ( buf )		1102552	0					
ANR	1103233	Sizeof	sizeof		1102552	0					
ANR	1103234	SizeofOperand	buf		1102552	1					
ANR	1103235	ExpressionStatement	"r_asm_set_pc ( core -> assembler , value )"	2161:3:62052:62089	1102552	4	True				
ANR	1103236	CallExpression	"r_asm_set_pc ( core -> assembler , value )"		1102552	0					
ANR	1103237	Callee	r_asm_set_pc		1102552	0					
ANR	1103238	Identifier	r_asm_set_pc		1102552	0					
ANR	1103239	ArgumentList	core -> assembler		1102552	1					
ANR	1103240	Argument	core -> assembler		1102552	0					
ANR	1103241	PtrMemberAccess	core -> assembler		1102552	0					
ANR	1103242	Identifier	core		1102552	0					
ANR	1103243	Identifier	assembler		1102552	1					
ANR	1103244	Argument	value		1102552	1					
ANR	1103245	Identifier	value		1102552	0					
ANR	1103246	ExpressionStatement	"r_asm_disassemble ( core -> assembler , & op , buf , sizeof ( buf ) )"	2162:3:62094:62153	1102552	5	True				
ANR	1103247	CallExpression	"r_asm_disassemble ( core -> assembler , & op , buf , sizeof ( buf ) )"		1102552	0					
ANR	1103248	Callee	r_asm_disassemble		1102552	0					
ANR	1103249	Identifier	r_asm_disassemble		1102552	0					
ANR	1103250	ArgumentList	core -> assembler		1102552	1					
ANR	1103251	Argument	core -> assembler		1102552	0					
ANR	1103252	PtrMemberAccess	core -> assembler		1102552	0					
ANR	1103253	Identifier	core		1102552	0					
ANR	1103254	Identifier	assembler		1102552	1					
ANR	1103255	Argument	& op		1102552	1					
ANR	1103256	UnaryOperationExpression	& op		1102552	0					
ANR	1103257	UnaryOperator	&		1102552	0					
ANR	1103258	Identifier	op		1102552	1					
ANR	1103259	Argument	buf		1102552	2					
ANR	1103260	Identifier	buf		1102552	0					
ANR	1103261	Argument	sizeof ( buf )		1102552	3					
ANR	1103262	SizeofExpression	sizeof ( buf )		1102552	0					
ANR	1103263	Sizeof	sizeof		1102552	0					
ANR	1103264	SizeofOperand	buf		1102552	1					
ANR	1103265	ExpressionStatement	"r_strbuf_appendf ( s , "" '%s'"" , r_asm_op_get_asm ( & op ) )"	2163:3:62158:62211	1102552	6	True				
ANR	1103266	CallExpression	"r_strbuf_appendf ( s , "" '%s'"" , r_asm_op_get_asm ( & op ) )"		1102552	0					
ANR	1103267	Callee	r_strbuf_appendf		1102552	0					
ANR	1103268	Identifier	r_strbuf_appendf		1102552	0					
ANR	1103269	ArgumentList	s		1102552	1					
ANR	1103270	Argument	s		1102552	0					
ANR	1103271	Identifier	s		1102552	0					
ANR	1103272	Argument	""" '%s'"""		1102552	1					
ANR	1103273	PrimaryExpression	""" '%s'"""		1102552	0					
ANR	1103274	Argument	r_asm_op_get_asm ( & op )		1102552	2					
ANR	1103275	CallExpression	r_asm_op_get_asm ( & op )		1102552	0					
ANR	1103276	Callee	r_asm_op_get_asm		1102552	0					
ANR	1103277	Identifier	r_asm_op_get_asm		1102552	0					
ANR	1103278	ArgumentList	& op		1102552	1					
ANR	1103279	Argument	& op		1102552	0					
ANR	1103280	UnaryOperationExpression	& op		1102552	0					
ANR	1103281	UnaryOperator	&		1102552	0					
ANR	1103282	Identifier	op		1102552	1					
ANR	1103283	CompoundStatement		108:4:2989:3004	1102552	7					
ANR	1103284	IdentifierDeclStatement	RDebugMap * map ;	2166:4:62274:62288	1102552	0	True				
ANR	1103285	IdentifierDecl	* map		1102552	0					
ANR	1103286	IdentifierDeclType	RDebugMap *		1102552	0					
ANR	1103287	Identifier	map		1102552	1					
ANR	1103288	IdentifierDeclStatement	RListIter * iter ;	2167:4:62294:62309	1102552	1	True				
ANR	1103289	IdentifierDecl	* iter		1102552	0					
ANR	1103290	IdentifierDeclType	RListIter *		1102552	0					
ANR	1103291	Identifier	iter		1102552	1					
ANR	1103292	Statement	r_list_foreach	2168:4:62315:62328	1102552	2	True				
ANR	1103293	Statement	(	2168:19:62330:62330	1102552	3	True				
ANR	1103294	Statement	core	2168:20:62331:62334	1102552	4	True				
ANR	1103295	Statement	->	2168:24:62335:62336	1102552	5	True				
ANR	1103296	Statement	dbg	2168:26:62337:62339	1102552	6	True				
ANR	1103297	Statement	->	2168:29:62340:62341	1102552	7	True				
ANR	1103298	Statement	maps	2168:31:62342:62345	1102552	8	True				
ANR	1103299	Statement	","	2168:35:62346:62346	1102552	9	True				
ANR	1103300	Statement	iter	2168:37:62348:62351	1102552	10	True				
ANR	1103301	Statement	","	2168:41:62352:62352	1102552	11	True				
ANR	1103302	Statement	map	2168:43:62354:62356	1102552	12	True				
ANR	1103303	Statement	)	2168:46:62357:62357	1102552	13	True				
ANR	1103304	CompoundStatement		109:48:3054:3054	1102552	14					
ANR	1103305	IfStatement	if ( ( value >= map -> addr ) && ( value < map -> addr_end ) )		1102552	0					
ANR	1103306	Condition	( value >= map -> addr ) && ( value < map -> addr_end )	2169:9:62370:62420	1102552	0	True				
ANR	1103307	AndExpression	( value >= map -> addr ) && ( value < map -> addr_end )		1102552	0		&&			
ANR	1103308	RelationalExpression	value >= map -> addr		1102552	0		>=			
ANR	1103309	Identifier	value		1102552	0					
ANR	1103310	PtrMemberAccess	map -> addr		1102552	1					
ANR	1103311	Identifier	map		1102552	0					
ANR	1103312	Identifier	addr		1102552	1					
ANR	1103313	RelationalExpression	value < map -> addr_end		1102552	1		<			
ANR	1103314	Identifier	value		1102552	0					
ANR	1103315	PtrMemberAccess	map -> addr_end		1102552	1					
ANR	1103316	Identifier	map		1102552	0					
ANR	1103317	Identifier	addr_end		1102552	1					
ANR	1103318	CompoundStatement		112:6:3126:3177	1102552	1					
ANR	1103319	IdentifierDeclStatement	"const char * lastslash = r_str_lchr ( map -> name , '/' ) ;"	2171:6:62431:62482	1102552	0	True				
ANR	1103320	IdentifierDecl	"* lastslash = r_str_lchr ( map -> name , '/' )"		1102552	0					
ANR	1103321	IdentifierDeclType	const char *		1102552	0					
ANR	1103322	Identifier	lastslash		1102552	1					
ANR	1103323	AssignmentExpression	"* lastslash = r_str_lchr ( map -> name , '/' )"		1102552	2		=			
ANR	1103324	Identifier	lastslash		1102552	0					
ANR	1103325	CallExpression	"r_str_lchr ( map -> name , '/' )"		1102552	1					
ANR	1103326	Callee	r_str_lchr		1102552	0					
ANR	1103327	Identifier	r_str_lchr		1102552	0					
ANR	1103328	ArgumentList	map -> name		1102552	1					
ANR	1103329	Argument	map -> name		1102552	0					
ANR	1103330	PtrMemberAccess	map -> name		1102552	0					
ANR	1103331	Identifier	map		1102552	0					
ANR	1103332	Identifier	name		1102552	1					
ANR	1103333	Argument	'/'		1102552	1					
ANR	1103334	PrimaryExpression	'/'		1102552	0					
ANR	1103335	ExpressionStatement	"r_strbuf_appendf ( s , "" '%s'"" , lastslash ? lastslash + 1 : map -> name )"	2172:6:62490:62560	1102552	1	True				
ANR	1103336	CallExpression	"r_strbuf_appendf ( s , "" '%s'"" , lastslash ? lastslash + 1 : map -> name )"		1102552	0					
ANR	1103337	Callee	r_strbuf_appendf		1102552	0					
ANR	1103338	Identifier	r_strbuf_appendf		1102552	0					
ANR	1103339	ArgumentList	s		1102552	1					
ANR	1103340	Argument	s		1102552	0					
ANR	1103341	Identifier	s		1102552	0					
ANR	1103342	Argument	""" '%s'"""		1102552	1					
ANR	1103343	PrimaryExpression	""" '%s'"""		1102552	0					
ANR	1103344	Argument	lastslash ? lastslash + 1 : map -> name		1102552	2					
ANR	1103345	ConditionalExpression	lastslash ? lastslash + 1 : map -> name		1102552	0					
ANR	1103346	Condition	lastslash		1102552	0					
ANR	1103347	Identifier	lastslash		1102552	0					
ANR	1103348	AdditiveExpression	lastslash + 1		1102552	1		+			
ANR	1103349	Identifier	lastslash		1102552	0					
ANR	1103350	PrimaryExpression	1		1102552	1					
ANR	1103351	PtrMemberAccess	map -> name		1102552	2					
ANR	1103352	Identifier	map		1102552	0					
ANR	1103353	Identifier	name		1102552	1					
ANR	1103354	BreakStatement	break ;	2174:6:62568:62573	1102552	2	True				
ANR	1103355	ElseStatement	else		1102552	0					
ANR	1103356	IfStatement	if ( type & R_ANAL_ADDR_TYPE_READ )		1102552	0					
ANR	1103357	Condition	type & R_ANAL_ADDR_TYPE_READ	2178:13:62606:62633	1102552	0	True				
ANR	1103358	BitAndExpression	type & R_ANAL_ADDR_TYPE_READ		1102552	0		&			
ANR	1103359	Identifier	type		1102552	0					
ANR	1103360	Identifier	R_ANAL_ADDR_TYPE_READ		1102552	1					
ANR	1103361	CompoundStatement		124:3:3461:3511	1102552	1					
ANR	1103362	IdentifierDeclStatement	ut8 buf [ 32 ] ;	2179:3:62641:62652	1102552	0	True				
ANR	1103363	IdentifierDecl	buf [ 32 ]		1102552	0					
ANR	1103364	IdentifierDeclType	ut8 [ 32 ]		1102552	0					
ANR	1103365	Identifier	buf		1102552	1					
ANR	1103366	PrimaryExpression	32		1102552	2					
ANR	1103367	IdentifierDeclStatement	ut32 * n32 = ( ut32 * ) buf ;	2180:3:62657:62680	1102552	1	True				
ANR	1103368	IdentifierDecl	* n32 = ( ut32 * ) buf		1102552	0					
ANR	1103369	IdentifierDeclType	ut32 *		1102552	0					
ANR	1103370	Identifier	n32		1102552	1					
ANR	1103371	AssignmentExpression	* n32 = ( ut32 * ) buf		1102552	2		=			
ANR	1103372	Identifier	n32		1102552	0					
ANR	1103373	CastExpression	( ut32 * ) buf		1102552	1					
ANR	1103374	CastTarget	ut32 *		1102552	0					
ANR	1103375	Identifier	buf		1102552	1					
ANR	1103376	IdentifierDeclStatement	ut64 * n64 = ( ut64 * ) buf ;	2181:3:62685:62707	1102552	2	True				
ANR	1103377	IdentifierDecl	* n64 = ( ut64 * ) buf		1102552	0					
ANR	1103378	IdentifierDeclType	ut64 *		1102552	0					
ANR	1103379	Identifier	n64		1102552	1					
ANR	1103380	AssignmentExpression	* n64 = ( ut64 * ) buf		1102552	2		=			
ANR	1103381	Identifier	n64		1102552	0					
ANR	1103382	CastExpression	( ut64 * ) buf		1102552	1					
ANR	1103383	CastTarget	ut64 *		1102552	0					
ANR	1103384	Identifier	buf		1102552	1					
ANR	1103385	ExpressionStatement	"r_io_read_at ( core -> io , value , buf , sizeof ( buf ) )"	2182:3:62712:62761	1102552	3	True				
ANR	1103386	CallExpression	"r_io_read_at ( core -> io , value , buf , sizeof ( buf ) )"		1102552	0					
ANR	1103387	Callee	r_io_read_at		1102552	0					
ANR	1103388	Identifier	r_io_read_at		1102552	0					
ANR	1103389	ArgumentList	core -> io		1102552	1					
ANR	1103390	Argument	core -> io		1102552	0					
ANR	1103391	PtrMemberAccess	core -> io		1102552	0					
ANR	1103392	Identifier	core		1102552	0					
ANR	1103393	Identifier	io		1102552	1					
ANR	1103394	Argument	value		1102552	1					
ANR	1103395	Identifier	value		1102552	0					
ANR	1103396	Argument	buf		1102552	2					
ANR	1103397	Identifier	buf		1102552	0					
ANR	1103398	Argument	sizeof ( buf )		1102552	3					
ANR	1103399	SizeofExpression	sizeof ( buf )		1102552	0					
ANR	1103400	Sizeof	sizeof		1102552	0					
ANR	1103401	SizeofOperand	buf		1102552	1					
ANR	1103402	IdentifierDeclStatement	ut64 n = ( core -> assembler -> bits == 64 ) ? * n64 : * n32 ;	2183:3:62766:62816	1102552	4	True				
ANR	1103403	IdentifierDecl	n = ( core -> assembler -> bits == 64 ) ? * n64 : * n32		1102552	0					
ANR	1103404	IdentifierDeclType	ut64		1102552	0					
ANR	1103405	Identifier	n		1102552	1					
ANR	1103406	AssignmentExpression	n = ( core -> assembler -> bits == 64 ) ? * n64 : * n32		1102552	2		=			
ANR	1103407	Identifier	n		1102552	0					
ANR	1103408	ConditionalExpression	( core -> assembler -> bits == 64 ) ? * n64 : * n32		1102552	1					
ANR	1103409	Condition	core -> assembler -> bits == 64		1102552	0					
ANR	1103410	EqualityExpression	core -> assembler -> bits == 64		1102552	0		==			
ANR	1103411	PtrMemberAccess	core -> assembler -> bits		1102552	0					
ANR	1103412	PtrMemberAccess	core -> assembler		1102552	0					
ANR	1103413	Identifier	core		1102552	0					
ANR	1103414	Identifier	assembler		1102552	1					
ANR	1103415	Identifier	bits		1102552	1					
ANR	1103416	PrimaryExpression	64		1102552	1					
ANR	1103417	UnaryOperationExpression	* n64		1102552	1					
ANR	1103418	UnaryOperator	*		1102552	0					
ANR	1103419	Identifier	n64		1102552	1					
ANR	1103420	UnaryOperationExpression	* n32		1102552	2					
ANR	1103421	UnaryOperator	*		1102552	0					
ANR	1103422	Identifier	n32		1102552	1					
ANR	1103423	Statement	r_strbuf_appendf	2184:3:62821:62836	1102552	5	True				
ANR	1103424	Statement	(	2184:20:62838:62838	1102552	6	True				
ANR	1103425	Statement	s	2184:21:62839:62839	1102552	7	True				
ANR	1103426	Statement	","	2184:22:62840:62840	1102552	8	True				
ANR	1103427	Statement	""" 0x%"""	2184:24:62842:62847	1102552	9	True				
ANR	1103428	Statement	PFMT64x	2184:30:62848:62854	1102552	10	True				
ANR	1103429	Statement	","	2184:37:62855:62855	1102552	11	True				
ANR	1103430	Statement	n	2184:39:62857:62857	1102552	12	True				
ANR	1103431	Statement	)	2184:40:62858:62858	1102552	13	True				
ANR	1103432	ExpressionStatement		2184:41:62859:62859	1102552	14	True				
ANR	1103433	CompoundStatement		132:2:3749:3759	1102552	16					
ANR	1103434	IdentifierDeclStatement	"ut8 buf [ 128 ] , widebuf [ 256 ] ;"	2188:2:62873:62899	1102552	0	True				
ANR	1103435	IdentifierDecl	buf [ 128 ]		1102552	0					
ANR	1103436	IdentifierDeclType	ut8 [ 128 ]		1102552	0					
ANR	1103437	Identifier	buf		1102552	1					
ANR	1103438	PrimaryExpression	128		1102552	2					
ANR	1103439	IdentifierDecl	widebuf [ 256 ]		1102552	1					
ANR	1103440	IdentifierDeclType	ut8 [ 256 ]		1102552	0					
ANR	1103441	Identifier	widebuf		1102552	1					
ANR	1103442	PrimaryExpression	256		1102552	2					
ANR	1103443	IdentifierDeclStatement	"const char * c = r_config_get_i ( core -> config , ""scr.color"" ) ? core -> cons -> context -> pal . ai_ascii : """" ;"	2189:2:62903:63000	1102552	1	True				
ANR	1103444	IdentifierDecl	"* c = r_config_get_i ( core -> config , ""scr.color"" ) ? core -> cons -> context -> pal . ai_ascii : """""		1102552	0					
ANR	1103445	IdentifierDeclType	const char *		1102552	0					
ANR	1103446	Identifier	c		1102552	1					
ANR	1103447	AssignmentExpression	"* c = r_config_get_i ( core -> config , ""scr.color"" ) ? core -> cons -> context -> pal . ai_ascii : """""		1102552	2		=			
ANR	1103448	Identifier	c		1102552	0					
ANR	1103449	ConditionalExpression	"r_config_get_i ( core -> config , ""scr.color"" ) ? core -> cons -> context -> pal . ai_ascii : """""		1102552	1					
ANR	1103450	Condition	"r_config_get_i ( core -> config , ""scr.color"" )"		1102552	0					
ANR	1103451	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		1102552	0					
ANR	1103452	Callee	r_config_get_i		1102552	0					
ANR	1103453	Identifier	r_config_get_i		1102552	0					
ANR	1103454	ArgumentList	core -> config		1102552	1					
ANR	1103455	Argument	core -> config		1102552	0					
ANR	1103456	PtrMemberAccess	core -> config		1102552	0					
ANR	1103457	Identifier	core		1102552	0					
ANR	1103458	Identifier	config		1102552	1					
ANR	1103459	Argument	"""scr.color"""		1102552	1					
ANR	1103460	PrimaryExpression	"""scr.color"""		1102552	0					
ANR	1103461	MemberAccess	core -> cons -> context -> pal . ai_ascii		1102552	1					
ANR	1103462	PtrMemberAccess	core -> cons -> context -> pal		1102552	0					
ANR	1103463	PtrMemberAccess	core -> cons -> context		1102552	0					
ANR	1103464	PtrMemberAccess	core -> cons		1102552	0					
ANR	1103465	Identifier	core		1102552	0					
ANR	1103466	Identifier	cons		1102552	1					
ANR	1103467	Identifier	context		1102552	1					
ANR	1103468	Identifier	pal		1102552	1					
ANR	1103469	Identifier	ai_ascii		1102552	1					
ANR	1103470	PrimaryExpression	""""""		1102552	2					
ANR	1103471	IdentifierDeclStatement	"const char * cend = ( c && * c ) ? Color_RESET : """" ;"	2190:2:63004:63050	1102552	2	True				
ANR	1103472	IdentifierDecl	"* cend = ( c && * c ) ? Color_RESET : """""		1102552	0					
ANR	1103473	IdentifierDeclType	const char *		1102552	0					
ANR	1103474	Identifier	cend		1102552	1					
ANR	1103475	AssignmentExpression	"* cend = ( c && * c ) ? Color_RESET : """""		1102552	2		=			
ANR	1103476	Identifier	cend		1102552	0					
ANR	1103477	ConditionalExpression	"( c && * c ) ? Color_RESET : """""		1102552	1					
ANR	1103478	Condition	c && * c		1102552	0					
ANR	1103479	AndExpression	c && * c		1102552	0		&&			
ANR	1103480	Identifier	c		1102552	0					
ANR	1103481	UnaryOperationExpression	* c		1102552	1					
ANR	1103482	UnaryOperator	*		1102552	0					
ANR	1103483	Identifier	c		1102552	1					
ANR	1103484	Identifier	Color_RESET		1102552	1					
ANR	1103485	PrimaryExpression	""""""		1102552	2					
ANR	1103486	IdentifierDeclStatement	"int len , r ;"	2191:2:63054:63064	1102552	3	True				
ANR	1103487	IdentifierDecl	len		1102552	0					
ANR	1103488	IdentifierDeclType	int		1102552	0					
ANR	1103489	Identifier	len		1102552	1					
ANR	1103490	IdentifierDecl	r		1102552	1					
ANR	1103491	IdentifierDeclType	int		1102552	0					
ANR	1103492	Identifier	r		1102552	1					
ANR	1103493	IfStatement	"if ( r_io_read_at ( core -> io , value , buf , sizeof ( buf ) ) )"		1102552	4					
ANR	1103494	Condition	"r_io_read_at ( core -> io , value , buf , sizeof ( buf ) )"	2192:6:63072:63120	1102552	0	True				
ANR	1103495	CallExpression	"r_io_read_at ( core -> io , value , buf , sizeof ( buf ) )"		1102552	0					
ANR	1103496	Callee	r_io_read_at		1102552	0					
ANR	1103497	Identifier	r_io_read_at		1102552	0					
ANR	1103498	ArgumentList	core -> io		1102552	1					
ANR	1103499	Argument	core -> io		1102552	0					
ANR	1103500	PtrMemberAccess	core -> io		1102552	0					
ANR	1103501	Identifier	core		1102552	0					
ANR	1103502	Identifier	io		1102552	1					
ANR	1103503	Argument	value		1102552	1					
ANR	1103504	Identifier	value		1102552	0					
ANR	1103505	Argument	buf		1102552	2					
ANR	1103506	Identifier	buf		1102552	0					
ANR	1103507	Argument	sizeof ( buf )		1102552	3					
ANR	1103508	SizeofExpression	sizeof ( buf )		1102552	0					
ANR	1103509	Sizeof	sizeof		1102552	0					
ANR	1103510	SizeofOperand	buf		1102552	1					
ANR	1103511	CompoundStatement		133:57:3818:3818	1102552	1					
ANR	1103512	ExpressionStatement	buf [ sizeof ( buf ) - 1 ] = 0	2193:3:63128:63153	1102552	0	True				
ANR	1103513	AssignmentExpression	buf [ sizeof ( buf ) - 1 ] = 0		1102552	0		=			
ANR	1103514	ArrayIndexing	buf [ sizeof ( buf ) - 1 ]		1102552	0					
ANR	1103515	Identifier	buf		1102552	0					
ANR	1103516	AdditiveExpression	sizeof ( buf ) - 1		1102552	1		-			
ANR	1103517	SizeofExpression	sizeof ( buf )		1102552	0					
ANR	1103518	Sizeof	sizeof		1102552	0					
ANR	1103519	SizeofOperand	buf		1102552	1					
ANR	1103520	PrimaryExpression	1		1102552	1					
ANR	1103521	PrimaryExpression	0		1102552	1					
ANR	1103522	SwitchStatement	"switch ( is_string ( buf , sizeof ( buf ) , & len ) )"		1102552	1					
ANR	1103523	Condition	"is_string ( buf , sizeof ( buf ) , & len )"	2194:11:63166:63199	1102552	0	True				
ANR	1103524	CallExpression	"is_string ( buf , sizeof ( buf ) , & len )"		1102552	0					
ANR	1103525	Callee	is_string		1102552	0					
ANR	1103526	Identifier	is_string		1102552	0					
ANR	1103527	ArgumentList	buf		1102552	1					
ANR	1103528	Argument	buf		1102552	0					
ANR	1103529	Identifier	buf		1102552	0					
ANR	1103530	Argument	sizeof ( buf )		1102552	1					
ANR	1103531	SizeofExpression	sizeof ( buf )		1102552	0					
ANR	1103532	Sizeof	sizeof		1102552	0					
ANR	1103533	SizeofOperand	buf		1102552	1					
ANR	1103534	Argument	& len		1102552	2					
ANR	1103535	UnaryOperationExpression	& len		1102552	0					
ANR	1103536	UnaryOperator	&		1102552	0					
ANR	1103537	Identifier	len		1102552	1					
ANR	1103538	CompoundStatement		135:47:3897:3897	1102552	1					
ANR	1103539	Label	case 1 :	2195:3:63207:63213	1102552	0	True				
ANR	1103540	ExpressionStatement	"r_strbuf_appendf ( s , "" (%s%s%s)"" , c , buf , cend )"	2196:4:63219:63266	1102552	1	True				
ANR	1103541	CallExpression	"r_strbuf_appendf ( s , "" (%s%s%s)"" , c , buf , cend )"		1102552	0					
ANR	1103542	Callee	r_strbuf_appendf		1102552	0					
ANR	1103543	Identifier	r_strbuf_appendf		1102552	0					
ANR	1103544	ArgumentList	s		1102552	1					
ANR	1103545	Argument	s		1102552	0					
ANR	1103546	Identifier	s		1102552	0					
ANR	1103547	Argument	""" (%s%s%s)"""		1102552	1					
ANR	1103548	PrimaryExpression	""" (%s%s%s)"""		1102552	0					
ANR	1103549	Argument	c		1102552	2					
ANR	1103550	Identifier	c		1102552	0					
ANR	1103551	Argument	buf		1102552	3					
ANR	1103552	Identifier	buf		1102552	0					
ANR	1103553	Argument	cend		1102552	4					
ANR	1103554	Identifier	cend		1102552	0					
ANR	1103555	BreakStatement	break ;	2197:4:63272:63277	1102552	2	True				
ANR	1103556	Label	case 2 :	2198:3:63282:63288	1102552	3	True				
ANR	1103557	ExpressionStatement	"r = r_utf8_encode_str ( ( const RRune * ) buf , widebuf , sizeof ( widebuf ) - 1 )"	2199:4:63294:63380	1102552	4	True				
ANR	1103558	AssignmentExpression	"r = r_utf8_encode_str ( ( const RRune * ) buf , widebuf , sizeof ( widebuf ) - 1 )"		1102552	0		=			
ANR	1103559	Identifier	r		1102552	0					
ANR	1103560	CallExpression	"r_utf8_encode_str ( ( const RRune * ) buf , widebuf , sizeof ( widebuf ) - 1 )"		1102552	1					
ANR	1103561	Callee	r_utf8_encode_str		1102552	0					
ANR	1103562	Identifier	r_utf8_encode_str		1102552	0					
ANR	1103563	ArgumentList	( const RRune * ) buf		1102552	1					
ANR	1103564	Argument	( const RRune * ) buf		1102552	0					
ANR	1103565	CastExpression	( const RRune * ) buf		1102552	0					
ANR	1103566	CastTarget	const RRune *		1102552	0					
ANR	1103567	Identifier	buf		1102552	1					
ANR	1103568	Argument	widebuf		1102552	1					
ANR	1103569	Identifier	widebuf		1102552	0					
ANR	1103570	Argument	sizeof ( widebuf ) - 1		1102552	2					
ANR	1103571	AdditiveExpression	sizeof ( widebuf ) - 1		1102552	0		-			
ANR	1103572	SizeofExpression	sizeof ( widebuf )		1102552	0					
ANR	1103573	Sizeof	sizeof		1102552	0					
ANR	1103574	SizeofOperand	widebuf		1102552	1					
ANR	1103575	PrimaryExpression	1		1102552	1					
ANR	1103576	IfStatement	if ( r == - 1 )		1102552	5					
ANR	1103577	Condition	r == - 1	2201:8:63390:63396	1102552	0	True				
ANR	1103578	EqualityExpression	r == - 1		1102552	0		==			
ANR	1103579	Identifier	r		1102552	0					
ANR	1103580	UnaryOperationExpression	- 1		1102552	1					
ANR	1103581	UnaryOperator	-		1102552	0					
ANR	1103582	PrimaryExpression	1		1102552	1					
ANR	1103583	CompoundStatement		142:17:4094:4094	1102552	1					
ANR	1103584	ExpressionStatement	"eprintf ( ""Something was wrong with refs\\n"" )"	2202:5:63406:63449	1102552	0	True				
ANR	1103585	CallExpression	"eprintf ( ""Something was wrong with refs\\n"" )"		1102552	0					
ANR	1103586	Callee	eprintf		1102552	0					
ANR	1103587	Identifier	eprintf		1102552	0					
ANR	1103588	ArgumentList	"""Something was wrong with refs\\n"""		1102552	1					
ANR	1103589	Argument	"""Something was wrong with refs\\n"""		1102552	0					
ANR	1103590	PrimaryExpression	"""Something was wrong with refs\\n"""		1102552	0					
ANR	1103591	ElseStatement	else		1102552	0					
ANR	1103592	CompoundStatement		144:11:4157:4157	1102552	0					
ANR	1103593	ExpressionStatement	"r_strbuf_appendf ( s , "" (%s%s%s)"" , c , widebuf , cend )"	2204:5:63469:63520	1102552	0	True				
ANR	1103594	CallExpression	"r_strbuf_appendf ( s , "" (%s%s%s)"" , c , widebuf , cend )"		1102552	0					
ANR	1103595	Callee	r_strbuf_appendf		1102552	0					
ANR	1103596	Identifier	r_strbuf_appendf		1102552	0					
ANR	1103597	ArgumentList	s		1102552	1					
ANR	1103598	Argument	s		1102552	0					
ANR	1103599	Identifier	s		1102552	0					
ANR	1103600	Argument	""" (%s%s%s)"""		1102552	1					
ANR	1103601	PrimaryExpression	""" (%s%s%s)"""		1102552	0					
ANR	1103602	Argument	c		1102552	2					
ANR	1103603	Identifier	c		1102552	0					
ANR	1103604	Argument	widebuf		1102552	3					
ANR	1103605	Identifier	widebuf		1102552	0					
ANR	1103606	Argument	cend		1102552	4					
ANR	1103607	Identifier	cend		1102552	0					
ANR	1103608	BreakStatement	break ;	2206:4:63532:63537	1102552	6	True				
ANR	1103609	IfStatement	if ( ( type & R_ANAL_ADDR_TYPE_READ ) && ! ( type & R_ANAL_ADDR_TYPE_EXEC ) && depth )		1102552	17					
ANR	1103610	Condition	( type & R_ANAL_ADDR_TYPE_READ ) && ! ( type & R_ANAL_ADDR_TYPE_EXEC ) && depth	2211:5:63557:63630	1102552	0	True				
ANR	1103611	AndExpression	( type & R_ANAL_ADDR_TYPE_READ ) && ! ( type & R_ANAL_ADDR_TYPE_EXEC ) && depth		1102552	0		&&			
ANR	1103612	BitAndExpression	type & R_ANAL_ADDR_TYPE_READ		1102552	0		&			
ANR	1103613	Identifier	type		1102552	0					
ANR	1103614	Identifier	R_ANAL_ADDR_TYPE_READ		1102552	1					
ANR	1103615	AndExpression	! ( type & R_ANAL_ADDR_TYPE_EXEC ) && depth		1102552	1		&&			
ANR	1103616	UnaryOperationExpression	! ( type & R_ANAL_ADDR_TYPE_EXEC )		1102552	0					
ANR	1103617	UnaryOperator	!		1102552	0					
ANR	1103618	BitAndExpression	type & R_ANAL_ADDR_TYPE_EXEC		1102552	1		&			
ANR	1103619	Identifier	type		1102552	0					
ANR	1103620	Identifier	R_ANAL_ADDR_TYPE_EXEC		1102552	1					
ANR	1103621	Identifier	depth		1102552	1					
ANR	1103622	CompoundStatement		158:2:4514:4564	1102552	1					
ANR	1103623	IdentifierDeclStatement	ut8 buf [ 32 ] ;	2213:2:63698:63709	1102552	0	True				
ANR	1103624	IdentifierDecl	buf [ 32 ]		1102552	0					
ANR	1103625	IdentifierDeclType	ut8 [ 32 ]		1102552	0					
ANR	1103626	Identifier	buf		1102552	1					
ANR	1103627	PrimaryExpression	32		1102552	2					
ANR	1103628	IdentifierDeclStatement	ut32 * n32 = ( ut32 * ) buf ;	2214:2:63713:63736	1102552	1	True				
ANR	1103629	IdentifierDecl	* n32 = ( ut32 * ) buf		1102552	0					
ANR	1103630	IdentifierDeclType	ut32 *		1102552	0					
ANR	1103631	Identifier	n32		1102552	1					
ANR	1103632	AssignmentExpression	* n32 = ( ut32 * ) buf		1102552	2		=			
ANR	1103633	Identifier	n32		1102552	0					
ANR	1103634	CastExpression	( ut32 * ) buf		1102552	1					
ANR	1103635	CastTarget	ut32 *		1102552	0					
ANR	1103636	Identifier	buf		1102552	1					
ANR	1103637	IdentifierDeclStatement	ut64 * n64 = ( ut64 * ) buf ;	2215:2:63740:63762	1102552	2	True				
ANR	1103638	IdentifierDecl	* n64 = ( ut64 * ) buf		1102552	0					
ANR	1103639	IdentifierDeclType	ut64 *		1102552	0					
ANR	1103640	Identifier	n64		1102552	1					
ANR	1103641	AssignmentExpression	* n64 = ( ut64 * ) buf		1102552	2		=			
ANR	1103642	Identifier	n64		1102552	0					
ANR	1103643	CastExpression	( ut64 * ) buf		1102552	1					
ANR	1103644	CastTarget	ut64 *		1102552	0					
ANR	1103645	Identifier	buf		1102552	1					
ANR	1103646	ExpressionStatement	"r_io_read_at ( core -> io , value , buf , sizeof ( buf ) )"	2216:2:63766:63815	1102552	3	True				
ANR	1103647	CallExpression	"r_io_read_at ( core -> io , value , buf , sizeof ( buf ) )"		1102552	0					
ANR	1103648	Callee	r_io_read_at		1102552	0					
ANR	1103649	Identifier	r_io_read_at		1102552	0					
ANR	1103650	ArgumentList	core -> io		1102552	1					
ANR	1103651	Argument	core -> io		1102552	0					
ANR	1103652	PtrMemberAccess	core -> io		1102552	0					
ANR	1103653	Identifier	core		1102552	0					
ANR	1103654	Identifier	io		1102552	1					
ANR	1103655	Argument	value		1102552	1					
ANR	1103656	Identifier	value		1102552	0					
ANR	1103657	Argument	buf		1102552	2					
ANR	1103658	Identifier	buf		1102552	0					
ANR	1103659	Argument	sizeof ( buf )		1102552	3					
ANR	1103660	SizeofExpression	sizeof ( buf )		1102552	0					
ANR	1103661	Sizeof	sizeof		1102552	0					
ANR	1103662	SizeofOperand	buf		1102552	1					
ANR	1103663	IdentifierDeclStatement	ut64 n = ( core -> assembler -> bits == 64 ) ? * n64 : * n32 ;	2217:2:63819:63869	1102552	4	True				
ANR	1103664	IdentifierDecl	n = ( core -> assembler -> bits == 64 ) ? * n64 : * n32		1102552	0					
ANR	1103665	IdentifierDeclType	ut64		1102552	0					
ANR	1103666	Identifier	n		1102552	1					
ANR	1103667	AssignmentExpression	n = ( core -> assembler -> bits == 64 ) ? * n64 : * n32		1102552	2		=			
ANR	1103668	Identifier	n		1102552	0					
ANR	1103669	ConditionalExpression	( core -> assembler -> bits == 64 ) ? * n64 : * n32		1102552	1					
ANR	1103670	Condition	core -> assembler -> bits == 64		1102552	0					
ANR	1103671	EqualityExpression	core -> assembler -> bits == 64		1102552	0		==			
ANR	1103672	PtrMemberAccess	core -> assembler -> bits		1102552	0					
ANR	1103673	PtrMemberAccess	core -> assembler		1102552	0					
ANR	1103674	Identifier	core		1102552	0					
ANR	1103675	Identifier	assembler		1102552	1					
ANR	1103676	Identifier	bits		1102552	1					
ANR	1103677	PrimaryExpression	64		1102552	1					
ANR	1103678	UnaryOperationExpression	* n64		1102552	1					
ANR	1103679	UnaryOperator	*		1102552	0					
ANR	1103680	Identifier	n64		1102552	1					
ANR	1103681	UnaryOperationExpression	* n32		1102552	2					
ANR	1103682	UnaryOperator	*		1102552	0					
ANR	1103683	Identifier	n32		1102552	1					
ANR	1103684	IfStatement	if ( n != value )		1102552	5					
ANR	1103685	Condition	n != value	2218:5:63876:63885	1102552	0	True				
ANR	1103686	EqualityExpression	n != value		1102552	0		!=			
ANR	1103687	Identifier	n		1102552	0					
ANR	1103688	Identifier	value		1102552	1					
ANR	1103689	CompoundStatement		160:3:4588:4649	1102552	1					
ANR	1103690	IdentifierDeclStatement	"char * rrstr = r_core_anal_hasrefs_to_depth ( core , n , depth - 1 ) ;"	2219:3:63893:63954	1102552	0	True				
ANR	1103691	IdentifierDecl	"* rrstr = r_core_anal_hasrefs_to_depth ( core , n , depth - 1 )"		1102552	0					
ANR	1103692	IdentifierDeclType	char *		1102552	0					
ANR	1103693	Identifier	rrstr		1102552	1					
ANR	1103694	AssignmentExpression	"* rrstr = r_core_anal_hasrefs_to_depth ( core , n , depth - 1 )"		1102552	2		=			
ANR	1103695	Identifier	rrstr		1102552	0					
ANR	1103696	CallExpression	"r_core_anal_hasrefs_to_depth ( core , n , depth - 1 )"		1102552	1					
ANR	1103697	Callee	r_core_anal_hasrefs_to_depth		1102552	0					
ANR	1103698	Identifier	r_core_anal_hasrefs_to_depth		1102552	0					
ANR	1103699	ArgumentList	core		1102552	1					
ANR	1103700	Argument	core		1102552	0					
ANR	1103701	Identifier	core		1102552	0					
ANR	1103702	Argument	n		1102552	1					
ANR	1103703	Identifier	n		1102552	0					
ANR	1103704	Argument	depth - 1		1102552	2					
ANR	1103705	AdditiveExpression	depth - 1		1102552	0		-			
ANR	1103706	Identifier	depth		1102552	0					
ANR	1103707	PrimaryExpression	1		1102552	1					
ANR	1103708	IfStatement	if ( rrstr )		1102552	1					
ANR	1103709	Condition	rrstr	2220:7:63963:63967	1102552	0	True				
ANR	1103710	Identifier	rrstr		1102552	0					
ANR	1103711	CompoundStatement		161:14:4665:4665	1102552	1					
ANR	1103712	IfStatement	if ( rrstr [ 0 ] )		1102552	0					
ANR	1103713	Condition	rrstr [ 0 ]	2221:8:63980:63987	1102552	0	True				
ANR	1103714	ArrayIndexing	rrstr [ 0 ]		1102552	0					
ANR	1103715	Identifier	rrstr		1102552	0					
ANR	1103716	PrimaryExpression	0		1102552	1					
ANR	1103717	CompoundStatement		162:18:4685:4685	1102552	1					
ANR	1103718	ExpressionStatement	"r_strbuf_appendf ( s , "" --> %s"" , rrstr )"	2222:5:63997:64035	1102552	0	True				
ANR	1103719	CallExpression	"r_strbuf_appendf ( s , "" --> %s"" , rrstr )"		1102552	0					
ANR	1103720	Callee	r_strbuf_appendf		1102552	0					
ANR	1103721	Identifier	r_strbuf_appendf		1102552	0					
ANR	1103722	ArgumentList	s		1102552	1					
ANR	1103723	Argument	s		1102552	0					
ANR	1103724	Identifier	s		1102552	0					
ANR	1103725	Argument	""" --> %s"""		1102552	1					
ANR	1103726	PrimaryExpression	""" --> %s"""		1102552	0					
ANR	1103727	Argument	rrstr		1102552	2					
ANR	1103728	Identifier	rrstr		1102552	0					
ANR	1103729	ExpressionStatement	free ( rrstr )	2224:4:64047:64059	1102552	1	True				
ANR	1103730	CallExpression	free ( rrstr )		1102552	0					
ANR	1103731	Callee	free		1102552	0					
ANR	1103732	Identifier	free		1102552	0					
ANR	1103733	ArgumentList	rrstr		1102552	1					
ANR	1103734	Argument	rrstr		1102552	0					
ANR	1103735	Identifier	rrstr		1102552	0					
ANR	1103736	ExpressionStatement	free ( mapname )	2228:1:64074:64088	1102552	18	True				
ANR	1103737	CallExpression	free ( mapname )		1102552	0					
ANR	1103738	Callee	free		1102552	0					
ANR	1103739	Identifier	free		1102552	0					
ANR	1103740	ArgumentList	mapname		1102552	1					
ANR	1103741	Argument	mapname		1102552	0					
ANR	1103742	Identifier	mapname		1102552	0					
ANR	1103743	ReturnStatement	return r_strbuf_drain ( s ) ;	2229:1:64091:64116	1102552	19	True				
ANR	1103744	CallExpression	r_strbuf_drain ( s )		1102552	0					
ANR	1103745	Callee	r_strbuf_drain		1102552	0					
ANR	1103746	Identifier	r_strbuf_drain		1102552	0					
ANR	1103747	ArgumentList	s		1102552	1					
ANR	1103748	Argument	s		1102552	0					
ANR	1103749	Identifier	s		1102552	0					
ANR	1103750	ReturnType	static char *		1102552	1					
ANR	1103751	Identifier	r_core_anal_hasrefs_to_depth		1102552	2					
ANR	1103752	ParameterList	"RCore * core , ut64 value , int depth"		1102552	3					
ANR	1103753	Parameter	RCore * core	2060:42:59268:59278	1102552	0	True				
ANR	1103754	ParameterType	RCore *		1102552	0					
ANR	1103755	Identifier	core		1102552	1					
ANR	1103756	Parameter	ut64 value	2060:55:59281:59290	1102552	1	True				
ANR	1103757	ParameterType	ut64		1102552	0					
ANR	1103758	Identifier	value		1102552	1					
ANR	1103759	Parameter	int depth	2060:67:59293:59301	1102552	2	True				
ANR	1103760	ParameterType	int		1102552	0					
ANR	1103761	Identifier	depth		1102552	1					
ANR	1103762	CFGEntryNode	ENTRY		1102552		True				
ANR	1103763	CFGExitNode	EXIT		1102552		True				
ANR	1103764	CFGErrorNode	ERROR		1102552		True				
ANR	1103765	Symbol	* fcn		1102552						
ANR	1103766	Symbol	* map		1102552						
ANR	1103767	Symbol	& op		1102552						
ANR	1103768	Symbol	mapname		1102552						
ANR	1103769	Symbol	type		1102552						
ANR	1103770	Symbol	* core -> assembler		1102552						
ANR	1103771	Symbol	len		1102552						
ANR	1103772	Symbol	r_core_anal_hasrefs_to_depth		1102552						
ANR	1103773	Symbol	r_flag_get_i		1102552						
ANR	1103774	Symbol	core -> bin		1102552						
ANR	1103775	Symbol	widebuf		1102552						
ANR	1103776	Symbol	* buf		1102552						
ANR	1103777	Symbol	R_ANAL_ADDR_TYPE_PROGRAM		1102552						
ANR	1103778	Symbol	bits		1102552						
ANR	1103779	Symbol	iter		1102552						
ANR	1103780	Symbol	R_ANAL_ADDR_TYPE_ASCII		1102552						
ANR	1103781	Symbol	* * map		1102552						
ANR	1103782	Symbol	core -> cons -> context -> pal		1102552						
ANR	1103783	Symbol	* * * core		1102552						
ANR	1103784	Symbol	* n32		1102552						
ANR	1103785	Symbol	r_config_get_i		1102552						
ANR	1103786	Symbol	& len		1102552						
ANR	1103787	Symbol	* core -> dbg		1102552						
ANR	1103788	Symbol	core -> cons -> context		1102552						
ANR	1103789	Symbol	map -> addr		1102552						
ANR	1103790	Symbol	* core -> cons		1102552						
ANR	1103791	Symbol	* core		1102552						
ANR	1103792	Symbol	core -> assembler -> bits		1102552						
ANR	1103793	Symbol	Color_RESET		1102552						
ANR	1103794	Symbol	core -> assembler		1102552						
ANR	1103795	Symbol	n32		1102552						
ANR	1103796	Symbol	core -> anal		1102552						
ANR	1103797	Symbol	fcn		1102552						
ANR	1103798	Symbol	map -> name		1102552						
ANR	1103799	Symbol	core -> cons		1102552						
ANR	1103800	Symbol	core -> io		1102552						
ANR	1103801	Symbol	r_core_anal_optype_colorfor		1102552						
ANR	1103802	Symbol	R_ANAL_ADDR_TYPE_STACK		1102552						
ANR	1103803	Symbol	map		1102552						
ANR	1103804	Symbol	r_bin_cur_object		1102552						
ANR	1103805	Symbol	c		1102552						
ANR	1103806	Symbol	* sect -> name		1102552						
ANR	1103807	Symbol	h		1102552						
ANR	1103808	Symbol	core -> flags		1102552						
ANR	1103809	Symbol	* fi		1102552						
ANR	1103810	Symbol	sect -> name		1102552						
ANR	1103811	Symbol	r_bin_get_section_at		1102552						
ANR	1103812	Symbol	n		1102552						
ANR	1103813	Symbol	r_utf8_encode_str		1102552						
ANR	1103814	Symbol	* * sect		1102552						
ANR	1103815	Symbol	r		1102552						
ANR	1103816	Symbol	buf		1102552						
ANR	1103817	Symbol	depth		1102552						
ANR	1103818	Symbol	s		1102552						
ANR	1103819	Symbol	R_ANAL_ADDR_TYPE_EXEC		1102552						
ANR	1103820	Symbol	v		1102552						
ANR	1103821	Symbol	sect		1102552						
ANR	1103822	Symbol	core -> dbg -> reg		1102552						
ANR	1103823	Symbol	R_ANAL_ADDR_TYPE_READ		1102552						
ANR	1103824	Symbol	UT32_MAX		1102552						
ANR	1103825	Symbol	fcn -> name		1102552						
ANR	1103826	Symbol	fi -> name		1102552						
ANR	1103827	Symbol	rrstr		1102552						
ANR	1103828	Symbol	R_ANAL_ADDR_TYPE_SEQUENCE		1102552						
ANR	1103829	Symbol	r_debug_map_get		1102552						
ANR	1103830	Symbol	UT16_MAX		1102552						
ANR	1103831	Symbol	r_reg_get		1102552						
ANR	1103832	Symbol	NULL		1102552						
ANR	1103833	Symbol	r_strbuf_new		1102552						
ANR	1103834	Symbol	R_ANAL_ADDR_TYPE_HEAP		1102552						
ANR	1103835	Symbol	* * core -> cons		1102552						
ANR	1103836	Symbol	* rrstr		1102552						
ANR	1103837	Symbol	n64		1102552						
ANR	1103838	Symbol	core		1102552						
ANR	1103839	Symbol	lastslash		1102552						
ANR	1103840	Symbol	r_str_lchr		1102552						
ANR	1103841	Symbol	cend		1102552						
ANR	1103842	Symbol	true		1102552						
ANR	1103843	Symbol	map -> addr_end		1102552						
ANR	1103844	Symbol	is_string		1102552						
ANR	1103845	Symbol	fi		1102552						
ANR	1103846	Symbol	R_ANAL_ADDR_TYPE_LIBRARY		1102552						
ANR	1103847	Symbol	r_asm_op_get_asm		1102552						
ANR	1103848	Symbol	r_core_anal_address		1102552						
ANR	1103849	Symbol	* n64		1102552						
ANR	1103850	Symbol	* core -> cons -> context		1102552						
ANR	1103851	Symbol	* map -> name		1102552						
ANR	1103852	Symbol	UT64_MAX		1102552						
ANR	1103853	Symbol	core -> cons -> context -> pal . ai_ascii		1102552						
ANR	1103854	Symbol	value		1102552						
ANR	1103855	Symbol	* sect		1102552						
ANR	1103856	Symbol	* * core		1102552						
ANR	1103857	Symbol	core -> config		1102552						
ANR	1103858	Symbol	op		1102552						
ANR	1103859	Symbol	r_io_read_at		1102552						
ANR	1103860	Symbol	R_ANAL_ADDR_TYPE_WRITE		1102552						
ANR	1103861	Symbol	* c		1102552						
ANR	1103862	Symbol	r_anal_get_fcn_in		1102552						
ANR	1103863	Symbol	r_strbuf_drain		1102552						
ANR	1103864	Symbol	strdup		1102552						
ANR	1103865	Symbol	core -> dbg		1102552						
ANR	1103866	Function	r_core_anal_get_comments	2232:0:64121:64552							
ANR	1103867	FunctionDef	"r_core_anal_get_comments (RCore * core , ut64 addr)"		1103866	0					
ANR	1103868	CompoundStatement		2232:61:64182:64552	1103866	0					
ANR	1103869	IfStatement	if ( core )		1103866	0					
ANR	1103870	Condition	core	2233:5:64189:64192	1103866	0	True				
ANR	1103871	Identifier	core		1103866	0					
ANR	1103872	CompoundStatement		4:2:90:159	1103866	1					
ANR	1103873	IdentifierDeclStatement	"char * type = r_meta_get_string ( core -> anal , R_META_TYPE_VARTYPE , addr ) ;"	2234:2:64199:64269	1103866	0	True				
ANR	1103874	IdentifierDecl	"* type = r_meta_get_string ( core -> anal , R_META_TYPE_VARTYPE , addr )"		1103866	0					
ANR	1103875	IdentifierDeclType	char *		1103866	0					
ANR	1103876	Identifier	type		1103866	1					
ANR	1103877	AssignmentExpression	"* type = r_meta_get_string ( core -> anal , R_META_TYPE_VARTYPE , addr )"		1103866	2		=			
ANR	1103878	Identifier	type		1103866	0					
ANR	1103879	CallExpression	"r_meta_get_string ( core -> anal , R_META_TYPE_VARTYPE , addr )"		1103866	1					
ANR	1103880	Callee	r_meta_get_string		1103866	0					
ANR	1103881	Identifier	r_meta_get_string		1103866	0					
ANR	1103882	ArgumentList	core -> anal		1103866	1					
ANR	1103883	Argument	core -> anal		1103866	0					
ANR	1103884	PtrMemberAccess	core -> anal		1103866	0					
ANR	1103885	Identifier	core		1103866	0					
ANR	1103886	Identifier	anal		1103866	1					
ANR	1103887	Argument	R_META_TYPE_VARTYPE		1103866	1					
ANR	1103888	Identifier	R_META_TYPE_VARTYPE		1103866	0					
ANR	1103889	Argument	addr		1103866	2					
ANR	1103890	Identifier	addr		1103866	0					
ANR	1103891	IdentifierDeclStatement	"char * cmt = r_meta_get_string ( core -> anal , R_META_TYPE_COMMENT , addr ) ;"	2235:2:64273:64342	1103866	1	True				
ANR	1103892	IdentifierDecl	"* cmt = r_meta_get_string ( core -> anal , R_META_TYPE_COMMENT , addr )"		1103866	0					
ANR	1103893	IdentifierDeclType	char *		1103866	0					
ANR	1103894	Identifier	cmt		1103866	1					
ANR	1103895	AssignmentExpression	"* cmt = r_meta_get_string ( core -> anal , R_META_TYPE_COMMENT , addr )"		1103866	2		=			
ANR	1103896	Identifier	cmt		1103866	0					
ANR	1103897	CallExpression	"r_meta_get_string ( core -> anal , R_META_TYPE_COMMENT , addr )"		1103866	1					
ANR	1103898	Callee	r_meta_get_string		1103866	0					
ANR	1103899	Identifier	r_meta_get_string		1103866	0					
ANR	1103900	ArgumentList	core -> anal		1103866	1					
ANR	1103901	Argument	core -> anal		1103866	0					
ANR	1103902	PtrMemberAccess	core -> anal		1103866	0					
ANR	1103903	Identifier	core		1103866	0					
ANR	1103904	Identifier	anal		1103866	1					
ANR	1103905	Argument	R_META_TYPE_COMMENT		1103866	1					
ANR	1103906	Identifier	R_META_TYPE_COMMENT		1103866	0					
ANR	1103907	Argument	addr		1103866	2					
ANR	1103908	Identifier	addr		1103866	0					
ANR	1103909	IfStatement	if ( type && cmt )		1103866	2					
ANR	1103910	Condition	type && cmt	2236:6:64350:64360	1103866	0	True				
ANR	1103911	AndExpression	type && cmt		1103866	0		&&			
ANR	1103912	Identifier	type		1103866	0					
ANR	1103913	Identifier	cmt		1103866	1					
ANR	1103914	CompoundStatement		6:3:185:228	1103866	1					
ANR	1103915	IdentifierDeclStatement	"char * ret = r_str_newf ( ""%s %s"" , type , cmt ) ;"	2237:3:64368:64411	1103866	0	True				
ANR	1103916	IdentifierDecl	"* ret = r_str_newf ( ""%s %s"" , type , cmt )"		1103866	0					
ANR	1103917	IdentifierDeclType	char *		1103866	0					
ANR	1103918	Identifier	ret		1103866	1					
ANR	1103919	AssignmentExpression	"* ret = r_str_newf ( ""%s %s"" , type , cmt )"		1103866	2		=			
ANR	1103920	Identifier	ret		1103866	0					
ANR	1103921	CallExpression	"r_str_newf ( ""%s %s"" , type , cmt )"		1103866	1					
ANR	1103922	Callee	r_str_newf		1103866	0					
ANR	1103923	Identifier	r_str_newf		1103866	0					
ANR	1103924	ArgumentList	"""%s %s"""		1103866	1					
ANR	1103925	Argument	"""%s %s"""		1103866	0					
ANR	1103926	PrimaryExpression	"""%s %s"""		1103866	0					
ANR	1103927	Argument	type		1103866	1					
ANR	1103928	Identifier	type		1103866	0					
ANR	1103929	Argument	cmt		1103866	2					
ANR	1103930	Identifier	cmt		1103866	0					
ANR	1103931	ExpressionStatement	free ( type )	2238:3:64416:64427	1103866	1	True				
ANR	1103932	CallExpression	free ( type )		1103866	0					
ANR	1103933	Callee	free		1103866	0					
ANR	1103934	Identifier	free		1103866	0					
ANR	1103935	ArgumentList	type		1103866	1					
ANR	1103936	Argument	type		1103866	0					
ANR	1103937	Identifier	type		1103866	0					
ANR	1103938	ExpressionStatement	free ( cmt )	2239:3:64432:64442	1103866	2	True				
ANR	1103939	CallExpression	free ( cmt )		1103866	0					
ANR	1103940	Callee	free		1103866	0					
ANR	1103941	Identifier	free		1103866	0					
ANR	1103942	ArgumentList	cmt		1103866	1					
ANR	1103943	Argument	cmt		1103866	0					
ANR	1103944	Identifier	cmt		1103866	0					
ANR	1103945	ReturnStatement	return ret ;	2240:3:64447:64457	1103866	3	True				
ANR	1103946	Identifier	ret		1103866	0					
ANR	1103947	ElseStatement	else		1103866	0					
ANR	1103948	IfStatement	if ( type )		1103866	0					
ANR	1103949	Condition	type	2241:13:64472:64475	1103866	0	True				
ANR	1103950	Identifier	type		1103866	0					
ANR	1103951	CompoundStatement		10:19:295:295	1103866	1					
ANR	1103952	ReturnStatement	return type ;	2242:3:64483:64494	1103866	0	True				
ANR	1103953	Identifier	type		1103866	0					
ANR	1103954	ElseStatement	else		1103866	0					
ANR	1103955	IfStatement	if ( cmt )		1103866	0					
ANR	1103956	Condition	cmt	2243:13:64509:64511	1103866	0	True				
ANR	1103957	Identifier	cmt		1103866	0					
ANR	1103958	CompoundStatement		12:18:331:331	1103866	1					
ANR	1103959	ReturnStatement	return cmt ;	2244:3:64519:64529	1103866	0	True				
ANR	1103960	Identifier	cmt		1103866	0					
ANR	1103961	ReturnStatement	return NULL ;	2247:1:64539:64550	1103866	1	True				
ANR	1103962	Identifier	NULL		1103866	0					
ANR	1103963	ReturnType	R_API char *		1103866	1					
ANR	1103964	Identifier	r_core_anal_get_comments		1103866	2					
ANR	1103965	ParameterList	"RCore * core , ut64 addr"		1103866	3					
ANR	1103966	Parameter	RCore * core	2232:37:64158:64168	1103866	0	True				
ANR	1103967	ParameterType	RCore *		1103866	0					
ANR	1103968	Identifier	core		1103866	1					
ANR	1103969	Parameter	ut64 addr	2232:50:64171:64179	1103866	1	True				
ANR	1103970	ParameterType	ut64		1103866	0					
ANR	1103971	Identifier	addr		1103866	1					
ANR	1103972	CFGEntryNode	ENTRY		1103866		True				
ANR	1103973	CFGExitNode	EXIT		1103866		True				
ANR	1103974	Symbol	ret		1103866						
ANR	1103975	Symbol	core		1103866						
ANR	1103976	Symbol	NULL		1103866						
ANR	1103977	Symbol	R_META_TYPE_VARTYPE		1103866						
ANR	1103978	Symbol	R_META_TYPE_COMMENT		1103866						
ANR	1103979	Symbol	* core		1103866						
ANR	1103980	Symbol	cmt		1103866						
ANR	1103981	Symbol	r_str_newf		1103866						
ANR	1103982	Symbol	addr		1103866						
ANR	1103983	Symbol	type		1103866						
ANR	1103984	Symbol	core -> anal		1103866						
ANR	1103985	Symbol	r_meta_get_string		1103866						
ANR	1103986	Function	r_core_anal_optype_colorfor	2250:6:64561:65346							
ANR	1103987	FunctionDef	"r_core_anal_optype_colorfor (RCore * core , ut64 addr , bool verbose)"		1103986	0					
ANR	1103988	CompoundStatement		2250:84:64639:65346	1103986	0					
ANR	1103989	IdentifierDeclStatement	ut64 type ;	2251:1:64642:64651	1103986	0	True				
ANR	1103990	IdentifierDecl	type		1103986	0					
ANR	1103991	IdentifierDeclType	ut64		1103986	0					
ANR	1103992	Identifier	type		1103986	1					
ANR	1103993	IfStatement	if ( ! ( core -> print -> flags & R_PRINT_FLAGS_COLOR ) )		1103986	1					
ANR	1103994	Condition	! ( core -> print -> flags & R_PRINT_FLAGS_COLOR )	2252:5:64658:64700	1103986	0	True				
ANR	1103995	UnaryOperationExpression	! ( core -> print -> flags & R_PRINT_FLAGS_COLOR )		1103986	0					
ANR	1103996	UnaryOperator	!		1103986	0					
ANR	1103997	BitAndExpression	core -> print -> flags & R_PRINT_FLAGS_COLOR		1103986	1		&			
ANR	1103998	PtrMemberAccess	core -> print -> flags		1103986	0					
ANR	1103999	PtrMemberAccess	core -> print		1103986	0					
ANR	1104000	Identifier	core		1103986	0					
ANR	1104001	Identifier	print		1103986	1					
ANR	1104002	Identifier	flags		1103986	1					
ANR	1104003	Identifier	R_PRINT_FLAGS_COLOR		1103986	1					
ANR	1104004	CompoundStatement		3:50:63:63	1103986	1					
ANR	1104005	ReturnStatement	return NULL ;	2253:2:64707:64718	1103986	0	True				
ANR	1104006	Identifier	NULL		1103986	0					
ANR	1104007	IfStatement	"if ( ! r_config_get_i ( core -> config , ""scr.color"" ) )"		1103986	2					
ANR	1104008	Condition	"! r_config_get_i ( core -> config , ""scr.color"" )"	2255:5:64728:64770	1103986	0	True				
ANR	1104009	UnaryOperationExpression	"! r_config_get_i ( core -> config , ""scr.color"" )"		1103986	0					
ANR	1104010	UnaryOperator	!		1103986	0					
ANR	1104011	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		1103986	1					
ANR	1104012	Callee	r_config_get_i		1103986	0					
ANR	1104013	Identifier	r_config_get_i		1103986	0					
ANR	1104014	ArgumentList	core -> config		1103986	1					
ANR	1104015	Argument	core -> config		1103986	0					
ANR	1104016	PtrMemberAccess	core -> config		1103986	0					
ANR	1104017	Identifier	core		1103986	0					
ANR	1104018	Identifier	config		1103986	1					
ANR	1104019	Argument	"""scr.color"""		1103986	1					
ANR	1104020	PrimaryExpression	"""scr.color"""		1103986	0					
ANR	1104021	CompoundStatement		6:50:133:133	1103986	1					
ANR	1104022	ReturnStatement	return NULL ;	2256:2:64777:64788	1103986	0	True				
ANR	1104023	Identifier	NULL		1103986	0					
ANR	1104024	ExpressionStatement	"type = r_core_anal_address ( core , addr )"	2258:1:64794:64833	1103986	3	True				
ANR	1104025	AssignmentExpression	"type = r_core_anal_address ( core , addr )"		1103986	0		=			
ANR	1104026	Identifier	type		1103986	0					
ANR	1104027	CallExpression	"r_core_anal_address ( core , addr )"		1103986	1					
ANR	1104028	Callee	r_core_anal_address		1103986	0					
ANR	1104029	Identifier	r_core_anal_address		1103986	0					
ANR	1104030	ArgumentList	core		1103986	1					
ANR	1104031	Argument	core		1103986	0					
ANR	1104032	Identifier	core		1103986	0					
ANR	1104033	Argument	addr		1103986	1					
ANR	1104034	Identifier	addr		1103986	0					
ANR	1104035	IfStatement	if ( type & R_ANAL_ADDR_TYPE_EXEC )		1103986	4					
ANR	1104036	Condition	type & R_ANAL_ADDR_TYPE_EXEC	2259:5:64840:64867	1103986	0	True				
ANR	1104037	BitAndExpression	type & R_ANAL_ADDR_TYPE_EXEC		1103986	0		&			
ANR	1104038	Identifier	type		1103986	0					
ANR	1104039	Identifier	R_ANAL_ADDR_TYPE_EXEC		1103986	1					
ANR	1104040	CompoundStatement		10:35:230:230	1103986	1					
ANR	1104041	ReturnStatement	return core -> cons -> context -> pal . ai_exec ;	2260:2:64874:64913	1103986	0	True				
ANR	1104042	MemberAccess	core -> cons -> context -> pal . ai_exec		1103986	0					
ANR	1104043	PtrMemberAccess	core -> cons -> context -> pal		1103986	0					
ANR	1104044	PtrMemberAccess	core -> cons -> context		1103986	0					
ANR	1104045	PtrMemberAccess	core -> cons		1103986	0					
ANR	1104046	Identifier	core		1103986	0					
ANR	1104047	Identifier	cons		1103986	1					
ANR	1104048	Identifier	context		1103986	1					
ANR	1104049	Identifier	pal		1103986	1					
ANR	1104050	Identifier	ai_exec		1103986	1					
ANR	1104051	IfStatement	if ( type & R_ANAL_ADDR_TYPE_WRITE )		1103986	5					
ANR	1104052	Condition	type & R_ANAL_ADDR_TYPE_WRITE	2262:5:64936:64964	1103986	0	True				
ANR	1104053	BitAndExpression	type & R_ANAL_ADDR_TYPE_WRITE		1103986	0		&			
ANR	1104054	Identifier	type		1103986	0					
ANR	1104055	Identifier	R_ANAL_ADDR_TYPE_WRITE		1103986	1					
ANR	1104056	CompoundStatement		13:36:327:327	1103986	1					
ANR	1104057	ReturnStatement	return core -> cons -> context -> pal . ai_write ;	2263:2:64971:65011	1103986	0	True				
ANR	1104058	MemberAccess	core -> cons -> context -> pal . ai_write		1103986	0					
ANR	1104059	PtrMemberAccess	core -> cons -> context -> pal		1103986	0					
ANR	1104060	PtrMemberAccess	core -> cons -> context		1103986	0					
ANR	1104061	PtrMemberAccess	core -> cons		1103986	0					
ANR	1104062	Identifier	core		1103986	0					
ANR	1104063	Identifier	cons		1103986	1					
ANR	1104064	Identifier	context		1103986	1					
ANR	1104065	Identifier	pal		1103986	1					
ANR	1104066	Identifier	ai_write		1103986	1					
ANR	1104067	IfStatement	if ( type & R_ANAL_ADDR_TYPE_READ )		1103986	6					
ANR	1104068	Condition	type & R_ANAL_ADDR_TYPE_READ	2265:5:65035:65062	1103986	0	True				
ANR	1104069	BitAndExpression	type & R_ANAL_ADDR_TYPE_READ		1103986	0		&			
ANR	1104070	Identifier	type		1103986	0					
ANR	1104071	Identifier	R_ANAL_ADDR_TYPE_READ		1103986	1					
ANR	1104072	CompoundStatement		16:35:425:425	1103986	1					
ANR	1104073	ReturnStatement	return core -> cons -> context -> pal . ai_read ;	2266:2:65069:65108	1103986	0	True				
ANR	1104074	MemberAccess	core -> cons -> context -> pal . ai_read		1103986	0					
ANR	1104075	PtrMemberAccess	core -> cons -> context -> pal		1103986	0					
ANR	1104076	PtrMemberAccess	core -> cons -> context		1103986	0					
ANR	1104077	PtrMemberAccess	core -> cons		1103986	0					
ANR	1104078	Identifier	core		1103986	0					
ANR	1104079	Identifier	cons		1103986	1					
ANR	1104080	Identifier	context		1103986	1					
ANR	1104081	Identifier	pal		1103986	1					
ANR	1104082	Identifier	ai_read		1103986	1					
ANR	1104083	IfStatement	if ( type & R_ANAL_ADDR_TYPE_SEQUENCE )		1103986	7					
ANR	1104084	Condition	type & R_ANAL_ADDR_TYPE_SEQUENCE	2268:5:65133:65164	1103986	0	True				
ANR	1104085	BitAndExpression	type & R_ANAL_ADDR_TYPE_SEQUENCE		1103986	0		&			
ANR	1104086	Identifier	type		1103986	0					
ANR	1104087	Identifier	R_ANAL_ADDR_TYPE_SEQUENCE		1103986	1					
ANR	1104088	CompoundStatement		19:39:527:527	1103986	1					
ANR	1104089	ReturnStatement	return core -> cons -> context -> pal . ai_seq ;	2269:2:65171:65209	1103986	0	True				
ANR	1104090	MemberAccess	core -> cons -> context -> pal . ai_seq		1103986	0					
ANR	1104091	PtrMemberAccess	core -> cons -> context -> pal		1103986	0					
ANR	1104092	PtrMemberAccess	core -> cons -> context		1103986	0					
ANR	1104093	PtrMemberAccess	core -> cons		1103986	0					
ANR	1104094	Identifier	core		1103986	0					
ANR	1104095	Identifier	cons		1103986	1					
ANR	1104096	Identifier	context		1103986	1					
ANR	1104097	Identifier	pal		1103986	1					
ANR	1104098	Identifier	ai_seq		1103986	1					
ANR	1104099	IfStatement	if ( type & R_ANAL_ADDR_TYPE_ASCII )		1103986	8					
ANR	1104100	Condition	type & R_ANAL_ADDR_TYPE_ASCII	2271:5:65236:65264	1103986	0	True				
ANR	1104101	BitAndExpression	type & R_ANAL_ADDR_TYPE_ASCII		1103986	0		&			
ANR	1104102	Identifier	type		1103986	0					
ANR	1104103	Identifier	R_ANAL_ADDR_TYPE_ASCII		1103986	1					
ANR	1104104	CompoundStatement		22:36:627:627	1103986	1					
ANR	1104105	ReturnStatement	return core -> cons -> context -> pal . ai_ascii ;	2272:2:65271:65311	1103986	0	True				
ANR	1104106	MemberAccess	core -> cons -> context -> pal . ai_ascii		1103986	0					
ANR	1104107	PtrMemberAccess	core -> cons -> context -> pal		1103986	0					
ANR	1104108	PtrMemberAccess	core -> cons -> context		1103986	0					
ANR	1104109	PtrMemberAccess	core -> cons		1103986	0					
ANR	1104110	Identifier	core		1103986	0					
ANR	1104111	Identifier	cons		1103986	1					
ANR	1104112	Identifier	context		1103986	1					
ANR	1104113	Identifier	pal		1103986	1					
ANR	1104114	Identifier	ai_ascii		1103986	1					
ANR	1104115	ReturnStatement	return NULL ;	2274:1:65333:65344	1103986	9	True				
ANR	1104116	Identifier	NULL		1103986	0					
ANR	1104117	ReturnType	const char *		1103986	1					
ANR	1104118	Identifier	r_core_anal_optype_colorfor		1103986	2					
ANR	1104119	ParameterList	"RCore * core , ut64 addr , bool verbose"		1103986	3					
ANR	1104120	Parameter	RCore * core	2250:46:64601:64611	1103986	0	True				
ANR	1104121	ParameterType	RCore *		1103986	0					
ANR	1104122	Identifier	core		1103986	1					
ANR	1104123	Parameter	ut64 addr	2250:59:64614:64622	1103986	1	True				
ANR	1104124	ParameterType	ut64		1103986	0					
ANR	1104125	Identifier	addr		1103986	1					
ANR	1104126	Parameter	bool verbose	2250:70:64625:64636	1103986	2	True				
ANR	1104127	ParameterType	bool		1103986	0					
ANR	1104128	Identifier	verbose		1103986	1					
ANR	1104129	CFGEntryNode	ENTRY		1103986		True				
ANR	1104130	CFGExitNode	EXIT		1103986		True				
ANR	1104131	Symbol	core -> cons -> context -> pal . ai_exec		1103986						
ANR	1104132	Symbol	* core -> cons		1103986						
ANR	1104133	Symbol	* core		1103986						
ANR	1104134	Symbol	type		1103986						
ANR	1104135	Symbol	core -> cons -> context -> pal . ai_read		1103986						
ANR	1104136	Symbol	R_ANAL_ADDR_TYPE_SEQUENCE		1103986						
ANR	1104137	Symbol	core -> cons		1103986						
ANR	1104138	Symbol	r_core_anal_address		1103986						
ANR	1104139	Symbol	* core -> cons -> context		1103986						
ANR	1104140	Symbol	R_PRINT_FLAGS_COLOR		1103986						
ANR	1104141	Symbol	addr		1103986						
ANR	1104142	Symbol	core -> cons -> context -> pal . ai_write		1103986						
ANR	1104143	Symbol	core -> cons -> context -> pal . ai_ascii		1103986						
ANR	1104144	Symbol	* * core		1103986						
ANR	1104145	Symbol	core -> config		1103986						
ANR	1104146	Symbol	NULL		1103986						
ANR	1104147	Symbol	* * core -> cons		1103986						
ANR	1104148	Symbol	R_ANAL_ADDR_TYPE_WRITE		1103986						
ANR	1104149	Symbol	R_ANAL_ADDR_TYPE_ASCII		1103986						
ANR	1104150	Symbol	verbose		1103986						
ANR	1104151	Symbol	core -> cons -> context -> pal . ai_seq		1103986						
ANR	1104152	Symbol	core		1103986						
ANR	1104153	Symbol	core -> cons -> context -> pal		1103986						
ANR	1104154	Symbol	* * * core		1103986						
ANR	1104155	Symbol	* core -> print		1103986						
ANR	1104156	Symbol	R_ANAL_ADDR_TYPE_EXEC		1103986						
ANR	1104157	Symbol	r_config_get_i		1103986						
ANR	1104158	Symbol	R_ANAL_ADDR_TYPE_READ		1103986						
ANR	1104159	Symbol	core -> print		1103986						
ANR	1104160	Symbol	core -> print -> flags		1103986						
ANR	1104161	Symbol	core -> cons -> context		1103986						
ANR	1104162	Function	r_core_setenv	2277:0:65349:65576							
ANR	1104163	FunctionDef	r_core_setenv (RCore * core)		1104162	0					
ANR	1104164	CompoundStatement		2277:40:65389:65576	1104162	0					
ANR	1104165	IdentifierDeclStatement	"char * e = r_sys_getenv ( ""PATH"" ) ;"	2278:1:65392:65423	1104162	0	True				
ANR	1104166	IdentifierDecl	"* e = r_sys_getenv ( ""PATH"" )"		1104162	0					
ANR	1104167	IdentifierDeclType	char *		1104162	0					
ANR	1104168	Identifier	e		1104162	1					
ANR	1104169	AssignmentExpression	"* e = r_sys_getenv ( ""PATH"" )"		1104162	2		=			
ANR	1104170	Identifier	e		1104162	0					
ANR	1104171	CallExpression	"r_sys_getenv ( ""PATH"" )"		1104162	1					
ANR	1104172	Callee	r_sys_getenv		1104162	0					
ANR	1104173	Identifier	r_sys_getenv		1104162	0					
ANR	1104174	ArgumentList	"""PATH"""		1104162	1					
ANR	1104175	Argument	"""PATH"""		1104162	0					
ANR	1104176	PrimaryExpression	"""PATH"""		1104162	0					
ANR	1104177	IdentifierDeclStatement	char * h = r_str_home ( R2_HOME_BIN ) ;	2279:1:65426:65460	1104162	1	True				
ANR	1104178	IdentifierDecl	* h = r_str_home ( R2_HOME_BIN )		1104162	0					
ANR	1104179	IdentifierDeclType	char *		1104162	0					
ANR	1104180	Identifier	h		1104162	1					
ANR	1104181	AssignmentExpression	* h = r_str_home ( R2_HOME_BIN )		1104162	2		=			
ANR	1104182	Identifier	h		1104162	0					
ANR	1104183	CallExpression	r_str_home ( R2_HOME_BIN )		1104162	1					
ANR	1104184	Callee	r_str_home		1104162	0					
ANR	1104185	Identifier	r_str_home		1104162	0					
ANR	1104186	ArgumentList	R2_HOME_BIN		1104162	1					
ANR	1104187	Argument	R2_HOME_BIN		1104162	0					
ANR	1104188	Identifier	R2_HOME_BIN		1104162	0					
ANR	1104189	IdentifierDeclStatement	"char * n = r_str_newf ( ""%s%s%s"" , h , R_SYS_ENVSEP , e ) ;"	2280:1:65463:65514	1104162	2	True				
ANR	1104190	IdentifierDecl	"* n = r_str_newf ( ""%s%s%s"" , h , R_SYS_ENVSEP , e )"		1104162	0					
ANR	1104191	IdentifierDeclType	char *		1104162	0					
ANR	1104192	Identifier	n		1104162	1					
ANR	1104193	AssignmentExpression	"* n = r_str_newf ( ""%s%s%s"" , h , R_SYS_ENVSEP , e )"		1104162	2		=			
ANR	1104194	Identifier	n		1104162	0					
ANR	1104195	CallExpression	"r_str_newf ( ""%s%s%s"" , h , R_SYS_ENVSEP , e )"		1104162	1					
ANR	1104196	Callee	r_str_newf		1104162	0					
ANR	1104197	Identifier	r_str_newf		1104162	0					
ANR	1104198	ArgumentList	"""%s%s%s"""		1104162	1					
ANR	1104199	Argument	"""%s%s%s"""		1104162	0					
ANR	1104200	PrimaryExpression	"""%s%s%s"""		1104162	0					
ANR	1104201	Argument	h		1104162	1					
ANR	1104202	Identifier	h		1104162	0					
ANR	1104203	Argument	R_SYS_ENVSEP		1104162	2					
ANR	1104204	Identifier	R_SYS_ENVSEP		1104162	0					
ANR	1104205	Argument	e		1104162	3					
ANR	1104206	Identifier	e		1104162	0					
ANR	1104207	ExpressionStatement	"r_sys_setenv ( ""PATH"" , n )"	2281:1:65517:65541	1104162	3	True				
ANR	1104208	CallExpression	"r_sys_setenv ( ""PATH"" , n )"		1104162	0					
ANR	1104209	Callee	r_sys_setenv		1104162	0					
ANR	1104210	Identifier	r_sys_setenv		1104162	0					
ANR	1104211	ArgumentList	"""PATH"""		1104162	1					
ANR	1104212	Argument	"""PATH"""		1104162	0					
ANR	1104213	PrimaryExpression	"""PATH"""		1104162	0					
ANR	1104214	Argument	n		1104162	1					
ANR	1104215	Identifier	n		1104162	0					
ANR	1104216	ExpressionStatement	free ( n )	2282:1:65544:65552	1104162	4	True				
ANR	1104217	CallExpression	free ( n )		1104162	0					
ANR	1104218	Callee	free		1104162	0					
ANR	1104219	Identifier	free		1104162	0					
ANR	1104220	ArgumentList	n		1104162	1					
ANR	1104221	Argument	n		1104162	0					
ANR	1104222	Identifier	n		1104162	0					
ANR	1104223	ExpressionStatement	free ( h )	2283:1:65555:65563	1104162	5	True				
ANR	1104224	CallExpression	free ( h )		1104162	0					
ANR	1104225	Callee	free		1104162	0					
ANR	1104226	Identifier	free		1104162	0					
ANR	1104227	ArgumentList	h		1104162	1					
ANR	1104228	Argument	h		1104162	0					
ANR	1104229	Identifier	h		1104162	0					
ANR	1104230	ExpressionStatement	free ( e )	2284:1:65566:65574	1104162	6	True				
ANR	1104231	CallExpression	free ( e )		1104162	0					
ANR	1104232	Callee	free		1104162	0					
ANR	1104233	Identifier	free		1104162	0					
ANR	1104234	ArgumentList	e		1104162	1					
ANR	1104235	Argument	e		1104162	0					
ANR	1104236	Identifier	e		1104162	0					
ANR	1104237	ReturnType	static void		1104162	1					
ANR	1104238	Identifier	r_core_setenv		1104162	2					
ANR	1104239	ParameterList	RCore * core		1104162	3					
ANR	1104240	Parameter	RCore * core	2277:27:65376:65386	1104162	0	True				
ANR	1104241	ParameterType	RCore *		1104162	0					
ANR	1104242	Identifier	core		1104162	1					
ANR	1104243	CFGEntryNode	ENTRY		1104162		True				
ANR	1104244	CFGExitNode	EXIT		1104162		True				
ANR	1104245	Symbol	core		1104162						
ANR	1104246	Symbol	R_SYS_ENVSEP		1104162						
ANR	1104247	Symbol	e		1104162						
ANR	1104248	Symbol	r_sys_getenv		1104162						
ANR	1104249	Symbol	h		1104162						
ANR	1104250	Symbol	R2_HOME_BIN		1104162						
ANR	1104251	Symbol	r_str_newf		1104162						
ANR	1104252	Symbol	r_str_home		1104162						
ANR	1104253	Symbol	n		1104162						
ANR	1104254	Function	mywrite	2287:0:65579:65673							
ANR	1104255	FunctionDef	"mywrite (const ut8 * buf , int len)"		1104254	0					
ANR	1104256	CompoundStatement		2287:44:65623:65673	1104254	0					
ANR	1104257	ReturnStatement	"return r_cons_memcat ( ( const char * ) buf , len ) ;"	2288:1:65626:65671	1104254	0	True				
ANR	1104258	CallExpression	"r_cons_memcat ( ( const char * ) buf , len )"		1104254	0					
ANR	1104259	Callee	r_cons_memcat		1104254	0					
ANR	1104260	Identifier	r_cons_memcat		1104254	0					
ANR	1104261	ArgumentList	( const char * ) buf		1104254	1					
ANR	1104262	Argument	( const char * ) buf		1104254	0					
ANR	1104263	CastExpression	( const char * ) buf		1104254	0					
ANR	1104264	CastTarget	const char *		1104254	0					
ANR	1104265	Identifier	buf		1104254	1					
ANR	1104266	Argument	len		1104254	1					
ANR	1104267	Identifier	len		1104254	0					
ANR	1104268	ReturnType	static int		1104254	1					
ANR	1104269	Identifier	mywrite		1104254	2					
ANR	1104270	ParameterList	"const ut8 * buf , int len"		1104254	3					
ANR	1104271	Parameter	const ut8 * buf	2287:19:65598:65611	1104254	0	True				
ANR	1104272	ParameterType	const ut8 *		1104254	0					
ANR	1104273	Identifier	buf		1104254	1					
ANR	1104274	Parameter	int len	2287:35:65614:65620	1104254	1	True				
ANR	1104275	ParameterType	int		1104254	0					
ANR	1104276	Identifier	len		1104254	1					
ANR	1104277	CFGEntryNode	ENTRY		1104254		True				
ANR	1104278	CFGExitNode	EXIT		1104254		True				
ANR	1104279	Symbol	buf		1104254						
ANR	1104280	Symbol	len		1104254						
ANR	1104281	Symbol	r_cons_memcat		1104254						
ANR	1104282	Function	exists_var	2291:0:65676:65937							
ANR	1104283	FunctionDef	"exists_var (RPrint * print , ut64 func_addr , char * str)"		1104282	0					
ANR	1104284	CompoundStatement		2291:65:65741:65937	1104282	0					
ANR	1104285	Statement	char	2292:1:65744:65747	1104282	0	True				
ANR	1104286	Statement	*	2292:6:65749:65749	1104282	1	True				
ANR	1104287	Statement	name_key	2292:7:65750:65757	1104282	2	True				
ANR	1104288	Statement	=	2292:16:65759:65759	1104282	3	True				
ANR	1104289	Statement	sdb_fmt	2292:18:65761:65767	1104282	4	True				
ANR	1104290	Statement	(	2292:26:65769:65769	1104282	5	True				
ANR	1104291	Statement	"""var.0x%"""	2292:27:65770:65778	1104282	6	True				
ANR	1104292	Statement	PFMT64x	2292:36:65779:65785	1104282	7	True				
ANR	1104293	Statement	""".%d.%s"""	2292:44:65787:65794	1104282	8	True				
ANR	1104294	Statement	","	2292:52:65795:65795	1104282	9	True				
ANR	1104295	Statement	func_addr	2292:54:65797:65805	1104282	10	True				
ANR	1104296	Statement	","	2292:63:65806:65806	1104282	11	True				
ANR	1104297	Statement	1	2292:65:65808:65808	1104282	12	True				
ANR	1104298	Statement	","	2292:66:65809:65809	1104282	13	True				
ANR	1104299	Statement	str	2292:68:65811:65813	1104282	14	True				
ANR	1104300	Statement	)	2292:71:65814:65814	1104282	15	True				
ANR	1104301	ExpressionStatement		2292:72:65815:65815	1104282	16	True				
ANR	1104302	IfStatement	"if ( sdb_const_get_len ( ( ( RCore * ) ( print -> user ) ) -> anal -> sdb_fcns , name_key , NULL , 0 ) )"		1104282	17					
ANR	1104303	Condition	"sdb_const_get_len ( ( ( RCore * ) ( print -> user ) ) -> anal -> sdb_fcns , name_key , NULL , 0 )"	2293:5:65822:65899	1104282	0	True				
ANR	1104304	CallExpression	"sdb_const_get_len ( ( ( RCore * ) ( print -> user ) ) -> anal -> sdb_fcns , name_key , NULL , 0 )"		1104282	0					
ANR	1104305	Callee	sdb_const_get_len		1104282	0					
ANR	1104306	Identifier	sdb_const_get_len		1104282	0					
ANR	1104307	ArgumentList	( ( RCore * ) ( print -> user ) ) -> anal -> sdb_fcns		1104282	1					
ANR	1104308	Argument	( ( RCore * ) ( print -> user ) ) -> anal -> sdb_fcns		1104282	0					
ANR	1104309	PtrMemberAccess	( ( RCore * ) ( print -> user ) ) -> anal -> sdb_fcns		1104282	0					
ANR	1104310	PtrMemberAccess	( ( RCore * ) ( print -> user ) ) -> anal		1104282	0					
ANR	1104311	CastExpression	( RCore * ) ( print -> user )		1104282	0					
ANR	1104312	CastTarget	RCore *		1104282	0					
ANR	1104313	PtrMemberAccess	print -> user		1104282	1					
ANR	1104314	Identifier	print		1104282	0					
ANR	1104315	Identifier	user		1104282	1					
ANR	1104316	Identifier	anal		1104282	1					
ANR	1104317	Identifier	sdb_fcns		1104282	1					
ANR	1104318	Argument	name_key		1104282	1					
ANR	1104319	Identifier	name_key		1104282	0					
ANR	1104320	Argument	NULL		1104282	2					
ANR	1104321	Identifier	NULL		1104282	0					
ANR	1104322	Argument	0		1104282	3					
ANR	1104323	PrimaryExpression	0		1104282	0					
ANR	1104324	CompoundStatement		3:85:160:160	1104282	1					
ANR	1104325	ReturnStatement	return true ;	2294:2:65906:65917	1104282	0	True				
ANR	1104326	Identifier	true		1104282	0					
ANR	1104327	ReturnStatement	return false ;	2296:1:65923:65935	1104282	18	True				
ANR	1104328	Identifier	false		1104282	0					
ANR	1104329	ReturnType	static bool		1104282	1					
ANR	1104330	Identifier	exists_var		1104282	2					
ANR	1104331	ParameterList	"RPrint * print , ut64 func_addr , char * str"		1104282	3					
ANR	1104332	Parameter	RPrint * print	2291:23:65699:65711	1104282	0	True				
ANR	1104333	ParameterType	RPrint *		1104282	0					
ANR	1104334	Identifier	print		1104282	1					
ANR	1104335	Parameter	ut64 func_addr	2291:38:65714:65727	1104282	1	True				
ANR	1104336	ParameterType	ut64		1104282	0					
ANR	1104337	Identifier	func_addr		1104282	1					
ANR	1104338	Parameter	char * str	2291:54:65730:65738	1104282	2	True				
ANR	1104339	ParameterType	char *		1104282	0					
ANR	1104340	Identifier	str		1104282	1					
ANR	1104341	CFGEntryNode	ENTRY		1104282		True				
ANR	1104342	CFGExitNode	EXIT		1104282		True				
ANR	1104343	Symbol	* * print		1104282						
ANR	1104344	Symbol	NULL		1104282						
ANR	1104345	Symbol	sdb_const_get_len		1104282						
ANR	1104346	Symbol	false		1104282						
ANR	1104347	Symbol	( ( RCore * ) ( print -> user ) ) -> anal		1104282						
ANR	1104348	Symbol	str		1104282						
ANR	1104349	Symbol	name_key		1104282						
ANR	1104350	Symbol	print		1104282						
ANR	1104351	Symbol	* ( ( RCore * ) ( print -> user ) ) -> anal		1104282						
ANR	1104352	Symbol	print -> user		1104282						
ANR	1104353	Symbol	* print		1104282						
ANR	1104354	Symbol	* * * print		1104282						
ANR	1104355	Symbol	* * print -> user		1104282						
ANR	1104356	Symbol	* print -> user		1104282						
ANR	1104357	Symbol	true		1104282						
ANR	1104358	Symbol	( ( RCore * ) ( print -> user ) ) -> anal -> sdb_fcns		1104282						
ANR	1104359	Symbol	func_addr		1104282						
ANR	1104360	Function	r_core_anal_log	2299:0:65940:66105							
ANR	1104361	FunctionDef	"r_core_anal_log (struct r_anal_t * anal , const char * msg)"		1104360	0					
ANR	1104362	CompoundStatement		2299:68:66008:66105	1104360	0					
ANR	1104363	IdentifierDeclStatement	RCore * core = anal -> user ;	2300:1:66011:66035	1104360	0	True				
ANR	1104364	IdentifierDecl	* core = anal -> user		1104360	0					
ANR	1104365	IdentifierDeclType	RCore *		1104360	0					
ANR	1104366	Identifier	core		1104360	1					
ANR	1104367	AssignmentExpression	* core = anal -> user		1104360	2		=			
ANR	1104368	Identifier	core		1104360	0					
ANR	1104369	PtrMemberAccess	anal -> user		1104360	1					
ANR	1104370	Identifier	anal		1104360	0					
ANR	1104371	Identifier	user		1104360	1					
ANR	1104372	IfStatement	if ( core -> cfglog )		1104360	1					
ANR	1104373	Condition	core -> cfglog	2301:5:66042:66053	1104360	0	True				
ANR	1104374	PtrMemberAccess	core -> cfglog		1104360	0					
ANR	1104375	Identifier	core		1104360	0					
ANR	1104376	Identifier	cfglog		1104360	1					
ANR	1104377	CompoundStatement		3:19:47:47	1104360	1					
ANR	1104378	ExpressionStatement	"r_core_log_add ( core , msg )"	2302:2:66060:66086	1104360	0	True				
ANR	1104379	CallExpression	"r_core_log_add ( core , msg )"		1104360	0					
ANR	1104380	Callee	r_core_log_add		1104360	0					
ANR	1104381	Identifier	r_core_log_add		1104360	0					
ANR	1104382	ArgumentList	core		1104360	1					
ANR	1104383	Argument	core		1104360	0					
ANR	1104384	Identifier	core		1104360	0					
ANR	1104385	Argument	msg		1104360	1					
ANR	1104386	Identifier	msg		1104360	0					
ANR	1104387	ReturnStatement	return true ;	2304:1:66092:66103	1104360	2	True				
ANR	1104388	Identifier	true		1104360	0					
ANR	1104389	ReturnType	static bool		1104360	1					
ANR	1104390	Identifier	r_core_anal_log		1104360	2					
ANR	1104391	ParameterList	"struct r_anal_t * anal , const char * msg"		1104360	3					
ANR	1104392	Parameter	struct r_anal_t * anal	2299:28:65968:65988	1104360	0	True				
ANR	1104393	ParameterType	struct r_anal_t *		1104360	0					
ANR	1104394	Identifier	anal		1104360	1					
ANR	1104395	Parameter	const char * msg	2299:51:65991:66005	1104360	1	True				
ANR	1104396	ParameterType	const char *		1104360	0					
ANR	1104397	Identifier	msg		1104360	1					
ANR	1104398	CFGEntryNode	ENTRY		1104360		True				
ANR	1104399	CFGExitNode	EXIT		1104360		True				
ANR	1104400	Symbol	msg		1104360						
ANR	1104401	Symbol	core -> cfglog		1104360						
ANR	1104402	Symbol	core		1104360						
ANR	1104403	Symbol	* anal		1104360						
ANR	1104404	Symbol	anal		1104360						
ANR	1104405	Symbol	* core		1104360						
ANR	1104406	Symbol	true		1104360						
ANR	1104407	Symbol	anal -> user		1104360						
ANR	1104408	Function	r_core_anal_read_at	2307:0:66108:66248							
ANR	1104409	FunctionDef	"r_core_anal_read_at (struct r_anal_t * anal , ut64 addr , ut8 * buf , int len)"		1104408	0					
ANR	1104410	CompoundStatement		2307:85:66193:66248	1104408	0					
ANR	1104411	ReturnStatement	"return r_io_read_at ( anal -> iob . io , addr , buf , len ) ;"	2308:1:66196:66246	1104408	0	True				
ANR	1104412	CallExpression	"r_io_read_at ( anal -> iob . io , addr , buf , len )"		1104408	0					
ANR	1104413	Callee	r_io_read_at		1104408	0					
ANR	1104414	Identifier	r_io_read_at		1104408	0					
ANR	1104415	ArgumentList	anal -> iob . io		1104408	1					
ANR	1104416	Argument	anal -> iob . io		1104408	0					
ANR	1104417	MemberAccess	anal -> iob . io		1104408	0					
ANR	1104418	PtrMemberAccess	anal -> iob		1104408	0					
ANR	1104419	Identifier	anal		1104408	0					
ANR	1104420	Identifier	iob		1104408	1					
ANR	1104421	Identifier	io		1104408	1					
ANR	1104422	Argument	addr		1104408	1					
ANR	1104423	Identifier	addr		1104408	0					
ANR	1104424	Argument	buf		1104408	2					
ANR	1104425	Identifier	buf		1104408	0					
ANR	1104426	Argument	len		1104408	3					
ANR	1104427	Identifier	len		1104408	0					
ANR	1104428	ReturnType	static bool		1104408	1					
ANR	1104429	Identifier	r_core_anal_read_at		1104408	2					
ANR	1104430	ParameterList	"struct r_anal_t * anal , ut64 addr , ut8 * buf , int len"		1104408	3					
ANR	1104431	Parameter	struct r_anal_t * anal	2307:32:66140:66160	1104408	0	True				
ANR	1104432	ParameterType	struct r_anal_t *		1104408	0					
ANR	1104433	Identifier	anal		1104408	1					
ANR	1104434	Parameter	ut64 addr	2307:55:66163:66171	1104408	1	True				
ANR	1104435	ParameterType	ut64		1104408	0					
ANR	1104436	Identifier	addr		1104408	1					
ANR	1104437	Parameter	ut8 * buf	2307:66:66174:66181	1104408	2	True				
ANR	1104438	ParameterType	ut8 *		1104408	0					
ANR	1104439	Identifier	buf		1104408	1					
ANR	1104440	Parameter	int len	2307:76:66184:66190	1104408	3	True				
ANR	1104441	ParameterType	int		1104408	0					
ANR	1104442	Identifier	len		1104408	1					
ANR	1104443	CFGEntryNode	ENTRY		1104408		True				
ANR	1104444	CFGExitNode	EXIT		1104408		True				
ANR	1104445	Symbol	buf		1104408						
ANR	1104446	Symbol	* anal		1104408						
ANR	1104447	Symbol	len		1104408						
ANR	1104448	Symbol	anal		1104408						
ANR	1104449	Symbol	r_io_read_at		1104408						
ANR	1104450	Symbol	anal -> iob		1104408						
ANR	1104451	Symbol	addr		1104408						
ANR	1104452	Symbol	anal -> iob . io		1104408						
ANR	1104453	Function	r_core_break	2311:0:66251:66438							
ANR	1104454	FunctionDef	r_core_break (RCore * core)		1104453	0					
ANR	1104455	CompoundStatement		2311:39:66290:66438	1104453	0					
ANR	1104456	IdentifierDeclStatement	RCoreTask * task = r_core_task_self ( core ) ;	2313:1:66348:66389	1104453	0	True				
ANR	1104457	IdentifierDecl	* task = r_core_task_self ( core )		1104453	0					
ANR	1104458	IdentifierDeclType	RCoreTask *		1104453	0					
ANR	1104459	Identifier	task		1104453	1					
ANR	1104460	AssignmentExpression	* task = r_core_task_self ( core )		1104453	2		=			
ANR	1104461	Identifier	task		1104453	0					
ANR	1104462	CallExpression	r_core_task_self ( core )		1104453	1					
ANR	1104463	Callee	r_core_task_self		1104453	0					
ANR	1104464	Identifier	r_core_task_self		1104453	0					
ANR	1104465	ArgumentList	core		1104453	1					
ANR	1104466	Argument	core		1104453	0					
ANR	1104467	Identifier	core		1104453	0					
ANR	1104468	IfStatement	if ( task )		1104453	1					
ANR	1104469	Condition	task	2314:5:66396:66399	1104453	0	True				
ANR	1104470	Identifier	task		1104453	0					
ANR	1104471	CompoundStatement		4:11:111:111	1104453	1					
ANR	1104472	ExpressionStatement	r_core_task_continue ( task )	2315:2:66406:66433	1104453	0	True				
ANR	1104473	CallExpression	r_core_task_continue ( task )		1104453	0					
ANR	1104474	Callee	r_core_task_continue		1104453	0					
ANR	1104475	Identifier	r_core_task_continue		1104453	0					
ANR	1104476	ArgumentList	task		1104453	1					
ANR	1104477	Argument	task		1104453	0					
ANR	1104478	Identifier	task		1104453	0					
ANR	1104479	ReturnType	static void		1104453	1					
ANR	1104480	Identifier	r_core_break		1104453	2					
ANR	1104481	ParameterList	RCore * core		1104453	3					
ANR	1104482	Parameter	RCore * core	2311:26:66277:66287	1104453	0	True				
ANR	1104483	ParameterType	RCore *		1104453	0					
ANR	1104484	Identifier	core		1104453	1					
ANR	1104485	CFGEntryNode	ENTRY		1104453		True				
ANR	1104486	CFGExitNode	EXIT		1104453		True				
ANR	1104487	Symbol	core		1104453						
ANR	1104488	Symbol	task		1104453						
ANR	1104489	Symbol	r_core_task_self		1104453						
ANR	1104490	Function	r_core_sleep_begin	2319:0:66441:66597							
ANR	1104491	FunctionDef	r_core_sleep_begin (RCore * core)		1104490	0					
ANR	1104492	CompoundStatement		2319:46:66487:66597	1104490	0					
ANR	1104493	IdentifierDeclStatement	RCoreTask * task = r_core_task_self ( core ) ;	2320:1:66490:66531	1104490	0	True				
ANR	1104494	IdentifierDecl	* task = r_core_task_self ( core )		1104490	0					
ANR	1104495	IdentifierDeclType	RCoreTask *		1104490	0					
ANR	1104496	Identifier	task		1104490	1					
ANR	1104497	AssignmentExpression	* task = r_core_task_self ( core )		1104490	2		=			
ANR	1104498	Identifier	task		1104490	0					
ANR	1104499	CallExpression	r_core_task_self ( core )		1104490	1					
ANR	1104500	Callee	r_core_task_self		1104490	0					
ANR	1104501	Identifier	r_core_task_self		1104490	0					
ANR	1104502	ArgumentList	core		1104490	1					
ANR	1104503	Argument	core		1104490	0					
ANR	1104504	Identifier	core		1104490	0					
ANR	1104505	IfStatement	if ( task )		1104490	1					
ANR	1104506	Condition	task	2321:5:66538:66541	1104490	0	True				
ANR	1104507	Identifier	task		1104490	0					
ANR	1104508	CompoundStatement		3:11:56:56	1104490	1					
ANR	1104509	ExpressionStatement	r_core_task_sleep_begin ( task )	2322:2:66548:66578	1104490	0	True				
ANR	1104510	CallExpression	r_core_task_sleep_begin ( task )		1104490	0					
ANR	1104511	Callee	r_core_task_sleep_begin		1104490	0					
ANR	1104512	Identifier	r_core_task_sleep_begin		1104490	0					
ANR	1104513	ArgumentList	task		1104490	1					
ANR	1104514	Argument	task		1104490	0					
ANR	1104515	Identifier	task		1104490	0					
ANR	1104516	ReturnStatement	return task ;	2324:1:66584:66595	1104490	2	True				
ANR	1104517	Identifier	task		1104490	0					
ANR	1104518	ReturnType	static void *		1104490	1					
ANR	1104519	Identifier	r_core_sleep_begin		1104490	2					
ANR	1104520	ParameterList	RCore * core		1104490	3					
ANR	1104521	Parameter	RCore * core	2319:33:66474:66484	1104490	0	True				
ANR	1104522	ParameterType	RCore *		1104490	0					
ANR	1104523	Identifier	core		1104490	1					
ANR	1104524	CFGEntryNode	ENTRY		1104490		True				
ANR	1104525	CFGExitNode	EXIT		1104490		True				
ANR	1104526	Symbol	core		1104490						
ANR	1104527	Symbol	task		1104490						
ANR	1104528	Symbol	r_core_task_self		1104490						
ANR	1104529	Function	r_core_sleep_end	2327:0:66600:66743							
ANR	1104530	FunctionDef	"r_core_sleep_end (RCore * core , void * user)"		1104529	0					
ANR	1104531	CompoundStatement		2327:55:66655:66743	1104529	0					
ANR	1104532	IdentifierDeclStatement	RCoreTask * task = ( RCoreTask * ) user ;	2328:1:66658:66693	1104529	0	True				
ANR	1104533	IdentifierDecl	* task = ( RCoreTask * ) user		1104529	0					
ANR	1104534	IdentifierDeclType	RCoreTask *		1104529	0					
ANR	1104535	Identifier	task		1104529	1					
ANR	1104536	AssignmentExpression	* task = ( RCoreTask * ) user		1104529	2		=			
ANR	1104537	Identifier	task		1104529	0					
ANR	1104538	CastExpression	( RCoreTask * ) user		1104529	1					
ANR	1104539	CastTarget	RCoreTask *		1104529	0					
ANR	1104540	Identifier	user		1104529	1					
ANR	1104541	IfStatement	if ( task )		1104529	1					
ANR	1104542	Condition	task	2329:5:66700:66703	1104529	0	True				
ANR	1104543	Identifier	task		1104529	0					
ANR	1104544	CompoundStatement		3:11:50:50	1104529	1					
ANR	1104545	ExpressionStatement	r_core_task_sleep_end ( task )	2330:2:66710:66738	1104529	0	True				
ANR	1104546	CallExpression	r_core_task_sleep_end ( task )		1104529	0					
ANR	1104547	Callee	r_core_task_sleep_end		1104529	0					
ANR	1104548	Identifier	r_core_task_sleep_end		1104529	0					
ANR	1104549	ArgumentList	task		1104529	1					
ANR	1104550	Argument	task		1104529	0					
ANR	1104551	Identifier	task		1104529	0					
ANR	1104552	ReturnType	static void		1104529	1					
ANR	1104553	Identifier	r_core_sleep_end		1104529	2					
ANR	1104554	ParameterList	"RCore * core , void * user"		1104529	3					
ANR	1104555	Parameter	RCore * core	2327:30:66630:66640	1104529	0	True				
ANR	1104556	ParameterType	RCore *		1104529	0					
ANR	1104557	Identifier	core		1104529	1					
ANR	1104558	Parameter	void * user	2327:43:66643:66652	1104529	1	True				
ANR	1104559	ParameterType	void *		1104529	0					
ANR	1104560	Identifier	user		1104529	1					
ANR	1104561	CFGEntryNode	ENTRY		1104529		True				
ANR	1104562	CFGExitNode	EXIT		1104529		True				
ANR	1104563	Symbol	core		1104529						
ANR	1104564	Symbol	task		1104529						
ANR	1104565	Symbol	user		1104529						
ANR	1104566	Function	__init_autocomplete_default	2334:0:66746:78287							
ANR	1104567	FunctionDef	__init_autocomplete_default (RCore * core)		1104566	0					
ANR	1104568	CompoundStatement		2334:54:66800:78287	1104566	0					
ANR	1104569	IdentifierDeclStatement	int i ;	2335:1:66803:66808	1104566	0	True				
ANR	1104570	IdentifierDecl	i		1104566	0					
ANR	1104571	IdentifierDeclType	int		1104566	0					
ANR	1104572	Identifier	i		1104566	1					
ANR	1104573	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""*"" , R_CORE_AUTOCMPLT_FLAG , true )"	2336:1:66811:66889	1104566	1	True				
ANR	1104574	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""*"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104575	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104576	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104577	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104578	Argument	core -> autocomplete		1104566	0					
ANR	1104579	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104580	Identifier	core		1104566	0					
ANR	1104581	Identifier	autocomplete		1104566	1					
ANR	1104582	Argument	"""*"""		1104566	1					
ANR	1104583	PrimaryExpression	"""*"""		1104566	0					
ANR	1104584	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104585	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104586	Argument	true		1104566	3					
ANR	1104587	Identifier	true		1104566	0					
ANR	1104588	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""s"" , R_CORE_AUTOCMPLT_SEEK , true )"	2337:1:66892:66970	1104566	2	True				
ANR	1104589	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""s"" , R_CORE_AUTOCMPLT_SEEK , true )"		1104566	0					
ANR	1104590	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104591	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104592	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104593	Argument	core -> autocomplete		1104566	0					
ANR	1104594	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104595	Identifier	core		1104566	0					
ANR	1104596	Identifier	autocomplete		1104566	1					
ANR	1104597	Argument	"""s"""		1104566	1					
ANR	1104598	PrimaryExpression	"""s"""		1104566	0					
ANR	1104599	Argument	R_CORE_AUTOCMPLT_SEEK		1104566	2					
ANR	1104600	Identifier	R_CORE_AUTOCMPLT_SEEK		1104566	0					
ANR	1104601	Argument	true		1104566	3					
ANR	1104602	Identifier	true		1104566	0					
ANR	1104603	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""s+"" , R_CORE_AUTOCMPLT_FLAG , true )"	2338:1:66973:67052	1104566	3	True				
ANR	1104604	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""s+"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104605	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104606	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104607	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104608	Argument	core -> autocomplete		1104566	0					
ANR	1104609	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104610	Identifier	core		1104566	0					
ANR	1104611	Identifier	autocomplete		1104566	1					
ANR	1104612	Argument	"""s+"""		1104566	1					
ANR	1104613	PrimaryExpression	"""s+"""		1104566	0					
ANR	1104614	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104615	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104616	Argument	true		1104566	3					
ANR	1104617	Identifier	true		1104566	0					
ANR	1104618	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""b"" , R_CORE_AUTOCMPLT_FLAG , true )"	2339:1:67055:67133	1104566	4	True				
ANR	1104619	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""b"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104620	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104621	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104622	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104623	Argument	core -> autocomplete		1104566	0					
ANR	1104624	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104625	Identifier	core		1104566	0					
ANR	1104626	Identifier	autocomplete		1104566	1					
ANR	1104627	Argument	"""b"""		1104566	1					
ANR	1104628	PrimaryExpression	"""b"""		1104566	0					
ANR	1104629	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104630	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104631	Argument	true		1104566	3					
ANR	1104632	Identifier	true		1104566	0					
ANR	1104633	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""f"" , R_CORE_AUTOCMPLT_FLAG , true )"	2340:1:67136:67214	1104566	5	True				
ANR	1104634	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""f"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104635	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104636	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104637	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104638	Argument	core -> autocomplete		1104566	0					
ANR	1104639	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104640	Identifier	core		1104566	0					
ANR	1104641	Identifier	autocomplete		1104566	1					
ANR	1104642	Argument	"""f"""		1104566	1					
ANR	1104643	PrimaryExpression	"""f"""		1104566	0					
ANR	1104644	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104645	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104646	Argument	true		1104566	3					
ANR	1104647	Identifier	true		1104566	0					
ANR	1104648	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""fg"" , R_CORE_AUTOCMPLT_FLAG , true )"	2341:1:67217:67296	1104566	6	True				
ANR	1104649	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""fg"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104650	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104651	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104652	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104653	Argument	core -> autocomplete		1104566	0					
ANR	1104654	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104655	Identifier	core		1104566	0					
ANR	1104656	Identifier	autocomplete		1104566	1					
ANR	1104657	Argument	"""fg"""		1104566	1					
ANR	1104658	PrimaryExpression	"""fg"""		1104566	0					
ANR	1104659	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104660	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104661	Argument	true		1104566	3					
ANR	1104662	Identifier	true		1104566	0					
ANR	1104663	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""?"" , R_CORE_AUTOCMPLT_FLAG , true )"	2342:1:67299:67377	1104566	7	True				
ANR	1104664	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""?"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104665	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104666	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104667	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104668	Argument	core -> autocomplete		1104566	0					
ANR	1104669	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104670	Identifier	core		1104566	0					
ANR	1104671	Identifier	autocomplete		1104566	1					
ANR	1104672	Argument	"""?"""		1104566	1					
ANR	1104673	PrimaryExpression	"""?"""		1104566	0					
ANR	1104674	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104675	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104676	Argument	true		1104566	3					
ANR	1104677	Identifier	true		1104566	0					
ANR	1104678	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""?v"" , R_CORE_AUTOCMPLT_FLAG , true )"	2343:1:67380:67459	1104566	8	True				
ANR	1104679	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""?v"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104680	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104681	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104682	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104683	Argument	core -> autocomplete		1104566	0					
ANR	1104684	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104685	Identifier	core		1104566	0					
ANR	1104686	Identifier	autocomplete		1104566	1					
ANR	1104687	Argument	"""?v"""		1104566	1					
ANR	1104688	PrimaryExpression	"""?v"""		1104566	0					
ANR	1104689	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104690	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104691	Argument	true		1104566	3					
ANR	1104692	Identifier	true		1104566	0					
ANR	1104693	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""ad"" , R_CORE_AUTOCMPLT_FLAG , true )"	2344:1:67462:67541	1104566	9	True				
ANR	1104694	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""ad"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104695	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104696	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104697	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104698	Argument	core -> autocomplete		1104566	0					
ANR	1104699	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104700	Identifier	core		1104566	0					
ANR	1104701	Identifier	autocomplete		1104566	1					
ANR	1104702	Argument	"""ad"""		1104566	1					
ANR	1104703	PrimaryExpression	"""ad"""		1104566	0					
ANR	1104704	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104705	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104706	Argument	true		1104566	3					
ANR	1104707	Identifier	true		1104566	0					
ANR	1104708	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""bf"" , R_CORE_AUTOCMPLT_FLAG , true )"	2345:1:67544:67623	1104566	10	True				
ANR	1104709	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""bf"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104710	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104711	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104712	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104713	Argument	core -> autocomplete		1104566	0					
ANR	1104714	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104715	Identifier	core		1104566	0					
ANR	1104716	Identifier	autocomplete		1104566	1					
ANR	1104717	Argument	"""bf"""		1104566	1					
ANR	1104718	PrimaryExpression	"""bf"""		1104566	0					
ANR	1104719	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104720	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104721	Argument	true		1104566	3					
ANR	1104722	Identifier	true		1104566	0					
ANR	1104723	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""c1"" , R_CORE_AUTOCMPLT_FLAG , true )"	2346:1:67626:67705	1104566	11	True				
ANR	1104724	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""c1"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104725	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104726	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104727	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104728	Argument	core -> autocomplete		1104566	0					
ANR	1104729	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104730	Identifier	core		1104566	0					
ANR	1104731	Identifier	autocomplete		1104566	1					
ANR	1104732	Argument	"""c1"""		1104566	1					
ANR	1104733	PrimaryExpression	"""c1"""		1104566	0					
ANR	1104734	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104735	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104736	Argument	true		1104566	3					
ANR	1104737	Identifier	true		1104566	0					
ANR	1104738	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""db"" , R_CORE_AUTOCMPLT_FLAG , true )"	2347:1:67708:67787	1104566	12	True				
ANR	1104739	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""db"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104740	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104741	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104742	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104743	Argument	core -> autocomplete		1104566	0					
ANR	1104744	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104745	Identifier	core		1104566	0					
ANR	1104746	Identifier	autocomplete		1104566	1					
ANR	1104747	Argument	"""db"""		1104566	1					
ANR	1104748	PrimaryExpression	"""db"""		1104566	0					
ANR	1104749	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104750	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104751	Argument	true		1104566	3					
ANR	1104752	Identifier	true		1104566	0					
ANR	1104753	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""dbw"" , R_CORE_AUTOCMPLT_FLAG , true )"	2348:1:67790:67870	1104566	13	True				
ANR	1104754	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""dbw"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104755	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104756	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104757	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104758	Argument	core -> autocomplete		1104566	0					
ANR	1104759	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104760	Identifier	core		1104566	0					
ANR	1104761	Identifier	autocomplete		1104566	1					
ANR	1104762	Argument	"""dbw"""		1104566	1					
ANR	1104763	PrimaryExpression	"""dbw"""		1104566	0					
ANR	1104764	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104765	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104766	Argument	true		1104566	3					
ANR	1104767	Identifier	true		1104566	0					
ANR	1104768	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""f-"" , R_CORE_AUTOCMPLT_FLAG , true )"	2349:1:67873:67952	1104566	14	True				
ANR	1104769	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""f-"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104770	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104771	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104772	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104773	Argument	core -> autocomplete		1104566	0					
ANR	1104774	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104775	Identifier	core		1104566	0					
ANR	1104776	Identifier	autocomplete		1104566	1					
ANR	1104777	Argument	"""f-"""		1104566	1					
ANR	1104778	PrimaryExpression	"""f-"""		1104566	0					
ANR	1104779	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104780	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104781	Argument	true		1104566	3					
ANR	1104782	Identifier	true		1104566	0					
ANR	1104783	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""fr"" , R_CORE_AUTOCMPLT_FLAG , true )"	2350:1:67955:68034	1104566	15	True				
ANR	1104784	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""fr"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104785	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104786	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104787	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104788	Argument	core -> autocomplete		1104566	0					
ANR	1104789	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104790	Identifier	core		1104566	0					
ANR	1104791	Identifier	autocomplete		1104566	1					
ANR	1104792	Argument	"""fr"""		1104566	1					
ANR	1104793	PrimaryExpression	"""fr"""		1104566	0					
ANR	1104794	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104795	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104796	Argument	true		1104566	3					
ANR	1104797	Identifier	true		1104566	0					
ANR	1104798	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""tf"" , R_CORE_AUTOCMPLT_FLAG , true )"	2351:1:68037:68116	1104566	16	True				
ANR	1104799	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""tf"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104800	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104801	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104802	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104803	Argument	core -> autocomplete		1104566	0					
ANR	1104804	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104805	Identifier	core		1104566	0					
ANR	1104806	Identifier	autocomplete		1104566	1					
ANR	1104807	Argument	"""tf"""		1104566	1					
ANR	1104808	PrimaryExpression	"""tf"""		1104566	0					
ANR	1104809	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104810	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104811	Argument	true		1104566	3					
ANR	1104812	Identifier	true		1104566	0					
ANR	1104813	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""/a"" , R_CORE_AUTOCMPLT_FLAG , true )"	2352:1:68119:68198	1104566	17	True				
ANR	1104814	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""/a"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104815	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104816	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104817	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104818	Argument	core -> autocomplete		1104566	0					
ANR	1104819	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104820	Identifier	core		1104566	0					
ANR	1104821	Identifier	autocomplete		1104566	1					
ANR	1104822	Argument	"""/a"""		1104566	1					
ANR	1104823	PrimaryExpression	"""/a"""		1104566	0					
ANR	1104824	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104825	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104826	Argument	true		1104566	3					
ANR	1104827	Identifier	true		1104566	0					
ANR	1104828	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""/v"" , R_CORE_AUTOCMPLT_FLAG , true )"	2353:1:68201:68280	1104566	18	True				
ANR	1104829	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""/v"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104830	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104831	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104832	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104833	Argument	core -> autocomplete		1104566	0					
ANR	1104834	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104835	Identifier	core		1104566	0					
ANR	1104836	Identifier	autocomplete		1104566	1					
ANR	1104837	Argument	"""/v"""		1104566	1					
ANR	1104838	PrimaryExpression	"""/v"""		1104566	0					
ANR	1104839	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104840	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104841	Argument	true		1104566	3					
ANR	1104842	Identifier	true		1104566	0					
ANR	1104843	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""/r"" , R_CORE_AUTOCMPLT_FLAG , true )"	2354:1:68283:68362	1104566	19	True				
ANR	1104844	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""/r"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104845	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104846	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104847	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104848	Argument	core -> autocomplete		1104566	0					
ANR	1104849	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104850	Identifier	core		1104566	0					
ANR	1104851	Identifier	autocomplete		1104566	1					
ANR	1104852	Argument	"""/r"""		1104566	1					
ANR	1104853	PrimaryExpression	"""/r"""		1104566	0					
ANR	1104854	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104855	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104856	Argument	true		1104566	3					
ANR	1104857	Identifier	true		1104566	0					
ANR	1104858	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""/re"" , R_CORE_AUTOCMPLT_FLAG , true )"	2355:1:68365:68445	1104566	20	True				
ANR	1104859	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""/re"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104860	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104861	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104862	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104863	Argument	core -> autocomplete		1104566	0					
ANR	1104864	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104865	Identifier	core		1104566	0					
ANR	1104866	Identifier	autocomplete		1104566	1					
ANR	1104867	Argument	"""/re"""		1104566	1					
ANR	1104868	PrimaryExpression	"""/re"""		1104566	0					
ANR	1104869	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104870	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104871	Argument	true		1104566	3					
ANR	1104872	Identifier	true		1104566	0					
ANR	1104873	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""aav"" , R_CORE_AUTOCMPLT_FLAG , true )"	2356:1:68448:68528	1104566	21	True				
ANR	1104874	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""aav"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104875	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104876	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104877	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104878	Argument	core -> autocomplete		1104566	0					
ANR	1104879	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104880	Identifier	core		1104566	0					
ANR	1104881	Identifier	autocomplete		1104566	1					
ANR	1104882	Argument	"""aav"""		1104566	1					
ANR	1104883	PrimaryExpression	"""aav"""		1104566	0					
ANR	1104884	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104885	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104886	Argument	true		1104566	3					
ANR	1104887	Identifier	true		1104566	0					
ANR	1104888	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""aep"" , R_CORE_AUTOCMPLT_FLAG , true )"	2357:1:68531:68611	1104566	22	True				
ANR	1104889	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""aep"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104890	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104891	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104892	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104893	Argument	core -> autocomplete		1104566	0					
ANR	1104894	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104895	Identifier	core		1104566	0					
ANR	1104896	Identifier	autocomplete		1104566	1					
ANR	1104897	Argument	"""aep"""		1104566	1					
ANR	1104898	PrimaryExpression	"""aep"""		1104566	0					
ANR	1104899	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104900	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104901	Argument	true		1104566	3					
ANR	1104902	Identifier	true		1104566	0					
ANR	1104903	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""aef"" , R_CORE_AUTOCMPLT_FLAG , true )"	2358:1:68614:68694	1104566	23	True				
ANR	1104904	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""aef"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104905	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104906	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104907	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104908	Argument	core -> autocomplete		1104566	0					
ANR	1104909	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104910	Identifier	core		1104566	0					
ANR	1104911	Identifier	autocomplete		1104566	1					
ANR	1104912	Argument	"""aef"""		1104566	1					
ANR	1104913	PrimaryExpression	"""aef"""		1104566	0					
ANR	1104914	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104915	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104916	Argument	true		1104566	3					
ANR	1104917	Identifier	true		1104566	0					
ANR	1104918	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""afb"" , R_CORE_AUTOCMPLT_FLAG , true )"	2359:1:68697:68777	1104566	24	True				
ANR	1104919	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""afb"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104920	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104921	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104922	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104923	Argument	core -> autocomplete		1104566	0					
ANR	1104924	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104925	Identifier	core		1104566	0					
ANR	1104926	Identifier	autocomplete		1104566	1					
ANR	1104927	Argument	"""afb"""		1104566	1					
ANR	1104928	PrimaryExpression	"""afb"""		1104566	0					
ANR	1104929	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104930	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104931	Argument	true		1104566	3					
ANR	1104932	Identifier	true		1104566	0					
ANR	1104933	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""afc"" , R_CORE_AUTOCMPLT_FLAG , true )"	2360:1:68780:68860	1104566	25	True				
ANR	1104934	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""afc"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104935	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104936	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104937	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104938	Argument	core -> autocomplete		1104566	0					
ANR	1104939	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104940	Identifier	core		1104566	0					
ANR	1104941	Identifier	autocomplete		1104566	1					
ANR	1104942	Argument	"""afc"""		1104566	1					
ANR	1104943	PrimaryExpression	"""afc"""		1104566	0					
ANR	1104944	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104945	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104946	Argument	true		1104566	3					
ANR	1104947	Identifier	true		1104566	0					
ANR	1104948	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""axg"" , R_CORE_AUTOCMPLT_FLAG , true )"	2361:1:68863:68943	1104566	26	True				
ANR	1104949	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""axg"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104950	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104951	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104952	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104953	Argument	core -> autocomplete		1104566	0					
ANR	1104954	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104955	Identifier	core		1104566	0					
ANR	1104956	Identifier	autocomplete		1104566	1					
ANR	1104957	Argument	"""axg"""		1104566	1					
ANR	1104958	PrimaryExpression	"""axg"""		1104566	0					
ANR	1104959	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104960	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104961	Argument	true		1104566	3					
ANR	1104962	Identifier	true		1104566	0					
ANR	1104963	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""axt"" , R_CORE_AUTOCMPLT_FLAG , true )"	2362:1:68946:69026	1104566	27	True				
ANR	1104964	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""axt"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104965	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104966	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104967	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104968	Argument	core -> autocomplete		1104566	0					
ANR	1104969	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104970	Identifier	core		1104566	0					
ANR	1104971	Identifier	autocomplete		1104566	1					
ANR	1104972	Argument	"""axt"""		1104566	1					
ANR	1104973	PrimaryExpression	"""axt"""		1104566	0					
ANR	1104974	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104975	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104976	Argument	true		1104566	3					
ANR	1104977	Identifier	true		1104566	0					
ANR	1104978	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""axf"" , R_CORE_AUTOCMPLT_FLAG , true )"	2363:1:69029:69109	1104566	28	True				
ANR	1104979	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""axf"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104980	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104981	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104982	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104983	Argument	core -> autocomplete		1104566	0					
ANR	1104984	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1104985	Identifier	core		1104566	0					
ANR	1104986	Identifier	autocomplete		1104566	1					
ANR	1104987	Argument	"""axf"""		1104566	1					
ANR	1104988	PrimaryExpression	"""axf"""		1104566	0					
ANR	1104989	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1104990	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1104991	Argument	true		1104566	3					
ANR	1104992	Identifier	true		1104566	0					
ANR	1104993	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""dcu"" , R_CORE_AUTOCMPLT_FLAG , true )"	2364:1:69112:69192	1104566	29	True				
ANR	1104994	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""dcu"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1104995	Callee	r_core_autocomplete_add		1104566	0					
ANR	1104996	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1104997	ArgumentList	core -> autocomplete		1104566	1					
ANR	1104998	Argument	core -> autocomplete		1104566	0					
ANR	1104999	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105000	Identifier	core		1104566	0					
ANR	1105001	Identifier	autocomplete		1104566	1					
ANR	1105002	Argument	"""dcu"""		1104566	1					
ANR	1105003	PrimaryExpression	"""dcu"""		1104566	0					
ANR	1105004	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1105005	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1105006	Argument	true		1104566	3					
ANR	1105007	Identifier	true		1104566	0					
ANR	1105008	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""ag"" , R_CORE_AUTOCMPLT_FLAG , true )"	2365:1:69195:69274	1104566	30	True				
ANR	1105009	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""ag"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1105010	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105011	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105012	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105013	Argument	core -> autocomplete		1104566	0					
ANR	1105014	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105015	Identifier	core		1104566	0					
ANR	1105016	Identifier	autocomplete		1104566	1					
ANR	1105017	Argument	"""ag"""		1104566	1					
ANR	1105018	PrimaryExpression	"""ag"""		1104566	0					
ANR	1105019	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1105020	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1105021	Argument	true		1104566	3					
ANR	1105022	Identifier	true		1104566	0					
ANR	1105023	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""agfl"" , R_CORE_AUTOCMPLT_FLAG , true )"	2366:1:69277:69358	1104566	31	True				
ANR	1105024	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""agfl"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1105025	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105026	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105027	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105028	Argument	core -> autocomplete		1104566	0					
ANR	1105029	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105030	Identifier	core		1104566	0					
ANR	1105031	Identifier	autocomplete		1104566	1					
ANR	1105032	Argument	"""agfl"""		1104566	1					
ANR	1105033	PrimaryExpression	"""agfl"""		1104566	0					
ANR	1105034	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1105035	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1105036	Argument	true		1104566	3					
ANR	1105037	Identifier	true		1104566	0					
ANR	1105038	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""aecu"" , R_CORE_AUTOCMPLT_FLAG , true )"	2367:1:69361:69442	1104566	32	True				
ANR	1105039	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""aecu"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1105040	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105041	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105042	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105043	Argument	core -> autocomplete		1104566	0					
ANR	1105044	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105045	Identifier	core		1104566	0					
ANR	1105046	Identifier	autocomplete		1104566	1					
ANR	1105047	Argument	"""aecu"""		1104566	1					
ANR	1105048	PrimaryExpression	"""aecu"""		1104566	0					
ANR	1105049	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1105050	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1105051	Argument	true		1104566	3					
ANR	1105052	Identifier	true		1104566	0					
ANR	1105053	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""aesu"" , R_CORE_AUTOCMPLT_FLAG , true )"	2368:1:69445:69526	1104566	33	True				
ANR	1105054	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""aesu"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1105055	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105056	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105057	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105058	Argument	core -> autocomplete		1104566	0					
ANR	1105059	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105060	Identifier	core		1104566	0					
ANR	1105061	Identifier	autocomplete		1104566	1					
ANR	1105062	Argument	"""aesu"""		1104566	1					
ANR	1105063	PrimaryExpression	"""aesu"""		1104566	0					
ANR	1105064	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1105065	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1105066	Argument	true		1104566	3					
ANR	1105067	Identifier	true		1104566	0					
ANR	1105068	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""aeim"" , R_CORE_AUTOCMPLT_FLAG , true )"	2369:1:69529:69610	1104566	34	True				
ANR	1105069	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""aeim"" , R_CORE_AUTOCMPLT_FLAG , true )"		1104566	0					
ANR	1105070	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105071	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105072	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105073	Argument	core -> autocomplete		1104566	0					
ANR	1105074	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105075	Identifier	core		1104566	0					
ANR	1105076	Identifier	autocomplete		1104566	1					
ANR	1105077	Argument	"""aeim"""		1104566	1					
ANR	1105078	PrimaryExpression	"""aeim"""		1104566	0					
ANR	1105079	Argument	R_CORE_AUTOCMPLT_FLAG		1104566	2					
ANR	1105080	Identifier	R_CORE_AUTOCMPLT_FLAG		1104566	0					
ANR	1105081	Argument	true		1104566	3					
ANR	1105082	Identifier	true		1104566	0					
ANR	1105083	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""afi"" , R_CORE_AUTOCMPLT_FCN , true )"	2370:1:69613:69692	1104566	35	True				
ANR	1105084	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""afi"" , R_CORE_AUTOCMPLT_FCN , true )"		1104566	0					
ANR	1105085	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105086	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105087	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105088	Argument	core -> autocomplete		1104566	0					
ANR	1105089	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105090	Identifier	core		1104566	0					
ANR	1105091	Identifier	autocomplete		1104566	1					
ANR	1105092	Argument	"""afi"""		1104566	1					
ANR	1105093	PrimaryExpression	"""afi"""		1104566	0					
ANR	1105094	Argument	R_CORE_AUTOCMPLT_FCN		1104566	2					
ANR	1105095	Identifier	R_CORE_AUTOCMPLT_FCN		1104566	0					
ANR	1105096	Argument	true		1104566	3					
ANR	1105097	Identifier	true		1104566	0					
ANR	1105098	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""afcf"" , R_CORE_AUTOCMPLT_FCN , true )"	2371:1:69695:69775	1104566	36	True				
ANR	1105099	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""afcf"" , R_CORE_AUTOCMPLT_FCN , true )"		1104566	0					
ANR	1105100	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105101	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105102	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105103	Argument	core -> autocomplete		1104566	0					
ANR	1105104	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105105	Identifier	core		1104566	0					
ANR	1105106	Identifier	autocomplete		1104566	1					
ANR	1105107	Argument	"""afcf"""		1104566	1					
ANR	1105108	PrimaryExpression	"""afcf"""		1104566	0					
ANR	1105109	Argument	R_CORE_AUTOCMPLT_FCN		1104566	2					
ANR	1105110	Identifier	R_CORE_AUTOCMPLT_FCN		1104566	0					
ANR	1105111	Argument	true		1104566	3					
ANR	1105112	Identifier	true		1104566	0					
ANR	1105113	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""afn"" , R_CORE_AUTOCMPLT_FCN , true )"	2372:1:69778:69857	1104566	37	True				
ANR	1105114	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""afn"" , R_CORE_AUTOCMPLT_FCN , true )"		1104566	0					
ANR	1105115	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105116	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105117	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105118	Argument	core -> autocomplete		1104566	0					
ANR	1105119	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105120	Identifier	core		1104566	0					
ANR	1105121	Identifier	autocomplete		1104566	1					
ANR	1105122	Argument	"""afn"""		1104566	1					
ANR	1105123	PrimaryExpression	"""afn"""		1104566	0					
ANR	1105124	Argument	R_CORE_AUTOCMPLT_FCN		1104566	2					
ANR	1105125	Identifier	R_CORE_AUTOCMPLT_FCN		1104566	0					
ANR	1105126	Argument	true		1104566	3					
ANR	1105127	Identifier	true		1104566	0					
ANR	1105128	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""e"" , R_CORE_AUTOCMPLT_EVAL , true )"	2374:1:69873:69951	1104566	38	True				
ANR	1105129	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""e"" , R_CORE_AUTOCMPLT_EVAL , true )"		1104566	0					
ANR	1105130	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105131	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105132	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105133	Argument	core -> autocomplete		1104566	0					
ANR	1105134	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105135	Identifier	core		1104566	0					
ANR	1105136	Identifier	autocomplete		1104566	1					
ANR	1105137	Argument	"""e"""		1104566	1					
ANR	1105138	PrimaryExpression	"""e"""		1104566	0					
ANR	1105139	Argument	R_CORE_AUTOCMPLT_EVAL		1104566	2					
ANR	1105140	Identifier	R_CORE_AUTOCMPLT_EVAL		1104566	0					
ANR	1105141	Argument	true		1104566	3					
ANR	1105142	Identifier	true		1104566	0					
ANR	1105143	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""ee"" , R_CORE_AUTOCMPLT_EVAL , true )"	2375:1:69954:70033	1104566	39	True				
ANR	1105144	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""ee"" , R_CORE_AUTOCMPLT_EVAL , true )"		1104566	0					
ANR	1105145	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105146	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105147	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105148	Argument	core -> autocomplete		1104566	0					
ANR	1105149	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105150	Identifier	core		1104566	0					
ANR	1105151	Identifier	autocomplete		1104566	1					
ANR	1105152	Argument	"""ee"""		1104566	1					
ANR	1105153	PrimaryExpression	"""ee"""		1104566	0					
ANR	1105154	Argument	R_CORE_AUTOCMPLT_EVAL		1104566	2					
ANR	1105155	Identifier	R_CORE_AUTOCMPLT_EVAL		1104566	0					
ANR	1105156	Argument	true		1104566	3					
ANR	1105157	Identifier	true		1104566	0					
ANR	1105158	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""et"" , R_CORE_AUTOCMPLT_EVAL , true )"	2376:1:70036:70115	1104566	40	True				
ANR	1105159	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""et"" , R_CORE_AUTOCMPLT_EVAL , true )"		1104566	0					
ANR	1105160	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105161	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105162	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105163	Argument	core -> autocomplete		1104566	0					
ANR	1105164	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105165	Identifier	core		1104566	0					
ANR	1105166	Identifier	autocomplete		1104566	1					
ANR	1105167	Argument	"""et"""		1104566	1					
ANR	1105168	PrimaryExpression	"""et"""		1104566	0					
ANR	1105169	Argument	R_CORE_AUTOCMPLT_EVAL		1104566	2					
ANR	1105170	Identifier	R_CORE_AUTOCMPLT_EVAL		1104566	0					
ANR	1105171	Argument	true		1104566	3					
ANR	1105172	Identifier	true		1104566	0					
ANR	1105173	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""e?"" , R_CORE_AUTOCMPLT_EVAL , true )"	2377:1:70118:70197	1104566	41	True				
ANR	1105174	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""e?"" , R_CORE_AUTOCMPLT_EVAL , true )"		1104566	0					
ANR	1105175	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105176	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105177	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105178	Argument	core -> autocomplete		1104566	0					
ANR	1105179	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105180	Identifier	core		1104566	0					
ANR	1105181	Identifier	autocomplete		1104566	1					
ANR	1105182	Argument	"""e?"""		1104566	1					
ANR	1105183	PrimaryExpression	"""e?"""		1104566	0					
ANR	1105184	Argument	R_CORE_AUTOCMPLT_EVAL		1104566	2					
ANR	1105185	Identifier	R_CORE_AUTOCMPLT_EVAL		1104566	0					
ANR	1105186	Argument	true		1104566	3					
ANR	1105187	Identifier	true		1104566	0					
ANR	1105188	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""e!"" , R_CORE_AUTOCMPLT_EVAL , true )"	2378:1:70200:70279	1104566	42	True				
ANR	1105189	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""e!"" , R_CORE_AUTOCMPLT_EVAL , true )"		1104566	0					
ANR	1105190	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105191	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105192	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105193	Argument	core -> autocomplete		1104566	0					
ANR	1105194	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105195	Identifier	core		1104566	0					
ANR	1105196	Identifier	autocomplete		1104566	1					
ANR	1105197	Argument	"""e!"""		1104566	1					
ANR	1105198	PrimaryExpression	"""e!"""		1104566	0					
ANR	1105199	Argument	R_CORE_AUTOCMPLT_EVAL		1104566	2					
ANR	1105200	Identifier	R_CORE_AUTOCMPLT_EVAL		1104566	0					
ANR	1105201	Argument	true		1104566	3					
ANR	1105202	Identifier	true		1104566	0					
ANR	1105203	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""ev"" , R_CORE_AUTOCMPLT_EVAL , true )"	2379:1:70282:70361	1104566	43	True				
ANR	1105204	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""ev"" , R_CORE_AUTOCMPLT_EVAL , true )"		1104566	0					
ANR	1105205	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105206	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105207	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105208	Argument	core -> autocomplete		1104566	0					
ANR	1105209	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105210	Identifier	core		1104566	0					
ANR	1105211	Identifier	autocomplete		1104566	1					
ANR	1105212	Argument	"""ev"""		1104566	1					
ANR	1105213	PrimaryExpression	"""ev"""		1104566	0					
ANR	1105214	Argument	R_CORE_AUTOCMPLT_EVAL		1104566	2					
ANR	1105215	Identifier	R_CORE_AUTOCMPLT_EVAL		1104566	0					
ANR	1105216	Argument	true		1104566	3					
ANR	1105217	Identifier	true		1104566	0					
ANR	1105218	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""evj"" , R_CORE_AUTOCMPLT_EVAL , true )"	2380:1:70364:70444	1104566	44	True				
ANR	1105219	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""evj"" , R_CORE_AUTOCMPLT_EVAL , true )"		1104566	0					
ANR	1105220	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105221	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105222	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105223	Argument	core -> autocomplete		1104566	0					
ANR	1105224	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105225	Identifier	core		1104566	0					
ANR	1105226	Identifier	autocomplete		1104566	1					
ANR	1105227	Argument	"""evj"""		1104566	1					
ANR	1105228	PrimaryExpression	"""evj"""		1104566	0					
ANR	1105229	Argument	R_CORE_AUTOCMPLT_EVAL		1104566	2					
ANR	1105230	Identifier	R_CORE_AUTOCMPLT_EVAL		1104566	0					
ANR	1105231	Argument	true		1104566	3					
ANR	1105232	Identifier	true		1104566	0					
ANR	1105233	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""-"" , R_CORE_AUTOCMPLT_MINS , true )"	2382:1:70465:70543	1104566	45	True				
ANR	1105234	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""-"" , R_CORE_AUTOCMPLT_MINS , true )"		1104566	0					
ANR	1105235	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105236	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105237	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105238	Argument	core -> autocomplete		1104566	0					
ANR	1105239	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105240	Identifier	core		1104566	0					
ANR	1105241	Identifier	autocomplete		1104566	1					
ANR	1105242	Argument	"""-"""		1104566	1					
ANR	1105243	PrimaryExpression	"""-"""		1104566	0					
ANR	1105244	Argument	R_CORE_AUTOCMPLT_MINS		1104566	2					
ANR	1105245	Identifier	R_CORE_AUTOCMPLT_MINS		1104566	0					
ANR	1105246	Argument	true		1104566	3					
ANR	1105247	Identifier	true		1104566	0					
ANR	1105248	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""db-"" , R_CORE_AUTOCMPLT_BRKP , true )"	2384:1:70565:70645	1104566	46	True				
ANR	1105249	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""db-"" , R_CORE_AUTOCMPLT_BRKP , true )"		1104566	0					
ANR	1105250	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105251	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105252	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105253	Argument	core -> autocomplete		1104566	0					
ANR	1105254	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105255	Identifier	core		1104566	0					
ANR	1105256	Identifier	autocomplete		1104566	1					
ANR	1105257	Argument	"""db-"""		1104566	1					
ANR	1105258	PrimaryExpression	"""db-"""		1104566	0					
ANR	1105259	Argument	R_CORE_AUTOCMPLT_BRKP		1104566	2					
ANR	1105260	Identifier	R_CORE_AUTOCMPLT_BRKP		1104566	0					
ANR	1105261	Argument	true		1104566	3					
ANR	1105262	Identifier	true		1104566	0					
ANR	1105263	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""dbc"" , R_CORE_AUTOCMPLT_BRKP , true )"	2385:1:70648:70728	1104566	47	True				
ANR	1105264	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""dbc"" , R_CORE_AUTOCMPLT_BRKP , true )"		1104566	0					
ANR	1105265	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105266	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105267	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105268	Argument	core -> autocomplete		1104566	0					
ANR	1105269	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105270	Identifier	core		1104566	0					
ANR	1105271	Identifier	autocomplete		1104566	1					
ANR	1105272	Argument	"""dbc"""		1104566	1					
ANR	1105273	PrimaryExpression	"""dbc"""		1104566	0					
ANR	1105274	Argument	R_CORE_AUTOCMPLT_BRKP		1104566	2					
ANR	1105275	Identifier	R_CORE_AUTOCMPLT_BRKP		1104566	0					
ANR	1105276	Argument	true		1104566	3					
ANR	1105277	Identifier	true		1104566	0					
ANR	1105278	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""dbC"" , R_CORE_AUTOCMPLT_BRKP , true )"	2386:1:70731:70811	1104566	48	True				
ANR	1105279	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""dbC"" , R_CORE_AUTOCMPLT_BRKP , true )"		1104566	0					
ANR	1105280	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105281	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105282	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105283	Argument	core -> autocomplete		1104566	0					
ANR	1105284	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105285	Identifier	core		1104566	0					
ANR	1105286	Identifier	autocomplete		1104566	1					
ANR	1105287	Argument	"""dbC"""		1104566	1					
ANR	1105288	PrimaryExpression	"""dbC"""		1104566	0					
ANR	1105289	Argument	R_CORE_AUTOCMPLT_BRKP		1104566	2					
ANR	1105290	Identifier	R_CORE_AUTOCMPLT_BRKP		1104566	0					
ANR	1105291	Argument	true		1104566	3					
ANR	1105292	Identifier	true		1104566	0					
ANR	1105293	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""dbd"" , R_CORE_AUTOCMPLT_BRKP , true )"	2387:1:70814:70894	1104566	49	True				
ANR	1105294	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""dbd"" , R_CORE_AUTOCMPLT_BRKP , true )"		1104566	0					
ANR	1105295	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105296	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105297	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105298	Argument	core -> autocomplete		1104566	0					
ANR	1105299	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105300	Identifier	core		1104566	0					
ANR	1105301	Identifier	autocomplete		1104566	1					
ANR	1105302	Argument	"""dbd"""		1104566	1					
ANR	1105303	PrimaryExpression	"""dbd"""		1104566	0					
ANR	1105304	Argument	R_CORE_AUTOCMPLT_BRKP		1104566	2					
ANR	1105305	Identifier	R_CORE_AUTOCMPLT_BRKP		1104566	0					
ANR	1105306	Argument	true		1104566	3					
ANR	1105307	Identifier	true		1104566	0					
ANR	1105308	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""dbe"" , R_CORE_AUTOCMPLT_BRKP , true )"	2388:1:70897:70977	1104566	50	True				
ANR	1105309	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""dbe"" , R_CORE_AUTOCMPLT_BRKP , true )"		1104566	0					
ANR	1105310	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105311	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105312	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105313	Argument	core -> autocomplete		1104566	0					
ANR	1105314	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105315	Identifier	core		1104566	0					
ANR	1105316	Identifier	autocomplete		1104566	1					
ANR	1105317	Argument	"""dbe"""		1104566	1					
ANR	1105318	PrimaryExpression	"""dbe"""		1104566	0					
ANR	1105319	Argument	R_CORE_AUTOCMPLT_BRKP		1104566	2					
ANR	1105320	Identifier	R_CORE_AUTOCMPLT_BRKP		1104566	0					
ANR	1105321	Argument	true		1104566	3					
ANR	1105322	Identifier	true		1104566	0					
ANR	1105323	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""dbs"" , R_CORE_AUTOCMPLT_BRKP , true )"	2389:1:70980:71060	1104566	51	True				
ANR	1105324	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""dbs"" , R_CORE_AUTOCMPLT_BRKP , true )"		1104566	0					
ANR	1105325	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105326	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105327	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105328	Argument	core -> autocomplete		1104566	0					
ANR	1105329	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105330	Identifier	core		1104566	0					
ANR	1105331	Identifier	autocomplete		1104566	1					
ANR	1105332	Argument	"""dbs"""		1104566	1					
ANR	1105333	PrimaryExpression	"""dbs"""		1104566	0					
ANR	1105334	Argument	R_CORE_AUTOCMPLT_BRKP		1104566	2					
ANR	1105335	Identifier	R_CORE_AUTOCMPLT_BRKP		1104566	0					
ANR	1105336	Argument	true		1104566	3					
ANR	1105337	Identifier	true		1104566	0					
ANR	1105338	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""dbi"" , R_CORE_AUTOCMPLT_BRKP , true )"	2390:1:71063:71143	1104566	52	True				
ANR	1105339	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""dbi"" , R_CORE_AUTOCMPLT_BRKP , true )"		1104566	0					
ANR	1105340	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105341	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105342	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105343	Argument	core -> autocomplete		1104566	0					
ANR	1105344	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105345	Identifier	core		1104566	0					
ANR	1105346	Identifier	autocomplete		1104566	1					
ANR	1105347	Argument	"""dbi"""		1104566	1					
ANR	1105348	PrimaryExpression	"""dbi"""		1104566	0					
ANR	1105349	Argument	R_CORE_AUTOCMPLT_BRKP		1104566	2					
ANR	1105350	Identifier	R_CORE_AUTOCMPLT_BRKP		1104566	0					
ANR	1105351	Argument	true		1104566	3					
ANR	1105352	Identifier	true		1104566	0					
ANR	1105353	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""dbte"" , R_CORE_AUTOCMPLT_BRKP , true )"	2391:1:71146:71227	1104566	53	True				
ANR	1105354	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""dbte"" , R_CORE_AUTOCMPLT_BRKP , true )"		1104566	0					
ANR	1105355	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105356	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105357	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105358	Argument	core -> autocomplete		1104566	0					
ANR	1105359	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105360	Identifier	core		1104566	0					
ANR	1105361	Identifier	autocomplete		1104566	1					
ANR	1105362	Argument	"""dbte"""		1104566	1					
ANR	1105363	PrimaryExpression	"""dbte"""		1104566	0					
ANR	1105364	Argument	R_CORE_AUTOCMPLT_BRKP		1104566	2					
ANR	1105365	Identifier	R_CORE_AUTOCMPLT_BRKP		1104566	0					
ANR	1105366	Argument	true		1104566	3					
ANR	1105367	Identifier	true		1104566	0					
ANR	1105368	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""dbtd"" , R_CORE_AUTOCMPLT_BRKP , true )"	2392:1:71230:71311	1104566	54	True				
ANR	1105369	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""dbtd"" , R_CORE_AUTOCMPLT_BRKP , true )"		1104566	0					
ANR	1105370	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105371	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105372	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105373	Argument	core -> autocomplete		1104566	0					
ANR	1105374	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105375	Identifier	core		1104566	0					
ANR	1105376	Identifier	autocomplete		1104566	1					
ANR	1105377	Argument	"""dbtd"""		1104566	1					
ANR	1105378	PrimaryExpression	"""dbtd"""		1104566	0					
ANR	1105379	Argument	R_CORE_AUTOCMPLT_BRKP		1104566	2					
ANR	1105380	Identifier	R_CORE_AUTOCMPLT_BRKP		1104566	0					
ANR	1105381	Argument	true		1104566	3					
ANR	1105382	Identifier	true		1104566	0					
ANR	1105383	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""dbts"" , R_CORE_AUTOCMPLT_BRKP , true )"	2393:1:71314:71395	1104566	55	True				
ANR	1105384	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""dbts"" , R_CORE_AUTOCMPLT_BRKP , true )"		1104566	0					
ANR	1105385	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105386	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105387	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105388	Argument	core -> autocomplete		1104566	0					
ANR	1105389	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105390	Identifier	core		1104566	0					
ANR	1105391	Identifier	autocomplete		1104566	1					
ANR	1105392	Argument	"""dbts"""		1104566	1					
ANR	1105393	PrimaryExpression	"""dbts"""		1104566	0					
ANR	1105394	Argument	R_CORE_AUTOCMPLT_BRKP		1104566	2					
ANR	1105395	Identifier	R_CORE_AUTOCMPLT_BRKP		1104566	0					
ANR	1105396	Argument	true		1104566	3					
ANR	1105397	Identifier	true		1104566	0					
ANR	1105398	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""Pc"" , R_CORE_AUTOCMPLT_PRJT , true )"	2395:1:71413:71492	1104566	56	True				
ANR	1105399	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""Pc"" , R_CORE_AUTOCMPLT_PRJT , true )"		1104566	0					
ANR	1105400	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105401	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105402	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105403	Argument	core -> autocomplete		1104566	0					
ANR	1105404	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105405	Identifier	core		1104566	0					
ANR	1105406	Identifier	autocomplete		1104566	1					
ANR	1105407	Argument	"""Pc"""		1104566	1					
ANR	1105408	PrimaryExpression	"""Pc"""		1104566	0					
ANR	1105409	Argument	R_CORE_AUTOCMPLT_PRJT		1104566	2					
ANR	1105410	Identifier	R_CORE_AUTOCMPLT_PRJT		1104566	0					
ANR	1105411	Argument	true		1104566	3					
ANR	1105412	Identifier	true		1104566	0					
ANR	1105413	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""Pd"" , R_CORE_AUTOCMPLT_PRJT , true )"	2396:1:71495:71574	1104566	57	True				
ANR	1105414	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""Pd"" , R_CORE_AUTOCMPLT_PRJT , true )"		1104566	0					
ANR	1105415	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105416	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105417	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105418	Argument	core -> autocomplete		1104566	0					
ANR	1105419	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105420	Identifier	core		1104566	0					
ANR	1105421	Identifier	autocomplete		1104566	1					
ANR	1105422	Argument	"""Pd"""		1104566	1					
ANR	1105423	PrimaryExpression	"""Pd"""		1104566	0					
ANR	1105424	Argument	R_CORE_AUTOCMPLT_PRJT		1104566	2					
ANR	1105425	Identifier	R_CORE_AUTOCMPLT_PRJT		1104566	0					
ANR	1105426	Argument	true		1104566	3					
ANR	1105427	Identifier	true		1104566	0					
ANR	1105428	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""Pi"" , R_CORE_AUTOCMPLT_PRJT , true )"	2397:1:71577:71656	1104566	58	True				
ANR	1105429	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""Pi"" , R_CORE_AUTOCMPLT_PRJT , true )"		1104566	0					
ANR	1105430	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105431	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105432	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105433	Argument	core -> autocomplete		1104566	0					
ANR	1105434	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105435	Identifier	core		1104566	0					
ANR	1105436	Identifier	autocomplete		1104566	1					
ANR	1105437	Argument	"""Pi"""		1104566	1					
ANR	1105438	PrimaryExpression	"""Pi"""		1104566	0					
ANR	1105439	Argument	R_CORE_AUTOCMPLT_PRJT		1104566	2					
ANR	1105440	Identifier	R_CORE_AUTOCMPLT_PRJT		1104566	0					
ANR	1105441	Argument	true		1104566	3					
ANR	1105442	Identifier	true		1104566	0					
ANR	1105443	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""Po"" , R_CORE_AUTOCMPLT_PRJT , true )"	2398:1:71659:71738	1104566	59	True				
ANR	1105444	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""Po"" , R_CORE_AUTOCMPLT_PRJT , true )"		1104566	0					
ANR	1105445	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105446	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105447	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105448	Argument	core -> autocomplete		1104566	0					
ANR	1105449	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105450	Identifier	core		1104566	0					
ANR	1105451	Identifier	autocomplete		1104566	1					
ANR	1105452	Argument	"""Po"""		1104566	1					
ANR	1105453	PrimaryExpression	"""Po"""		1104566	0					
ANR	1105454	Argument	R_CORE_AUTOCMPLT_PRJT		1104566	2					
ANR	1105455	Identifier	R_CORE_AUTOCMPLT_PRJT		1104566	0					
ANR	1105456	Argument	true		1104566	3					
ANR	1105457	Identifier	true		1104566	0					
ANR	1105458	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""Ps"" , R_CORE_AUTOCMPLT_PRJT , true )"	2399:1:71741:71820	1104566	60	True				
ANR	1105459	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""Ps"" , R_CORE_AUTOCMPLT_PRJT , true )"		1104566	0					
ANR	1105460	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105461	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105462	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105463	Argument	core -> autocomplete		1104566	0					
ANR	1105464	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105465	Identifier	core		1104566	0					
ANR	1105466	Identifier	autocomplete		1104566	1					
ANR	1105467	Argument	"""Ps"""		1104566	1					
ANR	1105468	PrimaryExpression	"""Ps"""		1104566	0					
ANR	1105469	Argument	R_CORE_AUTOCMPLT_PRJT		1104566	2					
ANR	1105470	Identifier	R_CORE_AUTOCMPLT_PRJT		1104566	0					
ANR	1105471	Argument	true		1104566	3					
ANR	1105472	Identifier	true		1104566	0					
ANR	1105473	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""P-"" , R_CORE_AUTOCMPLT_PRJT , true )"	2400:1:71823:71902	1104566	61	True				
ANR	1105474	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""P-"" , R_CORE_AUTOCMPLT_PRJT , true )"		1104566	0					
ANR	1105475	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105476	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105477	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105478	Argument	core -> autocomplete		1104566	0					
ANR	1105479	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105480	Identifier	core		1104566	0					
ANR	1105481	Identifier	autocomplete		1104566	1					
ANR	1105482	Argument	"""P-"""		1104566	1					
ANR	1105483	PrimaryExpression	"""P-"""		1104566	0					
ANR	1105484	Argument	R_CORE_AUTOCMPLT_PRJT		1104566	2					
ANR	1105485	Identifier	R_CORE_AUTOCMPLT_PRJT		1104566	0					
ANR	1105486	Argument	true		1104566	3					
ANR	1105487	Identifier	true		1104566	0					
ANR	1105488	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""zs"" , R_CORE_AUTOCMPLT_ZIGN , true )"	2402:1:71923:72002	1104566	62	True				
ANR	1105489	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""zs"" , R_CORE_AUTOCMPLT_ZIGN , true )"		1104566	0					
ANR	1105490	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105491	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105492	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105493	Argument	core -> autocomplete		1104566	0					
ANR	1105494	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105495	Identifier	core		1104566	0					
ANR	1105496	Identifier	autocomplete		1104566	1					
ANR	1105497	Argument	"""zs"""		1104566	1					
ANR	1105498	PrimaryExpression	"""zs"""		1104566	0					
ANR	1105499	Argument	R_CORE_AUTOCMPLT_ZIGN		1104566	2					
ANR	1105500	Identifier	R_CORE_AUTOCMPLT_ZIGN		1104566	0					
ANR	1105501	Argument	true		1104566	3					
ANR	1105502	Identifier	true		1104566	0					
ANR	1105503	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""fs"" , R_CORE_AUTOCMPLT_FLSP , true )"	2404:1:72024:72103	1104566	63	True				
ANR	1105504	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""fs"" , R_CORE_AUTOCMPLT_FLSP , true )"		1104566	0					
ANR	1105505	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105506	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105507	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105508	Argument	core -> autocomplete		1104566	0					
ANR	1105509	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105510	Identifier	core		1104566	0					
ANR	1105511	Identifier	autocomplete		1104566	1					
ANR	1105512	Argument	"""fs"""		1104566	1					
ANR	1105513	PrimaryExpression	"""fs"""		1104566	0					
ANR	1105514	Argument	R_CORE_AUTOCMPLT_FLSP		1104566	2					
ANR	1105515	Identifier	R_CORE_AUTOCMPLT_FLSP		1104566	0					
ANR	1105516	Argument	true		1104566	3					
ANR	1105517	Identifier	true		1104566	0					
ANR	1105518	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""."" , R_CORE_AUTOCMPLT_FILE , true )"	2406:1:72123:72201	1104566	64	True				
ANR	1105519	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""."" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105520	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105521	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105522	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105523	Argument	core -> autocomplete		1104566	0					
ANR	1105524	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105525	Identifier	core		1104566	0					
ANR	1105526	Identifier	autocomplete		1104566	1					
ANR	1105527	Argument	"""."""		1104566	1					
ANR	1105528	PrimaryExpression	"""."""		1104566	0					
ANR	1105529	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105530	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105531	Argument	true		1104566	3					
ANR	1105532	Identifier	true		1104566	0					
ANR	1105533	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , "".."" , R_CORE_AUTOCMPLT_FILE , true )"	2407:1:72204:72283	1104566	65	True				
ANR	1105534	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , "".."" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105535	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105536	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105537	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105538	Argument	core -> autocomplete		1104566	0					
ANR	1105539	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105540	Identifier	core		1104566	0					
ANR	1105541	Identifier	autocomplete		1104566	1					
ANR	1105542	Argument	""".."""		1104566	1					
ANR	1105543	PrimaryExpression	""".."""		1104566	0					
ANR	1105544	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105545	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105546	Argument	true		1104566	3					
ANR	1105547	Identifier	true		1104566	0					
ANR	1105548	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , "".*"" , R_CORE_AUTOCMPLT_FILE , true )"	2408:1:72286:72365	1104566	66	True				
ANR	1105549	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , "".*"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105550	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105551	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105552	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105553	Argument	core -> autocomplete		1104566	0					
ANR	1105554	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105555	Identifier	core		1104566	0					
ANR	1105556	Identifier	autocomplete		1104566	1					
ANR	1105557	Argument	""".*"""		1104566	1					
ANR	1105558	PrimaryExpression	""".*"""		1104566	0					
ANR	1105559	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105560	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105561	Argument	true		1104566	3					
ANR	1105562	Identifier	true		1104566	0					
ANR	1105563	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""/F"" , R_CORE_AUTOCMPLT_FILE , true )"	2409:1:72368:72447	1104566	67	True				
ANR	1105564	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""/F"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105565	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105566	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105567	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105568	Argument	core -> autocomplete		1104566	0					
ANR	1105569	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105570	Identifier	core		1104566	0					
ANR	1105571	Identifier	autocomplete		1104566	1					
ANR	1105572	Argument	"""/F"""		1104566	1					
ANR	1105573	PrimaryExpression	"""/F"""		1104566	0					
ANR	1105574	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105575	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105576	Argument	true		1104566	3					
ANR	1105577	Identifier	true		1104566	0					
ANR	1105578	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""/m"" , R_CORE_AUTOCMPLT_FILE , true )"	2410:1:72450:72529	1104566	68	True				
ANR	1105579	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""/m"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105580	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105581	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105582	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105583	Argument	core -> autocomplete		1104566	0					
ANR	1105584	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105585	Identifier	core		1104566	0					
ANR	1105586	Identifier	autocomplete		1104566	1					
ANR	1105587	Argument	"""/m"""		1104566	1					
ANR	1105588	PrimaryExpression	"""/m"""		1104566	0					
ANR	1105589	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105590	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105591	Argument	true		1104566	3					
ANR	1105592	Identifier	true		1104566	0					
ANR	1105593	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""!"" , R_CORE_AUTOCMPLT_FILE , true )"	2411:1:72532:72610	1104566	69	True				
ANR	1105594	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""!"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105595	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105596	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105597	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105598	Argument	core -> autocomplete		1104566	0					
ANR	1105599	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105600	Identifier	core		1104566	0					
ANR	1105601	Identifier	autocomplete		1104566	1					
ANR	1105602	Argument	"""!"""		1104566	1					
ANR	1105603	PrimaryExpression	"""!"""		1104566	0					
ANR	1105604	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105605	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105606	Argument	true		1104566	3					
ANR	1105607	Identifier	true		1104566	0					
ANR	1105608	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""!!"" , R_CORE_AUTOCMPLT_FILE , true )"	2412:1:72613:72692	1104566	70	True				
ANR	1105609	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""!!"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105610	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105611	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105612	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105613	Argument	core -> autocomplete		1104566	0					
ANR	1105614	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105615	Identifier	core		1104566	0					
ANR	1105616	Identifier	autocomplete		1104566	1					
ANR	1105617	Argument	"""!!"""		1104566	1					
ANR	1105618	PrimaryExpression	"""!!"""		1104566	0					
ANR	1105619	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105620	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105621	Argument	true		1104566	3					
ANR	1105622	Identifier	true		1104566	0					
ANR	1105623	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""#!c"" , R_CORE_AUTOCMPLT_FILE , true )"	2413:1:72695:72775	1104566	71	True				
ANR	1105624	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""#!c"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105625	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105626	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105627	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105628	Argument	core -> autocomplete		1104566	0					
ANR	1105629	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105630	Identifier	core		1104566	0					
ANR	1105631	Identifier	autocomplete		1104566	1					
ANR	1105632	Argument	"""#!c"""		1104566	1					
ANR	1105633	PrimaryExpression	"""#!c"""		1104566	0					
ANR	1105634	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105635	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105636	Argument	true		1104566	3					
ANR	1105637	Identifier	true		1104566	0					
ANR	1105638	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""#!cpipe"" , R_CORE_AUTOCMPLT_FILE , true )"	2414:1:72778:72862	1104566	72	True				
ANR	1105639	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""#!cpipe"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105640	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105641	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105642	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105643	Argument	core -> autocomplete		1104566	0					
ANR	1105644	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105645	Identifier	core		1104566	0					
ANR	1105646	Identifier	autocomplete		1104566	1					
ANR	1105647	Argument	"""#!cpipe"""		1104566	1					
ANR	1105648	PrimaryExpression	"""#!cpipe"""		1104566	0					
ANR	1105649	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105650	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105651	Argument	true		1104566	3					
ANR	1105652	Identifier	true		1104566	0					
ANR	1105653	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""#!vala"" , R_CORE_AUTOCMPLT_FILE , true )"	2415:1:72865:72948	1104566	73	True				
ANR	1105654	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""#!vala"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105655	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105656	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105657	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105658	Argument	core -> autocomplete		1104566	0					
ANR	1105659	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105660	Identifier	core		1104566	0					
ANR	1105661	Identifier	autocomplete		1104566	1					
ANR	1105662	Argument	"""#!vala"""		1104566	1					
ANR	1105663	PrimaryExpression	"""#!vala"""		1104566	0					
ANR	1105664	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105665	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105666	Argument	true		1104566	3					
ANR	1105667	Identifier	true		1104566	0					
ANR	1105668	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""#!rust"" , R_CORE_AUTOCMPLT_FILE , true )"	2416:1:72951:73034	1104566	74	True				
ANR	1105669	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""#!rust"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105670	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105671	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105672	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105673	Argument	core -> autocomplete		1104566	0					
ANR	1105674	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105675	Identifier	core		1104566	0					
ANR	1105676	Identifier	autocomplete		1104566	1					
ANR	1105677	Argument	"""#!rust"""		1104566	1					
ANR	1105678	PrimaryExpression	"""#!rust"""		1104566	0					
ANR	1105679	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105680	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105681	Argument	true		1104566	3					
ANR	1105682	Identifier	true		1104566	0					
ANR	1105683	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""#!zig"" , R_CORE_AUTOCMPLT_FILE , true )"	2417:1:73037:73119	1104566	75	True				
ANR	1105684	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""#!zig"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105685	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105686	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105687	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105688	Argument	core -> autocomplete		1104566	0					
ANR	1105689	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105690	Identifier	core		1104566	0					
ANR	1105691	Identifier	autocomplete		1104566	1					
ANR	1105692	Argument	"""#!zig"""		1104566	1					
ANR	1105693	PrimaryExpression	"""#!zig"""		1104566	0					
ANR	1105694	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105695	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105696	Argument	true		1104566	3					
ANR	1105697	Identifier	true		1104566	0					
ANR	1105698	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""#!pipe"" , R_CORE_AUTOCMPLT_FILE , true )"	2418:1:73122:73205	1104566	76	True				
ANR	1105699	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""#!pipe"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105700	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105701	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105702	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105703	Argument	core -> autocomplete		1104566	0					
ANR	1105704	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105705	Identifier	core		1104566	0					
ANR	1105706	Identifier	autocomplete		1104566	1					
ANR	1105707	Argument	"""#!pipe"""		1104566	1					
ANR	1105708	PrimaryExpression	"""#!pipe"""		1104566	0					
ANR	1105709	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105710	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105711	Argument	true		1104566	3					
ANR	1105712	Identifier	true		1104566	0					
ANR	1105713	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""#!python"" , R_CORE_AUTOCMPLT_FILE , true )"	2419:1:73208:73293	1104566	77	True				
ANR	1105714	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""#!python"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105715	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105716	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105717	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105718	Argument	core -> autocomplete		1104566	0					
ANR	1105719	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105720	Identifier	core		1104566	0					
ANR	1105721	Identifier	autocomplete		1104566	1					
ANR	1105722	Argument	"""#!python"""		1104566	1					
ANR	1105723	PrimaryExpression	"""#!python"""		1104566	0					
ANR	1105724	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105725	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105726	Argument	true		1104566	3					
ANR	1105727	Identifier	true		1104566	0					
ANR	1105728	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""aeli"" , R_CORE_AUTOCMPLT_FILE , true )"	2420:1:73296:73377	1104566	78	True				
ANR	1105729	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""aeli"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105730	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105731	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105732	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105733	Argument	core -> autocomplete		1104566	0					
ANR	1105734	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105735	Identifier	core		1104566	0					
ANR	1105736	Identifier	autocomplete		1104566	1					
ANR	1105737	Argument	"""aeli"""		1104566	1					
ANR	1105738	PrimaryExpression	"""aeli"""		1104566	0					
ANR	1105739	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105740	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105741	Argument	true		1104566	3					
ANR	1105742	Identifier	true		1104566	0					
ANR	1105743	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""arp"" , R_CORE_AUTOCMPLT_FILE , true )"	2421:1:73380:73460	1104566	79	True				
ANR	1105744	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""arp"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105745	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105746	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105747	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105748	Argument	core -> autocomplete		1104566	0					
ANR	1105749	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105750	Identifier	core		1104566	0					
ANR	1105751	Identifier	autocomplete		1104566	1					
ANR	1105752	Argument	"""arp"""		1104566	1					
ANR	1105753	PrimaryExpression	"""arp"""		1104566	0					
ANR	1105754	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105755	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105756	Argument	true		1104566	3					
ANR	1105757	Identifier	true		1104566	0					
ANR	1105758	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""cf"" , R_CORE_AUTOCMPLT_FILE , true )"	2422:1:73463:73542	1104566	80	True				
ANR	1105759	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""cf"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105760	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105761	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105762	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105763	Argument	core -> autocomplete		1104566	0					
ANR	1105764	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105765	Identifier	core		1104566	0					
ANR	1105766	Identifier	autocomplete		1104566	1					
ANR	1105767	Argument	"""cf"""		1104566	1					
ANR	1105768	PrimaryExpression	"""cf"""		1104566	0					
ANR	1105769	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105770	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105771	Argument	true		1104566	3					
ANR	1105772	Identifier	true		1104566	0					
ANR	1105773	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""dg"" , R_CORE_AUTOCMPLT_FILE , true )"	2423:1:73545:73624	1104566	81	True				
ANR	1105774	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""dg"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105775	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105776	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105777	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105778	Argument	core -> autocomplete		1104566	0					
ANR	1105779	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105780	Identifier	core		1104566	0					
ANR	1105781	Identifier	autocomplete		1104566	1					
ANR	1105782	Argument	"""dg"""		1104566	1					
ANR	1105783	PrimaryExpression	"""dg"""		1104566	0					
ANR	1105784	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105785	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105786	Argument	true		1104566	3					
ANR	1105787	Identifier	true		1104566	0					
ANR	1105788	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""dmd"" , R_CORE_AUTOCMPLT_FILE , true )"	2424:1:73627:73707	1104566	82	True				
ANR	1105789	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""dmd"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105790	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105791	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105792	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105793	Argument	core -> autocomplete		1104566	0					
ANR	1105794	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105795	Identifier	core		1104566	0					
ANR	1105796	Identifier	autocomplete		1104566	1					
ANR	1105797	Argument	"""dmd"""		1104566	1					
ANR	1105798	PrimaryExpression	"""dmd"""		1104566	0					
ANR	1105799	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105800	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105801	Argument	true		1104566	3					
ANR	1105802	Identifier	true		1104566	0					
ANR	1105803	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""drp"" , R_CORE_AUTOCMPLT_FILE , true )"	2425:1:73710:73790	1104566	83	True				
ANR	1105804	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""drp"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105805	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105806	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105807	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105808	Argument	core -> autocomplete		1104566	0					
ANR	1105809	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105810	Identifier	core		1104566	0					
ANR	1105811	Identifier	autocomplete		1104566	1					
ANR	1105812	Argument	"""drp"""		1104566	1					
ANR	1105813	PrimaryExpression	"""drp"""		1104566	0					
ANR	1105814	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105815	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105816	Argument	true		1104566	3					
ANR	1105817	Identifier	true		1104566	0					
ANR	1105818	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""o"" , R_CORE_AUTOCMPLT_FILE , true )"	2426:1:73793:73871	1104566	84	True				
ANR	1105819	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""o"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105820	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105821	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105822	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105823	Argument	core -> autocomplete		1104566	0					
ANR	1105824	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105825	Identifier	core		1104566	0					
ANR	1105826	Identifier	autocomplete		1104566	1					
ANR	1105827	Argument	"""o"""		1104566	1					
ANR	1105828	PrimaryExpression	"""o"""		1104566	0					
ANR	1105829	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105830	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105831	Argument	true		1104566	3					
ANR	1105832	Identifier	true		1104566	0					
ANR	1105833	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""idp"" , R_CORE_AUTOCMPLT_FILE , true )"	2427:1:73874:73954	1104566	85	True				
ANR	1105834	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""idp"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105835	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105836	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105837	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105838	Argument	core -> autocomplete		1104566	0					
ANR	1105839	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105840	Identifier	core		1104566	0					
ANR	1105841	Identifier	autocomplete		1104566	1					
ANR	1105842	Argument	"""idp"""		1104566	1					
ANR	1105843	PrimaryExpression	"""idp"""		1104566	0					
ANR	1105844	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105845	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105846	Argument	true		1104566	3					
ANR	1105847	Identifier	true		1104566	0					
ANR	1105848	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""idpi"" , R_CORE_AUTOCMPLT_FILE , true )"	2428:1:73957:74038	1104566	86	True				
ANR	1105849	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""idpi"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105850	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105851	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105852	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105853	Argument	core -> autocomplete		1104566	0					
ANR	1105854	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105855	Identifier	core		1104566	0					
ANR	1105856	Identifier	autocomplete		1104566	1					
ANR	1105857	Argument	"""idpi"""		1104566	1					
ANR	1105858	PrimaryExpression	"""idpi"""		1104566	0					
ANR	1105859	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105860	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105861	Argument	true		1104566	3					
ANR	1105862	Identifier	true		1104566	0					
ANR	1105863	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""L"" , R_CORE_AUTOCMPLT_FILE , true )"	2429:1:74041:74119	1104566	87	True				
ANR	1105864	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""L"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105865	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105866	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105867	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105868	Argument	core -> autocomplete		1104566	0					
ANR	1105869	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105870	Identifier	core		1104566	0					
ANR	1105871	Identifier	autocomplete		1104566	1					
ANR	1105872	Argument	"""L"""		1104566	1					
ANR	1105873	PrimaryExpression	"""L"""		1104566	0					
ANR	1105874	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105875	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105876	Argument	true		1104566	3					
ANR	1105877	Identifier	true		1104566	0					
ANR	1105878	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""obf"" , R_CORE_AUTOCMPLT_FILE , true )"	2430:1:74122:74202	1104566	88	True				
ANR	1105879	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""obf"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105880	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105881	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105882	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105883	Argument	core -> autocomplete		1104566	0					
ANR	1105884	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105885	Identifier	core		1104566	0					
ANR	1105886	Identifier	autocomplete		1104566	1					
ANR	1105887	Argument	"""obf"""		1104566	1					
ANR	1105888	PrimaryExpression	"""obf"""		1104566	0					
ANR	1105889	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105890	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105891	Argument	true		1104566	3					
ANR	1105892	Identifier	true		1104566	0					
ANR	1105893	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""o+"" , R_CORE_AUTOCMPLT_FILE , true )"	2431:1:74205:74284	1104566	89	True				
ANR	1105894	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""o+"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105895	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105896	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105897	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105898	Argument	core -> autocomplete		1104566	0					
ANR	1105899	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105900	Identifier	core		1104566	0					
ANR	1105901	Identifier	autocomplete		1104566	1					
ANR	1105902	Argument	"""o+"""		1104566	1					
ANR	1105903	PrimaryExpression	"""o+"""		1104566	0					
ANR	1105904	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105905	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105906	Argument	true		1104566	3					
ANR	1105907	Identifier	true		1104566	0					
ANR	1105908	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""oc"" , R_CORE_AUTOCMPLT_FILE , true )"	2432:1:74287:74366	1104566	90	True				
ANR	1105909	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""oc"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105910	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105911	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105912	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105913	Argument	core -> autocomplete		1104566	0					
ANR	1105914	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105915	Identifier	core		1104566	0					
ANR	1105916	Identifier	autocomplete		1104566	1					
ANR	1105917	Argument	"""oc"""		1104566	1					
ANR	1105918	PrimaryExpression	"""oc"""		1104566	0					
ANR	1105919	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105920	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105921	Argument	true		1104566	3					
ANR	1105922	Identifier	true		1104566	0					
ANR	1105923	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""r2"" , R_CORE_AUTOCMPLT_FILE , true )"	2433:1:74369:74448	1104566	91	True				
ANR	1105924	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""r2"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105925	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105926	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105927	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105928	Argument	core -> autocomplete		1104566	0					
ANR	1105929	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105930	Identifier	core		1104566	0					
ANR	1105931	Identifier	autocomplete		1104566	1					
ANR	1105932	Argument	"""r2"""		1104566	1					
ANR	1105933	PrimaryExpression	"""r2"""		1104566	0					
ANR	1105934	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105935	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105936	Argument	true		1104566	3					
ANR	1105937	Identifier	true		1104566	0					
ANR	1105938	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""rabin2"" , R_CORE_AUTOCMPLT_FILE , true )"	2434:1:74451:74534	1104566	92	True				
ANR	1105939	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""rabin2"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105940	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105941	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105942	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105943	Argument	core -> autocomplete		1104566	0					
ANR	1105944	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105945	Identifier	core		1104566	0					
ANR	1105946	Identifier	autocomplete		1104566	1					
ANR	1105947	Argument	"""rabin2"""		1104566	1					
ANR	1105948	PrimaryExpression	"""rabin2"""		1104566	0					
ANR	1105949	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105950	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105951	Argument	true		1104566	3					
ANR	1105952	Identifier	true		1104566	0					
ANR	1105953	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""rasm2"" , R_CORE_AUTOCMPLT_FILE , true )"	2435:1:74537:74619	1104566	93	True				
ANR	1105954	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""rasm2"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105955	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105956	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105957	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105958	Argument	core -> autocomplete		1104566	0					
ANR	1105959	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105960	Identifier	core		1104566	0					
ANR	1105961	Identifier	autocomplete		1104566	1					
ANR	1105962	Argument	"""rasm2"""		1104566	1					
ANR	1105963	PrimaryExpression	"""rasm2"""		1104566	0					
ANR	1105964	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105965	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105966	Argument	true		1104566	3					
ANR	1105967	Identifier	true		1104566	0					
ANR	1105968	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""rahash2"" , R_CORE_AUTOCMPLT_FILE , true )"	2436:1:74622:74706	1104566	94	True				
ANR	1105969	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""rahash2"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105970	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105971	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105972	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105973	Argument	core -> autocomplete		1104566	0					
ANR	1105974	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105975	Identifier	core		1104566	0					
ANR	1105976	Identifier	autocomplete		1104566	1					
ANR	1105977	Argument	"""rahash2"""		1104566	1					
ANR	1105978	PrimaryExpression	"""rahash2"""		1104566	0					
ANR	1105979	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105980	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105981	Argument	true		1104566	3					
ANR	1105982	Identifier	true		1104566	0					
ANR	1105983	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""rax2"" , R_CORE_AUTOCMPLT_FILE , true )"	2437:1:74709:74790	1104566	95	True				
ANR	1105984	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""rax2"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1105985	Callee	r_core_autocomplete_add		1104566	0					
ANR	1105986	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1105987	ArgumentList	core -> autocomplete		1104566	1					
ANR	1105988	Argument	core -> autocomplete		1104566	0					
ANR	1105989	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1105990	Identifier	core		1104566	0					
ANR	1105991	Identifier	autocomplete		1104566	1					
ANR	1105992	Argument	"""rax2"""		1104566	1					
ANR	1105993	PrimaryExpression	"""rax2"""		1104566	0					
ANR	1105994	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1105995	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1105996	Argument	true		1104566	3					
ANR	1105997	Identifier	true		1104566	0					
ANR	1105998	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""rafind2"" , R_CORE_AUTOCMPLT_FILE , true )"	2438:1:74793:74877	1104566	96	True				
ANR	1105999	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""rafind2"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106000	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106001	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106002	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106003	Argument	core -> autocomplete		1104566	0					
ANR	1106004	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106005	Identifier	core		1104566	0					
ANR	1106006	Identifier	autocomplete		1104566	1					
ANR	1106007	Argument	"""rafind2"""		1104566	1					
ANR	1106008	PrimaryExpression	"""rafind2"""		1104566	0					
ANR	1106009	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106010	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106011	Argument	true		1104566	3					
ANR	1106012	Identifier	true		1104566	0					
ANR	1106013	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""cd"" , R_CORE_AUTOCMPLT_FILE , true )"	2439:1:74880:74959	1104566	97	True				
ANR	1106014	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""cd"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106015	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106016	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106017	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106018	Argument	core -> autocomplete		1104566	0					
ANR	1106019	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106020	Identifier	core		1104566	0					
ANR	1106021	Identifier	autocomplete		1104566	1					
ANR	1106022	Argument	"""cd"""		1104566	1					
ANR	1106023	PrimaryExpression	"""cd"""		1104566	0					
ANR	1106024	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106025	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106026	Argument	true		1104566	3					
ANR	1106027	Identifier	true		1104566	0					
ANR	1106028	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""on"" , R_CORE_AUTOCMPLT_FILE , true )"	2440:1:74962:75041	1104566	98	True				
ANR	1106029	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""on"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106030	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106031	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106032	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106033	Argument	core -> autocomplete		1104566	0					
ANR	1106034	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106035	Identifier	core		1104566	0					
ANR	1106036	Identifier	autocomplete		1104566	1					
ANR	1106037	Argument	"""on"""		1104566	1					
ANR	1106038	PrimaryExpression	"""on"""		1104566	0					
ANR	1106039	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106040	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106041	Argument	true		1104566	3					
ANR	1106042	Identifier	true		1104566	0					
ANR	1106043	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""op"" , R_CORE_AUTOCMPLT_FILE , true )"	2441:1:75044:75123	1104566	99	True				
ANR	1106044	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""op"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106045	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106046	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106047	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106048	Argument	core -> autocomplete		1104566	0					
ANR	1106049	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106050	Identifier	core		1104566	0					
ANR	1106051	Identifier	autocomplete		1104566	1					
ANR	1106052	Argument	"""op"""		1104566	1					
ANR	1106053	PrimaryExpression	"""op"""		1104566	0					
ANR	1106054	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106055	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106056	Argument	true		1104566	3					
ANR	1106057	Identifier	true		1104566	0					
ANR	1106058	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""wf"" , R_CORE_AUTOCMPLT_FILE , true )"	2442:1:75126:75205	1104566	100	True				
ANR	1106059	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""wf"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106060	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106061	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106062	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106063	Argument	core -> autocomplete		1104566	0					
ANR	1106064	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106065	Identifier	core		1104566	0					
ANR	1106066	Identifier	autocomplete		1104566	1					
ANR	1106067	Argument	"""wf"""		1104566	1					
ANR	1106068	PrimaryExpression	"""wf"""		1104566	0					
ANR	1106069	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106070	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106071	Argument	true		1104566	3					
ANR	1106072	Identifier	true		1104566	0					
ANR	1106073	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""rm"" , R_CORE_AUTOCMPLT_FILE , true )"	2443:1:75208:75287	1104566	101	True				
ANR	1106074	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""rm"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106075	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106076	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106077	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106078	Argument	core -> autocomplete		1104566	0					
ANR	1106079	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106080	Identifier	core		1104566	0					
ANR	1106081	Identifier	autocomplete		1104566	1					
ANR	1106082	Argument	"""rm"""		1104566	1					
ANR	1106083	PrimaryExpression	"""rm"""		1104566	0					
ANR	1106084	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106085	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106086	Argument	true		1104566	3					
ANR	1106087	Identifier	true		1104566	0					
ANR	1106088	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""wF"" , R_CORE_AUTOCMPLT_FILE , true )"	2444:1:75290:75369	1104566	102	True				
ANR	1106089	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""wF"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106090	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106091	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106092	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106093	Argument	core -> autocomplete		1104566	0					
ANR	1106094	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106095	Identifier	core		1104566	0					
ANR	1106096	Identifier	autocomplete		1104566	1					
ANR	1106097	Argument	"""wF"""		1104566	1					
ANR	1106098	PrimaryExpression	"""wF"""		1104566	0					
ANR	1106099	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106100	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106101	Argument	true		1104566	3					
ANR	1106102	Identifier	true		1104566	0					
ANR	1106103	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""wp"" , R_CORE_AUTOCMPLT_FILE , true )"	2445:1:75372:75451	1104566	103	True				
ANR	1106104	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""wp"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106105	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106106	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106107	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106108	Argument	core -> autocomplete		1104566	0					
ANR	1106109	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106110	Identifier	core		1104566	0					
ANR	1106111	Identifier	autocomplete		1104566	1					
ANR	1106112	Argument	"""wp"""		1104566	1					
ANR	1106113	PrimaryExpression	"""wp"""		1104566	0					
ANR	1106114	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106115	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106116	Argument	true		1104566	3					
ANR	1106117	Identifier	true		1104566	0					
ANR	1106118	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""Sd"" , R_CORE_AUTOCMPLT_FILE , true )"	2446:1:75454:75533	1104566	104	True				
ANR	1106119	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""Sd"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106120	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106121	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106122	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106123	Argument	core -> autocomplete		1104566	0					
ANR	1106124	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106125	Identifier	core		1104566	0					
ANR	1106126	Identifier	autocomplete		1104566	1					
ANR	1106127	Argument	"""Sd"""		1104566	1					
ANR	1106128	PrimaryExpression	"""Sd"""		1104566	0					
ANR	1106129	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106130	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106131	Argument	true		1104566	3					
ANR	1106132	Identifier	true		1104566	0					
ANR	1106133	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""Sl"" , R_CORE_AUTOCMPLT_FILE , true )"	2447:1:75536:75615	1104566	105	True				
ANR	1106134	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""Sl"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106135	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106136	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106137	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106138	Argument	core -> autocomplete		1104566	0					
ANR	1106139	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106140	Identifier	core		1104566	0					
ANR	1106141	Identifier	autocomplete		1104566	1					
ANR	1106142	Argument	"""Sl"""		1104566	1					
ANR	1106143	PrimaryExpression	"""Sl"""		1104566	0					
ANR	1106144	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106145	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106146	Argument	true		1104566	3					
ANR	1106147	Identifier	true		1104566	0					
ANR	1106148	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""to"" , R_CORE_AUTOCMPLT_FILE , true )"	2448:1:75618:75697	1104566	106	True				
ANR	1106149	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""to"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106150	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106151	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106152	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106153	Argument	core -> autocomplete		1104566	0					
ANR	1106154	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106155	Identifier	core		1104566	0					
ANR	1106156	Identifier	autocomplete		1104566	1					
ANR	1106157	Argument	"""to"""		1104566	1					
ANR	1106158	PrimaryExpression	"""to"""		1104566	0					
ANR	1106159	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106160	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106161	Argument	true		1104566	3					
ANR	1106162	Identifier	true		1104566	0					
ANR	1106163	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""pm"" , R_CORE_AUTOCMPLT_FILE , true )"	2449:1:75700:75779	1104566	107	True				
ANR	1106164	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""pm"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106165	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106166	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106167	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106168	Argument	core -> autocomplete		1104566	0					
ANR	1106169	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106170	Identifier	core		1104566	0					
ANR	1106171	Identifier	autocomplete		1104566	1					
ANR	1106172	Argument	"""pm"""		1104566	1					
ANR	1106173	PrimaryExpression	"""pm"""		1104566	0					
ANR	1106174	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106175	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106176	Argument	true		1104566	3					
ANR	1106177	Identifier	true		1104566	0					
ANR	1106178	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""/m"" , R_CORE_AUTOCMPLT_FILE , true )"	2450:1:75782:75861	1104566	108	True				
ANR	1106179	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""/m"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106180	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106181	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106182	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106183	Argument	core -> autocomplete		1104566	0					
ANR	1106184	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106185	Identifier	core		1104566	0					
ANR	1106186	Identifier	autocomplete		1104566	1					
ANR	1106187	Argument	"""/m"""		1104566	1					
ANR	1106188	PrimaryExpression	"""/m"""		1104566	0					
ANR	1106189	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106190	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106191	Argument	true		1104566	3					
ANR	1106192	Identifier	true		1104566	0					
ANR	1106193	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""zos"" , R_CORE_AUTOCMPLT_FILE , true )"	2451:1:75864:75944	1104566	109	True				
ANR	1106194	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""zos"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106195	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106196	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106197	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106198	Argument	core -> autocomplete		1104566	0					
ANR	1106199	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106200	Identifier	core		1104566	0					
ANR	1106201	Identifier	autocomplete		1104566	1					
ANR	1106202	Argument	"""zos"""		1104566	1					
ANR	1106203	PrimaryExpression	"""zos"""		1104566	0					
ANR	1106204	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106205	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106206	Argument	true		1104566	3					
ANR	1106207	Identifier	true		1104566	0					
ANR	1106208	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""zfd"" , R_CORE_AUTOCMPLT_FILE , true )"	2452:1:75947:76027	1104566	110	True				
ANR	1106209	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""zfd"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106210	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106211	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106212	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106213	Argument	core -> autocomplete		1104566	0					
ANR	1106214	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106215	Identifier	core		1104566	0					
ANR	1106216	Identifier	autocomplete		1104566	1					
ANR	1106217	Argument	"""zfd"""		1104566	1					
ANR	1106218	PrimaryExpression	"""zfd"""		1104566	0					
ANR	1106219	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106220	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106221	Argument	true		1104566	3					
ANR	1106222	Identifier	true		1104566	0					
ANR	1106223	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""zfs"" , R_CORE_AUTOCMPLT_FILE , true )"	2453:1:76030:76110	1104566	111	True				
ANR	1106224	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""zfs"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106225	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106226	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106227	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106228	Argument	core -> autocomplete		1104566	0					
ANR	1106229	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106230	Identifier	core		1104566	0					
ANR	1106231	Identifier	autocomplete		1104566	1					
ANR	1106232	Argument	"""zfs"""		1104566	1					
ANR	1106233	PrimaryExpression	"""zfs"""		1104566	0					
ANR	1106234	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106235	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106236	Argument	true		1104566	3					
ANR	1106237	Identifier	true		1104566	0					
ANR	1106238	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""zfz"" , R_CORE_AUTOCMPLT_FILE , true )"	2454:1:76113:76193	1104566	112	True				
ANR	1106239	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""zfz"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106240	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106241	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106242	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106243	Argument	core -> autocomplete		1104566	0					
ANR	1106244	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106245	Identifier	core		1104566	0					
ANR	1106246	Identifier	autocomplete		1104566	1					
ANR	1106247	Argument	"""zfz"""		1104566	1					
ANR	1106248	PrimaryExpression	"""zfz"""		1104566	0					
ANR	1106249	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106250	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106251	Argument	true		1104566	3					
ANR	1106252	Identifier	true		1104566	0					
ANR	1106253	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""cat"" , R_CORE_AUTOCMPLT_FILE , true )"	2455:1:76196:76276	1104566	113	True				
ANR	1106254	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""cat"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106255	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106256	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106257	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106258	Argument	core -> autocomplete		1104566	0					
ANR	1106259	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106260	Identifier	core		1104566	0					
ANR	1106261	Identifier	autocomplete		1104566	1					
ANR	1106262	Argument	"""cat"""		1104566	1					
ANR	1106263	PrimaryExpression	"""cat"""		1104566	0					
ANR	1106264	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106265	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106266	Argument	true		1104566	3					
ANR	1106267	Identifier	true		1104566	0					
ANR	1106268	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""wta"" , R_CORE_AUTOCMPLT_FILE , true )"	2456:1:76279:76359	1104566	114	True				
ANR	1106269	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""wta"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106270	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106271	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106272	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106273	Argument	core -> autocomplete		1104566	0					
ANR	1106274	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106275	Identifier	core		1104566	0					
ANR	1106276	Identifier	autocomplete		1104566	1					
ANR	1106277	Argument	"""wta"""		1104566	1					
ANR	1106278	PrimaryExpression	"""wta"""		1104566	0					
ANR	1106279	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106280	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106281	Argument	true		1104566	3					
ANR	1106282	Identifier	true		1104566	0					
ANR	1106283	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""wtf"" , R_CORE_AUTOCMPLT_FILE , true )"	2457:1:76362:76442	1104566	115	True				
ANR	1106284	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""wtf"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106285	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106286	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106287	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106288	Argument	core -> autocomplete		1104566	0					
ANR	1106289	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106290	Identifier	core		1104566	0					
ANR	1106291	Identifier	autocomplete		1104566	1					
ANR	1106292	Argument	"""wtf"""		1104566	1					
ANR	1106293	PrimaryExpression	"""wtf"""		1104566	0					
ANR	1106294	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106295	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106296	Argument	true		1104566	3					
ANR	1106297	Identifier	true		1104566	0					
ANR	1106298	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""wxf"" , R_CORE_AUTOCMPLT_FILE , true )"	2458:1:76445:76525	1104566	116	True				
ANR	1106299	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""wxf"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106300	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106301	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106302	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106303	Argument	core -> autocomplete		1104566	0					
ANR	1106304	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106305	Identifier	core		1104566	0					
ANR	1106306	Identifier	autocomplete		1104566	1					
ANR	1106307	Argument	"""wxf"""		1104566	1					
ANR	1106308	PrimaryExpression	"""wxf"""		1104566	0					
ANR	1106309	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106310	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106311	Argument	true		1104566	3					
ANR	1106312	Identifier	true		1104566	0					
ANR	1106313	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""dml"" , R_CORE_AUTOCMPLT_FILE , true )"	2459:1:76528:76608	1104566	117	True				
ANR	1106314	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""dml"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106315	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106316	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106317	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106318	Argument	core -> autocomplete		1104566	0					
ANR	1106319	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106320	Identifier	core		1104566	0					
ANR	1106321	Identifier	autocomplete		1104566	1					
ANR	1106322	Argument	"""dml"""		1104566	1					
ANR	1106323	PrimaryExpression	"""dml"""		1104566	0					
ANR	1106324	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106325	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106326	Argument	true		1104566	3					
ANR	1106327	Identifier	true		1104566	0					
ANR	1106328	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""vim"" , R_CORE_AUTOCMPLT_FILE , true )"	2460:1:76611:76691	1104566	118	True				
ANR	1106329	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""vim"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106330	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106331	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106332	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106333	Argument	core -> autocomplete		1104566	0					
ANR	1106334	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106335	Identifier	core		1104566	0					
ANR	1106336	Identifier	autocomplete		1104566	1					
ANR	1106337	Argument	"""vim"""		1104566	1					
ANR	1106338	PrimaryExpression	"""vim"""		1104566	0					
ANR	1106339	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106340	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106341	Argument	true		1104566	3					
ANR	1106342	Identifier	true		1104566	0					
ANR	1106343	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""less"" , R_CORE_AUTOCMPLT_FILE , true )"	2461:1:76694:76775	1104566	119	True				
ANR	1106344	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""less"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106345	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106346	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106347	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106348	Argument	core -> autocomplete		1104566	0					
ANR	1106349	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106350	Identifier	core		1104566	0					
ANR	1106351	Identifier	autocomplete		1104566	1					
ANR	1106352	Argument	"""less"""		1104566	1					
ANR	1106353	PrimaryExpression	"""less"""		1104566	0					
ANR	1106354	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106355	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106356	Argument	true		1104566	3					
ANR	1106357	Identifier	true		1104566	0					
ANR	1106358	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""head"" , R_CORE_AUTOCMPLT_FILE , true )"	2462:1:76778:76859	1104566	120	True				
ANR	1106359	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""head"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106360	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106361	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106362	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106363	Argument	core -> autocomplete		1104566	0					
ANR	1106364	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106365	Identifier	core		1104566	0					
ANR	1106366	Identifier	autocomplete		1104566	1					
ANR	1106367	Argument	"""head"""		1104566	1					
ANR	1106368	PrimaryExpression	"""head"""		1104566	0					
ANR	1106369	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106370	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106371	Argument	true		1104566	3					
ANR	1106372	Identifier	true		1104566	0					
ANR	1106373	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""tail"" , R_CORE_AUTOCMPLT_FILE , true )"	2463:1:76862:76943	1104566	121	True				
ANR	1106374	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""tail"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106375	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106376	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106377	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106378	Argument	core -> autocomplete		1104566	0					
ANR	1106379	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106380	Identifier	core		1104566	0					
ANR	1106381	Identifier	autocomplete		1104566	1					
ANR	1106382	Argument	"""tail"""		1104566	1					
ANR	1106383	PrimaryExpression	"""tail"""		1104566	0					
ANR	1106384	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106385	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106386	Argument	true		1104566	3					
ANR	1106387	Identifier	true		1104566	0					
ANR	1106388	ExpressionStatement	"r_core_autocomplete_add ( r_core_autocomplete_add ( core -> autocomplete , ""ls"" , R_CORE_AUTOCMPLT_DFLT , true ) , ""-l"" , R_CORE_AUTOCMPLT_FILE , true )"	2464:1:76946:77086	1104566	122	True				
ANR	1106389	CallExpression	"r_core_autocomplete_add ( r_core_autocomplete_add ( core -> autocomplete , ""ls"" , R_CORE_AUTOCMPLT_DFLT , true ) , ""-l"" , R_CORE_AUTOCMPLT_FILE , true )"		1104566	0					
ANR	1106390	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106391	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106392	ArgumentList	"r_core_autocomplete_add ( core -> autocomplete , ""ls"" , R_CORE_AUTOCMPLT_DFLT , true )"		1104566	1					
ANR	1106393	Argument	"r_core_autocomplete_add ( core -> autocomplete , ""ls"" , R_CORE_AUTOCMPLT_DFLT , true )"		1104566	0					
ANR	1106394	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""ls"" , R_CORE_AUTOCMPLT_DFLT , true )"		1104566	0					
ANR	1106395	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106396	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106397	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106398	Argument	core -> autocomplete		1104566	0					
ANR	1106399	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106400	Identifier	core		1104566	0					
ANR	1106401	Identifier	autocomplete		1104566	1					
ANR	1106402	Argument	"""ls"""		1104566	1					
ANR	1106403	PrimaryExpression	"""ls"""		1104566	0					
ANR	1106404	Argument	R_CORE_AUTOCMPLT_DFLT		1104566	2					
ANR	1106405	Identifier	R_CORE_AUTOCMPLT_DFLT		1104566	0					
ANR	1106406	Argument	true		1104566	3					
ANR	1106407	Identifier	true		1104566	0					
ANR	1106408	Argument	"""-l"""		1104566	1					
ANR	1106409	PrimaryExpression	"""-l"""		1104566	0					
ANR	1106410	Argument	R_CORE_AUTOCMPLT_FILE		1104566	2					
ANR	1106411	Identifier	R_CORE_AUTOCMPLT_FILE		1104566	0					
ANR	1106412	Argument	true		1104566	3					
ANR	1106413	Identifier	true		1104566	0					
ANR	1106414	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , "".("" , R_CORE_AUTOCMPLT_MACR , true )"	2466:1:77103:77182	1104566	123	True				
ANR	1106415	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , "".("" , R_CORE_AUTOCMPLT_MACR , true )"		1104566	0					
ANR	1106416	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106417	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106418	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106419	Argument	core -> autocomplete		1104566	0					
ANR	1106420	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106421	Identifier	core		1104566	0					
ANR	1106422	Identifier	autocomplete		1104566	1					
ANR	1106423	Argument	""".("""		1104566	1					
ANR	1106424	PrimaryExpression	""".("""		1104566	0					
ANR	1106425	Argument	R_CORE_AUTOCMPLT_MACR		1104566	2					
ANR	1106426	Identifier	R_CORE_AUTOCMPLT_MACR		1104566	0					
ANR	1106427	Argument	true		1104566	3					
ANR	1106428	Identifier	true		1104566	0					
ANR	1106429	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""(-"" , R_CORE_AUTOCMPLT_MACR , true )"	2467:1:77185:77264	1104566	124	True				
ANR	1106430	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""(-"" , R_CORE_AUTOCMPLT_MACR , true )"		1104566	0					
ANR	1106431	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106432	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106433	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106434	Argument	core -> autocomplete		1104566	0					
ANR	1106435	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106436	Identifier	core		1104566	0					
ANR	1106437	Identifier	autocomplete		1104566	1					
ANR	1106438	Argument	"""(-"""		1104566	1					
ANR	1106439	PrimaryExpression	"""(-"""		1104566	0					
ANR	1106440	Argument	R_CORE_AUTOCMPLT_MACR		1104566	2					
ANR	1106441	Identifier	R_CORE_AUTOCMPLT_MACR		1104566	0					
ANR	1106442	Argument	true		1104566	3					
ANR	1106443	Identifier	true		1104566	0					
ANR	1106444	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""md"" , R_CORE_AUTOCMPLT_MS , true )"	2469:1:77284:77361	1104566	125	True				
ANR	1106445	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""md"" , R_CORE_AUTOCMPLT_MS , true )"		1104566	0					
ANR	1106446	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106447	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106448	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106449	Argument	core -> autocomplete		1104566	0					
ANR	1106450	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106451	Identifier	core		1104566	0					
ANR	1106452	Identifier	autocomplete		1104566	1					
ANR	1106453	Argument	"""md"""		1104566	1					
ANR	1106454	PrimaryExpression	"""md"""		1104566	0					
ANR	1106455	Argument	R_CORE_AUTOCMPLT_MS		1104566	2					
ANR	1106456	Identifier	R_CORE_AUTOCMPLT_MS		1104566	0					
ANR	1106457	Argument	true		1104566	3					
ANR	1106458	Identifier	true		1104566	0					
ANR	1106459	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""mg"" , R_CORE_AUTOCMPLT_MS , true )"	2470:1:77364:77441	1104566	126	True				
ANR	1106460	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""mg"" , R_CORE_AUTOCMPLT_MS , true )"		1104566	0					
ANR	1106461	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106462	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106463	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106464	Argument	core -> autocomplete		1104566	0					
ANR	1106465	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106466	Identifier	core		1104566	0					
ANR	1106467	Identifier	autocomplete		1104566	1					
ANR	1106468	Argument	"""mg"""		1104566	1					
ANR	1106469	PrimaryExpression	"""mg"""		1104566	0					
ANR	1106470	Argument	R_CORE_AUTOCMPLT_MS		1104566	2					
ANR	1106471	Identifier	R_CORE_AUTOCMPLT_MS		1104566	0					
ANR	1106472	Argument	true		1104566	3					
ANR	1106473	Identifier	true		1104566	0					
ANR	1106474	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""mo"" , R_CORE_AUTOCMPLT_MS , true )"	2471:1:77444:77521	1104566	127	True				
ANR	1106475	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""mo"" , R_CORE_AUTOCMPLT_MS , true )"		1104566	0					
ANR	1106476	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106477	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106478	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106479	Argument	core -> autocomplete		1104566	0					
ANR	1106480	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106481	Identifier	core		1104566	0					
ANR	1106482	Identifier	autocomplete		1104566	1					
ANR	1106483	Argument	"""mo"""		1104566	1					
ANR	1106484	PrimaryExpression	"""mo"""		1104566	0					
ANR	1106485	Argument	R_CORE_AUTOCMPLT_MS		1104566	2					
ANR	1106486	Identifier	R_CORE_AUTOCMPLT_MS		1104566	0					
ANR	1106487	Argument	true		1104566	3					
ANR	1106488	Identifier	true		1104566	0					
ANR	1106489	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""ms"" , R_CORE_AUTOCMPLT_MS , true )"	2472:1:77524:77601	1104566	128	True				
ANR	1106490	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""ms"" , R_CORE_AUTOCMPLT_MS , true )"		1104566	0					
ANR	1106491	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106492	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106493	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106494	Argument	core -> autocomplete		1104566	0					
ANR	1106495	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106496	Identifier	core		1104566	0					
ANR	1106497	Identifier	autocomplete		1104566	1					
ANR	1106498	Argument	"""ms"""		1104566	1					
ANR	1106499	PrimaryExpression	"""ms"""		1104566	0					
ANR	1106500	Argument	R_CORE_AUTOCMPLT_MS		1104566	2					
ANR	1106501	Identifier	R_CORE_AUTOCMPLT_MS		1104566	0					
ANR	1106502	Argument	true		1104566	3					
ANR	1106503	Identifier	true		1104566	0					
ANR	1106504	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""mc"" , R_CORE_AUTOCMPLT_MS , true )"	2473:1:77604:77681	1104566	129	True				
ANR	1106505	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""mc"" , R_CORE_AUTOCMPLT_MS , true )"		1104566	0					
ANR	1106506	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106507	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106508	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106509	Argument	core -> autocomplete		1104566	0					
ANR	1106510	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106511	Identifier	core		1104566	0					
ANR	1106512	Identifier	autocomplete		1104566	1					
ANR	1106513	Argument	"""mc"""		1104566	1					
ANR	1106514	PrimaryExpression	"""mc"""		1104566	0					
ANR	1106515	Argument	R_CORE_AUTOCMPLT_MS		1104566	2					
ANR	1106516	Identifier	R_CORE_AUTOCMPLT_MS		1104566	0					
ANR	1106517	Argument	true		1104566	3					
ANR	1106518	Identifier	true		1104566	0					
ANR	1106519	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""mi"" , R_CORE_AUTOCMPLT_MS , true )"	2474:1:77684:77761	1104566	130	True				
ANR	1106520	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""mi"" , R_CORE_AUTOCMPLT_MS , true )"		1104566	0					
ANR	1106521	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106522	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106523	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106524	Argument	core -> autocomplete		1104566	0					
ANR	1106525	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106526	Identifier	core		1104566	0					
ANR	1106527	Identifier	autocomplete		1104566	1					
ANR	1106528	Argument	"""mi"""		1104566	1					
ANR	1106529	PrimaryExpression	"""mi"""		1104566	0					
ANR	1106530	Argument	R_CORE_AUTOCMPLT_MS		1104566	2					
ANR	1106531	Identifier	R_CORE_AUTOCMPLT_MS		1104566	0					
ANR	1106532	Argument	true		1104566	3					
ANR	1106533	Identifier	true		1104566	0					
ANR	1106534	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""mw"" , R_CORE_AUTOCMPLT_MS , true )"	2475:1:77764:77841	1104566	131	True				
ANR	1106535	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""mw"" , R_CORE_AUTOCMPLT_MS , true )"		1104566	0					
ANR	1106536	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106537	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106538	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106539	Argument	core -> autocomplete		1104566	0					
ANR	1106540	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106541	Identifier	core		1104566	0					
ANR	1106542	Identifier	autocomplete		1104566	1					
ANR	1106543	Argument	"""mw"""		1104566	1					
ANR	1106544	PrimaryExpression	"""mw"""		1104566	0					
ANR	1106545	Argument	R_CORE_AUTOCMPLT_MS		1104566	2					
ANR	1106546	Identifier	R_CORE_AUTOCMPLT_MS		1104566	0					
ANR	1106547	Argument	true		1104566	3					
ANR	1106548	Identifier	true		1104566	0					
ANR	1106549	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""k"" , R_CORE_AUTOCMPLT_SDB , true )"	2477:1:77855:77932	1104566	132	True				
ANR	1106550	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""k"" , R_CORE_AUTOCMPLT_SDB , true )"		1104566	0					
ANR	1106551	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106552	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106553	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106554	Argument	core -> autocomplete		1104566	0					
ANR	1106555	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106556	Identifier	core		1104566	0					
ANR	1106557	Identifier	autocomplete		1104566	1					
ANR	1106558	Argument	"""k"""		1104566	1					
ANR	1106559	PrimaryExpression	"""k"""		1104566	0					
ANR	1106560	Argument	R_CORE_AUTOCMPLT_SDB		1104566	2					
ANR	1106561	Identifier	R_CORE_AUTOCMPLT_SDB		1104566	0					
ANR	1106562	Argument	true		1104566	3					
ANR	1106563	Identifier	true		1104566	0					
ANR	1106564	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""eco"" , R_CORE_AUTOCMPLT_THME , true )"	2480:1:77949:78029	1104566	133	True				
ANR	1106565	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""eco"" , R_CORE_AUTOCMPLT_THME , true )"		1104566	0					
ANR	1106566	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106567	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106568	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106569	Argument	core -> autocomplete		1104566	0					
ANR	1106570	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106571	Identifier	core		1104566	0					
ANR	1106572	Identifier	autocomplete		1104566	1					
ANR	1106573	Argument	"""eco"""		1104566	1					
ANR	1106574	PrimaryExpression	"""eco"""		1104566	0					
ANR	1106575	Argument	R_CORE_AUTOCMPLT_THME		1104566	2					
ANR	1106576	Identifier	R_CORE_AUTOCMPLT_THME		1104566	0					
ANR	1106577	Argument	true		1104566	3					
ANR	1106578	Identifier	true		1104566	0					
ANR	1106579	ForStatement	for ( i = 0 ; i < radare_argc && radare_argv [ i ] ; i ++ )		1104566	134					
ANR	1106580	ForInit	i = 0 ;	2482:6:78059:78064	1104566	0	True				
ANR	1106581	AssignmentExpression	i = 0		1104566	0		=			
ANR	1106582	Identifier	i		1104566	0					
ANR	1106583	PrimaryExpression	0		1104566	1					
ANR	1106584	Condition	i < radare_argc && radare_argv [ i ]	2482:13:78066:78098	1104566	1	True				
ANR	1106585	AndExpression	i < radare_argc && radare_argv [ i ]		1104566	0		&&			
ANR	1106586	RelationalExpression	i < radare_argc		1104566	0		<			
ANR	1106587	Identifier	i		1104566	0					
ANR	1106588	Identifier	radare_argc		1104566	1					
ANR	1106589	ArrayIndexing	radare_argv [ i ]		1104566	1					
ANR	1106590	Identifier	radare_argv		1104566	0					
ANR	1106591	Identifier	i		1104566	1					
ANR	1106592	PostIncDecOperationExpression	i ++	2482:48:78101:78103	1104566	2	True				
ANR	1106593	Identifier	i		1104566	0					
ANR	1106594	IncDec	++		1104566	1					
ANR	1106595	CompoundStatement		149:53:11305:11305	1104566	3					
ANR	1106596	IfStatement	"if ( ! r_core_autocomplete_find ( core -> autocomplete , radare_argv [ i ] , true ) )"		1104566	0					
ANR	1106597	Condition	"! r_core_autocomplete_find ( core -> autocomplete , radare_argv [ i ] , true )"	2483:6:78114:78181	1104566	0	True				
ANR	1106598	UnaryOperationExpression	"! r_core_autocomplete_find ( core -> autocomplete , radare_argv [ i ] , true )"		1104566	0					
ANR	1106599	UnaryOperator	!		1104566	0					
ANR	1106600	CallExpression	"r_core_autocomplete_find ( core -> autocomplete , radare_argv [ i ] , true )"		1104566	1					
ANR	1106601	Callee	r_core_autocomplete_find		1104566	0					
ANR	1106602	Identifier	r_core_autocomplete_find		1104566	0					
ANR	1106603	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106604	Argument	core -> autocomplete		1104566	0					
ANR	1106605	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106606	Identifier	core		1104566	0					
ANR	1106607	Identifier	autocomplete		1104566	1					
ANR	1106608	Argument	radare_argv [ i ]		1104566	1					
ANR	1106609	ArrayIndexing	radare_argv [ i ]		1104566	0					
ANR	1106610	Identifier	radare_argv		1104566	0					
ANR	1106611	Identifier	i		1104566	1					
ANR	1106612	Argument	true		1104566	2					
ANR	1106613	Identifier	true		1104566	0					
ANR	1106614	CompoundStatement		150:76:11383:11383	1104566	1					
ANR	1106615	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , radare_argv [ i ] , R_CORE_AUTOCMPLT_DFLT , true )"	2484:3:78189:78278	1104566	0	True				
ANR	1106616	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , radare_argv [ i ] , R_CORE_AUTOCMPLT_DFLT , true )"		1104566	0					
ANR	1106617	Callee	r_core_autocomplete_add		1104566	0					
ANR	1106618	Identifier	r_core_autocomplete_add		1104566	0					
ANR	1106619	ArgumentList	core -> autocomplete		1104566	1					
ANR	1106620	Argument	core -> autocomplete		1104566	0					
ANR	1106621	PtrMemberAccess	core -> autocomplete		1104566	0					
ANR	1106622	Identifier	core		1104566	0					
ANR	1106623	Identifier	autocomplete		1104566	1					
ANR	1106624	Argument	radare_argv [ i ]		1104566	1					
ANR	1106625	ArrayIndexing	radare_argv [ i ]		1104566	0					
ANR	1106626	Identifier	radare_argv		1104566	0					
ANR	1106627	Identifier	i		1104566	1					
ANR	1106628	Argument	R_CORE_AUTOCMPLT_DFLT		1104566	2					
ANR	1106629	Identifier	R_CORE_AUTOCMPLT_DFLT		1104566	0					
ANR	1106630	Argument	true		1104566	3					
ANR	1106631	Identifier	true		1104566	0					
ANR	1106632	ReturnType	static void		1104566	1					
ANR	1106633	Identifier	__init_autocomplete_default		1104566	2					
ANR	1106634	ParameterList	RCore * core		1104566	3					
ANR	1106635	Parameter	RCore * core	2334:41:66787:66797	1104566	0	True				
ANR	1106636	ParameterType	RCore *		1104566	0					
ANR	1106637	Identifier	core		1104566	1					
ANR	1106638	CFGEntryNode	ENTRY		1104566		True				
ANR	1106639	CFGExitNode	EXIT		1104566		True				
ANR	1106640	Symbol	R_CORE_AUTOCMPLT_FLSP		1104566						
ANR	1106641	Symbol	radare_argv		1104566						
ANR	1106642	Symbol	R_CORE_AUTOCMPLT_SDB		1104566						
ANR	1106643	Symbol	R_CORE_AUTOCMPLT_FLAG		1104566						
ANR	1106644	Symbol	* core		1104566						
ANR	1106645	Symbol	R_CORE_AUTOCMPLT_MINS		1104566						
ANR	1106646	Symbol	R_CORE_AUTOCMPLT_MS		1104566						
ANR	1106647	Symbol	core -> autocomplete		1104566						
ANR	1106648	Symbol	r_core_autocomplete_find		1104566						
ANR	1106649	Symbol	R_CORE_AUTOCMPLT_EVAL		1104566						
ANR	1106650	Symbol	R_CORE_AUTOCMPLT_FCN		1104566						
ANR	1106651	Symbol	R_CORE_AUTOCMPLT_THME		1104566						
ANR	1106652	Symbol	R_CORE_AUTOCMPLT_PRJT		1104566						
ANR	1106653	Symbol	i		1104566						
ANR	1106654	Symbol	R_CORE_AUTOCMPLT_ZIGN		1104566						
ANR	1106655	Symbol	R_CORE_AUTOCMPLT_DFLT		1104566						
ANR	1106656	Symbol	R_CORE_AUTOCMPLT_MACR		1104566						
ANR	1106657	Symbol	radare_argc		1104566						
ANR	1106658	Symbol	r_core_autocomplete_add		1104566						
ANR	1106659	Symbol	core		1104566						
ANR	1106660	Symbol	* i		1104566						
ANR	1106661	Symbol	R_CORE_AUTOCMPLT_SEEK		1104566						
ANR	1106662	Symbol	true		1104566						
ANR	1106663	Symbol	R_CORE_AUTOCMPLT_FILE		1104566						
ANR	1106664	Symbol	R_CORE_AUTOCMPLT_BRKP		1104566						
ANR	1106665	Symbol	* radare_argv		1104566						
ANR	1106666	Function	__init_autocomplete	2489:0:78290:79184							
ANR	1106667	FunctionDef	__init_autocomplete (RCore * core)		1106666	0					
ANR	1106668	CompoundStatement		2489:46:78336:79184	1106666	0					
ANR	1106669	IdentifierDeclStatement	int i ;	2490:1:78339:78344	1106666	0	True				
ANR	1106670	IdentifierDecl	i		1106666	0					
ANR	1106671	IdentifierDeclType	int		1106666	0					
ANR	1106672	Identifier	i		1106666	1					
ANR	1106673	ExpressionStatement	core -> autocomplete = R_NEW0 ( RCoreAutocomplete )	2491:1:78347:78394	1106666	1	True				
ANR	1106674	AssignmentExpression	core -> autocomplete = R_NEW0 ( RCoreAutocomplete )		1106666	0		=			
ANR	1106675	PtrMemberAccess	core -> autocomplete		1106666	0					
ANR	1106676	Identifier	core		1106666	0					
ANR	1106677	Identifier	autocomplete		1106666	1					
ANR	1106678	CallExpression	R_NEW0 ( RCoreAutocomplete )		1106666	1					
ANR	1106679	Callee	R_NEW0		1106666	0					
ANR	1106680	Identifier	R_NEW0		1106666	0					
ANR	1106681	ArgumentList	RCoreAutocomplete		1106666	1					
ANR	1106682	Argument	RCoreAutocomplete		1106666	0					
ANR	1106683	Identifier	RCoreAutocomplete		1106666	0					
ANR	1106684	IfStatement	if ( core -> autocomplete_type == AUTOCOMPLETE_DEFAULT )		1106666	2					
ANR	1106685	Condition	core -> autocomplete_type == AUTOCOMPLETE_DEFAULT	2492:5:78401:78447	1106666	0	True				
ANR	1106686	EqualityExpression	core -> autocomplete_type == AUTOCOMPLETE_DEFAULT		1106666	0		==			
ANR	1106687	PtrMemberAccess	core -> autocomplete_type		1106666	0					
ANR	1106688	Identifier	core		1106666	0					
ANR	1106689	Identifier	autocomplete_type		1106666	1					
ANR	1106690	Identifier	AUTOCOMPLETE_DEFAULT		1106666	1					
ANR	1106691	CompoundStatement		4:54:113:113	1106666	1					
ANR	1106692	ExpressionStatement	__init_autocomplete_default ( core )	2493:2:78454:78488	1106666	0	True				
ANR	1106693	CallExpression	__init_autocomplete_default ( core )		1106666	0					
ANR	1106694	Callee	__init_autocomplete_default		1106666	0					
ANR	1106695	Identifier	__init_autocomplete_default		1106666	0					
ANR	1106696	ArgumentList	core		1106666	1					
ANR	1106697	Argument	core		1106666	0					
ANR	1106698	Identifier	core		1106666	0					
ANR	1106699	ElseStatement	else		1106666	0					
ANR	1106700	IfStatement	if ( core -> autocomplete_type == AUTOCOMPLETE_MS )		1106666	0					
ANR	1106701	Condition	core -> autocomplete_type == AUTOCOMPLETE_MS	2494:12:78502:78543	1106666	0	True				
ANR	1106702	EqualityExpression	core -> autocomplete_type == AUTOCOMPLETE_MS		1106666	0		==			
ANR	1106703	PtrMemberAccess	core -> autocomplete_type		1106666	0					
ANR	1106704	Identifier	core		1106666	0					
ANR	1106705	Identifier	autocomplete_type		1106666	1					
ANR	1106706	Identifier	AUTOCOMPLETE_MS		1106666	1					
ANR	1106707	CompoundStatement		6:56:209:209	1106666	1					
ANR	1106708	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""ls"" , R_CORE_AUTOCMPLT_MS , true )"	2495:2:78550:78627	1106666	0	True				
ANR	1106709	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""ls"" , R_CORE_AUTOCMPLT_MS , true )"		1106666	0					
ANR	1106710	Callee	r_core_autocomplete_add		1106666	0					
ANR	1106711	Identifier	r_core_autocomplete_add		1106666	0					
ANR	1106712	ArgumentList	core -> autocomplete		1106666	1					
ANR	1106713	Argument	core -> autocomplete		1106666	0					
ANR	1106714	PtrMemberAccess	core -> autocomplete		1106666	0					
ANR	1106715	Identifier	core		1106666	0					
ANR	1106716	Identifier	autocomplete		1106666	1					
ANR	1106717	Argument	"""ls"""		1106666	1					
ANR	1106718	PrimaryExpression	"""ls"""		1106666	0					
ANR	1106719	Argument	R_CORE_AUTOCMPLT_MS		1106666	2					
ANR	1106720	Identifier	R_CORE_AUTOCMPLT_MS		1106666	0					
ANR	1106721	Argument	true		1106666	3					
ANR	1106722	Identifier	true		1106666	0					
ANR	1106723	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""cd"" , R_CORE_AUTOCMPLT_MS , true )"	2496:2:78631:78708	1106666	1	True				
ANR	1106724	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""cd"" , R_CORE_AUTOCMPLT_MS , true )"		1106666	0					
ANR	1106725	Callee	r_core_autocomplete_add		1106666	0					
ANR	1106726	Identifier	r_core_autocomplete_add		1106666	0					
ANR	1106727	ArgumentList	core -> autocomplete		1106666	1					
ANR	1106728	Argument	core -> autocomplete		1106666	0					
ANR	1106729	PtrMemberAccess	core -> autocomplete		1106666	0					
ANR	1106730	Identifier	core		1106666	0					
ANR	1106731	Identifier	autocomplete		1106666	1					
ANR	1106732	Argument	"""cd"""		1106666	1					
ANR	1106733	PrimaryExpression	"""cd"""		1106666	0					
ANR	1106734	Argument	R_CORE_AUTOCMPLT_MS		1106666	2					
ANR	1106735	Identifier	R_CORE_AUTOCMPLT_MS		1106666	0					
ANR	1106736	Argument	true		1106666	3					
ANR	1106737	Identifier	true		1106666	0					
ANR	1106738	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""cat"" , R_CORE_AUTOCMPLT_MS , true )"	2497:2:78712:78790	1106666	2	True				
ANR	1106739	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""cat"" , R_CORE_AUTOCMPLT_MS , true )"		1106666	0					
ANR	1106740	Callee	r_core_autocomplete_add		1106666	0					
ANR	1106741	Identifier	r_core_autocomplete_add		1106666	0					
ANR	1106742	ArgumentList	core -> autocomplete		1106666	1					
ANR	1106743	Argument	core -> autocomplete		1106666	0					
ANR	1106744	PtrMemberAccess	core -> autocomplete		1106666	0					
ANR	1106745	Identifier	core		1106666	0					
ANR	1106746	Identifier	autocomplete		1106666	1					
ANR	1106747	Argument	"""cat"""		1106666	1					
ANR	1106748	PrimaryExpression	"""cat"""		1106666	0					
ANR	1106749	Argument	R_CORE_AUTOCMPLT_MS		1106666	2					
ANR	1106750	Identifier	R_CORE_AUTOCMPLT_MS		1106666	0					
ANR	1106751	Argument	true		1106666	3					
ANR	1106752	Identifier	true		1106666	0					
ANR	1106753	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""get"" , R_CORE_AUTOCMPLT_MS , true )"	2498:2:78794:78872	1106666	3	True				
ANR	1106754	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""get"" , R_CORE_AUTOCMPLT_MS , true )"		1106666	0					
ANR	1106755	Callee	r_core_autocomplete_add		1106666	0					
ANR	1106756	Identifier	r_core_autocomplete_add		1106666	0					
ANR	1106757	ArgumentList	core -> autocomplete		1106666	1					
ANR	1106758	Argument	core -> autocomplete		1106666	0					
ANR	1106759	PtrMemberAccess	core -> autocomplete		1106666	0					
ANR	1106760	Identifier	core		1106666	0					
ANR	1106761	Identifier	autocomplete		1106666	1					
ANR	1106762	Argument	"""get"""		1106666	1					
ANR	1106763	PrimaryExpression	"""get"""		1106666	0					
ANR	1106764	Argument	R_CORE_AUTOCMPLT_MS		1106666	2					
ANR	1106765	Identifier	R_CORE_AUTOCMPLT_MS		1106666	0					
ANR	1106766	Argument	true		1106666	3					
ANR	1106767	Identifier	true		1106666	0					
ANR	1106768	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ""mount"" , R_CORE_AUTOCMPLT_MS , true )"	2499:2:78876:78956	1106666	4	True				
ANR	1106769	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ""mount"" , R_CORE_AUTOCMPLT_MS , true )"		1106666	0					
ANR	1106770	Callee	r_core_autocomplete_add		1106666	0					
ANR	1106771	Identifier	r_core_autocomplete_add		1106666	0					
ANR	1106772	ArgumentList	core -> autocomplete		1106666	1					
ANR	1106773	Argument	core -> autocomplete		1106666	0					
ANR	1106774	PtrMemberAccess	core -> autocomplete		1106666	0					
ANR	1106775	Identifier	core		1106666	0					
ANR	1106776	Identifier	autocomplete		1106666	1					
ANR	1106777	Argument	"""mount"""		1106666	1					
ANR	1106778	PrimaryExpression	"""mount"""		1106666	0					
ANR	1106779	Argument	R_CORE_AUTOCMPLT_MS		1106666	2					
ANR	1106780	Identifier	R_CORE_AUTOCMPLT_MS		1106666	0					
ANR	1106781	Argument	true		1106666	3					
ANR	1106782	Identifier	true		1106666	0					
ANR	1106783	ForStatement	for ( i = 0 ; i < ms_argc && ms_argv [ i ] ; i ++ )		1106666	5					
ANR	1106784	ForInit	i = 0 ;	2500:7:78965:78970	1106666	0	True				
ANR	1106785	AssignmentExpression	i = 0		1106666	0		=			
ANR	1106786	Identifier	i		1106666	0					
ANR	1106787	PrimaryExpression	0		1106666	1					
ANR	1106788	Condition	i < ms_argc && ms_argv [ i ]	2500:14:78972:78996	1106666	1	True				
ANR	1106789	AndExpression	i < ms_argc && ms_argv [ i ]		1106666	0		&&			
ANR	1106790	RelationalExpression	i < ms_argc		1106666	0		<			
ANR	1106791	Identifier	i		1106666	0					
ANR	1106792	Identifier	ms_argc		1106666	1					
ANR	1106793	ArrayIndexing	ms_argv [ i ]		1106666	1					
ANR	1106794	Identifier	ms_argv		1106666	0					
ANR	1106795	Identifier	i		1106666	1					
ANR	1106796	PostIncDecOperationExpression	i ++	2500:41:78999:79001	1106666	2	True				
ANR	1106797	Identifier	i		1106666	0					
ANR	1106798	IncDec	++		1106666	1					
ANR	1106799	CompoundStatement		12:46:667:667	1106666	3					
ANR	1106800	IfStatement	"if ( ! r_core_autocomplete_find ( core -> autocomplete , ms_argv [ i ] , true ) )"		1106666	0					
ANR	1106801	Condition	"! r_core_autocomplete_find ( core -> autocomplete , ms_argv [ i ] , true )"	2501:7:79013:79076	1106666	0	True				
ANR	1106802	UnaryOperationExpression	"! r_core_autocomplete_find ( core -> autocomplete , ms_argv [ i ] , true )"		1106666	0					
ANR	1106803	UnaryOperator	!		1106666	0					
ANR	1106804	CallExpression	"r_core_autocomplete_find ( core -> autocomplete , ms_argv [ i ] , true )"		1106666	1					
ANR	1106805	Callee	r_core_autocomplete_find		1106666	0					
ANR	1106806	Identifier	r_core_autocomplete_find		1106666	0					
ANR	1106807	ArgumentList	core -> autocomplete		1106666	1					
ANR	1106808	Argument	core -> autocomplete		1106666	0					
ANR	1106809	PtrMemberAccess	core -> autocomplete		1106666	0					
ANR	1106810	Identifier	core		1106666	0					
ANR	1106811	Identifier	autocomplete		1106666	1					
ANR	1106812	Argument	ms_argv [ i ]		1106666	1					
ANR	1106813	ArrayIndexing	ms_argv [ i ]		1106666	0					
ANR	1106814	Identifier	ms_argv		1106666	0					
ANR	1106815	Identifier	i		1106666	1					
ANR	1106816	Argument	true		1106666	2					
ANR	1106817	Identifier	true		1106666	0					
ANR	1106818	CompoundStatement		13:73:742:742	1106666	1					
ANR	1106819	ExpressionStatement	"r_core_autocomplete_add ( core -> autocomplete , ms_argv [ i ] , R_CORE_AUTOCMPLT_MS , true )"	2502:4:79085:79168	1106666	0	True				
ANR	1106820	CallExpression	"r_core_autocomplete_add ( core -> autocomplete , ms_argv [ i ] , R_CORE_AUTOCMPLT_MS , true )"		1106666	0					
ANR	1106821	Callee	r_core_autocomplete_add		1106666	0					
ANR	1106822	Identifier	r_core_autocomplete_add		1106666	0					
ANR	1106823	ArgumentList	core -> autocomplete		1106666	1					
ANR	1106824	Argument	core -> autocomplete		1106666	0					
ANR	1106825	PtrMemberAccess	core -> autocomplete		1106666	0					
ANR	1106826	Identifier	core		1106666	0					
ANR	1106827	Identifier	autocomplete		1106666	1					
ANR	1106828	Argument	ms_argv [ i ]		1106666	1					
ANR	1106829	ArrayIndexing	ms_argv [ i ]		1106666	0					
ANR	1106830	Identifier	ms_argv		1106666	0					
ANR	1106831	Identifier	i		1106666	1					
ANR	1106832	Argument	R_CORE_AUTOCMPLT_MS		1106666	2					
ANR	1106833	Identifier	R_CORE_AUTOCMPLT_MS		1106666	0					
ANR	1106834	Argument	true		1106666	3					
ANR	1106835	Identifier	true		1106666	0					
ANR	1106836	ReturnType	static void		1106666	1					
ANR	1106837	Identifier	__init_autocomplete		1106666	2					
ANR	1106838	ParameterList	RCore * core		1106666	3					
ANR	1106839	Parameter	RCore * core	2489:33:78323:78333	1106666	0	True				
ANR	1106840	ParameterType	RCore *		1106666	0					
ANR	1106841	Identifier	core		1106666	1					
ANR	1106842	CFGEntryNode	ENTRY		1106666		True				
ANR	1106843	CFGExitNode	EXIT		1106666		True				
ANR	1106844	Symbol	AUTOCOMPLETE_MS		1106666						
ANR	1106845	Symbol	* core		1106666						
ANR	1106846	Symbol	i		1106666						
ANR	1106847	Symbol	core -> autocomplete_type		1106666						
ANR	1106848	Symbol	ms_argc		1106666						
ANR	1106849	Symbol	* ms_argv		1106666						
ANR	1106850	Symbol	core		1106666						
ANR	1106851	Symbol	R_NEW0		1106666						
ANR	1106852	Symbol	R_CORE_AUTOCMPLT_MS		1106666						
ANR	1106853	Symbol	core -> autocomplete		1106666						
ANR	1106854	Symbol	AUTOCOMPLETE_DEFAULT		1106666						
ANR	1106855	Symbol	* i		1106666						
ANR	1106856	Symbol	r_core_autocomplete_find		1106666						
ANR	1106857	Symbol	ms_argv		1106666						
ANR	1106858	Symbol	true		1106666						
ANR	1106859	Symbol	RCoreAutocomplete		1106666						
ANR	1106860	Function	colorfor_cb	2509:0:79187:79325							
ANR	1106861	FunctionDef	"colorfor_cb (void * user , ut64 addr , bool verbose)"		1106860	0					
ANR	1106862	CompoundStatement		2509:68:79255:79325	1106860	0					
ANR	1106863	ReturnStatement	"return r_core_anal_optype_colorfor ( ( RCore * ) user , addr , verbose ) ;"	2510:1:79258:79323	1106860	0	True				
ANR	1106864	CallExpression	"r_core_anal_optype_colorfor ( ( RCore * ) user , addr , verbose )"		1106860	0					
ANR	1106865	Callee	r_core_anal_optype_colorfor		1106860	0					
ANR	1106866	Identifier	r_core_anal_optype_colorfor		1106860	0					
ANR	1106867	ArgumentList	( RCore * ) user		1106860	1					
ANR	1106868	Argument	( RCore * ) user		1106860	0					
ANR	1106869	CastExpression	( RCore * ) user		1106860	0					
ANR	1106870	CastTarget	RCore *		1106860	0					
ANR	1106871	Identifier	user		1106860	1					
ANR	1106872	Argument	addr		1106860	1					
ANR	1106873	Identifier	addr		1106860	0					
ANR	1106874	Argument	verbose		1106860	2					
ANR	1106875	Identifier	verbose		1106860	0					
ANR	1106876	ReturnType	static const char *		1106860	1					
ANR	1106877	Identifier	colorfor_cb		1106860	2					
ANR	1106878	ParameterList	"void * user , ut64 addr , bool verbose"		1106860	3					
ANR	1106879	Parameter	void * user	2509:31:79218:79227	1106860	0	True				
ANR	1106880	ParameterType	void *		1106860	0					
ANR	1106881	Identifier	user		1106860	1					
ANR	1106882	Parameter	ut64 addr	2509:43:79230:79238	1106860	1	True				
ANR	1106883	ParameterType	ut64		1106860	0					
ANR	1106884	Identifier	addr		1106860	1					
ANR	1106885	Parameter	bool verbose	2509:54:79241:79252	1106860	2	True				
ANR	1106886	ParameterType	bool		1106860	0					
ANR	1106887	Identifier	verbose		1106860	1					
ANR	1106888	CFGEntryNode	ENTRY		1106860		True				
ANR	1106889	CFGExitNode	EXIT		1106860		True				
ANR	1106890	Symbol	r_core_anal_optype_colorfor		1106860						
ANR	1106891	Symbol	addr		1106860						
ANR	1106892	Symbol	user		1106860						
ANR	1106893	Symbol	verbose		1106860						
ANR	1106894	Function	hasrefs_cb	2513:0:79328:79451							
ANR	1106895	FunctionDef	"hasrefs_cb (void * user , ut64 addr , bool verbose)"		1106894	0					
ANR	1106896	CompoundStatement		2513:61:79389:79451	1106894	0					
ANR	1106897	ReturnStatement	"return r_core_anal_hasrefs ( ( RCore * ) user , addr , verbose ) ;"	2514:1:79392:79449	1106894	0	True				
ANR	1106898	CallExpression	"r_core_anal_hasrefs ( ( RCore * ) user , addr , verbose )"		1106894	0					
ANR	1106899	Callee	r_core_anal_hasrefs		1106894	0					
ANR	1106900	Identifier	r_core_anal_hasrefs		1106894	0					
ANR	1106901	ArgumentList	( RCore * ) user		1106894	1					
ANR	1106902	Argument	( RCore * ) user		1106894	0					
ANR	1106903	CastExpression	( RCore * ) user		1106894	0					
ANR	1106904	CastTarget	RCore *		1106894	0					
ANR	1106905	Identifier	user		1106894	1					
ANR	1106906	Argument	addr		1106894	1					
ANR	1106907	Identifier	addr		1106894	0					
ANR	1106908	Argument	verbose		1106894	2					
ANR	1106909	Identifier	verbose		1106894	0					
ANR	1106910	ReturnType	static char *		1106894	1					
ANR	1106911	Identifier	hasrefs_cb		1106894	2					
ANR	1106912	ParameterList	"void * user , ut64 addr , bool verbose"		1106894	3					
ANR	1106913	Parameter	void * user	2513:24:79352:79361	1106894	0	True				
ANR	1106914	ParameterType	void *		1106894	0					
ANR	1106915	Identifier	user		1106894	1					
ANR	1106916	Parameter	ut64 addr	2513:36:79364:79372	1106894	1	True				
ANR	1106917	ParameterType	ut64		1106894	0					
ANR	1106918	Identifier	addr		1106894	1					
ANR	1106919	Parameter	bool verbose	2513:47:79375:79386	1106894	2	True				
ANR	1106920	ParameterType	bool		1106894	0					
ANR	1106921	Identifier	verbose		1106894	1					
ANR	1106922	CFGEntryNode	ENTRY		1106894		True				
ANR	1106923	CFGExitNode	EXIT		1106894		True				
ANR	1106924	Symbol	r_core_anal_hasrefs		1106894						
ANR	1106925	Symbol	addr		1106894						
ANR	1106926	Symbol	user		1106894						
ANR	1106927	Symbol	verbose		1106894						
ANR	1106928	Function	get_section_name	2517:0:79454:79570							
ANR	1106929	FunctionDef	"get_section_name (void * user , ut64 addr)"		1106928	0					
ANR	1106930	CompoundStatement		2517:59:79513:79570	1106928	0					
ANR	1106931	ReturnStatement	"return r_core_get_section_name ( ( RCore * ) user , addr ) ;"	2518:1:79516:79568	1106928	0	True				
ANR	1106932	CallExpression	"r_core_get_section_name ( ( RCore * ) user , addr )"		1106928	0					
ANR	1106933	Callee	r_core_get_section_name		1106928	0					
ANR	1106934	Identifier	r_core_get_section_name		1106928	0					
ANR	1106935	ArgumentList	( RCore * ) user		1106928	1					
ANR	1106936	Argument	( RCore * ) user		1106928	0					
ANR	1106937	CastExpression	( RCore * ) user		1106928	0					
ANR	1106938	CastTarget	RCore *		1106928	0					
ANR	1106939	Identifier	user		1106928	1					
ANR	1106940	Argument	addr		1106928	1					
ANR	1106941	Identifier	addr		1106928	0					
ANR	1106942	ReturnType	static const char *		1106928	1					
ANR	1106943	Identifier	get_section_name		1106928	2					
ANR	1106944	ParameterList	"void * user , ut64 addr"		1106928	3					
ANR	1106945	Parameter	void * user	2517:36:79490:79499	1106928	0	True				
ANR	1106946	ParameterType	void *		1106928	0					
ANR	1106947	Identifier	user		1106928	1					
ANR	1106948	Parameter	ut64 addr	2517:48:79502:79510	1106928	1	True				
ANR	1106949	ParameterType	ut64		1106928	0					
ANR	1106950	Identifier	addr		1106928	1					
ANR	1106951	CFGEntryNode	ENTRY		1106928		True				
ANR	1106952	CFGExitNode	EXIT		1106928		True				
ANR	1106953	Symbol	r_core_get_section_name		1106928						
ANR	1106954	Symbol	addr		1106928						
ANR	1106955	Symbol	user		1106928						
ANR	1106956	Function	get_comments_cb	2521:0:79573:79683							
ANR	1106957	FunctionDef	"get_comments_cb (void * user , ut64 addr)"		1106956	0					
ANR	1106958	CompoundStatement		2521:52:79625:79683	1106956	0					
ANR	1106959	ReturnStatement	"return r_core_anal_get_comments ( ( RCore * ) user , addr ) ;"	2522:1:79628:79681	1106956	0	True				
ANR	1106960	CallExpression	"r_core_anal_get_comments ( ( RCore * ) user , addr )"		1106956	0					
ANR	1106961	Callee	r_core_anal_get_comments		1106956	0					
ANR	1106962	Identifier	r_core_anal_get_comments		1106956	0					
ANR	1106963	ArgumentList	( RCore * ) user		1106956	1					
ANR	1106964	Argument	( RCore * ) user		1106956	0					
ANR	1106965	CastExpression	( RCore * ) user		1106956	0					
ANR	1106966	CastTarget	RCore *		1106956	0					
ANR	1106967	Identifier	user		1106956	1					
ANR	1106968	Argument	addr		1106956	1					
ANR	1106969	Identifier	addr		1106956	0					
ANR	1106970	ReturnType	static char *		1106956	1					
ANR	1106971	Identifier	get_comments_cb		1106956	2					
ANR	1106972	ParameterList	"void * user , ut64 addr"		1106956	3					
ANR	1106973	Parameter	void * user	2521:29:79602:79611	1106956	0	True				
ANR	1106974	ParameterType	void *		1106956	0					
ANR	1106975	Identifier	user		1106956	1					
ANR	1106976	Parameter	ut64 addr	2521:41:79614:79622	1106956	1	True				
ANR	1106977	ParameterType	ut64		1106956	0					
ANR	1106978	Identifier	addr		1106956	1					
ANR	1106979	CFGEntryNode	ENTRY		1106956		True				
ANR	1106980	CFGExitNode	EXIT		1106956		True				
ANR	1106981	Symbol	r_core_anal_get_comments		1106956						
ANR	1106982	Symbol	addr		1106956						
ANR	1106983	Symbol	user		1106956						
ANR	1106984	Function	cb_event_handler	2525:0:79686:80735							
ANR	1106985	FunctionDef	"cb_event_handler (REvent * ev , int event_type , void * user , void * data)"		1106984	0					
ANR	1106986	CompoundStatement		2525:81:79767:80735	1106984	0					
ANR	1106987	IdentifierDeclStatement	RCore * core = ( RCore * ) ev -> user ;	2526:1:79770:79801	1106984	0	True				
ANR	1106988	IdentifierDecl	* core = ( RCore * ) ev -> user		1106984	0					
ANR	1106989	IdentifierDeclType	RCore *		1106984	0					
ANR	1106990	Identifier	core		1106984	1					
ANR	1106991	AssignmentExpression	* core = ( RCore * ) ev -> user		1106984	2		=			
ANR	1106992	Identifier	core		1106984	0					
ANR	1106993	CastExpression	( RCore * ) ev -> user		1106984	1					
ANR	1106994	CastTarget	RCore *		1106984	0					
ANR	1106995	PtrMemberAccess	ev -> user		1106984	1					
ANR	1106996	Identifier	ev		1106984	0					
ANR	1106997	Identifier	user		1106984	1					
ANR	1106998	IfStatement	if ( ! core -> log_events )		1106984	1					
ANR	1106999	Condition	! core -> log_events	2527:5:79808:79824	1106984	0	True				
ANR	1107000	UnaryOperationExpression	! core -> log_events		1106984	0					
ANR	1107001	UnaryOperator	!		1106984	0					
ANR	1107002	PtrMemberAccess	core -> log_events		1106984	1					
ANR	1107003	Identifier	core		1106984	0					
ANR	1107004	Identifier	log_events		1106984	1					
ANR	1107005	CompoundStatement		3:24:59:59	1106984	1					
ANR	1107006	ReturnStatement	return ;	2528:2:79831:79837	1106984	0	True				
ANR	1107007	IdentifierDeclStatement	REventMeta * rems = data ;	2530:1:79843:79866	1106984	2	True				
ANR	1107008	IdentifierDecl	* rems = data		1106984	0					
ANR	1107009	IdentifierDeclType	REventMeta *		1106984	0					
ANR	1107010	Identifier	rems		1106984	1					
ANR	1107011	AssignmentExpression	* rems = data		1106984	2		=			
ANR	1107012	Identifier	data		1106984	0					
ANR	1107013	Identifier	data		1106984	1					
ANR	1107014	IdentifierDeclStatement	"char * str = r_base64_encode_dyn ( rems -> string , - 1 ) ;"	2531:1:79869:79919	1106984	3	True				
ANR	1107015	IdentifierDecl	"* str = r_base64_encode_dyn ( rems -> string , - 1 )"		1106984	0					
ANR	1107016	IdentifierDeclType	char *		1106984	0					
ANR	1107017	Identifier	str		1106984	1					
ANR	1107018	AssignmentExpression	"* str = r_base64_encode_dyn ( rems -> string , - 1 )"		1106984	2		=			
ANR	1107019	Identifier	str		1106984	0					
ANR	1107020	CallExpression	"r_base64_encode_dyn ( rems -> string , - 1 )"		1106984	1					
ANR	1107021	Callee	r_base64_encode_dyn		1106984	0					
ANR	1107022	Identifier	r_base64_encode_dyn		1106984	0					
ANR	1107023	ArgumentList	rems -> string		1106984	1					
ANR	1107024	Argument	rems -> string		1106984	0					
ANR	1107025	PtrMemberAccess	rems -> string		1106984	0					
ANR	1107026	Identifier	rems		1106984	0					
ANR	1107027	Identifier	string		1106984	1					
ANR	1107028	Argument	- 1		1106984	1					
ANR	1107029	UnaryOperationExpression	- 1		1106984	0					
ANR	1107030	UnaryOperator	-		1106984	0					
ANR	1107031	PrimaryExpression	1		1106984	1					
ANR	1107032	SwitchStatement	switch ( event_type )		1106984	4					
ANR	1107033	Condition	event_type	2532:9:79930:79939	1106984	0	True				
ANR	1107034	Identifier	event_type		1106984	0					
ANR	1107035	CompoundStatement		8:21:174:174	1106984	1					
ANR	1107036	Label	case R_EVENT_META_SET :	2533:1:79945:79966	1106984	0	True				
ANR	1107037	Identifier	R_EVENT_META_SET		1106984	0					
ANR	1107038	SwitchStatement	switch ( rems -> type )		1106984	1					
ANR	1107039	Condition	rems -> type	2534:10:79978:79987	1106984	0	True				
ANR	1107040	PtrMemberAccess	rems -> type		1106984	0					
ANR	1107041	Identifier	rems		1106984	0					
ANR	1107042	Identifier	type		1106984	1					
ANR	1107043	CompoundStatement		10:22:222:222	1106984	1					
ANR	1107044	Label	case 'C' :	2535:2:79994:80002	1106984	0	True				
ANR	1107045	Statement	r_core_log_add	2536:3:80007:80020	1106984	1	True				
ANR	1107046	Statement	(	2536:18:80022:80022	1106984	2	True				
ANR	1107047	Statement	ev	2536:19:80023:80024	1106984	3	True				
ANR	1107048	Statement	->	2536:21:80025:80026	1106984	4	True				
ANR	1107049	Statement	user	2536:23:80027:80030	1106984	5	True				
ANR	1107050	Statement	","	2536:27:80031:80031	1106984	6	True				
ANR	1107051	Statement	sdb_fmt	2536:29:80033:80039	1106984	7	True				
ANR	1107052	Statement	(	2536:37:80041:80041	1106984	8	True				
ANR	1107053	Statement	""":add-comment 0x%08"""	2536:38:80042:80061	1106984	9	True				
ANR	1107054	Statement	PFMT64x	2536:58:80062:80068	1106984	10	True				
ANR	1107055	Statement	""" %s\\n"""	2536:65:80069:80075	1106984	11	True				
ANR	1107056	Statement	","	2536:72:80076:80076	1106984	12	True				
ANR	1107057	Statement	rems	2536:74:80078:80081	1106984	13	True				
ANR	1107058	Statement	->	2536:78:80082:80083	1106984	14	True				
ANR	1107059	Statement	addr	2536:80:80084:80087	1106984	15	True				
ANR	1107060	Statement	","	2536:84:80088:80088	1106984	16	True				
ANR	1107061	Statement	str	2536:86:80090:80092	1106984	17	True				
ANR	1107062	Statement	?	2536:89:80093:80093	1106984	18	True				
ANR	1107063	Label	str :	2536:91:80095:80098	1106984	19	True				
ANR	1107064	Identifier	str		1106984	0					
ANR	1107065	Statement	""""""	2536:96:80100:80101	1106984	20	True				
ANR	1107066	Statement	)	2536:98:80102:80102	1106984	21	True				
ANR	1107067	Statement	)	2536:99:80103:80103	1106984	22	True				
ANR	1107068	ExpressionStatement		2536:100:80104:80104	1106984	23	True				
ANR	1107069	BreakStatement	break ;	2537:3:80109:80114	1106984	24	True				
ANR	1107070	Label	default :	2538:2:80118:80125	1106984	25	True				
ANR	1107071	Identifier	default		1106984	0					
ANR	1107072	BreakStatement	break ;	2539:3:80130:80135	1106984	26	True				
ANR	1107073	BreakStatement	break ;	2541:2:80143:80148	1106984	2	True				
ANR	1107074	Label	case R_EVENT_META_DEL :	2542:1:80151:80172	1106984	3	True				
ANR	1107075	Identifier	R_EVENT_META_DEL		1106984	0					
ANR	1107076	SwitchStatement	switch ( rems -> type )		1106984	4					
ANR	1107077	Condition	rems -> type	2543:10:80184:80193	1106984	0	True				
ANR	1107078	PtrMemberAccess	rems -> type		1106984	0					
ANR	1107079	Identifier	rems		1106984	0					
ANR	1107080	Identifier	type		1106984	1					
ANR	1107081	CompoundStatement		19:22:428:428	1106984	1					
ANR	1107082	Label	case 'C' :	2544:2:80200:80208	1106984	0	True				
ANR	1107083	Statement	r_core_log_add	2545:3:80213:80226	1106984	1	True				
ANR	1107084	Statement	(	2545:18:80228:80228	1106984	2	True				
ANR	1107085	Statement	ev	2545:19:80229:80230	1106984	3	True				
ANR	1107086	Statement	->	2545:21:80231:80232	1106984	4	True				
ANR	1107087	Statement	user	2545:23:80233:80236	1106984	5	True				
ANR	1107088	Statement	","	2545:27:80237:80237	1106984	6	True				
ANR	1107089	Statement	sdb_fmt	2545:29:80239:80245	1106984	7	True				
ANR	1107090	Statement	(	2545:37:80247:80247	1106984	8	True				
ANR	1107091	Statement	""":del-comment 0x%08"""	2545:38:80248:80267	1106984	9	True				
ANR	1107092	Statement	PFMT64x	2545:58:80268:80274	1106984	10	True				
ANR	1107093	Statement	","	2545:65:80275:80275	1106984	11	True				
ANR	1107094	Statement	rems	2545:67:80277:80280	1106984	12	True				
ANR	1107095	Statement	->	2545:71:80281:80282	1106984	13	True				
ANR	1107096	Statement	addr	2545:73:80283:80286	1106984	14	True				
ANR	1107097	Statement	)	2545:77:80287:80287	1106984	15	True				
ANR	1107098	Statement	)	2545:78:80288:80288	1106984	16	True				
ANR	1107099	ExpressionStatement		2545:79:80289:80289	1106984	17	True				
ANR	1107100	BreakStatement	break ;	2546:3:80294:80299	1106984	18	True				
ANR	1107101	Label	default :	2547:2:80303:80310	1106984	19	True				
ANR	1107102	Identifier	default		1106984	0					
ANR	1107103	Statement	r_core_log_add	2548:3:80315:80328	1106984	20	True				
ANR	1107104	Statement	(	2548:18:80330:80330	1106984	21	True				
ANR	1107105	Statement	ev	2548:19:80331:80332	1106984	22	True				
ANR	1107106	Statement	->	2548:21:80333:80334	1106984	23	True				
ANR	1107107	Statement	user	2548:23:80335:80338	1106984	24	True				
ANR	1107108	Statement	","	2548:27:80339:80339	1106984	25	True				
ANR	1107109	Statement	sdb_fmt	2548:29:80341:80347	1106984	26	True				
ANR	1107110	Statement	(	2548:37:80349:80349	1106984	27	True				
ANR	1107111	Statement	""":del-comment 0x%08"""	2548:38:80350:80369	1106984	28	True				
ANR	1107112	Statement	PFMT64x	2548:58:80370:80376	1106984	29	True				
ANR	1107113	Statement	","	2548:65:80377:80377	1106984	30	True				
ANR	1107114	Statement	rems	2548:67:80379:80382	1106984	31	True				
ANR	1107115	Statement	->	2548:71:80383:80384	1106984	32	True				
ANR	1107116	Statement	addr	2548:73:80385:80388	1106984	33	True				
ANR	1107117	Statement	)	2548:77:80389:80389	1106984	34	True				
ANR	1107118	Statement	)	2548:78:80390:80390	1106984	35	True				
ANR	1107119	ExpressionStatement		2548:79:80391:80391	1106984	36	True				
ANR	1107120	BreakStatement	break ;	2549:3:80396:80401	1106984	37	True				
ANR	1107121	BreakStatement	break ;	2551:2:80409:80414	1106984	5	True				
ANR	1107122	Label	case R_EVENT_META_CLEAR :	2552:1:80417:80440	1106984	6	True				
ANR	1107123	Identifier	R_EVENT_META_CLEAR		1106984	0					
ANR	1107124	SwitchStatement	switch ( rems -> type )		1106984	7					
ANR	1107125	Condition	rems -> type	2553:10:80452:80461	1106984	0	True				
ANR	1107126	PtrMemberAccess	rems -> type		1106984	0					
ANR	1107127	Identifier	rems		1106984	0					
ANR	1107128	Identifier	type		1106984	1					
ANR	1107129	CompoundStatement		29:22:696:696	1106984	1					
ANR	1107130	Label	case 'C' :	2554:2:80468:80476	1106984	0	True				
ANR	1107131	Statement	r_core_log_add	2555:3:80481:80494	1106984	1	True				
ANR	1107132	Statement	(	2555:18:80496:80496	1106984	2	True				
ANR	1107133	Statement	ev	2555:19:80497:80498	1106984	3	True				
ANR	1107134	Statement	->	2555:21:80499:80500	1106984	4	True				
ANR	1107135	Statement	user	2555:23:80501:80504	1106984	5	True				
ANR	1107136	Statement	","	2555:27:80505:80505	1106984	6	True				
ANR	1107137	Statement	sdb_fmt	2555:29:80507:80513	1106984	7	True				
ANR	1107138	Statement	(	2555:37:80515:80515	1106984	8	True				
ANR	1107139	Statement	""":clear-comments 0x%08"""	2555:38:80516:80538	1106984	9	True				
ANR	1107140	Statement	PFMT64x	2555:61:80539:80545	1106984	10	True				
ANR	1107141	Statement	","	2555:68:80546:80546	1106984	11	True				
ANR	1107142	Statement	rems	2555:70:80548:80551	1106984	12	True				
ANR	1107143	Statement	->	2555:74:80552:80553	1106984	13	True				
ANR	1107144	Statement	addr	2555:76:80554:80557	1106984	14	True				
ANR	1107145	Statement	)	2555:80:80558:80558	1106984	15	True				
ANR	1107146	Statement	)	2555:81:80559:80559	1106984	16	True				
ANR	1107147	ExpressionStatement		2555:82:80560:80560	1106984	17	True				
ANR	1107148	BreakStatement	break ;	2556:3:80565:80570	1106984	18	True				
ANR	1107149	Label	default :	2557:2:80574:80581	1106984	19	True				
ANR	1107150	Identifier	default		1106984	0					
ANR	1107151	Statement	r_core_log_add	2558:3:80586:80599	1106984	20	True				
ANR	1107152	Statement	(	2558:18:80601:80601	1106984	21	True				
ANR	1107153	Statement	ev	2558:19:80602:80603	1106984	22	True				
ANR	1107154	Statement	->	2558:21:80604:80605	1106984	23	True				
ANR	1107155	Statement	user	2558:23:80606:80609	1106984	24	True				
ANR	1107156	Statement	","	2558:27:80610:80610	1106984	25	True				
ANR	1107157	Statement	sdb_fmt	2558:29:80612:80618	1106984	26	True				
ANR	1107158	Statement	(	2558:37:80620:80620	1106984	27	True				
ANR	1107159	Statement	""":clear-comments 0x%08"""	2558:38:80621:80643	1106984	28	True				
ANR	1107160	Statement	PFMT64x	2558:61:80644:80650	1106984	29	True				
ANR	1107161	Statement	","	2558:68:80651:80651	1106984	30	True				
ANR	1107162	Statement	rems	2558:70:80653:80656	1106984	31	True				
ANR	1107163	Statement	->	2558:74:80657:80658	1106984	32	True				
ANR	1107164	Statement	addr	2558:76:80659:80662	1106984	33	True				
ANR	1107165	Statement	)	2558:80:80663:80663	1106984	34	True				
ANR	1107166	Statement	)	2558:81:80664:80664	1106984	35	True				
ANR	1107167	ExpressionStatement		2558:82:80665:80665	1106984	36	True				
ANR	1107168	BreakStatement	break ;	2559:3:80670:80675	1106984	37	True				
ANR	1107169	BreakStatement	break ;	2561:2:80683:80688	1106984	8	True				
ANR	1107170	Label	default :	2562:1:80691:80698	1106984	9	True				
ANR	1107171	Identifier	default		1106984	0					
ANR	1107172	BreakStatement	break ;	2564:2:80712:80717	1106984	10	True				
ANR	1107173	ExpressionStatement	free ( str )	2566:1:80723:80733	1106984	5	True				
ANR	1107174	CallExpression	free ( str )		1106984	0					
ANR	1107175	Callee	free		1106984	0					
ANR	1107176	Identifier	free		1106984	0					
ANR	1107177	ArgumentList	str		1106984	1					
ANR	1107178	Argument	str		1106984	0					
ANR	1107179	Identifier	str		1106984	0					
ANR	1107180	ReturnType	static void		1106984	1					
ANR	1107181	Identifier	cb_event_handler		1106984	2					
ANR	1107182	ParameterList	"REvent * ev , int event_type , void * user , void * data"		1106984	3					
ANR	1107183	Parameter	REvent * ev	2525:29:79715:79724	1106984	0	True				
ANR	1107184	ParameterType	REvent *		1106984	0					
ANR	1107185	Identifier	ev		1106984	1					
ANR	1107186	Parameter	int event_type	2525:41:79727:79740	1106984	1	True				
ANR	1107187	ParameterType	int		1106984	0					
ANR	1107188	Identifier	event_type		1106984	1					
ANR	1107189	Parameter	void * user	2525:57:79743:79752	1106984	2	True				
ANR	1107190	ParameterType	void *		1106984	0					
ANR	1107191	Identifier	user		1106984	1					
ANR	1107192	Parameter	void * data	2525:69:79755:79764	1106984	3	True				
ANR	1107193	ParameterType	void *		1106984	0					
ANR	1107194	Identifier	data		1106984	1					
ANR	1107195	CFGEntryNode	ENTRY		1106984		True				
ANR	1107196	CFGExitNode	EXIT		1106984		True				
ANR	1107197	Symbol	ev -> user		1106984						
ANR	1107198	Symbol	data		1106984						
ANR	1107199	Symbol	* core		1106984						
ANR	1107200	Symbol	rems -> string		1106984						
ANR	1107201	Symbol	rems		1106984						
ANR	1107202	Symbol	* rems		1106984						
ANR	1107203	Symbol	core -> log_events		1106984						
ANR	1107204	Symbol	str		1106984						
ANR	1107205	Symbol	ev		1106984						
ANR	1107206	Symbol	core		1106984						
ANR	1107207	Symbol	r_base64_encode_dyn		1106984						
ANR	1107208	Symbol	event_type		1106984						
ANR	1107209	Symbol	* ev		1106984						
ANR	1107210	Symbol	user		1106984						
ANR	1107211	Symbol	rems -> type		1106984						
ANR	1107212	Function	core_flg_class_set	2569:0:80738:80959							
ANR	1107213	FunctionDef	"core_flg_class_set (RFlag * f , const char * name , ut64 addr , ut32 size)"		1107212	0					
ANR	1107214	CompoundStatement		2569:87:80825:80959	1107212	0					
ANR	1107215	ExpressionStatement	"r_flag_space_push ( f , R_FLAGS_FS_CLASSES )"	2570:1:80828:80869	1107212	0	True				
ANR	1107216	CallExpression	"r_flag_space_push ( f , R_FLAGS_FS_CLASSES )"		1107212	0					
ANR	1107217	Callee	r_flag_space_push		1107212	0					
ANR	1107218	Identifier	r_flag_space_push		1107212	0					
ANR	1107219	ArgumentList	f		1107212	1					
ANR	1107220	Argument	f		1107212	0					
ANR	1107221	Identifier	f		1107212	0					
ANR	1107222	Argument	R_FLAGS_FS_CLASSES		1107212	1					
ANR	1107223	Identifier	R_FLAGS_FS_CLASSES		1107212	0					
ANR	1107224	IdentifierDeclStatement	"RFlagItem * res = r_flag_set ( f , name , addr , size ) ;"	2571:1:80872:80921	1107212	1	True				
ANR	1107225	IdentifierDecl	"* res = r_flag_set ( f , name , addr , size )"		1107212	0					
ANR	1107226	IdentifierDeclType	RFlagItem *		1107212	0					
ANR	1107227	Identifier	res		1107212	1					
ANR	1107228	AssignmentExpression	"* res = r_flag_set ( f , name , addr , size )"		1107212	2		=			
ANR	1107229	Identifier	res		1107212	0					
ANR	1107230	CallExpression	"r_flag_set ( f , name , addr , size )"		1107212	1					
ANR	1107231	Callee	r_flag_set		1107212	0					
ANR	1107232	Identifier	r_flag_set		1107212	0					
ANR	1107233	ArgumentList	f		1107212	1					
ANR	1107234	Argument	f		1107212	0					
ANR	1107235	Identifier	f		1107212	0					
ANR	1107236	Argument	name		1107212	1					
ANR	1107237	Identifier	name		1107212	0					
ANR	1107238	Argument	addr		1107212	2					
ANR	1107239	Identifier	addr		1107212	0					
ANR	1107240	Argument	size		1107212	3					
ANR	1107241	Identifier	size		1107212	0					
ANR	1107242	ExpressionStatement	r_flag_space_pop ( f )	2572:1:80924:80944	1107212	2	True				
ANR	1107243	CallExpression	r_flag_space_pop ( f )		1107212	0					
ANR	1107244	Callee	r_flag_space_pop		1107212	0					
ANR	1107245	Identifier	r_flag_space_pop		1107212	0					
ANR	1107246	ArgumentList	f		1107212	1					
ANR	1107247	Argument	f		1107212	0					
ANR	1107248	Identifier	f		1107212	0					
ANR	1107249	ReturnStatement	return res ;	2573:1:80947:80957	1107212	3	True				
ANR	1107250	Identifier	res		1107212	0					
ANR	1107251	ReturnType	static RFlagItem *		1107212	1					
ANR	1107252	Identifier	core_flg_class_set		1107212	2					
ANR	1107253	ParameterList	"RFlag * f , const char * name , ut64 addr , ut32 size"		1107212	3					
ANR	1107254	Parameter	RFlag * f	2569:37:80775:80782	1107212	0	True				
ANR	1107255	ParameterType	RFlag *		1107212	0					
ANR	1107256	Identifier	f		1107212	1					
ANR	1107257	Parameter	const char * name	2569:47:80785:80800	1107212	1	True				
ANR	1107258	ParameterType	const char *		1107212	0					
ANR	1107259	Identifier	name		1107212	1					
ANR	1107260	Parameter	ut64 addr	2569:65:80803:80811	1107212	2	True				
ANR	1107261	ParameterType	ut64		1107212	0					
ANR	1107262	Identifier	addr		1107212	1					
ANR	1107263	Parameter	ut32 size	2569:76:80814:80822	1107212	3	True				
ANR	1107264	ParameterType	ut32		1107212	0					
ANR	1107265	Identifier	size		1107212	1					
ANR	1107266	CFGEntryNode	ENTRY		1107212		True				
ANR	1107267	CFGExitNode	EXIT		1107212		True				
ANR	1107268	Symbol	R_FLAGS_FS_CLASSES		1107212						
ANR	1107269	Symbol	res		1107212						
ANR	1107270	Symbol	size		1107212						
ANR	1107271	Symbol	f		1107212						
ANR	1107272	Symbol	name		1107212						
ANR	1107273	Symbol	addr		1107212						
ANR	1107274	Symbol	r_flag_set		1107212						
ANR	1107275	Function	core_flg_class_get	2576:0:80962:81149							
ANR	1107276	FunctionDef	"core_flg_class_get (RFlag * f , const char * name)"		1107275	0					
ANR	1107277	CompoundStatement		2576:65:81027:81149	1107275	0					
ANR	1107278	ExpressionStatement	"r_flag_space_push ( f , R_FLAGS_FS_CLASSES )"	2577:1:81030:81071	1107275	0	True				
ANR	1107279	CallExpression	"r_flag_space_push ( f , R_FLAGS_FS_CLASSES )"		1107275	0					
ANR	1107280	Callee	r_flag_space_push		1107275	0					
ANR	1107281	Identifier	r_flag_space_push		1107275	0					
ANR	1107282	ArgumentList	f		1107275	1					
ANR	1107283	Argument	f		1107275	0					
ANR	1107284	Identifier	f		1107275	0					
ANR	1107285	Argument	R_FLAGS_FS_CLASSES		1107275	1					
ANR	1107286	Identifier	R_FLAGS_FS_CLASSES		1107275	0					
ANR	1107287	IdentifierDeclStatement	"RFlagItem * res = r_flag_get ( f , name ) ;"	2578:1:81074:81111	1107275	1	True				
ANR	1107288	IdentifierDecl	"* res = r_flag_get ( f , name )"		1107275	0					
ANR	1107289	IdentifierDeclType	RFlagItem *		1107275	0					
ANR	1107290	Identifier	res		1107275	1					
ANR	1107291	AssignmentExpression	"* res = r_flag_get ( f , name )"		1107275	2		=			
ANR	1107292	Identifier	res		1107275	0					
ANR	1107293	CallExpression	"r_flag_get ( f , name )"		1107275	1					
ANR	1107294	Callee	r_flag_get		1107275	0					
ANR	1107295	Identifier	r_flag_get		1107275	0					
ANR	1107296	ArgumentList	f		1107275	1					
ANR	1107297	Argument	f		1107275	0					
ANR	1107298	Identifier	f		1107275	0					
ANR	1107299	Argument	name		1107275	1					
ANR	1107300	Identifier	name		1107275	0					
ANR	1107301	ExpressionStatement	r_flag_space_pop ( f )	2579:1:81114:81134	1107275	2	True				
ANR	1107302	CallExpression	r_flag_space_pop ( f )		1107275	0					
ANR	1107303	Callee	r_flag_space_pop		1107275	0					
ANR	1107304	Identifier	r_flag_space_pop		1107275	0					
ANR	1107305	ArgumentList	f		1107275	1					
ANR	1107306	Argument	f		1107275	0					
ANR	1107307	Identifier	f		1107275	0					
ANR	1107308	ReturnStatement	return res ;	2580:1:81137:81147	1107275	3	True				
ANR	1107309	Identifier	res		1107275	0					
ANR	1107310	ReturnType	static RFlagItem *		1107275	1					
ANR	1107311	Identifier	core_flg_class_get		1107275	2					
ANR	1107312	ParameterList	"RFlag * f , const char * name"		1107275	3					
ANR	1107313	Parameter	RFlag * f	2576:37:80999:81006	1107275	0	True				
ANR	1107314	ParameterType	RFlag *		1107275	0					
ANR	1107315	Identifier	f		1107275	1					
ANR	1107316	Parameter	const char * name	2576:47:81009:81024	1107275	1	True				
ANR	1107317	ParameterType	const char *		1107275	0					
ANR	1107318	Identifier	name		1107275	1					
ANR	1107319	CFGEntryNode	ENTRY		1107275		True				
ANR	1107320	CFGExitNode	EXIT		1107275		True				
ANR	1107321	Symbol	R_FLAGS_FS_CLASSES		1107275						
ANR	1107322	Symbol	r_flag_get		1107275						
ANR	1107323	Symbol	res		1107275						
ANR	1107324	Symbol	f		1107275						
ANR	1107325	Symbol	name		1107275						
ANR	1107326	Function	core_flg_fcn_set	2583:0:81152:81373							
ANR	1107327	FunctionDef	"core_flg_fcn_set (RFlag * f , const char * name , ut64 addr , ut32 size)"		1107326	0					
ANR	1107328	CompoundStatement		2583:85:81237:81373	1107326	0					
ANR	1107329	ExpressionStatement	"r_flag_space_push ( f , R_FLAGS_FS_FUNCTIONS )"	2584:1:81240:81283	1107326	0	True				
ANR	1107330	CallExpression	"r_flag_space_push ( f , R_FLAGS_FS_FUNCTIONS )"		1107326	0					
ANR	1107331	Callee	r_flag_space_push		1107326	0					
ANR	1107332	Identifier	r_flag_space_push		1107326	0					
ANR	1107333	ArgumentList	f		1107326	1					
ANR	1107334	Argument	f		1107326	0					
ANR	1107335	Identifier	f		1107326	0					
ANR	1107336	Argument	R_FLAGS_FS_FUNCTIONS		1107326	1					
ANR	1107337	Identifier	R_FLAGS_FS_FUNCTIONS		1107326	0					
ANR	1107338	IdentifierDeclStatement	"RFlagItem * res = r_flag_set ( f , name , addr , size ) ;"	2585:1:81286:81335	1107326	1	True				
ANR	1107339	IdentifierDecl	"* res = r_flag_set ( f , name , addr , size )"		1107326	0					
ANR	1107340	IdentifierDeclType	RFlagItem *		1107326	0					
ANR	1107341	Identifier	res		1107326	1					
ANR	1107342	AssignmentExpression	"* res = r_flag_set ( f , name , addr , size )"		1107326	2		=			
ANR	1107343	Identifier	res		1107326	0					
ANR	1107344	CallExpression	"r_flag_set ( f , name , addr , size )"		1107326	1					
ANR	1107345	Callee	r_flag_set		1107326	0					
ANR	1107346	Identifier	r_flag_set		1107326	0					
ANR	1107347	ArgumentList	f		1107326	1					
ANR	1107348	Argument	f		1107326	0					
ANR	1107349	Identifier	f		1107326	0					
ANR	1107350	Argument	name		1107326	1					
ANR	1107351	Identifier	name		1107326	0					
ANR	1107352	Argument	addr		1107326	2					
ANR	1107353	Identifier	addr		1107326	0					
ANR	1107354	Argument	size		1107326	3					
ANR	1107355	Identifier	size		1107326	0					
ANR	1107356	ExpressionStatement	r_flag_space_pop ( f )	2586:1:81338:81358	1107326	2	True				
ANR	1107357	CallExpression	r_flag_space_pop ( f )		1107326	0					
ANR	1107358	Callee	r_flag_space_pop		1107326	0					
ANR	1107359	Identifier	r_flag_space_pop		1107326	0					
ANR	1107360	ArgumentList	f		1107326	1					
ANR	1107361	Argument	f		1107326	0					
ANR	1107362	Identifier	f		1107326	0					
ANR	1107363	ReturnStatement	return res ;	2587:1:81361:81371	1107326	3	True				
ANR	1107364	Identifier	res		1107326	0					
ANR	1107365	ReturnType	static RFlagItem *		1107326	1					
ANR	1107366	Identifier	core_flg_fcn_set		1107326	2					
ANR	1107367	ParameterList	"RFlag * f , const char * name , ut64 addr , ut32 size"		1107326	3					
ANR	1107368	Parameter	RFlag * f	2583:35:81187:81194	1107326	0	True				
ANR	1107369	ParameterType	RFlag *		1107326	0					
ANR	1107370	Identifier	f		1107326	1					
ANR	1107371	Parameter	const char * name	2583:45:81197:81212	1107326	1	True				
ANR	1107372	ParameterType	const char *		1107326	0					
ANR	1107373	Identifier	name		1107326	1					
ANR	1107374	Parameter	ut64 addr	2583:63:81215:81223	1107326	2	True				
ANR	1107375	ParameterType	ut64		1107326	0					
ANR	1107376	Identifier	addr		1107326	1					
ANR	1107377	Parameter	ut32 size	2583:74:81226:81234	1107326	3	True				
ANR	1107378	ParameterType	ut32		1107326	0					
ANR	1107379	Identifier	size		1107326	1					
ANR	1107380	CFGEntryNode	ENTRY		1107326		True				
ANR	1107381	CFGExitNode	EXIT		1107326		True				
ANR	1107382	Symbol	R_FLAGS_FS_FUNCTIONS		1107326						
ANR	1107383	Symbol	res		1107326						
ANR	1107384	Symbol	size		1107326						
ANR	1107385	Symbol	f		1107326						
ANR	1107386	Symbol	name		1107326						
ANR	1107387	Symbol	addr		1107326						
ANR	1107388	Symbol	r_flag_set		1107326						
ANR	1107389	Function	r_core_autocomplete_reload	2590:0:81376:81533							
ANR	1107390	FunctionDef	r_core_autocomplete_reload (RCore * core)		1107389	0					
ANR	1107391	CompoundStatement		2590:52:81428:81533	1107389	0					
ANR	1107392	ExpressionStatement	r_return_if_fail ( core )	2591:1:81431:81454	1107389	0	True				
ANR	1107393	CallExpression	r_return_if_fail ( core )		1107389	0					
ANR	1107394	Callee	r_return_if_fail		1107389	0					
ANR	1107395	Identifier	r_return_if_fail		1107389	0					
ANR	1107396	ArgumentList	core		1107389	1					
ANR	1107397	Argument	core		1107389	0					
ANR	1107398	Identifier	core		1107389	0					
ANR	1107399	ExpressionStatement	r_core_autocomplete_free ( core -> autocomplete )	2592:1:81457:81502	1107389	1	True				
ANR	1107400	CallExpression	r_core_autocomplete_free ( core -> autocomplete )		1107389	0					
ANR	1107401	Callee	r_core_autocomplete_free		1107389	0					
ANR	1107402	Identifier	r_core_autocomplete_free		1107389	0					
ANR	1107403	ArgumentList	core -> autocomplete		1107389	1					
ANR	1107404	Argument	core -> autocomplete		1107389	0					
ANR	1107405	PtrMemberAccess	core -> autocomplete		1107389	0					
ANR	1107406	Identifier	core		1107389	0					
ANR	1107407	Identifier	autocomplete		1107389	1					
ANR	1107408	ExpressionStatement	__init_autocomplete ( core )	2593:1:81505:81531	1107389	2	True				
ANR	1107409	CallExpression	__init_autocomplete ( core )		1107389	0					
ANR	1107410	Callee	__init_autocomplete		1107389	0					
ANR	1107411	Identifier	__init_autocomplete		1107389	0					
ANR	1107412	ArgumentList	core		1107389	1					
ANR	1107413	Argument	core		1107389	0					
ANR	1107414	Identifier	core		1107389	0					
ANR	1107415	ReturnType	R_API void		1107389	1					
ANR	1107416	Identifier	r_core_autocomplete_reload		1107389	2					
ANR	1107417	ParameterList	RCore * core		1107389	3					
ANR	1107418	Parameter	RCore * core	2590:39:81415:81425	1107389	0	True				
ANR	1107419	ParameterType	RCore *		1107389	0					
ANR	1107420	Identifier	core		1107389	1					
ANR	1107421	CFGEntryNode	ENTRY		1107389		True				
ANR	1107422	CFGExitNode	EXIT		1107389		True				
ANR	1107423	Symbol	core		1107389						
ANR	1107424	Symbol	core -> autocomplete		1107389						
ANR	1107425	Symbol	* core		1107389						
ANR	1107426	Function	r_core_flag_get_by_spaces	2596:0:81536:81902							
ANR	1107427	FunctionDef	"r_core_flag_get_by_spaces (RFlag * f , ut64 off)"		1107426	0					
ANR	1107428	CompoundStatement		2596:63:81599:81902	1107426	0					
ANR	1107429	ReturnStatement	"return r_flag_get_by_spaces ( f , off , R_FLAGS_FS_FUNCTIONS , R_FLAGS_FS_SIGNS , R_FLAGS_FS_CLASSES , R_FLAGS_FS_SYMBOLS , R_FLAGS_FS_IMPORTS , R_FLAGS_FS_RELOCS , R_FLAGS_FS_STRINGS , R_FLAGS_FS_RESOURCES , R_FLAGS_FS_SYMBOLS_SECTIONS , R_FLAGS_FS_SECTIONS , R_FLAGS_FS_SEGMENTS , NULL ) ;"	2597:1:81602:81900	1107426	0	True				
ANR	1107430	CallExpression	"r_flag_get_by_spaces ( f , off , R_FLAGS_FS_FUNCTIONS , R_FLAGS_FS_SIGNS , R_FLAGS_FS_CLASSES , R_FLAGS_FS_SYMBOLS , R_FLAGS_FS_IMPORTS , R_FLAGS_FS_RELOCS , R_FLAGS_FS_STRINGS , R_FLAGS_FS_RESOURCES , R_FLAGS_FS_SYMBOLS_SECTIONS , R_FLAGS_FS_SECTIONS , R_FLAGS_FS_SEGMENTS , NULL )"		1107426	0					
ANR	1107431	Callee	r_flag_get_by_spaces		1107426	0					
ANR	1107432	Identifier	r_flag_get_by_spaces		1107426	0					
ANR	1107433	ArgumentList	f		1107426	1					
ANR	1107434	Argument	f		1107426	0					
ANR	1107435	Identifier	f		1107426	0					
ANR	1107436	Argument	off		1107426	1					
ANR	1107437	Identifier	off		1107426	0					
ANR	1107438	Argument	R_FLAGS_FS_FUNCTIONS		1107426	2					
ANR	1107439	Identifier	R_FLAGS_FS_FUNCTIONS		1107426	0					
ANR	1107440	Argument	R_FLAGS_FS_SIGNS		1107426	3					
ANR	1107441	Identifier	R_FLAGS_FS_SIGNS		1107426	0					
ANR	1107442	Argument	R_FLAGS_FS_CLASSES		1107426	4					
ANR	1107443	Identifier	R_FLAGS_FS_CLASSES		1107426	0					
ANR	1107444	Argument	R_FLAGS_FS_SYMBOLS		1107426	5					
ANR	1107445	Identifier	R_FLAGS_FS_SYMBOLS		1107426	0					
ANR	1107446	Argument	R_FLAGS_FS_IMPORTS		1107426	6					
ANR	1107447	Identifier	R_FLAGS_FS_IMPORTS		1107426	0					
ANR	1107448	Argument	R_FLAGS_FS_RELOCS		1107426	7					
ANR	1107449	Identifier	R_FLAGS_FS_RELOCS		1107426	0					
ANR	1107450	Argument	R_FLAGS_FS_STRINGS		1107426	8					
ANR	1107451	Identifier	R_FLAGS_FS_STRINGS		1107426	0					
ANR	1107452	Argument	R_FLAGS_FS_RESOURCES		1107426	9					
ANR	1107453	Identifier	R_FLAGS_FS_RESOURCES		1107426	0					
ANR	1107454	Argument	R_FLAGS_FS_SYMBOLS_SECTIONS		1107426	10					
ANR	1107455	Identifier	R_FLAGS_FS_SYMBOLS_SECTIONS		1107426	0					
ANR	1107456	Argument	R_FLAGS_FS_SECTIONS		1107426	11					
ANR	1107457	Identifier	R_FLAGS_FS_SECTIONS		1107426	0					
ANR	1107458	Argument	R_FLAGS_FS_SEGMENTS		1107426	12					
ANR	1107459	Identifier	R_FLAGS_FS_SEGMENTS		1107426	0					
ANR	1107460	Argument	NULL		1107426	13					
ANR	1107461	Identifier	NULL		1107426	0					
ANR	1107462	ReturnType	R_API RFlagItem *		1107426	1					
ANR	1107463	Identifier	r_core_flag_get_by_spaces		1107426	2					
ANR	1107464	ParameterList	"RFlag * f , ut64 off"		1107426	3					
ANR	1107465	Parameter	RFlag * f	2596:43:81579:81586	1107426	0	True				
ANR	1107466	ParameterType	RFlag *		1107426	0					
ANR	1107467	Identifier	f		1107426	1					
ANR	1107468	Parameter	ut64 off	2596:53:81589:81596	1107426	1	True				
ANR	1107469	ParameterType	ut64		1107426	0					
ANR	1107470	Identifier	off		1107426	1					
ANR	1107471	CFGEntryNode	ENTRY		1107426		True				
ANR	1107472	CFGExitNode	EXIT		1107426		True				
ANR	1107473	Symbol	R_FLAGS_FS_SECTIONS		1107426						
ANR	1107474	Symbol	r_flag_get_by_spaces		1107426						
ANR	1107475	Symbol	NULL		1107426						
ANR	1107476	Symbol	R_FLAGS_FS_RELOCS		1107426						
ANR	1107477	Symbol	f		1107426						
ANR	1107478	Symbol	R_FLAGS_FS_SEGMENTS		1107426						
ANR	1107479	Symbol	R_FLAGS_FS_STRINGS		1107426						
ANR	1107480	Symbol	off		1107426						
ANR	1107481	Symbol	R_FLAGS_FS_CLASSES		1107426						
ANR	1107482	Symbol	R_FLAGS_FS_FUNCTIONS		1107426						
ANR	1107483	Symbol	R_FLAGS_FS_SYMBOLS_SECTIONS		1107426						
ANR	1107484	Symbol	R_FLAGS_FS_SYMBOLS		1107426						
ANR	1107485	Symbol	R_FLAGS_FS_IMPORTS		1107426						
ANR	1107486	Symbol	R_FLAGS_FS_RESOURCES		1107426						
ANR	1107487	Symbol	R_FLAGS_FS_SIGNS		1107426						
ANR	1107488	Function	win_eprintf	2613:0:81921:82093							
ANR	1107489	FunctionDef	win_eprintf (const char * format)		1107488	0					
ANR	1107490	CompoundStatement		2613:48:81969:82093	1107488	0					
ANR	1107491	IdentifierDeclStatement	va_list ap ;	2614:1:81972:81982	1107488	0	True				
ANR	1107492	IdentifierDecl	ap		1107488	0					
ANR	1107493	IdentifierDeclType	va_list		1107488	0					
ANR	1107494	Identifier	ap		1107488	1					
ANR	1107495	ExpressionStatement	"va_start ( ap , format )"	2615:1:81985:82006	1107488	1	True				
ANR	1107496	CallExpression	"va_start ( ap , format )"		1107488	0					
ANR	1107497	Callee	va_start		1107488	0					
ANR	1107498	Identifier	va_start		1107488	0					
ANR	1107499	ArgumentList	ap		1107488	1					
ANR	1107500	Argument	ap		1107488	0					
ANR	1107501	Identifier	ap		1107488	0					
ANR	1107502	Argument	format		1107488	1					
ANR	1107503	Identifier	format		1107488	0					
ANR	1107504	ExpressionStatement	"r_cons_win_vhprintf ( STD_ERROR_HANDLE , false , format , ap )"	2616:1:82009:82066	1107488	2	True				
ANR	1107505	CallExpression	"r_cons_win_vhprintf ( STD_ERROR_HANDLE , false , format , ap )"		1107488	0					
ANR	1107506	Callee	r_cons_win_vhprintf		1107488	0					
ANR	1107507	Identifier	r_cons_win_vhprintf		1107488	0					
ANR	1107508	ArgumentList	STD_ERROR_HANDLE		1107488	1					
ANR	1107509	Argument	STD_ERROR_HANDLE		1107488	0					
ANR	1107510	Identifier	STD_ERROR_HANDLE		1107488	0					
ANR	1107511	Argument	false		1107488	1					
ANR	1107512	Identifier	false		1107488	0					
ANR	1107513	Argument	format		1107488	2					
ANR	1107514	Identifier	format		1107488	0					
ANR	1107515	Argument	ap		1107488	3					
ANR	1107516	Identifier	ap		1107488	0					
ANR	1107517	ExpressionStatement	va_end ( ap )	2617:1:82069:82080	1107488	3	True				
ANR	1107518	CallExpression	va_end ( ap )		1107488	0					
ANR	1107519	Callee	va_end		1107488	0					
ANR	1107520	Identifier	va_end		1107488	0					
ANR	1107521	ArgumentList	ap		1107488	1					
ANR	1107522	Argument	ap		1107488	0					
ANR	1107523	Identifier	ap		1107488	0					
ANR	1107524	ReturnStatement	return 0 ;	2618:1:82083:82091	1107488	4	True				
ANR	1107525	PrimaryExpression	0		1107488	0					
ANR	1107526	ReturnType	static int		1107488	1					
ANR	1107527	Identifier	win_eprintf		1107488	2					
ANR	1107528	ParameterList	const char * format		1107488	3					
ANR	1107529	Parameter	const char * format	2613:23:81944:81961	1107488	0	True				
ANR	1107530	ParameterType	const char *		1107488	0					
ANR	1107531	Identifier	format		1107488	1					
ANR	1107532	CFGEntryNode	ENTRY		1107488		True				
ANR	1107533	CFGExitNode	EXIT		1107488		True				
ANR	1107534	Symbol	STD_ERROR_HANDLE		1107488						
ANR	1107535	Symbol	format		1107488						
ANR	1107536	Symbol	false		1107488						
ANR	1107537	Symbol	ap		1107488						
ANR	1107538	Function	r_core_init	2622:0:82103:90068							
ANR	1107539	FunctionDef	r_core_init (RCore * core)		1107538	0					
ANR	1107540	CompoundStatement		2622:36:82139:90068	1107538	0					
ANR	1107541	ExpressionStatement	core -> blocksize = R_CORE_BLOCKSIZE	2623:1:82142:82176	1107538	0	True				
ANR	1107542	AssignmentExpression	core -> blocksize = R_CORE_BLOCKSIZE		1107538	0		=			
ANR	1107543	PtrMemberAccess	core -> blocksize		1107538	0					
ANR	1107544	Identifier	core		1107538	0					
ANR	1107545	Identifier	blocksize		1107538	1					
ANR	1107546	Identifier	R_CORE_BLOCKSIZE		1107538	1					
ANR	1107547	ExpressionStatement	"core -> block = ( ut8 * ) calloc ( R_CORE_BLOCKSIZE + 1 , 1 )"	2624:1:82179:82232	1107538	1	True				
ANR	1107548	AssignmentExpression	"core -> block = ( ut8 * ) calloc ( R_CORE_BLOCKSIZE + 1 , 1 )"		1107538	0		=			
ANR	1107549	PtrMemberAccess	core -> block		1107538	0					
ANR	1107550	Identifier	core		1107538	0					
ANR	1107551	Identifier	block		1107538	1					
ANR	1107552	CastExpression	"( ut8 * ) calloc ( R_CORE_BLOCKSIZE + 1 , 1 )"		1107538	1					
ANR	1107553	CastTarget	ut8 *		1107538	0					
ANR	1107554	CallExpression	"calloc ( R_CORE_BLOCKSIZE + 1 , 1 )"		1107538	1					
ANR	1107555	Callee	calloc		1107538	0					
ANR	1107556	Identifier	calloc		1107538	0					
ANR	1107557	ArgumentList	R_CORE_BLOCKSIZE + 1		1107538	1					
ANR	1107558	Argument	R_CORE_BLOCKSIZE + 1		1107538	0					
ANR	1107559	AdditiveExpression	R_CORE_BLOCKSIZE + 1		1107538	0		+			
ANR	1107560	Identifier	R_CORE_BLOCKSIZE		1107538	0					
ANR	1107561	PrimaryExpression	1		1107538	1					
ANR	1107562	Argument	1		1107538	1					
ANR	1107563	PrimaryExpression	1		1107538	0					
ANR	1107564	IfStatement	if ( ! core -> block )		1107538	2					
ANR	1107565	Condition	! core -> block	2625:5:82239:82250	1107538	0	True				
ANR	1107566	UnaryOperationExpression	! core -> block		1107538	0					
ANR	1107567	UnaryOperator	!		1107538	0					
ANR	1107568	PtrMemberAccess	core -> block		1107538	1					
ANR	1107569	Identifier	core		1107538	0					
ANR	1107570	Identifier	block		1107538	1					
ANR	1107571	CompoundStatement		4:19:113:113	1107538	1					
ANR	1107572	ExpressionStatement	"eprintf ( ""Cannot allocate %d byte(s)\\n"" , R_CORE_BLOCKSIZE )"	2626:2:82257:82315	1107538	0	True				
ANR	1107573	CallExpression	"eprintf ( ""Cannot allocate %d byte(s)\\n"" , R_CORE_BLOCKSIZE )"		1107538	0					
ANR	1107574	Callee	eprintf		1107538	0					
ANR	1107575	Identifier	eprintf		1107538	0					
ANR	1107576	ArgumentList	"""Cannot allocate %d byte(s)\\n"""		1107538	1					
ANR	1107577	Argument	"""Cannot allocate %d byte(s)\\n"""		1107538	0					
ANR	1107578	PrimaryExpression	"""Cannot allocate %d byte(s)\\n"""		1107538	0					
ANR	1107579	Argument	R_CORE_BLOCKSIZE		1107538	1					
ANR	1107580	Identifier	R_CORE_BLOCKSIZE		1107538	0					
ANR	1107581	ReturnStatement	return false ;	2628:2:82343:82355	1107538	1	True				
ANR	1107582	Identifier	false		1107538	0					
ANR	1107583	ExpressionStatement	r_core_setenv ( core )	2630:1:82361:82381	1107538	3	True				
ANR	1107584	CallExpression	r_core_setenv ( core )		1107538	0					
ANR	1107585	Callee	r_core_setenv		1107538	0					
ANR	1107586	Identifier	r_core_setenv		1107538	0					
ANR	1107587	ArgumentList	core		1107538	1					
ANR	1107588	Argument	core		1107538	0					
ANR	1107589	Identifier	core		1107538	0					
ANR	1107590	ExpressionStatement	core -> ev = r_event_new ( core )	2631:1:82384:82413	1107538	4	True				
ANR	1107591	AssignmentExpression	core -> ev = r_event_new ( core )		1107538	0		=			
ANR	1107592	PtrMemberAccess	core -> ev		1107538	0					
ANR	1107593	Identifier	core		1107538	0					
ANR	1107594	Identifier	ev		1107538	1					
ANR	1107595	CallExpression	r_event_new ( core )		1107538	1					
ANR	1107596	Callee	r_event_new		1107538	0					
ANR	1107597	Identifier	r_event_new		1107538	0					
ANR	1107598	ArgumentList	core		1107538	1					
ANR	1107599	Argument	core		1107538	0					
ANR	1107600	Identifier	core		1107538	0					
ANR	1107601	ExpressionStatement	"r_event_hook ( core -> ev , R_EVENT_ALL , cb_event_handler , NULL )"	2632:1:82416:82476	1107538	5	True				
ANR	1107602	CallExpression	"r_event_hook ( core -> ev , R_EVENT_ALL , cb_event_handler , NULL )"		1107538	0					
ANR	1107603	Callee	r_event_hook		1107538	0					
ANR	1107604	Identifier	r_event_hook		1107538	0					
ANR	1107605	ArgumentList	core -> ev		1107538	1					
ANR	1107606	Argument	core -> ev		1107538	0					
ANR	1107607	PtrMemberAccess	core -> ev		1107538	0					
ANR	1107608	Identifier	core		1107538	0					
ANR	1107609	Identifier	ev		1107538	1					
ANR	1107610	Argument	R_EVENT_ALL		1107538	1					
ANR	1107611	Identifier	R_EVENT_ALL		1107538	0					
ANR	1107612	Argument	cb_event_handler		1107538	2					
ANR	1107613	Identifier	cb_event_handler		1107538	0					
ANR	1107614	Argument	NULL		1107538	3					
ANR	1107615	Identifier	NULL		1107538	0					
ANR	1107616	ExpressionStatement	core -> lock = r_th_lock_new ( true )	2633:1:82479:82512	1107538	6	True				
ANR	1107617	AssignmentExpression	core -> lock = r_th_lock_new ( true )		1107538	0		=			
ANR	1107618	PtrMemberAccess	core -> lock		1107538	0					
ANR	1107619	Identifier	core		1107538	0					
ANR	1107620	Identifier	lock		1107538	1					
ANR	1107621	CallExpression	r_th_lock_new ( true )		1107538	1					
ANR	1107622	Callee	r_th_lock_new		1107538	0					
ANR	1107623	Identifier	r_th_lock_new		1107538	0					
ANR	1107624	ArgumentList	true		1107538	1					
ANR	1107625	Argument	true		1107538	0					
ANR	1107626	Identifier	true		1107538	0					
ANR	1107627	ExpressionStatement	core -> max_cmd_depth = R_CONS_CMD_DEPTH + 1	2634:1:82515:82557	1107538	7	True				
ANR	1107628	AssignmentExpression	core -> max_cmd_depth = R_CONS_CMD_DEPTH + 1		1107538	0		=			
ANR	1107629	PtrMemberAccess	core -> max_cmd_depth		1107538	0					
ANR	1107630	Identifier	core		1107538	0					
ANR	1107631	Identifier	max_cmd_depth		1107538	1					
ANR	1107632	AdditiveExpression	R_CONS_CMD_DEPTH + 1		1107538	1		+			
ANR	1107633	Identifier	R_CONS_CMD_DEPTH		1107538	0					
ANR	1107634	PrimaryExpression	1		1107538	1					
ANR	1107635	ExpressionStatement	"core -> sdb = sdb_new ( NULL , ""r2kv.sdb"" , 0 )"	2635:1:82560:82601	1107538	8	True				
ANR	1107636	AssignmentExpression	"core -> sdb = sdb_new ( NULL , ""r2kv.sdb"" , 0 )"		1107538	0		=			
ANR	1107637	PtrMemberAccess	core -> sdb		1107538	0					
ANR	1107638	Identifier	core		1107538	0					
ANR	1107639	Identifier	sdb		1107538	1					
ANR	1107640	CallExpression	"sdb_new ( NULL , ""r2kv.sdb"" , 0 )"		1107538	1					
ANR	1107641	Callee	sdb_new		1107538	0					
ANR	1107642	Identifier	sdb_new		1107538	0					
ANR	1107643	ArgumentList	NULL		1107538	1					
ANR	1107644	Argument	NULL		1107538	0					
ANR	1107645	Identifier	NULL		1107538	0					
ANR	1107646	Argument	"""r2kv.sdb"""		1107538	1					
ANR	1107647	PrimaryExpression	"""r2kv.sdb"""		1107538	0					
ANR	1107648	Argument	0		1107538	2					
ANR	1107649	PrimaryExpression	0		1107538	0					
ANR	1107650	ExpressionStatement	core -> lastsearch = NULL	2636:1:82634:82657	1107538	9	True				
ANR	1107651	AssignmentExpression	core -> lastsearch = NULL		1107538	0		=			
ANR	1107652	PtrMemberAccess	core -> lastsearch		1107538	0					
ANR	1107653	Identifier	core		1107538	0					
ANR	1107654	Identifier	lastsearch		1107538	1					
ANR	1107655	Identifier	NULL		1107538	1					
ANR	1107656	ExpressionStatement	core -> cmdfilter = NULL	2637:1:82660:82682	1107538	10	True				
ANR	1107657	AssignmentExpression	core -> cmdfilter = NULL		1107538	0		=			
ANR	1107658	PtrMemberAccess	core -> cmdfilter		1107538	0					
ANR	1107659	Identifier	core		1107538	0					
ANR	1107660	Identifier	cmdfilter		1107538	1					
ANR	1107661	Identifier	NULL		1107538	1					
ANR	1107662	ExpressionStatement	core -> switch_file_view = 0	2638:1:82685:82711	1107538	11	True				
ANR	1107663	AssignmentExpression	core -> switch_file_view = 0		1107538	0		=			
ANR	1107664	PtrMemberAccess	core -> switch_file_view		1107538	0					
ANR	1107665	Identifier	core		1107538	0					
ANR	1107666	Identifier	switch_file_view		1107538	1					
ANR	1107667	PrimaryExpression	0		1107538	1					
ANR	1107668	ExpressionStatement	core -> cmdremote = 0	2639:1:82714:82733	1107538	12	True				
ANR	1107669	AssignmentExpression	core -> cmdremote = 0		1107538	0		=			
ANR	1107670	PtrMemberAccess	core -> cmdremote		1107538	0					
ANR	1107671	Identifier	core		1107538	0					
ANR	1107672	Identifier	cmdremote		1107538	1					
ANR	1107673	PrimaryExpression	0		1107538	1					
ANR	1107674	ExpressionStatement	core -> incomment = false	2640:1:82736:82759	1107538	13	True				
ANR	1107675	AssignmentExpression	core -> incomment = false		1107538	0		=			
ANR	1107676	PtrMemberAccess	core -> incomment		1107538	0					
ANR	1107677	Identifier	core		1107538	0					
ANR	1107678	Identifier	incomment		1107538	1					
ANR	1107679	Identifier	false		1107538	1					
ANR	1107680	ExpressionStatement	core -> config = NULL	2641:1:82762:82781	1107538	14	True				
ANR	1107681	AssignmentExpression	core -> config = NULL		1107538	0		=			
ANR	1107682	PtrMemberAccess	core -> config		1107538	0					
ANR	1107683	Identifier	core		1107538	0					
ANR	1107684	Identifier	config		1107538	1					
ANR	1107685	Identifier	NULL		1107538	1					
ANR	1107686	ExpressionStatement	core -> http_up = false	2642:1:82784:82805	1107538	15	True				
ANR	1107687	AssignmentExpression	core -> http_up = false		1107538	0		=			
ANR	1107688	PtrMemberAccess	core -> http_up		1107538	0					
ANR	1107689	Identifier	core		1107538	0					
ANR	1107690	Identifier	http_up		1107538	1					
ANR	1107691	Identifier	false		1107538	1					
ANR	1107692	ExpressionStatement	ZERO_FILL ( core -> root_cmd_descriptor )	2643:1:82808:82845	1107538	16	True				
ANR	1107693	CallExpression	ZERO_FILL ( core -> root_cmd_descriptor )		1107538	0					
ANR	1107694	Callee	ZERO_FILL		1107538	0					
ANR	1107695	Identifier	ZERO_FILL		1107538	0					
ANR	1107696	ArgumentList	core -> root_cmd_descriptor		1107538	1					
ANR	1107697	Argument	core -> root_cmd_descriptor		1107538	0					
ANR	1107698	PtrMemberAccess	core -> root_cmd_descriptor		1107538	0					
ANR	1107699	Identifier	core		1107538	0					
ANR	1107700	Identifier	root_cmd_descriptor		1107538	1					
ANR	1107701	ExpressionStatement	core -> print = r_print_new ( )	2644:1:82848:82876	1107538	17	True				
ANR	1107702	AssignmentExpression	core -> print = r_print_new ( )		1107538	0		=			
ANR	1107703	PtrMemberAccess	core -> print		1107538	0					
ANR	1107704	Identifier	core		1107538	0					
ANR	1107705	Identifier	print		1107538	1					
ANR	1107706	CallExpression	r_print_new ( )		1107538	1					
ANR	1107707	Callee	r_print_new		1107538	0					
ANR	1107708	Identifier	r_print_new		1107538	0					
ANR	1107709	ArgumentList			1107538	1					
ANR	1107710	ExpressionStatement	core -> ropchain = r_list_newf ( ( RListFree ) free )	2645:1:82879:82925	1107538	18	True				
ANR	1107711	AssignmentExpression	core -> ropchain = r_list_newf ( ( RListFree ) free )		1107538	0		=			
ANR	1107712	PtrMemberAccess	core -> ropchain		1107538	0					
ANR	1107713	Identifier	core		1107538	0					
ANR	1107714	Identifier	ropchain		1107538	1					
ANR	1107715	CallExpression	r_list_newf ( ( RListFree ) free )		1107538	1					
ANR	1107716	Callee	r_list_newf		1107538	0					
ANR	1107717	Identifier	r_list_newf		1107538	0					
ANR	1107718	ArgumentList	( RListFree ) free		1107538	1					
ANR	1107719	Argument	( RListFree ) free		1107538	0					
ANR	1107720	CastExpression	( RListFree ) free		1107538	0					
ANR	1107721	CastTarget	RListFree		1107538	0					
ANR	1107722	Identifier	free		1107538	1					
ANR	1107723	ExpressionStatement	"r_core_bind ( core , & ( core -> print -> coreb ) )"	2646:1:82928:82969	1107538	19	True				
ANR	1107724	CallExpression	"r_core_bind ( core , & ( core -> print -> coreb ) )"		1107538	0					
ANR	1107725	Callee	r_core_bind		1107538	0					
ANR	1107726	Identifier	r_core_bind		1107538	0					
ANR	1107727	ArgumentList	core		1107538	1					
ANR	1107728	Argument	core		1107538	0					
ANR	1107729	Identifier	core		1107538	0					
ANR	1107730	Argument	& ( core -> print -> coreb )		1107538	1					
ANR	1107731	UnaryOperationExpression	& ( core -> print -> coreb )		1107538	0					
ANR	1107732	UnaryOperator	&		1107538	0					
ANR	1107733	PtrMemberAccess	core -> print -> coreb		1107538	1					
ANR	1107734	PtrMemberAccess	core -> print		1107538	0					
ANR	1107735	Identifier	core		1107538	0					
ANR	1107736	Identifier	print		1107538	1					
ANR	1107737	Identifier	coreb		1107538	1					
ANR	1107738	ExpressionStatement	core -> print -> user = core	2647:1:82972:82996	1107538	20	True				
ANR	1107739	AssignmentExpression	core -> print -> user = core		1107538	0		=			
ANR	1107740	PtrMemberAccess	core -> print -> user		1107538	0					
ANR	1107741	PtrMemberAccess	core -> print		1107538	0					
ANR	1107742	Identifier	core		1107538	0					
ANR	1107743	Identifier	print		1107538	1					
ANR	1107744	Identifier	user		1107538	1					
ANR	1107745	Identifier	core		1107538	1					
ANR	1107746	ExpressionStatement	core -> print -> num = core -> num	2648:1:82999:83027	1107538	21	True				
ANR	1107747	AssignmentExpression	core -> print -> num = core -> num		1107538	0		=			
ANR	1107748	PtrMemberAccess	core -> print -> num		1107538	0					
ANR	1107749	PtrMemberAccess	core -> print		1107538	0					
ANR	1107750	Identifier	core		1107538	0					
ANR	1107751	Identifier	print		1107538	1					
ANR	1107752	Identifier	num		1107538	1					
ANR	1107753	PtrMemberAccess	core -> num		1107538	1					
ANR	1107754	Identifier	core		1107538	0					
ANR	1107755	Identifier	num		1107538	1					
ANR	1107756	ExpressionStatement	core -> print -> offname = r_core_print_offname	2649:1:83030:83073	1107538	22	True				
ANR	1107757	AssignmentExpression	core -> print -> offname = r_core_print_offname		1107538	0		=			
ANR	1107758	PtrMemberAccess	core -> print -> offname		1107538	0					
ANR	1107759	PtrMemberAccess	core -> print		1107538	0					
ANR	1107760	Identifier	core		1107538	0					
ANR	1107761	Identifier	print		1107538	1					
ANR	1107762	Identifier	offname		1107538	1					
ANR	1107763	Identifier	r_core_print_offname		1107538	1					
ANR	1107764	ExpressionStatement	core -> print -> offsize = r_core_print_offsize	2650:1:83076:83119	1107538	23	True				
ANR	1107765	AssignmentExpression	core -> print -> offsize = r_core_print_offsize		1107538	0		=			
ANR	1107766	PtrMemberAccess	core -> print -> offsize		1107538	0					
ANR	1107767	PtrMemberAccess	core -> print		1107538	0					
ANR	1107768	Identifier	core		1107538	0					
ANR	1107769	Identifier	print		1107538	1					
ANR	1107770	Identifier	offsize		1107538	1					
ANR	1107771	Identifier	r_core_print_offsize		1107538	1					
ANR	1107772	ExpressionStatement	core -> print -> cb_printf = r_cons_printf	2651:1:83122:83160	1107538	24	True				
ANR	1107773	AssignmentExpression	core -> print -> cb_printf = r_cons_printf		1107538	0		=			
ANR	1107774	PtrMemberAccess	core -> print -> cb_printf		1107538	0					
ANR	1107775	PtrMemberAccess	core -> print		1107538	0					
ANR	1107776	Identifier	core		1107538	0					
ANR	1107777	Identifier	print		1107538	1					
ANR	1107778	Identifier	cb_printf		1107538	1					
ANR	1107779	Identifier	r_cons_printf		1107538	1					
ANR	1107780	ExpressionStatement	core -> print -> cb_eprintf = win_eprintf	2653:1:83179:83216	1107538	25	True				
ANR	1107781	AssignmentExpression	core -> print -> cb_eprintf = win_eprintf		1107538	0		=			
ANR	1107782	PtrMemberAccess	core -> print -> cb_eprintf		1107538	0					
ANR	1107783	PtrMemberAccess	core -> print		1107538	0					
ANR	1107784	Identifier	core		1107538	0					
ANR	1107785	Identifier	print		1107538	1					
ANR	1107786	Identifier	cb_eprintf		1107538	1					
ANR	1107787	Identifier	win_eprintf		1107538	1					
ANR	1107788	ExpressionStatement	core -> print -> cb_color = r_cons_rainbow_get	2655:1:83226:83268	1107538	26	True				
ANR	1107789	AssignmentExpression	core -> print -> cb_color = r_cons_rainbow_get		1107538	0		=			
ANR	1107790	PtrMemberAccess	core -> print -> cb_color		1107538	0					
ANR	1107791	PtrMemberAccess	core -> print		1107538	0					
ANR	1107792	Identifier	core		1107538	0					
ANR	1107793	Identifier	print		1107538	1					
ANR	1107794	Identifier	cb_color		1107538	1					
ANR	1107795	Identifier	r_cons_rainbow_get		1107538	1					
ANR	1107796	ExpressionStatement	core -> print -> write = mywrite	2656:1:83271:83299	1107538	27	True				
ANR	1107797	AssignmentExpression	core -> print -> write = mywrite		1107538	0		=			
ANR	1107798	PtrMemberAccess	core -> print -> write		1107538	0					
ANR	1107799	PtrMemberAccess	core -> print		1107538	0					
ANR	1107800	Identifier	core		1107538	0					
ANR	1107801	Identifier	print		1107538	1					
ANR	1107802	Identifier	write		1107538	1					
ANR	1107803	Identifier	mywrite		1107538	1					
ANR	1107804	ExpressionStatement	core -> print -> exists_var = exists_var	2657:1:83302:83338	1107538	28	True				
ANR	1107805	AssignmentExpression	core -> print -> exists_var = exists_var		1107538	0		=			
ANR	1107806	PtrMemberAccess	core -> print -> exists_var		1107538	0					
ANR	1107807	PtrMemberAccess	core -> print		1107538	0					
ANR	1107808	Identifier	core		1107538	0					
ANR	1107809	Identifier	print		1107538	1					
ANR	1107810	Identifier	exists_var		1107538	1					
ANR	1107811	Identifier	exists_var		1107538	1					
ANR	1107812	ExpressionStatement	core -> print -> disasm = __disasm	2658:1:83341:83371	1107538	29	True				
ANR	1107813	AssignmentExpression	core -> print -> disasm = __disasm		1107538	0		=			
ANR	1107814	PtrMemberAccess	core -> print -> disasm		1107538	0					
ANR	1107815	PtrMemberAccess	core -> print		1107538	0					
ANR	1107816	Identifier	core		1107538	0					
ANR	1107817	Identifier	print		1107538	1					
ANR	1107818	Identifier	disasm		1107538	1					
ANR	1107819	Identifier	__disasm		1107538	1					
ANR	1107820	ExpressionStatement	core -> print -> colorfor = colorfor_cb	2659:1:83374:83409	1107538	30	True				
ANR	1107821	AssignmentExpression	core -> print -> colorfor = colorfor_cb		1107538	0		=			
ANR	1107822	PtrMemberAccess	core -> print -> colorfor		1107538	0					
ANR	1107823	PtrMemberAccess	core -> print		1107538	0					
ANR	1107824	Identifier	core		1107538	0					
ANR	1107825	Identifier	print		1107538	1					
ANR	1107826	Identifier	colorfor		1107538	1					
ANR	1107827	Identifier	colorfor_cb		1107538	1					
ANR	1107828	ExpressionStatement	core -> print -> hasrefs = hasrefs_cb	2660:1:83412:83445	1107538	31	True				
ANR	1107829	AssignmentExpression	core -> print -> hasrefs = hasrefs_cb		1107538	0		=			
ANR	1107830	PtrMemberAccess	core -> print -> hasrefs		1107538	0					
ANR	1107831	PtrMemberAccess	core -> print		1107538	0					
ANR	1107832	Identifier	core		1107538	0					
ANR	1107833	Identifier	print		1107538	1					
ANR	1107834	Identifier	hasrefs		1107538	1					
ANR	1107835	Identifier	hasrefs_cb		1107538	1					
ANR	1107836	ExpressionStatement	core -> print -> get_comments = get_comments_cb	2661:1:83448:83491	1107538	32	True				
ANR	1107837	AssignmentExpression	core -> print -> get_comments = get_comments_cb		1107538	0		=			
ANR	1107838	PtrMemberAccess	core -> print -> get_comments		1107538	0					
ANR	1107839	PtrMemberAccess	core -> print		1107538	0					
ANR	1107840	Identifier	core		1107538	0					
ANR	1107841	Identifier	print		1107538	1					
ANR	1107842	Identifier	get_comments		1107538	1					
ANR	1107843	Identifier	get_comments_cb		1107538	1					
ANR	1107844	ExpressionStatement	core -> print -> get_section_name = get_section_name	2662:1:83494:83542	1107538	33	True				
ANR	1107845	AssignmentExpression	core -> print -> get_section_name = get_section_name		1107538	0		=			
ANR	1107846	PtrMemberAccess	core -> print -> get_section_name		1107538	0					
ANR	1107847	PtrMemberAccess	core -> print		1107538	0					
ANR	1107848	Identifier	core		1107538	0					
ANR	1107849	Identifier	print		1107538	1					
ANR	1107850	Identifier	get_section_name		1107538	1					
ANR	1107851	Identifier	get_section_name		1107538	1					
ANR	1107852	ExpressionStatement	core -> print -> use_comments = false	2663:1:83545:83578	1107538	34	True				
ANR	1107853	AssignmentExpression	core -> print -> use_comments = false		1107538	0		=			
ANR	1107854	PtrMemberAccess	core -> print -> use_comments		1107538	0					
ANR	1107855	PtrMemberAccess	core -> print		1107538	0					
ANR	1107856	Identifier	core		1107538	0					
ANR	1107857	Identifier	print		1107538	1					
ANR	1107858	Identifier	use_comments		1107538	1					
ANR	1107859	Identifier	false		1107538	1					
ANR	1107860	ExpressionStatement	core -> rtr_n = 0	2664:1:83581:83596	1107538	35	True				
ANR	1107861	AssignmentExpression	core -> rtr_n = 0		1107538	0		=			
ANR	1107862	PtrMemberAccess	core -> rtr_n		1107538	0					
ANR	1107863	Identifier	core		1107538	0					
ANR	1107864	Identifier	rtr_n		1107538	1					
ANR	1107865	PrimaryExpression	0		1107538	1					
ANR	1107866	ExpressionStatement	core -> blocksize_max = R_CORE_BLOCKSIZE_MAX	2665:1:83599:83641	1107538	36	True				
ANR	1107867	AssignmentExpression	core -> blocksize_max = R_CORE_BLOCKSIZE_MAX		1107538	0		=			
ANR	1107868	PtrMemberAccess	core -> blocksize_max		1107538	0					
ANR	1107869	Identifier	core		1107538	0					
ANR	1107870	Identifier	blocksize_max		1107538	1					
ANR	1107871	Identifier	R_CORE_BLOCKSIZE_MAX		1107538	1					
ANR	1107872	ExpressionStatement	core -> task_id_next = 0	2666:1:83644:83666	1107538	37	True				
ANR	1107873	AssignmentExpression	core -> task_id_next = 0		1107538	0		=			
ANR	1107874	PtrMemberAccess	core -> task_id_next		1107538	0					
ANR	1107875	Identifier	core		1107538	0					
ANR	1107876	Identifier	task_id_next		1107538	1					
ANR	1107877	PrimaryExpression	0		1107538	1					
ANR	1107878	ExpressionStatement	core -> tasks = r_list_newf ( ( RListFree ) r_core_task_decref )	2667:1:83669:83726	1107538	38	True				
ANR	1107879	AssignmentExpression	core -> tasks = r_list_newf ( ( RListFree ) r_core_task_decref )		1107538	0		=			
ANR	1107880	PtrMemberAccess	core -> tasks		1107538	0					
ANR	1107881	Identifier	core		1107538	0					
ANR	1107882	Identifier	tasks		1107538	1					
ANR	1107883	CallExpression	r_list_newf ( ( RListFree ) r_core_task_decref )		1107538	1					
ANR	1107884	Callee	r_list_newf		1107538	0					
ANR	1107885	Identifier	r_list_newf		1107538	0					
ANR	1107886	ArgumentList	( RListFree ) r_core_task_decref		1107538	1					
ANR	1107887	Argument	( RListFree ) r_core_task_decref		1107538	0					
ANR	1107888	CastExpression	( RListFree ) r_core_task_decref		1107538	0					
ANR	1107889	CastTarget	RListFree		1107538	0					
ANR	1107890	Identifier	r_core_task_decref		1107538	1					
ANR	1107891	ExpressionStatement	core -> tasks_queue = r_list_new ( )	2668:1:83729:83762	1107538	39	True				
ANR	1107892	AssignmentExpression	core -> tasks_queue = r_list_new ( )		1107538	0		=			
ANR	1107893	PtrMemberAccess	core -> tasks_queue		1107538	0					
ANR	1107894	Identifier	core		1107538	0					
ANR	1107895	Identifier	tasks_queue		1107538	1					
ANR	1107896	CallExpression	r_list_new ( )		1107538	1					
ANR	1107897	Callee	r_list_new		1107538	0					
ANR	1107898	Identifier	r_list_new		1107538	0					
ANR	1107899	ArgumentList			1107538	1					
ANR	1107900	ExpressionStatement	core -> oneshot_queue = r_list_newf ( free )	2669:1:83765:83805	1107538	40	True				
ANR	1107901	AssignmentExpression	core -> oneshot_queue = r_list_newf ( free )		1107538	0		=			
ANR	1107902	PtrMemberAccess	core -> oneshot_queue		1107538	0					
ANR	1107903	Identifier	core		1107538	0					
ANR	1107904	Identifier	oneshot_queue		1107538	1					
ANR	1107905	CallExpression	r_list_newf ( free )		1107538	1					
ANR	1107906	Callee	r_list_newf		1107538	0					
ANR	1107907	Identifier	r_list_newf		1107538	0					
ANR	1107908	ArgumentList	free		1107538	1					
ANR	1107909	Argument	free		1107538	0					
ANR	1107910	Identifier	free		1107538	0					
ANR	1107911	ExpressionStatement	core -> oneshots_enqueued = 0	2670:1:83808:83835	1107538	41	True				
ANR	1107912	AssignmentExpression	core -> oneshots_enqueued = 0		1107538	0		=			
ANR	1107913	PtrMemberAccess	core -> oneshots_enqueued		1107538	0					
ANR	1107914	Identifier	core		1107538	0					
ANR	1107915	Identifier	oneshots_enqueued		1107538	1					
ANR	1107916	PrimaryExpression	0		1107538	1					
ANR	1107917	ExpressionStatement	core -> tasks_lock = r_th_lock_new ( true )	2671:1:83838:83877	1107538	42	True				
ANR	1107918	AssignmentExpression	core -> tasks_lock = r_th_lock_new ( true )		1107538	0		=			
ANR	1107919	PtrMemberAccess	core -> tasks_lock		1107538	0					
ANR	1107920	Identifier	core		1107538	0					
ANR	1107921	Identifier	tasks_lock		1107538	1					
ANR	1107922	CallExpression	r_th_lock_new ( true )		1107538	1					
ANR	1107923	Callee	r_th_lock_new		1107538	0					
ANR	1107924	Identifier	r_th_lock_new		1107538	0					
ANR	1107925	ArgumentList	true		1107538	1					
ANR	1107926	Argument	true		1107538	0					
ANR	1107927	Identifier	true		1107538	0					
ANR	1107928	ExpressionStatement	core -> tasks_running = 0	2672:1:83880:83903	1107538	43	True				
ANR	1107929	AssignmentExpression	core -> tasks_running = 0		1107538	0		=			
ANR	1107930	PtrMemberAccess	core -> tasks_running		1107538	0					
ANR	1107931	Identifier	core		1107538	0					
ANR	1107932	Identifier	tasks_running		1107538	1					
ANR	1107933	PrimaryExpression	0		1107538	1					
ANR	1107934	ExpressionStatement	core -> oneshot_running = false	2673:1:83906:83935	1107538	44	True				
ANR	1107935	AssignmentExpression	core -> oneshot_running = false		1107538	0		=			
ANR	1107936	PtrMemberAccess	core -> oneshot_running		1107538	0					
ANR	1107937	Identifier	core		1107538	0					
ANR	1107938	Identifier	oneshot_running		1107538	1					
ANR	1107939	Identifier	false		1107538	1					
ANR	1107940	ExpressionStatement	"core -> main_task = r_core_task_new ( core , false , NULL , NULL , NULL )"	2674:1:83938:84003	1107538	45	True				
ANR	1107941	AssignmentExpression	"core -> main_task = r_core_task_new ( core , false , NULL , NULL , NULL )"		1107538	0		=			
ANR	1107942	PtrMemberAccess	core -> main_task		1107538	0					
ANR	1107943	Identifier	core		1107538	0					
ANR	1107944	Identifier	main_task		1107538	1					
ANR	1107945	CallExpression	"r_core_task_new ( core , false , NULL , NULL , NULL )"		1107538	1					
ANR	1107946	Callee	r_core_task_new		1107538	0					
ANR	1107947	Identifier	r_core_task_new		1107538	0					
ANR	1107948	ArgumentList	core		1107538	1					
ANR	1107949	Argument	core		1107538	0					
ANR	1107950	Identifier	core		1107538	0					
ANR	1107951	Argument	false		1107538	1					
ANR	1107952	Identifier	false		1107538	0					
ANR	1107953	Argument	NULL		1107538	2					
ANR	1107954	Identifier	NULL		1107538	0					
ANR	1107955	Argument	NULL		1107538	3					
ANR	1107956	Identifier	NULL		1107538	0					
ANR	1107957	Argument	NULL		1107538	4					
ANR	1107958	Identifier	NULL		1107538	0					
ANR	1107959	ExpressionStatement	"r_list_append ( core -> tasks , core -> main_task )"	2675:1:84006:84050	1107538	46	True				
ANR	1107960	CallExpression	"r_list_append ( core -> tasks , core -> main_task )"		1107538	0					
ANR	1107961	Callee	r_list_append		1107538	0					
ANR	1107962	Identifier	r_list_append		1107538	0					
ANR	1107963	ArgumentList	core -> tasks		1107538	1					
ANR	1107964	Argument	core -> tasks		1107538	0					
ANR	1107965	PtrMemberAccess	core -> tasks		1107538	0					
ANR	1107966	Identifier	core		1107538	0					
ANR	1107967	Identifier	tasks		1107538	1					
ANR	1107968	Argument	core -> main_task		1107538	1					
ANR	1107969	PtrMemberAccess	core -> main_task		1107538	0					
ANR	1107970	Identifier	core		1107538	0					
ANR	1107971	Identifier	main_task		1107538	1					
ANR	1107972	ExpressionStatement	core -> current_task = NULL	2676:1:84053:84078	1107538	47	True				
ANR	1107973	AssignmentExpression	core -> current_task = NULL		1107538	0		=			
ANR	1107974	PtrMemberAccess	core -> current_task		1107538	0					
ANR	1107975	Identifier	core		1107538	0					
ANR	1107976	Identifier	current_task		1107538	1					
ANR	1107977	Identifier	NULL		1107538	1					
ANR	1107978	ExpressionStatement	core -> watchers = r_list_new ( )	2677:1:84081:84111	1107538	48	True				
ANR	1107979	AssignmentExpression	core -> watchers = r_list_new ( )		1107538	0		=			
ANR	1107980	PtrMemberAccess	core -> watchers		1107538	0					
ANR	1107981	Identifier	core		1107538	0					
ANR	1107982	Identifier	watchers		1107538	1					
ANR	1107983	CallExpression	r_list_new ( )		1107538	1					
ANR	1107984	Callee	r_list_new		1107538	0					
ANR	1107985	Identifier	r_list_new		1107538	0					
ANR	1107986	ArgumentList			1107538	1					
ANR	1107987	ExpressionStatement	core -> watchers -> free = ( RListFree ) r_core_cmpwatch_free	2678:1:84114:84168	1107538	49	True				
ANR	1107988	AssignmentExpression	core -> watchers -> free = ( RListFree ) r_core_cmpwatch_free		1107538	0		=			
ANR	1107989	PtrMemberAccess	core -> watchers -> free		1107538	0					
ANR	1107990	PtrMemberAccess	core -> watchers		1107538	0					
ANR	1107991	Identifier	core		1107538	0					
ANR	1107992	Identifier	watchers		1107538	1					
ANR	1107993	Identifier	free		1107538	1					
ANR	1107994	CastExpression	( RListFree ) r_core_cmpwatch_free		1107538	1					
ANR	1107995	CastTarget	RListFree		1107538	0					
ANR	1107996	Identifier	r_core_cmpwatch_free		1107538	1					
ANR	1107997	ExpressionStatement	core -> scriptstack = r_list_new ( )	2679:1:84171:84204	1107538	50	True				
ANR	1107998	AssignmentExpression	core -> scriptstack = r_list_new ( )		1107538	0		=			
ANR	1107999	PtrMemberAccess	core -> scriptstack		1107538	0					
ANR	1108000	Identifier	core		1107538	0					
ANR	1108001	Identifier	scriptstack		1107538	1					
ANR	1108002	CallExpression	r_list_new ( )		1107538	1					
ANR	1108003	Callee	r_list_new		1107538	0					
ANR	1108004	Identifier	r_list_new		1107538	0					
ANR	1108005	ArgumentList			1107538	1					
ANR	1108006	ExpressionStatement	core -> scriptstack -> free = ( RListFree ) free	2680:1:84207:84248	1107538	51	True				
ANR	1108007	AssignmentExpression	core -> scriptstack -> free = ( RListFree ) free		1107538	0		=			
ANR	1108008	PtrMemberAccess	core -> scriptstack -> free		1107538	0					
ANR	1108009	PtrMemberAccess	core -> scriptstack		1107538	0					
ANR	1108010	Identifier	core		1107538	0					
ANR	1108011	Identifier	scriptstack		1107538	1					
ANR	1108012	Identifier	free		1107538	1					
ANR	1108013	CastExpression	( RListFree ) free		1107538	1					
ANR	1108014	CastTarget	RListFree		1107538	0					
ANR	1108015	Identifier	free		1107538	1					
ANR	1108016	ExpressionStatement	core -> log = r_core_log_new ( )	2681:1:84251:84280	1107538	52	True				
ANR	1108017	AssignmentExpression	core -> log = r_core_log_new ( )		1107538	0		=			
ANR	1108018	PtrMemberAccess	core -> log		1107538	0					
ANR	1108019	Identifier	core		1107538	0					
ANR	1108020	Identifier	log		1107538	1					
ANR	1108021	CallExpression	r_core_log_new ( )		1107538	1					
ANR	1108022	Callee	r_core_log_new		1107538	0					
ANR	1108023	Identifier	r_core_log_new		1107538	0					
ANR	1108024	ArgumentList			1107538	1					
ANR	1108025	ExpressionStatement	core -> times = R_NEW0 ( RCoreTimes )	2682:1:84283:84316	1107538	53	True				
ANR	1108026	AssignmentExpression	core -> times = R_NEW0 ( RCoreTimes )		1107538	0		=			
ANR	1108027	PtrMemberAccess	core -> times		1107538	0					
ANR	1108028	Identifier	core		1107538	0					
ANR	1108029	Identifier	times		1107538	1					
ANR	1108030	CallExpression	R_NEW0 ( RCoreTimes )		1107538	1					
ANR	1108031	Callee	R_NEW0		1107538	0					
ANR	1108032	Identifier	R_NEW0		1107538	0					
ANR	1108033	ArgumentList	RCoreTimes		1107538	1					
ANR	1108034	Argument	RCoreTimes		1107538	0					
ANR	1108035	Identifier	RCoreTimes		1107538	0					
ANR	1108036	ExpressionStatement	core -> vmode = false	2683:1:84319:84338	1107538	54	True				
ANR	1108037	AssignmentExpression	core -> vmode = false		1107538	0		=			
ANR	1108038	PtrMemberAccess	core -> vmode		1107538	0					
ANR	1108039	Identifier	core		1107538	0					
ANR	1108040	Identifier	vmode		1107538	1					
ANR	1108041	Identifier	false		1107538	1					
ANR	1108042	ExpressionStatement	core -> oobi = NULL	2684:1:84341:84358	1107538	55	True				
ANR	1108043	AssignmentExpression	core -> oobi = NULL		1107538	0		=			
ANR	1108044	PtrMemberAccess	core -> oobi		1107538	0					
ANR	1108045	Identifier	core		1107538	0					
ANR	1108046	Identifier	oobi		1107538	1					
ANR	1108047	Identifier	NULL		1107538	1					
ANR	1108048	ExpressionStatement	core -> oobi_len = 0	2685:1:84361:84379	1107538	56	True				
ANR	1108049	AssignmentExpression	core -> oobi_len = 0		1107538	0		=			
ANR	1108050	PtrMemberAccess	core -> oobi_len		1107538	0					
ANR	1108051	Identifier	core		1107538	0					
ANR	1108052	Identifier	oobi_len		1107538	1					
ANR	1108053	PrimaryExpression	0		1107538	1					
ANR	1108054	ExpressionStatement	core -> printidx = 0	2686:1:84382:84400	1107538	57	True				
ANR	1108055	AssignmentExpression	core -> printidx = 0		1107538	0		=			
ANR	1108056	PtrMemberAccess	core -> printidx		1107538	0					
ANR	1108057	Identifier	core		1107538	0					
ANR	1108058	Identifier	printidx		1107538	1					
ANR	1108059	PrimaryExpression	0		1107538	1					
ANR	1108060	ExpressionStatement	core -> lastcmd = NULL	2687:1:84403:84423	1107538	58	True				
ANR	1108061	AssignmentExpression	core -> lastcmd = NULL		1107538	0		=			
ANR	1108062	PtrMemberAccess	core -> lastcmd		1107538	0					
ANR	1108063	Identifier	core		1107538	0					
ANR	1108064	Identifier	lastcmd		1107538	1					
ANR	1108065	Identifier	NULL		1107538	1					
ANR	1108066	ExpressionStatement	core -> stkcmd = NULL	2688:1:84426:84445	1107538	59	True				
ANR	1108067	AssignmentExpression	core -> stkcmd = NULL		1107538	0		=			
ANR	1108068	PtrMemberAccess	core -> stkcmd		1107538	0					
ANR	1108069	Identifier	core		1107538	0					
ANR	1108070	Identifier	stkcmd		1107538	1					
ANR	1108071	Identifier	NULL		1107538	1					
ANR	1108072	ExpressionStatement	core -> cmdqueue = NULL	2689:1:84448:84469	1107538	60	True				
ANR	1108073	AssignmentExpression	core -> cmdqueue = NULL		1107538	0		=			
ANR	1108074	PtrMemberAccess	core -> cmdqueue		1107538	0					
ANR	1108075	Identifier	core		1107538	0					
ANR	1108076	Identifier	cmdqueue		1107538	1					
ANR	1108077	Identifier	NULL		1107538	1					
ANR	1108078	ExpressionStatement	core -> cmdrepeat = true	2690:1:84472:84494	1107538	61	True				
ANR	1108079	AssignmentExpression	core -> cmdrepeat = true		1107538	0		=			
ANR	1108080	PtrMemberAccess	core -> cmdrepeat		1107538	0					
ANR	1108081	Identifier	core		1107538	0					
ANR	1108082	Identifier	cmdrepeat		1107538	1					
ANR	1108083	Identifier	true		1107538	1					
ANR	1108084	ExpressionStatement	core -> yank_buf = r_buf_new ( )	2691:1:84497:84526	1107538	62	True				
ANR	1108085	AssignmentExpression	core -> yank_buf = r_buf_new ( )		1107538	0		=			
ANR	1108086	PtrMemberAccess	core -> yank_buf		1107538	0					
ANR	1108087	Identifier	core		1107538	0					
ANR	1108088	Identifier	yank_buf		1107538	1					
ANR	1108089	CallExpression	r_buf_new ( )		1107538	1					
ANR	1108090	Callee	r_buf_new		1107538	0					
ANR	1108091	Identifier	r_buf_new		1107538	0					
ANR	1108092	ArgumentList			1107538	1					
ANR	1108093	ExpressionStatement	"core -> num = r_num_new ( & num_callback , & str_callback , core )"	2692:1:84529:84587	1107538	63	True				
ANR	1108094	AssignmentExpression	"core -> num = r_num_new ( & num_callback , & str_callback , core )"		1107538	0		=			
ANR	1108095	PtrMemberAccess	core -> num		1107538	0					
ANR	1108096	Identifier	core		1107538	0					
ANR	1108097	Identifier	num		1107538	1					
ANR	1108098	CallExpression	"r_num_new ( & num_callback , & str_callback , core )"		1107538	1					
ANR	1108099	Callee	r_num_new		1107538	0					
ANR	1108100	Identifier	r_num_new		1107538	0					
ANR	1108101	ArgumentList	& num_callback		1107538	1					
ANR	1108102	Argument	& num_callback		1107538	0					
ANR	1108103	UnaryOperationExpression	& num_callback		1107538	0					
ANR	1108104	UnaryOperator	&		1107538	0					
ANR	1108105	Identifier	num_callback		1107538	1					
ANR	1108106	Argument	& str_callback		1107538	1					
ANR	1108107	UnaryOperationExpression	& str_callback		1107538	0					
ANR	1108108	UnaryOperator	&		1107538	0					
ANR	1108109	Identifier	str_callback		1107538	1					
ANR	1108110	Argument	core		1107538	2					
ANR	1108111	Identifier	core		1107538	0					
ANR	1108112	ExpressionStatement	core -> curasmstep = 0	2693:1:84590:84610	1107538	64	True				
ANR	1108113	AssignmentExpression	core -> curasmstep = 0		1107538	0		=			
ANR	1108114	PtrMemberAccess	core -> curasmstep		1107538	0					
ANR	1108115	Identifier	core		1107538	0					
ANR	1108116	Identifier	curasmstep		1107538	1					
ANR	1108117	PrimaryExpression	0		1107538	1					
ANR	1108118	ExpressionStatement	core -> egg = r_egg_new ( )	2694:1:84613:84637	1107538	65	True				
ANR	1108119	AssignmentExpression	core -> egg = r_egg_new ( )		1107538	0		=			
ANR	1108120	PtrMemberAccess	core -> egg		1107538	0					
ANR	1108121	Identifier	core		1107538	0					
ANR	1108122	Identifier	egg		1107538	1					
ANR	1108123	CallExpression	r_egg_new ( )		1107538	1					
ANR	1108124	Callee	r_egg_new		1107538	0					
ANR	1108125	Identifier	r_egg_new		1107538	0					
ANR	1108126	ArgumentList			1107538	1					
ANR	1108127	ExpressionStatement	"r_egg_setup ( core -> egg , R_SYS_ARCH , R_SYS_BITS , 0 , R_SYS_OS )"	2695:1:84640:84700	1107538	66	True				
ANR	1108128	CallExpression	"r_egg_setup ( core -> egg , R_SYS_ARCH , R_SYS_BITS , 0 , R_SYS_OS )"		1107538	0					
ANR	1108129	Callee	r_egg_setup		1107538	0					
ANR	1108130	Identifier	r_egg_setup		1107538	0					
ANR	1108131	ArgumentList	core -> egg		1107538	1					
ANR	1108132	Argument	core -> egg		1107538	0					
ANR	1108133	PtrMemberAccess	core -> egg		1107538	0					
ANR	1108134	Identifier	core		1107538	0					
ANR	1108135	Identifier	egg		1107538	1					
ANR	1108136	Argument	R_SYS_ARCH		1107538	1					
ANR	1108137	Identifier	R_SYS_ARCH		1107538	0					
ANR	1108138	Argument	R_SYS_BITS		1107538	2					
ANR	1108139	Identifier	R_SYS_BITS		1107538	0					
ANR	1108140	Argument	0		1107538	3					
ANR	1108141	PrimaryExpression	0		1107538	0					
ANR	1108142	Argument	R_SYS_OS		1107538	4					
ANR	1108143	Identifier	R_SYS_OS		1107538	0					
ANR	1108144	ExpressionStatement	core -> undos = r_list_newf ( ( RListFree ) r_core_undo_free )	2697:1:84704:84759	1107538	67	True				
ANR	1108145	AssignmentExpression	core -> undos = r_list_newf ( ( RListFree ) r_core_undo_free )		1107538	0		=			
ANR	1108146	PtrMemberAccess	core -> undos		1107538	0					
ANR	1108147	Identifier	core		1107538	0					
ANR	1108148	Identifier	undos		1107538	1					
ANR	1108149	CallExpression	r_list_newf ( ( RListFree ) r_core_undo_free )		1107538	1					
ANR	1108150	Callee	r_list_newf		1107538	0					
ANR	1108151	Identifier	r_list_newf		1107538	0					
ANR	1108152	ArgumentList	( RListFree ) r_core_undo_free		1107538	1					
ANR	1108153	Argument	( RListFree ) r_core_undo_free		1107538	0					
ANR	1108154	CastExpression	( RListFree ) r_core_undo_free		1107538	0					
ANR	1108155	CastTarget	RListFree		1107538	0					
ANR	1108156	Identifier	r_core_undo_free		1107538	1					
ANR	1108157	ExpressionStatement	core -> fixedarch = false	2698:1:84762:84785	1107538	68	True				
ANR	1108158	AssignmentExpression	core -> fixedarch = false		1107538	0		=			
ANR	1108159	PtrMemberAccess	core -> fixedarch		1107538	0					
ANR	1108160	Identifier	core		1107538	0					
ANR	1108161	Identifier	fixedarch		1107538	1					
ANR	1108162	Identifier	false		1107538	1					
ANR	1108163	ExpressionStatement	core -> fixedbits = false	2699:1:84788:84811	1107538	69	True				
ANR	1108164	AssignmentExpression	core -> fixedbits = false		1107538	0		=			
ANR	1108165	PtrMemberAccess	core -> fixedbits		1107538	0					
ANR	1108166	Identifier	core		1107538	0					
ANR	1108167	Identifier	fixedbits		1107538	1					
ANR	1108168	Identifier	false		1107538	1					
ANR	1108169	ExpressionStatement	core -> cons = r_cons_new ( )	2702:1:84843:84869	1107538	70	True				
ANR	1108170	AssignmentExpression	core -> cons = r_cons_new ( )		1107538	0		=			
ANR	1108171	PtrMemberAccess	core -> cons		1107538	0					
ANR	1108172	Identifier	core		1107538	0					
ANR	1108173	Identifier	cons		1107538	1					
ANR	1108174	CallExpression	r_cons_new ( )		1107538	1					
ANR	1108175	Callee	r_cons_new		1107538	0					
ANR	1108176	Identifier	r_cons_new		1107538	0					
ANR	1108177	ArgumentList			1107538	1					
ANR	1108178	IfStatement	if ( core -> cons -> refcnt == 1 )		1107538	71					
ANR	1108179	Condition	core -> cons -> refcnt == 1	2703:5:84876:84898	1107538	0	True				
ANR	1108180	EqualityExpression	core -> cons -> refcnt == 1		1107538	0		==			
ANR	1108181	PtrMemberAccess	core -> cons -> refcnt		1107538	0					
ANR	1108182	PtrMemberAccess	core -> cons		1107538	0					
ANR	1108183	Identifier	core		1107538	0					
ANR	1108184	Identifier	cons		1107538	1					
ANR	1108185	Identifier	refcnt		1107538	1					
ANR	1108186	PrimaryExpression	1		1107538	1					
ANR	1108187	CompoundStatement		82:30:2761:2761	1107538	1					
ANR	1108188	ExpressionStatement	core -> cons = r_cons_singleton ( )	2704:2:84905:84937	1107538	0	True				
ANR	1108189	AssignmentExpression	core -> cons = r_cons_singleton ( )		1107538	0		=			
ANR	1108190	PtrMemberAccess	core -> cons		1107538	0					
ANR	1108191	Identifier	core		1107538	0					
ANR	1108192	Identifier	cons		1107538	1					
ANR	1108193	CallExpression	r_cons_singleton ( )		1107538	1					
ANR	1108194	Callee	r_cons_singleton		1107538	0					
ANR	1108195	Identifier	r_cons_singleton		1107538	0					
ANR	1108196	ArgumentList			1107538	1					
ANR	1108197	IfStatement	if ( core -> cons -> line )		1107538	1					
ANR	1108198	Condition	core -> cons -> line	2705:6:84945:84960	1107538	0	True				
ANR	1108199	PtrMemberAccess	core -> cons -> line		1107538	0					
ANR	1108200	PtrMemberAccess	core -> cons		1107538	0					
ANR	1108201	Identifier	core		1107538	0					
ANR	1108202	Identifier	cons		1107538	1					
ANR	1108203	Identifier	line		1107538	1					
ANR	1108204	CompoundStatement		84:24:2823:2823	1107538	1					
ANR	1108205	ExpressionStatement	core -> cons -> line -> user = core	2706:3:84968:84997	1107538	0	True				
ANR	1108206	AssignmentExpression	core -> cons -> line -> user = core		1107538	0		=			
ANR	1108207	PtrMemberAccess	core -> cons -> line -> user		1107538	0					
ANR	1108208	PtrMemberAccess	core -> cons -> line		1107538	0					
ANR	1108209	PtrMemberAccess	core -> cons		1107538	0					
ANR	1108210	Identifier	core		1107538	0					
ANR	1108211	Identifier	cons		1107538	1					
ANR	1108212	Identifier	line		1107538	1					
ANR	1108213	Identifier	user		1107538	1					
ANR	1108214	Identifier	core		1107538	1					
ANR	1108215	ExpressionStatement	core -> cons -> line -> cb_editor = ( RLineEditorCb ) & r_core_editor	2707:3:85002:85067	1107538	1	True				
ANR	1108216	AssignmentExpression	core -> cons -> line -> cb_editor = ( RLineEditorCb ) & r_core_editor		1107538	0		=			
ANR	1108217	PtrMemberAccess	core -> cons -> line -> cb_editor		1107538	0					
ANR	1108218	PtrMemberAccess	core -> cons -> line		1107538	0					
ANR	1108219	PtrMemberAccess	core -> cons		1107538	0					
ANR	1108220	Identifier	core		1107538	0					
ANR	1108221	Identifier	cons		1107538	1					
ANR	1108222	Identifier	line		1107538	1					
ANR	1108223	Identifier	cb_editor		1107538	1					
ANR	1108224	CastExpression	( RLineEditorCb ) & r_core_editor		1107538	1					
ANR	1108225	CastTarget	RLineEditorCb		1107538	0					
ANR	1108226	UnaryOperationExpression	& r_core_editor		1107538	1					
ANR	1108227	UnaryOperator	&		1107538	0					
ANR	1108228	Identifier	r_core_editor		1107538	1					
ANR	1108229	ExpressionStatement	core -> cons -> user_fgets = NULL	2711:2:85094:85123	1107538	2	True				
ANR	1108230	AssignmentExpression	core -> cons -> user_fgets = NULL		1107538	0		=			
ANR	1108231	PtrMemberAccess	core -> cons -> user_fgets		1107538	0					
ANR	1108232	PtrMemberAccess	core -> cons		1107538	0					
ANR	1108233	Identifier	core		1107538	0					
ANR	1108234	Identifier	cons		1107538	1					
ANR	1108235	Identifier	user_fgets		1107538	1					
ANR	1108236	Identifier	NULL		1107538	1					
ANR	1108237	ExpressionStatement	r_line_hist_load ( R2_HOME_HISTORY )	2716:2:85235:85269	1107538	3	True				
ANR	1108238	CallExpression	r_line_hist_load ( R2_HOME_HISTORY )		1107538	0					
ANR	1108239	Callee	r_line_hist_load		1107538	0					
ANR	1108240	Identifier	r_line_hist_load		1107538	0					
ANR	1108241	ArgumentList	R2_HOME_HISTORY		1107538	1					
ANR	1108242	Argument	R2_HOME_HISTORY		1107538	0					
ANR	1108243	Identifier	R2_HOME_HISTORY		1107538	0					
ANR	1108244	ExpressionStatement	core -> print -> cons = core -> cons	2718:1:85275:85305	1107538	72	True				
ANR	1108245	AssignmentExpression	core -> print -> cons = core -> cons		1107538	0		=			
ANR	1108246	PtrMemberAccess	core -> print -> cons		1107538	0					
ANR	1108247	PtrMemberAccess	core -> print		1107538	0					
ANR	1108248	Identifier	core		1107538	0					
ANR	1108249	Identifier	print		1107538	1					
ANR	1108250	Identifier	cons		1107538	1					
ANR	1108251	PtrMemberAccess	core -> cons		1107538	1					
ANR	1108252	Identifier	core		1107538	0					
ANR	1108253	Identifier	cons		1107538	1					
ANR	1108254	ExpressionStatement	r_cons_bind ( & core -> print -> consbind )	2719:1:85308:85344	1107538	73	True				
ANR	1108255	CallExpression	r_cons_bind ( & core -> print -> consbind )		1107538	0					
ANR	1108256	Callee	r_cons_bind		1107538	0					
ANR	1108257	Identifier	r_cons_bind		1107538	0					
ANR	1108258	ArgumentList	& core -> print -> consbind		1107538	1					
ANR	1108259	Argument	& core -> print -> consbind		1107538	0					
ANR	1108260	UnaryOperationExpression	& core -> print -> consbind		1107538	0					
ANR	1108261	UnaryOperator	&		1107538	0					
ANR	1108262	PtrMemberAccess	core -> print -> consbind		1107538	1					
ANR	1108263	PtrMemberAccess	core -> print		1107538	0					
ANR	1108264	Identifier	core		1107538	0					
ANR	1108265	Identifier	print		1107538	1					
ANR	1108266	Identifier	consbind		1107538	1					
ANR	1108267	ExpressionStatement	core -> lang = r_lang_new ( )	2722:1:85415:85441	1107538	74	True				
ANR	1108268	AssignmentExpression	core -> lang = r_lang_new ( )		1107538	0		=			
ANR	1108269	PtrMemberAccess	core -> lang		1107538	0					
ANR	1108270	Identifier	core		1107538	0					
ANR	1108271	Identifier	lang		1107538	1					
ANR	1108272	CallExpression	r_lang_new ( )		1107538	1					
ANR	1108273	Callee	r_lang_new		1107538	0					
ANR	1108274	Identifier	r_lang_new		1107538	0					
ANR	1108275	ArgumentList			1107538	1					
ANR	1108276	Statement	core	2723:1:85444:85447	1107538	75	True				
ANR	1108277	Statement	->	2723:5:85448:85449	1107538	76	True				
ANR	1108278	Statement	lang	2723:7:85450:85453	1107538	77	True				
ANR	1108279	Statement	->	2723:11:85454:85455	1107538	78	True				
ANR	1108280	Statement	cmd_str	2723:13:85456:85462	1107538	79	True				
ANR	1108281	Statement	=	2723:21:85464:85464	1107538	80	True				
ANR	1108282	Statement	(	2723:23:85466:85466	1107538	81	True				
ANR	1108283	Statement	char	2723:24:85467:85470	1107538	82	True				
ANR	1108284	Statement	*	2723:29:85472:85472	1107538	83	True				
ANR	1108285	Statement	(	2723:30:85473:85473	1107538	84	True				
ANR	1108286	Statement	*	2723:31:85474:85474	1107538	85	True				
ANR	1108287	Statement	)	2723:32:85475:85475	1107538	86	True				
ANR	1108288	Statement	(	2723:33:85476:85476	1107538	87	True				
ANR	1108289	Statement	void	2723:34:85477:85480	1107538	88	True				
ANR	1108290	Statement	*	2723:39:85482:85482	1107538	89	True				
ANR	1108291	Statement	","	2723:40:85483:85483	1107538	90	True				
ANR	1108292	Statement	const	2723:42:85485:85489	1107538	91	True				
ANR	1108293	Statement	char	2723:48:85491:85494	1107538	92	True				
ANR	1108294	Statement	*	2723:53:85496:85496	1107538	93	True				
ANR	1108295	Statement	)	2723:54:85497:85497	1107538	94	True				
ANR	1108296	Statement	)	2723:55:85498:85498	1107538	95	True				
ANR	1108297	ExpressionStatement	r_core_cmd_str	2723:56:85499:85513	1107538	96	True				
ANR	1108298	Identifier	r_core_cmd_str		1107538	0					
ANR	1108299	Statement	core	2724:1:85516:85519	1107538	97	True				
ANR	1108300	Statement	->	2724:5:85520:85521	1107538	98	True				
ANR	1108301	Statement	lang	2724:7:85522:85525	1107538	99	True				
ANR	1108302	Statement	->	2724:11:85526:85527	1107538	100	True				
ANR	1108303	Statement	cmdf	2724:13:85528:85531	1107538	101	True				
ANR	1108304	Statement	=	2724:18:85533:85533	1107538	102	True				
ANR	1108305	Statement	(	2724:20:85535:85535	1107538	103	True				
ANR	1108306	Statement	int	2724:21:85536:85538	1107538	104	True				
ANR	1108307	Statement	(	2724:25:85540:85540	1107538	105	True				
ANR	1108308	Statement	*	2724:26:85541:85541	1107538	106	True				
ANR	1108309	Statement	)	2724:27:85542:85542	1107538	107	True				
ANR	1108310	Statement	(	2724:28:85543:85543	1107538	108	True				
ANR	1108311	Statement	void	2724:29:85544:85547	1107538	109	True				
ANR	1108312	Statement	*	2724:34:85549:85549	1107538	110	True				
ANR	1108313	Statement	","	2724:35:85550:85550	1107538	111	True				
ANR	1108314	Statement	const	2724:37:85552:85556	1107538	112	True				
ANR	1108315	Statement	char	2724:43:85558:85561	1107538	113	True				
ANR	1108316	Statement	*	2724:48:85563:85563	1107538	114	True				
ANR	1108317	Statement	","	2724:49:85564:85564	1107538	115	True				
ANR	1108318	Statement	...	2724:51:85566:85568	1107538	116	True				
ANR	1108319	Statement	)	2724:54:85569:85569	1107538	117	True				
ANR	1108320	Statement	)	2724:55:85570:85570	1107538	118	True				
ANR	1108321	ExpressionStatement	r_core_cmdf	2724:56:85571:85582	1107538	119	True				
ANR	1108322	Identifier	r_core_cmdf		1107538	0					
ANR	1108323	ExpressionStatement	r_core_bind_cons ( core )	2725:1:85585:85608	1107538	120	True				
ANR	1108324	CallExpression	r_core_bind_cons ( core )		1107538	0					
ANR	1108325	Callee	r_core_bind_cons		1107538	0					
ANR	1108326	Identifier	r_core_bind_cons		1107538	0					
ANR	1108327	ArgumentList	core		1107538	1					
ANR	1108328	Argument	core		1107538	0					
ANR	1108329	Identifier	core		1107538	0					
ANR	1108330	ExpressionStatement	core -> lang -> cb_printf = r_cons_printf	2726:1:85611:85648	1107538	121	True				
ANR	1108331	AssignmentExpression	core -> lang -> cb_printf = r_cons_printf		1107538	0		=			
ANR	1108332	PtrMemberAccess	core -> lang -> cb_printf		1107538	0					
ANR	1108333	PtrMemberAccess	core -> lang		1107538	0					
ANR	1108334	Identifier	core		1107538	0					
ANR	1108335	Identifier	lang		1107538	1					
ANR	1108336	Identifier	cb_printf		1107538	1					
ANR	1108337	Identifier	r_cons_printf		1107538	1					
ANR	1108338	ExpressionStatement	"r_lang_define ( core -> lang , ""RCore"" , ""core"" , core )"	2727:1:85651:85700	1107538	122	True				
ANR	1108339	CallExpression	"r_lang_define ( core -> lang , ""RCore"" , ""core"" , core )"		1107538	0					
ANR	1108340	Callee	r_lang_define		1107538	0					
ANR	1108341	Identifier	r_lang_define		1107538	0					
ANR	1108342	ArgumentList	core -> lang		1107538	1					
ANR	1108343	Argument	core -> lang		1107538	0					
ANR	1108344	PtrMemberAccess	core -> lang		1107538	0					
ANR	1108345	Identifier	core		1107538	0					
ANR	1108346	Identifier	lang		1107538	1					
ANR	1108347	Argument	"""RCore"""		1107538	1					
ANR	1108348	PrimaryExpression	"""RCore"""		1107538	0					
ANR	1108349	Argument	"""core"""		1107538	2					
ANR	1108350	PrimaryExpression	"""core"""		1107538	0					
ANR	1108351	Argument	core		1107538	3					
ANR	1108352	Identifier	core		1107538	0					
ANR	1108353	ExpressionStatement	"r_lang_set_user_ptr ( core -> lang , core )"	2728:1:85703:85741	1107538	123	True				
ANR	1108354	CallExpression	"r_lang_set_user_ptr ( core -> lang , core )"		1107538	0					
ANR	1108355	Callee	r_lang_set_user_ptr		1107538	0					
ANR	1108356	Identifier	r_lang_set_user_ptr		1107538	0					
ANR	1108357	ArgumentList	core -> lang		1107538	1					
ANR	1108358	Argument	core -> lang		1107538	0					
ANR	1108359	PtrMemberAccess	core -> lang		1107538	0					
ANR	1108360	Identifier	core		1107538	0					
ANR	1108361	Identifier	lang		1107538	1					
ANR	1108362	Argument	core		1107538	1					
ANR	1108363	Identifier	core		1107538	0					
ANR	1108364	ExpressionStatement	core -> assembler = r_asm_new ( )	2729:1:85744:85774	1107538	124	True				
ANR	1108365	AssignmentExpression	core -> assembler = r_asm_new ( )		1107538	0		=			
ANR	1108366	PtrMemberAccess	core -> assembler		1107538	0					
ANR	1108367	Identifier	core		1107538	0					
ANR	1108368	Identifier	assembler		1107538	1					
ANR	1108369	CallExpression	r_asm_new ( )		1107538	1					
ANR	1108370	Callee	r_asm_new		1107538	0					
ANR	1108371	Identifier	r_asm_new		1107538	0					
ANR	1108372	ArgumentList			1107538	1					
ANR	1108373	ExpressionStatement	core -> assembler -> num = core -> num	2730:1:85777:85809	1107538	125	True				
ANR	1108374	AssignmentExpression	core -> assembler -> num = core -> num		1107538	0		=			
ANR	1108375	PtrMemberAccess	core -> assembler -> num		1107538	0					
ANR	1108376	PtrMemberAccess	core -> assembler		1107538	0					
ANR	1108377	Identifier	core		1107538	0					
ANR	1108378	Identifier	assembler		1107538	1					
ANR	1108379	Identifier	num		1107538	1					
ANR	1108380	PtrMemberAccess	core -> num		1107538	1					
ANR	1108381	Identifier	core		1107538	0					
ANR	1108382	Identifier	num		1107538	1					
ANR	1108383	ExpressionStatement	"r_asm_set_user_ptr ( core -> assembler , core )"	2731:1:85812:85854	1107538	126	True				
ANR	1108384	CallExpression	"r_asm_set_user_ptr ( core -> assembler , core )"		1107538	0					
ANR	1108385	Callee	r_asm_set_user_ptr		1107538	0					
ANR	1108386	Identifier	r_asm_set_user_ptr		1107538	0					
ANR	1108387	ArgumentList	core -> assembler		1107538	1					
ANR	1108388	Argument	core -> assembler		1107538	0					
ANR	1108389	PtrMemberAccess	core -> assembler		1107538	0					
ANR	1108390	Identifier	core		1107538	0					
ANR	1108391	Identifier	assembler		1107538	1					
ANR	1108392	Argument	core		1107538	1					
ANR	1108393	Identifier	core		1107538	0					
ANR	1108394	ExpressionStatement	core -> anal = r_anal_new ( )	2732:1:85857:85883	1107538	127	True				
ANR	1108395	AssignmentExpression	core -> anal = r_anal_new ( )		1107538	0		=			
ANR	1108396	PtrMemberAccess	core -> anal		1107538	0					
ANR	1108397	Identifier	core		1107538	0					
ANR	1108398	Identifier	anal		1107538	1					
ANR	1108399	CallExpression	r_anal_new ( )		1107538	1					
ANR	1108400	Callee	r_anal_new		1107538	0					
ANR	1108401	Identifier	r_anal_new		1107538	0					
ANR	1108402	ArgumentList			1107538	1					
ANR	1108403	ExpressionStatement	core -> gadgets = r_list_newf ( ( RListFree ) r_core_gadget_free )	2733:1:85886:85945	1107538	128	True				
ANR	1108404	AssignmentExpression	core -> gadgets = r_list_newf ( ( RListFree ) r_core_gadget_free )		1107538	0		=			
ANR	1108405	PtrMemberAccess	core -> gadgets		1107538	0					
ANR	1108406	Identifier	core		1107538	0					
ANR	1108407	Identifier	gadgets		1107538	1					
ANR	1108408	CallExpression	r_list_newf ( ( RListFree ) r_core_gadget_free )		1107538	1					
ANR	1108409	Callee	r_list_newf		1107538	0					
ANR	1108410	Identifier	r_list_newf		1107538	0					
ANR	1108411	ArgumentList	( RListFree ) r_core_gadget_free		1107538	1					
ANR	1108412	Argument	( RListFree ) r_core_gadget_free		1107538	0					
ANR	1108413	CastExpression	( RListFree ) r_core_gadget_free		1107538	0					
ANR	1108414	CastTarget	RListFree		1107538	0					
ANR	1108415	Identifier	r_core_gadget_free		1107538	1					
ANR	1108416	ExpressionStatement	core -> anal -> ev = core -> ev	2734:1:85948:85973	1107538	129	True				
ANR	1108417	AssignmentExpression	core -> anal -> ev = core -> ev		1107538	0		=			
ANR	1108418	PtrMemberAccess	core -> anal -> ev		1107538	0					
ANR	1108419	PtrMemberAccess	core -> anal		1107538	0					
ANR	1108420	Identifier	core		1107538	0					
ANR	1108421	Identifier	anal		1107538	1					
ANR	1108422	Identifier	ev		1107538	1					
ANR	1108423	PtrMemberAccess	core -> ev		1107538	1					
ANR	1108424	Identifier	core		1107538	0					
ANR	1108425	Identifier	ev		1107538	1					
ANR	1108426	ExpressionStatement	core -> anal -> log = r_core_anal_log	2735:1:85976:86009	1107538	130	True				
ANR	1108427	AssignmentExpression	core -> anal -> log = r_core_anal_log		1107538	0		=			
ANR	1108428	PtrMemberAccess	core -> anal -> log		1107538	0					
ANR	1108429	PtrMemberAccess	core -> anal		1107538	0					
ANR	1108430	Identifier	core		1107538	0					
ANR	1108431	Identifier	anal		1107538	1					
ANR	1108432	Identifier	log		1107538	1					
ANR	1108433	Identifier	r_core_anal_log		1107538	1					
ANR	1108434	ExpressionStatement	core -> anal -> read_at = r_core_anal_read_at	2736:1:86012:86053	1107538	131	True				
ANR	1108435	AssignmentExpression	core -> anal -> read_at = r_core_anal_read_at		1107538	0		=			
ANR	1108436	PtrMemberAccess	core -> anal -> read_at		1107538	0					
ANR	1108437	PtrMemberAccess	core -> anal		1107538	0					
ANR	1108438	Identifier	core		1107538	0					
ANR	1108439	Identifier	anal		1107538	1					
ANR	1108440	Identifier	read_at		1107538	1					
ANR	1108441	Identifier	r_core_anal_read_at		1107538	1					
ANR	1108442	ExpressionStatement	core -> anal -> flag_get = r_core_flag_get_by_spaces	2737:1:86056:86104	1107538	132	True				
ANR	1108443	AssignmentExpression	core -> anal -> flag_get = r_core_flag_get_by_spaces		1107538	0		=			
ANR	1108444	PtrMemberAccess	core -> anal -> flag_get		1107538	0					
ANR	1108445	PtrMemberAccess	core -> anal		1107538	0					
ANR	1108446	Identifier	core		1107538	0					
ANR	1108447	Identifier	anal		1107538	1					
ANR	1108448	Identifier	flag_get		1107538	1					
ANR	1108449	Identifier	r_core_flag_get_by_spaces		1107538	1					
ANR	1108450	ExpressionStatement	core -> anal -> cb . on_fcn_new = on_fcn_new	2738:1:86107:86145	1107538	133	True				
ANR	1108451	AssignmentExpression	core -> anal -> cb . on_fcn_new = on_fcn_new		1107538	0		=			
ANR	1108452	MemberAccess	core -> anal -> cb . on_fcn_new		1107538	0					
ANR	1108453	PtrMemberAccess	core -> anal -> cb		1107538	0					
ANR	1108454	PtrMemberAccess	core -> anal		1107538	0					
ANR	1108455	Identifier	core		1107538	0					
ANR	1108456	Identifier	anal		1107538	1					
ANR	1108457	Identifier	cb		1107538	1					
ANR	1108458	Identifier	on_fcn_new		1107538	1					
ANR	1108459	Identifier	on_fcn_new		1107538	1					
ANR	1108460	ExpressionStatement	core -> anal -> cb . on_fcn_delete = on_fcn_delete	2739:1:86148:86192	1107538	134	True				
ANR	1108461	AssignmentExpression	core -> anal -> cb . on_fcn_delete = on_fcn_delete		1107538	0		=			
ANR	1108462	MemberAccess	core -> anal -> cb . on_fcn_delete		1107538	0					
ANR	1108463	PtrMemberAccess	core -> anal -> cb		1107538	0					
ANR	1108464	PtrMemberAccess	core -> anal		1107538	0					
ANR	1108465	Identifier	core		1107538	0					
ANR	1108466	Identifier	anal		1107538	1					
ANR	1108467	Identifier	cb		1107538	1					
ANR	1108468	Identifier	on_fcn_delete		1107538	1					
ANR	1108469	Identifier	on_fcn_delete		1107538	1					
ANR	1108470	ExpressionStatement	core -> anal -> cb . on_fcn_rename = on_fcn_rename	2740:1:86195:86239	1107538	135	True				
ANR	1108471	AssignmentExpression	core -> anal -> cb . on_fcn_rename = on_fcn_rename		1107538	0		=			
ANR	1108472	MemberAccess	core -> anal -> cb . on_fcn_rename		1107538	0					
ANR	1108473	PtrMemberAccess	core -> anal -> cb		1107538	0					
ANR	1108474	PtrMemberAccess	core -> anal		1107538	0					
ANR	1108475	Identifier	core		1107538	0					
ANR	1108476	Identifier	anal		1107538	1					
ANR	1108477	Identifier	cb		1107538	1					
ANR	1108478	Identifier	on_fcn_rename		1107538	1					
ANR	1108479	Identifier	on_fcn_rename		1107538	1					
ANR	1108480	ExpressionStatement	core -> print -> sdb_types = core -> anal -> sdb_types	2741:1:86242:86288	1107538	136	True				
ANR	1108481	AssignmentExpression	core -> print -> sdb_types = core -> anal -> sdb_types		1107538	0		=			
ANR	1108482	PtrMemberAccess	core -> print -> sdb_types		1107538	0					
ANR	1108483	PtrMemberAccess	core -> print		1107538	0					
ANR	1108484	Identifier	core		1107538	0					
ANR	1108485	Identifier	print		1107538	1					
ANR	1108486	Identifier	sdb_types		1107538	1					
ANR	1108487	PtrMemberAccess	core -> anal -> sdb_types		1107538	1					
ANR	1108488	PtrMemberAccess	core -> anal		1107538	0					
ANR	1108489	Identifier	core		1107538	0					
ANR	1108490	Identifier	anal		1107538	1					
ANR	1108491	Identifier	sdb_types		1107538	1					
ANR	1108492	ExpressionStatement	core -> assembler -> syscall = r_syscall_ref ( core -> anal -> syscall )	2742:1:86291:86353	1107538	137	True				
ANR	1108493	AssignmentExpression	core -> assembler -> syscall = r_syscall_ref ( core -> anal -> syscall )		1107538	0		=			
ANR	1108494	PtrMemberAccess	core -> assembler -> syscall		1107538	0					
ANR	1108495	PtrMemberAccess	core -> assembler		1107538	0					
ANR	1108496	Identifier	core		1107538	0					
ANR	1108497	Identifier	assembler		1107538	1					
ANR	1108498	Identifier	syscall		1107538	1					
ANR	1108499	CallExpression	r_syscall_ref ( core -> anal -> syscall )		1107538	1					
ANR	1108500	Callee	r_syscall_ref		1107538	0					
ANR	1108501	Identifier	r_syscall_ref		1107538	0					
ANR	1108502	ArgumentList	core -> anal -> syscall		1107538	1					
ANR	1108503	Argument	core -> anal -> syscall		1107538	0					
ANR	1108504	PtrMemberAccess	core -> anal -> syscall		1107538	0					
ANR	1108505	PtrMemberAccess	core -> anal		1107538	0					
ANR	1108506	Identifier	core		1107538	0					
ANR	1108507	Identifier	anal		1107538	1					
ANR	1108508	Identifier	syscall		1107538	1					
ANR	1108509	ExpressionStatement	"r_anal_set_user_ptr ( core -> anal , core )"	2743:1:86381:86419	1107538	138	True				
ANR	1108510	CallExpression	"r_anal_set_user_ptr ( core -> anal , core )"		1107538	0					
ANR	1108511	Callee	r_anal_set_user_ptr		1107538	0					
ANR	1108512	Identifier	r_anal_set_user_ptr		1107538	0					
ANR	1108513	ArgumentList	core -> anal		1107538	1					
ANR	1108514	Argument	core -> anal		1107538	0					
ANR	1108515	PtrMemberAccess	core -> anal		1107538	0					
ANR	1108516	Identifier	core		1107538	0					
ANR	1108517	Identifier	anal		1107538	1					
ANR	1108518	Argument	core		1107538	1					
ANR	1108519	Identifier	core		1107538	0					
ANR	1108520	ExpressionStatement	core -> anal -> cb_printf = ( void * ) r_cons_printf	2744:1:86422:86468	1107538	139	True				
ANR	1108521	AssignmentExpression	core -> anal -> cb_printf = ( void * ) r_cons_printf		1107538	0		=			
ANR	1108522	PtrMemberAccess	core -> anal -> cb_printf		1107538	0					
ANR	1108523	PtrMemberAccess	core -> anal		1107538	0					
ANR	1108524	Identifier	core		1107538	0					
ANR	1108525	Identifier	anal		1107538	1					
ANR	1108526	Identifier	cb_printf		1107538	1					
ANR	1108527	CastExpression	( void * ) r_cons_printf		1107538	1					
ANR	1108528	CastTarget	void *		1107538	0					
ANR	1108529	Identifier	r_cons_printf		1107538	1					
ANR	1108530	ExpressionStatement	core -> parser = r_parse_new ( )	2745:1:86471:86500	1107538	140	True				
ANR	1108531	AssignmentExpression	core -> parser = r_parse_new ( )		1107538	0		=			
ANR	1108532	PtrMemberAccess	core -> parser		1107538	0					
ANR	1108533	Identifier	core		1107538	0					
ANR	1108534	Identifier	parser		1107538	1					
ANR	1108535	CallExpression	r_parse_new ( )		1107538	1					
ANR	1108536	Callee	r_parse_new		1107538	0					
ANR	1108537	Identifier	r_parse_new		1107538	0					
ANR	1108538	ArgumentList			1107538	1					
ANR	1108539	ExpressionStatement	"r_anal_bind ( core -> anal , & ( core -> parser -> analb ) )"	2746:1:86503:86551	1107538	141	True				
ANR	1108540	CallExpression	"r_anal_bind ( core -> anal , & ( core -> parser -> analb ) )"		1107538	0					
ANR	1108541	Callee	r_anal_bind		1107538	0					
ANR	1108542	Identifier	r_anal_bind		1107538	0					
ANR	1108543	ArgumentList	core -> anal		1107538	1					
ANR	1108544	Argument	core -> anal		1107538	0					
ANR	1108545	PtrMemberAccess	core -> anal		1107538	0					
ANR	1108546	Identifier	core		1107538	0					
ANR	1108547	Identifier	anal		1107538	1					
ANR	1108548	Argument	& ( core -> parser -> analb )		1107538	1					
ANR	1108549	UnaryOperationExpression	& ( core -> parser -> analb )		1107538	0					
ANR	1108550	UnaryOperator	&		1107538	0					
ANR	1108551	PtrMemberAccess	core -> parser -> analb		1107538	1					
ANR	1108552	PtrMemberAccess	core -> parser		1107538	0					
ANR	1108553	Identifier	core		1107538	0					
ANR	1108554	Identifier	parser		1107538	1					
ANR	1108555	Identifier	analb		1107538	1					
ANR	1108556	ExpressionStatement	core -> parser -> varlist = r_anal_var_list	2747:1:86554:86593	1107538	142	True				
ANR	1108557	AssignmentExpression	core -> parser -> varlist = r_anal_var_list		1107538	0		=			
ANR	1108558	PtrMemberAccess	core -> parser -> varlist		1107538	0					
ANR	1108559	PtrMemberAccess	core -> parser		1107538	0					
ANR	1108560	Identifier	core		1107538	0					
ANR	1108561	Identifier	parser		1107538	1					
ANR	1108562	Identifier	varlist		1107538	1					
ANR	1108563	Identifier	r_anal_var_list		1107538	1					
ANR	1108564	ExpressionStatement	"r_parse_set_user_ptr ( core -> parser , core )"	2749:1:86628:86669	1107538	143	True				
ANR	1108565	CallExpression	"r_parse_set_user_ptr ( core -> parser , core )"		1107538	0					
ANR	1108566	Callee	r_parse_set_user_ptr		1107538	0					
ANR	1108567	Identifier	r_parse_set_user_ptr		1107538	0					
ANR	1108568	ArgumentList	core -> parser		1107538	1					
ANR	1108569	Argument	core -> parser		1107538	0					
ANR	1108570	PtrMemberAccess	core -> parser		1107538	0					
ANR	1108571	Identifier	core		1107538	0					
ANR	1108572	Identifier	parser		1107538	1					
ANR	1108573	Argument	core		1107538	1					
ANR	1108574	Identifier	core		1107538	0					
ANR	1108575	ExpressionStatement	core -> bin = r_bin_new ( )	2750:1:86672:86696	1107538	144	True				
ANR	1108576	AssignmentExpression	core -> bin = r_bin_new ( )		1107538	0		=			
ANR	1108577	PtrMemberAccess	core -> bin		1107538	0					
ANR	1108578	Identifier	core		1107538	0					
ANR	1108579	Identifier	bin		1107538	1					
ANR	1108580	CallExpression	r_bin_new ( )		1107538	1					
ANR	1108581	Callee	r_bin_new		1107538	0					
ANR	1108582	Identifier	r_bin_new		1107538	0					
ANR	1108583	ArgumentList			1107538	1					
ANR	1108584	ExpressionStatement	r_cons_bind ( & core -> bin -> consb )	2751:1:86699:86730	1107538	145	True				
ANR	1108585	CallExpression	r_cons_bind ( & core -> bin -> consb )		1107538	0					
ANR	1108586	Callee	r_cons_bind		1107538	0					
ANR	1108587	Identifier	r_cons_bind		1107538	0					
ANR	1108588	ArgumentList	& core -> bin -> consb		1107538	1					
ANR	1108589	Argument	& core -> bin -> consb		1107538	0					
ANR	1108590	UnaryOperationExpression	& core -> bin -> consb		1107538	0					
ANR	1108591	UnaryOperator	&		1107538	0					
ANR	1108592	PtrMemberAccess	core -> bin -> consb		1107538	1					
ANR	1108593	PtrMemberAccess	core -> bin		1107538	0					
ANR	1108594	Identifier	core		1107538	0					
ANR	1108595	Identifier	bin		1107538	1					
ANR	1108596	Identifier	consb		1107538	1					
ANR	1108597	ExpressionStatement	core -> bin -> cb_printf = ( PrintfCallback ) r_cons_printf	2753:1:86799:86852	1107538	146	True				
ANR	1108598	AssignmentExpression	core -> bin -> cb_printf = ( PrintfCallback ) r_cons_printf		1107538	0		=			
ANR	1108599	PtrMemberAccess	core -> bin -> cb_printf		1107538	0					
ANR	1108600	PtrMemberAccess	core -> bin		1107538	0					
ANR	1108601	Identifier	core		1107538	0					
ANR	1108602	Identifier	bin		1107538	1					
ANR	1108603	Identifier	cb_printf		1107538	1					
ANR	1108604	CastExpression	( PrintfCallback ) r_cons_printf		1107538	1					
ANR	1108605	CastTarget	PrintfCallback		1107538	0					
ANR	1108606	Identifier	r_cons_printf		1107538	1					
ANR	1108607	ExpressionStatement	"r_bin_set_user_ptr ( core -> bin , core )"	2754:1:86855:86891	1107538	147	True				
ANR	1108608	CallExpression	"r_bin_set_user_ptr ( core -> bin , core )"		1107538	0					
ANR	1108609	Callee	r_bin_set_user_ptr		1107538	0					
ANR	1108610	Identifier	r_bin_set_user_ptr		1107538	0					
ANR	1108611	ArgumentList	core -> bin		1107538	1					
ANR	1108612	Argument	core -> bin		1107538	0					
ANR	1108613	PtrMemberAccess	core -> bin		1107538	0					
ANR	1108614	Identifier	core		1107538	0					
ANR	1108615	Identifier	bin		1107538	1					
ANR	1108616	Argument	core		1107538	1					
ANR	1108617	Identifier	core		1107538	0					
ANR	1108618	ExpressionStatement	core -> io = r_io_new ( )	2755:1:86894:86916	1107538	148	True				
ANR	1108619	AssignmentExpression	core -> io = r_io_new ( )		1107538	0		=			
ANR	1108620	PtrMemberAccess	core -> io		1107538	0					
ANR	1108621	Identifier	core		1107538	0					
ANR	1108622	Identifier	io		1107538	1					
ANR	1108623	CallExpression	r_io_new ( )		1107538	1					
ANR	1108624	Callee	r_io_new		1107538	0					
ANR	1108625	Identifier	r_io_new		1107538	0					
ANR	1108626	ArgumentList			1107538	1					
ANR	1108627	ExpressionStatement	core -> io -> ff = 1	2756:1:86919:86935	1107538	149	True				
ANR	1108628	AssignmentExpression	core -> io -> ff = 1		1107538	0		=			
ANR	1108629	PtrMemberAccess	core -> io -> ff		1107538	0					
ANR	1108630	PtrMemberAccess	core -> io		1107538	0					
ANR	1108631	Identifier	core		1107538	0					
ANR	1108632	Identifier	io		1107538	1					
ANR	1108633	Identifier	ff		1107538	1					
ANR	1108634	PrimaryExpression	1		1107538	1					
ANR	1108635	ExpressionStatement	core -> io -> user = ( void * ) core	2757:1:86938:86967	1107538	150	True				
ANR	1108636	AssignmentExpression	core -> io -> user = ( void * ) core		1107538	0		=			
ANR	1108637	PtrMemberAccess	core -> io -> user		1107538	0					
ANR	1108638	PtrMemberAccess	core -> io		1107538	0					
ANR	1108639	Identifier	core		1107538	0					
ANR	1108640	Identifier	io		1107538	1					
ANR	1108641	Identifier	user		1107538	1					
ANR	1108642	CastExpression	( void * ) core		1107538	1					
ANR	1108643	CastTarget	void *		1107538	0					
ANR	1108644	Identifier	core		1107538	1					
ANR	1108645	ExpressionStatement	core -> io -> cb_core_cmd = core_cmd_callback	2758:1:86970:87011	1107538	151	True				
ANR	1108646	AssignmentExpression	core -> io -> cb_core_cmd = core_cmd_callback		1107538	0		=			
ANR	1108647	PtrMemberAccess	core -> io -> cb_core_cmd		1107538	0					
ANR	1108648	PtrMemberAccess	core -> io		1107538	0					
ANR	1108649	Identifier	core		1107538	0					
ANR	1108650	Identifier	io		1107538	1					
ANR	1108651	Identifier	cb_core_cmd		1107538	1					
ANR	1108652	Identifier	core_cmd_callback		1107538	1					
ANR	1108653	ExpressionStatement	core -> io -> cb_core_cmdstr = core_cmdstr_callback	2759:1:87014:87061	1107538	152	True				
ANR	1108654	AssignmentExpression	core -> io -> cb_core_cmdstr = core_cmdstr_callback		1107538	0		=			
ANR	1108655	PtrMemberAccess	core -> io -> cb_core_cmdstr		1107538	0					
ANR	1108656	PtrMemberAccess	core -> io		1107538	0					
ANR	1108657	Identifier	core		1107538	0					
ANR	1108658	Identifier	io		1107538	1					
ANR	1108659	Identifier	cb_core_cmdstr		1107538	1					
ANR	1108660	Identifier	core_cmdstr_callback		1107538	1					
ANR	1108661	ExpressionStatement	core -> io -> cb_core_post_write = core_post_write_callback	2760:1:87064:87119	1107538	153	True				
ANR	1108662	AssignmentExpression	core -> io -> cb_core_post_write = core_post_write_callback		1107538	0		=			
ANR	1108663	PtrMemberAccess	core -> io -> cb_core_post_write		1107538	0					
ANR	1108664	PtrMemberAccess	core -> io		1107538	0					
ANR	1108665	Identifier	core		1107538	0					
ANR	1108666	Identifier	io		1107538	1					
ANR	1108667	Identifier	cb_core_post_write		1107538	1					
ANR	1108668	Identifier	core_post_write_callback		1107538	1					
ANR	1108669	ExpressionStatement	core -> search = r_search_new ( R_SEARCH_KEYWORD )	2761:1:87122:87168	1107538	154	True				
ANR	1108670	AssignmentExpression	core -> search = r_search_new ( R_SEARCH_KEYWORD )		1107538	0		=			
ANR	1108671	PtrMemberAccess	core -> search		1107538	0					
ANR	1108672	Identifier	core		1107538	0					
ANR	1108673	Identifier	search		1107538	1					
ANR	1108674	CallExpression	r_search_new ( R_SEARCH_KEYWORD )		1107538	1					
ANR	1108675	Callee	r_search_new		1107538	0					
ANR	1108676	Identifier	r_search_new		1107538	0					
ANR	1108677	ArgumentList	R_SEARCH_KEYWORD		1107538	1					
ANR	1108678	Argument	R_SEARCH_KEYWORD		1107538	0					
ANR	1108679	Identifier	R_SEARCH_KEYWORD		1107538	0					
ANR	1108680	ExpressionStatement	"r_io_undo_enable ( core -> io , 1 , 0 )"	2762:1:87171:87204	1107538	155	True				
ANR	1108681	CallExpression	"r_io_undo_enable ( core -> io , 1 , 0 )"		1107538	0					
ANR	1108682	Callee	r_io_undo_enable		1107538	0					
ANR	1108683	Identifier	r_io_undo_enable		1107538	0					
ANR	1108684	ArgumentList	core -> io		1107538	1					
ANR	1108685	Argument	core -> io		1107538	0					
ANR	1108686	PtrMemberAccess	core -> io		1107538	0					
ANR	1108687	Identifier	core		1107538	0					
ANR	1108688	Identifier	io		1107538	1					
ANR	1108689	Argument	1		1107538	1					
ANR	1108690	PrimaryExpression	1		1107538	0					
ANR	1108691	Argument	0		1107538	2					
ANR	1108692	PrimaryExpression	0		1107538	0					
ANR	1108693	ExpressionStatement	core -> fs = r_fs_new ( )	2763:1:87238:87260	1107538	156	True				
ANR	1108694	AssignmentExpression	core -> fs = r_fs_new ( )		1107538	0		=			
ANR	1108695	PtrMemberAccess	core -> fs		1107538	0					
ANR	1108696	Identifier	core		1107538	0					
ANR	1108697	Identifier	fs		1107538	1					
ANR	1108698	CallExpression	r_fs_new ( )		1107538	1					
ANR	1108699	Callee	r_fs_new		1107538	0					
ANR	1108700	Identifier	r_fs_new		1107538	0					
ANR	1108701	ArgumentList			1107538	1					
ANR	1108702	ExpressionStatement	core -> flags = r_flag_new ( )	2764:1:87263:87290	1107538	157	True				
ANR	1108703	AssignmentExpression	core -> flags = r_flag_new ( )		1107538	0		=			
ANR	1108704	PtrMemberAccess	core -> flags		1107538	0					
ANR	1108705	Identifier	core		1107538	0					
ANR	1108706	Identifier	flags		1107538	1					
ANR	1108707	CallExpression	r_flag_new ( )		1107538	1					
ANR	1108708	Callee	r_flag_new		1107538	0					
ANR	1108709	Identifier	r_flag_new		1107538	0					
ANR	1108710	ArgumentList			1107538	1					
ANR	1108711	ExpressionStatement	core -> flags -> cb_printf = r_cons_printf	2765:1:87293:87331	1107538	158	True				
ANR	1108712	AssignmentExpression	core -> flags -> cb_printf = r_cons_printf		1107538	0		=			
ANR	1108713	PtrMemberAccess	core -> flags -> cb_printf		1107538	0					
ANR	1108714	PtrMemberAccess	core -> flags		1107538	0					
ANR	1108715	Identifier	core		1107538	0					
ANR	1108716	Identifier	flags		1107538	1					
ANR	1108717	Identifier	cb_printf		1107538	1					
ANR	1108718	Identifier	r_cons_printf		1107538	1					
ANR	1108719	ExpressionStatement	"core -> graph = r_agraph_new ( r_cons_canvas_new ( 1 , 1 ) )"	2766:1:87334:87387	1107538	159	True				
ANR	1108720	AssignmentExpression	"core -> graph = r_agraph_new ( r_cons_canvas_new ( 1 , 1 ) )"		1107538	0		=			
ANR	1108721	PtrMemberAccess	core -> graph		1107538	0					
ANR	1108722	Identifier	core		1107538	0					
ANR	1108723	Identifier	graph		1107538	1					
ANR	1108724	CallExpression	"r_agraph_new ( r_cons_canvas_new ( 1 , 1 ) )"		1107538	1					
ANR	1108725	Callee	r_agraph_new		1107538	0					
ANR	1108726	Identifier	r_agraph_new		1107538	0					
ANR	1108727	ArgumentList	"r_cons_canvas_new ( 1 , 1 )"		1107538	1					
ANR	1108728	Argument	"r_cons_canvas_new ( 1 , 1 )"		1107538	0					
ANR	1108729	CallExpression	"r_cons_canvas_new ( 1 , 1 )"		1107538	0					
ANR	1108730	Callee	r_cons_canvas_new		1107538	0					
ANR	1108731	Identifier	r_cons_canvas_new		1107538	0					
ANR	1108732	ArgumentList	1		1107538	1					
ANR	1108733	Argument	1		1107538	0					
ANR	1108734	PrimaryExpression	1		1107538	0					
ANR	1108735	Argument	1		1107538	1					
ANR	1108736	PrimaryExpression	1		1107538	0					
ANR	1108737	ExpressionStatement	core -> graph -> need_reload_nodes = false	2767:1:87390:87428	1107538	160	True				
ANR	1108738	AssignmentExpression	core -> graph -> need_reload_nodes = false		1107538	0		=			
ANR	1108739	PtrMemberAccess	core -> graph -> need_reload_nodes		1107538	0					
ANR	1108740	PtrMemberAccess	core -> graph		1107538	0					
ANR	1108741	Identifier	core		1107538	0					
ANR	1108742	Identifier	graph		1107538	1					
ANR	1108743	Identifier	need_reload_nodes		1107538	1					
ANR	1108744	Identifier	false		1107538	1					
ANR	1108745	ExpressionStatement	core -> asmqjmps_size = R_CORE_ASMQJMPS_NUM	2768:1:87431:87472	1107538	161	True				
ANR	1108746	AssignmentExpression	core -> asmqjmps_size = R_CORE_ASMQJMPS_NUM		1107538	0		=			
ANR	1108747	PtrMemberAccess	core -> asmqjmps_size		1107538	0					
ANR	1108748	Identifier	core		1107538	0					
ANR	1108749	Identifier	asmqjmps_size		1107538	1					
ANR	1108750	Identifier	R_CORE_ASMQJMPS_NUM		1107538	1					
ANR	1108751	IfStatement	if ( sizeof ( ut64 ) * core -> asmqjmps_size < core -> asmqjmps_size )		1107538	162					
ANR	1108752	Condition	sizeof ( ut64 ) * core -> asmqjmps_size < core -> asmqjmps_size	2769:5:87479:87535	1107538	0	True				
ANR	1108753	RelationalExpression	sizeof ( ut64 ) * core -> asmqjmps_size < core -> asmqjmps_size		1107538	0		<			
ANR	1108754	MultiplicativeExpression	sizeof ( ut64 ) * core -> asmqjmps_size		1107538	0		*			
ANR	1108755	SizeofExpression	sizeof ( ut64 )		1107538	0					
ANR	1108756	Sizeof	sizeof		1107538	0					
ANR	1108757	SizeofOperand	ut64		1107538	1					
ANR	1108758	PtrMemberAccess	core -> asmqjmps_size		1107538	1					
ANR	1108759	Identifier	core		1107538	0					
ANR	1108760	Identifier	asmqjmps_size		1107538	1					
ANR	1108761	PtrMemberAccess	core -> asmqjmps_size		1107538	1					
ANR	1108762	Identifier	core		1107538	0					
ANR	1108763	Identifier	asmqjmps_size		1107538	1					
ANR	1108764	CompoundStatement		148:64:5398:5398	1107538	1					
ANR	1108765	ExpressionStatement	core -> asmqjmps_size = 0	2770:2:87542:87565	1107538	0	True				
ANR	1108766	AssignmentExpression	core -> asmqjmps_size = 0		1107538	0		=			
ANR	1108767	PtrMemberAccess	core -> asmqjmps_size		1107538	0					
ANR	1108768	Identifier	core		1107538	0					
ANR	1108769	Identifier	asmqjmps_size		1107538	1					
ANR	1108770	PrimaryExpression	0		1107538	1					
ANR	1108771	ExpressionStatement	core -> asmqjmps = NULL	2771:2:87569:87590	1107538	1	True				
ANR	1108772	AssignmentExpression	core -> asmqjmps = NULL		1107538	0		=			
ANR	1108773	PtrMemberAccess	core -> asmqjmps		1107538	0					
ANR	1108774	Identifier	core		1107538	0					
ANR	1108775	Identifier	asmqjmps		1107538	1					
ANR	1108776	Identifier	NULL		1107538	1					
ANR	1108777	ElseStatement	else		1107538	0					
ANR	1108778	CompoundStatement		151:8:5460:5460	1107538	0					
ANR	1108779	ExpressionStatement	"core -> asmqjmps = R_NEWS ( ut64 , core -> asmqjmps_size )"	2773:2:87604:87655	1107538	0	True				
ANR	1108780	AssignmentExpression	"core -> asmqjmps = R_NEWS ( ut64 , core -> asmqjmps_size )"		1107538	0		=			
ANR	1108781	PtrMemberAccess	core -> asmqjmps		1107538	0					
ANR	1108782	Identifier	core		1107538	0					
ANR	1108783	Identifier	asmqjmps		1107538	1					
ANR	1108784	CallExpression	"R_NEWS ( ut64 , core -> asmqjmps_size )"		1107538	1					
ANR	1108785	Callee	R_NEWS		1107538	0					
ANR	1108786	Identifier	R_NEWS		1107538	0					
ANR	1108787	ArgumentList	ut64		1107538	1					
ANR	1108788	Argument	ut64		1107538	0					
ANR	1108789	Identifier	ut64		1107538	0					
ANR	1108790	Argument	core -> asmqjmps_size		1107538	1					
ANR	1108791	PtrMemberAccess	core -> asmqjmps_size		1107538	0					
ANR	1108792	Identifier	core		1107538	0					
ANR	1108793	Identifier	asmqjmps_size		1107538	1					
ANR	1108794	ExpressionStatement	"r_bin_bind ( core -> bin , & ( core -> assembler -> binb ) )"	2776:1:87662:87710	1107538	163	True				
ANR	1108795	CallExpression	"r_bin_bind ( core -> bin , & ( core -> assembler -> binb ) )"		1107538	0					
ANR	1108796	Callee	r_bin_bind		1107538	0					
ANR	1108797	Identifier	r_bin_bind		1107538	0					
ANR	1108798	ArgumentList	core -> bin		1107538	1					
ANR	1108799	Argument	core -> bin		1107538	0					
ANR	1108800	PtrMemberAccess	core -> bin		1107538	0					
ANR	1108801	Identifier	core		1107538	0					
ANR	1108802	Identifier	bin		1107538	1					
ANR	1108803	Argument	& ( core -> assembler -> binb )		1107538	1					
ANR	1108804	UnaryOperationExpression	& ( core -> assembler -> binb )		1107538	0					
ANR	1108805	UnaryOperator	&		1107538	0					
ANR	1108806	PtrMemberAccess	core -> assembler -> binb		1107538	1					
ANR	1108807	PtrMemberAccess	core -> assembler		1107538	0					
ANR	1108808	Identifier	core		1107538	0					
ANR	1108809	Identifier	assembler		1107538	1					
ANR	1108810	Identifier	binb		1107538	1					
ANR	1108811	ExpressionStatement	"r_bin_bind ( core -> bin , & ( core -> anal -> binb ) )"	2777:1:87713:87756	1107538	164	True				
ANR	1108812	CallExpression	"r_bin_bind ( core -> bin , & ( core -> anal -> binb ) )"		1107538	0					
ANR	1108813	Callee	r_bin_bind		1107538	0					
ANR	1108814	Identifier	r_bin_bind		1107538	0					
ANR	1108815	ArgumentList	core -> bin		1107538	1					
ANR	1108816	Argument	core -> bin		1107538	0					
ANR	1108817	PtrMemberAccess	core -> bin		1107538	0					
ANR	1108818	Identifier	core		1107538	0					
ANR	1108819	Identifier	bin		1107538	1					
ANR	1108820	Argument	& ( core -> anal -> binb )		1107538	1					
ANR	1108821	UnaryOperationExpression	& ( core -> anal -> binb )		1107538	0					
ANR	1108822	UnaryOperator	&		1107538	0					
ANR	1108823	PtrMemberAccess	core -> anal -> binb		1107538	1					
ANR	1108824	PtrMemberAccess	core -> anal		1107538	0					
ANR	1108825	Identifier	core		1107538	0					
ANR	1108826	Identifier	anal		1107538	1					
ANR	1108827	Identifier	binb		1107538	1					
ANR	1108828	ExpressionStatement	"r_bin_bind ( core -> bin , & ( core -> anal -> binb ) )"	2778:1:87759:87802	1107538	165	True				
ANR	1108829	CallExpression	"r_bin_bind ( core -> bin , & ( core -> anal -> binb ) )"		1107538	0					
ANR	1108830	Callee	r_bin_bind		1107538	0					
ANR	1108831	Identifier	r_bin_bind		1107538	0					
ANR	1108832	ArgumentList	core -> bin		1107538	1					
ANR	1108833	Argument	core -> bin		1107538	0					
ANR	1108834	PtrMemberAccess	core -> bin		1107538	0					
ANR	1108835	Identifier	core		1107538	0					
ANR	1108836	Identifier	bin		1107538	1					
ANR	1108837	Argument	& ( core -> anal -> binb )		1107538	1					
ANR	1108838	UnaryOperationExpression	& ( core -> anal -> binb )		1107538	0					
ANR	1108839	UnaryOperator	&		1107538	0					
ANR	1108840	PtrMemberAccess	core -> anal -> binb		1107538	1					
ANR	1108841	PtrMemberAccess	core -> anal		1107538	0					
ANR	1108842	Identifier	core		1107538	0					
ANR	1108843	Identifier	anal		1107538	1					
ANR	1108844	Identifier	binb		1107538	1					
ANR	1108845	ExpressionStatement	"r_io_bind ( core -> io , & ( core -> search -> iob ) )"	2780:1:87806:87848	1107538	166	True				
ANR	1108846	CallExpression	"r_io_bind ( core -> io , & ( core -> search -> iob ) )"		1107538	0					
ANR	1108847	Callee	r_io_bind		1107538	0					
ANR	1108848	Identifier	r_io_bind		1107538	0					
ANR	1108849	ArgumentList	core -> io		1107538	1					
ANR	1108850	Argument	core -> io		1107538	0					
ANR	1108851	PtrMemberAccess	core -> io		1107538	0					
ANR	1108852	Identifier	core		1107538	0					
ANR	1108853	Identifier	io		1107538	1					
ANR	1108854	Argument	& ( core -> search -> iob )		1107538	1					
ANR	1108855	UnaryOperationExpression	& ( core -> search -> iob )		1107538	0					
ANR	1108856	UnaryOperator	&		1107538	0					
ANR	1108857	PtrMemberAccess	core -> search -> iob		1107538	1					
ANR	1108858	PtrMemberAccess	core -> search		1107538	0					
ANR	1108859	Identifier	core		1107538	0					
ANR	1108860	Identifier	search		1107538	1					
ANR	1108861	Identifier	iob		1107538	1					
ANR	1108862	ExpressionStatement	"r_io_bind ( core -> io , & ( core -> print -> iob ) )"	2781:1:87851:87892	1107538	167	True				
ANR	1108863	CallExpression	"r_io_bind ( core -> io , & ( core -> print -> iob ) )"		1107538	0					
ANR	1108864	Callee	r_io_bind		1107538	0					
ANR	1108865	Identifier	r_io_bind		1107538	0					
ANR	1108866	ArgumentList	core -> io		1107538	1					
ANR	1108867	Argument	core -> io		1107538	0					
ANR	1108868	PtrMemberAccess	core -> io		1107538	0					
ANR	1108869	Identifier	core		1107538	0					
ANR	1108870	Identifier	io		1107538	1					
ANR	1108871	Argument	& ( core -> print -> iob )		1107538	1					
ANR	1108872	UnaryOperationExpression	& ( core -> print -> iob )		1107538	0					
ANR	1108873	UnaryOperator	&		1107538	0					
ANR	1108874	PtrMemberAccess	core -> print -> iob		1107538	1					
ANR	1108875	PtrMemberAccess	core -> print		1107538	0					
ANR	1108876	Identifier	core		1107538	0					
ANR	1108877	Identifier	print		1107538	1					
ANR	1108878	Identifier	iob		1107538	1					
ANR	1108879	ExpressionStatement	"r_io_bind ( core -> io , & ( core -> anal -> iob ) )"	2782:1:87895:87935	1107538	168	True				
ANR	1108880	CallExpression	"r_io_bind ( core -> io , & ( core -> anal -> iob ) )"		1107538	0					
ANR	1108881	Callee	r_io_bind		1107538	0					
ANR	1108882	Identifier	r_io_bind		1107538	0					
ANR	1108883	ArgumentList	core -> io		1107538	1					
ANR	1108884	Argument	core -> io		1107538	0					
ANR	1108885	PtrMemberAccess	core -> io		1107538	0					
ANR	1108886	Identifier	core		1107538	0					
ANR	1108887	Identifier	io		1107538	1					
ANR	1108888	Argument	& ( core -> anal -> iob )		1107538	1					
ANR	1108889	UnaryOperationExpression	& ( core -> anal -> iob )		1107538	0					
ANR	1108890	UnaryOperator	&		1107538	0					
ANR	1108891	PtrMemberAccess	core -> anal -> iob		1107538	1					
ANR	1108892	PtrMemberAccess	core -> anal		1107538	0					
ANR	1108893	Identifier	core		1107538	0					
ANR	1108894	Identifier	anal		1107538	1					
ANR	1108895	Identifier	iob		1107538	1					
ANR	1108896	ExpressionStatement	"r_io_bind ( core -> io , & ( core -> fs -> iob ) )"	2783:1:87938:87976	1107538	169	True				
ANR	1108897	CallExpression	"r_io_bind ( core -> io , & ( core -> fs -> iob ) )"		1107538	0					
ANR	1108898	Callee	r_io_bind		1107538	0					
ANR	1108899	Identifier	r_io_bind		1107538	0					
ANR	1108900	ArgumentList	core -> io		1107538	1					
ANR	1108901	Argument	core -> io		1107538	0					
ANR	1108902	PtrMemberAccess	core -> io		1107538	0					
ANR	1108903	Identifier	core		1107538	0					
ANR	1108904	Identifier	io		1107538	1					
ANR	1108905	Argument	& ( core -> fs -> iob )		1107538	1					
ANR	1108906	UnaryOperationExpression	& ( core -> fs -> iob )		1107538	0					
ANR	1108907	UnaryOperator	&		1107538	0					
ANR	1108908	PtrMemberAccess	core -> fs -> iob		1107538	1					
ANR	1108909	PtrMemberAccess	core -> fs		1107538	0					
ANR	1108910	Identifier	core		1107538	0					
ANR	1108911	Identifier	fs		1107538	1					
ANR	1108912	Identifier	iob		1107538	1					
ANR	1108913	ExpressionStatement	"r_core_bind ( core , & ( core -> fs -> cob ) )"	2784:1:87979:88015	1107538	170	True				
ANR	1108914	CallExpression	"r_core_bind ( core , & ( core -> fs -> cob ) )"		1107538	0					
ANR	1108915	Callee	r_core_bind		1107538	0					
ANR	1108916	Identifier	r_core_bind		1107538	0					
ANR	1108917	ArgumentList	core		1107538	1					
ANR	1108918	Argument	core		1107538	0					
ANR	1108919	Identifier	core		1107538	0					
ANR	1108920	Argument	& ( core -> fs -> cob )		1107538	1					
ANR	1108921	UnaryOperationExpression	& ( core -> fs -> cob )		1107538	0					
ANR	1108922	UnaryOperator	&		1107538	0					
ANR	1108923	PtrMemberAccess	core -> fs -> cob		1107538	1					
ANR	1108924	PtrMemberAccess	core -> fs		1107538	0					
ANR	1108925	Identifier	core		1107538	0					
ANR	1108926	Identifier	fs		1107538	1					
ANR	1108927	Identifier	cob		1107538	1					
ANR	1108928	ExpressionStatement	"r_io_bind ( core -> io , & ( core -> bin -> iob ) )"	2785:1:88018:88057	1107538	171	True				
ANR	1108929	CallExpression	"r_io_bind ( core -> io , & ( core -> bin -> iob ) )"		1107538	0					
ANR	1108930	Callee	r_io_bind		1107538	0					
ANR	1108931	Identifier	r_io_bind		1107538	0					
ANR	1108932	ArgumentList	core -> io		1107538	1					
ANR	1108933	Argument	core -> io		1107538	0					
ANR	1108934	PtrMemberAccess	core -> io		1107538	0					
ANR	1108935	Identifier	core		1107538	0					
ANR	1108936	Identifier	io		1107538	1					
ANR	1108937	Argument	& ( core -> bin -> iob )		1107538	1					
ANR	1108938	UnaryOperationExpression	& ( core -> bin -> iob )		1107538	0					
ANR	1108939	UnaryOperator	&		1107538	0					
ANR	1108940	PtrMemberAccess	core -> bin -> iob		1107538	1					
ANR	1108941	PtrMemberAccess	core -> bin		1107538	0					
ANR	1108942	Identifier	core		1107538	0					
ANR	1108943	Identifier	bin		1107538	1					
ANR	1108944	Identifier	iob		1107538	1					
ANR	1108945	ExpressionStatement	"r_flag_bind ( core -> flags , & ( core -> anal -> flb ) )"	2786:1:88060:88105	1107538	172	True				
ANR	1108946	CallExpression	"r_flag_bind ( core -> flags , & ( core -> anal -> flb ) )"		1107538	0					
ANR	1108947	Callee	r_flag_bind		1107538	0					
ANR	1108948	Identifier	r_flag_bind		1107538	0					
ANR	1108949	ArgumentList	core -> flags		1107538	1					
ANR	1108950	Argument	core -> flags		1107538	0					
ANR	1108951	PtrMemberAccess	core -> flags		1107538	0					
ANR	1108952	Identifier	core		1107538	0					
ANR	1108953	Identifier	flags		1107538	1					
ANR	1108954	Argument	& ( core -> anal -> flb )		1107538	1					
ANR	1108955	UnaryOperationExpression	& ( core -> anal -> flb )		1107538	0					
ANR	1108956	UnaryOperator	&		1107538	0					
ANR	1108957	PtrMemberAccess	core -> anal -> flb		1107538	1					
ANR	1108958	PtrMemberAccess	core -> anal		1107538	0					
ANR	1108959	Identifier	core		1107538	0					
ANR	1108960	Identifier	anal		1107538	1					
ANR	1108961	Identifier	flb		1107538	1					
ANR	1108962	ExpressionStatement	core -> anal -> flg_class_set = core_flg_class_set	2787:1:88108:88154	1107538	173	True				
ANR	1108963	AssignmentExpression	core -> anal -> flg_class_set = core_flg_class_set		1107538	0		=			
ANR	1108964	PtrMemberAccess	core -> anal -> flg_class_set		1107538	0					
ANR	1108965	PtrMemberAccess	core -> anal		1107538	0					
ANR	1108966	Identifier	core		1107538	0					
ANR	1108967	Identifier	anal		1107538	1					
ANR	1108968	Identifier	flg_class_set		1107538	1					
ANR	1108969	Identifier	core_flg_class_set		1107538	1					
ANR	1108970	ExpressionStatement	core -> anal -> flg_class_get = core_flg_class_get	2788:1:88157:88203	1107538	174	True				
ANR	1108971	AssignmentExpression	core -> anal -> flg_class_get = core_flg_class_get		1107538	0		=			
ANR	1108972	PtrMemberAccess	core -> anal -> flg_class_get		1107538	0					
ANR	1108973	PtrMemberAccess	core -> anal		1107538	0					
ANR	1108974	Identifier	core		1107538	0					
ANR	1108975	Identifier	anal		1107538	1					
ANR	1108976	Identifier	flg_class_get		1107538	1					
ANR	1108977	Identifier	core_flg_class_get		1107538	1					
ANR	1108978	ExpressionStatement	core -> anal -> flg_fcn_set = core_flg_fcn_set	2789:1:88206:88248	1107538	175	True				
ANR	1108979	AssignmentExpression	core -> anal -> flg_fcn_set = core_flg_fcn_set		1107538	0		=			
ANR	1108980	PtrMemberAccess	core -> anal -> flg_fcn_set		1107538	0					
ANR	1108981	PtrMemberAccess	core -> anal		1107538	0					
ANR	1108982	Identifier	core		1107538	0					
ANR	1108983	Identifier	anal		1107538	1					
ANR	1108984	Identifier	flg_fcn_set		1107538	1					
ANR	1108985	Identifier	core_flg_fcn_set		1107538	1					
ANR	1108986	ExpressionStatement	"r_anal_bind ( core -> anal , & ( core -> parser -> analb ) )"	2790:1:88251:88299	1107538	176	True				
ANR	1108987	CallExpression	"r_anal_bind ( core -> anal , & ( core -> parser -> analb ) )"		1107538	0					
ANR	1108988	Callee	r_anal_bind		1107538	0					
ANR	1108989	Identifier	r_anal_bind		1107538	0					
ANR	1108990	ArgumentList	core -> anal		1107538	1					
ANR	1108991	Argument	core -> anal		1107538	0					
ANR	1108992	PtrMemberAccess	core -> anal		1107538	0					
ANR	1108993	Identifier	core		1107538	0					
ANR	1108994	Identifier	anal		1107538	1					
ANR	1108995	Argument	& ( core -> parser -> analb )		1107538	1					
ANR	1108996	UnaryOperationExpression	& ( core -> parser -> analb )		1107538	0					
ANR	1108997	UnaryOperator	&		1107538	0					
ANR	1108998	PtrMemberAccess	core -> parser -> analb		1107538	1					
ANR	1108999	PtrMemberAccess	core -> parser		1107538	0					
ANR	1109000	Identifier	core		1107538	0					
ANR	1109001	Identifier	parser		1107538	1					
ANR	1109002	Identifier	analb		1107538	1					
ANR	1109003	ExpressionStatement	core -> parser -> flag_get = r_core_flag_get_by_spaces	2791:1:88302:88352	1107538	177	True				
ANR	1109004	AssignmentExpression	core -> parser -> flag_get = r_core_flag_get_by_spaces		1107538	0		=			
ANR	1109005	PtrMemberAccess	core -> parser -> flag_get		1107538	0					
ANR	1109006	PtrMemberAccess	core -> parser		1107538	0					
ANR	1109007	Identifier	core		1107538	0					
ANR	1109008	Identifier	parser		1107538	1					
ANR	1109009	Identifier	flag_get		1107538	1					
ANR	1109010	Identifier	r_core_flag_get_by_spaces		1107538	1					
ANR	1109011	ExpressionStatement	core -> parser -> label_get = r_anal_fcn_label_at	2792:1:88355:88400	1107538	178	True				
ANR	1109012	AssignmentExpression	core -> parser -> label_get = r_anal_fcn_label_at		1107538	0		=			
ANR	1109013	PtrMemberAccess	core -> parser -> label_get		1107538	0					
ANR	1109014	PtrMemberAccess	core -> parser		1107538	0					
ANR	1109015	Identifier	core		1107538	0					
ANR	1109016	Identifier	parser		1107538	1					
ANR	1109017	Identifier	label_get		1107538	1					
ANR	1109018	Identifier	r_anal_fcn_label_at		1107538	1					
ANR	1109019	ExpressionStatement	"r_core_bind ( core , & ( core -> anal -> coreb ) )"	2794:1:88404:88444	1107538	179	True				
ANR	1109020	CallExpression	"r_core_bind ( core , & ( core -> anal -> coreb ) )"		1107538	0					
ANR	1109021	Callee	r_core_bind		1107538	0					
ANR	1109022	Identifier	r_core_bind		1107538	0					
ANR	1109023	ArgumentList	core		1107538	1					
ANR	1109024	Argument	core		1107538	0					
ANR	1109025	Identifier	core		1107538	0					
ANR	1109026	Argument	& ( core -> anal -> coreb )		1107538	1					
ANR	1109027	UnaryOperationExpression	& ( core -> anal -> coreb )		1107538	0					
ANR	1109028	UnaryOperator	&		1107538	0					
ANR	1109029	PtrMemberAccess	core -> anal -> coreb		1107538	1					
ANR	1109030	PtrMemberAccess	core -> anal		1107538	0					
ANR	1109031	Identifier	core		1107538	0					
ANR	1109032	Identifier	anal		1107538	1					
ANR	1109033	Identifier	coreb		1107538	1					
ANR	1109034	ExpressionStatement	core -> file = NULL	2796:1:88448:88465	1107538	180	True				
ANR	1109035	AssignmentExpression	core -> file = NULL		1107538	0		=			
ANR	1109036	PtrMemberAccess	core -> file		1107538	0					
ANR	1109037	Identifier	core		1107538	0					
ANR	1109038	Identifier	file		1107538	1					
ANR	1109039	Identifier	NULL		1107538	1					
ANR	1109040	ExpressionStatement	core -> files = r_list_newf ( ( RListFree ) r_core_file_free )	2797:1:88468:88523	1107538	181	True				
ANR	1109041	AssignmentExpression	core -> files = r_list_newf ( ( RListFree ) r_core_file_free )		1107538	0		=			
ANR	1109042	PtrMemberAccess	core -> files		1107538	0					
ANR	1109043	Identifier	core		1107538	0					
ANR	1109044	Identifier	files		1107538	1					
ANR	1109045	CallExpression	r_list_newf ( ( RListFree ) r_core_file_free )		1107538	1					
ANR	1109046	Callee	r_list_newf		1107538	0					
ANR	1109047	Identifier	r_list_newf		1107538	0					
ANR	1109048	ArgumentList	( RListFree ) r_core_file_free		1107538	1					
ANR	1109049	Argument	( RListFree ) r_core_file_free		1107538	0					
ANR	1109050	CastExpression	( RListFree ) r_core_file_free		1107538	0					
ANR	1109051	CastTarget	RListFree		1107538	0					
ANR	1109052	Identifier	r_core_file_free		1107538	1					
ANR	1109053	Statement	core	2798:1:88526:88529	1107538	182	True				
ANR	1109054	Statement	->	2798:5:88530:88531	1107538	183	True				
ANR	1109055	Statement	offset	2798:7:88532:88537	1107538	184	True				
ANR	1109056	Statement	=	2798:14:88539:88539	1107538	185	True				
ANR	1109057	Statement	0L	2798:16:88541:88542	1107538	186	True				
ANR	1109058	ExpressionStatement	L	2798:18:88543:88544	1107538	187	True				
ANR	1109059	Identifier	L		1107538	0					
ANR	1109060	Statement	core	2799:1:88547:88550	1107538	188	True				
ANR	1109061	Statement	->	2799:5:88551:88552	1107538	189	True				
ANR	1109062	Statement	prompt_offset	2799:7:88553:88565	1107538	190	True				
ANR	1109063	Statement	=	2799:21:88567:88567	1107538	191	True				
ANR	1109064	Statement	0L	2799:23:88569:88570	1107538	192	True				
ANR	1109065	ExpressionStatement	L	2799:25:88571:88572	1107538	193	True				
ANR	1109066	Identifier	L		1107538	0					
ANR	1109067	ExpressionStatement	r_core_cmd_init ( core )	2800:1:88575:88597	1107538	194	True				
ANR	1109068	CallExpression	r_core_cmd_init ( core )		1107538	0					
ANR	1109069	Callee	r_core_cmd_init		1107538	0					
ANR	1109070	Identifier	r_core_cmd_init		1107538	0					
ANR	1109071	ArgumentList	core		1107538	1					
ANR	1109072	Argument	core		1107538	0					
ANR	1109073	Identifier	core		1107538	0					
ANR	1109074	ExpressionStatement	core -> dbg = r_debug_new ( true )	2801:1:88600:88630	1107538	195	True				
ANR	1109075	AssignmentExpression	core -> dbg = r_debug_new ( true )		1107538	0		=			
ANR	1109076	PtrMemberAccess	core -> dbg		1107538	0					
ANR	1109077	Identifier	core		1107538	0					
ANR	1109078	Identifier	dbg		1107538	1					
ANR	1109079	CallExpression	r_debug_new ( true )		1107538	1					
ANR	1109080	Callee	r_debug_new		1107538	0					
ANR	1109081	Identifier	r_debug_new		1107538	0					
ANR	1109082	ArgumentList	true		1107538	1					
ANR	1109083	Argument	true		1107538	0					
ANR	1109084	Identifier	true		1107538	0					
ANR	1109085	ExpressionStatement	"r_io_bind ( core -> io , & ( core -> dbg -> iob ) )"	2803:1:88634:88673	1107538	196	True				
ANR	1109086	CallExpression	"r_io_bind ( core -> io , & ( core -> dbg -> iob ) )"		1107538	0					
ANR	1109087	Callee	r_io_bind		1107538	0					
ANR	1109088	Identifier	r_io_bind		1107538	0					
ANR	1109089	ArgumentList	core -> io		1107538	1					
ANR	1109090	Argument	core -> io		1107538	0					
ANR	1109091	PtrMemberAccess	core -> io		1107538	0					
ANR	1109092	Identifier	core		1107538	0					
ANR	1109093	Identifier	io		1107538	1					
ANR	1109094	Argument	& ( core -> dbg -> iob )		1107538	1					
ANR	1109095	UnaryOperationExpression	& ( core -> dbg -> iob )		1107538	0					
ANR	1109096	UnaryOperator	&		1107538	0					
ANR	1109097	PtrMemberAccess	core -> dbg -> iob		1107538	1					
ANR	1109098	PtrMemberAccess	core -> dbg		1107538	0					
ANR	1109099	Identifier	core		1107538	0					
ANR	1109100	Identifier	dbg		1107538	1					
ANR	1109101	Identifier	iob		1107538	1					
ANR	1109102	ExpressionStatement	"r_io_bind ( core -> io , & ( core -> dbg -> bp -> iob ) )"	2804:1:88676:88719	1107538	197	True				
ANR	1109103	CallExpression	"r_io_bind ( core -> io , & ( core -> dbg -> bp -> iob ) )"		1107538	0					
ANR	1109104	Callee	r_io_bind		1107538	0					
ANR	1109105	Identifier	r_io_bind		1107538	0					
ANR	1109106	ArgumentList	core -> io		1107538	1					
ANR	1109107	Argument	core -> io		1107538	0					
ANR	1109108	PtrMemberAccess	core -> io		1107538	0					
ANR	1109109	Identifier	core		1107538	0					
ANR	1109110	Identifier	io		1107538	1					
ANR	1109111	Argument	& ( core -> dbg -> bp -> iob )		1107538	1					
ANR	1109112	UnaryOperationExpression	& ( core -> dbg -> bp -> iob )		1107538	0					
ANR	1109113	UnaryOperator	&		1107538	0					
ANR	1109114	PtrMemberAccess	core -> dbg -> bp -> iob		1107538	1					
ANR	1109115	PtrMemberAccess	core -> dbg -> bp		1107538	0					
ANR	1109116	PtrMemberAccess	core -> dbg		1107538	0					
ANR	1109117	Identifier	core		1107538	0					
ANR	1109118	Identifier	dbg		1107538	1					
ANR	1109119	Identifier	bp		1107538	1					
ANR	1109120	Identifier	iob		1107538	1					
ANR	1109121	ExpressionStatement	"r_core_bind ( core , & core -> dbg -> corebind )"	2805:1:88722:88762	1107538	198	True				
ANR	1109122	CallExpression	"r_core_bind ( core , & core -> dbg -> corebind )"		1107538	0					
ANR	1109123	Callee	r_core_bind		1107538	0					
ANR	1109124	Identifier	r_core_bind		1107538	0					
ANR	1109125	ArgumentList	core		1107538	1					
ANR	1109126	Argument	core		1107538	0					
ANR	1109127	Identifier	core		1107538	0					
ANR	1109128	Argument	& core -> dbg -> corebind		1107538	1					
ANR	1109129	UnaryOperationExpression	& core -> dbg -> corebind		1107538	0					
ANR	1109130	UnaryOperator	&		1107538	0					
ANR	1109131	PtrMemberAccess	core -> dbg -> corebind		1107538	1					
ANR	1109132	PtrMemberAccess	core -> dbg		1107538	0					
ANR	1109133	Identifier	core		1107538	0					
ANR	1109134	Identifier	dbg		1107538	1					
ANR	1109135	Identifier	corebind		1107538	1					
ANR	1109136	ExpressionStatement	core -> dbg -> anal = core -> anal	2806:1:88765:88793	1107538	199	True				
ANR	1109137	AssignmentExpression	core -> dbg -> anal = core -> anal		1107538	0		=			
ANR	1109138	PtrMemberAccess	core -> dbg -> anal		1107538	0					
ANR	1109139	PtrMemberAccess	core -> dbg		1107538	0					
ANR	1109140	Identifier	core		1107538	0					
ANR	1109141	Identifier	dbg		1107538	1					
ANR	1109142	Identifier	anal		1107538	1					
ANR	1109143	PtrMemberAccess	core -> anal		1107538	1					
ANR	1109144	Identifier	core		1107538	0					
ANR	1109145	Identifier	anal		1107538	1					
ANR	1109146	ExpressionStatement	core -> io -> cb_printf = r_cons_printf	2811:1:89124:89159	1107538	200	True				
ANR	1109147	AssignmentExpression	core -> io -> cb_printf = r_cons_printf		1107538	0		=			
ANR	1109148	PtrMemberAccess	core -> io -> cb_printf		1107538	0					
ANR	1109149	PtrMemberAccess	core -> io		1107538	0					
ANR	1109150	Identifier	core		1107538	0					
ANR	1109151	Identifier	io		1107538	1					
ANR	1109152	Identifier	cb_printf		1107538	1					
ANR	1109153	Identifier	r_cons_printf		1107538	1					
ANR	1109154	ExpressionStatement	core -> dbg -> cb_printf = r_cons_printf	2812:1:89162:89198	1107538	201	True				
ANR	1109155	AssignmentExpression	core -> dbg -> cb_printf = r_cons_printf		1107538	0		=			
ANR	1109156	PtrMemberAccess	core -> dbg -> cb_printf		1107538	0					
ANR	1109157	PtrMemberAccess	core -> dbg		1107538	0					
ANR	1109158	Identifier	core		1107538	0					
ANR	1109159	Identifier	dbg		1107538	1					
ANR	1109160	Identifier	cb_printf		1107538	1					
ANR	1109161	Identifier	r_cons_printf		1107538	1					
ANR	1109162	ExpressionStatement	core -> dbg -> bp -> cb_printf = r_cons_printf	2813:1:89201:89241	1107538	202	True				
ANR	1109163	AssignmentExpression	core -> dbg -> bp -> cb_printf = r_cons_printf		1107538	0		=			
ANR	1109164	PtrMemberAccess	core -> dbg -> bp -> cb_printf		1107538	0					
ANR	1109165	PtrMemberAccess	core -> dbg -> bp		1107538	0					
ANR	1109166	PtrMemberAccess	core -> dbg		1107538	0					
ANR	1109167	Identifier	core		1107538	0					
ANR	1109168	Identifier	dbg		1107538	1					
ANR	1109169	Identifier	bp		1107538	1					
ANR	1109170	Identifier	cb_printf		1107538	1					
ANR	1109171	Identifier	r_cons_printf		1107538	1					
ANR	1109172	ExpressionStatement	r_core_config_init ( core )	2815:1:89286:89311	1107538	203	True				
ANR	1109173	CallExpression	r_core_config_init ( core )		1107538	0					
ANR	1109174	Callee	r_core_config_init		1107538	0					
ANR	1109175	Identifier	r_core_config_init		1107538	0					
ANR	1109176	ArgumentList	core		1107538	1					
ANR	1109177	Argument	core		1107538	0					
ANR	1109178	Identifier	core		1107538	0					
ANR	1109179	ExpressionStatement	r_core_loadlibs_init ( core )	2817:1:89315:89342	1107538	204	True				
ANR	1109180	CallExpression	r_core_loadlibs_init ( core )		1107538	0					
ANR	1109181	Callee	r_core_loadlibs_init		1107538	0					
ANR	1109182	Identifier	r_core_loadlibs_init		1107538	0					
ANR	1109183	ArgumentList	core		1107538	1					
ANR	1109184	Argument	core		1107538	0					
ANR	1109185	Identifier	core		1107538	0					
ANR	1109186	ExpressionStatement	"r_asm_use ( core -> assembler , R_SYS_ARCH )"	2821:1:89423:89462	1107538	205	True				
ANR	1109187	CallExpression	"r_asm_use ( core -> assembler , R_SYS_ARCH )"		1107538	0					
ANR	1109188	Callee	r_asm_use		1107538	0					
ANR	1109189	Identifier	r_asm_use		1107538	0					
ANR	1109190	ArgumentList	core -> assembler		1107538	1					
ANR	1109191	Argument	core -> assembler		1107538	0					
ANR	1109192	PtrMemberAccess	core -> assembler		1107538	0					
ANR	1109193	Identifier	core		1107538	0					
ANR	1109194	Identifier	assembler		1107538	1					
ANR	1109195	Argument	R_SYS_ARCH		1107538	1					
ANR	1109196	Identifier	R_SYS_ARCH		1107538	0					
ANR	1109197	ExpressionStatement	"r_anal_use ( core -> anal , R_SYS_ARCH )"	2822:1:89465:89500	1107538	206	True				
ANR	1109198	CallExpression	"r_anal_use ( core -> anal , R_SYS_ARCH )"		1107538	0					
ANR	1109199	Callee	r_anal_use		1107538	0					
ANR	1109200	Identifier	r_anal_use		1107538	0					
ANR	1109201	ArgumentList	core -> anal		1107538	1					
ANR	1109202	Argument	core -> anal		1107538	0					
ANR	1109203	PtrMemberAccess	core -> anal		1107538	0					
ANR	1109204	Identifier	core		1107538	0					
ANR	1109205	Identifier	anal		1107538	1					
ANR	1109206	Argument	R_SYS_ARCH		1107538	1					
ANR	1109207	Identifier	R_SYS_ARCH		1107538	0					
ANR	1109208	IfStatement	if ( R_SYS_BITS & R_SYS_BITS_64 )		1107538	207					
ANR	1109209	Condition	R_SYS_BITS & R_SYS_BITS_64	2823:5:89507:89532	1107538	0	True				
ANR	1109210	BitAndExpression	R_SYS_BITS & R_SYS_BITS_64		1107538	0		&			
ANR	1109211	Identifier	R_SYS_BITS		1107538	0					
ANR	1109212	Identifier	R_SYS_BITS_64		1107538	1					
ANR	1109213	CompoundStatement		202:33:7395:7395	1107538	1					
ANR	1109214	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.bits"" , 64 )"	2824:2:89539:89584	1107538	0	True				
ANR	1109215	CallExpression	"r_config_set_i ( core -> config , ""asm.bits"" , 64 )"		1107538	0					
ANR	1109216	Callee	r_config_set_i		1107538	0					
ANR	1109217	Identifier	r_config_set_i		1107538	0					
ANR	1109218	ArgumentList	core -> config		1107538	1					
ANR	1109219	Argument	core -> config		1107538	0					
ANR	1109220	PtrMemberAccess	core -> config		1107538	0					
ANR	1109221	Identifier	core		1107538	0					
ANR	1109222	Identifier	config		1107538	1					
ANR	1109223	Argument	"""asm.bits"""		1107538	1					
ANR	1109224	PrimaryExpression	"""asm.bits"""		1107538	0					
ANR	1109225	Argument	64		1107538	2					
ANR	1109226	PrimaryExpression	64		1107538	0					
ANR	1109227	ElseStatement	else		1107538	0					
ANR	1109228	CompoundStatement		204:8:7454:7454	1107538	0					
ANR	1109229	IfStatement	if ( R_SYS_BITS & R_SYS_BITS_32 )		1107538	0					
ANR	1109230	Condition	R_SYS_BITS & R_SYS_BITS_32	2826:6:89602:89627	1107538	0	True				
ANR	1109231	BitAndExpression	R_SYS_BITS & R_SYS_BITS_32		1107538	0		&			
ANR	1109232	Identifier	R_SYS_BITS		1107538	0					
ANR	1109233	Identifier	R_SYS_BITS_32		1107538	1					
ANR	1109234	CompoundStatement		205:34:7490:7490	1107538	1					
ANR	1109235	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.bits"" , 32 )"	2827:3:89635:89680	1107538	0	True				
ANR	1109236	CallExpression	"r_config_set_i ( core -> config , ""asm.bits"" , 32 )"		1107538	0					
ANR	1109237	Callee	r_config_set_i		1107538	0					
ANR	1109238	Identifier	r_config_set_i		1107538	0					
ANR	1109239	ArgumentList	core -> config		1107538	1					
ANR	1109240	Argument	core -> config		1107538	0					
ANR	1109241	PtrMemberAccess	core -> config		1107538	0					
ANR	1109242	Identifier	core		1107538	0					
ANR	1109243	Identifier	config		1107538	1					
ANR	1109244	Argument	"""asm.bits"""		1107538	1					
ANR	1109245	PrimaryExpression	"""asm.bits"""		1107538	0					
ANR	1109246	Argument	32		1107538	2					
ANR	1109247	PrimaryExpression	32		1107538	0					
ANR	1109248	ExpressionStatement	"r_config_set ( core -> config , ""asm.arch"" , R_SYS_ARCH )"	2830:1:89690:89741	1107538	208	True				
ANR	1109249	CallExpression	"r_config_set ( core -> config , ""asm.arch"" , R_SYS_ARCH )"		1107538	0					
ANR	1109250	Callee	r_config_set		1107538	0					
ANR	1109251	Identifier	r_config_set		1107538	0					
ANR	1109252	ArgumentList	core -> config		1107538	1					
ANR	1109253	Argument	core -> config		1107538	0					
ANR	1109254	PtrMemberAccess	core -> config		1107538	0					
ANR	1109255	Identifier	core		1107538	0					
ANR	1109256	Identifier	config		1107538	1					
ANR	1109257	Argument	"""asm.arch"""		1107538	1					
ANR	1109258	PrimaryExpression	"""asm.arch"""		1107538	0					
ANR	1109259	Argument	R_SYS_ARCH		1107538	2					
ANR	1109260	Identifier	R_SYS_ARCH		1107538	0					
ANR	1109261	ExpressionStatement	"r_bp_use ( core -> dbg -> bp , R_SYS_ARCH , core -> anal -> bits )"	2831:1:89744:89798	1107538	209	True				
ANR	1109262	CallExpression	"r_bp_use ( core -> dbg -> bp , R_SYS_ARCH , core -> anal -> bits )"		1107538	0					
ANR	1109263	Callee	r_bp_use		1107538	0					
ANR	1109264	Identifier	r_bp_use		1107538	0					
ANR	1109265	ArgumentList	core -> dbg -> bp		1107538	1					
ANR	1109266	Argument	core -> dbg -> bp		1107538	0					
ANR	1109267	PtrMemberAccess	core -> dbg -> bp		1107538	0					
ANR	1109268	PtrMemberAccess	core -> dbg		1107538	0					
ANR	1109269	Identifier	core		1107538	0					
ANR	1109270	Identifier	dbg		1107538	1					
ANR	1109271	Identifier	bp		1107538	1					
ANR	1109272	Argument	R_SYS_ARCH		1107538	1					
ANR	1109273	Identifier	R_SYS_ARCH		1107538	0					
ANR	1109274	Argument	core -> anal -> bits		1107538	2					
ANR	1109275	PtrMemberAccess	core -> anal -> bits		1107538	0					
ANR	1109276	PtrMemberAccess	core -> anal		1107538	0					
ANR	1109277	Identifier	core		1107538	0					
ANR	1109278	Identifier	anal		1107538	1					
ANR	1109279	Identifier	bits		1107538	1					
ANR	1109280	ExpressionStatement	update_sdb ( core )	2832:1:89801:89818	1107538	210	True				
ANR	1109281	CallExpression	update_sdb ( core )		1107538	0					
ANR	1109282	Callee	update_sdb		1107538	0					
ANR	1109283	Identifier	update_sdb		1107538	0					
ANR	1109284	ArgumentList	core		1107538	1					
ANR	1109285	Argument	core		1107538	0					
ANR	1109286	Identifier	core		1107538	0					
ANR	1109287	CompoundStatement		213:2:7685:7721	1107538	211					
ANR	1109288	IdentifierDeclStatement	char * a = r_str_r2_prefix ( R2_FLAGS ) ;	2834:2:89825:89861	1107538	0	True				
ANR	1109289	IdentifierDecl	* a = r_str_r2_prefix ( R2_FLAGS )		1107538	0					
ANR	1109290	IdentifierDeclType	char *		1107538	0					
ANR	1109291	Identifier	a		1107538	1					
ANR	1109292	AssignmentExpression	* a = r_str_r2_prefix ( R2_FLAGS )		1107538	2		=			
ANR	1109293	Identifier	a		1107538	0					
ANR	1109294	CallExpression	r_str_r2_prefix ( R2_FLAGS )		1107538	1					
ANR	1109295	Callee	r_str_r2_prefix		1107538	0					
ANR	1109296	Identifier	r_str_r2_prefix		1107538	0					
ANR	1109297	ArgumentList	R2_FLAGS		1107538	1					
ANR	1109298	Argument	R2_FLAGS		1107538	0					
ANR	1109299	Identifier	R2_FLAGS		1107538	0					
ANR	1109300	IfStatement	if ( a )		1107538	1					
ANR	1109301	Condition	a	2835:6:89869:89869	1107538	0	True				
ANR	1109302	Identifier	a		1107538	0					
ANR	1109303	CompoundStatement		215:3:7737:7778	1107538	1					
ANR	1109304	IdentifierDeclStatement	"char * file = r_str_newf ( ""%s/tags.r2"" , a ) ;"	2836:3:89877:89918	1107538	0	True				
ANR	1109305	IdentifierDecl	"* file = r_str_newf ( ""%s/tags.r2"" , a )"		1107538	0					
ANR	1109306	IdentifierDeclType	char *		1107538	0					
ANR	1109307	Identifier	file		1107538	1					
ANR	1109308	AssignmentExpression	"* file = r_str_newf ( ""%s/tags.r2"" , a )"		1107538	2		=			
ANR	1109309	Identifier	file		1107538	0					
ANR	1109310	CallExpression	"r_str_newf ( ""%s/tags.r2"" , a )"		1107538	1					
ANR	1109311	Callee	r_str_newf		1107538	0					
ANR	1109312	Identifier	r_str_newf		1107538	0					
ANR	1109313	ArgumentList	"""%s/tags.r2"""		1107538	1					
ANR	1109314	Argument	"""%s/tags.r2"""		1107538	0					
ANR	1109315	PrimaryExpression	"""%s/tags.r2"""		1107538	0					
ANR	1109316	Argument	a		1107538	1					
ANR	1109317	Identifier	a		1107538	0					
ANR	1109318	ExpressionStatement	"( void ) r_core_run_script ( core , file )"	2837:3:89923:89959	1107538	1	True				
ANR	1109319	CastExpression	"( void ) r_core_run_script ( core , file )"		1107538	0					
ANR	1109320	CastTarget	void		1107538	0					
ANR	1109321	CallExpression	"r_core_run_script ( core , file )"		1107538	1					
ANR	1109322	Callee	r_core_run_script		1107538	0					
ANR	1109323	Identifier	r_core_run_script		1107538	0					
ANR	1109324	ArgumentList	core		1107538	1					
ANR	1109325	Argument	core		1107538	0					
ANR	1109326	Identifier	core		1107538	0					
ANR	1109327	Argument	file		1107538	1					
ANR	1109328	Identifier	file		1107538	0					
ANR	1109329	ExpressionStatement	free ( file )	2838:3:89964:89975	1107538	2	True				
ANR	1109330	CallExpression	free ( file )		1107538	0					
ANR	1109331	Callee	free		1107538	0					
ANR	1109332	Identifier	free		1107538	0					
ANR	1109333	ArgumentList	file		1107538	1					
ANR	1109334	Argument	file		1107538	0					
ANR	1109335	Identifier	file		1107538	0					
ANR	1109336	ExpressionStatement	free ( a )	2839:3:89980:89988	1107538	3	True				
ANR	1109337	CallExpression	free ( a )		1107538	0					
ANR	1109338	Callee	free		1107538	0					
ANR	1109339	Identifier	free		1107538	0					
ANR	1109340	ArgumentList	a		1107538	1					
ANR	1109341	Argument	a		1107538	0					
ANR	1109342	Identifier	a		1107538	0					
ANR	1109343	ExpressionStatement	r_core_anal_type_init ( core )	2842:1:89998:90026	1107538	212	True				
ANR	1109344	CallExpression	r_core_anal_type_init ( core )		1107538	0					
ANR	1109345	Callee	r_core_anal_type_init		1107538	0					
ANR	1109346	Identifier	r_core_anal_type_init		1107538	0					
ANR	1109347	ArgumentList	core		1107538	1					
ANR	1109348	Argument	core		1107538	0					
ANR	1109349	Identifier	core		1107538	0					
ANR	1109350	ExpressionStatement	__init_autocomplete ( core )	2843:1:90029:90055	1107538	213	True				
ANR	1109351	CallExpression	__init_autocomplete ( core )		1107538	0					
ANR	1109352	Callee	__init_autocomplete		1107538	0					
ANR	1109353	Identifier	__init_autocomplete		1107538	0					
ANR	1109354	ArgumentList	core		1107538	1					
ANR	1109355	Argument	core		1107538	0					
ANR	1109356	Identifier	core		1107538	0					
ANR	1109357	ReturnStatement	return 0 ;	2844:1:90058:90066	1107538	214	True				
ANR	1109358	PrimaryExpression	0		1107538	0					
ANR	1109359	ReturnType	R_API bool		1107538	1					
ANR	1109360	Identifier	r_core_init		1107538	2					
ANR	1109361	ParameterList	RCore * core		1107538	3					
ANR	1109362	Parameter	RCore * core	2622:23:82126:82136	1107538	0	True				
ANR	1109363	ParameterType	RCore *		1107538	0					
ANR	1109364	Identifier	core		1107538	1					
ANR	1109365	CFGEntryNode	ENTRY		1107538		True				
ANR	1109366	CFGExitNode	EXIT		1107538		True				
ANR	1109367	Symbol	R_EVENT_ALL		1107538						
ANR	1109368	Symbol	& core -> anal -> iob		1107538						
ANR	1109369	Symbol	& core -> print -> consbind		1107538						
ANR	1109370	Symbol	r_agraph_new		1107538						
ANR	1109371	Symbol	core -> incomment		1107538						
ANR	1109372	Symbol	R_SYS_ARCH		1107538						
ANR	1109373	Symbol	* core -> lang		1107538						
ANR	1109374	Symbol	r_core_task_new		1107538						
ANR	1109375	Symbol	colorfor_cb		1107538						
ANR	1109376	Symbol	r_cons_rainbow_get		1107538						
ANR	1109377	Symbol	core -> curasmstep		1107538						
ANR	1109378	Symbol	* core -> assembler		1107538						
ANR	1109379	Symbol	r_event_new		1107538						
ANR	1109380	Symbol	& num_callback		1107538						
ANR	1109381	Symbol	core -> bin		1107538						
ANR	1109382	Symbol	core -> blocksize		1107538						
ANR	1109383	Symbol	core -> block		1107538						
ANR	1109384	Symbol	r_list_newf		1107538						
ANR	1109385	Symbol	core -> anal -> flg_fcn_set		1107538						
ANR	1109386	Symbol	core -> anal -> flg_class_get		1107538						
ANR	1109387	Symbol	cb_event_handler		1107538						
ANR	1109388	Symbol	core -> print -> colorfor		1107538						
ANR	1109389	Symbol	core -> bin -> cb_printf		1107538						
ANR	1109390	Symbol	* * * core		1107538						
ANR	1109391	Symbol	core -> parser		1107538						
ANR	1109392	Symbol	* core -> cons -> line		1107538						
ANR	1109393	Symbol	& core -> fs -> iob		1107538						
ANR	1109394	Symbol	core -> lang -> cb_printf		1107538						
ANR	1109395	Symbol	core -> anal -> cb . on_fcn_delete		1107538						
ANR	1109396	Symbol	* core -> dbg		1107538						
ANR	1109397	Symbol	core_post_write_callback		1107538						
ANR	1109398	Symbol	R_SYS_BITS_32		1107538						
ANR	1109399	Symbol	core -> dbg -> bp -> cb_printf		1107538						
ANR	1109400	Symbol	& core -> parser -> analb		1107538						
ANR	1109401	Symbol	core -> printidx		1107538						
ANR	1109402	Symbol	* core		1107538						
ANR	1109403	Symbol	R_CORE_BLOCKSIZE		1107538						
ANR	1109404	Symbol	core -> lock		1107538						
ANR	1109405	Symbol	win_eprintf		1107538						
ANR	1109406	Symbol	core -> fixedbits		1107538						
ANR	1109407	Symbol	core -> cons -> line -> cb_editor		1107538						
ANR	1109408	Symbol	core -> task_id_next		1107538						
ANR	1109409	Symbol	core -> anal		1107538						
ANR	1109410	Symbol	& core -> print -> iob		1107538						
ANR	1109411	Symbol	core -> log		1107538						
ANR	1109412	Symbol	core -> cons		1107538						
ANR	1109413	Symbol	core -> tasks		1107538						
ANR	1109414	Symbol	core -> io		1107538						
ANR	1109415	Symbol	core -> print -> cons		1107538						
ANR	1109416	Symbol	free		1107538						
ANR	1109417	Symbol	core -> io -> cb_core_cmd		1107538						
ANR	1109418	Symbol	r_th_lock_new		1107538						
ANR	1109419	Symbol	r_io_new		1107538						
ANR	1109420	Symbol	a		1107538						
ANR	1109421	Symbol	& core -> anal -> coreb		1107538						
ANR	1109422	Symbol	core -> cmdrepeat		1107538						
ANR	1109423	Symbol	core_cmdstr_callback		1107538						
ANR	1109424	Symbol	core -> dbg -> anal		1107538						
ANR	1109425	Symbol	core -> cons -> user_fgets		1107538						
ANR	1109426	Symbol	core -> flags		1107538						
ANR	1109427	Symbol	r_core_anal_read_at		1107538						
ANR	1109428	Symbol	* core -> print		1107538						
ANR	1109429	Symbol	core -> print -> disasm		1107538						
ANR	1109430	Symbol	r_core_print_offname		1107538						
ANR	1109431	Symbol	on_fcn_rename		1107538						
ANR	1109432	Symbol	core -> io -> cb_core_post_write		1107538						
ANR	1109433	Symbol	core -> print -> num		1107538						
ANR	1109434	Symbol	hasrefs_cb		1107538						
ANR	1109435	Symbol	core -> files		1107538						
ANR	1109436	Symbol	r_core_cmpwatch_free		1107538						
ANR	1109437	Symbol	core -> tasks_lock		1107538						
ANR	1109438	Symbol	core -> io -> cb_printf		1107538						
ANR	1109439	Symbol	r_cons_new		1107538						
ANR	1109440	Symbol	core -> max_cmd_depth		1107538						
ANR	1109441	Symbol	core -> anal -> flag_get		1107538						
ANR	1109442	Symbol	core -> oneshot_queue		1107538						
ANR	1109443	Symbol	exists_var		1107538						
ANR	1109444	Symbol	core -> scriptstack		1107538						
ANR	1109445	Symbol	* core -> graph		1107538						
ANR	1109446	Symbol	core -> stkcmd		1107538						
ANR	1109447	Symbol	R_SYS_BITS_64		1107538						
ANR	1109448	Symbol	core -> lastsearch		1107538						
ANR	1109449	Symbol	core -> anal -> cb . on_fcn_new		1107538						
ANR	1109450	Symbol	get_comments_cb		1107538						
ANR	1109451	Symbol	* * core -> cons		1107538						
ANR	1109452	Symbol	R2_FLAGS		1107538						
ANR	1109453	Symbol	core -> flags -> cb_printf		1107538						
ANR	1109454	Symbol	core -> print -> cb_color		1107538						
ANR	1109455	Symbol	core -> ropchain		1107538						
ANR	1109456	Symbol	core -> parser -> flag_get		1107538						
ANR	1109457	Symbol	core -> cmdfilter		1107538						
ANR	1109458	Symbol	core -> print -> get_comments		1107538						
ANR	1109459	Symbol	r_core_flag_get_by_spaces		1107538						
ANR	1109460	Symbol	r_core_task_decref		1107538						
ANR	1109461	Symbol	calloc		1107538						
ANR	1109462	Symbol	get_section_name		1107538						
ANR	1109463	Symbol	core -> switch_file_view		1107538						
ANR	1109464	Symbol	core_flg_class_get		1107538						
ANR	1109465	Symbol	core -> anal -> log		1107538						
ANR	1109466	Symbol	core -> anal -> read_at		1107538						
ANR	1109467	Symbol	R_CONS_CMD_DEPTH		1107538						
ANR	1109468	Symbol	r_core_log_new		1107538						
ANR	1109469	Symbol	core -> search		1107538						
ANR	1109470	Symbol	r_egg_new		1107538						
ANR	1109471	Symbol	& core -> search -> iob		1107538						
ANR	1109472	Symbol	& r_core_editor		1107538						
ANR	1109473	Symbol	* core -> dbg -> bp		1107538						
ANR	1109474	Symbol	false		1107538						
ANR	1109475	Symbol	core -> print -> write		1107538						
ANR	1109476	Symbol	on_fcn_delete		1107538						
ANR	1109477	Symbol	core -> oobi_len		1107538						
ANR	1109478	Symbol	core -> times		1107538						
ANR	1109479	Symbol	mywrite		1107538						
ANR	1109480	Symbol	core -> print -> sdb_types		1107538						
ANR	1109481	Symbol	r_str_r2_prefix		1107538						
ANR	1109482	Symbol	core -> parser -> varlist		1107538						
ANR	1109483	Symbol	core -> dbg -> cb_printf		1107538						
ANR	1109484	Symbol	core -> vmode		1107538						
ANR	1109485	Symbol	* * core -> dbg		1107538						
ANR	1109486	Symbol	core -> assembler -> num		1107538						
ANR	1109487	Symbol	R_CORE_ASMQJMPS_NUM		1107538						
ANR	1109488	Symbol	r_anal_fcn_label_at		1107538						
ANR	1109489	Symbol	r_bin_new		1107538						
ANR	1109490	Symbol	core -> dbg -> bp		1107538						
ANR	1109491	Symbol	r_core_file_free		1107538						
ANR	1109492	Symbol	core -> rtr_n		1107538						
ANR	1109493	Symbol	core -> egg		1107538						
ANR	1109494	Symbol	core -> cons -> line -> user		1107538						
ANR	1109495	Symbol	core -> parser -> label_get		1107538						
ANR	1109496	Symbol	core -> tasks_running		1107538						
ANR	1109497	Symbol	core -> print -> offname		1107538						
ANR	1109498	Symbol	core -> fixedarch		1107538						
ANR	1109499	Symbol	r_lang_new		1107538						
ANR	1109500	Symbol	core -> anal -> cb_printf		1107538						
ANR	1109501	Symbol	core -> main_task		1107538						
ANR	1109502	Symbol	core -> tasks_queue		1107538						
ANR	1109503	Symbol	r_flag_new		1107538						
ANR	1109504	Symbol	sdb_new		1107538						
ANR	1109505	Symbol	core -> watchers -> free		1107538						
ANR	1109506	Symbol	R_NEW0		1107538						
ANR	1109507	Symbol	R2_HOME_HISTORY		1107538						
ANR	1109508	Symbol	core -> print -> user		1107538						
ANR	1109509	Symbol	r_cons_canvas_new		1107538						
ANR	1109510	Symbol	r_core_gadget_free		1107538						
ANR	1109511	Symbol	core -> print -> use_comments		1107538						
ANR	1109512	Symbol	& core -> print -> coreb		1107538						
ANR	1109513	Symbol	& core -> assembler -> binb		1107538						
ANR	1109514	Symbol	* core -> cons		1107538						
ANR	1109515	Symbol	core -> sdb		1107538						
ANR	1109516	Symbol	core -> oobi		1107538						
ANR	1109517	Symbol	core -> assembler		1107538						
ANR	1109518	Symbol	core -> cmdqueue		1107538						
ANR	1109519	Symbol	core -> lastcmd		1107538						
ANR	1109520	Symbol	r_num_new		1107538						
ANR	1109521	Symbol	core -> scriptstack -> free		1107538						
ANR	1109522	Symbol	core -> anal -> ev		1107538						
ANR	1109523	Symbol	core -> anal -> flg_class_set		1107538						
ANR	1109524	Symbol	file		1107538						
ANR	1109525	Symbol	R_SYS_BITS		1107538						
ANR	1109526	Symbol	r_parse_new		1107538						
ANR	1109527	Symbol	& core -> dbg -> iob		1107538						
ANR	1109528	Symbol	core -> anal -> bits		1107538						
ANR	1109529	Symbol	core -> print -> cb_printf		1107538						
ANR	1109530	Symbol	core -> graph		1107538						
ANR	1109531	Symbol	* core -> scriptstack		1107538						
ANR	1109532	Symbol	r_debug_new		1107538						
ANR	1109533	Symbol	core -> root_cmd_descriptor		1107538						
ANR	1109534	Symbol	core -> oneshots_enqueued		1107538						
ANR	1109535	Symbol	* core -> anal		1107538						
ANR	1109536	Symbol	RCoreTimes		1107538						
ANR	1109537	Symbol	& core -> anal -> binb		1107538						
ANR	1109538	Symbol	R_SYS_OS		1107538						
ANR	1109539	Symbol	core -> cons -> line		1107538						
ANR	1109540	Symbol	r_syscall_ref		1107538						
ANR	1109541	Symbol	core -> io -> ff		1107538						
ANR	1109542	Symbol	r_print_new		1107538						
ANR	1109543	Symbol	core -> io -> cb_core_cmdstr		1107538						
ANR	1109544	Symbol	core -> asmqjmps		1107538						
ANR	1109545	Symbol	core -> cons -> refcnt		1107538						
ANR	1109546	Symbol	core -> print -> cb_eprintf		1107538						
ANR	1109547	Symbol	R_CORE_BLOCKSIZE_MAX		1107538						
ANR	1109548	Symbol	core -> lang		1107538						
ANR	1109549	Symbol	core -> print -> exists_var		1107538						
ANR	1109550	Symbol	* core -> watchers		1107538						
ANR	1109551	Symbol	core -> print -> offsize		1107538						
ANR	1109552	Symbol	* core -> parser		1107538						
ANR	1109553	Symbol	core -> print -> hasrefs		1107538						
ANR	1109554	Symbol	r_buf_new		1107538						
ANR	1109555	Symbol	* core -> bin		1107538						
ANR	1109556	Symbol	core -> num		1107538						
ANR	1109557	Symbol	r_asm_new		1107538						
ANR	1109558	Symbol	core -> graph -> need_reload_nodes		1107538						
ANR	1109559	Symbol	core -> anal -> cb . on_fcn_rename		1107538						
ANR	1109560	Symbol	NULL		1107538						
ANR	1109561	Symbol	core -> blocksize_max		1107538						
ANR	1109562	Symbol	ut64		1107538						
ANR	1109563	Symbol	__disasm		1107538						
ANR	1109564	Symbol	& core -> bin -> consb		1107538						
ANR	1109565	Symbol	core		1107538						
ANR	1109566	Symbol	core -> oneshot_running		1107538						
ANR	1109567	Symbol	core -> yank_buf		1107538						
ANR	1109568	Symbol	true		1107538						
ANR	1109569	Symbol	core -> fs		1107538						
ANR	1109570	Symbol	core -> print		1107538						
ANR	1109571	Symbol	R_SEARCH_KEYWORD		1107538						
ANR	1109572	Symbol	& core -> dbg -> corebind		1107538						
ANR	1109573	Symbol	& core -> fs -> cob		1107538						
ANR	1109574	Symbol	core -> print -> get_section_name		1107538						
ANR	1109575	Symbol	core -> assembler -> syscall		1107538						
ANR	1109576	Symbol	core -> anal -> sdb_types		1107538						
ANR	1109577	Symbol	core -> io -> user		1107538						
ANR	1109578	Symbol	r_str_newf		1107538						
ANR	1109579	Symbol	& core -> bin -> iob		1107538						
ANR	1109580	Symbol	* core -> flags		1107538						
ANR	1109581	Symbol	r_search_new		1107538						
ANR	1109582	Symbol	core -> cmdremote		1107538						
ANR	1109583	Symbol	core -> http_up		1107538						
ANR	1109584	Symbol	r_cons_singleton		1107538						
ANR	1109585	Symbol	r_anal_new		1107538						
ANR	1109586	Symbol	core_flg_class_set		1107538						
ANR	1109587	Symbol	& str_callback		1107538						
ANR	1109588	Symbol	core -> gadgets		1107538						
ANR	1109589	Symbol	* * core		1107538						
ANR	1109590	Symbol	r_fs_new		1107538						
ANR	1109591	Symbol	core -> ev		1107538						
ANR	1109592	Symbol	core -> config		1107538						
ANR	1109593	Symbol	r_core_anal_log		1107538						
ANR	1109594	Symbol	& core -> dbg -> bp -> iob		1107538						
ANR	1109595	Symbol	core -> anal -> cb		1107538						
ANR	1109596	Symbol	core_cmd_callback		1107538						
ANR	1109597	Symbol	& core -> anal -> flb		1107538						
ANR	1109598	Symbol	core -> file		1107538						
ANR	1109599	Symbol	core -> undos		1107538						
ANR	1109600	Symbol	on_fcn_new		1107538						
ANR	1109601	Symbol	r_core_print_offsize		1107538						
ANR	1109602	Symbol	core -> anal -> syscall		1107538						
ANR	1109603	Symbol	R_NEWS		1107538						
ANR	1109604	Symbol	r_core_undo_free		1107538						
ANR	1109605	Symbol	core -> asmqjmps_size		1107538						
ANR	1109606	Symbol	* core -> io		1107538						
ANR	1109607	Symbol	core_flg_fcn_set		1107538						
ANR	1109608	Symbol	r_anal_var_list		1107538						
ANR	1109609	Symbol	r_cons_printf		1107538						
ANR	1109610	Symbol	core -> watchers		1107538						
ANR	1109611	Symbol	core -> current_task		1107538						
ANR	1109612	Symbol	r_list_new		1107538						
ANR	1109613	Symbol	core -> dbg		1107538						
ANR	1109614	Function	r_core_bind_cons	2847:0:90071:90524							
ANR	1109615	FunctionDef	r_core_bind_cons (RCore * core)		1109614	0					
ANR	1109616	CompoundStatement		2847:41:90112:90524	1109614	0					
ANR	1109617	ExpressionStatement	core -> cons -> num = core -> num	2848:1:90115:90142	1109614	0	True				
ANR	1109618	AssignmentExpression	core -> cons -> num = core -> num		1109614	0		=			
ANR	1109619	PtrMemberAccess	core -> cons -> num		1109614	0					
ANR	1109620	PtrMemberAccess	core -> cons		1109614	0					
ANR	1109621	Identifier	core		1109614	0					
ANR	1109622	Identifier	cons		1109614	1					
ANR	1109623	Identifier	num		1109614	1					
ANR	1109624	PtrMemberAccess	core -> num		1109614	1					
ANR	1109625	Identifier	core		1109614	0					
ANR	1109626	Identifier	num		1109614	1					
ANR	1109627	ExpressionStatement	core -> cons -> cb_editor = ( RConsEditorCallback ) r_core_editor	2849:1:90145:90203	1109614	1	True				
ANR	1109628	AssignmentExpression	core -> cons -> cb_editor = ( RConsEditorCallback ) r_core_editor		1109614	0		=			
ANR	1109629	PtrMemberAccess	core -> cons -> cb_editor		1109614	0					
ANR	1109630	PtrMemberAccess	core -> cons		1109614	0					
ANR	1109631	Identifier	core		1109614	0					
ANR	1109632	Identifier	cons		1109614	1					
ANR	1109633	Identifier	cb_editor		1109614	1					
ANR	1109634	CastExpression	( RConsEditorCallback ) r_core_editor		1109614	1					
ANR	1109635	CastTarget	RConsEditorCallback		1109614	0					
ANR	1109636	Identifier	r_core_editor		1109614	1					
ANR	1109637	ExpressionStatement	core -> cons -> cb_break = ( RConsBreakCallback ) r_core_break	2850:1:90206:90261	1109614	2	True				
ANR	1109638	AssignmentExpression	core -> cons -> cb_break = ( RConsBreakCallback ) r_core_break		1109614	0		=			
ANR	1109639	PtrMemberAccess	core -> cons -> cb_break		1109614	0					
ANR	1109640	PtrMemberAccess	core -> cons		1109614	0					
ANR	1109641	Identifier	core		1109614	0					
ANR	1109642	Identifier	cons		1109614	1					
ANR	1109643	Identifier	cb_break		1109614	1					
ANR	1109644	CastExpression	( RConsBreakCallback ) r_core_break		1109614	1					
ANR	1109645	CastTarget	RConsBreakCallback		1109614	0					
ANR	1109646	Identifier	r_core_break		1109614	1					
ANR	1109647	ExpressionStatement	core -> cons -> cb_sleep_begin = ( RConsSleepBeginCallback ) r_core_sleep_begin	2851:1:90264:90336	1109614	3	True				
ANR	1109648	AssignmentExpression	core -> cons -> cb_sleep_begin = ( RConsSleepBeginCallback ) r_core_sleep_begin		1109614	0		=			
ANR	1109649	PtrMemberAccess	core -> cons -> cb_sleep_begin		1109614	0					
ANR	1109650	PtrMemberAccess	core -> cons		1109614	0					
ANR	1109651	Identifier	core		1109614	0					
ANR	1109652	Identifier	cons		1109614	1					
ANR	1109653	Identifier	cb_sleep_begin		1109614	1					
ANR	1109654	CastExpression	( RConsSleepBeginCallback ) r_core_sleep_begin		1109614	1					
ANR	1109655	CastTarget	RConsSleepBeginCallback		1109614	0					
ANR	1109656	Identifier	r_core_sleep_begin		1109614	1					
ANR	1109657	ExpressionStatement	core -> cons -> cb_sleep_end = ( RConsSleepEndCallback ) r_core_sleep_end	2852:1:90339:90405	1109614	4	True				
ANR	1109658	AssignmentExpression	core -> cons -> cb_sleep_end = ( RConsSleepEndCallback ) r_core_sleep_end		1109614	0		=			
ANR	1109659	PtrMemberAccess	core -> cons -> cb_sleep_end		1109614	0					
ANR	1109660	PtrMemberAccess	core -> cons		1109614	0					
ANR	1109661	Identifier	core		1109614	0					
ANR	1109662	Identifier	cons		1109614	1					
ANR	1109663	Identifier	cb_sleep_end		1109614	1					
ANR	1109664	CastExpression	( RConsSleepEndCallback ) r_core_sleep_end		1109614	1					
ANR	1109665	CastTarget	RConsSleepEndCallback		1109614	0					
ANR	1109666	Identifier	r_core_sleep_end		1109614	1					
ANR	1109667	ExpressionStatement	core -> cons -> cb_task_oneshot = ( RConsQueueTaskOneshot ) r_core_task_enqueue_oneshot	2853:1:90408:90489	1109614	5	True				
ANR	1109668	AssignmentExpression	core -> cons -> cb_task_oneshot = ( RConsQueueTaskOneshot ) r_core_task_enqueue_oneshot		1109614	0		=			
ANR	1109669	PtrMemberAccess	core -> cons -> cb_task_oneshot		1109614	0					
ANR	1109670	PtrMemberAccess	core -> cons		1109614	0					
ANR	1109671	Identifier	core		1109614	0					
ANR	1109672	Identifier	cons		1109614	1					
ANR	1109673	Identifier	cb_task_oneshot		1109614	1					
ANR	1109674	CastExpression	( RConsQueueTaskOneshot ) r_core_task_enqueue_oneshot		1109614	1					
ANR	1109675	CastTarget	RConsQueueTaskOneshot		1109614	0					
ANR	1109676	Identifier	r_core_task_enqueue_oneshot		1109614	1					
ANR	1109677	ExpressionStatement	core -> cons -> user = ( void * ) core	2854:1:90492:90522	1109614	6	True				
ANR	1109678	AssignmentExpression	core -> cons -> user = ( void * ) core		1109614	0		=			
ANR	1109679	PtrMemberAccess	core -> cons -> user		1109614	0					
ANR	1109680	PtrMemberAccess	core -> cons		1109614	0					
ANR	1109681	Identifier	core		1109614	0					
ANR	1109682	Identifier	cons		1109614	1					
ANR	1109683	Identifier	user		1109614	1					
ANR	1109684	CastExpression	( void * ) core		1109614	1					
ANR	1109685	CastTarget	void *		1109614	0					
ANR	1109686	Identifier	core		1109614	1					
ANR	1109687	ReturnType	R_API void		1109614	1					
ANR	1109688	Identifier	r_core_bind_cons		1109614	2					
ANR	1109689	ParameterList	RCore * core		1109614	3					
ANR	1109690	Parameter	RCore * core	2847:28:90099:90109	1109614	0	True				
ANR	1109691	ParameterType	RCore *		1109614	0					
ANR	1109692	Identifier	core		1109614	1					
ANR	1109693	CFGEntryNode	ENTRY		1109614		True				
ANR	1109694	CFGExitNode	EXIT		1109614		True				
ANR	1109695	Symbol	* core -> cons		1109614						
ANR	1109696	Symbol	* core		1109614						
ANR	1109697	Symbol	r_core_sleep_begin		1109614						
ANR	1109698	Symbol	core -> cons -> num		1109614						
ANR	1109699	Symbol	core -> cons -> cb_break		1109614						
ANR	1109700	Symbol	core -> cons -> cb_sleep_begin		1109614						
ANR	1109701	Symbol	core -> cons -> cb_editor		1109614						
ANR	1109702	Symbol	r_core_sleep_end		1109614						
ANR	1109703	Symbol	core		1109614						
ANR	1109704	Symbol	r_core_break		1109614						
ANR	1109705	Symbol	r_core_task_enqueue_oneshot		1109614						
ANR	1109706	Symbol	core -> cons		1109614						
ANR	1109707	Symbol	core -> cons -> cb_task_oneshot		1109614						
ANR	1109708	Symbol	core -> cons -> cb_sleep_end		1109614						
ANR	1109709	Symbol	r_core_editor		1109614						
ANR	1109710	Symbol	core -> cons -> user		1109614						
ANR	1109711	Symbol	core -> num		1109614						
ANR	1109712	Symbol	* * core		1109614						
ANR	1109713	Function	r_core_fini	2857:0:90527:92360							
ANR	1109714	FunctionDef	r_core_fini (RCore * c)		1109713	0					
ANR	1109715	CompoundStatement		2857:35:90562:92360	1109713	0					
ANR	1109716	IfStatement	if ( ! c )		1109713	0					
ANR	1109717	Condition	! c	2858:5:90569:90570	1109713	0	True				
ANR	1109718	UnaryOperationExpression	! c		1109713	0					
ANR	1109719	UnaryOperator	!		1109713	0					
ANR	1109720	Identifier	c		1109713	1					
ANR	1109721	CompoundStatement		2:9:10:10	1109713	1					
ANR	1109722	ReturnStatement	return NULL ;	2859:2:90577:90588	1109713	0	True				
ANR	1109723	Identifier	NULL		1109713	0					
ANR	1109724	ExpressionStatement	r_core_task_break_all ( c )	2861:1:90594:90619	1109713	1	True				
ANR	1109725	CallExpression	r_core_task_break_all ( c )		1109713	0					
ANR	1109726	Callee	r_core_task_break_all		1109713	0					
ANR	1109727	Identifier	r_core_task_break_all		1109713	0					
ANR	1109728	ArgumentList	c		1109713	1					
ANR	1109729	Argument	c		1109713	0					
ANR	1109730	Identifier	c		1109713	0					
ANR	1109731	ExpressionStatement	"r_core_task_join ( c , NULL , - 1 )"	2862:1:90622:90652	1109713	2	True				
ANR	1109732	CallExpression	"r_core_task_join ( c , NULL , - 1 )"		1109713	0					
ANR	1109733	Callee	r_core_task_join		1109713	0					
ANR	1109734	Identifier	r_core_task_join		1109713	0					
ANR	1109735	ArgumentList	c		1109713	1					
ANR	1109736	Argument	c		1109713	0					
ANR	1109737	Identifier	c		1109713	0					
ANR	1109738	Argument	NULL		1109713	1					
ANR	1109739	Identifier	NULL		1109713	0					
ANR	1109740	Argument	- 1		1109713	2					
ANR	1109741	UnaryOperationExpression	- 1		1109713	0					
ANR	1109742	UnaryOperator	-		1109713	0					
ANR	1109743	PrimaryExpression	1		1109713	1					
ANR	1109744	ExpressionStatement	r_core_wait ( c )	2863:1:90655:90670	1109713	3	True				
ANR	1109745	CallExpression	r_core_wait ( c )		1109713	0					
ANR	1109746	Callee	r_core_wait		1109713	0					
ANR	1109747	Identifier	r_core_wait		1109713	0					
ANR	1109748	ArgumentList	c		1109713	1					
ANR	1109749	Argument	c		1109713	0					
ANR	1109750	Identifier	c		1109713	0					
ANR	1109751	ExpressionStatement	r_list_free ( c -> ropchain )	2867:1:90744:90769	1109713	4	True				
ANR	1109752	CallExpression	r_list_free ( c -> ropchain )		1109713	0					
ANR	1109753	Callee	r_list_free		1109713	0					
ANR	1109754	Identifier	r_list_free		1109713	0					
ANR	1109755	ArgumentList	c -> ropchain		1109713	1					
ANR	1109756	Argument	c -> ropchain		1109713	0					
ANR	1109757	PtrMemberAccess	c -> ropchain		1109713	0					
ANR	1109758	Identifier	c		1109713	0					
ANR	1109759	Identifier	ropchain		1109713	1					
ANR	1109760	ExpressionStatement	r_event_free ( c -> ev )	2868:1:90772:90792	1109713	5	True				
ANR	1109761	CallExpression	r_event_free ( c -> ev )		1109713	0					
ANR	1109762	Callee	r_event_free		1109713	0					
ANR	1109763	Identifier	r_event_free		1109713	0					
ANR	1109764	ArgumentList	c -> ev		1109713	1					
ANR	1109765	Argument	c -> ev		1109713	0					
ANR	1109766	PtrMemberAccess	c -> ev		1109713	0					
ANR	1109767	Identifier	c		1109713	0					
ANR	1109768	Identifier	ev		1109713	1					
ANR	1109769	ExpressionStatement	R_FREE ( c -> cmdlog )	2869:1:90795:90813	1109713	6	True				
ANR	1109770	CallExpression	R_FREE ( c -> cmdlog )		1109713	0					
ANR	1109771	Callee	R_FREE		1109713	0					
ANR	1109772	Identifier	R_FREE		1109713	0					
ANR	1109773	ArgumentList	c -> cmdlog		1109713	1					
ANR	1109774	Argument	c -> cmdlog		1109713	0					
ANR	1109775	PtrMemberAccess	c -> cmdlog		1109713	0					
ANR	1109776	Identifier	c		1109713	0					
ANR	1109777	Identifier	cmdlog		1109713	1					
ANR	1109778	ExpressionStatement	r_th_lock_free ( c -> lock )	2870:1:90816:90840	1109713	7	True				
ANR	1109779	CallExpression	r_th_lock_free ( c -> lock )		1109713	0					
ANR	1109780	Callee	r_th_lock_free		1109713	0					
ANR	1109781	Identifier	r_th_lock_free		1109713	0					
ANR	1109782	ArgumentList	c -> lock		1109713	1					
ANR	1109783	Argument	c -> lock		1109713	0					
ANR	1109784	PtrMemberAccess	c -> lock		1109713	0					
ANR	1109785	Identifier	c		1109713	0					
ANR	1109786	Identifier	lock		1109713	1					
ANR	1109787	ExpressionStatement	R_FREE ( c -> lastsearch )	2871:1:90843:90865	1109713	8	True				
ANR	1109788	CallExpression	R_FREE ( c -> lastsearch )		1109713	0					
ANR	1109789	Callee	R_FREE		1109713	0					
ANR	1109790	Identifier	R_FREE		1109713	0					
ANR	1109791	ArgumentList	c -> lastsearch		1109713	1					
ANR	1109792	Argument	c -> lastsearch		1109713	0					
ANR	1109793	PtrMemberAccess	c -> lastsearch		1109713	0					
ANR	1109794	Identifier	c		1109713	0					
ANR	1109795	Identifier	lastsearch		1109713	1					
ANR	1109796	ExpressionStatement	R_FREE ( c -> cons -> pager )	2872:1:90868:90891	1109713	9	True				
ANR	1109797	CallExpression	R_FREE ( c -> cons -> pager )		1109713	0					
ANR	1109798	Callee	R_FREE		1109713	0					
ANR	1109799	Identifier	R_FREE		1109713	0					
ANR	1109800	ArgumentList	c -> cons -> pager		1109713	1					
ANR	1109801	Argument	c -> cons -> pager		1109713	0					
ANR	1109802	PtrMemberAccess	c -> cons -> pager		1109713	0					
ANR	1109803	PtrMemberAccess	c -> cons		1109713	0					
ANR	1109804	Identifier	c		1109713	0					
ANR	1109805	Identifier	cons		1109713	1					
ANR	1109806	Identifier	pager		1109713	1					
ANR	1109807	ExpressionStatement	R_FREE ( c -> cmdqueue )	2873:1:90894:90914	1109713	10	True				
ANR	1109808	CallExpression	R_FREE ( c -> cmdqueue )		1109713	0					
ANR	1109809	Callee	R_FREE		1109713	0					
ANR	1109810	Identifier	R_FREE		1109713	0					
ANR	1109811	ArgumentList	c -> cmdqueue		1109713	1					
ANR	1109812	Argument	c -> cmdqueue		1109713	0					
ANR	1109813	PtrMemberAccess	c -> cmdqueue		1109713	0					
ANR	1109814	Identifier	c		1109713	0					
ANR	1109815	Identifier	cmdqueue		1109713	1					
ANR	1109816	ExpressionStatement	R_FREE ( c -> lastcmd )	2874:1:90917:90936	1109713	11	True				
ANR	1109817	CallExpression	R_FREE ( c -> lastcmd )		1109713	0					
ANR	1109818	Callee	R_FREE		1109713	0					
ANR	1109819	Identifier	R_FREE		1109713	0					
ANR	1109820	ArgumentList	c -> lastcmd		1109713	1					
ANR	1109821	Argument	c -> lastcmd		1109713	0					
ANR	1109822	PtrMemberAccess	c -> lastcmd		1109713	0					
ANR	1109823	Identifier	c		1109713	0					
ANR	1109824	Identifier	lastcmd		1109713	1					
ANR	1109825	ExpressionStatement	R_FREE ( c -> stkcmd )	2875:1:90939:90957	1109713	12	True				
ANR	1109826	CallExpression	R_FREE ( c -> stkcmd )		1109713	0					
ANR	1109827	Callee	R_FREE		1109713	0					
ANR	1109828	Identifier	R_FREE		1109713	0					
ANR	1109829	ArgumentList	c -> stkcmd		1109713	1					
ANR	1109830	Argument	c -> stkcmd		1109713	0					
ANR	1109831	PtrMemberAccess	c -> stkcmd		1109713	0					
ANR	1109832	Identifier	c		1109713	0					
ANR	1109833	Identifier	stkcmd		1109713	1					
ANR	1109834	ExpressionStatement	r_list_free ( c -> visual . tabs )	2876:1:90960:90988	1109713	13	True				
ANR	1109835	CallExpression	r_list_free ( c -> visual . tabs )		1109713	0					
ANR	1109836	Callee	r_list_free		1109713	0					
ANR	1109837	Identifier	r_list_free		1109713	0					
ANR	1109838	ArgumentList	c -> visual . tabs		1109713	1					
ANR	1109839	Argument	c -> visual . tabs		1109713	0					
ANR	1109840	MemberAccess	c -> visual . tabs		1109713	0					
ANR	1109841	PtrMemberAccess	c -> visual		1109713	0					
ANR	1109842	Identifier	c		1109713	0					
ANR	1109843	Identifier	visual		1109713	1					
ANR	1109844	Identifier	tabs		1109713	1					
ANR	1109845	ExpressionStatement	R_FREE ( c -> block )	2877:1:90991:91008	1109713	14	True				
ANR	1109846	CallExpression	R_FREE ( c -> block )		1109713	0					
ANR	1109847	Callee	R_FREE		1109713	0					
ANR	1109848	Identifier	R_FREE		1109713	0					
ANR	1109849	ArgumentList	c -> block		1109713	1					
ANR	1109850	Argument	c -> block		1109713	0					
ANR	1109851	PtrMemberAccess	c -> block		1109713	0					
ANR	1109852	Identifier	c		1109713	0					
ANR	1109853	Identifier	block		1109713	1					
ANR	1109854	ExpressionStatement	r_core_autocomplete_free ( c -> autocomplete )	2878:1:91011:91053	1109713	15	True				
ANR	1109855	CallExpression	r_core_autocomplete_free ( c -> autocomplete )		1109713	0					
ANR	1109856	Callee	r_core_autocomplete_free		1109713	0					
ANR	1109857	Identifier	r_core_autocomplete_free		1109713	0					
ANR	1109858	ArgumentList	c -> autocomplete		1109713	1					
ANR	1109859	Argument	c -> autocomplete		1109713	0					
ANR	1109860	PtrMemberAccess	c -> autocomplete		1109713	0					
ANR	1109861	Identifier	c		1109713	0					
ANR	1109862	Identifier	autocomplete		1109713	1					
ANR	1109863	ExpressionStatement	r_list_free ( c -> gadgets )	2880:1:91057:91081	1109713	16	True				
ANR	1109864	CallExpression	r_list_free ( c -> gadgets )		1109713	0					
ANR	1109865	Callee	r_list_free		1109713	0					
ANR	1109866	Identifier	r_list_free		1109713	0					
ANR	1109867	ArgumentList	c -> gadgets		1109713	1					
ANR	1109868	Argument	c -> gadgets		1109713	0					
ANR	1109869	PtrMemberAccess	c -> gadgets		1109713	0					
ANR	1109870	Identifier	c		1109713	0					
ANR	1109871	Identifier	gadgets		1109713	1					
ANR	1109872	ExpressionStatement	r_list_free ( c -> undos )	2881:1:91084:91106	1109713	17	True				
ANR	1109873	CallExpression	r_list_free ( c -> undos )		1109713	0					
ANR	1109874	Callee	r_list_free		1109713	0					
ANR	1109875	Identifier	r_list_free		1109713	0					
ANR	1109876	ArgumentList	c -> undos		1109713	1					
ANR	1109877	Argument	c -> undos		1109713	0					
ANR	1109878	PtrMemberAccess	c -> undos		1109713	0					
ANR	1109879	Identifier	c		1109713	0					
ANR	1109880	Identifier	undos		1109713	1					
ANR	1109881	ExpressionStatement	r_num_free ( c -> num )	2882:1:91109:91128	1109713	18	True				
ANR	1109882	CallExpression	r_num_free ( c -> num )		1109713	0					
ANR	1109883	Callee	r_num_free		1109713	0					
ANR	1109884	Identifier	r_num_free		1109713	0					
ANR	1109885	ArgumentList	c -> num		1109713	1					
ANR	1109886	Argument	c -> num		1109713	0					
ANR	1109887	PtrMemberAccess	c -> num		1109713	0					
ANR	1109888	Identifier	c		1109713	0					
ANR	1109889	Identifier	num		1109713	1					
ANR	1109890	ExpressionStatement	r_list_free ( c -> files )	2887:1:91247:91269	1109713	19	True				
ANR	1109891	CallExpression	r_list_free ( c -> files )		1109713	0					
ANR	1109892	Callee	r_list_free		1109713	0					
ANR	1109893	Identifier	r_list_free		1109713	0					
ANR	1109894	ArgumentList	c -> files		1109713	1					
ANR	1109895	Argument	c -> files		1109713	0					
ANR	1109896	PtrMemberAccess	c -> files		1109713	0					
ANR	1109897	Identifier	c		1109713	0					
ANR	1109898	Identifier	files		1109713	1					
ANR	1109899	ExpressionStatement	r_list_free ( c -> watchers )	2888:1:91272:91297	1109713	20	True				
ANR	1109900	CallExpression	r_list_free ( c -> watchers )		1109713	0					
ANR	1109901	Callee	r_list_free		1109713	0					
ANR	1109902	Identifier	r_list_free		1109713	0					
ANR	1109903	ArgumentList	c -> watchers		1109713	1					
ANR	1109904	Argument	c -> watchers		1109713	0					
ANR	1109905	PtrMemberAccess	c -> watchers		1109713	0					
ANR	1109906	Identifier	c		1109713	0					
ANR	1109907	Identifier	watchers		1109713	1					
ANR	1109908	ExpressionStatement	r_list_free ( c -> scriptstack )	2889:1:91300:91328	1109713	21	True				
ANR	1109909	CallExpression	r_list_free ( c -> scriptstack )		1109713	0					
ANR	1109910	Callee	r_list_free		1109713	0					
ANR	1109911	Identifier	r_list_free		1109713	0					
ANR	1109912	ArgumentList	c -> scriptstack		1109713	1					
ANR	1109913	Argument	c -> scriptstack		1109713	0					
ANR	1109914	PtrMemberAccess	c -> scriptstack		1109713	0					
ANR	1109915	Identifier	c		1109713	0					
ANR	1109916	Identifier	scriptstack		1109713	1					
ANR	1109917	ExpressionStatement	r_list_free ( c -> tasks )	2890:1:91331:91353	1109713	22	True				
ANR	1109918	CallExpression	r_list_free ( c -> tasks )		1109713	0					
ANR	1109919	Callee	r_list_free		1109713	0					
ANR	1109920	Identifier	r_list_free		1109713	0					
ANR	1109921	ArgumentList	c -> tasks		1109713	1					
ANR	1109922	Argument	c -> tasks		1109713	0					
ANR	1109923	PtrMemberAccess	c -> tasks		1109713	0					
ANR	1109924	Identifier	c		1109713	0					
ANR	1109925	Identifier	tasks		1109713	1					
ANR	1109926	ExpressionStatement	r_list_free ( c -> tasks_queue )	2891:1:91356:91384	1109713	23	True				
ANR	1109927	CallExpression	r_list_free ( c -> tasks_queue )		1109713	0					
ANR	1109928	Callee	r_list_free		1109713	0					
ANR	1109929	Identifier	r_list_free		1109713	0					
ANR	1109930	ArgumentList	c -> tasks_queue		1109713	1					
ANR	1109931	Argument	c -> tasks_queue		1109713	0					
ANR	1109932	PtrMemberAccess	c -> tasks_queue		1109713	0					
ANR	1109933	Identifier	c		1109713	0					
ANR	1109934	Identifier	tasks_queue		1109713	1					
ANR	1109935	ExpressionStatement	r_list_free ( c -> oneshot_queue )	2892:1:91387:91417	1109713	24	True				
ANR	1109936	CallExpression	r_list_free ( c -> oneshot_queue )		1109713	0					
ANR	1109937	Callee	r_list_free		1109713	0					
ANR	1109938	Identifier	r_list_free		1109713	0					
ANR	1109939	ArgumentList	c -> oneshot_queue		1109713	1					
ANR	1109940	Argument	c -> oneshot_queue		1109713	0					
ANR	1109941	PtrMemberAccess	c -> oneshot_queue		1109713	0					
ANR	1109942	Identifier	c		1109713	0					
ANR	1109943	Identifier	oneshot_queue		1109713	1					
ANR	1109944	ExpressionStatement	r_th_lock_free ( c -> tasks_lock )	2893:1:91420:91450	1109713	25	True				
ANR	1109945	CallExpression	r_th_lock_free ( c -> tasks_lock )		1109713	0					
ANR	1109946	Callee	r_th_lock_free		1109713	0					
ANR	1109947	Identifier	r_th_lock_free		1109713	0					
ANR	1109948	ArgumentList	c -> tasks_lock		1109713	1					
ANR	1109949	Argument	c -> tasks_lock		1109713	0					
ANR	1109950	PtrMemberAccess	c -> tasks_lock		1109713	0					
ANR	1109951	Identifier	c		1109713	0					
ANR	1109952	Identifier	tasks_lock		1109713	1					
ANR	1109953	ExpressionStatement	c -> rcmd = r_cmd_free ( c -> rcmd )	2894:1:91453:91483	1109713	26	True				
ANR	1109954	AssignmentExpression	c -> rcmd = r_cmd_free ( c -> rcmd )		1109713	0		=			
ANR	1109955	PtrMemberAccess	c -> rcmd		1109713	0					
ANR	1109956	Identifier	c		1109713	0					
ANR	1109957	Identifier	rcmd		1109713	1					
ANR	1109958	CallExpression	r_cmd_free ( c -> rcmd )		1109713	1					
ANR	1109959	Callee	r_cmd_free		1109713	0					
ANR	1109960	Identifier	r_cmd_free		1109713	0					
ANR	1109961	ArgumentList	c -> rcmd		1109713	1					
ANR	1109962	Argument	c -> rcmd		1109713	0					
ANR	1109963	PtrMemberAccess	c -> rcmd		1109713	0					
ANR	1109964	Identifier	c		1109713	0					
ANR	1109965	Identifier	rcmd		1109713	1					
ANR	1109966	ExpressionStatement	r_list_free ( c -> cmd_descriptors )	2895:1:91486:91518	1109713	27	True				
ANR	1109967	CallExpression	r_list_free ( c -> cmd_descriptors )		1109713	0					
ANR	1109968	Callee	r_list_free		1109713	0					
ANR	1109969	Identifier	r_list_free		1109713	0					
ANR	1109970	ArgumentList	c -> cmd_descriptors		1109713	1					
ANR	1109971	Argument	c -> cmd_descriptors		1109713	0					
ANR	1109972	PtrMemberAccess	c -> cmd_descriptors		1109713	0					
ANR	1109973	Identifier	c		1109713	0					
ANR	1109974	Identifier	cmd_descriptors		1109713	1					
ANR	1109975	ExpressionStatement	c -> anal = r_anal_free ( c -> anal )	2896:1:91521:91552	1109713	28	True				
ANR	1109976	AssignmentExpression	c -> anal = r_anal_free ( c -> anal )		1109713	0		=			
ANR	1109977	PtrMemberAccess	c -> anal		1109713	0					
ANR	1109978	Identifier	c		1109713	0					
ANR	1109979	Identifier	anal		1109713	1					
ANR	1109980	CallExpression	r_anal_free ( c -> anal )		1109713	1					
ANR	1109981	Callee	r_anal_free		1109713	0					
ANR	1109982	Identifier	r_anal_free		1109713	0					
ANR	1109983	ArgumentList	c -> anal		1109713	1					
ANR	1109984	Argument	c -> anal		1109713	0					
ANR	1109985	PtrMemberAccess	c -> anal		1109713	0					
ANR	1109986	Identifier	c		1109713	0					
ANR	1109987	Identifier	anal		1109713	1					
ANR	1109988	ExpressionStatement	r_asm_free ( c -> assembler )	2897:1:91555:91580	1109713	29	True				
ANR	1109989	CallExpression	r_asm_free ( c -> assembler )		1109713	0					
ANR	1109990	Callee	r_asm_free		1109713	0					
ANR	1109991	Identifier	r_asm_free		1109713	0					
ANR	1109992	ArgumentList	c -> assembler		1109713	1					
ANR	1109993	Argument	c -> assembler		1109713	0					
ANR	1109994	PtrMemberAccess	c -> assembler		1109713	0					
ANR	1109995	Identifier	c		1109713	0					
ANR	1109996	Identifier	assembler		1109713	1					
ANR	1109997	ExpressionStatement	c -> assembler = NULL	2898:1:91583:91602	1109713	30	True				
ANR	1109998	AssignmentExpression	c -> assembler = NULL		1109713	0		=			
ANR	1109999	PtrMemberAccess	c -> assembler		1109713	0					
ANR	1110000	Identifier	c		1109713	0					
ANR	1110001	Identifier	assembler		1109713	1					
ANR	1110002	Identifier	NULL		1109713	1					
ANR	1110003	ExpressionStatement	c -> print = r_print_free ( c -> print )	2899:1:91605:91639	1109713	31	True				
ANR	1110004	AssignmentExpression	c -> print = r_print_free ( c -> print )		1109713	0		=			
ANR	1110005	PtrMemberAccess	c -> print		1109713	0					
ANR	1110006	Identifier	c		1109713	0					
ANR	1110007	Identifier	print		1109713	1					
ANR	1110008	CallExpression	r_print_free ( c -> print )		1109713	1					
ANR	1110009	Callee	r_print_free		1109713	0					
ANR	1110010	Identifier	r_print_free		1109713	0					
ANR	1110011	ArgumentList	c -> print		1109713	1					
ANR	1110012	Argument	c -> print		1109713	0					
ANR	1110013	PtrMemberAccess	c -> print		1109713	0					
ANR	1110014	Identifier	c		1109713	0					
ANR	1110015	Identifier	print		1109713	1					
ANR	1110016	ExpressionStatement	"c -> bin = ( r_bin_free ( c -> bin ) , NULL )"	2900:1:91642:91678	1109713	32	True				
ANR	1110017	AssignmentExpression	"c -> bin = ( r_bin_free ( c -> bin ) , NULL )"		1109713	0		=			
ANR	1110018	PtrMemberAccess	c -> bin		1109713	0					
ANR	1110019	Identifier	c		1109713	0					
ANR	1110020	Identifier	bin		1109713	1					
ANR	1110021	Expression	"r_bin_free ( c -> bin ) , NULL"		1109713	1					
ANR	1110022	CallExpression	r_bin_free ( c -> bin )		1109713	0					
ANR	1110023	Callee	r_bin_free		1109713	0					
ANR	1110024	Identifier	r_bin_free		1109713	0					
ANR	1110025	ArgumentList	c -> bin		1109713	1					
ANR	1110026	Argument	c -> bin		1109713	0					
ANR	1110027	PtrMemberAccess	c -> bin		1109713	0					
ANR	1110028	Identifier	c		1109713	0					
ANR	1110029	Identifier	bin		1109713	1					
ANR	1110030	Identifier	NULL		1109713	1					
ANR	1110031	ExpressionStatement	"c -> lang = ( r_lang_free ( c -> lang ) , NULL )"	2901:1:91681:91720	1109713	33	True				
ANR	1110032	AssignmentExpression	"c -> lang = ( r_lang_free ( c -> lang ) , NULL )"		1109713	0		=			
ANR	1110033	PtrMemberAccess	c -> lang		1109713	0					
ANR	1110034	Identifier	c		1109713	0					
ANR	1110035	Identifier	lang		1109713	1					
ANR	1110036	Expression	"r_lang_free ( c -> lang ) , NULL"		1109713	1					
ANR	1110037	CallExpression	r_lang_free ( c -> lang )		1109713	0					
ANR	1110038	Callee	r_lang_free		1109713	0					
ANR	1110039	Identifier	r_lang_free		1109713	0					
ANR	1110040	ArgumentList	c -> lang		1109713	1					
ANR	1110041	Argument	c -> lang		1109713	0					
ANR	1110042	PtrMemberAccess	c -> lang		1109713	0					
ANR	1110043	Identifier	c		1109713	0					
ANR	1110044	Identifier	lang		1109713	1					
ANR	1110045	Identifier	NULL		1109713	1					
ANR	1110046	ExpressionStatement	"c -> dbg = ( r_debug_free ( c -> dbg ) , NULL )"	2902:1:91723:91761	1109713	34	True				
ANR	1110047	AssignmentExpression	"c -> dbg = ( r_debug_free ( c -> dbg ) , NULL )"		1109713	0		=			
ANR	1110048	PtrMemberAccess	c -> dbg		1109713	0					
ANR	1110049	Identifier	c		1109713	0					
ANR	1110050	Identifier	dbg		1109713	1					
ANR	1110051	Expression	"r_debug_free ( c -> dbg ) , NULL"		1109713	1					
ANR	1110052	CallExpression	r_debug_free ( c -> dbg )		1109713	0					
ANR	1110053	Callee	r_debug_free		1109713	0					
ANR	1110054	Identifier	r_debug_free		1109713	0					
ANR	1110055	ArgumentList	c -> dbg		1109713	1					
ANR	1110056	Argument	c -> dbg		1109713	0					
ANR	1110057	PtrMemberAccess	c -> dbg		1109713	0					
ANR	1110058	Identifier	c		1109713	0					
ANR	1110059	Identifier	dbg		1109713	1					
ANR	1110060	Identifier	NULL		1109713	1					
ANR	1110061	ExpressionStatement	r_io_free ( c -> io )	2903:1:91764:91781	1109713	35	True				
ANR	1110062	CallExpression	r_io_free ( c -> io )		1109713	0					
ANR	1110063	Callee	r_io_free		1109713	0					
ANR	1110064	Identifier	r_io_free		1109713	0					
ANR	1110065	ArgumentList	c -> io		1109713	1					
ANR	1110066	Argument	c -> io		1109713	0					
ANR	1110067	PtrMemberAccess	c -> io		1109713	0					
ANR	1110068	Identifier	c		1109713	0					
ANR	1110069	Identifier	io		1109713	1					
ANR	1110070	ExpressionStatement	r_config_free ( c -> config )	2904:1:91784:91809	1109713	36	True				
ANR	1110071	CallExpression	r_config_free ( c -> config )		1109713	0					
ANR	1110072	Callee	r_config_free		1109713	0					
ANR	1110073	Identifier	r_config_free		1109713	0					
ANR	1110074	ArgumentList	c -> config		1109713	1					
ANR	1110075	Argument	c -> config		1109713	0					
ANR	1110076	PtrMemberAccess	c -> config		1109713	0					
ANR	1110077	Identifier	c		1109713	0					
ANR	1110078	Identifier	config		1109713	1					
ANR	1110079	ExpressionStatement	r_cons_free ( )	2908:1:91996:92010	1109713	37	True				
ANR	1110080	CallExpression	r_cons_free ( )		1109713	0					
ANR	1110081	Callee	r_cons_free		1109713	0					
ANR	1110082	Identifier	r_cons_free		1109713	0					
ANR	1110083	ArgumentList			1109713	1					
ANR	1110084	ExpressionStatement	r_cons_singleton ( ) -> teefile = NULL	2909:1:92013:92048	1109713	38	True				
ANR	1110085	AssignmentExpression	r_cons_singleton ( ) -> teefile = NULL		1109713	0		=			
ANR	1110086	PtrMemberAccess	r_cons_singleton ( ) -> teefile		1109713	0					
ANR	1110087	CallExpression	r_cons_singleton ( )		1109713	0					
ANR	1110088	Callee	r_cons_singleton		1109713	0					
ANR	1110089	Identifier	r_cons_singleton		1109713	0					
ANR	1110090	ArgumentList			1109713	1					
ANR	1110091	Identifier	teefile		1109713	1					
ANR	1110092	Identifier	NULL		1109713	1					
ANR	1110093	ExpressionStatement	r_search_free ( c -> search )	2910:1:92059:92084	1109713	39	True				
ANR	1110094	CallExpression	r_search_free ( c -> search )		1109713	0					
ANR	1110095	Callee	r_search_free		1109713	0					
ANR	1110096	Identifier	r_search_free		1109713	0					
ANR	1110097	ArgumentList	c -> search		1109713	1					
ANR	1110098	Argument	c -> search		1109713	0					
ANR	1110099	PtrMemberAccess	c -> search		1109713	0					
ANR	1110100	Identifier	c		1109713	0					
ANR	1110101	Identifier	search		1109713	1					
ANR	1110102	ExpressionStatement	r_flag_free ( c -> flags )	2911:1:92087:92109	1109713	40	True				
ANR	1110103	CallExpression	r_flag_free ( c -> flags )		1109713	0					
ANR	1110104	Callee	r_flag_free		1109713	0					
ANR	1110105	Identifier	r_flag_free		1109713	0					
ANR	1110106	ArgumentList	c -> flags		1109713	1					
ANR	1110107	Argument	c -> flags		1109713	0					
ANR	1110108	PtrMemberAccess	c -> flags		1109713	0					
ANR	1110109	Identifier	c		1109713	0					
ANR	1110110	Identifier	flags		1109713	1					
ANR	1110111	ExpressionStatement	r_fs_free ( c -> fs )	2912:1:92112:92129	1109713	41	True				
ANR	1110112	CallExpression	r_fs_free ( c -> fs )		1109713	0					
ANR	1110113	Callee	r_fs_free		1109713	0					
ANR	1110114	Identifier	r_fs_free		1109713	0					
ANR	1110115	ArgumentList	c -> fs		1109713	1					
ANR	1110116	Argument	c -> fs		1109713	0					
ANR	1110117	PtrMemberAccess	c -> fs		1109713	0					
ANR	1110118	Identifier	c		1109713	0					
ANR	1110119	Identifier	fs		1109713	1					
ANR	1110120	ExpressionStatement	r_egg_free ( c -> egg )	2913:1:92132:92151	1109713	42	True				
ANR	1110121	CallExpression	r_egg_free ( c -> egg )		1109713	0					
ANR	1110122	Callee	r_egg_free		1109713	0					
ANR	1110123	Identifier	r_egg_free		1109713	0					
ANR	1110124	ArgumentList	c -> egg		1109713	1					
ANR	1110125	Argument	c -> egg		1109713	0					
ANR	1110126	PtrMemberAccess	c -> egg		1109713	0					
ANR	1110127	Identifier	c		1109713	0					
ANR	1110128	Identifier	egg		1109713	1					
ANR	1110129	ExpressionStatement	r_lib_free ( c -> lib )	2914:1:92154:92173	1109713	43	True				
ANR	1110130	CallExpression	r_lib_free ( c -> lib )		1109713	0					
ANR	1110131	Callee	r_lib_free		1109713	0					
ANR	1110132	Identifier	r_lib_free		1109713	0					
ANR	1110133	ArgumentList	c -> lib		1109713	1					
ANR	1110134	Argument	c -> lib		1109713	0					
ANR	1110135	PtrMemberAccess	c -> lib		1109713	0					
ANR	1110136	Identifier	c		1109713	0					
ANR	1110137	Identifier	lib		1109713	1					
ANR	1110138	ExpressionStatement	r_buf_free ( c -> yank_buf )	2915:1:92176:92200	1109713	44	True				
ANR	1110139	CallExpression	r_buf_free ( c -> yank_buf )		1109713	0					
ANR	1110140	Callee	r_buf_free		1109713	0					
ANR	1110141	Identifier	r_buf_free		1109713	0					
ANR	1110142	ArgumentList	c -> yank_buf		1109713	1					
ANR	1110143	Argument	c -> yank_buf		1109713	0					
ANR	1110144	PtrMemberAccess	c -> yank_buf		1109713	0					
ANR	1110145	Identifier	c		1109713	0					
ANR	1110146	Identifier	yank_buf		1109713	1					
ANR	1110147	ExpressionStatement	r_agraph_free ( c -> graph )	2916:1:92203:92227	1109713	45	True				
ANR	1110148	CallExpression	r_agraph_free ( c -> graph )		1109713	0					
ANR	1110149	Callee	r_agraph_free		1109713	0					
ANR	1110150	Identifier	r_agraph_free		1109713	0					
ANR	1110151	ArgumentList	c -> graph		1109713	1					
ANR	1110152	Argument	c -> graph		1109713	0					
ANR	1110153	PtrMemberAccess	c -> graph		1109713	0					
ANR	1110154	Identifier	c		1109713	0					
ANR	1110155	Identifier	graph		1109713	1					
ANR	1110156	ExpressionStatement	R_FREE ( c -> asmqjmps )	2917:1:92230:92250	1109713	46	True				
ANR	1110157	CallExpression	R_FREE ( c -> asmqjmps )		1109713	0					
ANR	1110158	Callee	R_FREE		1109713	0					
ANR	1110159	Identifier	R_FREE		1109713	0					
ANR	1110160	ArgumentList	c -> asmqjmps		1109713	1					
ANR	1110161	Argument	c -> asmqjmps		1109713	0					
ANR	1110162	PtrMemberAccess	c -> asmqjmps		1109713	0					
ANR	1110163	Identifier	c		1109713	0					
ANR	1110164	Identifier	asmqjmps		1109713	1					
ANR	1110165	ExpressionStatement	sdb_free ( c -> sdb )	2918:1:92253:92270	1109713	47	True				
ANR	1110166	CallExpression	sdb_free ( c -> sdb )		1109713	0					
ANR	1110167	Callee	sdb_free		1109713	0					
ANR	1110168	Identifier	sdb_free		1109713	0					
ANR	1110169	ArgumentList	c -> sdb		1109713	1					
ANR	1110170	Argument	c -> sdb		1109713	0					
ANR	1110171	PtrMemberAccess	c -> sdb		1109713	0					
ANR	1110172	Identifier	c		1109713	0					
ANR	1110173	Identifier	sdb		1109713	1					
ANR	1110174	ExpressionStatement	r_core_log_free ( c -> log )	2919:1:92273:92297	1109713	48	True				
ANR	1110175	CallExpression	r_core_log_free ( c -> log )		1109713	0					
ANR	1110176	Callee	r_core_log_free		1109713	0					
ANR	1110177	Identifier	r_core_log_free		1109713	0					
ANR	1110178	ArgumentList	c -> log		1109713	1					
ANR	1110179	Argument	c -> log		1109713	0					
ANR	1110180	PtrMemberAccess	c -> log		1109713	0					
ANR	1110181	Identifier	c		1109713	0					
ANR	1110182	Identifier	log		1109713	1					
ANR	1110183	ExpressionStatement	r_parse_free ( c -> parser )	2920:1:92300:92324	1109713	49	True				
ANR	1110184	CallExpression	r_parse_free ( c -> parser )		1109713	0					
ANR	1110185	Callee	r_parse_free		1109713	0					
ANR	1110186	Identifier	r_parse_free		1109713	0					
ANR	1110187	ArgumentList	c -> parser		1109713	1					
ANR	1110188	Argument	c -> parser		1109713	0					
ANR	1110189	PtrMemberAccess	c -> parser		1109713	0					
ANR	1110190	Identifier	c		1109713	0					
ANR	1110191	Identifier	parser		1109713	1					
ANR	1110192	ExpressionStatement	R_FREE ( c -> times )	2921:1:92327:92344	1109713	50	True				
ANR	1110193	CallExpression	R_FREE ( c -> times )		1109713	0					
ANR	1110194	Callee	R_FREE		1109713	0					
ANR	1110195	Identifier	R_FREE		1109713	0					
ANR	1110196	ArgumentList	c -> times		1109713	1					
ANR	1110197	Argument	c -> times		1109713	0					
ANR	1110198	PtrMemberAccess	c -> times		1109713	0					
ANR	1110199	Identifier	c		1109713	0					
ANR	1110200	Identifier	times		1109713	1					
ANR	1110201	ReturnStatement	return NULL ;	2922:1:92347:92358	1109713	51	True				
ANR	1110202	Identifier	NULL		1109713	0					
ANR	1110203	ReturnType	R_API RCore *		1109713	1					
ANR	1110204	Identifier	r_core_fini		1109713	2					
ANR	1110205	ParameterList	RCore * c		1109713	3					
ANR	1110206	Parameter	RCore * c	2857:25:90552:90559	1109713	0	True				
ANR	1110207	ParameterType	RCore *		1109713	0					
ANR	1110208	Identifier	c		1109713	1					
ANR	1110209	CFGEntryNode	ENTRY		1109713		True				
ANR	1110210	CFGExitNode	EXIT		1109713		True				
ANR	1110211	Symbol	c -> sdb		1109713						
ANR	1110212	Symbol	r_debug_free		1109713						
ANR	1110213	Symbol	c -> rcmd		1109713						
ANR	1110214	Symbol	c -> block		1109713						
ANR	1110215	Symbol	c -> tasks_queue		1109713						
ANR	1110216	Symbol	c -> lastsearch		1109713						
ANR	1110217	Symbol	c -> dbg		1109713						
ANR	1110218	Symbol	c -> cmdlog		1109713						
ANR	1110219	Symbol	* c -> cons		1109713						
ANR	1110220	Symbol	c -> tasks		1109713						
ANR	1110221	Symbol	r_bin_free		1109713						
ANR	1110222	Symbol	c -> search		1109713						
ANR	1110223	Symbol	c -> yank_buf		1109713						
ANR	1110224	Symbol	r_print_free		1109713						
ANR	1110225	Symbol	c -> lang		1109713						
ANR	1110226	Symbol	c -> autocomplete		1109713						
ANR	1110227	Symbol	c -> visual . tabs		1109713						
ANR	1110228	Symbol	r_anal_free		1109713						
ANR	1110229	Symbol	c -> config		1109713						
ANR	1110230	Symbol	NULL		1109713						
ANR	1110231	Symbol	c -> fs		1109713						
ANR	1110232	Symbol	* * c		1109713						
ANR	1110233	Symbol	c -> lock		1109713						
ANR	1110234	Symbol	c -> log		1109713						
ANR	1110235	Symbol	c -> oneshot_queue		1109713						
ANR	1110236	Symbol	c -> cmd_descriptors		1109713						
ANR	1110237	Symbol	c -> assembler		1109713						
ANR	1110238	Symbol	c -> anal		1109713						
ANR	1110239	Symbol	c -> ev		1109713						
ANR	1110240	Symbol	r_cmd_free		1109713						
ANR	1110241	Symbol	c -> asmqjmps		1109713						
ANR	1110242	Symbol	c -> visual		1109713						
ANR	1110243	Symbol	c -> io		1109713						
ANR	1110244	Symbol	c -> flags		1109713						
ANR	1110245	Symbol	r_cons_singleton ( ) -> teefile		1109713						
ANR	1110246	Symbol	c -> lastcmd		1109713						
ANR	1110247	Symbol	c -> times		1109713						
ANR	1110248	Symbol	c -> cons		1109713						
ANR	1110249	Symbol	c -> files		1109713						
ANR	1110250	Symbol	c -> gadgets		1109713						
ANR	1110251	Symbol	c -> parser		1109713						
ANR	1110252	Symbol	r_cons_singleton		1109713						
ANR	1110253	Symbol	c -> print		1109713						
ANR	1110254	Symbol	c -> watchers		1109713						
ANR	1110255	Symbol	c		1109713						
ANR	1110256	Symbol	c -> cons -> pager		1109713						
ANR	1110257	Symbol	c -> ropchain		1109713						
ANR	1110258	Symbol	c -> bin		1109713						
ANR	1110259	Symbol	c -> stkcmd		1109713						
ANR	1110260	Symbol	c -> num		1109713						
ANR	1110261	Symbol	c -> egg		1109713						
ANR	1110262	Symbol	c -> lib		1109713						
ANR	1110263	Symbol	* c		1109713						
ANR	1110264	Symbol	c -> cmdqueue		1109713						
ANR	1110265	Symbol	r_lang_free		1109713						
ANR	1110266	Symbol	c -> undos		1109713						
ANR	1110267	Symbol	c -> tasks_lock		1109713						
ANR	1110268	Symbol	c -> scriptstack		1109713						
ANR	1110269	Symbol	c -> graph		1109713						
ANR	1110270	Symbol	* r_cons_singleton		1109713						
ANR	1110271	Function	r_core_free	2925:0:92363:92490							
ANR	1110272	FunctionDef	r_core_free (RCore * c)		1110271	0					
ANR	1110273	CompoundStatement		2925:35:92398:92490	1110271	0					
ANR	1110274	IfStatement	if ( c )		1110271	0					
ANR	1110275	Condition	c	2927:5:92437:92437	1110271	0	True				
ANR	1110276	Identifier	c		1110271	0					
ANR	1110277	CompoundStatement		3:8:41:41	1110271	1					
ANR	1110278	ExpressionStatement	r_core_fini ( c )	2928:2:92444:92459	1110271	0	True				
ANR	1110279	CallExpression	r_core_fini ( c )		1110271	0					
ANR	1110280	Callee	r_core_fini		1110271	0					
ANR	1110281	Identifier	r_core_fini		1110271	0					
ANR	1110282	ArgumentList	c		1110271	1					
ANR	1110283	Argument	c		1110271	0					
ANR	1110284	Identifier	c		1110271	0					
ANR	1110285	ExpressionStatement	free ( c )	2929:2:92463:92471	1110271	1	True				
ANR	1110286	CallExpression	free ( c )		1110271	0					
ANR	1110287	Callee	free		1110271	0					
ANR	1110288	Identifier	free		1110271	0					
ANR	1110289	ArgumentList	c		1110271	1					
ANR	1110290	Argument	c		1110271	0					
ANR	1110291	Identifier	c		1110271	0					
ANR	1110292	ReturnStatement	return NULL ;	2931:1:92477:92488	1110271	1	True				
ANR	1110293	Identifier	NULL		1110271	0					
ANR	1110294	ReturnType	R_API RCore *		1110271	1					
ANR	1110295	Identifier	r_core_free		1110271	2					
ANR	1110296	ParameterList	RCore * c		1110271	3					
ANR	1110297	Parameter	RCore * c	2925:25:92388:92395	1110271	0	True				
ANR	1110298	ParameterType	RCore *		1110271	0					
ANR	1110299	Identifier	c		1110271	1					
ANR	1110300	CFGEntryNode	ENTRY		1110271		True				
ANR	1110301	CFGExitNode	EXIT		1110271		True				
ANR	1110302	Symbol	c		1110271						
ANR	1110303	Symbol	NULL		1110271						
ANR	1110304	Function	r_core_prompt_loop	2934:0:92493:92982							
ANR	1110305	FunctionDef	r_core_prompt_loop (RCore * r)		1110304	0					
ANR	1110306	CompoundStatement		2934:40:92533:92982	1110304	0					
ANR	1110307	IdentifierDeclStatement	int ret ;	2935:1:92536:92543	1110304	0	True				
ANR	1110308	IdentifierDecl	ret		1110304	0					
ANR	1110309	IdentifierDeclType	int		1110304	0					
ANR	1110310	Identifier	ret		1110304	1					
ANR	1110311	DoStatement	do		1110304	1					
ANR	1110312	CompoundStatement		3:4:15:15	1110304	0					
ANR	1110313	IfStatement	"if ( r_core_prompt ( r , false ) < 1 )"		1110304	0					
ANR	1110314	Condition	"r_core_prompt ( r , false ) < 1"	2937:6:92557:92584	1110304	0	True				
ANR	1110315	RelationalExpression	"r_core_prompt ( r , false ) < 1"		1110304	0		<			
ANR	1110316	CallExpression	"r_core_prompt ( r , false )"		1110304	0					
ANR	1110317	Callee	r_core_prompt		1110304	0					
ANR	1110318	Identifier	r_core_prompt		1110304	0					
ANR	1110319	ArgumentList	r		1110304	1					
ANR	1110320	Argument	r		1110304	0					
ANR	1110321	Identifier	r		1110304	0					
ANR	1110322	Argument	false		1110304	1					
ANR	1110323	Identifier	false		1110304	0					
ANR	1110324	PrimaryExpression	1		1110304	1					
ANR	1110325	CompoundStatement		4:36:53:53	1110304	1					
ANR	1110326	BreakStatement	break ;	2938:3:92592:92597	1110304	0	True				
ANR	1110327	IfStatement	if ( ( ret = r_core_prompt_exec ( r ) ) == - 1 )		1110304	1					
ANR	1110328	Condition	( ret = r_core_prompt_exec ( r ) ) == - 1	2941:6:92648:92681	1110304	0	True				
ANR	1110329	EqualityExpression	( ret = r_core_prompt_exec ( r ) ) == - 1		1110304	0		==			
ANR	1110330	AssignmentExpression	ret = r_core_prompt_exec ( r )		1110304	0		=			
ANR	1110331	Identifier	ret		1110304	0					
ANR	1110332	CallExpression	r_core_prompt_exec ( r )		1110304	1					
ANR	1110333	Callee	r_core_prompt_exec		1110304	0					
ANR	1110334	Identifier	r_core_prompt_exec		1110304	0					
ANR	1110335	ArgumentList	r		1110304	1					
ANR	1110336	Argument	r		1110304	0					
ANR	1110337	Identifier	r		1110304	0					
ANR	1110338	UnaryOperationExpression	- 1		1110304	1					
ANR	1110339	UnaryOperator	-		1110304	0					
ANR	1110340	PrimaryExpression	1		1110304	1					
ANR	1110341	CompoundStatement		8:42:150:150	1110304	1					
ANR	1110342	ExpressionStatement	"eprintf ( ""Invalid command\\n"" )"	2942:3:92689:92718	1110304	0	True				
ANR	1110343	CallExpression	"eprintf ( ""Invalid command\\n"" )"		1110304	0					
ANR	1110344	Callee	eprintf		1110304	0					
ANR	1110345	Identifier	eprintf		1110304	0					
ANR	1110346	ArgumentList	"""Invalid command\\n"""		1110304	1					
ANR	1110347	Argument	"""Invalid command\\n"""		1110304	0					
ANR	1110348	PrimaryExpression	"""Invalid command\\n"""		1110304	0					
ANR	1110349	Condition	ret != R_CORE_CMD_EXIT	2953:10:92957:92978	1110304	1	True				
ANR	1110350	EqualityExpression	ret != R_CORE_CMD_EXIT		1110304	0		!=			
ANR	1110351	Identifier	ret		1110304	0					
ANR	1110352	Identifier	R_CORE_CMD_EXIT		1110304	1					
ANR	1110353	ReturnType	R_API void		1110304	1					
ANR	1110354	Identifier	r_core_prompt_loop		1110304	2					
ANR	1110355	ParameterList	RCore * r		1110304	3					
ANR	1110356	Parameter	RCore * r	2934:30:92523:92530	1110304	0	True				
ANR	1110357	ParameterType	RCore *		1110304	0					
ANR	1110358	Identifier	r		1110304	1					
ANR	1110359	CFGEntryNode	ENTRY		1110304		True				
ANR	1110360	CFGExitNode	EXIT		1110304		True				
ANR	1110361	Symbol	ret		1110304						
ANR	1110362	Symbol	r_core_prompt		1110304						
ANR	1110363	Symbol	r		1110304						
ANR	1110364	Symbol	false		1110304						
ANR	1110365	Symbol	r_core_prompt_exec		1110304						
ANR	1110366	Symbol	R_CORE_CMD_EXIT		1110304						
ANR	1110367	Function	prompt_flag	2956:0:92985:93446							
ANR	1110368	FunctionDef	"prompt_flag (RCore * r , char * s , size_t maxlen)"		1110367	0					
ANR	1110369	CompoundStatement		2956:58:93043:93446	1110367	0					
ANR	1110370	IdentifierDeclStatement	"const char DOTS [ ] = ""..."" ;"	2957:1:93046:93071	1110367	0	True				
ANR	1110371	IdentifierDecl	"DOTS [ ] = ""..."""		1110367	0					
ANR	1110372	IdentifierDeclType	const char [ ]		1110367	0					
ANR	1110373	Identifier	DOTS		1110367	1					
ANR	1110374	AssignmentExpression	"DOTS [ ] = ""..."""		1110367	2		=			
ANR	1110375	Identifier	DOTS		1110367	0					
ANR	1110376	PrimaryExpression	"""..."""		1110367	1					
ANR	1110377	IdentifierDeclStatement	"const RFlagItem * f = r_flag_get_at ( r -> flags , r -> offset , false ) ;"	2958:1:93074:93137	1110367	1	True				
ANR	1110378	IdentifierDecl	"* f = r_flag_get_at ( r -> flags , r -> offset , false )"		1110367	0					
ANR	1110379	IdentifierDeclType	const RFlagItem *		1110367	0					
ANR	1110380	Identifier	f		1110367	1					
ANR	1110381	AssignmentExpression	"* f = r_flag_get_at ( r -> flags , r -> offset , false )"		1110367	2		=			
ANR	1110382	Identifier	f		1110367	0					
ANR	1110383	CallExpression	"r_flag_get_at ( r -> flags , r -> offset , false )"		1110367	1					
ANR	1110384	Callee	r_flag_get_at		1110367	0					
ANR	1110385	Identifier	r_flag_get_at		1110367	0					
ANR	1110386	ArgumentList	r -> flags		1110367	1					
ANR	1110387	Argument	r -> flags		1110367	0					
ANR	1110388	PtrMemberAccess	r -> flags		1110367	0					
ANR	1110389	Identifier	r		1110367	0					
ANR	1110390	Identifier	flags		1110367	1					
ANR	1110391	Argument	r -> offset		1110367	1					
ANR	1110392	PtrMemberAccess	r -> offset		1110367	0					
ANR	1110393	Identifier	r		1110367	0					
ANR	1110394	Identifier	offset		1110367	1					
ANR	1110395	Argument	false		1110367	2					
ANR	1110396	Identifier	false		1110367	0					
ANR	1110397	IfStatement	if ( ! f )		1110367	2					
ANR	1110398	Condition	! f	2959:5:93144:93145	1110367	0	True				
ANR	1110399	UnaryOperationExpression	! f		1110367	0					
ANR	1110400	UnaryOperator	!		1110367	0					
ANR	1110401	Identifier	f		1110367	1					
ANR	1110402	CompoundStatement		4:9:104:104	1110367	1					
ANR	1110403	ReturnStatement	return false ;	2960:2:93152:93164	1110367	0	True				
ANR	1110404	Identifier	false		1110367	0					
ANR	1110405	IfStatement	if ( f -> offset < r -> offset )		1110367	3					
ANR	1110406	Condition	f -> offset < r -> offset	2962:5:93174:93194	1110367	0	True				
ANR	1110407	RelationalExpression	f -> offset < r -> offset		1110367	0		<			
ANR	1110408	PtrMemberAccess	f -> offset		1110367	0					
ANR	1110409	Identifier	f		1110367	0					
ANR	1110410	Identifier	offset		1110367	1					
ANR	1110411	PtrMemberAccess	r -> offset		1110367	1					
ANR	1110412	Identifier	r		1110367	0					
ANR	1110413	Identifier	offset		1110367	1					
ANR	1110414	CompoundStatement		7:28:153:153	1110367	1					
ANR	1110415	Statement	snprintf	2963:2:93201:93208	1110367	0	True				
ANR	1110416	Statement	(	2963:11:93210:93210	1110367	1	True				
ANR	1110417	Statement	s	2963:12:93211:93211	1110367	2	True				
ANR	1110418	Statement	","	2963:13:93212:93212	1110367	3	True				
ANR	1110419	Statement	maxlen	2963:15:93214:93219	1110367	4	True				
ANR	1110420	Statement	","	2963:21:93220:93220	1110367	5	True				
ANR	1110421	Statement	"""%s + %"""	2963:23:93222:93229	1110367	6	True				
ANR	1110422	Statement	PFMT64u	2963:32:93231:93237	1110367	7	True				
ANR	1110423	Statement	","	2963:39:93238:93238	1110367	8	True				
ANR	1110424	Statement	f	2963:41:93240:93240	1110367	9	True				
ANR	1110425	Statement	->	2963:42:93241:93242	1110367	10	True				
ANR	1110426	Statement	name	2963:44:93243:93246	1110367	11	True				
ANR	1110427	Statement	","	2963:48:93247:93247	1110367	12	True				
ANR	1110428	Statement	r	2963:50:93249:93249	1110367	13	True				
ANR	1110429	Statement	->	2963:51:93250:93251	1110367	14	True				
ANR	1110430	Statement	offset	2963:53:93252:93257	1110367	15	True				
ANR	1110431	Statement	-	2963:60:93259:93259	1110367	16	True				
ANR	1110432	Statement	f	2963:62:93261:93261	1110367	17	True				
ANR	1110433	Statement	->	2963:63:93262:93263	1110367	18	True				
ANR	1110434	Statement	offset	2963:65:93264:93269	1110367	19	True				
ANR	1110435	Statement	)	2963:71:93270:93270	1110367	20	True				
ANR	1110436	ExpressionStatement		2963:72:93271:93271	1110367	21	True				
ANR	1110437	ElseStatement	else		1110367	0					
ANR	1110438	CompoundStatement		9:8:237:237	1110367	0					
ANR	1110439	ExpressionStatement	"snprintf ( s , maxlen , ""%s"" , f -> name )"	2965:2:93285:93320	1110367	0	True				
ANR	1110440	CallExpression	"snprintf ( s , maxlen , ""%s"" , f -> name )"		1110367	0					
ANR	1110441	Callee	snprintf		1110367	0					
ANR	1110442	Identifier	snprintf		1110367	0					
ANR	1110443	ArgumentList	s		1110367	1					
ANR	1110444	Argument	s		1110367	0					
ANR	1110445	Identifier	s		1110367	0					
ANR	1110446	Argument	maxlen		1110367	1					
ANR	1110447	Identifier	maxlen		1110367	0					
ANR	1110448	Argument	"""%s"""		1110367	2					
ANR	1110449	PrimaryExpression	"""%s"""		1110367	0					
ANR	1110450	Argument	f -> name		1110367	3					
ANR	1110451	PtrMemberAccess	f -> name		1110367	0					
ANR	1110452	Identifier	f		1110367	0					
ANR	1110453	Identifier	name		1110367	1					
ANR	1110454	IfStatement	if ( strlen ( s ) > maxlen - sizeof ( DOTS ) )		1110367	4					
ANR	1110455	Condition	strlen ( s ) > maxlen - sizeof ( DOTS )	2967:5:93330:93364	1110367	0	True				
ANR	1110456	RelationalExpression	strlen ( s ) > maxlen - sizeof ( DOTS )		1110367	0		>			
ANR	1110457	CallExpression	strlen ( s )		1110367	0					
ANR	1110458	Callee	strlen		1110367	0					
ANR	1110459	Identifier	strlen		1110367	0					
ANR	1110460	ArgumentList	s		1110367	1					
ANR	1110461	Argument	s		1110367	0					
ANR	1110462	Identifier	s		1110367	0					
ANR	1110463	AdditiveExpression	maxlen - sizeof ( DOTS )		1110367	1		-			
ANR	1110464	Identifier	maxlen		1110367	0					
ANR	1110465	SizeofExpression	sizeof ( DOTS )		1110367	1					
ANR	1110466	Sizeof	sizeof		1110367	0					
ANR	1110467	SizeofOperand	DOTS		1110367	1					
ANR	1110468	CompoundStatement		12:42:323:323	1110367	1					
ANR	1110469	ExpressionStatement	s [ maxlen - sizeof ( DOTS ) - 1 ] = '\\0'	2968:2:93371:93407	1110367	0	True				
ANR	1110470	AssignmentExpression	s [ maxlen - sizeof ( DOTS ) - 1 ] = '\\0'		1110367	0		=			
ANR	1110471	ArrayIndexing	s [ maxlen - sizeof ( DOTS ) - 1 ]		1110367	0					
ANR	1110472	Identifier	s		1110367	0					
ANR	1110473	AdditiveExpression	maxlen - sizeof ( DOTS ) - 1		1110367	1		-			
ANR	1110474	Identifier	maxlen		1110367	0					
ANR	1110475	AdditiveExpression	sizeof ( DOTS ) - 1		1110367	1		-			
ANR	1110476	SizeofExpression	sizeof ( DOTS )		1110367	0					
ANR	1110477	Sizeof	sizeof		1110367	0					
ANR	1110478	SizeofOperand	DOTS		1110367	1					
ANR	1110479	PrimaryExpression	1		1110367	1					
ANR	1110480	PrimaryExpression	'\\0'		1110367	1					
ANR	1110481	ExpressionStatement	"strcat ( s , DOTS )"	2969:2:93411:93427	1110367	1	True				
ANR	1110482	CallExpression	"strcat ( s , DOTS )"		1110367	0					
ANR	1110483	Callee	strcat		1110367	0					
ANR	1110484	Identifier	strcat		1110367	0					
ANR	1110485	ArgumentList	s		1110367	1					
ANR	1110486	Argument	s		1110367	0					
ANR	1110487	Identifier	s		1110367	0					
ANR	1110488	Argument	DOTS		1110367	1					
ANR	1110489	Identifier	DOTS		1110367	0					
ANR	1110490	ReturnStatement	return true ;	2971:1:93433:93444	1110367	5	True				
ANR	1110491	Identifier	true		1110367	0					
ANR	1110492	ReturnType	static int		1110367	1					
ANR	1110493	Identifier	prompt_flag		1110367	2					
ANR	1110494	ParameterList	"RCore * r , char * s , size_t maxlen"		1110367	3					
ANR	1110495	Parameter	RCore * r	2956:24:93009:93016	1110367	0	True				
ANR	1110496	ParameterType	RCore *		1110367	0					
ANR	1110497	Identifier	r		1110367	1					
ANR	1110498	Parameter	char * s	2956:34:93019:93025	1110367	1	True				
ANR	1110499	ParameterType	char *		1110367	0					
ANR	1110500	Identifier	s		1110367	1					
ANR	1110501	Parameter	size_t maxlen	2956:43:93028:93040	1110367	2	True				
ANR	1110502	ParameterType	size_t		1110367	0					
ANR	1110503	Identifier	maxlen		1110367	1					
ANR	1110504	CFGEntryNode	ENTRY		1110367		True				
ANR	1110505	CFGExitNode	EXIT		1110367		True				
ANR	1110506	Symbol	r -> offset		1110367						
ANR	1110507	Symbol	r -> flags		1110367						
ANR	1110508	Symbol	f -> name		1110367						
ANR	1110509	Symbol	f		1110367						
ANR	1110510	Symbol	false		1110367						
ANR	1110511	Symbol	DOTS		1110367						
ANR	1110512	Symbol	* maxlen		1110367						
ANR	1110513	Symbol	* f		1110367						
ANR	1110514	Symbol	strlen		1110367						
ANR	1110515	Symbol	r		1110367						
ANR	1110516	Symbol	s		1110367						
ANR	1110517	Symbol	f -> offset		1110367						
ANR	1110518	Symbol	true		1110367						
ANR	1110519	Symbol	* r		1110367						
ANR	1110520	Symbol	r_flag_get_at		1110367						
ANR	1110521	Symbol	* s		1110367						
ANR	1110522	Symbol	maxlen		1110367						
ANR	1110523	Function	prompt_sec	2974:0:93449:93685							
ANR	1110524	FunctionDef	"prompt_sec (RCore * r , char * s , size_t maxlen)"		1110523	0					
ANR	1110525	CompoundStatement		2974:57:93506:93685	1110523	0					
ANR	1110526	IdentifierDeclStatement	"const RBinSection * sec = r_bin_get_section_at ( r_bin_cur_object ( r -> bin ) , r -> offset , true ) ;"	2975:1:93509:93599	1110523	0	True				
ANR	1110527	IdentifierDecl	"* sec = r_bin_get_section_at ( r_bin_cur_object ( r -> bin ) , r -> offset , true )"		1110523	0					
ANR	1110528	IdentifierDeclType	const RBinSection *		1110523	0					
ANR	1110529	Identifier	sec		1110523	1					
ANR	1110530	AssignmentExpression	"* sec = r_bin_get_section_at ( r_bin_cur_object ( r -> bin ) , r -> offset , true )"		1110523	2		=			
ANR	1110531	Identifier	sec		1110523	0					
ANR	1110532	CallExpression	"r_bin_get_section_at ( r_bin_cur_object ( r -> bin ) , r -> offset , true )"		1110523	1					
ANR	1110533	Callee	r_bin_get_section_at		1110523	0					
ANR	1110534	Identifier	r_bin_get_section_at		1110523	0					
ANR	1110535	ArgumentList	r_bin_cur_object ( r -> bin )		1110523	1					
ANR	1110536	Argument	r_bin_cur_object ( r -> bin )		1110523	0					
ANR	1110537	CallExpression	r_bin_cur_object ( r -> bin )		1110523	0					
ANR	1110538	Callee	r_bin_cur_object		1110523	0					
ANR	1110539	Identifier	r_bin_cur_object		1110523	0					
ANR	1110540	ArgumentList	r -> bin		1110523	1					
ANR	1110541	Argument	r -> bin		1110523	0					
ANR	1110542	PtrMemberAccess	r -> bin		1110523	0					
ANR	1110543	Identifier	r		1110523	0					
ANR	1110544	Identifier	bin		1110523	1					
ANR	1110545	Argument	r -> offset		1110523	1					
ANR	1110546	PtrMemberAccess	r -> offset		1110523	0					
ANR	1110547	Identifier	r		1110523	0					
ANR	1110548	Identifier	offset		1110523	1					
ANR	1110549	Argument	true		1110523	2					
ANR	1110550	Identifier	true		1110523	0					
ANR	1110551	IfStatement	if ( ! sec )		1110523	1					
ANR	1110552	Condition	! sec	2976:5:93606:93609	1110523	0	True				
ANR	1110553	UnaryOperationExpression	! sec		1110523	0					
ANR	1110554	UnaryOperator	!		1110523	0					
ANR	1110555	Identifier	sec		1110523	1					
ANR	1110556	CompoundStatement		3:11:105:105	1110523	1					
ANR	1110557	ReturnStatement	return ;	2977:2:93616:93622	1110523	0	True				
ANR	1110558	ExpressionStatement	"r_str_ncpy ( s , sec -> name , maxlen - 2 )"	2979:1:93628:93665	1110523	2	True				
ANR	1110559	CallExpression	"r_str_ncpy ( s , sec -> name , maxlen - 2 )"		1110523	0					
ANR	1110560	Callee	r_str_ncpy		1110523	0					
ANR	1110561	Identifier	r_str_ncpy		1110523	0					
ANR	1110562	ArgumentList	s		1110523	1					
ANR	1110563	Argument	s		1110523	0					
ANR	1110564	Identifier	s		1110523	0					
ANR	1110565	Argument	sec -> name		1110523	1					
ANR	1110566	PtrMemberAccess	sec -> name		1110523	0					
ANR	1110567	Identifier	sec		1110523	0					
ANR	1110568	Identifier	name		1110523	1					
ANR	1110569	Argument	maxlen - 2		1110523	2					
ANR	1110570	AdditiveExpression	maxlen - 2		1110523	0		-			
ANR	1110571	Identifier	maxlen		1110523	0					
ANR	1110572	PrimaryExpression	2		1110523	1					
ANR	1110573	ExpressionStatement	"strcat ( s , "":"" )"	2980:1:93668:93683	1110523	3	True				
ANR	1110574	CallExpression	"strcat ( s , "":"" )"		1110523	0					
ANR	1110575	Callee	strcat		1110523	0					
ANR	1110576	Identifier	strcat		1110523	0					
ANR	1110577	ArgumentList	s		1110523	1					
ANR	1110578	Argument	s		1110523	0					
ANR	1110579	Identifier	s		1110523	0					
ANR	1110580	Argument	""":"""		1110523	1					
ANR	1110581	PrimaryExpression	""":"""		1110523	0					
ANR	1110582	ReturnType	static void		1110523	1					
ANR	1110583	Identifier	prompt_sec		1110523	2					
ANR	1110584	ParameterList	"RCore * r , char * s , size_t maxlen"		1110523	3					
ANR	1110585	Parameter	RCore * r	2974:23:93472:93479	1110523	0	True				
ANR	1110586	ParameterType	RCore *		1110523	0					
ANR	1110587	Identifier	r		1110523	1					
ANR	1110588	Parameter	char * s	2974:33:93482:93488	1110523	1	True				
ANR	1110589	ParameterType	char *		1110523	0					
ANR	1110590	Identifier	s		1110523	1					
ANR	1110591	Parameter	size_t maxlen	2974:42:93491:93503	1110523	2	True				
ANR	1110592	ParameterType	size_t		1110523	0					
ANR	1110593	Identifier	maxlen		1110523	1					
ANR	1110594	CFGEntryNode	ENTRY		1110523		True				
ANR	1110595	CFGExitNode	EXIT		1110523		True				
ANR	1110596	Symbol	r -> offset		1110523						
ANR	1110597	Symbol	sec		1110523						
ANR	1110598	Symbol	r		1110523						
ANR	1110599	Symbol	s		1110523						
ANR	1110600	Symbol	sec -> name		1110523						
ANR	1110601	Symbol	r -> bin		1110523						
ANR	1110602	Symbol	true		1110523						
ANR	1110603	Symbol	* sec		1110523						
ANR	1110604	Symbol	* r		1110523						
ANR	1110605	Symbol	r_bin_get_section_at		1110523						
ANR	1110606	Symbol	maxlen		1110523						
ANR	1110607	Symbol	r_bin_cur_object		1110523						
ANR	1110608	Function	chop_prompt	2983:0:93688:94259							
ANR	1110609	FunctionDef	"chop_prompt (const char * filename , char * tmp , size_t max_tmp_size)"		1110608	0					
ANR	1110610	CompoundStatement		2983:79:93767:94259	1110608	0					
ANR	1110611	IdentifierDeclStatement	"size_t tmp_len , file_len ;"	2984:1:93770:93794	1110608	0	True				
ANR	1110612	IdentifierDecl	tmp_len		1110608	0					
ANR	1110613	IdentifierDeclType	size_t		1110608	0					
ANR	1110614	Identifier	tmp_len		1110608	1					
ANR	1110615	IdentifierDecl	file_len		1110608	1					
ANR	1110616	IdentifierDeclType	size_t		1110608	0					
ANR	1110617	Identifier	file_len		1110608	1					
ANR	1110618	IdentifierDeclStatement	unsigned int OTHRSCH = 3 ;	2985:1:93797:93821	1110608	1	True				
ANR	1110619	IdentifierDecl	OTHRSCH = 3		1110608	0					
ANR	1110620	IdentifierDeclType	unsigned int		1110608	0					
ANR	1110621	Identifier	OTHRSCH		1110608	1					
ANR	1110622	AssignmentExpression	OTHRSCH = 3		1110608	2		=			
ANR	1110623	Identifier	OTHRSCH		1110608	0					
ANR	1110624	PrimaryExpression	3		1110608	1					
ANR	1110625	IdentifierDeclStatement	"const char DOTS [ ] = ""..."" ;"	2986:1:93824:93849	1110608	2	True				
ANR	1110626	IdentifierDecl	"DOTS [ ] = ""..."""		1110608	0					
ANR	1110627	IdentifierDeclType	const char [ ]		1110608	0					
ANR	1110628	Identifier	DOTS		1110608	1					
ANR	1110629	AssignmentExpression	"DOTS [ ] = ""..."""		1110608	2		=			
ANR	1110630	Identifier	DOTS		1110608	0					
ANR	1110631	PrimaryExpression	"""..."""		1110608	1					
ANR	1110632	IdentifierDeclStatement	"int w , p_len ;"	2987:1:93852:93864	1110608	3	True				
ANR	1110633	IdentifierDecl	w		1110608	0					
ANR	1110634	IdentifierDeclType	int		1110608	0					
ANR	1110635	Identifier	w		1110608	1					
ANR	1110636	IdentifierDecl	p_len		1110608	1					
ANR	1110637	IdentifierDeclType	int		1110608	0					
ANR	1110638	Identifier	p_len		1110608	1					
ANR	1110639	ExpressionStatement	w = r_cons_get_size ( NULL )	2989:1:93868:93894	1110608	4	True				
ANR	1110640	AssignmentExpression	w = r_cons_get_size ( NULL )		1110608	0		=			
ANR	1110641	Identifier	w		1110608	0					
ANR	1110642	CallExpression	r_cons_get_size ( NULL )		1110608	1					
ANR	1110643	Callee	r_cons_get_size		1110608	0					
ANR	1110644	Identifier	r_cons_get_size		1110608	0					
ANR	1110645	ArgumentList	NULL		1110608	1					
ANR	1110646	Argument	NULL		1110608	0					
ANR	1110647	Identifier	NULL		1110608	0					
ANR	1110648	ExpressionStatement	file_len = strlen ( filename )	2990:1:93897:93925	1110608	5	True				
ANR	1110649	AssignmentExpression	file_len = strlen ( filename )		1110608	0		=			
ANR	1110650	Identifier	file_len		1110608	0					
ANR	1110651	CallExpression	strlen ( filename )		1110608	1					
ANR	1110652	Callee	strlen		1110608	0					
ANR	1110653	Identifier	strlen		1110608	0					
ANR	1110654	ArgumentList	filename		1110608	1					
ANR	1110655	Argument	filename		1110608	0					
ANR	1110656	Identifier	filename		1110608	0					
ANR	1110657	ExpressionStatement	tmp_len = strlen ( tmp )	2991:1:93928:93950	1110608	6	True				
ANR	1110658	AssignmentExpression	tmp_len = strlen ( tmp )		1110608	0		=			
ANR	1110659	Identifier	tmp_len		1110608	0					
ANR	1110660	CallExpression	strlen ( tmp )		1110608	1					
ANR	1110661	Callee	strlen		1110608	0					
ANR	1110662	Identifier	strlen		1110608	0					
ANR	1110663	ArgumentList	tmp		1110608	1					
ANR	1110664	Argument	tmp		1110608	0					
ANR	1110665	Identifier	tmp		1110608	0					
ANR	1110666	ExpressionStatement	"p_len = R_MAX ( 0 , w - 6 )"	2992:1:93953:93977	1110608	7	True				
ANR	1110667	AssignmentExpression	"p_len = R_MAX ( 0 , w - 6 )"		1110608	0		=			
ANR	1110668	Identifier	p_len		1110608	0					
ANR	1110669	CallExpression	"R_MAX ( 0 , w - 6 )"		1110608	1					
ANR	1110670	Callee	R_MAX		1110608	0					
ANR	1110671	Identifier	R_MAX		1110608	0					
ANR	1110672	ArgumentList	0		1110608	1					
ANR	1110673	Argument	0		1110608	0					
ANR	1110674	PrimaryExpression	0		1110608	0					
ANR	1110675	Argument	w - 6		1110608	1					
ANR	1110676	AdditiveExpression	w - 6		1110608	0		-			
ANR	1110677	Identifier	w		1110608	0					
ANR	1110678	PrimaryExpression	6		1110608	1					
ANR	1110679	IfStatement	if ( file_len + tmp_len + OTHRSCH >= p_len )		1110608	8					
ANR	1110680	Condition	file_len + tmp_len + OTHRSCH >= p_len	2993:5:93984:94020	1110608	0	True				
ANR	1110681	RelationalExpression	file_len + tmp_len + OTHRSCH >= p_len		1110608	0		>=			
ANR	1110682	AdditiveExpression	file_len + tmp_len + OTHRSCH		1110608	0		+			
ANR	1110683	Identifier	file_len		1110608	0					
ANR	1110684	AdditiveExpression	tmp_len + OTHRSCH		1110608	1		+			
ANR	1110685	Identifier	tmp_len		1110608	0					
ANR	1110686	Identifier	OTHRSCH		1110608	1					
ANR	1110687	Identifier	p_len		1110608	1					
ANR	1110688	CompoundStatement		13:2:295:367	1110608	1					
ANR	1110689	IdentifierDeclStatement	size_t dots_size = sizeof ( DOTS ) ;	2994:2:94027:94059	1110608	0	True				
ANR	1110690	IdentifierDecl	dots_size = sizeof ( DOTS )		1110608	0					
ANR	1110691	IdentifierDeclType	size_t		1110608	0					
ANR	1110692	Identifier	dots_size		1110608	1					
ANR	1110693	AssignmentExpression	dots_size = sizeof ( DOTS )		1110608	2		=			
ANR	1110694	Identifier	dots_size		1110608	0					
ANR	1110695	SizeofExpression	sizeof ( DOTS )		1110608	1					
ANR	1110696	Sizeof	sizeof		1110608	0					
ANR	1110697	SizeofOperand	DOTS		1110608	1					
ANR	1110698	IdentifierDeclStatement	size_t chop_point = ( size_t ) ( p_len - OTHRSCH - file_len - dots_size - 1 ) ;	2995:2:94063:94135	1110608	1	True				
ANR	1110699	IdentifierDecl	chop_point = ( size_t ) ( p_len - OTHRSCH - file_len - dots_size - 1 )		1110608	0					
ANR	1110700	IdentifierDeclType	size_t		1110608	0					
ANR	1110701	Identifier	chop_point		1110608	1					
ANR	1110702	AssignmentExpression	chop_point = ( size_t ) ( p_len - OTHRSCH - file_len - dots_size - 1 )		1110608	2		=			
ANR	1110703	Identifier	chop_point		1110608	0					
ANR	1110704	CastExpression	( size_t ) ( p_len - OTHRSCH - file_len - dots_size - 1 )		1110608	1					
ANR	1110705	CastTarget	size_t		1110608	0					
ANR	1110706	AdditiveExpression	p_len - OTHRSCH - file_len - dots_size - 1		1110608	1		-			
ANR	1110707	Identifier	p_len		1110608	0					
ANR	1110708	AdditiveExpression	OTHRSCH - file_len - dots_size - 1		1110608	1		-			
ANR	1110709	Identifier	OTHRSCH		1110608	0					
ANR	1110710	AdditiveExpression	file_len - dots_size - 1		1110608	1		-			
ANR	1110711	Identifier	file_len		1110608	0					
ANR	1110712	AdditiveExpression	dots_size - 1		1110608	1		-			
ANR	1110713	Identifier	dots_size		1110608	0					
ANR	1110714	PrimaryExpression	1		1110608	1					
ANR	1110715	IfStatement	if ( chop_point < ( max_tmp_size - dots_size - 1 ) )		1110608	2					
ANR	1110716	Condition	chop_point < ( max_tmp_size - dots_size - 1 )	2996:6:94143:94185	1110608	0	True				
ANR	1110717	RelationalExpression	chop_point < ( max_tmp_size - dots_size - 1 )		1110608	0		<			
ANR	1110718	Identifier	chop_point		1110608	0					
ANR	1110719	AdditiveExpression	max_tmp_size - dots_size - 1		1110608	1		-			
ANR	1110720	Identifier	max_tmp_size		1110608	0					
ANR	1110721	AdditiveExpression	dots_size - 1		1110608	1		-			
ANR	1110722	Identifier	dots_size		1110608	0					
ANR	1110723	PrimaryExpression	1		1110608	1					
ANR	1110724	CompoundStatement		14:51:420:420	1110608	1					
ANR	1110725	ExpressionStatement	tmp [ chop_point ] = '\\0'	2997:3:94193:94215	1110608	0	True				
ANR	1110726	AssignmentExpression	tmp [ chop_point ] = '\\0'		1110608	0		=			
ANR	1110727	ArrayIndexing	tmp [ chop_point ]		1110608	0					
ANR	1110728	Identifier	tmp		1110608	0					
ANR	1110729	Identifier	chop_point		1110608	1					
ANR	1110730	PrimaryExpression	'\\0'		1110608	1					
ANR	1110731	ExpressionStatement	"strncat ( tmp , DOTS , dots_size )"	2998:3:94220:94250	1110608	1	True				
ANR	1110732	CallExpression	"strncat ( tmp , DOTS , dots_size )"		1110608	0					
ANR	1110733	Callee	strncat		1110608	0					
ANR	1110734	Identifier	strncat		1110608	0					
ANR	1110735	ArgumentList	tmp		1110608	1					
ANR	1110736	Argument	tmp		1110608	0					
ANR	1110737	Identifier	tmp		1110608	0					
ANR	1110738	Argument	DOTS		1110608	1					
ANR	1110739	Identifier	DOTS		1110608	0					
ANR	1110740	Argument	dots_size		1110608	2					
ANR	1110741	Identifier	dots_size		1110608	0					
ANR	1110742	ReturnType	static void		1110608	1					
ANR	1110743	Identifier	chop_prompt		1110608	2					
ANR	1110744	ParameterList	"const char * filename , char * tmp , size_t max_tmp_size"		1110608	3					
ANR	1110745	Parameter	const char * filename	2983:25:93713:93732	1110608	0	True				
ANR	1110746	ParameterType	const char *		1110608	0					
ANR	1110747	Identifier	filename		1110608	1					
ANR	1110748	Parameter	char * tmp	2983:47:93735:93743	1110608	1	True				
ANR	1110749	ParameterType	char *		1110608	0					
ANR	1110750	Identifier	tmp		1110608	1					
ANR	1110751	Parameter	size_t max_tmp_size	2983:58:93746:93764	1110608	2	True				
ANR	1110752	ParameterType	size_t		1110608	0					
ANR	1110753	Identifier	max_tmp_size		1110608	1					
ANR	1110754	CFGEntryNode	ENTRY		1110608		True				
ANR	1110755	CFGExitNode	EXIT		1110608		True				
ANR	1110756	Symbol	* tmp		1110608						
ANR	1110757	Symbol	NULL		1110608						
ANR	1110758	Symbol	r_cons_get_size		1110608						
ANR	1110759	Symbol	tmp_len		1110608						
ANR	1110760	Symbol	dots_size		1110608						
ANR	1110761	Symbol	OTHRSCH		1110608						
ANR	1110762	Symbol	DOTS		1110608						
ANR	1110763	Symbol	* chop_point		1110608						
ANR	1110764	Symbol	p_len		1110608						
ANR	1110765	Symbol	strlen		1110608						
ANR	1110766	Symbol	filename		1110608						
ANR	1110767	Symbol	tmp		1110608						
ANR	1110768	Symbol	w		1110608						
ANR	1110769	Symbol	max_tmp_size		1110608						
ANR	1110770	Symbol	R_MAX		1110608						
ANR	1110771	Symbol	chop_point		1110608						
ANR	1110772	Symbol	file_len		1110608						
ANR	1110773	Function	set_prompt	3003:0:94262:96032							
ANR	1110774	FunctionDef	set_prompt (RCore * r)		1110773	0					
ANR	1110775	CompoundStatement		3003:34:94296:96032	1110773	0					
ANR	1110776	IdentifierDeclStatement	char tmp [ 128 ] ;	3004:1:94299:94312	1110773	0	True				
ANR	1110777	IdentifierDecl	tmp [ 128 ]		1110773	0					
ANR	1110778	IdentifierDeclType	char [ 128 ]		1110773	0					
ANR	1110779	Identifier	tmp		1110773	1					
ANR	1110780	PrimaryExpression	128		1110773	2					
ANR	1110781	IdentifierDeclStatement	"char * filename = strdup ( """" ) ;"	3005:1:94315:94343	1110773	1	True				
ANR	1110782	IdentifierDecl	"* filename = strdup ( """" )"		1110773	0					
ANR	1110783	IdentifierDeclType	char *		1110773	0					
ANR	1110784	Identifier	filename		1110773	1					
ANR	1110785	AssignmentExpression	"* filename = strdup ( """" )"		1110773	2		=			
ANR	1110786	Identifier	filename		1110773	0					
ANR	1110787	CallExpression	"strdup ( """" )"		1110773	1					
ANR	1110788	Callee	strdup		1110773	0					
ANR	1110789	Identifier	strdup		1110773	0					
ANR	1110790	ArgumentList	""""""		1110773	1					
ANR	1110791	Argument	""""""		1110773	0					
ANR	1110792	PrimaryExpression	""""""		1110773	0					
ANR	1110793	IdentifierDeclStatement	"const char * cmdprompt = r_config_get ( r -> config , ""cmd.prompt"" ) ;"	3006:1:94346:94408	1110773	2	True				
ANR	1110794	IdentifierDecl	"* cmdprompt = r_config_get ( r -> config , ""cmd.prompt"" )"		1110773	0					
ANR	1110795	IdentifierDeclType	const char *		1110773	0					
ANR	1110796	Identifier	cmdprompt		1110773	1					
ANR	1110797	AssignmentExpression	"* cmdprompt = r_config_get ( r -> config , ""cmd.prompt"" )"		1110773	2		=			
ANR	1110798	Identifier	cmdprompt		1110773	0					
ANR	1110799	CallExpression	"r_config_get ( r -> config , ""cmd.prompt"" )"		1110773	1					
ANR	1110800	Callee	r_config_get		1110773	0					
ANR	1110801	Identifier	r_config_get		1110773	0					
ANR	1110802	ArgumentList	r -> config		1110773	1					
ANR	1110803	Argument	r -> config		1110773	0					
ANR	1110804	PtrMemberAccess	r -> config		1110773	0					
ANR	1110805	Identifier	r		1110773	0					
ANR	1110806	Identifier	config		1110773	1					
ANR	1110807	Argument	"""cmd.prompt"""		1110773	1					
ANR	1110808	PrimaryExpression	"""cmd.prompt"""		1110773	0					
ANR	1110809	IdentifierDeclStatement	"const char * BEGIN = """" ;"	3007:1:94411:94433	1110773	3	True				
ANR	1110810	IdentifierDecl	"* BEGIN = """""		1110773	0					
ANR	1110811	IdentifierDeclType	const char *		1110773	0					
ANR	1110812	Identifier	BEGIN		1110773	1					
ANR	1110813	AssignmentExpression	"* BEGIN = """""		1110773	2		=			
ANR	1110814	Identifier	BEGIN		1110773	0					
ANR	1110815	PrimaryExpression	""""""		1110773	1					
ANR	1110816	IdentifierDeclStatement	"const char * END = """" ;"	3008:1:94436:94456	1110773	4	True				
ANR	1110817	IdentifierDecl	"* END = """""		1110773	0					
ANR	1110818	IdentifierDeclType	const char *		1110773	0					
ANR	1110819	Identifier	END		1110773	1					
ANR	1110820	AssignmentExpression	"* END = """""		1110773	2		=			
ANR	1110821	Identifier	END		1110773	0					
ANR	1110822	PrimaryExpression	""""""		1110773	1					
ANR	1110823	IdentifierDeclStatement	"const char * remote = """" ;"	3009:1:94459:94482	1110773	5	True				
ANR	1110824	IdentifierDecl	"* remote = """""		1110773	0					
ANR	1110825	IdentifierDeclType	const char *		1110773	0					
ANR	1110826	Identifier	remote		1110773	1					
ANR	1110827	AssignmentExpression	"* remote = """""		1110773	2		=			
ANR	1110828	Identifier	remote		1110773	0					
ANR	1110829	PrimaryExpression	""""""		1110773	1					
ANR	1110830	IfStatement	if ( cmdprompt && * cmdprompt )		1110773	6					
ANR	1110831	Condition	cmdprompt && * cmdprompt	3011:5:94490:94512	1110773	0	True				
ANR	1110832	AndExpression	cmdprompt && * cmdprompt		1110773	0		&&			
ANR	1110833	Identifier	cmdprompt		1110773	0					
ANR	1110834	UnaryOperationExpression	* cmdprompt		1110773	1					
ANR	1110835	UnaryOperator	*		1110773	0					
ANR	1110836	Identifier	cmdprompt		1110773	1					
ANR	1110837	CompoundStatement		9:30:218:218	1110773	1					
ANR	1110838	ExpressionStatement	"r_core_cmd ( r , cmdprompt , 0 )"	3012:2:94519:94547	1110773	0	True				
ANR	1110839	CallExpression	"r_core_cmd ( r , cmdprompt , 0 )"		1110773	0					
ANR	1110840	Callee	r_core_cmd		1110773	0					
ANR	1110841	Identifier	r_core_cmd		1110773	0					
ANR	1110842	ArgumentList	r		1110773	1					
ANR	1110843	Argument	r		1110773	0					
ANR	1110844	Identifier	r		1110773	0					
ANR	1110845	Argument	cmdprompt		1110773	1					
ANR	1110846	Identifier	cmdprompt		1110773	0					
ANR	1110847	Argument	0		1110773	2					
ANR	1110848	PrimaryExpression	0		1110773	0					
ANR	1110849	IfStatement	"if ( r_config_get_i ( r -> config , ""scr.prompt.file"" ) )"		1110773	7					
ANR	1110850	Condition	"r_config_get_i ( r -> config , ""scr.prompt.file"" )"	3015:5:94558:94602	1110773	0	True				
ANR	1110851	CallExpression	"r_config_get_i ( r -> config , ""scr.prompt.file"" )"		1110773	0					
ANR	1110852	Callee	r_config_get_i		1110773	0					
ANR	1110853	Identifier	r_config_get_i		1110773	0					
ANR	1110854	ArgumentList	r -> config		1110773	1					
ANR	1110855	Argument	r -> config		1110773	0					
ANR	1110856	PtrMemberAccess	r -> config		1110773	0					
ANR	1110857	Identifier	r		1110773	0					
ANR	1110858	Identifier	config		1110773	1					
ANR	1110859	Argument	"""scr.prompt.file"""		1110773	1					
ANR	1110860	PrimaryExpression	"""scr.prompt.file"""		1110773	0					
ANR	1110861	CompoundStatement		13:52:308:308	1110773	1					
ANR	1110862	ExpressionStatement	free ( filename )	3016:2:94609:94624	1110773	0	True				
ANR	1110863	CallExpression	free ( filename )		1110773	0					
ANR	1110864	Callee	free		1110773	0					
ANR	1110865	Identifier	free		1110773	0					
ANR	1110866	ArgumentList	filename		1110773	1					
ANR	1110867	Argument	filename		1110773	0					
ANR	1110868	Identifier	filename		1110773	0					
ANR	1110869	ExpressionStatement	"filename = r_str_newf ( ""\\""%s\\"""" , r -> io -> desc ? r_file_basename ( r -> io -> desc -> name ) : """" )"	3017:2:94628:94719	1110773	1	True				
ANR	1110870	AssignmentExpression	"filename = r_str_newf ( ""\\""%s\\"""" , r -> io -> desc ? r_file_basename ( r -> io -> desc -> name ) : """" )"		1110773	0		=			
ANR	1110871	Identifier	filename		1110773	0					
ANR	1110872	CallExpression	"r_str_newf ( ""\\""%s\\"""" , r -> io -> desc ? r_file_basename ( r -> io -> desc -> name ) : """" )"		1110773	1					
ANR	1110873	Callee	r_str_newf		1110773	0					
ANR	1110874	Identifier	r_str_newf		1110773	0					
ANR	1110875	ArgumentList	"""\\""%s\\"""""		1110773	1					
ANR	1110876	Argument	"""\\""%s\\"""""		1110773	0					
ANR	1110877	PrimaryExpression	"""\\""%s\\"""""		1110773	0					
ANR	1110878	Argument	"r -> io -> desc ? r_file_basename ( r -> io -> desc -> name ) : """""		1110773	1					
ANR	1110879	ConditionalExpression	"r -> io -> desc ? r_file_basename ( r -> io -> desc -> name ) : """""		1110773	0					
ANR	1110880	Condition	r -> io -> desc		1110773	0					
ANR	1110881	PtrMemberAccess	r -> io -> desc		1110773	0					
ANR	1110882	PtrMemberAccess	r -> io		1110773	0					
ANR	1110883	Identifier	r		1110773	0					
ANR	1110884	Identifier	io		1110773	1					
ANR	1110885	Identifier	desc		1110773	1					
ANR	1110886	CallExpression	r_file_basename ( r -> io -> desc -> name )		1110773	1					
ANR	1110887	Callee	r_file_basename		1110773	0					
ANR	1110888	Identifier	r_file_basename		1110773	0					
ANR	1110889	ArgumentList	r -> io -> desc -> name		1110773	1					
ANR	1110890	Argument	r -> io -> desc -> name		1110773	0					
ANR	1110891	PtrMemberAccess	r -> io -> desc -> name		1110773	0					
ANR	1110892	PtrMemberAccess	r -> io -> desc		1110773	0					
ANR	1110893	PtrMemberAccess	r -> io		1110773	0					
ANR	1110894	Identifier	r		1110773	0					
ANR	1110895	Identifier	io		1110773	1					
ANR	1110896	Identifier	desc		1110773	1					
ANR	1110897	Identifier	name		1110773	1					
ANR	1110898	PrimaryExpression	""""""		1110773	2					
ANR	1110899	IfStatement	if ( r -> cmdremote )		1110773	8					
ANR	1110900	Condition	r -> cmdremote	3020:5:94729:94740	1110773	0	True				
ANR	1110901	PtrMemberAccess	r -> cmdremote		1110773	0					
ANR	1110902	Identifier	r		1110773	0					
ANR	1110903	Identifier	cmdremote		1110773	1					
ANR	1110904	CompoundStatement		19:2:450:483	1110773	1					
ANR	1110905	IdentifierDeclStatement	"char * s = r_core_cmd_str ( r , ""s"" ) ;"	3021:2:94747:94780	1110773	0	True				
ANR	1110906	IdentifierDecl	"* s = r_core_cmd_str ( r , ""s"" )"		1110773	0					
ANR	1110907	IdentifierDeclType	char *		1110773	0					
ANR	1110908	Identifier	s		1110773	1					
ANR	1110909	AssignmentExpression	"* s = r_core_cmd_str ( r , ""s"" )"		1110773	2		=			
ANR	1110910	Identifier	s		1110773	0					
ANR	1110911	CallExpression	"r_core_cmd_str ( r , ""s"" )"		1110773	1					
ANR	1110912	Callee	r_core_cmd_str		1110773	0					
ANR	1110913	Identifier	r_core_cmd_str		1110773	0					
ANR	1110914	ArgumentList	r		1110773	1					
ANR	1110915	Argument	r		1110773	0					
ANR	1110916	Identifier	r		1110773	0					
ANR	1110917	Argument	"""s"""		1110773	1					
ANR	1110918	PrimaryExpression	"""s"""		1110773	0					
ANR	1110919	ExpressionStatement	"r -> offset = r_num_math ( NULL , s )"	3022:2:94784:94816	1110773	1	True				
ANR	1110920	AssignmentExpression	"r -> offset = r_num_math ( NULL , s )"		1110773	0		=			
ANR	1110921	PtrMemberAccess	r -> offset		1110773	0					
ANR	1110922	Identifier	r		1110773	0					
ANR	1110923	Identifier	offset		1110773	1					
ANR	1110924	CallExpression	"r_num_math ( NULL , s )"		1110773	1					
ANR	1110925	Callee	r_num_math		1110773	0					
ANR	1110926	Identifier	r_num_math		1110773	0					
ANR	1110927	ArgumentList	NULL		1110773	1					
ANR	1110928	Argument	NULL		1110773	0					
ANR	1110929	Identifier	NULL		1110773	0					
ANR	1110930	Argument	s		1110773	1					
ANR	1110931	Identifier	s		1110773	0					
ANR	1110932	ExpressionStatement	free ( s )	3023:2:94820:94828	1110773	2	True				
ANR	1110933	CallExpression	free ( s )		1110773	0					
ANR	1110934	Callee	free		1110773	0					
ANR	1110935	Identifier	free		1110773	0					
ANR	1110936	ArgumentList	s		1110773	1					
ANR	1110937	Argument	s		1110773	0					
ANR	1110938	Identifier	s		1110773	0					
ANR	1110939	ExpressionStatement	"remote = ""=!"""	3024:2:94832:94845	1110773	3	True				
ANR	1110940	AssignmentExpression	"remote = ""=!"""		1110773	0		=			
ANR	1110941	Identifier	remote		1110773	0					
ANR	1110942	PrimaryExpression	"""=!"""		1110773	1					
ANR	1110943	IfStatement	"if ( r_config_get_i ( r -> config , ""scr.color"" ) )"		1110773	9					
ANR	1110944	Condition	"r_config_get_i ( r -> config , ""scr.color"" )"	3027:5:94856:94894	1110773	0	True				
ANR	1110945	CallExpression	"r_config_get_i ( r -> config , ""scr.color"" )"		1110773	0					
ANR	1110946	Callee	r_config_get_i		1110773	0					
ANR	1110947	Identifier	r_config_get_i		1110773	0					
ANR	1110948	ArgumentList	r -> config		1110773	1					
ANR	1110949	Argument	r -> config		1110773	0					
ANR	1110950	PtrMemberAccess	r -> config		1110773	0					
ANR	1110951	Identifier	r		1110773	0					
ANR	1110952	Identifier	config		1110773	1					
ANR	1110953	Argument	"""scr.color"""		1110773	1					
ANR	1110954	PrimaryExpression	"""scr.color"""		1110773	0					
ANR	1110955	CompoundStatement		25:46:600:600	1110773	1					
ANR	1110956	ExpressionStatement	BEGIN = r -> cons -> context -> pal . prompt	3028:2:94901:94937	1110773	0	True				
ANR	1110957	AssignmentExpression	BEGIN = r -> cons -> context -> pal . prompt		1110773	0		=			
ANR	1110958	Identifier	BEGIN		1110773	0					
ANR	1110959	MemberAccess	r -> cons -> context -> pal . prompt		1110773	1					
ANR	1110960	PtrMemberAccess	r -> cons -> context -> pal		1110773	0					
ANR	1110961	PtrMemberAccess	r -> cons -> context		1110773	0					
ANR	1110962	PtrMemberAccess	r -> cons		1110773	0					
ANR	1110963	Identifier	r		1110773	0					
ANR	1110964	Identifier	cons		1110773	1					
ANR	1110965	Identifier	context		1110773	1					
ANR	1110966	Identifier	pal		1110773	1					
ANR	1110967	Identifier	prompt		1110773	1					
ANR	1110968	ExpressionStatement	END = r -> cons -> context -> pal . reset	3029:2:94941:94974	1110773	1	True				
ANR	1110969	AssignmentExpression	END = r -> cons -> context -> pal . reset		1110773	0		=			
ANR	1110970	Identifier	END		1110773	0					
ANR	1110971	MemberAccess	r -> cons -> context -> pal . reset		1110773	1					
ANR	1110972	PtrMemberAccess	r -> cons -> context -> pal		1110773	0					
ANR	1110973	PtrMemberAccess	r -> cons -> context		1110773	0					
ANR	1110974	PtrMemberAccess	r -> cons		1110773	0					
ANR	1110975	Identifier	r		1110773	0					
ANR	1110976	Identifier	cons		1110773	1					
ANR	1110977	Identifier	context		1110773	1					
ANR	1110978	Identifier	pal		1110773	1					
ANR	1110979	Identifier	reset		1110773	1					
ANR	1110980	IfStatement	"if ( r_config_get_i ( r -> config , ""asm.segoff"" ) )"		1110773	10					
ANR	1110981	Condition	"r_config_get_i ( r -> config , ""asm.segoff"" )"	3033:5:95038:95077	1110773	0	True				
ANR	1110982	CallExpression	"r_config_get_i ( r -> config , ""asm.segoff"" )"		1110773	0					
ANR	1110983	Callee	r_config_get_i		1110773	0					
ANR	1110984	Identifier	r_config_get_i		1110773	0					
ANR	1110985	ArgumentList	r -> config		1110773	1					
ANR	1110986	Argument	r -> config		1110773	0					
ANR	1110987	PtrMemberAccess	r -> config		1110773	0					
ANR	1110988	Identifier	r		1110773	0					
ANR	1110989	Identifier	config		1110773	1					
ANR	1110990	Argument	"""asm.segoff"""		1110773	1					
ANR	1110991	PrimaryExpression	"""asm.segoff"""		1110773	0					
ANR	1110992	CompoundStatement		33:2:800:862	1110773	1					
ANR	1110993	IdentifierDeclStatement	"ut32 a , b ;"	3034:2:95084:95093	1110773	0	True				
ANR	1110994	IdentifierDecl	a		1110773	0					
ANR	1110995	IdentifierDeclType	ut32		1110773	0					
ANR	1110996	Identifier	a		1110773	1					
ANR	1110997	IdentifierDecl	b		1110773	1					
ANR	1110998	IdentifierDeclType	ut32		1110773	0					
ANR	1110999	Identifier	b		1110773	1					
ANR	1111000	IdentifierDeclStatement	"unsigned int seggrn = r_config_get_i ( r -> config , ""asm.seggrn"" ) ;"	3035:2:95097:95159	1110773	1	True				
ANR	1111001	IdentifierDecl	"seggrn = r_config_get_i ( r -> config , ""asm.seggrn"" )"		1110773	0					
ANR	1111002	IdentifierDeclType	unsigned int		1110773	0					
ANR	1111003	Identifier	seggrn		1110773	1					
ANR	1111004	AssignmentExpression	"seggrn = r_config_get_i ( r -> config , ""asm.seggrn"" )"		1110773	2		=			
ANR	1111005	Identifier	seggrn		1110773	0					
ANR	1111006	CallExpression	"r_config_get_i ( r -> config , ""asm.seggrn"" )"		1110773	1					
ANR	1111007	Callee	r_config_get_i		1110773	0					
ANR	1111008	Identifier	r_config_get_i		1110773	0					
ANR	1111009	ArgumentList	r -> config		1110773	1					
ANR	1111010	Argument	r -> config		1110773	0					
ANR	1111011	PtrMemberAccess	r -> config		1110773	0					
ANR	1111012	Identifier	r		1110773	0					
ANR	1111013	Identifier	config		1110773	1					
ANR	1111014	Argument	"""asm.seggrn"""		1110773	1					
ANR	1111015	PrimaryExpression	"""asm.seggrn"""		1110773	0					
ANR	1111016	ExpressionStatement	a = ( ( r -> offset >> 16 ) << ( 16 - seggrn ) )	3037:2:95164:95204	1110773	2	True				
ANR	1111017	AssignmentExpression	a = ( ( r -> offset >> 16 ) << ( 16 - seggrn ) )		1110773	0		=			
ANR	1111018	Identifier	a		1110773	0					
ANR	1111019	ShiftExpression	( r -> offset >> 16 ) << ( 16 - seggrn )		1110773	1		<<			
ANR	1111020	ShiftExpression	r -> offset >> 16		1110773	0		>>			
ANR	1111021	PtrMemberAccess	r -> offset		1110773	0					
ANR	1111022	Identifier	r		1110773	0					
ANR	1111023	Identifier	offset		1110773	1					
ANR	1111024	PrimaryExpression	16		1110773	1					
ANR	1111025	AdditiveExpression	16 - seggrn		1110773	1		-			
ANR	1111026	PrimaryExpression	16		1110773	0					
ANR	1111027	Identifier	seggrn		1110773	1					
ANR	1111028	ExpressionStatement	b = ( r -> offset & 0xffff )	3038:2:95208:95232	1110773	3	True				
ANR	1111029	AssignmentExpression	b = ( r -> offset & 0xffff )		1110773	0		=			
ANR	1111030	Identifier	b		1110773	0					
ANR	1111031	BitAndExpression	r -> offset & 0xffff		1110773	1		&			
ANR	1111032	PtrMemberAccess	r -> offset		1110773	0					
ANR	1111033	Identifier	r		1110773	0					
ANR	1111034	Identifier	offset		1110773	1					
ANR	1111035	PrimaryExpression	0xffff		1110773	1					
ANR	1111036	ExpressionStatement	"snprintf ( tmp , 128 , ""%04x:%04x"" , a , b )"	3039:2:95236:95274	1110773	4	True				
ANR	1111037	CallExpression	"snprintf ( tmp , 128 , ""%04x:%04x"" , a , b )"		1110773	0					
ANR	1111038	Callee	snprintf		1110773	0					
ANR	1111039	Identifier	snprintf		1110773	0					
ANR	1111040	ArgumentList	tmp		1110773	1					
ANR	1111041	Argument	tmp		1110773	0					
ANR	1111042	Identifier	tmp		1110773	0					
ANR	1111043	Argument	128		1110773	1					
ANR	1111044	PrimaryExpression	128		1110773	0					
ANR	1111045	Argument	"""%04x:%04x"""		1110773	2					
ANR	1111046	PrimaryExpression	"""%04x:%04x"""		1110773	0					
ANR	1111047	Argument	a		1110773	3					
ANR	1111048	Identifier	a		1110773	0					
ANR	1111049	Argument	b		1110773	4					
ANR	1111050	Identifier	b		1110773	0					
ANR	1111051	ElseStatement	else		1110773	0					
ANR	1111052	CompoundStatement		40:2:1014:1035	1110773	0					
ANR	1111053	IdentifierDeclStatement	"char p [ 64 ] , sec [ 32 ] ;"	3041:2:95288:95307	1110773	0	True				
ANR	1111054	IdentifierDecl	p [ 64 ]		1110773	0					
ANR	1111055	IdentifierDeclType	char [ 64 ]		1110773	0					
ANR	1111056	Identifier	p		1110773	1					
ANR	1111057	PrimaryExpression	64		1110773	2					
ANR	1111058	IdentifierDecl	sec [ 32 ]		1110773	1					
ANR	1111059	IdentifierDeclType	char [ 32 ]		1110773	0					
ANR	1111060	Identifier	sec		1110773	1					
ANR	1111061	PrimaryExpression	32		1110773	2					
ANR	1111062	IdentifierDeclStatement	int promptset = false ;	3042:2:95311:95332	1110773	1	True				
ANR	1111063	IdentifierDecl	promptset = false		1110773	0					
ANR	1111064	IdentifierDeclType	int		1110773	0					
ANR	1111065	Identifier	promptset		1110773	1					
ANR	1111066	AssignmentExpression	promptset = false		1110773	2		=			
ANR	1111067	Identifier	false		1110773	0					
ANR	1111068	Identifier	false		1110773	1					
ANR	1111069	ExpressionStatement	sec [ 0 ] = '\\0'	3044:2:95337:95350	1110773	2	True				
ANR	1111070	AssignmentExpression	sec [ 0 ] = '\\0'		1110773	0		=			
ANR	1111071	ArrayIndexing	sec [ 0 ]		1110773	0					
ANR	1111072	Identifier	sec		1110773	0					
ANR	1111073	PrimaryExpression	0		1110773	1					
ANR	1111074	PrimaryExpression	'\\0'		1110773	1					
ANR	1111075	IfStatement	"if ( r_config_get_i ( r -> config , ""scr.prompt.flag"" ) )"		1110773	3					
ANR	1111076	Condition	"r_config_get_i ( r -> config , ""scr.prompt.flag"" )"	3045:6:95358:95402	1110773	0	True				
ANR	1111077	CallExpression	"r_config_get_i ( r -> config , ""scr.prompt.flag"" )"		1110773	0					
ANR	1111078	Callee	r_config_get_i		1110773	0					
ANR	1111079	Identifier	r_config_get_i		1110773	0					
ANR	1111080	ArgumentList	r -> config		1110773	1					
ANR	1111081	Argument	r -> config		1110773	0					
ANR	1111082	PtrMemberAccess	r -> config		1110773	0					
ANR	1111083	Identifier	r		1110773	0					
ANR	1111084	Identifier	config		1110773	1					
ANR	1111085	Argument	"""scr.prompt.flag"""		1110773	1					
ANR	1111086	PrimaryExpression	"""scr.prompt.flag"""		1110773	0					
ANR	1111087	CompoundStatement		43:53:1108:1108	1110773	1					
ANR	1111088	ExpressionStatement	"promptset = prompt_flag ( r , p , sizeof ( p ) )"	3046:3:95410:95452	1110773	0	True				
ANR	1111089	AssignmentExpression	"promptset = prompt_flag ( r , p , sizeof ( p ) )"		1110773	0		=			
ANR	1111090	Identifier	promptset		1110773	0					
ANR	1111091	CallExpression	"prompt_flag ( r , p , sizeof ( p ) )"		1110773	1					
ANR	1111092	Callee	prompt_flag		1110773	0					
ANR	1111093	Identifier	prompt_flag		1110773	0					
ANR	1111094	ArgumentList	r		1110773	1					
ANR	1111095	Argument	r		1110773	0					
ANR	1111096	Identifier	r		1110773	0					
ANR	1111097	Argument	p		1110773	1					
ANR	1111098	Identifier	p		1110773	0					
ANR	1111099	Argument	sizeof ( p )		1110773	2					
ANR	1111100	SizeofExpression	sizeof ( p )		1110773	0					
ANR	1111101	Sizeof	sizeof		1110773	0					
ANR	1111102	SizeofOperand	p		1110773	1					
ANR	1111103	IfStatement	"if ( r_config_get_i ( r -> config , ""scr.prompt.sect"" ) )"		1110773	4					
ANR	1111104	Condition	"r_config_get_i ( r -> config , ""scr.prompt.sect"" )"	3048:6:95464:95508	1110773	0	True				
ANR	1111105	CallExpression	"r_config_get_i ( r -> config , ""scr.prompt.sect"" )"		1110773	0					
ANR	1111106	Callee	r_config_get_i		1110773	0					
ANR	1111107	Identifier	r_config_get_i		1110773	0					
ANR	1111108	ArgumentList	r -> config		1110773	1					
ANR	1111109	Argument	r -> config		1110773	0					
ANR	1111110	PtrMemberAccess	r -> config		1110773	0					
ANR	1111111	Identifier	r		1110773	0					
ANR	1111112	Identifier	config		1110773	1					
ANR	1111113	Argument	"""scr.prompt.sect"""		1110773	1					
ANR	1111114	PrimaryExpression	"""scr.prompt.sect"""		1110773	0					
ANR	1111115	CompoundStatement		46:53:1214:1214	1110773	1					
ANR	1111116	ExpressionStatement	"prompt_sec ( r , sec , sizeof ( sec ) )"	3049:3:95516:95549	1110773	0	True				
ANR	1111117	CallExpression	"prompt_sec ( r , sec , sizeof ( sec ) )"		1110773	0					
ANR	1111118	Callee	prompt_sec		1110773	0					
ANR	1111119	Identifier	prompt_sec		1110773	0					
ANR	1111120	ArgumentList	r		1110773	1					
ANR	1111121	Argument	r		1110773	0					
ANR	1111122	Identifier	r		1110773	0					
ANR	1111123	Argument	sec		1110773	1					
ANR	1111124	Identifier	sec		1110773	0					
ANR	1111125	Argument	sizeof ( sec )		1110773	2					
ANR	1111126	SizeofExpression	sizeof ( sec )		1110773	0					
ANR	1111127	Sizeof	sizeof		1110773	0					
ANR	1111128	SizeofOperand	sec		1110773	1					
ANR	1111129	IfStatement	if ( ! promptset )		1110773	5					
ANR	1111130	Condition	! promptset	3052:6:95562:95571	1110773	0	True				
ANR	1111131	UnaryOperationExpression	! promptset		1110773	0					
ANR	1111132	UnaryOperator	!		1110773	0					
ANR	1111133	Identifier	promptset		1110773	1					
ANR	1111134	CompoundStatement		50:18:1277:1277	1110773	1					
ANR	1111135	IfStatement	if ( r -> print -> wide_offsets && r -> dbg -> bits & R_SYS_BITS_64 )		1110773	0					
ANR	1111136	Condition	r -> print -> wide_offsets && r -> dbg -> bits & R_SYS_BITS_64	3053:7:95583:95636	1110773	0	True				
ANR	1111137	AndExpression	r -> print -> wide_offsets && r -> dbg -> bits & R_SYS_BITS_64		1110773	0		&&			
ANR	1111138	PtrMemberAccess	r -> print -> wide_offsets		1110773	0					
ANR	1111139	PtrMemberAccess	r -> print		1110773	0					
ANR	1111140	Identifier	r		1110773	0					
ANR	1111141	Identifier	print		1110773	1					
ANR	1111142	Identifier	wide_offsets		1110773	1					
ANR	1111143	BitAndExpression	r -> dbg -> bits & R_SYS_BITS_64		1110773	1		&			
ANR	1111144	PtrMemberAccess	r -> dbg -> bits		1110773	0					
ANR	1111145	PtrMemberAccess	r -> dbg		1110773	0					
ANR	1111146	Identifier	r		1110773	0					
ANR	1111147	Identifier	dbg		1110773	1					
ANR	1111148	Identifier	bits		1110773	1					
ANR	1111149	Identifier	R_SYS_BITS_64		1110773	1					
ANR	1111150	CompoundStatement		51:63:1342:1342	1110773	1					
ANR	1111151	Statement	snprintf	3054:4:95645:95652	1110773	0	True				
ANR	1111152	Statement	(	3054:13:95654:95654	1110773	1	True				
ANR	1111153	Statement	p	3054:14:95655:95655	1110773	2	True				
ANR	1111154	Statement	","	3054:15:95656:95656	1110773	3	True				
ANR	1111155	Statement	sizeof	3054:17:95658:95663	1110773	4	True				
ANR	1111156	Statement	(	3054:24:95665:95665	1110773	5	True				
ANR	1111157	Statement	p	3054:25:95666:95666	1110773	6	True				
ANR	1111158	Statement	)	3054:26:95667:95667	1110773	7	True				
ANR	1111159	Statement	","	3054:27:95668:95668	1110773	8	True				
ANR	1111160	Statement	"""0x%016"""	3054:29:95670:95677	1110773	9	True				
ANR	1111161	Statement	PFMT64x	3054:38:95679:95685	1110773	10	True				
ANR	1111162	Statement	","	3054:45:95686:95686	1110773	11	True				
ANR	1111163	Statement	r	3054:47:95688:95688	1110773	12	True				
ANR	1111164	Statement	->	3054:48:95689:95690	1110773	13	True				
ANR	1111165	Statement	offset	3054:50:95691:95696	1110773	14	True				
ANR	1111166	Statement	)	3054:56:95697:95697	1110773	15	True				
ANR	1111167	ExpressionStatement		3054:57:95698:95698	1110773	16	True				
ANR	1111168	ElseStatement	else		1110773	0					
ANR	1111169	CompoundStatement		53:10:1413:1413	1110773	0					
ANR	1111170	Statement	snprintf	3056:4:95716:95723	1110773	0	True				
ANR	1111171	Statement	(	3056:13:95725:95725	1110773	1	True				
ANR	1111172	Statement	p	3056:14:95726:95726	1110773	2	True				
ANR	1111173	Statement	","	3056:15:95727:95727	1110773	3	True				
ANR	1111174	Statement	sizeof	3056:17:95729:95734	1110773	4	True				
ANR	1111175	Statement	(	3056:24:95736:95736	1110773	5	True				
ANR	1111176	Statement	p	3056:25:95737:95737	1110773	6	True				
ANR	1111177	Statement	)	3056:26:95738:95738	1110773	7	True				
ANR	1111178	Statement	","	3056:27:95739:95739	1110773	8	True				
ANR	1111179	Statement	"""0x%08"""	3056:29:95741:95747	1110773	9	True				
ANR	1111180	Statement	PFMT64x	3056:37:95749:95755	1110773	10	True				
ANR	1111181	Statement	","	3056:44:95756:95756	1110773	11	True				
ANR	1111182	Statement	r	3056:46:95758:95758	1110773	12	True				
ANR	1111183	Statement	->	3056:47:95759:95760	1110773	13	True				
ANR	1111184	Statement	offset	3056:49:95761:95766	1110773	14	True				
ANR	1111185	Statement	)	3056:55:95767:95767	1110773	15	True				
ANR	1111186	ExpressionStatement		3056:56:95768:95768	1110773	16	True				
ANR	1111187	ExpressionStatement	"snprintf ( tmp , sizeof ( tmp ) , ""%s%s"" , sec , p )"	3059:2:95781:95825	1110773	6	True				
ANR	1111188	CallExpression	"snprintf ( tmp , sizeof ( tmp ) , ""%s%s"" , sec , p )"		1110773	0					
ANR	1111189	Callee	snprintf		1110773	0					
ANR	1111190	Identifier	snprintf		1110773	0					
ANR	1111191	ArgumentList	tmp		1110773	1					
ANR	1111192	Argument	tmp		1110773	0					
ANR	1111193	Identifier	tmp		1110773	0					
ANR	1111194	Argument	sizeof ( tmp )		1110773	1					
ANR	1111195	SizeofExpression	sizeof ( tmp )		1110773	0					
ANR	1111196	Sizeof	sizeof		1110773	0					
ANR	1111197	SizeofOperand	tmp		1110773	1					
ANR	1111198	Argument	"""%s%s"""		1110773	2					
ANR	1111199	PrimaryExpression	"""%s%s"""		1110773	0					
ANR	1111200	Argument	sec		1110773	3					
ANR	1111201	Identifier	sec		1110773	0					
ANR	1111202	Argument	p		1110773	4					
ANR	1111203	Identifier	p		1110773	0					
ANR	1111204	ExpressionStatement	"chop_prompt ( filename , tmp , 128 )"	3062:1:95832:95864	1110773	11	True				
ANR	1111205	CallExpression	"chop_prompt ( filename , tmp , 128 )"		1110773	0					
ANR	1111206	Callee	chop_prompt		1110773	0					
ANR	1111207	Identifier	chop_prompt		1110773	0					
ANR	1111208	ArgumentList	filename		1110773	1					
ANR	1111209	Argument	filename		1110773	0					
ANR	1111210	Identifier	filename		1110773	0					
ANR	1111211	Argument	tmp		1110773	1					
ANR	1111212	Identifier	tmp		1110773	0					
ANR	1111213	Argument	128		1110773	2					
ANR	1111214	PrimaryExpression	128		1110773	0					
ANR	1111215	IdentifierDeclStatement	"char * prompt = r_str_newf ( ""%s%s[%s%s]>%s "" , filename , BEGIN , remote , tmp , END ) ;"	3063:1:95867:95948	1110773	12	True				
ANR	1111216	IdentifierDecl	"* prompt = r_str_newf ( ""%s%s[%s%s]>%s "" , filename , BEGIN , remote , tmp , END )"		1110773	0					
ANR	1111217	IdentifierDeclType	char *		1110773	0					
ANR	1111218	Identifier	prompt		1110773	1					
ANR	1111219	AssignmentExpression	"* prompt = r_str_newf ( ""%s%s[%s%s]>%s "" , filename , BEGIN , remote , tmp , END )"		1110773	2		=			
ANR	1111220	Identifier	prompt		1110773	0					
ANR	1111221	CallExpression	"r_str_newf ( ""%s%s[%s%s]>%s "" , filename , BEGIN , remote , tmp , END )"		1110773	1					
ANR	1111222	Callee	r_str_newf		1110773	0					
ANR	1111223	Identifier	r_str_newf		1110773	0					
ANR	1111224	ArgumentList	"""%s%s[%s%s]>%s """		1110773	1					
ANR	1111225	Argument	"""%s%s[%s%s]>%s """		1110773	0					
ANR	1111226	PrimaryExpression	"""%s%s[%s%s]>%s """		1110773	0					
ANR	1111227	Argument	filename		1110773	1					
ANR	1111228	Identifier	filename		1110773	0					
ANR	1111229	Argument	BEGIN		1110773	2					
ANR	1111230	Identifier	BEGIN		1110773	0					
ANR	1111231	Argument	remote		1110773	3					
ANR	1111232	Identifier	remote		1110773	0					
ANR	1111233	Argument	tmp		1110773	4					
ANR	1111234	Identifier	tmp		1110773	0					
ANR	1111235	Argument	END		1110773	5					
ANR	1111236	Identifier	END		1110773	0					
ANR	1111237	ExpressionStatement	"r_line_set_prompt ( prompt ? prompt : """" )"	3065:1:95951:95991	1110773	13	True				
ANR	1111238	CallExpression	"r_line_set_prompt ( prompt ? prompt : """" )"		1110773	0					
ANR	1111239	Callee	r_line_set_prompt		1110773	0					
ANR	1111240	Identifier	r_line_set_prompt		1110773	0					
ANR	1111241	ArgumentList	"prompt ? prompt : """""		1110773	1					
ANR	1111242	Argument	"prompt ? prompt : """""		1110773	0					
ANR	1111243	ConditionalExpression	"prompt ? prompt : """""		1110773	0					
ANR	1111244	Condition	prompt		1110773	0					
ANR	1111245	Identifier	prompt		1110773	0					
ANR	1111246	Identifier	prompt		1110773	1					
ANR	1111247	PrimaryExpression	""""""		1110773	2					
ANR	1111248	ExpressionStatement	R_FREE ( filename )	3067:1:95995:96012	1110773	14	True				
ANR	1111249	CallExpression	R_FREE ( filename )		1110773	0					
ANR	1111250	Callee	R_FREE		1110773	0					
ANR	1111251	Identifier	R_FREE		1110773	0					
ANR	1111252	ArgumentList	filename		1110773	1					
ANR	1111253	Argument	filename		1110773	0					
ANR	1111254	Identifier	filename		1110773	0					
ANR	1111255	ExpressionStatement	R_FREE ( prompt )	3068:1:96015:96030	1110773	15	True				
ANR	1111256	CallExpression	R_FREE ( prompt )		1110773	0					
ANR	1111257	Callee	R_FREE		1110773	0					
ANR	1111258	Identifier	R_FREE		1110773	0					
ANR	1111259	ArgumentList	prompt		1110773	1					
ANR	1111260	Argument	prompt		1110773	0					
ANR	1111261	Identifier	prompt		1110773	0					
ANR	1111262	ReturnType	static void		1110773	1					
ANR	1111263	Identifier	set_prompt		1110773	2					
ANR	1111264	ParameterList	RCore * r		1110773	3					
ANR	1111265	Parameter	RCore * r	3003:24:94286:94293	1110773	0	True				
ANR	1111266	ParameterType	RCore *		1110773	0					
ANR	1111267	Identifier	r		1110773	1					
ANR	1111268	CFGEntryNode	ENTRY		1110773		True				
ANR	1111269	CFGExitNode	EXIT		1110773		True				
ANR	1111270	Symbol	prompt_flag		1110773						
ANR	1111271	Symbol	r_core_cmd_str		1110773						
ANR	1111272	Symbol	* r -> io -> desc		1110773						
ANR	1111273	Symbol	r -> cons -> context -> pal		1110773						
ANR	1111274	Symbol	remote		1110773						
ANR	1111275	Symbol	* * r -> io		1110773						
ANR	1111276	Symbol	seggrn		1110773						
ANR	1111277	Symbol	* r -> cons		1110773						
ANR	1111278	Symbol	promptset		1110773						
ANR	1111279	Symbol	tmp		1110773						
ANR	1111280	Symbol	* * r -> cons		1110773						
ANR	1111281	Symbol	r -> cons -> context -> pal . prompt		1110773						
ANR	1111282	Symbol	R_SYS_BITS_64		1110773						
ANR	1111283	Symbol	r -> offset		1110773						
ANR	1111284	Symbol	NULL		1110773						
ANR	1111285	Symbol	* * * r		1110773						
ANR	1111286	Symbol	filename		1110773						
ANR	1111287	Symbol	* r -> dbg		1110773						
ANR	1111288	Symbol	r_config_get_i		1110773						
ANR	1111289	Symbol	END		1110773						
ANR	1111290	Symbol	* cmdprompt		1110773						
ANR	1111291	Symbol	* r -> cons -> context		1110773						
ANR	1111292	Symbol	* sec		1110773						
ANR	1111293	Symbol	r -> dbg -> bits		1110773						
ANR	1111294	Symbol	r -> print -> wide_offsets		1110773						
ANR	1111295	Symbol	r -> cmdremote		1110773						
ANR	1111296	Symbol	cmdprompt		1110773						
ANR	1111297	Symbol	r -> io -> desc -> name		1110773						
ANR	1111298	Symbol	r -> cons		1110773						
ANR	1111299	Symbol	r_config_get		1110773						
ANR	1111300	Symbol	* r -> io		1110773						
ANR	1111301	Symbol	BEGIN		1110773						
ANR	1111302	Symbol	r_str_newf		1110773						
ANR	1111303	Symbol	r_num_math		1110773						
ANR	1111304	Symbol	sec		1110773						
ANR	1111305	Symbol	* * r		1110773						
ANR	1111306	Symbol	r -> cons -> context		1110773						
ANR	1111307	Symbol	a		1110773						
ANR	1111308	Symbol	b		1110773						
ANR	1111309	Symbol	r -> cons -> context -> pal . reset		1110773						
ANR	1111310	Symbol	false		1110773						
ANR	1111311	Symbol	r_file_basename		1110773						
ANR	1111312	Symbol	* r -> print		1110773						
ANR	1111313	Symbol	p		1110773						
ANR	1111314	Symbol	r		1110773						
ANR	1111315	Symbol	s		1110773						
ANR	1111316	Symbol	r -> print		1110773						
ANR	1111317	Symbol	r -> dbg		1110773						
ANR	1111318	Symbol	strdup		1110773						
ANR	1111319	Symbol	* r		1110773						
ANR	1111320	Symbol	r -> io -> desc		1110773						
ANR	1111321	Symbol	prompt		1110773						
ANR	1111322	Symbol	r -> config		1110773						
ANR	1111323	Symbol	r -> io		1110773						
ANR	1111324	Function	r_core_prompt	3071:0:96035:96570							
ANR	1111325	FunctionDef	"r_core_prompt (RCore * r , int sync)"		1111324	0					
ANR	1111326	CompoundStatement		3071:44:96079:96570	1111324	0					
ANR	1111327	IdentifierDeclStatement	char line [ 4096 ] ;	3072:1:96082:96097	1111324	0	True				
ANR	1111328	IdentifierDecl	line [ 4096 ]		1111324	0					
ANR	1111329	IdentifierDeclType	char [ 4096 ]		1111324	0					
ANR	1111330	Identifier	line		1111324	1					
ANR	1111331	PrimaryExpression	4096		1111324	2					
ANR	1111332	IdentifierDeclStatement	int rnv = r -> num -> value ;	3074:1:96101:96124	1111324	1	True				
ANR	1111333	IdentifierDecl	rnv = r -> num -> value		1111324	0					
ANR	1111334	IdentifierDeclType	int		1111324	0					
ANR	1111335	Identifier	rnv		1111324	1					
ANR	1111336	AssignmentExpression	rnv = r -> num -> value		1111324	2		=			
ANR	1111337	Identifier	rnv		1111324	0					
ANR	1111338	PtrMemberAccess	r -> num -> value		1111324	1					
ANR	1111339	PtrMemberAccess	r -> num		1111324	0					
ANR	1111340	Identifier	r		1111324	0					
ANR	1111341	Identifier	num		1111324	1					
ANR	1111342	Identifier	value		1111324	1					
ANR	1111343	ExpressionStatement	set_prompt ( r )	3075:1:96127:96141	1111324	2	True				
ANR	1111344	CallExpression	set_prompt ( r )		1111324	0					
ANR	1111345	Callee	set_prompt		1111324	0					
ANR	1111346	Identifier	set_prompt		1111324	0					
ANR	1111347	ArgumentList	r		1111324	1					
ANR	1111348	Argument	r		1111324	0					
ANR	1111349	Identifier	r		1111324	0					
ANR	1111350	IdentifierDeclStatement	"int ret = r_cons_fgets ( line , sizeof ( line ) , 0 , NULL ) ;"	3076:1:96144:96197	1111324	3	True				
ANR	1111351	IdentifierDecl	"ret = r_cons_fgets ( line , sizeof ( line ) , 0 , NULL )"		1111324	0					
ANR	1111352	IdentifierDeclType	int		1111324	0					
ANR	1111353	Identifier	ret		1111324	1					
ANR	1111354	AssignmentExpression	"ret = r_cons_fgets ( line , sizeof ( line ) , 0 , NULL )"		1111324	2		=			
ANR	1111355	Identifier	ret		1111324	0					
ANR	1111356	CallExpression	"r_cons_fgets ( line , sizeof ( line ) , 0 , NULL )"		1111324	1					
ANR	1111357	Callee	r_cons_fgets		1111324	0					
ANR	1111358	Identifier	r_cons_fgets		1111324	0					
ANR	1111359	ArgumentList	line		1111324	1					
ANR	1111360	Argument	line		1111324	0					
ANR	1111361	Identifier	line		1111324	0					
ANR	1111362	Argument	sizeof ( line )		1111324	1					
ANR	1111363	SizeofExpression	sizeof ( line )		1111324	0					
ANR	1111364	Sizeof	sizeof		1111324	0					
ANR	1111365	SizeofOperand	line		1111324	1					
ANR	1111366	Argument	0		1111324	2					
ANR	1111367	PrimaryExpression	0		1111324	0					
ANR	1111368	Argument	NULL		1111324	3					
ANR	1111369	Identifier	NULL		1111324	0					
ANR	1111370	IfStatement	if ( ret == - 2 )		1111324	4					
ANR	1111371	Condition	ret == - 2	3077:5:96204:96212	1111324	0	True				
ANR	1111372	EqualityExpression	ret == - 2		1111324	0		==			
ANR	1111373	Identifier	ret		1111324	0					
ANR	1111374	UnaryOperationExpression	- 2		1111324	1					
ANR	1111375	UnaryOperator	-		1111324	0					
ANR	1111376	PrimaryExpression	2		1111324	1					
ANR	1111377	CompoundStatement		7:16:135:135	1111324	1					
ANR	1111378	ReturnStatement	return R_CORE_CMD_EXIT ;	3078:2:96219:96241	1111324	0	True				
ANR	1111379	Identifier	R_CORE_CMD_EXIT		1111324	0					
ANR	1111380	IfStatement	if ( ret == - 1 )		1111324	5					
ANR	1111381	Condition	ret == - 1	3080:5:96257:96265	1111324	0	True				
ANR	1111382	EqualityExpression	ret == - 1		1111324	0		==			
ANR	1111383	Identifier	ret		1111324	0					
ANR	1111384	UnaryOperationExpression	- 1		1111324	1					
ANR	1111385	UnaryOperator	-		1111324	0					
ANR	1111386	PrimaryExpression	1		1111324	1					
ANR	1111387	CompoundStatement		10:16:188:188	1111324	1					
ANR	1111388	ReturnStatement	return false ;	3081:2:96272:96284	1111324	0	True				
ANR	1111389	Identifier	false		1111324	0					
ANR	1111390	ExpressionStatement	r -> num -> value = rnv	3083:1:96307:96326	1111324	6	True				
ANR	1111391	AssignmentExpression	r -> num -> value = rnv		1111324	0		=			
ANR	1111392	PtrMemberAccess	r -> num -> value		1111324	0					
ANR	1111393	PtrMemberAccess	r -> num		1111324	0					
ANR	1111394	Identifier	r		1111324	0					
ANR	1111395	Identifier	num		1111324	1					
ANR	1111396	Identifier	value		1111324	1					
ANR	1111397	Identifier	rnv		1111324	1					
ANR	1111398	IfStatement	if ( sync )		1111324	7					
ANR	1111399	Condition	sync	3084:5:96333:96336	1111324	0	True				
ANR	1111400	Identifier	sync		1111324	0					
ANR	1111401	CompoundStatement		14:11:259:259	1111324	1					
ANR	1111402	ReturnStatement	return r_core_prompt_exec ( r ) ;	3085:2:96343:96372	1111324	0	True				
ANR	1111403	CallExpression	r_core_prompt_exec ( r )		1111324	0					
ANR	1111404	Callee	r_core_prompt_exec		1111324	0					
ANR	1111405	Identifier	r_core_prompt_exec		1111324	0					
ANR	1111406	ArgumentList	r		1111324	1					
ANR	1111407	Argument	r		1111324	0					
ANR	1111408	Identifier	r		1111324	0					
ANR	1111409	ExpressionStatement	free ( r -> cmdqueue )	3087:1:96378:96396	1111324	8	True				
ANR	1111410	CallExpression	free ( r -> cmdqueue )		1111324	0					
ANR	1111411	Callee	free		1111324	0					
ANR	1111412	Identifier	free		1111324	0					
ANR	1111413	ArgumentList	r -> cmdqueue		1111324	1					
ANR	1111414	Argument	r -> cmdqueue		1111324	0					
ANR	1111415	PtrMemberAccess	r -> cmdqueue		1111324	0					
ANR	1111416	Identifier	r		1111324	0					
ANR	1111417	Identifier	cmdqueue		1111324	1					
ANR	1111418	ExpressionStatement	r -> cmdqueue = strdup ( line )	3088:1:96399:96426	1111324	9	True				
ANR	1111419	AssignmentExpression	r -> cmdqueue = strdup ( line )		1111324	0		=			
ANR	1111420	PtrMemberAccess	r -> cmdqueue		1111324	0					
ANR	1111421	Identifier	r		1111324	0					
ANR	1111422	Identifier	cmdqueue		1111324	1					
ANR	1111423	CallExpression	strdup ( line )		1111324	1					
ANR	1111424	Callee	strdup		1111324	0					
ANR	1111425	Identifier	strdup		1111324	0					
ANR	1111426	ArgumentList	line		1111324	1					
ANR	1111427	Argument	line		1111324	0					
ANR	1111428	Identifier	line		1111324	0					
ANR	1111429	IfStatement	if ( r -> scr_gadgets && * line && * line != 'q' )		1111324	10					
ANR	1111430	Condition	r -> scr_gadgets && * line && * line != 'q'	3089:12:96440:96478	1111324	0	True				
ANR	1111431	AndExpression	r -> scr_gadgets && * line && * line != 'q'		1111324	0		&&			
ANR	1111432	PtrMemberAccess	r -> scr_gadgets		1111324	0					
ANR	1111433	Identifier	r		1111324	0					
ANR	1111434	Identifier	scr_gadgets		1111324	1					
ANR	1111435	AndExpression	* line && * line != 'q'		1111324	1		&&			
ANR	1111436	UnaryOperationExpression	* line		1111324	0					
ANR	1111437	UnaryOperator	*		1111324	0					
ANR	1111438	Identifier	line		1111324	1					
ANR	1111439	EqualityExpression	* line != 'q'		1111324	1		!=			
ANR	1111440	UnaryOperationExpression	* line		1111324	0					
ANR	1111441	UnaryOperator	*		1111324	0					
ANR	1111442	Identifier	line		1111324	1					
ANR	1111443	PrimaryExpression	'q'		1111324	1					
ANR	1111444	CompoundStatement		19:53:401:401	1111324	1					
ANR	1111445	ExpressionStatement	"r_core_cmd0 ( r , ""pg"" )"	3090:16:96499:96520	1111324	0	True				
ANR	1111446	CallExpression	"r_core_cmd0 ( r , ""pg"" )"		1111324	0					
ANR	1111447	Callee	r_core_cmd0		1111324	0					
ANR	1111448	Identifier	r_core_cmd0		1111324	0					
ANR	1111449	ArgumentList	r		1111324	1					
ANR	1111450	Argument	r		1111324	0					
ANR	1111451	Identifier	r		1111324	0					
ANR	1111452	Argument	"""pg"""		1111324	1					
ANR	1111453	PrimaryExpression	"""pg"""		1111324	0					
ANR	1111454	ExpressionStatement	r -> num -> value = r -> rc	3092:1:96533:96554	1111324	11	True				
ANR	1111455	AssignmentExpression	r -> num -> value = r -> rc		1111324	0		=			
ANR	1111456	PtrMemberAccess	r -> num -> value		1111324	0					
ANR	1111457	PtrMemberAccess	r -> num		1111324	0					
ANR	1111458	Identifier	r		1111324	0					
ANR	1111459	Identifier	num		1111324	1					
ANR	1111460	Identifier	value		1111324	1					
ANR	1111461	PtrMemberAccess	r -> rc		1111324	1					
ANR	1111462	Identifier	r		1111324	0					
ANR	1111463	Identifier	rc		1111324	1					
ANR	1111464	ReturnStatement	return true ;	3093:1:96557:96568	1111324	12	True				
ANR	1111465	Identifier	true		1111324	0					
ANR	1111466	ReturnType	R_API int		1111324	1					
ANR	1111467	Identifier	r_core_prompt		1111324	2					
ANR	1111468	ParameterList	"RCore * r , int sync"		1111324	3					
ANR	1111469	Parameter	RCore * r	3071:24:96059:96066	1111324	0	True				
ANR	1111470	ParameterType	RCore *		1111324	0					
ANR	1111471	Identifier	r		1111324	1					
ANR	1111472	Parameter	int sync	3071:34:96069:96076	1111324	1	True				
ANR	1111473	ParameterType	int		1111324	0					
ANR	1111474	Identifier	sync		1111324	1					
ANR	1111475	CFGEntryNode	ENTRY		1111324		True				
ANR	1111476	CFGExitNode	EXIT		1111324		True				
ANR	1111477	Symbol	ret		1111324						
ANR	1111478	Symbol	NULL		1111324						
ANR	1111479	Symbol	line		1111324						
ANR	1111480	Symbol	r_cons_fgets		1111324						
ANR	1111481	Symbol	false		1111324						
ANR	1111482	Symbol	r_core_prompt_exec		1111324						
ANR	1111483	Symbol	r -> rc		1111324						
ANR	1111484	Symbol	r -> num -> value		1111324						
ANR	1111485	Symbol	* line		1111324						
ANR	1111486	Symbol	sync		1111324						
ANR	1111487	Symbol	R_CORE_CMD_EXIT		1111324						
ANR	1111488	Symbol	* r -> num		1111324						
ANR	1111489	Symbol	r		1111324						
ANR	1111490	Symbol	r -> num		1111324						
ANR	1111491	Symbol	true		1111324						
ANR	1111492	Symbol	* * r		1111324						
ANR	1111493	Symbol	rnv		1111324						
ANR	1111494	Symbol	strdup		1111324						
ANR	1111495	Symbol	* r		1111324						
ANR	1111496	Symbol	r -> scr_gadgets		1111324						
ANR	1111497	Symbol	r -> cmdqueue		1111324						
ANR	1111498	DeclStmt									
ANR	1111499	Decl							extern void	"extern void ( RCore * core , const char * input )"	r_core_echo
ANR	1111500	Function	r_core_prompt_exec	3098:0:96631:97055							
ANR	1111501	FunctionDef	r_core_prompt_exec (RCore * r)		1111500	0					
ANR	1111502	CompoundStatement		3098:39:96670:97055	1111500	0					
ANR	1111503	IdentifierDeclStatement	"int ret = r_core_cmd ( r , r -> cmdqueue , true ) ;"	3099:1:96673:96716	1111500	0	True				
ANR	1111504	IdentifierDecl	"ret = r_core_cmd ( r , r -> cmdqueue , true )"		1111500	0					
ANR	1111505	IdentifierDeclType	int		1111500	0					
ANR	1111506	Identifier	ret		1111500	1					
ANR	1111507	AssignmentExpression	"ret = r_core_cmd ( r , r -> cmdqueue , true )"		1111500	2		=			
ANR	1111508	Identifier	ret		1111500	0					
ANR	1111509	CallExpression	"r_core_cmd ( r , r -> cmdqueue , true )"		1111500	1					
ANR	1111510	Callee	r_core_cmd		1111500	0					
ANR	1111511	Identifier	r_core_cmd		1111500	0					
ANR	1111512	ArgumentList	r		1111500	1					
ANR	1111513	Argument	r		1111500	0					
ANR	1111514	Identifier	r		1111500	0					
ANR	1111515	Argument	r -> cmdqueue		1111500	1					
ANR	1111516	PtrMemberAccess	r -> cmdqueue		1111500	0					
ANR	1111517	Identifier	r		1111500	0					
ANR	1111518	Identifier	cmdqueue		1111500	1					
ANR	1111519	Argument	true		1111500	2					
ANR	1111520	Identifier	true		1111500	0					
ANR	1111521	ExpressionStatement	r -> rc = r -> num -> value	3100:1:96719:96740	1111500	1	True				
ANR	1111522	AssignmentExpression	r -> rc = r -> num -> value		1111500	0		=			
ANR	1111523	PtrMemberAccess	r -> rc		1111500	0					
ANR	1111524	Identifier	r		1111500	0					
ANR	1111525	Identifier	rc		1111500	1					
ANR	1111526	PtrMemberAccess	r -> num -> value		1111500	1					
ANR	1111527	PtrMemberAccess	r -> num		1111500	0					
ANR	1111528	Identifier	r		1111500	0					
ANR	1111529	Identifier	num		1111500	1					
ANR	1111530	Identifier	value		1111500	1					
ANR	1111531	IfStatement	if ( r -> cons && r -> cons -> use_tts )		1111500	2					
ANR	1111532	Condition	r -> cons && r -> cons -> use_tts	3102:5:96795:96821	1111500	0	True				
ANR	1111533	AndExpression	r -> cons && r -> cons -> use_tts		1111500	0		&&			
ANR	1111534	PtrMemberAccess	r -> cons		1111500	0					
ANR	1111535	Identifier	r		1111500	0					
ANR	1111536	Identifier	cons		1111500	1					
ANR	1111537	PtrMemberAccess	r -> cons -> use_tts		1111500	1					
ANR	1111538	PtrMemberAccess	r -> cons		1111500	0					
ANR	1111539	Identifier	r		1111500	0					
ANR	1111540	Identifier	cons		1111500	1					
ANR	1111541	Identifier	use_tts		1111500	1					
ANR	1111542	CompoundStatement		6:2:157:194	1111500	1					
ANR	1111543	IdentifierDeclStatement	const char * buf = r_cons_get_buffer ( ) ;	3103:2:96828:96865	1111500	0	True				
ANR	1111544	IdentifierDecl	* buf = r_cons_get_buffer ( )		1111500	0					
ANR	1111545	IdentifierDeclType	const char *		1111500	0					
ANR	1111546	Identifier	buf		1111500	1					
ANR	1111547	AssignmentExpression	* buf = r_cons_get_buffer ( )		1111500	2		=			
ANR	1111548	Identifier	buf		1111500	0					
ANR	1111549	CallExpression	r_cons_get_buffer ( )		1111500	1					
ANR	1111550	Callee	r_cons_get_buffer		1111500	0					
ANR	1111551	Identifier	r_cons_get_buffer		1111500	0					
ANR	1111552	ArgumentList			1111500	1					
ANR	1111553	ExpressionStatement	"r_sys_tts ( buf , true )"	3104:2:96869:96890	1111500	1	True				
ANR	1111554	CallExpression	"r_sys_tts ( buf , true )"		1111500	0					
ANR	1111555	Callee	r_sys_tts		1111500	0					
ANR	1111556	Identifier	r_sys_tts		1111500	0					
ANR	1111557	ArgumentList	buf		1111500	1					
ANR	1111558	Argument	buf		1111500	0					
ANR	1111559	Identifier	buf		1111500	0					
ANR	1111560	Argument	true		1111500	1					
ANR	1111561	Identifier	true		1111500	0					
ANR	1111562	ExpressionStatement	r -> cons -> use_tts = false	3105:2:96894:96918	1111500	2	True				
ANR	1111563	AssignmentExpression	r -> cons -> use_tts = false		1111500	0		=			
ANR	1111564	PtrMemberAccess	r -> cons -> use_tts		1111500	0					
ANR	1111565	PtrMemberAccess	r -> cons		1111500	0					
ANR	1111566	Identifier	r		1111500	0					
ANR	1111567	Identifier	cons		1111500	1					
ANR	1111568	Identifier	use_tts		1111500	1					
ANR	1111569	Identifier	false		1111500	1					
ANR	1111570	ExpressionStatement	r_cons_echo ( NULL )	3107:1:96924:96942	1111500	3	True				
ANR	1111571	CallExpression	r_cons_echo ( NULL )		1111500	0					
ANR	1111572	Callee	r_cons_echo		1111500	0					
ANR	1111573	Identifier	r_cons_echo		1111500	0					
ANR	1111574	ArgumentList	NULL		1111500	1					
ANR	1111575	Argument	NULL		1111500	0					
ANR	1111576	Identifier	NULL		1111500	0					
ANR	1111577	ExpressionStatement	r_cons_flush ( )	3108:1:96945:96960	1111500	4	True				
ANR	1111578	CallExpression	r_cons_flush ( )		1111500	0					
ANR	1111579	Callee	r_cons_flush		1111500	0					
ANR	1111580	Identifier	r_cons_flush		1111500	0					
ANR	1111581	ArgumentList			1111500	1					
ANR	1111582	IfStatement	if ( r -> cons && r -> cons -> line && r -> cons -> line -> zerosep )		1111500	5					
ANR	1111583	Condition	r -> cons && r -> cons -> line && r -> cons -> line -> zerosep	3109:5:96967:97016	1111500	0	True				
ANR	1111584	AndExpression	r -> cons && r -> cons -> line && r -> cons -> line -> zerosep		1111500	0		&&			
ANR	1111585	PtrMemberAccess	r -> cons		1111500	0					
ANR	1111586	Identifier	r		1111500	0					
ANR	1111587	Identifier	cons		1111500	1					
ANR	1111588	AndExpression	r -> cons -> line && r -> cons -> line -> zerosep		1111500	1		&&			
ANR	1111589	PtrMemberAccess	r -> cons -> line		1111500	0					
ANR	1111590	PtrMemberAccess	r -> cons		1111500	0					
ANR	1111591	Identifier	r		1111500	0					
ANR	1111592	Identifier	cons		1111500	1					
ANR	1111593	Identifier	line		1111500	1					
ANR	1111594	PtrMemberAccess	r -> cons -> line -> zerosep		1111500	1					
ANR	1111595	PtrMemberAccess	r -> cons -> line		1111500	0					
ANR	1111596	PtrMemberAccess	r -> cons		1111500	0					
ANR	1111597	Identifier	r		1111500	0					
ANR	1111598	Identifier	cons		1111500	1					
ANR	1111599	Identifier	line		1111500	1					
ANR	1111600	Identifier	zerosep		1111500	1					
ANR	1111601	CompoundStatement		12:57:348:348	1111500	1					
ANR	1111602	ExpressionStatement	r_cons_zero ( )	3110:2:97023:97037	1111500	0	True				
ANR	1111603	CallExpression	r_cons_zero ( )		1111500	0					
ANR	1111604	Callee	r_cons_zero		1111500	0					
ANR	1111605	Identifier	r_cons_zero		1111500	0					
ANR	1111606	ArgumentList			1111500	1					
ANR	1111607	ReturnStatement	return ret ;	3112:1:97043:97053	1111500	6	True				
ANR	1111608	Identifier	ret		1111500	0					
ANR	1111609	ReturnType	R_API int		1111500	1					
ANR	1111610	Identifier	r_core_prompt_exec		1111500	2					
ANR	1111611	ParameterList	RCore * r		1111500	3					
ANR	1111612	Parameter	RCore * r	3098:29:96660:96667	1111500	0	True				
ANR	1111613	ParameterType	RCore *		1111500	0					
ANR	1111614	Identifier	r		1111500	1					
ANR	1111615	CFGEntryNode	ENTRY		1111500		True				
ANR	1111616	CFGExitNode	EXIT		1111500		True				
ANR	1111617	Symbol	ret		1111500						
ANR	1111618	Symbol	r_core_cmd		1111500						
ANR	1111619	Symbol	NULL		1111500						
ANR	1111620	Symbol	r -> cons		1111500						
ANR	1111621	Symbol	r -> cons -> line		1111500						
ANR	1111622	Symbol	false		1111500						
ANR	1111623	Symbol	r_cons_get_buffer		1111500						
ANR	1111624	Symbol	r -> rc		1111500						
ANR	1111625	Symbol	r -> num -> value		1111500						
ANR	1111626	Symbol	* * * r		1111500						
ANR	1111627	Symbol	* r -> num		1111500						
ANR	1111628	Symbol	r -> cons -> use_tts		1111500						
ANR	1111629	Symbol	r		1111500						
ANR	1111630	Symbol	buf		1111500						
ANR	1111631	Symbol	r -> num		1111500						
ANR	1111632	Symbol	r -> cons -> line -> zerosep		1111500						
ANR	1111633	Symbol	* r -> cons		1111500						
ANR	1111634	Symbol	true		1111500						
ANR	1111635	Symbol	* * r		1111500						
ANR	1111636	Symbol	* * r -> cons		1111500						
ANR	1111637	Symbol	* r		1111500						
ANR	1111638	Symbol	* r -> cons -> line		1111500						
ANR	1111639	Symbol	r -> cmdqueue		1111500						
ANR	1111640	Function	r_core_seek_size	3115:0:97058:98067							
ANR	1111641	FunctionDef	"r_core_seek_size (RCore * core , ut64 addr , int bsize)"		1111640	0					
ANR	1111642	CompoundStatement		3115:62:97120:98067	1111640	0					
ANR	1111643	IdentifierDeclStatement	ut8 * bump ;	3116:1:97123:97132	1111640	0	True				
ANR	1111644	IdentifierDecl	* bump		1111640	0					
ANR	1111645	IdentifierDeclType	ut8 *		1111640	0					
ANR	1111646	Identifier	bump		1111640	1					
ANR	1111647	IdentifierDeclStatement	int ret = false ;	3117:1:97135:97150	1111640	1	True				
ANR	1111648	IdentifierDecl	ret = false		1111640	0					
ANR	1111649	IdentifierDeclType	int		1111640	0					
ANR	1111650	Identifier	ret		1111640	1					
ANR	1111651	AssignmentExpression	ret = false		1111640	2		=			
ANR	1111652	Identifier	false		1111640	0					
ANR	1111653	Identifier	false		1111640	1					
ANR	1111654	IfStatement	if ( bsize < 0 )		1111640	2					
ANR	1111655	Condition	bsize < 0	3118:5:97157:97165	1111640	0	True				
ANR	1111656	RelationalExpression	bsize < 0		1111640	0		<			
ANR	1111657	Identifier	bsize		1111640	0					
ANR	1111658	PrimaryExpression	0		1111640	1					
ANR	1111659	CompoundStatement		4:16:47:47	1111640	1					
ANR	1111660	ReturnStatement	return false ;	3119:2:97172:97184	1111640	0	True				
ANR	1111661	Identifier	false		1111640	0					
ANR	1111662	IfStatement	if ( bsize == core -> blocksize )		1111640	3					
ANR	1111663	Condition	bsize == core -> blocksize	3121:5:97194:97217	1111640	0	True				
ANR	1111664	EqualityExpression	bsize == core -> blocksize		1111640	0		==			
ANR	1111665	Identifier	bsize		1111640	0					
ANR	1111666	PtrMemberAccess	core -> blocksize		1111640	1					
ANR	1111667	Identifier	core		1111640	0					
ANR	1111668	Identifier	blocksize		1111640	1					
ANR	1111669	CompoundStatement		7:31:99:99	1111640	1					
ANR	1111670	ReturnStatement	return true ;	3122:2:97224:97235	1111640	0	True				
ANR	1111671	Identifier	true		1111640	0					
ANR	1111672	IfStatement	if ( r_sandbox_enable ( 0 ) )		1111640	4					
ANR	1111673	Condition	r_sandbox_enable ( 0 )	3124:5:97245:97264	1111640	0	True				
ANR	1111674	CallExpression	r_sandbox_enable ( 0 )		1111640	0					
ANR	1111675	Callee	r_sandbox_enable		1111640	0					
ANR	1111676	Identifier	r_sandbox_enable		1111640	0					
ANR	1111677	ArgumentList	0		1111640	1					
ANR	1111678	Argument	0		1111640	0					
ANR	1111679	PrimaryExpression	0		1111640	0					
ANR	1111680	CompoundStatement		10:27:146:146	1111640	1					
ANR	1111681	IfStatement	if ( bsize > 1024 * 32 )		1111640	0					
ANR	1111682	Condition	bsize > 1024 * 32	3126:6:97309:97323	1111640	0	True				
ANR	1111683	RelationalExpression	bsize > 1024 * 32		1111640	0		>			
ANR	1111684	Identifier	bsize		1111640	0					
ANR	1111685	MultiplicativeExpression	1024 * 32		1111640	1		*			
ANR	1111686	PrimaryExpression	1024		1111640	0					
ANR	1111687	PrimaryExpression	32		1111640	1					
ANR	1111688	CompoundStatement		12:23:205:205	1111640	1					
ANR	1111689	ExpressionStatement	"eprintf ( ""Sandbox mode restricts blocksize bigger than 32k\\n"" )"	3127:3:97331:97393	1111640	0	True				
ANR	1111690	CallExpression	"eprintf ( ""Sandbox mode restricts blocksize bigger than 32k\\n"" )"		1111640	0					
ANR	1111691	Callee	eprintf		1111640	0					
ANR	1111692	Identifier	eprintf		1111640	0					
ANR	1111693	ArgumentList	"""Sandbox mode restricts blocksize bigger than 32k\\n"""		1111640	1					
ANR	1111694	Argument	"""Sandbox mode restricts blocksize bigger than 32k\\n"""		1111640	0					
ANR	1111695	PrimaryExpression	"""Sandbox mode restricts blocksize bigger than 32k\\n"""		1111640	0					
ANR	1111696	ReturnStatement	return false ;	3128:3:97398:97410	1111640	1	True				
ANR	1111697	Identifier	false		1111640	0					
ANR	1111698	IfStatement	if ( bsize > core -> blocksize_max )		1111640	5					
ANR	1111699	Condition	bsize > core -> blocksize_max	3131:5:97424:97450	1111640	0	True				
ANR	1111700	RelationalExpression	bsize > core -> blocksize_max		1111640	0		>			
ANR	1111701	Identifier	bsize		1111640	0					
ANR	1111702	PtrMemberAccess	core -> blocksize_max		1111640	1					
ANR	1111703	Identifier	core		1111640	0					
ANR	1111704	Identifier	blocksize_max		1111640	1					
ANR	1111705	CompoundStatement		17:34:332:332	1111640	1					
ANR	1111706	ExpressionStatement	"eprintf ( ""Block size %d is too big\\n"" , bsize )"	3132:2:97457:97502	1111640	0	True				
ANR	1111707	CallExpression	"eprintf ( ""Block size %d is too big\\n"" , bsize )"		1111640	0					
ANR	1111708	Callee	eprintf		1111640	0					
ANR	1111709	Identifier	eprintf		1111640	0					
ANR	1111710	ArgumentList	"""Block size %d is too big\\n"""		1111640	1					
ANR	1111711	Argument	"""Block size %d is too big\\n"""		1111640	0					
ANR	1111712	PrimaryExpression	"""Block size %d is too big\\n"""		1111640	0					
ANR	1111713	Argument	bsize		1111640	1					
ANR	1111714	Identifier	bsize		1111640	0					
ANR	1111715	ReturnStatement	return false ;	3133:2:97506:97518	1111640	1	True				
ANR	1111716	Identifier	false		1111640	0					
ANR	1111717	ExpressionStatement	core -> offset = addr	3135:1:97524:97543	1111640	6	True				
ANR	1111718	AssignmentExpression	core -> offset = addr		1111640	0		=			
ANR	1111719	PtrMemberAccess	core -> offset		1111640	0					
ANR	1111720	Identifier	core		1111640	0					
ANR	1111721	Identifier	offset		1111640	1					
ANR	1111722	Identifier	addr		1111640	1					
ANR	1111723	IfStatement	if ( bsize < 1 )		1111640	7					
ANR	1111724	Condition	bsize < 1	3136:5:97550:97558	1111640	0	True				
ANR	1111725	RelationalExpression	bsize < 1		1111640	0		<			
ANR	1111726	Identifier	bsize		1111640	0					
ANR	1111727	PrimaryExpression	1		1111640	1					
ANR	1111728	CompoundStatement		22:16:440:440	1111640	1					
ANR	1111729	ExpressionStatement	bsize = 1	3137:2:97565:97574	1111640	0	True				
ANR	1111730	AssignmentExpression	bsize = 1		1111640	0		=			
ANR	1111731	Identifier	bsize		1111640	0					
ANR	1111732	PrimaryExpression	1		1111640	1					
ANR	1111733	ElseStatement	else		1111640	0					
ANR	1111734	IfStatement	if ( core -> blocksize_max && bsize > core -> blocksize_max )		1111640	0					
ANR	1111735	Condition	core -> blocksize_max && bsize > core -> blocksize_max	3138:12:97588:97635	1111640	0	True				
ANR	1111736	AndExpression	core -> blocksize_max && bsize > core -> blocksize_max		1111640	0		&&			
ANR	1111737	PtrMemberAccess	core -> blocksize_max		1111640	0					
ANR	1111738	Identifier	core		1111640	0					
ANR	1111739	Identifier	blocksize_max		1111640	1					
ANR	1111740	RelationalExpression	bsize > core -> blocksize_max		1111640	1		>			
ANR	1111741	Identifier	bsize		1111640	0					
ANR	1111742	PtrMemberAccess	core -> blocksize_max		1111640	1					
ANR	1111743	Identifier	core		1111640	0					
ANR	1111744	Identifier	blocksize_max		1111640	1					
ANR	1111745	CompoundStatement		24:62:517:517	1111640	1					
ANR	1111746	ExpressionStatement	"eprintf ( ""bsize is bigger than `bm`. dimmed to 0x%x > 0x%x\\n"" , bsize , core -> blocksize_max )"	3139:2:97642:97735	1111640	0	True				
ANR	1111747	CallExpression	"eprintf ( ""bsize is bigger than `bm`. dimmed to 0x%x > 0x%x\\n"" , bsize , core -> blocksize_max )"		1111640	0					
ANR	1111748	Callee	eprintf		1111640	0					
ANR	1111749	Identifier	eprintf		1111640	0					
ANR	1111750	ArgumentList	"""bsize is bigger than `bm`. dimmed to 0x%x > 0x%x\\n"""		1111640	1					
ANR	1111751	Argument	"""bsize is bigger than `bm`. dimmed to 0x%x > 0x%x\\n"""		1111640	0					
ANR	1111752	PrimaryExpression	"""bsize is bigger than `bm`. dimmed to 0x%x > 0x%x\\n"""		1111640	0					
ANR	1111753	Argument	bsize		1111640	1					
ANR	1111754	Identifier	bsize		1111640	0					
ANR	1111755	Argument	core -> blocksize_max		1111640	2					
ANR	1111756	PtrMemberAccess	core -> blocksize_max		1111640	0					
ANR	1111757	Identifier	core		1111640	0					
ANR	1111758	Identifier	blocksize_max		1111640	1					
ANR	1111759	ExpressionStatement	bsize = core -> blocksize_max	3141:2:97739:97766	1111640	1	True				
ANR	1111760	AssignmentExpression	bsize = core -> blocksize_max		1111640	0		=			
ANR	1111761	Identifier	bsize		1111640	0					
ANR	1111762	PtrMemberAccess	core -> blocksize_max		1111640	1					
ANR	1111763	Identifier	core		1111640	0					
ANR	1111764	Identifier	blocksize_max		1111640	1					
ANR	1111765	ExpressionStatement	"bump = realloc ( core -> block , bsize + 1 )"	3143:1:97772:97811	1111640	8	True				
ANR	1111766	AssignmentExpression	"bump = realloc ( core -> block , bsize + 1 )"		1111640	0		=			
ANR	1111767	Identifier	bump		1111640	0					
ANR	1111768	CallExpression	"realloc ( core -> block , bsize + 1 )"		1111640	1					
ANR	1111769	Callee	realloc		1111640	0					
ANR	1111770	Identifier	realloc		1111640	0					
ANR	1111771	ArgumentList	core -> block		1111640	1					
ANR	1111772	Argument	core -> block		1111640	0					
ANR	1111773	PtrMemberAccess	core -> block		1111640	0					
ANR	1111774	Identifier	core		1111640	0					
ANR	1111775	Identifier	block		1111640	1					
ANR	1111776	Argument	bsize + 1		1111640	1					
ANR	1111777	AdditiveExpression	bsize + 1		1111640	0		+			
ANR	1111778	Identifier	bsize		1111640	0					
ANR	1111779	PrimaryExpression	1		1111640	1					
ANR	1111780	IfStatement	if ( ! bump )		1111640	9					
ANR	1111781	Condition	! bump	3144:5:97818:97822	1111640	0	True				
ANR	1111782	UnaryOperationExpression	! bump		1111640	0					
ANR	1111783	UnaryOperator	!		1111640	0					
ANR	1111784	Identifier	bump		1111640	1					
ANR	1111785	CompoundStatement		30:12:704:704	1111640	1					
ANR	1111786	ExpressionStatement	"eprintf ( ""Oops. cannot allocate that much (%u)\\n"" , bsize )"	3145:2:97829:97886	1111640	0	True				
ANR	1111787	CallExpression	"eprintf ( ""Oops. cannot allocate that much (%u)\\n"" , bsize )"		1111640	0					
ANR	1111788	Callee	eprintf		1111640	0					
ANR	1111789	Identifier	eprintf		1111640	0					
ANR	1111790	ArgumentList	"""Oops. cannot allocate that much (%u)\\n"""		1111640	1					
ANR	1111791	Argument	"""Oops. cannot allocate that much (%u)\\n"""		1111640	0					
ANR	1111792	PrimaryExpression	"""Oops. cannot allocate that much (%u)\\n"""		1111640	0					
ANR	1111793	Argument	bsize		1111640	1					
ANR	1111794	Identifier	bsize		1111640	0					
ANR	1111795	ExpressionStatement	ret = false	3146:2:97890:97901	1111640	1	True				
ANR	1111796	AssignmentExpression	ret = false		1111640	0		=			
ANR	1111797	Identifier	ret		1111640	0					
ANR	1111798	Identifier	false		1111640	1					
ANR	1111799	ElseStatement	else		1111640	0					
ANR	1111800	CompoundStatement		33:8:790:790	1111640	0					
ANR	1111801	ExpressionStatement	ret = true	3148:2:97915:97925	1111640	0	True				
ANR	1111802	AssignmentExpression	ret = true		1111640	0		=			
ANR	1111803	Identifier	ret		1111640	0					
ANR	1111804	Identifier	true		1111640	1					
ANR	1111805	ExpressionStatement	core -> block = bump	3149:2:97929:97947	1111640	1	True				
ANR	1111806	AssignmentExpression	core -> block = bump		1111640	0		=			
ANR	1111807	PtrMemberAccess	core -> block		1111640	0					
ANR	1111808	Identifier	core		1111640	0					
ANR	1111809	Identifier	block		1111640	1					
ANR	1111810	Identifier	bump		1111640	1					
ANR	1111811	ExpressionStatement	core -> blocksize = bsize	3150:2:97951:97974	1111640	2	True				
ANR	1111812	AssignmentExpression	core -> blocksize = bsize		1111640	0		=			
ANR	1111813	PtrMemberAccess	core -> blocksize		1111640	0					
ANR	1111814	Identifier	core		1111640	0					
ANR	1111815	Identifier	blocksize		1111640	1					
ANR	1111816	Identifier	bsize		1111640	1					
ANR	1111817	ExpressionStatement	"memset ( core -> block , 0xff , core -> blocksize )"	3151:2:97978:98021	1111640	3	True				
ANR	1111818	CallExpression	"memset ( core -> block , 0xff , core -> blocksize )"		1111640	0					
ANR	1111819	Callee	memset		1111640	0					
ANR	1111820	Identifier	memset		1111640	0					
ANR	1111821	ArgumentList	core -> block		1111640	1					
ANR	1111822	Argument	core -> block		1111640	0					
ANR	1111823	PtrMemberAccess	core -> block		1111640	0					
ANR	1111824	Identifier	core		1111640	0					
ANR	1111825	Identifier	block		1111640	1					
ANR	1111826	Argument	0xff		1111640	1					
ANR	1111827	PrimaryExpression	0xff		1111640	0					
ANR	1111828	Argument	core -> blocksize		1111640	2					
ANR	1111829	PtrMemberAccess	core -> blocksize		1111640	0					
ANR	1111830	Identifier	core		1111640	0					
ANR	1111831	Identifier	blocksize		1111640	1					
ANR	1111832	ExpressionStatement	r_core_block_read ( core )	3152:2:98025:98049	1111640	4	True				
ANR	1111833	CallExpression	r_core_block_read ( core )		1111640	0					
ANR	1111834	Callee	r_core_block_read		1111640	0					
ANR	1111835	Identifier	r_core_block_read		1111640	0					
ANR	1111836	ArgumentList	core		1111640	1					
ANR	1111837	Argument	core		1111640	0					
ANR	1111838	Identifier	core		1111640	0					
ANR	1111839	ReturnStatement	return ret ;	3154:1:98055:98065	1111640	10	True				
ANR	1111840	Identifier	ret		1111640	0					
ANR	1111841	ReturnType	R_API int		1111640	1					
ANR	1111842	Identifier	r_core_seek_size		1111640	2					
ANR	1111843	ParameterList	"RCore * core , ut64 addr , int bsize"		1111640	3					
ANR	1111844	Parameter	RCore * core	3115:27:97085:97095	1111640	0	True				
ANR	1111845	ParameterType	RCore *		1111640	0					
ANR	1111846	Identifier	core		1111640	1					
ANR	1111847	Parameter	ut64 addr	3115:40:97098:97106	1111640	1	True				
ANR	1111848	ParameterType	ut64		1111640	0					
ANR	1111849	Identifier	addr		1111640	1					
ANR	1111850	Parameter	int bsize	3115:51:97109:97117	1111640	2	True				
ANR	1111851	ParameterType	int		1111640	0					
ANR	1111852	Identifier	bsize		1111640	1					
ANR	1111853	CFGEntryNode	ENTRY		1111640		True				
ANR	1111854	CFGExitNode	EXIT		1111640		True				
ANR	1111855	Symbol	ret		1111640						
ANR	1111856	Symbol	core -> blocksize		1111640						
ANR	1111857	Symbol	core -> block		1111640						
ANR	1111858	Symbol	r_sandbox_enable		1111640						
ANR	1111859	Symbol	core -> blocksize_max		1111640						
ANR	1111860	Symbol	false		1111640						
ANR	1111861	Symbol	* core		1111640						
ANR	1111862	Symbol	core -> offset		1111640						
ANR	1111863	Symbol	realloc		1111640						
ANR	1111864	Symbol	core		1111640						
ANR	1111865	Symbol	bump		1111640						
ANR	1111866	Symbol	true		1111640						
ANR	1111867	Symbol	bsize		1111640						
ANR	1111868	Symbol	addr		1111640						
ANR	1111869	Function	r_core_block_size	3157:0:98070:98178							
ANR	1111870	FunctionDef	"r_core_block_size (RCore * core , int bsize)"		1111869	0					
ANR	1111871	CompoundStatement		3157:52:98122:98178	1111869	0					
ANR	1111872	ReturnStatement	"return r_core_seek_size ( core , core -> offset , bsize ) ;"	3158:1:98125:98176	1111869	0	True				
ANR	1111873	CallExpression	"r_core_seek_size ( core , core -> offset , bsize )"		1111869	0					
ANR	1111874	Callee	r_core_seek_size		1111869	0					
ANR	1111875	Identifier	r_core_seek_size		1111869	0					
ANR	1111876	ArgumentList	core		1111869	1					
ANR	1111877	Argument	core		1111869	0					
ANR	1111878	Identifier	core		1111869	0					
ANR	1111879	Argument	core -> offset		1111869	1					
ANR	1111880	PtrMemberAccess	core -> offset		1111869	0					
ANR	1111881	Identifier	core		1111869	0					
ANR	1111882	Identifier	offset		1111869	1					
ANR	1111883	Argument	bsize		1111869	2					
ANR	1111884	Identifier	bsize		1111869	0					
ANR	1111885	ReturnType	R_API int		1111869	1					
ANR	1111886	Identifier	r_core_block_size		1111869	2					
ANR	1111887	ParameterList	"RCore * core , int bsize"		1111869	3					
ANR	1111888	Parameter	RCore * core	3157:28:98098:98108	1111869	0	True				
ANR	1111889	ParameterType	RCore *		1111869	0					
ANR	1111890	Identifier	core		1111869	1					
ANR	1111891	Parameter	int bsize	3157:41:98111:98119	1111869	1	True				
ANR	1111892	ParameterType	int		1111869	0					
ANR	1111893	Identifier	bsize		1111869	1					
ANR	1111894	CFGEntryNode	ENTRY		1111869		True				
ANR	1111895	CFGExitNode	EXIT		1111869		True				
ANR	1111896	Symbol	core		1111869						
ANR	1111897	Symbol	* core		1111869						
ANR	1111898	Symbol	bsize		1111869						
ANR	1111899	Symbol	core -> offset		1111869						
ANR	1111900	Symbol	r_core_seek_size		1111869						
ANR	1111901	Function	r_core_seek_align	3161:0:98181:98706							
ANR	1111902	FunctionDef	"r_core_seek_align (RCore * core , ut64 align , int times)"		1111901	0					
ANR	1111903	CompoundStatement		3161:64:98245:98706	1111901	0					
ANR	1111904	IdentifierDeclStatement	int inc = ( times >= 0 ) ? 1 : - 1 ;	3162:1:98248:98277	1111901	0	True				
ANR	1111905	IdentifierDecl	inc = ( times >= 0 ) ? 1 : - 1		1111901	0					
ANR	1111906	IdentifierDeclType	int		1111901	0					
ANR	1111907	Identifier	inc		1111901	1					
ANR	1111908	AssignmentExpression	inc = ( times >= 0 ) ? 1 : - 1		1111901	2		=			
ANR	1111909	Identifier	inc		1111901	0					
ANR	1111910	ConditionalExpression	( times >= 0 ) ? 1 : - 1		1111901	1					
ANR	1111911	Condition	times >= 0		1111901	0					
ANR	1111912	RelationalExpression	times >= 0		1111901	0		>=			
ANR	1111913	Identifier	times		1111901	0					
ANR	1111914	PrimaryExpression	0		1111901	1					
ANR	1111915	PrimaryExpression	1		1111901	1					
ANR	1111916	UnaryOperationExpression	- 1		1111901	2					
ANR	1111917	UnaryOperator	-		1111901	0					
ANR	1111918	PrimaryExpression	1		1111901	1					
ANR	1111919	IdentifierDeclStatement	ut64 seek = core -> offset ;	3163:1:98280:98304	1111901	1	True				
ANR	1111920	IdentifierDecl	seek = core -> offset		1111901	0					
ANR	1111921	IdentifierDeclType	ut64		1111901	0					
ANR	1111922	Identifier	seek		1111901	1					
ANR	1111923	AssignmentExpression	seek = core -> offset		1111901	2		=			
ANR	1111924	Identifier	seek		1111901	0					
ANR	1111925	PtrMemberAccess	core -> offset		1111901	1					
ANR	1111926	Identifier	core		1111901	0					
ANR	1111927	Identifier	offset		1111901	1					
ANR	1111928	IfStatement	if ( ! align )		1111901	2					
ANR	1111929	Condition	! align	3164:5:98311:98316	1111901	0	True				
ANR	1111930	UnaryOperationExpression	! align		1111901	0					
ANR	1111931	UnaryOperator	!		1111901	0					
ANR	1111932	Identifier	align		1111901	1					
ANR	1111933	CompoundStatement		4:13:73:73	1111901	1					
ANR	1111934	ReturnStatement	return false ;	3165:2:98323:98335	1111901	0	True				
ANR	1111935	Identifier	false		1111901	0					
ANR	1111936	IdentifierDeclStatement	int diff = core -> offset % align ;	3167:1:98341:98372	1111901	3	True				
ANR	1111937	IdentifierDecl	diff = core -> offset % align		1111901	0					
ANR	1111938	IdentifierDeclType	int		1111901	0					
ANR	1111939	Identifier	diff		1111901	1					
ANR	1111940	AssignmentExpression	diff = core -> offset % align		1111901	2		=			
ANR	1111941	Identifier	diff		1111901	0					
ANR	1111942	MultiplicativeExpression	core -> offset % align		1111901	1		%			
ANR	1111943	PtrMemberAccess	core -> offset		1111901	0					
ANR	1111944	Identifier	core		1111901	0					
ANR	1111945	Identifier	offset		1111901	1					
ANR	1111946	Identifier	align		1111901	1					
ANR	1111947	IfStatement	if ( ! times )		1111901	4					
ANR	1111948	Condition	! times	3168:5:98379:98384	1111901	0	True				
ANR	1111949	UnaryOperationExpression	! times		1111901	0					
ANR	1111950	UnaryOperator	!		1111901	0					
ANR	1111951	Identifier	times		1111901	1					
ANR	1111952	CompoundStatement		8:13:141:141	1111901	1					
ANR	1111953	ExpressionStatement	diff = - diff	3169:2:98391:98403	1111901	0	True				
ANR	1111954	AssignmentExpression	diff = - diff		1111901	0		=			
ANR	1111955	Identifier	diff		1111901	0					
ANR	1111956	UnaryOperationExpression	- diff		1111901	1					
ANR	1111957	UnaryOperator	-		1111901	0					
ANR	1111958	Identifier	diff		1111901	1					
ANR	1111959	ElseStatement	else		1111901	0					
ANR	1111960	IfStatement	if ( diff )		1111901	0					
ANR	1111961	Condition	diff	3170:12:98417:98420	1111901	0	True				
ANR	1111962	Identifier	diff		1111901	0					
ANR	1111963	CompoundStatement		10:18:177:177	1111901	1					
ANR	1111964	IfStatement	if ( inc > 0 )		1111901	0					
ANR	1111965	Condition	inc > 0	3171:6:98431:98437	1111901	0	True				
ANR	1111966	RelationalExpression	inc > 0		1111901	0		>			
ANR	1111967	Identifier	inc		1111901	0					
ANR	1111968	PrimaryExpression	0		1111901	1					
ANR	1111969	CompoundStatement		11:15:194:194	1111901	1					
ANR	1111970	ExpressionStatement	diff += align - diff	3172:3:98445:98463	1111901	0	True				
ANR	1111971	AssignmentExpression	diff += align - diff		1111901	0		+=			
ANR	1111972	Identifier	diff		1111901	0					
ANR	1111973	AdditiveExpression	align - diff		1111901	1		-			
ANR	1111974	Identifier	align		1111901	0					
ANR	1111975	Identifier	diff		1111901	1					
ANR	1111976	ElseStatement	else		1111901	0					
ANR	1111977	CompoundStatement		13:9:228:228	1111901	0					
ANR	1111978	ExpressionStatement	diff = - diff	3174:3:98479:98491	1111901	0	True				
ANR	1111979	AssignmentExpression	diff = - diff		1111901	0		=			
ANR	1111980	Identifier	diff		1111901	0					
ANR	1111981	UnaryOperationExpression	- diff		1111901	1					
ANR	1111982	UnaryOperator	-		1111901	0					
ANR	1111983	Identifier	diff		1111901	1					
ANR	1111984	IfStatement	if ( times )		1111901	1					
ANR	1111985	Condition	times	3176:6:98503:98507	1111901	0	True				
ANR	1111986	Identifier	times		1111901	0					
ANR	1111987	CompoundStatement		16:13:264:264	1111901	1					
ANR	1111988	ExpressionStatement	times -= inc	3177:3:98515:98527	1111901	0	True				
ANR	1111989	AssignmentExpression	times -= inc		1111901	0		-=			
ANR	1111990	Identifier	times		1111901	0					
ANR	1111991	Identifier	inc		1111901	1					
ANR	1111992	WhileStatement	while ( ( times * inc ) > 0 )		1111901	5					
ANR	1111993	Condition	( times * inc ) > 0	3180:8:98544:98558	1111901	0	True				
ANR	1111994	RelationalExpression	( times * inc ) > 0		1111901	0		>			
ANR	1111995	MultiplicativeExpression	times * inc		1111901	0		*			
ANR	1111996	Identifier	times		1111901	0					
ANR	1111997	Identifier	inc		1111901	1					
ANR	1111998	PrimaryExpression	0		1111901	1					
ANR	1111999	CompoundStatement		20:25:315:315	1111901	1					
ANR	1112000	ExpressionStatement	times -= inc	3181:2:98565:98577	1111901	0	True				
ANR	1112001	AssignmentExpression	times -= inc		1111901	0		-=			
ANR	1112002	Identifier	times		1111901	0					
ANR	1112003	Identifier	inc		1111901	1					
ANR	1112004	ExpressionStatement	diff += ( align * inc )	3182:2:98581:98602	1111901	1	True				
ANR	1112005	AssignmentExpression	diff += ( align * inc )		1111901	0		+=			
ANR	1112006	Identifier	diff		1111901	0					
ANR	1112007	MultiplicativeExpression	align * inc		1111901	1		*			
ANR	1112008	Identifier	align		1111901	0					
ANR	1112009	Identifier	inc		1111901	1					
ANR	1112010	IfStatement	if ( diff < 0 && - diff > seek )		1111901	6					
ANR	1112011	Condition	diff < 0 && - diff > seek	3184:5:98612:98635	1111901	0	True				
ANR	1112012	AndExpression	diff < 0 && - diff > seek		1111901	0		&&			
ANR	1112013	RelationalExpression	diff < 0		1111901	0		<			
ANR	1112014	Identifier	diff		1111901	0					
ANR	1112015	PrimaryExpression	0		1111901	1					
ANR	1112016	RelationalExpression	- diff > seek		1111901	1		>			
ANR	1112017	UnaryOperationExpression	- diff		1111901	0					
ANR	1112018	UnaryOperator	-		1111901	0					
ANR	1112019	Identifier	diff		1111901	1					
ANR	1112020	Identifier	seek		1111901	1					
ANR	1112021	CompoundStatement		24:31:392:392	1111901	1					
ANR	1112022	ExpressionStatement	seek = diff = 0	3185:2:98642:98657	1111901	0	True				
ANR	1112023	AssignmentExpression	seek = diff = 0		1111901	0		=			
ANR	1112024	Identifier	seek		1111901	0					
ANR	1112025	AssignmentExpression	diff = 0		1111901	1		=			
ANR	1112026	Identifier	diff		1111901	0					
ANR	1112027	PrimaryExpression	0		1111901	1					
ANR	1112028	ReturnStatement	"return r_core_seek ( core , seek + diff , 1 ) ;"	3187:1:98663:98704	1111901	7	True				
ANR	1112029	CallExpression	"r_core_seek ( core , seek + diff , 1 )"		1111901	0					
ANR	1112030	Callee	r_core_seek		1111901	0					
ANR	1112031	Identifier	r_core_seek		1111901	0					
ANR	1112032	ArgumentList	core		1111901	1					
ANR	1112033	Argument	core		1111901	0					
ANR	1112034	Identifier	core		1111901	0					
ANR	1112035	Argument	seek + diff		1111901	1					
ANR	1112036	AdditiveExpression	seek + diff		1111901	0		+			
ANR	1112037	Identifier	seek		1111901	0					
ANR	1112038	Identifier	diff		1111901	1					
ANR	1112039	Argument	1		1111901	2					
ANR	1112040	PrimaryExpression	1		1111901	0					
ANR	1112041	ReturnType	R_API int		1111901	1					
ANR	1112042	Identifier	r_core_seek_align		1111901	2					
ANR	1112043	ParameterList	"RCore * core , ut64 align , int times"		1111901	3					
ANR	1112044	Parameter	RCore * core	3161:28:98209:98219	1111901	0	True				
ANR	1112045	ParameterType	RCore *		1111901	0					
ANR	1112046	Identifier	core		1111901	1					
ANR	1112047	Parameter	ut64 align	3161:41:98222:98231	1111901	1	True				
ANR	1112048	ParameterType	ut64		1111901	0					
ANR	1112049	Identifier	align		1111901	1					
ANR	1112050	Parameter	int times	3161:53:98234:98242	1111901	2	True				
ANR	1112051	ParameterType	int		1111901	0					
ANR	1112052	Identifier	times		1111901	1					
ANR	1112053	CFGEntryNode	ENTRY		1111901		True				
ANR	1112054	CFGExitNode	EXIT		1111901		True				
ANR	1112055	Symbol	core		1111901						
ANR	1112056	Symbol	times		1111901						
ANR	1112057	Symbol	* core		1111901						
ANR	1112058	Symbol	false		1111901						
ANR	1112059	Symbol	core -> offset		1111901						
ANR	1112060	Symbol	r_core_seek		1111901						
ANR	1112061	Symbol	diff		1111901						
ANR	1112062	Symbol	align		1111901						
ANR	1112063	Symbol	seek		1111901						
ANR	1112064	Symbol	inc		1111901						
ANR	1112065	Function	r_core_op_str	3190:0:98709:99057							
ANR	1112066	FunctionDef	"r_core_op_str (RCore * core , ut64 addr)"		1112065	0					
ANR	1112067	CompoundStatement		3190:50:98759:99057	1112065	0					
ANR	1112068	IdentifierDeclStatement	RAsmOp op = { 0 } ;	3191:1:98762:98777	1112065	0	True				
ANR	1112069	IdentifierDecl	op = { 0 }		1112065	0					
ANR	1112070	IdentifierDeclType	RAsmOp		1112065	0					
ANR	1112071	Identifier	op		1112065	1					
ANR	1112072	AssignmentExpression	op = { 0 }		1112065	2		=			
ANR	1112073	Identifier	op		1112065	0					
ANR	1112074	InitializerList	0		1112065	1					
ANR	1112075	PrimaryExpression	0		1112065	0					
ANR	1112076	IdentifierDeclStatement	ut8 buf [ 64 ] ;	3192:1:98780:98791	1112065	1	True				
ANR	1112077	IdentifierDecl	buf [ 64 ]		1112065	0					
ANR	1112078	IdentifierDeclType	ut8 [ 64 ]		1112065	0					
ANR	1112079	Identifier	buf		1112065	1					
ANR	1112080	PrimaryExpression	64		1112065	2					
ANR	1112081	ExpressionStatement	"r_asm_set_pc ( core -> assembler , addr )"	3193:1:98794:98830	1112065	2	True				
ANR	1112082	CallExpression	"r_asm_set_pc ( core -> assembler , addr )"		1112065	0					
ANR	1112083	Callee	r_asm_set_pc		1112065	0					
ANR	1112084	Identifier	r_asm_set_pc		1112065	0					
ANR	1112085	ArgumentList	core -> assembler		1112065	1					
ANR	1112086	Argument	core -> assembler		1112065	0					
ANR	1112087	PtrMemberAccess	core -> assembler		1112065	0					
ANR	1112088	Identifier	core		1112065	0					
ANR	1112089	Identifier	assembler		1112065	1					
ANR	1112090	Argument	addr		1112065	1					
ANR	1112091	Identifier	addr		1112065	0					
ANR	1112092	ExpressionStatement	"r_io_read_at ( core -> io , addr , buf , sizeof ( buf ) )"	3194:1:98833:98881	1112065	3	True				
ANR	1112093	CallExpression	"r_io_read_at ( core -> io , addr , buf , sizeof ( buf ) )"		1112065	0					
ANR	1112094	Callee	r_io_read_at		1112065	0					
ANR	1112095	Identifier	r_io_read_at		1112065	0					
ANR	1112096	ArgumentList	core -> io		1112065	1					
ANR	1112097	Argument	core -> io		1112065	0					
ANR	1112098	PtrMemberAccess	core -> io		1112065	0					
ANR	1112099	Identifier	core		1112065	0					
ANR	1112100	Identifier	io		1112065	1					
ANR	1112101	Argument	addr		1112065	1					
ANR	1112102	Identifier	addr		1112065	0					
ANR	1112103	Argument	buf		1112065	2					
ANR	1112104	Identifier	buf		1112065	0					
ANR	1112105	Argument	sizeof ( buf )		1112065	3					
ANR	1112106	SizeofExpression	sizeof ( buf )		1112065	0					
ANR	1112107	Sizeof	sizeof		1112065	0					
ANR	1112108	SizeofOperand	buf		1112065	1					
ANR	1112109	IdentifierDeclStatement	"int ret = r_asm_disassemble ( core -> assembler , & op , buf , sizeof ( buf ) ) ;"	3195:1:98884:98953	1112065	4	True				
ANR	1112110	IdentifierDecl	"ret = r_asm_disassemble ( core -> assembler , & op , buf , sizeof ( buf ) )"		1112065	0					
ANR	1112111	IdentifierDeclType	int		1112065	0					
ANR	1112112	Identifier	ret		1112065	1					
ANR	1112113	AssignmentExpression	"ret = r_asm_disassemble ( core -> assembler , & op , buf , sizeof ( buf ) )"		1112065	2		=			
ANR	1112114	Identifier	ret		1112065	0					
ANR	1112115	CallExpression	"r_asm_disassemble ( core -> assembler , & op , buf , sizeof ( buf ) )"		1112065	1					
ANR	1112116	Callee	r_asm_disassemble		1112065	0					
ANR	1112117	Identifier	r_asm_disassemble		1112065	0					
ANR	1112118	ArgumentList	core -> assembler		1112065	1					
ANR	1112119	Argument	core -> assembler		1112065	0					
ANR	1112120	PtrMemberAccess	core -> assembler		1112065	0					
ANR	1112121	Identifier	core		1112065	0					
ANR	1112122	Identifier	assembler		1112065	1					
ANR	1112123	Argument	& op		1112065	1					
ANR	1112124	UnaryOperationExpression	& op		1112065	0					
ANR	1112125	UnaryOperator	&		1112065	0					
ANR	1112126	Identifier	op		1112065	1					
ANR	1112127	Argument	buf		1112065	2					
ANR	1112128	Identifier	buf		1112065	0					
ANR	1112129	Argument	sizeof ( buf )		1112065	3					
ANR	1112130	SizeofExpression	sizeof ( buf )		1112065	0					
ANR	1112131	Sizeof	sizeof		1112065	0					
ANR	1112132	SizeofOperand	buf		1112065	1					
ANR	1112133	IdentifierDeclStatement	char * str = ( ret > 0 ) ? strdup ( r_strbuf_get ( & op . buf_asm ) ) : NULL ;	3196:1:98956:99020	1112065	5	True				
ANR	1112134	IdentifierDecl	* str = ( ret > 0 ) ? strdup ( r_strbuf_get ( & op . buf_asm ) ) : NULL		1112065	0					
ANR	1112135	IdentifierDeclType	char *		1112065	0					
ANR	1112136	Identifier	str		1112065	1					
ANR	1112137	AssignmentExpression	* str = ( ret > 0 ) ? strdup ( r_strbuf_get ( & op . buf_asm ) ) : NULL		1112065	2		=			
ANR	1112138	Identifier	str		1112065	0					
ANR	1112139	ConditionalExpression	( ret > 0 ) ? strdup ( r_strbuf_get ( & op . buf_asm ) ) : NULL		1112065	1					
ANR	1112140	Condition	ret > 0		1112065	0					
ANR	1112141	RelationalExpression	ret > 0		1112065	0		>			
ANR	1112142	Identifier	ret		1112065	0					
ANR	1112143	PrimaryExpression	0		1112065	1					
ANR	1112144	CallExpression	strdup ( r_strbuf_get ( & op . buf_asm ) )		1112065	1					
ANR	1112145	Callee	strdup		1112065	0					
ANR	1112146	Identifier	strdup		1112065	0					
ANR	1112147	ArgumentList	r_strbuf_get ( & op . buf_asm )		1112065	1					
ANR	1112148	Argument	r_strbuf_get ( & op . buf_asm )		1112065	0					
ANR	1112149	CallExpression	r_strbuf_get ( & op . buf_asm )		1112065	0					
ANR	1112150	Callee	r_strbuf_get		1112065	0					
ANR	1112151	Identifier	r_strbuf_get		1112065	0					
ANR	1112152	ArgumentList	& op . buf_asm		1112065	1					
ANR	1112153	Argument	& op . buf_asm		1112065	0					
ANR	1112154	UnaryOperationExpression	& op . buf_asm		1112065	0					
ANR	1112155	UnaryOperator	&		1112065	0					
ANR	1112156	MemberAccess	op . buf_asm		1112065	1					
ANR	1112157	Identifier	op		1112065	0					
ANR	1112158	Identifier	buf_asm		1112065	1					
ANR	1112159	Identifier	NULL		1112065	2					
ANR	1112160	ExpressionStatement	r_asm_op_fini ( & op )	3197:1:99023:99042	1112065	6	True				
ANR	1112161	CallExpression	r_asm_op_fini ( & op )		1112065	0					
ANR	1112162	Callee	r_asm_op_fini		1112065	0					
ANR	1112163	Identifier	r_asm_op_fini		1112065	0					
ANR	1112164	ArgumentList	& op		1112065	1					
ANR	1112165	Argument	& op		1112065	0					
ANR	1112166	UnaryOperationExpression	& op		1112065	0					
ANR	1112167	UnaryOperator	&		1112065	0					
ANR	1112168	Identifier	op		1112065	1					
ANR	1112169	ReturnStatement	return str ;	3198:1:99045:99055	1112065	7	True				
ANR	1112170	Identifier	str		1112065	0					
ANR	1112171	ReturnType	R_API char *		1112065	1					
ANR	1112172	Identifier	r_core_op_str		1112065	2					
ANR	1112173	ParameterList	"RCore * core , ut64 addr"		1112065	3					
ANR	1112174	Parameter	RCore * core	3190:26:98735:98745	1112065	0	True				
ANR	1112175	ParameterType	RCore *		1112065	0					
ANR	1112176	Identifier	core		1112065	1					
ANR	1112177	Parameter	ut64 addr	3190:39:98748:98756	1112065	1	True				
ANR	1112178	ParameterType	ut64		1112065	0					
ANR	1112179	Identifier	addr		1112065	1					
ANR	1112180	CFGEntryNode	ENTRY		1112065		True				
ANR	1112181	CFGExitNode	EXIT		1112065		True				
ANR	1112182	Symbol	ret		1112065						
ANR	1112183	Symbol	op		1112065						
ANR	1112184	Symbol	NULL		1112065						
ANR	1112185	Symbol	* core		1112065						
ANR	1112186	Symbol	core -> assembler		1112065						
ANR	1112187	Symbol	& op		1112065						
ANR	1112188	Symbol	& op . buf_asm		1112065						
ANR	1112189	Symbol	str		1112065						
ANR	1112190	Symbol	core		1112065						
ANR	1112191	Symbol	buf		1112065						
ANR	1112192	Symbol	core -> io		1112065						
ANR	1112193	Symbol	r_strbuf_get		1112065						
ANR	1112194	Symbol	strdup		1112065						
ANR	1112195	Symbol	addr		1112065						
ANR	1112196	Symbol	r_asm_disassemble		1112065						
ANR	1112197	Function	r_core_op_anal	3201:0:99060:99299							
ANR	1112198	FunctionDef	"r_core_op_anal (RCore * core , ut64 addr)"		1112197	0					
ANR	1112199	CompoundStatement		3201:54:99114:99299	1112197	0					
ANR	1112200	IdentifierDeclStatement	ut8 buf [ 64 ] ;	3202:1:99117:99128	1112197	0	True				
ANR	1112201	IdentifierDecl	buf [ 64 ]		1112197	0					
ANR	1112202	IdentifierDeclType	ut8 [ 64 ]		1112197	0					
ANR	1112203	Identifier	buf		1112197	1					
ANR	1112204	PrimaryExpression	64		1112197	2					
ANR	1112205	IdentifierDeclStatement	RAnalOp * op = R_NEW ( RAnalOp ) ;	3203:1:99131:99160	1112197	1	True				
ANR	1112206	IdentifierDecl	* op = R_NEW ( RAnalOp )		1112197	0					
ANR	1112207	IdentifierDeclType	RAnalOp *		1112197	0					
ANR	1112208	Identifier	op		1112197	1					
ANR	1112209	AssignmentExpression	* op = R_NEW ( RAnalOp )		1112197	2		=			
ANR	1112210	Identifier	op		1112197	0					
ANR	1112211	CallExpression	R_NEW ( RAnalOp )		1112197	1					
ANR	1112212	Callee	R_NEW		1112197	0					
ANR	1112213	Identifier	R_NEW		1112197	0					
ANR	1112214	ArgumentList	RAnalOp		1112197	1					
ANR	1112215	Argument	RAnalOp		1112197	0					
ANR	1112216	Identifier	RAnalOp		1112197	0					
ANR	1112217	ExpressionStatement	"r_io_read_at ( core -> io , addr , buf , sizeof ( buf ) )"	3204:1:99163:99211	1112197	2	True				
ANR	1112218	CallExpression	"r_io_read_at ( core -> io , addr , buf , sizeof ( buf ) )"		1112197	0					
ANR	1112219	Callee	r_io_read_at		1112197	0					
ANR	1112220	Identifier	r_io_read_at		1112197	0					
ANR	1112221	ArgumentList	core -> io		1112197	1					
ANR	1112222	Argument	core -> io		1112197	0					
ANR	1112223	PtrMemberAccess	core -> io		1112197	0					
ANR	1112224	Identifier	core		1112197	0					
ANR	1112225	Identifier	io		1112197	1					
ANR	1112226	Argument	addr		1112197	1					
ANR	1112227	Identifier	addr		1112197	0					
ANR	1112228	Argument	buf		1112197	2					
ANR	1112229	Identifier	buf		1112197	0					
ANR	1112230	Argument	sizeof ( buf )		1112197	3					
ANR	1112231	SizeofExpression	sizeof ( buf )		1112197	0					
ANR	1112232	Sizeof	sizeof		1112197	0					
ANR	1112233	SizeofOperand	buf		1112197	1					
ANR	1112234	ExpressionStatement	"r_anal_op ( core -> anal , op , addr , buf , sizeof ( buf ) , R_ANAL_OP_MASK_ALL )"	3205:1:99214:99285	1112197	3	True				
ANR	1112235	CallExpression	"r_anal_op ( core -> anal , op , addr , buf , sizeof ( buf ) , R_ANAL_OP_MASK_ALL )"		1112197	0					
ANR	1112236	Callee	r_anal_op		1112197	0					
ANR	1112237	Identifier	r_anal_op		1112197	0					
ANR	1112238	ArgumentList	core -> anal		1112197	1					
ANR	1112239	Argument	core -> anal		1112197	0					
ANR	1112240	PtrMemberAccess	core -> anal		1112197	0					
ANR	1112241	Identifier	core		1112197	0					
ANR	1112242	Identifier	anal		1112197	1					
ANR	1112243	Argument	op		1112197	1					
ANR	1112244	Identifier	op		1112197	0					
ANR	1112245	Argument	addr		1112197	2					
ANR	1112246	Identifier	addr		1112197	0					
ANR	1112247	Argument	buf		1112197	3					
ANR	1112248	Identifier	buf		1112197	0					
ANR	1112249	Argument	sizeof ( buf )		1112197	4					
ANR	1112250	SizeofExpression	sizeof ( buf )		1112197	0					
ANR	1112251	Sizeof	sizeof		1112197	0					
ANR	1112252	SizeofOperand	buf		1112197	1					
ANR	1112253	Argument	R_ANAL_OP_MASK_ALL		1112197	5					
ANR	1112254	Identifier	R_ANAL_OP_MASK_ALL		1112197	0					
ANR	1112255	ReturnStatement	return op ;	3206:1:99288:99297	1112197	4	True				
ANR	1112256	Identifier	op		1112197	0					
ANR	1112257	ReturnType	R_API RAnalOp *		1112197	1					
ANR	1112258	Identifier	r_core_op_anal		1112197	2					
ANR	1112259	ParameterList	"RCore * core , ut64 addr"		1112197	3					
ANR	1112260	Parameter	RCore * core	3201:30:99090:99100	1112197	0	True				
ANR	1112261	ParameterType	RCore *		1112197	0					
ANR	1112262	Identifier	core		1112197	1					
ANR	1112263	Parameter	ut64 addr	3201:43:99103:99111	1112197	1	True				
ANR	1112264	ParameterType	ut64		1112197	0					
ANR	1112265	Identifier	addr		1112197	1					
ANR	1112266	CFGEntryNode	ENTRY		1112197		True				
ANR	1112267	CFGExitNode	EXIT		1112197		True				
ANR	1112268	Symbol	core		1112197						
ANR	1112269	Symbol	op		1112197						
ANR	1112270	Symbol	buf		1112197						
ANR	1112271	Symbol	core -> io		1112197						
ANR	1112272	Symbol	R_ANAL_OP_MASK_ALL		1112197						
ANR	1112273	Symbol	* core		1112197						
ANR	1112274	Symbol	addr		1112197						
ANR	1112275	Symbol	R_NEW		1112197						
ANR	1112276	Symbol	core -> anal		1112197						
ANR	1112277	Symbol	RAnalOp		1112197						
ANR	1112278	Function	rap_break	3209:0:99302:99426							
ANR	1112279	FunctionDef	rap_break (void * u)		1112278	0					
ANR	1112280	CompoundStatement		3209:32:99334:99426	1112278	0					
ANR	1112281	IdentifierDeclStatement	RIORap * rior = ( RIORap * ) u ;	3210:1:99337:99363	1112278	0	True				
ANR	1112282	IdentifierDecl	* rior = ( RIORap * ) u		1112278	0					
ANR	1112283	IdentifierDeclType	RIORap *		1112278	0					
ANR	1112284	Identifier	rior		1112278	1					
ANR	1112285	AssignmentExpression	* rior = ( RIORap * ) u		1112278	2		=			
ANR	1112286	Identifier	rior		1112278	0					
ANR	1112287	CastExpression	( RIORap * ) u		1112278	1					
ANR	1112288	CastTarget	RIORap *		1112278	0					
ANR	1112289	Identifier	u		1112278	1					
ANR	1112290	IfStatement	if ( u )		1112278	1					
ANR	1112291	Condition	u	3211:5:99370:99370	1112278	0	True				
ANR	1112292	Identifier	u		1112278	0					
ANR	1112293	CompoundStatement		3:8:38:38	1112278	1					
ANR	1112294	ExpressionStatement	r_socket_close ( rior -> fd )	3212:2:99377:99402	1112278	0	True				
ANR	1112295	CallExpression	r_socket_close ( rior -> fd )		1112278	0					
ANR	1112296	Callee	r_socket_close		1112278	0					
ANR	1112297	Identifier	r_socket_close		1112278	0					
ANR	1112298	ArgumentList	rior -> fd		1112278	1					
ANR	1112299	Argument	rior -> fd		1112278	0					
ANR	1112300	PtrMemberAccess	rior -> fd		1112278	0					
ANR	1112301	Identifier	rior		1112278	0					
ANR	1112302	Identifier	fd		1112278	1					
ANR	1112303	ExpressionStatement	rior -> fd = NULL	3213:2:99406:99421	1112278	1	True				
ANR	1112304	AssignmentExpression	rior -> fd = NULL		1112278	0		=			
ANR	1112305	PtrMemberAccess	rior -> fd		1112278	0					
ANR	1112306	Identifier	rior		1112278	0					
ANR	1112307	Identifier	fd		1112278	1					
ANR	1112308	Identifier	NULL		1112278	1					
ANR	1112309	ReturnType	static void		1112278	1					
ANR	1112310	Identifier	rap_break		1112278	2					
ANR	1112311	ParameterList	void * u		1112278	3					
ANR	1112312	Parameter	void * u	3209:23:99325:99331	1112278	0	True				
ANR	1112313	ParameterType	void *		1112278	0					
ANR	1112314	Identifier	u		1112278	1					
ANR	1112315	CFGEntryNode	ENTRY		1112278		True				
ANR	1112316	CFGExitNode	EXIT		1112278		True				
ANR	1112317	Symbol	* rior		1112278						
ANR	1112318	Symbol	NULL		1112278						
ANR	1112319	Symbol	u		1112278						
ANR	1112320	Symbol	rior -> fd		1112278						
ANR	1112321	Symbol	rior		1112278						
ANR	1112322	Function	r_core_serve	3219:0:99545:107125							
ANR	1112323	FunctionDef	"r_core_serve (RCore * core , RIODesc * file)"		1112322	0					
ANR	1112324	CompoundStatement		3219:52:99597:107125	1112322	0					
ANR	1112325	IdentifierDeclStatement	"ut8 cmd , flg , * ptr = NULL , buf [ 1024 ] ;"	3220:1:99600:99636	1112322	0	True				
ANR	1112326	IdentifierDecl	cmd		1112322	0					
ANR	1112327	IdentifierDeclType	ut8		1112322	0					
ANR	1112328	Identifier	cmd		1112322	1					
ANR	1112329	IdentifierDecl	flg		1112322	1					
ANR	1112330	IdentifierDeclType	ut8		1112322	0					
ANR	1112331	Identifier	flg		1112322	1					
ANR	1112332	IdentifierDecl	* ptr = NULL		1112322	2					
ANR	1112333	IdentifierDeclType	ut8 *		1112322	0					
ANR	1112334	Identifier	ptr		1112322	1					
ANR	1112335	AssignmentExpression	* ptr = NULL		1112322	2		=			
ANR	1112336	Identifier	NULL		1112322	0					
ANR	1112337	Identifier	NULL		1112322	1					
ANR	1112338	IdentifierDecl	buf [ 1024 ]		1112322	3					
ANR	1112339	IdentifierDeclType	ut8 [ 1024 ]		1112322	0					
ANR	1112340	Identifier	buf		1112322	1					
ANR	1112341	PrimaryExpression	1024		1112322	2					
ANR	1112342	IdentifierDeclStatement	"int i , pipefd = - 1 ;"	3221:1:99639:99657	1112322	1	True				
ANR	1112343	IdentifierDecl	i		1112322	0					
ANR	1112344	IdentifierDeclType	int		1112322	0					
ANR	1112345	Identifier	i		1112322	1					
ANR	1112346	IdentifierDecl	pipefd = - 1		1112322	1					
ANR	1112347	IdentifierDeclType	int		1112322	0					
ANR	1112348	Identifier	pipefd		1112322	1					
ANR	1112349	AssignmentExpression	pipefd = - 1		1112322	2		=			
ANR	1112350	Identifier	pipefd		1112322	0					
ANR	1112351	UnaryOperationExpression	- 1		1112322	1					
ANR	1112352	UnaryOperator	-		1112322	0					
ANR	1112353	PrimaryExpression	1		1112322	1					
ANR	1112354	IdentifierDeclStatement	ut64 x ;	3222:1:99660:99666	1112322	2	True				
ANR	1112355	IdentifierDecl	x		1112322	0					
ANR	1112356	IdentifierDeclType	ut64		1112322	0					
ANR	1112357	Identifier	x		1112322	1					
ANR	1112358	IdentifierDeclStatement	RIORap * rior = ( RIORap * ) file -> data ;	3224:1:99670:99705	1112322	3	True				
ANR	1112359	IdentifierDecl	* rior = ( RIORap * ) file -> data		1112322	0					
ANR	1112360	IdentifierDeclType	RIORap *		1112322	0					
ANR	1112361	Identifier	rior		1112322	1					
ANR	1112362	AssignmentExpression	* rior = ( RIORap * ) file -> data		1112322	2		=			
ANR	1112363	Identifier	rior		1112322	0					
ANR	1112364	CastExpression	( RIORap * ) file -> data		1112322	1					
ANR	1112365	CastTarget	RIORap *		1112322	0					
ANR	1112366	PtrMemberAccess	file -> data		1112322	1					
ANR	1112367	Identifier	file		1112322	0					
ANR	1112368	Identifier	data		1112322	1					
ANR	1112369	IfStatement	if ( ! rior || ! rior -> fd )		1112322	4					
ANR	1112370	Condition	! rior || ! rior -> fd	3225:5:99712:99728	1112322	0	True				
ANR	1112371	OrExpression	! rior || ! rior -> fd		1112322	0		||			
ANR	1112372	UnaryOperationExpression	! rior		1112322	0					
ANR	1112373	UnaryOperator	!		1112322	0					
ANR	1112374	Identifier	rior		1112322	1					
ANR	1112375	UnaryOperationExpression	! rior -> fd		1112322	1					
ANR	1112376	UnaryOperator	!		1112322	0					
ANR	1112377	PtrMemberAccess	rior -> fd		1112322	1					
ANR	1112378	Identifier	rior		1112322	0					
ANR	1112379	Identifier	fd		1112322	1					
ANR	1112380	CompoundStatement		7:24:133:133	1112322	1					
ANR	1112381	ExpressionStatement	"eprintf ( ""rap: cannot listen.\\n"" )"	3226:2:99735:99768	1112322	0	True				
ANR	1112382	CallExpression	"eprintf ( ""rap: cannot listen.\\n"" )"		1112322	0					
ANR	1112383	Callee	eprintf		1112322	0					
ANR	1112384	Identifier	eprintf		1112322	0					
ANR	1112385	ArgumentList	"""rap: cannot listen.\\n"""		1112322	1					
ANR	1112386	Argument	"""rap: cannot listen.\\n"""		1112322	0					
ANR	1112387	PrimaryExpression	"""rap: cannot listen.\\n"""		1112322	0					
ANR	1112388	ReturnStatement	return false ;	3227:2:99772:99784	1112322	1	True				
ANR	1112389	Identifier	false		1112322	0					
ANR	1112390	IdentifierDeclStatement	RSocket * fd = rior -> fd ;	3229:1:99790:99812	1112322	5	True				
ANR	1112391	IdentifierDecl	* fd = rior -> fd		1112322	0					
ANR	1112392	IdentifierDeclType	RSocket *		1112322	0					
ANR	1112393	Identifier	fd		1112322	1					
ANR	1112394	AssignmentExpression	* fd = rior -> fd		1112322	2		=			
ANR	1112395	Identifier	fd		1112322	0					
ANR	1112396	PtrMemberAccess	rior -> fd		1112322	1					
ANR	1112397	Identifier	rior		1112322	0					
ANR	1112398	Identifier	fd		1112322	1					
ANR	1112399	ExpressionStatement	"eprintf ( ""RAP Server started (rap.loop=%s)\\n"" , r_config_get ( core -> config , ""rap.loop"" ) )"	3230:1:99815:99905	1112322	6	True				
ANR	1112400	CallExpression	"eprintf ( ""RAP Server started (rap.loop=%s)\\n"" , r_config_get ( core -> config , ""rap.loop"" ) )"		1112322	0					
ANR	1112401	Callee	eprintf		1112322	0					
ANR	1112402	Identifier	eprintf		1112322	0					
ANR	1112403	ArgumentList	"""RAP Server started (rap.loop=%s)\\n"""		1112322	1					
ANR	1112404	Argument	"""RAP Server started (rap.loop=%s)\\n"""		1112322	0					
ANR	1112405	PrimaryExpression	"""RAP Server started (rap.loop=%s)\\n"""		1112322	0					
ANR	1112406	Argument	"r_config_get ( core -> config , ""rap.loop"" )"		1112322	1					
ANR	1112407	CallExpression	"r_config_get ( core -> config , ""rap.loop"" )"		1112322	0					
ANR	1112408	Callee	r_config_get		1112322	0					
ANR	1112409	Identifier	r_config_get		1112322	0					
ANR	1112410	ArgumentList	core -> config		1112322	1					
ANR	1112411	Argument	core -> config		1112322	0					
ANR	1112412	PtrMemberAccess	core -> config		1112322	0					
ANR	1112413	Identifier	core		1112322	0					
ANR	1112414	Identifier	config		1112322	1					
ANR	1112415	Argument	"""rap.loop"""		1112322	1					
ANR	1112416	PrimaryExpression	"""rap.loop"""		1112322	0					
ANR	1112417	ExpressionStatement	"r_cons_break_push ( rap_break , rior )"	3232:1:99908:99943	1112322	7	True				
ANR	1112418	CallExpression	"r_cons_break_push ( rap_break , rior )"		1112322	0					
ANR	1112419	Callee	r_cons_break_push		1112322	0					
ANR	1112420	Identifier	r_cons_break_push		1112322	0					
ANR	1112421	ArgumentList	rap_break		1112322	1					
ANR	1112422	Argument	rap_break		1112322	0					
ANR	1112423	Identifier	rap_break		1112322	0					
ANR	1112424	Argument	rior		1112322	1					
ANR	1112425	Identifier	rior		1112322	0					
ANR	1112426	Label	reaccept :	3233:0:99945:99953	1112322	8	True				
ANR	1112427	Identifier	reaccept		1112322	0					
ANR	1112428	WhileStatement	while ( ! r_cons_is_breaked ( ) )		1112322	9					
ANR	1112429	Condition	! r_cons_is_breaked ( )	3234:8:99963:99983	1112322	0	True				
ANR	1112430	UnaryOperationExpression	! r_cons_is_breaked ( )		1112322	0					
ANR	1112431	UnaryOperator	!		1112322	0					
ANR	1112432	CallExpression	r_cons_is_breaked ( )		1112322	1					
ANR	1112433	Callee	r_cons_is_breaked		1112322	0					
ANR	1112434	Identifier	r_cons_is_breaked		1112322	0					
ANR	1112435	ArgumentList			1112322	1					
ANR	1112436	CompoundStatement		17:2:392:425	1112322	1					
ANR	1112437	IdentifierDeclStatement	RSocket * c = r_socket_accept ( fd ) ;	3235:2:99990:100023	1112322	0	True				
ANR	1112438	IdentifierDecl	* c = r_socket_accept ( fd )		1112322	0					
ANR	1112439	IdentifierDeclType	RSocket *		1112322	0					
ANR	1112440	Identifier	c		1112322	1					
ANR	1112441	AssignmentExpression	* c = r_socket_accept ( fd )		1112322	2		=			
ANR	1112442	Identifier	c		1112322	0					
ANR	1112443	CallExpression	r_socket_accept ( fd )		1112322	1					
ANR	1112444	Callee	r_socket_accept		1112322	0					
ANR	1112445	Identifier	r_socket_accept		1112322	0					
ANR	1112446	ArgumentList	fd		1112322	1					
ANR	1112447	Argument	fd		1112322	0					
ANR	1112448	Identifier	fd		1112322	0					
ANR	1112449	IfStatement	if ( ! c )		1112322	1					
ANR	1112450	Condition	! c	3236:6:100031:100032	1112322	0	True				
ANR	1112451	UnaryOperationExpression	! c		1112322	0					
ANR	1112452	UnaryOperator	!		1112322	0					
ANR	1112453	Identifier	c		1112322	1					
ANR	1112454	CompoundStatement		18:10:437:437	1112322	1					
ANR	1112455	BreakStatement	break ;	3237:3:100040:100045	1112322	0	True				
ANR	1112456	IfStatement	if ( r_cons_is_breaked ( ) )		1112322	2					
ANR	1112457	Condition	r_cons_is_breaked ( )	3239:6:100057:100076	1112322	0	True				
ANR	1112458	CallExpression	r_cons_is_breaked ( )		1112322	0					
ANR	1112459	Callee	r_cons_is_breaked		1112322	0					
ANR	1112460	Identifier	r_cons_is_breaked		1112322	0					
ANR	1112461	ArgumentList			1112322	1					
ANR	1112462	CompoundStatement		21:28:481:481	1112322	1					
ANR	1112463	GotoStatement	goto out_of_function ;	3240:3:100084:100104	1112322	0	True				
ANR	1112464	Identifier	out_of_function		1112322	0					
ANR	1112465	IfStatement	if ( ! c )		1112322	3					
ANR	1112466	Condition	! c	3242:6:100116:100117	1112322	0	True				
ANR	1112467	UnaryOperationExpression	! c		1112322	0					
ANR	1112468	UnaryOperator	!		1112322	0					
ANR	1112469	Identifier	c		1112322	1					
ANR	1112470	CompoundStatement		24:10:522:522	1112322	1					
ANR	1112471	ExpressionStatement	"eprintf ( ""rap: cannot accept\\n"" )"	3243:3:100125:100157	1112322	0	True				
ANR	1112472	CallExpression	"eprintf ( ""rap: cannot accept\\n"" )"		1112322	0					
ANR	1112473	Callee	eprintf		1112322	0					
ANR	1112474	Identifier	eprintf		1112322	0					
ANR	1112475	ArgumentList	"""rap: cannot accept\\n"""		1112322	1					
ANR	1112476	Argument	"""rap: cannot accept\\n"""		1112322	0					
ANR	1112477	PrimaryExpression	"""rap: cannot accept\\n"""		1112322	0					
ANR	1112478	ExpressionStatement	r_socket_free ( c )	3244:3:100162:100179	1112322	1	True				
ANR	1112479	CallExpression	r_socket_free ( c )		1112322	0					
ANR	1112480	Callee	r_socket_free		1112322	0					
ANR	1112481	Identifier	r_socket_free		1112322	0					
ANR	1112482	ArgumentList	c		1112322	1					
ANR	1112483	Argument	c		1112322	0					
ANR	1112484	Identifier	c		1112322	0					
ANR	1112485	GotoStatement	goto out_of_function ;	3245:3:100184:100204	1112322	2	True				
ANR	1112486	Identifier	out_of_function		1112322	0					
ANR	1112487	ExpressionStatement	"eprintf ( ""rap: client connected\\n"" )"	3247:2:100212:100247	1112322	4	True				
ANR	1112488	CallExpression	"eprintf ( ""rap: client connected\\n"" )"		1112322	0					
ANR	1112489	Callee	eprintf		1112322	0					
ANR	1112490	Identifier	eprintf		1112322	0					
ANR	1112491	ArgumentList	"""rap: client connected\\n"""		1112322	1					
ANR	1112492	Argument	"""rap: client connected\\n"""		1112322	0					
ANR	1112493	PrimaryExpression	"""rap: client connected\\n"""		1112322	0					
ANR	1112494	ForStatement	for ( ; ! r_cons_is_breaked ( ) ; )		1112322	5					
ANR	1112495	Condition	! r_cons_is_breaked ( )	3248:8:100257:100277	1112322	0	True				
ANR	1112496	UnaryOperationExpression	! r_cons_is_breaked ( )		1112322	0					
ANR	1112497	UnaryOperator	!		1112322	0					
ANR	1112498	CallExpression	r_cons_is_breaked ( )		1112322	1					
ANR	1112499	Callee	r_cons_is_breaked		1112322	0					
ANR	1112500	Identifier	r_cons_is_breaked		1112322	0					
ANR	1112501	ArgumentList			1112322	1					
ANR	1112502	CompoundStatement		30:32:683:683	1112322	1					
ANR	1112503	IfStatement	"if ( ! r_socket_read ( c , & cmd , 1 ) )"		1112322	0					
ANR	1112504	Condition	"! r_socket_read ( c , & cmd , 1 )"	3249:7:100290:100316	1112322	0	True				
ANR	1112505	UnaryOperationExpression	"! r_socket_read ( c , & cmd , 1 )"		1112322	0					
ANR	1112506	UnaryOperator	!		1112322	0					
ANR	1112507	CallExpression	"r_socket_read ( c , & cmd , 1 )"		1112322	1					
ANR	1112508	Callee	r_socket_read		1112322	0					
ANR	1112509	Identifier	r_socket_read		1112322	0					
ANR	1112510	ArgumentList	c		1112322	1					
ANR	1112511	Argument	c		1112322	0					
ANR	1112512	Identifier	c		1112322	0					
ANR	1112513	Argument	& cmd		1112322	1					
ANR	1112514	UnaryOperationExpression	& cmd		1112322	0					
ANR	1112515	UnaryOperator	&		1112322	0					
ANR	1112516	Identifier	cmd		1112322	1					
ANR	1112517	Argument	1		1112322	2					
ANR	1112518	PrimaryExpression	1		1112322	0					
ANR	1112519	CompoundStatement		31:36:721:721	1112322	1					
ANR	1112520	ExpressionStatement	"eprintf ( ""rap: connection closed\\n"" )"	3250:4:100325:100361	1112322	0	True				
ANR	1112521	CallExpression	"eprintf ( ""rap: connection closed\\n"" )"		1112322	0					
ANR	1112522	Callee	eprintf		1112322	0					
ANR	1112523	Identifier	eprintf		1112322	0					
ANR	1112524	ArgumentList	"""rap: connection closed\\n"""		1112322	1					
ANR	1112525	Argument	"""rap: connection closed\\n"""		1112322	0					
ANR	1112526	PrimaryExpression	"""rap: connection closed\\n"""		1112322	0					
ANR	1112527	IfStatement	"if ( r_config_get_i ( core -> config , ""rap.loop"" ) )"		1112322	1					
ANR	1112528	Condition	"r_config_get_i ( core -> config , ""rap.loop"" )"	3251:8:100371:100411	1112322	0	True				
ANR	1112529	CallExpression	"r_config_get_i ( core -> config , ""rap.loop"" )"		1112322	0					
ANR	1112530	Callee	r_config_get_i		1112322	0					
ANR	1112531	Identifier	r_config_get_i		1112322	0					
ANR	1112532	ArgumentList	core -> config		1112322	1					
ANR	1112533	Argument	core -> config		1112322	0					
ANR	1112534	PtrMemberAccess	core -> config		1112322	0					
ANR	1112535	Identifier	core		1112322	0					
ANR	1112536	Identifier	config		1112322	1					
ANR	1112537	Argument	"""rap.loop"""		1112322	1					
ANR	1112538	PrimaryExpression	"""rap.loop"""		1112322	0					
ANR	1112539	CompoundStatement		33:51:816:816	1112322	1					
ANR	1112540	ExpressionStatement	"eprintf ( ""rap: waiting for new connection\\n"" )"	3252:5:100421:100466	1112322	0	True				
ANR	1112541	CallExpression	"eprintf ( ""rap: waiting for new connection\\n"" )"		1112322	0					
ANR	1112542	Callee	eprintf		1112322	0					
ANR	1112543	Identifier	eprintf		1112322	0					
ANR	1112544	ArgumentList	"""rap: waiting for new connection\\n"""		1112322	1					
ANR	1112545	Argument	"""rap: waiting for new connection\\n"""		1112322	0					
ANR	1112546	PrimaryExpression	"""rap: waiting for new connection\\n"""		1112322	0					
ANR	1112547	ExpressionStatement	r_socket_free ( c )	3253:5:100473:100490	1112322	1	True				
ANR	1112548	CallExpression	r_socket_free ( c )		1112322	0					
ANR	1112549	Callee	r_socket_free		1112322	0					
ANR	1112550	Identifier	r_socket_free		1112322	0					
ANR	1112551	ArgumentList	c		1112322	1					
ANR	1112552	Argument	c		1112322	0					
ANR	1112553	Identifier	c		1112322	0					
ANR	1112554	GotoStatement	goto reaccept ;	3254:5:100497:100510	1112322	2	True				
ANR	1112555	Identifier	reaccept		1112322	0					
ANR	1112556	GotoStatement	goto out_of_function ;	3256:4:100522:100542	1112322	2	True				
ANR	1112557	Identifier	out_of_function		1112322	0					
ANR	1112558	SwitchStatement	switch ( ( ut8 ) cmd )		1112322	1					
ANR	1112559	Condition	( ut8 ) cmd	3258:11:100560:100567	1112322	0	True				
ANR	1112560	CastExpression	( ut8 ) cmd		1112322	0					
ANR	1112561	CastTarget	ut8		1112322	0					
ANR	1112562	Identifier	cmd		1112322	1					
ANR	1112563	CompoundStatement		192:4:5331:5385	1112322	1					
ANR	1112564	Label	case RMT_OPEN :	3259:3:100575:100588	1112322	0	True				
ANR	1112565	Identifier	RMT_OPEN		1112322	0					
ANR	1112566	ExpressionStatement	"r_socket_read_block ( c , & flg , 1 )"	3260:4:100594:100626	1112322	1	True				
ANR	1112567	CallExpression	"r_socket_read_block ( c , & flg , 1 )"		1112322	0					
ANR	1112568	Callee	r_socket_read_block		1112322	0					
ANR	1112569	Identifier	r_socket_read_block		1112322	0					
ANR	1112570	ArgumentList	c		1112322	1					
ANR	1112571	Argument	c		1112322	0					
ANR	1112572	Identifier	c		1112322	0					
ANR	1112573	Argument	& flg		1112322	1					
ANR	1112574	UnaryOperationExpression	& flg		1112322	0					
ANR	1112575	UnaryOperator	&		1112322	0					
ANR	1112576	Identifier	flg		1112322	1					
ANR	1112577	Argument	1		1112322	2					
ANR	1112578	PrimaryExpression	1		1112322	0					
ANR	1112579	ExpressionStatement	"eprintf ( ""open (%d): "" , cmd )"	3261:4:100641:100669	1112322	2	True				
ANR	1112580	CallExpression	"eprintf ( ""open (%d): "" , cmd )"		1112322	0					
ANR	1112581	Callee	eprintf		1112322	0					
ANR	1112582	Identifier	eprintf		1112322	0					
ANR	1112583	ArgumentList	"""open (%d): """		1112322	1					
ANR	1112584	Argument	"""open (%d): """		1112322	0					
ANR	1112585	PrimaryExpression	"""open (%d): """		1112322	0					
ANR	1112586	Argument	cmd		1112322	1					
ANR	1112587	Identifier	cmd		1112322	0					
ANR	1112588	ExpressionStatement	"r_socket_read_block ( c , & cmd , 1 )"	3262:4:100675:100707	1112322	3	True				
ANR	1112589	CallExpression	"r_socket_read_block ( c , & cmd , 1 )"		1112322	0					
ANR	1112590	Callee	r_socket_read_block		1112322	0					
ANR	1112591	Identifier	r_socket_read_block		1112322	0					
ANR	1112592	ArgumentList	c		1112322	1					
ANR	1112593	Argument	c		1112322	0					
ANR	1112594	Identifier	c		1112322	0					
ANR	1112595	Argument	& cmd		1112322	1					
ANR	1112596	UnaryOperationExpression	& cmd		1112322	0					
ANR	1112597	UnaryOperator	&		1112322	0					
ANR	1112598	Identifier	cmd		1112322	1					
ANR	1112599	Argument	1		1112322	2					
ANR	1112600	PrimaryExpression	1		1112322	0					
ANR	1112601	ExpressionStatement	pipefd = - 1	3263:4:100720:100731	1112322	4	True				
ANR	1112602	AssignmentExpression	pipefd = - 1		1112322	0		=			
ANR	1112603	Identifier	pipefd		1112322	0					
ANR	1112604	UnaryOperationExpression	- 1		1112322	1					
ANR	1112605	UnaryOperator	-		1112322	0					
ANR	1112606	PrimaryExpression	1		1112322	1					
ANR	1112607	ExpressionStatement	ptr = malloc ( cmd + 1 )	3264:4:100737:100759	1112322	5	True				
ANR	1112608	AssignmentExpression	ptr = malloc ( cmd + 1 )		1112322	0		=			
ANR	1112609	Identifier	ptr		1112322	0					
ANR	1112610	CallExpression	malloc ( cmd + 1 )		1112322	1					
ANR	1112611	Callee	malloc		1112322	0					
ANR	1112612	Identifier	malloc		1112322	0					
ANR	1112613	ArgumentList	cmd + 1		1112322	1					
ANR	1112614	Argument	cmd + 1		1112322	0					
ANR	1112615	AdditiveExpression	cmd + 1		1112322	0		+			
ANR	1112616	Identifier	cmd		1112322	0					
ANR	1112617	PrimaryExpression	1		1112322	1					
ANR	1112618	IfStatement	if ( ! ptr )		1112322	6					
ANR	1112619	Condition	! ptr	3266:8:100816:100819	1112322	0	True				
ANR	1112620	UnaryOperationExpression	! ptr		1112322	0					
ANR	1112621	UnaryOperator	!		1112322	0					
ANR	1112622	Identifier	ptr		1112322	1					
ANR	1112623	CompoundStatement		48:14:1224:1224	1112322	1					
ANR	1112624	ExpressionStatement	"eprintf ( ""Cannot malloc in rmt-open len = %d\\n"" , cmd )"	3267:5:100829:100882	1112322	0	True				
ANR	1112625	CallExpression	"eprintf ( ""Cannot malloc in rmt-open len = %d\\n"" , cmd )"		1112322	0					
ANR	1112626	Callee	eprintf		1112322	0					
ANR	1112627	Identifier	eprintf		1112322	0					
ANR	1112628	ArgumentList	"""Cannot malloc in rmt-open len = %d\\n"""		1112322	1					
ANR	1112629	Argument	"""Cannot malloc in rmt-open len = %d\\n"""		1112322	0					
ANR	1112630	PrimaryExpression	"""Cannot malloc in rmt-open len = %d\\n"""		1112322	0					
ANR	1112631	Argument	cmd		1112322	1					
ANR	1112632	Identifier	cmd		1112322	0					
ANR	1112633	ElseStatement	else		1112322	0					
ANR	1112634	CompoundStatement		54:5:1425:1445	1112322	0					
ANR	1112635	IdentifierDeclStatement	"ut64 baddr = r_config_get_i ( core -> config , ""bin.laddr"" ) ;"	3269:5:100902:100957	1112322	0	True				
ANR	1112636	IdentifierDecl	"baddr = r_config_get_i ( core -> config , ""bin.laddr"" )"		1112322	0					
ANR	1112637	IdentifierDeclType	ut64		1112322	0					
ANR	1112638	Identifier	baddr		1112322	1					
ANR	1112639	AssignmentExpression	"baddr = r_config_get_i ( core -> config , ""bin.laddr"" )"		1112322	2		=			
ANR	1112640	Identifier	baddr		1112322	0					
ANR	1112641	CallExpression	"r_config_get_i ( core -> config , ""bin.laddr"" )"		1112322	1					
ANR	1112642	Callee	r_config_get_i		1112322	0					
ANR	1112643	Identifier	r_config_get_i		1112322	0					
ANR	1112644	ArgumentList	core -> config		1112322	1					
ANR	1112645	Argument	core -> config		1112322	0					
ANR	1112646	PtrMemberAccess	core -> config		1112322	0					
ANR	1112647	Identifier	core		1112322	0					
ANR	1112648	Identifier	config		1112322	1					
ANR	1112649	Argument	"""bin.laddr"""		1112322	1					
ANR	1112650	PrimaryExpression	"""bin.laddr"""		1112322	0					
ANR	1112651	ExpressionStatement	"r_socket_read_block ( c , ptr , cmd )"	3270:5:100964:100997	1112322	1	True				
ANR	1112652	CallExpression	"r_socket_read_block ( c , ptr , cmd )"		1112322	0					
ANR	1112653	Callee	r_socket_read_block		1112322	0					
ANR	1112654	Identifier	r_socket_read_block		1112322	0					
ANR	1112655	ArgumentList	c		1112322	1					
ANR	1112656	Argument	c		1112322	0					
ANR	1112657	Identifier	c		1112322	0					
ANR	1112658	Argument	ptr		1112322	1					
ANR	1112659	Identifier	ptr		1112322	0					
ANR	1112660	Argument	cmd		1112322	2					
ANR	1112661	Identifier	cmd		1112322	0					
ANR	1112662	ExpressionStatement	ptr [ cmd ] = 0	3271:5:101004:101016	1112322	2	True				
ANR	1112663	AssignmentExpression	ptr [ cmd ] = 0		1112322	0		=			
ANR	1112664	ArrayIndexing	ptr [ cmd ]		1112322	0					
ANR	1112665	Identifier	ptr		1112322	0					
ANR	1112666	Identifier	cmd		1112322	1					
ANR	1112667	PrimaryExpression	0		1112322	1					
ANR	1112668	IdentifierDeclStatement	ut32 perm = R_PERM_R ;	3272:5:101023:101043	1112322	3	True				
ANR	1112669	IdentifierDecl	perm = R_PERM_R		1112322	0					
ANR	1112670	IdentifierDeclType	ut32		1112322	0					
ANR	1112671	Identifier	perm		1112322	1					
ANR	1112672	AssignmentExpression	perm = R_PERM_R		1112322	2		=			
ANR	1112673	Identifier	R_PERM_R		1112322	0					
ANR	1112674	Identifier	R_PERM_R		1112322	1					
ANR	1112675	IfStatement	if ( flg & R_PERM_W )		1112322	4					
ANR	1112676	Condition	flg & R_PERM_W	3273:9:101054:101067	1112322	0	True				
ANR	1112677	BitAndExpression	flg & R_PERM_W		1112322	0		&			
ANR	1112678	Identifier	flg		1112322	0					
ANR	1112679	Identifier	R_PERM_W		1112322	1					
ANR	1112680	CompoundStatement		55:25:1472:1472	1112322	1					
ANR	1112681	ExpressionStatement	perm |= R_PERM_W	3274:6:101078:101094	1112322	0	True				
ANR	1112682	AssignmentExpression	perm |= R_PERM_W		1112322	0		|=			
ANR	1112683	Identifier	perm		1112322	0					
ANR	1112684	Identifier	R_PERM_W		1112322	1					
ANR	1112685	IfStatement	"if ( r_core_file_open ( core , ( const char * ) ptr , perm , 0 ) )"		1112322	5					
ANR	1112686	Condition	"r_core_file_open ( core , ( const char * ) ptr , perm , 0 )"	3276:9:101112:101162	1112322	0	True				
ANR	1112687	CallExpression	"r_core_file_open ( core , ( const char * ) ptr , perm , 0 )"		1112322	0					
ANR	1112688	Callee	r_core_file_open		1112322	0					
ANR	1112689	Identifier	r_core_file_open		1112322	0					
ANR	1112690	ArgumentList	core		1112322	1					
ANR	1112691	Argument	core		1112322	0					
ANR	1112692	Identifier	core		1112322	0					
ANR	1112693	Argument	( const char * ) ptr		1112322	1					
ANR	1112694	CastExpression	( const char * ) ptr		1112322	0					
ANR	1112695	CastTarget	const char *		1112322	0					
ANR	1112696	Identifier	ptr		1112322	1					
ANR	1112697	Argument	perm		1112322	2					
ANR	1112698	Identifier	perm		1112322	0					
ANR	1112699	Argument	0		1112322	3					
ANR	1112700	PrimaryExpression	0		1112322	0					
ANR	1112701	CompoundStatement		59:6:1575:1614	1112322	1					
ANR	1112702	IdentifierDeclStatement	int fd = r_io_fd_get_current ( core -> io ) ;	3277:6:101173:101212	1112322	0	True				
ANR	1112703	IdentifierDecl	fd = r_io_fd_get_current ( core -> io )		1112322	0					
ANR	1112704	IdentifierDeclType	int		1112322	0					
ANR	1112705	Identifier	fd		1112322	1					
ANR	1112706	AssignmentExpression	fd = r_io_fd_get_current ( core -> io )		1112322	2		=			
ANR	1112707	Identifier	fd		1112322	0					
ANR	1112708	CallExpression	r_io_fd_get_current ( core -> io )		1112322	1					
ANR	1112709	Callee	r_io_fd_get_current		1112322	0					
ANR	1112710	Identifier	r_io_fd_get_current		1112322	0					
ANR	1112711	ArgumentList	core -> io		1112322	1					
ANR	1112712	Argument	core -> io		1112322	0					
ANR	1112713	PtrMemberAccess	core -> io		1112322	0					
ANR	1112714	Identifier	core		1112322	0					
ANR	1112715	Identifier	io		1112322	1					
ANR	1112716	ExpressionStatement	"r_core_bin_load ( core , NULL , baddr )"	3278:6:101220:101255	1112322	1	True				
ANR	1112717	CallExpression	"r_core_bin_load ( core , NULL , baddr )"		1112322	0					
ANR	1112718	Callee	r_core_bin_load		1112322	0					
ANR	1112719	Identifier	r_core_bin_load		1112322	0					
ANR	1112720	ArgumentList	core		1112322	1					
ANR	1112721	Argument	core		1112322	0					
ANR	1112722	Identifier	core		1112322	0					
ANR	1112723	Argument	NULL		1112322	1					
ANR	1112724	Identifier	NULL		1112322	0					
ANR	1112725	Argument	baddr		1112322	2					
ANR	1112726	Identifier	baddr		1112322	0					
ANR	1112727	ExpressionStatement	"r_io_map_add ( core -> io , fd , perm , 0 , 0 , r_io_fd_size ( core -> io , fd ) )"	3279:6:101263:101331	1112322	2	True				
ANR	1112728	CallExpression	"r_io_map_add ( core -> io , fd , perm , 0 , 0 , r_io_fd_size ( core -> io , fd ) )"		1112322	0					
ANR	1112729	Callee	r_io_map_add		1112322	0					
ANR	1112730	Identifier	r_io_map_add		1112322	0					
ANR	1112731	ArgumentList	core -> io		1112322	1					
ANR	1112732	Argument	core -> io		1112322	0					
ANR	1112733	PtrMemberAccess	core -> io		1112322	0					
ANR	1112734	Identifier	core		1112322	0					
ANR	1112735	Identifier	io		1112322	1					
ANR	1112736	Argument	fd		1112322	1					
ANR	1112737	Identifier	fd		1112322	0					
ANR	1112738	Argument	perm		1112322	2					
ANR	1112739	Identifier	perm		1112322	0					
ANR	1112740	Argument	0		1112322	3					
ANR	1112741	PrimaryExpression	0		1112322	0					
ANR	1112742	Argument	0		1112322	4					
ANR	1112743	PrimaryExpression	0		1112322	0					
ANR	1112744	Argument	"r_io_fd_size ( core -> io , fd )"		1112322	5					
ANR	1112745	CallExpression	"r_io_fd_size ( core -> io , fd )"		1112322	0					
ANR	1112746	Callee	r_io_fd_size		1112322	0					
ANR	1112747	Identifier	r_io_fd_size		1112322	0					
ANR	1112748	ArgumentList	core -> io		1112322	1					
ANR	1112749	Argument	core -> io		1112322	0					
ANR	1112750	PtrMemberAccess	core -> io		1112322	0					
ANR	1112751	Identifier	core		1112322	0					
ANR	1112752	Identifier	io		1112322	1					
ANR	1112753	Argument	fd		1112322	1					
ANR	1112754	Identifier	fd		1112322	0					
ANR	1112755	IfStatement	if ( core -> file )		1112322	3					
ANR	1112756	Condition	core -> file	3280:10:101343:101352	1112322	0	True				
ANR	1112757	PtrMemberAccess	core -> file		1112322	0					
ANR	1112758	Identifier	core		1112322	0					
ANR	1112759	Identifier	file		1112322	1					
ANR	1112760	CompoundStatement		62:22:1757:1757	1112322	1					
ANR	1112761	ExpressionStatement	pipefd = fd	3281:7:101364:101375	1112322	0	True				
ANR	1112762	AssignmentExpression	pipefd = fd		1112322	0		=			
ANR	1112763	Identifier	pipefd		1112322	0					
ANR	1112764	Identifier	fd		1112322	1					
ANR	1112765	ElseStatement	else		1112322	0					
ANR	1112766	CompoundStatement		64:13:1792:1792	1112322	0					
ANR	1112767	ExpressionStatement	pipefd = - 1	3283:7:101399:101410	1112322	0	True				
ANR	1112768	AssignmentExpression	pipefd = - 1		1112322	0		=			
ANR	1112769	Identifier	pipefd		1112322	0					
ANR	1112770	UnaryOperationExpression	- 1		1112322	1					
ANR	1112771	UnaryOperator	-		1112322	0					
ANR	1112772	PrimaryExpression	1		1112322	1					
ANR	1112773	ExpressionStatement	"eprintf ( ""(flags: %d) len: %d filename: '%s'\\n"" , flg , cmd , ptr )"	3285:6:101426:101496	1112322	4	True				
ANR	1112774	CallExpression	"eprintf ( ""(flags: %d) len: %d filename: '%s'\\n"" , flg , cmd , ptr )"		1112322	0					
ANR	1112775	Callee	eprintf		1112322	0					
ANR	1112776	Identifier	eprintf		1112322	0					
ANR	1112777	ArgumentList	"""(flags: %d) len: %d filename: '%s'\\n"""		1112322	1					
ANR	1112778	Argument	"""(flags: %d) len: %d filename: '%s'\\n"""		1112322	0					
ANR	1112779	PrimaryExpression	"""(flags: %d) len: %d filename: '%s'\\n"""		1112322	0					
ANR	1112780	Argument	flg		1112322	1					
ANR	1112781	Identifier	flg		1112322	0					
ANR	1112782	Argument	cmd		1112322	2					
ANR	1112783	Identifier	cmd		1112322	0					
ANR	1112784	Argument	ptr		1112322	3					
ANR	1112785	Identifier	ptr		1112322	0					
ANR	1112786	ElseStatement	else		1112322	0					
ANR	1112787	CompoundStatement		69:12:1928:1928	1112322	0					
ANR	1112788	ExpressionStatement	pipefd = - 1	3288:6:101534:101545	1112322	0	True				
ANR	1112789	AssignmentExpression	pipefd = - 1		1112322	0		=			
ANR	1112790	Identifier	pipefd		1112322	0					
ANR	1112791	UnaryOperationExpression	- 1		1112322	1					
ANR	1112792	UnaryOperator	-		1112322	0					
ANR	1112793	PrimaryExpression	1		1112322	1					
ANR	1112794	ExpressionStatement	"eprintf ( ""Cannot open file (%s)\\n"" , ptr )"	3289:6:101553:101593	1112322	1	True				
ANR	1112795	CallExpression	"eprintf ( ""Cannot open file (%s)\\n"" , ptr )"		1112322	0					
ANR	1112796	Callee	eprintf		1112322	0					
ANR	1112797	Identifier	eprintf		1112322	0					
ANR	1112798	ArgumentList	"""Cannot open file (%s)\\n"""		1112322	1					
ANR	1112799	Argument	"""Cannot open file (%s)\\n"""		1112322	0					
ANR	1112800	PrimaryExpression	"""Cannot open file (%s)\\n"""		1112322	0					
ANR	1112801	Argument	ptr		1112322	1					
ANR	1112802	Identifier	ptr		1112322	0					
ANR	1112803	ExpressionStatement	r_socket_close ( c )	3290:6:101601:101619	1112322	2	True				
ANR	1112804	CallExpression	r_socket_close ( c )		1112322	0					
ANR	1112805	Callee	r_socket_close		1112322	0					
ANR	1112806	Identifier	r_socket_close		1112322	0					
ANR	1112807	ArgumentList	c		1112322	1					
ANR	1112808	Argument	c		1112322	0					
ANR	1112809	Identifier	c		1112322	0					
ANR	1112810	IfStatement	"if ( r_config_get_i ( core -> config , ""rap.loop"" ) )"		1112322	3					
ANR	1112811	Condition	"r_config_get_i ( core -> config , ""rap.loop"" )"	3291:10:101631:101671	1112322	0	True				
ANR	1112812	CallExpression	"r_config_get_i ( core -> config , ""rap.loop"" )"		1112322	0					
ANR	1112813	Callee	r_config_get_i		1112322	0					
ANR	1112814	Identifier	r_config_get_i		1112322	0					
ANR	1112815	ArgumentList	core -> config		1112322	1					
ANR	1112816	Argument	core -> config		1112322	0					
ANR	1112817	PtrMemberAccess	core -> config		1112322	0					
ANR	1112818	Identifier	core		1112322	0					
ANR	1112819	Identifier	config		1112322	1					
ANR	1112820	Argument	"""rap.loop"""		1112322	1					
ANR	1112821	PrimaryExpression	"""rap.loop"""		1112322	0					
ANR	1112822	CompoundStatement		73:53:2076:2076	1112322	1					
ANR	1112823	ExpressionStatement	"eprintf ( ""rap: waiting for new connection\\n"" )"	3292:7:101683:101728	1112322	0	True				
ANR	1112824	CallExpression	"eprintf ( ""rap: waiting for new connection\\n"" )"		1112322	0					
ANR	1112825	Callee	eprintf		1112322	0					
ANR	1112826	Identifier	eprintf		1112322	0					
ANR	1112827	ArgumentList	"""rap: waiting for new connection\\n"""		1112322	1					
ANR	1112828	Argument	"""rap: waiting for new connection\\n"""		1112322	0					
ANR	1112829	PrimaryExpression	"""rap: waiting for new connection\\n"""		1112322	0					
ANR	1112830	ExpressionStatement	r_socket_free ( c )	3293:7:101737:101754	1112322	1	True				
ANR	1112831	CallExpression	r_socket_free ( c )		1112322	0					
ANR	1112832	Callee	r_socket_free		1112322	0					
ANR	1112833	Identifier	r_socket_free		1112322	0					
ANR	1112834	ArgumentList	c		1112322	1					
ANR	1112835	Argument	c		1112322	0					
ANR	1112836	Identifier	c		1112322	0					
ANR	1112837	GotoStatement	goto reaccept ;	3294:7:101763:101776	1112322	2	True				
ANR	1112838	Identifier	reaccept		1112322	0					
ANR	1112839	GotoStatement	goto out_of_function ;	3296:6:101792:101812	1112322	4	True				
ANR	1112840	Identifier	out_of_function		1112322	0					
ANR	1112841	ExpressionStatement	buf [ 0 ] = RMT_OPEN | RMT_REPLY	3299:4:101871:101900	1112322	7	True				
ANR	1112842	AssignmentExpression	buf [ 0 ] = RMT_OPEN | RMT_REPLY		1112322	0		=			
ANR	1112843	ArrayIndexing	buf [ 0 ]		1112322	0					
ANR	1112844	Identifier	buf		1112322	0					
ANR	1112845	PrimaryExpression	0		1112322	1					
ANR	1112846	InclusiveOrExpression	RMT_OPEN | RMT_REPLY		1112322	1		|			
ANR	1112847	Identifier	RMT_OPEN		1112322	0					
ANR	1112848	Identifier	RMT_REPLY		1112322	1					
ANR	1112849	ExpressionStatement	"r_write_be32 ( buf + 1 , pipefd )"	3300:4:101906:101936	1112322	8	True				
ANR	1112850	CallExpression	"r_write_be32 ( buf + 1 , pipefd )"		1112322	0					
ANR	1112851	Callee	r_write_be32		1112322	0					
ANR	1112852	Identifier	r_write_be32		1112322	0					
ANR	1112853	ArgumentList	buf + 1		1112322	1					
ANR	1112854	Argument	buf + 1		1112322	0					
ANR	1112855	AdditiveExpression	buf + 1		1112322	0		+			
ANR	1112856	Identifier	buf		1112322	0					
ANR	1112857	PrimaryExpression	1		1112322	1					
ANR	1112858	Argument	pipefd		1112322	1					
ANR	1112859	Identifier	pipefd		1112322	0					
ANR	1112860	ExpressionStatement	"r_socket_write ( c , buf , 5 )"	3301:4:101942:101968	1112322	9	True				
ANR	1112861	CallExpression	"r_socket_write ( c , buf , 5 )"		1112322	0					
ANR	1112862	Callee	r_socket_write		1112322	0					
ANR	1112863	Identifier	r_socket_write		1112322	0					
ANR	1112864	ArgumentList	c		1112322	1					
ANR	1112865	Argument	c		1112322	0					
ANR	1112866	Identifier	c		1112322	0					
ANR	1112867	Argument	buf		1112322	1					
ANR	1112868	Identifier	buf		1112322	0					
ANR	1112869	Argument	5		1112322	2					
ANR	1112870	PrimaryExpression	5		1112322	0					
ANR	1112871	ExpressionStatement	r_socket_flush ( c )	3302:4:101974:101992	1112322	10	True				
ANR	1112872	CallExpression	r_socket_flush ( c )		1112322	0					
ANR	1112873	Callee	r_socket_flush		1112322	0					
ANR	1112874	Identifier	r_socket_flush		1112322	0					
ANR	1112875	ArgumentList	c		1112322	1					
ANR	1112876	Argument	c		1112322	0					
ANR	1112877	Identifier	c		1112322	0					
ANR	1112878	ExpressionStatement	R_FREE ( ptr )	3303:4:101998:102010	1112322	11	True				
ANR	1112879	CallExpression	R_FREE ( ptr )		1112322	0					
ANR	1112880	Callee	R_FREE		1112322	0					
ANR	1112881	Identifier	R_FREE		1112322	0					
ANR	1112882	ArgumentList	ptr		1112322	1					
ANR	1112883	Argument	ptr		1112322	0					
ANR	1112884	Identifier	ptr		1112322	0					
ANR	1112885	BreakStatement	break ;	3304:4:102016:102021	1112322	12	True				
ANR	1112886	Label	case RMT_READ :	3305:3:102026:102039	1112322	13	True				
ANR	1112887	Identifier	RMT_READ		1112322	0					
ANR	1112888	ExpressionStatement	"r_socket_read_block ( c , ( ut8 * ) & buf , 4 )"	3306:4:102045:102083	1112322	14	True				
ANR	1112889	CallExpression	"r_socket_read_block ( c , ( ut8 * ) & buf , 4 )"		1112322	0					
ANR	1112890	Callee	r_socket_read_block		1112322	0					
ANR	1112891	Identifier	r_socket_read_block		1112322	0					
ANR	1112892	ArgumentList	c		1112322	1					
ANR	1112893	Argument	c		1112322	0					
ANR	1112894	Identifier	c		1112322	0					
ANR	1112895	Argument	( ut8 * ) & buf		1112322	1					
ANR	1112896	CastExpression	( ut8 * ) & buf		1112322	0					
ANR	1112897	CastTarget	ut8 *		1112322	0					
ANR	1112898	UnaryOperationExpression	& buf		1112322	1					
ANR	1112899	UnaryOperator	&		1112322	0					
ANR	1112900	Identifier	buf		1112322	1					
ANR	1112901	Argument	4		1112322	2					
ANR	1112902	PrimaryExpression	4		1112322	0					
ANR	1112903	ExpressionStatement	i = r_read_be32 ( buf )	3307:4:102089:102110	1112322	15	True				
ANR	1112904	AssignmentExpression	i = r_read_be32 ( buf )		1112322	0		=			
ANR	1112905	Identifier	i		1112322	0					
ANR	1112906	CallExpression	r_read_be32 ( buf )		1112322	1					
ANR	1112907	Callee	r_read_be32		1112322	0					
ANR	1112908	Identifier	r_read_be32		1112322	0					
ANR	1112909	ArgumentList	buf		1112322	1					
ANR	1112910	Argument	buf		1112322	0					
ANR	1112911	Identifier	buf		1112322	0					
ANR	1112912	ExpressionStatement	ptr = ( ut8 * ) malloc ( i + core -> blocksize + 5 )	3308:4:102116:102161	1112322	16	True				
ANR	1112913	AssignmentExpression	ptr = ( ut8 * ) malloc ( i + core -> blocksize + 5 )		1112322	0		=			
ANR	1112914	Identifier	ptr		1112322	0					
ANR	1112915	CastExpression	( ut8 * ) malloc ( i + core -> blocksize + 5 )		1112322	1					
ANR	1112916	CastTarget	ut8 *		1112322	0					
ANR	1112917	CallExpression	malloc ( i + core -> blocksize + 5 )		1112322	1					
ANR	1112918	Callee	malloc		1112322	0					
ANR	1112919	Identifier	malloc		1112322	0					
ANR	1112920	ArgumentList	i + core -> blocksize + 5		1112322	1					
ANR	1112921	Argument	i + core -> blocksize + 5		1112322	0					
ANR	1112922	AdditiveExpression	i + core -> blocksize + 5		1112322	0		+			
ANR	1112923	Identifier	i		1112322	0					
ANR	1112924	AdditiveExpression	core -> blocksize + 5		1112322	1		+			
ANR	1112925	PtrMemberAccess	core -> blocksize		1112322	0					
ANR	1112926	Identifier	core		1112322	0					
ANR	1112927	Identifier	blocksize		1112322	1					
ANR	1112928	PrimaryExpression	5		1112322	1					
ANR	1112929	IfStatement	if ( ptr )		1112322	17					
ANR	1112930	Condition	ptr	3309:8:102171:102173	1112322	0	True				
ANR	1112931	Identifier	ptr		1112322	0					
ANR	1112932	CompoundStatement		91:13:2578:2578	1112322	1					
ANR	1112933	ExpressionStatement	r_core_block_read ( core )	3310:5:102183:102207	1112322	0	True				
ANR	1112934	CallExpression	r_core_block_read ( core )		1112322	0					
ANR	1112935	Callee	r_core_block_read		1112322	0					
ANR	1112936	Identifier	r_core_block_read		1112322	0					
ANR	1112937	ArgumentList	core		1112322	1					
ANR	1112938	Argument	core		1112322	0					
ANR	1112939	Identifier	core		1112322	0					
ANR	1112940	ExpressionStatement	ptr [ 0 ] = RMT_READ | RMT_REPLY	3311:5:102214:102243	1112322	1	True				
ANR	1112941	AssignmentExpression	ptr [ 0 ] = RMT_READ | RMT_REPLY		1112322	0		=			
ANR	1112942	ArrayIndexing	ptr [ 0 ]		1112322	0					
ANR	1112943	Identifier	ptr		1112322	0					
ANR	1112944	PrimaryExpression	0		1112322	1					
ANR	1112945	InclusiveOrExpression	RMT_READ | RMT_REPLY		1112322	1		|			
ANR	1112946	Identifier	RMT_READ		1112322	0					
ANR	1112947	Identifier	RMT_REPLY		1112322	1					
ANR	1112948	IfStatement	if ( i > RMT_MAX )		1112322	2					
ANR	1112949	Condition	i > RMT_MAX	3312:9:102254:102264	1112322	0	True				
ANR	1112950	RelationalExpression	i > RMT_MAX		1112322	0		>			
ANR	1112951	Identifier	i		1112322	0					
ANR	1112952	Identifier	RMT_MAX		1112322	1					
ANR	1112953	CompoundStatement		94:22:2669:2669	1112322	1					
ANR	1112954	ExpressionStatement	i = RMT_MAX	3313:6:102275:102286	1112322	0	True				
ANR	1112955	AssignmentExpression	i = RMT_MAX		1112322	0		=			
ANR	1112956	Identifier	i		1112322	0					
ANR	1112957	Identifier	RMT_MAX		1112322	1					
ANR	1112958	IfStatement	if ( i > core -> blocksize )		1112322	3					
ANR	1112959	Condition	i > core -> blocksize	3315:9:102304:102322	1112322	0	True				
ANR	1112960	RelationalExpression	i > core -> blocksize		1112322	0		>			
ANR	1112961	Identifier	i		1112322	0					
ANR	1112962	PtrMemberAccess	core -> blocksize		1112322	1					
ANR	1112963	Identifier	core		1112322	0					
ANR	1112964	Identifier	blocksize		1112322	1					
ANR	1112965	CompoundStatement		97:30:2727:2727	1112322	1					
ANR	1112966	ExpressionStatement	"r_core_block_size ( core , i )"	3316:6:102333:102360	1112322	0	True				
ANR	1112967	CallExpression	"r_core_block_size ( core , i )"		1112322	0					
ANR	1112968	Callee	r_core_block_size		1112322	0					
ANR	1112969	Identifier	r_core_block_size		1112322	0					
ANR	1112970	ArgumentList	core		1112322	1					
ANR	1112971	Argument	core		1112322	0					
ANR	1112972	Identifier	core		1112322	0					
ANR	1112973	Argument	i		1112322	1					
ANR	1112974	Identifier	i		1112322	0					
ANR	1112975	IfStatement	if ( i + 128 < core -> blocksize )		1112322	4					
ANR	1112976	Condition	i + 128 < core -> blocksize	3318:9:102378:102402	1112322	0	True				
ANR	1112977	RelationalExpression	i + 128 < core -> blocksize		1112322	0		<			
ANR	1112978	AdditiveExpression	i + 128		1112322	0		+			
ANR	1112979	Identifier	i		1112322	0					
ANR	1112980	PrimaryExpression	128		1112322	1					
ANR	1112981	PtrMemberAccess	core -> blocksize		1112322	1					
ANR	1112982	Identifier	core		1112322	0					
ANR	1112983	Identifier	blocksize		1112322	1					
ANR	1112984	CompoundStatement		100:36:2807:2807	1112322	1					
ANR	1112985	ExpressionStatement	"r_core_block_size ( core , i )"	3319:6:102413:102440	1112322	0	True				
ANR	1112986	CallExpression	"r_core_block_size ( core , i )"		1112322	0					
ANR	1112987	Callee	r_core_block_size		1112322	0					
ANR	1112988	Identifier	r_core_block_size		1112322	0					
ANR	1112989	ArgumentList	core		1112322	1					
ANR	1112990	Argument	core		1112322	0					
ANR	1112991	Identifier	core		1112322	0					
ANR	1112992	Argument	i		1112322	1					
ANR	1112993	Identifier	i		1112322	0					
ANR	1112994	ExpressionStatement	"r_write_be32 ( ptr + 1 , i )"	3321:5:102454:102479	1112322	5	True				
ANR	1112995	CallExpression	"r_write_be32 ( ptr + 1 , i )"		1112322	0					
ANR	1112996	Callee	r_write_be32		1112322	0					
ANR	1112997	Identifier	r_write_be32		1112322	0					
ANR	1112998	ArgumentList	ptr + 1		1112322	1					
ANR	1112999	Argument	ptr + 1		1112322	0					
ANR	1113000	AdditiveExpression	ptr + 1		1112322	0		+			
ANR	1113001	Identifier	ptr		1112322	0					
ANR	1113002	PrimaryExpression	1		1112322	1					
ANR	1113003	Argument	i		1112322	1					
ANR	1113004	Identifier	i		1112322	0					
ANR	1113005	ExpressionStatement	"memcpy ( ptr + 5 , core -> block , i )"	3322:5:102486:102518	1112322	6	True				
ANR	1113006	CallExpression	"memcpy ( ptr + 5 , core -> block , i )"		1112322	0					
ANR	1113007	Callee	memcpy		1112322	0					
ANR	1113008	Identifier	memcpy		1112322	0					
ANR	1113009	ArgumentList	ptr + 5		1112322	1					
ANR	1113010	Argument	ptr + 5		1112322	0					
ANR	1113011	AdditiveExpression	ptr + 5		1112322	0		+			
ANR	1113012	Identifier	ptr		1112322	0					
ANR	1113013	PrimaryExpression	5		1112322	1					
ANR	1113014	Argument	core -> block		1112322	1					
ANR	1113015	PtrMemberAccess	core -> block		1112322	0					
ANR	1113016	Identifier	core		1112322	0					
ANR	1113017	Identifier	block		1112322	1					
ANR	1113018	Argument	i		1112322	2					
ANR	1113019	Identifier	i		1112322	0					
ANR	1113020	ExpressionStatement	"r_socket_write ( c , ptr , i + 5 )"	3323:5:102545:102575	1112322	7	True				
ANR	1113021	CallExpression	"r_socket_write ( c , ptr , i + 5 )"		1112322	0					
ANR	1113022	Callee	r_socket_write		1112322	0					
ANR	1113023	Identifier	r_socket_write		1112322	0					
ANR	1113024	ArgumentList	c		1112322	1					
ANR	1113025	Argument	c		1112322	0					
ANR	1113026	Identifier	c		1112322	0					
ANR	1113027	Argument	ptr		1112322	1					
ANR	1113028	Identifier	ptr		1112322	0					
ANR	1113029	Argument	i + 5		1112322	2					
ANR	1113030	AdditiveExpression	i + 5		1112322	0		+			
ANR	1113031	Identifier	i		1112322	0					
ANR	1113032	PrimaryExpression	5		1112322	1					
ANR	1113033	ExpressionStatement	r_socket_flush ( c )	3324:5:102582:102600	1112322	8	True				
ANR	1113034	CallExpression	r_socket_flush ( c )		1112322	0					
ANR	1113035	Callee	r_socket_flush		1112322	0					
ANR	1113036	Identifier	r_socket_flush		1112322	0					
ANR	1113037	ArgumentList	c		1112322	1					
ANR	1113038	Argument	c		1112322	0					
ANR	1113039	Identifier	c		1112322	0					
ANR	1113040	ExpressionStatement	R_FREE ( ptr )	3325:5:102607:102619	1112322	9	True				
ANR	1113041	CallExpression	R_FREE ( ptr )		1112322	0					
ANR	1113042	Callee	R_FREE		1112322	0					
ANR	1113043	Identifier	R_FREE		1112322	0					
ANR	1113044	ArgumentList	ptr		1112322	1					
ANR	1113045	Argument	ptr		1112322	0					
ANR	1113046	Identifier	ptr		1112322	0					
ANR	1113047	ElseStatement	else		1112322	0					
ANR	1113048	CompoundStatement		108:11:3034:3034	1112322	0					
ANR	1113049	ExpressionStatement	"eprintf ( ""Cannot read %d byte(s)\\n"" , i )"	3327:5:102639:102678	1112322	0	True				
ANR	1113050	CallExpression	"eprintf ( ""Cannot read %d byte(s)\\n"" , i )"		1112322	0					
ANR	1113051	Callee	eprintf		1112322	0					
ANR	1113052	Identifier	eprintf		1112322	0					
ANR	1113053	ArgumentList	"""Cannot read %d byte(s)\\n"""		1112322	1					
ANR	1113054	Argument	"""Cannot read %d byte(s)\\n"""		1112322	0					
ANR	1113055	PrimaryExpression	"""Cannot read %d byte(s)\\n"""		1112322	0					
ANR	1113056	Argument	i		1112322	1					
ANR	1113057	Identifier	i		1112322	0					
ANR	1113058	ExpressionStatement	r_socket_free ( c )	3328:5:102685:102702	1112322	1	True				
ANR	1113059	CallExpression	r_socket_free ( c )		1112322	0					
ANR	1113060	Callee	r_socket_free		1112322	0					
ANR	1113061	Identifier	r_socket_free		1112322	0					
ANR	1113062	ArgumentList	c		1112322	1					
ANR	1113063	Argument	c		1112322	0					
ANR	1113064	Identifier	c		1112322	0					
ANR	1113065	GotoStatement	goto out_of_function ;	3330:5:102740:102760	1112322	2	True				
ANR	1113066	Identifier	out_of_function		1112322	0					
ANR	1113067	BreakStatement	break ;	3332:4:102772:102777	1112322	18	True				
ANR	1113068	Label	case RMT_CMD :	3333:3:102782:102794	1112322	19	True				
ANR	1113069	Identifier	RMT_CMD		1112322	0					
ANR	1113070	CompoundStatement		148:11:4129:4145	1112322	20					
ANR	1113071	IdentifierDeclStatement	"char * cmd = NULL , * cmd_output = NULL ;"	3335:4:102806:102842	1112322	0	True				
ANR	1113072	IdentifierDecl	* cmd = NULL		1112322	0					
ANR	1113073	IdentifierDeclType	char *		1112322	0					
ANR	1113074	Identifier	cmd		1112322	1					
ANR	1113075	AssignmentExpression	* cmd = NULL		1112322	2		=			
ANR	1113076	Identifier	NULL		1112322	0					
ANR	1113077	Identifier	NULL		1112322	1					
ANR	1113078	IdentifierDecl	* cmd_output = NULL		1112322	1					
ANR	1113079	IdentifierDeclType	char *		1112322	0					
ANR	1113080	Identifier	cmd_output		1112322	1					
ANR	1113081	AssignmentExpression	* cmd_output = NULL		1112322	2		=			
ANR	1113082	Identifier	NULL		1112322	0					
ANR	1113083	Identifier	NULL		1112322	1					
ANR	1113084	IdentifierDeclStatement	"char bufr [ 8 ] , * bufw = NULL ;"	3336:4:102848:102874	1112322	1	True				
ANR	1113085	IdentifierDecl	bufr [ 8 ]		1112322	0					
ANR	1113086	IdentifierDeclType	char [ 8 ]		1112322	0					
ANR	1113087	Identifier	bufr		1112322	1					
ANR	1113088	PrimaryExpression	8		1112322	2					
ANR	1113089	IdentifierDecl	* bufw = NULL		1112322	1					
ANR	1113090	IdentifierDeclType	char *		1112322	0					
ANR	1113091	Identifier	bufw		1112322	1					
ANR	1113092	AssignmentExpression	* bufw = NULL		1112322	2		=			
ANR	1113093	Identifier	NULL		1112322	0					
ANR	1113094	Identifier	NULL		1112322	1					
ANR	1113095	IdentifierDeclStatement	ut32 cmd_len = 0 ;	3337:4:102880:102896	1112322	2	True				
ANR	1113096	IdentifierDecl	cmd_len = 0		1112322	0					
ANR	1113097	IdentifierDeclType	ut32		1112322	0					
ANR	1113098	Identifier	cmd_len		1112322	1					
ANR	1113099	AssignmentExpression	cmd_len = 0		1112322	2		=			
ANR	1113100	Identifier	cmd_len		1112322	0					
ANR	1113101	PrimaryExpression	0		1112322	1					
ANR	1113102	IdentifierDeclStatement	int i ;	3338:4:102902:102907	1112322	3	True				
ANR	1113103	IdentifierDecl	i		1112322	0					
ANR	1113104	IdentifierDeclType	int		1112322	0					
ANR	1113105	Identifier	i		1112322	1					
ANR	1113106	ExpressionStatement	"r_socket_read_block ( c , ( ut8 * ) & bufr , 4 )"	3341:4:102929:102968	1112322	4	True				
ANR	1113107	CallExpression	"r_socket_read_block ( c , ( ut8 * ) & bufr , 4 )"		1112322	0					
ANR	1113108	Callee	r_socket_read_block		1112322	0					
ANR	1113109	Identifier	r_socket_read_block		1112322	0					
ANR	1113110	ArgumentList	c		1112322	1					
ANR	1113111	Argument	c		1112322	0					
ANR	1113112	Identifier	c		1112322	0					
ANR	1113113	Argument	( ut8 * ) & bufr		1112322	1					
ANR	1113114	CastExpression	( ut8 * ) & bufr		1112322	0					
ANR	1113115	CastTarget	ut8 *		1112322	0					
ANR	1113116	UnaryOperationExpression	& bufr		1112322	1					
ANR	1113117	UnaryOperator	&		1112322	0					
ANR	1113118	Identifier	bufr		1112322	1					
ANR	1113119	Argument	4		1112322	2					
ANR	1113120	PrimaryExpression	4		1112322	0					
ANR	1113121	ExpressionStatement	i = r_read_be32 ( bufr )	3342:4:102974:102996	1112322	5	True				
ANR	1113122	AssignmentExpression	i = r_read_be32 ( bufr )		1112322	0		=			
ANR	1113123	Identifier	i		1112322	0					
ANR	1113124	CallExpression	r_read_be32 ( bufr )		1112322	1					
ANR	1113125	Callee	r_read_be32		1112322	0					
ANR	1113126	Identifier	r_read_be32		1112322	0					
ANR	1113127	ArgumentList	bufr		1112322	1					
ANR	1113128	Argument	bufr		1112322	0					
ANR	1113129	Identifier	bufr		1112322	0					
ANR	1113130	IfStatement	if ( i > 0 && i < RMT_MAX )		1112322	6					
ANR	1113131	Condition	i > 0 && i < RMT_MAX	3343:8:103006:103025	1112322	0	True				
ANR	1113132	AndExpression	i > 0 && i < RMT_MAX		1112322	0		&&			
ANR	1113133	RelationalExpression	i > 0		1112322	0		>			
ANR	1113134	Identifier	i		1112322	0					
ANR	1113135	PrimaryExpression	0		1112322	1					
ANR	1113136	RelationalExpression	i < RMT_MAX		1112322	1		<			
ANR	1113137	Identifier	i		1112322	0					
ANR	1113138	Identifier	RMT_MAX		1112322	1					
ANR	1113139	CompoundStatement		125:30:3430:3430	1112322	1					
ANR	1113140	IfStatement	if ( ( cmd = malloc ( i + 1 ) ) )		1112322	0					
ANR	1113141	Condition	cmd = malloc ( i + 1 )	3344:9:103039:103060	1112322	0	True				
ANR	1113142	AssignmentExpression	cmd = malloc ( i + 1 )		1112322	0		=			
ANR	1113143	Identifier	cmd		1112322	0					
ANR	1113144	CallExpression	malloc ( i + 1 )		1112322	1					
ANR	1113145	Callee	malloc		1112322	0					
ANR	1113146	Identifier	malloc		1112322	0					
ANR	1113147	ArgumentList	i + 1		1112322	1					
ANR	1113148	Argument	i + 1		1112322	0					
ANR	1113149	AdditiveExpression	i + 1		1112322	0		+			
ANR	1113150	Identifier	i		1112322	0					
ANR	1113151	PrimaryExpression	1		1112322	1					
ANR	1113152	CompoundStatement		129:6:3539:3609	1112322	1					
ANR	1113153	ExpressionStatement	"r_socket_read_block ( c , ( ut8 * ) cmd , i )"	3345:6:103071:103108	1112322	0	True				
ANR	1113154	CallExpression	"r_socket_read_block ( c , ( ut8 * ) cmd , i )"		1112322	0					
ANR	1113155	Callee	r_socket_read_block		1112322	0					
ANR	1113156	Identifier	r_socket_read_block		1112322	0					
ANR	1113157	ArgumentList	c		1112322	1					
ANR	1113158	Argument	c		1112322	0					
ANR	1113159	Identifier	c		1112322	0					
ANR	1113160	Argument	( ut8 * ) cmd		1112322	1					
ANR	1113161	CastExpression	( ut8 * ) cmd		1112322	0					
ANR	1113162	CastTarget	ut8 *		1112322	0					
ANR	1113163	Identifier	cmd		1112322	1					
ANR	1113164	Argument	i		1112322	2					
ANR	1113165	Identifier	i		1112322	0					
ANR	1113166	ExpressionStatement	cmd [ i ] = '\\0'	3346:6:103116:103129	1112322	1	True				
ANR	1113167	AssignmentExpression	cmd [ i ] = '\\0'		1112322	0		=			
ANR	1113168	ArrayIndexing	cmd [ i ]		1112322	0					
ANR	1113169	Identifier	cmd		1112322	0					
ANR	1113170	Identifier	i		1112322	1					
ANR	1113171	PrimaryExpression	'\\0'		1112322	1					
ANR	1113172	IdentifierDeclStatement	"int scr_interactive = r_config_get_i ( core -> config , ""scr.interactive"" ) ;"	3347:6:103137:103207	1112322	2	True				
ANR	1113173	IdentifierDecl	"scr_interactive = r_config_get_i ( core -> config , ""scr.interactive"" )"		1112322	0					
ANR	1113174	IdentifierDeclType	int		1112322	0					
ANR	1113175	Identifier	scr_interactive		1112322	1					
ANR	1113176	AssignmentExpression	"scr_interactive = r_config_get_i ( core -> config , ""scr.interactive"" )"		1112322	2		=			
ANR	1113177	Identifier	scr_interactive		1112322	0					
ANR	1113178	CallExpression	"r_config_get_i ( core -> config , ""scr.interactive"" )"		1112322	1					
ANR	1113179	Callee	r_config_get_i		1112322	0					
ANR	1113180	Identifier	r_config_get_i		1112322	0					
ANR	1113181	ArgumentList	core -> config		1112322	1					
ANR	1113182	Argument	core -> config		1112322	0					
ANR	1113183	PtrMemberAccess	core -> config		1112322	0					
ANR	1113184	Identifier	core		1112322	0					
ANR	1113185	Identifier	config		1112322	1					
ANR	1113186	Argument	"""scr.interactive"""		1112322	1					
ANR	1113187	PrimaryExpression	"""scr.interactive"""		1112322	0					
ANR	1113188	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.interactive"" , 0 )"	3348:6:103215:103266	1112322	3	True				
ANR	1113189	CallExpression	"r_config_set_i ( core -> config , ""scr.interactive"" , 0 )"		1112322	0					
ANR	1113190	Callee	r_config_set_i		1112322	0					
ANR	1113191	Identifier	r_config_set_i		1112322	0					
ANR	1113192	ArgumentList	core -> config		1112322	1					
ANR	1113193	Argument	core -> config		1112322	0					
ANR	1113194	PtrMemberAccess	core -> config		1112322	0					
ANR	1113195	Identifier	core		1112322	0					
ANR	1113196	Identifier	config		1112322	1					
ANR	1113197	Argument	"""scr.interactive"""		1112322	1					
ANR	1113198	PrimaryExpression	"""scr.interactive"""		1112322	0					
ANR	1113199	Argument	0		1112322	2					
ANR	1113200	PrimaryExpression	0		1112322	0					
ANR	1113201	ExpressionStatement	"cmd_output = r_core_cmd_str ( core , cmd )"	3349:6:103274:103313	1112322	4	True				
ANR	1113202	AssignmentExpression	"cmd_output = r_core_cmd_str ( core , cmd )"		1112322	0		=			
ANR	1113203	Identifier	cmd_output		1112322	0					
ANR	1113204	CallExpression	"r_core_cmd_str ( core , cmd )"		1112322	1					
ANR	1113205	Callee	r_core_cmd_str		1112322	0					
ANR	1113206	Identifier	r_core_cmd_str		1112322	0					
ANR	1113207	ArgumentList	core		1112322	1					
ANR	1113208	Argument	core		1112322	0					
ANR	1113209	Identifier	core		1112322	0					
ANR	1113210	Argument	cmd		1112322	1					
ANR	1113211	Identifier	cmd		1112322	0					
ANR	1113212	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.interactive"" , scr_interactive )"	3350:6:103321:103386	1112322	5	True				
ANR	1113213	CallExpression	"r_config_set_i ( core -> config , ""scr.interactive"" , scr_interactive )"		1112322	0					
ANR	1113214	Callee	r_config_set_i		1112322	0					
ANR	1113215	Identifier	r_config_set_i		1112322	0					
ANR	1113216	ArgumentList	core -> config		1112322	1					
ANR	1113217	Argument	core -> config		1112322	0					
ANR	1113218	PtrMemberAccess	core -> config		1112322	0					
ANR	1113219	Identifier	core		1112322	0					
ANR	1113220	Identifier	config		1112322	1					
ANR	1113221	Argument	"""scr.interactive"""		1112322	1					
ANR	1113222	PrimaryExpression	"""scr.interactive"""		1112322	0					
ANR	1113223	Argument	scr_interactive		1112322	2					
ANR	1113224	Identifier	scr_interactive		1112322	0					
ANR	1113225	ExpressionStatement	free ( cmd )	3351:6:103394:103404	1112322	6	True				
ANR	1113226	CallExpression	free ( cmd )		1112322	0					
ANR	1113227	Callee	free		1112322	0					
ANR	1113228	Identifier	free		1112322	0					
ANR	1113229	ArgumentList	cmd		1112322	1					
ANR	1113230	Argument	cmd		1112322	0					
ANR	1113231	Identifier	cmd		1112322	0					
ANR	1113232	ElseStatement	else		1112322	0					
ANR	1113233	CompoundStatement		134:12:3820:3820	1112322	0					
ANR	1113234	ExpressionStatement	"eprintf ( ""rap: cannot malloc\\n"" )"	3353:6:103426:103458	1112322	0	True				
ANR	1113235	CallExpression	"eprintf ( ""rap: cannot malloc\\n"" )"		1112322	0					
ANR	1113236	Callee	eprintf		1112322	0					
ANR	1113237	Identifier	eprintf		1112322	0					
ANR	1113238	ArgumentList	"""rap: cannot malloc\\n"""		1112322	1					
ANR	1113239	Argument	"""rap: cannot malloc\\n"""		1112322	0					
ANR	1113240	PrimaryExpression	"""rap: cannot malloc\\n"""		1112322	0					
ANR	1113241	ElseStatement	else		1112322	0					
ANR	1113242	CompoundStatement		137:11:3880:3880	1112322	0					
ANR	1113243	ExpressionStatement	"eprintf ( ""rap: invalid length '%d'\\n"" , i )"	3356:5:103485:103526	1112322	0	True				
ANR	1113244	CallExpression	"eprintf ( ""rap: invalid length '%d'\\n"" , i )"		1112322	0					
ANR	1113245	Callee	eprintf		1112322	0					
ANR	1113246	Identifier	eprintf		1112322	0					
ANR	1113247	ArgumentList	"""rap: invalid length '%d'\\n"""		1112322	1					
ANR	1113248	Argument	"""rap: invalid length '%d'\\n"""		1112322	0					
ANR	1113249	PrimaryExpression	"""rap: invalid length '%d'\\n"""		1112322	0					
ANR	1113250	Argument	i		1112322	1					
ANR	1113251	Identifier	i		1112322	0					
ANR	1113252	IfStatement	if ( cmd_output )		1112322	7					
ANR	1113253	Condition	cmd_output	3359:8:103558:103567	1112322	0	True				
ANR	1113254	Identifier	cmd_output		1112322	0					
ANR	1113255	CompoundStatement		141:20:3972:3972	1112322	1					
ANR	1113256	ExpressionStatement	cmd_len = strlen ( cmd_output ) + 1	3360:5:103577:103610	1112322	0	True				
ANR	1113257	AssignmentExpression	cmd_len = strlen ( cmd_output ) + 1		1112322	0		=			
ANR	1113258	Identifier	cmd_len		1112322	0					
ANR	1113259	AdditiveExpression	strlen ( cmd_output ) + 1		1112322	1		+			
ANR	1113260	CallExpression	strlen ( cmd_output )		1112322	0					
ANR	1113261	Callee	strlen		1112322	0					
ANR	1113262	Identifier	strlen		1112322	0					
ANR	1113263	ArgumentList	cmd_output		1112322	1					
ANR	1113264	Argument	cmd_output		1112322	0					
ANR	1113265	Identifier	cmd_output		1112322	0					
ANR	1113266	PrimaryExpression	1		1112322	1					
ANR	1113267	ElseStatement	else		1112322	0					
ANR	1113268	CompoundStatement		143:11:4025:4025	1112322	0					
ANR	1113269	ExpressionStatement	"cmd_output = strdup ( """" )"	3362:5:103630:103654	1112322	0	True				
ANR	1113270	AssignmentExpression	"cmd_output = strdup ( """" )"		1112322	0		=			
ANR	1113271	Identifier	cmd_output		1112322	0					
ANR	1113272	CallExpression	"strdup ( """" )"		1112322	1					
ANR	1113273	Callee	strdup		1112322	0					
ANR	1113274	Identifier	strdup		1112322	0					
ANR	1113275	ArgumentList	""""""		1112322	1					
ANR	1113276	Argument	""""""		1112322	0					
ANR	1113277	PrimaryExpression	""""""		1112322	0					
ANR	1113278	ExpressionStatement	cmd_len = 0	3363:5:103661:103672	1112322	1	True				
ANR	1113279	AssignmentExpression	cmd_len = 0		1112322	0		=			
ANR	1113280	Identifier	cmd_len		1112322	0					
ANR	1113281	PrimaryExpression	0		1112322	1					
ANR	1113282	Statement	static	3366:4:103720:103725	1112322	8	True				
ANR	1113283	IdentifierDeclStatement	bool once = true ;	3366:11:103727:103743	1112322	9	True				
ANR	1113284	IdentifierDecl	once = true		1112322	0					
ANR	1113285	IdentifierDeclType	bool		1112322	0					
ANR	1113286	Identifier	once		1112322	1					
ANR	1113287	AssignmentExpression	once = true		1112322	2		=			
ANR	1113288	Identifier	true		1112322	0					
ANR	1113289	Identifier	true		1112322	1					
ANR	1113290	IfStatement	if ( once )		1112322	10					
ANR	1113291	Condition	once	3368:8:103828:103831	1112322	0	True				
ANR	1113292	Identifier	once		1112322	0					
ANR	1113293	CompoundStatement		153:5:4311:4340	1112322	1					
ANR	1113294	IdentifierDeclStatement	"const char * cmd = ""pd 4"" ;"	3369:5:103841:103865	1112322	0	True				
ANR	1113295	IdentifierDecl	"* cmd = ""pd 4"""		1112322	0					
ANR	1113296	IdentifierDeclType	const char *		1112322	0					
ANR	1113297	Identifier	cmd		1112322	1					
ANR	1113298	AssignmentExpression	"* cmd = ""pd 4"""		1112322	2		=			
ANR	1113299	Identifier	cmd		1112322	0					
ANR	1113300	PrimaryExpression	"""pd 4"""		1112322	1					
ANR	1113301	IdentifierDeclStatement	int cmd_len = strlen ( cmd ) + 1 ;	3370:5:103872:103902	1112322	1	True				
ANR	1113302	IdentifierDecl	cmd_len = strlen ( cmd ) + 1		1112322	0					
ANR	1113303	IdentifierDeclType	int		1112322	0					
ANR	1113304	Identifier	cmd_len		1112322	1					
ANR	1113305	AssignmentExpression	cmd_len = strlen ( cmd ) + 1		1112322	2		=			
ANR	1113306	Identifier	cmd_len		1112322	0					
ANR	1113307	AdditiveExpression	strlen ( cmd ) + 1		1112322	1		+			
ANR	1113308	CallExpression	strlen ( cmd )		1112322	0					
ANR	1113309	Callee	strlen		1112322	0					
ANR	1113310	Identifier	strlen		1112322	0					
ANR	1113311	ArgumentList	cmd		1112322	1					
ANR	1113312	Argument	cmd		1112322	0					
ANR	1113313	Identifier	cmd		1112322	0					
ANR	1113314	PrimaryExpression	1		1112322	1					
ANR	1113315	IdentifierDeclStatement	ut8 * b = malloc ( cmd_len + 5 ) ;	3371:5:103909:103938	1112322	2	True				
ANR	1113316	IdentifierDecl	* b = malloc ( cmd_len + 5 )		1112322	0					
ANR	1113317	IdentifierDeclType	ut8 *		1112322	0					
ANR	1113318	Identifier	b		1112322	1					
ANR	1113319	AssignmentExpression	* b = malloc ( cmd_len + 5 )		1112322	2		=			
ANR	1113320	Identifier	b		1112322	0					
ANR	1113321	CallExpression	malloc ( cmd_len + 5 )		1112322	1					
ANR	1113322	Callee	malloc		1112322	0					
ANR	1113323	Identifier	malloc		1112322	0					
ANR	1113324	ArgumentList	cmd_len + 5		1112322	1					
ANR	1113325	Argument	cmd_len + 5		1112322	0					
ANR	1113326	AdditiveExpression	cmd_len + 5		1112322	0		+			
ANR	1113327	Identifier	cmd_len		1112322	0					
ANR	1113328	PrimaryExpression	5		1112322	1					
ANR	1113329	ExpressionStatement	b [ 0 ] = RMT_CMD	3372:5:103945:103959	1112322	3	True				
ANR	1113330	AssignmentExpression	b [ 0 ] = RMT_CMD		1112322	0		=			
ANR	1113331	ArrayIndexing	b [ 0 ]		1112322	0					
ANR	1113332	Identifier	b		1112322	0					
ANR	1113333	PrimaryExpression	0		1112322	1					
ANR	1113334	Identifier	RMT_CMD		1112322	1					
ANR	1113335	ExpressionStatement	"r_write_be32 ( b + 1 , cmd_len )"	3373:5:103966:103995	1112322	4	True				
ANR	1113336	CallExpression	"r_write_be32 ( b + 1 , cmd_len )"		1112322	0					
ANR	1113337	Callee	r_write_be32		1112322	0					
ANR	1113338	Identifier	r_write_be32		1112322	0					
ANR	1113339	ArgumentList	b + 1		1112322	1					
ANR	1113340	Argument	b + 1		1112322	0					
ANR	1113341	AdditiveExpression	b + 1		1112322	0		+			
ANR	1113342	Identifier	b		1112322	0					
ANR	1113343	PrimaryExpression	1		1112322	1					
ANR	1113344	Argument	cmd_len		1112322	1					
ANR	1113345	Identifier	cmd_len		1112322	0					
ANR	1113346	ExpressionStatement	"strcpy ( ( char * ) b + 5 , cmd )"	3374:5:104002:104028	1112322	5	True				
ANR	1113347	CallExpression	"strcpy ( ( char * ) b + 5 , cmd )"		1112322	0					
ANR	1113348	Callee	strcpy		1112322	0					
ANR	1113349	Identifier	strcpy		1112322	0					
ANR	1113350	ArgumentList	( char * ) b + 5		1112322	1					
ANR	1113351	Argument	( char * ) b + 5		1112322	0					
ANR	1113352	AdditiveExpression	( char * ) b + 5		1112322	0		+			
ANR	1113353	CastExpression	( char * ) b		1112322	0					
ANR	1113354	CastTarget	char *		1112322	0					
ANR	1113355	Identifier	b		1112322	1					
ANR	1113356	PrimaryExpression	5		1112322	1					
ANR	1113357	Argument	cmd		1112322	1					
ANR	1113358	Identifier	cmd		1112322	0					
ANR	1113359	ExpressionStatement	"r_socket_write ( c , b , 5 + cmd_len )"	3375:5:104035:104069	1112322	6	True				
ANR	1113360	CallExpression	"r_socket_write ( c , b , 5 + cmd_len )"		1112322	0					
ANR	1113361	Callee	r_socket_write		1112322	0					
ANR	1113362	Identifier	r_socket_write		1112322	0					
ANR	1113363	ArgumentList	c		1112322	1					
ANR	1113364	Argument	c		1112322	0					
ANR	1113365	Identifier	c		1112322	0					
ANR	1113366	Argument	b		1112322	1					
ANR	1113367	Identifier	b		1112322	0					
ANR	1113368	Argument	5 + cmd_len		1112322	2					
ANR	1113369	AdditiveExpression	5 + cmd_len		1112322	0		+			
ANR	1113370	PrimaryExpression	5		1112322	0					
ANR	1113371	Identifier	cmd_len		1112322	1					
ANR	1113372	ExpressionStatement	r_socket_flush ( c )	3376:5:104076:104094	1112322	7	True				
ANR	1113373	CallExpression	r_socket_flush ( c )		1112322	0					
ANR	1113374	Callee	r_socket_flush		1112322	0					
ANR	1113375	Identifier	r_socket_flush		1112322	0					
ANR	1113376	ArgumentList	c		1112322	1					
ANR	1113377	Argument	c		1112322	0					
ANR	1113378	Identifier	c		1112322	0					
ANR	1113379	ExpressionStatement	"r_socket_read ( c , b , 5 )"	3379:5:104127:104150	1112322	8	True				
ANR	1113380	CallExpression	"r_socket_read ( c , b , 5 )"		1112322	0					
ANR	1113381	Callee	r_socket_read		1112322	0					
ANR	1113382	Identifier	r_socket_read		1112322	0					
ANR	1113383	ArgumentList	c		1112322	1					
ANR	1113384	Argument	c		1112322	0					
ANR	1113385	Identifier	c		1112322	0					
ANR	1113386	Argument	b		1112322	1					
ANR	1113387	Identifier	b		1112322	0					
ANR	1113388	Argument	5		1112322	2					
ANR	1113389	PrimaryExpression	5		1112322	0					
ANR	1113390	IfStatement	if ( b [ 0 ] == ( RMT_CMD | RMT_REPLY ) )		1112322	9					
ANR	1113391	Condition	b [ 0 ] == ( RMT_CMD | RMT_REPLY )	3380:9:104161:104189	1112322	0	True				
ANR	1113392	EqualityExpression	b [ 0 ] == ( RMT_CMD | RMT_REPLY )		1112322	0		==			
ANR	1113393	ArrayIndexing	b [ 0 ]		1112322	0					
ANR	1113394	Identifier	b		1112322	0					
ANR	1113395	PrimaryExpression	0		1112322	1					
ANR	1113396	InclusiveOrExpression	RMT_CMD | RMT_REPLY		1112322	1		|			
ANR	1113397	Identifier	RMT_CMD		1112322	0					
ANR	1113398	Identifier	RMT_REPLY		1112322	1					
ANR	1113399	CompoundStatement		163:6:4602:4630	1112322	1					
ANR	1113400	IdentifierDeclStatement	ut32 n = r_read_be32 ( b + 1 ) ;	3381:6:104200:104228	1112322	0	True				
ANR	1113401	IdentifierDecl	n = r_read_be32 ( b + 1 )		1112322	0					
ANR	1113402	IdentifierDeclType	ut32		1112322	0					
ANR	1113403	Identifier	n		1112322	1					
ANR	1113404	AssignmentExpression	n = r_read_be32 ( b + 1 )		1112322	2		=			
ANR	1113405	Identifier	n		1112322	0					
ANR	1113406	CallExpression	r_read_be32 ( b + 1 )		1112322	1					
ANR	1113407	Callee	r_read_be32		1112322	0					
ANR	1113408	Identifier	r_read_be32		1112322	0					
ANR	1113409	ArgumentList	b + 1		1112322	1					
ANR	1113410	Argument	b + 1		1112322	0					
ANR	1113411	AdditiveExpression	b + 1		1112322	0		+			
ANR	1113412	Identifier	b		1112322	0					
ANR	1113413	PrimaryExpression	1		1112322	1					
ANR	1113414	ExpressionStatement	"eprintf ( ""REPLY %d\\n"" , n )"	3382:6:104236:104261	1112322	1	True				
ANR	1113415	CallExpression	"eprintf ( ""REPLY %d\\n"" , n )"		1112322	0					
ANR	1113416	Callee	eprintf		1112322	0					
ANR	1113417	Identifier	eprintf		1112322	0					
ANR	1113418	ArgumentList	"""REPLY %d\\n"""		1112322	1					
ANR	1113419	Argument	"""REPLY %d\\n"""		1112322	0					
ANR	1113420	PrimaryExpression	"""REPLY %d\\n"""		1112322	0					
ANR	1113421	Argument	n		1112322	1					
ANR	1113422	Identifier	n		1112322	0					
ANR	1113423	IfStatement	if ( n > 0 )		1112322	2					
ANR	1113424	Condition	n > 0	3383:10:104273:104277	1112322	0	True				
ANR	1113425	RelationalExpression	n > 0		1112322	0		>			
ANR	1113426	Identifier	n		1112322	0					
ANR	1113427	PrimaryExpression	0		1112322	1					
ANR	1113428	CompoundStatement		166:7:4691:4715	1112322	1					
ANR	1113429	IdentifierDeclStatement	"ut8 * res = calloc ( 1 , n ) ;"	3384:7:104289:104313	1112322	0	True				
ANR	1113430	IdentifierDecl	"* res = calloc ( 1 , n )"		1112322	0					
ANR	1113431	IdentifierDeclType	ut8 *		1112322	0					
ANR	1113432	Identifier	res		1112322	1					
ANR	1113433	AssignmentExpression	"* res = calloc ( 1 , n )"		1112322	2		=			
ANR	1113434	Identifier	res		1112322	0					
ANR	1113435	CallExpression	"calloc ( 1 , n )"		1112322	1					
ANR	1113436	Callee	calloc		1112322	0					
ANR	1113437	Identifier	calloc		1112322	0					
ANR	1113438	ArgumentList	1		1112322	1					
ANR	1113439	Argument	1		1112322	0					
ANR	1113440	PrimaryExpression	1		1112322	0					
ANR	1113441	Argument	n		1112322	1					
ANR	1113442	Identifier	n		1112322	0					
ANR	1113443	ExpressionStatement	"r_socket_read ( c , res , n )"	3385:7:104322:104347	1112322	1	True				
ANR	1113444	CallExpression	"r_socket_read ( c , res , n )"		1112322	0					
ANR	1113445	Callee	r_socket_read		1112322	0					
ANR	1113446	Identifier	r_socket_read		1112322	0					
ANR	1113447	ArgumentList	c		1112322	1					
ANR	1113448	Argument	c		1112322	0					
ANR	1113449	Identifier	c		1112322	0					
ANR	1113450	Argument	res		1112322	1					
ANR	1113451	Identifier	res		1112322	0					
ANR	1113452	Argument	n		1112322	2					
ANR	1113453	Identifier	n		1112322	0					
ANR	1113454	ExpressionStatement	"eprintf ( ""RESPONSE(%s)\\n"" , ( const char * ) res )"	3386:7:104356:104401	1112322	2	True				
ANR	1113455	CallExpression	"eprintf ( ""RESPONSE(%s)\\n"" , ( const char * ) res )"		1112322	0					
ANR	1113456	Callee	eprintf		1112322	0					
ANR	1113457	Identifier	eprintf		1112322	0					
ANR	1113458	ArgumentList	"""RESPONSE(%s)\\n"""		1112322	1					
ANR	1113459	Argument	"""RESPONSE(%s)\\n"""		1112322	0					
ANR	1113460	PrimaryExpression	"""RESPONSE(%s)\\n"""		1112322	0					
ANR	1113461	Argument	( const char * ) res		1112322	1					
ANR	1113462	CastExpression	( const char * ) res		1112322	0					
ANR	1113463	CastTarget	const char *		1112322	0					
ANR	1113464	Identifier	res		1112322	1					
ANR	1113465	ExpressionStatement	free ( res )	3387:7:104410:104420	1112322	3	True				
ANR	1113466	CallExpression	free ( res )		1112322	0					
ANR	1113467	Callee	free		1112322	0					
ANR	1113468	Identifier	free		1112322	0					
ANR	1113469	ArgumentList	res		1112322	1					
ANR	1113470	Argument	res		1112322	0					
ANR	1113471	Identifier	res		1112322	0					
ANR	1113472	ExpressionStatement	r_socket_flush ( c )	3390:5:104442:104460	1112322	10	True				
ANR	1113473	CallExpression	r_socket_flush ( c )		1112322	0					
ANR	1113474	Callee	r_socket_flush		1112322	0					
ANR	1113475	Identifier	r_socket_flush		1112322	0					
ANR	1113476	ArgumentList	c		1112322	1					
ANR	1113477	Argument	c		1112322	0					
ANR	1113478	Identifier	c		1112322	0					
ANR	1113479	ExpressionStatement	free ( b )	3391:5:104467:104475	1112322	11	True				
ANR	1113480	CallExpression	free ( b )		1112322	0					
ANR	1113481	Callee	free		1112322	0					
ANR	1113482	Identifier	free		1112322	0					
ANR	1113483	ArgumentList	b		1112322	1					
ANR	1113484	Argument	b		1112322	0					
ANR	1113485	Identifier	b		1112322	0					
ANR	1113486	ExpressionStatement	once = false	3392:5:104482:104494	1112322	12	True				
ANR	1113487	AssignmentExpression	once = false		1112322	0		=			
ANR	1113488	Identifier	once		1112322	0					
ANR	1113489	Identifier	false		1112322	1					
ANR	1113490	ExpressionStatement	bufw = malloc ( cmd_len + 5 )	3395:4:104513:104540	1112322	11	True				
ANR	1113491	AssignmentExpression	bufw = malloc ( cmd_len + 5 )		1112322	0		=			
ANR	1113492	Identifier	bufw		1112322	0					
ANR	1113493	CallExpression	malloc ( cmd_len + 5 )		1112322	1					
ANR	1113494	Callee	malloc		1112322	0					
ANR	1113495	Identifier	malloc		1112322	0					
ANR	1113496	ArgumentList	cmd_len + 5		1112322	1					
ANR	1113497	Argument	cmd_len + 5		1112322	0					
ANR	1113498	AdditiveExpression	cmd_len + 5		1112322	0		+			
ANR	1113499	Identifier	cmd_len		1112322	0					
ANR	1113500	PrimaryExpression	5		1112322	1					
ANR	1113501	ExpressionStatement	bufw [ 0 ] = ( ut8 ) ( RMT_CMD | RMT_REPLY )	3396:4:104546:104583	1112322	12	True				
ANR	1113502	AssignmentExpression	bufw [ 0 ] = ( ut8 ) ( RMT_CMD | RMT_REPLY )		1112322	0		=			
ANR	1113503	ArrayIndexing	bufw [ 0 ]		1112322	0					
ANR	1113504	Identifier	bufw		1112322	0					
ANR	1113505	PrimaryExpression	0		1112322	1					
ANR	1113506	CastExpression	( ut8 ) ( RMT_CMD | RMT_REPLY )		1112322	1					
ANR	1113507	CastTarget	ut8		1112322	0					
ANR	1113508	InclusiveOrExpression	RMT_CMD | RMT_REPLY		1112322	1		|			
ANR	1113509	Identifier	RMT_CMD		1112322	0					
ANR	1113510	Identifier	RMT_REPLY		1112322	1					
ANR	1113511	ExpressionStatement	"r_write_be32 ( bufw + 1 , cmd_len )"	3397:4:104589:104621	1112322	13	True				
ANR	1113512	CallExpression	"r_write_be32 ( bufw + 1 , cmd_len )"		1112322	0					
ANR	1113513	Callee	r_write_be32		1112322	0					
ANR	1113514	Identifier	r_write_be32		1112322	0					
ANR	1113515	ArgumentList	bufw + 1		1112322	1					
ANR	1113516	Argument	bufw + 1		1112322	0					
ANR	1113517	AdditiveExpression	bufw + 1		1112322	0		+			
ANR	1113518	Identifier	bufw		1112322	0					
ANR	1113519	PrimaryExpression	1		1112322	1					
ANR	1113520	Argument	cmd_len		1112322	1					
ANR	1113521	Identifier	cmd_len		1112322	0					
ANR	1113522	ExpressionStatement	"memcpy ( bufw + 5 , cmd_output , cmd_len )"	3398:4:104627:104665	1112322	14	True				
ANR	1113523	CallExpression	"memcpy ( bufw + 5 , cmd_output , cmd_len )"		1112322	0					
ANR	1113524	Callee	memcpy		1112322	0					
ANR	1113525	Identifier	memcpy		1112322	0					
ANR	1113526	ArgumentList	bufw + 5		1112322	1					
ANR	1113527	Argument	bufw + 5		1112322	0					
ANR	1113528	AdditiveExpression	bufw + 5		1112322	0		+			
ANR	1113529	Identifier	bufw		1112322	0					
ANR	1113530	PrimaryExpression	5		1112322	1					
ANR	1113531	Argument	cmd_output		1112322	1					
ANR	1113532	Identifier	cmd_output		1112322	0					
ANR	1113533	Argument	cmd_len		1112322	2					
ANR	1113534	Identifier	cmd_len		1112322	0					
ANR	1113535	ExpressionStatement	"r_socket_write ( c , bufw , cmd_len + 5 )"	3399:4:104671:104706	1112322	15	True				
ANR	1113536	CallExpression	"r_socket_write ( c , bufw , cmd_len + 5 )"		1112322	0					
ANR	1113537	Callee	r_socket_write		1112322	0					
ANR	1113538	Identifier	r_socket_write		1112322	0					
ANR	1113539	ArgumentList	c		1112322	1					
ANR	1113540	Argument	c		1112322	0					
ANR	1113541	Identifier	c		1112322	0					
ANR	1113542	Argument	bufw		1112322	1					
ANR	1113543	Identifier	bufw		1112322	0					
ANR	1113544	Argument	cmd_len + 5		1112322	2					
ANR	1113545	AdditiveExpression	cmd_len + 5		1112322	0		+			
ANR	1113546	Identifier	cmd_len		1112322	0					
ANR	1113547	PrimaryExpression	5		1112322	1					
ANR	1113548	ExpressionStatement	r_socket_flush ( c )	3400:4:104712:104730	1112322	16	True				
ANR	1113549	CallExpression	r_socket_flush ( c )		1112322	0					
ANR	1113550	Callee	r_socket_flush		1112322	0					
ANR	1113551	Identifier	r_socket_flush		1112322	0					
ANR	1113552	ArgumentList	c		1112322	1					
ANR	1113553	Argument	c		1112322	0					
ANR	1113554	Identifier	c		1112322	0					
ANR	1113555	ExpressionStatement	free ( bufw )	3401:4:104736:104747	1112322	17	True				
ANR	1113556	CallExpression	free ( bufw )		1112322	0					
ANR	1113557	Callee	free		1112322	0					
ANR	1113558	Identifier	free		1112322	0					
ANR	1113559	ArgumentList	bufw		1112322	1					
ANR	1113560	Argument	bufw		1112322	0					
ANR	1113561	Identifier	bufw		1112322	0					
ANR	1113562	ExpressionStatement	free ( cmd_output )	3402:4:104753:104770	1112322	18	True				
ANR	1113563	CallExpression	free ( cmd_output )		1112322	0					
ANR	1113564	Callee	free		1112322	0					
ANR	1113565	Identifier	free		1112322	0					
ANR	1113566	ArgumentList	cmd_output		1112322	1					
ANR	1113567	Argument	cmd_output		1112322	0					
ANR	1113568	Identifier	cmd_output		1112322	0					
ANR	1113569	BreakStatement	break ;	3403:4:104776:104781	1112322	19	True				
ANR	1113570	Label	case RMT_WRITE :	3405:3:104792:104806	1112322	21	True				
ANR	1113571	Identifier	RMT_WRITE		1112322	0					
ANR	1113572	ExpressionStatement	"r_socket_read ( c , buf , 4 )"	3406:4:104812:104837	1112322	22	True				
ANR	1113573	CallExpression	"r_socket_read ( c , buf , 4 )"		1112322	0					
ANR	1113574	Callee	r_socket_read		1112322	0					
ANR	1113575	Identifier	r_socket_read		1112322	0					
ANR	1113576	ArgumentList	c		1112322	1					
ANR	1113577	Argument	c		1112322	0					
ANR	1113578	Identifier	c		1112322	0					
ANR	1113579	Argument	buf		1112322	1					
ANR	1113580	Identifier	buf		1112322	0					
ANR	1113581	Argument	4		1112322	2					
ANR	1113582	PrimaryExpression	4		1112322	0					
ANR	1113583	ExpressionStatement	"x = r_read_at_be32 ( buf , 0 )"	3407:4:104843:104870	1112322	23	True				
ANR	1113584	AssignmentExpression	"x = r_read_at_be32 ( buf , 0 )"		1112322	0		=			
ANR	1113585	Identifier	x		1112322	0					
ANR	1113586	CallExpression	"r_read_at_be32 ( buf , 0 )"		1112322	1					
ANR	1113587	Callee	r_read_at_be32		1112322	0					
ANR	1113588	Identifier	r_read_at_be32		1112322	0					
ANR	1113589	ArgumentList	buf		1112322	1					
ANR	1113590	Argument	buf		1112322	0					
ANR	1113591	Identifier	buf		1112322	0					
ANR	1113592	Argument	0		1112322	1					
ANR	1113593	PrimaryExpression	0		1112322	0					
ANR	1113594	ExpressionStatement	ptr = malloc ( x )	3408:4:104876:104892	1112322	24	True				
ANR	1113595	AssignmentExpression	ptr = malloc ( x )		1112322	0		=			
ANR	1113596	Identifier	ptr		1112322	0					
ANR	1113597	CallExpression	malloc ( x )		1112322	1					
ANR	1113598	Callee	malloc		1112322	0					
ANR	1113599	Identifier	malloc		1112322	0					
ANR	1113600	ArgumentList	x		1112322	1					
ANR	1113601	Argument	x		1112322	0					
ANR	1113602	Identifier	x		1112322	0					
ANR	1113603	ExpressionStatement	"r_socket_read ( c , ptr , x )"	3409:4:104898:104923	1112322	25	True				
ANR	1113604	CallExpression	"r_socket_read ( c , ptr , x )"		1112322	0					
ANR	1113605	Callee	r_socket_read		1112322	0					
ANR	1113606	Identifier	r_socket_read		1112322	0					
ANR	1113607	ArgumentList	c		1112322	1					
ANR	1113608	Argument	c		1112322	0					
ANR	1113609	Identifier	c		1112322	0					
ANR	1113610	Argument	ptr		1112322	1					
ANR	1113611	Identifier	ptr		1112322	0					
ANR	1113612	Argument	x		1112322	2					
ANR	1113613	Identifier	x		1112322	0					
ANR	1113614	IdentifierDeclStatement	"int ret = r_core_write_at ( core , core -> offset , ptr , x ) ;"	3410:4:104929:104983	1112322	26	True				
ANR	1113615	IdentifierDecl	"ret = r_core_write_at ( core , core -> offset , ptr , x )"		1112322	0					
ANR	1113616	IdentifierDeclType	int		1112322	0					
ANR	1113617	Identifier	ret		1112322	1					
ANR	1113618	AssignmentExpression	"ret = r_core_write_at ( core , core -> offset , ptr , x )"		1112322	2		=			
ANR	1113619	Identifier	ret		1112322	0					
ANR	1113620	CallExpression	"r_core_write_at ( core , core -> offset , ptr , x )"		1112322	1					
ANR	1113621	Callee	r_core_write_at		1112322	0					
ANR	1113622	Identifier	r_core_write_at		1112322	0					
ANR	1113623	ArgumentList	core		1112322	1					
ANR	1113624	Argument	core		1112322	0					
ANR	1113625	Identifier	core		1112322	0					
ANR	1113626	Argument	core -> offset		1112322	1					
ANR	1113627	PtrMemberAccess	core -> offset		1112322	0					
ANR	1113628	Identifier	core		1112322	0					
ANR	1113629	Identifier	offset		1112322	1					
ANR	1113630	Argument	ptr		1112322	2					
ANR	1113631	Identifier	ptr		1112322	0					
ANR	1113632	Argument	x		1112322	3					
ANR	1113633	Identifier	x		1112322	0					
ANR	1113634	ExpressionStatement	buf [ 0 ] = RMT_WRITE | RMT_REPLY	3411:4:104989:105019	1112322	27	True				
ANR	1113635	AssignmentExpression	buf [ 0 ] = RMT_WRITE | RMT_REPLY		1112322	0		=			
ANR	1113636	ArrayIndexing	buf [ 0 ]		1112322	0					
ANR	1113637	Identifier	buf		1112322	0					
ANR	1113638	PrimaryExpression	0		1112322	1					
ANR	1113639	InclusiveOrExpression	RMT_WRITE | RMT_REPLY		1112322	1		|			
ANR	1113640	Identifier	RMT_WRITE		1112322	0					
ANR	1113641	Identifier	RMT_REPLY		1112322	1					
ANR	1113642	ExpressionStatement	"r_write_be32 ( buf + 1 , ret )"	3412:4:105025:105052	1112322	28	True				
ANR	1113643	CallExpression	"r_write_be32 ( buf + 1 , ret )"		1112322	0					
ANR	1113644	Callee	r_write_be32		1112322	0					
ANR	1113645	Identifier	r_write_be32		1112322	0					
ANR	1113646	ArgumentList	buf + 1		1112322	1					
ANR	1113647	Argument	buf + 1		1112322	0					
ANR	1113648	AdditiveExpression	buf + 1		1112322	0		+			
ANR	1113649	Identifier	buf		1112322	0					
ANR	1113650	PrimaryExpression	1		1112322	1					
ANR	1113651	Argument	ret		1112322	1					
ANR	1113652	Identifier	ret		1112322	0					
ANR	1113653	ExpressionStatement	"r_socket_write ( c , buf , 5 )"	3413:4:105058:105084	1112322	29	True				
ANR	1113654	CallExpression	"r_socket_write ( c , buf , 5 )"		1112322	0					
ANR	1113655	Callee	r_socket_write		1112322	0					
ANR	1113656	Identifier	r_socket_write		1112322	0					
ANR	1113657	ArgumentList	c		1112322	1					
ANR	1113658	Argument	c		1112322	0					
ANR	1113659	Identifier	c		1112322	0					
ANR	1113660	Argument	buf		1112322	1					
ANR	1113661	Identifier	buf		1112322	0					
ANR	1113662	Argument	5		1112322	2					
ANR	1113663	PrimaryExpression	5		1112322	0					
ANR	1113664	ExpressionStatement	r_socket_flush ( c )	3414:4:105090:105108	1112322	30	True				
ANR	1113665	CallExpression	r_socket_flush ( c )		1112322	0					
ANR	1113666	Callee	r_socket_flush		1112322	0					
ANR	1113667	Identifier	r_socket_flush		1112322	0					
ANR	1113668	ArgumentList	c		1112322	1					
ANR	1113669	Argument	c		1112322	0					
ANR	1113670	Identifier	c		1112322	0					
ANR	1113671	ExpressionStatement	R_FREE ( ptr )	3415:4:105114:105126	1112322	31	True				
ANR	1113672	CallExpression	R_FREE ( ptr )		1112322	0					
ANR	1113673	Callee	R_FREE		1112322	0					
ANR	1113674	Identifier	R_FREE		1112322	0					
ANR	1113675	ArgumentList	ptr		1112322	1					
ANR	1113676	Argument	ptr		1112322	0					
ANR	1113677	Identifier	ptr		1112322	0					
ANR	1113678	BreakStatement	break ;	3416:4:105132:105137	1112322	32	True				
ANR	1113679	Label	case RMT_SEEK :	3417:3:105142:105155	1112322	33	True				
ANR	1113680	Identifier	RMT_SEEK		1112322	0					
ANR	1113681	ExpressionStatement	"r_socket_read_block ( c , buf , 9 )"	3418:4:105161:105192	1112322	34	True				
ANR	1113682	CallExpression	"r_socket_read_block ( c , buf , 9 )"		1112322	0					
ANR	1113683	Callee	r_socket_read_block		1112322	0					
ANR	1113684	Identifier	r_socket_read_block		1112322	0					
ANR	1113685	ArgumentList	c		1112322	1					
ANR	1113686	Argument	c		1112322	0					
ANR	1113687	Identifier	c		1112322	0					
ANR	1113688	Argument	buf		1112322	1					
ANR	1113689	Identifier	buf		1112322	0					
ANR	1113690	Argument	9		1112322	2					
ANR	1113691	PrimaryExpression	9		1112322	0					
ANR	1113692	ExpressionStatement	"x = r_read_at_be64 ( buf , 1 )"	3419:4:105198:105225	1112322	35	True				
ANR	1113693	AssignmentExpression	"x = r_read_at_be64 ( buf , 1 )"		1112322	0		=			
ANR	1113694	Identifier	x		1112322	0					
ANR	1113695	CallExpression	"r_read_at_be64 ( buf , 1 )"		1112322	1					
ANR	1113696	Callee	r_read_at_be64		1112322	0					
ANR	1113697	Identifier	r_read_at_be64		1112322	0					
ANR	1113698	ArgumentList	buf		1112322	1					
ANR	1113699	Argument	buf		1112322	0					
ANR	1113700	Identifier	buf		1112322	0					
ANR	1113701	Argument	1		1112322	1					
ANR	1113702	PrimaryExpression	1		1112322	0					
ANR	1113703	IfStatement	if ( buf [ 0 ] == 2 )		1112322	36					
ANR	1113704	Condition	buf [ 0 ] == 2	3420:8:105235:105245	1112322	0	True				
ANR	1113705	EqualityExpression	buf [ 0 ] == 2		1112322	0		==			
ANR	1113706	ArrayIndexing	buf [ 0 ]		1112322	0					
ANR	1113707	Identifier	buf		1112322	0					
ANR	1113708	PrimaryExpression	0		1112322	1					
ANR	1113709	PrimaryExpression	2		1112322	1					
ANR	1113710	CompoundStatement		202:21:5650:5650	1112322	1					
ANR	1113711	IfStatement	if ( core -> file )		1112322	0					
ANR	1113712	Condition	core -> file	3421:9:105259:105268	1112322	0	True				
ANR	1113713	PtrMemberAccess	core -> file		1112322	0					
ANR	1113714	Identifier	core		1112322	0					
ANR	1113715	Identifier	file		1112322	1					
ANR	1113716	CompoundStatement		203:21:5673:5673	1112322	1					
ANR	1113717	ExpressionStatement	"x = r_io_fd_size ( core -> io , core -> file -> fd )"	3422:6:105279:105322	1112322	0	True				
ANR	1113718	AssignmentExpression	"x = r_io_fd_size ( core -> io , core -> file -> fd )"		1112322	0		=			
ANR	1113719	Identifier	x		1112322	0					
ANR	1113720	CallExpression	"r_io_fd_size ( core -> io , core -> file -> fd )"		1112322	1					
ANR	1113721	Callee	r_io_fd_size		1112322	0					
ANR	1113722	Identifier	r_io_fd_size		1112322	0					
ANR	1113723	ArgumentList	core -> io		1112322	1					
ANR	1113724	Argument	core -> io		1112322	0					
ANR	1113725	PtrMemberAccess	core -> io		1112322	0					
ANR	1113726	Identifier	core		1112322	0					
ANR	1113727	Identifier	io		1112322	1					
ANR	1113728	Argument	core -> file -> fd		1112322	1					
ANR	1113729	PtrMemberAccess	core -> file -> fd		1112322	0					
ANR	1113730	PtrMemberAccess	core -> file		1112322	0					
ANR	1113731	Identifier	core		1112322	0					
ANR	1113732	Identifier	file		1112322	1					
ANR	1113733	Identifier	fd		1112322	1					
ANR	1113734	ElseStatement	else		1112322	0					
ANR	1113735	CompoundStatement		205:12:5738:5738	1112322	0					
ANR	1113736	ExpressionStatement	x = 0	3424:6:105344:105349	1112322	0	True				
ANR	1113737	AssignmentExpression	x = 0		1112322	0		=			
ANR	1113738	Identifier	x		1112322	0					
ANR	1113739	PrimaryExpression	0		1112322	1					
ANR	1113740	ElseStatement	else		1112322	0					
ANR	1113741	CompoundStatement		208:11:5771:5771	1112322	0					
ANR	1113742	IfStatement	if ( buf [ 0 ] == 0 )		1112322	0					
ANR	1113743	Condition	buf [ 0 ] == 0	3427:9:105380:105390	1112322	0	True				
ANR	1113744	EqualityExpression	buf [ 0 ] == 0		1112322	0		==			
ANR	1113745	ArrayIndexing	buf [ 0 ]		1112322	0					
ANR	1113746	Identifier	buf		1112322	0					
ANR	1113747	PrimaryExpression	0		1112322	1					
ANR	1113748	PrimaryExpression	0		1112322	1					
ANR	1113749	CompoundStatement		209:22:5795:5795	1112322	1					
ANR	1113750	ExpressionStatement	"r_core_seek ( core , x , 1 )"	3428:6:105401:105425	1112322	0	True				
ANR	1113751	CallExpression	"r_core_seek ( core , x , 1 )"		1112322	0					
ANR	1113752	Callee	r_core_seek		1112322	0					
ANR	1113753	Identifier	r_core_seek		1112322	0					
ANR	1113754	ArgumentList	core		1112322	1					
ANR	1113755	Argument	core		1112322	0					
ANR	1113756	Identifier	core		1112322	0					
ANR	1113757	Argument	x		1112322	1					
ANR	1113758	Identifier	x		1112322	0					
ANR	1113759	Argument	1		1112322	2					
ANR	1113760	PrimaryExpression	1		1112322	0					
ANR	1113761	ExpressionStatement	x = core -> offset	3430:5:105450:105466	1112322	1	True				
ANR	1113762	AssignmentExpression	x = core -> offset		1112322	0		=			
ANR	1113763	Identifier	x		1112322	0					
ANR	1113764	PtrMemberAccess	core -> offset		1112322	1					
ANR	1113765	Identifier	core		1112322	0					
ANR	1113766	Identifier	offset		1112322	1					
ANR	1113767	ExpressionStatement	buf [ 0 ] = RMT_SEEK | RMT_REPLY	3432:4:105478:105507	1112322	37	True				
ANR	1113768	AssignmentExpression	buf [ 0 ] = RMT_SEEK | RMT_REPLY		1112322	0		=			
ANR	1113769	ArrayIndexing	buf [ 0 ]		1112322	0					
ANR	1113770	Identifier	buf		1112322	0					
ANR	1113771	PrimaryExpression	0		1112322	1					
ANR	1113772	InclusiveOrExpression	RMT_SEEK | RMT_REPLY		1112322	1		|			
ANR	1113773	Identifier	RMT_SEEK		1112322	0					
ANR	1113774	Identifier	RMT_REPLY		1112322	1					
ANR	1113775	ExpressionStatement	"r_write_be64 ( buf + 1 , x )"	3433:4:105513:105538	1112322	38	True				
ANR	1113776	CallExpression	"r_write_be64 ( buf + 1 , x )"		1112322	0					
ANR	1113777	Callee	r_write_be64		1112322	0					
ANR	1113778	Identifier	r_write_be64		1112322	0					
ANR	1113779	ArgumentList	buf + 1		1112322	1					
ANR	1113780	Argument	buf + 1		1112322	0					
ANR	1113781	AdditiveExpression	buf + 1		1112322	0		+			
ANR	1113782	Identifier	buf		1112322	0					
ANR	1113783	PrimaryExpression	1		1112322	1					
ANR	1113784	Argument	x		1112322	1					
ANR	1113785	Identifier	x		1112322	0					
ANR	1113786	ExpressionStatement	"r_socket_write ( c , buf , 9 )"	3434:4:105544:105570	1112322	39	True				
ANR	1113787	CallExpression	"r_socket_write ( c , buf , 9 )"		1112322	0					
ANR	1113788	Callee	r_socket_write		1112322	0					
ANR	1113789	Identifier	r_socket_write		1112322	0					
ANR	1113790	ArgumentList	c		1112322	1					
ANR	1113791	Argument	c		1112322	0					
ANR	1113792	Identifier	c		1112322	0					
ANR	1113793	Argument	buf		1112322	1					
ANR	1113794	Identifier	buf		1112322	0					
ANR	1113795	Argument	9		1112322	2					
ANR	1113796	PrimaryExpression	9		1112322	0					
ANR	1113797	ExpressionStatement	r_socket_flush ( c )	3435:4:105576:105594	1112322	40	True				
ANR	1113798	CallExpression	r_socket_flush ( c )		1112322	0					
ANR	1113799	Callee	r_socket_flush		1112322	0					
ANR	1113800	Identifier	r_socket_flush		1112322	0					
ANR	1113801	ArgumentList	c		1112322	1					
ANR	1113802	Argument	c		1112322	0					
ANR	1113803	Identifier	c		1112322	0					
ANR	1113804	BreakStatement	break ;	3436:4:105600:105605	1112322	41	True				
ANR	1113805	Label	case RMT_CLOSE :	3437:3:105610:105624	1112322	42	True				
ANR	1113806	Identifier	RMT_CLOSE		1112322	0					
ANR	1113807	ExpressionStatement	"r_socket_read_block ( c , buf , 4 )"	3439:4:105659:105690	1112322	43	True				
ANR	1113808	CallExpression	"r_socket_read_block ( c , buf , 4 )"		1112322	0					
ANR	1113809	Callee	r_socket_read_block		1112322	0					
ANR	1113810	Identifier	r_socket_read_block		1112322	0					
ANR	1113811	ArgumentList	c		1112322	1					
ANR	1113812	Argument	c		1112322	0					
ANR	1113813	Identifier	c		1112322	0					
ANR	1113814	Argument	buf		1112322	1					
ANR	1113815	Identifier	buf		1112322	0					
ANR	1113816	Argument	4		1112322	2					
ANR	1113817	PrimaryExpression	4		1112322	0					
ANR	1113818	ExpressionStatement	i = r_read_be32 ( buf )	3440:4:105696:105717	1112322	44	True				
ANR	1113819	AssignmentExpression	i = r_read_be32 ( buf )		1112322	0		=			
ANR	1113820	Identifier	i		1112322	0					
ANR	1113821	CallExpression	r_read_be32 ( buf )		1112322	1					
ANR	1113822	Callee	r_read_be32		1112322	0					
ANR	1113823	Identifier	r_read_be32		1112322	0					
ANR	1113824	ArgumentList	buf		1112322	1					
ANR	1113825	Argument	buf		1112322	0					
ANR	1113826	Identifier	buf		1112322	0					
ANR	1113827	CompoundStatement		225:4:6163:6182	1112322	45					
ANR	1113828	IdentifierDeclStatement	int ret = close ( i ) ;	3443:4:105761:105780	1112322	0	True				
ANR	1113829	IdentifierDecl	ret = close ( i )		1112322	0					
ANR	1113830	IdentifierDeclType	int		1112322	0					
ANR	1113831	Identifier	ret		1112322	1					
ANR	1113832	AssignmentExpression	ret = close ( i )		1112322	2		=			
ANR	1113833	Identifier	ret		1112322	0					
ANR	1113834	CallExpression	close ( i )		1112322	1					
ANR	1113835	Callee	close		1112322	0					
ANR	1113836	Identifier	close		1112322	0					
ANR	1113837	ArgumentList	i		1112322	1					
ANR	1113838	Argument	i		1112322	0					
ANR	1113839	Identifier	i		1112322	0					
ANR	1113840	ExpressionStatement	"r_write_be32 ( buf + 1 , ret )"	3444:4:105786:105813	1112322	1	True				
ANR	1113841	CallExpression	"r_write_be32 ( buf + 1 , ret )"		1112322	0					
ANR	1113842	Callee	r_write_be32		1112322	0					
ANR	1113843	Identifier	r_write_be32		1112322	0					
ANR	1113844	ArgumentList	buf + 1		1112322	1					
ANR	1113845	Argument	buf + 1		1112322	0					
ANR	1113846	AdditiveExpression	buf + 1		1112322	0		+			
ANR	1113847	Identifier	buf		1112322	0					
ANR	1113848	PrimaryExpression	1		1112322	1					
ANR	1113849	Argument	ret		1112322	1					
ANR	1113850	Identifier	ret		1112322	0					
ANR	1113851	ExpressionStatement	buf [ 0 ] = RMT_CLOSE | RMT_REPLY	3445:4:105819:105849	1112322	2	True				
ANR	1113852	AssignmentExpression	buf [ 0 ] = RMT_CLOSE | RMT_REPLY		1112322	0		=			
ANR	1113853	ArrayIndexing	buf [ 0 ]		1112322	0					
ANR	1113854	Identifier	buf		1112322	0					
ANR	1113855	PrimaryExpression	0		1112322	1					
ANR	1113856	InclusiveOrExpression	RMT_CLOSE | RMT_REPLY		1112322	1		|			
ANR	1113857	Identifier	RMT_CLOSE		1112322	0					
ANR	1113858	Identifier	RMT_REPLY		1112322	1					
ANR	1113859	ExpressionStatement	"r_socket_write ( c , buf , 5 )"	3446:4:105855:105881	1112322	3	True				
ANR	1113860	CallExpression	"r_socket_write ( c , buf , 5 )"		1112322	0					
ANR	1113861	Callee	r_socket_write		1112322	0					
ANR	1113862	Identifier	r_socket_write		1112322	0					
ANR	1113863	ArgumentList	c		1112322	1					
ANR	1113864	Argument	c		1112322	0					
ANR	1113865	Identifier	c		1112322	0					
ANR	1113866	Argument	buf		1112322	1					
ANR	1113867	Identifier	buf		1112322	0					
ANR	1113868	Argument	5		1112322	2					
ANR	1113869	PrimaryExpression	5		1112322	0					
ANR	1113870	ExpressionStatement	r_socket_flush ( c )	3447:4:105887:105905	1112322	4	True				
ANR	1113871	CallExpression	r_socket_flush ( c )		1112322	0					
ANR	1113872	Callee	r_socket_flush		1112322	0					
ANR	1113873	Identifier	r_socket_flush		1112322	0					
ANR	1113874	ArgumentList	c		1112322	1					
ANR	1113875	Argument	c		1112322	0					
ANR	1113876	Identifier	c		1112322	0					
ANR	1113877	BreakStatement	break ;	3449:4:105917:105922	1112322	46	True				
ANR	1113878	Label	default :	3450:3:105927:105934	1112322	47	True				
ANR	1113879	Identifier	default		1112322	0					
ANR	1113880	IfStatement	if ( cmd == 'G' )		1112322	48					
ANR	1113881	Condition	cmd == 'G'	3451:8:105944:105953	1112322	0	True				
ANR	1113882	EqualityExpression	cmd == 'G'		1112322	0		==			
ANR	1113883	Identifier	cmd		1112322	0					
ANR	1113884	PrimaryExpression	'G'		1112322	1					
ANR	1113885	CompoundStatement		236:5:6433:6449	1112322	1					
ANR	1113886	IdentifierDeclStatement	char line [ 256 ] = { 0 } ;	3453:5:106004:106024	1112322	0	True				
ANR	1113887	IdentifierDecl	line [ 256 ] = { 0 }		1112322	0					
ANR	1113888	IdentifierDeclType	char [ 256 ]		1112322	0					
ANR	1113889	Identifier	line		1112322	1					
ANR	1113890	PrimaryExpression	256		1112322	2					
ANR	1113891	AssignmentExpression	line [ 256 ] = { 0 }		1112322	3		=			
ANR	1113892	Identifier	line		1112322	0					
ANR	1113893	InitializerList	0		1112322	1					
ANR	1113894	PrimaryExpression	0		1112322	0					
ANR	1113895	IdentifierDeclStatement	char * cmd = line ;	3454:5:106031:106047	1112322	1	True				
ANR	1113896	IdentifierDecl	* cmd = line		1112322	0					
ANR	1113897	IdentifierDeclType	char *		1112322	0					
ANR	1113898	Identifier	cmd		1112322	1					
ANR	1113899	AssignmentExpression	* cmd = line		1112322	2		=			
ANR	1113900	Identifier	line		1112322	0					
ANR	1113901	Identifier	line		1112322	1					
ANR	1113902	ExpressionStatement	"r_socket_read ( c , ( ut8 * ) line , sizeof ( line ) )"	3455:5:106054:106098	1112322	2	True				
ANR	1113903	CallExpression	"r_socket_read ( c , ( ut8 * ) line , sizeof ( line ) )"		1112322	0					
ANR	1113904	Callee	r_socket_read		1112322	0					
ANR	1113905	Identifier	r_socket_read		1112322	0					
ANR	1113906	ArgumentList	c		1112322	1					
ANR	1113907	Argument	c		1112322	0					
ANR	1113908	Identifier	c		1112322	0					
ANR	1113909	Argument	( ut8 * ) line		1112322	1					
ANR	1113910	CastExpression	( ut8 * ) line		1112322	0					
ANR	1113911	CastTarget	ut8 *		1112322	0					
ANR	1113912	Identifier	line		1112322	1					
ANR	1113913	Argument	sizeof ( line )		1112322	2					
ANR	1113914	SizeofExpression	sizeof ( line )		1112322	0					
ANR	1113915	Sizeof	sizeof		1112322	0					
ANR	1113916	SizeofOperand	line		1112322	1					
ANR	1113917	IfStatement	"if ( ! strncmp ( line , ""ET /cmd/"" , 8 ) )"		1112322	3					
ANR	1113918	Condition	"! strncmp ( line , ""ET /cmd/"" , 8 )"	3456:9:106109:106138	1112322	0	True				
ANR	1113919	UnaryOperationExpression	"! strncmp ( line , ""ET /cmd/"" , 8 )"		1112322	0					
ANR	1113920	UnaryOperator	!		1112322	0					
ANR	1113921	CallExpression	"strncmp ( line , ""ET /cmd/"" , 8 )"		1112322	1					
ANR	1113922	Callee	strncmp		1112322	0					
ANR	1113923	Identifier	strncmp		1112322	0					
ANR	1113924	ArgumentList	line		1112322	1					
ANR	1113925	Argument	line		1112322	0					
ANR	1113926	Identifier	line		1112322	0					
ANR	1113927	Argument	"""ET /cmd/"""		1112322	1					
ANR	1113928	PrimaryExpression	"""ET /cmd/"""		1112322	0					
ANR	1113929	Argument	8		1112322	2					
ANR	1113930	PrimaryExpression	8		1112322	0					
ANR	1113931	CompoundStatement		249:6:6758:6796	1112322	1					
ANR	1113932	ExpressionStatement	cmd = line + 8	3457:6:106149:106163	1112322	0	True				
ANR	1113933	AssignmentExpression	cmd = line + 8		1112322	0		=			
ANR	1113934	Identifier	cmd		1112322	0					
ANR	1113935	AdditiveExpression	line + 8		1112322	1		+			
ANR	1113936	Identifier	line		1112322	0					
ANR	1113937	PrimaryExpression	8		1112322	1					
ANR	1113938	IdentifierDeclStatement	"char * http = strstr ( cmd , ""HTTP"" ) ;"	3458:6:106171:106204	1112322	1	True				
ANR	1113939	IdentifierDecl	"* http = strstr ( cmd , ""HTTP"" )"		1112322	0					
ANR	1113940	IdentifierDeclType	char *		1112322	0					
ANR	1113941	Identifier	http		1112322	1					
ANR	1113942	AssignmentExpression	"* http = strstr ( cmd , ""HTTP"" )"		1112322	2		=			
ANR	1113943	Identifier	http		1112322	0					
ANR	1113944	CallExpression	"strstr ( cmd , ""HTTP"" )"		1112322	1					
ANR	1113945	Callee	strstr		1112322	0					
ANR	1113946	Identifier	strstr		1112322	0					
ANR	1113947	ArgumentList	cmd		1112322	1					
ANR	1113948	Argument	cmd		1112322	0					
ANR	1113949	Identifier	cmd		1112322	0					
ANR	1113950	Argument	"""HTTP"""		1112322	1					
ANR	1113951	PrimaryExpression	"""HTTP"""		1112322	0					
ANR	1113952	IfStatement	if ( http )		1112322	2					
ANR	1113953	Condition	http	3459:10:106216:106219	1112322	0	True				
ANR	1113954	Identifier	http		1112322	0					
ANR	1113955	CompoundStatement		241:16:6624:6624	1112322	1					
ANR	1113956	ExpressionStatement	* http = 0	3460:7:106231:106240	1112322	0	True				
ANR	1113957	AssignmentExpression	* http = 0		1112322	0		=			
ANR	1113958	UnaryOperationExpression	* http		1112322	0					
ANR	1113959	UnaryOperator	*		1112322	0					
ANR	1113960	Identifier	http		1112322	1					
ANR	1113961	PrimaryExpression	0		1112322	1					
ANR	1113962	ExpressionStatement	http --	3461:7:106249:106255	1112322	1	True				
ANR	1113963	PostIncDecOperationExpression	http --		1112322	0					
ANR	1113964	Identifier	http		1112322	0					
ANR	1113965	IncDec	--		1112322	1					
ANR	1113966	IfStatement	if ( * http == ' ' )		1112322	2					
ANR	1113967	Condition	* http == ' '	3462:11:106268:106279	1112322	0	True				
ANR	1113968	EqualityExpression	* http == ' '		1112322	0		==			
ANR	1113969	UnaryOperationExpression	* http		1112322	0					
ANR	1113970	UnaryOperator	*		1112322	0					
ANR	1113971	Identifier	http		1112322	1					
ANR	1113972	PrimaryExpression	' '		1112322	1					
ANR	1113973	CompoundStatement		244:25:6684:6684	1112322	1					
ANR	1113974	ExpressionStatement	* http = 0	3463:8:106292:106301	1112322	0	True				
ANR	1113975	AssignmentExpression	* http = 0		1112322	0		=			
ANR	1113976	UnaryOperationExpression	* http		1112322	0					
ANR	1113977	UnaryOperator	*		1112322	0					
ANR	1113978	Identifier	http		1112322	1					
ANR	1113979	PrimaryExpression	0		1112322	1					
ANR	1113980	ExpressionStatement	r_str_uri_decode ( cmd )	3466:6:106326:106348	1112322	3	True				
ANR	1113981	CallExpression	r_str_uri_decode ( cmd )		1112322	0					
ANR	1113982	Callee	r_str_uri_decode		1112322	0					
ANR	1113983	Identifier	r_str_uri_decode		1112322	0					
ANR	1113984	ArgumentList	cmd		1112322	1					
ANR	1113985	Argument	cmd		1112322	0					
ANR	1113986	Identifier	cmd		1112322	0					
ANR	1113987	IdentifierDeclStatement	"char * res = r_core_cmd_str ( core , cmd ) ;"	3467:6:106356:106394	1112322	4	True				
ANR	1113988	IdentifierDecl	"* res = r_core_cmd_str ( core , cmd )"		1112322	0					
ANR	1113989	IdentifierDeclType	char *		1112322	0					
ANR	1113990	Identifier	res		1112322	1					
ANR	1113991	AssignmentExpression	"* res = r_core_cmd_str ( core , cmd )"		1112322	2		=			
ANR	1113992	Identifier	res		1112322	0					
ANR	1113993	CallExpression	"r_core_cmd_str ( core , cmd )"		1112322	1					
ANR	1113994	Callee	r_core_cmd_str		1112322	0					
ANR	1113995	Identifier	r_core_cmd_str		1112322	0					
ANR	1113996	ArgumentList	core		1112322	1					
ANR	1113997	Argument	core		1112322	0					
ANR	1113998	Identifier	core		1112322	0					
ANR	1113999	Argument	cmd		1112322	1					
ANR	1114000	Identifier	cmd		1112322	0					
ANR	1114001	IfStatement	if ( res )		1112322	5					
ANR	1114002	Condition	res	3468:10:106406:106408	1112322	0	True				
ANR	1114003	Identifier	res		1112322	0					
ANR	1114004	CompoundStatement		250:15:6813:6813	1112322	1					
ANR	1114005	Statement	r_socket_printf	3469:7:106420:106434	1112322	0	True				
ANR	1114006	Statement	(	3469:23:106436:106436	1112322	1	True				
ANR	1114007	Statement	c	3469:24:106437:106437	1112322	2	True				
ANR	1114008	Statement	","	3469:25:106438:106438	1112322	3	True				
ANR	1114009	Statement	"""HTTP/1.0 %d %s\\r\\n%s"""	3469:27:106440:106461	1112322	4	True				
ANR	1114010	Statement	"""Connection: close\\r\\nContent-Length: %d\\r\\n\\r\\n"""	3470:9:106472:106520	1112322	5	True				
ANR	1114011	Statement	","	3470:58:106521:106521	1112322	6	True				
ANR	1114012	Statement	200	3471:9:106532:106534	1112322	7	True				
ANR	1114013	Statement	","	3471:12:106535:106535	1112322	8	True				
ANR	1114014	Statement	"""OK"""	3471:14:106537:106540	1112322	9	True				
ANR	1114015	Statement	","	3471:18:106541:106541	1112322	10	True				
ANR	1114016	Statement	""""""	3471:20:106543:106544	1112322	11	True				
ANR	1114017	Statement	","	3471:22:106545:106545	1112322	12	True				
ANR	1114018	Statement	-	3471:24:106547:106547	1112322	13	True				
ANR	1114019	Statement	1	3471:25:106548:106548	1112322	14	True				
ANR	1114020	Statement	)	3471:26:106549:106549	1112322	15	True				
ANR	1114021	ExpressionStatement		3471:27:106550:106550	1112322	16	True				
ANR	1114022	ExpressionStatement	"r_socket_write ( c , res , strlen ( res ) )"	3472:7:106577:106614	1112322	17	True				
ANR	1114023	CallExpression	"r_socket_write ( c , res , strlen ( res ) )"		1112322	0					
ANR	1114024	Callee	r_socket_write		1112322	0					
ANR	1114025	Identifier	r_socket_write		1112322	0					
ANR	1114026	ArgumentList	c		1112322	1					
ANR	1114027	Argument	c		1112322	0					
ANR	1114028	Identifier	c		1112322	0					
ANR	1114029	Argument	res		1112322	1					
ANR	1114030	Identifier	res		1112322	0					
ANR	1114031	Argument	strlen ( res )		1112322	2					
ANR	1114032	CallExpression	strlen ( res )		1112322	0					
ANR	1114033	Callee	strlen		1112322	0					
ANR	1114034	Identifier	strlen		1112322	0					
ANR	1114035	ArgumentList	res		1112322	1					
ANR	1114036	Argument	res		1112322	0					
ANR	1114037	Identifier	res		1112322	0					
ANR	1114038	ExpressionStatement	free ( res )	3473:7:106623:106633	1112322	18	True				
ANR	1114039	CallExpression	free ( res )		1112322	0					
ANR	1114040	Callee	free		1112322	0					
ANR	1114041	Identifier	free		1112322	0					
ANR	1114042	ArgumentList	res		1112322	1					
ANR	1114043	Argument	res		1112322	0					
ANR	1114044	Identifier	res		1112322	0					
ANR	1114045	ExpressionStatement	r_socket_flush ( c )	3475:6:106649:106667	1112322	6	True				
ANR	1114046	CallExpression	r_socket_flush ( c )		1112322	0					
ANR	1114047	Callee	r_socket_flush		1112322	0					
ANR	1114048	Identifier	r_socket_flush		1112322	0					
ANR	1114049	ArgumentList	c		1112322	1					
ANR	1114050	Argument	c		1112322	0					
ANR	1114051	Identifier	c		1112322	0					
ANR	1114052	ExpressionStatement	r_socket_close ( c )	3476:6:106675:106693	1112322	7	True				
ANR	1114053	CallExpression	r_socket_close ( c )		1112322	0					
ANR	1114054	Callee	r_socket_close		1112322	0					
ANR	1114055	Identifier	r_socket_close		1112322	0					
ANR	1114056	ArgumentList	c		1112322	1					
ANR	1114057	Argument	c		1112322	0					
ANR	1114058	Identifier	c		1112322	0					
ANR	1114059	ElseStatement	else		1112322	0					
ANR	1114060	CompoundStatement		260:11:7115:7115	1112322	0					
ANR	1114061	ExpressionStatement	"eprintf ( ""[r2p] unknown command 0x%02x\\n"" , cmd )"	3479:5:106720:106767	1112322	0	True				
ANR	1114062	CallExpression	"eprintf ( ""[r2p] unknown command 0x%02x\\n"" , cmd )"		1112322	0					
ANR	1114063	Callee	eprintf		1112322	0					
ANR	1114064	Identifier	eprintf		1112322	0					
ANR	1114065	ArgumentList	"""[r2p] unknown command 0x%02x\\n"""		1112322	1					
ANR	1114066	Argument	"""[r2p] unknown command 0x%02x\\n"""		1112322	0					
ANR	1114067	PrimaryExpression	"""[r2p] unknown command 0x%02x\\n"""		1112322	0					
ANR	1114068	Argument	cmd		1112322	1					
ANR	1114069	Identifier	cmd		1112322	0					
ANR	1114070	ExpressionStatement	r_socket_close ( c )	3480:5:106774:106792	1112322	1	True				
ANR	1114071	CallExpression	r_socket_close ( c )		1112322	0					
ANR	1114072	Callee	r_socket_close		1112322	0					
ANR	1114073	Identifier	r_socket_close		1112322	0					
ANR	1114074	ArgumentList	c		1112322	1					
ANR	1114075	Argument	c		1112322	0					
ANR	1114076	Identifier	c		1112322	0					
ANR	1114077	ExpressionStatement	R_FREE ( ptr )	3481:5:106799:106811	1112322	2	True				
ANR	1114078	CallExpression	R_FREE ( ptr )		1112322	0					
ANR	1114079	Callee	R_FREE		1112322	0					
ANR	1114080	Identifier	R_FREE		1112322	0					
ANR	1114081	ArgumentList	ptr		1112322	1					
ANR	1114082	Argument	ptr		1112322	0					
ANR	1114083	Identifier	ptr		1112322	0					
ANR	1114084	IfStatement	"if ( r_config_get_i ( core -> config , ""rap.loop"" ) )"		1112322	49					
ANR	1114085	Condition	"r_config_get_i ( core -> config , ""rap.loop"" )"	3483:8:106827:106867	1112322	0	True				
ANR	1114086	CallExpression	"r_config_get_i ( core -> config , ""rap.loop"" )"		1112322	0					
ANR	1114087	Callee	r_config_get_i		1112322	0					
ANR	1114088	Identifier	r_config_get_i		1112322	0					
ANR	1114089	ArgumentList	core -> config		1112322	1					
ANR	1114090	Argument	core -> config		1112322	0					
ANR	1114091	PtrMemberAccess	core -> config		1112322	0					
ANR	1114092	Identifier	core		1112322	0					
ANR	1114093	Identifier	config		1112322	1					
ANR	1114094	Argument	"""rap.loop"""		1112322	1					
ANR	1114095	PrimaryExpression	"""rap.loop"""		1112322	0					
ANR	1114096	CompoundStatement		265:51:7272:7272	1112322	1					
ANR	1114097	ExpressionStatement	"eprintf ( ""rap: waiting for new connection\\n"" )"	3484:5:106877:106922	1112322	0	True				
ANR	1114098	CallExpression	"eprintf ( ""rap: waiting for new connection\\n"" )"		1112322	0					
ANR	1114099	Callee	eprintf		1112322	0					
ANR	1114100	Identifier	eprintf		1112322	0					
ANR	1114101	ArgumentList	"""rap: waiting for new connection\\n"""		1112322	1					
ANR	1114102	Argument	"""rap: waiting for new connection\\n"""		1112322	0					
ANR	1114103	PrimaryExpression	"""rap: waiting for new connection\\n"""		1112322	0					
ANR	1114104	ExpressionStatement	r_socket_free ( c )	3485:5:106929:106946	1112322	1	True				
ANR	1114105	CallExpression	r_socket_free ( c )		1112322	0					
ANR	1114106	Callee	r_socket_free		1112322	0					
ANR	1114107	Identifier	r_socket_free		1112322	0					
ANR	1114108	ArgumentList	c		1112322	1					
ANR	1114109	Argument	c		1112322	0					
ANR	1114110	Identifier	c		1112322	0					
ANR	1114111	GotoStatement	goto reaccept ;	3486:5:106953:106966	1112322	2	True				
ANR	1114112	Identifier	reaccept		1112322	0					
ANR	1114113	GotoStatement	goto out_of_function ;	3488:4:106978:106998	1112322	50	True				
ANR	1114114	Identifier	out_of_function		1112322	0					
ANR	1114115	ExpressionStatement	"eprintf ( ""client: disconnected\\n"" )"	3491:2:107011:107045	1112322	6	True				
ANR	1114116	CallExpression	"eprintf ( ""client: disconnected\\n"" )"		1112322	0					
ANR	1114117	Callee	eprintf		1112322	0					
ANR	1114118	Identifier	eprintf		1112322	0					
ANR	1114119	ArgumentList	"""client: disconnected\\n"""		1112322	1					
ANR	1114120	Argument	"""client: disconnected\\n"""		1112322	0					
ANR	1114121	PrimaryExpression	"""client: disconnected\\n"""		1112322	0					
ANR	1114122	ExpressionStatement	r_socket_free ( c )	3492:2:107049:107066	1112322	7	True				
ANR	1114123	CallExpression	r_socket_free ( c )		1112322	0					
ANR	1114124	Callee	r_socket_free		1112322	0					
ANR	1114125	Identifier	r_socket_free		1112322	0					
ANR	1114126	ArgumentList	c		1112322	1					
ANR	1114127	Argument	c		1112322	0					
ANR	1114128	Identifier	c		1112322	0					
ANR	1114129	Label	out_of_function :	3494:0:107071:107086	1112322	10	True				
ANR	1114130	Identifier	out_of_function		1112322	0					
ANR	1114131	ExpressionStatement	r_cons_break_pop ( )	3495:1:107089:107108	1112322	11	True				
ANR	1114132	CallExpression	r_cons_break_pop ( )		1112322	0					
ANR	1114133	Callee	r_cons_break_pop		1112322	0					
ANR	1114134	Identifier	r_cons_break_pop		1112322	0					
ANR	1114135	ArgumentList			1112322	1					
ANR	1114136	ReturnStatement	return false ;	3496:1:107111:107123	1112322	12	True				
ANR	1114137	Identifier	false		1112322	0					
ANR	1114138	ReturnType	R_API bool		1112322	1					
ANR	1114139	Identifier	r_core_serve		1112322	2					
ANR	1114140	ParameterList	"RCore * core , RIODesc * file"		1112322	3					
ANR	1114141	Parameter	RCore * core	3219:24:99569:99579	1112322	0	True				
ANR	1114142	ParameterType	RCore *		1112322	0					
ANR	1114143	Identifier	core		1112322	1					
ANR	1114144	Parameter	RIODesc * file	3219:37:99582:99594	1112322	1	True				
ANR	1114145	ParameterType	RIODesc *		1112322	0					
ANR	1114146	Identifier	file		1112322	1					
ANR	1114147	CFGEntryNode	ENTRY		1112322		True				
ANR	1114148	CFGExitNode	EXIT		1112322		True				
ANR	1114149	Symbol	r_core_cmd_str		1112322						
ANR	1114150	Symbol	RMT_READ		1112322						
ANR	1114151	Symbol	* bufw		1112322						
ANR	1114152	Symbol	core -> offset		1112322						
ANR	1114153	Symbol	RMT_MAX		1112322						
ANR	1114154	Symbol	strlen		1112322						
ANR	1114155	Symbol	strncmp		1112322						
ANR	1114156	Symbol	r_io_fd_size		1112322						
ANR	1114157	Symbol	* ptr		1112322						
ANR	1114158	Symbol	* cmd		1112322						
ANR	1114159	Symbol	r_read_at_be32		1112322						
ANR	1114160	Symbol	core -> blocksize		1112322						
ANR	1114161	Symbol	ret		1112322						
ANR	1114162	Symbol	res		1112322						
ANR	1114163	Symbol	* http		1112322						
ANR	1114164	Symbol	* buf		1112322						
ANR	1114165	Symbol	NULL		1112322						
ANR	1114166	Symbol	core -> block		1112322						
ANR	1114167	Symbol	RMT_CMD		1112322						
ANR	1114168	Symbol	cmd_output		1112322						
ANR	1114169	Symbol	cmd_len		1112322						
ANR	1114170	Symbol	* file		1112322						
ANR	1114171	Symbol	r_socket_read		1112322						
ANR	1114172	Symbol	core		1112322						
ANR	1114173	Symbol	* rior		1112322						
ANR	1114174	Symbol	RMT_CLOSE		1112322						
ANR	1114175	Symbol	r_io_fd_get_current		1112322						
ANR	1114176	Symbol	once		1112322						
ANR	1114177	Symbol	strstr		1112322						
ANR	1114178	Symbol	r_config_get_i		1112322						
ANR	1114179	Symbol	true		1112322						
ANR	1114180	Symbol	core -> file -> fd		1112322						
ANR	1114181	Symbol	http		1112322						
ANR	1114182	Symbol	cmd		1112322						
ANR	1114183	Symbol	fd		1112322						
ANR	1114184	Symbol	r_read_at_be64		1112322						
ANR	1114185	Symbol	& flg		1112322						
ANR	1114186	Symbol	scr_interactive		1112322						
ANR	1114187	Symbol	baddr		1112322						
ANR	1114188	Symbol	perm		1112322						
ANR	1114189	Symbol	line		1112322						
ANR	1114190	Symbol	RMT_OPEN		1112322						
ANR	1114191	Symbol	RMT_WRITE		1112322						
ANR	1114192	Symbol	* core		1112322						
ANR	1114193	Symbol	r_config_get		1112322						
ANR	1114194	Symbol	bufw		1112322						
ANR	1114195	Symbol	calloc		1112322						
ANR	1114196	Symbol	& bufr		1112322						
ANR	1114197	Symbol	r_cons_is_breaked		1112322						
ANR	1114198	Symbol	file		1112322						
ANR	1114199	Symbol	R_PERM_W		1112322						
ANR	1114200	Symbol	core -> io		1112322						
ANR	1114201	Symbol	R_PERM_R		1112322						
ANR	1114202	Symbol	rap_break		1112322						
ANR	1114203	Symbol	close		1112322						
ANR	1114204	Symbol	& buf		1112322						
ANR	1114205	Symbol	* * core		1112322						
ANR	1114206	Symbol	flg		1112322						
ANR	1114207	Symbol	core -> config		1112322						
ANR	1114208	Symbol	malloc		1112322						
ANR	1114209	Symbol	b		1112322						
ANR	1114210	Symbol	c		1112322						
ANR	1114211	Symbol	core -> file		1112322						
ANR	1114212	Symbol	RMT_SEEK		1112322						
ANR	1114213	Symbol	rior -> fd		1112322						
ANR	1114214	Symbol	& cmd		1112322						
ANR	1114215	Symbol	false		1112322						
ANR	1114216	Symbol	i		1112322						
ANR	1114217	Symbol	r_core_file_open		1112322						
ANR	1114218	Symbol	r_read_be32		1112322						
ANR	1114219	Symbol	* b		1112322						
ANR	1114220	Symbol	n		1112322						
ANR	1114221	Symbol	ptr		1112322						
ANR	1114222	Symbol	rior		1112322						
ANR	1114223	Symbol	r_socket_accept		1112322						
ANR	1114224	Symbol	bufr		1112322						
ANR	1114225	Symbol	* core -> file		1112322						
ANR	1114226	Symbol	buf		1112322						
ANR	1114227	Symbol	* i		1112322						
ANR	1114228	Symbol	RMT_REPLY		1112322						
ANR	1114229	Symbol	pipefd		1112322						
ANR	1114230	Symbol	x		1112322						
ANR	1114231	Symbol	file -> data		1112322						
ANR	1114232	Symbol	r_core_write_at		1112322						
ANR	1114233	Symbol	strdup		1112322						
ANR	1114234	Function	r_core_search_cb	3499:0:107128:107790							
ANR	1114235	FunctionDef	"r_core_search_cb (RCore * core , ut64 from , ut64 to , RCoreSearchCallback cb)"		1114234	0					
ANR	1114236	CompoundStatement		3499:84:107212:107790	1114234	0					
ANR	1114237	IdentifierDeclStatement	"int ret , len = core -> blocksize ;"	3500:1:107215:107245	1114234	0	True				
ANR	1114238	IdentifierDecl	ret		1114234	0					
ANR	1114239	IdentifierDeclType	int		1114234	0					
ANR	1114240	Identifier	ret		1114234	1					
ANR	1114241	IdentifierDecl	len = core -> blocksize		1114234	1					
ANR	1114242	IdentifierDeclType	int		1114234	0					
ANR	1114243	Identifier	len		1114234	1					
ANR	1114244	AssignmentExpression	len = core -> blocksize		1114234	2		=			
ANR	1114245	Identifier	len		1114234	0					
ANR	1114246	PtrMemberAccess	core -> blocksize		1114234	1					
ANR	1114247	Identifier	core		1114234	0					
ANR	1114248	Identifier	blocksize		1114234	1					
ANR	1114249	IdentifierDeclStatement	ut8 * buf ;	3501:1:107248:107256	1114234	1	True				
ANR	1114250	IdentifierDecl	* buf		1114234	0					
ANR	1114251	IdentifierDeclType	ut8 *		1114234	0					
ANR	1114252	Identifier	buf		1114234	1					
ANR	1114253	IfStatement	if ( ( buf = malloc ( len ) ) )		1114234	2					
ANR	1114254	Condition	buf = malloc ( len )	3502:5:107263:107282	1114234	0	True				
ANR	1114255	AssignmentExpression	buf = malloc ( len )		1114234	0		=			
ANR	1114256	Identifier	buf		1114234	0					
ANR	1114257	CallExpression	malloc ( len )		1114234	1					
ANR	1114258	Callee	malloc		1114234	0					
ANR	1114259	Identifier	malloc		1114234	0					
ANR	1114260	ArgumentList	len		1114234	1					
ANR	1114261	Argument	len		1114234	0					
ANR	1114262	Identifier	len		1114234	0					
ANR	1114263	CompoundStatement		4:27:72:72	1114234	1					
ANR	1114264	WhileStatement	while ( from < to )		1114234	0					
ANR	1114265	Condition	from < to	3503:9:107296:107304	1114234	0	True				
ANR	1114266	RelationalExpression	from < to		1114234	0		<			
ANR	1114267	Identifier	from		1114234	0					
ANR	1114268	Identifier	to		1114234	1					
ANR	1114269	CompoundStatement		6:3:99:119	1114234	1					
ANR	1114270	IdentifierDeclStatement	ut64 delta = to - from ;	3504:3:107312:107332	1114234	0	True				
ANR	1114271	IdentifierDecl	delta = to - from		1114234	0					
ANR	1114272	IdentifierDeclType	ut64		1114234	0					
ANR	1114273	Identifier	delta		1114234	1					
ANR	1114274	AssignmentExpression	delta = to - from		1114234	2		=			
ANR	1114275	Identifier	delta		1114234	0					
ANR	1114276	AdditiveExpression	to - from		1114234	1		-			
ANR	1114277	Identifier	to		1114234	0					
ANR	1114278	Identifier	from		1114234	1					
ANR	1114279	IfStatement	if ( delta < len )		1114234	1					
ANR	1114280	Condition	delta < len	3505:7:107341:107351	1114234	0	True				
ANR	1114281	RelationalExpression	delta < len		1114234	0		<			
ANR	1114282	Identifier	delta		1114234	0					
ANR	1114283	Identifier	len		1114234	1					
ANR	1114284	CompoundStatement		7:20:141:141	1114234	1					
ANR	1114285	ExpressionStatement	len = ( int ) delta	3506:4:107360:107376	1114234	0	True				
ANR	1114286	AssignmentExpression	len = ( int ) delta		1114234	0		=			
ANR	1114287	Identifier	len		1114234	0					
ANR	1114288	CastExpression	( int ) delta		1114234	1					
ANR	1114289	CastTarget	int		1114234	0					
ANR	1114290	Identifier	delta		1114234	1					
ANR	1114291	IfStatement	"if ( ! r_io_read_at ( core -> io , from , buf , len ) )"		1114234	2					
ANR	1114292	Condition	"! r_io_read_at ( core -> io , from , buf , len )"	3508:7:107390:107429	1114234	0	True				
ANR	1114293	UnaryOperationExpression	"! r_io_read_at ( core -> io , from , buf , len )"		1114234	0					
ANR	1114294	UnaryOperator	!		1114234	0					
ANR	1114295	CallExpression	"r_io_read_at ( core -> io , from , buf , len )"		1114234	1					
ANR	1114296	Callee	r_io_read_at		1114234	0					
ANR	1114297	Identifier	r_io_read_at		1114234	0					
ANR	1114298	ArgumentList	core -> io		1114234	1					
ANR	1114299	Argument	core -> io		1114234	0					
ANR	1114300	PtrMemberAccess	core -> io		1114234	0					
ANR	1114301	Identifier	core		1114234	0					
ANR	1114302	Identifier	io		1114234	1					
ANR	1114303	Argument	from		1114234	1					
ANR	1114304	Identifier	from		1114234	0					
ANR	1114305	Argument	buf		1114234	2					
ANR	1114306	Identifier	buf		1114234	0					
ANR	1114307	Argument	len		1114234	3					
ANR	1114308	Identifier	len		1114234	0					
ANR	1114309	CompoundStatement		10:49:219:219	1114234	1					
ANR	1114310	Statement	eprintf	3509:4:107438:107444	1114234	0	True				
ANR	1114311	Statement	(	3509:12:107446:107446	1114234	1	True				
ANR	1114312	Statement	"""Cannot read at 0x%"""	3509:13:107447:107466	1114234	2	True				
ANR	1114313	Statement	PFMT64x	3509:33:107467:107473	1114234	3	True				
ANR	1114314	Statement	"""\\n"""	3509:40:107474:107477	1114234	4	True				
ANR	1114315	Statement	","	3509:44:107478:107478	1114234	5	True				
ANR	1114316	Statement	from	3509:46:107480:107483	1114234	6	True				
ANR	1114317	Statement	)	3509:50:107484:107484	1114234	7	True				
ANR	1114318	ExpressionStatement		3509:51:107485:107485	1114234	8	True				
ANR	1114319	BreakStatement	break ;	3510:4:107491:107496	1114234	9	True				
ANR	1114320	ForStatement	for ( ret = 0 ; ret < len ; )		1114234	3					
ANR	1114321	ForInit	ret = 0 ;	3512:8:107511:107518	1114234	0	True				
ANR	1114322	AssignmentExpression	ret = 0		1114234	0		=			
ANR	1114323	Identifier	ret		1114234	0					
ANR	1114324	PrimaryExpression	0		1114234	1					
ANR	1114325	Condition	ret < len	3512:17:107520:107528	1114234	1	True				
ANR	1114326	RelationalExpression	ret < len		1114234	0		<			
ANR	1114327	Identifier	ret		1114234	0					
ANR	1114328	Identifier	len		1114234	1					
ANR	1114329	CompoundStatement		15:4:325:369	1114234	2					
ANR	1114330	IdentifierDeclStatement	"int done = cb ( core , from , buf + ret , len - ret ) ;"	3513:4:107538:107582	1114234	0	True				
ANR	1114331	IdentifierDecl	"done = cb ( core , from , buf + ret , len - ret )"		1114234	0					
ANR	1114332	IdentifierDeclType	int		1114234	0					
ANR	1114333	Identifier	done		1114234	1					
ANR	1114334	AssignmentExpression	"done = cb ( core , from , buf + ret , len - ret )"		1114234	2		=			
ANR	1114335	Identifier	done		1114234	0					
ANR	1114336	CallExpression	"cb ( core , from , buf + ret , len - ret )"		1114234	1					
ANR	1114337	Callee	cb		1114234	0					
ANR	1114338	Identifier	cb		1114234	0					
ANR	1114339	ArgumentList	core		1114234	1					
ANR	1114340	Argument	core		1114234	0					
ANR	1114341	Identifier	core		1114234	0					
ANR	1114342	Argument	from		1114234	1					
ANR	1114343	Identifier	from		1114234	0					
ANR	1114344	Argument	buf + ret		1114234	2					
ANR	1114345	AdditiveExpression	buf + ret		1114234	0		+			
ANR	1114346	Identifier	buf		1114234	0					
ANR	1114347	Identifier	ret		1114234	1					
ANR	1114348	Argument	len - ret		1114234	3					
ANR	1114349	AdditiveExpression	len - ret		1114234	0		-			
ANR	1114350	Identifier	len		1114234	0					
ANR	1114351	Identifier	ret		1114234	1					
ANR	1114352	IfStatement	if ( done < 1 )		1114234	1					
ANR	1114353	Condition	done < 1	3514:8:107592:107599	1114234	0	True				
ANR	1114354	RelationalExpression	done < 1		1114234	0		<			
ANR	1114355	Identifier	done		1114234	0					
ANR	1114356	PrimaryExpression	1		1114234	1					
ANR	1114357	CompoundStatement		16:18:389:389	1114234	1					
ANR	1114358	ExpressionStatement	free ( buf )	3515:5:107627:107637	1114234	0	True				
ANR	1114359	CallExpression	free ( buf )		1114234	0					
ANR	1114360	Callee	free		1114234	0					
ANR	1114361	Identifier	free		1114234	0					
ANR	1114362	ArgumentList	buf		1114234	1					
ANR	1114363	Argument	buf		1114234	0					
ANR	1114364	Identifier	buf		1114234	0					
ANR	1114365	ReturnStatement	return false ;	3516:5:107644:107656	1114234	1	True				
ANR	1114366	Identifier	false		1114234	0					
ANR	1114367	ExpressionStatement	ret += done	3518:4:107668:107679	1114234	2	True				
ANR	1114368	AssignmentExpression	ret += done		1114234	0		+=			
ANR	1114369	Identifier	ret		1114234	0					
ANR	1114370	Identifier	done		1114234	1					
ANR	1114371	ExpressionStatement	from += len	3520:3:107689:107700	1114234	4	True				
ANR	1114372	AssignmentExpression	from += len		1114234	0		+=			
ANR	1114373	Identifier	from		1114234	0					
ANR	1114374	Identifier	len		1114234	1					
ANR	1114375	ExpressionStatement	free ( buf )	3522:2:107708:107718	1114234	1	True				
ANR	1114376	CallExpression	free ( buf )		1114234	0					
ANR	1114377	Callee	free		1114234	0					
ANR	1114378	Identifier	free		1114234	0					
ANR	1114379	ArgumentList	buf		1114234	1					
ANR	1114380	Argument	buf		1114234	0					
ANR	1114381	Identifier	buf		1114234	0					
ANR	1114382	ElseStatement	else		1114234	0					
ANR	1114383	CompoundStatement		25:8:515:515	1114234	0					
ANR	1114384	ExpressionStatement	"eprintf ( ""Cannot allocate blocksize\\n"" )"	3524:2:107732:107771	1114234	0	True				
ANR	1114385	CallExpression	"eprintf ( ""Cannot allocate blocksize\\n"" )"		1114234	0					
ANR	1114386	Callee	eprintf		1114234	0					
ANR	1114387	Identifier	eprintf		1114234	0					
ANR	1114388	ArgumentList	"""Cannot allocate blocksize\\n"""		1114234	1					
ANR	1114389	Argument	"""Cannot allocate blocksize\\n"""		1114234	0					
ANR	1114390	PrimaryExpression	"""Cannot allocate blocksize\\n"""		1114234	0					
ANR	1114391	ReturnStatement	return true ;	3526:1:107777:107788	1114234	3	True				
ANR	1114392	Identifier	true		1114234	0					
ANR	1114393	ReturnType	R_API int		1114234	1					
ANR	1114394	Identifier	r_core_search_cb		1114234	2					
ANR	1114395	ParameterList	"RCore * core , ut64 from , ut64 to , RCoreSearchCallback cb"		1114234	3					
ANR	1114396	Parameter	RCore * core	3499:27:107155:107165	1114234	0	True				
ANR	1114397	ParameterType	RCore *		1114234	0					
ANR	1114398	Identifier	core		1114234	1					
ANR	1114399	Parameter	ut64 from	3499:40:107168:107176	1114234	1	True				
ANR	1114400	ParameterType	ut64		1114234	0					
ANR	1114401	Identifier	from		1114234	1					
ANR	1114402	Parameter	ut64 to	3499:51:107179:107185	1114234	2	True				
ANR	1114403	ParameterType	ut64		1114234	0					
ANR	1114404	Identifier	to		1114234	1					
ANR	1114405	Parameter	RCoreSearchCallback cb	3499:60:107188:107209	1114234	3	True				
ANR	1114406	ParameterType	RCoreSearchCallback		1114234	0					
ANR	1114407	Identifier	cb		1114234	1					
ANR	1114408	CFGEntryNode	ENTRY		1114234		True				
ANR	1114409	CFGExitNode	EXIT		1114234		True				
ANR	1114410	Symbol	core -> blocksize		1114234						
ANR	1114411	Symbol	ret		1114234						
ANR	1114412	Symbol	malloc		1114234						
ANR	1114413	Symbol	* core		1114234						
ANR	1114414	Symbol	delta		1114234						
ANR	1114415	Symbol	false		1114234						
ANR	1114416	Symbol	r_io_read_at		1114234						
ANR	1114417	Symbol	done		1114234						
ANR	1114418	Symbol	core		1114234						
ANR	1114419	Symbol	buf		1114234						
ANR	1114420	Symbol	len		1114234						
ANR	1114421	Symbol	core -> io		1114234						
ANR	1114422	Symbol	true		1114234						
ANR	1114423	Symbol	from		1114234						
ANR	1114424	Symbol	to		1114234						
ANR	1114425	Symbol	cb		1114234						
ANR	1114426	Function	r_core_editor	3529:0:107793:108851							
ANR	1114427	FunctionDef	"r_core_editor (const RCore * core , const char * file , const char * str)"		1114426	0					
ANR	1114428	CompoundStatement		3529:81:107874:108851	1114426	0					
ANR	1114429	IdentifierDeclStatement	const bool interactive = r_cons_is_interactive ( ) ;	3530:1:107877:107926	1114426	0	True				
ANR	1114430	IdentifierDecl	interactive = r_cons_is_interactive ( )		1114426	0					
ANR	1114431	IdentifierDeclType	const bool		1114426	0					
ANR	1114432	Identifier	interactive		1114426	1					
ANR	1114433	AssignmentExpression	interactive = r_cons_is_interactive ( )		1114426	2		=			
ANR	1114434	Identifier	interactive		1114426	0					
ANR	1114435	CallExpression	r_cons_is_interactive ( )		1114426	1					
ANR	1114436	Callee	r_cons_is_interactive		1114426	0					
ANR	1114437	Identifier	r_cons_is_interactive		1114426	0					
ANR	1114438	ArgumentList			1114426	1					
ANR	1114439	IdentifierDeclStatement	"const char * editor = r_config_get ( core -> config , ""cfg.editor"" ) ;"	3531:1:107929:107991	1114426	1	True				
ANR	1114440	IdentifierDecl	"* editor = r_config_get ( core -> config , ""cfg.editor"" )"		1114426	0					
ANR	1114441	IdentifierDeclType	const char *		1114426	0					
ANR	1114442	Identifier	editor		1114426	1					
ANR	1114443	AssignmentExpression	"* editor = r_config_get ( core -> config , ""cfg.editor"" )"		1114426	2		=			
ANR	1114444	Identifier	editor		1114426	0					
ANR	1114445	CallExpression	"r_config_get ( core -> config , ""cfg.editor"" )"		1114426	1					
ANR	1114446	Callee	r_config_get		1114426	0					
ANR	1114447	Identifier	r_config_get		1114426	0					
ANR	1114448	ArgumentList	core -> config		1114426	1					
ANR	1114449	Argument	core -> config		1114426	0					
ANR	1114450	PtrMemberAccess	core -> config		1114426	0					
ANR	1114451	Identifier	core		1114426	0					
ANR	1114452	Identifier	config		1114426	1					
ANR	1114453	Argument	"""cfg.editor"""		1114426	1					
ANR	1114454	PrimaryExpression	"""cfg.editor"""		1114426	0					
ANR	1114455	IdentifierDeclStatement	"char * name = NULL , * ret = NULL ;"	3532:1:107994:108024	1114426	2	True				
ANR	1114456	IdentifierDecl	* name = NULL		1114426	0					
ANR	1114457	IdentifierDeclType	char *		1114426	0					
ANR	1114458	Identifier	name		1114426	1					
ANR	1114459	AssignmentExpression	* name = NULL		1114426	2		=			
ANR	1114460	Identifier	NULL		1114426	0					
ANR	1114461	Identifier	NULL		1114426	1					
ANR	1114462	IdentifierDecl	* ret = NULL		1114426	1					
ANR	1114463	IdentifierDeclType	char *		1114426	0					
ANR	1114464	Identifier	ret		1114426	1					
ANR	1114465	AssignmentExpression	* ret = NULL		1114426	2		=			
ANR	1114466	Identifier	NULL		1114426	0					
ANR	1114467	Identifier	NULL		1114426	1					
ANR	1114468	IdentifierDeclStatement	"int len , fd ;"	3533:1:108027:108038	1114426	3	True				
ANR	1114469	IdentifierDecl	len		1114426	0					
ANR	1114470	IdentifierDeclType	int		1114426	0					
ANR	1114471	Identifier	len		1114426	1					
ANR	1114472	IdentifierDecl	fd		1114426	1					
ANR	1114473	IdentifierDeclType	int		1114426	0					
ANR	1114474	Identifier	fd		1114426	1					
ANR	1114475	IfStatement	if ( ! interactive || ! editor || ! * editor )		1114426	4					
ANR	1114476	Condition	! interactive || ! editor || ! * editor	3535:5:108046:108080	1114426	0	True				
ANR	1114477	OrExpression	! interactive || ! editor || ! * editor		1114426	0		||			
ANR	1114478	UnaryOperationExpression	! interactive		1114426	0					
ANR	1114479	UnaryOperator	!		1114426	0					
ANR	1114480	Identifier	interactive		1114426	1					
ANR	1114481	OrExpression	! editor || ! * editor		1114426	1		||			
ANR	1114482	UnaryOperationExpression	! editor		1114426	0					
ANR	1114483	UnaryOperator	!		1114426	0					
ANR	1114484	Identifier	editor		1114426	1					
ANR	1114485	UnaryOperationExpression	! * editor		1114426	1					
ANR	1114486	UnaryOperator	!		1114426	0					
ANR	1114487	UnaryOperationExpression	* editor		1114426	1					
ANR	1114488	UnaryOperator	*		1114426	0					
ANR	1114489	Identifier	editor		1114426	1					
ANR	1114490	CompoundStatement		7:42:208:208	1114426	1					
ANR	1114491	ReturnStatement	return NULL ;	3536:2:108087:108098	1114426	0	True				
ANR	1114492	Identifier	NULL		1114426	0					
ANR	1114493	IfStatement	if ( file && * file != '*' )		1114426	5					
ANR	1114494	Condition	file && * file != '*'	3538:5:108108:108127	1114426	0	True				
ANR	1114495	AndExpression	file && * file != '*'		1114426	0		&&			
ANR	1114496	Identifier	file		1114426	0					
ANR	1114497	EqualityExpression	* file != '*'		1114426	1		!=			
ANR	1114498	UnaryOperationExpression	* file		1114426	0					
ANR	1114499	UnaryOperator	*		1114426	0					
ANR	1114500	Identifier	file		1114426	1					
ANR	1114501	PrimaryExpression	'*'		1114426	1					
ANR	1114502	CompoundStatement		10:27:255:255	1114426	1					
ANR	1114503	ExpressionStatement	name = strdup ( file )	3539:2:108134:108154	1114426	0	True				
ANR	1114504	AssignmentExpression	name = strdup ( file )		1114426	0		=			
ANR	1114505	Identifier	name		1114426	0					
ANR	1114506	CallExpression	strdup ( file )		1114426	1					
ANR	1114507	Callee	strdup		1114426	0					
ANR	1114508	Identifier	strdup		1114426	0					
ANR	1114509	ArgumentList	file		1114426	1					
ANR	1114510	Argument	file		1114426	0					
ANR	1114511	Identifier	file		1114426	0					
ANR	1114512	ExpressionStatement	"fd = r_sandbox_open ( file , O_RDWR , 0644 )"	3540:2:108158:108198	1114426	1	True				
ANR	1114513	AssignmentExpression	"fd = r_sandbox_open ( file , O_RDWR , 0644 )"		1114426	0		=			
ANR	1114514	Identifier	fd		1114426	0					
ANR	1114515	CallExpression	"r_sandbox_open ( file , O_RDWR , 0644 )"		1114426	1					
ANR	1114516	Callee	r_sandbox_open		1114426	0					
ANR	1114517	Identifier	r_sandbox_open		1114426	0					
ANR	1114518	ArgumentList	file		1114426	1					
ANR	1114519	Argument	file		1114426	0					
ANR	1114520	Identifier	file		1114426	0					
ANR	1114521	Argument	O_RDWR		1114426	1					
ANR	1114522	Identifier	O_RDWR		1114426	0					
ANR	1114523	Argument	0644		1114426	2					
ANR	1114524	PrimaryExpression	0644		1114426	0					
ANR	1114525	ElseStatement	else		1114426	0					
ANR	1114526	CompoundStatement		13:8:333:333	1114426	0					
ANR	1114527	ExpressionStatement	"fd = r_file_mkstemp ( file , & name )"	3542:2:108212:108245	1114426	0	True				
ANR	1114528	AssignmentExpression	"fd = r_file_mkstemp ( file , & name )"		1114426	0		=			
ANR	1114529	Identifier	fd		1114426	0					
ANR	1114530	CallExpression	"r_file_mkstemp ( file , & name )"		1114426	1					
ANR	1114531	Callee	r_file_mkstemp		1114426	0					
ANR	1114532	Identifier	r_file_mkstemp		1114426	0					
ANR	1114533	ArgumentList	file		1114426	1					
ANR	1114534	Argument	file		1114426	0					
ANR	1114535	Identifier	file		1114426	0					
ANR	1114536	Argument	& name		1114426	1					
ANR	1114537	UnaryOperationExpression	& name		1114426	0					
ANR	1114538	UnaryOperator	&		1114426	0					
ANR	1114539	Identifier	name		1114426	1					
ANR	1114540	IfStatement	if ( fd == - 1 )		1114426	6					
ANR	1114541	Condition	fd == - 1	3544:5:108255:108262	1114426	0	True				
ANR	1114542	EqualityExpression	fd == - 1		1114426	0		==			
ANR	1114543	Identifier	fd		1114426	0					
ANR	1114544	UnaryOperationExpression	- 1		1114426	1					
ANR	1114545	UnaryOperator	-		1114426	0					
ANR	1114546	PrimaryExpression	1		1114426	1					
ANR	1114547	CompoundStatement		16:15:390:390	1114426	1					
ANR	1114548	ExpressionStatement	free ( name )	3545:2:108269:108280	1114426	0	True				
ANR	1114549	CallExpression	free ( name )		1114426	0					
ANR	1114550	Callee	free		1114426	0					
ANR	1114551	Identifier	free		1114426	0					
ANR	1114552	ArgumentList	name		1114426	1					
ANR	1114553	Argument	name		1114426	0					
ANR	1114554	Identifier	name		1114426	0					
ANR	1114555	ReturnStatement	return NULL ;	3546:2:108284:108295	1114426	1	True				
ANR	1114556	Identifier	NULL		1114426	0					
ANR	1114557	IfStatement	if ( str )		1114426	7					
ANR	1114558	Condition	str	3548:5:108305:108307	1114426	0	True				
ANR	1114559	Identifier	str		1114426	0					
ANR	1114560	CompoundStatement		20:10:435:435	1114426	1					
ANR	1114561	ExpressionStatement	"write ( fd , str , strlen ( str ) )"	3549:2:108314:108343	1114426	0	True				
ANR	1114562	CallExpression	"write ( fd , str , strlen ( str ) )"		1114426	0					
ANR	1114563	Callee	write		1114426	0					
ANR	1114564	Identifier	write		1114426	0					
ANR	1114565	ArgumentList	fd		1114426	1					
ANR	1114566	Argument	fd		1114426	0					
ANR	1114567	Identifier	fd		1114426	0					
ANR	1114568	Argument	str		1114426	1					
ANR	1114569	Identifier	str		1114426	0					
ANR	1114570	Argument	strlen ( str )		1114426	2					
ANR	1114571	CallExpression	strlen ( str )		1114426	0					
ANR	1114572	Callee	strlen		1114426	0					
ANR	1114573	Identifier	strlen		1114426	0					
ANR	1114574	ArgumentList	str		1114426	1					
ANR	1114575	Argument	str		1114426	0					
ANR	1114576	Identifier	str		1114426	0					
ANR	1114577	ExpressionStatement	close ( fd )	3551:1:108349:108359	1114426	8	True				
ANR	1114578	CallExpression	close ( fd )		1114426	0					
ANR	1114579	Callee	close		1114426	0					
ANR	1114580	Identifier	close		1114426	0					
ANR	1114581	ArgumentList	fd		1114426	1					
ANR	1114582	Argument	fd		1114426	0					
ANR	1114583	Identifier	fd		1114426	0					
ANR	1114584	IfStatement	"if ( name && ( ! editor || ! * editor || ! strcmp ( editor , ""-"" ) ) )"		1114426	9					
ANR	1114585	Condition	"name && ( ! editor || ! * editor || ! strcmp ( editor , ""-"" ) )"	3553:5:108367:108420	1114426	0	True				
ANR	1114586	AndExpression	"name && ( ! editor || ! * editor || ! strcmp ( editor , ""-"" ) )"		1114426	0		&&			
ANR	1114587	Identifier	name		1114426	0					
ANR	1114588	OrExpression	"! editor || ! * editor || ! strcmp ( editor , ""-"" )"		1114426	1		||			
ANR	1114589	UnaryOperationExpression	! editor		1114426	0					
ANR	1114590	UnaryOperator	!		1114426	0					
ANR	1114591	Identifier	editor		1114426	1					
ANR	1114592	OrExpression	"! * editor || ! strcmp ( editor , ""-"" )"		1114426	1		||			
ANR	1114593	UnaryOperationExpression	! * editor		1114426	0					
ANR	1114594	UnaryOperator	!		1114426	0					
ANR	1114595	UnaryOperationExpression	* editor		1114426	1					
ANR	1114596	UnaryOperator	*		1114426	0					
ANR	1114597	Identifier	editor		1114426	1					
ANR	1114598	UnaryOperationExpression	"! strcmp ( editor , ""-"" )"		1114426	1					
ANR	1114599	UnaryOperator	!		1114426	0					
ANR	1114600	CallExpression	"strcmp ( editor , ""-"" )"		1114426	1					
ANR	1114601	Callee	strcmp		1114426	0					
ANR	1114602	Identifier	strcmp		1114426	0					
ANR	1114603	ArgumentList	editor		1114426	1					
ANR	1114604	Argument	editor		1114426	0					
ANR	1114605	Identifier	editor		1114426	0					
ANR	1114606	Argument	"""-"""		1114426	1					
ANR	1114607	PrimaryExpression	"""-"""		1114426	0					
ANR	1114608	CompoundStatement		27:2:589:616	1114426	1					
ANR	1114609	IdentifierDeclStatement	RCons * cons = r_cons_singleton ( ) ;	3554:2:108427:108460	1114426	0	True				
ANR	1114610	IdentifierDecl	* cons = r_cons_singleton ( )		1114426	0					
ANR	1114611	IdentifierDeclType	RCons *		1114426	0					
ANR	1114612	Identifier	cons		1114426	1					
ANR	1114613	AssignmentExpression	* cons = r_cons_singleton ( )		1114426	2		=			
ANR	1114614	Identifier	cons		1114426	0					
ANR	1114615	CallExpression	r_cons_singleton ( )		1114426	1					
ANR	1114616	Callee	r_cons_singleton		1114426	0					
ANR	1114617	Identifier	r_cons_singleton		1114426	0					
ANR	1114618	ArgumentList			1114426	1					
ANR	1114619	IdentifierDeclStatement	void * tmp = cons -> cb_editor ;	3555:2:108464:108491	1114426	1	True				
ANR	1114620	IdentifierDecl	* tmp = cons -> cb_editor		1114426	0					
ANR	1114621	IdentifierDeclType	void *		1114426	0					
ANR	1114622	Identifier	tmp		1114426	1					
ANR	1114623	AssignmentExpression	* tmp = cons -> cb_editor		1114426	2		=			
ANR	1114624	Identifier	tmp		1114426	0					
ANR	1114625	PtrMemberAccess	cons -> cb_editor		1114426	1					
ANR	1114626	Identifier	cons		1114426	0					
ANR	1114627	Identifier	cb_editor		1114426	1					
ANR	1114628	ExpressionStatement	cons -> cb_editor = NULL	3556:2:108495:108517	1114426	2	True				
ANR	1114629	AssignmentExpression	cons -> cb_editor = NULL		1114426	0		=			
ANR	1114630	PtrMemberAccess	cons -> cb_editor		1114426	0					
ANR	1114631	Identifier	cons		1114426	0					
ANR	1114632	Identifier	cb_editor		1114426	1					
ANR	1114633	Identifier	NULL		1114426	1					
ANR	1114634	ExpressionStatement	"r_cons_editor ( name , NULL )"	3557:2:108521:108547	1114426	3	True				
ANR	1114635	CallExpression	"r_cons_editor ( name , NULL )"		1114426	0					
ANR	1114636	Callee	r_cons_editor		1114426	0					
ANR	1114637	Identifier	r_cons_editor		1114426	0					
ANR	1114638	ArgumentList	name		1114426	1					
ANR	1114639	Argument	name		1114426	0					
ANR	1114640	Identifier	name		1114426	0					
ANR	1114641	Argument	NULL		1114426	1					
ANR	1114642	Identifier	NULL		1114426	0					
ANR	1114643	ExpressionStatement	cons -> cb_editor = tmp	3558:2:108551:108572	1114426	4	True				
ANR	1114644	AssignmentExpression	cons -> cb_editor = tmp		1114426	0		=			
ANR	1114645	PtrMemberAccess	cons -> cb_editor		1114426	0					
ANR	1114646	Identifier	cons		1114426	0					
ANR	1114647	Identifier	cb_editor		1114426	1					
ANR	1114648	Identifier	tmp		1114426	1					
ANR	1114649	ElseStatement	else		1114426	0					
ANR	1114650	CompoundStatement		31:8:707:707	1114426	0					
ANR	1114651	IfStatement	if ( editor && name )		1114426	0					
ANR	1114652	Condition	editor && name	3560:6:108590:108603	1114426	0	True				
ANR	1114653	AndExpression	editor && name		1114426	0		&&			
ANR	1114654	Identifier	editor		1114426	0					
ANR	1114655	Identifier	name		1114426	1					
ANR	1114656	CompoundStatement		32:22:731:731	1114426	1					
ANR	1114657	ExpressionStatement	"r_sys_cmdf ( ""%s '%s'"" , editor , name )"	3561:3:108611:108647	1114426	0	True				
ANR	1114658	CallExpression	"r_sys_cmdf ( ""%s '%s'"" , editor , name )"		1114426	0					
ANR	1114659	Callee	r_sys_cmdf		1114426	0					
ANR	1114660	Identifier	r_sys_cmdf		1114426	0					
ANR	1114661	ArgumentList	"""%s '%s'"""		1114426	1					
ANR	1114662	Argument	"""%s '%s'"""		1114426	0					
ANR	1114663	PrimaryExpression	"""%s '%s'"""		1114426	0					
ANR	1114664	Argument	editor		1114426	1					
ANR	1114665	Identifier	editor		1114426	0					
ANR	1114666	Argument	name		1114426	2					
ANR	1114667	Identifier	name		1114426	0					
ANR	1114668	ExpressionStatement	"ret = name ? r_file_slurp ( name , & len ) : 0"	3564:1:108657:108697	1114426	10	True				
ANR	1114669	AssignmentExpression	"ret = name ? r_file_slurp ( name , & len ) : 0"		1114426	0		=			
ANR	1114670	Identifier	ret		1114426	0					
ANR	1114671	ConditionalExpression	"name ? r_file_slurp ( name , & len ) : 0"		1114426	1					
ANR	1114672	Condition	name		1114426	0					
ANR	1114673	Identifier	name		1114426	0					
ANR	1114674	CallExpression	"r_file_slurp ( name , & len )"		1114426	1					
ANR	1114675	Callee	r_file_slurp		1114426	0					
ANR	1114676	Identifier	r_file_slurp		1114426	0					
ANR	1114677	ArgumentList	name		1114426	1					
ANR	1114678	Argument	name		1114426	0					
ANR	1114679	Identifier	name		1114426	0					
ANR	1114680	Argument	& len		1114426	1					
ANR	1114681	UnaryOperationExpression	& len		1114426	0					
ANR	1114682	UnaryOperator	&		1114426	0					
ANR	1114683	Identifier	len		1114426	1					
ANR	1114684	PrimaryExpression	0		1114426	2					
ANR	1114685	IfStatement	if ( ret )		1114426	11					
ANR	1114686	Condition	ret	3565:5:108704:108706	1114426	0	True				
ANR	1114687	Identifier	ret		1114426	0					
ANR	1114688	CompoundStatement		37:10:834:834	1114426	1					
ANR	1114689	IfStatement	if ( len && ret [ len - 1 ] == '\\n' )		1114426	0					
ANR	1114690	Condition	len && ret [ len - 1 ] == '\\n'	3566:6:108717:108743	1114426	0	True				
ANR	1114691	AndExpression	len && ret [ len - 1 ] == '\\n'		1114426	0		&&			
ANR	1114692	Identifier	len		1114426	0					
ANR	1114693	EqualityExpression	ret [ len - 1 ] == '\\n'		1114426	1		==			
ANR	1114694	ArrayIndexing	ret [ len - 1 ]		1114426	0					
ANR	1114695	Identifier	ret		1114426	0					
ANR	1114696	AdditiveExpression	len - 1		1114426	1		-			
ANR	1114697	Identifier	len		1114426	0					
ANR	1114698	PrimaryExpression	1		1114426	1					
ANR	1114699	PrimaryExpression	'\\n'		1114426	1					
ANR	1114700	CompoundStatement		38:35:871:871	1114426	1					
ANR	1114701	ExpressionStatement	ret [ len - 1 ] = 0	3567:3:108751:108767	1114426	0	True				
ANR	1114702	AssignmentExpression	ret [ len - 1 ] = 0		1114426	0		=			
ANR	1114703	ArrayIndexing	ret [ len - 1 ]		1114426	0					
ANR	1114704	Identifier	ret		1114426	0					
ANR	1114705	AdditiveExpression	len - 1		1114426	1		-			
ANR	1114706	Identifier	len		1114426	0					
ANR	1114707	PrimaryExpression	1		1114426	1					
ANR	1114708	PrimaryExpression	0		1114426	1					
ANR	1114709	IfStatement	if ( ! file )		1114426	1					
ANR	1114710	Condition	! file	3569:6:108787:108791	1114426	0	True				
ANR	1114711	UnaryOperationExpression	! file		1114426	0					
ANR	1114712	UnaryOperator	!		1114426	0					
ANR	1114713	Identifier	file		1114426	1					
ANR	1114714	CompoundStatement		41:13:919:919	1114426	1					
ANR	1114715	ExpressionStatement	r_file_rm ( name )	3570:3:108799:108815	1114426	0	True				
ANR	1114716	CallExpression	r_file_rm ( name )		1114426	0					
ANR	1114717	Callee	r_file_rm		1114426	0					
ANR	1114718	Identifier	r_file_rm		1114426	0					
ANR	1114719	ArgumentList	name		1114426	1					
ANR	1114720	Argument	name		1114426	0					
ANR	1114721	Identifier	name		1114426	0					
ANR	1114722	ExpressionStatement	free ( name )	3573:1:108825:108836	1114426	12	True				
ANR	1114723	CallExpression	free ( name )		1114426	0					
ANR	1114724	Callee	free		1114426	0					
ANR	1114725	Identifier	free		1114426	0					
ANR	1114726	ArgumentList	name		1114426	1					
ANR	1114727	Argument	name		1114426	0					
ANR	1114728	Identifier	name		1114426	0					
ANR	1114729	ReturnStatement	return ret ;	3574:1:108839:108849	1114426	13	True				
ANR	1114730	Identifier	ret		1114426	0					
ANR	1114731	ReturnType	R_API char *		1114426	1					
ANR	1114732	Identifier	r_core_editor		1114426	2					
ANR	1114733	ParameterList	"const RCore * core , const char * file , const char * str"		1114426	3					
ANR	1114734	Parameter	const RCore * core	3529:27:107820:107836	1114426	0	True				
ANR	1114735	ParameterType	const RCore *		1114426	0					
ANR	1114736	Identifier	core		1114426	1					
ANR	1114737	Parameter	const char * file	3529:46:107839:107854	1114426	1	True				
ANR	1114738	ParameterType	const char *		1114426	0					
ANR	1114739	Identifier	file		1114426	1					
ANR	1114740	Parameter	const char * str	3529:64:107857:107871	1114426	2	True				
ANR	1114741	ParameterType	const char *		1114426	0					
ANR	1114742	Identifier	str		1114426	1					
ANR	1114743	CFGEntryNode	ENTRY		1114426		True				
ANR	1114744	CFGExitNode	EXIT		1114426		True				
ANR	1114745	Symbol	cons -> cb_editor		1114426						
ANR	1114746	Symbol	interactive		1114426						
ANR	1114747	Symbol	r_config_get		1114426						
ANR	1114748	Symbol	* core		1114426						
ANR	1114749	Symbol	& name		1114426						
ANR	1114750	Symbol	* ret		1114426						
ANR	1114751	Symbol	strlen		1114426						
ANR	1114752	Symbol	O_RDWR		1114426						
ANR	1114753	Symbol	file		1114426						
ANR	1114754	Symbol	len		1114426						
ANR	1114755	Symbol	tmp		1114426						
ANR	1114756	Symbol	r_cons_singleton		1114426						
ANR	1114757	Symbol	cons		1114426						
ANR	1114758	Symbol	core -> config		1114426						
ANR	1114759	Symbol	ret		1114426						
ANR	1114760	Symbol	strcmp		1114426						
ANR	1114761	Symbol	editor		1114426						
ANR	1114762	Symbol	r_cons_is_interactive		1114426						
ANR	1114763	Symbol	r_file_slurp		1114426						
ANR	1114764	Symbol	NULL		1114426						
ANR	1114765	Symbol	* editor		1114426						
ANR	1114766	Symbol	* file		1114426						
ANR	1114767	Symbol	str		1114426						
ANR	1114768	Symbol	core		1114426						
ANR	1114769	Symbol	r_sandbox_open		1114426						
ANR	1114770	Symbol	name		1114426						
ANR	1114771	Symbol	* cons		1114426						
ANR	1114772	Symbol	strdup		1114426						
ANR	1114773	Symbol	& len		1114426						
ANR	1114774	Symbol	fd		1114426						
ANR	1114775	Symbol	r_file_mkstemp		1114426						
ANR	1114776	Symbol	* len		1114426						
ANR	1114777	Function	r_core_get_cons	3578:0:108873:108938							
ANR	1114778	FunctionDef	r_core_get_cons (RCore * core)		1114777	0					
ANR	1114779	CompoundStatement		3578:43:108916:108938	1114777	0					
ANR	1114780	ReturnStatement	return core -> cons ;	3579:1:108919:108936	1114777	0	True				
ANR	1114781	PtrMemberAccess	core -> cons		1114777	0					
ANR	1114782	Identifier	core		1114777	0					
ANR	1114783	Identifier	cons		1114777	1					
ANR	1114784	ReturnType	R_API RCons *		1114777	1					
ANR	1114785	Identifier	r_core_get_cons		1114777	2					
ANR	1114786	ParameterList	RCore * core		1114777	3					
ANR	1114787	Parameter	RCore * core	3578:30:108903:108913	1114777	0	True				
ANR	1114788	ParameterType	RCore *		1114777	0					
ANR	1114789	Identifier	core		1114777	1					
ANR	1114790	CFGEntryNode	ENTRY		1114777		True				
ANR	1114791	CFGExitNode	EXIT		1114777		True				
ANR	1114792	Symbol	core		1114777						
ANR	1114793	Symbol	core -> cons		1114777						
ANR	1114794	Symbol	* core		1114777						
ANR	1114795	Function	r_core_get_config	3582:0:108941:109012							
ANR	1114796	FunctionDef	r_core_get_config (RCore * core)		1114795	0					
ANR	1114797	CompoundStatement		3582:47:108988:109012	1114795	0					
ANR	1114798	ReturnStatement	return core -> config ;	3583:1:108991:109010	1114795	0	True				
ANR	1114799	PtrMemberAccess	core -> config		1114795	0					
ANR	1114800	Identifier	core		1114795	0					
ANR	1114801	Identifier	config		1114795	1					
ANR	1114802	ReturnType	R_API RConfig *		1114795	1					
ANR	1114803	Identifier	r_core_get_config		1114795	2					
ANR	1114804	ParameterList	RCore * core		1114795	3					
ANR	1114805	Parameter	RCore * core	3582:34:108975:108985	1114795	0	True				
ANR	1114806	ParameterType	RCore *		1114795	0					
ANR	1114807	Identifier	core		1114795	1					
ANR	1114808	CFGEntryNode	ENTRY		1114795		True				
ANR	1114809	CFGExitNode	EXIT		1114795		True				
ANR	1114810	Symbol	core -> config		1114795						
ANR	1114811	Symbol	core		1114795						
ANR	1114812	Symbol	* core		1114795						
ANR	1114813	Function	r_core_get_bin	3586:0:109015:109077							
ANR	1114814	FunctionDef	r_core_get_bin (RCore * core)		1114813	0					
ANR	1114815	CompoundStatement		3586:41:109056:109077	1114813	0					
ANR	1114816	ReturnStatement	return core -> bin ;	3587:1:109059:109075	1114813	0	True				
ANR	1114817	PtrMemberAccess	core -> bin		1114813	0					
ANR	1114818	Identifier	core		1114813	0					
ANR	1114819	Identifier	bin		1114813	1					
ANR	1114820	ReturnType	R_API RBin *		1114813	1					
ANR	1114821	Identifier	r_core_get_bin		1114813	2					
ANR	1114822	ParameterList	RCore * core		1114813	3					
ANR	1114823	Parameter	RCore * core	3586:28:109043:109053	1114813	0	True				
ANR	1114824	ParameterType	RCore *		1114813	0					
ANR	1114825	Identifier	core		1114813	1					
ANR	1114826	CFGEntryNode	ENTRY		1114813		True				
ANR	1114827	CFGExitNode	EXIT		1114813		True				
ANR	1114828	Symbol	core		1114813						
ANR	1114829	Symbol	* core		1114813						
ANR	1114830	Symbol	core -> bin		1114813						
ANR	1114831	Function	r_core_syscallf	3590:0:109080:109344							
ANR	1114832	FunctionDef	"r_core_syscallf (RCore * core , const char * name , const char * fmt)"		1114831	0					
ANR	1114833	CompoundStatement		3590:85:109165:109344	1114831	0					
ANR	1114834	IdentifierDeclStatement	char str [ 1024 ] ;	3591:1:109168:109182	1114831	0	True				
ANR	1114835	IdentifierDecl	str [ 1024 ]		1114831	0					
ANR	1114836	IdentifierDeclType	char [ 1024 ]		1114831	0					
ANR	1114837	Identifier	str		1114831	1					
ANR	1114838	PrimaryExpression	1024		1114831	2					
ANR	1114839	IdentifierDeclStatement	RBuffer * buf ;	3592:1:109185:109197	1114831	1	True				
ANR	1114840	IdentifierDecl	* buf		1114831	0					
ANR	1114841	IdentifierDeclType	RBuffer *		1114831	0					
ANR	1114842	Identifier	buf		1114831	1					
ANR	1114843	IdentifierDeclStatement	va_list ap ;	3593:1:109200:109210	1114831	2	True				
ANR	1114844	IdentifierDecl	ap		1114831	0					
ANR	1114845	IdentifierDeclType	va_list		1114831	0					
ANR	1114846	Identifier	ap		1114831	1					
ANR	1114847	ExpressionStatement	"va_start ( ap , fmt )"	3594:1:109213:109231	1114831	3	True				
ANR	1114848	CallExpression	"va_start ( ap , fmt )"		1114831	0					
ANR	1114849	Callee	va_start		1114831	0					
ANR	1114850	Identifier	va_start		1114831	0					
ANR	1114851	ArgumentList	ap		1114831	1					
ANR	1114852	Argument	ap		1114831	0					
ANR	1114853	Identifier	ap		1114831	0					
ANR	1114854	Argument	fmt		1114831	1					
ANR	1114855	Identifier	fmt		1114831	0					
ANR	1114856	ExpressionStatement	"vsnprintf ( str , sizeof ( str ) , fmt , ap )"	3596:1:109235:109273	1114831	4	True				
ANR	1114857	CallExpression	"vsnprintf ( str , sizeof ( str ) , fmt , ap )"		1114831	0					
ANR	1114858	Callee	vsnprintf		1114831	0					
ANR	1114859	Identifier	vsnprintf		1114831	0					
ANR	1114860	ArgumentList	str		1114831	1					
ANR	1114861	Argument	str		1114831	0					
ANR	1114862	Identifier	str		1114831	0					
ANR	1114863	Argument	sizeof ( str )		1114831	1					
ANR	1114864	SizeofExpression	sizeof ( str )		1114831	0					
ANR	1114865	Sizeof	sizeof		1114831	0					
ANR	1114866	SizeofOperand	str		1114831	1					
ANR	1114867	Argument	fmt		1114831	2					
ANR	1114868	Identifier	fmt		1114831	0					
ANR	1114869	Argument	ap		1114831	3					
ANR	1114870	Identifier	ap		1114831	0					
ANR	1114871	ExpressionStatement	"buf = r_core_syscall ( core , name , str )"	3597:1:109276:109314	1114831	5	True				
ANR	1114872	AssignmentExpression	"buf = r_core_syscall ( core , name , str )"		1114831	0		=			
ANR	1114873	Identifier	buf		1114831	0					
ANR	1114874	CallExpression	"r_core_syscall ( core , name , str )"		1114831	1					
ANR	1114875	Callee	r_core_syscall		1114831	0					
ANR	1114876	Identifier	r_core_syscall		1114831	0					
ANR	1114877	ArgumentList	core		1114831	1					
ANR	1114878	Argument	core		1114831	0					
ANR	1114879	Identifier	core		1114831	0					
ANR	1114880	Argument	name		1114831	1					
ANR	1114881	Identifier	name		1114831	0					
ANR	1114882	Argument	str		1114831	2					
ANR	1114883	Identifier	str		1114831	0					
ANR	1114884	ExpressionStatement	va_end ( ap )	3599:1:109318:109329	1114831	6	True				
ANR	1114885	CallExpression	va_end ( ap )		1114831	0					
ANR	1114886	Callee	va_end		1114831	0					
ANR	1114887	Identifier	va_end		1114831	0					
ANR	1114888	ArgumentList	ap		1114831	1					
ANR	1114889	Argument	ap		1114831	0					
ANR	1114890	Identifier	ap		1114831	0					
ANR	1114891	ReturnStatement	return buf ;	3600:1:109332:109342	1114831	7	True				
ANR	1114892	Identifier	buf		1114831	0					
ANR	1114893	ReturnType	R_API RBuffer *		1114831	1					
ANR	1114894	Identifier	r_core_syscallf		1114831	2					
ANR	1114895	ParameterList	"RCore * core , const char * name , const char * fmt"		1114831	3					
ANR	1114896	Parameter	RCore * core	3590:32:109112:109122	1114831	0	True				
ANR	1114897	ParameterType	RCore *		1114831	0					
ANR	1114898	Identifier	core		1114831	1					
ANR	1114899	Parameter	const char * name	3590:45:109125:109140	1114831	1	True				
ANR	1114900	ParameterType	const char *		1114831	0					
ANR	1114901	Identifier	name		1114831	1					
ANR	1114902	Parameter	const char * fmt	3590:63:109143:109157	1114831	2	True				
ANR	1114903	ParameterType	const char *		1114831	0					
ANR	1114904	Identifier	fmt		1114831	1					
ANR	1114905	CFGEntryNode	ENTRY		1114831		True				
ANR	1114906	CFGExitNode	EXIT		1114831		True				
ANR	1114907	Symbol	str		1114831						
ANR	1114908	Symbol	core		1114831						
ANR	1114909	Symbol	buf		1114831						
ANR	1114910	Symbol	r_core_syscall		1114831						
ANR	1114911	Symbol	name		1114831						
ANR	1114912	Symbol	fmt		1114831						
ANR	1114913	Symbol	ap		1114831						
ANR	1114914	Function	r_core_syscall	3603:0:109347:110581							
ANR	1114915	FunctionDef	"r_core_syscall (RCore * core , const char * name , const char * args)"		1114914	0					
ANR	1114916	CompoundStatement		3603:80:109427:110581	1114914	0					
ANR	1114917	IdentifierDeclStatement	RBuffer * b = NULL ;	3604:1:109430:109447	1114914	0	True				
ANR	1114918	IdentifierDecl	* b = NULL		1114914	0					
ANR	1114919	IdentifierDeclType	RBuffer *		1114914	0					
ANR	1114920	Identifier	b		1114914	1					
ANR	1114921	AssignmentExpression	* b = NULL		1114914	2		=			
ANR	1114922	Identifier	NULL		1114914	0					
ANR	1114923	Identifier	NULL		1114914	1					
ANR	1114924	IdentifierDeclStatement	char code [ 1024 ] ;	3605:1:109450:109465	1114914	1	True				
ANR	1114925	IdentifierDecl	code [ 1024 ]		1114914	0					
ANR	1114926	IdentifierDeclType	char [ 1024 ]		1114914	0					
ANR	1114927	Identifier	code		1114914	1					
ANR	1114928	PrimaryExpression	1024		1114914	2					
ANR	1114929	IdentifierDeclStatement	int num ;	3606:1:109468:109475	1114914	2	True				
ANR	1114930	IdentifierDecl	num		1114914	0					
ANR	1114931	IdentifierDeclType	int		1114914	0					
ANR	1114932	Identifier	num		1114914	1					
ANR	1114933	IfStatement	"if ( strcmp ( core -> anal -> cur -> arch , ""x86"" ) )"		1114914	3					
ANR	1114934	Condition	"strcmp ( core -> anal -> cur -> arch , ""x86"" )"	3609:5:109497:109533	1114914	0	True				
ANR	1114935	CallExpression	"strcmp ( core -> anal -> cur -> arch , ""x86"" )"		1114914	0					
ANR	1114936	Callee	strcmp		1114914	0					
ANR	1114937	Identifier	strcmp		1114914	0					
ANR	1114938	ArgumentList	core -> anal -> cur -> arch		1114914	1					
ANR	1114939	Argument	core -> anal -> cur -> arch		1114914	0					
ANR	1114940	PtrMemberAccess	core -> anal -> cur -> arch		1114914	0					
ANR	1114941	PtrMemberAccess	core -> anal -> cur		1114914	0					
ANR	1114942	PtrMemberAccess	core -> anal		1114914	0					
ANR	1114943	Identifier	core		1114914	0					
ANR	1114944	Identifier	anal		1114914	1					
ANR	1114945	Identifier	cur		1114914	1					
ANR	1114946	Identifier	arch		1114914	1					
ANR	1114947	Argument	"""x86"""		1114914	1					
ANR	1114948	PrimaryExpression	"""x86"""		1114914	0					
ANR	1114949	CompoundStatement		7:44:108:108	1114914	1					
ANR	1114950	ExpressionStatement	"eprintf ( ""architecture not yet supported!\\n"" )"	3610:2:109540:109585	1114914	0	True				
ANR	1114951	CallExpression	"eprintf ( ""architecture not yet supported!\\n"" )"		1114914	0					
ANR	1114952	Callee	eprintf		1114914	0					
ANR	1114953	Identifier	eprintf		1114914	0					
ANR	1114954	ArgumentList	"""architecture not yet supported!\\n"""		1114914	1					
ANR	1114955	Argument	"""architecture not yet supported!\\n"""		1114914	0					
ANR	1114956	PrimaryExpression	"""architecture not yet supported!\\n"""		1114914	0					
ANR	1114957	ReturnStatement	return 0 ;	3611:2:109589:109597	1114914	1	True				
ANR	1114958	PrimaryExpression	0		1114914	0					
ANR	1114959	ExpressionStatement	"num = r_syscall_get_num ( core -> anal -> syscall , name )"	3614:1:109604:109655	1114914	4	True				
ANR	1114960	AssignmentExpression	"num = r_syscall_get_num ( core -> anal -> syscall , name )"		1114914	0		=			
ANR	1114961	Identifier	num		1114914	0					
ANR	1114962	CallExpression	"r_syscall_get_num ( core -> anal -> syscall , name )"		1114914	1					
ANR	1114963	Callee	r_syscall_get_num		1114914	0					
ANR	1114964	Identifier	r_syscall_get_num		1114914	0					
ANR	1114965	ArgumentList	core -> anal -> syscall		1114914	1					
ANR	1114966	Argument	core -> anal -> syscall		1114914	0					
ANR	1114967	PtrMemberAccess	core -> anal -> syscall		1114914	0					
ANR	1114968	PtrMemberAccess	core -> anal		1114914	0					
ANR	1114969	Identifier	core		1114914	0					
ANR	1114970	Identifier	anal		1114914	1					
ANR	1114971	Identifier	syscall		1114914	1					
ANR	1114972	Argument	name		1114914	1					
ANR	1114973	Identifier	name		1114914	0					
ANR	1114974	SwitchStatement	switch ( core -> assembler -> bits )		1114914	5					
ANR	1114975	Condition	core -> assembler -> bits	3617:9:109681:109701	1114914	0	True				
ANR	1114976	PtrMemberAccess	core -> assembler -> bits		1114914	0					
ANR	1114977	PtrMemberAccess	core -> assembler		1114914	0					
ANR	1114978	Identifier	core		1114914	0					
ANR	1114979	Identifier	assembler		1114914	1					
ANR	1114980	Identifier	bits		1114914	1					
ANR	1114981	CompoundStatement		15:32:276:276	1114914	1					
ANR	1114982	Label	case 32 :	3618:1:109707:109714	1114914	0	True				
ANR	1114983	IfStatement	"if ( strcmp ( name , ""setup"" ) && ! num )"		1114914	1					
ANR	1114984	Condition	"strcmp ( name , ""setup"" ) && ! num"	3619:6:109722:109751	1114914	0	True				
ANR	1114985	AndExpression	"strcmp ( name , ""setup"" ) && ! num"		1114914	0		&&			
ANR	1114986	CallExpression	"strcmp ( name , ""setup"" )"		1114914	0					
ANR	1114987	Callee	strcmp		1114914	0					
ANR	1114988	Identifier	strcmp		1114914	0					
ANR	1114989	ArgumentList	name		1114914	1					
ANR	1114990	Argument	name		1114914	0					
ANR	1114991	Identifier	name		1114914	0					
ANR	1114992	Argument	"""setup"""		1114914	1					
ANR	1114993	PrimaryExpression	"""setup"""		1114914	0					
ANR	1114994	UnaryOperationExpression	! num		1114914	1					
ANR	1114995	UnaryOperator	!		1114914	0					
ANR	1114996	Identifier	num		1114914	1					
ANR	1114997	CompoundStatement		17:39:327:327	1114914	1					
ANR	1114998	ExpressionStatement	"eprintf ( ""syscall not found!\\n"" )"	3620:3:109760:109792	1114914	0	True				
ANR	1114999	CallExpression	"eprintf ( ""syscall not found!\\n"" )"		1114914	0					
ANR	1115000	Callee	eprintf		1114914	0					
ANR	1115001	Identifier	eprintf		1114914	0					
ANR	1115002	ArgumentList	"""syscall not found!\\n"""		1114914	1					
ANR	1115003	Argument	"""syscall not found!\\n"""		1114914	0					
ANR	1115004	PrimaryExpression	"""syscall not found!\\n"""		1114914	0					
ANR	1115005	ReturnStatement	return 0 ;	3621:3:109797:109805	1114914	1	True				
ANR	1115006	PrimaryExpression	0		1114914	0					
ANR	1115007	BreakStatement	break ;	3623:2:109813:109818	1114914	2	True				
ANR	1115008	Label	case 64 :	3624:1:109821:109828	1114914	3	True				
ANR	1115009	IfStatement	"if ( strcmp ( name , ""read"" ) && ! num )"		1114914	4					
ANR	1115010	Condition	"strcmp ( name , ""read"" ) && ! num"	3625:6:109836:109864	1114914	0	True				
ANR	1115011	AndExpression	"strcmp ( name , ""read"" ) && ! num"		1114914	0		&&			
ANR	1115012	CallExpression	"strcmp ( name , ""read"" )"		1114914	0					
ANR	1115013	Callee	strcmp		1114914	0					
ANR	1115014	Identifier	strcmp		1114914	0					
ANR	1115015	ArgumentList	name		1114914	1					
ANR	1115016	Argument	name		1114914	0					
ANR	1115017	Identifier	name		1114914	0					
ANR	1115018	Argument	"""read"""		1114914	1					
ANR	1115019	PrimaryExpression	"""read"""		1114914	0					
ANR	1115020	UnaryOperationExpression	! num		1114914	1					
ANR	1115021	UnaryOperator	!		1114914	0					
ANR	1115022	Identifier	num		1114914	1					
ANR	1115023	CompoundStatement		23:38:440:440	1114914	1					
ANR	1115024	ExpressionStatement	"eprintf ( ""syscall not found!\\n"" )"	3626:3:109873:109905	1114914	0	True				
ANR	1115025	CallExpression	"eprintf ( ""syscall not found!\\n"" )"		1114914	0					
ANR	1115026	Callee	eprintf		1114914	0					
ANR	1115027	Identifier	eprintf		1114914	0					
ANR	1115028	ArgumentList	"""syscall not found!\\n"""		1114914	1					
ANR	1115029	Argument	"""syscall not found!\\n"""		1114914	0					
ANR	1115030	PrimaryExpression	"""syscall not found!\\n"""		1114914	0					
ANR	1115031	ReturnStatement	return 0 ;	3627:3:109910:109918	1114914	1	True				
ANR	1115032	PrimaryExpression	0		1114914	0					
ANR	1115033	BreakStatement	break ;	3629:2:109926:109931	1114914	5	True				
ANR	1115034	Label	default :	3630:1:109934:109941	1114914	6	True				
ANR	1115035	Identifier	default		1114914	0					
ANR	1115036	ExpressionStatement	"eprintf ( ""syscall not found!\\n"" )"	3631:2:109945:109977	1114914	7	True				
ANR	1115037	CallExpression	"eprintf ( ""syscall not found!\\n"" )"		1114914	0					
ANR	1115038	Callee	eprintf		1114914	0					
ANR	1115039	Identifier	eprintf		1114914	0					
ANR	1115040	ArgumentList	"""syscall not found!\\n"""		1114914	1					
ANR	1115041	Argument	"""syscall not found!\\n"""		1114914	0					
ANR	1115042	PrimaryExpression	"""syscall not found!\\n"""		1114914	0					
ANR	1115043	ReturnStatement	return 0 ;	3632:2:109981:109989	1114914	8	True				
ANR	1115044	PrimaryExpression	0		1114914	0					
ANR	1115045	Statement	snprintf	3635:1:109996:110003	1114914	6	True				
ANR	1115046	Statement	(	3635:10:110005:110005	1114914	7	True				
ANR	1115047	Statement	code	3635:11:110006:110009	1114914	8	True				
ANR	1115048	Statement	","	3635:15:110010:110010	1114914	9	True				
ANR	1115049	Statement	sizeof	3635:17:110012:110017	1114914	10	True				
ANR	1115050	Statement	(	3635:24:110019:110019	1114914	11	True				
ANR	1115051	Statement	code	3635:25:110020:110023	1114914	12	True				
ANR	1115052	Statement	)	3635:29:110024:110024	1114914	13	True				
ANR	1115053	Statement	","	3635:30:110025:110025	1114914	14	True				
ANR	1115054	Statement	"""sc@syscall(%d);\\n"""	3636:2:110029:110047	1114914	15	True				
ANR	1115055	Statement	"""main@global(0) { sc(%s);\\n"""	3637:2:110051:110078	1114914	16	True				
ANR	1115056	Statement	""":int3\\n"""	3638:2:110082:110090	1114914	17	True				
ANR	1115057	Statement	"""}\\n"""	3639:2:110111:110115	1114914	18	True				
ANR	1115058	Statement	","	3639:7:110116:110116	1114914	19	True				
ANR	1115059	Statement	num	3639:9:110118:110120	1114914	20	True				
ANR	1115060	Statement	","	3639:12:110121:110121	1114914	21	True				
ANR	1115061	Statement	args	3639:14:110123:110126	1114914	22	True				
ANR	1115062	Statement	)	3639:18:110127:110127	1114914	23	True				
ANR	1115063	ExpressionStatement		3639:19:110128:110128	1114914	24	True				
ANR	1115064	ExpressionStatement	r_egg_reset ( core -> egg )	3640:1:110131:110154	1114914	25	True				
ANR	1115065	CallExpression	r_egg_reset ( core -> egg )		1114914	0					
ANR	1115066	Callee	r_egg_reset		1114914	0					
ANR	1115067	Identifier	r_egg_reset		1114914	0					
ANR	1115068	ArgumentList	core -> egg		1114914	1					
ANR	1115069	Argument	core -> egg		1114914	0					
ANR	1115070	PtrMemberAccess	core -> egg		1114914	0					
ANR	1115071	Identifier	core		1114914	0					
ANR	1115072	Identifier	egg		1114914	1					
ANR	1115073	ExpressionStatement	"r_egg_load ( core -> egg , code , 0 )"	3642:1:110187:110218	1114914	26	True				
ANR	1115074	CallExpression	"r_egg_load ( core -> egg , code , 0 )"		1114914	0					
ANR	1115075	Callee	r_egg_load		1114914	0					
ANR	1115076	Identifier	r_egg_load		1114914	0					
ANR	1115077	ArgumentList	core -> egg		1114914	1					
ANR	1115078	Argument	core -> egg		1114914	0					
ANR	1115079	PtrMemberAccess	core -> egg		1114914	0					
ANR	1115080	Identifier	core		1114914	0					
ANR	1115081	Identifier	egg		1114914	1					
ANR	1115082	Argument	code		1114914	1					
ANR	1115083	Identifier	code		1114914	0					
ANR	1115084	Argument	0		1114914	2					
ANR	1115085	PrimaryExpression	0		1114914	0					
ANR	1115086	IfStatement	if ( ! r_egg_compile ( core -> egg ) )		1114914	27					
ANR	1115087	Condition	! r_egg_compile ( core -> egg )	3644:5:110226:110251	1114914	0	True				
ANR	1115088	UnaryOperationExpression	! r_egg_compile ( core -> egg )		1114914	0					
ANR	1115089	UnaryOperator	!		1114914	0					
ANR	1115090	CallExpression	r_egg_compile ( core -> egg )		1114914	1					
ANR	1115091	Callee	r_egg_compile		1114914	0					
ANR	1115092	Identifier	r_egg_compile		1114914	0					
ANR	1115093	ArgumentList	core -> egg		1114914	1					
ANR	1115094	Argument	core -> egg		1114914	0					
ANR	1115095	PtrMemberAccess	core -> egg		1114914	0					
ANR	1115096	Identifier	core		1114914	0					
ANR	1115097	Identifier	egg		1114914	1					
ANR	1115098	CompoundStatement		42:33:826:826	1114914	1					
ANR	1115099	ExpressionStatement	"eprintf ( ""Cannot compile.\\n"" )"	3645:2:110258:110287	1114914	0	True				
ANR	1115100	CallExpression	"eprintf ( ""Cannot compile.\\n"" )"		1114914	0					
ANR	1115101	Callee	eprintf		1114914	0					
ANR	1115102	Identifier	eprintf		1114914	0					
ANR	1115103	ArgumentList	"""Cannot compile.\\n"""		1114914	1					
ANR	1115104	Argument	"""Cannot compile.\\n"""		1114914	0					
ANR	1115105	PrimaryExpression	"""Cannot compile.\\n"""		1114914	0					
ANR	1115106	IfStatement	if ( ! r_egg_assemble ( core -> egg ) )		1114914	28					
ANR	1115107	Condition	! r_egg_assemble ( core -> egg )	3647:5:110297:110323	1114914	0	True				
ANR	1115108	UnaryOperationExpression	! r_egg_assemble ( core -> egg )		1114914	0					
ANR	1115109	UnaryOperator	!		1114914	0					
ANR	1115110	CallExpression	r_egg_assemble ( core -> egg )		1114914	1					
ANR	1115111	Callee	r_egg_assemble		1114914	0					
ANR	1115112	Identifier	r_egg_assemble		1114914	0					
ANR	1115113	ArgumentList	core -> egg		1114914	1					
ANR	1115114	Argument	core -> egg		1114914	0					
ANR	1115115	PtrMemberAccess	core -> egg		1114914	0					
ANR	1115116	Identifier	core		1114914	0					
ANR	1115117	Identifier	egg		1114914	1					
ANR	1115118	CompoundStatement		45:34:898:898	1114914	1					
ANR	1115119	ExpressionStatement	"eprintf ( ""r_egg_assemble: invalid assembly\\n"" )"	3648:2:110330:110376	1114914	0	True				
ANR	1115120	CallExpression	"eprintf ( ""r_egg_assemble: invalid assembly\\n"" )"		1114914	0					
ANR	1115121	Callee	eprintf		1114914	0					
ANR	1115122	Identifier	eprintf		1114914	0					
ANR	1115123	ArgumentList	"""r_egg_assemble: invalid assembly\\n"""		1114914	1					
ANR	1115124	Argument	"""r_egg_assemble: invalid assembly\\n"""		1114914	0					
ANR	1115125	PrimaryExpression	"""r_egg_assemble: invalid assembly\\n"""		1114914	0					
ANR	1115126	IfStatement	if ( ( b = r_egg_get_bin ( core -> egg ) ) )		1114914	29					
ANR	1115127	Condition	b = r_egg_get_bin ( core -> egg )	3650:5:110386:110416	1114914	0	True				
ANR	1115128	AssignmentExpression	b = r_egg_get_bin ( core -> egg )		1114914	0		=			
ANR	1115129	Identifier	b		1114914	0					
ANR	1115130	CallExpression	r_egg_get_bin ( core -> egg )		1114914	1					
ANR	1115131	Callee	r_egg_get_bin		1114914	0					
ANR	1115132	Identifier	r_egg_get_bin		1114914	0					
ANR	1115133	ArgumentList	core -> egg		1114914	1					
ANR	1115134	Argument	core -> egg		1114914	0					
ANR	1115135	PtrMemberAccess	core -> egg		1114914	0					
ANR	1115136	Identifier	core		1114914	0					
ANR	1115137	Identifier	egg		1114914	1					
ANR	1115138	CompoundStatement		48:38:991:991	1114914	1					
ANR	1115139	IfStatement	if ( b -> length > 0 )		1114914	0					
ANR	1115140	Condition	b -> length > 0	3652:6:110433:110445	1114914	0	True				
ANR	1115141	RelationalExpression	b -> length > 0		1114914	0		>			
ANR	1115142	PtrMemberAccess	b -> length		1114914	0					
ANR	1115143	Identifier	b		1114914	0					
ANR	1115144	Identifier	length		1114914	1					
ANR	1115145	PrimaryExpression	0		1114914	1					
ANR	1115146	CompoundStatement		50:21:1020:1020	1114914	1					
ANR	1115147	ForStatement	for ( i = 0 ; i < b -> length ; i ++ )		1114914	0					
ANR	1115148	ForInit	i = 0 ;	3653:8:110458:110463	1114914	0	True				
ANR	1115149	AssignmentExpression	i = 0		1114914	0		=			
ANR	1115150	Identifier	i		1114914	0					
ANR	1115151	PrimaryExpression	0		1114914	1					
ANR	1115152	Condition	i < b -> length	3653:15:110465:110477	1114914	1	True				
ANR	1115153	RelationalExpression	i < b -> length		1114914	0		<			
ANR	1115154	Identifier	i		1114914	0					
ANR	1115155	PtrMemberAccess	b -> length		1114914	1					
ANR	1115156	Identifier	b		1114914	0					
ANR	1115157	Identifier	length		1114914	1					
ANR	1115158	PostIncDecOperationExpression	i ++	3653:30:110480:110482	1114914	2	True				
ANR	1115159	Identifier	i		1114914	0					
ANR	1115160	IncDec	++		1114914	1					
ANR	1115161	CompoundStatement		51:35:1057:1057	1114914	3					
ANR	1115162	ExpressionStatement	"r_cons_printf ( ""%02x"" , b -> buf [ i ] )"	3654:4:110491:110524	1114914	0	True				
ANR	1115163	CallExpression	"r_cons_printf ( ""%02x"" , b -> buf [ i ] )"		1114914	0					
ANR	1115164	Callee	r_cons_printf		1114914	0					
ANR	1115165	Identifier	r_cons_printf		1114914	0					
ANR	1115166	ArgumentList	"""%02x"""		1114914	1					
ANR	1115167	Argument	"""%02x"""		1114914	0					
ANR	1115168	PrimaryExpression	"""%02x"""		1114914	0					
ANR	1115169	Argument	b -> buf [ i ]		1114914	1					
ANR	1115170	ArrayIndexing	b -> buf [ i ]		1114914	0					
ANR	1115171	PtrMemberAccess	b -> buf		1114914	0					
ANR	1115172	Identifier	b		1114914	0					
ANR	1115173	Identifier	buf		1114914	1					
ANR	1115174	Identifier	i		1114914	1					
ANR	1115175	ExpressionStatement	"r_cons_printf ( ""\\n"" )"	3656:3:110534:110554	1114914	1	True				
ANR	1115176	CallExpression	"r_cons_printf ( ""\\n"" )"		1114914	0					
ANR	1115177	Callee	r_cons_printf		1114914	0					
ANR	1115178	Identifier	r_cons_printf		1114914	0					
ANR	1115179	ArgumentList	"""\\n"""		1114914	1					
ANR	1115180	Argument	"""\\n"""		1114914	0					
ANR	1115181	PrimaryExpression	"""\\n"""		1114914	0					
ANR	1115182	ReturnStatement	return b ;	3660:1:110571:110579	1114914	30	True				
ANR	1115183	Identifier	b		1114914	0					
ANR	1115184	ReturnType	R_API RBuffer *		1114914	1					
ANR	1115185	Identifier	r_core_syscall		1114914	2					
ANR	1115186	ParameterList	"RCore * core , const char * name , const char * args"		1114914	3					
ANR	1115187	Parameter	RCore * core	3603:31:109378:109388	1114914	0	True				
ANR	1115188	ParameterType	RCore *		1114914	0					
ANR	1115189	Identifier	core		1114914	1					
ANR	1115190	Parameter	const char * name	3603:44:109391:109406	1114914	1	True				
ANR	1115191	ParameterType	const char *		1114914	0					
ANR	1115192	Identifier	name		1114914	1					
ANR	1115193	Parameter	const char * args	3603:62:109409:109424	1114914	2	True				
ANR	1115194	ParameterType	const char *		1114914	0					
ANR	1115195	Identifier	args		1114914	1					
ANR	1115196	CFGEntryNode	ENTRY		1114914		True				
ANR	1115197	CFGExitNode	EXIT		1114914		True				
ANR	1115198	Symbol	code		1114914						
ANR	1115199	Symbol	num		1114914						
ANR	1115200	Symbol	* core		1114914						
ANR	1115201	Symbol	core -> assembler -> bits		1114914						
ANR	1115202	Symbol	core -> assembler		1114914						
ANR	1115203	Symbol	core -> anal		1114914						
ANR	1115204	Symbol	* core -> assembler		1114914						
ANR	1115205	Symbol	core -> egg		1114914						
ANR	1115206	Symbol	core -> anal -> cur -> arch		1114914						
ANR	1115207	Symbol	r_egg_assemble		1114914						
ANR	1115208	Symbol	core -> anal -> cur		1114914						
ANR	1115209	Symbol	b -> length		1114914						
ANR	1115210	Symbol	* * core -> anal		1114914						
ANR	1115211	Symbol	* * core		1114914						
ANR	1115212	Symbol	strcmp		1114914						
ANR	1115213	Symbol	* b -> buf		1114914						
ANR	1115214	Symbol	b		1114914						
ANR	1115215	Symbol	NULL		1114914						
ANR	1115216	Symbol	* core -> anal -> cur		1114914						
ANR	1115217	Symbol	r_egg_compile		1114914						
ANR	1115218	Symbol	i		1114914						
ANR	1115219	Symbol	* * b		1114914						
ANR	1115220	Symbol	r_syscall_get_num		1114914						
ANR	1115221	Symbol	core -> anal -> syscall		1114914						
ANR	1115222	Symbol	* b		1114914						
ANR	1115223	Symbol	args		1114914						
ANR	1115224	Symbol	core		1114914						
ANR	1115225	Symbol	* * * core		1114914						
ANR	1115226	Symbol	* core -> anal		1114914						
ANR	1115227	Symbol	* i		1114914						
ANR	1115228	Symbol	name		1114914						
ANR	1115229	Symbol	r_egg_get_bin		1114914						
ANR	1115230	Symbol	b -> buf		1114914						
ANR	1115231	Function	r_core_autocomplete_add	3663:0:110584:111279							
ANR	1115232	FunctionDef	"r_core_autocomplete_add (RCoreAutocomplete * parent , const char * cmd , int type , bool lock)"		1115231	0					
ANR	1115233	CompoundStatement		3663:114:110698:111279	1115231	0					
ANR	1115234	IfStatement	if ( ! parent || ! cmd || type < 0 || type >= R_CORE_AUTOCMPLT_END )		1115231	0					
ANR	1115235	Condition	! parent || ! cmd || type < 0 || type >= R_CORE_AUTOCMPLT_END	3664:5:110705:110763	1115231	0	True				
ANR	1115236	OrExpression	! parent || ! cmd || type < 0 || type >= R_CORE_AUTOCMPLT_END		1115231	0		||			
ANR	1115237	UnaryOperationExpression	! parent		1115231	0					
ANR	1115238	UnaryOperator	!		1115231	0					
ANR	1115239	Identifier	parent		1115231	1					
ANR	1115240	OrExpression	! cmd || type < 0 || type >= R_CORE_AUTOCMPLT_END		1115231	1		||			
ANR	1115241	UnaryOperationExpression	! cmd		1115231	0					
ANR	1115242	UnaryOperator	!		1115231	0					
ANR	1115243	Identifier	cmd		1115231	1					
ANR	1115244	OrExpression	type < 0 || type >= R_CORE_AUTOCMPLT_END		1115231	1		||			
ANR	1115245	RelationalExpression	type < 0		1115231	0		<			
ANR	1115246	Identifier	type		1115231	0					
ANR	1115247	PrimaryExpression	0		1115231	1					
ANR	1115248	RelationalExpression	type >= R_CORE_AUTOCMPLT_END		1115231	1		>=			
ANR	1115249	Identifier	type		1115231	0					
ANR	1115250	Identifier	R_CORE_AUTOCMPLT_END		1115231	1					
ANR	1115251	CompoundStatement		2:66:67:67	1115231	1					
ANR	1115252	ReturnStatement	return NULL ;	3665:2:110770:110781	1115231	0	True				
ANR	1115253	Identifier	NULL		1115231	0					
ANR	1115254	IdentifierDeclStatement	RCoreAutocomplete * autocmpl = R_NEW0 ( RCoreAutocomplete ) ;	3667:1:110787:110843	1115231	1	True				
ANR	1115255	IdentifierDecl	* autocmpl = R_NEW0 ( RCoreAutocomplete )		1115231	0					
ANR	1115256	IdentifierDeclType	RCoreAutocomplete *		1115231	0					
ANR	1115257	Identifier	autocmpl		1115231	1					
ANR	1115258	AssignmentExpression	* autocmpl = R_NEW0 ( RCoreAutocomplete )		1115231	2		=			
ANR	1115259	Identifier	autocmpl		1115231	0					
ANR	1115260	CallExpression	R_NEW0 ( RCoreAutocomplete )		1115231	1					
ANR	1115261	Callee	R_NEW0		1115231	0					
ANR	1115262	Identifier	R_NEW0		1115231	0					
ANR	1115263	ArgumentList	RCoreAutocomplete		1115231	1					
ANR	1115264	Argument	RCoreAutocomplete		1115231	0					
ANR	1115265	Identifier	RCoreAutocomplete		1115231	0					
ANR	1115266	IfStatement	if ( ! autocmpl )		1115231	2					
ANR	1115267	Condition	! autocmpl	3668:5:110850:110858	1115231	0	True				
ANR	1115268	UnaryOperationExpression	! autocmpl		1115231	0					
ANR	1115269	UnaryOperator	!		1115231	0					
ANR	1115270	Identifier	autocmpl		1115231	1					
ANR	1115271	CompoundStatement		6:16:162:162	1115231	1					
ANR	1115272	ReturnStatement	return NULL ;	3669:2:110865:110876	1115231	0	True				
ANR	1115273	Identifier	NULL		1115231	0					
ANR	1115274	IdentifierDeclStatement	"RCoreAutocomplete * * updated = realloc ( parent -> subcmds , ( parent -> n_subcmds + 1 ) * sizeof ( RCoreAutocomplete * ) ) ;"	3671:1:110882:110992	1115231	3	True				
ANR	1115275	IdentifierDecl	"* * updated = realloc ( parent -> subcmds , ( parent -> n_subcmds + 1 ) * sizeof ( RCoreAutocomplete * ) )"		1115231	0					
ANR	1115276	IdentifierDeclType	RCoreAutocomplete * *		1115231	0					
ANR	1115277	Identifier	updated		1115231	1					
ANR	1115278	AssignmentExpression	"* * updated = realloc ( parent -> subcmds , ( parent -> n_subcmds + 1 ) * sizeof ( RCoreAutocomplete * ) )"		1115231	2		=			
ANR	1115279	Identifier	updated		1115231	0					
ANR	1115280	CallExpression	"realloc ( parent -> subcmds , ( parent -> n_subcmds + 1 ) * sizeof ( RCoreAutocomplete * ) )"		1115231	1					
ANR	1115281	Callee	realloc		1115231	0					
ANR	1115282	Identifier	realloc		1115231	0					
ANR	1115283	ArgumentList	parent -> subcmds		1115231	1					
ANR	1115284	Argument	parent -> subcmds		1115231	0					
ANR	1115285	PtrMemberAccess	parent -> subcmds		1115231	0					
ANR	1115286	Identifier	parent		1115231	0					
ANR	1115287	Identifier	subcmds		1115231	1					
ANR	1115288	Argument	( parent -> n_subcmds + 1 ) * sizeof ( RCoreAutocomplete * )		1115231	1					
ANR	1115289	MultiplicativeExpression	( parent -> n_subcmds + 1 ) * sizeof ( RCoreAutocomplete * )		1115231	0		*			
ANR	1115290	AdditiveExpression	parent -> n_subcmds + 1		1115231	0		+			
ANR	1115291	PtrMemberAccess	parent -> n_subcmds		1115231	0					
ANR	1115292	Identifier	parent		1115231	0					
ANR	1115293	Identifier	n_subcmds		1115231	1					
ANR	1115294	PrimaryExpression	1		1115231	1					
ANR	1115295	SizeofExpression	sizeof ( RCoreAutocomplete * )		1115231	1					
ANR	1115296	Sizeof	sizeof		1115231	0					
ANR	1115297	SizeofOperand	RCoreAutocomplete *		1115231	1					
ANR	1115298	IfStatement	if ( ! updated )		1115231	4					
ANR	1115299	Condition	! updated	3672:5:110999:111006	1115231	0	True				
ANR	1115300	UnaryOperationExpression	! updated		1115231	0					
ANR	1115301	UnaryOperator	!		1115231	0					
ANR	1115302	Identifier	updated		1115231	1					
ANR	1115303	CompoundStatement		10:15:310:310	1115231	1					
ANR	1115304	ExpressionStatement	free ( autocmpl )	3673:2:111013:111028	1115231	0	True				
ANR	1115305	CallExpression	free ( autocmpl )		1115231	0					
ANR	1115306	Callee	free		1115231	0					
ANR	1115307	Identifier	free		1115231	0					
ANR	1115308	ArgumentList	autocmpl		1115231	1					
ANR	1115309	Argument	autocmpl		1115231	0					
ANR	1115310	Identifier	autocmpl		1115231	0					
ANR	1115311	ReturnStatement	return NULL ;	3674:2:111032:111043	1115231	1	True				
ANR	1115312	Identifier	NULL		1115231	0					
ANR	1115313	ExpressionStatement	parent -> subcmds = updated	3676:1:111049:111074	1115231	5	True				
ANR	1115314	AssignmentExpression	parent -> subcmds = updated		1115231	0		=			
ANR	1115315	PtrMemberAccess	parent -> subcmds		1115231	0					
ANR	1115316	Identifier	parent		1115231	0					
ANR	1115317	Identifier	subcmds		1115231	1					
ANR	1115318	Identifier	updated		1115231	1					
ANR	1115319	ExpressionStatement	parent -> subcmds [ parent -> n_subcmds ] = autocmpl	3677:1:111077:111122	1115231	6	True				
ANR	1115320	AssignmentExpression	parent -> subcmds [ parent -> n_subcmds ] = autocmpl		1115231	0		=			
ANR	1115321	ArrayIndexing	parent -> subcmds [ parent -> n_subcmds ]		1115231	0					
ANR	1115322	PtrMemberAccess	parent -> subcmds		1115231	0					
ANR	1115323	Identifier	parent		1115231	0					
ANR	1115324	Identifier	subcmds		1115231	1					
ANR	1115325	PtrMemberAccess	parent -> n_subcmds		1115231	1					
ANR	1115326	Identifier	parent		1115231	0					
ANR	1115327	Identifier	n_subcmds		1115231	1					
ANR	1115328	Identifier	autocmpl		1115231	1					
ANR	1115329	ExpressionStatement	parent -> n_subcmds ++	3678:1:111125:111144	1115231	7	True				
ANR	1115330	PostIncDecOperationExpression	parent -> n_subcmds ++		1115231	0					
ANR	1115331	PtrMemberAccess	parent -> n_subcmds		1115231	0					
ANR	1115332	Identifier	parent		1115231	0					
ANR	1115333	Identifier	n_subcmds		1115231	1					
ANR	1115334	IncDec	++		1115231	1					
ANR	1115335	ExpressionStatement	autocmpl -> cmd = strdup ( cmd )	3679:1:111147:111175	1115231	8	True				
ANR	1115336	AssignmentExpression	autocmpl -> cmd = strdup ( cmd )		1115231	0		=			
ANR	1115337	PtrMemberAccess	autocmpl -> cmd		1115231	0					
ANR	1115338	Identifier	autocmpl		1115231	0					
ANR	1115339	Identifier	cmd		1115231	1					
ANR	1115340	CallExpression	strdup ( cmd )		1115231	1					
ANR	1115341	Callee	strdup		1115231	0					
ANR	1115342	Identifier	strdup		1115231	0					
ANR	1115343	ArgumentList	cmd		1115231	1					
ANR	1115344	Argument	cmd		1115231	0					
ANR	1115345	Identifier	cmd		1115231	0					
ANR	1115346	ExpressionStatement	autocmpl -> locked = lock	3680:1:111178:111201	1115231	9	True				
ANR	1115347	AssignmentExpression	autocmpl -> locked = lock		1115231	0		=			
ANR	1115348	PtrMemberAccess	autocmpl -> locked		1115231	0					
ANR	1115349	Identifier	autocmpl		1115231	0					
ANR	1115350	Identifier	locked		1115231	1					
ANR	1115351	Identifier	lock		1115231	1					
ANR	1115352	ExpressionStatement	autocmpl -> type = type	3681:1:111204:111225	1115231	10	True				
ANR	1115353	AssignmentExpression	autocmpl -> type = type		1115231	0		=			
ANR	1115354	PtrMemberAccess	autocmpl -> type		1115231	0					
ANR	1115355	Identifier	autocmpl		1115231	0					
ANR	1115356	Identifier	type		1115231	1					
ANR	1115357	Identifier	type		1115231	1					
ANR	1115358	ExpressionStatement	autocmpl -> length = strlen ( cmd )	3682:1:111228:111259	1115231	11	True				
ANR	1115359	AssignmentExpression	autocmpl -> length = strlen ( cmd )		1115231	0		=			
ANR	1115360	PtrMemberAccess	autocmpl -> length		1115231	0					
ANR	1115361	Identifier	autocmpl		1115231	0					
ANR	1115362	Identifier	length		1115231	1					
ANR	1115363	CallExpression	strlen ( cmd )		1115231	1					
ANR	1115364	Callee	strlen		1115231	0					
ANR	1115365	Identifier	strlen		1115231	0					
ANR	1115366	ArgumentList	cmd		1115231	1					
ANR	1115367	Argument	cmd		1115231	0					
ANR	1115368	Identifier	cmd		1115231	0					
ANR	1115369	ReturnStatement	return autocmpl ;	3683:1:111262:111277	1115231	12	True				
ANR	1115370	Identifier	autocmpl		1115231	0					
ANR	1115371	ReturnType	R_API RCoreAutocomplete *		1115231	1					
ANR	1115372	Identifier	r_core_autocomplete_add		1115231	2					
ANR	1115373	ParameterList	"RCoreAutocomplete * parent , const char * cmd , int type , bool lock"		1115231	3					
ANR	1115374	Parameter	RCoreAutocomplete * parent	3663:49:110633:110657	1115231	0	True				
ANR	1115375	ParameterType	RCoreAutocomplete *		1115231	0					
ANR	1115376	Identifier	parent		1115231	1					
ANR	1115377	Parameter	const char * cmd	3663:76:110660:110674	1115231	1	True				
ANR	1115378	ParameterType	const char *		1115231	0					
ANR	1115379	Identifier	cmd		1115231	1					
ANR	1115380	Parameter	int type	3663:93:110677:110684	1115231	2	True				
ANR	1115381	ParameterType	int		1115231	0					
ANR	1115382	Identifier	type		1115231	1					
ANR	1115383	Parameter	bool lock	3663:103:110687:110695	1115231	3	True				
ANR	1115384	ParameterType	bool		1115231	0					
ANR	1115385	Identifier	lock		1115231	1					
ANR	1115386	CFGEntryNode	ENTRY		1115231		True				
ANR	1115387	CFGExitNode	EXIT		1115231		True				
ANR	1115388	Symbol	parent		1115231						
ANR	1115389	Symbol	autocmpl -> cmd		1115231						
ANR	1115390	Symbol	NULL		1115231						
ANR	1115391	Symbol	* parent		1115231						
ANR	1115392	Symbol	* * parent		1115231						
ANR	1115393	Symbol	* autocmpl		1115231						
ANR	1115394	Symbol	realloc		1115231						
ANR	1115395	Symbol	type		1115231						
ANR	1115396	Symbol	* parent -> subcmds		1115231						
ANR	1115397	Symbol	autocmpl -> locked		1115231						
ANR	1115398	Symbol	autocmpl -> type		1115231						
ANR	1115399	Symbol	R_NEW0		1115231						
ANR	1115400	Symbol	strlen		1115231						
ANR	1115401	Symbol	autocmpl -> length		1115231						
ANR	1115402	Symbol	R_CORE_AUTOCMPLT_END		1115231						
ANR	1115403	Symbol	parent -> subcmds		1115231						
ANR	1115404	Symbol	lock		1115231						
ANR	1115405	Symbol	cmd		1115231						
ANR	1115406	Symbol	parent -> n_subcmds		1115231						
ANR	1115407	Symbol	strdup		1115231						
ANR	1115408	Symbol	autocmpl		1115231						
ANR	1115409	Symbol	updated		1115231						
ANR	1115410	Symbol	RCoreAutocomplete		1115231						
ANR	1115411	Symbol	* parent -> n_subcmds		1115231						
ANR	1115412	Function	r_core_autocomplete_free	3686:0:111282:111554							
ANR	1115413	FunctionDef	r_core_autocomplete_free (RCoreAutocomplete * obj)		1115412	0					
ANR	1115414	CompoundStatement		3686:60:111342:111554	1115412	0					
ANR	1115415	IfStatement	if ( ! obj )		1115412	0					
ANR	1115416	Condition	! obj	3687:5:111349:111352	1115412	0	True				
ANR	1115417	UnaryOperationExpression	! obj		1115412	0					
ANR	1115418	UnaryOperator	!		1115412	0					
ANR	1115419	Identifier	obj		1115412	1					
ANR	1115420	CompoundStatement		2:11:12:12	1115412	1					
ANR	1115421	ReturnStatement	return ;	3688:2:111359:111365	1115412	0	True				
ANR	1115422	IdentifierDeclStatement	int i ;	3690:1:111371:111376	1115412	1	True				
ANR	1115423	IdentifierDecl	i		1115412	0					
ANR	1115424	IdentifierDeclType	int		1115412	0					
ANR	1115425	Identifier	i		1115412	1					
ANR	1115426	ForStatement	for ( i = 0 ; i < obj -> n_subcmds ; ++ i )		1115412	2					
ANR	1115427	ForInit	i = 0 ;	3691:6:111384:111389	1115412	0	True				
ANR	1115428	AssignmentExpression	i = 0		1115412	0		=			
ANR	1115429	Identifier	i		1115412	0					
ANR	1115430	PrimaryExpression	0		1115412	1					
ANR	1115431	Condition	i < obj -> n_subcmds	3691:13:111391:111408	1115412	1	True				
ANR	1115432	RelationalExpression	i < obj -> n_subcmds		1115412	0		<			
ANR	1115433	Identifier	i		1115412	0					
ANR	1115434	PtrMemberAccess	obj -> n_subcmds		1115412	1					
ANR	1115435	Identifier	obj		1115412	0					
ANR	1115436	Identifier	n_subcmds		1115412	1					
ANR	1115437	UnaryExpression	++ i	3691:33:111411:111413	1115412	2	True				
ANR	1115438	IncDec	++		1115412	0					
ANR	1115439	Identifier	i		1115412	1					
ANR	1115440	CompoundStatement		6:38:73:73	1115412	3					
ANR	1115441	ExpressionStatement	r_core_autocomplete_free ( obj -> subcmds [ i ] )	3692:2:111420:111462	1115412	0	True				
ANR	1115442	CallExpression	r_core_autocomplete_free ( obj -> subcmds [ i ] )		1115412	0					
ANR	1115443	Callee	r_core_autocomplete_free		1115412	0					
ANR	1115444	Identifier	r_core_autocomplete_free		1115412	0					
ANR	1115445	ArgumentList	obj -> subcmds [ i ]		1115412	1					
ANR	1115446	Argument	obj -> subcmds [ i ]		1115412	0					
ANR	1115447	ArrayIndexing	obj -> subcmds [ i ]		1115412	0					
ANR	1115448	PtrMemberAccess	obj -> subcmds		1115412	0					
ANR	1115449	Identifier	obj		1115412	0					
ANR	1115450	Identifier	subcmds		1115412	1					
ANR	1115451	Identifier	i		1115412	1					
ANR	1115452	ExpressionStatement	obj -> subcmds [ i ] = NULL	3693:2:111466:111488	1115412	1	True				
ANR	1115453	AssignmentExpression	obj -> subcmds [ i ] = NULL		1115412	0		=			
ANR	1115454	ArrayIndexing	obj -> subcmds [ i ]		1115412	0					
ANR	1115455	PtrMemberAccess	obj -> subcmds		1115412	0					
ANR	1115456	Identifier	obj		1115412	0					
ANR	1115457	Identifier	subcmds		1115412	1					
ANR	1115458	Identifier	i		1115412	1					
ANR	1115459	Identifier	NULL		1115412	1					
ANR	1115460	ExpressionStatement	free ( obj -> subcmds )	3695:1:111494:111513	1115412	3	True				
ANR	1115461	CallExpression	free ( obj -> subcmds )		1115412	0					
ANR	1115462	Callee	free		1115412	0					
ANR	1115463	Identifier	free		1115412	0					
ANR	1115464	ArgumentList	obj -> subcmds		1115412	1					
ANR	1115465	Argument	obj -> subcmds		1115412	0					
ANR	1115466	PtrMemberAccess	obj -> subcmds		1115412	0					
ANR	1115467	Identifier	obj		1115412	0					
ANR	1115468	Identifier	subcmds		1115412	1					
ANR	1115469	ExpressionStatement	free ( ( char * ) obj -> cmd )	3696:1:111516:111539	1115412	4	True				
ANR	1115470	CallExpression	free ( ( char * ) obj -> cmd )		1115412	0					
ANR	1115471	Callee	free		1115412	0					
ANR	1115472	Identifier	free		1115412	0					
ANR	1115473	ArgumentList	( char * ) obj -> cmd		1115412	1					
ANR	1115474	Argument	( char * ) obj -> cmd		1115412	0					
ANR	1115475	CastExpression	( char * ) obj -> cmd		1115412	0					
ANR	1115476	CastTarget	char *		1115412	0					
ANR	1115477	PtrMemberAccess	obj -> cmd		1115412	1					
ANR	1115478	Identifier	obj		1115412	0					
ANR	1115479	Identifier	cmd		1115412	1					
ANR	1115480	ExpressionStatement	free ( obj )	3697:1:111542:111552	1115412	5	True				
ANR	1115481	CallExpression	free ( obj )		1115412	0					
ANR	1115482	Callee	free		1115412	0					
ANR	1115483	Identifier	free		1115412	0					
ANR	1115484	ArgumentList	obj		1115412	1					
ANR	1115485	Argument	obj		1115412	0					
ANR	1115486	Identifier	obj		1115412	0					
ANR	1115487	ReturnType	R_API void		1115412	1					
ANR	1115488	Identifier	r_core_autocomplete_free		1115412	2					
ANR	1115489	ParameterList	RCoreAutocomplete * obj		1115412	3					
ANR	1115490	Parameter	RCoreAutocomplete * obj	3686:36:111318:111339	1115412	0	True				
ANR	1115491	ParameterType	RCoreAutocomplete *		1115412	0					
ANR	1115492	Identifier	obj		1115412	1					
ANR	1115493	CFGEntryNode	ENTRY		1115412		True				
ANR	1115494	CFGExitNode	EXIT		1115412		True				
ANR	1115495	Symbol	* obj		1115412						
ANR	1115496	Symbol	* i		1115412						
ANR	1115497	Symbol	obj -> subcmds		1115412						
ANR	1115498	Symbol	NULL		1115412						
ANR	1115499	Symbol	* obj -> subcmds		1115412						
ANR	1115500	Symbol	obj		1115412						
ANR	1115501	Symbol	obj -> cmd		1115412						
ANR	1115502	Symbol	i		1115412						
ANR	1115503	Symbol	* * obj		1115412						
ANR	1115504	Symbol	obj -> n_subcmds		1115412						
ANR	1115505	Function	r_core_autocomplete_find	3700:0:111557:112036							
ANR	1115506	FunctionDef	"r_core_autocomplete_find (RCoreAutocomplete * parent , const char * cmd , bool exact)"		1115505	0					
ANR	1115507	CompoundStatement		3700:106:111663:112036	1115505	0					
ANR	1115508	IfStatement	if ( ! parent || ! cmd )		1115505	0					
ANR	1115509	Condition	! parent || ! cmd	3701:5:111670:111684	1115505	0	True				
ANR	1115510	OrExpression	! parent || ! cmd		1115505	0		||			
ANR	1115511	UnaryOperationExpression	! parent		1115505	0					
ANR	1115512	UnaryOperator	!		1115505	0					
ANR	1115513	Identifier	parent		1115505	1					
ANR	1115514	UnaryOperationExpression	! cmd		1115505	1					
ANR	1115515	UnaryOperator	!		1115505	0					
ANR	1115516	Identifier	cmd		1115505	1					
ANR	1115517	CompoundStatement		2:22:23:23	1115505	1					
ANR	1115518	ReturnStatement	return false ;	3702:2:111691:111703	1115505	0	True				
ANR	1115519	Identifier	false		1115505	0					
ANR	1115520	IdentifierDeclStatement	int len = strlen ( cmd ) ;	3704:1:111709:111731	1115505	1	True				
ANR	1115521	IdentifierDecl	len = strlen ( cmd )		1115505	0					
ANR	1115522	IdentifierDeclType	int		1115505	0					
ANR	1115523	Identifier	len		1115505	1					
ANR	1115524	AssignmentExpression	len = strlen ( cmd )		1115505	2		=			
ANR	1115525	Identifier	len		1115505	0					
ANR	1115526	CallExpression	strlen ( cmd )		1115505	1					
ANR	1115527	Callee	strlen		1115505	0					
ANR	1115528	Identifier	strlen		1115505	0					
ANR	1115529	ArgumentList	cmd		1115505	1					
ANR	1115530	Argument	cmd		1115505	0					
ANR	1115531	Identifier	cmd		1115505	0					
ANR	1115532	IdentifierDeclStatement	int i ;	3705:1:111734:111739	1115505	2	True				
ANR	1115533	IdentifierDecl	i		1115505	0					
ANR	1115534	IdentifierDeclType	int		1115505	0					
ANR	1115535	Identifier	i		1115505	1					
ANR	1115536	ForStatement	for ( i = 0 ; i < parent -> n_subcmds ; ++ i )		1115505	3					
ANR	1115537	ForInit	i = 0 ;	3706:6:111747:111752	1115505	0	True				
ANR	1115538	AssignmentExpression	i = 0		1115505	0		=			
ANR	1115539	Identifier	i		1115505	0					
ANR	1115540	PrimaryExpression	0		1115505	1					
ANR	1115541	Condition	i < parent -> n_subcmds	3706:13:111754:111774	1115505	1	True				
ANR	1115542	RelationalExpression	i < parent -> n_subcmds		1115505	0		<			
ANR	1115543	Identifier	i		1115505	0					
ANR	1115544	PtrMemberAccess	parent -> n_subcmds		1115505	1					
ANR	1115545	Identifier	parent		1115505	0					
ANR	1115546	Identifier	n_subcmds		1115505	1					
ANR	1115547	UnaryExpression	++ i	3706:36:111777:111779	1115505	2	True				
ANR	1115548	IncDec	++		1115505	0					
ANR	1115549	Identifier	i		1115505	1					
ANR	1115550	CompoundStatement		7:41:118:118	1115505	3					
ANR	1115551	IfStatement	"if ( exact && len == parent -> subcmds [ i ] -> length && ! strncmp ( cmd , parent -> subcmds [ i ] -> cmd , len ) )"		1115505	0					
ANR	1115552	Condition	"exact && len == parent -> subcmds [ i ] -> length && ! strncmp ( cmd , parent -> subcmds [ i ] -> cmd , len )"	3707:6:111790:111879	1115505	0	True				
ANR	1115553	AndExpression	"exact && len == parent -> subcmds [ i ] -> length && ! strncmp ( cmd , parent -> subcmds [ i ] -> cmd , len )"		1115505	0		&&			
ANR	1115554	Identifier	exact		1115505	0					
ANR	1115555	AndExpression	"len == parent -> subcmds [ i ] -> length && ! strncmp ( cmd , parent -> subcmds [ i ] -> cmd , len )"		1115505	1		&&			
ANR	1115556	EqualityExpression	len == parent -> subcmds [ i ] -> length		1115505	0		==			
ANR	1115557	Identifier	len		1115505	0					
ANR	1115558	PtrMemberAccess	parent -> subcmds [ i ] -> length		1115505	1					
ANR	1115559	ArrayIndexing	parent -> subcmds [ i ]		1115505	0					
ANR	1115560	PtrMemberAccess	parent -> subcmds		1115505	0					
ANR	1115561	Identifier	parent		1115505	0					
ANR	1115562	Identifier	subcmds		1115505	1					
ANR	1115563	Identifier	i		1115505	1					
ANR	1115564	Identifier	length		1115505	1					
ANR	1115565	UnaryOperationExpression	"! strncmp ( cmd , parent -> subcmds [ i ] -> cmd , len )"		1115505	1					
ANR	1115566	UnaryOperator	!		1115505	0					
ANR	1115567	CallExpression	"strncmp ( cmd , parent -> subcmds [ i ] -> cmd , len )"		1115505	1					
ANR	1115568	Callee	strncmp		1115505	0					
ANR	1115569	Identifier	strncmp		1115505	0					
ANR	1115570	ArgumentList	cmd		1115505	1					
ANR	1115571	Argument	cmd		1115505	0					
ANR	1115572	Identifier	cmd		1115505	0					
ANR	1115573	Argument	parent -> subcmds [ i ] -> cmd		1115505	1					
ANR	1115574	PtrMemberAccess	parent -> subcmds [ i ] -> cmd		1115505	0					
ANR	1115575	ArrayIndexing	parent -> subcmds [ i ]		1115505	0					
ANR	1115576	PtrMemberAccess	parent -> subcmds		1115505	0					
ANR	1115577	Identifier	parent		1115505	0					
ANR	1115578	Identifier	subcmds		1115505	1					
ANR	1115579	Identifier	i		1115505	1					
ANR	1115580	Identifier	cmd		1115505	1					
ANR	1115581	Argument	len		1115505	2					
ANR	1115582	Identifier	len		1115505	0					
ANR	1115583	CompoundStatement		8:98:218:218	1115505	1					
ANR	1115584	ReturnStatement	return parent -> subcmds [ i ] ;	3708:3:111887:111912	1115505	0	True				
ANR	1115585	ArrayIndexing	parent -> subcmds [ i ]		1115505	0					
ANR	1115586	PtrMemberAccess	parent -> subcmds		1115505	0					
ANR	1115587	Identifier	parent		1115505	0					
ANR	1115588	Identifier	subcmds		1115505	1					
ANR	1115589	Identifier	i		1115505	1					
ANR	1115590	ElseStatement	else		1115505	0					
ANR	1115591	IfStatement	"if ( ! exact && ! strncmp ( cmd , parent -> subcmds [ i ] -> cmd , len ) )"		1115505	0					
ANR	1115592	Condition	"! exact && ! strncmp ( cmd , parent -> subcmds [ i ] -> cmd , len )"	3709:13:111927:111980	1115505	0	True				
ANR	1115593	AndExpression	"! exact && ! strncmp ( cmd , parent -> subcmds [ i ] -> cmd , len )"		1115505	0		&&			
ANR	1115594	UnaryOperationExpression	! exact		1115505	0					
ANR	1115595	UnaryOperator	!		1115505	0					
ANR	1115596	Identifier	exact		1115505	1					
ANR	1115597	UnaryOperationExpression	"! strncmp ( cmd , parent -> subcmds [ i ] -> cmd , len )"		1115505	1					
ANR	1115598	UnaryOperator	!		1115505	0					
ANR	1115599	CallExpression	"strncmp ( cmd , parent -> subcmds [ i ] -> cmd , len )"		1115505	1					
ANR	1115600	Callee	strncmp		1115505	0					
ANR	1115601	Identifier	strncmp		1115505	0					
ANR	1115602	ArgumentList	cmd		1115505	1					
ANR	1115603	Argument	cmd		1115505	0					
ANR	1115604	Identifier	cmd		1115505	0					
ANR	1115605	Argument	parent -> subcmds [ i ] -> cmd		1115505	1					
ANR	1115606	PtrMemberAccess	parent -> subcmds [ i ] -> cmd		1115505	0					
ANR	1115607	ArrayIndexing	parent -> subcmds [ i ]		1115505	0					
ANR	1115608	PtrMemberAccess	parent -> subcmds		1115505	0					
ANR	1115609	Identifier	parent		1115505	0					
ANR	1115610	Identifier	subcmds		1115505	1					
ANR	1115611	Identifier	i		1115505	1					
ANR	1115612	Identifier	cmd		1115505	1					
ANR	1115613	Argument	len		1115505	2					
ANR	1115614	Identifier	len		1115505	0					
ANR	1115615	CompoundStatement		10:69:319:319	1115505	1					
ANR	1115616	ReturnStatement	return parent -> subcmds [ i ] ;	3710:3:111988:112013	1115505	0	True				
ANR	1115617	ArrayIndexing	parent -> subcmds [ i ]		1115505	0					
ANR	1115618	PtrMemberAccess	parent -> subcmds		1115505	0					
ANR	1115619	Identifier	parent		1115505	0					
ANR	1115620	Identifier	subcmds		1115505	1					
ANR	1115621	Identifier	i		1115505	1					
ANR	1115622	ReturnStatement	return NULL ;	3713:1:112023:112034	1115505	4	True				
ANR	1115623	Identifier	NULL		1115505	0					
ANR	1115624	ReturnType	R_API RCoreAutocomplete *		1115505	1					
ANR	1115625	Identifier	r_core_autocomplete_find		1115505	2					
ANR	1115626	ParameterList	"RCoreAutocomplete * parent , const char * cmd , bool exact"		1115505	3					
ANR	1115627	Parameter	RCoreAutocomplete * parent	3700:50:111607:111631	1115505	0	True				
ANR	1115628	ParameterType	RCoreAutocomplete *		1115505	0					
ANR	1115629	Identifier	parent		1115505	1					
ANR	1115630	Parameter	const char * cmd	3700:77:111634:111648	1115505	1	True				
ANR	1115631	ParameterType	const char *		1115505	0					
ANR	1115632	Identifier	cmd		1115505	1					
ANR	1115633	Parameter	bool exact	3700:94:111651:111660	1115505	2	True				
ANR	1115634	ParameterType	bool		1115505	0					
ANR	1115635	Identifier	exact		1115505	1					
ANR	1115636	CFGEntryNode	ENTRY		1115505		True				
ANR	1115637	CFGExitNode	EXIT		1115505		True				
ANR	1115638	Symbol	parent		1115505						
ANR	1115639	Symbol	* * i		1115505						
ANR	1115640	Symbol	* parent		1115505						
ANR	1115641	Symbol	NULL		1115505						
ANR	1115642	Symbol	false		1115505						
ANR	1115643	Symbol	parent -> subcmds [ i ] -> cmd		1115505						
ANR	1115644	Symbol	* * parent		1115505						
ANR	1115645	Symbol	i		1115505						
ANR	1115646	Symbol	* parent -> subcmds		1115505						
ANR	1115647	Symbol	* * parent -> subcmds		1115505						
ANR	1115648	Symbol	strlen		1115505						
ANR	1115649	Symbol	strncmp		1115505						
ANR	1115650	Symbol	* i		1115505						
ANR	1115651	Symbol	len		1115505						
ANR	1115652	Symbol	* * * parent		1115505						
ANR	1115653	Symbol	parent -> subcmds		1115505						
ANR	1115654	Symbol	exact		1115505						
ANR	1115655	Symbol	cmd		1115505						
ANR	1115656	Symbol	parent -> n_subcmds		1115505						
ANR	1115657	Symbol	parent -> subcmds [ i ] -> length		1115505						
ANR	1115658	Function	r_core_autocomplete_remove	3716:0:112039:112943							
ANR	1115659	FunctionDef	"r_core_autocomplete_remove (RCoreAutocomplete * parent , const char * cmd)"		1115658	0					
ANR	1115660	CompoundStatement		3716:82:112121:112943	1115658	0					
ANR	1115661	IfStatement	if ( ! parent || ! cmd )		1115658	0					
ANR	1115662	Condition	! parent || ! cmd	3717:5:112128:112142	1115658	0	True				
ANR	1115663	OrExpression	! parent || ! cmd		1115658	0		||			
ANR	1115664	UnaryOperationExpression	! parent		1115658	0					
ANR	1115665	UnaryOperator	!		1115658	0					
ANR	1115666	Identifier	parent		1115658	1					
ANR	1115667	UnaryOperationExpression	! cmd		1115658	1					
ANR	1115668	UnaryOperator	!		1115658	0					
ANR	1115669	Identifier	cmd		1115658	1					
ANR	1115670	CompoundStatement		2:22:23:23	1115658	1					
ANR	1115671	ReturnStatement	return false ;	3718:2:112149:112161	1115658	0	True				
ANR	1115672	Identifier	false		1115658	0					
ANR	1115673	IdentifierDeclStatement	"int i , j ;"	3720:1:112167:112175	1115658	1	True				
ANR	1115674	IdentifierDecl	i		1115658	0					
ANR	1115675	IdentifierDeclType	int		1115658	0					
ANR	1115676	Identifier	i		1115658	1					
ANR	1115677	IdentifierDecl	j		1115658	1					
ANR	1115678	IdentifierDeclType	int		1115658	0					
ANR	1115679	Identifier	j		1115658	1					
ANR	1115680	ForStatement	for ( i = 0 ; i < parent -> n_subcmds ; i ++ )		1115658	2					
ANR	1115681	ForInit	i = 0 ;	3721:6:112183:112188	1115658	0	True				
ANR	1115682	AssignmentExpression	i = 0		1115658	0		=			
ANR	1115683	Identifier	i		1115658	0					
ANR	1115684	PrimaryExpression	0		1115658	1					
ANR	1115685	Condition	i < parent -> n_subcmds	3721:13:112190:112210	1115658	1	True				
ANR	1115686	RelationalExpression	i < parent -> n_subcmds		1115658	0		<			
ANR	1115687	Identifier	i		1115658	0					
ANR	1115688	PtrMemberAccess	parent -> n_subcmds		1115658	1					
ANR	1115689	Identifier	parent		1115658	0					
ANR	1115690	Identifier	n_subcmds		1115658	1					
ANR	1115691	PostIncDecOperationExpression	i ++	3721:36:112213:112215	1115658	2	True				
ANR	1115692	Identifier	i		1115658	0					
ANR	1115693	IncDec	++		1115658	1					
ANR	1115694	CompoundStatement		7:2:100:142	1115658	3					
ANR	1115695	IdentifierDeclStatement	RCoreAutocomplete * ac = parent -> subcmds [ i ] ;	3722:2:112222:112264	1115658	0	True				
ANR	1115696	IdentifierDecl	* ac = parent -> subcmds [ i ]		1115658	0					
ANR	1115697	IdentifierDeclType	RCoreAutocomplete *		1115658	0					
ANR	1115698	Identifier	ac		1115658	1					
ANR	1115699	AssignmentExpression	* ac = parent -> subcmds [ i ]		1115658	2		=			
ANR	1115700	Identifier	ac		1115658	0					
ANR	1115701	ArrayIndexing	parent -> subcmds [ i ]		1115658	1					
ANR	1115702	PtrMemberAccess	parent -> subcmds		1115658	0					
ANR	1115703	Identifier	parent		1115658	0					
ANR	1115704	Identifier	subcmds		1115658	1					
ANR	1115705	Identifier	i		1115658	1					
ANR	1115706	IfStatement	if ( ac -> locked )		1115658	1					
ANR	1115707	Condition	ac -> locked	3723:6:112272:112281	1115658	0	True				
ANR	1115708	PtrMemberAccess	ac -> locked		1115658	0					
ANR	1115709	Identifier	ac		1115658	0					
ANR	1115710	Identifier	locked		1115658	1					
ANR	1115711	CompoundStatement		8:18:162:162	1115658	1					
ANR	1115712	ContinueStatement	continue ;	3724:3:112289:112297	1115658	0	True				
ANR	1115713	IfStatement	"if ( r_str_glob ( ac -> cmd , cmd ) )"		1115658	2					
ANR	1115714	Condition	"r_str_glob ( ac -> cmd , cmd )"	3727:6:112389:112413	1115658	0	True				
ANR	1115715	CallExpression	"r_str_glob ( ac -> cmd , cmd )"		1115658	0					
ANR	1115716	Callee	r_str_glob		1115658	0					
ANR	1115717	Identifier	r_str_glob		1115658	0					
ANR	1115718	ArgumentList	ac -> cmd		1115658	1					
ANR	1115719	Argument	ac -> cmd		1115658	0					
ANR	1115720	PtrMemberAccess	ac -> cmd		1115658	0					
ANR	1115721	Identifier	ac		1115658	0					
ANR	1115722	Identifier	cmd		1115658	1					
ANR	1115723	Argument	cmd		1115658	1					
ANR	1115724	Identifier	cmd		1115658	0					
ANR	1115725	CompoundStatement		18:3:467:577	1115658	1					
ANR	1115726	ForStatement	for ( j = i + 1 ; j < parent -> n_subcmds ; ++ j )		1115658	0					
ANR	1115727	ForInit	j = i + 1 ;	3728:8:112426:112435	1115658	0	True				
ANR	1115728	AssignmentExpression	j = i + 1		1115658	0		=			
ANR	1115729	Identifier	j		1115658	0					
ANR	1115730	AdditiveExpression	i + 1		1115658	1		+			
ANR	1115731	Identifier	i		1115658	0					
ANR	1115732	PrimaryExpression	1		1115658	1					
ANR	1115733	Condition	j < parent -> n_subcmds	3728:19:112437:112457	1115658	1	True				
ANR	1115734	RelationalExpression	j < parent -> n_subcmds		1115658	0		<			
ANR	1115735	Identifier	j		1115658	0					
ANR	1115736	PtrMemberAccess	parent -> n_subcmds		1115658	1					
ANR	1115737	Identifier	parent		1115658	0					
ANR	1115738	Identifier	n_subcmds		1115658	1					
ANR	1115739	UnaryExpression	++ j	3728:42:112460:112462	1115658	2	True				
ANR	1115740	IncDec	++		1115658	0					
ANR	1115741	Identifier	j		1115658	1					
ANR	1115742	CompoundStatement		13:47:343:343	1115658	3					
ANR	1115743	ExpressionStatement	parent -> subcmds [ j - 1 ] = parent -> subcmds [ j ]	3729:4:112471:112514	1115658	0	True				
ANR	1115744	AssignmentExpression	parent -> subcmds [ j - 1 ] = parent -> subcmds [ j ]		1115658	0		=			
ANR	1115745	ArrayIndexing	parent -> subcmds [ j - 1 ]		1115658	0					
ANR	1115746	PtrMemberAccess	parent -> subcmds		1115658	0					
ANR	1115747	Identifier	parent		1115658	0					
ANR	1115748	Identifier	subcmds		1115658	1					
ANR	1115749	AdditiveExpression	j - 1		1115658	1		-			
ANR	1115750	Identifier	j		1115658	0					
ANR	1115751	PrimaryExpression	1		1115658	1					
ANR	1115752	ArrayIndexing	parent -> subcmds [ j ]		1115658	1					
ANR	1115753	PtrMemberAccess	parent -> subcmds		1115658	0					
ANR	1115754	Identifier	parent		1115658	0					
ANR	1115755	Identifier	subcmds		1115658	1					
ANR	1115756	Identifier	j		1115658	1					
ANR	1115757	ExpressionStatement	parent -> subcmds [ j ] = NULL	3730:4:112520:112545	1115658	1	True				
ANR	1115758	AssignmentExpression	parent -> subcmds [ j ] = NULL		1115658	0		=			
ANR	1115759	ArrayIndexing	parent -> subcmds [ j ]		1115658	0					
ANR	1115760	PtrMemberAccess	parent -> subcmds		1115658	0					
ANR	1115761	Identifier	parent		1115658	0					
ANR	1115762	Identifier	subcmds		1115658	1					
ANR	1115763	Identifier	j		1115658	1					
ANR	1115764	Identifier	NULL		1115658	1					
ANR	1115765	ExpressionStatement	r_core_autocomplete_free ( ac )	3732:3:112555:112584	1115658	1	True				
ANR	1115766	CallExpression	r_core_autocomplete_free ( ac )		1115658	0					
ANR	1115767	Callee	r_core_autocomplete_free		1115658	0					
ANR	1115768	Identifier	r_core_autocomplete_free		1115658	0					
ANR	1115769	ArgumentList	ac		1115658	1					
ANR	1115770	Argument	ac		1115658	0					
ANR	1115771	Identifier	ac		1115658	0					
ANR	1115772	IdentifierDeclStatement	"RCoreAutocomplete * * updated = realloc ( parent -> subcmds , ( parent -> n_subcmds - 1 ) * sizeof ( RCoreAutocomplete * ) ) ;"	3733:3:112589:112699	1115658	2	True				
ANR	1115773	IdentifierDecl	"* * updated = realloc ( parent -> subcmds , ( parent -> n_subcmds - 1 ) * sizeof ( RCoreAutocomplete * ) )"		1115658	0					
ANR	1115774	IdentifierDeclType	RCoreAutocomplete * *		1115658	0					
ANR	1115775	Identifier	updated		1115658	1					
ANR	1115776	AssignmentExpression	"* * updated = realloc ( parent -> subcmds , ( parent -> n_subcmds - 1 ) * sizeof ( RCoreAutocomplete * ) )"		1115658	2		=			
ANR	1115777	Identifier	updated		1115658	0					
ANR	1115778	CallExpression	"realloc ( parent -> subcmds , ( parent -> n_subcmds - 1 ) * sizeof ( RCoreAutocomplete * ) )"		1115658	1					
ANR	1115779	Callee	realloc		1115658	0					
ANR	1115780	Identifier	realloc		1115658	0					
ANR	1115781	ArgumentList	parent -> subcmds		1115658	1					
ANR	1115782	Argument	parent -> subcmds		1115658	0					
ANR	1115783	PtrMemberAccess	parent -> subcmds		1115658	0					
ANR	1115784	Identifier	parent		1115658	0					
ANR	1115785	Identifier	subcmds		1115658	1					
ANR	1115786	Argument	( parent -> n_subcmds - 1 ) * sizeof ( RCoreAutocomplete * )		1115658	1					
ANR	1115787	MultiplicativeExpression	( parent -> n_subcmds - 1 ) * sizeof ( RCoreAutocomplete * )		1115658	0		*			
ANR	1115788	AdditiveExpression	parent -> n_subcmds - 1		1115658	0		-			
ANR	1115789	PtrMemberAccess	parent -> n_subcmds		1115658	0					
ANR	1115790	Identifier	parent		1115658	0					
ANR	1115791	Identifier	n_subcmds		1115658	1					
ANR	1115792	PrimaryExpression	1		1115658	1					
ANR	1115793	SizeofExpression	sizeof ( RCoreAutocomplete * )		1115658	1					
ANR	1115794	Sizeof	sizeof		1115658	0					
ANR	1115795	SizeofOperand	RCoreAutocomplete *		1115658	1					
ANR	1115796	IfStatement	if ( ! updated && ( parent -> n_subcmds - 1 ) > 0 )		1115658	3					
ANR	1115797	Condition	! updated && ( parent -> n_subcmds - 1 ) > 0	3734:7:112708:112746	1115658	0	True				
ANR	1115798	AndExpression	! updated && ( parent -> n_subcmds - 1 ) > 0		1115658	0		&&			
ANR	1115799	UnaryOperationExpression	! updated		1115658	0					
ANR	1115800	UnaryOperator	!		1115658	0					
ANR	1115801	Identifier	updated		1115658	1					
ANR	1115802	RelationalExpression	( parent -> n_subcmds - 1 ) > 0		1115658	1		>			
ANR	1115803	AdditiveExpression	parent -> n_subcmds - 1		1115658	0		-			
ANR	1115804	PtrMemberAccess	parent -> n_subcmds		1115658	0					
ANR	1115805	Identifier	parent		1115658	0					
ANR	1115806	Identifier	n_subcmds		1115658	1					
ANR	1115807	PrimaryExpression	1		1115658	1					
ANR	1115808	PrimaryExpression	0		1115658	1					
ANR	1115809	CompoundStatement		19:48:627:627	1115658	1					
ANR	1115810	ExpressionStatement	"eprintf ( ""Something really bad has happen.. this should never ever happen..\\n"" )"	3735:4:112755:112834	1115658	0	True				
ANR	1115811	CallExpression	"eprintf ( ""Something really bad has happen.. this should never ever happen..\\n"" )"		1115658	0					
ANR	1115812	Callee	eprintf		1115658	0					
ANR	1115813	Identifier	eprintf		1115658	0					
ANR	1115814	ArgumentList	"""Something really bad has happen.. this should never ever happen..\\n"""		1115658	1					
ANR	1115815	Argument	"""Something really bad has happen.. this should never ever happen..\\n"""		1115658	0					
ANR	1115816	PrimaryExpression	"""Something really bad has happen.. this should never ever happen..\\n"""		1115658	0					
ANR	1115817	ReturnStatement	return false ;	3736:4:112840:112852	1115658	1	True				
ANR	1115818	Identifier	false		1115658	0					
ANR	1115819	ExpressionStatement	parent -> subcmds = updated	3738:3:112862:112887	1115658	4	True				
ANR	1115820	AssignmentExpression	parent -> subcmds = updated		1115658	0		=			
ANR	1115821	PtrMemberAccess	parent -> subcmds		1115658	0					
ANR	1115822	Identifier	parent		1115658	0					
ANR	1115823	Identifier	subcmds		1115658	1					
ANR	1115824	Identifier	updated		1115658	1					
ANR	1115825	ExpressionStatement	parent -> n_subcmds --	3739:3:112892:112911	1115658	5	True				
ANR	1115826	PostIncDecOperationExpression	parent -> n_subcmds --		1115658	0					
ANR	1115827	PtrMemberAccess	parent -> n_subcmds		1115658	0					
ANR	1115828	Identifier	parent		1115658	0					
ANR	1115829	Identifier	n_subcmds		1115658	1					
ANR	1115830	IncDec	--		1115658	1					
ANR	1115831	ExpressionStatement	i --	3740:3:112916:112919	1115658	6	True				
ANR	1115832	PostIncDecOperationExpression	i --		1115658	0					
ANR	1115833	Identifier	i		1115658	0					
ANR	1115834	IncDec	--		1115658	1					
ANR	1115835	ReturnStatement	return false ;	3743:1:112929:112941	1115658	3	True				
ANR	1115836	Identifier	false		1115658	0					
ANR	1115837	ReturnType	R_API bool		1115658	1					
ANR	1115838	Identifier	r_core_autocomplete_remove		1115658	2					
ANR	1115839	ParameterList	"RCoreAutocomplete * parent , const char * cmd"		1115658	3					
ANR	1115840	Parameter	RCoreAutocomplete * parent	3716:38:112077:112101	1115658	0	True				
ANR	1115841	ParameterType	RCoreAutocomplete *		1115658	0					
ANR	1115842	Identifier	parent		1115658	1					
ANR	1115843	Parameter	const char * cmd	3716:65:112104:112118	1115658	1	True				
ANR	1115844	ParameterType	const char *		1115658	0					
ANR	1115845	Identifier	cmd		1115658	1					
ANR	1115846	CFGEntryNode	ENTRY		1115658		True				
ANR	1115847	CFGExitNode	EXIT		1115658		True				
ANR	1115848	Symbol	parent		1115658						
ANR	1115849	Symbol	ac		1115658						
ANR	1115850	Symbol	* parent		1115658						
ANR	1115851	Symbol	NULL		1115658						
ANR	1115852	Symbol	ac -> cmd		1115658						
ANR	1115853	Symbol	ac -> locked		1115658						
ANR	1115854	Symbol	false		1115658						
ANR	1115855	Symbol	* * parent		1115658						
ANR	1115856	Symbol	i		1115658						
ANR	1115857	Symbol	j		1115658						
ANR	1115858	Symbol	* ac		1115658						
ANR	1115859	Symbol	realloc		1115658						
ANR	1115860	Symbol	* parent -> subcmds		1115658						
ANR	1115861	Symbol	* i		1115658						
ANR	1115862	Symbol	r_str_glob		1115658						
ANR	1115863	Symbol	* j		1115658						
ANR	1115864	Symbol	parent -> subcmds		1115658						
ANR	1115865	Symbol	cmd		1115658						
ANR	1115866	Symbol	parent -> n_subcmds		1115658						
ANR	1115867	Symbol	updated		1115658						
