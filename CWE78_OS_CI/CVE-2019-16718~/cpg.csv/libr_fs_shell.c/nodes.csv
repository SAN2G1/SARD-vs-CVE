command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4807979	File	data/converged/CVE-2019-16718~_radare2/libr_fs_shell.c								
ANR	4807980	Function	handlePipes	7:0:107:717							
ANR	4807981	FunctionDef	"handlePipes (RFS * fs , char * msg , const ut8 * data , const char * cwd)"		4807980	0					
ANR	4807982	CompoundStatement		7:78:185:717	4807980	0					
ANR	4807983	IdentifierDeclStatement	"char * red = strchr ( msg , '>' ) ;"	8:1:188:217	4807980	0	True				
ANR	4807984	IdentifierDecl	"* red = strchr ( msg , '>' )"		4807980	0					
ANR	4807985	IdentifierDeclType	char *		4807980	0					
ANR	4807986	Identifier	red		4807980	1					
ANR	4807987	AssignmentExpression	"* red = strchr ( msg , '>' )"		4807980	2		=			
ANR	4807988	Identifier	red		4807980	0					
ANR	4807989	CallExpression	"strchr ( msg , '>' )"		4807980	1					
ANR	4807990	Callee	strchr		4807980	0					
ANR	4807991	Identifier	strchr		4807980	0					
ANR	4807992	ArgumentList	msg		4807980	1					
ANR	4807993	Argument	msg		4807980	0					
ANR	4807994	Identifier	msg		4807980	0					
ANR	4807995	Argument	'>'		4807980	1					
ANR	4807996	PrimaryExpression	'>'		4807980	0					
ANR	4807997	IfStatement	if ( red )		4807980	1					
ANR	4807998	Condition	red	9:5:224:226	4807980	0	True				
ANR	4807999	Identifier	red		4807980	0					
ANR	4808000	CompoundStatement		13:2:223:261	4807980	1					
ANR	4808001	ExpressionStatement	* red ++ = 0	10:2:233:243	4807980	0	True				
ANR	4808002	AssignmentExpression	* red ++ = 0		4807980	0		=			
ANR	4808003	UnaryOperationExpression	* red ++		4807980	0					
ANR	4808004	UnaryOperator	*		4807980	0					
ANR	4808005	PostIncDecOperationExpression	red ++		4807980	1					
ANR	4808006	Identifier	red		4807980	0					
ANR	4808007	IncDec	++		4807980	1					
ANR	4808008	PrimaryExpression	0		4807980	1					
ANR	4808009	ExpressionStatement	r_str_trim ( msg )	11:2:247:263	4807980	1	True				
ANR	4808010	CallExpression	r_str_trim ( msg )		4807980	0					
ANR	4808011	Callee	r_str_trim		4807980	0					
ANR	4808012	Identifier	r_str_trim		4807980	0					
ANR	4808013	ArgumentList	msg		4807980	1					
ANR	4808014	Argument	msg		4807980	0					
ANR	4808015	Identifier	msg		4807980	0					
ANR	4808016	ExpressionStatement	red = r_str_trim_dup ( red )	12:2:267:293	4807980	2	True				
ANR	4808017	AssignmentExpression	red = r_str_trim_dup ( red )		4807980	0		=			
ANR	4808018	Identifier	red		4807980	0					
ANR	4808019	CallExpression	r_str_trim_dup ( red )		4807980	1					
ANR	4808020	Callee	r_str_trim_dup		4807980	0					
ANR	4808021	Identifier	r_str_trim_dup		4807980	0					
ANR	4808022	ArgumentList	red		4807980	1					
ANR	4808023	Argument	red		4807980	0					
ANR	4808024	Identifier	red		4807980	0					
ANR	4808025	IfStatement	if ( * red != '/' )		4807980	3					
ANR	4808026	Condition	* red != '/'	13:6:301:311	4807980	0	True				
ANR	4808027	EqualityExpression	* red != '/'		4807980	0		!=			
ANR	4808028	UnaryOperationExpression	* red		4807980	0					
ANR	4808029	UnaryOperator	*		4807980	0					
ANR	4808030	Identifier	red		4807980	1					
ANR	4808031	PrimaryExpression	'/'		4807980	1					
ANR	4808032	CompoundStatement		8:3:133:175	4807980	1					
ANR	4808033	IdentifierDeclStatement	"char * blu = r_str_newf ( ""%s/%s"" , cwd , red ) ;"	14:3:319:361	4807980	0	True				
ANR	4808034	IdentifierDecl	"* blu = r_str_newf ( ""%s/%s"" , cwd , red )"		4807980	0					
ANR	4808035	IdentifierDeclType	char *		4807980	0					
ANR	4808036	Identifier	blu		4807980	1					
ANR	4808037	AssignmentExpression	"* blu = r_str_newf ( ""%s/%s"" , cwd , red )"		4807980	2		=			
ANR	4808038	Identifier	blu		4807980	0					
ANR	4808039	CallExpression	"r_str_newf ( ""%s/%s"" , cwd , red )"		4807980	1					
ANR	4808040	Callee	r_str_newf		4807980	0					
ANR	4808041	Identifier	r_str_newf		4807980	0					
ANR	4808042	ArgumentList	"""%s/%s"""		4807980	1					
ANR	4808043	Argument	"""%s/%s"""		4807980	0					
ANR	4808044	PrimaryExpression	"""%s/%s"""		4807980	0					
ANR	4808045	Argument	cwd		4807980	1					
ANR	4808046	Identifier	cwd		4807980	0					
ANR	4808047	Argument	red		4807980	2					
ANR	4808048	Identifier	red		4807980	0					
ANR	4808049	ExpressionStatement	free ( red )	15:3:366:376	4807980	1	True				
ANR	4808050	CallExpression	free ( red )		4807980	0					
ANR	4808051	Callee	free		4807980	0					
ANR	4808052	Identifier	free		4807980	0					
ANR	4808053	ArgumentList	red		4807980	1					
ANR	4808054	Argument	red		4807980	0					
ANR	4808055	Identifier	red		4807980	0					
ANR	4808056	ExpressionStatement	red = blu	16:3:381:390	4807980	2	True				
ANR	4808057	AssignmentExpression	red = blu		4807980	0		=			
ANR	4808058	Identifier	red		4807980	0					
ANR	4808059	Identifier	blu		4807980	1					
ANR	4808060	ElseStatement	else		4807980	0					
ANR	4808061	CompoundStatement		11:9:215:215	4807980	0					
ANR	4808062	IdentifierDeclStatement	"RFSFile * f = r_fs_open ( fs , red , true ) ;"	19:2:409:447	4807980	4	True				
ANR	4808063	IdentifierDecl	"* f = r_fs_open ( fs , red , true )"		4807980	0					
ANR	4808064	IdentifierDeclType	RFSFile *		4807980	0					
ANR	4808065	Identifier	f		4807980	1					
ANR	4808066	AssignmentExpression	"* f = r_fs_open ( fs , red , true )"		4807980	2		=			
ANR	4808067	Identifier	f		4807980	0					
ANR	4808068	CallExpression	"r_fs_open ( fs , red , true )"		4807980	1					
ANR	4808069	Callee	r_fs_open		4807980	0					
ANR	4808070	Identifier	r_fs_open		4807980	0					
ANR	4808071	ArgumentList	fs		4807980	1					
ANR	4808072	Argument	fs		4807980	0					
ANR	4808073	Identifier	fs		4807980	0					
ANR	4808074	Argument	red		4807980	1					
ANR	4808075	Identifier	red		4807980	0					
ANR	4808076	Argument	true		4807980	2					
ANR	4808077	Identifier	true		4807980	0					
ANR	4808078	IfStatement	if ( ! f )		4807980	5					
ANR	4808079	Condition	! f	20:6:455:456	4807980	0	True				
ANR	4808080	UnaryOperationExpression	! f		4807980	0					
ANR	4808081	UnaryOperator	!		4807980	0					
ANR	4808082	Identifier	f		4807980	1					
ANR	4808083	CompoundStatement		14:10:273:273	4807980	1					
ANR	4808084	ExpressionStatement	"eprintf ( ""Cannot open %s for writing\\n"" , red )"	21:3:464:509	4807980	0	True				
ANR	4808085	CallExpression	"eprintf ( ""Cannot open %s for writing\\n"" , red )"		4807980	0					
ANR	4808086	Callee	eprintf		4807980	0					
ANR	4808087	Identifier	eprintf		4807980	0					
ANR	4808088	ArgumentList	"""Cannot open %s for writing\\n"""		4807980	1					
ANR	4808089	Argument	"""Cannot open %s for writing\\n"""		4807980	0					
ANR	4808090	PrimaryExpression	"""Cannot open %s for writing\\n"""		4807980	0					
ANR	4808091	Argument	red		4807980	1					
ANR	4808092	Identifier	red		4807980	0					
ANR	4808093	ExpressionStatement	free ( red )	22:3:514:524	4807980	1	True				
ANR	4808094	CallExpression	free ( red )		4807980	0					
ANR	4808095	Callee	free		4807980	0					
ANR	4808096	Identifier	free		4807980	0					
ANR	4808097	ArgumentList	red		4807980	1					
ANR	4808098	Argument	red		4807980	0					
ANR	4808099	Identifier	red		4807980	0					
ANR	4808100	ReturnStatement	return true ;	23:3:529:540	4807980	2	True				
ANR	4808101	Identifier	true		4807980	0					
ANR	4808102	ExpressionStatement	"r_fs_write ( fs , f , 0 , data == NULL ? ( const ut8 * ) msg : data , strlen ( msg ) )"	25:2:548:624	4807980	6	True				
ANR	4808103	CallExpression	"r_fs_write ( fs , f , 0 , data == NULL ? ( const ut8 * ) msg : data , strlen ( msg ) )"		4807980	0					
ANR	4808104	Callee	r_fs_write		4807980	0					
ANR	4808105	Identifier	r_fs_write		4807980	0					
ANR	4808106	ArgumentList	fs		4807980	1					
ANR	4808107	Argument	fs		4807980	0					
ANR	4808108	Identifier	fs		4807980	0					
ANR	4808109	Argument	f		4807980	1					
ANR	4808110	Identifier	f		4807980	0					
ANR	4808111	Argument	0		4807980	2					
ANR	4808112	PrimaryExpression	0		4807980	0					
ANR	4808113	Argument	data == NULL ? ( const ut8 * ) msg : data		4807980	3					
ANR	4808114	ConditionalExpression	data == NULL ? ( const ut8 * ) msg : data		4807980	0					
ANR	4808115	Condition	data == NULL		4807980	0					
ANR	4808116	EqualityExpression	data == NULL		4807980	0		==			
ANR	4808117	Identifier	data		4807980	0					
ANR	4808118	Identifier	NULL		4807980	1					
ANR	4808119	CastExpression	( const ut8 * ) msg		4807980	1					
ANR	4808120	CastTarget	const ut8 *		4807980	0					
ANR	4808121	Identifier	msg		4807980	1					
ANR	4808122	Identifier	data		4807980	2					
ANR	4808123	Argument	strlen ( msg )		4807980	4					
ANR	4808124	CallExpression	strlen ( msg )		4807980	0					
ANR	4808125	Callee	strlen		4807980	0					
ANR	4808126	Identifier	strlen		4807980	0					
ANR	4808127	ArgumentList	msg		4807980	1					
ANR	4808128	Argument	msg		4807980	0					
ANR	4808129	Identifier	msg		4807980	0					
ANR	4808130	ExpressionStatement	free ( red )	26:2:628:638	4807980	7	True				
ANR	4808131	CallExpression	free ( red )		4807980	0					
ANR	4808132	Callee	free		4807980	0					
ANR	4808133	Identifier	free		4807980	0					
ANR	4808134	ArgumentList	red		4807980	1					
ANR	4808135	Argument	red		4807980	0					
ANR	4808136	Identifier	red		4807980	0					
ANR	4808137	ExpressionStatement	"r_fs_close ( fs , f )"	27:2:642:660	4807980	8	True				
ANR	4808138	CallExpression	"r_fs_close ( fs , f )"		4807980	0					
ANR	4808139	Callee	r_fs_close		4807980	0					
ANR	4808140	Identifier	r_fs_close		4807980	0					
ANR	4808141	ArgumentList	fs		4807980	1					
ANR	4808142	Argument	fs		4807980	0					
ANR	4808143	Identifier	fs		4807980	0					
ANR	4808144	Argument	f		4807980	1					
ANR	4808145	Identifier	f		4807980	0					
ANR	4808146	ExpressionStatement	r_fs_file_free ( f )	28:2:664:682	4807980	9	True				
ANR	4808147	CallExpression	r_fs_file_free ( f )		4807980	0					
ANR	4808148	Callee	r_fs_file_free		4807980	0					
ANR	4808149	Identifier	r_fs_file_free		4807980	0					
ANR	4808150	ArgumentList	f		4807980	1					
ANR	4808151	Argument	f		4807980	0					
ANR	4808152	Identifier	f		4807980	0					
ANR	4808153	ReturnStatement	return true ;	29:2:686:697	4807980	10	True				
ANR	4808154	Identifier	true		4807980	0					
ANR	4808155	ReturnStatement	return false ;	31:1:703:715	4807980	2	True				
ANR	4808156	Identifier	false		4807980	0					
ANR	4808157	ReturnType	static bool		4807980	1					
ANR	4808158	Identifier	handlePipes		4807980	2					
ANR	4808159	ParameterList	"RFS * fs , char * msg , const ut8 * data , const char * cwd"		4807980	3					
ANR	4808160	Parameter	RFS * fs	7:24:131:137	4807980	0	True				
ANR	4808161	ParameterType	RFS *		4807980	0					
ANR	4808162	Identifier	fs		4807980	1					
ANR	4808163	Parameter	char * msg	7:33:140:148	4807980	1	True				
ANR	4808164	ParameterType	char *		4807980	0					
ANR	4808165	Identifier	msg		4807980	1					
ANR	4808166	Parameter	const ut8 * data	7:44:151:165	4807980	2	True				
ANR	4808167	ParameterType	const ut8 *		4807980	0					
ANR	4808168	Identifier	data		4807980	1					
ANR	4808169	Parameter	const char * cwd	7:61:168:182	4807980	3	True				
ANR	4808170	ParameterType	const char *		4807980	0					
ANR	4808171	Identifier	cwd		4807980	1					
ANR	4808172	CFGEntryNode	ENTRY		4807980		True				
ANR	4808173	CFGExitNode	EXIT		4807980		True				
ANR	4808174	Symbol	msg		4807980						
ANR	4808175	Symbol	NULL		4807980						
ANR	4808176	Symbol	data		4807980						
ANR	4808177	Symbol	f		4807980						
ANR	4808178	Symbol	false		4807980						
ANR	4808179	Symbol	strchr		4807980						
ANR	4808180	Symbol	blu		4807980						
ANR	4808181	Symbol	r_str_newf		4807980						
ANR	4808182	Symbol	fs		4807980						
ANR	4808183	Symbol	r_str_trim_dup		4807980						
ANR	4808184	Symbol	red		4807980						
ANR	4808185	Symbol	cwd		4807980						
ANR	4808186	Symbol	strlen		4807980						
ANR	4808187	Symbol	true		4807980						
ANR	4808188	Symbol	* red ++		4807980						
ANR	4808189	Symbol	* red		4807980						
ANR	4808190	Symbol	r_fs_open		4807980						
ANR	4808191	Function	r_fs_shell_prompt	34:0:720:7061							
ANR	4808192	FunctionDef	"r_fs_shell_prompt (RFSShell * shell , RFS * fs , const char * root)"		4808191	0					
ANR	4808193	CompoundStatement		34:72:792:7061	4808191	0					
ANR	4808194	IdentifierDeclStatement	char buf [ PROMPT_PATH_BUFSIZE ] ;	35:1:795:824	4808191	0	True				
ANR	4808195	IdentifierDecl	buf [ PROMPT_PATH_BUFSIZE ]		4808191	0					
ANR	4808196	IdentifierDeclType	char [ PROMPT_PATH_BUFSIZE ]		4808191	0					
ANR	4808197	Identifier	buf		4808191	1					
ANR	4808198	Identifier	PROMPT_PATH_BUFSIZE		4808191	2					
ANR	4808199	IdentifierDeclStatement	char path [ PROMPT_PATH_BUFSIZE ] ;	36:1:827:857	4808191	1	True				
ANR	4808200	IdentifierDecl	path [ PROMPT_PATH_BUFSIZE ]		4808191	0					
ANR	4808201	IdentifierDeclType	char [ PROMPT_PATH_BUFSIZE ]		4808191	0					
ANR	4808202	Identifier	path		4808191	1					
ANR	4808203	Identifier	PROMPT_PATH_BUFSIZE		4808191	2					
ANR	4808204	IdentifierDeclStatement	char prompt [ PROMPT_PATH_BUFSIZE ] ;	37:1:860:892	4808191	2	True				
ANR	4808205	IdentifierDecl	prompt [ PROMPT_PATH_BUFSIZE ]		4808191	0					
ANR	4808206	IdentifierDeclType	char [ PROMPT_PATH_BUFSIZE ]		4808191	0					
ANR	4808207	Identifier	prompt		4808191	1					
ANR	4808208	Identifier	PROMPT_PATH_BUFSIZE		4808191	2					
ANR	4808209	IdentifierDeclStatement	char str [ 2048 ] ;	38:1:895:909	4808191	3	True				
ANR	4808210	IdentifierDecl	str [ 2048 ]		4808191	0					
ANR	4808211	IdentifierDeclType	char [ 2048 ]		4808191	0					
ANR	4808212	Identifier	str		4808191	1					
ANR	4808213	PrimaryExpression	2048		4808191	2					
ANR	4808214	IdentifierDeclStatement	char * input ;	39:1:912:923	4808191	4	True				
ANR	4808215	IdentifierDecl	* input		4808191	0					
ANR	4808216	IdentifierDeclType	char *		4808191	0					
ANR	4808217	Identifier	input		4808191	1					
ANR	4808218	IdentifierDeclStatement	const char * ptr ;	40:1:926:941	4808191	5	True				
ANR	4808219	IdentifierDecl	* ptr		4808191	0					
ANR	4808220	IdentifierDeclType	const char *		4808191	0					
ANR	4808221	Identifier	ptr		4808191	1					
ANR	4808222	IdentifierDeclStatement	RList * list = NULL ;	41:1:944:962	4808191	6	True				
ANR	4808223	IdentifierDecl	* list = NULL		4808191	0					
ANR	4808224	IdentifierDeclType	RList *		4808191	0					
ANR	4808225	Identifier	list		4808191	1					
ANR	4808226	AssignmentExpression	* list = NULL		4808191	2		=			
ANR	4808227	Identifier	NULL		4808191	0					
ANR	4808228	Identifier	NULL		4808191	1					
ANR	4808229	IdentifierDeclStatement	RListIter * iter ;	42:1:965:980	4808191	7	True				
ANR	4808230	IdentifierDecl	* iter		4808191	0					
ANR	4808231	IdentifierDeclType	RListIter *		4808191	0					
ANR	4808232	Identifier	iter		4808191	1					
ANR	4808233	IdentifierDeclStatement	RFSFile * file = NULL ;	43:1:983:1003	4808191	8	True				
ANR	4808234	IdentifierDecl	* file = NULL		4808191	0					
ANR	4808235	IdentifierDeclType	RFSFile *		4808191	0					
ANR	4808236	Identifier	file		4808191	1					
ANR	4808237	AssignmentExpression	* file = NULL		4808191	2		=			
ANR	4808238	Identifier	NULL		4808191	0					
ANR	4808239	Identifier	NULL		4808191	1					
ANR	4808240	IfStatement	if ( root && * root )		4808191	9					
ANR	4808241	Condition	root && * root	45:5:1011:1023	4808191	0	True				
ANR	4808242	AndExpression	root && * root		4808191	0		&&			
ANR	4808243	Identifier	root		4808191	0					
ANR	4808244	UnaryOperationExpression	* root		4808191	1					
ANR	4808245	UnaryOperator	*		4808191	0					
ANR	4808246	Identifier	root		4808191	1					
ANR	4808247	CompoundStatement		12:20:233:233	4808191	1					
ANR	4808248	ExpressionStatement	"strncpy ( buf , root , sizeof ( buf ) - 1 )"	46:2:1030:1067	4808191	0	True				
ANR	4808249	CallExpression	"strncpy ( buf , root , sizeof ( buf ) - 1 )"		4808191	0					
ANR	4808250	Callee	strncpy		4808191	0					
ANR	4808251	Identifier	strncpy		4808191	0					
ANR	4808252	ArgumentList	buf		4808191	1					
ANR	4808253	Argument	buf		4808191	0					
ANR	4808254	Identifier	buf		4808191	0					
ANR	4808255	Argument	root		4808191	1					
ANR	4808256	Identifier	root		4808191	0					
ANR	4808257	Argument	sizeof ( buf ) - 1		4808191	2					
ANR	4808258	AdditiveExpression	sizeof ( buf ) - 1		4808191	0		-			
ANR	4808259	SizeofExpression	sizeof ( buf )		4808191	0					
ANR	4808260	Sizeof	sizeof		4808191	0					
ANR	4808261	SizeofOperand	buf		4808191	1					
ANR	4808262	PrimaryExpression	1		4808191	1					
ANR	4808263	ExpressionStatement	r_str_trim_path ( buf )	47:2:1071:1092	4808191	1	True				
ANR	4808264	CallExpression	r_str_trim_path ( buf )		4808191	0					
ANR	4808265	Callee	r_str_trim_path		4808191	0					
ANR	4808266	Identifier	r_str_trim_path		4808191	0					
ANR	4808267	ArgumentList	buf		4808191	1					
ANR	4808268	Argument	buf		4808191	0					
ANR	4808269	Identifier	buf		4808191	0					
ANR	4808270	ExpressionStatement	"list = r_fs_root ( fs , buf )"	48:2:1096:1122	4808191	2	True				
ANR	4808271	AssignmentExpression	"list = r_fs_root ( fs , buf )"		4808191	0		=			
ANR	4808272	Identifier	list		4808191	0					
ANR	4808273	CallExpression	"r_fs_root ( fs , buf )"		4808191	1					
ANR	4808274	Callee	r_fs_root		4808191	0					
ANR	4808275	Identifier	r_fs_root		4808191	0					
ANR	4808276	ArgumentList	fs		4808191	1					
ANR	4808277	Argument	fs		4808191	0					
ANR	4808278	Identifier	fs		4808191	0					
ANR	4808279	Argument	buf		4808191	1					
ANR	4808280	Identifier	buf		4808191	0					
ANR	4808281	IfStatement	if ( r_list_empty ( list ) )		4808191	3					
ANR	4808282	Condition	r_list_empty ( list )	49:6:1130:1148	4808191	0	True				
ANR	4808283	CallExpression	r_list_empty ( list )		4808191	0					
ANR	4808284	Callee	r_list_empty		4808191	0					
ANR	4808285	Identifier	r_list_empty		4808191	0					
ANR	4808286	ArgumentList	list		4808191	1					
ANR	4808287	Argument	list		4808191	0					
ANR	4808288	Identifier	list		4808191	0					
ANR	4808289	CompoundStatement		16:27:358:358	4808191	1					
ANR	4808290	ExpressionStatement	"printf ( ""Unknown root\\n"" )"	50:3:1156:1181	4808191	0	True				
ANR	4808291	CallExpression	"printf ( ""Unknown root\\n"" )"		4808191	0					
ANR	4808292	Callee	printf		4808191	0					
ANR	4808293	Identifier	printf		4808191	0					
ANR	4808294	ArgumentList	"""Unknown root\\n"""		4808191	1					
ANR	4808295	Argument	"""Unknown root\\n"""		4808191	0					
ANR	4808296	PrimaryExpression	"""Unknown root\\n"""		4808191	0					
ANR	4808297	ExpressionStatement	r_list_free ( list )	51:3:1186:1204	4808191	1	True				
ANR	4808298	CallExpression	r_list_free ( list )		4808191	0					
ANR	4808299	Callee	r_list_free		4808191	0					
ANR	4808300	Identifier	r_list_free		4808191	0					
ANR	4808301	ArgumentList	list		4808191	1					
ANR	4808302	Argument	list		4808191	0					
ANR	4808303	Identifier	list		4808191	0					
ANR	4808304	ReturnStatement	return false ;	52:3:1209:1221	4808191	2	True				
ANR	4808305	Identifier	false		4808191	0					
ANR	4808306	ExpressionStatement	"r_str_ncpy ( path , buf , sizeof ( path ) - 1 )"	54:2:1229:1270	4808191	4	True				
ANR	4808307	CallExpression	"r_str_ncpy ( path , buf , sizeof ( path ) - 1 )"		4808191	0					
ANR	4808308	Callee	r_str_ncpy		4808191	0					
ANR	4808309	Identifier	r_str_ncpy		4808191	0					
ANR	4808310	ArgumentList	path		4808191	1					
ANR	4808311	Argument	path		4808191	0					
ANR	4808312	Identifier	path		4808191	0					
ANR	4808313	Argument	buf		4808191	1					
ANR	4808314	Identifier	buf		4808191	0					
ANR	4808315	Argument	sizeof ( path ) - 1		4808191	2					
ANR	4808316	AdditiveExpression	sizeof ( path ) - 1		4808191	0		-			
ANR	4808317	SizeofExpression	sizeof ( path )		4808191	0					
ANR	4808318	Sizeof	sizeof		4808191	0					
ANR	4808319	SizeofOperand	path		4808191	1					
ANR	4808320	PrimaryExpression	1		4808191	1					
ANR	4808321	ElseStatement	else		4808191	0					
ANR	4808322	CompoundStatement		22:8:487:487	4808191	0					
ANR	4808323	ExpressionStatement	"strcpy ( path , ""/"" )"	56:2:1284:1302	4808191	0	True				
ANR	4808324	CallExpression	"strcpy ( path , ""/"" )"		4808191	0					
ANR	4808325	Callee	strcpy		4808191	0					
ANR	4808326	Identifier	strcpy		4808191	0					
ANR	4808327	ArgumentList	path		4808191	1					
ANR	4808328	Argument	path		4808191	0					
ANR	4808329	Identifier	path		4808191	0					
ANR	4808330	Argument	"""/"""		4808191	1					
ANR	4808331	PrimaryExpression	"""/"""		4808191	0					
ANR	4808332	ForStatement	for ( ; ; )		4808191	10					
ANR	4808333	CompoundStatement		26:10:525:525	4808191	0					
ANR	4808334	ExpressionStatement	"snprintf ( prompt , sizeof ( prompt ) , ""[%.*s]> "" , ( int ) sizeof ( prompt ) - 5 , path )"	60:2:1322:1400	4808191	0	True				
ANR	4808335	CallExpression	"snprintf ( prompt , sizeof ( prompt ) , ""[%.*s]> "" , ( int ) sizeof ( prompt ) - 5 , path )"		4808191	0					
ANR	4808336	Callee	snprintf		4808191	0					
ANR	4808337	Identifier	snprintf		4808191	0					
ANR	4808338	ArgumentList	prompt		4808191	1					
ANR	4808339	Argument	prompt		4808191	0					
ANR	4808340	Identifier	prompt		4808191	0					
ANR	4808341	Argument	sizeof ( prompt )		4808191	1					
ANR	4808342	SizeofExpression	sizeof ( prompt )		4808191	0					
ANR	4808343	Sizeof	sizeof		4808191	0					
ANR	4808344	SizeofOperand	prompt		4808191	1					
ANR	4808345	Argument	"""[%.*s]> """		4808191	2					
ANR	4808346	PrimaryExpression	"""[%.*s]> """		4808191	0					
ANR	4808347	Argument	( int ) sizeof ( prompt ) - 5		4808191	3					
ANR	4808348	AdditiveExpression	( int ) sizeof ( prompt ) - 5		4808191	0		-			
ANR	4808349	CastExpression	( int ) sizeof ( prompt )		4808191	0					
ANR	4808350	CastTarget	int		4808191	0					
ANR	4808351	SizeofExpression	sizeof ( prompt )		4808191	1					
ANR	4808352	Sizeof	sizeof		4808191	0					
ANR	4808353	SizeofOperand	prompt		4808191	1					
ANR	4808354	PrimaryExpression	5		4808191	1					
ANR	4808355	Argument	path		4808191	4					
ANR	4808356	Identifier	path		4808191	0					
ANR	4808357	IfStatement	if ( shell )		4808191	1					
ANR	4808358	Condition	shell	61:6:1408:1412	4808191	0	True				
ANR	4808359	Identifier	shell		4808191	0					
ANR	4808360	CompoundStatement		28:13:622:622	4808191	1					
ANR	4808361	ExpressionStatement	* shell -> cwd = strdup ( path )	62:3:1420:1447	4808191	0	True				
ANR	4808362	AssignmentExpression	* shell -> cwd = strdup ( path )		4808191	0		=			
ANR	4808363	UnaryOperationExpression	* shell -> cwd		4808191	0					
ANR	4808364	UnaryOperator	*		4808191	0					
ANR	4808365	PtrMemberAccess	shell -> cwd		4808191	1					
ANR	4808366	Identifier	shell		4808191	0					
ANR	4808367	Identifier	cwd		4808191	1					
ANR	4808368	CallExpression	strdup ( path )		4808191	1					
ANR	4808369	Callee	strdup		4808191	0					
ANR	4808370	Identifier	strdup		4808191	0					
ANR	4808371	ArgumentList	path		4808191	1					
ANR	4808372	Argument	path		4808191	0					
ANR	4808373	Identifier	path		4808191	0					
ANR	4808374	IfStatement	if ( shell -> set_prompt )		4808191	1					
ANR	4808375	Condition	shell -> set_prompt	63:7:1456:1472	4808191	0	True				
ANR	4808376	PtrMemberAccess	shell -> set_prompt		4808191	0					
ANR	4808377	Identifier	shell		4808191	0					
ANR	4808378	Identifier	set_prompt		4808191	1					
ANR	4808379	CompoundStatement		30:26:682:682	4808191	1					
ANR	4808380	ExpressionStatement	shell -> set_prompt ( prompt )	64:4:1481:1507	4808191	0	True				
ANR	4808381	CallExpression	shell -> set_prompt ( prompt )		4808191	0					
ANR	4808382	Callee	shell -> set_prompt		4808191	0					
ANR	4808383	PtrMemberAccess	shell -> set_prompt		4808191	0					
ANR	4808384	Identifier	shell		4808191	0					
ANR	4808385	Identifier	set_prompt		4808191	1					
ANR	4808386	ArgumentList	prompt		4808191	1					
ANR	4808387	Argument	prompt		4808191	0					
ANR	4808388	Identifier	prompt		4808191	0					
ANR	4808389	IfStatement	if ( shell -> readline )		4808191	2					
ANR	4808390	Condition	shell -> readline	66:7:1521:1535	4808191	0	True				
ANR	4808391	PtrMemberAccess	shell -> readline		4808191	0					
ANR	4808392	Identifier	shell		4808191	0					
ANR	4808393	Identifier	readline		4808191	1					
ANR	4808394	CompoundStatement		33:24:745:745	4808191	1					
ANR	4808395	ExpressionStatement	ptr = shell -> readline ( )	67:4:1544:1568	4808191	0	True				
ANR	4808396	AssignmentExpression	ptr = shell -> readline ( )		4808191	0		=			
ANR	4808397	Identifier	ptr		4808191	0					
ANR	4808398	CallExpression	shell -> readline ( )		4808191	1					
ANR	4808399	Callee	shell -> readline		4808191	0					
ANR	4808400	PtrMemberAccess	shell -> readline		4808191	0					
ANR	4808401	Identifier	shell		4808191	0					
ANR	4808402	Identifier	readline		4808191	1					
ANR	4808403	ArgumentList			4808191	1					
ANR	4808404	ElseStatement	else		4808191	0					
ANR	4808405	CompoundStatement		35:10:787:787	4808191	0					
ANR	4808406	IfStatement	"if ( ! fgets ( buf , sizeof ( buf ) - 1 , stdin ) )"		4808191	0					
ANR	4808407	Condition	"! fgets ( buf , sizeof ( buf ) - 1 , stdin )"	69:8:1590:1626	4808191	0	True				
ANR	4808408	UnaryOperationExpression	"! fgets ( buf , sizeof ( buf ) - 1 , stdin )"		4808191	0					
ANR	4808409	UnaryOperator	!		4808191	0					
ANR	4808410	CallExpression	"fgets ( buf , sizeof ( buf ) - 1 , stdin )"		4808191	1					
ANR	4808411	Callee	fgets		4808191	0					
ANR	4808412	Identifier	fgets		4808191	0					
ANR	4808413	ArgumentList	buf		4808191	1					
ANR	4808414	Argument	buf		4808191	0					
ANR	4808415	Identifier	buf		4808191	0					
ANR	4808416	Argument	sizeof ( buf ) - 1		4808191	1					
ANR	4808417	AdditiveExpression	sizeof ( buf ) - 1		4808191	0		-			
ANR	4808418	SizeofExpression	sizeof ( buf )		4808191	0					
ANR	4808419	Sizeof	sizeof		4808191	0					
ANR	4808420	SizeofOperand	buf		4808191	1					
ANR	4808421	PrimaryExpression	1		4808191	1					
ANR	4808422	Argument	stdin		4808191	2					
ANR	4808423	Identifier	stdin		4808191	0					
ANR	4808424	CompoundStatement		36:47:836:836	4808191	1					
ANR	4808425	BreakStatement	break ;	70:5:1636:1641	4808191	0	True				
ANR	4808426	IfStatement	if ( feof ( stdin ) )		4808191	1					
ANR	4808427	Condition	feof ( stdin )	72:8:1657:1668	4808191	0	True				
ANR	4808428	CallExpression	feof ( stdin )		4808191	0					
ANR	4808429	Callee	feof		4808191	0					
ANR	4808430	Identifier	feof		4808191	0					
ANR	4808431	ArgumentList	stdin		4808191	1					
ANR	4808432	Argument	stdin		4808191	0					
ANR	4808433	Identifier	stdin		4808191	0					
ANR	4808434	CompoundStatement		39:22:878:878	4808191	1					
ANR	4808435	BreakStatement	break ;	73:5:1678:1683	4808191	0	True				
ANR	4808436	ExpressionStatement	buf [ strlen ( buf ) - 1 ] = '\\0'	75:4:1695:1723	4808191	2	True				
ANR	4808437	AssignmentExpression	buf [ strlen ( buf ) - 1 ] = '\\0'		4808191	0		=			
ANR	4808438	ArrayIndexing	buf [ strlen ( buf ) - 1 ]		4808191	0					
ANR	4808439	Identifier	buf		4808191	0					
ANR	4808440	AdditiveExpression	strlen ( buf ) - 1		4808191	1		-			
ANR	4808441	CallExpression	strlen ( buf )		4808191	0					
ANR	4808442	Callee	strlen		4808191	0					
ANR	4808443	Identifier	strlen		4808191	0					
ANR	4808444	ArgumentList	buf		4808191	1					
ANR	4808445	Argument	buf		4808191	0					
ANR	4808446	Identifier	buf		4808191	0					
ANR	4808447	PrimaryExpression	1		4808191	1					
ANR	4808448	PrimaryExpression	'\\0'		4808191	1					
ANR	4808449	ExpressionStatement	ptr = buf	76:4:1729:1738	4808191	3	True				
ANR	4808450	AssignmentExpression	ptr = buf		4808191	0		=			
ANR	4808451	Identifier	ptr		4808191	0					
ANR	4808452	Identifier	buf		4808191	1					
ANR	4808453	IfStatement	if ( ! ptr )		4808191	3					
ANR	4808454	Condition	! ptr	78:7:1752:1755	4808191	0	True				
ANR	4808455	UnaryOperationExpression	! ptr		4808191	0					
ANR	4808456	UnaryOperator	!		4808191	0					
ANR	4808457	Identifier	ptr		4808191	1					
ANR	4808458	CompoundStatement		45:13:965:965	4808191	1					
ANR	4808459	BreakStatement	break ;	79:4:1764:1769	4808191	0	True				
ANR	4808460	ExpressionStatement	r_str_trim ( ( char * ) ptr )	81:3:1779:1803	4808191	4	True				
ANR	4808461	CallExpression	r_str_trim ( ( char * ) ptr )		4808191	0					
ANR	4808462	Callee	r_str_trim		4808191	0					
ANR	4808463	Identifier	r_str_trim		4808191	0					
ANR	4808464	ArgumentList	( char * ) ptr		4808191	1					
ANR	4808465	Argument	( char * ) ptr		4808191	0					
ANR	4808466	CastExpression	( char * ) ptr		4808191	0					
ANR	4808467	CastTarget	char *		4808191	0					
ANR	4808468	Identifier	ptr		4808191	1					
ANR	4808469	IfStatement	if ( shell -> hist_add )		4808191	5					
ANR	4808470	Condition	shell -> hist_add	82:7:1828:1842	4808191	0	True				
ANR	4808471	PtrMemberAccess	shell -> hist_add		4808191	0					
ANR	4808472	Identifier	shell		4808191	0					
ANR	4808473	Identifier	hist_add		4808191	1					
ANR	4808474	CompoundStatement		49:24:1052:1052	4808191	1					
ANR	4808475	ExpressionStatement	shell -> hist_add ( ptr )	83:4:1851:1872	4808191	0	True				
ANR	4808476	CallExpression	shell -> hist_add ( ptr )		4808191	0					
ANR	4808477	Callee	shell -> hist_add		4808191	0					
ANR	4808478	PtrMemberAccess	shell -> hist_add		4808191	0					
ANR	4808479	Identifier	shell		4808191	0					
ANR	4808480	Identifier	hist_add		4808191	1					
ANR	4808481	ArgumentList	ptr		4808191	1					
ANR	4808482	Argument	ptr		4808191	0					
ANR	4808483	Identifier	ptr		4808191	0					
ANR	4808484	IfStatement	if ( ptr != buf )		4808191	6					
ANR	4808485	Condition	ptr != buf	85:7:1886:1895	4808191	0	True				
ANR	4808486	EqualityExpression	ptr != buf		4808191	0		!=			
ANR	4808487	Identifier	ptr		4808191	0					
ANR	4808488	Identifier	buf		4808191	1					
ANR	4808489	CompoundStatement		52:19:1105:1105	4808191	1					
ANR	4808490	ExpressionStatement	"r_str_ncpy ( buf , ptr , sizeof ( buf ) - 1 )"	86:4:1904:1943	4808191	0	True				
ANR	4808491	CallExpression	"r_str_ncpy ( buf , ptr , sizeof ( buf ) - 1 )"		4808191	0					
ANR	4808492	Callee	r_str_ncpy		4808191	0					
ANR	4808493	Identifier	r_str_ncpy		4808191	0					
ANR	4808494	ArgumentList	buf		4808191	1					
ANR	4808495	Argument	buf		4808191	0					
ANR	4808496	Identifier	buf		4808191	0					
ANR	4808497	Argument	ptr		4808191	1					
ANR	4808498	Identifier	ptr		4808191	0					
ANR	4808499	Argument	sizeof ( buf ) - 1		4808191	2					
ANR	4808500	AdditiveExpression	sizeof ( buf ) - 1		4808191	0		-			
ANR	4808501	SizeofExpression	sizeof ( buf )		4808191	0					
ANR	4808502	Sizeof	sizeof		4808191	0					
ANR	4808503	SizeofOperand	buf		4808191	1					
ANR	4808504	PrimaryExpression	1		4808191	1					
ANR	4808505	ElseStatement	else		4808191	0					
ANR	4808506	CompoundStatement		55:9:1166:1166	4808191	0					
ANR	4808507	ExpressionStatement	"printf ( ""%s"" , prompt )"	89:3:1964:1985	4808191	0	True				
ANR	4808508	CallExpression	"printf ( ""%s"" , prompt )"		4808191	0					
ANR	4808509	Callee	printf		4808191	0					
ANR	4808510	Identifier	printf		4808191	0					
ANR	4808511	ArgumentList	"""%s"""		4808191	1					
ANR	4808512	Argument	"""%s"""		4808191	0					
ANR	4808513	PrimaryExpression	"""%s"""		4808191	0					
ANR	4808514	Argument	prompt		4808191	1					
ANR	4808515	Identifier	prompt		4808191	0					
ANR	4808516	IfStatement	"if ( ! fgets ( buf , sizeof ( buf ) - 1 , stdin ) )"		4808191	1					
ANR	4808517	Condition	"! fgets ( buf , sizeof ( buf ) - 1 , stdin )"	90:7:1994:2030	4808191	0	True				
ANR	4808518	UnaryOperationExpression	"! fgets ( buf , sizeof ( buf ) - 1 , stdin )"		4808191	0					
ANR	4808519	UnaryOperator	!		4808191	0					
ANR	4808520	CallExpression	"fgets ( buf , sizeof ( buf ) - 1 , stdin )"		4808191	1					
ANR	4808521	Callee	fgets		4808191	0					
ANR	4808522	Identifier	fgets		4808191	0					
ANR	4808523	ArgumentList	buf		4808191	1					
ANR	4808524	Argument	buf		4808191	0					
ANR	4808525	Identifier	buf		4808191	0					
ANR	4808526	Argument	sizeof ( buf ) - 1		4808191	1					
ANR	4808527	AdditiveExpression	sizeof ( buf ) - 1		4808191	0		-			
ANR	4808528	SizeofExpression	sizeof ( buf )		4808191	0					
ANR	4808529	Sizeof	sizeof		4808191	0					
ANR	4808530	SizeofOperand	buf		4808191	1					
ANR	4808531	PrimaryExpression	1		4808191	1					
ANR	4808532	Argument	stdin		4808191	2					
ANR	4808533	Identifier	stdin		4808191	0					
ANR	4808534	CompoundStatement		57:46:1240:1240	4808191	1					
ANR	4808535	BreakStatement	break ;	91:4:2039:2044	4808191	0	True				
ANR	4808536	IfStatement	if ( feof ( stdin ) )		4808191	2					
ANR	4808537	Condition	feof ( stdin )	93:7:2058:2069	4808191	0	True				
ANR	4808538	CallExpression	feof ( stdin )		4808191	0					
ANR	4808539	Callee	feof		4808191	0					
ANR	4808540	Identifier	feof		4808191	0					
ANR	4808541	ArgumentList	stdin		4808191	1					
ANR	4808542	Argument	stdin		4808191	0					
ANR	4808543	Identifier	stdin		4808191	0					
ANR	4808544	CompoundStatement		60:21:1279:1279	4808191	1					
ANR	4808545	BreakStatement	break ;	94:4:2078:2083	4808191	0	True				
ANR	4808546	ExpressionStatement	buf [ strlen ( buf ) - 1 ] = '\\0'	96:3:2093:2121	4808191	3	True				
ANR	4808547	AssignmentExpression	buf [ strlen ( buf ) - 1 ] = '\\0'		4808191	0		=			
ANR	4808548	ArrayIndexing	buf [ strlen ( buf ) - 1 ]		4808191	0					
ANR	4808549	Identifier	buf		4808191	0					
ANR	4808550	AdditiveExpression	strlen ( buf ) - 1		4808191	1		-			
ANR	4808551	CallExpression	strlen ( buf )		4808191	0					
ANR	4808552	Callee	strlen		4808191	0					
ANR	4808553	Identifier	strlen		4808191	0					
ANR	4808554	ArgumentList	buf		4808191	1					
ANR	4808555	Argument	buf		4808191	0					
ANR	4808556	Identifier	buf		4808191	0					
ANR	4808557	PrimaryExpression	1		4808191	1					
ANR	4808558	PrimaryExpression	'\\0'		4808191	1					
ANR	4808559	IfStatement	"if ( ! strcmp ( buf , ""q"" ) || ! strcmp ( buf , ""exit"" ) )"		4808191	2					
ANR	4808560	Condition	"! strcmp ( buf , ""q"" ) || ! strcmp ( buf , ""exit"" )"	99:6:2134:2176	4808191	0	True				
ANR	4808561	OrExpression	"! strcmp ( buf , ""q"" ) || ! strcmp ( buf , ""exit"" )"		4808191	0		||			
ANR	4808562	UnaryOperationExpression	"! strcmp ( buf , ""q"" )"		4808191	0					
ANR	4808563	UnaryOperator	!		4808191	0					
ANR	4808564	CallExpression	"strcmp ( buf , ""q"" )"		4808191	1					
ANR	4808565	Callee	strcmp		4808191	0					
ANR	4808566	Identifier	strcmp		4808191	0					
ANR	4808567	ArgumentList	buf		4808191	1					
ANR	4808568	Argument	buf		4808191	0					
ANR	4808569	Identifier	buf		4808191	0					
ANR	4808570	Argument	"""q"""		4808191	1					
ANR	4808571	PrimaryExpression	"""q"""		4808191	0					
ANR	4808572	UnaryOperationExpression	"! strcmp ( buf , ""exit"" )"		4808191	1					
ANR	4808573	UnaryOperator	!		4808191	0					
ANR	4808574	CallExpression	"strcmp ( buf , ""exit"" )"		4808191	1					
ANR	4808575	Callee	strcmp		4808191	0					
ANR	4808576	Identifier	strcmp		4808191	0					
ANR	4808577	ArgumentList	buf		4808191	1					
ANR	4808578	Argument	buf		4808191	0					
ANR	4808579	Identifier	buf		4808191	0					
ANR	4808580	Argument	"""exit"""		4808191	1					
ANR	4808581	PrimaryExpression	"""exit"""		4808191	0					
ANR	4808582	CompoundStatement		66:51:1386:1386	4808191	1					
ANR	4808583	ExpressionStatement	r_list_free ( list )	100:3:2184:2202	4808191	0	True				
ANR	4808584	CallExpression	r_list_free ( list )		4808191	0					
ANR	4808585	Callee	r_list_free		4808191	0					
ANR	4808586	Identifier	r_list_free		4808191	0					
ANR	4808587	ArgumentList	list		4808191	1					
ANR	4808588	Argument	list		4808191	0					
ANR	4808589	Identifier	list		4808191	0					
ANR	4808590	ReturnStatement	return true ;	101:3:2207:2218	4808191	1	True				
ANR	4808591	Identifier	true		4808191	0					
ANR	4808592	IfStatement	if ( buf [ 0 ] == '#' )		4808191	3					
ANR	4808593	Condition	buf [ 0 ] == '#'	103:6:2230:2242	4808191	0	True				
ANR	4808594	EqualityExpression	buf [ 0 ] == '#'		4808191	0		==			
ANR	4808595	ArrayIndexing	buf [ 0 ]		4808191	0					
ANR	4808596	Identifier	buf		4808191	0					
ANR	4808597	PrimaryExpression	0		4808191	1					
ANR	4808598	PrimaryExpression	'#'		4808191	1					
ANR	4808599	CompoundStatement		70:21:1452:1452	4808191	1					
ANR	4808600	ContinueStatement	continue ;	105:3:2264:2272	4808191	0	True				
ANR	4808601	ElseStatement	else		4808191	0					
ANR	4808602	IfStatement	if ( buf [ 0 ] == ':' )		4808191	0					
ANR	4808603	Condition	buf [ 0 ] == ':'	106:13:2287:2299	4808191	0	True				
ANR	4808604	EqualityExpression	buf [ 0 ] == ':'		4808191	0		==			
ANR	4808605	ArrayIndexing	buf [ 0 ]		4808191	0					
ANR	4808606	Identifier	buf		4808191	0					
ANR	4808607	PrimaryExpression	0		4808191	1					
ANR	4808608	PrimaryExpression	':'		4808191	1					
ANR	4808609	CompoundStatement		74:3:1514:1564	4808191	1					
ANR	4808610	IdentifierDeclStatement	"char * msg = fs -> cob . cmdstr ( fs -> cob . core , buf + 1 ) ;"	107:3:2307:2357	4808191	0	True				
ANR	4808611	IdentifierDecl	"* msg = fs -> cob . cmdstr ( fs -> cob . core , buf + 1 )"		4808191	0					
ANR	4808612	IdentifierDeclType	char *		4808191	0					
ANR	4808613	Identifier	msg		4808191	1					
ANR	4808614	AssignmentExpression	"* msg = fs -> cob . cmdstr ( fs -> cob . core , buf + 1 )"		4808191	2		=			
ANR	4808615	Identifier	msg		4808191	0					
ANR	4808616	CallExpression	"fs -> cob . cmdstr ( fs -> cob . core , buf + 1 )"		4808191	1					
ANR	4808617	Callee	fs -> cob . cmdstr		4808191	0					
ANR	4808618	MemberAccess	fs -> cob . cmdstr		4808191	0					
ANR	4808619	PtrMemberAccess	fs -> cob		4808191	0					
ANR	4808620	Identifier	fs		4808191	0					
ANR	4808621	Identifier	cob		4808191	1					
ANR	4808622	Identifier	cmdstr		4808191	1					
ANR	4808623	ArgumentList	fs -> cob . core		4808191	1					
ANR	4808624	Argument	fs -> cob . core		4808191	0					
ANR	4808625	MemberAccess	fs -> cob . core		4808191	0					
ANR	4808626	PtrMemberAccess	fs -> cob		4808191	0					
ANR	4808627	Identifier	fs		4808191	0					
ANR	4808628	Identifier	cob		4808191	1					
ANR	4808629	Identifier	core		4808191	1					
ANR	4808630	Argument	buf + 1		4808191	1					
ANR	4808631	AdditiveExpression	buf + 1		4808191	0		+			
ANR	4808632	Identifier	buf		4808191	0					
ANR	4808633	PrimaryExpression	1		4808191	1					
ANR	4808634	ExpressionStatement	"printf ( ""%s\\n"" , msg )"	108:3:2362:2382	4808191	1	True				
ANR	4808635	CallExpression	"printf ( ""%s\\n"" , msg )"		4808191	0					
ANR	4808636	Callee	printf		4808191	0					
ANR	4808637	Identifier	printf		4808191	0					
ANR	4808638	ArgumentList	"""%s\\n"""		4808191	1					
ANR	4808639	Argument	"""%s\\n"""		4808191	0					
ANR	4808640	PrimaryExpression	"""%s\\n"""		4808191	0					
ANR	4808641	Argument	msg		4808191	1					
ANR	4808642	Identifier	msg		4808191	0					
ANR	4808643	ExpressionStatement	free ( msg )	109:3:2387:2397	4808191	2	True				
ANR	4808644	CallExpression	free ( msg )		4808191	0					
ANR	4808645	Callee	free		4808191	0					
ANR	4808646	Identifier	free		4808191	0					
ANR	4808647	ArgumentList	msg		4808191	1					
ANR	4808648	Argument	msg		4808191	0					
ANR	4808649	Identifier	msg		4808191	0					
ANR	4808650	ElseStatement	else		4808191	0					
ANR	4808651	IfStatement	if ( buf [ 0 ] == '!' )		4808191	0					
ANR	4808652	Condition	buf [ 0 ] == '!'	110:13:2412:2424	4808191	0	True				
ANR	4808653	EqualityExpression	buf [ 0 ] == '!'		4808191	0		==			
ANR	4808654	ArrayIndexing	buf [ 0 ]		4808191	0					
ANR	4808655	Identifier	buf		4808191	0					
ANR	4808656	PrimaryExpression	0		4808191	1					
ANR	4808657	PrimaryExpression	'!'		4808191	1					
ANR	4808658	CompoundStatement		77:28:1634:1634	4808191	1					
ANR	4808659	ExpressionStatement	"r_sandbox_system ( buf + 1 , 1 )"	111:3:2432:2461	4808191	0	True				
ANR	4808660	CallExpression	"r_sandbox_system ( buf + 1 , 1 )"		4808191	0					
ANR	4808661	Callee	r_sandbox_system		4808191	0					
ANR	4808662	Identifier	r_sandbox_system		4808191	0					
ANR	4808663	ArgumentList	buf + 1		4808191	1					
ANR	4808664	Argument	buf + 1		4808191	0					
ANR	4808665	AdditiveExpression	buf + 1		4808191	0		+			
ANR	4808666	Identifier	buf		4808191	0					
ANR	4808667	PrimaryExpression	1		4808191	1					
ANR	4808668	Argument	1		4808191	1					
ANR	4808669	PrimaryExpression	1		4808191	0					
ANR	4808670	ElseStatement	else		4808191	0					
ANR	4808671	IfStatement	"if ( ! strncmp ( buf , ""echo"" , 4 ) )"		4808191	0					
ANR	4808672	Condition	"! strncmp ( buf , ""echo"" , 4 )"	112:13:2476:2500	4808191	0	True				
ANR	4808673	UnaryOperationExpression	"! strncmp ( buf , ""echo"" , 4 )"		4808191	0					
ANR	4808674	UnaryOperator	!		4808191	0					
ANR	4808675	CallExpression	"strncmp ( buf , ""echo"" , 4 )"		4808191	1					
ANR	4808676	Callee	strncmp		4808191	0					
ANR	4808677	Identifier	strncmp		4808191	0					
ANR	4808678	ArgumentList	buf		4808191	1					
ANR	4808679	Argument	buf		4808191	0					
ANR	4808680	Identifier	buf		4808191	0					
ANR	4808681	Argument	"""echo"""		4808191	1					
ANR	4808682	PrimaryExpression	"""echo"""		4808191	0					
ANR	4808683	Argument	4		4808191	2					
ANR	4808684	PrimaryExpression	4		4808191	0					
ANR	4808685	CompoundStatement		80:3:1715:1751	4808191	1					
ANR	4808686	IdentifierDeclStatement	char * msg = r_str_trim_dup ( buf + 4 ) ;	113:3:2508:2544	4808191	0	True				
ANR	4808687	IdentifierDecl	* msg = r_str_trim_dup ( buf + 4 )		4808191	0					
ANR	4808688	IdentifierDeclType	char *		4808191	0					
ANR	4808689	Identifier	msg		4808191	1					
ANR	4808690	AssignmentExpression	* msg = r_str_trim_dup ( buf + 4 )		4808191	2		=			
ANR	4808691	Identifier	msg		4808191	0					
ANR	4808692	CallExpression	r_str_trim_dup ( buf + 4 )		4808191	1					
ANR	4808693	Callee	r_str_trim_dup		4808191	0					
ANR	4808694	Identifier	r_str_trim_dup		4808191	0					
ANR	4808695	ArgumentList	buf + 4		4808191	1					
ANR	4808696	Argument	buf + 4		4808191	0					
ANR	4808697	AdditiveExpression	buf + 4		4808191	0		+			
ANR	4808698	Identifier	buf		4808191	0					
ANR	4808699	PrimaryExpression	4		4808191	1					
ANR	4808700	IfStatement	"if ( ! handlePipes ( fs , msg , NULL , path ) )"		4808191	1					
ANR	4808701	Condition	"! handlePipes ( fs , msg , NULL , path )"	114:7:2553:2586	4808191	0	True				
ANR	4808702	UnaryOperationExpression	"! handlePipes ( fs , msg , NULL , path )"		4808191	0					
ANR	4808703	UnaryOperator	!		4808191	0					
ANR	4808704	CallExpression	"handlePipes ( fs , msg , NULL , path )"		4808191	1					
ANR	4808705	Callee	handlePipes		4808191	0					
ANR	4808706	Identifier	handlePipes		4808191	0					
ANR	4808707	ArgumentList	fs		4808191	1					
ANR	4808708	Argument	fs		4808191	0					
ANR	4808709	Identifier	fs		4808191	0					
ANR	4808710	Argument	msg		4808191	1					
ANR	4808711	Identifier	msg		4808191	0					
ANR	4808712	Argument	NULL		4808191	2					
ANR	4808713	Identifier	NULL		4808191	0					
ANR	4808714	Argument	path		4808191	3					
ANR	4808715	Identifier	path		4808191	0					
ANR	4808716	CompoundStatement		81:43:1796:1796	4808191	1					
ANR	4808717	ExpressionStatement	"printf ( ""%s\\n"" , msg )"	115:4:2595:2615	4808191	0	True				
ANR	4808718	CallExpression	"printf ( ""%s\\n"" , msg )"		4808191	0					
ANR	4808719	Callee	printf		4808191	0					
ANR	4808720	Identifier	printf		4808191	0					
ANR	4808721	ArgumentList	"""%s\\n"""		4808191	1					
ANR	4808722	Argument	"""%s\\n"""		4808191	0					
ANR	4808723	PrimaryExpression	"""%s\\n"""		4808191	0					
ANR	4808724	Argument	msg		4808191	1					
ANR	4808725	Identifier	msg		4808191	0					
ANR	4808726	ExpressionStatement	free ( msg )	117:3:2625:2635	4808191	2	True				
ANR	4808727	CallExpression	free ( msg )		4808191	0					
ANR	4808728	Callee	free		4808191	0					
ANR	4808729	Identifier	free		4808191	0					
ANR	4808730	ArgumentList	msg		4808191	1					
ANR	4808731	Argument	msg		4808191	0					
ANR	4808732	Identifier	msg		4808191	0					
ANR	4808733	ElseStatement	else		4808191	0					
ANR	4808734	IfStatement	"if ( ! strncmp ( buf , ""ls"" , 2 ) )"		4808191	0					
ANR	4808735	Condition	"! strncmp ( buf , ""ls"" , 2 )"	118:13:2650:2672	4808191	0	True				
ANR	4808736	UnaryOperationExpression	"! strncmp ( buf , ""ls"" , 2 )"		4808191	0					
ANR	4808737	UnaryOperator	!		4808191	0					
ANR	4808738	CallExpression	"strncmp ( buf , ""ls"" , 2 )"		4808191	1					
ANR	4808739	Callee	strncmp		4808191	0					
ANR	4808740	Identifier	strncmp		4808191	0					
ANR	4808741	ArgumentList	buf		4808191	1					
ANR	4808742	Argument	buf		4808191	0					
ANR	4808743	Identifier	buf		4808191	0					
ANR	4808744	Argument	"""ls"""		4808191	1					
ANR	4808745	PrimaryExpression	"""ls"""		4808191	0					
ANR	4808746	Argument	2		4808191	2					
ANR	4808747	PrimaryExpression	2		4808191	0					
ANR	4808748	CompoundStatement		109:3:2421:2444	4808191	1					
ANR	4808749	IdentifierDeclStatement	char * ptr = str ;	119:3:2680:2695	4808191	0	True				
ANR	4808750	IdentifierDecl	* ptr = str		4808191	0					
ANR	4808751	IdentifierDeclType	char *		4808191	0					
ANR	4808752	Identifier	ptr		4808191	1					
ANR	4808753	AssignmentExpression	* ptr = str		4808191	2		=			
ANR	4808754	Identifier	str		4808191	0					
ANR	4808755	Identifier	str		4808191	1					
ANR	4808756	ExpressionStatement	r_list_free ( list )	120:3:2700:2718	4808191	1	True				
ANR	4808757	CallExpression	r_list_free ( list )		4808191	0					
ANR	4808758	Callee	r_list_free		4808191	0					
ANR	4808759	Identifier	r_list_free		4808191	0					
ANR	4808760	ArgumentList	list		4808191	1					
ANR	4808761	Argument	list		4808191	0					
ANR	4808762	Identifier	list		4808191	0					
ANR	4808763	IfStatement	if ( buf [ 2 ] == ' ' )		4808191	2					
ANR	4808764	Condition	buf [ 2 ] == ' '	121:7:2727:2739	4808191	0	True				
ANR	4808765	EqualityExpression	buf [ 2 ] == ' '		4808191	0		==			
ANR	4808766	ArrayIndexing	buf [ 2 ]		4808191	0					
ANR	4808767	Identifier	buf		4808191	0					
ANR	4808768	PrimaryExpression	2		4808191	1					
ANR	4808769	PrimaryExpression	' '		4808191	1					
ANR	4808770	CompoundStatement		88:22:1949:1949	4808191	1					
ANR	4808771	IfStatement	if ( buf [ 3 ] != '/' )		4808191	0					
ANR	4808772	Condition	buf [ 3 ] != '/'	122:8:2752:2764	4808191	0	True				
ANR	4808773	EqualityExpression	buf [ 3 ] != '/'		4808191	0		!=			
ANR	4808774	ArrayIndexing	buf [ 3 ]		4808191	0					
ANR	4808775	Identifier	buf		4808191	0					
ANR	4808776	PrimaryExpression	3		4808191	1					
ANR	4808777	PrimaryExpression	'/'		4808191	1					
ANR	4808778	CompoundStatement		89:23:1974:1974	4808191	1					
ANR	4808779	ExpressionStatement	"strncpy ( str , path , sizeof ( str ) - 1 )"	123:5:2774:2811	4808191	0	True				
ANR	4808780	CallExpression	"strncpy ( str , path , sizeof ( str ) - 1 )"		4808191	0					
ANR	4808781	Callee	strncpy		4808191	0					
ANR	4808782	Identifier	strncpy		4808191	0					
ANR	4808783	ArgumentList	str		4808191	1					
ANR	4808784	Argument	str		4808191	0					
ANR	4808785	Identifier	str		4808191	0					
ANR	4808786	Argument	path		4808191	1					
ANR	4808787	Identifier	path		4808191	0					
ANR	4808788	Argument	sizeof ( str ) - 1		4808191	2					
ANR	4808789	AdditiveExpression	sizeof ( str ) - 1		4808191	0		-			
ANR	4808790	SizeofExpression	sizeof ( str )		4808191	0					
ANR	4808791	Sizeof	sizeof		4808191	0					
ANR	4808792	SizeofOperand	str		4808191	1					
ANR	4808793	PrimaryExpression	1		4808191	1					
ANR	4808794	ExpressionStatement	"strcat ( str , ""/"" )"	124:5:2818:2835	4808191	1	True				
ANR	4808795	CallExpression	"strcat ( str , ""/"" )"		4808191	0					
ANR	4808796	Callee	strcat		4808191	0					
ANR	4808797	Identifier	strcat		4808191	0					
ANR	4808798	ArgumentList	str		4808191	1					
ANR	4808799	Argument	str		4808191	0					
ANR	4808800	Identifier	str		4808191	0					
ANR	4808801	Argument	"""/"""		4808191	1					
ANR	4808802	PrimaryExpression	"""/"""		4808191	0					
ANR	4808803	ExpressionStatement	"strncat ( str , buf + 3 , sizeof ( buf ) - 1 )"	125:5:2842:2882	4808191	2	True				
ANR	4808804	CallExpression	"strncat ( str , buf + 3 , sizeof ( buf ) - 1 )"		4808191	0					
ANR	4808805	Callee	strncat		4808191	0					
ANR	4808806	Identifier	strncat		4808191	0					
ANR	4808807	ArgumentList	str		4808191	1					
ANR	4808808	Argument	str		4808191	0					
ANR	4808809	Identifier	str		4808191	0					
ANR	4808810	Argument	buf + 3		4808191	1					
ANR	4808811	AdditiveExpression	buf + 3		4808191	0		+			
ANR	4808812	Identifier	buf		4808191	0					
ANR	4808813	PrimaryExpression	3		4808191	1					
ANR	4808814	Argument	sizeof ( buf ) - 1		4808191	2					
ANR	4808815	AdditiveExpression	sizeof ( buf ) - 1		4808191	0		-			
ANR	4808816	SizeofExpression	sizeof ( buf )		4808191	0					
ANR	4808817	Sizeof	sizeof		4808191	0					
ANR	4808818	SizeofOperand	buf		4808191	1					
ANR	4808819	PrimaryExpression	1		4808191	1					
ANR	4808820	ExpressionStatement	"list = r_fs_dir ( fs , str )"	126:5:2889:2914	4808191	3	True				
ANR	4808821	AssignmentExpression	"list = r_fs_dir ( fs , str )"		4808191	0		=			
ANR	4808822	Identifier	list		4808191	0					
ANR	4808823	CallExpression	"r_fs_dir ( fs , str )"		4808191	1					
ANR	4808824	Callee	r_fs_dir		4808191	0					
ANR	4808825	Identifier	r_fs_dir		4808191	0					
ANR	4808826	ArgumentList	fs		4808191	1					
ANR	4808827	Argument	fs		4808191	0					
ANR	4808828	Identifier	fs		4808191	0					
ANR	4808829	Argument	str		4808191	1					
ANR	4808830	Identifier	str		4808191	0					
ANR	4808831	ElseStatement	else		4808191	0					
ANR	4808832	CompoundStatement		94:11:2134:2134	4808191	0					
ANR	4808833	ExpressionStatement	"list = r_fs_dir ( fs , buf + 3 )"	128:5:2934:2963	4808191	0	True				
ANR	4808834	AssignmentExpression	"list = r_fs_dir ( fs , buf + 3 )"		4808191	0		=			
ANR	4808835	Identifier	list		4808191	0					
ANR	4808836	CallExpression	"r_fs_dir ( fs , buf + 3 )"		4808191	1					
ANR	4808837	Callee	r_fs_dir		4808191	0					
ANR	4808838	Identifier	r_fs_dir		4808191	0					
ANR	4808839	ArgumentList	fs		4808191	1					
ANR	4808840	Argument	fs		4808191	0					
ANR	4808841	Identifier	fs		4808191	0					
ANR	4808842	Argument	buf + 3		4808191	1					
ANR	4808843	AdditiveExpression	buf + 3		4808191	0		+			
ANR	4808844	Identifier	buf		4808191	0					
ANR	4808845	PrimaryExpression	3		4808191	1					
ANR	4808846	ExpressionStatement	ptr = buf + 3	129:5:2970:2983	4808191	1	True				
ANR	4808847	AssignmentExpression	ptr = buf + 3		4808191	0		=			
ANR	4808848	Identifier	ptr		4808191	0					
ANR	4808849	AdditiveExpression	buf + 3		4808191	1		+			
ANR	4808850	Identifier	buf		4808191	0					
ANR	4808851	PrimaryExpression	3		4808191	1					
ANR	4808852	ElseStatement	else		4808191	0					
ANR	4808853	CompoundStatement		98:10:2208:2208	4808191	0					
ANR	4808854	ExpressionStatement	ptr = path	132:4:3007:3017	4808191	0	True				
ANR	4808855	AssignmentExpression	ptr = path		4808191	0		=			
ANR	4808856	Identifier	ptr		4808191	0					
ANR	4808857	Identifier	path		4808191	1					
ANR	4808858	ExpressionStatement	"list = r_fs_dir ( fs , path )"	133:4:3023:3049	4808191	1	True				
ANR	4808859	AssignmentExpression	"list = r_fs_dir ( fs , path )"		4808191	0		=			
ANR	4808860	Identifier	list		4808191	0					
ANR	4808861	CallExpression	"r_fs_dir ( fs , path )"		4808191	1					
ANR	4808862	Callee	r_fs_dir		4808191	0					
ANR	4808863	Identifier	r_fs_dir		4808191	0					
ANR	4808864	ArgumentList	fs		4808191	1					
ANR	4808865	Argument	fs		4808191	0					
ANR	4808866	Identifier	fs		4808191	0					
ANR	4808867	Argument	path		4808191	1					
ANR	4808868	Identifier	path		4808191	0					
ANR	4808869	IfStatement	if ( list )		4808191	3					
ANR	4808870	Condition	list	135:7:3063:3066	4808191	0	True				
ANR	4808871	Identifier	list		4808191	0					
ANR	4808872	CompoundStatement		102:13:2276:2276	4808191	1					
ANR	4808873	Statement	r_list_foreach	136:4:3075:3088	4808191	0	True				
ANR	4808874	Statement	(	136:19:3090:3090	4808191	1	True				
ANR	4808875	Statement	list	136:20:3091:3094	4808191	2	True				
ANR	4808876	Statement	","	136:24:3095:3095	4808191	3	True				
ANR	4808877	Statement	iter	136:26:3097:3100	4808191	4	True				
ANR	4808878	Statement	","	136:30:3101:3101	4808191	5	True				
ANR	4808879	Statement	file	136:32:3103:3106	4808191	6	True				
ANR	4808880	Statement	)	136:36:3107:3107	4808191	7	True				
ANR	4808881	CompoundStatement		103:38:2316:2316	4808191	8					
ANR	4808882	ExpressionStatement	"printf ( ""%c %s\\n"" , file -> type , file -> name )"	137:5:3116:3158	4808191	0	True				
ANR	4808883	CallExpression	"printf ( ""%c %s\\n"" , file -> type , file -> name )"		4808191	0					
ANR	4808884	Callee	printf		4808191	0					
ANR	4808885	Identifier	printf		4808191	0					
ANR	4808886	ArgumentList	"""%c %s\\n"""		4808191	1					
ANR	4808887	Argument	"""%c %s\\n"""		4808191	0					
ANR	4808888	PrimaryExpression	"""%c %s\\n"""		4808191	0					
ANR	4808889	Argument	file -> type		4808191	1					
ANR	4808890	PtrMemberAccess	file -> type		4808191	0					
ANR	4808891	Identifier	file		4808191	0					
ANR	4808892	Identifier	type		4808191	1					
ANR	4808893	Argument	file -> name		4808191	2					
ANR	4808894	PtrMemberAccess	file -> name		4808191	0					
ANR	4808895	Identifier	file		4808191	0					
ANR	4808896	Identifier	name		4808191	1					
ANR	4808897	IdentifierDeclStatement	RFSRoot * r ;	141:3:3199:3209	4808191	4	True				
ANR	4808898	IdentifierDecl	* r		4808191	0					
ANR	4808899	IdentifierDeclType	RFSRoot *		4808191	0					
ANR	4808900	Identifier	r		4808191	1					
ANR	4808901	IdentifierDeclStatement	char * me = strdup ( ptr ) ;	142:3:3214:3237	4808191	5	True				
ANR	4808902	IdentifierDecl	* me = strdup ( ptr )		4808191	0					
ANR	4808903	IdentifierDeclType	char *		4808191	0					
ANR	4808904	Identifier	me		4808191	1					
ANR	4808905	AssignmentExpression	* me = strdup ( ptr )		4808191	2		=			
ANR	4808906	Identifier	me		4808191	0					
ANR	4808907	CallExpression	strdup ( ptr )		4808191	1					
ANR	4808908	Callee	strdup		4808191	0					
ANR	4808909	Identifier	strdup		4808191	0					
ANR	4808910	ArgumentList	ptr		4808191	1					
ANR	4808911	Argument	ptr		4808191	0					
ANR	4808912	Identifier	ptr		4808191	0					
ANR	4808913	Statement	r_list_foreach	143:3:3242:3255	4808191	6	True				
ANR	4808914	Statement	(	143:18:3257:3257	4808191	7	True				
ANR	4808915	Statement	fs	143:19:3258:3259	4808191	8	True				
ANR	4808916	Statement	->	143:21:3260:3261	4808191	9	True				
ANR	4808917	Statement	roots	143:23:3262:3266	4808191	10	True				
ANR	4808918	Statement	","	143:28:3267:3267	4808191	11	True				
ANR	4808919	Statement	iter	143:30:3269:3272	4808191	12	True				
ANR	4808920	Statement	","	143:34:3273:3273	4808191	13	True				
ANR	4808921	Statement	r	143:36:3275:3275	4808191	14	True				
ANR	4808922	Statement	)	143:37:3276:3276	4808191	15	True				
ANR	4808923	CompoundStatement		112:4:2526:2567	4808191	16					
ANR	4808924	IdentifierDeclStatement	char * base = strdup ( r -> path ) ;	144:4:3284:3313	4808191	0	True				
ANR	4808925	IdentifierDecl	* base = strdup ( r -> path )		4808191	0					
ANR	4808926	IdentifierDeclType	char *		4808191	0					
ANR	4808927	Identifier	base		4808191	1					
ANR	4808928	AssignmentExpression	* base = strdup ( r -> path )		4808191	2		=			
ANR	4808929	Identifier	base		4808191	0					
ANR	4808930	CallExpression	strdup ( r -> path )		4808191	1					
ANR	4808931	Callee	strdup		4808191	0					
ANR	4808932	Identifier	strdup		4808191	0					
ANR	4808933	ArgumentList	r -> path		4808191	1					
ANR	4808934	Argument	r -> path		4808191	0					
ANR	4808935	PtrMemberAccess	r -> path		4808191	0					
ANR	4808936	Identifier	r		4808191	0					
ANR	4808937	Identifier	path		4808191	1					
ANR	4808938	IdentifierDeclStatement	"char * ls = ( char * ) r_str_lchr ( base , '/' ) ;"	145:4:3319:3360	4808191	1	True				
ANR	4808939	IdentifierDecl	"* ls = ( char * ) r_str_lchr ( base , '/' )"		4808191	0					
ANR	4808940	IdentifierDeclType	char *		4808191	0					
ANR	4808941	Identifier	ls		4808191	1					
ANR	4808942	AssignmentExpression	"* ls = ( char * ) r_str_lchr ( base , '/' )"		4808191	2		=			
ANR	4808943	Identifier	ls		4808191	0					
ANR	4808944	CastExpression	"( char * ) r_str_lchr ( base , '/' )"		4808191	1					
ANR	4808945	CastTarget	char *		4808191	0					
ANR	4808946	CallExpression	"r_str_lchr ( base , '/' )"		4808191	1					
ANR	4808947	Callee	r_str_lchr		4808191	0					
ANR	4808948	Identifier	r_str_lchr		4808191	0					
ANR	4808949	ArgumentList	base		4808191	1					
ANR	4808950	Argument	base		4808191	0					
ANR	4808951	Identifier	base		4808191	0					
ANR	4808952	Argument	'/'		4808191	1					
ANR	4808953	PrimaryExpression	'/'		4808191	0					
ANR	4808954	IfStatement	if ( ls )		4808191	2					
ANR	4808955	Condition	ls	146:8:3370:3371	4808191	0	True				
ANR	4808956	Identifier	ls		4808191	0					
ANR	4808957	CompoundStatement		113:12:2581:2581	4808191	1					
ANR	4808958	ExpressionStatement	ls ++	147:5:3381:3385	4808191	0	True				
ANR	4808959	PostIncDecOperationExpression	ls ++		4808191	0					
ANR	4808960	Identifier	ls		4808191	0					
ANR	4808961	IncDec	++		4808191	1					
ANR	4808962	ExpressionStatement	* ls = 0	148:5:3392:3399	4808191	1	True				
ANR	4808963	AssignmentExpression	* ls = 0		4808191	0		=			
ANR	4808964	UnaryOperationExpression	* ls		4808191	0					
ANR	4808965	UnaryOperator	*		4808191	0					
ANR	4808966	Identifier	ls		4808191	1					
ANR	4808967	PrimaryExpression	0		4808191	1					
ANR	4808968	IfStatement	"if ( ! strcmp ( me , base ) )"		4808191	3					
ANR	4808969	Condition	"! strcmp ( me , base )"	151:8:3455:3472	4808191	0	True				
ANR	4808970	UnaryOperationExpression	"! strcmp ( me , base )"		4808191	0					
ANR	4808971	UnaryOperator	!		4808191	0					
ANR	4808972	CallExpression	"strcmp ( me , base )"		4808191	1					
ANR	4808973	Callee	strcmp		4808191	0					
ANR	4808974	Identifier	strcmp		4808191	0					
ANR	4808975	ArgumentList	me		4808191	1					
ANR	4808976	Argument	me		4808191	0					
ANR	4808977	Identifier	me		4808191	0					
ANR	4808978	Argument	base		4808191	1					
ANR	4808979	Identifier	base		4808191	0					
ANR	4808980	CompoundStatement		118:28:2682:2682	4808191	1					
ANR	4808981	ExpressionStatement	"printf ( ""m %s\\n"" , ( r -> path && r -> path [ 0 ] ) ? r -> path + 1 : """" )"	152:5:3482:3542	4808191	0	True				
ANR	4808982	CallExpression	"printf ( ""m %s\\n"" , ( r -> path && r -> path [ 0 ] ) ? r -> path + 1 : """" )"		4808191	0					
ANR	4808983	Callee	printf		4808191	0					
ANR	4808984	Identifier	printf		4808191	0					
ANR	4808985	ArgumentList	"""m %s\\n"""		4808191	1					
ANR	4808986	Argument	"""m %s\\n"""		4808191	0					
ANR	4808987	PrimaryExpression	"""m %s\\n"""		4808191	0					
ANR	4808988	Argument	"( r -> path && r -> path [ 0 ] ) ? r -> path + 1 : """""		4808191	1					
ANR	4808989	ConditionalExpression	"( r -> path && r -> path [ 0 ] ) ? r -> path + 1 : """""		4808191	0					
ANR	4808990	Condition	r -> path && r -> path [ 0 ]		4808191	0					
ANR	4808991	AndExpression	r -> path && r -> path [ 0 ]		4808191	0		&&			
ANR	4808992	PtrMemberAccess	r -> path		4808191	0					
ANR	4808993	Identifier	r		4808191	0					
ANR	4808994	Identifier	path		4808191	1					
ANR	4808995	ArrayIndexing	r -> path [ 0 ]		4808191	1					
ANR	4808996	PtrMemberAccess	r -> path		4808191	0					
ANR	4808997	Identifier	r		4808191	0					
ANR	4808998	Identifier	path		4808191	1					
ANR	4808999	PrimaryExpression	0		4808191	1					
ANR	4809000	AdditiveExpression	r -> path + 1		4808191	1		+			
ANR	4809001	PtrMemberAccess	r -> path		4808191	0					
ANR	4809002	Identifier	r		4808191	0					
ANR	4809003	Identifier	path		4808191	1					
ANR	4809004	PrimaryExpression	1		4808191	1					
ANR	4809005	PrimaryExpression	""""""		4808191	2					
ANR	4809006	ExpressionStatement	free ( base )	154:4:3554:3565	4808191	4	True				
ANR	4809007	CallExpression	free ( base )		4808191	0					
ANR	4809008	Callee	free		4808191	0					
ANR	4809009	Identifier	free		4808191	0					
ANR	4809010	ArgumentList	base		4808191	1					
ANR	4809011	Argument	base		4808191	0					
ANR	4809012	Identifier	base		4808191	0					
ANR	4809013	ExpressionStatement	free ( me )	156:3:3575:3584	4808191	17	True				
ANR	4809014	CallExpression	free ( me )		4808191	0					
ANR	4809015	Callee	free		4808191	0					
ANR	4809016	Identifier	free		4808191	0					
ANR	4809017	ArgumentList	me		4808191	1					
ANR	4809018	Argument	me		4808191	0					
ANR	4809019	Identifier	me		4808191	0					
ANR	4809020	ElseStatement	else		4808191	0					
ANR	4809021	IfStatement	"if ( ! strncmp ( buf , ""pwd"" , 3 ) )"		4808191	0					
ANR	4809022	Condition	"! strncmp ( buf , ""pwd"" , 3 )"	157:13:3599:3622	4808191	0	True				
ANR	4809023	UnaryOperationExpression	"! strncmp ( buf , ""pwd"" , 3 )"		4808191	0					
ANR	4809024	UnaryOperator	!		4808191	0					
ANR	4809025	CallExpression	"strncmp ( buf , ""pwd"" , 3 )"		4808191	1					
ANR	4809026	Callee	strncmp		4808191	0					
ANR	4809027	Identifier	strncmp		4808191	0					
ANR	4809028	ArgumentList	buf		4808191	1					
ANR	4809029	Argument	buf		4808191	0					
ANR	4809030	Identifier	buf		4808191	0					
ANR	4809031	Argument	"""pwd"""		4808191	1					
ANR	4809032	PrimaryExpression	"""pwd"""		4808191	0					
ANR	4809033	Argument	3		4808191	2					
ANR	4809034	PrimaryExpression	3		4808191	0					
ANR	4809035	CompoundStatement		124:39:2832:2832	4808191	1					
ANR	4809036	ExpressionStatement	"eprintf ( ""%s\\n"" , path )"	158:3:3630:3652	4808191	0	True				
ANR	4809037	CallExpression	"eprintf ( ""%s\\n"" , path )"		4808191	0					
ANR	4809038	Callee	eprintf		4808191	0					
ANR	4809039	Identifier	eprintf		4808191	0					
ANR	4809040	ArgumentList	"""%s\\n"""		4808191	1					
ANR	4809041	Argument	"""%s\\n"""		4808191	0					
ANR	4809042	PrimaryExpression	"""%s\\n"""		4808191	0					
ANR	4809043	Argument	path		4808191	1					
ANR	4809044	Identifier	path		4808191	0					
ANR	4809045	ElseStatement	else		4808191	0					
ANR	4809046	IfStatement	"if ( ! memcmp ( buf , ""cd "" , 3 ) )"		4808191	0					
ANR	4809047	Condition	"! memcmp ( buf , ""cd "" , 3 )"	159:13:3667:3689	4808191	0	True				
ANR	4809048	UnaryOperationExpression	"! memcmp ( buf , ""cd "" , 3 )"		4808191	0					
ANR	4809049	UnaryOperator	!		4808191	0					
ANR	4809050	CallExpression	"memcmp ( buf , ""cd "" , 3 )"		4808191	1					
ANR	4809051	Callee	memcmp		4808191	0					
ANR	4809052	Identifier	memcmp		4808191	0					
ANR	4809053	ArgumentList	buf		4808191	1					
ANR	4809054	Argument	buf		4808191	0					
ANR	4809055	Identifier	buf		4808191	0					
ANR	4809056	Argument	"""cd """		4808191	1					
ANR	4809057	PrimaryExpression	"""cd """		4808191	0					
ANR	4809058	Argument	3		4808191	2					
ANR	4809059	PrimaryExpression	3		4808191	0					
ANR	4809060	CompoundStatement		127:3:2904:2935	4808191	1					
ANR	4809061	IdentifierDeclStatement	char opath [ PROMPT_PATH_BUFSIZE ] ;	160:3:3697:3728	4808191	0	True				
ANR	4809062	IdentifierDecl	opath [ PROMPT_PATH_BUFSIZE ]		4808191	0					
ANR	4809063	IdentifierDeclType	char [ PROMPT_PATH_BUFSIZE ]		4808191	0					
ANR	4809064	Identifier	opath		4808191	1					
ANR	4809065	Identifier	PROMPT_PATH_BUFSIZE		4808191	2					
ANR	4809066	ExpressionStatement	"r_str_ncpy ( opath , path , sizeof ( opath ) )"	161:3:3733:3773	4808191	1	True				
ANR	4809067	CallExpression	"r_str_ncpy ( opath , path , sizeof ( opath ) )"		4808191	0					
ANR	4809068	Callee	r_str_ncpy		4808191	0					
ANR	4809069	Identifier	r_str_ncpy		4808191	0					
ANR	4809070	ArgumentList	opath		4808191	1					
ANR	4809071	Argument	opath		4808191	0					
ANR	4809072	Identifier	opath		4808191	0					
ANR	4809073	Argument	path		4808191	1					
ANR	4809074	Identifier	path		4808191	0					
ANR	4809075	Argument	sizeof ( opath )		4808191	2					
ANR	4809076	SizeofExpression	sizeof ( opath )		4808191	0					
ANR	4809077	Sizeof	sizeof		4808191	0					
ANR	4809078	SizeofOperand	opath		4808191	1					
ANR	4809079	ExpressionStatement	input = buf + 3	162:3:3778:3793	4808191	2	True				
ANR	4809080	AssignmentExpression	input = buf + 3		4808191	0		=			
ANR	4809081	Identifier	input		4808191	0					
ANR	4809082	AdditiveExpression	buf + 3		4808191	1		+			
ANR	4809083	Identifier	buf		4808191	0					
ANR	4809084	PrimaryExpression	3		4808191	1					
ANR	4809085	WhileStatement	while ( * input == ' ' )		4808191	3					
ANR	4809086	Condition	* input == ' '	163:10:3805:3817	4808191	0	True				
ANR	4809087	EqualityExpression	* input == ' '		4808191	0		==			
ANR	4809088	UnaryOperationExpression	* input		4808191	0					
ANR	4809089	UnaryOperator	*		4808191	0					
ANR	4809090	Identifier	input		4808191	1					
ANR	4809091	PrimaryExpression	' '		4808191	1					
ANR	4809092	CompoundStatement		130:25:3027:3027	4808191	1					
ANR	4809093	ExpressionStatement	input ++	164:4:3826:3833	4808191	0	True				
ANR	4809094	PostIncDecOperationExpression	input ++		4808191	0					
ANR	4809095	Identifier	input		4808191	0					
ANR	4809096	IncDec	++		4808191	1					
ANR	4809097	IfStatement	"if ( ! strcmp ( input , "".."" ) )"		4808191	4					
ANR	4809098	Condition	"! strcmp ( input , "".."" )"	166:7:3847:3867	4808191	0	True				
ANR	4809099	UnaryOperationExpression	"! strcmp ( input , "".."" )"		4808191	0					
ANR	4809100	UnaryOperator	!		4808191	0					
ANR	4809101	CallExpression	"strcmp ( input , "".."" )"		4808191	1					
ANR	4809102	Callee	strcmp		4808191	0					
ANR	4809103	Identifier	strcmp		4808191	0					
ANR	4809104	ArgumentList	input		4808191	1					
ANR	4809105	Argument	input		4808191	0					
ANR	4809106	Identifier	input		4808191	0					
ANR	4809107	Argument	""".."""		4808191	1					
ANR	4809108	PrimaryExpression	""".."""		4808191	0					
ANR	4809109	CompoundStatement		134:4:3083:3123	4808191	1					
ANR	4809110	IdentifierDeclStatement	"char * p = ( char * ) r_str_lchr ( path , '/' ) ;"	167:4:3876:3916	4808191	0	True				
ANR	4809111	IdentifierDecl	"* p = ( char * ) r_str_lchr ( path , '/' )"		4808191	0					
ANR	4809112	IdentifierDeclType	char *		4808191	0					
ANR	4809113	Identifier	p		4808191	1					
ANR	4809114	AssignmentExpression	"* p = ( char * ) r_str_lchr ( path , '/' )"		4808191	2		=			
ANR	4809115	Identifier	p		4808191	0					
ANR	4809116	CastExpression	"( char * ) r_str_lchr ( path , '/' )"		4808191	1					
ANR	4809117	CastTarget	char *		4808191	0					
ANR	4809118	CallExpression	"r_str_lchr ( path , '/' )"		4808191	1					
ANR	4809119	Callee	r_str_lchr		4808191	0					
ANR	4809120	Identifier	r_str_lchr		4808191	0					
ANR	4809121	ArgumentList	path		4808191	1					
ANR	4809122	Argument	path		4808191	0					
ANR	4809123	Identifier	path		4808191	0					
ANR	4809124	Argument	'/'		4808191	1					
ANR	4809125	PrimaryExpression	'/'		4808191	0					
ANR	4809126	IfStatement	if ( p )		4808191	1					
ANR	4809127	Condition	p	168:8:3926:3926	4808191	0	True				
ANR	4809128	Identifier	p		4808191	0					
ANR	4809129	CompoundStatement		135:11:3136:3136	4808191	1					
ANR	4809130	ExpressionStatement	p [ ( p == path ) ? 1 : 0 ] = 0	169:5:3936:3960	4808191	0	True				
ANR	4809131	AssignmentExpression	p [ ( p == path ) ? 1 : 0 ] = 0		4808191	0		=			
ANR	4809132	ArrayIndexing	p [ ( p == path ) ? 1 : 0 ]		4808191	0					
ANR	4809133	Identifier	p		4808191	0					
ANR	4809134	ConditionalExpression	( p == path ) ? 1 : 0		4808191	1					
ANR	4809135	Condition	p == path		4808191	0					
ANR	4809136	EqualityExpression	p == path		4808191	0		==			
ANR	4809137	Identifier	p		4808191	0					
ANR	4809138	Identifier	path		4808191	1					
ANR	4809139	PrimaryExpression	1		4808191	1					
ANR	4809140	PrimaryExpression	0		4808191	2					
ANR	4809141	PrimaryExpression	0		4808191	1					
ANR	4809142	ElseStatement	else		4808191	0					
ANR	4809143	CompoundStatement		138:10:3185:3185	4808191	0					
ANR	4809144	ExpressionStatement	"strcat ( path , ""/"" )"	172:4:3984:4002	4808191	0	True				
ANR	4809145	CallExpression	"strcat ( path , ""/"" )"		4808191	0					
ANR	4809146	Callee	strcat		4808191	0					
ANR	4809147	Identifier	strcat		4808191	0					
ANR	4809148	ArgumentList	path		4808191	1					
ANR	4809149	Argument	path		4808191	0					
ANR	4809150	Identifier	path		4808191	0					
ANR	4809151	Argument	"""/"""		4808191	1					
ANR	4809152	PrimaryExpression	"""/"""		4808191	0					
ANR	4809153	IfStatement	if ( * input == '/' )		4808191	1					
ANR	4809154	Condition	* input == '/'	173:8:4012:4024	4808191	0	True				
ANR	4809155	EqualityExpression	* input == '/'		4808191	0		==			
ANR	4809156	UnaryOperationExpression	* input		4808191	0					
ANR	4809157	UnaryOperator	*		4808191	0					
ANR	4809158	Identifier	input		4808191	1					
ANR	4809159	PrimaryExpression	'/'		4808191	1					
ANR	4809160	CompoundStatement		140:23:3234:3234	4808191	1					
ANR	4809161	ExpressionStatement	"strncpy ( path , input , sizeof ( opath ) - 1 )"	174:5:4034:4075	4808191	0	True				
ANR	4809162	CallExpression	"strncpy ( path , input , sizeof ( opath ) - 1 )"		4808191	0					
ANR	4809163	Callee	strncpy		4808191	0					
ANR	4809164	Identifier	strncpy		4808191	0					
ANR	4809165	ArgumentList	path		4808191	1					
ANR	4809166	Argument	path		4808191	0					
ANR	4809167	Identifier	path		4808191	0					
ANR	4809168	Argument	input		4808191	1					
ANR	4809169	Identifier	input		4808191	0					
ANR	4809170	Argument	sizeof ( opath ) - 1		4808191	2					
ANR	4809171	AdditiveExpression	sizeof ( opath ) - 1		4808191	0		-			
ANR	4809172	SizeofExpression	sizeof ( opath )		4808191	0					
ANR	4809173	Sizeof	sizeof		4808191	0					
ANR	4809174	SizeofOperand	opath		4808191	1					
ANR	4809175	PrimaryExpression	1		4808191	1					
ANR	4809176	ElseStatement	else		4808191	0					
ANR	4809177	CompoundStatement		142:11:3295:3295	4808191	0					
ANR	4809178	IfStatement	if ( ( strlen ( path ) + strlen ( input ) ) >= sizeof ( path ) )		4808191	0					
ANR	4809179	Condition	( strlen ( path ) + strlen ( input ) ) >= sizeof ( path )	176:9:4099:4147	4808191	0	True				
ANR	4809180	RelationalExpression	( strlen ( path ) + strlen ( input ) ) >= sizeof ( path )		4808191	0		>=			
ANR	4809181	AdditiveExpression	strlen ( path ) + strlen ( input )		4808191	0		+			
ANR	4809182	CallExpression	strlen ( path )		4808191	0					
ANR	4809183	Callee	strlen		4808191	0					
ANR	4809184	Identifier	strlen		4808191	0					
ANR	4809185	ArgumentList	path		4808191	1					
ANR	4809186	Argument	path		4808191	0					
ANR	4809187	Identifier	path		4808191	0					
ANR	4809188	CallExpression	strlen ( input )		4808191	1					
ANR	4809189	Callee	strlen		4808191	0					
ANR	4809190	Identifier	strlen		4808191	0					
ANR	4809191	ArgumentList	input		4808191	1					
ANR	4809192	Argument	input		4808191	0					
ANR	4809193	Identifier	input		4808191	0					
ANR	4809194	SizeofExpression	sizeof ( path )		4808191	1					
ANR	4809195	Sizeof	sizeof		4808191	0					
ANR	4809196	SizeofOperand	path		4808191	1					
ANR	4809197	CompoundStatement		143:60:3357:3357	4808191	1					
ANR	4809198	ExpressionStatement	path [ 0 ] = 0	178:6:4176:4187	4808191	0	True				
ANR	4809199	AssignmentExpression	path [ 0 ] = 0		4808191	0		=			
ANR	4809200	ArrayIndexing	path [ 0 ]		4808191	0					
ANR	4809201	Identifier	path		4808191	0					
ANR	4809202	PrimaryExpression	0		4808191	1					
ANR	4809203	PrimaryExpression	0		4808191	1					
ANR	4809204	ElseStatement	else		4808191	0					
ANR	4809205	CompoundStatement		146:12:3408:3408	4808191	0					
ANR	4809206	ExpressionStatement	"strcat ( path , input )"	180:6:4209:4229	4808191	0	True				
ANR	4809207	CallExpression	"strcat ( path , input )"		4808191	0					
ANR	4809208	Callee	strcat		4808191	0					
ANR	4809209	Identifier	strcat		4808191	0					
ANR	4809210	ArgumentList	path		4808191	1					
ANR	4809211	Argument	path		4808191	0					
ANR	4809212	Identifier	path		4808191	0					
ANR	4809213	Argument	input		4808191	1					
ANR	4809214	Identifier	input		4808191	0					
ANR	4809215	ExpressionStatement	path [ sizeof ( path ) - 1 ] = 0	183:4:4248:4275	4808191	2	True				
ANR	4809216	AssignmentExpression	path [ sizeof ( path ) - 1 ] = 0		4808191	0		=			
ANR	4809217	ArrayIndexing	path [ sizeof ( path ) - 1 ]		4808191	0					
ANR	4809218	Identifier	path		4808191	0					
ANR	4809219	AdditiveExpression	sizeof ( path ) - 1		4808191	1		-			
ANR	4809220	SizeofExpression	sizeof ( path )		4808191	0					
ANR	4809221	Sizeof	sizeof		4808191	0					
ANR	4809222	SizeofOperand	path		4808191	1					
ANR	4809223	PrimaryExpression	1		4808191	1					
ANR	4809224	PrimaryExpression	0		4808191	1					
ANR	4809225	ExpressionStatement	r_str_trim_path ( path )	185:3:4285:4307	4808191	5	True				
ANR	4809226	CallExpression	r_str_trim_path ( path )		4808191	0					
ANR	4809227	Callee	r_str_trim_path		4808191	0					
ANR	4809228	Identifier	r_str_trim_path		4808191	0					
ANR	4809229	ArgumentList	path		4808191	1					
ANR	4809230	Argument	path		4808191	0					
ANR	4809231	Identifier	path		4808191	0					
ANR	4809232	ExpressionStatement	r_list_free ( list )	186:3:4312:4330	4808191	6	True				
ANR	4809233	CallExpression	r_list_free ( list )		4808191	0					
ANR	4809234	Callee	r_list_free		4808191	0					
ANR	4809235	Identifier	r_list_free		4808191	0					
ANR	4809236	ArgumentList	list		4808191	1					
ANR	4809237	Argument	list		4808191	0					
ANR	4809238	Identifier	list		4808191	0					
ANR	4809239	ExpressionStatement	"list = r_fs_dir ( fs , path )"	187:3:4335:4361	4808191	7	True				
ANR	4809240	AssignmentExpression	"list = r_fs_dir ( fs , path )"		4808191	0		=			
ANR	4809241	Identifier	list		4808191	0					
ANR	4809242	CallExpression	"r_fs_dir ( fs , path )"		4808191	1					
ANR	4809243	Callee	r_fs_dir		4808191	0					
ANR	4809244	Identifier	r_fs_dir		4808191	0					
ANR	4809245	ArgumentList	fs		4808191	1					
ANR	4809246	Argument	fs		4808191	0					
ANR	4809247	Identifier	fs		4808191	0					
ANR	4809248	Argument	path		4808191	1					
ANR	4809249	Identifier	path		4808191	0					
ANR	4809250	IfStatement	if ( r_list_empty ( list ) )		4808191	8					
ANR	4809251	Condition	r_list_empty ( list )	188:7:4370:4388	4808191	0	True				
ANR	4809252	CallExpression	r_list_empty ( list )		4808191	0					
ANR	4809253	Callee	r_list_empty		4808191	0					
ANR	4809254	Identifier	r_list_empty		4808191	0					
ANR	4809255	ArgumentList	list		4808191	1					
ANR	4809256	Argument	list		4808191	0					
ANR	4809257	Identifier	list		4808191	0					
ANR	4809258	CompoundStatement		157:4:3623:3638	4808191	1					
ANR	4809259	IdentifierDeclStatement	RFSRoot * root ;	189:4:4397:4410	4808191	0	True				
ANR	4809260	IdentifierDecl	* root		4808191	0					
ANR	4809261	IdentifierDeclType	RFSRoot *		4808191	0					
ANR	4809262	Identifier	root		4808191	1					
ANR	4809263	IdentifierDeclStatement	RListIter * iter ;	190:4:4416:4431	4808191	1	True				
ANR	4809264	IdentifierDecl	* iter		4808191	0					
ANR	4809265	IdentifierDeclType	RListIter *		4808191	0					
ANR	4809266	Identifier	iter		4808191	1					
ANR	4809267	Statement	r_list_foreach	191:4:4437:4450	4808191	2	True				
ANR	4809268	Statement	(	191:19:4452:4452	4808191	3	True				
ANR	4809269	Statement	fs	191:20:4453:4454	4808191	4	True				
ANR	4809270	Statement	->	191:22:4455:4456	4808191	5	True				
ANR	4809271	Statement	roots	191:24:4457:4461	4808191	6	True				
ANR	4809272	Statement	","	191:29:4462:4462	4808191	7	True				
ANR	4809273	Statement	iter	191:31:4464:4467	4808191	8	True				
ANR	4809274	Statement	","	191:35:4468:4468	4808191	9	True				
ANR	4809275	Statement	root	191:37:4470:4473	4808191	10	True				
ANR	4809276	Statement	)	191:41:4474:4474	4808191	11	True				
ANR	4809277	CompoundStatement		158:43:3683:3683	4808191	12					
ANR	4809278	IfStatement	"if ( ! strcmp ( path , root -> path ) )"		4808191	0					
ANR	4809279	Condition	"! strcmp ( path , root -> path )"	192:9:4487:4512	4808191	0	True				
ANR	4809280	UnaryOperationExpression	"! strcmp ( path , root -> path )"		4808191	0					
ANR	4809281	UnaryOperator	!		4808191	0					
ANR	4809282	CallExpression	"strcmp ( path , root -> path )"		4808191	1					
ANR	4809283	Callee	strcmp		4808191	0					
ANR	4809284	Identifier	strcmp		4808191	0					
ANR	4809285	ArgumentList	path		4808191	1					
ANR	4809286	Argument	path		4808191	0					
ANR	4809287	Identifier	path		4808191	0					
ANR	4809288	Argument	root -> path		4808191	1					
ANR	4809289	PtrMemberAccess	root -> path		4808191	0					
ANR	4809290	Identifier	root		4808191	0					
ANR	4809291	Identifier	path		4808191	1					
ANR	4809292	CompoundStatement		159:37:3722:3722	4808191	1					
ANR	4809293	ExpressionStatement	"r_list_append ( list , root -> path )"	193:6:4523:4555	4808191	0	True				
ANR	4809294	CallExpression	"r_list_append ( list , root -> path )"		4808191	0					
ANR	4809295	Callee	r_list_append		4808191	0					
ANR	4809296	Identifier	r_list_append		4808191	0					
ANR	4809297	ArgumentList	list		4808191	1					
ANR	4809298	Argument	list		4808191	0					
ANR	4809299	Identifier	list		4808191	0					
ANR	4809300	Argument	root -> path		4808191	1					
ANR	4809301	PtrMemberAccess	root -> path		4808191	0					
ANR	4809302	Identifier	root		4808191	0					
ANR	4809303	Identifier	path		4808191	1					
ANR	4809304	ElseStatement	else		4808191	0					
ANR	4809305	IfStatement	"if ( ! memcmp ( buf , ""cat "" , 4 ) )"		4808191	0					
ANR	4809306	Condition	"! memcmp ( buf , ""cat "" , 4 )"	197:13:4588:4611	4808191	0	True				
ANR	4809307	UnaryOperationExpression	"! memcmp ( buf , ""cat "" , 4 )"		4808191	0					
ANR	4809308	UnaryOperator	!		4808191	0					
ANR	4809309	CallExpression	"memcmp ( buf , ""cat "" , 4 )"		4808191	1					
ANR	4809310	Callee	memcmp		4808191	0					
ANR	4809311	Identifier	memcmp		4808191	0					
ANR	4809312	ArgumentList	buf		4808191	1					
ANR	4809313	Argument	buf		4808191	0					
ANR	4809314	Identifier	buf		4808191	0					
ANR	4809315	Argument	"""cat """		4808191	1					
ANR	4809316	PrimaryExpression	"""cat """		4808191	0					
ANR	4809317	Argument	4		4808191	2					
ANR	4809318	PrimaryExpression	4		4808191	0					
ANR	4809319	CompoundStatement		180:3:4191:4218	4808191	1					
ANR	4809320	ExpressionStatement	input = buf + 3	198:3:4619:4634	4808191	0	True				
ANR	4809321	AssignmentExpression	input = buf + 3		4808191	0		=			
ANR	4809322	Identifier	input		4808191	0					
ANR	4809323	AdditiveExpression	buf + 3		4808191	1		+			
ANR	4809324	Identifier	buf		4808191	0					
ANR	4809325	PrimaryExpression	3		4808191	1					
ANR	4809326	WhileStatement	while ( input [ 0 ] == ' ' )		4808191	1					
ANR	4809327	Condition	input [ 0 ] == ' '	199:10:4646:4660	4808191	0	True				
ANR	4809328	EqualityExpression	input [ 0 ] == ' '		4808191	0		==			
ANR	4809329	ArrayIndexing	input [ 0 ]		4808191	0					
ANR	4809330	Identifier	input		4808191	0					
ANR	4809331	PrimaryExpression	0		4808191	1					
ANR	4809332	PrimaryExpression	' '		4808191	1					
ANR	4809333	CompoundStatement		166:27:3870:3870	4808191	1					
ANR	4809334	ExpressionStatement	input ++	200:4:4669:4676	4808191	0	True				
ANR	4809335	PostIncDecOperationExpression	input ++		4808191	0					
ANR	4809336	Identifier	input		4808191	0					
ANR	4809337	IncDec	++		4808191	1					
ANR	4809338	IfStatement	if ( input [ 0 ] == '/' )		4808191	2					
ANR	4809339	Condition	input [ 0 ] == '/'	202:7:4690:4704	4808191	0	True				
ANR	4809340	EqualityExpression	input [ 0 ] == '/'		4808191	0		==			
ANR	4809341	ArrayIndexing	input [ 0 ]		4808191	0					
ANR	4809342	Identifier	input		4808191	0					
ANR	4809343	PrimaryExpression	0		4808191	1					
ANR	4809344	PrimaryExpression	'/'		4808191	1					
ANR	4809345	CompoundStatement		169:24:3914:3914	4808191	1					
ANR	4809346	IfStatement	if ( root )		4808191	0					
ANR	4809347	Condition	root	203:8:4717:4720	4808191	0	True				
ANR	4809348	Identifier	root		4808191	0					
ANR	4809349	CompoundStatement		170:14:3930:3930	4808191	1					
ANR	4809350	ExpressionStatement	"strncpy ( str , root , sizeof ( str ) - 1 )"	204:5:4730:4767	4808191	0	True				
ANR	4809351	CallExpression	"strncpy ( str , root , sizeof ( str ) - 1 )"		4808191	0					
ANR	4809352	Callee	strncpy		4808191	0					
ANR	4809353	Identifier	strncpy		4808191	0					
ANR	4809354	ArgumentList	str		4808191	1					
ANR	4809355	Argument	str		4808191	0					
ANR	4809356	Identifier	str		4808191	0					
ANR	4809357	Argument	root		4808191	1					
ANR	4809358	Identifier	root		4808191	0					
ANR	4809359	Argument	sizeof ( str ) - 1		4808191	2					
ANR	4809360	AdditiveExpression	sizeof ( str ) - 1		4808191	0		-			
ANR	4809361	SizeofExpression	sizeof ( str )		4808191	0					
ANR	4809362	Sizeof	sizeof		4808191	0					
ANR	4809363	SizeofOperand	str		4808191	1					
ANR	4809364	PrimaryExpression	1		4808191	1					
ANR	4809365	ElseStatement	else		4808191	0					
ANR	4809366	CompoundStatement		172:11:3987:3987	4808191	0					
ANR	4809367	ExpressionStatement	str [ 0 ] = 0	206:5:4787:4797	4808191	0	True				
ANR	4809368	AssignmentExpression	str [ 0 ] = 0		4808191	0		=			
ANR	4809369	ArrayIndexing	str [ 0 ]		4808191	0					
ANR	4809370	Identifier	str		4808191	0					
ANR	4809371	PrimaryExpression	0		4808191	1					
ANR	4809372	PrimaryExpression	0		4808191	1					
ANR	4809373	ElseStatement	else		4808191	0					
ANR	4809374	CompoundStatement		175:10:4022:4022	4808191	0					
ANR	4809375	ExpressionStatement	"strncpy ( str , path , sizeof ( str ) - 1 )"	209:4:4821:4858	4808191	0	True				
ANR	4809376	CallExpression	"strncpy ( str , path , sizeof ( str ) - 1 )"		4808191	0					
ANR	4809377	Callee	strncpy		4808191	0					
ANR	4809378	Identifier	strncpy		4808191	0					
ANR	4809379	ArgumentList	str		4808191	1					
ANR	4809380	Argument	str		4808191	0					
ANR	4809381	Identifier	str		4808191	0					
ANR	4809382	Argument	path		4808191	1					
ANR	4809383	Identifier	path		4808191	0					
ANR	4809384	Argument	sizeof ( str ) - 1		4808191	2					
ANR	4809385	AdditiveExpression	sizeof ( str ) - 1		4808191	0		-			
ANR	4809386	SizeofExpression	sizeof ( str )		4808191	0					
ANR	4809387	Sizeof	sizeof		4808191	0					
ANR	4809388	SizeofOperand	str		4808191	1					
ANR	4809389	PrimaryExpression	1		4808191	1					
ANR	4809390	ExpressionStatement	"strncat ( str , ""/"" , sizeof ( str ) - strlen ( str ) - 1 )"	211:3:4868:4921	4808191	3	True				
ANR	4809391	CallExpression	"strncat ( str , ""/"" , sizeof ( str ) - strlen ( str ) - 1 )"		4808191	0					
ANR	4809392	Callee	strncat		4808191	0					
ANR	4809393	Identifier	strncat		4808191	0					
ANR	4809394	ArgumentList	str		4808191	1					
ANR	4809395	Argument	str		4808191	0					
ANR	4809396	Identifier	str		4808191	0					
ANR	4809397	Argument	"""/"""		4808191	1					
ANR	4809398	PrimaryExpression	"""/"""		4808191	0					
ANR	4809399	Argument	sizeof ( str ) - strlen ( str ) - 1		4808191	2					
ANR	4809400	AdditiveExpression	sizeof ( str ) - strlen ( str ) - 1		4808191	0		-			
ANR	4809401	SizeofExpression	sizeof ( str )		4808191	0					
ANR	4809402	Sizeof	sizeof		4808191	0					
ANR	4809403	SizeofOperand	str		4808191	1					
ANR	4809404	AdditiveExpression	strlen ( str ) - 1		4808191	1		-			
ANR	4809405	CallExpression	strlen ( str )		4808191	0					
ANR	4809406	Callee	strlen		4808191	0					
ANR	4809407	Identifier	strlen		4808191	0					
ANR	4809408	ArgumentList	str		4808191	1					
ANR	4809409	Argument	str		4808191	0					
ANR	4809410	Identifier	str		4808191	0					
ANR	4809411	PrimaryExpression	1		4808191	1					
ANR	4809412	ExpressionStatement	"strncat ( str , input , sizeof ( str ) - strlen ( str ) - 1 )"	212:3:4926:4979	4808191	4	True				
ANR	4809413	CallExpression	"strncat ( str , input , sizeof ( str ) - strlen ( str ) - 1 )"		4808191	0					
ANR	4809414	Callee	strncat		4808191	0					
ANR	4809415	Identifier	strncat		4808191	0					
ANR	4809416	ArgumentList	str		4808191	1					
ANR	4809417	Argument	str		4808191	0					
ANR	4809418	Identifier	str		4808191	0					
ANR	4809419	Argument	input		4808191	1					
ANR	4809420	Identifier	input		4808191	0					
ANR	4809421	Argument	sizeof ( str ) - strlen ( str ) - 1		4808191	2					
ANR	4809422	AdditiveExpression	sizeof ( str ) - strlen ( str ) - 1		4808191	0		-			
ANR	4809423	SizeofExpression	sizeof ( str )		4808191	0					
ANR	4809424	Sizeof	sizeof		4808191	0					
ANR	4809425	SizeofOperand	str		4808191	1					
ANR	4809426	AdditiveExpression	strlen ( str ) - 1		4808191	1		-			
ANR	4809427	CallExpression	strlen ( str )		4808191	0					
ANR	4809428	Callee	strlen		4808191	0					
ANR	4809429	Identifier	strlen		4808191	0					
ANR	4809430	ArgumentList	str		4808191	1					
ANR	4809431	Argument	str		4808191	0					
ANR	4809432	Identifier	str		4808191	0					
ANR	4809433	PrimaryExpression	1		4808191	1					
ANR	4809434	IdentifierDeclStatement	"char * p = strchr ( str , '>' ) ;"	213:3:4984:5011	4808191	5	True				
ANR	4809435	IdentifierDecl	"* p = strchr ( str , '>' )"		4808191	0					
ANR	4809436	IdentifierDeclType	char *		4808191	0					
ANR	4809437	Identifier	p		4808191	1					
ANR	4809438	AssignmentExpression	"* p = strchr ( str , '>' )"		4808191	2		=			
ANR	4809439	Identifier	p		4808191	0					
ANR	4809440	CallExpression	"strchr ( str , '>' )"		4808191	1					
ANR	4809441	Callee	strchr		4808191	0					
ANR	4809442	Identifier	strchr		4808191	0					
ANR	4809443	ArgumentList	str		4808191	1					
ANR	4809444	Argument	str		4808191	0					
ANR	4809445	Identifier	str		4808191	0					
ANR	4809446	Argument	'>'		4808191	1					
ANR	4809447	PrimaryExpression	'>'		4808191	0					
ANR	4809448	IfStatement	if ( p )		4808191	6					
ANR	4809449	Condition	p	214:7:5020:5020	4808191	0	True				
ANR	4809450	Identifier	p		4808191	0					
ANR	4809451	CompoundStatement		181:10:4230:4230	4808191	1					
ANR	4809452	ExpressionStatement	* p = 0	215:4:5029:5035	4808191	0	True				
ANR	4809453	AssignmentExpression	* p = 0		4808191	0		=			
ANR	4809454	UnaryOperationExpression	* p		4808191	0					
ANR	4809455	UnaryOperator	*		4808191	0					
ANR	4809456	Identifier	p		4808191	1					
ANR	4809457	PrimaryExpression	0		4808191	1					
ANR	4809458	ExpressionStatement	"file = r_fs_open ( fs , str , false )"	217:3:5045:5078	4808191	7	True				
ANR	4809459	AssignmentExpression	"file = r_fs_open ( fs , str , false )"		4808191	0		=			
ANR	4809460	Identifier	file		4808191	0					
ANR	4809461	CallExpression	"r_fs_open ( fs , str , false )"		4808191	1					
ANR	4809462	Callee	r_fs_open		4808191	0					
ANR	4809463	Identifier	r_fs_open		4808191	0					
ANR	4809464	ArgumentList	fs		4808191	1					
ANR	4809465	Argument	fs		4808191	0					
ANR	4809466	Identifier	fs		4808191	0					
ANR	4809467	Argument	str		4808191	1					
ANR	4809468	Identifier	str		4808191	0					
ANR	4809469	Argument	false		4808191	2					
ANR	4809470	Identifier	false		4808191	0					
ANR	4809471	IfStatement	if ( file )		4808191	8					
ANR	4809472	Condition	file	218:7:5087:5090	4808191	0	True				
ANR	4809473	Identifier	file		4808191	0					
ANR	4809474	CompoundStatement		185:13:4300:4300	4808191	1					
ANR	4809475	IfStatement	if ( p )		4808191	0					
ANR	4809476	Condition	p	219:8:5103:5103	4808191	0	True				
ANR	4809477	Identifier	p		4808191	0					
ANR	4809478	CompoundStatement		186:11:4313:4313	4808191	1					
ANR	4809479	ExpressionStatement	* p = '>'	220:5:5113:5121	4808191	0	True				
ANR	4809480	AssignmentExpression	* p = '>'		4808191	0		=			
ANR	4809481	UnaryOperationExpression	* p		4808191	0					
ANR	4809482	UnaryOperator	*		4808191	0					
ANR	4809483	Identifier	p		4808191	1					
ANR	4809484	PrimaryExpression	'>'		4808191	1					
ANR	4809485	ExpressionStatement	"r_fs_read ( fs , file , 0 , file -> size )"	222:4:5133:5168	4808191	1	True				
ANR	4809486	CallExpression	"r_fs_read ( fs , file , 0 , file -> size )"		4808191	0					
ANR	4809487	Callee	r_fs_read		4808191	0					
ANR	4809488	Identifier	r_fs_read		4808191	0					
ANR	4809489	ArgumentList	fs		4808191	1					
ANR	4809490	Argument	fs		4808191	0					
ANR	4809491	Identifier	fs		4808191	0					
ANR	4809492	Argument	file		4808191	1					
ANR	4809493	Identifier	file		4808191	0					
ANR	4809494	Argument	0		4808191	2					
ANR	4809495	PrimaryExpression	0		4808191	0					
ANR	4809496	Argument	file -> size		4808191	3					
ANR	4809497	PtrMemberAccess	file -> size		4808191	0					
ANR	4809498	Identifier	file		4808191	0					
ANR	4809499	Identifier	size		4808191	1					
ANR	4809500	IfStatement	"if ( ! handlePipes ( fs , str , file -> data , path ) )"		4808191	2					
ANR	4809501	Condition	"! handlePipes ( fs , str , file -> data , path )"	223:8:5178:5217	4808191	0	True				
ANR	4809502	UnaryOperationExpression	"! handlePipes ( fs , str , file -> data , path )"		4808191	0					
ANR	4809503	UnaryOperator	!		4808191	0					
ANR	4809504	CallExpression	"handlePipes ( fs , str , file -> data , path )"		4808191	1					
ANR	4809505	Callee	handlePipes		4808191	0					
ANR	4809506	Identifier	handlePipes		4808191	0					
ANR	4809507	ArgumentList	fs		4808191	1					
ANR	4809508	Argument	fs		4808191	0					
ANR	4809509	Identifier	fs		4808191	0					
ANR	4809510	Argument	str		4808191	1					
ANR	4809511	Identifier	str		4808191	0					
ANR	4809512	Argument	file -> data		4808191	2					
ANR	4809513	PtrMemberAccess	file -> data		4808191	0					
ANR	4809514	Identifier	file		4808191	0					
ANR	4809515	Identifier	data		4808191	1					
ANR	4809516	Argument	path		4808191	3					
ANR	4809517	Identifier	path		4808191	0					
ANR	4809518	CompoundStatement		190:50:4427:4427	4808191	1					
ANR	4809519	ExpressionStatement	"write ( 1 , file -> data , file -> size )"	224:5:5227:5260	4808191	0	True				
ANR	4809520	CallExpression	"write ( 1 , file -> data , file -> size )"		4808191	0					
ANR	4809521	Callee	write		4808191	0					
ANR	4809522	Identifier	write		4808191	0					
ANR	4809523	ArgumentList	1		4808191	1					
ANR	4809524	Argument	1		4808191	0					
ANR	4809525	PrimaryExpression	1		4808191	0					
ANR	4809526	Argument	file -> data		4808191	1					
ANR	4809527	PtrMemberAccess	file -> data		4808191	0					
ANR	4809528	Identifier	file		4808191	0					
ANR	4809529	Identifier	data		4808191	1					
ANR	4809530	Argument	file -> size		4808191	2					
ANR	4809531	PtrMemberAccess	file -> size		4808191	0					
ANR	4809532	Identifier	file		4808191	0					
ANR	4809533	Identifier	size		4808191	1					
ANR	4809534	ExpressionStatement	"write ( 1 , ""\\n"" , 1 )"	226:4:5272:5290	4808191	3	True				
ANR	4809535	CallExpression	"write ( 1 , ""\\n"" , 1 )"		4808191	0					
ANR	4809536	Callee	write		4808191	0					
ANR	4809537	Identifier	write		4808191	0					
ANR	4809538	ArgumentList	1		4808191	1					
ANR	4809539	Argument	1		4808191	0					
ANR	4809540	PrimaryExpression	1		4808191	0					
ANR	4809541	Argument	"""\\n"""		4808191	1					
ANR	4809542	PrimaryExpression	"""\\n"""		4808191	0					
ANR	4809543	Argument	1		4808191	2					
ANR	4809544	PrimaryExpression	1		4808191	0					
ANR	4809545	ExpressionStatement	"r_fs_close ( fs , file )"	227:4:5296:5317	4808191	4	True				
ANR	4809546	CallExpression	"r_fs_close ( fs , file )"		4808191	0					
ANR	4809547	Callee	r_fs_close		4808191	0					
ANR	4809548	Identifier	r_fs_close		4808191	0					
ANR	4809549	ArgumentList	fs		4808191	1					
ANR	4809550	Argument	fs		4808191	0					
ANR	4809551	Identifier	fs		4808191	0					
ANR	4809552	Argument	file		4808191	1					
ANR	4809553	Identifier	file		4808191	0					
ANR	4809554	ElseStatement	else		4808191	0					
ANR	4809555	CompoundStatement		195:10:4536:4536	4808191	0					
ANR	4809556	ExpressionStatement	"eprintf ( ""Cannot open file\\n"" )"	229:4:5335:5365	4808191	0	True				
ANR	4809557	CallExpression	"eprintf ( ""Cannot open file\\n"" )"		4808191	0					
ANR	4809558	Callee	eprintf		4808191	0					
ANR	4809559	Identifier	eprintf		4808191	0					
ANR	4809560	ArgumentList	"""Cannot open file\\n"""		4808191	1					
ANR	4809561	Argument	"""Cannot open file\\n"""		4808191	0					
ANR	4809562	PrimaryExpression	"""Cannot open file\\n"""		4808191	0					
ANR	4809563	ElseStatement	else		4808191	0					
ANR	4809564	IfStatement	"if ( ! memcmp ( buf , ""mount"" , 5 ) )"		4808191	0					
ANR	4809565	Condition	"! memcmp ( buf , ""mount"" , 5 )"	231:13:5385:5409	4808191	0	True				
ANR	4809566	UnaryOperationExpression	"! memcmp ( buf , ""mount"" , 5 )"		4808191	0					
ANR	4809567	UnaryOperator	!		4808191	0					
ANR	4809568	CallExpression	"memcmp ( buf , ""mount"" , 5 )"		4808191	1					
ANR	4809569	Callee	memcmp		4808191	0					
ANR	4809570	Identifier	memcmp		4808191	0					
ANR	4809571	ArgumentList	buf		4808191	1					
ANR	4809572	Argument	buf		4808191	0					
ANR	4809573	Identifier	buf		4808191	0					
ANR	4809574	Argument	"""mount"""		4808191	1					
ANR	4809575	PrimaryExpression	"""mount"""		4808191	0					
ANR	4809576	Argument	5		4808191	2					
ANR	4809577	PrimaryExpression	5		4808191	0					
ANR	4809578	CompoundStatement		199:3:4624:4634	4808191	1					
ANR	4809579	IdentifierDeclStatement	RFSRoot * r ;	232:3:5417:5427	4808191	0	True				
ANR	4809580	IdentifierDecl	* r		4808191	0					
ANR	4809581	IdentifierDeclType	RFSRoot *		4808191	0					
ANR	4809582	Identifier	r		4808191	1					
ANR	4809583	Statement	r_list_foreach	233:3:5432:5445	4808191	1	True				
ANR	4809584	Statement	(	233:18:5447:5447	4808191	2	True				
ANR	4809585	Statement	fs	233:19:5448:5449	4808191	3	True				
ANR	4809586	Statement	->	233:21:5450:5451	4808191	4	True				
ANR	4809587	Statement	roots	233:23:5452:5456	4808191	5	True				
ANR	4809588	Statement	","	233:28:5457:5457	4808191	6	True				
ANR	4809589	Statement	iter	233:30:5459:5462	4808191	7	True				
ANR	4809590	Statement	","	233:34:5463:5463	4808191	8	True				
ANR	4809591	Statement	r	233:36:5465:5465	4808191	9	True				
ANR	4809592	Statement	)	233:37:5466:5466	4808191	10	True				
ANR	4809593	CompoundStatement		200:39:4675:4675	4808191	11					
ANR	4809594	ExpressionStatement	"eprintf ( ""%s %s\\n"" , r -> path , r -> p -> name )"	234:4:5474:5514	4808191	0	True				
ANR	4809595	CallExpression	"eprintf ( ""%s %s\\n"" , r -> path , r -> p -> name )"		4808191	0					
ANR	4809596	Callee	eprintf		4808191	0					
ANR	4809597	Identifier	eprintf		4808191	0					
ANR	4809598	ArgumentList	"""%s %s\\n"""		4808191	1					
ANR	4809599	Argument	"""%s %s\\n"""		4808191	0					
ANR	4809600	PrimaryExpression	"""%s %s\\n"""		4808191	0					
ANR	4809601	Argument	r -> path		4808191	1					
ANR	4809602	PtrMemberAccess	r -> path		4808191	0					
ANR	4809603	Identifier	r		4808191	0					
ANR	4809604	Identifier	path		4808191	1					
ANR	4809605	Argument	r -> p -> name		4808191	2					
ANR	4809606	PtrMemberAccess	r -> p -> name		4808191	0					
ANR	4809607	PtrMemberAccess	r -> p		4808191	0					
ANR	4809608	Identifier	r		4808191	0					
ANR	4809609	Identifier	p		4808191	1					
ANR	4809610	Identifier	name		4808191	1					
ANR	4809611	ElseStatement	else		4808191	0					
ANR	4809612	IfStatement	"if ( ! memcmp ( buf , ""get "" , 4 ) )"		4808191	0					
ANR	4809613	Condition	"! memcmp ( buf , ""get "" , 4 )"	236:13:5534:5557	4808191	0	True				
ANR	4809614	UnaryOperationExpression	"! memcmp ( buf , ""get "" , 4 )"		4808191	0					
ANR	4809615	UnaryOperator	!		4808191	0					
ANR	4809616	CallExpression	"memcmp ( buf , ""get "" , 4 )"		4808191	1					
ANR	4809617	Callee	memcmp		4808191	0					
ANR	4809618	Identifier	memcmp		4808191	0					
ANR	4809619	ArgumentList	buf		4808191	1					
ANR	4809620	Argument	buf		4808191	0					
ANR	4809621	Identifier	buf		4808191	0					
ANR	4809622	Argument	"""get """		4808191	1					
ANR	4809623	PrimaryExpression	"""get """		4808191	0					
ANR	4809624	Argument	4		4808191	2					
ANR	4809625	PrimaryExpression	4		4808191	0					
ANR	4809626	CompoundStatement		204:3:4772:4783	4808191	1					
ANR	4809627	IdentifierDeclStatement	char * s = 0 ;	237:3:5565:5576	4808191	0	True				
ANR	4809628	IdentifierDecl	* s = 0		4808191	0					
ANR	4809629	IdentifierDeclType	char *		4808191	0					
ANR	4809630	Identifier	s		4808191	1					
ANR	4809631	AssignmentExpression	* s = 0		4808191	2		=			
ANR	4809632	Identifier	s		4808191	0					
ANR	4809633	PrimaryExpression	0		4808191	1					
ANR	4809634	ExpressionStatement	input = buf + 3	238:3:5581:5596	4808191	1	True				
ANR	4809635	AssignmentExpression	input = buf + 3		4808191	0		=			
ANR	4809636	Identifier	input		4808191	0					
ANR	4809637	AdditiveExpression	buf + 3		4808191	1		+			
ANR	4809638	Identifier	buf		4808191	0					
ANR	4809639	PrimaryExpression	3		4808191	1					
ANR	4809640	WhileStatement	while ( input [ 0 ] == ' ' )		4808191	2					
ANR	4809641	Condition	input [ 0 ] == ' '	239:10:5608:5622	4808191	0	True				
ANR	4809642	EqualityExpression	input [ 0 ] == ' '		4808191	0		==			
ANR	4809643	ArrayIndexing	input [ 0 ]		4808191	0					
ANR	4809644	Identifier	input		4808191	0					
ANR	4809645	PrimaryExpression	0		4808191	1					
ANR	4809646	PrimaryExpression	' '		4808191	1					
ANR	4809647	CompoundStatement		206:27:4832:4832	4808191	1					
ANR	4809648	ExpressionStatement	input ++	240:4:5631:5638	4808191	0	True				
ANR	4809649	PostIncDecOperationExpression	input ++		4808191	0					
ANR	4809650	Identifier	input		4808191	0					
ANR	4809651	IncDec	++		4808191	1					
ANR	4809652	IfStatement	if ( input [ 0 ] == '/' )		4808191	3					
ANR	4809653	Condition	input [ 0 ] == '/'	242:7:5652:5666	4808191	0	True				
ANR	4809654	EqualityExpression	input [ 0 ] == '/'		4808191	0		==			
ANR	4809655	ArrayIndexing	input [ 0 ]		4808191	0					
ANR	4809656	Identifier	input		4808191	0					
ANR	4809657	PrimaryExpression	0		4808191	1					
ANR	4809658	PrimaryExpression	'/'		4808191	1					
ANR	4809659	CompoundStatement		209:24:4876:4876	4808191	1					
ANR	4809660	IfStatement	if ( root )		4808191	0					
ANR	4809661	Condition	root	243:8:5679:5682	4808191	0	True				
ANR	4809662	Identifier	root		4808191	0					
ANR	4809663	CompoundStatement		210:14:4892:4892	4808191	1					
ANR	4809664	ExpressionStatement	s = malloc ( strlen ( root ) + strlen ( input ) + 2 )	244:5:5692:5739	4808191	0	True				
ANR	4809665	AssignmentExpression	s = malloc ( strlen ( root ) + strlen ( input ) + 2 )		4808191	0		=			
ANR	4809666	Identifier	s		4808191	0					
ANR	4809667	CallExpression	malloc ( strlen ( root ) + strlen ( input ) + 2 )		4808191	1					
ANR	4809668	Callee	malloc		4808191	0					
ANR	4809669	Identifier	malloc		4808191	0					
ANR	4809670	ArgumentList	strlen ( root ) + strlen ( input ) + 2		4808191	1					
ANR	4809671	Argument	strlen ( root ) + strlen ( input ) + 2		4808191	0					
ANR	4809672	AdditiveExpression	strlen ( root ) + strlen ( input ) + 2		4808191	0		+			
ANR	4809673	CallExpression	strlen ( root )		4808191	0					
ANR	4809674	Callee	strlen		4808191	0					
ANR	4809675	Identifier	strlen		4808191	0					
ANR	4809676	ArgumentList	root		4808191	1					
ANR	4809677	Argument	root		4808191	0					
ANR	4809678	Identifier	root		4808191	0					
ANR	4809679	AdditiveExpression	strlen ( input ) + 2		4808191	1		+			
ANR	4809680	CallExpression	strlen ( input )		4808191	0					
ANR	4809681	Callee	strlen		4808191	0					
ANR	4809682	Identifier	strlen		4808191	0					
ANR	4809683	ArgumentList	input		4808191	1					
ANR	4809684	Argument	input		4808191	0					
ANR	4809685	Identifier	input		4808191	0					
ANR	4809686	PrimaryExpression	2		4808191	1					
ANR	4809687	IfStatement	if ( ! s )		4808191	1					
ANR	4809688	Condition	! s	245:9:5750:5751	4808191	0	True				
ANR	4809689	UnaryOperationExpression	! s		4808191	0					
ANR	4809690	UnaryOperator	!		4808191	0					
ANR	4809691	Identifier	s		4808191	1					
ANR	4809692	CompoundStatement		212:13:4961:4961	4808191	1					
ANR	4809693	GotoStatement	goto beach ;	246:6:5762:5772	4808191	0	True				
ANR	4809694	Identifier	beach		4808191	0					
ANR	4809695	ExpressionStatement	"strcpy ( s , root )"	248:5:5786:5802	4808191	2	True				
ANR	4809696	CallExpression	"strcpy ( s , root )"		4808191	0					
ANR	4809697	Callee	strcpy		4808191	0					
ANR	4809698	Identifier	strcpy		4808191	0					
ANR	4809699	ArgumentList	s		4808191	1					
ANR	4809700	Argument	s		4808191	0					
ANR	4809701	Identifier	s		4808191	0					
ANR	4809702	Argument	root		4808191	1					
ANR	4809703	Identifier	root		4808191	0					
ANR	4809704	ElseStatement	else		4808191	0					
ANR	4809705	CompoundStatement		217:10:5027:5027	4808191	0					
ANR	4809706	ExpressionStatement	s = malloc ( strlen ( path ) + strlen ( input ) + 2 )	251:4:5826:5873	4808191	0	True				
ANR	4809707	AssignmentExpression	s = malloc ( strlen ( path ) + strlen ( input ) + 2 )		4808191	0		=			
ANR	4809708	Identifier	s		4808191	0					
ANR	4809709	CallExpression	malloc ( strlen ( path ) + strlen ( input ) + 2 )		4808191	1					
ANR	4809710	Callee	malloc		4808191	0					
ANR	4809711	Identifier	malloc		4808191	0					
ANR	4809712	ArgumentList	strlen ( path ) + strlen ( input ) + 2		4808191	1					
ANR	4809713	Argument	strlen ( path ) + strlen ( input ) + 2		4808191	0					
ANR	4809714	AdditiveExpression	strlen ( path ) + strlen ( input ) + 2		4808191	0		+			
ANR	4809715	CallExpression	strlen ( path )		4808191	0					
ANR	4809716	Callee	strlen		4808191	0					
ANR	4809717	Identifier	strlen		4808191	0					
ANR	4809718	ArgumentList	path		4808191	1					
ANR	4809719	Argument	path		4808191	0					
ANR	4809720	Identifier	path		4808191	0					
ANR	4809721	AdditiveExpression	strlen ( input ) + 2		4808191	1		+			
ANR	4809722	CallExpression	strlen ( input )		4808191	0					
ANR	4809723	Callee	strlen		4808191	0					
ANR	4809724	Identifier	strlen		4808191	0					
ANR	4809725	ArgumentList	input		4808191	1					
ANR	4809726	Argument	input		4808191	0					
ANR	4809727	Identifier	input		4808191	0					
ANR	4809728	PrimaryExpression	2		4808191	1					
ANR	4809729	IfStatement	if ( ! s )		4808191	1					
ANR	4809730	Condition	! s	252:8:5883:5884	4808191	0	True				
ANR	4809731	UnaryOperationExpression	! s		4808191	0					
ANR	4809732	UnaryOperator	!		4808191	0					
ANR	4809733	Identifier	s		4808191	1					
ANR	4809734	CompoundStatement		219:12:5094:5094	4808191	1					
ANR	4809735	GotoStatement	goto beach ;	253:5:5894:5904	4808191	0	True				
ANR	4809736	Identifier	beach		4808191	0					
ANR	4809737	ExpressionStatement	"strcpy ( s , path )"	255:4:5916:5932	4808191	2	True				
ANR	4809738	CallExpression	"strcpy ( s , path )"		4808191	0					
ANR	4809739	Callee	strcpy		4808191	0					
ANR	4809740	Identifier	strcpy		4808191	0					
ANR	4809741	ArgumentList	s		4808191	1					
ANR	4809742	Argument	s		4808191	0					
ANR	4809743	Identifier	s		4808191	0					
ANR	4809744	Argument	path		4808191	1					
ANR	4809745	Identifier	path		4808191	0					
ANR	4809746	IfStatement	if ( ! s )		4808191	4					
ANR	4809747	Condition	! s	257:7:5946:5947	4808191	0	True				
ANR	4809748	UnaryOperationExpression	! s		4808191	0					
ANR	4809749	UnaryOperator	!		4808191	0					
ANR	4809750	Identifier	s		4808191	1					
ANR	4809751	CompoundStatement		224:11:5157:5157	4808191	1					
ANR	4809752	ExpressionStatement	"s = calloc ( strlen ( input ) + 32 , 1 )"	258:4:5956:5991	4808191	0	True				
ANR	4809753	AssignmentExpression	"s = calloc ( strlen ( input ) + 32 , 1 )"		4808191	0		=			
ANR	4809754	Identifier	s		4808191	0					
ANR	4809755	CallExpression	"calloc ( strlen ( input ) + 32 , 1 )"		4808191	1					
ANR	4809756	Callee	calloc		4808191	0					
ANR	4809757	Identifier	calloc		4808191	0					
ANR	4809758	ArgumentList	strlen ( input ) + 32		4808191	1					
ANR	4809759	Argument	strlen ( input ) + 32		4808191	0					
ANR	4809760	AdditiveExpression	strlen ( input ) + 32		4808191	0		+			
ANR	4809761	CallExpression	strlen ( input )		4808191	0					
ANR	4809762	Callee	strlen		4808191	0					
ANR	4809763	Identifier	strlen		4808191	0					
ANR	4809764	ArgumentList	input		4808191	1					
ANR	4809765	Argument	input		4808191	0					
ANR	4809766	Identifier	input		4808191	0					
ANR	4809767	PrimaryExpression	32		4808191	1					
ANR	4809768	Argument	1		4808191	1					
ANR	4809769	PrimaryExpression	1		4808191	0					
ANR	4809770	IfStatement	if ( ! s )		4808191	1					
ANR	4809771	Condition	! s	259:8:6001:6002	4808191	0	True				
ANR	4809772	UnaryOperationExpression	! s		4808191	0					
ANR	4809773	UnaryOperator	!		4808191	0					
ANR	4809774	Identifier	s		4808191	1					
ANR	4809775	CompoundStatement		226:12:5212:5212	4808191	1					
ANR	4809776	GotoStatement	goto beach ;	260:5:6012:6022	4808191	0	True				
ANR	4809777	Identifier	beach		4808191	0					
ANR	4809778	ExpressionStatement	"strcat ( s , ""/"" )"	263:3:6038:6053	4808191	5	True				
ANR	4809779	CallExpression	"strcat ( s , ""/"" )"		4808191	0					
ANR	4809780	Callee	strcat		4808191	0					
ANR	4809781	Identifier	strcat		4808191	0					
ANR	4809782	ArgumentList	s		4808191	1					
ANR	4809783	Argument	s		4808191	0					
ANR	4809784	Identifier	s		4808191	0					
ANR	4809785	Argument	"""/"""		4808191	1					
ANR	4809786	PrimaryExpression	"""/"""		4808191	0					
ANR	4809787	ExpressionStatement	"strcat ( s , input )"	264:3:6058:6075	4808191	6	True				
ANR	4809788	CallExpression	"strcat ( s , input )"		4808191	0					
ANR	4809789	Callee	strcat		4808191	0					
ANR	4809790	Identifier	strcat		4808191	0					
ANR	4809791	ArgumentList	s		4808191	1					
ANR	4809792	Argument	s		4808191	0					
ANR	4809793	Identifier	s		4808191	0					
ANR	4809794	Argument	input		4808191	1					
ANR	4809795	Identifier	input		4808191	0					
ANR	4809796	ExpressionStatement	"file = r_fs_open ( fs , s , false )"	265:3:6080:6111	4808191	7	True				
ANR	4809797	AssignmentExpression	"file = r_fs_open ( fs , s , false )"		4808191	0		=			
ANR	4809798	Identifier	file		4808191	0					
ANR	4809799	CallExpression	"r_fs_open ( fs , s , false )"		4808191	1					
ANR	4809800	Callee	r_fs_open		4808191	0					
ANR	4809801	Identifier	r_fs_open		4808191	0					
ANR	4809802	ArgumentList	fs		4808191	1					
ANR	4809803	Argument	fs		4808191	0					
ANR	4809804	Identifier	fs		4808191	0					
ANR	4809805	Argument	s		4808191	1					
ANR	4809806	Identifier	s		4808191	0					
ANR	4809807	Argument	false		4808191	2					
ANR	4809808	Identifier	false		4808191	0					
ANR	4809809	IfStatement	if ( file )		4808191	8					
ANR	4809810	Condition	file	266:7:6120:6123	4808191	0	True				
ANR	4809811	Identifier	file		4808191	0					
ANR	4809812	CompoundStatement		233:13:5333:5333	4808191	1					
ANR	4809813	ExpressionStatement	"r_fs_read ( fs , file , 0 , file -> size )"	267:4:6132:6167	4808191	0	True				
ANR	4809814	CallExpression	"r_fs_read ( fs , file , 0 , file -> size )"		4808191	0					
ANR	4809815	Callee	r_fs_read		4808191	0					
ANR	4809816	Identifier	r_fs_read		4808191	0					
ANR	4809817	ArgumentList	fs		4808191	1					
ANR	4809818	Argument	fs		4808191	0					
ANR	4809819	Identifier	fs		4808191	0					
ANR	4809820	Argument	file		4808191	1					
ANR	4809821	Identifier	file		4808191	0					
ANR	4809822	Argument	0		4808191	2					
ANR	4809823	PrimaryExpression	0		4808191	0					
ANR	4809824	Argument	file -> size		4808191	3					
ANR	4809825	PtrMemberAccess	file -> size		4808191	0					
ANR	4809826	Identifier	file		4808191	0					
ANR	4809827	Identifier	size		4808191	1					
ANR	4809828	ExpressionStatement	"r_file_dump ( input , file -> data , file -> size , 0 )"	268:4:6173:6219	4808191	1	True				
ANR	4809829	CallExpression	"r_file_dump ( input , file -> data , file -> size , 0 )"		4808191	0					
ANR	4809830	Callee	r_file_dump		4808191	0					
ANR	4809831	Identifier	r_file_dump		4808191	0					
ANR	4809832	ArgumentList	input		4808191	1					
ANR	4809833	Argument	input		4808191	0					
ANR	4809834	Identifier	input		4808191	0					
ANR	4809835	Argument	file -> data		4808191	1					
ANR	4809836	PtrMemberAccess	file -> data		4808191	0					
ANR	4809837	Identifier	file		4808191	0					
ANR	4809838	Identifier	data		4808191	1					
ANR	4809839	Argument	file -> size		4808191	2					
ANR	4809840	PtrMemberAccess	file -> size		4808191	0					
ANR	4809841	Identifier	file		4808191	0					
ANR	4809842	Identifier	size		4808191	1					
ANR	4809843	Argument	0		4808191	3					
ANR	4809844	PrimaryExpression	0		4808191	0					
ANR	4809845	ExpressionStatement	"r_fs_close ( fs , file )"	269:4:6225:6246	4808191	2	True				
ANR	4809846	CallExpression	"r_fs_close ( fs , file )"		4808191	0					
ANR	4809847	Callee	r_fs_close		4808191	0					
ANR	4809848	Identifier	r_fs_close		4808191	0					
ANR	4809849	ArgumentList	fs		4808191	1					
ANR	4809850	Argument	fs		4808191	0					
ANR	4809851	Identifier	fs		4808191	0					
ANR	4809852	Argument	file		4808191	1					
ANR	4809853	Identifier	file		4808191	0					
ANR	4809854	ElseStatement	else		4808191	0					
ANR	4809855	CompoundStatement		237:10:5465:5465	4808191	0					
ANR	4809856	ExpressionStatement	input -= 2	271:4:6264:6274	4808191	0	True				
ANR	4809857	AssignmentExpression	input -= 2		4808191	0		-=			
ANR	4809858	Identifier	input		4808191	0					
ANR	4809859	PrimaryExpression	2		4808191	1					
ANR	4809860	ExpressionStatement	"memcpy ( input , ""./"" , 2 )"	272:4:6295:6318	4808191	1	True				
ANR	4809861	CallExpression	"memcpy ( input , ""./"" , 2 )"		4808191	0					
ANR	4809862	Callee	memcpy		4808191	0					
ANR	4809863	Identifier	memcpy		4808191	0					
ANR	4809864	ArgumentList	input		4808191	1					
ANR	4809865	Argument	input		4808191	0					
ANR	4809866	Identifier	input		4808191	0					
ANR	4809867	Argument	"""./"""		4808191	1					
ANR	4809868	PrimaryExpression	"""./"""		4808191	0					
ANR	4809869	Argument	2		4808191	2					
ANR	4809870	PrimaryExpression	2		4808191	0					
ANR	4809871	IfStatement	"if ( ! r_fs_dir_dump ( fs , s , input ) )"		4808191	2					
ANR	4809872	Condition	"! r_fs_dir_dump ( fs , s , input )"	273:8:6328:6356	4808191	0	True				
ANR	4809873	UnaryOperationExpression	"! r_fs_dir_dump ( fs , s , input )"		4808191	0					
ANR	4809874	UnaryOperator	!		4808191	0					
ANR	4809875	CallExpression	"r_fs_dir_dump ( fs , s , input )"		4808191	1					
ANR	4809876	Callee	r_fs_dir_dump		4808191	0					
ANR	4809877	Identifier	r_fs_dir_dump		4808191	0					
ANR	4809878	ArgumentList	fs		4808191	1					
ANR	4809879	Argument	fs		4808191	0					
ANR	4809880	Identifier	fs		4808191	0					
ANR	4809881	Argument	s		4808191	1					
ANR	4809882	Identifier	s		4808191	0					
ANR	4809883	Argument	input		4808191	2					
ANR	4809884	Identifier	input		4808191	0					
ANR	4809885	CompoundStatement		240:39:5566:5566	4808191	1					
ANR	4809886	ExpressionStatement	"printf ( ""Cannot open file\\n"" )"	274:5:6366:6395	4808191	0	True				
ANR	4809887	CallExpression	"printf ( ""Cannot open file\\n"" )"		4808191	0					
ANR	4809888	Callee	printf		4808191	0					
ANR	4809889	Identifier	printf		4808191	0					
ANR	4809890	ArgumentList	"""Cannot open file\\n"""		4808191	1					
ANR	4809891	Argument	"""Cannot open file\\n"""		4808191	0					
ANR	4809892	PrimaryExpression	"""Cannot open file\\n"""		4808191	0					
ANR	4809893	ExpressionStatement	free ( s )	277:3:6411:6419	4808191	9	True				
ANR	4809894	CallExpression	free ( s )		4808191	0					
ANR	4809895	Callee	free		4808191	0					
ANR	4809896	Identifier	free		4808191	0					
ANR	4809897	ArgumentList	s		4808191	1					
ANR	4809898	Argument	s		4808191	0					
ANR	4809899	Identifier	s		4808191	0					
ANR	4809900	ElseStatement	else		4808191	0					
ANR	4809901	IfStatement	"if ( ! memcmp ( buf , ""help"" , 4 ) || ! strcmp ( buf , ""?"" ) )"		4808191	0					
ANR	4809902	Condition	"! memcmp ( buf , ""help"" , 4 ) || ! strcmp ( buf , ""?"" )"	278:13:6434:6479	4808191	0	True				
ANR	4809903	OrExpression	"! memcmp ( buf , ""help"" , 4 ) || ! strcmp ( buf , ""?"" )"		4808191	0		||			
ANR	4809904	UnaryOperationExpression	"! memcmp ( buf , ""help"" , 4 )"		4808191	0					
ANR	4809905	UnaryOperator	!		4808191	0					
ANR	4809906	CallExpression	"memcmp ( buf , ""help"" , 4 )"		4808191	1					
ANR	4809907	Callee	memcmp		4808191	0					
ANR	4809908	Identifier	memcmp		4808191	0					
ANR	4809909	ArgumentList	buf		4808191	1					
ANR	4809910	Argument	buf		4808191	0					
ANR	4809911	Identifier	buf		4808191	0					
ANR	4809912	Argument	"""help"""		4808191	1					
ANR	4809913	PrimaryExpression	"""help"""		4808191	0					
ANR	4809914	Argument	4		4808191	2					
ANR	4809915	PrimaryExpression	4		4808191	0					
ANR	4809916	UnaryOperationExpression	"! strcmp ( buf , ""?"" )"		4808191	1					
ANR	4809917	UnaryOperator	!		4808191	0					
ANR	4809918	CallExpression	"strcmp ( buf , ""?"" )"		4808191	1					
ANR	4809919	Callee	strcmp		4808191	0					
ANR	4809920	Identifier	strcmp		4808191	0					
ANR	4809921	ArgumentList	buf		4808191	1					
ANR	4809922	Argument	buf		4808191	0					
ANR	4809923	Identifier	buf		4808191	0					
ANR	4809924	Argument	"""?"""		4808191	1					
ANR	4809925	PrimaryExpression	"""?"""		4808191	0					
ANR	4809926	CompoundStatement		245:61:5689:5689	4808191	1					
ANR	4809927	Statement	eprintf	279:3:6487:6493	4808191	0	True				
ANR	4809928	Statement	(	279:11:6495:6495	4808191	1	True				
ANR	4809929	Statement	"""Commands:\\n"""	280:4:6501:6513	4808191	2	True				
ANR	4809930	Statement	""" !cmd        ; escape to system\\n"""	281:4:6519:6553	4808191	3	True				
ANR	4809931	Statement	""" :cmd        ; escape to the r2 repl\\n"""	282:4:6559:6598	4808191	4	True				
ANR	4809932	Statement	""" ls [path]   ; list current directory\\n"""	283:4:6604:6644	4808191	5	True				
ANR	4809933	Statement	""" cd path     ; change current directory\\n"""	284:4:6650:6692	4808191	6	True				
ANR	4809934	Statement	""" cat file    ; print contents of file\\n"""	285:4:6698:6738	4808191	7	True				
ANR	4809935	Statement	""" get file    ; dump file to disk\\n"""	286:4:6744:6779	4808191	8	True				
ANR	4809936	Statement	""" mount       ; list mount points\\n"""	287:4:6785:6820	4808191	9	True				
ANR	4809937	Statement	""" q/exit      ; leave prompt mode\\n"""	288:4:6826:6861	4808191	10	True				
ANR	4809938	Statement	""" ?/help      ; show this help\\n"""	289:4:6867:6899	4808191	11	True				
ANR	4809939	Statement	)	289:37:6900:6900	4808191	12	True				
ANR	4809940	ExpressionStatement		289:38:6901:6901	4808191	13	True				
ANR	4809941	ElseStatement	else		4808191	0					
ANR	4809942	CompoundStatement		257:9:6119:6119	4808191	0					
ANR	4809943	IfStatement	if ( * buf )		4808191	0					
ANR	4809944	Condition	* buf	291:7:6921:6924	4808191	0	True				
ANR	4809945	UnaryOperationExpression	* buf		4808191	0					
ANR	4809946	UnaryOperator	*		4808191	0					
ANR	4809947	Identifier	buf		4808191	1					
ANR	4809948	CompoundStatement		258:13:6134:6134	4808191	1					
ANR	4809949	ExpressionStatement	"eprintf ( ""Unknown command %s\\n"" , buf )"	292:4:6933:6970	4808191	0	True				
ANR	4809950	CallExpression	"eprintf ( ""Unknown command %s\\n"" , buf )"		4808191	0					
ANR	4809951	Callee	eprintf		4808191	0					
ANR	4809952	Identifier	eprintf		4808191	0					
ANR	4809953	ArgumentList	"""Unknown command %s\\n"""		4808191	1					
ANR	4809954	Argument	"""Unknown command %s\\n"""		4808191	0					
ANR	4809955	PrimaryExpression	"""Unknown command %s\\n"""		4808191	0					
ANR	4809956	Argument	buf		4808191	1					
ANR	4809957	Identifier	buf		4808191	0					
ANR	4809958	Label	beach :	296:0:6984:6989	4808191	11	True				
ANR	4809959	Identifier	beach		4808191	0					
ANR	4809960	ExpressionStatement	clearerr ( stdin )	297:1:6992:7008	4808191	12	True				
ANR	4809961	CallExpression	clearerr ( stdin )		4808191	0					
ANR	4809962	Callee	clearerr		4808191	0					
ANR	4809963	Identifier	clearerr		4808191	0					
ANR	4809964	ArgumentList	stdin		4808191	1					
ANR	4809965	Argument	stdin		4808191	0					
ANR	4809966	Identifier	stdin		4808191	0					
ANR	4809967	ExpressionStatement	"printf ( ""\\n"" )"	298:1:7011:7024	4808191	13	True				
ANR	4809968	CallExpression	"printf ( ""\\n"" )"		4808191	0					
ANR	4809969	Callee	printf		4808191	0					
ANR	4809970	Identifier	printf		4808191	0					
ANR	4809971	ArgumentList	"""\\n"""		4808191	1					
ANR	4809972	Argument	"""\\n"""		4808191	0					
ANR	4809973	PrimaryExpression	"""\\n"""		4808191	0					
ANR	4809974	ExpressionStatement	r_list_free ( list )	299:1:7027:7045	4808191	14	True				
ANR	4809975	CallExpression	r_list_free ( list )		4808191	0					
ANR	4809976	Callee	r_list_free		4808191	0					
ANR	4809977	Identifier	r_list_free		4808191	0					
ANR	4809978	ArgumentList	list		4808191	1					
ANR	4809979	Argument	list		4808191	0					
ANR	4809980	Identifier	list		4808191	0					
ANR	4809981	ReturnStatement	return true ;	300:1:7048:7059	4808191	15	True				
ANR	4809982	Identifier	true		4808191	0					
ANR	4809983	ReturnType	R_API int		4808191	1					
ANR	4809984	Identifier	r_fs_shell_prompt		4808191	2					
ANR	4809985	ParameterList	"RFSShell * shell , RFS * fs , const char * root"		4808191	3					
ANR	4809986	Parameter	RFSShell * shell	34:28:748:762	4808191	0	True				
ANR	4809987	ParameterType	RFSShell *		4808191	0					
ANR	4809988	Identifier	shell		4808191	1					
ANR	4809989	Parameter	RFS * fs	34:45:765:771	4808191	1	True				
ANR	4809990	ParameterType	RFS *		4808191	0					
ANR	4809991	Identifier	fs		4808191	1					
ANR	4809992	Parameter	const char * root	34:54:774:789	4808191	2	True				
ANR	4809993	ParameterType	const char *		4808191	0					
ANR	4809994	Identifier	root		4808191	1					
ANR	4809995	CFGEntryNode	ENTRY		4808191		True				
ANR	4809996	CFGExitNode	EXIT		4808191		True				
ANR	4809997	InfiniteForNode	true		4808191		True				
ANR	4809998	Symbol	msg		4808191						
ANR	4809999	Symbol	* * shell		4808191						
ANR	4810000	Symbol	stdin		4808191						
ANR	4810001	Symbol	file -> name		4808191						
ANR	4810002	Symbol	ls		4808191						
ANR	4810003	Symbol	* input		4808191						
ANR	4810004	Symbol	strchr		4808191						
ANR	4810005	Symbol	fgets		4808191						
ANR	4810006	Symbol	r_str_trim_dup		4808191						
ANR	4810007	Symbol	* fs		4808191						
ANR	4810008	Symbol	path		4808191						
ANR	4810009	Symbol	strlen		4808191						
ANR	4810010	Symbol	strncmp		4808191						
ANR	4810011	Symbol	handlePipes		4808191						
ANR	4810012	Symbol	memcmp		4808191						
ANR	4810013	Symbol	me		4808191						
ANR	4810014	Symbol	file -> size		4808191						
ANR	4810015	Symbol	shell -> set_prompt		4808191						
ANR	4810016	Symbol	* r -> path		4808191						
ANR	4810017	Symbol	strcmp		4808191						
ANR	4810018	Symbol	* buf		4808191						
ANR	4810019	Symbol	NULL		4808191						
ANR	4810020	Symbol	shell -> readline		4808191						
ANR	4810021	Symbol	iter		4808191						
ANR	4810022	Symbol	list		4808191						
ANR	4810023	Symbol	* file		4808191						
ANR	4810024	Symbol	* ls		4808191						
ANR	4810025	Symbol	str		4808191						
ANR	4810026	Symbol	input		4808191						
ANR	4810027	Symbol	shell		4808191						
ANR	4810028	Symbol	r_fs_root		4808191						
ANR	4810029	Symbol	r_str_lchr		4808191						
ANR	4810030	Symbol	true		4808191						
ANR	4810031	Symbol	fs -> cob . cmdstr		4808191						
ANR	4810032	Symbol	r_list_empty		4808191						
ANR	4810033	Symbol	* root		4808191						
ANR	4810034	Symbol	opath		4808191						
ANR	4810035	Symbol	calloc		4808191						
ANR	4810036	Symbol	fs -> cob		4808191						
ANR	4810037	Symbol	fs		4808191						
ANR	4810038	Symbol	shell -> hist_add		4808191						
ANR	4810039	Symbol	r_fs_dir		4808191						
ANR	4810040	Symbol	r -> p		4808191						
ANR	4810041	Symbol	file -> type		4808191						
ANR	4810042	Symbol	file		4808191						
ANR	4810043	Symbol	r_fs_dir_dump		4808191						
ANR	4810044	Symbol	root		4808191						
ANR	4810045	Symbol	* * r		4808191						
ANR	4810046	Symbol	* str		4808191						
ANR	4810047	Symbol	* shell		4808191						
ANR	4810048	Symbol	r -> path		4808191						
ANR	4810049	Symbol	r_fs_open		4808191						
ANR	4810050	Symbol	malloc		4808191						
ANR	4810051	Symbol	false		4808191						
ANR	4810052	Symbol	r -> p -> name		4808191						
ANR	4810053	Symbol	shell -> cwd		4808191						
ANR	4810054	Symbol	ptr		4808191						
ANR	4810055	Symbol	p		4808191						
ANR	4810056	Symbol	buf		4808191						
ANR	4810057	Symbol	r		4808191						
ANR	4810058	Symbol	s		4808191						
ANR	4810059	Symbol	* strlen		4808191						
ANR	4810060	Symbol	root -> path		4808191						
ANR	4810061	Symbol	file -> data		4808191						
ANR	4810062	Symbol	feof		4808191						
ANR	4810063	Symbol	* path		4808191						
ANR	4810064	Symbol	* p		4808191						
ANR	4810065	Symbol	* shell -> cwd		4808191						
ANR	4810066	Symbol	strdup		4808191						
ANR	4810067	Symbol	* r		4808191						
ANR	4810068	Symbol	* r -> p		4808191						
ANR	4810069	Symbol	prompt		4808191						
ANR	4810070	Symbol	fs -> cob . core		4808191						
ANR	4810071	Symbol	base		4808191						
