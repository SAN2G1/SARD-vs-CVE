command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5249534	File	data/converged/CVE-2019-16718~_radare2/libr_util_syscmd.c								
ANR	5249535	DeclStmt									
ANR	5249536	Decl							int	int	needs_newline
ANR	5249537	Function	showfile	12:0:182:2840							
ANR	5249538	FunctionDef	"showfile (char * res , const int nth , const char * fpath , const char * name , int printfmt)"		5249537	0					
ANR	5249539	CompoundStatement		12:99:281:2840	5249537	0					
ANR	5249540	IdentifierDeclStatement	struct stat sb ;	14:1:297:311	5249537	0	True				
ANR	5249541	IdentifierDecl	sb		5249537	0					
ANR	5249542	IdentifierDeclType	struct stat		5249537	0					
ANR	5249543	Identifier	sb		5249537	1					
ANR	5249544	IdentifierDeclStatement	const char * n = fpath ;	16:1:321:342	5249537	1	True				
ANR	5249545	IdentifierDecl	* n = fpath		5249537	0					
ANR	5249546	IdentifierDeclType	const char *		5249537	0					
ANR	5249547	Identifier	n		5249537	1					
ANR	5249548	AssignmentExpression	* n = fpath		5249537	2		=			
ANR	5249549	Identifier	fpath		5249537	0					
ANR	5249550	Identifier	fpath		5249537	1					
ANR	5249551	IdentifierDeclStatement	"char * nn , * u_rwx = NULL ;"	17:1:345:368	5249537	2	True				
ANR	5249552	IdentifierDecl	* nn		5249537	0					
ANR	5249553	IdentifierDeclType	char *		5249537	0					
ANR	5249554	Identifier	nn		5249537	1					
ANR	5249555	IdentifierDecl	* u_rwx = NULL		5249537	1					
ANR	5249556	IdentifierDeclType	char *		5249537	0					
ANR	5249557	Identifier	u_rwx		5249537	1					
ANR	5249558	AssignmentExpression	* u_rwx = NULL		5249537	2		=			
ANR	5249559	Identifier	NULL		5249537	0					
ANR	5249560	Identifier	NULL		5249537	1					
ANR	5249561	IdentifierDeclStatement	int sz = r_file_size ( n ) ;	18:1:371:395	5249537	3	True				
ANR	5249562	IdentifierDecl	sz = r_file_size ( n )		5249537	0					
ANR	5249563	IdentifierDeclType	int		5249537	0					
ANR	5249564	Identifier	sz		5249537	1					
ANR	5249565	AssignmentExpression	sz = r_file_size ( n )		5249537	2		=			
ANR	5249566	Identifier	sz		5249537	0					
ANR	5249567	CallExpression	r_file_size ( n )		5249537	1					
ANR	5249568	Callee	r_file_size		5249537	0					
ANR	5249569	Identifier	r_file_size		5249537	0					
ANR	5249570	ArgumentList	n		5249537	1					
ANR	5249571	Argument	n		5249537	0					
ANR	5249572	Identifier	n		5249537	0					
ANR	5249573	IdentifierDeclStatement	"int perm , uid = 0 , gid = 0 ;"	19:1:398:424	5249537	4	True				
ANR	5249574	IdentifierDecl	perm		5249537	0					
ANR	5249575	IdentifierDeclType	int		5249537	0					
ANR	5249576	Identifier	perm		5249537	1					
ANR	5249577	IdentifierDecl	uid = 0		5249537	1					
ANR	5249578	IdentifierDeclType	int		5249537	0					
ANR	5249579	Identifier	uid		5249537	1					
ANR	5249580	AssignmentExpression	uid = 0		5249537	2		=			
ANR	5249581	Identifier	uid		5249537	0					
ANR	5249582	PrimaryExpression	0		5249537	1					
ANR	5249583	IdentifierDecl	gid = 0		5249537	2					
ANR	5249584	IdentifierDeclType	int		5249537	0					
ANR	5249585	Identifier	gid		5249537	1					
ANR	5249586	AssignmentExpression	gid = 0		5249537	2		=			
ANR	5249587	Identifier	gid		5249537	0					
ANR	5249588	PrimaryExpression	0		5249537	1					
ANR	5249589	IdentifierDeclStatement	int fch = '-' ;	20:1:427:440	5249537	5	True				
ANR	5249590	IdentifierDecl	fch = '-'		5249537	0					
ANR	5249591	IdentifierDeclType	int		5249537	0					
ANR	5249592	Identifier	fch		5249537	1					
ANR	5249593	AssignmentExpression	fch = '-'		5249537	2		=			
ANR	5249594	Identifier	fch		5249537	0					
ANR	5249595	PrimaryExpression	'-'		5249537	1					
ANR	5249596	IfStatement	"if ( ! strncmp ( fpath , ""./"" , 2 ) )"		5249537	6					
ANR	5249597	Condition	"! strncmp ( fpath , ""./"" , 2 )"	21:5:447:471	5249537	0	True				
ANR	5249598	UnaryOperationExpression	"! strncmp ( fpath , ""./"" , 2 )"		5249537	0					
ANR	5249599	UnaryOperator	!		5249537	0					
ANR	5249600	CallExpression	"strncmp ( fpath , ""./"" , 2 )"		5249537	1					
ANR	5249601	Callee	strncmp		5249537	0					
ANR	5249602	Identifier	strncmp		5249537	0					
ANR	5249603	ArgumentList	fpath		5249537	1					
ANR	5249604	Argument	fpath		5249537	0					
ANR	5249605	Identifier	fpath		5249537	0					
ANR	5249606	Argument	"""./"""		5249537	1					
ANR	5249607	PrimaryExpression	"""./"""		5249537	0					
ANR	5249608	Argument	2		5249537	2					
ANR	5249609	PrimaryExpression	2		5249537	0					
ANR	5249610	CompoundStatement		10:32:192:192	5249537	1					
ANR	5249611	ExpressionStatement	fpath = fpath + 2	22:2:478:495	5249537	0	True				
ANR	5249612	AssignmentExpression	fpath = fpath + 2		5249537	0		=			
ANR	5249613	Identifier	fpath		5249537	0					
ANR	5249614	AdditiveExpression	fpath + 2		5249537	1		+			
ANR	5249615	Identifier	fpath		5249537	0					
ANR	5249616	PrimaryExpression	2		5249537	1					
ANR	5249617	IdentifierDeclStatement	const bool isdir = r_file_is_directory ( n ) ;	24:1:501:543	5249537	7	True				
ANR	5249618	IdentifierDecl	isdir = r_file_is_directory ( n )		5249537	0					
ANR	5249619	IdentifierDeclType	const bool		5249537	0					
ANR	5249620	Identifier	isdir		5249537	1					
ANR	5249621	AssignmentExpression	isdir = r_file_is_directory ( n )		5249537	2		=			
ANR	5249622	Identifier	isdir		5249537	0					
ANR	5249623	CallExpression	r_file_is_directory ( n )		5249537	1					
ANR	5249624	Callee	r_file_is_directory		5249537	0					
ANR	5249625	Identifier	r_file_is_directory		5249537	0					
ANR	5249626	ArgumentList	n		5249537	1					
ANR	5249627	Argument	n		5249537	0					
ANR	5249628	Identifier	n		5249537	0					
ANR	5249629	IfStatement	if ( isdir )		5249537	8					
ANR	5249630	Condition	isdir	25:5:550:554	5249537	0	True				
ANR	5249631	Identifier	isdir		5249537	0					
ANR	5249632	CompoundStatement		14:12:275:275	5249537	1					
ANR	5249633	ExpressionStatement	"nn = r_str_append ( strdup ( fpath ) , ""/"" )"	26:2:561:600	5249537	0	True				
ANR	5249634	AssignmentExpression	"nn = r_str_append ( strdup ( fpath ) , ""/"" )"		5249537	0		=			
ANR	5249635	Identifier	nn		5249537	0					
ANR	5249636	CallExpression	"r_str_append ( strdup ( fpath ) , ""/"" )"		5249537	1					
ANR	5249637	Callee	r_str_append		5249537	0					
ANR	5249638	Identifier	r_str_append		5249537	0					
ANR	5249639	ArgumentList	strdup ( fpath )		5249537	1					
ANR	5249640	Argument	strdup ( fpath )		5249537	0					
ANR	5249641	CallExpression	strdup ( fpath )		5249537	0					
ANR	5249642	Callee	strdup		5249537	0					
ANR	5249643	Identifier	strdup		5249537	0					
ANR	5249644	ArgumentList	fpath		5249537	1					
ANR	5249645	Argument	fpath		5249537	0					
ANR	5249646	Identifier	fpath		5249537	0					
ANR	5249647	Argument	"""/"""		5249537	1					
ANR	5249648	PrimaryExpression	"""/"""		5249537	0					
ANR	5249649	ElseStatement	else		5249537	0					
ANR	5249650	CompoundStatement		16:8:328:328	5249537	0					
ANR	5249651	ExpressionStatement	nn = strdup ( fpath )	28:2:614:633	5249537	0	True				
ANR	5249652	AssignmentExpression	nn = strdup ( fpath )		5249537	0		=			
ANR	5249653	Identifier	nn		5249537	0					
ANR	5249654	CallExpression	strdup ( fpath )		5249537	1					
ANR	5249655	Callee	strdup		5249537	0					
ANR	5249656	Identifier	strdup		5249537	0					
ANR	5249657	ArgumentList	fpath		5249537	1					
ANR	5249658	Argument	fpath		5249537	0					
ANR	5249659	Identifier	fpath		5249537	0					
ANR	5249660	IfStatement	if ( ! * nn )		5249537	9					
ANR	5249661	Condition	! * nn	30:5:643:646	5249537	0	True				
ANR	5249662	UnaryOperationExpression	! * nn		5249537	0					
ANR	5249663	UnaryOperator	!		5249537	0					
ANR	5249664	UnaryOperationExpression	* nn		5249537	1					
ANR	5249665	UnaryOperator	*		5249537	0					
ANR	5249666	Identifier	nn		5249537	1					
ANR	5249667	CompoundStatement		19:11:367:367	5249537	1					
ANR	5249668	ExpressionStatement	free ( nn )	31:2:653:662	5249537	0	True				
ANR	5249669	CallExpression	free ( nn )		5249537	0					
ANR	5249670	Callee	free		5249537	0					
ANR	5249671	Identifier	free		5249537	0					
ANR	5249672	ArgumentList	nn		5249537	1					
ANR	5249673	Argument	nn		5249537	0					
ANR	5249674	Identifier	nn		5249537	0					
ANR	5249675	ReturnStatement	return res ;	32:2:666:676	5249537	1	True				
ANR	5249676	Identifier	res		5249537	0					
ANR	5249677	ExpressionStatement	perm = isdir ? 0755 : 0644	34:1:682:706	5249537	10	True				
ANR	5249678	AssignmentExpression	perm = isdir ? 0755 : 0644		5249537	0		=			
ANR	5249679	Identifier	perm		5249537	0					
ANR	5249680	ConditionalExpression	isdir ? 0755 : 0644		5249537	1					
ANR	5249681	Condition	isdir		5249537	0					
ANR	5249682	Identifier	isdir		5249537	0					
ANR	5249683	PrimaryExpression	0755		5249537	1					
ANR	5249684	PrimaryExpression	0644		5249537	2					
ANR	5249685	IfStatement	if ( ! printfmt )		5249537	11					
ANR	5249686	Condition	! printfmt	35:5:713:721	5249537	0	True				
ANR	5249687	UnaryOperationExpression	! printfmt		5249537	0					
ANR	5249688	UnaryOperator	!		5249537	0					
ANR	5249689	Identifier	printfmt		5249537	1					
ANR	5249690	CompoundStatement		24:16:442:442	5249537	1					
ANR	5249691	ExpressionStatement	needs_newline = ( ( nth + 1 ) % 4 ) ? 1 : 0	36:2:728:765	5249537	0	True				
ANR	5249692	AssignmentExpression	needs_newline = ( ( nth + 1 ) % 4 ) ? 1 : 0		5249537	0		=			
ANR	5249693	Identifier	needs_newline		5249537	0					
ANR	5249694	ConditionalExpression	( ( nth + 1 ) % 4 ) ? 1 : 0		5249537	1					
ANR	5249695	Condition	( nth + 1 ) % 4		5249537	0					
ANR	5249696	MultiplicativeExpression	( nth + 1 ) % 4		5249537	0		%			
ANR	5249697	AdditiveExpression	nth + 1		5249537	0		+			
ANR	5249698	Identifier	nth		5249537	0					
ANR	5249699	PrimaryExpression	1		5249537	1					
ANR	5249700	PrimaryExpression	4		5249537	1					
ANR	5249701	PrimaryExpression	1		5249537	1					
ANR	5249702	PrimaryExpression	0		5249537	2					
ANR	5249703	ExpressionStatement	"res = r_str_appendf ( res , ""%18s%s"" , nn , needs_newline ? ""  "" : ""\\n"" )"	37:2:769:835	5249537	1	True				
ANR	5249704	AssignmentExpression	"res = r_str_appendf ( res , ""%18s%s"" , nn , needs_newline ? ""  "" : ""\\n"" )"		5249537	0		=			
ANR	5249705	Identifier	res		5249537	0					
ANR	5249706	CallExpression	"r_str_appendf ( res , ""%18s%s"" , nn , needs_newline ? ""  "" : ""\\n"" )"		5249537	1					
ANR	5249707	Callee	r_str_appendf		5249537	0					
ANR	5249708	Identifier	r_str_appendf		5249537	0					
ANR	5249709	ArgumentList	res		5249537	1					
ANR	5249710	Argument	res		5249537	0					
ANR	5249711	Identifier	res		5249537	0					
ANR	5249712	Argument	"""%18s%s"""		5249537	1					
ANR	5249713	PrimaryExpression	"""%18s%s"""		5249537	0					
ANR	5249714	Argument	nn		5249537	2					
ANR	5249715	Identifier	nn		5249537	0					
ANR	5249716	Argument	"needs_newline ? ""  "" : ""\\n"""		5249537	3					
ANR	5249717	ConditionalExpression	"needs_newline ? ""  "" : ""\\n"""		5249537	0					
ANR	5249718	Condition	needs_newline		5249537	0					
ANR	5249719	Identifier	needs_newline		5249537	0					
ANR	5249720	PrimaryExpression	"""  """		5249537	1					
ANR	5249721	PrimaryExpression	"""\\n"""		5249537	2					
ANR	5249722	ExpressionStatement	free ( nn )	38:2:839:848	5249537	2	True				
ANR	5249723	CallExpression	free ( nn )		5249537	0					
ANR	5249724	Callee	free		5249537	0					
ANR	5249725	Identifier	free		5249537	0					
ANR	5249726	ArgumentList	nn		5249537	1					
ANR	5249727	Argument	nn		5249537	0					
ANR	5249728	Identifier	nn		5249537	0					
ANR	5249729	ReturnStatement	return res ;	39:2:852:862	5249537	3	True				
ANR	5249730	Identifier	res		5249537	0					
ANR	5249731	IfStatement	"if ( lstat ( n , & sb ) != - 1 )"		5249537	12					
ANR	5249732	Condition	"lstat ( n , & sb ) != - 1"	45:5:1001:1020	5249537	0	True				
ANR	5249733	EqualityExpression	"lstat ( n , & sb ) != - 1"		5249537	0		!=			
ANR	5249734	CallExpression	"lstat ( n , & sb )"		5249537	0					
ANR	5249735	Callee	lstat		5249537	0					
ANR	5249736	Identifier	lstat		5249537	0					
ANR	5249737	ArgumentList	n		5249537	1					
ANR	5249738	Argument	n		5249537	0					
ANR	5249739	Identifier	n		5249537	0					
ANR	5249740	Argument	& sb		5249537	1					
ANR	5249741	UnaryOperationExpression	& sb		5249537	0					
ANR	5249742	UnaryOperator	&		5249537	0					
ANR	5249743	Identifier	sb		5249537	1					
ANR	5249744	UnaryOperationExpression	- 1		5249537	1					
ANR	5249745	UnaryOperator	-		5249537	0					
ANR	5249746	PrimaryExpression	1		5249537	1					
ANR	5249747	CompoundStatement		35:2:745:776	5249537	1					
ANR	5249748	IdentifierDeclStatement	ut32 ifmt = sb . st_mode & S_IFMT ;	46:2:1027:1058	5249537	0	True				
ANR	5249749	IdentifierDecl	ifmt = sb . st_mode & S_IFMT		5249537	0					
ANR	5249750	IdentifierDeclType	ut32		5249537	0					
ANR	5249751	Identifier	ifmt		5249537	1					
ANR	5249752	AssignmentExpression	ifmt = sb . st_mode & S_IFMT		5249537	2		=			
ANR	5249753	Identifier	ifmt		5249537	0					
ANR	5249754	BitAndExpression	sb . st_mode & S_IFMT		5249537	1		&			
ANR	5249755	MemberAccess	sb . st_mode		5249537	0					
ANR	5249756	Identifier	sb		5249537	0					
ANR	5249757	Identifier	st_mode		5249537	1					
ANR	5249758	Identifier	S_IFMT		5249537	1					
ANR	5249759	ExpressionStatement	uid = sb . st_uid	47:2:1062:1077	5249537	1	True				
ANR	5249760	AssignmentExpression	uid = sb . st_uid		5249537	0		=			
ANR	5249761	Identifier	uid		5249537	0					
ANR	5249762	MemberAccess	sb . st_uid		5249537	1					
ANR	5249763	Identifier	sb		5249537	0					
ANR	5249764	Identifier	st_uid		5249537	1					
ANR	5249765	ExpressionStatement	gid = sb . st_gid	48:2:1081:1096	5249537	2	True				
ANR	5249766	AssignmentExpression	gid = sb . st_gid		5249537	0		=			
ANR	5249767	Identifier	gid		5249537	0					
ANR	5249768	MemberAccess	sb . st_gid		5249537	1					
ANR	5249769	Identifier	sb		5249537	0					
ANR	5249770	Identifier	st_gid		5249537	1					
ANR	5249771	ExpressionStatement	perm = sb . st_mode & 0777	49:2:1100:1124	5249537	3	True				
ANR	5249772	AssignmentExpression	perm = sb . st_mode & 0777		5249537	0		=			
ANR	5249773	Identifier	perm		5249537	0					
ANR	5249774	BitAndExpression	sb . st_mode & 0777		5249537	1		&			
ANR	5249775	MemberAccess	sb . st_mode		5249537	0					
ANR	5249776	Identifier	sb		5249537	0					
ANR	5249777	Identifier	st_mode		5249537	1					
ANR	5249778	PrimaryExpression	0777		5249537	1					
ANR	5249779	IfStatement	if ( ! ( u_rwx = strdup ( r_str_rwx_i ( perm >> 6 ) ) ) )		5249537	4					
ANR	5249780	Condition	! ( u_rwx = strdup ( r_str_rwx_i ( perm >> 6 ) ) )	50:6:1132:1174	5249537	0	True				
ANR	5249781	UnaryOperationExpression	! ( u_rwx = strdup ( r_str_rwx_i ( perm >> 6 ) ) )		5249537	0					
ANR	5249782	UnaryOperator	!		5249537	0					
ANR	5249783	AssignmentExpression	u_rwx = strdup ( r_str_rwx_i ( perm >> 6 ) )		5249537	1		=			
ANR	5249784	Identifier	u_rwx		5249537	0					
ANR	5249785	CallExpression	strdup ( r_str_rwx_i ( perm >> 6 ) )		5249537	1					
ANR	5249786	Callee	strdup		5249537	0					
ANR	5249787	Identifier	strdup		5249537	0					
ANR	5249788	ArgumentList	r_str_rwx_i ( perm >> 6 )		5249537	1					
ANR	5249789	Argument	r_str_rwx_i ( perm >> 6 )		5249537	0					
ANR	5249790	CallExpression	r_str_rwx_i ( perm >> 6 )		5249537	0					
ANR	5249791	Callee	r_str_rwx_i		5249537	0					
ANR	5249792	Identifier	r_str_rwx_i		5249537	0					
ANR	5249793	ArgumentList	perm >> 6		5249537	1					
ANR	5249794	Argument	perm >> 6		5249537	0					
ANR	5249795	ShiftExpression	perm >> 6		5249537	0		>>			
ANR	5249796	Identifier	perm		5249537	0					
ANR	5249797	PrimaryExpression	6		5249537	1					
ANR	5249798	CompoundStatement		39:51:895:895	5249537	1					
ANR	5249799	ExpressionStatement	free ( nn )	51:3:1182:1191	5249537	0	True				
ANR	5249800	CallExpression	free ( nn )		5249537	0					
ANR	5249801	Callee	free		5249537	0					
ANR	5249802	Identifier	free		5249537	0					
ANR	5249803	ArgumentList	nn		5249537	1					
ANR	5249804	Argument	nn		5249537	0					
ANR	5249805	Identifier	nn		5249537	0					
ANR	5249806	ReturnStatement	return res ;	52:3:1196:1206	5249537	1	True				
ANR	5249807	Identifier	res		5249537	0					
ANR	5249808	IfStatement	if ( sb . st_mode & S_ISUID )		5249537	5					
ANR	5249809	Condition	sb . st_mode & S_ISUID	54:6:1218:1237	5249537	0	True				
ANR	5249810	BitAndExpression	sb . st_mode & S_ISUID		5249537	0		&			
ANR	5249811	MemberAccess	sb . st_mode		5249537	0					
ANR	5249812	Identifier	sb		5249537	0					
ANR	5249813	Identifier	st_mode		5249537	1					
ANR	5249814	Identifier	S_ISUID		5249537	1					
ANR	5249815	CompoundStatement		43:28:958:958	5249537	1					
ANR	5249816	ExpressionStatement	u_rwx [ 2 ] = ( sb . st_mode & S_IXUSR ) ? 's' : 'S'	55:3:1245:1290	5249537	0	True				
ANR	5249817	AssignmentExpression	u_rwx [ 2 ] = ( sb . st_mode & S_IXUSR ) ? 's' : 'S'		5249537	0		=			
ANR	5249818	ArrayIndexing	u_rwx [ 2 ]		5249537	0					
ANR	5249819	Identifier	u_rwx		5249537	0					
ANR	5249820	PrimaryExpression	2		5249537	1					
ANR	5249821	ConditionalExpression	( sb . st_mode & S_IXUSR ) ? 's' : 'S'		5249537	1					
ANR	5249822	Condition	sb . st_mode & S_IXUSR		5249537	0					
ANR	5249823	BitAndExpression	sb . st_mode & S_IXUSR		5249537	0		&			
ANR	5249824	MemberAccess	sb . st_mode		5249537	0					
ANR	5249825	Identifier	sb		5249537	0					
ANR	5249826	Identifier	st_mode		5249537	1					
ANR	5249827	Identifier	S_IXUSR		5249537	1					
ANR	5249828	PrimaryExpression	's'		5249537	1					
ANR	5249829	PrimaryExpression	'S'		5249537	2					
ANR	5249830	IfStatement	if ( isdir )		5249537	6					
ANR	5249831	Condition	isdir	57:6:1302:1306	5249537	0	True				
ANR	5249832	Identifier	isdir		5249537	0					
ANR	5249833	CompoundStatement		46:13:1027:1027	5249537	1					
ANR	5249834	ExpressionStatement	fch = 'd'	58:3:1314:1323	5249537	0	True				
ANR	5249835	AssignmentExpression	fch = 'd'		5249537	0		=			
ANR	5249836	Identifier	fch		5249537	0					
ANR	5249837	PrimaryExpression	'd'		5249537	1					
ANR	5249838	ElseStatement	else		5249537	0					
ANR	5249839	CompoundStatement		48:9:1052:1052	5249537	0					
ANR	5249840	SwitchStatement	switch ( ifmt )		5249537	0					
ANR	5249841	Condition	ifmt	60:11:1347:1350	5249537	0	True				
ANR	5249842	Identifier	ifmt		5249537	0					
ANR	5249843	CompoundStatement		49:17:1071:1071	5249537	1					
ANR	5249844	Label	case S_IFCHR :	61:3:1358:1370	5249537	0	True				
ANR	5249845	Identifier	S_IFCHR		5249537	0					
ANR	5249846	ExpressionStatement	fch = 'c'	61:17:1372:1381	5249537	1	True				
ANR	5249847	AssignmentExpression	fch = 'c'		5249537	0		=			
ANR	5249848	Identifier	fch		5249537	0					
ANR	5249849	PrimaryExpression	'c'		5249537	1					
ANR	5249850	BreakStatement	break ;	61:28:1383:1388	5249537	2	True				
ANR	5249851	Label	case S_IFBLK :	62:3:1393:1405	5249537	3	True				
ANR	5249852	Identifier	S_IFBLK		5249537	0					
ANR	5249853	ExpressionStatement	fch = 'b'	62:17:1407:1416	5249537	4	True				
ANR	5249854	AssignmentExpression	fch = 'b'		5249537	0		=			
ANR	5249855	Identifier	fch		5249537	0					
ANR	5249856	PrimaryExpression	'b'		5249537	1					
ANR	5249857	BreakStatement	break ;	62:28:1418:1423	5249537	5	True				
ANR	5249858	Label	case S_IFLNK :	63:3:1428:1440	5249537	6	True				
ANR	5249859	Identifier	S_IFLNK		5249537	0					
ANR	5249860	ExpressionStatement	fch = 'l'	63:17:1442:1451	5249537	7	True				
ANR	5249861	AssignmentExpression	fch = 'l'		5249537	0		=			
ANR	5249862	Identifier	fch		5249537	0					
ANR	5249863	PrimaryExpression	'l'		5249537	1					
ANR	5249864	BreakStatement	break ;	63:28:1453:1458	5249537	8	True				
ANR	5249865	Label	case S_IFIFO :	64:3:1463:1475	5249537	9	True				
ANR	5249866	Identifier	S_IFIFO		5249537	0					
ANR	5249867	ExpressionStatement	fch = 'p'	64:17:1477:1486	5249537	10	True				
ANR	5249868	AssignmentExpression	fch = 'p'		5249537	0		=			
ANR	5249869	Identifier	fch		5249537	0					
ANR	5249870	PrimaryExpression	'p'		5249537	1					
ANR	5249871	BreakStatement	break ;	64:28:1488:1493	5249537	11	True				
ANR	5249872	Label	case S_IFSOCK :	66:3:1514:1527	5249537	12	True				
ANR	5249873	Identifier	S_IFSOCK		5249537	0					
ANR	5249874	ExpressionStatement	fch = 's'	66:18:1529:1538	5249537	13	True				
ANR	5249875	AssignmentExpression	fch = 's'		5249537	0		=			
ANR	5249876	Identifier	fch		5249537	0					
ANR	5249877	PrimaryExpression	's'		5249537	1					
ANR	5249878	BreakStatement	break ;	66:29:1540:1545	5249537	14	True				
ANR	5249879	IfStatement	if ( printfmt == 'q' )		5249537	13					
ANR	5249880	Condition	printfmt == 'q'	75:5:1631:1645	5249537	0	True				
ANR	5249881	EqualityExpression	printfmt == 'q'		5249537	0		==			
ANR	5249882	Identifier	printfmt		5249537	0					
ANR	5249883	PrimaryExpression	'q'		5249537	1					
ANR	5249884	CompoundStatement		64:22:1366:1366	5249537	1					
ANR	5249885	ExpressionStatement	"res = r_str_appendf ( res , ""%s\\n"" , nn )"	76:2:1652:1689	5249537	0	True				
ANR	5249886	AssignmentExpression	"res = r_str_appendf ( res , ""%s\\n"" , nn )"		5249537	0		=			
ANR	5249887	Identifier	res		5249537	0					
ANR	5249888	CallExpression	"r_str_appendf ( res , ""%s\\n"" , nn )"		5249537	1					
ANR	5249889	Callee	r_str_appendf		5249537	0					
ANR	5249890	Identifier	r_str_appendf		5249537	0					
ANR	5249891	ArgumentList	res		5249537	1					
ANR	5249892	Argument	res		5249537	0					
ANR	5249893	Identifier	res		5249537	0					
ANR	5249894	Argument	"""%s\\n"""		5249537	1					
ANR	5249895	PrimaryExpression	"""%s\\n"""		5249537	0					
ANR	5249896	Argument	nn		5249537	2					
ANR	5249897	Identifier	nn		5249537	0					
ANR	5249898	ElseStatement	else		5249537	0					
ANR	5249899	IfStatement	if ( printfmt == 'e' )		5249537	0					
ANR	5249900	Condition	printfmt == 'e'	77:12:1703:1717	5249537	0	True				
ANR	5249901	EqualityExpression	printfmt == 'e'		5249537	0		==			
ANR	5249902	Identifier	printfmt		5249537	0					
ANR	5249903	PrimaryExpression	'e'		5249537	1					
ANR	5249904	CompoundStatement		74:2:1622:1645	5249537	1					
ANR	5249905	IdentifierDeclStatement	"const char * eDIR = ""????"" ;"	78:2:1724:1749	5249537	0	True				
ANR	5249906	IdentifierDecl	"* eDIR = ""????"""		5249537	0					
ANR	5249907	IdentifierDeclType	const char *		5249537	0					
ANR	5249908	Identifier	eDIR		5249537	1					
ANR	5249909	AssignmentExpression	"* eDIR = ""????"""		5249537	2		=			
ANR	5249910	Identifier	eDIR		5249537	0					
ANR	5249911	PrimaryExpression	"""????"""		5249537	1					
ANR	5249912	IdentifierDeclStatement	"const char * eLNK = ""????"" ;"	79:2:1753:1778	5249537	1	True				
ANR	5249913	IdentifierDecl	"* eLNK = ""????"""		5249537	0					
ANR	5249914	IdentifierDeclType	const char *		5249537	0					
ANR	5249915	Identifier	eLNK		5249537	1					
ANR	5249916	AssignmentExpression	"* eLNK = ""????"""		5249537	2		=			
ANR	5249917	Identifier	eLNK		5249537	0					
ANR	5249918	PrimaryExpression	"""????"""		5249537	1					
ANR	5249919	IdentifierDeclStatement	"const char * eIMG = ""????"" ;"	80:2:1782:1807	5249537	2	True				
ANR	5249920	IdentifierDecl	"* eIMG = ""????"""		5249537	0					
ANR	5249921	IdentifierDeclType	const char *		5249537	0					
ANR	5249922	Identifier	eIMG		5249537	1					
ANR	5249923	AssignmentExpression	"* eIMG = ""????"""		5249537	2		=			
ANR	5249924	Identifier	eIMG		5249537	0					
ANR	5249925	PrimaryExpression	"""????"""		5249537	1					
ANR	5249926	IdentifierDeclStatement	"const char * eUID = ""????"" ;"	81:2:1811:1836	5249537	3	True				
ANR	5249927	IdentifierDecl	"* eUID = ""????"""		5249537	0					
ANR	5249928	IdentifierDeclType	const char *		5249537	0					
ANR	5249929	Identifier	eUID		5249537	1					
ANR	5249930	AssignmentExpression	"* eUID = ""????"""		5249537	2		=			
ANR	5249931	Identifier	eUID		5249537	0					
ANR	5249932	PrimaryExpression	"""????"""		5249537	1					
ANR	5249933	IdentifierDeclStatement	"const char * eHID = ""????"" ;"	82:2:1840:1865	5249537	4	True				
ANR	5249934	IdentifierDecl	"* eHID = ""????"""		5249537	0					
ANR	5249935	IdentifierDeclType	const char *		5249537	0					
ANR	5249936	Identifier	eHID		5249537	1					
ANR	5249937	AssignmentExpression	"* eHID = ""????"""		5249537	2		=			
ANR	5249938	Identifier	eHID		5249537	0					
ANR	5249939	PrimaryExpression	"""????"""		5249537	1					
ANR	5249940	IdentifierDeclStatement	"const char * eANY = ""  "" ;"	83:2:1869:1892	5249537	5	True				
ANR	5249941	IdentifierDecl	"* eANY = ""  """		5249537	0					
ANR	5249942	IdentifierDeclType	const char *		5249537	0					
ANR	5249943	Identifier	eANY		5249537	1					
ANR	5249944	AssignmentExpression	"* eANY = ""  """		5249537	2		=			
ANR	5249945	Identifier	eANY		5249537	0					
ANR	5249946	PrimaryExpression	"""  """		5249537	1					
ANR	5249947	IdentifierDeclStatement	const char * icon = eANY ;	85:2:1904:1927	5249537	6	True				
ANR	5249948	IdentifierDecl	* icon = eANY		5249537	0					
ANR	5249949	IdentifierDeclType	const char *		5249537	0					
ANR	5249950	Identifier	icon		5249537	1					
ANR	5249951	AssignmentExpression	* icon = eANY		5249537	2		=			
ANR	5249952	Identifier	eANY		5249537	0					
ANR	5249953	Identifier	eANY		5249537	1					
ANR	5249954	IfStatement	if ( isdir )		5249537	7					
ANR	5249955	Condition	isdir	86:6:1935:1939	5249537	0	True				
ANR	5249956	Identifier	isdir		5249537	0					
ANR	5249957	CompoundStatement		75:13:1660:1660	5249537	1					
ANR	5249958	ExpressionStatement	icon = eDIR	87:3:1947:1958	5249537	0	True				
ANR	5249959	AssignmentExpression	icon = eDIR		5249537	0		=			
ANR	5249960	Identifier	icon		5249537	0					
ANR	5249961	Identifier	eDIR		5249537	1					
ANR	5249962	ElseStatement	else		5249537	0					
ANR	5249963	IfStatement	if ( ( sb . st_mode & S_IFMT ) == S_IFLNK )		5249537	0					
ANR	5249964	Condition	( sb . st_mode & S_IFMT ) == S_IFLNK	89:13:1986:2017	5249537	0	True				
ANR	5249965	EqualityExpression	( sb . st_mode & S_IFMT ) == S_IFLNK		5249537	0		==			
ANR	5249966	BitAndExpression	sb . st_mode & S_IFMT		5249537	0		&			
ANR	5249967	MemberAccess	sb . st_mode		5249537	0					
ANR	5249968	Identifier	sb		5249537	0					
ANR	5249969	Identifier	st_mode		5249537	1					
ANR	5249970	Identifier	S_IFMT		5249537	1					
ANR	5249971	Identifier	S_IFLNK		5249537	1					
ANR	5249972	CompoundStatement		78:47:1738:1738	5249537	1					
ANR	5249973	ExpressionStatement	icon = eLNK	90:3:2025:2036	5249537	0	True				
ANR	5249974	AssignmentExpression	icon = eLNK		5249537	0		=			
ANR	5249975	Identifier	icon		5249537	0					
ANR	5249976	Identifier	eLNK		5249537	1					
ANR	5249977	ElseStatement	else		5249537	0					
ANR	5249978	IfStatement	if ( sb . st_mode & S_ISUID )		5249537	0					
ANR	5249979	Condition	sb . st_mode & S_ISUID	91:13:2051:2070	5249537	0	True				
ANR	5249980	BitAndExpression	sb . st_mode & S_ISUID		5249537	0		&			
ANR	5249981	MemberAccess	sb . st_mode		5249537	0					
ANR	5249982	Identifier	sb		5249537	0					
ANR	5249983	Identifier	st_mode		5249537	1					
ANR	5249984	Identifier	S_ISUID		5249537	1					
ANR	5249985	CompoundStatement		80:35:1791:1791	5249537	1					
ANR	5249986	ExpressionStatement	icon = eUID	92:3:2078:2089	5249537	0	True				
ANR	5249987	AssignmentExpression	icon = eUID		5249537	0		=			
ANR	5249988	Identifier	icon		5249537	0					
ANR	5249989	Identifier	eUID		5249537	1					
ANR	5249990	ElseStatement	else		5249537	0					
ANR	5249991	IfStatement	"if ( r_str_casestr ( nn , "".jpg"" ) || r_str_casestr ( nn , "".png"" ) || r_str_casestr ( nn , "".gif"" ) )"		5249537	0					
ANR	5249992	Condition	"r_str_casestr ( nn , "".jpg"" ) || r_str_casestr ( nn , "".png"" ) || r_str_casestr ( nn , "".gif"" )"	94:13:2111:2196	5249537	0	True				
ANR	5249993	OrExpression	"r_str_casestr ( nn , "".jpg"" ) || r_str_casestr ( nn , "".png"" ) || r_str_casestr ( nn , "".gif"" )"		5249537	0		||			
ANR	5249994	CallExpression	"r_str_casestr ( nn , "".jpg"" )"		5249537	0					
ANR	5249995	Callee	r_str_casestr		5249537	0					
ANR	5249996	Identifier	r_str_casestr		5249537	0					
ANR	5249997	ArgumentList	nn		5249537	1					
ANR	5249998	Argument	nn		5249537	0					
ANR	5249999	Identifier	nn		5249537	0					
ANR	5250000	Argument	""".jpg"""		5249537	1					
ANR	5250001	PrimaryExpression	""".jpg"""		5249537	0					
ANR	5250002	OrExpression	"r_str_casestr ( nn , "".png"" ) || r_str_casestr ( nn , "".gif"" )"		5249537	1		||			
ANR	5250003	CallExpression	"r_str_casestr ( nn , "".png"" )"		5249537	0					
ANR	5250004	Callee	r_str_casestr		5249537	0					
ANR	5250005	Identifier	r_str_casestr		5249537	0					
ANR	5250006	ArgumentList	nn		5249537	1					
ANR	5250007	Argument	nn		5249537	0					
ANR	5250008	Identifier	nn		5249537	0					
ANR	5250009	Argument	""".png"""		5249537	1					
ANR	5250010	PrimaryExpression	""".png"""		5249537	0					
ANR	5250011	CallExpression	"r_str_casestr ( nn , "".gif"" )"		5249537	1					
ANR	5250012	Callee	r_str_casestr		5249537	0					
ANR	5250013	Identifier	r_str_casestr		5249537	0					
ANR	5250014	ArgumentList	nn		5249537	1					
ANR	5250015	Argument	nn		5249537	0					
ANR	5250016	Identifier	nn		5249537	0					
ANR	5250017	Argument	""".gif"""		5249537	1					
ANR	5250018	PrimaryExpression	""".gif"""		5249537	0					
ANR	5250019	CompoundStatement		83:101:1917:1917	5249537	1					
ANR	5250020	ExpressionStatement	icon = eIMG	95:3:2204:2215	5249537	0	True				
ANR	5250021	AssignmentExpression	icon = eIMG		5249537	0		=			
ANR	5250022	Identifier	icon		5249537	0					
ANR	5250023	Identifier	eIMG		5249537	1					
ANR	5250024	ElseStatement	else		5249537	0					
ANR	5250025	IfStatement	if ( * nn == '.' )		5249537	0					
ANR	5250026	Condition	* nn == '.'	96:13:2230:2239	5249537	0	True				
ANR	5250027	EqualityExpression	* nn == '.'		5249537	0		==			
ANR	5250028	UnaryOperationExpression	* nn		5249537	0					
ANR	5250029	UnaryOperator	*		5249537	0					
ANR	5250030	Identifier	nn		5249537	1					
ANR	5250031	PrimaryExpression	'.'		5249537	1					
ANR	5250032	CompoundStatement		85:25:1960:1960	5249537	1					
ANR	5250033	ExpressionStatement	icon = eHID	97:3:2247:2258	5249537	0	True				
ANR	5250034	AssignmentExpression	icon = eHID		5249537	0		=			
ANR	5250035	Identifier	icon		5249537	0					
ANR	5250036	Identifier	eHID		5249537	1					
ANR	5250037	ExpressionStatement	"res = r_str_appendf ( res , ""%s %s\\n"" , icon , nn )"	99:2:2266:2312	5249537	8	True				
ANR	5250038	AssignmentExpression	"res = r_str_appendf ( res , ""%s %s\\n"" , icon , nn )"		5249537	0		=			
ANR	5250039	Identifier	res		5249537	0					
ANR	5250040	CallExpression	"r_str_appendf ( res , ""%s %s\\n"" , icon , nn )"		5249537	1					
ANR	5250041	Callee	r_str_appendf		5249537	0					
ANR	5250042	Identifier	r_str_appendf		5249537	0					
ANR	5250043	ArgumentList	res		5249537	1					
ANR	5250044	Argument	res		5249537	0					
ANR	5250045	Identifier	res		5249537	0					
ANR	5250046	Argument	"""%s %s\\n"""		5249537	1					
ANR	5250047	PrimaryExpression	"""%s %s\\n"""		5249537	0					
ANR	5250048	Argument	icon		5249537	2					
ANR	5250049	Identifier	icon		5249537	0					
ANR	5250050	Argument	nn		5249537	3					
ANR	5250051	Identifier	nn		5249537	0					
ANR	5250052	ElseStatement	else		5249537	0					
ANR	5250053	IfStatement	if ( printfmt == FMT_RAW )		5249537	0					
ANR	5250054	Condition	printfmt == FMT_RAW	100:12:2326:2344	5249537	0	True				
ANR	5250055	EqualityExpression	printfmt == FMT_RAW		5249537	0		==			
ANR	5250056	Identifier	printfmt		5249537	0					
ANR	5250057	Identifier	FMT_RAW		5249537	1					
ANR	5250058	CompoundStatement		89:33:2065:2065	5249537	1					
ANR	5250059	ExpressionStatement	"res = r_str_appendf ( res , ""%c%s%s%s  1 %4d:%-4d  %-10d  %s\\n"" , isdir ? 'd' : fch , u_rwx ? u_rwx : ""-"" , r_str_rwx_i ( ( perm >> 3 ) & 7 ) , r_str_rwx_i ( perm & 7 ) , uid , gid , sz , nn )"	101:2:2351:2536	5249537	0	True				
ANR	5250060	AssignmentExpression	"res = r_str_appendf ( res , ""%c%s%s%s  1 %4d:%-4d  %-10d  %s\\n"" , isdir ? 'd' : fch , u_rwx ? u_rwx : ""-"" , r_str_rwx_i ( ( perm >> 3 ) & 7 ) , r_str_rwx_i ( perm & 7 ) , uid , gid , sz , nn )"		5249537	0		=			
ANR	5250061	Identifier	res		5249537	0					
ANR	5250062	CallExpression	"r_str_appendf ( res , ""%c%s%s%s  1 %4d:%-4d  %-10d  %s\\n"" , isdir ? 'd' : fch , u_rwx ? u_rwx : ""-"" , r_str_rwx_i ( ( perm >> 3 ) & 7 ) , r_str_rwx_i ( perm & 7 ) , uid , gid , sz , nn )"		5249537	1					
ANR	5250063	Callee	r_str_appendf		5249537	0					
ANR	5250064	Identifier	r_str_appendf		5249537	0					
ANR	5250065	ArgumentList	res		5249537	1					
ANR	5250066	Argument	res		5249537	0					
ANR	5250067	Identifier	res		5249537	0					
ANR	5250068	Argument	"""%c%s%s%s  1 %4d:%-4d  %-10d  %s\\n"""		5249537	1					
ANR	5250069	PrimaryExpression	"""%c%s%s%s  1 %4d:%-4d  %-10d  %s\\n"""		5249537	0					
ANR	5250070	Argument	isdir ? 'd' : fch		5249537	2					
ANR	5250071	ConditionalExpression	isdir ? 'd' : fch		5249537	0					
ANR	5250072	Condition	isdir		5249537	0					
ANR	5250073	Identifier	isdir		5249537	0					
ANR	5250074	PrimaryExpression	'd'		5249537	1					
ANR	5250075	Identifier	fch		5249537	2					
ANR	5250076	Argument	"u_rwx ? u_rwx : ""-"""		5249537	3					
ANR	5250077	ConditionalExpression	"u_rwx ? u_rwx : ""-"""		5249537	0					
ANR	5250078	Condition	u_rwx		5249537	0					
ANR	5250079	Identifier	u_rwx		5249537	0					
ANR	5250080	Identifier	u_rwx		5249537	1					
ANR	5250081	PrimaryExpression	"""-"""		5249537	2					
ANR	5250082	Argument	r_str_rwx_i ( ( perm >> 3 ) & 7 )		5249537	4					
ANR	5250083	CallExpression	r_str_rwx_i ( ( perm >> 3 ) & 7 )		5249537	0					
ANR	5250084	Callee	r_str_rwx_i		5249537	0					
ANR	5250085	Identifier	r_str_rwx_i		5249537	0					
ANR	5250086	ArgumentList	( perm >> 3 ) & 7		5249537	1					
ANR	5250087	Argument	( perm >> 3 ) & 7		5249537	0					
ANR	5250088	BitAndExpression	( perm >> 3 ) & 7		5249537	0		&			
ANR	5250089	ShiftExpression	perm >> 3		5249537	0		>>			
ANR	5250090	Identifier	perm		5249537	0					
ANR	5250091	PrimaryExpression	3		5249537	1					
ANR	5250092	PrimaryExpression	7		5249537	1					
ANR	5250093	Argument	r_str_rwx_i ( perm & 7 )		5249537	5					
ANR	5250094	CallExpression	r_str_rwx_i ( perm & 7 )		5249537	0					
ANR	5250095	Callee	r_str_rwx_i		5249537	0					
ANR	5250096	Identifier	r_str_rwx_i		5249537	0					
ANR	5250097	ArgumentList	perm & 7		5249537	1					
ANR	5250098	Argument	perm & 7		5249537	0					
ANR	5250099	BitAndExpression	perm & 7		5249537	0		&			
ANR	5250100	Identifier	perm		5249537	0					
ANR	5250101	PrimaryExpression	7		5249537	1					
ANR	5250102	Argument	uid		5249537	6					
ANR	5250103	Identifier	uid		5249537	0					
ANR	5250104	Argument	gid		5249537	7					
ANR	5250105	Identifier	gid		5249537	0					
ANR	5250106	Argument	sz		5249537	8					
ANR	5250107	Identifier	sz		5249537	0					
ANR	5250108	Argument	nn		5249537	9					
ANR	5250109	Identifier	nn		5249537	0					
ANR	5250110	ElseStatement	else		5249537	0					
ANR	5250111	IfStatement	if ( printfmt == FMT_JSON )		5249537	0					
ANR	5250112	Condition	printfmt == FMT_JSON	107:12:2550:2569	5249537	0	True				
ANR	5250113	EqualityExpression	printfmt == FMT_JSON		5249537	0		==			
ANR	5250114	Identifier	printfmt		5249537	0					
ANR	5250115	Identifier	FMT_JSON		5249537	1					
ANR	5250116	CompoundStatement		96:34:2290:2290	5249537	1					
ANR	5250117	IfStatement	if ( nth > 0 )		5249537	0					
ANR	5250118	Condition	nth > 0	108:6:2580:2586	5249537	0	True				
ANR	5250119	RelationalExpression	nth > 0		5249537	0		>			
ANR	5250120	Identifier	nth		5249537	0					
ANR	5250121	PrimaryExpression	0		5249537	1					
ANR	5250122	CompoundStatement		97:15:2307:2307	5249537	1					
ANR	5250123	ExpressionStatement	"res = r_str_append ( res , "","" )"	109:3:2594:2623	5249537	0	True				
ANR	5250124	AssignmentExpression	"res = r_str_append ( res , "","" )"		5249537	0		=			
ANR	5250125	Identifier	res		5249537	0					
ANR	5250126	CallExpression	"r_str_append ( res , "","" )"		5249537	1					
ANR	5250127	Callee	r_str_append		5249537	0					
ANR	5250128	Identifier	r_str_append		5249537	0					
ANR	5250129	ArgumentList	res		5249537	1					
ANR	5250130	Argument	res		5249537	0					
ANR	5250131	Identifier	res		5249537	0					
ANR	5250132	Argument	""","""		5249537	1					
ANR	5250133	PrimaryExpression	""","""		5249537	0					
ANR	5250134	Statement	res	111:2:2631:2633	5249537	1	True				
ANR	5250135	Statement	=	111:6:2635:2635	5249537	2	True				
ANR	5250136	Statement	r_str_appendf	111:8:2637:2649	5249537	3	True				
ANR	5250137	Statement	(	111:22:2651:2651	5249537	4	True				
ANR	5250138	Statement	res	111:23:2652:2654	5249537	5	True				
ANR	5250139	Statement	","	111:26:2655:2655	5249537	6	True				
ANR	5250140	Statement	"""{\\""name\\"":\\""%s\\"",\\""size\\"":%d,\\""uid\\"":%d,"""	111:28:2657:2698	5249537	7	True				
ANR	5250141	Statement	"""\\""gid\\"":%d,\\""perm\\"":%d,\\""isdir\\"":%s}"""	112:3:2703:2740	5249537	8	True				
ANR	5250142	Statement	","	112:41:2741:2741	5249537	9	True				
ANR	5250143	Statement	name	113:3:2746:2749	5249537	10	True				
ANR	5250144	Statement	","	113:7:2750:2750	5249537	11	True				
ANR	5250145	Statement	sz	113:9:2752:2753	5249537	12	True				
ANR	5250146	Statement	","	113:11:2754:2754	5249537	13	True				
ANR	5250147	Statement	uid	113:13:2756:2758	5249537	14	True				
ANR	5250148	Statement	","	113:16:2759:2759	5249537	15	True				
ANR	5250149	Statement	gid	113:18:2761:2763	5249537	16	True				
ANR	5250150	Statement	","	113:21:2764:2764	5249537	17	True				
ANR	5250151	Statement	perm	113:23:2766:2769	5249537	18	True				
ANR	5250152	Statement	","	113:27:2770:2770	5249537	19	True				
ANR	5250153	Statement	isdir	113:29:2772:2776	5249537	20	True				
ANR	5250154	Statement	?	113:34:2777:2777	5249537	21	True				
ANR	5250155	Statement	"""true"""	113:36:2779:2784	5249537	22	True				
ANR	5250156	Statement	:	113:42:2785:2785	5249537	23	True				
ANR	5250157	Statement	"""false"""	113:44:2787:2793	5249537	24	True				
ANR	5250158	Statement	)	113:51:2794:2794	5249537	25	True				
ANR	5250159	ExpressionStatement		113:52:2795:2795	5249537	26	True				
ANR	5250160	ExpressionStatement	free ( nn )	115:1:2801:2810	5249537	14	True				
ANR	5250161	CallExpression	free ( nn )		5249537	0					
ANR	5250162	Callee	free		5249537	0					
ANR	5250163	Identifier	free		5249537	0					
ANR	5250164	ArgumentList	nn		5249537	1					
ANR	5250165	Argument	nn		5249537	0					
ANR	5250166	Identifier	nn		5249537	0					
ANR	5250167	ExpressionStatement	free ( u_rwx )	116:1:2813:2825	5249537	15	True				
ANR	5250168	CallExpression	free ( u_rwx )		5249537	0					
ANR	5250169	Callee	free		5249537	0					
ANR	5250170	Identifier	free		5249537	0					
ANR	5250171	ArgumentList	u_rwx		5249537	1					
ANR	5250172	Argument	u_rwx		5249537	0					
ANR	5250173	Identifier	u_rwx		5249537	0					
ANR	5250174	ReturnStatement	return res ;	117:1:2828:2838	5249537	16	True				
ANR	5250175	Identifier	res		5249537	0					
ANR	5250176	ReturnType	static char *		5249537	1					
ANR	5250177	Identifier	showfile		5249537	2					
ANR	5250178	ParameterList	"char * res , const int nth , const char * fpath , const char * name , int printfmt"		5249537	3					
ANR	5250179	Parameter	char * res	12:22:204:212	5249537	0	True				
ANR	5250180	ParameterType	char *		5249537	0					
ANR	5250181	Identifier	res		5249537	1					
ANR	5250182	Parameter	const int nth	12:33:215:227	5249537	1	True				
ANR	5250183	ParameterType	const int		5249537	0					
ANR	5250184	Identifier	nth		5249537	1					
ANR	5250185	Parameter	const char * fpath	12:48:230:246	5249537	2	True				
ANR	5250186	ParameterType	const char *		5249537	0					
ANR	5250187	Identifier	fpath		5249537	1					
ANR	5250188	Parameter	const char * name	12:67:249:264	5249537	3	True				
ANR	5250189	ParameterType	const char *		5249537	0					
ANR	5250190	Identifier	name		5249537	1					
ANR	5250191	Parameter	int printfmt	12:85:267:278	5249537	4	True				
ANR	5250192	ParameterType	int		5249537	0					
ANR	5250193	Identifier	printfmt		5249537	1					
ANR	5250194	CFGEntryNode	ENTRY		5249537		True				
ANR	5250195	CFGExitNode	EXIT		5249537		True				
ANR	5250196	Symbol	nn		5249537						
ANR	5250197	Symbol	r_file_is_directory		5249537						
ANR	5250198	Symbol	r_str_append		5249537						
ANR	5250199	Symbol	gid		5249537						
ANR	5250200	Symbol	r_str_casestr		5249537						
ANR	5250201	Symbol	perm		5249537						
ANR	5250202	Symbol	eUID		5249537						
ANR	5250203	Symbol	eDIR		5249537						
ANR	5250204	Symbol	S_IFLNK		5249537						
ANR	5250205	Symbol	icon		5249537						
ANR	5250206	Symbol	fch		5249537						
ANR	5250207	Symbol	sb		5249537						
ANR	5250208	Symbol	S_IFMT		5249537						
ANR	5250209	Symbol	uid		5249537						
ANR	5250210	Symbol	strncmp		5249537						
ANR	5250211	Symbol	needs_newline		5249537						
ANR	5250212	Symbol	FMT_RAW		5249537						
ANR	5250213	Symbol	u_rwx		5249537						
ANR	5250214	Symbol	S_IXUSR		5249537						
ANR	5250215	Symbol	& sb		5249537						
ANR	5250216	Symbol	fpath		5249537						
ANR	5250217	Symbol	r_str_rwx_i		5249537						
ANR	5250218	Symbol	isdir		5249537						
ANR	5250219	Symbol	res		5249537						
ANR	5250220	Symbol	nth		5249537						
ANR	5250221	Symbol	NULL		5249537						
ANR	5250222	Symbol	sb . st_uid		5249537						
ANR	5250223	Symbol	* nn		5249537						
ANR	5250224	Symbol	sz		5249537						
ANR	5250225	Symbol	lstat		5249537						
ANR	5250226	Symbol	eANY		5249537						
ANR	5250227	Symbol	eLNK		5249537						
ANR	5250228	Symbol	* u_rwx		5249537						
ANR	5250229	Symbol	n		5249537						
ANR	5250230	Symbol	eIMG		5249537						
ANR	5250231	Symbol	eHID		5249537						
ANR	5250232	Symbol	r_file_size		5249537						
ANR	5250233	Symbol	ifmt		5249537						
ANR	5250234	Symbol	sb . st_gid		5249537						
ANR	5250235	Symbol	r_str_appendf		5249537						
ANR	5250236	Symbol	S_ISUID		5249537						
ANR	5250237	Symbol	name		5249537						
ANR	5250238	Symbol	sb . st_mode		5249537						
ANR	5250239	Symbol	printfmt		5249537						
ANR	5250240	Symbol	strdup		5249537						
ANR	5250241	Symbol	FMT_JSON		5249537						
ANR	5250242	Function	r_syscmd_ls	121:0:2910:5671							
ANR	5250243	FunctionDef	r_syscmd_ls (const char * input)		5250242	0					
ANR	5250244	CompoundStatement		121:43:2953:5671	5250242	0					
ANR	5250245	IdentifierDeclStatement	char * res = NULL ;	122:1:2956:2972	5250242	0	True				
ANR	5250246	IdentifierDecl	* res = NULL		5250242	0					
ANR	5250247	IdentifierDeclType	char *		5250242	0					
ANR	5250248	Identifier	res		5250242	1					
ANR	5250249	AssignmentExpression	* res = NULL		5250242	2		=			
ANR	5250250	Identifier	NULL		5250242	0					
ANR	5250251	Identifier	NULL		5250242	1					
ANR	5250252	IdentifierDeclStatement	"const char * path = ""."" ;"	123:1:2975:2997	5250242	1	True				
ANR	5250253	IdentifierDecl	"* path = ""."""		5250242	0					
ANR	5250254	IdentifierDeclType	const char *		5250242	0					
ANR	5250255	Identifier	path		5250242	1					
ANR	5250256	AssignmentExpression	"* path = ""."""		5250242	2		=			
ANR	5250257	Identifier	path		5250242	0					
ANR	5250258	PrimaryExpression	"""."""		5250242	1					
ANR	5250259	IdentifierDeclStatement	char * d = NULL ;	124:1:3000:3014	5250242	2	True				
ANR	5250260	IdentifierDecl	* d = NULL		5250242	0					
ANR	5250261	IdentifierDeclType	char *		5250242	0					
ANR	5250262	Identifier	d		5250242	1					
ANR	5250263	AssignmentExpression	* d = NULL		5250242	2		=			
ANR	5250264	Identifier	NULL		5250242	0					
ANR	5250265	Identifier	NULL		5250242	1					
ANR	5250266	IdentifierDeclStatement	char * p = NULL ;	125:1:3017:3031	5250242	3	True				
ANR	5250267	IdentifierDecl	* p = NULL		5250242	0					
ANR	5250268	IdentifierDeclType	char *		5250242	0					
ANR	5250269	Identifier	p		5250242	1					
ANR	5250270	AssignmentExpression	* p = NULL		5250242	2		=			
ANR	5250271	Identifier	NULL		5250242	0					
ANR	5250272	Identifier	NULL		5250242	1					
ANR	5250273	IdentifierDeclStatement	char * homepath = NULL ;	126:1:3034:3055	5250242	4	True				
ANR	5250274	IdentifierDecl	* homepath = NULL		5250242	0					
ANR	5250275	IdentifierDeclType	char *		5250242	0					
ANR	5250276	Identifier	homepath		5250242	1					
ANR	5250277	AssignmentExpression	* homepath = NULL		5250242	2		=			
ANR	5250278	Identifier	NULL		5250242	0					
ANR	5250279	Identifier	NULL		5250242	1					
ANR	5250280	IdentifierDeclStatement	char * pattern = NULL ;	127:1:3058:3078	5250242	5	True				
ANR	5250281	IdentifierDecl	* pattern = NULL		5250242	0					
ANR	5250282	IdentifierDeclType	char *		5250242	0					
ANR	5250283	Identifier	pattern		5250242	1					
ANR	5250284	AssignmentExpression	* pattern = NULL		5250242	2		=			
ANR	5250285	Identifier	NULL		5250242	0					
ANR	5250286	Identifier	NULL		5250242	1					
ANR	5250287	IdentifierDeclStatement	int printfmt = 0 ;	128:1:3081:3097	5250242	6	True				
ANR	5250288	IdentifierDecl	printfmt = 0		5250242	0					
ANR	5250289	IdentifierDeclType	int		5250242	0					
ANR	5250290	Identifier	printfmt		5250242	1					
ANR	5250291	AssignmentExpression	printfmt = 0		5250242	2		=			
ANR	5250292	Identifier	printfmt		5250242	0					
ANR	5250293	PrimaryExpression	0		5250242	1					
ANR	5250294	IdentifierDeclStatement	RListIter * iter ;	129:1:3100:3115	5250242	7	True				
ANR	5250295	IdentifierDecl	* iter		5250242	0					
ANR	5250296	IdentifierDeclType	RListIter *		5250242	0					
ANR	5250297	Identifier	iter		5250242	1					
ANR	5250298	IdentifierDeclStatement	RList * files ;	130:1:3118:3130	5250242	8	True				
ANR	5250299	IdentifierDecl	* files		5250242	0					
ANR	5250300	IdentifierDeclType	RList *		5250242	0					
ANR	5250301	Identifier	files		5250242	1					
ANR	5250302	IdentifierDeclStatement	char * name ;	131:1:3133:3143	5250242	9	True				
ANR	5250303	IdentifierDecl	* name		5250242	0					
ANR	5250304	IdentifierDeclType	char *		5250242	0					
ANR	5250305	Identifier	name		5250242	1					
ANR	5250306	IdentifierDeclStatement	char * dir ;	132:1:3146:3155	5250242	10	True				
ANR	5250307	IdentifierDecl	* dir		5250242	0					
ANR	5250308	IdentifierDeclType	char *		5250242	0					
ANR	5250309	Identifier	dir		5250242	1					
ANR	5250310	IdentifierDeclStatement	int off ;	133:1:3158:3165	5250242	11	True				
ANR	5250311	IdentifierDecl	off		5250242	0					
ANR	5250312	IdentifierDeclType	int		5250242	0					
ANR	5250313	Identifier	off		5250242	1					
ANR	5250314	IfStatement	if ( ! input )		5250242	12					
ANR	5250315	Condition	! input	134:5:3172:3177	5250242	0	True				
ANR	5250316	UnaryOperationExpression	! input		5250242	0					
ANR	5250317	UnaryOperator	!		5250242	0					
ANR	5250318	Identifier	input		5250242	1					
ANR	5250319	CompoundStatement		14:13:226:226	5250242	1					
ANR	5250320	ExpressionStatement	"input = """""	135:2:3184:3194	5250242	0	True				
ANR	5250321	AssignmentExpression	"input = """""		5250242	0		=			
ANR	5250322	Identifier	input		5250242	0					
ANR	5250323	PrimaryExpression	""""""		5250242	1					
ANR	5250324	ExpressionStatement	"path = ""."""	136:2:3198:3208	5250242	1	True				
ANR	5250325	AssignmentExpression	"path = ""."""		5250242	0		=			
ANR	5250326	Identifier	path		5250242	0					
ANR	5250327	PrimaryExpression	"""."""		5250242	1					
ANR	5250328	IfStatement	if ( * input == 'q' )		5250242	13					
ANR	5250329	Condition	* input == 'q'	138:5:3218:3230	5250242	0	True				
ANR	5250330	EqualityExpression	* input == 'q'		5250242	0		==			
ANR	5250331	UnaryOperationExpression	* input		5250242	0					
ANR	5250332	UnaryOperator	*		5250242	0					
ANR	5250333	Identifier	input		5250242	1					
ANR	5250334	PrimaryExpression	'q'		5250242	1					
ANR	5250335	CompoundStatement		18:20:279:279	5250242	1					
ANR	5250336	ExpressionStatement	printfmt = 'q'	139:2:3237:3251	5250242	0	True				
ANR	5250337	AssignmentExpression	printfmt = 'q'		5250242	0		=			
ANR	5250338	Identifier	printfmt		5250242	0					
ANR	5250339	PrimaryExpression	'q'		5250242	1					
ANR	5250340	ExpressionStatement	input ++	140:2:3255:3262	5250242	1	True				
ANR	5250341	PostIncDecOperationExpression	input ++		5250242	0					
ANR	5250342	Identifier	input		5250242	0					
ANR	5250343	IncDec	++		5250242	1					
ANR	5250344	IfStatement	if ( r_sandbox_enable ( 0 ) )		5250242	14					
ANR	5250345	Condition	r_sandbox_enable ( 0 )	142:5:3272:3291	5250242	0	True				
ANR	5250346	CallExpression	r_sandbox_enable ( 0 )		5250242	0					
ANR	5250347	Callee	r_sandbox_enable		5250242	0					
ANR	5250348	Identifier	r_sandbox_enable		5250242	0					
ANR	5250349	ArgumentList	0		5250242	1					
ANR	5250350	Argument	0		5250242	0					
ANR	5250351	PrimaryExpression	0		5250242	0					
ANR	5250352	CompoundStatement		22:27:340:340	5250242	1					
ANR	5250353	ExpressionStatement	"eprintf ( ""Sandbox forbids listing directories\\n"" )"	143:2:3298:3347	5250242	0	True				
ANR	5250354	CallExpression	"eprintf ( ""Sandbox forbids listing directories\\n"" )"		5250242	0					
ANR	5250355	Callee	eprintf		5250242	0					
ANR	5250356	Identifier	eprintf		5250242	0					
ANR	5250357	ArgumentList	"""Sandbox forbids listing directories\\n"""		5250242	1					
ANR	5250358	Argument	"""Sandbox forbids listing directories\\n"""		5250242	0					
ANR	5250359	PrimaryExpression	"""Sandbox forbids listing directories\\n"""		5250242	0					
ANR	5250360	ReturnStatement	return NULL ;	144:2:3351:3362	5250242	1	True				
ANR	5250361	Identifier	NULL		5250242	0					
ANR	5250362	IfStatement	if ( * input && input [ 0 ] == ' ' )		5250242	15					
ANR	5250363	Condition	* input && input [ 0 ] == ' '	146:5:3372:3396	5250242	0	True				
ANR	5250364	AndExpression	* input && input [ 0 ] == ' '		5250242	0		&&			
ANR	5250365	UnaryOperationExpression	* input		5250242	0					
ANR	5250366	UnaryOperator	*		5250242	0					
ANR	5250367	Identifier	input		5250242	1					
ANR	5250368	EqualityExpression	input [ 0 ] == ' '		5250242	1		==			
ANR	5250369	ArrayIndexing	input [ 0 ]		5250242	0					
ANR	5250370	Identifier	input		5250242	0					
ANR	5250371	PrimaryExpression	0		5250242	1					
ANR	5250372	PrimaryExpression	' '		5250242	1					
ANR	5250373	CompoundStatement		26:32:445:445	5250242	1					
ANR	5250374	ExpressionStatement	input ++	147:2:3403:3410	5250242	0	True				
ANR	5250375	PostIncDecOperationExpression	input ++		5250242	0					
ANR	5250376	Identifier	input		5250242	0					
ANR	5250377	IncDec	++		5250242	1					
ANR	5250378	IfStatement	if ( * input )		5250242	16					
ANR	5250379	Condition	* input	149:5:3420:3425	5250242	0	True				
ANR	5250380	UnaryOperationExpression	* input		5250242	0					
ANR	5250381	UnaryOperator	*		5250242	0					
ANR	5250382	Identifier	input		5250242	1					
ANR	5250383	CompoundStatement		29:13:474:474	5250242	1					
ANR	5250384	IfStatement	"if ( ( ! strncmp ( input , ""-h"" , 2 ) ) )"		5250242	0					
ANR	5250385	Condition	"! strncmp ( input , ""-h"" , 2 )"	150:6:3436:3462	5250242	0	True				
ANR	5250386	UnaryOperationExpression	"! strncmp ( input , ""-h"" , 2 )"		5250242	0					
ANR	5250387	UnaryOperator	!		5250242	0					
ANR	5250388	CallExpression	"strncmp ( input , ""-h"" , 2 )"		5250242	1					
ANR	5250389	Callee	strncmp		5250242	0					
ANR	5250390	Identifier	strncmp		5250242	0					
ANR	5250391	ArgumentList	input		5250242	1					
ANR	5250392	Argument	input		5250242	0					
ANR	5250393	Identifier	input		5250242	0					
ANR	5250394	Argument	"""-h"""		5250242	1					
ANR	5250395	PrimaryExpression	"""-h"""		5250242	0					
ANR	5250396	Argument	2		5250242	2					
ANR	5250397	PrimaryExpression	2		5250242	0					
ANR	5250398	CompoundStatement		30:35:511:511	5250242	1					
ANR	5250399	ExpressionStatement	"eprintf ( ""Usage: ls ([-e,-l,-j,-q]) ([path]) # long, json, quiet\\n"" )"	151:3:3470:3538	5250242	0	True				
ANR	5250400	CallExpression	"eprintf ( ""Usage: ls ([-e,-l,-j,-q]) ([path]) # long, json, quiet\\n"" )"		5250242	0					
ANR	5250401	Callee	eprintf		5250242	0					
ANR	5250402	Identifier	eprintf		5250242	0					
ANR	5250403	ArgumentList	"""Usage: ls ([-e,-l,-j,-q]) ([path]) # long, json, quiet\\n"""		5250242	1					
ANR	5250404	Argument	"""Usage: ls ([-e,-l,-j,-q]) ([path]) # long, json, quiet\\n"""		5250242	0					
ANR	5250405	PrimaryExpression	"""Usage: ls ([-e,-l,-j,-q]) ([path]) # long, json, quiet\\n"""		5250242	0					
ANR	5250406	ElseStatement	else		5250242	0					
ANR	5250407	IfStatement	"if ( ( ! strncmp ( input , ""-e"" , 2 ) ) )"		5250242	0					
ANR	5250408	Condition	"! strncmp ( input , ""-e"" , 2 )"	152:13:3553:3579	5250242	0	True				
ANR	5250409	UnaryOperationExpression	"! strncmp ( input , ""-e"" , 2 )"		5250242	0					
ANR	5250410	UnaryOperator	!		5250242	0					
ANR	5250411	CallExpression	"strncmp ( input , ""-e"" , 2 )"		5250242	1					
ANR	5250412	Callee	strncmp		5250242	0					
ANR	5250413	Identifier	strncmp		5250242	0					
ANR	5250414	ArgumentList	input		5250242	1					
ANR	5250415	Argument	input		5250242	0					
ANR	5250416	Identifier	input		5250242	0					
ANR	5250417	Argument	"""-e"""		5250242	1					
ANR	5250418	PrimaryExpression	"""-e"""		5250242	0					
ANR	5250419	Argument	2		5250242	2					
ANR	5250420	PrimaryExpression	2		5250242	0					
ANR	5250421	CompoundStatement		32:42:628:628	5250242	1					
ANR	5250422	ExpressionStatement	printfmt = 'e'	153:3:3587:3601	5250242	0	True				
ANR	5250423	AssignmentExpression	printfmt = 'e'		5250242	0		=			
ANR	5250424	Identifier	printfmt		5250242	0					
ANR	5250425	PrimaryExpression	'e'		5250242	1					
ANR	5250426	ExpressionStatement	path = r_str_trim_ro ( path + 1 )	154:3:3606:3637	5250242	1	True				
ANR	5250427	AssignmentExpression	path = r_str_trim_ro ( path + 1 )		5250242	0		=			
ANR	5250428	Identifier	path		5250242	0					
ANR	5250429	CallExpression	r_str_trim_ro ( path + 1 )		5250242	1					
ANR	5250430	Callee	r_str_trim_ro		5250242	0					
ANR	5250431	Identifier	r_str_trim_ro		5250242	0					
ANR	5250432	ArgumentList	path + 1		5250242	1					
ANR	5250433	Argument	path + 1		5250242	0					
ANR	5250434	AdditiveExpression	path + 1		5250242	0		+			
ANR	5250435	Identifier	path		5250242	0					
ANR	5250436	PrimaryExpression	1		5250242	1					
ANR	5250437	ElseStatement	else		5250242	0					
ANR	5250438	IfStatement	"if ( ( ! strncmp ( input , ""-q"" , 2 ) ) )"		5250242	0					
ANR	5250439	Condition	"! strncmp ( input , ""-q"" , 2 )"	155:13:3652:3678	5250242	0	True				
ANR	5250440	UnaryOperationExpression	"! strncmp ( input , ""-q"" , 2 )"		5250242	0					
ANR	5250441	UnaryOperator	!		5250242	0					
ANR	5250442	CallExpression	"strncmp ( input , ""-q"" , 2 )"		5250242	1					
ANR	5250443	Callee	strncmp		5250242	0					
ANR	5250444	Identifier	strncmp		5250242	0					
ANR	5250445	ArgumentList	input		5250242	1					
ANR	5250446	Argument	input		5250242	0					
ANR	5250447	Identifier	input		5250242	0					
ANR	5250448	Argument	"""-q"""		5250242	1					
ANR	5250449	PrimaryExpression	"""-q"""		5250242	0					
ANR	5250450	Argument	2		5250242	2					
ANR	5250451	PrimaryExpression	2		5250242	0					
ANR	5250452	CompoundStatement		35:42:727:727	5250242	1					
ANR	5250453	ExpressionStatement	printfmt = 'q'	156:3:3686:3700	5250242	0	True				
ANR	5250454	AssignmentExpression	printfmt = 'q'		5250242	0		=			
ANR	5250455	Identifier	printfmt		5250242	0					
ANR	5250456	PrimaryExpression	'q'		5250242	1					
ANR	5250457	ExpressionStatement	path = r_str_trim_ro ( path + 1 )	157:3:3705:3736	5250242	1	True				
ANR	5250458	AssignmentExpression	path = r_str_trim_ro ( path + 1 )		5250242	0		=			
ANR	5250459	Identifier	path		5250242	0					
ANR	5250460	CallExpression	r_str_trim_ro ( path + 1 )		5250242	1					
ANR	5250461	Callee	r_str_trim_ro		5250242	0					
ANR	5250462	Identifier	r_str_trim_ro		5250242	0					
ANR	5250463	ArgumentList	path + 1		5250242	1					
ANR	5250464	Argument	path + 1		5250242	0					
ANR	5250465	AdditiveExpression	path + 1		5250242	0		+			
ANR	5250466	Identifier	path		5250242	0					
ANR	5250467	PrimaryExpression	1		5250242	1					
ANR	5250468	ElseStatement	else		5250242	0					
ANR	5250469	IfStatement	"if ( ( ! strncmp ( input , ""-l"" , 2 ) ) || ( ! strncmp ( input , ""-j"" , 2 ) ) )"		5250242	0					
ANR	5250470	Condition	"( ! strncmp ( input , ""-l"" , 2 ) ) || ( ! strncmp ( input , ""-j"" , 2 ) )"	158:13:3751:3808	5250242	0	True				
ANR	5250471	OrExpression	"( ! strncmp ( input , ""-l"" , 2 ) ) || ( ! strncmp ( input , ""-j"" , 2 ) )"		5250242	0		||			
ANR	5250472	UnaryOperationExpression	"! strncmp ( input , ""-l"" , 2 )"		5250242	0					
ANR	5250473	UnaryOperator	!		5250242	0					
ANR	5250474	CallExpression	"strncmp ( input , ""-l"" , 2 )"		5250242	1					
ANR	5250475	Callee	strncmp		5250242	0					
ANR	5250476	Identifier	strncmp		5250242	0					
ANR	5250477	ArgumentList	input		5250242	1					
ANR	5250478	Argument	input		5250242	0					
ANR	5250479	Identifier	input		5250242	0					
ANR	5250480	Argument	"""-l"""		5250242	1					
ANR	5250481	PrimaryExpression	"""-l"""		5250242	0					
ANR	5250482	Argument	2		5250242	2					
ANR	5250483	PrimaryExpression	2		5250242	0					
ANR	5250484	UnaryOperationExpression	"! strncmp ( input , ""-j"" , 2 )"		5250242	1					
ANR	5250485	UnaryOperator	!		5250242	0					
ANR	5250486	CallExpression	"strncmp ( input , ""-j"" , 2 )"		5250242	1					
ANR	5250487	Callee	strncmp		5250242	0					
ANR	5250488	Identifier	strncmp		5250242	0					
ANR	5250489	ArgumentList	input		5250242	1					
ANR	5250490	Argument	input		5250242	0					
ANR	5250491	Identifier	input		5250242	0					
ANR	5250492	Argument	"""-j"""		5250242	1					
ANR	5250493	PrimaryExpression	"""-j"""		5250242	0					
ANR	5250494	Argument	2		5250242	2					
ANR	5250495	PrimaryExpression	2		5250242	0					
ANR	5250496	CompoundStatement		38:73:857:857	5250242	1					
ANR	5250497	IfStatement	if ( input [ 2 ] )		5250242	0					
ANR	5250498	Condition	input [ 2 ]	160:7:3838:3845	5250242	0	True				
ANR	5250499	ArrayIndexing	input [ 2 ]		5250242	0					
ANR	5250500	Identifier	input		5250242	0					
ANR	5250501	PrimaryExpression	2		5250242	1					
ANR	5250502	CompoundStatement		40:17:894:894	5250242	1					
ANR	5250503	ExpressionStatement	printfmt = ( input [ 2 ] == 'j' ) ? FMT_JSON : FMT_RAW	161:4:3854:3903	5250242	0	True				
ANR	5250504	AssignmentExpression	printfmt = ( input [ 2 ] == 'j' ) ? FMT_JSON : FMT_RAW		5250242	0		=			
ANR	5250505	Identifier	printfmt		5250242	0					
ANR	5250506	ConditionalExpression	( input [ 2 ] == 'j' ) ? FMT_JSON : FMT_RAW		5250242	1					
ANR	5250507	Condition	input [ 2 ] == 'j'		5250242	0					
ANR	5250508	EqualityExpression	input [ 2 ] == 'j'		5250242	0		==			
ANR	5250509	ArrayIndexing	input [ 2 ]		5250242	0					
ANR	5250510	Identifier	input		5250242	0					
ANR	5250511	PrimaryExpression	2		5250242	1					
ANR	5250512	PrimaryExpression	'j'		5250242	1					
ANR	5250513	Identifier	FMT_JSON		5250242	1					
ANR	5250514	Identifier	FMT_RAW		5250242	2					
ANR	5250515	ExpressionStatement	path = r_str_trim_ro ( input + 2 )	162:4:3909:3941	5250242	1	True				
ANR	5250516	AssignmentExpression	path = r_str_trim_ro ( input + 2 )		5250242	0		=			
ANR	5250517	Identifier	path		5250242	0					
ANR	5250518	CallExpression	r_str_trim_ro ( input + 2 )		5250242	1					
ANR	5250519	Callee	r_str_trim_ro		5250242	0					
ANR	5250520	Identifier	r_str_trim_ro		5250242	0					
ANR	5250521	ArgumentList	input + 2		5250242	1					
ANR	5250522	Argument	input + 2		5250242	0					
ANR	5250523	AdditiveExpression	input + 2		5250242	0		+			
ANR	5250524	Identifier	input		5250242	0					
ANR	5250525	PrimaryExpression	2		5250242	1					
ANR	5250526	IfStatement	if ( ! * path )		5250242	2					
ANR	5250527	Condition	! * path	163:8:3951:3956	5250242	0	True				
ANR	5250528	UnaryOperationExpression	! * path		5250242	0					
ANR	5250529	UnaryOperator	!		5250242	0					
ANR	5250530	UnaryOperationExpression	* path		5250242	1					
ANR	5250531	UnaryOperator	*		5250242	0					
ANR	5250532	Identifier	path		5250242	1					
ANR	5250533	CompoundStatement		43:16:1005:1005	5250242	1					
ANR	5250534	ExpressionStatement	"path = ""."""	164:5:3966:3976	5250242	0	True				
ANR	5250535	AssignmentExpression	"path = ""."""		5250242	0		=			
ANR	5250536	Identifier	path		5250242	0					
ANR	5250537	PrimaryExpression	"""."""		5250242	1					
ANR	5250538	ElseStatement	else		5250242	0					
ANR	5250539	CompoundStatement		46:10:1040:1040	5250242	0					
ANR	5250540	ExpressionStatement	printfmt = FMT_RAW	167:4:4000:4018	5250242	0	True				
ANR	5250541	AssignmentExpression	printfmt = FMT_RAW		5250242	0		=			
ANR	5250542	Identifier	printfmt		5250242	0					
ANR	5250543	Identifier	FMT_RAW		5250242	1					
ANR	5250544	ElseStatement	else		5250242	0					
ANR	5250545	CompoundStatement		49:9:1080:1080	5250242	0					
ANR	5250546	ExpressionStatement	path = input	170:3:4039:4051	5250242	0	True				
ANR	5250547	AssignmentExpression	path = input		5250242	0		=			
ANR	5250548	Identifier	path		5250242	0					
ANR	5250549	Identifier	input		5250242	1					
ANR	5250550	IfStatement	if ( ! path || ! * path )		5250242	17					
ANR	5250551	Condition	! path || ! * path	173:5:4065:4079	5250242	0	True				
ANR	5250552	OrExpression	! path || ! * path		5250242	0		||			
ANR	5250553	UnaryOperationExpression	! path		5250242	0					
ANR	5250554	UnaryOperator	!		5250242	0					
ANR	5250555	Identifier	path		5250242	1					
ANR	5250556	UnaryOperationExpression	! * path		5250242	1					
ANR	5250557	UnaryOperator	!		5250242	0					
ANR	5250558	UnaryOperationExpression	* path		5250242	1					
ANR	5250559	UnaryOperator	*		5250242	0					
ANR	5250560	Identifier	path		5250242	1					
ANR	5250561	CompoundStatement		53:22:1128:1128	5250242	1					
ANR	5250562	ExpressionStatement	"path = ""."""	174:2:4086:4096	5250242	0	True				
ANR	5250563	AssignmentExpression	"path = ""."""		5250242	0		=			
ANR	5250564	Identifier	path		5250242	0					
ANR	5250565	PrimaryExpression	"""."""		5250242	1					
ANR	5250566	ElseStatement	else		5250242	0					
ANR	5250567	IfStatement	"if ( ! strncmp ( path , ""~/"" , 2 ) )"		5250242	0					
ANR	5250568	Condition	"! strncmp ( path , ""~/"" , 2 )"	175:12:4110:4133	5250242	0	True				
ANR	5250569	UnaryOperationExpression	"! strncmp ( path , ""~/"" , 2 )"		5250242	0					
ANR	5250570	UnaryOperator	!		5250242	0					
ANR	5250571	CallExpression	"strncmp ( path , ""~/"" , 2 )"		5250242	1					
ANR	5250572	Callee	strncmp		5250242	0					
ANR	5250573	Identifier	strncmp		5250242	0					
ANR	5250574	ArgumentList	path		5250242	1					
ANR	5250575	Argument	path		5250242	0					
ANR	5250576	Identifier	path		5250242	0					
ANR	5250577	Argument	"""~/"""		5250242	1					
ANR	5250578	PrimaryExpression	"""~/"""		5250242	0					
ANR	5250579	Argument	2		5250242	2					
ANR	5250580	PrimaryExpression	2		5250242	0					
ANR	5250581	CompoundStatement		55:38:1182:1182	5250242	1					
ANR	5250582	ExpressionStatement	homepath = r_str_home ( path + 2 )	176:2:4140:4172	5250242	0	True				
ANR	5250583	AssignmentExpression	homepath = r_str_home ( path + 2 )		5250242	0		=			
ANR	5250584	Identifier	homepath		5250242	0					
ANR	5250585	CallExpression	r_str_home ( path + 2 )		5250242	1					
ANR	5250586	Callee	r_str_home		5250242	0					
ANR	5250587	Identifier	r_str_home		5250242	0					
ANR	5250588	ArgumentList	path + 2		5250242	1					
ANR	5250589	Argument	path + 2		5250242	0					
ANR	5250590	AdditiveExpression	path + 2		5250242	0		+			
ANR	5250591	Identifier	path		5250242	0					
ANR	5250592	PrimaryExpression	2		5250242	1					
ANR	5250593	IfStatement	if ( homepath )		5250242	1					
ANR	5250594	Condition	homepath	177:6:4180:4187	5250242	0	True				
ANR	5250595	Identifier	homepath		5250242	0					
ANR	5250596	CompoundStatement		57:16:1236:1236	5250242	1					
ANR	5250597	ExpressionStatement	path = ( const char * ) homepath	178:3:4195:4224	5250242	0	True				
ANR	5250598	AssignmentExpression	path = ( const char * ) homepath		5250242	0		=			
ANR	5250599	Identifier	path		5250242	0					
ANR	5250600	CastExpression	( const char * ) homepath		5250242	1					
ANR	5250601	CastTarget	const char *		5250242	0					
ANR	5250602	Identifier	homepath		5250242	1					
ANR	5250603	ElseStatement	else		5250242	0					
ANR	5250604	IfStatement	if ( * path == '$' )		5250242	0					
ANR	5250605	Condition	* path == '$'	180:12:4242:4253	5250242	0	True				
ANR	5250606	EqualityExpression	* path == '$'		5250242	0		==			
ANR	5250607	UnaryOperationExpression	* path		5250242	0					
ANR	5250608	UnaryOperator	*		5250242	0					
ANR	5250609	Identifier	path		5250242	1					
ANR	5250610	PrimaryExpression	'$'		5250242	1					
ANR	5250611	CompoundStatement		60:26:1302:1302	5250242	1					
ANR	5250612	IfStatement	"if ( ! strncmp ( path + 1 , ""home"" , 4 ) || ! strncmp ( path + 1 , ""HOME"" , 4 ) )"		5250242	0					
ANR	5250613	Condition	"! strncmp ( path + 1 , ""home"" , 4 ) || ! strncmp ( path + 1 , ""HOME"" , 4 )"	181:6:4264:4327	5250242	0	True				
ANR	5250614	OrExpression	"! strncmp ( path + 1 , ""home"" , 4 ) || ! strncmp ( path + 1 , ""HOME"" , 4 )"		5250242	0		||			
ANR	5250615	UnaryOperationExpression	"! strncmp ( path + 1 , ""home"" , 4 )"		5250242	0					
ANR	5250616	UnaryOperator	!		5250242	0					
ANR	5250617	CallExpression	"strncmp ( path + 1 , ""home"" , 4 )"		5250242	1					
ANR	5250618	Callee	strncmp		5250242	0					
ANR	5250619	Identifier	strncmp		5250242	0					
ANR	5250620	ArgumentList	path + 1		5250242	1					
ANR	5250621	Argument	path + 1		5250242	0					
ANR	5250622	AdditiveExpression	path + 1		5250242	0		+			
ANR	5250623	Identifier	path		5250242	0					
ANR	5250624	PrimaryExpression	1		5250242	1					
ANR	5250625	Argument	"""home"""		5250242	1					
ANR	5250626	PrimaryExpression	"""home"""		5250242	0					
ANR	5250627	Argument	4		5250242	2					
ANR	5250628	PrimaryExpression	4		5250242	0					
ANR	5250629	UnaryOperationExpression	"! strncmp ( path + 1 , ""HOME"" , 4 )"		5250242	1					
ANR	5250630	UnaryOperator	!		5250242	0					
ANR	5250631	CallExpression	"strncmp ( path + 1 , ""HOME"" , 4 )"		5250242	1					
ANR	5250632	Callee	strncmp		5250242	0					
ANR	5250633	Identifier	strncmp		5250242	0					
ANR	5250634	ArgumentList	path + 1		5250242	1					
ANR	5250635	Argument	path + 1		5250242	0					
ANR	5250636	AdditiveExpression	path + 1		5250242	0		+			
ANR	5250637	Identifier	path		5250242	0					
ANR	5250638	PrimaryExpression	1		5250242	1					
ANR	5250639	Argument	"""HOME"""		5250242	1					
ANR	5250640	PrimaryExpression	"""HOME"""		5250242	0					
ANR	5250641	Argument	4		5250242	2					
ANR	5250642	PrimaryExpression	4		5250242	0					
ANR	5250643	CompoundStatement		61:72:1376:1376	5250242	1					
ANR	5250644	ExpressionStatement	homepath = r_str_home ( ( strlen ( path ) > 5 ) ? path + 6 : NULL )	182:3:4335:4394	5250242	0	True				
ANR	5250645	AssignmentExpression	homepath = r_str_home ( ( strlen ( path ) > 5 ) ? path + 6 : NULL )		5250242	0		=			
ANR	5250646	Identifier	homepath		5250242	0					
ANR	5250647	CallExpression	r_str_home ( ( strlen ( path ) > 5 ) ? path + 6 : NULL )		5250242	1					
ANR	5250648	Callee	r_str_home		5250242	0					
ANR	5250649	Identifier	r_str_home		5250242	0					
ANR	5250650	ArgumentList	( strlen ( path ) > 5 ) ? path + 6 : NULL		5250242	1					
ANR	5250651	Argument	( strlen ( path ) > 5 ) ? path + 6 : NULL		5250242	0					
ANR	5250652	ConditionalExpression	( strlen ( path ) > 5 ) ? path + 6 : NULL		5250242	0					
ANR	5250653	Condition	strlen ( path ) > 5		5250242	0					
ANR	5250654	RelationalExpression	strlen ( path ) > 5		5250242	0		>			
ANR	5250655	CallExpression	strlen ( path )		5250242	0					
ANR	5250656	Callee	strlen		5250242	0					
ANR	5250657	Identifier	strlen		5250242	0					
ANR	5250658	ArgumentList	path		5250242	1					
ANR	5250659	Argument	path		5250242	0					
ANR	5250660	Identifier	path		5250242	0					
ANR	5250661	PrimaryExpression	5		5250242	1					
ANR	5250662	AdditiveExpression	path + 6		5250242	1		+			
ANR	5250663	Identifier	path		5250242	0					
ANR	5250664	PrimaryExpression	6		5250242	1					
ANR	5250665	Identifier	NULL		5250242	2					
ANR	5250666	IfStatement	if ( homepath )		5250242	1					
ANR	5250667	Condition	homepath	183:7:4403:4410	5250242	0	True				
ANR	5250668	Identifier	homepath		5250242	0					
ANR	5250669	CompoundStatement		63:17:1459:1459	5250242	1					
ANR	5250670	ExpressionStatement	path = ( const char * ) homepath	184:4:4419:4448	5250242	0	True				
ANR	5250671	AssignmentExpression	path = ( const char * ) homepath		5250242	0		=			
ANR	5250672	Identifier	path		5250242	0					
ANR	5250673	CastExpression	( const char * ) homepath		5250242	1					
ANR	5250674	CastTarget	const char *		5250242	0					
ANR	5250675	Identifier	homepath		5250242	1					
ANR	5250676	IfStatement	if ( ! r_file_is_directory ( path ) )		5250242	18					
ANR	5250677	Condition	! r_file_is_directory ( path )	188:5:4467:4493	5250242	0	True				
ANR	5250678	UnaryOperationExpression	! r_file_is_directory ( path )		5250242	0					
ANR	5250679	UnaryOperator	!		5250242	0					
ANR	5250680	CallExpression	r_file_is_directory ( path )		5250242	1					
ANR	5250681	Callee	r_file_is_directory		5250242	0					
ANR	5250682	Identifier	r_file_is_directory		5250242	0					
ANR	5250683	ArgumentList	path		5250242	1					
ANR	5250684	Argument	path		5250242	0					
ANR	5250685	Identifier	path		5250242	0					
ANR	5250686	CompoundStatement		68:34:1542:1542	5250242	1					
ANR	5250687	ExpressionStatement	"p = strrchr ( path , '/' )"	189:2:4500:4523	5250242	0	True				
ANR	5250688	AssignmentExpression	"p = strrchr ( path , '/' )"		5250242	0		=			
ANR	5250689	Identifier	p		5250242	0					
ANR	5250690	CallExpression	"strrchr ( path , '/' )"		5250242	1					
ANR	5250691	Callee	strrchr		5250242	0					
ANR	5250692	Identifier	strrchr		5250242	0					
ANR	5250693	ArgumentList	path		5250242	1					
ANR	5250694	Argument	path		5250242	0					
ANR	5250695	Identifier	path		5250242	0					
ANR	5250696	Argument	'/'		5250242	1					
ANR	5250697	PrimaryExpression	'/'		5250242	0					
ANR	5250698	IfStatement	if ( p )		5250242	1					
ANR	5250699	Condition	p	190:6:4531:4531	5250242	0	True				
ANR	5250700	Identifier	p		5250242	0					
ANR	5250701	CompoundStatement		70:9:1580:1580	5250242	1					
ANR	5250702	ExpressionStatement	off = p - path	191:3:4539:4553	5250242	0	True				
ANR	5250703	AssignmentExpression	off = p - path		5250242	0		=			
ANR	5250704	Identifier	off		5250242	0					
ANR	5250705	AdditiveExpression	p - path		5250242	1		-			
ANR	5250706	Identifier	p		5250242	0					
ANR	5250707	Identifier	path		5250242	1					
ANR	5250708	ExpressionStatement	"d = ( char * ) calloc ( 1 , off + 1 )"	192:3:4558:4590	5250242	1	True				
ANR	5250709	AssignmentExpression	"d = ( char * ) calloc ( 1 , off + 1 )"		5250242	0		=			
ANR	5250710	Identifier	d		5250242	0					
ANR	5250711	CastExpression	"( char * ) calloc ( 1 , off + 1 )"		5250242	1					
ANR	5250712	CastTarget	char *		5250242	0					
ANR	5250713	CallExpression	"calloc ( 1 , off + 1 )"		5250242	1					
ANR	5250714	Callee	calloc		5250242	0					
ANR	5250715	Identifier	calloc		5250242	0					
ANR	5250716	ArgumentList	1		5250242	1					
ANR	5250717	Argument	1		5250242	0					
ANR	5250718	PrimaryExpression	1		5250242	0					
ANR	5250719	Argument	off + 1		5250242	1					
ANR	5250720	AdditiveExpression	off + 1		5250242	0		+			
ANR	5250721	Identifier	off		5250242	0					
ANR	5250722	PrimaryExpression	1		5250242	1					
ANR	5250723	IfStatement	if ( ! d )		5250242	2					
ANR	5250724	Condition	! d	193:7:4599:4600	5250242	0	True				
ANR	5250725	UnaryOperationExpression	! d		5250242	0					
ANR	5250726	UnaryOperator	!		5250242	0					
ANR	5250727	Identifier	d		5250242	1					
ANR	5250728	CompoundStatement		73:11:1649:1649	5250242	1					
ANR	5250729	ExpressionStatement	free ( homepath )	194:4:4609:4624	5250242	0	True				
ANR	5250730	CallExpression	free ( homepath )		5250242	0					
ANR	5250731	Callee	free		5250242	0					
ANR	5250732	Identifier	free		5250242	0					
ANR	5250733	ArgumentList	homepath		5250242	1					
ANR	5250734	Argument	homepath		5250242	0					
ANR	5250735	Identifier	homepath		5250242	0					
ANR	5250736	ReturnStatement	return NULL ;	195:4:4630:4641	5250242	1	True				
ANR	5250737	Identifier	NULL		5250242	0					
ANR	5250738	ExpressionStatement	"memcpy ( d , path , off )"	197:3:4651:4672	5250242	3	True				
ANR	5250739	CallExpression	"memcpy ( d , path , off )"		5250242	0					
ANR	5250740	Callee	memcpy		5250242	0					
ANR	5250741	Identifier	memcpy		5250242	0					
ANR	5250742	ArgumentList	d		5250242	1					
ANR	5250743	Argument	d		5250242	0					
ANR	5250744	Identifier	d		5250242	0					
ANR	5250745	Argument	path		5250242	1					
ANR	5250746	Identifier	path		5250242	0					
ANR	5250747	Argument	off		5250242	2					
ANR	5250748	Identifier	off		5250242	0					
ANR	5250749	ExpressionStatement	path = ( const char * ) d	198:3:4677:4699	5250242	4	True				
ANR	5250750	AssignmentExpression	path = ( const char * ) d		5250242	0		=			
ANR	5250751	Identifier	path		5250242	0					
ANR	5250752	CastExpression	( const char * ) d		5250242	1					
ANR	5250753	CastTarget	const char *		5250242	0					
ANR	5250754	Identifier	d		5250242	1					
ANR	5250755	ExpressionStatement	pattern = strdup ( p + 1 )	199:3:4704:4728	5250242	5	True				
ANR	5250756	AssignmentExpression	pattern = strdup ( p + 1 )		5250242	0		=			
ANR	5250757	Identifier	pattern		5250242	0					
ANR	5250758	CallExpression	strdup ( p + 1 )		5250242	1					
ANR	5250759	Callee	strdup		5250242	0					
ANR	5250760	Identifier	strdup		5250242	0					
ANR	5250761	ArgumentList	p + 1		5250242	1					
ANR	5250762	Argument	p + 1		5250242	0					
ANR	5250763	AdditiveExpression	p + 1		5250242	0		+			
ANR	5250764	Identifier	p		5250242	0					
ANR	5250765	PrimaryExpression	1		5250242	1					
ANR	5250766	ElseStatement	else		5250242	0					
ANR	5250767	CompoundStatement		80:9:1785:1785	5250242	0					
ANR	5250768	ExpressionStatement	pattern = strdup ( path )	201:3:4744:4767	5250242	0	True				
ANR	5250769	AssignmentExpression	pattern = strdup ( path )		5250242	0		=			
ANR	5250770	Identifier	pattern		5250242	0					
ANR	5250771	CallExpression	strdup ( path )		5250242	1					
ANR	5250772	Callee	strdup		5250242	0					
ANR	5250773	Identifier	strdup		5250242	0					
ANR	5250774	ArgumentList	path		5250242	1					
ANR	5250775	Argument	path		5250242	0					
ANR	5250776	Identifier	path		5250242	0					
ANR	5250777	ExpressionStatement	"path = ""."""	202:3:4772:4782	5250242	1	True				
ANR	5250778	AssignmentExpression	"path = ""."""		5250242	0		=			
ANR	5250779	Identifier	path		5250242	0					
ANR	5250780	PrimaryExpression	"""."""		5250242	1					
ANR	5250781	ElseStatement	else		5250242	0					
ANR	5250782	CompoundStatement		84:8:1842:1842	5250242	0					
ANR	5250783	ExpressionStatement	"pattern = strdup ( ""*"" )"	205:2:4800:4822	5250242	0	True				
ANR	5250784	AssignmentExpression	"pattern = strdup ( ""*"" )"		5250242	0		=			
ANR	5250785	Identifier	pattern		5250242	0					
ANR	5250786	CallExpression	"strdup ( ""*"" )"		5250242	1					
ANR	5250787	Callee	strdup		5250242	0					
ANR	5250788	Identifier	strdup		5250242	0					
ANR	5250789	ArgumentList	"""*"""		5250242	1					
ANR	5250790	Argument	"""*"""		5250242	0					
ANR	5250791	PrimaryExpression	"""*"""		5250242	0					
ANR	5250792	IfStatement	if ( r_file_is_regular ( path ) )		5250242	19					
ANR	5250793	Condition	r_file_is_regular ( path )	207:5:4832:4855	5250242	0	True				
ANR	5250794	CallExpression	r_file_is_regular ( path )		5250242	0					
ANR	5250795	Callee	r_file_is_regular		5250242	0					
ANR	5250796	Identifier	r_file_is_regular		5250242	0					
ANR	5250797	ArgumentList	path		5250242	1					
ANR	5250798	Argument	path		5250242	0					
ANR	5250799	Identifier	path		5250242	0					
ANR	5250800	CompoundStatement		87:31:1904:1904	5250242	1					
ANR	5250801	ExpressionStatement	"res = showfile ( res , 0 , path , path , printfmt )"	208:2:4862:4907	5250242	0	True				
ANR	5250802	AssignmentExpression	"res = showfile ( res , 0 , path , path , printfmt )"		5250242	0		=			
ANR	5250803	Identifier	res		5250242	0					
ANR	5250804	CallExpression	"showfile ( res , 0 , path , path , printfmt )"		5250242	1					
ANR	5250805	Callee	showfile		5250242	0					
ANR	5250806	Identifier	showfile		5250242	0					
ANR	5250807	ArgumentList	res		5250242	1					
ANR	5250808	Argument	res		5250242	0					
ANR	5250809	Identifier	res		5250242	0					
ANR	5250810	Argument	0		5250242	1					
ANR	5250811	PrimaryExpression	0		5250242	0					
ANR	5250812	Argument	path		5250242	2					
ANR	5250813	Identifier	path		5250242	0					
ANR	5250814	Argument	path		5250242	3					
ANR	5250815	Identifier	path		5250242	0					
ANR	5250816	Argument	printfmt		5250242	4					
ANR	5250817	Identifier	printfmt		5250242	0					
ANR	5250818	ExpressionStatement	free ( homepath )	209:2:4911:4926	5250242	1	True				
ANR	5250819	CallExpression	free ( homepath )		5250242	0					
ANR	5250820	Callee	free		5250242	0					
ANR	5250821	Identifier	free		5250242	0					
ANR	5250822	ArgumentList	homepath		5250242	1					
ANR	5250823	Argument	homepath		5250242	0					
ANR	5250824	Identifier	homepath		5250242	0					
ANR	5250825	ExpressionStatement	free ( pattern )	210:2:4930:4944	5250242	2	True				
ANR	5250826	CallExpression	free ( pattern )		5250242	0					
ANR	5250827	Callee	free		5250242	0					
ANR	5250828	Identifier	free		5250242	0					
ANR	5250829	ArgumentList	pattern		5250242	1					
ANR	5250830	Argument	pattern		5250242	0					
ANR	5250831	Identifier	pattern		5250242	0					
ANR	5250832	ExpressionStatement	free ( d )	211:2:4948:4956	5250242	3	True				
ANR	5250833	CallExpression	free ( d )		5250242	0					
ANR	5250834	Callee	free		5250242	0					
ANR	5250835	Identifier	free		5250242	0					
ANR	5250836	ArgumentList	d		5250242	1					
ANR	5250837	Argument	d		5250242	0					
ANR	5250838	Identifier	d		5250242	0					
ANR	5250839	ReturnStatement	return res ;	212:2:4960:4970	5250242	4	True				
ANR	5250840	Identifier	res		5250242	0					
ANR	5250841	ExpressionStatement	files = r_sys_dir ( path )	214:1:4976:5000	5250242	20	True				
ANR	5250842	AssignmentExpression	files = r_sys_dir ( path )		5250242	0		=			
ANR	5250843	Identifier	files		5250242	0					
ANR	5250844	CallExpression	r_sys_dir ( path )		5250242	1					
ANR	5250845	Callee	r_sys_dir		5250242	0					
ANR	5250846	Identifier	r_sys_dir		5250242	0					
ANR	5250847	ArgumentList	path		5250242	1					
ANR	5250848	Argument	path		5250242	0					
ANR	5250849	Identifier	path		5250242	0					
ANR	5250850	IfStatement	if ( path [ strlen ( path ) - 1 ] == '/' )		5250242	21					
ANR	5250851	Condition	path [ strlen ( path ) - 1 ] == '/'	216:5:5008:5037	5250242	0	True				
ANR	5250852	EqualityExpression	path [ strlen ( path ) - 1 ] == '/'		5250242	0		==			
ANR	5250853	ArrayIndexing	path [ strlen ( path ) - 1 ]		5250242	0					
ANR	5250854	Identifier	path		5250242	0					
ANR	5250855	AdditiveExpression	strlen ( path ) - 1		5250242	1		-			
ANR	5250856	CallExpression	strlen ( path )		5250242	0					
ANR	5250857	Callee	strlen		5250242	0					
ANR	5250858	Identifier	strlen		5250242	0					
ANR	5250859	ArgumentList	path		5250242	1					
ANR	5250860	Argument	path		5250242	0					
ANR	5250861	Identifier	path		5250242	0					
ANR	5250862	PrimaryExpression	1		5250242	1					
ANR	5250863	PrimaryExpression	'/'		5250242	1					
ANR	5250864	CompoundStatement		96:37:2086:2086	5250242	1					
ANR	5250865	ExpressionStatement	dir = strdup ( path )	217:2:5044:5063	5250242	0	True				
ANR	5250866	AssignmentExpression	dir = strdup ( path )		5250242	0		=			
ANR	5250867	Identifier	dir		5250242	0					
ANR	5250868	CallExpression	strdup ( path )		5250242	1					
ANR	5250869	Callee	strdup		5250242	0					
ANR	5250870	Identifier	strdup		5250242	0					
ANR	5250871	ArgumentList	path		5250242	1					
ANR	5250872	Argument	path		5250242	0					
ANR	5250873	Identifier	path		5250242	0					
ANR	5250874	ElseStatement	else		5250242	0					
ANR	5250875	CompoundStatement		98:8:2119:2119	5250242	0					
ANR	5250876	ExpressionStatement	"dir = r_str_append ( strdup ( path ) , ""/"" )"	219:2:5077:5116	5250242	0	True				
ANR	5250877	AssignmentExpression	"dir = r_str_append ( strdup ( path ) , ""/"" )"		5250242	0		=			
ANR	5250878	Identifier	dir		5250242	0					
ANR	5250879	CallExpression	"r_str_append ( strdup ( path ) , ""/"" )"		5250242	1					
ANR	5250880	Callee	r_str_append		5250242	0					
ANR	5250881	Identifier	r_str_append		5250242	0					
ANR	5250882	ArgumentList	strdup ( path )		5250242	1					
ANR	5250883	Argument	strdup ( path )		5250242	0					
ANR	5250884	CallExpression	strdup ( path )		5250242	0					
ANR	5250885	Callee	strdup		5250242	0					
ANR	5250886	Identifier	strdup		5250242	0					
ANR	5250887	ArgumentList	path		5250242	1					
ANR	5250888	Argument	path		5250242	0					
ANR	5250889	Identifier	path		5250242	0					
ANR	5250890	Argument	"""/"""		5250242	1					
ANR	5250891	PrimaryExpression	"""/"""		5250242	0					
ANR	5250892	IdentifierDeclStatement	int nth = 0 ;	221:1:5122:5133	5250242	22	True				
ANR	5250893	IdentifierDecl	nth = 0		5250242	0					
ANR	5250894	IdentifierDeclType	int		5250242	0					
ANR	5250895	Identifier	nth		5250242	1					
ANR	5250896	AssignmentExpression	nth = 0		5250242	2		=			
ANR	5250897	Identifier	nth		5250242	0					
ANR	5250898	PrimaryExpression	0		5250242	1					
ANR	5250899	IfStatement	if ( printfmt == FMT_JSON )		5250242	23					
ANR	5250900	Condition	printfmt == FMT_JSON	222:5:5140:5159	5250242	0	True				
ANR	5250901	EqualityExpression	printfmt == FMT_JSON		5250242	0		==			
ANR	5250902	Identifier	printfmt		5250242	0					
ANR	5250903	Identifier	FMT_JSON		5250242	1					
ANR	5250904	CompoundStatement		102:27:2208:2208	5250242	1					
ANR	5250905	ExpressionStatement	"res = strdup ( ""["" )"	223:2:5166:5184	5250242	0	True				
ANR	5250906	AssignmentExpression	"res = strdup ( ""["" )"		5250242	0		=			
ANR	5250907	Identifier	res		5250242	0					
ANR	5250908	CallExpression	"strdup ( ""["" )"		5250242	1					
ANR	5250909	Callee	strdup		5250242	0					
ANR	5250910	Identifier	strdup		5250242	0					
ANR	5250911	ArgumentList	"""["""		5250242	1					
ANR	5250912	Argument	"""["""		5250242	0					
ANR	5250913	PrimaryExpression	"""["""		5250242	0					
ANR	5250914	ExpressionStatement	needs_newline = 0	225:1:5190:5207	5250242	24	True				
ANR	5250915	AssignmentExpression	needs_newline = 0		5250242	0		=			
ANR	5250916	Identifier	needs_newline		5250242	0					
ANR	5250917	PrimaryExpression	0		5250242	1					
ANR	5250918	Statement	r_list_foreach	226:1:5210:5223	5250242	25	True				
ANR	5250919	Statement	(	226:16:5225:5225	5250242	26	True				
ANR	5250920	Statement	files	226:17:5226:5230	5250242	27	True				
ANR	5250921	Statement	","	226:22:5231:5231	5250242	28	True				
ANR	5250922	Statement	iter	226:24:5233:5236	5250242	29	True				
ANR	5250923	Statement	","	226:28:5237:5237	5250242	30	True				
ANR	5250924	Statement	name	226:30:5239:5242	5250242	31	True				
ANR	5250925	Statement	)	226:34:5243:5243	5250242	32	True				
ANR	5250926	CompoundStatement		107:2:2295:2338	5250242	33					
ANR	5250927	IdentifierDeclStatement	"char * n = r_str_append ( strdup ( dir ) , name ) ;"	227:2:5249:5292	5250242	0	True				
ANR	5250928	IdentifierDecl	"* n = r_str_append ( strdup ( dir ) , name )"		5250242	0					
ANR	5250929	IdentifierDeclType	char *		5250242	0					
ANR	5250930	Identifier	n		5250242	1					
ANR	5250931	AssignmentExpression	"* n = r_str_append ( strdup ( dir ) , name )"		5250242	2		=			
ANR	5250932	Identifier	n		5250242	0					
ANR	5250933	CallExpression	"r_str_append ( strdup ( dir ) , name )"		5250242	1					
ANR	5250934	Callee	r_str_append		5250242	0					
ANR	5250935	Identifier	r_str_append		5250242	0					
ANR	5250936	ArgumentList	strdup ( dir )		5250242	1					
ANR	5250937	Argument	strdup ( dir )		5250242	0					
ANR	5250938	CallExpression	strdup ( dir )		5250242	0					
ANR	5250939	Callee	strdup		5250242	0					
ANR	5250940	Identifier	strdup		5250242	0					
ANR	5250941	ArgumentList	dir		5250242	1					
ANR	5250942	Argument	dir		5250242	0					
ANR	5250943	Identifier	dir		5250242	0					
ANR	5250944	Argument	name		5250242	1					
ANR	5250945	Identifier	name		5250242	0					
ANR	5250946	IfStatement	if ( ! n )		5250242	1					
ANR	5250947	Condition	! n	228:6:5300:5301	5250242	0	True				
ANR	5250948	UnaryOperationExpression	! n		5250242	0					
ANR	5250949	UnaryOperator	!		5250242	0					
ANR	5250950	Identifier	n		5250242	1					
ANR	5250951	CompoundStatement		108:10:2350:2350	5250242	1					
ANR	5250952	BreakStatement	break ;	229:3:5309:5314	5250242	0	True				
ANR	5250953	IfStatement	"if ( r_str_glob ( name , pattern ) )"		5250242	2					
ANR	5250954	Condition	"r_str_glob ( name , pattern )"	231:6:5326:5351	5250242	0	True				
ANR	5250955	CallExpression	"r_str_glob ( name , pattern )"		5250242	0					
ANR	5250956	Callee	r_str_glob		5250242	0					
ANR	5250957	Identifier	r_str_glob		5250242	0					
ANR	5250958	ArgumentList	name		5250242	1					
ANR	5250959	Argument	name		5250242	0					
ANR	5250960	Identifier	name		5250242	0					
ANR	5250961	Argument	pattern		5250242	1					
ANR	5250962	Identifier	pattern		5250242	0					
ANR	5250963	CompoundStatement		111:34:2400:2400	5250242	1					
ANR	5250964	IfStatement	if ( * n )		5250242	0					
ANR	5250965	Condition	* n	232:7:5363:5364	5250242	0	True				
ANR	5250966	UnaryOperationExpression	* n		5250242	0					
ANR	5250967	UnaryOperator	*		5250242	0					
ANR	5250968	Identifier	n		5250242	1					
ANR	5250969	CompoundStatement		112:11:2413:2413	5250242	1					
ANR	5250970	ExpressionStatement	"res = showfile ( res , nth , n , name , printfmt )"	233:4:5373:5417	5250242	0	True				
ANR	5250971	AssignmentExpression	"res = showfile ( res , nth , n , name , printfmt )"		5250242	0		=			
ANR	5250972	Identifier	res		5250242	0					
ANR	5250973	CallExpression	"showfile ( res , nth , n , name , printfmt )"		5250242	1					
ANR	5250974	Callee	showfile		5250242	0					
ANR	5250975	Identifier	showfile		5250242	0					
ANR	5250976	ArgumentList	res		5250242	1					
ANR	5250977	Argument	res		5250242	0					
ANR	5250978	Identifier	res		5250242	0					
ANR	5250979	Argument	nth		5250242	1					
ANR	5250980	Identifier	nth		5250242	0					
ANR	5250981	Argument	n		5250242	2					
ANR	5250982	Identifier	n		5250242	0					
ANR	5250983	Argument	name		5250242	3					
ANR	5250984	Identifier	name		5250242	0					
ANR	5250985	Argument	printfmt		5250242	4					
ANR	5250986	Identifier	printfmt		5250242	0					
ANR	5250987	ExpressionStatement	nth ++	235:3:5427:5432	5250242	1	True				
ANR	5250988	PostIncDecOperationExpression	nth ++		5250242	0					
ANR	5250989	Identifier	nth		5250242	0					
ANR	5250990	IncDec	++		5250242	1					
ANR	5250991	ExpressionStatement	free ( n )	237:2:5440:5448	5250242	3	True				
ANR	5250992	CallExpression	free ( n )		5250242	0					
ANR	5250993	Callee	free		5250242	0					
ANR	5250994	Identifier	free		5250242	0					
ANR	5250995	ArgumentList	n		5250242	1					
ANR	5250996	Argument	n		5250242	0					
ANR	5250997	Identifier	n		5250242	0					
ANR	5250998	IfStatement	if ( printfmt == FMT_JSON )		5250242	34					
ANR	5250999	Condition	printfmt == FMT_JSON	239:5:5458:5477	5250242	0	True				
ANR	5251000	EqualityExpression	printfmt == FMT_JSON		5250242	0		==			
ANR	5251001	Identifier	printfmt		5250242	0					
ANR	5251002	Identifier	FMT_JSON		5250242	1					
ANR	5251003	CompoundStatement		119:27:2526:2526	5250242	1					
ANR	5251004	ExpressionStatement	"res = r_str_append ( res , ""]"" )"	240:2:5484:5513	5250242	0	True				
ANR	5251005	AssignmentExpression	"res = r_str_append ( res , ""]"" )"		5250242	0		=			
ANR	5251006	Identifier	res		5250242	0					
ANR	5251007	CallExpression	"r_str_append ( res , ""]"" )"		5250242	1					
ANR	5251008	Callee	r_str_append		5250242	0					
ANR	5251009	Identifier	r_str_append		5250242	0					
ANR	5251010	ArgumentList	res		5250242	1					
ANR	5251011	Argument	res		5250242	0					
ANR	5251012	Identifier	res		5250242	0					
ANR	5251013	Argument	"""]"""		5250242	1					
ANR	5251014	PrimaryExpression	"""]"""		5250242	0					
ANR	5251015	IfStatement	if ( needs_newline )		5250242	35					
ANR	5251016	Condition	needs_newline	242:5:5523:5535	5250242	0	True				
ANR	5251017	Identifier	needs_newline		5250242	0					
ANR	5251018	CompoundStatement		122:20:2584:2584	5250242	1					
ANR	5251019	ExpressionStatement	"res = r_str_append ( res , ""\\n"" )"	243:2:5542:5572	5250242	0	True				
ANR	5251020	AssignmentExpression	"res = r_str_append ( res , ""\\n"" )"		5250242	0		=			
ANR	5251021	Identifier	res		5250242	0					
ANR	5251022	CallExpression	"r_str_append ( res , ""\\n"" )"		5250242	1					
ANR	5251023	Callee	r_str_append		5250242	0					
ANR	5251024	Identifier	r_str_append		5250242	0					
ANR	5251025	ArgumentList	res		5250242	1					
ANR	5251026	Argument	res		5250242	0					
ANR	5251027	Identifier	res		5250242	0					
ANR	5251028	Argument	"""\\n"""		5250242	1					
ANR	5251029	PrimaryExpression	"""\\n"""		5250242	0					
ANR	5251030	ExpressionStatement	free ( dir )	245:1:5578:5588	5250242	36	True				
ANR	5251031	CallExpression	free ( dir )		5250242	0					
ANR	5251032	Callee	free		5250242	0					
ANR	5251033	Identifier	free		5250242	0					
ANR	5251034	ArgumentList	dir		5250242	1					
ANR	5251035	Argument	dir		5250242	0					
ANR	5251036	Identifier	dir		5250242	0					
ANR	5251037	ExpressionStatement	free ( d )	246:1:5591:5599	5250242	37	True				
ANR	5251038	CallExpression	free ( d )		5250242	0					
ANR	5251039	Callee	free		5250242	0					
ANR	5251040	Identifier	free		5250242	0					
ANR	5251041	ArgumentList	d		5250242	1					
ANR	5251042	Argument	d		5250242	0					
ANR	5251043	Identifier	d		5250242	0					
ANR	5251044	ExpressionStatement	free ( homepath )	247:1:5602:5617	5250242	38	True				
ANR	5251045	CallExpression	free ( homepath )		5250242	0					
ANR	5251046	Callee	free		5250242	0					
ANR	5251047	Identifier	free		5250242	0					
ANR	5251048	ArgumentList	homepath		5250242	1					
ANR	5251049	Argument	homepath		5250242	0					
ANR	5251050	Identifier	homepath		5250242	0					
ANR	5251051	ExpressionStatement	free ( pattern )	248:1:5620:5634	5250242	39	True				
ANR	5251052	CallExpression	free ( pattern )		5250242	0					
ANR	5251053	Callee	free		5250242	0					
ANR	5251054	Identifier	free		5250242	0					
ANR	5251055	ArgumentList	pattern		5250242	1					
ANR	5251056	Argument	pattern		5250242	0					
ANR	5251057	Identifier	pattern		5250242	0					
ANR	5251058	ExpressionStatement	r_list_free ( files )	249:1:5637:5656	5250242	40	True				
ANR	5251059	CallExpression	r_list_free ( files )		5250242	0					
ANR	5251060	Callee	r_list_free		5250242	0					
ANR	5251061	Identifier	r_list_free		5250242	0					
ANR	5251062	ArgumentList	files		5250242	1					
ANR	5251063	Argument	files		5250242	0					
ANR	5251064	Identifier	files		5250242	0					
ANR	5251065	ReturnStatement	return res ;	250:1:5659:5669	5250242	41	True				
ANR	5251066	Identifier	res		5250242	0					
ANR	5251067	ReturnType	R_API char *		5250242	1					
ANR	5251068	Identifier	r_syscmd_ls		5250242	2					
ANR	5251069	ParameterList	const char * input		5250242	3					
ANR	5251070	Parameter	const char * input	121:24:2934:2950	5250242	0	True				
ANR	5251071	ParameterType	const char *		5250242	0					
ANR	5251072	Identifier	input		5250242	1					
ANR	5251073	CFGEntryNode	ENTRY		5250242		True				
ANR	5251074	CFGExitNode	EXIT		5250242		True				
ANR	5251075	CFGErrorNode	ERROR		5250242		True				
ANR	5251076	Symbol	r_file_is_directory		5250242						
ANR	5251077	Symbol	r_str_append		5250242						
ANR	5251078	Symbol	r_sandbox_enable		5250242						
ANR	5251079	Symbol	pattern		5250242						
ANR	5251080	Symbol	* input		5250242						
ANR	5251081	Symbol	r_file_is_regular		5250242						
ANR	5251082	Symbol	calloc		5250242						
ANR	5251083	Symbol	dir		5250242						
ANR	5251084	Symbol	path		5250242						
ANR	5251085	Symbol	strncmp		5250242						
ANR	5251086	Symbol	strlen		5250242						
ANR	5251087	Symbol	FMT_RAW		5250242						
ANR	5251088	Symbol	needs_newline		5250242						
ANR	5251089	Symbol	homepath		5250242						
ANR	5251090	Symbol	r_str_home		5250242						
ANR	5251091	Symbol	res		5250242						
ANR	5251092	Symbol	NULL		5250242						
ANR	5251093	Symbol	nth		5250242						
ANR	5251094	Symbol	d		5250242						
ANR	5251095	Symbol	iter		5250242						
ANR	5251096	Symbol	off		5250242						
ANR	5251097	Symbol	n		5250242						
ANR	5251098	Symbol	showfile		5250242						
ANR	5251099	Symbol	p		5250242						
ANR	5251100	Symbol	input		5250242						
ANR	5251101	Symbol	* strlen		5250242						
ANR	5251102	Symbol	r_str_glob		5250242						
ANR	5251103	Symbol	strrchr		5250242						
ANR	5251104	Symbol	name		5250242						
ANR	5251105	Symbol	r_str_trim_ro		5250242						
ANR	5251106	Symbol	* n		5250242						
ANR	5251107	Symbol	files		5250242						
ANR	5251108	Symbol	* path		5250242						
ANR	5251109	Symbol	printfmt		5250242						
ANR	5251110	Symbol	strdup		5250242						
ANR	5251111	Symbol	FMT_JSON		5250242						
ANR	5251112	Symbol	r_sys_dir		5250242						
ANR	5251113	Function	cmpstr	253:0:5674:5785							
ANR	5251114	FunctionDef	"cmpstr (const void * _a , const void * _b)"		5251113	0					
ANR	5251115	CompoundStatement		253:51:5725:5785	5251113	0					
ANR	5251116	IdentifierDeclStatement	"const char * a = _a , * b = _b ;"	254:1:5728:5755	5251113	0	True				
ANR	5251117	IdentifierDecl	* a = _a		5251113	0					
ANR	5251118	IdentifierDeclType	const char *		5251113	0					
ANR	5251119	Identifier	a		5251113	1					
ANR	5251120	AssignmentExpression	* a = _a		5251113	2		=			
ANR	5251121	Identifier	_a		5251113	0					
ANR	5251122	Identifier	_a		5251113	1					
ANR	5251123	IdentifierDecl	* b = _b		5251113	1					
ANR	5251124	IdentifierDeclType	const char *		5251113	0					
ANR	5251125	Identifier	b		5251113	1					
ANR	5251126	AssignmentExpression	* b = _b		5251113	2		=			
ANR	5251127	Identifier	_b		5251113	0					
ANR	5251128	Identifier	_b		5251113	1					
ANR	5251129	ReturnStatement	"return ( int ) strcmp ( a , b ) ;"	255:1:5758:5783	5251113	1	True				
ANR	5251130	CastExpression	"( int ) strcmp ( a , b )"		5251113	0					
ANR	5251131	CastTarget	int		5251113	0					
ANR	5251132	CallExpression	"strcmp ( a , b )"		5251113	1					
ANR	5251133	Callee	strcmp		5251113	0					
ANR	5251134	Identifier	strcmp		5251113	0					
ANR	5251135	ArgumentList	a		5251113	1					
ANR	5251136	Argument	a		5251113	0					
ANR	5251137	Identifier	a		5251113	0					
ANR	5251138	Argument	b		5251113	1					
ANR	5251139	Identifier	b		5251113	0					
ANR	5251140	ReturnType	static int		5251113	1					
ANR	5251141	Identifier	cmpstr		5251113	2					
ANR	5251142	ParameterList	"const void * _a , const void * _b"		5251113	3					
ANR	5251143	Parameter	const void * _a	253:19:5693:5706	5251113	0	True				
ANR	5251144	ParameterType	const void *		5251113	0					
ANR	5251145	Identifier	_a		5251113	1					
ANR	5251146	Parameter	const void * _b	253:35:5709:5722	5251113	1	True				
ANR	5251147	ParameterType	const void *		5251113	0					
ANR	5251148	Identifier	_b		5251113	1					
ANR	5251149	CFGEntryNode	ENTRY		5251113		True				
ANR	5251150	CFGExitNode	EXIT		5251113		True				
ANR	5251151	Symbol	strcmp		5251113						
ANR	5251152	Symbol	a		5251113						
ANR	5251153	Symbol	_a		5251113						
ANR	5251154	Symbol	b		5251113						
ANR	5251155	Symbol	_b		5251113						
ANR	5251156	Function	r_syscmd_sort	258:0:5788:6403							
ANR	5251157	FunctionDef	r_syscmd_sort (const char * file)		5251156	0					
ANR	5251158	CompoundStatement		258:44:5832:6403	5251156	0					
ANR	5251159	IdentifierDeclStatement	int sz ;	259:1:5835:5841	5251156	0	True				
ANR	5251160	IdentifierDecl	sz		5251156	0					
ANR	5251161	IdentifierDeclType	int		5251156	0					
ANR	5251162	Identifier	sz		5251156	1					
ANR	5251163	IdentifierDeclStatement	const char * p = NULL ;	260:1:5844:5864	5251156	1	True				
ANR	5251164	IdentifierDecl	* p = NULL		5251156	0					
ANR	5251165	IdentifierDeclType	const char *		5251156	0					
ANR	5251166	Identifier	p		5251156	1					
ANR	5251167	AssignmentExpression	* p = NULL		5251156	2		=			
ANR	5251168	Identifier	NULL		5251156	0					
ANR	5251169	Identifier	NULL		5251156	1					
ANR	5251170	IdentifierDeclStatement	RList * list = NULL ;	261:1:5867:5885	5251156	2	True				
ANR	5251171	IdentifierDecl	* list = NULL		5251156	0					
ANR	5251172	IdentifierDeclType	RList *		5251156	0					
ANR	5251173	Identifier	list		5251156	1					
ANR	5251174	AssignmentExpression	* list = NULL		5251156	2		=			
ANR	5251175	Identifier	NULL		5251156	0					
ANR	5251176	Identifier	NULL		5251156	1					
ANR	5251177	IfStatement	if ( file )		5251156	3					
ANR	5251178	Condition	file	262:5:5892:5895	5251156	0	True				
ANR	5251179	Identifier	file		5251156	0					
ANR	5251180	CompoundStatement		5:11:65:65	5251156	1					
ANR	5251181	IfStatement	"if ( ( p = strchr ( file , ' ' ) ) )"		5251156	0					
ANR	5251182	Condition	"p = strchr ( file , ' ' )"	263:6:5906:5929	5251156	0	True				
ANR	5251183	AssignmentExpression	"p = strchr ( file , ' ' )"		5251156	0		=			
ANR	5251184	Identifier	p		5251156	0					
ANR	5251185	CallExpression	"strchr ( file , ' ' )"		5251156	1					
ANR	5251186	Callee	strchr		5251156	0					
ANR	5251187	Identifier	strchr		5251156	0					
ANR	5251188	ArgumentList	file		5251156	1					
ANR	5251189	Argument	file		5251156	0					
ANR	5251190	Identifier	file		5251156	0					
ANR	5251191	Argument	' '		5251156	1					
ANR	5251192	PrimaryExpression	' '		5251156	0					
ANR	5251193	CompoundStatement		6:32:99:99	5251156	1					
ANR	5251194	ExpressionStatement	p = p + 1	264:3:5937:5946	5251156	0	True				
ANR	5251195	AssignmentExpression	p = p + 1		5251156	0		=			
ANR	5251196	Identifier	p		5251156	0					
ANR	5251197	AdditiveExpression	p + 1		5251156	1		+			
ANR	5251198	Identifier	p		5251156	0					
ANR	5251199	PrimaryExpression	1		5251156	1					
ANR	5251200	ElseStatement	else		5251156	0					
ANR	5251201	CompoundStatement		8:9:124:124	5251156	0					
ANR	5251202	ExpressionStatement	p = file	266:3:5962:5970	5251156	0	True				
ANR	5251203	AssignmentExpression	p = file		5251156	0		=			
ANR	5251204	Identifier	p		5251156	0					
ANR	5251205	Identifier	file		5251156	1					
ANR	5251206	IfStatement	if ( p && * p )		5251156	4					
ANR	5251207	Condition	p && * p	269:5:5984:5990	5251156	0	True				
ANR	5251208	AndExpression	p && * p		5251156	0		&&			
ANR	5251209	Identifier	p		5251156	0					
ANR	5251210	UnaryOperationExpression	* p		5251156	1					
ANR	5251211	UnaryOperator	*		5251156	0					
ANR	5251212	Identifier	p		5251156	1					
ANR	5251213	CompoundStatement		15:2:220:261	5251156	1					
ANR	5251214	IdentifierDeclStatement	char * filename = strdup ( p ) ;	270:2:5997:6024	5251156	0	True				
ANR	5251215	IdentifierDecl	* filename = strdup ( p )		5251156	0					
ANR	5251216	IdentifierDeclType	char *		5251156	0					
ANR	5251217	Identifier	filename		5251156	1					
ANR	5251218	AssignmentExpression	* filename = strdup ( p )		5251156	2		=			
ANR	5251219	Identifier	filename		5251156	0					
ANR	5251220	CallExpression	strdup ( p )		5251156	1					
ANR	5251221	Callee	strdup		5251156	0					
ANR	5251222	Identifier	strdup		5251156	0					
ANR	5251223	ArgumentList	p		5251156	1					
ANR	5251224	Argument	p		5251156	0					
ANR	5251225	Identifier	p		5251156	0					
ANR	5251226	ExpressionStatement	r_str_trim ( filename )	271:2:6028:6049	5251156	1	True				
ANR	5251227	CallExpression	r_str_trim ( filename )		5251156	0					
ANR	5251228	Callee	r_str_trim		5251156	0					
ANR	5251229	Identifier	r_str_trim		5251156	0					
ANR	5251230	ArgumentList	filename		5251156	1					
ANR	5251231	Argument	filename		5251156	0					
ANR	5251232	Identifier	filename		5251156	0					
ANR	5251233	IdentifierDeclStatement	"char * data = r_file_slurp ( filename , & sz ) ;"	272:2:6053:6094	5251156	2	True				
ANR	5251234	IdentifierDecl	"* data = r_file_slurp ( filename , & sz )"		5251156	0					
ANR	5251235	IdentifierDeclType	char *		5251156	0					
ANR	5251236	Identifier	data		5251156	1					
ANR	5251237	AssignmentExpression	"* data = r_file_slurp ( filename , & sz )"		5251156	2		=			
ANR	5251238	Identifier	data		5251156	0					
ANR	5251239	CallExpression	"r_file_slurp ( filename , & sz )"		5251156	1					
ANR	5251240	Callee	r_file_slurp		5251156	0					
ANR	5251241	Identifier	r_file_slurp		5251156	0					
ANR	5251242	ArgumentList	filename		5251156	1					
ANR	5251243	Argument	filename		5251156	0					
ANR	5251244	Identifier	filename		5251156	0					
ANR	5251245	Argument	& sz		5251156	1					
ANR	5251246	UnaryOperationExpression	& sz		5251156	0					
ANR	5251247	UnaryOperator	&		5251156	0					
ANR	5251248	Identifier	sz		5251156	1					
ANR	5251249	IfStatement	if ( ! data )		5251156	3					
ANR	5251250	Condition	! data	273:6:6102:6106	5251156	0	True				
ANR	5251251	UnaryOperationExpression	! data		5251156	0					
ANR	5251252	UnaryOperator	!		5251156	0					
ANR	5251253	Identifier	data		5251156	1					
ANR	5251254	CompoundStatement		16:13:276:276	5251156	1					
ANR	5251255	ExpressionStatement	"eprintf ( ""No such file or directory\\n"" )"	274:3:6114:6153	5251156	0	True				
ANR	5251256	CallExpression	"eprintf ( ""No such file or directory\\n"" )"		5251156	0					
ANR	5251257	Callee	eprintf		5251156	0					
ANR	5251258	Identifier	eprintf		5251156	0					
ANR	5251259	ArgumentList	"""No such file or directory\\n"""		5251156	1					
ANR	5251260	Argument	"""No such file or directory\\n"""		5251156	0					
ANR	5251261	PrimaryExpression	"""No such file or directory\\n"""		5251156	0					
ANR	5251262	ElseStatement	else		5251156	0					
ANR	5251263	CompoundStatement		18:9:331:331	5251156	0					
ANR	5251264	ExpressionStatement	"list = r_str_split_list ( data , ""\\n"" , 0 )"	276:3:6169:6208	5251156	0	True				
ANR	5251265	AssignmentExpression	"list = r_str_split_list ( data , ""\\n"" , 0 )"		5251156	0		=			
ANR	5251266	Identifier	list		5251156	0					
ANR	5251267	CallExpression	"r_str_split_list ( data , ""\\n"" , 0 )"		5251156	1					
ANR	5251268	Callee	r_str_split_list		5251156	0					
ANR	5251269	Identifier	r_str_split_list		5251156	0					
ANR	5251270	ArgumentList	data		5251156	1					
ANR	5251271	Argument	data		5251156	0					
ANR	5251272	Identifier	data		5251156	0					
ANR	5251273	Argument	"""\\n"""		5251156	1					
ANR	5251274	PrimaryExpression	"""\\n"""		5251156	0					
ANR	5251275	Argument	0		5251156	2					
ANR	5251276	PrimaryExpression	0		5251156	0					
ANR	5251277	ExpressionStatement	"r_list_sort ( list , cmpstr )"	277:3:6213:6239	5251156	1	True				
ANR	5251278	CallExpression	"r_list_sort ( list , cmpstr )"		5251156	0					
ANR	5251279	Callee	r_list_sort		5251156	0					
ANR	5251280	Identifier	r_list_sort		5251156	0					
ANR	5251281	ArgumentList	list		5251156	1					
ANR	5251282	Argument	list		5251156	0					
ANR	5251283	Identifier	list		5251156	0					
ANR	5251284	Argument	cmpstr		5251156	1					
ANR	5251285	Identifier	cmpstr		5251156	0					
ANR	5251286	ExpressionStatement	"data = r_list_to_str ( list , '\\n' )"	278:3:6244:6277	5251156	2	True				
ANR	5251287	AssignmentExpression	"data = r_list_to_str ( list , '\\n' )"		5251156	0		=			
ANR	5251288	Identifier	data		5251156	0					
ANR	5251289	CallExpression	"r_list_to_str ( list , '\\n' )"		5251156	1					
ANR	5251290	Callee	r_list_to_str		5251156	0					
ANR	5251291	Identifier	r_list_to_str		5251156	0					
ANR	5251292	ArgumentList	list		5251156	1					
ANR	5251293	Argument	list		5251156	0					
ANR	5251294	Identifier	list		5251156	0					
ANR	5251295	Argument	'\\n'		5251156	1					
ANR	5251296	PrimaryExpression	'\\n'		5251156	0					
ANR	5251297	ExpressionStatement	r_list_free ( list )	279:3:6282:6300	5251156	3	True				
ANR	5251298	CallExpression	r_list_free ( list )		5251156	0					
ANR	5251299	Callee	r_list_free		5251156	0					
ANR	5251300	Identifier	r_list_free		5251156	0					
ANR	5251301	ArgumentList	list		5251156	1					
ANR	5251302	Argument	list		5251156	0					
ANR	5251303	Identifier	list		5251156	0					
ANR	5251304	ExpressionStatement	free ( filename )	281:2:6308:6323	5251156	4	True				
ANR	5251305	CallExpression	free ( filename )		5251156	0					
ANR	5251306	Callee	free		5251156	0					
ANR	5251307	Identifier	free		5251156	0					
ANR	5251308	ArgumentList	filename		5251156	1					
ANR	5251309	Argument	filename		5251156	0					
ANR	5251310	Identifier	filename		5251156	0					
ANR	5251311	ReturnStatement	return data ;	282:2:6327:6338	5251156	5	True				
ANR	5251312	Identifier	data		5251156	0					
ANR	5251313	ElseStatement	else		5251156	0					
ANR	5251314	CompoundStatement		26:8:515:515	5251156	0					
ANR	5251315	ExpressionStatement	"eprintf ( ""Usage: sort [file]\\n"" )"	284:2:6352:6384	5251156	0	True				
ANR	5251316	CallExpression	"eprintf ( ""Usage: sort [file]\\n"" )"		5251156	0					
ANR	5251317	Callee	eprintf		5251156	0					
ANR	5251318	Identifier	eprintf		5251156	0					
ANR	5251319	ArgumentList	"""Usage: sort [file]\\n"""		5251156	1					
ANR	5251320	Argument	"""Usage: sort [file]\\n"""		5251156	0					
ANR	5251321	PrimaryExpression	"""Usage: sort [file]\\n"""		5251156	0					
ANR	5251322	ReturnStatement	return NULL ;	286:1:6390:6401	5251156	5	True				
ANR	5251323	Identifier	NULL		5251156	0					
ANR	5251324	ReturnType	R_API char *		5251156	1					
ANR	5251325	Identifier	r_syscmd_sort		5251156	2					
ANR	5251326	ParameterList	const char * file		5251156	3					
ANR	5251327	Parameter	const char * file	258:26:5814:5829	5251156	0	True				
ANR	5251328	ParameterType	const char *		5251156	0					
ANR	5251329	Identifier	file		5251156	1					
ANR	5251330	CFGEntryNode	ENTRY		5251156		True				
ANR	5251331	CFGExitNode	EXIT		5251156		True				
ANR	5251332	Symbol	r_file_slurp		5251156						
ANR	5251333	Symbol	NULL		5251156						
ANR	5251334	Symbol	data		5251156						
ANR	5251335	Symbol	sz		5251156						
ANR	5251336	Symbol	r_str_split_list		5251156						
ANR	5251337	Symbol	strchr		5251156						
ANR	5251338	Symbol	list		5251156						
ANR	5251339	Symbol	cmpstr		5251156						
ANR	5251340	Symbol	p		5251156						
ANR	5251341	Symbol	& sz		5251156						
ANR	5251342	Symbol	r_list_to_str		5251156						
ANR	5251343	Symbol	file		5251156						
ANR	5251344	Symbol	filename		5251156						
ANR	5251345	Symbol	* p		5251156						
ANR	5251346	Symbol	strdup		5251156						
ANR	5251347	Function	r_syscmd_head	289:0:6406:6869							
ANR	5251348	FunctionDef	"r_syscmd_head (const char * file , int count)"		5251347	0					
ANR	5251349	CompoundStatement		289:55:6461:6869	5251347	0					
ANR	5251350	IdentifierDeclStatement	const char * p = NULL ;	290:1:6464:6484	5251347	0	True				
ANR	5251351	IdentifierDecl	* p = NULL		5251347	0					
ANR	5251352	IdentifierDeclType	const char *		5251347	0					
ANR	5251353	Identifier	p		5251347	1					
ANR	5251354	AssignmentExpression	* p = NULL		5251347	2		=			
ANR	5251355	Identifier	NULL		5251347	0					
ANR	5251356	Identifier	NULL		5251347	1					
ANR	5251357	IfStatement	if ( file )		5251347	1					
ANR	5251358	Condition	file	291:5:6491:6494	5251347	0	True				
ANR	5251359	Identifier	file		5251347	0					
ANR	5251360	CompoundStatement		3:11:35:35	5251347	1					
ANR	5251361	IfStatement	"if ( ( p = strchr ( file , ' ' ) ) )"		5251347	0					
ANR	5251362	Condition	"p = strchr ( file , ' ' )"	292:6:6505:6528	5251347	0	True				
ANR	5251363	AssignmentExpression	"p = strchr ( file , ' ' )"		5251347	0		=			
ANR	5251364	Identifier	p		5251347	0					
ANR	5251365	CallExpression	"strchr ( file , ' ' )"		5251347	1					
ANR	5251366	Callee	strchr		5251347	0					
ANR	5251367	Identifier	strchr		5251347	0					
ANR	5251368	ArgumentList	file		5251347	1					
ANR	5251369	Argument	file		5251347	0					
ANR	5251370	Identifier	file		5251347	0					
ANR	5251371	Argument	' '		5251347	1					
ANR	5251372	PrimaryExpression	' '		5251347	0					
ANR	5251373	CompoundStatement		4:32:69:69	5251347	1					
ANR	5251374	ExpressionStatement	p = p + 1	293:3:6536:6545	5251347	0	True				
ANR	5251375	AssignmentExpression	p = p + 1		5251347	0		=			
ANR	5251376	Identifier	p		5251347	0					
ANR	5251377	AdditiveExpression	p + 1		5251347	1		+			
ANR	5251378	Identifier	p		5251347	0					
ANR	5251379	PrimaryExpression	1		5251347	1					
ANR	5251380	ElseStatement	else		5251347	0					
ANR	5251381	CompoundStatement		6:9:94:94	5251347	0					
ANR	5251382	ExpressionStatement	p = file	295:3:6561:6569	5251347	0	True				
ANR	5251383	AssignmentExpression	p = file		5251347	0		=			
ANR	5251384	Identifier	p		5251347	0					
ANR	5251385	Identifier	file		5251347	1					
ANR	5251386	IfStatement	if ( p && * p )		5251347	2					
ANR	5251387	Condition	p && * p	298:5:6584:6590	5251347	0	True				
ANR	5251388	AndExpression	p && * p		5251347	0		&&			
ANR	5251389	Identifier	p		5251347	0					
ANR	5251390	UnaryOperationExpression	* p		5251347	1					
ANR	5251391	UnaryOperator	*		5251347	0					
ANR	5251392	Identifier	p		5251347	1					
ANR	5251393	CompoundStatement		13:2:191:243	5251347	1					
ANR	5251394	IdentifierDeclStatement	char * filename = strdup ( p ) ;	299:2:6597:6624	5251347	0	True				
ANR	5251395	IdentifierDecl	* filename = strdup ( p )		5251347	0					
ANR	5251396	IdentifierDeclType	char *		5251347	0					
ANR	5251397	Identifier	filename		5251347	1					
ANR	5251398	AssignmentExpression	* filename = strdup ( p )		5251347	2		=			
ANR	5251399	Identifier	filename		5251347	0					
ANR	5251400	CallExpression	strdup ( p )		5251347	1					
ANR	5251401	Callee	strdup		5251347	0					
ANR	5251402	Identifier	strdup		5251347	0					
ANR	5251403	ArgumentList	p		5251347	1					
ANR	5251404	Argument	p		5251347	0					
ANR	5251405	Identifier	p		5251347	0					
ANR	5251406	ExpressionStatement	r_str_trim ( filename )	300:2:6628:6649	5251347	1	True				
ANR	5251407	CallExpression	r_str_trim ( filename )		5251347	0					
ANR	5251408	Callee	r_str_trim		5251347	0					
ANR	5251409	Identifier	r_str_trim		5251347	0					
ANR	5251410	ArgumentList	filename		5251347	1					
ANR	5251411	Argument	filename		5251347	0					
ANR	5251412	Identifier	filename		5251347	0					
ANR	5251413	IdentifierDeclStatement	"char * data = r_file_slurp_lines ( filename , 1 , count ) ;"	301:2:6653:6705	5251347	2	True				
ANR	5251414	IdentifierDecl	"* data = r_file_slurp_lines ( filename , 1 , count )"		5251347	0					
ANR	5251415	IdentifierDeclType	char *		5251347	0					
ANR	5251416	Identifier	data		5251347	1					
ANR	5251417	AssignmentExpression	"* data = r_file_slurp_lines ( filename , 1 , count )"		5251347	2		=			
ANR	5251418	Identifier	data		5251347	0					
ANR	5251419	CallExpression	"r_file_slurp_lines ( filename , 1 , count )"		5251347	1					
ANR	5251420	Callee	r_file_slurp_lines		5251347	0					
ANR	5251421	Identifier	r_file_slurp_lines		5251347	0					
ANR	5251422	ArgumentList	filename		5251347	1					
ANR	5251423	Argument	filename		5251347	0					
ANR	5251424	Identifier	filename		5251347	0					
ANR	5251425	Argument	1		5251347	1					
ANR	5251426	PrimaryExpression	1		5251347	0					
ANR	5251427	Argument	count		5251347	2					
ANR	5251428	Identifier	count		5251347	0					
ANR	5251429	IfStatement	if ( ! data )		5251347	3					
ANR	5251430	Condition	! data	302:6:6713:6717	5251347	0	True				
ANR	5251431	UnaryOperationExpression	! data		5251347	0					
ANR	5251432	UnaryOperator	!		5251347	0					
ANR	5251433	Identifier	data		5251347	1					
ANR	5251434	CompoundStatement		14:13:258:258	5251347	1					
ANR	5251435	ExpressionStatement	"eprintf ( ""No such file or directory\\n"" )"	303:3:6725:6764	5251347	0	True				
ANR	5251436	CallExpression	"eprintf ( ""No such file or directory\\n"" )"		5251347	0					
ANR	5251437	Callee	eprintf		5251347	0					
ANR	5251438	Identifier	eprintf		5251347	0					
ANR	5251439	ArgumentList	"""No such file or directory\\n"""		5251347	1					
ANR	5251440	Argument	"""No such file or directory\\n"""		5251347	0					
ANR	5251441	PrimaryExpression	"""No such file or directory\\n"""		5251347	0					
ANR	5251442	ExpressionStatement	free ( filename )	305:2:6772:6787	5251347	4	True				
ANR	5251443	CallExpression	free ( filename )		5251347	0					
ANR	5251444	Callee	free		5251347	0					
ANR	5251445	Identifier	free		5251347	0					
ANR	5251446	ArgumentList	filename		5251347	1					
ANR	5251447	Argument	filename		5251347	0					
ANR	5251448	Identifier	filename		5251347	0					
ANR	5251449	ReturnStatement	return data ;	306:2:6791:6802	5251347	5	True				
ANR	5251450	Identifier	data		5251347	0					
ANR	5251451	ElseStatement	else		5251347	0					
ANR	5251452	CompoundStatement		19:8:350:350	5251347	0					
ANR	5251453	ExpressionStatement	"eprintf ( ""Usage: head 7 [file]\\n"" )"	308:2:6816:6850	5251347	0	True				
ANR	5251454	CallExpression	"eprintf ( ""Usage: head 7 [file]\\n"" )"		5251347	0					
ANR	5251455	Callee	eprintf		5251347	0					
ANR	5251456	Identifier	eprintf		5251347	0					
ANR	5251457	ArgumentList	"""Usage: head 7 [file]\\n"""		5251347	1					
ANR	5251458	Argument	"""Usage: head 7 [file]\\n"""		5251347	0					
ANR	5251459	PrimaryExpression	"""Usage: head 7 [file]\\n"""		5251347	0					
ANR	5251460	ReturnStatement	return NULL ;	310:1:6856:6867	5251347	3	True				
ANR	5251461	Identifier	NULL		5251347	0					
ANR	5251462	ReturnType	R_API char *		5251347	1					
ANR	5251463	Identifier	r_syscmd_head		5251347	2					
ANR	5251464	ParameterList	"const char * file , int count"		5251347	3					
ANR	5251465	Parameter	const char * file	289:26:6432:6447	5251347	0	True				
ANR	5251466	ParameterType	const char *		5251347	0					
ANR	5251467	Identifier	file		5251347	1					
ANR	5251468	Parameter	int count	289:44:6450:6458	5251347	1	True				
ANR	5251469	ParameterType	int		5251347	0					
ANR	5251470	Identifier	count		5251347	1					
ANR	5251471	CFGEntryNode	ENTRY		5251347		True				
ANR	5251472	CFGExitNode	EXIT		5251347		True				
ANR	5251473	Symbol	p		5251347						
ANR	5251474	Symbol	file		5251347						
ANR	5251475	Symbol	NULL		5251347						
ANR	5251476	Symbol	filename		5251347						
ANR	5251477	Symbol	data		5251347						
ANR	5251478	Symbol	count		5251347						
ANR	5251479	Symbol	strchr		5251347						
ANR	5251480	Symbol	* p		5251347						
ANR	5251481	Symbol	strdup		5251347						
ANR	5251482	Symbol	r_file_slurp_lines		5251347						
ANR	5251483	Function	r_syscmd_tail	313:0:6872:7343							
ANR	5251484	FunctionDef	"r_syscmd_tail (const char * file , int count)"		5251483	0					
ANR	5251485	CompoundStatement		313:55:6927:7343	5251483	0					
ANR	5251486	IdentifierDeclStatement	const char * p = NULL ;	314:1:6930:6950	5251483	0	True				
ANR	5251487	IdentifierDecl	* p = NULL		5251483	0					
ANR	5251488	IdentifierDeclType	const char *		5251483	0					
ANR	5251489	Identifier	p		5251483	1					
ANR	5251490	AssignmentExpression	* p = NULL		5251483	2		=			
ANR	5251491	Identifier	NULL		5251483	0					
ANR	5251492	Identifier	NULL		5251483	1					
ANR	5251493	IfStatement	if ( file )		5251483	1					
ANR	5251494	Condition	file	315:5:6957:6960	5251483	0	True				
ANR	5251495	Identifier	file		5251483	0					
ANR	5251496	CompoundStatement		3:11:35:35	5251483	1					
ANR	5251497	IfStatement	"if ( ( p = strchr ( file , ' ' ) ) )"		5251483	0					
ANR	5251498	Condition	"p = strchr ( file , ' ' )"	316:6:6971:6994	5251483	0	True				
ANR	5251499	AssignmentExpression	"p = strchr ( file , ' ' )"		5251483	0		=			
ANR	5251500	Identifier	p		5251483	0					
ANR	5251501	CallExpression	"strchr ( file , ' ' )"		5251483	1					
ANR	5251502	Callee	strchr		5251483	0					
ANR	5251503	Identifier	strchr		5251483	0					
ANR	5251504	ArgumentList	file		5251483	1					
ANR	5251505	Argument	file		5251483	0					
ANR	5251506	Identifier	file		5251483	0					
ANR	5251507	Argument	' '		5251483	1					
ANR	5251508	PrimaryExpression	' '		5251483	0					
ANR	5251509	CompoundStatement		4:32:69:69	5251483	1					
ANR	5251510	ExpressionStatement	p = p + 1	317:3:7002:7011	5251483	0	True				
ANR	5251511	AssignmentExpression	p = p + 1		5251483	0		=			
ANR	5251512	Identifier	p		5251483	0					
ANR	5251513	AdditiveExpression	p + 1		5251483	1		+			
ANR	5251514	Identifier	p		5251483	0					
ANR	5251515	PrimaryExpression	1		5251483	1					
ANR	5251516	ElseStatement	else		5251483	0					
ANR	5251517	CompoundStatement		6:9:94:94	5251483	0					
ANR	5251518	ExpressionStatement	p = file	319:3:7027:7035	5251483	0	True				
ANR	5251519	AssignmentExpression	p = file		5251483	0		=			
ANR	5251520	Identifier	p		5251483	0					
ANR	5251521	Identifier	file		5251483	1					
ANR	5251522	IfStatement	if ( p && * p )		5251483	2					
ANR	5251523	Condition	p && * p	322:5:7049:7055	5251483	0	True				
ANR	5251524	AndExpression	p && * p		5251483	0		&&			
ANR	5251525	Identifier	p		5251483	0					
ANR	5251526	UnaryOperationExpression	* p		5251483	1					
ANR	5251527	UnaryOperator	*		5251483	0					
ANR	5251528	Identifier	p		5251483	1					
ANR	5251529	CompoundStatement		13:2:190:251	5251483	1					
ANR	5251530	IdentifierDeclStatement	char * filename = strdup ( p ) ;	323:2:7062:7089	5251483	0	True				
ANR	5251531	IdentifierDecl	* filename = strdup ( p )		5251483	0					
ANR	5251532	IdentifierDeclType	char *		5251483	0					
ANR	5251533	Identifier	filename		5251483	1					
ANR	5251534	AssignmentExpression	* filename = strdup ( p )		5251483	2		=			
ANR	5251535	Identifier	filename		5251483	0					
ANR	5251536	CallExpression	strdup ( p )		5251483	1					
ANR	5251537	Callee	strdup		5251483	0					
ANR	5251538	Identifier	strdup		5251483	0					
ANR	5251539	ArgumentList	p		5251483	1					
ANR	5251540	Argument	p		5251483	0					
ANR	5251541	Identifier	p		5251483	0					
ANR	5251542	ExpressionStatement	r_str_trim ( filename )	324:2:7093:7114	5251483	1	True				
ANR	5251543	CallExpression	r_str_trim ( filename )		5251483	0					
ANR	5251544	Callee	r_str_trim		5251483	0					
ANR	5251545	Identifier	r_str_trim		5251483	0					
ANR	5251546	ArgumentList	filename		5251483	1					
ANR	5251547	Argument	filename		5251483	0					
ANR	5251548	Identifier	filename		5251483	0					
ANR	5251549	IdentifierDeclStatement	"char * data = r_file_slurp_lines_from_bottom ( filename , count ) ;"	325:2:7118:7179	5251483	2	True				
ANR	5251550	IdentifierDecl	"* data = r_file_slurp_lines_from_bottom ( filename , count )"		5251483	0					
ANR	5251551	IdentifierDeclType	char *		5251483	0					
ANR	5251552	Identifier	data		5251483	1					
ANR	5251553	AssignmentExpression	"* data = r_file_slurp_lines_from_bottom ( filename , count )"		5251483	2		=			
ANR	5251554	Identifier	data		5251483	0					
ANR	5251555	CallExpression	"r_file_slurp_lines_from_bottom ( filename , count )"		5251483	1					
ANR	5251556	Callee	r_file_slurp_lines_from_bottom		5251483	0					
ANR	5251557	Identifier	r_file_slurp_lines_from_bottom		5251483	0					
ANR	5251558	ArgumentList	filename		5251483	1					
ANR	5251559	Argument	filename		5251483	0					
ANR	5251560	Identifier	filename		5251483	0					
ANR	5251561	Argument	count		5251483	1					
ANR	5251562	Identifier	count		5251483	0					
ANR	5251563	IfStatement	if ( ! data )		5251483	3					
ANR	5251564	Condition	! data	326:6:7187:7191	5251483	0	True				
ANR	5251565	UnaryOperationExpression	! data		5251483	0					
ANR	5251566	UnaryOperator	!		5251483	0					
ANR	5251567	Identifier	data		5251483	1					
ANR	5251568	CompoundStatement		14:13:266:266	5251483	1					
ANR	5251569	ExpressionStatement	"eprintf ( ""No such file or directory\\n"" )"	327:3:7199:7238	5251483	0	True				
ANR	5251570	CallExpression	"eprintf ( ""No such file or directory\\n"" )"		5251483	0					
ANR	5251571	Callee	eprintf		5251483	0					
ANR	5251572	Identifier	eprintf		5251483	0					
ANR	5251573	ArgumentList	"""No such file or directory\\n"""		5251483	1					
ANR	5251574	Argument	"""No such file or directory\\n"""		5251483	0					
ANR	5251575	PrimaryExpression	"""No such file or directory\\n"""		5251483	0					
ANR	5251576	ExpressionStatement	free ( filename )	329:2:7246:7261	5251483	4	True				
ANR	5251577	CallExpression	free ( filename )		5251483	0					
ANR	5251578	Callee	free		5251483	0					
ANR	5251579	Identifier	free		5251483	0					
ANR	5251580	ArgumentList	filename		5251483	1					
ANR	5251581	Argument	filename		5251483	0					
ANR	5251582	Identifier	filename		5251483	0					
ANR	5251583	ReturnStatement	return data ;	330:2:7265:7276	5251483	5	True				
ANR	5251584	Identifier	data		5251483	0					
ANR	5251585	ElseStatement	else		5251483	0					
ANR	5251586	CompoundStatement		19:8:358:358	5251483	0					
ANR	5251587	ExpressionStatement	"eprintf ( ""Usage: tail 7 [file]\\n"" )"	332:2:7290:7324	5251483	0	True				
ANR	5251588	CallExpression	"eprintf ( ""Usage: tail 7 [file]\\n"" )"		5251483	0					
ANR	5251589	Callee	eprintf		5251483	0					
ANR	5251590	Identifier	eprintf		5251483	0					
ANR	5251591	ArgumentList	"""Usage: tail 7 [file]\\n"""		5251483	1					
ANR	5251592	Argument	"""Usage: tail 7 [file]\\n"""		5251483	0					
ANR	5251593	PrimaryExpression	"""Usage: tail 7 [file]\\n"""		5251483	0					
ANR	5251594	ReturnStatement	return NULL ;	334:1:7330:7341	5251483	3	True				
ANR	5251595	Identifier	NULL		5251483	0					
ANR	5251596	ReturnType	R_API char *		5251483	1					
ANR	5251597	Identifier	r_syscmd_tail		5251483	2					
ANR	5251598	ParameterList	"const char * file , int count"		5251483	3					
ANR	5251599	Parameter	const char * file	313:26:6898:6913	5251483	0	True				
ANR	5251600	ParameterType	const char *		5251483	0					
ANR	5251601	Identifier	file		5251483	1					
ANR	5251602	Parameter	int count	313:44:6916:6924	5251483	1	True				
ANR	5251603	ParameterType	int		5251483	0					
ANR	5251604	Identifier	count		5251483	1					
ANR	5251605	CFGEntryNode	ENTRY		5251483		True				
ANR	5251606	CFGExitNode	EXIT		5251483		True				
ANR	5251607	Symbol	p		5251483						
ANR	5251608	Symbol	file		5251483						
ANR	5251609	Symbol	NULL		5251483						
ANR	5251610	Symbol	filename		5251483						
ANR	5251611	Symbol	data		5251483						
ANR	5251612	Symbol	count		5251483						
ANR	5251613	Symbol	strchr		5251483						
ANR	5251614	Symbol	* p		5251483						
ANR	5251615	Symbol	strdup		5251483						
ANR	5251616	Symbol	r_file_slurp_lines_from_bottom		5251483						
ANR	5251617	Function	r_syscmd_uniq	337:0:7346:8013							
ANR	5251618	FunctionDef	r_syscmd_uniq (const char * file)		5251617	0					
ANR	5251619	CompoundStatement		337:44:7390:8013	5251617	0					
ANR	5251620	IdentifierDeclStatement	int sz ;	338:1:7393:7399	5251617	0	True				
ANR	5251621	IdentifierDecl	sz		5251617	0					
ANR	5251622	IdentifierDeclType	int		5251617	0					
ANR	5251623	Identifier	sz		5251617	1					
ANR	5251624	IdentifierDeclStatement	const char * p = NULL ;	339:1:7402:7422	5251617	1	True				
ANR	5251625	IdentifierDecl	* p = NULL		5251617	0					
ANR	5251626	IdentifierDeclType	const char *		5251617	0					
ANR	5251627	Identifier	p		5251617	1					
ANR	5251628	AssignmentExpression	* p = NULL		5251617	2		=			
ANR	5251629	Identifier	NULL		5251617	0					
ANR	5251630	Identifier	NULL		5251617	1					
ANR	5251631	IdentifierDeclStatement	RList * list = NULL ;	340:1:7425:7443	5251617	2	True				
ANR	5251632	IdentifierDecl	* list = NULL		5251617	0					
ANR	5251633	IdentifierDeclType	RList *		5251617	0					
ANR	5251634	Identifier	list		5251617	1					
ANR	5251635	AssignmentExpression	* list = NULL		5251617	2		=			
ANR	5251636	Identifier	NULL		5251617	0					
ANR	5251637	Identifier	NULL		5251617	1					
ANR	5251638	IfStatement	if ( file )		5251617	3					
ANR	5251639	Condition	file	341:5:7450:7453	5251617	0	True				
ANR	5251640	Identifier	file		5251617	0					
ANR	5251641	CompoundStatement		5:11:65:65	5251617	1					
ANR	5251642	IfStatement	"if ( ( p = strchr ( file , ' ' ) ) )"		5251617	0					
ANR	5251643	Condition	"p = strchr ( file , ' ' )"	342:6:7464:7487	5251617	0	True				
ANR	5251644	AssignmentExpression	"p = strchr ( file , ' ' )"		5251617	0		=			
ANR	5251645	Identifier	p		5251617	0					
ANR	5251646	CallExpression	"strchr ( file , ' ' )"		5251617	1					
ANR	5251647	Callee	strchr		5251617	0					
ANR	5251648	Identifier	strchr		5251617	0					
ANR	5251649	ArgumentList	file		5251617	1					
ANR	5251650	Argument	file		5251617	0					
ANR	5251651	Identifier	file		5251617	0					
ANR	5251652	Argument	' '		5251617	1					
ANR	5251653	PrimaryExpression	' '		5251617	0					
ANR	5251654	CompoundStatement		6:32:99:99	5251617	1					
ANR	5251655	ExpressionStatement	p = p + 1	343:3:7495:7504	5251617	0	True				
ANR	5251656	AssignmentExpression	p = p + 1		5251617	0		=			
ANR	5251657	Identifier	p		5251617	0					
ANR	5251658	AdditiveExpression	p + 1		5251617	1		+			
ANR	5251659	Identifier	p		5251617	0					
ANR	5251660	PrimaryExpression	1		5251617	1					
ANR	5251661	ElseStatement	else		5251617	0					
ANR	5251662	CompoundStatement		8:9:124:124	5251617	0					
ANR	5251663	ExpressionStatement	p = file	345:3:7520:7528	5251617	0	True				
ANR	5251664	AssignmentExpression	p = file		5251617	0		=			
ANR	5251665	Identifier	p		5251617	0					
ANR	5251666	Identifier	file		5251617	1					
ANR	5251667	IfStatement	if ( p && * p )		5251617	4					
ANR	5251668	Condition	p && * p	348:5:7542:7548	5251617	0	True				
ANR	5251669	AndExpression	p && * p		5251617	0		&&			
ANR	5251670	Identifier	p		5251617	0					
ANR	5251671	UnaryOperationExpression	* p		5251617	1					
ANR	5251672	UnaryOperator	*		5251617	0					
ANR	5251673	Identifier	p		5251617	1					
ANR	5251674	CompoundStatement		15:2:220:261	5251617	1					
ANR	5251675	IdentifierDeclStatement	char * filename = strdup ( p ) ;	349:2:7555:7582	5251617	0	True				
ANR	5251676	IdentifierDecl	* filename = strdup ( p )		5251617	0					
ANR	5251677	IdentifierDeclType	char *		5251617	0					
ANR	5251678	Identifier	filename		5251617	1					
ANR	5251679	AssignmentExpression	* filename = strdup ( p )		5251617	2		=			
ANR	5251680	Identifier	filename		5251617	0					
ANR	5251681	CallExpression	strdup ( p )		5251617	1					
ANR	5251682	Callee	strdup		5251617	0					
ANR	5251683	Identifier	strdup		5251617	0					
ANR	5251684	ArgumentList	p		5251617	1					
ANR	5251685	Argument	p		5251617	0					
ANR	5251686	Identifier	p		5251617	0					
ANR	5251687	ExpressionStatement	r_str_trim ( filename )	350:2:7586:7607	5251617	1	True				
ANR	5251688	CallExpression	r_str_trim ( filename )		5251617	0					
ANR	5251689	Callee	r_str_trim		5251617	0					
ANR	5251690	Identifier	r_str_trim		5251617	0					
ANR	5251691	ArgumentList	filename		5251617	1					
ANR	5251692	Argument	filename		5251617	0					
ANR	5251693	Identifier	filename		5251617	0					
ANR	5251694	IdentifierDeclStatement	"char * data = r_file_slurp ( filename , & sz ) ;"	351:2:7611:7652	5251617	2	True				
ANR	5251695	IdentifierDecl	"* data = r_file_slurp ( filename , & sz )"		5251617	0					
ANR	5251696	IdentifierDeclType	char *		5251617	0					
ANR	5251697	Identifier	data		5251617	1					
ANR	5251698	AssignmentExpression	"* data = r_file_slurp ( filename , & sz )"		5251617	2		=			
ANR	5251699	Identifier	data		5251617	0					
ANR	5251700	CallExpression	"r_file_slurp ( filename , & sz )"		5251617	1					
ANR	5251701	Callee	r_file_slurp		5251617	0					
ANR	5251702	Identifier	r_file_slurp		5251617	0					
ANR	5251703	ArgumentList	filename		5251617	1					
ANR	5251704	Argument	filename		5251617	0					
ANR	5251705	Identifier	filename		5251617	0					
ANR	5251706	Argument	& sz		5251617	1					
ANR	5251707	UnaryOperationExpression	& sz		5251617	0					
ANR	5251708	UnaryOperator	&		5251617	0					
ANR	5251709	Identifier	sz		5251617	1					
ANR	5251710	IfStatement	if ( ! data )		5251617	3					
ANR	5251711	Condition	! data	352:6:7660:7664	5251617	0	True				
ANR	5251712	UnaryOperationExpression	! data		5251617	0					
ANR	5251713	UnaryOperator	!		5251617	0					
ANR	5251714	Identifier	data		5251617	1					
ANR	5251715	CompoundStatement		16:13:276:276	5251617	1					
ANR	5251716	ExpressionStatement	"eprintf ( ""No such file or directory\\n"" )"	353:3:7672:7711	5251617	0	True				
ANR	5251717	CallExpression	"eprintf ( ""No such file or directory\\n"" )"		5251617	0					
ANR	5251718	Callee	eprintf		5251617	0					
ANR	5251719	Identifier	eprintf		5251617	0					
ANR	5251720	ArgumentList	"""No such file or directory\\n"""		5251617	1					
ANR	5251721	Argument	"""No such file or directory\\n"""		5251617	0					
ANR	5251722	PrimaryExpression	"""No such file or directory\\n"""		5251617	0					
ANR	5251723	ElseStatement	else		5251617	0					
ANR	5251724	CompoundStatement		20:3:380:425	5251617	0					
ANR	5251725	ExpressionStatement	"list = r_str_split_list ( data , ""\\n"" , 0 )"	355:3:7727:7766	5251617	0	True				
ANR	5251726	AssignmentExpression	"list = r_str_split_list ( data , ""\\n"" , 0 )"		5251617	0		=			
ANR	5251727	Identifier	list		5251617	0					
ANR	5251728	CallExpression	"r_str_split_list ( data , ""\\n"" , 0 )"		5251617	1					
ANR	5251729	Callee	r_str_split_list		5251617	0					
ANR	5251730	Identifier	r_str_split_list		5251617	0					
ANR	5251731	ArgumentList	data		5251617	1					
ANR	5251732	Argument	data		5251617	0					
ANR	5251733	Identifier	data		5251617	0					
ANR	5251734	Argument	"""\\n"""		5251617	1					
ANR	5251735	PrimaryExpression	"""\\n"""		5251617	0					
ANR	5251736	Argument	0		5251617	2					
ANR	5251737	PrimaryExpression	0		5251617	0					
ANR	5251738	IdentifierDeclStatement	"RList * uniq_list = r_list_uniq ( list , cmpstr ) ;"	356:3:7771:7816	5251617	1	True				
ANR	5251739	IdentifierDecl	"* uniq_list = r_list_uniq ( list , cmpstr )"		5251617	0					
ANR	5251740	IdentifierDeclType	RList *		5251617	0					
ANR	5251741	Identifier	uniq_list		5251617	1					
ANR	5251742	AssignmentExpression	"* uniq_list = r_list_uniq ( list , cmpstr )"		5251617	2		=			
ANR	5251743	Identifier	uniq_list		5251617	0					
ANR	5251744	CallExpression	"r_list_uniq ( list , cmpstr )"		5251617	1					
ANR	5251745	Callee	r_list_uniq		5251617	0					
ANR	5251746	Identifier	r_list_uniq		5251617	0					
ANR	5251747	ArgumentList	list		5251617	1					
ANR	5251748	Argument	list		5251617	0					
ANR	5251749	Identifier	list		5251617	0					
ANR	5251750	Argument	cmpstr		5251617	1					
ANR	5251751	Identifier	cmpstr		5251617	0					
ANR	5251752	ExpressionStatement	"data = r_list_to_str ( uniq_list , '\\n' )"	357:3:7821:7859	5251617	2	True				
ANR	5251753	AssignmentExpression	"data = r_list_to_str ( uniq_list , '\\n' )"		5251617	0		=			
ANR	5251754	Identifier	data		5251617	0					
ANR	5251755	CallExpression	"r_list_to_str ( uniq_list , '\\n' )"		5251617	1					
ANR	5251756	Callee	r_list_to_str		5251617	0					
ANR	5251757	Identifier	r_list_to_str		5251617	0					
ANR	5251758	ArgumentList	uniq_list		5251617	1					
ANR	5251759	Argument	uniq_list		5251617	0					
ANR	5251760	Identifier	uniq_list		5251617	0					
ANR	5251761	Argument	'\\n'		5251617	1					
ANR	5251762	PrimaryExpression	'\\n'		5251617	0					
ANR	5251763	ExpressionStatement	r_list_free ( uniq_list )	358:3:7864:7887	5251617	3	True				
ANR	5251764	CallExpression	r_list_free ( uniq_list )		5251617	0					
ANR	5251765	Callee	r_list_free		5251617	0					
ANR	5251766	Identifier	r_list_free		5251617	0					
ANR	5251767	ArgumentList	uniq_list		5251617	1					
ANR	5251768	Argument	uniq_list		5251617	0					
ANR	5251769	Identifier	uniq_list		5251617	0					
ANR	5251770	ExpressionStatement	r_list_free ( list )	359:3:7892:7910	5251617	4	True				
ANR	5251771	CallExpression	r_list_free ( list )		5251617	0					
ANR	5251772	Callee	r_list_free		5251617	0					
ANR	5251773	Identifier	r_list_free		5251617	0					
ANR	5251774	ArgumentList	list		5251617	1					
ANR	5251775	Argument	list		5251617	0					
ANR	5251776	Identifier	list		5251617	0					
ANR	5251777	ExpressionStatement	free ( filename )	361:2:7918:7933	5251617	4	True				
ANR	5251778	CallExpression	free ( filename )		5251617	0					
ANR	5251779	Callee	free		5251617	0					
ANR	5251780	Identifier	free		5251617	0					
ANR	5251781	ArgumentList	filename		5251617	1					
ANR	5251782	Argument	filename		5251617	0					
ANR	5251783	Identifier	filename		5251617	0					
ANR	5251784	ReturnStatement	return data ;	362:2:7937:7948	5251617	5	True				
ANR	5251785	Identifier	data		5251617	0					
ANR	5251786	ElseStatement	else		5251617	0					
ANR	5251787	CompoundStatement		27:8:567:567	5251617	0					
ANR	5251788	ExpressionStatement	"eprintf ( ""Usage: uniq [file]\\n"" )"	364:2:7962:7994	5251617	0	True				
ANR	5251789	CallExpression	"eprintf ( ""Usage: uniq [file]\\n"" )"		5251617	0					
ANR	5251790	Callee	eprintf		5251617	0					
ANR	5251791	Identifier	eprintf		5251617	0					
ANR	5251792	ArgumentList	"""Usage: uniq [file]\\n"""		5251617	1					
ANR	5251793	Argument	"""Usage: uniq [file]\\n"""		5251617	0					
ANR	5251794	PrimaryExpression	"""Usage: uniq [file]\\n"""		5251617	0					
ANR	5251795	ReturnStatement	return NULL ;	366:1:8000:8011	5251617	5	True				
ANR	5251796	Identifier	NULL		5251617	0					
ANR	5251797	ReturnType	R_API char *		5251617	1					
ANR	5251798	Identifier	r_syscmd_uniq		5251617	2					
ANR	5251799	ParameterList	const char * file		5251617	3					
ANR	5251800	Parameter	const char * file	337:26:7372:7387	5251617	0	True				
ANR	5251801	ParameterType	const char *		5251617	0					
ANR	5251802	Identifier	file		5251617	1					
ANR	5251803	CFGEntryNode	ENTRY		5251617		True				
ANR	5251804	CFGExitNode	EXIT		5251617		True				
ANR	5251805	Symbol	r_file_slurp		5251617						
ANR	5251806	Symbol	NULL		5251617						
ANR	5251807	Symbol	data		5251617						
ANR	5251808	Symbol	sz		5251617						
ANR	5251809	Symbol	r_str_split_list		5251617						
ANR	5251810	Symbol	strchr		5251617						
ANR	5251811	Symbol	uniq_list		5251617						
ANR	5251812	Symbol	list		5251617						
ANR	5251813	Symbol	cmpstr		5251617						
ANR	5251814	Symbol	p		5251617						
ANR	5251815	Symbol	& sz		5251617						
ANR	5251816	Symbol	r_list_to_str		5251617						
ANR	5251817	Symbol	file		5251617						
ANR	5251818	Symbol	filename		5251617						
ANR	5251819	Symbol	r_list_uniq		5251617						
ANR	5251820	Symbol	* p		5251617						
ANR	5251821	Symbol	strdup		5251617						
ANR	5251822	Function	r_syscmd_join	369:0:8016:9697							
ANR	5251823	FunctionDef	"r_syscmd_join (const char * file1 , const char * file2)"		5251822	0					
ANR	5251824	CompoundStatement		369:64:8080:9697	5251822	0					
ANR	5251825	IdentifierDeclStatement	"int sz1 , sz2 ;"	370:1:8083:8095	5251822	0	True				
ANR	5251826	IdentifierDecl	sz1		5251822	0					
ANR	5251827	IdentifierDeclType	int		5251822	0					
ANR	5251828	Identifier	sz1		5251822	1					
ANR	5251829	IdentifierDecl	sz2		5251822	1					
ANR	5251830	IdentifierDeclType	int		5251822	0					
ANR	5251831	Identifier	sz2		5251822	1					
ANR	5251832	IdentifierDeclStatement	"const char * p1 = NULL , * p2 = NULL ;"	371:1:8098:8131	5251822	1	True				
ANR	5251833	IdentifierDecl	* p1 = NULL		5251822	0					
ANR	5251834	IdentifierDeclType	const char *		5251822	0					
ANR	5251835	Identifier	p1		5251822	1					
ANR	5251836	AssignmentExpression	* p1 = NULL		5251822	2		=			
ANR	5251837	Identifier	NULL		5251822	0					
ANR	5251838	Identifier	NULL		5251822	1					
ANR	5251839	IdentifierDecl	* p2 = NULL		5251822	1					
ANR	5251840	IdentifierDeclType	const char *		5251822	0					
ANR	5251841	Identifier	p2		5251822	1					
ANR	5251842	AssignmentExpression	* p2 = NULL		5251822	2		=			
ANR	5251843	Identifier	NULL		5251822	0					
ANR	5251844	Identifier	NULL		5251822	1					
ANR	5251845	IdentifierDeclStatement	"RList * list1 , * list2 , * list = r_list_newf ( NULL ) ;"	372:1:8134:8182	5251822	2	True				
ANR	5251846	IdentifierDecl	* list1		5251822	0					
ANR	5251847	IdentifierDeclType	RList *		5251822	0					
ANR	5251848	Identifier	list1		5251822	1					
ANR	5251849	IdentifierDecl	* list2		5251822	1					
ANR	5251850	IdentifierDeclType	RList *		5251822	0					
ANR	5251851	Identifier	list2		5251822	1					
ANR	5251852	IdentifierDecl	* list = r_list_newf ( NULL )		5251822	2					
ANR	5251853	IdentifierDeclType	RList *		5251822	0					
ANR	5251854	Identifier	list		5251822	1					
ANR	5251855	AssignmentExpression	* list = r_list_newf ( NULL )		5251822	2		=			
ANR	5251856	Identifier	list		5251822	0					
ANR	5251857	CallExpression	r_list_newf ( NULL )		5251822	1					
ANR	5251858	Callee	r_list_newf		5251822	0					
ANR	5251859	Identifier	r_list_newf		5251822	0					
ANR	5251860	ArgumentList	NULL		5251822	1					
ANR	5251861	Argument	NULL		5251822	0					
ANR	5251862	Identifier	NULL		5251822	0					
ANR	5251863	IfStatement	if ( ! list )		5251822	3					
ANR	5251864	Condition	! list	373:5:8189:8193	5251822	0	True				
ANR	5251865	UnaryOperationExpression	! list		5251822	0					
ANR	5251866	UnaryOperator	!		5251822	0					
ANR	5251867	Identifier	list		5251822	1					
ANR	5251868	CompoundStatement		5:12:115:115	5251822	1					
ANR	5251869	ReturnStatement	return NULL ;	374:2:8200:8211	5251822	0	True				
ANR	5251870	Identifier	NULL		5251822	0					
ANR	5251871	IfStatement	if ( file1 )		5251822	4					
ANR	5251872	Condition	file1	376:5:8221:8225	5251822	0	True				
ANR	5251873	Identifier	file1		5251822	0					
ANR	5251874	CompoundStatement		8:12:147:147	5251822	1					
ANR	5251875	IfStatement	"if ( ( p1 = strchr ( file1 , ' ' ) ) )"		5251822	0					
ANR	5251876	Condition	"p1 = strchr ( file1 , ' ' )"	377:6:8236:8261	5251822	0	True				
ANR	5251877	AssignmentExpression	"p1 = strchr ( file1 , ' ' )"		5251822	0		=			
ANR	5251878	Identifier	p1		5251822	0					
ANR	5251879	CallExpression	"strchr ( file1 , ' ' )"		5251822	1					
ANR	5251880	Callee	strchr		5251822	0					
ANR	5251881	Identifier	strchr		5251822	0					
ANR	5251882	ArgumentList	file1		5251822	1					
ANR	5251883	Argument	file1		5251822	0					
ANR	5251884	Identifier	file1		5251822	0					
ANR	5251885	Argument	' '		5251822	1					
ANR	5251886	PrimaryExpression	' '		5251822	0					
ANR	5251887	CompoundStatement		9:34:183:183	5251822	1					
ANR	5251888	ExpressionStatement	p1 = p1 + 1	378:3:8269:8280	5251822	0	True				
ANR	5251889	AssignmentExpression	p1 = p1 + 1		5251822	0		=			
ANR	5251890	Identifier	p1		5251822	0					
ANR	5251891	AdditiveExpression	p1 + 1		5251822	1		+			
ANR	5251892	Identifier	p1		5251822	0					
ANR	5251893	PrimaryExpression	1		5251822	1					
ANR	5251894	ElseStatement	else		5251822	0					
ANR	5251895	CompoundStatement		11:9:210:210	5251822	0					
ANR	5251896	ExpressionStatement	p1 = file1	380:3:8296:8306	5251822	0	True				
ANR	5251897	AssignmentExpression	p1 = file1		5251822	0		=			
ANR	5251898	Identifier	p1		5251822	0					
ANR	5251899	Identifier	file1		5251822	1					
ANR	5251900	IfStatement	if ( file2 )		5251822	5					
ANR	5251901	Condition	file2	383:5:8320:8324	5251822	0	True				
ANR	5251902	Identifier	file2		5251822	0					
ANR	5251903	CompoundStatement		15:12:246:246	5251822	1					
ANR	5251904	IfStatement	"if ( ( p2 = strchr ( file2 , ' ' ) ) )"		5251822	0					
ANR	5251905	Condition	"p2 = strchr ( file2 , ' ' )"	384:6:8335:8360	5251822	0	True				
ANR	5251906	AssignmentExpression	"p2 = strchr ( file2 , ' ' )"		5251822	0		=			
ANR	5251907	Identifier	p2		5251822	0					
ANR	5251908	CallExpression	"strchr ( file2 , ' ' )"		5251822	1					
ANR	5251909	Callee	strchr		5251822	0					
ANR	5251910	Identifier	strchr		5251822	0					
ANR	5251911	ArgumentList	file2		5251822	1					
ANR	5251912	Argument	file2		5251822	0					
ANR	5251913	Identifier	file2		5251822	0					
ANR	5251914	Argument	' '		5251822	1					
ANR	5251915	PrimaryExpression	' '		5251822	0					
ANR	5251916	CompoundStatement		16:34:282:282	5251822	1					
ANR	5251917	ExpressionStatement	p2 = p2 + 1	385:3:8368:8379	5251822	0	True				
ANR	5251918	AssignmentExpression	p2 = p2 + 1		5251822	0		=			
ANR	5251919	Identifier	p2		5251822	0					
ANR	5251920	AdditiveExpression	p2 + 1		5251822	1		+			
ANR	5251921	Identifier	p2		5251822	0					
ANR	5251922	PrimaryExpression	1		5251822	1					
ANR	5251923	ElseStatement	else		5251822	0					
ANR	5251924	CompoundStatement		18:9:309:309	5251822	0					
ANR	5251925	ExpressionStatement	p2 = file2	387:3:8395:8405	5251822	0	True				
ANR	5251926	AssignmentExpression	p2 = file2		5251822	0		=			
ANR	5251927	Identifier	p2		5251822	0					
ANR	5251928	Identifier	file2		5251822	1					
ANR	5251929	IfStatement	if ( p1 && * p1 && p2 && * p2 )		5251822	6					
ANR	5251930	Condition	p1 && * p1 && p2 && * p2	390:5:8419:8440	5251822	0	True				
ANR	5251931	AndExpression	p1 && * p1 && p2 && * p2		5251822	0		&&			
ANR	5251932	Identifier	p1		5251822	0					
ANR	5251933	AndExpression	* p1 && p2 && * p2		5251822	1		&&			
ANR	5251934	UnaryOperationExpression	* p1		5251822	0					
ANR	5251935	UnaryOperator	*		5251822	0					
ANR	5251936	Identifier	p1		5251822	1					
ANR	5251937	AndExpression	p2 && * p2		5251822	1		&&			
ANR	5251938	Identifier	p2		5251822	0					
ANR	5251939	UnaryOperationExpression	* p2		5251822	1					
ANR	5251940	UnaryOperator	*		5251822	0					
ANR	5251941	Identifier	p2		5251822	1					
ANR	5251942	CompoundStatement		30:2:602:626	5251822	1					
ANR	5251943	IdentifierDeclStatement	char * filename1 = strdup ( p1 ) ;	391:2:8448:8477	5251822	0	True				
ANR	5251944	IdentifierDecl	* filename1 = strdup ( p1 )		5251822	0					
ANR	5251945	IdentifierDeclType	char *		5251822	0					
ANR	5251946	Identifier	filename1		5251822	1					
ANR	5251947	AssignmentExpression	* filename1 = strdup ( p1 )		5251822	2		=			
ANR	5251948	Identifier	filename1		5251822	0					
ANR	5251949	CallExpression	strdup ( p1 )		5251822	1					
ANR	5251950	Callee	strdup		5251822	0					
ANR	5251951	Identifier	strdup		5251822	0					
ANR	5251952	ArgumentList	p1		5251822	1					
ANR	5251953	Argument	p1		5251822	0					
ANR	5251954	Identifier	p1		5251822	0					
ANR	5251955	IdentifierDeclStatement	char * filename2 = strdup ( p2 ) ;	392:2:8481:8510	5251822	1	True				
ANR	5251956	IdentifierDecl	* filename2 = strdup ( p2 )		5251822	0					
ANR	5251957	IdentifierDeclType	char *		5251822	0					
ANR	5251958	Identifier	filename2		5251822	1					
ANR	5251959	AssignmentExpression	* filename2 = strdup ( p2 )		5251822	2		=			
ANR	5251960	Identifier	filename2		5251822	0					
ANR	5251961	CallExpression	strdup ( p2 )		5251822	1					
ANR	5251962	Callee	strdup		5251822	0					
ANR	5251963	Identifier	strdup		5251822	0					
ANR	5251964	ArgumentList	p2		5251822	1					
ANR	5251965	Argument	p2		5251822	0					
ANR	5251966	Identifier	p2		5251822	0					
ANR	5251967	ExpressionStatement	r_str_trim ( filename1 )	393:2:8514:8536	5251822	2	True				
ANR	5251968	CallExpression	r_str_trim ( filename1 )		5251822	0					
ANR	5251969	Callee	r_str_trim		5251822	0					
ANR	5251970	Identifier	r_str_trim		5251822	0					
ANR	5251971	ArgumentList	filename1		5251822	1					
ANR	5251972	Argument	filename1		5251822	0					
ANR	5251973	Identifier	filename1		5251822	0					
ANR	5251974	ExpressionStatement	r_str_trim ( filename2 )	394:2:8540:8562	5251822	3	True				
ANR	5251975	CallExpression	r_str_trim ( filename2 )		5251822	0					
ANR	5251976	Callee	r_str_trim		5251822	0					
ANR	5251977	Identifier	r_str_trim		5251822	0					
ANR	5251978	ArgumentList	filename2		5251822	1					
ANR	5251979	Argument	filename2		5251822	0					
ANR	5251980	Identifier	filename2		5251822	0					
ANR	5251981	IdentifierDeclStatement	"char * data1 = r_file_slurp ( filename1 , & sz1 ) ;"	395:2:8566:8610	5251822	4	True				
ANR	5251982	IdentifierDecl	"* data1 = r_file_slurp ( filename1 , & sz1 )"		5251822	0					
ANR	5251983	IdentifierDeclType	char *		5251822	0					
ANR	5251984	Identifier	data1		5251822	1					
ANR	5251985	AssignmentExpression	"* data1 = r_file_slurp ( filename1 , & sz1 )"		5251822	2		=			
ANR	5251986	Identifier	data1		5251822	0					
ANR	5251987	CallExpression	"r_file_slurp ( filename1 , & sz1 )"		5251822	1					
ANR	5251988	Callee	r_file_slurp		5251822	0					
ANR	5251989	Identifier	r_file_slurp		5251822	0					
ANR	5251990	ArgumentList	filename1		5251822	1					
ANR	5251991	Argument	filename1		5251822	0					
ANR	5251992	Identifier	filename1		5251822	0					
ANR	5251993	Argument	& sz1		5251822	1					
ANR	5251994	UnaryOperationExpression	& sz1		5251822	0					
ANR	5251995	UnaryOperator	&		5251822	0					
ANR	5251996	Identifier	sz1		5251822	1					
ANR	5251997	IdentifierDeclStatement	"char * data2 = r_file_slurp ( filename2 , & sz2 ) ;"	396:2:8614:8658	5251822	5	True				
ANR	5251998	IdentifierDecl	"* data2 = r_file_slurp ( filename2 , & sz2 )"		5251822	0					
ANR	5251999	IdentifierDeclType	char *		5251822	0					
ANR	5252000	Identifier	data2		5251822	1					
ANR	5252001	AssignmentExpression	"* data2 = r_file_slurp ( filename2 , & sz2 )"		5251822	2		=			
ANR	5252002	Identifier	data2		5251822	0					
ANR	5252003	CallExpression	"r_file_slurp ( filename2 , & sz2 )"		5251822	1					
ANR	5252004	Callee	r_file_slurp		5251822	0					
ANR	5252005	Identifier	r_file_slurp		5251822	0					
ANR	5252006	ArgumentList	filename2		5251822	1					
ANR	5252007	Argument	filename2		5251822	0					
ANR	5252008	Identifier	filename2		5251822	0					
ANR	5252009	Argument	& sz2		5251822	1					
ANR	5252010	UnaryOperationExpression	& sz2		5251822	0					
ANR	5252011	UnaryOperator	&		5251822	0					
ANR	5252012	Identifier	sz2		5251822	1					
ANR	5252013	IdentifierDeclStatement	char * data = NULL ;	397:2:8662:8679	5251822	6	True				
ANR	5252014	IdentifierDecl	* data = NULL		5251822	0					
ANR	5252015	IdentifierDeclType	char *		5251822	0					
ANR	5252016	Identifier	data		5251822	1					
ANR	5252017	AssignmentExpression	* data = NULL		5251822	2		=			
ANR	5252018	Identifier	NULL		5251822	0					
ANR	5252019	Identifier	NULL		5251822	1					
ANR	5252020	IdentifierDeclStatement	"RListIter * iter1 , * iter2 ;"	398:2:8683:8707	5251822	7	True				
ANR	5252021	IdentifierDecl	* iter1		5251822	0					
ANR	5252022	IdentifierDeclType	RListIter *		5251822	0					
ANR	5252023	Identifier	iter1		5251822	1					
ANR	5252024	IdentifierDecl	* iter2		5251822	1					
ANR	5252025	IdentifierDeclType	RListIter *		5251822	0					
ANR	5252026	Identifier	iter2		5251822	1					
ANR	5252027	IfStatement	if ( ! data1 && ! data2 )		5251822	8					
ANR	5252028	Condition	! data1 && ! data2	399:6:8715:8730	5251822	0	True				
ANR	5252029	AndExpression	! data1 && ! data2		5251822	0		&&			
ANR	5252030	UnaryOperationExpression	! data1		5251822	0					
ANR	5252031	UnaryOperator	!		5251822	0					
ANR	5252032	Identifier	data1		5251822	1					
ANR	5252033	UnaryOperationExpression	! data2		5251822	1					
ANR	5252034	UnaryOperator	!		5251822	0					
ANR	5252035	Identifier	data2		5251822	1					
ANR	5252036	CompoundStatement		31:24:652:652	5251822	1					
ANR	5252037	ExpressionStatement	"eprintf ( ""No such files or directory\\n"" )"	400:3:8738:8778	5251822	0	True				
ANR	5252038	CallExpression	"eprintf ( ""No such files or directory\\n"" )"		5251822	0					
ANR	5252039	Callee	eprintf		5251822	0					
ANR	5252040	Identifier	eprintf		5251822	0					
ANR	5252041	ArgumentList	"""No such files or directory\\n"""		5251822	1					
ANR	5252042	Argument	"""No such files or directory\\n"""		5251822	0					
ANR	5252043	PrimaryExpression	"""No such files or directory\\n"""		5251822	0					
ANR	5252044	ElseStatement	else		5251822	0					
ANR	5252045	CompoundStatement		37:3:807:824	5251822	0					
ANR	5252046	ExpressionStatement	"list1 = r_str_split_list ( data1 , ""\\n"" , 0 )"	402:3:8794:8836	5251822	0	True				
ANR	5252047	AssignmentExpression	"list1 = r_str_split_list ( data1 , ""\\n"" , 0 )"		5251822	0		=			
ANR	5252048	Identifier	list1		5251822	0					
ANR	5252049	CallExpression	"r_str_split_list ( data1 , ""\\n"" , 0 )"		5251822	1					
ANR	5252050	Callee	r_str_split_list		5251822	0					
ANR	5252051	Identifier	r_str_split_list		5251822	0					
ANR	5252052	ArgumentList	data1		5251822	1					
ANR	5252053	Argument	data1		5251822	0					
ANR	5252054	Identifier	data1		5251822	0					
ANR	5252055	Argument	"""\\n"""		5251822	1					
ANR	5252056	PrimaryExpression	"""\\n"""		5251822	0					
ANR	5252057	Argument	0		5251822	2					
ANR	5252058	PrimaryExpression	0		5251822	0					
ANR	5252059	ExpressionStatement	"list2 = r_str_split_list ( data2 , ""\\n"" , 0 )"	403:3:8841:8882	5251822	1	True				
ANR	5252060	AssignmentExpression	"list2 = r_str_split_list ( data2 , ""\\n"" , 0 )"		5251822	0		=			
ANR	5252061	Identifier	list2		5251822	0					
ANR	5252062	CallExpression	"r_str_split_list ( data2 , ""\\n"" , 0 )"		5251822	1					
ANR	5252063	Callee	r_str_split_list		5251822	0					
ANR	5252064	Identifier	r_str_split_list		5251822	0					
ANR	5252065	ArgumentList	data2		5251822	1					
ANR	5252066	Argument	data2		5251822	0					
ANR	5252067	Identifier	data2		5251822	0					
ANR	5252068	Argument	"""\\n"""		5251822	1					
ANR	5252069	PrimaryExpression	"""\\n"""		5251822	0					
ANR	5252070	Argument	0		5251822	2					
ANR	5252071	PrimaryExpression	0		5251822	0					
ANR	5252072	IdentifierDeclStatement	"char * str1 , * str2 ;"	405:3:8888:8905	5251822	2	True				
ANR	5252073	IdentifierDecl	* str1		5251822	0					
ANR	5252074	IdentifierDeclType	char *		5251822	0					
ANR	5252075	Identifier	str1		5251822	1					
ANR	5252076	IdentifierDecl	* str2		5251822	1					
ANR	5252077	IdentifierDeclType	char *		5251822	0					
ANR	5252078	Identifier	str2		5251822	1					
ANR	5252079	Statement	r_list_foreach	406:3:8910:8923	5251822	3	True				
ANR	5252080	Statement	(	406:18:8925:8925	5251822	4	True				
ANR	5252081	Statement	list1	406:19:8926:8930	5251822	5	True				
ANR	5252082	Statement	","	406:24:8931:8931	5251822	6	True				
ANR	5252083	Statement	iter1	406:26:8933:8937	5251822	7	True				
ANR	5252084	Statement	","	406:31:8938:8938	5251822	8	True				
ANR	5252085	Statement	str1	406:33:8940:8943	5251822	9	True				
ANR	5252086	Statement	)	406:37:8944:8944	5251822	10	True				
ANR	5252087	CompoundStatement		40:4:930:961	5251822	11					
ANR	5252088	IdentifierDeclStatement	char * field = strdup ( str1 ) ;	407:4:8952:8979	5251822	0	True				
ANR	5252089	IdentifierDecl	* field = strdup ( str1 )		5251822	0					
ANR	5252090	IdentifierDeclType	char *		5251822	0					
ANR	5252091	Identifier	field		5251822	1					
ANR	5252092	AssignmentExpression	* field = strdup ( str1 )		5251822	2		=			
ANR	5252093	Identifier	field		5251822	0					
ANR	5252094	CallExpression	strdup ( str1 )		5251822	1					
ANR	5252095	Callee	strdup		5251822	0					
ANR	5252096	Identifier	strdup		5251822	0					
ANR	5252097	ArgumentList	str1		5251822	1					
ANR	5252098	Argument	str1		5251822	0					
ANR	5252099	Identifier	str1		5251822	0					
ANR	5252100	IdentifierDeclStatement	"char * end = strchr ( field , ' ' ) ;"	408:4:9011:9042	5251822	1	True				
ANR	5252101	IdentifierDecl	"* end = strchr ( field , ' ' )"		5251822	0					
ANR	5252102	IdentifierDeclType	char *		5251822	0					
ANR	5252103	Identifier	end		5251822	1					
ANR	5252104	AssignmentExpression	"* end = strchr ( field , ' ' )"		5251822	2		=			
ANR	5252105	Identifier	end		5251822	0					
ANR	5252106	CallExpression	"strchr ( field , ' ' )"		5251822	1					
ANR	5252107	Callee	strchr		5251822	0					
ANR	5252108	Identifier	strchr		5251822	0					
ANR	5252109	ArgumentList	field		5251822	1					
ANR	5252110	Argument	field		5251822	0					
ANR	5252111	Identifier	field		5251822	0					
ANR	5252112	Argument	' '		5251822	1					
ANR	5252113	PrimaryExpression	' '		5251822	0					
ANR	5252114	IfStatement	if ( end )		5251822	2					
ANR	5252115	Condition	end	409:8:9052:9054	5251822	0	True				
ANR	5252116	Identifier	end		5251822	0					
ANR	5252117	CompoundStatement		41:13:976:976	5251822	1					
ANR	5252118	ExpressionStatement	* end = '\\0'	410:5:9064:9075	5251822	0	True				
ANR	5252119	AssignmentExpression	* end = '\\0'		5251822	0		=			
ANR	5252120	UnaryOperationExpression	* end		5251822	0					
ANR	5252121	UnaryOperator	*		5251822	0					
ANR	5252122	Identifier	end		5251822	1					
ANR	5252123	PrimaryExpression	'\\0'		5251822	1					
ANR	5252124	ElseStatement	else		5251822	0					
ANR	5252125	CompoundStatement		43:11:1007:1007	5251822	0					
ANR	5252126	ContinueStatement	continue ;	412:5:9095:9103	5251822	0	True				
ANR	5252127	Statement	r_list_foreach	414:4:9115:9128	5251822	3	True				
ANR	5252128	Statement	(	414:19:9130:9130	5251822	4	True				
ANR	5252129	Statement	list2	414:20:9131:9135	5251822	5	True				
ANR	5252130	Statement	","	414:25:9136:9136	5251822	6	True				
ANR	5252131	Statement	iter2	414:27:9138:9142	5251822	7	True				
ANR	5252132	Statement	","	414:32:9143:9143	5251822	8	True				
ANR	5252133	Statement	str2	414:34:9145:9148	5251822	9	True				
ANR	5252134	Statement	)	414:38:9149:9149	5251822	10	True				
ANR	5252135	CompoundStatement		46:40:1070:1070	5251822	11					
ANR	5252136	IfStatement	"if ( r_str_startswith ( str2 , field ) )"		5251822	0					
ANR	5252137	Condition	"r_str_startswith ( str2 , field )"	415:9:9162:9191	5251822	0	True				
ANR	5252138	CallExpression	"r_str_startswith ( str2 , field )"		5251822	0					
ANR	5252139	Callee	r_str_startswith		5251822	0					
ANR	5252140	Identifier	r_str_startswith		5251822	0					
ANR	5252141	ArgumentList	str2		5251822	1					
ANR	5252142	Argument	str2		5251822	0					
ANR	5252143	Identifier	str2		5251822	0					
ANR	5252144	Argument	field		5251822	1					
ANR	5252145	Identifier	field		5251822	0					
ANR	5252146	CompoundStatement		50:6:1198:1231	5251822	1					
ANR	5252147	IdentifierDeclStatement	char * out = r_str_new ( field ) ;	416:6:9202:9231	5251822	0	True				
ANR	5252148	IdentifierDecl	* out = r_str_new ( field )		5251822	0					
ANR	5252149	IdentifierDeclType	char *		5251822	0					
ANR	5252150	Identifier	out		5251822	1					
ANR	5252151	AssignmentExpression	* out = r_str_new ( field )		5251822	2		=			
ANR	5252152	Identifier	out		5251822	0					
ANR	5252153	CallExpression	r_str_new ( field )		5251822	1					
ANR	5252154	Callee	r_str_new		5251822	0					
ANR	5252155	Identifier	r_str_new		5251822	0					
ANR	5252156	ArgumentList	field		5251822	1					
ANR	5252157	Argument	field		5251822	0					
ANR	5252158	Identifier	field		5251822	0					
ANR	5252159	IdentifierDeclStatement	"char * first = strchr ( str1 , ' ' ) ;"	417:6:9239:9271	5251822	1	True				
ANR	5252160	IdentifierDecl	"* first = strchr ( str1 , ' ' )"		5251822	0					
ANR	5252161	IdentifierDeclType	char *		5251822	0					
ANR	5252162	Identifier	first		5251822	1					
ANR	5252163	AssignmentExpression	"* first = strchr ( str1 , ' ' )"		5251822	2		=			
ANR	5252164	Identifier	first		5251822	0					
ANR	5252165	CallExpression	"strchr ( str1 , ' ' )"		5251822	1					
ANR	5252166	Callee	strchr		5251822	0					
ANR	5252167	Identifier	strchr		5251822	0					
ANR	5252168	ArgumentList	str1		5251822	1					
ANR	5252169	Argument	str1		5251822	0					
ANR	5252170	Identifier	str1		5251822	0					
ANR	5252171	Argument	' '		5251822	1					
ANR	5252172	PrimaryExpression	' '		5251822	0					
ANR	5252173	IdentifierDeclStatement	"char * second = strchr ( str2 , ' ' ) ;"	418:6:9279:9312	5251822	2	True				
ANR	5252174	IdentifierDecl	"* second = strchr ( str2 , ' ' )"		5251822	0					
ANR	5252175	IdentifierDeclType	char *		5251822	0					
ANR	5252176	Identifier	second		5251822	1					
ANR	5252177	AssignmentExpression	"* second = strchr ( str2 , ' ' )"		5251822	2		=			
ANR	5252178	Identifier	second		5251822	0					
ANR	5252179	CallExpression	"strchr ( str2 , ' ' )"		5251822	1					
ANR	5252180	Callee	strchr		5251822	0					
ANR	5252181	Identifier	strchr		5251822	0					
ANR	5252182	ArgumentList	str2		5251822	1					
ANR	5252183	Argument	str2		5251822	0					
ANR	5252184	Identifier	str2		5251822	0					
ANR	5252185	Argument	' '		5251822	1					
ANR	5252186	PrimaryExpression	' '		5251822	0					
ANR	5252187	ExpressionStatement	"r_str_append ( out , first ? first : "" "" )"	419:6:9320:9359	5251822	3	True				
ANR	5252188	CallExpression	"r_str_append ( out , first ? first : "" "" )"		5251822	0					
ANR	5252189	Callee	r_str_append		5251822	0					
ANR	5252190	Identifier	r_str_append		5251822	0					
ANR	5252191	ArgumentList	out		5251822	1					
ANR	5252192	Argument	out		5251822	0					
ANR	5252193	Identifier	out		5251822	0					
ANR	5252194	Argument	"first ? first : "" """		5251822	1					
ANR	5252195	ConditionalExpression	"first ? first : "" """		5251822	0					
ANR	5252196	Condition	first		5251822	0					
ANR	5252197	Identifier	first		5251822	0					
ANR	5252198	Identifier	first		5251822	1					
ANR	5252199	PrimaryExpression	""" """		5251822	2					
ANR	5252200	ExpressionStatement	"r_str_append ( out , second ? second : "" "" )"	420:6:9367:9408	5251822	4	True				
ANR	5252201	CallExpression	"r_str_append ( out , second ? second : "" "" )"		5251822	0					
ANR	5252202	Callee	r_str_append		5251822	0					
ANR	5252203	Identifier	r_str_append		5251822	0					
ANR	5252204	ArgumentList	out		5251822	1					
ANR	5252205	Argument	out		5251822	0					
ANR	5252206	Identifier	out		5251822	0					
ANR	5252207	Argument	"second ? second : "" """		5251822	1					
ANR	5252208	ConditionalExpression	"second ? second : "" """		5251822	0					
ANR	5252209	Condition	second		5251822	0					
ANR	5252210	Identifier	second		5251822	0					
ANR	5252211	Identifier	second		5251822	1					
ANR	5252212	PrimaryExpression	""" """		5251822	2					
ANR	5252213	ExpressionStatement	"r_list_append ( list , out )"	421:6:9416:9441	5251822	5	True				
ANR	5252214	CallExpression	"r_list_append ( list , out )"		5251822	0					
ANR	5252215	Callee	r_list_append		5251822	0					
ANR	5252216	Identifier	r_list_append		5251822	0					
ANR	5252217	ArgumentList	list		5251822	1					
ANR	5252218	Argument	list		5251822	0					
ANR	5252219	Identifier	list		5251822	0					
ANR	5252220	Argument	out		5251822	1					
ANR	5252221	Identifier	out		5251822	0					
ANR	5252222	ExpressionStatement	"data = r_list_to_str ( list , '\\n' )"	425:3:9464:9497	5251822	12	True				
ANR	5252223	AssignmentExpression	"data = r_list_to_str ( list , '\\n' )"		5251822	0		=			
ANR	5252224	Identifier	data		5251822	0					
ANR	5252225	CallExpression	"r_list_to_str ( list , '\\n' )"		5251822	1					
ANR	5252226	Callee	r_list_to_str		5251822	0					
ANR	5252227	Identifier	r_list_to_str		5251822	0					
ANR	5252228	ArgumentList	list		5251822	1					
ANR	5252229	Argument	list		5251822	0					
ANR	5252230	Identifier	list		5251822	0					
ANR	5252231	Argument	'\\n'		5251822	1					
ANR	5252232	PrimaryExpression	'\\n'		5251822	0					
ANR	5252233	ExpressionStatement	r_list_free ( list )	426:3:9502:9520	5251822	13	True				
ANR	5252234	CallExpression	r_list_free ( list )		5251822	0					
ANR	5252235	Callee	r_list_free		5251822	0					
ANR	5252236	Identifier	r_list_free		5251822	0					
ANR	5252237	ArgumentList	list		5251822	1					
ANR	5252238	Argument	list		5251822	0					
ANR	5252239	Identifier	list		5251822	0					
ANR	5252240	ExpressionStatement	r_list_free ( list1 )	427:3:9525:9544	5251822	14	True				
ANR	5252241	CallExpression	r_list_free ( list1 )		5251822	0					
ANR	5252242	Callee	r_list_free		5251822	0					
ANR	5252243	Identifier	r_list_free		5251822	0					
ANR	5252244	ArgumentList	list1		5251822	1					
ANR	5252245	Argument	list1		5251822	0					
ANR	5252246	Identifier	list1		5251822	0					
ANR	5252247	ExpressionStatement	r_list_free ( list2 )	428:3:9549:9568	5251822	15	True				
ANR	5252248	CallExpression	r_list_free ( list2 )		5251822	0					
ANR	5252249	Callee	r_list_free		5251822	0					
ANR	5252250	Identifier	r_list_free		5251822	0					
ANR	5252251	ArgumentList	list2		5251822	1					
ANR	5252252	Argument	list2		5251822	0					
ANR	5252253	Identifier	list2		5251822	0					
ANR	5252254	ExpressionStatement	free ( filename1 )	430:2:9576:9592	5251822	9	True				
ANR	5252255	CallExpression	free ( filename1 )		5251822	0					
ANR	5252256	Callee	free		5251822	0					
ANR	5252257	Identifier	free		5251822	0					
ANR	5252258	ArgumentList	filename1		5251822	1					
ANR	5252259	Argument	filename1		5251822	0					
ANR	5252260	Identifier	filename1		5251822	0					
ANR	5252261	ExpressionStatement	free ( filename2 )	431:2:9596:9612	5251822	10	True				
ANR	5252262	CallExpression	free ( filename2 )		5251822	0					
ANR	5252263	Callee	free		5251822	0					
ANR	5252264	Identifier	free		5251822	0					
ANR	5252265	ArgumentList	filename2		5251822	1					
ANR	5252266	Argument	filename2		5251822	0					
ANR	5252267	Identifier	filename2		5251822	0					
ANR	5252268	ReturnStatement	return data ;	432:2:9616:9627	5251822	11	True				
ANR	5252269	Identifier	data		5251822	0					
ANR	5252270	ElseStatement	else		5251822	0					
ANR	5252271	CompoundStatement		65:8:1556:1556	5251822	0					
ANR	5252272	ExpressionStatement	"eprintf ( ""Usage: join file1 file2\\n"" )"	434:2:9641:9678	5251822	0	True				
ANR	5252273	CallExpression	"eprintf ( ""Usage: join file1 file2\\n"" )"		5251822	0					
ANR	5252274	Callee	eprintf		5251822	0					
ANR	5252275	Identifier	eprintf		5251822	0					
ANR	5252276	ArgumentList	"""Usage: join file1 file2\\n"""		5251822	1					
ANR	5252277	Argument	"""Usage: join file1 file2\\n"""		5251822	0					
ANR	5252278	PrimaryExpression	"""Usage: join file1 file2\\n"""		5251822	0					
ANR	5252279	ReturnStatement	return NULL ;	436:1:9684:9695	5251822	7	True				
ANR	5252280	Identifier	NULL		5251822	0					
ANR	5252281	ReturnType	R_API char *		5251822	1					
ANR	5252282	Identifier	r_syscmd_join		5251822	2					
ANR	5252283	ParameterList	"const char * file1 , const char * file2"		5251822	3					
ANR	5252284	Parameter	const char * file1	369:26:8042:8058	5251822	0	True				
ANR	5252285	ParameterType	const char *		5251822	0					
ANR	5252286	Identifier	file1		5251822	1					
ANR	5252287	Parameter	const char * file2	369:45:8061:8077	5251822	1	True				
ANR	5252288	ParameterType	const char *		5251822	0					
ANR	5252289	Identifier	file2		5251822	1					
ANR	5252290	CFGEntryNode	ENTRY		5251822		True				
ANR	5252291	CFGExitNode	EXIT		5251822		True				
ANR	5252292	CFGErrorNode	ERROR		5251822		True				
ANR	5252293	Symbol	p1		5251822						
ANR	5252294	Symbol	p2		5251822						
ANR	5252295	Symbol	data		5251822						
ANR	5252296	Symbol	r_str_split_list		5251822						
ANR	5252297	Symbol	strchr		5251822						
ANR	5252298	Symbol	out		5251822						
ANR	5252299	Symbol	second		5251822						
ANR	5252300	Symbol	& sz2		5251822						
ANR	5252301	Symbol	str1		5251822						
ANR	5252302	Symbol	& sz1		5251822						
ANR	5252303	Symbol	str2		5251822						
ANR	5252304	Symbol	end		5251822						
ANR	5252305	Symbol	filename2		5251822						
ANR	5252306	Symbol	r_str_new		5251822						
ANR	5252307	Symbol	filename1		5251822						
ANR	5252308	Symbol	r_str_startswith		5251822						
ANR	5252309	Symbol	r_file_slurp		5251822						
ANR	5252310	Symbol	NULL		5251822						
ANR	5252311	Symbol	* p1		5251822						
ANR	5252312	Symbol	iter1		5251822						
ANR	5252313	Symbol	r_list_newf		5251822						
ANR	5252314	Symbol	data2		5251822						
ANR	5252315	Symbol	iter2		5251822						
ANR	5252316	Symbol	data1		5251822						
ANR	5252317	Symbol	sz2		5251822						
ANR	5252318	Symbol	sz1		5251822						
ANR	5252319	Symbol	* p2		5251822						
ANR	5252320	Symbol	list		5251822						
ANR	5252321	Symbol	list1		5251822						
ANR	5252322	Symbol	r_list_to_str		5251822						
ANR	5252323	Symbol	field		5251822						
ANR	5252324	Symbol	list2		5251822						
ANR	5252325	Symbol	file2		5251822						
ANR	5252326	Symbol	* end		5251822						
ANR	5252327	Symbol	file1		5251822						
ANR	5252328	Symbol	strdup		5251822						
ANR	5252329	Symbol	first		5251822						
ANR	5252330	Function	r_syscmd_cat	439:0:9700:10145							
ANR	5252331	FunctionDef	r_syscmd_cat (const char * file)		5252330	0					
ANR	5252332	CompoundStatement		439:43:9743:10145	5252330	0					
ANR	5252333	IdentifierDeclStatement	int sz ;	440:1:9746:9752	5252330	0	True				
ANR	5252334	IdentifierDecl	sz		5252330	0					
ANR	5252335	IdentifierDeclType	int		5252330	0					
ANR	5252336	Identifier	sz		5252330	1					
ANR	5252337	IdentifierDeclStatement	const char * p = NULL ;	441:1:9755:9775	5252330	1	True				
ANR	5252338	IdentifierDecl	* p = NULL		5252330	0					
ANR	5252339	IdentifierDeclType	const char *		5252330	0					
ANR	5252340	Identifier	p		5252330	1					
ANR	5252341	AssignmentExpression	* p = NULL		5252330	2		=			
ANR	5252342	Identifier	NULL		5252330	0					
ANR	5252343	Identifier	NULL		5252330	1					
ANR	5252344	IfStatement	if ( file )		5252330	2					
ANR	5252345	Condition	file	442:5:9782:9785	5252330	0	True				
ANR	5252346	Identifier	file		5252330	0					
ANR	5252347	CompoundStatement		4:11:44:44	5252330	1					
ANR	5252348	IfStatement	"if ( ( p = strchr ( file , ' ' ) ) )"		5252330	0					
ANR	5252349	Condition	"p = strchr ( file , ' ' )"	443:6:9796:9819	5252330	0	True				
ANR	5252350	AssignmentExpression	"p = strchr ( file , ' ' )"		5252330	0		=			
ANR	5252351	Identifier	p		5252330	0					
ANR	5252352	CallExpression	"strchr ( file , ' ' )"		5252330	1					
ANR	5252353	Callee	strchr		5252330	0					
ANR	5252354	Identifier	strchr		5252330	0					
ANR	5252355	ArgumentList	file		5252330	1					
ANR	5252356	Argument	file		5252330	0					
ANR	5252357	Identifier	file		5252330	0					
ANR	5252358	Argument	' '		5252330	1					
ANR	5252359	PrimaryExpression	' '		5252330	0					
ANR	5252360	CompoundStatement		5:32:78:78	5252330	1					
ANR	5252361	ExpressionStatement	p = p + 1	444:3:9827:9836	5252330	0	True				
ANR	5252362	AssignmentExpression	p = p + 1		5252330	0		=			
ANR	5252363	Identifier	p		5252330	0					
ANR	5252364	AdditiveExpression	p + 1		5252330	1		+			
ANR	5252365	Identifier	p		5252330	0					
ANR	5252366	PrimaryExpression	1		5252330	1					
ANR	5252367	ElseStatement	else		5252330	0					
ANR	5252368	CompoundStatement		7:9:103:103	5252330	0					
ANR	5252369	ExpressionStatement	p = file	446:3:9852:9860	5252330	0	True				
ANR	5252370	AssignmentExpression	p = file		5252330	0		=			
ANR	5252371	Identifier	p		5252330	0					
ANR	5252372	Identifier	file		5252330	1					
ANR	5252373	IfStatement	if ( p && * p )		5252330	3					
ANR	5252374	Condition	p && * p	449:5:9874:9880	5252330	0	True				
ANR	5252375	AndExpression	p && * p		5252330	0		&&			
ANR	5252376	Identifier	p		5252330	0					
ANR	5252377	UnaryOperationExpression	* p		5252330	1					
ANR	5252378	UnaryOperator	*		5252330	0					
ANR	5252379	Identifier	p		5252330	1					
ANR	5252380	CompoundStatement		14:2:199:240	5252330	1					
ANR	5252381	IdentifierDeclStatement	char * filename = strdup ( p ) ;	450:2:9887:9914	5252330	0	True				
ANR	5252382	IdentifierDecl	* filename = strdup ( p )		5252330	0					
ANR	5252383	IdentifierDeclType	char *		5252330	0					
ANR	5252384	Identifier	filename		5252330	1					
ANR	5252385	AssignmentExpression	* filename = strdup ( p )		5252330	2		=			
ANR	5252386	Identifier	filename		5252330	0					
ANR	5252387	CallExpression	strdup ( p )		5252330	1					
ANR	5252388	Callee	strdup		5252330	0					
ANR	5252389	Identifier	strdup		5252330	0					
ANR	5252390	ArgumentList	p		5252330	1					
ANR	5252391	Argument	p		5252330	0					
ANR	5252392	Identifier	p		5252330	0					
ANR	5252393	ExpressionStatement	r_str_trim ( filename )	451:2:9918:9939	5252330	1	True				
ANR	5252394	CallExpression	r_str_trim ( filename )		5252330	0					
ANR	5252395	Callee	r_str_trim		5252330	0					
ANR	5252396	Identifier	r_str_trim		5252330	0					
ANR	5252397	ArgumentList	filename		5252330	1					
ANR	5252398	Argument	filename		5252330	0					
ANR	5252399	Identifier	filename		5252330	0					
ANR	5252400	IdentifierDeclStatement	"char * data = r_file_slurp ( filename , & sz ) ;"	452:2:9943:9984	5252330	2	True				
ANR	5252401	IdentifierDecl	"* data = r_file_slurp ( filename , & sz )"		5252330	0					
ANR	5252402	IdentifierDeclType	char *		5252330	0					
ANR	5252403	Identifier	data		5252330	1					
ANR	5252404	AssignmentExpression	"* data = r_file_slurp ( filename , & sz )"		5252330	2		=			
ANR	5252405	Identifier	data		5252330	0					
ANR	5252406	CallExpression	"r_file_slurp ( filename , & sz )"		5252330	1					
ANR	5252407	Callee	r_file_slurp		5252330	0					
ANR	5252408	Identifier	r_file_slurp		5252330	0					
ANR	5252409	ArgumentList	filename		5252330	1					
ANR	5252410	Argument	filename		5252330	0					
ANR	5252411	Identifier	filename		5252330	0					
ANR	5252412	Argument	& sz		5252330	1					
ANR	5252413	UnaryOperationExpression	& sz		5252330	0					
ANR	5252414	UnaryOperator	&		5252330	0					
ANR	5252415	Identifier	sz		5252330	1					
ANR	5252416	IfStatement	if ( ! data )		5252330	3					
ANR	5252417	Condition	! data	453:6:9992:9996	5252330	0	True				
ANR	5252418	UnaryOperationExpression	! data		5252330	0					
ANR	5252419	UnaryOperator	!		5252330	0					
ANR	5252420	Identifier	data		5252330	1					
ANR	5252421	CompoundStatement		15:13:255:255	5252330	1					
ANR	5252422	ExpressionStatement	"eprintf ( ""No such file or directory\\n"" )"	454:3:10004:10043	5252330	0	True				
ANR	5252423	CallExpression	"eprintf ( ""No such file or directory\\n"" )"		5252330	0					
ANR	5252424	Callee	eprintf		5252330	0					
ANR	5252425	Identifier	eprintf		5252330	0					
ANR	5252426	ArgumentList	"""No such file or directory\\n"""		5252330	1					
ANR	5252427	Argument	"""No such file or directory\\n"""		5252330	0					
ANR	5252428	PrimaryExpression	"""No such file or directory\\n"""		5252330	0					
ANR	5252429	ExpressionStatement	free ( filename )	456:2:10051:10066	5252330	4	True				
ANR	5252430	CallExpression	free ( filename )		5252330	0					
ANR	5252431	Callee	free		5252330	0					
ANR	5252432	Identifier	free		5252330	0					
ANR	5252433	ArgumentList	filename		5252330	1					
ANR	5252434	Argument	filename		5252330	0					
ANR	5252435	Identifier	filename		5252330	0					
ANR	5252436	ReturnStatement	return data ;	457:2:10070:10081	5252330	5	True				
ANR	5252437	Identifier	data		5252330	0					
ANR	5252438	ElseStatement	else		5252330	0					
ANR	5252439	CompoundStatement		20:8:347:347	5252330	0					
ANR	5252440	ExpressionStatement	"eprintf ( ""Usage: cat [file]\\n"" )"	459:2:10095:10126	5252330	0	True				
ANR	5252441	CallExpression	"eprintf ( ""Usage: cat [file]\\n"" )"		5252330	0					
ANR	5252442	Callee	eprintf		5252330	0					
ANR	5252443	Identifier	eprintf		5252330	0					
ANR	5252444	ArgumentList	"""Usage: cat [file]\\n"""		5252330	1					
ANR	5252445	Argument	"""Usage: cat [file]\\n"""		5252330	0					
ANR	5252446	PrimaryExpression	"""Usage: cat [file]\\n"""		5252330	0					
ANR	5252447	ReturnStatement	return NULL ;	461:1:10132:10143	5252330	4	True				
ANR	5252448	Identifier	NULL		5252330	0					
ANR	5252449	ReturnType	R_API char *		5252330	1					
ANR	5252450	Identifier	r_syscmd_cat		5252330	2					
ANR	5252451	ParameterList	const char * file		5252330	3					
ANR	5252452	Parameter	const char * file	439:25:9725:9740	5252330	0	True				
ANR	5252453	ParameterType	const char *		5252330	0					
ANR	5252454	Identifier	file		5252330	1					
ANR	5252455	CFGEntryNode	ENTRY		5252330		True				
ANR	5252456	CFGExitNode	EXIT		5252330		True				
ANR	5252457	Symbol	p		5252330						
ANR	5252458	Symbol	& sz		5252330						
ANR	5252459	Symbol	r_file_slurp		5252330						
ANR	5252460	Symbol	file		5252330						
ANR	5252461	Symbol	NULL		5252330						
ANR	5252462	Symbol	filename		5252330						
ANR	5252463	Symbol	data		5252330						
ANR	5252464	Symbol	sz		5252330						
ANR	5252465	Symbol	strchr		5252330						
ANR	5252466	Symbol	* p		5252330						
ANR	5252467	Symbol	strdup		5252330						
ANR	5252468	Function	r_syscmd_mkdir	464:0:10148:10694							
ANR	5252469	FunctionDef	r_syscmd_mkdir (const char * dir)		5252468	0					
ANR	5252470	CompoundStatement		464:44:10192:10694	5252468	0					
ANR	5252471	IdentifierDeclStatement	"const char * suffix = r_str_trim_ro ( strchr ( dir , ' ' ) ) ;"	465:1:10195:10249	5252468	0	True				
ANR	5252472	IdentifierDecl	"* suffix = r_str_trim_ro ( strchr ( dir , ' ' ) )"		5252468	0					
ANR	5252473	IdentifierDeclType	const char *		5252468	0					
ANR	5252474	Identifier	suffix		5252468	1					
ANR	5252475	AssignmentExpression	"* suffix = r_str_trim_ro ( strchr ( dir , ' ' ) )"		5252468	2		=			
ANR	5252476	Identifier	suffix		5252468	0					
ANR	5252477	CallExpression	"r_str_trim_ro ( strchr ( dir , ' ' ) )"		5252468	1					
ANR	5252478	Callee	r_str_trim_ro		5252468	0					
ANR	5252479	Identifier	r_str_trim_ro		5252468	0					
ANR	5252480	ArgumentList	"strchr ( dir , ' ' )"		5252468	1					
ANR	5252481	Argument	"strchr ( dir , ' ' )"		5252468	0					
ANR	5252482	CallExpression	"strchr ( dir , ' ' )"		5252468	0					
ANR	5252483	Callee	strchr		5252468	0					
ANR	5252484	Identifier	strchr		5252468	0					
ANR	5252485	ArgumentList	dir		5252468	1					
ANR	5252486	Argument	dir		5252468	0					
ANR	5252487	Identifier	dir		5252468	0					
ANR	5252488	Argument	' '		5252468	1					
ANR	5252489	PrimaryExpression	' '		5252468	0					
ANR	5252490	IfStatement	"if ( ! suffix || ! strncmp ( suffix , ""-p"" , 3 ) )"		5252468	1					
ANR	5252491	Condition	"! suffix || ! strncmp ( suffix , ""-p"" , 3 )"	466:5:10256:10292	5252468	0	True				
ANR	5252492	OrExpression	"! suffix || ! strncmp ( suffix , ""-p"" , 3 )"		5252468	0		||			
ANR	5252493	UnaryOperationExpression	! suffix		5252468	0					
ANR	5252494	UnaryOperator	!		5252468	0					
ANR	5252495	Identifier	suffix		5252468	1					
ANR	5252496	UnaryOperationExpression	"! strncmp ( suffix , ""-p"" , 3 )"		5252468	1					
ANR	5252497	UnaryOperator	!		5252468	0					
ANR	5252498	CallExpression	"strncmp ( suffix , ""-p"" , 3 )"		5252468	1					
ANR	5252499	Callee	strncmp		5252468	0					
ANR	5252500	Identifier	strncmp		5252468	0					
ANR	5252501	ArgumentList	suffix		5252468	1					
ANR	5252502	Argument	suffix		5252468	0					
ANR	5252503	Identifier	suffix		5252468	0					
ANR	5252504	Argument	"""-p"""		5252468	1					
ANR	5252505	PrimaryExpression	"""-p"""		5252468	0					
ANR	5252506	Argument	3		5252468	2					
ANR	5252507	PrimaryExpression	3		5252468	0					
ANR	5252508	CompoundStatement		3:44:102:102	5252468	1					
ANR	5252509	ReturnStatement	"return r_str_dup ( NULL , ""Usage: mkdir [-p] [directory]\\n"" ) ;"	467:2:10299:10357	5252468	0	True				
ANR	5252510	CallExpression	"r_str_dup ( NULL , ""Usage: mkdir [-p] [directory]\\n"" )"		5252468	0					
ANR	5252511	Callee	r_str_dup		5252468	0					
ANR	5252512	Identifier	r_str_dup		5252468	0					
ANR	5252513	ArgumentList	NULL		5252468	1					
ANR	5252514	Argument	NULL		5252468	0					
ANR	5252515	Identifier	NULL		5252468	0					
ANR	5252516	Argument	"""Usage: mkdir [-p] [directory]\\n"""		5252468	1					
ANR	5252517	PrimaryExpression	"""Usage: mkdir [-p] [directory]\\n"""		5252468	0					
ANR	5252518	IdentifierDeclStatement	int ret ;	469:1:10363:10370	5252468	2	True				
ANR	5252519	IdentifierDecl	ret		5252468	0					
ANR	5252520	IdentifierDeclType	int		5252468	0					
ANR	5252521	Identifier	ret		5252468	1					
ANR	5252522	IdentifierDeclStatement	"char * dirname = ( ! strncmp ( suffix , ""-p "" , 3 ) ) ? strdup ( suffix + 3 ) : strdup ( suffix ) ;"	470:1:10373:10459	5252468	3	True				
ANR	5252523	IdentifierDecl	"* dirname = ( ! strncmp ( suffix , ""-p "" , 3 ) ) ? strdup ( suffix + 3 ) : strdup ( suffix )"		5252468	0					
ANR	5252524	IdentifierDeclType	char *		5252468	0					
ANR	5252525	Identifier	dirname		5252468	1					
ANR	5252526	AssignmentExpression	"* dirname = ( ! strncmp ( suffix , ""-p "" , 3 ) ) ? strdup ( suffix + 3 ) : strdup ( suffix )"		5252468	2		=			
ANR	5252527	Identifier	dirname		5252468	0					
ANR	5252528	ConditionalExpression	"( ! strncmp ( suffix , ""-p "" , 3 ) ) ? strdup ( suffix + 3 ) : strdup ( suffix )"		5252468	1					
ANR	5252529	Condition	"! strncmp ( suffix , ""-p "" , 3 )"		5252468	0					
ANR	5252530	UnaryOperationExpression	"! strncmp ( suffix , ""-p "" , 3 )"		5252468	0					
ANR	5252531	UnaryOperator	!		5252468	0					
ANR	5252532	CallExpression	"strncmp ( suffix , ""-p "" , 3 )"		5252468	1					
ANR	5252533	Callee	strncmp		5252468	0					
ANR	5252534	Identifier	strncmp		5252468	0					
ANR	5252535	ArgumentList	suffix		5252468	1					
ANR	5252536	Argument	suffix		5252468	0					
ANR	5252537	Identifier	suffix		5252468	0					
ANR	5252538	Argument	"""-p """		5252468	1					
ANR	5252539	PrimaryExpression	"""-p """		5252468	0					
ANR	5252540	Argument	3		5252468	2					
ANR	5252541	PrimaryExpression	3		5252468	0					
ANR	5252542	CallExpression	strdup ( suffix + 3 )		5252468	1					
ANR	5252543	Callee	strdup		5252468	0					
ANR	5252544	Identifier	strdup		5252468	0					
ANR	5252545	ArgumentList	suffix + 3		5252468	1					
ANR	5252546	Argument	suffix + 3		5252468	0					
ANR	5252547	AdditiveExpression	suffix + 3		5252468	0		+			
ANR	5252548	Identifier	suffix		5252468	0					
ANR	5252549	PrimaryExpression	3		5252468	1					
ANR	5252550	CallExpression	strdup ( suffix )		5252468	2					
ANR	5252551	Callee	strdup		5252468	0					
ANR	5252552	Identifier	strdup		5252468	0					
ANR	5252553	ArgumentList	suffix		5252468	1					
ANR	5252554	Argument	suffix		5252468	0					
ANR	5252555	Identifier	suffix		5252468	0					
ANR	5252556	ExpressionStatement	r_str_trim ( dirname )	472:1:10462:10482	5252468	4	True				
ANR	5252557	CallExpression	r_str_trim ( dirname )		5252468	0					
ANR	5252558	Callee	r_str_trim		5252468	0					
ANR	5252559	Identifier	r_str_trim		5252468	0					
ANR	5252560	ArgumentList	dirname		5252468	1					
ANR	5252561	Argument	dirname		5252468	0					
ANR	5252562	Identifier	dirname		5252468	0					
ANR	5252563	ExpressionStatement	ret = r_sys_mkdirp ( dirname )	473:1:10485:10513	5252468	5	True				
ANR	5252564	AssignmentExpression	ret = r_sys_mkdirp ( dirname )		5252468	0		=			
ANR	5252565	Identifier	ret		5252468	0					
ANR	5252566	CallExpression	r_sys_mkdirp ( dirname )		5252468	1					
ANR	5252567	Callee	r_sys_mkdirp		5252468	0					
ANR	5252568	Identifier	r_sys_mkdirp		5252468	0					
ANR	5252569	ArgumentList	dirname		5252468	1					
ANR	5252570	Argument	dirname		5252468	0					
ANR	5252571	Identifier	dirname		5252468	0					
ANR	5252572	IfStatement	if ( ! ret )		5252468	6					
ANR	5252573	Condition	! ret	474:5:10520:10523	5252468	0	True				
ANR	5252574	UnaryOperationExpression	! ret		5252468	0					
ANR	5252575	UnaryOperator	!		5252468	0					
ANR	5252576	Identifier	ret		5252468	1					
ANR	5252577	CompoundStatement		11:11:333:333	5252468	1					
ANR	5252578	IfStatement	if ( r_sys_mkdir_failed ( ) )		5252468	0					
ANR	5252579	Condition	r_sys_mkdir_failed ( )	475:6:10534:10554	5252468	0	True				
ANR	5252580	CallExpression	r_sys_mkdir_failed ( )		5252468	0					
ANR	5252581	Callee	r_sys_mkdir_failed		5252468	0					
ANR	5252582	Identifier	r_sys_mkdir_failed		5252468	0					
ANR	5252583	ArgumentList			5252468	1					
ANR	5252584	CompoundStatement		13:3:369:427	5252468	1					
ANR	5252585	IdentifierDeclStatement	"char * res = r_str_newf ( ""Cannot create \\""%s\\""\\n"" , dirname ) ;"	476:3:10562:10620	5252468	0	True				
ANR	5252586	IdentifierDecl	"* res = r_str_newf ( ""Cannot create \\""%s\\""\\n"" , dirname )"		5252468	0					
ANR	5252587	IdentifierDeclType	char *		5252468	0					
ANR	5252588	Identifier	res		5252468	1					
ANR	5252589	AssignmentExpression	"* res = r_str_newf ( ""Cannot create \\""%s\\""\\n"" , dirname )"		5252468	2		=			
ANR	5252590	Identifier	res		5252468	0					
ANR	5252591	CallExpression	"r_str_newf ( ""Cannot create \\""%s\\""\\n"" , dirname )"		5252468	1					
ANR	5252592	Callee	r_str_newf		5252468	0					
ANR	5252593	Identifier	r_str_newf		5252468	0					
ANR	5252594	ArgumentList	"""Cannot create \\""%s\\""\\n"""		5252468	1					
ANR	5252595	Argument	"""Cannot create \\""%s\\""\\n"""		5252468	0					
ANR	5252596	PrimaryExpression	"""Cannot create \\""%s\\""\\n"""		5252468	0					
ANR	5252597	Argument	dirname		5252468	1					
ANR	5252598	Identifier	dirname		5252468	0					
ANR	5252599	ExpressionStatement	free ( dirname )	477:3:10625:10639	5252468	1	True				
ANR	5252600	CallExpression	free ( dirname )		5252468	0					
ANR	5252601	Callee	free		5252468	0					
ANR	5252602	Identifier	free		5252468	0					
ANR	5252603	ArgumentList	dirname		5252468	1					
ANR	5252604	Argument	dirname		5252468	0					
ANR	5252605	Identifier	dirname		5252468	0					
ANR	5252606	ReturnStatement	return res ;	478:3:10644:10654	5252468	2	True				
ANR	5252607	Identifier	res		5252468	0					
ANR	5252608	ExpressionStatement	free ( dirname )	481:1:10664:10678	5252468	7	True				
ANR	5252609	CallExpression	free ( dirname )		5252468	0					
ANR	5252610	Callee	free		5252468	0					
ANR	5252611	Identifier	free		5252468	0					
ANR	5252612	ArgumentList	dirname		5252468	1					
ANR	5252613	Argument	dirname		5252468	0					
ANR	5252614	Identifier	dirname		5252468	0					
ANR	5252615	ReturnStatement	return NULL ;	482:1:10681:10692	5252468	8	True				
ANR	5252616	Identifier	NULL		5252468	0					
ANR	5252617	ReturnType	R_API char *		5252468	1					
ANR	5252618	Identifier	r_syscmd_mkdir		5252468	2					
ANR	5252619	ParameterList	const char * dir		5252468	3					
ANR	5252620	Parameter	const char * dir	464:27:10175:10189	5252468	0	True				
ANR	5252621	ParameterType	const char *		5252468	0					
ANR	5252622	Identifier	dir		5252468	1					
ANR	5252623	CFGEntryNode	ENTRY		5252468		True				
ANR	5252624	CFGExitNode	EXIT		5252468		True				
ANR	5252625	Symbol	ret		5252468						
ANR	5252626	Symbol	res		5252468						
ANR	5252627	Symbol	NULL		5252468						
ANR	5252628	Symbol	strchr		5252468						
ANR	5252629	Symbol	r_sys_mkdir_failed		5252468						
ANR	5252630	Symbol	r_str_newf		5252468						
ANR	5252631	Symbol	dir		5252468						
ANR	5252632	Symbol	suffix		5252468						
ANR	5252633	Symbol	dirname		5252468						
ANR	5252634	Symbol	strncmp		5252468						
ANR	5252635	Symbol	r_str_trim_ro		5252468						
ANR	5252636	Symbol	r_sys_mkdirp		5252468						
ANR	5252637	Symbol	strdup		5252468						
ANR	5252638	Symbol	r_str_dup		5252468						
ANR	5252639	Function	r_syscmd_mv	485:0:10697:10983							
ANR	5252640	FunctionDef	r_syscmd_mv (const char * input)		5252639	0					
ANR	5252641	CompoundStatement		485:42:10739:10983	5252639	0					
ANR	5252642	IfStatement	if ( strlen ( input ) < 3 )		5252639	0					
ANR	5252643	Condition	strlen ( input ) < 3	486:5:10746:10763	5252639	0	True				
ANR	5252644	RelationalExpression	strlen ( input ) < 3		5252639	0		<			
ANR	5252645	CallExpression	strlen ( input )		5252639	0					
ANR	5252646	Callee	strlen		5252639	0					
ANR	5252647	Identifier	strlen		5252639	0					
ANR	5252648	ArgumentList	input		5252639	1					
ANR	5252649	Argument	input		5252639	0					
ANR	5252650	Identifier	input		5252639	0					
ANR	5252651	PrimaryExpression	3		5252639	1					
ANR	5252652	CompoundStatement		2:25:26:26	5252639	1					
ANR	5252653	ExpressionStatement	"eprintf ( ""Usage: mv src dst\\n"" )"	487:2:10770:10801	5252639	0	True				
ANR	5252654	CallExpression	"eprintf ( ""Usage: mv src dst\\n"" )"		5252639	0					
ANR	5252655	Callee	eprintf		5252639	0					
ANR	5252656	Identifier	eprintf		5252639	0					
ANR	5252657	ArgumentList	"""Usage: mv src dst\\n"""		5252639	1					
ANR	5252658	Argument	"""Usage: mv src dst\\n"""		5252639	0					
ANR	5252659	PrimaryExpression	"""Usage: mv src dst\\n"""		5252639	0					
ANR	5252660	ReturnStatement	return false ;	488:2:10805:10817	5252639	1	True				
ANR	5252661	Identifier	false		5252639	0					
ANR	5252662	ExpressionStatement	input = input + 2	490:1:10823:10840	5252639	1	True				
ANR	5252663	AssignmentExpression	input = input + 2		5252639	0		=			
ANR	5252664	Identifier	input		5252639	0					
ANR	5252665	AdditiveExpression	input + 2		5252639	1		+			
ANR	5252666	Identifier	input		5252639	0					
ANR	5252667	PrimaryExpression	2		5252639	1					
ANR	5252668	IfStatement	if ( ! r_sandbox_enable ( 0 ) )		5252639	2					
ANR	5252669	Condition	! r_sandbox_enable ( 0 )	491:5:10847:10867	5252639	0	True				
ANR	5252670	UnaryOperationExpression	! r_sandbox_enable ( 0 )		5252639	0					
ANR	5252671	UnaryOperator	!		5252639	0					
ANR	5252672	CallExpression	r_sandbox_enable ( 0 )		5252639	1					
ANR	5252673	Callee	r_sandbox_enable		5252639	0					
ANR	5252674	Identifier	r_sandbox_enable		5252639	0					
ANR	5252675	ArgumentList	0		5252639	1					
ANR	5252676	Argument	0		5252639	0					
ANR	5252677	PrimaryExpression	0		5252639	0					
ANR	5252678	CompoundStatement		7:28:130:130	5252639	1					
ANR	5252679	ExpressionStatement	"r_sys_cmdf ( ""move %s"" , input )"	493:2:10890:10919	5252639	0	True				
ANR	5252680	CallExpression	"r_sys_cmdf ( ""move %s"" , input )"		5252639	0					
ANR	5252681	Callee	r_sys_cmdf		5252639	0					
ANR	5252682	Identifier	r_sys_cmdf		5252639	0					
ANR	5252683	ArgumentList	"""move %s"""		5252639	1					
ANR	5252684	Argument	"""move %s"""		5252639	0					
ANR	5252685	PrimaryExpression	"""move %s"""		5252639	0					
ANR	5252686	Argument	input		5252639	1					
ANR	5252687	Identifier	input		5252639	0					
ANR	5252688	ReturnStatement	return false ;	498:1:10969:10981	5252639	3	True				
ANR	5252689	Identifier	false		5252639	0					
ANR	5252690	ReturnType	R_API bool		5252639	1					
ANR	5252691	Identifier	r_syscmd_mv		5252639	2					
ANR	5252692	ParameterList	const char * input		5252639	3					
ANR	5252693	Parameter	const char * input	485:23:10720:10736	5252639	0	True				
ANR	5252694	ParameterType	const char *		5252639	0					
ANR	5252695	Identifier	input		5252639	1					
ANR	5252696	CFGEntryNode	ENTRY		5252639		True				
ANR	5252697	CFGExitNode	EXIT		5252639		True				
ANR	5252698	Symbol	input		5252639						
ANR	5252699	Symbol	strlen		5252639						
ANR	5252700	Symbol	r_sandbox_enable		5252639						
ANR	5252701	Symbol	false		5252639						
