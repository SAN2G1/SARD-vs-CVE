command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5216144	File	data/converged/CVE-2019-16718~_radare2/libr_util_signal.c								
ANR	5216145	ClassDef	<unnamed>	6:7:69:970							
ANR	5216146	DeclStmt									
ANR	5216147	Decl							const char	const char *	name
ANR	5216148	DeclStmt									
ANR	5216149	Decl							int	int	code
ANR	5216150	DeclStmt									
ANR	5216151	Decl								 [ ]	signals
ANR	5216152	Function	r_signal_from_string	49:0:973:1182							
ANR	5216153	FunctionDef	r_signal_from_string (const char * e)		5216152	0					
ANR	5216154	CompoundStatement		49:47:1020:1182	5216152	0					
ANR	5216155	IdentifierDeclStatement	int i ;	50:1:1023:1028	5216152	0	True				
ANR	5216156	IdentifierDecl	i		5216152	0					
ANR	5216157	IdentifierDeclType	int		5216152	0					
ANR	5216158	Identifier	i		5216152	1					
ANR	5216159	ForStatement	for ( i = 1 ; signals [ i ] . name ; i ++ )		5216152	1					
ANR	5216160	ForInit	i = 1 ;	51:6:1036:1041	5216152	0	True				
ANR	5216161	AssignmentExpression	i = 1		5216152	0		=			
ANR	5216162	Identifier	i		5216152	0					
ANR	5216163	PrimaryExpression	1		5216152	1					
ANR	5216164	Condition	signals [ i ] . name	51:13:1043:1057	5216152	1	True				
ANR	5216165	MemberAccess	signals [ i ] . name		5216152	0					
ANR	5216166	ArrayIndexing	signals [ i ]		5216152	0					
ANR	5216167	Identifier	signals		5216152	0					
ANR	5216168	Identifier	i		5216152	1					
ANR	5216169	Identifier	name		5216152	1					
ANR	5216170	PostIncDecOperationExpression	i ++	51:30:1060:1062	5216152	2	True				
ANR	5216171	Identifier	i		5216152	0					
ANR	5216172	IncDec	++		5216152	1					
ANR	5216173	CompoundStatement		4:2:48:81	5216152	3					
ANR	5216174	IdentifierDeclStatement	const char * str = signals [ i ] . name ;	52:2:1069:1102	5216152	0	True				
ANR	5216175	IdentifierDecl	* str = signals [ i ] . name		5216152	0					
ANR	5216176	IdentifierDeclType	const char *		5216152	0					
ANR	5216177	Identifier	str		5216152	1					
ANR	5216178	AssignmentExpression	* str = signals [ i ] . name		5216152	2		=			
ANR	5216179	Identifier	str		5216152	0					
ANR	5216180	MemberAccess	signals [ i ] . name		5216152	1					
ANR	5216181	ArrayIndexing	signals [ i ]		5216152	0					
ANR	5216182	Identifier	signals		5216152	0					
ANR	5216183	Identifier	i		5216152	1					
ANR	5216184	Identifier	name		5216152	1					
ANR	5216185	IfStatement	"if ( ! strcmp ( e , str ) )"		5216152	1					
ANR	5216186	Condition	"! strcmp ( e , str )"	53:6:1110:1125	5216152	0	True				
ANR	5216187	UnaryOperationExpression	"! strcmp ( e , str )"		5216152	0					
ANR	5216188	UnaryOperator	!		5216152	0					
ANR	5216189	CallExpression	"strcmp ( e , str )"		5216152	1					
ANR	5216190	Callee	strcmp		5216152	0					
ANR	5216191	Identifier	strcmp		5216152	0					
ANR	5216192	ArgumentList	e		5216152	1					
ANR	5216193	Argument	e		5216152	0					
ANR	5216194	Identifier	e		5216152	0					
ANR	5216195	Argument	str		5216152	1					
ANR	5216196	Identifier	str		5216152	0					
ANR	5216197	CompoundStatement		5:24:107:107	5216152	1					
ANR	5216198	ReturnStatement	return signals [ i ] . code ;	54:3:1133:1155	5216152	0	True				
ANR	5216199	MemberAccess	signals [ i ] . code		5216152	0					
ANR	5216200	ArrayIndexing	signals [ i ]		5216152	0					
ANR	5216201	Identifier	signals		5216152	0					
ANR	5216202	Identifier	i		5216152	1					
ANR	5216203	Identifier	code		5216152	1					
ANR	5216204	ReturnStatement	return atoi ( e ) ;	57:1:1165:1180	5216152	2	True				
ANR	5216205	CallExpression	atoi ( e )		5216152	0					
ANR	5216206	Callee	atoi		5216152	0					
ANR	5216207	Identifier	atoi		5216152	0					
ANR	5216208	ArgumentList	e		5216152	1					
ANR	5216209	Argument	e		5216152	0					
ANR	5216210	Identifier	e		5216152	0					
ANR	5216211	ReturnType	R_API int		5216152	1					
ANR	5216212	Identifier	r_signal_from_string		5216152	2					
ANR	5216213	ParameterList	const char * e		5216152	3					
ANR	5216214	Parameter	const char * e	49:32:1005:1017	5216152	0	True				
ANR	5216215	ParameterType	const char *		5216152	0					
ANR	5216216	Identifier	e		5216152	1					
ANR	5216217	CFGEntryNode	ENTRY		5216152		True				
ANR	5216218	CFGExitNode	EXIT		5216152		True				
ANR	5216219	Symbol	str		5216152						
ANR	5216220	Symbol	strcmp		5216152						
ANR	5216221	Symbol	atoi		5216152						
ANR	5216222	Symbol	signals [ i ] . name		5216152						
ANR	5216223	Symbol	* i		5216152						
ANR	5216224	Symbol	signals		5216152						
ANR	5216225	Symbol	e		5216152						
ANR	5216226	Symbol	signals [ i ] . code		5216152						
ANR	5216227	Symbol	i		5216152						
ANR	5216228	Symbol	* signals		5216152						
ANR	5216229	Function	r_signal_to_string	60:6:1191:1361							
ANR	5216230	FunctionDef	r_signal_to_string (int code)		5216229	0					
ANR	5216231	CompoundStatement		60:48:1233:1361	5216229	0					
ANR	5216232	IdentifierDeclStatement	int i ;	61:1:1236:1241	5216229	0	True				
ANR	5216233	IdentifierDecl	i		5216229	0					
ANR	5216234	IdentifierDeclType	int		5216229	0					
ANR	5216235	Identifier	i		5216229	1					
ANR	5216236	ForStatement	for ( i = 1 ; signals [ i ] . name ; i ++ )		5216229	1					
ANR	5216237	ForInit	i = 1 ;	62:6:1249:1254	5216229	0	True				
ANR	5216238	AssignmentExpression	i = 1		5216229	0		=			
ANR	5216239	Identifier	i		5216229	0					
ANR	5216240	PrimaryExpression	1		5216229	1					
ANR	5216241	Condition	signals [ i ] . name	62:13:1256:1270	5216229	1	True				
ANR	5216242	MemberAccess	signals [ i ] . name		5216229	0					
ANR	5216243	ArrayIndexing	signals [ i ]		5216229	0					
ANR	5216244	Identifier	signals		5216229	0					
ANR	5216245	Identifier	i		5216229	1					
ANR	5216246	Identifier	name		5216229	1					
ANR	5216247	PostIncDecOperationExpression	i ++	62:30:1273:1275	5216229	2	True				
ANR	5216248	Identifier	i		5216229	0					
ANR	5216249	IncDec	++		5216229	1					
ANR	5216250	CompoundStatement		3:35:44:44	5216229	3					
ANR	5216251	IfStatement	if ( signals [ i ] . code == code )		5216229	0					
ANR	5216252	Condition	signals [ i ] . code == code	63:6:1286:1308	5216229	0	True				
ANR	5216253	EqualityExpression	signals [ i ] . code == code		5216229	0		==			
ANR	5216254	MemberAccess	signals [ i ] . code		5216229	0					
ANR	5216255	ArrayIndexing	signals [ i ]		5216229	0					
ANR	5216256	Identifier	signals		5216229	0					
ANR	5216257	Identifier	i		5216229	1					
ANR	5216258	Identifier	code		5216229	1					
ANR	5216259	Identifier	code		5216229	1					
ANR	5216260	CompoundStatement		4:31:77:77	5216229	1					
ANR	5216261	ReturnStatement	return signals [ i ] . name ;	64:3:1316:1338	5216229	0	True				
ANR	5216262	MemberAccess	signals [ i ] . name		5216229	0					
ANR	5216263	ArrayIndexing	signals [ i ]		5216229	0					
ANR	5216264	Identifier	signals		5216229	0					
ANR	5216265	Identifier	i		5216229	1					
ANR	5216266	Identifier	name		5216229	1					
ANR	5216267	ReturnStatement	return NULL ;	67:1:1348:1359	5216229	2	True				
ANR	5216268	Identifier	NULL		5216229	0					
ANR	5216269	ReturnType	const char *		5216229	1					
ANR	5216270	Identifier	r_signal_to_string		5216229	2					
ANR	5216271	ParameterList	int code		5216229	3					
ANR	5216272	Parameter	int code	60:38:1223:1230	5216229	0	True				
ANR	5216273	ParameterType	int		5216229	0					
ANR	5216274	Identifier	code		5216229	1					
ANR	5216275	CFGEntryNode	ENTRY		5216229		True				
ANR	5216276	CFGExitNode	EXIT		5216229		True				
ANR	5216277	Symbol	signals [ i ] . name		5216229						
ANR	5216278	Symbol	code		5216229						
ANR	5216279	Symbol	* i		5216229						
ANR	5216280	Symbol	signals		5216229						
ANR	5216281	Symbol	NULL		5216229						
ANR	5216282	Symbol	signals [ i ] . code		5216229						
ANR	5216283	Symbol	i		5216229						
ANR	5216284	Symbol	* signals		5216229						
ANR	5216285	Function	r_signal_sigmask	71:0:1381:1506							
ANR	5216286	FunctionDef	"r_signal_sigmask (int how , const sigset_t * newmask , sigset_t * oldmask)"		5216285	0					
ANR	5216287	CompoundStatement		71:81:1462:1506	5216285	0					
ANR	5216288	ExpressionStatement	"pthread_sigmask ( how , newmask , oldmask )"	72:1:1465:1504	5216285	0	True				
ANR	5216289	CallExpression	"pthread_sigmask ( how , newmask , oldmask )"		5216285	0					
ANR	5216290	Callee	pthread_sigmask		5216285	0					
ANR	5216291	Identifier	pthread_sigmask		5216285	0					
ANR	5216292	ArgumentList	how		5216285	1					
ANR	5216293	Argument	how		5216285	0					
ANR	5216294	Identifier	how		5216285	0					
ANR	5216295	Argument	newmask		5216285	1					
ANR	5216296	Identifier	newmask		5216285	0					
ANR	5216297	Argument	oldmask		5216285	2					
ANR	5216298	Identifier	oldmask		5216285	0					
ANR	5216299	ReturnType	R_API void		5216285	1					
ANR	5216300	Identifier	r_signal_sigmask		5216285	2					
ANR	5216301	ParameterList	"int how , const sigset_t * newmask , sigset_t * oldmask"		5216285	3					
ANR	5216302	Parameter	int how	71:28:1409:1415	5216285	0	True				
ANR	5216303	ParameterType	int		5216285	0					
ANR	5216304	Identifier	how		5216285	1					
ANR	5216305	Parameter	const sigset_t * newmask	71:37:1418:1440	5216285	1	True				
ANR	5216306	ParameterType	const sigset_t *		5216285	0					
ANR	5216307	Identifier	newmask		5216285	1					
ANR	5216308	Parameter	sigset_t * oldmask	71:62:1443:1459	5216285	2	True				
ANR	5216309	ParameterType	sigset_t *		5216285	0					
ANR	5216310	Identifier	oldmask		5216285	1					
ANR	5216311	CFGEntryNode	ENTRY		5216285		True				
ANR	5216312	CFGExitNode	EXIT		5216285		True				
ANR	5216313	Symbol	oldmask		5216285						
ANR	5216314	Symbol	how		5216285						
ANR	5216315	Symbol	newmask		5216285						
