command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6107122	File	data/converged/CVE-2019-16718~_radare2/shlr_sdb_src_util.c								
ANR	6107123	ClassDef	timezone	16:0:262:382							
ANR	6107124	DeclStmt									
ANR	6107125	Decl							int	int	tz_minuteswest
ANR	6107126	DeclStmt									
ANR	6107127	Decl							int	int	tz_dsttime
ANR	6107128	Function	gettimeofday	21:0:386:1466							
ANR	6107129	FunctionDef	"gettimeofday (struct timeval * p , struct timezone * tz)"		6107128	0					
ANR	6107130	CompoundStatement		21:59:445:1466	6107128	0					
ANR	6107131	IdentifierDeclStatement	ut64 ul = 0 ;	23:1:495:506	6107128	0	True				
ANR	6107132	IdentifierDecl	ul = 0		6107128	0					
ANR	6107133	IdentifierDeclType	ut64		6107128	0					
ANR	6107134	Identifier	ul		6107128	1					
ANR	6107135	AssignmentExpression	ul = 0		6107128	2		=			
ANR	6107136	Identifier	ul		6107128	0					
ANR	6107137	PrimaryExpression	0		6107128	1					
ANR	6107138	Statement	static	24:1:509:514	6107128	1	True				
ANR	6107139	IdentifierDeclStatement	int tzflag = 0 ;	24:8:516:530	6107128	2	True				
ANR	6107140	IdentifierDecl	tzflag = 0		6107128	0					
ANR	6107141	IdentifierDeclType	int		6107128	0					
ANR	6107142	Identifier	tzflag		6107128	1					
ANR	6107143	AssignmentExpression	tzflag = 0		6107128	2		=			
ANR	6107144	Identifier	tzflag		6107128	0					
ANR	6107145	PrimaryExpression	0		6107128	1					
ANR	6107146	IdentifierDeclStatement	FILETIME ft ;	25:1:533:544	6107128	3	True				
ANR	6107147	IdentifierDecl	ft		6107128	0					
ANR	6107148	IdentifierDeclType	FILETIME		6107128	0					
ANR	6107149	Identifier	ft		6107128	1					
ANR	6107150	IfStatement	if ( p )		6107128	4					
ANR	6107151	Condition	p	26:5:551:551	6107128	0	True				
ANR	6107152	Identifier	p		6107128	0					
ANR	6107153	CompoundStatement		6:8:108:108	6107128	1					
ANR	6107154	ExpressionStatement	GetSystemTimeAsFileTime ( & ft )	29:2:672:701	6107128	0	True				
ANR	6107155	CallExpression	GetSystemTimeAsFileTime ( & ft )		6107128	0					
ANR	6107156	Callee	GetSystemTimeAsFileTime		6107128	0					
ANR	6107157	Identifier	GetSystemTimeAsFileTime		6107128	0					
ANR	6107158	ArgumentList	& ft		6107128	1					
ANR	6107159	Argument	& ft		6107128	0					
ANR	6107160	UnaryOperationExpression	& ft		6107128	0					
ANR	6107161	UnaryOperator	&		6107128	0					
ANR	6107162	Identifier	ft		6107128	1					
ANR	6107163	ExpressionStatement	ul |= ft . dwHighDateTime	33:2:822:845	6107128	1	True				
ANR	6107164	AssignmentExpression	ul |= ft . dwHighDateTime		6107128	0		|=			
ANR	6107165	Identifier	ul		6107128	0					
ANR	6107166	MemberAccess	ft . dwHighDateTime		6107128	1					
ANR	6107167	Identifier	ft		6107128	0					
ANR	6107168	Identifier	dwHighDateTime		6107128	1					
ANR	6107169	ExpressionStatement	ul <<= 32	34:2:849:858	6107128	2	True				
ANR	6107170	AssignmentExpression	ul <<= 32		6107128	0		<<=			
ANR	6107171	Identifier	ul		6107128	0					
ANR	6107172	PrimaryExpression	32		6107128	1					
ANR	6107173	ExpressionStatement	ul |= ft . dwLowDateTime	35:2:862:884	6107128	3	True				
ANR	6107174	AssignmentExpression	ul |= ft . dwLowDateTime		6107128	0		|=			
ANR	6107175	Identifier	ul		6107128	0					
ANR	6107176	MemberAccess	ft . dwLowDateTime		6107128	1					
ANR	6107177	Identifier	ft		6107128	0					
ANR	6107178	Identifier	dwLowDateTime		6107128	1					
ANR	6107179	ExpressionStatement	ul /= 10	38:2:944:952	6107128	4	True				
ANR	6107180	AssignmentExpression	ul /= 10		6107128	0		/=			
ANR	6107181	Identifier	ul		6107128	0					
ANR	6107182	PrimaryExpression	10		6107128	1					
ANR	6107183	Statement	ul	41:2:1038:1039	6107128	5	True				
ANR	6107184	Statement	-=	41:5:1041:1042	6107128	6	True				
ANR	6107185	Statement	11644473600000000UL	41:8:1044:1062	6107128	7	True				
ANR	6107186	ExpressionStatement	L	41:27:1063:1064	6107128	8	True				
ANR	6107187	Identifier	L		6107128	0					
ANR	6107188	Statement	p	46:2:1246:1246	6107128	9	True				
ANR	6107189	Statement	->	46:3:1247:1248	6107128	10	True				
ANR	6107190	Statement	tv_sec	46:5:1249:1254	6107128	11	True				
ANR	6107191	Statement	=	46:12:1256:1256	6107128	12	True				
ANR	6107192	Statement	(	46:14:1258:1258	6107128	13	True				
ANR	6107193	Statement	long	46:15:1259:1262	6107128	14	True				
ANR	6107194	Statement	)	46:19:1263:1263	6107128	15	True				
ANR	6107195	Statement	(	46:20:1264:1264	6107128	16	True				
ANR	6107196	Statement	ul	46:21:1265:1266	6107128	17	True				
ANR	6107197	Statement	/	46:24:1268:1268	6107128	18	True				
ANR	6107198	Statement	1000000L	46:26:1270:1277	6107128	19	True				
ANR	6107199	Statement	L	46:34:1278:1278	6107128	20	True				
ANR	6107200	Statement	)	46:35:1279:1279	6107128	21	True				
ANR	6107201	ExpressionStatement		46:36:1280:1280	6107128	22	True				
ANR	6107202	Statement	p	47:2:1284:1284	6107128	23	True				
ANR	6107203	Statement	->	47:3:1285:1286	6107128	24	True				
ANR	6107204	Statement	tv_usec	47:5:1287:1293	6107128	25	True				
ANR	6107205	Statement	=	47:13:1295:1295	6107128	26	True				
ANR	6107206	Statement	(	47:15:1297:1297	6107128	27	True				
ANR	6107207	Statement	long	47:16:1298:1301	6107128	28	True				
ANR	6107208	Statement	)	47:20:1302:1302	6107128	29	True				
ANR	6107209	Statement	(	47:21:1303:1303	6107128	30	True				
ANR	6107210	Statement	ul	47:22:1304:1305	6107128	31	True				
ANR	6107211	Statement	%	47:25:1307:1307	6107128	32	True				
ANR	6107212	Statement	1000000L	47:27:1309:1316	6107128	33	True				
ANR	6107213	Statement	L	47:35:1317:1317	6107128	34	True				
ANR	6107214	Statement	)	47:36:1318:1318	6107128	35	True				
ANR	6107215	ExpressionStatement		47:37:1319:1319	6107128	36	True				
ANR	6107216	IfStatement	if ( tz )		6107128	5					
ANR	6107217	Condition	tz	49:5:1329:1330	6107128	0	True				
ANR	6107218	Identifier	tz		6107128	0					
ANR	6107219	CompoundStatement		29:9:887:887	6107128	1					
ANR	6107220	IfStatement	if ( ! tzflag )		6107128	0					
ANR	6107221	Condition	! tzflag	50:6:1341:1347	6107128	0	True				
ANR	6107222	UnaryOperationExpression	! tzflag		6107128	0					
ANR	6107223	UnaryOperator	!		6107128	0					
ANR	6107224	Identifier	tzflag		6107128	1					
ANR	6107225	CompoundStatement		30:15:904:904	6107128	1					
ANR	6107226	ExpressionStatement	_tzset ( )	51:3:1355:1364	6107128	0	True				
ANR	6107227	CallExpression	_tzset ( )		6107128	0					
ANR	6107228	Callee	_tzset		6107128	0					
ANR	6107229	Identifier	_tzset		6107128	0					
ANR	6107230	ArgumentList			6107128	1					
ANR	6107231	ExpressionStatement	tzflag ++	52:3:1369:1377	6107128	1	True				
ANR	6107232	PostIncDecOperationExpression	tzflag ++		6107128	0					
ANR	6107233	Identifier	tzflag		6107128	0					
ANR	6107234	IncDec	++		6107128	1					
ANR	6107235	ExpressionStatement	tz -> tz_minuteswest = _timezone / 60	54:2:1385:1420	6107128	1	True				
ANR	6107236	AssignmentExpression	tz -> tz_minuteswest = _timezone / 60		6107128	0		=			
ANR	6107237	PtrMemberAccess	tz -> tz_minuteswest		6107128	0					
ANR	6107238	Identifier	tz		6107128	0					
ANR	6107239	Identifier	tz_minuteswest		6107128	1					
ANR	6107240	MultiplicativeExpression	_timezone / 60		6107128	1		/			
ANR	6107241	Identifier	_timezone		6107128	0					
ANR	6107242	PrimaryExpression	60		6107128	1					
ANR	6107243	ExpressionStatement	tz -> tz_dsttime = _daylight	55:2:1424:1450	6107128	2	True				
ANR	6107244	AssignmentExpression	tz -> tz_dsttime = _daylight		6107128	0		=			
ANR	6107245	PtrMemberAccess	tz -> tz_dsttime		6107128	0					
ANR	6107246	Identifier	tz		6107128	0					
ANR	6107247	Identifier	tz_dsttime		6107128	1					
ANR	6107248	Identifier	_daylight		6107128	1					
ANR	6107249	ReturnStatement	return 0 ;	57:1:1456:1464	6107128	6	True				
ANR	6107250	PrimaryExpression	0		6107128	0					
ANR	6107251	ReturnType	int		6107128	1					
ANR	6107252	Identifier	gettimeofday		6107128	2					
ANR	6107253	ParameterList	"struct timeval * p , struct timezone * tz"		6107128	3					
ANR	6107254	Parameter	struct timeval * p	21:18:404:420	6107128	0	True				
ANR	6107255	ParameterType	struct timeval *		6107128	0					
ANR	6107256	Identifier	p		6107128	1					
ANR	6107257	Parameter	struct timezone * tz	21:37:423:442	6107128	1	True				
ANR	6107258	ParameterType	struct timezone *		6107128	0					
ANR	6107259	Identifier	tz		6107128	1					
ANR	6107260	CFGEntryNode	ENTRY		6107128		True				
ANR	6107261	CFGExitNode	EXIT		6107128		True				
ANR	6107262	Symbol	tz		6107128						
ANR	6107263	Symbol	ft . dwLowDateTime		6107128						
ANR	6107264	Symbol	tzflag		6107128						
ANR	6107265	Symbol	tz -> tz_minuteswest		6107128						
ANR	6107266	Symbol	_daylight		6107128						
ANR	6107267	Symbol	ft		6107128						
ANR	6107268	Symbol	ft . dwHighDateTime		6107128						
ANR	6107269	Symbol	tz -> tz_dsttime		6107128						
ANR	6107270	Symbol	* tz		6107128						
ANR	6107271	Symbol	p		6107128						
ANR	6107272	Symbol	ul		6107128						
ANR	6107273	Symbol	& ft		6107128						
ANR	6107274	Symbol	_timezone		6107128						
ANR	6107275	Function	sdb_hash_len	65:0:1512:1800							
ANR	6107276	FunctionDef	"sdb_hash_len (const char * s , ut32 * len)"		6107275	0					
ANR	6107277	CompoundStatement		65:52:1564:1800	6107275	0					
ANR	6107278	IdentifierDeclStatement	ut32 h = CDB_HASHSTART ;	66:1:1567:1589	6107275	0	True				
ANR	6107279	IdentifierDecl	h = CDB_HASHSTART		6107275	0					
ANR	6107280	IdentifierDeclType	ut32		6107275	0					
ANR	6107281	Identifier	h		6107275	1					
ANR	6107282	AssignmentExpression	h = CDB_HASHSTART		6107275	2		=			
ANR	6107283	Identifier	CDB_HASHSTART		6107275	0					
ANR	6107284	Identifier	CDB_HASHSTART		6107275	1					
ANR	6107285	ExpressionStatement	h = 0	68:1:1612:1617	6107275	1	True				
ANR	6107286	AssignmentExpression	h = 0		6107275	0		=			
ANR	6107287	Identifier	h		6107275	0					
ANR	6107288	PrimaryExpression	0		6107275	1					
ANR	6107289	WhileStatement	while ( * s )		6107275	2					
ANR	6107290	Condition	* s	69:8:1627:1628	6107275	0	True				
ANR	6107291	UnaryOperationExpression	* s		6107275	0					
ANR	6107292	UnaryOperator	*		6107275	0					
ANR	6107293	Identifier	s		6107275	1					
ANR	6107294	CompoundStatement		5:12:66:66	6107275	1					
ANR	6107295	ExpressionStatement	h += * s	70:2:1635:1642	6107275	0	True				
ANR	6107296	AssignmentExpression	h += * s		6107275	0		+=			
ANR	6107297	Identifier	h		6107275	0					
ANR	6107298	UnaryOperationExpression	* s		6107275	1					
ANR	6107299	UnaryOperator	*		6107275	0					
ANR	6107300	Identifier	s		6107275	1					
ANR	6107301	ExpressionStatement	s ++	71:2:1646:1649	6107275	1	True				
ANR	6107302	PostIncDecOperationExpression	s ++		6107275	0					
ANR	6107303	Identifier	s		6107275	0					
ANR	6107304	IncDec	++		6107275	1					
ANR	6107305	ReturnStatement	return h ;	85:1:1790:1798	6107275	3	True				
ANR	6107306	Identifier	h		6107275	0					
ANR	6107307	ReturnType	SDB_API ut32		6107275	1					
ANR	6107308	Identifier	sdb_hash_len		6107275	2					
ANR	6107309	ParameterList	"const char * s , ut32 * len"		6107275	3					
ANR	6107310	Parameter	const char * s	65:26:1538:1550	6107275	0	True				
ANR	6107311	ParameterType	const char *		6107275	0					
ANR	6107312	Identifier	s		6107275	1					
ANR	6107313	Parameter	ut32 * len	65:41:1553:1561	6107275	1	True				
ANR	6107314	ParameterType	ut32 *		6107275	0					
ANR	6107315	Identifier	len		6107275	1					
ANR	6107316	CFGEntryNode	ENTRY		6107275		True				
ANR	6107317	CFGExitNode	EXIT		6107275		True				
ANR	6107318	Symbol	s		6107275						
ANR	6107319	Symbol	len		6107275						
ANR	6107320	Symbol	h		6107275						
ANR	6107321	Symbol	* s		6107275						
ANR	6107322	Symbol	CDB_HASHSTART		6107275						
ANR	6107323	Function	sdb_hash	88:0:1803:1874							
ANR	6107324	FunctionDef	sdb_hash (const char * s)		6107323	0					
ANR	6107325	CompoundStatement		88:37:1840:1874	6107323	0					
ANR	6107326	ReturnStatement	"return sdb_hash_len ( s , NULL ) ;"	89:1:1843:1872	6107323	0	True				
ANR	6107327	CallExpression	"sdb_hash_len ( s , NULL )"		6107323	0					
ANR	6107328	Callee	sdb_hash_len		6107323	0					
ANR	6107329	Identifier	sdb_hash_len		6107323	0					
ANR	6107330	ArgumentList	s		6107323	1					
ANR	6107331	Argument	s		6107323	0					
ANR	6107332	Identifier	s		6107323	0					
ANR	6107333	Argument	NULL		6107323	1					
ANR	6107334	Identifier	NULL		6107323	0					
ANR	6107335	ReturnType	SDB_API ut32		6107323	1					
ANR	6107336	Identifier	sdb_hash		6107323	2					
ANR	6107337	ParameterList	const char * s		6107323	3					
ANR	6107338	Parameter	const char * s	88:22:1825:1837	6107323	0	True				
ANR	6107339	ParameterType	const char *		6107323	0					
ANR	6107340	Identifier	s		6107323	1					
ANR	6107341	CFGEntryNode	ENTRY		6107323		True				
ANR	6107342	CFGExitNode	EXIT		6107323		True				
ANR	6107343	Symbol	s		6107323						
ANR	6107344	Symbol	NULL		6107323						
ANR	6107345	Symbol	sdb_hash_len		6107323						
ANR	6107346	Function	sdb_hash_byte	92:0:1877:2033							
ANR	6107347	FunctionDef	sdb_hash_byte (const char * s)		6107346	0					
ANR	6107348	CompoundStatement		92:41:1918:2033	6107346	0					
ANR	6107349	IdentifierDeclStatement	"const ut32 hash = sdb_hash_len ( s , NULL ) ;"	93:1:1921:1961	6107346	0	True				
ANR	6107350	IdentifierDecl	"hash = sdb_hash_len ( s , NULL )"		6107346	0					
ANR	6107351	IdentifierDeclType	const ut32		6107346	0					
ANR	6107352	Identifier	hash		6107346	1					
ANR	6107353	AssignmentExpression	"hash = sdb_hash_len ( s , NULL )"		6107346	2		=			
ANR	6107354	Identifier	hash		6107346	0					
ANR	6107355	CallExpression	"sdb_hash_len ( s , NULL )"		6107346	1					
ANR	6107356	Callee	sdb_hash_len		6107346	0					
ANR	6107357	Identifier	sdb_hash_len		6107346	0					
ANR	6107358	ArgumentList	s		6107346	1					
ANR	6107359	Argument	s		6107346	0					
ANR	6107360	Identifier	s		6107346	0					
ANR	6107361	Argument	NULL		6107346	1					
ANR	6107362	Identifier	NULL		6107346	0					
ANR	6107363	IdentifierDeclStatement	const ut8 * h = ( const ut8 * ) & hash ;	94:1:1964:1996	6107346	1	True				
ANR	6107364	IdentifierDecl	* h = ( const ut8 * ) & hash		6107346	0					
ANR	6107365	IdentifierDeclType	const ut8 *		6107346	0					
ANR	6107366	Identifier	h		6107346	1					
ANR	6107367	AssignmentExpression	* h = ( const ut8 * ) & hash		6107346	2		=			
ANR	6107368	Identifier	h		6107346	0					
ANR	6107369	CastExpression	( const ut8 * ) & hash		6107346	1					
ANR	6107370	CastTarget	const ut8 *		6107346	0					
ANR	6107371	UnaryOperationExpression	& hash		6107346	1					
ANR	6107372	UnaryOperator	&		6107346	0					
ANR	6107373	Identifier	hash		6107346	1					
ANR	6107374	ReturnStatement	return h [ 0 ] ^ h [ 1 ] ^ h [ 2 ] ^ h [ 3 ] ;	95:1:1999:2031	6107346	2	True				
ANR	6107375	ExclusiveOrExpression	h [ 0 ] ^ h [ 1 ] ^ h [ 2 ] ^ h [ 3 ]		6107346	0		^			
ANR	6107376	ArrayIndexing	h [ 0 ]		6107346	0					
ANR	6107377	Identifier	h		6107346	0					
ANR	6107378	PrimaryExpression	0		6107346	1					
ANR	6107379	ExclusiveOrExpression	h [ 1 ] ^ h [ 2 ] ^ h [ 3 ]		6107346	1		^			
ANR	6107380	ArrayIndexing	h [ 1 ]		6107346	0					
ANR	6107381	Identifier	h		6107346	0					
ANR	6107382	PrimaryExpression	1		6107346	1					
ANR	6107383	ExclusiveOrExpression	h [ 2 ] ^ h [ 3 ]		6107346	1		^			
ANR	6107384	ArrayIndexing	h [ 2 ]		6107346	0					
ANR	6107385	Identifier	h		6107346	0					
ANR	6107386	PrimaryExpression	2		6107346	1					
ANR	6107387	ArrayIndexing	h [ 3 ]		6107346	1					
ANR	6107388	Identifier	h		6107346	0					
ANR	6107389	PrimaryExpression	3		6107346	1					
ANR	6107390	ReturnType	SDB_API ut8		6107346	1					
ANR	6107391	Identifier	sdb_hash_byte		6107346	2					
ANR	6107392	ParameterList	const char * s		6107346	3					
ANR	6107393	Parameter	const char * s	92:26:1903:1915	6107346	0	True				
ANR	6107394	ParameterType	const char *		6107346	0					
ANR	6107395	Identifier	s		6107346	1					
ANR	6107396	CFGEntryNode	ENTRY		6107346		True				
ANR	6107397	CFGExitNode	EXIT		6107346		True				
ANR	6107398	Symbol	* h		6107346						
ANR	6107399	Symbol	s		6107346						
ANR	6107400	Symbol	NULL		6107346						
ANR	6107401	Symbol	& hash		6107346						
ANR	6107402	Symbol	h		6107346						
ANR	6107403	Symbol	sdb_hash_len		6107346						
ANR	6107404	Symbol	hash		6107346						
ANR	6107405	Function	sdb_itoca	98:8:2044:2118							
ANR	6107406	FunctionDef	sdb_itoca (ut64 n)		6107405	0					
ANR	6107407	CompoundStatement		98:38:2074:2118	6107405	0					
ANR	6107408	ReturnStatement	"return sdb_itoa ( n , sdb_fmt ( NULL ) , 16 ) ;"	99:1:2077:2116	6107405	0	True				
ANR	6107409	CallExpression	"sdb_itoa ( n , sdb_fmt ( NULL ) , 16 )"		6107405	0					
ANR	6107410	Callee	sdb_itoa		6107405	0					
ANR	6107411	Identifier	sdb_itoa		6107405	0					
ANR	6107412	ArgumentList	n		6107405	1					
ANR	6107413	Argument	n		6107405	0					
ANR	6107414	Identifier	n		6107405	0					
ANR	6107415	Argument	sdb_fmt ( NULL )		6107405	1					
ANR	6107416	CallExpression	sdb_fmt ( NULL )		6107405	0					
ANR	6107417	Callee	sdb_fmt		6107405	0					
ANR	6107418	Identifier	sdb_fmt		6107405	0					
ANR	6107419	ArgumentList	NULL		6107405	1					
ANR	6107420	Argument	NULL		6107405	0					
ANR	6107421	Identifier	NULL		6107405	0					
ANR	6107422	Argument	16		6107405	2					
ANR	6107423	PrimaryExpression	16		6107405	0					
ANR	6107424	ReturnType	const char *		6107405	1					
ANR	6107425	Identifier	sdb_itoca		6107405	2					
ANR	6107426	ParameterList	ut64 n		6107405	3					
ANR	6107427	Parameter	ut64 n	98:30:2066:2071	6107405	0	True				
ANR	6107428	ParameterType	ut64		6107405	0					
ANR	6107429	Identifier	n		6107405	1					
ANR	6107430	CFGEntryNode	ENTRY		6107405		True				
ANR	6107431	CFGExitNode	EXIT		6107405		True				
ANR	6107432	Symbol	NULL		6107405						
ANR	6107433	Symbol	sdb_itoa		6107405						
ANR	6107434	Symbol	sdb_fmt		6107405						
ANR	6107435	Symbol	n		6107405						
ANR	6107436	Function	sdb_itoa	104:0:2201:3117							
ANR	6107437	FunctionDef	"sdb_itoa (ut64 n , char * s , int base)"		6107436	0					
ANR	6107438	CompoundStatement		104:50:2251:3117	6107436	0					
ANR	6107439	Statement	static	105:1:2254:2259	6107436	0	True				
ANR	6107440	IdentifierDeclStatement	"const char * lookup = ""0123456789abcdef"" ;"	105:8:2261:2300	6107436	1	True				
ANR	6107441	IdentifierDecl	"* lookup = ""0123456789abcdef"""		6107436	0					
ANR	6107442	IdentifierDeclType	const char *		6107436	0					
ANR	6107443	Identifier	lookup		6107436	1					
ANR	6107444	AssignmentExpression	"* lookup = ""0123456789abcdef"""		6107436	2		=			
ANR	6107445	Identifier	lookup		6107436	0					
ANR	6107446	PrimaryExpression	"""0123456789abcdef"""		6107436	1					
ANR	6107447	IdentifierDeclStatement	"char tmpbuf [ 64 ] , * os = NULL ;"	106:1:2303:2330	6107436	2	True				
ANR	6107448	IdentifierDecl	tmpbuf [ 64 ]		6107436	0					
ANR	6107449	IdentifierDeclType	char [ 64 ]		6107436	0					
ANR	6107450	Identifier	tmpbuf		6107436	1					
ANR	6107451	PrimaryExpression	64		6107436	2					
ANR	6107452	IdentifierDecl	* os = NULL		6107436	1					
ANR	6107453	IdentifierDeclType	char *		6107436	0					
ANR	6107454	Identifier	os		6107436	1					
ANR	6107455	AssignmentExpression	* os = NULL		6107436	2		=			
ANR	6107456	Identifier	NULL		6107436	0					
ANR	6107457	Identifier	NULL		6107436	1					
ANR	6107458	IdentifierDeclStatement	const int imax = 62 ;	107:1:2333:2352	6107436	3	True				
ANR	6107459	IdentifierDecl	imax = 62		6107436	0					
ANR	6107460	IdentifierDeclType	const int		6107436	0					
ANR	6107461	Identifier	imax		6107436	1					
ANR	6107462	AssignmentExpression	imax = 62		6107436	2		=			
ANR	6107463	Identifier	imax		6107436	0					
ANR	6107464	PrimaryExpression	62		6107436	1					
ANR	6107465	IdentifierDeclStatement	"int i = imax , copy_string = 1 ;"	108:1:2355:2384	6107436	4	True				
ANR	6107466	IdentifierDecl	i = imax		6107436	0					
ANR	6107467	IdentifierDeclType	int		6107436	0					
ANR	6107468	Identifier	i		6107436	1					
ANR	6107469	AssignmentExpression	i = imax		6107436	2		=			
ANR	6107470	Identifier	imax		6107436	0					
ANR	6107471	Identifier	imax		6107436	1					
ANR	6107472	IdentifierDecl	copy_string = 1		6107436	1					
ANR	6107473	IdentifierDeclType	int		6107436	0					
ANR	6107474	Identifier	copy_string		6107436	1					
ANR	6107475	AssignmentExpression	copy_string = 1		6107436	2		=			
ANR	6107476	Identifier	copy_string		6107436	0					
ANR	6107477	PrimaryExpression	1		6107436	1					
ANR	6107478	IfStatement	if ( s )		6107436	5					
ANR	6107479	Condition	s	109:5:2391:2391	6107436	0	True				
ANR	6107480	Identifier	s		6107436	0					
ANR	6107481	CompoundStatement		6:8:142:142	6107436	1					
ANR	6107482	ExpressionStatement	* s = 0	110:2:2398:2404	6107436	0	True				
ANR	6107483	AssignmentExpression	* s = 0		6107436	0		=			
ANR	6107484	UnaryOperationExpression	* s		6107436	0					
ANR	6107485	UnaryOperator	*		6107436	0					
ANR	6107486	Identifier	s		6107436	1					
ANR	6107487	PrimaryExpression	0		6107436	1					
ANR	6107488	ExpressionStatement	os = NULL	111:2:2408:2417	6107436	1	True				
ANR	6107489	AssignmentExpression	os = NULL		6107436	0		=			
ANR	6107490	Identifier	os		6107436	0					
ANR	6107491	Identifier	NULL		6107436	1					
ANR	6107492	ElseStatement	else		6107436	0					
ANR	6107493	CompoundStatement		9:8:175:175	6107436	0					
ANR	6107494	ExpressionStatement	os = s = tmpbuf	113:2:2431:2446	6107436	0	True				
ANR	6107495	AssignmentExpression	os = s = tmpbuf		6107436	0		=			
ANR	6107496	Identifier	os		6107436	0					
ANR	6107497	AssignmentExpression	s = tmpbuf		6107436	1		=			
ANR	6107498	Identifier	s		6107436	0					
ANR	6107499	Identifier	tmpbuf		6107436	1					
ANR	6107500	IfStatement	if ( base < 0 )		6107436	6					
ANR	6107501	Condition	base < 0	115:5:2456:2463	6107436	0	True				
ANR	6107502	RelationalExpression	base < 0		6107436	0		<			
ANR	6107503	Identifier	base		6107436	0					
ANR	6107504	PrimaryExpression	0		6107436	1					
ANR	6107505	CompoundStatement		12:15:214:214	6107436	1					
ANR	6107506	ExpressionStatement	copy_string = 0	116:2:2470:2485	6107436	0	True				
ANR	6107507	AssignmentExpression	copy_string = 0		6107436	0		=			
ANR	6107508	Identifier	copy_string		6107436	0					
ANR	6107509	PrimaryExpression	0		6107436	1					
ANR	6107510	ExpressionStatement	base = - base	117:2:2489:2501	6107436	1	True				
ANR	6107511	AssignmentExpression	base = - base		6107436	0		=			
ANR	6107512	Identifier	base		6107436	0					
ANR	6107513	UnaryOperationExpression	- base		6107436	1					
ANR	6107514	UnaryOperator	-		6107436	0					
ANR	6107515	Identifier	base		6107436	1					
ANR	6107516	IfStatement	if ( ( base > 16 ) || ( base < 1 ) )		6107436	7					
ANR	6107517	Condition	( base > 16 ) || ( base < 1 )	119:5:2511:2535	6107436	0	True				
ANR	6107518	OrExpression	( base > 16 ) || ( base < 1 )		6107436	0		||			
ANR	6107519	RelationalExpression	base > 16		6107436	0		>			
ANR	6107520	Identifier	base		6107436	0					
ANR	6107521	PrimaryExpression	16		6107436	1					
ANR	6107522	RelationalExpression	base < 1		6107436	1		<			
ANR	6107523	Identifier	base		6107436	0					
ANR	6107524	PrimaryExpression	1		6107436	1					
ANR	6107525	CompoundStatement		16:32:286:286	6107436	1					
ANR	6107526	ReturnStatement	return NULL ;	120:2:2542:2553	6107436	0	True				
ANR	6107527	Identifier	NULL		6107436	0					
ANR	6107528	IfStatement	if ( ! n )		6107436	8					
ANR	6107529	Condition	! n	122:5:2563:2564	6107436	0	True				
ANR	6107530	UnaryOperationExpression	! n		6107436	0					
ANR	6107531	UnaryOperator	!		6107436	0					
ANR	6107532	Identifier	n		6107436	1					
ANR	6107533	CompoundStatement		19:9:315:315	6107436	1					
ANR	6107534	IfStatement	if ( os )		6107436	0					
ANR	6107535	Condition	os	123:6:2575:2576	6107436	0	True				
ANR	6107536	Identifier	os		6107436	0					
ANR	6107537	CompoundStatement		20:10:327:327	6107436	1					
ANR	6107538	ReturnStatement	"return strdup ( ""0"" ) ;"	124:3:2584:2603	6107436	0	True				
ANR	6107539	CallExpression	"strdup ( ""0"" )"		6107436	0					
ANR	6107540	Callee	strdup		6107436	0					
ANR	6107541	Identifier	strdup		6107436	0					
ANR	6107542	ArgumentList	"""0"""		6107436	1					
ANR	6107543	Argument	"""0"""		6107436	0					
ANR	6107544	PrimaryExpression	"""0"""		6107436	0					
ANR	6107545	ExpressionStatement	"strcpy ( s , ""0"" )"	126:2:2611:2626	6107436	1	True				
ANR	6107546	CallExpression	"strcpy ( s , ""0"" )"		6107436	0					
ANR	6107547	Callee	strcpy		6107436	0					
ANR	6107548	Identifier	strcpy		6107436	0					
ANR	6107549	ArgumentList	s		6107436	1					
ANR	6107550	Argument	s		6107436	0					
ANR	6107551	Identifier	s		6107436	0					
ANR	6107552	Argument	"""0"""		6107436	1					
ANR	6107553	PrimaryExpression	"""0"""		6107436	0					
ANR	6107554	ReturnStatement	return s ;	127:2:2630:2638	6107436	2	True				
ANR	6107555	Identifier	s		6107436	0					
ANR	6107556	ExpressionStatement	s [ imax + 1 ] = '\\0'	129:1:2644:2662	6107436	9	True				
ANR	6107557	AssignmentExpression	s [ imax + 1 ] = '\\0'		6107436	0		=			
ANR	6107558	ArrayIndexing	s [ imax + 1 ]		6107436	0					
ANR	6107559	Identifier	s		6107436	0					
ANR	6107560	AdditiveExpression	imax + 1		6107436	1		+			
ANR	6107561	Identifier	imax		6107436	0					
ANR	6107562	PrimaryExpression	1		6107436	1					
ANR	6107563	PrimaryExpression	'\\0'		6107436	1					
ANR	6107564	IfStatement	if ( base <= 10 )		6107436	10					
ANR	6107565	Condition	base <= 10	130:5:2669:2678	6107436	0	True				
ANR	6107566	RelationalExpression	base <= 10		6107436	0		<=			
ANR	6107567	Identifier	base		6107436	0					
ANR	6107568	PrimaryExpression	10		6107436	1					
ANR	6107569	CompoundStatement		27:17:429:429	6107436	1					
ANR	6107570	ForStatement	for ( ; n && i > 0 ; n /= base )		6107436	0					
ANR	6107571	Condition	n && i > 0	131:9:2692:2701	6107436	0	True				
ANR	6107572	AndExpression	n && i > 0		6107436	0		&&			
ANR	6107573	Identifier	n		6107436	0					
ANR	6107574	RelationalExpression	i > 0		6107436	1		>			
ANR	6107575	Identifier	i		6107436	0					
ANR	6107576	PrimaryExpression	0		6107436	1					
ANR	6107577	AssignmentExpression	n /= base	131:21:2704:2712	6107436	1	True	/=			
ANR	6107578	Identifier	n		6107436	0					
ANR	6107579	Identifier	base		6107436	1					
ANR	6107580	CompoundStatement		28:32:463:463	6107436	2					
ANR	6107581	ExpressionStatement	s [ i -- ] = ( n % base ) + '0'	132:3:2720:2745	6107436	0	True				
ANR	6107582	AssignmentExpression	s [ i -- ] = ( n % base ) + '0'		6107436	0		=			
ANR	6107583	ArrayIndexing	s [ i -- ]		6107436	0					
ANR	6107584	Identifier	s		6107436	0					
ANR	6107585	PostIncDecOperationExpression	i --		6107436	1					
ANR	6107586	Identifier	i		6107436	0					
ANR	6107587	IncDec	--		6107436	1					
ANR	6107588	AdditiveExpression	( n % base ) + '0'		6107436	1		+			
ANR	6107589	MultiplicativeExpression	n % base		6107436	0		%			
ANR	6107590	Identifier	n		6107436	0					
ANR	6107591	Identifier	base		6107436	1					
ANR	6107592	PrimaryExpression	'0'		6107436	1					
ANR	6107593	ElseStatement	else		6107436	0					
ANR	6107594	CompoundStatement		31:8:507:507	6107436	0					
ANR	6107595	ForStatement	for ( ; n && i > 0 ; n /= base )		6107436	0					
ANR	6107596	Condition	n && i > 0	135:9:2770:2779	6107436	0	True				
ANR	6107597	AndExpression	n && i > 0		6107436	0		&&			
ANR	6107598	Identifier	n		6107436	0					
ANR	6107599	RelationalExpression	i > 0		6107436	1		>			
ANR	6107600	Identifier	i		6107436	0					
ANR	6107601	PrimaryExpression	0		6107436	1					
ANR	6107602	AssignmentExpression	n /= base	135:21:2782:2790	6107436	1	True	/=			
ANR	6107603	Identifier	n		6107436	0					
ANR	6107604	Identifier	base		6107436	1					
ANR	6107605	CompoundStatement		32:32:541:541	6107436	2					
ANR	6107606	ExpressionStatement	s [ i -- ] = lookup [ ( n % base ) ]	136:3:2798:2825	6107436	0	True				
ANR	6107607	AssignmentExpression	s [ i -- ] = lookup [ ( n % base ) ]		6107436	0		=			
ANR	6107608	ArrayIndexing	s [ i -- ]		6107436	0					
ANR	6107609	Identifier	s		6107436	0					
ANR	6107610	PostIncDecOperationExpression	i --		6107436	1					
ANR	6107611	Identifier	i		6107436	0					
ANR	6107612	IncDec	--		6107436	1					
ANR	6107613	ArrayIndexing	lookup [ ( n % base ) ]		6107436	1					
ANR	6107614	Identifier	lookup		6107436	0					
ANR	6107615	MultiplicativeExpression	n % base		6107436	1		%			
ANR	6107616	Identifier	n		6107436	0					
ANR	6107617	Identifier	base		6107436	1					
ANR	6107618	IfStatement	if ( i != imax )		6107436	1					
ANR	6107619	Condition	i != imax	138:6:2837:2845	6107436	0	True				
ANR	6107620	EqualityExpression	i != imax		6107436	0		!=			
ANR	6107621	Identifier	i		6107436	0					
ANR	6107622	Identifier	imax		6107436	1					
ANR	6107623	CompoundStatement		35:17:596:596	6107436	1					
ANR	6107624	ExpressionStatement	s [ i -- ] = 'x'	139:3:2853:2865	6107436	0	True				
ANR	6107625	AssignmentExpression	s [ i -- ] = 'x'		6107436	0		=			
ANR	6107626	ArrayIndexing	s [ i -- ]		6107436	0					
ANR	6107627	Identifier	s		6107436	0					
ANR	6107628	PostIncDecOperationExpression	i --		6107436	1					
ANR	6107629	Identifier	i		6107436	0					
ANR	6107630	IncDec	--		6107436	1					
ANR	6107631	PrimaryExpression	'x'		6107436	1					
ANR	6107632	ExpressionStatement	s [ i -- ] = '0'	141:2:2873:2885	6107436	2	True				
ANR	6107633	AssignmentExpression	s [ i -- ] = '0'		6107436	0		=			
ANR	6107634	ArrayIndexing	s [ i -- ]		6107436	0					
ANR	6107635	Identifier	s		6107436	0					
ANR	6107636	PostIncDecOperationExpression	i --		6107436	1					
ANR	6107637	Identifier	i		6107436	0					
ANR	6107638	IncDec	--		6107436	1					
ANR	6107639	PrimaryExpression	'0'		6107436	1					
ANR	6107640	IfStatement	if ( os )		6107436	11					
ANR	6107641	Condition	os	143:5:2895:2896	6107436	0	True				
ANR	6107642	Identifier	os		6107436	0					
ANR	6107643	CompoundStatement		40:9:647:647	6107436	1					
ANR	6107644	ReturnStatement	return strdup ( s + i + 1 ) ;	144:2:2903:2928	6107436	0	True				
ANR	6107645	CallExpression	strdup ( s + i + 1 )		6107436	0					
ANR	6107646	Callee	strdup		6107436	0					
ANR	6107647	Identifier	strdup		6107436	0					
ANR	6107648	ArgumentList	s + i + 1		6107436	1					
ANR	6107649	Argument	s + i + 1		6107436	0					
ANR	6107650	AdditiveExpression	s + i + 1		6107436	0		+			
ANR	6107651	Identifier	s		6107436	0					
ANR	6107652	AdditiveExpression	i + 1		6107436	1		+			
ANR	6107653	Identifier	i		6107436	0					
ANR	6107654	PrimaryExpression	1		6107436	1					
ANR	6107655	IfStatement	if ( copy_string )		6107436	12					
ANR	6107656	Condition	copy_string	146:5:2938:2948	6107436	0	True				
ANR	6107657	Identifier	copy_string		6107436	0					
ANR	6107658	CompoundStatement		43:18:699:699	6107436	1					
ANR	6107659	ExpressionStatement	"memmove ( s , s + i + 1 , strlen ( s + i + 1 ) + 1 )"	149:2:3035:3081	6107436	0	True				
ANR	6107660	CallExpression	"memmove ( s , s + i + 1 , strlen ( s + i + 1 ) + 1 )"		6107436	0					
ANR	6107661	Callee	memmove		6107436	0					
ANR	6107662	Identifier	memmove		6107436	0					
ANR	6107663	ArgumentList	s		6107436	1					
ANR	6107664	Argument	s		6107436	0					
ANR	6107665	Identifier	s		6107436	0					
ANR	6107666	Argument	s + i + 1		6107436	1					
ANR	6107667	AdditiveExpression	s + i + 1		6107436	0		+			
ANR	6107668	Identifier	s		6107436	0					
ANR	6107669	AdditiveExpression	i + 1		6107436	1		+			
ANR	6107670	Identifier	i		6107436	0					
ANR	6107671	PrimaryExpression	1		6107436	1					
ANR	6107672	Argument	strlen ( s + i + 1 ) + 1		6107436	2					
ANR	6107673	AdditiveExpression	strlen ( s + i + 1 ) + 1		6107436	0		+			
ANR	6107674	CallExpression	strlen ( s + i + 1 )		6107436	0					
ANR	6107675	Callee	strlen		6107436	0					
ANR	6107676	Identifier	strlen		6107436	0					
ANR	6107677	ArgumentList	s + i + 1		6107436	1					
ANR	6107678	Argument	s + i + 1		6107436	0					
ANR	6107679	AdditiveExpression	s + i + 1		6107436	0		+			
ANR	6107680	Identifier	s		6107436	0					
ANR	6107681	AdditiveExpression	i + 1		6107436	1		+			
ANR	6107682	Identifier	i		6107436	0					
ANR	6107683	PrimaryExpression	1		6107436	1					
ANR	6107684	PrimaryExpression	1		6107436	1					
ANR	6107685	ReturnStatement	return s ;	150:2:3085:3093	6107436	1	True				
ANR	6107686	Identifier	s		6107436	0					
ANR	6107687	ReturnStatement	return s + i + 1 ;	152:1:3099:3115	6107436	13	True				
ANR	6107688	AdditiveExpression	s + i + 1		6107436	0		+			
ANR	6107689	Identifier	s		6107436	0					
ANR	6107690	AdditiveExpression	i + 1		6107436	1		+			
ANR	6107691	Identifier	i		6107436	0					
ANR	6107692	PrimaryExpression	1		6107436	1					
ANR	6107693	ReturnType	SDB_API char *		6107436	1					
ANR	6107694	Identifier	sdb_itoa		6107436	2					
ANR	6107695	ParameterList	"ut64 n , char * s , int base"		6107436	3					
ANR	6107696	Parameter	ut64 n	104:23:2224:2229	6107436	0	True				
ANR	6107697	ParameterType	ut64		6107436	0					
ANR	6107698	Identifier	n		6107436	1					
ANR	6107699	Parameter	char * s	104:31:2232:2238	6107436	1	True				
ANR	6107700	ParameterType	char *		6107436	0					
ANR	6107701	Identifier	s		6107436	1					
ANR	6107702	Parameter	int base	104:40:2241:2248	6107436	2	True				
ANR	6107703	ParameterType	int		6107436	0					
ANR	6107704	Identifier	base		6107436	1					
ANR	6107705	CFGEntryNode	ENTRY		6107436		True				
ANR	6107706	CFGExitNode	EXIT		6107436		True				
ANR	6107707	Symbol	lookup		6107436						
ANR	6107708	Symbol	NULL		6107436						
ANR	6107709	Symbol	os		6107436						
ANR	6107710	Symbol	* lookup		6107436						
ANR	6107711	Symbol	i		6107436						
ANR	6107712	Symbol	imax		6107436						
ANR	6107713	Symbol	n		6107436						
ANR	6107714	Symbol	* imax		6107436						
ANR	6107715	Symbol	strlen		6107436						
ANR	6107716	Symbol	s		6107436						
ANR	6107717	Symbol	copy_string		6107436						
ANR	6107718	Symbol	* n		6107436						
ANR	6107719	Symbol	tmpbuf		6107436						
ANR	6107720	Symbol	strdup		6107436						
ANR	6107721	Symbol	* base		6107436						
ANR	6107722	Symbol	* s		6107436						
ANR	6107723	Symbol	base		6107436						
ANR	6107724	Function	sdb_atoi	155:0:3120:3271							
ANR	6107725	FunctionDef	sdb_atoi (const char * s)		6107724	0					
ANR	6107726	CompoundStatement		155:37:3157:3271	6107724	0					
ANR	6107727	IdentifierDeclStatement	char * p ;	156:1:3160:3167	6107724	0	True				
ANR	6107728	IdentifierDecl	* p		6107724	0					
ANR	6107729	IdentifierDeclType	char *		6107724	0					
ANR	6107730	Identifier	p		6107724	1					
ANR	6107731	IdentifierDeclStatement	ut64 ret ;	157:1:3170:3178	6107724	1	True				
ANR	6107732	IdentifierDecl	ret		6107724	0					
ANR	6107733	IdentifierDeclType	ut64		6107724	0					
ANR	6107734	Identifier	ret		6107724	1					
ANR	6107735	IfStatement	if ( ! s || * s == '-' )		6107724	2					
ANR	6107736	Condition	! s || * s == '-'	158:5:3185:3199	6107724	0	True				
ANR	6107737	OrExpression	! s || * s == '-'		6107724	0		||			
ANR	6107738	UnaryOperationExpression	! s		6107724	0					
ANR	6107739	UnaryOperator	!		6107724	0					
ANR	6107740	Identifier	s		6107724	1					
ANR	6107741	EqualityExpression	* s == '-'		6107724	1		==			
ANR	6107742	UnaryOperationExpression	* s		6107724	0					
ANR	6107743	UnaryOperator	*		6107724	0					
ANR	6107744	Identifier	s		6107724	1					
ANR	6107745	PrimaryExpression	'-'		6107724	1					
ANR	6107746	CompoundStatement		4:22:44:44	6107724	1					
ANR	6107747	Statement	return	159:2:3206:3211	6107724	0	True				
ANR	6107748	Statement	0L	159:9:3213:3214	6107724	1	True				
ANR	6107749	ExpressionStatement	L	159:11:3215:3216	6107724	2	True				
ANR	6107750	Identifier	L		6107724	0					
ANR	6107751	ExpressionStatement	"ret = strtoull ( s , & p , 0 )"	161:1:3222:3247	6107724	3	True				
ANR	6107752	AssignmentExpression	"ret = strtoull ( s , & p , 0 )"		6107724	0		=			
ANR	6107753	Identifier	ret		6107724	0					
ANR	6107754	CallExpression	"strtoull ( s , & p , 0 )"		6107724	1					
ANR	6107755	Callee	strtoull		6107724	0					
ANR	6107756	Identifier	strtoull		6107724	0					
ANR	6107757	ArgumentList	s		6107724	1					
ANR	6107758	Argument	s		6107724	0					
ANR	6107759	Identifier	s		6107724	0					
ANR	6107760	Argument	& p		6107724	1					
ANR	6107761	UnaryOperationExpression	& p		6107724	0					
ANR	6107762	UnaryOperator	&		6107724	0					
ANR	6107763	Identifier	p		6107724	1					
ANR	6107764	Argument	0		6107724	2					
ANR	6107765	PrimaryExpression	0		6107724	0					
ANR	6107766	Statement	return	162:1:3250:3255	6107724	4	True				
ANR	6107767	Statement	p	162:8:3257:3257	6107724	5	True				
ANR	6107768	Statement	?	162:10:3259:3259	6107724	6	True				
ANR	6107769	Label	ret :	162:12:3261:3264	6107724	7	True				
ANR	6107770	Identifier	ret		6107724	0					
ANR	6107771	Statement	0L	162:17:3266:3267	6107724	8	True				
ANR	6107772	ExpressionStatement	L	162:19:3268:3269	6107724	9	True				
ANR	6107773	Identifier	L		6107724	0					
ANR	6107774	ReturnType	SDB_API ut64		6107724	1					
ANR	6107775	Identifier	sdb_atoi		6107724	2					
ANR	6107776	ParameterList	const char * s		6107724	3					
ANR	6107777	Parameter	const char * s	155:22:3142:3154	6107724	0	True				
ANR	6107778	ParameterType	const char *		6107724	0					
ANR	6107779	Identifier	s		6107724	1					
ANR	6107780	CFGEntryNode	ENTRY		6107724		True				
ANR	6107781	CFGExitNode	EXIT		6107724		True				
ANR	6107782	Symbol	p		6107724						
ANR	6107783	Symbol	ret		6107724						
ANR	6107784	Symbol	strtoull		6107724						
ANR	6107785	Symbol	s		6107724						
ANR	6107786	Symbol	& p		6107724						
ANR	6107787	Symbol	* s		6107724						
ANR	6107788	Function	sdb_array_compact	166:0:3331:3574							
ANR	6107789	FunctionDef	sdb_array_compact (char * p)		6107788	0					
ANR	6107790	CompoundStatement		166:41:3372:3574	6107788	0					
ANR	6107791	IdentifierDeclStatement	char * e ;	167:1:3375:3382	6107788	0	True				
ANR	6107792	IdentifierDecl	* e		6107788	0					
ANR	6107793	IdentifierDeclType	char *		6107788	0					
ANR	6107794	Identifier	e		6107788	1					
ANR	6107795	WhileStatement	while ( * p )		6107788	1					
ANR	6107796	Condition	* p	169:8:3418:3419	6107788	0	True				
ANR	6107797	UnaryOperationExpression	* p		6107788	0					
ANR	6107798	UnaryOperator	*		6107788	0					
ANR	6107799	Identifier	p		6107788	1					
ANR	6107800	CompoundStatement		4:12:49:49	6107788	1					
ANR	6107801	IfStatement	"if ( ! strncmp ( p , "",,"" , 2 ) )"		6107788	0					
ANR	6107802	Condition	"! strncmp ( p , "",,"" , 2 )"	170:6:3430:3450	6107788	0	True				
ANR	6107803	UnaryOperationExpression	"! strncmp ( p , "",,"" , 2 )"		6107788	0					
ANR	6107804	UnaryOperator	!		6107788	0					
ANR	6107805	CallExpression	"strncmp ( p , "",,"" , 2 )"		6107788	1					
ANR	6107806	Callee	strncmp		6107788	0					
ANR	6107807	Identifier	strncmp		6107788	0					
ANR	6107808	ArgumentList	p		6107788	1					
ANR	6107809	Argument	p		6107788	0					
ANR	6107810	Identifier	p		6107788	0					
ANR	6107811	Argument	""",,"""		6107788	1					
ANR	6107812	PrimaryExpression	""",,"""		6107788	0					
ANR	6107813	Argument	2		6107788	2					
ANR	6107814	PrimaryExpression	2		6107788	0					
ANR	6107815	CompoundStatement		5:29:80:80	6107788	1					
ANR	6107816	ExpressionStatement	p ++	171:3:3458:3461	6107788	0	True				
ANR	6107817	PostIncDecOperationExpression	p ++		6107788	0					
ANR	6107818	Identifier	p		6107788	0					
ANR	6107819	IncDec	++		6107788	1					
ANR	6107820	ForStatement	"for ( e = p + 1 ; * e == ',' ; e ++ )"		6107788	1					
ANR	6107821	ForInit	e = p + 1 ;	172:8:3471:3480	6107788	0	True				
ANR	6107822	AssignmentExpression	e = p + 1		6107788	0		=			
ANR	6107823	Identifier	e		6107788	0					
ANR	6107824	AdditiveExpression	p + 1		6107788	1		+			
ANR	6107825	Identifier	p		6107788	0					
ANR	6107826	PrimaryExpression	1		6107788	1					
ANR	6107827	Condition	"* e == ','"	172:19:3482:3490	6107788	1	True				
ANR	6107828	EqualityExpression	"* e == ','"		6107788	0		==			
ANR	6107829	UnaryOperationExpression	* e		6107788	0					
ANR	6107830	UnaryOperator	*		6107788	0					
ANR	6107831	Identifier	e		6107788	1					
ANR	6107832	PrimaryExpression	"','"		6107788	1					
ANR	6107833	PostIncDecOperationExpression	e ++	172:30:3493:3495	6107788	2	True				
ANR	6107834	Identifier	e		6107788	0					
ANR	6107835	IncDec	++		6107788	1					
ANR	6107836	CompoundStatement		7:35:125:125	6107788	3					
ANR	6107837	ExpressionStatement		172:37:3500:3500	6107788	2	True				
ANR	6107838	ExpressionStatement	"memmove ( p , e , strlen ( e ) + 1 )"	173:3:3505:3535	6107788	3	True				
ANR	6107839	CallExpression	"memmove ( p , e , strlen ( e ) + 1 )"		6107788	0					
ANR	6107840	Callee	memmove		6107788	0					
ANR	6107841	Identifier	memmove		6107788	0					
ANR	6107842	ArgumentList	p		6107788	1					
ANR	6107843	Argument	p		6107788	0					
ANR	6107844	Identifier	p		6107788	0					
ANR	6107845	Argument	e		6107788	1					
ANR	6107846	Identifier	e		6107788	0					
ANR	6107847	Argument	strlen ( e ) + 1		6107788	2					
ANR	6107848	AdditiveExpression	strlen ( e ) + 1		6107788	0		+			
ANR	6107849	CallExpression	strlen ( e )		6107788	0					
ANR	6107850	Callee	strlen		6107788	0					
ANR	6107851	Identifier	strlen		6107788	0					
ANR	6107852	ArgumentList	e		6107788	1					
ANR	6107853	Argument	e		6107788	0					
ANR	6107854	Identifier	e		6107788	0					
ANR	6107855	PrimaryExpression	1		6107788	1					
ANR	6107856	ElseStatement	else		6107788	0					
ANR	6107857	CompoundStatement		9:9:173:173	6107788	0					
ANR	6107858	ExpressionStatement	p ++	175:3:3551:3554	6107788	0	True				
ANR	6107859	PostIncDecOperationExpression	p ++		6107788	0					
ANR	6107860	Identifier	p		6107788	0					
ANR	6107861	IncDec	++		6107788	1					
ANR	6107862	ReturnStatement	return p ;	178:1:3564:3572	6107788	2	True				
ANR	6107863	Identifier	p		6107788	0					
ANR	6107864	ReturnType	SDB_API char *		6107788	1					
ANR	6107865	Identifier	sdb_array_compact		6107788	2					
ANR	6107866	ParameterList	char * p		6107788	3					
ANR	6107867	Parameter	char * p	166:32:3363:3369	6107788	0	True				
ANR	6107868	ParameterType	char *		6107788	0					
ANR	6107869	Identifier	p		6107788	1					
ANR	6107870	CFGEntryNode	ENTRY		6107788		True				
ANR	6107871	CFGExitNode	EXIT		6107788		True				
ANR	6107872	Symbol	p		6107788						
ANR	6107873	Symbol	strncmp		6107788						
ANR	6107874	Symbol	strlen		6107788						
ANR	6107875	Symbol	e		6107788						
ANR	6107876	Symbol	* p		6107788						
ANR	6107877	Symbol	* e		6107788						
ANR	6107878	Function	sdb_aslice	182:0:3634:4109							
ANR	6107879	FunctionDef	"sdb_aslice (char * out , int from , int to)"		6107878	0					
ANR	6107880	CompoundStatement		182:54:3688:4109	6107878	0					
ANR	6107881	IdentifierDeclStatement	"int len , idx = 0 ;"	183:1:3691:3707	6107878	0	True				
ANR	6107882	IdentifierDecl	len		6107878	0					
ANR	6107883	IdentifierDeclType	int		6107878	0					
ANR	6107884	Identifier	len		6107878	1					
ANR	6107885	IdentifierDecl	idx = 0		6107878	1					
ANR	6107886	IdentifierDeclType	int		6107878	0					
ANR	6107887	Identifier	idx		6107878	1					
ANR	6107888	AssignmentExpression	idx = 0		6107878	2		=			
ANR	6107889	Identifier	idx		6107878	0					
ANR	6107890	PrimaryExpression	0		6107878	1					
ANR	6107891	IdentifierDeclStatement	char * str = NULL ;	184:1:3710:3726	6107878	1	True				
ANR	6107892	IdentifierDecl	* str = NULL		6107878	0					
ANR	6107893	IdentifierDeclType	char *		6107878	0					
ANR	6107894	Identifier	str		6107878	1					
ANR	6107895	AssignmentExpression	* str = NULL		6107878	2		=			
ANR	6107896	Identifier	NULL		6107878	0					
ANR	6107897	Identifier	NULL		6107878	1					
ANR	6107898	IdentifierDeclStatement	char * end = NULL ;	185:1:3729:3745	6107878	2	True				
ANR	6107899	IdentifierDecl	* end = NULL		6107878	0					
ANR	6107900	IdentifierDeclType	char *		6107878	0					
ANR	6107901	Identifier	end		6107878	1					
ANR	6107902	AssignmentExpression	* end = NULL		6107878	2		=			
ANR	6107903	Identifier	NULL		6107878	0					
ANR	6107904	Identifier	NULL		6107878	1					
ANR	6107905	IdentifierDeclStatement	char * p = out ;	186:1:3748:3761	6107878	3	True				
ANR	6107906	IdentifierDecl	* p = out		6107878	0					
ANR	6107907	IdentifierDeclType	char *		6107878	0					
ANR	6107908	Identifier	p		6107878	1					
ANR	6107909	AssignmentExpression	* p = out		6107878	2		=			
ANR	6107910	Identifier	out		6107878	0					
ANR	6107911	Identifier	out		6107878	1					
ANR	6107912	IfStatement	if ( from >= to )		6107878	4					
ANR	6107913	Condition	from >= to	187:5:3768:3777	6107878	0	True				
ANR	6107914	RelationalExpression	from >= to		6107878	0		>=			
ANR	6107915	Identifier	from		6107878	0					
ANR	6107916	Identifier	to		6107878	1					
ANR	6107917	CompoundStatement		6:17:91:91	6107878	1					
ANR	6107918	ReturnStatement	return NULL ;	188:2:3784:3795	6107878	0	True				
ANR	6107919	Identifier	NULL		6107878	0					
ANR	6107920	WhileStatement	while ( * p )		6107878	5					
ANR	6107921	Condition	* p	190:8:3808:3809	6107878	0	True				
ANR	6107922	UnaryOperationExpression	* p		6107878	0					
ANR	6107923	UnaryOperator	*		6107878	0					
ANR	6107924	Identifier	p		6107878	1					
ANR	6107925	CompoundStatement		9:12:123:123	6107878	1					
ANR	6107926	IfStatement	if ( ! str && idx == from )		6107878	0					
ANR	6107927	Condition	! str && idx == from	191:6:3820:3838	6107878	0	True				
ANR	6107928	AndExpression	! str && idx == from		6107878	0		&&			
ANR	6107929	UnaryOperationExpression	! str		6107878	0					
ANR	6107930	UnaryOperator	!		6107878	0					
ANR	6107931	Identifier	str		6107878	1					
ANR	6107932	EqualityExpression	idx == from		6107878	1		==			
ANR	6107933	Identifier	idx		6107878	0					
ANR	6107934	Identifier	from		6107878	1					
ANR	6107935	CompoundStatement		10:27:152:152	6107878	1					
ANR	6107936	ExpressionStatement	str = p	192:3:3846:3853	6107878	0	True				
ANR	6107937	AssignmentExpression	str = p		6107878	0		=			
ANR	6107938	Identifier	str		6107878	0					
ANR	6107939	Identifier	p		6107878	1					
ANR	6107940	IfStatement	if ( idx == to )		6107878	1					
ANR	6107941	Condition	idx == to	194:6:3865:3873	6107878	0	True				
ANR	6107942	EqualityExpression	idx == to		6107878	0		==			
ANR	6107943	Identifier	idx		6107878	0					
ANR	6107944	Identifier	to		6107878	1					
ANR	6107945	CompoundStatement		13:17:187:187	6107878	1					
ANR	6107946	ExpressionStatement	end = p	195:3:3881:3888	6107878	0	True				
ANR	6107947	AssignmentExpression	end = p		6107878	0		=			
ANR	6107948	Identifier	end		6107878	0					
ANR	6107949	Identifier	p		6107878	1					
ANR	6107950	BreakStatement	break ;	196:3:3893:3898	6107878	1	True				
ANR	6107951	IfStatement	"if ( * p == ',' )"		6107878	2					
ANR	6107952	Condition	"* p == ','"	198:6:3910:3918	6107878	0	True				
ANR	6107953	EqualityExpression	"* p == ','"		6107878	0		==			
ANR	6107954	UnaryOperationExpression	* p		6107878	0					
ANR	6107955	UnaryOperator	*		6107878	0					
ANR	6107956	Identifier	p		6107878	1					
ANR	6107957	PrimaryExpression	"','"		6107878	1					
ANR	6107958	CompoundStatement		17:17:232:232	6107878	1					
ANR	6107959	ExpressionStatement	idx ++	199:3:3926:3931	6107878	0	True				
ANR	6107960	PostIncDecOperationExpression	idx ++		6107878	0					
ANR	6107961	Identifier	idx		6107878	0					
ANR	6107962	IncDec	++		6107878	1					
ANR	6107963	ExpressionStatement	p ++	201:2:3939:3942	6107878	3	True				
ANR	6107964	PostIncDecOperationExpression	p ++		6107878	0					
ANR	6107965	Identifier	p		6107878	0					
ANR	6107966	IncDec	++		6107878	1					
ANR	6107967	IfStatement	if ( str )		6107878	6					
ANR	6107968	Condition	str	203:5:3952:3954	6107878	0	True				
ANR	6107969	Identifier	str		6107878	0					
ANR	6107970	CompoundStatement		22:10:268:268	6107878	1					
ANR	6107971	IfStatement	if ( ! end )		6107878	0					
ANR	6107972	Condition	! end	204:6:3965:3968	6107878	0	True				
ANR	6107973	UnaryOperationExpression	! end		6107878	0					
ANR	6107974	UnaryOperator	!		6107878	0					
ANR	6107975	Identifier	end		6107878	1					
ANR	6107976	CompoundStatement		23:12:282:282	6107878	1					
ANR	6107977	ExpressionStatement	end = str + strlen ( str )	205:3:3976:4000	6107878	0	True				
ANR	6107978	AssignmentExpression	end = str + strlen ( str )		6107878	0		=			
ANR	6107979	Identifier	end		6107878	0					
ANR	6107980	AdditiveExpression	str + strlen ( str )		6107878	1		+			
ANR	6107981	Identifier	str		6107878	0					
ANR	6107982	CallExpression	strlen ( str )		6107878	1					
ANR	6107983	Callee	strlen		6107878	0					
ANR	6107984	Identifier	strlen		6107878	0					
ANR	6107985	ArgumentList	str		6107878	1					
ANR	6107986	Argument	str		6107878	0					
ANR	6107987	Identifier	str		6107878	0					
ANR	6107988	ExpressionStatement	len = ( size_t ) ( end - str )	207:2:4008:4033	6107878	1	True				
ANR	6107989	AssignmentExpression	len = ( size_t ) ( end - str )		6107878	0		=			
ANR	6107990	Identifier	len		6107878	0					
ANR	6107991	CastExpression	( size_t ) ( end - str )		6107878	1					
ANR	6107992	CastTarget	size_t		6107878	0					
ANR	6107993	AdditiveExpression	end - str		6107878	1		-			
ANR	6107994	Identifier	end		6107878	0					
ANR	6107995	Identifier	str		6107878	1					
ANR	6107996	ExpressionStatement	"memmove ( out , str , len )"	208:2:4037:4060	6107878	2	True				
ANR	6107997	CallExpression	"memmove ( out , str , len )"		6107878	0					
ANR	6107998	Callee	memmove		6107878	0					
ANR	6107999	Identifier	memmove		6107878	0					
ANR	6108000	ArgumentList	out		6107878	1					
ANR	6108001	Argument	out		6107878	0					
ANR	6108002	Identifier	out		6107878	0					
ANR	6108003	Argument	str		6107878	1					
ANR	6108004	Identifier	str		6107878	0					
ANR	6108005	Argument	len		6107878	2					
ANR	6108006	Identifier	len		6107878	0					
ANR	6108007	ExpressionStatement	out [ len ] = 0	209:2:4064:4076	6107878	3	True				
ANR	6108008	AssignmentExpression	out [ len ] = 0		6107878	0		=			
ANR	6108009	ArrayIndexing	out [ len ]		6107878	0					
ANR	6108010	Identifier	out		6107878	0					
ANR	6108011	Identifier	len		6107878	1					
ANR	6108012	PrimaryExpression	0		6107878	1					
ANR	6108013	ReturnStatement	return out ;	210:2:4080:4090	6107878	4	True				
ANR	6108014	Identifier	out		6107878	0					
ANR	6108015	ReturnStatement	return NULL ;	212:1:4096:4107	6107878	7	True				
ANR	6108016	Identifier	NULL		6107878	0					
ANR	6108017	ReturnType	SDB_API char *		6107878	1					
ANR	6108018	Identifier	sdb_aslice		6107878	2					
ANR	6108019	ParameterList	"char * out , int from , int to"		6107878	3					
ANR	6108020	Parameter	char * out	182:25:3659:3667	6107878	0	True				
ANR	6108021	ParameterType	char *		6107878	0					
ANR	6108022	Identifier	out		6107878	1					
ANR	6108023	Parameter	int from	182:36:3670:3677	6107878	1	True				
ANR	6108024	ParameterType	int		6107878	0					
ANR	6108025	Identifier	from		6107878	1					
ANR	6108026	Parameter	int to	182:46:3680:3685	6107878	2	True				
ANR	6108027	ParameterType	int		6107878	0					
ANR	6108028	Identifier	to		6107878	1					
ANR	6108029	CFGEntryNode	ENTRY		6107878		True				
ANR	6108030	CFGExitNode	EXIT		6107878		True				
ANR	6108031	Symbol	NULL		6107878						
ANR	6108032	Symbol	out		6107878						
ANR	6108033	Symbol	str		6107878						
ANR	6108034	Symbol	p		6107878						
ANR	6108035	Symbol	strlen		6107878						
ANR	6108036	Symbol	len		6107878						
ANR	6108037	Symbol	* out		6107878						
ANR	6108038	Symbol	from		6107878						
ANR	6108039	Symbol	end		6107878						
ANR	6108040	Symbol	* p		6107878						
ANR	6108041	Symbol	to		6107878						
ANR	6108042	Symbol	idx		6107878						
ANR	6108043	Symbol	* len		6107878						
ANR	6108044	Function	sdb_alen	217:0:4220:4441							
ANR	6108045	FunctionDef	sdb_alen (const char * str)		6108044	0					
ANR	6108046	CompoundStatement		217:38:4258:4441	6108044	0					
ANR	6108047	IdentifierDeclStatement	int len = 1 ;	218:1:4261:4272	6108044	0	True				
ANR	6108048	IdentifierDecl	len = 1		6108044	0					
ANR	6108049	IdentifierDeclType	int		6108044	0					
ANR	6108050	Identifier	len		6108044	1					
ANR	6108051	AssignmentExpression	len = 1		6108044	2		=			
ANR	6108052	Identifier	len		6108044	0					
ANR	6108053	PrimaryExpression	1		6108044	1					
ANR	6108054	IdentifierDeclStatement	"const char * n , * p = str ;"	219:1:4275:4298	6108044	1	True				
ANR	6108055	IdentifierDecl	* n		6108044	0					
ANR	6108056	IdentifierDeclType	const char *		6108044	0					
ANR	6108057	Identifier	n		6108044	1					
ANR	6108058	IdentifierDecl	* p = str		6108044	1					
ANR	6108059	IdentifierDeclType	const char *		6108044	0					
ANR	6108060	Identifier	p		6108044	1					
ANR	6108061	AssignmentExpression	* p = str		6108044	2		=			
ANR	6108062	Identifier	str		6108044	0					
ANR	6108063	Identifier	str		6108044	1					
ANR	6108064	IfStatement	if ( ! p || ! * p )		6108044	2					
ANR	6108065	Condition	! p || ! * p	220:5:4305:4312	6108044	0	True				
ANR	6108066	OrExpression	! p || ! * p		6108044	0		||			
ANR	6108067	UnaryOperationExpression	! p		6108044	0					
ANR	6108068	UnaryOperator	!		6108044	0					
ANR	6108069	Identifier	p		6108044	1					
ANR	6108070	UnaryOperationExpression	! * p		6108044	1					
ANR	6108071	UnaryOperator	!		6108044	0					
ANR	6108072	UnaryOperationExpression	* p		6108044	1					
ANR	6108073	UnaryOperator	*		6108044	0					
ANR	6108074	Identifier	p		6108044	1					
ANR	6108075	CompoundStatement		4:15:56:56	6108044	1					
ANR	6108076	ReturnStatement	return 0 ;	221:2:4319:4327	6108044	0	True				
ANR	6108077	PrimaryExpression	0		6108044	0					
ANR	6108078	ForStatement	for ( len = 0 ; ; len ++ )		6108044	3					
ANR	6108079	ForInit	len = 0 ;	223:6:4338:4345	6108044	0	True				
ANR	6108080	AssignmentExpression	len = 0		6108044	0		=			
ANR	6108081	Identifier	len		6108044	0					
ANR	6108082	PrimaryExpression	0		6108044	1					
ANR	6108083	PostIncDecOperationExpression	len ++	223:17:4349:4353	6108044	1	True				
ANR	6108084	Identifier	len		6108044	0					
ANR	6108085	IncDec	++		6108044	1					
ANR	6108086	CompoundStatement		7:24:97:97	6108044	2					
ANR	6108087	ExpressionStatement	"n = strchr ( p , SDB_RS )"	224:2:4360:4382	6108044	0	True				
ANR	6108088	AssignmentExpression	"n = strchr ( p , SDB_RS )"		6108044	0		=			
ANR	6108089	Identifier	n		6108044	0					
ANR	6108090	CallExpression	"strchr ( p , SDB_RS )"		6108044	1					
ANR	6108091	Callee	strchr		6108044	0					
ANR	6108092	Identifier	strchr		6108044	0					
ANR	6108093	ArgumentList	p		6108044	1					
ANR	6108094	Argument	p		6108044	0					
ANR	6108095	Identifier	p		6108044	0					
ANR	6108096	Argument	SDB_RS		6108044	1					
ANR	6108097	Identifier	SDB_RS		6108044	0					
ANR	6108098	IfStatement	if ( ! n )		6108044	1					
ANR	6108099	Condition	! n	225:6:4390:4391	6108044	0	True				
ANR	6108100	UnaryOperationExpression	! n		6108044	0					
ANR	6108101	UnaryOperator	!		6108044	0					
ANR	6108102	Identifier	n		6108044	1					
ANR	6108103	CompoundStatement		9:10:135:135	6108044	1					
ANR	6108104	BreakStatement	break ;	226:3:4399:4404	6108044	0	True				
ANR	6108105	ExpressionStatement	p = n + 1	228:2:4412:4421	6108044	2	True				
ANR	6108106	AssignmentExpression	p = n + 1		6108044	0		=			
ANR	6108107	Identifier	p		6108044	0					
ANR	6108108	AdditiveExpression	n + 1		6108044	1		+			
ANR	6108109	Identifier	n		6108044	0					
ANR	6108110	PrimaryExpression	1		6108044	1					
ANR	6108111	ReturnStatement	return ++ len ;	230:1:4427:4439	6108044	4	True				
ANR	6108112	UnaryExpression	++ len		6108044	0					
ANR	6108113	IncDec	++		6108044	0					
ANR	6108114	Identifier	len		6108044	1					
ANR	6108115	ReturnType	SDB_API int		6108044	1					
ANR	6108116	Identifier	sdb_alen		6108044	2					
ANR	6108117	ParameterList	const char * str		6108044	3					
ANR	6108118	Parameter	const char * str	217:21:4241:4255	6108044	0	True				
ANR	6108119	ParameterType	const char *		6108044	0					
ANR	6108120	Identifier	str		6108044	1					
ANR	6108121	CFGEntryNode	ENTRY		6108044		True				
ANR	6108122	CFGExitNode	EXIT		6108044		True				
ANR	6108123	InfiniteForNode	true		6108044		True				
ANR	6108124	Symbol	str		6108044						
ANR	6108125	Symbol	p		6108044						
ANR	6108126	Symbol	SDB_RS		6108044						
ANR	6108127	Symbol	len		6108044						
ANR	6108128	Symbol	strchr		6108044						
ANR	6108129	Symbol	* p		6108044						
ANR	6108130	Symbol	n		6108044						
ANR	6108131	Function	sdb_alen_ignore_empty	233:0:4444:4772							
ANR	6108132	FunctionDef	sdb_alen_ignore_empty (const char * str)		6108131	0					
ANR	6108133	CompoundStatement		233:51:4495:4772	6108131	0					
ANR	6108134	IdentifierDeclStatement	int len = 1 ;	234:1:4498:4509	6108131	0	True				
ANR	6108135	IdentifierDecl	len = 1		6108131	0					
ANR	6108136	IdentifierDeclType	int		6108131	0					
ANR	6108137	Identifier	len		6108131	1					
ANR	6108138	AssignmentExpression	len = 1		6108131	2		=			
ANR	6108139	Identifier	len		6108131	0					
ANR	6108140	PrimaryExpression	1		6108131	1					
ANR	6108141	IdentifierDeclStatement	"const char * n , * p = str ;"	235:1:4512:4535	6108131	1	True				
ANR	6108142	IdentifierDecl	* n		6108131	0					
ANR	6108143	IdentifierDeclType	const char *		6108131	0					
ANR	6108144	Identifier	n		6108131	1					
ANR	6108145	IdentifierDecl	* p = str		6108131	1					
ANR	6108146	IdentifierDeclType	const char *		6108131	0					
ANR	6108147	Identifier	p		6108131	1					
ANR	6108148	AssignmentExpression	* p = str		6108131	2		=			
ANR	6108149	Identifier	str		6108131	0					
ANR	6108150	Identifier	str		6108131	1					
ANR	6108151	IfStatement	if ( ! p || ! * p )		6108131	2					
ANR	6108152	Condition	! p || ! * p	236:5:4542:4550	6108131	0	True				
ANR	6108153	OrExpression	! p || ! * p		6108131	0		||			
ANR	6108154	UnaryOperationExpression	! p		6108131	0					
ANR	6108155	UnaryOperator	!		6108131	0					
ANR	6108156	Identifier	p		6108131	1					
ANR	6108157	UnaryOperationExpression	! * p		6108131	1					
ANR	6108158	UnaryOperator	!		6108131	0					
ANR	6108159	UnaryOperationExpression	* p		6108131	1					
ANR	6108160	UnaryOperator	*		6108131	0					
ANR	6108161	Identifier	p		6108131	1					
ANR	6108162	CompoundStatement		4:16:57:57	6108131	1					
ANR	6108163	ReturnStatement	return 0 ;	237:2:4557:4565	6108131	0	True				
ANR	6108164	PrimaryExpression	0		6108131	0					
ANR	6108165	WhileStatement	while ( * p == SDB_RS )		6108131	3					
ANR	6108166	Condition	* p == SDB_RS	239:8:4578:4589	6108131	0	True				
ANR	6108167	EqualityExpression	* p == SDB_RS		6108131	0		==			
ANR	6108168	UnaryOperationExpression	* p		6108131	0					
ANR	6108169	UnaryOperator	*		6108131	0					
ANR	6108170	Identifier	p		6108131	1					
ANR	6108171	Identifier	SDB_RS		6108131	1					
ANR	6108172	CompoundStatement		7:22:96:96	6108131	1					
ANR	6108173	ExpressionStatement	p ++	240:2:4596:4599	6108131	0	True				
ANR	6108174	PostIncDecOperationExpression	p ++		6108131	0					
ANR	6108175	Identifier	p		6108131	0					
ANR	6108176	IncDec	++		6108131	1					
ANR	6108177	ForStatement	for ( len = 0 ; ; )		6108131	4					
ANR	6108178	ForInit	len = 0 ;	242:6:4610:4617	6108131	0	True				
ANR	6108179	AssignmentExpression	len = 0		6108131	0		=			
ANR	6108180	Identifier	len		6108131	0					
ANR	6108181	PrimaryExpression	0		6108131	1					
ANR	6108182	CompoundStatement		10:19:127:127	6108131	1					
ANR	6108183	ExpressionStatement	"n = strchr ( p , SDB_RS )"	243:2:4627:4649	6108131	0	True				
ANR	6108184	AssignmentExpression	"n = strchr ( p , SDB_RS )"		6108131	0		=			
ANR	6108185	Identifier	n		6108131	0					
ANR	6108186	CallExpression	"strchr ( p , SDB_RS )"		6108131	1					
ANR	6108187	Callee	strchr		6108131	0					
ANR	6108188	Identifier	strchr		6108131	0					
ANR	6108189	ArgumentList	p		6108131	1					
ANR	6108190	Argument	p		6108131	0					
ANR	6108191	Identifier	p		6108131	0					
ANR	6108192	Argument	SDB_RS		6108131	1					
ANR	6108193	Identifier	SDB_RS		6108131	0					
ANR	6108194	IfStatement	if ( ! n )		6108131	1					
ANR	6108195	Condition	! n	244:6:4657:4658	6108131	0	True				
ANR	6108196	UnaryOperationExpression	! n		6108131	0					
ANR	6108197	UnaryOperator	!		6108131	0					
ANR	6108198	Identifier	n		6108131	1					
ANR	6108199	CompoundStatement		12:10:165:165	6108131	1					
ANR	6108200	BreakStatement	break ;	245:3:4666:4671	6108131	0	True				
ANR	6108201	ExpressionStatement	p = n + 1	247:2:4679:4688	6108131	2	True				
ANR	6108202	AssignmentExpression	p = n + 1		6108131	0		=			
ANR	6108203	Identifier	p		6108131	0					
ANR	6108204	AdditiveExpression	n + 1		6108131	1		+			
ANR	6108205	Identifier	n		6108131	0					
ANR	6108206	PrimaryExpression	1		6108131	1					
ANR	6108207	IfStatement	if ( * ( p ) == SDB_RS )		6108131	3					
ANR	6108208	Condition	* ( p ) == SDB_RS	248:6:4696:4709	6108131	0	True				
ANR	6108209	EqualityExpression	* ( p ) == SDB_RS		6108131	0		==			
ANR	6108210	UnaryOperationExpression	* ( p )		6108131	0					
ANR	6108211	UnaryOperator	*		6108131	0					
ANR	6108212	Identifier	p		6108131	1					
ANR	6108213	Identifier	SDB_RS		6108131	1					
ANR	6108214	CompoundStatement		16:22:216:216	6108131	1					
ANR	6108215	ContinueStatement	continue ;	249:3:4717:4725	6108131	0	True				
ANR	6108216	ExpressionStatement	len ++	251:2:4733:4738	6108131	4	True				
ANR	6108217	PostIncDecOperationExpression	len ++		6108131	0					
ANR	6108218	Identifier	len		6108131	0					
ANR	6108219	IncDec	++		6108131	1					
ANR	6108220	IfStatement	if ( * p )		6108131	5					
ANR	6108221	Condition	* p	253:5:4748:4749	6108131	0	True				
ANR	6108222	UnaryOperationExpression	* p		6108131	0					
ANR	6108223	UnaryOperator	*		6108131	0					
ANR	6108224	Identifier	p		6108131	1					
ANR	6108225	ExpressionStatement	len ++	253:9:4752:4757	6108131	1	True				
ANR	6108226	PostIncDecOperationExpression	len ++		6108131	0					
ANR	6108227	Identifier	len		6108131	0					
ANR	6108228	IncDec	++		6108131	1					
ANR	6108229	ReturnStatement	return len ;	254:1:4760:4770	6108131	6	True				
ANR	6108230	Identifier	len		6108131	0					
ANR	6108231	ReturnType	SDB_API int		6108131	1					
ANR	6108232	Identifier	sdb_alen_ignore_empty		6108131	2					
ANR	6108233	ParameterList	const char * str		6108131	3					
ANR	6108234	Parameter	const char * str	233:34:4478:4492	6108131	0	True				
ANR	6108235	ParameterType	const char *		6108131	0					
ANR	6108236	Identifier	str		6108131	1					
ANR	6108237	CFGEntryNode	ENTRY		6108131		True				
ANR	6108238	CFGExitNode	EXIT		6108131		True				
ANR	6108239	InfiniteForNode	true		6108131		True				
ANR	6108240	Symbol	str		6108131						
ANR	6108241	Symbol	p		6108131						
ANR	6108242	Symbol	SDB_RS		6108131						
ANR	6108243	Symbol	len		6108131						
ANR	6108244	Symbol	strchr		6108131						
ANR	6108245	Symbol	* p		6108131						
ANR	6108246	Symbol	n		6108131						
ANR	6108247	Symbol	* ( p )		6108131						
ANR	6108248	Function	sdb_anext	257:0:4775:4970							
ANR	6108249	FunctionDef	"sdb_anext (char * str , char * * next)"		6108248	0					
ANR	6108250	CompoundStatement		257:48:4823:4970	6108248	0					
ANR	6108251	IdentifierDeclStatement	"char * nxt , * p = strchr ( str , SDB_RS ) ;"	258:1:4826:4862	6108248	0	True				
ANR	6108252	IdentifierDecl	* nxt		6108248	0					
ANR	6108253	IdentifierDeclType	char *		6108248	0					
ANR	6108254	Identifier	nxt		6108248	1					
ANR	6108255	IdentifierDecl	"* p = strchr ( str , SDB_RS )"		6108248	1					
ANR	6108256	IdentifierDeclType	char *		6108248	0					
ANR	6108257	Identifier	p		6108248	1					
ANR	6108258	AssignmentExpression	"* p = strchr ( str , SDB_RS )"		6108248	2		=			
ANR	6108259	Identifier	p		6108248	0					
ANR	6108260	CallExpression	"strchr ( str , SDB_RS )"		6108248	1					
ANR	6108261	Callee	strchr		6108248	0					
ANR	6108262	Identifier	strchr		6108248	0					
ANR	6108263	ArgumentList	str		6108248	1					
ANR	6108264	Argument	str		6108248	0					
ANR	6108265	Identifier	str		6108248	0					
ANR	6108266	Argument	SDB_RS		6108248	1					
ANR	6108267	Identifier	SDB_RS		6108248	0					
ANR	6108268	IfStatement	if ( p )		6108248	1					
ANR	6108269	Condition	p	259:5:4869:4869	6108248	0	True				
ANR	6108270	Identifier	p		6108248	0					
ANR	6108271	CompoundStatement		3:8:48:48	6108248	1					
ANR	6108272	ExpressionStatement	* p = 0	260:2:4876:4882	6108248	0	True				
ANR	6108273	AssignmentExpression	* p = 0		6108248	0		=			
ANR	6108274	UnaryOperationExpression	* p		6108248	0					
ANR	6108275	UnaryOperator	*		6108248	0					
ANR	6108276	Identifier	p		6108248	1					
ANR	6108277	PrimaryExpression	0		6108248	1					
ANR	6108278	ExpressionStatement	nxt = p + 1	261:2:4886:4897	6108248	1	True				
ANR	6108279	AssignmentExpression	nxt = p + 1		6108248	0		=			
ANR	6108280	Identifier	nxt		6108248	0					
ANR	6108281	AdditiveExpression	p + 1		6108248	1		+			
ANR	6108282	Identifier	p		6108248	0					
ANR	6108283	PrimaryExpression	1		6108248	1					
ANR	6108284	ElseStatement	else		6108248	0					
ANR	6108285	CompoundStatement		6:8:83:83	6108248	0					
ANR	6108286	ExpressionStatement	nxt = NULL	263:2:4911:4921	6108248	0	True				
ANR	6108287	AssignmentExpression	nxt = NULL		6108248	0		=			
ANR	6108288	Identifier	nxt		6108248	0					
ANR	6108289	Identifier	NULL		6108248	1					
ANR	6108290	IfStatement	if ( next )		6108248	2					
ANR	6108291	Condition	next	265:5:4931:4934	6108248	0	True				
ANR	6108292	Identifier	next		6108248	0					
ANR	6108293	CompoundStatement		9:11:113:113	6108248	1					
ANR	6108294	ExpressionStatement	* next = nxt	266:2:4941:4952	6108248	0	True				
ANR	6108295	AssignmentExpression	* next = nxt		6108248	0		=			
ANR	6108296	UnaryOperationExpression	* next		6108248	0					
ANR	6108297	UnaryOperator	*		6108248	0					
ANR	6108298	Identifier	next		6108248	1					
ANR	6108299	Identifier	nxt		6108248	1					
ANR	6108300	ReturnStatement	return str ;	268:1:4958:4968	6108248	3	True				
ANR	6108301	Identifier	str		6108248	0					
ANR	6108302	ReturnType	SDB_API char *		6108248	1					
ANR	6108303	Identifier	sdb_anext		6108248	2					
ANR	6108304	ParameterList	"char * str , char * * next"		6108248	3					
ANR	6108305	Parameter	char * str	257:24:4799:4807	6108248	0	True				
ANR	6108306	ParameterType	char *		6108248	0					
ANR	6108307	Identifier	str		6108248	1					
ANR	6108308	Parameter	char * * next	257:35:4810:4820	6108248	1	True				
ANR	6108309	ParameterType	char * *		6108248	0					
ANR	6108310	Identifier	next		6108248	1					
ANR	6108311	CFGEntryNode	ENTRY		6108248		True				
ANR	6108312	CFGExitNode	EXIT		6108248		True				
ANR	6108313	Symbol	str		6108248						
ANR	6108314	Symbol	next		6108248						
ANR	6108315	Symbol	p		6108248						
ANR	6108316	Symbol	SDB_RS		6108248						
ANR	6108317	Symbol	NULL		6108248						
ANR	6108318	Symbol	strchr		6108248						
ANR	6108319	Symbol	* p		6108248						
ANR	6108320	Symbol	nxt		6108248						
ANR	6108321	Symbol	* next		6108248						
ANR	6108322	Function	sdb_const_anext	271:8:4981:5093							
ANR	6108323	FunctionDef	sdb_const_anext (const char * str)		6108322	0					
ANR	6108324	CompoundStatement		271:53:5026:5093	6108322	0					
ANR	6108325	IdentifierDeclStatement	"const char * p = strchr ( str , SDB_RS ) ;"	272:1:5029:5065	6108322	0	True				
ANR	6108326	IdentifierDecl	"* p = strchr ( str , SDB_RS )"		6108322	0					
ANR	6108327	IdentifierDeclType	const char *		6108322	0					
ANR	6108328	Identifier	p		6108322	1					
ANR	6108329	AssignmentExpression	"* p = strchr ( str , SDB_RS )"		6108322	2		=			
ANR	6108330	Identifier	p		6108322	0					
ANR	6108331	CallExpression	"strchr ( str , SDB_RS )"		6108322	1					
ANR	6108332	Callee	strchr		6108322	0					
ANR	6108333	Identifier	strchr		6108322	0					
ANR	6108334	ArgumentList	str		6108322	1					
ANR	6108335	Argument	str		6108322	0					
ANR	6108336	Identifier	str		6108322	0					
ANR	6108337	Argument	SDB_RS		6108322	1					
ANR	6108338	Identifier	SDB_RS		6108322	0					
ANR	6108339	ReturnStatement	return p ? p + 1 : NULL ;	273:1:5068:5091	6108322	1	True				
ANR	6108340	ConditionalExpression	p ? p + 1 : NULL		6108322	0					
ANR	6108341	Condition	p		6108322	0					
ANR	6108342	Identifier	p		6108322	0					
ANR	6108343	AdditiveExpression	p + 1		6108322	1		+			
ANR	6108344	Identifier	p		6108322	0					
ANR	6108345	PrimaryExpression	1		6108322	1					
ANR	6108346	Identifier	NULL		6108322	2					
ANR	6108347	ReturnType	const char *		6108322	1					
ANR	6108348	Identifier	sdb_const_anext		6108322	2					
ANR	6108349	ParameterList	const char * str		6108322	3					
ANR	6108350	Parameter	const char * str	271:36:5009:5023	6108322	0	True				
ANR	6108351	ParameterType	const char *		6108322	0					
ANR	6108352	Identifier	str		6108322	1					
ANR	6108353	CFGEntryNode	ENTRY		6108322		True				
ANR	6108354	CFGExitNode	EXIT		6108322		True				
ANR	6108355	Symbol	str		6108322						
ANR	6108356	Symbol	p		6108322						
ANR	6108357	Symbol	SDB_RS		6108322						
ANR	6108358	Symbol	NULL		6108322						
ANR	6108359	Symbol	strchr		6108322						
ANR	6108360	Function	sdb_now	276:0:5096:5342							
ANR	6108361	FunctionDef	sdb_now ()		6108360	0					
ANR	6108362	CompoundStatement		276:24:5120:5342	6108360	0					
ANR	6108363	IdentifierDeclStatement	struct timespec ts ;	278:1:5147:5165	6108360	0	True				
ANR	6108364	IdentifierDecl	ts		6108360	0					
ANR	6108365	IdentifierDeclType	struct timespec		6108360	0					
ANR	6108366	Identifier	ts		6108360	1					
ANR	6108367	IfStatement	"if ( ! clock_gettime ( CLOCK_MONOTONIC , & ts ) )"		6108360	1					
ANR	6108368	Condition	"! clock_gettime ( CLOCK_MONOTONIC , & ts )"	279:5:5172:5208	6108360	0	True				
ANR	6108369	UnaryOperationExpression	"! clock_gettime ( CLOCK_MONOTONIC , & ts )"		6108360	0					
ANR	6108370	UnaryOperator	!		6108360	0					
ANR	6108371	CallExpression	"clock_gettime ( CLOCK_MONOTONIC , & ts )"		6108360	1					
ANR	6108372	Callee	clock_gettime		6108360	0					
ANR	6108373	Identifier	clock_gettime		6108360	0					
ANR	6108374	ArgumentList	CLOCK_MONOTONIC		6108360	1					
ANR	6108375	Argument	CLOCK_MONOTONIC		6108360	0					
ANR	6108376	Identifier	CLOCK_MONOTONIC		6108360	0					
ANR	6108377	Argument	& ts		6108360	1					
ANR	6108378	UnaryOperationExpression	& ts		6108360	0					
ANR	6108379	UnaryOperator	&		6108360	0					
ANR	6108380	Identifier	ts		6108360	1					
ANR	6108381	CompoundStatement		4:44:90:90	6108360	1					
ANR	6108382	ReturnStatement	return ts . tv_sec ;	280:2:5215:5231	6108360	0	True				
ANR	6108383	MemberAccess	ts . tv_sec		6108360	0					
ANR	6108384	Identifier	ts		6108360	0					
ANR	6108385	Identifier	tv_sec		6108360	1					
ANR	6108386	Statement	return	288:1:5330:5335	6108360	2	True				
ANR	6108387	Statement	0L	288:8:5337:5338	6108360	3	True				
ANR	6108388	ExpressionStatement	L	288:10:5339:5340	6108360	4	True				
ANR	6108389	Identifier	L		6108360	0					
ANR	6108390	ReturnType	SDB_API ut64		6108360	1					
ANR	6108391	Identifier	sdb_now		6108360	2					
ANR	6108392	ParameterList			6108360	3					
ANR	6108393	CFGEntryNode	ENTRY		6108360		True				
ANR	6108394	CFGExitNode	EXIT		6108360		True				
ANR	6108395	Symbol	CLOCK_MONOTONIC		6108360						
ANR	6108396	Symbol	& ts		6108360						
ANR	6108397	Symbol	clock_gettime		6108360						
ANR	6108398	Symbol	ts		6108360						
ANR	6108399	Symbol	ts . tv_sec		6108360						
ANR	6108400	Function	sdb_unow	291:0:5345:5683							
ANR	6108401	FunctionDef	sdb_unow ()		6108400	0					
ANR	6108402	CompoundStatement		291:25:5370:5683	6108400	0					
ANR	6108403	Statement	ut64	292:1:5373:5376	6108400	0	True				
ANR	6108404	Statement	x	292:6:5378:5378	6108400	1	True				
ANR	6108405	Statement	=	292:8:5380:5380	6108400	2	True				
ANR	6108406	Statement	0L	292:10:5382:5383	6108400	3	True				
ANR	6108407	ExpressionStatement	L	292:12:5384:5385	6108400	4	True				
ANR	6108408	Identifier	L		6108400	0					
ANR	6108409	IdentifierDeclStatement	struct timespec ts ;	294:1:5412:5430	6108400	5	True				
ANR	6108410	IdentifierDecl	ts		6108400	0					
ANR	6108411	IdentifierDeclType	struct timespec		6108400	0					
ANR	6108412	Identifier	ts		6108400	1					
ANR	6108413	IfStatement	"if ( ! clock_gettime ( CLOCK_MONOTONIC , & ts ) )"		6108400	6					
ANR	6108414	Condition	"! clock_gettime ( CLOCK_MONOTONIC , & ts )"	295:5:5437:5473	6108400	0	True				
ANR	6108415	UnaryOperationExpression	"! clock_gettime ( CLOCK_MONOTONIC , & ts )"		6108400	0					
ANR	6108416	UnaryOperator	!		6108400	0					
ANR	6108417	CallExpression	"clock_gettime ( CLOCK_MONOTONIC , & ts )"		6108400	1					
ANR	6108418	Callee	clock_gettime		6108400	0					
ANR	6108419	Identifier	clock_gettime		6108400	0					
ANR	6108420	ArgumentList	CLOCK_MONOTONIC		6108400	1					
ANR	6108421	Argument	CLOCK_MONOTONIC		6108400	0					
ANR	6108422	Identifier	CLOCK_MONOTONIC		6108400	0					
ANR	6108423	Argument	& ts		6108400	1					
ANR	6108424	UnaryOperationExpression	& ts		6108400	0					
ANR	6108425	UnaryOperator	&		6108400	0					
ANR	6108426	Identifier	ts		6108400	1					
ANR	6108427	CompoundStatement		5:44:105:105	6108400	1					
ANR	6108428	ExpressionStatement	x = ts . tv_sec	296:2:5480:5493	6108400	0	True				
ANR	6108429	AssignmentExpression	x = ts . tv_sec		6108400	0		=			
ANR	6108430	Identifier	x		6108400	0					
ANR	6108431	MemberAccess	ts . tv_sec		6108400	1					
ANR	6108432	Identifier	ts		6108400	0					
ANR	6108433	Identifier	tv_sec		6108400	1					
ANR	6108434	ExpressionStatement	x <<= 32	297:2:5497:5505	6108400	1	True				
ANR	6108435	AssignmentExpression	x <<= 32		6108400	0		<<=			
ANR	6108436	Identifier	x		6108400	0					
ANR	6108437	PrimaryExpression	32		6108400	1					
ANR	6108438	ExpressionStatement	x += ts . tv_nsec / 1000	298:2:5509:5531	6108400	2	True				
ANR	6108439	AssignmentExpression	x += ts . tv_nsec / 1000		6108400	0		+=			
ANR	6108440	Identifier	x		6108400	0					
ANR	6108441	MultiplicativeExpression	ts . tv_nsec / 1000		6108400	1		/			
ANR	6108442	MemberAccess	ts . tv_nsec		6108400	0					
ANR	6108443	Identifier	ts		6108400	0					
ANR	6108444	Identifier	tv_nsec		6108400	1					
ANR	6108445	PrimaryExpression	1000		6108400	1					
ANR	6108446	ReturnStatement	return x ;	308:1:5673:5681	6108400	7	True				
ANR	6108447	Identifier	x		6108400	0					
ANR	6108448	ReturnType	SDB_API ut64		6108400	1					
ANR	6108449	Identifier	sdb_unow		6108400	2					
ANR	6108450	ParameterList			6108400	3					
ANR	6108451	CFGEntryNode	ENTRY		6108400		True				
ANR	6108452	CFGExitNode	EXIT		6108400		True				
ANR	6108453	Symbol	ts . tv_nsec		6108400						
ANR	6108454	Symbol	CLOCK_MONOTONIC		6108400						
ANR	6108455	Symbol	& ts		6108400						
ANR	6108456	Symbol	x		6108400						
ANR	6108457	Symbol	clock_gettime		6108400						
ANR	6108458	Symbol	ts		6108400						
ANR	6108459	Symbol	ts . tv_sec		6108400						
ANR	6108460	Function	sdb_isnum	311:0:5686:5810							
ANR	6108461	FunctionDef	sdb_isnum (const char * s)		6108460	0					
ANR	6108462	CompoundStatement		311:37:5723:5810	6108460	0					
ANR	6108463	IdentifierDeclStatement	const char vs = * s ;	312:1:5726:5744	6108460	0	True				
ANR	6108464	IdentifierDecl	vs = * s		6108460	0					
ANR	6108465	IdentifierDeclType	const char		6108460	0					
ANR	6108466	Identifier	vs		6108460	1					
ANR	6108467	AssignmentExpression	vs = * s		6108460	2		=			
ANR	6108468	Identifier	vs		6108460	0					
ANR	6108469	UnaryOperationExpression	* s		6108460	1					
ANR	6108470	UnaryOperator	*		6108460	0					
ANR	6108471	Identifier	s		6108460	1					
ANR	6108472	ReturnStatement	return ( ( vs == '-' || vs == '+' ) || ( vs >= '0' && vs <= '9' ) ) ;	313:1:5747:5808	6108460	1	True				
ANR	6108473	OrExpression	( vs == '-' || vs == '+' ) || ( vs >= '0' && vs <= '9' )		6108460	0		||			
ANR	6108474	OrExpression	vs == '-' || vs == '+'		6108460	0		||			
ANR	6108475	EqualityExpression	vs == '-'		6108460	0		==			
ANR	6108476	Identifier	vs		6108460	0					
ANR	6108477	PrimaryExpression	'-'		6108460	1					
ANR	6108478	EqualityExpression	vs == '+'		6108460	1		==			
ANR	6108479	Identifier	vs		6108460	0					
ANR	6108480	PrimaryExpression	'+'		6108460	1					
ANR	6108481	AndExpression	vs >= '0' && vs <= '9'		6108460	1		&&			
ANR	6108482	RelationalExpression	vs >= '0'		6108460	0		>=			
ANR	6108483	Identifier	vs		6108460	0					
ANR	6108484	PrimaryExpression	'0'		6108460	1					
ANR	6108485	RelationalExpression	vs <= '9'		6108460	1		<=			
ANR	6108486	Identifier	vs		6108460	0					
ANR	6108487	PrimaryExpression	'9'		6108460	1					
ANR	6108488	ReturnType	SDB_API int		6108460	1					
ANR	6108489	Identifier	sdb_isnum		6108460	2					
ANR	6108490	ParameterList	const char * s		6108460	3					
ANR	6108491	Parameter	const char * s	311:22:5708:5720	6108460	0	True				
ANR	6108492	ParameterType	const char *		6108460	0					
ANR	6108493	Identifier	s		6108460	1					
ANR	6108494	CFGEntryNode	ENTRY		6108460		True				
ANR	6108495	CFGExitNode	EXIT		6108460		True				
ANR	6108496	Symbol	s		6108460						
ANR	6108497	Symbol	* s		6108460						
ANR	6108498	Symbol	vs		6108460						
ANR	6108499	Function	sdb_num_base	316:0:5813:5973							
ANR	6108500	FunctionDef	sdb_num_base (const char * s)		6108499	0					
ANR	6108501	CompoundStatement		316:40:5853:5973	6108499	0					
ANR	6108502	IfStatement	if ( ! s )		6108499	0					
ANR	6108503	Condition	! s	317:5:5860:5861	6108499	0	True				
ANR	6108504	UnaryOperationExpression	! s		6108499	0					
ANR	6108505	UnaryOperator	!		6108499	0					
ANR	6108506	Identifier	s		6108499	1					
ANR	6108507	CompoundStatement		2:9:10:10	6108499	1					
ANR	6108508	ReturnStatement	return SDB_NUM_BASE ;	318:2:5868:5887	6108499	0	True				
ANR	6108509	Identifier	SDB_NUM_BASE		6108499	0					
ANR	6108510	IfStatement	"if ( ! strncmp ( s , ""0x"" , 2 ) )"		6108499	1					
ANR	6108511	Condition	"! strncmp ( s , ""0x"" , 2 )"	320:5:5897:5917	6108499	0	True				
ANR	6108512	UnaryOperationExpression	"! strncmp ( s , ""0x"" , 2 )"		6108499	0					
ANR	6108513	UnaryOperator	!		6108499	0					
ANR	6108514	CallExpression	"strncmp ( s , ""0x"" , 2 )"		6108499	1					
ANR	6108515	Callee	strncmp		6108499	0					
ANR	6108516	Identifier	strncmp		6108499	0					
ANR	6108517	ArgumentList	s		6108499	1					
ANR	6108518	Argument	s		6108499	0					
ANR	6108519	Identifier	s		6108499	0					
ANR	6108520	Argument	"""0x"""		6108499	1					
ANR	6108521	PrimaryExpression	"""0x"""		6108499	0					
ANR	6108522	Argument	2		6108499	2					
ANR	6108523	PrimaryExpression	2		6108499	0					
ANR	6108524	CompoundStatement		5:28:66:66	6108499	1					
ANR	6108525	ReturnStatement	return 16 ;	321:2:5924:5933	6108499	0	True				
ANR	6108526	PrimaryExpression	16		6108499	0					
ANR	6108527	ReturnStatement	return ( * s == '0' && s [ 1 ] ) ? 8 : 10 ;	323:1:5939:5971	6108499	2	True				
ANR	6108528	ConditionalExpression	( * s == '0' && s [ 1 ] ) ? 8 : 10		6108499	0					
ANR	6108529	Condition	* s == '0' && s [ 1 ]		6108499	0					
ANR	6108530	AndExpression	* s == '0' && s [ 1 ]		6108499	0		&&			
ANR	6108531	EqualityExpression	* s == '0'		6108499	0		==			
ANR	6108532	UnaryOperationExpression	* s		6108499	0					
ANR	6108533	UnaryOperator	*		6108499	0					
ANR	6108534	Identifier	s		6108499	1					
ANR	6108535	PrimaryExpression	'0'		6108499	1					
ANR	6108536	ArrayIndexing	s [ 1 ]		6108499	1					
ANR	6108537	Identifier	s		6108499	0					
ANR	6108538	PrimaryExpression	1		6108499	1					
ANR	6108539	PrimaryExpression	8		6108499	1					
ANR	6108540	PrimaryExpression	10		6108499	2					
ANR	6108541	ReturnType	SDB_API int		6108499	1					
ANR	6108542	Identifier	sdb_num_base		6108499	2					
ANR	6108543	ParameterList	const char * s		6108499	3					
ANR	6108544	Parameter	const char * s	316:25:5838:5850	6108499	0	True				
ANR	6108545	ParameterType	const char *		6108499	0					
ANR	6108546	Identifier	s		6108499	1					
ANR	6108547	CFGEntryNode	ENTRY		6108499		True				
ANR	6108548	CFGExitNode	EXIT		6108499		True				
ANR	6108549	Symbol	SDB_NUM_BASE		6108499						
ANR	6108550	Symbol	strncmp		6108499						
ANR	6108551	Symbol	s		6108499						
ANR	6108552	Symbol	* s		6108499						
ANR	6108553	Function	sdb_type	326:8:5984:6290							
ANR	6108554	FunctionDef	sdb_type (const char * k)		6108553	0					
ANR	6108555	CompoundStatement		326:44:6020:6290	6108553	0					
ANR	6108556	IfStatement	if ( ! k || ! * k )		6108553	0					
ANR	6108557	Condition	! k || ! * k	327:5:6027:6035	6108553	0	True				
ANR	6108558	OrExpression	! k || ! * k		6108553	0		||			
ANR	6108559	UnaryOperationExpression	! k		6108553	0					
ANR	6108560	UnaryOperator	!		6108553	0					
ANR	6108561	Identifier	k		6108553	1					
ANR	6108562	UnaryOperationExpression	! * k		6108553	1					
ANR	6108563	UnaryOperator	!		6108553	0					
ANR	6108564	UnaryOperationExpression	* k		6108553	1					
ANR	6108565	UnaryOperator	*		6108553	0					
ANR	6108566	Identifier	k		6108553	1					
ANR	6108567	CompoundStatement		2:16:17:17	6108553	1					
ANR	6108568	ReturnStatement	"return ""undefined"" ;"	328:2:6042:6060	6108553	0	True				
ANR	6108569	PrimaryExpression	"""undefined"""		6108553	0					
ANR	6108570	IfStatement	if ( sdb_isnum ( k ) )		6108553	1					
ANR	6108571	Condition	sdb_isnum ( k )	330:5:6070:6082	6108553	0	True				
ANR	6108572	CallExpression	sdb_isnum ( k )		6108553	0					
ANR	6108573	Callee	sdb_isnum		6108553	0					
ANR	6108574	Identifier	sdb_isnum		6108553	0					
ANR	6108575	ArgumentList	k		6108553	1					
ANR	6108576	Argument	k		6108553	0					
ANR	6108577	Identifier	k		6108553	0					
ANR	6108578	CompoundStatement		5:20:64:64	6108553	1					
ANR	6108579	ReturnStatement	"return ""number"" ;"	331:2:6089:6104	6108553	0	True				
ANR	6108580	PrimaryExpression	"""number"""		6108553	0					
ANR	6108581	IfStatement	if ( sdb_isjson ( k ) )		6108553	2					
ANR	6108582	Condition	sdb_isjson ( k )	333:5:6114:6127	6108553	0	True				
ANR	6108583	CallExpression	sdb_isjson ( k )		6108553	0					
ANR	6108584	Callee	sdb_isjson		6108553	0					
ANR	6108585	Identifier	sdb_isjson		6108553	0					
ANR	6108586	ArgumentList	k		6108553	1					
ANR	6108587	Argument	k		6108553	0					
ANR	6108588	Identifier	k		6108553	0					
ANR	6108589	CompoundStatement		8:21:109:109	6108553	1					
ANR	6108590	ReturnStatement	"return ""json"" ;"	334:2:6134:6147	6108553	0	True				
ANR	6108591	PrimaryExpression	"""json"""		6108553	0					
ANR	6108592	IfStatement	"if ( strchr ( k , ',' ) )"		6108553	3					
ANR	6108593	Condition	"strchr ( k , ',' )"	336:5:6157:6171	6108553	0	True				
ANR	6108594	CallExpression	"strchr ( k , ',' )"		6108553	0					
ANR	6108595	Callee	strchr		6108553	0					
ANR	6108596	Identifier	strchr		6108553	0					
ANR	6108597	ArgumentList	k		6108553	1					
ANR	6108598	Argument	k		6108553	0					
ANR	6108599	Identifier	k		6108553	0					
ANR	6108600	Argument	"','"		6108553	1					
ANR	6108601	PrimaryExpression	"','"		6108553	0					
ANR	6108602	CompoundStatement		11:22:153:153	6108553	1					
ANR	6108603	ReturnStatement	"return ""array"" ;"	337:2:6178:6192	6108553	0	True				
ANR	6108604	PrimaryExpression	"""array"""		6108553	0					
ANR	6108605	IfStatement	"if ( ! strcmp ( k , ""true"" ) || ! strcmp ( k , ""false"" ) )"		6108553	4					
ANR	6108606	Condition	"! strcmp ( k , ""true"" ) || ! strcmp ( k , ""false"" )"	339:5:6202:6244	6108553	0	True				
ANR	6108607	OrExpression	"! strcmp ( k , ""true"" ) || ! strcmp ( k , ""false"" )"		6108553	0		||			
ANR	6108608	UnaryOperationExpression	"! strcmp ( k , ""true"" )"		6108553	0					
ANR	6108609	UnaryOperator	!		6108553	0					
ANR	6108610	CallExpression	"strcmp ( k , ""true"" )"		6108553	1					
ANR	6108611	Callee	strcmp		6108553	0					
ANR	6108612	Identifier	strcmp		6108553	0					
ANR	6108613	ArgumentList	k		6108553	1					
ANR	6108614	Argument	k		6108553	0					
ANR	6108615	Identifier	k		6108553	0					
ANR	6108616	Argument	"""true"""		6108553	1					
ANR	6108617	PrimaryExpression	"""true"""		6108553	0					
ANR	6108618	UnaryOperationExpression	"! strcmp ( k , ""false"" )"		6108553	1					
ANR	6108619	UnaryOperator	!		6108553	0					
ANR	6108620	CallExpression	"strcmp ( k , ""false"" )"		6108553	1					
ANR	6108621	Callee	strcmp		6108553	0					
ANR	6108622	Identifier	strcmp		6108553	0					
ANR	6108623	ArgumentList	k		6108553	1					
ANR	6108624	Argument	k		6108553	0					
ANR	6108625	Identifier	k		6108553	0					
ANR	6108626	Argument	"""false"""		6108553	1					
ANR	6108627	PrimaryExpression	"""false"""		6108553	0					
ANR	6108628	CompoundStatement		14:50:226:226	6108553	1					
ANR	6108629	ReturnStatement	"return ""boolean"" ;"	340:2:6251:6267	6108553	0	True				
ANR	6108630	PrimaryExpression	"""boolean"""		6108553	0					
ANR	6108631	ReturnStatement	"return ""string"" ;"	342:1:6273:6288	6108553	5	True				
ANR	6108632	PrimaryExpression	"""string"""		6108553	0					
ANR	6108633	ReturnType	const char *		6108553	1					
ANR	6108634	Identifier	sdb_type		6108553	2					
ANR	6108635	ParameterList	const char * k		6108553	3					
ANR	6108636	Parameter	const char * k	326:29:6005:6017	6108553	0	True				
ANR	6108637	ParameterType	const char *		6108553	0					
ANR	6108638	Identifier	k		6108553	1					
ANR	6108639	CFGEntryNode	ENTRY		6108553		True				
ANR	6108640	CFGExitNode	EXIT		6108553		True				
ANR	6108641	Symbol	strcmp		6108553						
ANR	6108642	Symbol	* k		6108553						
ANR	6108643	Symbol	strchr		6108553						
ANR	6108644	Symbol	k		6108553						
ANR	6108645	Symbol	sdb_isnum		6108553						
ANR	6108646	Symbol	sdb_isjson		6108553						
ANR	6108647	Function	sdb_isjson	346:0:6323:6808							
ANR	6108648	FunctionDef	sdb_isjson (const char * k)		6108647	0					
ANR	6108649	CompoundStatement		346:40:6363:6808	6108647	0					
ANR	6108650	IdentifierDeclStatement	int level = 0 ;	347:1:6366:6379	6108647	0	True				
ANR	6108651	IdentifierDecl	level = 0		6108647	0					
ANR	6108652	IdentifierDeclType	int		6108647	0					
ANR	6108653	Identifier	level		6108647	1					
ANR	6108654	AssignmentExpression	level = 0		6108647	2		=			
ANR	6108655	Identifier	level		6108647	0					
ANR	6108656	PrimaryExpression	0		6108647	1					
ANR	6108657	IdentifierDeclStatement	bool quotes = false ;	348:1:6382:6401	6108647	1	True				
ANR	6108658	IdentifierDecl	quotes = false		6108647	0					
ANR	6108659	IdentifierDeclType	bool		6108647	0					
ANR	6108660	Identifier	quotes		6108647	1					
ANR	6108661	AssignmentExpression	quotes = false		6108647	2		=			
ANR	6108662	Identifier	false		6108647	0					
ANR	6108663	Identifier	false		6108647	1					
ANR	6108664	IfStatement	if ( ! k || ( * k != '{' && * k != '[' ) )		6108647	2					
ANR	6108665	Condition	! k || ( * k != '{' && * k != '[' )	349:5:6408:6437	6108647	0	True				
ANR	6108666	OrExpression	! k || ( * k != '{' && * k != '[' )		6108647	0		||			
ANR	6108667	UnaryOperationExpression	! k		6108647	0					
ANR	6108668	UnaryOperator	!		6108647	0					
ANR	6108669	Identifier	k		6108647	1					
ANR	6108670	AndExpression	* k != '{' && * k != '['		6108647	1		&&			
ANR	6108671	EqualityExpression	* k != '{'		6108647	0		!=			
ANR	6108672	UnaryOperationExpression	* k		6108647	0					
ANR	6108673	UnaryOperator	*		6108647	0					
ANR	6108674	Identifier	k		6108647	1					
ANR	6108675	PrimaryExpression	'{'		6108647	1					
ANR	6108676	EqualityExpression	* k != '['		6108647	1		!=			
ANR	6108677	UnaryOperationExpression	* k		6108647	0					
ANR	6108678	UnaryOperator	*		6108647	0					
ANR	6108679	Identifier	k		6108647	1					
ANR	6108680	PrimaryExpression	'['		6108647	1					
ANR	6108681	CompoundStatement		4:37:76:76	6108647	1					
ANR	6108682	ReturnStatement	return false ;	350:2:6444:6456	6108647	0	True				
ANR	6108683	Identifier	false		6108647	0					
ANR	6108684	ForStatement	for ( ; * k ; k ++ )		6108647	3					
ANR	6108685	Condition	* k	352:8:6469:6470	6108647	0	True				
ANR	6108686	UnaryOperationExpression	* k		6108647	0					
ANR	6108687	UnaryOperator	*		6108647	0					
ANR	6108688	Identifier	k		6108647	1					
ANR	6108689	PostIncDecOperationExpression	k ++	352:12:6473:6475	6108647	1	True				
ANR	6108690	Identifier	k		6108647	0					
ANR	6108691	IncDec	++		6108647	1					
ANR	6108692	CompoundStatement		7:17:114:114	6108647	2					
ANR	6108693	IfStatement	if ( quotes )		6108647	0					
ANR	6108694	Condition	quotes	353:6:6486:6491	6108647	0	True				
ANR	6108695	Identifier	quotes		6108647	0					
ANR	6108696	CompoundStatement		8:14:130:130	6108647	1					
ANR	6108697	IfStatement	"if ( * k == '""' )"		6108647	0					
ANR	6108698	Condition	"* k == '""'"	354:7:6503:6511	6108647	0	True				
ANR	6108699	EqualityExpression	"* k == '""'"		6108647	0		==			
ANR	6108700	UnaryOperationExpression	* k		6108647	0					
ANR	6108701	UnaryOperator	*		6108647	0					
ANR	6108702	Identifier	k		6108647	1					
ANR	6108703	PrimaryExpression	"'""'"		6108647	1					
ANR	6108704	CompoundStatement		9:18:150:150	6108647	1					
ANR	6108705	ExpressionStatement	quotes = false	355:4:6520:6534	6108647	0	True				
ANR	6108706	AssignmentExpression	quotes = false		6108647	0		=			
ANR	6108707	Identifier	quotes		6108647	0					
ANR	6108708	Identifier	false		6108647	1					
ANR	6108709	ContinueStatement	continue ;	357:3:6544:6552	6108647	1	True				
ANR	6108710	SwitchStatement	switch ( * k )		6108647	1					
ANR	6108711	Condition	* k	359:10:6568:6569	6108647	0	True				
ANR	6108712	UnaryOperationExpression	* k		6108647	0					
ANR	6108713	UnaryOperator	*		6108647	0					
ANR	6108714	Identifier	k		6108647	1					
ANR	6108715	CompoundStatement		14:14:208:208	6108647	1					
ANR	6108716	Label	"case '""' :"	360:2:6576:6584	6108647	0	True				
ANR	6108717	ExpressionStatement	quotes = true	361:3:6589:6602	6108647	1	True				
ANR	6108718	AssignmentExpression	quotes = true		6108647	0		=			
ANR	6108719	Identifier	quotes		6108647	0					
ANR	6108720	Identifier	true		6108647	1					
ANR	6108721	BreakStatement	break ;	362:3:6607:6612	6108647	2	True				
ANR	6108722	Label	case '[' :	363:2:6616:6624	6108647	3	True				
ANR	6108723	Label	case '{' :	364:2:6628:6636	6108647	4	True				
ANR	6108724	ExpressionStatement	level ++	365:3:6641:6648	6108647	5	True				
ANR	6108725	PostIncDecOperationExpression	level ++		6108647	0					
ANR	6108726	Identifier	level		6108647	0					
ANR	6108727	IncDec	++		6108647	1					
ANR	6108728	BreakStatement	break ;	366:3:6653:6658	6108647	6	True				
ANR	6108729	Label	case ']' :	367:2:6662:6670	6108647	7	True				
ANR	6108730	Label	case '}' :	368:2:6674:6682	6108647	8	True				
ANR	6108731	ExpressionStatement	level --	369:3:6687:6694	6108647	9	True				
ANR	6108732	PostIncDecOperationExpression	level --		6108647	0					
ANR	6108733	Identifier	level		6108647	0					
ANR	6108734	IncDec	--		6108647	1					
ANR	6108735	IfStatement	if ( level < 0 )		6108647	10					
ANR	6108736	Condition	level < 0	370:7:6703:6711	6108647	0	True				
ANR	6108737	RelationalExpression	level < 0		6108647	0		<			
ANR	6108738	Identifier	level		6108647	0					
ANR	6108739	PrimaryExpression	0		6108647	1					
ANR	6108740	CompoundStatement		25:18:350:350	6108647	1					
ANR	6108741	ReturnStatement	return false ;	372:4:6743:6755	6108647	0	True				
ANR	6108742	Identifier	false		6108647	0					
ANR	6108743	BreakStatement	break ;	374:3:6765:6770	6108647	11	True				
ANR	6108744	ReturnStatement	return ( ! quotes && ! level ) ;	377:1:6780:6806	6108647	4	True				
ANR	6108745	AndExpression	! quotes && ! level		6108647	0		&&			
ANR	6108746	UnaryOperationExpression	! quotes		6108647	0					
ANR	6108747	UnaryOperator	!		6108647	0					
ANR	6108748	Identifier	quotes		6108647	1					
ANR	6108749	UnaryOperationExpression	! level		6108647	1					
ANR	6108750	UnaryOperator	!		6108647	0					
ANR	6108751	Identifier	level		6108647	1					
ANR	6108752	ReturnType	SDB_API bool		6108647	1					
ANR	6108753	Identifier	sdb_isjson		6108647	2					
ANR	6108754	ParameterList	const char * k		6108647	3					
ANR	6108755	Parameter	const char * k	346:25:6348:6360	6108647	0	True				
ANR	6108756	ParameterType	const char *		6108647	0					
ANR	6108757	Identifier	k		6108647	1					
ANR	6108758	CFGEntryNode	ENTRY		6108647		True				
ANR	6108759	CFGExitNode	EXIT		6108647		True				
ANR	6108760	Symbol	level		6108647						
ANR	6108761	Symbol	* k		6108647						
ANR	6108762	Symbol	false		6108647						
ANR	6108763	Symbol	true		6108647						
ANR	6108764	Symbol	k		6108647						
ANR	6108765	Symbol	quotes		6108647						
