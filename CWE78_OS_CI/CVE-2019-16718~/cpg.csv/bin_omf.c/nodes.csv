command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	559820	File	data/converged/CVE-2019-16718~_radare2/bin_omf.c								
ANR	559821	Function	load_buffer	9:0:163:421							
ANR	559822	FunctionDef	"load_buffer (RBinFile * bf , void * * bin_obj , RBuffer * b , ut64 loadaddr , Sdb * sdb)"		559821	0					
ANR	559823	CompoundStatement		9:92:255:421	559821	0					
ANR	559824	IdentifierDeclStatement	ut64 size ;	10:1:258:267	559821	0	True				
ANR	559825	IdentifierDecl	size		559821	0					
ANR	559826	IdentifierDeclType	ut64		559821	0					
ANR	559827	Identifier	size		559821	1					
ANR	559828	IdentifierDeclStatement	"const ut8 * buf = r_buf_data ( b , & size ) ;"	11:1:270:308	559821	1	True				
ANR	559829	IdentifierDecl	"* buf = r_buf_data ( b , & size )"		559821	0					
ANR	559830	IdentifierDeclType	const ut8 *		559821	0					
ANR	559831	Identifier	buf		559821	1					
ANR	559832	AssignmentExpression	"* buf = r_buf_data ( b , & size )"		559821	2		=			
ANR	559833	Identifier	buf		559821	0					
ANR	559834	CallExpression	"r_buf_data ( b , & size )"		559821	1					
ANR	559835	Callee	r_buf_data		559821	0					
ANR	559836	Identifier	r_buf_data		559821	0					
ANR	559837	ArgumentList	b		559821	1					
ANR	559838	Argument	b		559821	0					
ANR	559839	Identifier	b		559821	0					
ANR	559840	Argument	& size		559821	1					
ANR	559841	UnaryOperationExpression	& size		559821	0					
ANR	559842	UnaryOperator	&		559821	0					
ANR	559843	Identifier	size		559821	1					
ANR	559844	ExpressionStatement	"r_return_val_if_fail ( buf , false )"	12:1:311:344	559821	2	True				
ANR	559845	CallExpression	"r_return_val_if_fail ( buf , false )"		559821	0					
ANR	559846	Callee	r_return_val_if_fail		559821	0					
ANR	559847	Identifier	r_return_val_if_fail		559821	0					
ANR	559848	ArgumentList	buf		559821	1					
ANR	559849	Argument	buf		559821	0					
ANR	559850	Identifier	buf		559821	0					
ANR	559851	Argument	false		559821	1					
ANR	559852	Identifier	false		559821	0					
ANR	559853	ExpressionStatement	"* bin_obj = r_bin_internal_omf_load ( buf , size )"	13:1:347:393	559821	3	True				
ANR	559854	AssignmentExpression	"* bin_obj = r_bin_internal_omf_load ( buf , size )"		559821	0		=			
ANR	559855	UnaryOperationExpression	* bin_obj		559821	0					
ANR	559856	UnaryOperator	*		559821	0					
ANR	559857	Identifier	bin_obj		559821	1					
ANR	559858	CallExpression	"r_bin_internal_omf_load ( buf , size )"		559821	1					
ANR	559859	Callee	r_bin_internal_omf_load		559821	0					
ANR	559860	Identifier	r_bin_internal_omf_load		559821	0					
ANR	559861	ArgumentList	buf		559821	1					
ANR	559862	Argument	buf		559821	0					
ANR	559863	Identifier	buf		559821	0					
ANR	559864	Argument	size		559821	1					
ANR	559865	Identifier	size		559821	0					
ANR	559866	ReturnStatement	return * bin_obj != NULL ;	14:1:396:419	559821	4	True				
ANR	559867	EqualityExpression	* bin_obj != NULL		559821	0		!=			
ANR	559868	UnaryOperationExpression	* bin_obj		559821	0					
ANR	559869	UnaryOperator	*		559821	0					
ANR	559870	Identifier	bin_obj		559821	1					
ANR	559871	Identifier	NULL		559821	1					
ANR	559872	ReturnType	static bool		559821	1					
ANR	559873	Identifier	load_buffer		559821	2					
ANR	559874	ParameterList	"RBinFile * bf , void * * bin_obj , RBuffer * b , ut64 loadaddr , Sdb * sdb"		559821	3					
ANR	559875	Parameter	RBinFile * bf	9:25:188:199	559821	0	True				
ANR	559876	ParameterType	RBinFile *		559821	0					
ANR	559877	Identifier	bf		559821	1					
ANR	559878	Parameter	void * * bin_obj	9:39:202:215	559821	1	True				
ANR	559879	ParameterType	void * *		559821	0					
ANR	559880	Identifier	bin_obj		559821	1					
ANR	559881	Parameter	RBuffer * b	9:55:218:227	559821	2	True				
ANR	559882	ParameterType	RBuffer *		559821	0					
ANR	559883	Identifier	b		559821	1					
ANR	559884	Parameter	ut64 loadaddr	9:67:230:242	559821	3	True				
ANR	559885	ParameterType	ut64		559821	0					
ANR	559886	Identifier	loadaddr		559821	1					
ANR	559887	Parameter	Sdb * sdb	9:82:245:252	559821	4	True				
ANR	559888	ParameterType	Sdb *		559821	0					
ANR	559889	Identifier	sdb		559821	1					
ANR	559890	CFGEntryNode	ENTRY		559821		True				
ANR	559891	CFGExitNode	EXIT		559821		True				
ANR	559892	Symbol	b		559821						
ANR	559893	Symbol	* bin_obj		559821						
ANR	559894	Symbol	NULL		559821						
ANR	559895	Symbol	bf		559821						
ANR	559896	Symbol	false		559821						
ANR	559897	Symbol	& size		559821						
ANR	559898	Symbol	loadaddr		559821						
ANR	559899	Symbol	sdb		559821						
ANR	559900	Symbol	buf		559821						
ANR	559901	Symbol	size		559821						
ANR	559902	Symbol	bin_obj		559821						
ANR	559903	Symbol	r_bin_internal_omf_load		559821						
ANR	559904	Symbol	r_buf_data		559821						
ANR	559905	Function	destroy	17:0:424:526							
ANR	559906	FunctionDef	destroy (RBinFile * bf)		559905	0					
ANR	559907	CompoundStatement		17:34:458:526	559905	0					
ANR	559908	ExpressionStatement	r_bin_free_all_omf_obj ( bf -> o -> bin_obj )	18:1:461:500	559905	0	True				
ANR	559909	CallExpression	r_bin_free_all_omf_obj ( bf -> o -> bin_obj )		559905	0					
ANR	559910	Callee	r_bin_free_all_omf_obj		559905	0					
ANR	559911	Identifier	r_bin_free_all_omf_obj		559905	0					
ANR	559912	ArgumentList	bf -> o -> bin_obj		559905	1					
ANR	559913	Argument	bf -> o -> bin_obj		559905	0					
ANR	559914	PtrMemberAccess	bf -> o -> bin_obj		559905	0					
ANR	559915	PtrMemberAccess	bf -> o		559905	0					
ANR	559916	Identifier	bf		559905	0					
ANR	559917	Identifier	o		559905	1					
ANR	559918	Identifier	bin_obj		559905	1					
ANR	559919	ExpressionStatement	bf -> o -> bin_obj = NULL	19:1:503:524	559905	1	True				
ANR	559920	AssignmentExpression	bf -> o -> bin_obj = NULL		559905	0		=			
ANR	559921	PtrMemberAccess	bf -> o -> bin_obj		559905	0					
ANR	559922	PtrMemberAccess	bf -> o		559905	0					
ANR	559923	Identifier	bf		559905	0					
ANR	559924	Identifier	o		559905	1					
ANR	559925	Identifier	bin_obj		559905	1					
ANR	559926	Identifier	NULL		559905	1					
ANR	559927	ReturnType	static void		559905	1					
ANR	559928	Identifier	destroy		559905	2					
ANR	559929	ParameterList	RBinFile * bf		559905	3					
ANR	559930	Parameter	RBinFile * bf	17:20:444:455	559905	0	True				
ANR	559931	ParameterType	RBinFile *		559905	0					
ANR	559932	Identifier	bf		559905	1					
ANR	559933	CFGEntryNode	ENTRY		559905		True				
ANR	559934	CFGExitNode	EXIT		559905		True				
ANR	559935	Symbol	bf -> o -> bin_obj		559905						
ANR	559936	Symbol	* * bf		559905						
ANR	559937	Symbol	NULL		559905						
ANR	559938	Symbol	bf		559905						
ANR	559939	Symbol	bf -> o		559905						
ANR	559940	Symbol	* bf		559905						
ANR	559941	Symbol	* bf -> o		559905						
ANR	559942	Function	check_buffer	22:0:529:1402							
ANR	559943	FunctionDef	check_buffer (RBuffer * b)		559942	0					
ANR	559944	CompoundStatement		22:37:566:1402	559942	0					
ANR	559945	IdentifierDeclStatement	int i ;	23:1:569:574	559942	0	True				
ANR	559946	IdentifierDecl	i		559942	0					
ANR	559947	IdentifierDeclType	int		559942	0					
ANR	559948	Identifier	i		559942	1					
ANR	559949	IdentifierDeclStatement	ut8 ch ;	24:1:577:583	559942	1	True				
ANR	559950	IdentifierDecl	ch		559942	0					
ANR	559951	IdentifierDeclType	ut8		559942	0					
ANR	559952	Identifier	ch		559942	1					
ANR	559953	IfStatement	"if ( r_buf_read_at ( b , 0 , & ch , 1 ) != 1 )"		559942	2					
ANR	559954	Condition	"r_buf_read_at ( b , 0 , & ch , 1 ) != 1"	25:5:590:622	559942	0	True				
ANR	559955	EqualityExpression	"r_buf_read_at ( b , 0 , & ch , 1 ) != 1"		559942	0		!=			
ANR	559956	CallExpression	"r_buf_read_at ( b , 0 , & ch , 1 )"		559942	0					
ANR	559957	Callee	r_buf_read_at		559942	0					
ANR	559958	Identifier	r_buf_read_at		559942	0					
ANR	559959	ArgumentList	b		559942	1					
ANR	559960	Argument	b		559942	0					
ANR	559961	Identifier	b		559942	0					
ANR	559962	Argument	0		559942	1					
ANR	559963	PrimaryExpression	0		559942	0					
ANR	559964	Argument	& ch		559942	2					
ANR	559965	UnaryOperationExpression	& ch		559942	0					
ANR	559966	UnaryOperator	&		559942	0					
ANR	559967	Identifier	ch		559942	1					
ANR	559968	Argument	1		559942	3					
ANR	559969	PrimaryExpression	1		559942	0					
ANR	559970	PrimaryExpression	1		559942	1					
ANR	559971	CompoundStatement		4:40:58:58	559942	1					
ANR	559972	ReturnStatement	return false ;	26:2:629:641	559942	0	True				
ANR	559973	Identifier	false		559942	0					
ANR	559974	IfStatement	if ( ch != 0x80 && ch != 0x82 )		559942	3					
ANR	559975	Condition	ch != 0x80 && ch != 0x82	28:5:651:674	559942	0	True				
ANR	559976	AndExpression	ch != 0x80 && ch != 0x82		559942	0		&&			
ANR	559977	EqualityExpression	ch != 0x80		559942	0		!=			
ANR	559978	Identifier	ch		559942	0					
ANR	559979	PrimaryExpression	0x80		559942	1					
ANR	559980	EqualityExpression	ch != 0x82		559942	1		!=			
ANR	559981	Identifier	ch		559942	0					
ANR	559982	PrimaryExpression	0x82		559942	1					
ANR	559983	CompoundStatement		7:31:110:110	559942	1					
ANR	559984	ReturnStatement	return false ;	29:2:681:693	559942	0	True				
ANR	559985	Identifier	false		559942	0					
ANR	559986	IdentifierDeclStatement	"ut16 rec_size = r_buf_read_le16_at ( b , 1 ) ;"	31:1:699:740	559942	4	True				
ANR	559987	IdentifierDecl	"rec_size = r_buf_read_le16_at ( b , 1 )"		559942	0					
ANR	559988	IdentifierDeclType	ut16		559942	0					
ANR	559989	Identifier	rec_size		559942	1					
ANR	559990	AssignmentExpression	"rec_size = r_buf_read_le16_at ( b , 1 )"		559942	2		=			
ANR	559991	Identifier	rec_size		559942	0					
ANR	559992	CallExpression	"r_buf_read_le16_at ( b , 1 )"		559942	1					
ANR	559993	Callee	r_buf_read_le16_at		559942	0					
ANR	559994	Identifier	r_buf_read_le16_at		559942	0					
ANR	559995	ArgumentList	b		559942	1					
ANR	559996	Argument	b		559942	0					
ANR	559997	Identifier	b		559942	0					
ANR	559998	Argument	1		559942	1					
ANR	559999	PrimaryExpression	1		559942	0					
ANR	560000	IdentifierDeclStatement	ut8 str_size ;	32:1:743:755	559942	5	True				
ANR	560001	IdentifierDecl	str_size		559942	0					
ANR	560002	IdentifierDeclType	ut8		559942	0					
ANR	560003	Identifier	str_size		559942	1					
ANR	560004	ExpressionStatement	"( void ) r_buf_read_at ( b , 3 , & str_size , 1 )"	32:15:757:797	559942	6	True				
ANR	560005	CastExpression	"( void ) r_buf_read_at ( b , 3 , & str_size , 1 )"		559942	0					
ANR	560006	CastTarget	void		559942	0					
ANR	560007	CallExpression	"r_buf_read_at ( b , 3 , & str_size , 1 )"		559942	1					
ANR	560008	Callee	r_buf_read_at		559942	0					
ANR	560009	Identifier	r_buf_read_at		559942	0					
ANR	560010	ArgumentList	b		559942	1					
ANR	560011	Argument	b		559942	0					
ANR	560012	Identifier	b		559942	0					
ANR	560013	Argument	3		559942	1					
ANR	560014	PrimaryExpression	3		559942	0					
ANR	560015	Argument	& str_size		559942	2					
ANR	560016	UnaryOperationExpression	& str_size		559942	0					
ANR	560017	UnaryOperator	&		559942	0					
ANR	560018	Identifier	str_size		559942	1					
ANR	560019	Argument	1		559942	3					
ANR	560020	PrimaryExpression	1		559942	0					
ANR	560021	IdentifierDeclStatement	ut64 length = r_buf_size ( b ) ;	33:1:800:828	559942	7	True				
ANR	560022	IdentifierDecl	length = r_buf_size ( b )		559942	0					
ANR	560023	IdentifierDeclType	ut64		559942	0					
ANR	560024	Identifier	length		559942	1					
ANR	560025	AssignmentExpression	length = r_buf_size ( b )		559942	2		=			
ANR	560026	Identifier	length		559942	0					
ANR	560027	CallExpression	r_buf_size ( b )		559942	1					
ANR	560028	Callee	r_buf_size		559942	0					
ANR	560029	Identifier	r_buf_size		559942	0					
ANR	560030	ArgumentList	b		559942	1					
ANR	560031	Argument	b		559942	0					
ANR	560032	Identifier	b		559942	0					
ANR	560033	IfStatement	if ( str_size + 2 != rec_size || length < rec_size + 3 )		559942	8					
ANR	560034	Condition	str_size + 2 != rec_size || length < rec_size + 3	34:5:835:883	559942	0	True				
ANR	560035	OrExpression	str_size + 2 != rec_size || length < rec_size + 3		559942	0		||			
ANR	560036	EqualityExpression	str_size + 2 != rec_size		559942	0		!=			
ANR	560037	AdditiveExpression	str_size + 2		559942	0		+			
ANR	560038	Identifier	str_size		559942	0					
ANR	560039	PrimaryExpression	2		559942	1					
ANR	560040	Identifier	rec_size		559942	1					
ANR	560041	RelationalExpression	length < rec_size + 3		559942	1		<			
ANR	560042	Identifier	length		559942	0					
ANR	560043	AdditiveExpression	rec_size + 3		559942	1		+			
ANR	560044	Identifier	rec_size		559942	0					
ANR	560045	PrimaryExpression	3		559942	1					
ANR	560046	CompoundStatement		13:56:319:319	559942	1					
ANR	560047	ReturnStatement	return false ;	35:2:890:902	559942	0	True				
ANR	560048	Identifier	false		559942	0					
ANR	560049	ForStatement	for ( i = 4 ; i < str_size + 4 ; i ++ )		559942	9					
ANR	560050	ForInit	i = 4 ;	38:6:948:953	559942	0	True				
ANR	560051	AssignmentExpression	i = 4		559942	0		=			
ANR	560052	Identifier	i		559942	0					
ANR	560053	PrimaryExpression	4		559942	1					
ANR	560054	Condition	i < str_size + 4	38:13:955:970	559942	1	True				
ANR	560055	RelationalExpression	i < str_size + 4		559942	0		<			
ANR	560056	Identifier	i		559942	0					
ANR	560057	AdditiveExpression	str_size + 4		559942	1		+			
ANR	560058	Identifier	str_size		559942	0					
ANR	560059	PrimaryExpression	4		559942	1					
ANR	560060	PostIncDecOperationExpression	i ++	38:31:973:975	559942	2	True				
ANR	560061	Identifier	i		559942	0					
ANR	560062	IncDec	++		559942	1					
ANR	560063	CompoundStatement		17:36:411:411	559942	3					
ANR	560064	IfStatement	"if ( r_buf_read_at ( b , i , & ch , 1 ) != 1 )"		559942	0					
ANR	560065	Condition	"r_buf_read_at ( b , i , & ch , 1 ) != 1"	39:6:986:1018	559942	0	True				
ANR	560066	EqualityExpression	"r_buf_read_at ( b , i , & ch , 1 ) != 1"		559942	0		!=			
ANR	560067	CallExpression	"r_buf_read_at ( b , i , & ch , 1 )"		559942	0					
ANR	560068	Callee	r_buf_read_at		559942	0					
ANR	560069	Identifier	r_buf_read_at		559942	0					
ANR	560070	ArgumentList	b		559942	1					
ANR	560071	Argument	b		559942	0					
ANR	560072	Identifier	b		559942	0					
ANR	560073	Argument	i		559942	1					
ANR	560074	Identifier	i		559942	0					
ANR	560075	Argument	& ch		559942	2					
ANR	560076	UnaryOperationExpression	& ch		559942	0					
ANR	560077	UnaryOperator	&		559942	0					
ANR	560078	Identifier	ch		559942	1					
ANR	560079	Argument	1		559942	3					
ANR	560080	PrimaryExpression	1		559942	0					
ANR	560081	PrimaryExpression	1		559942	1					
ANR	560082	CompoundStatement		18:41:454:454	559942	1					
ANR	560083	BreakStatement	break ;	40:3:1026:1031	559942	0	True				
ANR	560084	IfStatement	if ( ch > 0x7f )		559942	1					
ANR	560085	Condition	ch > 0x7f	42:6:1043:1051	559942	0	True				
ANR	560086	RelationalExpression	ch > 0x7f		559942	0		>			
ANR	560087	Identifier	ch		559942	0					
ANR	560088	PrimaryExpression	0x7f		559942	1					
ANR	560089	CompoundStatement		21:17:487:487	559942	1					
ANR	560090	ReturnStatement	return false ;	43:3:1059:1071	559942	0	True				
ANR	560091	Identifier	false		559942	0					
ANR	560092	IdentifierDeclStatement	"const ut8 * buf = r_buf_data ( b , NULL ) ;"	46:1:1081:1118	559942	10	True				
ANR	560093	IdentifierDecl	"* buf = r_buf_data ( b , NULL )"		559942	0					
ANR	560094	IdentifierDeclType	const ut8 *		559942	0					
ANR	560095	Identifier	buf		559942	1					
ANR	560096	AssignmentExpression	"* buf = r_buf_data ( b , NULL )"		559942	2		=			
ANR	560097	Identifier	buf		559942	0					
ANR	560098	CallExpression	"r_buf_data ( b , NULL )"		559942	1					
ANR	560099	Callee	r_buf_data		559942	0					
ANR	560100	Identifier	r_buf_data		559942	0					
ANR	560101	ArgumentList	b		559942	1					
ANR	560102	Argument	b		559942	0					
ANR	560103	Identifier	b		559942	0					
ANR	560104	Argument	NULL		559942	1					
ANR	560105	Identifier	NULL		559942	0					
ANR	560106	IfStatement	if ( buf == NULL )		559942	11					
ANR	560107	Condition	buf == NULL	47:5:1125:1135	559942	0	True				
ANR	560108	EqualityExpression	buf == NULL		559942	0		==			
ANR	560109	Identifier	buf		559942	0					
ANR	560110	Identifier	NULL		559942	1					
ANR	560111	CompoundStatement		28:2:635:654	559942	1					
ANR	560112	IdentifierDeclStatement	ut8 buf [ 1024 ] = { 0 } ;	49:2:1202:1221	559942	0	True				
ANR	560113	IdentifierDecl	buf [ 1024 ] = { 0 }		559942	0					
ANR	560114	IdentifierDeclType	ut8 [ 1024 ]		559942	0					
ANR	560115	Identifier	buf		559942	1					
ANR	560116	PrimaryExpression	1024		559942	2					
ANR	560117	AssignmentExpression	buf [ 1024 ] = { 0 }		559942	3		=			
ANR	560118	Identifier	buf		559942	0					
ANR	560119	InitializerList	0		559942	1					
ANR	560120	PrimaryExpression	0		559942	0					
ANR	560121	ExpressionStatement	"r_buf_read_at ( b , 0 , buf , sizeof ( buf ) )"	50:2:1225:1264	559942	1	True				
ANR	560122	CallExpression	"r_buf_read_at ( b , 0 , buf , sizeof ( buf ) )"		559942	0					
ANR	560123	Callee	r_buf_read_at		559942	0					
ANR	560124	Identifier	r_buf_read_at		559942	0					
ANR	560125	ArgumentList	b		559942	1					
ANR	560126	Argument	b		559942	0					
ANR	560127	Identifier	b		559942	0					
ANR	560128	Argument	0		559942	1					
ANR	560129	PrimaryExpression	0		559942	0					
ANR	560130	Argument	buf		559942	2					
ANR	560131	Identifier	buf		559942	0					
ANR	560132	Argument	sizeof ( buf )		559942	3					
ANR	560133	SizeofExpression	sizeof ( buf )		559942	0					
ANR	560134	Sizeof	sizeof		559942	0					
ANR	560135	SizeofOperand	buf		559942	1					
ANR	560136	ReturnStatement	"return r_bin_checksum_omf_ok ( buf , sizeof ( buf ) ) ;"	51:2:1268:1316	559942	2	True				
ANR	560137	CallExpression	"r_bin_checksum_omf_ok ( buf , sizeof ( buf ) )"		559942	0					
ANR	560138	Callee	r_bin_checksum_omf_ok		559942	0					
ANR	560139	Identifier	r_bin_checksum_omf_ok		559942	0					
ANR	560140	ArgumentList	buf		559942	1					
ANR	560141	Argument	buf		559942	0					
ANR	560142	Identifier	buf		559942	0					
ANR	560143	Argument	sizeof ( buf )		559942	1					
ANR	560144	SizeofExpression	sizeof ( buf )		559942	0					
ANR	560145	Sizeof	sizeof		559942	0					
ANR	560146	SizeofOperand	buf		559942	1					
ANR	560147	ExpressionStatement	"r_return_val_if_fail ( buf , false )"	53:1:1322:1355	559942	12	True				
ANR	560148	CallExpression	"r_return_val_if_fail ( buf , false )"		559942	0					
ANR	560149	Callee	r_return_val_if_fail		559942	0					
ANR	560150	Identifier	r_return_val_if_fail		559942	0					
ANR	560151	ArgumentList	buf		559942	1					
ANR	560152	Argument	buf		559942	0					
ANR	560153	Identifier	buf		559942	0					
ANR	560154	Argument	false		559942	1					
ANR	560155	Identifier	false		559942	0					
ANR	560156	ReturnStatement	"return r_bin_checksum_omf_ok ( buf , length ) ;"	54:1:1358:1400	559942	13	True				
ANR	560157	CallExpression	"r_bin_checksum_omf_ok ( buf , length )"		559942	0					
ANR	560158	Callee	r_bin_checksum_omf_ok		559942	0					
ANR	560159	Identifier	r_bin_checksum_omf_ok		559942	0					
ANR	560160	ArgumentList	buf		559942	1					
ANR	560161	Argument	buf		559942	0					
ANR	560162	Identifier	buf		559942	0					
ANR	560163	Argument	length		559942	1					
ANR	560164	Identifier	length		559942	0					
ANR	560165	ReturnType	static bool		559942	1					
ANR	560166	Identifier	check_buffer		559942	2					
ANR	560167	ParameterList	RBuffer * b		559942	3					
ANR	560168	Parameter	RBuffer * b	22:25:554:563	559942	0	True				
ANR	560169	ParameterType	RBuffer *		559942	0					
ANR	560170	Identifier	b		559942	1					
ANR	560171	CFGEntryNode	ENTRY		559942		True				
ANR	560172	CFGExitNode	EXIT		559942		True				
ANR	560173	Symbol	b		559942						
ANR	560174	Symbol	NULL		559942						
ANR	560175	Symbol	ch		559942						
ANR	560176	Symbol	false		559942						
ANR	560177	Symbol	length		559942						
ANR	560178	Symbol	i		559942						
ANR	560179	Symbol	rec_size		559942						
ANR	560180	Symbol	& ch		559942						
ANR	560181	Symbol	& str_size		559942						
ANR	560182	Symbol	buf		559942						
ANR	560183	Symbol	r_buf_read_at		559942						
ANR	560184	Symbol	r_buf_read_le16_at		559942						
ANR	560185	Symbol	str_size		559942						
ANR	560186	Symbol	r_bin_checksum_omf_ok		559942						
ANR	560187	Symbol	r_buf_size		559942						
ANR	560188	Symbol	r_buf_data		559942						
ANR	560189	Function	baddr	57:0:1405:1462							
ANR	560190	FunctionDef	baddr (RBinFile * bf)		560189	0					
ANR	560191	CompoundStatement		57:32:1437:1462	560189	0					
ANR	560192	ReturnStatement	return OMF_BASE_ADDR ;	58:1:1440:1460	560189	0	True				
ANR	560193	Identifier	OMF_BASE_ADDR		560189	0					
ANR	560194	ReturnType	static ut64		560189	1					
ANR	560195	Identifier	baddr		560189	2					
ANR	560196	ParameterList	RBinFile * bf		560189	3					
ANR	560197	Parameter	RBinFile * bf	57:18:1423:1434	560189	0	True				
ANR	560198	ParameterType	RBinFile *		560189	0					
ANR	560199	Identifier	bf		560189	1					
ANR	560200	CFGEntryNode	ENTRY		560189		True				
ANR	560201	CFGExitNode	EXIT		560189		True				
ANR	560202	Symbol	bf		560189						
ANR	560203	Symbol	OMF_BASE_ADDR		560189						
ANR	560204	Function	entries	61:0:1465:1787							
ANR	560205	FunctionDef	entries (RBinFile * bf)		560204	0					
ANR	560206	CompoundStatement		61:36:1501:1787	560204	0					
ANR	560207	IdentifierDeclStatement	RList * ret ;	62:1:1504:1514	560204	0	True				
ANR	560208	IdentifierDecl	* ret		560204	0					
ANR	560209	IdentifierDeclType	RList *		560204	0					
ANR	560210	Identifier	ret		560204	1					
ANR	560211	IdentifierDeclStatement	RBinAddr * addr ;	63:1:1517:1531	560204	1	True				
ANR	560212	IdentifierDecl	* addr		560204	0					
ANR	560213	IdentifierDeclType	RBinAddr *		560204	0					
ANR	560214	Identifier	addr		560204	1					
ANR	560215	IfStatement	if ( ! ( ret = r_list_newf ( free ) ) )		560204	2					
ANR	560216	Condition	! ( ret = r_list_newf ( free ) )	65:5:1539:1565	560204	0	True				
ANR	560217	UnaryOperationExpression	! ( ret = r_list_newf ( free ) )		560204	0					
ANR	560218	UnaryOperator	!		560204	0					
ANR	560219	AssignmentExpression	ret = r_list_newf ( free )		560204	1		=			
ANR	560220	Identifier	ret		560204	0					
ANR	560221	CallExpression	r_list_newf ( free )		560204	1					
ANR	560222	Callee	r_list_newf		560204	0					
ANR	560223	Identifier	r_list_newf		560204	0					
ANR	560224	ArgumentList	free		560204	1					
ANR	560225	Argument	free		560204	0					
ANR	560226	Identifier	free		560204	0					
ANR	560227	CompoundStatement		5:34:66:66	560204	1					
ANR	560228	ReturnStatement	return NULL ;	66:2:1572:1583	560204	0	True				
ANR	560229	Identifier	NULL		560204	0					
ANR	560230	IfStatement	if ( ! ( addr = R_NEW0 ( RBinAddr ) ) )		560204	3					
ANR	560231	Condition	! ( addr = R_NEW0 ( RBinAddr ) )	68:5:1593:1619	560204	0	True				
ANR	560232	UnaryOperationExpression	! ( addr = R_NEW0 ( RBinAddr ) )		560204	0					
ANR	560233	UnaryOperator	!		560204	0					
ANR	560234	AssignmentExpression	addr = R_NEW0 ( RBinAddr )		560204	1		=			
ANR	560235	Identifier	addr		560204	0					
ANR	560236	CallExpression	R_NEW0 ( RBinAddr )		560204	1					
ANR	560237	Callee	R_NEW0		560204	0					
ANR	560238	Identifier	R_NEW0		560204	0					
ANR	560239	ArgumentList	RBinAddr		560204	1					
ANR	560240	Argument	RBinAddr		560204	0					
ANR	560241	Identifier	RBinAddr		560204	0					
ANR	560242	CompoundStatement		8:34:120:120	560204	1					
ANR	560243	ExpressionStatement	r_list_free ( ret )	69:2:1626:1643	560204	0	True				
ANR	560244	CallExpression	r_list_free ( ret )		560204	0					
ANR	560245	Callee	r_list_free		560204	0					
ANR	560246	Identifier	r_list_free		560204	0					
ANR	560247	ArgumentList	ret		560204	1					
ANR	560248	Argument	ret		560204	0					
ANR	560249	Identifier	ret		560204	0					
ANR	560250	ReturnStatement	return NULL ;	70:2:1647:1658	560204	1	True				
ANR	560251	Identifier	NULL		560204	0					
ANR	560252	IfStatement	"if ( ! r_bin_omf_get_entry ( bf -> o -> bin_obj , addr ) )"		560204	4					
ANR	560253	Condition	"! r_bin_omf_get_entry ( bf -> o -> bin_obj , addr )"	72:5:1668:1710	560204	0	True				
ANR	560254	UnaryOperationExpression	"! r_bin_omf_get_entry ( bf -> o -> bin_obj , addr )"		560204	0					
ANR	560255	UnaryOperator	!		560204	0					
ANR	560256	CallExpression	"r_bin_omf_get_entry ( bf -> o -> bin_obj , addr )"		560204	1					
ANR	560257	Callee	r_bin_omf_get_entry		560204	0					
ANR	560258	Identifier	r_bin_omf_get_entry		560204	0					
ANR	560259	ArgumentList	bf -> o -> bin_obj		560204	1					
ANR	560260	Argument	bf -> o -> bin_obj		560204	0					
ANR	560261	PtrMemberAccess	bf -> o -> bin_obj		560204	0					
ANR	560262	PtrMemberAccess	bf -> o		560204	0					
ANR	560263	Identifier	bf		560204	0					
ANR	560264	Identifier	o		560204	1					
ANR	560265	Identifier	bin_obj		560204	1					
ANR	560266	Argument	addr		560204	1					
ANR	560267	Identifier	addr		560204	0					
ANR	560268	CompoundStatement		12:50:211:211	560204	1					
ANR	560269	ExpressionStatement	R_FREE ( addr )	73:2:1717:1730	560204	0	True				
ANR	560270	CallExpression	R_FREE ( addr )		560204	0					
ANR	560271	Callee	R_FREE		560204	0					
ANR	560272	Identifier	R_FREE		560204	0					
ANR	560273	ArgumentList	addr		560204	1					
ANR	560274	Argument	addr		560204	0					
ANR	560275	Identifier	addr		560204	0					
ANR	560276	ElseStatement	else		560204	0					
ANR	560277	CompoundStatement		14:8:238:238	560204	0					
ANR	560278	ExpressionStatement	"r_list_append ( ret , addr )"	75:2:1744:1769	560204	0	True				
ANR	560279	CallExpression	"r_list_append ( ret , addr )"		560204	0					
ANR	560280	Callee	r_list_append		560204	0					
ANR	560281	Identifier	r_list_append		560204	0					
ANR	560282	ArgumentList	ret		560204	1					
ANR	560283	Argument	ret		560204	0					
ANR	560284	Identifier	ret		560204	0					
ANR	560285	Argument	addr		560204	1					
ANR	560286	Identifier	addr		560204	0					
ANR	560287	ReturnStatement	return ret ;	77:1:1775:1785	560204	5	True				
ANR	560288	Identifier	ret		560204	0					
ANR	560289	ReturnType	static RList *		560204	1					
ANR	560290	Identifier	entries		560204	2					
ANR	560291	ParameterList	RBinFile * bf		560204	3					
ANR	560292	Parameter	RBinFile * bf	61:22:1487:1498	560204	0	True				
ANR	560293	ParameterType	RBinFile *		560204	0					
ANR	560294	Identifier	bf		560204	1					
ANR	560295	CFGEntryNode	ENTRY		560204		True				
ANR	560296	CFGExitNode	EXIT		560204		True				
ANR	560297	Symbol	ret		560204						
ANR	560298	Symbol	bf -> o -> bin_obj		560204						
ANR	560299	Symbol	NULL		560204						
ANR	560300	Symbol	bf		560204						
ANR	560301	Symbol	r_list_newf		560204						
ANR	560302	Symbol	* bf		560204						
ANR	560303	Symbol	* bf -> o		560204						
ANR	560304	Symbol	R_NEW0		560204						
ANR	560305	Symbol	* * bf		560204						
ANR	560306	Symbol	RBinAddr		560204						
ANR	560307	Symbol	bf -> o		560204						
ANR	560308	Symbol	r_bin_omf_get_entry		560204						
ANR	560309	Symbol	addr		560204						
ANR	560310	Symbol	free		560204						
ANR	560311	Function	sections	80:0:1790:2184							
ANR	560312	FunctionDef	sections (RBinFile * bf)		560311	0					
ANR	560313	CompoundStatement		80:37:1827:2184	560311	0					
ANR	560314	IdentifierDeclStatement	RList * ret ;	81:1:1830:1840	560311	0	True				
ANR	560315	IdentifierDecl	* ret		560311	0					
ANR	560316	IdentifierDeclType	RList *		560311	0					
ANR	560317	Identifier	ret		560311	1					
ANR	560318	IdentifierDeclStatement	ut32 ct_omf_sect = 0 ;	82:1:1843:1863	560311	1	True				
ANR	560319	IdentifierDecl	ct_omf_sect = 0		560311	0					
ANR	560320	IdentifierDeclType	ut32		560311	0					
ANR	560321	Identifier	ct_omf_sect		560311	1					
ANR	560322	AssignmentExpression	ct_omf_sect = 0		560311	2		=			
ANR	560323	Identifier	ct_omf_sect		560311	0					
ANR	560324	PrimaryExpression	0		560311	1					
ANR	560325	IfStatement	if ( ! bf || ! bf -> o || ! bf -> o -> bin_obj )		560311	2					
ANR	560326	Condition	! bf || ! bf -> o || ! bf -> o -> bin_obj	84:5:1871:1902	560311	0	True				
ANR	560327	OrExpression	! bf || ! bf -> o || ! bf -> o -> bin_obj		560311	0		||			
ANR	560328	UnaryOperationExpression	! bf		560311	0					
ANR	560329	UnaryOperator	!		560311	0					
ANR	560330	Identifier	bf		560311	1					
ANR	560331	OrExpression	! bf -> o || ! bf -> o -> bin_obj		560311	1		||			
ANR	560332	UnaryOperationExpression	! bf -> o		560311	0					
ANR	560333	UnaryOperator	!		560311	0					
ANR	560334	PtrMemberAccess	bf -> o		560311	1					
ANR	560335	Identifier	bf		560311	0					
ANR	560336	Identifier	o		560311	1					
ANR	560337	UnaryOperationExpression	! bf -> o -> bin_obj		560311	1					
ANR	560338	UnaryOperator	!		560311	0					
ANR	560339	PtrMemberAccess	bf -> o -> bin_obj		560311	1					
ANR	560340	PtrMemberAccess	bf -> o		560311	0					
ANR	560341	Identifier	bf		560311	0					
ANR	560342	Identifier	o		560311	1					
ANR	560343	Identifier	bin_obj		560311	1					
ANR	560344	CompoundStatement		5:39:77:77	560311	1					
ANR	560345	ReturnStatement	return NULL ;	85:2:1909:1920	560311	0	True				
ANR	560346	Identifier	NULL		560311	0					
ANR	560347	IdentifierDeclStatement	r_bin_omf_obj * obj = bf -> o -> bin_obj ;	87:1:1926:1961	560311	3	True				
ANR	560348	IdentifierDecl	* obj = bf -> o -> bin_obj		560311	0					
ANR	560349	IdentifierDeclType	r_bin_omf_obj *		560311	0					
ANR	560350	Identifier	obj		560311	1					
ANR	560351	AssignmentExpression	* obj = bf -> o -> bin_obj		560311	2		=			
ANR	560352	Identifier	obj		560311	0					
ANR	560353	PtrMemberAccess	bf -> o -> bin_obj		560311	1					
ANR	560354	PtrMemberAccess	bf -> o		560311	0					
ANR	560355	Identifier	bf		560311	0					
ANR	560356	Identifier	o		560311	1					
ANR	560357	Identifier	bin_obj		560311	1					
ANR	560358	IfStatement	if ( ! ( ret = r_list_new ( ) ) )		560311	4					
ANR	560359	Condition	! ( ret = r_list_new ( ) )	89:5:1969:1990	560311	0	True				
ANR	560360	UnaryOperationExpression	! ( ret = r_list_new ( ) )		560311	0					
ANR	560361	UnaryOperator	!		560311	0					
ANR	560362	AssignmentExpression	ret = r_list_new ( )		560311	1		=			
ANR	560363	Identifier	ret		560311	0					
ANR	560364	CallExpression	r_list_new ( )		560311	1					
ANR	560365	Callee	r_list_new		560311	0					
ANR	560366	Identifier	r_list_new		560311	0					
ANR	560367	ArgumentList			560311	1					
ANR	560368	CompoundStatement		10:29:165:165	560311	1					
ANR	560369	ReturnStatement	return NULL ;	90:2:1997:2008	560311	0	True				
ANR	560370	Identifier	NULL		560311	0					
ANR	560371	WhileStatement	while ( ct_omf_sect < obj -> nb_section )		560311	5					
ANR	560372	Condition	ct_omf_sect < obj -> nb_section	93:8:2022:2050	560311	0	True				
ANR	560373	RelationalExpression	ct_omf_sect < obj -> nb_section		560311	0		<			
ANR	560374	Identifier	ct_omf_sect		560311	0					
ANR	560375	PtrMemberAccess	obj -> nb_section		560311	1					
ANR	560376	Identifier	obj		560311	0					
ANR	560377	Identifier	nb_section		560311	1					
ANR	560378	CompoundStatement		14:39:225:225	560311	1					
ANR	560379	IfStatement	"if ( ! r_bin_omf_send_sections ( ret , obj -> sections [ ct_omf_sect ++ ] , bf -> o -> bin_obj ) )"		560311	0					
ANR	560380	Condition	"! r_bin_omf_send_sections ( ret , obj -> sections [ ct_omf_sect ++ ] , bf -> o -> bin_obj )"	94:6:2061:2144	560311	0	True				
ANR	560381	UnaryOperationExpression	"! r_bin_omf_send_sections ( ret , obj -> sections [ ct_omf_sect ++ ] , bf -> o -> bin_obj )"		560311	0					
ANR	560382	UnaryOperator	!		560311	0					
ANR	560383	CallExpression	"r_bin_omf_send_sections ( ret , obj -> sections [ ct_omf_sect ++ ] , bf -> o -> bin_obj )"		560311	1					
ANR	560384	Callee	r_bin_omf_send_sections		560311	0					
ANR	560385	Identifier	r_bin_omf_send_sections		560311	0					
ANR	560386	ArgumentList	ret		560311	1					
ANR	560387	Argument	ret		560311	0					
ANR	560388	Identifier	ret		560311	0					
ANR	560389	Argument	obj -> sections [ ct_omf_sect ++ ]		560311	1					
ANR	560390	ArrayIndexing	obj -> sections [ ct_omf_sect ++ ]		560311	0					
ANR	560391	PtrMemberAccess	obj -> sections		560311	0					
ANR	560392	Identifier	obj		560311	0					
ANR	560393	Identifier	sections		560311	1					
ANR	560394	PostIncDecOperationExpression	ct_omf_sect ++		560311	1					
ANR	560395	Identifier	ct_omf_sect		560311	0					
ANR	560396	IncDec	++		560311	1					
ANR	560397	Argument	bf -> o -> bin_obj		560311	2					
ANR	560398	PtrMemberAccess	bf -> o -> bin_obj		560311	0					
ANR	560399	PtrMemberAccess	bf -> o		560311	0					
ANR	560400	Identifier	bf		560311	0					
ANR	560401	Identifier	o		560311	1					
ANR	560402	Identifier	bin_obj		560311	1					
ANR	560403	CompoundStatement		16:54:319:319	560311	1					
ANR	560404	ReturnStatement	return ret ;	96:3:2152:2162	560311	0	True				
ANR	560405	Identifier	ret		560311	0					
ANR	560406	ReturnStatement	return ret ;	99:1:2172:2182	560311	6	True				
ANR	560407	Identifier	ret		560311	0					
ANR	560408	ReturnType	static RList *		560311	1					
ANR	560409	Identifier	sections		560311	2					
ANR	560410	ParameterList	RBinFile * bf		560311	3					
ANR	560411	Parameter	RBinFile * bf	80:23:1813:1824	560311	0	True				
ANR	560412	ParameterType	RBinFile *		560311	0					
ANR	560413	Identifier	bf		560311	1					
ANR	560414	CFGEntryNode	ENTRY		560311		True				
ANR	560415	CFGExitNode	EXIT		560311		True				
ANR	560416	Symbol	ret		560311						
ANR	560417	Symbol	bf -> o -> bin_obj		560311						
ANR	560418	Symbol	* obj		560311						
ANR	560419	Symbol	NULL		560311						
ANR	560420	Symbol	bf		560311						
ANR	560421	Symbol	* bf		560311						
ANR	560422	Symbol	* * obj		560311						
ANR	560423	Symbol	ct_omf_sect		560311						
ANR	560424	Symbol	r_bin_omf_send_sections		560311						
ANR	560425	Symbol	* bf -> o		560311						
ANR	560426	Symbol	* * bf		560311						
ANR	560427	Symbol	bf -> o		560311						
ANR	560428	Symbol	obj		560311						
ANR	560429	Symbol	obj -> nb_section		560311						
ANR	560430	Symbol	* obj -> sections		560311						
ANR	560431	Symbol	obj -> sections		560311						
ANR	560432	Symbol	r_list_new		560311						
ANR	560433	Function	symbols	102:0:2187:2911							
ANR	560434	FunctionDef	symbols (RBinFile * bf)		560433	0					
ANR	560435	CompoundStatement		102:36:2223:2911	560433	0					
ANR	560436	IdentifierDeclStatement	RList * ret ;	103:1:2226:2236	560433	0	True				
ANR	560437	IdentifierDecl	* ret		560433	0					
ANR	560438	IdentifierDeclType	RList *		560433	0					
ANR	560439	Identifier	ret		560433	1					
ANR	560440	IdentifierDeclStatement	RBinSymbol * sym ;	104:1:2239:2254	560433	1	True				
ANR	560441	IdentifierDecl	* sym		560433	0					
ANR	560442	IdentifierDeclType	RBinSymbol *		560433	0					
ANR	560443	Identifier	sym		560433	1					
ANR	560444	IdentifierDeclStatement	OMF_symbol * sym_omf ;	105:1:2257:2276	560433	2	True				
ANR	560445	IdentifierDecl	* sym_omf		560433	0					
ANR	560446	IdentifierDeclType	OMF_symbol *		560433	0					
ANR	560447	Identifier	sym_omf		560433	1					
ANR	560448	IdentifierDeclStatement	int ct_sym = 0 ;	106:1:2279:2293	560433	3	True				
ANR	560449	IdentifierDecl	ct_sym = 0		560433	0					
ANR	560450	IdentifierDeclType	int		560433	0					
ANR	560451	Identifier	ct_sym		560433	1					
ANR	560452	AssignmentExpression	ct_sym = 0		560433	2		=			
ANR	560453	Identifier	ct_sym		560433	0					
ANR	560454	PrimaryExpression	0		560433	1					
ANR	560455	IfStatement	if ( ! bf || ! bf -> o || ! bf -> o -> bin_obj )		560433	4					
ANR	560456	Condition	! bf || ! bf -> o || ! bf -> o -> bin_obj	107:5:2300:2331	560433	0	True				
ANR	560457	OrExpression	! bf || ! bf -> o || ! bf -> o -> bin_obj		560433	0		||			
ANR	560458	UnaryOperationExpression	! bf		560433	0					
ANR	560459	UnaryOperator	!		560433	0					
ANR	560460	Identifier	bf		560433	1					
ANR	560461	OrExpression	! bf -> o || ! bf -> o -> bin_obj		560433	1		||			
ANR	560462	UnaryOperationExpression	! bf -> o		560433	0					
ANR	560463	UnaryOperator	!		560433	0					
ANR	560464	PtrMemberAccess	bf -> o		560433	1					
ANR	560465	Identifier	bf		560433	0					
ANR	560466	Identifier	o		560433	1					
ANR	560467	UnaryOperationExpression	! bf -> o -> bin_obj		560433	1					
ANR	560468	UnaryOperator	!		560433	0					
ANR	560469	PtrMemberAccess	bf -> o -> bin_obj		560433	1					
ANR	560470	PtrMemberAccess	bf -> o		560433	0					
ANR	560471	Identifier	bf		560433	0					
ANR	560472	Identifier	o		560433	1					
ANR	560473	Identifier	bin_obj		560433	1					
ANR	560474	CompoundStatement		6:39:110:110	560433	1					
ANR	560475	ReturnStatement	return NULL ;	108:2:2338:2349	560433	0	True				
ANR	560476	Identifier	NULL		560433	0					
ANR	560477	IfStatement	if ( ! ( ret = r_list_new ( ) ) )		560433	5					
ANR	560478	Condition	! ( ret = r_list_new ( ) )	110:5:2359:2380	560433	0	True				
ANR	560479	UnaryOperationExpression	! ( ret = r_list_new ( ) )		560433	0					
ANR	560480	UnaryOperator	!		560433	0					
ANR	560481	AssignmentExpression	ret = r_list_new ( )		560433	1		=			
ANR	560482	Identifier	ret		560433	0					
ANR	560483	CallExpression	r_list_new ( )		560433	1					
ANR	560484	Callee	r_list_new		560433	0					
ANR	560485	Identifier	r_list_new		560433	0					
ANR	560486	ArgumentList			560433	1					
ANR	560487	CompoundStatement		9:29:159:159	560433	1					
ANR	560488	ReturnStatement	return NULL ;	111:2:2387:2398	560433	0	True				
ANR	560489	Identifier	NULL		560433	0					
ANR	560490	ExpressionStatement	ret -> free = free	114:1:2405:2421	560433	6	True				
ANR	560491	AssignmentExpression	ret -> free = free		560433	0		=			
ANR	560492	PtrMemberAccess	ret -> free		560433	0					
ANR	560493	Identifier	ret		560433	0					
ANR	560494	Identifier	free		560433	1					
ANR	560495	Identifier	free		560433	1					
ANR	560496	WhileStatement	while ( ct_sym < ( ( r_bin_omf_obj * ) bf -> o -> bin_obj ) -> nb_symbol )		560433	7					
ANR	560497	Condition	ct_sym < ( ( r_bin_omf_obj * ) bf -> o -> bin_obj ) -> nb_symbol	116:8:2432:2485	560433	0	True				
ANR	560498	RelationalExpression	ct_sym < ( ( r_bin_omf_obj * ) bf -> o -> bin_obj ) -> nb_symbol		560433	0		<			
ANR	560499	Identifier	ct_sym		560433	0					
ANR	560500	PtrMemberAccess	( ( r_bin_omf_obj * ) bf -> o -> bin_obj ) -> nb_symbol		560433	1					
ANR	560501	CastExpression	( r_bin_omf_obj * ) bf -> o -> bin_obj		560433	0					
ANR	560502	CastTarget	r_bin_omf_obj *		560433	0					
ANR	560503	PtrMemberAccess	bf -> o -> bin_obj		560433	1					
ANR	560504	PtrMemberAccess	bf -> o		560433	0					
ANR	560505	Identifier	bf		560433	0					
ANR	560506	Identifier	o		560433	1					
ANR	560507	Identifier	bin_obj		560433	1					
ANR	560508	Identifier	nb_symbol		560433	1					
ANR	560509	CompoundStatement		15:64:264:264	560433	1					
ANR	560510	IfStatement	if ( ! ( sym = R_NEW0 ( RBinSymbol ) ) )		560433	0					
ANR	560511	Condition	! ( sym = R_NEW0 ( RBinSymbol ) )	117:6:2496:2523	560433	0	True				
ANR	560512	UnaryOperationExpression	! ( sym = R_NEW0 ( RBinSymbol ) )		560433	0					
ANR	560513	UnaryOperator	!		560433	0					
ANR	560514	AssignmentExpression	sym = R_NEW0 ( RBinSymbol )		560433	1		=			
ANR	560515	Identifier	sym		560433	0					
ANR	560516	CallExpression	R_NEW0 ( RBinSymbol )		560433	1					
ANR	560517	Callee	R_NEW0		560433	0					
ANR	560518	Identifier	R_NEW0		560433	0					
ANR	560519	ArgumentList	RBinSymbol		560433	1					
ANR	560520	Argument	RBinSymbol		560433	0					
ANR	560521	Identifier	RBinSymbol		560433	0					
ANR	560522	CompoundStatement		16:36:302:302	560433	1					
ANR	560523	ReturnStatement	return ret ;	118:3:2531:2541	560433	0	True				
ANR	560524	Identifier	ret		560433	0					
ANR	560525	ExpressionStatement	sym_omf = ( ( r_bin_omf_obj * ) bf -> o -> bin_obj ) -> symbols [ ct_sym ++ ]	120:2:2549:2612	560433	1	True				
ANR	560526	AssignmentExpression	sym_omf = ( ( r_bin_omf_obj * ) bf -> o -> bin_obj ) -> symbols [ ct_sym ++ ]		560433	0		=			
ANR	560527	Identifier	sym_omf		560433	0					
ANR	560528	ArrayIndexing	( ( r_bin_omf_obj * ) bf -> o -> bin_obj ) -> symbols [ ct_sym ++ ]		560433	1					
ANR	560529	PtrMemberAccess	( ( r_bin_omf_obj * ) bf -> o -> bin_obj ) -> symbols		560433	0					
ANR	560530	CastExpression	( r_bin_omf_obj * ) bf -> o -> bin_obj		560433	0					
ANR	560531	CastTarget	r_bin_omf_obj *		560433	0					
ANR	560532	PtrMemberAccess	bf -> o -> bin_obj		560433	1					
ANR	560533	PtrMemberAccess	bf -> o		560433	0					
ANR	560534	Identifier	bf		560433	0					
ANR	560535	Identifier	o		560433	1					
ANR	560536	Identifier	bin_obj		560433	1					
ANR	560537	Identifier	symbols		560433	1					
ANR	560538	PostIncDecOperationExpression	ct_sym ++		560433	1					
ANR	560539	Identifier	ct_sym		560433	0					
ANR	560540	IncDec	++		560433	1					
ANR	560541	ExpressionStatement	sym -> name = strdup ( sym_omf -> name )	121:2:2616:2650	560433	2	True				
ANR	560542	AssignmentExpression	sym -> name = strdup ( sym_omf -> name )		560433	0		=			
ANR	560543	PtrMemberAccess	sym -> name		560433	0					
ANR	560544	Identifier	sym		560433	0					
ANR	560545	Identifier	name		560433	1					
ANR	560546	CallExpression	strdup ( sym_omf -> name )		560433	1					
ANR	560547	Callee	strdup		560433	0					
ANR	560548	Identifier	strdup		560433	0					
ANR	560549	ArgumentList	sym_omf -> name		560433	1					
ANR	560550	Argument	sym_omf -> name		560433	0					
ANR	560551	PtrMemberAccess	sym_omf -> name		560433	0					
ANR	560552	Identifier	sym_omf		560433	0					
ANR	560553	Identifier	name		560433	1					
ANR	560554	ExpressionStatement	"sym -> forwarder = r_str_const ( ""NONE"" )"	122:2:2654:2691	560433	3	True				
ANR	560555	AssignmentExpression	"sym -> forwarder = r_str_const ( ""NONE"" )"		560433	0		=			
ANR	560556	PtrMemberAccess	sym -> forwarder		560433	0					
ANR	560557	Identifier	sym		560433	0					
ANR	560558	Identifier	forwarder		560433	1					
ANR	560559	CallExpression	"r_str_const ( ""NONE"" )"		560433	1					
ANR	560560	Callee	r_str_const		560433	0					
ANR	560561	Identifier	r_str_const		560433	0					
ANR	560562	ArgumentList	"""NONE"""		560433	1					
ANR	560563	Argument	"""NONE"""		560433	0					
ANR	560564	PrimaryExpression	"""NONE"""		560433	0					
ANR	560565	ExpressionStatement	"sym -> paddr = r_bin_omf_get_paddr_sym ( bf -> o -> bin_obj , sym_omf )"	123:2:2695:2757	560433	4	True				
ANR	560566	AssignmentExpression	"sym -> paddr = r_bin_omf_get_paddr_sym ( bf -> o -> bin_obj , sym_omf )"		560433	0		=			
ANR	560567	PtrMemberAccess	sym -> paddr		560433	0					
ANR	560568	Identifier	sym		560433	0					
ANR	560569	Identifier	paddr		560433	1					
ANR	560570	CallExpression	"r_bin_omf_get_paddr_sym ( bf -> o -> bin_obj , sym_omf )"		560433	1					
ANR	560571	Callee	r_bin_omf_get_paddr_sym		560433	0					
ANR	560572	Identifier	r_bin_omf_get_paddr_sym		560433	0					
ANR	560573	ArgumentList	bf -> o -> bin_obj		560433	1					
ANR	560574	Argument	bf -> o -> bin_obj		560433	0					
ANR	560575	PtrMemberAccess	bf -> o -> bin_obj		560433	0					
ANR	560576	PtrMemberAccess	bf -> o		560433	0					
ANR	560577	Identifier	bf		560433	0					
ANR	560578	Identifier	o		560433	1					
ANR	560579	Identifier	bin_obj		560433	1					
ANR	560580	Argument	sym_omf		560433	1					
ANR	560581	Identifier	sym_omf		560433	0					
ANR	560582	ExpressionStatement	"sym -> vaddr = r_bin_omf_get_vaddr_sym ( bf -> o -> bin_obj , sym_omf )"	124:2:2761:2823	560433	5	True				
ANR	560583	AssignmentExpression	"sym -> vaddr = r_bin_omf_get_vaddr_sym ( bf -> o -> bin_obj , sym_omf )"		560433	0		=			
ANR	560584	PtrMemberAccess	sym -> vaddr		560433	0					
ANR	560585	Identifier	sym		560433	0					
ANR	560586	Identifier	vaddr		560433	1					
ANR	560587	CallExpression	"r_bin_omf_get_vaddr_sym ( bf -> o -> bin_obj , sym_omf )"		560433	1					
ANR	560588	Callee	r_bin_omf_get_vaddr_sym		560433	0					
ANR	560589	Identifier	r_bin_omf_get_vaddr_sym		560433	0					
ANR	560590	ArgumentList	bf -> o -> bin_obj		560433	1					
ANR	560591	Argument	bf -> o -> bin_obj		560433	0					
ANR	560592	PtrMemberAccess	bf -> o -> bin_obj		560433	0					
ANR	560593	PtrMemberAccess	bf -> o		560433	0					
ANR	560594	Identifier	bf		560433	0					
ANR	560595	Identifier	o		560433	1					
ANR	560596	Identifier	bin_obj		560433	1					
ANR	560597	Argument	sym_omf		560433	1					
ANR	560598	Identifier	sym_omf		560433	0					
ANR	560599	ExpressionStatement	sym -> ordinal = ct_sym	125:2:2827:2848	560433	6	True				
ANR	560600	AssignmentExpression	sym -> ordinal = ct_sym		560433	0		=			
ANR	560601	PtrMemberAccess	sym -> ordinal		560433	0					
ANR	560602	Identifier	sym		560433	0					
ANR	560603	Identifier	ordinal		560433	1					
ANR	560604	Identifier	ct_sym		560433	1					
ANR	560605	ExpressionStatement	sym -> size = 0	126:2:2852:2865	560433	7	True				
ANR	560606	AssignmentExpression	sym -> size = 0		560433	0		=			
ANR	560607	PtrMemberAccess	sym -> size		560433	0					
ANR	560608	Identifier	sym		560433	0					
ANR	560609	Identifier	size		560433	1					
ANR	560610	PrimaryExpression	0		560433	1					
ANR	560611	ExpressionStatement	"r_list_append ( ret , sym )"	127:2:2869:2893	560433	8	True				
ANR	560612	CallExpression	"r_list_append ( ret , sym )"		560433	0					
ANR	560613	Callee	r_list_append		560433	0					
ANR	560614	Identifier	r_list_append		560433	0					
ANR	560615	ArgumentList	ret		560433	1					
ANR	560616	Argument	ret		560433	0					
ANR	560617	Identifier	ret		560433	0					
ANR	560618	Argument	sym		560433	1					
ANR	560619	Identifier	sym		560433	0					
ANR	560620	ReturnStatement	return ret ;	129:1:2899:2909	560433	8	True				
ANR	560621	Identifier	ret		560433	0					
ANR	560622	ReturnType	static RList *		560433	1					
ANR	560623	Identifier	symbols		560433	2					
ANR	560624	ParameterList	RBinFile * bf		560433	3					
ANR	560625	Parameter	RBinFile * bf	102:22:2209:2220	560433	0	True				
ANR	560626	ParameterType	RBinFile *		560433	0					
ANR	560627	Identifier	bf		560433	1					
ANR	560628	CFGEntryNode	ENTRY		560433		True				
ANR	560629	CFGExitNode	EXIT		560433		True				
ANR	560630	Symbol	sym -> ordinal		560433						
ANR	560631	Symbol	sym_omf		560433						
ANR	560632	Symbol	bf		560433						
ANR	560633	Symbol	* bf -> o -> bin_obj		560433						
ANR	560634	Symbol	r_bin_omf_get_vaddr_sym		560433						
ANR	560635	Symbol	sym		560433						
ANR	560636	Symbol	ct_sym		560433						
ANR	560637	Symbol	( ( r_bin_omf_obj * ) bf -> o -> bin_obj ) -> symbols		560433						
ANR	560638	Symbol	* * * * bf		560433						
ANR	560639	Symbol	* ret		560433						
ANR	560640	Symbol	ret -> free		560433						
ANR	560641	Symbol	sym -> size		560433						
ANR	560642	Symbol	* bf -> o		560433						
ANR	560643	Symbol	bf -> o		560433						
ANR	560644	Symbol	free		560433						
ANR	560645	Symbol	( ( r_bin_omf_obj * ) bf -> o -> bin_obj ) -> nb_symbol		560433						
ANR	560646	Symbol	* * * bf		560433						
ANR	560647	Symbol	* ( ( r_bin_omf_obj * ) bf -> o -> bin_obj ) -> symbols		560433						
ANR	560648	Symbol	* * bf -> o -> bin_obj		560433						
ANR	560649	Symbol	sym -> forwarder		560433						
ANR	560650	Symbol	ret		560433						
ANR	560651	Symbol	bf -> o -> bin_obj		560433						
ANR	560652	Symbol	r_str_const		560433						
ANR	560653	Symbol	NULL		560433						
ANR	560654	Symbol	sym_omf -> name		560433						
ANR	560655	Symbol	sym -> vaddr		560433						
ANR	560656	Symbol	sym -> paddr		560433						
ANR	560657	Symbol	* bf		560433						
ANR	560658	Symbol	* sym_omf		560433						
ANR	560659	Symbol	* * * bf -> o		560433						
ANR	560660	Symbol	* * bf -> o		560433						
ANR	560661	Symbol	r_bin_omf_get_paddr_sym		560433						
ANR	560662	Symbol	R_NEW0		560433						
ANR	560663	Symbol	* sym		560433						
ANR	560664	Symbol	* * bf		560433						
ANR	560665	Symbol	sym -> name		560433						
ANR	560666	Symbol	strdup		560433						
ANR	560667	Symbol	r_list_new		560433						
ANR	560668	Symbol	RBinSymbol		560433						
ANR	560669	Function	info	132:0:2914:3527							
ANR	560670	FunctionDef	info (RBinFile * bf)		560669	0					
ANR	560671	CompoundStatement		132:36:2950:3527	560669	0					
ANR	560672	IdentifierDeclStatement	RBinInfo * ret ;	133:1:2953:2966	560669	0	True				
ANR	560673	IdentifierDecl	* ret		560669	0					
ANR	560674	IdentifierDeclType	RBinInfo *		560669	0					
ANR	560675	Identifier	ret		560669	1					
ANR	560676	IfStatement	if ( ! ( ret = R_NEW0 ( RBinInfo ) ) )		560669	1					
ANR	560677	Condition	! ( ret = R_NEW0 ( RBinInfo ) )	135:5:2974:2999	560669	0	True				
ANR	560678	UnaryOperationExpression	! ( ret = R_NEW0 ( RBinInfo ) )		560669	0					
ANR	560679	UnaryOperator	!		560669	0					
ANR	560680	AssignmentExpression	ret = R_NEW0 ( RBinInfo )		560669	1		=			
ANR	560681	Identifier	ret		560669	0					
ANR	560682	CallExpression	R_NEW0 ( RBinInfo )		560669	1					
ANR	560683	Callee	R_NEW0		560669	0					
ANR	560684	Identifier	R_NEW0		560669	0					
ANR	560685	ArgumentList	RBinInfo		560669	1					
ANR	560686	Argument	RBinInfo		560669	0					
ANR	560687	Identifier	RBinInfo		560669	0					
ANR	560688	CompoundStatement		4:33:51:51	560669	1					
ANR	560689	ReturnStatement	return NULL ;	136:2:3006:3017	560669	0	True				
ANR	560690	Identifier	NULL		560669	0					
ANR	560691	ExpressionStatement	ret -> file = strdup ( bf -> file )	138:1:3023:3052	560669	2	True				
ANR	560692	AssignmentExpression	ret -> file = strdup ( bf -> file )		560669	0		=			
ANR	560693	PtrMemberAccess	ret -> file		560669	0					
ANR	560694	Identifier	ret		560669	0					
ANR	560695	Identifier	file		560669	1					
ANR	560696	CallExpression	strdup ( bf -> file )		560669	1					
ANR	560697	Callee	strdup		560669	0					
ANR	560698	Identifier	strdup		560669	0					
ANR	560699	ArgumentList	bf -> file		560669	1					
ANR	560700	Argument	bf -> file		560669	0					
ANR	560701	PtrMemberAccess	bf -> file		560669	0					
ANR	560702	Identifier	bf		560669	0					
ANR	560703	Identifier	file		560669	1					
ANR	560704	ExpressionStatement	"ret -> bclass = strdup ( ""OMF"" )"	139:1:3055:3083	560669	3	True				
ANR	560705	AssignmentExpression	"ret -> bclass = strdup ( ""OMF"" )"		560669	0		=			
ANR	560706	PtrMemberAccess	ret -> bclass		560669	0					
ANR	560707	Identifier	ret		560669	0					
ANR	560708	Identifier	bclass		560669	1					
ANR	560709	CallExpression	"strdup ( ""OMF"" )"		560669	1					
ANR	560710	Callee	strdup		560669	0					
ANR	560711	Identifier	strdup		560669	0					
ANR	560712	ArgumentList	"""OMF"""		560669	1					
ANR	560713	Argument	"""OMF"""		560669	0					
ANR	560714	PrimaryExpression	"""OMF"""		560669	0					
ANR	560715	ExpressionStatement	"ret -> rclass = strdup ( ""omf"" )"	140:1:3086:3114	560669	4	True				
ANR	560716	AssignmentExpression	"ret -> rclass = strdup ( ""omf"" )"		560669	0		=			
ANR	560717	PtrMemberAccess	ret -> rclass		560669	0					
ANR	560718	Identifier	ret		560669	0					
ANR	560719	Identifier	rclass		560669	1					
ANR	560720	CallExpression	"strdup ( ""omf"" )"		560669	1					
ANR	560721	Callee	strdup		560669	0					
ANR	560722	Identifier	strdup		560669	0					
ANR	560723	ArgumentList	"""omf"""		560669	1					
ANR	560724	Argument	"""omf"""		560669	0					
ANR	560725	PrimaryExpression	"""omf"""		560669	0					
ANR	560726	ExpressionStatement	"ret -> type = strdup ( ""E OMF (Relocatable Object Module Format)"" )"	142:1:3199:3262	560669	5	True				
ANR	560727	AssignmentExpression	"ret -> type = strdup ( ""E OMF (Relocatable Object Module Format)"" )"		560669	0		=			
ANR	560728	PtrMemberAccess	ret -> type		560669	0					
ANR	560729	Identifier	ret		560669	0					
ANR	560730	Identifier	type		560669	1					
ANR	560731	CallExpression	"strdup ( ""E OMF (Relocatable Object Module Format)"" )"		560669	1					
ANR	560732	Callee	strdup		560669	0					
ANR	560733	Identifier	strdup		560669	0					
ANR	560734	ArgumentList	"""E OMF (Relocatable Object Module Format)"""		560669	1					
ANR	560735	Argument	"""E OMF (Relocatable Object Module Format)"""		560669	0					
ANR	560736	PrimaryExpression	"""E OMF (Relocatable Object Module Format)"""		560669	0					
ANR	560737	ExpressionStatement	"ret -> os = strdup ( ""any"" )"	143:1:3265:3289	560669	6	True				
ANR	560738	AssignmentExpression	"ret -> os = strdup ( ""any"" )"		560669	0		=			
ANR	560739	PtrMemberAccess	ret -> os		560669	0					
ANR	560740	Identifier	ret		560669	0					
ANR	560741	Identifier	os		560669	1					
ANR	560742	CallExpression	"strdup ( ""any"" )"		560669	1					
ANR	560743	Callee	strdup		560669	0					
ANR	560744	Identifier	strdup		560669	0					
ANR	560745	ArgumentList	"""any"""		560669	1					
ANR	560746	Argument	"""any"""		560669	0					
ANR	560747	PrimaryExpression	"""any"""		560669	0					
ANR	560748	ExpressionStatement	"ret -> machine = strdup ( ""i386"" )"	144:1:3292:3322	560669	7	True				
ANR	560749	AssignmentExpression	"ret -> machine = strdup ( ""i386"" )"		560669	0		=			
ANR	560750	PtrMemberAccess	ret -> machine		560669	0					
ANR	560751	Identifier	ret		560669	0					
ANR	560752	Identifier	machine		560669	1					
ANR	560753	CallExpression	"strdup ( ""i386"" )"		560669	1					
ANR	560754	Callee	strdup		560669	0					
ANR	560755	Identifier	strdup		560669	0					
ANR	560756	ArgumentList	"""i386"""		560669	1					
ANR	560757	Argument	"""i386"""		560669	0					
ANR	560758	PrimaryExpression	"""i386"""		560669	0					
ANR	560759	ExpressionStatement	"ret -> arch = strdup ( ""x86"" )"	145:1:3325:3351	560669	8	True				
ANR	560760	AssignmentExpression	"ret -> arch = strdup ( ""x86"" )"		560669	0		=			
ANR	560761	PtrMemberAccess	ret -> arch		560669	0					
ANR	560762	Identifier	ret		560669	0					
ANR	560763	Identifier	arch		560669	1					
ANR	560764	CallExpression	"strdup ( ""x86"" )"		560669	1					
ANR	560765	Callee	strdup		560669	0					
ANR	560766	Identifier	strdup		560669	0					
ANR	560767	ArgumentList	"""x86"""		560669	1					
ANR	560768	Argument	"""x86"""		560669	0					
ANR	560769	PrimaryExpression	"""x86"""		560669	0					
ANR	560770	ExpressionStatement	ret -> big_endian = false	146:1:3354:3377	560669	9	True				
ANR	560771	AssignmentExpression	ret -> big_endian = false		560669	0		=			
ANR	560772	PtrMemberAccess	ret -> big_endian		560669	0					
ANR	560773	Identifier	ret		560669	0					
ANR	560774	Identifier	big_endian		560669	1					
ANR	560775	Identifier	false		560669	1					
ANR	560776	ExpressionStatement	ret -> has_va = true	147:1:3380:3398	560669	10	True				
ANR	560777	AssignmentExpression	ret -> has_va = true		560669	0		=			
ANR	560778	PtrMemberAccess	ret -> has_va		560669	0					
ANR	560779	Identifier	ret		560669	0					
ANR	560780	Identifier	has_va		560669	1					
ANR	560781	Identifier	true		560669	1					
ANR	560782	ExpressionStatement	ret -> has_lit = true	148:1:3401:3420	560669	11	True				
ANR	560783	AssignmentExpression	ret -> has_lit = true		560669	0		=			
ANR	560784	PtrMemberAccess	ret -> has_lit		560669	0					
ANR	560785	Identifier	ret		560669	0					
ANR	560786	Identifier	has_lit		560669	1					
ANR	560787	Identifier	true		560669	1					
ANR	560788	ExpressionStatement	ret -> bits = r_bin_omf_get_bits ( bf -> o -> bin_obj )	149:1:3423:3470	560669	12	True				
ANR	560789	AssignmentExpression	ret -> bits = r_bin_omf_get_bits ( bf -> o -> bin_obj )		560669	0		=			
ANR	560790	PtrMemberAccess	ret -> bits		560669	0					
ANR	560791	Identifier	ret		560669	0					
ANR	560792	Identifier	bits		560669	1					
ANR	560793	CallExpression	r_bin_omf_get_bits ( bf -> o -> bin_obj )		560669	1					
ANR	560794	Callee	r_bin_omf_get_bits		560669	0					
ANR	560795	Identifier	r_bin_omf_get_bits		560669	0					
ANR	560796	ArgumentList	bf -> o -> bin_obj		560669	1					
ANR	560797	Argument	bf -> o -> bin_obj		560669	0					
ANR	560798	PtrMemberAccess	bf -> o -> bin_obj		560669	0					
ANR	560799	PtrMemberAccess	bf -> o		560669	0					
ANR	560800	Identifier	bf		560669	0					
ANR	560801	Identifier	o		560669	1					
ANR	560802	Identifier	bin_obj		560669	1					
ANR	560803	ExpressionStatement	ret -> dbg_info = 0	150:1:3473:3490	560669	13	True				
ANR	560804	AssignmentExpression	ret -> dbg_info = 0		560669	0		=			
ANR	560805	PtrMemberAccess	ret -> dbg_info		560669	0					
ANR	560806	Identifier	ret		560669	0					
ANR	560807	Identifier	dbg_info		560669	1					
ANR	560808	PrimaryExpression	0		560669	1					
ANR	560809	ExpressionStatement	ret -> has_nx = false	151:1:3493:3512	560669	14	True				
ANR	560810	AssignmentExpression	ret -> has_nx = false		560669	0		=			
ANR	560811	PtrMemberAccess	ret -> has_nx		560669	0					
ANR	560812	Identifier	ret		560669	0					
ANR	560813	Identifier	has_nx		560669	1					
ANR	560814	Identifier	false		560669	1					
ANR	560815	ReturnStatement	return ret ;	152:1:3515:3525	560669	15	True				
ANR	560816	Identifier	ret		560669	0					
ANR	560817	ReturnType	static RBinInfo *		560669	1					
ANR	560818	Identifier	info		560669	2					
ANR	560819	ParameterList	RBinFile * bf		560669	3					
ANR	560820	Parameter	RBinFile * bf	132:22:2936:2947	560669	0	True				
ANR	560821	ParameterType	RBinFile *		560669	0					
ANR	560822	Identifier	bf		560669	1					
ANR	560823	CFGEntryNode	ENTRY		560669		True				
ANR	560824	CFGExitNode	EXIT		560669		True				
ANR	560825	Symbol	ret -> big_endian		560669						
ANR	560826	Symbol	bf		560669						
ANR	560827	Symbol	ret -> has_nx		560669						
ANR	560828	Symbol	ret -> arch		560669						
ANR	560829	Symbol	* ret		560669						
ANR	560830	Symbol	* bf -> o		560669						
ANR	560831	Symbol	ret -> dbg_info		560669						
ANR	560832	Symbol	ret -> bclass		560669						
ANR	560833	Symbol	bf -> file		560669						
ANR	560834	Symbol	r_bin_omf_get_bits		560669						
ANR	560835	Symbol	ret -> rclass		560669						
ANR	560836	Symbol	bf -> o		560669						
ANR	560837	Symbol	ret -> has_lit		560669						
ANR	560838	Symbol	ret -> has_va		560669						
ANR	560839	Symbol	ret		560669						
ANR	560840	Symbol	ret -> os		560669						
ANR	560841	Symbol	bf -> o -> bin_obj		560669						
ANR	560842	Symbol	NULL		560669						
ANR	560843	Symbol	false		560669						
ANR	560844	Symbol	* bf		560669						
ANR	560845	Symbol	ret -> machine		560669						
ANR	560846	Symbol	R_NEW0		560669						
ANR	560847	Symbol	* * bf		560669						
ANR	560848	Symbol	true		560669						
ANR	560849	Symbol	ret -> bits		560669						
ANR	560850	Symbol	RBinInfo		560669						
ANR	560851	Symbol	strdup		560669						
ANR	560852	Symbol	ret -> file		560669						
ANR	560853	Symbol	ret -> type		560669						
ANR	560854	Function	get_vaddr	155:0:3530:3619							
ANR	560855	FunctionDef	"get_vaddr (RBinFile * bf , ut64 baddr , ut64 paddr , ut64 vaddr)"		560854	0					
ANR	560856	CompoundStatement		155:72:3602:3619	560854	0					
ANR	560857	ReturnStatement	return vaddr ;	156:1:3605:3617	560854	0	True				
ANR	560858	Identifier	vaddr		560854	0					
ANR	560859	ReturnType	static ut64		560854	1					
ANR	560860	Identifier	get_vaddr		560854	2					
ANR	560861	ParameterList	"RBinFile * bf , ut64 baddr , ut64 paddr , ut64 vaddr"		560854	3					
ANR	560862	Parameter	RBinFile * bf	155:22:3552:3563	560854	0	True				
ANR	560863	ParameterType	RBinFile *		560854	0					
ANR	560864	Identifier	bf		560854	1					
ANR	560865	Parameter	ut64 baddr	155:36:3566:3575	560854	1	True				
ANR	560866	ParameterType	ut64		560854	0					
ANR	560867	Identifier	baddr		560854	1					
ANR	560868	Parameter	ut64 paddr	155:48:3578:3587	560854	2	True				
ANR	560869	ParameterType	ut64		560854	0					
ANR	560870	Identifier	paddr		560854	1					
ANR	560871	Parameter	ut64 vaddr	155:60:3590:3599	560854	3	True				
ANR	560872	ParameterType	ut64		560854	0					
ANR	560873	Identifier	vaddr		560854	1					
ANR	560874	CFGEntryNode	ENTRY		560854		True				
ANR	560875	CFGExitNode	EXIT		560854		True				
ANR	560876	Symbol	baddr		560854						
ANR	560877	Symbol	bf		560854						
ANR	560878	Symbol	paddr		560854						
ANR	560879	Symbol	vaddr		560854						
ANR	560880	DeclStmt									
ANR	560881	Decl							RBinPlugin	RBinPlugin	r_bin_plugin_omf
ANR	560882	DeclStmt									
ANR	560883	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
