command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5086774	File	data/converged/CVE-2019-16718~_radare2/libr_util_bdiff.c								
ANR	5086775	ClassDef	line	21:0:474:523							
ANR	5086776	DeclStmt									
ANR	5086777	Decl							int	int	h
ANR	5086778	Decl							int	int	len
ANR	5086779	Decl							int	int	n
ANR	5086780	Decl							int	int	e
ANR	5086781	DeclStmt									
ANR	5086782	Decl							const char	const char *	l
ANR	5086783	ClassDef	pos	26:0:527:555							
ANR	5086784	DeclStmt									
ANR	5086785	Decl							int	int	pos
ANR	5086786	Decl							int	int	len
ANR	5086787	ClassDef	hunk	30:0:559:594							
ANR	5086788	DeclStmt									
ANR	5086789	Decl							int	int	a1
ANR	5086790	Decl							int	int	a2
ANR	5086791	Decl							int	int	b1
ANR	5086792	Decl							int	int	b2
ANR	5086793	ClassDef	hunklist	34:0:598:643							
ANR	5086794	DeclStmt									
ANR	5086795	Decl							struct hunk	struct hunk *	base
ANR	5086796	Decl							struct hunk	struct hunk *	head
ANR	5086797	Function	splitlines	38:0:647:1482							
ANR	5086798	FunctionDef	"splitlines (const char * a , int len , struct line * * lr)"		5086797	0					
ANR	5086799	CompoundStatement		38:64:711:1482	5086797	0					
ANR	5086800	IdentifierDeclStatement	"int h , i ;"	39:1:714:722	5086797	0	True				
ANR	5086801	IdentifierDecl	h		5086797	0					
ANR	5086802	IdentifierDeclType	int		5086797	0					
ANR	5086803	Identifier	h		5086797	1					
ANR	5086804	IdentifierDecl	i		5086797	1					
ANR	5086805	IdentifierDeclType	int		5086797	0					
ANR	5086806	Identifier	i		5086797	1					
ANR	5086807	IdentifierDeclStatement	"const char * p , * b = a ;"	40:1:725:746	5086797	1	True				
ANR	5086808	IdentifierDecl	* p		5086797	0					
ANR	5086809	IdentifierDeclType	const char *		5086797	0					
ANR	5086810	Identifier	p		5086797	1					
ANR	5086811	IdentifierDecl	* b = a		5086797	1					
ANR	5086812	IdentifierDeclType	const char *		5086797	0					
ANR	5086813	Identifier	b		5086797	1					
ANR	5086814	AssignmentExpression	* b = a		5086797	2		=			
ANR	5086815	Identifier	a		5086797	0					
ANR	5086816	Identifier	a		5086797	1					
ANR	5086817	Statement	const	41:1:749:753	5086797	2	True				
ANR	5086818	Statement	char	41:7:755:758	5086797	3	True				
ANR	5086819	Statement	*	41:12:760:760	5086797	4	True				
ANR	5086820	Statement	const	41:14:762:766	5086797	5	True				
ANR	5086821	ExpressionStatement	plast = a + len - 1	41:20:768:787	5086797	6	True				
ANR	5086822	AssignmentExpression	plast = a + len - 1		5086797	0		=			
ANR	5086823	Identifier	plast		5086797	0					
ANR	5086824	AdditiveExpression	a + len - 1		5086797	1		+			
ANR	5086825	Identifier	a		5086797	0					
ANR	5086826	AdditiveExpression	len - 1		5086797	1		-			
ANR	5086827	Identifier	len		5086797	0					
ANR	5086828	PrimaryExpression	1		5086797	1					
ANR	5086829	IdentifierDeclStatement	struct line * l ;	42:1:790:804	5086797	7	True				
ANR	5086830	IdentifierDecl	* l		5086797	0					
ANR	5086831	IdentifierDeclType	struct line *		5086797	0					
ANR	5086832	Identifier	l		5086797	1					
ANR	5086833	IfStatement	if ( ! a )		5086797	8					
ANR	5086834	Condition	! a	44:5:812:813	5086797	0	True				
ANR	5086835	UnaryOperationExpression	! a		5086797	0					
ANR	5086836	UnaryOperator	!		5086797	0					
ANR	5086837	Identifier	a		5086797	1					
ANR	5086838	CompoundStatement		7:9:104:104	5086797	1					
ANR	5086839	ExpressionStatement	"eprintf ( ""null pointer received\\n"" )"	45:2:820:855	5086797	0	True				
ANR	5086840	CallExpression	"eprintf ( ""null pointer received\\n"" )"		5086797	0					
ANR	5086841	Callee	eprintf		5086797	0					
ANR	5086842	Identifier	eprintf		5086797	0					
ANR	5086843	ArgumentList	"""null pointer received\\n"""		5086797	1					
ANR	5086844	Argument	"""null pointer received\\n"""		5086797	0					
ANR	5086845	PrimaryExpression	"""null pointer received\\n"""		5086797	0					
ANR	5086846	ReturnStatement	return 0 ;	46:2:859:867	5086797	1	True				
ANR	5086847	PrimaryExpression	0		5086797	0					
ANR	5086848	ExpressionStatement	i = 1	50:1:897:902	5086797	9	True				
ANR	5086849	AssignmentExpression	i = 1		5086797	0		=			
ANR	5086850	Identifier	i		5086797	0					
ANR	5086851	PrimaryExpression	1		5086797	1					
ANR	5086852	ForStatement	for ( p = a ; p < a + len ; p ++ )		5086797	10					
ANR	5086853	ForInit	p = a ;	51:6:940:945	5086797	0	True				
ANR	5086854	AssignmentExpression	p = a		5086797	0		=			
ANR	5086855	Identifier	p		5086797	0					
ANR	5086856	Identifier	a		5086797	1					
ANR	5086857	Condition	p < a + len	51:13:947:957	5086797	1	True				
ANR	5086858	RelationalExpression	p < a + len		5086797	0		<			
ANR	5086859	Identifier	p		5086797	0					
ANR	5086860	AdditiveExpression	a + len		5086797	1		+			
ANR	5086861	Identifier	a		5086797	0					
ANR	5086862	Identifier	len		5086797	1					
ANR	5086863	PostIncDecOperationExpression	p ++	51:26:960:962	5086797	2	True				
ANR	5086864	Identifier	p		5086797	0					
ANR	5086865	IncDec	++		5086797	1					
ANR	5086866	CompoundStatement		14:31:253:253	5086797	3					
ANR	5086867	IfStatement	if ( * p == '\\n' || p == plast )		5086797	0					
ANR	5086868	Condition	* p == '\\n' || p == plast	52:6:973:996	5086797	0	True				
ANR	5086869	OrExpression	* p == '\\n' || p == plast		5086797	0		||			
ANR	5086870	EqualityExpression	* p == '\\n'		5086797	0		==			
ANR	5086871	UnaryOperationExpression	* p		5086797	0					
ANR	5086872	UnaryOperator	*		5086797	0					
ANR	5086873	Identifier	p		5086797	1					
ANR	5086874	PrimaryExpression	'\\n'		5086797	1					
ANR	5086875	EqualityExpression	p == plast		5086797	1		==			
ANR	5086876	Identifier	p		5086797	0					
ANR	5086877	Identifier	plast		5086797	1					
ANR	5086878	CompoundStatement		15:32:287:287	5086797	1					
ANR	5086879	ExpressionStatement	i ++	53:3:1004:1007	5086797	0	True				
ANR	5086880	PostIncDecOperationExpression	i ++		5086797	0					
ANR	5086881	Identifier	i		5086797	0					
ANR	5086882	IncDec	++		5086797	1					
ANR	5086883	ExpressionStatement	* lr = l = ( struct line * ) malloc ( sizeof ( struct line ) * i )	57:1:1018:1074	5086797	11	True				
ANR	5086884	AssignmentExpression	* lr = l = ( struct line * ) malloc ( sizeof ( struct line ) * i )		5086797	0		=			
ANR	5086885	UnaryOperationExpression	* lr		5086797	0					
ANR	5086886	UnaryOperator	*		5086797	0					
ANR	5086887	Identifier	lr		5086797	1					
ANR	5086888	AssignmentExpression	l = ( struct line * ) malloc ( sizeof ( struct line ) * i )		5086797	1		=			
ANR	5086889	Identifier	l		5086797	0					
ANR	5086890	CastExpression	( struct line * ) malloc ( sizeof ( struct line ) * i )		5086797	1					
ANR	5086891	CastTarget	struct line *		5086797	0					
ANR	5086892	CallExpression	malloc ( sizeof ( struct line ) * i )		5086797	1					
ANR	5086893	Callee	malloc		5086797	0					
ANR	5086894	Identifier	malloc		5086797	0					
ANR	5086895	ArgumentList	sizeof ( struct line ) * i		5086797	1					
ANR	5086896	Argument	sizeof ( struct line ) * i		5086797	0					
ANR	5086897	MultiplicativeExpression	sizeof ( struct line ) * i		5086797	0		*			
ANR	5086898	SizeofExpression	sizeof ( struct line )		5086797	0					
ANR	5086899	Sizeof	sizeof		5086797	0					
ANR	5086900	SizeofOperand	struct line		5086797	1					
ANR	5086901	Identifier	i		5086797	1					
ANR	5086902	IfStatement	if ( ! l )		5086797	12					
ANR	5086903	Condition	! l	58:5:1081:1082	5086797	0	True				
ANR	5086904	UnaryOperationExpression	! l		5086797	0					
ANR	5086905	UnaryOperator	!		5086797	0					
ANR	5086906	Identifier	l		5086797	1					
ANR	5086907	CompoundStatement		21:9:373:373	5086797	1					
ANR	5086908	ReturnStatement	return - 1 ;	59:2:1089:1098	5086797	0	True				
ANR	5086909	UnaryOperationExpression	- 1		5086797	0					
ANR	5086910	UnaryOperator	-		5086797	0					
ANR	5086911	PrimaryExpression	1		5086797	1					
ANR	5086912	ExpressionStatement	h = 0	63:1:1154:1159	5086797	13	True				
ANR	5086913	AssignmentExpression	h = 0		5086797	0		=			
ANR	5086914	Identifier	h		5086797	0					
ANR	5086915	PrimaryExpression	0		5086797	1					
ANR	5086916	ForStatement	for ( p = a ; p < a + len ; p ++ )		5086797	14					
ANR	5086917	ForInit	p = a ;	64:6:1167:1172	5086797	0	True				
ANR	5086918	AssignmentExpression	p = a		5086797	0		=			
ANR	5086919	Identifier	p		5086797	0					
ANR	5086920	Identifier	a		5086797	1					
ANR	5086921	Condition	p < a + len	64:13:1174:1184	5086797	1	True				
ANR	5086922	RelationalExpression	p < a + len		5086797	0		<			
ANR	5086923	Identifier	p		5086797	0					
ANR	5086924	AdditiveExpression	a + len		5086797	1		+			
ANR	5086925	Identifier	a		5086797	0					
ANR	5086926	Identifier	len		5086797	1					
ANR	5086927	PostIncDecOperationExpression	p ++	64:26:1187:1189	5086797	2	True				
ANR	5086928	Identifier	p		5086797	0					
ANR	5086929	IncDec	++		5086797	1					
ANR	5086930	CompoundStatement		27:31:480:480	5086797	3					
ANR	5086931	ExpressionStatement	h = ( h * 1664525 ) + * p + 1013904223	66:2:1225:1260	5086797	0	True				
ANR	5086932	AssignmentExpression	h = ( h * 1664525 ) + * p + 1013904223		5086797	0		=			
ANR	5086933	Identifier	h		5086797	0					
ANR	5086934	AdditiveExpression	( h * 1664525 ) + * p + 1013904223		5086797	1		+			
ANR	5086935	MultiplicativeExpression	h * 1664525		5086797	0		*			
ANR	5086936	Identifier	h		5086797	0					
ANR	5086937	PrimaryExpression	1664525		5086797	1					
ANR	5086938	AdditiveExpression	* p + 1013904223		5086797	1		+			
ANR	5086939	UnaryOperationExpression	* p		5086797	0					
ANR	5086940	UnaryOperator	*		5086797	0					
ANR	5086941	Identifier	p		5086797	1					
ANR	5086942	PrimaryExpression	1013904223		5086797	1					
ANR	5086943	IfStatement	if ( * p == '\\n' || p == plast )		5086797	1					
ANR	5086944	Condition	* p == '\\n' || p == plast	68:6:1269:1292	5086797	0	True				
ANR	5086945	OrExpression	* p == '\\n' || p == plast		5086797	0		||			
ANR	5086946	EqualityExpression	* p == '\\n'		5086797	0		==			
ANR	5086947	UnaryOperationExpression	* p		5086797	0					
ANR	5086948	UnaryOperator	*		5086797	0					
ANR	5086949	Identifier	p		5086797	1					
ANR	5086950	PrimaryExpression	'\\n'		5086797	1					
ANR	5086951	EqualityExpression	p == plast		5086797	1		==			
ANR	5086952	Identifier	p		5086797	0					
ANR	5086953	Identifier	plast		5086797	1					
ANR	5086954	CompoundStatement		31:32:583:583	5086797	1					
ANR	5086955	ExpressionStatement	l -> h = h	69:3:1300:1308	5086797	0	True				
ANR	5086956	AssignmentExpression	l -> h = h		5086797	0		=			
ANR	5086957	PtrMemberAccess	l -> h		5086797	0					
ANR	5086958	Identifier	l		5086797	0					
ANR	5086959	Identifier	h		5086797	1					
ANR	5086960	Identifier	h		5086797	1					
ANR	5086961	ExpressionStatement	h = 0	70:3:1313:1318	5086797	1	True				
ANR	5086962	AssignmentExpression	h = 0		5086797	0		=			
ANR	5086963	Identifier	h		5086797	0					
ANR	5086964	PrimaryExpression	0		5086797	1					
ANR	5086965	ExpressionStatement	l -> len = p - b + 1	71:3:1323:1341	5086797	2	True				
ANR	5086966	AssignmentExpression	l -> len = p - b + 1		5086797	0		=			
ANR	5086967	PtrMemberAccess	l -> len		5086797	0					
ANR	5086968	Identifier	l		5086797	0					
ANR	5086969	Identifier	len		5086797	1					
ANR	5086970	AdditiveExpression	p - b + 1		5086797	1		-			
ANR	5086971	Identifier	p		5086797	0					
ANR	5086972	AdditiveExpression	b + 1		5086797	1		+			
ANR	5086973	Identifier	b		5086797	0					
ANR	5086974	PrimaryExpression	1		5086797	1					
ANR	5086975	ExpressionStatement	l -> l = b	72:3:1346:1354	5086797	3	True				
ANR	5086976	AssignmentExpression	l -> l = b		5086797	0		=			
ANR	5086977	PtrMemberAccess	l -> l		5086797	0					
ANR	5086978	Identifier	l		5086797	0					
ANR	5086979	Identifier	l		5086797	1					
ANR	5086980	Identifier	b		5086797	1					
ANR	5086981	ExpressionStatement	l -> n = INT_MAX	73:3:1359:1373	5086797	4	True				
ANR	5086982	AssignmentExpression	l -> n = INT_MAX		5086797	0		=			
ANR	5086983	PtrMemberAccess	l -> n		5086797	0					
ANR	5086984	Identifier	l		5086797	0					
ANR	5086985	Identifier	n		5086797	1					
ANR	5086986	Identifier	INT_MAX		5086797	1					
ANR	5086987	ExpressionStatement	l ++	74:3:1378:1381	5086797	5	True				
ANR	5086988	PostIncDecOperationExpression	l ++		5086797	0					
ANR	5086989	Identifier	l		5086797	0					
ANR	5086990	IncDec	++		5086797	1					
ANR	5086991	ExpressionStatement	b = p + 1	75:3:1386:1395	5086797	6	True				
ANR	5086992	AssignmentExpression	b = p + 1		5086797	0		=			
ANR	5086993	Identifier	b		5086797	0					
ANR	5086994	AdditiveExpression	p + 1		5086797	1		+			
ANR	5086995	Identifier	p		5086797	0					
ANR	5086996	PrimaryExpression	1		5086797	1					
ANR	5086997	ExpressionStatement	l -> h = l -> len = 0	80:1:1431:1448	5086797	15	True				
ANR	5086998	AssignmentExpression	l -> h = l -> len = 0		5086797	0		=			
ANR	5086999	PtrMemberAccess	l -> h		5086797	0					
ANR	5087000	Identifier	l		5086797	0					
ANR	5087001	Identifier	h		5086797	1					
ANR	5087002	AssignmentExpression	l -> len = 0		5086797	1		=			
ANR	5087003	PtrMemberAccess	l -> len		5086797	0					
ANR	5087004	Identifier	l		5086797	0					
ANR	5087005	Identifier	len		5086797	1					
ANR	5087006	PrimaryExpression	0		5086797	1					
ANR	5087007	ExpressionStatement	l -> l = a + len	81:1:1451:1465	5086797	16	True				
ANR	5087008	AssignmentExpression	l -> l = a + len		5086797	0		=			
ANR	5087009	PtrMemberAccess	l -> l		5086797	0					
ANR	5087010	Identifier	l		5086797	0					
ANR	5087011	Identifier	l		5086797	1					
ANR	5087012	AdditiveExpression	a + len		5086797	1		+			
ANR	5087013	Identifier	a		5086797	0					
ANR	5087014	Identifier	len		5086797	1					
ANR	5087015	ReturnStatement	return i - 1 ;	82:1:1468:1480	5086797	17	True				
ANR	5087016	AdditiveExpression	i - 1		5086797	0		-			
ANR	5087017	Identifier	i		5086797	0					
ANR	5087018	PrimaryExpression	1		5086797	1					
ANR	5087019	ReturnType	static int		5086797	1					
ANR	5087020	Identifier	splitlines		5086797	2					
ANR	5087021	ParameterList	"const char * a , int len , struct line * * lr"		5086797	3					
ANR	5087022	Parameter	const char * a	38:22:669:681	5086797	0	True				
ANR	5087023	ParameterType	const char *		5086797	0					
ANR	5087024	Identifier	a		5086797	1					
ANR	5087025	Parameter	int len	38:37:684:690	5086797	1	True				
ANR	5087026	ParameterType	int		5086797	0					
ANR	5087027	Identifier	len		5086797	1					
ANR	5087028	Parameter	struct line * * lr	38:46:693:708	5086797	2	True				
ANR	5087029	ParameterType	struct line * *		5086797	0					
ANR	5087030	Identifier	lr		5086797	1					
ANR	5087031	CFGEntryNode	ENTRY		5086797		True				
ANR	5087032	CFGExitNode	EXIT		5086797		True				
ANR	5087033	Symbol	a		5086797						
ANR	5087034	Symbol	malloc		5086797						
ANR	5087035	Symbol	b		5086797						
ANR	5087036	Symbol	lr		5086797						
ANR	5087037	Symbol	h		5086797						
ANR	5087038	Symbol	i		5086797						
ANR	5087039	Symbol	l		5086797						
ANR	5087040	Symbol	l -> h		5086797						
ANR	5087041	Symbol	* lr		5086797						
ANR	5087042	Symbol	p		5086797						
ANR	5087043	Symbol	l -> len		5086797						
ANR	5087044	Symbol	l -> n		5086797						
ANR	5087045	Symbol	l -> l		5086797						
ANR	5087046	Symbol	len		5086797						
ANR	5087047	Symbol	* l		5086797						
ANR	5087048	Symbol	INT_MAX		5086797						
ANR	5087049	Symbol	plast		5086797						
ANR	5087050	Symbol	* p		5086797						
ANR	5087051	Function	cmp	85:0:1485:1613							
ANR	5087052	FunctionDef	"cmp (struct line * a , struct line * b)"		5087051	0					
ANR	5087053	CompoundStatement		85:54:1539:1613	5087051	0					
ANR	5087054	ReturnStatement	"return a -> h != b -> h || a -> len != b -> len || memcmp ( a -> l , b -> l , a -> len ) ;"	86:1:1542:1611	5087051	0	True				
ANR	5087055	OrExpression	"a -> h != b -> h || a -> len != b -> len || memcmp ( a -> l , b -> l , a -> len )"		5087051	0		||			
ANR	5087056	EqualityExpression	a -> h != b -> h		5087051	0		!=			
ANR	5087057	PtrMemberAccess	a -> h		5087051	0					
ANR	5087058	Identifier	a		5087051	0					
ANR	5087059	Identifier	h		5087051	1					
ANR	5087060	PtrMemberAccess	b -> h		5087051	1					
ANR	5087061	Identifier	b		5087051	0					
ANR	5087062	Identifier	h		5087051	1					
ANR	5087063	OrExpression	"a -> len != b -> len || memcmp ( a -> l , b -> l , a -> len )"		5087051	1		||			
ANR	5087064	EqualityExpression	a -> len != b -> len		5087051	0		!=			
ANR	5087065	PtrMemberAccess	a -> len		5087051	0					
ANR	5087066	Identifier	a		5087051	0					
ANR	5087067	Identifier	len		5087051	1					
ANR	5087068	PtrMemberAccess	b -> len		5087051	1					
ANR	5087069	Identifier	b		5087051	0					
ANR	5087070	Identifier	len		5087051	1					
ANR	5087071	CallExpression	"memcmp ( a -> l , b -> l , a -> len )"		5087051	1					
ANR	5087072	Callee	memcmp		5087051	0					
ANR	5087073	Identifier	memcmp		5087051	0					
ANR	5087074	ArgumentList	a -> l		5087051	1					
ANR	5087075	Argument	a -> l		5087051	0					
ANR	5087076	PtrMemberAccess	a -> l		5087051	0					
ANR	5087077	Identifier	a		5087051	0					
ANR	5087078	Identifier	l		5087051	1					
ANR	5087079	Argument	b -> l		5087051	1					
ANR	5087080	PtrMemberAccess	b -> l		5087051	0					
ANR	5087081	Identifier	b		5087051	0					
ANR	5087082	Identifier	l		5087051	1					
ANR	5087083	Argument	a -> len		5087051	2					
ANR	5087084	PtrMemberAccess	a -> len		5087051	0					
ANR	5087085	Identifier	a		5087051	0					
ANR	5087086	Identifier	len		5087051	1					
ANR	5087087	ReturnType	inline static int		5087051	1					
ANR	5087088	Identifier	cmp		5087051	2					
ANR	5087089	ParameterList	"struct line * a , struct line * b"		5087051	3					
ANR	5087090	Parameter	struct line * a	85:22:1507:1520	5087051	0	True				
ANR	5087091	ParameterType	struct line *		5087051	0					
ANR	5087092	Identifier	a		5087051	1					
ANR	5087093	Parameter	struct line * b	85:38:1523:1536	5087051	1	True				
ANR	5087094	ParameterType	struct line *		5087051	0					
ANR	5087095	Identifier	b		5087051	1					
ANR	5087096	CFGEntryNode	ENTRY		5087051		True				
ANR	5087097	CFGExitNode	EXIT		5087051		True				
ANR	5087098	Symbol	a		5087051						
ANR	5087099	Symbol	b		5087051						
ANR	5087100	Symbol	a -> l		5087051						
ANR	5087101	Symbol	memcmp		5087051						
ANR	5087102	Symbol	b -> h		5087051						
ANR	5087103	Symbol	a -> h		5087051						
ANR	5087104	Symbol	a -> len		5087051						
ANR	5087105	Symbol	b -> l		5087051						
ANR	5087106	Symbol	b -> len		5087051						
ANR	5087107	Symbol	* a		5087051						
ANR	5087108	Symbol	* b		5087051						
ANR	5087109	Function	equatelines	89:0:1616:3183							
ANR	5087110	FunctionDef	"equatelines (struct line * a , int an , struct line * b , int bn)"		5087109	0					
ANR	5087111	CompoundStatement		89:71:1687:3183	5087109	0					
ANR	5087112	IdentifierDeclStatement	"int i , j , buckets = 1 , t , scale ;"	90:1:1690:1721	5087109	0	True				
ANR	5087113	IdentifierDecl	i		5087109	0					
ANR	5087114	IdentifierDeclType	int		5087109	0					
ANR	5087115	Identifier	i		5087109	1					
ANR	5087116	IdentifierDecl	j		5087109	1					
ANR	5087117	IdentifierDeclType	int		5087109	0					
ANR	5087118	Identifier	j		5087109	1					
ANR	5087119	IdentifierDecl	buckets = 1		5087109	2					
ANR	5087120	IdentifierDeclType	int		5087109	0					
ANR	5087121	Identifier	buckets		5087109	1					
ANR	5087122	AssignmentExpression	buckets = 1		5087109	2		=			
ANR	5087123	Identifier	buckets		5087109	0					
ANR	5087124	PrimaryExpression	1		5087109	1					
ANR	5087125	IdentifierDecl	t		5087109	3					
ANR	5087126	IdentifierDeclType	int		5087109	0					
ANR	5087127	Identifier	t		5087109	1					
ANR	5087128	IdentifierDecl	scale		5087109	4					
ANR	5087129	IdentifierDeclType	int		5087109	0					
ANR	5087130	Identifier	scale		5087109	1					
ANR	5087131	IdentifierDeclStatement	struct pos * h = NULL ;	91:1:1724:1744	5087109	1	True				
ANR	5087132	IdentifierDecl	* h = NULL		5087109	0					
ANR	5087133	IdentifierDeclType	struct pos *		5087109	0					
ANR	5087134	Identifier	h		5087109	1					
ANR	5087135	AssignmentExpression	* h = NULL		5087109	2		=			
ANR	5087136	Identifier	NULL		5087109	0					
ANR	5087137	Identifier	NULL		5087109	1					
ANR	5087138	WhileStatement	while ( buckets < bn + 1 )		5087109	2					
ANR	5087139	Condition	buckets < bn + 1	94:8:1812:1827	5087109	0	True				
ANR	5087140	RelationalExpression	buckets < bn + 1		5087109	0		<			
ANR	5087141	Identifier	buckets		5087109	0					
ANR	5087142	AdditiveExpression	bn + 1		5087109	1		+			
ANR	5087143	Identifier	bn		5087109	0					
ANR	5087144	PrimaryExpression	1		5087109	1					
ANR	5087145	CompoundStatement		6:26:142:142	5087109	1					
ANR	5087146	ExpressionStatement	buckets *= 2	95:2:1834:1846	5087109	0	True				
ANR	5087147	AssignmentExpression	buckets *= 2		5087109	0		*=			
ANR	5087148	Identifier	buckets		5087109	0					
ANR	5087149	PrimaryExpression	2		5087109	1					
ANR	5087150	ForStatement	for ( scale = 4 ; scale ; scale /= 2 )		5087109	3					
ANR	5087151	ForInit	scale = 4 ;	99:6:1920:1929	5087109	0	True				
ANR	5087152	AssignmentExpression	scale = 4		5087109	0		=			
ANR	5087153	Identifier	scale		5087109	0					
ANR	5087154	PrimaryExpression	4		5087109	1					
ANR	5087155	Condition	scale	99:17:1931:1935	5087109	1	True				
ANR	5087156	Identifier	scale		5087109	0					
ANR	5087157	AssignmentExpression	scale /= 2	99:24:1938:1947	5087109	2	True	/=			
ANR	5087158	Identifier	scale		5087109	0					
ANR	5087159	PrimaryExpression	2		5087109	1					
ANR	5087160	CompoundStatement		11:36:262:262	5087109	3					
ANR	5087161	ExpressionStatement	h = ( struct pos * ) malloc ( scale * buckets * sizeof ( struct pos ) )	100:2:1954:2016	5087109	0	True				
ANR	5087162	AssignmentExpression	h = ( struct pos * ) malloc ( scale * buckets * sizeof ( struct pos ) )		5087109	0		=			
ANR	5087163	Identifier	h		5087109	0					
ANR	5087164	CastExpression	( struct pos * ) malloc ( scale * buckets * sizeof ( struct pos ) )		5087109	1					
ANR	5087165	CastTarget	struct pos *		5087109	0					
ANR	5087166	CallExpression	malloc ( scale * buckets * sizeof ( struct pos ) )		5087109	1					
ANR	5087167	Callee	malloc		5087109	0					
ANR	5087168	Identifier	malloc		5087109	0					
ANR	5087169	ArgumentList	scale * buckets * sizeof ( struct pos )		5087109	1					
ANR	5087170	Argument	scale * buckets * sizeof ( struct pos )		5087109	0					
ANR	5087171	MultiplicativeExpression	scale * buckets * sizeof ( struct pos )		5087109	0		*			
ANR	5087172	Identifier	scale		5087109	0					
ANR	5087173	MultiplicativeExpression	buckets * sizeof ( struct pos )		5087109	1		*			
ANR	5087174	Identifier	buckets		5087109	0					
ANR	5087175	SizeofExpression	sizeof ( struct pos )		5087109	1					
ANR	5087176	Sizeof	sizeof		5087109	0					
ANR	5087177	SizeofOperand	struct pos		5087109	1					
ANR	5087178	IfStatement	if ( h )		5087109	1					
ANR	5087179	Condition	h	101:6:2024:2024	5087109	0	True				
ANR	5087180	Identifier	h		5087109	0					
ANR	5087181	CompoundStatement		13:9:339:339	5087109	1					
ANR	5087182	BreakStatement	break ;	102:3:2032:2037	5087109	0	True				
ANR	5087183	IfStatement	if ( ! h )		5087109	4					
ANR	5087184	Condition	! h	106:5:2052:2053	5087109	0	True				
ANR	5087185	UnaryOperationExpression	! h		5087109	0					
ANR	5087186	UnaryOperator	!		5087109	0					
ANR	5087187	Identifier	h		5087109	1					
ANR	5087188	CompoundStatement		18:9:368:368	5087109	1					
ANR	5087189	ReturnStatement	return 0 ;	107:2:2060:2068	5087109	0	True				
ANR	5087190	PrimaryExpression	0		5087109	0					
ANR	5087191	ExpressionStatement	buckets = buckets * scale - 1	110:1:2075:2104	5087109	5	True				
ANR	5087192	AssignmentExpression	buckets = buckets * scale - 1		5087109	0		=			
ANR	5087193	Identifier	buckets		5087109	0					
ANR	5087194	AdditiveExpression	buckets * scale - 1		5087109	1		-			
ANR	5087195	MultiplicativeExpression	buckets * scale		5087109	0		*			
ANR	5087196	Identifier	buckets		5087109	0					
ANR	5087197	Identifier	scale		5087109	1					
ANR	5087198	PrimaryExpression	1		5087109	1					
ANR	5087199	ForStatement	for ( i = 0 ; i <= buckets ; i ++ )		5087109	6					
ANR	5087200	ForInit	i = 0 ;	113:6:2141:2146	5087109	0	True				
ANR	5087201	AssignmentExpression	i = 0		5087109	0		=			
ANR	5087202	Identifier	i		5087109	0					
ANR	5087203	PrimaryExpression	0		5087109	1					
ANR	5087204	Condition	i <= buckets	113:13:2148:2159	5087109	1	True				
ANR	5087205	RelationalExpression	i <= buckets		5087109	0		<=			
ANR	5087206	Identifier	i		5087109	0					
ANR	5087207	Identifier	buckets		5087109	1					
ANR	5087208	PostIncDecOperationExpression	i ++	113:27:2162:2164	5087109	2	True				
ANR	5087209	Identifier	i		5087109	0					
ANR	5087210	IncDec	++		5087109	1					
ANR	5087211	CompoundStatement		25:32:479:479	5087109	3					
ANR	5087212	ExpressionStatement	h [ i ] . pos = INT_MAX	114:2:2171:2189	5087109	0	True				
ANR	5087213	AssignmentExpression	h [ i ] . pos = INT_MAX		5087109	0		=			
ANR	5087214	MemberAccess	h [ i ] . pos		5087109	0					
ANR	5087215	ArrayIndexing	h [ i ]		5087109	0					
ANR	5087216	Identifier	h		5087109	0					
ANR	5087217	Identifier	i		5087109	1					
ANR	5087218	Identifier	pos		5087109	1					
ANR	5087219	Identifier	INT_MAX		5087109	1					
ANR	5087220	ExpressionStatement	h [ i ] . len = 0	115:2:2193:2205	5087109	1	True				
ANR	5087221	AssignmentExpression	h [ i ] . len = 0		5087109	0		=			
ANR	5087222	MemberAccess	h [ i ] . len		5087109	0					
ANR	5087223	ArrayIndexing	h [ i ]		5087109	0					
ANR	5087224	Identifier	h		5087109	0					
ANR	5087225	Identifier	i		5087109	1					
ANR	5087226	Identifier	len		5087109	1					
ANR	5087227	PrimaryExpression	0		5087109	1					
ANR	5087228	ForStatement	for ( i = bn - 1 ; i >= 0 ; i -- )		5087109	7					
ANR	5087229	ForInit	i = bn - 1 ;	119:6:2259:2269	5087109	0	True				
ANR	5087230	AssignmentExpression	i = bn - 1		5087109	0		=			
ANR	5087231	Identifier	i		5087109	0					
ANR	5087232	AdditiveExpression	bn - 1		5087109	1		-			
ANR	5087233	Identifier	bn		5087109	0					
ANR	5087234	PrimaryExpression	1		5087109	1					
ANR	5087235	Condition	i >= 0	119:18:2271:2276	5087109	1	True				
ANR	5087236	RelationalExpression	i >= 0		5087109	0		>=			
ANR	5087237	Identifier	i		5087109	0					
ANR	5087238	PrimaryExpression	0		5087109	1					
ANR	5087239	PostIncDecOperationExpression	i --	119:26:2279:2281	5087109	2	True				
ANR	5087240	Identifier	i		5087109	0					
ANR	5087241	IncDec	--		5087109	1					
ANR	5087242	CompoundStatement		31:31:596:596	5087109	3					
ANR	5087243	ForStatement	for ( j = b [ i ] . h & buckets ; h [ j ] . pos != INT_MAX ; j = ( j + 1 ) & buckets )		5087109	0					
ANR	5087244	ForInit	j = b [ i ] . h & buckets ;	121:7:2328:2348	5087109	0	True				
ANR	5087245	AssignmentExpression	j = b [ i ] . h & buckets		5087109	0		=			
ANR	5087246	Identifier	j		5087109	0					
ANR	5087247	BitAndExpression	b [ i ] . h & buckets		5087109	1		&			
ANR	5087248	MemberAccess	b [ i ] . h		5087109	0					
ANR	5087249	ArrayIndexing	b [ i ]		5087109	0					
ANR	5087250	Identifier	b		5087109	0					
ANR	5087251	Identifier	i		5087109	1					
ANR	5087252	Identifier	h		5087109	1					
ANR	5087253	Identifier	buckets		5087109	1					
ANR	5087254	Condition	h [ j ] . pos != INT_MAX	121:29:2350:2368	5087109	1	True				
ANR	5087255	EqualityExpression	h [ j ] . pos != INT_MAX		5087109	0		!=			
ANR	5087256	MemberAccess	h [ j ] . pos		5087109	0					
ANR	5087257	ArrayIndexing	h [ j ]		5087109	0					
ANR	5087258	Identifier	h		5087109	0					
ANR	5087259	Identifier	j		5087109	1					
ANR	5087260	Identifier	pos		5087109	1					
ANR	5087261	Identifier	INT_MAX		5087109	1					
ANR	5087262	AssignmentExpression	j = ( j + 1 ) & buckets	122:3:2374:2394	5087109	2	True	=			
ANR	5087263	Identifier	j		5087109	0					
ANR	5087264	BitAndExpression	( j + 1 ) & buckets		5087109	1		&			
ANR	5087265	AdditiveExpression	j + 1		5087109	0		+			
ANR	5087266	Identifier	j		5087109	0					
ANR	5087267	PrimaryExpression	1		5087109	1					
ANR	5087268	Identifier	buckets		5087109	1					
ANR	5087269	CompoundStatement		34:26:709:709	5087109	3					
ANR	5087270	IfStatement	"if ( ! cmp ( b + i , b + h [ j ] . pos ) )"		5087109	0					
ANR	5087271	Condition	"! cmp ( b + i , b + h [ j ] . pos )"	123:7:2406:2431	5087109	0	True				
ANR	5087272	UnaryOperationExpression	"! cmp ( b + i , b + h [ j ] . pos )"		5087109	0					
ANR	5087273	UnaryOperator	!		5087109	0					
ANR	5087274	CallExpression	"cmp ( b + i , b + h [ j ] . pos )"		5087109	1					
ANR	5087275	Callee	cmp		5087109	0					
ANR	5087276	Identifier	cmp		5087109	0					
ANR	5087277	ArgumentList	b + i		5087109	1					
ANR	5087278	Argument	b + i		5087109	0					
ANR	5087279	AdditiveExpression	b + i		5087109	0		+			
ANR	5087280	Identifier	b		5087109	0					
ANR	5087281	Identifier	i		5087109	1					
ANR	5087282	Argument	b + h [ j ] . pos		5087109	1					
ANR	5087283	AdditiveExpression	b + h [ j ] . pos		5087109	0		+			
ANR	5087284	Identifier	b		5087109	0					
ANR	5087285	MemberAccess	h [ j ] . pos		5087109	1					
ANR	5087286	ArrayIndexing	h [ j ]		5087109	0					
ANR	5087287	Identifier	h		5087109	0					
ANR	5087288	Identifier	j		5087109	1					
ANR	5087289	Identifier	pos		5087109	1					
ANR	5087290	CompoundStatement		35:35:746:746	5087109	1					
ANR	5087291	BreakStatement	break ;	124:4:2440:2445	5087109	0	True				
ANR	5087292	ExpressionStatement	b [ i ] . n = h [ j ] . pos	129:2:2508:2525	5087109	1	True				
ANR	5087293	AssignmentExpression	b [ i ] . n = h [ j ] . pos		5087109	0		=			
ANR	5087294	MemberAccess	b [ i ] . n		5087109	0					
ANR	5087295	ArrayIndexing	b [ i ]		5087109	0					
ANR	5087296	Identifier	b		5087109	0					
ANR	5087297	Identifier	i		5087109	1					
ANR	5087298	Identifier	n		5087109	1					
ANR	5087299	MemberAccess	h [ j ] . pos		5087109	1					
ANR	5087300	ArrayIndexing	h [ j ]		5087109	0					
ANR	5087301	Identifier	h		5087109	0					
ANR	5087302	Identifier	j		5087109	1					
ANR	5087303	Identifier	pos		5087109	1					
ANR	5087304	ExpressionStatement	b [ i ] . e = j	130:2:2529:2539	5087109	2	True				
ANR	5087305	AssignmentExpression	b [ i ] . e = j		5087109	0		=			
ANR	5087306	MemberAccess	b [ i ] . e		5087109	0					
ANR	5087307	ArrayIndexing	b [ i ]		5087109	0					
ANR	5087308	Identifier	b		5087109	0					
ANR	5087309	Identifier	i		5087109	1					
ANR	5087310	Identifier	e		5087109	1					
ANR	5087311	Identifier	j		5087109	1					
ANR	5087312	ExpressionStatement	h [ j ] . pos = i	131:2:2543:2555	5087109	3	True				
ANR	5087313	AssignmentExpression	h [ j ] . pos = i		5087109	0		=			
ANR	5087314	MemberAccess	h [ j ] . pos		5087109	0					
ANR	5087315	ArrayIndexing	h [ j ]		5087109	0					
ANR	5087316	Identifier	h		5087109	0					
ANR	5087317	Identifier	j		5087109	1					
ANR	5087318	Identifier	pos		5087109	1					
ANR	5087319	Identifier	i		5087109	1					
ANR	5087320	ExpressionStatement	h [ j ] . len ++	132:2:2559:2569	5087109	4	True				
ANR	5087321	PostIncDecOperationExpression	h [ j ] . len ++		5087109	0					
ANR	5087322	MemberAccess	h [ j ] . len		5087109	0					
ANR	5087323	ArrayIndexing	h [ j ]		5087109	0					
ANR	5087324	Identifier	h		5087109	0					
ANR	5087325	Identifier	j		5087109	1					
ANR	5087326	Identifier	len		5087109	1					
ANR	5087327	IncDec	++		5087109	1					
ANR	5087328	ExpressionStatement	t = ( bn >= 4000 ) ? bn / 1000 : bn + 1	136:1:2643:2680	5087109	8	True				
ANR	5087329	AssignmentExpression	t = ( bn >= 4000 ) ? bn / 1000 : bn + 1		5087109	0		=			
ANR	5087330	Identifier	t		5087109	0					
ANR	5087331	ConditionalExpression	( bn >= 4000 ) ? bn / 1000 : bn + 1		5087109	1					
ANR	5087332	Condition	bn >= 4000		5087109	0					
ANR	5087333	RelationalExpression	bn >= 4000		5087109	0		>=			
ANR	5087334	Identifier	bn		5087109	0					
ANR	5087335	PrimaryExpression	4000		5087109	1					
ANR	5087336	MultiplicativeExpression	bn / 1000		5087109	1		/			
ANR	5087337	Identifier	bn		5087109	0					
ANR	5087338	PrimaryExpression	1000		5087109	1					
ANR	5087339	AdditiveExpression	bn + 1		5087109	2		+			
ANR	5087340	Identifier	bn		5087109	0					
ANR	5087341	PrimaryExpression	1		5087109	1					
ANR	5087342	ForStatement	for ( i = 0 ; i < an ; i ++ )		5087109	9					
ANR	5087343	ForInit	i = 0 ;	139:6:2745:2750	5087109	0	True				
ANR	5087344	AssignmentExpression	i = 0		5087109	0		=			
ANR	5087345	Identifier	i		5087109	0					
ANR	5087346	PrimaryExpression	0		5087109	1					
ANR	5087347	Condition	i < an	139:13:2752:2757	5087109	1	True				
ANR	5087348	RelationalExpression	i < an		5087109	0		<			
ANR	5087349	Identifier	i		5087109	0					
ANR	5087350	Identifier	an		5087109	1					
ANR	5087351	PostIncDecOperationExpression	i ++	139:21:2760:2762	5087109	2	True				
ANR	5087352	Identifier	i		5087109	0					
ANR	5087353	IncDec	++		5087109	1					
ANR	5087354	CompoundStatement		51:26:1077:1077	5087109	3					
ANR	5087355	ForStatement	for ( j = a [ i ] . h & buckets ; h [ j ] . pos != INT_MAX ; j = ( j + 1 ) & buckets )		5087109	0					
ANR	5087356	ForInit	j = a [ i ] . h & buckets ;	141:7:2809:2829	5087109	0	True				
ANR	5087357	AssignmentExpression	j = a [ i ] . h & buckets		5087109	0		=			
ANR	5087358	Identifier	j		5087109	0					
ANR	5087359	BitAndExpression	a [ i ] . h & buckets		5087109	1		&			
ANR	5087360	MemberAccess	a [ i ] . h		5087109	0					
ANR	5087361	ArrayIndexing	a [ i ]		5087109	0					
ANR	5087362	Identifier	a		5087109	0					
ANR	5087363	Identifier	i		5087109	1					
ANR	5087364	Identifier	h		5087109	1					
ANR	5087365	Identifier	buckets		5087109	1					
ANR	5087366	Condition	h [ j ] . pos != INT_MAX	141:29:2831:2849	5087109	1	True				
ANR	5087367	EqualityExpression	h [ j ] . pos != INT_MAX		5087109	0		!=			
ANR	5087368	MemberAccess	h [ j ] . pos		5087109	0					
ANR	5087369	ArrayIndexing	h [ j ]		5087109	0					
ANR	5087370	Identifier	h		5087109	0					
ANR	5087371	Identifier	j		5087109	1					
ANR	5087372	Identifier	pos		5087109	1					
ANR	5087373	Identifier	INT_MAX		5087109	1					
ANR	5087374	AssignmentExpression	j = ( j + 1 ) & buckets	142:3:2855:2875	5087109	2	True	=			
ANR	5087375	Identifier	j		5087109	0					
ANR	5087376	BitAndExpression	( j + 1 ) & buckets		5087109	1		&			
ANR	5087377	AdditiveExpression	j + 1		5087109	0		+			
ANR	5087378	Identifier	j		5087109	0					
ANR	5087379	PrimaryExpression	1		5087109	1					
ANR	5087380	Identifier	buckets		5087109	1					
ANR	5087381	CompoundStatement		54:26:1190:1190	5087109	3					
ANR	5087382	IfStatement	"if ( ! cmp ( a + i , b + h [ j ] . pos ) )"		5087109	0					
ANR	5087383	Condition	"! cmp ( a + i , b + h [ j ] . pos )"	143:7:2887:2912	5087109	0	True				
ANR	5087384	UnaryOperationExpression	"! cmp ( a + i , b + h [ j ] . pos )"		5087109	0					
ANR	5087385	UnaryOperator	!		5087109	0					
ANR	5087386	CallExpression	"cmp ( a + i , b + h [ j ] . pos )"		5087109	1					
ANR	5087387	Callee	cmp		5087109	0					
ANR	5087388	Identifier	cmp		5087109	0					
ANR	5087389	ArgumentList	a + i		5087109	1					
ANR	5087390	Argument	a + i		5087109	0					
ANR	5087391	AdditiveExpression	a + i		5087109	0		+			
ANR	5087392	Identifier	a		5087109	0					
ANR	5087393	Identifier	i		5087109	1					
ANR	5087394	Argument	b + h [ j ] . pos		5087109	1					
ANR	5087395	AdditiveExpression	b + h [ j ] . pos		5087109	0		+			
ANR	5087396	Identifier	b		5087109	0					
ANR	5087397	MemberAccess	h [ j ] . pos		5087109	1					
ANR	5087398	ArrayIndexing	h [ j ]		5087109	0					
ANR	5087399	Identifier	h		5087109	0					
ANR	5087400	Identifier	j		5087109	1					
ANR	5087401	Identifier	pos		5087109	1					
ANR	5087402	CompoundStatement		55:35:1227:1227	5087109	1					
ANR	5087403	BreakStatement	break ;	144:4:2921:2926	5087109	0	True				
ANR	5087404	ExpressionStatement	a [ i ] . e = j	148:2:2940:2950	5087109	1	True				
ANR	5087405	AssignmentExpression	a [ i ] . e = j		5087109	0		=			
ANR	5087406	MemberAccess	a [ i ] . e		5087109	0					
ANR	5087407	ArrayIndexing	a [ i ]		5087109	0					
ANR	5087408	Identifier	a		5087109	0					
ANR	5087409	Identifier	i		5087109	1					
ANR	5087410	Identifier	e		5087109	1					
ANR	5087411	Identifier	j		5087109	1					
ANR	5087412	IfStatement	if ( h [ j ] . len <= t )		5087109	2					
ANR	5087413	Condition	h [ j ] . len <= t	149:6:3004:3016	5087109	0	True				
ANR	5087414	RelationalExpression	h [ j ] . len <= t		5087109	0		<=			
ANR	5087415	MemberAccess	h [ j ] . len		5087109	0					
ANR	5087416	ArrayIndexing	h [ j ]		5087109	0					
ANR	5087417	Identifier	h		5087109	0					
ANR	5087418	Identifier	j		5087109	1					
ANR	5087419	Identifier	len		5087109	1					
ANR	5087420	Identifier	t		5087109	1					
ANR	5087421	CompoundStatement		61:21:1331:1331	5087109	1					
ANR	5087422	ExpressionStatement	a [ i ] . n = h [ j ] . pos	150:3:3024:3041	5087109	0	True				
ANR	5087423	AssignmentExpression	a [ i ] . n = h [ j ] . pos		5087109	0		=			
ANR	5087424	MemberAccess	a [ i ] . n		5087109	0					
ANR	5087425	ArrayIndexing	a [ i ]		5087109	0					
ANR	5087426	Identifier	a		5087109	0					
ANR	5087427	Identifier	i		5087109	1					
ANR	5087428	Identifier	n		5087109	1					
ANR	5087429	MemberAccess	h [ j ] . pos		5087109	1					
ANR	5087430	ArrayIndexing	h [ j ]		5087109	0					
ANR	5087431	Identifier	h		5087109	0					
ANR	5087432	Identifier	j		5087109	1					
ANR	5087433	Identifier	pos		5087109	1					
ANR	5087434	ElseStatement	else		5087109	0					
ANR	5087435	CompoundStatement		63:9:1398:1398	5087109	0					
ANR	5087436	ExpressionStatement	a [ i ] . n = INT_MAX	152:3:3091:3107	5087109	0	True				
ANR	5087437	AssignmentExpression	a [ i ] . n = INT_MAX		5087109	0		=			
ANR	5087438	MemberAccess	a [ i ] . n		5087109	0					
ANR	5087439	ArrayIndexing	a [ i ]		5087109	0					
ANR	5087440	Identifier	a		5087109	0					
ANR	5087441	Identifier	i		5087109	1					
ANR	5087442	Identifier	n		5087109	1					
ANR	5087443	Identifier	INT_MAX		5087109	1					
ANR	5087444	ExpressionStatement	free ( h )	157:1:3163:3170	5087109	10	True				
ANR	5087445	CallExpression	free ( h )		5087109	0					
ANR	5087446	Callee	free		5087109	0					
ANR	5087447	Identifier	free		5087109	0					
ANR	5087448	ArgumentList	h		5087109	1					
ANR	5087449	Argument	h		5087109	0					
ANR	5087450	Identifier	h		5087109	0					
ANR	5087451	ReturnStatement	return 1 ;	158:1:3173:3181	5087109	11	True				
ANR	5087452	PrimaryExpression	1		5087109	0					
ANR	5087453	ReturnType	static int		5087109	1					
ANR	5087454	Identifier	equatelines		5087109	2					
ANR	5087455	ParameterList	"struct line * a , int an , struct line * b , int bn"		5087109	3					
ANR	5087456	Parameter	struct line * a	89:23:1639:1652	5087109	0	True				
ANR	5087457	ParameterType	struct line *		5087109	0					
ANR	5087458	Identifier	a		5087109	1					
ANR	5087459	Parameter	int an	89:39:1655:1660	5087109	1	True				
ANR	5087460	ParameterType	int		5087109	0					
ANR	5087461	Identifier	an		5087109	1					
ANR	5087462	Parameter	struct line * b	89:47:1663:1676	5087109	2	True				
ANR	5087463	ParameterType	struct line *		5087109	0					
ANR	5087464	Identifier	b		5087109	1					
ANR	5087465	Parameter	int bn	89:63:1679:1684	5087109	3	True				
ANR	5087466	ParameterType	int		5087109	0					
ANR	5087467	Identifier	bn		5087109	1					
ANR	5087468	CFGEntryNode	ENTRY		5087109		True				
ANR	5087469	CFGExitNode	EXIT		5087109		True				
ANR	5087470	Symbol	cmp		5087109						
ANR	5087471	Symbol	scale		5087109						
ANR	5087472	Symbol	bn		5087109						
ANR	5087473	Symbol	b [ i ] . h		5087109						
ANR	5087474	Symbol	b [ i ] . n		5087109						
ANR	5087475	Symbol	h [ j ] . len		5087109						
ANR	5087476	Symbol	h [ j ] . pos		5087109						
ANR	5087477	Symbol	INT_MAX		5087109						
ANR	5087478	Symbol	h [ i ] . len		5087109						
ANR	5087479	Symbol	h [ i ] . pos		5087109						
ANR	5087480	Symbol	b [ i ] . e		5087109						
ANR	5087481	Symbol	a		5087109						
ANR	5087482	Symbol	malloc		5087109						
ANR	5087483	Symbol	b		5087109						
ANR	5087484	Symbol	NULL		5087109						
ANR	5087485	Symbol	buckets		5087109						
ANR	5087486	Symbol	h		5087109						
ANR	5087487	Symbol	i		5087109						
ANR	5087488	Symbol	j		5087109						
ANR	5087489	Symbol	* a		5087109						
ANR	5087490	Symbol	* b		5087109						
ANR	5087491	Symbol	an		5087109						
ANR	5087492	Symbol	* h		5087109						
ANR	5087493	Symbol	* i		5087109						
ANR	5087494	Symbol	a [ i ] . e		5087109						
ANR	5087495	Symbol	t		5087109						
ANR	5087496	Symbol	* j		5087109						
ANR	5087497	Symbol	a [ i ] . n		5087109						
ANR	5087498	Symbol	a [ i ] . h		5087109						
ANR	5087499	Function	longest_match	161:0:3186:4200							
ANR	5087500	FunctionDef	"longest_match (struct line * a , struct line * b , struct pos * pos , int a1 , int a2 , int b1 , int b2 , int * omi , int * omj)"		5087499	0					
ANR	5087501	CompoundStatement		163:0:3316:4200	5087499	0					
ANR	5087502	IdentifierDeclStatement	"int mi = a1 , mj = b1 , mk = 0 , mb = 0 , i , j , k ;"	164:1:3319:3364	5087499	0	True				
ANR	5087503	IdentifierDecl	mi = a1		5087499	0					
ANR	5087504	IdentifierDeclType	int		5087499	0					
ANR	5087505	Identifier	mi		5087499	1					
ANR	5087506	AssignmentExpression	mi = a1		5087499	2		=			
ANR	5087507	Identifier	a1		5087499	0					
ANR	5087508	Identifier	a1		5087499	1					
ANR	5087509	IdentifierDecl	mj = b1		5087499	1					
ANR	5087510	IdentifierDeclType	int		5087499	0					
ANR	5087511	Identifier	mj		5087499	1					
ANR	5087512	AssignmentExpression	mj = b1		5087499	2		=			
ANR	5087513	Identifier	b1		5087499	0					
ANR	5087514	Identifier	b1		5087499	1					
ANR	5087515	IdentifierDecl	mk = 0		5087499	2					
ANR	5087516	IdentifierDeclType	int		5087499	0					
ANR	5087517	Identifier	mk		5087499	1					
ANR	5087518	AssignmentExpression	mk = 0		5087499	2		=			
ANR	5087519	Identifier	mk		5087499	0					
ANR	5087520	PrimaryExpression	0		5087499	1					
ANR	5087521	IdentifierDecl	mb = 0		5087499	3					
ANR	5087522	IdentifierDeclType	int		5087499	0					
ANR	5087523	Identifier	mb		5087499	1					
ANR	5087524	AssignmentExpression	mb = 0		5087499	2		=			
ANR	5087525	Identifier	mb		5087499	0					
ANR	5087526	PrimaryExpression	0		5087499	1					
ANR	5087527	IdentifierDecl	i		5087499	4					
ANR	5087528	IdentifierDeclType	int		5087499	0					
ANR	5087529	Identifier	i		5087499	1					
ANR	5087530	IdentifierDecl	j		5087499	5					
ANR	5087531	IdentifierDeclType	int		5087499	0					
ANR	5087532	Identifier	j		5087499	1					
ANR	5087533	IdentifierDecl	k		5087499	6					
ANR	5087534	IdentifierDeclType	int		5087499	0					
ANR	5087535	Identifier	k		5087499	1					
ANR	5087536	ForStatement	for ( i = a1 ; i < a2 ; i ++ )		5087499	1					
ANR	5087537	ForInit	i = a1 ;	166:6:3373:3379	5087499	0	True				
ANR	5087538	AssignmentExpression	i = a1		5087499	0		=			
ANR	5087539	Identifier	i		5087499	0					
ANR	5087540	Identifier	a1		5087499	1					
ANR	5087541	Condition	i < a2	166:14:3381:3386	5087499	1	True				
ANR	5087542	RelationalExpression	i < a2		5087499	0		<			
ANR	5087543	Identifier	i		5087499	0					
ANR	5087544	Identifier	a2		5087499	1					
ANR	5087545	PostIncDecOperationExpression	i ++	166:22:3389:3391	5087499	2	True				
ANR	5087546	Identifier	i		5087499	0					
ANR	5087547	IncDec	++		5087499	1					
ANR	5087548	CompoundStatement		4:27:77:77	5087499	3					
ANR	5087549	ForStatement	for ( j = a [ i ] . n ; j < b1 ; j = b [ j ] . n )		5087499	0					
ANR	5087550	ForInit	j = a [ i ] . n ;	168:7:3448:3458	5087499	0	True				
ANR	5087551	AssignmentExpression	j = a [ i ] . n		5087499	0		=			
ANR	5087552	Identifier	j		5087499	0					
ANR	5087553	MemberAccess	a [ i ] . n		5087499	1					
ANR	5087554	ArrayIndexing	a [ i ]		5087499	0					
ANR	5087555	Identifier	a		5087499	0					
ANR	5087556	Identifier	i		5087499	1					
ANR	5087557	Identifier	n		5087499	1					
ANR	5087558	Condition	j < b1	168:19:3460:3465	5087499	1	True				
ANR	5087559	RelationalExpression	j < b1		5087499	0		<			
ANR	5087560	Identifier	j		5087499	0					
ANR	5087561	Identifier	b1		5087499	1					
ANR	5087562	AssignmentExpression	j = b [ j ] . n	168:27:3468:3477	5087499	2	True	=			
ANR	5087563	Identifier	j		5087499	0					
ANR	5087564	MemberAccess	b [ j ] . n		5087499	1					
ANR	5087565	ArrayIndexing	b [ j ]		5087499	0					
ANR	5087566	Identifier	b		5087499	0					
ANR	5087567	Identifier	j		5087499	1					
ANR	5087568	Identifier	n		5087499	1					
ANR	5087569	CompoundStatement		6:39:163:163	5087499	3					
ANR	5087570	ExpressionStatement		169:3:3485:3485	5087499	0	True				
ANR	5087571	ForStatement	for ( ; j < b2 ; j = b [ j ] . n )		5087499	1					
ANR	5087572	Condition	j < b2	173:9:3548:3553	5087499	0	True				
ANR	5087573	RelationalExpression	j < b2		5087499	0		<			
ANR	5087574	Identifier	j		5087499	0					
ANR	5087575	Identifier	b2		5087499	1					
ANR	5087576	AssignmentExpression	j = b [ j ] . n	173:17:3556:3565	5087499	1	True	=			
ANR	5087577	Identifier	j		5087499	0					
ANR	5087578	MemberAccess	b [ j ] . n		5087499	1					
ANR	5087579	ArrayIndexing	b [ j ]		5087499	0					
ANR	5087580	Identifier	b		5087499	0					
ANR	5087581	Identifier	j		5087499	1					
ANR	5087582	Identifier	n		5087499	1					
ANR	5087583	CompoundStatement		11:29:251:251	5087499	2					
ANR	5087584	IfStatement	if ( i > a1 && j > b1 && pos [ j - 1 ] . pos == i - 1 )		5087499	0					
ANR	5087585	Condition	i > a1 && j > b1 && pos [ j - 1 ] . pos == i - 1	175:7:3621:3663	5087499	0	True				
ANR	5087586	AndExpression	i > a1 && j > b1 && pos [ j - 1 ] . pos == i - 1		5087499	0		&&			
ANR	5087587	RelationalExpression	i > a1		5087499	0		>			
ANR	5087588	Identifier	i		5087499	0					
ANR	5087589	Identifier	a1		5087499	1					
ANR	5087590	AndExpression	j > b1 && pos [ j - 1 ] . pos == i - 1		5087499	1		&&			
ANR	5087591	RelationalExpression	j > b1		5087499	0		>			
ANR	5087592	Identifier	j		5087499	0					
ANR	5087593	Identifier	b1		5087499	1					
ANR	5087594	EqualityExpression	pos [ j - 1 ] . pos == i - 1		5087499	1		==			
ANR	5087595	MemberAccess	pos [ j - 1 ] . pos		5087499	0					
ANR	5087596	ArrayIndexing	pos [ j - 1 ]		5087499	0					
ANR	5087597	Identifier	pos		5087499	0					
ANR	5087598	AdditiveExpression	j - 1		5087499	1		-			
ANR	5087599	Identifier	j		5087499	0					
ANR	5087600	PrimaryExpression	1		5087499	1					
ANR	5087601	Identifier	pos		5087499	1					
ANR	5087602	AdditiveExpression	i - 1		5087499	1		-			
ANR	5087603	Identifier	i		5087499	0					
ANR	5087604	PrimaryExpression	1		5087499	1					
ANR	5087605	CompoundStatement		13:52:349:349	5087499	1					
ANR	5087606	ExpressionStatement	k = pos [ j - 1 ] . len + 1	176:4:3672:3694	5087499	0	True				
ANR	5087607	AssignmentExpression	k = pos [ j - 1 ] . len + 1		5087499	0		=			
ANR	5087608	Identifier	k		5087499	0					
ANR	5087609	AdditiveExpression	pos [ j - 1 ] . len + 1		5087499	1		+			
ANR	5087610	MemberAccess	pos [ j - 1 ] . len		5087499	0					
ANR	5087611	ArrayIndexing	pos [ j - 1 ]		5087499	0					
ANR	5087612	Identifier	pos		5087499	0					
ANR	5087613	AdditiveExpression	j - 1		5087499	1		-			
ANR	5087614	Identifier	j		5087499	0					
ANR	5087615	PrimaryExpression	1		5087499	1					
ANR	5087616	Identifier	len		5087499	1					
ANR	5087617	PrimaryExpression	1		5087499	1					
ANR	5087618	ElseStatement	else		5087499	0					
ANR	5087619	CompoundStatement		15:10:389:389	5087499	0					
ANR	5087620	ExpressionStatement	k = 1	178:4:3712:3717	5087499	0	True				
ANR	5087621	AssignmentExpression	k = 1		5087499	0		=			
ANR	5087622	Identifier	k		5087499	0					
ANR	5087623	PrimaryExpression	1		5087499	1					
ANR	5087624	ExpressionStatement	pos [ j ] . pos = i	180:3:3727:3741	5087499	1	True				
ANR	5087625	AssignmentExpression	pos [ j ] . pos = i		5087499	0		=			
ANR	5087626	MemberAccess	pos [ j ] . pos		5087499	0					
ANR	5087627	ArrayIndexing	pos [ j ]		5087499	0					
ANR	5087628	Identifier	pos		5087499	0					
ANR	5087629	Identifier	j		5087499	1					
ANR	5087630	Identifier	pos		5087499	1					
ANR	5087631	Identifier	i		5087499	1					
ANR	5087632	ExpressionStatement	pos [ j ] . len = k	181:3:3746:3760	5087499	2	True				
ANR	5087633	AssignmentExpression	pos [ j ] . len = k		5087499	0		=			
ANR	5087634	MemberAccess	pos [ j ] . len		5087499	0					
ANR	5087635	ArrayIndexing	pos [ j ]		5087499	0					
ANR	5087636	Identifier	pos		5087499	0					
ANR	5087637	Identifier	j		5087499	1					
ANR	5087638	Identifier	len		5087499	1					
ANR	5087639	Identifier	k		5087499	1					
ANR	5087640	IfStatement	if ( k > mk )		5087499	3					
ANR	5087641	Condition	k > mk	184:7:3798:3803	5087499	0	True				
ANR	5087642	RelationalExpression	k > mk		5087499	0		>			
ANR	5087643	Identifier	k		5087499	0					
ANR	5087644	Identifier	mk		5087499	1					
ANR	5087645	CompoundStatement		22:15:489:489	5087499	1					
ANR	5087646	ExpressionStatement	mi = i	185:4:3812:3818	5087499	0	True				
ANR	5087647	AssignmentExpression	mi = i		5087499	0		=			
ANR	5087648	Identifier	mi		5087499	0					
ANR	5087649	Identifier	i		5087499	1					
ANR	5087650	ExpressionStatement	mj = j	186:4:3824:3830	5087499	1	True				
ANR	5087651	AssignmentExpression	mj = j		5087499	0		=			
ANR	5087652	Identifier	mj		5087499	0					
ANR	5087653	Identifier	j		5087499	1					
ANR	5087654	ExpressionStatement	mk = k	187:4:3836:3842	5087499	2	True				
ANR	5087655	AssignmentExpression	mk = k		5087499	0		=			
ANR	5087656	Identifier	mk		5087499	0					
ANR	5087657	Identifier	k		5087499	1					
ANR	5087658	IfStatement	if ( mk )		5087499	2					
ANR	5087659	Condition	mk	192:5:3862:3863	5087499	0	True				
ANR	5087660	Identifier	mk		5087499	0					
ANR	5087661	CompoundStatement		30:9:549:549	5087499	1					
ANR	5087662	ExpressionStatement	mi = mi - mk + 1	193:2:3870:3886	5087499	0	True				
ANR	5087663	AssignmentExpression	mi = mi - mk + 1		5087499	0		=			
ANR	5087664	Identifier	mi		5087499	0					
ANR	5087665	AdditiveExpression	mi - mk + 1		5087499	1		-			
ANR	5087666	Identifier	mi		5087499	0					
ANR	5087667	AdditiveExpression	mk + 1		5087499	1		+			
ANR	5087668	Identifier	mk		5087499	0					
ANR	5087669	PrimaryExpression	1		5087499	1					
ANR	5087670	ExpressionStatement	mj = mj - mk + 1	194:2:3890:3906	5087499	1	True				
ANR	5087671	AssignmentExpression	mj = mj - mk + 1		5087499	0		=			
ANR	5087672	Identifier	mj		5087499	0					
ANR	5087673	AdditiveExpression	mj - mk + 1		5087499	1		-			
ANR	5087674	Identifier	mj		5087499	0					
ANR	5087675	AdditiveExpression	mk + 1		5087499	1		+			
ANR	5087676	Identifier	mk		5087499	0					
ANR	5087677	PrimaryExpression	1		5087499	1					
ANR	5087678	WhileStatement	while ( mi - mb > a1 && mj - mb > b1 && a [ mi - mb - 1 ] . e == b [ mj - mb - 1 ] . e )		5087499	3					
ANR	5087679	Condition	mi - mb > a1 && mj - mb > b1 && a [ mi - mb - 1 ] . e == b [ mj - mb - 1 ] . e	198:8:3977:4046	5087499	0	True				
ANR	5087680	AndExpression	mi - mb > a1 && mj - mb > b1 && a [ mi - mb - 1 ] . e == b [ mj - mb - 1 ] . e		5087499	0		&&			
ANR	5087681	RelationalExpression	mi - mb > a1		5087499	0		>			
ANR	5087682	AdditiveExpression	mi - mb		5087499	0		-			
ANR	5087683	Identifier	mi		5087499	0					
ANR	5087684	Identifier	mb		5087499	1					
ANR	5087685	Identifier	a1		5087499	1					
ANR	5087686	AndExpression	mj - mb > b1 && a [ mi - mb - 1 ] . e == b [ mj - mb - 1 ] . e		5087499	1		&&			
ANR	5087687	RelationalExpression	mj - mb > b1		5087499	0		>			
ANR	5087688	AdditiveExpression	mj - mb		5087499	0		-			
ANR	5087689	Identifier	mj		5087499	0					
ANR	5087690	Identifier	mb		5087499	1					
ANR	5087691	Identifier	b1		5087499	1					
ANR	5087692	EqualityExpression	a [ mi - mb - 1 ] . e == b [ mj - mb - 1 ] . e		5087499	1		==			
ANR	5087693	MemberAccess	a [ mi - mb - 1 ] . e		5087499	0					
ANR	5087694	ArrayIndexing	a [ mi - mb - 1 ]		5087499	0					
ANR	5087695	Identifier	a		5087499	0					
ANR	5087696	AdditiveExpression	mi - mb - 1		5087499	1		-			
ANR	5087697	Identifier	mi		5087499	0					
ANR	5087698	AdditiveExpression	mb - 1		5087499	1		-			
ANR	5087699	Identifier	mb		5087499	0					
ANR	5087700	PrimaryExpression	1		5087499	1					
ANR	5087701	Identifier	e		5087499	1					
ANR	5087702	MemberAccess	b [ mj - mb - 1 ] . e		5087499	1					
ANR	5087703	ArrayIndexing	b [ mj - mb - 1 ]		5087499	0					
ANR	5087704	Identifier	b		5087499	0					
ANR	5087705	AdditiveExpression	mj - mb - 1		5087499	1		-			
ANR	5087706	Identifier	mj		5087499	0					
ANR	5087707	AdditiveExpression	mb - 1		5087499	1		-			
ANR	5087708	Identifier	mb		5087499	0					
ANR	5087709	PrimaryExpression	1		5087499	1					
ANR	5087710	Identifier	e		5087499	1					
ANR	5087711	CompoundStatement		37:40:732:732	5087499	1					
ANR	5087712	ExpressionStatement	mb ++	200:2:4053:4057	5087499	0	True				
ANR	5087713	PostIncDecOperationExpression	mb ++		5087499	0					
ANR	5087714	Identifier	mb		5087499	0					
ANR	5087715	IncDec	++		5087499	1					
ANR	5087716	WhileStatement	while ( mi + mk < a2 && mj + mk < b2 && a [ mi + mk ] . e == b [ mj + mk ] . e )		5087499	4					
ANR	5087717	Condition	mi + mk < a2 && mj + mk < b2 && a [ mi + mk ] . e == b [ mj + mk ] . e	202:8:4070:4131	5087499	0	True				
ANR	5087718	AndExpression	mi + mk < a2 && mj + mk < b2 && a [ mi + mk ] . e == b [ mj + mk ] . e		5087499	0		&&			
ANR	5087719	RelationalExpression	mi + mk < a2		5087499	0		<			
ANR	5087720	AdditiveExpression	mi + mk		5087499	0		+			
ANR	5087721	Identifier	mi		5087499	0					
ANR	5087722	Identifier	mk		5087499	1					
ANR	5087723	Identifier	a2		5087499	1					
ANR	5087724	AndExpression	mj + mk < b2 && a [ mi + mk ] . e == b [ mj + mk ] . e		5087499	1		&&			
ANR	5087725	RelationalExpression	mj + mk < b2		5087499	0		<			
ANR	5087726	AdditiveExpression	mj + mk		5087499	0		+			
ANR	5087727	Identifier	mj		5087499	0					
ANR	5087728	Identifier	mk		5087499	1					
ANR	5087729	Identifier	b2		5087499	1					
ANR	5087730	EqualityExpression	a [ mi + mk ] . e == b [ mj + mk ] . e		5087499	1		==			
ANR	5087731	MemberAccess	a [ mi + mk ] . e		5087499	0					
ANR	5087732	ArrayIndexing	a [ mi + mk ]		5087499	0					
ANR	5087733	Identifier	a		5087499	0					
ANR	5087734	AdditiveExpression	mi + mk		5087499	1		+			
ANR	5087735	Identifier	mi		5087499	0					
ANR	5087736	Identifier	mk		5087499	1					
ANR	5087737	Identifier	e		5087499	1					
ANR	5087738	MemberAccess	b [ mj + mk ] . e		5087499	1					
ANR	5087739	ArrayIndexing	b [ mj + mk ]		5087499	0					
ANR	5087740	Identifier	b		5087499	0					
ANR	5087741	AdditiveExpression	mj + mk		5087499	1		+			
ANR	5087742	Identifier	mj		5087499	0					
ANR	5087743	Identifier	mk		5087499	1					
ANR	5087744	Identifier	e		5087499	1					
ANR	5087745	CompoundStatement		41:32:817:817	5087499	1					
ANR	5087746	ExpressionStatement	mk ++	204:2:4138:4142	5087499	0	True				
ANR	5087747	PostIncDecOperationExpression	mk ++		5087499	0					
ANR	5087748	Identifier	mk		5087499	0					
ANR	5087749	IncDec	++		5087499	1					
ANR	5087750	ExpressionStatement	* omi = mi - mb	207:1:4149:4163	5087499	5	True				
ANR	5087751	AssignmentExpression	* omi = mi - mb		5087499	0		=			
ANR	5087752	UnaryOperationExpression	* omi		5087499	0					
ANR	5087753	UnaryOperator	*		5087499	0					
ANR	5087754	Identifier	omi		5087499	1					
ANR	5087755	AdditiveExpression	mi - mb		5087499	1		-			
ANR	5087756	Identifier	mi		5087499	0					
ANR	5087757	Identifier	mb		5087499	1					
ANR	5087758	ExpressionStatement	* omj = mj - mb	208:1:4166:4180	5087499	6	True				
ANR	5087759	AssignmentExpression	* omj = mj - mb		5087499	0		=			
ANR	5087760	UnaryOperationExpression	* omj		5087499	0					
ANR	5087761	UnaryOperator	*		5087499	0					
ANR	5087762	Identifier	omj		5087499	1					
ANR	5087763	AdditiveExpression	mj - mb		5087499	1		-			
ANR	5087764	Identifier	mj		5087499	0					
ANR	5087765	Identifier	mb		5087499	1					
ANR	5087766	ReturnStatement	return mk + mb ;	210:1:4184:4198	5087499	7	True				
ANR	5087767	AdditiveExpression	mk + mb		5087499	0		+			
ANR	5087768	Identifier	mk		5087499	0					
ANR	5087769	Identifier	mb		5087499	1					
ANR	5087770	ReturnType	static int		5087499	1					
ANR	5087771	Identifier	longest_match		5087499	2					
ANR	5087772	ParameterList	"struct line * a , struct line * b , struct pos * pos , int a1 , int a2 , int b1 , int b2 , int * omi , int * omj"		5087499	3					
ANR	5087773	Parameter	struct line * a	161:25:3211:3224	5087499	0	True				
ANR	5087774	ParameterType	struct line *		5087499	0					
ANR	5087775	Identifier	a		5087499	1					
ANR	5087776	Parameter	struct line * b	161:41:3227:3240	5087499	1	True				
ANR	5087777	ParameterType	struct line *		5087499	0					
ANR	5087778	Identifier	b		5087499	1					
ANR	5087779	Parameter	struct pos * pos	161:57:3243:3257	5087499	2	True				
ANR	5087780	ParameterType	struct pos *		5087499	0					
ANR	5087781	Identifier	pos		5087499	1					
ANR	5087782	Parameter	int a1	162:4:3264:3269	5087499	3	True				
ANR	5087783	ParameterType	int		5087499	0					
ANR	5087784	Identifier	a1		5087499	1					
ANR	5087785	Parameter	int a2	162:12:3272:3277	5087499	4	True				
ANR	5087786	ParameterType	int		5087499	0					
ANR	5087787	Identifier	a2		5087499	1					
ANR	5087788	Parameter	int b1	162:20:3280:3285	5087499	5	True				
ANR	5087789	ParameterType	int		5087499	0					
ANR	5087790	Identifier	b1		5087499	1					
ANR	5087791	Parameter	int b2	162:28:3288:3293	5087499	6	True				
ANR	5087792	ParameterType	int		5087499	0					
ANR	5087793	Identifier	b2		5087499	1					
ANR	5087794	Parameter	int * omi	162:36:3296:3303	5087499	7	True				
ANR	5087795	ParameterType	int *		5087499	0					
ANR	5087796	Identifier	omi		5087499	1					
ANR	5087797	Parameter	int * omj	162:46:3306:3313	5087499	8	True				
ANR	5087798	ParameterType	int *		5087499	0					
ANR	5087799	Identifier	omj		5087499	1					
ANR	5087800	CFGEntryNode	ENTRY		5087499		True				
ANR	5087801	CFGExitNode	EXIT		5087499		True				
ANR	5087802	Symbol	* mj		5087499						
ANR	5087803	Symbol	* mi		5087499						
ANR	5087804	Symbol	a [ mi - mb - 1 ] . e		5087499						
ANR	5087805	Symbol	* mk		5087499						
ANR	5087806	Symbol	b [ mj - mb - 1 ] . e		5087499						
ANR	5087807	Symbol	omi		5087499						
ANR	5087808	Symbol	pos [ j - 1 ] . len		5087499						
ANR	5087809	Symbol	omj		5087499						
ANR	5087810	Symbol	pos [ j - 1 ] . pos		5087499						
ANR	5087811	Symbol	b1		5087499						
ANR	5087812	Symbol	b2		5087499						
ANR	5087813	Symbol	b [ j ] . n		5087499						
ANR	5087814	Symbol	b [ mj + mk ] . e		5087499						
ANR	5087815	Symbol	pos		5087499						
ANR	5087816	Symbol	mb		5087499						
ANR	5087817	Symbol	a [ mi + mk ] . e		5087499						
ANR	5087818	Symbol	* mb		5087499						
ANR	5087819	Symbol	mi		5087499						
ANR	5087820	Symbol	pos [ j ] . len		5087499						
ANR	5087821	Symbol	mj		5087499						
ANR	5087822	Symbol	pos [ j ] . pos		5087499						
ANR	5087823	Symbol	mk		5087499						
ANR	5087824	Symbol	a		5087499						
ANR	5087825	Symbol	b		5087499						
ANR	5087826	Symbol	i		5087499						
ANR	5087827	Symbol	j		5087499						
ANR	5087828	Symbol	k		5087499						
ANR	5087829	Symbol	* a		5087499						
ANR	5087830	Symbol	* b		5087499						
ANR	5087831	Symbol	a1		5087499						
ANR	5087832	Symbol	a2		5087499						
ANR	5087833	Symbol	* i		5087499						
ANR	5087834	Symbol	* j		5087499						
ANR	5087835	Symbol	* omi		5087499						
ANR	5087836	Symbol	* omj		5087499						
ANR	5087837	Symbol	a [ i ] . n		5087499						
ANR	5087838	Symbol	* pos		5087499						
ANR	5087839	Function	recurse	213:0:4203:4705							
ANR	5087840	FunctionDef	"recurse (struct line * a , struct line * b , struct pos * pos , int a1 , int a2 , int b1 , int b2 , struct hunklist * l)"		5087839	0					
ANR	5087841	CompoundStatement		215:0:4330:4705	5087839	0					
ANR	5087842	IdentifierDeclStatement	"int i , j , k ;"	216:1:4333:4344	5087839	0	True				
ANR	5087843	IdentifierDecl	i		5087839	0					
ANR	5087844	IdentifierDeclType	int		5087839	0					
ANR	5087845	Identifier	i		5087839	1					
ANR	5087846	IdentifierDecl	j		5087839	1					
ANR	5087847	IdentifierDeclType	int		5087839	0					
ANR	5087848	Identifier	j		5087839	1					
ANR	5087849	IdentifierDecl	k		5087839	2					
ANR	5087850	IdentifierDeclType	int		5087839	0					
ANR	5087851	Identifier	k		5087839	1					
ANR	5087852	ExpressionStatement	"k = longest_match ( a , b , pos , a1 , a2 , b1 , b2 , & i , & j )"	219:1:4392:4444	5087839	1	True				
ANR	5087853	AssignmentExpression	"k = longest_match ( a , b , pos , a1 , a2 , b1 , b2 , & i , & j )"		5087839	0		=			
ANR	5087854	Identifier	k		5087839	0					
ANR	5087855	CallExpression	"longest_match ( a , b , pos , a1 , a2 , b1 , b2 , & i , & j )"		5087839	1					
ANR	5087856	Callee	longest_match		5087839	0					
ANR	5087857	Identifier	longest_match		5087839	0					
ANR	5087858	ArgumentList	a		5087839	1					
ANR	5087859	Argument	a		5087839	0					
ANR	5087860	Identifier	a		5087839	0					
ANR	5087861	Argument	b		5087839	1					
ANR	5087862	Identifier	b		5087839	0					
ANR	5087863	Argument	pos		5087839	2					
ANR	5087864	Identifier	pos		5087839	0					
ANR	5087865	Argument	a1		5087839	3					
ANR	5087866	Identifier	a1		5087839	0					
ANR	5087867	Argument	a2		5087839	4					
ANR	5087868	Identifier	a2		5087839	0					
ANR	5087869	Argument	b1		5087839	5					
ANR	5087870	Identifier	b1		5087839	0					
ANR	5087871	Argument	b2		5087839	6					
ANR	5087872	Identifier	b2		5087839	0					
ANR	5087873	Argument	& i		5087839	7					
ANR	5087874	UnaryOperationExpression	& i		5087839	0					
ANR	5087875	UnaryOperator	&		5087839	0					
ANR	5087876	Identifier	i		5087839	1					
ANR	5087877	Argument	& j		5087839	8					
ANR	5087878	UnaryOperationExpression	& j		5087839	0					
ANR	5087879	UnaryOperator	&		5087839	0					
ANR	5087880	Identifier	j		5087839	1					
ANR	5087881	IfStatement	if ( ! k )		5087839	2					
ANR	5087882	Condition	! k	220:5:4451:4452	5087839	0	True				
ANR	5087883	UnaryOperationExpression	! k		5087839	0					
ANR	5087884	UnaryOperator	!		5087839	0					
ANR	5087885	Identifier	k		5087839	1					
ANR	5087886	CompoundStatement		6:9:124:124	5087839	1					
ANR	5087887	ReturnStatement	return ;	221:2:4459:4465	5087839	0	True				
ANR	5087888	ExpressionStatement	"recurse ( a , b , pos , a1 , i , b1 , j , l )"	225:1:4530:4565	5087839	3	True				
ANR	5087889	CallExpression	"recurse ( a , b , pos , a1 , i , b1 , j , l )"		5087839	0					
ANR	5087890	Callee	recurse		5087839	0					
ANR	5087891	Identifier	recurse		5087839	0					
ANR	5087892	ArgumentList	a		5087839	1					
ANR	5087893	Argument	a		5087839	0					
ANR	5087894	Identifier	a		5087839	0					
ANR	5087895	Argument	b		5087839	1					
ANR	5087896	Identifier	b		5087839	0					
ANR	5087897	Argument	pos		5087839	2					
ANR	5087898	Identifier	pos		5087839	0					
ANR	5087899	Argument	a1		5087839	3					
ANR	5087900	Identifier	a1		5087839	0					
ANR	5087901	Argument	i		5087839	4					
ANR	5087902	Identifier	i		5087839	0					
ANR	5087903	Argument	b1		5087839	5					
ANR	5087904	Identifier	b1		5087839	0					
ANR	5087905	Argument	j		5087839	6					
ANR	5087906	Identifier	j		5087839	0					
ANR	5087907	Argument	l		5087839	7					
ANR	5087908	Identifier	l		5087839	0					
ANR	5087909	ExpressionStatement	l -> head -> a1 = i	226:1:4568:4583	5087839	4	True				
ANR	5087910	AssignmentExpression	l -> head -> a1 = i		5087839	0		=			
ANR	5087911	PtrMemberAccess	l -> head -> a1		5087839	0					
ANR	5087912	PtrMemberAccess	l -> head		5087839	0					
ANR	5087913	Identifier	l		5087839	0					
ANR	5087914	Identifier	head		5087839	1					
ANR	5087915	Identifier	a1		5087839	1					
ANR	5087916	Identifier	i		5087839	1					
ANR	5087917	ExpressionStatement	l -> head -> a2 = i + k	227:1:4586:4605	5087839	5	True				
ANR	5087918	AssignmentExpression	l -> head -> a2 = i + k		5087839	0		=			
ANR	5087919	PtrMemberAccess	l -> head -> a2		5087839	0					
ANR	5087920	PtrMemberAccess	l -> head		5087839	0					
ANR	5087921	Identifier	l		5087839	0					
ANR	5087922	Identifier	head		5087839	1					
ANR	5087923	Identifier	a2		5087839	1					
ANR	5087924	AdditiveExpression	i + k		5087839	1		+			
ANR	5087925	Identifier	i		5087839	0					
ANR	5087926	Identifier	k		5087839	1					
ANR	5087927	ExpressionStatement	l -> head -> b1 = j	228:1:4608:4623	5087839	6	True				
ANR	5087928	AssignmentExpression	l -> head -> b1 = j		5087839	0		=			
ANR	5087929	PtrMemberAccess	l -> head -> b1		5087839	0					
ANR	5087930	PtrMemberAccess	l -> head		5087839	0					
ANR	5087931	Identifier	l		5087839	0					
ANR	5087932	Identifier	head		5087839	1					
ANR	5087933	Identifier	b1		5087839	1					
ANR	5087934	Identifier	j		5087839	1					
ANR	5087935	ExpressionStatement	l -> head -> b2 = j + k	229:1:4626:4645	5087839	7	True				
ANR	5087936	AssignmentExpression	l -> head -> b2 = j + k		5087839	0		=			
ANR	5087937	PtrMemberAccess	l -> head -> b2		5087839	0					
ANR	5087938	PtrMemberAccess	l -> head		5087839	0					
ANR	5087939	Identifier	l		5087839	0					
ANR	5087940	Identifier	head		5087839	1					
ANR	5087941	Identifier	b2		5087839	1					
ANR	5087942	AdditiveExpression	j + k		5087839	1		+			
ANR	5087943	Identifier	j		5087839	0					
ANR	5087944	Identifier	k		5087839	1					
ANR	5087945	ExpressionStatement	l -> head ++	230:1:4648:4657	5087839	8	True				
ANR	5087946	PostIncDecOperationExpression	l -> head ++		5087839	0					
ANR	5087947	PtrMemberAccess	l -> head		5087839	0					
ANR	5087948	Identifier	l		5087839	0					
ANR	5087949	Identifier	head		5087839	1					
ANR	5087950	IncDec	++		5087839	1					
ANR	5087951	ExpressionStatement	"recurse ( a , b , pos , i + k , a2 , j + k , b2 , l )"	231:1:4660:4703	5087839	9	True				
ANR	5087952	CallExpression	"recurse ( a , b , pos , i + k , a2 , j + k , b2 , l )"		5087839	0					
ANR	5087953	Callee	recurse		5087839	0					
ANR	5087954	Identifier	recurse		5087839	0					
ANR	5087955	ArgumentList	a		5087839	1					
ANR	5087956	Argument	a		5087839	0					
ANR	5087957	Identifier	a		5087839	0					
ANR	5087958	Argument	b		5087839	1					
ANR	5087959	Identifier	b		5087839	0					
ANR	5087960	Argument	pos		5087839	2					
ANR	5087961	Identifier	pos		5087839	0					
ANR	5087962	Argument	i + k		5087839	3					
ANR	5087963	AdditiveExpression	i + k		5087839	0		+			
ANR	5087964	Identifier	i		5087839	0					
ANR	5087965	Identifier	k		5087839	1					
ANR	5087966	Argument	a2		5087839	4					
ANR	5087967	Identifier	a2		5087839	0					
ANR	5087968	Argument	j + k		5087839	5					
ANR	5087969	AdditiveExpression	j + k		5087839	0		+			
ANR	5087970	Identifier	j		5087839	0					
ANR	5087971	Identifier	k		5087839	1					
ANR	5087972	Argument	b2		5087839	6					
ANR	5087973	Identifier	b2		5087839	0					
ANR	5087974	Argument	l		5087839	7					
ANR	5087975	Identifier	l		5087839	0					
ANR	5087976	ReturnType	static void		5087839	1					
ANR	5087977	Identifier	recurse		5087839	2					
ANR	5087978	ParameterList	"struct line * a , struct line * b , struct pos * pos , int a1 , int a2 , int b1 , int b2 , struct hunklist * l"		5087839	3					
ANR	5087979	Parameter	struct line * a	213:20:4223:4236	5087839	0	True				
ANR	5087980	ParameterType	struct line *		5087839	0					
ANR	5087981	Identifier	a		5087839	1					
ANR	5087982	Parameter	struct line * b	213:36:4239:4252	5087839	1	True				
ANR	5087983	ParameterType	struct line *		5087839	0					
ANR	5087984	Identifier	b		5087839	1					
ANR	5087985	Parameter	struct pos * pos	213:52:4255:4269	5087839	2	True				
ANR	5087986	ParameterType	struct pos *		5087839	0					
ANR	5087987	Identifier	pos		5087839	1					
ANR	5087988	Parameter	int a1	214:6:4278:4283	5087839	3	True				
ANR	5087989	ParameterType	int		5087839	0					
ANR	5087990	Identifier	a1		5087839	1					
ANR	5087991	Parameter	int a2	214:14:4286:4291	5087839	4	True				
ANR	5087992	ParameterType	int		5087839	0					
ANR	5087993	Identifier	a2		5087839	1					
ANR	5087994	Parameter	int b1	214:22:4294:4299	5087839	5	True				
ANR	5087995	ParameterType	int		5087839	0					
ANR	5087996	Identifier	b1		5087839	1					
ANR	5087997	Parameter	int b2	214:30:4302:4307	5087839	6	True				
ANR	5087998	ParameterType	int		5087839	0					
ANR	5087999	Identifier	b2		5087839	1					
ANR	5088000	Parameter	struct hunklist * l	214:38:4310:4327	5087839	7	True				
ANR	5088001	ParameterType	struct hunklist *		5087839	0					
ANR	5088002	Identifier	l		5087839	1					
ANR	5088003	CFGEntryNode	ENTRY		5087839		True				
ANR	5088004	CFGExitNode	EXIT		5087839		True				
ANR	5088005	Symbol	a		5087839						
ANR	5088006	Symbol	b		5087839						
ANR	5088007	Symbol	l -> head		5087839						
ANR	5088008	Symbol	i		5087839						
ANR	5088009	Symbol	j		5087839						
ANR	5088010	Symbol	k		5087839						
ANR	5088011	Symbol	l		5087839						
ANR	5088012	Symbol	l -> head -> a2		5087839						
ANR	5088013	Symbol	l -> head -> a1		5087839						
ANR	5088014	Symbol	l -> head -> b2		5087839						
ANR	5088015	Symbol	l -> head -> b1		5087839						
ANR	5088016	Symbol	b1		5087839						
ANR	5088017	Symbol	& i		5087839						
ANR	5088018	Symbol	a1		5087839						
ANR	5088019	Symbol	b2		5087839						
ANR	5088020	Symbol	& j		5087839						
ANR	5088021	Symbol	a2		5087839						
ANR	5088022	Symbol	longest_match		5087839						
ANR	5088023	Symbol	pos		5087839						
ANR	5088024	Symbol	* l -> head		5087839						
ANR	5088025	Symbol	* l		5087839						
ANR	5088026	Symbol	* * l		5087839						
ANR	5088027	Function	diff	234:0:4708:6043							
ANR	5088028	FunctionDef	"diff (struct line * a , int an , struct line * b , int bn)"		5088027	0					
ANR	5088029	CompoundStatement		235:0:4784:6043	5088027	0					
ANR	5088030	IdentifierDeclStatement	struct hunklist l ;	236:1:4787:4804	5088027	0	True				
ANR	5088031	IdentifierDecl	l		5088027	0					
ANR	5088032	IdentifierDeclType	struct hunklist		5088027	0					
ANR	5088033	Identifier	l		5088027	1					
ANR	5088034	IdentifierDeclStatement	struct hunk * curr ;	237:1:4807:4824	5088027	1	True				
ANR	5088035	IdentifierDecl	* curr		5088027	0					
ANR	5088036	IdentifierDeclType	struct hunk *		5088027	0					
ANR	5088037	Identifier	curr		5088027	1					
ANR	5088038	IdentifierDeclStatement	struct pos * pos ;	238:1:4827:4842	5088027	2	True				
ANR	5088039	IdentifierDecl	* pos		5088027	0					
ANR	5088040	IdentifierDeclType	struct pos *		5088027	0					
ANR	5088041	Identifier	pos		5088027	1					
ANR	5088042	IdentifierDeclStatement	int t ;	239:1:4845:4850	5088027	3	True				
ANR	5088043	IdentifierDecl	t		5088027	0					
ANR	5088044	IdentifierDeclType	int		5088027	0					
ANR	5088045	Identifier	t		5088027	1					
ANR	5088046	ExpressionStatement	"t = equatelines ( a , an , b , bn )"	242:1:4886:4915	5088027	4	True				
ANR	5088047	AssignmentExpression	"t = equatelines ( a , an , b , bn )"		5088027	0		=			
ANR	5088048	Identifier	t		5088027	0					
ANR	5088049	CallExpression	"equatelines ( a , an , b , bn )"		5088027	1					
ANR	5088050	Callee	equatelines		5088027	0					
ANR	5088051	Identifier	equatelines		5088027	0					
ANR	5088052	ArgumentList	a		5088027	1					
ANR	5088053	Argument	a		5088027	0					
ANR	5088054	Identifier	a		5088027	0					
ANR	5088055	Argument	an		5088027	1					
ANR	5088056	Identifier	an		5088027	0					
ANR	5088057	Argument	b		5088027	2					
ANR	5088058	Identifier	b		5088027	0					
ANR	5088059	Argument	bn		5088027	3					
ANR	5088060	Identifier	bn		5088027	0					
ANR	5088061	ExpressionStatement	"pos = ( struct pos * ) calloc ( bn ? bn : 1 , sizeof ( struct pos ) )"	243:1:4918:4977	5088027	5	True				
ANR	5088062	AssignmentExpression	"pos = ( struct pos * ) calloc ( bn ? bn : 1 , sizeof ( struct pos ) )"		5088027	0		=			
ANR	5088063	Identifier	pos		5088027	0					
ANR	5088064	CastExpression	"( struct pos * ) calloc ( bn ? bn : 1 , sizeof ( struct pos ) )"		5088027	1					
ANR	5088065	CastTarget	struct pos *		5088027	0					
ANR	5088066	CallExpression	"calloc ( bn ? bn : 1 , sizeof ( struct pos ) )"		5088027	1					
ANR	5088067	Callee	calloc		5088027	0					
ANR	5088068	Identifier	calloc		5088027	0					
ANR	5088069	ArgumentList	bn ? bn : 1		5088027	1					
ANR	5088070	Argument	bn ? bn : 1		5088027	0					
ANR	5088071	ConditionalExpression	bn ? bn : 1		5088027	0					
ANR	5088072	Condition	bn		5088027	0					
ANR	5088073	Identifier	bn		5088027	0					
ANR	5088074	Identifier	bn		5088027	1					
ANR	5088075	PrimaryExpression	1		5088027	2					
ANR	5088076	Argument	sizeof ( struct pos )		5088027	1					
ANR	5088077	SizeofExpression	sizeof ( struct pos )		5088027	0					
ANR	5088078	Sizeof	sizeof		5088027	0					
ANR	5088079	SizeofOperand	struct pos		5088027	1					
ANR	5088080	ExpressionStatement	l . head = l . base = ( struct hunk * ) malloc ( sizeof ( struct hunk ) * ( ( an < bn ? an : bn ) + 1 ) )	245:1:5045:5170	5088027	6	True				
ANR	5088081	AssignmentExpression	l . head = l . base = ( struct hunk * ) malloc ( sizeof ( struct hunk ) * ( ( an < bn ? an : bn ) + 1 ) )		5088027	0		=			
ANR	5088082	MemberAccess	l . head		5088027	0					
ANR	5088083	Identifier	l		5088027	0					
ANR	5088084	Identifier	head		5088027	1					
ANR	5088085	AssignmentExpression	l . base = ( struct hunk * ) malloc ( sizeof ( struct hunk ) * ( ( an < bn ? an : bn ) + 1 ) )		5088027	1		=			
ANR	5088086	MemberAccess	l . base		5088027	0					
ANR	5088087	Identifier	l		5088027	0					
ANR	5088088	Identifier	base		5088027	1					
ANR	5088089	CastExpression	( struct hunk * ) malloc ( sizeof ( struct hunk ) * ( ( an < bn ? an : bn ) + 1 ) )		5088027	1					
ANR	5088090	CastTarget	struct hunk *		5088027	0					
ANR	5088091	CallExpression	malloc ( sizeof ( struct hunk ) * ( ( an < bn ? an : bn ) + 1 ) )		5088027	1					
ANR	5088092	Callee	malloc		5088027	0					
ANR	5088093	Identifier	malloc		5088027	0					
ANR	5088094	ArgumentList	sizeof ( struct hunk ) * ( ( an < bn ? an : bn ) + 1 )		5088027	1					
ANR	5088095	Argument	sizeof ( struct hunk ) * ( ( an < bn ? an : bn ) + 1 )		5088027	0					
ANR	5088096	MultiplicativeExpression	sizeof ( struct hunk ) * ( ( an < bn ? an : bn ) + 1 )		5088027	0		*			
ANR	5088097	SizeofExpression	sizeof ( struct hunk )		5088027	0					
ANR	5088098	Sizeof	sizeof		5088027	0					
ANR	5088099	SizeofOperand	struct hunk		5088027	1					
ANR	5088100	AdditiveExpression	( an < bn ? an : bn ) + 1		5088027	1		+			
ANR	5088101	ConditionalExpression	an < bn ? an : bn		5088027	0					
ANR	5088102	Condition	an < bn		5088027	0					
ANR	5088103	RelationalExpression	an < bn		5088027	0		<			
ANR	5088104	Identifier	an		5088027	0					
ANR	5088105	Identifier	bn		5088027	1					
ANR	5088106	Identifier	an		5088027	1					
ANR	5088107	Identifier	bn		5088027	2					
ANR	5088108	PrimaryExpression	1		5088027	1					
ANR	5088109	IfStatement	if ( pos && l . base && t )		5088027	7					
ANR	5088110	Condition	pos && l . base && t	248:5:5178:5195	5088027	0	True				
ANR	5088111	AndExpression	pos && l . base && t		5088027	0		&&			
ANR	5088112	Identifier	pos		5088027	0					
ANR	5088113	AndExpression	l . base && t		5088027	1		&&			
ANR	5088114	MemberAccess	l . base		5088027	0					
ANR	5088115	Identifier	l		5088027	0					
ANR	5088116	Identifier	base		5088027	1					
ANR	5088117	Identifier	t		5088027	1					
ANR	5088118	CompoundStatement		14:25:413:413	5088027	1					
ANR	5088119	ExpressionStatement	"recurse ( a , b , pos , 0 , an , 0 , bn , & l )"	250:2:5243:5279	5088027	0	True				
ANR	5088120	CallExpression	"recurse ( a , b , pos , 0 , an , 0 , bn , & l )"		5088027	0					
ANR	5088121	Callee	recurse		5088027	0					
ANR	5088122	Identifier	recurse		5088027	0					
ANR	5088123	ArgumentList	a		5088027	1					
ANR	5088124	Argument	a		5088027	0					
ANR	5088125	Identifier	a		5088027	0					
ANR	5088126	Argument	b		5088027	1					
ANR	5088127	Identifier	b		5088027	0					
ANR	5088128	Argument	pos		5088027	2					
ANR	5088129	Identifier	pos		5088027	0					
ANR	5088130	Argument	0		5088027	3					
ANR	5088131	PrimaryExpression	0		5088027	0					
ANR	5088132	Argument	an		5088027	4					
ANR	5088133	Identifier	an		5088027	0					
ANR	5088134	Argument	0		5088027	5					
ANR	5088135	PrimaryExpression	0		5088027	0					
ANR	5088136	Argument	bn		5088027	6					
ANR	5088137	Identifier	bn		5088027	0					
ANR	5088138	Argument	& l		5088027	7					
ANR	5088139	UnaryOperationExpression	& l		5088027	0					
ANR	5088140	UnaryOperator	&		5088027	0					
ANR	5088141	Identifier	l		5088027	1					
ANR	5088142	ExpressionStatement	l . head -> a1 = l . head -> a2 = an	251:2:5283:5311	5088027	1	True				
ANR	5088143	AssignmentExpression	l . head -> a1 = l . head -> a2 = an		5088027	0		=			
ANR	5088144	PtrMemberAccess	l . head -> a1		5088027	0					
ANR	5088145	MemberAccess	l . head		5088027	0					
ANR	5088146	Identifier	l		5088027	0					
ANR	5088147	Identifier	head		5088027	1					
ANR	5088148	Identifier	a1		5088027	1					
ANR	5088149	AssignmentExpression	l . head -> a2 = an		5088027	1		=			
ANR	5088150	PtrMemberAccess	l . head -> a2		5088027	0					
ANR	5088151	MemberAccess	l . head		5088027	0					
ANR	5088152	Identifier	l		5088027	0					
ANR	5088153	Identifier	head		5088027	1					
ANR	5088154	Identifier	a2		5088027	1					
ANR	5088155	Identifier	an		5088027	1					
ANR	5088156	ExpressionStatement	l . head -> b1 = l . head -> b2 = bn	252:2:5315:5343	5088027	2	True				
ANR	5088157	AssignmentExpression	l . head -> b1 = l . head -> b2 = bn		5088027	0		=			
ANR	5088158	PtrMemberAccess	l . head -> b1		5088027	0					
ANR	5088159	MemberAccess	l . head		5088027	0					
ANR	5088160	Identifier	l		5088027	0					
ANR	5088161	Identifier	head		5088027	1					
ANR	5088162	Identifier	b1		5088027	1					
ANR	5088163	AssignmentExpression	l . head -> b2 = bn		5088027	1		=			
ANR	5088164	PtrMemberAccess	l . head -> b2		5088027	0					
ANR	5088165	MemberAccess	l . head		5088027	0					
ANR	5088166	Identifier	l		5088027	0					
ANR	5088167	Identifier	head		5088027	1					
ANR	5088168	Identifier	b2		5088027	1					
ANR	5088169	Identifier	bn		5088027	1					
ANR	5088170	ExpressionStatement	l . head ++	253:2:5347:5355	5088027	3	True				
ANR	5088171	PostIncDecOperationExpression	l . head ++		5088027	0					
ANR	5088172	MemberAccess	l . head		5088027	0					
ANR	5088173	Identifier	l		5088027	0					
ANR	5088174	Identifier	head		5088027	1					
ANR	5088175	IncDec	++		5088027	1					
ANR	5088176	ExpressionStatement	free ( pos )	256:1:5362:5371	5088027	8	True				
ANR	5088177	CallExpression	free ( pos )		5088027	0					
ANR	5088178	Callee	free		5088027	0					
ANR	5088179	Identifier	free		5088027	0					
ANR	5088180	ArgumentList	pos		5088027	1					
ANR	5088181	Argument	pos		5088027	0					
ANR	5088182	Identifier	pos		5088027	0					
ANR	5088183	ForStatement	for ( curr = l . base ; curr != l . head ; curr ++ )		5088027	9					
ANR	5088184	ForInit	curr = l . base ;	259:6:5450:5463	5088027	0	True				
ANR	5088185	AssignmentExpression	curr = l . base		5088027	0		=			
ANR	5088186	Identifier	curr		5088027	0					
ANR	5088187	MemberAccess	l . base		5088027	1					
ANR	5088188	Identifier	l		5088027	0					
ANR	5088189	Identifier	base		5088027	1					
ANR	5088190	Condition	curr != l . head	259:21:5465:5478	5088027	1	True				
ANR	5088191	EqualityExpression	curr != l . head		5088027	0		!=			
ANR	5088192	Identifier	curr		5088027	0					
ANR	5088193	MemberAccess	l . head		5088027	1					
ANR	5088194	Identifier	l		5088027	0					
ANR	5088195	Identifier	head		5088027	1					
ANR	5088196	PostIncDecOperationExpression	curr ++	259:37:5481:5486	5088027	2	True				
ANR	5088197	Identifier	curr		5088027	0					
ANR	5088198	IncDec	++		5088027	1					
ANR	5088199	CompoundStatement		27:2:738:751	5088027	3					
ANR	5088200	IdentifierDeclStatement	struct hunk * next = curr + 1 ;	260:2:5493:5519	5088027	0	True				
ANR	5088201	IdentifierDecl	* next = curr + 1		5088027	0					
ANR	5088202	IdentifierDeclType	struct hunk *		5088027	0					
ANR	5088203	Identifier	next		5088027	1					
ANR	5088204	AssignmentExpression	* next = curr + 1		5088027	2		=			
ANR	5088205	Identifier	next		5088027	0					
ANR	5088206	AdditiveExpression	curr + 1		5088027	1		+			
ANR	5088207	Identifier	curr		5088027	0					
ANR	5088208	PrimaryExpression	1		5088027	1					
ANR	5088209	IdentifierDeclStatement	int shift = 0 ;	261:2:5523:5536	5088027	1	True				
ANR	5088210	IdentifierDecl	shift = 0		5088027	0					
ANR	5088211	IdentifierDeclType	int		5088027	0					
ANR	5088212	Identifier	shift		5088027	1					
ANR	5088213	AssignmentExpression	shift = 0		5088027	2		=			
ANR	5088214	Identifier	shift		5088027	0					
ANR	5088215	PrimaryExpression	0		5088027	1					
ANR	5088216	IfStatement	if ( next == l . head )		5088027	2					
ANR	5088217	Condition	next == l . head	263:6:5545:5558	5088027	0	True				
ANR	5088218	EqualityExpression	next == l . head		5088027	0		==			
ANR	5088219	Identifier	next		5088027	0					
ANR	5088220	MemberAccess	l . head		5088027	1					
ANR	5088221	Identifier	l		5088027	0					
ANR	5088222	Identifier	head		5088027	1					
ANR	5088223	CompoundStatement		29:22:776:776	5088027	1					
ANR	5088224	BreakStatement	break ;	264:3:5566:5571	5088027	0	True				
ANR	5088225	IfStatement	if ( curr -> a2 == next -> a1 )		5088027	3					
ANR	5088226	Condition	curr -> a2 == next -> a1	267:6:5584:5603	5088027	0	True				
ANR	5088227	EqualityExpression	curr -> a2 == next -> a1		5088027	0		==			
ANR	5088228	PtrMemberAccess	curr -> a2		5088027	0					
ANR	5088229	Identifier	curr		5088027	0					
ANR	5088230	Identifier	a2		5088027	1					
ANR	5088231	PtrMemberAccess	next -> a1		5088027	1					
ANR	5088232	Identifier	next		5088027	0					
ANR	5088233	Identifier	a1		5088027	1					
ANR	5088234	CompoundStatement		33:28:821:821	5088027	1					
ANR	5088235	WhileStatement	"while ( curr -> a2 + shift < an && curr -> b2 + shift < bn && ! cmp ( a + curr -> a2 + shift , b + curr -> b2 + shift ) )"		5088027	0					
ANR	5088236	Condition	"curr -> a2 + shift < an && curr -> b2 + shift < bn && ! cmp ( a + curr -> a2 + shift , b + curr -> b2 + shift )"	268:10:5618:5716	5088027	0	True				
ANR	5088237	AndExpression	"curr -> a2 + shift < an && curr -> b2 + shift < bn && ! cmp ( a + curr -> a2 + shift , b + curr -> b2 + shift )"		5088027	0		&&			
ANR	5088238	RelationalExpression	curr -> a2 + shift < an		5088027	0		<			
ANR	5088239	AdditiveExpression	curr -> a2 + shift		5088027	0		+			
ANR	5088240	PtrMemberAccess	curr -> a2		5088027	0					
ANR	5088241	Identifier	curr		5088027	0					
ANR	5088242	Identifier	a2		5088027	1					
ANR	5088243	Identifier	shift		5088027	1					
ANR	5088244	Identifier	an		5088027	1					
ANR	5088245	AndExpression	"curr -> b2 + shift < bn && ! cmp ( a + curr -> a2 + shift , b + curr -> b2 + shift )"		5088027	1		&&			
ANR	5088246	RelationalExpression	curr -> b2 + shift < bn		5088027	0		<			
ANR	5088247	AdditiveExpression	curr -> b2 + shift		5088027	0		+			
ANR	5088248	PtrMemberAccess	curr -> b2		5088027	0					
ANR	5088249	Identifier	curr		5088027	0					
ANR	5088250	Identifier	b2		5088027	1					
ANR	5088251	Identifier	shift		5088027	1					
ANR	5088252	Identifier	bn		5088027	1					
ANR	5088253	UnaryOperationExpression	"! cmp ( a + curr -> a2 + shift , b + curr -> b2 + shift )"		5088027	1					
ANR	5088254	UnaryOperator	!		5088027	0					
ANR	5088255	CallExpression	"cmp ( a + curr -> a2 + shift , b + curr -> b2 + shift )"		5088027	1					
ANR	5088256	Callee	cmp		5088027	0					
ANR	5088257	Identifier	cmp		5088027	0					
ANR	5088258	ArgumentList	a + curr -> a2 + shift		5088027	1					
ANR	5088259	Argument	a + curr -> a2 + shift		5088027	0					
ANR	5088260	AdditiveExpression	a + curr -> a2 + shift		5088027	0		+			
ANR	5088261	Identifier	a		5088027	0					
ANR	5088262	AdditiveExpression	curr -> a2 + shift		5088027	1		+			
ANR	5088263	PtrMemberAccess	curr -> a2		5088027	0					
ANR	5088264	Identifier	curr		5088027	0					
ANR	5088265	Identifier	a2		5088027	1					
ANR	5088266	Identifier	shift		5088027	1					
ANR	5088267	Argument	b + curr -> b2 + shift		5088027	1					
ANR	5088268	AdditiveExpression	b + curr -> b2 + shift		5088027	0		+			
ANR	5088269	Identifier	b		5088027	0					
ANR	5088270	AdditiveExpression	curr -> b2 + shift		5088027	1		+			
ANR	5088271	PtrMemberAccess	curr -> b2		5088027	0					
ANR	5088272	Identifier	curr		5088027	0					
ANR	5088273	Identifier	b2		5088027	1					
ANR	5088274	Identifier	shift		5088027	1					
ANR	5088275	CompoundStatement		34:111:934:934	5088027	1					
ANR	5088276	ExpressionStatement	shift ++	269:4:5725:5732	5088027	0	True				
ANR	5088277	PostIncDecOperationExpression	shift ++		5088027	0					
ANR	5088278	Identifier	shift		5088027	0					
ANR	5088279	IncDec	++		5088027	1					
ANR	5088280	ElseStatement	else		5088027	0					
ANR	5088281	IfStatement	if ( curr -> b2 == next -> b1 )		5088027	0					
ANR	5088282	Condition	curr -> b2 == next -> b1	271:13:5752:5771	5088027	0	True				
ANR	5088283	EqualityExpression	curr -> b2 == next -> b1		5088027	0		==			
ANR	5088284	PtrMemberAccess	curr -> b2		5088027	0					
ANR	5088285	Identifier	curr		5088027	0					
ANR	5088286	Identifier	b2		5088027	1					
ANR	5088287	PtrMemberAccess	next -> b1		5088027	1					
ANR	5088288	Identifier	next		5088027	0					
ANR	5088289	Identifier	b1		5088027	1					
ANR	5088290	CompoundStatement		37:35:989:989	5088027	1					
ANR	5088291	WhileStatement	"while ( curr -> b2 + shift < bn && curr -> a2 + shift < an && ! cmp ( b + curr -> b2 + shift , a + curr -> a2 + shift ) )"		5088027	0					
ANR	5088292	Condition	"curr -> b2 + shift < bn && curr -> a2 + shift < an && ! cmp ( b + curr -> b2 + shift , a + curr -> a2 + shift )"	272:10:5786:5884	5088027	0	True				
ANR	5088293	AndExpression	"curr -> b2 + shift < bn && curr -> a2 + shift < an && ! cmp ( b + curr -> b2 + shift , a + curr -> a2 + shift )"		5088027	0		&&			
ANR	5088294	RelationalExpression	curr -> b2 + shift < bn		5088027	0		<			
ANR	5088295	AdditiveExpression	curr -> b2 + shift		5088027	0		+			
ANR	5088296	PtrMemberAccess	curr -> b2		5088027	0					
ANR	5088297	Identifier	curr		5088027	0					
ANR	5088298	Identifier	b2		5088027	1					
ANR	5088299	Identifier	shift		5088027	1					
ANR	5088300	Identifier	bn		5088027	1					
ANR	5088301	AndExpression	"curr -> a2 + shift < an && ! cmp ( b + curr -> b2 + shift , a + curr -> a2 + shift )"		5088027	1		&&			
ANR	5088302	RelationalExpression	curr -> a2 + shift < an		5088027	0		<			
ANR	5088303	AdditiveExpression	curr -> a2 + shift		5088027	0		+			
ANR	5088304	PtrMemberAccess	curr -> a2		5088027	0					
ANR	5088305	Identifier	curr		5088027	0					
ANR	5088306	Identifier	a2		5088027	1					
ANR	5088307	Identifier	shift		5088027	1					
ANR	5088308	Identifier	an		5088027	1					
ANR	5088309	UnaryOperationExpression	"! cmp ( b + curr -> b2 + shift , a + curr -> a2 + shift )"		5088027	1					
ANR	5088310	UnaryOperator	!		5088027	0					
ANR	5088311	CallExpression	"cmp ( b + curr -> b2 + shift , a + curr -> a2 + shift )"		5088027	1					
ANR	5088312	Callee	cmp		5088027	0					
ANR	5088313	Identifier	cmp		5088027	0					
ANR	5088314	ArgumentList	b + curr -> b2 + shift		5088027	1					
ANR	5088315	Argument	b + curr -> b2 + shift		5088027	0					
ANR	5088316	AdditiveExpression	b + curr -> b2 + shift		5088027	0		+			
ANR	5088317	Identifier	b		5088027	0					
ANR	5088318	AdditiveExpression	curr -> b2 + shift		5088027	1		+			
ANR	5088319	PtrMemberAccess	curr -> b2		5088027	0					
ANR	5088320	Identifier	curr		5088027	0					
ANR	5088321	Identifier	b2		5088027	1					
ANR	5088322	Identifier	shift		5088027	1					
ANR	5088323	Argument	a + curr -> a2 + shift		5088027	1					
ANR	5088324	AdditiveExpression	a + curr -> a2 + shift		5088027	0		+			
ANR	5088325	Identifier	a		5088027	0					
ANR	5088326	AdditiveExpression	curr -> a2 + shift		5088027	1		+			
ANR	5088327	PtrMemberAccess	curr -> a2		5088027	0					
ANR	5088328	Identifier	curr		5088027	0					
ANR	5088329	Identifier	a2		5088027	1					
ANR	5088330	Identifier	shift		5088027	1					
ANR	5088331	CompoundStatement		38:111:1102:1102	5088027	1					
ANR	5088332	ExpressionStatement	shift ++	273:4:5893:5900	5088027	0	True				
ANR	5088333	PostIncDecOperationExpression	shift ++		5088027	0					
ANR	5088334	Identifier	shift		5088027	0					
ANR	5088335	IncDec	++		5088027	1					
ANR	5088336	IfStatement	if ( ! shift )		5088027	4					
ANR	5088337	Condition	! shift	276:6:5917:5922	5088027	0	True				
ANR	5088338	UnaryOperationExpression	! shift		5088027	0					
ANR	5088339	UnaryOperator	!		5088027	0					
ANR	5088340	Identifier	shift		5088027	1					
ANR	5088341	CompoundStatement		42:14:1140:1140	5088027	1					
ANR	5088342	ContinueStatement	continue ;	277:3:5930:5938	5088027	0	True				
ANR	5088343	ExpressionStatement	curr -> b2 += shift	279:2:5946:5963	5088027	5	True				
ANR	5088344	AssignmentExpression	curr -> b2 += shift		5088027	0		+=			
ANR	5088345	PtrMemberAccess	curr -> b2		5088027	0					
ANR	5088346	Identifier	curr		5088027	0					
ANR	5088347	Identifier	b2		5088027	1					
ANR	5088348	Identifier	shift		5088027	1					
ANR	5088349	ExpressionStatement	next -> b1 += shift	280:2:5967:5984	5088027	6	True				
ANR	5088350	AssignmentExpression	next -> b1 += shift		5088027	0		+=			
ANR	5088351	PtrMemberAccess	next -> b1		5088027	0					
ANR	5088352	Identifier	next		5088027	0					
ANR	5088353	Identifier	b1		5088027	1					
ANR	5088354	Identifier	shift		5088027	1					
ANR	5088355	ExpressionStatement	curr -> a2 += shift	281:2:5988:6005	5088027	7	True				
ANR	5088356	AssignmentExpression	curr -> a2 += shift		5088027	0		+=			
ANR	5088357	PtrMemberAccess	curr -> a2		5088027	0					
ANR	5088358	Identifier	curr		5088027	0					
ANR	5088359	Identifier	a2		5088027	1					
ANR	5088360	Identifier	shift		5088027	1					
ANR	5088361	ExpressionStatement	next -> a1 += shift	282:2:6009:6026	5088027	8	True				
ANR	5088362	AssignmentExpression	next -> a1 += shift		5088027	0		+=			
ANR	5088363	PtrMemberAccess	next -> a1		5088027	0					
ANR	5088364	Identifier	next		5088027	0					
ANR	5088365	Identifier	a1		5088027	1					
ANR	5088366	Identifier	shift		5088027	1					
ANR	5088367	ReturnStatement	return l ;	285:1:6033:6041	5088027	10	True				
ANR	5088368	Identifier	l		5088027	0					
ANR	5088369	ReturnType	static struct hunklist		5088027	1					
ANR	5088370	Identifier	diff		5088027	2					
ANR	5088371	ParameterList	"struct line * a , int an , struct line * b , int bn"		5088027	3					
ANR	5088372	Parameter	struct line * a	234:28:4736:4749	5088027	0	True				
ANR	5088373	ParameterType	struct line *		5088027	0					
ANR	5088374	Identifier	a		5088027	1					
ANR	5088375	Parameter	int an	234:44:4752:4757	5088027	1	True				
ANR	5088376	ParameterType	int		5088027	0					
ANR	5088377	Identifier	an		5088027	1					
ANR	5088378	Parameter	struct line * b	234:52:4760:4773	5088027	2	True				
ANR	5088379	ParameterType	struct line *		5088027	0					
ANR	5088380	Identifier	b		5088027	1					
ANR	5088381	Parameter	int bn	234:68:4776:4781	5088027	3	True				
ANR	5088382	ParameterType	int		5088027	0					
ANR	5088383	Identifier	bn		5088027	1					
ANR	5088384	CFGEntryNode	ENTRY		5088027		True				
ANR	5088385	CFGExitNode	EXIT		5088027		True				
ANR	5088386	Symbol	next		5088027						
ANR	5088387	Symbol	l . base		5088027						
ANR	5088388	Symbol	shift		5088027						
ANR	5088389	Symbol	cmp		5088027						
ANR	5088390	Symbol	calloc		5088027						
ANR	5088391	Symbol	* next		5088027						
ANR	5088392	Symbol	bn		5088027						
ANR	5088393	Symbol	next -> b1		5088027						
ANR	5088394	Symbol	pos		5088027						
ANR	5088395	Symbol	l . head -> a1		5088027						
ANR	5088396	Symbol	l . head -> a2		5088027						
ANR	5088397	Symbol	curr -> b2		5088027						
ANR	5088398	Symbol	curr		5088027						
ANR	5088399	Symbol	a		5088027						
ANR	5088400	Symbol	malloc		5088027						
ANR	5088401	Symbol	b		5088027						
ANR	5088402	Symbol	l		5088027						
ANR	5088403	Symbol	an		5088027						
ANR	5088404	Symbol	* l . head		5088027						
ANR	5088405	Symbol	& l		5088027						
ANR	5088406	Symbol	next -> a1		5088027						
ANR	5088407	Symbol	t		5088027						
ANR	5088408	Symbol	* curr		5088027						
ANR	5088409	Symbol	* l		5088027						
ANR	5088410	Symbol	l . head -> b1		5088027						
ANR	5088411	Symbol	l . head -> b2		5088027						
ANR	5088412	Symbol	curr -> a2		5088027						
ANR	5088413	Symbol	equatelines		5088027						
ANR	5088414	Symbol	l . head		5088027						
ANR	5088415	Function	r_diff_buffers_delta	290:0:6139:7741							
ANR	5088416	FunctionDef	"r_diff_buffers_delta (RDiff * d , const ut8 * sa , int la , const ut8 * sb , int lb)"		5088415	0					
ANR	5088417	CompoundStatement		290:87:6226:7741	5088415	0					
ANR	5088418	IdentifierDeclStatement	RDiffOp dop ;	291:1:6229:6240	5088415	0	True				
ANR	5088419	IdentifierDecl	dop		5088415	0					
ANR	5088420	IdentifierDeclType	RDiffOp		5088415	0					
ANR	5088421	Identifier	dop		5088415	1					
ANR	5088422	IdentifierDeclStatement	struct line * al = NULL ;	292:1:6243:6265	5088415	1	True				
ANR	5088423	IdentifierDecl	* al = NULL		5088415	0					
ANR	5088424	IdentifierDeclType	struct line *		5088415	0					
ANR	5088425	Identifier	al		5088415	1					
ANR	5088426	AssignmentExpression	* al = NULL		5088415	2		=			
ANR	5088427	Identifier	NULL		5088415	0					
ANR	5088428	Identifier	NULL		5088415	1					
ANR	5088429	IdentifierDeclStatement	struct line * bl = NULL ;	293:1:6268:6290	5088415	2	True				
ANR	5088430	IdentifierDecl	* bl = NULL		5088415	0					
ANR	5088431	IdentifierDeclType	struct line *		5088415	0					
ANR	5088432	Identifier	bl		5088415	1					
ANR	5088433	AssignmentExpression	* bl = NULL		5088415	2		=			
ANR	5088434	Identifier	NULL		5088415	0					
ANR	5088435	Identifier	NULL		5088415	1					
ANR	5088436	IdentifierDeclStatement	"struct hunklist l = { NULL , NULL } ;"	294:1:6293:6327	5088415	3	True				
ANR	5088437	IdentifierDecl	"l = { NULL , NULL }"		5088415	0					
ANR	5088438	IdentifierDeclType	struct hunklist		5088415	0					
ANR	5088439	Identifier	l		5088415	1					
ANR	5088440	AssignmentExpression	"l = { NULL , NULL }"		5088415	2		=			
ANR	5088441	Identifier	l		5088415	0					
ANR	5088442	InitializerList	NULL		5088415	1					
ANR	5088443	Identifier	NULL		5088415	0					
ANR	5088444	Identifier	NULL		5088415	1					
ANR	5088445	IdentifierDeclStatement	struct hunk * h ;	295:1:6330:6344	5088415	4	True				
ANR	5088446	IdentifierDecl	* h		5088415	0					
ANR	5088447	IdentifierDeclType	struct hunk *		5088415	0					
ANR	5088448	Identifier	h		5088415	1					
ANR	5088449	IdentifierDeclStatement	"int an , bn , offa , rlen , offb , len = 0 ;"	296:1:6347:6384	5088415	5	True				
ANR	5088450	IdentifierDecl	an		5088415	0					
ANR	5088451	IdentifierDeclType	int		5088415	0					
ANR	5088452	Identifier	an		5088415	1					
ANR	5088453	IdentifierDecl	bn		5088415	1					
ANR	5088454	IdentifierDeclType	int		5088415	0					
ANR	5088455	Identifier	bn		5088415	1					
ANR	5088456	IdentifierDecl	offa		5088415	2					
ANR	5088457	IdentifierDeclType	int		5088415	0					
ANR	5088458	Identifier	offa		5088415	1					
ANR	5088459	IdentifierDecl	rlen		5088415	3					
ANR	5088460	IdentifierDeclType	int		5088415	0					
ANR	5088461	Identifier	rlen		5088415	1					
ANR	5088462	IdentifierDecl	offb		5088415	4					
ANR	5088463	IdentifierDeclType	int		5088415	0					
ANR	5088464	Identifier	offb		5088415	1					
ANR	5088465	IdentifierDecl	len = 0		5088415	5					
ANR	5088466	IdentifierDeclType	int		5088415	0					
ANR	5088467	Identifier	len		5088415	1					
ANR	5088468	AssignmentExpression	len = 0		5088415	2		=			
ANR	5088469	Identifier	len		5088415	0					
ANR	5088470	PrimaryExpression	0		5088415	1					
ANR	5088471	IdentifierDeclStatement	int hits = - 1 ;	297:1:6387:6400	5088415	6	True				
ANR	5088472	IdentifierDecl	hits = - 1		5088415	0					
ANR	5088473	IdentifierDeclType	int		5088415	0					
ANR	5088474	Identifier	hits		5088415	1					
ANR	5088475	AssignmentExpression	hits = - 1		5088415	2		=			
ANR	5088476	Identifier	hits		5088415	0					
ANR	5088477	UnaryOperationExpression	- 1		5088415	1					
ANR	5088478	UnaryOperator	-		5088415	0					
ANR	5088479	PrimaryExpression	1		5088415	1					
ANR	5088480	ExpressionStatement	"an = splitlines ( ( const char * ) sa , la , & al )"	299:1:6404:6447	5088415	7	True				
ANR	5088481	AssignmentExpression	"an = splitlines ( ( const char * ) sa , la , & al )"		5088415	0		=			
ANR	5088482	Identifier	an		5088415	0					
ANR	5088483	CallExpression	"splitlines ( ( const char * ) sa , la , & al )"		5088415	1					
ANR	5088484	Callee	splitlines		5088415	0					
ANR	5088485	Identifier	splitlines		5088415	0					
ANR	5088486	ArgumentList	( const char * ) sa		5088415	1					
ANR	5088487	Argument	( const char * ) sa		5088415	0					
ANR	5088488	CastExpression	( const char * ) sa		5088415	0					
ANR	5088489	CastTarget	const char *		5088415	0					
ANR	5088490	Identifier	sa		5088415	1					
ANR	5088491	Argument	la		5088415	1					
ANR	5088492	Identifier	la		5088415	0					
ANR	5088493	Argument	& al		5088415	2					
ANR	5088494	UnaryOperationExpression	& al		5088415	0					
ANR	5088495	UnaryOperator	&		5088415	0					
ANR	5088496	Identifier	al		5088415	1					
ANR	5088497	IfStatement	if ( an < 0 )		5088415	8					
ANR	5088498	Condition	an < 0	300:5:6454:6457	5088415	0	True				
ANR	5088499	RelationalExpression	an < 0		5088415	0		<			
ANR	5088500	Identifier	an		5088415	0					
ANR	5088501	PrimaryExpression	0		5088415	1					
ANR	5088502	CompoundStatement		11:11:233:233	5088415	1					
ANR	5088503	ExpressionStatement	free ( al )	301:2:6464:6473	5088415	0	True				
ANR	5088504	CallExpression	free ( al )		5088415	0					
ANR	5088505	Callee	free		5088415	0					
ANR	5088506	Identifier	free		5088415	0					
ANR	5088507	ArgumentList	al		5088415	1					
ANR	5088508	Argument	al		5088415	0					
ANR	5088509	Identifier	al		5088415	0					
ANR	5088510	ReturnStatement	return - 1 ;	302:2:6477:6486	5088415	1	True				
ANR	5088511	UnaryOperationExpression	- 1		5088415	0					
ANR	5088512	UnaryOperator	-		5088415	0					
ANR	5088513	PrimaryExpression	1		5088415	1					
ANR	5088514	ExpressionStatement	"bn = splitlines ( ( const char * ) sb , lb , & bl )"	304:1:6492:6535	5088415	9	True				
ANR	5088515	AssignmentExpression	"bn = splitlines ( ( const char * ) sb , lb , & bl )"		5088415	0		=			
ANR	5088516	Identifier	bn		5088415	0					
ANR	5088517	CallExpression	"splitlines ( ( const char * ) sb , lb , & bl )"		5088415	1					
ANR	5088518	Callee	splitlines		5088415	0					
ANR	5088519	Identifier	splitlines		5088415	0					
ANR	5088520	ArgumentList	( const char * ) sb		5088415	1					
ANR	5088521	Argument	( const char * ) sb		5088415	0					
ANR	5088522	CastExpression	( const char * ) sb		5088415	0					
ANR	5088523	CastTarget	const char *		5088415	0					
ANR	5088524	Identifier	sb		5088415	1					
ANR	5088525	Argument	lb		5088415	1					
ANR	5088526	Identifier	lb		5088415	0					
ANR	5088527	Argument	& bl		5088415	2					
ANR	5088528	UnaryOperationExpression	& bl		5088415	0					
ANR	5088529	UnaryOperator	&		5088415	0					
ANR	5088530	Identifier	bl		5088415	1					
ANR	5088531	IfStatement	if ( bn < 0 )		5088415	10					
ANR	5088532	Condition	bn < 0	305:5:6542:6545	5088415	0	True				
ANR	5088533	RelationalExpression	bn < 0		5088415	0		<			
ANR	5088534	Identifier	bn		5088415	0					
ANR	5088535	PrimaryExpression	0		5088415	1					
ANR	5088536	CompoundStatement		16:11:321:321	5088415	1					
ANR	5088537	ExpressionStatement	free ( al )	306:2:6552:6561	5088415	0	True				
ANR	5088538	CallExpression	free ( al )		5088415	0					
ANR	5088539	Callee	free		5088415	0					
ANR	5088540	Identifier	free		5088415	0					
ANR	5088541	ArgumentList	al		5088415	1					
ANR	5088542	Argument	al		5088415	0					
ANR	5088543	Identifier	al		5088415	0					
ANR	5088544	ExpressionStatement	free ( bl )	307:2:6565:6574	5088415	1	True				
ANR	5088545	CallExpression	free ( bl )		5088415	0					
ANR	5088546	Callee	free		5088415	0					
ANR	5088547	Identifier	free		5088415	0					
ANR	5088548	ArgumentList	bl		5088415	1					
ANR	5088549	Argument	bl		5088415	0					
ANR	5088550	Identifier	bl		5088415	0					
ANR	5088551	ReturnStatement	return - 1 ;	308:2:6578:6587	5088415	2	True				
ANR	5088552	UnaryOperationExpression	- 1		5088415	0					
ANR	5088553	UnaryOperator	-		5088415	0					
ANR	5088554	PrimaryExpression	1		5088415	1					
ANR	5088555	IfStatement	if ( ! al || ! bl )		5088415	11					
ANR	5088556	Condition	! al || ! bl	310:5:6597:6606	5088415	0	True				
ANR	5088557	OrExpression	! al || ! bl		5088415	0		||			
ANR	5088558	UnaryOperationExpression	! al		5088415	0					
ANR	5088559	UnaryOperator	!		5088415	0					
ANR	5088560	Identifier	al		5088415	1					
ANR	5088561	UnaryOperationExpression	! bl		5088415	1					
ANR	5088562	UnaryOperator	!		5088415	0					
ANR	5088563	Identifier	bl		5088415	1					
ANR	5088564	CompoundStatement		21:17:382:382	5088415	1					
ANR	5088565	ExpressionStatement	"eprintf ( ""bindiff_buffers: Out of memory.\\n"" )"	311:2:6613:6658	5088415	0	True				
ANR	5088566	CallExpression	"eprintf ( ""bindiff_buffers: Out of memory.\\n"" )"		5088415	0					
ANR	5088567	Callee	eprintf		5088415	0					
ANR	5088568	Identifier	eprintf		5088415	0					
ANR	5088569	ArgumentList	"""bindiff_buffers: Out of memory.\\n"""		5088415	1					
ANR	5088570	Argument	"""bindiff_buffers: Out of memory.\\n"""		5088415	0					
ANR	5088571	PrimaryExpression	"""bindiff_buffers: Out of memory.\\n"""		5088415	0					
ANR	5088572	GotoStatement	goto beach ;	312:2:6662:6672	5088415	1	True				
ANR	5088573	Identifier	beach		5088415	0					
ANR	5088574	ExpressionStatement	"l = diff ( al , an , bl , bn )"	315:1:6679:6704	5088415	12	True				
ANR	5088575	AssignmentExpression	"l = diff ( al , an , bl , bn )"		5088415	0		=			
ANR	5088576	Identifier	l		5088415	0					
ANR	5088577	CallExpression	"diff ( al , an , bl , bn )"		5088415	1					
ANR	5088578	Callee	diff		5088415	0					
ANR	5088579	Identifier	diff		5088415	0					
ANR	5088580	ArgumentList	al		5088415	1					
ANR	5088581	Argument	al		5088415	0					
ANR	5088582	Identifier	al		5088415	0					
ANR	5088583	Argument	an		5088415	1					
ANR	5088584	Identifier	an		5088415	0					
ANR	5088585	Argument	bl		5088415	2					
ANR	5088586	Identifier	bl		5088415	0					
ANR	5088587	Argument	bn		5088415	3					
ANR	5088588	Identifier	bn		5088415	0					
ANR	5088589	IfStatement	if ( ! l . head )		5088415	13					
ANR	5088590	Condition	! l . head	316:5:6711:6717	5088415	0	True				
ANR	5088591	UnaryOperationExpression	! l . head		5088415	0					
ANR	5088592	UnaryOperator	!		5088415	0					
ANR	5088593	MemberAccess	l . head		5088415	1					
ANR	5088594	Identifier	l		5088415	0					
ANR	5088595	Identifier	head		5088415	1					
ANR	5088596	CompoundStatement		27:14:493:493	5088415	1					
ANR	5088597	ExpressionStatement	"eprintf ( ""bindiff_buffers: Out of memory.\\n"" )"	317:2:6724:6769	5088415	0	True				
ANR	5088598	CallExpression	"eprintf ( ""bindiff_buffers: Out of memory.\\n"" )"		5088415	0					
ANR	5088599	Callee	eprintf		5088415	0					
ANR	5088600	Identifier	eprintf		5088415	0					
ANR	5088601	ArgumentList	"""bindiff_buffers: Out of memory.\\n"""		5088415	1					
ANR	5088602	Argument	"""bindiff_buffers: Out of memory.\\n"""		5088415	0					
ANR	5088603	PrimaryExpression	"""bindiff_buffers: Out of memory.\\n"""		5088415	0					
ANR	5088604	GotoStatement	goto beach ;	318:2:6773:6783	5088415	1	True				
ANR	5088605	Identifier	beach		5088415	0					
ANR	5088606	ExpressionStatement	hits = la = lb = 0	321:1:6790:6808	5088415	14	True				
ANR	5088607	AssignmentExpression	hits = la = lb = 0		5088415	0		=			
ANR	5088608	Identifier	hits		5088415	0					
ANR	5088609	AssignmentExpression	la = lb = 0		5088415	1		=			
ANR	5088610	Identifier	la		5088415	0					
ANR	5088611	AssignmentExpression	lb = 0		5088415	1		=			
ANR	5088612	Identifier	lb		5088415	0					
ANR	5088613	PrimaryExpression	0		5088415	1					
ANR	5088614	ForStatement	for ( h = l . base ; h != l . head ; h ++ )		5088415	15					
ANR	5088615	ForInit	h = l . base ;	322:6:6816:6826	5088415	0	True				
ANR	5088616	AssignmentExpression	h = l . base		5088415	0		=			
ANR	5088617	Identifier	h		5088415	0					
ANR	5088618	MemberAccess	l . base		5088415	1					
ANR	5088619	Identifier	l		5088415	0					
ANR	5088620	Identifier	base		5088415	1					
ANR	5088621	Condition	h != l . head	322:18:6828:6838	5088415	1	True				
ANR	5088622	EqualityExpression	h != l . head		5088415	0		!=			
ANR	5088623	Identifier	h		5088415	0					
ANR	5088624	MemberAccess	l . head		5088415	1					
ANR	5088625	Identifier	l		5088415	0					
ANR	5088626	Identifier	head		5088415	1					
ANR	5088627	PostIncDecOperationExpression	h ++	322:31:6841:6843	5088415	2	True				
ANR	5088628	Identifier	h		5088415	0					
ANR	5088629	IncDec	++		5088415	1					
ANR	5088630	CompoundStatement		33:36:619:619	5088415	3					
ANR	5088631	IfStatement	if ( h -> a1 != la || h -> b1 != lb )		5088415	0					
ANR	5088632	Condition	h -> a1 != la || h -> b1 != lb	323:6:6854:6879	5088415	0	True				
ANR	5088633	OrExpression	h -> a1 != la || h -> b1 != lb		5088415	0		||			
ANR	5088634	EqualityExpression	h -> a1 != la		5088415	0		!=			
ANR	5088635	PtrMemberAccess	h -> a1		5088415	0					
ANR	5088636	Identifier	h		5088415	0					
ANR	5088637	Identifier	a1		5088415	1					
ANR	5088638	Identifier	la		5088415	1					
ANR	5088639	EqualityExpression	h -> b1 != lb		5088415	1		!=			
ANR	5088640	PtrMemberAccess	h -> b1		5088415	0					
ANR	5088641	Identifier	h		5088415	0					
ANR	5088642	Identifier	b1		5088415	1					
ANR	5088643	Identifier	lb		5088415	1					
ANR	5088644	CompoundStatement		34:34:655:655	5088415	1					
ANR	5088645	ExpressionStatement	len = bl [ h -> b1 ] . l - bl [ lb ] . l	324:3:6887:6915	5088415	0	True				
ANR	5088646	AssignmentExpression	len = bl [ h -> b1 ] . l - bl [ lb ] . l		5088415	0		=			
ANR	5088647	Identifier	len		5088415	0					
ANR	5088648	AdditiveExpression	bl [ h -> b1 ] . l - bl [ lb ] . l		5088415	1		-			
ANR	5088649	MemberAccess	bl [ h -> b1 ] . l		5088415	0					
ANR	5088650	ArrayIndexing	bl [ h -> b1 ]		5088415	0					
ANR	5088651	Identifier	bl		5088415	0					
ANR	5088652	PtrMemberAccess	h -> b1		5088415	1					
ANR	5088653	Identifier	h		5088415	0					
ANR	5088654	Identifier	b1		5088415	1					
ANR	5088655	Identifier	l		5088415	1					
ANR	5088656	MemberAccess	bl [ lb ] . l		5088415	1					
ANR	5088657	ArrayIndexing	bl [ lb ]		5088415	0					
ANR	5088658	Identifier	bl		5088415	0					
ANR	5088659	Identifier	lb		5088415	1					
ANR	5088660	Identifier	l		5088415	1					
ANR	5088661	ExpressionStatement	offa = al [ la ] . l - al -> l	325:3:6920:6943	5088415	1	True				
ANR	5088662	AssignmentExpression	offa = al [ la ] . l - al -> l		5088415	0		=			
ANR	5088663	Identifier	offa		5088415	0					
ANR	5088664	AdditiveExpression	al [ la ] . l - al -> l		5088415	1		-			
ANR	5088665	MemberAccess	al [ la ] . l		5088415	0					
ANR	5088666	ArrayIndexing	al [ la ]		5088415	0					
ANR	5088667	Identifier	al		5088415	0					
ANR	5088668	Identifier	la		5088415	1					
ANR	5088669	Identifier	l		5088415	1					
ANR	5088670	PtrMemberAccess	al -> l		5088415	1					
ANR	5088671	Identifier	al		5088415	0					
ANR	5088672	Identifier	l		5088415	1					
ANR	5088673	ExpressionStatement	offb = al [ h -> a1 ] . l - al -> l	326:3:6948:6974	5088415	2	True				
ANR	5088674	AssignmentExpression	offb = al [ h -> a1 ] . l - al -> l		5088415	0		=			
ANR	5088675	Identifier	offb		5088415	0					
ANR	5088676	AdditiveExpression	al [ h -> a1 ] . l - al -> l		5088415	1		-			
ANR	5088677	MemberAccess	al [ h -> a1 ] . l		5088415	0					
ANR	5088678	ArrayIndexing	al [ h -> a1 ]		5088415	0					
ANR	5088679	Identifier	al		5088415	0					
ANR	5088680	PtrMemberAccess	h -> a1		5088415	1					
ANR	5088681	Identifier	h		5088415	0					
ANR	5088682	Identifier	a1		5088415	1					
ANR	5088683	Identifier	l		5088415	1					
ANR	5088684	PtrMemberAccess	al -> l		5088415	1					
ANR	5088685	Identifier	al		5088415	0					
ANR	5088686	Identifier	l		5088415	1					
ANR	5088687	ExpressionStatement	rlen = offb - offa	327:3:6979:6995	5088415	3	True				
ANR	5088688	AssignmentExpression	rlen = offb - offa		5088415	0		=			
ANR	5088689	Identifier	rlen		5088415	0					
ANR	5088690	AdditiveExpression	offb - offa		5088415	1		-			
ANR	5088691	Identifier	offb		5088415	0					
ANR	5088692	Identifier	offa		5088415	1					
ANR	5088693	IfStatement	if ( d -> callback )		5088415	4					
ANR	5088694	Condition	d -> callback	329:7:7005:7015	5088415	0	True				
ANR	5088695	PtrMemberAccess	d -> callback		5088415	0					
ANR	5088696	Identifier	d		5088415	0					
ANR	5088697	Identifier	callback		5088415	1					
ANR	5088698	CompoundStatement		40:20:791:791	5088415	1					
ANR	5088699	ExpressionStatement	dop . a_off = offa	331:4:7046:7062	5088415	0	True				
ANR	5088700	AssignmentExpression	dop . a_off = offa		5088415	0		=			
ANR	5088701	MemberAccess	dop . a_off		5088415	0					
ANR	5088702	Identifier	dop		5088415	0					
ANR	5088703	Identifier	a_off		5088415	1					
ANR	5088704	Identifier	offa		5088415	1					
ANR	5088705	ExpressionStatement	dop . a_buf = ( ut8 * ) al [ la ] . l	332:4:7068:7095	5088415	1	True				
ANR	5088706	AssignmentExpression	dop . a_buf = ( ut8 * ) al [ la ] . l		5088415	0		=			
ANR	5088707	MemberAccess	dop . a_buf		5088415	0					
ANR	5088708	Identifier	dop		5088415	0					
ANR	5088709	Identifier	a_buf		5088415	1					
ANR	5088710	CastExpression	( ut8 * ) al [ la ] . l		5088415	1					
ANR	5088711	CastTarget	ut8 *		5088415	0					
ANR	5088712	MemberAccess	al [ la ] . l		5088415	1					
ANR	5088713	ArrayIndexing	al [ la ]		5088415	0					
ANR	5088714	Identifier	al		5088415	0					
ANR	5088715	Identifier	la		5088415	1					
ANR	5088716	Identifier	l		5088415	1					
ANR	5088717	ExpressionStatement	dop . a_len = rlen	333:4:7101:7117	5088415	2	True				
ANR	5088718	AssignmentExpression	dop . a_len = rlen		5088415	0		=			
ANR	5088719	MemberAccess	dop . a_len		5088415	0					
ANR	5088720	Identifier	dop		5088415	0					
ANR	5088721	Identifier	a_len		5088415	1					
ANR	5088722	Identifier	rlen		5088415	1					
ANR	5088723	ExpressionStatement	dop . b_off = offa	336:4:7151:7167	5088415	3	True				
ANR	5088724	AssignmentExpression	dop . b_off = offa		5088415	0		=			
ANR	5088725	MemberAccess	dop . b_off		5088415	0					
ANR	5088726	Identifier	dop		5088415	0					
ANR	5088727	Identifier	b_off		5088415	1					
ANR	5088728	Identifier	offa		5088415	1					
ANR	5088729	ExpressionStatement	dop . b_buf = ( ut8 * ) bl [ lb ] . l	337:4:7196:7223	5088415	4	True				
ANR	5088730	AssignmentExpression	dop . b_buf = ( ut8 * ) bl [ lb ] . l		5088415	0		=			
ANR	5088731	MemberAccess	dop . b_buf		5088415	0					
ANR	5088732	Identifier	dop		5088415	0					
ANR	5088733	Identifier	b_buf		5088415	1					
ANR	5088734	CastExpression	( ut8 * ) bl [ lb ] . l		5088415	1					
ANR	5088735	CastTarget	ut8 *		5088415	0					
ANR	5088736	MemberAccess	bl [ lb ] . l		5088415	1					
ANR	5088737	ArrayIndexing	bl [ lb ]		5088415	0					
ANR	5088738	Identifier	bl		5088415	0					
ANR	5088739	Identifier	lb		5088415	1					
ANR	5088740	Identifier	l		5088415	1					
ANR	5088741	ExpressionStatement	dop . b_len = len	338:4:7229:7244	5088415	5	True				
ANR	5088742	AssignmentExpression	dop . b_len = len		5088415	0		=			
ANR	5088743	MemberAccess	dop . b_len		5088415	0					
ANR	5088744	Identifier	dop		5088415	0					
ANR	5088745	Identifier	b_len		5088415	1					
ANR	5088746	Identifier	len		5088415	1					
ANR	5088747	IfStatement	"if ( ! d -> callback ( d , d -> user , & dop ) )"		5088415	6					
ANR	5088748	Condition	"! d -> callback ( d , d -> user , & dop )"	339:8:7254:7284	5088415	0	True				
ANR	5088749	UnaryOperationExpression	"! d -> callback ( d , d -> user , & dop )"		5088415	0					
ANR	5088750	UnaryOperator	!		5088415	0					
ANR	5088751	CallExpression	"d -> callback ( d , d -> user , & dop )"		5088415	1					
ANR	5088752	Callee	d -> callback		5088415	0					
ANR	5088753	PtrMemberAccess	d -> callback		5088415	0					
ANR	5088754	Identifier	d		5088415	0					
ANR	5088755	Identifier	callback		5088415	1					
ANR	5088756	ArgumentList	d		5088415	1					
ANR	5088757	Argument	d		5088415	0					
ANR	5088758	Identifier	d		5088415	0					
ANR	5088759	Argument	d -> user		5088415	1					
ANR	5088760	PtrMemberAccess	d -> user		5088415	0					
ANR	5088761	Identifier	d		5088415	0					
ANR	5088762	Identifier	user		5088415	1					
ANR	5088763	Argument	& dop		5088415	2					
ANR	5088764	UnaryOperationExpression	& dop		5088415	0					
ANR	5088765	UnaryOperator	&		5088415	0					
ANR	5088766	Identifier	dop		5088415	1					
ANR	5088767	CompoundStatement		50:41:1060:1060	5088415	1					
ANR	5088768	BreakStatement	break ;	340:5:7294:7299	5088415	0	True				
ANR	5088769	IfStatement	if ( rlen > 0 )		5088415	5					
ANR	5088770	Condition	rlen > 0	344:7:7326:7333	5088415	0	True				
ANR	5088771	RelationalExpression	rlen > 0		5088415	0		>			
ANR	5088772	Identifier	rlen		5088415	0					
ANR	5088773	PrimaryExpression	0		5088415	1					
ANR	5088774	CompoundStatement		55:17:1109:1109	5088415	1					
ANR	5088775	Statement	printf	346:4:7398:7403	5088415	0	True				
ANR	5088776	Statement	(	346:11:7405:7405	5088415	1	True				
ANR	5088777	Statement	"""r-%d @ 0x%"""	346:12:7406:7417	5088415	2	True				
ANR	5088778	Statement	PFMT64x	346:24:7418:7424	5088415	3	True				
ANR	5088779	Statement	"""\\n"""	346:31:7425:7428	5088415	4	True				
ANR	5088780	Statement	","	346:35:7429:7429	5088415	5	True				
ANR	5088781	Statement	rlen	346:37:7431:7434	5088415	6	True				
ANR	5088782	Statement	","	346:41:7435:7435	5088415	7	True				
ANR	5088783	Statement	(	346:43:7437:7437	5088415	8	True				
ANR	5088784	Statement	ut64	346:44:7438:7441	5088415	9	True				
ANR	5088785	Statement	)	346:48:7442:7442	5088415	10	True				
ANR	5088786	Statement	offa	346:49:7443:7446	5088415	11	True				
ANR	5088787	Statement	)	346:53:7447:7447	5088415	12	True				
ANR	5088788	ExpressionStatement		346:54:7448:7448	5088415	13	True				
ANR	5088789	ExpressionStatement	"printf ( ""e file.write=true\\n"" )"	348:3:7458:7488	5088415	6	True				
ANR	5088790	CallExpression	"printf ( ""e file.write=true\\n"" )"		5088415	0					
ANR	5088791	Callee	printf		5088415	0					
ANR	5088792	Identifier	printf		5088415	0					
ANR	5088793	ArgumentList	"""e file.write=true\\n"""		5088415	1					
ANR	5088794	Argument	"""e file.write=true\\n"""		5088415	0					
ANR	5088795	PrimaryExpression	"""e file.write=true\\n"""		5088415	0					
ANR	5088796	ExpressionStatement	"printf ( ""wx "" )"	349:3:7500:7514	5088415	7	True				
ANR	5088797	CallExpression	"printf ( ""wx "" )"		5088415	0					
ANR	5088798	Callee	printf		5088415	0					
ANR	5088799	Identifier	printf		5088415	0					
ANR	5088800	ArgumentList	"""wx """		5088415	1					
ANR	5088801	Argument	"""wx """		5088415	0					
ANR	5088802	PrimaryExpression	"""wx """		5088415	0					
ANR	5088803	ForStatement	for ( i = 0 ; i < len ; i ++ )		5088415	8					
ANR	5088804	ForInit	i = 0 ;	350:7:7523:7526	5088415	0	True				
ANR	5088805	AssignmentExpression	i = 0		5088415	0		=			
ANR	5088806	Identifier	i		5088415	0					
ANR	5088807	PrimaryExpression	0		5088415	1					
ANR	5088808	Condition	i < len	350:11:7527:7531	5088415	1	True				
ANR	5088809	RelationalExpression	i < len		5088415	0		<			
ANR	5088810	Identifier	i		5088415	0					
ANR	5088811	Identifier	len		5088415	1					
ANR	5088812	PostIncDecOperationExpression	i ++	350:17:7533:7535	5088415	2	True				
ANR	5088813	Identifier	i		5088415	0					
ANR	5088814	IncDec	++		5088415	1					
ANR	5088815	ExpressionStatement	"printf ( ""%02x"" , bl [ lb ] . l [ i ] )"	351:4:7542:7570	5088415	3	True				
ANR	5088816	CallExpression	"printf ( ""%02x"" , bl [ lb ] . l [ i ] )"		5088415	0					
ANR	5088817	Callee	printf		5088415	0					
ANR	5088818	Identifier	printf		5088415	0					
ANR	5088819	ArgumentList	"""%02x"""		5088415	1					
ANR	5088820	Argument	"""%02x"""		5088415	0					
ANR	5088821	PrimaryExpression	"""%02x"""		5088415	0					
ANR	5088822	Argument	bl [ lb ] . l [ i ]		5088415	1					
ANR	5088823	ArrayIndexing	bl [ lb ] . l [ i ]		5088415	0					
ANR	5088824	MemberAccess	bl [ lb ] . l		5088415	0					
ANR	5088825	ArrayIndexing	bl [ lb ]		5088415	0					
ANR	5088826	Identifier	bl		5088415	0					
ANR	5088827	Identifier	lb		5088415	1					
ANR	5088828	Identifier	l		5088415	1					
ANR	5088829	Identifier	i		5088415	1					
ANR	5088830	Statement	printf	352:3:7575:7580	5088415	9	True				
ANR	5088831	Statement	(	352:10:7582:7582	5088415	10	True				
ANR	5088832	Statement	""" @ 0x%"""	352:11:7583:7590	5088415	11	True				
ANR	5088833	Statement	PFMT64x	352:19:7591:7597	5088415	12	True				
ANR	5088834	Statement	"""\\n"""	352:26:7598:7601	5088415	13	True				
ANR	5088835	Statement	","	352:30:7602:7602	5088415	14	True				
ANR	5088836	Statement	(	352:32:7604:7604	5088415	15	True				
ANR	5088837	Statement	ut64	352:33:7605:7608	5088415	16	True				
ANR	5088838	Statement	)	352:37:7609:7609	5088415	17	True				
ANR	5088839	Statement	offa	352:38:7610:7613	5088415	18	True				
ANR	5088840	Statement	)	352:42:7614:7614	5088415	19	True				
ANR	5088841	ExpressionStatement		352:43:7615:7615	5088415	20	True				
ANR	5088842	ExpressionStatement	rb += 12 + len	353:3:7620:7634	5088415	21	True				
ANR	5088843	AssignmentExpression	rb += 12 + len		5088415	0		+=			
ANR	5088844	Identifier	rb		5088415	0					
ANR	5088845	AdditiveExpression	12 + len		5088415	1		+			
ANR	5088846	PrimaryExpression	12		5088415	0					
ANR	5088847	Identifier	len		5088415	1					
ANR	5088848	ExpressionStatement	la = h -> a2	356:2:7649:7659	5088415	1	True				
ANR	5088849	AssignmentExpression	la = h -> a2		5088415	0		=			
ANR	5088850	Identifier	la		5088415	0					
ANR	5088851	PtrMemberAccess	h -> a2		5088415	1					
ANR	5088852	Identifier	h		5088415	0					
ANR	5088853	Identifier	a2		5088415	1					
ANR	5088854	ExpressionStatement	lb = h -> b2	357:2:7663:7673	5088415	2	True				
ANR	5088855	AssignmentExpression	lb = h -> b2		5088415	0		=			
ANR	5088856	Identifier	lb		5088415	0					
ANR	5088857	PtrMemberAccess	h -> b2		5088415	1					
ANR	5088858	Identifier	h		5088415	0					
ANR	5088859	Identifier	b2		5088415	1					
ANR	5088860	Label	beach :	359:1:7679:7684	5088415	16	True				
ANR	5088861	Identifier	beach		5088415	0					
ANR	5088862	ExpressionStatement	free ( al )	360:1:7687:7696	5088415	17	True				
ANR	5088863	CallExpression	free ( al )		5088415	0					
ANR	5088864	Callee	free		5088415	0					
ANR	5088865	Identifier	free		5088415	0					
ANR	5088866	ArgumentList	al		5088415	1					
ANR	5088867	Argument	al		5088415	0					
ANR	5088868	Identifier	al		5088415	0					
ANR	5088869	ExpressionStatement	free ( bl )	361:1:7699:7708	5088415	18	True				
ANR	5088870	CallExpression	free ( bl )		5088415	0					
ANR	5088871	Callee	free		5088415	0					
ANR	5088872	Identifier	free		5088415	0					
ANR	5088873	ArgumentList	bl		5088415	1					
ANR	5088874	Argument	bl		5088415	0					
ANR	5088875	Identifier	bl		5088415	0					
ANR	5088876	ExpressionStatement	free ( l . base )	362:1:7711:7724	5088415	19	True				
ANR	5088877	CallExpression	free ( l . base )		5088415	0					
ANR	5088878	Callee	free		5088415	0					
ANR	5088879	Identifier	free		5088415	0					
ANR	5088880	ArgumentList	l . base		5088415	1					
ANR	5088881	Argument	l . base		5088415	0					
ANR	5088882	MemberAccess	l . base		5088415	0					
ANR	5088883	Identifier	l		5088415	0					
ANR	5088884	Identifier	base		5088415	1					
ANR	5088885	ReturnStatement	return hits ;	364:1:7728:7739	5088415	20	True				
ANR	5088886	Identifier	hits		5088415	0					
ANR	5088887	ReturnType	R_API int		5088415	1					
ANR	5088888	Identifier	r_diff_buffers_delta		5088415	2					
ANR	5088889	ParameterList	"RDiff * d , const ut8 * sa , int la , const ut8 * sb , int lb"		5088415	3					
ANR	5088890	Parameter	RDiff * d	290:31:6170:6177	5088415	0	True				
ANR	5088891	ParameterType	RDiff *		5088415	0					
ANR	5088892	Identifier	d		5088415	1					
ANR	5088893	Parameter	const ut8 * sa	290:41:6180:6192	5088415	1	True				
ANR	5088894	ParameterType	const ut8 *		5088415	0					
ANR	5088895	Identifier	sa		5088415	1					
ANR	5088896	Parameter	int la	290:56:6195:6200	5088415	2	True				
ANR	5088897	ParameterType	int		5088415	0					
ANR	5088898	Identifier	la		5088415	1					
ANR	5088899	Parameter	const ut8 * sb	290:64:6203:6215	5088415	3	True				
ANR	5088900	ParameterType	const ut8 *		5088415	0					
ANR	5088901	Identifier	sb		5088415	1					
ANR	5088902	Parameter	int lb	290:79:6218:6223	5088415	4	True				
ANR	5088903	ParameterType	int		5088415	0					
ANR	5088904	Identifier	lb		5088415	1					
ANR	5088905	CFGEntryNode	ENTRY		5088415		True				
ANR	5088906	CFGExitNode	EXIT		5088415		True				
ANR	5088907	Symbol	l . base		5088415						
ANR	5088908	Symbol	d -> user		5088415						
ANR	5088909	Symbol	dop . a_off		5088415						
ANR	5088910	Symbol	dop . b_buf		5088415						
ANR	5088911	Symbol	* h -> a1		5088415						
ANR	5088912	Symbol	dop . a_buf		5088415						
ANR	5088913	Symbol	dop . b_off		5088415						
ANR	5088914	Symbol	bl [ lb ] . l		5088415						
ANR	5088915	Symbol	* bl		5088415						
ANR	5088916	Symbol	len		5088415						
ANR	5088917	Symbol	& bl		5088415						
ANR	5088918	Symbol	h -> b2		5088415						
ANR	5088919	Symbol	h -> b1		5088415						
ANR	5088920	Symbol	bl [ h -> b1 ] . l		5088415						
ANR	5088921	Symbol	NULL		5088415						
ANR	5088922	Symbol	* * h		5088415						
ANR	5088923	Symbol	dop . b_len		5088415						
ANR	5088924	Symbol	* h -> b1		5088415						
ANR	5088925	Symbol	diff		5088415						
ANR	5088926	Symbol	al		5088415						
ANR	5088927	Symbol	dop . a_len		5088415						
ANR	5088928	Symbol	an		5088415						
ANR	5088929	Symbol	* bl [ lb ] . l		5088415						
ANR	5088930	Symbol	rb		5088415						
ANR	5088931	Symbol	h -> a2		5088415						
ANR	5088932	Symbol	d -> callback		5088415						
ANR	5088933	Symbol	* * bl		5088415						
ANR	5088934	Symbol	* la		5088415						
ANR	5088935	Symbol	h -> a1		5088415						
ANR	5088936	Symbol	* lb		5088415						
ANR	5088937	Symbol	dop		5088415						
ANR	5088938	Symbol	bl		5088415						
ANR	5088939	Symbol	bn		5088415						
ANR	5088940	Symbol	sa		5088415						
ANR	5088941	Symbol	sb		5088415						
ANR	5088942	Symbol	splitlines		5088415						
ANR	5088943	Symbol	rlen		5088415						
ANR	5088944	Symbol	al [ la ] . l		5088415						
ANR	5088945	Symbol	* * lb		5088415						
ANR	5088946	Symbol	d		5088415						
ANR	5088947	Symbol	offa		5088415						
ANR	5088948	Symbol	offb		5088415						
ANR	5088949	Symbol	h		5088415						
ANR	5088950	Symbol	i		5088415						
ANR	5088951	Symbol	l		5088415						
ANR	5088952	Symbol	& dop		5088415						
ANR	5088953	Symbol	al [ h -> a1 ] . l		5088415						
ANR	5088954	Symbol	* d		5088415						
ANR	5088955	Symbol	hits		5088415						
ANR	5088956	Symbol	* h		5088415						
ANR	5088957	Symbol	* al		5088415						
ANR	5088958	Symbol	al -> l		5088415						
ANR	5088959	Symbol	* i		5088415						
ANR	5088960	Symbol	& al		5088415						
ANR	5088961	Symbol	la		5088415						
ANR	5088962	Symbol	lb		5088415						
ANR	5088963	Symbol	l . head		5088415						
