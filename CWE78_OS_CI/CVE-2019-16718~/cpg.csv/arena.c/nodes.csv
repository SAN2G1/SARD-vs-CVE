command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	309589	File	data/converged/CVE-2019-16718~_radare2/arena.c								
ANR	309590	Function	r_reg_get_bytes	6:0:140:999							
ANR	309591	FunctionDef	"r_reg_get_bytes (RReg * reg , int type , int * size)"		309590	0					
ANR	309592	CompoundStatement		6:59:199:999	309590	0					
ANR	309593	IdentifierDeclStatement	RRegArena * arena ;	7:1:202:218	309590	0	True				
ANR	309594	IdentifierDecl	* arena		309590	0					
ANR	309595	IdentifierDeclType	RRegArena *		309590	0					
ANR	309596	Identifier	arena		309590	1					
ANR	309597	IdentifierDeclStatement	"int i , sz , osize ;"	8:1:221:237	309590	1	True				
ANR	309598	IdentifierDecl	i		309590	0					
ANR	309599	IdentifierDeclType	int		309590	0					
ANR	309600	Identifier	i		309590	1					
ANR	309601	IdentifierDecl	sz		309590	1					
ANR	309602	IdentifierDeclType	int		309590	0					
ANR	309603	Identifier	sz		309590	1					
ANR	309604	IdentifierDecl	osize		309590	2					
ANR	309605	IdentifierDeclType	int		309590	0					
ANR	309606	Identifier	osize		309590	1					
ANR	309607	IdentifierDeclStatement	"ut8 * buf , * newbuf ;"	9:1:240:257	309590	2	True				
ANR	309608	IdentifierDecl	* buf		309590	0					
ANR	309609	IdentifierDeclType	ut8 *		309590	0					
ANR	309610	Identifier	buf		309590	1					
ANR	309611	IdentifierDecl	* newbuf		309590	1					
ANR	309612	IdentifierDeclType	ut8 *		309590	0					
ANR	309613	Identifier	newbuf		309590	1					
ANR	309614	IfStatement	if ( size )		309590	3					
ANR	309615	Condition	size	10:5:264:267	309590	0	True				
ANR	309616	Identifier	size		309590	0					
ANR	309617	CompoundStatement		5:11:70:70	309590	1					
ANR	309618	ExpressionStatement	* size = 0	11:2:274:283	309590	0	True				
ANR	309619	AssignmentExpression	* size = 0		309590	0		=			
ANR	309620	UnaryOperationExpression	* size		309590	0					
ANR	309621	UnaryOperator	*		309590	0					
ANR	309622	Identifier	size		309590	1					
ANR	309623	PrimaryExpression	0		309590	1					
ANR	309624	IfStatement	if ( type == - 1 )		309590	4					
ANR	309625	Condition	type == - 1	13:5:293:302	309590	0	True				
ANR	309626	EqualityExpression	type == - 1		309590	0		==			
ANR	309627	Identifier	type		309590	0					
ANR	309628	UnaryOperationExpression	- 1		309590	1					
ANR	309629	UnaryOperator	-		309590	0					
ANR	309630	PrimaryExpression	1		309590	1					
ANR	309631	CompoundStatement		8:17:105:105	309590	1					
ANR	309632	ExpressionStatement	osize = sz = 0	16:2:395:409	309590	0	True				
ANR	309633	AssignmentExpression	osize = sz = 0		309590	0		=			
ANR	309634	Identifier	osize		309590	0					
ANR	309635	AssignmentExpression	sz = 0		309590	1		=			
ANR	309636	Identifier	sz		309590	0					
ANR	309637	PrimaryExpression	0		309590	1					
ANR	309638	ExpressionStatement	buf = malloc ( 8 )	17:2:413:429	309590	1	True				
ANR	309639	AssignmentExpression	buf = malloc ( 8 )		309590	0		=			
ANR	309640	Identifier	buf		309590	0					
ANR	309641	CallExpression	malloc ( 8 )		309590	1					
ANR	309642	Callee	malloc		309590	0					
ANR	309643	Identifier	malloc		309590	0					
ANR	309644	ArgumentList	8		309590	1					
ANR	309645	Argument	8		309590	0					
ANR	309646	PrimaryExpression	8		309590	0					
ANR	309647	IfStatement	if ( ! buf )		309590	2					
ANR	309648	Condition	! buf	18:6:437:440	309590	0	True				
ANR	309649	UnaryOperationExpression	! buf		309590	0					
ANR	309650	UnaryOperator	!		309590	0					
ANR	309651	Identifier	buf		309590	1					
ANR	309652	CompoundStatement		13:12:243:243	309590	1					
ANR	309653	ReturnStatement	return NULL ;	19:3:448:459	309590	0	True				
ANR	309654	Identifier	NULL		309590	0					
ANR	309655	ForStatement	for ( i = 0 ; i < R_REG_TYPE_LAST ; i ++ )		309590	3					
ANR	309656	ForInit	i = 0 ;	21:7:472:477	309590	0	True				
ANR	309657	AssignmentExpression	i = 0		309590	0		=			
ANR	309658	Identifier	i		309590	0					
ANR	309659	PrimaryExpression	0		309590	1					
ANR	309660	Condition	i < R_REG_TYPE_LAST	21:14:479:497	309590	1	True				
ANR	309661	RelationalExpression	i < R_REG_TYPE_LAST		309590	0		<			
ANR	309662	Identifier	i		309590	0					
ANR	309663	Identifier	R_REG_TYPE_LAST		309590	1					
ANR	309664	PostIncDecOperationExpression	i ++	21:35:500:502	309590	2	True				
ANR	309665	Identifier	i		309590	0					
ANR	309666	IncDec	++		309590	1					
ANR	309667	CompoundStatement		16:40:305:305	309590	3					
ANR	309668	ExpressionStatement	arena = reg -> regset [ i ] . arena	22:3:510:538	309590	0	True				
ANR	309669	AssignmentExpression	arena = reg -> regset [ i ] . arena		309590	0		=			
ANR	309670	Identifier	arena		309590	0					
ANR	309671	MemberAccess	reg -> regset [ i ] . arena		309590	1					
ANR	309672	ArrayIndexing	reg -> regset [ i ]		309590	0					
ANR	309673	PtrMemberAccess	reg -> regset		309590	0					
ANR	309674	Identifier	reg		309590	0					
ANR	309675	Identifier	regset		309590	1					
ANR	309676	Identifier	i		309590	1					
ANR	309677	Identifier	arena		309590	1					
ANR	309678	ExpressionStatement	sz += arena -> size	23:3:543:560	309590	1	True				
ANR	309679	AssignmentExpression	sz += arena -> size		309590	0		+=			
ANR	309680	Identifier	sz		309590	0					
ANR	309681	PtrMemberAccess	arena -> size		309590	1					
ANR	309682	Identifier	arena		309590	0					
ANR	309683	Identifier	size		309590	1					
ANR	309684	ExpressionStatement	"newbuf = realloc ( buf , sz )"	24:3:565:591	309590	2	True				
ANR	309685	AssignmentExpression	"newbuf = realloc ( buf , sz )"		309590	0		=			
ANR	309686	Identifier	newbuf		309590	0					
ANR	309687	CallExpression	"realloc ( buf , sz )"		309590	1					
ANR	309688	Callee	realloc		309590	0					
ANR	309689	Identifier	realloc		309590	0					
ANR	309690	ArgumentList	buf		309590	1					
ANR	309691	Argument	buf		309590	0					
ANR	309692	Identifier	buf		309590	0					
ANR	309693	Argument	sz		309590	1					
ANR	309694	Identifier	sz		309590	0					
ANR	309695	IfStatement	if ( ! newbuf )		309590	3					
ANR	309696	Condition	! newbuf	25:7:600:606	309590	0	True				
ANR	309697	UnaryOperationExpression	! newbuf		309590	0					
ANR	309698	UnaryOperator	!		309590	0					
ANR	309699	Identifier	newbuf		309590	1					
ANR	309700	CompoundStatement		20:16:409:409	309590	1					
ANR	309701	BreakStatement	break ;	26:4:615:620	309590	0	True				
ANR	309702	ExpressionStatement	buf = newbuf	28:3:630:642	309590	4	True				
ANR	309703	AssignmentExpression	buf = newbuf		309590	0		=			
ANR	309704	Identifier	buf		309590	0					
ANR	309705	Identifier	newbuf		309590	1					
ANR	309706	ExpressionStatement	"memcpy ( buf + osize , arena -> bytes , arena -> size )"	29:3:647:694	309590	5	True				
ANR	309707	CallExpression	"memcpy ( buf + osize , arena -> bytes , arena -> size )"		309590	0					
ANR	309708	Callee	memcpy		309590	0					
ANR	309709	Identifier	memcpy		309590	0					
ANR	309710	ArgumentList	buf + osize		309590	1					
ANR	309711	Argument	buf + osize		309590	0					
ANR	309712	AdditiveExpression	buf + osize		309590	0		+			
ANR	309713	Identifier	buf		309590	0					
ANR	309714	Identifier	osize		309590	1					
ANR	309715	Argument	arena -> bytes		309590	1					
ANR	309716	PtrMemberAccess	arena -> bytes		309590	0					
ANR	309717	Identifier	arena		309590	0					
ANR	309718	Identifier	bytes		309590	1					
ANR	309719	Argument	arena -> size		309590	2					
ANR	309720	PtrMemberAccess	arena -> size		309590	0					
ANR	309721	Identifier	arena		309590	0					
ANR	309722	Identifier	size		309590	1					
ANR	309723	ExpressionStatement	osize = sz	30:3:699:709	309590	6	True				
ANR	309724	AssignmentExpression	osize = sz		309590	0		=			
ANR	309725	Identifier	osize		309590	0					
ANR	309726	Identifier	sz		309590	1					
ANR	309727	IfStatement	if ( size )		309590	4					
ANR	309728	Condition	size	32:6:721:724	309590	0	True				
ANR	309729	Identifier	size		309590	0					
ANR	309730	CompoundStatement		27:12:527:527	309590	1					
ANR	309731	ExpressionStatement	* size = sz	33:3:732:742	309590	0	True				
ANR	309732	AssignmentExpression	* size = sz		309590	0		=			
ANR	309733	UnaryOperationExpression	* size		309590	0					
ANR	309734	UnaryOperator	*		309590	0					
ANR	309735	Identifier	size		309590	1					
ANR	309736	Identifier	sz		309590	1					
ANR	309737	ReturnStatement	return buf ;	35:2:750:760	309590	5	True				
ANR	309738	Identifier	buf		309590	0					
ANR	309739	IfStatement	if ( type < 0 || type > ( R_REG_TYPE_LAST - 1 ) )		309590	5					
ANR	309740	Condition	type < 0 || type > ( R_REG_TYPE_LAST - 1 )	37:5:770:809	309590	0	True				
ANR	309741	OrExpression	type < 0 || type > ( R_REG_TYPE_LAST - 1 )		309590	0		||			
ANR	309742	RelationalExpression	type < 0		309590	0		<			
ANR	309743	Identifier	type		309590	0					
ANR	309744	PrimaryExpression	0		309590	1					
ANR	309745	RelationalExpression	type > ( R_REG_TYPE_LAST - 1 )		309590	1		>			
ANR	309746	Identifier	type		309590	0					
ANR	309747	AdditiveExpression	R_REG_TYPE_LAST - 1		309590	1		-			
ANR	309748	Identifier	R_REG_TYPE_LAST		309590	0					
ANR	309749	PrimaryExpression	1		309590	1					
ANR	309750	CompoundStatement		32:47:612:612	309590	1					
ANR	309751	ReturnStatement	return NULL ;	38:2:816:827	309590	0	True				
ANR	309752	Identifier	NULL		309590	0					
ANR	309753	ExpressionStatement	sz = reg -> regset [ type ] . arena -> size	40:1:833:867	309590	6	True				
ANR	309754	AssignmentExpression	sz = reg -> regset [ type ] . arena -> size		309590	0		=			
ANR	309755	Identifier	sz		309590	0					
ANR	309756	PtrMemberAccess	reg -> regset [ type ] . arena -> size		309590	1					
ANR	309757	MemberAccess	reg -> regset [ type ] . arena		309590	0					
ANR	309758	ArrayIndexing	reg -> regset [ type ]		309590	0					
ANR	309759	PtrMemberAccess	reg -> regset		309590	0					
ANR	309760	Identifier	reg		309590	0					
ANR	309761	Identifier	regset		309590	1					
ANR	309762	Identifier	type		309590	1					
ANR	309763	Identifier	arena		309590	1					
ANR	309764	Identifier	size		309590	1					
ANR	309765	IfStatement	if ( size )		309590	7					
ANR	309766	Condition	size	41:5:874:877	309590	0	True				
ANR	309767	Identifier	size		309590	0					
ANR	309768	CompoundStatement		36:11:680:680	309590	1					
ANR	309769	ExpressionStatement	* size = sz	42:2:884:894	309590	0	True				
ANR	309770	AssignmentExpression	* size = sz		309590	0		=			
ANR	309771	UnaryOperationExpression	* size		309590	0					
ANR	309772	UnaryOperator	*		309590	0					
ANR	309773	Identifier	size		309590	1					
ANR	309774	Identifier	sz		309590	1					
ANR	309775	ExpressionStatement	buf = malloc ( sz )	44:1:900:917	309590	8	True				
ANR	309776	AssignmentExpression	buf = malloc ( sz )		309590	0		=			
ANR	309777	Identifier	buf		309590	0					
ANR	309778	CallExpression	malloc ( sz )		309590	1					
ANR	309779	Callee	malloc		309590	0					
ANR	309780	Identifier	malloc		309590	0					
ANR	309781	ArgumentList	sz		309590	1					
ANR	309782	Argument	sz		309590	0					
ANR	309783	Identifier	sz		309590	0					
ANR	309784	IfStatement	if ( buf )		309590	9					
ANR	309785	Condition	buf	45:5:924:926	309590	0	True				
ANR	309786	Identifier	buf		309590	0					
ANR	309787	CompoundStatement		40:10:729:729	309590	1					
ANR	309788	ExpressionStatement	"memcpy ( buf , reg -> regset [ type ] . arena -> bytes , sz )"	46:2:933:981	309590	0	True				
ANR	309789	CallExpression	"memcpy ( buf , reg -> regset [ type ] . arena -> bytes , sz )"		309590	0					
ANR	309790	Callee	memcpy		309590	0					
ANR	309791	Identifier	memcpy		309590	0					
ANR	309792	ArgumentList	buf		309590	1					
ANR	309793	Argument	buf		309590	0					
ANR	309794	Identifier	buf		309590	0					
ANR	309795	Argument	reg -> regset [ type ] . arena -> bytes		309590	1					
ANR	309796	PtrMemberAccess	reg -> regset [ type ] . arena -> bytes		309590	0					
ANR	309797	MemberAccess	reg -> regset [ type ] . arena		309590	0					
ANR	309798	ArrayIndexing	reg -> regset [ type ]		309590	0					
ANR	309799	PtrMemberAccess	reg -> regset		309590	0					
ANR	309800	Identifier	reg		309590	0					
ANR	309801	Identifier	regset		309590	1					
ANR	309802	Identifier	type		309590	1					
ANR	309803	Identifier	arena		309590	1					
ANR	309804	Identifier	bytes		309590	1					
ANR	309805	Argument	sz		309590	2					
ANR	309806	Identifier	sz		309590	0					
ANR	309807	ReturnStatement	return buf ;	48:1:987:997	309590	10	True				
ANR	309808	Identifier	buf		309590	0					
ANR	309809	ReturnType	R_API ut8 *		309590	1					
ANR	309810	Identifier	r_reg_get_bytes		309590	2					
ANR	309811	ParameterList	"RReg * reg , int type , int * size"		309590	3					
ANR	309812	Parameter	RReg * reg	6:27:167:175	309590	0	True				
ANR	309813	ParameterType	RReg *		309590	0					
ANR	309814	Identifier	reg		309590	1					
ANR	309815	Parameter	int type	6:38:178:185	309590	1	True				
ANR	309816	ParameterType	int		309590	0					
ANR	309817	Identifier	type		309590	1					
ANR	309818	Parameter	int * size	6:48:188:196	309590	2	True				
ANR	309819	ParameterType	int *		309590	0					
ANR	309820	Identifier	size		309590	1					
ANR	309821	CFGEntryNode	ENTRY		309590		True				
ANR	309822	CFGExitNode	EXIT		309590		True				
ANR	309823	Symbol	reg -> regset [ type ] . arena		309590						
ANR	309824	Symbol	arena		309590						
ANR	309825	Symbol	realloc		309590						
ANR	309826	Symbol	type		309590						
ANR	309827	Symbol	reg -> regset		309590						
ANR	309828	Symbol	* * * reg		309590						
ANR	309829	Symbol	* size		309590						
ANR	309830	Symbol	reg		309590						
ANR	309831	Symbol	* type		309590						
ANR	309832	Symbol	arena -> bytes		309590						
ANR	309833	Symbol	malloc		309590						
ANR	309834	Symbol	osize		309590						
ANR	309835	Symbol	* reg -> regset		309590						
ANR	309836	Symbol	NULL		309590						
ANR	309837	Symbol	reg -> regset [ type ] . arena -> size		309590						
ANR	309838	Symbol	sz		309590						
ANR	309839	Symbol	newbuf		309590						
ANR	309840	Symbol	* * reg		309590						
ANR	309841	Symbol	i		309590						
ANR	309842	Symbol	R_REG_TYPE_LAST		309590						
ANR	309843	Symbol	arena -> size		309590						
ANR	309844	Symbol	* * reg -> regset		309590						
ANR	309845	Symbol	buf		309590						
ANR	309846	Symbol	* reg -> regset [ type ] . arena		309590						
ANR	309847	Symbol	reg -> regset [ type ] . arena -> bytes		309590						
ANR	309848	Symbol	* i		309590						
ANR	309849	Symbol	size		309590						
ANR	309850	Symbol	* * type		309590						
ANR	309851	Symbol	* arena		309590						
ANR	309852	Symbol	* reg		309590						
ANR	309853	Symbol	reg -> regset [ i ] . arena		309590						
ANR	309854	Function	r_reg_read_regs	53:0:1095:1798							
ANR	309855	FunctionDef	"r_reg_read_regs (RReg * reg , ut8 * buf , const int len)"		309854	0					
ANR	309856	CompoundStatement		53:63:1158:1798	309854	0					
ANR	309857	IdentifierDeclStatement	"int i , off = 0 ;"	54:1:1161:1175	309854	0	True				
ANR	309858	IdentifierDecl	i		309854	0					
ANR	309859	IdentifierDeclType	int		309854	0					
ANR	309860	Identifier	i		309854	1					
ANR	309861	IdentifierDecl	off = 0		309854	1					
ANR	309862	IdentifierDeclType	int		309854	0					
ANR	309863	Identifier	off		309854	1					
ANR	309864	AssignmentExpression	off = 0		309854	2		=			
ANR	309865	Identifier	off		309854	0					
ANR	309866	PrimaryExpression	0		309854	1					
ANR	309867	IdentifierDeclStatement	RRegArena * arena ;	55:1:1178:1194	309854	1	True				
ANR	309868	IdentifierDecl	* arena		309854	0					
ANR	309869	IdentifierDeclType	RRegArena *		309854	0					
ANR	309870	Identifier	arena		309854	1					
ANR	309871	ForStatement	for ( i = 0 ; i < R_REG_TYPE_LAST ; i ++ )		309854	2					
ANR	309872	ForInit	i = 0 ;	56:6:1202:1207	309854	0	True				
ANR	309873	AssignmentExpression	i = 0		309854	0		=			
ANR	309874	Identifier	i		309854	0					
ANR	309875	PrimaryExpression	0		309854	1					
ANR	309876	Condition	i < R_REG_TYPE_LAST	56:13:1209:1227	309854	1	True				
ANR	309877	RelationalExpression	i < R_REG_TYPE_LAST		309854	0		<			
ANR	309878	Identifier	i		309854	0					
ANR	309879	Identifier	R_REG_TYPE_LAST		309854	1					
ANR	309880	PostIncDecOperationExpression	i ++	56:34:1230:1232	309854	2	True				
ANR	309881	Identifier	i		309854	0					
ANR	309882	IncDec	++		309854	1					
ANR	309883	CompoundStatement		4:39:76:76	309854	3					
ANR	309884	IfStatement	if ( reg -> regset [ i ] . arena )		309854	0					
ANR	309885	Condition	reg -> regset [ i ] . arena	57:6:1243:1262	309854	0	True				
ANR	309886	MemberAccess	reg -> regset [ i ] . arena		309854	0					
ANR	309887	ArrayIndexing	reg -> regset [ i ]		309854	0					
ANR	309888	PtrMemberAccess	reg -> regset		309854	0					
ANR	309889	Identifier	reg		309854	0					
ANR	309890	Identifier	regset		309854	1					
ANR	309891	Identifier	i		309854	1					
ANR	309892	Identifier	arena		309854	1					
ANR	309893	CompoundStatement		5:28:106:106	309854	1					
ANR	309894	ExpressionStatement	arena = reg -> regset [ i ] . arena	58:3:1270:1298	309854	0	True				
ANR	309895	AssignmentExpression	arena = reg -> regset [ i ] . arena		309854	0		=			
ANR	309896	Identifier	arena		309854	0					
ANR	309897	MemberAccess	reg -> regset [ i ] . arena		309854	1					
ANR	309898	ArrayIndexing	reg -> regset [ i ]		309854	0					
ANR	309899	PtrMemberAccess	reg -> regset		309854	0					
ANR	309900	Identifier	reg		309854	0					
ANR	309901	Identifier	regset		309854	1					
ANR	309902	Identifier	i		309854	1					
ANR	309903	Identifier	arena		309854	1					
ANR	309904	ElseStatement	else		309854	0					
ANR	309905	CompoundStatement		7:9:150:150	309854	0					
ANR	309906	ExpressionStatement	arena = reg -> regset [ i ] . arena = R_NEW0 ( RRegArena )	60:3:1314:1363	309854	0	True				
ANR	309907	AssignmentExpression	arena = reg -> regset [ i ] . arena = R_NEW0 ( RRegArena )		309854	0		=			
ANR	309908	Identifier	arena		309854	0					
ANR	309909	AssignmentExpression	reg -> regset [ i ] . arena = R_NEW0 ( RRegArena )		309854	1		=			
ANR	309910	MemberAccess	reg -> regset [ i ] . arena		309854	0					
ANR	309911	ArrayIndexing	reg -> regset [ i ]		309854	0					
ANR	309912	PtrMemberAccess	reg -> regset		309854	0					
ANR	309913	Identifier	reg		309854	0					
ANR	309914	Identifier	regset		309854	1					
ANR	309915	Identifier	i		309854	1					
ANR	309916	Identifier	arena		309854	1					
ANR	309917	CallExpression	R_NEW0 ( RRegArena )		309854	1					
ANR	309918	Callee	R_NEW0		309854	0					
ANR	309919	Identifier	R_NEW0		309854	0					
ANR	309920	ArgumentList	RRegArena		309854	1					
ANR	309921	Argument	RRegArena		309854	0					
ANR	309922	Identifier	RRegArena		309854	0					
ANR	309923	IfStatement	if ( ! arena )		309854	1					
ANR	309924	Condition	! arena	61:7:1372:1377	309854	0	True				
ANR	309925	UnaryOperationExpression	! arena		309854	0					
ANR	309926	UnaryOperator	!		309854	0					
ANR	309927	Identifier	arena		309854	1					
ANR	309928	CompoundStatement		9:15:221:221	309854	1					
ANR	309929	ReturnStatement	return false ;	62:4:1386:1398	309854	0	True				
ANR	309930	Identifier	false		309854	0					
ANR	309931	ExpressionStatement	arena -> size = len	64:3:1408:1425	309854	2	True				
ANR	309932	AssignmentExpression	arena -> size = len		309854	0		=			
ANR	309933	PtrMemberAccess	arena -> size		309854	0					
ANR	309934	Identifier	arena		309854	0					
ANR	309935	Identifier	size		309854	1					
ANR	309936	Identifier	len		309854	1					
ANR	309937	ExpressionStatement	"arena -> bytes = calloc ( 1 , len )"	65:3:1430:1460	309854	3	True				
ANR	309938	AssignmentExpression	"arena -> bytes = calloc ( 1 , len )"		309854	0		=			
ANR	309939	PtrMemberAccess	arena -> bytes		309854	0					
ANR	309940	Identifier	arena		309854	0					
ANR	309941	Identifier	bytes		309854	1					
ANR	309942	CallExpression	"calloc ( 1 , len )"		309854	1					
ANR	309943	Callee	calloc		309854	0					
ANR	309944	Identifier	calloc		309854	0					
ANR	309945	ArgumentList	1		309854	1					
ANR	309946	Argument	1		309854	0					
ANR	309947	PrimaryExpression	1		309854	0					
ANR	309948	Argument	len		309854	1					
ANR	309949	Identifier	len		309854	0					
ANR	309950	IfStatement	if ( ! arena -> bytes )		309854	4					
ANR	309951	Condition	! arena -> bytes	66:7:1469:1481	309854	0	True				
ANR	309952	UnaryOperationExpression	! arena -> bytes		309854	0					
ANR	309953	UnaryOperator	!		309854	0					
ANR	309954	PtrMemberAccess	arena -> bytes		309854	1					
ANR	309955	Identifier	arena		309854	0					
ANR	309956	Identifier	bytes		309854	1					
ANR	309957	CompoundStatement		14:22:325:325	309854	1					
ANR	309958	ExpressionStatement	r_reg_arena_free ( arena )	67:4:1490:1514	309854	0	True				
ANR	309959	CallExpression	r_reg_arena_free ( arena )		309854	0					
ANR	309960	Callee	r_reg_arena_free		309854	0					
ANR	309961	Identifier	r_reg_arena_free		309854	0					
ANR	309962	ArgumentList	arena		309854	1					
ANR	309963	Argument	arena		309854	0					
ANR	309964	Identifier	arena		309854	0					
ANR	309965	ReturnStatement	return false ;	68:4:1520:1532	309854	1	True				
ANR	309966	Identifier	false		309854	0					
ANR	309967	IfStatement	if ( ! arena -> bytes )		309854	1					
ANR	309968	Condition	! arena -> bytes	71:6:1549:1561	309854	0	True				
ANR	309969	UnaryOperationExpression	! arena -> bytes		309854	0					
ANR	309970	UnaryOperator	!		309854	0					
ANR	309971	PtrMemberAccess	arena -> bytes		309854	1					
ANR	309972	Identifier	arena		309854	0					
ANR	309973	Identifier	bytes		309854	1					
ANR	309974	CompoundStatement		19:21:405:405	309854	1					
ANR	309975	ExpressionStatement	arena -> size = 0	72:3:1569:1584	309854	0	True				
ANR	309976	AssignmentExpression	arena -> size = 0		309854	0		=			
ANR	309977	PtrMemberAccess	arena -> size		309854	0					
ANR	309978	Identifier	arena		309854	0					
ANR	309979	Identifier	size		309854	1					
ANR	309980	PrimaryExpression	0		309854	1					
ANR	309981	ReturnStatement	return false ;	73:3:1589:1601	309854	1	True				
ANR	309982	Identifier	false		309854	0					
ANR	309983	ExpressionStatement	"memset ( arena -> bytes , 0 , arena -> size )"	75:2:1609:1646	309854	2	True				
ANR	309984	CallExpression	"memset ( arena -> bytes , 0 , arena -> size )"		309854	0					
ANR	309985	Callee	memset		309854	0					
ANR	309986	Identifier	memset		309854	0					
ANR	309987	ArgumentList	arena -> bytes		309854	1					
ANR	309988	Argument	arena -> bytes		309854	0					
ANR	309989	PtrMemberAccess	arena -> bytes		309854	0					
ANR	309990	Identifier	arena		309854	0					
ANR	309991	Identifier	bytes		309854	1					
ANR	309992	Argument	0		309854	1					
ANR	309993	PrimaryExpression	0		309854	0					
ANR	309994	Argument	arena -> size		309854	2					
ANR	309995	PtrMemberAccess	arena -> size		309854	0					
ANR	309996	Identifier	arena		309854	0					
ANR	309997	Identifier	size		309854	1					
ANR	309998	ExpressionStatement	"memcpy ( arena -> bytes , buf + off , R_MIN ( len - off , arena -> size ) )"	76:2:1650:1717	309854	3	True				
ANR	309999	CallExpression	"memcpy ( arena -> bytes , buf + off , R_MIN ( len - off , arena -> size ) )"		309854	0					
ANR	310000	Callee	memcpy		309854	0					
ANR	310001	Identifier	memcpy		309854	0					
ANR	310002	ArgumentList	arena -> bytes		309854	1					
ANR	310003	Argument	arena -> bytes		309854	0					
ANR	310004	PtrMemberAccess	arena -> bytes		309854	0					
ANR	310005	Identifier	arena		309854	0					
ANR	310006	Identifier	bytes		309854	1					
ANR	310007	Argument	buf + off		309854	1					
ANR	310008	AdditiveExpression	buf + off		309854	0		+			
ANR	310009	Identifier	buf		309854	0					
ANR	310010	Identifier	off		309854	1					
ANR	310011	Argument	"R_MIN ( len - off , arena -> size )"		309854	2					
ANR	310012	CallExpression	"R_MIN ( len - off , arena -> size )"		309854	0					
ANR	310013	Callee	R_MIN		309854	0					
ANR	310014	Identifier	R_MIN		309854	0					
ANR	310015	ArgumentList	len - off		309854	1					
ANR	310016	Argument	len - off		309854	0					
ANR	310017	AdditiveExpression	len - off		309854	0		-			
ANR	310018	Identifier	len		309854	0					
ANR	310019	Identifier	off		309854	1					
ANR	310020	Argument	arena -> size		309854	1					
ANR	310021	PtrMemberAccess	arena -> size		309854	0					
ANR	310022	Identifier	arena		309854	0					
ANR	310023	Identifier	size		309854	1					
ANR	310024	ExpressionStatement	off += arena -> size	78:2:1721:1739	309854	4	True				
ANR	310025	AssignmentExpression	off += arena -> size		309854	0		+=			
ANR	310026	Identifier	off		309854	0					
ANR	310027	PtrMemberAccess	arena -> size		309854	1					
ANR	310028	Identifier	arena		309854	0					
ANR	310029	Identifier	size		309854	1					
ANR	310030	IfStatement	if ( off > len )		309854	5					
ANR	310031	Condition	off > len	79:6:1747:1755	309854	0	True				
ANR	310032	RelationalExpression	off > len		309854	0		>			
ANR	310033	Identifier	off		309854	0					
ANR	310034	Identifier	len		309854	1					
ANR	310035	CompoundStatement		27:17:599:599	309854	1					
ANR	310036	ReturnStatement	return false ;	80:3:1763:1775	309854	0	True				
ANR	310037	Identifier	false		309854	0					
ANR	310038	ReturnStatement	return true ;	83:1:1785:1796	309854	3	True				
ANR	310039	Identifier	true		309854	0					
ANR	310040	ReturnType	R_API bool		309854	1					
ANR	310041	Identifier	r_reg_read_regs		309854	2					
ANR	310042	ParameterList	"RReg * reg , ut8 * buf , const int len"		309854	3					
ANR	310043	Parameter	RReg * reg	53:27:1122:1130	309854	0	True				
ANR	310044	ParameterType	RReg *		309854	0					
ANR	310045	Identifier	reg		309854	1					
ANR	310046	Parameter	ut8 * buf	53:38:1133:1140	309854	1	True				
ANR	310047	ParameterType	ut8 *		309854	0					
ANR	310048	Identifier	buf		309854	1					
ANR	310049	Parameter	const int len	53:48:1143:1155	309854	2	True				
ANR	310050	ParameterType	const int		309854	0					
ANR	310051	Identifier	len		309854	1					
ANR	310052	CFGEntryNode	ENTRY		309854		True				
ANR	310053	CFGExitNode	EXIT		309854		True				
ANR	310054	Symbol	* reg -> regset		309854						
ANR	310055	Symbol	* * reg		309854						
ANR	310056	Symbol	RRegArena		309854						
ANR	310057	Symbol	false		309854						
ANR	310058	Symbol	i		309854						
ANR	310059	Symbol	R_REG_TYPE_LAST		309854						
ANR	310060	Symbol	R_MIN		309854						
ANR	310061	Symbol	arena		309854						
ANR	310062	Symbol	calloc		309854						
ANR	310063	Symbol	arena -> size		309854						
ANR	310064	Symbol	off		309854						
ANR	310065	Symbol	reg -> regset		309854						
ANR	310066	Symbol	R_NEW0		309854						
ANR	310067	Symbol	buf		309854						
ANR	310068	Symbol	* i		309854						
ANR	310069	Symbol	len		309854						
ANR	310070	Symbol	reg		309854						
ANR	310071	Symbol	true		309854						
ANR	310072	Symbol	arena -> bytes		309854						
ANR	310073	Symbol	* arena		309854						
ANR	310074	Symbol	reg -> regset [ i ] . arena		309854						
ANR	310075	Symbol	* reg		309854						
ANR	310076	Function	r_reg_set_bytes	87:0:1847:2794							
ANR	310077	FunctionDef	"r_reg_set_bytes (RReg * reg , int type , const ut8 * buf , const int len)"		310076	0					
ANR	310078	CompoundStatement		87:79:1926:2794	310076	0					
ANR	310079	IdentifierDeclStatement	"int maxsz , minsz ;"	88:1:1929:1945	310076	0	True				
ANR	310080	IdentifierDecl	maxsz		310076	0					
ANR	310081	IdentifierDeclType	int		310076	0					
ANR	310082	Identifier	maxsz		310076	1					
ANR	310083	IdentifierDecl	minsz		310076	1					
ANR	310084	IdentifierDeclType	int		310076	0					
ANR	310085	Identifier	minsz		310076	1					
ANR	310086	IdentifierDeclStatement	struct r_reg_set_t * regset ;	89:1:1948:1974	310076	1	True				
ANR	310087	IdentifierDecl	* regset		310076	0					
ANR	310088	IdentifierDeclType	struct r_reg_set_t *		310076	0					
ANR	310089	Identifier	regset		310076	1					
ANR	310090	IdentifierDeclStatement	RRegArena * arena ;	90:1:1977:1993	310076	2	True				
ANR	310091	IdentifierDecl	* arena		310076	0					
ANR	310092	IdentifierDeclType	RRegArena *		310076	0					
ANR	310093	Identifier	arena		310076	1					
ANR	310094	IfStatement	if ( len < 1 || ! buf )		310076	3					
ANR	310095	Condition	len < 1 || ! buf	91:5:2000:2014	310076	0	True				
ANR	310096	OrExpression	len < 1 || ! buf		310076	0		||			
ANR	310097	RelationalExpression	len < 1		310076	0		<			
ANR	310098	Identifier	len		310076	0					
ANR	310099	PrimaryExpression	1		310076	1					
ANR	310100	UnaryOperationExpression	! buf		310076	1					
ANR	310101	UnaryOperator	!		310076	0					
ANR	310102	Identifier	buf		310076	1					
ANR	310103	CompoundStatement		5:22:90:90	310076	1					
ANR	310104	ReturnStatement	return false ;	92:2:2021:2033	310076	0	True				
ANR	310105	Identifier	false		310076	0					
ANR	310106	IfStatement	if ( type < 0 || type >= R_REG_TYPE_LAST )		310076	4					
ANR	310107	Condition	type < 0 || type >= R_REG_TYPE_LAST	94:5:2043:2077	310076	0	True				
ANR	310108	OrExpression	type < 0 || type >= R_REG_TYPE_LAST		310076	0		||			
ANR	310109	RelationalExpression	type < 0		310076	0		<			
ANR	310110	Identifier	type		310076	0					
ANR	310111	PrimaryExpression	0		310076	1					
ANR	310112	RelationalExpression	type >= R_REG_TYPE_LAST		310076	1		>=			
ANR	310113	Identifier	type		310076	0					
ANR	310114	Identifier	R_REG_TYPE_LAST		310076	1					
ANR	310115	CompoundStatement		8:42:153:153	310076	1					
ANR	310116	ReturnStatement	return false ;	95:2:2084:2096	310076	0	True				
ANR	310117	Identifier	false		310076	0					
ANR	310118	ExpressionStatement	regset = & reg -> regset [ type ]	97:1:2102:2129	310076	5	True				
ANR	310119	AssignmentExpression	regset = & reg -> regset [ type ]		310076	0		=			
ANR	310120	Identifier	regset		310076	0					
ANR	310121	UnaryOperationExpression	& reg -> regset [ type ]		310076	1					
ANR	310122	UnaryOperator	&		310076	0					
ANR	310123	ArrayIndexing	reg -> regset [ type ]		310076	1					
ANR	310124	PtrMemberAccess	reg -> regset		310076	0					
ANR	310125	Identifier	reg		310076	0					
ANR	310126	Identifier	regset		310076	1					
ANR	310127	Identifier	type		310076	1					
ANR	310128	ExpressionStatement	arena = regset -> arena	98:1:2132:2153	310076	6	True				
ANR	310129	AssignmentExpression	arena = regset -> arena		310076	0		=			
ANR	310130	Identifier	arena		310076	0					
ANR	310131	PtrMemberAccess	regset -> arena		310076	1					
ANR	310132	Identifier	regset		310076	0					
ANR	310133	Identifier	arena		310076	1					
ANR	310134	IfStatement	if ( ! arena )		310076	7					
ANR	310135	Condition	! arena	99:5:2160:2165	310076	0	True				
ANR	310136	UnaryOperationExpression	! arena		310076	0					
ANR	310137	UnaryOperator	!		310076	0					
ANR	310138	Identifier	arena		310076	1					
ANR	310139	CompoundStatement		13:13:241:241	310076	1					
ANR	310140	ReturnStatement	return false ;	100:2:2172:2184	310076	0	True				
ANR	310141	Identifier	false		310076	0					
ANR	310142	ExpressionStatement	"maxsz = R_MAX ( arena -> size , len )"	102:1:2190:2222	310076	8	True				
ANR	310143	AssignmentExpression	"maxsz = R_MAX ( arena -> size , len )"		310076	0		=			
ANR	310144	Identifier	maxsz		310076	0					
ANR	310145	CallExpression	"R_MAX ( arena -> size , len )"		310076	1					
ANR	310146	Callee	R_MAX		310076	0					
ANR	310147	Identifier	R_MAX		310076	0					
ANR	310148	ArgumentList	arena -> size		310076	1					
ANR	310149	Argument	arena -> size		310076	0					
ANR	310150	PtrMemberAccess	arena -> size		310076	0					
ANR	310151	Identifier	arena		310076	0					
ANR	310152	Identifier	size		310076	1					
ANR	310153	Argument	len		310076	1					
ANR	310154	Identifier	len		310076	0					
ANR	310155	ExpressionStatement	"minsz = R_MIN ( arena -> size , len )"	103:1:2225:2257	310076	9	True				
ANR	310156	AssignmentExpression	"minsz = R_MIN ( arena -> size , len )"		310076	0		=			
ANR	310157	Identifier	minsz		310076	0					
ANR	310158	CallExpression	"R_MIN ( arena -> size , len )"		310076	1					
ANR	310159	Callee	R_MIN		310076	0					
ANR	310160	Identifier	R_MIN		310076	0					
ANR	310161	ArgumentList	arena -> size		310076	1					
ANR	310162	Argument	arena -> size		310076	0					
ANR	310163	PtrMemberAccess	arena -> size		310076	0					
ANR	310164	Identifier	arena		310076	0					
ANR	310165	Identifier	size		310076	1					
ANR	310166	Argument	len		310076	1					
ANR	310167	Identifier	len		310076	0					
ANR	310168	IfStatement	if ( ( arena -> size != len ) || ( ! arena -> bytes ) )		310076	10					
ANR	310169	Condition	( arena -> size != len ) || ( ! arena -> bytes )	104:5:2264:2302	310076	0	True				
ANR	310170	OrExpression	( arena -> size != len ) || ( ! arena -> bytes )		310076	0		||			
ANR	310171	EqualityExpression	arena -> size != len		310076	0		!=			
ANR	310172	PtrMemberAccess	arena -> size		310076	0					
ANR	310173	Identifier	arena		310076	0					
ANR	310174	Identifier	size		310076	1					
ANR	310175	Identifier	len		310076	1					
ANR	310176	UnaryOperationExpression	! arena -> bytes		310076	1					
ANR	310177	UnaryOperator	!		310076	0					
ANR	310178	PtrMemberAccess	arena -> bytes		310076	1					
ANR	310179	Identifier	arena		310076	0					
ANR	310180	Identifier	bytes		310076	1					
ANR	310181	CompoundStatement		18:46:378:378	310076	1					
ANR	310182	ExpressionStatement	free ( arena -> bytes )	105:2:2309:2328	310076	0	True				
ANR	310183	CallExpression	free ( arena -> bytes )		310076	0					
ANR	310184	Callee	free		310076	0					
ANR	310185	Identifier	free		310076	0					
ANR	310186	ArgumentList	arena -> bytes		310076	1					
ANR	310187	Argument	arena -> bytes		310076	0					
ANR	310188	PtrMemberAccess	arena -> bytes		310076	0					
ANR	310189	Identifier	arena		310076	0					
ANR	310190	Identifier	bytes		310076	1					
ANR	310191	ExpressionStatement	"arena -> bytes = calloc ( 1 , maxsz )"	106:2:2332:2364	310076	1	True				
ANR	310192	AssignmentExpression	"arena -> bytes = calloc ( 1 , maxsz )"		310076	0		=			
ANR	310193	PtrMemberAccess	arena -> bytes		310076	0					
ANR	310194	Identifier	arena		310076	0					
ANR	310195	Identifier	bytes		310076	1					
ANR	310196	CallExpression	"calloc ( 1 , maxsz )"		310076	1					
ANR	310197	Callee	calloc		310076	0					
ANR	310198	Identifier	calloc		310076	0					
ANR	310199	ArgumentList	1		310076	1					
ANR	310200	Argument	1		310076	0					
ANR	310201	PrimaryExpression	1		310076	0					
ANR	310202	Argument	maxsz		310076	1					
ANR	310203	Identifier	maxsz		310076	0					
ANR	310204	IfStatement	if ( ! arena -> bytes )		310076	2					
ANR	310205	Condition	! arena -> bytes	107:6:2372:2384	310076	0	True				
ANR	310206	UnaryOperationExpression	! arena -> bytes		310076	0					
ANR	310207	UnaryOperator	!		310076	0					
ANR	310208	PtrMemberAccess	arena -> bytes		310076	1					
ANR	310209	Identifier	arena		310076	0					
ANR	310210	Identifier	bytes		310076	1					
ANR	310211	CompoundStatement		21:21:460:460	310076	1					
ANR	310212	ExpressionStatement	arena -> size = 0	108:3:2392:2407	310076	0	True				
ANR	310213	AssignmentExpression	arena -> size = 0		310076	0		=			
ANR	310214	PtrMemberAccess	arena -> size		310076	0					
ANR	310215	Identifier	arena		310076	0					
ANR	310216	Identifier	size		310076	1					
ANR	310217	PrimaryExpression	0		310076	1					
ANR	310218	ReturnStatement	return false ;	109:3:2412:2424	310076	1	True				
ANR	310219	Identifier	false		310076	0					
ANR	310220	ExpressionStatement	arena -> size = maxsz	111:2:2432:2451	310076	3	True				
ANR	310221	AssignmentExpression	arena -> size = maxsz		310076	0		=			
ANR	310222	PtrMemberAccess	arena -> size		310076	0					
ANR	310223	Identifier	arena		310076	0					
ANR	310224	Identifier	size		310076	1					
ANR	310225	Identifier	maxsz		310076	1					
ANR	310226	IfStatement	if ( arena -> size != maxsz )		310076	11					
ANR	310227	Condition	arena -> size != maxsz	113:5:2461:2480	310076	0	True				
ANR	310228	EqualityExpression	arena -> size != maxsz		310076	0		!=			
ANR	310229	PtrMemberAccess	arena -> size		310076	0					
ANR	310230	Identifier	arena		310076	0					
ANR	310231	Identifier	size		310076	1					
ANR	310232	Identifier	maxsz		310076	1					
ANR	310233	CompoundStatement		28:2:560:600	310076	1					
ANR	310234	IdentifierDeclStatement	"ut8 * tmp = realloc ( arena -> bytes , maxsz ) ;"	114:2:2487:2527	310076	0	True				
ANR	310235	IdentifierDecl	"* tmp = realloc ( arena -> bytes , maxsz )"		310076	0					
ANR	310236	IdentifierDeclType	ut8 *		310076	0					
ANR	310237	Identifier	tmp		310076	1					
ANR	310238	AssignmentExpression	"* tmp = realloc ( arena -> bytes , maxsz )"		310076	2		=			
ANR	310239	Identifier	tmp		310076	0					
ANR	310240	CallExpression	"realloc ( arena -> bytes , maxsz )"		310076	1					
ANR	310241	Callee	realloc		310076	0					
ANR	310242	Identifier	realloc		310076	0					
ANR	310243	ArgumentList	arena -> bytes		310076	1					
ANR	310244	Argument	arena -> bytes		310076	0					
ANR	310245	PtrMemberAccess	arena -> bytes		310076	0					
ANR	310246	Identifier	arena		310076	0					
ANR	310247	Identifier	bytes		310076	1					
ANR	310248	Argument	maxsz		310076	1					
ANR	310249	Identifier	maxsz		310076	0					
ANR	310250	IfStatement	if ( ! tmp )		310076	1					
ANR	310251	Condition	! tmp	115:6:2535:2538	310076	0	True				
ANR	310252	UnaryOperationExpression	! tmp		310076	0					
ANR	310253	UnaryOperator	!		310076	0					
ANR	310254	Identifier	tmp		310076	1					
ANR	310255	CompoundStatement		29:12:614:614	310076	1					
ANR	310256	ExpressionStatement	"eprintf ( ""Error resizing arena to %d\\n"" , len )"	116:3:2546:2591	310076	0	True				
ANR	310257	CallExpression	"eprintf ( ""Error resizing arena to %d\\n"" , len )"		310076	0					
ANR	310258	Callee	eprintf		310076	0					
ANR	310259	Identifier	eprintf		310076	0					
ANR	310260	ArgumentList	"""Error resizing arena to %d\\n"""		310076	1					
ANR	310261	Argument	"""Error resizing arena to %d\\n"""		310076	0					
ANR	310262	PrimaryExpression	"""Error resizing arena to %d\\n"""		310076	0					
ANR	310263	Argument	len		310076	1					
ANR	310264	Identifier	len		310076	0					
ANR	310265	ReturnStatement	return false ;	117:3:2596:2608	310076	1	True				
ANR	310266	Identifier	false		310076	0					
ANR	310267	ExpressionStatement	arena -> size = maxsz	119:2:2616:2635	310076	2	True				
ANR	310268	AssignmentExpression	arena -> size = maxsz		310076	0		=			
ANR	310269	PtrMemberAccess	arena -> size		310076	0					
ANR	310270	Identifier	arena		310076	0					
ANR	310271	Identifier	size		310076	1					
ANR	310272	Identifier	maxsz		310076	1					
ANR	310273	ExpressionStatement	arena -> bytes = tmp	120:2:2639:2657	310076	3	True				
ANR	310274	AssignmentExpression	arena -> bytes = tmp		310076	0		=			
ANR	310275	PtrMemberAccess	arena -> bytes		310076	0					
ANR	310276	Identifier	arena		310076	0					
ANR	310277	Identifier	bytes		310076	1					
ANR	310278	Identifier	tmp		310076	1					
ANR	310279	IfStatement	if ( arena -> bytes )		310076	12					
ANR	310280	Condition	arena -> bytes	122:5:2667:2678	310076	0	True				
ANR	310281	PtrMemberAccess	arena -> bytes		310076	0					
ANR	310282	Identifier	arena		310076	0					
ANR	310283	Identifier	bytes		310076	1					
ANR	310284	CompoundStatement		36:19:754:754	310076	1					
ANR	310285	ExpressionStatement	"memset ( arena -> bytes , 0 , arena -> size )"	123:2:2685:2722	310076	0	True				
ANR	310286	CallExpression	"memset ( arena -> bytes , 0 , arena -> size )"		310076	0					
ANR	310287	Callee	memset		310076	0					
ANR	310288	Identifier	memset		310076	0					
ANR	310289	ArgumentList	arena -> bytes		310076	1					
ANR	310290	Argument	arena -> bytes		310076	0					
ANR	310291	PtrMemberAccess	arena -> bytes		310076	0					
ANR	310292	Identifier	arena		310076	0					
ANR	310293	Identifier	bytes		310076	1					
ANR	310294	Argument	0		310076	1					
ANR	310295	PrimaryExpression	0		310076	0					
ANR	310296	Argument	arena -> size		310076	2					
ANR	310297	PtrMemberAccess	arena -> size		310076	0					
ANR	310298	Identifier	arena		310076	0					
ANR	310299	Identifier	size		310076	1					
ANR	310300	ExpressionStatement	"memcpy ( arena -> bytes , buf , minsz )"	124:2:2726:2759	310076	1	True				
ANR	310301	CallExpression	"memcpy ( arena -> bytes , buf , minsz )"		310076	0					
ANR	310302	Callee	memcpy		310076	0					
ANR	310303	Identifier	memcpy		310076	0					
ANR	310304	ArgumentList	arena -> bytes		310076	1					
ANR	310305	Argument	arena -> bytes		310076	0					
ANR	310306	PtrMemberAccess	arena -> bytes		310076	0					
ANR	310307	Identifier	arena		310076	0					
ANR	310308	Identifier	bytes		310076	1					
ANR	310309	Argument	buf		310076	1					
ANR	310310	Identifier	buf		310076	0					
ANR	310311	Argument	minsz		310076	2					
ANR	310312	Identifier	minsz		310076	0					
ANR	310313	ReturnStatement	return true ;	125:2:2763:2774	310076	2	True				
ANR	310314	Identifier	true		310076	0					
ANR	310315	ReturnStatement	return false ;	127:1:2780:2792	310076	13	True				
ANR	310316	Identifier	false		310076	0					
ANR	310317	ReturnType	R_API bool		310076	1					
ANR	310318	Identifier	r_reg_set_bytes		310076	2					
ANR	310319	ParameterList	"RReg * reg , int type , const ut8 * buf , const int len"		310076	3					
ANR	310320	Parameter	RReg * reg	87:27:1874:1882	310076	0	True				
ANR	310321	ParameterType	RReg *		310076	0					
ANR	310322	Identifier	reg		310076	1					
ANR	310323	Parameter	int type	87:38:1885:1892	310076	1	True				
ANR	310324	ParameterType	int		310076	0					
ANR	310325	Identifier	type		310076	1					
ANR	310326	Parameter	const ut8 * buf	87:48:1895:1908	310076	2	True				
ANR	310327	ParameterType	const ut8 *		310076	0					
ANR	310328	Identifier	buf		310076	1					
ANR	310329	Parameter	const int len	87:64:1911:1923	310076	3	True				
ANR	310330	ParameterType	const int		310076	0					
ANR	310331	Identifier	len		310076	1					
ANR	310332	CFGEntryNode	ENTRY		310076		True				
ANR	310333	CFGExitNode	EXIT		310076		True				
ANR	310334	Symbol	regset -> arena		310076						
ANR	310335	Symbol	* regset		310076						
ANR	310336	Symbol	maxsz		310076						
ANR	310337	Symbol	regset		310076						
ANR	310338	Symbol	minsz		310076						
ANR	310339	Symbol	false		310076						
ANR	310340	Symbol	R_REG_TYPE_LAST		310076						
ANR	310341	Symbol	R_MIN		310076						
ANR	310342	Symbol	arena		310076						
ANR	310343	Symbol	calloc		310076						
ANR	310344	Symbol	realloc		310076						
ANR	310345	Symbol	type		310076						
ANR	310346	Symbol	arena -> size		310076						
ANR	310347	Symbol	reg -> regset		310076						
ANR	310348	Symbol	buf		310076						
ANR	310349	Symbol	len		310076						
ANR	310350	Symbol	reg		310076						
ANR	310351	Symbol	tmp		310076						
ANR	310352	Symbol	R_MAX		310076						
ANR	310353	Symbol	true		310076						
ANR	310354	Symbol	arena -> bytes		310076						
ANR	310355	Symbol	* arena		310076						
ANR	310356	Symbol	* reg		310076						
ANR	310357	Function	r_reg_fit_arena	130:0:2797:3531							
ANR	310358	FunctionDef	r_reg_fit_arena (RReg * reg)		310357	0					
ANR	310359	CompoundStatement		130:37:2834:3531	310357	0					
ANR	310360	IdentifierDeclStatement	RRegArena * arena ;	131:1:2837:2853	310357	0	True				
ANR	310361	IdentifierDecl	* arena		310357	0					
ANR	310362	IdentifierDeclType	RRegArena *		310357	0					
ANR	310363	Identifier	arena		310357	1					
ANR	310364	IdentifierDeclStatement	RListIter * iter ;	132:1:2856:2871	310357	1	True				
ANR	310365	IdentifierDecl	* iter		310357	0					
ANR	310366	IdentifierDeclType	RListIter *		310357	0					
ANR	310367	Identifier	iter		310357	1					
ANR	310368	IdentifierDeclStatement	RRegItem * r ;	133:1:2874:2885	310357	2	True				
ANR	310369	IdentifierDecl	* r		310357	0					
ANR	310370	IdentifierDeclType	RRegItem *		310357	0					
ANR	310371	Identifier	r		310357	1					
ANR	310372	IdentifierDeclStatement	"int size , i , newsize ;"	134:1:2888:2908	310357	3	True				
ANR	310373	IdentifierDecl	size		310357	0					
ANR	310374	IdentifierDeclType	int		310357	0					
ANR	310375	Identifier	size		310357	1					
ANR	310376	IdentifierDecl	i		310357	1					
ANR	310377	IdentifierDeclType	int		310357	0					
ANR	310378	Identifier	i		310357	1					
ANR	310379	IdentifierDecl	newsize		310357	2					
ANR	310380	IdentifierDeclType	int		310357	0					
ANR	310381	Identifier	newsize		310357	1					
ANR	310382	ForStatement	for ( i = 0 ; i < R_REG_TYPE_LAST ; i ++ )		310357	4					
ANR	310383	ForInit	i = 0 ;	136:6:2917:2922	310357	0	True				
ANR	310384	AssignmentExpression	i = 0		310357	0		=			
ANR	310385	Identifier	i		310357	0					
ANR	310386	PrimaryExpression	0		310357	1					
ANR	310387	Condition	i < R_REG_TYPE_LAST	136:13:2924:2942	310357	1	True				
ANR	310388	RelationalExpression	i < R_REG_TYPE_LAST		310357	0		<			
ANR	310389	Identifier	i		310357	0					
ANR	310390	Identifier	R_REG_TYPE_LAST		310357	1					
ANR	310391	PostIncDecOperationExpression	i ++	136:34:2945:2947	310357	2	True				
ANR	310392	Identifier	i		310357	0					
ANR	310393	IncDec	++		310357	1					
ANR	310394	CompoundStatement		7:39:115:115	310357	3					
ANR	310395	ExpressionStatement	arena = reg -> regset [ i ] . arena	137:2:2954:2982	310357	0	True				
ANR	310396	AssignmentExpression	arena = reg -> regset [ i ] . arena		310357	0		=			
ANR	310397	Identifier	arena		310357	0					
ANR	310398	MemberAccess	reg -> regset [ i ] . arena		310357	1					
ANR	310399	ArrayIndexing	reg -> regset [ i ]		310357	0					
ANR	310400	PtrMemberAccess	reg -> regset		310357	0					
ANR	310401	Identifier	reg		310357	0					
ANR	310402	Identifier	regset		310357	1					
ANR	310403	Identifier	i		310357	1					
ANR	310404	Identifier	arena		310357	1					
ANR	310405	IfStatement	if ( ! arena )		310357	1					
ANR	310406	Condition	! arena	138:6:2990:2995	310357	0	True				
ANR	310407	UnaryOperationExpression	! arena		310357	0					
ANR	310408	UnaryOperator	!		310357	0					
ANR	310409	Identifier	arena		310357	1					
ANR	310410	CompoundStatement		9:14:163:163	310357	1					
ANR	310411	ContinueStatement	continue ;	139:3:3003:3011	310357	0	True				
ANR	310412	ExpressionStatement	newsize = 0	141:2:3019:3030	310357	2	True				
ANR	310413	AssignmentExpression	newsize = 0		310357	0		=			
ANR	310414	Identifier	newsize		310357	0					
ANR	310415	PrimaryExpression	0		310357	1					
ANR	310416	Statement	r_list_foreach	142:2:3034:3047	310357	3	True				
ANR	310417	Statement	(	142:17:3049:3049	310357	4	True				
ANR	310418	Statement	reg	142:18:3050:3052	310357	5	True				
ANR	310419	Statement	->	142:21:3053:3054	310357	6	True				
ANR	310420	Statement	regset	142:23:3055:3060	310357	7	True				
ANR	310421	Statement	[	142:29:3061:3061	310357	8	True				
ANR	310422	Statement	i	142:30:3062:3062	310357	9	True				
ANR	310423	Statement	]	142:31:3063:3063	310357	10	True				
ANR	310424	Statement	.	142:32:3064:3064	310357	11	True				
ANR	310425	Statement	regs	142:33:3065:3068	310357	12	True				
ANR	310426	Statement	","	142:37:3069:3069	310357	13	True				
ANR	310427	Statement	iter	142:39:3071:3074	310357	14	True				
ANR	310428	Statement	","	142:43:3075:3075	310357	15	True				
ANR	310429	Statement	r	142:45:3077:3077	310357	16	True				
ANR	310430	Statement	)	142:46:3078:3078	310357	17	True				
ANR	310431	CompoundStatement		13:48:245:245	310357	18					
ANR	310432	ExpressionStatement	size = BITS2BYTES ( r -> offset + r -> size )	144:3:3133:3172	310357	0	True				
ANR	310433	AssignmentExpression	size = BITS2BYTES ( r -> offset + r -> size )		310357	0		=			
ANR	310434	Identifier	size		310357	0					
ANR	310435	CallExpression	BITS2BYTES ( r -> offset + r -> size )		310357	1					
ANR	310436	Callee	BITS2BYTES		310357	0					
ANR	310437	Identifier	BITS2BYTES		310357	0					
ANR	310438	ArgumentList	r -> offset + r -> size		310357	1					
ANR	310439	Argument	r -> offset + r -> size		310357	0					
ANR	310440	AdditiveExpression	r -> offset + r -> size		310357	0		+			
ANR	310441	PtrMemberAccess	r -> offset		310357	0					
ANR	310442	Identifier	r		310357	0					
ANR	310443	Identifier	offset		310357	1					
ANR	310444	PtrMemberAccess	r -> size		310357	1					
ANR	310445	Identifier	r		310357	0					
ANR	310446	Identifier	size		310357	1					
ANR	310447	ExpressionStatement	"newsize = R_MAX ( size , newsize )"	145:3:3177:3208	310357	1	True				
ANR	310448	AssignmentExpression	"newsize = R_MAX ( size , newsize )"		310357	0		=			
ANR	310449	Identifier	newsize		310357	0					
ANR	310450	CallExpression	"R_MAX ( size , newsize )"		310357	1					
ANR	310451	Callee	R_MAX		310357	0					
ANR	310452	Identifier	R_MAX		310357	0					
ANR	310453	ArgumentList	size		310357	1					
ANR	310454	Argument	size		310357	0					
ANR	310455	Identifier	size		310357	0					
ANR	310456	Argument	newsize		310357	1					
ANR	310457	Identifier	newsize		310357	0					
ANR	310458	IfStatement	if ( newsize < 1 )		310357	19					
ANR	310459	Condition	newsize < 1	147:6:3220:3230	310357	0	True				
ANR	310460	RelationalExpression	newsize < 1		310357	0		<			
ANR	310461	Identifier	newsize		310357	0					
ANR	310462	PrimaryExpression	1		310357	1					
ANR	310463	CompoundStatement		18:19:398:398	310357	1					
ANR	310464	ExpressionStatement	R_FREE ( arena -> bytes )	148:3:3238:3259	310357	0	True				
ANR	310465	CallExpression	R_FREE ( arena -> bytes )		310357	0					
ANR	310466	Callee	R_FREE		310357	0					
ANR	310467	Identifier	R_FREE		310357	0					
ANR	310468	ArgumentList	arena -> bytes		310357	1					
ANR	310469	Argument	arena -> bytes		310357	0					
ANR	310470	PtrMemberAccess	arena -> bytes		310357	0					
ANR	310471	Identifier	arena		310357	0					
ANR	310472	Identifier	bytes		310357	1					
ANR	310473	ExpressionStatement	arena -> size = 0	149:3:3264:3279	310357	1	True				
ANR	310474	AssignmentExpression	arena -> size = 0		310357	0		=			
ANR	310475	PtrMemberAccess	arena -> size		310357	0					
ANR	310476	Identifier	arena		310357	0					
ANR	310477	Identifier	size		310357	1					
ANR	310478	PrimaryExpression	0		310357	1					
ANR	310479	ElseStatement	else		310357	0					
ANR	310480	CompoundStatement		22:3:460:502	310357	0					
ANR	310481	IdentifierDeclStatement	"ut8 * buf = realloc ( arena -> bytes , newsize ) ;"	151:3:3295:3337	310357	0	True				
ANR	310482	IdentifierDecl	"* buf = realloc ( arena -> bytes , newsize )"		310357	0					
ANR	310483	IdentifierDeclType	ut8 *		310357	0					
ANR	310484	Identifier	buf		310357	1					
ANR	310485	AssignmentExpression	"* buf = realloc ( arena -> bytes , newsize )"		310357	2		=			
ANR	310486	Identifier	buf		310357	0					
ANR	310487	CallExpression	"realloc ( arena -> bytes , newsize )"		310357	1					
ANR	310488	Callee	realloc		310357	0					
ANR	310489	Identifier	realloc		310357	0					
ANR	310490	ArgumentList	arena -> bytes		310357	1					
ANR	310491	Argument	arena -> bytes		310357	0					
ANR	310492	PtrMemberAccess	arena -> bytes		310357	0					
ANR	310493	Identifier	arena		310357	0					
ANR	310494	Identifier	bytes		310357	1					
ANR	310495	Argument	newsize		310357	1					
ANR	310496	Identifier	newsize		310357	0					
ANR	310497	IfStatement	if ( buf )		310357	1					
ANR	310498	Condition	buf	152:7:3346:3348	310357	0	True				
ANR	310499	Identifier	buf		310357	0					
ANR	310500	CompoundStatement		23:12:516:516	310357	1					
ANR	310501	ExpressionStatement	arena -> size = newsize	153:4:3357:3378	310357	0	True				
ANR	310502	AssignmentExpression	arena -> size = newsize		310357	0		=			
ANR	310503	PtrMemberAccess	arena -> size		310357	0					
ANR	310504	Identifier	arena		310357	0					
ANR	310505	Identifier	size		310357	1					
ANR	310506	Identifier	newsize		310357	1					
ANR	310507	ExpressionStatement	arena -> bytes = buf	154:4:3384:3402	310357	1	True				
ANR	310508	AssignmentExpression	arena -> bytes = buf		310357	0		=			
ANR	310509	PtrMemberAccess	arena -> bytes		310357	0					
ANR	310510	Identifier	arena		310357	0					
ANR	310511	Identifier	bytes		310357	1					
ANR	310512	Identifier	buf		310357	1					
ANR	310513	ExpressionStatement	"memset ( arena -> bytes , 0 , arena -> size )"	155:4:3408:3445	310357	2	True				
ANR	310514	CallExpression	"memset ( arena -> bytes , 0 , arena -> size )"		310357	0					
ANR	310515	Callee	memset		310357	0					
ANR	310516	Identifier	memset		310357	0					
ANR	310517	ArgumentList	arena -> bytes		310357	1					
ANR	310518	Argument	arena -> bytes		310357	0					
ANR	310519	PtrMemberAccess	arena -> bytes		310357	0					
ANR	310520	Identifier	arena		310357	0					
ANR	310521	Identifier	bytes		310357	1					
ANR	310522	Argument	0		310357	1					
ANR	310523	PrimaryExpression	0		310357	0					
ANR	310524	Argument	arena -> size		310357	2					
ANR	310525	PtrMemberAccess	arena -> size		310357	0					
ANR	310526	Identifier	arena		310357	0					
ANR	310527	Identifier	size		310357	1					
ANR	310528	ElseStatement	else		310357	0					
ANR	310529	CompoundStatement		27:10:622:622	310357	0					
ANR	310530	ExpressionStatement	arena -> bytes = NULL	157:4:3463:3482	310357	0	True				
ANR	310531	AssignmentExpression	arena -> bytes = NULL		310357	0		=			
ANR	310532	PtrMemberAccess	arena -> bytes		310357	0					
ANR	310533	Identifier	arena		310357	0					
ANR	310534	Identifier	bytes		310357	1					
ANR	310535	Identifier	NULL		310357	1					
ANR	310536	ExpressionStatement	arena -> size = 0	158:4:3488:3503	310357	1	True				
ANR	310537	AssignmentExpression	arena -> size = 0		310357	0		=			
ANR	310538	PtrMemberAccess	arena -> size		310357	0					
ANR	310539	Identifier	arena		310357	0					
ANR	310540	Identifier	size		310357	1					
ANR	310541	PrimaryExpression	0		310357	1					
ANR	310542	ReturnStatement	return true ;	162:1:3518:3529	310357	5	True				
ANR	310543	Identifier	true		310357	0					
ANR	310544	ReturnType	R_API int		310357	1					
ANR	310545	Identifier	r_reg_fit_arena		310357	2					
ANR	310546	ParameterList	RReg * reg		310357	3					
ANR	310547	Parameter	RReg * reg	130:26:2823:2831	310357	0	True				
ANR	310548	ParameterType	RReg *		310357	0					
ANR	310549	Identifier	reg		310357	1					
ANR	310550	CFGEntryNode	ENTRY		310357		True				
ANR	310551	CFGExitNode	EXIT		310357		True				
ANR	310552	Symbol	BITS2BYTES		310357						
ANR	310553	Symbol	arena		310357						
ANR	310554	Symbol	realloc		310357						
ANR	310555	Symbol	reg -> regset		310357						
ANR	310556	Symbol	reg		310357						
ANR	310557	Symbol	arena -> bytes		310357						
ANR	310558	Symbol	r -> offset		310357						
ANR	310559	Symbol	* reg -> regset		310357						
ANR	310560	Symbol	NULL		310357						
ANR	310561	Symbol	newsize		310357						
ANR	310562	Symbol	* * reg		310357						
ANR	310563	Symbol	iter		310357						
ANR	310564	Symbol	i		310357						
ANR	310565	Symbol	R_REG_TYPE_LAST		310357						
ANR	310566	Symbol	arena -> size		310357						
ANR	310567	Symbol	r		310357						
ANR	310568	Symbol	buf		310357						
ANR	310569	Symbol	* i		310357						
ANR	310570	Symbol	size		310357						
ANR	310571	Symbol	R_MAX		310357						
ANR	310572	Symbol	true		310357						
ANR	310573	Symbol	* r		310357						
ANR	310574	Symbol	* arena		310357						
ANR	310575	Symbol	reg -> regset [ i ] . arena		310357						
ANR	310576	Symbol	* reg		310357						
ANR	310577	Symbol	r -> size		310357						
ANR	310578	Function	r_reg_arena_new	165:0:3534:3791							
ANR	310579	FunctionDef	r_reg_arena_new (int size)		310578	0					
ANR	310580	CompoundStatement		165:43:3577:3791	310578	0					
ANR	310581	IdentifierDeclStatement	RRegArena * arena = R_NEW0 ( RRegArena ) ;	166:1:3580:3617	310578	0	True				
ANR	310582	IdentifierDecl	* arena = R_NEW0 ( RRegArena )		310578	0					
ANR	310583	IdentifierDeclType	RRegArena *		310578	0					
ANR	310584	Identifier	arena		310578	1					
ANR	310585	AssignmentExpression	* arena = R_NEW0 ( RRegArena )		310578	2		=			
ANR	310586	Identifier	arena		310578	0					
ANR	310587	CallExpression	R_NEW0 ( RRegArena )		310578	1					
ANR	310588	Callee	R_NEW0		310578	0					
ANR	310589	Identifier	R_NEW0		310578	0					
ANR	310590	ArgumentList	RRegArena		310578	1					
ANR	310591	Argument	RRegArena		310578	0					
ANR	310592	Identifier	RRegArena		310578	0					
ANR	310593	IfStatement	if ( arena )		310578	1					
ANR	310594	Condition	arena	167:5:3624:3628	310578	0	True				
ANR	310595	Identifier	arena		310578	0					
ANR	310596	CompoundStatement		3:12:53:53	310578	1					
ANR	310597	IfStatement	if ( size < 1 )		310578	0					
ANR	310598	Condition	size < 1	168:6:3639:3646	310578	0	True				
ANR	310599	RelationalExpression	size < 1		310578	0		<			
ANR	310600	Identifier	size		310578	0					
ANR	310601	PrimaryExpression	1		310578	1					
ANR	310602	CompoundStatement		4:16:71:71	310578	1					
ANR	310603	ExpressionStatement	size = 1	169:3:3654:3662	310578	0	True				
ANR	310604	AssignmentExpression	size = 1		310578	0		=			
ANR	310605	Identifier	size		310578	0					
ANR	310606	PrimaryExpression	1		310578	1					
ANR	310607	IfStatement	"if ( ! ( arena -> bytes = calloc ( 1 , size + 8 ) ) )"		310578	1					
ANR	310608	Condition	"! ( arena -> bytes = calloc ( 1 , size + 8 ) )"	171:6:3674:3711	310578	0	True				
ANR	310609	UnaryOperationExpression	"! ( arena -> bytes = calloc ( 1 , size + 8 ) )"		310578	0					
ANR	310610	UnaryOperator	!		310578	0					
ANR	310611	AssignmentExpression	"arena -> bytes = calloc ( 1 , size + 8 )"		310578	1		=			
ANR	310612	PtrMemberAccess	arena -> bytes		310578	0					
ANR	310613	Identifier	arena		310578	0					
ANR	310614	Identifier	bytes		310578	1					
ANR	310615	CallExpression	"calloc ( 1 , size + 8 )"		310578	1					
ANR	310616	Callee	calloc		310578	0					
ANR	310617	Identifier	calloc		310578	0					
ANR	310618	ArgumentList	1		310578	1					
ANR	310619	Argument	1		310578	0					
ANR	310620	PrimaryExpression	1		310578	0					
ANR	310621	Argument	size + 8		310578	1					
ANR	310622	AdditiveExpression	size + 8		310578	0		+			
ANR	310623	Identifier	size		310578	0					
ANR	310624	PrimaryExpression	8		310578	1					
ANR	310625	CompoundStatement		7:46:136:136	310578	1					
ANR	310626	ExpressionStatement	R_FREE ( arena )	172:3:3719:3733	310578	0	True				
ANR	310627	CallExpression	R_FREE ( arena )		310578	0					
ANR	310628	Callee	R_FREE		310578	0					
ANR	310629	Identifier	R_FREE		310578	0					
ANR	310630	ArgumentList	arena		310578	1					
ANR	310631	Argument	arena		310578	0					
ANR	310632	Identifier	arena		310578	0					
ANR	310633	ElseStatement	else		310578	0					
ANR	310634	CompoundStatement		9:9:166:166	310578	0					
ANR	310635	ExpressionStatement	arena -> size = size	174:3:3749:3767	310578	0	True				
ANR	310636	AssignmentExpression	arena -> size = size		310578	0		=			
ANR	310637	PtrMemberAccess	arena -> size		310578	0					
ANR	310638	Identifier	arena		310578	0					
ANR	310639	Identifier	size		310578	1					
ANR	310640	Identifier	size		310578	1					
ANR	310641	ReturnStatement	return arena ;	177:1:3777:3789	310578	2	True				
ANR	310642	Identifier	arena		310578	0					
ANR	310643	ReturnType	R_API RRegArena *		310578	1					
ANR	310644	Identifier	r_reg_arena_new		310578	2					
ANR	310645	ParameterList	int size		310578	3					
ANR	310646	Parameter	int size	165:33:3567:3574	310578	0	True				
ANR	310647	ParameterType	int		310578	0					
ANR	310648	Identifier	size		310578	1					
ANR	310649	CFGEntryNode	ENTRY		310578		True				
ANR	310650	CFGExitNode	EXIT		310578		True				
ANR	310651	Symbol	R_NEW0		310578						
ANR	310652	Symbol	size		310578						
ANR	310653	Symbol	RRegArena		310578						
ANR	310654	Symbol	arena -> bytes		310578						
ANR	310655	Symbol	arena		310578						
ANR	310656	Symbol	calloc		310578						
ANR	310657	Symbol	* arena		310578						
ANR	310658	Symbol	arena -> size		310578						
ANR	310659	Function	r_reg_arena_free	180:0:3794:3886							
ANR	310660	FunctionDef	r_reg_arena_free (RRegArena * ra)		310659	0					
ANR	310661	CompoundStatement		180:43:3837:3886	310659	0					
ANR	310662	IfStatement	if ( ra )		310659	0					
ANR	310663	Condition	ra	181:5:3844:3845	310659	0	True				
ANR	310664	Identifier	ra		310659	0					
ANR	310665	CompoundStatement		2:9:10:10	310659	1					
ANR	310666	ExpressionStatement	free ( ra -> bytes )	182:2:3852:3868	310659	0	True				
ANR	310667	CallExpression	free ( ra -> bytes )		310659	0					
ANR	310668	Callee	free		310659	0					
ANR	310669	Identifier	free		310659	0					
ANR	310670	ArgumentList	ra -> bytes		310659	1					
ANR	310671	Argument	ra -> bytes		310659	0					
ANR	310672	PtrMemberAccess	ra -> bytes		310659	0					
ANR	310673	Identifier	ra		310659	0					
ANR	310674	Identifier	bytes		310659	1					
ANR	310675	ExpressionStatement	free ( ra )	183:2:3872:3881	310659	1	True				
ANR	310676	CallExpression	free ( ra )		310659	0					
ANR	310677	Callee	free		310659	0					
ANR	310678	Identifier	free		310659	0					
ANR	310679	ArgumentList	ra		310659	1					
ANR	310680	Argument	ra		310659	0					
ANR	310681	Identifier	ra		310659	0					
ANR	310682	ReturnType	R_API void		310659	1					
ANR	310683	Identifier	r_reg_arena_free		310659	2					
ANR	310684	ParameterList	RRegArena * ra		310659	3					
ANR	310685	Parameter	RRegArena * ra	180:28:3822:3834	310659	0	True				
ANR	310686	ParameterType	RRegArena *		310659	0					
ANR	310687	Identifier	ra		310659	1					
ANR	310688	CFGEntryNode	ENTRY		310659		True				
ANR	310689	CFGExitNode	EXIT		310659		True				
ANR	310690	Symbol	ra -> bytes		310659						
ANR	310691	Symbol	* ra		310659						
ANR	310692	Symbol	ra		310659						
ANR	310693	Function	r_reg_arena_swap	187:0:3889:4357							
ANR	310694	FunctionDef	"r_reg_arena_swap (RReg * reg , int copy)"		310693	0					
ANR	310695	CompoundStatement		187:49:3938:4357	310693	0					
ANR	310696	IdentifierDeclStatement	int i ;	189:1:3996:4001	310693	0	True				
ANR	310697	IdentifierDecl	i		310693	0					
ANR	310698	IdentifierDeclType	int		310693	0					
ANR	310699	Identifier	i		310693	1					
ANR	310700	ForStatement	for ( i = 0 ; i < R_REG_TYPE_LAST ; i ++ )		310693	1					
ANR	310701	ForInit	i = 0 ;	190:6:4009:4014	310693	0	True				
ANR	310702	AssignmentExpression	i = 0		310693	0		=			
ANR	310703	Identifier	i		310693	0					
ANR	310704	PrimaryExpression	0		310693	1					
ANR	310705	Condition	i < R_REG_TYPE_LAST	190:13:4016:4034	310693	1	True				
ANR	310706	RelationalExpression	i < R_REG_TYPE_LAST		310693	0		<			
ANR	310707	Identifier	i		310693	0					
ANR	310708	Identifier	R_REG_TYPE_LAST		310693	1					
ANR	310709	PostIncDecOperationExpression	i ++	190:34:4037:4039	310693	2	True				
ANR	310710	Identifier	i		310693	0					
ANR	310711	IncDec	++		310693	1					
ANR	310712	CompoundStatement		4:39:103:103	310693	3					
ANR	310713	IfStatement	if ( ! reg -> regset [ i ] . pool )		310693	0					
ANR	310714	Condition	! reg -> regset [ i ] . pool	191:6:4050:4069	310693	0	True				
ANR	310715	UnaryOperationExpression	! reg -> regset [ i ] . pool		310693	0					
ANR	310716	UnaryOperator	!		310693	0					
ANR	310717	MemberAccess	reg -> regset [ i ] . pool		310693	1					
ANR	310718	ArrayIndexing	reg -> regset [ i ]		310693	0					
ANR	310719	PtrMemberAccess	reg -> regset		310693	0					
ANR	310720	Identifier	reg		310693	0					
ANR	310721	Identifier	regset		310693	1					
ANR	310722	Identifier	i		310693	1					
ANR	310723	Identifier	pool		310693	1					
ANR	310724	CompoundStatement		5:28:133:133	310693	1					
ANR	310725	ContinueStatement	continue ;	192:3:4077:4085	310693	0	True				
ANR	310726	IfStatement	if ( r_list_length ( reg -> regset [ i ] . pool ) > 1 )		310693	1					
ANR	310727	Condition	r_list_length ( reg -> regset [ i ] . pool ) > 1	194:6:4097:4135	310693	0	True				
ANR	310728	RelationalExpression	r_list_length ( reg -> regset [ i ] . pool ) > 1		310693	0		>			
ANR	310729	CallExpression	r_list_length ( reg -> regset [ i ] . pool )		310693	0					
ANR	310730	Callee	r_list_length		310693	0					
ANR	310731	Identifier	r_list_length		310693	0					
ANR	310732	ArgumentList	reg -> regset [ i ] . pool		310693	1					
ANR	310733	Argument	reg -> regset [ i ] . pool		310693	0					
ANR	310734	MemberAccess	reg -> regset [ i ] . pool		310693	0					
ANR	310735	ArrayIndexing	reg -> regset [ i ]		310693	0					
ANR	310736	PtrMemberAccess	reg -> regset		310693	0					
ANR	310737	Identifier	reg		310693	0					
ANR	310738	Identifier	regset		310693	1					
ANR	310739	Identifier	i		310693	1					
ANR	310740	Identifier	pool		310693	1					
ANR	310741	PrimaryExpression	1		310693	1					
ANR	310742	CompoundStatement		11:3:289:309	310693	1					
ANR	310743	IdentifierDeclStatement	RListIter * ia = reg -> regset [ i ] . cur ;	195:3:4143:4177	310693	0	True				
ANR	310744	IdentifierDecl	* ia = reg -> regset [ i ] . cur		310693	0					
ANR	310745	IdentifierDeclType	RListIter *		310693	0					
ANR	310746	Identifier	ia		310693	1					
ANR	310747	AssignmentExpression	* ia = reg -> regset [ i ] . cur		310693	2		=			
ANR	310748	Identifier	ia		310693	0					
ANR	310749	MemberAccess	reg -> regset [ i ] . cur		310693	1					
ANR	310750	ArrayIndexing	reg -> regset [ i ]		310693	0					
ANR	310751	PtrMemberAccess	reg -> regset		310693	0					
ANR	310752	Identifier	reg		310693	0					
ANR	310753	Identifier	regset		310693	1					
ANR	310754	Identifier	i		310693	1					
ANR	310755	Identifier	cur		310693	1					
ANR	310756	IdentifierDeclStatement	RListIter * ib = reg -> regset [ i ] . pool -> head ;	196:3:4182:4223	310693	1	True				
ANR	310757	IdentifierDecl	* ib = reg -> regset [ i ] . pool -> head		310693	0					
ANR	310758	IdentifierDeclType	RListIter *		310693	0					
ANR	310759	Identifier	ib		310693	1					
ANR	310760	AssignmentExpression	* ib = reg -> regset [ i ] . pool -> head		310693	2		=			
ANR	310761	Identifier	ib		310693	0					
ANR	310762	PtrMemberAccess	reg -> regset [ i ] . pool -> head		310693	1					
ANR	310763	MemberAccess	reg -> regset [ i ] . pool		310693	0					
ANR	310764	ArrayIndexing	reg -> regset [ i ]		310693	0					
ANR	310765	PtrMemberAccess	reg -> regset		310693	0					
ANR	310766	Identifier	reg		310693	0					
ANR	310767	Identifier	regset		310693	1					
ANR	310768	Identifier	i		310693	1					
ANR	310769	Identifier	pool		310693	1					
ANR	310770	Identifier	head		310693	1					
ANR	310771	IdentifierDeclStatement	void * tmp = ia -> data ;	197:3:4228:4248	310693	2	True				
ANR	310772	IdentifierDecl	* tmp = ia -> data		310693	0					
ANR	310773	IdentifierDeclType	void *		310693	0					
ANR	310774	Identifier	tmp		310693	1					
ANR	310775	AssignmentExpression	* tmp = ia -> data		310693	2		=			
ANR	310776	Identifier	tmp		310693	0					
ANR	310777	PtrMemberAccess	ia -> data		310693	1					
ANR	310778	Identifier	ia		310693	0					
ANR	310779	Identifier	data		310693	1					
ANR	310780	ExpressionStatement	ia -> data = ib -> data	198:3:4253:4272	310693	3	True				
ANR	310781	AssignmentExpression	ia -> data = ib -> data		310693	0		=			
ANR	310782	PtrMemberAccess	ia -> data		310693	0					
ANR	310783	Identifier	ia		310693	0					
ANR	310784	Identifier	data		310693	1					
ANR	310785	PtrMemberAccess	ib -> data		310693	1					
ANR	310786	Identifier	ib		310693	0					
ANR	310787	Identifier	data		310693	1					
ANR	310788	ExpressionStatement	ib -> data = tmp	199:3:4277:4291	310693	4	True				
ANR	310789	AssignmentExpression	ib -> data = tmp		310693	0		=			
ANR	310790	PtrMemberAccess	ib -> data		310693	0					
ANR	310791	Identifier	ib		310693	0					
ANR	310792	Identifier	data		310693	1					
ANR	310793	Identifier	tmp		310693	1					
ANR	310794	ExpressionStatement	reg -> regset [ i ] . arena = ia -> data	200:3:4296:4327	310693	5	True				
ANR	310795	AssignmentExpression	reg -> regset [ i ] . arena = ia -> data		310693	0		=			
ANR	310796	MemberAccess	reg -> regset [ i ] . arena		310693	0					
ANR	310797	ArrayIndexing	reg -> regset [ i ]		310693	0					
ANR	310798	PtrMemberAccess	reg -> regset		310693	0					
ANR	310799	Identifier	reg		310693	0					
ANR	310800	Identifier	regset		310693	1					
ANR	310801	Identifier	i		310693	1					
ANR	310802	Identifier	arena		310693	1					
ANR	310803	PtrMemberAccess	ia -> data		310693	1					
ANR	310804	Identifier	ia		310693	0					
ANR	310805	Identifier	data		310693	1					
ANR	310806	ElseStatement	else		310693	0					
ANR	310807	CompoundStatement		15:9:399:399	310693	0					
ANR	310808	BreakStatement	break ;	202:3:4343:4348	310693	0	True				
ANR	310809	ReturnType	R_API void		310693	1					
ANR	310810	Identifier	r_reg_arena_swap		310693	2					
ANR	310811	ParameterList	"RReg * reg , int copy"		310693	3					
ANR	310812	Parameter	RReg * reg	187:28:3917:3925	310693	0	True				
ANR	310813	ParameterType	RReg *		310693	0					
ANR	310814	Identifier	reg		310693	1					
ANR	310815	Parameter	int copy	187:39:3928:3935	310693	1	True				
ANR	310816	ParameterType	int		310693	0					
ANR	310817	Identifier	copy		310693	1					
ANR	310818	CFGEntryNode	ENTRY		310693		True				
ANR	310819	CFGExitNode	EXIT		310693		True				
ANR	310820	Symbol	* reg -> regset [ i ] . pool		310693						
ANR	310821	Symbol	reg -> regset [ i ] . cur		310693						
ANR	310822	Symbol	reg -> regset		310693						
ANR	310823	Symbol	* * * reg		310693						
ANR	310824	Symbol	reg		310693						
ANR	310825	Symbol	tmp		310693						
ANR	310826	Symbol	ia		310693						
ANR	310827	Symbol	ia -> data		310693						
ANR	310828	Symbol	ib		310693						
ANR	310829	Symbol	copy		310693						
ANR	310830	Symbol	* ib		310693						
ANR	310831	Symbol	ib -> data		310693						
ANR	310832	Symbol	* ia		310693						
ANR	310833	Symbol	* reg -> regset		310693						
ANR	310834	Symbol	* * i		310693						
ANR	310835	Symbol	* * reg		310693						
ANR	310836	Symbol	i		310693						
ANR	310837	Symbol	R_REG_TYPE_LAST		310693						
ANR	310838	Symbol	* * reg -> regset		310693						
ANR	310839	Symbol	* i		310693						
ANR	310840	Symbol	reg -> regset [ i ] . pool -> head		310693						
ANR	310841	Symbol	* reg		310693						
ANR	310842	Symbol	r_list_length		310693						
ANR	310843	Symbol	reg -> regset [ i ] . arena		310693						
ANR	310844	Symbol	reg -> regset [ i ] . pool		310693						
ANR	310845	Function	r_reg_arena_pop	207:0:4360:4778							
ANR	310846	FunctionDef	r_reg_arena_pop (RReg * reg)		310845	0					
ANR	310847	CompoundStatement		207:38:4398:4778	310845	0					
ANR	310848	IdentifierDeclStatement	RRegArena * a ;	208:1:4401:4413	310845	0	True				
ANR	310849	IdentifierDecl	* a		310845	0					
ANR	310850	IdentifierDeclType	RRegArena *		310845	0					
ANR	310851	Identifier	a		310845	1					
ANR	310852	IdentifierDeclStatement	int i ;	209:1:4416:4421	310845	1	True				
ANR	310853	IdentifierDecl	i		310845	0					
ANR	310854	IdentifierDeclType	int		310845	0					
ANR	310855	Identifier	i		310845	1					
ANR	310856	ForStatement	for ( i = 0 ; i < R_REG_TYPE_LAST ; i ++ )		310845	2					
ANR	310857	ForInit	i = 0 ;	210:6:4429:4434	310845	0	True				
ANR	310858	AssignmentExpression	i = 0		310845	0		=			
ANR	310859	Identifier	i		310845	0					
ANR	310860	PrimaryExpression	0		310845	1					
ANR	310861	Condition	i < R_REG_TYPE_LAST	210:13:4436:4454	310845	1	True				
ANR	310862	RelationalExpression	i < R_REG_TYPE_LAST		310845	0		<			
ANR	310863	Identifier	i		310845	0					
ANR	310864	Identifier	R_REG_TYPE_LAST		310845	1					
ANR	310865	PostIncDecOperationExpression	i ++	210:34:4457:4459	310845	2	True				
ANR	310866	Identifier	i		310845	0					
ANR	310867	IncDec	++		310845	1					
ANR	310868	CompoundStatement		4:39:63:63	310845	3					
ANR	310869	IfStatement	if ( ! reg -> regset [ i ] . pool )		310845	0					
ANR	310870	Condition	! reg -> regset [ i ] . pool	211:6:4470:4489	310845	0	True				
ANR	310871	UnaryOperationExpression	! reg -> regset [ i ] . pool		310845	0					
ANR	310872	UnaryOperator	!		310845	0					
ANR	310873	MemberAccess	reg -> regset [ i ] . pool		310845	1					
ANR	310874	ArrayIndexing	reg -> regset [ i ]		310845	0					
ANR	310875	PtrMemberAccess	reg -> regset		310845	0					
ANR	310876	Identifier	reg		310845	0					
ANR	310877	Identifier	regset		310845	1					
ANR	310878	Identifier	i		310845	1					
ANR	310879	Identifier	pool		310845	1					
ANR	310880	CompoundStatement		5:28:93:93	310845	1					
ANR	310881	ContinueStatement	continue ;	212:3:4497:4505	310845	0	True				
ANR	310882	IfStatement	if ( r_list_length ( reg -> regset [ i ] . pool ) < 2 )		310845	1					
ANR	310883	Condition	r_list_length ( reg -> regset [ i ] . pool ) < 2	214:6:4517:4555	310845	0	True				
ANR	310884	RelationalExpression	r_list_length ( reg -> regset [ i ] . pool ) < 2		310845	0		<			
ANR	310885	CallExpression	r_list_length ( reg -> regset [ i ] . pool )		310845	0					
ANR	310886	Callee	r_list_length		310845	0					
ANR	310887	Identifier	r_list_length		310845	0					
ANR	310888	ArgumentList	reg -> regset [ i ] . pool		310845	1					
ANR	310889	Argument	reg -> regset [ i ] . pool		310845	0					
ANR	310890	MemberAccess	reg -> regset [ i ] . pool		310845	0					
ANR	310891	ArrayIndexing	reg -> regset [ i ]		310845	0					
ANR	310892	PtrMemberAccess	reg -> regset		310845	0					
ANR	310893	Identifier	reg		310845	0					
ANR	310894	Identifier	regset		310845	1					
ANR	310895	Identifier	i		310845	1					
ANR	310896	Identifier	pool		310845	1					
ANR	310897	PrimaryExpression	2		310845	1					
ANR	310898	CompoundStatement		8:47:159:159	310845	1					
ANR	310899	ContinueStatement	continue ;	215:3:4563:4571	310845	0	True				
ANR	310900	ExpressionStatement	a = r_list_pop ( reg -> regset [ i ] . pool )	217:2:4579:4615	310845	2	True				
ANR	310901	AssignmentExpression	a = r_list_pop ( reg -> regset [ i ] . pool )		310845	0		=			
ANR	310902	Identifier	a		310845	0					
ANR	310903	CallExpression	r_list_pop ( reg -> regset [ i ] . pool )		310845	1					
ANR	310904	Callee	r_list_pop		310845	0					
ANR	310905	Identifier	r_list_pop		310845	0					
ANR	310906	ArgumentList	reg -> regset [ i ] . pool		310845	1					
ANR	310907	Argument	reg -> regset [ i ] . pool		310845	0					
ANR	310908	MemberAccess	reg -> regset [ i ] . pool		310845	0					
ANR	310909	ArrayIndexing	reg -> regset [ i ]		310845	0					
ANR	310910	PtrMemberAccess	reg -> regset		310845	0					
ANR	310911	Identifier	reg		310845	0					
ANR	310912	Identifier	regset		310845	1					
ANR	310913	Identifier	i		310845	1					
ANR	310914	Identifier	pool		310845	1					
ANR	310915	ExpressionStatement	r_reg_arena_free ( a )	218:2:4619:4639	310845	3	True				
ANR	310916	CallExpression	r_reg_arena_free ( a )		310845	0					
ANR	310917	Callee	r_reg_arena_free		310845	0					
ANR	310918	Identifier	r_reg_arena_free		310845	0					
ANR	310919	ArgumentList	a		310845	1					
ANR	310920	Argument	a		310845	0					
ANR	310921	Identifier	a		310845	0					
ANR	310922	ExpressionStatement	a = reg -> regset [ i ] . pool -> tail -> data	219:2:4643:4678	310845	4	True				
ANR	310923	AssignmentExpression	a = reg -> regset [ i ] . pool -> tail -> data		310845	0		=			
ANR	310924	Identifier	a		310845	0					
ANR	310925	PtrMemberAccess	reg -> regset [ i ] . pool -> tail -> data		310845	1					
ANR	310926	PtrMemberAccess	reg -> regset [ i ] . pool -> tail		310845	0					
ANR	310927	MemberAccess	reg -> regset [ i ] . pool		310845	0					
ANR	310928	ArrayIndexing	reg -> regset [ i ]		310845	0					
ANR	310929	PtrMemberAccess	reg -> regset		310845	0					
ANR	310930	Identifier	reg		310845	0					
ANR	310931	Identifier	regset		310845	1					
ANR	310932	Identifier	i		310845	1					
ANR	310933	Identifier	pool		310845	1					
ANR	310934	Identifier	tail		310845	1					
ANR	310935	Identifier	data		310845	1					
ANR	310936	IfStatement	if ( a )		310845	5					
ANR	310937	Condition	a	220:6:4686:4686	310845	0	True				
ANR	310938	Identifier	a		310845	0					
ANR	310939	CompoundStatement		14:9:290:290	310845	1					
ANR	310940	ExpressionStatement	reg -> regset [ i ] . arena = a	221:3:4694:4718	310845	0	True				
ANR	310941	AssignmentExpression	reg -> regset [ i ] . arena = a		310845	0		=			
ANR	310942	MemberAccess	reg -> regset [ i ] . arena		310845	0					
ANR	310943	ArrayIndexing	reg -> regset [ i ]		310845	0					
ANR	310944	PtrMemberAccess	reg -> regset		310845	0					
ANR	310945	Identifier	reg		310845	0					
ANR	310946	Identifier	regset		310845	1					
ANR	310947	Identifier	i		310845	1					
ANR	310948	Identifier	arena		310845	1					
ANR	310949	Identifier	a		310845	1					
ANR	310950	ExpressionStatement	reg -> regset [ i ] . cur = reg -> regset [ i ] . pool -> tail	222:3:4723:4769	310845	1	True				
ANR	310951	AssignmentExpression	reg -> regset [ i ] . cur = reg -> regset [ i ] . pool -> tail		310845	0		=			
ANR	310952	MemberAccess	reg -> regset [ i ] . cur		310845	0					
ANR	310953	ArrayIndexing	reg -> regset [ i ]		310845	0					
ANR	310954	PtrMemberAccess	reg -> regset		310845	0					
ANR	310955	Identifier	reg		310845	0					
ANR	310956	Identifier	regset		310845	1					
ANR	310957	Identifier	i		310845	1					
ANR	310958	Identifier	cur		310845	1					
ANR	310959	PtrMemberAccess	reg -> regset [ i ] . pool -> tail		310845	1					
ANR	310960	MemberAccess	reg -> regset [ i ] . pool		310845	0					
ANR	310961	ArrayIndexing	reg -> regset [ i ]		310845	0					
ANR	310962	PtrMemberAccess	reg -> regset		310845	0					
ANR	310963	Identifier	reg		310845	0					
ANR	310964	Identifier	regset		310845	1					
ANR	310965	Identifier	i		310845	1					
ANR	310966	Identifier	pool		310845	1					
ANR	310967	Identifier	tail		310845	1					
ANR	310968	ReturnType	R_API void		310845	1					
ANR	310969	Identifier	r_reg_arena_pop		310845	2					
ANR	310970	ParameterList	RReg * reg		310845	3					
ANR	310971	Parameter	RReg * reg	207:27:4387:4395	310845	0	True				
ANR	310972	ParameterType	RReg *		310845	0					
ANR	310973	Identifier	reg		310845	1					
ANR	310974	CFGEntryNode	ENTRY		310845		True				
ANR	310975	CFGExitNode	EXIT		310845		True				
ANR	310976	Symbol	* reg -> regset [ i ] . pool		310845						
ANR	310977	Symbol	reg -> regset [ i ] . cur		310845						
ANR	310978	Symbol	* reg -> regset [ i ] . pool -> tail		310845						
ANR	310979	Symbol	r_list_pop		310845						
ANR	310980	Symbol	reg -> regset		310845						
ANR	310981	Symbol	* * * reg		310845						
ANR	310982	Symbol	reg		310845						
ANR	310983	Symbol	a		310845						
ANR	310984	Symbol	* reg -> regset		310845						
ANR	310985	Symbol	* * i		310845						
ANR	310986	Symbol	* * reg		310845						
ANR	310987	Symbol	* * * * reg		310845						
ANR	310988	Symbol	i		310845						
ANR	310989	Symbol	R_REG_TYPE_LAST		310845						
ANR	310990	Symbol	reg -> regset [ i ] . pool -> tail -> data		310845						
ANR	310991	Symbol	* * reg -> regset [ i ] . pool		310845						
ANR	310992	Symbol	* * * reg -> regset		310845						
ANR	310993	Symbol	* * reg -> regset		310845						
ANR	310994	Symbol	* i		310845						
ANR	310995	Symbol	reg -> regset [ i ] . pool -> tail		310845						
ANR	310996	Symbol	* * * i		310845						
ANR	310997	Symbol	* reg		310845						
ANR	310998	Symbol	r_list_length		310845						
ANR	310999	Symbol	reg -> regset [ i ] . arena		310845						
ANR	311000	Symbol	reg -> regset [ i ] . pool		310845						
ANR	311001	Function	r_reg_arena_push	227:0:4781:5381							
ANR	311002	FunctionDef	r_reg_arena_push (RReg * reg)		311001	0					
ANR	311003	CompoundStatement		227:38:4819:5381	311001	0					
ANR	311004	IdentifierDeclStatement	int i ;	228:1:4822:4827	311001	0	True				
ANR	311005	IdentifierDecl	i		311001	0					
ANR	311006	IdentifierDeclType	int		311001	0					
ANR	311007	Identifier	i		311001	1					
ANR	311008	ForStatement	for ( i = 0 ; i < R_REG_TYPE_LAST ; i ++ )		311001	1					
ANR	311009	ForInit	i = 0 ;	229:6:4835:4840	311001	0	True				
ANR	311010	AssignmentExpression	i = 0		311001	0		=			
ANR	311011	Identifier	i		311001	0					
ANR	311012	PrimaryExpression	0		311001	1					
ANR	311013	Condition	i < R_REG_TYPE_LAST	229:13:4842:4860	311001	1	True				
ANR	311014	RelationalExpression	i < R_REG_TYPE_LAST		311001	0		<			
ANR	311015	Identifier	i		311001	0					
ANR	311016	Identifier	R_REG_TYPE_LAST		311001	1					
ANR	311017	PostIncDecOperationExpression	i ++	229:34:4863:4865	311001	2	True				
ANR	311018	Identifier	i		311001	0					
ANR	311019	IncDec	++		311001	1					
ANR	311020	CompoundStatement		8:2:137:177	311001	3					
ANR	311021	IdentifierDeclStatement	RRegArena * a = reg -> regset [ i ] . arena ;	230:2:4872:4907	311001	0	True				
ANR	311022	IdentifierDecl	* a = reg -> regset [ i ] . arena		311001	0					
ANR	311023	IdentifierDeclType	RRegArena *		311001	0					
ANR	311024	Identifier	a		311001	1					
ANR	311025	AssignmentExpression	* a = reg -> regset [ i ] . arena		311001	2		=			
ANR	311026	Identifier	a		311001	0					
ANR	311027	MemberAccess	reg -> regset [ i ] . arena		311001	1					
ANR	311028	ArrayIndexing	reg -> regset [ i ]		311001	0					
ANR	311029	PtrMemberAccess	reg -> regset		311001	0					
ANR	311030	Identifier	reg		311001	0					
ANR	311031	Identifier	regset		311001	1					
ANR	311032	Identifier	i		311001	1					
ANR	311033	Identifier	arena		311001	1					
ANR	311034	IfStatement	if ( ! a )		311001	1					
ANR	311035	Condition	! a	231:6:4932:4933	311001	0	True				
ANR	311036	UnaryOperationExpression	! a		311001	0					
ANR	311037	UnaryOperator	!		311001	0					
ANR	311038	Identifier	a		311001	1					
ANR	311039	CompoundStatement		5:10:116:116	311001	1					
ANR	311040	ContinueStatement	continue ;	232:3:4941:4949	311001	0	True				
ANR	311041	IdentifierDeclStatement	RRegArena * b = r_reg_arena_new ( a -> size ) ;	234:2:4957:4997	311001	2	True				
ANR	311042	IdentifierDecl	* b = r_reg_arena_new ( a -> size )		311001	0					
ANR	311043	IdentifierDeclType	RRegArena *		311001	0					
ANR	311044	Identifier	b		311001	1					
ANR	311045	AssignmentExpression	* b = r_reg_arena_new ( a -> size )		311001	2		=			
ANR	311046	Identifier	b		311001	0					
ANR	311047	CallExpression	r_reg_arena_new ( a -> size )		311001	1					
ANR	311048	Callee	r_reg_arena_new		311001	0					
ANR	311049	Identifier	r_reg_arena_new		311001	0					
ANR	311050	ArgumentList	a -> size		311001	1					
ANR	311051	Argument	a -> size		311001	0					
ANR	311052	PtrMemberAccess	a -> size		311001	0					
ANR	311053	Identifier	a		311001	0					
ANR	311054	Identifier	size		311001	1					
ANR	311055	IfStatement	if ( ! b )		311001	3					
ANR	311056	Condition	! b	235:6:5018:5019	311001	0	True				
ANR	311057	UnaryOperationExpression	! b		311001	0					
ANR	311058	UnaryOperator	!		311001	0					
ANR	311059	Identifier	b		311001	1					
ANR	311060	CompoundStatement		9:10:202:202	311001	1					
ANR	311061	ContinueStatement	continue ;	236:3:5027:5035	311001	0	True				
ANR	311062	IfStatement	if ( a -> bytes )		311001	4					
ANR	311063	Condition	a -> bytes	239:6:5115:5122	311001	0	True				
ANR	311064	PtrMemberAccess	a -> bytes		311001	0					
ANR	311065	Identifier	a		311001	0					
ANR	311066	Identifier	bytes		311001	1					
ANR	311067	CompoundStatement		13:16:305:305	311001	1					
ANR	311068	ExpressionStatement	"memcpy ( b -> bytes , a -> bytes , b -> size )"	240:3:5130:5166	311001	0	True				
ANR	311069	CallExpression	"memcpy ( b -> bytes , a -> bytes , b -> size )"		311001	0					
ANR	311070	Callee	memcpy		311001	0					
ANR	311071	Identifier	memcpy		311001	0					
ANR	311072	ArgumentList	b -> bytes		311001	1					
ANR	311073	Argument	b -> bytes		311001	0					
ANR	311074	PtrMemberAccess	b -> bytes		311001	0					
ANR	311075	Identifier	b		311001	0					
ANR	311076	Identifier	bytes		311001	1					
ANR	311077	Argument	a -> bytes		311001	1					
ANR	311078	PtrMemberAccess	a -> bytes		311001	0					
ANR	311079	Identifier	a		311001	0					
ANR	311080	Identifier	bytes		311001	1					
ANR	311081	Argument	b -> size		311001	2					
ANR	311082	PtrMemberAccess	b -> size		311001	0					
ANR	311083	Identifier	b		311001	0					
ANR	311084	Identifier	size		311001	1					
ANR	311085	ExpressionStatement	"r_list_push ( reg -> regset [ i ] . pool , b )"	242:2:5174:5210	311001	5	True				
ANR	311086	CallExpression	"r_list_push ( reg -> regset [ i ] . pool , b )"		311001	0					
ANR	311087	Callee	r_list_push		311001	0					
ANR	311088	Identifier	r_list_push		311001	0					
ANR	311089	ArgumentList	reg -> regset [ i ] . pool		311001	1					
ANR	311090	Argument	reg -> regset [ i ] . pool		311001	0					
ANR	311091	MemberAccess	reg -> regset [ i ] . pool		311001	0					
ANR	311092	ArrayIndexing	reg -> regset [ i ]		311001	0					
ANR	311093	PtrMemberAccess	reg -> regset		311001	0					
ANR	311094	Identifier	reg		311001	0					
ANR	311095	Identifier	regset		311001	1					
ANR	311096	Identifier	i		311001	1					
ANR	311097	Identifier	pool		311001	1					
ANR	311098	Argument	b		311001	1					
ANR	311099	Identifier	b		311001	0					
ANR	311100	ExpressionStatement	reg -> regset [ i ] . arena = b	243:2:5214:5238	311001	6	True				
ANR	311101	AssignmentExpression	reg -> regset [ i ] . arena = b		311001	0		=			
ANR	311102	MemberAccess	reg -> regset [ i ] . arena		311001	0					
ANR	311103	ArrayIndexing	reg -> regset [ i ]		311001	0					
ANR	311104	PtrMemberAccess	reg -> regset		311001	0					
ANR	311105	Identifier	reg		311001	0					
ANR	311106	Identifier	regset		311001	1					
ANR	311107	Identifier	i		311001	1					
ANR	311108	Identifier	arena		311001	1					
ANR	311109	Identifier	b		311001	1					
ANR	311110	ExpressionStatement	reg -> regset [ i ] . cur = reg -> regset [ i ] . pool -> tail	244:2:5242:5288	311001	7	True				
ANR	311111	AssignmentExpression	reg -> regset [ i ] . cur = reg -> regset [ i ] . pool -> tail		311001	0		=			
ANR	311112	MemberAccess	reg -> regset [ i ] . cur		311001	0					
ANR	311113	ArrayIndexing	reg -> regset [ i ]		311001	0					
ANR	311114	PtrMemberAccess	reg -> regset		311001	0					
ANR	311115	Identifier	reg		311001	0					
ANR	311116	Identifier	regset		311001	1					
ANR	311117	Identifier	i		311001	1					
ANR	311118	Identifier	cur		311001	1					
ANR	311119	PtrMemberAccess	reg -> regset [ i ] . pool -> tail		311001	1					
ANR	311120	MemberAccess	reg -> regset [ i ] . pool		311001	0					
ANR	311121	ArrayIndexing	reg -> regset [ i ]		311001	0					
ANR	311122	PtrMemberAccess	reg -> regset		311001	0					
ANR	311123	Identifier	reg		311001	0					
ANR	311124	Identifier	regset		311001	1					
ANR	311125	Identifier	i		311001	1					
ANR	311126	Identifier	pool		311001	1					
ANR	311127	Identifier	tail		311001	1					
ANR	311128	IfStatement	if ( reg -> regset [ 0 ] . pool )		311001	2					
ANR	311129	Condition	reg -> regset [ 0 ] . pool	246:5:5298:5316	311001	0	True				
ANR	311130	MemberAccess	reg -> regset [ 0 ] . pool		311001	0					
ANR	311131	ArrayIndexing	reg -> regset [ 0 ]		311001	0					
ANR	311132	PtrMemberAccess	reg -> regset		311001	0					
ANR	311133	Identifier	reg		311001	0					
ANR	311134	Identifier	regset		311001	1					
ANR	311135	PrimaryExpression	0		311001	1					
ANR	311136	Identifier	pool		311001	1					
ANR	311137	CompoundStatement		20:26:499:499	311001	1					
ANR	311138	ReturnStatement	return r_list_length ( reg -> regset [ 0 ] . pool ) ;	247:2:5323:5365	311001	0	True				
ANR	311139	CallExpression	r_list_length ( reg -> regset [ 0 ] . pool )		311001	0					
ANR	311140	Callee	r_list_length		311001	0					
ANR	311141	Identifier	r_list_length		311001	0					
ANR	311142	ArgumentList	reg -> regset [ 0 ] . pool		311001	1					
ANR	311143	Argument	reg -> regset [ 0 ] . pool		311001	0					
ANR	311144	MemberAccess	reg -> regset [ 0 ] . pool		311001	0					
ANR	311145	ArrayIndexing	reg -> regset [ 0 ]		311001	0					
ANR	311146	PtrMemberAccess	reg -> regset		311001	0					
ANR	311147	Identifier	reg		311001	0					
ANR	311148	Identifier	regset		311001	1					
ANR	311149	PrimaryExpression	0		311001	1					
ANR	311150	Identifier	pool		311001	1					
ANR	311151	ReturnStatement	return 0 ;	249:1:5371:5379	311001	3	True				
ANR	311152	PrimaryExpression	0		311001	0					
ANR	311153	ReturnType	R_API int		311001	1					
ANR	311154	Identifier	r_reg_arena_push		311001	2					
ANR	311155	ParameterList	RReg * reg		311001	3					
ANR	311156	Parameter	RReg * reg	227:27:4808:4816	311001	0	True				
ANR	311157	ParameterType	RReg *		311001	0					
ANR	311158	Identifier	reg		311001	1					
ANR	311159	CFGEntryNode	ENTRY		311001		True				
ANR	311160	CFGExitNode	EXIT		311001		True				
ANR	311161	Symbol	a -> size		311001						
ANR	311162	Symbol	b -> bytes		311001						
ANR	311163	Symbol	* reg -> regset [ i ] . pool		311001						
ANR	311164	Symbol	reg -> regset [ i ] . cur		311001						
ANR	311165	Symbol	b -> size		311001						
ANR	311166	Symbol	r_reg_arena_new		311001						
ANR	311167	Symbol	reg -> regset		311001						
ANR	311168	Symbol	* * * reg		311001						
ANR	311169	Symbol	reg		311001						
ANR	311170	Symbol	a		311001						
ANR	311171	Symbol	* reg -> regset		311001						
ANR	311172	Symbol	b		311001						
ANR	311173	Symbol	* * i		311001						
ANR	311174	Symbol	* * reg		311001						
ANR	311175	Symbol	i		311001						
ANR	311176	Symbol	R_REG_TYPE_LAST		311001						
ANR	311177	Symbol	a -> bytes		311001						
ANR	311178	Symbol	* a		311001						
ANR	311179	Symbol	* b		311001						
ANR	311180	Symbol	* * reg -> regset		311001						
ANR	311181	Symbol	* i		311001						
ANR	311182	Symbol	reg -> regset [ i ] . pool -> tail		311001						
ANR	311183	Symbol	reg -> regset [ 0 ] . pool		311001						
ANR	311184	Symbol	* reg		311001						
ANR	311185	Symbol	reg -> regset [ i ] . arena		311001						
ANR	311186	Symbol	r_list_length		311001						
ANR	311187	Symbol	reg -> regset [ i ] . pool		311001						
ANR	311188	Function	r_reg_arena_zero	252:0:5384:5594							
ANR	311189	FunctionDef	r_reg_arena_zero (RReg * reg)		311188	0					
ANR	311190	CompoundStatement		252:39:5423:5594	311188	0					
ANR	311191	IdentifierDeclStatement	int i ;	253:1:5426:5431	311188	0	True				
ANR	311192	IdentifierDecl	i		311188	0					
ANR	311193	IdentifierDeclType	int		311188	0					
ANR	311194	Identifier	i		311188	1					
ANR	311195	ForStatement	for ( i = 0 ; i < R_REG_TYPE_LAST ; i ++ )		311188	1					
ANR	311196	ForInit	i = 0 ;	254:6:5439:5444	311188	0	True				
ANR	311197	AssignmentExpression	i = 0		311188	0		=			
ANR	311198	Identifier	i		311188	0					
ANR	311199	PrimaryExpression	0		311188	1					
ANR	311200	Condition	i < R_REG_TYPE_LAST	254:13:5446:5464	311188	1	True				
ANR	311201	RelationalExpression	i < R_REG_TYPE_LAST		311188	0		<			
ANR	311202	Identifier	i		311188	0					
ANR	311203	Identifier	R_REG_TYPE_LAST		311188	1					
ANR	311204	PostIncDecOperationExpression	i ++	254:34:5467:5469	311188	2	True				
ANR	311205	Identifier	i		311188	0					
ANR	311206	IncDec	++		311188	1					
ANR	311207	CompoundStatement		4:2:52:87	311188	3					
ANR	311208	IdentifierDeclStatement	RRegArena * a = reg -> regset [ i ] . arena ;	255:2:5476:5511	311188	0	True				
ANR	311209	IdentifierDecl	* a = reg -> regset [ i ] . arena		311188	0					
ANR	311210	IdentifierDeclType	RRegArena *		311188	0					
ANR	311211	Identifier	a		311188	1					
ANR	311212	AssignmentExpression	* a = reg -> regset [ i ] . arena		311188	2		=			
ANR	311213	Identifier	a		311188	0					
ANR	311214	MemberAccess	reg -> regset [ i ] . arena		311188	1					
ANR	311215	ArrayIndexing	reg -> regset [ i ]		311188	0					
ANR	311216	PtrMemberAccess	reg -> regset		311188	0					
ANR	311217	Identifier	reg		311188	0					
ANR	311218	Identifier	regset		311188	1					
ANR	311219	Identifier	i		311188	1					
ANR	311220	Identifier	arena		311188	1					
ANR	311221	IfStatement	if ( a -> size > 0 )		311188	1					
ANR	311222	Condition	a -> size > 0	256:6:5519:5529	311188	0	True				
ANR	311223	RelationalExpression	a -> size > 0		311188	0		>			
ANR	311224	PtrMemberAccess	a -> size		311188	0					
ANR	311225	Identifier	a		311188	0					
ANR	311226	Identifier	size		311188	1					
ANR	311227	PrimaryExpression	0		311188	1					
ANR	311228	CompoundStatement		5:19:108:108	311188	1					
ANR	311229	ExpressionStatement	"memset ( reg -> regset [ i ] . arena -> bytes , 0 , a -> size )"	257:3:5537:5585	311188	0	True				
ANR	311230	CallExpression	"memset ( reg -> regset [ i ] . arena -> bytes , 0 , a -> size )"		311188	0					
ANR	311231	Callee	memset		311188	0					
ANR	311232	Identifier	memset		311188	0					
ANR	311233	ArgumentList	reg -> regset [ i ] . arena -> bytes		311188	1					
ANR	311234	Argument	reg -> regset [ i ] . arena -> bytes		311188	0					
ANR	311235	PtrMemberAccess	reg -> regset [ i ] . arena -> bytes		311188	0					
ANR	311236	MemberAccess	reg -> regset [ i ] . arena		311188	0					
ANR	311237	ArrayIndexing	reg -> regset [ i ]		311188	0					
ANR	311238	PtrMemberAccess	reg -> regset		311188	0					
ANR	311239	Identifier	reg		311188	0					
ANR	311240	Identifier	regset		311188	1					
ANR	311241	Identifier	i		311188	1					
ANR	311242	Identifier	arena		311188	1					
ANR	311243	Identifier	bytes		311188	1					
ANR	311244	Argument	0		311188	1					
ANR	311245	PrimaryExpression	0		311188	0					
ANR	311246	Argument	a -> size		311188	2					
ANR	311247	PtrMemberAccess	a -> size		311188	0					
ANR	311248	Identifier	a		311188	0					
ANR	311249	Identifier	size		311188	1					
ANR	311250	ReturnType	R_API void		311188	1					
ANR	311251	Identifier	r_reg_arena_zero		311188	2					
ANR	311252	ParameterList	RReg * reg		311188	3					
ANR	311253	Parameter	RReg * reg	252:28:5412:5420	311188	0	True				
ANR	311254	ParameterType	RReg *		311188	0					
ANR	311255	Identifier	reg		311188	1					
ANR	311256	CFGEntryNode	ENTRY		311188		True				
ANR	311257	CFGExitNode	EXIT		311188		True				
ANR	311258	Symbol	a -> size		311188						
ANR	311259	Symbol	a		311188						
ANR	311260	Symbol	* reg -> regset		311188						
ANR	311261	Symbol	* * i		311188						
ANR	311262	Symbol	* reg -> regset [ i ] . arena		311188						
ANR	311263	Symbol	* * reg		311188						
ANR	311264	Symbol	reg -> regset [ i ] . arena -> bytes		311188						
ANR	311265	Symbol	i		311188						
ANR	311266	Symbol	R_REG_TYPE_LAST		311188						
ANR	311267	Symbol	* a		311188						
ANR	311268	Symbol	reg -> regset		311188						
ANR	311269	Symbol	* * reg -> regset		311188						
ANR	311270	Symbol	* * * reg		311188						
ANR	311271	Symbol	* i		311188						
ANR	311272	Symbol	reg		311188						
ANR	311273	Symbol	reg -> regset [ i ] . arena		311188						
ANR	311274	Symbol	* reg		311188						
ANR	311275	Function	r_reg_arena_peek	262:0:5597:5930							
ANR	311276	FunctionDef	r_reg_arena_peek (RReg * reg)		311275	0					
ANR	311277	CompoundStatement		262:39:5636:5930	311275	0					
ANR	311278	IdentifierDeclStatement	"RRegSet * regset = r_reg_regset_get ( reg , R_REG_TYPE_GPR ) ;"	263:1:5639:5695	311275	0	True				
ANR	311279	IdentifierDecl	"* regset = r_reg_regset_get ( reg , R_REG_TYPE_GPR )"		311275	0					
ANR	311280	IdentifierDeclType	RRegSet *		311275	0					
ANR	311281	Identifier	regset		311275	1					
ANR	311282	AssignmentExpression	"* regset = r_reg_regset_get ( reg , R_REG_TYPE_GPR )"		311275	2		=			
ANR	311283	Identifier	regset		311275	0					
ANR	311284	CallExpression	"r_reg_regset_get ( reg , R_REG_TYPE_GPR )"		311275	1					
ANR	311285	Callee	r_reg_regset_get		311275	0					
ANR	311286	Identifier	r_reg_regset_get		311275	0					
ANR	311287	ArgumentList	reg		311275	1					
ANR	311288	Argument	reg		311275	0					
ANR	311289	Identifier	reg		311275	0					
ANR	311290	Argument	R_REG_TYPE_GPR		311275	1					
ANR	311291	Identifier	R_REG_TYPE_GPR		311275	0					
ANR	311292	IfStatement	if ( ! reg || ! regset || ! regset -> arena || ( regset -> arena -> size < 1 ) )		311275	1					
ANR	311293	Condition	! reg || ! regset || ! regset -> arena || ( regset -> arena -> size < 1 )	264:5:5702:5763	311275	0	True				
ANR	311294	OrExpression	! reg || ! regset || ! regset -> arena || ( regset -> arena -> size < 1 )		311275	0		||			
ANR	311295	UnaryOperationExpression	! reg		311275	0					
ANR	311296	UnaryOperator	!		311275	0					
ANR	311297	Identifier	reg		311275	1					
ANR	311298	OrExpression	! regset || ! regset -> arena || ( regset -> arena -> size < 1 )		311275	1		||			
ANR	311299	UnaryOperationExpression	! regset		311275	0					
ANR	311300	UnaryOperator	!		311275	0					
ANR	311301	Identifier	regset		311275	1					
ANR	311302	OrExpression	! regset -> arena || ( regset -> arena -> size < 1 )		311275	1		||			
ANR	311303	UnaryOperationExpression	! regset -> arena		311275	0					
ANR	311304	UnaryOperator	!		311275	0					
ANR	311305	PtrMemberAccess	regset -> arena		311275	1					
ANR	311306	Identifier	regset		311275	0					
ANR	311307	Identifier	arena		311275	1					
ANR	311308	RelationalExpression	regset -> arena -> size < 1		311275	1		<			
ANR	311309	PtrMemberAccess	regset -> arena -> size		311275	0					
ANR	311310	PtrMemberAccess	regset -> arena		311275	0					
ANR	311311	Identifier	regset		311275	0					
ANR	311312	Identifier	arena		311275	1					
ANR	311313	Identifier	size		311275	1					
ANR	311314	PrimaryExpression	1		311275	1					
ANR	311315	CompoundStatement		3:69:129:129	311275	1					
ANR	311316	ReturnStatement	return NULL ;	265:2:5770:5781	311275	0	True				
ANR	311317	Identifier	NULL		311275	0					
ANR	311318	IdentifierDeclStatement	ut8 * ret = malloc ( regset -> arena -> size ) ;	267:1:5787:5826	311275	2	True				
ANR	311319	IdentifierDecl	* ret = malloc ( regset -> arena -> size )		311275	0					
ANR	311320	IdentifierDeclType	ut8 *		311275	0					
ANR	311321	Identifier	ret		311275	1					
ANR	311322	AssignmentExpression	* ret = malloc ( regset -> arena -> size )		311275	2		=			
ANR	311323	Identifier	ret		311275	0					
ANR	311324	CallExpression	malloc ( regset -> arena -> size )		311275	1					
ANR	311325	Callee	malloc		311275	0					
ANR	311326	Identifier	malloc		311275	0					
ANR	311327	ArgumentList	regset -> arena -> size		311275	1					
ANR	311328	Argument	regset -> arena -> size		311275	0					
ANR	311329	PtrMemberAccess	regset -> arena -> size		311275	0					
ANR	311330	PtrMemberAccess	regset -> arena		311275	0					
ANR	311331	Identifier	regset		311275	0					
ANR	311332	Identifier	arena		311275	1					
ANR	311333	Identifier	size		311275	1					
ANR	311334	IfStatement	if ( ! ret )		311275	3					
ANR	311335	Condition	! ret	268:5:5833:5836	311275	0	True				
ANR	311336	UnaryOperationExpression	! ret		311275	0					
ANR	311337	UnaryOperator	!		311275	0					
ANR	311338	Identifier	ret		311275	1					
ANR	311339	CompoundStatement		7:11:202:202	311275	1					
ANR	311340	ReturnStatement	return NULL ;	269:2:5843:5854	311275	0	True				
ANR	311341	Identifier	NULL		311275	0					
ANR	311342	ExpressionStatement	"memcpy ( ret , regset -> arena -> bytes , regset -> arena -> size )"	271:1:5860:5915	311275	4	True				
ANR	311343	CallExpression	"memcpy ( ret , regset -> arena -> bytes , regset -> arena -> size )"		311275	0					
ANR	311344	Callee	memcpy		311275	0					
ANR	311345	Identifier	memcpy		311275	0					
ANR	311346	ArgumentList	ret		311275	1					
ANR	311347	Argument	ret		311275	0					
ANR	311348	Identifier	ret		311275	0					
ANR	311349	Argument	regset -> arena -> bytes		311275	1					
ANR	311350	PtrMemberAccess	regset -> arena -> bytes		311275	0					
ANR	311351	PtrMemberAccess	regset -> arena		311275	0					
ANR	311352	Identifier	regset		311275	0					
ANR	311353	Identifier	arena		311275	1					
ANR	311354	Identifier	bytes		311275	1					
ANR	311355	Argument	regset -> arena -> size		311275	2					
ANR	311356	PtrMemberAccess	regset -> arena -> size		311275	0					
ANR	311357	PtrMemberAccess	regset -> arena		311275	0					
ANR	311358	Identifier	regset		311275	0					
ANR	311359	Identifier	arena		311275	1					
ANR	311360	Identifier	size		311275	1					
ANR	311361	ReturnStatement	return ret ;	272:1:5918:5928	311275	5	True				
ANR	311362	Identifier	ret		311275	0					
ANR	311363	ReturnType	R_API ut8 *		311275	1					
ANR	311364	Identifier	r_reg_arena_peek		311275	2					
ANR	311365	ParameterList	RReg * reg		311275	3					
ANR	311366	Parameter	RReg * reg	262:28:5625:5633	311275	0	True				
ANR	311367	ParameterType	RReg *		311275	0					
ANR	311368	Identifier	reg		311275	1					
ANR	311369	CFGEntryNode	ENTRY		311275		True				
ANR	311370	CFGExitNode	EXIT		311275		True				
ANR	311371	Symbol	ret		311275						
ANR	311372	Symbol	* * regset		311275						
ANR	311373	Symbol	malloc		311275						
ANR	311374	Symbol	regset -> arena		311275						
ANR	311375	Symbol	NULL		311275						
ANR	311376	Symbol	* regset		311275						
ANR	311377	Symbol	regset		311275						
ANR	311378	Symbol	r_reg_regset_get		311275						
ANR	311379	Symbol	regset -> arena -> bytes		311275						
ANR	311380	Symbol	reg		311275						
ANR	311381	Symbol	* regset -> arena		311275						
ANR	311382	Symbol	regset -> arena -> size		311275						
ANR	311383	Symbol	R_REG_TYPE_GPR		311275						
ANR	311384	Function	r_reg_arena_poke	275:0:5933:6187							
ANR	311385	FunctionDef	"r_reg_arena_poke (RReg * reg , const ut8 * ret)"		311384	0					
ANR	311386	CompoundStatement		275:55:5988:6187	311384	0					
ANR	311387	IdentifierDeclStatement	"RRegSet * regset = r_reg_regset_get ( reg , R_REG_TYPE_GPR ) ;"	276:1:5991:6047	311384	0	True				
ANR	311388	IdentifierDecl	"* regset = r_reg_regset_get ( reg , R_REG_TYPE_GPR )"		311384	0					
ANR	311389	IdentifierDeclType	RRegSet *		311384	0					
ANR	311390	Identifier	regset		311384	1					
ANR	311391	AssignmentExpression	"* regset = r_reg_regset_get ( reg , R_REG_TYPE_GPR )"		311384	2		=			
ANR	311392	Identifier	regset		311384	0					
ANR	311393	CallExpression	"r_reg_regset_get ( reg , R_REG_TYPE_GPR )"		311384	1					
ANR	311394	Callee	r_reg_regset_get		311384	0					
ANR	311395	Identifier	r_reg_regset_get		311384	0					
ANR	311396	ArgumentList	reg		311384	1					
ANR	311397	Argument	reg		311384	0					
ANR	311398	Identifier	reg		311384	0					
ANR	311399	Argument	R_REG_TYPE_GPR		311384	1					
ANR	311400	Identifier	R_REG_TYPE_GPR		311384	0					
ANR	311401	IfStatement	if ( ! ret || ! regset || ! regset -> arena || ! regset -> arena -> bytes )		311384	1					
ANR	311402	Condition	! ret || ! regset || ! regset -> arena || ! regset -> arena -> bytes	277:5:6054:6111	311384	0	True				
ANR	311403	OrExpression	! ret || ! regset || ! regset -> arena || ! regset -> arena -> bytes		311384	0		||			
ANR	311404	UnaryOperationExpression	! ret		311384	0					
ANR	311405	UnaryOperator	!		311384	0					
ANR	311406	Identifier	ret		311384	1					
ANR	311407	OrExpression	! regset || ! regset -> arena || ! regset -> arena -> bytes		311384	1		||			
ANR	311408	UnaryOperationExpression	! regset		311384	0					
ANR	311409	UnaryOperator	!		311384	0					
ANR	311410	Identifier	regset		311384	1					
ANR	311411	OrExpression	! regset -> arena || ! regset -> arena -> bytes		311384	1		||			
ANR	311412	UnaryOperationExpression	! regset -> arena		311384	0					
ANR	311413	UnaryOperator	!		311384	0					
ANR	311414	PtrMemberAccess	regset -> arena		311384	1					
ANR	311415	Identifier	regset		311384	0					
ANR	311416	Identifier	arena		311384	1					
ANR	311417	UnaryOperationExpression	! regset -> arena -> bytes		311384	1					
ANR	311418	UnaryOperator	!		311384	0					
ANR	311419	PtrMemberAccess	regset -> arena -> bytes		311384	1					
ANR	311420	PtrMemberAccess	regset -> arena		311384	0					
ANR	311421	Identifier	regset		311384	0					
ANR	311422	Identifier	arena		311384	1					
ANR	311423	Identifier	bytes		311384	1					
ANR	311424	CompoundStatement		3:65:125:125	311384	1					
ANR	311425	ReturnStatement	return ;	278:2:6118:6124	311384	0	True				
ANR	311426	ExpressionStatement	"memcpy ( regset -> arena -> bytes , ret , regset -> arena -> size )"	280:1:6130:6185	311384	2	True				
ANR	311427	CallExpression	"memcpy ( regset -> arena -> bytes , ret , regset -> arena -> size )"		311384	0					
ANR	311428	Callee	memcpy		311384	0					
ANR	311429	Identifier	memcpy		311384	0					
ANR	311430	ArgumentList	regset -> arena -> bytes		311384	1					
ANR	311431	Argument	regset -> arena -> bytes		311384	0					
ANR	311432	PtrMemberAccess	regset -> arena -> bytes		311384	0					
ANR	311433	PtrMemberAccess	regset -> arena		311384	0					
ANR	311434	Identifier	regset		311384	0					
ANR	311435	Identifier	arena		311384	1					
ANR	311436	Identifier	bytes		311384	1					
ANR	311437	Argument	ret		311384	1					
ANR	311438	Identifier	ret		311384	0					
ANR	311439	Argument	regset -> arena -> size		311384	2					
ANR	311440	PtrMemberAccess	regset -> arena -> size		311384	0					
ANR	311441	PtrMemberAccess	regset -> arena		311384	0					
ANR	311442	Identifier	regset		311384	0					
ANR	311443	Identifier	arena		311384	1					
ANR	311444	Identifier	size		311384	1					
ANR	311445	ReturnType	R_API void		311384	1					
ANR	311446	Identifier	r_reg_arena_poke		311384	2					
ANR	311447	ParameterList	"RReg * reg , const ut8 * ret"		311384	3					
ANR	311448	Parameter	RReg * reg	275:28:5961:5969	311384	0	True				
ANR	311449	ParameterType	RReg *		311384	0					
ANR	311450	Identifier	reg		311384	1					
ANR	311451	Parameter	const ut8 * ret	275:39:5972:5985	311384	1	True				
ANR	311452	ParameterType	const ut8 *		311384	0					
ANR	311453	Identifier	ret		311384	1					
ANR	311454	CFGEntryNode	ENTRY		311384		True				
ANR	311455	CFGExitNode	EXIT		311384		True				
ANR	311456	Symbol	ret		311384						
ANR	311457	Symbol	* * regset		311384						
ANR	311458	Symbol	regset -> arena		311384						
ANR	311459	Symbol	reg		311384						
ANR	311460	Symbol	* regset		311384						
ANR	311461	Symbol	regset		311384						
ANR	311462	Symbol	* regset -> arena		311384						
ANR	311463	Symbol	regset -> arena -> size		311384						
ANR	311464	Symbol	r_reg_regset_get		311384						
ANR	311465	Symbol	R_REG_TYPE_GPR		311384						
ANR	311466	Symbol	regset -> arena -> bytes		311384						
ANR	311467	Function	r_reg_arena_dup	283:0:6190:6527							
ANR	311468	FunctionDef	"r_reg_arena_dup (RReg * reg , const ut8 * source)"		311467	0					
ANR	311469	CompoundStatement		283:57:6247:6527	311467	0					
ANR	311470	IdentifierDeclStatement	"RRegSet * regset = r_reg_regset_get ( reg , R_REG_TYPE_GPR ) ;"	284:1:6250:6306	311467	0	True				
ANR	311471	IdentifierDecl	"* regset = r_reg_regset_get ( reg , R_REG_TYPE_GPR )"		311467	0					
ANR	311472	IdentifierDeclType	RRegSet *		311467	0					
ANR	311473	Identifier	regset		311467	1					
ANR	311474	AssignmentExpression	"* regset = r_reg_regset_get ( reg , R_REG_TYPE_GPR )"		311467	2		=			
ANR	311475	Identifier	regset		311467	0					
ANR	311476	CallExpression	"r_reg_regset_get ( reg , R_REG_TYPE_GPR )"		311467	1					
ANR	311477	Callee	r_reg_regset_get		311467	0					
ANR	311478	Identifier	r_reg_regset_get		311467	0					
ANR	311479	ArgumentList	reg		311467	1					
ANR	311480	Argument	reg		311467	0					
ANR	311481	Identifier	reg		311467	0					
ANR	311482	Argument	R_REG_TYPE_GPR		311467	1					
ANR	311483	Identifier	R_REG_TYPE_GPR		311467	0					
ANR	311484	IfStatement	if ( ! reg || ! regset || ! regset -> arena || ( regset -> arena -> size < 1 ) )		311467	1					
ANR	311485	Condition	! reg || ! regset || ! regset -> arena || ( regset -> arena -> size < 1 )	285:5:6313:6374	311467	0	True				
ANR	311486	OrExpression	! reg || ! regset || ! regset -> arena || ( regset -> arena -> size < 1 )		311467	0		||			
ANR	311487	UnaryOperationExpression	! reg		311467	0					
ANR	311488	UnaryOperator	!		311467	0					
ANR	311489	Identifier	reg		311467	1					
ANR	311490	OrExpression	! regset || ! regset -> arena || ( regset -> arena -> size < 1 )		311467	1		||			
ANR	311491	UnaryOperationExpression	! regset		311467	0					
ANR	311492	UnaryOperator	!		311467	0					
ANR	311493	Identifier	regset		311467	1					
ANR	311494	OrExpression	! regset -> arena || ( regset -> arena -> size < 1 )		311467	1		||			
ANR	311495	UnaryOperationExpression	! regset -> arena		311467	0					
ANR	311496	UnaryOperator	!		311467	0					
ANR	311497	PtrMemberAccess	regset -> arena		311467	1					
ANR	311498	Identifier	regset		311467	0					
ANR	311499	Identifier	arena		311467	1					
ANR	311500	RelationalExpression	regset -> arena -> size < 1		311467	1		<			
ANR	311501	PtrMemberAccess	regset -> arena -> size		311467	0					
ANR	311502	PtrMemberAccess	regset -> arena		311467	0					
ANR	311503	Identifier	regset		311467	0					
ANR	311504	Identifier	arena		311467	1					
ANR	311505	Identifier	size		311467	1					
ANR	311506	PrimaryExpression	1		311467	1					
ANR	311507	CompoundStatement		3:69:129:129	311467	1					
ANR	311508	ReturnStatement	return NULL ;	286:2:6381:6392	311467	0	True				
ANR	311509	Identifier	NULL		311467	0					
ANR	311510	IdentifierDeclStatement	ut8 * ret = malloc ( regset -> arena -> size ) ;	288:1:6398:6437	311467	2	True				
ANR	311511	IdentifierDecl	* ret = malloc ( regset -> arena -> size )		311467	0					
ANR	311512	IdentifierDeclType	ut8 *		311467	0					
ANR	311513	Identifier	ret		311467	1					
ANR	311514	AssignmentExpression	* ret = malloc ( regset -> arena -> size )		311467	2		=			
ANR	311515	Identifier	ret		311467	0					
ANR	311516	CallExpression	malloc ( regset -> arena -> size )		311467	1					
ANR	311517	Callee	malloc		311467	0					
ANR	311518	Identifier	malloc		311467	0					
ANR	311519	ArgumentList	regset -> arena -> size		311467	1					
ANR	311520	Argument	regset -> arena -> size		311467	0					
ANR	311521	PtrMemberAccess	regset -> arena -> size		311467	0					
ANR	311522	PtrMemberAccess	regset -> arena		311467	0					
ANR	311523	Identifier	regset		311467	0					
ANR	311524	Identifier	arena		311467	1					
ANR	311525	Identifier	size		311467	1					
ANR	311526	IfStatement	if ( ! ret )		311467	3					
ANR	311527	Condition	! ret	289:5:6444:6447	311467	0	True				
ANR	311528	UnaryOperationExpression	! ret		311467	0					
ANR	311529	UnaryOperator	!		311467	0					
ANR	311530	Identifier	ret		311467	1					
ANR	311531	CompoundStatement		7:11:202:202	311467	1					
ANR	311532	ReturnStatement	return NULL ;	290:2:6454:6465	311467	0	True				
ANR	311533	Identifier	NULL		311467	0					
ANR	311534	ExpressionStatement	"memcpy ( ret , source , regset -> arena -> size )"	292:1:6471:6512	311467	4	True				
ANR	311535	CallExpression	"memcpy ( ret , source , regset -> arena -> size )"		311467	0					
ANR	311536	Callee	memcpy		311467	0					
ANR	311537	Identifier	memcpy		311467	0					
ANR	311538	ArgumentList	ret		311467	1					
ANR	311539	Argument	ret		311467	0					
ANR	311540	Identifier	ret		311467	0					
ANR	311541	Argument	source		311467	1					
ANR	311542	Identifier	source		311467	0					
ANR	311543	Argument	regset -> arena -> size		311467	2					
ANR	311544	PtrMemberAccess	regset -> arena -> size		311467	0					
ANR	311545	PtrMemberAccess	regset -> arena		311467	0					
ANR	311546	Identifier	regset		311467	0					
ANR	311547	Identifier	arena		311467	1					
ANR	311548	Identifier	size		311467	1					
ANR	311549	ReturnStatement	return ret ;	293:1:6515:6525	311467	5	True				
ANR	311550	Identifier	ret		311467	0					
ANR	311551	ReturnType	R_API ut8 *		311467	1					
ANR	311552	Identifier	r_reg_arena_dup		311467	2					
ANR	311553	ParameterList	"RReg * reg , const ut8 * source"		311467	3					
ANR	311554	Parameter	RReg * reg	283:27:6217:6225	311467	0	True				
ANR	311555	ParameterType	RReg *		311467	0					
ANR	311556	Identifier	reg		311467	1					
ANR	311557	Parameter	const ut8 * source	283:38:6228:6244	311467	1	True				
ANR	311558	ParameterType	const ut8 *		311467	0					
ANR	311559	Identifier	source		311467	1					
ANR	311560	CFGEntryNode	ENTRY		311467		True				
ANR	311561	CFGExitNode	EXIT		311467		True				
ANR	311562	Symbol	ret		311467						
ANR	311563	Symbol	* * regset		311467						
ANR	311564	Symbol	malloc		311467						
ANR	311565	Symbol	regset -> arena		311467						
ANR	311566	Symbol	NULL		311467						
ANR	311567	Symbol	* regset		311467						
ANR	311568	Symbol	regset		311467						
ANR	311569	Symbol	source		311467						
ANR	311570	Symbol	r_reg_regset_get		311467						
ANR	311571	Symbol	reg		311467						
ANR	311572	Symbol	* regset -> arena		311467						
ANR	311573	Symbol	regset -> arena -> size		311467						
ANR	311574	Symbol	R_REG_TYPE_GPR		311467						
ANR	311575	Function	r_reg_arena_set_bytes	296:0:6530:7326							
ANR	311576	FunctionDef	"r_reg_arena_set_bytes (RReg * reg , const char * str)"		311575	0					
ANR	311577	CompoundStatement		296:60:6590:7326	311575	0					
ANR	311578	WhileStatement	while ( IS_WHITESPACE ( * str ) )		311575	0					
ANR	311579	Condition	IS_WHITESPACE ( * str )	297:8:6600:6619	311575	0	True				
ANR	311580	CallExpression	IS_WHITESPACE ( * str )		311575	0					
ANR	311581	Callee	IS_WHITESPACE		311575	0					
ANR	311582	Identifier	IS_WHITESPACE		311575	0					
ANR	311583	ArgumentList	* str		311575	1					
ANR	311584	Argument	* str		311575	0					
ANR	311585	UnaryOperationExpression	* str		311575	0					
ANR	311586	UnaryOperator	*		311575	0					
ANR	311587	Identifier	str		311575	1					
ANR	311588	CompoundStatement		2:30:31:31	311575	1					
ANR	311589	ExpressionStatement	str ++	298:2:6626:6631	311575	0	True				
ANR	311590	PostIncDecOperationExpression	str ++		311575	0					
ANR	311591	Identifier	str		311575	0					
ANR	311592	IncDec	++		311575	1					
ANR	311593	IdentifierDeclStatement	int len = r_hex_str_is_valid ( str ) ;	300:1:6637:6671	311575	1	True				
ANR	311594	IdentifierDecl	len = r_hex_str_is_valid ( str )		311575	0					
ANR	311595	IdentifierDeclType	int		311575	0					
ANR	311596	Identifier	len		311575	1					
ANR	311597	AssignmentExpression	len = r_hex_str_is_valid ( str )		311575	2		=			
ANR	311598	Identifier	len		311575	0					
ANR	311599	CallExpression	r_hex_str_is_valid ( str )		311575	1					
ANR	311600	Callee	r_hex_str_is_valid		311575	0					
ANR	311601	Identifier	r_hex_str_is_valid		311575	0					
ANR	311602	ArgumentList	str		311575	1					
ANR	311603	Argument	str		311575	0					
ANR	311604	Identifier	str		311575	0					
ANR	311605	IfStatement	if ( len == - 1 )		311575	2					
ANR	311606	Condition	len == - 1	301:5:6678:6686	311575	0	True				
ANR	311607	EqualityExpression	len == - 1		311575	0		==			
ANR	311608	Identifier	len		311575	0					
ANR	311609	UnaryOperationExpression	- 1		311575	1					
ANR	311610	UnaryOperator	-		311575	0					
ANR	311611	PrimaryExpression	1		311575	1					
ANR	311612	CompoundStatement		6:16:98:98	311575	1					
ANR	311613	ExpressionStatement	"eprintf ( ""Invalid input\\n"" )"	302:2:6693:6720	311575	0	True				
ANR	311614	CallExpression	"eprintf ( ""Invalid input\\n"" )"		311575	0					
ANR	311615	Callee	eprintf		311575	0					
ANR	311616	Identifier	eprintf		311575	0					
ANR	311617	ArgumentList	"""Invalid input\\n"""		311575	1					
ANR	311618	Argument	"""Invalid input\\n"""		311575	0					
ANR	311619	PrimaryExpression	"""Invalid input\\n"""		311575	0					
ANR	311620	ReturnStatement	return - 1 ;	303:2:6724:6733	311575	1	True				
ANR	311621	UnaryOperationExpression	- 1		311575	0					
ANR	311622	UnaryOperator	-		311575	0					
ANR	311623	PrimaryExpression	1		311575	1					
ANR	311624	IdentifierDeclStatement	int bin_str_len = ( len + 1 ) / 2 ;	305:1:6739:6770	311575	3	True				
ANR	311625	IdentifierDecl	bin_str_len = ( len + 1 ) / 2		311575	0					
ANR	311626	IdentifierDeclType	int		311575	0					
ANR	311627	Identifier	bin_str_len		311575	1					
ANR	311628	AssignmentExpression	bin_str_len = ( len + 1 ) / 2		311575	2		=			
ANR	311629	Identifier	bin_str_len		311575	0					
ANR	311630	MultiplicativeExpression	( len + 1 ) / 2		311575	1		/			
ANR	311631	AdditiveExpression	len + 1		311575	0		+			
ANR	311632	Identifier	len		311575	0					
ANR	311633	PrimaryExpression	1		311575	1					
ANR	311634	PrimaryExpression	2		311575	1					
ANR	311635	IdentifierDeclStatement	ut8 * bin_str = malloc ( bin_str_len ) ;	306:1:6797:6832	311575	4	True				
ANR	311636	IdentifierDecl	* bin_str = malloc ( bin_str_len )		311575	0					
ANR	311637	IdentifierDeclType	ut8 *		311575	0					
ANR	311638	Identifier	bin_str		311575	1					
ANR	311639	AssignmentExpression	* bin_str = malloc ( bin_str_len )		311575	2		=			
ANR	311640	Identifier	bin_str		311575	0					
ANR	311641	CallExpression	malloc ( bin_str_len )		311575	1					
ANR	311642	Callee	malloc		311575	0					
ANR	311643	Identifier	malloc		311575	0					
ANR	311644	ArgumentList	bin_str_len		311575	1					
ANR	311645	Argument	bin_str_len		311575	0					
ANR	311646	Identifier	bin_str_len		311575	0					
ANR	311647	IfStatement	if ( ! bin_str )		311575	5					
ANR	311648	Condition	! bin_str	307:5:6839:6846	311575	0	True				
ANR	311649	UnaryOperationExpression	! bin_str		311575	0					
ANR	311650	UnaryOperator	!		311575	0					
ANR	311651	Identifier	bin_str		311575	1					
ANR	311652	CompoundStatement		12:15:258:258	311575	1					
ANR	311653	ExpressionStatement	"eprintf ( ""Failed to decode hex str.\\n"" )"	308:2:6853:6892	311575	0	True				
ANR	311654	CallExpression	"eprintf ( ""Failed to decode hex str.\\n"" )"		311575	0					
ANR	311655	Callee	eprintf		311575	0					
ANR	311656	Identifier	eprintf		311575	0					
ANR	311657	ArgumentList	"""Failed to decode hex str.\\n"""		311575	1					
ANR	311658	Argument	"""Failed to decode hex str.\\n"""		311575	0					
ANR	311659	PrimaryExpression	"""Failed to decode hex str.\\n"""		311575	0					
ANR	311660	ReturnStatement	return - 1 ;	309:2:6896:6905	311575	1	True				
ANR	311661	UnaryOperationExpression	- 1		311575	0					
ANR	311662	UnaryOperator	-		311575	0					
ANR	311663	PrimaryExpression	1		311575	1					
ANR	311664	ExpressionStatement	"r_hex_str2bin ( str , bin_str )"	311:1:6911:6939	311575	6	True				
ANR	311665	CallExpression	"r_hex_str2bin ( str , bin_str )"		311575	0					
ANR	311666	Callee	r_hex_str2bin		311575	0					
ANR	311667	Identifier	r_hex_str2bin		311575	0					
ANR	311668	ArgumentList	str		311575	1					
ANR	311669	Argument	str		311575	0					
ANR	311670	Identifier	str		311575	0					
ANR	311671	Argument	bin_str		311575	1					
ANR	311672	Identifier	bin_str		311575	0					
ANR	311673	IdentifierDeclStatement	"int i , n = 0 ;"	313:1:6943:6955	311575	7	True				
ANR	311674	IdentifierDecl	i		311575	0					
ANR	311675	IdentifierDeclType	int		311575	0					
ANR	311676	Identifier	i		311575	1					
ANR	311677	IdentifierDecl	n = 0		311575	1					
ANR	311678	IdentifierDeclType	int		311575	0					
ANR	311679	Identifier	n		311575	1					
ANR	311680	AssignmentExpression	n = 0		311575	2		=			
ANR	311681	Identifier	n		311575	0					
ANR	311682	PrimaryExpression	0		311575	1					
ANR	311683	ForStatement	for ( i = 0 ; i < R_REG_TYPE_LAST ; ++ i )		311575	8					
ANR	311684	ForInit	i = 0 ;	314:6:7001:7006	311575	0	True				
ANR	311685	AssignmentExpression	i = 0		311575	0		=			
ANR	311686	Identifier	i		311575	0					
ANR	311687	PrimaryExpression	0		311575	1					
ANR	311688	Condition	i < R_REG_TYPE_LAST	314:13:7008:7026	311575	1	True				
ANR	311689	RelationalExpression	i < R_REG_TYPE_LAST		311575	0		<			
ANR	311690	Identifier	i		311575	0					
ANR	311691	Identifier	R_REG_TYPE_LAST		311575	1					
ANR	311692	UnaryExpression	++ i	314:34:7029:7031	311575	2	True				
ANR	311693	IncDec	++		311575	0					
ANR	311694	Identifier	i		311575	1					
ANR	311695	CompoundStatement		22:2:527:543	311575	3					
ANR	311696	IdentifierDeclStatement	int sz = reg -> regset [ i ] . arena -> size ;	315:2:7038:7073	311575	0	True				
ANR	311697	IdentifierDecl	sz = reg -> regset [ i ] . arena -> size		311575	0					
ANR	311698	IdentifierDeclType	int		311575	0					
ANR	311699	Identifier	sz		311575	1					
ANR	311700	AssignmentExpression	sz = reg -> regset [ i ] . arena -> size		311575	2		=			
ANR	311701	Identifier	sz		311575	0					
ANR	311702	PtrMemberAccess	reg -> regset [ i ] . arena -> size		311575	1					
ANR	311703	MemberAccess	reg -> regset [ i ] . arena		311575	0					
ANR	311704	ArrayIndexing	reg -> regset [ i ]		311575	0					
ANR	311705	PtrMemberAccess	reg -> regset		311575	0					
ANR	311706	Identifier	reg		311575	0					
ANR	311707	Identifier	regset		311575	1					
ANR	311708	Identifier	i		311575	1					
ANR	311709	Identifier	arena		311575	1					
ANR	311710	Identifier	size		311575	1					
ANR	311711	IdentifierDeclStatement	int bl = bin_str_len - n ;	316:2:7077:7101	311575	1	True				
ANR	311712	IdentifierDecl	bl = bin_str_len - n		311575	0					
ANR	311713	IdentifierDeclType	int		311575	0					
ANR	311714	Identifier	bl		311575	1					
ANR	311715	AssignmentExpression	bl = bin_str_len - n		311575	2		=			
ANR	311716	Identifier	bl		311575	0					
ANR	311717	AdditiveExpression	bin_str_len - n		311575	1		-			
ANR	311718	Identifier	bin_str_len		311575	0					
ANR	311719	Identifier	n		311575	1					
ANR	311720	IdentifierDeclStatement	int bln = bl - n ;	317:2:7118:7134	311575	2	True				
ANR	311721	IdentifierDecl	bln = bl - n		311575	0					
ANR	311722	IdentifierDeclType	int		311575	0					
ANR	311723	Identifier	bln		311575	1					
ANR	311724	AssignmentExpression	bln = bl - n		311575	2		=			
ANR	311725	Identifier	bln		311575	0					
ANR	311726	AdditiveExpression	bl - n		311575	1		-			
ANR	311727	Identifier	bl		311575	0					
ANR	311728	Identifier	n		311575	1					
ANR	311729	IfStatement	if ( bln > 0 && bln < sz )		311575	3					
ANR	311730	Condition	bln > 0 && bln < sz	318:6:7142:7160	311575	0	True				
ANR	311731	AndExpression	bln > 0 && bln < sz		311575	0		&&			
ANR	311732	RelationalExpression	bln > 0		311575	0		>			
ANR	311733	Identifier	bln		311575	0					
ANR	311734	PrimaryExpression	0		311575	1					
ANR	311735	RelationalExpression	bln < sz		311575	1		<			
ANR	311736	Identifier	bln		311575	0					
ANR	311737	Identifier	sz		311575	1					
ANR	311738	CompoundStatement		23:27:572:572	311575	1					
ANR	311739	ExpressionStatement	"r_reg_set_bytes ( reg , i , bin_str + n , bln )"	319:3:7168:7210	311575	0	True				
ANR	311740	CallExpression	"r_reg_set_bytes ( reg , i , bin_str + n , bln )"		311575	0					
ANR	311741	Callee	r_reg_set_bytes		311575	0					
ANR	311742	Identifier	r_reg_set_bytes		311575	0					
ANR	311743	ArgumentList	reg		311575	1					
ANR	311744	Argument	reg		311575	0					
ANR	311745	Identifier	reg		311575	0					
ANR	311746	Argument	i		311575	1					
ANR	311747	Identifier	i		311575	0					
ANR	311748	Argument	bin_str + n		311575	2					
ANR	311749	AdditiveExpression	bin_str + n		311575	0		+			
ANR	311750	Identifier	bin_str		311575	0					
ANR	311751	Identifier	n		311575	1					
ANR	311752	Argument	bln		311575	3					
ANR	311753	Identifier	bln		311575	0					
ANR	311754	BreakStatement	break ;	320:3:7215:7220	311575	1	True				
ANR	311755	ExpressionStatement	"r_reg_set_bytes ( reg , i , bin_str + n , bin_str_len - n )"	322:2:7228:7282	311575	4	True				
ANR	311756	CallExpression	"r_reg_set_bytes ( reg , i , bin_str + n , bin_str_len - n )"		311575	0					
ANR	311757	Callee	r_reg_set_bytes		311575	0					
ANR	311758	Identifier	r_reg_set_bytes		311575	0					
ANR	311759	ArgumentList	reg		311575	1					
ANR	311760	Argument	reg		311575	0					
ANR	311761	Identifier	reg		311575	0					
ANR	311762	Argument	i		311575	1					
ANR	311763	Identifier	i		311575	0					
ANR	311764	Argument	bin_str + n		311575	2					
ANR	311765	AdditiveExpression	bin_str + n		311575	0		+			
ANR	311766	Identifier	bin_str		311575	0					
ANR	311767	Identifier	n		311575	1					
ANR	311768	Argument	bin_str_len - n		311575	3					
ANR	311769	AdditiveExpression	bin_str_len - n		311575	0		-			
ANR	311770	Identifier	bin_str_len		311575	0					
ANR	311771	Identifier	n		311575	1					
ANR	311772	ExpressionStatement	n += sz	323:2:7286:7293	311575	5	True				
ANR	311773	AssignmentExpression	n += sz		311575	0		+=			
ANR	311774	Identifier	n		311575	0					
ANR	311775	Identifier	sz		311575	1					
ANR	311776	ExpressionStatement	free ( bin_str )	325:1:7299:7313	311575	9	True				
ANR	311777	CallExpression	free ( bin_str )		311575	0					
ANR	311778	Callee	free		311575	0					
ANR	311779	Identifier	free		311575	0					
ANR	311780	ArgumentList	bin_str		311575	1					
ANR	311781	Argument	bin_str		311575	0					
ANR	311782	Identifier	bin_str		311575	0					
ANR	311783	ReturnStatement	return 0 ;	326:1:7316:7324	311575	10	True				
ANR	311784	PrimaryExpression	0		311575	0					
ANR	311785	ReturnType	R_API int		311575	1					
ANR	311786	Identifier	r_reg_arena_set_bytes		311575	2					
ANR	311787	ParameterList	"RReg * reg , const char * str"		311575	3					
ANR	311788	Parameter	RReg * reg	296:32:6562:6570	311575	0	True				
ANR	311789	ParameterType	RReg *		311575	0					
ANR	311790	Identifier	reg		311575	1					
ANR	311791	Parameter	const char * str	296:43:6573:6587	311575	1	True				
ANR	311792	ParameterType	const char *		311575	0					
ANR	311793	Identifier	str		311575	1					
ANR	311794	CFGEntryNode	ENTRY		311575		True				
ANR	311795	CFGExitNode	EXIT		311575		True				
ANR	311796	Symbol	r_hex_str_is_valid		311575						
ANR	311797	Symbol	bl		311575						
ANR	311798	Symbol	IS_WHITESPACE		311575						
ANR	311799	Symbol	reg -> regset		311575						
ANR	311800	Symbol	* * * reg		311575						
ANR	311801	Symbol	len		311575						
ANR	311802	Symbol	reg		311575						
ANR	311803	Symbol	* str		311575						
ANR	311804	Symbol	malloc		311575						
ANR	311805	Symbol	* reg -> regset		311575						
ANR	311806	Symbol	* * i		311575						
ANR	311807	Symbol	bln		311575						
ANR	311808	Symbol	* reg -> regset [ i ] . arena		311575						
ANR	311809	Symbol	sz		311575						
ANR	311810	Symbol	* * reg		311575						
ANR	311811	Symbol	i		311575						
ANR	311812	Symbol	R_REG_TYPE_LAST		311575						
ANR	311813	Symbol	n		311575						
ANR	311814	Symbol	str		311575						
ANR	311815	Symbol	* * reg -> regset		311575						
ANR	311816	Symbol	bin_str		311575						
ANR	311817	Symbol	* i		311575						
ANR	311818	Symbol	bin_str_len		311575						
ANR	311819	Symbol	reg -> regset [ i ] . arena -> size		311575						
ANR	311820	Symbol	* reg		311575						
ANR	311821	Symbol	reg -> regset [ i ] . arena		311575						
ANR	311822	Function	r_reg_arena_shrink	329:0:7329:7727							
ANR	311823	FunctionDef	r_reg_arena_shrink (RReg * reg)		311822	0					
ANR	311824	CompoundStatement		329:41:7370:7727	311822	0					
ANR	311825	IdentifierDeclStatement	RListIter * iter ;	330:1:7373:7388	311822	0	True				
ANR	311826	IdentifierDecl	* iter		311822	0					
ANR	311827	IdentifierDeclType	RListIter *		311822	0					
ANR	311828	Identifier	iter		311822	1					
ANR	311829	IdentifierDeclStatement	RRegArena * a ;	331:1:7391:7403	311822	1	True				
ANR	311830	IdentifierDecl	* a		311822	0					
ANR	311831	IdentifierDeclType	RRegArena *		311822	0					
ANR	311832	Identifier	a		311822	1					
ANR	311833	IdentifierDeclStatement	int i ;	332:1:7406:7411	311822	2	True				
ANR	311834	IdentifierDecl	i		311822	0					
ANR	311835	IdentifierDeclType	int		311822	0					
ANR	311836	Identifier	i		311822	1					
ANR	311837	ForStatement	for ( i = 0 ; i < R_REG_TYPE_LAST ; i ++ )		311822	3					
ANR	311838	ForInit	i = 0 ;	333:6:7419:7424	311822	0	True				
ANR	311839	AssignmentExpression	i = 0		311822	0		=			
ANR	311840	Identifier	i		311822	0					
ANR	311841	PrimaryExpression	0		311822	1					
ANR	311842	Condition	i < R_REG_TYPE_LAST	333:13:7426:7444	311822	1	True				
ANR	311843	RelationalExpression	i < R_REG_TYPE_LAST		311822	0		<			
ANR	311844	Identifier	i		311822	0					
ANR	311845	Identifier	R_REG_TYPE_LAST		311822	1					
ANR	311846	PostIncDecOperationExpression	i ++	333:34:7447:7449	311822	2	True				
ANR	311847	Identifier	i		311822	0					
ANR	311848	IncDec	++		311822	1					
ANR	311849	CompoundStatement		5:39:81:81	311822	3					
ANR	311850	Statement	r_list_foreach	334:2:7456:7469	311822	0	True				
ANR	311851	Statement	(	334:17:7471:7471	311822	1	True				
ANR	311852	Statement	reg	334:18:7472:7474	311822	2	True				
ANR	311853	Statement	->	334:21:7475:7476	311822	3	True				
ANR	311854	Statement	regset	334:23:7477:7482	311822	4	True				
ANR	311855	Statement	[	334:29:7483:7483	311822	5	True				
ANR	311856	Statement	i	334:30:7484:7484	311822	6	True				
ANR	311857	Statement	]	334:31:7485:7485	311822	7	True				
ANR	311858	Statement	.	334:32:7486:7486	311822	8	True				
ANR	311859	Statement	pool	334:33:7487:7490	311822	9	True				
ANR	311860	Statement	","	334:37:7491:7491	311822	10	True				
ANR	311861	Statement	iter	334:39:7493:7496	311822	11	True				
ANR	311862	Statement	","	334:43:7497:7497	311822	12	True				
ANR	311863	Statement	a	334:45:7499:7499	311822	13	True				
ANR	311864	Statement	)	334:46:7500:7500	311822	14	True				
ANR	311865	CompoundStatement		6:48:131:131	311822	15					
ANR	311866	ExpressionStatement	free ( a -> bytes )	335:3:7507:7522	311822	0	True				
ANR	311867	CallExpression	free ( a -> bytes )		311822	0					
ANR	311868	Callee	free		311822	0					
ANR	311869	Identifier	free		311822	0					
ANR	311870	ArgumentList	a -> bytes		311822	1					
ANR	311871	Argument	a -> bytes		311822	0					
ANR	311872	PtrMemberAccess	a -> bytes		311822	0					
ANR	311873	Identifier	a		311822	0					
ANR	311874	Identifier	bytes		311822	1					
ANR	311875	ExpressionStatement	"a -> bytes = calloc ( 1024 , 1 )"	337:3:7545:7572	311822	1	True				
ANR	311876	AssignmentExpression	"a -> bytes = calloc ( 1024 , 1 )"		311822	0		=			
ANR	311877	PtrMemberAccess	a -> bytes		311822	0					
ANR	311878	Identifier	a		311822	0					
ANR	311879	Identifier	bytes		311822	1					
ANR	311880	CallExpression	"calloc ( 1024 , 1 )"		311822	1					
ANR	311881	Callee	calloc		311822	0					
ANR	311882	Identifier	calloc		311822	0					
ANR	311883	ArgumentList	1024		311822	1					
ANR	311884	Argument	1024		311822	0					
ANR	311885	PrimaryExpression	1024		311822	0					
ANR	311886	Argument	1		311822	1					
ANR	311887	PrimaryExpression	1		311822	0					
ANR	311888	ExpressionStatement	a -> size = 1024	338:3:7577:7591	311822	2	True				
ANR	311889	AssignmentExpression	a -> size = 1024		311822	0		=			
ANR	311890	PtrMemberAccess	a -> size		311822	0					
ANR	311891	Identifier	a		311822	0					
ANR	311892	Identifier	size		311822	1					
ANR	311893	PrimaryExpression	1024		311822	1					
ANR	311894	ReturnType	R_API void		311822	1					
ANR	311895	Identifier	r_reg_arena_shrink		311822	2					
ANR	311896	ParameterList	RReg * reg		311822	3					
ANR	311897	Parameter	RReg * reg	329:30:7359:7367	311822	0	True				
ANR	311898	ParameterType	RReg *		311822	0					
ANR	311899	Identifier	reg		311822	1					
ANR	311900	CFGEntryNode	ENTRY		311822		True				
ANR	311901	CFGExitNode	EXIT		311822		True				
ANR	311902	Symbol	a -> size		311822						
ANR	311903	Symbol	a		311822						
ANR	311904	Symbol	reg		311822						
ANR	311905	Symbol	iter		311822						
ANR	311906	Symbol	i		311822						
ANR	311907	Symbol	R_REG_TYPE_LAST		311822						
ANR	311908	Symbol	a -> bytes		311822						
ANR	311909	Symbol	* a		311822						
ANR	311910	Symbol	calloc		311822						
