command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	959893	File	data/converged/CVE-2019-16718~_radare2/cmd_print.c								
ANR	959894	DeclStmt									
ANR	959895	Decl							int	"int ( void * user , int mode , ut64 addr , ut8 * bufz , ut64 size )"	printzoomcallback
ANR	959896	DeclStmt									
ANR	959897	Decl							const char	const char * [ ]	help_msg_pa
ANR	959898	DeclStmt									
ANR	959899	Decl							const char	const char * [ ]	help_msg_pdf
ANR	959900	DeclStmt									
ANR	959901	Decl							const char	const char * [ ]	help_msg_pp
ANR	959902	DeclStmt									
ANR	959903	Decl							const char	const char * [ ]	help_msg_p6
ANR	959904	DeclStmt									
ANR	959905	Decl							const char	const char * [ ]	help_msg_pF
ANR	959906	DeclStmt									
ANR	959907	Decl							const char	const char * [ ]	help_msg_pr
ANR	959908	DeclStmt									
ANR	959909	Decl							const char	const char * [ ]	help_msg_prg
ANR	959910	DeclStmt									
ANR	959911	Decl							const char	const char * [ ]	help_msg_amper
ANR	959912	DeclStmt									
ANR	959913	Decl							const char	const char * [ ]	help_msg_at
ANR	959914	DeclStmt									
ANR	959915	Decl							const char	const char * [ ]	help_msg_at_at
ANR	959916	DeclStmt									
ANR	959917	Decl							const char	const char * [ ]	help_msg_at_at_at
ANR	959918	DeclStmt									
ANR	959919	Decl							const char	const char * [ ]	help_msg_p
ANR	959920	DeclStmt									
ANR	959921	Decl							const char	const char * [ ]	help_msg_pxd
ANR	959922	DeclStmt									
ANR	959923	Decl							const char	const char * [ ]	help_msg_p_equal
ANR	959924	DeclStmt									
ANR	959925	Decl							const char	const char * [ ]	help_msg_pj
ANR	959926	DeclStmt									
ANR	959927	Decl							const char	const char * [ ]	help_msg_p_minus
ANR	959928	DeclStmt									
ANR	959929	Decl							const char	const char * [ ]	help_msg_pc
ANR	959930	DeclStmt									
ANR	959931	Decl							const char	const char * [ ]	help_msg_pd
ANR	959932	DeclStmt									
ANR	959933	Decl							const char	const char * [ ]	help_msg_pf
ANR	959934	DeclStmt									
ANR	959935	Decl							const char	const char * [ ]	help_detail_pf
ANR	959936	DeclStmt									
ANR	959937	Decl							const char	const char * [ ]	help_detail2_pf
ANR	959938	DeclStmt									
ANR	959939	Decl							const char	const char * [ ]	help_msg_pi
ANR	959940	DeclStmt									
ANR	959941	Decl							const char	const char * [ ]	help_msg_pif
ANR	959942	DeclStmt									
ANR	959943	Decl							const char	const char * [ ]	help_msg_po
ANR	959944	DeclStmt									
ANR	959945	Decl							const char	const char * [ ]	help_msg_ps
ANR	959946	DeclStmt									
ANR	959947	Decl							const char	const char * [ ]	help_msg_pt
ANR	959948	DeclStmt									
ANR	959949	Decl							const char	const char * [ ]	help_msg_pv
ANR	959950	DeclStmt									
ANR	959951	Decl							const char	const char * [ ]	help_msg_px
ANR	959952	DeclStmt									
ANR	959953	Decl							const char	const char * [ ]	help_msg_pz
ANR	959954	DeclStmt									
ANR	959955	Decl							const char	const char * [ ]	help_msg_pxA
ANR	959956	DeclStmt									
ANR	959957	Decl							const ut32	const ut32 [ 256 ]	colormap
ANR	959958	Function	cmd_print_init	586:0:26853:27506							
ANR	959959	FunctionDef	cmd_print_init (RCore * core)		959958	0					
ANR	959960	CompoundStatement		586:40:26893:27506	959958	0					
ANR	959961	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	587:1:26896:26924	959958	0	True				
ANR	959962	Statement	(	587:31:26926:26926	959958	1	True				
ANR	959963	Statement	core	587:32:26927:26930	959958	2	True				
ANR	959964	Statement	","	587:36:26931:26931	959958	3	True				
ANR	959965	Statement	&	587:38:26933:26933	959958	4	True				
ANR	959966	Statement	","	587:39:26934:26934	959958	5	True				
ANR	959967	Statement	amper	587:41:26936:26940	959958	6	True				
ANR	959968	Statement	)	587:46:26941:26941	959958	7	True				
ANR	959969	ExpressionStatement		587:47:26942:26942	959958	8	True				
ANR	959970	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	588:1:26945:26973	959958	9	True				
ANR	959971	Statement	(	588:31:26975:26975	959958	10	True				
ANR	959972	Statement	core	588:32:26976:26979	959958	11	True				
ANR	959973	Statement	","	588:36:26980:26980	959958	12	True				
ANR	959974	Statement	","	588:39:26983:26983	959958	13	True				
ANR	959975	Statement	at	588:41:26985:26986	959958	14	True				
ANR	959976	Statement	)	588:43:26987:26987	959958	15	True				
ANR	959977	ExpressionStatement		588:44:26988:26988	959958	16	True				
ANR	959978	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	589:1:26991:27019	959958	17	True				
ANR	959979	Statement	(	589:31:27021:27021	959958	18	True				
ANR	959980	Statement	core	589:32:27022:27025	959958	19	True				
ANR	959981	Statement	","	589:36:27026:27026	959958	20	True				
ANR	959982	Statement	","	589:40:27030:27030	959958	21	True				
ANR	959983	Statement	at_at	589:42:27032:27036	959958	22	True				
ANR	959984	Statement	)	589:47:27037:27037	959958	23	True				
ANR	959985	ExpressionStatement		589:48:27038:27038	959958	24	True				
ANR	959986	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , p )"	590:1:27041:27072	959958	25	True				
ANR	959987	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , p )"		959958	0					
ANR	959988	Callee	DEFINE_CMD_DESCRIPTOR		959958	0					
ANR	959989	Identifier	DEFINE_CMD_DESCRIPTOR		959958	0					
ANR	959990	ArgumentList	core		959958	1					
ANR	959991	Argument	core		959958	0					
ANR	959992	Identifier	core		959958	0					
ANR	959993	Argument	p		959958	1					
ANR	959994	Identifier	p		959958	0					
ANR	959995	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	591:1:27075:27103	959958	26	True				
ANR	959996	Statement	(	591:31:27105:27105	959958	27	True				
ANR	959997	Statement	core	591:32:27106:27109	959958	28	True				
ANR	959998	Statement	","	591:36:27110:27110	959958	29	True				
ANR	959999	Statement	p	591:38:27112:27112	959958	30	True				
ANR	960000	Statement	=	591:39:27113:27113	959958	31	True				
ANR	960001	Statement	","	591:40:27114:27114	959958	32	True				
ANR	960002	Statement	p_equal	591:42:27116:27122	959958	33	True				
ANR	960003	Statement	)	591:49:27123:27123	959958	34	True				
ANR	960004	ExpressionStatement		591:50:27124:27124	959958	35	True				
ANR	960005	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	592:1:27127:27155	959958	36	True				
ANR	960006	Statement	(	592:31:27157:27157	959958	37	True				
ANR	960007	Statement	core	592:32:27158:27161	959958	38	True				
ANR	960008	Statement	","	592:36:27162:27162	959958	39	True				
ANR	960009	Statement	p	592:38:27164:27164	959958	40	True				
ANR	960010	Statement	-	592:39:27165:27165	959958	41	True				
ANR	960011	Statement	","	592:40:27166:27166	959958	42	True				
ANR	960012	Statement	p_minus	592:42:27168:27174	959958	43	True				
ANR	960013	Statement	)	592:49:27175:27175	959958	44	True				
ANR	960014	ExpressionStatement		592:50:27176:27176	959958	45	True				
ANR	960015	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , pc )"	593:1:27179:27211	959958	46	True				
ANR	960016	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , pc )"		959958	0					
ANR	960017	Callee	DEFINE_CMD_DESCRIPTOR		959958	0					
ANR	960018	Identifier	DEFINE_CMD_DESCRIPTOR		959958	0					
ANR	960019	ArgumentList	core		959958	1					
ANR	960020	Argument	core		959958	0					
ANR	960021	Identifier	core		959958	0					
ANR	960022	Argument	pc		959958	1					
ANR	960023	Identifier	pc		959958	0					
ANR	960024	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , pd )"	594:1:27214:27246	959958	47	True				
ANR	960025	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , pd )"		959958	0					
ANR	960026	Callee	DEFINE_CMD_DESCRIPTOR		959958	0					
ANR	960027	Identifier	DEFINE_CMD_DESCRIPTOR		959958	0					
ANR	960028	ArgumentList	core		959958	1					
ANR	960029	Argument	core		959958	0					
ANR	960030	Identifier	core		959958	0					
ANR	960031	Argument	pd		959958	1					
ANR	960032	Identifier	pd		959958	0					
ANR	960033	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR_WITH_DETAIL2 ( core , pf )"	595:1:27249:27294	959958	48	True				
ANR	960034	CallExpression	"DEFINE_CMD_DESCRIPTOR_WITH_DETAIL2 ( core , pf )"		959958	0					
ANR	960035	Callee	DEFINE_CMD_DESCRIPTOR_WITH_DETAIL2		959958	0					
ANR	960036	Identifier	DEFINE_CMD_DESCRIPTOR_WITH_DETAIL2		959958	0					
ANR	960037	ArgumentList	core		959958	1					
ANR	960038	Argument	core		959958	0					
ANR	960039	Identifier	core		959958	0					
ANR	960040	Argument	pf		959958	1					
ANR	960041	Identifier	pf		959958	0					
ANR	960042	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , pi )"	596:1:27297:27329	959958	49	True				
ANR	960043	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , pi )"		959958	0					
ANR	960044	Callee	DEFINE_CMD_DESCRIPTOR		959958	0					
ANR	960045	Identifier	DEFINE_CMD_DESCRIPTOR		959958	0					
ANR	960046	ArgumentList	core		959958	1					
ANR	960047	Argument	core		959958	0					
ANR	960048	Identifier	core		959958	0					
ANR	960049	Argument	pi		959958	1					
ANR	960050	Identifier	pi		959958	0					
ANR	960051	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , ps )"	597:1:27332:27364	959958	50	True				
ANR	960052	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , ps )"		959958	0					
ANR	960053	Callee	DEFINE_CMD_DESCRIPTOR		959958	0					
ANR	960054	Identifier	DEFINE_CMD_DESCRIPTOR		959958	0					
ANR	960055	ArgumentList	core		959958	1					
ANR	960056	Argument	core		959958	0					
ANR	960057	Identifier	core		959958	0					
ANR	960058	Argument	ps		959958	1					
ANR	960059	Identifier	ps		959958	0					
ANR	960060	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , pt )"	598:1:27367:27399	959958	51	True				
ANR	960061	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , pt )"		959958	0					
ANR	960062	Callee	DEFINE_CMD_DESCRIPTOR		959958	0					
ANR	960063	Identifier	DEFINE_CMD_DESCRIPTOR		959958	0					
ANR	960064	ArgumentList	core		959958	1					
ANR	960065	Argument	core		959958	0					
ANR	960066	Identifier	core		959958	0					
ANR	960067	Argument	pt		959958	1					
ANR	960068	Identifier	pt		959958	0					
ANR	960069	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , pv )"	599:1:27402:27434	959958	52	True				
ANR	960070	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , pv )"		959958	0					
ANR	960071	Callee	DEFINE_CMD_DESCRIPTOR		959958	0					
ANR	960072	Identifier	DEFINE_CMD_DESCRIPTOR		959958	0					
ANR	960073	ArgumentList	core		959958	1					
ANR	960074	Argument	core		959958	0					
ANR	960075	Identifier	core		959958	0					
ANR	960076	Argument	pv		959958	1					
ANR	960077	Identifier	pv		959958	0					
ANR	960078	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , px )"	600:1:27437:27469	959958	53	True				
ANR	960079	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , px )"		959958	0					
ANR	960080	Callee	DEFINE_CMD_DESCRIPTOR		959958	0					
ANR	960081	Identifier	DEFINE_CMD_DESCRIPTOR		959958	0					
ANR	960082	ArgumentList	core		959958	1					
ANR	960083	Argument	core		959958	0					
ANR	960084	Identifier	core		959958	0					
ANR	960085	Argument	px		959958	1					
ANR	960086	Identifier	px		959958	0					
ANR	960087	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , pz )"	601:1:27472:27504	959958	54	True				
ANR	960088	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , pz )"		959958	0					
ANR	960089	Callee	DEFINE_CMD_DESCRIPTOR		959958	0					
ANR	960090	Identifier	DEFINE_CMD_DESCRIPTOR		959958	0					
ANR	960091	ArgumentList	core		959958	1					
ANR	960092	Argument	core		959958	0					
ANR	960093	Identifier	core		959958	0					
ANR	960094	Argument	pz		959958	1					
ANR	960095	Identifier	pz		959958	0					
ANR	960096	ReturnType	static void		959958	1					
ANR	960097	Identifier	cmd_print_init		959958	2					
ANR	960098	ParameterList	RCore * core		959958	3					
ANR	960099	Parameter	RCore * core	586:27:26880:26890	959958	0	True				
ANR	960100	ParameterType	RCore *		959958	0					
ANR	960101	Identifier	core		959958	1					
ANR	960102	CFGEntryNode	ENTRY		959958		True				
ANR	960103	CFGExitNode	EXIT		959958		True				
ANR	960104	Symbol	p		959958						
ANR	960105	Symbol	core		959958						
ANR	960106	Symbol	pc		959958						
ANR	960107	Symbol	ps		959958						
ANR	960108	Symbol	pd		959958						
ANR	960109	Symbol	pt		959958						
ANR	960110	Symbol	pf		959958						
ANR	960111	Symbol	pv		959958						
ANR	960112	Symbol	px		959958						
ANR	960113	Symbol	pi		959958						
ANR	960114	Symbol	pz		959958						
ANR	960115	Function	__cmd_pad	604:0:27509:27993							
ANR	960116	FunctionDef	"__cmd_pad (RCore * core , const char * arg)"		960115	0					
ANR	960117	CompoundStatement		604:52:27561:27993	960115	0					
ANR	960118	IfStatement	if ( * arg == '?' )		960115	0					
ANR	960119	Condition	* arg == '?'	605:5:27568:27578	960115	0	True				
ANR	960120	EqualityExpression	* arg == '?'		960115	0		==			
ANR	960121	UnaryOperationExpression	* arg		960115	0					
ANR	960122	UnaryOperator	*		960115	0					
ANR	960123	Identifier	arg		960115	1					
ANR	960124	PrimaryExpression	'?'		960115	1					
ANR	960125	CompoundStatement		2:18:19:19	960115	1					
ANR	960126	ExpressionStatement	"eprintf ( ""Usage: pad [hexpairs] # disassembly given bytes\\n"" )"	606:2:27585:27646	960115	0	True				
ANR	960127	CallExpression	"eprintf ( ""Usage: pad [hexpairs] # disassembly given bytes\\n"" )"		960115	0					
ANR	960128	Callee	eprintf		960115	0					
ANR	960129	Identifier	eprintf		960115	0					
ANR	960130	ArgumentList	"""Usage: pad [hexpairs] # disassembly given bytes\\n"""		960115	1					
ANR	960131	Argument	"""Usage: pad [hexpairs] # disassembly given bytes\\n"""		960115	0					
ANR	960132	PrimaryExpression	"""Usage: pad [hexpairs] # disassembly given bytes\\n"""		960115	0					
ANR	960133	ReturnStatement	return ;	607:2:27650:27656	960115	1	True				
ANR	960134	ExpressionStatement	"r_asm_set_pc ( core -> assembler , core -> offset )"	609:1:27662:27706	960115	1	True				
ANR	960135	CallExpression	"r_asm_set_pc ( core -> assembler , core -> offset )"		960115	0					
ANR	960136	Callee	r_asm_set_pc		960115	0					
ANR	960137	Identifier	r_asm_set_pc		960115	0					
ANR	960138	ArgumentList	core -> assembler		960115	1					
ANR	960139	Argument	core -> assembler		960115	0					
ANR	960140	PtrMemberAccess	core -> assembler		960115	0					
ANR	960141	Identifier	core		960115	0					
ANR	960142	Identifier	assembler		960115	1					
ANR	960143	Argument	core -> offset		960115	1					
ANR	960144	PtrMemberAccess	core -> offset		960115	0					
ANR	960145	Identifier	core		960115	0					
ANR	960146	Identifier	offset		960115	1					
ANR	960147	IdentifierDeclStatement	"bool is_pseudo = r_config_get_i ( core -> config , ""asm.pseudo"" ) ;"	610:1:27709:27769	960115	2	True				
ANR	960148	IdentifierDecl	"is_pseudo = r_config_get_i ( core -> config , ""asm.pseudo"" )"		960115	0					
ANR	960149	IdentifierDeclType	bool		960115	0					
ANR	960150	Identifier	is_pseudo		960115	1					
ANR	960151	AssignmentExpression	"is_pseudo = r_config_get_i ( core -> config , ""asm.pseudo"" )"		960115	2		=			
ANR	960152	Identifier	is_pseudo		960115	0					
ANR	960153	CallExpression	"r_config_get_i ( core -> config , ""asm.pseudo"" )"		960115	1					
ANR	960154	Callee	r_config_get_i		960115	0					
ANR	960155	Identifier	r_config_get_i		960115	0					
ANR	960156	ArgumentList	core -> config		960115	1					
ANR	960157	Argument	core -> config		960115	0					
ANR	960158	PtrMemberAccess	core -> config		960115	0					
ANR	960159	Identifier	core		960115	0					
ANR	960160	Identifier	config		960115	1					
ANR	960161	Argument	"""asm.pseudo"""		960115	1					
ANR	960162	PrimaryExpression	"""asm.pseudo"""		960115	0					
ANR	960163	IdentifierDeclStatement	"RAsmCode * acode = r_asm_mdisassemble_hexstr ( core -> assembler , is_pseudo ? core -> parser : NULL , arg ) ;"	611:1:27772:27871	960115	3	True				
ANR	960164	IdentifierDecl	"* acode = r_asm_mdisassemble_hexstr ( core -> assembler , is_pseudo ? core -> parser : NULL , arg )"		960115	0					
ANR	960165	IdentifierDeclType	RAsmCode *		960115	0					
ANR	960166	Identifier	acode		960115	1					
ANR	960167	AssignmentExpression	"* acode = r_asm_mdisassemble_hexstr ( core -> assembler , is_pseudo ? core -> parser : NULL , arg )"		960115	2		=			
ANR	960168	Identifier	acode		960115	0					
ANR	960169	CallExpression	"r_asm_mdisassemble_hexstr ( core -> assembler , is_pseudo ? core -> parser : NULL , arg )"		960115	1					
ANR	960170	Callee	r_asm_mdisassemble_hexstr		960115	0					
ANR	960171	Identifier	r_asm_mdisassemble_hexstr		960115	0					
ANR	960172	ArgumentList	core -> assembler		960115	1					
ANR	960173	Argument	core -> assembler		960115	0					
ANR	960174	PtrMemberAccess	core -> assembler		960115	0					
ANR	960175	Identifier	core		960115	0					
ANR	960176	Identifier	assembler		960115	1					
ANR	960177	Argument	is_pseudo ? core -> parser : NULL		960115	1					
ANR	960178	ConditionalExpression	is_pseudo ? core -> parser : NULL		960115	0					
ANR	960179	Condition	is_pseudo		960115	0					
ANR	960180	Identifier	is_pseudo		960115	0					
ANR	960181	PtrMemberAccess	core -> parser		960115	1					
ANR	960182	Identifier	core		960115	0					
ANR	960183	Identifier	parser		960115	1					
ANR	960184	Identifier	NULL		960115	2					
ANR	960185	Argument	arg		960115	2					
ANR	960186	Identifier	arg		960115	0					
ANR	960187	IfStatement	if ( acode )		960115	4					
ANR	960188	Condition	acode	612:5:27878:27882	960115	0	True				
ANR	960189	Identifier	acode		960115	0					
ANR	960190	CompoundStatement		9:12:323:323	960115	1					
ANR	960191	ExpressionStatement	r_cons_print ( acode -> assembly )	613:2:27889:27919	960115	0	True				
ANR	960192	CallExpression	r_cons_print ( acode -> assembly )		960115	0					
ANR	960193	Callee	r_cons_print		960115	0					
ANR	960194	Identifier	r_cons_print		960115	0					
ANR	960195	ArgumentList	acode -> assembly		960115	1					
ANR	960196	Argument	acode -> assembly		960115	0					
ANR	960197	PtrMemberAccess	acode -> assembly		960115	0					
ANR	960198	Identifier	acode		960115	0					
ANR	960199	Identifier	assembly		960115	1					
ANR	960200	ExpressionStatement	r_asm_code_free ( acode )	614:2:27923:27946	960115	1	True				
ANR	960201	CallExpression	r_asm_code_free ( acode )		960115	0					
ANR	960202	Callee	r_asm_code_free		960115	0					
ANR	960203	Identifier	r_asm_code_free		960115	0					
ANR	960204	ArgumentList	acode		960115	1					
ANR	960205	Argument	acode		960115	0					
ANR	960206	Identifier	acode		960115	0					
ANR	960207	ElseStatement	else		960115	0					
ANR	960208	CompoundStatement		12:8:394:394	960115	0					
ANR	960209	ExpressionStatement	"eprintf ( ""Invalid hexstr\\n"" )"	616:2:27960:27988	960115	0	True				
ANR	960210	CallExpression	"eprintf ( ""Invalid hexstr\\n"" )"		960115	0					
ANR	960211	Callee	eprintf		960115	0					
ANR	960212	Identifier	eprintf		960115	0					
ANR	960213	ArgumentList	"""Invalid hexstr\\n"""		960115	1					
ANR	960214	Argument	"""Invalid hexstr\\n"""		960115	0					
ANR	960215	PrimaryExpression	"""Invalid hexstr\\n"""		960115	0					
ANR	960216	ReturnType	static void		960115	1					
ANR	960217	Identifier	__cmd_pad		960115	2					
ANR	960218	ParameterList	"RCore * core , const char * arg"		960115	3					
ANR	960219	Parameter	RCore * core	604:22:27531:27541	960115	0	True				
ANR	960220	ParameterType	RCore *		960115	0					
ANR	960221	Identifier	core		960115	1					
ANR	960222	Parameter	const char * arg	604:35:27544:27558	960115	1	True				
ANR	960223	ParameterType	const char *		960115	0					
ANR	960224	Identifier	arg		960115	1					
ANR	960225	CFGEntryNode	ENTRY		960115		True				
ANR	960226	CFGExitNode	EXIT		960115		True				
ANR	960227	Symbol	core -> config		960115						
ANR	960228	Symbol	NULL		960115						
ANR	960229	Symbol	r_asm_mdisassemble_hexstr		960115						
ANR	960230	Symbol	* core		960115						
ANR	960231	Symbol	core -> assembler		960115						
ANR	960232	Symbol	core -> offset		960115						
ANR	960233	Symbol	acode		960115						
ANR	960234	Symbol	core		960115						
ANR	960235	Symbol	core -> parser		960115						
ANR	960236	Symbol	arg		960115						
ANR	960237	Symbol	r_config_get_i		960115						
ANR	960238	Symbol	is_pseudo		960115						
ANR	960239	Symbol	acode -> assembly		960115						
ANR	960240	Symbol	* acode		960115						
ANR	960241	Symbol	* arg		960115						
ANR	960242	Function	cmd_prc	621:0:28009:30368							
ANR	960243	FunctionDef	"cmd_prc (RCore * core , const ut8 * block , int len)"		960242	0					
ANR	960244	CompoundStatement		621:60:28069:30368	960242	0					
ANR	960245	IdentifierDeclStatement	"const char * chars = "" .,:;!O@#"" ;"	622:1:28072:28103	960242	0	True				
ANR	960246	IdentifierDecl	"* chars = "" .,:;!O@#"""		960242	0					
ANR	960247	IdentifierDeclType	const char *		960242	0					
ANR	960248	Identifier	chars		960242	1					
ANR	960249	AssignmentExpression	"* chars = "" .,:;!O@#"""		960242	2		=			
ANR	960250	Identifier	chars		960242	0					
ANR	960251	PrimaryExpression	""" .,:;!O@#"""		960242	1					
ANR	960252	IdentifierDeclStatement	"bool square = r_config_get_i ( core -> config , ""scr.square"" ) ;"	623:1:28106:28163	960242	1	True				
ANR	960253	IdentifierDecl	"square = r_config_get_i ( core -> config , ""scr.square"" )"		960242	0					
ANR	960254	IdentifierDeclType	bool		960242	0					
ANR	960255	Identifier	square		960242	1					
ANR	960256	AssignmentExpression	"square = r_config_get_i ( core -> config , ""scr.square"" )"		960242	2		=			
ANR	960257	Identifier	square		960242	0					
ANR	960258	CallExpression	"r_config_get_i ( core -> config , ""scr.square"" )"		960242	1					
ANR	960259	Callee	r_config_get_i		960242	0					
ANR	960260	Identifier	r_config_get_i		960242	0					
ANR	960261	ArgumentList	core -> config		960242	1					
ANR	960262	Argument	core -> config		960242	0					
ANR	960263	PtrMemberAccess	core -> config		960242	0					
ANR	960264	Identifier	core		960242	0					
ANR	960265	Identifier	config		960242	1					
ANR	960266	Argument	"""scr.square"""		960242	1					
ANR	960267	PrimaryExpression	"""scr.square"""		960242	0					
ANR	960268	IdentifierDeclStatement	"int i , j ;"	624:1:28166:28174	960242	2	True				
ANR	960269	IdentifierDecl	i		960242	0					
ANR	960270	IdentifierDeclType	int		960242	0					
ANR	960271	Identifier	i		960242	1					
ANR	960272	IdentifierDecl	j		960242	1					
ANR	960273	IdentifierDeclType	int		960242	0					
ANR	960274	Identifier	j		960242	1					
ANR	960275	IdentifierDeclStatement	"char ch , ch2 , * color ;"	625:1:28177:28197	960242	3	True				
ANR	960276	IdentifierDecl	ch		960242	0					
ANR	960277	IdentifierDeclType	char		960242	0					
ANR	960278	Identifier	ch		960242	1					
ANR	960279	IdentifierDecl	ch2		960242	1					
ANR	960280	IdentifierDeclType	char		960242	0					
ANR	960281	Identifier	ch2		960242	1					
ANR	960282	IdentifierDecl	* color		960242	2					
ANR	960283	IdentifierDeclType	char *		960242	0					
ANR	960284	Identifier	color		960242	1					
ANR	960285	IdentifierDeclStatement	"int cols = r_config_get_i ( core -> config , ""hex.cols"" ) ;"	626:1:28200:28252	960242	4	True				
ANR	960286	IdentifierDecl	"cols = r_config_get_i ( core -> config , ""hex.cols"" )"		960242	0					
ANR	960287	IdentifierDeclType	int		960242	0					
ANR	960288	Identifier	cols		960242	1					
ANR	960289	AssignmentExpression	"cols = r_config_get_i ( core -> config , ""hex.cols"" )"		960242	2		=			
ANR	960290	Identifier	cols		960242	0					
ANR	960291	CallExpression	"r_config_get_i ( core -> config , ""hex.cols"" )"		960242	1					
ANR	960292	Callee	r_config_get_i		960242	0					
ANR	960293	Identifier	r_config_get_i		960242	0					
ANR	960294	ArgumentList	core -> config		960242	1					
ANR	960295	Argument	core -> config		960242	0					
ANR	960296	PtrMemberAccess	core -> config		960242	0					
ANR	960297	Identifier	core		960242	0					
ANR	960298	Identifier	config		960242	1					
ANR	960299	Argument	"""hex.cols"""		960242	1					
ANR	960300	PrimaryExpression	"""hex.cols"""		960242	0					
ANR	960301	IdentifierDeclStatement	"bool show_color = r_config_get_i ( core -> config , ""scr.color"" ) ;"	627:1:28255:28315	960242	5	True				
ANR	960302	IdentifierDecl	"show_color = r_config_get_i ( core -> config , ""scr.color"" )"		960242	0					
ANR	960303	IdentifierDeclType	bool		960242	0					
ANR	960304	Identifier	show_color		960242	1					
ANR	960305	AssignmentExpression	"show_color = r_config_get_i ( core -> config , ""scr.color"" )"		960242	2		=			
ANR	960306	Identifier	show_color		960242	0					
ANR	960307	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		960242	1					
ANR	960308	Callee	r_config_get_i		960242	0					
ANR	960309	Identifier	r_config_get_i		960242	0					
ANR	960310	ArgumentList	core -> config		960242	1					
ANR	960311	Argument	core -> config		960242	0					
ANR	960312	PtrMemberAccess	core -> config		960242	0					
ANR	960313	Identifier	core		960242	0					
ANR	960314	Identifier	config		960242	1					
ANR	960315	Argument	"""scr.color"""		960242	1					
ANR	960316	PrimaryExpression	"""scr.color"""		960242	0					
ANR	960317	IdentifierDeclStatement	"bool show_flags = r_config_get_i ( core -> config , ""asm.flags"" ) ;"	628:1:28318:28378	960242	6	True				
ANR	960318	IdentifierDecl	"show_flags = r_config_get_i ( core -> config , ""asm.flags"" )"		960242	0					
ANR	960319	IdentifierDeclType	bool		960242	0					
ANR	960320	Identifier	show_flags		960242	1					
ANR	960321	AssignmentExpression	"show_flags = r_config_get_i ( core -> config , ""asm.flags"" )"		960242	2		=			
ANR	960322	Identifier	show_flags		960242	0					
ANR	960323	CallExpression	"r_config_get_i ( core -> config , ""asm.flags"" )"		960242	1					
ANR	960324	Callee	r_config_get_i		960242	0					
ANR	960325	Identifier	r_config_get_i		960242	0					
ANR	960326	ArgumentList	core -> config		960242	1					
ANR	960327	Argument	core -> config		960242	0					
ANR	960328	PtrMemberAccess	core -> config		960242	0					
ANR	960329	Identifier	core		960242	0					
ANR	960330	Identifier	config		960242	1					
ANR	960331	Argument	"""asm.flags"""		960242	1					
ANR	960332	PrimaryExpression	"""asm.flags"""		960242	0					
ANR	960333	IdentifierDeclStatement	"bool show_section = r_config_get_i ( core -> config , ""hex.section"" ) ;"	629:1:28381:28445	960242	7	True				
ANR	960334	IdentifierDecl	"show_section = r_config_get_i ( core -> config , ""hex.section"" )"		960242	0					
ANR	960335	IdentifierDeclType	bool		960242	0					
ANR	960336	Identifier	show_section		960242	1					
ANR	960337	AssignmentExpression	"show_section = r_config_get_i ( core -> config , ""hex.section"" )"		960242	2		=			
ANR	960338	Identifier	show_section		960242	0					
ANR	960339	CallExpression	"r_config_get_i ( core -> config , ""hex.section"" )"		960242	1					
ANR	960340	Callee	r_config_get_i		960242	0					
ANR	960341	Identifier	r_config_get_i		960242	0					
ANR	960342	ArgumentList	core -> config		960242	1					
ANR	960343	Argument	core -> config		960242	0					
ANR	960344	PtrMemberAccess	core -> config		960242	0					
ANR	960345	Identifier	core		960242	0					
ANR	960346	Identifier	config		960242	1					
ANR	960347	Argument	"""hex.section"""		960242	1					
ANR	960348	PrimaryExpression	"""hex.section"""		960242	0					
ANR	960349	IdentifierDeclStatement	bool show_cursor = core -> print -> cur_enabled ;	630:1:28448:28491	960242	8	True				
ANR	960350	IdentifierDecl	show_cursor = core -> print -> cur_enabled		960242	0					
ANR	960351	IdentifierDeclType	bool		960242	0					
ANR	960352	Identifier	show_cursor		960242	1					
ANR	960353	AssignmentExpression	show_cursor = core -> print -> cur_enabled		960242	2		=			
ANR	960354	Identifier	show_cursor		960242	0					
ANR	960355	PtrMemberAccess	core -> print -> cur_enabled		960242	1					
ANR	960356	PtrMemberAccess	core -> print		960242	0					
ANR	960357	Identifier	core		960242	0					
ANR	960358	Identifier	print		960242	1					
ANR	960359	Identifier	cur_enabled		960242	1					
ANR	960360	IdentifierDeclStatement	bool show_unalloc = core -> print -> flags & R_PRINT_FLAGS_UNALLOC ;	631:1:28494:28556	960242	9	True				
ANR	960361	IdentifierDecl	show_unalloc = core -> print -> flags & R_PRINT_FLAGS_UNALLOC		960242	0					
ANR	960362	IdentifierDeclType	bool		960242	0					
ANR	960363	Identifier	show_unalloc		960242	1					
ANR	960364	AssignmentExpression	show_unalloc = core -> print -> flags & R_PRINT_FLAGS_UNALLOC		960242	2		=			
ANR	960365	Identifier	show_unalloc		960242	0					
ANR	960366	BitAndExpression	core -> print -> flags & R_PRINT_FLAGS_UNALLOC		960242	1		&			
ANR	960367	PtrMemberAccess	core -> print -> flags		960242	0					
ANR	960368	PtrMemberAccess	core -> print		960242	0					
ANR	960369	Identifier	core		960242	0					
ANR	960370	Identifier	print		960242	1					
ANR	960371	Identifier	flags		960242	1					
ANR	960372	Identifier	R_PRINT_FLAGS_UNALLOC		960242	1					
ANR	960373	IfStatement	if ( cols < 1 || cols > 0xfffff )		960242	10					
ANR	960374	Condition	cols < 1 || cols > 0xfffff	632:5:28563:28588	960242	0	True				
ANR	960375	OrExpression	cols < 1 || cols > 0xfffff		960242	0		||			
ANR	960376	RelationalExpression	cols < 1		960242	0		<			
ANR	960377	Identifier	cols		960242	0					
ANR	960378	PrimaryExpression	1		960242	1					
ANR	960379	RelationalExpression	cols > 0xfffff		960242	1		>			
ANR	960380	Identifier	cols		960242	0					
ANR	960381	PrimaryExpression	0xfffff		960242	1					
ANR	960382	CompoundStatement		12:33:521:521	960242	1					
ANR	960383	ExpressionStatement	cols = 32	633:2:28595:28604	960242	0	True				
ANR	960384	AssignmentExpression	cols = 32		960242	0		=			
ANR	960385	Identifier	cols		960242	0					
ANR	960386	PrimaryExpression	32		960242	1					
ANR	960387	ForStatement	for ( i = 0 ; i < len ; i += cols )		960242	11					
ANR	960388	ForInit	i = 0 ;	635:6:28615:28620	960242	0	True				
ANR	960389	AssignmentExpression	i = 0		960242	0		=			
ANR	960390	Identifier	i		960242	0					
ANR	960391	PrimaryExpression	0		960242	1					
ANR	960392	Condition	i < len	635:13:28622:28628	960242	1	True				
ANR	960393	RelationalExpression	i < len		960242	0		<			
ANR	960394	Identifier	i		960242	0					
ANR	960395	Identifier	len		960242	1					
ANR	960396	AssignmentExpression	i += cols	635:22:28631:28639	960242	2	True	+=			
ANR	960397	Identifier	i		960242	0					
ANR	960398	Identifier	cols		960242	1					
ANR	960399	CompoundStatement		15:33:572:572	960242	3					
ANR	960400	IfStatement	if ( show_section )		960242	0					
ANR	960401	Condition	show_section	636:6:28650:28661	960242	0	True				
ANR	960402	Identifier	show_section		960242	0					
ANR	960403	CompoundStatement		17:3:599:667	960242	1					
ANR	960404	IdentifierDeclStatement	"const char * name = r_core_get_section_name ( core , core -> offset + i ) ;"	637:3:28669:28737	960242	0	True				
ANR	960405	IdentifierDecl	"* name = r_core_get_section_name ( core , core -> offset + i )"		960242	0					
ANR	960406	IdentifierDeclType	const char *		960242	0					
ANR	960407	Identifier	name		960242	1					
ANR	960408	AssignmentExpression	"* name = r_core_get_section_name ( core , core -> offset + i )"		960242	2		=			
ANR	960409	Identifier	name		960242	0					
ANR	960410	CallExpression	"r_core_get_section_name ( core , core -> offset + i )"		960242	1					
ANR	960411	Callee	r_core_get_section_name		960242	0					
ANR	960412	Identifier	r_core_get_section_name		960242	0					
ANR	960413	ArgumentList	core		960242	1					
ANR	960414	Argument	core		960242	0					
ANR	960415	Identifier	core		960242	0					
ANR	960416	Argument	core -> offset + i		960242	1					
ANR	960417	AdditiveExpression	core -> offset + i		960242	0		+			
ANR	960418	PtrMemberAccess	core -> offset		960242	0					
ANR	960419	Identifier	core		960242	0					
ANR	960420	Identifier	offset		960242	1					
ANR	960421	Identifier	i		960242	1					
ANR	960422	ExpressionStatement	"r_cons_printf ( ""%20s "" , name ? name : """" )"	638:3:28742:28781	960242	1	True				
ANR	960423	CallExpression	"r_cons_printf ( ""%20s "" , name ? name : """" )"		960242	0					
ANR	960424	Callee	r_cons_printf		960242	0					
ANR	960425	Identifier	r_cons_printf		960242	0					
ANR	960426	ArgumentList	"""%20s """		960242	1					
ANR	960427	Argument	"""%20s """		960242	0					
ANR	960428	PrimaryExpression	"""%20s """		960242	0					
ANR	960429	Argument	"name ? name : """""		960242	1					
ANR	960430	ConditionalExpression	"name ? name : """""		960242	0					
ANR	960431	Condition	name		960242	0					
ANR	960432	Identifier	name		960242	0					
ANR	960433	Identifier	name		960242	1					
ANR	960434	PrimaryExpression	""""""		960242	2					
ANR	960435	ExpressionStatement	"r_print_addr ( core -> print , core -> offset + i )"	640:2:28789:28833	960242	1	True				
ANR	960436	CallExpression	"r_print_addr ( core -> print , core -> offset + i )"		960242	0					
ANR	960437	Callee	r_print_addr		960242	0					
ANR	960438	Identifier	r_print_addr		960242	0					
ANR	960439	ArgumentList	core -> print		960242	1					
ANR	960440	Argument	core -> print		960242	0					
ANR	960441	PtrMemberAccess	core -> print		960242	0					
ANR	960442	Identifier	core		960242	0					
ANR	960443	Identifier	print		960242	1					
ANR	960444	Argument	core -> offset + i		960242	1					
ANR	960445	AdditiveExpression	core -> offset + i		960242	0		+			
ANR	960446	PtrMemberAccess	core -> offset		960242	0					
ANR	960447	Identifier	core		960242	0					
ANR	960448	Identifier	offset		960242	1					
ANR	960449	Identifier	i		960242	1					
ANR	960450	ForStatement	for ( j = i ; j < i + cols ; j ++ )		960242	2					
ANR	960451	ForInit	j = i ;	641:7:28842:28847	960242	0	True				
ANR	960452	AssignmentExpression	j = i		960242	0		=			
ANR	960453	Identifier	j		960242	0					
ANR	960454	Identifier	i		960242	1					
ANR	960455	Condition	j < i + cols	641:14:28849:28860	960242	1	True				
ANR	960456	RelationalExpression	j < i + cols		960242	0		<			
ANR	960457	Identifier	j		960242	0					
ANR	960458	AdditiveExpression	i + cols		960242	1		+			
ANR	960459	Identifier	i		960242	0					
ANR	960460	Identifier	cols		960242	1					
ANR	960461	PostIncDecOperationExpression	j ++	641:28:28863:28866	960242	2	True				
ANR	960462	Identifier	j		960242	0					
ANR	960463	IncDec	++		960242	1					
ANR	960464	CompoundStatement		21:34:799:799	960242	3					
ANR	960465	IfStatement	if ( j >= len )		960242	0					
ANR	960466	Condition	j >= len	642:7:28878:28885	960242	0	True				
ANR	960467	RelationalExpression	j >= len		960242	0		>=			
ANR	960468	Identifier	j		960242	0					
ANR	960469	Identifier	len		960242	1					
ANR	960470	CompoundStatement		22:17:818:818	960242	1					
ANR	960471	BreakStatement	break ;	643:4:28894:28899	960242	0	True				
ANR	960472	IfStatement	if ( show_color )		960242	1					
ANR	960473	Condition	show_color	645:7:28913:28922	960242	0	True				
ANR	960474	Identifier	show_color		960242	0					
ANR	960475	CompoundStatement		29:4:1034:1132	960242	1					
ANR	960476	IdentifierDeclStatement	ut32 color_val = colormap [ block [ j ] ] ;	646:4:28931:28966	960242	0	True				
ANR	960477	IdentifierDecl	color_val = colormap [ block [ j ] ]		960242	0					
ANR	960478	IdentifierDeclType	ut32		960242	0					
ANR	960479	Identifier	color_val		960242	1					
ANR	960480	AssignmentExpression	color_val = colormap [ block [ j ] ]		960242	2		=			
ANR	960481	Identifier	color_val		960242	0					
ANR	960482	ArrayIndexing	colormap [ block [ j ] ]		960242	1					
ANR	960483	Identifier	colormap		960242	0					
ANR	960484	ArrayIndexing	block [ j ]		960242	1					
ANR	960485	Identifier	block		960242	0					
ANR	960486	Identifier	j		960242	1					
ANR	960487	IdentifierDeclStatement	int brightness = ( ( color_val & 0xff0000 ) >> 16 ) + 2 * ( ( color_val & 0xff00 ) >> 8 ) + ( color_val & 0xff ) / 2 ;	647:4:28972:29098	960242	1	True				
ANR	960488	IdentifierDecl	brightness = ( ( color_val & 0xff0000 ) >> 16 ) + 2 * ( ( color_val & 0xff00 ) >> 8 ) + ( color_val & 0xff ) / 2		960242	0					
ANR	960489	IdentifierDeclType	int		960242	0					
ANR	960490	Identifier	brightness		960242	1					
ANR	960491	AssignmentExpression	brightness = ( ( color_val & 0xff0000 ) >> 16 ) + 2 * ( ( color_val & 0xff00 ) >> 8 ) + ( color_val & 0xff ) / 2		960242	2		=			
ANR	960492	Identifier	brightness		960242	0					
ANR	960493	AdditiveExpression	( ( color_val & 0xff0000 ) >> 16 ) + 2 * ( ( color_val & 0xff00 ) >> 8 ) + ( color_val & 0xff ) / 2		960242	1		+			
ANR	960494	ShiftExpression	( color_val & 0xff0000 ) >> 16		960242	0		>>			
ANR	960495	BitAndExpression	color_val & 0xff0000		960242	0		&			
ANR	960496	Identifier	color_val		960242	0					
ANR	960497	PrimaryExpression	0xff0000		960242	1					
ANR	960498	PrimaryExpression	16		960242	1					
ANR	960499	AdditiveExpression	2 * ( ( color_val & 0xff00 ) >> 8 ) + ( color_val & 0xff ) / 2		960242	1		+			
ANR	960500	MultiplicativeExpression	2 * ( ( color_val & 0xff00 ) >> 8 )		960242	0		*			
ANR	960501	PrimaryExpression	2		960242	0					
ANR	960502	ShiftExpression	( color_val & 0xff00 ) >> 8		960242	1		>>			
ANR	960503	BitAndExpression	color_val & 0xff00		960242	0		&			
ANR	960504	Identifier	color_val		960242	0					
ANR	960505	PrimaryExpression	0xff00		960242	1					
ANR	960506	PrimaryExpression	8		960242	1					
ANR	960507	MultiplicativeExpression	( color_val & 0xff ) / 2		960242	1		/			
ANR	960508	BitAndExpression	color_val & 0xff		960242	0		&			
ANR	960509	Identifier	color_val		960242	0					
ANR	960510	PrimaryExpression	0xff		960242	1					
ANR	960511	PrimaryExpression	2		960242	1					
ANR	960512	IdentifierDeclStatement	"char * str = r_str_newf ( ""rgb:%s rgb:%06x"" , brightness <= 0x7f * 3 ? ""fff"" : ""000"" , color_val ) ;"	649:4:29104:29202	960242	2	True				
ANR	960513	IdentifierDecl	"* str = r_str_newf ( ""rgb:%s rgb:%06x"" , brightness <= 0x7f * 3 ? ""fff"" : ""000"" , color_val )"		960242	0					
ANR	960514	IdentifierDeclType	char *		960242	0					
ANR	960515	Identifier	str		960242	1					
ANR	960516	AssignmentExpression	"* str = r_str_newf ( ""rgb:%s rgb:%06x"" , brightness <= 0x7f * 3 ? ""fff"" : ""000"" , color_val )"		960242	2		=			
ANR	960517	Identifier	str		960242	0					
ANR	960518	CallExpression	"r_str_newf ( ""rgb:%s rgb:%06x"" , brightness <= 0x7f * 3 ? ""fff"" : ""000"" , color_val )"		960242	1					
ANR	960519	Callee	r_str_newf		960242	0					
ANR	960520	Identifier	r_str_newf		960242	0					
ANR	960521	ArgumentList	"""rgb:%s rgb:%06x"""		960242	1					
ANR	960522	Argument	"""rgb:%s rgb:%06x"""		960242	0					
ANR	960523	PrimaryExpression	"""rgb:%s rgb:%06x"""		960242	0					
ANR	960524	Argument	"brightness <= 0x7f * 3 ? ""fff"" : ""000"""		960242	1					
ANR	960525	ConditionalExpression	"brightness <= 0x7f * 3 ? ""fff"" : ""000"""		960242	0					
ANR	960526	Condition	brightness <= 0x7f * 3		960242	0					
ANR	960527	RelationalExpression	brightness <= 0x7f * 3		960242	0		<=			
ANR	960528	Identifier	brightness		960242	0					
ANR	960529	MultiplicativeExpression	0x7f * 3		960242	1		*			
ANR	960530	PrimaryExpression	0x7f		960242	0					
ANR	960531	PrimaryExpression	3		960242	1					
ANR	960532	PrimaryExpression	"""fff"""		960242	1					
ANR	960533	PrimaryExpression	"""000"""		960242	2					
ANR	960534	Argument	color_val		960242	2					
ANR	960535	Identifier	color_val		960242	0					
ANR	960536	ExpressionStatement	"color = r_cons_pal_parse ( str , NULL )"	651:4:29208:29244	960242	3	True				
ANR	960537	AssignmentExpression	"color = r_cons_pal_parse ( str , NULL )"		960242	0		=			
ANR	960538	Identifier	color		960242	0					
ANR	960539	CallExpression	"r_cons_pal_parse ( str , NULL )"		960242	1					
ANR	960540	Callee	r_cons_pal_parse		960242	0					
ANR	960541	Identifier	r_cons_pal_parse		960242	0					
ANR	960542	ArgumentList	str		960242	1					
ANR	960543	Argument	str		960242	0					
ANR	960544	Identifier	str		960242	0					
ANR	960545	Argument	NULL		960242	1					
ANR	960546	Identifier	NULL		960242	0					
ANR	960547	ExpressionStatement	free ( str )	652:4:29250:29260	960242	4	True				
ANR	960548	CallExpression	free ( str )		960242	0					
ANR	960549	Callee	free		960242	0					
ANR	960550	Identifier	free		960242	0					
ANR	960551	ArgumentList	str		960242	1					
ANR	960552	Argument	str		960242	0					
ANR	960553	Identifier	str		960242	0					
ANR	960554	IfStatement	if ( show_cursor && core -> print -> cur == j )		960242	5					
ANR	960555	Condition	show_cursor && core -> print -> cur == j	653:8:29270:29305	960242	0	True				
ANR	960556	AndExpression	show_cursor && core -> print -> cur == j		960242	0		&&			
ANR	960557	Identifier	show_cursor		960242	0					
ANR	960558	EqualityExpression	core -> print -> cur == j		960242	1		==			
ANR	960559	PtrMemberAccess	core -> print -> cur		960242	0					
ANR	960560	PtrMemberAccess	core -> print		960242	0					
ANR	960561	Identifier	core		960242	0					
ANR	960562	Identifier	print		960242	1					
ANR	960563	Identifier	cur		960242	1					
ANR	960564	Identifier	j		960242	1					
ANR	960565	CompoundStatement		33:46:1238:1238	960242	1					
ANR	960566	ExpressionStatement	ch = '_'	654:5:29315:29323	960242	0	True				
ANR	960567	AssignmentExpression	ch = '_'		960242	0		=			
ANR	960568	Identifier	ch		960242	0					
ANR	960569	PrimaryExpression	'_'		960242	1					
ANR	960570	ElseStatement	else		960242	0					
ANR	960571	CompoundStatement		35:11:1266:1266	960242	0					
ANR	960572	ExpressionStatement	ch = ' '	656:5:29343:29351	960242	0	True				
ANR	960573	AssignmentExpression	ch = ' '		960242	0		=			
ANR	960574	Identifier	ch		960242	0					
ANR	960575	PrimaryExpression	' '		960242	1					
ANR	960576	ElseStatement	else		960242	0					
ANR	960577	CompoundStatement		38:10:1299:1299	960242	0					
ANR	960578	ExpressionStatement	"color = strdup ( """" )"	659:4:29375:29394	960242	0	True				
ANR	960579	AssignmentExpression	"color = strdup ( """" )"		960242	0		=			
ANR	960580	Identifier	color		960242	0					
ANR	960581	CallExpression	"strdup ( """" )"		960242	1					
ANR	960582	Callee	strdup		960242	0					
ANR	960583	Identifier	strdup		960242	0					
ANR	960584	ArgumentList	""""""		960242	1					
ANR	960585	Argument	""""""		960242	0					
ANR	960586	PrimaryExpression	""""""		960242	0					
ANR	960587	IfStatement	if ( show_cursor && core -> print -> cur == j )		960242	1					
ANR	960588	Condition	show_cursor && core -> print -> cur == j	660:8:29404:29439	960242	0	True				
ANR	960589	AndExpression	show_cursor && core -> print -> cur == j		960242	0		&&			
ANR	960590	Identifier	show_cursor		960242	0					
ANR	960591	EqualityExpression	core -> print -> cur == j		960242	1		==			
ANR	960592	PtrMemberAccess	core -> print -> cur		960242	0					
ANR	960593	PtrMemberAccess	core -> print		960242	0					
ANR	960594	Identifier	core		960242	0					
ANR	960595	Identifier	print		960242	1					
ANR	960596	Identifier	cur		960242	1					
ANR	960597	Identifier	j		960242	1					
ANR	960598	CompoundStatement		40:46:1372:1372	960242	1					
ANR	960599	ExpressionStatement	ch = '_'	661:5:29449:29457	960242	0	True				
ANR	960600	AssignmentExpression	ch = '_'		960242	0		=			
ANR	960601	Identifier	ch		960242	0					
ANR	960602	PrimaryExpression	'_'		960242	1					
ANR	960603	ElseStatement	else		960242	0					
ANR	960604	CompoundStatement		43:5:1407:1469	960242	0					
ANR	960605	IdentifierDeclStatement	const int idx = ( ( float ) block [ j ] / 255 ) * ( strlen ( chars ) - 1 ) ;	663:5:29477:29539	960242	0	True				
ANR	960606	IdentifierDecl	idx = ( ( float ) block [ j ] / 255 ) * ( strlen ( chars ) - 1 )		960242	0					
ANR	960607	IdentifierDeclType	const int		960242	0					
ANR	960608	Identifier	idx		960242	1					
ANR	960609	AssignmentExpression	idx = ( ( float ) block [ j ] / 255 ) * ( strlen ( chars ) - 1 )		960242	2		=			
ANR	960610	Identifier	idx		960242	0					
ANR	960611	MultiplicativeExpression	( ( float ) block [ j ] / 255 ) * ( strlen ( chars ) - 1 )		960242	1		*			
ANR	960612	MultiplicativeExpression	( float ) block [ j ] / 255		960242	0		/			
ANR	960613	CastExpression	( float ) block [ j ]		960242	0					
ANR	960614	CastTarget	float		960242	0					
ANR	960615	ArrayIndexing	block [ j ]		960242	1					
ANR	960616	Identifier	block		960242	0					
ANR	960617	Identifier	j		960242	1					
ANR	960618	PrimaryExpression	255		960242	1					
ANR	960619	AdditiveExpression	strlen ( chars ) - 1		960242	1		-			
ANR	960620	CallExpression	strlen ( chars )		960242	0					
ANR	960621	Callee	strlen		960242	0					
ANR	960622	Identifier	strlen		960242	0					
ANR	960623	ArgumentList	chars		960242	1					
ANR	960624	Argument	chars		960242	0					
ANR	960625	Identifier	chars		960242	0					
ANR	960626	PrimaryExpression	1		960242	1					
ANR	960627	ExpressionStatement	ch = chars [ idx ]	664:5:29546:29561	960242	1	True				
ANR	960628	AssignmentExpression	ch = chars [ idx ]		960242	0		=			
ANR	960629	Identifier	ch		960242	0					
ANR	960630	ArrayIndexing	chars [ idx ]		960242	1					
ANR	960631	Identifier	chars		960242	0					
ANR	960632	Identifier	idx		960242	1					
ANR	960633	IfStatement	"if ( show_unalloc && ! core -> print -> iob . is_valid_offset ( core -> print -> iob . io , core -> offset + j , false ) )"		960242	2					
ANR	960634	Condition	"show_unalloc && ! core -> print -> iob . is_valid_offset ( core -> print -> iob . io , core -> offset + j , false )"	667:7:29581:29683	960242	0	True				
ANR	960635	AndExpression	"show_unalloc && ! core -> print -> iob . is_valid_offset ( core -> print -> iob . io , core -> offset + j , false )"		960242	0		&&			
ANR	960636	Identifier	show_unalloc		960242	0					
ANR	960637	UnaryOperationExpression	"! core -> print -> iob . is_valid_offset ( core -> print -> iob . io , core -> offset + j , false )"		960242	1					
ANR	960638	UnaryOperator	!		960242	0					
ANR	960639	CallExpression	"core -> print -> iob . is_valid_offset ( core -> print -> iob . io , core -> offset + j , false )"		960242	1					
ANR	960640	Callee	core -> print -> iob . is_valid_offset		960242	0					
ANR	960641	MemberAccess	core -> print -> iob . is_valid_offset		960242	0					
ANR	960642	PtrMemberAccess	core -> print -> iob		960242	0					
ANR	960643	PtrMemberAccess	core -> print		960242	0					
ANR	960644	Identifier	core		960242	0					
ANR	960645	Identifier	print		960242	1					
ANR	960646	Identifier	iob		960242	1					
ANR	960647	Identifier	is_valid_offset		960242	1					
ANR	960648	ArgumentList	core -> print -> iob . io		960242	1					
ANR	960649	Argument	core -> print -> iob . io		960242	0					
ANR	960650	MemberAccess	core -> print -> iob . io		960242	0					
ANR	960651	PtrMemberAccess	core -> print -> iob		960242	0					
ANR	960652	PtrMemberAccess	core -> print		960242	0					
ANR	960653	Identifier	core		960242	0					
ANR	960654	Identifier	print		960242	1					
ANR	960655	Identifier	iob		960242	1					
ANR	960656	Identifier	io		960242	1					
ANR	960657	Argument	core -> offset + j		960242	1					
ANR	960658	AdditiveExpression	core -> offset + j		960242	0		+			
ANR	960659	PtrMemberAccess	core -> offset		960242	0					
ANR	960660	Identifier	core		960242	0					
ANR	960661	Identifier	offset		960242	1					
ANR	960662	Identifier	j		960242	1					
ANR	960663	Argument	false		960242	2					
ANR	960664	Identifier	false		960242	0					
ANR	960665	CompoundStatement		48:89:1616:1616	960242	1					
ANR	960666	IfStatement	if ( show_color )		960242	0					
ANR	960667	Condition	show_color	669:8:29696:29705	960242	0	True				
ANR	960668	Identifier	show_color		960242	0					
ANR	960669	CompoundStatement		49:20:1638:1638	960242	1					
ANR	960670	ExpressionStatement	free ( color )	670:5:29715:29727	960242	0	True				
ANR	960671	CallExpression	free ( color )		960242	0					
ANR	960672	Callee	free		960242	0					
ANR	960673	Identifier	free		960242	0					
ANR	960674	ArgumentList	color		960242	1					
ANR	960675	Argument	color		960242	0					
ANR	960676	Identifier	color		960242	0					
ANR	960677	ExpressionStatement	color = strdup ( Color_RESET )	671:5:29734:29762	960242	1	True				
ANR	960678	AssignmentExpression	color = strdup ( Color_RESET )		960242	0		=			
ANR	960679	Identifier	color		960242	0					
ANR	960680	CallExpression	strdup ( Color_RESET )		960242	1					
ANR	960681	Callee	strdup		960242	0					
ANR	960682	Identifier	strdup		960242	0					
ANR	960683	ArgumentList	Color_RESET		960242	1					
ANR	960684	Argument	Color_RESET		960242	0					
ANR	960685	Identifier	Color_RESET		960242	0					
ANR	960686	ExpressionStatement	ch = core -> print -> io_unalloc_ch	672:5:29769:29800	960242	2	True				
ANR	960687	AssignmentExpression	ch = core -> print -> io_unalloc_ch		960242	0		=			
ANR	960688	Identifier	ch		960242	0					
ANR	960689	PtrMemberAccess	core -> print -> io_unalloc_ch		960242	1					
ANR	960690	PtrMemberAccess	core -> print		960242	0					
ANR	960691	Identifier	core		960242	0					
ANR	960692	Identifier	print		960242	1					
ANR	960693	Identifier	io_unalloc_ch		960242	1					
ANR	960694	IfStatement	if ( ch == ' ' )		960242	3					
ANR	960695	Condition	ch == ' '	673:9:29811:29819	960242	0	True				
ANR	960696	EqualityExpression	ch == ' '		960242	0		==			
ANR	960697	Identifier	ch		960242	0					
ANR	960698	PrimaryExpression	' '		960242	1					
ANR	960699	CompoundStatement		53:20:1752:1752	960242	1					
ANR	960700	ExpressionStatement	ch = '.'	674:6:29830:29838	960242	0	True				
ANR	960701	AssignmentExpression	ch = '.'		960242	0		=			
ANR	960702	Identifier	ch		960242	0					
ANR	960703	PrimaryExpression	'.'		960242	1					
ANR	960704	ElseStatement	else		960242	0					
ANR	960705	CompoundStatement		56:11:1788:1788	960242	0					
ANR	960706	ExpressionStatement	ch = '?'	677:5:29865:29873	960242	0	True				
ANR	960707	AssignmentExpression	ch = '?'		960242	0		=			
ANR	960708	Identifier	ch		960242	0					
ANR	960709	PrimaryExpression	'?'		960242	1					
ANR	960710	IfStatement	if ( square )		960242	3					
ANR	960711	Condition	square	680:7:29931:29936	960242	0	True				
ANR	960712	Identifier	square		960242	0					
ANR	960713	CompoundStatement		60:15:1869:1869	960242	1					
ANR	960714	IfStatement	if ( show_flags )		960242	0					
ANR	960715	Condition	show_flags	681:8:29949:29958	960242	0	True				
ANR	960716	Identifier	show_flags		960242	0					
ANR	960717	CompoundStatement		62:5:1898:1958	960242	1					
ANR	960718	IdentifierDeclStatement	"RFlagItem * fi = r_flag_get_i ( core -> flags , core -> offset + j ) ;"	682:5:29968:30028	960242	0	True				
ANR	960719	IdentifierDecl	"* fi = r_flag_get_i ( core -> flags , core -> offset + j )"		960242	0					
ANR	960720	IdentifierDeclType	RFlagItem *		960242	0					
ANR	960721	Identifier	fi		960242	1					
ANR	960722	AssignmentExpression	"* fi = r_flag_get_i ( core -> flags , core -> offset + j )"		960242	2		=			
ANR	960723	Identifier	fi		960242	0					
ANR	960724	CallExpression	"r_flag_get_i ( core -> flags , core -> offset + j )"		960242	1					
ANR	960725	Callee	r_flag_get_i		960242	0					
ANR	960726	Identifier	r_flag_get_i		960242	0					
ANR	960727	ArgumentList	core -> flags		960242	1					
ANR	960728	Argument	core -> flags		960242	0					
ANR	960729	PtrMemberAccess	core -> flags		960242	0					
ANR	960730	Identifier	core		960242	0					
ANR	960731	Identifier	flags		960242	1					
ANR	960732	Argument	core -> offset + j		960242	1					
ANR	960733	AdditiveExpression	core -> offset + j		960242	0		+			
ANR	960734	PtrMemberAccess	core -> offset		960242	0					
ANR	960735	Identifier	core		960242	0					
ANR	960736	Identifier	offset		960242	1					
ANR	960737	Identifier	j		960242	1					
ANR	960738	IfStatement	if ( fi )		960242	1					
ANR	960739	Condition	fi	683:9:30039:30040	960242	0	True				
ANR	960740	Identifier	fi		960242	0					
ANR	960741	CompoundStatement		63:13:1973:1973	960242	1					
ANR	960742	ExpressionStatement	ch = fi -> name [ 0 ]	684:6:30051:30067	960242	0	True				
ANR	960743	AssignmentExpression	ch = fi -> name [ 0 ]		960242	0		=			
ANR	960744	Identifier	ch		960242	0					
ANR	960745	ArrayIndexing	fi -> name [ 0 ]		960242	1					
ANR	960746	PtrMemberAccess	fi -> name		960242	0					
ANR	960747	Identifier	fi		960242	0					
ANR	960748	Identifier	name		960242	1					
ANR	960749	PrimaryExpression	0		960242	1					
ANR	960750	ExpressionStatement	ch2 = fi -> name [ 1 ]	685:6:30075:30092	960242	1	True				
ANR	960751	AssignmentExpression	ch2 = fi -> name [ 1 ]		960242	0		=			
ANR	960752	Identifier	ch2		960242	0					
ANR	960753	ArrayIndexing	fi -> name [ 1 ]		960242	1					
ANR	960754	PtrMemberAccess	fi -> name		960242	0					
ANR	960755	Identifier	fi		960242	0					
ANR	960756	Identifier	name		960242	1					
ANR	960757	PrimaryExpression	1		960242	1					
ANR	960758	ElseStatement	else		960242	0					
ANR	960759	CompoundStatement		66:12:2036:2036	960242	0					
ANR	960760	ExpressionStatement	ch2 = ch	687:6:30114:30122	960242	0	True				
ANR	960761	AssignmentExpression	ch2 = ch		960242	0		=			
ANR	960762	Identifier	ch2		960242	0					
ANR	960763	Identifier	ch		960242	1					
ANR	960764	ElseStatement	else		960242	0					
ANR	960765	CompoundStatement		69:11:2072:2072	960242	0					
ANR	960766	ExpressionStatement	ch2 = ch	690:5:30149:30157	960242	0	True				
ANR	960767	AssignmentExpression	ch2 = ch		960242	0		=			
ANR	960768	Identifier	ch2		960242	0					
ANR	960769	Identifier	ch		960242	1					
ANR	960770	ExpressionStatement	"r_cons_printf ( ""%s%c%c"" , color , ch , ch2 )"	692:4:30169:30209	960242	1	True				
ANR	960771	CallExpression	"r_cons_printf ( ""%s%c%c"" , color , ch , ch2 )"		960242	0					
ANR	960772	Callee	r_cons_printf		960242	0					
ANR	960773	Identifier	r_cons_printf		960242	0					
ANR	960774	ArgumentList	"""%s%c%c"""		960242	1					
ANR	960775	Argument	"""%s%c%c"""		960242	0					
ANR	960776	PrimaryExpression	"""%s%c%c"""		960242	0					
ANR	960777	Argument	color		960242	1					
ANR	960778	Identifier	color		960242	0					
ANR	960779	Argument	ch		960242	2					
ANR	960780	Identifier	ch		960242	0					
ANR	960781	Argument	ch2		960242	3					
ANR	960782	Identifier	ch2		960242	0					
ANR	960783	ElseStatement	else		960242	0					
ANR	960784	CompoundStatement		73:10:2151:2151	960242	0					
ANR	960785	ExpressionStatement	"r_cons_printf ( ""%s%c"" , color , ch )"	694:4:30227:30260	960242	0	True				
ANR	960786	CallExpression	"r_cons_printf ( ""%s%c"" , color , ch )"		960242	0					
ANR	960787	Callee	r_cons_printf		960242	0					
ANR	960788	Identifier	r_cons_printf		960242	0					
ANR	960789	ArgumentList	"""%s%c"""		960242	1					
ANR	960790	Argument	"""%s%c"""		960242	0					
ANR	960791	PrimaryExpression	"""%s%c"""		960242	0					
ANR	960792	Argument	color		960242	1					
ANR	960793	Identifier	color		960242	0					
ANR	960794	Argument	ch		960242	2					
ANR	960795	Identifier	ch		960242	0					
ANR	960796	ExpressionStatement	free ( color )	696:3:30270:30282	960242	4	True				
ANR	960797	CallExpression	free ( color )		960242	0					
ANR	960798	Callee	free		960242	0					
ANR	960799	Identifier	free		960242	0					
ANR	960800	ArgumentList	color		960242	1					
ANR	960801	Argument	color		960242	0					
ANR	960802	Identifier	color		960242	0					
ANR	960803	IfStatement	if ( show_color )		960242	3					
ANR	960804	Condition	show_color	698:6:30294:30303	960242	0	True				
ANR	960805	Identifier	show_color		960242	0					
ANR	960806	CompoundStatement		78:18:2236:2236	960242	1					
ANR	960807	ExpressionStatement	r_cons_printf ( Color_RESET )	699:3:30311:30338	960242	0	True				
ANR	960808	CallExpression	r_cons_printf ( Color_RESET )		960242	0					
ANR	960809	Callee	r_cons_printf		960242	0					
ANR	960810	Identifier	r_cons_printf		960242	0					
ANR	960811	ArgumentList	Color_RESET		960242	1					
ANR	960812	Argument	Color_RESET		960242	0					
ANR	960813	Identifier	Color_RESET		960242	0					
ANR	960814	ExpressionStatement	r_cons_newline ( )	701:2:30346:30363	960242	4	True				
ANR	960815	CallExpression	r_cons_newline ( )		960242	0					
ANR	960816	Callee	r_cons_newline		960242	0					
ANR	960817	Identifier	r_cons_newline		960242	0					
ANR	960818	ArgumentList			960242	1					
ANR	960819	ReturnType	static void		960242	1					
ANR	960820	Identifier	cmd_prc		960242	2					
ANR	960821	ParameterList	"RCore * core , const ut8 * block , int len"		960242	3					
ANR	960822	Parameter	RCore * core	621:20:28029:28039	960242	0	True				
ANR	960823	ParameterType	RCore *		960242	0					
ANR	960824	Identifier	core		960242	1					
ANR	960825	Parameter	const ut8 * block	621:33:28042:28057	960242	1	True				
ANR	960826	ParameterType	const ut8 *		960242	0					
ANR	960827	Identifier	block		960242	1					
ANR	960828	Parameter	int len	621:51:28060:28066	960242	2	True				
ANR	960829	ParameterType	int		960242	0					
ANR	960830	Identifier	len		960242	1					
ANR	960831	CFGEntryNode	ENTRY		960242		True				
ANR	960832	CFGExitNode	EXIT		960242		True				
ANR	960833	Symbol	* fi -> name		960242						
ANR	960834	Symbol	fi -> name		960242						
ANR	960835	Symbol	core -> offset		960242						
ANR	960836	Symbol	strlen		960242						
ANR	960837	Symbol	len		960242						
ANR	960838	Symbol	show_color		960242						
ANR	960839	Symbol	* idx		960242						
ANR	960840	Symbol	block		960242						
ANR	960841	Symbol	show_flags		960242						
ANR	960842	Symbol	core -> print -> io_unalloc_ch		960242						
ANR	960843	Symbol	colormap		960242						
ANR	960844	Symbol	R_PRINT_FLAGS_UNALLOC		960242						
ANR	960845	Symbol	r_flag_get_i		960242						
ANR	960846	Symbol	show_unalloc		960242						
ANR	960847	Symbol	* * j		960242						
ANR	960848	Symbol	r_core_get_section_name		960242						
ANR	960849	Symbol	NULL		960242						
ANR	960850	Symbol	show_cursor		960242						
ANR	960851	Symbol	* * fi		960242						
ANR	960852	Symbol	str		960242						
ANR	960853	Symbol	core		960242						
ANR	960854	Symbol	square		960242						
ANR	960855	Symbol	core -> print -> cur		960242						
ANR	960856	Symbol	r_config_get_i		960242						
ANR	960857	Symbol	name		960242						
ANR	960858	Symbol	core -> print		960242						
ANR	960859	Symbol	idx		960242						
ANR	960860	Symbol	core -> print -> flags		960242						
ANR	960861	Symbol	fi		960242						
ANR	960862	Symbol	color		960242						
ANR	960863	Symbol	* core		960242						
ANR	960864	Symbol	Color_RESET		960242						
ANR	960865	Symbol	r_str_newf		960242						
ANR	960866	Symbol	r_cons_pal_parse		960242						
ANR	960867	Symbol	* colormap		960242						
ANR	960868	Symbol	core -> print -> iob . is_valid_offset		960242						
ANR	960869	Symbol	color_val		960242						
ANR	960870	Symbol	cols		960242						
ANR	960871	Symbol	* * core		960242						
ANR	960872	Symbol	core -> config		960242						
ANR	960873	Symbol	* chars		960242						
ANR	960874	Symbol	ch		960242						
ANR	960875	Symbol	false		960242						
ANR	960876	Symbol	i		960242						
ANR	960877	Symbol	j		960242						
ANR	960878	Symbol	core -> flags		960242						
ANR	960879	Symbol	* fi		960242						
ANR	960880	Symbol	ch2		960242						
ANR	960881	Symbol	* block		960242						
ANR	960882	Symbol	core -> print -> iob		960242						
ANR	960883	Symbol	* core -> print		960242						
ANR	960884	Symbol	brightness		960242						
ANR	960885	Symbol	* j		960242						
ANR	960886	Symbol	* * block		960242						
ANR	960887	Symbol	strdup		960242						
ANR	960888	Symbol	core -> print -> iob . io		960242						
ANR	960889	Symbol	chars		960242						
ANR	960890	Symbol	core -> print -> cur_enabled		960242						
ANR	960891	Symbol	show_section		960242						
ANR	960892	Function	cmd_prc_zoom	705:0:30371:33153							
ANR	960893	FunctionDef	"cmd_prc_zoom (RCore * core , const char * input)"		960892	0					
ANR	960894	CompoundStatement		705:57:30428:33153	960892	0					
ANR	960895	IdentifierDeclStatement	"const char * chars = "" .,:;!O@#"" ;"	706:1:30431:30462	960892	0	True				
ANR	960896	IdentifierDecl	"* chars = "" .,:;!O@#"""		960892	0					
ANR	960897	IdentifierDeclType	const char *		960892	0					
ANR	960898	Identifier	chars		960892	1					
ANR	960899	AssignmentExpression	"* chars = "" .,:;!O@#"""		960892	2		=			
ANR	960900	Identifier	chars		960892	0					
ANR	960901	PrimaryExpression	""" .,:;!O@#"""		960892	1					
ANR	960902	IdentifierDeclStatement	"bool square = r_config_get_i ( core -> config , ""scr.square"" ) ;"	707:1:30465:30522	960892	1	True				
ANR	960903	IdentifierDecl	"square = r_config_get_i ( core -> config , ""scr.square"" )"		960892	0					
ANR	960904	IdentifierDeclType	bool		960892	0					
ANR	960905	Identifier	square		960892	1					
ANR	960906	AssignmentExpression	"square = r_config_get_i ( core -> config , ""scr.square"" )"		960892	2		=			
ANR	960907	Identifier	square		960892	0					
ANR	960908	CallExpression	"r_config_get_i ( core -> config , ""scr.square"" )"		960892	1					
ANR	960909	Callee	r_config_get_i		960892	0					
ANR	960910	Identifier	r_config_get_i		960892	0					
ANR	960911	ArgumentList	core -> config		960892	1					
ANR	960912	Argument	core -> config		960892	0					
ANR	960913	PtrMemberAccess	core -> config		960892	0					
ANR	960914	Identifier	core		960892	0					
ANR	960915	Identifier	config		960892	1					
ANR	960916	Argument	"""scr.square"""		960892	1					
ANR	960917	PrimaryExpression	"""scr.square"""		960892	0					
ANR	960918	IdentifierDeclStatement	"int i , j ;"	708:1:30525:30533	960892	2	True				
ANR	960919	IdentifierDecl	i		960892	0					
ANR	960920	IdentifierDeclType	int		960892	0					
ANR	960921	Identifier	i		960892	1					
ANR	960922	IdentifierDecl	j		960892	1					
ANR	960923	IdentifierDeclType	int		960892	0					
ANR	960924	Identifier	j		960892	1					
ANR	960925	IdentifierDeclStatement	"char ch , ch2 , * color ;"	709:1:30536:30556	960892	3	True				
ANR	960926	IdentifierDecl	ch		960892	0					
ANR	960927	IdentifierDeclType	char		960892	0					
ANR	960928	Identifier	ch		960892	1					
ANR	960929	IdentifierDecl	ch2		960892	1					
ANR	960930	IdentifierDeclType	char		960892	0					
ANR	960931	Identifier	ch2		960892	1					
ANR	960932	IdentifierDecl	* color		960892	2					
ANR	960933	IdentifierDeclType	char *		960892	0					
ANR	960934	Identifier	color		960892	1					
ANR	960935	IdentifierDeclStatement	"int cols = r_config_get_i ( core -> config , ""hex.cols"" ) ;"	710:1:30559:30611	960892	4	True				
ANR	960936	IdentifierDecl	"cols = r_config_get_i ( core -> config , ""hex.cols"" )"		960892	0					
ANR	960937	IdentifierDeclType	int		960892	0					
ANR	960938	Identifier	cols		960892	1					
ANR	960939	AssignmentExpression	"cols = r_config_get_i ( core -> config , ""hex.cols"" )"		960892	2		=			
ANR	960940	Identifier	cols		960892	0					
ANR	960941	CallExpression	"r_config_get_i ( core -> config , ""hex.cols"" )"		960892	1					
ANR	960942	Callee	r_config_get_i		960892	0					
ANR	960943	Identifier	r_config_get_i		960892	0					
ANR	960944	ArgumentList	core -> config		960892	1					
ANR	960945	Argument	core -> config		960892	0					
ANR	960946	PtrMemberAccess	core -> config		960892	0					
ANR	960947	Identifier	core		960892	0					
ANR	960948	Identifier	config		960892	1					
ANR	960949	Argument	"""hex.cols"""		960892	1					
ANR	960950	PrimaryExpression	"""hex.cols"""		960892	0					
ANR	960951	IdentifierDeclStatement	"bool show_color = r_config_get_i ( core -> config , ""scr.color"" ) ;"	711:1:30614:30674	960892	5	True				
ANR	960952	IdentifierDecl	"show_color = r_config_get_i ( core -> config , ""scr.color"" )"		960892	0					
ANR	960953	IdentifierDeclType	bool		960892	0					
ANR	960954	Identifier	show_color		960892	1					
ANR	960955	AssignmentExpression	"show_color = r_config_get_i ( core -> config , ""scr.color"" )"		960892	2		=			
ANR	960956	Identifier	show_color		960892	0					
ANR	960957	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		960892	1					
ANR	960958	Callee	r_config_get_i		960892	0					
ANR	960959	Identifier	r_config_get_i		960892	0					
ANR	960960	ArgumentList	core -> config		960892	1					
ANR	960961	Argument	core -> config		960892	0					
ANR	960962	PtrMemberAccess	core -> config		960892	0					
ANR	960963	Identifier	core		960892	0					
ANR	960964	Identifier	config		960892	1					
ANR	960965	Argument	"""scr.color"""		960892	1					
ANR	960966	PrimaryExpression	"""scr.color"""		960892	0					
ANR	960967	IdentifierDeclStatement	"bool show_flags = r_config_get_i ( core -> config , ""asm.flags"" ) ;"	712:1:30677:30737	960892	6	True				
ANR	960968	IdentifierDecl	"show_flags = r_config_get_i ( core -> config , ""asm.flags"" )"		960892	0					
ANR	960969	IdentifierDeclType	bool		960892	0					
ANR	960970	Identifier	show_flags		960892	1					
ANR	960971	AssignmentExpression	"show_flags = r_config_get_i ( core -> config , ""asm.flags"" )"		960892	2		=			
ANR	960972	Identifier	show_flags		960892	0					
ANR	960973	CallExpression	"r_config_get_i ( core -> config , ""asm.flags"" )"		960892	1					
ANR	960974	Callee	r_config_get_i		960892	0					
ANR	960975	Identifier	r_config_get_i		960892	0					
ANR	960976	ArgumentList	core -> config		960892	1					
ANR	960977	Argument	core -> config		960892	0					
ANR	960978	PtrMemberAccess	core -> config		960892	0					
ANR	960979	Identifier	core		960892	0					
ANR	960980	Identifier	config		960892	1					
ANR	960981	Argument	"""asm.flags"""		960892	1					
ANR	960982	PrimaryExpression	"""asm.flags"""		960892	0					
ANR	960983	IdentifierDeclStatement	bool show_cursor = core -> print -> cur_enabled ;	713:1:30740:30783	960892	7	True				
ANR	960984	IdentifierDecl	show_cursor = core -> print -> cur_enabled		960892	0					
ANR	960985	IdentifierDeclType	bool		960892	0					
ANR	960986	Identifier	show_cursor		960892	1					
ANR	960987	AssignmentExpression	show_cursor = core -> print -> cur_enabled		960892	2		=			
ANR	960988	Identifier	show_cursor		960892	0					
ANR	960989	PtrMemberAccess	core -> print -> cur_enabled		960892	1					
ANR	960990	PtrMemberAccess	core -> print		960892	0					
ANR	960991	Identifier	core		960892	0					
ANR	960992	Identifier	print		960892	1					
ANR	960993	Identifier	cur_enabled		960892	1					
ANR	960994	IdentifierDeclStatement	bool show_unalloc = core -> print -> flags & R_PRINT_FLAGS_UNALLOC ;	714:1:30786:30848	960892	8	True				
ANR	960995	IdentifierDecl	show_unalloc = core -> print -> flags & R_PRINT_FLAGS_UNALLOC		960892	0					
ANR	960996	IdentifierDeclType	bool		960892	0					
ANR	960997	Identifier	show_unalloc		960892	1					
ANR	960998	AssignmentExpression	show_unalloc = core -> print -> flags & R_PRINT_FLAGS_UNALLOC		960892	2		=			
ANR	960999	Identifier	show_unalloc		960892	0					
ANR	961000	BitAndExpression	core -> print -> flags & R_PRINT_FLAGS_UNALLOC		960892	1		&			
ANR	961001	PtrMemberAccess	core -> print -> flags		960892	0					
ANR	961002	PtrMemberAccess	core -> print		960892	0					
ANR	961003	Identifier	core		960892	0					
ANR	961004	Identifier	print		960892	1					
ANR	961005	Identifier	flags		960892	1					
ANR	961006	Identifier	R_PRINT_FLAGS_UNALLOC		960892	1					
ANR	961007	IdentifierDeclStatement	ut8 * block = core -> block ;	715:1:30851:30875	960892	9	True				
ANR	961008	IdentifierDecl	* block = core -> block		960892	0					
ANR	961009	IdentifierDeclType	ut8 *		960892	0					
ANR	961010	Identifier	block		960892	1					
ANR	961011	AssignmentExpression	* block = core -> block		960892	2		=			
ANR	961012	Identifier	block		960892	0					
ANR	961013	PtrMemberAccess	core -> block		960892	1					
ANR	961014	Identifier	core		960892	0					
ANR	961015	Identifier	block		960892	1					
ANR	961016	IdentifierDeclStatement	int len = core -> blocksize ;	716:1:30878:30903	960892	10	True				
ANR	961017	IdentifierDecl	len = core -> blocksize		960892	0					
ANR	961018	IdentifierDeclType	int		960892	0					
ANR	961019	Identifier	len		960892	1					
ANR	961020	AssignmentExpression	len = core -> blocksize		960892	2		=			
ANR	961021	Identifier	len		960892	0					
ANR	961022	PtrMemberAccess	core -> blocksize		960892	1					
ANR	961023	Identifier	core		960892	0					
ANR	961024	Identifier	blocksize		960892	1					
ANR	961025	IdentifierDeclStatement	ut64 from = 0 ;	717:1:30906:30919	960892	11	True				
ANR	961026	IdentifierDecl	from = 0		960892	0					
ANR	961027	IdentifierDeclType	ut64		960892	0					
ANR	961028	Identifier	from		960892	1					
ANR	961029	AssignmentExpression	from = 0		960892	2		=			
ANR	961030	Identifier	from		960892	0					
ANR	961031	PrimaryExpression	0		960892	1					
ANR	961032	IdentifierDeclStatement	ut64 to = 0 ;	718:1:30922:30933	960892	12	True				
ANR	961033	IdentifierDecl	to = 0		960892	0					
ANR	961034	IdentifierDeclType	ut64		960892	0					
ANR	961035	Identifier	to		960892	1					
ANR	961036	AssignmentExpression	to = 0		960892	2		=			
ANR	961037	Identifier	to		960892	0					
ANR	961038	PrimaryExpression	0		960892	1					
ANR	961039	IdentifierDeclStatement	RIOMap * map ;	719:1:30936:30947	960892	13	True				
ANR	961040	IdentifierDecl	* map		960892	0					
ANR	961041	IdentifierDeclType	RIOMap *		960892	0					
ANR	961042	Identifier	map		960892	1					
ANR	961043	IdentifierDeclStatement	RListIter * iter ;	720:1:30950:30965	960892	14	True				
ANR	961044	IdentifierDecl	* iter		960892	0					
ANR	961045	IdentifierDeclType	RListIter *		960892	0					
ANR	961046	Identifier	iter		960892	1					
ANR	961047	IfStatement	if ( cols < 1 || cols > 0xfffff )		960892	15					
ANR	961048	Condition	cols < 1 || cols > 0xfffff	722:5:30973:30998	960892	0	True				
ANR	961049	OrExpression	cols < 1 || cols > 0xfffff		960892	0		||			
ANR	961050	RelationalExpression	cols < 1		960892	0		<			
ANR	961051	Identifier	cols		960892	0					
ANR	961052	PrimaryExpression	1		960892	1					
ANR	961053	RelationalExpression	cols > 0xfffff		960892	1		>			
ANR	961054	Identifier	cols		960892	0					
ANR	961055	PrimaryExpression	0xfffff		960892	1					
ANR	961056	CompoundStatement		18:33:572:572	960892	1					
ANR	961057	ExpressionStatement	cols = 32	723:2:31005:31014	960892	0	True				
ANR	961058	AssignmentExpression	cols = 32		960892	0		=			
ANR	961059	Identifier	cols		960892	0					
ANR	961060	PrimaryExpression	32		960892	1					
ANR	961061	IdentifierDeclStatement	"RList * list = r_core_get_boundaries_prot ( core , - 1 , NULL , ""zoom"" ) ;"	725:1:31020:31085	960892	16	True				
ANR	961062	IdentifierDecl	"* list = r_core_get_boundaries_prot ( core , - 1 , NULL , ""zoom"" )"		960892	0					
ANR	961063	IdentifierDeclType	RList *		960892	0					
ANR	961064	Identifier	list		960892	1					
ANR	961065	AssignmentExpression	"* list = r_core_get_boundaries_prot ( core , - 1 , NULL , ""zoom"" )"		960892	2		=			
ANR	961066	Identifier	list		960892	0					
ANR	961067	CallExpression	"r_core_get_boundaries_prot ( core , - 1 , NULL , ""zoom"" )"		960892	1					
ANR	961068	Callee	r_core_get_boundaries_prot		960892	0					
ANR	961069	Identifier	r_core_get_boundaries_prot		960892	0					
ANR	961070	ArgumentList	core		960892	1					
ANR	961071	Argument	core		960892	0					
ANR	961072	Identifier	core		960892	0					
ANR	961073	Argument	- 1		960892	1					
ANR	961074	UnaryOperationExpression	- 1		960892	0					
ANR	961075	UnaryOperator	-		960892	0					
ANR	961076	PrimaryExpression	1		960892	1					
ANR	961077	Argument	NULL		960892	2					
ANR	961078	Identifier	NULL		960892	0					
ANR	961079	Argument	"""zoom"""		960892	3					
ANR	961080	PrimaryExpression	"""zoom"""		960892	0					
ANR	961081	IfStatement	if ( list && r_list_length ( list ) > 0 )		960892	17					
ANR	961082	Condition	list && r_list_length ( list ) > 0	726:5:31092:31123	960892	0	True				
ANR	961083	AndExpression	list && r_list_length ( list ) > 0		960892	0		&&			
ANR	961084	Identifier	list		960892	0					
ANR	961085	RelationalExpression	r_list_length ( list ) > 0		960892	1		>			
ANR	961086	CallExpression	r_list_length ( list )		960892	0					
ANR	961087	Callee	r_list_length		960892	0					
ANR	961088	Identifier	r_list_length		960892	0					
ANR	961089	ArgumentList	list		960892	1					
ANR	961090	Argument	list		960892	0					
ANR	961091	Identifier	list		960892	0					
ANR	961092	PrimaryExpression	0		960892	1					
ANR	961093	CompoundStatement		24:2:734:760	960892	1					
ANR	961094	IdentifierDeclStatement	RListIter * iter1 = list -> head ;	727:2:31130:31159	960892	0	True				
ANR	961095	IdentifierDecl	* iter1 = list -> head		960892	0					
ANR	961096	IdentifierDeclType	RListIter *		960892	0					
ANR	961097	Identifier	iter1		960892	1					
ANR	961098	AssignmentExpression	* iter1 = list -> head		960892	2		=			
ANR	961099	Identifier	iter1		960892	0					
ANR	961100	PtrMemberAccess	list -> head		960892	1					
ANR	961101	Identifier	list		960892	0					
ANR	961102	Identifier	head		960892	1					
ANR	961103	IdentifierDeclStatement	RIOMap * map1 = iter1 -> data ;	728:2:31163:31189	960892	1	True				
ANR	961104	IdentifierDecl	* map1 = iter1 -> data		960892	0					
ANR	961105	IdentifierDeclType	RIOMap *		960892	0					
ANR	961106	Identifier	map1		960892	1					
ANR	961107	AssignmentExpression	* map1 = iter1 -> data		960892	2		=			
ANR	961108	Identifier	map1		960892	0					
ANR	961109	PtrMemberAccess	iter1 -> data		960892	1					
ANR	961110	Identifier	iter1		960892	0					
ANR	961111	Identifier	data		960892	1					
ANR	961112	ExpressionStatement	from = map1 -> itv . addr	729:2:31193:31214	960892	2	True				
ANR	961113	AssignmentExpression	from = map1 -> itv . addr		960892	0		=			
ANR	961114	Identifier	from		960892	0					
ANR	961115	MemberAccess	map1 -> itv . addr		960892	1					
ANR	961116	PtrMemberAccess	map1 -> itv		960892	0					
ANR	961117	Identifier	map1		960892	0					
ANR	961118	Identifier	itv		960892	1					
ANR	961119	Identifier	addr		960892	1					
ANR	961120	Statement	r_list_foreach	730:2:31218:31231	960892	3	True				
ANR	961121	Statement	(	730:17:31233:31233	960892	4	True				
ANR	961122	Statement	list	730:18:31234:31237	960892	5	True				
ANR	961123	Statement	","	730:22:31238:31238	960892	6	True				
ANR	961124	Statement	iter	730:24:31240:31243	960892	7	True				
ANR	961125	Statement	","	730:28:31244:31244	960892	8	True				
ANR	961126	Statement	map	730:30:31246:31248	960892	9	True				
ANR	961127	Statement	)	730:33:31249:31249	960892	10	True				
ANR	961128	CompoundStatement		26:35:822:822	960892	11					
ANR	961129	ExpressionStatement	to = r_itv_end ( map -> itv )	731:3:31256:31281	960892	0	True				
ANR	961130	AssignmentExpression	to = r_itv_end ( map -> itv )		960892	0		=			
ANR	961131	Identifier	to		960892	0					
ANR	961132	CallExpression	r_itv_end ( map -> itv )		960892	1					
ANR	961133	Callee	r_itv_end		960892	0					
ANR	961134	Identifier	r_itv_end		960892	0					
ANR	961135	ArgumentList	map -> itv		960892	1					
ANR	961136	Argument	map -> itv		960892	0					
ANR	961137	PtrMemberAccess	map -> itv		960892	0					
ANR	961138	Identifier	map		960892	0					
ANR	961139	Identifier	itv		960892	1					
ANR	961140	ElseStatement	else		960892	0					
ANR	961141	CompoundStatement		29:8:866:866	960892	0					
ANR	961142	ExpressionStatement	from = core -> offset	734:2:31299:31318	960892	0	True				
ANR	961143	AssignmentExpression	from = core -> offset		960892	0		=			
ANR	961144	Identifier	from		960892	0					
ANR	961145	PtrMemberAccess	core -> offset		960892	1					
ANR	961146	Identifier	core		960892	0					
ANR	961147	Identifier	offset		960892	1					
ANR	961148	ExpressionStatement	to = from + core -> blocksize	735:2:31322:31349	960892	1	True				
ANR	961149	AssignmentExpression	to = from + core -> blocksize		960892	0		=			
ANR	961150	Identifier	to		960892	0					
ANR	961151	AdditiveExpression	from + core -> blocksize		960892	1		+			
ANR	961152	Identifier	from		960892	0					
ANR	961153	PtrMemberAccess	core -> blocksize		960892	1					
ANR	961154	Identifier	core		960892	0					
ANR	961155	Identifier	blocksize		960892	1					
ANR	961156	ExpressionStatement	core -> print -> zoom -> mode = ( input && * input ) ? input [ 1 ] : 'e'	738:1:31356:31414	960892	18	True				
ANR	961157	AssignmentExpression	core -> print -> zoom -> mode = ( input && * input ) ? input [ 1 ] : 'e'		960892	0		=			
ANR	961158	PtrMemberAccess	core -> print -> zoom -> mode		960892	0					
ANR	961159	PtrMemberAccess	core -> print -> zoom		960892	0					
ANR	961160	PtrMemberAccess	core -> print		960892	0					
ANR	961161	Identifier	core		960892	0					
ANR	961162	Identifier	print		960892	1					
ANR	961163	Identifier	zoom		960892	1					
ANR	961164	Identifier	mode		960892	1					
ANR	961165	ConditionalExpression	( input && * input ) ? input [ 1 ] : 'e'		960892	1					
ANR	961166	Condition	input && * input		960892	0					
ANR	961167	AndExpression	input && * input		960892	0		&&			
ANR	961168	Identifier	input		960892	0					
ANR	961169	UnaryOperationExpression	* input		960892	1					
ANR	961170	UnaryOperator	*		960892	0					
ANR	961171	Identifier	input		960892	1					
ANR	961172	ArrayIndexing	input [ 1 ]		960892	1					
ANR	961173	Identifier	input		960892	0					
ANR	961174	PrimaryExpression	1		960892	1					
ANR	961175	PrimaryExpression	'e'		960892	2					
ANR	961176	ExpressionStatement	"r_print_zoom_buf ( core -> print , core , printzoomcallback , from , to , len , len )"	739:1:31417:31492	960892	19	True				
ANR	961177	CallExpression	"r_print_zoom_buf ( core -> print , core , printzoomcallback , from , to , len , len )"		960892	0					
ANR	961178	Callee	r_print_zoom_buf		960892	0					
ANR	961179	Identifier	r_print_zoom_buf		960892	0					
ANR	961180	ArgumentList	core -> print		960892	1					
ANR	961181	Argument	core -> print		960892	0					
ANR	961182	PtrMemberAccess	core -> print		960892	0					
ANR	961183	Identifier	core		960892	0					
ANR	961184	Identifier	print		960892	1					
ANR	961185	Argument	core		960892	1					
ANR	961186	Identifier	core		960892	0					
ANR	961187	Argument	printzoomcallback		960892	2					
ANR	961188	Identifier	printzoomcallback		960892	0					
ANR	961189	Argument	from		960892	3					
ANR	961190	Identifier	from		960892	0					
ANR	961191	Argument	to		960892	4					
ANR	961192	Identifier	to		960892	0					
ANR	961193	Argument	len		960892	5					
ANR	961194	Identifier	len		960892	0					
ANR	961195	Argument	len		960892	6					
ANR	961196	Identifier	len		960892	0					
ANR	961197	ExpressionStatement	block = core -> print -> zoom -> buf	740:1:31495:31525	960892	20	True				
ANR	961198	AssignmentExpression	block = core -> print -> zoom -> buf		960892	0		=			
ANR	961199	Identifier	block		960892	0					
ANR	961200	PtrMemberAccess	core -> print -> zoom -> buf		960892	1					
ANR	961201	PtrMemberAccess	core -> print -> zoom		960892	0					
ANR	961202	PtrMemberAccess	core -> print		960892	0					
ANR	961203	Identifier	core		960892	0					
ANR	961204	Identifier	print		960892	1					
ANR	961205	Identifier	zoom		960892	1					
ANR	961206	Identifier	buf		960892	1					
ANR	961207	SwitchStatement	switch ( core -> print -> zoom -> mode )		960892	21					
ANR	961208	Condition	core -> print -> zoom -> mode	741:9:31536:31558	960892	0	True				
ANR	961209	PtrMemberAccess	core -> print -> zoom -> mode		960892	0					
ANR	961210	PtrMemberAccess	core -> print -> zoom		960892	0					
ANR	961211	PtrMemberAccess	core -> print		960892	0					
ANR	961212	Identifier	core		960892	0					
ANR	961213	Identifier	print		960892	1					
ANR	961214	Identifier	zoom		960892	1					
ANR	961215	Identifier	mode		960892	1					
ANR	961216	CompoundStatement		37:34:1132:1132	960892	1					
ANR	961217	Label	case 'f' :	742:1:31564:31572	960892	0	True				
ANR	961218	ForStatement	for ( i = 0 ; i < core -> print -> zoom -> size ; i ++ )		960892	1					
ANR	961219	ForInit	i = 0 ;	744:7:31651:31656	960892	0	True				
ANR	961220	AssignmentExpression	i = 0		960892	0		=			
ANR	961221	Identifier	i		960892	0					
ANR	961222	PrimaryExpression	0		960892	1					
ANR	961223	Condition	i < core -> print -> zoom -> size	744:14:31658:31684	960892	1	True				
ANR	961224	RelationalExpression	i < core -> print -> zoom -> size		960892	0		<			
ANR	961225	Identifier	i		960892	0					
ANR	961226	PtrMemberAccess	core -> print -> zoom -> size		960892	1					
ANR	961227	PtrMemberAccess	core -> print -> zoom		960892	0					
ANR	961228	PtrMemberAccess	core -> print		960892	0					
ANR	961229	Identifier	core		960892	0					
ANR	961230	Identifier	print		960892	1					
ANR	961231	Identifier	zoom		960892	1					
ANR	961232	Identifier	size		960892	1					
ANR	961233	PostIncDecOperationExpression	i ++	744:43:31687:31689	960892	2	True				
ANR	961234	Identifier	i		960892	0					
ANR	961235	IncDec	++		960892	1					
ANR	961236	CompoundStatement		40:48:1263:1263	960892	3					
ANR	961237	ExpressionStatement	block [ i ] *= 8	745:3:31697:31710	960892	0	True				
ANR	961238	AssignmentExpression	block [ i ] *= 8		960892	0		*=			
ANR	961239	ArrayIndexing	block [ i ]		960892	0					
ANR	961240	Identifier	block		960892	0					
ANR	961241	Identifier	i		960892	1					
ANR	961242	PrimaryExpression	8		960892	1					
ANR	961243	BreakStatement	break ;	747:2:31718:31723	960892	2	True				
ANR	961244	ForStatement	for ( i = 0 ; i < len ; i += cols )		960892	22					
ANR	961245	ForInit	i = 0 ;	750:6:31735:31740	960892	0	True				
ANR	961246	AssignmentExpression	i = 0		960892	0		=			
ANR	961247	Identifier	i		960892	0					
ANR	961248	PrimaryExpression	0		960892	1					
ANR	961249	Condition	i < len	750:13:31742:31748	960892	1	True				
ANR	961250	RelationalExpression	i < len		960892	0		<			
ANR	961251	Identifier	i		960892	0					
ANR	961252	Identifier	len		960892	1					
ANR	961253	AssignmentExpression	i += cols	750:22:31751:31759	960892	2	True	+=			
ANR	961254	Identifier	i		960892	0					
ANR	961255	Identifier	cols		960892	1					
ANR	961256	CompoundStatement		47:2:1337:1363	960892	3					
ANR	961257	IdentifierDeclStatement	ut64 ea = core -> offset + i ;	751:2:31766:31792	960892	0	True				
ANR	961258	IdentifierDecl	ea = core -> offset + i		960892	0					
ANR	961259	IdentifierDeclType	ut64		960892	0					
ANR	961260	Identifier	ea		960892	1					
ANR	961261	AssignmentExpression	ea = core -> offset + i		960892	2		=			
ANR	961262	Identifier	ea		960892	0					
ANR	961263	AdditiveExpression	core -> offset + i		960892	1		+			
ANR	961264	PtrMemberAccess	core -> offset		960892	0					
ANR	961265	Identifier	core		960892	0					
ANR	961266	Identifier	offset		960892	1					
ANR	961267	Identifier	i		960892	1					
ANR	961268	ExpressionStatement	"r_print_addr ( core -> print , ea )"	752:2:31796:31826	960892	1	True				
ANR	961269	CallExpression	"r_print_addr ( core -> print , ea )"		960892	0					
ANR	961270	Callee	r_print_addr		960892	0					
ANR	961271	Identifier	r_print_addr		960892	0					
ANR	961272	ArgumentList	core -> print		960892	1					
ANR	961273	Argument	core -> print		960892	0					
ANR	961274	PtrMemberAccess	core -> print		960892	0					
ANR	961275	Identifier	core		960892	0					
ANR	961276	Identifier	print		960892	1					
ANR	961277	Argument	ea		960892	1					
ANR	961278	Identifier	ea		960892	0					
ANR	961279	ForStatement	for ( j = i ; j < i + cols ; j ++ )		960892	2					
ANR	961280	ForInit	j = i ;	753:7:31835:31840	960892	0	True				
ANR	961281	AssignmentExpression	j = i		960892	0		=			
ANR	961282	Identifier	j		960892	0					
ANR	961283	Identifier	i		960892	1					
ANR	961284	Condition	j < i + cols	753:14:31842:31853	960892	1	True				
ANR	961285	RelationalExpression	j < i + cols		960892	0		<			
ANR	961286	Identifier	j		960892	0					
ANR	961287	AdditiveExpression	i + cols		960892	1		+			
ANR	961288	Identifier	i		960892	0					
ANR	961289	Identifier	cols		960892	1					
ANR	961290	PostIncDecOperationExpression	j ++	753:28:31856:31859	960892	2	True				
ANR	961291	Identifier	j		960892	0					
ANR	961292	IncDec	++		960892	1					
ANR	961293	CompoundStatement		49:34:1433:1433	960892	3					
ANR	961294	IfStatement	if ( j >= len )		960892	0					
ANR	961295	Condition	j >= len	754:7:31871:31878	960892	0	True				
ANR	961296	RelationalExpression	j >= len		960892	0		>=			
ANR	961297	Identifier	j		960892	0					
ANR	961298	Identifier	len		960892	1					
ANR	961299	CompoundStatement		50:17:1452:1452	960892	1					
ANR	961300	BreakStatement	break ;	755:4:31887:31892	960892	0	True				
ANR	961301	IfStatement	if ( show_color )		960892	1					
ANR	961302	Condition	show_color	757:7:31906:31915	960892	0	True				
ANR	961303	Identifier	show_color		960892	0					
ANR	961304	CompoundStatement		54:4:1495:1558	960892	1					
ANR	961305	IdentifierDeclStatement	"char * str = r_str_newf ( ""rgb:fff rgb:%06x"" , colormap [ block [ j ] ] ) ;"	758:4:31924:31987	960892	0	True				
ANR	961306	IdentifierDecl	"* str = r_str_newf ( ""rgb:fff rgb:%06x"" , colormap [ block [ j ] ] )"		960892	0					
ANR	961307	IdentifierDeclType	char *		960892	0					
ANR	961308	Identifier	str		960892	1					
ANR	961309	AssignmentExpression	"* str = r_str_newf ( ""rgb:fff rgb:%06x"" , colormap [ block [ j ] ] )"		960892	2		=			
ANR	961310	Identifier	str		960892	0					
ANR	961311	CallExpression	"r_str_newf ( ""rgb:fff rgb:%06x"" , colormap [ block [ j ] ] )"		960892	1					
ANR	961312	Callee	r_str_newf		960892	0					
ANR	961313	Identifier	r_str_newf		960892	0					
ANR	961314	ArgumentList	"""rgb:fff rgb:%06x"""		960892	1					
ANR	961315	Argument	"""rgb:fff rgb:%06x"""		960892	0					
ANR	961316	PrimaryExpression	"""rgb:fff rgb:%06x"""		960892	0					
ANR	961317	Argument	colormap [ block [ j ] ]		960892	1					
ANR	961318	ArrayIndexing	colormap [ block [ j ] ]		960892	0					
ANR	961319	Identifier	colormap		960892	0					
ANR	961320	ArrayIndexing	block [ j ]		960892	1					
ANR	961321	Identifier	block		960892	0					
ANR	961322	Identifier	j		960892	1					
ANR	961323	ExpressionStatement	"color = r_cons_pal_parse ( str , NULL )"	759:4:31993:32029	960892	1	True				
ANR	961324	AssignmentExpression	"color = r_cons_pal_parse ( str , NULL )"		960892	0		=			
ANR	961325	Identifier	color		960892	0					
ANR	961326	CallExpression	"r_cons_pal_parse ( str , NULL )"		960892	1					
ANR	961327	Callee	r_cons_pal_parse		960892	0					
ANR	961328	Identifier	r_cons_pal_parse		960892	0					
ANR	961329	ArgumentList	str		960892	1					
ANR	961330	Argument	str		960892	0					
ANR	961331	Identifier	str		960892	0					
ANR	961332	Argument	NULL		960892	1					
ANR	961333	Identifier	NULL		960892	0					
ANR	961334	ExpressionStatement	free ( str )	760:4:32035:32045	960892	2	True				
ANR	961335	CallExpression	free ( str )		960892	0					
ANR	961336	Callee	free		960892	0					
ANR	961337	Identifier	free		960892	0					
ANR	961338	ArgumentList	str		960892	1					
ANR	961339	Argument	str		960892	0					
ANR	961340	Identifier	str		960892	0					
ANR	961341	IfStatement	if ( show_cursor && core -> print -> cur == j )		960892	3					
ANR	961342	Condition	show_cursor && core -> print -> cur == j	761:8:32055:32090	960892	0	True				
ANR	961343	AndExpression	show_cursor && core -> print -> cur == j		960892	0		&&			
ANR	961344	Identifier	show_cursor		960892	0					
ANR	961345	EqualityExpression	core -> print -> cur == j		960892	1		==			
ANR	961346	PtrMemberAccess	core -> print -> cur		960892	0					
ANR	961347	PtrMemberAccess	core -> print		960892	0					
ANR	961348	Identifier	core		960892	0					
ANR	961349	Identifier	print		960892	1					
ANR	961350	Identifier	cur		960892	1					
ANR	961351	Identifier	j		960892	1					
ANR	961352	CompoundStatement		57:46:1664:1664	960892	1					
ANR	961353	ExpressionStatement	ch = '_'	762:5:32100:32108	960892	0	True				
ANR	961354	AssignmentExpression	ch = '_'		960892	0		=			
ANR	961355	Identifier	ch		960892	0					
ANR	961356	PrimaryExpression	'_'		960892	1					
ANR	961357	ElseStatement	else		960892	0					
ANR	961358	CompoundStatement		59:11:1692:1692	960892	0					
ANR	961359	ExpressionStatement	ch = ' '	764:5:32128:32136	960892	0	True				
ANR	961360	AssignmentExpression	ch = ' '		960892	0		=			
ANR	961361	Identifier	ch		960892	0					
ANR	961362	PrimaryExpression	' '		960892	1					
ANR	961363	ElseStatement	else		960892	0					
ANR	961364	CompoundStatement		62:10:1725:1725	960892	0					
ANR	961365	ExpressionStatement	"color = strdup ( """" )"	767:4:32160:32179	960892	0	True				
ANR	961366	AssignmentExpression	"color = strdup ( """" )"		960892	0		=			
ANR	961367	Identifier	color		960892	0					
ANR	961368	CallExpression	"strdup ( """" )"		960892	1					
ANR	961369	Callee	strdup		960892	0					
ANR	961370	Identifier	strdup		960892	0					
ANR	961371	ArgumentList	""""""		960892	1					
ANR	961372	Argument	""""""		960892	0					
ANR	961373	PrimaryExpression	""""""		960892	0					
ANR	961374	IfStatement	if ( show_cursor && core -> print -> cur == j )		960892	1					
ANR	961375	Condition	show_cursor && core -> print -> cur == j	768:8:32189:32224	960892	0	True				
ANR	961376	AndExpression	show_cursor && core -> print -> cur == j		960892	0		&&			
ANR	961377	Identifier	show_cursor		960892	0					
ANR	961378	EqualityExpression	core -> print -> cur == j		960892	1		==			
ANR	961379	PtrMemberAccess	core -> print -> cur		960892	0					
ANR	961380	PtrMemberAccess	core -> print		960892	0					
ANR	961381	Identifier	core		960892	0					
ANR	961382	Identifier	print		960892	1					
ANR	961383	Identifier	cur		960892	1					
ANR	961384	Identifier	j		960892	1					
ANR	961385	CompoundStatement		64:46:1798:1798	960892	1					
ANR	961386	ExpressionStatement	ch = '_'	769:5:32234:32242	960892	0	True				
ANR	961387	AssignmentExpression	ch = '_'		960892	0		=			
ANR	961388	Identifier	ch		960892	0					
ANR	961389	PrimaryExpression	'_'		960892	1					
ANR	961390	ElseStatement	else		960892	0					
ANR	961391	CompoundStatement		67:5:1833:1895	960892	0					
ANR	961392	IdentifierDeclStatement	const int idx = ( ( float ) block [ j ] / 255 ) * ( strlen ( chars ) - 1 ) ;	771:5:32262:32324	960892	0	True				
ANR	961393	IdentifierDecl	idx = ( ( float ) block [ j ] / 255 ) * ( strlen ( chars ) - 1 )		960892	0					
ANR	961394	IdentifierDeclType	const int		960892	0					
ANR	961395	Identifier	idx		960892	1					
ANR	961396	AssignmentExpression	idx = ( ( float ) block [ j ] / 255 ) * ( strlen ( chars ) - 1 )		960892	2		=			
ANR	961397	Identifier	idx		960892	0					
ANR	961398	MultiplicativeExpression	( ( float ) block [ j ] / 255 ) * ( strlen ( chars ) - 1 )		960892	1		*			
ANR	961399	MultiplicativeExpression	( float ) block [ j ] / 255		960892	0		/			
ANR	961400	CastExpression	( float ) block [ j ]		960892	0					
ANR	961401	CastTarget	float		960892	0					
ANR	961402	ArrayIndexing	block [ j ]		960892	1					
ANR	961403	Identifier	block		960892	0					
ANR	961404	Identifier	j		960892	1					
ANR	961405	PrimaryExpression	255		960892	1					
ANR	961406	AdditiveExpression	strlen ( chars ) - 1		960892	1		-			
ANR	961407	CallExpression	strlen ( chars )		960892	0					
ANR	961408	Callee	strlen		960892	0					
ANR	961409	Identifier	strlen		960892	0					
ANR	961410	ArgumentList	chars		960892	1					
ANR	961411	Argument	chars		960892	0					
ANR	961412	Identifier	chars		960892	0					
ANR	961413	PrimaryExpression	1		960892	1					
ANR	961414	ExpressionStatement	ch = chars [ idx ]	772:5:32331:32346	960892	1	True				
ANR	961415	AssignmentExpression	ch = chars [ idx ]		960892	0		=			
ANR	961416	Identifier	ch		960892	0					
ANR	961417	ArrayIndexing	chars [ idx ]		960892	1					
ANR	961418	Identifier	chars		960892	0					
ANR	961419	Identifier	idx		960892	1					
ANR	961420	IfStatement	"if ( show_unalloc && ! core -> print -> iob . is_valid_offset ( core -> print -> iob . io , core -> offset + j , false ) )"		960892	2					
ANR	961421	Condition	"show_unalloc && ! core -> print -> iob . is_valid_offset ( core -> print -> iob . io , core -> offset + j , false )"	775:7:32366:32468	960892	0	True				
ANR	961422	AndExpression	"show_unalloc && ! core -> print -> iob . is_valid_offset ( core -> print -> iob . io , core -> offset + j , false )"		960892	0		&&			
ANR	961423	Identifier	show_unalloc		960892	0					
ANR	961424	UnaryOperationExpression	"! core -> print -> iob . is_valid_offset ( core -> print -> iob . io , core -> offset + j , false )"		960892	1					
ANR	961425	UnaryOperator	!		960892	0					
ANR	961426	CallExpression	"core -> print -> iob . is_valid_offset ( core -> print -> iob . io , core -> offset + j , false )"		960892	1					
ANR	961427	Callee	core -> print -> iob . is_valid_offset		960892	0					
ANR	961428	MemberAccess	core -> print -> iob . is_valid_offset		960892	0					
ANR	961429	PtrMemberAccess	core -> print -> iob		960892	0					
ANR	961430	PtrMemberAccess	core -> print		960892	0					
ANR	961431	Identifier	core		960892	0					
ANR	961432	Identifier	print		960892	1					
ANR	961433	Identifier	iob		960892	1					
ANR	961434	Identifier	is_valid_offset		960892	1					
ANR	961435	ArgumentList	core -> print -> iob . io		960892	1					
ANR	961436	Argument	core -> print -> iob . io		960892	0					
ANR	961437	MemberAccess	core -> print -> iob . io		960892	0					
ANR	961438	PtrMemberAccess	core -> print -> iob		960892	0					
ANR	961439	PtrMemberAccess	core -> print		960892	0					
ANR	961440	Identifier	core		960892	0					
ANR	961441	Identifier	print		960892	1					
ANR	961442	Identifier	iob		960892	1					
ANR	961443	Identifier	io		960892	1					
ANR	961444	Argument	core -> offset + j		960892	1					
ANR	961445	AdditiveExpression	core -> offset + j		960892	0		+			
ANR	961446	PtrMemberAccess	core -> offset		960892	0					
ANR	961447	Identifier	core		960892	0					
ANR	961448	Identifier	offset		960892	1					
ANR	961449	Identifier	j		960892	1					
ANR	961450	Argument	false		960892	2					
ANR	961451	Identifier	false		960892	0					
ANR	961452	CompoundStatement		72:89:2042:2042	960892	1					
ANR	961453	IfStatement	if ( show_color )		960892	0					
ANR	961454	Condition	show_color	777:8:32481:32490	960892	0	True				
ANR	961455	Identifier	show_color		960892	0					
ANR	961456	CompoundStatement		73:20:2064:2064	960892	1					
ANR	961457	ExpressionStatement	free ( color )	778:5:32500:32512	960892	0	True				
ANR	961458	CallExpression	free ( color )		960892	0					
ANR	961459	Callee	free		960892	0					
ANR	961460	Identifier	free		960892	0					
ANR	961461	ArgumentList	color		960892	1					
ANR	961462	Argument	color		960892	0					
ANR	961463	Identifier	color		960892	0					
ANR	961464	ExpressionStatement	color = strdup ( Color_RESET )	779:5:32519:32547	960892	1	True				
ANR	961465	AssignmentExpression	color = strdup ( Color_RESET )		960892	0		=			
ANR	961466	Identifier	color		960892	0					
ANR	961467	CallExpression	strdup ( Color_RESET )		960892	1					
ANR	961468	Callee	strdup		960892	0					
ANR	961469	Identifier	strdup		960892	0					
ANR	961470	ArgumentList	Color_RESET		960892	1					
ANR	961471	Argument	Color_RESET		960892	0					
ANR	961472	Identifier	Color_RESET		960892	0					
ANR	961473	ExpressionStatement	ch = core -> print -> io_unalloc_ch	780:5:32554:32585	960892	2	True				
ANR	961474	AssignmentExpression	ch = core -> print -> io_unalloc_ch		960892	0		=			
ANR	961475	Identifier	ch		960892	0					
ANR	961476	PtrMemberAccess	core -> print -> io_unalloc_ch		960892	1					
ANR	961477	PtrMemberAccess	core -> print		960892	0					
ANR	961478	Identifier	core		960892	0					
ANR	961479	Identifier	print		960892	1					
ANR	961480	Identifier	io_unalloc_ch		960892	1					
ANR	961481	IfStatement	if ( ch == ' ' )		960892	3					
ANR	961482	Condition	ch == ' '	781:9:32596:32604	960892	0	True				
ANR	961483	EqualityExpression	ch == ' '		960892	0		==			
ANR	961484	Identifier	ch		960892	0					
ANR	961485	PrimaryExpression	' '		960892	1					
ANR	961486	CompoundStatement		77:20:2178:2178	960892	1					
ANR	961487	ExpressionStatement	ch = '.'	782:6:32615:32623	960892	0	True				
ANR	961488	AssignmentExpression	ch = '.'		960892	0		=			
ANR	961489	Identifier	ch		960892	0					
ANR	961490	PrimaryExpression	'.'		960892	1					
ANR	961491	ElseStatement	else		960892	0					
ANR	961492	CompoundStatement		80:11:2214:2214	960892	0					
ANR	961493	ExpressionStatement	ch = '?'	785:5:32650:32658	960892	0	True				
ANR	961494	AssignmentExpression	ch = '?'		960892	0		=			
ANR	961495	Identifier	ch		960892	0					
ANR	961496	PrimaryExpression	'?'		960892	1					
ANR	961497	IfStatement	if ( square )		960892	3					
ANR	961498	Condition	square	788:7:32716:32721	960892	0	True				
ANR	961499	Identifier	square		960892	0					
ANR	961500	CompoundStatement		84:15:2295:2295	960892	1					
ANR	961501	IfStatement	if ( show_flags )		960892	0					
ANR	961502	Condition	show_flags	789:8:32734:32743	960892	0	True				
ANR	961503	Identifier	show_flags		960892	0					
ANR	961504	CompoundStatement		86:5:2324:2384	960892	1					
ANR	961505	IdentifierDeclStatement	"RFlagItem * fi = r_flag_get_i ( core -> flags , core -> offset + j ) ;"	790:5:32753:32813	960892	0	True				
ANR	961506	IdentifierDecl	"* fi = r_flag_get_i ( core -> flags , core -> offset + j )"		960892	0					
ANR	961507	IdentifierDeclType	RFlagItem *		960892	0					
ANR	961508	Identifier	fi		960892	1					
ANR	961509	AssignmentExpression	"* fi = r_flag_get_i ( core -> flags , core -> offset + j )"		960892	2		=			
ANR	961510	Identifier	fi		960892	0					
ANR	961511	CallExpression	"r_flag_get_i ( core -> flags , core -> offset + j )"		960892	1					
ANR	961512	Callee	r_flag_get_i		960892	0					
ANR	961513	Identifier	r_flag_get_i		960892	0					
ANR	961514	ArgumentList	core -> flags		960892	1					
ANR	961515	Argument	core -> flags		960892	0					
ANR	961516	PtrMemberAccess	core -> flags		960892	0					
ANR	961517	Identifier	core		960892	0					
ANR	961518	Identifier	flags		960892	1					
ANR	961519	Argument	core -> offset + j		960892	1					
ANR	961520	AdditiveExpression	core -> offset + j		960892	0		+			
ANR	961521	PtrMemberAccess	core -> offset		960892	0					
ANR	961522	Identifier	core		960892	0					
ANR	961523	Identifier	offset		960892	1					
ANR	961524	Identifier	j		960892	1					
ANR	961525	IfStatement	if ( fi )		960892	1					
ANR	961526	Condition	fi	791:9:32824:32825	960892	0	True				
ANR	961527	Identifier	fi		960892	0					
ANR	961528	CompoundStatement		87:13:2399:2399	960892	1					
ANR	961529	ExpressionStatement	ch = fi -> name [ 0 ]	792:6:32836:32852	960892	0	True				
ANR	961530	AssignmentExpression	ch = fi -> name [ 0 ]		960892	0		=			
ANR	961531	Identifier	ch		960892	0					
ANR	961532	ArrayIndexing	fi -> name [ 0 ]		960892	1					
ANR	961533	PtrMemberAccess	fi -> name		960892	0					
ANR	961534	Identifier	fi		960892	0					
ANR	961535	Identifier	name		960892	1					
ANR	961536	PrimaryExpression	0		960892	1					
ANR	961537	ExpressionStatement	ch2 = fi -> name [ 1 ]	793:6:32860:32877	960892	1	True				
ANR	961538	AssignmentExpression	ch2 = fi -> name [ 1 ]		960892	0		=			
ANR	961539	Identifier	ch2		960892	0					
ANR	961540	ArrayIndexing	fi -> name [ 1 ]		960892	1					
ANR	961541	PtrMemberAccess	fi -> name		960892	0					
ANR	961542	Identifier	fi		960892	0					
ANR	961543	Identifier	name		960892	1					
ANR	961544	PrimaryExpression	1		960892	1					
ANR	961545	ElseStatement	else		960892	0					
ANR	961546	CompoundStatement		90:12:2462:2462	960892	0					
ANR	961547	ExpressionStatement	ch2 = ch	795:6:32899:32907	960892	0	True				
ANR	961548	AssignmentExpression	ch2 = ch		960892	0		=			
ANR	961549	Identifier	ch2		960892	0					
ANR	961550	Identifier	ch		960892	1					
ANR	961551	ElseStatement	else		960892	0					
ANR	961552	CompoundStatement		93:11:2498:2498	960892	0					
ANR	961553	ExpressionStatement	ch2 = ch	798:5:32934:32942	960892	0	True				
ANR	961554	AssignmentExpression	ch2 = ch		960892	0		=			
ANR	961555	Identifier	ch2		960892	0					
ANR	961556	Identifier	ch		960892	1					
ANR	961557	ExpressionStatement	"r_cons_printf ( ""%s%c%c"" , color , ch , ch2 )"	800:4:32954:32994	960892	1	True				
ANR	961558	CallExpression	"r_cons_printf ( ""%s%c%c"" , color , ch , ch2 )"		960892	0					
ANR	961559	Callee	r_cons_printf		960892	0					
ANR	961560	Identifier	r_cons_printf		960892	0					
ANR	961561	ArgumentList	"""%s%c%c"""		960892	1					
ANR	961562	Argument	"""%s%c%c"""		960892	0					
ANR	961563	PrimaryExpression	"""%s%c%c"""		960892	0					
ANR	961564	Argument	color		960892	1					
ANR	961565	Identifier	color		960892	0					
ANR	961566	Argument	ch		960892	2					
ANR	961567	Identifier	ch		960892	0					
ANR	961568	Argument	ch2		960892	3					
ANR	961569	Identifier	ch2		960892	0					
ANR	961570	ElseStatement	else		960892	0					
ANR	961571	CompoundStatement		97:10:2577:2577	960892	0					
ANR	961572	ExpressionStatement	"r_cons_printf ( ""%s%c"" , color , ch )"	802:4:33012:33045	960892	0	True				
ANR	961573	CallExpression	"r_cons_printf ( ""%s%c"" , color , ch )"		960892	0					
ANR	961574	Callee	r_cons_printf		960892	0					
ANR	961575	Identifier	r_cons_printf		960892	0					
ANR	961576	ArgumentList	"""%s%c"""		960892	1					
ANR	961577	Argument	"""%s%c"""		960892	0					
ANR	961578	PrimaryExpression	"""%s%c"""		960892	0					
ANR	961579	Argument	color		960892	1					
ANR	961580	Identifier	color		960892	0					
ANR	961581	Argument	ch		960892	2					
ANR	961582	Identifier	ch		960892	0					
ANR	961583	ExpressionStatement	free ( color )	804:3:33055:33067	960892	4	True				
ANR	961584	CallExpression	free ( color )		960892	0					
ANR	961585	Callee	free		960892	0					
ANR	961586	Identifier	free		960892	0					
ANR	961587	ArgumentList	color		960892	1					
ANR	961588	Argument	color		960892	0					
ANR	961589	Identifier	color		960892	0					
ANR	961590	IfStatement	if ( show_color )		960892	3					
ANR	961591	Condition	show_color	806:6:33079:33088	960892	0	True				
ANR	961592	Identifier	show_color		960892	0					
ANR	961593	CompoundStatement		102:18:2662:2662	960892	1					
ANR	961594	ExpressionStatement	r_cons_printf ( Color_RESET )	807:3:33096:33123	960892	0	True				
ANR	961595	CallExpression	r_cons_printf ( Color_RESET )		960892	0					
ANR	961596	Callee	r_cons_printf		960892	0					
ANR	961597	Identifier	r_cons_printf		960892	0					
ANR	961598	ArgumentList	Color_RESET		960892	1					
ANR	961599	Argument	Color_RESET		960892	0					
ANR	961600	Identifier	Color_RESET		960892	0					
ANR	961601	ExpressionStatement	r_cons_newline ( )	809:2:33131:33148	960892	4	True				
ANR	961602	CallExpression	r_cons_newline ( )		960892	0					
ANR	961603	Callee	r_cons_newline		960892	0					
ANR	961604	Identifier	r_cons_newline		960892	0					
ANR	961605	ArgumentList			960892	1					
ANR	961606	ReturnType	static void		960892	1					
ANR	961607	Identifier	cmd_prc_zoom		960892	2					
ANR	961608	ParameterList	"RCore * core , const char * input"		960892	3					
ANR	961609	Parameter	RCore * core	705:25:30396:30406	960892	0	True				
ANR	961610	ParameterType	RCore *		960892	0					
ANR	961611	Identifier	core		960892	1					
ANR	961612	Parameter	const char * input	705:38:30409:30425	960892	1	True				
ANR	961613	ParameterType	const char *		960892	0					
ANR	961614	Identifier	input		960892	1					
ANR	961615	CFGEntryNode	ENTRY		960892		True				
ANR	961616	CFGExitNode	EXIT		960892		True				
ANR	961617	Symbol	* fi -> name		960892						
ANR	961618	Symbol	* map		960892						
ANR	961619	Symbol	* input		960892						
ANR	961620	Symbol	fi -> name		960892						
ANR	961621	Symbol	core -> offset		960892						
ANR	961622	Symbol	core -> print -> zoom		960892						
ANR	961623	Symbol	strlen		960892						
ANR	961624	Symbol	iter1 -> data		960892						
ANR	961625	Symbol	len		960892						
ANR	961626	Symbol	core -> print -> zoom -> size		960892						
ANR	961627	Symbol	show_color		960892						
ANR	961628	Symbol	* idx		960892						
ANR	961629	Symbol	show_flags		960892						
ANR	961630	Symbol	block		960892						
ANR	961631	Symbol	from		960892						
ANR	961632	Symbol	core -> print -> io_unalloc_ch		960892						
ANR	961633	Symbol	ea		960892						
ANR	961634	Symbol	colormap		960892						
ANR	961635	Symbol	R_PRINT_FLAGS_UNALLOC		960892						
ANR	961636	Symbol	r_flag_get_i		960892						
ANR	961637	Symbol	show_unalloc		960892						
ANR	961638	Symbol	core -> blocksize		960892						
ANR	961639	Symbol	* core -> print -> zoom		960892						
ANR	961640	Symbol	* * j		960892						
ANR	961641	Symbol	NULL		960892						
ANR	961642	Symbol	core -> block		960892						
ANR	961643	Symbol	show_cursor		960892						
ANR	961644	Symbol	iter		960892						
ANR	961645	Symbol	* map1		960892						
ANR	961646	Symbol	list		960892						
ANR	961647	Symbol	* * fi		960892						
ANR	961648	Symbol	map1 -> itv		960892						
ANR	961649	Symbol	core -> print -> zoom -> mode		960892						
ANR	961650	Symbol	str		960892						
ANR	961651	Symbol	core		960892						
ANR	961652	Symbol	input		960892						
ANR	961653	Symbol	square		960892						
ANR	961654	Symbol	* * * core		960892						
ANR	961655	Symbol	core -> print -> cur		960892						
ANR	961656	Symbol	r_config_get_i		960892						
ANR	961657	Symbol	map1 -> itv . addr		960892						
ANR	961658	Symbol	core -> print		960892						
ANR	961659	Symbol	printzoomcallback		960892						
ANR	961660	Symbol	idx		960892						
ANR	961661	Symbol	core -> print -> flags		960892						
ANR	961662	Symbol	map -> itv		960892						
ANR	961663	Symbol	fi		960892						
ANR	961664	Symbol	color		960892						
ANR	961665	Symbol	* * core -> print		960892						
ANR	961666	Symbol	* core		960892						
ANR	961667	Symbol	Color_RESET		960892						
ANR	961668	Symbol	r_str_newf		960892						
ANR	961669	Symbol	r_cons_pal_parse		960892						
ANR	961670	Symbol	* colormap		960892						
ANR	961671	Symbol	core -> print -> iob . is_valid_offset		960892						
ANR	961672	Symbol	cols		960892						
ANR	961673	Symbol	map		960892						
ANR	961674	Symbol	* * core		960892						
ANR	961675	Symbol	core -> config		960892						
ANR	961676	Symbol	* chars		960892						
ANR	961677	Symbol	iter1		960892						
ANR	961678	Symbol	ch		960892						
ANR	961679	Symbol	map1		960892						
ANR	961680	Symbol	false		960892						
ANR	961681	Symbol	i		960892						
ANR	961682	Symbol	j		960892						
ANR	961683	Symbol	core -> flags		960892						
ANR	961684	Symbol	* fi		960892						
ANR	961685	Symbol	ch2		960892						
ANR	961686	Symbol	r_itv_end		960892						
ANR	961687	Symbol	* block		960892						
ANR	961688	Symbol	core -> print -> iob		960892						
ANR	961689	Symbol	list -> head		960892						
ANR	961690	Symbol	* core -> print		960892						
ANR	961691	Symbol	* i		960892						
ANR	961692	Symbol	* j		960892						
ANR	961693	Symbol	* list		960892						
ANR	961694	Symbol	* * block		960892						
ANR	961695	Symbol	to		960892						
ANR	961696	Symbol	r_core_get_boundaries_prot		960892						
ANR	961697	Symbol	strdup		960892						
ANR	961698	Symbol	core -> print -> iob . io		960892						
ANR	961699	Symbol	* iter1		960892						
ANR	961700	Symbol	chars		960892						
ANR	961701	Symbol	core -> print -> cur_enabled		960892						
ANR	961702	Symbol	r_list_length		960892						
ANR	961703	Symbol	core -> print -> zoom -> buf		960892						
ANR	961704	Function	cmd_pCd	813:0:33156:34682							
ANR	961705	FunctionDef	"cmd_pCd (RCore * core , const char * input)"		961704	0					
ANR	961706	CompoundStatement		813:52:33208:34682	961704	0					
ANR	961707	IdentifierDeclStatement	"int h , w = r_cons_get_size ( & h ) ;"	814:1:33211:33242	961704	0	True				
ANR	961708	IdentifierDecl	h		961704	0					
ANR	961709	IdentifierDeclType	int		961704	0					
ANR	961710	Identifier	h		961704	1					
ANR	961711	IdentifierDecl	w = r_cons_get_size ( & h )		961704	1					
ANR	961712	IdentifierDeclType	int		961704	0					
ANR	961713	Identifier	w		961704	1					
ANR	961714	AssignmentExpression	w = r_cons_get_size ( & h )		961704	2		=			
ANR	961715	Identifier	w		961704	0					
ANR	961716	CallExpression	r_cons_get_size ( & h )		961704	1					
ANR	961717	Callee	r_cons_get_size		961704	0					
ANR	961718	Identifier	r_cons_get_size		961704	0					
ANR	961719	ArgumentList	& h		961704	1					
ANR	961720	Argument	& h		961704	0					
ANR	961721	UnaryOperationExpression	& h		961704	0					
ANR	961722	UnaryOperator	&		961704	0					
ANR	961723	Identifier	h		961704	1					
ANR	961724	IdentifierDeclStatement	"int colwidth = r_config_get_i ( core -> config , ""hex.cols"" ) * 2.5 ;"	815:1:33245:33307	961704	1	True				
ANR	961725	IdentifierDecl	"colwidth = r_config_get_i ( core -> config , ""hex.cols"" ) * 2.5"		961704	0					
ANR	961726	IdentifierDeclType	int		961704	0					
ANR	961727	Identifier	colwidth		961704	1					
ANR	961728	AssignmentExpression	"colwidth = r_config_get_i ( core -> config , ""hex.cols"" ) * 2.5"		961704	2		=			
ANR	961729	Identifier	colwidth		961704	0					
ANR	961730	MultiplicativeExpression	"r_config_get_i ( core -> config , ""hex.cols"" ) * 2.5"		961704	1		*			
ANR	961731	CallExpression	"r_config_get_i ( core -> config , ""hex.cols"" )"		961704	0					
ANR	961732	Callee	r_config_get_i		961704	0					
ANR	961733	Identifier	r_config_get_i		961704	0					
ANR	961734	ArgumentList	core -> config		961704	1					
ANR	961735	Argument	core -> config		961704	0					
ANR	961736	PtrMemberAccess	core -> config		961704	0					
ANR	961737	Identifier	core		961704	0					
ANR	961738	Identifier	config		961704	1					
ANR	961739	Argument	"""hex.cols"""		961704	1					
ANR	961740	PrimaryExpression	"""hex.cols"""		961704	0					
ANR	961741	PrimaryExpression	2.5		961704	1					
ANR	961742	IfStatement	if ( colwidth < 1 )		961704	2					
ANR	961743	Condition	colwidth < 1	816:5:33314:33325	961704	0	True				
ANR	961744	RelationalExpression	colwidth < 1		961704	0		<			
ANR	961745	Identifier	colwidth		961704	0					
ANR	961746	PrimaryExpression	1		961704	1					
ANR	961747	CompoundStatement		4:19:119:119	961704	1					
ANR	961748	ExpressionStatement	colwidth = 16	817:2:33332:33345	961704	0	True				
ANR	961749	AssignmentExpression	colwidth = 16		961704	0		=			
ANR	961750	Identifier	colwidth		961704	0					
ANR	961751	PrimaryExpression	16		961704	1					
ANR	961752	IdentifierDeclStatement	"int i , columns = w / colwidth ;"	819:1:33351:33380	961704	3	True				
ANR	961753	IdentifierDecl	i		961704	0					
ANR	961754	IdentifierDeclType	int		961704	0					
ANR	961755	Identifier	i		961704	1					
ANR	961756	IdentifierDecl	columns = w / colwidth		961704	1					
ANR	961757	IdentifierDeclType	int		961704	0					
ANR	961758	Identifier	columns		961704	1					
ANR	961759	AssignmentExpression	columns = w / colwidth		961704	2		=			
ANR	961760	Identifier	columns		961704	0					
ANR	961761	MultiplicativeExpression	w / colwidth		961704	1		/			
ANR	961762	Identifier	w		961704	0					
ANR	961763	Identifier	colwidth		961704	1					
ANR	961764	IdentifierDeclStatement	int rows = h - 2 ;	820:1:33383:33399	961704	4	True				
ANR	961765	IdentifierDecl	rows = h - 2		961704	0					
ANR	961766	IdentifierDeclType	int		961704	0					
ANR	961767	Identifier	rows		961704	1					
ANR	961768	AssignmentExpression	rows = h - 2		961704	2		=			
ANR	961769	Identifier	rows		961704	0					
ANR	961770	AdditiveExpression	h - 2		961704	1		-			
ANR	961771	Identifier	h		961704	0					
ANR	961772	PrimaryExpression	2		961704	1					
ANR	961773	IdentifierDeclStatement	int obsz = core -> blocksize ;	821:1:33402:33428	961704	5	True				
ANR	961774	IdentifierDecl	obsz = core -> blocksize		961704	0					
ANR	961775	IdentifierDeclType	int		961704	0					
ANR	961776	Identifier	obsz		961704	1					
ANR	961777	AssignmentExpression	obsz = core -> blocksize		961704	2		=			
ANR	961778	Identifier	obsz		961704	0					
ANR	961779	PtrMemberAccess	core -> blocksize		961704	1					
ANR	961780	Identifier	core		961704	0					
ANR	961781	Identifier	blocksize		961704	1					
ANR	961782	IdentifierDeclStatement	"int user_rows = r_num_math ( core -> num , input ) ;"	822:1:33431:33476	961704	6	True				
ANR	961783	IdentifierDecl	"user_rows = r_num_math ( core -> num , input )"		961704	0					
ANR	961784	IdentifierDeclType	int		961704	0					
ANR	961785	Identifier	user_rows		961704	1					
ANR	961786	AssignmentExpression	"user_rows = r_num_math ( core -> num , input )"		961704	2		=			
ANR	961787	Identifier	user_rows		961704	0					
ANR	961788	CallExpression	"r_num_math ( core -> num , input )"		961704	1					
ANR	961789	Callee	r_num_math		961704	0					
ANR	961790	Identifier	r_num_math		961704	0					
ANR	961791	ArgumentList	core -> num		961704	1					
ANR	961792	Argument	core -> num		961704	0					
ANR	961793	PtrMemberAccess	core -> num		961704	0					
ANR	961794	Identifier	core		961704	0					
ANR	961795	Identifier	num		961704	1					
ANR	961796	Argument	input		961704	1					
ANR	961797	Identifier	input		961704	0					
ANR	961798	IdentifierDeclStatement	"bool asm_minicols = r_config_get_i ( core -> config , ""asm.minicols"" ) ;"	823:1:33479:33544	961704	7	True				
ANR	961799	IdentifierDecl	"asm_minicols = r_config_get_i ( core -> config , ""asm.minicols"" )"		961704	0					
ANR	961800	IdentifierDeclType	bool		961704	0					
ANR	961801	Identifier	asm_minicols		961704	1					
ANR	961802	AssignmentExpression	"asm_minicols = r_config_get_i ( core -> config , ""asm.minicols"" )"		961704	2		=			
ANR	961803	Identifier	asm_minicols		961704	0					
ANR	961804	CallExpression	"r_config_get_i ( core -> config , ""asm.minicols"" )"		961704	1					
ANR	961805	Callee	r_config_get_i		961704	0					
ANR	961806	Identifier	r_config_get_i		961704	0					
ANR	961807	ArgumentList	core -> config		961704	1					
ANR	961808	Argument	core -> config		961704	0					
ANR	961809	PtrMemberAccess	core -> config		961704	0					
ANR	961810	Identifier	core		961704	0					
ANR	961811	Identifier	config		961704	1					
ANR	961812	Argument	"""asm.minicols"""		961704	1					
ANR	961813	PrimaryExpression	"""asm.minicols"""		961704	0					
ANR	961814	IdentifierDeclStatement	"char * o_ao = strdup ( r_config_get ( core -> config , ""asm.offset"" ) ) ;"	824:1:33547:33610	961704	8	True				
ANR	961815	IdentifierDecl	"* o_ao = strdup ( r_config_get ( core -> config , ""asm.offset"" ) )"		961704	0					
ANR	961816	IdentifierDeclType	char *		961704	0					
ANR	961817	Identifier	o_ao		961704	1					
ANR	961818	AssignmentExpression	"* o_ao = strdup ( r_config_get ( core -> config , ""asm.offset"" ) )"		961704	2		=			
ANR	961819	Identifier	o_ao		961704	0					
ANR	961820	CallExpression	"strdup ( r_config_get ( core -> config , ""asm.offset"" ) )"		961704	1					
ANR	961821	Callee	strdup		961704	0					
ANR	961822	Identifier	strdup		961704	0					
ANR	961823	ArgumentList	"r_config_get ( core -> config , ""asm.offset"" )"		961704	1					
ANR	961824	Argument	"r_config_get ( core -> config , ""asm.offset"" )"		961704	0					
ANR	961825	CallExpression	"r_config_get ( core -> config , ""asm.offset"" )"		961704	0					
ANR	961826	Callee	r_config_get		961704	0					
ANR	961827	Identifier	r_config_get		961704	0					
ANR	961828	ArgumentList	core -> config		961704	1					
ANR	961829	Argument	core -> config		961704	0					
ANR	961830	PtrMemberAccess	core -> config		961704	0					
ANR	961831	Identifier	core		961704	0					
ANR	961832	Identifier	config		961704	1					
ANR	961833	Argument	"""asm.offset"""		961704	1					
ANR	961834	PrimaryExpression	"""asm.offset"""		961704	0					
ANR	961835	IdentifierDeclStatement	"char * o_ab = strdup ( r_config_get ( core -> config , ""asm.bytes"" ) ) ;"	825:1:33613:33675	961704	9	True				
ANR	961836	IdentifierDecl	"* o_ab = strdup ( r_config_get ( core -> config , ""asm.bytes"" ) )"		961704	0					
ANR	961837	IdentifierDeclType	char *		961704	0					
ANR	961838	Identifier	o_ab		961704	1					
ANR	961839	AssignmentExpression	"* o_ab = strdup ( r_config_get ( core -> config , ""asm.bytes"" ) )"		961704	2		=			
ANR	961840	Identifier	o_ab		961704	0					
ANR	961841	CallExpression	"strdup ( r_config_get ( core -> config , ""asm.bytes"" ) )"		961704	1					
ANR	961842	Callee	strdup		961704	0					
ANR	961843	Identifier	strdup		961704	0					
ANR	961844	ArgumentList	"r_config_get ( core -> config , ""asm.bytes"" )"		961704	1					
ANR	961845	Argument	"r_config_get ( core -> config , ""asm.bytes"" )"		961704	0					
ANR	961846	CallExpression	"r_config_get ( core -> config , ""asm.bytes"" )"		961704	0					
ANR	961847	Callee	r_config_get		961704	0					
ANR	961848	Identifier	r_config_get		961704	0					
ANR	961849	ArgumentList	core -> config		961704	1					
ANR	961850	Argument	core -> config		961704	0					
ANR	961851	PtrMemberAccess	core -> config		961704	0					
ANR	961852	Identifier	core		961704	0					
ANR	961853	Identifier	config		961704	1					
ANR	961854	Argument	"""asm.bytes"""		961704	1					
ANR	961855	PrimaryExpression	"""asm.bytes"""		961704	0					
ANR	961856	IfStatement	if ( asm_minicols )		961704	10					
ANR	961857	Condition	asm_minicols	826:5:33682:33693	961704	0	True				
ANR	961858	Identifier	asm_minicols		961704	0					
ANR	961859	CompoundStatement		14:19:487:487	961704	1					
ANR	961860	ExpressionStatement	"r_config_set ( core -> config , ""asm.offset"" , ""false"" )"	827:2:33700:33750	961704	0	True				
ANR	961861	CallExpression	"r_config_set ( core -> config , ""asm.offset"" , ""false"" )"		961704	0					
ANR	961862	Callee	r_config_set		961704	0					
ANR	961863	Identifier	r_config_set		961704	0					
ANR	961864	ArgumentList	core -> config		961704	1					
ANR	961865	Argument	core -> config		961704	0					
ANR	961866	PtrMemberAccess	core -> config		961704	0					
ANR	961867	Identifier	core		961704	0					
ANR	961868	Identifier	config		961704	1					
ANR	961869	Argument	"""asm.offset"""		961704	1					
ANR	961870	PrimaryExpression	"""asm.offset"""		961704	0					
ANR	961871	Argument	"""false"""		961704	2					
ANR	961872	PrimaryExpression	"""false"""		961704	0					
ANR	961873	ExpressionStatement	"r_config_set ( core -> config , ""asm.bytes"" , ""false"" )"	830:1:33810:33859	961704	11	True				
ANR	961874	CallExpression	"r_config_set ( core -> config , ""asm.bytes"" , ""false"" )"		961704	0					
ANR	961875	Callee	r_config_set		961704	0					
ANR	961876	Identifier	r_config_set		961704	0					
ANR	961877	ArgumentList	core -> config		961704	1					
ANR	961878	Argument	core -> config		961704	0					
ANR	961879	PtrMemberAccess	core -> config		961704	0					
ANR	961880	Identifier	core		961704	0					
ANR	961881	Identifier	config		961704	1					
ANR	961882	Argument	"""asm.bytes"""		961704	1					
ANR	961883	PrimaryExpression	"""asm.bytes"""		961704	0					
ANR	961884	Argument	"""false"""		961704	2					
ANR	961885	PrimaryExpression	"""false"""		961704	0					
ANR	961886	IfStatement	if ( user_rows > 0 )		961704	12					
ANR	961887	Condition	user_rows > 0	831:5:33866:33878	961704	0	True				
ANR	961888	RelationalExpression	user_rows > 0		961704	0		>			
ANR	961889	Identifier	user_rows		961704	0					
ANR	961890	PrimaryExpression	0		961704	1					
ANR	961891	CompoundStatement		19:20:672:672	961704	1					
ANR	961892	ExpressionStatement	rows = user_rows + 1	832:2:33885:33905	961704	0	True				
ANR	961893	AssignmentExpression	rows = user_rows + 1		961704	0		=			
ANR	961894	Identifier	rows		961704	0					
ANR	961895	AdditiveExpression	user_rows + 1		961704	1		+			
ANR	961896	Identifier	user_rows		961704	0					
ANR	961897	PrimaryExpression	1		961704	1					
ANR	961898	ExpressionStatement	r_cons_push ( )	834:1:33911:33925	961704	13	True				
ANR	961899	CallExpression	r_cons_push ( )		961704	0					
ANR	961900	Callee	r_cons_push		961704	0					
ANR	961901	Identifier	r_cons_push		961704	0					
ANR	961902	ArgumentList			961704	1					
ANR	961903	IdentifierDeclStatement	"RConsCanvas * c = r_cons_canvas_new ( w , rows ) ;"	835:1:33928:33972	961704	14	True				
ANR	961904	IdentifierDecl	"* c = r_cons_canvas_new ( w , rows )"		961704	0					
ANR	961905	IdentifierDeclType	RConsCanvas *		961704	0					
ANR	961906	Identifier	c		961704	1					
ANR	961907	AssignmentExpression	"* c = r_cons_canvas_new ( w , rows )"		961704	2		=			
ANR	961908	Identifier	c		961704	0					
ANR	961909	CallExpression	"r_cons_canvas_new ( w , rows )"		961704	1					
ANR	961910	Callee	r_cons_canvas_new		961704	0					
ANR	961911	Identifier	r_cons_canvas_new		961704	0					
ANR	961912	ArgumentList	w		961704	1					
ANR	961913	Argument	w		961704	0					
ANR	961914	Identifier	w		961704	0					
ANR	961915	Argument	rows		961704	1					
ANR	961916	Identifier	rows		961704	0					
ANR	961917	IdentifierDeclStatement	ut64 osek = core -> offset ;	836:1:33975:33999	961704	15	True				
ANR	961918	IdentifierDecl	osek = core -> offset		961704	0					
ANR	961919	IdentifierDeclType	ut64		961704	0					
ANR	961920	Identifier	osek		961704	1					
ANR	961921	AssignmentExpression	osek = core -> offset		961704	2		=			
ANR	961922	Identifier	osek		961704	0					
ANR	961923	PtrMemberAccess	core -> offset		961704	1					
ANR	961924	Identifier	core		961704	0					
ANR	961925	Identifier	offset		961704	1					
ANR	961926	ExpressionStatement	"c -> color = r_config_get_i ( core -> config , ""scr.color"" )"	837:1:34002:34055	961704	16	True				
ANR	961927	AssignmentExpression	"c -> color = r_config_get_i ( core -> config , ""scr.color"" )"		961704	0		=			
ANR	961928	PtrMemberAccess	c -> color		961704	0					
ANR	961929	Identifier	c		961704	0					
ANR	961930	Identifier	color		961704	1					
ANR	961931	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		961704	1					
ANR	961932	Callee	r_config_get_i		961704	0					
ANR	961933	Identifier	r_config_get_i		961704	0					
ANR	961934	ArgumentList	core -> config		961704	1					
ANR	961935	Argument	core -> config		961704	0					
ANR	961936	PtrMemberAccess	core -> config		961704	0					
ANR	961937	Identifier	core		961704	0					
ANR	961938	Identifier	config		961704	1					
ANR	961939	Argument	"""scr.color"""		961704	1					
ANR	961940	PrimaryExpression	"""scr.color"""		961704	0					
ANR	961941	ExpressionStatement	"r_core_block_size ( core , rows * 32 )"	838:1:34058:34093	961704	17	True				
ANR	961942	CallExpression	"r_core_block_size ( core , rows * 32 )"		961704	0					
ANR	961943	Callee	r_core_block_size		961704	0					
ANR	961944	Identifier	r_core_block_size		961704	0					
ANR	961945	ArgumentList	core		961704	1					
ANR	961946	Argument	core		961704	0					
ANR	961947	Identifier	core		961704	0					
ANR	961948	Argument	rows * 32		961704	1					
ANR	961949	MultiplicativeExpression	rows * 32		961704	0		*			
ANR	961950	Identifier	rows		961704	0					
ANR	961951	PrimaryExpression	32		961704	1					
ANR	961952	ForStatement	for ( i = 0 ; i < columns ; i ++ )		961704	18					
ANR	961953	ForInit	i = 0 ;	839:6:34101:34106	961704	0	True				
ANR	961954	AssignmentExpression	i = 0		961704	0		=			
ANR	961955	Identifier	i		961704	0					
ANR	961956	PrimaryExpression	0		961704	1					
ANR	961957	Condition	i < columns	839:13:34108:34118	961704	1	True				
ANR	961958	RelationalExpression	i < columns		961704	0		<			
ANR	961959	Identifier	i		961704	0					
ANR	961960	Identifier	columns		961704	1					
ANR	961961	PostIncDecOperationExpression	i ++	839:26:34121:34123	961704	2	True				
ANR	961962	Identifier	i		961704	0					
ANR	961963	IncDec	++		961704	1					
ANR	961964	CompoundStatement		30:2:1037:1075	961704	3					
ANR	961965	ExpressionStatement	"( void ) r_cons_canvas_gotoxy ( c , i * ( w / columns ) , 0 )"	840:2:34130:34183	961704	0	True				
ANR	961966	CastExpression	"( void ) r_cons_canvas_gotoxy ( c , i * ( w / columns ) , 0 )"		961704	0					
ANR	961967	CastTarget	void		961704	0					
ANR	961968	CallExpression	"r_cons_canvas_gotoxy ( c , i * ( w / columns ) , 0 )"		961704	1					
ANR	961969	Callee	r_cons_canvas_gotoxy		961704	0					
ANR	961970	Identifier	r_cons_canvas_gotoxy		961704	0					
ANR	961971	ArgumentList	c		961704	1					
ANR	961972	Argument	c		961704	0					
ANR	961973	Identifier	c		961704	0					
ANR	961974	Argument	i * ( w / columns )		961704	1					
ANR	961975	MultiplicativeExpression	i * ( w / columns )		961704	0		*			
ANR	961976	Identifier	i		961704	0					
ANR	961977	MultiplicativeExpression	w / columns		961704	1		/			
ANR	961978	Identifier	w		961704	0					
ANR	961979	Identifier	columns		961704	1					
ANR	961980	Argument	0		961704	2					
ANR	961981	PrimaryExpression	0		961704	0					
ANR	961982	IdentifierDeclStatement	"char * cmd = r_str_newf ( ""pid %d @i:%d"" , rows , rows * i ) ;"	841:2:34187:34242	961704	1	True				
ANR	961983	IdentifierDecl	"* cmd = r_str_newf ( ""pid %d @i:%d"" , rows , rows * i )"		961704	0					
ANR	961984	IdentifierDeclType	char *		961704	0					
ANR	961985	Identifier	cmd		961704	1					
ANR	961986	AssignmentExpression	"* cmd = r_str_newf ( ""pid %d @i:%d"" , rows , rows * i )"		961704	2		=			
ANR	961987	Identifier	cmd		961704	0					
ANR	961988	CallExpression	"r_str_newf ( ""pid %d @i:%d"" , rows , rows * i )"		961704	1					
ANR	961989	Callee	r_str_newf		961704	0					
ANR	961990	Identifier	r_str_newf		961704	0					
ANR	961991	ArgumentList	"""pid %d @i:%d"""		961704	1					
ANR	961992	Argument	"""pid %d @i:%d"""		961704	0					
ANR	961993	PrimaryExpression	"""pid %d @i:%d"""		961704	0					
ANR	961994	Argument	rows		961704	1					
ANR	961995	Identifier	rows		961704	0					
ANR	961996	Argument	rows * i		961704	2					
ANR	961997	MultiplicativeExpression	rows * i		961704	0		*			
ANR	961998	Identifier	rows		961704	0					
ANR	961999	Identifier	i		961704	1					
ANR	962000	IdentifierDeclStatement	"char * dis = r_core_cmd_str ( core , cmd ) ;"	842:2:34246:34284	961704	2	True				
ANR	962001	IdentifierDecl	"* dis = r_core_cmd_str ( core , cmd )"		961704	0					
ANR	962002	IdentifierDeclType	char *		961704	0					
ANR	962003	Identifier	dis		961704	1					
ANR	962004	AssignmentExpression	"* dis = r_core_cmd_str ( core , cmd )"		961704	2		=			
ANR	962005	Identifier	dis		961704	0					
ANR	962006	CallExpression	"r_core_cmd_str ( core , cmd )"		961704	1					
ANR	962007	Callee	r_core_cmd_str		961704	0					
ANR	962008	Identifier	r_core_cmd_str		961704	0					
ANR	962009	ArgumentList	core		961704	1					
ANR	962010	Argument	core		961704	0					
ANR	962011	Identifier	core		961704	0					
ANR	962012	Argument	cmd		961704	1					
ANR	962013	Identifier	cmd		961704	0					
ANR	962014	ExpressionStatement	"r_cons_canvas_write ( c , dis )"	843:2:34288:34316	961704	3	True				
ANR	962015	CallExpression	"r_cons_canvas_write ( c , dis )"		961704	0					
ANR	962016	Callee	r_cons_canvas_write		961704	0					
ANR	962017	Identifier	r_cons_canvas_write		961704	0					
ANR	962018	ArgumentList	c		961704	1					
ANR	962019	Argument	c		961704	0					
ANR	962020	Identifier	c		961704	0					
ANR	962021	Argument	dis		961704	1					
ANR	962022	Identifier	dis		961704	0					
ANR	962023	ExpressionStatement	free ( cmd )	844:2:34320:34330	961704	4	True				
ANR	962024	CallExpression	free ( cmd )		961704	0					
ANR	962025	Callee	free		961704	0					
ANR	962026	Identifier	free		961704	0					
ANR	962027	ArgumentList	cmd		961704	1					
ANR	962028	Argument	cmd		961704	0					
ANR	962029	Identifier	cmd		961704	0					
ANR	962030	ExpressionStatement	free ( dis )	845:2:34334:34344	961704	5	True				
ANR	962031	CallExpression	free ( dis )		961704	0					
ANR	962032	Callee	free		961704	0					
ANR	962033	Identifier	free		961704	0					
ANR	962034	ArgumentList	dis		961704	1					
ANR	962035	Argument	dis		961704	0					
ANR	962036	Identifier	dis		961704	0					
ANR	962037	ExpressionStatement	"r_core_block_size ( core , obsz )"	847:1:34350:34380	961704	19	True				
ANR	962038	CallExpression	"r_core_block_size ( core , obsz )"		961704	0					
ANR	962039	Callee	r_core_block_size		961704	0					
ANR	962040	Identifier	r_core_block_size		961704	0					
ANR	962041	ArgumentList	core		961704	1					
ANR	962042	Argument	core		961704	0					
ANR	962043	Identifier	core		961704	0					
ANR	962044	Argument	obsz		961704	1					
ANR	962045	Identifier	obsz		961704	0					
ANR	962046	ExpressionStatement	"r_core_seek ( core , osek , 1 )"	848:1:34383:34410	961704	20	True				
ANR	962047	CallExpression	"r_core_seek ( core , osek , 1 )"		961704	0					
ANR	962048	Callee	r_core_seek		961704	0					
ANR	962049	Identifier	r_core_seek		961704	0					
ANR	962050	ArgumentList	core		961704	1					
ANR	962051	Argument	core		961704	0					
ANR	962052	Identifier	core		961704	0					
ANR	962053	Argument	osek		961704	1					
ANR	962054	Identifier	osek		961704	0					
ANR	962055	Argument	1		961704	2					
ANR	962056	PrimaryExpression	1		961704	0					
ANR	962057	ExpressionStatement	r_cons_pop ( )	850:1:34414:34427	961704	21	True				
ANR	962058	CallExpression	r_cons_pop ( )		961704	0					
ANR	962059	Callee	r_cons_pop		961704	0					
ANR	962060	Identifier	r_cons_pop		961704	0					
ANR	962061	ArgumentList			961704	1					
ANR	962062	ExpressionStatement	r_cons_canvas_print ( c )	851:1:34430:34453	961704	22	True				
ANR	962063	CallExpression	r_cons_canvas_print ( c )		961704	0					
ANR	962064	Callee	r_cons_canvas_print		961704	0					
ANR	962065	Identifier	r_cons_canvas_print		961704	0					
ANR	962066	ArgumentList	c		961704	1					
ANR	962067	Argument	c		961704	0					
ANR	962068	Identifier	c		961704	0					
ANR	962069	ExpressionStatement	r_cons_canvas_free ( c )	852:1:34456:34478	961704	23	True				
ANR	962070	CallExpression	r_cons_canvas_free ( c )		961704	0					
ANR	962071	Callee	r_cons_canvas_free		961704	0					
ANR	962072	Identifier	r_cons_canvas_free		961704	0					
ANR	962073	ArgumentList	c		961704	1					
ANR	962074	Argument	c		961704	0					
ANR	962075	Identifier	c		961704	0					
ANR	962076	IfStatement	if ( asm_minicols )		961704	24					
ANR	962077	Condition	asm_minicols	853:5:34485:34496	961704	0	True				
ANR	962078	Identifier	asm_minicols		961704	0					
ANR	962079	CompoundStatement		41:19:1290:1290	961704	1					
ANR	962080	ExpressionStatement	"r_config_set ( core -> config , ""asm.offset"" , o_ao )"	854:2:34503:34550	961704	0	True				
ANR	962081	CallExpression	"r_config_set ( core -> config , ""asm.offset"" , o_ao )"		961704	0					
ANR	962082	Callee	r_config_set		961704	0					
ANR	962083	Identifier	r_config_set		961704	0					
ANR	962084	ArgumentList	core -> config		961704	1					
ANR	962085	Argument	core -> config		961704	0					
ANR	962086	PtrMemberAccess	core -> config		961704	0					
ANR	962087	Identifier	core		961704	0					
ANR	962088	Identifier	config		961704	1					
ANR	962089	Argument	"""asm.offset"""		961704	1					
ANR	962090	PrimaryExpression	"""asm.offset"""		961704	0					
ANR	962091	Argument	o_ao		961704	2					
ANR	962092	Identifier	o_ao		961704	0					
ANR	962093	ExpressionStatement	"r_config_set ( core -> config , ""asm.bytes"" , o_ab )"	855:2:34554:34600	961704	1	True				
ANR	962094	CallExpression	"r_config_set ( core -> config , ""asm.bytes"" , o_ab )"		961704	0					
ANR	962095	Callee	r_config_set		961704	0					
ANR	962096	Identifier	r_config_set		961704	0					
ANR	962097	ArgumentList	core -> config		961704	1					
ANR	962098	Argument	core -> config		961704	0					
ANR	962099	PtrMemberAccess	core -> config		961704	0					
ANR	962100	Identifier	core		961704	0					
ANR	962101	Identifier	config		961704	1					
ANR	962102	Argument	"""asm.bytes"""		961704	1					
ANR	962103	PrimaryExpression	"""asm.bytes"""		961704	0					
ANR	962104	Argument	o_ab		961704	2					
ANR	962105	Identifier	o_ab		961704	0					
ANR	962106	ExpressionStatement	"r_config_set ( core -> config , ""asm.bytes"" , o_ab )"	857:1:34606:34652	961704	25	True				
ANR	962107	CallExpression	"r_config_set ( core -> config , ""asm.bytes"" , o_ab )"		961704	0					
ANR	962108	Callee	r_config_set		961704	0					
ANR	962109	Identifier	r_config_set		961704	0					
ANR	962110	ArgumentList	core -> config		961704	1					
ANR	962111	Argument	core -> config		961704	0					
ANR	962112	PtrMemberAccess	core -> config		961704	0					
ANR	962113	Identifier	core		961704	0					
ANR	962114	Identifier	config		961704	1					
ANR	962115	Argument	"""asm.bytes"""		961704	1					
ANR	962116	PrimaryExpression	"""asm.bytes"""		961704	0					
ANR	962117	Argument	o_ab		961704	2					
ANR	962118	Identifier	o_ab		961704	0					
ANR	962119	ExpressionStatement	free ( o_ao )	858:1:34655:34666	961704	26	True				
ANR	962120	CallExpression	free ( o_ao )		961704	0					
ANR	962121	Callee	free		961704	0					
ANR	962122	Identifier	free		961704	0					
ANR	962123	ArgumentList	o_ao		961704	1					
ANR	962124	Argument	o_ao		961704	0					
ANR	962125	Identifier	o_ao		961704	0					
ANR	962126	ExpressionStatement	free ( o_ab )	859:1:34669:34680	961704	27	True				
ANR	962127	CallExpression	free ( o_ab )		961704	0					
ANR	962128	Callee	free		961704	0					
ANR	962129	Identifier	free		961704	0					
ANR	962130	ArgumentList	o_ab		961704	1					
ANR	962131	Argument	o_ab		961704	0					
ANR	962132	Identifier	o_ab		961704	0					
ANR	962133	ReturnType	static void		961704	1					
ANR	962134	Identifier	cmd_pCd		961704	2					
ANR	962135	ParameterList	"RCore * core , const char * input"		961704	3					
ANR	962136	Parameter	RCore * core	813:20:33176:33186	961704	0	True				
ANR	962137	ParameterType	RCore *		961704	0					
ANR	962138	Identifier	core		961704	1					
ANR	962139	Parameter	const char * input	813:33:33189:33205	961704	1	True				
ANR	962140	ParameterType	const char *		961704	0					
ANR	962141	Identifier	input		961704	1					
ANR	962142	CFGEntryNode	ENTRY		961704		True				
ANR	962143	CFGExitNode	EXIT		961704		True				
ANR	962144	Symbol	o_ab		961704						
ANR	962145	Symbol	r_core_cmd_str		961704						
ANR	962146	Symbol	columns		961704						
ANR	962147	Symbol	* core		961704						
ANR	962148	Symbol	r_config_get		961704						
ANR	962149	Symbol	obsz		961704						
ANR	962150	Symbol	core -> offset		961704						
ANR	962151	Symbol	r_str_newf		961704						
ANR	962152	Symbol	o_ao		961704						
ANR	962153	Symbol	r_num_math		961704						
ANR	962154	Symbol	dis		961704						
ANR	962155	Symbol	core -> num		961704						
ANR	962156	Symbol	c -> color		961704						
ANR	962157	Symbol	core -> config		961704						
ANR	962158	Symbol	core -> blocksize		961704						
ANR	962159	Symbol	c		961704						
ANR	962160	Symbol	r_cons_get_size		961704						
ANR	962161	Symbol	h		961704						
ANR	962162	Symbol	i		961704						
ANR	962163	Symbol	rows		961704						
ANR	962164	Symbol	* c		961704						
ANR	962165	Symbol	& h		961704						
ANR	962166	Symbol	core		961704						
ANR	962167	Symbol	input		961704						
ANR	962168	Symbol	user_rows		961704						
ANR	962169	Symbol	w		961704						
ANR	962170	Symbol	r_config_get_i		961704						
ANR	962171	Symbol	colwidth		961704						
ANR	962172	Symbol	r_cons_canvas_new		961704						
ANR	962173	Symbol	strdup		961704						
ANR	962174	Symbol	cmd		961704						
ANR	962175	Symbol	asm_minicols		961704						
ANR	962176	Symbol	osek		961704						
ANR	962177	Function	findMethodBounds	862:0:34685:35078							
ANR	962178	FunctionDef	"findMethodBounds (RList * methods , ut64 * min , ut64 * max)"		962177	0					
ANR	962179	CompoundStatement		862:67:34752:35078	962177	0					
ANR	962180	IdentifierDeclStatement	RBinSymbol * sym ;	863:1:34755:34770	962177	0	True				
ANR	962181	IdentifierDecl	* sym		962177	0					
ANR	962182	IdentifierDeclType	RBinSymbol *		962177	0					
ANR	962183	Identifier	sym		962177	1					
ANR	962184	IdentifierDeclStatement	RListIter * iter ;	864:1:34773:34788	962177	1	True				
ANR	962185	IdentifierDecl	* iter		962177	0					
ANR	962186	IdentifierDeclType	RListIter *		962177	0					
ANR	962187	Identifier	iter		962177	1					
ANR	962188	IdentifierDeclStatement	ut64 at_min = UT64_MAX ;	865:1:34791:34813	962177	2	True				
ANR	962189	IdentifierDecl	at_min = UT64_MAX		962177	0					
ANR	962190	IdentifierDeclType	ut64		962177	0					
ANR	962191	Identifier	at_min		962177	1					
ANR	962192	AssignmentExpression	at_min = UT64_MAX		962177	2		=			
ANR	962193	Identifier	UT64_MAX		962177	0					
ANR	962194	Identifier	UT64_MAX		962177	1					
ANR	962195	Statement	ut64	866:1:34816:34819	962177	3	True				
ANR	962196	Statement	at_max	866:6:34821:34826	962177	4	True				
ANR	962197	Statement	=	866:13:34828:34828	962177	5	True				
ANR	962198	Statement	0L	866:15:34830:34831	962177	6	True				
ANR	962199	ExpressionStatement	L	866:17:34832:34833	962177	7	True				
ANR	962200	Identifier	L		962177	0					
ANR	962201	Statement	r_list_foreach	868:1:34837:34850	962177	8	True				
ANR	962202	Statement	(	868:16:34852:34852	962177	9	True				
ANR	962203	Statement	methods	868:17:34853:34859	962177	10	True				
ANR	962204	Statement	","	868:24:34860:34860	962177	11	True				
ANR	962205	Statement	iter	868:26:34862:34865	962177	12	True				
ANR	962206	Statement	","	868:30:34866:34866	962177	13	True				
ANR	962207	Statement	sym	868:32:34868:34870	962177	14	True				
ANR	962208	Statement	)	868:35:34871:34871	962177	15	True				
ANR	962209	CompoundStatement		7:37:120:120	962177	16					
ANR	962210	IfStatement	if ( sym -> vaddr )		962177	0					
ANR	962211	Condition	sym -> vaddr	869:6:34881:34890	962177	0	True				
ANR	962212	PtrMemberAccess	sym -> vaddr		962177	0					
ANR	962213	Identifier	sym		962177	0					
ANR	962214	Identifier	vaddr		962177	1					
ANR	962215	CompoundStatement		8:18:140:140	962177	1					
ANR	962216	IfStatement	if ( sym -> vaddr < at_min )		962177	0					
ANR	962217	Condition	sym -> vaddr < at_min	870:7:34902:34920	962177	0	True				
ANR	962218	RelationalExpression	sym -> vaddr < at_min		962177	0		<			
ANR	962219	PtrMemberAccess	sym -> vaddr		962177	0					
ANR	962220	Identifier	sym		962177	0					
ANR	962221	Identifier	vaddr		962177	1					
ANR	962222	Identifier	at_min		962177	1					
ANR	962223	CompoundStatement		9:28:170:170	962177	1					
ANR	962224	ExpressionStatement	at_min = sym -> vaddr	871:4:34929:34948	962177	0	True				
ANR	962225	AssignmentExpression	at_min = sym -> vaddr		962177	0		=			
ANR	962226	Identifier	at_min		962177	0					
ANR	962227	PtrMemberAccess	sym -> vaddr		962177	1					
ANR	962228	Identifier	sym		962177	0					
ANR	962229	Identifier	vaddr		962177	1					
ANR	962230	IfStatement	if ( sym -> vaddr + sym -> size > at_max )		962177	1					
ANR	962231	Condition	sym -> vaddr + sym -> size > at_max	873:7:34962:34992	962177	0	True				
ANR	962232	RelationalExpression	sym -> vaddr + sym -> size > at_max		962177	0		>			
ANR	962233	AdditiveExpression	sym -> vaddr + sym -> size		962177	0		+			
ANR	962234	PtrMemberAccess	sym -> vaddr		962177	0					
ANR	962235	Identifier	sym		962177	0					
ANR	962236	Identifier	vaddr		962177	1					
ANR	962237	PtrMemberAccess	sym -> size		962177	1					
ANR	962238	Identifier	sym		962177	0					
ANR	962239	Identifier	size		962177	1					
ANR	962240	Identifier	at_max		962177	1					
ANR	962241	CompoundStatement		12:40:242:242	962177	1					
ANR	962242	ExpressionStatement	at_max = sym -> vaddr + sym -> size	874:4:35001:35032	962177	0	True				
ANR	962243	AssignmentExpression	at_max = sym -> vaddr + sym -> size		962177	0		=			
ANR	962244	Identifier	at_max		962177	0					
ANR	962245	AdditiveExpression	sym -> vaddr + sym -> size		962177	1		+			
ANR	962246	PtrMemberAccess	sym -> vaddr		962177	0					
ANR	962247	Identifier	sym		962177	0					
ANR	962248	Identifier	vaddr		962177	1					
ANR	962249	PtrMemberAccess	sym -> size		962177	1					
ANR	962250	Identifier	sym		962177	0					
ANR	962251	Identifier	size		962177	1					
ANR	962252	ExpressionStatement	* min = at_min	878:1:35047:35060	962177	17	True				
ANR	962253	AssignmentExpression	* min = at_min		962177	0		=			
ANR	962254	UnaryOperationExpression	* min		962177	0					
ANR	962255	UnaryOperator	*		962177	0					
ANR	962256	Identifier	min		962177	1					
ANR	962257	Identifier	at_min		962177	1					
ANR	962258	ExpressionStatement	* max = at_max	879:1:35063:35076	962177	18	True				
ANR	962259	AssignmentExpression	* max = at_max		962177	0		=			
ANR	962260	UnaryOperationExpression	* max		962177	0					
ANR	962261	UnaryOperator	*		962177	0					
ANR	962262	Identifier	max		962177	1					
ANR	962263	Identifier	at_max		962177	1					
ANR	962264	ReturnType	static void		962177	1					
ANR	962265	Identifier	findMethodBounds		962177	2					
ANR	962266	ParameterList	"RList * methods , ut64 * min , ut64 * max"		962177	3					
ANR	962267	Parameter	RList * methods	862:29:34714:34727	962177	0	True				
ANR	962268	ParameterType	RList *		962177	0					
ANR	962269	Identifier	methods		962177	1					
ANR	962270	Parameter	ut64 * min	862:45:34730:34738	962177	1	True				
ANR	962271	ParameterType	ut64 *		962177	0					
ANR	962272	Identifier	min		962177	1					
ANR	962273	Parameter	ut64 * max	862:56:34741:34749	962177	2	True				
ANR	962274	ParameterType	ut64 *		962177	0					
ANR	962275	Identifier	max		962177	1					
ANR	962276	CFGEntryNode	ENTRY		962177		True				
ANR	962277	CFGExitNode	EXIT		962177		True				
ANR	962278	Symbol	max		962177						
ANR	962279	Symbol	methods		962177						
ANR	962280	Symbol	sym		962177						
ANR	962281	Symbol	sym -> vaddr		962177						
ANR	962282	Symbol	iter		962177						
ANR	962283	Symbol	at_max		962177						
ANR	962284	Symbol	sym -> size		962177						
ANR	962285	Symbol	* max		962177						
ANR	962286	Symbol	* sym		962177						
ANR	962287	Symbol	min		962177						
ANR	962288	Symbol	at_min		962177						
ANR	962289	Symbol	UT64_MAX		962177						
ANR	962290	Symbol	* min		962177						
ANR	962291	Function	findClassBounds	882:0:35081:35752							
ANR	962292	FunctionDef	"findClassBounds (RCore * core , const char * input , int * len)"		962291	0					
ANR	962293	CompoundStatement		882:70:35151:35752	962291	0					
ANR	962294	IdentifierDeclStatement	"ut64 min = 0 , max = 0 ;"	883:1:35154:35175	962291	0	True				
ANR	962295	IdentifierDecl	min = 0		962291	0					
ANR	962296	IdentifierDeclType	ut64		962291	0					
ANR	962297	Identifier	min		962291	1					
ANR	962298	AssignmentExpression	min = 0		962291	2		=			
ANR	962299	Identifier	min		962291	0					
ANR	962300	PrimaryExpression	0		962291	1					
ANR	962301	IdentifierDecl	max = 0		962291	1					
ANR	962302	IdentifierDeclType	ut64		962291	0					
ANR	962303	Identifier	max		962291	1					
ANR	962304	AssignmentExpression	max = 0		962291	2		=			
ANR	962305	Identifier	max		962291	0					
ANR	962306	PrimaryExpression	0		962291	1					
ANR	962307	IdentifierDeclStatement	RListIter * iter ;	884:1:35178:35193	962291	1	True				
ANR	962308	IdentifierDecl	* iter		962291	0					
ANR	962309	IdentifierDeclType	RListIter *		962291	0					
ANR	962310	Identifier	iter		962291	1					
ANR	962311	IdentifierDeclStatement	RBinClass * c ;	885:1:35196:35208	962291	2	True				
ANR	962312	IdentifierDecl	* c		962291	0					
ANR	962313	IdentifierDeclType	RBinClass *		962291	0					
ANR	962314	Identifier	c		962291	1					
ANR	962315	IdentifierDeclStatement	RList * cs = r_bin_get_classes ( core -> bin ) ;	886:1:35211:35252	962291	3	True				
ANR	962316	IdentifierDecl	* cs = r_bin_get_classes ( core -> bin )		962291	0					
ANR	962317	IdentifierDeclType	RList *		962291	0					
ANR	962318	Identifier	cs		962291	1					
ANR	962319	AssignmentExpression	* cs = r_bin_get_classes ( core -> bin )		962291	2		=			
ANR	962320	Identifier	cs		962291	0					
ANR	962321	CallExpression	r_bin_get_classes ( core -> bin )		962291	1					
ANR	962322	Callee	r_bin_get_classes		962291	0					
ANR	962323	Identifier	r_bin_get_classes		962291	0					
ANR	962324	ArgumentList	core -> bin		962291	1					
ANR	962325	Argument	core -> bin		962291	0					
ANR	962326	PtrMemberAccess	core -> bin		962291	0					
ANR	962327	Identifier	core		962291	0					
ANR	962328	Identifier	bin		962291	1					
ANR	962329	IfStatement	if ( input && * input )		962291	4					
ANR	962330	Condition	input && * input	887:5:35259:35273	962291	0	True				
ANR	962331	AndExpression	input && * input		962291	0		&&			
ANR	962332	Identifier	input		962291	0					
ANR	962333	UnaryOperationExpression	* input		962291	1					
ANR	962334	UnaryOperator	*		962291	0					
ANR	962335	Identifier	input		962291	1					
ANR	962336	CompoundStatement		6:22:124:124	962291	1					
ANR	962337	Statement	r_list_foreach	889:2:35301:35314	962291	0	True				
ANR	962338	Statement	(	889:17:35316:35316	962291	1	True				
ANR	962339	Statement	cs	889:18:35317:35318	962291	2	True				
ANR	962340	Statement	","	889:20:35319:35319	962291	3	True				
ANR	962341	Statement	iter	889:22:35321:35324	962291	4	True				
ANR	962342	Statement	","	889:26:35325:35325	962291	5	True				
ANR	962343	Statement	c	889:28:35327:35327	962291	6	True				
ANR	962344	Statement	)	889:29:35328:35328	962291	7	True				
ANR	962345	CompoundStatement		8:31:178:178	962291	8					
ANR	962346	IfStatement	if ( ! c || ! c -> name || ! c -> name [ 0 ] )		962291	0					
ANR	962347	Condition	! c || ! c -> name || ! c -> name [ 0 ]	890:7:35339:35367	962291	0	True				
ANR	962348	OrExpression	! c || ! c -> name || ! c -> name [ 0 ]		962291	0		||			
ANR	962349	UnaryOperationExpression	! c		962291	0					
ANR	962350	UnaryOperator	!		962291	0					
ANR	962351	Identifier	c		962291	1					
ANR	962352	OrExpression	! c -> name || ! c -> name [ 0 ]		962291	1		||			
ANR	962353	UnaryOperationExpression	! c -> name		962291	0					
ANR	962354	UnaryOperator	!		962291	0					
ANR	962355	PtrMemberAccess	c -> name		962291	1					
ANR	962356	Identifier	c		962291	0					
ANR	962357	Identifier	name		962291	1					
ANR	962358	UnaryOperationExpression	! c -> name [ 0 ]		962291	1					
ANR	962359	UnaryOperator	!		962291	0					
ANR	962360	ArrayIndexing	c -> name [ 0 ]		962291	1					
ANR	962361	PtrMemberAccess	c -> name		962291	0					
ANR	962362	Identifier	c		962291	0					
ANR	962363	Identifier	name		962291	1					
ANR	962364	PrimaryExpression	0		962291	1					
ANR	962365	CompoundStatement		9:38:218:218	962291	1					
ANR	962366	ContinueStatement	continue ;	891:4:35376:35384	962291	0	True				
ANR	962367	ExpressionStatement	"findMethodBounds ( c -> methods , & min , & max )"	893:3:35394:35435	962291	1	True				
ANR	962368	CallExpression	"findMethodBounds ( c -> methods , & min , & max )"		962291	0					
ANR	962369	Callee	findMethodBounds		962291	0					
ANR	962370	Identifier	findMethodBounds		962291	0					
ANR	962371	ArgumentList	c -> methods		962291	1					
ANR	962372	Argument	c -> methods		962291	0					
ANR	962373	PtrMemberAccess	c -> methods		962291	0					
ANR	962374	Identifier	c		962291	0					
ANR	962375	Identifier	methods		962291	1					
ANR	962376	Argument	& min		962291	1					
ANR	962377	UnaryOperationExpression	& min		962291	0					
ANR	962378	UnaryOperator	&		962291	0					
ANR	962379	Identifier	min		962291	1					
ANR	962380	Argument	& max		962291	2					
ANR	962381	UnaryOperationExpression	& max		962291	0					
ANR	962382	UnaryOperator	&		962291	0					
ANR	962383	Identifier	max		962291	1					
ANR	962384	IfStatement	if ( len )		962291	2					
ANR	962385	Condition	len	894:7:35444:35446	962291	0	True				
ANR	962386	Identifier	len		962291	0					
ANR	962387	CompoundStatement		13:12:297:297	962291	1					
ANR	962388	ExpressionStatement	* len = ( max - min )	895:4:35455:35473	962291	0	True				
ANR	962389	AssignmentExpression	* len = ( max - min )		962291	0		=			
ANR	962390	UnaryOperationExpression	* len		962291	0					
ANR	962391	UnaryOperator	*		962291	0					
ANR	962392	Identifier	len		962291	1					
ANR	962393	AdditiveExpression	max - min		962291	1		-			
ANR	962394	Identifier	max		962291	0					
ANR	962395	Identifier	min		962291	1					
ANR	962396	ReturnStatement	return min ;	897:3:35483:35493	962291	3	True				
ANR	962397	Identifier	min		962291	0					
ANR	962398	ElseStatement	else		962291	0					
ANR	962399	CompoundStatement		18:8:355:355	962291	0					
ANR	962400	Statement	r_list_foreach	901:2:35540:35553	962291	0	True				
ANR	962401	Statement	(	901:17:35555:35555	962291	1	True				
ANR	962402	Statement	cs	901:18:35556:35557	962291	2	True				
ANR	962403	Statement	","	901:20:35558:35558	962291	3	True				
ANR	962404	Statement	iter	901:22:35560:35563	962291	4	True				
ANR	962405	Statement	","	901:26:35564:35564	962291	5	True				
ANR	962406	Statement	c	901:28:35566:35566	962291	6	True				
ANR	962407	Statement	)	901:29:35567:35567	962291	7	True				
ANR	962408	CompoundStatement		20:31:417:417	962291	8					
ANR	962409	IfStatement	if ( ! c || ! c -> name || ! c -> name [ 0 ] )		962291	0					
ANR	962410	Condition	! c || ! c -> name || ! c -> name [ 0 ]	902:7:35578:35606	962291	0	True				
ANR	962411	OrExpression	! c || ! c -> name || ! c -> name [ 0 ]		962291	0		||			
ANR	962412	UnaryOperationExpression	! c		962291	0					
ANR	962413	UnaryOperator	!		962291	0					
ANR	962414	Identifier	c		962291	1					
ANR	962415	OrExpression	! c -> name || ! c -> name [ 0 ]		962291	1		||			
ANR	962416	UnaryOperationExpression	! c -> name		962291	0					
ANR	962417	UnaryOperator	!		962291	0					
ANR	962418	PtrMemberAccess	c -> name		962291	1					
ANR	962419	Identifier	c		962291	0					
ANR	962420	Identifier	name		962291	1					
ANR	962421	UnaryOperationExpression	! c -> name [ 0 ]		962291	1					
ANR	962422	UnaryOperator	!		962291	0					
ANR	962423	ArrayIndexing	c -> name [ 0 ]		962291	1					
ANR	962424	PtrMemberAccess	c -> name		962291	0					
ANR	962425	Identifier	c		962291	0					
ANR	962426	Identifier	name		962291	1					
ANR	962427	PrimaryExpression	0		962291	1					
ANR	962428	CompoundStatement		21:38:457:457	962291	1					
ANR	962429	ContinueStatement	continue ;	903:4:35615:35623	962291	0	True				
ANR	962430	ExpressionStatement	"findMethodBounds ( c -> methods , & min , & max )"	905:3:35633:35674	962291	1	True				
ANR	962431	CallExpression	"findMethodBounds ( c -> methods , & min , & max )"		962291	0					
ANR	962432	Callee	findMethodBounds		962291	0					
ANR	962433	Identifier	findMethodBounds		962291	0					
ANR	962434	ArgumentList	c -> methods		962291	1					
ANR	962435	Argument	c -> methods		962291	0					
ANR	962436	PtrMemberAccess	c -> methods		962291	0					
ANR	962437	Identifier	c		962291	0					
ANR	962438	Identifier	methods		962291	1					
ANR	962439	Argument	& min		962291	1					
ANR	962440	UnaryOperationExpression	& min		962291	0					
ANR	962441	UnaryOperator	&		962291	0					
ANR	962442	Identifier	min		962291	1					
ANR	962443	Argument	& max		962291	2					
ANR	962444	UnaryOperationExpression	& max		962291	0					
ANR	962445	UnaryOperator	&		962291	0					
ANR	962446	Identifier	max		962291	1					
ANR	962447	IfStatement	if ( len )		962291	2					
ANR	962448	Condition	len	906:7:35683:35685	962291	0	True				
ANR	962449	Identifier	len		962291	0					
ANR	962450	CompoundStatement		25:12:536:536	962291	1					
ANR	962451	ExpressionStatement	* len = ( max - min )	907:4:35694:35712	962291	0	True				
ANR	962452	AssignmentExpression	* len = ( max - min )		962291	0		=			
ANR	962453	UnaryOperationExpression	* len		962291	0					
ANR	962454	UnaryOperator	*		962291	0					
ANR	962455	Identifier	len		962291	1					
ANR	962456	AdditiveExpression	max - min		962291	1		-			
ANR	962457	Identifier	max		962291	0					
ANR	962458	Identifier	min		962291	1					
ANR	962459	ReturnStatement	return min ;	909:3:35722:35732	962291	3	True				
ANR	962460	Identifier	min		962291	0					
ANR	962461	ReturnStatement	return 0 ;	912:1:35742:35750	962291	5	True				
ANR	962462	PrimaryExpression	0		962291	0					
ANR	962463	ReturnType	static ut64		962291	1					
ANR	962464	Identifier	findClassBounds		962291	2					
ANR	962465	ParameterList	"RCore * core , const char * input , int * len"		962291	3					
ANR	962466	Parameter	RCore * core	882:28:35109:35119	962291	0	True				
ANR	962467	ParameterType	RCore *		962291	0					
ANR	962468	Identifier	core		962291	1					
ANR	962469	Parameter	const char * input	882:41:35122:35138	962291	1	True				
ANR	962470	ParameterType	const char *		962291	0					
ANR	962471	Identifier	input		962291	1					
ANR	962472	Parameter	int * len	882:60:35141:35148	962291	2	True				
ANR	962473	ParameterType	int *		962291	0					
ANR	962474	Identifier	len		962291	1					
ANR	962475	CFGEntryNode	ENTRY		962291		True				
ANR	962476	CFGExitNode	EXIT		962291		True				
ANR	962477	CFGErrorNode	ERROR		962291		True				
ANR	962478	Symbol	c		962291						
ANR	962479	Symbol	max		962291						
ANR	962480	Symbol	* core		962291						
ANR	962481	Symbol	* input		962291						
ANR	962482	Symbol	* * c		962291						
ANR	962483	Symbol	iter		962291						
ANR	962484	Symbol	c -> name		962291						
ANR	962485	Symbol	* c -> name		962291						
ANR	962486	Symbol	* c		962291						
ANR	962487	Symbol	& max		962291						
ANR	962488	Symbol	cs		962291						
ANR	962489	Symbol	core		962291						
ANR	962490	Symbol	input		962291						
ANR	962491	Symbol	min		962291						
ANR	962492	Symbol	len		962291						
ANR	962493	Symbol	core -> bin		962291						
ANR	962494	Symbol	r_bin_get_classes		962291						
ANR	962495	Symbol	c -> methods		962291						
ANR	962496	Symbol	& min		962291						
ANR	962497	Symbol	* len		962291						
ANR	962498	Function	cmd_pCD	915:0:35755:37385							
ANR	962499	FunctionDef	"cmd_pCD (RCore * core , const char * input)"		962498	0					
ANR	962500	CompoundStatement		915:52:35807:37385	962498	0					
ANR	962501	IdentifierDeclStatement	"int h , w = r_cons_get_size ( & h ) ;"	916:1:35810:35841	962498	0	True				
ANR	962502	IdentifierDecl	h		962498	0					
ANR	962503	IdentifierDeclType	int		962498	0					
ANR	962504	Identifier	h		962498	1					
ANR	962505	IdentifierDecl	w = r_cons_get_size ( & h )		962498	1					
ANR	962506	IdentifierDeclType	int		962498	0					
ANR	962507	Identifier	w		962498	1					
ANR	962508	AssignmentExpression	w = r_cons_get_size ( & h )		962498	2		=			
ANR	962509	Identifier	w		962498	0					
ANR	962510	CallExpression	r_cons_get_size ( & h )		962498	1					
ANR	962511	Callee	r_cons_get_size		962498	0					
ANR	962512	Identifier	r_cons_get_size		962498	0					
ANR	962513	ArgumentList	& h		962498	1					
ANR	962514	Argument	& h		962498	0					
ANR	962515	UnaryOperationExpression	& h		962498	0					
ANR	962516	UnaryOperator	&		962498	0					
ANR	962517	Identifier	h		962498	1					
ANR	962518	IdentifierDeclStatement	int i ;	917:1:35844:35849	962498	1	True				
ANR	962519	IdentifierDecl	i		962498	0					
ANR	962520	IdentifierDeclType	int		962498	0					
ANR	962521	Identifier	i		962498	1					
ANR	962522	IdentifierDeclStatement	int rows = h - 2 ;	918:1:35852:35868	962498	2	True				
ANR	962523	IdentifierDecl	rows = h - 2		962498	0					
ANR	962524	IdentifierDeclType	int		962498	0					
ANR	962525	Identifier	rows		962498	1					
ANR	962526	AssignmentExpression	rows = h - 2		962498	2		=			
ANR	962527	Identifier	rows		962498	0					
ANR	962528	AdditiveExpression	h - 2		962498	1		-			
ANR	962529	Identifier	h		962498	0					
ANR	962530	PrimaryExpression	2		962498	1					
ANR	962531	IdentifierDeclStatement	int obsz = core -> blocksize ;	919:1:35871:35897	962498	3	True				
ANR	962532	IdentifierDecl	obsz = core -> blocksize		962498	0					
ANR	962533	IdentifierDeclType	int		962498	0					
ANR	962534	Identifier	obsz		962498	1					
ANR	962535	AssignmentExpression	obsz = core -> blocksize		962498	2		=			
ANR	962536	Identifier	obsz		962498	0					
ANR	962537	PtrMemberAccess	core -> blocksize		962498	1					
ANR	962538	Identifier	core		962498	0					
ANR	962539	Identifier	blocksize		962498	1					
ANR	962540	IdentifierDeclStatement	"int user_rows = r_num_math ( core -> num , input ) ;"	920:1:35900:35945	962498	4	True				
ANR	962541	IdentifierDecl	"user_rows = r_num_math ( core -> num , input )"		962498	0					
ANR	962542	IdentifierDeclType	int		962498	0					
ANR	962543	Identifier	user_rows		962498	1					
ANR	962544	AssignmentExpression	"user_rows = r_num_math ( core -> num , input )"		962498	2		=			
ANR	962545	Identifier	user_rows		962498	0					
ANR	962546	CallExpression	"r_num_math ( core -> num , input )"		962498	1					
ANR	962547	Callee	r_num_math		962498	0					
ANR	962548	Identifier	r_num_math		962498	0					
ANR	962549	ArgumentList	core -> num		962498	1					
ANR	962550	Argument	core -> num		962498	0					
ANR	962551	PtrMemberAccess	core -> num		962498	0					
ANR	962552	Identifier	core		962498	0					
ANR	962553	Identifier	num		962498	1					
ANR	962554	Argument	input		962498	1					
ANR	962555	Identifier	input		962498	0					
ANR	962556	IdentifierDeclStatement	"bool asm_minicols = r_config_get_i ( core -> config , ""asm.minicols"" ) ;"	921:1:35948:36013	962498	5	True				
ANR	962557	IdentifierDecl	"asm_minicols = r_config_get_i ( core -> config , ""asm.minicols"" )"		962498	0					
ANR	962558	IdentifierDeclType	bool		962498	0					
ANR	962559	Identifier	asm_minicols		962498	1					
ANR	962560	AssignmentExpression	"asm_minicols = r_config_get_i ( core -> config , ""asm.minicols"" )"		962498	2		=			
ANR	962561	Identifier	asm_minicols		962498	0					
ANR	962562	CallExpression	"r_config_get_i ( core -> config , ""asm.minicols"" )"		962498	1					
ANR	962563	Callee	r_config_get_i		962498	0					
ANR	962564	Identifier	r_config_get_i		962498	0					
ANR	962565	ArgumentList	core -> config		962498	1					
ANR	962566	Argument	core -> config		962498	0					
ANR	962567	PtrMemberAccess	core -> config		962498	0					
ANR	962568	Identifier	core		962498	0					
ANR	962569	Identifier	config		962498	1					
ANR	962570	Argument	"""asm.minicols"""		962498	1					
ANR	962571	PrimaryExpression	"""asm.minicols"""		962498	0					
ANR	962572	IdentifierDeclStatement	"char * o_ao = strdup ( r_config_get ( core -> config , ""asm.offset"" ) ) ;"	922:1:36016:36079	962498	6	True				
ANR	962573	IdentifierDecl	"* o_ao = strdup ( r_config_get ( core -> config , ""asm.offset"" ) )"		962498	0					
ANR	962574	IdentifierDeclType	char *		962498	0					
ANR	962575	Identifier	o_ao		962498	1					
ANR	962576	AssignmentExpression	"* o_ao = strdup ( r_config_get ( core -> config , ""asm.offset"" ) )"		962498	2		=			
ANR	962577	Identifier	o_ao		962498	0					
ANR	962578	CallExpression	"strdup ( r_config_get ( core -> config , ""asm.offset"" ) )"		962498	1					
ANR	962579	Callee	strdup		962498	0					
ANR	962580	Identifier	strdup		962498	0					
ANR	962581	ArgumentList	"r_config_get ( core -> config , ""asm.offset"" )"		962498	1					
ANR	962582	Argument	"r_config_get ( core -> config , ""asm.offset"" )"		962498	0					
ANR	962583	CallExpression	"r_config_get ( core -> config , ""asm.offset"" )"		962498	0					
ANR	962584	Callee	r_config_get		962498	0					
ANR	962585	Identifier	r_config_get		962498	0					
ANR	962586	ArgumentList	core -> config		962498	1					
ANR	962587	Argument	core -> config		962498	0					
ANR	962588	PtrMemberAccess	core -> config		962498	0					
ANR	962589	Identifier	core		962498	0					
ANR	962590	Identifier	config		962498	1					
ANR	962591	Argument	"""asm.offset"""		962498	1					
ANR	962592	PrimaryExpression	"""asm.offset"""		962498	0					
ANR	962593	IdentifierDeclStatement	"char * o_ab = strdup ( r_config_get ( core -> config , ""asm.bytes"" ) ) ;"	923:1:36082:36144	962498	7	True				
ANR	962594	IdentifierDecl	"* o_ab = strdup ( r_config_get ( core -> config , ""asm.bytes"" ) )"		962498	0					
ANR	962595	IdentifierDeclType	char *		962498	0					
ANR	962596	Identifier	o_ab		962498	1					
ANR	962597	AssignmentExpression	"* o_ab = strdup ( r_config_get ( core -> config , ""asm.bytes"" ) )"		962498	2		=			
ANR	962598	Identifier	o_ab		962498	0					
ANR	962599	CallExpression	"strdup ( r_config_get ( core -> config , ""asm.bytes"" ) )"		962498	1					
ANR	962600	Callee	strdup		962498	0					
ANR	962601	Identifier	strdup		962498	0					
ANR	962602	ArgumentList	"r_config_get ( core -> config , ""asm.bytes"" )"		962498	1					
ANR	962603	Argument	"r_config_get ( core -> config , ""asm.bytes"" )"		962498	0					
ANR	962604	CallExpression	"r_config_get ( core -> config , ""asm.bytes"" )"		962498	0					
ANR	962605	Callee	r_config_get		962498	0					
ANR	962606	Identifier	r_config_get		962498	0					
ANR	962607	ArgumentList	core -> config		962498	1					
ANR	962608	Argument	core -> config		962498	0					
ANR	962609	PtrMemberAccess	core -> config		962498	0					
ANR	962610	Identifier	core		962498	0					
ANR	962611	Identifier	config		962498	1					
ANR	962612	Argument	"""asm.bytes"""		962498	1					
ANR	962613	PrimaryExpression	"""asm.bytes"""		962498	0					
ANR	962614	IfStatement	if ( asm_minicols )		962498	8					
ANR	962615	Condition	asm_minicols	924:5:36151:36162	962498	0	True				
ANR	962616	Identifier	asm_minicols		962498	0					
ANR	962617	CompoundStatement		10:19:357:357	962498	1					
ANR	962618	ExpressionStatement	"r_config_set ( core -> config , ""asm.offset"" , ""false"" )"	925:2:36169:36219	962498	0	True				
ANR	962619	CallExpression	"r_config_set ( core -> config , ""asm.offset"" , ""false"" )"		962498	0					
ANR	962620	Callee	r_config_set		962498	0					
ANR	962621	Identifier	r_config_set		962498	0					
ANR	962622	ArgumentList	core -> config		962498	1					
ANR	962623	Argument	core -> config		962498	0					
ANR	962624	PtrMemberAccess	core -> config		962498	0					
ANR	962625	Identifier	core		962498	0					
ANR	962626	Identifier	config		962498	1					
ANR	962627	Argument	"""asm.offset"""		962498	1					
ANR	962628	PrimaryExpression	"""asm.offset"""		962498	0					
ANR	962629	Argument	"""false"""		962498	2					
ANR	962630	PrimaryExpression	"""false"""		962498	0					
ANR	962631	ExpressionStatement	"r_config_set ( core -> config , ""asm.bytes"" , ""false"" )"	926:2:36223:36272	962498	1	True				
ANR	962632	CallExpression	"r_config_set ( core -> config , ""asm.bytes"" , ""false"" )"		962498	0					
ANR	962633	Callee	r_config_set		962498	0					
ANR	962634	Identifier	r_config_set		962498	0					
ANR	962635	ArgumentList	core -> config		962498	1					
ANR	962636	Argument	core -> config		962498	0					
ANR	962637	PtrMemberAccess	core -> config		962498	0					
ANR	962638	Identifier	core		962498	0					
ANR	962639	Identifier	config		962498	1					
ANR	962640	Argument	"""asm.bytes"""		962498	1					
ANR	962641	PrimaryExpression	"""asm.bytes"""		962498	0					
ANR	962642	Argument	"""false"""		962498	2					
ANR	962643	PrimaryExpression	"""false"""		962498	0					
ANR	962644	ExpressionStatement	"r_config_set ( core -> config , ""asm.bytes"" , ""false"" )"	928:1:36278:36327	962498	9	True				
ANR	962645	CallExpression	"r_config_set ( core -> config , ""asm.bytes"" , ""false"" )"		962498	0					
ANR	962646	Callee	r_config_set		962498	0					
ANR	962647	Identifier	r_config_set		962498	0					
ANR	962648	ArgumentList	core -> config		962498	1					
ANR	962649	Argument	core -> config		962498	0					
ANR	962650	PtrMemberAccess	core -> config		962498	0					
ANR	962651	Identifier	core		962498	0					
ANR	962652	Identifier	config		962498	1					
ANR	962653	Argument	"""asm.bytes"""		962498	1					
ANR	962654	PrimaryExpression	"""asm.bytes"""		962498	0					
ANR	962655	Argument	"""false"""		962498	2					
ANR	962656	PrimaryExpression	"""false"""		962498	0					
ANR	962657	IfStatement	if ( user_rows > 0 )		962498	10					
ANR	962658	Condition	user_rows > 0	929:5:36334:36346	962498	0	True				
ANR	962659	RelationalExpression	user_rows > 0		962498	0		>			
ANR	962660	Identifier	user_rows		962498	0					
ANR	962661	PrimaryExpression	0		962498	1					
ANR	962662	CompoundStatement		15:20:541:541	962498	1					
ANR	962663	ExpressionStatement	rows = user_rows + 1	930:2:36353:36373	962498	0	True				
ANR	962664	AssignmentExpression	rows = user_rows + 1		962498	0		=			
ANR	962665	Identifier	rows		962498	0					
ANR	962666	AdditiveExpression	user_rows + 1		962498	1		+			
ANR	962667	Identifier	user_rows		962498	0					
ANR	962668	PrimaryExpression	1		962498	1					
ANR	962669	ExpressionStatement	r_cons_push ( )	932:1:36379:36393	962498	11	True				
ANR	962670	CallExpression	r_cons_push ( )		962498	0					
ANR	962671	Callee	r_cons_push		962498	0					
ANR	962672	Identifier	r_cons_push		962498	0					
ANR	962673	ArgumentList			962498	1					
ANR	962674	IdentifierDeclStatement	"RConsCanvas * c = r_cons_canvas_new ( w , rows ) ;"	933:1:36396:36440	962498	12	True				
ANR	962675	IdentifierDecl	"* c = r_cons_canvas_new ( w , rows )"		962498	0					
ANR	962676	IdentifierDeclType	RConsCanvas *		962498	0					
ANR	962677	Identifier	c		962498	1					
ANR	962678	AssignmentExpression	"* c = r_cons_canvas_new ( w , rows )"		962498	2		=			
ANR	962679	Identifier	c		962498	0					
ANR	962680	CallExpression	"r_cons_canvas_new ( w , rows )"		962498	1					
ANR	962681	Callee	r_cons_canvas_new		962498	0					
ANR	962682	Identifier	r_cons_canvas_new		962498	0					
ANR	962683	ArgumentList	w		962498	1					
ANR	962684	Argument	w		962498	0					
ANR	962685	Identifier	w		962498	0					
ANR	962686	Argument	rows		962498	1					
ANR	962687	Identifier	rows		962498	0					
ANR	962688	IdentifierDeclStatement	ut64 osek = core -> offset ;	934:1:36443:36467	962498	13	True				
ANR	962689	IdentifierDecl	osek = core -> offset		962498	0					
ANR	962690	IdentifierDeclType	ut64		962498	0					
ANR	962691	Identifier	osek		962498	1					
ANR	962692	AssignmentExpression	osek = core -> offset		962498	2		=			
ANR	962693	Identifier	osek		962498	0					
ANR	962694	PtrMemberAccess	core -> offset		962498	1					
ANR	962695	Identifier	core		962498	0					
ANR	962696	Identifier	offset		962498	1					
ANR	962697	ExpressionStatement	"c -> color = r_config_get_i ( core -> config , ""scr.color"" )"	935:1:36470:36523	962498	14	True				
ANR	962698	AssignmentExpression	"c -> color = r_config_get_i ( core -> config , ""scr.color"" )"		962498	0		=			
ANR	962699	PtrMemberAccess	c -> color		962498	0					
ANR	962700	Identifier	c		962498	0					
ANR	962701	Identifier	color		962498	1					
ANR	962702	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		962498	1					
ANR	962703	Callee	r_config_get_i		962498	0					
ANR	962704	Identifier	r_config_get_i		962498	0					
ANR	962705	ArgumentList	core -> config		962498	1					
ANR	962706	Argument	core -> config		962498	0					
ANR	962707	PtrMemberAccess	core -> config		962498	0					
ANR	962708	Identifier	core		962498	0					
ANR	962709	Identifier	config		962498	1					
ANR	962710	Argument	"""scr.color"""		962498	1					
ANR	962711	PrimaryExpression	"""scr.color"""		962498	0					
ANR	962712	ExpressionStatement	"r_core_block_size ( core , rows * 32 )"	936:1:36526:36561	962498	15	True				
ANR	962713	CallExpression	"r_core_block_size ( core , rows * 32 )"		962498	0					
ANR	962714	Callee	r_core_block_size		962498	0					
ANR	962715	Identifier	r_core_block_size		962498	0					
ANR	962716	ArgumentList	core		962498	1					
ANR	962717	Argument	core		962498	0					
ANR	962718	Identifier	core		962498	0					
ANR	962719	Argument	rows * 32		962498	1					
ANR	962720	MultiplicativeExpression	rows * 32		962498	0		*			
ANR	962721	Identifier	rows		962498	0					
ANR	962722	PrimaryExpression	32		962498	1					
ANR	962723	IdentifierDeclStatement	char * cmd = NULL ;	937:1:36564:36580	962498	16	True				
ANR	962724	IdentifierDecl	* cmd = NULL		962498	0					
ANR	962725	IdentifierDeclType	char *		962498	0					
ANR	962726	Identifier	cmd		962498	1					
ANR	962727	AssignmentExpression	* cmd = NULL		962498	2		=			
ANR	962728	Identifier	NULL		962498	0					
ANR	962729	Identifier	NULL		962498	1					
ANR	962730	IdentifierDeclStatement	int columns = 2 ;	938:1:36583:36598	962498	17	True				
ANR	962731	IdentifierDecl	columns = 2		962498	0					
ANR	962732	IdentifierDeclType	int		962498	0					
ANR	962733	Identifier	columns		962498	1					
ANR	962734	AssignmentExpression	columns = 2		962498	2		=			
ANR	962735	Identifier	columns		962498	0					
ANR	962736	PrimaryExpression	2		962498	1					
ANR	962737	ForStatement	for ( i = 0 ; i < columns ; i ++ )		962498	18					
ANR	962738	ForInit	i = 0 ;	939:6:36606:36611	962498	0	True				
ANR	962739	AssignmentExpression	i = 0		962498	0		=			
ANR	962740	Identifier	i		962498	0					
ANR	962741	PrimaryExpression	0		962498	1					
ANR	962742	Condition	i < columns	939:13:36613:36623	962498	1	True				
ANR	962743	RelationalExpression	i < columns		962498	0		<			
ANR	962744	Identifier	i		962498	0					
ANR	962745	Identifier	columns		962498	1					
ANR	962746	PostIncDecOperationExpression	i ++	939:26:36626:36628	962498	2	True				
ANR	962747	Identifier	i		962498	0					
ANR	962748	IncDec	++		962498	1					
ANR	962749	CompoundStatement		37:2:1141:1179	962498	3					
ANR	962750	SwitchStatement	switch ( i )		962498	0					
ANR	962751	Condition	i	940:10:36643:36643	962498	0	True				
ANR	962752	Identifier	i		962498	0					
ANR	962753	CompoundStatement		26:13:838:838	962498	1					
ANR	962754	Label	case 0 :	941:2:36650:36656	962498	0	True				
ANR	962755	ExpressionStatement	"( void ) r_cons_canvas_gotoxy ( c , 0 , 0 )"	942:3:36661:36698	962498	1	True				
ANR	962756	CastExpression	"( void ) r_cons_canvas_gotoxy ( c , 0 , 0 )"		962498	0					
ANR	962757	CastTarget	void		962498	0					
ANR	962758	CallExpression	"r_cons_canvas_gotoxy ( c , 0 , 0 )"		962498	1					
ANR	962759	Callee	r_cons_canvas_gotoxy		962498	0					
ANR	962760	Identifier	r_cons_canvas_gotoxy		962498	0					
ANR	962761	ArgumentList	c		962498	1					
ANR	962762	Argument	c		962498	0					
ANR	962763	Identifier	c		962498	0					
ANR	962764	Argument	0		962498	1					
ANR	962765	PrimaryExpression	0		962498	0					
ANR	962766	Argument	0		962498	2					
ANR	962767	PrimaryExpression	0		962498	0					
ANR	962768	ExpressionStatement	"cmd = r_str_newf ( ""dr;?e;?e backtrace:;dbt"" )"	943:3:36703:36747	962498	2	True				
ANR	962769	AssignmentExpression	"cmd = r_str_newf ( ""dr;?e;?e backtrace:;dbt"" )"		962498	0		=			
ANR	962770	Identifier	cmd		962498	0					
ANR	962771	CallExpression	"r_str_newf ( ""dr;?e;?e backtrace:;dbt"" )"		962498	1					
ANR	962772	Callee	r_str_newf		962498	0					
ANR	962773	Identifier	r_str_newf		962498	0					
ANR	962774	ArgumentList	"""dr;?e;?e backtrace:;dbt"""		962498	1					
ANR	962775	Argument	"""dr;?e;?e backtrace:;dbt"""		962498	0					
ANR	962776	PrimaryExpression	"""dr;?e;?e backtrace:;dbt"""		962498	0					
ANR	962777	BreakStatement	break ;	944:3:36752:36757	962498	3	True				
ANR	962778	Label	case 1 :	945:2:36761:36767	962498	4	True				
ANR	962779	ExpressionStatement	"( void ) r_cons_canvas_gotoxy ( c , 28 , 0 )"	946:3:36772:36810	962498	5	True				
ANR	962780	CastExpression	"( void ) r_cons_canvas_gotoxy ( c , 28 , 0 )"		962498	0					
ANR	962781	CastTarget	void		962498	0					
ANR	962782	CallExpression	"r_cons_canvas_gotoxy ( c , 28 , 0 )"		962498	1					
ANR	962783	Callee	r_cons_canvas_gotoxy		962498	0					
ANR	962784	Identifier	r_cons_canvas_gotoxy		962498	0					
ANR	962785	ArgumentList	c		962498	1					
ANR	962786	Argument	c		962498	0					
ANR	962787	Identifier	c		962498	0					
ANR	962788	Argument	28		962498	1					
ANR	962789	PrimaryExpression	28		962498	0					
ANR	962790	Argument	0		962498	2					
ANR	962791	PrimaryExpression	0		962498	0					
ANR	962792	Statement	cmd	948:3:36864:36866	962498	6	True				
ANR	962793	Statement	=	948:7:36868:36868	962498	7	True				
ANR	962794	Statement	r_str_newf	948:9:36870:36879	962498	8	True				
ANR	962795	Statement	(	948:20:36881:36881	962498	9	True				
ANR	962796	Statement	"""%s 128@r:SP;pd@ 0x%"""	948:21:36882:36902	962498	10	True				
ANR	962797	Statement	PFMT64x	948:42:36903:36909	962498	11	True				
ANR	962798	Statement	","	948:49:36910:36910	962498	12	True				
ANR	962799	Statement	core	948:51:36912:36915	962498	13	True				
ANR	962800	Statement	->	948:55:36916:36917	962498	14	True				
ANR	962801	Statement	stkcmd	948:57:36918:36923	962498	15	True				
ANR	962802	Statement	","	948:63:36924:36924	962498	16	True				
ANR	962803	Statement	osek	948:65:36926:36929	962498	17	True				
ANR	962804	Statement	)	948:69:36930:36930	962498	18	True				
ANR	962805	ExpressionStatement		948:70:36931:36931	962498	19	True				
ANR	962806	BreakStatement	break ;	949:3:36936:36941	962498	20	True				
ANR	962807	IdentifierDeclStatement	"char * dis = r_core_cmd_str ( core , cmd ) ;"	951:2:36949:36987	962498	1	True				
ANR	962808	IdentifierDecl	"* dis = r_core_cmd_str ( core , cmd )"		962498	0					
ANR	962809	IdentifierDeclType	char *		962498	0					
ANR	962810	Identifier	dis		962498	1					
ANR	962811	AssignmentExpression	"* dis = r_core_cmd_str ( core , cmd )"		962498	2		=			
ANR	962812	Identifier	dis		962498	0					
ANR	962813	CallExpression	"r_core_cmd_str ( core , cmd )"		962498	1					
ANR	962814	Callee	r_core_cmd_str		962498	0					
ANR	962815	Identifier	r_core_cmd_str		962498	0					
ANR	962816	ArgumentList	core		962498	1					
ANR	962817	Argument	core		962498	0					
ANR	962818	Identifier	core		962498	0					
ANR	962819	Argument	cmd		962498	1					
ANR	962820	Identifier	cmd		962498	0					
ANR	962821	ExpressionStatement	"r_cons_canvas_write ( c , dis )"	952:2:36991:37019	962498	2	True				
ANR	962822	CallExpression	"r_cons_canvas_write ( c , dis )"		962498	0					
ANR	962823	Callee	r_cons_canvas_write		962498	0					
ANR	962824	Identifier	r_cons_canvas_write		962498	0					
ANR	962825	ArgumentList	c		962498	1					
ANR	962826	Argument	c		962498	0					
ANR	962827	Identifier	c		962498	0					
ANR	962828	Argument	dis		962498	1					
ANR	962829	Identifier	dis		962498	0					
ANR	962830	ExpressionStatement	free ( cmd )	953:2:37023:37033	962498	3	True				
ANR	962831	CallExpression	free ( cmd )		962498	0					
ANR	962832	Callee	free		962498	0					
ANR	962833	Identifier	free		962498	0					
ANR	962834	ArgumentList	cmd		962498	1					
ANR	962835	Argument	cmd		962498	0					
ANR	962836	Identifier	cmd		962498	0					
ANR	962837	ExpressionStatement	free ( dis )	954:2:37037:37047	962498	4	True				
ANR	962838	CallExpression	free ( dis )		962498	0					
ANR	962839	Callee	free		962498	0					
ANR	962840	Identifier	free		962498	0					
ANR	962841	ArgumentList	dis		962498	1					
ANR	962842	Argument	dis		962498	0					
ANR	962843	Identifier	dis		962498	0					
ANR	962844	ExpressionStatement	"r_core_block_size ( core , obsz )"	956:1:37053:37083	962498	19	True				
ANR	962845	CallExpression	"r_core_block_size ( core , obsz )"		962498	0					
ANR	962846	Callee	r_core_block_size		962498	0					
ANR	962847	Identifier	r_core_block_size		962498	0					
ANR	962848	ArgumentList	core		962498	1					
ANR	962849	Argument	core		962498	0					
ANR	962850	Identifier	core		962498	0					
ANR	962851	Argument	obsz		962498	1					
ANR	962852	Identifier	obsz		962498	0					
ANR	962853	ExpressionStatement	"r_core_seek ( core , osek , 1 )"	957:1:37086:37113	962498	20	True				
ANR	962854	CallExpression	"r_core_seek ( core , osek , 1 )"		962498	0					
ANR	962855	Callee	r_core_seek		962498	0					
ANR	962856	Identifier	r_core_seek		962498	0					
ANR	962857	ArgumentList	core		962498	1					
ANR	962858	Argument	core		962498	0					
ANR	962859	Identifier	core		962498	0					
ANR	962860	Argument	osek		962498	1					
ANR	962861	Identifier	osek		962498	0					
ANR	962862	Argument	1		962498	2					
ANR	962863	PrimaryExpression	1		962498	0					
ANR	962864	ExpressionStatement	r_cons_pop ( )	959:1:37117:37130	962498	21	True				
ANR	962865	CallExpression	r_cons_pop ( )		962498	0					
ANR	962866	Callee	r_cons_pop		962498	0					
ANR	962867	Identifier	r_cons_pop		962498	0					
ANR	962868	ArgumentList			962498	1					
ANR	962869	ExpressionStatement	r_cons_canvas_print ( c )	960:1:37133:37156	962498	22	True				
ANR	962870	CallExpression	r_cons_canvas_print ( c )		962498	0					
ANR	962871	Callee	r_cons_canvas_print		962498	0					
ANR	962872	Identifier	r_cons_canvas_print		962498	0					
ANR	962873	ArgumentList	c		962498	1					
ANR	962874	Argument	c		962498	0					
ANR	962875	Identifier	c		962498	0					
ANR	962876	ExpressionStatement	r_cons_canvas_free ( c )	961:1:37159:37181	962498	23	True				
ANR	962877	CallExpression	r_cons_canvas_free ( c )		962498	0					
ANR	962878	Callee	r_cons_canvas_free		962498	0					
ANR	962879	Identifier	r_cons_canvas_free		962498	0					
ANR	962880	ArgumentList	c		962498	1					
ANR	962881	Argument	c		962498	0					
ANR	962882	Identifier	c		962498	0					
ANR	962883	IfStatement	if ( asm_minicols )		962498	24					
ANR	962884	Condition	asm_minicols	962:5:37188:37199	962498	0	True				
ANR	962885	Identifier	asm_minicols		962498	0					
ANR	962886	CompoundStatement		48:19:1394:1394	962498	1					
ANR	962887	ExpressionStatement	"r_config_set ( core -> config , ""asm.offset"" , o_ao )"	963:2:37206:37253	962498	0	True				
ANR	962888	CallExpression	"r_config_set ( core -> config , ""asm.offset"" , o_ao )"		962498	0					
ANR	962889	Callee	r_config_set		962498	0					
ANR	962890	Identifier	r_config_set		962498	0					
ANR	962891	ArgumentList	core -> config		962498	1					
ANR	962892	Argument	core -> config		962498	0					
ANR	962893	PtrMemberAccess	core -> config		962498	0					
ANR	962894	Identifier	core		962498	0					
ANR	962895	Identifier	config		962498	1					
ANR	962896	Argument	"""asm.offset"""		962498	1					
ANR	962897	PrimaryExpression	"""asm.offset"""		962498	0					
ANR	962898	Argument	o_ao		962498	2					
ANR	962899	Identifier	o_ao		962498	0					
ANR	962900	ExpressionStatement	"r_config_set ( core -> config , ""asm.bytes"" , o_ab )"	964:2:37257:37303	962498	1	True				
ANR	962901	CallExpression	"r_config_set ( core -> config , ""asm.bytes"" , o_ab )"		962498	0					
ANR	962902	Callee	r_config_set		962498	0					
ANR	962903	Identifier	r_config_set		962498	0					
ANR	962904	ArgumentList	core -> config		962498	1					
ANR	962905	Argument	core -> config		962498	0					
ANR	962906	PtrMemberAccess	core -> config		962498	0					
ANR	962907	Identifier	core		962498	0					
ANR	962908	Identifier	config		962498	1					
ANR	962909	Argument	"""asm.bytes"""		962498	1					
ANR	962910	PrimaryExpression	"""asm.bytes"""		962498	0					
ANR	962911	Argument	o_ab		962498	2					
ANR	962912	Identifier	o_ab		962498	0					
ANR	962913	ExpressionStatement	"r_config_set ( core -> config , ""asm.bytes"" , o_ab )"	966:1:37309:37355	962498	25	True				
ANR	962914	CallExpression	"r_config_set ( core -> config , ""asm.bytes"" , o_ab )"		962498	0					
ANR	962915	Callee	r_config_set		962498	0					
ANR	962916	Identifier	r_config_set		962498	0					
ANR	962917	ArgumentList	core -> config		962498	1					
ANR	962918	Argument	core -> config		962498	0					
ANR	962919	PtrMemberAccess	core -> config		962498	0					
ANR	962920	Identifier	core		962498	0					
ANR	962921	Identifier	config		962498	1					
ANR	962922	Argument	"""asm.bytes"""		962498	1					
ANR	962923	PrimaryExpression	"""asm.bytes"""		962498	0					
ANR	962924	Argument	o_ab		962498	2					
ANR	962925	Identifier	o_ab		962498	0					
ANR	962926	ExpressionStatement	free ( o_ao )	967:1:37358:37369	962498	26	True				
ANR	962927	CallExpression	free ( o_ao )		962498	0					
ANR	962928	Callee	free		962498	0					
ANR	962929	Identifier	free		962498	0					
ANR	962930	ArgumentList	o_ao		962498	1					
ANR	962931	Argument	o_ao		962498	0					
ANR	962932	Identifier	o_ao		962498	0					
ANR	962933	ExpressionStatement	free ( o_ab )	968:1:37372:37383	962498	27	True				
ANR	962934	CallExpression	free ( o_ab )		962498	0					
ANR	962935	Callee	free		962498	0					
ANR	962936	Identifier	free		962498	0					
ANR	962937	ArgumentList	o_ab		962498	1					
ANR	962938	Argument	o_ab		962498	0					
ANR	962939	Identifier	o_ab		962498	0					
ANR	962940	ReturnType	static void		962498	1					
ANR	962941	Identifier	cmd_pCD		962498	2					
ANR	962942	ParameterList	"RCore * core , const char * input"		962498	3					
ANR	962943	Parameter	RCore * core	915:20:35775:35785	962498	0	True				
ANR	962944	ParameterType	RCore *		962498	0					
ANR	962945	Identifier	core		962498	1					
ANR	962946	Parameter	const char * input	915:33:35788:35804	962498	1	True				
ANR	962947	ParameterType	const char *		962498	0					
ANR	962948	Identifier	input		962498	1					
ANR	962949	CFGEntryNode	ENTRY		962498		True				
ANR	962950	CFGExitNode	EXIT		962498		True				
ANR	962951	Symbol	o_ab		962498						
ANR	962952	Symbol	r_core_cmd_str		962498						
ANR	962953	Symbol	columns		962498						
ANR	962954	Symbol	* core		962498						
ANR	962955	Symbol	r_config_get		962498						
ANR	962956	Symbol	obsz		962498						
ANR	962957	Symbol	core -> offset		962498						
ANR	962958	Symbol	r_str_newf		962498						
ANR	962959	Symbol	o_ao		962498						
ANR	962960	Symbol	r_num_math		962498						
ANR	962961	Symbol	dis		962498						
ANR	962962	Symbol	core -> num		962498						
ANR	962963	Symbol	c -> color		962498						
ANR	962964	Symbol	core -> blocksize		962498						
ANR	962965	Symbol	core -> config		962498						
ANR	962966	Symbol	c		962498						
ANR	962967	Symbol	NULL		962498						
ANR	962968	Symbol	r_cons_get_size		962498						
ANR	962969	Symbol	h		962498						
ANR	962970	Symbol	i		962498						
ANR	962971	Symbol	rows		962498						
ANR	962972	Symbol	* c		962498						
ANR	962973	Symbol	& h		962498						
ANR	962974	Symbol	core		962498						
ANR	962975	Symbol	input		962498						
ANR	962976	Symbol	user_rows		962498						
ANR	962977	Symbol	w		962498						
ANR	962978	Symbol	r_config_get_i		962498						
ANR	962979	Symbol	r_cons_canvas_new		962498						
ANR	962980	Symbol	strdup		962498						
ANR	962981	Symbol	cmd		962498						
ANR	962982	Symbol	asm_minicols		962498						
ANR	962983	Symbol	osek		962498						
ANR	962984	Function	cmd_pCx	971:0:37388:38509							
ANR	962985	FunctionDef	"cmd_pCx (RCore * core , const char * input , const char * xcmd)"		962984	0					
ANR	962986	CompoundStatement		971:70:37458:38509	962984	0					
ANR	962987	IdentifierDeclStatement	"int h , w = r_cons_get_size ( & h ) ;"	972:1:37461:37492	962984	0	True				
ANR	962988	IdentifierDecl	h		962984	0					
ANR	962989	IdentifierDeclType	int		962984	0					
ANR	962990	Identifier	h		962984	1					
ANR	962991	IdentifierDecl	w = r_cons_get_size ( & h )		962984	1					
ANR	962992	IdentifierDeclType	int		962984	0					
ANR	962993	Identifier	w		962984	1					
ANR	962994	AssignmentExpression	w = r_cons_get_size ( & h )		962984	2		=			
ANR	962995	Identifier	w		962984	0					
ANR	962996	CallExpression	r_cons_get_size ( & h )		962984	1					
ANR	962997	Callee	r_cons_get_size		962984	0					
ANR	962998	Identifier	r_cons_get_size		962984	0					
ANR	962999	ArgumentList	& h		962984	1					
ANR	963000	Argument	& h		962984	0					
ANR	963001	UnaryOperationExpression	& h		962984	0					
ANR	963002	UnaryOperator	&		962984	0					
ANR	963003	Identifier	h		962984	1					
ANR	963004	IdentifierDeclStatement	"int hex_cols = r_config_get_i ( core -> config , ""hex.cols"" ) ;"	973:1:37495:37551	962984	1	True				
ANR	963005	IdentifierDecl	"hex_cols = r_config_get_i ( core -> config , ""hex.cols"" )"		962984	0					
ANR	963006	IdentifierDeclType	int		962984	0					
ANR	963007	Identifier	hex_cols		962984	1					
ANR	963008	AssignmentExpression	"hex_cols = r_config_get_i ( core -> config , ""hex.cols"" )"		962984	2		=			
ANR	963009	Identifier	hex_cols		962984	0					
ANR	963010	CallExpression	"r_config_get_i ( core -> config , ""hex.cols"" )"		962984	1					
ANR	963011	Callee	r_config_get_i		962984	0					
ANR	963012	Identifier	r_config_get_i		962984	0					
ANR	963013	ArgumentList	core -> config		962984	1					
ANR	963014	Argument	core -> config		962984	0					
ANR	963015	PtrMemberAccess	core -> config		962984	0					
ANR	963016	Identifier	core		962984	0					
ANR	963017	Identifier	config		962984	1					
ANR	963018	Argument	"""hex.cols"""		962984	1					
ANR	963019	PrimaryExpression	"""hex.cols"""		962984	0					
ANR	963020	IdentifierDeclStatement	int colwidth = hex_cols * 5 ;	974:1:37554:37581	962984	2	True				
ANR	963021	IdentifierDecl	colwidth = hex_cols * 5		962984	0					
ANR	963022	IdentifierDeclType	int		962984	0					
ANR	963023	Identifier	colwidth		962984	1					
ANR	963024	AssignmentExpression	colwidth = hex_cols * 5		962984	2		=			
ANR	963025	Identifier	colwidth		962984	0					
ANR	963026	MultiplicativeExpression	hex_cols * 5		962984	1		*			
ANR	963027	Identifier	hex_cols		962984	0					
ANR	963028	PrimaryExpression	5		962984	1					
ANR	963029	IdentifierDeclStatement	"int i , columns = w / ( colwidth * 0.9 ) ;"	975:1:37584:37621	962984	3	True				
ANR	963030	IdentifierDecl	i		962984	0					
ANR	963031	IdentifierDeclType	int		962984	0					
ANR	963032	Identifier	i		962984	1					
ANR	963033	IdentifierDecl	columns = w / ( colwidth * 0.9 )		962984	1					
ANR	963034	IdentifierDeclType	int		962984	0					
ANR	963035	Identifier	columns		962984	1					
ANR	963036	AssignmentExpression	columns = w / ( colwidth * 0.9 )		962984	2		=			
ANR	963037	Identifier	columns		962984	0					
ANR	963038	MultiplicativeExpression	w / ( colwidth * 0.9 )		962984	1		/			
ANR	963039	Identifier	w		962984	0					
ANR	963040	MultiplicativeExpression	colwidth * 0.9		962984	1		*			
ANR	963041	Identifier	colwidth		962984	0					
ANR	963042	PrimaryExpression	0.9		962984	1					
ANR	963043	IdentifierDeclStatement	int rows = h - 2 ;	976:1:37624:37640	962984	4	True				
ANR	963044	IdentifierDecl	rows = h - 2		962984	0					
ANR	963045	IdentifierDeclType	int		962984	0					
ANR	963046	Identifier	rows		962984	1					
ANR	963047	AssignmentExpression	rows = h - 2		962984	2		=			
ANR	963048	Identifier	rows		962984	0					
ANR	963049	AdditiveExpression	h - 2		962984	1		-			
ANR	963050	Identifier	h		962984	0					
ANR	963051	PrimaryExpression	2		962984	1					
ANR	963052	IdentifierDeclStatement	"int user_rows = r_num_math ( core -> num , input ) ;"	977:1:37643:37688	962984	5	True				
ANR	963053	IdentifierDecl	"user_rows = r_num_math ( core -> num , input )"		962984	0					
ANR	963054	IdentifierDeclType	int		962984	0					
ANR	963055	Identifier	user_rows		962984	1					
ANR	963056	AssignmentExpression	"user_rows = r_num_math ( core -> num , input )"		962984	2		=			
ANR	963057	Identifier	user_rows		962984	0					
ANR	963058	CallExpression	"r_num_math ( core -> num , input )"		962984	1					
ANR	963059	Callee	r_num_math		962984	0					
ANR	963060	Identifier	r_num_math		962984	0					
ANR	963061	ArgumentList	core -> num		962984	1					
ANR	963062	Argument	core -> num		962984	0					
ANR	963063	PtrMemberAccess	core -> num		962984	0					
ANR	963064	Identifier	core		962984	0					
ANR	963065	Identifier	num		962984	1					
ANR	963066	Argument	input		962984	1					
ANR	963067	Identifier	input		962984	0					
ANR	963068	ExpressionStatement	"r_config_set_i ( core -> config , ""hex.cols"" , colwidth / 5 )"	978:1:37691:37746	962984	6	True				
ANR	963069	CallExpression	"r_config_set_i ( core -> config , ""hex.cols"" , colwidth / 5 )"		962984	0					
ANR	963070	Callee	r_config_set_i		962984	0					
ANR	963071	Identifier	r_config_set_i		962984	0					
ANR	963072	ArgumentList	core -> config		962984	1					
ANR	963073	Argument	core -> config		962984	0					
ANR	963074	PtrMemberAccess	core -> config		962984	0					
ANR	963075	Identifier	core		962984	0					
ANR	963076	Identifier	config		962984	1					
ANR	963077	Argument	"""hex.cols"""		962984	1					
ANR	963078	PrimaryExpression	"""hex.cols"""		962984	0					
ANR	963079	Argument	colwidth / 5		962984	2					
ANR	963080	MultiplicativeExpression	colwidth / 5		962984	0		/			
ANR	963081	Identifier	colwidth		962984	0					
ANR	963082	PrimaryExpression	5		962984	1					
ANR	963083	IfStatement	if ( user_rows > 0 )		962984	7					
ANR	963084	Condition	user_rows > 0	979:5:37753:37765	962984	0	True				
ANR	963085	RelationalExpression	user_rows > 0		962984	0		>			
ANR	963086	Identifier	user_rows		962984	0					
ANR	963087	PrimaryExpression	0		962984	1					
ANR	963088	CompoundStatement		9:20:309:309	962984	1					
ANR	963089	ExpressionStatement	rows = user_rows + 1	980:2:37772:37792	962984	0	True				
ANR	963090	AssignmentExpression	rows = user_rows + 1		962984	0		=			
ANR	963091	Identifier	rows		962984	0					
ANR	963092	AdditiveExpression	user_rows + 1		962984	1		+			
ANR	963093	Identifier	user_rows		962984	0					
ANR	963094	PrimaryExpression	1		962984	1					
ANR	963095	IdentifierDeclStatement	"RConsCanvas * c = r_cons_canvas_new ( w , rows ) ;"	982:1:37798:37842	962984	8	True				
ANR	963096	IdentifierDecl	"* c = r_cons_canvas_new ( w , rows )"		962984	0					
ANR	963097	IdentifierDeclType	RConsCanvas *		962984	0					
ANR	963098	Identifier	c		962984	1					
ANR	963099	AssignmentExpression	"* c = r_cons_canvas_new ( w , rows )"		962984	2		=			
ANR	963100	Identifier	c		962984	0					
ANR	963101	CallExpression	"r_cons_canvas_new ( w , rows )"		962984	1					
ANR	963102	Callee	r_cons_canvas_new		962984	0					
ANR	963103	Identifier	r_cons_canvas_new		962984	0					
ANR	963104	ArgumentList	w		962984	1					
ANR	963105	Argument	w		962984	0					
ANR	963106	Identifier	w		962984	0					
ANR	963107	Argument	rows		962984	1					
ANR	963108	Identifier	rows		962984	0					
ANR	963109	IfStatement	if ( ! c )		962984	9					
ANR	963110	Condition	! c	983:5:37849:37850	962984	0	True				
ANR	963111	UnaryOperationExpression	! c		962984	0					
ANR	963112	UnaryOperator	!		962984	0					
ANR	963113	Identifier	c		962984	1					
ANR	963114	CompoundStatement		13:9:394:394	962984	1					
ANR	963115	ExpressionStatement	"eprintf ( ""Couldn't allocate a canvas with %d rows\\n"" , rows )"	984:2:37857:37916	962984	0	True				
ANR	963116	CallExpression	"eprintf ( ""Couldn't allocate a canvas with %d rows\\n"" , rows )"		962984	0					
ANR	963117	Callee	eprintf		962984	0					
ANR	963118	Identifier	eprintf		962984	0					
ANR	963119	ArgumentList	"""Couldn't allocate a canvas with %d rows\\n"""		962984	1					
ANR	963120	Argument	"""Couldn't allocate a canvas with %d rows\\n"""		962984	0					
ANR	963121	PrimaryExpression	"""Couldn't allocate a canvas with %d rows\\n"""		962984	0					
ANR	963122	Argument	rows		962984	1					
ANR	963123	Identifier	rows		962984	0					
ANR	963124	GotoStatement	goto err ;	985:2:37920:37928	962984	1	True				
ANR	963125	Identifier	err		962984	0					
ANR	963126	IdentifierDeclStatement	ut64 tsek = core -> offset ;	988:1:37935:37959	962984	10	True				
ANR	963127	IdentifierDecl	tsek = core -> offset		962984	0					
ANR	963128	IdentifierDeclType	ut64		962984	0					
ANR	963129	Identifier	tsek		962984	1					
ANR	963130	AssignmentExpression	tsek = core -> offset		962984	2		=			
ANR	963131	Identifier	tsek		962984	0					
ANR	963132	PtrMemberAccess	core -> offset		962984	1					
ANR	963133	Identifier	core		962984	0					
ANR	963134	Identifier	offset		962984	1					
ANR	963135	ExpressionStatement	"c -> color = r_config_get_i ( core -> config , ""scr.color"" )"	989:1:37962:38015	962984	11	True				
ANR	963136	AssignmentExpression	"c -> color = r_config_get_i ( core -> config , ""scr.color"" )"		962984	0		=			
ANR	963137	PtrMemberAccess	c -> color		962984	0					
ANR	963138	Identifier	c		962984	0					
ANR	963139	Identifier	color		962984	1					
ANR	963140	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		962984	1					
ANR	963141	Callee	r_config_get_i		962984	0					
ANR	963142	Identifier	r_config_get_i		962984	0					
ANR	963143	ArgumentList	core -> config		962984	1					
ANR	963144	Argument	core -> config		962984	0					
ANR	963145	PtrMemberAccess	core -> config		962984	0					
ANR	963146	Identifier	core		962984	0					
ANR	963147	Identifier	config		962984	1					
ANR	963148	Argument	"""scr.color"""		962984	1					
ANR	963149	PrimaryExpression	"""scr.color"""		962984	0					
ANR	963150	IdentifierDeclStatement	int bsize = hex_cols * rows ;	990:1:38018:38045	962984	12	True				
ANR	963151	IdentifierDecl	bsize = hex_cols * rows		962984	0					
ANR	963152	IdentifierDeclType	int		962984	0					
ANR	963153	Identifier	bsize		962984	1					
ANR	963154	AssignmentExpression	bsize = hex_cols * rows		962984	2		=			
ANR	963155	Identifier	bsize		962984	0					
ANR	963156	MultiplicativeExpression	hex_cols * rows		962984	1		*			
ANR	963157	Identifier	hex_cols		962984	0					
ANR	963158	Identifier	rows		962984	1					
ANR	963159	IfStatement	"if ( ! strcmp ( xcmd , ""pxA"" ) )"		962984	13					
ANR	963160	Condition	"! strcmp ( xcmd , ""pxA"" )"	991:5:38052:38072	962984	0	True				
ANR	963161	UnaryOperationExpression	"! strcmp ( xcmd , ""pxA"" )"		962984	0					
ANR	963162	UnaryOperator	!		962984	0					
ANR	963163	CallExpression	"strcmp ( xcmd , ""pxA"" )"		962984	1					
ANR	963164	Callee	strcmp		962984	0					
ANR	963165	Identifier	strcmp		962984	0					
ANR	963166	ArgumentList	xcmd		962984	1					
ANR	963167	Argument	xcmd		962984	0					
ANR	963168	Identifier	xcmd		962984	0					
ANR	963169	Argument	"""pxA"""		962984	1					
ANR	963170	PrimaryExpression	"""pxA"""		962984	0					
ANR	963171	CompoundStatement		21:28:616:616	962984	1					
ANR	963172	ExpressionStatement	bsize *= 12	992:2:38079:38090	962984	0	True				
ANR	963173	AssignmentExpression	bsize *= 12		962984	0		*=			
ANR	963174	Identifier	bsize		962984	0					
ANR	963175	PrimaryExpression	12		962984	1					
ANR	963176	ForStatement	for ( i = 0 ; i < columns ; i ++ )		962984	14					
ANR	963177	ForInit	i = 0 ;	994:6:38101:38106	962984	0	True				
ANR	963178	AssignmentExpression	i = 0		962984	0		=			
ANR	963179	Identifier	i		962984	0					
ANR	963180	PrimaryExpression	0		962984	1					
ANR	963181	Condition	i < columns	994:13:38108:38118	962984	1	True				
ANR	963182	RelationalExpression	i < columns		962984	0		<			
ANR	963183	Identifier	i		962984	0					
ANR	963184	Identifier	columns		962984	1					
ANR	963185	PostIncDecOperationExpression	i ++	994:26:38121:38123	962984	2	True				
ANR	963186	Identifier	i		962984	0					
ANR	963187	IncDec	++		962984	1					
ANR	963188	CompoundStatement		27:2:794:832	962984	3					
ANR	963189	ExpressionStatement	"( void ) r_cons_canvas_gotoxy ( c , i * ( w / columns ) , 0 )"	995:2:38130:38183	962984	0	True				
ANR	963190	CastExpression	"( void ) r_cons_canvas_gotoxy ( c , i * ( w / columns ) , 0 )"		962984	0					
ANR	963191	CastTarget	void		962984	0					
ANR	963192	CallExpression	"r_cons_canvas_gotoxy ( c , i * ( w / columns ) , 0 )"		962984	1					
ANR	963193	Callee	r_cons_canvas_gotoxy		962984	0					
ANR	963194	Identifier	r_cons_canvas_gotoxy		962984	0					
ANR	963195	ArgumentList	c		962984	1					
ANR	963196	Argument	c		962984	0					
ANR	963197	Identifier	c		962984	0					
ANR	963198	Argument	i * ( w / columns )		962984	1					
ANR	963199	MultiplicativeExpression	i * ( w / columns )		962984	0		*			
ANR	963200	Identifier	i		962984	0					
ANR	963201	MultiplicativeExpression	w / columns		962984	1		/			
ANR	963202	Identifier	w		962984	0					
ANR	963203	Identifier	columns		962984	1					
ANR	963204	Argument	0		962984	2					
ANR	963205	PrimaryExpression	0		962984	0					
ANR	963206	Statement	char	996:2:38187:38190	962984	1	True				
ANR	963207	Statement	*	996:7:38192:38192	962984	2	True				
ANR	963208	Statement	cmd	996:8:38193:38195	962984	3	True				
ANR	963209	Statement	=	996:12:38197:38197	962984	4	True				
ANR	963210	Statement	r_str_newf	996:14:38199:38208	962984	5	True				
ANR	963211	Statement	(	996:25:38210:38210	962984	6	True				
ANR	963212	Statement	"""%s %d @ %"""	996:26:38211:38221	962984	7	True				
ANR	963213	Statement	PFMT64u	996:37:38222:38228	962984	8	True				
ANR	963214	Statement	","	996:44:38229:38229	962984	9	True				
ANR	963215	Statement	xcmd	996:46:38231:38234	962984	10	True				
ANR	963216	Statement	","	996:50:38235:38235	962984	11	True				
ANR	963217	Statement	bsize	996:52:38237:38241	962984	12	True				
ANR	963218	Statement	","	996:57:38242:38242	962984	13	True				
ANR	963219	Statement	tsek	996:59:38244:38247	962984	14	True				
ANR	963220	Statement	)	996:63:38248:38248	962984	15	True				
ANR	963221	ExpressionStatement		996:64:38249:38249	962984	16	True				
ANR	963222	IdentifierDeclStatement	"char * dis = r_core_cmd_str ( core , cmd ) ;"	997:2:38253:38291	962984	17	True				
ANR	963223	IdentifierDecl	"* dis = r_core_cmd_str ( core , cmd )"		962984	0					
ANR	963224	IdentifierDeclType	char *		962984	0					
ANR	963225	Identifier	dis		962984	1					
ANR	963226	AssignmentExpression	"* dis = r_core_cmd_str ( core , cmd )"		962984	2		=			
ANR	963227	Identifier	dis		962984	0					
ANR	963228	CallExpression	"r_core_cmd_str ( core , cmd )"		962984	1					
ANR	963229	Callee	r_core_cmd_str		962984	0					
ANR	963230	Identifier	r_core_cmd_str		962984	0					
ANR	963231	ArgumentList	core		962984	1					
ANR	963232	Argument	core		962984	0					
ANR	963233	Identifier	core		962984	0					
ANR	963234	Argument	cmd		962984	1					
ANR	963235	Identifier	cmd		962984	0					
ANR	963236	IfStatement	if ( dis )		962984	18					
ANR	963237	Condition	dis	998:6:38299:38301	962984	0	True				
ANR	963238	Identifier	dis		962984	0					
ANR	963239	CompoundStatement		28:11:845:845	962984	1					
ANR	963240	ExpressionStatement	"r_cons_canvas_write ( c , dis )"	999:3:38309:38337	962984	0	True				
ANR	963241	CallExpression	"r_cons_canvas_write ( c , dis )"		962984	0					
ANR	963242	Callee	r_cons_canvas_write		962984	0					
ANR	963243	Identifier	r_cons_canvas_write		962984	0					
ANR	963244	ArgumentList	c		962984	1					
ANR	963245	Argument	c		962984	0					
ANR	963246	Identifier	c		962984	0					
ANR	963247	Argument	dis		962984	1					
ANR	963248	Identifier	dis		962984	0					
ANR	963249	ExpressionStatement	free ( dis )	1000:3:38342:38352	962984	1	True				
ANR	963250	CallExpression	free ( dis )		962984	0					
ANR	963251	Callee	free		962984	0					
ANR	963252	Identifier	free		962984	0					
ANR	963253	ArgumentList	dis		962984	1					
ANR	963254	Argument	dis		962984	0					
ANR	963255	Identifier	dis		962984	0					
ANR	963256	ExpressionStatement	free ( cmd )	1002:2:38360:38370	962984	19	True				
ANR	963257	CallExpression	free ( cmd )		962984	0					
ANR	963258	Callee	free		962984	0					
ANR	963259	Identifier	free		962984	0					
ANR	963260	ArgumentList	cmd		962984	1					
ANR	963261	Argument	cmd		962984	0					
ANR	963262	Identifier	cmd		962984	0					
ANR	963263	ExpressionStatement	tsek += bsize - 32	1003:2:38374:38392	962984	20	True				
ANR	963264	AssignmentExpression	tsek += bsize - 32		962984	0		+=			
ANR	963265	Identifier	tsek		962984	0					
ANR	963266	AdditiveExpression	bsize - 32		962984	1		-			
ANR	963267	Identifier	bsize		962984	0					
ANR	963268	PrimaryExpression	32		962984	1					
ANR	963269	ExpressionStatement	r_cons_canvas_print ( c )	1006:1:38399:38422	962984	15	True				
ANR	963270	CallExpression	r_cons_canvas_print ( c )		962984	0					
ANR	963271	Callee	r_cons_canvas_print		962984	0					
ANR	963272	Identifier	r_cons_canvas_print		962984	0					
ANR	963273	ArgumentList	c		962984	1					
ANR	963274	Argument	c		962984	0					
ANR	963275	Identifier	c		962984	0					
ANR	963276	ExpressionStatement	r_cons_canvas_free ( c )	1007:1:38425:38447	962984	16	True				
ANR	963277	CallExpression	r_cons_canvas_free ( c )		962984	0					
ANR	963278	Callee	r_cons_canvas_free		962984	0					
ANR	963279	Identifier	r_cons_canvas_free		962984	0					
ANR	963280	ArgumentList	c		962984	1					
ANR	963281	Argument	c		962984	0					
ANR	963282	Identifier	c		962984	0					
ANR	963283	Label	err :	1008:1:38450:38453	962984	17	True				
ANR	963284	Identifier	err		962984	0					
ANR	963285	ExpressionStatement	"r_config_set_i ( core -> config , ""hex.cols"" , hex_cols )"	1009:1:38456:38507	962984	18	True				
ANR	963286	CallExpression	"r_config_set_i ( core -> config , ""hex.cols"" , hex_cols )"		962984	0					
ANR	963287	Callee	r_config_set_i		962984	0					
ANR	963288	Identifier	r_config_set_i		962984	0					
ANR	963289	ArgumentList	core -> config		962984	1					
ANR	963290	Argument	core -> config		962984	0					
ANR	963291	PtrMemberAccess	core -> config		962984	0					
ANR	963292	Identifier	core		962984	0					
ANR	963293	Identifier	config		962984	1					
ANR	963294	Argument	"""hex.cols"""		962984	1					
ANR	963295	PrimaryExpression	"""hex.cols"""		962984	0					
ANR	963296	Argument	hex_cols		962984	2					
ANR	963297	Identifier	hex_cols		962984	0					
ANR	963298	ReturnType	static void		962984	1					
ANR	963299	Identifier	cmd_pCx		962984	2					
ANR	963300	ParameterList	"RCore * core , const char * input , const char * xcmd"		962984	3					
ANR	963301	Parameter	RCore * core	971:20:37408:37418	962984	0	True				
ANR	963302	ParameterType	RCore *		962984	0					
ANR	963303	Identifier	core		962984	1					
ANR	963304	Parameter	const char * input	971:33:37421:37437	962984	1	True				
ANR	963305	ParameterType	const char *		962984	0					
ANR	963306	Identifier	input		962984	1					
ANR	963307	Parameter	const char * xcmd	971:52:37440:37455	962984	2	True				
ANR	963308	ParameterType	const char *		962984	0					
ANR	963309	Identifier	xcmd		962984	1					
ANR	963310	CFGEntryNode	ENTRY		962984		True				
ANR	963311	CFGExitNode	EXIT		962984		True				
ANR	963312	Symbol	r_core_cmd_str		962984						
ANR	963313	Symbol	columns		962984						
ANR	963314	Symbol	* core		962984						
ANR	963315	Symbol	core -> offset		962984						
ANR	963316	Symbol	r_num_math		962984						
ANR	963317	Symbol	dis		962984						
ANR	963318	Symbol	tsek		962984						
ANR	963319	Symbol	core -> num		962984						
ANR	963320	Symbol	c -> color		962984						
ANR	963321	Symbol	core -> config		962984						
ANR	963322	Symbol	strcmp		962984						
ANR	963323	Symbol	c		962984						
ANR	963324	Symbol	r_cons_get_size		962984						
ANR	963325	Symbol	h		962984						
ANR	963326	Symbol	hex_cols		962984						
ANR	963327	Symbol	i		962984						
ANR	963328	Symbol	rows		962984						
ANR	963329	Symbol	* c		962984						
ANR	963330	Symbol	& h		962984						
ANR	963331	Symbol	core		962984						
ANR	963332	Symbol	input		962984						
ANR	963333	Symbol	user_rows		962984						
ANR	963334	Symbol	w		962984						
ANR	963335	Symbol	r_config_get_i		962984						
ANR	963336	Symbol	colwidth		962984						
ANR	963337	Symbol	bsize		962984						
ANR	963338	Symbol	xcmd		962984						
ANR	963339	Symbol	r_cons_canvas_new		962984						
ANR	963340	Symbol	cmd		962984						
ANR	963341	Function	get_string_type	1012:0:38512:39396							
ANR	963342	FunctionDef	"get_string_type (const ut8 * buf , ut64 len)"		963341	0					
ANR	963343	CompoundStatement		1012:54:38566:39396	963341	0					
ANR	963344	IdentifierDeclStatement	ut64 needle = 0 ;	1013:1:38569:38584	963341	0	True				
ANR	963345	IdentifierDecl	needle = 0		963341	0					
ANR	963346	IdentifierDeclType	ut64		963341	0					
ANR	963347	Identifier	needle		963341	1					
ANR	963348	AssignmentExpression	needle = 0		963341	2		=			
ANR	963349	Identifier	needle		963341	0					
ANR	963350	PrimaryExpression	0		963341	1					
ANR	963351	IdentifierDeclStatement	"int rc , i ;"	1014:1:38587:38596	963341	1	True				
ANR	963352	IdentifierDecl	rc		963341	0					
ANR	963353	IdentifierDeclType	int		963341	0					
ANR	963354	Identifier	rc		963341	1					
ANR	963355	IdentifierDecl	i		963341	1					
ANR	963356	IdentifierDeclType	int		963341	0					
ANR	963357	Identifier	i		963341	1					
ANR	963358	IdentifierDeclStatement	char str_type = 0 ;	1015:1:38599:38616	963341	2	True				
ANR	963359	IdentifierDecl	str_type = 0		963341	0					
ANR	963360	IdentifierDeclType	char		963341	0					
ANR	963361	Identifier	str_type		963341	1					
ANR	963362	AssignmentExpression	str_type = 0		963341	2		=			
ANR	963363	Identifier	str_type		963341	0					
ANR	963364	PrimaryExpression	0		963341	1					
ANR	963365	IfStatement	if ( ! buf )		963341	3					
ANR	963366	Condition	! buf	1017:5:38624:38627	963341	0	True				
ANR	963367	UnaryOperationExpression	! buf		963341	0					
ANR	963368	UnaryOperator	!		963341	0					
ANR	963369	Identifier	buf		963341	1					
ANR	963370	CompoundStatement		6:11:63:63	963341	1					
ANR	963371	ReturnStatement	return '?' ;	1018:2:38634:38644	963341	0	True				
ANR	963372	PrimaryExpression	'?'		963341	0					
ANR	963373	WhileStatement	while ( needle < len )		963341	4					
ANR	963374	Condition	needle < len	1020:8:38657:38668	963341	0	True				
ANR	963375	RelationalExpression	needle < len		963341	0		<			
ANR	963376	Identifier	needle		963341	0					
ANR	963377	Identifier	len		963341	1					
ANR	963378	CompoundStatement		9:22:104:104	963341	1					
ANR	963379	ExpressionStatement	"rc = r_utf8_decode ( buf + needle , len - needle , NULL )"	1021:2:38675:38728	963341	0	True				
ANR	963380	AssignmentExpression	"rc = r_utf8_decode ( buf + needle , len - needle , NULL )"		963341	0		=			
ANR	963381	Identifier	rc		963341	0					
ANR	963382	CallExpression	"r_utf8_decode ( buf + needle , len - needle , NULL )"		963341	1					
ANR	963383	Callee	r_utf8_decode		963341	0					
ANR	963384	Identifier	r_utf8_decode		963341	0					
ANR	963385	ArgumentList	buf + needle		963341	1					
ANR	963386	Argument	buf + needle		963341	0					
ANR	963387	AdditiveExpression	buf + needle		963341	0		+			
ANR	963388	Identifier	buf		963341	0					
ANR	963389	Identifier	needle		963341	1					
ANR	963390	Argument	len - needle		963341	1					
ANR	963391	AdditiveExpression	len - needle		963341	0		-			
ANR	963392	Identifier	len		963341	0					
ANR	963393	Identifier	needle		963341	1					
ANR	963394	Argument	NULL		963341	2					
ANR	963395	Identifier	NULL		963341	0					
ANR	963396	IfStatement	if ( ! rc )		963341	1					
ANR	963397	Condition	! rc	1022:6:38736:38738	963341	0	True				
ANR	963398	UnaryOperationExpression	! rc		963341	0					
ANR	963399	UnaryOperator	!		963341	0					
ANR	963400	Identifier	rc		963341	1					
ANR	963401	CompoundStatement		11:11:174:174	963341	1					
ANR	963402	ExpressionStatement	needle ++	1023:3:38746:38754	963341	0	True				
ANR	963403	PostIncDecOperationExpression	needle ++		963341	0					
ANR	963404	Identifier	needle		963341	0					
ANR	963405	IncDec	++		963341	1					
ANR	963406	ContinueStatement	continue ;	1024:3:38759:38767	963341	1	True				
ANR	963407	IfStatement	if ( needle + rc + 2 < len && buf [ needle + rc + 0 ] == 0x00 && buf [ needle + rc + 1 ] == 0x00 && buf [ needle + rc + 2 ] == 0x00 )		963341	2					
ANR	963408	Condition	needle + rc + 2 < len && buf [ needle + rc + 0 ] == 0x00 && buf [ needle + rc + 1 ] == 0x00 && buf [ needle + rc + 2 ] == 0x00	1026:6:38779:38901	963341	0	True				
ANR	963409	AndExpression	needle + rc + 2 < len && buf [ needle + rc + 0 ] == 0x00 && buf [ needle + rc + 1 ] == 0x00 && buf [ needle + rc + 2 ] == 0x00		963341	0		&&			
ANR	963410	RelationalExpression	needle + rc + 2 < len		963341	0		<			
ANR	963411	AdditiveExpression	needle + rc + 2		963341	0		+			
ANR	963412	Identifier	needle		963341	0					
ANR	963413	AdditiveExpression	rc + 2		963341	1		+			
ANR	963414	Identifier	rc		963341	0					
ANR	963415	PrimaryExpression	2		963341	1					
ANR	963416	Identifier	len		963341	1					
ANR	963417	AndExpression	buf [ needle + rc + 0 ] == 0x00 && buf [ needle + rc + 1 ] == 0x00 && buf [ needle + rc + 2 ] == 0x00		963341	1		&&			
ANR	963418	EqualityExpression	buf [ needle + rc + 0 ] == 0x00		963341	0		==			
ANR	963419	ArrayIndexing	buf [ needle + rc + 0 ]		963341	0					
ANR	963420	Identifier	buf		963341	0					
ANR	963421	AdditiveExpression	needle + rc + 0		963341	1		+			
ANR	963422	Identifier	needle		963341	0					
ANR	963423	AdditiveExpression	rc + 0		963341	1		+			
ANR	963424	Identifier	rc		963341	0					
ANR	963425	PrimaryExpression	0		963341	1					
ANR	963426	PrimaryExpression	0x00		963341	1					
ANR	963427	AndExpression	buf [ needle + rc + 1 ] == 0x00 && buf [ needle + rc + 2 ] == 0x00		963341	1		&&			
ANR	963428	EqualityExpression	buf [ needle + rc + 1 ] == 0x00		963341	0		==			
ANR	963429	ArrayIndexing	buf [ needle + rc + 1 ]		963341	0					
ANR	963430	Identifier	buf		963341	0					
ANR	963431	AdditiveExpression	needle + rc + 1		963341	1		+			
ANR	963432	Identifier	needle		963341	0					
ANR	963433	AdditiveExpression	rc + 1		963341	1		+			
ANR	963434	Identifier	rc		963341	0					
ANR	963435	PrimaryExpression	1		963341	1					
ANR	963436	PrimaryExpression	0x00		963341	1					
ANR	963437	EqualityExpression	buf [ needle + rc + 2 ] == 0x00		963341	1		==			
ANR	963438	ArrayIndexing	buf [ needle + rc + 2 ]		963341	0					
ANR	963439	Identifier	buf		963341	0					
ANR	963440	AdditiveExpression	needle + rc + 2		963341	1		+			
ANR	963441	Identifier	needle		963341	0					
ANR	963442	AdditiveExpression	rc + 2		963341	1		+			
ANR	963443	Identifier	rc		963341	0					
ANR	963444	PrimaryExpression	2		963341	1					
ANR	963445	PrimaryExpression	0x00		963341	1					
ANR	963446	CompoundStatement		18:32:337:337	963341	1					
ANR	963447	ExpressionStatement	str_type = 'w'	1030:3:38909:38923	963341	0	True				
ANR	963448	AssignmentExpression	str_type = 'w'		963341	0		=			
ANR	963449	Identifier	str_type		963341	0					
ANR	963450	PrimaryExpression	'w'		963341	1					
ANR	963451	ElseStatement	else		963341	0					
ANR	963452	CompoundStatement		20:9:367:367	963341	0					
ANR	963453	ExpressionStatement	str_type = 'a'	1032:3:38939:38953	963341	0	True				
ANR	963454	AssignmentExpression	str_type = 'a'		963341	0		=			
ANR	963455	Identifier	str_type		963341	0					
ANR	963456	PrimaryExpression	'a'		963341	1					
ANR	963457	ForStatement	for ( rc = i = 0 ; needle < len ; i += rc )		963341	3					
ANR	963458	ForInit	rc = i = 0 ;	1034:7:38966:38976	963341	0	True				
ANR	963459	AssignmentExpression	rc = i = 0		963341	0		=			
ANR	963460	Identifier	rc		963341	0					
ANR	963461	AssignmentExpression	i = 0		963341	1		=			
ANR	963462	Identifier	i		963341	0					
ANR	963463	PrimaryExpression	0		963341	1					
ANR	963464	Condition	needle < len	1034:19:38978:38989	963341	1	True				
ANR	963465	RelationalExpression	needle < len		963341	0		<			
ANR	963466	Identifier	needle		963341	0					
ANR	963467	Identifier	len		963341	1					
ANR	963468	AssignmentExpression	i += rc	1034:33:38992:38998	963341	2	True	+=			
ANR	963469	Identifier	i		963341	0					
ANR	963470	Identifier	rc		963341	1					
ANR	963471	CompoundStatement		24:3:439:446	963341	3					
ANR	963472	IdentifierDeclStatement	RRune r ;	1035:3:39006:39013	963341	0	True				
ANR	963473	IdentifierDecl	r		963341	0					
ANR	963474	IdentifierDeclType	RRune		963341	0					
ANR	963475	Identifier	r		963341	1					
ANR	963476	IfStatement	if ( str_type == 'w' )		963341	1					
ANR	963477	Condition	str_type == 'w'	1036:7:39022:39036	963341	0	True				
ANR	963478	EqualityExpression	str_type == 'w'		963341	0		==			
ANR	963479	Identifier	str_type		963341	0					
ANR	963480	PrimaryExpression	'w'		963341	1					
ANR	963481	CompoundStatement		25:24:472:472	963341	1					
ANR	963482	IfStatement	if ( needle + 1 < len )		963341	0					
ANR	963483	Condition	needle + 1 < len	1037:8:39049:39064	963341	0	True				
ANR	963484	RelationalExpression	needle + 1 < len		963341	0		<			
ANR	963485	AdditiveExpression	needle + 1		963341	0		+			
ANR	963486	Identifier	needle		963341	0					
ANR	963487	PrimaryExpression	1		963341	1					
ANR	963488	Identifier	len		963341	1					
ANR	963489	CompoundStatement		26:26:500:500	963341	1					
ANR	963490	ExpressionStatement	r = buf [ needle + 1 ] << 8 | buf [ needle ]	1038:5:39074:39112	963341	0	True				
ANR	963491	AssignmentExpression	r = buf [ needle + 1 ] << 8 | buf [ needle ]		963341	0		=			
ANR	963492	Identifier	r		963341	0					
ANR	963493	InclusiveOrExpression	buf [ needle + 1 ] << 8 | buf [ needle ]		963341	1		|			
ANR	963494	ShiftExpression	buf [ needle + 1 ] << 8		963341	0		<<			
ANR	963495	ArrayIndexing	buf [ needle + 1 ]		963341	0					
ANR	963496	Identifier	buf		963341	0					
ANR	963497	AdditiveExpression	needle + 1		963341	1		+			
ANR	963498	Identifier	needle		963341	0					
ANR	963499	PrimaryExpression	1		963341	1					
ANR	963500	PrimaryExpression	8		963341	1					
ANR	963501	ArrayIndexing	buf [ needle ]		963341	1					
ANR	963502	Identifier	buf		963341	0					
ANR	963503	Identifier	needle		963341	1					
ANR	963504	ExpressionStatement	rc = 2	1039:5:39119:39125	963341	1	True				
ANR	963505	AssignmentExpression	rc = 2		963341	0		=			
ANR	963506	Identifier	rc		963341	0					
ANR	963507	PrimaryExpression	2		963341	1					
ANR	963508	ElseStatement	else		963341	0					
ANR	963509	CompoundStatement		29:11:571:571	963341	0					
ANR	963510	BreakStatement	break ;	1041:5:39145:39150	963341	0	True				
ANR	963511	ElseStatement	else		963341	0					
ANR	963512	CompoundStatement		32:10:601:601	963341	0					
ANR	963513	ExpressionStatement	"rc = r_utf8_decode ( buf + needle , len - needle , & r )"	1044:4:39174:39225	963341	0	True				
ANR	963514	AssignmentExpression	"rc = r_utf8_decode ( buf + needle , len - needle , & r )"		963341	0		=			
ANR	963515	Identifier	rc		963341	0					
ANR	963516	CallExpression	"r_utf8_decode ( buf + needle , len - needle , & r )"		963341	1					
ANR	963517	Callee	r_utf8_decode		963341	0					
ANR	963518	Identifier	r_utf8_decode		963341	0					
ANR	963519	ArgumentList	buf + needle		963341	1					
ANR	963520	Argument	buf + needle		963341	0					
ANR	963521	AdditiveExpression	buf + needle		963341	0		+			
ANR	963522	Identifier	buf		963341	0					
ANR	963523	Identifier	needle		963341	1					
ANR	963524	Argument	len - needle		963341	1					
ANR	963525	AdditiveExpression	len - needle		963341	0		-			
ANR	963526	Identifier	len		963341	0					
ANR	963527	Identifier	needle		963341	1					
ANR	963528	Argument	& r		963341	2					
ANR	963529	UnaryOperationExpression	& r		963341	0					
ANR	963530	UnaryOperator	&		963341	0					
ANR	963531	Identifier	r		963341	1					
ANR	963532	IfStatement	if ( rc > 1 )		963341	1					
ANR	963533	Condition	rc > 1	1045:8:39235:39240	963341	0	True				
ANR	963534	RelationalExpression	rc > 1		963341	0		>			
ANR	963535	Identifier	rc		963341	0					
ANR	963536	PrimaryExpression	1		963341	1					
ANR	963537	CompoundStatement		34:16:676:676	963341	1					
ANR	963538	ExpressionStatement	str_type = 'u'	1046:5:39250:39264	963341	0	True				
ANR	963539	AssignmentExpression	str_type = 'u'		963341	0		=			
ANR	963540	Identifier	str_type		963341	0					
ANR	963541	PrimaryExpression	'u'		963341	1					
ANR	963542	IfStatement	if ( ! rc )		963341	2					
ANR	963543	Condition	! rc	1050:7:39317:39319	963341	0	True				
ANR	963544	UnaryOperationExpression	! rc		963341	0					
ANR	963545	UnaryOperator	!		963341	0					
ANR	963546	Identifier	rc		963341	1					
ANR	963547	CompoundStatement		39:12:755:755	963341	1					
ANR	963548	ExpressionStatement	needle ++	1051:4:39328:39336	963341	0	True				
ANR	963549	PostIncDecOperationExpression	needle ++		963341	0					
ANR	963550	Identifier	needle		963341	0					
ANR	963551	IncDec	++		963341	1					
ANR	963552	BreakStatement	break ;	1052:4:39342:39347	963341	1	True				
ANR	963553	ExpressionStatement	needle += rc	1054:3:39357:39369	963341	3	True				
ANR	963554	AssignmentExpression	needle += rc		963341	0		+=			
ANR	963555	Identifier	needle		963341	0					
ANR	963556	Identifier	rc		963341	1					
ANR	963557	ReturnStatement	return str_type ;	1057:1:39379:39394	963341	5	True				
ANR	963558	Identifier	str_type		963341	0					
ANR	963559	ReturnType	static char		963341	1					
ANR	963560	Identifier	get_string_type		963341	2					
ANR	963561	ParameterList	"const ut8 * buf , ut64 len"		963341	3					
ANR	963562	Parameter	const ut8 * buf	1012:28:38540:38553	963341	0	True				
ANR	963563	ParameterType	const ut8 *		963341	0					
ANR	963564	Identifier	buf		963341	1					
ANR	963565	Parameter	ut64 len	1012:44:38556:38563	963341	1	True				
ANR	963566	ParameterType	ut64		963341	0					
ANR	963567	Identifier	len		963341	1					
ANR	963568	CFGEntryNode	ENTRY		963341		True				
ANR	963569	CFGExitNode	EXIT		963341		True				
ANR	963570	Symbol	* buf		963341						
ANR	963571	Symbol	NULL		963341						
ANR	963572	Symbol	r_utf8_decode		963341						
ANR	963573	Symbol	i		963341						
ANR	963574	Symbol	* needle		963341						
ANR	963575	Symbol	rc		963341						
ANR	963576	Symbol	buf		963341						
ANR	963577	Symbol	r		963341						
ANR	963578	Symbol	len		963341						
ANR	963579	Symbol	* rc		963341						
ANR	963580	Symbol	& r		963341						
ANR	963581	Symbol	str_type		963341						
ANR	963582	Symbol	needle		963341						
ANR	963583	Function	cmd_print_eq_dict	1060:0:39399:40069							
ANR	963584	FunctionDef	"cmd_print_eq_dict (RCore * core , const ut8 * block , int bsz)"		963583	0					
ANR	963585	CompoundStatement		1060:70:39469:40069	963583	0					
ANR	963586	IdentifierDeclStatement	int i ;	1061:1:39472:39477	963583	0	True				
ANR	963587	IdentifierDecl	i		963583	0					
ANR	963588	IdentifierDeclType	int		963583	0					
ANR	963589	Identifier	i		963583	1					
ANR	963590	IdentifierDeclStatement	int min = - 1 ;	1062:1:39480:39492	963583	1	True				
ANR	963591	IdentifierDecl	min = - 1		963583	0					
ANR	963592	IdentifierDeclType	int		963583	0					
ANR	963593	Identifier	min		963583	1					
ANR	963594	AssignmentExpression	min = - 1		963583	2		=			
ANR	963595	Identifier	min		963583	0					
ANR	963596	UnaryOperationExpression	- 1		963583	1					
ANR	963597	UnaryOperator	-		963583	0					
ANR	963598	PrimaryExpression	1		963583	1					
ANR	963599	IdentifierDeclStatement	int max = 0 ;	1063:1:39495:39506	963583	2	True				
ANR	963600	IdentifierDecl	max = 0		963583	0					
ANR	963601	IdentifierDeclType	int		963583	0					
ANR	963602	Identifier	max		963583	1					
ANR	963603	AssignmentExpression	max = 0		963583	2		=			
ANR	963604	Identifier	max		963583	0					
ANR	963605	PrimaryExpression	0		963583	1					
ANR	963606	IdentifierDeclStatement	int dict = 0 ;	1064:1:39509:39521	963583	3	True				
ANR	963607	IdentifierDecl	dict = 0		963583	0					
ANR	963608	IdentifierDeclType	int		963583	0					
ANR	963609	Identifier	dict		963583	1					
ANR	963610	AssignmentExpression	dict = 0		963583	2		=			
ANR	963611	Identifier	dict		963583	0					
ANR	963612	PrimaryExpression	0		963583	1					
ANR	963613	IdentifierDeclStatement	int range = 0 ;	1065:1:39524:39537	963583	4	True				
ANR	963614	IdentifierDecl	range = 0		963583	0					
ANR	963615	IdentifierDeclType	int		963583	0					
ANR	963616	Identifier	range		963583	1					
ANR	963617	AssignmentExpression	range = 0		963583	2		=			
ANR	963618	Identifier	range		963583	0					
ANR	963619	PrimaryExpression	0		963583	1					
ANR	963620	IdentifierDeclStatement	bool histogram [ 256 ] = { 0 } ;	1066:1:39540:39565	963583	5	True				
ANR	963621	IdentifierDecl	histogram [ 256 ] = { 0 }		963583	0					
ANR	963622	IdentifierDeclType	bool [ 256 ]		963583	0					
ANR	963623	Identifier	histogram		963583	1					
ANR	963624	PrimaryExpression	256		963583	2					
ANR	963625	AssignmentExpression	histogram [ 256 ] = { 0 }		963583	3		=			
ANR	963626	Identifier	histogram		963583	0					
ANR	963627	InitializerList	0		963583	1					
ANR	963628	PrimaryExpression	0		963583	0					
ANR	963629	ForStatement	for ( i = 0 ; i < bsz ; i ++ )		963583	6					
ANR	963630	ForInit	i = 0 ;	1067:6:39573:39578	963583	0	True				
ANR	963631	AssignmentExpression	i = 0		963583	0		=			
ANR	963632	Identifier	i		963583	0					
ANR	963633	PrimaryExpression	0		963583	1					
ANR	963634	Condition	i < bsz	1067:13:39580:39586	963583	1	True				
ANR	963635	RelationalExpression	i < bsz		963583	0		<			
ANR	963636	Identifier	i		963583	0					
ANR	963637	Identifier	bsz		963583	1					
ANR	963638	PostIncDecOperationExpression	i ++	1067:22:39589:39591	963583	2	True				
ANR	963639	Identifier	i		963583	0					
ANR	963640	IncDec	++		963583	1					
ANR	963641	CompoundStatement		8:27:124:124	963583	3					
ANR	963642	ExpressionStatement	histogram [ block [ i ] ] = true	1068:2:39598:39624	963583	0	True				
ANR	963643	AssignmentExpression	histogram [ block [ i ] ] = true		963583	0		=			
ANR	963644	ArrayIndexing	histogram [ block [ i ] ]		963583	0					
ANR	963645	Identifier	histogram		963583	0					
ANR	963646	ArrayIndexing	block [ i ]		963583	1					
ANR	963647	Identifier	block		963583	0					
ANR	963648	Identifier	i		963583	1					
ANR	963649	Identifier	true		963583	1					
ANR	963650	ForStatement	for ( i = 0 ; i < 256 ; i ++ )		963583	7					
ANR	963651	ForInit	i = 0 ;	1070:6:39635:39640	963583	0	True				
ANR	963652	AssignmentExpression	i = 0		963583	0		=			
ANR	963653	Identifier	i		963583	0					
ANR	963654	PrimaryExpression	0		963583	1					
ANR	963655	Condition	i < 256	1070:13:39642:39648	963583	1	True				
ANR	963656	RelationalExpression	i < 256		963583	0		<			
ANR	963657	Identifier	i		963583	0					
ANR	963658	PrimaryExpression	256		963583	1					
ANR	963659	PostIncDecOperationExpression	i ++	1070:22:39651:39653	963583	2	True				
ANR	963660	Identifier	i		963583	0					
ANR	963661	IncDec	++		963583	1					
ANR	963662	CompoundStatement		11:27:186:186	963583	3					
ANR	963663	IfStatement	if ( histogram [ i ] )		963583	0					
ANR	963664	Condition	histogram [ i ]	1071:6:39664:39675	963583	0	True				
ANR	963665	ArrayIndexing	histogram [ i ]		963583	0					
ANR	963666	Identifier	histogram		963583	0					
ANR	963667	Identifier	i		963583	1					
ANR	963668	CompoundStatement		12:20:208:208	963583	1					
ANR	963669	IfStatement	if ( min == - 1 )		963583	0					
ANR	963670	Condition	min == - 1	1072:7:39687:39695	963583	0	True				
ANR	963671	EqualityExpression	min == - 1		963583	0		==			
ANR	963672	Identifier	min		963583	0					
ANR	963673	UnaryOperationExpression	- 1		963583	1					
ANR	963674	UnaryOperator	-		963583	0					
ANR	963675	PrimaryExpression	1		963583	1					
ANR	963676	CompoundStatement		13:18:228:228	963583	1					
ANR	963677	ExpressionStatement	min = i	1073:4:39704:39711	963583	0	True				
ANR	963678	AssignmentExpression	min = i		963583	0		=			
ANR	963679	Identifier	min		963583	0					
ANR	963680	Identifier	i		963583	1					
ANR	963681	ExpressionStatement	max = i	1075:3:39721:39728	963583	1	True				
ANR	963682	AssignmentExpression	max = i		963583	0		=			
ANR	963683	Identifier	max		963583	0					
ANR	963684	Identifier	i		963583	1					
ANR	963685	ExpressionStatement	dict ++	1076:3:39733:39739	963583	2	True				
ANR	963686	PostIncDecOperationExpression	dict ++		963583	0					
ANR	963687	Identifier	dict		963583	0					
ANR	963688	IncDec	++		963583	1					
ANR	963689	ExpressionStatement	range = max - min	1079:1:39749:39766	963583	8	True				
ANR	963690	AssignmentExpression	range = max - min		963583	0		=			
ANR	963691	Identifier	range		963583	0					
ANR	963692	AdditiveExpression	max - min		963583	1		-			
ANR	963693	Identifier	max		963583	0					
ANR	963694	Identifier	min		963583	1					
ANR	963695	ExpressionStatement	"r_cons_printf ( ""min:              %d  0x%x\\n"" , min , min )"	1080:1:39769:39825	963583	9	True				
ANR	963696	CallExpression	"r_cons_printf ( ""min:              %d  0x%x\\n"" , min , min )"		963583	0					
ANR	963697	Callee	r_cons_printf		963583	0					
ANR	963698	Identifier	r_cons_printf		963583	0					
ANR	963699	ArgumentList	"""min:              %d  0x%x\\n"""		963583	1					
ANR	963700	Argument	"""min:              %d  0x%x\\n"""		963583	0					
ANR	963701	PrimaryExpression	"""min:              %d  0x%x\\n"""		963583	0					
ANR	963702	Argument	min		963583	1					
ANR	963703	Identifier	min		963583	0					
ANR	963704	Argument	min		963583	2					
ANR	963705	Identifier	min		963583	0					
ANR	963706	ExpressionStatement	"r_cons_printf ( ""max:              %d  0x%x\\n"" , max , max )"	1081:1:39828:39884	963583	10	True				
ANR	963707	CallExpression	"r_cons_printf ( ""max:              %d  0x%x\\n"" , max , max )"		963583	0					
ANR	963708	Callee	r_cons_printf		963583	0					
ANR	963709	Identifier	r_cons_printf		963583	0					
ANR	963710	ArgumentList	"""max:              %d  0x%x\\n"""		963583	1					
ANR	963711	Argument	"""max:              %d  0x%x\\n"""		963583	0					
ANR	963712	PrimaryExpression	"""max:              %d  0x%x\\n"""		963583	0					
ANR	963713	Argument	max		963583	1					
ANR	963714	Identifier	max		963583	0					
ANR	963715	Argument	max		963583	2					
ANR	963716	Identifier	max		963583	0					
ANR	963717	ExpressionStatement	"r_cons_printf ( ""unique (count):   %d  0x%x\\n"" , dict , dict )"	1082:1:39887:39945	963583	11	True				
ANR	963718	CallExpression	"r_cons_printf ( ""unique (count):   %d  0x%x\\n"" , dict , dict )"		963583	0					
ANR	963719	Callee	r_cons_printf		963583	0					
ANR	963720	Identifier	r_cons_printf		963583	0					
ANR	963721	ArgumentList	"""unique (count):   %d  0x%x\\n"""		963583	1					
ANR	963722	Argument	"""unique (count):   %d  0x%x\\n"""		963583	0					
ANR	963723	PrimaryExpression	"""unique (count):   %d  0x%x\\n"""		963583	0					
ANR	963724	Argument	dict		963583	1					
ANR	963725	Identifier	dict		963583	0					
ANR	963726	Argument	dict		963583	2					
ANR	963727	Identifier	dict		963583	0					
ANR	963728	ExpressionStatement	"r_cons_printf ( ""range (max-min):  %d  0x%x\\n"" , range , range )"	1083:1:39948:40008	963583	12	True				
ANR	963729	CallExpression	"r_cons_printf ( ""range (max-min):  %d  0x%x\\n"" , range , range )"		963583	0					
ANR	963730	Callee	r_cons_printf		963583	0					
ANR	963731	Identifier	r_cons_printf		963583	0					
ANR	963732	ArgumentList	"""range (max-min):  %d  0x%x\\n"""		963583	1					
ANR	963733	Argument	"""range (max-min):  %d  0x%x\\n"""		963583	0					
ANR	963734	PrimaryExpression	"""range (max-min):  %d  0x%x\\n"""		963583	0					
ANR	963735	Argument	range		963583	1					
ANR	963736	Identifier	range		963583	0					
ANR	963737	Argument	range		963583	2					
ANR	963738	Identifier	range		963583	0					
ANR	963739	ExpressionStatement	"r_cons_printf ( ""size (of block):  %d  0x%x\\n"" , bsz , bsz )"	1084:1:40011:40067	963583	13	True				
ANR	963740	CallExpression	"r_cons_printf ( ""size (of block):  %d  0x%x\\n"" , bsz , bsz )"		963583	0					
ANR	963741	Callee	r_cons_printf		963583	0					
ANR	963742	Identifier	r_cons_printf		963583	0					
ANR	963743	ArgumentList	"""size (of block):  %d  0x%x\\n"""		963583	1					
ANR	963744	Argument	"""size (of block):  %d  0x%x\\n"""		963583	0					
ANR	963745	PrimaryExpression	"""size (of block):  %d  0x%x\\n"""		963583	0					
ANR	963746	Argument	bsz		963583	1					
ANR	963747	Identifier	bsz		963583	0					
ANR	963748	Argument	bsz		963583	2					
ANR	963749	Identifier	bsz		963583	0					
ANR	963750	ReturnType	static void		963583	1					
ANR	963751	Identifier	cmd_print_eq_dict		963583	2					
ANR	963752	ParameterList	"RCore * core , const ut8 * block , int bsz"		963583	3					
ANR	963753	Parameter	RCore * core	1060:30:39429:39439	963583	0	True				
ANR	963754	ParameterType	RCore *		963583	0					
ANR	963755	Identifier	core		963583	1					
ANR	963756	Parameter	const ut8 * block	1060:43:39442:39457	963583	1	True				
ANR	963757	ParameterType	const ut8 *		963583	0					
ANR	963758	Identifier	block		963583	1					
ANR	963759	Parameter	int bsz	1060:61:39460:39466	963583	2	True				
ANR	963760	ParameterType	int		963583	0					
ANR	963761	Identifier	bsz		963583	1					
ANR	963762	CFGEntryNode	ENTRY		963583		True				
ANR	963763	CFGExitNode	EXIT		963583		True				
ANR	963764	Symbol	* * i		963583						
ANR	963765	Symbol	max		963583						
ANR	963766	Symbol	bsz		963583						
ANR	963767	Symbol	i		963583						
ANR	963768	Symbol	range		963583						
ANR	963769	Symbol	* histogram		963583						
ANR	963770	Symbol	* block		963583						
ANR	963771	Symbol	histogram		963583						
ANR	963772	Symbol	core		963583						
ANR	963773	Symbol	min		963583						
ANR	963774	Symbol	* i		963583						
ANR	963775	Symbol	true		963583						
ANR	963776	Symbol	dict		963583						
ANR	963777	Symbol	* * block		963583						
ANR	963778	Symbol	block		963583						
ANR	963779	Function	r_core_set_asm_configs	1087:0:40072:40418							
ANR	963780	FunctionDef	"r_core_set_asm_configs (RCore * core , char * arch , ut32 bits , int segoff)"		963779	0					
ANR	963781	CompoundStatement		1087:82:40154:40418	963779	0					
ANR	963782	ExpressionStatement	"r_config_set ( core -> config , ""asm.arch"" , arch )"	1088:1:40157:40202	963779	0	True				
ANR	963783	CallExpression	"r_config_set ( core -> config , ""asm.arch"" , arch )"		963779	0					
ANR	963784	Callee	r_config_set		963779	0					
ANR	963785	Identifier	r_config_set		963779	0					
ANR	963786	ArgumentList	core -> config		963779	1					
ANR	963787	Argument	core -> config		963779	0					
ANR	963788	PtrMemberAccess	core -> config		963779	0					
ANR	963789	Identifier	core		963779	0					
ANR	963790	Identifier	config		963779	1					
ANR	963791	Argument	"""asm.arch"""		963779	1					
ANR	963792	PrimaryExpression	"""asm.arch"""		963779	0					
ANR	963793	Argument	arch		963779	2					
ANR	963794	Identifier	arch		963779	0					
ANR	963795	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.bits"" , bits )"	1089:1:40205:40252	963779	1	True				
ANR	963796	CallExpression	"r_config_set_i ( core -> config , ""asm.bits"" , bits )"		963779	0					
ANR	963797	Callee	r_config_set_i		963779	0					
ANR	963798	Identifier	r_config_set_i		963779	0					
ANR	963799	ArgumentList	core -> config		963779	1					
ANR	963800	Argument	core -> config		963779	0					
ANR	963801	PtrMemberAccess	core -> config		963779	0					
ANR	963802	Identifier	core		963779	0					
ANR	963803	Identifier	config		963779	1					
ANR	963804	Argument	"""asm.bits"""		963779	1					
ANR	963805	PrimaryExpression	"""asm.bits"""		963779	0					
ANR	963806	Argument	bits		963779	2					
ANR	963807	Identifier	bits		963779	0					
ANR	963808	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.segoff"" , segoff )"	1092:1:40365:40416	963779	2	True				
ANR	963809	CallExpression	"r_config_set_i ( core -> config , ""asm.segoff"" , segoff )"		963779	0					
ANR	963810	Callee	r_config_set_i		963779	0					
ANR	963811	Identifier	r_config_set_i		963779	0					
ANR	963812	ArgumentList	core -> config		963779	1					
ANR	963813	Argument	core -> config		963779	0					
ANR	963814	PtrMemberAccess	core -> config		963779	0					
ANR	963815	Identifier	core		963779	0					
ANR	963816	Identifier	config		963779	1					
ANR	963817	Argument	"""asm.segoff"""		963779	1					
ANR	963818	PrimaryExpression	"""asm.segoff"""		963779	0					
ANR	963819	Argument	segoff		963779	2					
ANR	963820	Identifier	segoff		963779	0					
ANR	963821	ReturnType	R_API void		963779	1					
ANR	963822	Identifier	r_core_set_asm_configs		963779	2					
ANR	963823	ParameterList	"RCore * core , char * arch , ut32 bits , int segoff"		963779	3					
ANR	963824	Parameter	RCore * core	1087:34:40106:40116	963779	0	True				
ANR	963825	ParameterType	RCore *		963779	0					
ANR	963826	Identifier	core		963779	1					
ANR	963827	Parameter	char * arch	1087:47:40119:40128	963779	1	True				
ANR	963828	ParameterType	char *		963779	0					
ANR	963829	Identifier	arch		963779	1					
ANR	963830	Parameter	ut32 bits	1087:59:40131:40139	963779	2	True				
ANR	963831	ParameterType	ut32		963779	0					
ANR	963832	Identifier	bits		963779	1					
ANR	963833	Parameter	int segoff	1087:70:40142:40151	963779	3	True				
ANR	963834	ParameterType	int		963779	0					
ANR	963835	Identifier	segoff		963779	1					
ANR	963836	CFGEntryNode	ENTRY		963779		True				
ANR	963837	CFGExitNode	EXIT		963779		True				
ANR	963838	Symbol	core -> config		963779						
ANR	963839	Symbol	core		963779						
ANR	963840	Symbol	segoff		963779						
ANR	963841	Symbol	bits		963779						
ANR	963842	Symbol	* core		963779						
ANR	963843	Symbol	arch		963779						
ANR	963844	Function	cmd_pDj	1095:0:40421:40919							
ANR	963845	FunctionDef	"cmd_pDj (RCore * core , const char * arg)"		963844	0					
ANR	963846	CompoundStatement		1095:50:40471:40919	963844	0					
ANR	963847	IdentifierDeclStatement	"int bsize = r_num_math ( core -> num , arg ) ;"	1096:1:40474:40513	963844	0	True				
ANR	963848	IdentifierDecl	"bsize = r_num_math ( core -> num , arg )"		963844	0					
ANR	963849	IdentifierDeclType	int		963844	0					
ANR	963850	Identifier	bsize		963844	1					
ANR	963851	AssignmentExpression	"bsize = r_num_math ( core -> num , arg )"		963844	2		=			
ANR	963852	Identifier	bsize		963844	0					
ANR	963853	CallExpression	"r_num_math ( core -> num , arg )"		963844	1					
ANR	963854	Callee	r_num_math		963844	0					
ANR	963855	Identifier	r_num_math		963844	0					
ANR	963856	ArgumentList	core -> num		963844	1					
ANR	963857	Argument	core -> num		963844	0					
ANR	963858	PtrMemberAccess	core -> num		963844	0					
ANR	963859	Identifier	core		963844	0					
ANR	963860	Identifier	num		963844	1					
ANR	963861	Argument	arg		963844	1					
ANR	963862	Identifier	arg		963844	0					
ANR	963863	IfStatement	if ( bsize < 0 )		963844	1					
ANR	963864	Condition	bsize < 0	1097:5:40520:40528	963844	0	True				
ANR	963865	RelationalExpression	bsize < 0		963844	0		<			
ANR	963866	Identifier	bsize		963844	0					
ANR	963867	PrimaryExpression	0		963844	1					
ANR	963868	CompoundStatement		3:16:59:59	963844	1					
ANR	963869	ExpressionStatement	bsize = - bsize	1098:2:40535:40549	963844	0	True				
ANR	963870	AssignmentExpression	bsize = - bsize		963844	0		=			
ANR	963871	Identifier	bsize		963844	0					
ANR	963872	UnaryOperationExpression	- bsize		963844	1					
ANR	963873	UnaryOperator	-		963844	0					
ANR	963874	Identifier	bsize		963844	1					
ANR	963875	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	1100:1:40555:40573	963844	2	True				
ANR	963876	IdentifierDecl	* pj = pj_new ( )		963844	0					
ANR	963877	IdentifierDeclType	PJ *		963844	0					
ANR	963878	Identifier	pj		963844	1					
ANR	963879	AssignmentExpression	* pj = pj_new ( )		963844	2		=			
ANR	963880	Identifier	pj		963844	0					
ANR	963881	CallExpression	pj_new ( )		963844	1					
ANR	963882	Callee	pj_new		963844	0					
ANR	963883	Identifier	pj_new		963844	0					
ANR	963884	ArgumentList			963844	1					
ANR	963885	IfStatement	if ( ! pj )		963844	3					
ANR	963886	Condition	! pj	1101:5:40580:40582	963844	0	True				
ANR	963887	UnaryOperationExpression	! pj		963844	0					
ANR	963888	UnaryOperator	!		963844	0					
ANR	963889	Identifier	pj		963844	1					
ANR	963890	CompoundStatement		7:10:113:113	963844	1					
ANR	963891	ReturnStatement	return ;	1102:2:40589:40595	963844	0	True				
ANR	963892	ExpressionStatement	pj_a ( pj )	1104:1:40601:40610	963844	4	True				
ANR	963893	CallExpression	pj_a ( pj )		963844	0					
ANR	963894	Callee	pj_a		963844	0					
ANR	963895	Identifier	pj_a		963844	0					
ANR	963896	ArgumentList	pj		963844	1					
ANR	963897	Argument	pj		963844	0					
ANR	963898	Identifier	pj		963844	0					
ANR	963899	IdentifierDeclStatement	ut8 * buf = malloc ( bsize ) ;	1105:1:40613:40638	963844	5	True				
ANR	963900	IdentifierDecl	* buf = malloc ( bsize )		963844	0					
ANR	963901	IdentifierDeclType	ut8 *		963844	0					
ANR	963902	Identifier	buf		963844	1					
ANR	963903	AssignmentExpression	* buf = malloc ( bsize )		963844	2		=			
ANR	963904	Identifier	buf		963844	0					
ANR	963905	CallExpression	malloc ( bsize )		963844	1					
ANR	963906	Callee	malloc		963844	0					
ANR	963907	Identifier	malloc		963844	0					
ANR	963908	ArgumentList	bsize		963844	1					
ANR	963909	Argument	bsize		963844	0					
ANR	963910	Identifier	bsize		963844	0					
ANR	963911	IfStatement	if ( buf )		963844	6					
ANR	963912	Condition	buf	1106:5:40645:40647	963844	0	True				
ANR	963913	Identifier	buf		963844	0					
ANR	963914	CompoundStatement		12:10:178:178	963844	1					
ANR	963915	ExpressionStatement	"r_io_read_at ( core -> io , core -> offset , buf , bsize )"	1107:2:40654:40703	963844	0	True				
ANR	963916	CallExpression	"r_io_read_at ( core -> io , core -> offset , buf , bsize )"		963844	0					
ANR	963917	Callee	r_io_read_at		963844	0					
ANR	963918	Identifier	r_io_read_at		963844	0					
ANR	963919	ArgumentList	core -> io		963844	1					
ANR	963920	Argument	core -> io		963844	0					
ANR	963921	PtrMemberAccess	core -> io		963844	0					
ANR	963922	Identifier	core		963844	0					
ANR	963923	Identifier	io		963844	1					
ANR	963924	Argument	core -> offset		963844	1					
ANR	963925	PtrMemberAccess	core -> offset		963844	0					
ANR	963926	Identifier	core		963844	0					
ANR	963927	Identifier	offset		963844	1					
ANR	963928	Argument	buf		963844	2					
ANR	963929	Identifier	buf		963844	0					
ANR	963930	Argument	bsize		963844	3					
ANR	963931	Identifier	bsize		963844	0					
ANR	963932	ExpressionStatement	"r_core_print_disasm_json ( core , core -> offset , buf , bsize , 0 , pj )"	1108:2:40707:40771	963844	1	True				
ANR	963933	CallExpression	"r_core_print_disasm_json ( core , core -> offset , buf , bsize , 0 , pj )"		963844	0					
ANR	963934	Callee	r_core_print_disasm_json		963844	0					
ANR	963935	Identifier	r_core_print_disasm_json		963844	0					
ANR	963936	ArgumentList	core		963844	1					
ANR	963937	Argument	core		963844	0					
ANR	963938	Identifier	core		963844	0					
ANR	963939	Argument	core -> offset		963844	1					
ANR	963940	PtrMemberAccess	core -> offset		963844	0					
ANR	963941	Identifier	core		963844	0					
ANR	963942	Identifier	offset		963844	1					
ANR	963943	Argument	buf		963844	2					
ANR	963944	Identifier	buf		963844	0					
ANR	963945	Argument	bsize		963844	3					
ANR	963946	Identifier	bsize		963844	0					
ANR	963947	Argument	0		963844	4					
ANR	963948	PrimaryExpression	0		963844	0					
ANR	963949	Argument	pj		963844	5					
ANR	963950	Identifier	pj		963844	0					
ANR	963951	ExpressionStatement	free ( buf )	1109:2:40775:40785	963844	2	True				
ANR	963952	CallExpression	free ( buf )		963844	0					
ANR	963953	Callee	free		963844	0					
ANR	963954	Identifier	free		963844	0					
ANR	963955	ArgumentList	buf		963844	1					
ANR	963956	Argument	buf		963844	0					
ANR	963957	Identifier	buf		963844	0					
ANR	963958	ElseStatement	else		963844	0					
ANR	963959	CompoundStatement		16:8:323:323	963844	0					
ANR	963960	ExpressionStatement	"eprintf ( ""cannot allocate %d byte(s)\\n"" , bsize )"	1111:2:40799:40846	963844	0	True				
ANR	963961	CallExpression	"eprintf ( ""cannot allocate %d byte(s)\\n"" , bsize )"		963844	0					
ANR	963962	Callee	eprintf		963844	0					
ANR	963963	Identifier	eprintf		963844	0					
ANR	963964	ArgumentList	"""cannot allocate %d byte(s)\\n"""		963844	1					
ANR	963965	Argument	"""cannot allocate %d byte(s)\\n"""		963844	0					
ANR	963966	PrimaryExpression	"""cannot allocate %d byte(s)\\n"""		963844	0					
ANR	963967	Argument	bsize		963844	1					
ANR	963968	Identifier	bsize		963844	0					
ANR	963969	ExpressionStatement	pj_end ( pj )	1113:1:40852:40863	963844	7	True				
ANR	963970	CallExpression	pj_end ( pj )		963844	0					
ANR	963971	Callee	pj_end		963844	0					
ANR	963972	Identifier	pj_end		963844	0					
ANR	963973	ArgumentList	pj		963844	1					
ANR	963974	Argument	pj		963844	0					
ANR	963975	Identifier	pj		963844	0					
ANR	963976	ExpressionStatement	"r_cons_printf ( ""%s"" , pj_string ( pj ) )"	1114:1:40866:40902	963844	8	True				
ANR	963977	CallExpression	"r_cons_printf ( ""%s"" , pj_string ( pj ) )"		963844	0					
ANR	963978	Callee	r_cons_printf		963844	0					
ANR	963979	Identifier	r_cons_printf		963844	0					
ANR	963980	ArgumentList	"""%s"""		963844	1					
ANR	963981	Argument	"""%s"""		963844	0					
ANR	963982	PrimaryExpression	"""%s"""		963844	0					
ANR	963983	Argument	pj_string ( pj )		963844	1					
ANR	963984	CallExpression	pj_string ( pj )		963844	0					
ANR	963985	Callee	pj_string		963844	0					
ANR	963986	Identifier	pj_string		963844	0					
ANR	963987	ArgumentList	pj		963844	1					
ANR	963988	Argument	pj		963844	0					
ANR	963989	Identifier	pj		963844	0					
ANR	963990	ExpressionStatement	pj_free ( pj )	1115:1:40905:40917	963844	9	True				
ANR	963991	CallExpression	pj_free ( pj )		963844	0					
ANR	963992	Callee	pj_free		963844	0					
ANR	963993	Identifier	pj_free		963844	0					
ANR	963994	ArgumentList	pj		963844	1					
ANR	963995	Argument	pj		963844	0					
ANR	963996	Identifier	pj		963844	0					
ANR	963997	ReturnType	static void		963844	1					
ANR	963998	Identifier	cmd_pDj		963844	2					
ANR	963999	ParameterList	"RCore * core , const char * arg"		963844	3					
ANR	964000	Parameter	RCore * core	1095:20:40441:40451	963844	0	True				
ANR	964001	ParameterType	RCore *		963844	0					
ANR	964002	Identifier	core		963844	1					
ANR	964003	Parameter	const char * arg	1095:33:40454:40468	963844	1	True				
ANR	964004	ParameterType	const char *		963844	0					
ANR	964005	Identifier	arg		963844	1					
ANR	964006	CFGEntryNode	ENTRY		963844		True				
ANR	964007	CFGExitNode	EXIT		963844		True				
ANR	964008	Symbol	malloc		963844						
ANR	964009	Symbol	pj_string		963844						
ANR	964010	Symbol	* core		963844						
ANR	964011	Symbol	core -> offset		963844						
ANR	964012	Symbol	r_num_math		963844						
ANR	964013	Symbol	core		963844						
ANR	964014	Symbol	buf		963844						
ANR	964015	Symbol	core -> io		963844						
ANR	964016	Symbol	arg		963844						
ANR	964017	Symbol	bsize		963844						
ANR	964018	Symbol	pj		963844						
ANR	964019	Symbol	pj_new		963844						
ANR	964020	Symbol	core -> num		963844						
ANR	964021	Function	cmd_pdj	1118:0:40922:41243							
ANR	964022	FunctionDef	"cmd_pdj (RCore * core , const char * arg , ut8 * block)"		964021	0					
ANR	964023	CompoundStatement		1118:62:40984:41243	964021	0					
ANR	964024	IdentifierDeclStatement	"int nblines = r_num_math ( core -> num , arg ) ;"	1119:1:40987:41028	964021	0	True				
ANR	964025	IdentifierDecl	"nblines = r_num_math ( core -> num , arg )"		964021	0					
ANR	964026	IdentifierDeclType	int		964021	0					
ANR	964027	Identifier	nblines		964021	1					
ANR	964028	AssignmentExpression	"nblines = r_num_math ( core -> num , arg )"		964021	2		=			
ANR	964029	Identifier	nblines		964021	0					
ANR	964030	CallExpression	"r_num_math ( core -> num , arg )"		964021	1					
ANR	964031	Callee	r_num_math		964021	0					
ANR	964032	Identifier	r_num_math		964021	0					
ANR	964033	ArgumentList	core -> num		964021	1					
ANR	964034	Argument	core -> num		964021	0					
ANR	964035	PtrMemberAccess	core -> num		964021	0					
ANR	964036	Identifier	core		964021	0					
ANR	964037	Identifier	num		964021	1					
ANR	964038	Argument	arg		964021	1					
ANR	964039	Identifier	arg		964021	0					
ANR	964040	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	1120:1:41031:41049	964021	1	True				
ANR	964041	IdentifierDecl	* pj = pj_new ( )		964021	0					
ANR	964042	IdentifierDeclType	PJ *		964021	0					
ANR	964043	Identifier	pj		964021	1					
ANR	964044	AssignmentExpression	* pj = pj_new ( )		964021	2		=			
ANR	964045	Identifier	pj		964021	0					
ANR	964046	CallExpression	pj_new ( )		964021	1					
ANR	964047	Callee	pj_new		964021	0					
ANR	964048	Identifier	pj_new		964021	0					
ANR	964049	ArgumentList			964021	1					
ANR	964050	IfStatement	if ( ! pj )		964021	2					
ANR	964051	Condition	! pj	1121:5:41056:41058	964021	0	True				
ANR	964052	UnaryOperationExpression	! pj		964021	0					
ANR	964053	UnaryOperator	!		964021	0					
ANR	964054	Identifier	pj		964021	1					
ANR	964055	CompoundStatement		4:10:76:76	964021	1					
ANR	964056	ReturnStatement	return ;	1122:2:41065:41071	964021	0	True				
ANR	964057	ExpressionStatement	pj_a ( pj )	1124:1:41077:41086	964021	3	True				
ANR	964058	CallExpression	pj_a ( pj )		964021	0					
ANR	964059	Callee	pj_a		964021	0					
ANR	964060	Identifier	pj_a		964021	0					
ANR	964061	ArgumentList	pj		964021	1					
ANR	964062	Argument	pj		964021	0					
ANR	964063	Identifier	pj		964021	0					
ANR	964064	ExpressionStatement	"r_core_print_disasm_json ( core , core -> offset , block , core -> blocksize , nblines , pj )"	1125:1:41089:41171	964021	4	True				
ANR	964065	CallExpression	"r_core_print_disasm_json ( core , core -> offset , block , core -> blocksize , nblines , pj )"		964021	0					
ANR	964066	Callee	r_core_print_disasm_json		964021	0					
ANR	964067	Identifier	r_core_print_disasm_json		964021	0					
ANR	964068	ArgumentList	core		964021	1					
ANR	964069	Argument	core		964021	0					
ANR	964070	Identifier	core		964021	0					
ANR	964071	Argument	core -> offset		964021	1					
ANR	964072	PtrMemberAccess	core -> offset		964021	0					
ANR	964073	Identifier	core		964021	0					
ANR	964074	Identifier	offset		964021	1					
ANR	964075	Argument	block		964021	2					
ANR	964076	Identifier	block		964021	0					
ANR	964077	Argument	core -> blocksize		964021	3					
ANR	964078	PtrMemberAccess	core -> blocksize		964021	0					
ANR	964079	Identifier	core		964021	0					
ANR	964080	Identifier	blocksize		964021	1					
ANR	964081	Argument	nblines		964021	4					
ANR	964082	Identifier	nblines		964021	0					
ANR	964083	Argument	pj		964021	5					
ANR	964084	Identifier	pj		964021	0					
ANR	964085	ExpressionStatement	pj_end ( pj )	1126:1:41174:41185	964021	5	True				
ANR	964086	CallExpression	pj_end ( pj )		964021	0					
ANR	964087	Callee	pj_end		964021	0					
ANR	964088	Identifier	pj_end		964021	0					
ANR	964089	ArgumentList	pj		964021	1					
ANR	964090	Argument	pj		964021	0					
ANR	964091	Identifier	pj		964021	0					
ANR	964092	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	1127:1:41188:41226	964021	6	True				
ANR	964093	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		964021	0					
ANR	964094	Callee	r_cons_printf		964021	0					
ANR	964095	Identifier	r_cons_printf		964021	0					
ANR	964096	ArgumentList	"""%s\\n"""		964021	1					
ANR	964097	Argument	"""%s\\n"""		964021	0					
ANR	964098	PrimaryExpression	"""%s\\n"""		964021	0					
ANR	964099	Argument	pj_string ( pj )		964021	1					
ANR	964100	CallExpression	pj_string ( pj )		964021	0					
ANR	964101	Callee	pj_string		964021	0					
ANR	964102	Identifier	pj_string		964021	0					
ANR	964103	ArgumentList	pj		964021	1					
ANR	964104	Argument	pj		964021	0					
ANR	964105	Identifier	pj		964021	0					
ANR	964106	ExpressionStatement	pj_free ( pj )	1128:1:41229:41241	964021	7	True				
ANR	964107	CallExpression	pj_free ( pj )		964021	0					
ANR	964108	Callee	pj_free		964021	0					
ANR	964109	Identifier	pj_free		964021	0					
ANR	964110	ArgumentList	pj		964021	1					
ANR	964111	Argument	pj		964021	0					
ANR	964112	Identifier	pj		964021	0					
ANR	964113	ReturnType	static void		964021	1					
ANR	964114	Identifier	cmd_pdj		964021	2					
ANR	964115	ParameterList	"RCore * core , const char * arg , ut8 * block"		964021	3					
ANR	964116	Parameter	RCore * core	1118:20:40942:40952	964021	0	True				
ANR	964117	ParameterType	RCore *		964021	0					
ANR	964118	Identifier	core		964021	1					
ANR	964119	Parameter	const char * arg	1118:33:40955:40969	964021	1	True				
ANR	964120	ParameterType	const char *		964021	0					
ANR	964121	Identifier	arg		964021	1					
ANR	964122	Parameter	ut8 * block	1118:50:40972:40981	964021	2	True				
ANR	964123	ParameterType	ut8 *		964021	0					
ANR	964124	Identifier	block		964021	1					
ANR	964125	CFGEntryNode	ENTRY		964021		True				
ANR	964126	CFGExitNode	EXIT		964021		True				
ANR	964127	Symbol	nblines		964021						
ANR	964128	Symbol	core -> blocksize		964021						
ANR	964129	Symbol	core		964021						
ANR	964130	Symbol	pj_string		964021						
ANR	964131	Symbol	arg		964021						
ANR	964132	Symbol	* core		964021						
ANR	964133	Symbol	core -> offset		964021						
ANR	964134	Symbol	block		964021						
ANR	964135	Symbol	pj		964021						
ANR	964136	Symbol	pj_new		964021						
ANR	964137	Symbol	core -> num		964021						
ANR	964138	Symbol	r_num_math		964021						
ANR	964139	Function	cmd_p_minus_e	1131:0:41246:41859							
ANR	964140	FunctionDef	"cmd_p_minus_e (RCore * core , ut64 at , ut64 ate)"		964139	0					
ANR	964141	CompoundStatement		1131:58:41304:41859	964139	0					
ANR	964142	IdentifierDeclStatement	ut8 * blockptr = malloc ( ate - at ) ;	1132:1:41307:41340	964139	0	True				
ANR	964143	IdentifierDecl	* blockptr = malloc ( ate - at )		964139	0					
ANR	964144	IdentifierDeclType	ut8 *		964139	0					
ANR	964145	Identifier	blockptr		964139	1					
ANR	964146	AssignmentExpression	* blockptr = malloc ( ate - at )		964139	2		=			
ANR	964147	Identifier	blockptr		964139	0					
ANR	964148	CallExpression	malloc ( ate - at )		964139	1					
ANR	964149	Callee	malloc		964139	0					
ANR	964150	Identifier	malloc		964139	0					
ANR	964151	ArgumentList	ate - at		964139	1					
ANR	964152	Argument	ate - at		964139	0					
ANR	964153	AdditiveExpression	ate - at		964139	0		-			
ANR	964154	Identifier	ate		964139	0					
ANR	964155	Identifier	at		964139	1					
ANR	964156	IfStatement	if ( ! blockptr )		964139	1					
ANR	964157	Condition	! blockptr	1133:5:41347:41355	964139	0	True				
ANR	964158	UnaryOperationExpression	! blockptr		964139	0					
ANR	964159	UnaryOperator	!		964139	0					
ANR	964160	Identifier	blockptr		964139	1					
ANR	964161	CompoundStatement		3:16:53:53	964139	1					
ANR	964162	ReturnStatement	return ;	1134:2:41362:41368	964139	0	True				
ANR	964163	IfStatement	"if ( r_io_read_at ( core -> io , at , blockptr , ( ate - at ) ) )"		964139	2					
ANR	964164	Condition	"r_io_read_at ( core -> io , at , blockptr , ( ate - at ) )"	1136:5:41378:41426	964139	0	True				
ANR	964165	CallExpression	"r_io_read_at ( core -> io , at , blockptr , ( ate - at ) )"		964139	0					
ANR	964166	Callee	r_io_read_at		964139	0					
ANR	964167	Identifier	r_io_read_at		964139	0					
ANR	964168	ArgumentList	core -> io		964139	1					
ANR	964169	Argument	core -> io		964139	0					
ANR	964170	PtrMemberAccess	core -> io		964139	0					
ANR	964171	Identifier	core		964139	0					
ANR	964172	Identifier	io		964139	1					
ANR	964173	Argument	at		964139	1					
ANR	964174	Identifier	at		964139	0					
ANR	964175	Argument	blockptr		964139	2					
ANR	964176	Identifier	blockptr		964139	0					
ANR	964177	Argument	ate - at		964139	3					
ANR	964178	AdditiveExpression	ate - at		964139	0		-			
ANR	964179	Identifier	ate		964139	0					
ANR	964180	Identifier	at		964139	1					
ANR	964181	CompoundStatement		7:2:128:201	964139	1					
ANR	964182	IdentifierDeclStatement	"ut8 entropy = ( ut8 ) ( r_hash_entropy_fraction ( blockptr , ( ate - at ) ) * 255 ) ;"	1137:2:41433:41506	964139	0	True				
ANR	964183	IdentifierDecl	"entropy = ( ut8 ) ( r_hash_entropy_fraction ( blockptr , ( ate - at ) ) * 255 )"		964139	0					
ANR	964184	IdentifierDeclType	ut8		964139	0					
ANR	964185	Identifier	entropy		964139	1					
ANR	964186	AssignmentExpression	"entropy = ( ut8 ) ( r_hash_entropy_fraction ( blockptr , ( ate - at ) ) * 255 )"		964139	2		=			
ANR	964187	Identifier	entropy		964139	0					
ANR	964188	CastExpression	"( ut8 ) ( r_hash_entropy_fraction ( blockptr , ( ate - at ) ) * 255 )"		964139	1					
ANR	964189	CastTarget	ut8		964139	0					
ANR	964190	MultiplicativeExpression	"r_hash_entropy_fraction ( blockptr , ( ate - at ) ) * 255"		964139	1		*			
ANR	964191	CallExpression	"r_hash_entropy_fraction ( blockptr , ( ate - at ) )"		964139	0					
ANR	964192	Callee	r_hash_entropy_fraction		964139	0					
ANR	964193	Identifier	r_hash_entropy_fraction		964139	0					
ANR	964194	ArgumentList	blockptr		964139	1					
ANR	964195	Argument	blockptr		964139	0					
ANR	964196	Identifier	blockptr		964139	0					
ANR	964197	Argument	ate - at		964139	1					
ANR	964198	AdditiveExpression	ate - at		964139	0		-			
ANR	964199	Identifier	ate		964139	0					
ANR	964200	Identifier	at		964139	1					
ANR	964201	PrimaryExpression	255		964139	1					
ANR	964202	ExpressionStatement	entropy = 9 * entropy / 200	1138:2:41510:41537	964139	1	True				
ANR	964203	AssignmentExpression	entropy = 9 * entropy / 200		964139	0		=			
ANR	964204	Identifier	entropy		964139	0					
ANR	964205	MultiplicativeExpression	9 * entropy / 200		964139	1		*			
ANR	964206	PrimaryExpression	9		964139	0					
ANR	964207	MultiplicativeExpression	entropy / 200		964139	1		/			
ANR	964208	Identifier	entropy		964139	0					
ANR	964209	PrimaryExpression	200		964139	1					
ANR	964210	IfStatement	"if ( r_config_get_i ( core -> config , ""scr.color"" ) )"		964139	2					
ANR	964211	Condition	"r_config_get_i ( core -> config , ""scr.color"" )"	1139:6:41578:41619	964139	0	True				
ANR	964212	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		964139	0					
ANR	964213	Callee	r_config_get_i		964139	0					
ANR	964214	Identifier	r_config_get_i		964139	0					
ANR	964215	ArgumentList	core -> config		964139	1					
ANR	964216	Argument	core -> config		964139	0					
ANR	964217	PtrMemberAccess	core -> config		964139	0					
ANR	964218	Identifier	core		964139	0					
ANR	964219	Identifier	config		964139	1					
ANR	964220	Argument	"""scr.color"""		964139	1					
ANR	964221	PrimaryExpression	"""scr.color"""		964139	0					
ANR	964222	CompoundStatement		10:3:322:428	964139	1					
ANR	964223	IdentifierDeclStatement	const char * color = ( entropy > 6 ) ? Color_BGRED : ( entropy > 3 ) ? Color_BGGREEN : Color_BGBLUE ;	1140:3:41627:41733	964139	0	True				
ANR	964224	IdentifierDecl	* color = ( entropy > 6 ) ? Color_BGRED : ( entropy > 3 ) ? Color_BGGREEN : Color_BGBLUE		964139	0					
ANR	964225	IdentifierDeclType	const char *		964139	0					
ANR	964226	Identifier	color		964139	1					
ANR	964227	AssignmentExpression	* color = ( entropy > 6 ) ? Color_BGRED : ( entropy > 3 ) ? Color_BGGREEN : Color_BGBLUE		964139	2		=			
ANR	964228	Identifier	color		964139	0					
ANR	964229	ConditionalExpression	( entropy > 6 ) ? Color_BGRED : ( entropy > 3 ) ? Color_BGGREEN : Color_BGBLUE		964139	1					
ANR	964230	Condition	entropy > 6		964139	0					
ANR	964231	RelationalExpression	entropy > 6		964139	0		>			
ANR	964232	Identifier	entropy		964139	0					
ANR	964233	PrimaryExpression	6		964139	1					
ANR	964234	Identifier	Color_BGRED		964139	1					
ANR	964235	ConditionalExpression	( entropy > 3 ) ? Color_BGGREEN : Color_BGBLUE		964139	2					
ANR	964236	Condition	entropy > 3		964139	0					
ANR	964237	RelationalExpression	entropy > 3		964139	0		>			
ANR	964238	Identifier	entropy		964139	0					
ANR	964239	PrimaryExpression	3		964139	1					
ANR	964240	Identifier	Color_BGGREEN		964139	1					
ANR	964241	Identifier	Color_BGBLUE		964139	2					
ANR	964242	Statement	r_cons_printf	1144:3:41738:41750	964139	1	True				
ANR	964243	Statement	(	1144:17:41752:41752	964139	2	True				
ANR	964244	Statement	"""%s%d"""	1144:18:41753:41758	964139	3	True				
ANR	964245	Statement	Color_RESET	1144:24:41759:41769	964139	4	True				
ANR	964246	Statement	","	1144:35:41770:41770	964139	5	True				
ANR	964247	Statement	color	1144:37:41772:41776	964139	6	True				
ANR	964248	Statement	","	1144:42:41777:41777	964139	7	True				
ANR	964249	Statement	entropy	1144:44:41779:41785	964139	8	True				
ANR	964250	Statement	)	1144:51:41786:41786	964139	9	True				
ANR	964251	ExpressionStatement		1144:52:41787:41787	964139	10	True				
ANR	964252	ElseStatement	else		964139	0					
ANR	964253	CompoundStatement		15:9:493:493	964139	0					
ANR	964254	ExpressionStatement	"r_cons_printf ( ""%d"" , entropy )"	1146:3:41803:41832	964139	0	True				
ANR	964255	CallExpression	"r_cons_printf ( ""%d"" , entropy )"		964139	0					
ANR	964256	Callee	r_cons_printf		964139	0					
ANR	964257	Identifier	r_cons_printf		964139	0					
ANR	964258	ArgumentList	"""%d"""		964139	1					
ANR	964259	Argument	"""%d"""		964139	0					
ANR	964260	PrimaryExpression	"""%d"""		964139	0					
ANR	964261	Argument	entropy		964139	1					
ANR	964262	Identifier	entropy		964139	0					
ANR	964263	ExpressionStatement	free ( blockptr )	1149:1:41842:41857	964139	3	True				
ANR	964264	CallExpression	free ( blockptr )		964139	0					
ANR	964265	Callee	free		964139	0					
ANR	964266	Identifier	free		964139	0					
ANR	964267	ArgumentList	blockptr		964139	1					
ANR	964268	Argument	blockptr		964139	0					
ANR	964269	Identifier	blockptr		964139	0					
ANR	964270	ReturnType	static void		964139	1					
ANR	964271	Identifier	cmd_p_minus_e		964139	2					
ANR	964272	ParameterList	"RCore * core , ut64 at , ut64 ate"		964139	3					
ANR	964273	Parameter	RCore * core	1131:26:41272:41282	964139	0	True				
ANR	964274	ParameterType	RCore *		964139	0					
ANR	964275	Identifier	core		964139	1					
ANR	964276	Parameter	ut64 at	1131:39:41285:41291	964139	1	True				
ANR	964277	ParameterType	ut64		964139	0					
ANR	964278	Identifier	at		964139	1					
ANR	964279	Parameter	ut64 ate	1131:48:41294:41301	964139	2	True				
ANR	964280	ParameterType	ut64		964139	0					
ANR	964281	Identifier	ate		964139	1					
ANR	964282	CFGEntryNode	ENTRY		964139		True				
ANR	964283	CFGExitNode	EXIT		964139		True				
ANR	964284	Symbol	core -> config		964139						
ANR	964285	Symbol	malloc		964139						
ANR	964286	Symbol	blockptr		964139						
ANR	964287	Symbol	Color_BGGREEN		964139						
ANR	964288	Symbol	color		964139						
ANR	964289	Symbol	* core		964139						
ANR	964290	Symbol	r_io_read_at		964139						
ANR	964291	Symbol	Color_BGRED		964139						
ANR	964292	Symbol	core		964139						
ANR	964293	Symbol	at		964139						
ANR	964294	Symbol	ate		964139						
ANR	964295	Symbol	entropy		964139						
ANR	964296	Symbol	core -> io		964139						
ANR	964297	Symbol	Color_BGBLUE		964139						
ANR	964298	Symbol	r_config_get_i		964139						
ANR	964299	Symbol	r_hash_entropy_fraction		964139						
ANR	964300	Function	helpCmdTasks	1152:0:41862:42003							
ANR	964301	FunctionDef	helpCmdTasks (RCore * core)		964300	0					
ANR	964302	CompoundStatement		1152:38:41900:42003	964300	0					
ANR	964303	ExpressionStatement	"r_core_cmd_help ( core , help_msg_amper )"	1154:1:41963:42001	964300	0	True				
ANR	964304	CallExpression	"r_core_cmd_help ( core , help_msg_amper )"		964300	0					
ANR	964305	Callee	r_core_cmd_help		964300	0					
ANR	964306	Identifier	r_core_cmd_help		964300	0					
ANR	964307	ArgumentList	core		964300	1					
ANR	964308	Argument	core		964300	0					
ANR	964309	Identifier	core		964300	0					
ANR	964310	Argument	help_msg_amper		964300	1					
ANR	964311	Identifier	help_msg_amper		964300	0					
ANR	964312	ReturnType	static void		964300	1					
ANR	964313	Identifier	helpCmdTasks		964300	2					
ANR	964314	ParameterList	RCore * core		964300	3					
ANR	964315	Parameter	RCore * core	1152:25:41887:41897	964300	0	True				
ANR	964316	ParameterType	RCore *		964300	0					
ANR	964317	Identifier	core		964300	1					
ANR	964318	CFGEntryNode	ENTRY		964300		True				
ANR	964319	CFGExitNode	EXIT		964300		True				
ANR	964320	Symbol	core		964300						
ANR	964321	Symbol	help_msg_amper		964300						
ANR	964322	Function	print_format_help_help_help_help	1157:0:42006:42169							
ANR	964323	FunctionDef	print_format_help_help_help_help (RCore * core)		964322	0					
ANR	964324	CompoundStatement		1157:58:42064:42169	964322	0					
ANR	964325	IdentifierDeclStatement	"const char * help_msg [ ] = { ""    STAHP IT!!!"" , """" , """" , NULL } ;"	1158:1:42067:42132	964322	0	True				
ANR	964326	IdentifierDecl	"* help_msg [ ] = { ""    STAHP IT!!!"" , """" , """" , NULL }"		964322	0					
ANR	964327	IdentifierDeclType	const char * [ ]		964322	0					
ANR	964328	Identifier	help_msg		964322	1					
ANR	964329	AssignmentExpression	"* help_msg [ ] = { ""    STAHP IT!!!"" , """" , """" , NULL }"		964322	2		=			
ANR	964330	Identifier	help_msg		964322	0					
ANR	964331	InitializerList	"""    STAHP IT!!!"""		964322	1					
ANR	964332	PrimaryExpression	"""    STAHP IT!!!"""		964322	0					
ANR	964333	PrimaryExpression	""""""		964322	1					
ANR	964334	PrimaryExpression	""""""		964322	2					
ANR	964335	Identifier	NULL		964322	3					
ANR	964336	ExpressionStatement	"r_core_cmd_help ( core , help_msg )"	1162:1:42135:42167	964322	1	True				
ANR	964337	CallExpression	"r_core_cmd_help ( core , help_msg )"		964322	0					
ANR	964338	Callee	r_core_cmd_help		964322	0					
ANR	964339	Identifier	r_core_cmd_help		964322	0					
ANR	964340	ArgumentList	core		964322	1					
ANR	964341	Argument	core		964322	0					
ANR	964342	Identifier	core		964322	0					
ANR	964343	Argument	help_msg		964322	1					
ANR	964344	Identifier	help_msg		964322	0					
ANR	964345	ReturnType	static void		964322	1					
ANR	964346	Identifier	print_format_help_help_help_help		964322	2					
ANR	964347	ParameterList	RCore * core		964322	3					
ANR	964348	Parameter	RCore * core	1157:45:42051:42061	964322	0	True				
ANR	964349	ParameterType	RCore *		964322	0					
ANR	964350	Identifier	core		964322	1					
ANR	964351	CFGEntryNode	ENTRY		964322		True				
ANR	964352	CFGExitNode	EXIT		964322		True				
ANR	964353	Symbol	core		964322						
ANR	964354	Symbol	help_msg		964322						
ANR	964355	Symbol	NULL		964322						
ANR	964356	Function	cmd_print_fromage	1165:0:42172:43647							
ANR	964357	FunctionDef	"cmd_print_fromage (RCore * core , const char * input , const ut8 * data , int size)"		964356	0					
ANR	964358	CompoundStatement		1165:89:42261:43647	964356	0					
ANR	964359	SwitchStatement	switch ( * input )		964356	0					
ANR	964360	Condition	* input	1166:9:42272:42277	964356	0	True				
ANR	964361	UnaryOperationExpression	* input		964356	0					
ANR	964362	UnaryOperator	*		964356	0					
ANR	964363	Identifier	input		964356	1					
ANR	964364	CompoundStatement		2:17:18:18	964356	1					
ANR	964365	Label	case 'a' :	1167:1:42283:42291	964356	0	True				
ANR	964366	CompoundStatement		6:3:75:134	964356	1					
ANR	964367	ExpressionStatement	asn1_setformat ( input [ 1 ] != 'q' )	1169:3:42300:42332	964356	0	True				
ANR	964368	CallExpression	asn1_setformat ( input [ 1 ] != 'q' )		964356	0					
ANR	964369	Callee	asn1_setformat		964356	0					
ANR	964370	Identifier	asn1_setformat		964356	0					
ANR	964371	ArgumentList	input [ 1 ] != 'q'		964356	1					
ANR	964372	Argument	input [ 1 ] != 'q'		964356	0					
ANR	964373	EqualityExpression	input [ 1 ] != 'q'		964356	0		!=			
ANR	964374	ArrayIndexing	input [ 1 ]		964356	0					
ANR	964375	Identifier	input		964356	0					
ANR	964376	PrimaryExpression	1		964356	1					
ANR	964377	PrimaryExpression	'q'		964356	1					
ANR	964378	IdentifierDeclStatement	"RASN1Object * asn1 = r_asn1_create_object ( data , size , data ) ;"	1170:3:42337:42396	964356	1	True				
ANR	964379	IdentifierDecl	"* asn1 = r_asn1_create_object ( data , size , data )"		964356	0					
ANR	964380	IdentifierDeclType	RASN1Object *		964356	0					
ANR	964381	Identifier	asn1		964356	1					
ANR	964382	AssignmentExpression	"* asn1 = r_asn1_create_object ( data , size , data )"		964356	2		=			
ANR	964383	Identifier	asn1		964356	0					
ANR	964384	CallExpression	"r_asn1_create_object ( data , size , data )"		964356	1					
ANR	964385	Callee	r_asn1_create_object		964356	0					
ANR	964386	Identifier	r_asn1_create_object		964356	0					
ANR	964387	ArgumentList	data		964356	1					
ANR	964388	Argument	data		964356	0					
ANR	964389	Identifier	data		964356	0					
ANR	964390	Argument	size		964356	1					
ANR	964391	Identifier	size		964356	0					
ANR	964392	Argument	data		964356	2					
ANR	964393	Identifier	data		964356	0					
ANR	964394	IfStatement	if ( asn1 )		964356	2					
ANR	964395	Condition	asn1	1171:7:42405:42408	964356	0	True				
ANR	964396	Identifier	asn1		964356	0					
ANR	964397	CompoundStatement		8:4:155:199	964356	1					
ANR	964398	IdentifierDeclStatement	"char * res = r_asn1_to_string ( asn1 , 0 , NULL ) ;"	1172:4:42417:42461	964356	0	True				
ANR	964399	IdentifierDecl	"* res = r_asn1_to_string ( asn1 , 0 , NULL )"		964356	0					
ANR	964400	IdentifierDeclType	char *		964356	0					
ANR	964401	Identifier	res		964356	1					
ANR	964402	AssignmentExpression	"* res = r_asn1_to_string ( asn1 , 0 , NULL )"		964356	2		=			
ANR	964403	Identifier	res		964356	0					
ANR	964404	CallExpression	"r_asn1_to_string ( asn1 , 0 , NULL )"		964356	1					
ANR	964405	Callee	r_asn1_to_string		964356	0					
ANR	964406	Identifier	r_asn1_to_string		964356	0					
ANR	964407	ArgumentList	asn1		964356	1					
ANR	964408	Argument	asn1		964356	0					
ANR	964409	Identifier	asn1		964356	0					
ANR	964410	Argument	0		964356	1					
ANR	964411	PrimaryExpression	0		964356	0					
ANR	964412	Argument	NULL		964356	2					
ANR	964413	Identifier	NULL		964356	0					
ANR	964414	ExpressionStatement	r_asn1_free_object ( asn1 )	1173:4:42467:42492	964356	1	True				
ANR	964415	CallExpression	r_asn1_free_object ( asn1 )		964356	0					
ANR	964416	Callee	r_asn1_free_object		964356	0					
ANR	964417	Identifier	r_asn1_free_object		964356	0					
ANR	964418	ArgumentList	asn1		964356	1					
ANR	964419	Argument	asn1		964356	0					
ANR	964420	Identifier	asn1		964356	0					
ANR	964421	IfStatement	if ( res )		964356	2					
ANR	964422	Condition	res	1174:8:42502:42504	964356	0	True				
ANR	964423	Identifier	res		964356	0					
ANR	964424	CompoundStatement		10:13:245:245	964356	1					
ANR	964425	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , res )"	1175:5:42514:42541	964356	0	True				
ANR	964426	CallExpression	"r_cons_printf ( ""%s\\n"" , res )"		964356	0					
ANR	964427	Callee	r_cons_printf		964356	0					
ANR	964428	Identifier	r_cons_printf		964356	0					
ANR	964429	ArgumentList	"""%s\\n"""		964356	1					
ANR	964430	Argument	"""%s\\n"""		964356	0					
ANR	964431	PrimaryExpression	"""%s\\n"""		964356	0					
ANR	964432	Argument	res		964356	1					
ANR	964433	Identifier	res		964356	0					
ANR	964434	ExpressionStatement	free ( res )	1176:5:42548:42558	964356	1	True				
ANR	964435	CallExpression	free ( res )		964356	0					
ANR	964436	Callee	free		964356	0					
ANR	964437	Identifier	free		964356	0					
ANR	964438	ArgumentList	res		964356	1					
ANR	964439	Argument	res		964356	0					
ANR	964440	Identifier	res		964356	0					
ANR	964441	ElseStatement	else		964356	0					
ANR	964442	CompoundStatement		14:10:314:314	964356	0					
ANR	964443	ExpressionStatement	"eprintf ( ""Malformed object: did you supply enough data?\\ntry to change the block size (see b?)\\n"" )"	1179:4:42582:42680	964356	0	True				
ANR	964444	CallExpression	"eprintf ( ""Malformed object: did you supply enough data?\\ntry to change the block size (see b?)\\n"" )"		964356	0					
ANR	964445	Callee	eprintf		964356	0					
ANR	964446	Identifier	eprintf		964356	0					
ANR	964447	ArgumentList	"""Malformed object: did you supply enough data?\\ntry to change the block size (see b?)\\n"""		964356	1					
ANR	964448	Argument	"""Malformed object: did you supply enough data?\\ntry to change the block size (see b?)\\n"""		964356	0					
ANR	964449	PrimaryExpression	"""Malformed object: did you supply enough data?\\ntry to change the block size (see b?)\\n"""		964356	0					
ANR	964450	BreakStatement	break ;	1182:2:42693:42698	964356	2	True				
ANR	964451	Label	case 'x' :	1183:1:42701:42709	964356	3	True				
ANR	964452	CompoundStatement		21:3:470:561	964356	4					
ANR	964453	IdentifierDeclStatement	"RX509Certificate * x509 = r_x509_parse_certificate ( r_asn1_create_object ( data , size , data ) ) ;"	1185:3:42732:42823	964356	0	True				
ANR	964454	IdentifierDecl	"* x509 = r_x509_parse_certificate ( r_asn1_create_object ( data , size , data ) )"		964356	0					
ANR	964455	IdentifierDeclType	RX509Certificate *		964356	0					
ANR	964456	Identifier	x509		964356	1					
ANR	964457	AssignmentExpression	"* x509 = r_x509_parse_certificate ( r_asn1_create_object ( data , size , data ) )"		964356	2		=			
ANR	964458	Identifier	x509		964356	0					
ANR	964459	CallExpression	"r_x509_parse_certificate ( r_asn1_create_object ( data , size , data ) )"		964356	1					
ANR	964460	Callee	r_x509_parse_certificate		964356	0					
ANR	964461	Identifier	r_x509_parse_certificate		964356	0					
ANR	964462	ArgumentList	"r_asn1_create_object ( data , size , data )"		964356	1					
ANR	964463	Argument	"r_asn1_create_object ( data , size , data )"		964356	0					
ANR	964464	CallExpression	"r_asn1_create_object ( data , size , data )"		964356	0					
ANR	964465	Callee	r_asn1_create_object		964356	0					
ANR	964466	Identifier	r_asn1_create_object		964356	0					
ANR	964467	ArgumentList	data		964356	1					
ANR	964468	Argument	data		964356	0					
ANR	964469	Identifier	data		964356	0					
ANR	964470	Argument	size		964356	1					
ANR	964471	Identifier	size		964356	0					
ANR	964472	Argument	data		964356	2					
ANR	964473	Identifier	data		964356	0					
ANR	964474	IfStatement	if ( x509 )		964356	1					
ANR	964475	Condition	x509	1186:7:42832:42835	964356	0	True				
ANR	964476	Identifier	x509		964356	0					
ANR	964477	CompoundStatement		25:4:665:696	964356	1					
ANR	964478	IdentifierDeclStatement	"RStrBuf * sb = r_strbuf_new ( """" ) ;"	1187:4:42844:42875	964356	0	True				
ANR	964479	IdentifierDecl	"* sb = r_strbuf_new ( """" )"		964356	0					
ANR	964480	IdentifierDeclType	RStrBuf *		964356	0					
ANR	964481	Identifier	sb		964356	1					
ANR	964482	AssignmentExpression	"* sb = r_strbuf_new ( """" )"		964356	2		=			
ANR	964483	Identifier	sb		964356	0					
ANR	964484	CallExpression	"r_strbuf_new ( """" )"		964356	1					
ANR	964485	Callee	r_strbuf_new		964356	0					
ANR	964486	Identifier	r_strbuf_new		964356	0					
ANR	964487	ArgumentList	""""""		964356	1					
ANR	964488	Argument	""""""		964356	0					
ANR	964489	PrimaryExpression	""""""		964356	0					
ANR	964490	ExpressionStatement	"r_x509_certificate_dump ( x509 , NULL , sb )"	1188:4:42881:42921	964356	1	True				
ANR	964491	CallExpression	"r_x509_certificate_dump ( x509 , NULL , sb )"		964356	0					
ANR	964492	Callee	r_x509_certificate_dump		964356	0					
ANR	964493	Identifier	r_x509_certificate_dump		964356	0					
ANR	964494	ArgumentList	x509		964356	1					
ANR	964495	Argument	x509		964356	0					
ANR	964496	Identifier	x509		964356	0					
ANR	964497	Argument	NULL		964356	1					
ANR	964498	Identifier	NULL		964356	0					
ANR	964499	Argument	sb		964356	2					
ANR	964500	Identifier	sb		964356	0					
ANR	964501	IdentifierDeclStatement	char * res = r_strbuf_drain ( sb ) ;	1189:4:42927:42958	964356	2	True				
ANR	964502	IdentifierDecl	* res = r_strbuf_drain ( sb )		964356	0					
ANR	964503	IdentifierDeclType	char *		964356	0					
ANR	964504	Identifier	res		964356	1					
ANR	964505	AssignmentExpression	* res = r_strbuf_drain ( sb )		964356	2		=			
ANR	964506	Identifier	res		964356	0					
ANR	964507	CallExpression	r_strbuf_drain ( sb )		964356	1					
ANR	964508	Callee	r_strbuf_drain		964356	0					
ANR	964509	Identifier	r_strbuf_drain		964356	0					
ANR	964510	ArgumentList	sb		964356	1					
ANR	964511	Argument	sb		964356	0					
ANR	964512	Identifier	sb		964356	0					
ANR	964513	IfStatement	if ( res )		964356	3					
ANR	964514	Condition	res	1190:8:42968:42970	964356	0	True				
ANR	964515	Identifier	res		964356	0					
ANR	964516	CompoundStatement		26:13:711:711	964356	1					
ANR	964517	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , res )"	1191:5:42980:43007	964356	0	True				
ANR	964518	CallExpression	"r_cons_printf ( ""%s\\n"" , res )"		964356	0					
ANR	964519	Callee	r_cons_printf		964356	0					
ANR	964520	Identifier	r_cons_printf		964356	0					
ANR	964521	ArgumentList	"""%s\\n"""		964356	1					
ANR	964522	Argument	"""%s\\n"""		964356	0					
ANR	964523	PrimaryExpression	"""%s\\n"""		964356	0					
ANR	964524	Argument	res		964356	1					
ANR	964525	Identifier	res		964356	0					
ANR	964526	ExpressionStatement	free ( res )	1192:5:43014:43024	964356	1	True				
ANR	964527	CallExpression	free ( res )		964356	0					
ANR	964528	Callee	free		964356	0					
ANR	964529	Identifier	free		964356	0					
ANR	964530	ArgumentList	res		964356	1					
ANR	964531	Argument	res		964356	0					
ANR	964532	Identifier	res		964356	0					
ANR	964533	ExpressionStatement	r_x509_free_certificate ( x509 )	1194:4:43036:43066	964356	4	True				
ANR	964534	CallExpression	r_x509_free_certificate ( x509 )		964356	0					
ANR	964535	Callee	r_x509_free_certificate		964356	0					
ANR	964536	Identifier	r_x509_free_certificate		964356	0					
ANR	964537	ArgumentList	x509		964356	1					
ANR	964538	Argument	x509		964356	0					
ANR	964539	Identifier	x509		964356	0					
ANR	964540	ElseStatement	else		964356	0					
ANR	964541	CompoundStatement		31:10:816:816	964356	0					
ANR	964542	ExpressionStatement	"eprintf ( ""Malformed object: did you supply enough data?\\ntry to change the block size (see b?)\\n"" )"	1196:4:43084:43182	964356	0	True				
ANR	964543	CallExpression	"eprintf ( ""Malformed object: did you supply enough data?\\ntry to change the block size (see b?)\\n"" )"		964356	0					
ANR	964544	Callee	eprintf		964356	0					
ANR	964545	Identifier	eprintf		964356	0					
ANR	964546	ArgumentList	"""Malformed object: did you supply enough data?\\ntry to change the block size (see b?)\\n"""		964356	1					
ANR	964547	Argument	"""Malformed object: did you supply enough data?\\ntry to change the block size (see b?)\\n"""		964356	0					
ANR	964548	PrimaryExpression	"""Malformed object: did you supply enough data?\\ntry to change the block size (see b?)\\n"""		964356	0					
ANR	964549	BreakStatement	break ;	1199:2:43195:43200	964356	5	True				
ANR	964550	Label	case 'p' :	1200:1:43203:43211	964356	6	True				
ANR	964551	CompoundStatement		38:3:967:1009	964356	7					
ANR	964552	IdentifierDeclStatement	"RCMS * cms = r_pkcs7_parse_cms ( data , size ) ;"	1202:3:43229:43271	964356	0	True				
ANR	964553	IdentifierDecl	"* cms = r_pkcs7_parse_cms ( data , size )"		964356	0					
ANR	964554	IdentifierDeclType	RCMS *		964356	0					
ANR	964555	Identifier	cms		964356	1					
ANR	964556	AssignmentExpression	"* cms = r_pkcs7_parse_cms ( data , size )"		964356	2		=			
ANR	964557	Identifier	cms		964356	0					
ANR	964558	CallExpression	"r_pkcs7_parse_cms ( data , size )"		964356	1					
ANR	964559	Callee	r_pkcs7_parse_cms		964356	0					
ANR	964560	Identifier	r_pkcs7_parse_cms		964356	0					
ANR	964561	ArgumentList	data		964356	1					
ANR	964562	Argument	data		964356	0					
ANR	964563	Identifier	data		964356	0					
ANR	964564	Argument	size		964356	1					
ANR	964565	Identifier	size		964356	0					
ANR	964566	IfStatement	if ( cms )		964356	1					
ANR	964567	Condition	cms	1203:7:43280:43282	964356	0	True				
ANR	964568	Identifier	cms		964356	0					
ANR	964569	CompoundStatement		40:4:1029:1068	964356	1					
ANR	964570	IdentifierDeclStatement	char * res = r_pkcs7_cms_to_string ( cms ) ;	1204:4:43291:43330	964356	0	True				
ANR	964571	IdentifierDecl	* res = r_pkcs7_cms_to_string ( cms )		964356	0					
ANR	964572	IdentifierDeclType	char *		964356	0					
ANR	964573	Identifier	res		964356	1					
ANR	964574	AssignmentExpression	* res = r_pkcs7_cms_to_string ( cms )		964356	2		=			
ANR	964575	Identifier	res		964356	0					
ANR	964576	CallExpression	r_pkcs7_cms_to_string ( cms )		964356	1					
ANR	964577	Callee	r_pkcs7_cms_to_string		964356	0					
ANR	964578	Identifier	r_pkcs7_cms_to_string		964356	0					
ANR	964579	ArgumentList	cms		964356	1					
ANR	964580	Argument	cms		964356	0					
ANR	964581	Identifier	cms		964356	0					
ANR	964582	IfStatement	if ( res )		964356	1					
ANR	964583	Condition	res	1205:8:43340:43342	964356	0	True				
ANR	964584	Identifier	res		964356	0					
ANR	964585	CompoundStatement		41:13:1083:1083	964356	1					
ANR	964586	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , res )"	1206:5:43352:43379	964356	0	True				
ANR	964587	CallExpression	"r_cons_printf ( ""%s\\n"" , res )"		964356	0					
ANR	964588	Callee	r_cons_printf		964356	0					
ANR	964589	Identifier	r_cons_printf		964356	0					
ANR	964590	ArgumentList	"""%s\\n"""		964356	1					
ANR	964591	Argument	"""%s\\n"""		964356	0					
ANR	964592	PrimaryExpression	"""%s\\n"""		964356	0					
ANR	964593	Argument	res		964356	1					
ANR	964594	Identifier	res		964356	0					
ANR	964595	ExpressionStatement	free ( res )	1207:5:43386:43396	964356	1	True				
ANR	964596	CallExpression	free ( res )		964356	0					
ANR	964597	Callee	free		964356	0					
ANR	964598	Identifier	free		964356	0					
ANR	964599	ArgumentList	res		964356	1					
ANR	964600	Argument	res		964356	0					
ANR	964601	Identifier	res		964356	0					
ANR	964602	ExpressionStatement	r_pkcs7_free_cms ( cms )	1209:4:43408:43430	964356	2	True				
ANR	964603	CallExpression	r_pkcs7_free_cms ( cms )		964356	0					
ANR	964604	Callee	r_pkcs7_free_cms		964356	0					
ANR	964605	Identifier	r_pkcs7_free_cms		964356	0					
ANR	964606	ArgumentList	cms		964356	1					
ANR	964607	Argument	cms		964356	0					
ANR	964608	Identifier	cms		964356	0					
ANR	964609	ElseStatement	else		964356	0					
ANR	964610	CompoundStatement		46:10:1180:1180	964356	0					
ANR	964611	ExpressionStatement	"eprintf ( ""Malformed object: did you supply enough data?\\ntry to change the block size (see b?)\\n"" )"	1211:4:43448:43546	964356	0	True				
ANR	964612	CallExpression	"eprintf ( ""Malformed object: did you supply enough data?\\ntry to change the block size (see b?)\\n"" )"		964356	0					
ANR	964613	Callee	eprintf		964356	0					
ANR	964614	Identifier	eprintf		964356	0					
ANR	964615	ArgumentList	"""Malformed object: did you supply enough data?\\ntry to change the block size (see b?)\\n"""		964356	1					
ANR	964616	Argument	"""Malformed object: did you supply enough data?\\ntry to change the block size (see b?)\\n"""		964356	0					
ANR	964617	PrimaryExpression	"""Malformed object: did you supply enough data?\\ntry to change the block size (see b?)\\n"""		964356	0					
ANR	964618	BreakStatement	break ;	1214:2:43559:43564	964356	8	True				
ANR	964619	Label	default :	1215:1:43567:43574	964356	9	True				
ANR	964620	Identifier	default		964356	0					
ANR	964621	Label	case '?' :	1216:1:43577:43585	964356	10	True				
ANR	964622	ExpressionStatement	"r_core_cmd_help ( core , help_msg_pF )"	1217:2:43598:43633	964356	11	True				
ANR	964623	CallExpression	"r_core_cmd_help ( core , help_msg_pF )"		964356	0					
ANR	964624	Callee	r_core_cmd_help		964356	0					
ANR	964625	Identifier	r_core_cmd_help		964356	0					
ANR	964626	ArgumentList	core		964356	1					
ANR	964627	Argument	core		964356	0					
ANR	964628	Identifier	core		964356	0					
ANR	964629	Argument	help_msg_pF		964356	1					
ANR	964630	Identifier	help_msg_pF		964356	0					
ANR	964631	BreakStatement	break ;	1218:2:43637:43642	964356	12	True				
ANR	964632	ReturnType	static void		964356	1					
ANR	964633	Identifier	cmd_print_fromage		964356	2					
ANR	964634	ParameterList	"RCore * core , const char * input , const ut8 * data , int size"		964356	3					
ANR	964635	Parameter	RCore * core	1165:30:42202:42212	964356	0	True				
ANR	964636	ParameterType	RCore *		964356	0					
ANR	964637	Identifier	core		964356	1					
ANR	964638	Parameter	const char * input	1165:43:42215:42231	964356	1	True				
ANR	964639	ParameterType	const char *		964356	0					
ANR	964640	Identifier	input		964356	1					
ANR	964641	Parameter	const ut8 * data	1165:62:42234:42248	964356	2	True				
ANR	964642	ParameterType	const ut8 *		964356	0					
ANR	964643	Identifier	data		964356	1					
ANR	964644	Parameter	int size	1165:79:42251:42258	964356	3	True				
ANR	964645	ParameterType	int		964356	0					
ANR	964646	Identifier	size		964356	1					
ANR	964647	CFGEntryNode	ENTRY		964356		True				
ANR	964648	CFGExitNode	EXIT		964356		True				
ANR	964649	Symbol	res		964356						
ANR	964650	Symbol	NULL		964356						
ANR	964651	Symbol	r_strbuf_new		964356						
ANR	964652	Symbol	data		964356						
ANR	964653	Symbol	* input		964356						
ANR	964654	Symbol	cms		964356						
ANR	964655	Symbol	r_pkcs7_parse_cms		964356						
ANR	964656	Symbol	help_msg_pF		964356						
ANR	964657	Symbol	sb		964356						
ANR	964658	Symbol	r_pkcs7_cms_to_string		964356						
ANR	964659	Symbol	core		964356						
ANR	964660	Symbol	input		964356						
ANR	964661	Symbol	x509		964356						
ANR	964662	Symbol	size		964356						
ANR	964663	Symbol	r_asn1_to_string		964356						
ANR	964664	Symbol	r_x509_parse_certificate		964356						
ANR	964665	Symbol	asn1		964356						
ANR	964666	Symbol	r_strbuf_drain		964356						
ANR	964667	Symbol	r_asn1_create_object		964356						
ANR	964668	Function	r_core_gadget_free	1222:0:43650:43725							
ANR	964669	FunctionDef	r_core_gadget_free (RCoreGadget * g)		964668	0					
ANR	964670	CompoundStatement		1222:46:43696:43725	964668	0					
ANR	964671	ExpressionStatement	free ( g -> cmd )	1223:1:43699:43712	964668	0	True				
ANR	964672	CallExpression	free ( g -> cmd )		964668	0					
ANR	964673	Callee	free		964668	0					
ANR	964674	Identifier	free		964668	0					
ANR	964675	ArgumentList	g -> cmd		964668	1					
ANR	964676	Argument	g -> cmd		964668	0					
ANR	964677	PtrMemberAccess	g -> cmd		964668	0					
ANR	964678	Identifier	g		964668	0					
ANR	964679	Identifier	cmd		964668	1					
ANR	964680	ExpressionStatement	free ( g )	1224:1:43715:43723	964668	1	True				
ANR	964681	CallExpression	free ( g )		964668	0					
ANR	964682	Callee	free		964668	0					
ANR	964683	Identifier	free		964668	0					
ANR	964684	ArgumentList	g		964668	1					
ANR	964685	Argument	g		964668	0					
ANR	964686	Identifier	g		964668	0					
ANR	964687	ReturnType	R_API void		964668	1					
ANR	964688	Identifier	r_core_gadget_free		964668	2					
ANR	964689	ParameterList	RCoreGadget * g		964668	3					
ANR	964690	Parameter	RCoreGadget * g	1222:30:43680:43693	964668	0	True				
ANR	964691	ParameterType	RCoreGadget *		964668	0					
ANR	964692	Identifier	g		964668	1					
ANR	964693	CFGEntryNode	ENTRY		964668		True				
ANR	964694	CFGExitNode	EXIT		964668		True				
ANR	964695	Symbol	g -> cmd		964668						
ANR	964696	Symbol	* g		964668						
ANR	964697	Symbol	g		964668						
ANR	964698	DeclStmt									
ANR	964699	Decl							const char	const char * [ ]	help_msg_pg
ANR	964700	Function	cmd_print_gadget	1236:0:43990:46348							
ANR	964701	FunctionDef	"cmd_print_gadget (RCore * core , const char * _input)"		964700	0					
ANR	964702	CompoundStatement		1236:62:44052:46348	964700	0					
ANR	964703	IfStatement	if ( * _input == '?' )		964700	0					
ANR	964704	Condition	* _input == '?'	1237:5:44059:44072	964700	0	True				
ANR	964705	EqualityExpression	* _input == '?'		964700	0		==			
ANR	964706	UnaryOperationExpression	* _input		964700	0					
ANR	964707	UnaryOperator	*		964700	0					
ANR	964708	Identifier	_input		964700	1					
ANR	964709	PrimaryExpression	'?'		964700	1					
ANR	964710	CompoundStatement		2:21:22:22	964700	1					
ANR	964711	ExpressionStatement	"r_core_cmd_help ( core , help_msg_pg )"	1238:2:44088:44123	964700	0	True				
ANR	964712	CallExpression	"r_core_cmd_help ( core , help_msg_pg )"		964700	0					
ANR	964713	Callee	r_core_cmd_help		964700	0					
ANR	964714	Identifier	r_core_cmd_help		964700	0					
ANR	964715	ArgumentList	core		964700	1					
ANR	964716	Argument	core		964700	0					
ANR	964717	Identifier	core		964700	0					
ANR	964718	Argument	help_msg_pg		964700	1					
ANR	964719	Identifier	help_msg_pg		964700	0					
ANR	964720	ReturnStatement	return ;	1239:2:44127:44133	964700	1	True				
ANR	964721	IfStatement	if ( * _input == '-' )		964700	1					
ANR	964722	Condition	* _input == '-'	1241:5:44143:44156	964700	0	True				
ANR	964723	EqualityExpression	* _input == '-'		964700	0		==			
ANR	964724	UnaryOperationExpression	* _input		964700	0					
ANR	964725	UnaryOperator	*		964700	0					
ANR	964726	Identifier	_input		964700	1					
ANR	964727	PrimaryExpression	'-'		964700	1					
ANR	964728	CompoundStatement		6:21:106:106	964700	1					
ANR	964729	ExpressionStatement	r_list_free ( core -> gadgets )	1243:2:44204:44231	964700	0	True				
ANR	964730	CallExpression	r_list_free ( core -> gadgets )		964700	0					
ANR	964731	Callee	r_list_free		964700	0					
ANR	964732	Identifier	r_list_free		964700	0					
ANR	964733	ArgumentList	core -> gadgets		964700	1					
ANR	964734	Argument	core -> gadgets		964700	0					
ANR	964735	PtrMemberAccess	core -> gadgets		964700	0					
ANR	964736	Identifier	core		964700	0					
ANR	964737	Identifier	gadgets		964700	1					
ANR	964738	ExpressionStatement	core -> gadgets = r_list_newf ( ( RListFree ) r_core_gadget_free )	1244:2:44235:44294	964700	1	True				
ANR	964739	AssignmentExpression	core -> gadgets = r_list_newf ( ( RListFree ) r_core_gadget_free )		964700	0		=			
ANR	964740	PtrMemberAccess	core -> gadgets		964700	0					
ANR	964741	Identifier	core		964700	0					
ANR	964742	Identifier	gadgets		964700	1					
ANR	964743	CallExpression	r_list_newf ( ( RListFree ) r_core_gadget_free )		964700	1					
ANR	964744	Callee	r_list_newf		964700	0					
ANR	964745	Identifier	r_list_newf		964700	0					
ANR	964746	ArgumentList	( RListFree ) r_core_gadget_free		964700	1					
ANR	964747	Argument	( RListFree ) r_core_gadget_free		964700	0					
ANR	964748	CastExpression	( RListFree ) r_core_gadget_free		964700	0					
ANR	964749	CastTarget	RListFree		964700	0					
ANR	964750	Identifier	r_core_gadget_free		964700	1					
ANR	964751	ElseStatement	else		964700	0					
ANR	964752	IfStatement	if ( * _input == '*' )		964700	0					
ANR	964753	Condition	* _input == '*'	1245:12:44308:44321	964700	0	True				
ANR	964754	EqualityExpression	* _input == '*'		964700	0		==			
ANR	964755	UnaryOperationExpression	* _input		964700	0					
ANR	964756	UnaryOperator	*		964700	0					
ANR	964757	Identifier	_input		964700	1					
ANR	964758	PrimaryExpression	'*'		964700	1					
ANR	964759	CompoundStatement		12:2:302:317	964700	1					
ANR	964760	IdentifierDeclStatement	RCoreGadget * g ;	1246:2:44337:44351	964700	0	True				
ANR	964761	IdentifierDecl	* g		964700	0					
ANR	964762	IdentifierDeclType	RCoreGadget *		964700	0					
ANR	964763	Identifier	g		964700	1					
ANR	964764	IdentifierDeclStatement	RListIter * iter ;	1247:2:44355:44370	964700	1	True				
ANR	964765	IdentifierDecl	* iter		964700	0					
ANR	964766	IdentifierDeclType	RListIter *		964700	0					
ANR	964767	Identifier	iter		964700	1					
ANR	964768	Statement	r_list_foreach	1248:2:44374:44387	964700	2	True				
ANR	964769	Statement	(	1248:17:44389:44389	964700	3	True				
ANR	964770	Statement	core	1248:18:44390:44393	964700	4	True				
ANR	964771	Statement	->	1248:22:44394:44395	964700	5	True				
ANR	964772	Statement	gadgets	1248:24:44396:44402	964700	6	True				
ANR	964773	Statement	","	1248:31:44403:44403	964700	7	True				
ANR	964774	Statement	iter	1248:33:44405:44408	964700	8	True				
ANR	964775	Statement	","	1248:37:44409:44409	964700	9	True				
ANR	964776	Statement	g	1248:39:44411:44411	964700	10	True				
ANR	964777	Statement	)	1248:40:44412:44412	964700	11	True				
ANR	964778	CompoundStatement		13:42:361:361	964700	12					
ANR	964779	ExpressionStatement	"r_cons_printf ( ""\\""pg %d %d %d %d %s\\""\\n"" , g -> x , g -> y , g -> w , g -> h , g -> cmd )"	1249:3:44419:44492	964700	0	True				
ANR	964780	CallExpression	"r_cons_printf ( ""\\""pg %d %d %d %d %s\\""\\n"" , g -> x , g -> y , g -> w , g -> h , g -> cmd )"		964700	0					
ANR	964781	Callee	r_cons_printf		964700	0					
ANR	964782	Identifier	r_cons_printf		964700	0					
ANR	964783	ArgumentList	"""\\""pg %d %d %d %d %s\\""\\n"""		964700	1					
ANR	964784	Argument	"""\\""pg %d %d %d %d %s\\""\\n"""		964700	0					
ANR	964785	PrimaryExpression	"""\\""pg %d %d %d %d %s\\""\\n"""		964700	0					
ANR	964786	Argument	g -> x		964700	1					
ANR	964787	PtrMemberAccess	g -> x		964700	0					
ANR	964788	Identifier	g		964700	0					
ANR	964789	Identifier	x		964700	1					
ANR	964790	Argument	g -> y		964700	2					
ANR	964791	PtrMemberAccess	g -> y		964700	0					
ANR	964792	Identifier	g		964700	0					
ANR	964793	Identifier	y		964700	1					
ANR	964794	Argument	g -> w		964700	3					
ANR	964795	PtrMemberAccess	g -> w		964700	0					
ANR	964796	Identifier	g		964700	0					
ANR	964797	Identifier	w		964700	1					
ANR	964798	Argument	g -> h		964700	4					
ANR	964799	PtrMemberAccess	g -> h		964700	0					
ANR	964800	Identifier	g		964700	0					
ANR	964801	Identifier	h		964700	1					
ANR	964802	Argument	g -> cmd		964700	5					
ANR	964803	PtrMemberAccess	g -> cmd		964700	0					
ANR	964804	Identifier	g		964700	0					
ANR	964805	Identifier	cmd		964700	1					
ANR	964806	ElseStatement	else		964700	0					
ANR	964807	IfStatement	if ( * _input == 'b' )		964700	0					
ANR	964808	Condition	* _input == 'b'	1251:12:44510:44523	964700	0	True				
ANR	964809	EqualityExpression	* _input == 'b'		964700	0		==			
ANR	964810	UnaryOperationExpression	* _input		964700	0					
ANR	964811	UnaryOperator	*		964700	0					
ANR	964812	Identifier	_input		964700	1					
ANR	964813	PrimaryExpression	'b'		964700	1					
ANR	964814	CompoundStatement		16:28:473:473	964700	1					
ANR	964815	ExpressionStatement	"eprintf ( ""TODO: Change gadget background color\\n"" )"	1252:2:44539:44589	964700	0	True				
ANR	964816	CallExpression	"eprintf ( ""TODO: Change gadget background color\\n"" )"		964700	0					
ANR	964817	Callee	eprintf		964700	0					
ANR	964818	Identifier	eprintf		964700	0					
ANR	964819	ArgumentList	"""TODO: Change gadget background color\\n"""		964700	1					
ANR	964820	Argument	"""TODO: Change gadget background color\\n"""		964700	0					
ANR	964821	PrimaryExpression	"""TODO: Change gadget background color\\n"""		964700	0					
ANR	964822	ElseStatement	else		964700	0					
ANR	964823	IfStatement	if ( * _input == 'm' )		964700	0					
ANR	964824	Condition	* _input == 'm'	1253:12:44603:44616	964700	0	True				
ANR	964825	EqualityExpression	* _input == 'm'		964700	0		==			
ANR	964826	UnaryOperationExpression	* _input		964700	0					
ANR	964827	UnaryOperator	*		964700	0					
ANR	964828	Identifier	_input		964700	1					
ANR	964829	PrimaryExpression	'm'		964700	1					
ANR	964830	CompoundStatement		20:2:610:660	964700	1					
ANR	964831	IdentifierDeclStatement	int nth = atoi ( _input + 1 ) ;	1254:2:44632:44659	964700	0	True				
ANR	964832	IdentifierDecl	nth = atoi ( _input + 1 )		964700	0					
ANR	964833	IdentifierDeclType	int		964700	0					
ANR	964834	Identifier	nth		964700	1					
ANR	964835	AssignmentExpression	nth = atoi ( _input + 1 )		964700	2		=			
ANR	964836	Identifier	nth		964700	0					
ANR	964837	CallExpression	atoi ( _input + 1 )		964700	1					
ANR	964838	Callee	atoi		964700	0					
ANR	964839	Identifier	atoi		964700	0					
ANR	964840	ArgumentList	_input + 1		964700	1					
ANR	964841	Argument	_input + 1		964700	0					
ANR	964842	AdditiveExpression	_input + 1		964700	0		+			
ANR	964843	Identifier	_input		964700	0					
ANR	964844	PrimaryExpression	1		964700	1					
ANR	964845	IdentifierDeclStatement	"RCoreGadget * g = r_list_get_n ( core -> gadgets , nth ) ;"	1255:2:44663:44713	964700	1	True				
ANR	964846	IdentifierDecl	"* g = r_list_get_n ( core -> gadgets , nth )"		964700	0					
ANR	964847	IdentifierDeclType	RCoreGadget *		964700	0					
ANR	964848	Identifier	g		964700	1					
ANR	964849	AssignmentExpression	"* g = r_list_get_n ( core -> gadgets , nth )"		964700	2		=			
ANR	964850	Identifier	g		964700	0					
ANR	964851	CallExpression	"r_list_get_n ( core -> gadgets , nth )"		964700	1					
ANR	964852	Callee	r_list_get_n		964700	0					
ANR	964853	Identifier	r_list_get_n		964700	0					
ANR	964854	ArgumentList	core -> gadgets		964700	1					
ANR	964855	Argument	core -> gadgets		964700	0					
ANR	964856	PtrMemberAccess	core -> gadgets		964700	0					
ANR	964857	Identifier	core		964700	0					
ANR	964858	Identifier	gadgets		964700	1					
ANR	964859	Argument	nth		964700	1					
ANR	964860	Identifier	nth		964700	0					
ANR	964861	IfStatement	if ( g )		964700	2					
ANR	964862	Condition	g	1256:6:44721:44721	964700	0	True				
ANR	964863	Identifier	g		964700	0					
ANR	964864	CompoundStatement		33:3:972:1004	964700	1					
ANR	964865	IdentifierDeclStatement	char * input = strdup ( _input ) ;	1257:3:44729:44758	964700	0	True				
ANR	964866	IdentifierDecl	* input = strdup ( _input )		964700	0					
ANR	964867	IdentifierDeclType	char *		964700	0					
ANR	964868	Identifier	input		964700	1					
ANR	964869	AssignmentExpression	* input = strdup ( _input )		964700	2		=			
ANR	964870	Identifier	input		964700	0					
ANR	964871	CallExpression	strdup ( _input )		964700	1					
ANR	964872	Callee	strdup		964700	0					
ANR	964873	Identifier	strdup		964700	0					
ANR	964874	ArgumentList	_input		964700	1					
ANR	964875	Argument	_input		964700	0					
ANR	964876	Identifier	_input		964700	0					
ANR	964877	IdentifierDeclStatement	"char * space = strchr ( input , ' ' ) ;"	1258:3:44763:44796	964700	1	True				
ANR	964878	IdentifierDecl	"* space = strchr ( input , ' ' )"		964700	0					
ANR	964879	IdentifierDeclType	char *		964700	0					
ANR	964880	Identifier	space		964700	1					
ANR	964881	AssignmentExpression	"* space = strchr ( input , ' ' )"		964700	2		=			
ANR	964882	Identifier	space		964700	0					
ANR	964883	CallExpression	"strchr ( input , ' ' )"		964700	1					
ANR	964884	Callee	strchr		964700	0					
ANR	964885	Identifier	strchr		964700	0					
ANR	964886	ArgumentList	input		964700	1					
ANR	964887	Argument	input		964700	0					
ANR	964888	Identifier	input		964700	0					
ANR	964889	Argument	' '		964700	1					
ANR	964890	PrimaryExpression	' '		964700	0					
ANR	964891	IfStatement	if ( space )		964700	2					
ANR	964892	Condition	space	1259:7:44805:44809	964700	0	True				
ANR	964893	Identifier	space		964700	0					
ANR	964894	CompoundStatement		24:14:759:759	964700	1					
ANR	964895	ExpressionStatement	space ++	1260:4:44818:44825	964700	0	True				
ANR	964896	PostIncDecOperationExpression	space ++		964700	0					
ANR	964897	Identifier	space		964700	0					
ANR	964898	IncDec	++		964700	1					
ANR	964899	ElseStatement	else		964700	0					
ANR	964900	CompoundStatement		26:10:784:784	964700	0					
ANR	964901	ExpressionStatement	"space = """""	1262:4:44843:44853	964700	0	True				
ANR	964902	AssignmentExpression	"space = """""		964700	0		=			
ANR	964903	Identifier	space		964700	0					
ANR	964904	PrimaryExpression	""""""		964700	1					
ANR	964905	IdentifierDeclStatement	"RList * args = r_str_split_list ( space , "" "" , 0 ) ;"	1264:3:44863:44909	964700	3	True				
ANR	964906	IdentifierDecl	"* args = r_str_split_list ( space , "" "" , 0 )"		964700	0					
ANR	964907	IdentifierDeclType	RList *		964700	0					
ANR	964908	Identifier	args		964700	1					
ANR	964909	AssignmentExpression	"* args = r_str_split_list ( space , "" "" , 0 )"		964700	2		=			
ANR	964910	Identifier	args		964700	0					
ANR	964911	CallExpression	"r_str_split_list ( space , "" "" , 0 )"		964700	1					
ANR	964912	Callee	r_str_split_list		964700	0					
ANR	964913	Identifier	r_str_split_list		964700	0					
ANR	964914	ArgumentList	space		964700	1					
ANR	964915	Argument	space		964700	0					
ANR	964916	Identifier	space		964700	0					
ANR	964917	Argument	""" """		964700	1					
ANR	964918	PrimaryExpression	""" """		964700	0					
ANR	964919	Argument	0		964700	2					
ANR	964920	PrimaryExpression	0		964700	0					
ANR	964921	IdentifierDeclStatement	char * x = r_list_pop_head ( args ) ;	1265:3:44914:44946	964700	4	True				
ANR	964922	IdentifierDecl	* x = r_list_pop_head ( args )		964700	0					
ANR	964923	IdentifierDeclType	char *		964700	0					
ANR	964924	Identifier	x		964700	1					
ANR	964925	AssignmentExpression	* x = r_list_pop_head ( args )		964700	2		=			
ANR	964926	Identifier	x		964700	0					
ANR	964927	CallExpression	r_list_pop_head ( args )		964700	1					
ANR	964928	Callee	r_list_pop_head		964700	0					
ANR	964929	Identifier	r_list_pop_head		964700	0					
ANR	964930	ArgumentList	args		964700	1					
ANR	964931	Argument	args		964700	0					
ANR	964932	Identifier	args		964700	0					
ANR	964933	IdentifierDeclStatement	char * y = r_list_pop_head ( args ) ;	1266:3:44951:44983	964700	5	True				
ANR	964934	IdentifierDecl	* y = r_list_pop_head ( args )		964700	0					
ANR	964935	IdentifierDeclType	char *		964700	0					
ANR	964936	Identifier	y		964700	1					
ANR	964937	AssignmentExpression	* y = r_list_pop_head ( args )		964700	2		=			
ANR	964938	Identifier	y		964700	0					
ANR	964939	CallExpression	r_list_pop_head ( args )		964700	1					
ANR	964940	Callee	r_list_pop_head		964700	0					
ANR	964941	Identifier	r_list_pop_head		964700	0					
ANR	964942	ArgumentList	args		964700	1					
ANR	964943	Argument	args		964700	0					
ANR	964944	Identifier	args		964700	0					
ANR	964945	IdentifierDeclStatement	char * w = r_list_pop_head ( args ) ;	1267:3:44988:45020	964700	6	True				
ANR	964946	IdentifierDecl	* w = r_list_pop_head ( args )		964700	0					
ANR	964947	IdentifierDeclType	char *		964700	0					
ANR	964948	Identifier	w		964700	1					
ANR	964949	AssignmentExpression	* w = r_list_pop_head ( args )		964700	2		=			
ANR	964950	Identifier	w		964700	0					
ANR	964951	CallExpression	r_list_pop_head ( args )		964700	1					
ANR	964952	Callee	r_list_pop_head		964700	0					
ANR	964953	Identifier	r_list_pop_head		964700	0					
ANR	964954	ArgumentList	args		964700	1					
ANR	964955	Argument	args		964700	0					
ANR	964956	Identifier	args		964700	0					
ANR	964957	IdentifierDeclStatement	char * h = r_list_pop_head ( args ) ;	1268:3:45025:45057	964700	7	True				
ANR	964958	IdentifierDecl	* h = r_list_pop_head ( args )		964700	0					
ANR	964959	IdentifierDeclType	char *		964700	0					
ANR	964960	Identifier	h		964700	1					
ANR	964961	AssignmentExpression	* h = r_list_pop_head ( args )		964700	2		=			
ANR	964962	Identifier	h		964700	0					
ANR	964963	CallExpression	r_list_pop_head ( args )		964700	1					
ANR	964964	Callee	r_list_pop_head		964700	0					
ANR	964965	Identifier	r_list_pop_head		964700	0					
ANR	964966	ArgumentList	args		964700	1					
ANR	964967	Argument	args		964700	0					
ANR	964968	Identifier	args		964700	0					
ANR	964969	IfStatement	if ( x && y && w && h )		964700	8					
ANR	964970	Condition	x && y && w && h	1269:7:45066:45081	964700	0	True				
ANR	964971	AndExpression	x && y && w && h		964700	0		&&			
ANR	964972	Identifier	x		964700	0					
ANR	964973	AndExpression	y && w && h		964700	1		&&			
ANR	964974	Identifier	y		964700	0					
ANR	964975	AndExpression	w && h		964700	1		&&			
ANR	964976	Identifier	w		964700	0					
ANR	964977	Identifier	h		964700	1					
ANR	964978	CompoundStatement		34:25:1031:1031	964700	1					
ANR	964979	ExpressionStatement	"g -> x = r_num_math ( core -> num , x )"	1270:4:45090:45122	964700	0	True				
ANR	964980	AssignmentExpression	"g -> x = r_num_math ( core -> num , x )"		964700	0		=			
ANR	964981	PtrMemberAccess	g -> x		964700	0					
ANR	964982	Identifier	g		964700	0					
ANR	964983	Identifier	x		964700	1					
ANR	964984	CallExpression	"r_num_math ( core -> num , x )"		964700	1					
ANR	964985	Callee	r_num_math		964700	0					
ANR	964986	Identifier	r_num_math		964700	0					
ANR	964987	ArgumentList	core -> num		964700	1					
ANR	964988	Argument	core -> num		964700	0					
ANR	964989	PtrMemberAccess	core -> num		964700	0					
ANR	964990	Identifier	core		964700	0					
ANR	964991	Identifier	num		964700	1					
ANR	964992	Argument	x		964700	1					
ANR	964993	Identifier	x		964700	0					
ANR	964994	ExpressionStatement	"g -> y = r_num_math ( core -> num , y )"	1271:4:45128:45160	964700	1	True				
ANR	964995	AssignmentExpression	"g -> y = r_num_math ( core -> num , y )"		964700	0		=			
ANR	964996	PtrMemberAccess	g -> y		964700	0					
ANR	964997	Identifier	g		964700	0					
ANR	964998	Identifier	y		964700	1					
ANR	964999	CallExpression	"r_num_math ( core -> num , y )"		964700	1					
ANR	965000	Callee	r_num_math		964700	0					
ANR	965001	Identifier	r_num_math		964700	0					
ANR	965002	ArgumentList	core -> num		964700	1					
ANR	965003	Argument	core -> num		964700	0					
ANR	965004	PtrMemberAccess	core -> num		964700	0					
ANR	965005	Identifier	core		964700	0					
ANR	965006	Identifier	num		964700	1					
ANR	965007	Argument	y		964700	1					
ANR	965008	Identifier	y		964700	0					
ANR	965009	ExpressionStatement	"g -> w = r_num_math ( core -> num , w )"	1272:4:45166:45198	964700	2	True				
ANR	965010	AssignmentExpression	"g -> w = r_num_math ( core -> num , w )"		964700	0		=			
ANR	965011	PtrMemberAccess	g -> w		964700	0					
ANR	965012	Identifier	g		964700	0					
ANR	965013	Identifier	w		964700	1					
ANR	965014	CallExpression	"r_num_math ( core -> num , w )"		964700	1					
ANR	965015	Callee	r_num_math		964700	0					
ANR	965016	Identifier	r_num_math		964700	0					
ANR	965017	ArgumentList	core -> num		964700	1					
ANR	965018	Argument	core -> num		964700	0					
ANR	965019	PtrMemberAccess	core -> num		964700	0					
ANR	965020	Identifier	core		964700	0					
ANR	965021	Identifier	num		964700	1					
ANR	965022	Argument	w		964700	1					
ANR	965023	Identifier	w		964700	0					
ANR	965024	ExpressionStatement	"g -> h = r_num_math ( core -> num , h )"	1273:4:45204:45236	964700	3	True				
ANR	965025	AssignmentExpression	"g -> h = r_num_math ( core -> num , h )"		964700	0		=			
ANR	965026	PtrMemberAccess	g -> h		964700	0					
ANR	965027	Identifier	g		964700	0					
ANR	965028	Identifier	h		964700	1					
ANR	965029	CallExpression	"r_num_math ( core -> num , h )"		964700	1					
ANR	965030	Callee	r_num_math		964700	0					
ANR	965031	Identifier	r_num_math		964700	0					
ANR	965032	ArgumentList	core -> num		964700	1					
ANR	965033	Argument	core -> num		964700	0					
ANR	965034	PtrMemberAccess	core -> num		964700	0					
ANR	965035	Identifier	core		964700	0					
ANR	965036	Identifier	num		964700	1					
ANR	965037	Argument	h		964700	1					
ANR	965038	Identifier	h		964700	0					
ANR	965039	ExpressionStatement	r_list_free ( args )	1275:3:45246:45264	964700	9	True				
ANR	965040	CallExpression	r_list_free ( args )		964700	0					
ANR	965041	Callee	r_list_free		964700	0					
ANR	965042	Identifier	r_list_free		964700	0					
ANR	965043	ArgumentList	args		964700	1					
ANR	965044	Argument	args		964700	0					
ANR	965045	Identifier	args		964700	0					
ANR	965046	ExpressionStatement	free ( input )	1276:3:45269:45281	964700	10	True				
ANR	965047	CallExpression	free ( input )		964700	0					
ANR	965048	Callee	free		964700	0					
ANR	965049	Identifier	free		964700	0					
ANR	965050	ArgumentList	input		964700	1					
ANR	965051	Argument	input		964700	0					
ANR	965052	Identifier	input		964700	0					
ANR	965053	ElseStatement	else		964700	0					
ANR	965054	IfStatement	if ( * _input == ' ' )		964700	0					
ANR	965055	Condition	* _input == ' '	1278:12:45299:45312	964700	0	True				
ANR	965056	EqualityExpression	* _input == ' '		964700	0		==			
ANR	965057	UnaryOperationExpression	* _input		964700	0					
ANR	965058	UnaryOperator	*		964700	0					
ANR	965059	Identifier	_input		964700	1					
ANR	965060	PrimaryExpression	' '		964700	1					
ANR	965061	CompoundStatement		49:2:1466:1498	964700	1					
ANR	965062	IdentifierDeclStatement	char * input = strdup ( _input ) ;	1279:2:45328:45357	964700	0	True				
ANR	965063	IdentifierDecl	* input = strdup ( _input )		964700	0					
ANR	965064	IdentifierDeclType	char *		964700	0					
ANR	965065	Identifier	input		964700	1					
ANR	965066	AssignmentExpression	* input = strdup ( _input )		964700	2		=			
ANR	965067	Identifier	input		964700	0					
ANR	965068	CallExpression	strdup ( _input )		964700	1					
ANR	965069	Callee	strdup		964700	0					
ANR	965070	Identifier	strdup		964700	0					
ANR	965071	ArgumentList	_input		964700	1					
ANR	965072	Argument	_input		964700	0					
ANR	965073	Identifier	_input		964700	0					
ANR	965074	IdentifierDeclStatement	"RList * args = r_str_split_list ( input , "" "" , 0 ) ;"	1280:2:45361:45407	964700	1	True				
ANR	965075	IdentifierDecl	"* args = r_str_split_list ( input , "" "" , 0 )"		964700	0					
ANR	965076	IdentifierDeclType	RList *		964700	0					
ANR	965077	Identifier	args		964700	1					
ANR	965078	AssignmentExpression	"* args = r_str_split_list ( input , "" "" , 0 )"		964700	2		=			
ANR	965079	Identifier	args		964700	0					
ANR	965080	CallExpression	"r_str_split_list ( input , "" "" , 0 )"		964700	1					
ANR	965081	Callee	r_str_split_list		964700	0					
ANR	965082	Identifier	r_str_split_list		964700	0					
ANR	965083	ArgumentList	input		964700	1					
ANR	965084	Argument	input		964700	0					
ANR	965085	Identifier	input		964700	0					
ANR	965086	Argument	""" """		964700	1					
ANR	965087	PrimaryExpression	""" """		964700	0					
ANR	965088	Argument	0		964700	2					
ANR	965089	PrimaryExpression	0		964700	0					
ANR	965090	IdentifierDeclStatement	char * x = r_list_pop_head ( args ) ;	1281:2:45411:45443	964700	2	True				
ANR	965091	IdentifierDecl	* x = r_list_pop_head ( args )		964700	0					
ANR	965092	IdentifierDeclType	char *		964700	0					
ANR	965093	Identifier	x		964700	1					
ANR	965094	AssignmentExpression	* x = r_list_pop_head ( args )		964700	2		=			
ANR	965095	Identifier	x		964700	0					
ANR	965096	CallExpression	r_list_pop_head ( args )		964700	1					
ANR	965097	Callee	r_list_pop_head		964700	0					
ANR	965098	Identifier	r_list_pop_head		964700	0					
ANR	965099	ArgumentList	args		964700	1					
ANR	965100	Argument	args		964700	0					
ANR	965101	Identifier	args		964700	0					
ANR	965102	IdentifierDeclStatement	char * y = r_list_pop_head ( args ) ;	1282:2:45447:45479	964700	3	True				
ANR	965103	IdentifierDecl	* y = r_list_pop_head ( args )		964700	0					
ANR	965104	IdentifierDeclType	char *		964700	0					
ANR	965105	Identifier	y		964700	1					
ANR	965106	AssignmentExpression	* y = r_list_pop_head ( args )		964700	2		=			
ANR	965107	Identifier	y		964700	0					
ANR	965108	CallExpression	r_list_pop_head ( args )		964700	1					
ANR	965109	Callee	r_list_pop_head		964700	0					
ANR	965110	Identifier	r_list_pop_head		964700	0					
ANR	965111	ArgumentList	args		964700	1					
ANR	965112	Argument	args		964700	0					
ANR	965113	Identifier	args		964700	0					
ANR	965114	IdentifierDeclStatement	char * w = r_list_pop_head ( args ) ;	1283:2:45483:45515	964700	4	True				
ANR	965115	IdentifierDecl	* w = r_list_pop_head ( args )		964700	0					
ANR	965116	IdentifierDeclType	char *		964700	0					
ANR	965117	Identifier	w		964700	1					
ANR	965118	AssignmentExpression	* w = r_list_pop_head ( args )		964700	2		=			
ANR	965119	Identifier	w		964700	0					
ANR	965120	CallExpression	r_list_pop_head ( args )		964700	1					
ANR	965121	Callee	r_list_pop_head		964700	0					
ANR	965122	Identifier	r_list_pop_head		964700	0					
ANR	965123	ArgumentList	args		964700	1					
ANR	965124	Argument	args		964700	0					
ANR	965125	Identifier	args		964700	0					
ANR	965126	IdentifierDeclStatement	char * h = r_list_pop_head ( args ) ;	1284:2:45519:45551	964700	5	True				
ANR	965127	IdentifierDecl	* h = r_list_pop_head ( args )		964700	0					
ANR	965128	IdentifierDeclType	char *		964700	0					
ANR	965129	Identifier	h		964700	1					
ANR	965130	AssignmentExpression	* h = r_list_pop_head ( args )		964700	2		=			
ANR	965131	Identifier	h		964700	0					
ANR	965132	CallExpression	r_list_pop_head ( args )		964700	1					
ANR	965133	Callee	r_list_pop_head		964700	0					
ANR	965134	Identifier	r_list_pop_head		964700	0					
ANR	965135	ArgumentList	args		964700	1					
ANR	965136	Argument	args		964700	0					
ANR	965137	Identifier	args		964700	0					
ANR	965138	IfStatement	if ( x && y && w && h )		964700	6					
ANR	965139	Condition	x && y && w && h	1285:6:45559:45574	964700	0	True				
ANR	965140	AndExpression	x && y && w && h		964700	0		&&			
ANR	965141	Identifier	x		964700	0					
ANR	965142	AndExpression	y && w && h		964700	1		&&			
ANR	965143	Identifier	y		964700	0					
ANR	965144	AndExpression	w && h		964700	1		&&			
ANR	965145	Identifier	w		964700	0					
ANR	965146	Identifier	h		964700	1					
ANR	965147	CompoundStatement		55:3:1681:1720	964700	1					
ANR	965148	IdentifierDeclStatement	"int X = r_num_math ( core -> num , x ) ;"	1286:3:45582:45615	964700	0	True				
ANR	965149	IdentifierDecl	"X = r_num_math ( core -> num , x )"		964700	0					
ANR	965150	IdentifierDeclType	int		964700	0					
ANR	965151	Identifier	X		964700	1					
ANR	965152	AssignmentExpression	"X = r_num_math ( core -> num , x )"		964700	2		=			
ANR	965153	Identifier	X		964700	0					
ANR	965154	CallExpression	"r_num_math ( core -> num , x )"		964700	1					
ANR	965155	Callee	r_num_math		964700	0					
ANR	965156	Identifier	r_num_math		964700	0					
ANR	965157	ArgumentList	core -> num		964700	1					
ANR	965158	Argument	core -> num		964700	0					
ANR	965159	PtrMemberAccess	core -> num		964700	0					
ANR	965160	Identifier	core		964700	0					
ANR	965161	Identifier	num		964700	1					
ANR	965162	Argument	x		964700	1					
ANR	965163	Identifier	x		964700	0					
ANR	965164	IdentifierDeclStatement	"int Y = r_num_math ( core -> num , y ) ;"	1287:3:45620:45653	964700	1	True				
ANR	965165	IdentifierDecl	"Y = r_num_math ( core -> num , y )"		964700	0					
ANR	965166	IdentifierDeclType	int		964700	0					
ANR	965167	Identifier	Y		964700	1					
ANR	965168	AssignmentExpression	"Y = r_num_math ( core -> num , y )"		964700	2		=			
ANR	965169	Identifier	Y		964700	0					
ANR	965170	CallExpression	"r_num_math ( core -> num , y )"		964700	1					
ANR	965171	Callee	r_num_math		964700	0					
ANR	965172	Identifier	r_num_math		964700	0					
ANR	965173	ArgumentList	core -> num		964700	1					
ANR	965174	Argument	core -> num		964700	0					
ANR	965175	PtrMemberAccess	core -> num		964700	0					
ANR	965176	Identifier	core		964700	0					
ANR	965177	Identifier	num		964700	1					
ANR	965178	Argument	y		964700	1					
ANR	965179	Identifier	y		964700	0					
ANR	965180	IdentifierDeclStatement	"int W = r_num_math ( core -> num , w ) ;"	1288:3:45658:45691	964700	2	True				
ANR	965181	IdentifierDecl	"W = r_num_math ( core -> num , w )"		964700	0					
ANR	965182	IdentifierDeclType	int		964700	0					
ANR	965183	Identifier	W		964700	1					
ANR	965184	AssignmentExpression	"W = r_num_math ( core -> num , w )"		964700	2		=			
ANR	965185	Identifier	W		964700	0					
ANR	965186	CallExpression	"r_num_math ( core -> num , w )"		964700	1					
ANR	965187	Callee	r_num_math		964700	0					
ANR	965188	Identifier	r_num_math		964700	0					
ANR	965189	ArgumentList	core -> num		964700	1					
ANR	965190	Argument	core -> num		964700	0					
ANR	965191	PtrMemberAccess	core -> num		964700	0					
ANR	965192	Identifier	core		964700	0					
ANR	965193	Identifier	num		964700	1					
ANR	965194	Argument	w		964700	1					
ANR	965195	Identifier	w		964700	0					
ANR	965196	IdentifierDeclStatement	"int H = r_num_math ( core -> num , h ) ;"	1289:3:45696:45729	964700	3	True				
ANR	965197	IdentifierDecl	"H = r_num_math ( core -> num , h )"		964700	0					
ANR	965198	IdentifierDeclType	int		964700	0					
ANR	965199	Identifier	H		964700	1					
ANR	965200	AssignmentExpression	"H = r_num_math ( core -> num , h )"		964700	2		=			
ANR	965201	Identifier	H		964700	0					
ANR	965202	CallExpression	"r_num_math ( core -> num , h )"		964700	1					
ANR	965203	Callee	r_num_math		964700	0					
ANR	965204	Identifier	r_num_math		964700	0					
ANR	965205	ArgumentList	core -> num		964700	1					
ANR	965206	Argument	core -> num		964700	0					
ANR	965207	PtrMemberAccess	core -> num		964700	0					
ANR	965208	Identifier	core		964700	0					
ANR	965209	Identifier	num		964700	1					
ANR	965210	Argument	h		964700	1					
ANR	965211	Identifier	h		964700	0					
ANR	965212	IdentifierDeclStatement	"char * cmd = r_str_list_join ( args , "" "" ) ;"	1290:3:45734:45773	964700	4	True				
ANR	965213	IdentifierDecl	"* cmd = r_str_list_join ( args , "" "" )"		964700	0					
ANR	965214	IdentifierDeclType	char *		964700	0					
ANR	965215	Identifier	cmd		964700	1					
ANR	965216	AssignmentExpression	"* cmd = r_str_list_join ( args , "" "" )"		964700	2		=			
ANR	965217	Identifier	cmd		964700	0					
ANR	965218	CallExpression	"r_str_list_join ( args , "" "" )"		964700	1					
ANR	965219	Callee	r_str_list_join		964700	0					
ANR	965220	Identifier	r_str_list_join		964700	0					
ANR	965221	ArgumentList	args		964700	1					
ANR	965222	Argument	args		964700	0					
ANR	965223	Identifier	args		964700	0					
ANR	965224	Argument	""" """		964700	1					
ANR	965225	PrimaryExpression	""" """		964700	0					
ANR	965226	IfStatement	if ( cmd )		964700	5					
ANR	965227	Condition	cmd	1291:7:45782:45784	964700	0	True				
ANR	965228	Identifier	cmd		964700	0					
ANR	965229	CompoundStatement		58:4:1795:1832	964700	1					
ANR	965230	IdentifierDeclStatement	RCoreGadget * g = R_NEW0 ( RCoreGadget ) ;	1293:4:45848:45885	964700	0	True				
ANR	965231	IdentifierDecl	* g = R_NEW0 ( RCoreGadget )		964700	0					
ANR	965232	IdentifierDeclType	RCoreGadget *		964700	0					
ANR	965233	Identifier	g		964700	1					
ANR	965234	AssignmentExpression	* g = R_NEW0 ( RCoreGadget )		964700	2		=			
ANR	965235	Identifier	g		964700	0					
ANR	965236	CallExpression	R_NEW0 ( RCoreGadget )		964700	1					
ANR	965237	Callee	R_NEW0		964700	0					
ANR	965238	Identifier	R_NEW0		964700	0					
ANR	965239	ArgumentList	RCoreGadget		964700	1					
ANR	965240	Argument	RCoreGadget		964700	0					
ANR	965241	Identifier	RCoreGadget		964700	0					
ANR	965242	ExpressionStatement	g -> x = X	1294:4:45891:45899	964700	1	True				
ANR	965243	AssignmentExpression	g -> x = X		964700	0		=			
ANR	965244	PtrMemberAccess	g -> x		964700	0					
ANR	965245	Identifier	g		964700	0					
ANR	965246	Identifier	x		964700	1					
ANR	965247	Identifier	X		964700	1					
ANR	965248	ExpressionStatement	g -> y = Y	1295:4:45905:45913	964700	2	True				
ANR	965249	AssignmentExpression	g -> y = Y		964700	0		=			
ANR	965250	PtrMemberAccess	g -> y		964700	0					
ANR	965251	Identifier	g		964700	0					
ANR	965252	Identifier	y		964700	1					
ANR	965253	Identifier	Y		964700	1					
ANR	965254	ExpressionStatement	g -> w = W	1296:4:45919:45927	964700	3	True				
ANR	965255	AssignmentExpression	g -> w = W		964700	0		=			
ANR	965256	PtrMemberAccess	g -> w		964700	0					
ANR	965257	Identifier	g		964700	0					
ANR	965258	Identifier	w		964700	1					
ANR	965259	Identifier	W		964700	1					
ANR	965260	ExpressionStatement	g -> h = H	1297:4:45933:45941	964700	4	True				
ANR	965261	AssignmentExpression	g -> h = H		964700	0		=			
ANR	965262	PtrMemberAccess	g -> h		964700	0					
ANR	965263	Identifier	g		964700	0					
ANR	965264	Identifier	h		964700	1					
ANR	965265	Identifier	H		964700	1					
ANR	965266	ExpressionStatement	g -> cmd = cmd	1298:4:45947:45959	964700	5	True				
ANR	965267	AssignmentExpression	g -> cmd = cmd		964700	0		=			
ANR	965268	PtrMemberAccess	g -> cmd		964700	0					
ANR	965269	Identifier	g		964700	0					
ANR	965270	Identifier	cmd		964700	1					
ANR	965271	Identifier	cmd		964700	1					
ANR	965272	ExpressionStatement	"r_list_append ( core -> gadgets , g )"	1299:4:45965:45997	964700	6	True				
ANR	965273	CallExpression	"r_list_append ( core -> gadgets , g )"		964700	0					
ANR	965274	Callee	r_list_append		964700	0					
ANR	965275	Identifier	r_list_append		964700	0					
ANR	965276	ArgumentList	core -> gadgets		964700	1					
ANR	965277	Argument	core -> gadgets		964700	0					
ANR	965278	PtrMemberAccess	core -> gadgets		964700	0					
ANR	965279	Identifier	core		964700	0					
ANR	965280	Identifier	gadgets		964700	1					
ANR	965281	Argument	g		964700	1					
ANR	965282	Identifier	g		964700	0					
ANR	965283	ExpressionStatement	r_list_free ( args )	1302:2:46010:46028	964700	7	True				
ANR	965284	CallExpression	r_list_free ( args )		964700	0					
ANR	965285	Callee	r_list_free		964700	0					
ANR	965286	Identifier	r_list_free		964700	0					
ANR	965287	ArgumentList	args		964700	1					
ANR	965288	Argument	args		964700	0					
ANR	965289	Identifier	args		964700	0					
ANR	965290	ExpressionStatement	free ( input )	1303:2:46032:46044	964700	8	True				
ANR	965291	CallExpression	free ( input )		964700	0					
ANR	965292	Callee	free		964700	0					
ANR	965293	Identifier	free		964700	0					
ANR	965294	ArgumentList	input		964700	1					
ANR	965295	Argument	input		964700	0					
ANR	965296	Identifier	input		964700	0					
ANR	965297	ElseStatement	else		964700	0					
ANR	965298	IfStatement	if ( ! * _input )		964700	0					
ANR	965299	Condition	! * _input	1304:12:46058:46065	964700	0	True				
ANR	965300	UnaryOperationExpression	! * _input		964700	0					
ANR	965301	UnaryOperator	!		964700	0					
ANR	965302	UnaryOperationExpression	* _input		964700	1					
ANR	965303	UnaryOperator	*		964700	0					
ANR	965304	Identifier	_input		964700	1					
ANR	965305	CompoundStatement		71:2:2045:2060	964700	1					
ANR	965306	IdentifierDeclStatement	RCoreGadget * g ;	1305:2:46080:46094	964700	0	True				
ANR	965307	IdentifierDecl	* g		964700	0					
ANR	965308	IdentifierDeclType	RCoreGadget *		964700	0					
ANR	965309	Identifier	g		964700	1					
ANR	965310	IdentifierDeclStatement	RListIter * iter ;	1306:2:46098:46113	964700	1	True				
ANR	965311	IdentifierDecl	* iter		964700	0					
ANR	965312	IdentifierDeclType	RListIter *		964700	0					
ANR	965313	Identifier	iter		964700	1					
ANR	965314	Statement	r_list_foreach	1307:2:46117:46130	964700	2	True				
ANR	965315	Statement	(	1307:17:46132:46132	964700	3	True				
ANR	965316	Statement	core	1307:18:46133:46136	964700	4	True				
ANR	965317	Statement	->	1307:22:46137:46138	964700	5	True				
ANR	965318	Statement	gadgets	1307:24:46139:46145	964700	6	True				
ANR	965319	Statement	","	1307:31:46146:46146	964700	7	True				
ANR	965320	Statement	iter	1307:33:46148:46151	964700	8	True				
ANR	965321	Statement	","	1307:37:46152:46152	964700	9	True				
ANR	965322	Statement	g	1307:39:46154:46154	964700	10	True				
ANR	965323	Statement	)	1307:40:46155:46155	964700	11	True				
ANR	965324	CompoundStatement		73:3:2109:2150	964700	12					
ANR	965325	IdentifierDeclStatement	"char * res = r_core_cmd_str ( core , g -> cmd ) ;"	1308:3:46162:46203	964700	0	True				
ANR	965326	IdentifierDecl	"* res = r_core_cmd_str ( core , g -> cmd )"		964700	0					
ANR	965327	IdentifierDeclType	char *		964700	0					
ANR	965328	Identifier	res		964700	1					
ANR	965329	AssignmentExpression	"* res = r_core_cmd_str ( core , g -> cmd )"		964700	2		=			
ANR	965330	Identifier	res		964700	0					
ANR	965331	CallExpression	"r_core_cmd_str ( core , g -> cmd )"		964700	1					
ANR	965332	Callee	r_core_cmd_str		964700	0					
ANR	965333	Identifier	r_core_cmd_str		964700	0					
ANR	965334	ArgumentList	core		964700	1					
ANR	965335	Argument	core		964700	0					
ANR	965336	Identifier	core		964700	0					
ANR	965337	Argument	g -> cmd		964700	1					
ANR	965338	PtrMemberAccess	g -> cmd		964700	0					
ANR	965339	Identifier	g		964700	0					
ANR	965340	Identifier	cmd		964700	1					
ANR	965341	IfStatement	if ( res )		964700	1					
ANR	965342	Condition	res	1309:7:46212:46214	964700	0	True				
ANR	965343	Identifier	res		964700	0					
ANR	965344	CompoundStatement		74:12:2164:2164	964700	1					
ANR	965345	ExpressionStatement	"r_cons_strcat_at ( res , g -> x , g -> y , g -> w , g -> h )"	1310:4:46223:46269	964700	0	True				
ANR	965346	CallExpression	"r_cons_strcat_at ( res , g -> x , g -> y , g -> w , g -> h )"		964700	0					
ANR	965347	Callee	r_cons_strcat_at		964700	0					
ANR	965348	Identifier	r_cons_strcat_at		964700	0					
ANR	965349	ArgumentList	res		964700	1					
ANR	965350	Argument	res		964700	0					
ANR	965351	Identifier	res		964700	0					
ANR	965352	Argument	g -> x		964700	1					
ANR	965353	PtrMemberAccess	g -> x		964700	0					
ANR	965354	Identifier	g		964700	0					
ANR	965355	Identifier	x		964700	1					
ANR	965356	Argument	g -> y		964700	2					
ANR	965357	PtrMemberAccess	g -> y		964700	0					
ANR	965358	Identifier	g		964700	0					
ANR	965359	Identifier	y		964700	1					
ANR	965360	Argument	g -> w		964700	3					
ANR	965361	PtrMemberAccess	g -> w		964700	0					
ANR	965362	Identifier	g		964700	0					
ANR	965363	Identifier	w		964700	1					
ANR	965364	Argument	g -> h		964700	4					
ANR	965365	PtrMemberAccess	g -> h		964700	0					
ANR	965366	Identifier	g		964700	0					
ANR	965367	Identifier	h		964700	1					
ANR	965368	ExpressionStatement	free ( res )	1311:4:46275:46285	964700	1	True				
ANR	965369	CallExpression	free ( res )		964700	0					
ANR	965370	Callee	free		964700	0					
ANR	965371	Identifier	free		964700	0					
ANR	965372	ArgumentList	res		964700	1					
ANR	965373	Argument	res		964700	0					
ANR	965374	Identifier	res		964700	0					
ANR	965375	ElseStatement	else		964700	0					
ANR	965376	CompoundStatement		79:8:2251:2251	964700	0					
ANR	965377	ExpressionStatement	"r_core_cmd_help ( core , help_msg_pg )"	1315:2:46308:46343	964700	0	True				
ANR	965378	CallExpression	"r_core_cmd_help ( core , help_msg_pg )"		964700	0					
ANR	965379	Callee	r_core_cmd_help		964700	0					
ANR	965380	Identifier	r_core_cmd_help		964700	0					
ANR	965381	ArgumentList	core		964700	1					
ANR	965382	Argument	core		964700	0					
ANR	965383	Identifier	core		964700	0					
ANR	965384	Argument	help_msg_pg		964700	1					
ANR	965385	Identifier	help_msg_pg		964700	0					
ANR	965386	ReturnType	static void		964700	1					
ANR	965387	Identifier	cmd_print_gadget		964700	2					
ANR	965388	ParameterList	"RCore * core , const char * _input"		964700	3					
ANR	965389	Parameter	RCore * core	1236:29:44019:44029	964700	0	True				
ANR	965390	ParameterType	RCore *		964700	0					
ANR	965391	Identifier	core		964700	1					
ANR	965392	Parameter	const char * _input	1236:42:44032:44049	964700	1	True				
ANR	965393	ParameterType	const char *		964700	0					
ANR	965394	Identifier	_input		964700	1					
ANR	965395	CFGEntryNode	ENTRY		964700		True				
ANR	965396	CFGExitNode	EXIT		964700		True				
ANR	965397	Symbol	r_core_gadget_free		964700						
ANR	965398	Symbol	g -> cmd		964700						
ANR	965399	Symbol	r_core_cmd_str		964700						
ANR	965400	Symbol	* core		964700						
ANR	965401	Symbol	r_str_split_list		964700						
ANR	965402	Symbol	H		964700						
ANR	965403	Symbol	g -> h		964700						
ANR	965404	Symbol	strchr		964700						
ANR	965405	Symbol	help_msg_pg		964700						
ANR	965406	Symbol	space		964700						
ANR	965407	Symbol	r_num_math		964700						
ANR	965408	Symbol	* _input		964700						
ANR	965409	Symbol	RCoreGadget		964700						
ANR	965410	Symbol	W		964700						
ANR	965411	Symbol	X		964700						
ANR	965412	Symbol	Y		964700						
ANR	965413	Symbol	_input		964700						
ANR	965414	Symbol	core -> num		964700						
ANR	965415	Symbol	core -> gadgets		964700						
ANR	965416	Symbol	atoi		964700						
ANR	965417	Symbol	res		964700						
ANR	965418	Symbol	nth		964700						
ANR	965419	Symbol	r_list_newf		964700						
ANR	965420	Symbol	g		964700						
ANR	965421	Symbol	h		964700						
ANR	965422	Symbol	iter		964700						
ANR	965423	Symbol	r_list_get_n		964700						
ANR	965424	Symbol	r_str_list_join		964700						
ANR	965425	Symbol	args		964700						
ANR	965426	Symbol	core		964700						
ANR	965427	Symbol	* g		964700						
ANR	965428	Symbol	input		964700						
ANR	965429	Symbol	R_NEW0		964700						
ANR	965430	Symbol	r_list_pop_head		964700						
ANR	965431	Symbol	w		964700						
ANR	965432	Symbol	g -> y		964700						
ANR	965433	Symbol	x		964700						
ANR	965434	Symbol	g -> x		964700						
ANR	965435	Symbol	y		964700						
ANR	965436	Symbol	g -> w		964700						
ANR	965437	Symbol	strdup		964700						
ANR	965438	Symbol	cmd		964700						
ANR	965439	Function	cmd_print_format	1319:0:46351:54234							
ANR	965440	FunctionDef	"cmd_print_format (RCore * core , const char * _input , const ut8 * block , int len)"		965439	0					
ANR	965441	CompoundStatement		1319:89:46440:54234	965439	0					
ANR	965442	IdentifierDeclStatement	char * input = NULL ;	1320:1:46443:46461	965439	0	True				
ANR	965443	IdentifierDecl	* input = NULL		965439	0					
ANR	965444	IdentifierDeclType	char *		965439	0					
ANR	965445	Identifier	input		965439	1					
ANR	965446	AssignmentExpression	* input = NULL		965439	2		=			
ANR	965447	Identifier	NULL		965439	0					
ANR	965448	Identifier	NULL		965439	1					
ANR	965449	IdentifierDeclStatement	int mode = R_PRINT_MUSTSEE ;	1321:1:46464:46490	965439	1	True				
ANR	965450	IdentifierDecl	mode = R_PRINT_MUSTSEE		965439	0					
ANR	965451	IdentifierDeclType	int		965439	0					
ANR	965452	Identifier	mode		965439	1					
ANR	965453	AssignmentExpression	mode = R_PRINT_MUSTSEE		965439	2		=			
ANR	965454	Identifier	R_PRINT_MUSTSEE		965439	0					
ANR	965455	Identifier	R_PRINT_MUSTSEE		965439	1					
ANR	965456	SwitchStatement	switch ( _input [ 1 ] )		965439	2					
ANR	965457	Condition	_input [ 1 ]	1322:9:46501:46509	965439	0	True				
ANR	965458	ArrayIndexing	_input [ 1 ]		965439	0					
ANR	965459	Identifier	_input		965439	0					
ANR	965460	PrimaryExpression	1		965439	1					
ANR	965461	CompoundStatement		4:20:71:71	965439	1					
ANR	965462	Label	case '*' :	1323:1:46515:46523	965439	0	True				
ANR	965463	ExpressionStatement	_input ++	1324:2:46536:46544	965439	1	True				
ANR	965464	PostIncDecOperationExpression	_input ++		965439	0					
ANR	965465	Identifier	_input		965439	0					
ANR	965466	IncDec	++		965439	1					
ANR	965467	ExpressionStatement	mode = R_PRINT_SEEFLAGS	1325:2:46548:46571	965439	2	True				
ANR	965468	AssignmentExpression	mode = R_PRINT_SEEFLAGS		965439	0		=			
ANR	965469	Identifier	mode		965439	0					
ANR	965470	Identifier	R_PRINT_SEEFLAGS		965439	1					
ANR	965471	BreakStatement	break ;	1326:2:46575:46580	965439	3	True				
ANR	965472	Label	case 'q' :	1327:1:46583:46591	965439	4	True				
ANR	965473	ExpressionStatement	_input ++	1328:2:46604:46612	965439	5	True				
ANR	965474	PostIncDecOperationExpression	_input ++		965439	0					
ANR	965475	Identifier	_input		965439	0					
ANR	965476	IncDec	++		965439	1					
ANR	965477	ExpressionStatement	mode = R_PRINT_QUIET | R_PRINT_MUSTSEE	1329:2:46616:46654	965439	6	True				
ANR	965478	AssignmentExpression	mode = R_PRINT_QUIET | R_PRINT_MUSTSEE		965439	0		=			
ANR	965479	Identifier	mode		965439	0					
ANR	965480	InclusiveOrExpression	R_PRINT_QUIET | R_PRINT_MUSTSEE		965439	1		|			
ANR	965481	Identifier	R_PRINT_QUIET		965439	0					
ANR	965482	Identifier	R_PRINT_MUSTSEE		965439	1					
ANR	965483	BreakStatement	break ;	1330:2:46658:46663	965439	7	True				
ANR	965484	Label	case 'd' :	1331:1:46666:46674	965439	8	True				
ANR	965485	ExpressionStatement	_input ++	1332:2:46687:46695	965439	9	True				
ANR	965486	PostIncDecOperationExpression	_input ++		965439	0					
ANR	965487	Identifier	_input		965439	0					
ANR	965488	IncDec	++		965439	1					
ANR	965489	ExpressionStatement	mode = R_PRINT_DOT	1333:2:46699:46717	965439	10	True				
ANR	965490	AssignmentExpression	mode = R_PRINT_DOT		965439	0		=			
ANR	965491	Identifier	mode		965439	0					
ANR	965492	Identifier	R_PRINT_DOT		965439	1					
ANR	965493	BreakStatement	break ;	1334:2:46721:46726	965439	11	True				
ANR	965494	Label	case 'j' :	1335:1:46729:46737	965439	12	True				
ANR	965495	ExpressionStatement	_input ++	1336:2:46750:46758	965439	13	True				
ANR	965496	PostIncDecOperationExpression	_input ++		965439	0					
ANR	965497	Identifier	_input		965439	0					
ANR	965498	IncDec	++		965439	1					
ANR	965499	ExpressionStatement	mode = R_PRINT_JSON	1337:2:46762:46781	965439	14	True				
ANR	965500	AssignmentExpression	mode = R_PRINT_JSON		965439	0		=			
ANR	965501	Identifier	mode		965439	0					
ANR	965502	Identifier	R_PRINT_JSON		965439	1					
ANR	965503	BreakStatement	break ;	1338:2:46785:46790	965439	15	True				
ANR	965504	Label	case 'v' :	1339:1:46793:46801	965439	16	True				
ANR	965505	ExpressionStatement	_input ++	1340:2:46814:46822	965439	17	True				
ANR	965506	PostIncDecOperationExpression	_input ++		965439	0					
ANR	965507	Identifier	_input		965439	0					
ANR	965508	IncDec	++		965439	1					
ANR	965509	ExpressionStatement	mode = R_PRINT_VALUE | R_PRINT_MUSTSEE	1341:2:46826:46864	965439	18	True				
ANR	965510	AssignmentExpression	mode = R_PRINT_VALUE | R_PRINT_MUSTSEE		965439	0		=			
ANR	965511	Identifier	mode		965439	0					
ANR	965512	InclusiveOrExpression	R_PRINT_VALUE | R_PRINT_MUSTSEE		965439	1		|			
ANR	965513	Identifier	R_PRINT_VALUE		965439	0					
ANR	965514	Identifier	R_PRINT_MUSTSEE		965439	1					
ANR	965515	BreakStatement	break ;	1342:2:46868:46873	965439	19	True				
ANR	965516	Label	case 'c' :	1343:1:46876:46884	965439	20	True				
ANR	965517	ExpressionStatement	_input ++	1344:2:46897:46905	965439	21	True				
ANR	965518	PostIncDecOperationExpression	_input ++		965439	0					
ANR	965519	Identifier	_input		965439	0					
ANR	965520	IncDec	++		965439	1					
ANR	965521	ExpressionStatement	mode = R_PRINT_STRUCT	1345:2:46909:46930	965439	22	True				
ANR	965522	AssignmentExpression	mode = R_PRINT_STRUCT		965439	0		=			
ANR	965523	Identifier	mode		965439	0					
ANR	965524	Identifier	R_PRINT_STRUCT		965439	1					
ANR	965525	BreakStatement	break ;	1346:2:46934:46939	965439	23	True				
ANR	965526	Label	case 's' :	1347:1:46942:46950	965439	24	True				
ANR	965527	CompoundStatement		30:2:524:546	965439	25					
ANR	965528	IdentifierDeclStatement	const char * val = NULL ;	1348:2:46965:46987	965439	0	True				
ANR	965529	IdentifierDecl	* val = NULL		965439	0					
ANR	965530	IdentifierDeclType	const char *		965439	0					
ANR	965531	Identifier	val		965439	1					
ANR	965532	AssignmentExpression	* val = NULL		965439	2		=			
ANR	965533	Identifier	NULL		965439	0					
ANR	965534	Identifier	NULL		965439	1					
ANR	965535	ExpressionStatement	_input += 2	1349:2:46991:47002	965439	1	True				
ANR	965536	AssignmentExpression	_input += 2		965439	0		+=			
ANR	965537	Identifier	_input		965439	0					
ANR	965538	PrimaryExpression	2		965439	1					
ANR	965539	IfStatement	if ( * _input == '.' )		965439	2					
ANR	965540	Condition	* _input == '.'	1350:6:47010:47023	965439	0	True				
ANR	965541	EqualityExpression	* _input == '.'		965439	0		==			
ANR	965542	UnaryOperationExpression	* _input		965439	0					
ANR	965543	UnaryOperator	*		965439	0					
ANR	965544	Identifier	_input		965439	1					
ANR	965545	PrimaryExpression	'.'		965439	1					
ANR	965546	CompoundStatement		32:22:585:585	965439	1					
ANR	965547	ExpressionStatement	_input ++	1351:3:47031:47039	965439	0	True				
ANR	965548	PostIncDecOperationExpression	_input ++		965439	0					
ANR	965549	Identifier	_input		965439	0					
ANR	965550	IncDec	++		965439	1					
ANR	965551	ExpressionStatement	"val = sdb_get ( core -> print -> formats , _input , NULL )"	1352:3:47044:47094	965439	1	True				
ANR	965552	AssignmentExpression	"val = sdb_get ( core -> print -> formats , _input , NULL )"		965439	0		=			
ANR	965553	Identifier	val		965439	0					
ANR	965554	CallExpression	"sdb_get ( core -> print -> formats , _input , NULL )"		965439	1					
ANR	965555	Callee	sdb_get		965439	0					
ANR	965556	Identifier	sdb_get		965439	0					
ANR	965557	ArgumentList	core -> print -> formats		965439	1					
ANR	965558	Argument	core -> print -> formats		965439	0					
ANR	965559	PtrMemberAccess	core -> print -> formats		965439	0					
ANR	965560	PtrMemberAccess	core -> print		965439	0					
ANR	965561	Identifier	core		965439	0					
ANR	965562	Identifier	print		965439	1					
ANR	965563	Identifier	formats		965439	1					
ANR	965564	Argument	_input		965439	1					
ANR	965565	Identifier	_input		965439	0					
ANR	965566	Argument	NULL		965439	2					
ANR	965567	Identifier	NULL		965439	0					
ANR	965568	IfStatement	if ( val )		965439	2					
ANR	965569	Condition	val	1353:7:47103:47105	965439	0	True				
ANR	965570	Identifier	val		965439	0					
ANR	965571	CompoundStatement		35:12:667:667	965439	1					
ANR	965572	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , r_print_format_struct_size ( core -> print , val , mode , 0 ) )"	1354:4:47114:47192	965439	0	True				
ANR	965573	CallExpression	"r_cons_printf ( ""%d\\n"" , r_print_format_struct_size ( core -> print , val , mode , 0 ) )"		965439	0					
ANR	965574	Callee	r_cons_printf		965439	0					
ANR	965575	Identifier	r_cons_printf		965439	0					
ANR	965576	ArgumentList	"""%d\\n"""		965439	1					
ANR	965577	Argument	"""%d\\n"""		965439	0					
ANR	965578	PrimaryExpression	"""%d\\n"""		965439	0					
ANR	965579	Argument	"r_print_format_struct_size ( core -> print , val , mode , 0 )"		965439	1					
ANR	965580	CallExpression	"r_print_format_struct_size ( core -> print , val , mode , 0 )"		965439	0					
ANR	965581	Callee	r_print_format_struct_size		965439	0					
ANR	965582	Identifier	r_print_format_struct_size		965439	0					
ANR	965583	ArgumentList	core -> print		965439	1					
ANR	965584	Argument	core -> print		965439	0					
ANR	965585	PtrMemberAccess	core -> print		965439	0					
ANR	965586	Identifier	core		965439	0					
ANR	965587	Identifier	print		965439	1					
ANR	965588	Argument	val		965439	1					
ANR	965589	Identifier	val		965439	0					
ANR	965590	Argument	mode		965439	2					
ANR	965591	Identifier	mode		965439	0					
ANR	965592	Argument	0		965439	3					
ANR	965593	PrimaryExpression	0		965439	0					
ANR	965594	ElseStatement	else		965439	0					
ANR	965595	CompoundStatement		37:10:763:763	965439	0					
ANR	965596	ExpressionStatement	"eprintf ( ""Struct %s not defined\\nUsage: pfs.struct_name | pfs format\\n"" , _input )"	1356:4:47210:47290	965439	0	True				
ANR	965597	CallExpression	"eprintf ( ""Struct %s not defined\\nUsage: pfs.struct_name | pfs format\\n"" , _input )"		965439	0					
ANR	965598	Callee	eprintf		965439	0					
ANR	965599	Identifier	eprintf		965439	0					
ANR	965600	ArgumentList	"""Struct %s not defined\\nUsage: pfs.struct_name | pfs format\\n"""		965439	1					
ANR	965601	Argument	"""Struct %s not defined\\nUsage: pfs.struct_name | pfs format\\n"""		965439	0					
ANR	965602	PrimaryExpression	"""Struct %s not defined\\nUsage: pfs.struct_name | pfs format\\n"""		965439	0					
ANR	965603	Argument	_input		965439	1					
ANR	965604	Identifier	_input		965439	0					
ANR	965605	ElseStatement	else		965439	0					
ANR	965606	IfStatement	if ( * _input == ' ' )		965439	0					
ANR	965607	Condition	* _input == ' '	1358:13:47310:47323	965439	0	True				
ANR	965608	EqualityExpression	* _input == ' '		965439	0		==			
ANR	965609	UnaryOperationExpression	* _input		965439	0					
ANR	965610	UnaryOperator	*		965439	0					
ANR	965611	Identifier	_input		965439	1					
ANR	965612	PrimaryExpression	' '		965439	1					
ANR	965613	CompoundStatement		40:29:885:885	965439	1					
ANR	965614	WhileStatement	while ( * _input == ' ' && * _input != '\\0' )		965439	0					
ANR	965615	Condition	* _input == ' ' && * _input != '\\0'	1359:10:47338:47370	965439	0	True				
ANR	965616	AndExpression	* _input == ' ' && * _input != '\\0'		965439	0		&&			
ANR	965617	EqualityExpression	* _input == ' '		965439	0		==			
ANR	965618	UnaryOperationExpression	* _input		965439	0					
ANR	965619	UnaryOperator	*		965439	0					
ANR	965620	Identifier	_input		965439	1					
ANR	965621	PrimaryExpression	' '		965439	1					
ANR	965622	EqualityExpression	* _input != '\\0'		965439	1		!=			
ANR	965623	UnaryOperationExpression	* _input		965439	0					
ANR	965624	UnaryOperator	*		965439	0					
ANR	965625	Identifier	_input		965439	1					
ANR	965626	PrimaryExpression	'\\0'		965439	1					
ANR	965627	CompoundStatement		41:45:932:932	965439	1					
ANR	965628	ExpressionStatement	_input ++	1360:4:47379:47387	965439	0	True				
ANR	965629	PostIncDecOperationExpression	_input ++		965439	0					
ANR	965630	Identifier	_input		965439	0					
ANR	965631	IncDec	++		965439	1					
ANR	965632	IfStatement	if ( * _input )		965439	1					
ANR	965633	Condition	* _input	1362:7:47401:47407	965439	0	True				
ANR	965634	UnaryOperationExpression	* _input		965439	0					
ANR	965635	UnaryOperator	*		965439	0					
ANR	965636	Identifier	_input		965439	1					
ANR	965637	CompoundStatement		44:16:969:969	965439	1					
ANR	965638	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , r_print_format_struct_size ( core -> print , _input , mode , 0 ) )"	1363:4:47416:47497	965439	0	True				
ANR	965639	CallExpression	"r_cons_printf ( ""%d\\n"" , r_print_format_struct_size ( core -> print , _input , mode , 0 ) )"		965439	0					
ANR	965640	Callee	r_cons_printf		965439	0					
ANR	965641	Identifier	r_cons_printf		965439	0					
ANR	965642	ArgumentList	"""%d\\n"""		965439	1					
ANR	965643	Argument	"""%d\\n"""		965439	0					
ANR	965644	PrimaryExpression	"""%d\\n"""		965439	0					
ANR	965645	Argument	"r_print_format_struct_size ( core -> print , _input , mode , 0 )"		965439	1					
ANR	965646	CallExpression	"r_print_format_struct_size ( core -> print , _input , mode , 0 )"		965439	0					
ANR	965647	Callee	r_print_format_struct_size		965439	0					
ANR	965648	Identifier	r_print_format_struct_size		965439	0					
ANR	965649	ArgumentList	core -> print		965439	1					
ANR	965650	Argument	core -> print		965439	0					
ANR	965651	PtrMemberAccess	core -> print		965439	0					
ANR	965652	Identifier	core		965439	0					
ANR	965653	Identifier	print		965439	1					
ANR	965654	Argument	_input		965439	1					
ANR	965655	Identifier	_input		965439	0					
ANR	965656	Argument	mode		965439	2					
ANR	965657	Identifier	mode		965439	0					
ANR	965658	Argument	0		965439	3					
ANR	965659	PrimaryExpression	0		965439	0					
ANR	965660	ElseStatement	else		965439	0					
ANR	965661	CompoundStatement		46:10:1068:1068	965439	0					
ANR	965662	ExpressionStatement	"eprintf ( ""Struct %s not defined\\nUsage: pfs.struct_name | pfs format\\n"" , _input )"	1365:4:47515:47595	965439	0	True				
ANR	965663	CallExpression	"eprintf ( ""Struct %s not defined\\nUsage: pfs.struct_name | pfs format\\n"" , _input )"		965439	0					
ANR	965664	Callee	eprintf		965439	0					
ANR	965665	Identifier	eprintf		965439	0					
ANR	965666	ArgumentList	"""Struct %s not defined\\nUsage: pfs.struct_name | pfs format\\n"""		965439	1					
ANR	965667	Argument	"""Struct %s not defined\\nUsage: pfs.struct_name | pfs format\\n"""		965439	0					
ANR	965668	PrimaryExpression	"""Struct %s not defined\\nUsage: pfs.struct_name | pfs format\\n"""		965439	0					
ANR	965669	Argument	_input		965439	1					
ANR	965670	Identifier	_input		965439	0					
ANR	965671	ElseStatement	else		965439	0					
ANR	965672	CompoundStatement		49:9:1170:1170	965439	0					
ANR	965673	ExpressionStatement	"eprintf ( ""Usage: pfs.struct_name | pfs format\\n"" )"	1368:3:47616:47665	965439	0	True				
ANR	965674	CallExpression	"eprintf ( ""Usage: pfs.struct_name | pfs format\\n"" )"		965439	0					
ANR	965675	Callee	eprintf		965439	0					
ANR	965676	Identifier	eprintf		965439	0					
ANR	965677	ArgumentList	"""Usage: pfs.struct_name | pfs format\\n"""		965439	1					
ANR	965678	Argument	"""Usage: pfs.struct_name | pfs format\\n"""		965439	0					
ANR	965679	PrimaryExpression	"""Usage: pfs.struct_name | pfs format\\n"""		965439	0					
ANR	965680	ReturnStatement	return ;	1370:2:47673:47679	965439	3	True				
ANR	965681	Label	case '?' :	1372:1:47685:47693	965439	26	True				
ANR	965682	ExpressionStatement	_input += 2	1373:2:47706:47717	965439	27	True				
ANR	965683	AssignmentExpression	_input += 2		965439	0		+=			
ANR	965684	Identifier	_input		965439	0					
ANR	965685	PrimaryExpression	2		965439	1					
ANR	965686	IfStatement	if ( * _input )		965439	28					
ANR	965687	Condition	* _input	1374:6:47725:47731	965439	0	True				
ANR	965688	UnaryOperationExpression	* _input		965439	0					
ANR	965689	UnaryOperator	*		965439	0					
ANR	965690	Identifier	_input		965439	1					
ANR	965691	CompoundStatement		56:15:1293:1293	965439	1					
ANR	965692	IfStatement	if ( * _input == '?' )		965439	0					
ANR	965693	Condition	* _input == '?'	1375:7:47743:47756	965439	0	True				
ANR	965694	EqualityExpression	* _input == '?'		965439	0		==			
ANR	965695	UnaryOperationExpression	* _input		965439	0					
ANR	965696	UnaryOperator	*		965439	0					
ANR	965697	Identifier	_input		965439	1					
ANR	965698	PrimaryExpression	'?'		965439	1					
ANR	965699	CompoundStatement		57:23:1318:1318	965439	1					
ANR	965700	ExpressionStatement	_input ++	1376:4:47765:47773	965439	0	True				
ANR	965701	PostIncDecOperationExpression	_input ++		965439	0					
ANR	965702	Identifier	_input		965439	0					
ANR	965703	IncDec	++		965439	1					
ANR	965704	IfStatement	if ( _input && * _input == '?' )		965439	1					
ANR	965705	Condition	_input && * _input == '?'	1377:8:47783:47806	965439	0	True				
ANR	965706	AndExpression	_input && * _input == '?'		965439	0		&&			
ANR	965707	Identifier	_input		965439	0					
ANR	965708	EqualityExpression	* _input == '?'		965439	1		==			
ANR	965709	UnaryOperationExpression	* _input		965439	0					
ANR	965710	UnaryOperator	*		965439	0					
ANR	965711	Identifier	_input		965439	1					
ANR	965712	PrimaryExpression	'?'		965439	1					
ANR	965713	CompoundStatement		59:34:1368:1368	965439	1					
ANR	965714	ExpressionStatement	_input ++	1378:5:47816:47824	965439	0	True				
ANR	965715	PostIncDecOperationExpression	_input ++		965439	0					
ANR	965716	Identifier	_input		965439	0					
ANR	965717	IncDec	++		965439	1					
ANR	965718	IfStatement	if ( _input && * _input == '?' )		965439	1					
ANR	965719	Condition	_input && * _input == '?'	1379:9:47835:47858	965439	0	True				
ANR	965720	AndExpression	_input && * _input == '?'		965439	0		&&			
ANR	965721	Identifier	_input		965439	0					
ANR	965722	EqualityExpression	* _input == '?'		965439	1		==			
ANR	965723	UnaryOperationExpression	* _input		965439	0					
ANR	965724	UnaryOperator	*		965439	0					
ANR	965725	Identifier	_input		965439	1					
ANR	965726	PrimaryExpression	'?'		965439	1					
ANR	965727	CompoundStatement		61:35:1420:1420	965439	1					
ANR	965728	ExpressionStatement	print_format_help_help_help_help ( core )	1380:6:47869:47908	965439	0	True				
ANR	965729	CallExpression	print_format_help_help_help_help ( core )		965439	0					
ANR	965730	Callee	print_format_help_help_help_help		965439	0					
ANR	965731	Identifier	print_format_help_help_help_help		965439	0					
ANR	965732	ArgumentList	core		965439	1					
ANR	965733	Argument	core		965439	0					
ANR	965734	Identifier	core		965439	0					
ANR	965735	ElseStatement	else		965439	0					
ANR	965736	CompoundStatement		63:12:1481:1481	965439	0					
ANR	965737	ExpressionStatement	"r_core_cmd_help ( core , help_detail2_pf )"	1382:6:47930:47969	965439	0	True				
ANR	965738	CallExpression	"r_core_cmd_help ( core , help_detail2_pf )"		965439	0					
ANR	965739	Callee	r_core_cmd_help		965439	0					
ANR	965740	Identifier	r_core_cmd_help		965439	0					
ANR	965741	ArgumentList	core		965439	1					
ANR	965742	Argument	core		965439	0					
ANR	965743	Identifier	core		965439	0					
ANR	965744	Argument	help_detail2_pf		965439	1					
ANR	965745	Identifier	help_detail2_pf		965439	0					
ANR	965746	ElseStatement	else		965439	0					
ANR	965747	CompoundStatement		66:11:1548:1548	965439	0					
ANR	965748	ExpressionStatement	"r_core_cmd_help ( core , help_detail_pf )"	1385:5:47996:48034	965439	0	True				
ANR	965749	CallExpression	"r_core_cmd_help ( core , help_detail_pf )"		965439	0					
ANR	965750	Callee	r_core_cmd_help		965439	0					
ANR	965751	Identifier	r_core_cmd_help		965439	0					
ANR	965752	ArgumentList	core		965439	1					
ANR	965753	Argument	core		965439	0					
ANR	965754	Identifier	core		965439	0					
ANR	965755	Argument	help_detail_pf		965439	1					
ANR	965756	Identifier	help_detail_pf		965439	0					
ANR	965757	ElseStatement	else		965439	0					
ANR	965758	CompoundStatement		71:4:1671:1738	965439	0					
ANR	965759	IdentifierDeclStatement	const char * struct_name = r_str_trim_ro ( _input ) ;	1388:4:48058:48106	965439	0	True				
ANR	965760	IdentifierDecl	* struct_name = r_str_trim_ro ( _input )		965439	0					
ANR	965761	IdentifierDeclType	const char *		965439	0					
ANR	965762	Identifier	struct_name		965439	1					
ANR	965763	AssignmentExpression	* struct_name = r_str_trim_ro ( _input )		965439	2		=			
ANR	965764	Identifier	struct_name		965439	0					
ANR	965765	CallExpression	r_str_trim_ro ( _input )		965439	1					
ANR	965766	Callee	r_str_trim_ro		965439	0					
ANR	965767	Identifier	r_str_trim_ro		965439	0					
ANR	965768	ArgumentList	_input		965439	1					
ANR	965769	Argument	_input		965439	0					
ANR	965770	Identifier	_input		965439	0					
ANR	965771	IdentifierDeclStatement	"const char * val = sdb_get ( core -> print -> formats , struct_name , NULL ) ;"	1389:4:48112:48179	965439	1	True				
ANR	965772	IdentifierDecl	"* val = sdb_get ( core -> print -> formats , struct_name , NULL )"		965439	0					
ANR	965773	IdentifierDeclType	const char *		965439	0					
ANR	965774	Identifier	val		965439	1					
ANR	965775	AssignmentExpression	"* val = sdb_get ( core -> print -> formats , struct_name , NULL )"		965439	2		=			
ANR	965776	Identifier	val		965439	0					
ANR	965777	CallExpression	"sdb_get ( core -> print -> formats , struct_name , NULL )"		965439	1					
ANR	965778	Callee	sdb_get		965439	0					
ANR	965779	Identifier	sdb_get		965439	0					
ANR	965780	ArgumentList	core -> print -> formats		965439	1					
ANR	965781	Argument	core -> print -> formats		965439	0					
ANR	965782	PtrMemberAccess	core -> print -> formats		965439	0					
ANR	965783	PtrMemberAccess	core -> print		965439	0					
ANR	965784	Identifier	core		965439	0					
ANR	965785	Identifier	print		965439	1					
ANR	965786	Identifier	formats		965439	1					
ANR	965787	Argument	struct_name		965439	1					
ANR	965788	Identifier	struct_name		965439	0					
ANR	965789	Argument	NULL		965439	2					
ANR	965790	Identifier	NULL		965439	0					
ANR	965791	IfStatement	if ( val )		965439	2					
ANR	965792	Condition	val	1390:8:48189:48191	965439	0	True				
ANR	965793	Identifier	val		965439	0					
ANR	965794	CompoundStatement		72:13:1753:1753	965439	1					
ANR	965795	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , val )"	1391:5:48201:48228	965439	0	True				
ANR	965796	CallExpression	"r_cons_printf ( ""%s\\n"" , val )"		965439	0					
ANR	965797	Callee	r_cons_printf		965439	0					
ANR	965798	Identifier	r_cons_printf		965439	0					
ANR	965799	ArgumentList	"""%s\\n"""		965439	1					
ANR	965800	Argument	"""%s\\n"""		965439	0					
ANR	965801	PrimaryExpression	"""%s\\n"""		965439	0					
ANR	965802	Argument	val		965439	1					
ANR	965803	Identifier	val		965439	0					
ANR	965804	ElseStatement	else		965439	0					
ANR	965805	CompoundStatement		74:11:1800:1800	965439	0					
ANR	965806	ExpressionStatement	"eprintf ( ""Struct %s is not defined\\n"" , _input )"	1393:5:48248:48294	965439	0	True				
ANR	965807	CallExpression	"eprintf ( ""Struct %s is not defined\\n"" , _input )"		965439	0					
ANR	965808	Callee	eprintf		965439	0					
ANR	965809	Identifier	eprintf		965439	0					
ANR	965810	ArgumentList	"""Struct %s is not defined\\n"""		965439	1					
ANR	965811	Argument	"""Struct %s is not defined\\n"""		965439	0					
ANR	965812	PrimaryExpression	"""Struct %s is not defined\\n"""		965439	0					
ANR	965813	Argument	_input		965439	1					
ANR	965814	Identifier	_input		965439	0					
ANR	965815	ElseStatement	else		965439	0					
ANR	965816	CompoundStatement		78:9:1875:1875	965439	0					
ANR	965817	ExpressionStatement	"r_core_cmd_help ( core , help_msg_pf )"	1397:3:48321:48356	965439	0	True				
ANR	965818	CallExpression	"r_core_cmd_help ( core , help_msg_pf )"		965439	0					
ANR	965819	Callee	r_core_cmd_help		965439	0					
ANR	965820	Identifier	r_core_cmd_help		965439	0					
ANR	965821	ArgumentList	core		965439	1					
ANR	965822	Argument	core		965439	0					
ANR	965823	Identifier	core		965439	0					
ANR	965824	Argument	help_msg_pf		965439	1					
ANR	965825	Identifier	help_msg_pf		965439	0					
ANR	965826	ReturnStatement	return ;	1399:2:48364:48370	965439	29	True				
ANR	965827	Label	case 'o' :	1400:1:48373:48381	965439	30	True				
ANR	965828	IfStatement	if ( _input [ 2 ] == '?' )		965439	31					
ANR	965829	Condition	_input [ 2 ] == '?'	1401:6:48398:48413	965439	0	True				
ANR	965830	EqualityExpression	_input [ 2 ] == '?'		965439	0		==			
ANR	965831	ArrayIndexing	_input [ 2 ]		965439	0					
ANR	965832	Identifier	_input		965439	0					
ANR	965833	PrimaryExpression	2		965439	1					
ANR	965834	PrimaryExpression	'?'		965439	1					
ANR	965835	CompoundStatement		83:24:1975:1975	965439	1					
ANR	965836	Statement	eprintf	1402:3:48421:48427	965439	0	True				
ANR	965837	Statement	(	1402:11:48429:48429	965439	1	True				
ANR	965838	Statement	"""|Usage: pfo [format-file]\\n"""	1402:12:48430:48458	965439	2	True				
ANR	965839	Statement	""" """	1403:4:48464:48466	965439	3	True				
ANR	965840	Statement	R_JOIN_3_PATHS	1403:8:48468:48481	965439	4	True				
ANR	965841	Statement	(	1403:23:48483:48483	965439	5	True				
ANR	965842	Statement	"""~"""	1403:24:48484:48486	965439	6	True				
ANR	965843	Statement	","	1403:27:48487:48487	965439	7	True				
ANR	965844	Statement	R2_HOME_SDB_FORMAT	1403:29:48489:48506	965439	8	True				
ANR	965845	Statement	","	1403:47:48507:48507	965439	9	True				
ANR	965846	Statement	""""""	1403:49:48509:48510	965439	10	True				
ANR	965847	Statement	)	1403:51:48511:48511	965439	11	True				
ANR	965848	Statement	"""\\n"""	1403:53:48513:48516	965439	12	True				
ANR	965849	Statement	""" """	1404:4:48522:48524	965439	13	True				
ANR	965850	Statement	R_JOIN_3_PATHS	1404:8:48526:48539	965439	14	True				
ANR	965851	Statement	(	1404:23:48541:48541	965439	15	True				
ANR	965852	Statement	"""%s"""	1404:24:48542:48545	965439	16	True				
ANR	965853	Statement	","	1404:28:48546:48546	965439	17	True				
ANR	965854	Statement	R2_SDB_FORMAT	1404:30:48548:48560	965439	18	True				
ANR	965855	Statement	","	1404:43:48561:48561	965439	19	True				
ANR	965856	Statement	""""""	1404:45:48563:48564	965439	20	True				
ANR	965857	Statement	)	1404:47:48565:48565	965439	21	True				
ANR	965858	Statement	"""\\n"""	1404:49:48567:48570	965439	22	True				
ANR	965859	Statement	","	1404:53:48571:48571	965439	23	True				
ANR	965860	Statement	r_sys_prefix	1405:4:48577:48588	965439	24	True				
ANR	965861	Statement	(	1405:17:48590:48590	965439	25	True				
ANR	965862	Statement	NULL	1405:18:48591:48594	965439	26	True				
ANR	965863	Statement	)	1405:22:48595:48595	965439	27	True				
ANR	965864	Statement	)	1405:23:48596:48596	965439	28	True				
ANR	965865	ExpressionStatement		1405:24:48597:48597	965439	29	True				
ANR	965866	ElseStatement	else		965439	0					
ANR	965867	IfStatement	if ( _input [ 2 ] == ' ' )		965439	0					
ANR	965868	Condition	_input [ 2 ] == ' '	1406:13:48612:48627	965439	0	True				
ANR	965869	EqualityExpression	_input [ 2 ] == ' '		965439	0		==			
ANR	965870	ArrayIndexing	_input [ 2 ]		965439	0					
ANR	965871	Identifier	_input		965439	0					
ANR	965872	PrimaryExpression	2		965439	1					
ANR	965873	PrimaryExpression	' '		965439	1					
ANR	965874	CompoundStatement		94:3:2439:2473	965439	1					
ANR	965875	IdentifierDeclStatement	const char * fname = r_str_trim_ro ( _input + 3 ) ;	1407:3:48635:48681	965439	0	True				
ANR	965876	IdentifierDecl	* fname = r_str_trim_ro ( _input + 3 )		965439	0					
ANR	965877	IdentifierDeclType	const char *		965439	0					
ANR	965878	Identifier	fname		965439	1					
ANR	965879	AssignmentExpression	* fname = r_str_trim_ro ( _input + 3 )		965439	2		=			
ANR	965880	Identifier	fname		965439	0					
ANR	965881	CallExpression	r_str_trim_ro ( _input + 3 )		965439	1					
ANR	965882	Callee	r_str_trim_ro		965439	0					
ANR	965883	Identifier	r_str_trim_ro		965439	0					
ANR	965884	ArgumentList	_input + 3		965439	1					
ANR	965885	Argument	_input + 3		965439	0					
ANR	965886	AdditiveExpression	_input + 3		965439	0		+			
ANR	965887	Identifier	_input		965439	0					
ANR	965888	PrimaryExpression	3		965439	1					
ANR	965889	IdentifierDeclStatement	"char * tmp = r_str_newf ( R_JOIN_2_PATHS ( R2_HOME_SDB_FORMAT , ""%s"" ) , fname ) ;"	1408:3:48686:48759	965439	1	True				
ANR	965890	IdentifierDecl	"* tmp = r_str_newf ( R_JOIN_2_PATHS ( R2_HOME_SDB_FORMAT , ""%s"" ) , fname )"		965439	0					
ANR	965891	IdentifierDeclType	char *		965439	0					
ANR	965892	Identifier	tmp		965439	1					
ANR	965893	AssignmentExpression	"* tmp = r_str_newf ( R_JOIN_2_PATHS ( R2_HOME_SDB_FORMAT , ""%s"" ) , fname )"		965439	2		=			
ANR	965894	Identifier	tmp		965439	0					
ANR	965895	CallExpression	"r_str_newf ( R_JOIN_2_PATHS ( R2_HOME_SDB_FORMAT , ""%s"" ) , fname )"		965439	1					
ANR	965896	Callee	r_str_newf		965439	0					
ANR	965897	Identifier	r_str_newf		965439	0					
ANR	965898	ArgumentList	"R_JOIN_2_PATHS ( R2_HOME_SDB_FORMAT , ""%s"" )"		965439	1					
ANR	965899	Argument	"R_JOIN_2_PATHS ( R2_HOME_SDB_FORMAT , ""%s"" )"		965439	0					
ANR	965900	CallExpression	"R_JOIN_2_PATHS ( R2_HOME_SDB_FORMAT , ""%s"" )"		965439	0					
ANR	965901	Callee	R_JOIN_2_PATHS		965439	0					
ANR	965902	Identifier	R_JOIN_2_PATHS		965439	0					
ANR	965903	ArgumentList	R2_HOME_SDB_FORMAT		965439	1					
ANR	965904	Argument	R2_HOME_SDB_FORMAT		965439	0					
ANR	965905	Identifier	R2_HOME_SDB_FORMAT		965439	0					
ANR	965906	Argument	"""%s"""		965439	1					
ANR	965907	PrimaryExpression	"""%s"""		965439	0					
ANR	965908	Argument	fname		965439	1					
ANR	965909	Identifier	fname		965439	0					
ANR	965910	IdentifierDeclStatement	char * home = r_str_home ( tmp ) ;	1409:3:48764:48793	965439	2	True				
ANR	965911	IdentifierDecl	* home = r_str_home ( tmp )		965439	0					
ANR	965912	IdentifierDeclType	char *		965439	0					
ANR	965913	Identifier	home		965439	1					
ANR	965914	AssignmentExpression	* home = r_str_home ( tmp )		965439	2		=			
ANR	965915	Identifier	home		965439	0					
ANR	965916	CallExpression	r_str_home ( tmp )		965439	1					
ANR	965917	Callee	r_str_home		965439	0					
ANR	965918	Identifier	r_str_home		965439	0					
ANR	965919	ArgumentList	tmp		965439	1					
ANR	965920	Argument	tmp		965439	0					
ANR	965921	Identifier	tmp		965439	0					
ANR	965922	ExpressionStatement	free ( tmp )	1410:3:48798:48808	965439	3	True				
ANR	965923	CallExpression	free ( tmp )		965439	0					
ANR	965924	Callee	free		965439	0					
ANR	965925	Identifier	free		965439	0					
ANR	965926	ArgumentList	tmp		965439	1					
ANR	965927	Argument	tmp		965439	0					
ANR	965928	Identifier	tmp		965439	0					
ANR	965929	ExpressionStatement	"tmp = r_str_newf ( R_JOIN_2_PATHS ( R2_SDB_FORMAT , ""%s"" ) , fname )"	1411:3:48813:48875	965439	4	True				
ANR	965930	AssignmentExpression	"tmp = r_str_newf ( R_JOIN_2_PATHS ( R2_SDB_FORMAT , ""%s"" ) , fname )"		965439	0		=			
ANR	965931	Identifier	tmp		965439	0					
ANR	965932	CallExpression	"r_str_newf ( R_JOIN_2_PATHS ( R2_SDB_FORMAT , ""%s"" ) , fname )"		965439	1					
ANR	965933	Callee	r_str_newf		965439	0					
ANR	965934	Identifier	r_str_newf		965439	0					
ANR	965935	ArgumentList	"R_JOIN_2_PATHS ( R2_SDB_FORMAT , ""%s"" )"		965439	1					
ANR	965936	Argument	"R_JOIN_2_PATHS ( R2_SDB_FORMAT , ""%s"" )"		965439	0					
ANR	965937	CallExpression	"R_JOIN_2_PATHS ( R2_SDB_FORMAT , ""%s"" )"		965439	0					
ANR	965938	Callee	R_JOIN_2_PATHS		965439	0					
ANR	965939	Identifier	R_JOIN_2_PATHS		965439	0					
ANR	965940	ArgumentList	R2_SDB_FORMAT		965439	1					
ANR	965941	Argument	R2_SDB_FORMAT		965439	0					
ANR	965942	Identifier	R2_SDB_FORMAT		965439	0					
ANR	965943	Argument	"""%s"""		965439	1					
ANR	965944	PrimaryExpression	"""%s"""		965439	0					
ANR	965945	Argument	fname		965439	1					
ANR	965946	Identifier	fname		965439	0					
ANR	965947	IdentifierDeclStatement	char * path = r_str_r2_prefix ( tmp ) ;	1412:3:48880:48914	965439	5	True				
ANR	965948	IdentifierDecl	* path = r_str_r2_prefix ( tmp )		965439	0					
ANR	965949	IdentifierDeclType	char *		965439	0					
ANR	965950	Identifier	path		965439	1					
ANR	965951	AssignmentExpression	* path = r_str_r2_prefix ( tmp )		965439	2		=			
ANR	965952	Identifier	path		965439	0					
ANR	965953	CallExpression	r_str_r2_prefix ( tmp )		965439	1					
ANR	965954	Callee	r_str_r2_prefix		965439	0					
ANR	965955	Identifier	r_str_r2_prefix		965439	0					
ANR	965956	ArgumentList	tmp		965439	1					
ANR	965957	Argument	tmp		965439	0					
ANR	965958	Identifier	tmp		965439	0					
ANR	965959	IfStatement	"if ( r_str_endswith ( _input , "".h"" ) )"		965439	6					
ANR	965960	Condition	"r_str_endswith ( _input , "".h"" )"	1413:7:48923:48951	965439	0	True				
ANR	965961	CallExpression	"r_str_endswith ( _input , "".h"" )"		965439	0					
ANR	965962	Callee	r_str_endswith		965439	0					
ANR	965963	Identifier	r_str_endswith		965439	0					
ANR	965964	ArgumentList	_input		965439	1					
ANR	965965	Argument	_input		965439	0					
ANR	965966	Identifier	_input		965439	0					
ANR	965967	Argument	""".h"""		965439	1					
ANR	965968	PrimaryExpression	""".h"""		965439	0					
ANR	965969	CompoundStatement		98:4:2611:2673	965439	1					
ANR	965970	IdentifierDeclStatement	char * error_msg = NULL ;	1414:4:48960:48982	965439	0	True				
ANR	965971	IdentifierDecl	* error_msg = NULL		965439	0					
ANR	965972	IdentifierDeclType	char *		965439	0					
ANR	965973	Identifier	error_msg		965439	1					
ANR	965974	AssignmentExpression	* error_msg = NULL		965439	2		=			
ANR	965975	Identifier	NULL		965439	0					
ANR	965976	Identifier	NULL		965439	1					
ANR	965977	IdentifierDeclStatement	"const char * dir = r_config_get ( core -> config , ""dir.types"" ) ;"	1415:4:48988:49046	965439	1	True				
ANR	965978	IdentifierDecl	"* dir = r_config_get ( core -> config , ""dir.types"" )"		965439	0					
ANR	965979	IdentifierDeclType	const char *		965439	0					
ANR	965980	Identifier	dir		965439	1					
ANR	965981	AssignmentExpression	"* dir = r_config_get ( core -> config , ""dir.types"" )"		965439	2		=			
ANR	965982	Identifier	dir		965439	0					
ANR	965983	CallExpression	"r_config_get ( core -> config , ""dir.types"" )"		965439	1					
ANR	965984	Callee	r_config_get		965439	0					
ANR	965985	Identifier	r_config_get		965439	0					
ANR	965986	ArgumentList	core -> config		965439	1					
ANR	965987	Argument	core -> config		965439	0					
ANR	965988	PtrMemberAccess	core -> config		965439	0					
ANR	965989	Identifier	core		965439	0					
ANR	965990	Identifier	config		965439	1					
ANR	965991	Argument	"""dir.types"""		965439	1					
ANR	965992	PrimaryExpression	"""dir.types"""		965439	0					
ANR	965993	IdentifierDeclStatement	"char * out = r_parse_c_file ( core -> anal , path , dir , & error_msg ) ;"	1416:4:49052:49114	965439	2	True				
ANR	965994	IdentifierDecl	"* out = r_parse_c_file ( core -> anal , path , dir , & error_msg )"		965439	0					
ANR	965995	IdentifierDeclType	char *		965439	0					
ANR	965996	Identifier	out		965439	1					
ANR	965997	AssignmentExpression	"* out = r_parse_c_file ( core -> anal , path , dir , & error_msg )"		965439	2		=			
ANR	965998	Identifier	out		965439	0					
ANR	965999	CallExpression	"r_parse_c_file ( core -> anal , path , dir , & error_msg )"		965439	1					
ANR	966000	Callee	r_parse_c_file		965439	0					
ANR	966001	Identifier	r_parse_c_file		965439	0					
ANR	966002	ArgumentList	core -> anal		965439	1					
ANR	966003	Argument	core -> anal		965439	0					
ANR	966004	PtrMemberAccess	core -> anal		965439	0					
ANR	966005	Identifier	core		965439	0					
ANR	966006	Identifier	anal		965439	1					
ANR	966007	Argument	path		965439	1					
ANR	966008	Identifier	path		965439	0					
ANR	966009	Argument	dir		965439	2					
ANR	966010	Identifier	dir		965439	0					
ANR	966011	Argument	& error_msg		965439	3					
ANR	966012	UnaryOperationExpression	& error_msg		965439	0					
ANR	966013	UnaryOperator	&		965439	0					
ANR	966014	Identifier	error_msg		965439	1					
ANR	966015	IfStatement	if ( out )		965439	3					
ANR	966016	Condition	out	1417:8:49124:49126	965439	0	True				
ANR	966017	Identifier	out		965439	0					
ANR	966018	CompoundStatement		99:13:2688:2688	965439	1					
ANR	966019	ExpressionStatement	"r_anal_save_parsed_type ( core -> anal , out )"	1418:5:49136:49177	965439	0	True				
ANR	966020	CallExpression	"r_anal_save_parsed_type ( core -> anal , out )"		965439	0					
ANR	966021	Callee	r_anal_save_parsed_type		965439	0					
ANR	966022	Identifier	r_anal_save_parsed_type		965439	0					
ANR	966023	ArgumentList	core -> anal		965439	1					
ANR	966024	Argument	core -> anal		965439	0					
ANR	966025	PtrMemberAccess	core -> anal		965439	0					
ANR	966026	Identifier	core		965439	0					
ANR	966027	Identifier	anal		965439	1					
ANR	966028	Argument	out		965439	1					
ANR	966029	Identifier	out		965439	0					
ANR	966030	ExpressionStatement	"r_core_cmd0 ( core , "".ts*"" )"	1419:5:49184:49210	965439	1	True				
ANR	966031	CallExpression	"r_core_cmd0 ( core , "".ts*"" )"		965439	0					
ANR	966032	Callee	r_core_cmd0		965439	0					
ANR	966033	Identifier	r_core_cmd0		965439	0					
ANR	966034	ArgumentList	core		965439	1					
ANR	966035	Argument	core		965439	0					
ANR	966036	Identifier	core		965439	0					
ANR	966037	Argument	""".ts*"""		965439	1					
ANR	966038	PrimaryExpression	""".ts*"""		965439	0					
ANR	966039	ExpressionStatement	free ( out )	1420:5:49217:49227	965439	2	True				
ANR	966040	CallExpression	free ( out )		965439	0					
ANR	966041	Callee	free		965439	0					
ANR	966042	Identifier	free		965439	0					
ANR	966043	ArgumentList	out		965439	1					
ANR	966044	Argument	out		965439	0					
ANR	966045	Identifier	out		965439	0					
ANR	966046	ElseStatement	else		965439	0					
ANR	966047	CompoundStatement		103:11:2799:2799	965439	0					
ANR	966048	ExpressionStatement	"eprintf ( ""Parse error: %s\\n"" , error_msg )"	1422:5:49247:49287	965439	0	True				
ANR	966049	CallExpression	"eprintf ( ""Parse error: %s\\n"" , error_msg )"		965439	0					
ANR	966050	Callee	eprintf		965439	0					
ANR	966051	Identifier	eprintf		965439	0					
ANR	966052	ArgumentList	"""Parse error: %s\\n"""		965439	1					
ANR	966053	Argument	"""Parse error: %s\\n"""		965439	0					
ANR	966054	PrimaryExpression	"""Parse error: %s\\n"""		965439	0					
ANR	966055	Argument	error_msg		965439	1					
ANR	966056	Identifier	error_msg		965439	0					
ANR	966057	ElseStatement	else		965439	0					
ANR	966058	CompoundStatement		106:10:2864:2864	965439	0					
ANR	966059	IfStatement	"if ( ! r_core_cmd_file ( core , home ) && ! r_core_cmd_file ( core , path ) )"		965439	0					
ANR	966060	Condition	"! r_core_cmd_file ( core , home ) && ! r_core_cmd_file ( core , path )"	1425:8:49315:49376	965439	0	True				
ANR	966061	AndExpression	"! r_core_cmd_file ( core , home ) && ! r_core_cmd_file ( core , path )"		965439	0		&&			
ANR	966062	UnaryOperationExpression	"! r_core_cmd_file ( core , home )"		965439	0					
ANR	966063	UnaryOperator	!		965439	0					
ANR	966064	CallExpression	"r_core_cmd_file ( core , home )"		965439	1					
ANR	966065	Callee	r_core_cmd_file		965439	0					
ANR	966066	Identifier	r_core_cmd_file		965439	0					
ANR	966067	ArgumentList	core		965439	1					
ANR	966068	Argument	core		965439	0					
ANR	966069	Identifier	core		965439	0					
ANR	966070	Argument	home		965439	1					
ANR	966071	Identifier	home		965439	0					
ANR	966072	UnaryOperationExpression	"! r_core_cmd_file ( core , path )"		965439	1					
ANR	966073	UnaryOperator	!		965439	0					
ANR	966074	CallExpression	"r_core_cmd_file ( core , path )"		965439	1					
ANR	966075	Callee	r_core_cmd_file		965439	0					
ANR	966076	Identifier	r_core_cmd_file		965439	0					
ANR	966077	ArgumentList	core		965439	1					
ANR	966078	Argument	core		965439	0					
ANR	966079	Identifier	core		965439	0					
ANR	966080	Argument	path		965439	1					
ANR	966081	Identifier	path		965439	0					
ANR	966082	CompoundStatement		107:72:2938:2938	965439	1					
ANR	966083	IfStatement	"if ( ! r_core_cmd_file ( core , _input + 3 ) )"		965439	0					
ANR	966084	Condition	"! r_core_cmd_file ( core , _input + 3 )"	1426:9:49390:49424	965439	0	True				
ANR	966085	UnaryOperationExpression	"! r_core_cmd_file ( core , _input + 3 )"		965439	0					
ANR	966086	UnaryOperator	!		965439	0					
ANR	966087	CallExpression	"r_core_cmd_file ( core , _input + 3 )"		965439	1					
ANR	966088	Callee	r_core_cmd_file		965439	0					
ANR	966089	Identifier	r_core_cmd_file		965439	0					
ANR	966090	ArgumentList	core		965439	1					
ANR	966091	Argument	core		965439	0					
ANR	966092	Identifier	core		965439	0					
ANR	966093	Argument	_input + 3		965439	1					
ANR	966094	AdditiveExpression	_input + 3		965439	0		+			
ANR	966095	Identifier	_input		965439	0					
ANR	966096	PrimaryExpression	3		965439	1					
ANR	966097	CompoundStatement		108:46:2986:2986	965439	1					
ANR	966098	ExpressionStatement	"eprintf ( ""pfo: cannot open format file at '%s'\\n"" , path )"	1427:6:49435:49491	965439	0	True				
ANR	966099	CallExpression	"eprintf ( ""pfo: cannot open format file at '%s'\\n"" , path )"		965439	0					
ANR	966100	Callee	eprintf		965439	0					
ANR	966101	Identifier	eprintf		965439	0					
ANR	966102	ArgumentList	"""pfo: cannot open format file at '%s'\\n"""		965439	1					
ANR	966103	Argument	"""pfo: cannot open format file at '%s'\\n"""		965439	0					
ANR	966104	PrimaryExpression	"""pfo: cannot open format file at '%s'\\n"""		965439	0					
ANR	966105	Argument	path		965439	1					
ANR	966106	Identifier	path		965439	0					
ANR	966107	ExpressionStatement	free ( home )	1431:3:49514:49525	965439	7	True				
ANR	966108	CallExpression	free ( home )		965439	0					
ANR	966109	Callee	free		965439	0					
ANR	966110	Identifier	free		965439	0					
ANR	966111	ArgumentList	home		965439	1					
ANR	966112	Argument	home		965439	0					
ANR	966113	Identifier	home		965439	0					
ANR	966114	ExpressionStatement	free ( path )	1432:3:49530:49541	965439	8	True				
ANR	966115	CallExpression	free ( path )		965439	0					
ANR	966116	Callee	free		965439	0					
ANR	966117	Identifier	free		965439	0					
ANR	966118	ArgumentList	path		965439	1					
ANR	966119	Argument	path		965439	0					
ANR	966120	Identifier	path		965439	0					
ANR	966121	ExpressionStatement	free ( tmp )	1433:3:49546:49556	965439	9	True				
ANR	966122	CallExpression	free ( tmp )		965439	0					
ANR	966123	Callee	free		965439	0					
ANR	966124	Identifier	free		965439	0					
ANR	966125	ArgumentList	tmp		965439	1					
ANR	966126	Argument	tmp		965439	0					
ANR	966127	Identifier	tmp		965439	0					
ANR	966128	ElseStatement	else		965439	0					
ANR	966129	CompoundStatement		119:3:3168:3182	965439	0					
ANR	966130	IdentifierDeclStatement	RList * files ;	1435:3:49572:49584	965439	0	True				
ANR	966131	IdentifierDecl	* files		965439	0					
ANR	966132	IdentifierDeclType	RList *		965439	0					
ANR	966133	Identifier	files		965439	1					
ANR	966134	IdentifierDeclStatement	RListIter * iter ;	1436:3:49589:49604	965439	1	True				
ANR	966135	IdentifierDecl	* iter		965439	0					
ANR	966136	IdentifierDeclType	RListIter *		965439	0					
ANR	966137	Identifier	iter		965439	1					
ANR	966138	IdentifierDeclStatement	const char * fn ;	1437:3:49609:49623	965439	2	True				
ANR	966139	IdentifierDecl	* fn		965439	0					
ANR	966140	IdentifierDeclType	const char *		965439	0					
ANR	966141	Identifier	fn		965439	1					
ANR	966142	Statement	char	1438:3:49628:49631	965439	3	True				
ANR	966143	Statement	*	1438:8:49633:49633	965439	4	True				
ANR	966144	Statement	home	1438:9:49634:49637	965439	5	True				
ANR	966145	Statement	=	1438:14:49639:49639	965439	6	True				
ANR	966146	Statement	r_str_home	1438:16:49641:49650	965439	7	True				
ANR	966147	Statement	(	1438:27:49652:49652	965439	8	True				
ANR	966148	Statement	R2_HOME_SDB_FORMAT	1438:28:49653:49670	965439	9	True				
ANR	966149	Statement	R_SYS_DIR	1438:47:49672:49680	965439	10	True				
ANR	966150	Statement	)	1438:56:49681:49681	965439	11	True				
ANR	966151	ExpressionStatement		1438:57:49682:49682	965439	12	True				
ANR	966152	IfStatement	if ( home )		965439	13					
ANR	966153	Condition	home	1439:7:49691:49694	965439	0	True				
ANR	966154	Identifier	home		965439	0					
ANR	966155	CompoundStatement		121:13:3256:3256	965439	1					
ANR	966156	ExpressionStatement	files = r_sys_dir ( home )	1440:4:49703:49727	965439	0	True				
ANR	966157	AssignmentExpression	files = r_sys_dir ( home )		965439	0		=			
ANR	966158	Identifier	files		965439	0					
ANR	966159	CallExpression	r_sys_dir ( home )		965439	1					
ANR	966160	Callee	r_sys_dir		965439	0					
ANR	966161	Identifier	r_sys_dir		965439	0					
ANR	966162	ArgumentList	home		965439	1					
ANR	966163	Argument	home		965439	0					
ANR	966164	Identifier	home		965439	0					
ANR	966165	Statement	r_list_foreach	1441:4:49733:49746	965439	1	True				
ANR	966166	Statement	(	1441:19:49748:49748	965439	2	True				
ANR	966167	Statement	files	1441:20:49749:49753	965439	3	True				
ANR	966168	Statement	","	1441:25:49754:49754	965439	4	True				
ANR	966169	Statement	iter	1441:27:49756:49759	965439	5	True				
ANR	966170	Statement	","	1441:31:49760:49760	965439	6	True				
ANR	966171	Statement	fn	1441:33:49762:49763	965439	7	True				
ANR	966172	Statement	)	1441:35:49764:49764	965439	8	True				
ANR	966173	CompoundStatement		123:37:3325:3325	965439	9					
ANR	966174	IfStatement	if ( * fn && * fn != '.' )		965439	0					
ANR	966175	Condition	* fn && * fn != '.'	1442:9:49777:49793	965439	0	True				
ANR	966176	AndExpression	* fn && * fn != '.'		965439	0		&&			
ANR	966177	UnaryOperationExpression	* fn		965439	0					
ANR	966178	UnaryOperator	*		965439	0					
ANR	966179	Identifier	fn		965439	1					
ANR	966180	EqualityExpression	* fn != '.'		965439	1		!=			
ANR	966181	UnaryOperationExpression	* fn		965439	0					
ANR	966182	UnaryOperator	*		965439	0					
ANR	966183	Identifier	fn		965439	1					
ANR	966184	PrimaryExpression	'.'		965439	1					
ANR	966185	CompoundStatement		124:28:3355:3355	965439	1					
ANR	966186	ExpressionStatement	r_cons_println ( fn )	1443:6:49804:49823	965439	0	True				
ANR	966187	CallExpression	r_cons_println ( fn )		965439	0					
ANR	966188	Callee	r_cons_println		965439	0					
ANR	966189	Identifier	r_cons_println		965439	0					
ANR	966190	ArgumentList	fn		965439	1					
ANR	966191	Argument	fn		965439	0					
ANR	966192	Identifier	fn		965439	0					
ANR	966193	ExpressionStatement	r_list_free ( files )	1446:4:49842:49861	965439	10	True				
ANR	966194	CallExpression	r_list_free ( files )		965439	0					
ANR	966195	Callee	r_list_free		965439	0					
ANR	966196	Identifier	r_list_free		965439	0					
ANR	966197	ArgumentList	files		965439	1					
ANR	966198	Argument	files		965439	0					
ANR	966199	Identifier	files		965439	0					
ANR	966200	ExpressionStatement	free ( home )	1447:4:49867:49878	965439	11	True				
ANR	966201	CallExpression	free ( home )		965439	0					
ANR	966202	Callee	free		965439	0					
ANR	966203	Identifier	free		965439	0					
ANR	966204	ArgumentList	home		965439	1					
ANR	966205	Argument	home		965439	0					
ANR	966206	Identifier	home		965439	0					
ANR	966207	Statement	char	1449:3:49888:49891	965439	14	True				
ANR	966208	Statement	*	1449:8:49893:49893	965439	15	True				
ANR	966209	Statement	path	1449:9:49894:49897	965439	16	True				
ANR	966210	Statement	=	1449:14:49899:49899	965439	17	True				
ANR	966211	Statement	r_str_r2_prefix	1449:16:49901:49915	965439	18	True				
ANR	966212	Statement	(	1449:32:49917:49917	965439	19	True				
ANR	966213	Statement	R2_SDB_FORMAT	1449:33:49918:49930	965439	20	True				
ANR	966214	Statement	R_SYS_DIR	1449:47:49932:49940	965439	21	True				
ANR	966215	Statement	)	1449:56:49941:49941	965439	22	True				
ANR	966216	ExpressionStatement		1449:57:49942:49942	965439	23	True				
ANR	966217	IfStatement	if ( path )		965439	24					
ANR	966218	Condition	path	1450:7:49951:49954	965439	0	True				
ANR	966219	Identifier	path		965439	0					
ANR	966220	CompoundStatement		132:13:3516:3516	965439	1					
ANR	966221	ExpressionStatement	files = r_sys_dir ( path )	1451:4:49963:49987	965439	0	True				
ANR	966222	AssignmentExpression	files = r_sys_dir ( path )		965439	0		=			
ANR	966223	Identifier	files		965439	0					
ANR	966224	CallExpression	r_sys_dir ( path )		965439	1					
ANR	966225	Callee	r_sys_dir		965439	0					
ANR	966226	Identifier	r_sys_dir		965439	0					
ANR	966227	ArgumentList	path		965439	1					
ANR	966228	Argument	path		965439	0					
ANR	966229	Identifier	path		965439	0					
ANR	966230	Statement	r_list_foreach	1452:4:49993:50006	965439	1	True				
ANR	966231	Statement	(	1452:19:50008:50008	965439	2	True				
ANR	966232	Statement	files	1452:20:50009:50013	965439	3	True				
ANR	966233	Statement	","	1452:25:50014:50014	965439	4	True				
ANR	966234	Statement	iter	1452:27:50016:50019	965439	5	True				
ANR	966235	Statement	","	1452:31:50020:50020	965439	6	True				
ANR	966236	Statement	fn	1452:33:50022:50023	965439	7	True				
ANR	966237	Statement	)	1452:35:50024:50024	965439	8	True				
ANR	966238	CompoundStatement		134:37:3585:3585	965439	9					
ANR	966239	IfStatement	if ( * fn && * fn != '.' )		965439	0					
ANR	966240	Condition	* fn && * fn != '.'	1453:9:50037:50053	965439	0	True				
ANR	966241	AndExpression	* fn && * fn != '.'		965439	0		&&			
ANR	966242	UnaryOperationExpression	* fn		965439	0					
ANR	966243	UnaryOperator	*		965439	0					
ANR	966244	Identifier	fn		965439	1					
ANR	966245	EqualityExpression	* fn != '.'		965439	1		!=			
ANR	966246	UnaryOperationExpression	* fn		965439	0					
ANR	966247	UnaryOperator	*		965439	0					
ANR	966248	Identifier	fn		965439	1					
ANR	966249	PrimaryExpression	'.'		965439	1					
ANR	966250	CompoundStatement		135:28:3615:3615	965439	1					
ANR	966251	ExpressionStatement	r_cons_println ( fn )	1454:6:50064:50083	965439	0	True				
ANR	966252	CallExpression	r_cons_println ( fn )		965439	0					
ANR	966253	Callee	r_cons_println		965439	0					
ANR	966254	Identifier	r_cons_println		965439	0					
ANR	966255	ArgumentList	fn		965439	1					
ANR	966256	Argument	fn		965439	0					
ANR	966257	Identifier	fn		965439	0					
ANR	966258	ExpressionStatement	r_list_free ( files )	1457:4:50102:50121	965439	10	True				
ANR	966259	CallExpression	r_list_free ( files )		965439	0					
ANR	966260	Callee	r_list_free		965439	0					
ANR	966261	Identifier	r_list_free		965439	0					
ANR	966262	ArgumentList	files		965439	1					
ANR	966263	Argument	files		965439	0					
ANR	966264	Identifier	files		965439	0					
ANR	966265	ExpressionStatement	free ( path )	1458:4:50127:50138	965439	11	True				
ANR	966266	CallExpression	free ( path )		965439	0					
ANR	966267	Callee	free		965439	0					
ANR	966268	Identifier	free		965439	0					
ANR	966269	ArgumentList	path		965439	1					
ANR	966270	Argument	path		965439	0					
ANR	966271	Identifier	path		965439	0					
ANR	966272	ExpressionStatement	free ( input )	1461:2:50151:50163	965439	32	True				
ANR	966273	CallExpression	free ( input )		965439	0					
ANR	966274	Callee	free		965439	0					
ANR	966275	Identifier	free		965439	0					
ANR	966276	ArgumentList	input		965439	1					
ANR	966277	Argument	input		965439	0					
ANR	966278	Identifier	input		965439	0					
ANR	966279	ReturnStatement	return ;	1462:2:50167:50173	965439	33	True				
ANR	966280	ExpressionStatement	input = strdup ( _input )	1465:1:50190:50213	965439	3	True				
ANR	966281	AssignmentExpression	input = strdup ( _input )		965439	0		=			
ANR	966282	Identifier	input		965439	0					
ANR	966283	CallExpression	strdup ( _input )		965439	1					
ANR	966284	Callee	strdup		965439	0					
ANR	966285	Identifier	strdup		965439	0					
ANR	966286	ArgumentList	_input		965439	1					
ANR	966287	Argument	_input		965439	0					
ANR	966288	Identifier	_input		965439	0					
ANR	966289	IfStatement	if ( input [ 1 ] == ' ' )		965439	4					
ANR	966290	Condition	input [ 1 ] == ' '	1467:5:50283:50297	965439	0	True				
ANR	966291	EqualityExpression	input [ 1 ] == ' '		965439	0		==			
ANR	966292	ArrayIndexing	input [ 1 ]		965439	0					
ANR	966293	Identifier	input		965439	0					
ANR	966294	PrimaryExpression	1		965439	1					
ANR	966295	PrimaryExpression	' '		965439	1					
ANR	966296	CompoundStatement		150:2:3863:3897	965439	1					
ANR	966297	IdentifierDeclStatement	"char * eq = strchr ( input + 2 , '=' ) ;"	1468:2:50304:50338	965439	0	True				
ANR	966298	IdentifierDecl	"* eq = strchr ( input + 2 , '=' )"		965439	0					
ANR	966299	IdentifierDeclType	char *		965439	0					
ANR	966300	Identifier	eq		965439	1					
ANR	966301	AssignmentExpression	"* eq = strchr ( input + 2 , '=' )"		965439	2		=			
ANR	966302	Identifier	eq		965439	0					
ANR	966303	CallExpression	"strchr ( input + 2 , '=' )"		965439	1					
ANR	966304	Callee	strchr		965439	0					
ANR	966305	Identifier	strchr		965439	0					
ANR	966306	ArgumentList	input + 2		965439	1					
ANR	966307	Argument	input + 2		965439	0					
ANR	966308	AdditiveExpression	input + 2		965439	0		+			
ANR	966309	Identifier	input		965439	0					
ANR	966310	PrimaryExpression	2		965439	1					
ANR	966311	Argument	'='		965439	1					
ANR	966312	PrimaryExpression	'='		965439	0					
ANR	966313	IfStatement	if ( eq )		965439	1					
ANR	966314	Condition	eq	1469:6:50346:50347	965439	0	True				
ANR	966315	Identifier	eq		965439	0					
ANR	966316	CompoundStatement		151:10:3909:3909	965439	1					
ANR	966317	ExpressionStatement	input [ 1 ] = '.'	1470:3:50355:50369	965439	0	True				
ANR	966318	AssignmentExpression	input [ 1 ] = '.'		965439	0		=			
ANR	966319	ArrayIndexing	input [ 1 ]		965439	0					
ANR	966320	Identifier	input		965439	0					
ANR	966321	PrimaryExpression	1		965439	1					
ANR	966322	PrimaryExpression	'.'		965439	1					
ANR	966323	ExpressionStatement	* eq = ' '	1471:3:50374:50383	965439	1	True				
ANR	966324	AssignmentExpression	* eq = ' '		965439	0		=			
ANR	966325	UnaryOperationExpression	* eq		965439	0					
ANR	966326	UnaryOperator	*		965439	0					
ANR	966327	Identifier	eq		965439	1					
ANR	966328	PrimaryExpression	' '		965439	1					
ANR	966329	IdentifierDeclStatement	int listFormats = 0 ;	1475:1:50394:50413	965439	5	True				
ANR	966330	IdentifierDecl	listFormats = 0		965439	0					
ANR	966331	IdentifierDeclType	int		965439	0					
ANR	966332	Identifier	listFormats		965439	1					
ANR	966333	AssignmentExpression	listFormats = 0		965439	2		=			
ANR	966334	Identifier	listFormats		965439	0					
ANR	966335	PrimaryExpression	0		965439	1					
ANR	966336	IfStatement	if ( input [ 1 ] == '.' )		965439	6					
ANR	966337	Condition	input [ 1 ] == '.'	1476:5:50420:50434	965439	0	True				
ANR	966338	EqualityExpression	input [ 1 ] == '.'		965439	0		==			
ANR	966339	ArrayIndexing	input [ 1 ]		965439	0					
ANR	966340	Identifier	input		965439	0					
ANR	966341	PrimaryExpression	1		965439	1					
ANR	966342	PrimaryExpression	'.'		965439	1					
ANR	966343	CompoundStatement		158:22:3996:3996	965439	1					
ANR	966344	ExpressionStatement	listFormats = 1	1477:2:50441:50456	965439	0	True				
ANR	966345	AssignmentExpression	listFormats = 1		965439	0		=			
ANR	966346	Identifier	listFormats		965439	0					
ANR	966347	PrimaryExpression	1		965439	1					
ANR	966348	IfStatement	"if ( ! strcmp ( input , ""*"" ) && mode == R_PRINT_SEEFLAGS )"		965439	7					
ANR	966349	Condition	"! strcmp ( input , ""*"" ) && mode == R_PRINT_SEEFLAGS"	1479:5:50466:50513	965439	0	True				
ANR	966350	AndExpression	"! strcmp ( input , ""*"" ) && mode == R_PRINT_SEEFLAGS"		965439	0		&&			
ANR	966351	UnaryOperationExpression	"! strcmp ( input , ""*"" )"		965439	0					
ANR	966352	UnaryOperator	!		965439	0					
ANR	966353	CallExpression	"strcmp ( input , ""*"" )"		965439	1					
ANR	966354	Callee	strcmp		965439	0					
ANR	966355	Identifier	strcmp		965439	0					
ANR	966356	ArgumentList	input		965439	1					
ANR	966357	Argument	input		965439	0					
ANR	966358	Identifier	input		965439	0					
ANR	966359	Argument	"""*"""		965439	1					
ANR	966360	PrimaryExpression	"""*"""		965439	0					
ANR	966361	EqualityExpression	mode == R_PRINT_SEEFLAGS		965439	1		==			
ANR	966362	Identifier	mode		965439	0					
ANR	966363	Identifier	R_PRINT_SEEFLAGS		965439	1					
ANR	966364	CompoundStatement		161:55:4075:4075	965439	1					
ANR	966365	ExpressionStatement	listFormats = 1	1480:2:50520:50535	965439	0	True				
ANR	966366	AssignmentExpression	listFormats = 1		965439	0		=			
ANR	966367	Identifier	listFormats		965439	0					
ANR	966368	PrimaryExpression	1		965439	1					
ANR	966369	ExpressionStatement	core -> print -> reg = core -> dbg -> reg	1483:1:50542:50575	965439	8	True				
ANR	966370	AssignmentExpression	core -> print -> reg = core -> dbg -> reg		965439	0		=			
ANR	966371	PtrMemberAccess	core -> print -> reg		965439	0					
ANR	966372	PtrMemberAccess	core -> print		965439	0					
ANR	966373	Identifier	core		965439	0					
ANR	966374	Identifier	print		965439	1					
ANR	966375	Identifier	reg		965439	1					
ANR	966376	PtrMemberAccess	core -> dbg -> reg		965439	1					
ANR	966377	PtrMemberAccess	core -> dbg		965439	0					
ANR	966378	Identifier	core		965439	0					
ANR	966379	Identifier	dbg		965439	1					
ANR	966380	Identifier	reg		965439	1					
ANR	966381	ExpressionStatement	core -> print -> get_register = r_reg_get	1484:1:50578:50615	965439	9	True				
ANR	966382	AssignmentExpression	core -> print -> get_register = r_reg_get		965439	0		=			
ANR	966383	PtrMemberAccess	core -> print -> get_register		965439	0					
ANR	966384	PtrMemberAccess	core -> print		965439	0					
ANR	966385	Identifier	core		965439	0					
ANR	966386	Identifier	print		965439	1					
ANR	966387	Identifier	get_register		965439	1					
ANR	966388	Identifier	r_reg_get		965439	1					
ANR	966389	ExpressionStatement	core -> print -> get_register_value = r_reg_get_value	1485:1:50618:50667	965439	10	True				
ANR	966390	AssignmentExpression	core -> print -> get_register_value = r_reg_get_value		965439	0		=			
ANR	966391	PtrMemberAccess	core -> print -> get_register_value		965439	0					
ANR	966392	PtrMemberAccess	core -> print		965439	0					
ANR	966393	Identifier	core		965439	0					
ANR	966394	Identifier	print		965439	1					
ANR	966395	Identifier	get_register_value		965439	1					
ANR	966396	Identifier	r_reg_get_value		965439	1					
ANR	966397	IdentifierDeclStatement	int o_blocksize = core -> blocksize ;	1487:1:50671:50704	965439	11	True				
ANR	966398	IdentifierDecl	o_blocksize = core -> blocksize		965439	0					
ANR	966399	IdentifierDeclType	int		965439	0					
ANR	966400	Identifier	o_blocksize		965439	1					
ANR	966401	AssignmentExpression	o_blocksize = core -> blocksize		965439	2		=			
ANR	966402	Identifier	o_blocksize		965439	0					
ANR	966403	PtrMemberAccess	core -> blocksize		965439	1					
ANR	966404	Identifier	core		965439	0					
ANR	966405	Identifier	blocksize		965439	1					
ANR	966406	IfStatement	if ( listFormats )		965439	12					
ANR	966407	Condition	listFormats	1489:5:50712:50722	965439	0	True				
ANR	966408	Identifier	listFormats		965439	0					
ANR	966409	CompoundStatement		171:18:4284:4284	965439	1					
ANR	966410	ExpressionStatement	core -> print -> num = core -> num	1490:2:50729:50757	965439	0	True				
ANR	966411	AssignmentExpression	core -> print -> num = core -> num		965439	0		=			
ANR	966412	PtrMemberAccess	core -> print -> num		965439	0					
ANR	966413	PtrMemberAccess	core -> print		965439	0					
ANR	966414	Identifier	core		965439	0					
ANR	966415	Identifier	print		965439	1					
ANR	966416	Identifier	num		965439	1					
ANR	966417	PtrMemberAccess	core -> num		965439	1					
ANR	966418	Identifier	core		965439	0					
ANR	966419	Identifier	num		965439	1					
ANR	966420	IfStatement	if ( ! input [ 1 ] || ! input [ 2 ] )		965439	1					
ANR	966421	Condition	! input [ 1 ] || ! input [ 2 ]	1492:6:50797:50818	965439	0	True				
ANR	966422	OrExpression	! input [ 1 ] || ! input [ 2 ]		965439	0		||			
ANR	966423	UnaryOperationExpression	! input [ 1 ]		965439	0					
ANR	966424	UnaryOperator	!		965439	0					
ANR	966425	ArrayIndexing	input [ 1 ]		965439	1					
ANR	966426	Identifier	input		965439	0					
ANR	966427	PrimaryExpression	1		965439	1					
ANR	966428	UnaryOperationExpression	! input [ 2 ]		965439	1					
ANR	966429	UnaryOperator	!		965439	0					
ANR	966430	ArrayIndexing	input [ 2 ]		965439	1					
ANR	966431	Identifier	input		965439	0					
ANR	966432	PrimaryExpression	2		965439	1					
ANR	966433	CompoundStatement		177:3:4421:4483	965439	1					
ANR	966434	IdentifierDeclStatement	SdbListIter * iter ;	1493:3:50826:50843	965439	0	True				
ANR	966435	IdentifierDecl	* iter		965439	0					
ANR	966436	IdentifierDeclType	SdbListIter *		965439	0					
ANR	966437	Identifier	iter		965439	1					
ANR	966438	IdentifierDeclStatement	SdbKv * kv ;	1494:3:50848:50857	965439	1	True				
ANR	966439	IdentifierDecl	* kv		965439	0					
ANR	966440	IdentifierDeclType	SdbKv *		965439	0					
ANR	966441	Identifier	kv		965439	1					
ANR	966442	IdentifierDeclStatement	"SdbList * sdbls = sdb_foreach_list ( core -> print -> formats , true ) ;"	1495:3:50862:50924	965439	2	True				
ANR	966443	IdentifierDecl	"* sdbls = sdb_foreach_list ( core -> print -> formats , true )"		965439	0					
ANR	966444	IdentifierDeclType	SdbList *		965439	0					
ANR	966445	Identifier	sdbls		965439	1					
ANR	966446	AssignmentExpression	"* sdbls = sdb_foreach_list ( core -> print -> formats , true )"		965439	2		=			
ANR	966447	Identifier	sdbls		965439	0					
ANR	966448	CallExpression	"sdb_foreach_list ( core -> print -> formats , true )"		965439	1					
ANR	966449	Callee	sdb_foreach_list		965439	0					
ANR	966450	Identifier	sdb_foreach_list		965439	0					
ANR	966451	ArgumentList	core -> print -> formats		965439	1					
ANR	966452	Argument	core -> print -> formats		965439	0					
ANR	966453	PtrMemberAccess	core -> print -> formats		965439	0					
ANR	966454	PtrMemberAccess	core -> print		965439	0					
ANR	966455	Identifier	core		965439	0					
ANR	966456	Identifier	print		965439	1					
ANR	966457	Identifier	formats		965439	1					
ANR	966458	Argument	true		965439	1					
ANR	966459	Identifier	true		965439	0					
ANR	966460	Statement	ls_foreach	1496:3:50929:50938	965439	3	True				
ANR	966461	Statement	(	1496:14:50940:50940	965439	4	True				
ANR	966462	Statement	sdbls	1496:15:50941:50945	965439	5	True				
ANR	966463	Statement	","	1496:20:50946:50946	965439	6	True				
ANR	966464	Statement	iter	1496:22:50948:50951	965439	7	True				
ANR	966465	Statement	","	1496:26:50952:50952	965439	8	True				
ANR	966466	Statement	kv	1496:28:50954:50955	965439	9	True				
ANR	966467	Statement	)	1496:30:50956:50956	965439	10	True				
ANR	966468	CompoundStatement		178:32:4517:4517	965439	11					
ANR	966469	ExpressionStatement	"r_cons_printf ( ""pf.%s %s\\n"" , sdbkv_key ( kv ) , sdbkv_value ( kv ) )"	1497:4:50964:51026	965439	0	True				
ANR	966470	CallExpression	"r_cons_printf ( ""pf.%s %s\\n"" , sdbkv_key ( kv ) , sdbkv_value ( kv ) )"		965439	0					
ANR	966471	Callee	r_cons_printf		965439	0					
ANR	966472	Identifier	r_cons_printf		965439	0					
ANR	966473	ArgumentList	"""pf.%s %s\\n"""		965439	1					
ANR	966474	Argument	"""pf.%s %s\\n"""		965439	0					
ANR	966475	PrimaryExpression	"""pf.%s %s\\n"""		965439	0					
ANR	966476	Argument	sdbkv_key ( kv )		965439	1					
ANR	966477	CallExpression	sdbkv_key ( kv )		965439	0					
ANR	966478	Callee	sdbkv_key		965439	0					
ANR	966479	Identifier	sdbkv_key		965439	0					
ANR	966480	ArgumentList	kv		965439	1					
ANR	966481	Argument	kv		965439	0					
ANR	966482	Identifier	kv		965439	0					
ANR	966483	Argument	sdbkv_value ( kv )		965439	2					
ANR	966484	CallExpression	sdbkv_value ( kv )		965439	0					
ANR	966485	Callee	sdbkv_value		965439	0					
ANR	966486	Identifier	sdbkv_value		965439	0					
ANR	966487	ArgumentList	kv		965439	1					
ANR	966488	Argument	kv		965439	0					
ANR	966489	Identifier	kv		965439	0					
ANR	966490	ElseStatement	else		965439	0					
ANR	966491	IfStatement	if ( input [ 1 ] && input [ 2 ] == '-' )		965439	0					
ANR	966492	Condition	input [ 1 ] && input [ 2 ] == '-'	1500:13:51071:51097	965439	0	True				
ANR	966493	AndExpression	input [ 1 ] && input [ 2 ] == '-'		965439	0		&&			
ANR	966494	ArrayIndexing	input [ 1 ]		965439	0					
ANR	966495	Identifier	input		965439	0					
ANR	966496	PrimaryExpression	1		965439	1					
ANR	966497	EqualityExpression	input [ 2 ] == '-'		965439	1		==			
ANR	966498	ArrayIndexing	input [ 2 ]		965439	0					
ANR	966499	Identifier	input		965439	0					
ANR	966500	PrimaryExpression	2		965439	1					
ANR	966501	PrimaryExpression	'-'		965439	1					
ANR	966502	CompoundStatement		182:42:4659:4659	965439	1					
ANR	966503	IfStatement	if ( input [ 3 ] == '*' )		965439	0					
ANR	966504	Condition	input [ 3 ] == '*'	1501:7:51109:51123	965439	0	True				
ANR	966505	EqualityExpression	input [ 3 ] == '*'		965439	0		==			
ANR	966506	ArrayIndexing	input [ 3 ]		965439	0					
ANR	966507	Identifier	input		965439	0					
ANR	966508	PrimaryExpression	3		965439	1					
ANR	966509	PrimaryExpression	'*'		965439	1					
ANR	966510	CompoundStatement		183:24:4685:4685	965439	1					
ANR	966511	ExpressionStatement	sdb_free ( core -> print -> formats )	1502:4:51132:51163	965439	0	True				
ANR	966512	CallExpression	sdb_free ( core -> print -> formats )		965439	0					
ANR	966513	Callee	sdb_free		965439	0					
ANR	966514	Identifier	sdb_free		965439	0					
ANR	966515	ArgumentList	core -> print -> formats		965439	1					
ANR	966516	Argument	core -> print -> formats		965439	0					
ANR	966517	PtrMemberAccess	core -> print -> formats		965439	0					
ANR	966518	PtrMemberAccess	core -> print		965439	0					
ANR	966519	Identifier	core		965439	0					
ANR	966520	Identifier	print		965439	1					
ANR	966521	Identifier	formats		965439	1					
ANR	966522	ExpressionStatement	core -> print -> formats = sdb_new0 ( )	1503:4:51169:51203	965439	1	True				
ANR	966523	AssignmentExpression	core -> print -> formats = sdb_new0 ( )		965439	0		=			
ANR	966524	PtrMemberAccess	core -> print -> formats		965439	0					
ANR	966525	PtrMemberAccess	core -> print		965439	0					
ANR	966526	Identifier	core		965439	0					
ANR	966527	Identifier	print		965439	1					
ANR	966528	Identifier	formats		965439	1					
ANR	966529	CallExpression	sdb_new0 ( )		965439	1					
ANR	966530	Callee	sdb_new0		965439	0					
ANR	966531	Identifier	sdb_new0		965439	0					
ANR	966532	ArgumentList			965439	1					
ANR	966533	ElseStatement	else		965439	0					
ANR	966534	CompoundStatement		186:10:4774:4774	965439	0					
ANR	966535	ExpressionStatement	"sdb_unset ( core -> print -> formats , input + 3 , 0 )"	1505:4:51221:51267	965439	0	True				
ANR	966536	CallExpression	"sdb_unset ( core -> print -> formats , input + 3 , 0 )"		965439	0					
ANR	966537	Callee	sdb_unset		965439	0					
ANR	966538	Identifier	sdb_unset		965439	0					
ANR	966539	ArgumentList	core -> print -> formats		965439	1					
ANR	966540	Argument	core -> print -> formats		965439	0					
ANR	966541	PtrMemberAccess	core -> print -> formats		965439	0					
ANR	966542	PtrMemberAccess	core -> print		965439	0					
ANR	966543	Identifier	core		965439	0					
ANR	966544	Identifier	print		965439	1					
ANR	966545	Identifier	formats		965439	1					
ANR	966546	Argument	input + 3		965439	1					
ANR	966547	AdditiveExpression	input + 3		965439	0		+			
ANR	966548	Identifier	input		965439	0					
ANR	966549	PrimaryExpression	3		965439	1					
ANR	966550	Argument	0		965439	2					
ANR	966551	PrimaryExpression	0		965439	0					
ANR	966552	ElseStatement	else		965439	0					
ANR	966553	CompoundStatement		234:3:5987:6009	965439	0					
ANR	966554	IdentifierDeclStatement	char * name = strdup ( input + ( input [ 1 ] ? 2 : 1 ) ) ;	1508:3:51288:51334	965439	0	True				
ANR	966555	IdentifierDecl	* name = strdup ( input + ( input [ 1 ] ? 2 : 1 ) )		965439	0					
ANR	966556	IdentifierDeclType	char *		965439	0					
ANR	966557	Identifier	name		965439	1					
ANR	966558	AssignmentExpression	* name = strdup ( input + ( input [ 1 ] ? 2 : 1 ) )		965439	2		=			
ANR	966559	Identifier	name		965439	0					
ANR	966560	CallExpression	strdup ( input + ( input [ 1 ] ? 2 : 1 ) )		965439	1					
ANR	966561	Callee	strdup		965439	0					
ANR	966562	Identifier	strdup		965439	0					
ANR	966563	ArgumentList	input + ( input [ 1 ] ? 2 : 1 )		965439	1					
ANR	966564	Argument	input + ( input [ 1 ] ? 2 : 1 )		965439	0					
ANR	966565	AdditiveExpression	input + ( input [ 1 ] ? 2 : 1 )		965439	0		+			
ANR	966566	Identifier	input		965439	0					
ANR	966567	ConditionalExpression	input [ 1 ] ? 2 : 1		965439	1					
ANR	966568	Condition	input [ 1 ]		965439	0					
ANR	966569	ArrayIndexing	input [ 1 ]		965439	0					
ANR	966570	Identifier	input		965439	0					
ANR	966571	PrimaryExpression	1		965439	1					
ANR	966572	PrimaryExpression	2		965439	1					
ANR	966573	PrimaryExpression	1		965439	2					
ANR	966574	IdentifierDeclStatement	"char * space = strchr ( name , ' ' ) ;"	1509:3:51339:51371	965439	1	True				
ANR	966575	IdentifierDecl	"* space = strchr ( name , ' ' )"		965439	0					
ANR	966576	IdentifierDeclType	char *		965439	0					
ANR	966577	Identifier	space		965439	1					
ANR	966578	AssignmentExpression	"* space = strchr ( name , ' ' )"		965439	2		=			
ANR	966579	Identifier	space		965439	0					
ANR	966580	CallExpression	"strchr ( name , ' ' )"		965439	1					
ANR	966581	Callee	strchr		965439	0					
ANR	966582	Identifier	strchr		965439	0					
ANR	966583	ArgumentList	name		965439	1					
ANR	966584	Argument	name		965439	0					
ANR	966585	Identifier	name		965439	0					
ANR	966586	Argument	' '		965439	1					
ANR	966587	PrimaryExpression	' '		965439	0					
ANR	966588	IdentifierDeclStatement	"char * eq = strchr ( name , '=' ) ;"	1510:3:51376:51405	965439	2	True				
ANR	966589	IdentifierDecl	"* eq = strchr ( name , '=' )"		965439	0					
ANR	966590	IdentifierDeclType	char *		965439	0					
ANR	966591	Identifier	eq		965439	1					
ANR	966592	AssignmentExpression	"* eq = strchr ( name , '=' )"		965439	2		=			
ANR	966593	Identifier	eq		965439	0					
ANR	966594	CallExpression	"strchr ( name , '=' )"		965439	1					
ANR	966595	Callee	strchr		965439	0					
ANR	966596	Identifier	strchr		965439	0					
ANR	966597	ArgumentList	name		965439	1					
ANR	966598	Argument	name		965439	0					
ANR	966599	Identifier	name		965439	0					
ANR	966600	Argument	'='		965439	1					
ANR	966601	PrimaryExpression	'='		965439	0					
ANR	966602	IdentifierDeclStatement	"char * dot = strchr ( name , '.' ) ;"	1511:3:51410:51440	965439	3	True				
ANR	966603	IdentifierDecl	"* dot = strchr ( name , '.' )"		965439	0					
ANR	966604	IdentifierDeclType	char *		965439	0					
ANR	966605	Identifier	dot		965439	1					
ANR	966606	AssignmentExpression	"* dot = strchr ( name , '.' )"		965439	2		=			
ANR	966607	Identifier	dot		965439	0					
ANR	966608	CallExpression	"strchr ( name , '.' )"		965439	1					
ANR	966609	Callee	strchr		965439	0					
ANR	966610	Identifier	strchr		965439	0					
ANR	966611	ArgumentList	name		965439	1					
ANR	966612	Argument	name		965439	0					
ANR	966613	Identifier	name		965439	0					
ANR	966614	Argument	'.'		965439	1					
ANR	966615	PrimaryExpression	'.'		965439	0					
ANR	966616	IfStatement	if ( eq && ! dot )		965439	4					
ANR	966617	Condition	eq && ! dot	1513:7:51450:51459	965439	0	True				
ANR	966618	AndExpression	eq && ! dot		965439	0		&&			
ANR	966619	Identifier	eq		965439	0					
ANR	966620	UnaryOperationExpression	! dot		965439	1					
ANR	966621	UnaryOperator	!		965439	0					
ANR	966622	Identifier	dot		965439	1					
ANR	966623	CompoundStatement		195:19:5021:5021	965439	1					
ANR	966624	ExpressionStatement	* eq = ' '	1514:4:51468:51477	965439	0	True				
ANR	966625	AssignmentExpression	* eq = ' '		965439	0		=			
ANR	966626	UnaryOperationExpression	* eq		965439	0					
ANR	966627	UnaryOperator	*		965439	0					
ANR	966628	Identifier	eq		965439	1					
ANR	966629	PrimaryExpression	' '		965439	1					
ANR	966630	ExpressionStatement	space = eq	1515:4:51483:51493	965439	1	True				
ANR	966631	AssignmentExpression	space = eq		965439	0		=			
ANR	966632	Identifier	space		965439	0					
ANR	966633	Identifier	eq		965439	1					
ANR	966634	ExpressionStatement	eq = NULL	1516:4:51499:51508	965439	2	True				
ANR	966635	AssignmentExpression	eq = NULL		965439	0		=			
ANR	966636	Identifier	eq		965439	0					
ANR	966637	Identifier	NULL		965439	1					
ANR	966638	IfStatement	if ( space && ( ! eq || space < eq ) )		965439	5					
ANR	966639	Condition	space && ( ! eq || space < eq )	1520:7:51551:51578	965439	0	True				
ANR	966640	AndExpression	space && ( ! eq || space < eq )		965439	0		&&			
ANR	966641	Identifier	space		965439	0					
ANR	966642	OrExpression	! eq || space < eq		965439	1		||			
ANR	966643	UnaryOperationExpression	! eq		965439	0					
ANR	966644	UnaryOperator	!		965439	0					
ANR	966645	Identifier	eq		965439	1					
ANR	966646	RelationalExpression	space < eq		965439	1		<			
ANR	966647	Identifier	space		965439	0					
ANR	966648	Identifier	eq		965439	1					
ANR	966649	CompoundStatement		202:37:5140:5140	965439	1					
ANR	966650	ExpressionStatement	* space ++ = 0	1522:4:51615:51627	965439	0	True				
ANR	966651	AssignmentExpression	* space ++ = 0		965439	0		=			
ANR	966652	UnaryOperationExpression	* space ++		965439	0					
ANR	966653	UnaryOperator	*		965439	0					
ANR	966654	PostIncDecOperationExpression	space ++		965439	1					
ANR	966655	Identifier	space		965439	0					
ANR	966656	IncDec	++		965439	1					
ANR	966657	PrimaryExpression	0		965439	1					
ANR	966658	IfStatement	"if ( strchr ( name , '.' ) )"		965439	1					
ANR	966659	Condition	"strchr ( name , '.' )"	1524:8:51674:51691	965439	0	True				
ANR	966660	CallExpression	"strchr ( name , '.' )"		965439	0					
ANR	966661	Callee	strchr		965439	0					
ANR	966662	Identifier	strchr		965439	0					
ANR	966663	ArgumentList	name		965439	1					
ANR	966664	Argument	name		965439	0					
ANR	966665	Identifier	name		965439	0					
ANR	966666	Argument	'.'		965439	1					
ANR	966667	PrimaryExpression	'.'		965439	0					
ANR	966668	CompoundStatement		206:28:5253:5253	965439	1					
ANR	966669	ExpressionStatement	"eprintf ( ""Struct or fields name can not contain dot symbol (.)\\n"" )"	1525:5:51798:51864	965439	0	True				
ANR	966670	CallExpression	"eprintf ( ""Struct or fields name can not contain dot symbol (.)\\n"" )"		965439	0					
ANR	966671	Callee	eprintf		965439	0					
ANR	966672	Identifier	eprintf		965439	0					
ANR	966673	ArgumentList	"""Struct or fields name can not contain dot symbol (.)\\n"""		965439	1					
ANR	966674	Argument	"""Struct or fields name can not contain dot symbol (.)\\n"""		965439	0					
ANR	966675	PrimaryExpression	"""Struct or fields name can not contain dot symbol (.)\\n"""		965439	0					
ANR	966676	ElseStatement	else		965439	0					
ANR	966677	CompoundStatement		208:11:5436:5436	965439	0					
ANR	966678	ExpressionStatement	"sdb_set ( core -> print -> formats , name , space , 0 )"	1527:5:51884:51930	965439	0	True				
ANR	966679	CallExpression	"sdb_set ( core -> print -> formats , name , space , 0 )"		965439	0					
ANR	966680	Callee	sdb_set		965439	0					
ANR	966681	Identifier	sdb_set		965439	0					
ANR	966682	ArgumentList	core -> print -> formats		965439	1					
ANR	966683	Argument	core -> print -> formats		965439	0					
ANR	966684	PtrMemberAccess	core -> print -> formats		965439	0					
ANR	966685	PtrMemberAccess	core -> print		965439	0					
ANR	966686	Identifier	core		965439	0					
ANR	966687	Identifier	print		965439	1					
ANR	966688	Identifier	formats		965439	1					
ANR	966689	Argument	name		965439	1					
ANR	966690	Identifier	name		965439	0					
ANR	966691	Argument	space		965439	2					
ANR	966692	Identifier	space		965439	0					
ANR	966693	Argument	0		965439	3					
ANR	966694	PrimaryExpression	0		965439	0					
ANR	966695	ExpressionStatement	free ( name )	1529:4:51942:51953	965439	2	True				
ANR	966696	CallExpression	free ( name )		965439	0					
ANR	966697	Callee	free		965439	0					
ANR	966698	Identifier	free		965439	0					
ANR	966699	ArgumentList	name		965439	1					
ANR	966700	Argument	name		965439	0					
ANR	966701	Identifier	name		965439	0					
ANR	966702	ExpressionStatement	free ( input )	1530:4:51959:51971	965439	3	True				
ANR	966703	CallExpression	free ( input )		965439	0					
ANR	966704	Callee	free		965439	0					
ANR	966705	Identifier	free		965439	0					
ANR	966706	ArgumentList	input		965439	1					
ANR	966707	Argument	input		965439	0					
ANR	966708	Identifier	input		965439	0					
ANR	966709	ReturnStatement	return ;	1531:4:51977:51983	965439	4	True				
ANR	966710	IfStatement	"if ( ! strchr ( name , '.' ) && ! sdb_get ( core -> print -> formats , name , NULL ) )"		965439	6					
ANR	966711	Condition	"! strchr ( name , '.' ) && ! sdb_get ( core -> print -> formats , name , NULL )"	1534:7:51998:52066	965439	0	True				
ANR	966712	AndExpression	"! strchr ( name , '.' ) && ! sdb_get ( core -> print -> formats , name , NULL )"		965439	0		&&			
ANR	966713	UnaryOperationExpression	"! strchr ( name , '.' )"		965439	0					
ANR	966714	UnaryOperator	!		965439	0					
ANR	966715	CallExpression	"strchr ( name , '.' )"		965439	1					
ANR	966716	Callee	strchr		965439	0					
ANR	966717	Identifier	strchr		965439	0					
ANR	966718	ArgumentList	name		965439	1					
ANR	966719	Argument	name		965439	0					
ANR	966720	Identifier	name		965439	0					
ANR	966721	Argument	'.'		965439	1					
ANR	966722	PrimaryExpression	'.'		965439	0					
ANR	966723	UnaryOperationExpression	"! sdb_get ( core -> print -> formats , name , NULL )"		965439	1					
ANR	966724	UnaryOperator	!		965439	0					
ANR	966725	CallExpression	"sdb_get ( core -> print -> formats , name , NULL )"		965439	1					
ANR	966726	Callee	sdb_get		965439	0					
ANR	966727	Identifier	sdb_get		965439	0					
ANR	966728	ArgumentList	core -> print -> formats		965439	1					
ANR	966729	Argument	core -> print -> formats		965439	0					
ANR	966730	PtrMemberAccess	core -> print -> formats		965439	0					
ANR	966731	PtrMemberAccess	core -> print		965439	0					
ANR	966732	Identifier	core		965439	0					
ANR	966733	Identifier	print		965439	1					
ANR	966734	Identifier	formats		965439	1					
ANR	966735	Argument	name		965439	1					
ANR	966736	Identifier	name		965439	0					
ANR	966737	Argument	NULL		965439	2					
ANR	966738	Identifier	NULL		965439	0					
ANR	966739	CompoundStatement		217:48:5628:5628	965439	1					
ANR	966740	ExpressionStatement	"eprintf ( ""Cannot find '%s' format.\\n"" , name )"	1536:4:52075:52119	965439	0	True				
ANR	966741	CallExpression	"eprintf ( ""Cannot find '%s' format.\\n"" , name )"		965439	0					
ANR	966742	Callee	eprintf		965439	0					
ANR	966743	Identifier	eprintf		965439	0					
ANR	966744	ArgumentList	"""Cannot find '%s' format.\\n"""		965439	1					
ANR	966745	Argument	"""Cannot find '%s' format.\\n"""		965439	0					
ANR	966746	PrimaryExpression	"""Cannot find '%s' format.\\n"""		965439	0					
ANR	966747	Argument	name		965439	1					
ANR	966748	Identifier	name		965439	0					
ANR	966749	ExpressionStatement	free ( name )	1537:4:52125:52136	965439	1	True				
ANR	966750	CallExpression	free ( name )		965439	0					
ANR	966751	Callee	free		965439	0					
ANR	966752	Identifier	free		965439	0					
ANR	966753	ArgumentList	name		965439	1					
ANR	966754	Argument	name		965439	0					
ANR	966755	Identifier	name		965439	0					
ANR	966756	ExpressionStatement	free ( input )	1538:4:52142:52154	965439	2	True				
ANR	966757	CallExpression	free ( input )		965439	0					
ANR	966758	Callee	free		965439	0					
ANR	966759	Identifier	free		965439	0					
ANR	966760	ArgumentList	input		965439	1					
ANR	966761	Argument	input		965439	0					
ANR	966762	Identifier	input		965439	0					
ANR	966763	ReturnStatement	return ;	1539:4:52160:52166	965439	3	True				
ANR	966764	IdentifierDeclStatement	"char * delim = strchr ( name , '.' ) ;"	1542:3:52177:52209	965439	7	True				
ANR	966765	IdentifierDecl	"* delim = strchr ( name , '.' )"		965439	0					
ANR	966766	IdentifierDeclType	char *		965439	0					
ANR	966767	Identifier	delim		965439	1					
ANR	966768	AssignmentExpression	"* delim = strchr ( name , '.' )"		965439	2		=			
ANR	966769	Identifier	delim		965439	0					
ANR	966770	CallExpression	"strchr ( name , '.' )"		965439	1					
ANR	966771	Callee	strchr		965439	0					
ANR	966772	Identifier	strchr		965439	0					
ANR	966773	ArgumentList	name		965439	1					
ANR	966774	Argument	name		965439	0					
ANR	966775	Identifier	name		965439	0					
ANR	966776	Argument	'.'		965439	1					
ANR	966777	PrimaryExpression	'.'		965439	0					
ANR	966778	IfStatement	if ( delim )		965439	8					
ANR	966779	Condition	delim	1543:7:52218:52222	965439	0	True				
ANR	966780	Identifier	delim		965439	0					
ANR	966781	CompoundStatement		226:4:5790:5812	965439	1					
ANR	966782	IdentifierDeclStatement	int len = delim - name ;	1544:4:52231:52253	965439	0	True				
ANR	966783	IdentifierDecl	len = delim - name		965439	0					
ANR	966784	IdentifierDeclType	int		965439	0					
ANR	966785	Identifier	len		965439	1					
ANR	966786	AssignmentExpression	len = delim - name		965439	2		=			
ANR	966787	Identifier	len		965439	0					
ANR	966788	AdditiveExpression	delim - name		965439	1		-			
ANR	966789	Identifier	delim		965439	0					
ANR	966790	Identifier	name		965439	1					
ANR	966791	IfStatement	if ( len > 0 )		965439	1					
ANR	966792	Condition	len > 0	1545:8:52263:52269	965439	0	True				
ANR	966793	RelationalExpression	len > 0		965439	0		>			
ANR	966794	Identifier	len		965439	0					
ANR	966795	PrimaryExpression	0		965439	1					
ANR	966796	CompoundStatement		227:17:5831:5831	965439	1					
ANR	966797	ExpressionStatement	name [ len ] = '\\0'	1546:5:52279:52295	965439	0	True				
ANR	966798	AssignmentExpression	name [ len ] = '\\0'		965439	0		=			
ANR	966799	ArrayIndexing	name [ len ]		965439	0					
ANR	966800	Identifier	name		965439	0					
ANR	966801	Identifier	len		965439	1					
ANR	966802	PrimaryExpression	'\\0'		965439	1					
ANR	966803	IdentifierDeclStatement	const char * fmt = NULL ;	1552:3:52428:52450	965439	9	True				
ANR	966804	IdentifierDecl	* fmt = NULL		965439	0					
ANR	966805	IdentifierDeclType	const char *		965439	0					
ANR	966806	Identifier	fmt		965439	1					
ANR	966807	AssignmentExpression	* fmt = NULL		965439	2		=			
ANR	966808	Identifier	NULL		965439	0					
ANR	966809	Identifier	NULL		965439	1					
ANR	966810	ExpressionStatement	"fmt = sdb_get ( core -> print -> formats , name , NULL )"	1553:3:52455:52503	965439	10	True				
ANR	966811	AssignmentExpression	"fmt = sdb_get ( core -> print -> formats , name , NULL )"		965439	0		=			
ANR	966812	Identifier	fmt		965439	0					
ANR	966813	CallExpression	"sdb_get ( core -> print -> formats , name , NULL )"		965439	1					
ANR	966814	Callee	sdb_get		965439	0					
ANR	966815	Identifier	sdb_get		965439	0					
ANR	966816	ArgumentList	core -> print -> formats		965439	1					
ANR	966817	Argument	core -> print -> formats		965439	0					
ANR	966818	PtrMemberAccess	core -> print -> formats		965439	0					
ANR	966819	PtrMemberAccess	core -> print		965439	0					
ANR	966820	Identifier	core		965439	0					
ANR	966821	Identifier	print		965439	1					
ANR	966822	Identifier	formats		965439	1					
ANR	966823	Argument	name		965439	1					
ANR	966824	Identifier	name		965439	0					
ANR	966825	Argument	NULL		965439	2					
ANR	966826	Identifier	NULL		965439	0					
ANR	966827	IfStatement	if ( fmt )		965439	11					
ANR	966828	Condition	fmt	1554:7:52512:52514	965439	0	True				
ANR	966829	Identifier	fmt		965439	0					
ANR	966830	CompoundStatement		237:4:6082:6152	965439	1					
ANR	966831	IdentifierDeclStatement	"int size = r_print_format_struct_size ( core -> print , fmt , mode , 0 ) + 10 ;"	1555:4:52523:52593	965439	0	True				
ANR	966832	IdentifierDecl	"size = r_print_format_struct_size ( core -> print , fmt , mode , 0 ) + 10"		965439	0					
ANR	966833	IdentifierDeclType	int		965439	0					
ANR	966834	Identifier	size		965439	1					
ANR	966835	AssignmentExpression	"size = r_print_format_struct_size ( core -> print , fmt , mode , 0 ) + 10"		965439	2		=			
ANR	966836	Identifier	size		965439	0					
ANR	966837	AdditiveExpression	"r_print_format_struct_size ( core -> print , fmt , mode , 0 ) + 10"		965439	1		+			
ANR	966838	CallExpression	"r_print_format_struct_size ( core -> print , fmt , mode , 0 )"		965439	0					
ANR	966839	Callee	r_print_format_struct_size		965439	0					
ANR	966840	Identifier	r_print_format_struct_size		965439	0					
ANR	966841	ArgumentList	core -> print		965439	1					
ANR	966842	Argument	core -> print		965439	0					
ANR	966843	PtrMemberAccess	core -> print		965439	0					
ANR	966844	Identifier	core		965439	0					
ANR	966845	Identifier	print		965439	1					
ANR	966846	Argument	fmt		965439	1					
ANR	966847	Identifier	fmt		965439	0					
ANR	966848	Argument	mode		965439	2					
ANR	966849	Identifier	mode		965439	0					
ANR	966850	Argument	0		965439	3					
ANR	966851	PrimaryExpression	0		965439	0					
ANR	966852	PrimaryExpression	10		965439	1					
ANR	966853	IfStatement	if ( size > core -> blocksize )		965439	1					
ANR	966854	Condition	size > core -> blocksize	1556:8:52603:52624	965439	0	True				
ANR	966855	RelationalExpression	size > core -> blocksize		965439	0		>			
ANR	966856	Identifier	size		965439	0					
ANR	966857	PtrMemberAccess	core -> blocksize		965439	1					
ANR	966858	Identifier	core		965439	0					
ANR	966859	Identifier	blocksize		965439	1					
ANR	966860	CompoundStatement		238:32:6186:6186	965439	1					
ANR	966861	ExpressionStatement	"r_core_block_size ( core , size )"	1557:5:52634:52664	965439	0	True				
ANR	966862	CallExpression	"r_core_block_size ( core , size )"		965439	0					
ANR	966863	Callee	r_core_block_size		965439	0					
ANR	966864	Identifier	r_core_block_size		965439	0					
ANR	966865	ArgumentList	core		965439	1					
ANR	966866	Argument	core		965439	0					
ANR	966867	Identifier	core		965439	0					
ANR	966868	Argument	size		965439	1					
ANR	966869	Identifier	size		965439	0					
ANR	966870	IfStatement	if ( dot )		965439	12					
ANR	966871	Condition	dot	1561:7:52710:52712	965439	0	True				
ANR	966872	Identifier	dot		965439	0					
ANR	966873	CompoundStatement		243:12:6274:6274	965439	1					
ANR	966874	ExpressionStatement	* dot ++ = 0	1562:4:52721:52731	965439	0	True				
ANR	966875	AssignmentExpression	* dot ++ = 0		965439	0		=			
ANR	966876	UnaryOperationExpression	* dot ++		965439	0					
ANR	966877	UnaryOperator	*		965439	0					
ANR	966878	PostIncDecOperationExpression	dot ++		965439	1					
ANR	966879	Identifier	dot		965439	0					
ANR	966880	IncDec	++		965439	1					
ANR	966881	PrimaryExpression	0		965439	1					
ANR	966882	ExpressionStatement	"eq = strchr ( dot , '=' )"	1563:4:52737:52759	965439	1	True				
ANR	966883	AssignmentExpression	"eq = strchr ( dot , '=' )"		965439	0		=			
ANR	966884	Identifier	eq		965439	0					
ANR	966885	CallExpression	"strchr ( dot , '=' )"		965439	1					
ANR	966886	Callee	strchr		965439	0					
ANR	966887	Identifier	strchr		965439	0					
ANR	966888	ArgumentList	dot		965439	1					
ANR	966889	Argument	dot		965439	0					
ANR	966890	Identifier	dot		965439	0					
ANR	966891	Argument	'='		965439	1					
ANR	966892	PrimaryExpression	'='		965439	0					
ANR	966893	IfStatement	if ( eq )		965439	2					
ANR	966894	Condition	eq	1564:8:52769:52770	965439	0	True				
ANR	966895	Identifier	eq		965439	0					
ANR	966896	CompoundStatement		246:12:6332:6332	965439	1					
ANR	966897	ExpressionStatement	* eq ++ = 0	1565:5:52811:52820	965439	0	True				
ANR	966898	AssignmentExpression	* eq ++ = 0		965439	0		=			
ANR	966899	UnaryOperationExpression	* eq ++		965439	0					
ANR	966900	UnaryOperator	*		965439	0					
ANR	966901	PostIncDecOperationExpression	eq ++		965439	1					
ANR	966902	Identifier	eq		965439	0					
ANR	966903	IncDec	++		965439	1					
ANR	966904	PrimaryExpression	0		965439	1					
ANR	966905	ExpressionStatement	mode = R_PRINT_MUSTSET	1566:5:52827:52849	965439	1	True				
ANR	966906	AssignmentExpression	mode = R_PRINT_MUSTSET		965439	0		=			
ANR	966907	Identifier	mode		965439	0					
ANR	966908	Identifier	R_PRINT_MUSTSET		965439	1					
ANR	966909	ExpressionStatement	"r_print_format ( core -> print , core -> offset , core -> block , core -> blocksize , name , mode , eq , dot )"	1567:5:52856:52955	965439	2	True				
ANR	966910	CallExpression	"r_print_format ( core -> print , core -> offset , core -> block , core -> blocksize , name , mode , eq , dot )"		965439	0					
ANR	966911	Callee	r_print_format		965439	0					
ANR	966912	Identifier	r_print_format		965439	0					
ANR	966913	ArgumentList	core -> print		965439	1					
ANR	966914	Argument	core -> print		965439	0					
ANR	966915	PtrMemberAccess	core -> print		965439	0					
ANR	966916	Identifier	core		965439	0					
ANR	966917	Identifier	print		965439	1					
ANR	966918	Argument	core -> offset		965439	1					
ANR	966919	PtrMemberAccess	core -> offset		965439	0					
ANR	966920	Identifier	core		965439	0					
ANR	966921	Identifier	offset		965439	1					
ANR	966922	Argument	core -> block		965439	2					
ANR	966923	PtrMemberAccess	core -> block		965439	0					
ANR	966924	Identifier	core		965439	0					
ANR	966925	Identifier	block		965439	1					
ANR	966926	Argument	core -> blocksize		965439	3					
ANR	966927	PtrMemberAccess	core -> blocksize		965439	0					
ANR	966928	Identifier	core		965439	0					
ANR	966929	Identifier	blocksize		965439	1					
ANR	966930	Argument	name		965439	4					
ANR	966931	Identifier	name		965439	0					
ANR	966932	Argument	mode		965439	5					
ANR	966933	Identifier	mode		965439	0					
ANR	966934	Argument	eq		965439	6					
ANR	966935	Identifier	eq		965439	0					
ANR	966936	Argument	dot		965439	7					
ANR	966937	Identifier	dot		965439	0					
ANR	966938	ElseStatement	else		965439	0					
ANR	966939	CompoundStatement		251:11:6527:6527	965439	0					
ANR	966940	ExpressionStatement	"r_print_format ( core -> print , core -> offset , core -> block , core -> blocksize , name , mode , NULL , dot )"	1570:5:52975:53076	965439	0	True				
ANR	966941	CallExpression	"r_print_format ( core -> print , core -> offset , core -> block , core -> blocksize , name , mode , NULL , dot )"		965439	0					
ANR	966942	Callee	r_print_format		965439	0					
ANR	966943	Identifier	r_print_format		965439	0					
ANR	966944	ArgumentList	core -> print		965439	1					
ANR	966945	Argument	core -> print		965439	0					
ANR	966946	PtrMemberAccess	core -> print		965439	0					
ANR	966947	Identifier	core		965439	0					
ANR	966948	Identifier	print		965439	1					
ANR	966949	Argument	core -> offset		965439	1					
ANR	966950	PtrMemberAccess	core -> offset		965439	0					
ANR	966951	Identifier	core		965439	0					
ANR	966952	Identifier	offset		965439	1					
ANR	966953	Argument	core -> block		965439	2					
ANR	966954	PtrMemberAccess	core -> block		965439	0					
ANR	966955	Identifier	core		965439	0					
ANR	966956	Identifier	block		965439	1					
ANR	966957	Argument	core -> blocksize		965439	3					
ANR	966958	PtrMemberAccess	core -> blocksize		965439	0					
ANR	966959	Identifier	core		965439	0					
ANR	966960	Identifier	blocksize		965439	1					
ANR	966961	Argument	name		965439	4					
ANR	966962	Identifier	name		965439	0					
ANR	966963	Argument	mode		965439	5					
ANR	966964	Identifier	mode		965439	0					
ANR	966965	Argument	NULL		965439	6					
ANR	966966	Identifier	NULL		965439	0					
ANR	966967	Argument	dot		965439	7					
ANR	966968	Identifier	dot		965439	0					
ANR	966969	ElseStatement	else		965439	0					
ANR	966970	CompoundStatement		255:10:6653:6653	965439	0					
ANR	966971	ExpressionStatement	"r_print_format ( core -> print , core -> offset , core -> block , core -> blocksize , name , mode , NULL , NULL )"	1574:4:53100:53201	965439	0	True				
ANR	966972	CallExpression	"r_print_format ( core -> print , core -> offset , core -> block , core -> blocksize , name , mode , NULL , NULL )"		965439	0					
ANR	966973	Callee	r_print_format		965439	0					
ANR	966974	Identifier	r_print_format		965439	0					
ANR	966975	ArgumentList	core -> print		965439	1					
ANR	966976	Argument	core -> print		965439	0					
ANR	966977	PtrMemberAccess	core -> print		965439	0					
ANR	966978	Identifier	core		965439	0					
ANR	966979	Identifier	print		965439	1					
ANR	966980	Argument	core -> offset		965439	1					
ANR	966981	PtrMemberAccess	core -> offset		965439	0					
ANR	966982	Identifier	core		965439	0					
ANR	966983	Identifier	offset		965439	1					
ANR	966984	Argument	core -> block		965439	2					
ANR	966985	PtrMemberAccess	core -> block		965439	0					
ANR	966986	Identifier	core		965439	0					
ANR	966987	Identifier	block		965439	1					
ANR	966988	Argument	core -> blocksize		965439	3					
ANR	966989	PtrMemberAccess	core -> blocksize		965439	0					
ANR	966990	Identifier	core		965439	0					
ANR	966991	Identifier	blocksize		965439	1					
ANR	966992	Argument	name		965439	4					
ANR	966993	Identifier	name		965439	0					
ANR	966994	Argument	mode		965439	5					
ANR	966995	Identifier	mode		965439	0					
ANR	966996	Argument	NULL		965439	6					
ANR	966997	Identifier	NULL		965439	0					
ANR	966998	Argument	NULL		965439	7					
ANR	966999	Identifier	NULL		965439	0					
ANR	967000	ExpressionStatement	free ( name )	1577:3:53211:53222	965439	13	True				
ANR	967001	CallExpression	free ( name )		965439	0					
ANR	967002	Callee	free		965439	0					
ANR	967003	Identifier	free		965439	0					
ANR	967004	ArgumentList	name		965439	1					
ANR	967005	Argument	name		965439	0					
ANR	967006	Identifier	name		965439	0					
ANR	967007	ElseStatement	else		965439	0					
ANR	967008	CompoundStatement		280:2:7425:7462	965439	0					
ANR	967009	IdentifierDeclStatement	const char * fmt = r_str_trim_ro ( input + 1 ) ;	1581:2:53302:53345	965439	0	True				
ANR	967010	IdentifierDecl	* fmt = r_str_trim_ro ( input + 1 )		965439	0					
ANR	967011	IdentifierDeclType	const char *		965439	0					
ANR	967012	Identifier	fmt		965439	1					
ANR	967013	AssignmentExpression	* fmt = r_str_trim_ro ( input + 1 )		965439	2		=			
ANR	967014	Identifier	fmt		965439	0					
ANR	967015	CallExpression	r_str_trim_ro ( input + 1 )		965439	1					
ANR	967016	Callee	r_str_trim_ro		965439	0					
ANR	967017	Identifier	r_str_trim_ro		965439	0					
ANR	967018	ArgumentList	input + 1		965439	1					
ANR	967019	Argument	input + 1		965439	0					
ANR	967020	AdditiveExpression	input + 1		965439	0		+			
ANR	967021	Identifier	input		965439	0					
ANR	967022	PrimaryExpression	1		965439	1					
ANR	967023	IdentifierDeclStatement	"int struct_sz = r_print_format_struct_size ( core -> print , fmt , mode , 0 ) ;"	1582:2:53349:53419	965439	1	True				
ANR	967024	IdentifierDecl	"struct_sz = r_print_format_struct_size ( core -> print , fmt , mode , 0 )"		965439	0					
ANR	967025	IdentifierDeclType	int		965439	0					
ANR	967026	Identifier	struct_sz		965439	1					
ANR	967027	AssignmentExpression	"struct_sz = r_print_format_struct_size ( core -> print , fmt , mode , 0 )"		965439	2		=			
ANR	967028	Identifier	struct_sz		965439	0					
ANR	967029	CallExpression	"r_print_format_struct_size ( core -> print , fmt , mode , 0 )"		965439	1					
ANR	967030	Callee	r_print_format_struct_size		965439	0					
ANR	967031	Identifier	r_print_format_struct_size		965439	0					
ANR	967032	ArgumentList	core -> print		965439	1					
ANR	967033	Argument	core -> print		965439	0					
ANR	967034	PtrMemberAccess	core -> print		965439	0					
ANR	967035	Identifier	core		965439	0					
ANR	967036	Identifier	print		965439	1					
ANR	967037	Argument	fmt		965439	1					
ANR	967038	Identifier	fmt		965439	0					
ANR	967039	Argument	mode		965439	2					
ANR	967040	Identifier	mode		965439	0					
ANR	967041	Argument	0		965439	3					
ANR	967042	PrimaryExpression	0		965439	0					
ANR	967043	IdentifierDeclStatement	"int size = R_MAX ( core -> blocksize , struct_sz ) ;"	1583:2:53423:53468	965439	2	True				
ANR	967044	IdentifierDecl	"size = R_MAX ( core -> blocksize , struct_sz )"		965439	0					
ANR	967045	IdentifierDeclType	int		965439	0					
ANR	967046	Identifier	size		965439	1					
ANR	967047	AssignmentExpression	"size = R_MAX ( core -> blocksize , struct_sz )"		965439	2		=			
ANR	967048	Identifier	size		965439	0					
ANR	967049	CallExpression	"R_MAX ( core -> blocksize , struct_sz )"		965439	1					
ANR	967050	Callee	R_MAX		965439	0					
ANR	967051	Identifier	R_MAX		965439	0					
ANR	967052	ArgumentList	core -> blocksize		965439	1					
ANR	967053	Argument	core -> blocksize		965439	0					
ANR	967054	PtrMemberAccess	core -> blocksize		965439	0					
ANR	967055	Identifier	core		965439	0					
ANR	967056	Identifier	blocksize		965439	1					
ANR	967057	Argument	struct_sz		965439	1					
ANR	967058	Identifier	struct_sz		965439	0					
ANR	967059	IdentifierDeclStatement	"ut8 * buf = calloc ( 1 , size ) ;"	1584:2:53472:53499	965439	3	True				
ANR	967060	IdentifierDecl	"* buf = calloc ( 1 , size )"		965439	0					
ANR	967061	IdentifierDeclType	ut8 *		965439	0					
ANR	967062	Identifier	buf		965439	1					
ANR	967063	AssignmentExpression	"* buf = calloc ( 1 , size )"		965439	2		=			
ANR	967064	Identifier	buf		965439	0					
ANR	967065	CallExpression	"calloc ( 1 , size )"		965439	1					
ANR	967066	Callee	calloc		965439	0					
ANR	967067	Identifier	calloc		965439	0					
ANR	967068	ArgumentList	1		965439	1					
ANR	967069	Argument	1		965439	0					
ANR	967070	PrimaryExpression	1		965439	0					
ANR	967071	Argument	size		965439	1					
ANR	967072	Identifier	size		965439	0					
ANR	967073	IfStatement	if ( ! buf )		965439	4					
ANR	967074	Condition	! buf	1585:6:53507:53510	965439	0	True				
ANR	967075	UnaryOperationExpression	! buf		965439	0					
ANR	967076	UnaryOperator	!		965439	0					
ANR	967077	Identifier	buf		965439	1					
ANR	967078	CompoundStatement		267:12:7072:7072	965439	1					
ANR	967079	ExpressionStatement	"eprintf ( ""cannot allocate %d byte(s)\\n"" , size )"	1586:3:53518:53564	965439	0	True				
ANR	967080	CallExpression	"eprintf ( ""cannot allocate %d byte(s)\\n"" , size )"		965439	0					
ANR	967081	Callee	eprintf		965439	0					
ANR	967082	Identifier	eprintf		965439	0					
ANR	967083	ArgumentList	"""cannot allocate %d byte(s)\\n"""		965439	1					
ANR	967084	Argument	"""cannot allocate %d byte(s)\\n"""		965439	0					
ANR	967085	PrimaryExpression	"""cannot allocate %d byte(s)\\n"""		965439	0					
ANR	967086	Argument	size		965439	1					
ANR	967087	Identifier	size		965439	0					
ANR	967088	GotoStatement	goto stage_left ;	1587:3:53569:53584	965439	1	True				
ANR	967089	Identifier	stage_left		965439	0					
ANR	967090	ExpressionStatement	"memcpy ( buf , core -> block , core -> blocksize )"	1589:2:53592:53634	965439	5	True				
ANR	967091	CallExpression	"memcpy ( buf , core -> block , core -> blocksize )"		965439	0					
ANR	967092	Callee	memcpy		965439	0					
ANR	967093	Identifier	memcpy		965439	0					
ANR	967094	ArgumentList	buf		965439	1					
ANR	967095	Argument	buf		965439	0					
ANR	967096	Identifier	buf		965439	0					
ANR	967097	Argument	core -> block		965439	1					
ANR	967098	PtrMemberAccess	core -> block		965439	0					
ANR	967099	Identifier	core		965439	0					
ANR	967100	Identifier	block		965439	1					
ANR	967101	Argument	core -> blocksize		965439	2					
ANR	967102	PtrMemberAccess	core -> blocksize		965439	0					
ANR	967103	Identifier	core		965439	0					
ANR	967104	Identifier	blocksize		965439	1					
ANR	967105	IdentifierDeclStatement	bool syntax_ok = true ;	1591:2:53712:53733	965439	6	True				
ANR	967106	IdentifierDecl	syntax_ok = true		965439	0					
ANR	967107	IdentifierDeclType	bool		965439	0					
ANR	967108	Identifier	syntax_ok		965439	1					
ANR	967109	AssignmentExpression	syntax_ok = true		965439	2		=			
ANR	967110	Identifier	true		965439	0					
ANR	967111	Identifier	true		965439	1					
ANR	967112	IdentifierDeclStatement	char * args = strdup ( fmt ) ;	1592:2:53737:53762	965439	7	True				
ANR	967113	IdentifierDecl	* args = strdup ( fmt )		965439	0					
ANR	967114	IdentifierDeclType	char *		965439	0					
ANR	967115	Identifier	args		965439	1					
ANR	967116	AssignmentExpression	* args = strdup ( fmt )		965439	2		=			
ANR	967117	Identifier	args		965439	0					
ANR	967118	CallExpression	strdup ( fmt )		965439	1					
ANR	967119	Callee	strdup		965439	0					
ANR	967120	Identifier	strdup		965439	0					
ANR	967121	ArgumentList	fmt		965439	1					
ANR	967122	Argument	fmt		965439	0					
ANR	967123	Identifier	fmt		965439	0					
ANR	967124	IfStatement	if ( ! args )		965439	8					
ANR	967125	Condition	! args	1593:6:53770:53774	965439	0	True				
ANR	967126	UnaryOperationExpression	! args		965439	0					
ANR	967127	UnaryOperator	!		965439	0					
ANR	967128	Identifier	args		965439	1					
ANR	967129	CompoundStatement		275:13:7336:7336	965439	1					
ANR	967130	ExpressionStatement	"r_cons_printf ( ""Error: Mem Allocation."" )"	1594:3:53782:53822	965439	0	True				
ANR	967131	CallExpression	"r_cons_printf ( ""Error: Mem Allocation."" )"		965439	0					
ANR	967132	Callee	r_cons_printf		965439	0					
ANR	967133	Identifier	r_cons_printf		965439	0					
ANR	967134	ArgumentList	"""Error: Mem Allocation."""		965439	1					
ANR	967135	Argument	"""Error: Mem Allocation."""		965439	0					
ANR	967136	PrimaryExpression	"""Error: Mem Allocation."""		965439	0					
ANR	967137	ExpressionStatement	free ( args )	1595:3:53827:53838	965439	1	True				
ANR	967138	CallExpression	free ( args )		965439	0					
ANR	967139	Callee	free		965439	0					
ANR	967140	Identifier	free		965439	0					
ANR	967141	ArgumentList	args		965439	1					
ANR	967142	Argument	args		965439	0					
ANR	967143	Identifier	args		965439	0					
ANR	967144	GotoStatement	goto stage_left ;	1596:3:53843:53858	965439	2	True				
ANR	967145	Identifier	stage_left		965439	0					
ANR	967146	IdentifierDeclStatement	"const char * arg1 = strtok ( args , "" "" ) ;"	1598:2:53866:53903	965439	9	True				
ANR	967147	IdentifierDecl	"* arg1 = strtok ( args , "" "" )"		965439	0					
ANR	967148	IdentifierDeclType	const char *		965439	0					
ANR	967149	Identifier	arg1		965439	1					
ANR	967150	AssignmentExpression	"* arg1 = strtok ( args , "" "" )"		965439	2		=			
ANR	967151	Identifier	arg1		965439	0					
ANR	967152	CallExpression	"strtok ( args , "" "" )"		965439	1					
ANR	967153	Callee	strtok		965439	0					
ANR	967154	Identifier	strtok		965439	0					
ANR	967155	ArgumentList	args		965439	1					
ANR	967156	Argument	args		965439	0					
ANR	967157	Identifier	args		965439	0					
ANR	967158	Argument	""" """		965439	1					
ANR	967159	PrimaryExpression	""" """		965439	0					
ANR	967160	IfStatement	if ( arg1 && r_str_isnumber ( arg1 ) )		965439	10					
ANR	967161	Condition	arg1 && r_str_isnumber ( arg1 )	1599:6:53911:53939	965439	0	True				
ANR	967162	AndExpression	arg1 && r_str_isnumber ( arg1 )		965439	0		&&			
ANR	967163	Identifier	arg1		965439	0					
ANR	967164	CallExpression	r_str_isnumber ( arg1 )		965439	1					
ANR	967165	Callee	r_str_isnumber		965439	0					
ANR	967166	Identifier	r_str_isnumber		965439	0					
ANR	967167	ArgumentList	arg1		965439	1					
ANR	967168	Argument	arg1		965439	0					
ANR	967169	Identifier	arg1		965439	0					
ANR	967170	CompoundStatement		281:37:7501:7501	965439	1					
ANR	967171	ExpressionStatement	syntax_ok = false	1600:3:53947:53964	965439	0	True				
ANR	967172	AssignmentExpression	syntax_ok = false		965439	0		=			
ANR	967173	Identifier	syntax_ok		965439	0					
ANR	967174	Identifier	false		965439	1					
ANR	967175	ExpressionStatement	"r_cons_printf ( ""Usage: pf [0|cnt][format-string]\\n"" )"	1601:3:53969:54021	965439	1	True				
ANR	967176	CallExpression	"r_cons_printf ( ""Usage: pf [0|cnt][format-string]\\n"" )"		965439	0					
ANR	967177	Callee	r_cons_printf		965439	0					
ANR	967178	Identifier	r_cons_printf		965439	0					
ANR	967179	ArgumentList	"""Usage: pf [0|cnt][format-string]\\n"""		965439	1					
ANR	967180	Argument	"""Usage: pf [0|cnt][format-string]\\n"""		965439	0					
ANR	967181	PrimaryExpression	"""Usage: pf [0|cnt][format-string]\\n"""		965439	0					
ANR	967182	ExpressionStatement	free ( args )	1603:2:54029:54040	965439	11	True				
ANR	967183	CallExpression	free ( args )		965439	0					
ANR	967184	Callee	free		965439	0					
ANR	967185	Identifier	free		965439	0					
ANR	967186	ArgumentList	args		965439	1					
ANR	967187	Argument	args		965439	0					
ANR	967188	Identifier	args		965439	0					
ANR	967189	IfStatement	if ( syntax_ok )		965439	12					
ANR	967190	Condition	syntax_ok	1604:6:54048:54056	965439	0	True				
ANR	967191	Identifier	syntax_ok		965439	0					
ANR	967192	CompoundStatement		286:17:7618:7618	965439	1					
ANR	967193	ExpressionStatement	"r_print_format ( core -> print , core -> offset , buf , size , fmt , mode , NULL , NULL )"	1605:3:54064:54144	965439	0	True				
ANR	967194	CallExpression	"r_print_format ( core -> print , core -> offset , buf , size , fmt , mode , NULL , NULL )"		965439	0					
ANR	967195	Callee	r_print_format		965439	0					
ANR	967196	Identifier	r_print_format		965439	0					
ANR	967197	ArgumentList	core -> print		965439	1					
ANR	967198	Argument	core -> print		965439	0					
ANR	967199	PtrMemberAccess	core -> print		965439	0					
ANR	967200	Identifier	core		965439	0					
ANR	967201	Identifier	print		965439	1					
ANR	967202	Argument	core -> offset		965439	1					
ANR	967203	PtrMemberAccess	core -> offset		965439	0					
ANR	967204	Identifier	core		965439	0					
ANR	967205	Identifier	offset		965439	1					
ANR	967206	Argument	buf		965439	2					
ANR	967207	Identifier	buf		965439	0					
ANR	967208	Argument	size		965439	3					
ANR	967209	Identifier	size		965439	0					
ANR	967210	Argument	fmt		965439	4					
ANR	967211	Identifier	fmt		965439	0					
ANR	967212	Argument	mode		965439	5					
ANR	967213	Identifier	mode		965439	0					
ANR	967214	Argument	NULL		965439	6					
ANR	967215	Identifier	NULL		965439	0					
ANR	967216	Argument	NULL		965439	7					
ANR	967217	Identifier	NULL		965439	0					
ANR	967218	ExpressionStatement	free ( buf )	1608:2:54152:54162	965439	13	True				
ANR	967219	CallExpression	free ( buf )		965439	0					
ANR	967220	Callee	free		965439	0					
ANR	967221	Identifier	free		965439	0					
ANR	967222	ArgumentList	buf		965439	1					
ANR	967223	Argument	buf		965439	0					
ANR	967224	Identifier	buf		965439	0					
ANR	967225	Label	stage_left :	1610:0:54167:54177	965439	13	True				
ANR	967226	Identifier	stage_left		965439	0					
ANR	967227	ExpressionStatement	free ( input )	1611:1:54180:54192	965439	14	True				
ANR	967228	CallExpression	free ( input )		965439	0					
ANR	967229	Callee	free		965439	0					
ANR	967230	Identifier	free		965439	0					
ANR	967231	ArgumentList	input		965439	1					
ANR	967232	Argument	input		965439	0					
ANR	967233	Identifier	input		965439	0					
ANR	967234	ExpressionStatement	"r_core_block_size ( core , o_blocksize )"	1612:1:54195:54232	965439	15	True				
ANR	967235	CallExpression	"r_core_block_size ( core , o_blocksize )"		965439	0					
ANR	967236	Callee	r_core_block_size		965439	0					
ANR	967237	Identifier	r_core_block_size		965439	0					
ANR	967238	ArgumentList	core		965439	1					
ANR	967239	Argument	core		965439	0					
ANR	967240	Identifier	core		965439	0					
ANR	967241	Argument	o_blocksize		965439	1					
ANR	967242	Identifier	o_blocksize		965439	0					
ANR	967243	ReturnType	static void		965439	1					
ANR	967244	Identifier	cmd_print_format		965439	2					
ANR	967245	ParameterList	"RCore * core , const char * _input , const ut8 * block , int len"		965439	3					
ANR	967246	Parameter	RCore * core	1319:29:46380:46390	965439	0	True				
ANR	967247	ParameterType	RCore *		965439	0					
ANR	967248	Identifier	core		965439	1					
ANR	967249	Parameter	const char * _input	1319:42:46393:46410	965439	1	True				
ANR	967250	ParameterType	const char *		965439	0					
ANR	967251	Identifier	_input		965439	1					
ANR	967252	Parameter	const ut8 * block	1319:62:46413:46428	965439	2	True				
ANR	967253	ParameterType	const ut8 *		965439	0					
ANR	967254	Identifier	block		965439	1					
ANR	967255	Parameter	int len	1319:80:46431:46437	965439	3	True				
ANR	967256	ParameterType	int		965439	0					
ANR	967257	Identifier	len		965439	1					
ANR	967258	CFGEntryNode	ENTRY		965439		True				
ANR	967259	CFGExitNode	EXIT		965439		True				
ANR	967260	Symbol	r_print_format_struct_size		965439						
ANR	967261	Symbol	* input		965439						
ANR	967262	Symbol	strchr		965439						
ANR	967263	Symbol	core -> offset		965439						
ANR	967264	Symbol	help_msg_pf		965439						
ANR	967265	Symbol	path		965439						
ANR	967266	Symbol	len		965439						
ANR	967267	Symbol	tmp		965439						
ANR	967268	Symbol	block		965439						
ANR	967269	Symbol	R_PRINT_SEEFLAGS		965439						
ANR	967270	Symbol	help_detail2_pf		965439						
ANR	967271	Symbol	val		965439						
ANR	967272	Symbol	core -> blocksize		965439						
ANR	967273	Symbol	fname		965439						
ANR	967274	Symbol	syntax_ok		965439						
ANR	967275	Symbol	core -> block		965439						
ANR	967276	Symbol	core -> print -> get_register_value		965439						
ANR	967277	Symbol	iter		965439						
ANR	967278	Symbol	core -> print -> get_register		965439						
ANR	967279	Symbol	core -> print -> formats		965439						
ANR	967280	Symbol	input		965439						
ANR	967281	Symbol	R_PRINT_QUIET		965439						
ANR	967282	Symbol	size		965439						
ANR	967283	Symbol	R_PRINT_VALUE		965439						
ANR	967284	Symbol	r_str_trim_ro		965439						
ANR	967285	Symbol	* core -> dbg		965439						
ANR	967286	Symbol	r_sys_dir		965439						
ANR	967287	Symbol	r_parse_c_file		965439						
ANR	967288	Symbol	o_blocksize		965439						
ANR	967289	Symbol	* core		965439						
ANR	967290	Symbol	r_config_get		965439						
ANR	967291	Symbol	dot		965439						
ANR	967292	Symbol	core -> anal		965439						
ANR	967293	Symbol	out		965439						
ANR	967294	Symbol	* _input		965439						
ANR	967295	Symbol	* space ++		965439						
ANR	967296	Symbol	help_detail_pf		965439						
ANR	967297	Symbol	R_PRINT_DOT		965439						
ANR	967298	Symbol	r_str_endswith		965439						
ANR	967299	Symbol	* name		965439						
ANR	967300	Symbol	R_PRINT_STRUCT		965439						
ANR	967301	Symbol	sdb_new0		965439						
ANR	967302	Symbol	r_reg_get_value		965439						
ANR	967303	Symbol	error_msg		965439						
ANR	967304	Symbol	sdb_foreach_list		965439						
ANR	967305	Symbol	kv		965439						
ANR	967306	Symbol	sdbkv_value		965439						
ANR	967307	Symbol	* fn		965439						
ANR	967308	Symbol	* eq		965439						
ANR	967309	Symbol	* core -> print		965439						
ANR	967310	Symbol	buf		965439						
ANR	967311	Symbol	core -> dbg -> reg		965439						
ANR	967312	Symbol	R_MAX		965439						
ANR	967313	Symbol	core -> print -> num		965439						
ANR	967314	Symbol	struct_name		965439						
ANR	967315	Symbol	* len		965439						
ANR	967316	Symbol	core -> print -> reg		965439						
ANR	967317	Symbol	dir		965439						
ANR	967318	Symbol	fmt		965439						
ANR	967319	Symbol	struct_sz		965439						
ANR	967320	Symbol	space		965439						
ANR	967321	Symbol	mode		965439						
ANR	967322	Symbol	R2_SDB_FORMAT		965439						
ANR	967323	Symbol	& error_msg		965439						
ANR	967324	Symbol	core -> num		965439						
ANR	967325	Symbol	r_reg_get		965439						
ANR	967326	Symbol	strcmp		965439						
ANR	967327	Symbol	NULL		965439						
ANR	967328	Symbol	R_PRINT_MUSTSEE		965439						
ANR	967329	Symbol	strtok		965439						
ANR	967330	Symbol	eq		965439						
ANR	967331	Symbol	core		965439						
ANR	967332	Symbol	R_JOIN_2_PATHS		965439						
ANR	967333	Symbol	R_PRINT_MUSTSET		965439						
ANR	967334	Symbol	arg1		965439						
ANR	967335	Symbol	true		965439						
ANR	967336	Symbol	name		965439						
ANR	967337	Symbol	files		965439						
ANR	967338	Symbol	core -> print		965439						
ANR	967339	Symbol	fn		965439						
ANR	967340	Symbol	r_str_newf		965439						
ANR	967341	Symbol	calloc		965439						
ANR	967342	Symbol	R_PRINT_JSON		965439						
ANR	967343	Symbol	_input		965439						
ANR	967344	Symbol	r_str_home		965439						
ANR	967345	Symbol	* * core		965439						
ANR	967346	Symbol	delim		965439						
ANR	967347	Symbol	R2_HOME_SDB_FORMAT		965439						
ANR	967348	Symbol	core -> config		965439						
ANR	967349	Symbol	r_core_cmd_file		965439						
ANR	967350	Symbol	* dot ++		965439						
ANR	967351	Symbol	sdbkv_key		965439						
ANR	967352	Symbol	r_str_isnumber		965439						
ANR	967353	Symbol	listFormats		965439						
ANR	967354	Symbol	false		965439						
ANR	967355	Symbol	sdb_get		965439						
ANR	967356	Symbol	home		965439						
ANR	967357	Symbol	args		965439						
ANR	967358	Symbol	r_str_r2_prefix		965439						
ANR	967359	Symbol	strdup		965439						
ANR	967360	Symbol	sdbls		965439						
ANR	967361	Symbol	* eq ++		965439						
ANR	967362	Symbol	core -> dbg		965439						
ANR	967363	Function	annotated_hexdump	1620:0:54447:63107							
ANR	967364	FunctionDef	"annotated_hexdump (RCore * core , const char * str , int len)"		967363	0					
ANR	967365	CompoundStatement		1620:69:54516:63107	967363	0					
ANR	967366	IdentifierDeclStatement	"const int usecolor = r_config_get_i ( core -> config , ""scr.color"" ) ;"	1621:1:54519:54582	967363	0	True				
ANR	967367	IdentifierDecl	"usecolor = r_config_get_i ( core -> config , ""scr.color"" )"		967363	0					
ANR	967368	IdentifierDeclType	const int		967363	0					
ANR	967369	Identifier	usecolor		967363	1					
ANR	967370	AssignmentExpression	"usecolor = r_config_get_i ( core -> config , ""scr.color"" )"		967363	2		=			
ANR	967371	Identifier	usecolor		967363	0					
ANR	967372	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		967363	1					
ANR	967373	Callee	r_config_get_i		967363	0					
ANR	967374	Identifier	r_config_get_i		967363	0					
ANR	967375	ArgumentList	core -> config		967363	1					
ANR	967376	Argument	core -> config		967363	0					
ANR	967377	PtrMemberAccess	core -> config		967363	0					
ANR	967378	Identifier	core		967363	0					
ANR	967379	Identifier	config		967363	1					
ANR	967380	Argument	"""scr.color"""		967363	1					
ANR	967381	PrimaryExpression	"""scr.color"""		967363	0					
ANR	967382	IdentifierDeclStatement	"int nb_cols = r_config_get_i ( core -> config , ""hex.cols"" ) ;"	1622:1:54585:54640	967363	1	True				
ANR	967383	IdentifierDecl	"nb_cols = r_config_get_i ( core -> config , ""hex.cols"" )"		967363	0					
ANR	967384	IdentifierDeclType	int		967363	0					
ANR	967385	Identifier	nb_cols		967363	1					
ANR	967386	AssignmentExpression	"nb_cols = r_config_get_i ( core -> config , ""hex.cols"" )"		967363	2		=			
ANR	967387	Identifier	nb_cols		967363	0					
ANR	967388	CallExpression	"r_config_get_i ( core -> config , ""hex.cols"" )"		967363	1					
ANR	967389	Callee	r_config_get_i		967363	0					
ANR	967390	Identifier	r_config_get_i		967363	0					
ANR	967391	ArgumentList	core -> config		967363	1					
ANR	967392	Argument	core -> config		967363	0					
ANR	967393	PtrMemberAccess	core -> config		967363	0					
ANR	967394	Identifier	core		967363	0					
ANR	967395	Identifier	config		967363	1					
ANR	967396	Argument	"""hex.cols"""		967363	1					
ANR	967397	PrimaryExpression	"""hex.cols"""		967363	0					
ANR	967398	ExpressionStatement	"core -> print -> use_comments = r_config_get_i ( core -> config , ""hex.comments"" )"	1623:1:54643:54716	967363	2	True				
ANR	967399	AssignmentExpression	"core -> print -> use_comments = r_config_get_i ( core -> config , ""hex.comments"" )"		967363	0		=			
ANR	967400	PtrMemberAccess	core -> print -> use_comments		967363	0					
ANR	967401	PtrMemberAccess	core -> print		967363	0					
ANR	967402	Identifier	core		967363	0					
ANR	967403	Identifier	print		967363	1					
ANR	967404	Identifier	use_comments		967363	1					
ANR	967405	CallExpression	"r_config_get_i ( core -> config , ""hex.comments"" )"		967363	1					
ANR	967406	Callee	r_config_get_i		967363	0					
ANR	967407	Identifier	r_config_get_i		967363	0					
ANR	967408	ArgumentList	core -> config		967363	1					
ANR	967409	Argument	core -> config		967363	0					
ANR	967410	PtrMemberAccess	core -> config		967363	0					
ANR	967411	Identifier	core		967363	0					
ANR	967412	Identifier	config		967363	1					
ANR	967413	Argument	"""hex.comments"""		967363	1					
ANR	967414	PrimaryExpression	"""hex.comments"""		967363	0					
ANR	967415	IdentifierDeclStatement	"int flagsz = r_config_get_i ( core -> config , ""hex.flagsz"" ) ;"	1624:1:54719:54775	967363	3	True				
ANR	967416	IdentifierDecl	"flagsz = r_config_get_i ( core -> config , ""hex.flagsz"" )"		967363	0					
ANR	967417	IdentifierDeclType	int		967363	0					
ANR	967418	Identifier	flagsz		967363	1					
ANR	967419	AssignmentExpression	"flagsz = r_config_get_i ( core -> config , ""hex.flagsz"" )"		967363	2		=			
ANR	967420	Identifier	flagsz		967363	0					
ANR	967421	CallExpression	"r_config_get_i ( core -> config , ""hex.flagsz"" )"		967363	1					
ANR	967422	Callee	r_config_get_i		967363	0					
ANR	967423	Identifier	r_config_get_i		967363	0					
ANR	967424	ArgumentList	core -> config		967363	1					
ANR	967425	Argument	core -> config		967363	0					
ANR	967426	PtrMemberAccess	core -> config		967363	0					
ANR	967427	Identifier	core		967363	0					
ANR	967428	Identifier	config		967363	1					
ANR	967429	Argument	"""hex.flagsz"""		967363	1					
ANR	967430	PrimaryExpression	"""hex.flagsz"""		967363	0					
ANR	967431	IdentifierDeclStatement	"bool showSection = r_config_get_i ( core -> config , ""hex.section"" ) ;"	1625:1:54778:54841	967363	4	True				
ANR	967432	IdentifierDecl	"showSection = r_config_get_i ( core -> config , ""hex.section"" )"		967363	0					
ANR	967433	IdentifierDeclType	bool		967363	0					
ANR	967434	Identifier	showSection		967363	1					
ANR	967435	AssignmentExpression	"showSection = r_config_get_i ( core -> config , ""hex.section"" )"		967363	2		=			
ANR	967436	Identifier	showSection		967363	0					
ANR	967437	CallExpression	"r_config_get_i ( core -> config , ""hex.section"" )"		967363	1					
ANR	967438	Callee	r_config_get_i		967363	0					
ANR	967439	Identifier	r_config_get_i		967363	0					
ANR	967440	ArgumentList	core -> config		967363	1					
ANR	967441	Argument	core -> config		967363	0					
ANR	967442	PtrMemberAccess	core -> config		967363	0					
ANR	967443	Identifier	core		967363	0					
ANR	967444	Identifier	config		967363	1					
ANR	967445	Argument	"""hex.section"""		967363	1					
ANR	967446	PrimaryExpression	"""hex.section"""		967363	0					
ANR	967447	IdentifierDeclStatement	const ut8 * buf = core -> block ;	1626:1:54844:54872	967363	5	True				
ANR	967448	IdentifierDecl	* buf = core -> block		967363	0					
ANR	967449	IdentifierDeclType	const ut8 *		967363	0					
ANR	967450	Identifier	buf		967363	1					
ANR	967451	AssignmentExpression	* buf = core -> block		967363	2		=			
ANR	967452	Identifier	buf		967363	0					
ANR	967453	PtrMemberAccess	core -> block		967363	1					
ANR	967454	Identifier	core		967363	0					
ANR	967455	Identifier	block		967363	1					
ANR	967456	IdentifierDeclStatement	ut64 addr = core -> offset ;	1627:1:54875:54899	967363	6	True				
ANR	967457	IdentifierDecl	addr = core -> offset		967363	0					
ANR	967458	IdentifierDeclType	ut64		967363	0					
ANR	967459	Identifier	addr		967363	1					
ANR	967460	AssignmentExpression	addr = core -> offset		967363	2		=			
ANR	967461	Identifier	addr		967363	0					
ANR	967462	PtrMemberAccess	core -> offset		967363	1					
ANR	967463	Identifier	core		967363	0					
ANR	967464	Identifier	offset		967363	1					
ANR	967465	IdentifierDeclStatement	int color_idx = 0 ;	1628:1:54902:54919	967363	7	True				
ANR	967466	IdentifierDecl	color_idx = 0		967363	0					
ANR	967467	IdentifierDeclType	int		967363	0					
ANR	967468	Identifier	color_idx		967363	1					
ANR	967469	AssignmentExpression	color_idx = 0		967363	2		=			
ANR	967470	Identifier	color_idx		967363	0					
ANR	967471	PrimaryExpression	0		967363	1					
ANR	967472	IdentifierDeclStatement	"char * bytes , * chars ;"	1629:1:54922:54941	967363	8	True				
ANR	967473	IdentifierDecl	* bytes		967363	0					
ANR	967474	IdentifierDeclType	char *		967363	0					
ANR	967475	Identifier	bytes		967363	1					
ANR	967476	IdentifierDecl	* chars		967363	1					
ANR	967477	IdentifierDeclType	char *		967363	0					
ANR	967478	Identifier	chars		967363	1					
ANR	967479	IdentifierDeclStatement	"char * ebytes , * echars ;"	1630:1:54944:54965	967363	9	True				
ANR	967480	IdentifierDecl	* ebytes		967363	0					
ANR	967481	IdentifierDeclType	char *		967363	0					
ANR	967482	Identifier	ebytes		967363	1					
ANR	967483	IdentifierDecl	* echars		967363	1					
ANR	967484	IdentifierDeclType	char *		967363	0					
ANR	967485	Identifier	echars		967363	1					
ANR	967486	IdentifierDeclStatement	ut64 fend = UT64_MAX ;	1631:1:55004:55024	967363	10	True				
ANR	967487	IdentifierDecl	fend = UT64_MAX		967363	0					
ANR	967488	IdentifierDeclType	ut64		967363	0					
ANR	967489	Identifier	fend		967363	1					
ANR	967490	AssignmentExpression	fend = UT64_MAX		967363	2		=			
ANR	967491	Identifier	UT64_MAX		967363	0					
ANR	967492	Identifier	UT64_MAX		967363	1					
ANR	967493	IdentifierDeclStatement	char * comment ;	1632:1:55027:55040	967363	11	True				
ANR	967494	IdentifierDecl	* comment		967363	0					
ANR	967495	IdentifierDeclType	char *		967363	0					
ANR	967496	Identifier	comment		967363	1					
ANR	967497	IdentifierDeclStatement	"int i , j , low , max , here , rows ;"	1633:1:55043:55073	967363	12	True				
ANR	967498	IdentifierDecl	i		967363	0					
ANR	967499	IdentifierDeclType	int		967363	0					
ANR	967500	Identifier	i		967363	1					
ANR	967501	IdentifierDecl	j		967363	1					
ANR	967502	IdentifierDeclType	int		967363	0					
ANR	967503	Identifier	j		967363	1					
ANR	967504	IdentifierDecl	low		967363	2					
ANR	967505	IdentifierDeclType	int		967363	0					
ANR	967506	Identifier	low		967363	1					
ANR	967507	IdentifierDecl	max		967363	3					
ANR	967508	IdentifierDeclType	int		967363	0					
ANR	967509	Identifier	max		967363	1					
ANR	967510	IdentifierDecl	here		967363	4					
ANR	967511	IdentifierDeclType	int		967363	0					
ANR	967512	Identifier	here		967363	1					
ANR	967513	IdentifierDecl	rows		967363	5					
ANR	967514	IdentifierDeclType	int		967363	0					
ANR	967515	Identifier	rows		967363	1					
ANR	967516	IdentifierDeclStatement	"bool marks = false , setcolor = true , hascolor = false ;"	1634:1:55076:55129	967363	13	True				
ANR	967517	IdentifierDecl	marks = false		967363	0					
ANR	967518	IdentifierDeclType	bool		967363	0					
ANR	967519	Identifier	marks		967363	1					
ANR	967520	AssignmentExpression	marks = false		967363	2		=			
ANR	967521	Identifier	false		967363	0					
ANR	967522	Identifier	false		967363	1					
ANR	967523	IdentifierDecl	setcolor = true		967363	1					
ANR	967524	IdentifierDeclType	bool		967363	0					
ANR	967525	Identifier	setcolor		967363	1					
ANR	967526	AssignmentExpression	setcolor = true		967363	2		=			
ANR	967527	Identifier	true		967363	0					
ANR	967528	Identifier	true		967363	1					
ANR	967529	IdentifierDecl	hascolor = false		967363	2					
ANR	967530	IdentifierDeclType	bool		967363	0					
ANR	967531	Identifier	hascolor		967363	1					
ANR	967532	AssignmentExpression	hascolor = false		967363	2		=			
ANR	967533	Identifier	false		967363	0					
ANR	967534	Identifier	false		967363	1					
ANR	967535	IdentifierDeclStatement	ut8 ch = 0 ;	1635:1:55132:55142	967363	14	True				
ANR	967536	IdentifierDecl	ch = 0		967363	0					
ANR	967537	IdentifierDeclType	ut8		967363	0					
ANR	967538	Identifier	ch		967363	1					
ANR	967539	AssignmentExpression	ch = 0		967363	2		=			
ANR	967540	Identifier	ch		967363	0					
ANR	967541	PrimaryExpression	0		967363	1					
ANR	967542	IdentifierDeclStatement	char * colors [ 10 ] = { NULL } ;	1636:1:55145:55170	967363	15	True				
ANR	967543	IdentifierDecl	* colors [ 10 ] = { NULL }		967363	0					
ANR	967544	IdentifierDeclType	char * [ 10 ]		967363	0					
ANR	967545	Identifier	colors		967363	1					
ANR	967546	PrimaryExpression	10		967363	2					
ANR	967547	AssignmentExpression	* colors [ 10 ] = { NULL }		967363	3		=			
ANR	967548	Identifier	colors		967363	0					
ANR	967549	InitializerList	NULL		967363	1					
ANR	967550	Identifier	NULL		967363	0					
ANR	967551	ForStatement	for ( i = 0 ; i < 10 ; i ++ )		967363	16					
ANR	967552	ForInit	i = 0 ;	1637:6:55178:55183	967363	0	True				
ANR	967553	AssignmentExpression	i = 0		967363	0		=			
ANR	967554	Identifier	i		967363	0					
ANR	967555	PrimaryExpression	0		967363	1					
ANR	967556	Condition	i < 10	1637:13:55185:55190	967363	1	True				
ANR	967557	RelationalExpression	i < 10		967363	0		<			
ANR	967558	Identifier	i		967363	0					
ANR	967559	PrimaryExpression	10		967363	1					
ANR	967560	PostIncDecOperationExpression	i ++	1637:21:55193:55195	967363	2	True				
ANR	967561	Identifier	i		967363	0					
ANR	967562	IncDec	++		967363	1					
ANR	967563	CompoundStatement		18:26:681:681	967363	3					
ANR	967564	ExpressionStatement	"colors [ i ] = r_cons_rainbow_get ( i , 10 , false )"	1638:2:55202:55247	967363	0	True				
ANR	967565	AssignmentExpression	"colors [ i ] = r_cons_rainbow_get ( i , 10 , false )"		967363	0		=			
ANR	967566	ArrayIndexing	colors [ i ]		967363	0					
ANR	967567	Identifier	colors		967363	0					
ANR	967568	Identifier	i		967363	1					
ANR	967569	CallExpression	"r_cons_rainbow_get ( i , 10 , false )"		967363	1					
ANR	967570	Callee	r_cons_rainbow_get		967363	0					
ANR	967571	Identifier	r_cons_rainbow_get		967363	0					
ANR	967572	ArgumentList	i		967363	1					
ANR	967573	Argument	i		967363	0					
ANR	967574	Identifier	i		967363	0					
ANR	967575	Argument	10		967363	1					
ANR	967576	PrimaryExpression	10		967363	0					
ANR	967577	Argument	false		967363	2					
ANR	967578	Identifier	false		967363	0					
ANR	967579	IdentifierDeclStatement	const int col = core -> print -> col ;	1640:1:55253:55285	967363	17	True				
ANR	967580	IdentifierDecl	col = core -> print -> col		967363	0					
ANR	967581	IdentifierDeclType	const int		967363	0					
ANR	967582	Identifier	col		967363	1					
ANR	967583	AssignmentExpression	col = core -> print -> col		967363	2		=			
ANR	967584	Identifier	col		967363	0					
ANR	967585	PtrMemberAccess	core -> print -> col		967363	1					
ANR	967586	PtrMemberAccess	core -> print		967363	0					
ANR	967587	Identifier	core		967363	0					
ANR	967588	Identifier	print		967363	1					
ANR	967589	Identifier	col		967363	1					
ANR	967590	IdentifierDeclStatement	"RFlagItem * flag , * current_flag = NULL ;"	1641:1:55288:55325	967363	18	True				
ANR	967591	IdentifierDecl	* flag		967363	0					
ANR	967592	IdentifierDeclType	RFlagItem *		967363	0					
ANR	967593	Identifier	flag		967363	1					
ANR	967594	IdentifierDecl	* current_flag = NULL		967363	1					
ANR	967595	IdentifierDeclType	RFlagItem *		967363	0					
ANR	967596	Identifier	current_flag		967363	1					
ANR	967597	AssignmentExpression	* current_flag = NULL		967363	2		=			
ANR	967598	Identifier	NULL		967363	0					
ANR	967599	Identifier	NULL		967363	1					
ANR	967600	IdentifierDeclStatement	char * * note ;	1642:1:55328:55339	967363	19	True				
ANR	967601	IdentifierDecl	* * note		967363	0					
ANR	967602	IdentifierDeclType	char * *		967363	0					
ANR	967603	Identifier	note		967363	1					
ANR	967604	IdentifierDeclStatement	"int html = r_config_get_i ( core -> config , ""scr.html"" ) ;"	1643:1:55342:55394	967363	20	True				
ANR	967605	IdentifierDecl	"html = r_config_get_i ( core -> config , ""scr.html"" )"		967363	0					
ANR	967606	IdentifierDeclType	int		967363	0					
ANR	967607	Identifier	html		967363	1					
ANR	967608	AssignmentExpression	"html = r_config_get_i ( core -> config , ""scr.html"" )"		967363	2		=			
ANR	967609	Identifier	html		967363	0					
ANR	967610	CallExpression	"r_config_get_i ( core -> config , ""scr.html"" )"		967363	1					
ANR	967611	Callee	r_config_get_i		967363	0					
ANR	967612	Identifier	r_config_get_i		967363	0					
ANR	967613	ArgumentList	core -> config		967363	1					
ANR	967614	Argument	core -> config		967363	0					
ANR	967615	PtrMemberAccess	core -> config		967363	0					
ANR	967616	Identifier	core		967363	0					
ANR	967617	Identifier	config		967363	1					
ANR	967618	Argument	"""scr.html"""		967363	1					
ANR	967619	PrimaryExpression	"""scr.html"""		967363	0					
ANR	967620	IdentifierDeclStatement	int nb_cons_cols ;	1644:1:55397:55413	967363	21	True				
ANR	967621	IdentifierDecl	nb_cons_cols		967363	0					
ANR	967622	IdentifierDeclType	int		967363	0					
ANR	967623	Identifier	nb_cons_cols		967363	1					
ANR	967624	IdentifierDeclStatement	bool compact = false ;	1645:1:55416:55436	967363	22	True				
ANR	967625	IdentifierDecl	compact = false		967363	0					
ANR	967626	IdentifierDeclType	bool		967363	0					
ANR	967627	Identifier	compact		967363	1					
ANR	967628	AssignmentExpression	compact = false		967363	2		=			
ANR	967629	Identifier	false		967363	0					
ANR	967630	Identifier	false		967363	1					
ANR	967631	IfStatement	if ( core -> print )		967363	23					
ANR	967632	Condition	core -> print	1647:5:55444:55454	967363	0	True				
ANR	967633	PtrMemberAccess	core -> print		967363	0					
ANR	967634	Identifier	core		967363	0					
ANR	967635	Identifier	print		967363	1					
ANR	967636	CompoundStatement		28:18:940:940	967363	1					
ANR	967637	ExpressionStatement	compact = core -> print -> flags & R_PRINT_FLAGS_COMPACT	1648:2:55461:55513	967363	0	True				
ANR	967638	AssignmentExpression	compact = core -> print -> flags & R_PRINT_FLAGS_COMPACT		967363	0		=			
ANR	967639	Identifier	compact		967363	0					
ANR	967640	BitAndExpression	core -> print -> flags & R_PRINT_FLAGS_COMPACT		967363	1		&			
ANR	967641	PtrMemberAccess	core -> print -> flags		967363	0					
ANR	967642	PtrMemberAccess	core -> print		967363	0					
ANR	967643	Identifier	core		967363	0					
ANR	967644	Identifier	print		967363	1					
ANR	967645	Identifier	flags		967363	1					
ANR	967646	Identifier	R_PRINT_FLAGS_COMPACT		967363	1					
ANR	967647	IdentifierDeclStatement	"char * format = compact ? "" %X %X"" : "" %X %X "" ;"	1650:1:55519:55564	967363	24	True				
ANR	967648	IdentifierDecl	"* format = compact ? "" %X %X"" : "" %X %X """		967363	0					
ANR	967649	IdentifierDeclType	char *		967363	0					
ANR	967650	Identifier	format		967363	1					
ANR	967651	AssignmentExpression	"* format = compact ? "" %X %X"" : "" %X %X """		967363	2		=			
ANR	967652	Identifier	format		967363	0					
ANR	967653	ConditionalExpression	"compact ? "" %X %X"" : "" %X %X """		967363	1					
ANR	967654	Condition	compact		967363	0					
ANR	967655	Identifier	compact		967363	0					
ANR	967656	PrimaryExpression	""" %X %X"""		967363	1					
ANR	967657	PrimaryExpression	""" %X %X """		967363	2					
ANR	967658	IdentifierDeclStatement	int step = compact ? 4 : 5 ;	1651:1:55567:55593	967363	25	True				
ANR	967659	IdentifierDecl	step = compact ? 4 : 5		967363	0					
ANR	967660	IdentifierDeclType	int		967363	0					
ANR	967661	Identifier	step		967363	1					
ANR	967662	AssignmentExpression	step = compact ? 4 : 5		967363	2		=			
ANR	967663	Identifier	step		967363	0					
ANR	967664	ConditionalExpression	compact ? 4 : 5		967363	1					
ANR	967665	Condition	compact		967363	0					
ANR	967666	Identifier	compact		967363	0					
ANR	967667	PrimaryExpression	4		967363	1					
ANR	967668	PrimaryExpression	5		967363	2					
ANR	967669	IfStatement	if ( nb_cols < 1 )		967363	26					
ANR	967670	Condition	nb_cols < 1	1654:5:55634:55644	967363	0	True				
ANR	967671	RelationalExpression	nb_cols < 1		967363	0		<			
ANR	967672	Identifier	nb_cols		967363	0					
ANR	967673	PrimaryExpression	1		967363	1					
ANR	967674	CompoundStatement		35:18:1130:1130	967363	1					
ANR	967675	ExpressionStatement	nb_cols = 16	1655:2:55651:55663	967363	0	True				
ANR	967676	AssignmentExpression	nb_cols = 16		967363	0		=			
ANR	967677	Identifier	nb_cols		967363	0					
ANR	967678	PrimaryExpression	16		967363	1					
ANR	967679	ExpressionStatement	nb_cols -= ( nb_cols % 2 )	1657:1:55669:55693	967363	27	True				
ANR	967680	AssignmentExpression	nb_cols -= ( nb_cols % 2 )		967363	0		-=			
ANR	967681	Identifier	nb_cols		967363	0					
ANR	967682	MultiplicativeExpression	nb_cols % 2		967363	1		%			
ANR	967683	Identifier	nb_cols		967363	0					
ANR	967684	PrimaryExpression	2		967363	1					
ANR	967685	IfStatement	if ( nb_cols < 1 )		967363	28					
ANR	967686	Condition	nb_cols < 1	1658:5:55726:55736	967363	0	True				
ANR	967687	RelationalExpression	nb_cols < 1		967363	0		<			
ANR	967688	Identifier	nb_cols		967363	0					
ANR	967689	PrimaryExpression	1		967363	1					
ANR	967690	CompoundStatement		39:18:1222:1222	967363	1					
ANR	967691	ReturnStatement	return ;	1659:2:55743:55749	967363	0	True				
ANR	967692	ExpressionStatement	nb_cons_cols = 12 + nb_cols * 2 + ( nb_cols / 2 )	1662:1:55756:55803	967363	29	True				
ANR	967693	AssignmentExpression	nb_cons_cols = 12 + nb_cols * 2 + ( nb_cols / 2 )		967363	0		=			
ANR	967694	Identifier	nb_cons_cols		967363	0					
ANR	967695	AdditiveExpression	12 + nb_cols * 2 + ( nb_cols / 2 )		967363	1		+			
ANR	967696	PrimaryExpression	12		967363	0					
ANR	967697	AdditiveExpression	nb_cols * 2 + ( nb_cols / 2 )		967363	1		+			
ANR	967698	MultiplicativeExpression	nb_cols * 2		967363	0		*			
ANR	967699	Identifier	nb_cols		967363	0					
ANR	967700	PrimaryExpression	2		967363	1					
ANR	967701	MultiplicativeExpression	nb_cols / 2		967363	1		/			
ANR	967702	Identifier	nb_cols		967363	0					
ANR	967703	PrimaryExpression	2		967363	1					
ANR	967704	ExpressionStatement	nb_cons_cols += 17	1663:1:55806:55824	967363	30	True				
ANR	967705	AssignmentExpression	nb_cons_cols += 17		967363	0		+=			
ANR	967706	Identifier	nb_cons_cols		967363	0					
ANR	967707	PrimaryExpression	17		967363	1					
ANR	967708	ExpressionStatement	rows = len / nb_cols	1664:1:55827:55847	967363	31	True				
ANR	967709	AssignmentExpression	rows = len / nb_cols		967363	0		=			
ANR	967710	Identifier	rows		967363	0					
ANR	967711	MultiplicativeExpression	len / nb_cols		967363	1		/			
ANR	967712	Identifier	len		967363	0					
ANR	967713	Identifier	nb_cols		967363	1					
ANR	967714	ExpressionStatement	"chars = calloc ( nb_cols * 40 , sizeof ( char ) )"	1666:1:55851:55895	967363	32	True				
ANR	967715	AssignmentExpression	"chars = calloc ( nb_cols * 40 , sizeof ( char ) )"		967363	0		=			
ANR	967716	Identifier	chars		967363	0					
ANR	967717	CallExpression	"calloc ( nb_cols * 40 , sizeof ( char ) )"		967363	1					
ANR	967718	Callee	calloc		967363	0					
ANR	967719	Identifier	calloc		967363	0					
ANR	967720	ArgumentList	nb_cols * 40		967363	1					
ANR	967721	Argument	nb_cols * 40		967363	0					
ANR	967722	MultiplicativeExpression	nb_cols * 40		967363	0		*			
ANR	967723	Identifier	nb_cols		967363	0					
ANR	967724	PrimaryExpression	40		967363	1					
ANR	967725	Argument	sizeof ( char )		967363	1					
ANR	967726	SizeofExpression	sizeof ( char )		967363	0					
ANR	967727	Sizeof	sizeof		967363	0					
ANR	967728	SizeofOperand	char		967363	1					
ANR	967729	IfStatement	if ( ! chars )		967363	33					
ANR	967730	Condition	! chars	1667:5:55902:55907	967363	0	True				
ANR	967731	UnaryOperationExpression	! chars		967363	0					
ANR	967732	UnaryOperator	!		967363	0					
ANR	967733	Identifier	chars		967363	1					
ANR	967734	GotoStatement	goto err_chars ;	1667:13:55910:55924	967363	1	True				
ANR	967735	Identifier	err_chars		967363	0					
ANR	967736	ExpressionStatement	"note = calloc ( nb_cols , sizeof ( char * ) )"	1668:1:55927:55967	967363	34	True				
ANR	967737	AssignmentExpression	"note = calloc ( nb_cols , sizeof ( char * ) )"		967363	0		=			
ANR	967738	Identifier	note		967363	0					
ANR	967739	CallExpression	"calloc ( nb_cols , sizeof ( char * ) )"		967363	1					
ANR	967740	Callee	calloc		967363	0					
ANR	967741	Identifier	calloc		967363	0					
ANR	967742	ArgumentList	nb_cols		967363	1					
ANR	967743	Argument	nb_cols		967363	0					
ANR	967744	Identifier	nb_cols		967363	0					
ANR	967745	Argument	sizeof ( char * )		967363	1					
ANR	967746	SizeofExpression	sizeof ( char * )		967363	0					
ANR	967747	Sizeof	sizeof		967363	0					
ANR	967748	SizeofOperand	char *		967363	1					
ANR	967749	IfStatement	if ( ! note )		967363	35					
ANR	967750	Condition	! note	1669:5:55974:55978	967363	0	True				
ANR	967751	UnaryOperationExpression	! note		967363	0					
ANR	967752	UnaryOperator	!		967363	0					
ANR	967753	Identifier	note		967363	1					
ANR	967754	GotoStatement	goto err_note ;	1669:12:55981:55994	967363	1	True				
ANR	967755	Identifier	err_note		967363	0					
ANR	967756	ExpressionStatement	"bytes = calloc ( nb_cons_cols * 40 , sizeof ( char ) )"	1670:1:55997:56046	967363	36	True				
ANR	967757	AssignmentExpression	"bytes = calloc ( nb_cons_cols * 40 , sizeof ( char ) )"		967363	0		=			
ANR	967758	Identifier	bytes		967363	0					
ANR	967759	CallExpression	"calloc ( nb_cons_cols * 40 , sizeof ( char ) )"		967363	1					
ANR	967760	Callee	calloc		967363	0					
ANR	967761	Identifier	calloc		967363	0					
ANR	967762	ArgumentList	nb_cons_cols * 40		967363	1					
ANR	967763	Argument	nb_cons_cols * 40		967363	0					
ANR	967764	MultiplicativeExpression	nb_cons_cols * 40		967363	0		*			
ANR	967765	Identifier	nb_cons_cols		967363	0					
ANR	967766	PrimaryExpression	40		967363	1					
ANR	967767	Argument	sizeof ( char )		967363	1					
ANR	967768	SizeofExpression	sizeof ( char )		967363	0					
ANR	967769	Sizeof	sizeof		967363	0					
ANR	967770	SizeofOperand	char		967363	1					
ANR	967771	IfStatement	if ( ! bytes )		967363	37					
ANR	967772	Condition	! bytes	1671:5:56053:56058	967363	0	True				
ANR	967773	UnaryOperationExpression	! bytes		967363	0					
ANR	967774	UnaryOperator	!		967363	0					
ANR	967775	Identifier	bytes		967363	1					
ANR	967776	GotoStatement	goto err_bytes ;	1671:13:56061:56075	967363	1	True				
ANR	967777	Identifier	err_bytes		967363	0					
ANR	967778	Statement	int	1673:1:56084:56086	967363	38	True				
ANR	967779	Statement	addrpadlen	1673:5:56088:56097	967363	39	True				
ANR	967780	Statement	=	1673:16:56099:56099	967363	40	True				
ANR	967781	Statement	strlen	1673:18:56101:56106	967363	41	True				
ANR	967782	Statement	(	1673:25:56108:56108	967363	42	True				
ANR	967783	Statement	sdb_fmt	1673:26:56109:56115	967363	43	True				
ANR	967784	Statement	(	1673:34:56117:56117	967363	44	True				
ANR	967785	Statement	"""%08"""	1673:35:56118:56122	967363	45	True				
ANR	967786	Statement	PFMT64x	1673:40:56123:56129	967363	46	True				
ANR	967787	Statement	","	1673:47:56130:56130	967363	47	True				
ANR	967788	Statement	addr	1673:49:56132:56135	967363	48	True				
ANR	967789	Statement	)	1673:53:56136:56136	967363	49	True				
ANR	967790	Statement	)	1673:54:56137:56137	967363	50	True				
ANR	967791	ExpressionStatement	- 8	1673:56:56139:56142	967363	51	True				
ANR	967792	UnaryOperationExpression	- 8		967363	0					
ANR	967793	UnaryOperator	-		967363	0					
ANR	967794	PrimaryExpression	8		967363	1					
ANR	967795	IdentifierDeclStatement	char addrpad [ 32 ] ;	1674:1:56145:56161	967363	52	True				
ANR	967796	IdentifierDecl	addrpad [ 32 ]		967363	0					
ANR	967797	IdentifierDeclType	char [ 32 ]		967363	0					
ANR	967798	Identifier	addrpad		967363	1					
ANR	967799	PrimaryExpression	32		967363	2					
ANR	967800	IfStatement	if ( addrpadlen > 0 )		967363	53					
ANR	967801	Condition	addrpadlen > 0	1675:5:56168:56181	967363	0	True				
ANR	967802	RelationalExpression	addrpadlen > 0		967363	0		>			
ANR	967803	Identifier	addrpadlen		967363	0					
ANR	967804	PrimaryExpression	0		967363	1					
ANR	967805	CompoundStatement		56:21:1667:1667	967363	1					
ANR	967806	ExpressionStatement	"memset ( addrpad , ' ' , addrpadlen )"	1676:2:56188:56221	967363	0	True				
ANR	967807	CallExpression	"memset ( addrpad , ' ' , addrpadlen )"		967363	0					
ANR	967808	Callee	memset		967363	0					
ANR	967809	Identifier	memset		967363	0					
ANR	967810	ArgumentList	addrpad		967363	1					
ANR	967811	Argument	addrpad		967363	0					
ANR	967812	Identifier	addrpad		967363	0					
ANR	967813	Argument	' '		967363	1					
ANR	967814	PrimaryExpression	' '		967363	0					
ANR	967815	Argument	addrpadlen		967363	2					
ANR	967816	Identifier	addrpadlen		967363	0					
ANR	967817	ExpressionStatement	addrpad [ addrpadlen ] = 0	1677:2:56225:56248	967363	1	True				
ANR	967818	AssignmentExpression	addrpad [ addrpadlen ] = 0		967363	0		=			
ANR	967819	ArrayIndexing	addrpad [ addrpadlen ]		967363	0					
ANR	967820	Identifier	addrpad		967363	0					
ANR	967821	Identifier	addrpadlen		967363	1					
ANR	967822	PrimaryExpression	0		967363	1					
ANR	967823	ExpressionStatement	"strcpy ( bytes , addrpad )"	1679:2:56287:56310	967363	2	True				
ANR	967824	CallExpression	"strcpy ( bytes , addrpad )"		967363	0					
ANR	967825	Callee	strcpy		967363	0					
ANR	967826	Identifier	strcpy		967363	0					
ANR	967827	ArgumentList	bytes		967363	1					
ANR	967828	Argument	bytes		967363	0					
ANR	967829	Identifier	bytes		967363	0					
ANR	967830	Argument	addrpad		967363	1					
ANR	967831	Identifier	addrpad		967363	0					
ANR	967832	ElseStatement	else		967363	0					
ANR	967833	CompoundStatement		61:8:1803:1803	967363	0					
ANR	967834	ExpressionStatement	* addrpad = 0	1681:2:56324:56336	967363	0	True				
ANR	967835	AssignmentExpression	* addrpad = 0		967363	0		=			
ANR	967836	UnaryOperationExpression	* addrpad		967363	0					
ANR	967837	UnaryOperator	*		967363	0					
ANR	967838	Identifier	addrpad		967363	1					
ANR	967839	PrimaryExpression	0		967363	1					
ANR	967840	ExpressionStatement	addrpadlen = 0	1682:2:56340:56354	967363	1	True				
ANR	967841	AssignmentExpression	addrpadlen = 0		967363	0		=			
ANR	967842	Identifier	addrpadlen		967363	0					
ANR	967843	PrimaryExpression	0		967363	1					
ANR	967844	ExpressionStatement	"strcpy ( bytes + addrpadlen , ""- offset -  "" )"	1684:1:56360:56403	967363	54	True				
ANR	967845	CallExpression	"strcpy ( bytes + addrpadlen , ""- offset -  "" )"		967363	0					
ANR	967846	Callee	strcpy		967363	0					
ANR	967847	Identifier	strcpy		967363	0					
ANR	967848	ArgumentList	bytes + addrpadlen		967363	1					
ANR	967849	Argument	bytes + addrpadlen		967363	0					
ANR	967850	AdditiveExpression	bytes + addrpadlen		967363	0		+			
ANR	967851	Identifier	bytes		967363	0					
ANR	967852	Identifier	addrpadlen		967363	1					
ANR	967853	Argument	"""- offset -  """		967363	1					
ANR	967854	PrimaryExpression	"""- offset -  """		967363	0					
ANR	967855	ExpressionStatement	j = strlen ( bytes )	1686:1:56413:56431	967363	55	True				
ANR	967856	AssignmentExpression	j = strlen ( bytes )		967363	0		=			
ANR	967857	Identifier	j		967363	0					
ANR	967858	CallExpression	strlen ( bytes )		967363	1					
ANR	967859	Callee	strlen		967363	0					
ANR	967860	Identifier	strlen		967363	0					
ANR	967861	ArgumentList	bytes		967363	1					
ANR	967862	Argument	bytes		967363	0					
ANR	967863	Identifier	bytes		967363	0					
ANR	967864	ForStatement	for ( i = 0 ; i < nb_cols ; i += 2 )		967363	56					
ANR	967865	ForInit	i = 0 ;	1687:6:56439:56444	967363	0	True				
ANR	967866	AssignmentExpression	i = 0		967363	0		=			
ANR	967867	Identifier	i		967363	0					
ANR	967868	PrimaryExpression	0		967363	1					
ANR	967869	Condition	i < nb_cols	1687:13:56446:56456	967363	1	True				
ANR	967870	RelationalExpression	i < nb_cols		967363	0		<			
ANR	967871	Identifier	i		967363	0					
ANR	967872	Identifier	nb_cols		967363	1					
ANR	967873	AssignmentExpression	i += 2	1687:26:56459:56464	967363	2	True	+=			
ANR	967874	Identifier	i		967363	0					
ANR	967875	PrimaryExpression	2		967363	1					
ANR	967876	CompoundStatement		68:34:1950:1950	967363	3					
ANR	967877	ExpressionStatement	"sprintf ( bytes + j , format , ( i & 0xf ) , ( i + 1 ) & 0xf )"	1688:2:56471:56524	967363	0	True				
ANR	967878	CallExpression	"sprintf ( bytes + j , format , ( i & 0xf ) , ( i + 1 ) & 0xf )"		967363	0					
ANR	967879	Callee	sprintf		967363	0					
ANR	967880	Identifier	sprintf		967363	0					
ANR	967881	ArgumentList	bytes + j		967363	1					
ANR	967882	Argument	bytes + j		967363	0					
ANR	967883	AdditiveExpression	bytes + j		967363	0		+			
ANR	967884	Identifier	bytes		967363	0					
ANR	967885	Identifier	j		967363	1					
ANR	967886	Argument	format		967363	1					
ANR	967887	Identifier	format		967363	0					
ANR	967888	Argument	i & 0xf		967363	2					
ANR	967889	BitAndExpression	i & 0xf		967363	0		&			
ANR	967890	Identifier	i		967363	0					
ANR	967891	PrimaryExpression	0xf		967363	1					
ANR	967892	Argument	( i + 1 ) & 0xf		967363	3					
ANR	967893	BitAndExpression	( i + 1 ) & 0xf		967363	0		&			
ANR	967894	AdditiveExpression	i + 1		967363	0		+			
ANR	967895	Identifier	i		967363	0					
ANR	967896	PrimaryExpression	1		967363	1					
ANR	967897	PrimaryExpression	0xf		967363	1					
ANR	967898	ExpressionStatement	j += step	1689:2:56528:56537	967363	1	True				
ANR	967899	AssignmentExpression	j += step		967363	0		+=			
ANR	967900	Identifier	j		967363	0					
ANR	967901	Identifier	step		967363	1					
ANR	967902	ExpressionStatement	j --	1691:1:56543:56546	967363	57	True				
ANR	967903	PostIncDecOperationExpression	j --		967363	0					
ANR	967904	Identifier	j		967363	0					
ANR	967905	IncDec	--		967363	1					
ANR	967906	ExpressionStatement	"strcpy ( bytes + j , ""     "" )"	1692:1:56549:56576	967363	58	True				
ANR	967907	CallExpression	"strcpy ( bytes + j , ""     "" )"		967363	0					
ANR	967908	Callee	strcpy		967363	0					
ANR	967909	Identifier	strcpy		967363	0					
ANR	967910	ArgumentList	bytes + j		967363	1					
ANR	967911	Argument	bytes + j		967363	0					
ANR	967912	AdditiveExpression	bytes + j		967363	0		+			
ANR	967913	Identifier	bytes		967363	0					
ANR	967914	Identifier	j		967363	1					
ANR	967915	Argument	"""     """		967363	1					
ANR	967916	PrimaryExpression	"""     """		967363	0					
ANR	967917	ExpressionStatement	j += 2	1693:1:56579:56585	967363	59	True				
ANR	967918	AssignmentExpression	j += 2		967363	0		+=			
ANR	967919	Identifier	j		967363	0					
ANR	967920	PrimaryExpression	2		967363	1					
ANR	967921	ForStatement	for ( i = 0 ; i < nb_cols ; i ++ )		967363	60					
ANR	967922	ForInit	i = 0 ;	1694:6:56593:56598	967363	0	True				
ANR	967923	AssignmentExpression	i = 0		967363	0		=			
ANR	967924	Identifier	i		967363	0					
ANR	967925	PrimaryExpression	0		967363	1					
ANR	967926	Condition	i < nb_cols	1694:13:56600:56610	967363	1	True				
ANR	967927	RelationalExpression	i < nb_cols		967363	0		<			
ANR	967928	Identifier	i		967363	0					
ANR	967929	Identifier	nb_cols		967363	1					
ANR	967930	PostIncDecOperationExpression	i ++	1694:26:56613:56615	967363	2	True				
ANR	967931	Identifier	i		967363	0					
ANR	967932	IncDec	++		967363	1					
ANR	967933	CompoundStatement		75:31:2101:2101	967363	3					
ANR	967934	ExpressionStatement	"sprintf ( bytes + j + i , ""%0X"" , i % 17 )"	1695:2:56622:56660	967363	0	True				
ANR	967935	CallExpression	"sprintf ( bytes + j + i , ""%0X"" , i % 17 )"		967363	0					
ANR	967936	Callee	sprintf		967363	0					
ANR	967937	Identifier	sprintf		967363	0					
ANR	967938	ArgumentList	bytes + j + i		967363	1					
ANR	967939	Argument	bytes + j + i		967363	0					
ANR	967940	AdditiveExpression	bytes + j + i		967363	0		+			
ANR	967941	Identifier	bytes		967363	0					
ANR	967942	AdditiveExpression	j + i		967363	1		+			
ANR	967943	Identifier	j		967363	0					
ANR	967944	Identifier	i		967363	1					
ANR	967945	Argument	"""%0X"""		967363	1					
ANR	967946	PrimaryExpression	"""%0X"""		967363	0					
ANR	967947	Argument	i % 17		967363	2					
ANR	967948	MultiplicativeExpression	i % 17		967363	0		%			
ANR	967949	Identifier	i		967363	0					
ANR	967950	PrimaryExpression	17		967363	1					
ANR	967951	IfStatement	if ( usecolor )		967363	61					
ANR	967952	Condition	usecolor	1697:5:56670:56677	967363	0	True				
ANR	967953	Identifier	usecolor		967363	0					
ANR	967954	CompoundStatement		78:15:2163:2163	967363	1					
ANR	967955	ExpressionStatement	r_cons_strcat ( Color_GREEN )	1698:2:56684:56711	967363	0	True				
ANR	967956	CallExpression	r_cons_strcat ( Color_GREEN )		967363	0					
ANR	967957	Callee	r_cons_strcat		967363	0					
ANR	967958	Identifier	r_cons_strcat		967363	0					
ANR	967959	ArgumentList	Color_GREEN		967363	1					
ANR	967960	Argument	Color_GREEN		967363	0					
ANR	967961	Identifier	Color_GREEN		967363	0					
ANR	967962	ExpressionStatement	r_cons_strcat ( bytes )	1699:2:56715:56736	967363	1	True				
ANR	967963	CallExpression	r_cons_strcat ( bytes )		967363	0					
ANR	967964	Callee	r_cons_strcat		967363	0					
ANR	967965	Identifier	r_cons_strcat		967363	0					
ANR	967966	ArgumentList	bytes		967363	1					
ANR	967967	Argument	bytes		967363	0					
ANR	967968	Identifier	bytes		967363	0					
ANR	967969	ExpressionStatement	r_cons_strcat ( Color_RESET )	1700:2:56740:56767	967363	2	True				
ANR	967970	CallExpression	r_cons_strcat ( Color_RESET )		967363	0					
ANR	967971	Callee	r_cons_strcat		967363	0					
ANR	967972	Identifier	r_cons_strcat		967363	0					
ANR	967973	ArgumentList	Color_RESET		967363	1					
ANR	967974	Argument	Color_RESET		967363	0					
ANR	967975	Identifier	Color_RESET		967363	0					
ANR	967976	ElseStatement	else		967363	0					
ANR	967977	CompoundStatement		82:8:2260:2260	967363	0					
ANR	967978	ExpressionStatement	r_cons_strcat ( bytes )	1702:2:56781:56802	967363	0	True				
ANR	967979	CallExpression	r_cons_strcat ( bytes )		967363	0					
ANR	967980	Callee	r_cons_strcat		967363	0					
ANR	967981	Identifier	r_cons_strcat		967363	0					
ANR	967982	ArgumentList	bytes		967363	1					
ANR	967983	Argument	bytes		967363	0					
ANR	967984	Identifier	bytes		967363	0					
ANR	967985	ExpressionStatement	r_cons_newline ( )	1704:1:56808:56825	967363	62	True				
ANR	967986	CallExpression	r_cons_newline ( )		967363	0					
ANR	967987	Callee	r_cons_newline		967363	0					
ANR	967988	Identifier	r_cons_newline		967363	0					
ANR	967989	ArgumentList			967363	1					
ANR	967990	ForStatement	for ( i = 0 ; i < rows ; i ++ )		967363	63					
ANR	967991	ForInit	i = 0 ;	1707:6:56846:56851	967363	0	True				
ANR	967992	AssignmentExpression	i = 0		967363	0		=			
ANR	967993	Identifier	i		967363	0					
ANR	967994	PrimaryExpression	0		967363	1					
ANR	967995	Condition	i < rows	1707:13:56853:56860	967363	1	True				
ANR	967996	RelationalExpression	i < rows		967363	0		<			
ANR	967997	Identifier	i		967363	0					
ANR	967998	Identifier	rows		967363	1					
ANR	967999	PostIncDecOperationExpression	i ++	1707:23:56863:56865	967363	2	True				
ANR	968000	Identifier	i		967363	0					
ANR	968001	IncDec	++		967363	1					
ANR	968002	CompoundStatement		116:2:2966:2986	967363	3					
ANR	968003	ExpressionStatement	bytes [ 0 ] = '\\0'	1708:2:56872:56887	967363	0	True				
ANR	968004	AssignmentExpression	bytes [ 0 ] = '\\0'		967363	0		=			
ANR	968005	ArrayIndexing	bytes [ 0 ]		967363	0					
ANR	968006	Identifier	bytes		967363	0					
ANR	968007	PrimaryExpression	0		967363	1					
ANR	968008	PrimaryExpression	'\\0'		967363	1					
ANR	968009	ExpressionStatement	chars [ 0 ] = '\\0'	1709:2:56891:56906	967363	1	True				
ANR	968010	AssignmentExpression	chars [ 0 ] = '\\0'		967363	0		=			
ANR	968011	ArrayIndexing	chars [ 0 ]		967363	0					
ANR	968012	Identifier	chars		967363	0					
ANR	968013	PrimaryExpression	0		967363	1					
ANR	968014	PrimaryExpression	'\\0'		967363	1					
ANR	968015	ExpressionStatement	ebytes = bytes	1710:2:56910:56924	967363	2	True				
ANR	968016	AssignmentExpression	ebytes = bytes		967363	0		=			
ANR	968017	Identifier	ebytes		967363	0					
ANR	968018	Identifier	bytes		967363	1					
ANR	968019	ExpressionStatement	echars = chars	1711:2:56928:56942	967363	3	True				
ANR	968020	AssignmentExpression	echars = chars		967363	0		=			
ANR	968021	Identifier	echars		967363	0					
ANR	968022	Identifier	chars		967363	1					
ANR	968023	ExpressionStatement	hascolor = false	1712:2:56946:56962	967363	4	True				
ANR	968024	AssignmentExpression	hascolor = false		967363	0		=			
ANR	968025	Identifier	hascolor		967363	0					
ANR	968026	Identifier	false		967363	1					
ANR	968027	IdentifierDeclStatement	ut64 ea = addr ;	1713:2:56966:56980	967363	5	True				
ANR	968028	IdentifierDecl	ea = addr		967363	0					
ANR	968029	IdentifierDeclType	ut64		967363	0					
ANR	968030	Identifier	ea		967363	1					
ANR	968031	AssignmentExpression	ea = addr		967363	2		=			
ANR	968032	Identifier	addr		967363	0					
ANR	968033	Identifier	addr		967363	1					
ANR	968034	IfStatement	if ( core -> print -> pava )		967363	6					
ANR	968035	Condition	core -> print -> pava	1714:6:56988:57004	967363	0	True				
ANR	968036	PtrMemberAccess	core -> print -> pava		967363	0					
ANR	968037	PtrMemberAccess	core -> print		967363	0					
ANR	968038	Identifier	core		967363	0					
ANR	968039	Identifier	print		967363	1					
ANR	968040	Identifier	pava		967363	1					
ANR	968041	CompoundStatement		96:3:2495:2530	967363	1					
ANR	968042	IdentifierDeclStatement	"ut64 va = r_io_p2v ( core -> io , addr ) ;"	1715:3:57012:57047	967363	0	True				
ANR	968043	IdentifierDecl	"va = r_io_p2v ( core -> io , addr )"		967363	0					
ANR	968044	IdentifierDeclType	ut64		967363	0					
ANR	968045	Identifier	va		967363	1					
ANR	968046	AssignmentExpression	"va = r_io_p2v ( core -> io , addr )"		967363	2		=			
ANR	968047	Identifier	va		967363	0					
ANR	968048	CallExpression	"r_io_p2v ( core -> io , addr )"		967363	1					
ANR	968049	Callee	r_io_p2v		967363	0					
ANR	968050	Identifier	r_io_p2v		967363	0					
ANR	968051	ArgumentList	core -> io		967363	1					
ANR	968052	Argument	core -> io		967363	0					
ANR	968053	PtrMemberAccess	core -> io		967363	0					
ANR	968054	Identifier	core		967363	0					
ANR	968055	Identifier	io		967363	1					
ANR	968056	Argument	addr		967363	1					
ANR	968057	Identifier	addr		967363	0					
ANR	968058	IfStatement	if ( va != UT64_MAX )		967363	1					
ANR	968059	Condition	va != UT64_MAX	1716:7:57056:57069	967363	0	True				
ANR	968060	EqualityExpression	va != UT64_MAX		967363	0		!=			
ANR	968061	Identifier	va		967363	0					
ANR	968062	Identifier	UT64_MAX		967363	1					
ANR	968063	CompoundStatement		97:23:2555:2555	967363	1					
ANR	968064	ExpressionStatement	ea = va	1717:4:57078:57085	967363	0	True				
ANR	968065	AssignmentExpression	ea = va		967363	0		=			
ANR	968066	Identifier	ea		967363	0					
ANR	968067	Identifier	va		967363	1					
ANR	968068	IfStatement	if ( usecolor )		967363	7					
ANR	968069	Condition	usecolor	1721:6:57103:57110	967363	0	True				
ANR	968070	Identifier	usecolor		967363	0					
ANR	968071	CompoundStatement		102:16:2596:2596	967363	1					
ANR	968072	ExpressionStatement	"append ( ebytes , core -> cons -> context -> pal . offset )"	1722:3:57118:57166	967363	0	True				
ANR	968073	CallExpression	"append ( ebytes , core -> cons -> context -> pal . offset )"		967363	0					
ANR	968074	Callee	append		967363	0					
ANR	968075	Identifier	append		967363	0					
ANR	968076	ArgumentList	ebytes		967363	1					
ANR	968077	Argument	ebytes		967363	0					
ANR	968078	Identifier	ebytes		967363	0					
ANR	968079	Argument	core -> cons -> context -> pal . offset		967363	1					
ANR	968080	MemberAccess	core -> cons -> context -> pal . offset		967363	0					
ANR	968081	PtrMemberAccess	core -> cons -> context -> pal		967363	0					
ANR	968082	PtrMemberAccess	core -> cons -> context		967363	0					
ANR	968083	PtrMemberAccess	core -> cons		967363	0					
ANR	968084	Identifier	core		967363	0					
ANR	968085	Identifier	cons		967363	1					
ANR	968086	Identifier	context		967363	1					
ANR	968087	Identifier	pal		967363	1					
ANR	968088	Identifier	offset		967363	1					
ANR	968089	IfStatement	if ( showSection )		967363	8					
ANR	968090	Condition	showSection	1724:6:57178:57188	967363	0	True				
ANR	968091	Identifier	showSection		967363	0					
ANR	968092	CompoundStatement		107:3:2738:2774	967363	1					
ANR	968093	IdentifierDeclStatement	"const char * name = r_core_get_section_name ( core , ea ) ;"	1725:3:57196:57250	967363	0	True				
ANR	968094	IdentifierDecl	"* name = r_core_get_section_name ( core , ea )"		967363	0					
ANR	968095	IdentifierDeclType	const char *		967363	0					
ANR	968096	Identifier	name		967363	1					
ANR	968097	AssignmentExpression	"* name = r_core_get_section_name ( core , ea )"		967363	2		=			
ANR	968098	Identifier	name		967363	0					
ANR	968099	CallExpression	"r_core_get_section_name ( core , ea )"		967363	1					
ANR	968100	Callee	r_core_get_section_name		967363	0					
ANR	968101	Identifier	r_core_get_section_name		967363	0					
ANR	968102	ArgumentList	core		967363	1					
ANR	968103	Argument	core		967363	0					
ANR	968104	Identifier	core		967363	0					
ANR	968105	Argument	ea		967363	1					
ANR	968106	Identifier	ea		967363	0					
ANR	968107	IdentifierDeclStatement	"char * s = r_str_newf ( ""%20s "" , name ) ;"	1726:3:57255:57291	967363	1	True				
ANR	968108	IdentifierDecl	"* s = r_str_newf ( ""%20s "" , name )"		967363	0					
ANR	968109	IdentifierDeclType	char *		967363	0					
ANR	968110	Identifier	s		967363	1					
ANR	968111	AssignmentExpression	"* s = r_str_newf ( ""%20s "" , name )"		967363	2		=			
ANR	968112	Identifier	s		967363	0					
ANR	968113	CallExpression	"r_str_newf ( ""%20s "" , name )"		967363	1					
ANR	968114	Callee	r_str_newf		967363	0					
ANR	968115	Identifier	r_str_newf		967363	0					
ANR	968116	ArgumentList	"""%20s """		967363	1					
ANR	968117	Argument	"""%20s """		967363	0					
ANR	968118	PrimaryExpression	"""%20s """		967363	0					
ANR	968119	Argument	name		967363	1					
ANR	968120	Identifier	name		967363	0					
ANR	968121	ExpressionStatement	"append ( ebytes , s )"	1727:3:57296:57314	967363	2	True				
ANR	968122	CallExpression	"append ( ebytes , s )"		967363	0					
ANR	968123	Callee	append		967363	0					
ANR	968124	Identifier	append		967363	0					
ANR	968125	ArgumentList	ebytes		967363	1					
ANR	968126	Argument	ebytes		967363	0					
ANR	968127	Identifier	ebytes		967363	0					
ANR	968128	Argument	s		967363	1					
ANR	968129	Identifier	s		967363	0					
ANR	968130	ExpressionStatement	free ( s )	1728:3:57319:57327	967363	3	True				
ANR	968131	CallExpression	free ( s )		967363	0					
ANR	968132	Callee	free		967363	0					
ANR	968133	Identifier	free		967363	0					
ANR	968134	ArgumentList	s		967363	1					
ANR	968135	Argument	s		967363	0					
ANR	968136	Identifier	s		967363	0					
ANR	968137	Statement	ebytes	1730:2:57335:57340	967363	9	True				
ANR	968138	Statement	+=	1730:9:57342:57343	967363	10	True				
ANR	968139	Statement	sprintf	1730:12:57345:57351	967363	11	True				
ANR	968140	Statement	(	1730:20:57353:57353	967363	12	True				
ANR	968141	Statement	ebytes	1730:21:57354:57359	967363	13	True				
ANR	968142	Statement	","	1730:27:57360:57360	967363	14	True				
ANR	968143	Statement	"""0x%08"""	1730:29:57362:57368	967363	15	True				
ANR	968144	Statement	PFMT64x	1730:36:57369:57375	967363	16	True				
ANR	968145	Statement	","	1730:43:57376:57376	967363	17	True				
ANR	968146	Statement	ea	1730:45:57378:57379	967363	18	True				
ANR	968147	Statement	)	1730:47:57380:57380	967363	19	True				
ANR	968148	ExpressionStatement		1730:48:57381:57381	967363	20	True				
ANR	968149	IfStatement	if ( usecolor )		967363	21					
ANR	968150	Condition	usecolor	1731:6:57389:57396	967363	0	True				
ANR	968151	Identifier	usecolor		967363	0					
ANR	968152	CompoundStatement		112:16:2882:2882	967363	1					
ANR	968153	ExpressionStatement	"append ( ebytes , Color_RESET )"	1732:3:57404:57432	967363	0	True				
ANR	968154	CallExpression	"append ( ebytes , Color_RESET )"		967363	0					
ANR	968155	Callee	append		967363	0					
ANR	968156	Identifier	append		967363	0					
ANR	968157	ArgumentList	ebytes		967363	1					
ANR	968158	Argument	ebytes		967363	0					
ANR	968159	Identifier	ebytes		967363	0					
ANR	968160	Argument	Color_RESET		967363	1					
ANR	968161	Identifier	Color_RESET		967363	0					
ANR	968162	ExpressionStatement	"append ( ebytes , ( col == 1 ) ? "" |"" : ""  "" )"	1734:2:57440:57479	967363	22	True				
ANR	968163	CallExpression	"append ( ebytes , ( col == 1 ) ? "" |"" : ""  "" )"		967363	0					
ANR	968164	Callee	append		967363	0					
ANR	968165	Identifier	append		967363	0					
ANR	968166	ArgumentList	ebytes		967363	1					
ANR	968167	Argument	ebytes		967363	0					
ANR	968168	Identifier	ebytes		967363	0					
ANR	968169	Argument	"( col == 1 ) ? "" |"" : ""  """		967363	1					
ANR	968170	ConditionalExpression	"( col == 1 ) ? "" |"" : ""  """		967363	0					
ANR	968171	Condition	col == 1		967363	0					
ANR	968172	EqualityExpression	col == 1		967363	0		==			
ANR	968173	Identifier	col		967363	0					
ANR	968174	PrimaryExpression	1		967363	1					
ANR	968175	PrimaryExpression	""" |"""		967363	1					
ANR	968176	PrimaryExpression	"""  """		967363	2					
ANR	968177	IdentifierDeclStatement	bool hadflag = false ;	1735:2:57483:57503	967363	23	True				
ANR	968178	IdentifierDecl	hadflag = false		967363	0					
ANR	968179	IdentifierDeclType	bool		967363	0					
ANR	968180	Identifier	hadflag		967363	1					
ANR	968181	AssignmentExpression	hadflag = false		967363	2		=			
ANR	968182	Identifier	false		967363	0					
ANR	968183	Identifier	false		967363	1					
ANR	968184	ForStatement	for ( j = 0 ; j < nb_cols ; j ++ )		967363	24					
ANR	968185	ForInit	j = 0 ;	1736:7:57512:57517	967363	0	True				
ANR	968186	AssignmentExpression	j = 0		967363	0		=			
ANR	968187	Identifier	j		967363	0					
ANR	968188	PrimaryExpression	0		967363	1					
ANR	968189	Condition	j < nb_cols	1736:14:57519:57529	967363	1	True				
ANR	968190	RelationalExpression	j < nb_cols		967363	0		<			
ANR	968191	Identifier	j		967363	0					
ANR	968192	Identifier	nb_cols		967363	1					
ANR	968193	PostIncDecOperationExpression	j ++	1736:27:57532:57534	967363	2	True				
ANR	968194	Identifier	j		967363	0					
ANR	968195	IncDec	++		967363	1					
ANR	968196	CompoundStatement		122:3:3159:3260	967363	3					
ANR	968197	ExpressionStatement	setcolor = true	1737:3:57542:57557	967363	0	True				
ANR	968198	AssignmentExpression	setcolor = true		967363	0		=			
ANR	968199	Identifier	setcolor		967363	0					
ANR	968200	Identifier	true		967363	1					
ANR	968201	ExpressionStatement	R_FREE ( note [ j ] )	1738:3:57562:57578	967363	1	True				
ANR	968202	CallExpression	R_FREE ( note [ j ] )		967363	0					
ANR	968203	Callee	R_FREE		967363	0					
ANR	968204	Identifier	R_FREE		967363	0					
ANR	968205	ArgumentList	note [ j ]		967363	1					
ANR	968206	Argument	note [ j ]		967363	0					
ANR	968207	ArrayIndexing	note [ j ]		967363	0					
ANR	968208	Identifier	note		967363	0					
ANR	968209	Identifier	j		967363	1					
ANR	968210	IdentifierDeclStatement	"RAnalMetaItem * meta = r_meta_find_in ( core -> anal , ea + j , R_META_TYPE_FORMAT , R_META_WHERE_HERE ) ;"	1741:3:57676:57777	967363	2	True				
ANR	968211	IdentifierDecl	"* meta = r_meta_find_in ( core -> anal , ea + j , R_META_TYPE_FORMAT , R_META_WHERE_HERE )"		967363	0					
ANR	968212	IdentifierDeclType	RAnalMetaItem *		967363	0					
ANR	968213	Identifier	meta		967363	1					
ANR	968214	AssignmentExpression	"* meta = r_meta_find_in ( core -> anal , ea + j , R_META_TYPE_FORMAT , R_META_WHERE_HERE )"		967363	2		=			
ANR	968215	Identifier	meta		967363	0					
ANR	968216	CallExpression	"r_meta_find_in ( core -> anal , ea + j , R_META_TYPE_FORMAT , R_META_WHERE_HERE )"		967363	1					
ANR	968217	Callee	r_meta_find_in		967363	0					
ANR	968218	Identifier	r_meta_find_in		967363	0					
ANR	968219	ArgumentList	core -> anal		967363	1					
ANR	968220	Argument	core -> anal		967363	0					
ANR	968221	PtrMemberAccess	core -> anal		967363	0					
ANR	968222	Identifier	core		967363	0					
ANR	968223	Identifier	anal		967363	1					
ANR	968224	Argument	ea + j		967363	1					
ANR	968225	AdditiveExpression	ea + j		967363	0		+			
ANR	968226	Identifier	ea		967363	0					
ANR	968227	Identifier	j		967363	1					
ANR	968228	Argument	R_META_TYPE_FORMAT		967363	2					
ANR	968229	Identifier	R_META_TYPE_FORMAT		967363	0					
ANR	968230	Argument	R_META_WHERE_HERE		967363	3					
ANR	968231	Identifier	R_META_WHERE_HERE		967363	0					
ANR	968232	IfStatement	if ( meta && meta -> type == R_META_TYPE_FORMAT && meta -> from == addr + j )		967363	3					
ANR	968233	Condition	meta && meta -> type == R_META_TYPE_FORMAT && meta -> from == addr + j	1743:7:57786:57851	967363	0	True				
ANR	968234	AndExpression	meta && meta -> type == R_META_TYPE_FORMAT && meta -> from == addr + j		967363	0		&&			
ANR	968235	Identifier	meta		967363	0					
ANR	968236	AndExpression	meta -> type == R_META_TYPE_FORMAT && meta -> from == addr + j		967363	1		&&			
ANR	968237	EqualityExpression	meta -> type == R_META_TYPE_FORMAT		967363	0		==			
ANR	968238	PtrMemberAccess	meta -> type		967363	0					
ANR	968239	Identifier	meta		967363	0					
ANR	968240	Identifier	type		967363	1					
ANR	968241	Identifier	R_META_TYPE_FORMAT		967363	1					
ANR	968242	EqualityExpression	meta -> from == addr + j		967363	1		==			
ANR	968243	PtrMemberAccess	meta -> from		967363	0					
ANR	968244	Identifier	meta		967363	0					
ANR	968245	Identifier	from		967363	1					
ANR	968246	AdditiveExpression	addr + j		967363	1		+			
ANR	968247	Identifier	addr		967363	0					
ANR	968248	Identifier	j		967363	1					
ANR	968249	CompoundStatement		124:75:3337:3337	967363	1					
ANR	968250	ExpressionStatement	"r_cons_printf ( "".format %s ; size="" , meta -> str )"	1744:4:57860:57907	967363	0	True				
ANR	968251	CallExpression	"r_cons_printf ( "".format %s ; size="" , meta -> str )"		967363	0					
ANR	968252	Callee	r_cons_printf		967363	0					
ANR	968253	Identifier	r_cons_printf		967363	0					
ANR	968254	ArgumentList	""".format %s ; size="""		967363	1					
ANR	968255	Argument	""".format %s ; size="""		967363	0					
ANR	968256	PrimaryExpression	""".format %s ; size="""		967363	0					
ANR	968257	Argument	meta -> str		967363	1					
ANR	968258	PtrMemberAccess	meta -> str		967363	0					
ANR	968259	Identifier	meta		967363	0					
ANR	968260	Identifier	str		967363	1					
ANR	968261	ExpressionStatement	"r_core_cmdf ( core , ""pfs %s"" , meta -> str )"	1745:4:57913:57952	967363	1	True				
ANR	968262	CallExpression	"r_core_cmdf ( core , ""pfs %s"" , meta -> str )"		967363	0					
ANR	968263	Callee	r_core_cmdf		967363	0					
ANR	968264	Identifier	r_core_cmdf		967363	0					
ANR	968265	ArgumentList	core		967363	1					
ANR	968266	Argument	core		967363	0					
ANR	968267	Identifier	core		967363	0					
ANR	968268	Argument	"""pfs %s"""		967363	1					
ANR	968269	PrimaryExpression	"""pfs %s"""		967363	0					
ANR	968270	Argument	meta -> str		967363	2					
ANR	968271	PtrMemberAccess	meta -> str		967363	0					
ANR	968272	Identifier	meta		967363	0					
ANR	968273	Identifier	str		967363	1					
ANR	968274	Statement	r_core_cmdf	1746:4:57958:57968	967363	2	True				
ANR	968275	Statement	(	1746:16:57970:57970	967363	3	True				
ANR	968276	Statement	core	1746:17:57971:57974	967363	4	True				
ANR	968277	Statement	","	1746:21:57975:57975	967363	5	True				
ANR	968278	Statement	"""pf %s @ 0x%08"""	1746:23:57977:57991	967363	6	True				
ANR	968279	Statement	PFMT64x	1746:38:57992:57998	967363	7	True				
ANR	968280	Statement	","	1746:45:57999:57999	967363	8	True				
ANR	968281	Statement	meta	1746:47:58001:58004	967363	9	True				
ANR	968282	Statement	->	1746:51:58005:58006	967363	10	True				
ANR	968283	Statement	str	1746:53:58007:58009	967363	11	True				
ANR	968284	Statement	","	1746:56:58010:58010	967363	12	True				
ANR	968285	Statement	meta	1746:58:58012:58015	967363	13	True				
ANR	968286	Statement	->	1746:62:58016:58017	967363	14	True				
ANR	968287	Statement	from	1746:64:58018:58021	967363	15	True				
ANR	968288	Statement	)	1746:68:58022:58022	967363	16	True				
ANR	968289	ExpressionStatement		1746:69:58023:58023	967363	17	True				
ANR	968290	ExpressionStatement	"append ( ebytes , Color_INVERT )"	1747:4:58029:58058	967363	18	True				
ANR	968291	CallExpression	"append ( ebytes , Color_INVERT )"		967363	0					
ANR	968292	Callee	append		967363	0					
ANR	968293	Identifier	append		967363	0					
ANR	968294	ArgumentList	ebytes		967363	1					
ANR	968295	Argument	ebytes		967363	0					
ANR	968296	Identifier	ebytes		967363	0					
ANR	968297	Argument	Color_INVERT		967363	1					
ANR	968298	Identifier	Color_INVERT		967363	0					
ANR	968299	ExpressionStatement	"append ( echars , Color_INVERT )"	1748:4:58064:58093	967363	19	True				
ANR	968300	CallExpression	"append ( echars , Color_INVERT )"		967363	0					
ANR	968301	Callee	append		967363	0					
ANR	968302	Identifier	append		967363	0					
ANR	968303	ArgumentList	echars		967363	1					
ANR	968304	Argument	echars		967363	0					
ANR	968305	Identifier	echars		967363	0					
ANR	968306	Argument	Color_INVERT		967363	1					
ANR	968307	Identifier	Color_INVERT		967363	0					
ANR	968308	ExpressionStatement	hadflag = true	1749:4:58099:58113	967363	20	True				
ANR	968309	AssignmentExpression	hadflag = true		967363	0		=			
ANR	968310	Identifier	hadflag		967363	0					
ANR	968311	Identifier	true		967363	1					
ANR	968312	IfStatement	if ( meta )		967363	4					
ANR	968313	Condition	meta	1751:7:58127:58130	967363	0	True				
ANR	968314	Identifier	meta		967363	0					
ANR	968315	CompoundStatement		132:13:3616:3616	967363	1					
ANR	968316	ExpressionStatement	r_meta_item_free ( meta )	1752:4:58139:58162	967363	0	True				
ANR	968317	CallExpression	r_meta_item_free ( meta )		967363	0					
ANR	968318	Callee	r_meta_item_free		967363	0					
ANR	968319	Identifier	r_meta_item_free		967363	0					
ANR	968320	ArgumentList	meta		967363	1					
ANR	968321	Argument	meta		967363	0					
ANR	968322	Identifier	meta		967363	0					
ANR	968323	ExpressionStatement	meta = NULL	1753:4:58168:58179	967363	1	True				
ANR	968324	AssignmentExpression	meta = NULL		967363	0		=			
ANR	968325	Identifier	meta		967363	0					
ANR	968326	Identifier	NULL		967363	1					
ANR	968327	ExpressionStatement	"comment = r_meta_get_string ( core -> anal , R_META_TYPE_COMMENT , addr + j )"	1756:3:58212:58283	967363	5	True				
ANR	968328	AssignmentExpression	"comment = r_meta_get_string ( core -> anal , R_META_TYPE_COMMENT , addr + j )"		967363	0		=			
ANR	968329	Identifier	comment		967363	0					
ANR	968330	CallExpression	"r_meta_get_string ( core -> anal , R_META_TYPE_COMMENT , addr + j )"		967363	1					
ANR	968331	Callee	r_meta_get_string		967363	0					
ANR	968332	Identifier	r_meta_get_string		967363	0					
ANR	968333	ArgumentList	core -> anal		967363	1					
ANR	968334	Argument	core -> anal		967363	0					
ANR	968335	PtrMemberAccess	core -> anal		967363	0					
ANR	968336	Identifier	core		967363	0					
ANR	968337	Identifier	anal		967363	1					
ANR	968338	Argument	R_META_TYPE_COMMENT		967363	1					
ANR	968339	Identifier	R_META_TYPE_COMMENT		967363	0					
ANR	968340	Argument	addr + j		967363	2					
ANR	968341	AdditiveExpression	addr + j		967363	0		+			
ANR	968342	Identifier	addr		967363	0					
ANR	968343	Identifier	j		967363	1					
ANR	968344	IfStatement	if ( comment )		967363	6					
ANR	968345	Condition	comment	1757:7:58292:58298	967363	0	True				
ANR	968346	Identifier	comment		967363	0					
ANR	968347	CompoundStatement		138:16:3784:3784	967363	1					
ANR	968348	ExpressionStatement	"comment = r_str_prepend ( comment , "";"" )"	1758:4:58307:58345	967363	0	True				
ANR	968349	AssignmentExpression	"comment = r_str_prepend ( comment , "";"" )"		967363	0		=			
ANR	968350	Identifier	comment		967363	0					
ANR	968351	CallExpression	"r_str_prepend ( comment , "";"" )"		967363	1					
ANR	968352	Callee	r_str_prepend		967363	0					
ANR	968353	Identifier	r_str_prepend		967363	0					
ANR	968354	ArgumentList	comment		967363	1					
ANR	968355	Argument	comment		967363	0					
ANR	968356	Identifier	comment		967363	0					
ANR	968357	Argument	""";"""		967363	1					
ANR	968358	PrimaryExpression	""";"""		967363	0					
ANR	968359	ExpressionStatement	note [ j ] = comment	1759:4:58351:58368	967363	1	True				
ANR	968360	AssignmentExpression	note [ j ] = comment		967363	0		=			
ANR	968361	ArrayIndexing	note [ j ]		967363	0					
ANR	968362	Identifier	note		967363	0					
ANR	968363	Identifier	j		967363	1					
ANR	968364	Identifier	comment		967363	1					
ANR	968365	ExpressionStatement	marks = true	1760:4:58374:58386	967363	2	True				
ANR	968366	AssignmentExpression	marks = true		967363	0		=			
ANR	968367	Identifier	marks		967363	0					
ANR	968368	Identifier	true		967363	1					
ANR	968369	ExpressionStatement	"flag = r_flag_get_i ( core -> flags , addr + j )"	1764:3:58417:58460	967363	7	True				
ANR	968370	AssignmentExpression	"flag = r_flag_get_i ( core -> flags , addr + j )"		967363	0		=			
ANR	968371	Identifier	flag		967363	0					
ANR	968372	CallExpression	"r_flag_get_i ( core -> flags , addr + j )"		967363	1					
ANR	968373	Callee	r_flag_get_i		967363	0					
ANR	968374	Identifier	r_flag_get_i		967363	0					
ANR	968375	ArgumentList	core -> flags		967363	1					
ANR	968376	Argument	core -> flags		967363	0					
ANR	968377	PtrMemberAccess	core -> flags		967363	0					
ANR	968378	Identifier	core		967363	0					
ANR	968379	Identifier	flags		967363	1					
ANR	968380	Argument	addr + j		967363	1					
ANR	968381	AdditiveExpression	addr + j		967363	0		+			
ANR	968382	Identifier	addr		967363	0					
ANR	968383	Identifier	j		967363	1					
ANR	968384	IfStatement	if ( flag )		967363	8					
ANR	968385	Condition	flag	1765:7:58469:58472	967363	0	True				
ANR	968386	Identifier	flag		967363	0					
ANR	968387	CompoundStatement		146:13:3958:3958	967363	1					
ANR	968388	IfStatement	if ( flagsz )		967363	0					
ANR	968389	Condition	flagsz	1766:8:58508:58513	967363	0	True				
ANR	968390	Identifier	flagsz		967363	0					
ANR	968391	CompoundStatement		147:16:3999:3999	967363	1					
ANR	968392	ExpressionStatement	fend = addr + flagsz	1767:5:58523:58543	967363	0	True				
ANR	968393	AssignmentExpression	fend = addr + flagsz		967363	0		=			
ANR	968394	Identifier	fend		967363	0					
ANR	968395	AdditiveExpression	addr + flagsz		967363	1		+			
ANR	968396	Identifier	addr		967363	0					
ANR	968397	Identifier	flagsz		967363	1					
ANR	968398	ElseStatement	else		967363	0					
ANR	968399	CompoundStatement		149:11:4059:4059	967363	0					
ANR	968400	ExpressionStatement	fend = addr + j + flag -> size	1769:5:58583:58611	967363	0	True				
ANR	968401	AssignmentExpression	fend = addr + j + flag -> size		967363	0		=			
ANR	968402	Identifier	fend		967363	0					
ANR	968403	AdditiveExpression	addr + j + flag -> size		967363	1		+			
ANR	968404	Identifier	addr		967363	0					
ANR	968405	AdditiveExpression	j + flag -> size		967363	1		+			
ANR	968406	Identifier	j		967363	0					
ANR	968407	PtrMemberAccess	flag -> size		967363	1					
ANR	968408	Identifier	flag		967363	0					
ANR	968409	Identifier	size		967363	1					
ANR	968410	ExpressionStatement	"note [ j ] = r_str_prepend ( strdup ( flag -> name ) , ""/"" )"	1771:4:58623:58673	967363	1	True				
ANR	968411	AssignmentExpression	"note [ j ] = r_str_prepend ( strdup ( flag -> name ) , ""/"" )"		967363	0		=			
ANR	968412	ArrayIndexing	note [ j ]		967363	0					
ANR	968413	Identifier	note		967363	0					
ANR	968414	Identifier	j		967363	1					
ANR	968415	CallExpression	"r_str_prepend ( strdup ( flag -> name ) , ""/"" )"		967363	1					
ANR	968416	Callee	r_str_prepend		967363	0					
ANR	968417	Identifier	r_str_prepend		967363	0					
ANR	968418	ArgumentList	strdup ( flag -> name )		967363	1					
ANR	968419	Argument	strdup ( flag -> name )		967363	0					
ANR	968420	CallExpression	strdup ( flag -> name )		967363	0					
ANR	968421	Callee	strdup		967363	0					
ANR	968422	Identifier	strdup		967363	0					
ANR	968423	ArgumentList	flag -> name		967363	1					
ANR	968424	Argument	flag -> name		967363	0					
ANR	968425	PtrMemberAccess	flag -> name		967363	0					
ANR	968426	Identifier	flag		967363	0					
ANR	968427	Identifier	name		967363	1					
ANR	968428	Argument	"""/"""		967363	1					
ANR	968429	PrimaryExpression	"""/"""		967363	0					
ANR	968430	ExpressionStatement	marks = true	1772:4:58679:58691	967363	2	True				
ANR	968431	AssignmentExpression	marks = true		967363	0		=			
ANR	968432	Identifier	marks		967363	0					
ANR	968433	Identifier	true		967363	1					
ANR	968434	ExpressionStatement	color_idx ++	1773:4:58697:58708	967363	3	True				
ANR	968435	PostIncDecOperationExpression	color_idx ++		967363	0					
ANR	968436	Identifier	color_idx		967363	0					
ANR	968437	IncDec	++		967363	1					
ANR	968438	ExpressionStatement	color_idx %= 10	1774:4:58714:58729	967363	4	True				
ANR	968439	AssignmentExpression	color_idx %= 10		967363	0		%=			
ANR	968440	Identifier	color_idx		967363	0					
ANR	968441	PrimaryExpression	10		967363	1					
ANR	968442	ExpressionStatement	current_flag = flag	1775:4:58735:58754	967363	5	True				
ANR	968443	AssignmentExpression	current_flag = flag		967363	0		=			
ANR	968444	Identifier	current_flag		967363	0					
ANR	968445	Identifier	flag		967363	1					
ANR	968446	IfStatement	if ( showSection )		967363	6					
ANR	968447	Condition	showSection	1776:8:58764:58774	967363	0	True				
ANR	968448	Identifier	showSection		967363	0					
ANR	968449	CompoundStatement		157:21:4260:4260	967363	1					
ANR	968450	ExpressionStatement	"r_cons_printf ( ""%20s "" , """" )"	1777:5:58784:58811	967363	0	True				
ANR	968451	CallExpression	"r_cons_printf ( ""%20s "" , """" )"		967363	0					
ANR	968452	Callee	r_cons_printf		967363	0					
ANR	968453	Identifier	r_cons_printf		967363	0					
ANR	968454	ArgumentList	"""%20s """		967363	1					
ANR	968455	Argument	"""%20s """		967363	0					
ANR	968456	PrimaryExpression	"""%20s """		967363	0					
ANR	968457	Argument	""""""		967363	1					
ANR	968458	PrimaryExpression	""""""		967363	0					
ANR	968459	IfStatement	if ( flag -> offset == addr + j )		967363	7					
ANR	968460	Condition	flag -> offset == addr + j	1779:8:58827:58850	967363	0	True				
ANR	968461	EqualityExpression	flag -> offset == addr + j		967363	0		==			
ANR	968462	PtrMemberAccess	flag -> offset		967363	0					
ANR	968463	Identifier	flag		967363	0					
ANR	968464	Identifier	offset		967363	1					
ANR	968465	AdditiveExpression	addr + j		967363	1		+			
ANR	968466	Identifier	addr		967363	0					
ANR	968467	Identifier	j		967363	1					
ANR	968468	CompoundStatement		160:34:4336:4336	967363	1					
ANR	968469	ExpressionStatement	"append ( ebytes , Color_INVERT )"	1780:5:58860:58889	967363	0	True				
ANR	968470	CallExpression	"append ( ebytes , Color_INVERT )"		967363	0					
ANR	968471	Callee	append		967363	0					
ANR	968472	Identifier	append		967363	0					
ANR	968473	ArgumentList	ebytes		967363	1					
ANR	968474	Argument	ebytes		967363	0					
ANR	968475	Identifier	ebytes		967363	0					
ANR	968476	Argument	Color_INVERT		967363	1					
ANR	968477	Identifier	Color_INVERT		967363	0					
ANR	968478	ExpressionStatement	"append ( echars , Color_INVERT )"	1781:5:58896:58925	967363	1	True				
ANR	968479	CallExpression	"append ( echars , Color_INVERT )"		967363	0					
ANR	968480	Callee	append		967363	0					
ANR	968481	Identifier	append		967363	0					
ANR	968482	ArgumentList	echars		967363	1					
ANR	968483	Argument	echars		967363	0					
ANR	968484	Identifier	echars		967363	0					
ANR	968485	Argument	Color_INVERT		967363	1					
ANR	968486	Identifier	Color_INVERT		967363	0					
ANR	968487	ExpressionStatement	hadflag = true	1782:5:58932:58946	967363	2	True				
ANR	968488	AssignmentExpression	hadflag = true		967363	0		=			
ANR	968489	Identifier	hadflag		967363	0					
ANR	968490	Identifier	true		967363	1					
ANR	968491	ElseStatement	else		967363	0					
ANR	968492	CompoundStatement		165:10:4447:4447	967363	0					
ANR	968493	IfStatement	if ( current_flag && addr + j > ( current_flag -> offset + current_flag -> size ) )		967363	0					
ANR	968494	Condition	current_flag && addr + j > ( current_flag -> offset + current_flag -> size )	1786:8:59011:59080	967363	0	True				
ANR	968495	AndExpression	current_flag && addr + j > ( current_flag -> offset + current_flag -> size )		967363	0		&&			
ANR	968496	Identifier	current_flag		967363	0					
ANR	968497	RelationalExpression	addr + j > ( current_flag -> offset + current_flag -> size )		967363	1		>			
ANR	968498	AdditiveExpression	addr + j		967363	0		+			
ANR	968499	Identifier	addr		967363	0					
ANR	968500	Identifier	j		967363	1					
ANR	968501	AdditiveExpression	current_flag -> offset + current_flag -> size		967363	1		+			
ANR	968502	PtrMemberAccess	current_flag -> offset		967363	0					
ANR	968503	Identifier	current_flag		967363	0					
ANR	968504	Identifier	offset		967363	1					
ANR	968505	PtrMemberAccess	current_flag -> size		967363	1					
ANR	968506	Identifier	current_flag		967363	0					
ANR	968507	Identifier	size		967363	1					
ANR	968508	CompoundStatement		167:80:4566:4566	967363	1					
ANR	968509	ExpressionStatement	setcolor = false	1787:5:59090:59106	967363	0	True				
ANR	968510	AssignmentExpression	setcolor = false		967363	0		=			
ANR	968511	Identifier	setcolor		967363	0					
ANR	968512	Identifier	false		967363	1					
ANR	968513	ExpressionStatement	current_flag = NULL	1788:5:59113:59132	967363	1	True				
ANR	968514	AssignmentExpression	current_flag = NULL		967363	0		=			
ANR	968515	Identifier	current_flag		967363	0					
ANR	968516	Identifier	NULL		967363	1					
ANR	968517	IfStatement	if ( fend == UT64_MAX || fend <= addr + j )		967363	1					
ANR	968518	Condition	fend == UT64_MAX || fend <= addr + j	1791:8:59211:59246	967363	0	True				
ANR	968519	OrExpression	fend == UT64_MAX || fend <= addr + j		967363	0		||			
ANR	968520	EqualityExpression	fend == UT64_MAX		967363	0		==			
ANR	968521	Identifier	fend		967363	0					
ANR	968522	Identifier	UT64_MAX		967363	1					
ANR	968523	RelationalExpression	fend <= addr + j		967363	1		<=			
ANR	968524	Identifier	fend		967363	0					
ANR	968525	AdditiveExpression	addr + j		967363	1		+			
ANR	968526	Identifier	addr		967363	0					
ANR	968527	Identifier	j		967363	1					
ANR	968528	CompoundStatement		172:46:4732:4732	967363	1					
ANR	968529	ExpressionStatement	setcolor = false	1792:5:59256:59272	967363	0	True				
ANR	968530	AssignmentExpression	setcolor = false		967363	0		=			
ANR	968531	Identifier	setcolor		967363	0					
ANR	968532	Identifier	false		967363	1					
ANR	968533	IfStatement	if ( usecolor && ! setcolor )		967363	9					
ANR	968534	Condition	usecolor && ! setcolor	1795:7:59292:59312	967363	0	True				
ANR	968535	AndExpression	usecolor && ! setcolor		967363	0		&&			
ANR	968536	Identifier	usecolor		967363	0					
ANR	968537	UnaryOperationExpression	! setcolor		967363	1					
ANR	968538	UnaryOperator	!		967363	0					
ANR	968539	Identifier	setcolor		967363	1					
ANR	968540	CompoundStatement		177:4:4804:4864	967363	1					
ANR	968541	IdentifierDeclStatement	"const char * bytecolor = r_print_byte_color ( core -> print , ch ) ;"	1796:4:59321:59381	967363	0	True				
ANR	968542	IdentifierDecl	"* bytecolor = r_print_byte_color ( core -> print , ch )"		967363	0					
ANR	968543	IdentifierDeclType	const char *		967363	0					
ANR	968544	Identifier	bytecolor		967363	1					
ANR	968545	AssignmentExpression	"* bytecolor = r_print_byte_color ( core -> print , ch )"		967363	2		=			
ANR	968546	Identifier	bytecolor		967363	0					
ANR	968547	CallExpression	"r_print_byte_color ( core -> print , ch )"		967363	1					
ANR	968548	Callee	r_print_byte_color		967363	0					
ANR	968549	Identifier	r_print_byte_color		967363	0					
ANR	968550	ArgumentList	core -> print		967363	1					
ANR	968551	Argument	core -> print		967363	0					
ANR	968552	PtrMemberAccess	core -> print		967363	0					
ANR	968553	Identifier	core		967363	0					
ANR	968554	Identifier	print		967363	1					
ANR	968555	Argument	ch		967363	1					
ANR	968556	Identifier	ch		967363	0					
ANR	968557	IfStatement	if ( bytecolor )		967363	1					
ANR	968558	Condition	bytecolor	1797:8:59391:59399	967363	0	True				
ANR	968559	Identifier	bytecolor		967363	0					
ANR	968560	CompoundStatement		178:19:4885:4885	967363	1					
ANR	968561	ExpressionStatement	"append ( ebytes , bytecolor )"	1798:5:59409:59435	967363	0	True				
ANR	968562	CallExpression	"append ( ebytes , bytecolor )"		967363	0					
ANR	968563	Callee	append		967363	0					
ANR	968564	Identifier	append		967363	0					
ANR	968565	ArgumentList	ebytes		967363	1					
ANR	968566	Argument	ebytes		967363	0					
ANR	968567	Identifier	ebytes		967363	0					
ANR	968568	Argument	bytecolor		967363	1					
ANR	968569	Identifier	bytecolor		967363	0					
ANR	968570	ExpressionStatement	"append ( echars , bytecolor )"	1799:5:59442:59468	967363	1	True				
ANR	968571	CallExpression	"append ( echars , bytecolor )"		967363	0					
ANR	968572	Callee	append		967363	0					
ANR	968573	Identifier	append		967363	0					
ANR	968574	ArgumentList	echars		967363	1					
ANR	968575	Argument	echars		967363	0					
ANR	968576	Identifier	echars		967363	0					
ANR	968577	Argument	bytecolor		967363	1					
ANR	968578	Identifier	bytecolor		967363	0					
ANR	968579	ExpressionStatement	hascolor = true	1800:5:59475:59490	967363	2	True				
ANR	968580	AssignmentExpression	hascolor = true		967363	0		=			
ANR	968581	Identifier	hascolor		967363	0					
ANR	968582	Identifier	true		967363	1					
ANR	968583	IfStatement	if ( setcolor && ! hascolor )		967363	10					
ANR	968584	Condition	setcolor && ! hascolor	1803:7:59510:59530	967363	0	True				
ANR	968585	AndExpression	setcolor && ! hascolor		967363	0		&&			
ANR	968586	Identifier	setcolor		967363	0					
ANR	968587	UnaryOperationExpression	! hascolor		967363	1					
ANR	968588	UnaryOperator	!		967363	0					
ANR	968589	Identifier	hascolor		967363	1					
ANR	968590	CompoundStatement		184:30:5016:5016	967363	1					
ANR	968591	ExpressionStatement	hascolor = true	1804:4:59539:59554	967363	0	True				
ANR	968592	AssignmentExpression	hascolor = true		967363	0		=			
ANR	968593	Identifier	hascolor		967363	0					
ANR	968594	Identifier	true		967363	1					
ANR	968595	IfStatement	if ( usecolor )		967363	1					
ANR	968596	Condition	usecolor	1805:8:59564:59571	967363	0	True				
ANR	968597	Identifier	usecolor		967363	0					
ANR	968598	CompoundStatement		186:18:5057:5057	967363	1					
ANR	968599	IfStatement	if ( current_flag && current_flag -> color )		967363	0					
ANR	968600	Condition	current_flag && current_flag -> color	1806:9:59585:59619	967363	0	True				
ANR	968601	AndExpression	current_flag && current_flag -> color		967363	0		&&			
ANR	968602	Identifier	current_flag		967363	0					
ANR	968603	PtrMemberAccess	current_flag -> color		967363	1					
ANR	968604	Identifier	current_flag		967363	0					
ANR	968605	Identifier	color		967363	1					
ANR	968606	CompoundStatement		188:6:5113:5175	967363	1					
ANR	968607	IdentifierDeclStatement	"char * ansicolor = r_cons_pal_parse ( current_flag -> color , NULL ) ;"	1807:6:59630:59692	967363	0	True				
ANR	968608	IdentifierDecl	"* ansicolor = r_cons_pal_parse ( current_flag -> color , NULL )"		967363	0					
ANR	968609	IdentifierDeclType	char *		967363	0					
ANR	968610	Identifier	ansicolor		967363	1					
ANR	968611	AssignmentExpression	"* ansicolor = r_cons_pal_parse ( current_flag -> color , NULL )"		967363	2		=			
ANR	968612	Identifier	ansicolor		967363	0					
ANR	968613	CallExpression	"r_cons_pal_parse ( current_flag -> color , NULL )"		967363	1					
ANR	968614	Callee	r_cons_pal_parse		967363	0					
ANR	968615	Identifier	r_cons_pal_parse		967363	0					
ANR	968616	ArgumentList	current_flag -> color		967363	1					
ANR	968617	Argument	current_flag -> color		967363	0					
ANR	968618	PtrMemberAccess	current_flag -> color		967363	0					
ANR	968619	Identifier	current_flag		967363	0					
ANR	968620	Identifier	color		967363	1					
ANR	968621	Argument	NULL		967363	1					
ANR	968622	Identifier	NULL		967363	0					
ANR	968623	IfStatement	if ( ansicolor )		967363	1					
ANR	968624	Condition	ansicolor	1808:10:59704:59712	967363	0	True				
ANR	968625	Identifier	ansicolor		967363	0					
ANR	968626	CompoundStatement		189:21:5198:5198	967363	1					
ANR	968627	ExpressionStatement	"append ( ebytes , ansicolor )"	1809:7:59724:59750	967363	0	True				
ANR	968628	CallExpression	"append ( ebytes , ansicolor )"		967363	0					
ANR	968629	Callee	append		967363	0					
ANR	968630	Identifier	append		967363	0					
ANR	968631	ArgumentList	ebytes		967363	1					
ANR	968632	Argument	ebytes		967363	0					
ANR	968633	Identifier	ebytes		967363	0					
ANR	968634	Argument	ansicolor		967363	1					
ANR	968635	Identifier	ansicolor		967363	0					
ANR	968636	ExpressionStatement	"append ( echars , ansicolor )"	1810:7:59759:59785	967363	1	True				
ANR	968637	CallExpression	"append ( echars , ansicolor )"		967363	0					
ANR	968638	Callee	append		967363	0					
ANR	968639	Identifier	append		967363	0					
ANR	968640	ArgumentList	echars		967363	1					
ANR	968641	Argument	echars		967363	0					
ANR	968642	Identifier	echars		967363	0					
ANR	968643	Argument	ansicolor		967363	1					
ANR	968644	Identifier	ansicolor		967363	0					
ANR	968645	ExpressionStatement	free ( ansicolor )	1811:7:59794:59810	967363	2	True				
ANR	968646	CallExpression	free ( ansicolor )		967363	0					
ANR	968647	Callee	free		967363	0					
ANR	968648	Identifier	free		967363	0					
ANR	968649	ArgumentList	ansicolor		967363	1					
ANR	968650	Argument	ansicolor		967363	0					
ANR	968651	Identifier	ansicolor		967363	0					
ANR	968652	ElseStatement	else		967363	0					
ANR	968653	CompoundStatement		194:12:5315:5315	967363	0					
ANR	968654	ExpressionStatement	"append ( ebytes , colors [ color_idx ] )"	1814:6:59864:59898	967363	0	True				
ANR	968655	CallExpression	"append ( ebytes , colors [ color_idx ] )"		967363	0					
ANR	968656	Callee	append		967363	0					
ANR	968657	Identifier	append		967363	0					
ANR	968658	ArgumentList	ebytes		967363	1					
ANR	968659	Argument	ebytes		967363	0					
ANR	968660	Identifier	ebytes		967363	0					
ANR	968661	Argument	colors [ color_idx ]		967363	1					
ANR	968662	ArrayIndexing	colors [ color_idx ]		967363	0					
ANR	968663	Identifier	colors		967363	0					
ANR	968664	Identifier	color_idx		967363	1					
ANR	968665	ExpressionStatement	"append ( echars , colors [ color_idx ] )"	1815:6:59906:59940	967363	1	True				
ANR	968666	CallExpression	"append ( echars , colors [ color_idx ] )"		967363	0					
ANR	968667	Callee	append		967363	0					
ANR	968668	Identifier	append		967363	0					
ANR	968669	ArgumentList	echars		967363	1					
ANR	968670	Argument	echars		967363	0					
ANR	968671	Identifier	echars		967363	0					
ANR	968672	Argument	colors [ color_idx ]		967363	1					
ANR	968673	ArrayIndexing	colors [ color_idx ]		967363	0					
ANR	968674	Identifier	colors		967363	0					
ANR	968675	Identifier	color_idx		967363	1					
ANR	968676	ElseStatement	else		967363	0					
ANR	968677	CompoundStatement		198:11:5443:5443	967363	0					
ANR	968678	IfStatement	if ( html )		967363	0					
ANR	968679	Condition	html	1818:9:59971:59974	967363	0	True				
ANR	968680	Identifier	html		967363	0					
ANR	968681	CompoundStatement		199:15:5460:5460	967363	1					
ANR	968682	ExpressionStatement	"append ( ebytes , ""["" )"	1819:6:59985:60005	967363	0	True				
ANR	968683	CallExpression	"append ( ebytes , ""["" )"		967363	0					
ANR	968684	Callee	append		967363	0					
ANR	968685	Identifier	append		967363	0					
ANR	968686	ArgumentList	ebytes		967363	1					
ANR	968687	Argument	ebytes		967363	0					
ANR	968688	Identifier	ebytes		967363	0					
ANR	968689	Argument	"""["""		967363	1					
ANR	968690	PrimaryExpression	"""["""		967363	0					
ANR	968691	ElseStatement	else		967363	0					
ANR	968692	CompoundStatement		201:12:5502:5502	967363	0					
ANR	968693	ExpressionStatement	"append ( ebytes , Color_INVERT )"	1821:6:60027:60056	967363	0	True				
ANR	968694	CallExpression	"append ( ebytes , Color_INVERT )"		967363	0					
ANR	968695	Callee	append		967363	0					
ANR	968696	Identifier	append		967363	0					
ANR	968697	ArgumentList	ebytes		967363	1					
ANR	968698	Argument	ebytes		967363	0					
ANR	968699	Identifier	ebytes		967363	0					
ANR	968700	Argument	Color_INVERT		967363	1					
ANR	968701	Identifier	Color_INVERT		967363	0					
ANR	968702	ExpressionStatement	"here = R_MIN ( ( i * nb_cols ) + j , core -> blocksize )"	1825:3:60079:60128	967363	11	True				
ANR	968703	AssignmentExpression	"here = R_MIN ( ( i * nb_cols ) + j , core -> blocksize )"		967363	0		=			
ANR	968704	Identifier	here		967363	0					
ANR	968705	CallExpression	"R_MIN ( ( i * nb_cols ) + j , core -> blocksize )"		967363	1					
ANR	968706	Callee	R_MIN		967363	0					
ANR	968707	Identifier	R_MIN		967363	0					
ANR	968708	ArgumentList	( i * nb_cols ) + j		967363	1					
ANR	968709	Argument	( i * nb_cols ) + j		967363	0					
ANR	968710	AdditiveExpression	( i * nb_cols ) + j		967363	0		+			
ANR	968711	MultiplicativeExpression	i * nb_cols		967363	0		*			
ANR	968712	Identifier	i		967363	0					
ANR	968713	Identifier	nb_cols		967363	1					
ANR	968714	Identifier	j		967363	1					
ANR	968715	Argument	core -> blocksize		967363	1					
ANR	968716	PtrMemberAccess	core -> blocksize		967363	0					
ANR	968717	Identifier	core		967363	0					
ANR	968718	Identifier	blocksize		967363	1					
ANR	968719	ExpressionStatement	ch = buf [ here ]	1826:3:60133:60147	967363	12	True				
ANR	968720	AssignmentExpression	ch = buf [ here ]		967363	0		=			
ANR	968721	Identifier	ch		967363	0					
ANR	968722	ArrayIndexing	buf [ here ]		967363	1					
ANR	968723	Identifier	buf		967363	0					
ANR	968724	Identifier	here		967363	1					
ANR	968725	IfStatement	if ( core -> print -> ocur != - 1 )		967363	13					
ANR	968726	Condition	core -> print -> ocur != - 1	1827:7:60156:60178	967363	0	True				
ANR	968727	EqualityExpression	core -> print -> ocur != - 1		967363	0		!=			
ANR	968728	PtrMemberAccess	core -> print -> ocur		967363	0					
ANR	968729	PtrMemberAccess	core -> print		967363	0					
ANR	968730	Identifier	core		967363	0					
ANR	968731	Identifier	print		967363	1					
ANR	968732	Identifier	ocur		967363	1					
ANR	968733	UnaryOperationExpression	- 1		967363	1					
ANR	968734	UnaryOperator	-		967363	0					
ANR	968735	PrimaryExpression	1		967363	1					
ANR	968736	CompoundStatement		208:32:5664:5664	967363	1					
ANR	968737	ExpressionStatement	"low = R_MIN ( core -> print -> cur , core -> print -> ocur )"	1828:4:60187:60236	967363	0	True				
ANR	968738	AssignmentExpression	"low = R_MIN ( core -> print -> cur , core -> print -> ocur )"		967363	0		=			
ANR	968739	Identifier	low		967363	0					
ANR	968740	CallExpression	"R_MIN ( core -> print -> cur , core -> print -> ocur )"		967363	1					
ANR	968741	Callee	R_MIN		967363	0					
ANR	968742	Identifier	R_MIN		967363	0					
ANR	968743	ArgumentList	core -> print -> cur		967363	1					
ANR	968744	Argument	core -> print -> cur		967363	0					
ANR	968745	PtrMemberAccess	core -> print -> cur		967363	0					
ANR	968746	PtrMemberAccess	core -> print		967363	0					
ANR	968747	Identifier	core		967363	0					
ANR	968748	Identifier	print		967363	1					
ANR	968749	Identifier	cur		967363	1					
ANR	968750	Argument	core -> print -> ocur		967363	1					
ANR	968751	PtrMemberAccess	core -> print -> ocur		967363	0					
ANR	968752	PtrMemberAccess	core -> print		967363	0					
ANR	968753	Identifier	core		967363	0					
ANR	968754	Identifier	print		967363	1					
ANR	968755	Identifier	ocur		967363	1					
ANR	968756	ExpressionStatement	"max = R_MAX ( core -> print -> cur , core -> print -> ocur )"	1829:4:60242:60291	967363	1	True				
ANR	968757	AssignmentExpression	"max = R_MAX ( core -> print -> cur , core -> print -> ocur )"		967363	0		=			
ANR	968758	Identifier	max		967363	0					
ANR	968759	CallExpression	"R_MAX ( core -> print -> cur , core -> print -> ocur )"		967363	1					
ANR	968760	Callee	R_MAX		967363	0					
ANR	968761	Identifier	R_MAX		967363	0					
ANR	968762	ArgumentList	core -> print -> cur		967363	1					
ANR	968763	Argument	core -> print -> cur		967363	0					
ANR	968764	PtrMemberAccess	core -> print -> cur		967363	0					
ANR	968765	PtrMemberAccess	core -> print		967363	0					
ANR	968766	Identifier	core		967363	0					
ANR	968767	Identifier	print		967363	1					
ANR	968768	Identifier	cur		967363	1					
ANR	968769	Argument	core -> print -> ocur		967363	1					
ANR	968770	PtrMemberAccess	core -> print -> ocur		967363	0					
ANR	968771	PtrMemberAccess	core -> print		967363	0					
ANR	968772	Identifier	core		967363	0					
ANR	968773	Identifier	print		967363	1					
ANR	968774	Identifier	ocur		967363	1					
ANR	968775	ElseStatement	else		967363	0					
ANR	968776	CompoundStatement		211:10:5786:5786	967363	0					
ANR	968777	ExpressionStatement	low = max = core -> print -> cur	1831:4:60309:60337	967363	0	True				
ANR	968778	AssignmentExpression	low = max = core -> print -> cur		967363	0		=			
ANR	968779	Identifier	low		967363	0					
ANR	968780	AssignmentExpression	max = core -> print -> cur		967363	1		=			
ANR	968781	Identifier	max		967363	0					
ANR	968782	PtrMemberAccess	core -> print -> cur		967363	1					
ANR	968783	PtrMemberAccess	core -> print		967363	0					
ANR	968784	Identifier	core		967363	0					
ANR	968785	Identifier	print		967363	1					
ANR	968786	Identifier	cur		967363	1					
ANR	968787	IfStatement	if ( core -> print -> cur_enabled )		967363	14					
ANR	968788	Condition	core -> print -> cur_enabled	1833:7:60351:60374	967363	0	True				
ANR	968789	PtrMemberAccess	core -> print -> cur_enabled		967363	0					
ANR	968790	PtrMemberAccess	core -> print		967363	0					
ANR	968791	Identifier	core		967363	0					
ANR	968792	Identifier	print		967363	1					
ANR	968793	Identifier	cur_enabled		967363	1					
ANR	968794	CompoundStatement		214:33:5860:5860	967363	1					
ANR	968795	IfStatement	if ( low == max )		967363	0					
ANR	968796	Condition	low == max	1834:8:60387:60396	967363	0	True				
ANR	968797	EqualityExpression	low == max		967363	0		==			
ANR	968798	Identifier	low		967363	0					
ANR	968799	Identifier	max		967363	1					
ANR	968800	CompoundStatement		215:20:5882:5882	967363	1					
ANR	968801	IfStatement	if ( low == here )		967363	0					
ANR	968802	Condition	low == here	1835:9:60410:60420	967363	0	True				
ANR	968803	EqualityExpression	low == here		967363	0		==			
ANR	968804	Identifier	low		967363	0					
ANR	968805	Identifier	here		967363	1					
ANR	968806	CompoundStatement		216:22:5906:5906	967363	1					
ANR	968807	IfStatement	if ( html )		967363	0					
ANR	968808	Condition	html	1836:10:60435:60438	967363	0	True				
ANR	968809	Identifier	html		967363	0					
ANR	968810	CompoundStatement		217:16:5924:5924	967363	1					
ANR	968811	ExpressionStatement	"append ( ebytes , ""["" )"	1837:7:60450:60470	967363	0	True				
ANR	968812	CallExpression	"append ( ebytes , ""["" )"		967363	0					
ANR	968813	Callee	append		967363	0					
ANR	968814	Identifier	append		967363	0					
ANR	968815	ArgumentList	ebytes		967363	1					
ANR	968816	Argument	ebytes		967363	0					
ANR	968817	Identifier	ebytes		967363	0					
ANR	968818	Argument	"""["""		967363	1					
ANR	968819	PrimaryExpression	"""["""		967363	0					
ANR	968820	ExpressionStatement	"append ( echars , ""["" )"	1838:7:60479:60499	967363	1	True				
ANR	968821	CallExpression	"append ( echars , ""["" )"		967363	0					
ANR	968822	Callee	append		967363	0					
ANR	968823	Identifier	append		967363	0					
ANR	968824	ArgumentList	echars		967363	1					
ANR	968825	Argument	echars		967363	0					
ANR	968826	Identifier	echars		967363	0					
ANR	968827	Argument	"""["""		967363	1					
ANR	968828	PrimaryExpression	"""["""		967363	0					
ANR	968829	ElseStatement	else		967363	0					
ANR	968830	CompoundStatement		220:13:5997:5997	967363	0					
ANR	968831	ExpressionStatement	"append ( echars , Color_INVERT )"	1840:7:60523:60552	967363	0	True				
ANR	968832	CallExpression	"append ( echars , Color_INVERT )"		967363	0					
ANR	968833	Callee	append		967363	0					
ANR	968834	Identifier	append		967363	0					
ANR	968835	ArgumentList	echars		967363	1					
ANR	968836	Argument	echars		967363	0					
ANR	968837	Identifier	echars		967363	0					
ANR	968838	Argument	Color_INVERT		967363	1					
ANR	968839	Identifier	Color_INVERT		967363	0					
ANR	968840	ExpressionStatement	"append ( ebytes , Color_INVERT )"	1841:7:60561:60590	967363	1	True				
ANR	968841	CallExpression	"append ( ebytes , Color_INVERT )"		967363	0					
ANR	968842	Callee	append		967363	0					
ANR	968843	Identifier	append		967363	0					
ANR	968844	ArgumentList	ebytes		967363	1					
ANR	968845	Argument	ebytes		967363	0					
ANR	968846	Identifier	ebytes		967363	0					
ANR	968847	Argument	Color_INVERT		967363	1					
ANR	968848	Identifier	Color_INVERT		967363	0					
ANR	968849	ElseStatement	else		967363	0					
ANR	968850	CompoundStatement		225:11:6101:6101	967363	0					
ANR	968851	IfStatement	if ( here >= low && here < max )		967363	0					
ANR	968852	Condition	here >= low && here < max	1845:9:60629:60653	967363	0	True				
ANR	968853	AndExpression	here >= low && here < max		967363	0		&&			
ANR	968854	RelationalExpression	here >= low		967363	0		>=			
ANR	968855	Identifier	here		967363	0					
ANR	968856	Identifier	low		967363	1					
ANR	968857	RelationalExpression	here < max		967363	1		<			
ANR	968858	Identifier	here		967363	0					
ANR	968859	Identifier	max		967363	1					
ANR	968860	CompoundStatement		226:36:6139:6139	967363	1					
ANR	968861	IfStatement	if ( html )		967363	0					
ANR	968862	Condition	html	1846:10:60668:60671	967363	0	True				
ANR	968863	Identifier	html		967363	0					
ANR	968864	CompoundStatement		227:16:6157:6157	967363	1					
ANR	968865	ExpressionStatement	"append ( ebytes , ""["" )"	1847:7:60683:60703	967363	0	True				
ANR	968866	CallExpression	"append ( ebytes , ""["" )"		967363	0					
ANR	968867	Callee	append		967363	0					
ANR	968868	Identifier	append		967363	0					
ANR	968869	ArgumentList	ebytes		967363	1					
ANR	968870	Argument	ebytes		967363	0					
ANR	968871	Identifier	ebytes		967363	0					
ANR	968872	Argument	"""["""		967363	1					
ANR	968873	PrimaryExpression	"""["""		967363	0					
ANR	968874	ExpressionStatement	"append ( echars , ""["" )"	1848:7:60712:60732	967363	1	True				
ANR	968875	CallExpression	"append ( echars , ""["" )"		967363	0					
ANR	968876	Callee	append		967363	0					
ANR	968877	Identifier	append		967363	0					
ANR	968878	ArgumentList	echars		967363	1					
ANR	968879	Argument	echars		967363	0					
ANR	968880	Identifier	echars		967363	0					
ANR	968881	Argument	"""["""		967363	1					
ANR	968882	PrimaryExpression	"""["""		967363	0					
ANR	968883	ElseStatement	else		967363	0					
ANR	968884	CompoundStatement		230:13:6230:6230	967363	0					
ANR	968885	ExpressionStatement	"append ( ebytes , Color_INVERT )"	1850:7:60756:60785	967363	0	True				
ANR	968886	CallExpression	"append ( ebytes , Color_INVERT )"		967363	0					
ANR	968887	Callee	append		967363	0					
ANR	968888	Identifier	append		967363	0					
ANR	968889	ArgumentList	ebytes		967363	1					
ANR	968890	Argument	ebytes		967363	0					
ANR	968891	Identifier	ebytes		967363	0					
ANR	968892	Argument	Color_INVERT		967363	1					
ANR	968893	Identifier	Color_INVERT		967363	0					
ANR	968894	ExpressionStatement	"append ( echars , Color_INVERT )"	1851:7:60794:60823	967363	1	True				
ANR	968895	CallExpression	"append ( echars , Color_INVERT )"		967363	0					
ANR	968896	Callee	append		967363	0					
ANR	968897	Identifier	append		967363	0					
ANR	968898	ArgumentList	echars		967363	1					
ANR	968899	Argument	echars		967363	0					
ANR	968900	Identifier	echars		967363	0					
ANR	968901	Argument	Color_INVERT		967363	1					
ANR	968902	Identifier	Color_INVERT		967363	0					
ANR	968903	ExpressionStatement	"sprintf ( ebytes , ""%02x"" , ch )"	1856:3:60854:60882	967363	15	True				
ANR	968904	CallExpression	"sprintf ( ebytes , ""%02x"" , ch )"		967363	0					
ANR	968905	Callee	sprintf		967363	0					
ANR	968906	Identifier	sprintf		967363	0					
ANR	968907	ArgumentList	ebytes		967363	1					
ANR	968908	Argument	ebytes		967363	0					
ANR	968909	Identifier	ebytes		967363	0					
ANR	968910	Argument	"""%02x"""		967363	1					
ANR	968911	PrimaryExpression	"""%02x"""		967363	0					
ANR	968912	Argument	ch		967363	2					
ANR	968913	Identifier	ch		967363	0					
ANR	968914	ExpressionStatement	ebytes += strlen ( ebytes )	1858:3:60937:60962	967363	16	True				
ANR	968915	AssignmentExpression	ebytes += strlen ( ebytes )		967363	0		+=			
ANR	968916	Identifier	ebytes		967363	0					
ANR	968917	CallExpression	strlen ( ebytes )		967363	1					
ANR	968918	Callee	strlen		967363	0					
ANR	968919	Identifier	strlen		967363	0					
ANR	968920	ArgumentList	ebytes		967363	1					
ANR	968921	Argument	ebytes		967363	0					
ANR	968922	Identifier	ebytes		967363	0					
ANR	968923	IfStatement	if ( hadflag )		967363	17					
ANR	968924	Condition	hadflag	1859:7:60971:60977	967363	0	True				
ANR	968925	Identifier	hadflag		967363	0					
ANR	968926	CompoundStatement		240:16:6463:6463	967363	1					
ANR	968927	ExpressionStatement	"append ( ebytes , Color_INVERT_RESET )"	1860:4:60986:61021	967363	0	True				
ANR	968928	CallExpression	"append ( ebytes , Color_INVERT_RESET )"		967363	0					
ANR	968929	Callee	append		967363	0					
ANR	968930	Identifier	append		967363	0					
ANR	968931	ArgumentList	ebytes		967363	1					
ANR	968932	Argument	ebytes		967363	0					
ANR	968933	Identifier	ebytes		967363	0					
ANR	968934	Argument	Color_INVERT_RESET		967363	1					
ANR	968935	Identifier	Color_INVERT_RESET		967363	0					
ANR	968936	ExpressionStatement	"append ( echars , Color_INVERT_RESET )"	1861:4:61027:61062	967363	1	True				
ANR	968937	CallExpression	"append ( echars , Color_INVERT_RESET )"		967363	0					
ANR	968938	Callee	append		967363	0					
ANR	968939	Identifier	append		967363	0					
ANR	968940	ArgumentList	echars		967363	1					
ANR	968941	Argument	echars		967363	0					
ANR	968942	Identifier	echars		967363	0					
ANR	968943	Argument	Color_INVERT_RESET		967363	1					
ANR	968944	Identifier	Color_INVERT_RESET		967363	0					
ANR	968945	ExpressionStatement	hadflag = false	1862:4:61068:61083	967363	2	True				
ANR	968946	AssignmentExpression	hadflag = false		967363	0		=			
ANR	968947	Identifier	hadflag		967363	0					
ANR	968948	Identifier	false		967363	1					
ANR	968949	ExpressionStatement	"sprintf ( echars , ""%c"" , IS_PRINTABLE ( ch ) ? ch : '.' )"	1864:3:61093:61143	967363	18	True				
ANR	968950	CallExpression	"sprintf ( echars , ""%c"" , IS_PRINTABLE ( ch ) ? ch : '.' )"		967363	0					
ANR	968951	Callee	sprintf		967363	0					
ANR	968952	Identifier	sprintf		967363	0					
ANR	968953	ArgumentList	echars		967363	1					
ANR	968954	Argument	echars		967363	0					
ANR	968955	Identifier	echars		967363	0					
ANR	968956	Argument	"""%c"""		967363	1					
ANR	968957	PrimaryExpression	"""%c"""		967363	0					
ANR	968958	Argument	IS_PRINTABLE ( ch ) ? ch : '.'		967363	2					
ANR	968959	ConditionalExpression	IS_PRINTABLE ( ch ) ? ch : '.'		967363	0					
ANR	968960	Condition	IS_PRINTABLE ( ch )		967363	0					
ANR	968961	CallExpression	IS_PRINTABLE ( ch )		967363	0					
ANR	968962	Callee	IS_PRINTABLE		967363	0					
ANR	968963	Identifier	IS_PRINTABLE		967363	0					
ANR	968964	ArgumentList	ch		967363	1					
ANR	968965	Argument	ch		967363	0					
ANR	968966	Identifier	ch		967363	0					
ANR	968967	Identifier	ch		967363	1					
ANR	968968	PrimaryExpression	'.'		967363	2					
ANR	968969	ExpressionStatement	echars ++	1865:3:61148:61156	967363	19	True				
ANR	968970	PostIncDecOperationExpression	echars ++		967363	0					
ANR	968971	Identifier	echars		967363	0					
ANR	968972	IncDec	++		967363	1					
ANR	968973	IfStatement	if ( core -> print -> cur_enabled && max == here )		967363	20					
ANR	968974	Condition	core -> print -> cur_enabled && max == here	1866:7:61165:61203	967363	0	True				
ANR	968975	AndExpression	core -> print -> cur_enabled && max == here		967363	0		&&			
ANR	968976	PtrMemberAccess	core -> print -> cur_enabled		967363	0					
ANR	968977	PtrMemberAccess	core -> print		967363	0					
ANR	968978	Identifier	core		967363	0					
ANR	968979	Identifier	print		967363	1					
ANR	968980	Identifier	cur_enabled		967363	1					
ANR	968981	EqualityExpression	max == here		967363	1		==			
ANR	968982	Identifier	max		967363	0					
ANR	968983	Identifier	here		967363	1					
ANR	968984	CompoundStatement		247:48:6689:6689	967363	1					
ANR	968985	IfStatement	if ( ! html )		967363	0					
ANR	968986	Condition	! html	1867:8:61216:61220	967363	0	True				
ANR	968987	UnaryOperationExpression	! html		967363	0					
ANR	968988	UnaryOperator	!		967363	0					
ANR	968989	Identifier	html		967363	1					
ANR	968990	CompoundStatement		248:15:6706:6706	967363	1					
ANR	968991	ExpressionStatement	"append ( ebytes , Color_RESET )"	1868:5:61230:61258	967363	0	True				
ANR	968992	CallExpression	"append ( ebytes , Color_RESET )"		967363	0					
ANR	968993	Callee	append		967363	0					
ANR	968994	Identifier	append		967363	0					
ANR	968995	ArgumentList	ebytes		967363	1					
ANR	968996	Argument	ebytes		967363	0					
ANR	968997	Identifier	ebytes		967363	0					
ANR	968998	Argument	Color_RESET		967363	1					
ANR	968999	Identifier	Color_RESET		967363	0					
ANR	969000	ExpressionStatement	"append ( echars , Color_RESET )"	1869:5:61265:61293	967363	1	True				
ANR	969001	CallExpression	"append ( echars , Color_RESET )"		967363	0					
ANR	969002	Callee	append		967363	0					
ANR	969003	Identifier	append		967363	0					
ANR	969004	ArgumentList	echars		967363	1					
ANR	969005	Argument	echars		967363	0					
ANR	969006	Identifier	echars		967363	0					
ANR	969007	Argument	Color_RESET		967363	1					
ANR	969008	Identifier	Color_RESET		967363	0					
ANR	969009	ExpressionStatement	hascolor = false	1871:4:61305:61321	967363	1	True				
ANR	969010	AssignmentExpression	hascolor = false		967363	0		=			
ANR	969011	Identifier	hascolor		967363	0					
ANR	969012	Identifier	false		967363	1					
ANR	969013	IfStatement	if ( j < ( nb_cols - 1 ) && ( j % 2 ) && ! compact )		967363	21					
ANR	969014	Condition	j < ( nb_cols - 1 ) && ( j % 2 ) && ! compact	1874:7:61336:61375	967363	0	True				
ANR	969015	AndExpression	j < ( nb_cols - 1 ) && ( j % 2 ) && ! compact		967363	0		&&			
ANR	969016	RelationalExpression	j < ( nb_cols - 1 )		967363	0		<			
ANR	969017	Identifier	j		967363	0					
ANR	969018	AdditiveExpression	nb_cols - 1		967363	1		-			
ANR	969019	Identifier	nb_cols		967363	0					
ANR	969020	PrimaryExpression	1		967363	1					
ANR	969021	AndExpression	( j % 2 ) && ! compact		967363	1		&&			
ANR	969022	MultiplicativeExpression	j % 2		967363	0		%			
ANR	969023	Identifier	j		967363	0					
ANR	969024	PrimaryExpression	2		967363	1					
ANR	969025	UnaryOperationExpression	! compact		967363	1					
ANR	969026	UnaryOperator	!		967363	0					
ANR	969027	Identifier	compact		967363	1					
ANR	969028	CompoundStatement		255:49:6861:6861	967363	1					
ANR	969029	ExpressionStatement	"append ( ebytes , "" "" )"	1875:4:61384:61404	967363	0	True				
ANR	969030	CallExpression	"append ( ebytes , "" "" )"		967363	0					
ANR	969031	Callee	append		967363	0					
ANR	969032	Identifier	append		967363	0					
ANR	969033	ArgumentList	ebytes		967363	1					
ANR	969034	Argument	ebytes		967363	0					
ANR	969035	Identifier	ebytes		967363	0					
ANR	969036	Argument	""" """		967363	1					
ANR	969037	PrimaryExpression	""" """		967363	0					
ANR	969038	IfStatement	if ( fend != UT64_MAX && fend == addr + j + 1 )		967363	22					
ANR	969039	Condition	fend != UT64_MAX && fend == addr + j + 1	1878:7:61419:61458	967363	0	True				
ANR	969040	AndExpression	fend != UT64_MAX && fend == addr + j + 1		967363	0		&&			
ANR	969041	EqualityExpression	fend != UT64_MAX		967363	0		!=			
ANR	969042	Identifier	fend		967363	0					
ANR	969043	Identifier	UT64_MAX		967363	1					
ANR	969044	EqualityExpression	fend == addr + j + 1		967363	1		==			
ANR	969045	Identifier	fend		967363	0					
ANR	969046	AdditiveExpression	addr + j + 1		967363	1		+			
ANR	969047	Identifier	addr		967363	0					
ANR	969048	AdditiveExpression	j + 1		967363	1		+			
ANR	969049	Identifier	j		967363	0					
ANR	969050	PrimaryExpression	1		967363	1					
ANR	969051	CompoundStatement		259:49:6944:6944	967363	1					
ANR	969052	IfStatement	if ( ! html )		967363	0					
ANR	969053	Condition	! html	1879:8:61471:61475	967363	0	True				
ANR	969054	UnaryOperationExpression	! html		967363	0					
ANR	969055	UnaryOperator	!		967363	0					
ANR	969056	Identifier	html		967363	1					
ANR	969057	CompoundStatement		260:15:6961:6961	967363	1					
ANR	969058	ExpressionStatement	"append ( ebytes , Color_RESET )"	1880:5:61485:61513	967363	0	True				
ANR	969059	CallExpression	"append ( ebytes , Color_RESET )"		967363	0					
ANR	969060	Callee	append		967363	0					
ANR	969061	Identifier	append		967363	0					
ANR	969062	ArgumentList	ebytes		967363	1					
ANR	969063	Argument	ebytes		967363	0					
ANR	969064	Identifier	ebytes		967363	0					
ANR	969065	Argument	Color_RESET		967363	1					
ANR	969066	Identifier	Color_RESET		967363	0					
ANR	969067	ExpressionStatement	"append ( echars , Color_RESET )"	1881:5:61520:61548	967363	1	True				
ANR	969068	CallExpression	"append ( echars , Color_RESET )"		967363	0					
ANR	969069	Callee	append		967363	0					
ANR	969070	Identifier	append		967363	0					
ANR	969071	ArgumentList	echars		967363	1					
ANR	969072	Argument	echars		967363	0					
ANR	969073	Identifier	echars		967363	0					
ANR	969074	Argument	Color_RESET		967363	1					
ANR	969075	Identifier	Color_RESET		967363	0					
ANR	969076	ExpressionStatement	fend = UT64_MAX	1883:4:61560:61575	967363	1	True				
ANR	969077	AssignmentExpression	fend = UT64_MAX		967363	0		=			
ANR	969078	Identifier	fend		967363	0					
ANR	969079	Identifier	UT64_MAX		967363	1					
ANR	969080	ExpressionStatement	hascolor = false	1884:4:61581:61597	967363	2	True				
ANR	969081	AssignmentExpression	hascolor = false		967363	0		=			
ANR	969082	Identifier	hascolor		967363	0					
ANR	969083	Identifier	false		967363	1					
ANR	969084	IfStatement	if ( ! html )		967363	25					
ANR	969085	Condition	! html	1887:6:61614:61618	967363	0	True				
ANR	969086	UnaryOperationExpression	! html		967363	0					
ANR	969087	UnaryOperator	!		967363	0					
ANR	969088	Identifier	html		967363	1					
ANR	969089	CompoundStatement		268:13:7104:7104	967363	1					
ANR	969090	ExpressionStatement	"append ( ebytes , Color_RESET )"	1888:3:61626:61654	967363	0	True				
ANR	969091	CallExpression	"append ( ebytes , Color_RESET )"		967363	0					
ANR	969092	Callee	append		967363	0					
ANR	969093	Identifier	append		967363	0					
ANR	969094	ArgumentList	ebytes		967363	1					
ANR	969095	Argument	ebytes		967363	0					
ANR	969096	Identifier	ebytes		967363	0					
ANR	969097	Argument	Color_RESET		967363	1					
ANR	969098	Identifier	Color_RESET		967363	0					
ANR	969099	ExpressionStatement	"append ( echars , Color_RESET )"	1889:3:61659:61687	967363	1	True				
ANR	969100	CallExpression	"append ( echars , Color_RESET )"		967363	0					
ANR	969101	Callee	append		967363	0					
ANR	969102	Identifier	append		967363	0					
ANR	969103	ArgumentList	echars		967363	1					
ANR	969104	Argument	echars		967363	0					
ANR	969105	Identifier	echars		967363	0					
ANR	969106	Argument	Color_RESET		967363	1					
ANR	969107	Identifier	Color_RESET		967363	0					
ANR	969108	ExpressionStatement	"append ( ebytes , ( col == 1 ) ? ""| "" : ( col == 2 ) ? "" |"" : ""  "" )"	1891:2:61695:61752	967363	26	True				
ANR	969109	CallExpression	"append ( ebytes , ( col == 1 ) ? ""| "" : ( col == 2 ) ? "" |"" : ""  "" )"		967363	0					
ANR	969110	Callee	append		967363	0					
ANR	969111	Identifier	append		967363	0					
ANR	969112	ArgumentList	ebytes		967363	1					
ANR	969113	Argument	ebytes		967363	0					
ANR	969114	Identifier	ebytes		967363	0					
ANR	969115	Argument	"( col == 1 ) ? ""| "" : ( col == 2 ) ? "" |"" : ""  """		967363	1					
ANR	969116	ConditionalExpression	"( col == 1 ) ? ""| "" : ( col == 2 ) ? "" |"" : ""  """		967363	0					
ANR	969117	Condition	col == 1		967363	0					
ANR	969118	EqualityExpression	col == 1		967363	0		==			
ANR	969119	Identifier	col		967363	0					
ANR	969120	PrimaryExpression	1		967363	1					
ANR	969121	PrimaryExpression	"""| """		967363	1					
ANR	969122	ConditionalExpression	"( col == 2 ) ? "" |"" : ""  """		967363	2					
ANR	969123	Condition	col == 2		967363	0					
ANR	969124	EqualityExpression	col == 2		967363	0		==			
ANR	969125	Identifier	col		967363	0					
ANR	969126	PrimaryExpression	2		967363	1					
ANR	969127	PrimaryExpression	""" |"""		967363	1					
ANR	969128	PrimaryExpression	"""  """		967363	2					
ANR	969129	IfStatement	if ( col == 2 )		967363	27					
ANR	969130	Condition	col == 2	1892:6:61760:61767	967363	0	True				
ANR	969131	EqualityExpression	col == 2		967363	0		==			
ANR	969132	Identifier	col		967363	0					
ANR	969133	PrimaryExpression	2		967363	1					
ANR	969134	CompoundStatement		273:16:7253:7253	967363	1					
ANR	969135	ExpressionStatement	"append ( echars , ""|"" )"	1893:3:61775:61795	967363	0	True				
ANR	969136	CallExpression	"append ( echars , ""|"" )"		967363	0					
ANR	969137	Callee	append		967363	0					
ANR	969138	Identifier	append		967363	0					
ANR	969139	ArgumentList	echars		967363	1					
ANR	969140	Argument	echars		967363	0					
ANR	969141	Identifier	echars		967363	0					
ANR	969142	Argument	"""|"""		967363	1					
ANR	969143	PrimaryExpression	"""|"""		967363	0					
ANR	969144	IfStatement	if ( marks )		967363	28					
ANR	969145	Condition	marks	1896:6:61808:61812	967363	0	True				
ANR	969146	Identifier	marks		967363	0					
ANR	969147	CompoundStatement		280:3:7385:7427	967363	1					
ANR	969148	IdentifierDeclStatement	int hasline = 0 ;	1897:3:61847:61862	967363	0	True				
ANR	969149	IdentifierDecl	hasline = 0		967363	0					
ANR	969150	IdentifierDeclType	int		967363	0					
ANR	969151	Identifier	hasline		967363	1					
ANR	969152	AssignmentExpression	hasline = 0		967363	2		=			
ANR	969153	Identifier	hasline		967363	0					
ANR	969154	PrimaryExpression	0		967363	1					
ANR	969155	IdentifierDeclStatement	int out_sz = nb_cons_cols + 20 ;	1898:3:61867:61897	967363	1	True				
ANR	969156	IdentifierDecl	out_sz = nb_cons_cols + 20		967363	0					
ANR	969157	IdentifierDeclType	int		967363	0					
ANR	969158	Identifier	out_sz		967363	1					
ANR	969159	AssignmentExpression	out_sz = nb_cons_cols + 20		967363	2		=			
ANR	969160	Identifier	out_sz		967363	0					
ANR	969161	AdditiveExpression	nb_cons_cols + 20		967363	1		+			
ANR	969162	Identifier	nb_cons_cols		967363	0					
ANR	969163	PrimaryExpression	20		967363	1					
ANR	969164	IdentifierDeclStatement	"char * out = calloc ( out_sz , sizeof ( char ) ) ;"	1899:3:61902:61944	967363	2	True				
ANR	969165	IdentifierDecl	"* out = calloc ( out_sz , sizeof ( char ) )"		967363	0					
ANR	969166	IdentifierDeclType	char *		967363	0					
ANR	969167	Identifier	out		967363	1					
ANR	969168	AssignmentExpression	"* out = calloc ( out_sz , sizeof ( char ) )"		967363	2		=			
ANR	969169	Identifier	out		967363	0					
ANR	969170	CallExpression	"calloc ( out_sz , sizeof ( char ) )"		967363	1					
ANR	969171	Callee	calloc		967363	0					
ANR	969172	Identifier	calloc		967363	0					
ANR	969173	ArgumentList	out_sz		967363	1					
ANR	969174	Argument	out_sz		967363	0					
ANR	969175	Identifier	out_sz		967363	0					
ANR	969176	Argument	sizeof ( char )		967363	1					
ANR	969177	SizeofExpression	sizeof ( char )		967363	0					
ANR	969178	Sizeof	sizeof		967363	0					
ANR	969179	SizeofOperand	char		967363	1					
ANR	969180	ExpressionStatement	"memset ( out , ' ' , nb_cons_cols - 1 )"	1900:3:61949:61984	967363	3	True				
ANR	969181	CallExpression	"memset ( out , ' ' , nb_cons_cols - 1 )"		967363	0					
ANR	969182	Callee	memset		967363	0					
ANR	969183	Identifier	memset		967363	0					
ANR	969184	ArgumentList	out		967363	1					
ANR	969185	Argument	out		967363	0					
ANR	969186	Identifier	out		967363	0					
ANR	969187	Argument	' '		967363	1					
ANR	969188	PrimaryExpression	' '		967363	0					
ANR	969189	Argument	nb_cons_cols - 1		967363	2					
ANR	969190	AdditiveExpression	nb_cons_cols - 1		967363	0		-			
ANR	969191	Identifier	nb_cons_cols		967363	0					
ANR	969192	PrimaryExpression	1		967363	1					
ANR	969193	ForStatement	for ( j = 0 ; j < nb_cols ; j ++ )		967363	4					
ANR	969194	ForInit	j = 0 ;	1901:8:61994:61999	967363	0	True				
ANR	969195	AssignmentExpression	j = 0		967363	0		=			
ANR	969196	Identifier	j		967363	0					
ANR	969197	PrimaryExpression	0		967363	1					
ANR	969198	Condition	j < nb_cols	1901:15:62001:62011	967363	1	True				
ANR	969199	RelationalExpression	j < nb_cols		967363	0		<			
ANR	969200	Identifier	j		967363	0					
ANR	969201	Identifier	nb_cols		967363	1					
ANR	969202	PostIncDecOperationExpression	j ++	1901:28:62014:62016	967363	2	True				
ANR	969203	Identifier	j		967363	0					
ANR	969204	IncDec	++		967363	1					
ANR	969205	CompoundStatement		282:33:7502:7502	967363	3					
ANR	969206	IfStatement	if ( note [ j ] )		967363	0					
ANR	969207	Condition	note [ j ]	1902:8:62029:62035	967363	0	True				
ANR	969208	ArrayIndexing	note [ j ]		967363	0					
ANR	969209	Identifier	note		967363	0					
ANR	969210	Identifier	j		967363	1					
ANR	969211	CompoundStatement		286:5:7606:7652	967363	1					
ANR	969212	IdentifierDeclStatement	int off = ( j * 3 ) - ( j / 2 ) + 13 ;	1903:5:62045:62077	967363	0	True				
ANR	969213	IdentifierDecl	off = ( j * 3 ) - ( j / 2 ) + 13		967363	0					
ANR	969214	IdentifierDeclType	int		967363	0					
ANR	969215	Identifier	off		967363	1					
ANR	969216	AssignmentExpression	off = ( j * 3 ) - ( j / 2 ) + 13		967363	2		=			
ANR	969217	Identifier	off		967363	0					
ANR	969218	AdditiveExpression	( j * 3 ) - ( j / 2 ) + 13		967363	1		-			
ANR	969219	MultiplicativeExpression	j * 3		967363	0		*			
ANR	969220	Identifier	j		967363	0					
ANR	969221	PrimaryExpression	3		967363	1					
ANR	969222	AdditiveExpression	( j / 2 ) + 13		967363	1		+			
ANR	969223	MultiplicativeExpression	j / 2		967363	0		/			
ANR	969224	Identifier	j		967363	0					
ANR	969225	PrimaryExpression	2		967363	1					
ANR	969226	PrimaryExpression	13		967363	1					
ANR	969227	IdentifierDeclStatement	int notej_len = strlen ( note [ j ] ) ;	1904:5:62084:62116	967363	1	True				
ANR	969228	IdentifierDecl	notej_len = strlen ( note [ j ] )		967363	0					
ANR	969229	IdentifierDeclType	int		967363	0					
ANR	969230	Identifier	notej_len		967363	1					
ANR	969231	AssignmentExpression	notej_len = strlen ( note [ j ] )		967363	2		=			
ANR	969232	Identifier	notej_len		967363	0					
ANR	969233	CallExpression	strlen ( note [ j ] )		967363	1					
ANR	969234	Callee	strlen		967363	0					
ANR	969235	Identifier	strlen		967363	0					
ANR	969236	ArgumentList	note [ j ]		967363	1					
ANR	969237	Argument	note [ j ]		967363	0					
ANR	969238	ArrayIndexing	note [ j ]		967363	0					
ANR	969239	Identifier	note		967363	0					
ANR	969240	Identifier	j		967363	1					
ANR	969241	IdentifierDeclStatement	"int sz = R_MIN ( notej_len , nb_cons_cols - off ) ;"	1905:5:62123:62169	967363	2	True				
ANR	969242	IdentifierDecl	"sz = R_MIN ( notej_len , nb_cons_cols - off )"		967363	0					
ANR	969243	IdentifierDeclType	int		967363	0					
ANR	969244	Identifier	sz		967363	1					
ANR	969245	AssignmentExpression	"sz = R_MIN ( notej_len , nb_cons_cols - off )"		967363	2		=			
ANR	969246	Identifier	sz		967363	0					
ANR	969247	CallExpression	"R_MIN ( notej_len , nb_cons_cols - off )"		967363	1					
ANR	969248	Callee	R_MIN		967363	0					
ANR	969249	Identifier	R_MIN		967363	0					
ANR	969250	ArgumentList	notej_len		967363	1					
ANR	969251	Argument	notej_len		967363	0					
ANR	969252	Identifier	notej_len		967363	0					
ANR	969253	Argument	nb_cons_cols - off		967363	1					
ANR	969254	AdditiveExpression	nb_cons_cols - off		967363	0		-			
ANR	969255	Identifier	nb_cons_cols		967363	0					
ANR	969256	Identifier	off		967363	1					
ANR	969257	IfStatement	if ( compact )		967363	3					
ANR	969258	Condition	compact	1906:9:62180:62186	967363	0	True				
ANR	969259	Identifier	compact		967363	0					
ANR	969260	CompoundStatement		287:18:7672:7672	967363	1					
ANR	969261	ExpressionStatement	off -= ( j / 2 )	1907:6:62197:62209	967363	0	True				
ANR	969262	AssignmentExpression	off -= ( j / 2 )		967363	0		-=			
ANR	969263	Identifier	off		967363	0					
ANR	969264	MultiplicativeExpression	j / 2		967363	1		/			
ANR	969265	Identifier	j		967363	0					
ANR	969266	PrimaryExpression	2		967363	1					
ANR	969267	ElseStatement	else		967363	0					
ANR	969268	CompoundStatement		289:12:7706:7706	967363	0					
ANR	969269	IfStatement	if ( j % 2 )		967363	0					
ANR	969270	Condition	j % 2	1909:10:62235:62239	967363	0	True				
ANR	969271	MultiplicativeExpression	j % 2		967363	0		%			
ANR	969272	Identifier	j		967363	0					
ANR	969273	PrimaryExpression	2		967363	1					
ANR	969274	CompoundStatement		290:17:7725:7725	967363	1					
ANR	969275	ExpressionStatement	off --	1910:7:62251:62256	967363	0	True				
ANR	969276	PostIncDecOperationExpression	off --		967363	0					
ANR	969277	Identifier	off		967363	0					
ANR	969278	IncDec	--		967363	1					
ANR	969279	ExpressionStatement	"memcpy ( out + off , note [ j ] , sz )"	1913:5:62278:62309	967363	4	True				
ANR	969280	CallExpression	"memcpy ( out + off , note [ j ] , sz )"		967363	0					
ANR	969281	Callee	memcpy		967363	0					
ANR	969282	Identifier	memcpy		967363	0					
ANR	969283	ArgumentList	out + off		967363	1					
ANR	969284	Argument	out + off		967363	0					
ANR	969285	AdditiveExpression	out + off		967363	0		+			
ANR	969286	Identifier	out		967363	0					
ANR	969287	Identifier	off		967363	1					
ANR	969288	Argument	note [ j ]		967363	1					
ANR	969289	ArrayIndexing	note [ j ]		967363	0					
ANR	969290	Identifier	note		967363	0					
ANR	969291	Identifier	j		967363	1					
ANR	969292	Argument	sz		967363	2					
ANR	969293	Identifier	sz		967363	0					
ANR	969294	IfStatement	if ( sz < notej_len )		967363	5					
ANR	969295	Condition	sz < notej_len	1914:9:62320:62333	967363	0	True				
ANR	969296	RelationalExpression	sz < notej_len		967363	0		<			
ANR	969297	Identifier	sz		967363	0					
ANR	969298	Identifier	notej_len		967363	1					
ANR	969299	CompoundStatement		295:25:7819:7819	967363	1					
ANR	969300	ExpressionStatement	out [ off + sz - 2 ] = '.'	1915:6:62344:62367	967363	0	True				
ANR	969301	AssignmentExpression	out [ off + sz - 2 ] = '.'		967363	0		=			
ANR	969302	ArrayIndexing	out [ off + sz - 2 ]		967363	0					
ANR	969303	Identifier	out		967363	0					
ANR	969304	AdditiveExpression	off + sz - 2		967363	1		+			
ANR	969305	Identifier	off		967363	0					
ANR	969306	AdditiveExpression	sz - 2		967363	1		-			
ANR	969307	Identifier	sz		967363	0					
ANR	969308	PrimaryExpression	2		967363	1					
ANR	969309	PrimaryExpression	'.'		967363	1					
ANR	969310	ExpressionStatement	out [ off + sz - 1 ] = '.'	1916:6:62375:62398	967363	1	True				
ANR	969311	AssignmentExpression	out [ off + sz - 1 ] = '.'		967363	0		=			
ANR	969312	ArrayIndexing	out [ off + sz - 1 ]		967363	0					
ANR	969313	Identifier	out		967363	0					
ANR	969314	AdditiveExpression	off + sz - 1		967363	1		+			
ANR	969315	Identifier	off		967363	0					
ANR	969316	AdditiveExpression	sz - 1		967363	1		-			
ANR	969317	Identifier	sz		967363	0					
ANR	969318	PrimaryExpression	1		967363	1					
ANR	969319	PrimaryExpression	'.'		967363	1					
ANR	969320	ExpressionStatement	hasline = ( out [ off ] != ' ' )	1918:5:62412:62439	967363	6	True				
ANR	969321	AssignmentExpression	hasline = ( out [ off ] != ' ' )		967363	0		=			
ANR	969322	Identifier	hasline		967363	0					
ANR	969323	EqualityExpression	out [ off ] != ' '		967363	1		!=			
ANR	969324	ArrayIndexing	out [ off ]		967363	0					
ANR	969325	Identifier	out		967363	0					
ANR	969326	Identifier	off		967363	1					
ANR	969327	PrimaryExpression	' '		967363	1					
ANR	969328	ExpressionStatement	R_FREE ( note [ j ] )	1919:5:62446:62462	967363	7	True				
ANR	969329	CallExpression	R_FREE ( note [ j ] )		967363	0					
ANR	969330	Callee	R_FREE		967363	0					
ANR	969331	Identifier	R_FREE		967363	0					
ANR	969332	ArgumentList	note [ j ]		967363	1					
ANR	969333	Argument	note [ j ]		967363	0					
ANR	969334	ArrayIndexing	note [ j ]		967363	0					
ANR	969335	Identifier	note		967363	0					
ANR	969336	Identifier	j		967363	1					
ANR	969337	ExpressionStatement	out [ out_sz - 1 ] = 0	1922:3:62478:62497	967363	5	True				
ANR	969338	AssignmentExpression	out [ out_sz - 1 ] = 0		967363	0		=			
ANR	969339	ArrayIndexing	out [ out_sz - 1 ]		967363	0					
ANR	969340	Identifier	out		967363	0					
ANR	969341	AdditiveExpression	out_sz - 1		967363	1		-			
ANR	969342	Identifier	out_sz		967363	0					
ANR	969343	PrimaryExpression	1		967363	1					
ANR	969344	PrimaryExpression	0		967363	1					
ANR	969345	IfStatement	if ( hasline )		967363	6					
ANR	969346	Condition	hasline	1923:7:62506:62512	967363	0	True				
ANR	969347	Identifier	hasline		967363	0					
ANR	969348	CompoundStatement		304:16:7998:7998	967363	1					
ANR	969349	ExpressionStatement	r_cons_strcat ( addrpad )	1924:4:62521:62544	967363	0	True				
ANR	969350	CallExpression	r_cons_strcat ( addrpad )		967363	0					
ANR	969351	Callee	r_cons_strcat		967363	0					
ANR	969352	Identifier	r_cons_strcat		967363	0					
ANR	969353	ArgumentList	addrpad		967363	1					
ANR	969354	Argument	addrpad		967363	0					
ANR	969355	Identifier	addrpad		967363	0					
ANR	969356	ExpressionStatement	r_cons_strcat ( out )	1925:4:62550:62569	967363	1	True				
ANR	969357	CallExpression	r_cons_strcat ( out )		967363	0					
ANR	969358	Callee	r_cons_strcat		967363	0					
ANR	969359	Identifier	r_cons_strcat		967363	0					
ANR	969360	ArgumentList	out		967363	1					
ANR	969361	Argument	out		967363	0					
ANR	969362	Identifier	out		967363	0					
ANR	969363	ExpressionStatement	r_cons_newline ( )	1926:4:62575:62592	967363	2	True				
ANR	969364	CallExpression	r_cons_newline ( )		967363	0					
ANR	969365	Callee	r_cons_newline		967363	0					
ANR	969366	Identifier	r_cons_newline		967363	0					
ANR	969367	ArgumentList			967363	1					
ANR	969368	ExpressionStatement	marks = false	1928:3:62602:62615	967363	7	True				
ANR	969369	AssignmentExpression	marks = false		967363	0		=			
ANR	969370	Identifier	marks		967363	0					
ANR	969371	Identifier	false		967363	1					
ANR	969372	ExpressionStatement	free ( out )	1929:3:62620:62630	967363	8	True				
ANR	969373	CallExpression	free ( out )		967363	0					
ANR	969374	Callee	free		967363	0					
ANR	969375	Identifier	free		967363	0					
ANR	969376	ArgumentList	out		967363	1					
ANR	969377	Argument	out		967363	0					
ANR	969378	Identifier	out		967363	0					
ANR	969379	ExpressionStatement	r_cons_strcat ( bytes )	1931:2:62638:62659	967363	29	True				
ANR	969380	CallExpression	r_cons_strcat ( bytes )		967363	0					
ANR	969381	Callee	r_cons_strcat		967363	0					
ANR	969382	Identifier	r_cons_strcat		967363	0					
ANR	969383	ArgumentList	bytes		967363	1					
ANR	969384	Argument	bytes		967363	0					
ANR	969385	Identifier	bytes		967363	0					
ANR	969386	ExpressionStatement	r_cons_strcat ( chars )	1932:2:62663:62684	967363	30	True				
ANR	969387	CallExpression	r_cons_strcat ( chars )		967363	0					
ANR	969388	Callee	r_cons_strcat		967363	0					
ANR	969389	Identifier	r_cons_strcat		967363	0					
ANR	969390	ArgumentList	chars		967363	1					
ANR	969391	Argument	chars		967363	0					
ANR	969392	Identifier	chars		967363	0					
ANR	969393	IfStatement	if ( core -> print -> use_comments )		967363	31					
ANR	969394	Condition	core -> print -> use_comments	1934:6:62693:62717	967363	0	True				
ANR	969395	PtrMemberAccess	core -> print -> use_comments		967363	0					
ANR	969396	PtrMemberAccess	core -> print		967363	0					
ANR	969397	Identifier	core		967363	0					
ANR	969398	Identifier	print		967363	1					
ANR	969399	Identifier	use_comments		967363	1					
ANR	969400	CompoundStatement		315:33:8203:8203	967363	1					
ANR	969401	ForStatement	for ( j = 0 ; j < nb_cols ; j ++ )		967363	0					
ANR	969402	ForInit	j = 0 ;	1935:8:62730:62735	967363	0	True				
ANR	969403	AssignmentExpression	j = 0		967363	0		=			
ANR	969404	Identifier	j		967363	0					
ANR	969405	PrimaryExpression	0		967363	1					
ANR	969406	Condition	j < nb_cols	1935:15:62737:62747	967363	1	True				
ANR	969407	RelationalExpression	j < nb_cols		967363	0		<			
ANR	969408	Identifier	j		967363	0					
ANR	969409	Identifier	nb_cols		967363	1					
ANR	969410	PostIncDecOperationExpression	j ++	1935:28:62750:62752	967363	2	True				
ANR	969411	Identifier	j		967363	0					
ANR	969412	IncDec	++		967363	1					
ANR	969413	CompoundStatement		317:4:8244:8321	967363	3					
ANR	969414	IdentifierDeclStatement	"const char * comment = core -> print -> get_comments ( core -> print -> user , addr + j ) ;"	1936:4:62761:62838	967363	0	True				
ANR	969415	IdentifierDecl	"* comment = core -> print -> get_comments ( core -> print -> user , addr + j )"		967363	0					
ANR	969416	IdentifierDeclType	const char *		967363	0					
ANR	969417	Identifier	comment		967363	1					
ANR	969418	AssignmentExpression	"* comment = core -> print -> get_comments ( core -> print -> user , addr + j )"		967363	2		=			
ANR	969419	Identifier	comment		967363	0					
ANR	969420	CallExpression	"core -> print -> get_comments ( core -> print -> user , addr + j )"		967363	1					
ANR	969421	Callee	core -> print -> get_comments		967363	0					
ANR	969422	PtrMemberAccess	core -> print -> get_comments		967363	0					
ANR	969423	PtrMemberAccess	core -> print		967363	0					
ANR	969424	Identifier	core		967363	0					
ANR	969425	Identifier	print		967363	1					
ANR	969426	Identifier	get_comments		967363	1					
ANR	969427	ArgumentList	core -> print -> user		967363	1					
ANR	969428	Argument	core -> print -> user		967363	0					
ANR	969429	PtrMemberAccess	core -> print -> user		967363	0					
ANR	969430	PtrMemberAccess	core -> print		967363	0					
ANR	969431	Identifier	core		967363	0					
ANR	969432	Identifier	print		967363	1					
ANR	969433	Identifier	user		967363	1					
ANR	969434	Argument	addr + j		967363	1					
ANR	969435	AdditiveExpression	addr + j		967363	0		+			
ANR	969436	Identifier	addr		967363	0					
ANR	969437	Identifier	j		967363	1					
ANR	969438	IfStatement	if ( comment )		967363	1					
ANR	969439	Condition	comment	1937:8:62848:62854	967363	0	True				
ANR	969440	Identifier	comment		967363	0					
ANR	969441	CompoundStatement		318:17:8340:8340	967363	1					
ANR	969442	ExpressionStatement	"r_cons_printf ( "" ; %s"" , comment )"	1938:5:62864:62896	967363	0	True				
ANR	969443	CallExpression	"r_cons_printf ( "" ; %s"" , comment )"		967363	0					
ANR	969444	Callee	r_cons_printf		967363	0					
ANR	969445	Identifier	r_cons_printf		967363	0					
ANR	969446	ArgumentList	""" ; %s"""		967363	1					
ANR	969447	Argument	""" ; %s"""		967363	0					
ANR	969448	PrimaryExpression	""" ; %s"""		967363	0					
ANR	969449	Argument	comment		967363	1					
ANR	969450	Identifier	comment		967363	0					
ANR	969451	ExpressionStatement	r_cons_newline ( )	1943:2:62916:62933	967363	32	True				
ANR	969452	CallExpression	r_cons_newline ( )		967363	0					
ANR	969453	Callee	r_cons_newline		967363	0					
ANR	969454	Identifier	r_cons_newline		967363	0					
ANR	969455	ArgumentList			967363	1					
ANR	969456	ExpressionStatement	addr += nb_cols	1944:2:62937:62952	967363	33	True				
ANR	969457	AssignmentExpression	addr += nb_cols		967363	0		+=			
ANR	969458	Identifier	addr		967363	0					
ANR	969459	Identifier	nb_cols		967363	1					
ANR	969460	ExpressionStatement	free ( bytes )	1947:1:62959:62971	967363	64	True				
ANR	969461	CallExpression	free ( bytes )		967363	0					
ANR	969462	Callee	free		967363	0					
ANR	969463	Identifier	free		967363	0					
ANR	969464	ArgumentList	bytes		967363	1					
ANR	969465	Argument	bytes		967363	0					
ANR	969466	Identifier	bytes		967363	0					
ANR	969467	Label	err_bytes :	1948:1:62974:62983	967363	65	True				
ANR	969468	Identifier	err_bytes		967363	0					
ANR	969469	ExpressionStatement	free ( note )	1949:1:62986:62997	967363	66	True				
ANR	969470	CallExpression	free ( note )		967363	0					
ANR	969471	Callee	free		967363	0					
ANR	969472	Identifier	free		967363	0					
ANR	969473	ArgumentList	note		967363	1					
ANR	969474	Argument	note		967363	0					
ANR	969475	Identifier	note		967363	0					
ANR	969476	Label	err_note :	1950:1:63000:63008	967363	67	True				
ANR	969477	Identifier	err_note		967363	0					
ANR	969478	ExpressionStatement	free ( chars )	1951:1:63011:63023	967363	68	True				
ANR	969479	CallExpression	free ( chars )		967363	0					
ANR	969480	Callee	free		967363	0					
ANR	969481	Identifier	free		967363	0					
ANR	969482	ArgumentList	chars		967363	1					
ANR	969483	Argument	chars		967363	0					
ANR	969484	Identifier	chars		967363	0					
ANR	969485	Label	err_chars :	1952:1:63026:63035	967363	69	True				
ANR	969486	Identifier	err_chars		967363	0					
ANR	969487	ForStatement	for ( i = 0 ; i < R_ARRAY_SIZE ( colors ) ; i ++ )		967363	70					
ANR	969488	ForInit	i = 0 ;	1953:6:63043:63048	967363	0	True				
ANR	969489	AssignmentExpression	i = 0		967363	0		=			
ANR	969490	Identifier	i		967363	0					
ANR	969491	PrimaryExpression	0		967363	1					
ANR	969492	Condition	i < R_ARRAY_SIZE ( colors )	1953:13:63050:63074	967363	1	True				
ANR	969493	RelationalExpression	i < R_ARRAY_SIZE ( colors )		967363	0		<			
ANR	969494	Identifier	i		967363	0					
ANR	969495	CallExpression	R_ARRAY_SIZE ( colors )		967363	1					
ANR	969496	Callee	R_ARRAY_SIZE		967363	0					
ANR	969497	Identifier	R_ARRAY_SIZE		967363	0					
ANR	969498	ArgumentList	colors		967363	1					
ANR	969499	Argument	colors		967363	0					
ANR	969500	Identifier	colors		967363	0					
ANR	969501	PostIncDecOperationExpression	i ++	1953:40:63077:63079	967363	2	True				
ANR	969502	Identifier	i		967363	0					
ANR	969503	IncDec	++		967363	1					
ANR	969504	CompoundStatement		334:45:8565:8565	967363	3					
ANR	969505	ExpressionStatement	free ( colors [ i ] )	1954:2:63086:63102	967363	0	True				
ANR	969506	CallExpression	free ( colors [ i ] )		967363	0					
ANR	969507	Callee	free		967363	0					
ANR	969508	Identifier	free		967363	0					
ANR	969509	ArgumentList	colors [ i ]		967363	1					
ANR	969510	Argument	colors [ i ]		967363	0					
ANR	969511	ArrayIndexing	colors [ i ]		967363	0					
ANR	969512	Identifier	colors		967363	0					
ANR	969513	Identifier	i		967363	1					
ANR	969514	ReturnType	static void		967363	1					
ANR	969515	Identifier	annotated_hexdump		967363	2					
ANR	969516	ParameterList	"RCore * core , const char * str , int len"		967363	3					
ANR	969517	Parameter	RCore * core	1620:30:54477:54487	967363	0	True				
ANR	969518	ParameterType	RCore *		967363	0					
ANR	969519	Identifier	core		967363	1					
ANR	969520	Parameter	const char * str	1620:43:54490:54504	967363	1	True				
ANR	969521	ParameterType	const char *		967363	0					
ANR	969522	Identifier	str		967363	1					
ANR	969523	Parameter	int len	1620:60:54507:54513	967363	2	True				
ANR	969524	ParameterType	int		967363	0					
ANR	969525	Identifier	len		967363	1					
ANR	969526	CFGEntryNode	ENTRY		967363		True				
ANR	969527	CFGExitNode	EXIT		967363		True				
ANR	969528	Symbol	Color_GREEN		967363						
ANR	969529	Symbol	meta -> str		967363						
ANR	969530	Symbol	core -> offset		967363						
ANR	969531	Symbol	r_cons_rainbow_get		967363						
ANR	969532	Symbol	* bytes		967363						
ANR	969533	Symbol	* sz		967363						
ANR	969534	Symbol	nb_cols		967363						
ANR	969535	Symbol	len		967363						
ANR	969536	Symbol	* off		967363						
ANR	969537	Symbol	hasline		967363						
ANR	969538	Symbol	r_flag_get_i		967363						
ANR	969539	Symbol	core -> blocksize		967363						
ANR	969540	Symbol	r_core_get_section_name		967363						
ANR	969541	Symbol	* buf		967363						
ANR	969542	Symbol	core -> block		967363						
ANR	969543	Symbol	str		967363						
ANR	969544	Symbol	* * * core		967363						
ANR	969545	Symbol	core -> cons -> context -> pal		967363						
ANR	969546	Symbol	core -> print -> cur		967363						
ANR	969547	Symbol	meta		967363						
ANR	969548	Symbol	r_config_get_i		967363						
ANR	969549	Symbol	core -> print -> user		967363						
ANR	969550	Symbol	* out		967363						
ANR	969551	Symbol	* flag		967363						
ANR	969552	Symbol	core -> print -> flags		967363						
ANR	969553	Symbol	core -> cons -> context		967363						
ANR	969554	Symbol	core -> print -> use_comments		967363						
ANR	969555	Symbol	flag		967363						
ANR	969556	Symbol	* core -> cons		967363						
ANR	969557	Symbol	* core		967363						
ANR	969558	Symbol	Color_RESET		967363						
ANR	969559	Symbol	core -> anal		967363						
ANR	969560	Symbol	colors		967363						
ANR	969561	Symbol	out		967363						
ANR	969562	Symbol	core -> cons		967363						
ANR	969563	Symbol	core -> io		967363						
ANR	969564	Symbol	r_print_byte_color		967363						
ANR	969565	Symbol	low		967363						
ANR	969566	Symbol	Color_INVERT		967363						
ANR	969567	Symbol	meta -> type		967363						
ANR	969568	Symbol	flag -> size		967363						
ANR	969569	Symbol	* chars		967363						
ANR	969570	Symbol	current_flag -> size		967363						
ANR	969571	Symbol	echars		967363						
ANR	969572	Symbol	max		967363						
ANR	969573	Symbol	ch		967363						
ANR	969574	Symbol	R_META_TYPE_FORMAT		967363						
ANR	969575	Symbol	sz		967363						
ANR	969576	Symbol	* out_sz		967363						
ANR	969577	Symbol	i		967363						
ANR	969578	Symbol	usecolor		967363						
ANR	969579	Symbol	j		967363						
ANR	969580	Symbol	core -> flags		967363						
ANR	969581	Symbol	R_MIN		967363						
ANR	969582	Symbol	marks		967363						
ANR	969583	Symbol	r_str_prepend		967363						
ANR	969584	Symbol	off		967363						
ANR	969585	Symbol	* core -> print		967363						
ANR	969586	Symbol	buf		967363						
ANR	969587	Symbol	core -> print -> col		967363						
ANR	969588	Symbol	s		967363						
ANR	969589	Symbol	R_MAX		967363						
ANR	969590	Symbol	R_ARRAY_SIZE		967363						
ANR	969591	Symbol	addrpadlen		967363						
ANR	969592	Symbol	chars		967363						
ANR	969593	Symbol	col		967363						
ANR	969594	Symbol	core -> print -> pava		967363						
ANR	969595	Symbol	IS_PRINTABLE		967363						
ANR	969596	Symbol	compact		967363						
ANR	969597	Symbol	* note		967363						
ANR	969598	Symbol	strlen		967363						
ANR	969599	Symbol	hascolor		967363						
ANR	969600	Symbol	core -> print -> ocur		967363						
ANR	969601	Symbol	addrpad		967363						
ANR	969602	Symbol	fend		967363						
ANR	969603	Symbol	html		967363						
ANR	969604	Symbol	* meta		967363						
ANR	969605	Symbol	flag -> offset		967363						
ANR	969606	Symbol	ea		967363						
ANR	969607	Symbol	* color_idx		967363						
ANR	969608	Symbol	NULL		967363						
ANR	969609	Symbol	nb_cons_cols		967363						
ANR	969610	Symbol	* * core -> cons		967363						
ANR	969611	Symbol	format		967363						
ANR	969612	Symbol	va		967363						
ANR	969613	Symbol	bytecolor		967363						
ANR	969614	Symbol	core		967363						
ANR	969615	Symbol	notej_len		967363						
ANR	969616	Symbol	true		967363						
ANR	969617	Symbol	name		967363						
ANR	969618	Symbol	* here		967363						
ANR	969619	Symbol	showSection		967363						
ANR	969620	Symbol	core -> print		967363						
ANR	969621	Symbol	here		967363						
ANR	969622	Symbol	current_flag -> color		967363						
ANR	969623	Symbol	note		967363						
ANR	969624	Symbol	Color_INVERT_RESET		967363						
ANR	969625	Symbol	core -> print -> get_comments		967363						
ANR	969626	Symbol	R_META_TYPE_COMMENT		967363						
ANR	969627	Symbol	hadflag		967363						
ANR	969628	Symbol	calloc		967363						
ANR	969629	Symbol	r_str_newf		967363						
ANR	969630	Symbol	r_cons_pal_parse		967363						
ANR	969631	Symbol	ebytes		967363						
ANR	969632	Symbol	* colors		967363						
ANR	969633	Symbol	setcolor		967363						
ANR	969634	Symbol	* core -> cons -> context		967363						
ANR	969635	Symbol	addr		967363						
ANR	969636	Symbol	UT64_MAX		967363						
ANR	969637	Symbol	* * core		967363						
ANR	969638	Symbol	r_meta_get_string		967363						
ANR	969639	Symbol	core -> config		967363						
ANR	969640	Symbol	* addrpadlen		967363						
ANR	969641	Symbol	current_flag -> offset		967363						
ANR	969642	Symbol	r_io_p2v		967363						
ANR	969643	Symbol	* current_flag		967363						
ANR	969644	Symbol	core -> cons -> context -> pal . offset		967363						
ANR	969645	Symbol	flag -> name		967363						
ANR	969646	Symbol	false		967363						
ANR	969647	Symbol	out_sz		967363						
ANR	969648	Symbol	R_PRINT_FLAGS_COMPACT		967363						
ANR	969649	Symbol	rows		967363						
ANR	969650	Symbol	meta -> from		967363						
ANR	969651	Symbol	ansicolor		967363						
ANR	969652	Symbol	R_META_WHERE_HERE		967363						
ANR	969653	Symbol	* i		967363						
ANR	969654	Symbol	* j		967363						
ANR	969655	Symbol	current_flag		967363						
ANR	969656	Symbol	r_meta_find_in		967363						
ANR	969657	Symbol	color_idx		967363						
ANR	969658	Symbol	bytes		967363						
ANR	969659	Symbol	comment		967363						
ANR	969660	Symbol	step		967363						
ANR	969661	Symbol	* addrpad		967363						
ANR	969662	Symbol	strdup		967363						
ANR	969663	Symbol	flagsz		967363						
ANR	969664	Symbol	core -> print -> cur_enabled		967363						
ANR	969665	Function	r_core_print_examine	1958:0:63110:65287							
ANR	969666	FunctionDef	"r_core_print_examine (RCore * core , const char * str)"		969665	0					
ANR	969667	CompoundStatement		1958:62:63172:65287	969665	0					
ANR	969668	IdentifierDeclStatement	"char cmd [ 128 ] , * p ;"	1959:1:63175:63192	969665	0	True				
ANR	969669	IdentifierDecl	cmd [ 128 ]		969665	0					
ANR	969670	IdentifierDeclType	char [ 128 ]		969665	0					
ANR	969671	Identifier	cmd		969665	1					
ANR	969672	PrimaryExpression	128		969665	2					
ANR	969673	IdentifierDecl	* p		969665	1					
ANR	969674	IdentifierDeclType	char *		969665	0					
ANR	969675	Identifier	p		969665	1					
ANR	969676	IdentifierDeclStatement	ut64 addr = core -> offset ;	1960:1:63195:63219	969665	1	True				
ANR	969677	IdentifierDecl	addr = core -> offset		969665	0					
ANR	969678	IdentifierDeclType	ut64		969665	0					
ANR	969679	Identifier	addr		969665	1					
ANR	969680	AssignmentExpression	addr = core -> offset		969665	2		=			
ANR	969681	Identifier	addr		969665	0					
ANR	969682	PtrMemberAccess	core -> offset		969665	1					
ANR	969683	Identifier	core		969665	0					
ANR	969684	Identifier	offset		969665	1					
ANR	969685	IdentifierDeclStatement	int size = ( core -> anal -> bits / 4 ) ;	1961:1:63222:63255	969665	2	True				
ANR	969686	IdentifierDecl	size = ( core -> anal -> bits / 4 )		969665	0					
ANR	969687	IdentifierDeclType	int		969665	0					
ANR	969688	Identifier	size		969665	1					
ANR	969689	AssignmentExpression	size = ( core -> anal -> bits / 4 )		969665	2		=			
ANR	969690	Identifier	size		969665	0					
ANR	969691	MultiplicativeExpression	core -> anal -> bits / 4		969665	1		/			
ANR	969692	PtrMemberAccess	core -> anal -> bits		969665	0					
ANR	969693	PtrMemberAccess	core -> anal		969665	0					
ANR	969694	Identifier	core		969665	0					
ANR	969695	Identifier	anal		969665	1					
ANR	969696	Identifier	bits		969665	1					
ANR	969697	PrimaryExpression	4		969665	1					
ANR	969698	IdentifierDeclStatement	int count = atoi ( str ) ;	1962:1:63258:63280	969665	3	True				
ANR	969699	IdentifierDecl	count = atoi ( str )		969665	0					
ANR	969700	IdentifierDeclType	int		969665	0					
ANR	969701	Identifier	count		969665	1					
ANR	969702	AssignmentExpression	count = atoi ( str )		969665	2		=			
ANR	969703	Identifier	count		969665	0					
ANR	969704	CallExpression	atoi ( str )		969665	1					
ANR	969705	Callee	atoi		969665	0					
ANR	969706	Identifier	atoi		969665	0					
ANR	969707	ArgumentList	str		969665	1					
ANR	969708	Argument	str		969665	0					
ANR	969709	Identifier	str		969665	0					
ANR	969710	IdentifierDeclStatement	"int i , n ;"	1963:1:63283:63291	969665	4	True				
ANR	969711	IdentifierDecl	i		969665	0					
ANR	969712	IdentifierDeclType	int		969665	0					
ANR	969713	Identifier	i		969665	1					
ANR	969714	IdentifierDecl	n		969665	1					
ANR	969715	IdentifierDeclType	int		969665	0					
ANR	969716	Identifier	n		969665	1					
ANR	969717	IfStatement	if ( count < 1 )		969665	5					
ANR	969718	Condition	count < 1	1964:5:63298:63306	969665	0	True				
ANR	969719	RelationalExpression	count < 1		969665	0		<			
ANR	969720	Identifier	count		969665	0					
ANR	969721	PrimaryExpression	1		969665	1					
ANR	969722	CompoundStatement		7:16:136:136	969665	1					
ANR	969723	ExpressionStatement	count = 1	1965:2:63313:63322	969665	0	True				
ANR	969724	AssignmentExpression	count = 1		969665	0		=			
ANR	969725	Identifier	count		969665	0					
ANR	969726	PrimaryExpression	1		969665	1					
ANR	969727	WhileStatement	while ( * str >= '0' && * str <= '9' )		969665	6					
ANR	969728	Condition	* str >= '0' && * str <= '9'	1968:8:63350:63375	969665	0	True				
ANR	969729	AndExpression	* str >= '0' && * str <= '9'		969665	0		&&			
ANR	969730	RelationalExpression	* str >= '0'		969665	0		>=			
ANR	969731	UnaryOperationExpression	* str		969665	0					
ANR	969732	UnaryOperator	*		969665	0					
ANR	969733	Identifier	str		969665	1					
ANR	969734	PrimaryExpression	'0'		969665	1					
ANR	969735	RelationalExpression	* str <= '9'		969665	1		<=			
ANR	969736	UnaryOperationExpression	* str		969665	0					
ANR	969737	UnaryOperator	*		969665	0					
ANR	969738	Identifier	str		969665	1					
ANR	969739	PrimaryExpression	'9'		969665	1					
ANR	969740	CompoundStatement		11:36:205:205	969665	1					
ANR	969741	ExpressionStatement	str ++	1969:2:63382:63387	969665	0	True				
ANR	969742	PostIncDecOperationExpression	str ++		969665	0					
ANR	969743	Identifier	str		969665	0					
ANR	969744	IncDec	++		969665	1					
ANR	969745	IfStatement	if ( ! str [ 0 ] )		969665	7					
ANR	969746	Condition	! str [ 0 ]	1972:5:63435:63441	969665	0	True				
ANR	969747	UnaryOperationExpression	! str [ 0 ]		969665	0					
ANR	969748	UnaryOperator	!		969665	0					
ANR	969749	ArrayIndexing	str [ 0 ]		969665	1					
ANR	969750	Identifier	str		969665	0					
ANR	969751	PrimaryExpression	0		969665	1					
ANR	969752	CompoundStatement		15:14:271:271	969665	1					
ANR	969753	ReturnStatement	return ;	1973:2:63448:63454	969665	0	True				
ANR	969754	Statement	Size	1976:1:63466:63469	969665	8	True				
ANR	969755	Statement	letters	1976:6:63471:63477	969665	9	True				
ANR	969756	Statement	are	1976:14:63479:63481	969665	10	True				
ANR	969757	Statement	b	1976:18:63483:63483	969665	11	True				
ANR	969758	Statement	(	1976:19:63484:63484	969665	12	True				
ANR	969759	Statement	byte	1976:20:63485:63488	969665	13	True				
ANR	969760	Statement	)	1976:24:63489:63489	969665	14	True				
ANR	969761	Statement	","	1976:25:63490:63490	969665	15	True				
ANR	969762	Statement	h	1976:27:63492:63492	969665	16	True				
ANR	969763	Statement	(	1976:29:63494:63494	969665	17	True				
ANR	969764	Statement	halfword	1976:30:63495:63502	969665	18	True				
ANR	969765	Statement	)	1976:38:63503:63503	969665	19	True				
ANR	969766	Statement	","	1976:39:63504:63504	969665	20	True				
ANR	969767	Statement	w	1976:41:63506:63506	969665	21	True				
ANR	969768	Statement	(	1976:43:63508:63508	969665	22	True				
ANR	969769	Statement	word	1976:44:63509:63512	969665	23	True				
ANR	969770	Statement	)	1976:48:63513:63513	969665	24	True				
ANR	969771	Statement	","	1976:49:63514:63514	969665	25	True				
ANR	969772	Statement	g	1976:51:63516:63516	969665	26	True				
ANR	969773	Statement	(	1976:53:63518:63518	969665	27	True				
ANR	969774	Statement	giant	1976:54:63519:63523	969665	28	True				
ANR	969775	Statement	","	1976:59:63524:63524	969665	29	True				
ANR	969776	Statement	8	1976:61:63526:63526	969665	30	True				
ANR	969777	Statement	bytes	1976:63:63528:63532	969665	31	True				
ANR	969778	Statement	)	1976:68:63533:63533	969665	32	True				
ANR	969779	Statement	.	1976:69:63534:63534	969665	33	True				
ANR	969780	SwitchStatement	switch ( str [ 1 ] )		969665	34					
ANR	969781	Condition	str [ 1 ]	1978:9:63552:63557	969665	0	True				
ANR	969782	ArrayIndexing	str [ 1 ]		969665	0					
ANR	969783	Identifier	str		969665	0					
ANR	969784	PrimaryExpression	1		969665	1					
ANR	969785	CompoundStatement		21:17:387:387	969665	1					
ANR	969786	Label	case 'b' :	1979:1:63563:63571	969665	0	True				
ANR	969787	ExpressionStatement	size = 1	1979:11:63573:63581	969665	1	True				
ANR	969788	AssignmentExpression	size = 1		969665	0		=			
ANR	969789	Identifier	size		969665	0					
ANR	969790	PrimaryExpression	1		969665	1					
ANR	969791	BreakStatement	break ;	1979:21:63583:63588	969665	2	True				
ANR	969792	Label	case 'h' :	1980:1:63591:63599	969665	3	True				
ANR	969793	ExpressionStatement	size = 2	1980:11:63601:63609	969665	4	True				
ANR	969794	AssignmentExpression	size = 2		969665	0		=			
ANR	969795	Identifier	size		969665	0					
ANR	969796	PrimaryExpression	2		969665	1					
ANR	969797	BreakStatement	break ;	1980:21:63611:63616	969665	5	True				
ANR	969798	Label	case 'd' :	1981:1:63619:63627	969665	6	True				
ANR	969799	ExpressionStatement	size = 4	1981:11:63629:63637	969665	7	True				
ANR	969800	AssignmentExpression	size = 4		969665	0		=			
ANR	969801	Identifier	size		969665	0					
ANR	969802	PrimaryExpression	4		969665	1					
ANR	969803	BreakStatement	break ;	1981:21:63639:63644	969665	8	True				
ANR	969804	Label	case 'w' :	1982:1:63647:63655	969665	9	True				
ANR	969805	ExpressionStatement	size = 4	1982:11:63657:63665	969665	10	True				
ANR	969806	AssignmentExpression	size = 4		969665	0		=			
ANR	969807	Identifier	size		969665	0					
ANR	969808	PrimaryExpression	4		969665	1					
ANR	969809	BreakStatement	break ;	1982:21:63667:63672	969665	11	True				
ANR	969810	Label	case 'g' :	1983:1:63675:63683	969665	12	True				
ANR	969811	ExpressionStatement	size = 8	1983:11:63685:63693	969665	13	True				
ANR	969812	AssignmentExpression	size = 8		969665	0		=			
ANR	969813	Identifier	size		969665	0					
ANR	969814	PrimaryExpression	8		969665	1					
ANR	969815	BreakStatement	break ;	1983:21:63695:63700	969665	14	True				
ANR	969816	IfStatement	"if ( ( p = strchr ( str , ' ' ) ) )"		969665	35					
ANR	969817	Condition	"p = strchr ( str , ' ' )"	1985:5:63710:63732	969665	0	True				
ANR	969818	AssignmentExpression	"p = strchr ( str , ' ' )"		969665	0		=			
ANR	969819	Identifier	p		969665	0					
ANR	969820	CallExpression	"strchr ( str , ' ' )"		969665	1					
ANR	969821	Callee	strchr		969665	0					
ANR	969822	Identifier	strchr		969665	0					
ANR	969823	ArgumentList	str		969665	1					
ANR	969824	Argument	str		969665	0					
ANR	969825	Identifier	str		969665	0					
ANR	969826	Argument	' '		969665	1					
ANR	969827	PrimaryExpression	' '		969665	0					
ANR	969828	CompoundStatement		28:30:562:562	969665	1					
ANR	969829	ExpressionStatement	* p ++ = 0	1986:2:63739:63747	969665	0	True				
ANR	969830	AssignmentExpression	* p ++ = 0		969665	0		=			
ANR	969831	UnaryOperationExpression	* p ++		969665	0					
ANR	969832	UnaryOperator	*		969665	0					
ANR	969833	PostIncDecOperationExpression	p ++		969665	1					
ANR	969834	Identifier	p		969665	0					
ANR	969835	IncDec	++		969665	1					
ANR	969836	PrimaryExpression	0		969665	1					
ANR	969837	ExpressionStatement	"addr = r_num_math ( core -> num , p )"	1987:2:63751:63783	969665	1	True				
ANR	969838	AssignmentExpression	"addr = r_num_math ( core -> num , p )"		969665	0		=			
ANR	969839	Identifier	addr		969665	0					
ANR	969840	CallExpression	"r_num_math ( core -> num , p )"		969665	1					
ANR	969841	Callee	r_num_math		969665	0					
ANR	969842	Identifier	r_num_math		969665	0					
ANR	969843	ArgumentList	core -> num		969665	1					
ANR	969844	Argument	core -> num		969665	0					
ANR	969845	PtrMemberAccess	core -> num		969665	0					
ANR	969846	Identifier	core		969665	0					
ANR	969847	Identifier	num		969665	1					
ANR	969848	Argument	p		969665	1					
ANR	969849	Identifier	p		969665	0					
ANR	969850	SwitchStatement	switch ( * str )		969665	36					
ANR	969851	Condition	* str	1989:9:63797:63800	969665	0	True				
ANR	969852	UnaryOperationExpression	* str		969665	0					
ANR	969853	UnaryOperator	*		969665	0					
ANR	969854	Identifier	str		969665	1					
ANR	969855	CompoundStatement		32:15:630:630	969665	1					
ANR	969856	Label	case '?' :	1990:1:63806:63814	969665	0	True				
ANR	969857	Statement	eprintf	1991:2:63818:63824	969665	1	True				
ANR	969858	Statement	(	1991:10:63826:63826	969665	2	True				
ANR	969859	Statement	"""Format is x/[num][format][size]\\n"""	1992:3:63831:63865	969665	3	True				
ANR	969860	Statement	"""Num specifies the number of format elements to display\\n"""	1993:3:63870:63927	969665	4	True				
ANR	969861	Statement	"""Format letters are o(octal), x(hex), d(decimal), u(unsigned decimal),\\n"""	1994:3:63932:64004	969665	5	True				
ANR	969862	Statement	"""  t(binary), f(float), a(address), i(instruction), c(char) and s(string),\\n"""	1995:3:64009:64085	969665	6	True				
ANR	969863	Statement	"""  T(OSType), A(floating point values in hex).\\n"""	1996:3:64090:64138	969665	7	True				
ANR	969864	Statement	"""Size letters are b(byte), h(halfword), w(word), g(giant, 8 bytes).\\n"""	1997:3:64143:64212	969665	8	True				
ANR	969865	Statement	)	1998:3:64217:64217	969665	9	True				
ANR	969866	ExpressionStatement		1998:4:64218:64218	969665	10	True				
ANR	969867	BreakStatement	break ;	1999:2:64222:64227	969665	11	True				
ANR	969868	Label	case 's' :	2000:1:64230:64238	969665	12	True				
ANR	969869	Statement	r_core_cmdf	2001:2:64251:64261	969665	13	True				
ANR	969870	Statement	(	2001:14:64263:64263	969665	14	True				
ANR	969871	Statement	core	2001:15:64264:64267	969665	15	True				
ANR	969872	Statement	","	2001:19:64268:64268	969665	16	True				
ANR	969873	Statement	"""psb %d @ 0x%"""	2001:21:64270:64283	969665	17	True				
ANR	969874	Statement	PFMT64x	2001:35:64284:64290	969665	18	True				
ANR	969875	Statement	","	2001:42:64291:64291	969665	19	True				
ANR	969876	Statement	count	2001:44:64293:64297	969665	20	True				
ANR	969877	Statement	*	2001:50:64299:64299	969665	21	True				
ANR	969878	Statement	size	2001:52:64301:64304	969665	22	True				
ANR	969879	Statement	","	2001:56:64305:64305	969665	23	True				
ANR	969880	Statement	addr	2001:58:64307:64310	969665	24	True				
ANR	969881	Statement	)	2001:62:64311:64311	969665	25	True				
ANR	969882	ExpressionStatement		2001:63:64312:64312	969665	26	True				
ANR	969883	BreakStatement	break ;	2002:2:64316:64321	969665	27	True				
ANR	969884	Label	case 'o' :	2003:1:64324:64332	969665	28	True				
ANR	969885	Statement	r_core_cmdf	2004:2:64345:64355	969665	29	True				
ANR	969886	Statement	(	2004:14:64357:64357	969665	30	True				
ANR	969887	Statement	core	2004:15:64358:64361	969665	31	True				
ANR	969888	Statement	","	2004:19:64362:64362	969665	32	True				
ANR	969889	Statement	"""pxo %d @ 0x%"""	2004:21:64364:64377	969665	33	True				
ANR	969890	Statement	PFMT64x	2004:35:64378:64384	969665	34	True				
ANR	969891	Statement	","	2004:42:64385:64385	969665	35	True				
ANR	969892	Statement	count	2004:44:64387:64391	969665	36	True				
ANR	969893	Statement	*	2004:50:64393:64393	969665	37	True				
ANR	969894	Statement	size	2004:52:64395:64398	969665	38	True				
ANR	969895	Statement	","	2004:56:64399:64399	969665	39	True				
ANR	969896	Statement	addr	2004:58:64401:64404	969665	40	True				
ANR	969897	Statement	)	2004:62:64405:64405	969665	41	True				
ANR	969898	ExpressionStatement		2004:63:64406:64406	969665	42	True				
ANR	969899	BreakStatement	break ;	2005:2:64410:64415	969665	43	True				
ANR	969900	Label	case 'f' :	2006:1:64418:64426	969665	44	True				
ANR	969901	Label	case 'A' :	2007:1:64429:64437	969665	45	True				
ANR	969902	ExpressionStatement	n = 3	2008:2:64467:64472	969665	46	True				
ANR	969903	AssignmentExpression	n = 3		969665	0		=			
ANR	969904	Identifier	n		969665	0					
ANR	969905	PrimaryExpression	3		969665	1					
ANR	969906	Statement	snprintf	2009:2:64476:64483	969665	47	True				
ANR	969907	Statement	(	2009:11:64485:64485	969665	48	True				
ANR	969908	Statement	cmd	2009:12:64486:64488	969665	49	True				
ANR	969909	Statement	","	2009:15:64489:64489	969665	50	True				
ANR	969910	Statement	sizeof	2009:17:64491:64496	969665	51	True				
ANR	969911	Statement	(	2009:24:64498:64498	969665	52	True				
ANR	969912	Statement	cmd	2009:25:64499:64501	969665	53	True				
ANR	969913	Statement	)	2009:28:64502:64502	969665	54	True				
ANR	969914	Statement	","	2009:29:64503:64503	969665	55	True				
ANR	969915	Statement	"""pxo %d @ 0x%"""	2009:31:64505:64518	969665	56	True				
ANR	969916	Statement	PFMT64x	2009:45:64519:64525	969665	57	True				
ANR	969917	Statement	","	2009:52:64526:64526	969665	58	True				
ANR	969918	Statement	count	2010:3:64531:64535	969665	59	True				
ANR	969919	Statement	*	2010:9:64537:64537	969665	60	True				
ANR	969920	Statement	size	2010:11:64539:64542	969665	61	True				
ANR	969921	Statement	","	2010:15:64543:64543	969665	62	True				
ANR	969922	Statement	addr	2010:17:64545:64548	969665	63	True				
ANR	969923	Statement	)	2010:21:64549:64549	969665	64	True				
ANR	969924	ExpressionStatement		2010:22:64550:64550	969665	65	True				
ANR	969925	ExpressionStatement	"strcpy ( cmd , ""pf "" )"	2011:2:64554:64573	969665	66	True				
ANR	969926	CallExpression	"strcpy ( cmd , ""pf "" )"		969665	0					
ANR	969927	Callee	strcpy		969665	0					
ANR	969928	Identifier	strcpy		969665	0					
ANR	969929	ArgumentList	cmd		969665	1					
ANR	969930	Argument	cmd		969665	0					
ANR	969931	Identifier	cmd		969665	0					
ANR	969932	Argument	"""pf """		969665	1					
ANR	969933	PrimaryExpression	"""pf """		969665	0					
ANR	969934	ForStatement	for ( i = 0 ; i < count && n < sizeof ( cmd ) ; i ++ )		969665	67					
ANR	969935	ForInit	i = 0 ;	2012:7:64582:64587	969665	0	True				
ANR	969936	AssignmentExpression	i = 0		969665	0		=			
ANR	969937	Identifier	i		969665	0					
ANR	969938	PrimaryExpression	0		969665	1					
ANR	969939	Condition	i < count && n < sizeof ( cmd )	2012:14:64589:64617	969665	1	True				
ANR	969940	AndExpression	i < count && n < sizeof ( cmd )		969665	0		&&			
ANR	969941	RelationalExpression	i < count		969665	0		<			
ANR	969942	Identifier	i		969665	0					
ANR	969943	Identifier	count		969665	1					
ANR	969944	RelationalExpression	n < sizeof ( cmd )		969665	1		<			
ANR	969945	Identifier	n		969665	0					
ANR	969946	SizeofExpression	sizeof ( cmd )		969665	1					
ANR	969947	Sizeof	sizeof		969665	0					
ANR	969948	SizeofOperand	cmd		969665	1					
ANR	969949	PostIncDecOperationExpression	i ++	2012:45:64620:64622	969665	2	True				
ANR	969950	Identifier	i		969665	0					
ANR	969951	IncDec	++		969665	1					
ANR	969952	CompoundStatement		55:50:1452:1452	969665	3					
ANR	969953	ExpressionStatement	cmd [ n ++ ] = 'f'	2013:3:64630:64644	969665	0	True				
ANR	969954	AssignmentExpression	cmd [ n ++ ] = 'f'		969665	0		=			
ANR	969955	ArrayIndexing	cmd [ n ++ ]		969665	0					
ANR	969956	Identifier	cmd		969665	0					
ANR	969957	PostIncDecOperationExpression	n ++		969665	1					
ANR	969958	Identifier	n		969665	0					
ANR	969959	IncDec	++		969665	1					
ANR	969960	PrimaryExpression	'f'		969665	1					
ANR	969961	ExpressionStatement	cmd [ n ] = 0	2015:2:64652:64662	969665	68	True				
ANR	969962	AssignmentExpression	cmd [ n ] = 0		969665	0		=			
ANR	969963	ArrayIndexing	cmd [ n ]		969665	0					
ANR	969964	Identifier	cmd		969665	0					
ANR	969965	Identifier	n		969665	1					
ANR	969966	PrimaryExpression	0		969665	1					
ANR	969967	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	2016:2:64666:64689	969665	69	True				
ANR	969968	CallExpression	"r_core_cmd0 ( core , cmd )"		969665	0					
ANR	969969	Callee	r_core_cmd0		969665	0					
ANR	969970	Identifier	r_core_cmd0		969665	0					
ANR	969971	ArgumentList	core		969665	1					
ANR	969972	Argument	core		969665	0					
ANR	969973	Identifier	core		969665	0					
ANR	969974	Argument	cmd		969665	1					
ANR	969975	Identifier	cmd		969665	0					
ANR	969976	BreakStatement	break ;	2017:2:64693:64698	969665	70	True				
ANR	969977	Label	case 'x' :	2018:1:64701:64709	969665	71	True				
ANR	969978	SwitchStatement	switch ( size )		969665	72					
ANR	969979	Condition	size	2019:10:64721:64724	969665	0	True				
ANR	969980	Identifier	size		969665	0					
ANR	969981	CompoundStatement		62:16:1554:1554	969665	1					
ANR	969982	Label	default :	2020:2:64731:64738	969665	0	True				
ANR	969983	Identifier	default		969665	0					
ANR	969984	Label	case 1 :	2021:2:64742:64748	969665	1	True				
ANR	969985	Statement	r_core_cmdf	2022:3:64753:64763	969665	2	True				
ANR	969986	Statement	(	2022:15:64765:64765	969665	3	True				
ANR	969987	Statement	core	2022:16:64766:64769	969665	4	True				
ANR	969988	Statement	","	2022:20:64770:64770	969665	5	True				
ANR	969989	Statement	"""px %d @ 0x%"""	2022:22:64772:64784	969665	6	True				
ANR	969990	Statement	PFMT64x	2022:35:64785:64791	969665	7	True				
ANR	969991	Statement	","	2022:42:64792:64792	969665	8	True				
ANR	969992	Statement	count	2022:44:64794:64798	969665	9	True				
ANR	969993	Statement	","	2022:49:64799:64799	969665	10	True				
ANR	969994	Statement	addr	2022:51:64801:64804	969665	11	True				
ANR	969995	Statement	)	2022:55:64805:64805	969665	12	True				
ANR	969996	ExpressionStatement		2022:56:64806:64806	969665	13	True				
ANR	969997	BreakStatement	break ;	2023:3:64811:64816	969665	14	True				
ANR	969998	Label	case 2 :	2024:2:64820:64826	969665	15	True				
ANR	969999	Statement	r_core_cmdf	2025:3:64831:64841	969665	16	True				
ANR	970000	Statement	(	2025:15:64843:64843	969665	17	True				
ANR	970001	Statement	core	2025:16:64844:64847	969665	18	True				
ANR	970002	Statement	","	2025:20:64848:64848	969665	19	True				
ANR	970003	Statement	"""px%c %d @ 0x%"""	2025:22:64850:64864	969665	20	True				
ANR	970004	Statement	PFMT64x	2025:37:64865:64871	969665	21	True				
ANR	970005	Statement	","	2025:44:64872:64872	969665	22	True				
ANR	970006	Statement	'h'	2026:4:64878:64880	969665	23	True				
ANR	970007	Statement	","	2026:7:64881:64881	969665	24	True				
ANR	970008	Statement	count	2026:9:64883:64887	969665	25	True				
ANR	970009	Statement	*	2026:15:64889:64889	969665	26	True				
ANR	970010	Statement	2	2026:17:64891:64891	969665	27	True				
ANR	970011	Statement	","	2026:18:64892:64892	969665	28	True				
ANR	970012	Statement	addr	2026:20:64894:64897	969665	29	True				
ANR	970013	Statement	)	2026:24:64898:64898	969665	30	True				
ANR	970014	ExpressionStatement		2026:25:64899:64899	969665	31	True				
ANR	970015	BreakStatement	break ;	2027:3:64904:64909	969665	32	True				
ANR	970016	Label	case 4 :	2028:2:64913:64919	969665	33	True				
ANR	970017	Statement	r_core_cmdf	2029:3:64924:64934	969665	34	True				
ANR	970018	Statement	(	2029:15:64936:64936	969665	35	True				
ANR	970019	Statement	core	2029:16:64937:64940	969665	36	True				
ANR	970020	Statement	","	2029:20:64941:64941	969665	37	True				
ANR	970021	Statement	"""px%c %d @ 0x%"""	2029:22:64943:64957	969665	38	True				
ANR	970022	Statement	PFMT64x	2029:37:64958:64964	969665	39	True				
ANR	970023	Statement	","	2029:44:64965:64965	969665	40	True				
ANR	970024	Statement	'w'	2030:4:64971:64973	969665	41	True				
ANR	970025	Statement	","	2030:7:64974:64974	969665	42	True				
ANR	970026	Statement	count	2030:9:64976:64980	969665	43	True				
ANR	970027	Statement	*	2030:15:64982:64982	969665	44	True				
ANR	970028	Statement	4	2030:17:64984:64984	969665	45	True				
ANR	970029	Statement	","	2030:18:64985:64985	969665	46	True				
ANR	970030	Statement	addr	2030:20:64987:64990	969665	47	True				
ANR	970031	Statement	)	2030:24:64991:64991	969665	48	True				
ANR	970032	ExpressionStatement		2030:25:64992:64992	969665	49	True				
ANR	970033	BreakStatement	break ;	2031:3:64997:65002	969665	50	True				
ANR	970034	Label	case 8 :	2032:2:65006:65012	969665	51	True				
ANR	970035	Statement	r_core_cmdf	2033:3:65017:65027	969665	52	True				
ANR	970036	Statement	(	2033:15:65029:65029	969665	53	True				
ANR	970037	Statement	core	2033:16:65030:65033	969665	54	True				
ANR	970038	Statement	","	2033:20:65034:65034	969665	55	True				
ANR	970039	Statement	"""px%c %d @ 0x%"""	2033:22:65036:65050	969665	56	True				
ANR	970040	Statement	PFMT64x	2033:37:65051:65057	969665	57	True				
ANR	970041	Statement	","	2033:44:65058:65058	969665	58	True				
ANR	970042	Statement	'q'	2034:4:65064:65066	969665	59	True				
ANR	970043	Statement	","	2034:7:65067:65067	969665	60	True				
ANR	970044	Statement	count	2034:9:65069:65073	969665	61	True				
ANR	970045	Statement	*	2034:15:65075:65075	969665	62	True				
ANR	970046	Statement	8	2034:17:65077:65077	969665	63	True				
ANR	970047	Statement	","	2034:18:65078:65078	969665	64	True				
ANR	970048	Statement	addr	2034:20:65080:65083	969665	65	True				
ANR	970049	Statement	)	2034:24:65084:65084	969665	66	True				
ANR	970050	ExpressionStatement		2034:25:65085:65085	969665	67	True				
ANR	970051	BreakStatement	break ;	2035:3:65090:65095	969665	68	True				
ANR	970052	BreakStatement	break ;	2037:2:65103:65108	969665	73	True				
ANR	970053	Label	case 'a' :	2038:1:65111:65119	969665	74	True				
ANR	970054	Label	case 'd' :	2039:1:65122:65130	969665	75	True				
ANR	970055	Statement	r_core_cmdf	2040:2:65134:65144	969665	76	True				
ANR	970056	Statement	(	2040:14:65146:65146	969665	77	True				
ANR	970057	Statement	core	2040:15:65147:65150	969665	78	True				
ANR	970058	Statement	","	2040:19:65151:65151	969665	79	True				
ANR	970059	Statement	"""pxw %d @ 0x%"""	2040:21:65153:65166	969665	80	True				
ANR	970060	Statement	PFMT64x	2040:35:65167:65173	969665	81	True				
ANR	970061	Statement	","	2040:42:65174:65174	969665	82	True				
ANR	970062	Statement	count	2040:44:65176:65180	969665	83	True				
ANR	970063	Statement	*	2040:50:65182:65182	969665	84	True				
ANR	970064	Statement	size	2040:52:65184:65187	969665	85	True				
ANR	970065	Statement	","	2040:56:65188:65188	969665	86	True				
ANR	970066	Statement	addr	2040:58:65190:65193	969665	87	True				
ANR	970067	Statement	)	2040:62:65194:65194	969665	88	True				
ANR	970068	ExpressionStatement		2040:63:65195:65195	969665	89	True				
ANR	970069	BreakStatement	break ;	2041:2:65199:65204	969665	90	True				
ANR	970070	Label	case 'i' :	2042:1:65207:65215	969665	91	True				
ANR	970071	Statement	r_core_cmdf	2043:2:65219:65229	969665	92	True				
ANR	970072	Statement	(	2043:14:65231:65231	969665	93	True				
ANR	970073	Statement	core	2043:15:65232:65235	969665	94	True				
ANR	970074	Statement	","	2043:19:65236:65236	969665	95	True				
ANR	970075	Statement	"""pid %d @ 0x%"""	2043:21:65238:65251	969665	96	True				
ANR	970076	Statement	PFMT64x	2043:35:65252:65258	969665	97	True				
ANR	970077	Statement	","	2043:42:65259:65259	969665	98	True				
ANR	970078	Statement	count	2043:44:65261:65265	969665	99	True				
ANR	970079	Statement	","	2043:49:65266:65266	969665	100	True				
ANR	970080	Statement	addr	2043:51:65268:65271	969665	101	True				
ANR	970081	Statement	)	2043:55:65272:65272	969665	102	True				
ANR	970082	ExpressionStatement		2043:56:65273:65273	969665	103	True				
ANR	970083	BreakStatement	break ;	2044:2:65277:65282	969665	104	True				
ANR	970084	ReturnType	R_API void		969665	1					
ANR	970085	Identifier	r_core_print_examine		969665	2					
ANR	970086	ParameterList	"RCore * core , const char * str"		969665	3					
ANR	970087	Parameter	RCore * core	1958:32:63142:63152	969665	0	True				
ANR	970088	ParameterType	RCore *		969665	0					
ANR	970089	Identifier	core		969665	1					
ANR	970090	Parameter	const char * str	1958:45:63155:63169	969665	1	True				
ANR	970091	ParameterType	const char *		969665	0					
ANR	970092	Identifier	str		969665	1					
ANR	970093	CFGEntryNode	ENTRY		969665		True				
ANR	970094	CFGExitNode	EXIT		969665		True				
ANR	970095	Symbol	atoi		969665						
ANR	970096	Symbol	core -> anal -> bits		969665						
ANR	970097	Symbol	* p ++		969665						
ANR	970098	Symbol	* core		969665						
ANR	970099	Symbol	count		969665						
ANR	970100	Symbol	core -> offset		969665						
ANR	970101	Symbol	i		969665						
ANR	970102	Symbol	strchr		969665						
ANR	970103	Symbol	core -> anal		969665						
ANR	970104	Symbol	n		969665						
ANR	970105	Symbol	r_num_math		969665						
ANR	970106	Symbol	str		969665						
ANR	970107	Symbol	p		969665						
ANR	970108	Symbol	core		969665						
ANR	970109	Symbol	* core -> anal		969665						
ANR	970110	Symbol	size		969665						
ANR	970111	Symbol	* n		969665						
ANR	970112	Symbol	cmd		969665						
ANR	970113	Symbol	* str		969665						
ANR	970114	Symbol	* cmd		969665						
ANR	970115	Symbol	addr		969665						
ANR	970116	Symbol	core -> num		969665						
ANR	970117	Symbol	* * core		969665						
ANR	970118	ClassDef	count_pz_t	2048:0:65290:65365							
ANR	970119	DeclStmt									
ANR	970120	Decl							RSpace	RSpace *	flagspace
ANR	970121	DeclStmt									
ANR	970122	Decl							ut64	ut64	addr
ANR	970123	DeclStmt									
ANR	970124	Decl							ut64	ut64	size
ANR	970125	DeclStmt									
ANR	970126	Decl							int	int *	ret
ANR	970127	Function	count_pzs	2055:0:65369:65716							
ANR	970128	FunctionDef	"count_pzs (RFlagItem * fi , void * u)"		970127	0					
ANR	970129	CompoundStatement		2055:46:65415:65716	970127	0					
ANR	970130	IdentifierDeclStatement	struct count_pz_t * user = ( struct count_pz_t * ) u ;	2056:1:65418:65466	970127	0	True				
ANR	970131	IdentifierDecl	* user = ( struct count_pz_t * ) u		970127	0					
ANR	970132	IdentifierDeclType	struct count_pz_t *		970127	0					
ANR	970133	Identifier	user		970127	1					
ANR	970134	AssignmentExpression	* user = ( struct count_pz_t * ) u		970127	2		=			
ANR	970135	Identifier	user		970127	0					
ANR	970136	CastExpression	( struct count_pz_t * ) u		970127	1					
ANR	970137	CastTarget	struct count_pz_t *		970127	0					
ANR	970138	Identifier	u		970127	1					
ANR	970139	IfStatement	if ( fi -> space == user -> flagspace && ( ( user -> addr <= fi -> offset && fi -> offset < user -> addr + user -> size ) || ( user -> addr <= fi -> offset + fi -> size && fi -> offset + fi -> size < user -> addr + user -> size ) ) )		970127	1					
ANR	970140	Condition	fi -> space == user -> flagspace && ( ( user -> addr <= fi -> offset && fi -> offset < user -> addr + user -> size ) || ( user -> addr <= fi -> offset + fi -> size && fi -> offset + fi -> size < user -> addr + user -> size ) )	2057:5:65473:65675	970127	0	True				
ANR	970141	AndExpression	fi -> space == user -> flagspace && ( ( user -> addr <= fi -> offset && fi -> offset < user -> addr + user -> size ) || ( user -> addr <= fi -> offset + fi -> size && fi -> offset + fi -> size < user -> addr + user -> size ) )		970127	0		&&			
ANR	970142	EqualityExpression	fi -> space == user -> flagspace		970127	0		==			
ANR	970143	PtrMemberAccess	fi -> space		970127	0					
ANR	970144	Identifier	fi		970127	0					
ANR	970145	Identifier	space		970127	1					
ANR	970146	PtrMemberAccess	user -> flagspace		970127	1					
ANR	970147	Identifier	user		970127	0					
ANR	970148	Identifier	flagspace		970127	1					
ANR	970149	OrExpression	( user -> addr <= fi -> offset && fi -> offset < user -> addr + user -> size ) || ( user -> addr <= fi -> offset + fi -> size && fi -> offset + fi -> size < user -> addr + user -> size )		970127	1		||			
ANR	970150	AndExpression	user -> addr <= fi -> offset && fi -> offset < user -> addr + user -> size		970127	0		&&			
ANR	970151	RelationalExpression	user -> addr <= fi -> offset		970127	0		<=			
ANR	970152	PtrMemberAccess	user -> addr		970127	0					
ANR	970153	Identifier	user		970127	0					
ANR	970154	Identifier	addr		970127	1					
ANR	970155	PtrMemberAccess	fi -> offset		970127	1					
ANR	970156	Identifier	fi		970127	0					
ANR	970157	Identifier	offset		970127	1					
ANR	970158	RelationalExpression	fi -> offset < user -> addr + user -> size		970127	1		<			
ANR	970159	PtrMemberAccess	fi -> offset		970127	0					
ANR	970160	Identifier	fi		970127	0					
ANR	970161	Identifier	offset		970127	1					
ANR	970162	AdditiveExpression	user -> addr + user -> size		970127	1		+			
ANR	970163	PtrMemberAccess	user -> addr		970127	0					
ANR	970164	Identifier	user		970127	0					
ANR	970165	Identifier	addr		970127	1					
ANR	970166	PtrMemberAccess	user -> size		970127	1					
ANR	970167	Identifier	user		970127	0					
ANR	970168	Identifier	size		970127	1					
ANR	970169	AndExpression	user -> addr <= fi -> offset + fi -> size && fi -> offset + fi -> size < user -> addr + user -> size		970127	1		&&			
ANR	970170	RelationalExpression	user -> addr <= fi -> offset + fi -> size		970127	0		<=			
ANR	970171	PtrMemberAccess	user -> addr		970127	0					
ANR	970172	Identifier	user		970127	0					
ANR	970173	Identifier	addr		970127	1					
ANR	970174	AdditiveExpression	fi -> offset + fi -> size		970127	1		+			
ANR	970175	PtrMemberAccess	fi -> offset		970127	0					
ANR	970176	Identifier	fi		970127	0					
ANR	970177	Identifier	offset		970127	1					
ANR	970178	PtrMemberAccess	fi -> size		970127	1					
ANR	970179	Identifier	fi		970127	0					
ANR	970180	Identifier	size		970127	1					
ANR	970181	RelationalExpression	fi -> offset + fi -> size < user -> addr + user -> size		970127	1		<			
ANR	970182	AdditiveExpression	fi -> offset + fi -> size		970127	0		+			
ANR	970183	PtrMemberAccess	fi -> offset		970127	0					
ANR	970184	Identifier	fi		970127	0					
ANR	970185	Identifier	offset		970127	1					
ANR	970186	PtrMemberAccess	fi -> size		970127	1					
ANR	970187	Identifier	fi		970127	0					
ANR	970188	Identifier	size		970127	1					
ANR	970189	AdditiveExpression	user -> addr + user -> size		970127	1		+			
ANR	970190	PtrMemberAccess	user -> addr		970127	0					
ANR	970191	Identifier	user		970127	0					
ANR	970192	Identifier	addr		970127	1					
ANR	970193	PtrMemberAccess	user -> size		970127	1					
ANR	970194	Identifier	user		970127	0					
ANR	970195	Identifier	size		970127	1					
ANR	970196	CompoundStatement		5:97:262:262	970127	1					
ANR	970197	ExpressionStatement	( * user -> ret ) ++	2060:2:65682:65696	970127	0	True				
ANR	970198	PostIncDecOperationExpression	( * user -> ret ) ++		970127	0					
ANR	970199	UnaryOperationExpression	* user -> ret		970127	0					
ANR	970200	UnaryOperator	*		970127	0					
ANR	970201	PtrMemberAccess	user -> ret		970127	1					
ANR	970202	Identifier	user		970127	0					
ANR	970203	Identifier	ret		970127	1					
ANR	970204	IncDec	++		970127	1					
ANR	970205	ReturnStatement	return true ;	2063:1:65703:65714	970127	2	True				
ANR	970206	Identifier	true		970127	0					
ANR	970207	ReturnType	static bool		970127	1					
ANR	970208	Identifier	count_pzs		970127	2					
ANR	970209	ParameterList	"RFlagItem * fi , void * u"		970127	3					
ANR	970210	Parameter	RFlagItem * fi	2055:22:65391:65403	970127	0	True				
ANR	970211	ParameterType	RFlagItem *		970127	0					
ANR	970212	Identifier	fi		970127	1					
ANR	970213	Parameter	void * u	2055:37:65406:65412	970127	1	True				
ANR	970214	ParameterType	void *		970127	0					
ANR	970215	Identifier	u		970127	1					
ANR	970216	CFGEntryNode	ENTRY		970127		True				
ANR	970217	CFGExitNode	EXIT		970127		True				
ANR	970218	Symbol	fi		970127						
ANR	970219	Symbol	fi -> size		970127						
ANR	970220	Symbol	* user		970127						
ANR	970221	Symbol	* * user		970127						
ANR	970222	Symbol	* fi		970127						
ANR	970223	Symbol	user -> addr		970127						
ANR	970224	Symbol	fi -> space		970127						
ANR	970225	Symbol	user -> ret		970127						
ANR	970226	Symbol	u		970127						
ANR	970227	Symbol	user -> flagspace		970127						
ANR	970228	Symbol	fi -> offset		970127						
ANR	970229	Symbol	user -> size		970127						
ANR	970230	Symbol	true		970127						
ANR	970231	Symbol	* user -> ret		970127						
ANR	970232	Symbol	user		970127						
ANR	970233	Function	count_pzf	2065:0:65718:65923							
ANR	970234	FunctionDef	"count_pzf (RFlagItem * fi , void * u)"		970233	0					
ANR	970235	CompoundStatement		2065:46:65764:65923	970233	0					
ANR	970236	IdentifierDeclStatement	struct count_pz_t * user = ( struct count_pz_t * ) u ;	2066:1:65767:65815	970233	0	True				
ANR	970237	IdentifierDecl	* user = ( struct count_pz_t * ) u		970233	0					
ANR	970238	IdentifierDeclType	struct count_pz_t *		970233	0					
ANR	970239	Identifier	user		970233	1					
ANR	970240	AssignmentExpression	* user = ( struct count_pz_t * ) u		970233	2		=			
ANR	970241	Identifier	user		970233	0					
ANR	970242	CastExpression	( struct count_pz_t * ) u		970233	1					
ANR	970243	CastTarget	struct count_pz_t *		970233	0					
ANR	970244	Identifier	u		970233	1					
ANR	970245	IfStatement	if ( fi -> offset <= user -> addr && user -> addr < fi -> offset + fi -> size )		970233	1					
ANR	970246	Condition	fi -> offset <= user -> addr && user -> addr < fi -> offset + fi -> size	2067:5:65822:65883	970233	0	True				
ANR	970247	AndExpression	fi -> offset <= user -> addr && user -> addr < fi -> offset + fi -> size		970233	0		&&			
ANR	970248	RelationalExpression	fi -> offset <= user -> addr		970233	0		<=			
ANR	970249	PtrMemberAccess	fi -> offset		970233	0					
ANR	970250	Identifier	fi		970233	0					
ANR	970251	Identifier	offset		970233	1					
ANR	970252	PtrMemberAccess	user -> addr		970233	1					
ANR	970253	Identifier	user		970233	0					
ANR	970254	Identifier	addr		970233	1					
ANR	970255	RelationalExpression	user -> addr < fi -> offset + fi -> size		970233	1		<			
ANR	970256	PtrMemberAccess	user -> addr		970233	0					
ANR	970257	Identifier	user		970233	0					
ANR	970258	Identifier	addr		970233	1					
ANR	970259	AdditiveExpression	fi -> offset + fi -> size		970233	1		+			
ANR	970260	PtrMemberAccess	fi -> offset		970233	0					
ANR	970261	Identifier	fi		970233	0					
ANR	970262	Identifier	offset		970233	1					
ANR	970263	PtrMemberAccess	fi -> size		970233	1					
ANR	970264	Identifier	fi		970233	0					
ANR	970265	Identifier	size		970233	1					
ANR	970266	CompoundStatement		3:69:121:121	970233	1					
ANR	970267	ExpressionStatement	( * user -> ret ) ++	2068:2:65890:65904	970233	0	True				
ANR	970268	PostIncDecOperationExpression	( * user -> ret ) ++		970233	0					
ANR	970269	UnaryOperationExpression	* user -> ret		970233	0					
ANR	970270	UnaryOperator	*		970233	0					
ANR	970271	PtrMemberAccess	user -> ret		970233	1					
ANR	970272	Identifier	user		970233	0					
ANR	970273	Identifier	ret		970233	1					
ANR	970274	IncDec	++		970233	1					
ANR	970275	ReturnStatement	return true ;	2070:1:65910:65921	970233	2	True				
ANR	970276	Identifier	true		970233	0					
ANR	970277	ReturnType	static bool		970233	1					
ANR	970278	Identifier	count_pzf		970233	2					
ANR	970279	ParameterList	"RFlagItem * fi , void * u"		970233	3					
ANR	970280	Parameter	RFlagItem * fi	2065:22:65740:65752	970233	0	True				
ANR	970281	ParameterType	RFlagItem *		970233	0					
ANR	970282	Identifier	fi		970233	1					
ANR	970283	Parameter	void * u	2065:37:65755:65761	970233	1	True				
ANR	970284	ParameterType	void *		970233	0					
ANR	970285	Identifier	u		970233	1					
ANR	970286	CFGEntryNode	ENTRY		970233		True				
ANR	970287	CFGExitNode	EXIT		970233		True				
ANR	970288	Symbol	user -> addr		970233						
ANR	970289	Symbol	fi		970233						
ANR	970290	Symbol	user -> ret		970233						
ANR	970291	Symbol	* user		970233						
ANR	970292	Symbol	fi -> size		970233						
ANR	970293	Symbol	u		970233						
ANR	970294	Symbol	fi -> offset		970233						
ANR	970295	Symbol	true		970233						
ANR	970296	Symbol	* user -> ret		970233						
ANR	970297	Symbol	* * user		970233						
ANR	970298	Symbol	* fi		970233						
ANR	970299	Symbol	user		970233						
ANR	970300	Function	printzoomcallback	2073:0:65926:67533							
ANR	970301	FunctionDef	"printzoomcallback (void * user , int mode , ut64 addr , ut8 * bufz , ut64 size)"		970300	0					
ANR	970302	CompoundStatement		2073:84:66010:67533	970300	0					
ANR	970303	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	2074:1:66013:66041	970300	0	True				
ANR	970304	IdentifierDecl	* core = ( RCore * ) user		970300	0					
ANR	970305	IdentifierDeclType	RCore *		970300	0					
ANR	970306	Identifier	core		970300	1					
ANR	970307	AssignmentExpression	* core = ( RCore * ) user		970300	2		=			
ANR	970308	Identifier	core		970300	0					
ANR	970309	CastExpression	( RCore * ) user		970300	1					
ANR	970310	CastTarget	RCore *		970300	0					
ANR	970311	Identifier	user		970300	1					
ANR	970312	IdentifierDeclStatement	"int j , ret = 0 ;"	2075:1:66044:66058	970300	1	True				
ANR	970313	IdentifierDecl	j		970300	0					
ANR	970314	IdentifierDeclType	int		970300	0					
ANR	970315	Identifier	j		970300	1					
ANR	970316	IdentifierDecl	ret = 0		970300	1					
ANR	970317	IdentifierDeclType	int		970300	0					
ANR	970318	Identifier	ret		970300	1					
ANR	970319	AssignmentExpression	ret = 0		970300	2		=			
ANR	970320	Identifier	ret		970300	0					
ANR	970321	PrimaryExpression	0		970300	1					
ANR	970322	IdentifierDeclStatement	struct count_pz_t u ;	2076:1:66061:66080	970300	2	True				
ANR	970323	IdentifierDecl	u		970300	0					
ANR	970324	IdentifierDeclType	struct count_pz_t		970300	0					
ANR	970325	Identifier	u		970300	1					
ANR	970326	SwitchStatement	switch ( mode )		970300	3					
ANR	970327	Condition	mode	2078:9:66092:66095	970300	0	True				
ANR	970328	Identifier	mode		970300	0					
ANR	970329	CompoundStatement		6:15:87:87	970300	1					
ANR	970330	Label	case 'a' :	2079:1:66101:66109	970300	0	True				
ANR	970331	CompoundStatement		10:2:170:183	970300	1					
ANR	970332	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , addr , 0 ) ;"	2081:2:66117:66177	970300	0	True				
ANR	970333	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , addr , 0 )"		970300	0					
ANR	970334	IdentifierDeclType	RAnalFunction *		970300	0					
ANR	970335	Identifier	fcn		970300	1					
ANR	970336	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , addr , 0 )"		970300	2		=			
ANR	970337	Identifier	fcn		970300	0					
ANR	970338	CallExpression	"r_anal_get_fcn_in ( core -> anal , addr , 0 )"		970300	1					
ANR	970339	Callee	r_anal_get_fcn_in		970300	0					
ANR	970340	Identifier	r_anal_get_fcn_in		970300	0					
ANR	970341	ArgumentList	core -> anal		970300	1					
ANR	970342	Argument	core -> anal		970300	0					
ANR	970343	PtrMemberAccess	core -> anal		970300	0					
ANR	970344	Identifier	core		970300	0					
ANR	970345	Identifier	anal		970300	1					
ANR	970346	Argument	addr		970300	1					
ANR	970347	Identifier	addr		970300	0					
ANR	970348	Argument	0		970300	2					
ANR	970349	PrimaryExpression	0		970300	0					
ANR	970350	IdentifierDeclStatement	int value = 0 ;	2082:2:66181:66194	970300	1	True				
ANR	970351	IdentifierDecl	value = 0		970300	0					
ANR	970352	IdentifierDeclType	int		970300	0					
ANR	970353	Identifier	value		970300	1					
ANR	970354	AssignmentExpression	value = 0		970300	2		=			
ANR	970355	Identifier	value		970300	0					
ANR	970356	PrimaryExpression	0		970300	1					
ANR	970357	IfStatement	if ( fcn )		970300	2					
ANR	970358	Condition	fcn	2083:6:66202:66204	970300	0	True				
ANR	970359	Identifier	fcn		970300	0					
ANR	970360	CompoundStatement		11:11:196:196	970300	1					
ANR	970361	ExpressionStatement	value = r_list_length ( fcn -> bbs )	2084:3:66212:66244	970300	0	True				
ANR	970362	AssignmentExpression	value = r_list_length ( fcn -> bbs )		970300	0		=			
ANR	970363	Identifier	value		970300	0					
ANR	970364	CallExpression	r_list_length ( fcn -> bbs )		970300	1					
ANR	970365	Callee	r_list_length		970300	0					
ANR	970366	Identifier	r_list_length		970300	0					
ANR	970367	ArgumentList	fcn -> bbs		970300	1					
ANR	970368	Argument	fcn -> bbs		970300	0					
ANR	970369	PtrMemberAccess	fcn -> bbs		970300	0					
ANR	970370	Identifier	fcn		970300	0					
ANR	970371	Identifier	bbs		970300	1					
ANR	970372	ReturnStatement	return value ;	2086:2:66252:66264	970300	3	True				
ANR	970373	Identifier	value		970300	0					
ANR	970374	BreakStatement	break ;	2088:2:66272:66277	970300	2	True				
ANR	970375	Label	case 'A' :	2089:1:66280:66288	970300	3	True				
ANR	970376	CompoundStatement		21:2:376:389	970300	4					
ANR	970377	IdentifierDeclStatement	"RCoreAnalStats * as = r_core_anal_get_stats ( core , addr , addr + size * 2 , size ) ;"	2091:2:66296:66374	970300	0	True				
ANR	970378	IdentifierDecl	"* as = r_core_anal_get_stats ( core , addr , addr + size * 2 , size )"		970300	0					
ANR	970379	IdentifierDeclType	RCoreAnalStats *		970300	0					
ANR	970380	Identifier	as		970300	1					
ANR	970381	AssignmentExpression	"* as = r_core_anal_get_stats ( core , addr , addr + size * 2 , size )"		970300	2		=			
ANR	970382	Identifier	as		970300	0					
ANR	970383	CallExpression	"r_core_anal_get_stats ( core , addr , addr + size * 2 , size )"		970300	1					
ANR	970384	Callee	r_core_anal_get_stats		970300	0					
ANR	970385	Identifier	r_core_anal_get_stats		970300	0					
ANR	970386	ArgumentList	core		970300	1					
ANR	970387	Argument	core		970300	0					
ANR	970388	Identifier	core		970300	0					
ANR	970389	Argument	addr		970300	1					
ANR	970390	Identifier	addr		970300	0					
ANR	970391	Argument	addr + size * 2		970300	2					
ANR	970392	AdditiveExpression	addr + size * 2		970300	0		+			
ANR	970393	Identifier	addr		970300	0					
ANR	970394	MultiplicativeExpression	size * 2		970300	1		*			
ANR	970395	Identifier	size		970300	0					
ANR	970396	PrimaryExpression	2		970300	1					
ANR	970397	Argument	size		970300	3					
ANR	970398	Identifier	size		970300	0					
ANR	970399	IdentifierDeclStatement	int i ;	2092:2:66378:66383	970300	1	True				
ANR	970400	IdentifierDecl	i		970300	0					
ANR	970401	IdentifierDeclType	int		970300	0					
ANR	970402	Identifier	i		970300	1					
ANR	970403	IdentifierDeclStatement	int value = 0 ;	2093:2:66387:66400	970300	2	True				
ANR	970404	IdentifierDecl	value = 0		970300	0					
ANR	970405	IdentifierDeclType	int		970300	0					
ANR	970406	Identifier	value		970300	1					
ANR	970407	AssignmentExpression	value = 0		970300	2		=			
ANR	970408	Identifier	value		970300	0					
ANR	970409	PrimaryExpression	0		970300	1					
ANR	970410	ForStatement	for ( i = 0 ; i < 1 ; i ++ )		970300	3					
ANR	970411	ForInit	i = 0 ;	2094:7:66409:66414	970300	0	True				
ANR	970412	AssignmentExpression	i = 0		970300	0		=			
ANR	970413	Identifier	i		970300	0					
ANR	970414	PrimaryExpression	0		970300	1					
ANR	970415	Condition	i < 1	2094:14:66416:66420	970300	1	True				
ANR	970416	RelationalExpression	i < 1		970300	0		<			
ANR	970417	Identifier	i		970300	0					
ANR	970418	PrimaryExpression	1		970300	1					
ANR	970419	PostIncDecOperationExpression	i ++	2094:21:66423:66425	970300	2	True				
ANR	970420	Identifier	i		970300	0					
ANR	970421	IncDec	++		970300	1					
ANR	970422	CompoundStatement		22:26:417:417	970300	3					
ANR	970423	ExpressionStatement	value += as -> block [ i ] . functions	2095:3:66433:66464	970300	0	True				
ANR	970424	AssignmentExpression	value += as -> block [ i ] . functions		970300	0		+=			
ANR	970425	Identifier	value		970300	0					
ANR	970426	MemberAccess	as -> block [ i ] . functions		970300	1					
ANR	970427	ArrayIndexing	as -> block [ i ]		970300	0					
ANR	970428	PtrMemberAccess	as -> block		970300	0					
ANR	970429	Identifier	as		970300	0					
ANR	970430	Identifier	block		970300	1					
ANR	970431	Identifier	i		970300	1					
ANR	970432	Identifier	functions		970300	1					
ANR	970433	ExpressionStatement	value += as -> block [ i ] . in_functions	2096:3:66469:66503	970300	1	True				
ANR	970434	AssignmentExpression	value += as -> block [ i ] . in_functions		970300	0		+=			
ANR	970435	Identifier	value		970300	0					
ANR	970436	MemberAccess	as -> block [ i ] . in_functions		970300	1					
ANR	970437	ArrayIndexing	as -> block [ i ]		970300	0					
ANR	970438	PtrMemberAccess	as -> block		970300	0					
ANR	970439	Identifier	as		970300	0					
ANR	970440	Identifier	block		970300	1					
ANR	970441	Identifier	i		970300	1					
ANR	970442	Identifier	in_functions		970300	1					
ANR	970443	ExpressionStatement	value += as -> block [ i ] . comments	2097:3:66508:66538	970300	2	True				
ANR	970444	AssignmentExpression	value += as -> block [ i ] . comments		970300	0		+=			
ANR	970445	Identifier	value		970300	0					
ANR	970446	MemberAccess	as -> block [ i ] . comments		970300	1					
ANR	970447	ArrayIndexing	as -> block [ i ]		970300	0					
ANR	970448	PtrMemberAccess	as -> block		970300	0					
ANR	970449	Identifier	as		970300	0					
ANR	970450	Identifier	block		970300	1					
ANR	970451	Identifier	i		970300	1					
ANR	970452	Identifier	comments		970300	1					
ANR	970453	ExpressionStatement	value += as -> block [ i ] . symbols	2098:3:66543:66572	970300	3	True				
ANR	970454	AssignmentExpression	value += as -> block [ i ] . symbols		970300	0		+=			
ANR	970455	Identifier	value		970300	0					
ANR	970456	MemberAccess	as -> block [ i ] . symbols		970300	1					
ANR	970457	ArrayIndexing	as -> block [ i ]		970300	0					
ANR	970458	PtrMemberAccess	as -> block		970300	0					
ANR	970459	Identifier	as		970300	0					
ANR	970460	Identifier	block		970300	1					
ANR	970461	Identifier	i		970300	1					
ANR	970462	Identifier	symbols		970300	1					
ANR	970463	ExpressionStatement	value += as -> block [ i ] . flags	2099:3:66577:66604	970300	4	True				
ANR	970464	AssignmentExpression	value += as -> block [ i ] . flags		970300	0		+=			
ANR	970465	Identifier	value		970300	0					
ANR	970466	MemberAccess	as -> block [ i ] . flags		970300	1					
ANR	970467	ArrayIndexing	as -> block [ i ]		970300	0					
ANR	970468	PtrMemberAccess	as -> block		970300	0					
ANR	970469	Identifier	as		970300	0					
ANR	970470	Identifier	block		970300	1					
ANR	970471	Identifier	i		970300	1					
ANR	970472	Identifier	flags		970300	1					
ANR	970473	ExpressionStatement	value += as -> block [ i ] . strings	2100:3:66609:66638	970300	5	True				
ANR	970474	AssignmentExpression	value += as -> block [ i ] . strings		970300	0		+=			
ANR	970475	Identifier	value		970300	0					
ANR	970476	MemberAccess	as -> block [ i ] . strings		970300	1					
ANR	970477	ArrayIndexing	as -> block [ i ]		970300	0					
ANR	970478	PtrMemberAccess	as -> block		970300	0					
ANR	970479	Identifier	as		970300	0					
ANR	970480	Identifier	block		970300	1					
ANR	970481	Identifier	i		970300	1					
ANR	970482	Identifier	strings		970300	1					
ANR	970483	ExpressionStatement	value += as -> block [ i ] . blocks	2101:3:66643:66671	970300	6	True				
ANR	970484	AssignmentExpression	value += as -> block [ i ] . blocks		970300	0		+=			
ANR	970485	Identifier	value		970300	0					
ANR	970486	MemberAccess	as -> block [ i ] . blocks		970300	1					
ANR	970487	ArrayIndexing	as -> block [ i ]		970300	0					
ANR	970488	PtrMemberAccess	as -> block		970300	0					
ANR	970489	Identifier	as		970300	0					
ANR	970490	Identifier	block		970300	1					
ANR	970491	Identifier	i		970300	1					
ANR	970492	Identifier	blocks		970300	1					
ANR	970493	ExpressionStatement	value *= 20	2102:3:66676:66687	970300	7	True				
ANR	970494	AssignmentExpression	value *= 20		970300	0		*=			
ANR	970495	Identifier	value		970300	0					
ANR	970496	PrimaryExpression	20		970300	1					
ANR	970497	ExpressionStatement	r_core_anal_stats_free ( as )	2104:2:66695:66722	970300	4	True				
ANR	970498	CallExpression	r_core_anal_stats_free ( as )		970300	0					
ANR	970499	Callee	r_core_anal_stats_free		970300	0					
ANR	970500	Identifier	r_core_anal_stats_free		970300	0					
ANR	970501	ArgumentList	as		970300	1					
ANR	970502	Argument	as		970300	0					
ANR	970503	Identifier	as		970300	0					
ANR	970504	ReturnStatement	return value ;	2105:2:66726:66738	970300	5	True				
ANR	970505	Identifier	value		970300	0					
ANR	970506	BreakStatement	break ;	2107:2:66746:66751	970300	5	True				
ANR	970507	Label	case '0' :	2108:1:66754:66762	970300	6	True				
ANR	970508	ForStatement	for ( j = 0 ; j < size ; j ++ )		970300	7					
ANR	970509	ForInit	j = 0 ;	2109:7:66780:66785	970300	0	True				
ANR	970510	AssignmentExpression	j = 0		970300	0		=			
ANR	970511	Identifier	j		970300	0					
ANR	970512	PrimaryExpression	0		970300	1					
ANR	970513	Condition	j < size	2109:14:66787:66794	970300	1	True				
ANR	970514	RelationalExpression	j < size		970300	0		<			
ANR	970515	Identifier	j		970300	0					
ANR	970516	Identifier	size		970300	1					
ANR	970517	PostIncDecOperationExpression	j ++	2109:24:66797:66799	970300	2	True				
ANR	970518	Identifier	j		970300	0					
ANR	970519	IncDec	++		970300	1					
ANR	970520	CompoundStatement		37:29:791:791	970300	3					
ANR	970521	IfStatement	if ( bufz [ j ] == 0 )		970300	0					
ANR	970522	Condition	bufz [ j ] == 0	2110:7:66811:66822	970300	0	True				
ANR	970523	EqualityExpression	bufz [ j ] == 0		970300	0		==			
ANR	970524	ArrayIndexing	bufz [ j ]		970300	0					
ANR	970525	Identifier	bufz		970300	0					
ANR	970526	Identifier	j		970300	1					
ANR	970527	PrimaryExpression	0		970300	1					
ANR	970528	CompoundStatement		38:21:814:814	970300	1					
ANR	970529	ExpressionStatement	ret ++	2111:4:66831:66836	970300	0	True				
ANR	970530	PostIncDecOperationExpression	ret ++		970300	0					
ANR	970531	Identifier	ret		970300	0					
ANR	970532	IncDec	++		970300	1					
ANR	970533	BreakStatement	break ;	2114:2:66849:66854	970300	8	True				
ANR	970534	Label	case 'e' :	2115:1:66857:66865	970300	9	True				
ANR	970535	ExpressionStatement	"ret = ( ut8 ) ( r_hash_entropy_fraction ( bufz , size ) * 255 )"	2116:2:66878:66934	970300	10	True				
ANR	970536	AssignmentExpression	"ret = ( ut8 ) ( r_hash_entropy_fraction ( bufz , size ) * 255 )"		970300	0		=			
ANR	970537	Identifier	ret		970300	0					
ANR	970538	CastExpression	"( ut8 ) ( r_hash_entropy_fraction ( bufz , size ) * 255 )"		970300	1					
ANR	970539	CastTarget	ut8		970300	0					
ANR	970540	MultiplicativeExpression	"r_hash_entropy_fraction ( bufz , size ) * 255"		970300	1		*			
ANR	970541	CallExpression	"r_hash_entropy_fraction ( bufz , size )"		970300	0					
ANR	970542	Callee	r_hash_entropy_fraction		970300	0					
ANR	970543	Identifier	r_hash_entropy_fraction		970300	0					
ANR	970544	ArgumentList	bufz		970300	1					
ANR	970545	Argument	bufz		970300	0					
ANR	970546	Identifier	bufz		970300	0					
ANR	970547	Argument	size		970300	1					
ANR	970548	Identifier	size		970300	0					
ANR	970549	PrimaryExpression	255		970300	1					
ANR	970550	BreakStatement	break ;	2117:2:66938:66943	970300	11	True				
ANR	970551	Label	case 'f' :	2118:1:66946:66954	970300	12	True				
ANR	970552	ExpressionStatement	u . addr = addr	2119:2:66967:66980	970300	13	True				
ANR	970553	AssignmentExpression	u . addr = addr		970300	0		=			
ANR	970554	MemberAccess	u . addr		970300	0					
ANR	970555	Identifier	u		970300	0					
ANR	970556	Identifier	addr		970300	1					
ANR	970557	Identifier	addr		970300	1					
ANR	970558	ExpressionStatement	u . ret = & ret	2120:2:66984:66996	970300	14	True				
ANR	970559	AssignmentExpression	u . ret = & ret		970300	0		=			
ANR	970560	MemberAccess	u . ret		970300	0					
ANR	970561	Identifier	u		970300	0					
ANR	970562	Identifier	ret		970300	1					
ANR	970563	UnaryOperationExpression	& ret		970300	1					
ANR	970564	UnaryOperator	&		970300	0					
ANR	970565	Identifier	ret		970300	1					
ANR	970566	ExpressionStatement	"r_flag_foreach ( core -> flags , count_pzf , & u )"	2121:2:67000:67043	970300	15	True				
ANR	970567	CallExpression	"r_flag_foreach ( core -> flags , count_pzf , & u )"		970300	0					
ANR	970568	Callee	r_flag_foreach		970300	0					
ANR	970569	Identifier	r_flag_foreach		970300	0					
ANR	970570	ArgumentList	core -> flags		970300	1					
ANR	970571	Argument	core -> flags		970300	0					
ANR	970572	PtrMemberAccess	core -> flags		970300	0					
ANR	970573	Identifier	core		970300	0					
ANR	970574	Identifier	flags		970300	1					
ANR	970575	Argument	count_pzf		970300	1					
ANR	970576	Identifier	count_pzf		970300	0					
ANR	970577	Argument	& u		970300	2					
ANR	970578	UnaryOperationExpression	& u		970300	0					
ANR	970579	UnaryOperator	&		970300	0					
ANR	970580	Identifier	u		970300	1					
ANR	970581	BreakStatement	break ;	2122:2:67047:67052	970300	16	True				
ANR	970582	Label	case 'F' :	2123:1:67055:67063	970300	17	True				
ANR	970583	ForStatement	for ( j = 0 ; j < size ; j ++ )		970300	18					
ANR	970584	ForInit	j = 0 ;	2124:7:67081:67086	970300	0	True				
ANR	970585	AssignmentExpression	j = 0		970300	0		=			
ANR	970586	Identifier	j		970300	0					
ANR	970587	PrimaryExpression	0		970300	1					
ANR	970588	Condition	j < size	2124:14:67088:67095	970300	1	True				
ANR	970589	RelationalExpression	j < size		970300	0		<			
ANR	970590	Identifier	j		970300	0					
ANR	970591	Identifier	size		970300	1					
ANR	970592	PostIncDecOperationExpression	j ++	2124:24:67098:67100	970300	2	True				
ANR	970593	Identifier	j		970300	0					
ANR	970594	IncDec	++		970300	1					
ANR	970595	CompoundStatement		52:29:1092:1092	970300	3					
ANR	970596	IfStatement	if ( bufz [ j ] == 0xff )		970300	0					
ANR	970597	Condition	bufz [ j ] == 0xff	2125:7:67112:67126	970300	0	True				
ANR	970598	EqualityExpression	bufz [ j ] == 0xff		970300	0		==			
ANR	970599	ArrayIndexing	bufz [ j ]		970300	0					
ANR	970600	Identifier	bufz		970300	0					
ANR	970601	Identifier	j		970300	1					
ANR	970602	PrimaryExpression	0xff		970300	1					
ANR	970603	CompoundStatement		53:24:1118:1118	970300	1					
ANR	970604	ExpressionStatement	ret ++	2126:4:67135:67140	970300	0	True				
ANR	970605	PostIncDecOperationExpression	ret ++		970300	0					
ANR	970606	Identifier	ret		970300	0					
ANR	970607	IncDec	++		970300	1					
ANR	970608	BreakStatement	break ;	2129:2:67153:67158	970300	19	True				
ANR	970609	Label	case 'p' :	2130:1:67161:67169	970300	20	True				
ANR	970610	ForStatement	for ( j = 0 ; j < size ; j ++ )		970300	21					
ANR	970611	ForInit	j = 0 ;	2131:7:67187:67192	970300	0	True				
ANR	970612	AssignmentExpression	j = 0		970300	0		=			
ANR	970613	Identifier	j		970300	0					
ANR	970614	PrimaryExpression	0		970300	1					
ANR	970615	Condition	j < size	2131:14:67194:67201	970300	1	True				
ANR	970616	RelationalExpression	j < size		970300	0		<			
ANR	970617	Identifier	j		970300	0					
ANR	970618	Identifier	size		970300	1					
ANR	970619	PostIncDecOperationExpression	j ++	2131:24:67204:67206	970300	2	True				
ANR	970620	Identifier	j		970300	0					
ANR	970621	IncDec	++		970300	1					
ANR	970622	CompoundStatement		59:29:1198:1198	970300	3					
ANR	970623	IfStatement	if ( IS_PRINTABLE ( bufz [ j ] ) )		970300	0					
ANR	970624	Condition	IS_PRINTABLE ( bufz [ j ] )	2132:7:67218:67239	970300	0	True				
ANR	970625	CallExpression	IS_PRINTABLE ( bufz [ j ] )		970300	0					
ANR	970626	Callee	IS_PRINTABLE		970300	0					
ANR	970627	Identifier	IS_PRINTABLE		970300	0					
ANR	970628	ArgumentList	bufz [ j ]		970300	1					
ANR	970629	Argument	bufz [ j ]		970300	0					
ANR	970630	ArrayIndexing	bufz [ j ]		970300	0					
ANR	970631	Identifier	bufz		970300	0					
ANR	970632	Identifier	j		970300	1					
ANR	970633	CompoundStatement		60:31:1231:1231	970300	1					
ANR	970634	ExpressionStatement	ret ++	2133:4:67248:67253	970300	0	True				
ANR	970635	PostIncDecOperationExpression	ret ++		970300	0					
ANR	970636	Identifier	ret		970300	0					
ANR	970637	IncDec	++		970300	1					
ANR	970638	BreakStatement	break ;	2136:2:67266:67271	970300	22	True				
ANR	970639	Label	case 's' :	2137:1:67274:67282	970300	23	True				
ANR	970640	ExpressionStatement	"u . flagspace = r_flag_space_get ( core -> flags , R_FLAGS_FS_STRINGS )"	2138:2:67295:67359	970300	24	True				
ANR	970641	AssignmentExpression	"u . flagspace = r_flag_space_get ( core -> flags , R_FLAGS_FS_STRINGS )"		970300	0		=			
ANR	970642	MemberAccess	u . flagspace		970300	0					
ANR	970643	Identifier	u		970300	0					
ANR	970644	Identifier	flagspace		970300	1					
ANR	970645	CallExpression	"r_flag_space_get ( core -> flags , R_FLAGS_FS_STRINGS )"		970300	1					
ANR	970646	Callee	r_flag_space_get		970300	0					
ANR	970647	Identifier	r_flag_space_get		970300	0					
ANR	970648	ArgumentList	core -> flags		970300	1					
ANR	970649	Argument	core -> flags		970300	0					
ANR	970650	PtrMemberAccess	core -> flags		970300	0					
ANR	970651	Identifier	core		970300	0					
ANR	970652	Identifier	flags		970300	1					
ANR	970653	Argument	R_FLAGS_FS_STRINGS		970300	1					
ANR	970654	Identifier	R_FLAGS_FS_STRINGS		970300	0					
ANR	970655	ExpressionStatement	u . addr = addr	2139:2:67363:67376	970300	25	True				
ANR	970656	AssignmentExpression	u . addr = addr		970300	0		=			
ANR	970657	MemberAccess	u . addr		970300	0					
ANR	970658	Identifier	u		970300	0					
ANR	970659	Identifier	addr		970300	1					
ANR	970660	Identifier	addr		970300	1					
ANR	970661	ExpressionStatement	u . size = size	2140:2:67380:67393	970300	26	True				
ANR	970662	AssignmentExpression	u . size = size		970300	0		=			
ANR	970663	MemberAccess	u . size		970300	0					
ANR	970664	Identifier	u		970300	0					
ANR	970665	Identifier	size		970300	1					
ANR	970666	Identifier	size		970300	1					
ANR	970667	ExpressionStatement	u . ret = & ret	2141:2:67397:67409	970300	27	True				
ANR	970668	AssignmentExpression	u . ret = & ret		970300	0		=			
ANR	970669	MemberAccess	u . ret		970300	0					
ANR	970670	Identifier	u		970300	0					
ANR	970671	Identifier	ret		970300	1					
ANR	970672	UnaryOperationExpression	& ret		970300	1					
ANR	970673	UnaryOperator	&		970300	0					
ANR	970674	Identifier	ret		970300	1					
ANR	970675	ExpressionStatement	"r_flag_foreach ( core -> flags , count_pzs , & u )"	2142:2:67413:67456	970300	28	True				
ANR	970676	CallExpression	"r_flag_foreach ( core -> flags , count_pzs , & u )"		970300	0					
ANR	970677	Callee	r_flag_foreach		970300	0					
ANR	970678	Identifier	r_flag_foreach		970300	0					
ANR	970679	ArgumentList	core -> flags		970300	1					
ANR	970680	Argument	core -> flags		970300	0					
ANR	970681	PtrMemberAccess	core -> flags		970300	0					
ANR	970682	Identifier	core		970300	0					
ANR	970683	Identifier	flags		970300	1					
ANR	970684	Argument	count_pzs		970300	1					
ANR	970685	Identifier	count_pzs		970300	0					
ANR	970686	Argument	& u		970300	2					
ANR	970687	UnaryOperationExpression	& u		970300	0					
ANR	970688	UnaryOperator	&		970300	0					
ANR	970689	Identifier	u		970300	1					
ANR	970690	BreakStatement	break ;	2143:2:67460:67465	970300	29	True				
ANR	970691	Label	case 'h' :	2144:1:67468:67476	970300	30	True				
ANR	970692	Label	default :	2145:1:67493:67500	970300	31	True				
ANR	970693	Identifier	default		970300	0					
ANR	970694	ExpressionStatement	ret = * bufz	2146:2:67504:67515	970300	32	True				
ANR	970695	AssignmentExpression	ret = * bufz		970300	0		=			
ANR	970696	Identifier	ret		970300	0					
ANR	970697	UnaryOperationExpression	* bufz		970300	1					
ANR	970698	UnaryOperator	*		970300	0					
ANR	970699	Identifier	bufz		970300	1					
ANR	970700	ReturnStatement	return ret ;	2148:1:67521:67531	970300	4	True				
ANR	970701	Identifier	ret		970300	0					
ANR	970702	ReturnType	static int		970300	1					
ANR	970703	Identifier	printzoomcallback		970300	2					
ANR	970704	ParameterList	"void * user , int mode , ut64 addr , ut8 * bufz , ut64 size"		970300	3					
ANR	970705	Parameter	void * user	2073:29:65955:65964	970300	0	True				
ANR	970706	ParameterType	void *		970300	0					
ANR	970707	Identifier	user		970300	1					
ANR	970708	Parameter	int mode	2073:41:65967:65974	970300	1	True				
ANR	970709	ParameterType	int		970300	0					
ANR	970710	Identifier	mode		970300	1					
ANR	970711	Parameter	ut64 addr	2073:51:65977:65985	970300	2	True				
ANR	970712	ParameterType	ut64		970300	0					
ANR	970713	Identifier	addr		970300	1					
ANR	970714	Parameter	ut8 * bufz	2073:62:65988:65996	970300	3	True				
ANR	970715	ParameterType	ut8 *		970300	0					
ANR	970716	Identifier	bufz		970300	1					
ANR	970717	Parameter	ut64 size	2073:73:65999:66007	970300	4	True				
ANR	970718	ParameterType	ut64		970300	0					
ANR	970719	Identifier	size		970300	1					
ANR	970720	CFGEntryNode	ENTRY		970300		True				
ANR	970721	CFGExitNode	EXIT		970300		True				
ANR	970722	Symbol	& ret		970300						
ANR	970723	Symbol	* bufz		970300						
ANR	970724	Symbol	IS_PRINTABLE		970300						
ANR	970725	Symbol	* fcn		970300						
ANR	970726	Symbol	* core		970300						
ANR	970727	Symbol	r_core_anal_get_stats		970300						
ANR	970728	Symbol	bufz		970300						
ANR	970729	Symbol	R_FLAGS_FS_STRINGS		970300						
ANR	970730	Symbol	as -> block [ i ] . flags		970300						
ANR	970731	Symbol	as -> block [ i ] . blocks		970300						
ANR	970732	Symbol	core -> anal		970300						
ANR	970733	Symbol	u . addr		970300						
ANR	970734	Symbol	as -> block [ i ] . strings		970300						
ANR	970735	Symbol	mode		970300						
ANR	970736	Symbol	fcn		970300						
ANR	970737	Symbol	u . flagspace		970300						
ANR	970738	Symbol	u . size		970300						
ANR	970739	Symbol	r_hash_entropy_fraction		970300						
ANR	970740	Symbol	addr		970300						
ANR	970741	Symbol	* * as		970300						
ANR	970742	Symbol	as -> block [ i ] . in_functions		970300						
ANR	970743	Symbol	value		970300						
ANR	970744	Symbol	ret		970300						
ANR	970745	Symbol	as -> block [ i ] . symbols		970300						
ANR	970746	Symbol	as -> block [ i ] . functions		970300						
ANR	970747	Symbol	* as -> block		970300						
ANR	970748	Symbol	u . ret		970300						
ANR	970749	Symbol	i		970300						
ANR	970750	Symbol	j		970300						
ANR	970751	Symbol	core -> flags		970300						
ANR	970752	Symbol	count_pzs		970300						
ANR	970753	Symbol	core		970300						
ANR	970754	Symbol	as -> block		970300						
ANR	970755	Symbol	as		970300						
ANR	970756	Symbol	r_anal_get_fcn_in		970300						
ANR	970757	Symbol	* i		970300						
ANR	970758	Symbol	r_flag_space_get		970300						
ANR	970759	Symbol	size		970300						
ANR	970760	Symbol	* j		970300						
ANR	970761	Symbol	u		970300						
ANR	970762	Symbol	fcn -> bbs		970300						
ANR	970763	Symbol	as -> block [ i ] . comments		970300						
ANR	970764	Symbol	* as		970300						
ANR	970765	Symbol	count_pzf		970300						
ANR	970766	Symbol	& u		970300						
ANR	970767	Symbol	user		970300						
ANR	970768	Symbol	r_list_length		970300						
ANR	970769	Function	r_core_print_cmp	2151:0:67536:67946							
ANR	970770	FunctionDef	"r_core_print_cmp (RCore * core , ut64 from , ut64 to)"		970769	0					
ANR	970771	CompoundStatement		2151:61:67597:67946	970769	0					
ANR	970772	IdentifierDeclStatement	long int delta = 0 ;	2152:1:67600:67618	970769	0	True				
ANR	970773	IdentifierDecl	delta = 0		970769	0					
ANR	970774	IdentifierDeclType	long int		970769	0					
ANR	970775	Identifier	delta		970769	1					
ANR	970776	AssignmentExpression	delta = 0		970769	2		=			
ANR	970777	Identifier	delta		970769	0					
ANR	970778	PrimaryExpression	0		970769	1					
ANR	970779	IdentifierDeclStatement	int col = core -> cons -> columns > 123 ;	2153:1:67621:67656	970769	1	True				
ANR	970780	IdentifierDecl	col = core -> cons -> columns > 123		970769	0					
ANR	970781	IdentifierDeclType	int		970769	0					
ANR	970782	Identifier	col		970769	1					
ANR	970783	AssignmentExpression	col = core -> cons -> columns > 123		970769	2		=			
ANR	970784	Identifier	col		970769	0					
ANR	970785	RelationalExpression	core -> cons -> columns > 123		970769	1		>			
ANR	970786	PtrMemberAccess	core -> cons -> columns		970769	0					
ANR	970787	PtrMemberAccess	core -> cons		970769	0					
ANR	970788	Identifier	core		970769	0					
ANR	970789	Identifier	cons		970769	1					
ANR	970790	Identifier	columns		970769	1					
ANR	970791	PrimaryExpression	123		970769	1					
ANR	970792	IdentifierDeclStatement	ut8 * b = malloc ( core -> blocksize ) ;	2154:1:67659:67692	970769	2	True				
ANR	970793	IdentifierDecl	* b = malloc ( core -> blocksize )		970769	0					
ANR	970794	IdentifierDeclType	ut8 *		970769	0					
ANR	970795	Identifier	b		970769	1					
ANR	970796	AssignmentExpression	* b = malloc ( core -> blocksize )		970769	2		=			
ANR	970797	Identifier	b		970769	0					
ANR	970798	CallExpression	malloc ( core -> blocksize )		970769	1					
ANR	970799	Callee	malloc		970769	0					
ANR	970800	Identifier	malloc		970769	0					
ANR	970801	ArgumentList	core -> blocksize		970769	1					
ANR	970802	Argument	core -> blocksize		970769	0					
ANR	970803	PtrMemberAccess	core -> blocksize		970769	0					
ANR	970804	Identifier	core		970769	0					
ANR	970805	Identifier	blocksize		970769	1					
ANR	970806	IdentifierDeclStatement	ut64 addr = core -> offset ;	2155:1:67695:67719	970769	3	True				
ANR	970807	IdentifierDecl	addr = core -> offset		970769	0					
ANR	970808	IdentifierDeclType	ut64		970769	0					
ANR	970809	Identifier	addr		970769	1					
ANR	970810	AssignmentExpression	addr = core -> offset		970769	2		=			
ANR	970811	Identifier	addr		970769	0					
ANR	970812	PtrMemberAccess	core -> offset		970769	1					
ANR	970813	Identifier	core		970769	0					
ANR	970814	Identifier	offset		970769	1					
ANR	970815	ExpressionStatement	"memset ( b , 0xff , core -> blocksize )"	2156:1:67722:67755	970769	4	True				
ANR	970816	CallExpression	"memset ( b , 0xff , core -> blocksize )"		970769	0					
ANR	970817	Callee	memset		970769	0					
ANR	970818	Identifier	memset		970769	0					
ANR	970819	ArgumentList	b		970769	1					
ANR	970820	Argument	b		970769	0					
ANR	970821	Identifier	b		970769	0					
ANR	970822	Argument	0xff		970769	1					
ANR	970823	PrimaryExpression	0xff		970769	0					
ANR	970824	Argument	core -> blocksize		970769	2					
ANR	970825	PtrMemberAccess	core -> blocksize		970769	0					
ANR	970826	Identifier	core		970769	0					
ANR	970827	Identifier	blocksize		970769	1					
ANR	970828	ExpressionStatement	delta = addr - from	2157:1:67758:67777	970769	5	True				
ANR	970829	AssignmentExpression	delta = addr - from		970769	0		=			
ANR	970830	Identifier	delta		970769	0					
ANR	970831	AdditiveExpression	addr - from		970769	1		-			
ANR	970832	Identifier	addr		970769	0					
ANR	970833	Identifier	from		970769	1					
ANR	970834	ExpressionStatement	"r_io_read_at ( core -> io , to + delta , b , core -> blocksize )"	2158:1:67780:67835	970769	6	True				
ANR	970835	CallExpression	"r_io_read_at ( core -> io , to + delta , b , core -> blocksize )"		970769	0					
ANR	970836	Callee	r_io_read_at		970769	0					
ANR	970837	Identifier	r_io_read_at		970769	0					
ANR	970838	ArgumentList	core -> io		970769	1					
ANR	970839	Argument	core -> io		970769	0					
ANR	970840	PtrMemberAccess	core -> io		970769	0					
ANR	970841	Identifier	core		970769	0					
ANR	970842	Identifier	io		970769	1					
ANR	970843	Argument	to + delta		970769	1					
ANR	970844	AdditiveExpression	to + delta		970769	0		+			
ANR	970845	Identifier	to		970769	0					
ANR	970846	Identifier	delta		970769	1					
ANR	970847	Argument	b		970769	2					
ANR	970848	Identifier	b		970769	0					
ANR	970849	Argument	core -> blocksize		970769	3					
ANR	970850	PtrMemberAccess	core -> blocksize		970769	0					
ANR	970851	Identifier	core		970769	0					
ANR	970852	Identifier	blocksize		970769	1					
ANR	970853	ExpressionStatement	"r_print_hexdiff ( core -> print , core -> offset , core -> block , to + delta , b , core -> blocksize , col )"	2159:1:67838:67933	970769	7	True				
ANR	970854	CallExpression	"r_print_hexdiff ( core -> print , core -> offset , core -> block , to + delta , b , core -> blocksize , col )"		970769	0					
ANR	970855	Callee	r_print_hexdiff		970769	0					
ANR	970856	Identifier	r_print_hexdiff		970769	0					
ANR	970857	ArgumentList	core -> print		970769	1					
ANR	970858	Argument	core -> print		970769	0					
ANR	970859	PtrMemberAccess	core -> print		970769	0					
ANR	970860	Identifier	core		970769	0					
ANR	970861	Identifier	print		970769	1					
ANR	970862	Argument	core -> offset		970769	1					
ANR	970863	PtrMemberAccess	core -> offset		970769	0					
ANR	970864	Identifier	core		970769	0					
ANR	970865	Identifier	offset		970769	1					
ANR	970866	Argument	core -> block		970769	2					
ANR	970867	PtrMemberAccess	core -> block		970769	0					
ANR	970868	Identifier	core		970769	0					
ANR	970869	Identifier	block		970769	1					
ANR	970870	Argument	to + delta		970769	3					
ANR	970871	AdditiveExpression	to + delta		970769	0		+			
ANR	970872	Identifier	to		970769	0					
ANR	970873	Identifier	delta		970769	1					
ANR	970874	Argument	b		970769	4					
ANR	970875	Identifier	b		970769	0					
ANR	970876	Argument	core -> blocksize		970769	5					
ANR	970877	PtrMemberAccess	core -> blocksize		970769	0					
ANR	970878	Identifier	core		970769	0					
ANR	970879	Identifier	blocksize		970769	1					
ANR	970880	Argument	col		970769	6					
ANR	970881	Identifier	col		970769	0					
ANR	970882	ExpressionStatement	free ( b )	2161:1:67936:67944	970769	8	True				
ANR	970883	CallExpression	free ( b )		970769	0					
ANR	970884	Callee	free		970769	0					
ANR	970885	Identifier	free		970769	0					
ANR	970886	ArgumentList	b		970769	1					
ANR	970887	Argument	b		970769	0					
ANR	970888	Identifier	b		970769	0					
ANR	970889	ReturnType	R_API void		970769	1					
ANR	970890	Identifier	r_core_print_cmp		970769	2					
ANR	970891	ParameterList	"RCore * core , ut64 from , ut64 to"		970769	3					
ANR	970892	Parameter	RCore * core	2151:28:67564:67574	970769	0	True				
ANR	970893	ParameterType	RCore *		970769	0					
ANR	970894	Identifier	core		970769	1					
ANR	970895	Parameter	ut64 from	2151:41:67577:67585	970769	1	True				
ANR	970896	ParameterType	ut64		970769	0					
ANR	970897	Identifier	from		970769	1					
ANR	970898	Parameter	ut64 to	2151:52:67588:67594	970769	2	True				
ANR	970899	ParameterType	ut64		970769	0					
ANR	970900	Identifier	to		970769	1					
ANR	970901	CFGEntryNode	ENTRY		970769		True				
ANR	970902	CFGExitNode	EXIT		970769		True				
ANR	970903	Symbol	core -> blocksize		970769						
ANR	970904	Symbol	col		970769						
ANR	970905	Symbol	malloc		970769						
ANR	970906	Symbol	b		970769						
ANR	970907	Symbol	core -> block		970769						
ANR	970908	Symbol	* core -> cons		970769						
ANR	970909	Symbol	delta		970769						
ANR	970910	Symbol	* core		970769						
ANR	970911	Symbol	core -> offset		970769						
ANR	970912	Symbol	core -> cons -> columns		970769						
ANR	970913	Symbol	core		970769						
ANR	970914	Symbol	core -> cons		970769						
ANR	970915	Symbol	core -> io		970769						
ANR	970916	Symbol	from		970769						
ANR	970917	Symbol	to		970769						
ANR	970918	Symbol	addr		970769						
ANR	970919	Symbol	core -> print		970769						
ANR	970920	Symbol	* * core		970769						
ANR	970921	Function	cmd_print_pwn	2164:0:67949:68049							
ANR	970922	FunctionDef	cmd_print_pwn (const RCore * core)		970921	0					
ANR	970923	CompoundStatement		2164:45:67994:68049	970921	0					
ANR	970924	ExpressionStatement	"r_cons_printf ( ""easter egg license has expired\\n"" )"	2165:1:67997:68047	970921	0	True				
ANR	970925	CallExpression	"r_cons_printf ( ""easter egg license has expired\\n"" )"		970921	0					
ANR	970926	Callee	r_cons_printf		970921	0					
ANR	970927	Identifier	r_cons_printf		970921	0					
ANR	970928	ArgumentList	"""easter egg license has expired\\n"""		970921	1					
ANR	970929	Argument	"""easter egg license has expired\\n"""		970921	0					
ANR	970930	PrimaryExpression	"""easter egg license has expired\\n"""		970921	0					
ANR	970931	ReturnType	static void		970921	1					
ANR	970932	Identifier	cmd_print_pwn		970921	2					
ANR	970933	ParameterList	const RCore * core		970921	3					
ANR	970934	Parameter	const RCore * core	2164:26:67975:67991	970921	0	True				
ANR	970935	ParameterType	const RCore *		970921	0					
ANR	970936	Identifier	core		970921	1					
ANR	970937	CFGEntryNode	ENTRY		970921		True				
ANR	970938	CFGExitNode	EXIT		970921		True				
ANR	970939	Symbol	core		970921						
ANR	970940	Function	cmd_print_pxA	2168:0:68052:74349							
ANR	970941	FunctionDef	"cmd_print_pxA (RCore * core , int len , const char * input)"		970940	0					
ANR	970942	CompoundStatement		2168:66:68118:74349	970940	0					
ANR	970943	IdentifierDeclStatement	RConsPrintablePalette * pal = & core -> cons -> context -> pal ;	2169:1:68121:68175	970940	0	True				
ANR	970944	IdentifierDecl	* pal = & core -> cons -> context -> pal		970940	0					
ANR	970945	IdentifierDeclType	RConsPrintablePalette *		970940	0					
ANR	970946	Identifier	pal		970940	1					
ANR	970947	AssignmentExpression	* pal = & core -> cons -> context -> pal		970940	2		=			
ANR	970948	Identifier	pal		970940	0					
ANR	970949	UnaryOperationExpression	& core -> cons -> context -> pal		970940	1					
ANR	970950	UnaryOperator	&		970940	0					
ANR	970951	PtrMemberAccess	core -> cons -> context -> pal		970940	1					
ANR	970952	PtrMemberAccess	core -> cons -> context		970940	0					
ANR	970953	PtrMemberAccess	core -> cons		970940	0					
ANR	970954	Identifier	core		970940	0					
ANR	970955	Identifier	cons		970940	1					
ANR	970956	Identifier	context		970940	1					
ANR	970957	Identifier	pal		970940	1					
ANR	970958	IdentifierDeclStatement	int show_offset = true ;	2170:1:68178:68200	970940	1	True				
ANR	970959	IdentifierDecl	show_offset = true		970940	0					
ANR	970960	IdentifierDeclType	int		970940	0					
ANR	970961	Identifier	show_offset		970940	1					
ANR	970962	AssignmentExpression	show_offset = true		970940	2		=			
ANR	970963	Identifier	true		970940	0					
ANR	970964	Identifier	true		970940	1					
ANR	970965	IdentifierDeclStatement	"int cols = r_config_get_i ( core -> config , ""hex.cols"" ) ;"	2171:1:68203:68255	970940	2	True				
ANR	970966	IdentifierDecl	"cols = r_config_get_i ( core -> config , ""hex.cols"" )"		970940	0					
ANR	970967	IdentifierDeclType	int		970940	0					
ANR	970968	Identifier	cols		970940	1					
ANR	970969	AssignmentExpression	"cols = r_config_get_i ( core -> config , ""hex.cols"" )"		970940	2		=			
ANR	970970	Identifier	cols		970940	0					
ANR	970971	CallExpression	"r_config_get_i ( core -> config , ""hex.cols"" )"		970940	1					
ANR	970972	Callee	r_config_get_i		970940	0					
ANR	970973	Identifier	r_config_get_i		970940	0					
ANR	970974	ArgumentList	core -> config		970940	1					
ANR	970975	Argument	core -> config		970940	0					
ANR	970976	PtrMemberAccess	core -> config		970940	0					
ANR	970977	Identifier	core		970940	0					
ANR	970978	Identifier	config		970940	1					
ANR	970979	Argument	"""hex.cols"""		970940	1					
ANR	970980	PrimaryExpression	"""hex.cols"""		970940	0					
ANR	970981	IdentifierDeclStatement	"int show_color = r_config_get_i ( core -> config , ""scr.color"" ) ;"	2172:1:68258:68317	970940	3	True				
ANR	970982	IdentifierDecl	"show_color = r_config_get_i ( core -> config , ""scr.color"" )"		970940	0					
ANR	970983	IdentifierDeclType	int		970940	0					
ANR	970984	Identifier	show_color		970940	1					
ANR	970985	AssignmentExpression	"show_color = r_config_get_i ( core -> config , ""scr.color"" )"		970940	2		=			
ANR	970986	Identifier	show_color		970940	0					
ANR	970987	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		970940	1					
ANR	970988	Callee	r_config_get_i		970940	0					
ANR	970989	Identifier	r_config_get_i		970940	0					
ANR	970990	ArgumentList	core -> config		970940	1					
ANR	970991	Argument	core -> config		970940	0					
ANR	970992	PtrMemberAccess	core -> config		970940	0					
ANR	970993	Identifier	core		970940	0					
ANR	970994	Identifier	config		970940	1					
ANR	970995	Argument	"""scr.color"""		970940	1					
ANR	970996	PrimaryExpression	"""scr.color"""		970940	0					
ANR	970997	IdentifierDeclStatement	"int onechar = r_config_get_i ( core -> config , ""hex.onechar"" ) ;"	2173:1:68320:68378	970940	4	True				
ANR	970998	IdentifierDecl	"onechar = r_config_get_i ( core -> config , ""hex.onechar"" )"		970940	0					
ANR	970999	IdentifierDeclType	int		970940	0					
ANR	971000	Identifier	onechar		970940	1					
ANR	971001	AssignmentExpression	"onechar = r_config_get_i ( core -> config , ""hex.onechar"" )"		970940	2		=			
ANR	971002	Identifier	onechar		970940	0					
ANR	971003	CallExpression	"r_config_get_i ( core -> config , ""hex.onechar"" )"		970940	1					
ANR	971004	Callee	r_config_get_i		970940	0					
ANR	971005	Identifier	r_config_get_i		970940	0					
ANR	971006	ArgumentList	core -> config		970940	1					
ANR	971007	Argument	core -> config		970940	0					
ANR	971008	PtrMemberAccess	core -> config		970940	0					
ANR	971009	Identifier	core		970940	0					
ANR	971010	Identifier	config		970940	1					
ANR	971011	Argument	"""hex.onechar"""		970940	1					
ANR	971012	PrimaryExpression	"""hex.onechar"""		970940	0					
ANR	971013	IdentifierDeclStatement	int bgcolor_in_heap = false ;	2174:1:68381:68408	970940	5	True				
ANR	971014	IdentifierDecl	bgcolor_in_heap = false		970940	0					
ANR	971015	IdentifierDeclType	int		970940	0					
ANR	971016	Identifier	bgcolor_in_heap		970940	1					
ANR	971017	AssignmentExpression	bgcolor_in_heap = false		970940	2		=			
ANR	971018	Identifier	false		970940	0					
ANR	971019	Identifier	false		970940	1					
ANR	971020	IdentifierDeclStatement	bool show_cursor = core -> print -> cur_enabled ;	2175:1:68411:68454	970940	6	True				
ANR	971021	IdentifierDecl	show_cursor = core -> print -> cur_enabled		970940	0					
ANR	971022	IdentifierDeclType	bool		970940	0					
ANR	971023	Identifier	show_cursor		970940	1					
ANR	971024	AssignmentExpression	show_cursor = core -> print -> cur_enabled		970940	2		=			
ANR	971025	Identifier	show_cursor		970940	0					
ANR	971026	PtrMemberAccess	core -> print -> cur_enabled		970940	1					
ANR	971027	PtrMemberAccess	core -> print		970940	0					
ANR	971028	Identifier	core		970940	0					
ANR	971029	Identifier	print		970940	1					
ANR	971030	Identifier	cur_enabled		970940	1					
ANR	971031	IdentifierDeclStatement	char buf [ 2 ] ;	2176:1:68457:68468	970940	7	True				
ANR	971032	IdentifierDecl	buf [ 2 ]		970940	0					
ANR	971033	IdentifierDeclType	char [ 2 ]		970940	0					
ANR	971034	Identifier	buf		970940	1					
ANR	971035	PrimaryExpression	2		970940	2					
ANR	971036	IdentifierDeclStatement	"char * bgcolor , * fgcolor , * text ;"	2177:1:68471:68501	970940	8	True				
ANR	971037	IdentifierDecl	* bgcolor		970940	0					
ANR	971038	IdentifierDeclType	char *		970940	0					
ANR	971039	Identifier	bgcolor		970940	1					
ANR	971040	IdentifierDecl	* fgcolor		970940	1					
ANR	971041	IdentifierDeclType	char *		970940	0					
ANR	971042	Identifier	fgcolor		970940	1					
ANR	971043	IdentifierDecl	* text		970940	2					
ANR	971044	IdentifierDeclType	char *		970940	0					
ANR	971045	Identifier	text		970940	1					
ANR	971046	IdentifierDeclStatement	"ut64 i , c , oi ;"	2178:1:68504:68517	970940	9	True				
ANR	971047	IdentifierDecl	i		970940	0					
ANR	971048	IdentifierDeclType	ut64		970940	0					
ANR	971049	Identifier	i		970940	1					
ANR	971050	IdentifierDecl	c		970940	1					
ANR	971051	IdentifierDeclType	ut64		970940	0					
ANR	971052	Identifier	c		970940	1					
ANR	971053	IdentifierDecl	oi		970940	2					
ANR	971054	IdentifierDeclType	ut64		970940	0					
ANR	971055	Identifier	oi		970940	1					
ANR	971056	IdentifierDeclStatement	RAnalOp op ;	2179:1:68520:68530	970940	10	True				
ANR	971057	IdentifierDecl	op		970940	0					
ANR	971058	IdentifierDeclType	RAnalOp		970940	0					
ANR	971059	Identifier	op		970940	1					
ANR	971060	IdentifierDeclStatement	ut8 * data ;	2180:1:68533:68542	970940	11	True				
ANR	971061	IdentifierDecl	* data		970940	0					
ANR	971062	IdentifierDeclType	ut8 *		970940	0					
ANR	971063	Identifier	data		970940	1					
ANR	971064	IdentifierDeclStatement	int datalen ;	2181:1:68545:68556	970940	12	True				
ANR	971065	IdentifierDecl	datalen		970940	0					
ANR	971066	IdentifierDeclType	int		970940	0					
ANR	971067	Identifier	datalen		970940	1					
ANR	971068	IfStatement	if ( * input == 'v' )		970940	13					
ANR	971069	Condition	* input == 'v'	2182:5:68563:68575	970940	0	True				
ANR	971070	EqualityExpression	* input == 'v'		970940	0		==			
ANR	971071	UnaryOperationExpression	* input		970940	0					
ANR	971072	UnaryOperator	*		970940	0					
ANR	971073	Identifier	input		970940	1					
ANR	971074	PrimaryExpression	'v'		970940	1					
ANR	971075	CompoundStatement		15:20:459:459	970940	1					
ANR	971076	ExpressionStatement	datalen = cols * 8 * core -> cons -> rows	2183:2:68582:68619	970940	0	True				
ANR	971077	AssignmentExpression	datalen = cols * 8 * core -> cons -> rows		970940	0		=			
ANR	971078	Identifier	datalen		970940	0					
ANR	971079	MultiplicativeExpression	cols * 8 * core -> cons -> rows		970940	1		*			
ANR	971080	Identifier	cols		970940	0					
ANR	971081	MultiplicativeExpression	8 * core -> cons -> rows		970940	1		*			
ANR	971082	PrimaryExpression	8		970940	0					
ANR	971083	PtrMemberAccess	core -> cons -> rows		970940	1					
ANR	971084	PtrMemberAccess	core -> cons		970940	0					
ANR	971085	Identifier	core		970940	0					
ANR	971086	Identifier	cons		970940	1					
ANR	971087	Identifier	rows		970940	1					
ANR	971088	ExpressionStatement	data = malloc ( datalen )	2184:2:68623:68646	970940	1	True				
ANR	971089	AssignmentExpression	data = malloc ( datalen )		970940	0		=			
ANR	971090	Identifier	data		970940	0					
ANR	971091	CallExpression	malloc ( datalen )		970940	1					
ANR	971092	Callee	malloc		970940	0					
ANR	971093	Identifier	malloc		970940	0					
ANR	971094	ArgumentList	datalen		970940	1					
ANR	971095	Argument	datalen		970940	0					
ANR	971096	Identifier	datalen		970940	0					
ANR	971097	ExpressionStatement	"r_io_read_at ( core -> io , core -> offset , data , datalen )"	2185:2:68650:68702	970940	2	True				
ANR	971098	CallExpression	"r_io_read_at ( core -> io , core -> offset , data , datalen )"		970940	0					
ANR	971099	Callee	r_io_read_at		970940	0					
ANR	971100	Identifier	r_io_read_at		970940	0					
ANR	971101	ArgumentList	core -> io		970940	1					
ANR	971102	Argument	core -> io		970940	0					
ANR	971103	PtrMemberAccess	core -> io		970940	0					
ANR	971104	Identifier	core		970940	0					
ANR	971105	Identifier	io		970940	1					
ANR	971106	Argument	core -> offset		970940	1					
ANR	971107	PtrMemberAccess	core -> offset		970940	0					
ANR	971108	Identifier	core		970940	0					
ANR	971109	Identifier	offset		970940	1					
ANR	971110	Argument	data		970940	2					
ANR	971111	Identifier	data		970940	0					
ANR	971112	Argument	datalen		970940	3					
ANR	971113	Identifier	datalen		970940	0					
ANR	971114	ExpressionStatement	len = datalen	2186:2:68706:68719	970940	3	True				
ANR	971115	AssignmentExpression	len = datalen		970940	0		=			
ANR	971116	Identifier	len		970940	0					
ANR	971117	Identifier	datalen		970940	1					
ANR	971118	ElseStatement	else		970940	0					
ANR	971119	CompoundStatement		20:8:610:610	970940	0					
ANR	971120	ExpressionStatement	data = core -> block	2188:2:68733:68751	970940	0	True				
ANR	971121	AssignmentExpression	data = core -> block		970940	0		=			
ANR	971122	Identifier	data		970940	0					
ANR	971123	PtrMemberAccess	core -> block		970940	1					
ANR	971124	Identifier	core		970940	0					
ANR	971125	Identifier	block		970940	1					
ANR	971126	ExpressionStatement	datalen = core -> blocksize	2189:2:68755:68780	970940	1	True				
ANR	971127	AssignmentExpression	datalen = core -> blocksize		970940	0		=			
ANR	971128	Identifier	datalen		970940	0					
ANR	971129	PtrMemberAccess	core -> blocksize		970940	1					
ANR	971130	Identifier	core		970940	0					
ANR	971131	Identifier	blocksize		970940	1					
ANR	971132	IfStatement	if ( len < 1 )		970940	14					
ANR	971133	Condition	len < 1	2191:5:68790:68796	970940	0	True				
ANR	971134	RelationalExpression	len < 1		970940	0		<			
ANR	971135	Identifier	len		970940	0					
ANR	971136	PrimaryExpression	1		970940	1					
ANR	971137	CompoundStatement		24:14:680:680	970940	1					
ANR	971138	ExpressionStatement	len = datalen	2192:2:68803:68816	970940	0	True				
ANR	971139	AssignmentExpression	len = datalen		970940	0		=			
ANR	971140	Identifier	len		970940	0					
ANR	971141	Identifier	datalen		970940	1					
ANR	971142	IfStatement	if ( len < 0 || len > datalen )		970940	15					
ANR	971143	Condition	len < 0 || len > datalen	2194:5:68826:68849	970940	0	True				
ANR	971144	OrExpression	len < 0 || len > datalen		970940	0		||			
ANR	971145	RelationalExpression	len < 0		970940	0		<			
ANR	971146	Identifier	len		970940	0					
ANR	971147	PrimaryExpression	0		970940	1					
ANR	971148	RelationalExpression	len > datalen		970940	1		>			
ANR	971149	Identifier	len		970940	0					
ANR	971150	Identifier	datalen		970940	1					
ANR	971151	CompoundStatement		27:31:733:733	970940	1					
ANR	971152	ExpressionStatement	"eprintf ( ""Invalid length\\n"" )"	2195:2:68856:68884	970940	0	True				
ANR	971153	CallExpression	"eprintf ( ""Invalid length\\n"" )"		970940	0					
ANR	971154	Callee	eprintf		970940	0					
ANR	971155	Identifier	eprintf		970940	0					
ANR	971156	ArgumentList	"""Invalid length\\n"""		970940	1					
ANR	971157	Argument	"""Invalid length\\n"""		970940	0					
ANR	971158	PrimaryExpression	"""Invalid length\\n"""		970940	0					
ANR	971159	ReturnStatement	return 0 ;	2196:2:68888:68896	970940	1	True				
ANR	971160	PrimaryExpression	0		970940	0					
ANR	971161	IfStatement	if ( onechar )		970940	16					
ANR	971162	Condition	onechar	2198:5:68906:68912	970940	0	True				
ANR	971163	Identifier	onechar		970940	0					
ANR	971164	CompoundStatement		31:14:796:796	970940	1					
ANR	971165	ExpressionStatement	cols *= 4	2199:2:68919:68928	970940	0	True				
ANR	971166	AssignmentExpression	cols *= 4		970940	0		*=			
ANR	971167	Identifier	cols		970940	0					
ANR	971168	PrimaryExpression	4		970940	1					
ANR	971169	ElseStatement	else		970940	0					
ANR	971170	CompoundStatement		33:8:819:819	970940	0					
ANR	971171	ExpressionStatement	cols *= 2	2201:2:68942:68951	970940	0	True				
ANR	971172	AssignmentExpression	cols *= 2		970940	0		*=			
ANR	971173	Identifier	cols		970940	0					
ANR	971174	PrimaryExpression	2		970940	1					
ANR	971175	IfStatement	if ( show_offset )		970940	17					
ANR	971176	Condition	show_offset	2203:5:68961:68971	970940	0	True				
ANR	971177	Identifier	show_offset		970940	0					
ANR	971178	CompoundStatement		37:2:859:875	970940	1					
ANR	971179	IdentifierDeclStatement	char offstr [ 128 ] ;	2204:2:68978:68994	970940	0	True				
ANR	971180	IdentifierDecl	offstr [ 128 ]		970940	0					
ANR	971181	IdentifierDeclType	char [ 128 ]		970940	0					
ANR	971182	Identifier	offstr		970940	1					
ANR	971183	PrimaryExpression	128		970940	2					
ANR	971184	Statement	snprintf	2205:2:68998:69005	970940	1	True				
ANR	971185	Statement	(	2205:11:69007:69007	970940	2	True				
ANR	971186	Statement	offstr	2205:12:69008:69013	970940	3	True				
ANR	971187	Statement	","	2205:18:69014:69014	970940	4	True				
ANR	971188	Statement	sizeof	2205:20:69016:69021	970940	5	True				
ANR	971189	Statement	(	2205:27:69023:69023	970940	6	True				
ANR	971190	Statement	offstr	2205:28:69024:69029	970940	7	True				
ANR	971191	Statement	)	2205:34:69030:69030	970940	8	True				
ANR	971192	Statement	","	2205:35:69031:69031	970940	9	True				
ANR	971193	Statement	"""0x%08"""	2206:3:69036:69042	970940	10	True				
ANR	971194	Statement	PFMT64x	2206:10:69043:69049	970940	11	True				
ANR	971195	Statement	"""  """	2206:18:69051:69054	970940	12	True				
ANR	971196	Statement	","	2206:22:69055:69055	970940	13	True				
ANR	971197	Statement	core	2206:24:69057:69060	970940	14	True				
ANR	971198	Statement	->	2206:28:69061:69062	970940	15	True				
ANR	971199	Statement	offset	2206:30:69063:69068	970940	16	True				
ANR	971200	Statement	)	2206:36:69069:69069	970940	17	True				
ANR	971201	ExpressionStatement		2206:37:69070:69070	970940	18	True				
ANR	971202	IfStatement	if ( strlen ( offstr ) > 12 )		970940	19					
ANR	971203	Condition	strlen ( offstr ) > 12	2207:6:69078:69097	970940	0	True				
ANR	971204	RelationalExpression	strlen ( offstr ) > 12		970940	0		>			
ANR	971205	CallExpression	strlen ( offstr )		970940	0					
ANR	971206	Callee	strlen		970940	0					
ANR	971207	Identifier	strlen		970940	0					
ANR	971208	ArgumentList	offstr		970940	1					
ANR	971209	Argument	offstr		970940	0					
ANR	971210	Identifier	offstr		970940	0					
ANR	971211	PrimaryExpression	12		970940	1					
ANR	971212	CompoundStatement		40:28:981:981	970940	1					
ANR	971213	ExpressionStatement	cols -= ( ( strlen ( offstr ) - 12 ) * 2 )	2208:3:69105:69141	970940	0	True				
ANR	971214	AssignmentExpression	cols -= ( ( strlen ( offstr ) - 12 ) * 2 )		970940	0		-=			
ANR	971215	Identifier	cols		970940	0					
ANR	971216	MultiplicativeExpression	( strlen ( offstr ) - 12 ) * 2		970940	1		*			
ANR	971217	AdditiveExpression	strlen ( offstr ) - 12		970940	0		-			
ANR	971218	CallExpression	strlen ( offstr )		970940	0					
ANR	971219	Callee	strlen		970940	0					
ANR	971220	Identifier	strlen		970940	0					
ANR	971221	ArgumentList	offstr		970940	1					
ANR	971222	Argument	offstr		970940	0					
ANR	971223	Identifier	offstr		970940	0					
ANR	971224	PrimaryExpression	12		970940	1					
ANR	971225	PrimaryExpression	2		970940	1					
ANR	971226	ForStatement	for ( oi = i = c = 0 ; i < len ; c ++ )		970940	18					
ANR	971227	ForInit	oi = i = c = 0 ;	2211:6:69156:69170	970940	0	True				
ANR	971228	AssignmentExpression	oi = i = c = 0		970940	0		=			
ANR	971229	Identifier	oi		970940	0					
ANR	971230	AssignmentExpression	i = c = 0		970940	1		=			
ANR	971231	Identifier	i		970940	0					
ANR	971232	AssignmentExpression	c = 0		970940	1		=			
ANR	971233	Identifier	c		970940	0					
ANR	971234	PrimaryExpression	0		970940	1					
ANR	971235	Condition	i < len	2211:22:69172:69178	970940	1	True				
ANR	971236	RelationalExpression	i < len		970940	0		<			
ANR	971237	Identifier	i		970940	0					
ANR	971238	Identifier	len		970940	1					
ANR	971239	PostIncDecOperationExpression	c ++	2211:31:69181:69183	970940	2	True				
ANR	971240	Identifier	c		970940	0					
ANR	971241	IncDec	++		970940	1					
ANR	971242	CompoundStatement		219:2:5355:5384	970940	3					
ANR	971243	IfStatement	if ( i && ( cols != 0 ) && ! ( c % cols ) )		970940	0					
ANR	971244	Condition	i && ( cols != 0 ) && ! ( c % cols )	2212:6:69194:69224	970940	0	True				
ANR	971245	AndExpression	i && ( cols != 0 ) && ! ( c % cols )		970940	0		&&			
ANR	971246	Identifier	i		970940	0					
ANR	971247	AndExpression	( cols != 0 ) && ! ( c % cols )		970940	1		&&			
ANR	971248	EqualityExpression	cols != 0		970940	0		!=			
ANR	971249	Identifier	cols		970940	0					
ANR	971250	PrimaryExpression	0		970940	1					
ANR	971251	UnaryOperationExpression	! ( c % cols )		970940	1					
ANR	971252	UnaryOperator	!		970940	0					
ANR	971253	MultiplicativeExpression	c % cols		970940	1		%			
ANR	971254	Identifier	c		970940	0					
ANR	971255	Identifier	cols		970940	1					
ANR	971256	CompoundStatement		45:39:1108:1108	970940	1					
ANR	971257	ExpressionStatement	show_offset = true	2213:3:69232:69250	970940	0	True				
ANR	971258	AssignmentExpression	show_offset = true		970940	0		=			
ANR	971259	Identifier	show_offset		970940	0					
ANR	971260	Identifier	true		970940	1					
ANR	971261	ExpressionStatement	"r_cons_printf ( ""  %d\\n"" , i - oi )"	2214:3:69255:69287	970940	1	True				
ANR	971262	CallExpression	"r_cons_printf ( ""  %d\\n"" , i - oi )"		970940	0					
ANR	971263	Callee	r_cons_printf		970940	0					
ANR	971264	Identifier	r_cons_printf		970940	0					
ANR	971265	ArgumentList	"""  %d\\n"""		970940	1					
ANR	971266	Argument	"""  %d\\n"""		970940	0					
ANR	971267	PrimaryExpression	"""  %d\\n"""		970940	0					
ANR	971268	Argument	i - oi		970940	1					
ANR	971269	AdditiveExpression	i - oi		970940	0		-			
ANR	971270	Identifier	i		970940	0					
ANR	971271	Identifier	oi		970940	1					
ANR	971272	ExpressionStatement	oi = i	2215:3:69292:69298	970940	2	True				
ANR	971273	AssignmentExpression	oi = i		970940	0		=			
ANR	971274	Identifier	oi		970940	0					
ANR	971275	Identifier	i		970940	1					
ANR	971276	IfStatement	if ( show_offset )		970940	1					
ANR	971277	Condition	show_offset	2217:6:69310:69320	970940	0	True				
ANR	971278	Identifier	show_offset		970940	0					
ANR	971279	CompoundStatement		50:19:1204:1204	970940	1					
ANR	971280	Statement	r_cons_printf	2218:3:69328:69340	970940	0	True				
ANR	971281	Statement	(	2218:17:69342:69342	970940	1	True				
ANR	971282	Statement	"""0x%08"""	2218:18:69343:69349	970940	2	True				
ANR	971283	Statement	PFMT64x	2218:25:69350:69356	970940	3	True				
ANR	971284	Statement	"""  """	2218:33:69358:69361	970940	4	True				
ANR	971285	Statement	","	2218:37:69362:69362	970940	5	True				
ANR	971286	Statement	core	2218:39:69364:69367	970940	6	True				
ANR	971287	Statement	->	2218:43:69368:69369	970940	7	True				
ANR	971288	Statement	offset	2218:45:69370:69375	970940	8	True				
ANR	971289	Statement	+	2218:52:69377:69377	970940	9	True				
ANR	971290	Statement	i	2218:54:69379:69379	970940	10	True				
ANR	971291	Statement	)	2218:55:69380:69380	970940	11	True				
ANR	971292	ExpressionStatement		2218:56:69381:69381	970940	12	True				
ANR	971293	ExpressionStatement	show_offset = false	2219:3:69386:69405	970940	13	True				
ANR	971294	AssignmentExpression	show_offset = false		970940	0		=			
ANR	971295	Identifier	show_offset		970940	0					
ANR	971296	Identifier	false		970940	1					
ANR	971297	IfStatement	if ( bgcolor_in_heap )		970940	2					
ANR	971298	Condition	bgcolor_in_heap	2221:6:69417:69431	970940	0	True				
ANR	971299	Identifier	bgcolor_in_heap		970940	0					
ANR	971300	CompoundStatement		54:23:1315:1315	970940	1					
ANR	971301	ExpressionStatement	free ( bgcolor )	2222:3:69439:69453	970940	0	True				
ANR	971302	CallExpression	free ( bgcolor )		970940	0					
ANR	971303	Callee	free		970940	0					
ANR	971304	Identifier	free		970940	0					
ANR	971305	ArgumentList	bgcolor		970940	1					
ANR	971306	Argument	bgcolor		970940	0					
ANR	971307	Identifier	bgcolor		970940	0					
ANR	971308	ExpressionStatement	bgcolor_in_heap = false	2223:3:69458:69481	970940	1	True				
ANR	971309	AssignmentExpression	bgcolor_in_heap = false		970940	0		=			
ANR	971310	Identifier	bgcolor_in_heap		970940	0					
ANR	971311	Identifier	false		970940	1					
ANR	971312	ExpressionStatement	bgcolor = Color_BGBLACK	2225:2:69489:69512	970940	3	True				
ANR	971313	AssignmentExpression	bgcolor = Color_BGBLACK		970940	0		=			
ANR	971314	Identifier	bgcolor		970940	0					
ANR	971315	Identifier	Color_BGBLACK		970940	1					
ANR	971316	ExpressionStatement	fgcolor = Color_WHITE	2226:2:69516:69537	970940	4	True				
ANR	971317	AssignmentExpression	fgcolor = Color_WHITE		970940	0		=			
ANR	971318	Identifier	fgcolor		970940	0					
ANR	971319	Identifier	Color_WHITE		970940	1					
ANR	971320	ExpressionStatement	text = NULL	2227:2:69541:69552	970940	5	True				
ANR	971321	AssignmentExpression	text = NULL		970940	0		=			
ANR	971322	Identifier	text		970940	0					
ANR	971323	Identifier	NULL		970940	1					
ANR	971324	IfStatement	"if ( r_anal_op ( core -> anal , & op , core -> offset + i , data + i , len - i , R_ANAL_OP_MASK_BASIC ) <= 0 )"		970940	6					
ANR	971325	Condition	"r_anal_op ( core -> anal , & op , core -> offset + i , data + i , len - i , R_ANAL_OP_MASK_BASIC ) <= 0"	2228:6:69560:69650	970940	0	True				
ANR	971326	RelationalExpression	"r_anal_op ( core -> anal , & op , core -> offset + i , data + i , len - i , R_ANAL_OP_MASK_BASIC ) <= 0"		970940	0		<=			
ANR	971327	CallExpression	"r_anal_op ( core -> anal , & op , core -> offset + i , data + i , len - i , R_ANAL_OP_MASK_BASIC )"		970940	0					
ANR	971328	Callee	r_anal_op		970940	0					
ANR	971329	Identifier	r_anal_op		970940	0					
ANR	971330	ArgumentList	core -> anal		970940	1					
ANR	971331	Argument	core -> anal		970940	0					
ANR	971332	PtrMemberAccess	core -> anal		970940	0					
ANR	971333	Identifier	core		970940	0					
ANR	971334	Identifier	anal		970940	1					
ANR	971335	Argument	& op		970940	1					
ANR	971336	UnaryOperationExpression	& op		970940	0					
ANR	971337	UnaryOperator	&		970940	0					
ANR	971338	Identifier	op		970940	1					
ANR	971339	Argument	core -> offset + i		970940	2					
ANR	971340	AdditiveExpression	core -> offset + i		970940	0		+			
ANR	971341	PtrMemberAccess	core -> offset		970940	0					
ANR	971342	Identifier	core		970940	0					
ANR	971343	Identifier	offset		970940	1					
ANR	971344	Identifier	i		970940	1					
ANR	971345	Argument	data + i		970940	3					
ANR	971346	AdditiveExpression	data + i		970940	0		+			
ANR	971347	Identifier	data		970940	0					
ANR	971348	Identifier	i		970940	1					
ANR	971349	Argument	len - i		970940	4					
ANR	971350	AdditiveExpression	len - i		970940	0		-			
ANR	971351	Identifier	len		970940	0					
ANR	971352	Identifier	i		970940	1					
ANR	971353	Argument	R_ANAL_OP_MASK_BASIC		970940	5					
ANR	971354	Identifier	R_ANAL_OP_MASK_BASIC		970940	0					
ANR	971355	PrimaryExpression	0		970940	1					
ANR	971356	CompoundStatement		61:99:1534:1534	970940	1					
ANR	971357	ExpressionStatement	op . type = 0	2229:3:69658:69669	970940	0	True				
ANR	971358	AssignmentExpression	op . type = 0		970940	0		=			
ANR	971359	MemberAccess	op . type		970940	0					
ANR	971360	Identifier	op		970940	0					
ANR	971361	Identifier	type		970940	1					
ANR	971362	PrimaryExpression	0		970940	1					
ANR	971363	ExpressionStatement	bgcolor = Color_BGRED	2230:3:69674:69695	970940	1	True				
ANR	971364	AssignmentExpression	bgcolor = Color_BGRED		970940	0		=			
ANR	971365	Identifier	bgcolor		970940	0					
ANR	971366	Identifier	Color_BGRED		970940	1					
ANR	971367	ExpressionStatement	op . size = 1	2231:3:69700:69711	970940	2	True				
ANR	971368	AssignmentExpression	op . size = 1		970940	0		=			
ANR	971369	MemberAccess	op . size		970940	0					
ANR	971370	Identifier	op		970940	0					
ANR	971371	Identifier	size		970940	1					
ANR	971372	PrimaryExpression	1		970940	1					
ANR	971373	SwitchStatement	switch ( op . type )		970940	7					
ANR	971374	Condition	op . type	2233:10:69727:69733	970940	0	True				
ANR	971375	MemberAccess	op . type		970940	0					
ANR	971376	Identifier	op		970940	0					
ANR	971377	Identifier	type		970940	1					
ANR	971378	CompoundStatement		66:19:1617:1617	970940	1					
ANR	971379	Label	case R_ANAL_OP_TYPE_LEA :	2234:2:69740:69763	970940	0	True				
ANR	971380	Identifier	R_ANAL_OP_TYPE_LEA		970940	0					
ANR	971381	Label	case R_ANAL_OP_TYPE_MOV :	2235:2:69767:69790	970940	1	True				
ANR	971382	Identifier	R_ANAL_OP_TYPE_MOV		970940	0					
ANR	971383	Label	case R_ANAL_OP_TYPE_CAST :	2236:2:69794:69818	970940	2	True				
ANR	971384	Identifier	R_ANAL_OP_TYPE_CAST		970940	0					
ANR	971385	Label	case R_ANAL_OP_TYPE_LENGTH :	2237:2:69822:69848	970940	3	True				
ANR	971386	Identifier	R_ANAL_OP_TYPE_LENGTH		970940	0					
ANR	971387	Label	case R_ANAL_OP_TYPE_CMOV :	2238:2:69852:69876	970940	4	True				
ANR	971388	Identifier	R_ANAL_OP_TYPE_CMOV		970940	0					
ANR	971389	ExpressionStatement	"text = ""mv"""	2239:3:69881:69892	970940	5	True				
ANR	971390	AssignmentExpression	"text = ""mv"""		970940	0		=			
ANR	971391	Identifier	text		970940	0					
ANR	971392	PrimaryExpression	"""mv"""		970940	1					
ANR	971393	ExpressionStatement	bgcolor = pal -> mov	2240:3:69897:69915	970940	6	True				
ANR	971394	AssignmentExpression	bgcolor = pal -> mov		970940	0		=			
ANR	971395	Identifier	bgcolor		970940	0					
ANR	971396	PtrMemberAccess	pal -> mov		970940	1					
ANR	971397	Identifier	pal		970940	0					
ANR	971398	Identifier	mov		970940	1					
ANR	971399	ExpressionStatement	fgcolor = Color_YELLOW	2241:3:69920:69942	970940	7	True				
ANR	971400	AssignmentExpression	fgcolor = Color_YELLOW		970940	0		=			
ANR	971401	Identifier	fgcolor		970940	0					
ANR	971402	Identifier	Color_YELLOW		970940	1					
ANR	971403	BreakStatement	break ;	2242:3:69947:69952	970940	8	True				
ANR	971404	Label	case R_ANAL_OP_TYPE_PUSH :	2243:2:69956:69980	970940	9	True				
ANR	971405	Identifier	R_ANAL_OP_TYPE_PUSH		970940	0					
ANR	971406	Label	case R_ANAL_OP_TYPE_UPUSH :	2244:2:69984:70009	970940	10	True				
ANR	971407	Identifier	R_ANAL_OP_TYPE_UPUSH		970940	0					
ANR	971408	Label	case R_ANAL_OP_TYPE_RPUSH :	2245:2:70013:70038	970940	11	True				
ANR	971409	Identifier	R_ANAL_OP_TYPE_RPUSH		970940	0					
ANR	971410	ExpressionStatement	bgcolor = pal -> push	2246:3:70043:70062	970940	12	True				
ANR	971411	AssignmentExpression	bgcolor = pal -> push		970940	0		=			
ANR	971412	Identifier	bgcolor		970940	0					
ANR	971413	PtrMemberAccess	pal -> push		970940	1					
ANR	971414	Identifier	pal		970940	0					
ANR	971415	Identifier	push		970940	1					
ANR	971416	ExpressionStatement	fgcolor = Color_WHITE	2247:3:70067:70088	970940	13	True				
ANR	971417	AssignmentExpression	fgcolor = Color_WHITE		970940	0		=			
ANR	971418	Identifier	fgcolor		970940	0					
ANR	971419	Identifier	Color_WHITE		970940	1					
ANR	971420	ExpressionStatement	"text = ""->"""	2248:3:70093:70104	970940	14	True				
ANR	971421	AssignmentExpression	"text = ""->"""		970940	0		=			
ANR	971422	Identifier	text		970940	0					
ANR	971423	PrimaryExpression	"""->"""		970940	1					
ANR	971424	BreakStatement	break ;	2249:3:70109:70114	970940	15	True				
ANR	971425	Label	case R_ANAL_OP_TYPE_IO :	2250:2:70118:70140	970940	16	True				
ANR	971426	Identifier	R_ANAL_OP_TYPE_IO		970940	0					
ANR	971427	ExpressionStatement	bgcolor = pal -> swi	2251:3:70145:70163	970940	17	True				
ANR	971428	AssignmentExpression	bgcolor = pal -> swi		970940	0		=			
ANR	971429	Identifier	bgcolor		970940	0					
ANR	971430	PtrMemberAccess	pal -> swi		970940	1					
ANR	971431	Identifier	pal		970940	0					
ANR	971432	Identifier	swi		970940	1					
ANR	971433	ExpressionStatement	fgcolor = Color_WHITE	2252:3:70168:70189	970940	18	True				
ANR	971434	AssignmentExpression	fgcolor = Color_WHITE		970940	0		=			
ANR	971435	Identifier	fgcolor		970940	0					
ANR	971436	Identifier	Color_WHITE		970940	1					
ANR	971437	ExpressionStatement	"text = ""io"""	2253:3:70194:70205	970940	19	True				
ANR	971438	AssignmentExpression	"text = ""io"""		970940	0		=			
ANR	971439	Identifier	text		970940	0					
ANR	971440	PrimaryExpression	"""io"""		970940	1					
ANR	971441	BreakStatement	break ;	2254:3:70210:70215	970940	20	True				
ANR	971442	Label	case R_ANAL_OP_TYPE_TRAP :	2255:2:70219:70243	970940	21	True				
ANR	971443	Identifier	R_ANAL_OP_TYPE_TRAP		970940	0					
ANR	971444	Label	case R_ANAL_OP_TYPE_SWI :	2256:2:70247:70270	970940	22	True				
ANR	971445	Identifier	R_ANAL_OP_TYPE_SWI		970940	0					
ANR	971446	Label	case R_ANAL_OP_TYPE_NEW :	2257:2:70274:70297	970940	23	True				
ANR	971447	Identifier	R_ANAL_OP_TYPE_NEW		970940	0					
ANR	971448	ExpressionStatement	bgcolor = pal -> trap	2259:3:70331:70350	970940	24	True				
ANR	971449	AssignmentExpression	bgcolor = pal -> trap		970940	0		=			
ANR	971450	Identifier	bgcolor		970940	0					
ANR	971451	PtrMemberAccess	pal -> trap		970940	1					
ANR	971452	Identifier	pal		970940	0					
ANR	971453	Identifier	trap		970940	1					
ANR	971454	ExpressionStatement	fgcolor = Color_WHITE	2260:3:70390:70411	970940	25	True				
ANR	971455	AssignmentExpression	fgcolor = Color_WHITE		970940	0		=			
ANR	971456	Identifier	fgcolor		970940	0					
ANR	971457	Identifier	Color_WHITE		970940	1					
ANR	971458	ExpressionStatement	"text = ""$$"""	2261:3:70416:70427	970940	26	True				
ANR	971459	AssignmentExpression	"text = ""$$"""		970940	0		=			
ANR	971460	Identifier	text		970940	0					
ANR	971461	PrimaryExpression	"""$$"""		970940	1					
ANR	971462	BreakStatement	break ;	2262:3:70432:70437	970940	27	True				
ANR	971463	Label	case R_ANAL_OP_TYPE_POP :	2263:2:70441:70464	970940	28	True				
ANR	971464	Identifier	R_ANAL_OP_TYPE_POP		970940	0					
ANR	971465	ExpressionStatement	"text = ""<-"""	2264:3:70469:70480	970940	29	True				
ANR	971466	AssignmentExpression	"text = ""<-"""		970940	0		=			
ANR	971467	Identifier	text		970940	0					
ANR	971468	PrimaryExpression	"""<-"""		970940	1					
ANR	971469	ExpressionStatement	bgcolor = r_cons_swap_ground ( pal -> pop )	2265:3:70485:70524	970940	30	True				
ANR	971470	AssignmentExpression	bgcolor = r_cons_swap_ground ( pal -> pop )		970940	0		=			
ANR	971471	Identifier	bgcolor		970940	0					
ANR	971472	CallExpression	r_cons_swap_ground ( pal -> pop )		970940	1					
ANR	971473	Callee	r_cons_swap_ground		970940	0					
ANR	971474	Identifier	r_cons_swap_ground		970940	0					
ANR	971475	ArgumentList	pal -> pop		970940	1					
ANR	971476	Argument	pal -> pop		970940	0					
ANR	971477	PtrMemberAccess	pal -> pop		970940	0					
ANR	971478	Identifier	pal		970940	0					
ANR	971479	Identifier	pop		970940	1					
ANR	971480	ExpressionStatement	bgcolor_in_heap = true	2266:3:70529:70551	970940	31	True				
ANR	971481	AssignmentExpression	bgcolor_in_heap = true		970940	0		=			
ANR	971482	Identifier	bgcolor_in_heap		970940	0					
ANR	971483	Identifier	true		970940	1					
ANR	971484	ExpressionStatement	fgcolor = Color_WHITE	2267:3:70556:70577	970940	32	True				
ANR	971485	AssignmentExpression	fgcolor = Color_WHITE		970940	0		=			
ANR	971486	Identifier	fgcolor		970940	0					
ANR	971487	Identifier	Color_WHITE		970940	1					
ANR	971488	BreakStatement	break ;	2268:3:70582:70587	970940	33	True				
ANR	971489	Label	case R_ANAL_OP_TYPE_NOP :	2269:2:70591:70614	970940	34	True				
ANR	971490	Identifier	R_ANAL_OP_TYPE_NOP		970940	0					
ANR	971491	ExpressionStatement	fgcolor = Color_WHITE	2270:3:70619:70640	970940	35	True				
ANR	971492	AssignmentExpression	fgcolor = Color_WHITE		970940	0		=			
ANR	971493	Identifier	fgcolor		970940	0					
ANR	971494	Identifier	Color_WHITE		970940	1					
ANR	971495	ExpressionStatement	bgcolor = r_cons_swap_ground ( pal -> nop )	2271:3:70645:70684	970940	36	True				
ANR	971496	AssignmentExpression	bgcolor = r_cons_swap_ground ( pal -> nop )		970940	0		=			
ANR	971497	Identifier	bgcolor		970940	0					
ANR	971498	CallExpression	r_cons_swap_ground ( pal -> nop )		970940	1					
ANR	971499	Callee	r_cons_swap_ground		970940	0					
ANR	971500	Identifier	r_cons_swap_ground		970940	0					
ANR	971501	ArgumentList	pal -> nop		970940	1					
ANR	971502	Argument	pal -> nop		970940	0					
ANR	971503	PtrMemberAccess	pal -> nop		970940	0					
ANR	971504	Identifier	pal		970940	0					
ANR	971505	Identifier	nop		970940	1					
ANR	971506	ExpressionStatement	bgcolor_in_heap = true	2272:3:70689:70711	970940	37	True				
ANR	971507	AssignmentExpression	bgcolor_in_heap = true		970940	0		=			
ANR	971508	Identifier	bgcolor_in_heap		970940	0					
ANR	971509	Identifier	true		970940	1					
ANR	971510	ExpressionStatement	"text = "".."""	2273:3:70716:70727	970940	38	True				
ANR	971511	AssignmentExpression	"text = "".."""		970940	0		=			
ANR	971512	Identifier	text		970940	0					
ANR	971513	PrimaryExpression	""".."""		970940	1					
ANR	971514	BreakStatement	break ;	2274:3:70732:70737	970940	39	True				
ANR	971515	Label	case R_ANAL_OP_TYPE_MUL :	2275:2:70741:70764	970940	40	True				
ANR	971516	Identifier	R_ANAL_OP_TYPE_MUL		970940	0					
ANR	971517	ExpressionStatement	fgcolor = Color_BLACK	2276:3:70769:70790	970940	41	True				
ANR	971518	AssignmentExpression	fgcolor = Color_BLACK		970940	0		=			
ANR	971519	Identifier	fgcolor		970940	0					
ANR	971520	Identifier	Color_BLACK		970940	1					
ANR	971521	ExpressionStatement	bgcolor = r_cons_swap_ground ( pal -> math )	2277:3:70795:70835	970940	42	True				
ANR	971522	AssignmentExpression	bgcolor = r_cons_swap_ground ( pal -> math )		970940	0		=			
ANR	971523	Identifier	bgcolor		970940	0					
ANR	971524	CallExpression	r_cons_swap_ground ( pal -> math )		970940	1					
ANR	971525	Callee	r_cons_swap_ground		970940	0					
ANR	971526	Identifier	r_cons_swap_ground		970940	0					
ANR	971527	ArgumentList	pal -> math		970940	1					
ANR	971528	Argument	pal -> math		970940	0					
ANR	971529	PtrMemberAccess	pal -> math		970940	0					
ANR	971530	Identifier	pal		970940	0					
ANR	971531	Identifier	math		970940	1					
ANR	971532	ExpressionStatement	bgcolor_in_heap = true	2278:3:70840:70862	970940	43	True				
ANR	971533	AssignmentExpression	bgcolor_in_heap = true		970940	0		=			
ANR	971534	Identifier	bgcolor_in_heap		970940	0					
ANR	971535	Identifier	true		970940	1					
ANR	971536	ExpressionStatement	"text = ""_*"""	2279:3:70867:70878	970940	44	True				
ANR	971537	AssignmentExpression	"text = ""_*"""		970940	0		=			
ANR	971538	Identifier	text		970940	0					
ANR	971539	PrimaryExpression	"""_*"""		970940	1					
ANR	971540	BreakStatement	break ;	2280:3:70883:70888	970940	45	True				
ANR	971541	Label	case R_ANAL_OP_TYPE_DIV :	2281:2:70892:70915	970940	46	True				
ANR	971542	Identifier	R_ANAL_OP_TYPE_DIV		970940	0					
ANR	971543	ExpressionStatement	bgcolor = r_cons_swap_ground ( pal -> math )	2282:3:70920:70960	970940	47	True				
ANR	971544	AssignmentExpression	bgcolor = r_cons_swap_ground ( pal -> math )		970940	0		=			
ANR	971545	Identifier	bgcolor		970940	0					
ANR	971546	CallExpression	r_cons_swap_ground ( pal -> math )		970940	1					
ANR	971547	Callee	r_cons_swap_ground		970940	0					
ANR	971548	Identifier	r_cons_swap_ground		970940	0					
ANR	971549	ArgumentList	pal -> math		970940	1					
ANR	971550	Argument	pal -> math		970940	0					
ANR	971551	PtrMemberAccess	pal -> math		970940	0					
ANR	971552	Identifier	pal		970940	0					
ANR	971553	Identifier	math		970940	1					
ANR	971554	ExpressionStatement	bgcolor_in_heap = true	2283:3:70965:70987	970940	48	True				
ANR	971555	AssignmentExpression	bgcolor_in_heap = true		970940	0		=			
ANR	971556	Identifier	bgcolor_in_heap		970940	0					
ANR	971557	Identifier	true		970940	1					
ANR	971558	ExpressionStatement	fgcolor = Color_BLACK	2284:3:70992:71013	970940	49	True				
ANR	971559	AssignmentExpression	fgcolor = Color_BLACK		970940	0		=			
ANR	971560	Identifier	fgcolor		970940	0					
ANR	971561	Identifier	Color_BLACK		970940	1					
ANR	971562	ExpressionStatement	"text = ""_/"""	2285:3:71018:71029	970940	50	True				
ANR	971563	AssignmentExpression	"text = ""_/"""		970940	0		=			
ANR	971564	Identifier	text		970940	0					
ANR	971565	PrimaryExpression	"""_/"""		970940	1					
ANR	971566	BreakStatement	break ;	2286:3:71034:71039	970940	51	True				
ANR	971567	Label	case R_ANAL_OP_TYPE_AND :	2287:2:71043:71066	970940	52	True				
ANR	971568	Identifier	R_ANAL_OP_TYPE_AND		970940	0					
ANR	971569	ExpressionStatement	bgcolor = r_cons_swap_ground ( pal -> bin )	2288:3:71071:71110	970940	53	True				
ANR	971570	AssignmentExpression	bgcolor = r_cons_swap_ground ( pal -> bin )		970940	0		=			
ANR	971571	Identifier	bgcolor		970940	0					
ANR	971572	CallExpression	r_cons_swap_ground ( pal -> bin )		970940	1					
ANR	971573	Callee	r_cons_swap_ground		970940	0					
ANR	971574	Identifier	r_cons_swap_ground		970940	0					
ANR	971575	ArgumentList	pal -> bin		970940	1					
ANR	971576	Argument	pal -> bin		970940	0					
ANR	971577	PtrMemberAccess	pal -> bin		970940	0					
ANR	971578	Identifier	pal		970940	0					
ANR	971579	Identifier	bin		970940	1					
ANR	971580	ExpressionStatement	bgcolor_in_heap = true	2289:3:71115:71137	970940	54	True				
ANR	971581	AssignmentExpression	bgcolor_in_heap = true		970940	0		=			
ANR	971582	Identifier	bgcolor_in_heap		970940	0					
ANR	971583	Identifier	true		970940	1					
ANR	971584	ExpressionStatement	fgcolor = Color_BLACK	2290:3:71142:71163	970940	55	True				
ANR	971585	AssignmentExpression	fgcolor = Color_BLACK		970940	0		=			
ANR	971586	Identifier	fgcolor		970940	0					
ANR	971587	Identifier	Color_BLACK		970940	1					
ANR	971588	ExpressionStatement	"text = ""_&"""	2291:3:71168:71179	970940	56	True				
ANR	971589	AssignmentExpression	"text = ""_&"""		970940	0		=			
ANR	971590	Identifier	text		970940	0					
ANR	971591	PrimaryExpression	"""_&"""		970940	1					
ANR	971592	BreakStatement	break ;	2292:3:71184:71189	970940	57	True				
ANR	971593	Label	case R_ANAL_OP_TYPE_XOR :	2293:2:71193:71216	970940	58	True				
ANR	971594	Identifier	R_ANAL_OP_TYPE_XOR		970940	0					
ANR	971595	ExpressionStatement	bgcolor = r_cons_swap_ground ( pal -> bin )	2294:3:71221:71260	970940	59	True				
ANR	971596	AssignmentExpression	bgcolor = r_cons_swap_ground ( pal -> bin )		970940	0		=			
ANR	971597	Identifier	bgcolor		970940	0					
ANR	971598	CallExpression	r_cons_swap_ground ( pal -> bin )		970940	1					
ANR	971599	Callee	r_cons_swap_ground		970940	0					
ANR	971600	Identifier	r_cons_swap_ground		970940	0					
ANR	971601	ArgumentList	pal -> bin		970940	1					
ANR	971602	Argument	pal -> bin		970940	0					
ANR	971603	PtrMemberAccess	pal -> bin		970940	0					
ANR	971604	Identifier	pal		970940	0					
ANR	971605	Identifier	bin		970940	1					
ANR	971606	ExpressionStatement	bgcolor_in_heap = true	2295:3:71265:71287	970940	60	True				
ANR	971607	AssignmentExpression	bgcolor_in_heap = true		970940	0		=			
ANR	971608	Identifier	bgcolor_in_heap		970940	0					
ANR	971609	Identifier	true		970940	1					
ANR	971610	ExpressionStatement	fgcolor = Color_BLACK	2296:3:71292:71313	970940	61	True				
ANR	971611	AssignmentExpression	fgcolor = Color_BLACK		970940	0		=			
ANR	971612	Identifier	fgcolor		970940	0					
ANR	971613	Identifier	Color_BLACK		970940	1					
ANR	971614	ExpressionStatement	"text = ""_^"""	2297:3:71318:71329	970940	62	True				
ANR	971615	AssignmentExpression	"text = ""_^"""		970940	0		=			
ANR	971616	Identifier	text		970940	0					
ANR	971617	PrimaryExpression	"""_^"""		970940	1					
ANR	971618	BreakStatement	break ;	2298:3:71334:71339	970940	63	True				
ANR	971619	Label	case R_ANAL_OP_TYPE_OR :	2299:2:71343:71365	970940	64	True				
ANR	971620	Identifier	R_ANAL_OP_TYPE_OR		970940	0					
ANR	971621	ExpressionStatement	bgcolor = r_cons_swap_ground ( pal -> bin )	2300:3:71370:71409	970940	65	True				
ANR	971622	AssignmentExpression	bgcolor = r_cons_swap_ground ( pal -> bin )		970940	0		=			
ANR	971623	Identifier	bgcolor		970940	0					
ANR	971624	CallExpression	r_cons_swap_ground ( pal -> bin )		970940	1					
ANR	971625	Callee	r_cons_swap_ground		970940	0					
ANR	971626	Identifier	r_cons_swap_ground		970940	0					
ANR	971627	ArgumentList	pal -> bin		970940	1					
ANR	971628	Argument	pal -> bin		970940	0					
ANR	971629	PtrMemberAccess	pal -> bin		970940	0					
ANR	971630	Identifier	pal		970940	0					
ANR	971631	Identifier	bin		970940	1					
ANR	971632	ExpressionStatement	bgcolor_in_heap = true	2301:3:71414:71436	970940	66	True				
ANR	971633	AssignmentExpression	bgcolor_in_heap = true		970940	0		=			
ANR	971634	Identifier	bgcolor_in_heap		970940	0					
ANR	971635	Identifier	true		970940	1					
ANR	971636	ExpressionStatement	fgcolor = Color_BLACK	2302:3:71441:71462	970940	67	True				
ANR	971637	AssignmentExpression	fgcolor = Color_BLACK		970940	0		=			
ANR	971638	Identifier	fgcolor		970940	0					
ANR	971639	Identifier	Color_BLACK		970940	1					
ANR	971640	ExpressionStatement	"text = ""_|"""	2303:3:71467:71478	970940	68	True				
ANR	971641	AssignmentExpression	"text = ""_|"""		970940	0		=			
ANR	971642	Identifier	text		970940	0					
ANR	971643	PrimaryExpression	"""_|"""		970940	1					
ANR	971644	BreakStatement	break ;	2304:3:71483:71488	970940	69	True				
ANR	971645	Label	case R_ANAL_OP_TYPE_SHR :	2305:2:71492:71515	970940	70	True				
ANR	971646	Identifier	R_ANAL_OP_TYPE_SHR		970940	0					
ANR	971647	ExpressionStatement	bgcolor = r_cons_swap_ground ( pal -> bin )	2306:3:71520:71559	970940	71	True				
ANR	971648	AssignmentExpression	bgcolor = r_cons_swap_ground ( pal -> bin )		970940	0		=			
ANR	971649	Identifier	bgcolor		970940	0					
ANR	971650	CallExpression	r_cons_swap_ground ( pal -> bin )		970940	1					
ANR	971651	Callee	r_cons_swap_ground		970940	0					
ANR	971652	Identifier	r_cons_swap_ground		970940	0					
ANR	971653	ArgumentList	pal -> bin		970940	1					
ANR	971654	Argument	pal -> bin		970940	0					
ANR	971655	PtrMemberAccess	pal -> bin		970940	0					
ANR	971656	Identifier	pal		970940	0					
ANR	971657	Identifier	bin		970940	1					
ANR	971658	ExpressionStatement	bgcolor_in_heap = true	2307:3:71564:71586	970940	72	True				
ANR	971659	AssignmentExpression	bgcolor_in_heap = true		970940	0		=			
ANR	971660	Identifier	bgcolor_in_heap		970940	0					
ANR	971661	Identifier	true		970940	1					
ANR	971662	ExpressionStatement	fgcolor = Color_BLACK	2308:3:71591:71612	970940	73	True				
ANR	971663	AssignmentExpression	fgcolor = Color_BLACK		970940	0		=			
ANR	971664	Identifier	fgcolor		970940	0					
ANR	971665	Identifier	Color_BLACK		970940	1					
ANR	971666	ExpressionStatement	"text = "">>"""	2309:3:71617:71628	970940	74	True				
ANR	971667	AssignmentExpression	"text = "">>"""		970940	0		=			
ANR	971668	Identifier	text		970940	0					
ANR	971669	PrimaryExpression	""">>"""		970940	1					
ANR	971670	BreakStatement	break ;	2310:3:71633:71638	970940	75	True				
ANR	971671	Label	case R_ANAL_OP_TYPE_SHL :	2311:2:71642:71665	970940	76	True				
ANR	971672	Identifier	R_ANAL_OP_TYPE_SHL		970940	0					
ANR	971673	ExpressionStatement	bgcolor = r_cons_swap_ground ( pal -> bin )	2312:3:71670:71709	970940	77	True				
ANR	971674	AssignmentExpression	bgcolor = r_cons_swap_ground ( pal -> bin )		970940	0		=			
ANR	971675	Identifier	bgcolor		970940	0					
ANR	971676	CallExpression	r_cons_swap_ground ( pal -> bin )		970940	1					
ANR	971677	Callee	r_cons_swap_ground		970940	0					
ANR	971678	Identifier	r_cons_swap_ground		970940	0					
ANR	971679	ArgumentList	pal -> bin		970940	1					
ANR	971680	Argument	pal -> bin		970940	0					
ANR	971681	PtrMemberAccess	pal -> bin		970940	0					
ANR	971682	Identifier	pal		970940	0					
ANR	971683	Identifier	bin		970940	1					
ANR	971684	ExpressionStatement	bgcolor_in_heap = true	2313:3:71714:71736	970940	78	True				
ANR	971685	AssignmentExpression	bgcolor_in_heap = true		970940	0		=			
ANR	971686	Identifier	bgcolor_in_heap		970940	0					
ANR	971687	Identifier	true		970940	1					
ANR	971688	ExpressionStatement	fgcolor = Color_BLACK	2314:3:71741:71762	970940	79	True				
ANR	971689	AssignmentExpression	fgcolor = Color_BLACK		970940	0		=			
ANR	971690	Identifier	fgcolor		970940	0					
ANR	971691	Identifier	Color_BLACK		970940	1					
ANR	971692	ExpressionStatement	"text = ""<<"""	2315:3:71767:71778	970940	80	True				
ANR	971693	AssignmentExpression	"text = ""<<"""		970940	0		=			
ANR	971694	Identifier	text		970940	0					
ANR	971695	PrimaryExpression	"""<<"""		970940	1					
ANR	971696	BreakStatement	break ;	2316:3:71783:71788	970940	81	True				
ANR	971697	Label	case R_ANAL_OP_TYPE_SUB :	2317:2:71792:71815	970940	82	True				
ANR	971698	Identifier	R_ANAL_OP_TYPE_SUB		970940	0					
ANR	971699	ExpressionStatement	bgcolor = r_cons_swap_ground ( pal -> math )	2318:3:71820:71860	970940	83	True				
ANR	971700	AssignmentExpression	bgcolor = r_cons_swap_ground ( pal -> math )		970940	0		=			
ANR	971701	Identifier	bgcolor		970940	0					
ANR	971702	CallExpression	r_cons_swap_ground ( pal -> math )		970940	1					
ANR	971703	Callee	r_cons_swap_ground		970940	0					
ANR	971704	Identifier	r_cons_swap_ground		970940	0					
ANR	971705	ArgumentList	pal -> math		970940	1					
ANR	971706	Argument	pal -> math		970940	0					
ANR	971707	PtrMemberAccess	pal -> math		970940	0					
ANR	971708	Identifier	pal		970940	0					
ANR	971709	Identifier	math		970940	1					
ANR	971710	ExpressionStatement	bgcolor_in_heap = true	2319:3:71865:71887	970940	84	True				
ANR	971711	AssignmentExpression	bgcolor_in_heap = true		970940	0		=			
ANR	971712	Identifier	bgcolor_in_heap		970940	0					
ANR	971713	Identifier	true		970940	1					
ANR	971714	ExpressionStatement	fgcolor = Color_WHITE	2320:3:71892:71913	970940	85	True				
ANR	971715	AssignmentExpression	fgcolor = Color_WHITE		970940	0		=			
ANR	971716	Identifier	fgcolor		970940	0					
ANR	971717	Identifier	Color_WHITE		970940	1					
ANR	971718	ExpressionStatement	"text = ""--"""	2321:3:71918:71929	970940	86	True				
ANR	971719	AssignmentExpression	"text = ""--"""		970940	0		=			
ANR	971720	Identifier	text		970940	0					
ANR	971721	PrimaryExpression	"""--"""		970940	1					
ANR	971722	BreakStatement	break ;	2322:3:71934:71939	970940	87	True				
ANR	971723	Label	case R_ANAL_OP_TYPE_ADD :	2323:2:71943:71966	970940	88	True				
ANR	971724	Identifier	R_ANAL_OP_TYPE_ADD		970940	0					
ANR	971725	ExpressionStatement	bgcolor = r_cons_swap_ground ( pal -> math )	2324:3:71971:72011	970940	89	True				
ANR	971726	AssignmentExpression	bgcolor = r_cons_swap_ground ( pal -> math )		970940	0		=			
ANR	971727	Identifier	bgcolor		970940	0					
ANR	971728	CallExpression	r_cons_swap_ground ( pal -> math )		970940	1					
ANR	971729	Callee	r_cons_swap_ground		970940	0					
ANR	971730	Identifier	r_cons_swap_ground		970940	0					
ANR	971731	ArgumentList	pal -> math		970940	1					
ANR	971732	Argument	pal -> math		970940	0					
ANR	971733	PtrMemberAccess	pal -> math		970940	0					
ANR	971734	Identifier	pal		970940	0					
ANR	971735	Identifier	math		970940	1					
ANR	971736	ExpressionStatement	bgcolor_in_heap = true	2325:3:72016:72038	970940	90	True				
ANR	971737	AssignmentExpression	bgcolor_in_heap = true		970940	0		=			
ANR	971738	Identifier	bgcolor_in_heap		970940	0					
ANR	971739	Identifier	true		970940	1					
ANR	971740	ExpressionStatement	fgcolor = Color_WHITE	2326:3:72043:72064	970940	91	True				
ANR	971741	AssignmentExpression	fgcolor = Color_WHITE		970940	0		=			
ANR	971742	Identifier	fgcolor		970940	0					
ANR	971743	Identifier	Color_WHITE		970940	1					
ANR	971744	ExpressionStatement	"text = ""++"""	2327:3:72069:72080	970940	92	True				
ANR	971745	AssignmentExpression	"text = ""++"""		970940	0		=			
ANR	971746	Identifier	text		970940	0					
ANR	971747	PrimaryExpression	"""++"""		970940	1					
ANR	971748	BreakStatement	break ;	2328:3:72085:72090	970940	93	True				
ANR	971749	Label	case R_ANAL_OP_TYPE_JMP :	2329:2:72094:72117	970940	94	True				
ANR	971750	Identifier	R_ANAL_OP_TYPE_JMP		970940	0					
ANR	971751	Label	case R_ANAL_OP_TYPE_UJMP :	2330:2:72121:72145	970940	95	True				
ANR	971752	Identifier	R_ANAL_OP_TYPE_UJMP		970940	0					
ANR	971753	Label	case R_ANAL_OP_TYPE_IJMP :	2331:2:72149:72173	970940	96	True				
ANR	971754	Identifier	R_ANAL_OP_TYPE_IJMP		970940	0					
ANR	971755	Label	case R_ANAL_OP_TYPE_RJMP :	2332:2:72177:72201	970940	97	True				
ANR	971756	Identifier	R_ANAL_OP_TYPE_RJMP		970940	0					
ANR	971757	Label	case R_ANAL_OP_TYPE_IRJMP :	2333:2:72205:72230	970940	98	True				
ANR	971758	Identifier	R_ANAL_OP_TYPE_IRJMP		970940	0					
ANR	971759	Label	case R_ANAL_OP_TYPE_MJMP :	2334:2:72234:72258	970940	99	True				
ANR	971760	Identifier	R_ANAL_OP_TYPE_MJMP		970940	0					
ANR	971761	ExpressionStatement	bgcolor = r_cons_swap_ground ( pal -> jmp )	2335:3:72263:72302	970940	100	True				
ANR	971762	AssignmentExpression	bgcolor = r_cons_swap_ground ( pal -> jmp )		970940	0		=			
ANR	971763	Identifier	bgcolor		970940	0					
ANR	971764	CallExpression	r_cons_swap_ground ( pal -> jmp )		970940	1					
ANR	971765	Callee	r_cons_swap_ground		970940	0					
ANR	971766	Identifier	r_cons_swap_ground		970940	0					
ANR	971767	ArgumentList	pal -> jmp		970940	1					
ANR	971768	Argument	pal -> jmp		970940	0					
ANR	971769	PtrMemberAccess	pal -> jmp		970940	0					
ANR	971770	Identifier	pal		970940	0					
ANR	971771	Identifier	jmp		970940	1					
ANR	971772	ExpressionStatement	bgcolor_in_heap = true	2336:3:72307:72329	970940	101	True				
ANR	971773	AssignmentExpression	bgcolor_in_heap = true		970940	0		=			
ANR	971774	Identifier	bgcolor_in_heap		970940	0					
ANR	971775	Identifier	true		970940	1					
ANR	971776	ExpressionStatement	fgcolor = Color_BLACK	2337:3:72334:72355	970940	102	True				
ANR	971777	AssignmentExpression	fgcolor = Color_BLACK		970940	0		=			
ANR	971778	Identifier	fgcolor		970940	0					
ANR	971779	Identifier	Color_BLACK		970940	1					
ANR	971780	ExpressionStatement	"text = ""_J"""	2338:3:72360:72371	970940	103	True				
ANR	971781	AssignmentExpression	"text = ""_J"""		970940	0		=			
ANR	971782	Identifier	text		970940	0					
ANR	971783	PrimaryExpression	"""_J"""		970940	1					
ANR	971784	BreakStatement	break ;	2339:3:72376:72381	970940	104	True				
ANR	971785	Label	case R_ANAL_OP_TYPE_CJMP :	2340:2:72385:72409	970940	105	True				
ANR	971786	Identifier	R_ANAL_OP_TYPE_CJMP		970940	0					
ANR	971787	Label	case R_ANAL_OP_TYPE_UCJMP :	2341:2:72413:72438	970940	106	True				
ANR	971788	Identifier	R_ANAL_OP_TYPE_UCJMP		970940	0					
ANR	971789	ExpressionStatement	bgcolor = r_cons_swap_ground ( pal -> cjmp )	2342:3:72443:72483	970940	107	True				
ANR	971790	AssignmentExpression	bgcolor = r_cons_swap_ground ( pal -> cjmp )		970940	0		=			
ANR	971791	Identifier	bgcolor		970940	0					
ANR	971792	CallExpression	r_cons_swap_ground ( pal -> cjmp )		970940	1					
ANR	971793	Callee	r_cons_swap_ground		970940	0					
ANR	971794	Identifier	r_cons_swap_ground		970940	0					
ANR	971795	ArgumentList	pal -> cjmp		970940	1					
ANR	971796	Argument	pal -> cjmp		970940	0					
ANR	971797	PtrMemberAccess	pal -> cjmp		970940	0					
ANR	971798	Identifier	pal		970940	0					
ANR	971799	Identifier	cjmp		970940	1					
ANR	971800	ExpressionStatement	bgcolor_in_heap = true	2343:3:72488:72510	970940	108	True				
ANR	971801	AssignmentExpression	bgcolor_in_heap = true		970940	0		=			
ANR	971802	Identifier	bgcolor_in_heap		970940	0					
ANR	971803	Identifier	true		970940	1					
ANR	971804	ExpressionStatement	fgcolor = Color_BLACK	2344:3:72515:72536	970940	109	True				
ANR	971805	AssignmentExpression	fgcolor = Color_BLACK		970940	0		=			
ANR	971806	Identifier	fgcolor		970940	0					
ANR	971807	Identifier	Color_BLACK		970940	1					
ANR	971808	ExpressionStatement	"text = ""cJ"""	2345:3:72541:72552	970940	110	True				
ANR	971809	AssignmentExpression	"text = ""cJ"""		970940	0		=			
ANR	971810	Identifier	text		970940	0					
ANR	971811	PrimaryExpression	"""cJ"""		970940	1					
ANR	971812	BreakStatement	break ;	2346:3:72557:72562	970940	111	True				
ANR	971813	Label	case R_ANAL_OP_TYPE_CALL :	2347:2:72566:72590	970940	112	True				
ANR	971814	Identifier	R_ANAL_OP_TYPE_CALL		970940	0					
ANR	971815	Label	case R_ANAL_OP_TYPE_UCALL :	2348:2:72594:72619	970940	113	True				
ANR	971816	Identifier	R_ANAL_OP_TYPE_UCALL		970940	0					
ANR	971817	Label	case R_ANAL_OP_TYPE_ICALL :	2349:2:72623:72648	970940	114	True				
ANR	971818	Identifier	R_ANAL_OP_TYPE_ICALL		970940	0					
ANR	971819	Label	case R_ANAL_OP_TYPE_RCALL :	2350:2:72652:72677	970940	115	True				
ANR	971820	Identifier	R_ANAL_OP_TYPE_RCALL		970940	0					
ANR	971821	Label	case R_ANAL_OP_TYPE_IRCALL :	2351:2:72681:72707	970940	116	True				
ANR	971822	Identifier	R_ANAL_OP_TYPE_IRCALL		970940	0					
ANR	971823	Label	case R_ANAL_OP_TYPE_UCCALL :	2352:2:72711:72737	970940	117	True				
ANR	971824	Identifier	R_ANAL_OP_TYPE_UCCALL		970940	0					
ANR	971825	ExpressionStatement	bgcolor = r_cons_swap_ground ( pal -> call )	2353:3:72742:72782	970940	118	True				
ANR	971826	AssignmentExpression	bgcolor = r_cons_swap_ground ( pal -> call )		970940	0		=			
ANR	971827	Identifier	bgcolor		970940	0					
ANR	971828	CallExpression	r_cons_swap_ground ( pal -> call )		970940	1					
ANR	971829	Callee	r_cons_swap_ground		970940	0					
ANR	971830	Identifier	r_cons_swap_ground		970940	0					
ANR	971831	ArgumentList	pal -> call		970940	1					
ANR	971832	Argument	pal -> call		970940	0					
ANR	971833	PtrMemberAccess	pal -> call		970940	0					
ANR	971834	Identifier	pal		970940	0					
ANR	971835	Identifier	call		970940	1					
ANR	971836	ExpressionStatement	bgcolor_in_heap = true	2354:3:72787:72809	970940	119	True				
ANR	971837	AssignmentExpression	bgcolor_in_heap = true		970940	0		=			
ANR	971838	Identifier	bgcolor_in_heap		970940	0					
ANR	971839	Identifier	true		970940	1					
ANR	971840	ExpressionStatement	fgcolor = Color_WHITE	2355:3:72814:72835	970940	120	True				
ANR	971841	AssignmentExpression	fgcolor = Color_WHITE		970940	0		=			
ANR	971842	Identifier	fgcolor		970940	0					
ANR	971843	Identifier	Color_WHITE		970940	1					
ANR	971844	ExpressionStatement	"text = ""_C"""	2356:3:72840:72851	970940	121	True				
ANR	971845	AssignmentExpression	"text = ""_C"""		970940	0		=			
ANR	971846	Identifier	text		970940	0					
ANR	971847	PrimaryExpression	"""_C"""		970940	1					
ANR	971848	BreakStatement	break ;	2357:3:72856:72861	970940	122	True				
ANR	971849	Label	case R_ANAL_OP_TYPE_ACMP :	2358:2:72865:72889	970940	123	True				
ANR	971850	Identifier	R_ANAL_OP_TYPE_ACMP		970940	0					
ANR	971851	Label	case R_ANAL_OP_TYPE_CMP :	2359:2:72893:72916	970940	124	True				
ANR	971852	Identifier	R_ANAL_OP_TYPE_CMP		970940	0					
ANR	971853	ExpressionStatement	bgcolor = r_cons_swap_ground ( pal -> cmp )	2360:3:72921:72960	970940	125	True				
ANR	971854	AssignmentExpression	bgcolor = r_cons_swap_ground ( pal -> cmp )		970940	0		=			
ANR	971855	Identifier	bgcolor		970940	0					
ANR	971856	CallExpression	r_cons_swap_ground ( pal -> cmp )		970940	1					
ANR	971857	Callee	r_cons_swap_ground		970940	0					
ANR	971858	Identifier	r_cons_swap_ground		970940	0					
ANR	971859	ArgumentList	pal -> cmp		970940	1					
ANR	971860	Argument	pal -> cmp		970940	0					
ANR	971861	PtrMemberAccess	pal -> cmp		970940	0					
ANR	971862	Identifier	pal		970940	0					
ANR	971863	Identifier	cmp		970940	1					
ANR	971864	ExpressionStatement	bgcolor_in_heap = true	2361:3:72965:72987	970940	126	True				
ANR	971865	AssignmentExpression	bgcolor_in_heap = true		970940	0		=			
ANR	971866	Identifier	bgcolor_in_heap		970940	0					
ANR	971867	Identifier	true		970940	1					
ANR	971868	ExpressionStatement	fgcolor = Color_BLACK	2362:3:72992:73013	970940	127	True				
ANR	971869	AssignmentExpression	fgcolor = Color_BLACK		970940	0		=			
ANR	971870	Identifier	fgcolor		970940	0					
ANR	971871	Identifier	Color_BLACK		970940	1					
ANR	971872	ExpressionStatement	"text = ""=="""	2363:3:73018:73029	970940	128	True				
ANR	971873	AssignmentExpression	"text = ""=="""		970940	0		=			
ANR	971874	Identifier	text		970940	0					
ANR	971875	PrimaryExpression	"""=="""		970940	1					
ANR	971876	BreakStatement	break ;	2364:3:73034:73039	970940	129	True				
ANR	971877	Label	case R_ANAL_OP_TYPE_RET :	2365:2:73043:73066	970940	130	True				
ANR	971878	Identifier	R_ANAL_OP_TYPE_RET		970940	0					
ANR	971879	ExpressionStatement	bgcolor = r_cons_swap_ground ( pal -> ret )	2366:3:73071:73110	970940	131	True				
ANR	971880	AssignmentExpression	bgcolor = r_cons_swap_ground ( pal -> ret )		970940	0		=			
ANR	971881	Identifier	bgcolor		970940	0					
ANR	971882	CallExpression	r_cons_swap_ground ( pal -> ret )		970940	1					
ANR	971883	Callee	r_cons_swap_ground		970940	0					
ANR	971884	Identifier	r_cons_swap_ground		970940	0					
ANR	971885	ArgumentList	pal -> ret		970940	1					
ANR	971886	Argument	pal -> ret		970940	0					
ANR	971887	PtrMemberAccess	pal -> ret		970940	0					
ANR	971888	Identifier	pal		970940	0					
ANR	971889	Identifier	ret		970940	1					
ANR	971890	ExpressionStatement	bgcolor_in_heap = true	2367:3:73115:73137	970940	132	True				
ANR	971891	AssignmentExpression	bgcolor_in_heap = true		970940	0		=			
ANR	971892	Identifier	bgcolor_in_heap		970940	0					
ANR	971893	Identifier	true		970940	1					
ANR	971894	ExpressionStatement	fgcolor = Color_WHITE	2368:3:73142:73163	970940	133	True				
ANR	971895	AssignmentExpression	fgcolor = Color_WHITE		970940	0		=			
ANR	971896	Identifier	fgcolor		970940	0					
ANR	971897	Identifier	Color_WHITE		970940	1					
ANR	971898	ExpressionStatement	"text = ""_R"""	2369:3:73168:73179	970940	134	True				
ANR	971899	AssignmentExpression	"text = ""_R"""		970940	0		=			
ANR	971900	Identifier	text		970940	0					
ANR	971901	PrimaryExpression	"""_R"""		970940	1					
ANR	971902	BreakStatement	break ;	2370:3:73184:73189	970940	135	True				
ANR	971903	Statement	case	2371:2:73193:73196	970940	136	True				
ANR	971904	Statement	-	2371:7:73198:73198	970940	137	True				
ANR	971905	Label	1 :	2371:8:73199:73200	970940	138	True				
ANR	971906	Label	case R_ANAL_OP_TYPE_ILL :	2372:2:73204:73227	970940	139	True				
ANR	971907	Identifier	R_ANAL_OP_TYPE_ILL		970940	0					
ANR	971908	Label	case R_ANAL_OP_TYPE_UNK :	2373:2:73231:73254	970940	140	True				
ANR	971909	Identifier	R_ANAL_OP_TYPE_UNK		970940	0					
ANR	971910	ExpressionStatement	bgcolor = r_cons_swap_ground ( pal -> invalid )	2374:3:73259:73302	970940	141	True				
ANR	971911	AssignmentExpression	bgcolor = r_cons_swap_ground ( pal -> invalid )		970940	0		=			
ANR	971912	Identifier	bgcolor		970940	0					
ANR	971913	CallExpression	r_cons_swap_ground ( pal -> invalid )		970940	1					
ANR	971914	Callee	r_cons_swap_ground		970940	0					
ANR	971915	Identifier	r_cons_swap_ground		970940	0					
ANR	971916	ArgumentList	pal -> invalid		970940	1					
ANR	971917	Argument	pal -> invalid		970940	0					
ANR	971918	PtrMemberAccess	pal -> invalid		970940	0					
ANR	971919	Identifier	pal		970940	0					
ANR	971920	Identifier	invalid		970940	1					
ANR	971921	ExpressionStatement	bgcolor_in_heap = true	2375:3:73307:73329	970940	142	True				
ANR	971922	AssignmentExpression	bgcolor_in_heap = true		970940	0		=			
ANR	971923	Identifier	bgcolor_in_heap		970940	0					
ANR	971924	Identifier	true		970940	1					
ANR	971925	ExpressionStatement	fgcolor = Color_WHITE	2376:3:73334:73355	970940	143	True				
ANR	971926	AssignmentExpression	fgcolor = Color_WHITE		970940	0		=			
ANR	971927	Identifier	fgcolor		970940	0					
ANR	971928	Identifier	Color_WHITE		970940	1					
ANR	971929	ExpressionStatement	"text = ""XX"""	2377:3:73360:73371	970940	144	True				
ANR	971930	AssignmentExpression	"text = ""XX"""		970940	0		=			
ANR	971931	Identifier	text		970940	0					
ANR	971932	PrimaryExpression	"""XX"""		970940	1					
ANR	971933	BreakStatement	break ;	2378:3:73376:73381	970940	145	True				
ANR	971934	Label	default :	2380:2:73391:73398	970940	146	True				
ANR	971935	Identifier	default		970940	0					
ANR	971936	ExpressionStatement	color = Color_BGCYAN	2381:3:73403:73423	970940	147	True				
ANR	971937	AssignmentExpression	color = Color_BGCYAN		970940	0		=			
ANR	971938	Identifier	color		970940	0					
ANR	971939	Identifier	Color_BGCYAN		970940	1					
ANR	971940	ExpressionStatement	fgcolor = Color_BLACK	2382:3:73428:73449	970940	148	True				
ANR	971941	AssignmentExpression	fgcolor = Color_BLACK		970940	0		=			
ANR	971942	Identifier	fgcolor		970940	0					
ANR	971943	Identifier	Color_BLACK		970940	1					
ANR	971944	BreakStatement	break ;	2383:3:73454:73459	970940	149	True				
ANR	971945	IdentifierDeclStatement	"int opsz = R_MAX ( op . size , 1 ) ;"	2386:2:73474:73503	970940	8	True				
ANR	971946	IdentifierDecl	"opsz = R_MAX ( op . size , 1 )"		970940	0					
ANR	971947	IdentifierDeclType	int		970940	0					
ANR	971948	Identifier	opsz		970940	1					
ANR	971949	AssignmentExpression	"opsz = R_MAX ( op . size , 1 )"		970940	2		=			
ANR	971950	Identifier	opsz		970940	0					
ANR	971951	CallExpression	"R_MAX ( op . size , 1 )"		970940	1					
ANR	971952	Callee	R_MAX		970940	0					
ANR	971953	Identifier	R_MAX		970940	0					
ANR	971954	ArgumentList	op . size		970940	1					
ANR	971955	Argument	op . size		970940	0					
ANR	971956	MemberAccess	op . size		970940	0					
ANR	971957	Identifier	op		970940	0					
ANR	971958	Identifier	size		970940	1					
ANR	971959	Argument	1		970940	1					
ANR	971960	PrimaryExpression	1		970940	0					
ANR	971961	IfStatement	if ( show_cursor )		970940	9					
ANR	971962	Condition	show_cursor	2387:6:73511:73521	970940	0	True				
ANR	971963	Identifier	show_cursor		970940	0					
ANR	971964	CompoundStatement		220:19:5405:5405	970940	1					
ANR	971965	IfStatement	if ( core -> print -> cur >= i && core -> print -> cur < i + opsz )		970940	0					
ANR	971966	Condition	core -> print -> cur >= i && core -> print -> cur < i + opsz	2388:7:73533:73584	970940	0	True				
ANR	971967	AndExpression	core -> print -> cur >= i && core -> print -> cur < i + opsz		970940	0		&&			
ANR	971968	RelationalExpression	core -> print -> cur >= i		970940	0		>=			
ANR	971969	PtrMemberAccess	core -> print -> cur		970940	0					
ANR	971970	PtrMemberAccess	core -> print		970940	0					
ANR	971971	Identifier	core		970940	0					
ANR	971972	Identifier	print		970940	1					
ANR	971973	Identifier	cur		970940	1					
ANR	971974	Identifier	i		970940	1					
ANR	971975	RelationalExpression	core -> print -> cur < i + opsz		970940	1		<			
ANR	971976	PtrMemberAccess	core -> print -> cur		970940	0					
ANR	971977	PtrMemberAccess	core -> print		970940	0					
ANR	971978	Identifier	core		970940	0					
ANR	971979	Identifier	print		970940	1					
ANR	971980	Identifier	cur		970940	1					
ANR	971981	AdditiveExpression	i + opsz		970940	1		+			
ANR	971982	Identifier	i		970940	0					
ANR	971983	Identifier	opsz		970940	1					
ANR	971984	CompoundStatement		221:61:5468:5468	970940	1					
ANR	971985	ExpressionStatement	"r_cons_invert ( 1 , 1 )"	2389:4:73593:73613	970940	0	True				
ANR	971986	CallExpression	"r_cons_invert ( 1 , 1 )"		970940	0					
ANR	971987	Callee	r_cons_invert		970940	0					
ANR	971988	Identifier	r_cons_invert		970940	0					
ANR	971989	ArgumentList	1		970940	1					
ANR	971990	Argument	1		970940	0					
ANR	971991	PrimaryExpression	1		970940	0					
ANR	971992	Argument	1		970940	1					
ANR	971993	PrimaryExpression	1		970940	0					
ANR	971994	IfStatement	if ( onechar )		970940	10					
ANR	971995	Condition	onechar	2392:6:73630:73636	970940	0	True				
ANR	971996	Identifier	onechar		970940	0					
ANR	971997	CompoundStatement		225:15:5520:5520	970940	1					
ANR	971998	IfStatement	if ( text )		970940	0					
ANR	971999	Condition	text	2393:7:73648:73651	970940	0	True				
ANR	972000	Identifier	text		970940	0					
ANR	972001	CompoundStatement		226:13:5535:5535	970940	1					
ANR	972002	IfStatement	if ( text [ 0 ] == '_' || text [ 0 ] == '.' )		970940	0					
ANR	972003	Condition	text [ 0 ] == '_' || text [ 0 ] == '.'	2394:8:73664:73695	970940	0	True				
ANR	972004	OrExpression	text [ 0 ] == '_' || text [ 0 ] == '.'		970940	0		||			
ANR	972005	EqualityExpression	text [ 0 ] == '_'		970940	0		==			
ANR	972006	ArrayIndexing	text [ 0 ]		970940	0					
ANR	972007	Identifier	text		970940	0					
ANR	972008	PrimaryExpression	0		970940	1					
ANR	972009	PrimaryExpression	'_'		970940	1					
ANR	972010	EqualityExpression	text [ 0 ] == '.'		970940	1		==			
ANR	972011	ArrayIndexing	text [ 0 ]		970940	0					
ANR	972012	Identifier	text		970940	0					
ANR	972013	PrimaryExpression	0		970940	1					
ANR	972014	PrimaryExpression	'.'		970940	1					
ANR	972015	CompoundStatement		227:42:5579:5579	970940	1					
ANR	972016	ExpressionStatement	buf [ 0 ] = text [ 1 ]	2395:5:73705:73721	970940	0	True				
ANR	972017	AssignmentExpression	buf [ 0 ] = text [ 1 ]		970940	0		=			
ANR	972018	ArrayIndexing	buf [ 0 ]		970940	0					
ANR	972019	Identifier	buf		970940	0					
ANR	972020	PrimaryExpression	0		970940	1					
ANR	972021	ArrayIndexing	text [ 1 ]		970940	1					
ANR	972022	Identifier	text		970940	0					
ANR	972023	PrimaryExpression	1		970940	1					
ANR	972024	ElseStatement	else		970940	0					
ANR	972025	CompoundStatement		229:11:5615:5615	970940	0					
ANR	972026	ExpressionStatement	buf [ 0 ] = text [ 0 ]	2397:5:73741:73757	970940	0	True				
ANR	972027	AssignmentExpression	buf [ 0 ] = text [ 0 ]		970940	0		=			
ANR	972028	ArrayIndexing	buf [ 0 ]		970940	0					
ANR	972029	Identifier	buf		970940	0					
ANR	972030	PrimaryExpression	0		970940	1					
ANR	972031	ArrayIndexing	text [ 0 ]		970940	1					
ANR	972032	Identifier	text		970940	0					
ANR	972033	PrimaryExpression	0		970940	1					
ANR	972034	ElseStatement	else		970940	0					
ANR	972035	CompoundStatement		232:10:5656:5656	970940	0					
ANR	972036	ExpressionStatement	buf [ 0 ] = '.'	2400:4:73781:73793	970940	0	True				
ANR	972037	AssignmentExpression	buf [ 0 ] = '.'		970940	0		=			
ANR	972038	ArrayIndexing	buf [ 0 ]		970940	0					
ANR	972039	Identifier	buf		970940	0					
ANR	972040	PrimaryExpression	0		970940	1					
ANR	972041	PrimaryExpression	'.'		970940	1					
ANR	972042	ExpressionStatement	buf [ 1 ] = 0	2402:3:73803:73813	970940	1	True				
ANR	972043	AssignmentExpression	buf [ 1 ] = 0		970940	0		=			
ANR	972044	ArrayIndexing	buf [ 1 ]		970940	0					
ANR	972045	Identifier	buf		970940	0					
ANR	972046	PrimaryExpression	1		970940	1					
ANR	972047	PrimaryExpression	0		970940	1					
ANR	972048	ExpressionStatement	text = buf	2403:3:73818:73828	970940	2	True				
ANR	972049	AssignmentExpression	text = buf		970940	0		=			
ANR	972050	Identifier	text		970940	0					
ANR	972051	Identifier	buf		970940	1					
ANR	972052	IfStatement	if ( show_color )		970940	11					
ANR	972053	Condition	show_color	2405:6:73840:73849	970940	0	True				
ANR	972054	Identifier	show_color		970940	0					
ANR	972055	CompoundStatement		238:18:5733:5733	970940	1					
ANR	972056	IfStatement	if ( ! text )		970940	0					
ANR	972057	Condition	! text	2406:7:73861:73865	970940	0	True				
ANR	972058	UnaryOperationExpression	! text		970940	0					
ANR	972059	UnaryOperator	!		970940	0					
ANR	972060	Identifier	text		970940	1					
ANR	972061	CompoundStatement		239:14:5749:5749	970940	1					
ANR	972062	ExpressionStatement	"text = ""  """	2407:4:73874:73885	970940	0	True				
ANR	972063	AssignmentExpression	"text = ""  """		970940	0		=			
ANR	972064	Identifier	text		970940	0					
ANR	972065	PrimaryExpression	"""  """		970940	1					
ANR	972066	ExpressionStatement	"r_cons_printf ( ""%s%s%s\\x1b[0m"" , bgcolor , fgcolor , text )"	2409:3:73895:73950	970940	1	True				
ANR	972067	CallExpression	"r_cons_printf ( ""%s%s%s\\x1b[0m"" , bgcolor , fgcolor , text )"		970940	0					
ANR	972068	Callee	r_cons_printf		970940	0					
ANR	972069	Identifier	r_cons_printf		970940	0					
ANR	972070	ArgumentList	"""%s%s%s\\x1b[0m"""		970940	1					
ANR	972071	Argument	"""%s%s%s\\x1b[0m"""		970940	0					
ANR	972072	PrimaryExpression	"""%s%s%s\\x1b[0m"""		970940	0					
ANR	972073	Argument	bgcolor		970940	1					
ANR	972074	Identifier	bgcolor		970940	0					
ANR	972075	Argument	fgcolor		970940	2					
ANR	972076	Identifier	fgcolor		970940	0					
ANR	972077	Argument	text		970940	3					
ANR	972078	Identifier	text		970940	0					
ANR	972079	ElseStatement	else		970940	0					
ANR	972080	CompoundStatement		243:9:5842:5842	970940	0					
ANR	972081	IfStatement	if ( text )		970940	0					
ANR	972082	Condition	text	2411:7:73970:73973	970940	0	True				
ANR	972083	Identifier	text		970940	0					
ANR	972084	CompoundStatement		244:13:5857:5857	970940	1					
ANR	972085	ExpressionStatement	r_cons_print ( text )	2412:4:73982:74001	970940	0	True				
ANR	972086	CallExpression	r_cons_print ( text )		970940	0					
ANR	972087	Callee	r_cons_print		970940	0					
ANR	972088	Identifier	r_cons_print		970940	0					
ANR	972089	ArgumentList	text		970940	1					
ANR	972090	Argument	text		970940	0					
ANR	972091	Identifier	text		970940	0					
ANR	972092	ElseStatement	else		970940	0					
ANR	972093	CompoundStatement		246:10:5894:5894	970940	0					
ANR	972094	ExpressionStatement	"r_cons_print ( ""  "" )"	2414:4:74019:74038	970940	0	True				
ANR	972095	CallExpression	"r_cons_print ( ""  "" )"		970940	0					
ANR	972096	Callee	r_cons_print		970940	0					
ANR	972097	Identifier	r_cons_print		970940	0					
ANR	972098	ArgumentList	"""  """		970940	1					
ANR	972099	Argument	"""  """		970940	0					
ANR	972100	PrimaryExpression	"""  """		970940	0					
ANR	972101	IfStatement	if ( show_cursor )		970940	12					
ANR	972102	Condition	show_cursor	2417:6:74055:74065	970940	0	True				
ANR	972103	Identifier	show_cursor		970940	0					
ANR	972104	CompoundStatement		250:19:5949:5949	970940	1					
ANR	972105	IfStatement	if ( core -> print -> cur >= i && core -> print -> cur < i + opsz )		970940	0					
ANR	972106	Condition	core -> print -> cur >= i && core -> print -> cur < i + opsz	2418:7:74077:74128	970940	0	True				
ANR	972107	AndExpression	core -> print -> cur >= i && core -> print -> cur < i + opsz		970940	0		&&			
ANR	972108	RelationalExpression	core -> print -> cur >= i		970940	0		>=			
ANR	972109	PtrMemberAccess	core -> print -> cur		970940	0					
ANR	972110	PtrMemberAccess	core -> print		970940	0					
ANR	972111	Identifier	core		970940	0					
ANR	972112	Identifier	print		970940	1					
ANR	972113	Identifier	cur		970940	1					
ANR	972114	Identifier	i		970940	1					
ANR	972115	RelationalExpression	core -> print -> cur < i + opsz		970940	1		<			
ANR	972116	PtrMemberAccess	core -> print -> cur		970940	0					
ANR	972117	PtrMemberAccess	core -> print		970940	0					
ANR	972118	Identifier	core		970940	0					
ANR	972119	Identifier	print		970940	1					
ANR	972120	Identifier	cur		970940	1					
ANR	972121	AdditiveExpression	i + opsz		970940	1		+			
ANR	972122	Identifier	i		970940	0					
ANR	972123	Identifier	opsz		970940	1					
ANR	972124	CompoundStatement		251:61:6012:6012	970940	1					
ANR	972125	ExpressionStatement	"r_cons_invert ( 0 , 1 )"	2419:4:74137:74157	970940	0	True				
ANR	972126	CallExpression	"r_cons_invert ( 0 , 1 )"		970940	0					
ANR	972127	Callee	r_cons_invert		970940	0					
ANR	972128	Identifier	r_cons_invert		970940	0					
ANR	972129	ArgumentList	0		970940	1					
ANR	972130	Argument	0		970940	0					
ANR	972131	PrimaryExpression	0		970940	0					
ANR	972132	Argument	1		970940	1					
ANR	972133	PrimaryExpression	1		970940	0					
ANR	972134	ExpressionStatement	i += opsz	2422:2:74170:74179	970940	13	True				
ANR	972135	AssignmentExpression	i += opsz		970940	0		+=			
ANR	972136	Identifier	i		970940	0					
ANR	972137	Identifier	opsz		970940	1					
ANR	972138	ExpressionStatement	r_anal_op_fini ( & op )	2423:2:74183:74203	970940	14	True				
ANR	972139	CallExpression	r_anal_op_fini ( & op )		970940	0					
ANR	972140	Callee	r_anal_op_fini		970940	0					
ANR	972141	Identifier	r_anal_op_fini		970940	0					
ANR	972142	ArgumentList	& op		970940	1					
ANR	972143	Argument	& op		970940	0					
ANR	972144	UnaryOperationExpression	& op		970940	0					
ANR	972145	UnaryOperator	&		970940	0					
ANR	972146	Identifier	op		970940	1					
ANR	972147	ExpressionStatement	"r_cons_printf ( ""  %d\\n"" , i - oi )"	2425:1:74209:74241	970940	19	True				
ANR	972148	CallExpression	"r_cons_printf ( ""  %d\\n"" , i - oi )"		970940	0					
ANR	972149	Callee	r_cons_printf		970940	0					
ANR	972150	Identifier	r_cons_printf		970940	0					
ANR	972151	ArgumentList	"""  %d\\n"""		970940	1					
ANR	972152	Argument	"""  %d\\n"""		970940	0					
ANR	972153	PrimaryExpression	"""  %d\\n"""		970940	0					
ANR	972154	Argument	i - oi		970940	1					
ANR	972155	AdditiveExpression	i - oi		970940	0		-			
ANR	972156	Identifier	i		970940	0					
ANR	972157	Identifier	oi		970940	1					
ANR	972158	IfStatement	if ( bgcolor_in_heap )		970940	20					
ANR	972159	Condition	bgcolor_in_heap	2426:5:74248:74262	970940	0	True				
ANR	972160	Identifier	bgcolor_in_heap		970940	0					
ANR	972161	CompoundStatement		259:22:6146:6146	970940	1					
ANR	972162	ExpressionStatement	free ( bgcolor )	2427:2:74269:74283	970940	0	True				
ANR	972163	CallExpression	free ( bgcolor )		970940	0					
ANR	972164	Callee	free		970940	0					
ANR	972165	Identifier	free		970940	0					
ANR	972166	ArgumentList	bgcolor		970940	1					
ANR	972167	Argument	bgcolor		970940	0					
ANR	972168	Identifier	bgcolor		970940	0					
ANR	972169	IfStatement	if ( data != core -> block )		970940	21					
ANR	972170	Condition	data != core -> block	2429:5:74293:74311	970940	0	True				
ANR	972171	EqualityExpression	data != core -> block		970940	0		!=			
ANR	972172	Identifier	data		970940	0					
ANR	972173	PtrMemberAccess	core -> block		970940	1					
ANR	972174	Identifier	core		970940	0					
ANR	972175	Identifier	block		970940	1					
ANR	972176	CompoundStatement		262:26:6195:6195	970940	1					
ANR	972177	ExpressionStatement	free ( data )	2430:2:74318:74329	970940	0	True				
ANR	972178	CallExpression	free ( data )		970940	0					
ANR	972179	Callee	free		970940	0					
ANR	972180	Identifier	free		970940	0					
ANR	972181	ArgumentList	data		970940	1					
ANR	972182	Argument	data		970940	0					
ANR	972183	Identifier	data		970940	0					
ANR	972184	ReturnStatement	return true ;	2433:1:74336:74347	970940	22	True				
ANR	972185	Identifier	true		970940	0					
ANR	972186	ReturnType	static int		970940	1					
ANR	972187	Identifier	cmd_print_pxA		970940	2					
ANR	972188	ParameterList	"RCore * core , int len , const char * input"		970940	3					
ANR	972189	Parameter	RCore * core	2168:25:68077:68087	970940	0	True				
ANR	972190	ParameterType	RCore *		970940	0					
ANR	972191	Identifier	core		970940	1					
ANR	972192	Parameter	int len	2168:38:68090:68096	970940	1	True				
ANR	972193	ParameterType	int		970940	0					
ANR	972194	Identifier	len		970940	1					
ANR	972195	Parameter	const char * input	2168:47:68099:68115	970940	2	True				
ANR	972196	ParameterType	const char *		970940	0					
ANR	972197	Identifier	input		970940	1					
ANR	972198	CFGEntryNode	ENTRY		970940		True				
ANR	972199	CFGExitNode	EXIT		970940		True				
ANR	972200	Symbol	show_offset		970940						
ANR	972201	Symbol	data		970940						
ANR	972202	Symbol	pal -> push		970940						
ANR	972203	Symbol	* input		970940						
ANR	972204	Symbol	core -> offset		970940						
ANR	972205	Symbol	& op		970940						
ANR	972206	Symbol	Color_BGRED		970940						
ANR	972207	Symbol	pal -> invalid		970940						
ANR	972208	Symbol	strlen		970940						
ANR	972209	Symbol	pal -> trap		970940						
ANR	972210	Symbol	len		970940						
ANR	972211	Symbol	show_color		970940						
ANR	972212	Symbol	pal		970940						
ANR	972213	Symbol	text		970940						
ANR	972214	Symbol	pal -> nop		970940						
ANR	972215	Symbol	bgcolor_in_heap		970940						
ANR	972216	Symbol	pal -> pop		970940						
ANR	972217	Symbol	r_anal_op		970940						
ANR	972218	Symbol	core -> blocksize		970940						
ANR	972219	Symbol	pal -> swi		970940						
ANR	972220	Symbol	* buf		970940						
ANR	972221	Symbol	NULL		970940						
ANR	972222	Symbol	core -> block		970940						
ANR	972223	Symbol	Color_YELLOW		970940						
ANR	972224	Symbol	pal -> bin		970940						
ANR	972225	Symbol	show_cursor		970940						
ANR	972226	Symbol	datalen		970940						
ANR	972227	Symbol	core		970940						
ANR	972228	Symbol	input		970940						
ANR	972229	Symbol	bgcolor		970940						
ANR	972230	Symbol	pal -> math		970940						
ANR	972231	Symbol	core -> print -> cur		970940						
ANR	972232	Symbol	r_config_get_i		970940						
ANR	972233	Symbol	true		970940						
ANR	972234	Symbol	& core -> cons -> context -> pal		970940						
ANR	972235	Symbol	core -> print		970940						
ANR	972236	Symbol	op . size		970940						
ANR	972237	Symbol	opsz		970940						
ANR	972238	Symbol	core -> cons -> context		970940						
ANR	972239	Symbol	color		970940						
ANR	972240	Symbol	* core -> cons		970940						
ANR	972241	Symbol	* pal		970940						
ANR	972242	Symbol	* text		970940						
ANR	972243	Symbol	* core		970940						
ANR	972244	Symbol	Color_BGBLACK		970940						
ANR	972245	Symbol	pal -> cjmp		970940						
ANR	972246	Symbol	Color_BGCYAN		970940						
ANR	972247	Symbol	core -> anal		970940						
ANR	972248	Symbol	R_ANAL_OP_MASK_BASIC		970940						
ANR	972249	Symbol	pal -> ret		970940						
ANR	972250	Symbol	Color_WHITE		970940						
ANR	972251	Symbol	core -> cons		970940						
ANR	972252	Symbol	pal -> mov		970940						
ANR	972253	Symbol	core -> io		970940						
ANR	972254	Symbol	offstr		970940						
ANR	972255	Symbol	oi		970940						
ANR	972256	Symbol	pal -> jmp		970940						
ANR	972257	Symbol	cols		970940						
ANR	972258	Symbol	* * core		970940						
ANR	972259	Symbol	core -> config		970940						
ANR	972260	Symbol	op		970940						
ANR	972261	Symbol	malloc		970940						
ANR	972262	Symbol	c		970940						
ANR	972263	Symbol	op . type		970940						
ANR	972264	Symbol	core -> cons -> rows		970940						
ANR	972265	Symbol	pal -> cmp		970940						
ANR	972266	Symbol	fgcolor		970940						
ANR	972267	Symbol	false		970940						
ANR	972268	Symbol	i		970940						
ANR	972269	Symbol	* core -> print		970940						
ANR	972270	Symbol	buf		970940						
ANR	972271	Symbol	r_cons_swap_ground		970940						
ANR	972272	Symbol	pal -> call		970940						
ANR	972273	Symbol	R_MAX		970940						
ANR	972274	Symbol	onechar		970940						
ANR	972275	Symbol	core -> print -> cur_enabled		970940						
ANR	972276	Symbol	Color_BLACK		970940						
ANR	972277	Function	cmd_print_op	2436:0:74352:75059							
ANR	972278	FunctionDef	"cmd_print_op (RCore * core , const char * input)"		972277	0					
ANR	972279	CompoundStatement		2436:57:74409:75059	972277	0					
ANR	972280	IdentifierDeclStatement	ut8 * buf ;	2437:1:74412:74420	972277	0	True				
ANR	972281	IdentifierDecl	* buf		972277	0					
ANR	972282	IdentifierDeclType	ut8 *		972277	0					
ANR	972283	Identifier	buf		972277	1					
ANR	972284	IfStatement	if ( ! input [ 0 ] )		972277	1					
ANR	972285	Condition	! input [ 0 ]	2438:5:74427:74435	972277	0	True				
ANR	972286	UnaryOperationExpression	! input [ 0 ]		972277	0					
ANR	972287	UnaryOperator	!		972277	0					
ANR	972288	ArrayIndexing	input [ 0 ]		972277	1					
ANR	972289	Identifier	input		972277	0					
ANR	972290	PrimaryExpression	0		972277	1					
ANR	972291	ReturnStatement	return ;	2439:2:74440:74446	972277	1	True				
ANR	972292	SwitchStatement	switch ( input [ 1 ] )		972277	2					
ANR	972293	Condition	input [ 1 ]	2440:9:74457:74464	972277	0	True				
ANR	972294	ArrayIndexing	input [ 1 ]		972277	0					
ANR	972295	Identifier	input		972277	0					
ANR	972296	PrimaryExpression	1		972277	1					
ANR	972297	CompoundStatement		5:19:57:57	972277	1					
ANR	972298	Label	case 'a' :	2441:1:74470:74478	972277	0	True				
ANR	972299	Label	case 's' :	2442:1:74481:74489	972277	1	True				
ANR	972300	Label	case 'A' :	2443:1:74492:74500	972277	2	True				
ANR	972301	Label	case 'x' :	2444:1:74503:74511	972277	3	True				
ANR	972302	Label	case 'r' :	2445:1:74514:74522	972277	4	True				
ANR	972303	Label	case 'l' :	2446:1:74525:74533	972277	5	True				
ANR	972304	Label	case 'm' :	2447:1:74536:74544	972277	6	True				
ANR	972305	Label	case 'd' :	2448:1:74547:74555	972277	7	True				
ANR	972306	Label	case 'o' :	2449:1:74558:74566	972277	8	True				
ANR	972307	Label	case '2' :	2450:1:74569:74577	972277	9	True				
ANR	972308	Label	case '4' :	2451:1:74580:74588	972277	10	True				
ANR	972309	IfStatement	if ( input [ 2 ] )		972277	11					
ANR	972310	Condition	input [ 2 ]	2452:6:74596:74603	972277	0	True				
ANR	972311	ArrayIndexing	input [ 2 ]		972277	0					
ANR	972312	Identifier	input		972277	0					
ANR	972313	PrimaryExpression	2		972277	1					
ANR	972314	CompoundStatement		17:16:196:196	972277	1					
ANR	972315	ExpressionStatement	"buf = r_core_transform_op ( core , input + 3 , input [ 1 ] )"	2453:3:74634:74685	972277	0	True				
ANR	972316	AssignmentExpression	"buf = r_core_transform_op ( core , input + 3 , input [ 1 ] )"		972277	0		=			
ANR	972317	Identifier	buf		972277	0					
ANR	972318	CallExpression	"r_core_transform_op ( core , input + 3 , input [ 1 ] )"		972277	1					
ANR	972319	Callee	r_core_transform_op		972277	0					
ANR	972320	Identifier	r_core_transform_op		972277	0					
ANR	972321	ArgumentList	core		972277	1					
ANR	972322	Argument	core		972277	0					
ANR	972323	Identifier	core		972277	0					
ANR	972324	Argument	input + 3		972277	1					
ANR	972325	AdditiveExpression	input + 3		972277	0		+			
ANR	972326	Identifier	input		972277	0					
ANR	972327	PrimaryExpression	3		972277	1					
ANR	972328	Argument	input [ 1 ]		972277	2					
ANR	972329	ArrayIndexing	input [ 1 ]		972277	0					
ANR	972330	Identifier	input		972277	0					
ANR	972331	PrimaryExpression	1		972277	1					
ANR	972332	ElseStatement	else		972277	0					
ANR	972333	CompoundStatement		19:9:286:286	972277	0					
ANR	972334	ExpressionStatement	"buf = r_core_transform_op ( core , NULL , input [ 1 ] )"	2455:3:74734:74782	972277	0	True				
ANR	972335	AssignmentExpression	"buf = r_core_transform_op ( core , NULL , input [ 1 ] )"		972277	0		=			
ANR	972336	Identifier	buf		972277	0					
ANR	972337	CallExpression	"r_core_transform_op ( core , NULL , input [ 1 ] )"		972277	1					
ANR	972338	Callee	r_core_transform_op		972277	0					
ANR	972339	Identifier	r_core_transform_op		972277	0					
ANR	972340	ArgumentList	core		972277	1					
ANR	972341	Argument	core		972277	0					
ANR	972342	Identifier	core		972277	0					
ANR	972343	Argument	NULL		972277	1					
ANR	972344	Identifier	NULL		972277	0					
ANR	972345	Argument	input [ 1 ]		972277	2					
ANR	972346	ArrayIndexing	input [ 1 ]		972277	0					
ANR	972347	Identifier	input		972277	0					
ANR	972348	PrimaryExpression	1		972277	1					
ANR	972349	BreakStatement	break ;	2457:2:74790:74795	972277	12	True				
ANR	972350	Label	case 'n' :	2458:1:74798:74806	972277	13	True				
ANR	972351	ExpressionStatement	"buf = r_core_transform_op ( core , ""ff"" , 'x' )"	2459:2:74810:74853	972277	14	True				
ANR	972352	AssignmentExpression	"buf = r_core_transform_op ( core , ""ff"" , 'x' )"		972277	0		=			
ANR	972353	Identifier	buf		972277	0					
ANR	972354	CallExpression	"r_core_transform_op ( core , ""ff"" , 'x' )"		972277	1					
ANR	972355	Callee	r_core_transform_op		972277	0					
ANR	972356	Identifier	r_core_transform_op		972277	0					
ANR	972357	ArgumentList	core		972277	1					
ANR	972358	Argument	core		972277	0					
ANR	972359	Identifier	core		972277	0					
ANR	972360	Argument	"""ff"""		972277	1					
ANR	972361	PrimaryExpression	"""ff"""		972277	0					
ANR	972362	Argument	'x'		972277	2					
ANR	972363	PrimaryExpression	'x'		972277	0					
ANR	972364	BreakStatement	break ;	2460:2:74857:74862	972277	15	True				
ANR	972365	Label	case '\\0' :	2461:1:74865:74874	972277	16	True				
ANR	972366	Label	case '?' :	2462:1:74877:74885	972277	17	True				
ANR	972367	Label	default :	2463:1:74888:74895	972277	18	True				
ANR	972368	Identifier	default		972277	0					
ANR	972369	ExpressionStatement	"r_core_cmd_help ( core , help_msg_po )"	2464:2:74899:74934	972277	19	True				
ANR	972370	CallExpression	"r_core_cmd_help ( core , help_msg_po )"		972277	0					
ANR	972371	Callee	r_core_cmd_help		972277	0					
ANR	972372	Identifier	r_core_cmd_help		972277	0					
ANR	972373	ArgumentList	core		972277	1					
ANR	972374	Argument	core		972277	0					
ANR	972375	Identifier	core		972277	0					
ANR	972376	Argument	help_msg_po		972277	1					
ANR	972377	Identifier	help_msg_po		972277	0					
ANR	972378	ReturnStatement	return ;	2465:2:74938:74944	972277	20	True				
ANR	972379	IfStatement	if ( buf )		972277	3					
ANR	972380	Condition	buf	2467:5:74954:74956	972277	0	True				
ANR	972381	Identifier	buf		972277	0					
ANR	972382	CompoundStatement		32:10:549:549	972277	1					
ANR	972383	ExpressionStatement	"r_print_hexdump ( core -> print , core -> offset , buf , core -> blocksize , 16 , 1 , 1 )"	2468:2:74963:75040	972277	0	True				
ANR	972384	CallExpression	"r_print_hexdump ( core -> print , core -> offset , buf , core -> blocksize , 16 , 1 , 1 )"		972277	0					
ANR	972385	Callee	r_print_hexdump		972277	0					
ANR	972386	Identifier	r_print_hexdump		972277	0					
ANR	972387	ArgumentList	core -> print		972277	1					
ANR	972388	Argument	core -> print		972277	0					
ANR	972389	PtrMemberAccess	core -> print		972277	0					
ANR	972390	Identifier	core		972277	0					
ANR	972391	Identifier	print		972277	1					
ANR	972392	Argument	core -> offset		972277	1					
ANR	972393	PtrMemberAccess	core -> offset		972277	0					
ANR	972394	Identifier	core		972277	0					
ANR	972395	Identifier	offset		972277	1					
ANR	972396	Argument	buf		972277	2					
ANR	972397	Identifier	buf		972277	0					
ANR	972398	Argument	core -> blocksize		972277	3					
ANR	972399	PtrMemberAccess	core -> blocksize		972277	0					
ANR	972400	Identifier	core		972277	0					
ANR	972401	Identifier	blocksize		972277	1					
ANR	972402	Argument	16		972277	4					
ANR	972403	PrimaryExpression	16		972277	0					
ANR	972404	Argument	1		972277	5					
ANR	972405	PrimaryExpression	1		972277	0					
ANR	972406	Argument	1		972277	6					
ANR	972407	PrimaryExpression	1		972277	0					
ANR	972408	ExpressionStatement	free ( buf )	2470:2:75044:75054	972277	1	True				
ANR	972409	CallExpression	free ( buf )		972277	0					
ANR	972410	Callee	free		972277	0					
ANR	972411	Identifier	free		972277	0					
ANR	972412	ArgumentList	buf		972277	1					
ANR	972413	Argument	buf		972277	0					
ANR	972414	Identifier	buf		972277	0					
ANR	972415	ReturnType	static void		972277	1					
ANR	972416	Identifier	cmd_print_op		972277	2					
ANR	972417	ParameterList	"RCore * core , const char * input"		972277	3					
ANR	972418	Parameter	RCore * core	2436:25:74377:74387	972277	0	True				
ANR	972419	ParameterType	RCore *		972277	0					
ANR	972420	Identifier	core		972277	1					
ANR	972421	Parameter	const char * input	2436:38:74390:74406	972277	1	True				
ANR	972422	ParameterType	const char *		972277	0					
ANR	972423	Identifier	input		972277	1					
ANR	972424	CFGEntryNode	ENTRY		972277		True				
ANR	972425	CFGExitNode	EXIT		972277		True				
ANR	972426	Symbol	core -> blocksize		972277						
ANR	972427	Symbol	core		972277						
ANR	972428	Symbol	input		972277						
ANR	972429	Symbol	buf		972277						
ANR	972430	Symbol	help_msg_po		972277						
ANR	972431	Symbol	NULL		972277						
ANR	972432	Symbol	r_core_transform_op		972277						
ANR	972433	Symbol	* input		972277						
ANR	972434	Symbol	* core		972277						
ANR	972435	Symbol	core -> offset		972277						
ANR	972436	Symbol	core -> print		972277						
ANR	972437	Function	printraw	2474:0:75062:75487							
ANR	972438	FunctionDef	"printraw (RCore * core , int len , int mode)"		972437	0					
ANR	972439	CompoundStatement		2474:53:75115:75487	972437	0					
ANR	972440	IdentifierDeclStatement	int obsz = core -> blocksize ;	2475:1:75118:75144	972437	0	True				
ANR	972441	IdentifierDecl	obsz = core -> blocksize		972437	0					
ANR	972442	IdentifierDeclType	int		972437	0					
ANR	972443	Identifier	obsz		972437	1					
ANR	972444	AssignmentExpression	obsz = core -> blocksize		972437	2		=			
ANR	972445	Identifier	obsz		972437	0					
ANR	972446	PtrMemberAccess	core -> blocksize		972437	1					
ANR	972447	Identifier	core		972437	0					
ANR	972448	Identifier	blocksize		972437	1					
ANR	972449	IdentifierDeclStatement	int restore_obsz = 0 ;	2476:1:75147:75167	972437	1	True				
ANR	972450	IdentifierDecl	restore_obsz = 0		972437	0					
ANR	972451	IdentifierDeclType	int		972437	0					
ANR	972452	Identifier	restore_obsz		972437	1					
ANR	972453	AssignmentExpression	restore_obsz = 0		972437	2		=			
ANR	972454	Identifier	restore_obsz		972437	0					
ANR	972455	PrimaryExpression	0		972437	1					
ANR	972456	IfStatement	if ( len != obsz )		972437	2					
ANR	972457	Condition	len != obsz	2477:5:75174:75184	972437	0	True				
ANR	972458	EqualityExpression	len != obsz		972437	0		!=			
ANR	972459	Identifier	len		972437	0					
ANR	972460	Identifier	obsz		972437	1					
ANR	972461	CompoundStatement		4:18:71:71	972437	1					
ANR	972462	IfStatement	"if ( ! r_core_block_size ( core , len ) )"		972437	0					
ANR	972463	Condition	"! r_core_block_size ( core , len )"	2478:6:75195:75224	972437	0	True				
ANR	972464	UnaryOperationExpression	"! r_core_block_size ( core , len )"		972437	0					
ANR	972465	UnaryOperator	!		972437	0					
ANR	972466	CallExpression	"r_core_block_size ( core , len )"		972437	1					
ANR	972467	Callee	r_core_block_size		972437	0					
ANR	972468	Identifier	r_core_block_size		972437	0					
ANR	972469	ArgumentList	core		972437	1					
ANR	972470	Argument	core		972437	0					
ANR	972471	Identifier	core		972437	0					
ANR	972472	Argument	len		972437	1					
ANR	972473	Identifier	len		972437	0					
ANR	972474	CompoundStatement		5:38:111:111	972437	1					
ANR	972475	ExpressionStatement	len = core -> blocksize	2479:3:75232:75253	972437	0	True				
ANR	972476	AssignmentExpression	len = core -> blocksize		972437	0		=			
ANR	972477	Identifier	len		972437	0					
ANR	972478	PtrMemberAccess	core -> blocksize		972437	1					
ANR	972479	Identifier	core		972437	0					
ANR	972480	Identifier	blocksize		972437	1					
ANR	972481	ElseStatement	else		972437	0					
ANR	972482	CompoundStatement		7:9:148:148	972437	0					
ANR	972483	ExpressionStatement	restore_obsz = 1	2481:3:75269:75285	972437	0	True				
ANR	972484	AssignmentExpression	restore_obsz = 1		972437	0		=			
ANR	972485	Identifier	restore_obsz		972437	0					
ANR	972486	PrimaryExpression	1		972437	1					
ANR	972487	ExpressionStatement	"r_print_raw ( core -> print , core -> offset , core -> block , len , mode )"	2484:1:75295:75358	972437	3	True				
ANR	972488	CallExpression	"r_print_raw ( core -> print , core -> offset , core -> block , len , mode )"		972437	0					
ANR	972489	Callee	r_print_raw		972437	0					
ANR	972490	Identifier	r_print_raw		972437	0					
ANR	972491	ArgumentList	core -> print		972437	1					
ANR	972492	Argument	core -> print		972437	0					
ANR	972493	PtrMemberAccess	core -> print		972437	0					
ANR	972494	Identifier	core		972437	0					
ANR	972495	Identifier	print		972437	1					
ANR	972496	Argument	core -> offset		972437	1					
ANR	972497	PtrMemberAccess	core -> offset		972437	0					
ANR	972498	Identifier	core		972437	0					
ANR	972499	Identifier	offset		972437	1					
ANR	972500	Argument	core -> block		972437	2					
ANR	972501	PtrMemberAccess	core -> block		972437	0					
ANR	972502	Identifier	core		972437	0					
ANR	972503	Identifier	block		972437	1					
ANR	972504	Argument	len		972437	3					
ANR	972505	Identifier	len		972437	0					
ANR	972506	Argument	mode		972437	4					
ANR	972507	Identifier	mode		972437	0					
ANR	972508	IfStatement	if ( restore_obsz )		972437	4					
ANR	972509	Condition	restore_obsz	2485:5:75365:75376	972437	0	True				
ANR	972510	Identifier	restore_obsz		972437	0					
ANR	972511	CompoundStatement		12:19:263:263	972437	1					
ANR	972512	ExpressionStatement	"( void ) r_core_block_size ( core , obsz )"	2486:2:75383:75420	972437	0	True				
ANR	972513	CastExpression	"( void ) r_core_block_size ( core , obsz )"		972437	0					
ANR	972514	CastTarget	void		972437	0					
ANR	972515	CallExpression	"r_core_block_size ( core , obsz )"		972437	1					
ANR	972516	Callee	r_core_block_size		972437	0					
ANR	972517	Identifier	r_core_block_size		972437	0					
ANR	972518	ArgumentList	core		972437	1					
ANR	972519	Argument	core		972437	0					
ANR	972520	Identifier	core		972437	0					
ANR	972521	Argument	obsz		972437	1					
ANR	972522	Identifier	obsz		972437	0					
ANR	972523	ExpressionStatement	core -> cons -> newline = core -> cmd_in_backticks ? false : true	2488:1:75426:75485	972437	5	True				
ANR	972524	AssignmentExpression	core -> cons -> newline = core -> cmd_in_backticks ? false : true		972437	0		=			
ANR	972525	PtrMemberAccess	core -> cons -> newline		972437	0					
ANR	972526	PtrMemberAccess	core -> cons		972437	0					
ANR	972527	Identifier	core		972437	0					
ANR	972528	Identifier	cons		972437	1					
ANR	972529	Identifier	newline		972437	1					
ANR	972530	ConditionalExpression	core -> cmd_in_backticks ? false : true		972437	1					
ANR	972531	Condition	core -> cmd_in_backticks		972437	0					
ANR	972532	PtrMemberAccess	core -> cmd_in_backticks		972437	0					
ANR	972533	Identifier	core		972437	0					
ANR	972534	Identifier	cmd_in_backticks		972437	1					
ANR	972535	Identifier	false		972437	1					
ANR	972536	Identifier	true		972437	2					
ANR	972537	ReturnType	static void		972437	1					
ANR	972538	Identifier	printraw		972437	2					
ANR	972539	ParameterList	"RCore * core , int len , int mode"		972437	3					
ANR	972540	Parameter	RCore * core	2474:21:75083:75093	972437	0	True				
ANR	972541	ParameterType	RCore *		972437	0					
ANR	972542	Identifier	core		972437	1					
ANR	972543	Parameter	int len	2474:34:75096:75102	972437	1	True				
ANR	972544	ParameterType	int		972437	0					
ANR	972545	Identifier	len		972437	1					
ANR	972546	Parameter	int mode	2474:43:75105:75112	972437	2	True				
ANR	972547	ParameterType	int		972437	0					
ANR	972548	Identifier	mode		972437	1					
ANR	972549	CFGEntryNode	ENTRY		972437		True				
ANR	972550	CFGExitNode	EXIT		972437		True				
ANR	972551	Symbol	core -> blocksize		972437						
ANR	972552	Symbol	r_core_block_size		972437						
ANR	972553	Symbol	core -> block		972437						
ANR	972554	Symbol	* core -> cons		972437						
ANR	972555	Symbol	* core		972437						
ANR	972556	Symbol	core -> cons -> newline		972437						
ANR	972557	Symbol	false		972437						
ANR	972558	Symbol	obsz		972437						
ANR	972559	Symbol	core -> offset		972437						
ANR	972560	Symbol	restore_obsz		972437						
ANR	972561	Symbol	mode		972437						
ANR	972562	Symbol	core		972437						
ANR	972563	Symbol	core -> cons		972437						
ANR	972564	Symbol	len		972437						
ANR	972565	Symbol	true		972437						
ANR	972566	Symbol	core -> cmd_in_backticks		972437						
ANR	972567	Symbol	core -> print		972437						
ANR	972568	Symbol	* * core		972437						
ANR	972569	Function	_handle_call	2492:0:75491:76048							
ANR	972570	FunctionDef	"_handle_call (RCore * core , char * line , char * * str)"		972569	0					
ANR	972571	CompoundStatement		2492:62:75553:76048	972569	0					
ANR	972572	IfStatement	if ( ! core || ! core -> assembler || ! core -> assembler -> cur )		972569	0					
ANR	972573	Condition	! core || ! core -> assembler || ! core -> assembler -> cur	2493:5:75560:75609	972569	0	True				
ANR	972574	OrExpression	! core || ! core -> assembler || ! core -> assembler -> cur		972569	0		||			
ANR	972575	UnaryOperationExpression	! core		972569	0					
ANR	972576	UnaryOperator	!		972569	0					
ANR	972577	Identifier	core		972569	1					
ANR	972578	OrExpression	! core -> assembler || ! core -> assembler -> cur		972569	1		||			
ANR	972579	UnaryOperationExpression	! core -> assembler		972569	0					
ANR	972580	UnaryOperator	!		972569	0					
ANR	972581	PtrMemberAccess	core -> assembler		972569	1					
ANR	972582	Identifier	core		972569	0					
ANR	972583	Identifier	assembler		972569	1					
ANR	972584	UnaryOperationExpression	! core -> assembler -> cur		972569	1					
ANR	972585	UnaryOperator	!		972569	0					
ANR	972586	PtrMemberAccess	core -> assembler -> cur		972569	1					
ANR	972587	PtrMemberAccess	core -> assembler		972569	0					
ANR	972588	Identifier	core		972569	0					
ANR	972589	Identifier	assembler		972569	1					
ANR	972590	Identifier	cur		972569	1					
ANR	972591	CompoundStatement		2:57:58:58	972569	1					
ANR	972592	ExpressionStatement	* str = NULL	2494:2:75616:75627	972569	0	True				
ANR	972593	AssignmentExpression	* str = NULL		972569	0		=			
ANR	972594	UnaryOperationExpression	* str		972569	0					
ANR	972595	UnaryOperator	*		972569	0					
ANR	972596	Identifier	str		972569	1					
ANR	972597	Identifier	NULL		972569	1					
ANR	972598	ReturnStatement	return ;	2495:2:75631:75637	972569	1	True				
ANR	972599	IfStatement	"if ( strstr ( core -> assembler -> cur -> arch , ""x86"" ) )"		972569	1					
ANR	972600	Condition	"strstr ( core -> assembler -> cur -> arch , ""x86"" )"	2497:5:75647:75688	972569	0	True				
ANR	972601	CallExpression	"strstr ( core -> assembler -> cur -> arch , ""x86"" )"		972569	0					
ANR	972602	Callee	strstr		972569	0					
ANR	972603	Identifier	strstr		972569	0					
ANR	972604	ArgumentList	core -> assembler -> cur -> arch		972569	1					
ANR	972605	Argument	core -> assembler -> cur -> arch		972569	0					
ANR	972606	PtrMemberAccess	core -> assembler -> cur -> arch		972569	0					
ANR	972607	PtrMemberAccess	core -> assembler -> cur		972569	0					
ANR	972608	PtrMemberAccess	core -> assembler		972569	0					
ANR	972609	Identifier	core		972569	0					
ANR	972610	Identifier	assembler		972569	1					
ANR	972611	Identifier	cur		972569	1					
ANR	972612	Identifier	arch		972569	1					
ANR	972613	Argument	"""x86"""		972569	1					
ANR	972614	PrimaryExpression	"""x86"""		972569	0					
ANR	972615	CompoundStatement		6:49:137:137	972569	1					
ANR	972616	ExpressionStatement	"* str = strstr ( line , ""call "" )"	2498:2:75695:75724	972569	0	True				
ANR	972617	AssignmentExpression	"* str = strstr ( line , ""call "" )"		972569	0		=			
ANR	972618	UnaryOperationExpression	* str		972569	0					
ANR	972619	UnaryOperator	*		972569	0					
ANR	972620	Identifier	str		972569	1					
ANR	972621	CallExpression	"strstr ( line , ""call "" )"		972569	1					
ANR	972622	Callee	strstr		972569	0					
ANR	972623	Identifier	strstr		972569	0					
ANR	972624	ArgumentList	line		972569	1					
ANR	972625	Argument	line		972569	0					
ANR	972626	Identifier	line		972569	0					
ANR	972627	Argument	"""call """		972569	1					
ANR	972628	PrimaryExpression	"""call """		972569	0					
ANR	972629	ElseStatement	else		972569	0					
ANR	972630	IfStatement	"if ( strstr ( core -> assembler -> cur -> arch , ""arm"" ) )"		972569	0					
ANR	972631	Condition	"strstr ( core -> assembler -> cur -> arch , ""arm"" )"	2499:12:75738:75779	972569	0	True				
ANR	972632	CallExpression	"strstr ( core -> assembler -> cur -> arch , ""arm"" )"		972569	0					
ANR	972633	Callee	strstr		972569	0					
ANR	972634	Identifier	strstr		972569	0					
ANR	972635	ArgumentList	core -> assembler -> cur -> arch		972569	1					
ANR	972636	Argument	core -> assembler -> cur -> arch		972569	0					
ANR	972637	PtrMemberAccess	core -> assembler -> cur -> arch		972569	0					
ANR	972638	PtrMemberAccess	core -> assembler -> cur		972569	0					
ANR	972639	PtrMemberAccess	core -> assembler		972569	0					
ANR	972640	Identifier	core		972569	0					
ANR	972641	Identifier	assembler		972569	1					
ANR	972642	Identifier	cur		972569	1					
ANR	972643	Identifier	arch		972569	1					
ANR	972644	Argument	"""arm"""		972569	1					
ANR	972645	PrimaryExpression	"""arm"""		972569	0					
ANR	972646	CompoundStatement		8:56:228:228	972569	1					
ANR	972647	ExpressionStatement	"* str = strstr ( line , "" b "" )"	2500:2:75786:75813	972569	0	True				
ANR	972648	AssignmentExpression	"* str = strstr ( line , "" b "" )"		972569	0		=			
ANR	972649	UnaryOperationExpression	* str		972569	0					
ANR	972650	UnaryOperator	*		972569	0					
ANR	972651	Identifier	str		972569	1					
ANR	972652	CallExpression	"strstr ( line , "" b "" )"		972569	1					
ANR	972653	Callee	strstr		972569	0					
ANR	972654	Identifier	strstr		972569	0					
ANR	972655	ArgumentList	line		972569	1					
ANR	972656	Argument	line		972569	0					
ANR	972657	Identifier	line		972569	0					
ANR	972658	Argument	""" b """		972569	1					
ANR	972659	PrimaryExpression	""" b """		972569	0					
ANR	972660	IfStatement	"if ( * str && strstr ( * str , "" 0x"" ) )"		972569	1					
ANR	972661	Condition	"* str && strstr ( * str , "" 0x"" )"	2501:6:75821:75848	972569	0	True				
ANR	972662	AndExpression	"* str && strstr ( * str , "" 0x"" )"		972569	0		&&			
ANR	972663	UnaryOperationExpression	* str		972569	0					
ANR	972664	UnaryOperator	*		972569	0					
ANR	972665	Identifier	str		972569	1					
ANR	972666	CallExpression	"strstr ( * str , "" 0x"" )"		972569	1					
ANR	972667	Callee	strstr		972569	0					
ANR	972668	Identifier	strstr		972569	0					
ANR	972669	ArgumentList	* str		972569	1					
ANR	972670	Argument	* str		972569	0					
ANR	972671	UnaryOperationExpression	* str		972569	0					
ANR	972672	UnaryOperator	*		972569	0					
ANR	972673	Identifier	str		972569	1					
ANR	972674	Argument	""" 0x"""		972569	1					
ANR	972675	PrimaryExpression	""" 0x"""		972569	0					
ANR	972676	CompoundStatement		10:36:297:297	972569	1					
ANR	972677	ExpressionStatement	* str = NULL	2506:3:75926:75937	972569	0	True				
ANR	972678	AssignmentExpression	* str = NULL		972569	0		=			
ANR	972679	UnaryOperationExpression	* str		972569	0					
ANR	972680	UnaryOperator	*		972569	0					
ANR	972681	Identifier	str		972569	1					
ANR	972682	Identifier	NULL		972569	1					
ANR	972683	IfStatement	if ( ! * str )		972569	2					
ANR	972684	Condition	! * str	2508:6:75949:75953	972569	0	True				
ANR	972685	UnaryOperationExpression	! * str		972569	0					
ANR	972686	UnaryOperator	!		972569	0					
ANR	972687	UnaryOperationExpression	* str		972569	1					
ANR	972688	UnaryOperator	*		972569	0					
ANR	972689	Identifier	str		972569	1					
ANR	972690	CompoundStatement		17:13:402:402	972569	1					
ANR	972691	ExpressionStatement	"* str = strstr ( line , ""bl "" )"	2509:3:75961:75988	972569	0	True				
ANR	972692	AssignmentExpression	"* str = strstr ( line , ""bl "" )"		972569	0		=			
ANR	972693	UnaryOperationExpression	* str		972569	0					
ANR	972694	UnaryOperator	*		972569	0					
ANR	972695	Identifier	str		972569	1					
ANR	972696	CallExpression	"strstr ( line , ""bl "" )"		972569	1					
ANR	972697	Callee	strstr		972569	0					
ANR	972698	Identifier	strstr		972569	0					
ANR	972699	ArgumentList	line		972569	1					
ANR	972700	Argument	line		972569	0					
ANR	972701	Identifier	line		972569	0					
ANR	972702	Argument	"""bl """		972569	1					
ANR	972703	PrimaryExpression	"""bl """		972569	0					
ANR	972704	IfStatement	if ( ! * str )		972569	3					
ANR	972705	Condition	! * str	2511:6:76000:76004	972569	0	True				
ANR	972706	UnaryOperationExpression	! * str		972569	0					
ANR	972707	UnaryOperator	!		972569	0					
ANR	972708	UnaryOperationExpression	* str		972569	1					
ANR	972709	UnaryOperator	*		972569	0					
ANR	972710	Identifier	str		972569	1					
ANR	972711	CompoundStatement		20:13:453:453	972569	1					
ANR	972712	ExpressionStatement	"* str = strstr ( line , ""bx "" )"	2512:3:76012:76039	972569	0	True				
ANR	972713	AssignmentExpression	"* str = strstr ( line , ""bx "" )"		972569	0		=			
ANR	972714	UnaryOperationExpression	* str		972569	0					
ANR	972715	UnaryOperator	*		972569	0					
ANR	972716	Identifier	str		972569	1					
ANR	972717	CallExpression	"strstr ( line , ""bx "" )"		972569	1					
ANR	972718	Callee	strstr		972569	0					
ANR	972719	Identifier	strstr		972569	0					
ANR	972720	ArgumentList	line		972569	1					
ANR	972721	Argument	line		972569	0					
ANR	972722	Identifier	line		972569	0					
ANR	972723	Argument	"""bx """		972569	1					
ANR	972724	PrimaryExpression	"""bx """		972569	0					
ANR	972725	ReturnType	static void		972569	1					
ANR	972726	Identifier	_handle_call		972569	2					
ANR	972727	ParameterList	"RCore * core , char * line , char * * str"		972569	3					
ANR	972728	Parameter	RCore * core	2492:25:75516:75526	972569	0	True				
ANR	972729	ParameterType	RCore *		972569	0					
ANR	972730	Identifier	core		972569	1					
ANR	972731	Parameter	char * line	2492:38:75529:75538	972569	1	True				
ANR	972732	ParameterType	char *		972569	0					
ANR	972733	Identifier	line		972569	1					
ANR	972734	Parameter	char * * str	2492:50:75541:75550	972569	2	True				
ANR	972735	ParameterType	char * *		972569	0					
ANR	972736	Identifier	str		972569	1					
ANR	972737	CFGEntryNode	ENTRY		972569		True				
ANR	972738	CFGExitNode	EXIT		972569		True				
ANR	972739	Symbol	NULL		972569						
ANR	972740	Symbol	* core -> assembler -> cur		972569						
ANR	972741	Symbol	line		972569						
ANR	972742	Symbol	* core		972569						
ANR	972743	Symbol	core -> assembler		972569						
ANR	972744	Symbol	core -> assembler -> cur -> arch		972569						
ANR	972745	Symbol	str		972569						
ANR	972746	Symbol	* core -> assembler		972569						
ANR	972747	Symbol	core		972569						
ANR	972748	Symbol	* * * core		972569						
ANR	972749	Symbol	strstr		972569						
ANR	972750	Symbol	* * core -> assembler		972569						
ANR	972751	Symbol	core -> assembler -> cur		972569						
ANR	972752	Symbol	* str		972569						
ANR	972753	Symbol	* * core		972569						
ANR	972754	Function	disasm_strings	2520:0:76233:85018							
ANR	972755	FunctionDef	"disasm_strings (RCore * core , const char * input , RAnalFunction * fcn)"		972754	0					
ANR	972756	CompoundStatement		2520:79:76312:85018	972754	0					
ANR	972757	IdentifierDeclStatement	const char * linecolor = NULL ;	2521:1:76315:76343	972754	0	True				
ANR	972758	IdentifierDecl	* linecolor = NULL		972754	0					
ANR	972759	IdentifierDeclType	const char *		972754	0					
ANR	972760	Identifier	linecolor		972754	1					
ANR	972761	AssignmentExpression	* linecolor = NULL		972754	2		=			
ANR	972762	Identifier	NULL		972754	0					
ANR	972763	Identifier	NULL		972754	1					
ANR	972764	IdentifierDeclStatement	"char * ox , * qo , * string = NULL ;"	2522:1:76346:76375	972754	1	True				
ANR	972765	IdentifierDecl	* ox		972754	0					
ANR	972766	IdentifierDeclType	char *		972754	0					
ANR	972767	Identifier	ox		972754	1					
ANR	972768	IdentifierDecl	* qo		972754	1					
ANR	972769	IdentifierDeclType	char *		972754	0					
ANR	972770	Identifier	qo		972754	1					
ANR	972771	IdentifierDecl	* string = NULL		972754	2					
ANR	972772	IdentifierDeclType	char *		972754	0					
ANR	972773	Identifier	string		972754	1					
ANR	972774	AssignmentExpression	* string = NULL		972754	2		=			
ANR	972775	Identifier	NULL		972754	0					
ANR	972776	Identifier	NULL		972754	1					
ANR	972777	IdentifierDeclStatement	"char * line , * s , * str , * string2 = NULL ;"	2523:1:76378:76415	972754	2	True				
ANR	972778	IdentifierDecl	* line		972754	0					
ANR	972779	IdentifierDeclType	char *		972754	0					
ANR	972780	Identifier	line		972754	1					
ANR	972781	IdentifierDecl	* s		972754	1					
ANR	972782	IdentifierDeclType	char *		972754	0					
ANR	972783	Identifier	s		972754	1					
ANR	972784	IdentifierDecl	* str		972754	2					
ANR	972785	IdentifierDeclType	char *		972754	0					
ANR	972786	Identifier	str		972754	1					
ANR	972787	IdentifierDecl	* string2 = NULL		972754	3					
ANR	972788	IdentifierDeclType	char *		972754	0					
ANR	972789	Identifier	string2		972754	1					
ANR	972790	AssignmentExpression	* string2 = NULL		972754	2		=			
ANR	972791	Identifier	NULL		972754	0					
ANR	972792	Identifier	NULL		972754	1					
ANR	972793	IdentifierDeclStatement	char * switchcmp = NULL ;	2524:1:76418:76440	972754	3	True				
ANR	972794	IdentifierDecl	* switchcmp = NULL		972754	0					
ANR	972795	IdentifierDeclType	char *		972754	0					
ANR	972796	Identifier	switchcmp		972754	1					
ANR	972797	AssignmentExpression	* switchcmp = NULL		972754	2		=			
ANR	972798	Identifier	NULL		972754	0					
ANR	972799	Identifier	NULL		972754	1					
ANR	972800	IdentifierDeclStatement	"int i , count , use_color = r_config_get_i ( core -> config , ""scr.color"" ) ;"	2525:1:76443:76511	972754	4	True				
ANR	972801	IdentifierDecl	i		972754	0					
ANR	972802	IdentifierDeclType	int		972754	0					
ANR	972803	Identifier	i		972754	1					
ANR	972804	IdentifierDecl	count		972754	1					
ANR	972805	IdentifierDeclType	int		972754	0					
ANR	972806	Identifier	count		972754	1					
ANR	972807	IdentifierDecl	"use_color = r_config_get_i ( core -> config , ""scr.color"" )"		972754	2					
ANR	972808	IdentifierDeclType	int		972754	0					
ANR	972809	Identifier	use_color		972754	1					
ANR	972810	AssignmentExpression	"use_color = r_config_get_i ( core -> config , ""scr.color"" )"		972754	2		=			
ANR	972811	Identifier	use_color		972754	0					
ANR	972812	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		972754	1					
ANR	972813	Callee	r_config_get_i		972754	0					
ANR	972814	Identifier	r_config_get_i		972754	0					
ANR	972815	ArgumentList	core -> config		972754	1					
ANR	972816	Argument	core -> config		972754	0					
ANR	972817	PtrMemberAccess	core -> config		972754	0					
ANR	972818	Identifier	core		972754	0					
ANR	972819	Identifier	config		972754	1					
ANR	972820	Argument	"""scr.color"""		972754	1					
ANR	972821	PrimaryExpression	"""scr.color"""		972754	0					
ANR	972822	IdentifierDeclStatement	"bool show_comments = r_config_get_i ( core -> config , ""asm.comments"" ) ;"	2526:1:76514:76580	972754	5	True				
ANR	972823	IdentifierDecl	"show_comments = r_config_get_i ( core -> config , ""asm.comments"" )"		972754	0					
ANR	972824	IdentifierDeclType	bool		972754	0					
ANR	972825	Identifier	show_comments		972754	1					
ANR	972826	AssignmentExpression	"show_comments = r_config_get_i ( core -> config , ""asm.comments"" )"		972754	2		=			
ANR	972827	Identifier	show_comments		972754	0					
ANR	972828	CallExpression	"r_config_get_i ( core -> config , ""asm.comments"" )"		972754	1					
ANR	972829	Callee	r_config_get_i		972754	0					
ANR	972830	Identifier	r_config_get_i		972754	0					
ANR	972831	ArgumentList	core -> config		972754	1					
ANR	972832	Argument	core -> config		972754	0					
ANR	972833	PtrMemberAccess	core -> config		972754	0					
ANR	972834	Identifier	core		972754	0					
ANR	972835	Identifier	config		972754	1					
ANR	972836	Argument	"""asm.comments"""		972754	1					
ANR	972837	PrimaryExpression	"""asm.comments"""		972754	0					
ANR	972838	IdentifierDeclStatement	"bool show_offset = r_config_get_i ( core -> config , ""asm.offset"" ) ;"	2527:1:76583:76645	972754	6	True				
ANR	972839	IdentifierDecl	"show_offset = r_config_get_i ( core -> config , ""asm.offset"" )"		972754	0					
ANR	972840	IdentifierDeclType	bool		972754	0					
ANR	972841	Identifier	show_offset		972754	1					
ANR	972842	AssignmentExpression	"show_offset = r_config_get_i ( core -> config , ""asm.offset"" )"		972754	2		=			
ANR	972843	Identifier	show_offset		972754	0					
ANR	972844	CallExpression	"r_config_get_i ( core -> config , ""asm.offset"" )"		972754	1					
ANR	972845	Callee	r_config_get_i		972754	0					
ANR	972846	Identifier	r_config_get_i		972754	0					
ANR	972847	ArgumentList	core -> config		972754	1					
ANR	972848	Argument	core -> config		972754	0					
ANR	972849	PtrMemberAccess	core -> config		972754	0					
ANR	972850	Identifier	core		972754	0					
ANR	972851	Identifier	config		972754	1					
ANR	972852	Argument	"""asm.offset"""		972754	1					
ANR	972853	PrimaryExpression	"""asm.offset"""		972754	0					
ANR	972854	IdentifierDeclStatement	"bool asm_tabs = r_config_get_i ( core -> config , ""asm.tabs"" ) ;"	2528:1:76648:76705	972754	7	True				
ANR	972855	IdentifierDecl	"asm_tabs = r_config_get_i ( core -> config , ""asm.tabs"" )"		972754	0					
ANR	972856	IdentifierDeclType	bool		972754	0					
ANR	972857	Identifier	asm_tabs		972754	1					
ANR	972858	AssignmentExpression	"asm_tabs = r_config_get_i ( core -> config , ""asm.tabs"" )"		972754	2		=			
ANR	972859	Identifier	asm_tabs		972754	0					
ANR	972860	CallExpression	"r_config_get_i ( core -> config , ""asm.tabs"" )"		972754	1					
ANR	972861	Callee	r_config_get_i		972754	0					
ANR	972862	Identifier	r_config_get_i		972754	0					
ANR	972863	ArgumentList	core -> config		972754	1					
ANR	972864	Argument	core -> config		972754	0					
ANR	972865	PtrMemberAccess	core -> config		972754	0					
ANR	972866	Identifier	core		972754	0					
ANR	972867	Identifier	config		972754	1					
ANR	972868	Argument	"""asm.tabs"""		972754	1					
ANR	972869	PrimaryExpression	"""asm.tabs"""		972754	0					
ANR	972870	IdentifierDeclStatement	"bool asm_dwarf = r_config_get_i ( core -> config , ""asm.dwarf"" ) ;"	2529:1:76708:76767	972754	8	True				
ANR	972871	IdentifierDecl	"asm_dwarf = r_config_get_i ( core -> config , ""asm.dwarf"" )"		972754	0					
ANR	972872	IdentifierDeclType	bool		972754	0					
ANR	972873	Identifier	asm_dwarf		972754	1					
ANR	972874	AssignmentExpression	"asm_dwarf = r_config_get_i ( core -> config , ""asm.dwarf"" )"		972754	2		=			
ANR	972875	Identifier	asm_dwarf		972754	0					
ANR	972876	CallExpression	"r_config_get_i ( core -> config , ""asm.dwarf"" )"		972754	1					
ANR	972877	Callee	r_config_get_i		972754	0					
ANR	972878	Identifier	r_config_get_i		972754	0					
ANR	972879	ArgumentList	core -> config		972754	1					
ANR	972880	Argument	core -> config		972754	0					
ANR	972881	PtrMemberAccess	core -> config		972754	0					
ANR	972882	Identifier	core		972754	0					
ANR	972883	Identifier	config		972754	1					
ANR	972884	Argument	"""asm.dwarf"""		972754	1					
ANR	972885	PrimaryExpression	"""asm.dwarf"""		972754	0					
ANR	972886	IdentifierDeclStatement	"bool asm_flags = r_config_get_i ( core -> config , ""asm.flags"" ) ;"	2530:1:76770:76829	972754	9	True				
ANR	972887	IdentifierDecl	"asm_flags = r_config_get_i ( core -> config , ""asm.flags"" )"		972754	0					
ANR	972888	IdentifierDeclType	bool		972754	0					
ANR	972889	Identifier	asm_flags		972754	1					
ANR	972890	AssignmentExpression	"asm_flags = r_config_get_i ( core -> config , ""asm.flags"" )"		972754	2		=			
ANR	972891	Identifier	asm_flags		972754	0					
ANR	972892	CallExpression	"r_config_get_i ( core -> config , ""asm.flags"" )"		972754	1					
ANR	972893	Callee	r_config_get_i		972754	0					
ANR	972894	Identifier	r_config_get_i		972754	0					
ANR	972895	ArgumentList	core -> config		972754	1					
ANR	972896	Argument	core -> config		972754	0					
ANR	972897	PtrMemberAccess	core -> config		972754	0					
ANR	972898	Identifier	core		972754	0					
ANR	972899	Identifier	config		972754	1					
ANR	972900	Argument	"""asm.flags"""		972754	1					
ANR	972901	PrimaryExpression	"""asm.flags"""		972754	0					
ANR	972902	IdentifierDeclStatement	"bool asm_cmt_right = r_config_get_i ( core -> config , ""asm.cmt.right"" ) ;"	2531:1:76832:76899	972754	10	True				
ANR	972903	IdentifierDecl	"asm_cmt_right = r_config_get_i ( core -> config , ""asm.cmt.right"" )"		972754	0					
ANR	972904	IdentifierDeclType	bool		972754	0					
ANR	972905	Identifier	asm_cmt_right		972754	1					
ANR	972906	AssignmentExpression	"asm_cmt_right = r_config_get_i ( core -> config , ""asm.cmt.right"" )"		972754	2		=			
ANR	972907	Identifier	asm_cmt_right		972754	0					
ANR	972908	CallExpression	"r_config_get_i ( core -> config , ""asm.cmt.right"" )"		972754	1					
ANR	972909	Callee	r_config_get_i		972754	0					
ANR	972910	Identifier	r_config_get_i		972754	0					
ANR	972911	ArgumentList	core -> config		972754	1					
ANR	972912	Argument	core -> config		972754	0					
ANR	972913	PtrMemberAccess	core -> config		972754	0					
ANR	972914	Identifier	core		972754	0					
ANR	972915	Identifier	config		972754	1					
ANR	972916	Argument	"""asm.cmt.right"""		972754	1					
ANR	972917	PrimaryExpression	"""asm.cmt.right"""		972754	0					
ANR	972918	IdentifierDeclStatement	"bool asm_emu = r_config_get_i ( core -> config , ""asm.emu"" ) ;"	2532:1:76902:76957	972754	11	True				
ANR	972919	IdentifierDecl	"asm_emu = r_config_get_i ( core -> config , ""asm.emu"" )"		972754	0					
ANR	972920	IdentifierDeclType	bool		972754	0					
ANR	972921	Identifier	asm_emu		972754	1					
ANR	972922	AssignmentExpression	"asm_emu = r_config_get_i ( core -> config , ""asm.emu"" )"		972754	2		=			
ANR	972923	Identifier	asm_emu		972754	0					
ANR	972924	CallExpression	"r_config_get_i ( core -> config , ""asm.emu"" )"		972754	1					
ANR	972925	Callee	r_config_get_i		972754	0					
ANR	972926	Identifier	r_config_get_i		972754	0					
ANR	972927	ArgumentList	core -> config		972754	1					
ANR	972928	Argument	core -> config		972754	0					
ANR	972929	PtrMemberAccess	core -> config		972754	0					
ANR	972930	Identifier	core		972754	0					
ANR	972931	Identifier	config		972754	1					
ANR	972932	Argument	"""asm.emu"""		972754	1					
ANR	972933	PrimaryExpression	"""asm.emu"""		972754	0					
ANR	972934	IdentifierDeclStatement	"bool emu_str = r_config_get_i ( core -> config , ""emu.str"" ) ;"	2533:1:76960:77015	972754	12	True				
ANR	972935	IdentifierDecl	"emu_str = r_config_get_i ( core -> config , ""emu.str"" )"		972754	0					
ANR	972936	IdentifierDeclType	bool		972754	0					
ANR	972937	Identifier	emu_str		972754	1					
ANR	972938	AssignmentExpression	"emu_str = r_config_get_i ( core -> config , ""emu.str"" )"		972754	2		=			
ANR	972939	Identifier	emu_str		972754	0					
ANR	972940	CallExpression	"r_config_get_i ( core -> config , ""emu.str"" )"		972754	1					
ANR	972941	Callee	r_config_get_i		972754	0					
ANR	972942	Identifier	r_config_get_i		972754	0					
ANR	972943	ArgumentList	core -> config		972754	1					
ANR	972944	Argument	core -> config		972754	0					
ANR	972945	PtrMemberAccess	core -> config		972754	0					
ANR	972946	Identifier	core		972754	0					
ANR	972947	Identifier	config		972754	1					
ANR	972948	Argument	"""emu.str"""		972754	1					
ANR	972949	PrimaryExpression	"""emu.str"""		972754	0					
ANR	972950	ExpressionStatement	"r_config_set_i ( core -> config , ""emu.str"" , true )"	2534:1:77018:77064	972754	13	True				
ANR	972951	CallExpression	"r_config_set_i ( core -> config , ""emu.str"" , true )"		972754	0					
ANR	972952	Callee	r_config_set_i		972754	0					
ANR	972953	Identifier	r_config_set_i		972754	0					
ANR	972954	ArgumentList	core -> config		972754	1					
ANR	972955	Argument	core -> config		972754	0					
ANR	972956	PtrMemberAccess	core -> config		972754	0					
ANR	972957	Identifier	core		972754	0					
ANR	972958	Identifier	config		972754	1					
ANR	972959	Argument	"""emu.str"""		972754	1					
ANR	972960	PrimaryExpression	"""emu.str"""		972754	0					
ANR	972961	Argument	true		972754	2					
ANR	972962	Identifier	true		972754	0					
ANR	972963	IdentifierDeclStatement	RConsPrintablePalette * pal = & core -> cons -> context -> pal ;	2535:1:77067:77121	972754	14	True				
ANR	972964	IdentifierDecl	* pal = & core -> cons -> context -> pal		972754	0					
ANR	972965	IdentifierDeclType	RConsPrintablePalette *		972754	0					
ANR	972966	Identifier	pal		972754	1					
ANR	972967	AssignmentExpression	* pal = & core -> cons -> context -> pal		972754	2		=			
ANR	972968	Identifier	pal		972754	0					
ANR	972969	UnaryOperationExpression	& core -> cons -> context -> pal		972754	1					
ANR	972970	UnaryOperator	&		972754	0					
ANR	972971	PtrMemberAccess	core -> cons -> context -> pal		972754	1					
ANR	972972	PtrMemberAccess	core -> cons -> context		972754	0					
ANR	972973	PtrMemberAccess	core -> cons		972754	0					
ANR	972974	Identifier	core		972754	0					
ANR	972975	Identifier	cons		972754	1					
ANR	972976	Identifier	context		972754	1					
ANR	972977	Identifier	pal		972754	1					
ANR	972978	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.offset"" , true )"	2537:1:77143:77192	972754	15	True				
ANR	972979	CallExpression	"r_config_set_i ( core -> config , ""asm.offset"" , true )"		972754	0					
ANR	972980	Callee	r_config_set_i		972754	0					
ANR	972981	Identifier	r_config_set_i		972754	0					
ANR	972982	ArgumentList	core -> config		972754	1					
ANR	972983	Argument	core -> config		972754	0					
ANR	972984	PtrMemberAccess	core -> config		972754	0					
ANR	972985	Identifier	core		972754	0					
ANR	972986	Identifier	config		972754	1					
ANR	972987	Argument	"""asm.offset"""		972754	1					
ANR	972988	PrimaryExpression	"""asm.offset"""		972754	0					
ANR	972989	Argument	true		972754	2					
ANR	972990	Identifier	true		972754	0					
ANR	972991	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.dwarf"" , true )"	2538:1:77195:77243	972754	16	True				
ANR	972992	CallExpression	"r_config_set_i ( core -> config , ""asm.dwarf"" , true )"		972754	0					
ANR	972993	Callee	r_config_set_i		972754	0					
ANR	972994	Identifier	r_config_set_i		972754	0					
ANR	972995	ArgumentList	core -> config		972754	1					
ANR	972996	Argument	core -> config		972754	0					
ANR	972997	PtrMemberAccess	core -> config		972754	0					
ANR	972998	Identifier	core		972754	0					
ANR	972999	Identifier	config		972754	1					
ANR	973000	Argument	"""asm.dwarf"""		972754	1					
ANR	973001	PrimaryExpression	"""asm.dwarf"""		972754	0					
ANR	973002	Argument	true		972754	2					
ANR	973003	Identifier	true		972754	0					
ANR	973004	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , COLOR_MODE_DISABLED )"	2539:1:77246:77309	972754	17	True				
ANR	973005	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , COLOR_MODE_DISABLED )"		972754	0					
ANR	973006	Callee	r_config_set_i		972754	0					
ANR	973007	Identifier	r_config_set_i		972754	0					
ANR	973008	ArgumentList	core -> config		972754	1					
ANR	973009	Argument	core -> config		972754	0					
ANR	973010	PtrMemberAccess	core -> config		972754	0					
ANR	973011	Identifier	core		972754	0					
ANR	973012	Identifier	config		972754	1					
ANR	973013	Argument	"""scr.color"""		972754	1					
ANR	973014	PrimaryExpression	"""scr.color"""		972754	0					
ANR	973015	Argument	COLOR_MODE_DISABLED		972754	2					
ANR	973016	Identifier	COLOR_MODE_DISABLED		972754	0					
ANR	973017	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.tabs"" , 0 )"	2540:1:77312:77356	972754	18	True				
ANR	973018	CallExpression	"r_config_set_i ( core -> config , ""asm.tabs"" , 0 )"		972754	0					
ANR	973019	Callee	r_config_set_i		972754	0					
ANR	973020	Identifier	r_config_set_i		972754	0					
ANR	973021	ArgumentList	core -> config		972754	1					
ANR	973022	Argument	core -> config		972754	0					
ANR	973023	PtrMemberAccess	core -> config		972754	0					
ANR	973024	Identifier	core		972754	0					
ANR	973025	Identifier	config		972754	1					
ANR	973026	Argument	"""asm.tabs"""		972754	1					
ANR	973027	PrimaryExpression	"""asm.tabs"""		972754	0					
ANR	973028	Argument	0		972754	2					
ANR	973029	PrimaryExpression	0		972754	0					
ANR	973030	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.cmt.right"" , true )"	2541:1:77359:77411	972754	19	True				
ANR	973031	CallExpression	"r_config_set_i ( core -> config , ""asm.cmt.right"" , true )"		972754	0					
ANR	973032	Callee	r_config_set_i		972754	0					
ANR	973033	Identifier	r_config_set_i		972754	0					
ANR	973034	ArgumentList	core -> config		972754	1					
ANR	973035	Argument	core -> config		972754	0					
ANR	973036	PtrMemberAccess	core -> config		972754	0					
ANR	973037	Identifier	core		972754	0					
ANR	973038	Identifier	config		972754	1					
ANR	973039	Argument	"""asm.cmt.right"""		972754	1					
ANR	973040	PrimaryExpression	"""asm.cmt.right"""		972754	0					
ANR	973041	Argument	true		972754	2					
ANR	973042	Identifier	true		972754	0					
ANR	973043	ExpressionStatement	r_cons_push ( )	2542:1:77414:77427	972754	20	True				
ANR	973044	CallExpression	r_cons_push ( )		972754	0					
ANR	973045	Callee	r_cons_push		972754	0					
ANR	973046	Identifier	r_cons_push		972754	0					
ANR	973047	ArgumentList			972754	1					
ANR	973048	ExpressionStatement	line = NULL	2543:1:77430:77441	972754	21	True				
ANR	973049	AssignmentExpression	line = NULL		972754	0		=			
ANR	973050	Identifier	line		972754	0					
ANR	973051	Identifier	NULL		972754	1					
ANR	973052	ExpressionStatement	s = NULL	2544:1:77444:77452	972754	22	True				
ANR	973053	AssignmentExpression	s = NULL		972754	0		=			
ANR	973054	Identifier	s		972754	0					
ANR	973055	Identifier	NULL		972754	1					
ANR	973056	IfStatement	"if ( ! strncmp ( input , ""dsb"" , 3 ) )"		972754	23					
ANR	973057	Condition	"! strncmp ( input , ""dsb"" , 3 )"	2545:5:77459:77484	972754	0	True				
ANR	973058	UnaryOperationExpression	"! strncmp ( input , ""dsb"" , 3 )"		972754	0					
ANR	973059	UnaryOperator	!		972754	0					
ANR	973060	CallExpression	"strncmp ( input , ""dsb"" , 3 )"		972754	1					
ANR	973061	Callee	strncmp		972754	0					
ANR	973062	Identifier	strncmp		972754	0					
ANR	973063	ArgumentList	input		972754	1					
ANR	973064	Argument	input		972754	0					
ANR	973065	Identifier	input		972754	0					
ANR	973066	Argument	"""dsb"""		972754	1					
ANR	973067	PrimaryExpression	"""dsb"""		972754	0					
ANR	973068	Argument	3		972754	2					
ANR	973069	PrimaryExpression	3		972754	0					
ANR	973070	CompoundStatement		27:2:1178:1243	972754	1					
ANR	973071	IdentifierDeclStatement	"RAnalBlock * bb = r_anal_bb_from_offset ( core -> anal , core -> offset ) ;"	2546:2:77491:77556	972754	0	True				
ANR	973072	IdentifierDecl	"* bb = r_anal_bb_from_offset ( core -> anal , core -> offset )"		972754	0					
ANR	973073	IdentifierDeclType	RAnalBlock *		972754	0					
ANR	973074	Identifier	bb		972754	1					
ANR	973075	AssignmentExpression	"* bb = r_anal_bb_from_offset ( core -> anal , core -> offset )"		972754	2		=			
ANR	973076	Identifier	bb		972754	0					
ANR	973077	CallExpression	"r_anal_bb_from_offset ( core -> anal , core -> offset )"		972754	1					
ANR	973078	Callee	r_anal_bb_from_offset		972754	0					
ANR	973079	Identifier	r_anal_bb_from_offset		972754	0					
ANR	973080	ArgumentList	core -> anal		972754	1					
ANR	973081	Argument	core -> anal		972754	0					
ANR	973082	PtrMemberAccess	core -> anal		972754	0					
ANR	973083	Identifier	core		972754	0					
ANR	973084	Identifier	anal		972754	1					
ANR	973085	Argument	core -> offset		972754	1					
ANR	973086	PtrMemberAccess	core -> offset		972754	0					
ANR	973087	Identifier	core		972754	0					
ANR	973088	Identifier	offset		972754	1					
ANR	973089	IfStatement	if ( bb )		972754	1					
ANR	973090	Condition	bb	2547:6:77564:77565	972754	0	True				
ANR	973091	Identifier	bb		972754	0					
ANR	973092	CompoundStatement		28:10:1255:1255	972754	1					
ANR	973093	Statement	line	2548:3:77573:77576	972754	0	True				
ANR	973094	Statement	=	2548:8:77578:77578	972754	1	True				
ANR	973095	Statement	s	2548:10:77580:77580	972754	2	True				
ANR	973096	Statement	=	2548:12:77582:77582	972754	3	True				
ANR	973097	Statement	r_core_cmd_strf	2548:14:77584:77598	972754	4	True				
ANR	973098	Statement	(	2548:30:77600:77600	972754	5	True				
ANR	973099	Statement	core	2548:31:77601:77604	972754	6	True				
ANR	973100	Statement	","	2548:35:77605:77605	972754	7	True				
ANR	973101	Statement	"""pD %i @ 0x%08"""	2548:37:77607:77621	972754	8	True				
ANR	973102	Statement	PFMT64x	2548:52:77622:77628	972754	9	True				
ANR	973103	Statement	","	2548:59:77629:77629	972754	10	True				
ANR	973104	Statement	bb	2548:61:77631:77632	972754	11	True				
ANR	973105	Statement	->	2548:63:77633:77634	972754	12	True				
ANR	973106	Statement	size	2548:65:77635:77638	972754	13	True				
ANR	973107	Statement	","	2548:69:77639:77639	972754	14	True				
ANR	973108	Statement	bb	2548:71:77641:77642	972754	15	True				
ANR	973109	Statement	->	2548:73:77643:77644	972754	16	True				
ANR	973110	Statement	addr	2548:75:77645:77648	972754	17	True				
ANR	973111	Statement	)	2548:79:77649:77649	972754	18	True				
ANR	973112	ExpressionStatement		2548:80:77650:77650	972754	19	True				
ANR	973113	ElseStatement	else		972754	0					
ANR	973114	IfStatement	"if ( ! strncmp ( input , ""dsf"" , 3 ) || ! strncmp ( input , ""dsr"" , 3 ) )"		972754	0					
ANR	973115	Condition	"! strncmp ( input , ""dsf"" , 3 ) || ! strncmp ( input , ""dsr"" , 3 )"	2550:12:77668:77723	972754	0	True				
ANR	973116	OrExpression	"! strncmp ( input , ""dsf"" , 3 ) || ! strncmp ( input , ""dsr"" , 3 )"		972754	0		||			
ANR	973117	UnaryOperationExpression	"! strncmp ( input , ""dsf"" , 3 )"		972754	0					
ANR	973118	UnaryOperator	!		972754	0					
ANR	973119	CallExpression	"strncmp ( input , ""dsf"" , 3 )"		972754	1					
ANR	973120	Callee	strncmp		972754	0					
ANR	973121	Identifier	strncmp		972754	0					
ANR	973122	ArgumentList	input		972754	1					
ANR	973123	Argument	input		972754	0					
ANR	973124	Identifier	input		972754	0					
ANR	973125	Argument	"""dsf"""		972754	1					
ANR	973126	PrimaryExpression	"""dsf"""		972754	0					
ANR	973127	Argument	3		972754	2					
ANR	973128	PrimaryExpression	3		972754	0					
ANR	973129	UnaryOperationExpression	"! strncmp ( input , ""dsr"" , 3 )"		972754	1					
ANR	973130	UnaryOperator	!		972754	0					
ANR	973131	CallExpression	"strncmp ( input , ""dsr"" , 3 )"		972754	1					
ANR	973132	Callee	strncmp		972754	0					
ANR	973133	Identifier	strncmp		972754	0					
ANR	973134	ArgumentList	input		972754	1					
ANR	973135	Argument	input		972754	0					
ANR	973136	Identifier	input		972754	0					
ANR	973137	Argument	"""dsr"""		972754	1					
ANR	973138	PrimaryExpression	"""dsr"""		972754	0					
ANR	973139	Argument	3		972754	2					
ANR	973140	PrimaryExpression	3		972754	0					
ANR	973141	CompoundStatement		32:2:1417:1504	972754	1					
ANR	973142	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_NULL ) ;"	2551:2:77730:77817	972754	0	True				
ANR	973143	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_NULL )"		972754	0					
ANR	973144	IdentifierDeclType	RAnalFunction *		972754	0					
ANR	973145	Identifier	fcn		972754	1					
ANR	973146	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_NULL )"		972754	2		=			
ANR	973147	Identifier	fcn		972754	0					
ANR	973148	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_NULL )"		972754	1					
ANR	973149	Callee	r_anal_get_fcn_in		972754	0					
ANR	973150	Identifier	r_anal_get_fcn_in		972754	0					
ANR	973151	ArgumentList	core -> anal		972754	1					
ANR	973152	Argument	core -> anal		972754	0					
ANR	973153	PtrMemberAccess	core -> anal		972754	0					
ANR	973154	Identifier	core		972754	0					
ANR	973155	Identifier	anal		972754	1					
ANR	973156	Argument	core -> offset		972754	1					
ANR	973157	PtrMemberAccess	core -> offset		972754	0					
ANR	973158	Identifier	core		972754	0					
ANR	973159	Identifier	offset		972754	1					
ANR	973160	Argument	R_ANAL_FCN_TYPE_NULL		972754	2					
ANR	973161	Identifier	R_ANAL_FCN_TYPE_NULL		972754	0					
ANR	973162	IfStatement	if ( fcn )		972754	1					
ANR	973163	Condition	fcn	2552:6:77825:77827	972754	0	True				
ANR	973164	Identifier	fcn		972754	0					
ANR	973165	CompoundStatement		33:11:1517:1517	972754	1					
ANR	973166	ExpressionStatement	"line = s = r_core_cmd_str ( core , ""pdr"" )"	2553:3:77835:77874	972754	0	True				
ANR	973167	AssignmentExpression	"line = s = r_core_cmd_str ( core , ""pdr"" )"		972754	0		=			
ANR	973168	Identifier	line		972754	0					
ANR	973169	AssignmentExpression	"s = r_core_cmd_str ( core , ""pdr"" )"		972754	1		=			
ANR	973170	Identifier	s		972754	0					
ANR	973171	CallExpression	"r_core_cmd_str ( core , ""pdr"" )"		972754	1					
ANR	973172	Callee	r_core_cmd_str		972754	0					
ANR	973173	Identifier	r_core_cmd_str		972754	0					
ANR	973174	ArgumentList	core		972754	1					
ANR	973175	Argument	core		972754	0					
ANR	973176	Identifier	core		972754	0					
ANR	973177	Argument	"""pdr"""		972754	1					
ANR	973178	PrimaryExpression	"""pdr"""		972754	0					
ANR	973179	ElseStatement	else		972754	0					
ANR	973180	CompoundStatement		35:9:1572:1572	972754	0					
ANR	973181	ExpressionStatement	"eprintf ( ""Cannot find function.\\n"" )"	2555:3:77890:77925	972754	0	True				
ANR	973182	CallExpression	"eprintf ( ""Cannot find function.\\n"" )"		972754	0					
ANR	973183	Callee	eprintf		972754	0					
ANR	973184	Identifier	eprintf		972754	0					
ANR	973185	ArgumentList	"""Cannot find function.\\n"""		972754	1					
ANR	973186	Argument	"""Cannot find function.\\n"""		972754	0					
ANR	973187	PrimaryExpression	"""Cannot find function.\\n"""		972754	0					
ANR	973188	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , use_color )"	2556:3:77930:77983	972754	1	True				
ANR	973189	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , use_color )"		972754	0					
ANR	973190	Callee	r_config_set_i		972754	0					
ANR	973191	Identifier	r_config_set_i		972754	0					
ANR	973192	ArgumentList	core -> config		972754	1					
ANR	973193	Argument	core -> config		972754	0					
ANR	973194	PtrMemberAccess	core -> config		972754	0					
ANR	973195	Identifier	core		972754	0					
ANR	973196	Identifier	config		972754	1					
ANR	973197	Argument	"""scr.color"""		972754	1					
ANR	973198	PrimaryExpression	"""scr.color"""		972754	0					
ANR	973199	Argument	use_color		972754	2					
ANR	973200	Identifier	use_color		972754	0					
ANR	973201	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.cmt.right"" , asm_cmt_right )"	2557:3:77988:78049	972754	2	True				
ANR	973202	CallExpression	"r_config_set_i ( core -> config , ""asm.cmt.right"" , asm_cmt_right )"		972754	0					
ANR	973203	Callee	r_config_set_i		972754	0					
ANR	973204	Identifier	r_config_set_i		972754	0					
ANR	973205	ArgumentList	core -> config		972754	1					
ANR	973206	Argument	core -> config		972754	0					
ANR	973207	PtrMemberAccess	core -> config		972754	0					
ANR	973208	Identifier	core		972754	0					
ANR	973209	Identifier	config		972754	1					
ANR	973210	Argument	"""asm.cmt.right"""		972754	1					
ANR	973211	PrimaryExpression	"""asm.cmt.right"""		972754	0					
ANR	973212	Argument	asm_cmt_right		972754	2					
ANR	973213	Identifier	asm_cmt_right		972754	0					
ANR	973214	GotoStatement	goto restore_conf ;	2558:3:78054:78071	972754	3	True				
ANR	973215	Identifier	restore_conf		972754	0					
ANR	973216	ElseStatement	else		972754	0					
ANR	973217	IfStatement	"if ( ! strncmp ( input , ""ds "" , 3 ) )"		972754	0					
ANR	973218	Condition	"! strncmp ( input , ""ds "" , 3 )"	2560:12:78089:78114	972754	0	True				
ANR	973219	UnaryOperationExpression	"! strncmp ( input , ""ds "" , 3 )"		972754	0					
ANR	973220	UnaryOperator	!		972754	0					
ANR	973221	CallExpression	"strncmp ( input , ""ds "" , 3 )"		972754	1					
ANR	973222	Callee	strncmp		972754	0					
ANR	973223	Identifier	strncmp		972754	0					
ANR	973224	ArgumentList	input		972754	1					
ANR	973225	Argument	input		972754	0					
ANR	973226	Identifier	input		972754	0					
ANR	973227	Argument	"""ds """		972754	1					
ANR	973228	PrimaryExpression	"""ds """		972754	0					
ANR	973229	Argument	3		972754	2					
ANR	973230	PrimaryExpression	3		972754	0					
ANR	973231	CompoundStatement		41:40:1804:1804	972754	1					
ANR	973232	ExpressionStatement	"line = s = r_core_cmd_strf ( core , ""pD %s"" , input + 3 )"	2561:2:78121:78174	972754	0	True				
ANR	973233	AssignmentExpression	"line = s = r_core_cmd_strf ( core , ""pD %s"" , input + 3 )"		972754	0		=			
ANR	973234	Identifier	line		972754	0					
ANR	973235	AssignmentExpression	"s = r_core_cmd_strf ( core , ""pD %s"" , input + 3 )"		972754	1		=			
ANR	973236	Identifier	s		972754	0					
ANR	973237	CallExpression	"r_core_cmd_strf ( core , ""pD %s"" , input + 3 )"		972754	1					
ANR	973238	Callee	r_core_cmd_strf		972754	0					
ANR	973239	Identifier	r_core_cmd_strf		972754	0					
ANR	973240	ArgumentList	core		972754	1					
ANR	973241	Argument	core		972754	0					
ANR	973242	Identifier	core		972754	0					
ANR	973243	Argument	"""pD %s"""		972754	1					
ANR	973244	PrimaryExpression	"""pD %s"""		972754	0					
ANR	973245	Argument	input + 3		972754	2					
ANR	973246	AdditiveExpression	input + 3		972754	0		+			
ANR	973247	Identifier	input		972754	0					
ANR	973248	PrimaryExpression	3		972754	1					
ANR	973249	ElseStatement	else		972754	0					
ANR	973250	CompoundStatement		43:8:1871:1871	972754	0					
ANR	973251	ExpressionStatement	"line = s = r_core_cmd_str ( core , ""pd"" )"	2563:2:78188:78226	972754	0	True				
ANR	973252	AssignmentExpression	"line = s = r_core_cmd_str ( core , ""pd"" )"		972754	0		=			
ANR	973253	Identifier	line		972754	0					
ANR	973254	AssignmentExpression	"s = r_core_cmd_str ( core , ""pd"" )"		972754	1		=			
ANR	973255	Identifier	s		972754	0					
ANR	973256	CallExpression	"r_core_cmd_str ( core , ""pd"" )"		972754	1					
ANR	973257	Callee	r_core_cmd_str		972754	0					
ANR	973258	Identifier	r_core_cmd_str		972754	0					
ANR	973259	ArgumentList	core		972754	1					
ANR	973260	Argument	core		972754	0					
ANR	973261	Identifier	core		972754	0					
ANR	973262	Argument	"""pd"""		972754	1					
ANR	973263	PrimaryExpression	"""pd"""		972754	0					
ANR	973264	ExpressionStatement	r_cons_pop ( )	2565:0:78231:78243	972754	24	True				
ANR	973265	CallExpression	r_cons_pop ( )		972754	0					
ANR	973266	Callee	r_cons_pop		972754	0					
ANR	973267	Identifier	r_cons_pop		972754	0					
ANR	973268	ArgumentList			972754	1					
ANR	973269	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , use_color )"	2566:1:78246:78299	972754	25	True				
ANR	973270	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , use_color )"		972754	0					
ANR	973271	Callee	r_config_set_i		972754	0					
ANR	973272	Identifier	r_config_set_i		972754	0					
ANR	973273	ArgumentList	core -> config		972754	1					
ANR	973274	Argument	core -> config		972754	0					
ANR	973275	PtrMemberAccess	core -> config		972754	0					
ANR	973276	Identifier	core		972754	0					
ANR	973277	Identifier	config		972754	1					
ANR	973278	Argument	"""scr.color"""		972754	1					
ANR	973279	PrimaryExpression	"""scr.color"""		972754	0					
ANR	973280	Argument	use_color		972754	2					
ANR	973281	Identifier	use_color		972754	0					
ANR	973282	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.cmt.right"" , asm_cmt_right )"	2567:1:78302:78363	972754	26	True				
ANR	973283	CallExpression	"r_config_set_i ( core -> config , ""asm.cmt.right"" , asm_cmt_right )"		972754	0					
ANR	973284	Callee	r_config_set_i		972754	0					
ANR	973285	Identifier	r_config_set_i		972754	0					
ANR	973286	ArgumentList	core -> config		972754	1					
ANR	973287	Argument	core -> config		972754	0					
ANR	973288	PtrMemberAccess	core -> config		972754	0					
ANR	973289	Identifier	core		972754	0					
ANR	973290	Identifier	config		972754	1					
ANR	973291	Argument	"""asm.cmt.right"""		972754	1					
ANR	973292	PrimaryExpression	"""asm.cmt.right"""		972754	0					
ANR	973293	Argument	asm_cmt_right		972754	2					
ANR	973294	Identifier	asm_cmt_right		972754	0					
ANR	973295	ExpressionStatement	"count = r_str_split ( s , '\\n' )"	2568:1:78366:78395	972754	27	True				
ANR	973296	AssignmentExpression	"count = r_str_split ( s , '\\n' )"		972754	0		=			
ANR	973297	Identifier	count		972754	0					
ANR	973298	CallExpression	"r_str_split ( s , '\\n' )"		972754	1					
ANR	973299	Callee	r_str_split		972754	0					
ANR	973300	Identifier	r_str_split		972754	0					
ANR	973301	ArgumentList	s		972754	1					
ANR	973302	Argument	s		972754	0					
ANR	973303	Identifier	s		972754	0					
ANR	973304	Argument	'\\n'		972754	1					
ANR	973305	PrimaryExpression	'\\n'		972754	0					
ANR	973306	IfStatement	if ( ! line || ! * line || count < 1 )		972754	28					
ANR	973307	Condition	! line || ! * line || count < 1	2569:5:78402:78429	972754	0	True				
ANR	973308	OrExpression	! line || ! * line || count < 1		972754	0		||			
ANR	973309	UnaryOperationExpression	! line		972754	0					
ANR	973310	UnaryOperator	!		972754	0					
ANR	973311	Identifier	line		972754	1					
ANR	973312	OrExpression	! * line || count < 1		972754	1		||			
ANR	973313	UnaryOperationExpression	! * line		972754	0					
ANR	973314	UnaryOperator	!		972754	0					
ANR	973315	UnaryOperationExpression	* line		972754	1					
ANR	973316	UnaryOperator	*		972754	0					
ANR	973317	Identifier	line		972754	1					
ANR	973318	RelationalExpression	count < 1		972754	1		<			
ANR	973319	Identifier	count		972754	0					
ANR	973320	PrimaryExpression	1		972754	1					
ANR	973321	CompoundStatement		50:35:2119:2119	972754	1					
ANR	973322	GotoStatement	goto restore_conf ;	2571:2:78452:78469	972754	0	True				
ANR	973323	Identifier	restore_conf		972754	0					
ANR	973324	ForStatement	for ( i = 0 ; i < count ; i ++ )		972754	29					
ANR	973325	ForInit	i = 0 ;	2573:6:78480:78485	972754	0	True				
ANR	973326	AssignmentExpression	i = 0		972754	0		=			
ANR	973327	Identifier	i		972754	0					
ANR	973328	PrimaryExpression	0		972754	1					
ANR	973329	Condition	i < count	2573:13:78487:78495	972754	1	True				
ANR	973330	RelationalExpression	i < count		972754	0		<			
ANR	973331	Identifier	i		972754	0					
ANR	973332	Identifier	count		972754	1					
ANR	973333	PostIncDecOperationExpression	i ++	2573:24:78498:78500	972754	2	True				
ANR	973334	Identifier	i		972754	0					
ANR	973335	IncDec	++		972754	1					
ANR	973336	CompoundStatement		55:2:2194:2214	972754	3					
ANR	973337	IdentifierDeclStatement	ut64 addr = UT64_MAX ;	2574:2:78507:78527	972754	0	True				
ANR	973338	IdentifierDecl	addr = UT64_MAX		972754	0					
ANR	973339	IdentifierDeclType	ut64		972754	0					
ANR	973340	Identifier	addr		972754	1					
ANR	973341	AssignmentExpression	addr = UT64_MAX		972754	2		=			
ANR	973342	Identifier	UT64_MAX		972754	0					
ANR	973343	Identifier	UT64_MAX		972754	1					
ANR	973344	ExpressionStatement	"ox = strstr ( line , ""0x"" )"	2575:2:78531:78555	972754	1	True				
ANR	973345	AssignmentExpression	"ox = strstr ( line , ""0x"" )"		972754	0		=			
ANR	973346	Identifier	ox		972754	0					
ANR	973347	CallExpression	"strstr ( line , ""0x"" )"		972754	1					
ANR	973348	Callee	strstr		972754	0					
ANR	973349	Identifier	strstr		972754	0					
ANR	973350	ArgumentList	line		972754	1					
ANR	973351	Argument	line		972754	0					
ANR	973352	Identifier	line		972754	0					
ANR	973353	Argument	"""0x"""		972754	1					
ANR	973354	PrimaryExpression	"""0x"""		972754	0					
ANR	973355	ExpressionStatement	"qo = strstr ( line , ""\\"""" )"	2576:2:78559:78583	972754	2	True				
ANR	973356	AssignmentExpression	"qo = strstr ( line , ""\\"""" )"		972754	0		=			
ANR	973357	Identifier	qo		972754	0					
ANR	973358	CallExpression	"strstr ( line , ""\\"""" )"		972754	1					
ANR	973359	Callee	strstr		972754	0					
ANR	973360	Identifier	strstr		972754	0					
ANR	973361	ArgumentList	line		972754	1					
ANR	973362	Argument	line		972754	0					
ANR	973363	Identifier	line		972754	0					
ANR	973364	Argument	"""\\"""""		972754	1					
ANR	973365	PrimaryExpression	"""\\"""""		972754	0					
ANR	973366	ExpressionStatement	R_FREE ( string )	2577:2:78587:78602	972754	3	True				
ANR	973367	CallExpression	R_FREE ( string )		972754	0					
ANR	973368	Callee	R_FREE		972754	0					
ANR	973369	Identifier	R_FREE		972754	0					
ANR	973370	ArgumentList	string		972754	1					
ANR	973371	Argument	string		972754	0					
ANR	973372	Identifier	string		972754	0					
ANR	973373	IfStatement	if ( ox )		972754	4					
ANR	973374	Condition	ox	2578:6:78610:78611	972754	0	True				
ANR	973375	Identifier	ox		972754	0					
ANR	973376	CompoundStatement		59:10:2301:2301	972754	1					
ANR	973377	ExpressionStatement	"addr = r_num_get ( NULL , ox )"	2579:3:78619:78646	972754	0	True				
ANR	973378	AssignmentExpression	"addr = r_num_get ( NULL , ox )"		972754	0		=			
ANR	973379	Identifier	addr		972754	0					
ANR	973380	CallExpression	"r_num_get ( NULL , ox )"		972754	1					
ANR	973381	Callee	r_num_get		972754	0					
ANR	973382	Identifier	r_num_get		972754	0					
ANR	973383	ArgumentList	NULL		972754	1					
ANR	973384	Argument	NULL		972754	0					
ANR	973385	Identifier	NULL		972754	0					
ANR	973386	Argument	ox		972754	1					
ANR	973387	Identifier	ox		972754	0					
ANR	973388	IfStatement	if ( qo )		972754	5					
ANR	973389	Condition	qo	2581:6:78658:78659	972754	0	True				
ANR	973390	Identifier	qo		972754	0					
ANR	973391	CompoundStatement		63:3:2354:2387	972754	1					
ANR	973392	IdentifierDeclStatement	"char * qoe = strrchr ( qo + 1 , '""' ) ;"	2582:3:78667:78700	972754	0	True				
ANR	973393	IdentifierDecl	"* qoe = strrchr ( qo + 1 , '""' )"		972754	0					
ANR	973394	IdentifierDeclType	char *		972754	0					
ANR	973395	Identifier	qoe		972754	1					
ANR	973396	AssignmentExpression	"* qoe = strrchr ( qo + 1 , '""' )"		972754	2		=			
ANR	973397	Identifier	qoe		972754	0					
ANR	973398	CallExpression	"strrchr ( qo + 1 , '""' )"		972754	1					
ANR	973399	Callee	strrchr		972754	0					
ANR	973400	Identifier	strrchr		972754	0					
ANR	973401	ArgumentList	qo + 1		972754	1					
ANR	973402	Argument	qo + 1		972754	0					
ANR	973403	AdditiveExpression	qo + 1		972754	0		+			
ANR	973404	Identifier	qo		972754	0					
ANR	973405	PrimaryExpression	1		972754	1					
ANR	973406	Argument	"'""'"		972754	1					
ANR	973407	PrimaryExpression	"'""'"		972754	0					
ANR	973408	IfStatement	if ( qoe )		972754	1					
ANR	973409	Condition	qoe	2583:7:78709:78711	972754	0	True				
ANR	973410	Identifier	qoe		972754	0					
ANR	973411	CompoundStatement		67:4:2463:2481	972754	1					
ANR	973412	IdentifierDeclStatement	int raw_len = qoe - qo - 1 ;	2584:4:78720:78746	972754	0	True				
ANR	973413	IdentifierDecl	raw_len = qoe - qo - 1		972754	0					
ANR	973414	IdentifierDeclType	int		972754	0					
ANR	973415	Identifier	raw_len		972754	1					
ANR	973416	AssignmentExpression	raw_len = qoe - qo - 1		972754	2		=			
ANR	973417	Identifier	raw_len		972754	0					
ANR	973418	AdditiveExpression	qoe - qo - 1		972754	1		-			
ANR	973419	Identifier	qoe		972754	0					
ANR	973420	AdditiveExpression	qo - 1		972754	1		-			
ANR	973421	Identifier	qo		972754	0					
ANR	973422	PrimaryExpression	1		972754	1					
ANR	973423	IdentifierDeclStatement	int actual_len = 0 ;	2585:4:78752:78770	972754	1	True				
ANR	973424	IdentifierDecl	actual_len = 0		972754	0					
ANR	973425	IdentifierDeclType	int		972754	0					
ANR	973426	Identifier	actual_len		972754	1					
ANR	973427	AssignmentExpression	actual_len = 0		972754	2		=			
ANR	973428	Identifier	actual_len		972754	0					
ANR	973429	PrimaryExpression	0		972754	1					
ANR	973430	IdentifierDeclStatement	char * ptr = qo + 1 ;	2586:4:78776:78794	972754	2	True				
ANR	973431	IdentifierDecl	* ptr = qo + 1		972754	0					
ANR	973432	IdentifierDeclType	char *		972754	0					
ANR	973433	Identifier	ptr		972754	1					
ANR	973434	AssignmentExpression	* ptr = qo + 1		972754	2		=			
ANR	973435	Identifier	ptr		972754	0					
ANR	973436	AdditiveExpression	qo + 1		972754	1		+			
ANR	973437	Identifier	qo		972754	0					
ANR	973438	PrimaryExpression	1		972754	1					
ANR	973439	ForStatement	for ( ; ptr < qoe ; ptr ++ )		972754	3					
ANR	973440	Condition	ptr < qoe	2587:10:78806:78814	972754	0	True				
ANR	973441	RelationalExpression	ptr < qoe		972754	0		<			
ANR	973442	Identifier	ptr		972754	0					
ANR	973443	Identifier	qoe		972754	1					
ANR	973444	PostIncDecOperationExpression	ptr ++	2587:21:78817:78821	972754	1	True				
ANR	973445	Identifier	ptr		972754	0					
ANR	973446	IncDec	++		972754	1					
ANR	973447	CompoundStatement		68:28:2511:2511	972754	2					
ANR	973448	IfStatement	if ( * ptr == '\\\\' && ptr + 1 < qoe )		972754	0					
ANR	973449	Condition	* ptr == '\\\\' && ptr + 1 < qoe	2588:9:78835:78863	972754	0	True				
ANR	973450	AndExpression	* ptr == '\\\\' && ptr + 1 < qoe		972754	0		&&			
ANR	973451	EqualityExpression	* ptr == '\\\\'		972754	0		==			
ANR	973452	UnaryOperationExpression	* ptr		972754	0					
ANR	973453	UnaryOperator	*		972754	0					
ANR	973454	Identifier	ptr		972754	1					
ANR	973455	PrimaryExpression	'\\\\'		972754	1					
ANR	973456	RelationalExpression	ptr + 1 < qoe		972754	1		<			
ANR	973457	AdditiveExpression	ptr + 1		972754	0		+			
ANR	973458	Identifier	ptr		972754	0					
ANR	973459	PrimaryExpression	1		972754	1					
ANR	973460	Identifier	qoe		972754	1					
ANR	973461	CompoundStatement		70:6:2561:2576	972754	1					
ANR	973462	IdentifierDeclStatement	"int i , body_len ;"	2589:6:78874:78889	972754	0	True				
ANR	973463	IdentifierDecl	i		972754	0					
ANR	973464	IdentifierDeclType	int		972754	0					
ANR	973465	Identifier	i		972754	1					
ANR	973466	IdentifierDecl	body_len		972754	1					
ANR	973467	IdentifierDeclType	int		972754	0					
ANR	973468	Identifier	body_len		972754	1					
ANR	973469	SwitchStatement	switch ( * ( ptr + 1 ) )		972754	1					
ANR	973470	Condition	* ( ptr + 1 )	2590:14:78905:78914	972754	0	True				
ANR	973471	UnaryOperationExpression	* ( ptr + 1 )		972754	0					
ANR	973472	UnaryOperator	*		972754	0					
ANR	973473	AdditiveExpression	ptr + 1		972754	1		+			
ANR	973474	Identifier	ptr		972754	0					
ANR	973475	PrimaryExpression	1		972754	1					
ANR	973476	CompoundStatement		71:26:2604:2604	972754	1					
ANR	973477	Label	case 'x' :	2591:6:78925:78933	972754	0	True				
ANR	973478	ExpressionStatement	body_len = 3	2592:7:78942:78954	972754	1	True				
ANR	973479	AssignmentExpression	body_len = 3		972754	0		=			
ANR	973480	Identifier	body_len		972754	0					
ANR	973481	PrimaryExpression	3		972754	1					
ANR	973482	BreakStatement	break ;	2593:7:78963:78968	972754	2	True				
ANR	973483	Label	case 'u' :	2594:6:78976:78984	972754	3	True				
ANR	973484	ExpressionStatement	body_len = 5	2595:7:78993:79005	972754	4	True				
ANR	973485	AssignmentExpression	body_len = 5		972754	0		=			
ANR	973486	Identifier	body_len		972754	0					
ANR	973487	PrimaryExpression	5		972754	1					
ANR	973488	BreakStatement	break ;	2596:7:79014:79019	972754	5	True				
ANR	973489	Label	case 'U' :	2597:6:79027:79035	972754	6	True				
ANR	973490	ExpressionStatement	body_len = 9	2598:7:79044:79056	972754	7	True				
ANR	973491	AssignmentExpression	body_len = 9		972754	0		=			
ANR	973492	Identifier	body_len		972754	0					
ANR	973493	PrimaryExpression	9		972754	1					
ANR	973494	BreakStatement	break ;	2599:7:79065:79070	972754	8	True				
ANR	973495	Label	default :	2600:6:79078:79085	972754	9	True				
ANR	973496	Identifier	default		972754	0					
ANR	973497	ExpressionStatement	body_len = 1	2601:7:79094:79106	972754	10	True				
ANR	973498	AssignmentExpression	body_len = 1		972754	0		=			
ANR	973499	Identifier	body_len		972754	0					
ANR	973500	PrimaryExpression	1		972754	1					
ANR	973501	ForStatement	for ( i = 0 ; i < body_len && ptr < qoe ; i ++ )		972754	2					
ANR	973502	ForInit	i = 0 ;	2603:11:79127:79132	972754	0	True				
ANR	973503	AssignmentExpression	i = 0		972754	0		=			
ANR	973504	Identifier	i		972754	0					
ANR	973505	PrimaryExpression	0		972754	1					
ANR	973506	Condition	i < body_len && ptr < qoe	2603:18:79134:79158	972754	1	True				
ANR	973507	AndExpression	i < body_len && ptr < qoe		972754	0		&&			
ANR	973508	RelationalExpression	i < body_len		972754	0		<			
ANR	973509	Identifier	i		972754	0					
ANR	973510	Identifier	body_len		972754	1					
ANR	973511	RelationalExpression	ptr < qoe		972754	1		<			
ANR	973512	Identifier	ptr		972754	0					
ANR	973513	Identifier	qoe		972754	1					
ANR	973514	PostIncDecOperationExpression	i ++	2603:45:79161:79163	972754	2	True				
ANR	973515	Identifier	i		972754	0					
ANR	973516	IncDec	++		972754	1					
ANR	973517	CompoundStatement		84:50:2853:2853	972754	3					
ANR	973518	ExpressionStatement	ptr ++	2604:7:79175:79180	972754	0	True				
ANR	973519	PostIncDecOperationExpression	ptr ++		972754	0					
ANR	973520	Identifier	ptr		972754	0					
ANR	973521	IncDec	++		972754	1					
ANR	973522	ExpressionStatement	actual_len ++	2607:5:79202:79214	972754	1	True				
ANR	973523	PostIncDecOperationExpression	actual_len ++		972754	0					
ANR	973524	Identifier	actual_len		972754	0					
ANR	973525	IncDec	++		972754	1					
ANR	973526	IfStatement	if ( actual_len > 2 )		972754	4					
ANR	973527	Condition	actual_len > 2	2609:8:79230:79243	972754	0	True				
ANR	973528	RelationalExpression	actual_len > 2		972754	0		>			
ANR	973529	Identifier	actual_len		972754	0					
ANR	973530	PrimaryExpression	2		972754	1					
ANR	973531	CompoundStatement		90:24:2933:2933	972754	1					
ANR	973532	ExpressionStatement	"string = r_str_ndup ( qo , raw_len + 2 )"	2610:5:79253:79290	972754	0	True				
ANR	973533	AssignmentExpression	"string = r_str_ndup ( qo , raw_len + 2 )"		972754	0		=			
ANR	973534	Identifier	string		972754	0					
ANR	973535	CallExpression	"r_str_ndup ( qo , raw_len + 2 )"		972754	1					
ANR	973536	Callee	r_str_ndup		972754	0					
ANR	973537	Identifier	r_str_ndup		972754	0					
ANR	973538	ArgumentList	qo		972754	1					
ANR	973539	Argument	qo		972754	0					
ANR	973540	Identifier	qo		972754	0					
ANR	973541	Argument	raw_len + 2		972754	1					
ANR	973542	AdditiveExpression	raw_len + 2		972754	0		+			
ANR	973543	Identifier	raw_len		972754	0					
ANR	973544	PrimaryExpression	2		972754	1					
ANR	973545	ExpressionStatement	linecolor = R_CONS_COLOR ( comment )	2612:4:79302:79336	972754	5	True				
ANR	973546	AssignmentExpression	linecolor = R_CONS_COLOR ( comment )		972754	0		=			
ANR	973547	Identifier	linecolor		972754	0					
ANR	973548	CallExpression	R_CONS_COLOR ( comment )		972754	1					
ANR	973549	Callee	R_CONS_COLOR		972754	0					
ANR	973550	Identifier	R_CONS_COLOR		972754	0					
ANR	973551	ArgumentList	comment		972754	1					
ANR	973552	Argument	comment		972754	0					
ANR	973553	Identifier	comment		972754	0					
ANR	973554	ExpressionStatement	"ox = strstr ( line , ""; 0x"" )"	2615:2:79349:79375	972754	6	True				
ANR	973555	AssignmentExpression	"ox = strstr ( line , ""; 0x"" )"		972754	0		=			
ANR	973556	Identifier	ox		972754	0					
ANR	973557	CallExpression	"strstr ( line , ""; 0x"" )"		972754	1					
ANR	973558	Callee	strstr		972754	0					
ANR	973559	Identifier	strstr		972754	0					
ANR	973560	ArgumentList	line		972754	1					
ANR	973561	Argument	line		972754	0					
ANR	973562	Identifier	line		972754	0					
ANR	973563	Argument	"""; 0x"""		972754	1					
ANR	973564	PrimaryExpression	"""; 0x"""		972754	0					
ANR	973565	IfStatement	if ( ! ox )		972754	7					
ANR	973566	Condition	! ox	2616:6:79383:79385	972754	0	True				
ANR	973567	UnaryOperationExpression	! ox		972754	0					
ANR	973568	UnaryOperator	!		972754	0					
ANR	973569	Identifier	ox		972754	1					
ANR	973570	CompoundStatement		97:11:3075:3075	972754	1					
ANR	973571	ExpressionStatement	"ox = strstr ( line , ""@ 0x"" )"	2617:3:79393:79419	972754	0	True				
ANR	973572	AssignmentExpression	"ox = strstr ( line , ""@ 0x"" )"		972754	0		=			
ANR	973573	Identifier	ox		972754	0					
ANR	973574	CallExpression	"strstr ( line , ""@ 0x"" )"		972754	1					
ANR	973575	Callee	strstr		972754	0					
ANR	973576	Identifier	strstr		972754	0					
ANR	973577	ArgumentList	line		972754	1					
ANR	973578	Argument	line		972754	0					
ANR	973579	Identifier	line		972754	0					
ANR	973580	Argument	"""@ 0x"""		972754	1					
ANR	973581	PrimaryExpression	"""@ 0x"""		972754	0					
ANR	973582	IfStatement	if ( ox )		972754	8					
ANR	973583	Condition	ox	2619:6:79431:79432	972754	0	True				
ANR	973584	Identifier	ox		972754	0					
ANR	973585	CompoundStatement		105:3:3219:3259	972754	1					
ANR	973586	IdentifierDeclStatement	"char * qoe = strchr ( ox + 3 , ' ' ) ;"	2620:3:79440:79472	972754	0	True				
ANR	973587	IdentifierDecl	"* qoe = strchr ( ox + 3 , ' ' )"		972754	0					
ANR	973588	IdentifierDeclType	char *		972754	0					
ANR	973589	Identifier	qoe		972754	1					
ANR	973590	AssignmentExpression	"* qoe = strchr ( ox + 3 , ' ' )"		972754	2		=			
ANR	973591	Identifier	qoe		972754	0					
ANR	973592	CallExpression	"strchr ( ox + 3 , ' ' )"		972754	1					
ANR	973593	Callee	strchr		972754	0					
ANR	973594	Identifier	strchr		972754	0					
ANR	973595	ArgumentList	ox + 3		972754	1					
ANR	973596	Argument	ox + 3		972754	0					
ANR	973597	AdditiveExpression	ox + 3		972754	0		+			
ANR	973598	Identifier	ox		972754	0					
ANR	973599	PrimaryExpression	3		972754	1					
ANR	973600	Argument	' '		972754	1					
ANR	973601	PrimaryExpression	' '		972754	0					
ANR	973602	IfStatement	if ( ! qoe )		972754	1					
ANR	973603	Condition	! qoe	2621:7:79481:79484	972754	0	True				
ANR	973604	UnaryOperationExpression	! qoe		972754	0					
ANR	973605	UnaryOperator	!		972754	0					
ANR	973606	Identifier	qoe		972754	1					
ANR	973607	CompoundStatement		102:13:3174:3174	972754	1					
ANR	973608	ExpressionStatement	"qoe = strchr ( ox + 3 , x1b )"	2622:4:79493:79522	972754	0	True				
ANR	973609	AssignmentExpression	"qoe = strchr ( ox + 3 , x1b )"		972754	0		=			
ANR	973610	Identifier	qoe		972754	0					
ANR	973611	CallExpression	"strchr ( ox + 3 , x1b )"		972754	1					
ANR	973612	Callee	strchr		972754	0					
ANR	973613	Identifier	strchr		972754	0					
ANR	973614	ArgumentList	ox + 3		972754	1					
ANR	973615	Argument	ox + 3		972754	0					
ANR	973616	AdditiveExpression	ox + 3		972754	0		+			
ANR	973617	Identifier	ox		972754	0					
ANR	973618	PrimaryExpression	3		972754	1					
ANR	973619	Argument	x1b		972754	1					
ANR	973620	Identifier	x1b		972754	0					
ANR	973621	IdentifierDeclStatement	int len = qoe ? qoe - ox : strlen ( ox + 3 ) ;	2624:3:79532:79572	972754	2	True				
ANR	973622	IdentifierDecl	len = qoe ? qoe - ox : strlen ( ox + 3 )		972754	0					
ANR	973623	IdentifierDeclType	int		972754	0					
ANR	973624	Identifier	len		972754	1					
ANR	973625	AssignmentExpression	len = qoe ? qoe - ox : strlen ( ox + 3 )		972754	2		=			
ANR	973626	Identifier	len		972754	0					
ANR	973627	ConditionalExpression	qoe ? qoe - ox : strlen ( ox + 3 )		972754	1					
ANR	973628	Condition	qoe		972754	0					
ANR	973629	Identifier	qoe		972754	0					
ANR	973630	AdditiveExpression	qoe - ox		972754	1		-			
ANR	973631	Identifier	qoe		972754	0					
ANR	973632	Identifier	ox		972754	1					
ANR	973633	CallExpression	strlen ( ox + 3 )		972754	2					
ANR	973634	Callee	strlen		972754	0					
ANR	973635	Identifier	strlen		972754	0					
ANR	973636	ArgumentList	ox + 3		972754	1					
ANR	973637	Argument	ox + 3		972754	0					
ANR	973638	AdditiveExpression	ox + 3		972754	0		+			
ANR	973639	Identifier	ox		972754	0					
ANR	973640	PrimaryExpression	3		972754	1					
ANR	973641	ExpressionStatement	"string2 = r_str_ndup ( ox + 2 , len - 1 )"	2625:3:79577:79615	972754	3	True				
ANR	973642	AssignmentExpression	"string2 = r_str_ndup ( ox + 2 , len - 1 )"		972754	0		=			
ANR	973643	Identifier	string2		972754	0					
ANR	973644	CallExpression	"r_str_ndup ( ox + 2 , len - 1 )"		972754	1					
ANR	973645	Callee	r_str_ndup		972754	0					
ANR	973646	Identifier	r_str_ndup		972754	0					
ANR	973647	ArgumentList	ox + 2		972754	1					
ANR	973648	Argument	ox + 2		972754	0					
ANR	973649	AdditiveExpression	ox + 2		972754	0		+			
ANR	973650	Identifier	ox		972754	0					
ANR	973651	PrimaryExpression	2		972754	1					
ANR	973652	Argument	len - 1		972754	1					
ANR	973653	AdditiveExpression	len - 1		972754	0		-			
ANR	973654	Identifier	len		972754	0					
ANR	973655	PrimaryExpression	1		972754	1					
ANR	973656	IfStatement	"if ( r_num_get ( NULL , string2 ) < 0x100 )"		972754	4					
ANR	973657	Condition	"r_num_get ( NULL , string2 ) < 0x100"	2626:7:79624:79656	972754	0	True				
ANR	973658	RelationalExpression	"r_num_get ( NULL , string2 ) < 0x100"		972754	0		<			
ANR	973659	CallExpression	"r_num_get ( NULL , string2 )"		972754	0					
ANR	973660	Callee	r_num_get		972754	0					
ANR	973661	Identifier	r_num_get		972754	0					
ANR	973662	ArgumentList	NULL		972754	1					
ANR	973663	Argument	NULL		972754	0					
ANR	973664	Identifier	NULL		972754	0					
ANR	973665	Argument	string2		972754	1					
ANR	973666	Identifier	string2		972754	0					
ANR	973667	PrimaryExpression	0x100		972754	1					
ANR	973668	CompoundStatement		107:42:3346:3346	972754	1					
ANR	973669	ExpressionStatement	R_FREE ( string2 )	2627:4:79665:79681	972754	0	True				
ANR	973670	CallExpression	R_FREE ( string2 )		972754	0					
ANR	973671	Callee	R_FREE		972754	0					
ANR	973672	Identifier	R_FREE		972754	0					
ANR	973673	ArgumentList	string2		972754	1					
ANR	973674	Argument	string2		972754	0					
ANR	973675	Identifier	string2		972754	0					
ANR	973676	IfStatement	if ( asm_flags )		972754	9					
ANR	973677	Condition	asm_flags	2630:6:79698:79706	972754	0	True				
ANR	973678	Identifier	asm_flags		972754	0					
ANR	973679	CompoundStatement		111:17:3396:3396	972754	1					
ANR	973680	ExpressionStatement	"str = strstr ( line , "";-- "" )"	2631:3:79714:79741	972754	0	True				
ANR	973681	AssignmentExpression	"str = strstr ( line , "";-- "" )"		972754	0		=			
ANR	973682	Identifier	str		972754	0					
ANR	973683	CallExpression	"strstr ( line , "";-- "" )"		972754	1					
ANR	973684	Callee	strstr		972754	0					
ANR	973685	Identifier	strstr		972754	0					
ANR	973686	ArgumentList	line		972754	1					
ANR	973687	Argument	line		972754	0					
ANR	973688	Identifier	line		972754	0					
ANR	973689	Argument	""";-- """		972754	1					
ANR	973690	PrimaryExpression	""";-- """		972754	0					
ANR	973691	IfStatement	if ( str )		972754	1					
ANR	973692	Condition	str	2632:7:79750:79752	972754	0	True				
ANR	973693	Identifier	str		972754	0					
ANR	973694	CompoundStatement		113:12:3442:3442	972754	1					
ANR	973695	IfStatement	"if ( ! r_str_startswith ( str + 4 , ""case"" ) )"		972754	0					
ANR	973696	Condition	"! r_str_startswith ( str + 4 , ""case"" )"	2633:8:79765:79799	972754	0	True				
ANR	973697	UnaryOperationExpression	"! r_str_startswith ( str + 4 , ""case"" )"		972754	0					
ANR	973698	UnaryOperator	!		972754	0					
ANR	973699	CallExpression	"r_str_startswith ( str + 4 , ""case"" )"		972754	1					
ANR	973700	Callee	r_str_startswith		972754	0					
ANR	973701	Identifier	r_str_startswith		972754	0					
ANR	973702	ArgumentList	str + 4		972754	1					
ANR	973703	Argument	str + 4		972754	0					
ANR	973704	AdditiveExpression	str + 4		972754	0		+			
ANR	973705	Identifier	str		972754	0					
ANR	973706	PrimaryExpression	4		972754	1					
ANR	973707	Argument	"""case"""		972754	1					
ANR	973708	PrimaryExpression	"""case"""		972754	0					
ANR	973709	CompoundStatement		114:45:3489:3489	972754	1					
ANR	973710	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , str )"	2634:5:79809:79836	972754	0	True				
ANR	973711	CallExpression	"r_cons_printf ( ""%s\\n"" , str )"		972754	0					
ANR	973712	Callee	r_cons_printf		972754	0					
ANR	973713	Identifier	r_cons_printf		972754	0					
ANR	973714	ArgumentList	"""%s\\n"""		972754	1					
ANR	973715	Argument	"""%s\\n"""		972754	0					
ANR	973716	PrimaryExpression	"""%s\\n"""		972754	0					
ANR	973717	Argument	str		972754	1					
ANR	973718	Identifier	str		972754	0					
ANR	973719	Statement	define	2638:1:79854:79859	972754	10	True				
ANR	973720	Statement	USE_PREFIXES	2638:8:79861:79872	972754	11	True				
ANR	973721	Statement	1	2638:21:79874:79874	972754	12	True				
ANR	973722	ExpressionStatement	"str = strstr ( line , "" obj."" )"	2641:2:79909:79937	972754	13	True				
ANR	973723	AssignmentExpression	"str = strstr ( line , "" obj."" )"		972754	0		=			
ANR	973724	Identifier	str		972754	0					
ANR	973725	CallExpression	"strstr ( line , "" obj."" )"		972754	1					
ANR	973726	Callee	strstr		972754	0					
ANR	973727	Identifier	strstr		972754	0					
ANR	973728	ArgumentList	line		972754	1					
ANR	973729	Argument	line		972754	0					
ANR	973730	Identifier	line		972754	0					
ANR	973731	Argument	""" obj."""		972754	1					
ANR	973732	PrimaryExpression	""" obj."""		972754	0					
ANR	973733	IfStatement	if ( ! str )		972754	14					
ANR	973734	Condition	! str	2642:6:79945:79948	972754	0	True				
ANR	973735	UnaryOperationExpression	! str		972754	0					
ANR	973736	UnaryOperator	!		972754	0					
ANR	973737	Identifier	str		972754	1					
ANR	973738	CompoundStatement		123:12:3638:3638	972754	1					
ANR	973739	ExpressionStatement	"str = strstr ( line , "" str."" )"	2643:3:79956:79984	972754	0	True				
ANR	973740	AssignmentExpression	"str = strstr ( line , "" str."" )"		972754	0		=			
ANR	973741	Identifier	str		972754	0					
ANR	973742	CallExpression	"strstr ( line , "" str."" )"		972754	1					
ANR	973743	Callee	strstr		972754	0					
ANR	973744	Identifier	strstr		972754	0					
ANR	973745	ArgumentList	line		972754	1					
ANR	973746	Argument	line		972754	0					
ANR	973747	Identifier	line		972754	0					
ANR	973748	Argument	""" str."""		972754	1					
ANR	973749	PrimaryExpression	""" str."""		972754	0					
ANR	973750	IfStatement	if ( ! str )		972754	1					
ANR	973751	Condition	! str	2644:7:79993:79996	972754	0	True				
ANR	973752	UnaryOperationExpression	! str		972754	0					
ANR	973753	UnaryOperator	!		972754	0					
ANR	973754	Identifier	str		972754	1					
ANR	973755	CompoundStatement		125:13:3686:3686	972754	1					
ANR	973756	ExpressionStatement	"str = strstr ( line , "" imp."" )"	2645:4:80005:80033	972754	0	True				
ANR	973757	AssignmentExpression	"str = strstr ( line , "" imp."" )"		972754	0		=			
ANR	973758	Identifier	str		972754	0					
ANR	973759	CallExpression	"strstr ( line , "" imp."" )"		972754	1					
ANR	973760	Callee	strstr		972754	0					
ANR	973761	Identifier	strstr		972754	0					
ANR	973762	ArgumentList	line		972754	1					
ANR	973763	Argument	line		972754	0					
ANR	973764	Identifier	line		972754	0					
ANR	973765	Argument	""" imp."""		972754	1					
ANR	973766	PrimaryExpression	""" imp."""		972754	0					
ANR	973767	IfStatement	if ( ! str )		972754	1					
ANR	973768	Condition	! str	2646:8:80043:80046	972754	0	True				
ANR	973769	UnaryOperationExpression	! str		972754	0					
ANR	973770	UnaryOperator	!		972754	0					
ANR	973771	Identifier	str		972754	1					
ANR	973772	CompoundStatement		127:14:3736:3736	972754	1					
ANR	973773	ExpressionStatement	"str = strstr ( line , "" fcn."" )"	2647:5:80056:80084	972754	0	True				
ANR	973774	AssignmentExpression	"str = strstr ( line , "" fcn."" )"		972754	0		=			
ANR	973775	Identifier	str		972754	0					
ANR	973776	CallExpression	"strstr ( line , "" fcn."" )"		972754	1					
ANR	973777	Callee	strstr		972754	0					
ANR	973778	Identifier	strstr		972754	0					
ANR	973779	ArgumentList	line		972754	1					
ANR	973780	Argument	line		972754	0					
ANR	973781	Identifier	line		972754	0					
ANR	973782	Argument	""" fcn."""		972754	1					
ANR	973783	PrimaryExpression	""" fcn."""		972754	0					
ANR	973784	IfStatement	if ( ! str )		972754	1					
ANR	973785	Condition	! str	2648:9:80095:80098	972754	0	True				
ANR	973786	UnaryOperationExpression	! str		972754	0					
ANR	973787	UnaryOperator	!		972754	0					
ANR	973788	Identifier	str		972754	1					
ANR	973789	CompoundStatement		129:15:3788:3788	972754	1					
ANR	973790	ExpressionStatement	"str = strstr ( line , "" sub."" )"	2649:6:80109:80137	972754	0	True				
ANR	973791	AssignmentExpression	"str = strstr ( line , "" sub."" )"		972754	0		=			
ANR	973792	Identifier	str		972754	0					
ANR	973793	CallExpression	"strstr ( line , "" sub."" )"		972754	1					
ANR	973794	Callee	strstr		972754	0					
ANR	973795	Identifier	strstr		972754	0					
ANR	973796	ArgumentList	line		972754	1					
ANR	973797	Argument	line		972754	0					
ANR	973798	Identifier	line		972754	0					
ANR	973799	Argument	""" sub."""		972754	1					
ANR	973800	PrimaryExpression	""" sub."""		972754	0					
ANR	973801	IfStatement	if ( str )		972754	15					
ANR	973802	Condition	str	2667:6:80448:80450	972754	0	True				
ANR	973803	Identifier	str		972754	0					
ANR	973804	CompoundStatement		150:3:4168:4184	972754	1					
ANR	973805	ExpressionStatement	str = strdup ( str )	2668:3:80458:80476	972754	0	True				
ANR	973806	AssignmentExpression	str = strdup ( str )		972754	0		=			
ANR	973807	Identifier	str		972754	0					
ANR	973808	CallExpression	strdup ( str )		972754	1					
ANR	973809	Callee	strdup		972754	0					
ANR	973810	Identifier	strdup		972754	0					
ANR	973811	ArgumentList	str		972754	1					
ANR	973812	Argument	str		972754	0					
ANR	973813	Identifier	str		972754	0					
ANR	973814	IdentifierDeclStatement	char * qoe = NULL ;	2669:3:80481:80497	972754	1	True				
ANR	973815	IdentifierDecl	* qoe = NULL		972754	0					
ANR	973816	IdentifierDeclType	char *		972754	0					
ANR	973817	Identifier	qoe		972754	1					
ANR	973818	AssignmentExpression	* qoe = NULL		972754	2		=			
ANR	973819	Identifier	NULL		972754	0					
ANR	973820	Identifier	NULL		972754	1					
ANR	973821	IfStatement	if ( ! qoe )		972754	2					
ANR	973822	Condition	! qoe	2670:7:80506:80509	972754	0	True				
ANR	973823	UnaryOperationExpression	! qoe		972754	0					
ANR	973824	UnaryOperator	!		972754	0					
ANR	973825	Identifier	qoe		972754	1					
ANR	973826	CompoundStatement		151:13:4199:4199	972754	1					
ANR	973827	ExpressionStatement	"qoe = strchr ( str + 1 , x1b )"	2671:4:80518:80548	972754	0	True				
ANR	973828	AssignmentExpression	"qoe = strchr ( str + 1 , x1b )"		972754	0		=			
ANR	973829	Identifier	qoe		972754	0					
ANR	973830	CallExpression	"strchr ( str + 1 , x1b )"		972754	1					
ANR	973831	Callee	strchr		972754	0					
ANR	973832	Identifier	strchr		972754	0					
ANR	973833	ArgumentList	str + 1		972754	1					
ANR	973834	Argument	str + 1		972754	0					
ANR	973835	AdditiveExpression	str + 1		972754	0		+			
ANR	973836	Identifier	str		972754	0					
ANR	973837	PrimaryExpression	1		972754	1					
ANR	973838	Argument	x1b		972754	1					
ANR	973839	Identifier	x1b		972754	0					
ANR	973840	IfStatement	if ( ! qoe )		972754	3					
ANR	973841	Condition	! qoe	2673:7:80562:80565	972754	0	True				
ANR	973842	UnaryOperationExpression	! qoe		972754	0					
ANR	973843	UnaryOperator	!		972754	0					
ANR	973844	Identifier	qoe		972754	1					
ANR	973845	CompoundStatement		154:13:4255:4255	972754	1					
ANR	973846	ExpressionStatement	"qoe = strchr ( str + 1 , ';' )"	2674:4:80574:80601	972754	0	True				
ANR	973847	AssignmentExpression	"qoe = strchr ( str + 1 , ';' )"		972754	0		=			
ANR	973848	Identifier	qoe		972754	0					
ANR	973849	CallExpression	"strchr ( str + 1 , ';' )"		972754	1					
ANR	973850	Callee	strchr		972754	0					
ANR	973851	Identifier	strchr		972754	0					
ANR	973852	ArgumentList	str + 1		972754	1					
ANR	973853	Argument	str + 1		972754	0					
ANR	973854	AdditiveExpression	str + 1		972754	0		+			
ANR	973855	Identifier	str		972754	0					
ANR	973856	PrimaryExpression	1		972754	1					
ANR	973857	Argument	';'		972754	1					
ANR	973858	PrimaryExpression	';'		972754	0					
ANR	973859	IfStatement	if ( ! qoe )		972754	4					
ANR	973860	Condition	! qoe	2676:7:80615:80618	972754	0	True				
ANR	973861	UnaryOperationExpression	! qoe		972754	0					
ANR	973862	UnaryOperator	!		972754	0					
ANR	973863	Identifier	qoe		972754	1					
ANR	973864	CompoundStatement		157:13:4308:4308	972754	1					
ANR	973865	ExpressionStatement	"qoe = strchr ( str + 1 , ' ' )"	2677:4:80627:80654	972754	0	True				
ANR	973866	AssignmentExpression	"qoe = strchr ( str + 1 , ' ' )"		972754	0		=			
ANR	973867	Identifier	qoe		972754	0					
ANR	973868	CallExpression	"strchr ( str + 1 , ' ' )"		972754	1					
ANR	973869	Callee	strchr		972754	0					
ANR	973870	Identifier	strchr		972754	0					
ANR	973871	ArgumentList	str + 1		972754	1					
ANR	973872	Argument	str + 1		972754	0					
ANR	973873	AdditiveExpression	str + 1		972754	0		+			
ANR	973874	Identifier	str		972754	0					
ANR	973875	PrimaryExpression	1		972754	1					
ANR	973876	Argument	' '		972754	1					
ANR	973877	PrimaryExpression	' '		972754	0					
ANR	973878	IfStatement	if ( qoe )		972754	5					
ANR	973879	Condition	qoe	2679:7:80668:80670	972754	0	True				
ANR	973880	Identifier	qoe		972754	0					
ANR	973881	CompoundStatement		160:12:4360:4360	972754	1					
ANR	973882	ExpressionStatement	free ( string2 )	2680:4:80679:80693	972754	0	True				
ANR	973883	CallExpression	free ( string2 )		972754	0					
ANR	973884	Callee	free		972754	0					
ANR	973885	Identifier	free		972754	0					
ANR	973886	ArgumentList	string2		972754	1					
ANR	973887	Argument	string2		972754	0					
ANR	973888	Identifier	string2		972754	0					
ANR	973889	ExpressionStatement	"string2 = r_str_ndup ( str + 1 , qoe - str - 1 )"	2681:4:80699:80744	972754	1	True				
ANR	973890	AssignmentExpression	"string2 = r_str_ndup ( str + 1 , qoe - str - 1 )"		972754	0		=			
ANR	973891	Identifier	string2		972754	0					
ANR	973892	CallExpression	"r_str_ndup ( str + 1 , qoe - str - 1 )"		972754	1					
ANR	973893	Callee	r_str_ndup		972754	0					
ANR	973894	Identifier	r_str_ndup		972754	0					
ANR	973895	ArgumentList	str + 1		972754	1					
ANR	973896	Argument	str + 1		972754	0					
ANR	973897	AdditiveExpression	str + 1		972754	0		+			
ANR	973898	Identifier	str		972754	0					
ANR	973899	PrimaryExpression	1		972754	1					
ANR	973900	Argument	qoe - str - 1		972754	1					
ANR	973901	AdditiveExpression	qoe - str - 1		972754	0		-			
ANR	973902	Identifier	qoe		972754	0					
ANR	973903	AdditiveExpression	str - 1		972754	1		-			
ANR	973904	Identifier	str		972754	0					
ANR	973905	PrimaryExpression	1		972754	1					
ANR	973906	ElseStatement	else		972754	0					
ANR	973907	CompoundStatement		163:10:4443:4443	972754	0					
ANR	973908	ExpressionStatement	free ( string2 )	2683:4:80762:80776	972754	0	True				
ANR	973909	CallExpression	free ( string2 )		972754	0					
ANR	973910	Callee	free		972754	0					
ANR	973911	Identifier	free		972754	0					
ANR	973912	ArgumentList	string2		972754	1					
ANR	973913	Argument	string2		972754	0					
ANR	973914	Identifier	string2		972754	0					
ANR	973915	ExpressionStatement	string2 = strdup ( str + 1 )	2684:4:80782:80808	972754	1	True				
ANR	973916	AssignmentExpression	string2 = strdup ( str + 1 )		972754	0		=			
ANR	973917	Identifier	string2		972754	0					
ANR	973918	CallExpression	strdup ( str + 1 )		972754	1					
ANR	973919	Callee	strdup		972754	0					
ANR	973920	Identifier	strdup		972754	0					
ANR	973921	ArgumentList	str + 1		972754	1					
ANR	973922	Argument	str + 1		972754	0					
ANR	973923	AdditiveExpression	str + 1		972754	0		+			
ANR	973924	Identifier	str		972754	0					
ANR	973925	PrimaryExpression	1		972754	1					
ANR	973926	IfStatement	if ( string2 )		972754	6					
ANR	973927	Condition	string2	2686:7:80822:80828	972754	0	True				
ANR	973928	Identifier	string2		972754	0					
ANR	973929	CompoundStatement		167:16:4518:4518	972754	1					
ANR	973930	ExpressionStatement	R_FREE ( string )	2687:4:80837:80852	972754	0	True				
ANR	973931	CallExpression	R_FREE ( string )		972754	0					
ANR	973932	Callee	R_FREE		972754	0					
ANR	973933	Identifier	R_FREE		972754	0					
ANR	973934	ArgumentList	string		972754	1					
ANR	973935	Argument	string		972754	0					
ANR	973936	Identifier	string		972754	0					
ANR	973937	ExpressionStatement	string = string2	2688:4:80858:80874	972754	1	True				
ANR	973938	AssignmentExpression	string = string2		972754	0		=			
ANR	973939	Identifier	string		972754	0					
ANR	973940	Identifier	string2		972754	1					
ANR	973941	ExpressionStatement	string2 = NULL	2689:4:80880:80894	972754	2	True				
ANR	973942	AssignmentExpression	string2 = NULL		972754	0		=			
ANR	973943	Identifier	string2		972754	0					
ANR	973944	Identifier	NULL		972754	1					
ANR	973945	ExpressionStatement	R_FREE ( string2 )	2692:2:80907:80923	972754	16	True				
ANR	973946	CallExpression	R_FREE ( string2 )		972754	0					
ANR	973947	Callee	R_FREE		972754	0					
ANR	973948	Identifier	R_FREE		972754	0					
ANR	973949	ArgumentList	string2		972754	1					
ANR	973950	Argument	string2		972754	0					
ANR	973951	Identifier	string2		972754	0					
ANR	973952	ExpressionStatement	"_handle_call ( core , line , & str )"	2693:2:80927:80958	972754	17	True				
ANR	973953	CallExpression	"_handle_call ( core , line , & str )"		972754	0					
ANR	973954	Callee	_handle_call		972754	0					
ANR	973955	Identifier	_handle_call		972754	0					
ANR	973956	ArgumentList	core		972754	1					
ANR	973957	Argument	core		972754	0					
ANR	973958	Identifier	core		972754	0					
ANR	973959	Argument	line		972754	1					
ANR	973960	Identifier	line		972754	0					
ANR	973961	Argument	& str		972754	2					
ANR	973962	UnaryOperationExpression	& str		972754	0					
ANR	973963	UnaryOperator	&		972754	0					
ANR	973964	Identifier	str		972754	1					
ANR	973965	IfStatement	if ( ! str )		972754	18					
ANR	973966	Condition	! str	2694:6:80966:80969	972754	0	True				
ANR	973967	UnaryOperationExpression	! str		972754	0					
ANR	973968	UnaryOperator	!		972754	0					
ANR	973969	Identifier	str		972754	1					
ANR	973970	CompoundStatement		175:12:4659:4659	972754	1					
ANR	973971	ExpressionStatement	"str = strstr ( line , ""sym."" )"	2695:3:80977:81004	972754	0	True				
ANR	973972	AssignmentExpression	"str = strstr ( line , ""sym."" )"		972754	0		=			
ANR	973973	Identifier	str		972754	0					
ANR	973974	CallExpression	"strstr ( line , ""sym."" )"		972754	1					
ANR	973975	Callee	strstr		972754	0					
ANR	973976	Identifier	strstr		972754	0					
ANR	973977	ArgumentList	line		972754	1					
ANR	973978	Argument	line		972754	0					
ANR	973979	Identifier	line		972754	0					
ANR	973980	Argument	"""sym."""		972754	1					
ANR	973981	PrimaryExpression	"""sym."""		972754	0					
ANR	973982	IfStatement	if ( ! str )		972754	1					
ANR	973983	Condition	! str	2696:7:81013:81016	972754	0	True				
ANR	973984	UnaryOperationExpression	! str		972754	0					
ANR	973985	UnaryOperator	!		972754	0					
ANR	973986	Identifier	str		972754	1					
ANR	973987	CompoundStatement		177:13:4706:4706	972754	1					
ANR	973988	ExpressionStatement	"str = strstr ( line , ""fcn."" )"	2697:4:81025:81052	972754	0	True				
ANR	973989	AssignmentExpression	"str = strstr ( line , ""fcn."" )"		972754	0		=			
ANR	973990	Identifier	str		972754	0					
ANR	973991	CallExpression	"strstr ( line , ""fcn."" )"		972754	1					
ANR	973992	Callee	strstr		972754	0					
ANR	973993	Identifier	strstr		972754	0					
ANR	973994	ArgumentList	line		972754	1					
ANR	973995	Argument	line		972754	0					
ANR	973996	Identifier	line		972754	0					
ANR	973997	Argument	"""fcn."""		972754	1					
ANR	973998	PrimaryExpression	"""fcn."""		972754	0					
ANR	973999	IfStatement	if ( str )		972754	19					
ANR	974000	Condition	str	2700:6:81069:81071	972754	0	True				
ANR	974001	Identifier	str		972754	0					
ANR	974002	CompoundStatement		183:3:4789:4818	972754	1					
ANR	974003	ExpressionStatement	str = strdup ( str )	2701:3:81079:81097	972754	0	True				
ANR	974004	AssignmentExpression	str = strdup ( str )		972754	0		=			
ANR	974005	Identifier	str		972754	0					
ANR	974006	CallExpression	strdup ( str )		972754	1					
ANR	974007	Callee	strdup		972754	0					
ANR	974008	Identifier	strdup		972754	0					
ANR	974009	ArgumentList	str		972754	1					
ANR	974010	Argument	str		972754	0					
ANR	974011	Identifier	str		972754	0					
ANR	974012	IdentifierDeclStatement	"char * qoe = strstr ( str , "";"" ) ;"	2702:3:81102:81131	972754	1	True				
ANR	974013	IdentifierDecl	"* qoe = strstr ( str , "";"" )"		972754	0					
ANR	974014	IdentifierDeclType	char *		972754	0					
ANR	974015	Identifier	qoe		972754	1					
ANR	974016	AssignmentExpression	"* qoe = strstr ( str , "";"" )"		972754	2		=			
ANR	974017	Identifier	qoe		972754	0					
ANR	974018	CallExpression	"strstr ( str , "";"" )"		972754	1					
ANR	974019	Callee	strstr		972754	0					
ANR	974020	Identifier	strstr		972754	0					
ANR	974021	ArgumentList	str		972754	1					
ANR	974022	Argument	str		972754	0					
ANR	974023	Identifier	str		972754	0					
ANR	974024	Argument	""";"""		972754	1					
ANR	974025	PrimaryExpression	""";"""		972754	0					
ANR	974026	IfStatement	if ( qoe )		972754	2					
ANR	974027	Condition	qoe	2703:7:81140:81142	972754	0	True				
ANR	974028	Identifier	qoe		972754	0					
ANR	974029	CompoundStatement		185:4:4838:4851	972754	1					
ANR	974030	IdentifierDeclStatement	char * t = str ;	2704:4:81151:81164	972754	0	True				
ANR	974031	IdentifierDecl	* t = str		972754	0					
ANR	974032	IdentifierDeclType	char *		972754	0					
ANR	974033	Identifier	t		972754	1					
ANR	974034	AssignmentExpression	* t = str		972754	2		=			
ANR	974035	Identifier	str		972754	0					
ANR	974036	Identifier	str		972754	1					
ANR	974037	ExpressionStatement	"str = r_str_ndup ( str , qoe - str )"	2705:4:81170:81203	972754	1	True				
ANR	974038	AssignmentExpression	"str = r_str_ndup ( str , qoe - str )"		972754	0		=			
ANR	974039	Identifier	str		972754	0					
ANR	974040	CallExpression	"r_str_ndup ( str , qoe - str )"		972754	1					
ANR	974041	Callee	r_str_ndup		972754	0					
ANR	974042	Identifier	r_str_ndup		972754	0					
ANR	974043	ArgumentList	str		972754	1					
ANR	974044	Argument	str		972754	0					
ANR	974045	Identifier	str		972754	0					
ANR	974046	Argument	qoe - str		972754	1					
ANR	974047	AdditiveExpression	qoe - str		972754	0		-			
ANR	974048	Identifier	qoe		972754	0					
ANR	974049	Identifier	str		972754	1					
ANR	974050	ExpressionStatement	free ( t )	2706:4:81209:81217	972754	2	True				
ANR	974051	CallExpression	free ( t )		972754	0					
ANR	974052	Callee	free		972754	0					
ANR	974053	Identifier	free		972754	0					
ANR	974054	ArgumentList	t		972754	1					
ANR	974055	Argument	t		972754	0					
ANR	974056	Identifier	t		972754	0					
ANR	974057	IfStatement	if ( str )		972754	20					
ANR	974058	Condition	str	2709:6:81234:81236	972754	0	True				
ANR	974059	Identifier	str		972754	0					
ANR	974060	CompoundStatement		190:11:4926:4926	972754	1					
ANR	974061	ExpressionStatement	string2 = strdup ( str )	2710:3:81244:81266	972754	0	True				
ANR	974062	AssignmentExpression	string2 = strdup ( str )		972754	0		=			
ANR	974063	Identifier	string2		972754	0					
ANR	974064	CallExpression	strdup ( str )		972754	1					
ANR	974065	Callee	strdup		972754	0					
ANR	974066	Identifier	strdup		972754	0					
ANR	974067	ArgumentList	str		972754	1					
ANR	974068	Argument	str		972754	0					
ANR	974069	Identifier	str		972754	0					
ANR	974070	ExpressionStatement	linecolor = R_CONS_COLOR ( call )	2711:3:81271:81302	972754	1	True				
ANR	974071	AssignmentExpression	linecolor = R_CONS_COLOR ( call )		972754	0		=			
ANR	974072	Identifier	linecolor		972754	0					
ANR	974073	CallExpression	R_CONS_COLOR ( call )		972754	1					
ANR	974074	Callee	R_CONS_COLOR		972754	0					
ANR	974075	Identifier	R_CONS_COLOR		972754	0					
ANR	974076	ArgumentList	call		972754	1					
ANR	974077	Argument	call		972754	0					
ANR	974078	Identifier	call		972754	0					
ANR	974079	IfStatement	if ( ! string && string2 )		972754	21					
ANR	974080	Condition	! string && string2	2713:6:81314:81331	972754	0	True				
ANR	974081	AndExpression	! string && string2		972754	0		&&			
ANR	974082	UnaryOperationExpression	! string		972754	0					
ANR	974083	UnaryOperator	!		972754	0					
ANR	974084	Identifier	string		972754	1					
ANR	974085	Identifier	string2		972754	1					
ANR	974086	CompoundStatement		194:26:5021:5021	972754	1					
ANR	974087	ExpressionStatement	string = string2	2714:3:81339:81355	972754	0	True				
ANR	974088	AssignmentExpression	string = string2		972754	0		=			
ANR	974089	Identifier	string		972754	0					
ANR	974090	Identifier	string2		972754	1					
ANR	974091	ExpressionStatement	string2 = NULL	2715:3:81360:81374	972754	1	True				
ANR	974092	AssignmentExpression	string2 = NULL		972754	0		=			
ANR	974093	Identifier	string2		972754	0					
ANR	974094	Identifier	NULL		972754	1					
ANR	974095	IfStatement	"if ( strstr ( line , ""XREF"" ) )"		972754	22					
ANR	974096	Condition	"strstr ( line , ""XREF"" )"	2717:6:81386:81406	972754	0	True				
ANR	974097	CallExpression	"strstr ( line , ""XREF"" )"		972754	0					
ANR	974098	Callee	strstr		972754	0					
ANR	974099	Identifier	strstr		972754	0					
ANR	974100	ArgumentList	line		972754	1					
ANR	974101	Argument	line		972754	0					
ANR	974102	Identifier	line		972754	0					
ANR	974103	Argument	"""XREF"""		972754	1					
ANR	974104	PrimaryExpression	"""XREF"""		972754	0					
ANR	974105	CompoundStatement		198:29:5096:5096	972754	1					
ANR	974106	ExpressionStatement	addr = UT64_MAX	2718:3:81414:81429	972754	0	True				
ANR	974107	AssignmentExpression	addr = UT64_MAX		972754	0		=			
ANR	974108	Identifier	addr		972754	0					
ANR	974109	Identifier	UT64_MAX		972754	1					
ANR	974110	IfStatement	if ( addr != UT64_MAX )		972754	23					
ANR	974111	Condition	addr != UT64_MAX	2720:6:81441:81456	972754	0	True				
ANR	974112	EqualityExpression	addr != UT64_MAX		972754	0		!=			
ANR	974113	Identifier	addr		972754	0					
ANR	974114	Identifier	UT64_MAX		972754	1					
ANR	974115	CompoundStatement		202:3:5151:5173	972754	1					
ANR	974116	IdentifierDeclStatement	const char * str = NULL ;	2721:3:81464:81486	972754	0	True				
ANR	974117	IdentifierDecl	* str = NULL		972754	0					
ANR	974118	IdentifierDeclType	const char *		972754	0					
ANR	974119	Identifier	str		972754	1					
ANR	974120	AssignmentExpression	* str = NULL		972754	2		=			
ANR	974121	Identifier	NULL		972754	0					
ANR	974122	Identifier	NULL		972754	1					
ANR	974123	IfStatement	if ( show_comments )		972754	1					
ANR	974124	Condition	show_comments	2722:7:81495:81507	972754	0	True				
ANR	974125	Identifier	show_comments		972754	0					
ANR	974126	CompoundStatement		204:4:5203:5256	972754	1					
ANR	974127	IdentifierDeclStatement	"char * comment = r_core_anal_get_comments ( core , addr ) ;"	2723:4:81516:81569	972754	0	True				
ANR	974128	IdentifierDecl	"* comment = r_core_anal_get_comments ( core , addr )"		972754	0					
ANR	974129	IdentifierDeclType	char *		972754	0					
ANR	974130	Identifier	comment		972754	1					
ANR	974131	AssignmentExpression	"* comment = r_core_anal_get_comments ( core , addr )"		972754	2		=			
ANR	974132	Identifier	comment		972754	0					
ANR	974133	CallExpression	"r_core_anal_get_comments ( core , addr )"		972754	1					
ANR	974134	Callee	r_core_anal_get_comments		972754	0					
ANR	974135	Identifier	r_core_anal_get_comments		972754	0					
ANR	974136	ArgumentList	core		972754	1					
ANR	974137	Argument	core		972754	0					
ANR	974138	Identifier	core		972754	0					
ANR	974139	Argument	addr		972754	1					
ANR	974140	Identifier	addr		972754	0					
ANR	974141	IfStatement	if ( comment )		972754	1					
ANR	974142	Condition	comment	2724:8:81579:81585	972754	0	True				
ANR	974143	Identifier	comment		972754	0					
ANR	974144	CompoundStatement		205:17:5275:5275	972754	1					
ANR	974145	IfStatement	if ( switchcmp )		972754	0					
ANR	974146	Condition	switchcmp	2725:9:81599:81607	972754	0	True				
ANR	974147	Identifier	switchcmp		972754	0					
ANR	974148	CompoundStatement		206:20:5297:5297	972754	1					
ANR	974149	IfStatement	"if ( strcmp ( comment , switchcmp ) )"		972754	0					
ANR	974150	Condition	"strcmp ( comment , switchcmp )"	2726:10:81622:81648	972754	0	True				
ANR	974151	CallExpression	"strcmp ( comment , switchcmp )"		972754	0					
ANR	974152	Callee	strcmp		972754	0					
ANR	974153	Identifier	strcmp		972754	0					
ANR	974154	ArgumentList	comment		972754	1					
ANR	974155	Argument	comment		972754	0					
ANR	974156	Identifier	comment		972754	0					
ANR	974157	Argument	switchcmp		972754	1					
ANR	974158	Identifier	switchcmp		972754	0					
ANR	974159	CompoundStatement		207:39:5338:5338	972754	1					
ANR	974160	IfStatement	if ( show_offset )		972754	0					
ANR	974161	Condition	show_offset	2727:11:81664:81674	972754	0	True				
ANR	974162	Identifier	show_offset		972754	0					
ANR	974163	CompoundStatement		208:24:5364:5364	972754	1					
ANR	974164	Statement	r_cons_printf	2728:8:81687:81699	972754	0	True				
ANR	974165	Statement	(	2728:22:81701:81701	972754	1	True				
ANR	974166	Statement	"""%s0x%08"""	2728:23:81702:81710	972754	2	True				
ANR	974167	Statement	PFMT64x	2728:32:81711:81717	972754	3	True				
ANR	974168	Statement	""" """	2728:39:81718:81720	972754	4	True				
ANR	974169	Statement	","	2728:42:81721:81721	972754	5	True				
ANR	974170	Statement	use_color	2728:44:81723:81731	972754	6	True				
ANR	974171	Statement	?	2728:53:81732:81732	972754	7	True				
ANR	974172	Statement	pal	2728:55:81734:81736	972754	8	True				
ANR	974173	Statement	->	2728:58:81737:81738	972754	9	True				
ANR	974174	Label	offset :	2728:60:81739:81745	972754	10	True				
ANR	974175	Identifier	offset		972754	0					
ANR	974176	Statement	""""""	2728:68:81747:81748	972754	11	True				
ANR	974177	Statement	","	2728:70:81749:81749	972754	12	True				
ANR	974178	Statement	addr	2728:72:81751:81754	972754	13	True				
ANR	974179	Statement	)	2728:76:81755:81755	972754	14	True				
ANR	974180	ExpressionStatement		2728:77:81756:81756	972754	15	True				
ANR	974181	ExpressionStatement	"r_cons_printf ( ""%s%s\\n"" , use_color ? pal -> comment : """" , comment )"	2730:7:81774:81836	972754	1	True				
ANR	974182	CallExpression	"r_cons_printf ( ""%s%s\\n"" , use_color ? pal -> comment : """" , comment )"		972754	0					
ANR	974183	Callee	r_cons_printf		972754	0					
ANR	974184	Identifier	r_cons_printf		972754	0					
ANR	974185	ArgumentList	"""%s%s\\n"""		972754	1					
ANR	974186	Argument	"""%s%s\\n"""		972754	0					
ANR	974187	PrimaryExpression	"""%s%s\\n"""		972754	0					
ANR	974188	Argument	"use_color ? pal -> comment : """""		972754	1					
ANR	974189	ConditionalExpression	"use_color ? pal -> comment : """""		972754	0					
ANR	974190	Condition	use_color		972754	0					
ANR	974191	Identifier	use_color		972754	0					
ANR	974192	PtrMemberAccess	pal -> comment		972754	1					
ANR	974193	Identifier	pal		972754	0					
ANR	974194	Identifier	comment		972754	1					
ANR	974195	PrimaryExpression	""""""		972754	2					
ANR	974196	Argument	comment		972754	2					
ANR	974197	Identifier	comment		972754	0					
ANR	974198	ElseStatement	else		972754	0					
ANR	974199	CompoundStatement		214:10:5550:5550	972754	0					
ANR	974200	IfStatement	if ( show_offset )		972754	0					
ANR	974201	Condition	show_offset	2734:10:81875:81885	972754	0	True				
ANR	974202	Identifier	show_offset		972754	0					
ANR	974203	CompoundStatement		215:23:5575:5575	972754	1					
ANR	974204	Statement	r_cons_printf	2735:7:81897:81909	972754	0	True				
ANR	974205	Statement	(	2735:21:81911:81911	972754	1	True				
ANR	974206	Statement	"""%s0x%08"""	2735:22:81912:81920	972754	2	True				
ANR	974207	Statement	PFMT64x	2735:31:81921:81927	972754	3	True				
ANR	974208	Statement	""" """	2735:38:81928:81930	972754	4	True				
ANR	974209	Statement	","	2735:41:81931:81931	972754	5	True				
ANR	974210	Statement	use_color	2735:43:81933:81941	972754	6	True				
ANR	974211	Statement	?	2735:52:81942:81942	972754	7	True				
ANR	974212	Statement	pal	2735:54:81944:81946	972754	8	True				
ANR	974213	Statement	->	2735:57:81947:81948	972754	9	True				
ANR	974214	Label	offset :	2735:59:81949:81955	972754	10	True				
ANR	974215	Identifier	offset		972754	0					
ANR	974216	Statement	""""""	2735:67:81957:81958	972754	11	True				
ANR	974217	Statement	","	2735:69:81959:81959	972754	12	True				
ANR	974218	Statement	addr	2735:71:81961:81964	972754	13	True				
ANR	974219	Statement	)	2735:75:81965:81965	972754	14	True				
ANR	974220	ExpressionStatement		2735:76:81966:81966	972754	15	True				
ANR	974221	ExpressionStatement	"r_cons_printf ( ""%s%s\\n"" , use_color ? pal -> comment : """" , comment )"	2737:6:81982:82044	972754	1	True				
ANR	974222	CallExpression	"r_cons_printf ( ""%s%s\\n"" , use_color ? pal -> comment : """" , comment )"		972754	0					
ANR	974223	Callee	r_cons_printf		972754	0					
ANR	974224	Identifier	r_cons_printf		972754	0					
ANR	974225	ArgumentList	"""%s%s\\n"""		972754	1					
ANR	974226	Argument	"""%s%s\\n"""		972754	0					
ANR	974227	PrimaryExpression	"""%s%s\\n"""		972754	0					
ANR	974228	Argument	"use_color ? pal -> comment : """""		972754	1					
ANR	974229	ConditionalExpression	"use_color ? pal -> comment : """""		972754	0					
ANR	974230	Condition	use_color		972754	0					
ANR	974231	Identifier	use_color		972754	0					
ANR	974232	PtrMemberAccess	pal -> comment		972754	1					
ANR	974233	Identifier	pal		972754	0					
ANR	974234	Identifier	comment		972754	1					
ANR	974235	PrimaryExpression	""""""		972754	2					
ANR	974236	Argument	comment		972754	2					
ANR	974237	Identifier	comment		972754	0					
ANR	974238	IfStatement	"if ( r_str_startswith ( comment , ""switch table"" ) )"		972754	1					
ANR	974239	Condition	"r_str_startswith ( comment , ""switch table"" )"	2739:9:82062:82103	972754	0	True				
ANR	974240	CallExpression	"r_str_startswith ( comment , ""switch table"" )"		972754	0					
ANR	974241	Callee	r_str_startswith		972754	0					
ANR	974242	Identifier	r_str_startswith		972754	0					
ANR	974243	ArgumentList	comment		972754	1					
ANR	974244	Argument	comment		972754	0					
ANR	974245	Identifier	comment		972754	0					
ANR	974246	Argument	"""switch table"""		972754	1					
ANR	974247	PrimaryExpression	"""switch table"""		972754	0					
ANR	974248	CompoundStatement		220:53:5793:5793	972754	1					
ANR	974249	ExpressionStatement	switchcmp = strdup ( comment )	2740:6:82114:82142	972754	0	True				
ANR	974250	AssignmentExpression	switchcmp = strdup ( comment )		972754	0		=			
ANR	974251	Identifier	switchcmp		972754	0					
ANR	974252	CallExpression	strdup ( comment )		972754	1					
ANR	974253	Callee	strdup		972754	0					
ANR	974254	Identifier	strdup		972754	0					
ANR	974255	ArgumentList	comment		972754	1					
ANR	974256	Argument	comment		972754	0					
ANR	974257	Identifier	comment		972754	0					
ANR	974258	ExpressionStatement	R_FREE ( comment )	2742:5:82156:82172	972754	2	True				
ANR	974259	CallExpression	R_FREE ( comment )		972754	0					
ANR	974260	Callee	R_FREE		972754	0					
ANR	974261	Identifier	R_FREE		972754	0					
ANR	974262	ArgumentList	comment		972754	1					
ANR	974263	Argument	comment		972754	0					
ANR	974264	Identifier	comment		972754	0					
ANR	974265	IfStatement	if ( fcn )		972754	2					
ANR	974266	Condition	fcn	2746:7:82193:82195	972754	0	True				
ANR	974267	Identifier	fcn		972754	0					
ANR	974268	CompoundStatement		231:4:5998:6013	972754	1					
ANR	974269	IdentifierDeclStatement	bool label = false ;	2747:4:82204:82222	972754	0	True				
ANR	974270	IdentifierDecl	label = false		972754	0					
ANR	974271	IdentifierDeclType	bool		972754	0					
ANR	974272	Identifier	label		972754	1					
ANR	974273	AssignmentExpression	label = false		972754	2		=			
ANR	974274	Identifier	false		972754	0					
ANR	974275	Identifier	false		972754	1					
ANR	974276	IdentifierDeclStatement	RAnalBlock * bb ;	2749:4:82291:82305	972754	1	True				
ANR	974277	IdentifierDecl	* bb		972754	0					
ANR	974278	IdentifierDeclType	RAnalBlock *		972754	0					
ANR	974279	Identifier	bb		972754	1					
ANR	974280	IdentifierDeclStatement	RListIter * iter ;	2750:4:82311:82326	972754	2	True				
ANR	974281	IdentifierDecl	* iter		972754	0					
ANR	974282	IdentifierDeclType	RListIter *		972754	0					
ANR	974283	Identifier	iter		972754	1					
ANR	974284	Statement	r_list_foreach	2751:4:82332:82345	972754	3	True				
ANR	974285	Statement	(	2751:19:82347:82347	972754	4	True				
ANR	974286	Statement	fcn	2751:20:82348:82350	972754	5	True				
ANR	974287	Statement	->	2751:23:82351:82352	972754	6	True				
ANR	974288	Statement	bbs	2751:25:82353:82355	972754	7	True				
ANR	974289	Statement	","	2751:28:82356:82356	972754	8	True				
ANR	974290	Statement	iter	2751:30:82358:82361	972754	9	True				
ANR	974291	Statement	","	2751:34:82362:82362	972754	10	True				
ANR	974292	Statement	bb	2751:36:82364:82365	972754	11	True				
ANR	974293	Statement	)	2751:38:82366:82366	972754	12	True				
ANR	974294	CompoundStatement		232:40:6055:6055	972754	13					
ANR	974295	IfStatement	if ( addr == bb -> jump )		972754	0					
ANR	974296	Condition	addr == bb -> jump	2752:9:82379:82394	972754	0	True				
ANR	974297	EqualityExpression	addr == bb -> jump		972754	0		==			
ANR	974298	Identifier	addr		972754	0					
ANR	974299	PtrMemberAccess	bb -> jump		972754	1					
ANR	974300	Identifier	bb		972754	0					
ANR	974301	Identifier	jump		972754	1					
ANR	974302	CompoundStatement		233:27:6084:6084	972754	1					
ANR	974303	IfStatement	if ( show_offset )		972754	0					
ANR	974304	Condition	show_offset	2753:10:82409:82419	972754	0	True				
ANR	974305	Identifier	show_offset		972754	0					
ANR	974306	CompoundStatement		234:23:6109:6109	972754	1					
ANR	974307	Statement	r_cons_printf	2754:7:82431:82443	972754	0	True				
ANR	974308	Statement	(	2754:21:82445:82445	972754	1	True				
ANR	974309	Statement	"""%s0x%08"""	2754:22:82446:82454	972754	2	True				
ANR	974310	Statement	PFMT64x	2754:31:82455:82461	972754	3	True				
ANR	974311	Statement	""":\\n"""	2754:39:82463:82467	972754	4	True				
ANR	974312	Statement	","	2754:44:82468:82468	972754	5	True				
ANR	974313	Statement	use_color	2754:46:82470:82478	972754	6	True				
ANR	974314	Statement	?	2754:55:82479:82479	972754	7	True				
ANR	974315	Label	Color_YELLOW :	2754:57:82481:82493	972754	8	True				
ANR	974316	Identifier	Color_YELLOW		972754	0					
ANR	974317	Statement	""""""	2754:71:82495:82496	972754	9	True				
ANR	974318	Statement	","	2754:73:82497:82497	972754	10	True				
ANR	974319	Statement	addr	2754:75:82499:82502	972754	11	True				
ANR	974320	Statement	)	2754:79:82503:82503	972754	12	True				
ANR	974321	ExpressionStatement		2754:80:82504:82504	972754	13	True				
ANR	974322	ExpressionStatement	label = true	2756:6:82520:82532	972754	1	True				
ANR	974323	AssignmentExpression	label = true		972754	0		=			
ANR	974324	Identifier	label		972754	0					
ANR	974325	Identifier	true		972754	1					
ANR	974326	BreakStatement	break ;	2757:6:82540:82545	972754	2	True				
ANR	974327	IfStatement	"if ( ! label && strstr ( line , ""->"" ) )"		972754	14					
ANR	974328	Condition	"! label && strstr ( line , ""->"" )"	2760:8:82568:82596	972754	0	True				
ANR	974329	AndExpression	"! label && strstr ( line , ""->"" )"		972754	0		&&			
ANR	974330	UnaryOperationExpression	! label		972754	0					
ANR	974331	UnaryOperator	!		972754	0					
ANR	974332	Identifier	label		972754	1					
ANR	974333	CallExpression	"strstr ( line , ""->"" )"		972754	1					
ANR	974334	Callee	strstr		972754	0					
ANR	974335	Identifier	strstr		972754	0					
ANR	974336	ArgumentList	line		972754	1					
ANR	974337	Argument	line		972754	0					
ANR	974338	Identifier	line		972754	0					
ANR	974339	Argument	"""->"""		972754	1					
ANR	974340	PrimaryExpression	"""->"""		972754	0					
ANR	974341	CompoundStatement		241:39:6286:6286	972754	1					
ANR	974342	Statement	r_cons_printf	2761:5:82606:82618	972754	0	True				
ANR	974343	Statement	(	2761:19:82620:82620	972754	1	True				
ANR	974344	Statement	"""%s0x%08"""	2761:20:82621:82629	972754	2	True				
ANR	974345	Statement	PFMT64x	2761:29:82630:82636	972754	3	True				
ANR	974346	Statement	""":\\n"""	2761:37:82638:82642	972754	4	True				
ANR	974347	Statement	","	2761:42:82643:82643	972754	5	True				
ANR	974348	Statement	use_color	2761:44:82645:82653	972754	6	True				
ANR	974349	Statement	?	2761:53:82654:82654	972754	7	True				
ANR	974350	Label	Color_YELLOW :	2761:55:82656:82668	972754	8	True				
ANR	974351	Identifier	Color_YELLOW		972754	0					
ANR	974352	Statement	""""""	2761:69:82670:82671	972754	9	True				
ANR	974353	Statement	","	2761:71:82672:82672	972754	10	True				
ANR	974354	Statement	addr	2761:73:82674:82677	972754	11	True				
ANR	974355	Statement	)	2761:77:82678:82678	972754	12	True				
ANR	974356	ExpressionStatement		2761:78:82679:82679	972754	13	True				
ANR	974357	IfStatement	"if ( strstr ( line , ""=<"" ) )"		972754	15					
ANR	974358	Condition	"strstr ( line , ""=<"" )"	2763:8:82695:82713	972754	0	True				
ANR	974359	CallExpression	"strstr ( line , ""=<"" )"		972754	0					
ANR	974360	Callee	strstr		972754	0					
ANR	974361	Identifier	strstr		972754	0					
ANR	974362	ArgumentList	line		972754	1					
ANR	974363	Argument	line		972754	0					
ANR	974364	Identifier	line		972754	0					
ANR	974365	Argument	"""=<"""		972754	1					
ANR	974366	PrimaryExpression	"""=<"""		972754	0					
ANR	974367	CompoundStatement		244:29:6403:6403	972754	1					
ANR	974368	Statement	r_list_foreach	2764:5:82723:82736	972754	0	True				
ANR	974369	Statement	(	2764:20:82738:82738	972754	1	True				
ANR	974370	Statement	fcn	2764:21:82739:82741	972754	2	True				
ANR	974371	Statement	->	2764:24:82742:82743	972754	3	True				
ANR	974372	Statement	bbs	2764:26:82744:82746	972754	4	True				
ANR	974373	Statement	","	2764:29:82747:82747	972754	5	True				
ANR	974374	Statement	iter	2764:31:82749:82752	972754	6	True				
ANR	974375	Statement	","	2764:35:82753:82753	972754	7	True				
ANR	974376	Statement	bb	2764:37:82755:82756	972754	8	True				
ANR	974377	Statement	)	2764:39:82757:82757	972754	9	True				
ANR	974378	CompoundStatement		245:41:6446:6446	972754	10					
ANR	974379	IfStatement	if ( addr >= bb -> addr && addr < bb -> addr + bb -> size )		972754	0					
ANR	974380	Condition	addr >= bb -> addr && addr < bb -> addr + bb -> size	2765:10:82771:82816	972754	0	True				
ANR	974381	AndExpression	addr >= bb -> addr && addr < bb -> addr + bb -> size		972754	0		&&			
ANR	974382	RelationalExpression	addr >= bb -> addr		972754	0		>=			
ANR	974383	Identifier	addr		972754	0					
ANR	974384	PtrMemberAccess	bb -> addr		972754	1					
ANR	974385	Identifier	bb		972754	0					
ANR	974386	Identifier	addr		972754	1					
ANR	974387	RelationalExpression	addr < bb -> addr + bb -> size		972754	1		<			
ANR	974388	Identifier	addr		972754	0					
ANR	974389	AdditiveExpression	bb -> addr + bb -> size		972754	1		+			
ANR	974390	PtrMemberAccess	bb -> addr		972754	0					
ANR	974391	Identifier	bb		972754	0					
ANR	974392	Identifier	addr		972754	1					
ANR	974393	PtrMemberAccess	bb -> size		972754	1					
ANR	974394	Identifier	bb		972754	0					
ANR	974395	Identifier	size		972754	1					
ANR	974396	CompoundStatement		247:7:6515:6529	972754	1					
ANR	974397	IdentifierDeclStatement	const char * op ;	2766:7:82828:82842	972754	0	True				
ANR	974398	IdentifierDecl	* op		972754	0					
ANR	974399	IdentifierDeclType	const char *		972754	0					
ANR	974400	Identifier	op		972754	1					
ANR	974401	IfStatement	if ( use_color )		972754	1					
ANR	974402	Condition	use_color	2767:11:82855:82863	972754	0	True				
ANR	974403	Identifier	use_color		972754	0					
ANR	974404	CompoundStatement		248:22:6553:6553	972754	1					
ANR	974405	Statement	op	2768:8:82876:82877	972754	0	True				
ANR	974406	Statement	=	2768:11:82879:82879	972754	1	True				
ANR	974407	Statement	(	2768:13:82881:82881	972754	2	True				
ANR	974408	Statement	bb	2768:14:82882:82883	972754	3	True				
ANR	974409	Statement	->	2768:16:82884:82885	972754	4	True				
ANR	974410	Statement	fail	2768:18:82886:82889	972754	5	True				
ANR	974411	Statement	==	2768:23:82891:82892	972754	6	True				
ANR	974412	Statement	UT64_MAX	2768:26:82894:82901	972754	7	True				
ANR	974413	Statement	)	2768:34:82902:82902	972754	8	True				
ANR	974414	Statement	?	2768:35:82903:82903	972754	9	True				
ANR	974415	Statement	Color_GREEN	2768:37:82905:82915	972754	10	True				
ANR	974416	Statement	"""jmp"""	2768:49:82917:82921	972754	11	True				
ANR	974417	Statement	:	2768:54:82922:82922	972754	12	True				
ANR	974418	ExpressionStatement	"""cjmp"""	2768:56:82924:82930	972754	13	True				
ANR	974419	PrimaryExpression	"""cjmp"""		972754	0					
ANR	974420	ElseStatement	else		972754	0					
ANR	974421	CompoundStatement		250:14:6633:6633	972754	0					
ANR	974422	ExpressionStatement	"op = ( bb -> fail == UT64_MAX ) ? ""jmp"" : ""cjmp"""	2770:8:82956:82998	972754	0	True				
ANR	974423	AssignmentExpression	"op = ( bb -> fail == UT64_MAX ) ? ""jmp"" : ""cjmp"""		972754	0		=			
ANR	974424	Identifier	op		972754	0					
ANR	974425	ConditionalExpression	"( bb -> fail == UT64_MAX ) ? ""jmp"" : ""cjmp"""		972754	1					
ANR	974426	Condition	bb -> fail == UT64_MAX		972754	0					
ANR	974427	EqualityExpression	bb -> fail == UT64_MAX		972754	0		==			
ANR	974428	PtrMemberAccess	bb -> fail		972754	0					
ANR	974429	Identifier	bb		972754	0					
ANR	974430	Identifier	fail		972754	1					
ANR	974431	Identifier	UT64_MAX		972754	1					
ANR	974432	PrimaryExpression	"""jmp"""		972754	1					
ANR	974433	PrimaryExpression	"""cjmp"""		972754	2					
ANR	974434	IfStatement	if ( show_offset )		972754	2					
ANR	974435	Condition	show_offset	2772:11:83020:83030	972754	0	True				
ANR	974436	Identifier	show_offset		972754	0					
ANR	974437	CompoundStatement		253:24:6720:6720	972754	1					
ANR	974438	Statement	r_cons_printf	2773:8:83043:83055	972754	0	True				
ANR	974439	Statement	(	2773:22:83057:83057	972754	1	True				
ANR	974440	Statement	"""%s0x%08"""	2773:23:83058:83066	972754	2	True				
ANR	974441	Statement	PFMT64x	2773:32:83067:83073	972754	3	True				
ANR	974442	Statement	""" """	2773:39:83074:83076	972754	4	True				
ANR	974443	Statement	Color_RESET	2773:42:83077:83087	972754	5	True				
ANR	974444	Statement	","	2773:53:83088:83088	972754	6	True				
ANR	974445	Statement	use_color	2773:55:83090:83098	972754	7	True				
ANR	974446	Statement	?	2773:64:83099:83099	972754	8	True				
ANR	974447	Statement	pal	2773:66:83101:83103	972754	9	True				
ANR	974448	Statement	->	2773:69:83104:83105	972754	10	True				
ANR	974449	Label	offset :	2773:71:83106:83112	972754	11	True				
ANR	974450	Identifier	offset		972754	0					
ANR	974451	Statement	""""""	2773:79:83114:83115	972754	12	True				
ANR	974452	Statement	","	2773:81:83116:83116	972754	13	True				
ANR	974453	Statement	addr	2773:83:83118:83121	972754	14	True				
ANR	974454	Statement	)	2773:87:83122:83122	972754	15	True				
ANR	974455	ExpressionStatement		2773:88:83123:83123	972754	16	True				
ANR	974456	Statement	r_cons_printf	2775:7:83141:83153	972754	3	True				
ANR	974457	Statement	(	2775:21:83155:83155	972754	4	True				
ANR	974458	Statement	"""%s 0x%08"""	2775:22:83156:83165	972754	5	True				
ANR	974459	Statement	PFMT64x	2775:32:83166:83172	972754	6	True				
ANR	974460	Statement	"""%s\\n"""	2775:40:83174:83179	972754	7	True				
ANR	974461	Statement	","	2775:46:83180:83180	972754	8	True				
ANR	974462	Statement	op	2776:8:83190:83191	972754	9	True				
ANR	974463	Statement	","	2776:10:83192:83192	972754	10	True				
ANR	974464	Statement	bb	2776:12:83194:83195	972754	11	True				
ANR	974465	Statement	->	2776:14:83196:83197	972754	12	True				
ANR	974466	Statement	jump	2776:16:83198:83201	972754	13	True				
ANR	974467	Statement	","	2776:20:83202:83202	972754	14	True				
ANR	974468	Statement	use_color	2776:22:83204:83212	972754	15	True				
ANR	974469	Statement	?	2776:31:83213:83213	972754	16	True				
ANR	974470	Label	Color_RESET :	2776:33:83215:83226	972754	17	True				
ANR	974471	Identifier	Color_RESET		972754	0					
ANR	974472	Statement	""""""	2776:46:83228:83229	972754	18	True				
ANR	974473	Statement	)	2776:48:83230:83230	972754	19	True				
ANR	974474	ExpressionStatement		2776:49:83231:83231	972754	20	True				
ANR	974475	BreakStatement	break ;	2777:7:83240:83245	972754	21	True				
ANR	974476	IfStatement	if ( string && * string )		972754	3					
ANR	974477	Condition	string && * string	2782:7:83280:83296	972754	0	True				
ANR	974478	AndExpression	string && * string		972754	0		&&			
ANR	974479	Identifier	string		972754	0					
ANR	974480	UnaryOperationExpression	* string		972754	1					
ANR	974481	UnaryOperator	*		972754	0					
ANR	974482	Identifier	string		972754	1					
ANR	974483	CompoundStatement		271:4:7180:7202	972754	1					
ANR	974484	IfStatement	"if ( string && ! strncmp ( string , ""0x"" , 2 ) )"		972754	0					
ANR	974485	Condition	"string && ! strncmp ( string , ""0x"" , 2 )"	2783:8:83309:83344	972754	0	True				
ANR	974486	AndExpression	"string && ! strncmp ( string , ""0x"" , 2 )"		972754	0		&&			
ANR	974487	Identifier	string		972754	0					
ANR	974488	UnaryOperationExpression	"! strncmp ( string , ""0x"" , 2 )"		972754	1					
ANR	974489	UnaryOperator	!		972754	0					
ANR	974490	CallExpression	"strncmp ( string , ""0x"" , 2 )"		972754	1					
ANR	974491	Callee	strncmp		972754	0					
ANR	974492	Identifier	strncmp		972754	0					
ANR	974493	ArgumentList	string		972754	1					
ANR	974494	Argument	string		972754	0					
ANR	974495	Identifier	string		972754	0					
ANR	974496	Argument	"""0x"""		972754	1					
ANR	974497	PrimaryExpression	"""0x"""		972754	0					
ANR	974498	Argument	2		972754	2					
ANR	974499	PrimaryExpression	2		972754	0					
ANR	974500	CompoundStatement		264:46:7034:7034	972754	1					
ANR	974501	ExpressionStatement	str = string	2784:5:83354:83366	972754	0	True				
ANR	974502	AssignmentExpression	str = string		972754	0		=			
ANR	974503	Identifier	str		972754	0					
ANR	974504	Identifier	string		972754	1					
ANR	974505	IfStatement	"if ( string2 && ! strncmp ( string2 , ""0x"" , 2 ) )"		972754	1					
ANR	974506	Condition	"string2 && ! strncmp ( string2 , ""0x"" , 2 )"	2786:8:83382:83419	972754	0	True				
ANR	974507	AndExpression	"string2 && ! strncmp ( string2 , ""0x"" , 2 )"		972754	0		&&			
ANR	974508	Identifier	string2		972754	0					
ANR	974509	UnaryOperationExpression	"! strncmp ( string2 , ""0x"" , 2 )"		972754	1					
ANR	974510	UnaryOperator	!		972754	0					
ANR	974511	CallExpression	"strncmp ( string2 , ""0x"" , 2 )"		972754	1					
ANR	974512	Callee	strncmp		972754	0					
ANR	974513	Identifier	strncmp		972754	0					
ANR	974514	ArgumentList	string2		972754	1					
ANR	974515	Argument	string2		972754	0					
ANR	974516	Identifier	string2		972754	0					
ANR	974517	Argument	"""0x"""		972754	1					
ANR	974518	PrimaryExpression	"""0x"""		972754	0					
ANR	974519	Argument	2		972754	2					
ANR	974520	PrimaryExpression	2		972754	0					
ANR	974521	CompoundStatement		267:48:7109:7109	972754	1					
ANR	974522	ExpressionStatement	str = string2	2787:5:83429:83442	972754	0	True				
ANR	974523	AssignmentExpression	str = string2		972754	0		=			
ANR	974524	Identifier	str		972754	0					
ANR	974525	Identifier	string2		972754	1					
ANR	974526	IdentifierDeclStatement	"ut64 ptr = r_num_math ( NULL , str ) ;"	2789:4:83454:83487	972754	2	True				
ANR	974527	IdentifierDecl	"ptr = r_num_math ( NULL , str )"		972754	0					
ANR	974528	IdentifierDeclType	ut64		972754	0					
ANR	974529	Identifier	ptr		972754	1					
ANR	974530	AssignmentExpression	"ptr = r_num_math ( NULL , str )"		972754	2		=			
ANR	974531	Identifier	ptr		972754	0					
ANR	974532	CallExpression	"r_num_math ( NULL , str )"		972754	1					
ANR	974533	Callee	r_num_math		972754	0					
ANR	974534	Identifier	r_num_math		972754	0					
ANR	974535	ArgumentList	NULL		972754	1					
ANR	974536	Argument	NULL		972754	0					
ANR	974537	Identifier	NULL		972754	0					
ANR	974538	Argument	str		972754	1					
ANR	974539	Identifier	str		972754	0					
ANR	974540	IdentifierDeclStatement	RFlagItem * flag = NULL ;	2790:4:83493:83515	972754	3	True				
ANR	974541	IdentifierDecl	* flag = NULL		972754	0					
ANR	974542	IdentifierDeclType	RFlagItem *		972754	0					
ANR	974543	Identifier	flag		972754	1					
ANR	974544	AssignmentExpression	* flag = NULL		972754	2		=			
ANR	974545	Identifier	NULL		972754	0					
ANR	974546	Identifier	NULL		972754	1					
ANR	974547	IfStatement	if ( str )		972754	4					
ANR	974548	Condition	str	2791:8:83525:83527	972754	0	True				
ANR	974549	Identifier	str		972754	0					
ANR	974550	CompoundStatement		272:13:7217:7217	972754	1					
ANR	974551	ExpressionStatement	"flag = r_core_flag_get_by_spaces ( core -> flags , ptr )"	2792:5:83537:83588	972754	0	True				
ANR	974552	AssignmentExpression	"flag = r_core_flag_get_by_spaces ( core -> flags , ptr )"		972754	0		=			
ANR	974553	Identifier	flag		972754	0					
ANR	974554	CallExpression	"r_core_flag_get_by_spaces ( core -> flags , ptr )"		972754	1					
ANR	974555	Callee	r_core_flag_get_by_spaces		972754	0					
ANR	974556	Identifier	r_core_flag_get_by_spaces		972754	0					
ANR	974557	ArgumentList	core -> flags		972754	1					
ANR	974558	Argument	core -> flags		972754	0					
ANR	974559	PtrMemberAccess	core -> flags		972754	0					
ANR	974560	Identifier	core		972754	0					
ANR	974561	Identifier	flags		972754	1					
ANR	974562	Argument	ptr		972754	1					
ANR	974563	Identifier	ptr		972754	0					
ANR	974564	IfStatement	if ( ! flag )		972754	5					
ANR	974565	Condition	! flag	2794:8:83604:83608	972754	0	True				
ANR	974566	UnaryOperationExpression	! flag		972754	0					
ANR	974567	UnaryOperator	!		972754	0					
ANR	974568	Identifier	flag		972754	1					
ANR	974569	CompoundStatement		275:15:7298:7298	972754	1					
ANR	974570	IfStatement	"if ( string && ! strncmp ( string , ""0x"" , 2 ) )"		972754	0					
ANR	974571	Condition	"string && ! strncmp ( string , ""0x"" , 2 )"	2795:9:83622:83657	972754	0	True				
ANR	974572	AndExpression	"string && ! strncmp ( string , ""0x"" , 2 )"		972754	0		&&			
ANR	974573	Identifier	string		972754	0					
ANR	974574	UnaryOperationExpression	"! strncmp ( string , ""0x"" , 2 )"		972754	1					
ANR	974575	UnaryOperator	!		972754	0					
ANR	974576	CallExpression	"strncmp ( string , ""0x"" , 2 )"		972754	1					
ANR	974577	Callee	strncmp		972754	0					
ANR	974578	Identifier	strncmp		972754	0					
ANR	974579	ArgumentList	string		972754	1					
ANR	974580	Argument	string		972754	0					
ANR	974581	Identifier	string		972754	0					
ANR	974582	Argument	"""0x"""		972754	1					
ANR	974583	PrimaryExpression	"""0x"""		972754	0					
ANR	974584	Argument	2		972754	2					
ANR	974585	PrimaryExpression	2		972754	0					
ANR	974586	CompoundStatement		276:47:7347:7347	972754	1					
ANR	974587	ExpressionStatement	R_FREE ( string )	2796:6:83668:83683	972754	0	True				
ANR	974588	CallExpression	R_FREE ( string )		972754	0					
ANR	974589	Callee	R_FREE		972754	0					
ANR	974590	Identifier	R_FREE		972754	0					
ANR	974591	ArgumentList	string		972754	1					
ANR	974592	Argument	string		972754	0					
ANR	974593	Identifier	string		972754	0					
ANR	974594	IfStatement	"if ( string2 && ! strncmp ( string2 , ""0x"" , 2 ) )"		972754	1					
ANR	974595	Condition	"string2 && ! strncmp ( string2 , ""0x"" , 2 )"	2798:9:83701:83738	972754	0	True				
ANR	974596	AndExpression	"string2 && ! strncmp ( string2 , ""0x"" , 2 )"		972754	0		&&			
ANR	974597	Identifier	string2		972754	0					
ANR	974598	UnaryOperationExpression	"! strncmp ( string2 , ""0x"" , 2 )"		972754	1					
ANR	974599	UnaryOperator	!		972754	0					
ANR	974600	CallExpression	"strncmp ( string2 , ""0x"" , 2 )"		972754	1					
ANR	974601	Callee	strncmp		972754	0					
ANR	974602	Identifier	strncmp		972754	0					
ANR	974603	ArgumentList	string2		972754	1					
ANR	974604	Argument	string2		972754	0					
ANR	974605	Identifier	string2		972754	0					
ANR	974606	Argument	"""0x"""		972754	1					
ANR	974607	PrimaryExpression	"""0x"""		972754	0					
ANR	974608	Argument	2		972754	2					
ANR	974609	PrimaryExpression	2		972754	0					
ANR	974610	CompoundStatement		279:49:7428:7428	972754	1					
ANR	974611	ExpressionStatement	R_FREE ( string2 )	2799:6:83749:83765	972754	0	True				
ANR	974612	CallExpression	R_FREE ( string2 )		972754	0					
ANR	974613	Callee	R_FREE		972754	0					
ANR	974614	Identifier	R_FREE		972754	0					
ANR	974615	ArgumentList	string2		972754	1					
ANR	974616	Argument	string2		972754	0					
ANR	974617	Identifier	string2		972754	0					
ANR	974618	IfStatement	if ( string && addr != UT64_MAX && addr != UT32_MAX )		972754	6					
ANR	974619	Condition	string && addr != UT64_MAX && addr != UT32_MAX	2802:8:83788:83833	972754	0	True				
ANR	974620	AndExpression	string && addr != UT64_MAX && addr != UT32_MAX		972754	0		&&			
ANR	974621	Identifier	string		972754	0					
ANR	974622	AndExpression	addr != UT64_MAX && addr != UT32_MAX		972754	1		&&			
ANR	974623	EqualityExpression	addr != UT64_MAX		972754	0		!=			
ANR	974624	Identifier	addr		972754	0					
ANR	974625	Identifier	UT64_MAX		972754	1					
ANR	974626	EqualityExpression	addr != UT32_MAX		972754	1		!=			
ANR	974627	Identifier	addr		972754	0					
ANR	974628	Identifier	UT32_MAX		972754	1					
ANR	974629	CompoundStatement		283:56:7523:7523	972754	1					
ANR	974630	ExpressionStatement	r_str_trim ( string )	2803:5:83843:83862	972754	0	True				
ANR	974631	CallExpression	r_str_trim ( string )		972754	0					
ANR	974632	Callee	r_str_trim		972754	0					
ANR	974633	Identifier	r_str_trim		972754	0					
ANR	974634	ArgumentList	string		972754	1					
ANR	974635	Argument	string		972754	0					
ANR	974636	Identifier	string		972754	0					
ANR	974637	IfStatement	if ( string2 )		972754	1					
ANR	974638	Condition	string2	2804:9:83873:83879	972754	0	True				
ANR	974639	Identifier	string2		972754	0					
ANR	974640	CompoundStatement		285:18:7569:7569	972754	1					
ANR	974641	ExpressionStatement	r_str_trim ( string2 )	2805:6:83890:83910	972754	0	True				
ANR	974642	CallExpression	r_str_trim ( string2 )		972754	0					
ANR	974643	Callee	r_str_trim		972754	0					
ANR	974644	Identifier	r_str_trim		972754	0					
ANR	974645	ArgumentList	string2		972754	1					
ANR	974646	Argument	string2		972754	0					
ANR	974647	Identifier	string2		972754	0					
ANR	974648	IfStatement	if ( use_color )		972754	2					
ANR	974649	Condition	use_color	2809:9:84018:84026	972754	0	True				
ANR	974650	Identifier	use_color		972754	0					
ANR	974651	CompoundStatement		290:20:7716:7716	972754	1					
ANR	974652	IfStatement	if ( show_offset )		972754	0					
ANR	974653	Condition	show_offset	2810:10:84041:84051	972754	0	True				
ANR	974654	Identifier	show_offset		972754	0					
ANR	974655	CompoundStatement		291:23:7741:7741	972754	1					
ANR	974656	Statement	r_cons_printf	2811:7:84063:84075	972754	0	True				
ANR	974657	Statement	(	2811:21:84077:84077	972754	1	True				
ANR	974658	Statement	"""%s0x%08"""	2811:22:84078:84086	972754	2	True				
ANR	974659	Statement	PFMT64x	2811:31:84087:84093	972754	3	True				
ANR	974660	Statement	""" """	2811:38:84094:84096	972754	4	True				
ANR	974661	Statement	Color_RESET	2811:41:84097:84107	972754	5	True				
ANR	974662	Statement	","	2811:52:84108:84108	972754	6	True				
ANR	974663	Statement	use_color	2811:54:84110:84118	972754	7	True				
ANR	974664	Statement	?	2811:63:84119:84119	972754	8	True				
ANR	974665	Statement	pal	2811:65:84121:84123	972754	9	True				
ANR	974666	Statement	->	2811:68:84124:84125	972754	10	True				
ANR	974667	Label	offset :	2811:70:84126:84132	972754	11	True				
ANR	974668	Identifier	offset		972754	0					
ANR	974669	Statement	""""""	2811:78:84134:84135	972754	12	True				
ANR	974670	Statement	","	2811:80:84136:84136	972754	13	True				
ANR	974671	Statement	addr	2811:82:84138:84141	972754	14	True				
ANR	974672	Statement	)	2811:86:84142:84142	972754	15	True				
ANR	974673	ExpressionStatement		2811:87:84143:84143	972754	16	True				
ANR	974674	ExpressionStatement	"r_cons_printf ( ""%s%s%s%s%s%s%s\\n"" , linecolor ? linecolor : """" , string2 ? string2 : """" , string2 ? "" "" : """" , string , flag ? "" "" : """" , flag ? flag -> name : """" , Color_RESET )"	2813:6:84159:84338	972754	1	True				
ANR	974675	CallExpression	"r_cons_printf ( ""%s%s%s%s%s%s%s\\n"" , linecolor ? linecolor : """" , string2 ? string2 : """" , string2 ? "" "" : """" , string , flag ? "" "" : """" , flag ? flag -> name : """" , Color_RESET )"		972754	0					
ANR	974676	Callee	r_cons_printf		972754	0					
ANR	974677	Identifier	r_cons_printf		972754	0					
ANR	974678	ArgumentList	"""%s%s%s%s%s%s%s\\n"""		972754	1					
ANR	974679	Argument	"""%s%s%s%s%s%s%s\\n"""		972754	0					
ANR	974680	PrimaryExpression	"""%s%s%s%s%s%s%s\\n"""		972754	0					
ANR	974681	Argument	"linecolor ? linecolor : """""		972754	1					
ANR	974682	ConditionalExpression	"linecolor ? linecolor : """""		972754	0					
ANR	974683	Condition	linecolor		972754	0					
ANR	974684	Identifier	linecolor		972754	0					
ANR	974685	Identifier	linecolor		972754	1					
ANR	974686	PrimaryExpression	""""""		972754	2					
ANR	974687	Argument	"string2 ? string2 : """""		972754	2					
ANR	974688	ConditionalExpression	"string2 ? string2 : """""		972754	0					
ANR	974689	Condition	string2		972754	0					
ANR	974690	Identifier	string2		972754	0					
ANR	974691	Identifier	string2		972754	1					
ANR	974692	PrimaryExpression	""""""		972754	2					
ANR	974693	Argument	"string2 ? "" "" : """""		972754	3					
ANR	974694	ConditionalExpression	"string2 ? "" "" : """""		972754	0					
ANR	974695	Condition	string2		972754	0					
ANR	974696	Identifier	string2		972754	0					
ANR	974697	PrimaryExpression	""" """		972754	1					
ANR	974698	PrimaryExpression	""""""		972754	2					
ANR	974699	Argument	string		972754	4					
ANR	974700	Identifier	string		972754	0					
ANR	974701	Argument	"flag ? "" "" : """""		972754	5					
ANR	974702	ConditionalExpression	"flag ? "" "" : """""		972754	0					
ANR	974703	Condition	flag		972754	0					
ANR	974704	Identifier	flag		972754	0					
ANR	974705	PrimaryExpression	""" """		972754	1					
ANR	974706	PrimaryExpression	""""""		972754	2					
ANR	974707	Argument	"flag ? flag -> name : """""		972754	6					
ANR	974708	ConditionalExpression	"flag ? flag -> name : """""		972754	0					
ANR	974709	Condition	flag		972754	0					
ANR	974710	Identifier	flag		972754	0					
ANR	974711	PtrMemberAccess	flag -> name		972754	1					
ANR	974712	Identifier	flag		972754	0					
ANR	974713	Identifier	name		972754	1					
ANR	974714	PrimaryExpression	""""""		972754	2					
ANR	974715	Argument	Color_RESET		972754	7					
ANR	974716	Identifier	Color_RESET		972754	0					
ANR	974717	ElseStatement	else		972754	0					
ANR	974718	CompoundStatement		298:12:8039:8039	972754	0					
ANR	974719	IfStatement	if ( show_offset )		972754	0					
ANR	974720	Condition	show_offset	2818:10:84364:84374	972754	0	True				
ANR	974721	Identifier	show_offset		972754	0					
ANR	974722	CompoundStatement		299:23:8064:8064	972754	1					
ANR	974723	Statement	r_cons_printf	2819:7:84386:84398	972754	0	True				
ANR	974724	Statement	(	2819:21:84400:84400	972754	1	True				
ANR	974725	Statement	"""0x%08"""	2819:22:84401:84407	972754	2	True				
ANR	974726	Statement	PFMT64x	2819:29:84408:84414	972754	3	True				
ANR	974727	Statement	""" """	2819:36:84415:84417	972754	4	True				
ANR	974728	Statement	","	2819:39:84418:84418	972754	5	True				
ANR	974729	Statement	addr	2819:41:84420:84423	972754	6	True				
ANR	974730	Statement	)	2819:45:84424:84424	972754	7	True				
ANR	974731	ExpressionStatement		2819:46:84425:84425	972754	8	True				
ANR	974732	ExpressionStatement	"r_cons_printf ( ""%s%s%s%s%s\\n"" , string2 ? string2 : """" , string2 ? "" "" : """" , string , flag ? "" "" : """" , flag ? flag -> name : """" )"	2821:6:84441:84570	972754	1	True				
ANR	974733	CallExpression	"r_cons_printf ( ""%s%s%s%s%s\\n"" , string2 ? string2 : """" , string2 ? "" "" : """" , string , flag ? "" "" : """" , flag ? flag -> name : """" )"		972754	0					
ANR	974734	Callee	r_cons_printf		972754	0					
ANR	974735	Identifier	r_cons_printf		972754	0					
ANR	974736	ArgumentList	"""%s%s%s%s%s\\n"""		972754	1					
ANR	974737	Argument	"""%s%s%s%s%s\\n"""		972754	0					
ANR	974738	PrimaryExpression	"""%s%s%s%s%s\\n"""		972754	0					
ANR	974739	Argument	"string2 ? string2 : """""		972754	1					
ANR	974740	ConditionalExpression	"string2 ? string2 : """""		972754	0					
ANR	974741	Condition	string2		972754	0					
ANR	974742	Identifier	string2		972754	0					
ANR	974743	Identifier	string2		972754	1					
ANR	974744	PrimaryExpression	""""""		972754	2					
ANR	974745	Argument	"string2 ? "" "" : """""		972754	2					
ANR	974746	ConditionalExpression	"string2 ? "" "" : """""		972754	0					
ANR	974747	Condition	string2		972754	0					
ANR	974748	Identifier	string2		972754	0					
ANR	974749	PrimaryExpression	""" """		972754	1					
ANR	974750	PrimaryExpression	""""""		972754	2					
ANR	974751	Argument	string		972754	3					
ANR	974752	Identifier	string		972754	0					
ANR	974753	Argument	"flag ? "" "" : """""		972754	4					
ANR	974754	ConditionalExpression	"flag ? "" "" : """""		972754	0					
ANR	974755	Condition	flag		972754	0					
ANR	974756	Identifier	flag		972754	0					
ANR	974757	PrimaryExpression	""" """		972754	1					
ANR	974758	PrimaryExpression	""""""		972754	2					
ANR	974759	Argument	"flag ? flag -> name : """""		972754	5					
ANR	974760	ConditionalExpression	"flag ? flag -> name : """""		972754	0					
ANR	974761	Condition	flag		972754	0					
ANR	974762	Identifier	flag		972754	0					
ANR	974763	PtrMemberAccess	flag -> name		972754	1					
ANR	974764	Identifier	flag		972754	0					
ANR	974765	Identifier	name		972754	1					
ANR	974766	PrimaryExpression	""""""		972754	2					
ANR	974767	ExpressionStatement	line += strlen ( line ) + 1	2828:2:84596:84621	972754	24	True				
ANR	974768	AssignmentExpression	line += strlen ( line ) + 1		972754	0		+=			
ANR	974769	Identifier	line		972754	0					
ANR	974770	AdditiveExpression	strlen ( line ) + 1		972754	1		+			
ANR	974771	CallExpression	strlen ( line )		972754	0					
ANR	974772	Callee	strlen		972754	0					
ANR	974773	Identifier	strlen		972754	0					
ANR	974774	ArgumentList	line		972754	1					
ANR	974775	Argument	line		972754	0					
ANR	974776	Identifier	line		972754	0					
ANR	974777	PrimaryExpression	1		972754	1					
ANR	974778	ExpressionStatement	free ( string2 )	2831:1:84656:84670	972754	30	True				
ANR	974779	CallExpression	free ( string2 )		972754	0					
ANR	974780	Callee	free		972754	0					
ANR	974781	Identifier	free		972754	0					
ANR	974782	ArgumentList	string2		972754	1					
ANR	974783	Argument	string2		972754	0					
ANR	974784	Identifier	string2		972754	0					
ANR	974785	ExpressionStatement	free ( string )	2832:1:84673:84686	972754	31	True				
ANR	974786	CallExpression	free ( string )		972754	0					
ANR	974787	Callee	free		972754	0					
ANR	974788	Identifier	free		972754	0					
ANR	974789	ArgumentList	string		972754	1					
ANR	974790	Argument	string		972754	0					
ANR	974791	Identifier	string		972754	0					
ANR	974792	ExpressionStatement	free ( s )	2833:1:84689:84697	972754	32	True				
ANR	974793	CallExpression	free ( s )		972754	0					
ANR	974794	Callee	free		972754	0					
ANR	974795	Identifier	free		972754	0					
ANR	974796	ArgumentList	s		972754	1					
ANR	974797	Argument	s		972754	0					
ANR	974798	Identifier	s		972754	0					
ANR	974799	ExpressionStatement	free ( str )	2834:1:84700:84710	972754	33	True				
ANR	974800	CallExpression	free ( str )		972754	0					
ANR	974801	Callee	free		972754	0					
ANR	974802	Identifier	free		972754	0					
ANR	974803	ArgumentList	str		972754	1					
ANR	974804	Argument	str		972754	0					
ANR	974805	Identifier	str		972754	0					
ANR	974806	ExpressionStatement	free ( switchcmp )	2835:1:84713:84729	972754	34	True				
ANR	974807	CallExpression	free ( switchcmp )		972754	0					
ANR	974808	Callee	free		972754	0					
ANR	974809	Identifier	free		972754	0					
ANR	974810	ArgumentList	switchcmp		972754	1					
ANR	974811	Argument	switchcmp		972754	0					
ANR	974812	Identifier	switchcmp		972754	0					
ANR	974813	Label	restore_conf :	2836:0:84731:84743	972754	35	True				
ANR	974814	Identifier	restore_conf		972754	0					
ANR	974815	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.offset"" , show_offset )"	2837:1:84746:84802	972754	36	True				
ANR	974816	CallExpression	"r_config_set_i ( core -> config , ""asm.offset"" , show_offset )"		972754	0					
ANR	974817	Callee	r_config_set_i		972754	0					
ANR	974818	Identifier	r_config_set_i		972754	0					
ANR	974819	ArgumentList	core -> config		972754	1					
ANR	974820	Argument	core -> config		972754	0					
ANR	974821	PtrMemberAccess	core -> config		972754	0					
ANR	974822	Identifier	core		972754	0					
ANR	974823	Identifier	config		972754	1					
ANR	974824	Argument	"""asm.offset"""		972754	1					
ANR	974825	PrimaryExpression	"""asm.offset"""		972754	0					
ANR	974826	Argument	show_offset		972754	2					
ANR	974827	Identifier	show_offset		972754	0					
ANR	974828	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.dwarf"" , asm_dwarf )"	2838:1:84805:84858	972754	37	True				
ANR	974829	CallExpression	"r_config_set_i ( core -> config , ""asm.dwarf"" , asm_dwarf )"		972754	0					
ANR	974830	Callee	r_config_set_i		972754	0					
ANR	974831	Identifier	r_config_set_i		972754	0					
ANR	974832	ArgumentList	core -> config		972754	1					
ANR	974833	Argument	core -> config		972754	0					
ANR	974834	PtrMemberAccess	core -> config		972754	0					
ANR	974835	Identifier	core		972754	0					
ANR	974836	Identifier	config		972754	1					
ANR	974837	Argument	"""asm.dwarf"""		972754	1					
ANR	974838	PrimaryExpression	"""asm.dwarf"""		972754	0					
ANR	974839	Argument	asm_dwarf		972754	2					
ANR	974840	Identifier	asm_dwarf		972754	0					
ANR	974841	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.tabs"" , asm_tabs )"	2839:1:84861:84912	972754	38	True				
ANR	974842	CallExpression	"r_config_set_i ( core -> config , ""asm.tabs"" , asm_tabs )"		972754	0					
ANR	974843	Callee	r_config_set_i		972754	0					
ANR	974844	Identifier	r_config_set_i		972754	0					
ANR	974845	ArgumentList	core -> config		972754	1					
ANR	974846	Argument	core -> config		972754	0					
ANR	974847	PtrMemberAccess	core -> config		972754	0					
ANR	974848	Identifier	core		972754	0					
ANR	974849	Identifier	config		972754	1					
ANR	974850	Argument	"""asm.tabs"""		972754	1					
ANR	974851	PrimaryExpression	"""asm.tabs"""		972754	0					
ANR	974852	Argument	asm_tabs		972754	2					
ANR	974853	Identifier	asm_tabs		972754	0					
ANR	974854	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.emu"" , asm_emu )"	2840:1:84915:84964	972754	39	True				
ANR	974855	CallExpression	"r_config_set_i ( core -> config , ""asm.emu"" , asm_emu )"		972754	0					
ANR	974856	Callee	r_config_set_i		972754	0					
ANR	974857	Identifier	r_config_set_i		972754	0					
ANR	974858	ArgumentList	core -> config		972754	1					
ANR	974859	Argument	core -> config		972754	0					
ANR	974860	PtrMemberAccess	core -> config		972754	0					
ANR	974861	Identifier	core		972754	0					
ANR	974862	Identifier	config		972754	1					
ANR	974863	Argument	"""asm.emu"""		972754	1					
ANR	974864	PrimaryExpression	"""asm.emu"""		972754	0					
ANR	974865	Argument	asm_emu		972754	2					
ANR	974866	Identifier	asm_emu		972754	0					
ANR	974867	ExpressionStatement	"r_config_set_i ( core -> config , ""emu.str"" , emu_str )"	2841:1:84967:85016	972754	40	True				
ANR	974868	CallExpression	"r_config_set_i ( core -> config , ""emu.str"" , emu_str )"		972754	0					
ANR	974869	Callee	r_config_set_i		972754	0					
ANR	974870	Identifier	r_config_set_i		972754	0					
ANR	974871	ArgumentList	core -> config		972754	1					
ANR	974872	Argument	core -> config		972754	0					
ANR	974873	PtrMemberAccess	core -> config		972754	0					
ANR	974874	Identifier	core		972754	0					
ANR	974875	Identifier	config		972754	1					
ANR	974876	Argument	"""emu.str"""		972754	1					
ANR	974877	PrimaryExpression	"""emu.str"""		972754	0					
ANR	974878	Argument	emu_str		972754	2					
ANR	974879	Identifier	emu_str		972754	0					
ANR	974880	ReturnType	static void		972754	1					
ANR	974881	Identifier	disasm_strings		972754	2					
ANR	974882	ParameterList	"RCore * core , const char * input , RAnalFunction * fcn"		972754	3					
ANR	974883	Parameter	RCore * core	2520:27:76260:76270	972754	0	True				
ANR	974884	ParameterType	RCore *		972754	0					
ANR	974885	Identifier	core		972754	1					
ANR	974886	Parameter	const char * input	2520:40:76273:76289	972754	1	True				
ANR	974887	ParameterType	const char *		972754	0					
ANR	974888	Identifier	input		972754	1					
ANR	974889	Parameter	RAnalFunction * fcn	2520:59:76292:76309	972754	2	True				
ANR	974890	ParameterType	RAnalFunction *		972754	0					
ANR	974891	Identifier	fcn		972754	1					
ANR	974892	CFGEntryNode	ENTRY		972754		True				
ANR	974893	CFGExitNode	EXIT		972754		True				
ANR	974894	Symbol	UT32_MAX		972754						
ANR	974895	Symbol	r_core_cmd_str		972754						
ANR	974896	Symbol	bb -> size		972754						
ANR	974897	Symbol	show_offset		972754						
ANR	974898	Symbol	COLOR_MODE_DISABLED		972754						
ANR	974899	Symbol	qoe		972754						
ANR	974900	Symbol	core -> offset		972754						
ANR	974901	Symbol	strchr		972754						
ANR	974902	Symbol	bb -> addr		972754						
ANR	974903	Symbol	* line		972754						
ANR	974904	Symbol	R_CONS_COLOR		972754						
ANR	974905	Symbol	& str		972754						
ANR	974906	Symbol	strncmp		972754						
ANR	974907	Symbol	strlen		972754						
ANR	974908	Symbol	len		972754						
ANR	974909	Symbol	string2		972754						
ANR	974910	Symbol	* ptr		972754						
ANR	974911	Symbol	pal		972754						
ANR	974912	Symbol	r_num_get		972754						
ANR	974913	Symbol	qo		972754						
ANR	974914	Symbol	strcmp		972754						
ANR	974915	Symbol	NULL		972754						
ANR	974916	Symbol	show_comments		972754						
ANR	974917	Symbol	count		972754						
ANR	974918	Symbol	iter		972754						
ANR	974919	Symbol	use_color		972754						
ANR	974920	Symbol	asm_emu		972754						
ANR	974921	Symbol	str		972754						
ANR	974922	Symbol	core		972754						
ANR	974923	Symbol	input		972754						
ANR	974924	Symbol	strstr		972754						
ANR	974925	Symbol	r_config_get_i		972754						
ANR	974926	Symbol	r_core_anal_get_comments		972754						
ANR	974927	Symbol	true		972754						
ANR	974928	Symbol	raw_len		972754						
ANR	974929	Symbol	& core -> cons -> context -> pal		972754						
ANR	974930	Symbol	* flag		972754						
ANR	974931	Symbol	core -> cons -> context		972754						
ANR	974932	Symbol	bb		972754						
ANR	974933	Symbol	* ( ptr + 1 )		972754						
ANR	974934	Symbol	r_anal_bb_from_offset		972754						
ANR	974935	Symbol	flag		972754						
ANR	974936	Symbol	string		972754						
ANR	974937	Symbol	* core -> cons		972754						
ANR	974938	Symbol	* pal		972754						
ANR	974939	Symbol	line		972754						
ANR	974940	Symbol	r_str_ndup		972754						
ANR	974941	Symbol	linecolor		972754						
ANR	974942	Symbol	r_core_flag_get_by_spaces		972754						
ANR	974943	Symbol	* core		972754						
ANR	974944	Symbol	x1b		972754						
ANR	974945	Symbol	Color_RESET		972754						
ANR	974946	Symbol	* string		972754						
ANR	974947	Symbol	asm_flags		972754						
ANR	974948	Symbol	emu_str		972754						
ANR	974949	Symbol	core -> anal		972754						
ANR	974950	Symbol	r_num_math		972754						
ANR	974951	Symbol	fcn		972754						
ANR	974952	Symbol	r_core_cmd_strf		972754						
ANR	974953	Symbol	core -> cons		972754						
ANR	974954	Symbol	actual_len		972754						
ANR	974955	Symbol	UT64_MAX		972754						
ANR	974956	Symbol	addr		972754						
ANR	974957	Symbol	* * core		972754						
ANR	974958	Symbol	core -> config		972754						
ANR	974959	Symbol	r_str_startswith		972754						
ANR	974960	Symbol	bb -> fail		972754						
ANR	974961	Symbol	op		972754						
ANR	974962	Symbol	R_ANAL_FCN_TYPE_NULL		972754						
ANR	974963	Symbol	* bb		972754						
ANR	974964	Symbol	flag -> name		972754						
ANR	974965	Symbol	pal -> comment		972754						
ANR	974966	Symbol	false		972754						
ANR	974967	Symbol	ox		972754						
ANR	974968	Symbol	i		972754						
ANR	974969	Symbol	core -> flags		972754						
ANR	974970	Symbol	label		972754						
ANR	974971	Symbol	asm_tabs		972754						
ANR	974972	Symbol	asm_dwarf		972754						
ANR	974973	Symbol	ptr		972754						
ANR	974974	Symbol	call		972754						
ANR	974975	Symbol	asm_cmt_right		972754						
ANR	974976	Symbol	bb -> jump		972754						
ANR	974977	Symbol	s		972754						
ANR	974978	Symbol	r_anal_get_fcn_in		972754						
ANR	974979	Symbol	t		972754						
ANR	974980	Symbol	r_str_split		972754						
ANR	974981	Symbol	strrchr		972754						
ANR	974982	Symbol	body_len		972754						
ANR	974983	Symbol	comment		972754						
ANR	974984	Symbol	strdup		972754						
ANR	974985	Symbol	switchcmp		972754						
ANR	974986	Function	algolist	2844:0:85021:85326							
ANR	974987	FunctionDef	algolist (int mode)		974986	0					
ANR	974988	CompoundStatement		2844:31:85052:85326	974986	0					
ANR	974989	IdentifierDeclStatement	int i ;	2845:1:85055:85060	974986	0	True				
ANR	974990	IdentifierDecl	i		974986	0					
ANR	974991	IdentifierDeclType	int		974986	0					
ANR	974992	Identifier	i		974986	1					
ANR	974993	ForStatement	for ( i = 0 ; i < R_HASH_NBITS ; i ++ )		974986	1					
ANR	974994	ForInit	i = 0 ;	2846:6:85068:85073	974986	0	True				
ANR	974995	AssignmentExpression	i = 0		974986	0		=			
ANR	974996	Identifier	i		974986	0					
ANR	974997	PrimaryExpression	0		974986	1					
ANR	974998	Condition	i < R_HASH_NBITS	2846:13:85075:85090	974986	1	True				
ANR	974999	RelationalExpression	i < R_HASH_NBITS		974986	0		<			
ANR	975000	Identifier	i		974986	0					
ANR	975001	Identifier	R_HASH_NBITS		974986	1					
ANR	975002	PostIncDecOperationExpression	i ++	2846:31:85093:85095	974986	2	True				
ANR	975003	Identifier	i		974986	0					
ANR	975004	IncDec	++		974986	1					
ANR	975005	CompoundStatement		5:2:74:111	974986	3					
ANR	975006	Statement	ut64	2847:2:85102:85105	974986	0	True				
ANR	975007	Statement	bits	2847:7:85107:85110	974986	1	True				
ANR	975008	Statement	=	2847:12:85112:85112	974986	2	True				
ANR	975009	Statement	1UL	2847:14:85114:85116	974986	3	True				
ANR	975010	ExpressionStatement	L << i	2847:17:85117:85123	974986	4	True				
ANR	975011	ShiftExpression	L << i		974986	0		<<			
ANR	975012	Identifier	L		974986	0					
ANR	975013	Identifier	i		974986	1					
ANR	975014	IdentifierDeclStatement	const char * name = r_hash_name ( bits ) ;	2848:2:85127:85164	974986	5	True				
ANR	975015	IdentifierDecl	* name = r_hash_name ( bits )		974986	0					
ANR	975016	IdentifierDeclType	const char *		974986	0					
ANR	975017	Identifier	name		974986	1					
ANR	975018	AssignmentExpression	* name = r_hash_name ( bits )		974986	2		=			
ANR	975019	Identifier	name		974986	0					
ANR	975020	CallExpression	r_hash_name ( bits )		974986	1					
ANR	975021	Callee	r_hash_name		974986	0					
ANR	975022	Identifier	r_hash_name		974986	0					
ANR	975023	ArgumentList	bits		974986	1					
ANR	975024	Argument	bits		974986	0					
ANR	975025	Identifier	bits		974986	0					
ANR	975026	IfStatement	if ( name && * name )		974986	6					
ANR	975027	Condition	name && * name	2849:6:85172:85184	974986	0	True				
ANR	975028	AndExpression	name && * name		974986	0		&&			
ANR	975029	Identifier	name		974986	0					
ANR	975030	UnaryOperationExpression	* name		974986	1					
ANR	975031	UnaryOperator	*		974986	0					
ANR	975032	Identifier	name		974986	1					
ANR	975033	CompoundStatement		6:21:134:134	974986	1					
ANR	975034	IfStatement	if ( mode )		974986	0					
ANR	975035	Condition	mode	2850:7:85196:85199	974986	0	True				
ANR	975036	Identifier	mode		974986	0					
ANR	975037	CompoundStatement		7:13:149:149	974986	1					
ANR	975038	ExpressionStatement	r_cons_println ( name )	2851:4:85208:85229	974986	0	True				
ANR	975039	CallExpression	r_cons_println ( name )		974986	0					
ANR	975040	Callee	r_cons_println		974986	0					
ANR	975041	Identifier	r_cons_println		974986	0					
ANR	975042	ArgumentList	name		974986	1					
ANR	975043	Argument	name		974986	0					
ANR	975044	Identifier	name		974986	0					
ANR	975045	ElseStatement	else		974986	0					
ANR	975046	CompoundStatement		9:10:188:188	974986	0					
ANR	975047	ExpressionStatement	"r_cons_printf ( ""%s "" , name )"	2853:4:85247:85274	974986	0	True				
ANR	975048	CallExpression	"r_cons_printf ( ""%s "" , name )"		974986	0					
ANR	975049	Callee	r_cons_printf		974986	0					
ANR	975050	Identifier	r_cons_printf		974986	0					
ANR	975051	ArgumentList	"""%s """		974986	1					
ANR	975052	Argument	"""%s """		974986	0					
ANR	975053	PrimaryExpression	"""%s """		974986	0					
ANR	975054	Argument	name		974986	1					
ANR	975055	Identifier	name		974986	0					
ANR	975056	IfStatement	if ( ! mode )		974986	2					
ANR	975057	Condition	! mode	2857:5:85293:85297	974986	0	True				
ANR	975058	UnaryOperationExpression	! mode		974986	0					
ANR	975059	UnaryOperator	!		974986	0					
ANR	975060	Identifier	mode		974986	1					
ANR	975061	CompoundStatement		14:12:247:247	974986	1					
ANR	975062	ExpressionStatement	r_cons_newline ( )	2858:2:85304:85321	974986	0	True				
ANR	975063	CallExpression	r_cons_newline ( )		974986	0					
ANR	975064	Callee	r_cons_newline		974986	0					
ANR	975065	Identifier	r_cons_newline		974986	0					
ANR	975066	ArgumentList			974986	1					
ANR	975067	ReturnType	static void		974986	1					
ANR	975068	Identifier	algolist		974986	2					
ANR	975069	ParameterList	int mode		974986	3					
ANR	975070	Parameter	int mode	2844:21:85042:85049	974986	0	True				
ANR	975071	ParameterType	int		974986	0					
ANR	975072	Identifier	mode		974986	1					
ANR	975073	CFGEntryNode	ENTRY		974986		True				
ANR	975074	CFGExitNode	EXIT		974986		True				
ANR	975075	Symbol	mode		974986						
ANR	975076	Symbol	* name		974986						
ANR	975077	Symbol	r_hash_name		974986						
ANR	975078	Symbol	R_HASH_NBITS		974986						
ANR	975079	Symbol	name		974986						
ANR	975080	Symbol	bits		974986						
ANR	975081	Symbol	i		974986						
ANR	975082	Function	cmd_print_ph	2862:0:85329:86505							
ANR	975083	FunctionDef	"cmd_print_ph (RCore * core , const char * input)"		975082	0					
ANR	975084	CompoundStatement		2862:57:85386:86505	975082	0					
ANR	975085	IdentifierDeclStatement	char algo [ 128 ] ;	2863:1:85389:85403	975082	0	True				
ANR	975086	IdentifierDecl	algo [ 128 ]		975082	0					
ANR	975087	IdentifierDeclType	char [ 128 ]		975082	0					
ANR	975088	Identifier	algo		975082	1					
ANR	975089	PrimaryExpression	128		975082	2					
ANR	975090	IdentifierDeclStatement	"ut32 osize = 0 , len = core -> blocksize ;"	2864:1:85406:85443	975082	1	True				
ANR	975091	IdentifierDecl	osize = 0		975082	0					
ANR	975092	IdentifierDeclType	ut32		975082	0					
ANR	975093	Identifier	osize		975082	1					
ANR	975094	AssignmentExpression	osize = 0		975082	2		=			
ANR	975095	Identifier	osize		975082	0					
ANR	975096	PrimaryExpression	0		975082	1					
ANR	975097	IdentifierDecl	len = core -> blocksize		975082	1					
ANR	975098	IdentifierDeclType	ut32		975082	0					
ANR	975099	Identifier	len		975082	1					
ANR	975100	AssignmentExpression	len = core -> blocksize		975082	2		=			
ANR	975101	Identifier	len		975082	0					
ANR	975102	PtrMemberAccess	core -> blocksize		975082	1					
ANR	975103	Identifier	core		975082	0					
ANR	975104	Identifier	blocksize		975082	1					
ANR	975105	IdentifierDeclStatement	const char * ptr ;	2865:1:85446:85461	975082	2	True				
ANR	975106	IdentifierDecl	* ptr		975082	0					
ANR	975107	IdentifierDeclType	const char *		975082	0					
ANR	975108	Identifier	ptr		975082	1					
ANR	975109	IdentifierDeclStatement	"int pos = 0 , handled_cmd = false ;"	2866:1:85464:85496	975082	3	True				
ANR	975110	IdentifierDecl	pos = 0		975082	0					
ANR	975111	IdentifierDeclType	int		975082	0					
ANR	975112	Identifier	pos		975082	1					
ANR	975113	AssignmentExpression	pos = 0		975082	2		=			
ANR	975114	Identifier	pos		975082	0					
ANR	975115	PrimaryExpression	0		975082	1					
ANR	975116	IdentifierDecl	handled_cmd = false		975082	1					
ANR	975117	IdentifierDeclType	int		975082	0					
ANR	975118	Identifier	handled_cmd		975082	1					
ANR	975119	AssignmentExpression	handled_cmd = false		975082	2		=			
ANR	975120	Identifier	false		975082	0					
ANR	975121	Identifier	false		975082	1					
ANR	975122	IfStatement	if ( ! * input || * input == '?' )		975082	4					
ANR	975123	Condition	! * input || * input == '?'	2868:5:85504:85527	975082	0	True				
ANR	975124	OrExpression	! * input || * input == '?'		975082	0		||			
ANR	975125	UnaryOperationExpression	! * input		975082	0					
ANR	975126	UnaryOperator	!		975082	0					
ANR	975127	UnaryOperationExpression	* input		975082	1					
ANR	975128	UnaryOperator	*		975082	0					
ANR	975129	Identifier	input		975082	1					
ANR	975130	EqualityExpression	* input == '?'		975082	1		==			
ANR	975131	UnaryOperationExpression	* input		975082	0					
ANR	975132	UnaryOperator	*		975082	0					
ANR	975133	Identifier	input		975082	1					
ANR	975134	PrimaryExpression	'?'		975082	1					
ANR	975135	CompoundStatement		7:31:143:143	975082	1					
ANR	975136	ExpressionStatement	algolist ( 1 )	2869:2:85534:85546	975082	0	True				
ANR	975137	CallExpression	algolist ( 1 )		975082	0					
ANR	975138	Callee	algolist		975082	0					
ANR	975139	Identifier	algolist		975082	0					
ANR	975140	ArgumentList	1		975082	1					
ANR	975141	Argument	1		975082	0					
ANR	975142	PrimaryExpression	1		975082	0					
ANR	975143	ReturnStatement	return true ;	2870:2:85550:85561	975082	1	True				
ANR	975144	Identifier	true		975082	0					
ANR	975145	IfStatement	if ( * input == '=' )		975082	5					
ANR	975146	Condition	* input == '='	2872:5:85571:85583	975082	0	True				
ANR	975147	EqualityExpression	* input == '='		975082	0		==			
ANR	975148	UnaryOperationExpression	* input		975082	0					
ANR	975149	UnaryOperator	*		975082	0					
ANR	975150	Identifier	input		975082	1					
ANR	975151	PrimaryExpression	'='		975082	1					
ANR	975152	CompoundStatement		11:20:199:199	975082	1					
ANR	975153	ExpressionStatement	algolist ( 0 )	2873:2:85590:85602	975082	0	True				
ANR	975154	CallExpression	algolist ( 0 )		975082	0					
ANR	975155	Callee	algolist		975082	0					
ANR	975156	Identifier	algolist		975082	0					
ANR	975157	ArgumentList	0		975082	1					
ANR	975158	Argument	0		975082	0					
ANR	975159	PrimaryExpression	0		975082	0					
ANR	975160	ReturnStatement	return true ;	2874:2:85606:85617	975082	1	True				
ANR	975161	Identifier	true		975082	0					
ANR	975162	ExpressionStatement	input = r_str_trim_ro ( input )	2876:1:85623:85652	975082	6	True				
ANR	975163	AssignmentExpression	input = r_str_trim_ro ( input )		975082	0		=			
ANR	975164	Identifier	input		975082	0					
ANR	975165	CallExpression	r_str_trim_ro ( input )		975082	1					
ANR	975166	Callee	r_str_trim_ro		975082	0					
ANR	975167	Identifier	r_str_trim_ro		975082	0					
ANR	975168	ArgumentList	input		975082	1					
ANR	975169	Argument	input		975082	0					
ANR	975170	Identifier	input		975082	0					
ANR	975171	ExpressionStatement	"ptr = strchr ( input , ' ' )"	2877:1:85655:85680	975082	7	True				
ANR	975172	AssignmentExpression	"ptr = strchr ( input , ' ' )"		975082	0		=			
ANR	975173	Identifier	ptr		975082	0					
ANR	975174	CallExpression	"strchr ( input , ' ' )"		975082	1					
ANR	975175	Callee	strchr		975082	0					
ANR	975176	Identifier	strchr		975082	0					
ANR	975177	ArgumentList	input		975082	1					
ANR	975178	Argument	input		975082	0					
ANR	975179	Identifier	input		975082	0					
ANR	975180	Argument	' '		975082	1					
ANR	975181	PrimaryExpression	' '		975082	0					
ANR	975182	ExpressionStatement	"sscanf ( input , ""%31s"" , algo )"	2878:1:85683:85711	975082	8	True				
ANR	975183	CallExpression	"sscanf ( input , ""%31s"" , algo )"		975082	0					
ANR	975184	Callee	sscanf		975082	0					
ANR	975185	Identifier	sscanf		975082	0					
ANR	975186	ArgumentList	input		975082	1					
ANR	975187	Argument	input		975082	0					
ANR	975188	Identifier	input		975082	0					
ANR	975189	Argument	"""%31s"""		975082	1					
ANR	975190	PrimaryExpression	"""%31s"""		975082	0					
ANR	975191	Argument	algo		975082	2					
ANR	975192	Identifier	algo		975082	0					
ANR	975193	IfStatement	if ( ptr && ptr [ 1 ] )		975082	9					
ANR	975194	Condition	ptr && ptr [ 1 ]	2879:5:85718:85730	975082	0	True				
ANR	975195	AndExpression	ptr && ptr [ 1 ]		975082	0		&&			
ANR	975196	Identifier	ptr		975082	0					
ANR	975197	ArrayIndexing	ptr [ 1 ]		975082	1					
ANR	975198	Identifier	ptr		975082	0					
ANR	975199	PrimaryExpression	1		975082	1					
ANR	975200	CompoundStatement		19:2:401:443	975082	1					
ANR	975201	IdentifierDeclStatement	"int nlen = r_num_math ( core -> num , ptr + 1 ) ;"	2880:2:85788:85830	975082	0	True				
ANR	975202	IdentifierDecl	"nlen = r_num_math ( core -> num , ptr + 1 )"		975082	0					
ANR	975203	IdentifierDeclType	int		975082	0					
ANR	975204	Identifier	nlen		975082	1					
ANR	975205	AssignmentExpression	"nlen = r_num_math ( core -> num , ptr + 1 )"		975082	2		=			
ANR	975206	Identifier	nlen		975082	0					
ANR	975207	CallExpression	"r_num_math ( core -> num , ptr + 1 )"		975082	1					
ANR	975208	Callee	r_num_math		975082	0					
ANR	975209	Identifier	r_num_math		975082	0					
ANR	975210	ArgumentList	core -> num		975082	1					
ANR	975211	Argument	core -> num		975082	0					
ANR	975212	PtrMemberAccess	core -> num		975082	0					
ANR	975213	Identifier	core		975082	0					
ANR	975214	Identifier	num		975082	1					
ANR	975215	Argument	ptr + 1		975082	1					
ANR	975216	AdditiveExpression	ptr + 1		975082	0		+			
ANR	975217	Identifier	ptr		975082	0					
ANR	975218	PrimaryExpression	1		975082	1					
ANR	975219	IfStatement	if ( nlen > 0 )		975082	1					
ANR	975220	Condition	nlen > 0	2881:6:85838:85845	975082	0	True				
ANR	975221	RelationalExpression	nlen > 0		975082	0		>			
ANR	975222	Identifier	nlen		975082	0					
ANR	975223	PrimaryExpression	0		975082	1					
ANR	975224	CompoundStatement		20:16:461:461	975082	1					
ANR	975225	ExpressionStatement	len = nlen	2882:3:85853:85863	975082	0	True				
ANR	975226	AssignmentExpression	len = nlen		975082	0		=			
ANR	975227	Identifier	len		975082	0					
ANR	975228	Identifier	nlen		975082	1					
ANR	975229	ExpressionStatement	osize = core -> blocksize	2884:2:85871:85894	975082	2	True				
ANR	975230	AssignmentExpression	osize = core -> blocksize		975082	0		=			
ANR	975231	Identifier	osize		975082	0					
ANR	975232	PtrMemberAccess	core -> blocksize		975082	1					
ANR	975233	Identifier	core		975082	0					
ANR	975234	Identifier	blocksize		975082	1					
ANR	975235	IfStatement	if ( nlen > core -> blocksize )		975082	3					
ANR	975236	Condition	nlen > core -> blocksize	2885:6:85902:85923	975082	0	True				
ANR	975237	RelationalExpression	nlen > core -> blocksize		975082	0		>			
ANR	975238	Identifier	nlen		975082	0					
ANR	975239	PtrMemberAccess	core -> blocksize		975082	1					
ANR	975240	Identifier	core		975082	0					
ANR	975241	Identifier	blocksize		975082	1					
ANR	975242	CompoundStatement		24:30:539:539	975082	1					
ANR	975243	ExpressionStatement	"r_core_block_size ( core , nlen )"	2886:3:85931:85961	975082	0	True				
ANR	975244	CallExpression	"r_core_block_size ( core , nlen )"		975082	0					
ANR	975245	Callee	r_core_block_size		975082	0					
ANR	975246	Identifier	r_core_block_size		975082	0					
ANR	975247	ArgumentList	core		975082	1					
ANR	975248	Argument	core		975082	0					
ANR	975249	Identifier	core		975082	0					
ANR	975250	Argument	nlen		975082	1					
ANR	975251	Identifier	nlen		975082	0					
ANR	975252	IfStatement	if ( nlen != core -> blocksize )		975082	1					
ANR	975253	Condition	nlen != core -> blocksize	2887:7:85970:85992	975082	0	True				
ANR	975254	EqualityExpression	nlen != core -> blocksize		975082	0		!=			
ANR	975255	Identifier	nlen		975082	0					
ANR	975256	PtrMemberAccess	core -> blocksize		975082	1					
ANR	975257	Identifier	core		975082	0					
ANR	975258	Identifier	blocksize		975082	1					
ANR	975259	CompoundStatement		26:32:608:608	975082	1					
ANR	975260	ExpressionStatement	"eprintf ( ""Invalid block size\\n"" )"	2888:4:86001:86033	975082	0	True				
ANR	975261	CallExpression	"eprintf ( ""Invalid block size\\n"" )"		975082	0					
ANR	975262	Callee	eprintf		975082	0					
ANR	975263	Identifier	eprintf		975082	0					
ANR	975264	ArgumentList	"""Invalid block size\\n"""		975082	1					
ANR	975265	Argument	"""Invalid block size\\n"""		975082	0					
ANR	975266	PrimaryExpression	"""Invalid block size\\n"""		975082	0					
ANR	975267	ExpressionStatement	"r_core_block_size ( core , osize )"	2889:4:86039:86070	975082	1	True				
ANR	975268	CallExpression	"r_core_block_size ( core , osize )"		975082	0					
ANR	975269	Callee	r_core_block_size		975082	0					
ANR	975270	Identifier	r_core_block_size		975082	0					
ANR	975271	ArgumentList	core		975082	1					
ANR	975272	Argument	core		975082	0					
ANR	975273	Identifier	core		975082	0					
ANR	975274	Argument	osize		975082	1					
ANR	975275	Identifier	osize		975082	0					
ANR	975276	ReturnStatement	return false ;	2890:4:86076:86088	975082	2	True				
ANR	975277	Identifier	false		975082	0					
ANR	975278	ExpressionStatement	r_core_block_read ( core )	2892:3:86098:86122	975082	2	True				
ANR	975279	CallExpression	r_core_block_read ( core )		975082	0					
ANR	975280	Callee	r_core_block_read		975082	0					
ANR	975281	Identifier	r_core_block_read		975082	0					
ANR	975282	ArgumentList	core		975082	1					
ANR	975283	Argument	core		975082	0					
ANR	975284	Identifier	core		975082	0					
ANR	975285	ElseStatement	else		975082	0					
ANR	975286	IfStatement	if ( ! ptr || ! * ( ptr + 1 ) )		975082	0					
ANR	975287	Condition	! ptr || ! * ( ptr + 1 )	2894:12:86140:86158	975082	0	True				
ANR	975288	OrExpression	! ptr || ! * ( ptr + 1 )		975082	0		||			
ANR	975289	UnaryOperationExpression	! ptr		975082	0					
ANR	975290	UnaryOperator	!		975082	0					
ANR	975291	Identifier	ptr		975082	1					
ANR	975292	UnaryOperationExpression	! * ( ptr + 1 )		975082	1					
ANR	975293	UnaryOperator	!		975082	0					
ANR	975294	UnaryOperationExpression	* ( ptr + 1 )		975082	1					
ANR	975295	UnaryOperator	*		975082	0					
ANR	975296	AdditiveExpression	ptr + 1		975082	1		+			
ANR	975297	Identifier	ptr		975082	0					
ANR	975298	PrimaryExpression	1		975082	1					
ANR	975299	CompoundStatement		33:33:774:774	975082	1					
ANR	975300	ExpressionStatement	osize = len	2895:2:86165:86176	975082	0	True				
ANR	975301	AssignmentExpression	osize = len		975082	0		=			
ANR	975302	Identifier	osize		975082	0					
ANR	975303	Identifier	len		975082	1					
ANR	975304	WhileStatement	while ( osize > 0 && hash_handlers [ pos ] . name )		975082	10					
ANR	975305	Condition	osize > 0 && hash_handlers [ pos ] . name	2898:8:86234:86269	975082	0	True				
ANR	975306	AndExpression	osize > 0 && hash_handlers [ pos ] . name		975082	0		&&			
ANR	975307	RelationalExpression	osize > 0		975082	0		>			
ANR	975308	Identifier	osize		975082	0					
ANR	975309	PrimaryExpression	0		975082	1					
ANR	975310	MemberAccess	hash_handlers [ pos ] . name		975082	1					
ANR	975311	ArrayIndexing	hash_handlers [ pos ]		975082	0					
ANR	975312	Identifier	hash_handlers		975082	0					
ANR	975313	Identifier	pos		975082	1					
ANR	975314	Identifier	name		975082	1					
ANR	975315	CompoundStatement		37:46:885:885	975082	1					
ANR	975316	IfStatement	"if ( ! r_str_ccmp ( hash_handlers [ pos ] . name , input , ' ' ) )"		975082	0					
ANR	975317	Condition	"! r_str_ccmp ( hash_handlers [ pos ] . name , input , ' ' )"	2899:6:86280:86328	975082	0	True				
ANR	975318	UnaryOperationExpression	"! r_str_ccmp ( hash_handlers [ pos ] . name , input , ' ' )"		975082	0					
ANR	975319	UnaryOperator	!		975082	0					
ANR	975320	CallExpression	"r_str_ccmp ( hash_handlers [ pos ] . name , input , ' ' )"		975082	1					
ANR	975321	Callee	r_str_ccmp		975082	0					
ANR	975322	Identifier	r_str_ccmp		975082	0					
ANR	975323	ArgumentList	hash_handlers [ pos ] . name		975082	1					
ANR	975324	Argument	hash_handlers [ pos ] . name		975082	0					
ANR	975325	MemberAccess	hash_handlers [ pos ] . name		975082	0					
ANR	975326	ArrayIndexing	hash_handlers [ pos ]		975082	0					
ANR	975327	Identifier	hash_handlers		975082	0					
ANR	975328	Identifier	pos		975082	1					
ANR	975329	Identifier	name		975082	1					
ANR	975330	Argument	input		975082	1					
ANR	975331	Identifier	input		975082	0					
ANR	975332	Argument	' '		975082	2					
ANR	975333	PrimaryExpression	' '		975082	0					
ANR	975334	CompoundStatement		38:57:944:944	975082	1					
ANR	975335	ExpressionStatement	"hash_handlers [ pos ] . handler ( core -> block , len )"	2900:3:86336:86381	975082	0	True				
ANR	975336	CallExpression	"hash_handlers [ pos ] . handler ( core -> block , len )"		975082	0					
ANR	975337	Callee	hash_handlers [ pos ] . handler		975082	0					
ANR	975338	MemberAccess	hash_handlers [ pos ] . handler		975082	0					
ANR	975339	ArrayIndexing	hash_handlers [ pos ]		975082	0					
ANR	975340	Identifier	hash_handlers		975082	0					
ANR	975341	Identifier	pos		975082	1					
ANR	975342	Identifier	handler		975082	1					
ANR	975343	ArgumentList	core -> block		975082	1					
ANR	975344	Argument	core -> block		975082	0					
ANR	975345	PtrMemberAccess	core -> block		975082	0					
ANR	975346	Identifier	core		975082	0					
ANR	975347	Identifier	block		975082	1					
ANR	975348	Argument	len		975082	1					
ANR	975349	Identifier	len		975082	0					
ANR	975350	ExpressionStatement	handled_cmd = true	2901:3:86386:86404	975082	1	True				
ANR	975351	AssignmentExpression	handled_cmd = true		975082	0		=			
ANR	975352	Identifier	handled_cmd		975082	0					
ANR	975353	Identifier	true		975082	1					
ANR	975354	BreakStatement	break ;	2902:3:86409:86414	975082	2	True				
ANR	975355	ExpressionStatement	pos ++	2904:2:86422:86427	975082	1	True				
ANR	975356	PostIncDecOperationExpression	pos ++		975082	0					
ANR	975357	Identifier	pos		975082	0					
ANR	975358	IncDec	++		975082	1					
ANR	975359	IfStatement	if ( osize )		975082	11					
ANR	975360	Condition	osize	2906:5:86437:86441	975082	0	True				
ANR	975361	Identifier	osize		975082	0					
ANR	975362	CompoundStatement		45:12:1057:1057	975082	1					
ANR	975363	ExpressionStatement	"r_core_block_size ( core , osize )"	2907:2:86448:86479	975082	0	True				
ANR	975364	CallExpression	"r_core_block_size ( core , osize )"		975082	0					
ANR	975365	Callee	r_core_block_size		975082	0					
ANR	975366	Identifier	r_core_block_size		975082	0					
ANR	975367	ArgumentList	core		975082	1					
ANR	975368	Argument	core		975082	0					
ANR	975369	Identifier	core		975082	0					
ANR	975370	Argument	osize		975082	1					
ANR	975371	Identifier	osize		975082	0					
ANR	975372	ReturnStatement	return handled_cmd ;	2909:1:86485:86503	975082	12	True				
ANR	975373	Identifier	handled_cmd		975082	0					
ANR	975374	ReturnType	static bool		975082	1					
ANR	975375	Identifier	cmd_print_ph		975082	2					
ANR	975376	ParameterList	"RCore * core , const char * input"		975082	3					
ANR	975377	Parameter	RCore * core	2862:25:85354:85364	975082	0	True				
ANR	975378	ParameterType	RCore *		975082	0					
ANR	975379	Identifier	core		975082	1					
ANR	975380	Parameter	const char * input	2862:38:85367:85383	975082	1	True				
ANR	975381	ParameterType	const char *		975082	0					
ANR	975382	Identifier	input		975082	1					
ANR	975383	CFGEntryNode	ENTRY		975082		True				
ANR	975384	CFGExitNode	EXIT		975082		True				
ANR	975385	Symbol	* ( ptr + 1 )		975082						
ANR	975386	Symbol	hash_handlers [ pos ] . name		975082						
ANR	975387	Symbol	* core		975082						
ANR	975388	Symbol	* input		975082						
ANR	975389	Symbol	strchr		975082						
ANR	975390	Symbol	r_num_math		975082						
ANR	975391	Symbol	len		975082						
ANR	975392	Symbol	nlen		975082						
ANR	975393	Symbol	pos		975082						
ANR	975394	Symbol	* ptr		975082						
ANR	975395	Symbol	hash_handlers		975082						
ANR	975396	Symbol	core -> num		975082						
ANR	975397	Symbol	* hash_handlers		975082						
ANR	975398	Symbol	core -> blocksize		975082						
ANR	975399	Symbol	osize		975082						
ANR	975400	Symbol	core -> block		975082						
ANR	975401	Symbol	false		975082						
ANR	975402	Symbol	ptr		975082						
ANR	975403	Symbol	core		975082						
ANR	975404	Symbol	input		975082						
ANR	975405	Symbol	handled_cmd		975082						
ANR	975406	Symbol	true		975082						
ANR	975407	Symbol	r_str_trim_ro		975082						
ANR	975408	Symbol	r_str_ccmp		975082						
ANR	975409	Symbol	algo		975082						
ANR	975410	Symbol	* pos		975082						
ANR	975411	Function	cmd_print_pv	2913:0:86536:91449							
ANR	975412	FunctionDef	"cmd_print_pv (RCore * core , const char * input , bool useBytes)"		975411	0					
ANR	975413	CompoundStatement		2913:72:86608:91449	975411	0					
ANR	975414	IdentifierDeclStatement	"const char * stack [ ] = { ""ret"" , ""arg0"" , ""arg1"" , ""arg2"" , ""arg3"" , ""arg4"" , NULL } ;"	2914:1:86611:86691	975411	0	True				
ANR	975415	IdentifierDecl	"* stack [ ] = { ""ret"" , ""arg0"" , ""arg1"" , ""arg2"" , ""arg3"" , ""arg4"" , NULL }"		975411	0					
ANR	975416	IdentifierDeclType	const char * [ ]		975411	0					
ANR	975417	Identifier	stack		975411	1					
ANR	975418	AssignmentExpression	"* stack [ ] = { ""ret"" , ""arg0"" , ""arg1"" , ""arg2"" , ""arg3"" , ""arg4"" , NULL }"		975411	2		=			
ANR	975419	Identifier	stack		975411	0					
ANR	975420	InitializerList	"""ret"""		975411	1					
ANR	975421	PrimaryExpression	"""ret"""		975411	0					
ANR	975422	PrimaryExpression	"""arg0"""		975411	1					
ANR	975423	PrimaryExpression	"""arg1"""		975411	2					
ANR	975424	PrimaryExpression	"""arg2"""		975411	3					
ANR	975425	PrimaryExpression	"""arg3"""		975411	4					
ANR	975426	PrimaryExpression	"""arg4"""		975411	5					
ANR	975427	Identifier	NULL		975411	6					
ANR	975428	IdentifierDeclStatement	ut8 * block = core -> block ;	2917:1:86694:86718	975411	1	True				
ANR	975429	IdentifierDecl	* block = core -> block		975411	0					
ANR	975430	IdentifierDeclType	ut8 *		975411	0					
ANR	975431	Identifier	block		975411	1					
ANR	975432	AssignmentExpression	* block = core -> block		975411	2		=			
ANR	975433	Identifier	block		975411	0					
ANR	975434	PtrMemberAccess	core -> block		975411	1					
ANR	975435	Identifier	core		975411	0					
ANR	975436	Identifier	block		975411	1					
ANR	975437	IdentifierDeclStatement	int blocksize = core -> blocksize ;	2918:1:86721:86752	975411	2	True				
ANR	975438	IdentifierDecl	blocksize = core -> blocksize		975411	0					
ANR	975439	IdentifierDeclType	int		975411	0					
ANR	975440	Identifier	blocksize		975411	1					
ANR	975441	AssignmentExpression	blocksize = core -> blocksize		975411	2		=			
ANR	975442	Identifier	blocksize		975411	0					
ANR	975443	PtrMemberAccess	core -> blocksize		975411	1					
ANR	975444	Identifier	core		975411	0					
ANR	975445	Identifier	blocksize		975411	1					
ANR	975446	IdentifierDeclStatement	ut8 * block_end = core -> block + blocksize ;	2919:1:86755:86795	975411	3	True				
ANR	975447	IdentifierDecl	* block_end = core -> block + blocksize		975411	0					
ANR	975448	IdentifierDeclType	ut8 *		975411	0					
ANR	975449	Identifier	block_end		975411	1					
ANR	975450	AssignmentExpression	* block_end = core -> block + blocksize		975411	2		=			
ANR	975451	Identifier	block_end		975411	0					
ANR	975452	AdditiveExpression	core -> block + blocksize		975411	1		+			
ANR	975453	PtrMemberAccess	core -> block		975411	0					
ANR	975454	Identifier	core		975411	0					
ANR	975455	Identifier	block		975411	1					
ANR	975456	Identifier	blocksize		975411	1					
ANR	975457	IdentifierDeclStatement	"int i , n = core -> assembler -> bits / 8 ;"	2920:1:86798:86834	975411	4	True				
ANR	975458	IdentifierDecl	i		975411	0					
ANR	975459	IdentifierDeclType	int		975411	0					
ANR	975460	Identifier	i		975411	1					
ANR	975461	IdentifierDecl	n = core -> assembler -> bits / 8		975411	1					
ANR	975462	IdentifierDeclType	int		975411	0					
ANR	975463	Identifier	n		975411	1					
ANR	975464	AssignmentExpression	n = core -> assembler -> bits / 8		975411	2		=			
ANR	975465	Identifier	n		975411	0					
ANR	975466	MultiplicativeExpression	core -> assembler -> bits / 8		975411	1		/			
ANR	975467	PtrMemberAccess	core -> assembler -> bits		975411	0					
ANR	975468	PtrMemberAccess	core -> assembler		975411	0					
ANR	975469	Identifier	core		975411	0					
ANR	975470	Identifier	assembler		975411	1					
ANR	975471	Identifier	bits		975411	1					
ANR	975472	PrimaryExpression	8		975411	1					
ANR	975473	IdentifierDeclStatement	int type = 'v' ;	2921:1:86837:86851	975411	5	True				
ANR	975474	IdentifierDecl	type = 'v'		975411	0					
ANR	975475	IdentifierDeclType	int		975411	0					
ANR	975476	Identifier	type		975411	1					
ANR	975477	AssignmentExpression	type = 'v'		975411	2		=			
ANR	975478	Identifier	type		975411	0					
ANR	975479	PrimaryExpression	'v'		975411	1					
ANR	975480	IdentifierDeclStatement	bool fixed_size = true ;	2922:1:86854:86876	975411	6	True				
ANR	975481	IdentifierDecl	fixed_size = true		975411	0					
ANR	975482	IdentifierDeclType	bool		975411	0					
ANR	975483	Identifier	fixed_size		975411	1					
ANR	975484	AssignmentExpression	fixed_size = true		975411	2		=			
ANR	975485	Identifier	true		975411	0					
ANR	975486	Identifier	true		975411	1					
ANR	975487	SwitchStatement	switch ( input [ 0 ] )		975411	7					
ANR	975488	Condition	input [ 0 ]	2923:9:86887:86894	975411	0	True				
ANR	975489	ArrayIndexing	input [ 0 ]		975411	0					
ANR	975490	Identifier	input		975411	0					
ANR	975491	PrimaryExpression	0		975411	1					
ANR	975492	CompoundStatement		11:19:288:288	975411	1					
ANR	975493	Label	case '1' :	2924:1:86900:86908	975411	0	True				
ANR	975494	ExpressionStatement	n = 1	2925:2:86921:86926	975411	1	True				
ANR	975495	AssignmentExpression	n = 1		975411	0		=			
ANR	975496	Identifier	n		975411	0					
ANR	975497	PrimaryExpression	1		975411	1					
ANR	975498	ExpressionStatement	input ++	2926:2:86930:86937	975411	2	True				
ANR	975499	PostIncDecOperationExpression	input ++		975411	0					
ANR	975500	Identifier	input		975411	0					
ANR	975501	IncDec	++		975411	1					
ANR	975502	BreakStatement	break ;	2927:2:86941:86946	975411	3	True				
ANR	975503	Label	case '2' :	2928:1:86949:86957	975411	4	True				
ANR	975504	ExpressionStatement	n = 2	2929:2:86970:86975	975411	5	True				
ANR	975505	AssignmentExpression	n = 2		975411	0		=			
ANR	975506	Identifier	n		975411	0					
ANR	975507	PrimaryExpression	2		975411	1					
ANR	975508	ExpressionStatement	input ++	2930:2:86979:86986	975411	6	True				
ANR	975509	PostIncDecOperationExpression	input ++		975411	0					
ANR	975510	Identifier	input		975411	0					
ANR	975511	IncDec	++		975411	1					
ANR	975512	BreakStatement	break ;	2931:2:86990:86995	975411	7	True				
ANR	975513	Label	case '4' :	2932:1:86998:87006	975411	8	True				
ANR	975514	ExpressionStatement	n = 4	2933:2:87019:87024	975411	9	True				
ANR	975515	AssignmentExpression	n = 4		975411	0		=			
ANR	975516	Identifier	n		975411	0					
ANR	975517	PrimaryExpression	4		975411	1					
ANR	975518	ExpressionStatement	input ++	2934:2:87028:87035	975411	10	True				
ANR	975519	PostIncDecOperationExpression	input ++		975411	0					
ANR	975520	Identifier	input		975411	0					
ANR	975521	IncDec	++		975411	1					
ANR	975522	BreakStatement	break ;	2935:2:87039:87044	975411	11	True				
ANR	975523	Label	case '8' :	2936:1:87047:87055	975411	12	True				
ANR	975524	ExpressionStatement	n = 8	2937:2:87068:87073	975411	13	True				
ANR	975525	AssignmentExpression	n = 8		975411	0		=			
ANR	975526	Identifier	n		975411	0					
ANR	975527	PrimaryExpression	8		975411	1					
ANR	975528	ExpressionStatement	input ++	2938:2:87077:87084	975411	14	True				
ANR	975529	PostIncDecOperationExpression	input ++		975411	0					
ANR	975530	Identifier	input		975411	0					
ANR	975531	IncDec	++		975411	1					
ANR	975532	BreakStatement	break ;	2939:2:87088:87093	975411	15	True				
ANR	975533	Label	default :	2940:1:87096:87103	975411	16	True				
ANR	975534	Identifier	default		975411	0					
ANR	975535	IfStatement	if ( * input && input [ 1 ] == 'j' )		975411	17					
ANR	975536	Condition	* input && input [ 1 ] == 'j'	2941:6:87111:87135	975411	0	True				
ANR	975537	AndExpression	* input && input [ 1 ] == 'j'		975411	0		&&			
ANR	975538	UnaryOperationExpression	* input		975411	0					
ANR	975539	UnaryOperator	*		975411	0					
ANR	975540	Identifier	input		975411	1					
ANR	975541	EqualityExpression	input [ 1 ] == 'j'		975411	1		==			
ANR	975542	ArrayIndexing	input [ 1 ]		975411	0					
ANR	975543	Identifier	input		975411	0					
ANR	975544	PrimaryExpression	1		975411	1					
ANR	975545	PrimaryExpression	'j'		975411	1					
ANR	975546	CompoundStatement		29:33:529:529	975411	1					
ANR	975547	ExpressionStatement	input ++	2942:3:87143:87150	975411	0	True				
ANR	975548	PostIncDecOperationExpression	input ++		975411	0					
ANR	975549	Identifier	input		975411	0					
ANR	975550	IncDec	++		975411	1					
ANR	975551	ExpressionStatement	fixed_size = false	2944:2:87158:87176	975411	18	True				
ANR	975552	AssignmentExpression	fixed_size = false		975411	0		=			
ANR	975553	Identifier	fixed_size		975411	0					
ANR	975554	Identifier	false		975411	1					
ANR	975555	BreakStatement	break ;	2945:2:87180:87185	975411	19	True				
ANR	975556	IdentifierDeclStatement	"const char * arg = strchr ( input , ' ' ) ;"	2947:1:87191:87228	975411	8	True				
ANR	975557	IdentifierDecl	"* arg = strchr ( input , ' ' )"		975411	0					
ANR	975558	IdentifierDeclType	const char *		975411	0					
ANR	975559	Identifier	arg		975411	1					
ANR	975560	AssignmentExpression	"* arg = strchr ( input , ' ' )"		975411	2		=			
ANR	975561	Identifier	arg		975411	0					
ANR	975562	CallExpression	"strchr ( input , ' ' )"		975411	1					
ANR	975563	Callee	strchr		975411	0					
ANR	975564	Identifier	strchr		975411	0					
ANR	975565	ArgumentList	input		975411	1					
ANR	975566	Argument	input		975411	0					
ANR	975567	Identifier	input		975411	0					
ANR	975568	Argument	' '		975411	1					
ANR	975569	PrimaryExpression	' '		975411	0					
ANR	975570	IfStatement	if ( arg )		975411	9					
ANR	975571	Condition	arg	2948:5:87235:87237	975411	0	True				
ANR	975572	Identifier	arg		975411	0					
ANR	975573	CompoundStatement		36:10:631:631	975411	1					
ANR	975574	ExpressionStatement	arg = r_str_trim_ro ( arg + 1 )	2949:2:87244:87273	975411	0	True				
ANR	975575	AssignmentExpression	arg = r_str_trim_ro ( arg + 1 )		975411	0		=			
ANR	975576	Identifier	arg		975411	0					
ANR	975577	CallExpression	r_str_trim_ro ( arg + 1 )		975411	1					
ANR	975578	Callee	r_str_trim_ro		975411	0					
ANR	975579	Identifier	r_str_trim_ro		975411	0					
ANR	975580	ArgumentList	arg + 1		975411	1					
ANR	975581	Argument	arg + 1		975411	0					
ANR	975582	AdditiveExpression	arg + 1		975411	0		+			
ANR	975583	Identifier	arg		975411	0					
ANR	975584	PrimaryExpression	1		975411	1					
ANR	975585	ElseStatement	else		975411	0					
ANR	975586	CompoundStatement		38:8:674:674	975411	0					
ANR	975587	ExpressionStatement	arg = input	2951:2:87287:87298	975411	0	True				
ANR	975588	AssignmentExpression	arg = input		975411	0		=			
ANR	975589	Identifier	arg		975411	0					
ANR	975590	Identifier	input		975411	1					
ANR	975591	IdentifierDeclStatement	"st64 repeat = r_num_math ( core -> num , arg ) ;"	2953:1:87304:87345	975411	10	True				
ANR	975592	IdentifierDecl	"repeat = r_num_math ( core -> num , arg )"		975411	0					
ANR	975593	IdentifierDeclType	st64		975411	0					
ANR	975594	Identifier	repeat		975411	1					
ANR	975595	AssignmentExpression	"repeat = r_num_math ( core -> num , arg )"		975411	2		=			
ANR	975596	Identifier	repeat		975411	0					
ANR	975597	CallExpression	"r_num_math ( core -> num , arg )"		975411	1					
ANR	975598	Callee	r_num_math		975411	0					
ANR	975599	Identifier	r_num_math		975411	0					
ANR	975600	ArgumentList	core -> num		975411	1					
ANR	975601	Argument	core -> num		975411	0					
ANR	975602	PtrMemberAccess	core -> num		975411	0					
ANR	975603	Identifier	core		975411	0					
ANR	975604	Identifier	num		975411	1					
ANR	975605	Argument	arg		975411	1					
ANR	975606	Identifier	arg		975411	0					
ANR	975607	IfStatement	if ( repeat < 0 )		975411	11					
ANR	975608	Condition	repeat < 0	2954:5:87352:87361	975411	0	True				
ANR	975609	RelationalExpression	repeat < 0		975411	0		<			
ANR	975610	Identifier	repeat		975411	0					
ANR	975611	PrimaryExpression	0		975411	1					
ANR	975612	CompoundStatement		42:17:755:755	975411	1					
ANR	975613	ExpressionStatement	repeat = 1	2955:2:87368:87378	975411	0	True				
ANR	975614	AssignmentExpression	repeat = 1		975411	0		=			
ANR	975615	Identifier	repeat		975411	0					
ANR	975616	PrimaryExpression	1		975411	1					
ANR	975617	IfStatement	if ( useBytes && n > 0 && repeat > 0 )		975411	12					
ANR	975618	Condition	useBytes && n > 0 && repeat > 0	2957:5:87388:87418	975411	0	True				
ANR	975619	AndExpression	useBytes && n > 0 && repeat > 0		975411	0		&&			
ANR	975620	Identifier	useBytes		975411	0					
ANR	975621	AndExpression	n > 0 && repeat > 0		975411	1		&&			
ANR	975622	RelationalExpression	n > 0		975411	0		>			
ANR	975623	Identifier	n		975411	0					
ANR	975624	PrimaryExpression	0		975411	1					
ANR	975625	RelationalExpression	repeat > 0		975411	1		>			
ANR	975626	Identifier	repeat		975411	0					
ANR	975627	PrimaryExpression	0		975411	1					
ANR	975628	CompoundStatement		45:38:812:812	975411	1					
ANR	975629	ExpressionStatement	repeat /= n	2958:2:87425:87436	975411	0	True				
ANR	975630	AssignmentExpression	repeat /= n		975411	0		/=			
ANR	975631	Identifier	repeat		975411	0					
ANR	975632	Identifier	n		975411	1					
ANR	975633	IfStatement	if ( repeat < 1 )		975411	13					
ANR	975634	Condition	repeat < 1	2960:5:87446:87455	975411	0	True				
ANR	975635	RelationalExpression	repeat < 1		975411	0		<			
ANR	975636	Identifier	repeat		975411	0					
ANR	975637	PrimaryExpression	1		975411	1					
ANR	975638	CompoundStatement		48:17:849:849	975411	1					
ANR	975639	ExpressionStatement	repeat = 1	2961:2:87462:87472	975411	0	True				
ANR	975640	AssignmentExpression	repeat = 1		975411	0		=			
ANR	975641	Identifier	repeat		975411	0					
ANR	975642	PrimaryExpression	1		975411	1					
ANR	975643	SwitchStatement	switch ( input [ 0 ] )		975411	14					
ANR	975644	Condition	input [ 0 ]	2964:9:87507:87514	975411	0	True				
ANR	975645	ArrayIndexing	input [ 0 ]		975411	0					
ANR	975646	Identifier	input		975411	0					
ANR	975647	PrimaryExpression	0		975411	1					
ANR	975648	CompoundStatement		52:19:908:908	975411	1					
ANR	975649	Label	case 'z' :	2965:1:87520:87528	975411	0	True				
ANR	975650	ExpressionStatement	type = 'z'	2966:2:87541:87551	975411	1	True				
ANR	975651	AssignmentExpression	type = 'z'		975411	0		=			
ANR	975652	Identifier	type		975411	0					
ANR	975653	PrimaryExpression	'z'		975411	1					
ANR	975654	IfStatement	if ( input [ 1 ] )		975411	2					
ANR	975655	Condition	input [ 1 ]	2967:6:87559:87566	975411	0	True				
ANR	975656	ArrayIndexing	input [ 1 ]		975411	0					
ANR	975657	Identifier	input		975411	0					
ANR	975658	PrimaryExpression	1		975411	1					
ANR	975659	CompoundStatement		55:16:960:960	975411	1					
ANR	975660	ExpressionStatement	input ++	2968:3:87574:87581	975411	0	True				
ANR	975661	PostIncDecOperationExpression	input ++		975411	0					
ANR	975662	Identifier	input		975411	0					
ANR	975663	IncDec	++		975411	1					
ANR	975664	ElseStatement	else		975411	0					
ANR	975665	CompoundStatement		57:9:983:983	975411	0					
ANR	975666	ExpressionStatement	"r_core_cmdf ( core , ""ps"" )"	2970:3:87597:87621	975411	0	True				
ANR	975667	CallExpression	"r_core_cmdf ( core , ""ps"" )"		975411	0					
ANR	975668	Callee	r_core_cmdf		975411	0					
ANR	975669	Identifier	r_core_cmdf		975411	0					
ANR	975670	ArgumentList	core		975411	1					
ANR	975671	Argument	core		975411	0					
ANR	975672	Identifier	core		975411	0					
ANR	975673	Argument	"""ps"""		975411	1					
ANR	975674	PrimaryExpression	"""ps"""		975411	0					
ANR	975675	BreakStatement	break ;	2971:3:87626:87631	975411	1	True				
ANR	975676	ForStatement	for ( i = 0 ; stack [ i ] ; i ++ )		975411	3					
ANR	975677	ForInit	i = 0 ;	2975:7:87686:87691	975411	0	True				
ANR	975678	AssignmentExpression	i = 0		975411	0		=			
ANR	975679	Identifier	i		975411	0					
ANR	975680	PrimaryExpression	0		975411	1					
ANR	975681	Condition	stack [ i ]	2975:14:87693:87700	975411	1	True				
ANR	975682	ArrayIndexing	stack [ i ]		975411	0					
ANR	975683	Identifier	stack		975411	0					
ANR	975684	Identifier	i		975411	1					
ANR	975685	PostIncDecOperationExpression	i ++	2975:24:87703:87705	975411	2	True				
ANR	975686	Identifier	i		975411	0					
ANR	975687	IncDec	++		975411	1					
ANR	975688	CompoundStatement		63:29:1099:1099	975411	3					
ANR	975689	IfStatement	"if ( ! strcmp ( input + 1 , stack [ i ] ) )"		975411	0					
ANR	975690	Condition	"! strcmp ( input + 1 , stack [ i ] )"	2976:7:87717:87745	975411	0	True				
ANR	975691	UnaryOperationExpression	"! strcmp ( input + 1 , stack [ i ] )"		975411	0					
ANR	975692	UnaryOperator	!		975411	0					
ANR	975693	CallExpression	"strcmp ( input + 1 , stack [ i ] )"		975411	1					
ANR	975694	Callee	strcmp		975411	0					
ANR	975695	Identifier	strcmp		975411	0					
ANR	975696	ArgumentList	input + 1		975411	1					
ANR	975697	Argument	input + 1		975411	0					
ANR	975698	AdditiveExpression	input + 1		975411	0		+			
ANR	975699	Identifier	input		975411	0					
ANR	975700	PrimaryExpression	1		975411	1					
ANR	975701	Argument	stack [ i ]		975411	1					
ANR	975702	ArrayIndexing	stack [ i ]		975411	0					
ANR	975703	Identifier	stack		975411	0					
ANR	975704	Identifier	i		975411	1					
ANR	975705	CompoundStatement		64:38:1139:1139	975411	1					
ANR	975706	IfStatement	if ( type == 'z' )		975411	0					
ANR	975707	Condition	type == 'z'	2977:8:87758:87768	975411	0	True				
ANR	975708	EqualityExpression	type == 'z'		975411	0		==			
ANR	975709	Identifier	type		975411	0					
ANR	975710	PrimaryExpression	'z'		975411	1					
ANR	975711	CompoundStatement		65:21:1162:1162	975411	1					
ANR	975712	ExpressionStatement	"r_core_cmdf ( core , ""ps @ [`drn sp`+%d]"" , n * i )"	2978:5:87778:87825	975411	0	True				
ANR	975713	CallExpression	"r_core_cmdf ( core , ""ps @ [`drn sp`+%d]"" , n * i )"		975411	0					
ANR	975714	Callee	r_core_cmdf		975411	0					
ANR	975715	Identifier	r_core_cmdf		975411	0					
ANR	975716	ArgumentList	core		975411	1					
ANR	975717	Argument	core		975411	0					
ANR	975718	Identifier	core		975411	0					
ANR	975719	Argument	"""ps @ [`drn sp`+%d]"""		975411	1					
ANR	975720	PrimaryExpression	"""ps @ [`drn sp`+%d]"""		975411	0					
ANR	975721	Argument	n * i		975411	2					
ANR	975722	MultiplicativeExpression	n * i		975411	0		*			
ANR	975723	Identifier	n		975411	0					
ANR	975724	Identifier	i		975411	1					
ANR	975725	ElseStatement	else		975411	0					
ANR	975726	CompoundStatement		67:11:1229:1229	975411	0					
ANR	975727	ExpressionStatement	"r_core_cmdf ( core , ""?v [`drn sp`+%d]"" , n * i )"	2980:5:87845:87890	975411	0	True				
ANR	975728	CallExpression	"r_core_cmdf ( core , ""?v [`drn sp`+%d]"" , n * i )"		975411	0					
ANR	975729	Callee	r_core_cmdf		975411	0					
ANR	975730	Identifier	r_core_cmdf		975411	0					
ANR	975731	ArgumentList	core		975411	1					
ANR	975732	Argument	core		975411	0					
ANR	975733	Identifier	core		975411	0					
ANR	975734	Argument	"""?v [`drn sp`+%d]"""		975411	1					
ANR	975735	PrimaryExpression	"""?v [`drn sp`+%d]"""		975411	0					
ANR	975736	Argument	n * i		975411	2					
ANR	975737	MultiplicativeExpression	n * i		975411	0		*			
ANR	975738	Identifier	n		975411	0					
ANR	975739	Identifier	i		975411	1					
ANR	975740	BreakStatement	break ;	2984:2:87909:87914	975411	4	True				
ANR	975741	Label	case '*' :	2985:1:87917:87925	975411	5	True				
ANR	975742	CompoundStatement		73:11:1318:1318	975411	6					
ANR	975743	ForStatement	for ( i = 0 ; i < repeat ; i ++ )		975411	0					
ANR	975744	ForInit	i = 0 ;	2986:10:87948:87953	975411	0	True				
ANR	975745	AssignmentExpression	i = 0		975411	0		=			
ANR	975746	Identifier	i		975411	0					
ANR	975747	PrimaryExpression	0		975411	1					
ANR	975748	Condition	i < repeat	2986:17:87955:87964	975411	1	True				
ANR	975749	RelationalExpression	i < repeat		975411	0		<			
ANR	975750	Identifier	i		975411	0					
ANR	975751	Identifier	repeat		975411	1					
ANR	975752	PostIncDecOperationExpression	i ++	2986:29:87967:87969	975411	2	True				
ANR	975753	Identifier	i		975411	0					
ANR	975754	IncDec	++		975411	1					
ANR	975755	CompoundStatement		77:4:1454:1478	975411	3					
ANR	975756	IdentifierDeclStatement	const bool be = core -> print -> big_endian ;	2987:6:87980:88019	975411	0	True				
ANR	975757	IdentifierDecl	be = core -> print -> big_endian		975411	0					
ANR	975758	IdentifierDeclType	const bool		975411	0					
ANR	975759	Identifier	be		975411	1					
ANR	975760	AssignmentExpression	be = core -> print -> big_endian		975411	2		=			
ANR	975761	Identifier	be		975411	0					
ANR	975762	PtrMemberAccess	core -> print -> big_endian		975411	1					
ANR	975763	PtrMemberAccess	core -> print		975411	0					
ANR	975764	Identifier	core		975411	0					
ANR	975765	Identifier	print		975411	1					
ANR	975766	Identifier	big_endian		975411	1					
ANR	975767	IdentifierDeclStatement	ut64 at = core -> offset + ( i * n ) ;	2988:4:88025:88057	975411	1	True				
ANR	975768	IdentifierDecl	at = core -> offset + ( i * n )		975411	0					
ANR	975769	IdentifierDeclType	ut64		975411	0					
ANR	975770	Identifier	at		975411	1					
ANR	975771	AssignmentExpression	at = core -> offset + ( i * n )		975411	2		=			
ANR	975772	Identifier	at		975411	0					
ANR	975773	AdditiveExpression	core -> offset + ( i * n )		975411	1		+			
ANR	975774	PtrMemberAccess	core -> offset		975411	0					
ANR	975775	Identifier	core		975411	0					
ANR	975776	Identifier	offset		975411	1					
ANR	975777	MultiplicativeExpression	i * n		975411	1		*			
ANR	975778	Identifier	i		975411	0					
ANR	975779	Identifier	n		975411	1					
ANR	975780	IdentifierDeclStatement	ut8 * b = block + ( i * n ) ;	2989:4:88063:88087	975411	2	True				
ANR	975781	IdentifierDecl	* b = block + ( i * n )		975411	0					
ANR	975782	IdentifierDeclType	ut8 *		975411	0					
ANR	975783	Identifier	b		975411	1					
ANR	975784	AssignmentExpression	* b = block + ( i * n )		975411	2		=			
ANR	975785	Identifier	b		975411	0					
ANR	975786	AdditiveExpression	block + ( i * n )		975411	1		+			
ANR	975787	Identifier	block		975411	0					
ANR	975788	MultiplicativeExpression	i * n		975411	1		*			
ANR	975789	Identifier	i		975411	0					
ANR	975790	Identifier	n		975411	1					
ANR	975791	SwitchStatement	switch ( n )		975411	3					
ANR	975792	Condition	n	2990:14:88103:88103	975411	0	True				
ANR	975793	Identifier	n		975411	0					
ANR	975794	CompoundStatement		78:17:1497:1497	975411	1					
ANR	975795	Label	case 1 :	2991:6:88114:88120	975411	0	True				
ANR	975796	Statement	r_cons_printf	2992:7:88129:88141	975411	1	True				
ANR	975797	Statement	(	2992:21:88143:88143	975411	2	True				
ANR	975798	Statement	"""f pval.0x%08"""	2992:22:88144:88157	975411	3	True				
ANR	975799	Statement	PFMT64x	2992:36:88158:88164	975411	4	True				
ANR	975800	Statement	"""=%"""	2992:43:88165:88168	975411	5	True				
ANR	975801	Statement	PFMT64d	2992:47:88169:88175	975411	6	True				
ANR	975802	Statement	"""\\n"""	2992:54:88176:88179	975411	7	True				
ANR	975803	Statement	","	2992:58:88180:88180	975411	8	True				
ANR	975804	Statement	at	2992:60:88182:88183	975411	9	True				
ANR	975805	Statement	","	2992:62:88184:88184	975411	10	True				
ANR	975806	Statement	r_read_ble8	2992:64:88186:88196	975411	11	True				
ANR	975807	Statement	(	2992:76:88198:88198	975411	12	True				
ANR	975808	Statement	b	2992:77:88199:88199	975411	13	True				
ANR	975809	Statement	)	2992:78:88200:88200	975411	14	True				
ANR	975810	Statement	)	2992:79:88201:88201	975411	15	True				
ANR	975811	ExpressionStatement		2992:80:88202:88202	975411	16	True				
ANR	975812	BreakStatement	break ;	2993:7:88211:88216	975411	17	True				
ANR	975813	Label	case 2 :	2994:6:88224:88230	975411	18	True				
ANR	975814	Statement	r_cons_printf	2995:7:88239:88251	975411	19	True				
ANR	975815	Statement	(	2995:21:88253:88253	975411	20	True				
ANR	975816	Statement	"""f pval.0x%08"""	2995:22:88254:88267	975411	21	True				
ANR	975817	Statement	PFMT64x	2995:36:88268:88274	975411	22	True				
ANR	975818	Statement	"""=%"""	2995:43:88275:88278	975411	23	True				
ANR	975819	Statement	PFMT64d	2995:47:88279:88285	975411	24	True				
ANR	975820	Statement	"""\\n"""	2995:54:88286:88289	975411	25	True				
ANR	975821	Statement	","	2995:58:88290:88290	975411	26	True				
ANR	975822	Statement	at	2995:60:88292:88293	975411	27	True				
ANR	975823	Statement	","	2995:62:88294:88294	975411	28	True				
ANR	975824	Statement	r_read_ble16	2995:64:88296:88307	975411	29	True				
ANR	975825	Statement	(	2995:77:88309:88309	975411	30	True				
ANR	975826	Statement	b	2995:78:88310:88310	975411	31	True				
ANR	975827	Statement	","	2995:79:88311:88311	975411	32	True				
ANR	975828	Statement	be	2995:81:88313:88314	975411	33	True				
ANR	975829	Statement	)	2995:83:88315:88315	975411	34	True				
ANR	975830	Statement	)	2995:84:88316:88316	975411	35	True				
ANR	975831	ExpressionStatement		2995:85:88317:88317	975411	36	True				
ANR	975832	BreakStatement	break ;	2996:7:88326:88331	975411	37	True				
ANR	975833	Label	case 4 :	2997:6:88339:88345	975411	38	True				
ANR	975834	Statement	r_cons_printf	2998:7:88354:88366	975411	39	True				
ANR	975835	Statement	(	2998:21:88368:88368	975411	40	True				
ANR	975836	Statement	"""f pval.0x%08"""	2998:22:88369:88382	975411	41	True				
ANR	975837	Statement	PFMT64x	2998:36:88383:88389	975411	42	True				
ANR	975838	Statement	"""=%"""	2998:43:88390:88393	975411	43	True				
ANR	975839	Statement	PFMT64d	2998:47:88394:88400	975411	44	True				
ANR	975840	Statement	"""\\n"""	2998:54:88401:88404	975411	45	True				
ANR	975841	Statement	","	2998:58:88405:88405	975411	46	True				
ANR	975842	Statement	at	2998:60:88407:88408	975411	47	True				
ANR	975843	Statement	","	2998:62:88409:88409	975411	48	True				
ANR	975844	Statement	r_read_ble32	2998:64:88411:88422	975411	49	True				
ANR	975845	Statement	(	2998:77:88424:88424	975411	50	True				
ANR	975846	Statement	b	2998:78:88425:88425	975411	51	True				
ANR	975847	Statement	","	2998:79:88426:88426	975411	52	True				
ANR	975848	Statement	be	2998:81:88428:88429	975411	53	True				
ANR	975849	Statement	)	2998:83:88430:88430	975411	54	True				
ANR	975850	Statement	)	2998:84:88431:88431	975411	55	True				
ANR	975851	ExpressionStatement		2998:85:88432:88432	975411	56	True				
ANR	975852	BreakStatement	break ;	2999:7:88441:88446	975411	57	True				
ANR	975853	Label	case 8 :	3000:6:88454:88460	975411	58	True				
ANR	975854	Label	default :	3001:4:88466:88473	975411	59	True				
ANR	975855	Identifier	default		975411	0					
ANR	975856	Statement	r_cons_printf	3002:7:88482:88494	975411	60	True				
ANR	975857	Statement	(	3002:21:88496:88496	975411	61	True				
ANR	975858	Statement	"""f pval.0x%08"""	3002:22:88497:88510	975411	62	True				
ANR	975859	Statement	PFMT64x	3002:36:88511:88517	975411	63	True				
ANR	975860	Statement	"""=%"""	3002:43:88518:88521	975411	64	True				
ANR	975861	Statement	PFMT64d	3002:47:88522:88528	975411	65	True				
ANR	975862	Statement	"""\\n"""	3002:54:88529:88532	975411	66	True				
ANR	975863	Statement	","	3002:58:88533:88533	975411	67	True				
ANR	975864	Statement	at	3002:60:88535:88536	975411	68	True				
ANR	975865	Statement	","	3002:62:88537:88537	975411	69	True				
ANR	975866	Statement	r_read_ble64	3002:64:88539:88550	975411	70	True				
ANR	975867	Statement	(	3002:77:88552:88552	975411	71	True				
ANR	975868	Statement	b	3002:78:88553:88553	975411	72	True				
ANR	975869	Statement	","	3002:79:88554:88554	975411	73	True				
ANR	975870	Statement	be	3002:81:88556:88557	975411	74	True				
ANR	975871	Statement	)	3002:83:88558:88558	975411	75	True				
ANR	975872	Statement	)	3002:84:88559:88559	975411	76	True				
ANR	975873	ExpressionStatement		3002:85:88560:88560	975411	77	True				
ANR	975874	BreakStatement	break ;	3003:7:88569:88574	975411	78	True				
ANR	975875	BreakStatement	break ;	3007:2:88597:88602	975411	7	True				
ANR	975876	Label	case 'j' :	3008:1:88605:88613	975411	8	True				
ANR	975877	CompoundStatement		99:3:2073:2088	975411	9					
ANR	975878	ExpressionStatement	"r_cons_printf ( ""["" )"	3009:5:88631:88650	975411	0	True				
ANR	975879	CallExpression	"r_cons_printf ( ""["" )"		975411	0					
ANR	975880	Callee	r_cons_printf		975411	0					
ANR	975881	Identifier	r_cons_printf		975411	0					
ANR	975882	ArgumentList	"""["""		975411	1					
ANR	975883	Argument	"""["""		975411	0					
ANR	975884	PrimaryExpression	"""["""		975411	0					
ANR	975885	IdentifierDeclStatement	ut64 at = core -> offset ;	3010:3:88655:88677	975411	1	True				
ANR	975886	IdentifierDecl	at = core -> offset		975411	0					
ANR	975887	IdentifierDeclType	ut64		975411	0					
ANR	975888	Identifier	at		975411	1					
ANR	975889	AssignmentExpression	at = core -> offset		975411	2		=			
ANR	975890	Identifier	at		975411	0					
ANR	975891	PtrMemberAccess	core -> offset		975411	1					
ANR	975892	Identifier	core		975411	0					
ANR	975893	Identifier	offset		975411	1					
ANR	975894	IdentifierDeclStatement	ut64 oldAt = at ;	3011:3:88682:88697	975411	2	True				
ANR	975895	IdentifierDecl	oldAt = at		975411	0					
ANR	975896	IdentifierDeclType	ut64		975411	0					
ANR	975897	Identifier	oldAt		975411	1					
ANR	975898	AssignmentExpression	oldAt = at		975411	2		=			
ANR	975899	Identifier	at		975411	0					
ANR	975900	Identifier	at		975411	1					
ANR	975901	ForStatement	for ( i = 0 ; i < repeat ; i ++ )		975411	3					
ANR	975902	ForInit	i = 0 ;	3012:10:88709:88714	975411	0	True				
ANR	975903	AssignmentExpression	i = 0		975411	0		=			
ANR	975904	Identifier	i		975411	0					
ANR	975905	PrimaryExpression	0		975411	1					
ANR	975906	Condition	i < repeat	3012:17:88716:88725	975411	1	True				
ANR	975907	RelationalExpression	i < repeat		975411	0		<			
ANR	975908	Identifier	i		975411	0					
ANR	975909	Identifier	repeat		975411	1					
ANR	975910	PostIncDecOperationExpression	i ++	3012:29:88728:88730	975411	2	True				
ANR	975911	Identifier	i		975411	0					
ANR	975912	IncDec	++		975411	1					
ANR	975913	CompoundStatement		107:6:2298:2311	975411	3					
ANR	975914	IfStatement	if ( i > 0 )		975411	0					
ANR	975915	Condition	i > 0	3013:10:88745:88749	975411	0	True				
ANR	975916	RelationalExpression	i > 0		975411	0		>			
ANR	975917	Identifier	i		975411	0					
ANR	975918	PrimaryExpression	0		975411	1					
ANR	975919	CompoundStatement		101:17:2143:2143	975411	1					
ANR	975920	ExpressionStatement	"r_cons_printf ( "","" )"	3014:7:88761:88780	975411	0	True				
ANR	975921	CallExpression	"r_cons_printf ( "","" )"		975411	0					
ANR	975922	Callee	r_cons_printf		975411	0					
ANR	975923	Identifier	r_cons_printf		975411	0					
ANR	975924	ArgumentList	""","""		975411	1					
ANR	975925	Argument	""","""		975411	0					
ANR	975926	PrimaryExpression	""","""		975411	0					
ANR	975927	ExpressionStatement	"r_core_seek ( core , at , 0 )"	3016:6:88796:88821	975411	1	True				
ANR	975928	CallExpression	"r_core_seek ( core , at , 0 )"		975411	0					
ANR	975929	Callee	r_core_seek		975411	0					
ANR	975930	Identifier	r_core_seek		975411	0					
ANR	975931	ArgumentList	core		975411	1					
ANR	975932	Argument	core		975411	0					
ANR	975933	Identifier	core		975411	0					
ANR	975934	Argument	at		975411	1					
ANR	975935	Identifier	at		975411	0					
ANR	975936	Argument	0		975411	2					
ANR	975937	PrimaryExpression	0		975411	0					
ANR	975938	IdentifierDeclStatement	"char * str = r_core_cmd_str ( core , ""ps @ [$$]"" ) ;"	3017:6:88829:88875	975411	2	True				
ANR	975939	IdentifierDecl	"* str = r_core_cmd_str ( core , ""ps @ [$$]"" )"		975411	0					
ANR	975940	IdentifierDeclType	char *		975411	0					
ANR	975941	Identifier	str		975411	1					
ANR	975942	AssignmentExpression	"* str = r_core_cmd_str ( core , ""ps @ [$$]"" )"		975411	2		=			
ANR	975943	Identifier	str		975411	0					
ANR	975944	CallExpression	"r_core_cmd_str ( core , ""ps @ [$$]"" )"		975411	1					
ANR	975945	Callee	r_core_cmd_str		975411	0					
ANR	975946	Identifier	r_core_cmd_str		975411	0					
ANR	975947	ArgumentList	core		975411	1					
ANR	975948	Argument	core		975411	0					
ANR	975949	Identifier	core		975411	0					
ANR	975950	Argument	"""ps @ [$$]"""		975411	1					
ANR	975951	PrimaryExpression	"""ps @ [$$]"""		975411	0					
ANR	975952	ExpressionStatement	r_str_trim ( str )	3018:6:88883:88899	975411	3	True				
ANR	975953	CallExpression	r_str_trim ( str )		975411	0					
ANR	975954	Callee	r_str_trim		975411	0					
ANR	975955	Identifier	r_str_trim		975411	0					
ANR	975956	ArgumentList	str		975411	1					
ANR	975957	Argument	str		975411	0					
ANR	975958	Identifier	str		975411	0					
ANR	975959	IdentifierDeclStatement	char * p = str ;	3019:6:88907:88920	975411	4	True				
ANR	975960	IdentifierDecl	* p = str		975411	0					
ANR	975961	IdentifierDeclType	char *		975411	0					
ANR	975962	Identifier	p		975411	1					
ANR	975963	AssignmentExpression	* p = str		975411	2		=			
ANR	975964	Identifier	str		975411	0					
ANR	975965	Identifier	str		975411	1					
ANR	975966	IfStatement	if ( p )		975411	5					
ANR	975967	Condition	p	3020:10:88932:88932	975411	0	True				
ANR	975968	Identifier	p		975411	0					
ANR	975969	CompoundStatement		108:13:2326:2326	975411	1					
ANR	975970	WhileStatement	while ( * p )		975411	0					
ANR	975971	Condition	* p	3021:14:88951:88952	975411	0	True				
ANR	975972	UnaryOperationExpression	* p		975411	0					
ANR	975973	UnaryOperator	*		975411	0					
ANR	975974	Identifier	p		975411	1					
ANR	975975	CompoundStatement		109:18:2346:2346	975411	1					
ANR	975976	IfStatement	if ( * p == '\\\\' && p [ 1 ] == 'x' )		975411	0					
ANR	975977	Condition	* p == '\\\\' && p [ 1 ] == 'x'	3022:12:88969:88993	975411	0	True				
ANR	975978	AndExpression	* p == '\\\\' && p [ 1 ] == 'x'		975411	0		&&			
ANR	975979	EqualityExpression	* p == '\\\\'		975411	0		==			
ANR	975980	UnaryOperationExpression	* p		975411	0					
ANR	975981	UnaryOperator	*		975411	0					
ANR	975982	Identifier	p		975411	1					
ANR	975983	PrimaryExpression	'\\\\'		975411	1					
ANR	975984	EqualityExpression	p [ 1 ] == 'x'		975411	1		==			
ANR	975985	ArrayIndexing	p [ 1 ]		975411	0					
ANR	975986	Identifier	p		975411	0					
ANR	975987	PrimaryExpression	1		975411	1					
ANR	975988	PrimaryExpression	'x'		975411	1					
ANR	975989	CompoundStatement		110:39:2387:2387	975411	1					
ANR	975990	ExpressionStatement	"memmove ( p , p + 4 , strlen ( p + 4 ) + 1 )"	3023:9:89007:89045	975411	0	True				
ANR	975991	CallExpression	"memmove ( p , p + 4 , strlen ( p + 4 ) + 1 )"		975411	0					
ANR	975992	Callee	memmove		975411	0					
ANR	975993	Identifier	memmove		975411	0					
ANR	975994	ArgumentList	p		975411	1					
ANR	975995	Argument	p		975411	0					
ANR	975996	Identifier	p		975411	0					
ANR	975997	Argument	p + 4		975411	1					
ANR	975998	AdditiveExpression	p + 4		975411	0		+			
ANR	975999	Identifier	p		975411	0					
ANR	976000	PrimaryExpression	4		975411	1					
ANR	976001	Argument	strlen ( p + 4 ) + 1		975411	2					
ANR	976002	AdditiveExpression	strlen ( p + 4 ) + 1		975411	0		+			
ANR	976003	CallExpression	strlen ( p + 4 )		975411	0					
ANR	976004	Callee	strlen		975411	0					
ANR	976005	Identifier	strlen		975411	0					
ANR	976006	ArgumentList	p + 4		975411	1					
ANR	976007	Argument	p + 4		975411	0					
ANR	976008	AdditiveExpression	p + 4		975411	0		+			
ANR	976009	Identifier	p		975411	0					
ANR	976010	PrimaryExpression	4		975411	1					
ANR	976011	PrimaryExpression	1		975411	1					
ANR	976012	SwitchStatement	switch ( n )		975411	6					
ANR	976013	Condition	n	3030:14:89308:89308	975411	0	True				
ANR	976014	Identifier	n		975411	0					
ANR	976015	CompoundStatement		118:17:2702:2702	975411	1					
ANR	976016	Label	case 1 :	3031:6:89319:89325	975411	0	True				
ANR	976017	ExpressionStatement	"pj_fmt ( r_cons_printf , ""{'value':%i,'string':%s}"" , r_read_ble8 ( block ) , str )"	3032:7:89334:89419	975411	1	True				
ANR	976018	CallExpression	"pj_fmt ( r_cons_printf , ""{'value':%i,'string':%s}"" , r_read_ble8 ( block ) , str )"		975411	0					
ANR	976019	Callee	pj_fmt		975411	0					
ANR	976020	Identifier	pj_fmt		975411	0					
ANR	976021	ArgumentList	r_cons_printf		975411	1					
ANR	976022	Argument	r_cons_printf		975411	0					
ANR	976023	Identifier	r_cons_printf		975411	0					
ANR	976024	Argument	"""{'value':%i,'string':%s}"""		975411	1					
ANR	976025	PrimaryExpression	"""{'value':%i,'string':%s}"""		975411	0					
ANR	976026	Argument	r_read_ble8 ( block )		975411	2					
ANR	976027	CallExpression	r_read_ble8 ( block )		975411	0					
ANR	976028	Callee	r_read_ble8		975411	0					
ANR	976029	Identifier	r_read_ble8		975411	0					
ANR	976030	ArgumentList	block		975411	1					
ANR	976031	Argument	block		975411	0					
ANR	976032	Identifier	block		975411	0					
ANR	976033	Argument	str		975411	3					
ANR	976034	Identifier	str		975411	0					
ANR	976035	BreakStatement	break ;	3034:7:89428:89433	975411	2	True				
ANR	976036	Label	case 2 :	3035:6:89441:89447	975411	3	True				
ANR	976037	ExpressionStatement	"pj_fmt ( r_cons_printf , ""{'value':%i,'string':%s}"" , r_read_ble16 ( block , core -> print -> big_endian ) , str )"	3036:7:89456:89567	975411	4	True				
ANR	976038	CallExpression	"pj_fmt ( r_cons_printf , ""{'value':%i,'string':%s}"" , r_read_ble16 ( block , core -> print -> big_endian ) , str )"		975411	0					
ANR	976039	Callee	pj_fmt		975411	0					
ANR	976040	Identifier	pj_fmt		975411	0					
ANR	976041	ArgumentList	r_cons_printf		975411	1					
ANR	976042	Argument	r_cons_printf		975411	0					
ANR	976043	Identifier	r_cons_printf		975411	0					
ANR	976044	Argument	"""{'value':%i,'string':%s}"""		975411	1					
ANR	976045	PrimaryExpression	"""{'value':%i,'string':%s}"""		975411	0					
ANR	976046	Argument	"r_read_ble16 ( block , core -> print -> big_endian )"		975411	2					
ANR	976047	CallExpression	"r_read_ble16 ( block , core -> print -> big_endian )"		975411	0					
ANR	976048	Callee	r_read_ble16		975411	0					
ANR	976049	Identifier	r_read_ble16		975411	0					
ANR	976050	ArgumentList	block		975411	1					
ANR	976051	Argument	block		975411	0					
ANR	976052	Identifier	block		975411	0					
ANR	976053	Argument	core -> print -> big_endian		975411	1					
ANR	976054	PtrMemberAccess	core -> print -> big_endian		975411	0					
ANR	976055	PtrMemberAccess	core -> print		975411	0					
ANR	976056	Identifier	core		975411	0					
ANR	976057	Identifier	print		975411	1					
ANR	976058	Identifier	big_endian		975411	1					
ANR	976059	Argument	str		975411	3					
ANR	976060	Identifier	str		975411	0					
ANR	976061	BreakStatement	break ;	3038:7:89576:89581	975411	5	True				
ANR	976062	Label	case 4 :	3039:6:89589:89595	975411	6	True				
ANR	976063	ExpressionStatement	"pj_fmt ( r_cons_printf , ""{'value':%n,'string':%s}"" , ( ut64 ) r_read_ble32 ( block , core -> print -> big_endian ) , str )"	3040:7:89604:89721	975411	7	True				
ANR	976064	CallExpression	"pj_fmt ( r_cons_printf , ""{'value':%n,'string':%s}"" , ( ut64 ) r_read_ble32 ( block , core -> print -> big_endian ) , str )"		975411	0					
ANR	976065	Callee	pj_fmt		975411	0					
ANR	976066	Identifier	pj_fmt		975411	0					
ANR	976067	ArgumentList	r_cons_printf		975411	1					
ANR	976068	Argument	r_cons_printf		975411	0					
ANR	976069	Identifier	r_cons_printf		975411	0					
ANR	976070	Argument	"""{'value':%n,'string':%s}"""		975411	1					
ANR	976071	PrimaryExpression	"""{'value':%n,'string':%s}"""		975411	0					
ANR	976072	Argument	"( ut64 ) r_read_ble32 ( block , core -> print -> big_endian )"		975411	2					
ANR	976073	CastExpression	"( ut64 ) r_read_ble32 ( block , core -> print -> big_endian )"		975411	0					
ANR	976074	CastTarget	ut64		975411	0					
ANR	976075	CallExpression	"r_read_ble32 ( block , core -> print -> big_endian )"		975411	1					
ANR	976076	Callee	r_read_ble32		975411	0					
ANR	976077	Identifier	r_read_ble32		975411	0					
ANR	976078	ArgumentList	block		975411	1					
ANR	976079	Argument	block		975411	0					
ANR	976080	Identifier	block		975411	0					
ANR	976081	Argument	core -> print -> big_endian		975411	1					
ANR	976082	PtrMemberAccess	core -> print -> big_endian		975411	0					
ANR	976083	PtrMemberAccess	core -> print		975411	0					
ANR	976084	Identifier	core		975411	0					
ANR	976085	Identifier	print		975411	1					
ANR	976086	Identifier	big_endian		975411	1					
ANR	976087	Argument	str		975411	3					
ANR	976088	Identifier	str		975411	0					
ANR	976089	BreakStatement	break ;	3042:7:89730:89735	975411	8	True				
ANR	976090	Label	case 8 :	3043:6:89743:89749	975411	9	True				
ANR	976091	ExpressionStatement	"pj_fmt ( r_cons_printf , ""{'value':%n,'string':%s}"" , r_read_ble64 ( block , core -> print -> big_endian ) , str )"	3044:7:89758:89869	975411	10	True				
ANR	976092	CallExpression	"pj_fmt ( r_cons_printf , ""{'value':%n,'string':%s}"" , r_read_ble64 ( block , core -> print -> big_endian ) , str )"		975411	0					
ANR	976093	Callee	pj_fmt		975411	0					
ANR	976094	Identifier	pj_fmt		975411	0					
ANR	976095	ArgumentList	r_cons_printf		975411	1					
ANR	976096	Argument	r_cons_printf		975411	0					
ANR	976097	Identifier	r_cons_printf		975411	0					
ANR	976098	Argument	"""{'value':%n,'string':%s}"""		975411	1					
ANR	976099	PrimaryExpression	"""{'value':%n,'string':%s}"""		975411	0					
ANR	976100	Argument	"r_read_ble64 ( block , core -> print -> big_endian )"		975411	2					
ANR	976101	CallExpression	"r_read_ble64 ( block , core -> print -> big_endian )"		975411	0					
ANR	976102	Callee	r_read_ble64		975411	0					
ANR	976103	Identifier	r_read_ble64		975411	0					
ANR	976104	ArgumentList	block		975411	1					
ANR	976105	Argument	block		975411	0					
ANR	976106	Identifier	block		975411	0					
ANR	976107	Argument	core -> print -> big_endian		975411	1					
ANR	976108	PtrMemberAccess	core -> print -> big_endian		975411	0					
ANR	976109	PtrMemberAccess	core -> print		975411	0					
ANR	976110	Identifier	core		975411	0					
ANR	976111	Identifier	print		975411	1					
ANR	976112	Identifier	big_endian		975411	1					
ANR	976113	Argument	str		975411	3					
ANR	976114	Identifier	str		975411	0					
ANR	976115	BreakStatement	break ;	3046:7:89878:89883	975411	11	True				
ANR	976116	Label	default :	3047:6:89891:89898	975411	12	True				
ANR	976117	Identifier	default		975411	0					
ANR	976118	ExpressionStatement	"pj_fmt ( r_cons_printf , ""{'value':%n,'string':%s}"" , r_read_ble64 ( block , core -> print -> big_endian ) , str )"	3048:7:89907:90018	975411	13	True				
ANR	976119	CallExpression	"pj_fmt ( r_cons_printf , ""{'value':%n,'string':%s}"" , r_read_ble64 ( block , core -> print -> big_endian ) , str )"		975411	0					
ANR	976120	Callee	pj_fmt		975411	0					
ANR	976121	Identifier	pj_fmt		975411	0					
ANR	976122	ArgumentList	r_cons_printf		975411	1					
ANR	976123	Argument	r_cons_printf		975411	0					
ANR	976124	Identifier	r_cons_printf		975411	0					
ANR	976125	Argument	"""{'value':%n,'string':%s}"""		975411	1					
ANR	976126	PrimaryExpression	"""{'value':%n,'string':%s}"""		975411	0					
ANR	976127	Argument	"r_read_ble64 ( block , core -> print -> big_endian )"		975411	2					
ANR	976128	CallExpression	"r_read_ble64 ( block , core -> print -> big_endian )"		975411	0					
ANR	976129	Callee	r_read_ble64		975411	0					
ANR	976130	Identifier	r_read_ble64		975411	0					
ANR	976131	ArgumentList	block		975411	1					
ANR	976132	Argument	block		975411	0					
ANR	976133	Identifier	block		975411	0					
ANR	976134	Argument	core -> print -> big_endian		975411	1					
ANR	976135	PtrMemberAccess	core -> print -> big_endian		975411	0					
ANR	976136	PtrMemberAccess	core -> print		975411	0					
ANR	976137	Identifier	core		975411	0					
ANR	976138	Identifier	print		975411	1					
ANR	976139	Identifier	big_endian		975411	1					
ANR	976140	Argument	str		975411	3					
ANR	976141	Identifier	str		975411	0					
ANR	976142	BreakStatement	break ;	3050:7:90027:90032	975411	14	True				
ANR	976143	ExpressionStatement	free ( str )	3052:6:90048:90058	975411	7	True				
ANR	976144	CallExpression	free ( str )		975411	0					
ANR	976145	Callee	free		975411	0					
ANR	976146	Identifier	free		975411	0					
ANR	976147	ArgumentList	str		975411	1					
ANR	976148	Argument	str		975411	0					
ANR	976149	Identifier	str		975411	0					
ANR	976150	ExpressionStatement	at += n	3053:6:90066:90073	975411	8	True				
ANR	976151	AssignmentExpression	at += n		975411	0		+=			
ANR	976152	Identifier	at		975411	0					
ANR	976153	Identifier	n		975411	1					
ANR	976154	ExpressionStatement	"r_cons_printf ( ""]\\n"" )"	3055:5:90087:90108	975411	4	True				
ANR	976155	CallExpression	"r_cons_printf ( ""]\\n"" )"		975411	0					
ANR	976156	Callee	r_cons_printf		975411	0					
ANR	976157	Identifier	r_cons_printf		975411	0					
ANR	976158	ArgumentList	"""]\\n"""		975411	1					
ANR	976159	Argument	"""]\\n"""		975411	0					
ANR	976160	PrimaryExpression	"""]\\n"""		975411	0					
ANR	976161	ExpressionStatement	"r_core_seek ( core , oldAt , 0 )"	3056:3:90113:90141	975411	5	True				
ANR	976162	CallExpression	"r_core_seek ( core , oldAt , 0 )"		975411	0					
ANR	976163	Callee	r_core_seek		975411	0					
ANR	976164	Identifier	r_core_seek		975411	0					
ANR	976165	ArgumentList	core		975411	1					
ANR	976166	Argument	core		975411	0					
ANR	976167	Identifier	core		975411	0					
ANR	976168	Argument	oldAt		975411	1					
ANR	976169	Identifier	oldAt		975411	0					
ANR	976170	Argument	0		975411	2					
ANR	976171	PrimaryExpression	0		975411	0					
ANR	976172	BreakStatement	break ;	3057:2:90145:90150	975411	6	True				
ANR	976173	Label	case '?' :	3059:1:90156:90164	975411	10	True				
ANR	976174	ExpressionStatement	"r_core_cmd_help ( core , help_msg_pv )"	3060:2:90177:90212	975411	11	True				
ANR	976175	CallExpression	"r_core_cmd_help ( core , help_msg_pv )"		975411	0					
ANR	976176	Callee	r_core_cmd_help		975411	0					
ANR	976177	Identifier	r_core_cmd_help		975411	0					
ANR	976178	ArgumentList	core		975411	1					
ANR	976179	Argument	core		975411	0					
ANR	976180	Identifier	core		975411	0					
ANR	976181	Argument	help_msg_pv		975411	1					
ANR	976182	Identifier	help_msg_pv		975411	0					
ANR	976183	BreakStatement	break ;	3061:2:90216:90221	975411	12	True				
ANR	976184	Label	default :	3062:1:90224:90231	975411	13	True				
ANR	976185	Identifier	default		975411	0					
ANR	976186	DoStatement	do		975411	14					
ANR	976187	CompoundStatement		157:2:3779:3785	975411	0					
ANR	976188	ExpressionStatement	repeat --	3064:2:90241:90249	975411	0	True				
ANR	976189	PostIncDecOperationExpression	repeat --		975411	0					
ANR	976190	Identifier	repeat		975411	0					
ANR	976191	IncDec	--		975411	1					
ANR	976192	IfStatement	if ( block + 8 >= block_end )		975411	1					
ANR	976193	Condition	block + 8 >= block_end	3065:6:90257:90278	975411	0	True				
ANR	976194	RelationalExpression	block + 8 >= block_end		975411	0		>=			
ANR	976195	AdditiveExpression	block + 8		975411	0		+			
ANR	976196	Identifier	block		975411	0					
ANR	976197	PrimaryExpression	8		975411	1					
ANR	976198	Identifier	block_end		975411	1					
ANR	976199	CompoundStatement		153:30:3672:3672	975411	1					
ANR	976200	ExpressionStatement	"eprintf ( ""Truncated. TODO: use r_io_read apis insgtead of depending on blocksize\\n"" )"	3066:3:90286:90370	975411	0	True				
ANR	976201	CallExpression	"eprintf ( ""Truncated. TODO: use r_io_read apis insgtead of depending on blocksize\\n"" )"		975411	0					
ANR	976202	Callee	eprintf		975411	0					
ANR	976203	Identifier	eprintf		975411	0					
ANR	976204	ArgumentList	"""Truncated. TODO: use r_io_read apis insgtead of depending on blocksize\\n"""		975411	1					
ANR	976205	Argument	"""Truncated. TODO: use r_io_read apis insgtead of depending on blocksize\\n"""		975411	0					
ANR	976206	PrimaryExpression	"""Truncated. TODO: use r_io_read apis insgtead of depending on blocksize\\n"""		975411	0					
ANR	976207	BreakStatement	break ;	3067:3:90375:90380	975411	1	True				
ANR	976208	IdentifierDeclStatement	ut64 v ;	3069:2:90388:90394	975411	2	True				
ANR	976209	IdentifierDecl	v		975411	0					
ANR	976210	IdentifierDeclType	ut64		975411	0					
ANR	976211	Identifier	v		975411	1					
ANR	976212	IfStatement	if ( ! fixed_size )		975411	3					
ANR	976213	Condition	! fixed_size	3070:6:90402:90412	975411	0	True				
ANR	976214	UnaryOperationExpression	! fixed_size		975411	0					
ANR	976215	UnaryOperator	!		975411	0					
ANR	976216	Identifier	fixed_size		975411	1					
ANR	976217	CompoundStatement		158:19:3806:3806	975411	1					
ANR	976218	ExpressionStatement	n = 0	3071:3:90420:90425	975411	0	True				
ANR	976219	AssignmentExpression	n = 0		975411	0		=			
ANR	976220	Identifier	n		975411	0					
ANR	976221	PrimaryExpression	0		975411	1					
ANR	976222	SwitchStatement	switch ( n )		975411	4					
ANR	976223	Condition	n	3073:10:90441:90441	975411	0	True				
ANR	976224	Identifier	n		975411	0					
ANR	976225	CompoundStatement		161:13:3835:3835	975411	1					
ANR	976226	Label	case 1 :	3074:2:90448:90454	975411	0	True				
ANR	976227	ExpressionStatement	v = r_read_ble8 ( block )	3075:3:90459:90482	975411	1	True				
ANR	976228	AssignmentExpression	v = r_read_ble8 ( block )		975411	0		=			
ANR	976229	Identifier	v		975411	0					
ANR	976230	CallExpression	r_read_ble8 ( block )		975411	1					
ANR	976231	Callee	r_read_ble8		975411	0					
ANR	976232	Identifier	r_read_ble8		975411	0					
ANR	976233	ArgumentList	block		975411	1					
ANR	976234	Argument	block		975411	0					
ANR	976235	Identifier	block		975411	0					
ANR	976236	Statement	r_cons_printf	3076:3:90487:90499	975411	2	True				
ANR	976237	Statement	(	3076:17:90501:90501	975411	3	True				
ANR	976238	Statement	"""0x%02"""	3076:18:90502:90508	975411	4	True				
ANR	976239	Statement	PFMT64x	3076:26:90510:90516	975411	5	True				
ANR	976240	Statement	"""\\n"""	3076:34:90518:90521	975411	6	True				
ANR	976241	Statement	","	3076:38:90522:90522	975411	7	True				
ANR	976242	Statement	v	3076:40:90524:90524	975411	8	True				
ANR	976243	Statement	)	3076:41:90525:90525	975411	9	True				
ANR	976244	ExpressionStatement		3076:42:90526:90526	975411	10	True				
ANR	976245	ExpressionStatement	block += 1	3077:3:90531:90541	975411	11	True				
ANR	976246	AssignmentExpression	block += 1		975411	0		+=			
ANR	976247	Identifier	block		975411	0					
ANR	976248	PrimaryExpression	1		975411	1					
ANR	976249	BreakStatement	break ;	3078:3:90546:90551	975411	12	True				
ANR	976250	Label	case 2 :	3079:2:90555:90561	975411	13	True				
ANR	976251	ExpressionStatement	"v = r_read_ble16 ( block , core -> print -> big_endian )"	3080:3:90566:90615	975411	14	True				
ANR	976252	AssignmentExpression	"v = r_read_ble16 ( block , core -> print -> big_endian )"		975411	0		=			
ANR	976253	Identifier	v		975411	0					
ANR	976254	CallExpression	"r_read_ble16 ( block , core -> print -> big_endian )"		975411	1					
ANR	976255	Callee	r_read_ble16		975411	0					
ANR	976256	Identifier	r_read_ble16		975411	0					
ANR	976257	ArgumentList	block		975411	1					
ANR	976258	Argument	block		975411	0					
ANR	976259	Identifier	block		975411	0					
ANR	976260	Argument	core -> print -> big_endian		975411	1					
ANR	976261	PtrMemberAccess	core -> print -> big_endian		975411	0					
ANR	976262	PtrMemberAccess	core -> print		975411	0					
ANR	976263	Identifier	core		975411	0					
ANR	976264	Identifier	print		975411	1					
ANR	976265	Identifier	big_endian		975411	1					
ANR	976266	Statement	r_cons_printf	3081:3:90620:90632	975411	15	True				
ANR	976267	Statement	(	3081:17:90634:90634	975411	16	True				
ANR	976268	Statement	"""0x%04"""	3081:18:90635:90641	975411	17	True				
ANR	976269	Statement	PFMT64x	3081:26:90643:90649	975411	18	True				
ANR	976270	Statement	"""\\n"""	3081:34:90651:90654	975411	19	True				
ANR	976271	Statement	","	3081:38:90655:90655	975411	20	True				
ANR	976272	Statement	v	3081:40:90657:90657	975411	21	True				
ANR	976273	Statement	)	3081:41:90658:90658	975411	22	True				
ANR	976274	ExpressionStatement		3081:42:90659:90659	975411	23	True				
ANR	976275	ExpressionStatement	block += 2	3082:3:90664:90674	975411	24	True				
ANR	976276	AssignmentExpression	block += 2		975411	0		+=			
ANR	976277	Identifier	block		975411	0					
ANR	976278	PrimaryExpression	2		975411	1					
ANR	976279	BreakStatement	break ;	3083:3:90679:90684	975411	25	True				
ANR	976280	Label	case 4 :	3084:2:90688:90694	975411	26	True				
ANR	976281	ExpressionStatement	"v = r_read_ble32 ( block , core -> print -> big_endian )"	3085:3:90699:90748	975411	27	True				
ANR	976282	AssignmentExpression	"v = r_read_ble32 ( block , core -> print -> big_endian )"		975411	0		=			
ANR	976283	Identifier	v		975411	0					
ANR	976284	CallExpression	"r_read_ble32 ( block , core -> print -> big_endian )"		975411	1					
ANR	976285	Callee	r_read_ble32		975411	0					
ANR	976286	Identifier	r_read_ble32		975411	0					
ANR	976287	ArgumentList	block		975411	1					
ANR	976288	Argument	block		975411	0					
ANR	976289	Identifier	block		975411	0					
ANR	976290	Argument	core -> print -> big_endian		975411	1					
ANR	976291	PtrMemberAccess	core -> print -> big_endian		975411	0					
ANR	976292	PtrMemberAccess	core -> print		975411	0					
ANR	976293	Identifier	core		975411	0					
ANR	976294	Identifier	print		975411	1					
ANR	976295	Identifier	big_endian		975411	1					
ANR	976296	Statement	r_cons_printf	3086:3:90753:90765	975411	28	True				
ANR	976297	Statement	(	3086:17:90767:90767	975411	29	True				
ANR	976298	Statement	"""0x%08"""	3086:18:90768:90774	975411	30	True				
ANR	976299	Statement	PFMT64x	3086:26:90776:90782	975411	31	True				
ANR	976300	Statement	"""\\n"""	3086:34:90784:90787	975411	32	True				
ANR	976301	Statement	","	3086:38:90788:90788	975411	33	True				
ANR	976302	Statement	v	3086:40:90790:90790	975411	34	True				
ANR	976303	Statement	)	3086:41:90791:90791	975411	35	True				
ANR	976304	ExpressionStatement		3086:42:90792:90792	975411	36	True				
ANR	976305	ExpressionStatement	block += 4	3087:3:90797:90807	975411	37	True				
ANR	976306	AssignmentExpression	block += 4		975411	0		+=			
ANR	976307	Identifier	block		975411	0					
ANR	976308	PrimaryExpression	4		975411	1					
ANR	976309	BreakStatement	break ;	3088:3:90812:90817	975411	38	True				
ANR	976310	Label	case 8 :	3089:2:90821:90827	975411	39	True				
ANR	976311	ExpressionStatement	"v = r_read_ble64 ( block , core -> print -> big_endian )"	3090:3:90832:90881	975411	40	True				
ANR	976312	AssignmentExpression	"v = r_read_ble64 ( block , core -> print -> big_endian )"		975411	0		=			
ANR	976313	Identifier	v		975411	0					
ANR	976314	CallExpression	"r_read_ble64 ( block , core -> print -> big_endian )"		975411	1					
ANR	976315	Callee	r_read_ble64		975411	0					
ANR	976316	Identifier	r_read_ble64		975411	0					
ANR	976317	ArgumentList	block		975411	1					
ANR	976318	Argument	block		975411	0					
ANR	976319	Identifier	block		975411	0					
ANR	976320	Argument	core -> print -> big_endian		975411	1					
ANR	976321	PtrMemberAccess	core -> print -> big_endian		975411	0					
ANR	976322	PtrMemberAccess	core -> print		975411	0					
ANR	976323	Identifier	core		975411	0					
ANR	976324	Identifier	print		975411	1					
ANR	976325	Identifier	big_endian		975411	1					
ANR	976326	Statement	r_cons_printf	3091:3:90886:90898	975411	41	True				
ANR	976327	Statement	(	3091:17:90900:90900	975411	42	True				
ANR	976328	Statement	"""0x%016"""	3091:18:90901:90908	975411	43	True				
ANR	976329	Statement	PFMT64x	3091:27:90910:90916	975411	44	True				
ANR	976330	Statement	"""\\n"""	3091:35:90918:90921	975411	45	True				
ANR	976331	Statement	","	3091:39:90922:90922	975411	46	True				
ANR	976332	Statement	v	3091:41:90924:90924	975411	47	True				
ANR	976333	Statement	)	3091:42:90925:90925	975411	48	True				
ANR	976334	ExpressionStatement		3091:43:90926:90926	975411	49	True				
ANR	976335	ExpressionStatement	block += 8	3092:3:90931:90941	975411	50	True				
ANR	976336	AssignmentExpression	block += 8		975411	0		+=			
ANR	976337	Identifier	block		975411	0					
ANR	976338	PrimaryExpression	8		975411	1					
ANR	976339	BreakStatement	break ;	3093:3:90946:90951	975411	51	True				
ANR	976340	Label	default :	3094:2:90955:90962	975411	52	True				
ANR	976341	Identifier	default		975411	0					
ANR	976342	ExpressionStatement	"v = r_read_ble64 ( block , core -> print -> big_endian )"	3095:3:90967:91016	975411	53	True				
ANR	976343	AssignmentExpression	"v = r_read_ble64 ( block , core -> print -> big_endian )"		975411	0		=			
ANR	976344	Identifier	v		975411	0					
ANR	976345	CallExpression	"r_read_ble64 ( block , core -> print -> big_endian )"		975411	1					
ANR	976346	Callee	r_read_ble64		975411	0					
ANR	976347	Identifier	r_read_ble64		975411	0					
ANR	976348	ArgumentList	block		975411	1					
ANR	976349	Argument	block		975411	0					
ANR	976350	Identifier	block		975411	0					
ANR	976351	Argument	core -> print -> big_endian		975411	1					
ANR	976352	PtrMemberAccess	core -> print -> big_endian		975411	0					
ANR	976353	PtrMemberAccess	core -> print		975411	0					
ANR	976354	Identifier	core		975411	0					
ANR	976355	Identifier	print		975411	1					
ANR	976356	Identifier	big_endian		975411	1					
ANR	976357	SwitchStatement	switch ( core -> assembler -> bits / 8 )		975411	54					
ANR	976358	Condition	core -> assembler -> bits / 8	3096:11:91029:91053	975411	0	True				
ANR	976359	MultiplicativeExpression	core -> assembler -> bits / 8		975411	0		/			
ANR	976360	PtrMemberAccess	core -> assembler -> bits		975411	0					
ANR	976361	PtrMemberAccess	core -> assembler		975411	0					
ANR	976362	Identifier	core		975411	0					
ANR	976363	Identifier	assembler		975411	1					
ANR	976364	Identifier	bits		975411	1					
ANR	976365	PrimaryExpression	8		975411	1					
ANR	976366	CompoundStatement		184:38:4447:4447	975411	1					
ANR	976367	Label	case 1 :	3097:3:91061:91067	975411	0	True				
ANR	976368	Statement	r_cons_printf	3097:11:91069:91081	975411	1	True				
ANR	976369	Statement	(	3097:25:91083:91083	975411	2	True				
ANR	976370	Statement	"""0x%02"""	3097:26:91084:91090	975411	3	True				
ANR	976371	Statement	PFMT64x	3097:34:91092:91098	975411	4	True				
ANR	976372	Statement	"""\\n"""	3097:42:91100:91103	975411	5	True				
ANR	976373	Statement	","	3097:46:91104:91104	975411	6	True				
ANR	976374	Statement	v	3097:48:91106:91106	975411	7	True				
ANR	976375	Statement	&	3097:50:91108:91108	975411	8	True				
ANR	976376	Statement	UT8_MAX	3097:52:91110:91116	975411	9	True				
ANR	976377	Statement	)	3097:59:91117:91117	975411	10	True				
ANR	976378	ExpressionStatement		3097:60:91118:91118	975411	11	True				
ANR	976379	BreakStatement	break ;	3097:62:91120:91125	975411	12	True				
ANR	976380	Label	case 2 :	3098:3:91130:91136	975411	13	True				
ANR	976381	Statement	r_cons_printf	3098:11:91138:91150	975411	14	True				
ANR	976382	Statement	(	3098:25:91152:91152	975411	15	True				
ANR	976383	Statement	"""0x%04"""	3098:26:91153:91159	975411	16	True				
ANR	976384	Statement	PFMT64x	3098:34:91161:91167	975411	17	True				
ANR	976385	Statement	"""\\n"""	3098:42:91169:91172	975411	18	True				
ANR	976386	Statement	","	3098:46:91173:91173	975411	19	True				
ANR	976387	Statement	v	3098:48:91175:91175	975411	20	True				
ANR	976388	Statement	&	3098:50:91177:91177	975411	21	True				
ANR	976389	Statement	UT16_MAX	3098:52:91179:91186	975411	22	True				
ANR	976390	Statement	)	3098:60:91187:91187	975411	23	True				
ANR	976391	ExpressionStatement		3098:61:91188:91188	975411	24	True				
ANR	976392	BreakStatement	break ;	3098:63:91190:91195	975411	25	True				
ANR	976393	Label	case 4 :	3099:3:91200:91206	975411	26	True				
ANR	976394	Statement	r_cons_printf	3099:11:91208:91220	975411	27	True				
ANR	976395	Statement	(	3099:25:91222:91222	975411	28	True				
ANR	976396	Statement	"""0x%08"""	3099:26:91223:91229	975411	29	True				
ANR	976397	Statement	PFMT64x	3099:34:91231:91237	975411	30	True				
ANR	976398	Statement	"""\\n"""	3099:42:91239:91242	975411	31	True				
ANR	976399	Statement	","	3099:46:91243:91243	975411	32	True				
ANR	976400	Statement	v	3099:48:91245:91245	975411	33	True				
ANR	976401	Statement	&	3099:50:91247:91247	975411	34	True				
ANR	976402	Statement	UT32_MAX	3099:52:91249:91256	975411	35	True				
ANR	976403	Statement	)	3099:60:91257:91257	975411	36	True				
ANR	976404	ExpressionStatement		3099:61:91258:91258	975411	37	True				
ANR	976405	BreakStatement	break ;	3099:63:91260:91265	975411	38	True				
ANR	976406	Label	case 8 :	3100:3:91270:91276	975411	39	True				
ANR	976407	Statement	r_cons_printf	3100:11:91278:91290	975411	40	True				
ANR	976408	Statement	(	3100:25:91292:91292	975411	41	True				
ANR	976409	Statement	"""0x%016"""	3100:26:91293:91300	975411	42	True				
ANR	976410	Statement	PFMT64x	3100:35:91302:91308	975411	43	True				
ANR	976411	Statement	"""\\n"""	3100:43:91310:91313	975411	44	True				
ANR	976412	Statement	","	3100:47:91314:91314	975411	45	True				
ANR	976413	Statement	v	3100:49:91316:91316	975411	46	True				
ANR	976414	Statement	&	3100:51:91318:91318	975411	47	True				
ANR	976415	Statement	UT64_MAX	3100:53:91320:91327	975411	48	True				
ANR	976416	Statement	)	3100:61:91328:91328	975411	49	True				
ANR	976417	ExpressionStatement		3100:62:91329:91329	975411	50	True				
ANR	976418	BreakStatement	break ;	3100:64:91331:91336	975411	51	True				
ANR	976419	Label	default :	3101:3:91341:91348	975411	52	True				
ANR	976420	Identifier	default		975411	0					
ANR	976421	BreakStatement	break ;	3101:12:91350:91355	975411	53	True				
ANR	976422	ExpressionStatement	block += core -> assembler -> bits / 8	3103:3:91365:91399	975411	55	True				
ANR	976423	AssignmentExpression	block += core -> assembler -> bits / 8		975411	0		+=			
ANR	976424	Identifier	block		975411	0					
ANR	976425	MultiplicativeExpression	core -> assembler -> bits / 8		975411	1		/			
ANR	976426	PtrMemberAccess	core -> assembler -> bits		975411	0					
ANR	976427	PtrMemberAccess	core -> assembler		975411	0					
ANR	976428	Identifier	core		975411	0					
ANR	976429	Identifier	assembler		975411	1					
ANR	976430	Identifier	bits		975411	1					
ANR	976431	PrimaryExpression	8		975411	1					
ANR	976432	BreakStatement	break ;	3104:3:91404:91409	975411	56	True				
ANR	976433	Condition	repeat > 0	3106:10:91425:91434	975411	1	True				
ANR	976434	RelationalExpression	repeat > 0		975411	0		>			
ANR	976435	Identifier	repeat		975411	0					
ANR	976436	PrimaryExpression	0		975411	1					
ANR	976437	BreakStatement	break ;	3107:1:91439:91444	975411	15	True				
ANR	976438	ReturnType	static void		975411	1					
ANR	976439	Identifier	cmd_print_pv		975411	2					
ANR	976440	ParameterList	"RCore * core , const char * input , bool useBytes"		975411	3					
ANR	976441	Parameter	RCore * core	2913:25:86561:86571	975411	0	True				
ANR	976442	ParameterType	RCore *		975411	0					
ANR	976443	Identifier	core		975411	1					
ANR	976444	Parameter	const char * input	2913:38:86574:86590	975411	1	True				
ANR	976445	ParameterType	const char *		975411	0					
ANR	976446	Identifier	input		975411	1					
ANR	976447	Parameter	bool useBytes	2913:57:86593:86605	975411	2	True				
ANR	976448	ParameterType	bool		975411	0					
ANR	976449	Identifier	useBytes		975411	1					
ANR	976450	CFGEntryNode	ENTRY		975411		True				
ANR	976451	CFGExitNode	EXIT		975411		True				
ANR	976452	Symbol	blocksize		975411						
ANR	976453	Symbol	stack		975411						
ANR	976454	Symbol	r_core_cmd_str		975411						
ANR	976455	Symbol	* input		975411						
ANR	976456	Symbol	strchr		975411						
ANR	976457	Symbol	core -> offset		975411						
ANR	976458	Symbol	r_read_ble8		975411						
ANR	976459	Symbol	type		975411						
ANR	976460	Symbol	* core -> assembler		975411						
ANR	976461	Symbol	strlen		975411						
ANR	976462	Symbol	block		975411						
ANR	976463	Symbol	core -> num		975411						
ANR	976464	Symbol	core -> blocksize		975411						
ANR	976465	Symbol	fixed_size		975411						
ANR	976466	Symbol	strcmp		975411						
ANR	976467	Symbol	NULL		975411						
ANR	976468	Symbol	core -> block		975411						
ANR	976469	Symbol	core -> print -> big_endian		975411						
ANR	976470	Symbol	block_end		975411						
ANR	976471	Symbol	useBytes		975411						
ANR	976472	Symbol	str		975411						
ANR	976473	Symbol	core		975411						
ANR	976474	Symbol	input		975411						
ANR	976475	Symbol	at		975411						
ANR	976476	Symbol	true		975411						
ANR	976477	Symbol	r_str_trim_ro		975411						
ANR	976478	Symbol	core -> print		975411						
ANR	976479	Symbol	be		975411						
ANR	976480	Symbol	* core		975411						
ANR	976481	Symbol	core -> assembler -> bits		975411						
ANR	976482	Symbol	core -> assembler		975411						
ANR	976483	Symbol	r_num_math		975411						
ANR	976484	Symbol	arg		975411						
ANR	976485	Symbol	repeat		975411						
ANR	976486	Symbol	r_read_ble32		975411						
ANR	976487	Symbol	* * core		975411						
ANR	976488	Symbol	b		975411						
ANR	976489	Symbol	r_read_ble16		975411						
ANR	976490	Symbol	false		975411						
ANR	976491	Symbol	i		975411						
ANR	976492	Symbol	n		975411						
ANR	976493	Symbol	p		975411						
ANR	976494	Symbol	* core -> print		975411						
ANR	976495	Symbol	* i		975411						
ANR	976496	Symbol	oldAt		975411						
ANR	976497	Symbol	v		975411						
ANR	976498	Symbol	* stack		975411						
ANR	976499	Symbol	r_cons_printf		975411						
ANR	976500	Symbol	* p		975411						
ANR	976501	Symbol	help_msg_pv		975411						
ANR	976502	Symbol	r_read_ble64		975411						
ANR	976503	Function	cmd_print_blocks	3111:0:91452:96532							
ANR	976504	FunctionDef	"cmd_print_blocks (RCore * core , const char * input)"		976503	0					
ANR	976505	CompoundStatement		3111:60:91512:96532	976503	0					
ANR	976506	IdentifierDeclStatement	char mode = input [ 0 ] ;	3112:1:91515:91535	976503	0	True				
ANR	976507	IdentifierDecl	mode = input [ 0 ]		976503	0					
ANR	976508	IdentifierDeclType	char		976503	0					
ANR	976509	Identifier	mode		976503	1					
ANR	976510	AssignmentExpression	mode = input [ 0 ]		976503	2		=			
ANR	976511	Identifier	mode		976503	0					
ANR	976512	ArrayIndexing	input [ 0 ]		976503	1					
ANR	976513	Identifier	input		976503	0					
ANR	976514	PrimaryExpression	0		976503	1					
ANR	976515	IfStatement	if ( mode == '?' )		976503	1					
ANR	976516	Condition	mode == '?'	3113:5:91542:91552	976503	0	True				
ANR	976517	EqualityExpression	mode == '?'		976503	0		==			
ANR	976518	Identifier	mode		976503	0					
ANR	976519	PrimaryExpression	'?'		976503	1					
ANR	976520	CompoundStatement		3:18:42:42	976503	1					
ANR	976521	ExpressionStatement	"r_core_cmd_help ( core , help_msg_p_minus )"	3114:2:91559:91599	976503	0	True				
ANR	976522	CallExpression	"r_core_cmd_help ( core , help_msg_p_minus )"		976503	0					
ANR	976523	Callee	r_core_cmd_help		976503	0					
ANR	976524	Identifier	r_core_cmd_help		976503	0					
ANR	976525	ArgumentList	core		976503	1					
ANR	976526	Argument	core		976503	0					
ANR	976527	Identifier	core		976503	0					
ANR	976528	Argument	help_msg_p_minus		976503	1					
ANR	976529	Identifier	help_msg_p_minus		976503	0					
ANR	976530	ReturnStatement	return 0 ;	3115:2:91603:91611	976503	1	True				
ANR	976531	PrimaryExpression	0		976503	0					
ANR	976532	IfStatement	if ( mode && mode != ' ' )		976503	2					
ANR	976533	Condition	mode && mode != ' '	3118:5:91622:91640	976503	0	True				
ANR	976534	AndExpression	mode && mode != ' '		976503	0		&&			
ANR	976535	Identifier	mode		976503	0					
ANR	976536	EqualityExpression	mode != ' '		976503	1		!=			
ANR	976537	Identifier	mode		976503	0					
ANR	976538	PrimaryExpression	' '		976503	1					
ANR	976539	CompoundStatement		8:26:130:130	976503	1					
ANR	976540	ExpressionStatement	input ++	3119:2:91647:91654	976503	0	True				
ANR	976541	PostIncDecOperationExpression	input ++		976503	0					
ANR	976542	Identifier	input		976503	0					
ANR	976543	IncDec	++		976503	1					
ANR	976544	IdentifierDeclStatement	"int w = ( input [ 0 ] == ' ' ) ? ( int ) r_num_math ( core -> num , input + 1 ) : ( int ) ( core -> print -> cols * 2.7 ) ;"	3122:1:91661:91764	976503	3	True				
ANR	976545	IdentifierDecl	"w = ( input [ 0 ] == ' ' ) ? ( int ) r_num_math ( core -> num , input + 1 ) : ( int ) ( core -> print -> cols * 2.7 )"		976503	0					
ANR	976546	IdentifierDeclType	int		976503	0					
ANR	976547	Identifier	w		976503	1					
ANR	976548	AssignmentExpression	"w = ( input [ 0 ] == ' ' ) ? ( int ) r_num_math ( core -> num , input + 1 ) : ( int ) ( core -> print -> cols * 2.7 )"		976503	2		=			
ANR	976549	Identifier	w		976503	0					
ANR	976550	ConditionalExpression	"( input [ 0 ] == ' ' ) ? ( int ) r_num_math ( core -> num , input + 1 ) : ( int ) ( core -> print -> cols * 2.7 )"		976503	1					
ANR	976551	Condition	input [ 0 ] == ' '		976503	0					
ANR	976552	EqualityExpression	input [ 0 ] == ' '		976503	0		==			
ANR	976553	ArrayIndexing	input [ 0 ]		976503	0					
ANR	976554	Identifier	input		976503	0					
ANR	976555	PrimaryExpression	0		976503	1					
ANR	976556	PrimaryExpression	' '		976503	1					
ANR	976557	CastExpression	"( int ) r_num_math ( core -> num , input + 1 )"		976503	1					
ANR	976558	CastTarget	int		976503	0					
ANR	976559	CallExpression	"r_num_math ( core -> num , input + 1 )"		976503	1					
ANR	976560	Callee	r_num_math		976503	0					
ANR	976561	Identifier	r_num_math		976503	0					
ANR	976562	ArgumentList	core -> num		976503	1					
ANR	976563	Argument	core -> num		976503	0					
ANR	976564	PtrMemberAccess	core -> num		976503	0					
ANR	976565	Identifier	core		976503	0					
ANR	976566	Identifier	num		976503	1					
ANR	976567	Argument	input + 1		976503	1					
ANR	976568	AdditiveExpression	input + 1		976503	0		+			
ANR	976569	Identifier	input		976503	0					
ANR	976570	PrimaryExpression	1		976503	1					
ANR	976571	CastExpression	( int ) ( core -> print -> cols * 2.7 )		976503	2					
ANR	976572	CastTarget	int		976503	0					
ANR	976573	MultiplicativeExpression	core -> print -> cols * 2.7		976503	1		*			
ANR	976574	PtrMemberAccess	core -> print -> cols		976503	0					
ANR	976575	PtrMemberAccess	core -> print		976503	0					
ANR	976576	Identifier	core		976503	0					
ANR	976577	Identifier	print		976503	1					
ANR	976578	Identifier	cols		976503	1					
ANR	976579	PrimaryExpression	2.7		976503	1					
ANR	976580	IfStatement	if ( w == 0 )		976503	4					
ANR	976581	Condition	w == 0	3126:5:91772:91777	976503	0	True				
ANR	976582	EqualityExpression	w == 0		976503	0		==			
ANR	976583	Identifier	w		976503	0					
ANR	976584	PrimaryExpression	0		976503	1					
ANR	976585	CompoundStatement		16:13:267:267	976503	1					
ANR	976586	ExpressionStatement	"r_core_cmd_help ( core , help_msg_p_minus )"	3127:2:91784:91824	976503	0	True				
ANR	976587	CallExpression	"r_core_cmd_help ( core , help_msg_p_minus )"		976503	0					
ANR	976588	Callee	r_core_cmd_help		976503	0					
ANR	976589	Identifier	r_core_cmd_help		976503	0					
ANR	976590	ArgumentList	core		976503	1					
ANR	976591	Argument	core		976503	0					
ANR	976592	Identifier	core		976503	0					
ANR	976593	Argument	help_msg_p_minus		976503	1					
ANR	976594	Identifier	help_msg_p_minus		976503	0					
ANR	976595	ReturnStatement	return 0 ;	3128:2:91828:91836	976503	1	True				
ANR	976596	PrimaryExpression	0		976503	0					
ANR	976597	IdentifierDeclStatement	"int cols = r_config_get_i ( core -> config , ""hex.cols"" ) ;"	3130:1:91842:91894	976503	5	True				
ANR	976598	IdentifierDecl	"cols = r_config_get_i ( core -> config , ""hex.cols"" )"		976503	0					
ANR	976599	IdentifierDeclType	int		976503	0					
ANR	976600	Identifier	cols		976503	1					
ANR	976601	AssignmentExpression	"cols = r_config_get_i ( core -> config , ""hex.cols"" )"		976503	2		=			
ANR	976602	Identifier	cols		976503	0					
ANR	976603	CallExpression	"r_config_get_i ( core -> config , ""hex.cols"" )"		976503	1					
ANR	976604	Callee	r_config_get_i		976503	0					
ANR	976605	Identifier	r_config_get_i		976503	0					
ANR	976606	ArgumentList	core -> config		976503	1					
ANR	976607	Argument	core -> config		976503	0					
ANR	976608	PtrMemberAccess	core -> config		976503	0					
ANR	976609	Identifier	core		976503	0					
ANR	976610	Identifier	config		976503	1					
ANR	976611	Argument	"""hex.cols"""		976503	1					
ANR	976612	PrimaryExpression	"""hex.cols"""		976503	0					
ANR	976613	IdentifierDeclStatement	ut64 off = core -> offset ;	3132:1:91940:91963	976503	6	True				
ANR	976614	IdentifierDecl	off = core -> offset		976503	0					
ANR	976615	IdentifierDeclType	ut64		976503	0					
ANR	976616	Identifier	off		976503	1					
ANR	976617	AssignmentExpression	off = core -> offset		976503	2		=			
ANR	976618	Identifier	off		976503	0					
ANR	976619	PtrMemberAccess	core -> offset		976503	1					
ANR	976620	Identifier	core		976503	0					
ANR	976621	Identifier	offset		976503	1					
ANR	976622	IdentifierDeclStatement	ut64 from = UT64_MAX ;	3133:1:91966:91986	976503	7	True				
ANR	976623	IdentifierDecl	from = UT64_MAX		976503	0					
ANR	976624	IdentifierDeclType	ut64		976503	0					
ANR	976625	Identifier	from		976503	1					
ANR	976626	AssignmentExpression	from = UT64_MAX		976503	2		=			
ANR	976627	Identifier	UT64_MAX		976503	0					
ANR	976628	Identifier	UT64_MAX		976503	1					
ANR	976629	IdentifierDeclStatement	ut64 to = 0 ;	3134:1:91989:92000	976503	8	True				
ANR	976630	IdentifierDecl	to = 0		976503	0					
ANR	976631	IdentifierDeclType	ut64		976503	0					
ANR	976632	Identifier	to		976503	1					
ANR	976633	AssignmentExpression	to = 0		976503	2		=			
ANR	976634	Identifier	to		976503	0					
ANR	976635	PrimaryExpression	0		976503	1					
ANR	976636	IdentifierDeclStatement	"RList * list = r_core_get_boundaries_prot ( core , - 1 , NULL , ""search"" ) ;"	3135:1:92003:92070	976503	9	True				
ANR	976637	IdentifierDecl	"* list = r_core_get_boundaries_prot ( core , - 1 , NULL , ""search"" )"		976503	0					
ANR	976638	IdentifierDeclType	RList *		976503	0					
ANR	976639	Identifier	list		976503	1					
ANR	976640	AssignmentExpression	"* list = r_core_get_boundaries_prot ( core , - 1 , NULL , ""search"" )"		976503	2		=			
ANR	976641	Identifier	list		976503	0					
ANR	976642	CallExpression	"r_core_get_boundaries_prot ( core , - 1 , NULL , ""search"" )"		976503	1					
ANR	976643	Callee	r_core_get_boundaries_prot		976503	0					
ANR	976644	Identifier	r_core_get_boundaries_prot		976503	0					
ANR	976645	ArgumentList	core		976503	1					
ANR	976646	Argument	core		976503	0					
ANR	976647	Identifier	core		976503	0					
ANR	976648	Argument	- 1		976503	1					
ANR	976649	UnaryOperationExpression	- 1		976503	0					
ANR	976650	UnaryOperator	-		976503	0					
ANR	976651	PrimaryExpression	1		976503	1					
ANR	976652	Argument	NULL		976503	2					
ANR	976653	Identifier	NULL		976503	0					
ANR	976654	Argument	"""search"""		976503	3					
ANR	976655	PrimaryExpression	"""search"""		976503	0					
ANR	976656	IfStatement	if ( ! list )		976503	10					
ANR	976657	Condition	! list	3136:5:92077:92081	976503	0	True				
ANR	976658	UnaryOperationExpression	! list		976503	0					
ANR	976659	UnaryOperator	!		976503	0					
ANR	976660	Identifier	list		976503	1					
ANR	976661	CompoundStatement		26:12:571:571	976503	1					
ANR	976662	ReturnStatement	return 1 ;	3137:2:92088:92096	976503	0	True				
ANR	976663	PrimaryExpression	1		976503	0					
ANR	976664	IdentifierDeclStatement	RListIter * iter ;	3139:1:92102:92117	976503	11	True				
ANR	976665	IdentifierDecl	* iter		976503	0					
ANR	976666	IdentifierDeclType	RListIter *		976503	0					
ANR	976667	Identifier	iter		976503	1					
ANR	976668	IdentifierDeclStatement	RIOMap * map ;	3140:1:92120:92131	976503	12	True				
ANR	976669	IdentifierDecl	* map		976503	0					
ANR	976670	IdentifierDeclType	RIOMap *		976503	0					
ANR	976671	Identifier	map		976503	1					
ANR	976672	Statement	r_list_foreach	3141:1:92134:92147	976503	13	True				
ANR	976673	Statement	(	3141:16:92149:92149	976503	14	True				
ANR	976674	Statement	list	3141:17:92150:92153	976503	15	True				
ANR	976675	Statement	","	3141:21:92154:92154	976503	16	True				
ANR	976676	Statement	iter	3141:23:92156:92159	976503	17	True				
ANR	976677	Statement	","	3141:27:92160:92160	976503	18	True				
ANR	976678	Statement	map	3141:29:92162:92164	976503	19	True				
ANR	976679	Statement	)	3141:32:92165:92165	976503	20	True				
ANR	976680	CompoundStatement		33:2:693:722	976503	21					
ANR	976681	IdentifierDeclStatement	ut64 f = r_itv_begin ( map -> itv ) ;	3142:2:92171:92202	976503	0	True				
ANR	976682	IdentifierDecl	f = r_itv_begin ( map -> itv )		976503	0					
ANR	976683	IdentifierDeclType	ut64		976503	0					
ANR	976684	Identifier	f		976503	1					
ANR	976685	AssignmentExpression	f = r_itv_begin ( map -> itv )		976503	2		=			
ANR	976686	Identifier	f		976503	0					
ANR	976687	CallExpression	r_itv_begin ( map -> itv )		976503	1					
ANR	976688	Callee	r_itv_begin		976503	0					
ANR	976689	Identifier	r_itv_begin		976503	0					
ANR	976690	ArgumentList	map -> itv		976503	1					
ANR	976691	Argument	map -> itv		976503	0					
ANR	976692	PtrMemberAccess	map -> itv		976503	0					
ANR	976693	Identifier	map		976503	0					
ANR	976694	Identifier	itv		976503	1					
ANR	976695	IdentifierDeclStatement	ut64 t = r_itv_end ( map -> itv ) ;	3143:2:92206:92235	976503	1	True				
ANR	976696	IdentifierDecl	t = r_itv_end ( map -> itv )		976503	0					
ANR	976697	IdentifierDeclType	ut64		976503	0					
ANR	976698	Identifier	t		976503	1					
ANR	976699	AssignmentExpression	t = r_itv_end ( map -> itv )		976503	2		=			
ANR	976700	Identifier	t		976503	0					
ANR	976701	CallExpression	r_itv_end ( map -> itv )		976503	1					
ANR	976702	Callee	r_itv_end		976503	0					
ANR	976703	Identifier	r_itv_end		976503	0					
ANR	976704	ArgumentList	map -> itv		976503	1					
ANR	976705	Argument	map -> itv		976503	0					
ANR	976706	PtrMemberAccess	map -> itv		976503	0					
ANR	976707	Identifier	map		976503	0					
ANR	976708	Identifier	itv		976503	1					
ANR	976709	IfStatement	if ( f < from )		976503	2					
ANR	976710	Condition	f < from	3144:6:92243:92250	976503	0	True				
ANR	976711	RelationalExpression	f < from		976503	0		<			
ANR	976712	Identifier	f		976503	0					
ANR	976713	Identifier	from		976503	1					
ANR	976714	CompoundStatement		34:16:740:740	976503	1					
ANR	976715	ExpressionStatement	from = f	3145:3:92258:92266	976503	0	True				
ANR	976716	AssignmentExpression	from = f		976503	0		=			
ANR	976717	Identifier	from		976503	0					
ANR	976718	Identifier	f		976503	1					
ANR	976719	IfStatement	if ( t > to )		976503	3					
ANR	976720	Condition	t > to	3147:6:92278:92283	976503	0	True				
ANR	976721	RelationalExpression	t > to		976503	0		>			
ANR	976722	Identifier	t		976503	0					
ANR	976723	Identifier	to		976503	1					
ANR	976724	CompoundStatement		37:14:773:773	976503	1					
ANR	976725	ExpressionStatement	to = t	3148:3:92291:92297	976503	0	True				
ANR	976726	AssignmentExpression	to = t		976503	0		=			
ANR	976727	Identifier	to		976503	0					
ANR	976728	Identifier	t		976503	1					
ANR	976729	ExpressionStatement	r_list_free ( list )	3151:1:92307:92325	976503	22	True				
ANR	976730	CallExpression	r_list_free ( list )		976503	0					
ANR	976731	Callee	r_list_free		976503	0					
ANR	976732	Identifier	r_list_free		976503	0					
ANR	976733	ArgumentList	list		976503	1					
ANR	976734	Argument	list		976503	0					
ANR	976735	Identifier	list		976503	0					
ANR	976736	ExpressionStatement	list = NULL	3152:1:92328:92339	976503	23	True				
ANR	976737	AssignmentExpression	list = NULL		976503	0		=			
ANR	976738	Identifier	list		976503	0					
ANR	976739	Identifier	NULL		976503	1					
ANR	976740	IdentifierDeclStatement	"ut64 piece = R_MAX ( ( to - from ) / R_MAX ( cols , w ) , 1 ) ;"	3153:1:92342:92395	976503	24	True				
ANR	976741	IdentifierDecl	"piece = R_MAX ( ( to - from ) / R_MAX ( cols , w ) , 1 )"		976503	0					
ANR	976742	IdentifierDeclType	ut64		976503	0					
ANR	976743	Identifier	piece		976503	1					
ANR	976744	AssignmentExpression	"piece = R_MAX ( ( to - from ) / R_MAX ( cols , w ) , 1 )"		976503	2		=			
ANR	976745	Identifier	piece		976503	0					
ANR	976746	CallExpression	"R_MAX ( ( to - from ) / R_MAX ( cols , w ) , 1 )"		976503	1					
ANR	976747	Callee	R_MAX		976503	0					
ANR	976748	Identifier	R_MAX		976503	0					
ANR	976749	ArgumentList	"( to - from ) / R_MAX ( cols , w )"		976503	1					
ANR	976750	Argument	"( to - from ) / R_MAX ( cols , w )"		976503	0					
ANR	976751	MultiplicativeExpression	"( to - from ) / R_MAX ( cols , w )"		976503	0		/			
ANR	976752	AdditiveExpression	to - from		976503	0		-			
ANR	976753	Identifier	to		976503	0					
ANR	976754	Identifier	from		976503	1					
ANR	976755	CallExpression	"R_MAX ( cols , w )"		976503	1					
ANR	976756	Callee	R_MAX		976503	0					
ANR	976757	Identifier	R_MAX		976503	0					
ANR	976758	ArgumentList	cols		976503	1					
ANR	976759	Argument	cols		976503	0					
ANR	976760	Identifier	cols		976503	0					
ANR	976761	Argument	w		976503	1					
ANR	976762	Identifier	w		976503	0					
ANR	976763	Argument	1		976503	1					
ANR	976764	PrimaryExpression	1		976503	0					
ANR	976765	IdentifierDeclStatement	"RCoreAnalStats * as = r_core_anal_get_stats ( core , from , to , piece ) ;"	3154:1:92398:92464	976503	25	True				
ANR	976766	IdentifierDecl	"* as = r_core_anal_get_stats ( core , from , to , piece )"		976503	0					
ANR	976767	IdentifierDeclType	RCoreAnalStats *		976503	0					
ANR	976768	Identifier	as		976503	1					
ANR	976769	AssignmentExpression	"* as = r_core_anal_get_stats ( core , from , to , piece )"		976503	2		=			
ANR	976770	Identifier	as		976503	0					
ANR	976771	CallExpression	"r_core_anal_get_stats ( core , from , to , piece )"		976503	1					
ANR	976772	Callee	r_core_anal_get_stats		976503	0					
ANR	976773	Identifier	r_core_anal_get_stats		976503	0					
ANR	976774	ArgumentList	core		976503	1					
ANR	976775	Argument	core		976503	0					
ANR	976776	Identifier	core		976503	0					
ANR	976777	Argument	from		976503	1					
ANR	976778	Identifier	from		976503	0					
ANR	976779	Argument	to		976503	2					
ANR	976780	Identifier	to		976503	0					
ANR	976781	Argument	piece		976503	3					
ANR	976782	Identifier	piece		976503	0					
ANR	976783	IfStatement	if ( ! as )		976503	26					
ANR	976784	Condition	! as	3155:5:92471:92473	976503	0	True				
ANR	976785	UnaryOperationExpression	! as		976503	0					
ANR	976786	UnaryOperator	!		976503	0					
ANR	976787	Identifier	as		976503	1					
ANR	976788	CompoundStatement		45:10:963:963	976503	1					
ANR	976789	ReturnStatement	return 0 ;	3156:2:92480:92488	976503	0	True				
ANR	976790	PrimaryExpression	0		976503	0					
ANR	976791	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	3159:1:92495:92513	976503	27	True				
ANR	976792	IdentifierDecl	* pj = pj_new ( )		976503	0					
ANR	976793	IdentifierDeclType	PJ *		976503	0					
ANR	976794	Identifier	pj		976503	1					
ANR	976795	AssignmentExpression	* pj = pj_new ( )		976503	2		=			
ANR	976796	Identifier	pj		976503	0					
ANR	976797	CallExpression	pj_new ( )		976503	1					
ANR	976798	Callee	pj_new		976503	0					
ANR	976799	Identifier	pj_new		976503	0					
ANR	976800	ArgumentList			976503	1					
ANR	976801	IfStatement	if ( ! pj )		976503	28					
ANR	976802	Condition	! pj	3160:5:92520:92522	976503	0	True				
ANR	976803	UnaryOperationExpression	! pj		976503	0					
ANR	976804	UnaryOperator	!		976503	0					
ANR	976805	Identifier	pj		976503	1					
ANR	976806	CompoundStatement		50:10:1012:1012	976503	1					
ANR	976807	ReturnStatement	return 0 ;	3161:2:92529:92537	976503	0	True				
ANR	976808	PrimaryExpression	0		976503	0					
ANR	976809	SwitchStatement	switch ( mode )		976503	29					
ANR	976810	Condition	mode	3163:9:92551:92554	976503	0	True				
ANR	976811	Identifier	mode		976503	0					
ANR	976812	CompoundStatement		53:15:1044:1044	976503	1					
ANR	976813	Label	case 'j' :	3164:1:92560:92568	976503	0	True				
ANR	976814	ExpressionStatement	pj_o ( pj )	3165:2:92581:92590	976503	1	True				
ANR	976815	CallExpression	pj_o ( pj )		976503	0					
ANR	976816	Callee	pj_o		976503	0					
ANR	976817	Identifier	pj_o		976503	0					
ANR	976818	ArgumentList	pj		976503	1					
ANR	976819	Argument	pj		976503	0					
ANR	976820	Identifier	pj		976503	0					
ANR	976821	ExpressionStatement	"pj_kn ( pj , ""from"" , from )"	3166:2:92594:92618	976503	2	True				
ANR	976822	CallExpression	"pj_kn ( pj , ""from"" , from )"		976503	0					
ANR	976823	Callee	pj_kn		976503	0					
ANR	976824	Identifier	pj_kn		976503	0					
ANR	976825	ArgumentList	pj		976503	1					
ANR	976826	Argument	pj		976503	0					
ANR	976827	Identifier	pj		976503	0					
ANR	976828	Argument	"""from"""		976503	1					
ANR	976829	PrimaryExpression	"""from"""		976503	0					
ANR	976830	Argument	from		976503	2					
ANR	976831	Identifier	from		976503	0					
ANR	976832	ExpressionStatement	"pj_kn ( pj , ""to"" , to )"	3167:2:92622:92642	976503	3	True				
ANR	976833	CallExpression	"pj_kn ( pj , ""to"" , to )"		976503	0					
ANR	976834	Callee	pj_kn		976503	0					
ANR	976835	Identifier	pj_kn		976503	0					
ANR	976836	ArgumentList	pj		976503	1					
ANR	976837	Argument	pj		976503	0					
ANR	976838	Identifier	pj		976503	0					
ANR	976839	Argument	"""to"""		976503	1					
ANR	976840	PrimaryExpression	"""to"""		976503	0					
ANR	976841	Argument	to		976503	2					
ANR	976842	Identifier	to		976503	0					
ANR	976843	ExpressionStatement	"pj_ki ( pj , ""blocksize"" , piece )"	3168:2:92646:92676	976503	4	True				
ANR	976844	CallExpression	"pj_ki ( pj , ""blocksize"" , piece )"		976503	0					
ANR	976845	Callee	pj_ki		976503	0					
ANR	976846	Identifier	pj_ki		976503	0					
ANR	976847	ArgumentList	pj		976503	1					
ANR	976848	Argument	pj		976503	0					
ANR	976849	Identifier	pj		976503	0					
ANR	976850	Argument	"""blocksize"""		976503	1					
ANR	976851	PrimaryExpression	"""blocksize"""		976503	0					
ANR	976852	Argument	piece		976503	2					
ANR	976853	Identifier	piece		976503	0					
ANR	976854	ExpressionStatement	"pj_k ( pj , ""blocks"" )"	3169:2:92680:92699	976503	5	True				
ANR	976855	CallExpression	"pj_k ( pj , ""blocks"" )"		976503	0					
ANR	976856	Callee	pj_k		976503	0					
ANR	976857	Identifier	pj_k		976503	0					
ANR	976858	ArgumentList	pj		976503	1					
ANR	976859	Argument	pj		976503	0					
ANR	976860	Identifier	pj		976503	0					
ANR	976861	Argument	"""blocks"""		976503	1					
ANR	976862	PrimaryExpression	"""blocks"""		976503	0					
ANR	976863	ExpressionStatement	pj_a ( pj )	3170:2:92703:92712	976503	6	True				
ANR	976864	CallExpression	pj_a ( pj )		976503	0					
ANR	976865	Callee	pj_a		976503	0					
ANR	976866	Identifier	pj_a		976503	0					
ANR	976867	ArgumentList	pj		976503	1					
ANR	976868	Argument	pj		976503	0					
ANR	976869	Identifier	pj		976503	0					
ANR	976870	BreakStatement	break ;	3171:2:92716:92721	976503	7	True				
ANR	976871	Label	case 'h' :	3172:1:92724:92732	976503	8	True				
ANR	976872	ExpressionStatement	"r_cons_printf ( "".-------------.----------------------------.\\n"" )"	3173:2:92745:92809	976503	9	True				
ANR	976873	CallExpression	"r_cons_printf ( "".-------------.----------------------------.\\n"" )"		976503	0					
ANR	976874	Callee	r_cons_printf		976503	0					
ANR	976875	Identifier	r_cons_printf		976503	0					
ANR	976876	ArgumentList	""".-------------.----------------------------.\\n"""		976503	1					
ANR	976877	Argument	""".-------------.----------------------------.\\n"""		976503	0					
ANR	976878	PrimaryExpression	""".-------------.----------------------------.\\n"""		976503	0					
ANR	976879	ExpressionStatement	"r_cons_printf ( ""|   offset    | flags funcs cmts syms str  |\\n"" )"	3174:2:92813:92877	976503	10	True				
ANR	976880	CallExpression	"r_cons_printf ( ""|   offset    | flags funcs cmts syms str  |\\n"" )"		976503	0					
ANR	976881	Callee	r_cons_printf		976503	0					
ANR	976882	Identifier	r_cons_printf		976503	0					
ANR	976883	ArgumentList	"""|   offset    | flags funcs cmts syms str  |\\n"""		976503	1					
ANR	976884	Argument	"""|   offset    | flags funcs cmts syms str  |\\n"""		976503	0					
ANR	976885	PrimaryExpression	"""|   offset    | flags funcs cmts syms str  |\\n"""		976503	0					
ANR	976886	ExpressionStatement	"r_cons_printf ( ""|-------------)----------------------------|\\n"" )"	3175:2:92881:92945	976503	11	True				
ANR	976887	CallExpression	"r_cons_printf ( ""|-------------)----------------------------|\\n"" )"		976503	0					
ANR	976888	Callee	r_cons_printf		976503	0					
ANR	976889	Identifier	r_cons_printf		976503	0					
ANR	976890	ArgumentList	"""|-------------)----------------------------|\\n"""		976503	1					
ANR	976891	Argument	"""|-------------)----------------------------|\\n"""		976503	0					
ANR	976892	PrimaryExpression	"""|-------------)----------------------------|\\n"""		976503	0					
ANR	976893	BreakStatement	break ;	3176:2:92949:92954	976503	12	True				
ANR	976894	Label	case 'e' :	3177:1:92957:92965	976503	13	True				
ANR	976895	Label	default :	3178:1:92968:92975	976503	14	True				
ANR	976896	Identifier	default		976503	0					
ANR	976897	Statement	r_cons_printf	3179:2:92979:92991	976503	15	True				
ANR	976898	Statement	(	3179:16:92993:92993	976503	16	True				
ANR	976899	Statement	"""0x%08"""	3179:17:92994:93000	976503	17	True				
ANR	976900	Statement	PFMT64x	3179:24:93001:93007	976503	18	True				
ANR	976901	Statement	""" ["""	3179:32:93009:93012	976503	19	True				
ANR	976902	Statement	","	3179:36:93013:93013	976503	20	True				
ANR	976903	Statement	from	3179:38:93015:93018	976503	21	True				
ANR	976904	Statement	)	3179:42:93019:93019	976503	22	True				
ANR	976905	ExpressionStatement		3179:43:93020:93020	976503	23	True				
ANR	976906	IdentifierDeclStatement	"bool use_color = r_config_get_i ( core -> config , ""scr.color"" ) ;"	3182:1:93027:93086	976503	30	True				
ANR	976907	IdentifierDecl	"use_color = r_config_get_i ( core -> config , ""scr.color"" )"		976503	0					
ANR	976908	IdentifierDeclType	bool		976503	0					
ANR	976909	Identifier	use_color		976503	1					
ANR	976910	AssignmentExpression	"use_color = r_config_get_i ( core -> config , ""scr.color"" )"		976503	2		=			
ANR	976911	Identifier	use_color		976503	0					
ANR	976912	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		976503	1					
ANR	976913	Callee	r_config_get_i		976503	0					
ANR	976914	Identifier	r_config_get_i		976503	0					
ANR	976915	ArgumentList	core -> config		976503	1					
ANR	976916	Argument	core -> config		976503	0					
ANR	976917	PtrMemberAccess	core -> config		976503	0					
ANR	976918	Identifier	core		976503	0					
ANR	976919	Identifier	config		976503	1					
ANR	976920	Argument	"""scr.color"""		976503	1					
ANR	976921	PrimaryExpression	"""scr.color"""		976503	0					
ANR	976922	IdentifierDeclStatement	int len = 0 ;	3183:1:93089:93100	976503	31	True				
ANR	976923	IdentifierDecl	len = 0		976503	0					
ANR	976924	IdentifierDeclType	int		976503	0					
ANR	976925	Identifier	len		976503	1					
ANR	976926	AssignmentExpression	len = 0		976503	2		=			
ANR	976927	Identifier	len		976503	0					
ANR	976928	PrimaryExpression	0		976503	1					
ANR	976929	IdentifierDeclStatement	int i ;	3184:1:93103:93108	976503	32	True				
ANR	976930	IdentifierDecl	i		976503	0					
ANR	976931	IdentifierDeclType	int		976503	0					
ANR	976932	Identifier	i		976503	1					
ANR	976933	IdentifierDeclStatement	RCoreAnalStatsItem total = { 0 } ;	3185:1:93111:93141	976503	33	True				
ANR	976934	IdentifierDecl	total = { 0 }		976503	0					
ANR	976935	IdentifierDeclType	RCoreAnalStatsItem		976503	0					
ANR	976936	Identifier	total		976503	1					
ANR	976937	AssignmentExpression	total = { 0 }		976503	2		=			
ANR	976938	Identifier	total		976503	0					
ANR	976939	InitializerList	0		976503	1					
ANR	976940	PrimaryExpression	0		976503	0					
ANR	976941	ForStatement	for ( i = 0 ; i < ( ( to - from ) / piece ) ; i ++ )		976503	34					
ANR	976942	ForInit	i = 0 ;	3186:6:93149:93154	976503	0	True				
ANR	976943	AssignmentExpression	i = 0		976503	0		=			
ANR	976944	Identifier	i		976503	0					
ANR	976945	PrimaryExpression	0		976503	1					
ANR	976946	Condition	i < ( ( to - from ) / piece )	3186:13:93156:93180	976503	1	True				
ANR	976947	RelationalExpression	i < ( ( to - from ) / piece )		976503	0		<			
ANR	976948	Identifier	i		976503	0					
ANR	976949	MultiplicativeExpression	( to - from ) / piece		976503	1		/			
ANR	976950	AdditiveExpression	to - from		976503	0		-			
ANR	976951	Identifier	to		976503	0					
ANR	976952	Identifier	from		976503	1					
ANR	976953	Identifier	piece		976503	1					
ANR	976954	PostIncDecOperationExpression	i ++	3186:40:93183:93185	976503	2	True				
ANR	976955	Identifier	i		976503	0					
ANR	976956	IncDec	++		976503	1					
ANR	976957	CompoundStatement		79:2:1736:1764	976503	3					
ANR	976958	IdentifierDeclStatement	ut64 at = from + ( piece * i ) ;	3187:2:93192:93220	976503	0	True				
ANR	976959	IdentifierDecl	at = from + ( piece * i )		976503	0					
ANR	976960	IdentifierDeclType	ut64		976503	0					
ANR	976961	Identifier	at		976503	1					
ANR	976962	AssignmentExpression	at = from + ( piece * i )		976503	2		=			
ANR	976963	Identifier	at		976503	0					
ANR	976964	AdditiveExpression	from + ( piece * i )		976503	1		+			
ANR	976965	Identifier	from		976503	0					
ANR	976966	MultiplicativeExpression	piece * i		976503	1		*			
ANR	976967	Identifier	piece		976503	0					
ANR	976968	Identifier	i		976503	1					
ANR	976969	IdentifierDeclStatement	ut64 ate = at + piece ;	3188:2:93224:93245	976503	1	True				
ANR	976970	IdentifierDecl	ate = at + piece		976503	0					
ANR	976971	IdentifierDeclType	ut64		976503	0					
ANR	976972	Identifier	ate		976503	1					
ANR	976973	AssignmentExpression	ate = at + piece		976503	2		=			
ANR	976974	Identifier	ate		976503	0					
ANR	976975	AdditiveExpression	at + piece		976503	1		+			
ANR	976976	Identifier	at		976503	0					
ANR	976977	Identifier	piece		976503	1					
ANR	976978	IdentifierDeclStatement	ut64 p = ( at - from ) / piece ;	3189:2:93249:93277	976503	2	True				
ANR	976979	IdentifierDecl	p = ( at - from ) / piece		976503	0					
ANR	976980	IdentifierDeclType	ut64		976503	0					
ANR	976981	Identifier	p		976503	1					
ANR	976982	AssignmentExpression	p = ( at - from ) / piece		976503	2		=			
ANR	976983	Identifier	p		976503	0					
ANR	976984	MultiplicativeExpression	( at - from ) / piece		976503	1		/			
ANR	976985	AdditiveExpression	at - from		976503	0		-			
ANR	976986	Identifier	at		976503	0					
ANR	976987	Identifier	from		976503	1					
ANR	976988	Identifier	piece		976503	1					
ANR	976989	SwitchStatement	switch ( mode )		976503	3					
ANR	976990	Condition	mode	3190:10:93289:93292	976503	0	True				
ANR	976991	Identifier	mode		976503	0					
ANR	976992	CompoundStatement		80:16:1782:1782	976503	1					
ANR	976993	Label	case 'j' :	3191:2:93299:93307	976503	0	True				
ANR	976994	ExpressionStatement	pj_o ( pj )	3192:3:93312:93321	976503	1	True				
ANR	976995	CallExpression	pj_o ( pj )		976503	0					
ANR	976996	Callee	pj_o		976503	0					
ANR	976997	Identifier	pj_o		976503	0					
ANR	976998	ArgumentList	pj		976503	1					
ANR	976999	Argument	pj		976503	0					
ANR	977000	Identifier	pj		976503	0					
ANR	977001	IfStatement	if ( ( as -> block [ p ] . flags ) || ( as -> block [ p ] . functions ) || ( as -> block [ p ] . comments ) || ( as -> block [ p ] . symbols ) || ( as -> block [ p ] . perm ) || ( as -> block [ p ] . strings ) )		976503	2					
ANR	977002	Condition	( as -> block [ p ] . flags ) || ( as -> block [ p ] . functions ) || ( as -> block [ p ] . comments ) || ( as -> block [ p ] . symbols ) || ( as -> block [ p ] . perm ) || ( as -> block [ p ] . strings )	3193:7:93330:93499	976503	0	True				
ANR	977003	OrExpression	( as -> block [ p ] . flags ) || ( as -> block [ p ] . functions ) || ( as -> block [ p ] . comments ) || ( as -> block [ p ] . symbols ) || ( as -> block [ p ] . perm ) || ( as -> block [ p ] . strings )		976503	0		||			
ANR	977004	MemberAccess	as -> block [ p ] . flags		976503	0					
ANR	977005	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977006	PtrMemberAccess	as -> block		976503	0					
ANR	977007	Identifier	as		976503	0					
ANR	977008	Identifier	block		976503	1					
ANR	977009	Identifier	p		976503	1					
ANR	977010	Identifier	flags		976503	1					
ANR	977011	OrExpression	( as -> block [ p ] . functions ) || ( as -> block [ p ] . comments ) || ( as -> block [ p ] . symbols ) || ( as -> block [ p ] . perm ) || ( as -> block [ p ] . strings )		976503	1		||			
ANR	977012	MemberAccess	as -> block [ p ] . functions		976503	0					
ANR	977013	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977014	PtrMemberAccess	as -> block		976503	0					
ANR	977015	Identifier	as		976503	0					
ANR	977016	Identifier	block		976503	1					
ANR	977017	Identifier	p		976503	1					
ANR	977018	Identifier	functions		976503	1					
ANR	977019	OrExpression	( as -> block [ p ] . comments ) || ( as -> block [ p ] . symbols ) || ( as -> block [ p ] . perm ) || ( as -> block [ p ] . strings )		976503	1		||			
ANR	977020	MemberAccess	as -> block [ p ] . comments		976503	0					
ANR	977021	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977022	PtrMemberAccess	as -> block		976503	0					
ANR	977023	Identifier	as		976503	0					
ANR	977024	Identifier	block		976503	1					
ANR	977025	Identifier	p		976503	1					
ANR	977026	Identifier	comments		976503	1					
ANR	977027	OrExpression	( as -> block [ p ] . symbols ) || ( as -> block [ p ] . perm ) || ( as -> block [ p ] . strings )		976503	1		||			
ANR	977028	MemberAccess	as -> block [ p ] . symbols		976503	0					
ANR	977029	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977030	PtrMemberAccess	as -> block		976503	0					
ANR	977031	Identifier	as		976503	0					
ANR	977032	Identifier	block		976503	1					
ANR	977033	Identifier	p		976503	1					
ANR	977034	Identifier	symbols		976503	1					
ANR	977035	OrExpression	( as -> block [ p ] . perm ) || ( as -> block [ p ] . strings )		976503	1		||			
ANR	977036	MemberAccess	as -> block [ p ] . perm		976503	0					
ANR	977037	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977038	PtrMemberAccess	as -> block		976503	0					
ANR	977039	Identifier	as		976503	0					
ANR	977040	Identifier	block		976503	1					
ANR	977041	Identifier	p		976503	1					
ANR	977042	Identifier	perm		976503	1					
ANR	977043	MemberAccess	as -> block [ p ] . strings		976503	1					
ANR	977044	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977045	PtrMemberAccess	as -> block		976503	0					
ANR	977046	Identifier	as		976503	0					
ANR	977047	Identifier	block		976503	1					
ANR	977048	Identifier	p		976503	1					
ANR	977049	Identifier	strings		976503	1					
ANR	977050	CompoundStatement		88:31:1989:1989	976503	1					
ANR	977051	ExpressionStatement	"pj_kn ( pj , ""offset"" , at )"	3199:4:93508:93532	976503	0	True				
ANR	977052	CallExpression	"pj_kn ( pj , ""offset"" , at )"		976503	0					
ANR	977053	Callee	pj_kn		976503	0					
ANR	977054	Identifier	pj_kn		976503	0					
ANR	977055	ArgumentList	pj		976503	1					
ANR	977056	Argument	pj		976503	0					
ANR	977057	Identifier	pj		976503	0					
ANR	977058	Argument	"""offset"""		976503	1					
ANR	977059	PrimaryExpression	"""offset"""		976503	0					
ANR	977060	Argument	at		976503	2					
ANR	977061	Identifier	at		976503	0					
ANR	977062	ExpressionStatement	"pj_kn ( pj , ""size"" , piece )"	3200:4:93538:93563	976503	1	True				
ANR	977063	CallExpression	"pj_kn ( pj , ""size"" , piece )"		976503	0					
ANR	977064	Callee	pj_kn		976503	0					
ANR	977065	Identifier	pj_kn		976503	0					
ANR	977066	ArgumentList	pj		976503	1					
ANR	977067	Argument	pj		976503	0					
ANR	977068	Identifier	pj		976503	0					
ANR	977069	Argument	"""size"""		976503	1					
ANR	977070	PrimaryExpression	"""size"""		976503	0					
ANR	977071	Argument	piece		976503	2					
ANR	977072	Identifier	piece		976503	0					
ANR	977073	IfStatement	if ( as -> block [ p ] . flags )		976503	3					
ANR	977074	Condition	as -> block [ p ] . flags	3202:7:93577:93594	976503	0	True				
ANR	977075	MemberAccess	as -> block [ p ] . flags		976503	0					
ANR	977076	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977077	PtrMemberAccess	as -> block		976503	0					
ANR	977078	Identifier	as		976503	0					
ANR	977079	Identifier	block		976503	1					
ANR	977080	Identifier	p		976503	1					
ANR	977081	Identifier	flags		976503	1					
ANR	977082	CompoundStatement		92:27:2084:2084	976503	1					
ANR	977083	ExpressionStatement	"pj_ki ( pj , ""flags"" , as -> block [ p ] . flags )"	3203:4:93603:93642	976503	0	True				
ANR	977084	CallExpression	"pj_ki ( pj , ""flags"" , as -> block [ p ] . flags )"		976503	0					
ANR	977085	Callee	pj_ki		976503	0					
ANR	977086	Identifier	pj_ki		976503	0					
ANR	977087	ArgumentList	pj		976503	1					
ANR	977088	Argument	pj		976503	0					
ANR	977089	Identifier	pj		976503	0					
ANR	977090	Argument	"""flags"""		976503	1					
ANR	977091	PrimaryExpression	"""flags"""		976503	0					
ANR	977092	Argument	as -> block [ p ] . flags		976503	2					
ANR	977093	MemberAccess	as -> block [ p ] . flags		976503	0					
ANR	977094	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977095	PtrMemberAccess	as -> block		976503	0					
ANR	977096	Identifier	as		976503	0					
ANR	977097	Identifier	block		976503	1					
ANR	977098	Identifier	p		976503	1					
ANR	977099	Identifier	flags		976503	1					
ANR	977100	IfStatement	if ( as -> block [ p ] . functions )		976503	4					
ANR	977101	Condition	as -> block [ p ] . functions	3205:7:93656:93677	976503	0	True				
ANR	977102	MemberAccess	as -> block [ p ] . functions		976503	0					
ANR	977103	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977104	PtrMemberAccess	as -> block		976503	0					
ANR	977105	Identifier	as		976503	0					
ANR	977106	Identifier	block		976503	1					
ANR	977107	Identifier	p		976503	1					
ANR	977108	Identifier	functions		976503	1					
ANR	977109	CompoundStatement		95:31:2167:2167	976503	1					
ANR	977110	ExpressionStatement	"pj_ki ( pj , ""functions"" , as -> block [ p ] . functions )"	3206:4:93686:93733	976503	0	True				
ANR	977111	CallExpression	"pj_ki ( pj , ""functions"" , as -> block [ p ] . functions )"		976503	0					
ANR	977112	Callee	pj_ki		976503	0					
ANR	977113	Identifier	pj_ki		976503	0					
ANR	977114	ArgumentList	pj		976503	1					
ANR	977115	Argument	pj		976503	0					
ANR	977116	Identifier	pj		976503	0					
ANR	977117	Argument	"""functions"""		976503	1					
ANR	977118	PrimaryExpression	"""functions"""		976503	0					
ANR	977119	Argument	as -> block [ p ] . functions		976503	2					
ANR	977120	MemberAccess	as -> block [ p ] . functions		976503	0					
ANR	977121	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977122	PtrMemberAccess	as -> block		976503	0					
ANR	977123	Identifier	as		976503	0					
ANR	977124	Identifier	block		976503	1					
ANR	977125	Identifier	p		976503	1					
ANR	977126	Identifier	functions		976503	1					
ANR	977127	IfStatement	if ( as -> block [ p ] . in_functions )		976503	5					
ANR	977128	Condition	as -> block [ p ] . in_functions	3208:7:93747:93771	976503	0	True				
ANR	977129	MemberAccess	as -> block [ p ] . in_functions		976503	0					
ANR	977130	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977131	PtrMemberAccess	as -> block		976503	0					
ANR	977132	Identifier	as		976503	0					
ANR	977133	Identifier	block		976503	1					
ANR	977134	Identifier	p		976503	1					
ANR	977135	Identifier	in_functions		976503	1					
ANR	977136	CompoundStatement		98:34:2261:2261	976503	1					
ANR	977137	ExpressionStatement	"pj_ki ( pj , ""in_functions"" , as -> block [ p ] . in_functions )"	3209:4:93780:93833	976503	0	True				
ANR	977138	CallExpression	"pj_ki ( pj , ""in_functions"" , as -> block [ p ] . in_functions )"		976503	0					
ANR	977139	Callee	pj_ki		976503	0					
ANR	977140	Identifier	pj_ki		976503	0					
ANR	977141	ArgumentList	pj		976503	1					
ANR	977142	Argument	pj		976503	0					
ANR	977143	Identifier	pj		976503	0					
ANR	977144	Argument	"""in_functions"""		976503	1					
ANR	977145	PrimaryExpression	"""in_functions"""		976503	0					
ANR	977146	Argument	as -> block [ p ] . in_functions		976503	2					
ANR	977147	MemberAccess	as -> block [ p ] . in_functions		976503	0					
ANR	977148	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977149	PtrMemberAccess	as -> block		976503	0					
ANR	977150	Identifier	as		976503	0					
ANR	977151	Identifier	block		976503	1					
ANR	977152	Identifier	p		976503	1					
ANR	977153	Identifier	in_functions		976503	1					
ANR	977154	IfStatement	if ( as -> block [ p ] . comments )		976503	6					
ANR	977155	Condition	as -> block [ p ] . comments	3211:7:93847:93867	976503	0	True				
ANR	977156	MemberAccess	as -> block [ p ] . comments		976503	0					
ANR	977157	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977158	PtrMemberAccess	as -> block		976503	0					
ANR	977159	Identifier	as		976503	0					
ANR	977160	Identifier	block		976503	1					
ANR	977161	Identifier	p		976503	1					
ANR	977162	Identifier	comments		976503	1					
ANR	977163	CompoundStatement		101:30:2357:2357	976503	1					
ANR	977164	ExpressionStatement	"pj_ki ( pj , ""comments"" , as -> block [ p ] . comments )"	3212:4:93876:93921	976503	0	True				
ANR	977165	CallExpression	"pj_ki ( pj , ""comments"" , as -> block [ p ] . comments )"		976503	0					
ANR	977166	Callee	pj_ki		976503	0					
ANR	977167	Identifier	pj_ki		976503	0					
ANR	977168	ArgumentList	pj		976503	1					
ANR	977169	Argument	pj		976503	0					
ANR	977170	Identifier	pj		976503	0					
ANR	977171	Argument	"""comments"""		976503	1					
ANR	977172	PrimaryExpression	"""comments"""		976503	0					
ANR	977173	Argument	as -> block [ p ] . comments		976503	2					
ANR	977174	MemberAccess	as -> block [ p ] . comments		976503	0					
ANR	977175	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977176	PtrMemberAccess	as -> block		976503	0					
ANR	977177	Identifier	as		976503	0					
ANR	977178	Identifier	block		976503	1					
ANR	977179	Identifier	p		976503	1					
ANR	977180	Identifier	comments		976503	1					
ANR	977181	IfStatement	if ( as -> block [ p ] . symbols )		976503	7					
ANR	977182	Condition	as -> block [ p ] . symbols	3214:7:93935:93954	976503	0	True				
ANR	977183	MemberAccess	as -> block [ p ] . symbols		976503	0					
ANR	977184	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977185	PtrMemberAccess	as -> block		976503	0					
ANR	977186	Identifier	as		976503	0					
ANR	977187	Identifier	block		976503	1					
ANR	977188	Identifier	p		976503	1					
ANR	977189	Identifier	symbols		976503	1					
ANR	977190	CompoundStatement		104:29:2444:2444	976503	1					
ANR	977191	ExpressionStatement	"pj_ki ( pj , ""symbols"" , as -> block [ p ] . symbols )"	3215:4:93963:94006	976503	0	True				
ANR	977192	CallExpression	"pj_ki ( pj , ""symbols"" , as -> block [ p ] . symbols )"		976503	0					
ANR	977193	Callee	pj_ki		976503	0					
ANR	977194	Identifier	pj_ki		976503	0					
ANR	977195	ArgumentList	pj		976503	1					
ANR	977196	Argument	pj		976503	0					
ANR	977197	Identifier	pj		976503	0					
ANR	977198	Argument	"""symbols"""		976503	1					
ANR	977199	PrimaryExpression	"""symbols"""		976503	0					
ANR	977200	Argument	as -> block [ p ] . symbols		976503	2					
ANR	977201	MemberAccess	as -> block [ p ] . symbols		976503	0					
ANR	977202	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977203	PtrMemberAccess	as -> block		976503	0					
ANR	977204	Identifier	as		976503	0					
ANR	977205	Identifier	block		976503	1					
ANR	977206	Identifier	p		976503	1					
ANR	977207	Identifier	symbols		976503	1					
ANR	977208	IfStatement	if ( as -> block [ p ] . strings )		976503	8					
ANR	977209	Condition	as -> block [ p ] . strings	3217:7:94020:94039	976503	0	True				
ANR	977210	MemberAccess	as -> block [ p ] . strings		976503	0					
ANR	977211	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977212	PtrMemberAccess	as -> block		976503	0					
ANR	977213	Identifier	as		976503	0					
ANR	977214	Identifier	block		976503	1					
ANR	977215	Identifier	p		976503	1					
ANR	977216	Identifier	strings		976503	1					
ANR	977217	CompoundStatement		107:29:2529:2529	976503	1					
ANR	977218	ExpressionStatement	"pj_ki ( pj , ""strings"" , as -> block [ p ] . strings )"	3218:4:94048:94091	976503	0	True				
ANR	977219	CallExpression	"pj_ki ( pj , ""strings"" , as -> block [ p ] . strings )"		976503	0					
ANR	977220	Callee	pj_ki		976503	0					
ANR	977221	Identifier	pj_ki		976503	0					
ANR	977222	ArgumentList	pj		976503	1					
ANR	977223	Argument	pj		976503	0					
ANR	977224	Identifier	pj		976503	0					
ANR	977225	Argument	"""strings"""		976503	1					
ANR	977226	PrimaryExpression	"""strings"""		976503	0					
ANR	977227	Argument	as -> block [ p ] . strings		976503	2					
ANR	977228	MemberAccess	as -> block [ p ] . strings		976503	0					
ANR	977229	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977230	PtrMemberAccess	as -> block		976503	0					
ANR	977231	Identifier	as		976503	0					
ANR	977232	Identifier	block		976503	1					
ANR	977233	Identifier	p		976503	1					
ANR	977234	Identifier	strings		976503	1					
ANR	977235	IfStatement	if ( as -> block [ p ] . perm )		976503	9					
ANR	977236	Condition	as -> block [ p ] . perm	3220:7:94105:94121	976503	0	True				
ANR	977237	MemberAccess	as -> block [ p ] . perm		976503	0					
ANR	977238	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977239	PtrMemberAccess	as -> block		976503	0					
ANR	977240	Identifier	as		976503	0					
ANR	977241	Identifier	block		976503	1					
ANR	977242	Identifier	p		976503	1					
ANR	977243	Identifier	perm		976503	1					
ANR	977244	CompoundStatement		110:26:2611:2611	976503	1					
ANR	977245	ExpressionStatement	"pj_ks ( pj , ""perm"" , r_str_rwx_i ( as -> block [ p ] . perm ) )"	3221:4:94130:94181	976503	0	True				
ANR	977246	CallExpression	"pj_ks ( pj , ""perm"" , r_str_rwx_i ( as -> block [ p ] . perm ) )"		976503	0					
ANR	977247	Callee	pj_ks		976503	0					
ANR	977248	Identifier	pj_ks		976503	0					
ANR	977249	ArgumentList	pj		976503	1					
ANR	977250	Argument	pj		976503	0					
ANR	977251	Identifier	pj		976503	0					
ANR	977252	Argument	"""perm"""		976503	1					
ANR	977253	PrimaryExpression	"""perm"""		976503	0					
ANR	977254	Argument	r_str_rwx_i ( as -> block [ p ] . perm )		976503	2					
ANR	977255	CallExpression	r_str_rwx_i ( as -> block [ p ] . perm )		976503	0					
ANR	977256	Callee	r_str_rwx_i		976503	0					
ANR	977257	Identifier	r_str_rwx_i		976503	0					
ANR	977258	ArgumentList	as -> block [ p ] . perm		976503	1					
ANR	977259	Argument	as -> block [ p ] . perm		976503	0					
ANR	977260	MemberAccess	as -> block [ p ] . perm		976503	0					
ANR	977261	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977262	PtrMemberAccess	as -> block		976503	0					
ANR	977263	Identifier	as		976503	0					
ANR	977264	Identifier	block		976503	1					
ANR	977265	Identifier	p		976503	1					
ANR	977266	Identifier	perm		976503	1					
ANR	977267	ExpressionStatement	pj_end ( pj )	3223:3:94191:94202	976503	10	True				
ANR	977268	CallExpression	pj_end ( pj )		976503	0					
ANR	977269	Callee	pj_end		976503	0					
ANR	977270	Identifier	pj_end		976503	0					
ANR	977271	ArgumentList	pj		976503	1					
ANR	977272	Argument	pj		976503	0					
ANR	977273	Identifier	pj		976503	0					
ANR	977274	ExpressionStatement	len ++	3224:3:94207:94212	976503	11	True				
ANR	977275	PostIncDecOperationExpression	len ++		976503	0					
ANR	977276	Identifier	len		976503	0					
ANR	977277	IncDec	++		976503	1					
ANR	977278	BreakStatement	break ;	3225:3:94217:94222	976503	12	True				
ANR	977279	Label	case 'h' :	3226:2:94226:94234	976503	13	True				
ANR	977280	ExpressionStatement	total . flags += as -> block [ p ] . flags	3227:3:94239:94272	976503	14	True				
ANR	977281	AssignmentExpression	total . flags += as -> block [ p ] . flags		976503	0		+=			
ANR	977282	MemberAccess	total . flags		976503	0					
ANR	977283	Identifier	total		976503	0					
ANR	977284	Identifier	flags		976503	1					
ANR	977285	MemberAccess	as -> block [ p ] . flags		976503	1					
ANR	977286	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977287	PtrMemberAccess	as -> block		976503	0					
ANR	977288	Identifier	as		976503	0					
ANR	977289	Identifier	block		976503	1					
ANR	977290	Identifier	p		976503	1					
ANR	977291	Identifier	flags		976503	1					
ANR	977292	ExpressionStatement	total . functions += as -> block [ p ] . functions	3228:3:94277:94318	976503	15	True				
ANR	977293	AssignmentExpression	total . functions += as -> block [ p ] . functions		976503	0		+=			
ANR	977294	MemberAccess	total . functions		976503	0					
ANR	977295	Identifier	total		976503	0					
ANR	977296	Identifier	functions		976503	1					
ANR	977297	MemberAccess	as -> block [ p ] . functions		976503	1					
ANR	977298	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977299	PtrMemberAccess	as -> block		976503	0					
ANR	977300	Identifier	as		976503	0					
ANR	977301	Identifier	block		976503	1					
ANR	977302	Identifier	p		976503	1					
ANR	977303	Identifier	functions		976503	1					
ANR	977304	ExpressionStatement	total . comments += as -> block [ p ] . comments	3229:3:94323:94362	976503	16	True				
ANR	977305	AssignmentExpression	total . comments += as -> block [ p ] . comments		976503	0		+=			
ANR	977306	MemberAccess	total . comments		976503	0					
ANR	977307	Identifier	total		976503	0					
ANR	977308	Identifier	comments		976503	1					
ANR	977309	MemberAccess	as -> block [ p ] . comments		976503	1					
ANR	977310	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977311	PtrMemberAccess	as -> block		976503	0					
ANR	977312	Identifier	as		976503	0					
ANR	977313	Identifier	block		976503	1					
ANR	977314	Identifier	p		976503	1					
ANR	977315	Identifier	comments		976503	1					
ANR	977316	ExpressionStatement	total . symbols += as -> block [ p ] . symbols	3230:3:94367:94404	976503	17	True				
ANR	977317	AssignmentExpression	total . symbols += as -> block [ p ] . symbols		976503	0		+=			
ANR	977318	MemberAccess	total . symbols		976503	0					
ANR	977319	Identifier	total		976503	0					
ANR	977320	Identifier	symbols		976503	1					
ANR	977321	MemberAccess	as -> block [ p ] . symbols		976503	1					
ANR	977322	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977323	PtrMemberAccess	as -> block		976503	0					
ANR	977324	Identifier	as		976503	0					
ANR	977325	Identifier	block		976503	1					
ANR	977326	Identifier	p		976503	1					
ANR	977327	Identifier	symbols		976503	1					
ANR	977328	ExpressionStatement	total . strings += as -> block [ p ] . strings	3231:3:94409:94446	976503	18	True				
ANR	977329	AssignmentExpression	total . strings += as -> block [ p ] . strings		976503	0		+=			
ANR	977330	MemberAccess	total . strings		976503	0					
ANR	977331	Identifier	total		976503	0					
ANR	977332	Identifier	strings		976503	1					
ANR	977333	MemberAccess	as -> block [ p ] . strings		976503	1					
ANR	977334	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977335	PtrMemberAccess	as -> block		976503	0					
ANR	977336	Identifier	as		976503	0					
ANR	977337	Identifier	block		976503	1					
ANR	977338	Identifier	p		976503	1					
ANR	977339	Identifier	strings		976503	1					
ANR	977340	IfStatement	if ( ( as -> block [ p ] . flags ) || ( as -> block [ p ] . functions ) || ( as -> block [ p ] . comments ) || ( as -> block [ p ] . symbols ) || ( as -> block [ p ] . strings ) )		976503	19					
ANR	977341	Condition	( as -> block [ p ] . flags ) || ( as -> block [ p ] . functions ) || ( as -> block [ p ] . comments ) || ( as -> block [ p ] . symbols ) || ( as -> block [ p ] . strings )	3232:7:94455:94597	976503	0	True				
ANR	977342	OrExpression	( as -> block [ p ] . flags ) || ( as -> block [ p ] . functions ) || ( as -> block [ p ] . comments ) || ( as -> block [ p ] . symbols ) || ( as -> block [ p ] . strings )		976503	0		||			
ANR	977343	MemberAccess	as -> block [ p ] . flags		976503	0					
ANR	977344	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977345	PtrMemberAccess	as -> block		976503	0					
ANR	977346	Identifier	as		976503	0					
ANR	977347	Identifier	block		976503	1					
ANR	977348	Identifier	p		976503	1					
ANR	977349	Identifier	flags		976503	1					
ANR	977350	OrExpression	( as -> block [ p ] . functions ) || ( as -> block [ p ] . comments ) || ( as -> block [ p ] . symbols ) || ( as -> block [ p ] . strings )		976503	1		||			
ANR	977351	MemberAccess	as -> block [ p ] . functions		976503	0					
ANR	977352	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977353	PtrMemberAccess	as -> block		976503	0					
ANR	977354	Identifier	as		976503	0					
ANR	977355	Identifier	block		976503	1					
ANR	977356	Identifier	p		976503	1					
ANR	977357	Identifier	functions		976503	1					
ANR	977358	OrExpression	( as -> block [ p ] . comments ) || ( as -> block [ p ] . symbols ) || ( as -> block [ p ] . strings )		976503	1		||			
ANR	977359	MemberAccess	as -> block [ p ] . comments		976503	0					
ANR	977360	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977361	PtrMemberAccess	as -> block		976503	0					
ANR	977362	Identifier	as		976503	0					
ANR	977363	Identifier	block		976503	1					
ANR	977364	Identifier	p		976503	1					
ANR	977365	Identifier	comments		976503	1					
ANR	977366	OrExpression	( as -> block [ p ] . symbols ) || ( as -> block [ p ] . strings )		976503	1		||			
ANR	977367	MemberAccess	as -> block [ p ] . symbols		976503	0					
ANR	977368	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977369	PtrMemberAccess	as -> block		976503	0					
ANR	977370	Identifier	as		976503	0					
ANR	977371	Identifier	block		976503	1					
ANR	977372	Identifier	p		976503	1					
ANR	977373	Identifier	symbols		976503	1					
ANR	977374	MemberAccess	as -> block [ p ] . strings		976503	1					
ANR	977375	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977376	PtrMemberAccess	as -> block		976503	0					
ANR	977377	Identifier	as		976503	0					
ANR	977378	Identifier	block		976503	1					
ANR	977379	Identifier	p		976503	1					
ANR	977380	Identifier	strings		976503	1					
ANR	977381	CompoundStatement		126:31:3087:3087	976503	1					
ANR	977382	Statement	r_cons_printf	3237:4:94606:94618	976503	0	True				
ANR	977383	Statement	(	3237:18:94620:94620	976503	1	True				
ANR	977384	Statement	"""| 0x%09"""	3237:19:94621:94629	976503	2	True				
ANR	977385	Statement	PFMT64x	3237:28:94630:94636	976503	3	True				
ANR	977386	Statement	""" | %4d %4d %4d %4d %4d   |\\n"""	3237:36:94638:94667	976503	4	True				
ANR	977387	Statement	","	3237:66:94668:94668	976503	5	True				
ANR	977388	Statement	at	3237:68:94670:94671	976503	6	True				
ANR	977389	Statement	","	3237:70:94672:94672	976503	7	True				
ANR	977390	Statement	as	3238:6:94680:94681	976503	8	True				
ANR	977391	Statement	->	3238:8:94682:94683	976503	9	True				
ANR	977392	Statement	block	3238:10:94684:94688	976503	10	True				
ANR	977393	Statement	[	3238:15:94689:94689	976503	11	True				
ANR	977394	Statement	p	3238:16:94690:94690	976503	12	True				
ANR	977395	Statement	]	3238:17:94691:94691	976503	13	True				
ANR	977396	Statement	.	3238:18:94692:94692	976503	14	True				
ANR	977397	Statement	flags	3238:19:94693:94697	976503	15	True				
ANR	977398	Statement	","	3238:24:94698:94698	976503	16	True				
ANR	977399	Statement	as	3239:6:94706:94707	976503	17	True				
ANR	977400	Statement	->	3239:8:94708:94709	976503	18	True				
ANR	977401	Statement	block	3239:10:94710:94714	976503	19	True				
ANR	977402	Statement	[	3239:15:94715:94715	976503	20	True				
ANR	977403	Statement	p	3239:16:94716:94716	976503	21	True				
ANR	977404	Statement	]	3239:17:94717:94717	976503	22	True				
ANR	977405	Statement	.	3239:18:94718:94718	976503	23	True				
ANR	977406	Statement	functions	3239:19:94719:94727	976503	24	True				
ANR	977407	Statement	","	3239:28:94728:94728	976503	25	True				
ANR	977408	Statement	as	3240:6:94736:94737	976503	26	True				
ANR	977409	Statement	->	3240:8:94738:94739	976503	27	True				
ANR	977410	Statement	block	3240:10:94740:94744	976503	28	True				
ANR	977411	Statement	[	3240:15:94745:94745	976503	29	True				
ANR	977412	Statement	p	3240:16:94746:94746	976503	30	True				
ANR	977413	Statement	]	3240:17:94747:94747	976503	31	True				
ANR	977414	Statement	.	3240:18:94748:94748	976503	32	True				
ANR	977415	Statement	comments	3240:19:94749:94756	976503	33	True				
ANR	977416	Statement	","	3240:27:94757:94757	976503	34	True				
ANR	977417	Statement	as	3241:6:94765:94766	976503	35	True				
ANR	977418	Statement	->	3241:8:94767:94768	976503	36	True				
ANR	977419	Statement	block	3241:10:94769:94773	976503	37	True				
ANR	977420	Statement	[	3241:15:94774:94774	976503	38	True				
ANR	977421	Statement	p	3241:16:94775:94775	976503	39	True				
ANR	977422	Statement	]	3241:17:94776:94776	976503	40	True				
ANR	977423	Statement	.	3241:18:94777:94777	976503	41	True				
ANR	977424	Statement	symbols	3241:19:94778:94784	976503	42	True				
ANR	977425	Statement	","	3241:26:94785:94785	976503	43	True				
ANR	977426	Statement	as	3242:6:94793:94794	976503	44	True				
ANR	977427	Statement	->	3242:8:94795:94796	976503	45	True				
ANR	977428	Statement	block	3242:10:94797:94801	976503	46	True				
ANR	977429	Statement	[	3242:15:94802:94802	976503	47	True				
ANR	977430	Statement	p	3242:16:94803:94803	976503	48	True				
ANR	977431	Statement	]	3242:17:94804:94804	976503	49	True				
ANR	977432	Statement	.	3242:18:94805:94805	976503	50	True				
ANR	977433	Statement	strings	3242:19:94806:94812	976503	51	True				
ANR	977434	Statement	)	3242:26:94813:94813	976503	52	True				
ANR	977435	ExpressionStatement		3242:27:94814:94814	976503	53	True				
ANR	977436	BreakStatement	break ;	3244:3:94824:94829	976503	20	True				
ANR	977437	Label	case 'e' :	3245:2:94833:94841	976503	21	True				
ANR	977438	ExpressionStatement	"cmd_p_minus_e ( core , at , ate )"	3246:3:94853:94882	976503	22	True				
ANR	977439	CallExpression	"cmd_p_minus_e ( core , at , ate )"		976503	0					
ANR	977440	Callee	cmd_p_minus_e		976503	0					
ANR	977441	Identifier	cmd_p_minus_e		976503	0					
ANR	977442	ArgumentList	core		976503	1					
ANR	977443	Argument	core		976503	0					
ANR	977444	Identifier	core		976503	0					
ANR	977445	Argument	at		976503	1					
ANR	977446	Identifier	at		976503	0					
ANR	977447	Argument	ate		976503	2					
ANR	977448	Identifier	ate		976503	0					
ANR	977449	BreakStatement	break ;	3247:3:94887:94892	976503	23	True				
ANR	977450	Label	default :	3248:2:94896:94903	976503	24	True				
ANR	977451	Identifier	default		976503	0					
ANR	977452	CompoundStatement		138:10:3391:3391	976503	25					
ANR	977453	IfStatement	if ( off >= at && off < ate )		976503	0					
ANR	977454	Condition	off >= at && off < ate	3249:7:94920:94941	976503	0	True				
ANR	977455	AndExpression	off >= at && off < ate		976503	0		&&			
ANR	977456	RelationalExpression	off >= at		976503	0		>=			
ANR	977457	Identifier	off		976503	0					
ANR	977458	Identifier	at		976503	1					
ANR	977459	RelationalExpression	off < ate		976503	1		<			
ANR	977460	Identifier	off		976503	0					
ANR	977461	Identifier	ate		976503	1					
ANR	977462	CompoundStatement		139:31:3431:3431	976503	1					
ANR	977463	ExpressionStatement	"r_cons_memcat ( ""^"" , 1 )"	3250:4:94950:94972	976503	0	True				
ANR	977464	CallExpression	"r_cons_memcat ( ""^"" , 1 )"		976503	0					
ANR	977465	Callee	r_cons_memcat		976503	0					
ANR	977466	Identifier	r_cons_memcat		976503	0					
ANR	977467	ArgumentList	"""^"""		976503	1					
ANR	977468	Argument	"""^"""		976503	0					
ANR	977469	PrimaryExpression	"""^"""		976503	0					
ANR	977470	Argument	1		976503	1					
ANR	977471	PrimaryExpression	1		976503	0					
ANR	977472	ElseStatement	else		976503	0					
ANR	977473	CompoundStatement		142:4:3477:3516	976503	0					
ANR	977474	IdentifierDeclStatement	"RIOMap * s = r_io_map_get ( core -> io , at ) ;"	3252:4:94990:95029	976503	0	True				
ANR	977475	IdentifierDecl	"* s = r_io_map_get ( core -> io , at )"		976503	0					
ANR	977476	IdentifierDeclType	RIOMap *		976503	0					
ANR	977477	Identifier	s		976503	1					
ANR	977478	AssignmentExpression	"* s = r_io_map_get ( core -> io , at )"		976503	2		=			
ANR	977479	Identifier	s		976503	0					
ANR	977480	CallExpression	"r_io_map_get ( core -> io , at )"		976503	1					
ANR	977481	Callee	r_io_map_get		976503	0					
ANR	977482	Identifier	r_io_map_get		976503	0					
ANR	977483	ArgumentList	core -> io		976503	1					
ANR	977484	Argument	core -> io		976503	0					
ANR	977485	PtrMemberAccess	core -> io		976503	0					
ANR	977486	Identifier	core		976503	0					
ANR	977487	Identifier	io		976503	1					
ANR	977488	Argument	at		976503	1					
ANR	977489	Identifier	at		976503	0					
ANR	977490	IfStatement	if ( use_color )		976503	1					
ANR	977491	Condition	use_color	3253:8:95039:95047	976503	0	True				
ANR	977492	Identifier	use_color		976503	0					
ANR	977493	CompoundStatement		143:19:3537:3537	976503	1					
ANR	977494	IfStatement	if ( s )		976503	0					
ANR	977495	Condition	s	3254:9:95061:95061	976503	0	True				
ANR	977496	Identifier	s		976503	0					
ANR	977497	CompoundStatement		144:12:3551:3551	976503	1					
ANR	977498	IfStatement	if ( s -> perm & R_PERM_X )		976503	0					
ANR	977499	Condition	s -> perm & R_PERM_X	3255:10:95076:95093	976503	0	True				
ANR	977500	BitAndExpression	s -> perm & R_PERM_X		976503	0		&			
ANR	977501	PtrMemberAccess	s -> perm		976503	0					
ANR	977502	Identifier	s		976503	0					
ANR	977503	Identifier	perm		976503	1					
ANR	977504	Identifier	R_PERM_X		976503	1					
ANR	977505	CompoundStatement		145:30:3583:3583	976503	1					
ANR	977506	ExpressionStatement	r_cons_print ( r_cons_singleton ( ) -> context -> pal . graph_trufae )	3256:7:95105:95166	976503	0	True				
ANR	977507	CallExpression	r_cons_print ( r_cons_singleton ( ) -> context -> pal . graph_trufae )		976503	0					
ANR	977508	Callee	r_cons_print		976503	0					
ANR	977509	Identifier	r_cons_print		976503	0					
ANR	977510	ArgumentList	r_cons_singleton ( ) -> context -> pal . graph_trufae		976503	1					
ANR	977511	Argument	r_cons_singleton ( ) -> context -> pal . graph_trufae		976503	0					
ANR	977512	MemberAccess	r_cons_singleton ( ) -> context -> pal . graph_trufae		976503	0					
ANR	977513	PtrMemberAccess	r_cons_singleton ( ) -> context -> pal		976503	0					
ANR	977514	PtrMemberAccess	r_cons_singleton ( ) -> context		976503	0					
ANR	977515	CallExpression	r_cons_singleton ( )		976503	0					
ANR	977516	Callee	r_cons_singleton		976503	0					
ANR	977517	Identifier	r_cons_singleton		976503	0					
ANR	977518	ArgumentList			976503	1					
ANR	977519	Identifier	context		976503	1					
ANR	977520	Identifier	pal		976503	1					
ANR	977521	Identifier	graph_trufae		976503	1					
ANR	977522	ElseStatement	else		976503	0					
ANR	977523	CompoundStatement		147:13:3668:3668	976503	0					
ANR	977524	ExpressionStatement	r_cons_print ( r_cons_singleton ( ) -> context -> pal . graph_true )	3258:7:95190:95249	976503	0	True				
ANR	977525	CallExpression	r_cons_print ( r_cons_singleton ( ) -> context -> pal . graph_true )		976503	0					
ANR	977526	Callee	r_cons_print		976503	0					
ANR	977527	Identifier	r_cons_print		976503	0					
ANR	977528	ArgumentList	r_cons_singleton ( ) -> context -> pal . graph_true		976503	1					
ANR	977529	Argument	r_cons_singleton ( ) -> context -> pal . graph_true		976503	0					
ANR	977530	MemberAccess	r_cons_singleton ( ) -> context -> pal . graph_true		976503	0					
ANR	977531	PtrMemberAccess	r_cons_singleton ( ) -> context -> pal		976503	0					
ANR	977532	PtrMemberAccess	r_cons_singleton ( ) -> context		976503	0					
ANR	977533	CallExpression	r_cons_singleton ( )		976503	0					
ANR	977534	Callee	r_cons_singleton		976503	0					
ANR	977535	Identifier	r_cons_singleton		976503	0					
ANR	977536	ArgumentList			976503	1					
ANR	977537	Identifier	context		976503	1					
ANR	977538	Identifier	pal		976503	1					
ANR	977539	Identifier	graph_true		976503	1					
ANR	977540	ElseStatement	else		976503	0					
ANR	977541	CompoundStatement		150:12:3758:3758	976503	0					
ANR	977542	ExpressionStatement	r_cons_print ( r_cons_singleton ( ) -> context -> pal . graph_false )	3261:6:95279:95339	976503	0	True				
ANR	977543	CallExpression	r_cons_print ( r_cons_singleton ( ) -> context -> pal . graph_false )		976503	0					
ANR	977544	Callee	r_cons_print		976503	0					
ANR	977545	Identifier	r_cons_print		976503	0					
ANR	977546	ArgumentList	r_cons_singleton ( ) -> context -> pal . graph_false		976503	1					
ANR	977547	Argument	r_cons_singleton ( ) -> context -> pal . graph_false		976503	0					
ANR	977548	MemberAccess	r_cons_singleton ( ) -> context -> pal . graph_false		976503	0					
ANR	977549	PtrMemberAccess	r_cons_singleton ( ) -> context -> pal		976503	0					
ANR	977550	PtrMemberAccess	r_cons_singleton ( ) -> context		976503	0					
ANR	977551	CallExpression	r_cons_singleton ( )		976503	0					
ANR	977552	Callee	r_cons_singleton		976503	0					
ANR	977553	Identifier	r_cons_singleton		976503	0					
ANR	977554	ArgumentList			976503	1					
ANR	977555	Identifier	context		976503	1					
ANR	977556	Identifier	pal		976503	1					
ANR	977557	Identifier	graph_false		976503	1					
ANR	977558	IfStatement	if ( as -> block [ p ] . strings > 0 )		976503	2					
ANR	977559	Condition	as -> block [ p ] . strings > 0	3264:8:95362:95385	976503	0	True				
ANR	977560	RelationalExpression	as -> block [ p ] . strings > 0		976503	0		>			
ANR	977561	MemberAccess	as -> block [ p ] . strings		976503	0					
ANR	977562	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977563	PtrMemberAccess	as -> block		976503	0					
ANR	977564	Identifier	as		976503	0					
ANR	977565	Identifier	block		976503	1					
ANR	977566	Identifier	p		976503	1					
ANR	977567	Identifier	strings		976503	1					
ANR	977568	PrimaryExpression	0		976503	1					
ANR	977569	CompoundStatement		154:34:3875:3875	976503	1					
ANR	977570	ExpressionStatement	"r_cons_memcat ( ""z"" , 1 )"	3265:5:95395:95417	976503	0	True				
ANR	977571	CallExpression	"r_cons_memcat ( ""z"" , 1 )"		976503	0					
ANR	977572	Callee	r_cons_memcat		976503	0					
ANR	977573	Identifier	r_cons_memcat		976503	0					
ANR	977574	ArgumentList	"""z"""		976503	1					
ANR	977575	Argument	"""z"""		976503	0					
ANR	977576	PrimaryExpression	"""z"""		976503	0					
ANR	977577	Argument	1		976503	1					
ANR	977578	PrimaryExpression	1		976503	0					
ANR	977579	ElseStatement	else		976503	0					
ANR	977580	IfStatement	if ( as -> block [ p ] . symbols > 0 )		976503	0					
ANR	977581	Condition	as -> block [ p ] . symbols > 0	3266:15:95434:95457	976503	0	True				
ANR	977582	RelationalExpression	as -> block [ p ] . symbols > 0		976503	0		>			
ANR	977583	MemberAccess	as -> block [ p ] . symbols		976503	0					
ANR	977584	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977585	PtrMemberAccess	as -> block		976503	0					
ANR	977586	Identifier	as		976503	0					
ANR	977587	Identifier	block		976503	1					
ANR	977588	Identifier	p		976503	1					
ANR	977589	Identifier	symbols		976503	1					
ANR	977590	PrimaryExpression	0		976503	1					
ANR	977591	CompoundStatement		156:41:3947:3947	976503	1					
ANR	977592	ExpressionStatement	"r_cons_memcat ( ""s"" , 1 )"	3267:5:95467:95489	976503	0	True				
ANR	977593	CallExpression	"r_cons_memcat ( ""s"" , 1 )"		976503	0					
ANR	977594	Callee	r_cons_memcat		976503	0					
ANR	977595	Identifier	r_cons_memcat		976503	0					
ANR	977596	ArgumentList	"""s"""		976503	1					
ANR	977597	Argument	"""s"""		976503	0					
ANR	977598	PrimaryExpression	"""s"""		976503	0					
ANR	977599	Argument	1		976503	1					
ANR	977600	PrimaryExpression	1		976503	0					
ANR	977601	ElseStatement	else		976503	0					
ANR	977602	IfStatement	if ( as -> block [ p ] . functions > 0 )		976503	0					
ANR	977603	Condition	as -> block [ p ] . functions > 0	3268:15:95506:95531	976503	0	True				
ANR	977604	RelationalExpression	as -> block [ p ] . functions > 0		976503	0		>			
ANR	977605	MemberAccess	as -> block [ p ] . functions		976503	0					
ANR	977606	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977607	PtrMemberAccess	as -> block		976503	0					
ANR	977608	Identifier	as		976503	0					
ANR	977609	Identifier	block		976503	1					
ANR	977610	Identifier	p		976503	1					
ANR	977611	Identifier	functions		976503	1					
ANR	977612	PrimaryExpression	0		976503	1					
ANR	977613	CompoundStatement		158:43:4021:4021	976503	1					
ANR	977614	ExpressionStatement	"r_cons_memcat ( ""F"" , 1 )"	3269:5:95541:95563	976503	0	True				
ANR	977615	CallExpression	"r_cons_memcat ( ""F"" , 1 )"		976503	0					
ANR	977616	Callee	r_cons_memcat		976503	0					
ANR	977617	Identifier	r_cons_memcat		976503	0					
ANR	977618	ArgumentList	"""F"""		976503	1					
ANR	977619	Argument	"""F"""		976503	0					
ANR	977620	PrimaryExpression	"""F"""		976503	0					
ANR	977621	Argument	1		976503	1					
ANR	977622	PrimaryExpression	1		976503	0					
ANR	977623	ElseStatement	else		976503	0					
ANR	977624	IfStatement	if ( as -> block [ p ] . comments > 0 )		976503	0					
ANR	977625	Condition	as -> block [ p ] . comments > 0	3270:15:95580:95604	976503	0	True				
ANR	977626	RelationalExpression	as -> block [ p ] . comments > 0		976503	0		>			
ANR	977627	MemberAccess	as -> block [ p ] . comments		976503	0					
ANR	977628	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977629	PtrMemberAccess	as -> block		976503	0					
ANR	977630	Identifier	as		976503	0					
ANR	977631	Identifier	block		976503	1					
ANR	977632	Identifier	p		976503	1					
ANR	977633	Identifier	comments		976503	1					
ANR	977634	PrimaryExpression	0		976503	1					
ANR	977635	CompoundStatement		160:42:4094:4094	976503	1					
ANR	977636	ExpressionStatement	"r_cons_memcat ( ""c"" , 1 )"	3271:5:95614:95636	976503	0	True				
ANR	977637	CallExpression	"r_cons_memcat ( ""c"" , 1 )"		976503	0					
ANR	977638	Callee	r_cons_memcat		976503	0					
ANR	977639	Identifier	r_cons_memcat		976503	0					
ANR	977640	ArgumentList	"""c"""		976503	1					
ANR	977641	Argument	"""c"""		976503	0					
ANR	977642	PrimaryExpression	"""c"""		976503	0					
ANR	977643	Argument	1		976503	1					
ANR	977644	PrimaryExpression	1		976503	0					
ANR	977645	ElseStatement	else		976503	0					
ANR	977646	IfStatement	if ( as -> block [ p ] . flags > 0 )		976503	0					
ANR	977647	Condition	as -> block [ p ] . flags > 0	3272:15:95653:95674	976503	0	True				
ANR	977648	RelationalExpression	as -> block [ p ] . flags > 0		976503	0		>			
ANR	977649	MemberAccess	as -> block [ p ] . flags		976503	0					
ANR	977650	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977651	PtrMemberAccess	as -> block		976503	0					
ANR	977652	Identifier	as		976503	0					
ANR	977653	Identifier	block		976503	1					
ANR	977654	Identifier	p		976503	1					
ANR	977655	Identifier	flags		976503	1					
ANR	977656	PrimaryExpression	0		976503	1					
ANR	977657	CompoundStatement		162:39:4164:4164	976503	1					
ANR	977658	ExpressionStatement	"r_cons_memcat ( ""."" , 1 )"	3273:5:95684:95706	976503	0	True				
ANR	977659	CallExpression	"r_cons_memcat ( ""."" , 1 )"		976503	0					
ANR	977660	Callee	r_cons_memcat		976503	0					
ANR	977661	Identifier	r_cons_memcat		976503	0					
ANR	977662	ArgumentList	"""."""		976503	1					
ANR	977663	Argument	"""."""		976503	0					
ANR	977664	PrimaryExpression	"""."""		976503	0					
ANR	977665	Argument	1		976503	1					
ANR	977666	PrimaryExpression	1		976503	0					
ANR	977667	ElseStatement	else		976503	0					
ANR	977668	IfStatement	if ( as -> block [ p ] . in_functions > 0 )		976503	0					
ANR	977669	Condition	as -> block [ p ] . in_functions > 0	3274:15:95723:95751	976503	0	True				
ANR	977670	RelationalExpression	as -> block [ p ] . in_functions > 0		976503	0		>			
ANR	977671	MemberAccess	as -> block [ p ] . in_functions		976503	0					
ANR	977672	ArrayIndexing	as -> block [ p ]		976503	0					
ANR	977673	PtrMemberAccess	as -> block		976503	0					
ANR	977674	Identifier	as		976503	0					
ANR	977675	Identifier	block		976503	1					
ANR	977676	Identifier	p		976503	1					
ANR	977677	Identifier	in_functions		976503	1					
ANR	977678	PrimaryExpression	0		976503	1					
ANR	977679	CompoundStatement		164:46:4241:4241	976503	1					
ANR	977680	ExpressionStatement	"r_cons_memcat ( ""f"" , 1 )"	3275:5:95761:95783	976503	0	True				
ANR	977681	CallExpression	"r_cons_memcat ( ""f"" , 1 )"		976503	0					
ANR	977682	Callee	r_cons_memcat		976503	0					
ANR	977683	Identifier	r_cons_memcat		976503	0					
ANR	977684	ArgumentList	"""f"""		976503	1					
ANR	977685	Argument	"""f"""		976503	0					
ANR	977686	PrimaryExpression	"""f"""		976503	0					
ANR	977687	Argument	1		976503	1					
ANR	977688	PrimaryExpression	1		976503	0					
ANR	977689	ElseStatement	else		976503	0					
ANR	977690	CompoundStatement		166:11:4283:4283	976503	0					
ANR	977691	ExpressionStatement	"r_cons_memcat ( ""_"" , 1 )"	3277:5:95803:95825	976503	0	True				
ANR	977692	CallExpression	"r_cons_memcat ( ""_"" , 1 )"		976503	0					
ANR	977693	Callee	r_cons_memcat		976503	0					
ANR	977694	Identifier	r_cons_memcat		976503	0					
ANR	977695	ArgumentList	"""_"""		976503	1					
ANR	977696	Argument	"""_"""		976503	0					
ANR	977697	PrimaryExpression	"""_"""		976503	0					
ANR	977698	Argument	1		976503	1					
ANR	977699	PrimaryExpression	1		976503	0					
ANR	977700	BreakStatement	break ;	3281:2:95844:95849	976503	26	True				
ANR	977701	SwitchStatement	switch ( mode )		976503	35					
ANR	977702	Condition	mode	3284:9:95867:95870	976503	0	True				
ANR	977703	Identifier	mode		976503	0					
ANR	977704	CompoundStatement		174:15:4360:4360	976503	1					
ANR	977705	Label	case 'j' :	3285:2:95877:95885	976503	0	True				
ANR	977706	ExpressionStatement	pj_end ( pj )	3286:3:95890:95901	976503	1	True				
ANR	977707	CallExpression	pj_end ( pj )		976503	0					
ANR	977708	Callee	pj_end		976503	0					
ANR	977709	Identifier	pj_end		976503	0					
ANR	977710	ArgumentList	pj		976503	1					
ANR	977711	Argument	pj		976503	0					
ANR	977712	Identifier	pj		976503	0					
ANR	977713	ExpressionStatement	pj_end ( pj )	3287:3:95906:95917	976503	2	True				
ANR	977714	CallExpression	pj_end ( pj )		976503	0					
ANR	977715	Callee	pj_end		976503	0					
ANR	977716	Identifier	pj_end		976503	0					
ANR	977717	ArgumentList	pj		976503	1					
ANR	977718	Argument	pj		976503	0					
ANR	977719	Identifier	pj		976503	0					
ANR	977720	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	3288:3:95922:95953	976503	3	True				
ANR	977721	CallExpression	r_cons_println ( pj_string ( pj ) )		976503	0					
ANR	977722	Callee	r_cons_println		976503	0					
ANR	977723	Identifier	r_cons_println		976503	0					
ANR	977724	ArgumentList	pj_string ( pj )		976503	1					
ANR	977725	Argument	pj_string ( pj )		976503	0					
ANR	977726	CallExpression	pj_string ( pj )		976503	0					
ANR	977727	Callee	pj_string		976503	0					
ANR	977728	Identifier	pj_string		976503	0					
ANR	977729	ArgumentList	pj		976503	1					
ANR	977730	Argument	pj		976503	0					
ANR	977731	Identifier	pj		976503	0					
ANR	977732	ExpressionStatement	pj_free ( pj )	3289:3:95958:95970	976503	4	True				
ANR	977733	CallExpression	pj_free ( pj )		976503	0					
ANR	977734	Callee	pj_free		976503	0					
ANR	977735	Identifier	pj_free		976503	0					
ANR	977736	ArgumentList	pj		976503	1					
ANR	977737	Argument	pj		976503	0					
ANR	977738	Identifier	pj		976503	0					
ANR	977739	BreakStatement	break ;	3290:3:95975:95980	976503	5	True				
ANR	977740	Label	case 'h' :	3291:2:95984:95992	976503	6	True				
ANR	977741	ExpressionStatement	"r_cons_printf ( ""|-------------)----------------------------|\\n"" )"	3293:3:96066:96130	976503	7	True				
ANR	977742	CallExpression	"r_cons_printf ( ""|-------------)----------------------------|\\n"" )"		976503	0					
ANR	977743	Callee	r_cons_printf		976503	0					
ANR	977744	Identifier	r_cons_printf		976503	0					
ANR	977745	ArgumentList	"""|-------------)----------------------------|\\n"""		976503	1					
ANR	977746	Argument	"""|-------------)----------------------------|\\n"""		976503	0					
ANR	977747	PrimaryExpression	"""|-------------)----------------------------|\\n"""		976503	0					
ANR	977748	ExpressionStatement	"r_cons_printf ( ""|    total    | %4d %4d %4d %4d %4d   |\\n"" , total . flags , total . functions , total . comments , total . symbols , total . strings )"	3294:3:96135:96279	976503	8	True				
ANR	977749	CallExpression	"r_cons_printf ( ""|    total    | %4d %4d %4d %4d %4d   |\\n"" , total . flags , total . functions , total . comments , total . symbols , total . strings )"		976503	0					
ANR	977750	Callee	r_cons_printf		976503	0					
ANR	977751	Identifier	r_cons_printf		976503	0					
ANR	977752	ArgumentList	"""|    total    | %4d %4d %4d %4d %4d   |\\n"""		976503	1					
ANR	977753	Argument	"""|    total    | %4d %4d %4d %4d %4d   |\\n"""		976503	0					
ANR	977754	PrimaryExpression	"""|    total    | %4d %4d %4d %4d %4d   |\\n"""		976503	0					
ANR	977755	Argument	total . flags		976503	1					
ANR	977756	MemberAccess	total . flags		976503	0					
ANR	977757	Identifier	total		976503	0					
ANR	977758	Identifier	flags		976503	1					
ANR	977759	Argument	total . functions		976503	2					
ANR	977760	MemberAccess	total . functions		976503	0					
ANR	977761	Identifier	total		976503	0					
ANR	977762	Identifier	functions		976503	1					
ANR	977763	Argument	total . comments		976503	3					
ANR	977764	MemberAccess	total . comments		976503	0					
ANR	977765	Identifier	total		976503	0					
ANR	977766	Identifier	comments		976503	1					
ANR	977767	Argument	total . symbols		976503	4					
ANR	977768	MemberAccess	total . symbols		976503	0					
ANR	977769	Identifier	total		976503	0					
ANR	977770	Identifier	symbols		976503	1					
ANR	977771	Argument	total . strings		976503	5					
ANR	977772	MemberAccess	total . strings		976503	0					
ANR	977773	Identifier	total		976503	0					
ANR	977774	Identifier	strings		976503	1					
ANR	977775	ExpressionStatement	"r_cons_printf ( ""`-------------'----------------------------'\\n"" )"	3296:3:96284:96348	976503	9	True				
ANR	977776	CallExpression	"r_cons_printf ( ""`-------------'----------------------------'\\n"" )"		976503	0					
ANR	977777	Callee	r_cons_printf		976503	0					
ANR	977778	Identifier	r_cons_printf		976503	0					
ANR	977779	ArgumentList	"""`-------------'----------------------------'\\n"""		976503	1					
ANR	977780	Argument	"""`-------------'----------------------------'\\n"""		976503	0					
ANR	977781	PrimaryExpression	"""`-------------'----------------------------'\\n"""		976503	0					
ANR	977782	BreakStatement	break ;	3297:3:96353:96358	976503	10	True				
ANR	977783	Label	case 'e' :	3298:2:96362:96370	976503	11	True				
ANR	977784	Label	default :	3299:2:96374:96381	976503	12	True				
ANR	977785	Identifier	default		976503	0					
ANR	977786	IfStatement	if ( use_color )		976503	13					
ANR	977787	Condition	use_color	3300:7:96390:96398	976503	0	True				
ANR	977788	Identifier	use_color		976503	0					
ANR	977789	CompoundStatement		190:18:4888:4888	976503	1					
ANR	977790	ExpressionStatement	r_cons_print ( Color_RESET )	3301:4:96407:96433	976503	0	True				
ANR	977791	CallExpression	r_cons_print ( Color_RESET )		976503	0					
ANR	977792	Callee	r_cons_print		976503	0					
ANR	977793	Identifier	r_cons_print		976503	0					
ANR	977794	ArgumentList	Color_RESET		976503	1					
ANR	977795	Argument	Color_RESET		976503	0					
ANR	977796	Identifier	Color_RESET		976503	0					
ANR	977797	Statement	r_cons_printf	3303:3:96443:96455	976503	14	True				
ANR	977798	Statement	(	3303:17:96457:96457	976503	15	True				
ANR	977799	Statement	"""] 0x%08"""	3303:18:96458:96466	976503	16	True				
ANR	977800	Statement	PFMT64x	3303:27:96467:96473	976503	17	True				
ANR	977801	Statement	"""\\n"""	3303:35:96475:96478	976503	18	True				
ANR	977802	Statement	","	3303:39:96479:96479	976503	19	True				
ANR	977803	Statement	to	3303:41:96481:96482	976503	20	True				
ANR	977804	Statement	)	3303:43:96483:96483	976503	21	True				
ANR	977805	ExpressionStatement		3303:44:96484:96484	976503	22	True				
ANR	977806	ExpressionStatement	r_core_anal_stats_free ( as )	3305:1:96490:96517	976503	36	True				
ANR	977807	CallExpression	r_core_anal_stats_free ( as )		976503	0					
ANR	977808	Callee	r_core_anal_stats_free		976503	0					
ANR	977809	Identifier	r_core_anal_stats_free		976503	0					
ANR	977810	ArgumentList	as		976503	1					
ANR	977811	Argument	as		976503	0					
ANR	977812	Identifier	as		976503	0					
ANR	977813	ReturnStatement	return len ;	3306:1:96520:96530	976503	37	True				
ANR	977814	Identifier	len		976503	0					
ANR	977815	ReturnType	static int		976503	1					
ANR	977816	Identifier	cmd_print_blocks		976503	2					
ANR	977817	ParameterList	"RCore * core , const char * input"		976503	3					
ANR	977818	Parameter	RCore * core	3111:28:91480:91490	976503	0	True				
ANR	977819	ParameterType	RCore *		976503	0					
ANR	977820	Identifier	core		976503	1					
ANR	977821	Parameter	const char * input	3111:41:91493:91509	976503	1	True				
ANR	977822	ParameterType	const char *		976503	0					
ANR	977823	Identifier	input		976503	1					
ANR	977824	CFGEntryNode	ENTRY		976503		True				
ANR	977825	CFGExitNode	EXIT		976503		True				
ANR	977826	Symbol	total . strings		976503						
ANR	977827	Symbol	help_msg_p_minus		976503						
ANR	977828	Symbol	pj_string		976503						
ANR	977829	Symbol	* map		976503						
ANR	977830	Symbol	* input		976503						
ANR	977831	Symbol	core -> offset		976503						
ANR	977832	Symbol	r_itv_begin		976503						
ANR	977833	Symbol	as -> block [ p ] . comments		976503						
ANR	977834	Symbol	mode		976503						
ANR	977835	Symbol	total . flags		976503						
ANR	977836	Symbol	ate		976503						
ANR	977837	Symbol	len		976503						
ANR	977838	Symbol	from		976503						
ANR	977839	Symbol	core -> num		976503						
ANR	977840	Symbol	* * as		976503						
ANR	977841	Symbol	r_str_rwx_i		976503						
ANR	977842	Symbol	NULL		976503						
ANR	977843	Symbol	iter		976503						
ANR	977844	Symbol	list		976503						
ANR	977845	Symbol	use_color		976503						
ANR	977846	Symbol	core		976503						
ANR	977847	Symbol	input		976503						
ANR	977848	Symbol	as -> block		976503						
ANR	977849	Symbol	as		976503						
ANR	977850	Symbol	at		976503						
ANR	977851	Symbol	piece		976503						
ANR	977852	Symbol	r_config_get_i		976503						
ANR	977853	Symbol	core -> print		976503						
ANR	977854	Symbol	r_cons_singleton ( ) -> context -> pal . graph_false		976503						
ANR	977855	Symbol	map -> itv		976503						
ANR	977856	Symbol	total . comments		976503						
ANR	977857	Symbol	as -> block [ p ] . strings		976503						
ANR	977858	Symbol	total . functions		976503						
ANR	977859	Symbol	as -> block [ p ] . flags		976503						
ANR	977860	Symbol	* core		976503						
ANR	977861	Symbol	r_core_anal_get_stats		976503						
ANR	977862	Symbol	as -> block [ p ] . in_functions		976503						
ANR	977863	Symbol	Color_RESET		976503						
ANR	977864	Symbol	s -> perm		976503						
ANR	977865	Symbol	r_num_math		976503						
ANR	977866	Symbol	R_PERM_X		976503						
ANR	977867	Symbol	total		976503						
ANR	977868	Symbol	core -> io		976503						
ANR	977869	Symbol	r_cons_singleton		976503						
ANR	977870	Symbol	as -> block [ p ] . symbols		976503						
ANR	977871	Symbol	UT64_MAX		976503						
ANR	977872	Symbol	cols		976503						
ANR	977873	Symbol	map		976503						
ANR	977874	Symbol	* * core		976503						
ANR	977875	Symbol	core -> config		976503						
ANR	977876	Symbol	f		976503						
ANR	977877	Symbol	r_cons_singleton ( ) -> context -> pal		976503						
ANR	977878	Symbol	core -> print -> cols		976503						
ANR	977879	Symbol	* as -> block		976503						
ANR	977880	Symbol	i		976503						
ANR	977881	Symbol	* r_cons_singleton ( ) -> context		976503						
ANR	977882	Symbol	as -> block [ p ] . functions		976503						
ANR	977883	Symbol	off		976503						
ANR	977884	Symbol	* * r_cons_singleton		976503						
ANR	977885	Symbol	r_itv_end		976503						
ANR	977886	Symbol	p		976503						
ANR	977887	Symbol	* core -> print		976503						
ANR	977888	Symbol	as -> block [ p ] . perm		976503						
ANR	977889	Symbol	s		976503						
ANR	977890	Symbol	r_cons_singleton ( ) -> context -> pal . graph_trufae		976503						
ANR	977891	Symbol	t		976503						
ANR	977892	Symbol	w		976503						
ANR	977893	Symbol	R_MAX		976503						
ANR	977894	Symbol	total . symbols		976503						
ANR	977895	Symbol	pj_new		976503						
ANR	977896	Symbol	pj		976503						
ANR	977897	Symbol	* p		976503						
ANR	977898	Symbol	to		976503						
ANR	977899	Symbol	r_core_get_boundaries_prot		976503						
ANR	977900	Symbol	* as		976503						
ANR	977901	Symbol	r_cons_singleton ( ) -> context -> pal . graph_true		976503						
ANR	977902	Symbol	* s		976503						
ANR	977903	Symbol	r_cons_singleton ( ) -> context		976503						
ANR	977904	Symbol	r_io_map_get		976503						
ANR	977905	Symbol	* r_cons_singleton		976503						
ANR	977906	Function	checkAnalType	3310:0:96536:97207							
ANR	977907	FunctionDef	"checkAnalType (RAnalOp * op , int t)"		977906	0					
ANR	977908	CompoundStatement		3310:46:96582:97207	977906	0					
ANR	977909	IfStatement	if ( t == 'c' )		977906	0					
ANR	977910	Condition	t == 'c'	3311:5:96589:96596	977906	0	True				
ANR	977911	EqualityExpression	t == 'c'		977906	0		==			
ANR	977912	Identifier	t		977906	0					
ANR	977913	PrimaryExpression	'c'		977906	1					
ANR	977914	CompoundStatement		2:15:16:16	977906	1					
ANR	977915	SwitchStatement	switch ( op -> type )		977906	0					
ANR	977916	Condition	op -> type	3312:10:96611:96618	977906	0	True				
ANR	977917	PtrMemberAccess	op -> type		977906	0					
ANR	977918	Identifier	op		977906	0					
ANR	977919	Identifier	type		977906	1					
ANR	977920	CompoundStatement		3:20:38:38	977906	1					
ANR	977921	Label	case R_ANAL_OP_TYPE_RCALL :	3313:2:96625:96650	977906	0	True				
ANR	977922	Identifier	R_ANAL_OP_TYPE_RCALL		977906	0					
ANR	977923	Label	case R_ANAL_OP_TYPE_UCALL :	3314:2:96654:96679	977906	1	True				
ANR	977924	Identifier	R_ANAL_OP_TYPE_UCALL		977906	0					
ANR	977925	Label	case R_ANAL_OP_TYPE_CALL :	3315:2:96683:96707	977906	2	True				
ANR	977926	Identifier	R_ANAL_OP_TYPE_CALL		977906	0					
ANR	977927	ReturnStatement	return true ;	3316:3:96712:96723	977906	3	True				
ANR	977928	Identifier	true		977906	0					
ANR	977929	ElseStatement	else		977906	0					
ANR	977930	IfStatement	if ( t == 's' )		977906	0					
ANR	977931	Condition	t == 's'	3318:12:96741:96748	977906	0	True				
ANR	977932	EqualityExpression	t == 's'		977906	0		==			
ANR	977933	Identifier	t		977906	0					
ANR	977934	PrimaryExpression	's'		977906	1					
ANR	977935	CompoundStatement		9:22:168:168	977906	1					
ANR	977936	IfStatement	if ( op -> family == R_ANAL_OP_FAMILY_PRIV )		977906	0					
ANR	977937	Condition	op -> family == R_ANAL_OP_FAMILY_PRIV	3319:6:96759:96793	977906	0	True				
ANR	977938	EqualityExpression	op -> family == R_ANAL_OP_FAMILY_PRIV		977906	0		==			
ANR	977939	PtrMemberAccess	op -> family		977906	0					
ANR	977940	Identifier	op		977906	0					
ANR	977941	Identifier	family		977906	1					
ANR	977942	Identifier	R_ANAL_OP_FAMILY_PRIV		977906	1					
ANR	977943	CompoundStatement		10:43:213:213	977906	1					
ANR	977944	ReturnStatement	return true ;	3320:3:96801:96812	977906	0	True				
ANR	977945	Identifier	true		977906	0					
ANR	977946	SwitchStatement	switch ( op -> type )		977906	1					
ANR	977947	Condition	op -> type	3322:10:96828:96835	977906	0	True				
ANR	977948	PtrMemberAccess	op -> type		977906	0					
ANR	977949	Identifier	op		977906	0					
ANR	977950	Identifier	type		977906	1					
ANR	977951	CompoundStatement		13:20:255:255	977906	1					
ANR	977952	Label	case R_ANAL_OP_TYPE_SWI :	3323:2:96842:96865	977906	0	True				
ANR	977953	Identifier	R_ANAL_OP_TYPE_SWI		977906	0					
ANR	977954	ReturnStatement	return true ;	3324:3:96870:96881	977906	1	True				
ANR	977955	Identifier	true		977906	0					
ANR	977956	ElseStatement	else		977906	0					
ANR	977957	IfStatement	if ( t == 'i' )		977906	0					
ANR	977958	Condition	t == 'i'	3326:12:96899:96906	977906	0	True				
ANR	977959	EqualityExpression	t == 'i'		977906	0		==			
ANR	977960	Identifier	t		977906	0					
ANR	977961	PrimaryExpression	'i'		977906	1					
ANR	977962	CompoundStatement		17:22:326:326	977906	1					
ANR	977963	SwitchStatement	switch ( op -> type )		977906	0					
ANR	977964	Condition	op -> type	3327:10:96921:96928	977906	0	True				
ANR	977965	PtrMemberAccess	op -> type		977906	0					
ANR	977966	Identifier	op		977906	0					
ANR	977967	Identifier	type		977906	1					
ANR	977968	CompoundStatement		18:20:348:348	977906	1					
ANR	977969	Label	case R_ANAL_OP_TYPE_TRAP :	3328:2:96935:96959	977906	0	True				
ANR	977970	Identifier	R_ANAL_OP_TYPE_TRAP		977906	0					
ANR	977971	Label	case R_ANAL_OP_TYPE_ILL :	3329:2:96963:96986	977906	1	True				
ANR	977972	Identifier	R_ANAL_OP_TYPE_ILL		977906	0					
ANR	977973	ReturnStatement	return true ;	3330:3:96991:97002	977906	2	True				
ANR	977974	Identifier	true		977906	0					
ANR	977975	ElseStatement	else		977906	0					
ANR	977976	IfStatement	if ( t == 'j' )		977906	0					
ANR	977977	Condition	t == 'j'	3332:12:97020:97027	977906	0	True				
ANR	977978	EqualityExpression	t == 'j'		977906	0		==			
ANR	977979	Identifier	t		977906	0					
ANR	977980	PrimaryExpression	'j'		977906	1					
ANR	977981	CompoundStatement		23:22:447:447	977906	1					
ANR	977982	SwitchStatement	switch ( op -> type )		977906	0					
ANR	977983	Condition	op -> type	3333:10:97042:97049	977906	0	True				
ANR	977984	PtrMemberAccess	op -> type		977906	0					
ANR	977985	Identifier	op		977906	0					
ANR	977986	Identifier	type		977906	1					
ANR	977987	CompoundStatement		24:20:469:469	977906	1					
ANR	977988	Label	case R_ANAL_OP_TYPE_JMP :	3334:2:97056:97079	977906	0	True				
ANR	977989	Identifier	R_ANAL_OP_TYPE_JMP		977906	0					
ANR	977990	Label	case R_ANAL_OP_TYPE_CJMP :	3337:2:97143:97167	977906	1	True				
ANR	977991	Identifier	R_ANAL_OP_TYPE_CJMP		977906	0					
ANR	977992	ReturnStatement	return true ;	3338:3:97172:97183	977906	2	True				
ANR	977993	Identifier	true		977906	0					
ANR	977994	ReturnStatement	return false ;	3341:1:97193:97205	977906	1	True				
ANR	977995	Identifier	false		977906	0					
ANR	977996	ReturnType	static bool		977906	1					
ANR	977997	Identifier	checkAnalType		977906	2					
ANR	977998	ParameterList	"RAnalOp * op , int t"		977906	3					
ANR	977999	Parameter	RAnalOp * op	3310:26:96562:96572	977906	0	True				
ANR	978000	ParameterType	RAnalOp *		977906	0					
ANR	978001	Identifier	op		977906	1					
ANR	978002	Parameter	int t	3310:39:96575:96579	977906	1	True				
ANR	978003	ParameterType	int		977906	0					
ANR	978004	Identifier	t		977906	1					
ANR	978005	CFGEntryNode	ENTRY		977906		True				
ANR	978006	CFGExitNode	EXIT		977906		True				
ANR	978007	Symbol	op		977906						
ANR	978008	Symbol	t		977906						
ANR	978009	Symbol	* op		977906						
ANR	978010	Symbol	op -> type		977906						
ANR	978011	Symbol	op -> family		977906						
ANR	978012	Symbol	R_ANAL_OP_FAMILY_PRIV		977906						
ANR	978013	Symbol	true		977906						
ANR	978014	Symbol	false		977906						
ANR	978015	Function	matchBar	3344:0:97210:97294							
ANR	978016	FunctionDef	"matchBar (ut8 * ptr , int i)"		978015	0					
ANR	978017	CompoundStatement		3344:45:97255:97294	978015	0					
ANR	978018	IfStatement	if ( ptr [ i ] < 0xff )		978015	0					
ANR	978019	Condition	ptr [ i ] < 0xff	3345:5:97262:97274	978015	0	True				
ANR	978020	RelationalExpression	ptr [ i ] < 0xff		978015	0		<			
ANR	978021	ArrayIndexing	ptr [ i ]		978015	0					
ANR	978022	Identifier	ptr		978015	0					
ANR	978023	Identifier	i		978015	1					
ANR	978024	PrimaryExpression	0xff		978015	1					
ANR	978025	CompoundStatement		2:20:21:21	978015	1					
ANR	978026	ExpressionStatement	ptr [ i ] ++	3346:2:97281:97289	978015	0	True				
ANR	978027	PostIncDecOperationExpression	ptr [ i ] ++		978015	0					
ANR	978028	ArrayIndexing	ptr [ i ]		978015	0					
ANR	978029	Identifier	ptr		978015	0					
ANR	978030	Identifier	i		978015	1					
ANR	978031	IncDec	++		978015	1					
ANR	978032	ReturnType	static inline void		978015	1					
ANR	978033	Identifier	matchBar		978015	2					
ANR	978034	ParameterList	"ut8 * ptr , int i"		978015	3					
ANR	978035	Parameter	ut8 * ptr	3344:28:97238:97245	978015	0	True				
ANR	978036	ParameterType	ut8 *		978015	0					
ANR	978037	Identifier	ptr		978015	1					
ANR	978038	Parameter	int i	3344:38:97248:97252	978015	1	True				
ANR	978039	ParameterType	int		978015	0					
ANR	978040	Identifier	i		978015	1					
ANR	978041	CFGEntryNode	ENTRY		978015		True				
ANR	978042	CFGExitNode	EXIT		978015		True				
ANR	978043	Symbol	* i		978015						
ANR	978044	Symbol	* ptr		978015						
ANR	978045	Symbol	i		978015						
ANR	978046	Symbol	ptr		978015						
ANR	978047	Function	analBars	3350:0:97297:98945							
ANR	978048	FunctionDef	"analBars (RCore * core , int type , int nblocks , int blocksize , int skipblocks , ut64 from)"		978047	0					
ANR	978049	CompoundStatement		3350:99:97396:98945	978047	0					
ANR	978050	IdentifierDeclStatement	"int j , i = 0 ;"	3351:1:97399:97411	978047	0	True				
ANR	978051	IdentifierDecl	j		978047	0					
ANR	978052	IdentifierDeclType	int		978047	0					
ANR	978053	Identifier	j		978047	1					
ANR	978054	IdentifierDecl	i = 0		978047	1					
ANR	978055	IdentifierDeclType	int		978047	0					
ANR	978056	Identifier	i		978047	1					
ANR	978057	AssignmentExpression	i = 0		978047	2		=			
ANR	978058	Identifier	i		978047	0					
ANR	978059	PrimaryExpression	0		978047	1					
ANR	978060	IdentifierDeclStatement	"ut8 * ptr = calloc ( 1 , nblocks ) ;"	3352:1:97414:97444	978047	1	True				
ANR	978061	IdentifierDecl	"* ptr = calloc ( 1 , nblocks )"		978047	0					
ANR	978062	IdentifierDeclType	ut8 *		978047	0					
ANR	978063	Identifier	ptr		978047	1					
ANR	978064	AssignmentExpression	"* ptr = calloc ( 1 , nblocks )"		978047	2		=			
ANR	978065	Identifier	ptr		978047	0					
ANR	978066	CallExpression	"calloc ( 1 , nblocks )"		978047	1					
ANR	978067	Callee	calloc		978047	0					
ANR	978068	Identifier	calloc		978047	0					
ANR	978069	ArgumentList	1		978047	1					
ANR	978070	Argument	1		978047	0					
ANR	978071	PrimaryExpression	1		978047	0					
ANR	978072	Argument	nblocks		978047	1					
ANR	978073	Identifier	nblocks		978047	0					
ANR	978074	IfStatement	if ( ! ptr )		978047	2					
ANR	978075	Condition	! ptr	3353:5:97451:97454	978047	0	True				
ANR	978076	UnaryOperationExpression	! ptr		978047	0					
ANR	978077	UnaryOperator	!		978047	0					
ANR	978078	Identifier	ptr		978047	1					
ANR	978079	CompoundStatement		4:11:60:60	978047	1					
ANR	978080	ExpressionStatement	"eprintf ( ""Error: failed to malloc memory"" )"	3354:2:97461:97503	978047	0	True				
ANR	978081	CallExpression	"eprintf ( ""Error: failed to malloc memory"" )"		978047	0					
ANR	978082	Callee	eprintf		978047	0					
ANR	978083	Identifier	eprintf		978047	0					
ANR	978084	ArgumentList	"""Error: failed to malloc memory"""		978047	1					
ANR	978085	Argument	"""Error: failed to malloc memory"""		978047	0					
ANR	978086	PrimaryExpression	"""Error: failed to malloc memory"""		978047	0					
ANR	978087	ReturnStatement	return NULL ;	3355:2:97507:97518	978047	1	True				
ANR	978088	Identifier	NULL		978047	0					
ANR	978089	IdentifierDeclStatement	ut8 * p = malloc ( blocksize ) ;	3357:1:97524:97551	978047	3	True				
ANR	978090	IdentifierDecl	* p = malloc ( blocksize )		978047	0					
ANR	978091	IdentifierDeclType	ut8 *		978047	0					
ANR	978092	Identifier	p		978047	1					
ANR	978093	AssignmentExpression	* p = malloc ( blocksize )		978047	2		=			
ANR	978094	Identifier	p		978047	0					
ANR	978095	CallExpression	malloc ( blocksize )		978047	1					
ANR	978096	Callee	malloc		978047	0					
ANR	978097	Identifier	malloc		978047	0					
ANR	978098	ArgumentList	blocksize		978047	1					
ANR	978099	Argument	blocksize		978047	0					
ANR	978100	Identifier	blocksize		978047	0					
ANR	978101	IfStatement	if ( ! p )		978047	4					
ANR	978102	Condition	! p	3358:5:97558:97559	978047	0	True				
ANR	978103	UnaryOperationExpression	! p		978047	0					
ANR	978104	UnaryOperator	!		978047	0					
ANR	978105	Identifier	p		978047	1					
ANR	978106	CompoundStatement		9:9:165:165	978047	1					
ANR	978107	ExpressionStatement	R_FREE ( ptr )	3359:2:97566:97578	978047	0	True				
ANR	978108	CallExpression	R_FREE ( ptr )		978047	0					
ANR	978109	Callee	R_FREE		978047	0					
ANR	978110	Identifier	R_FREE		978047	0					
ANR	978111	ArgumentList	ptr		978047	1					
ANR	978112	Argument	ptr		978047	0					
ANR	978113	Identifier	ptr		978047	0					
ANR	978114	ExpressionStatement	"eprintf ( ""Error: failed to malloc memory"" )"	3360:2:97582:97624	978047	1	True				
ANR	978115	CallExpression	"eprintf ( ""Error: failed to malloc memory"" )"		978047	0					
ANR	978116	Callee	eprintf		978047	0					
ANR	978117	Identifier	eprintf		978047	0					
ANR	978118	ArgumentList	"""Error: failed to malloc memory"""		978047	1					
ANR	978119	Argument	"""Error: failed to malloc memory"""		978047	0					
ANR	978120	PrimaryExpression	"""Error: failed to malloc memory"""		978047	0					
ANR	978121	ReturnStatement	return NULL ;	3361:2:97628:97639	978047	2	True				
ANR	978122	Identifier	NULL		978047	0					
ANR	978123	IfStatement	if ( type == 'A' )		978047	5					
ANR	978124	Condition	type == 'A'	3363:5:97649:97659	978047	0	True				
ANR	978125	EqualityExpression	type == 'A'		978047	0		==			
ANR	978126	Identifier	type		978047	0					
ANR	978127	PrimaryExpression	'A'		978047	1					
ANR	978128	CompoundStatement		16:2:311:381	978047	1					
ANR	978129	IdentifierDeclStatement	ut64 to = from + ( blocksize * nblocks ) ;	3364:2:97666:97704	978047	0	True				
ANR	978130	IdentifierDecl	to = from + ( blocksize * nblocks )		978047	0					
ANR	978131	IdentifierDeclType	ut64		978047	0					
ANR	978132	Identifier	to		978047	1					
ANR	978133	AssignmentExpression	to = from + ( blocksize * nblocks )		978047	2		=			
ANR	978134	Identifier	to		978047	0					
ANR	978135	AdditiveExpression	from + ( blocksize * nblocks )		978047	1		+			
ANR	978136	Identifier	from		978047	0					
ANR	978137	MultiplicativeExpression	blocksize * nblocks		978047	1		*			
ANR	978138	Identifier	blocksize		978047	0					
ANR	978139	Identifier	nblocks		978047	1					
ANR	978140	IdentifierDeclStatement	"RCoreAnalStats * as = r_core_anal_get_stats ( core , from , to , blocksize ) ;"	3365:2:97708:97778	978047	1	True				
ANR	978141	IdentifierDecl	"* as = r_core_anal_get_stats ( core , from , to , blocksize )"		978047	0					
ANR	978142	IdentifierDeclType	RCoreAnalStats *		978047	0					
ANR	978143	Identifier	as		978047	1					
ANR	978144	AssignmentExpression	"* as = r_core_anal_get_stats ( core , from , to , blocksize )"		978047	2		=			
ANR	978145	Identifier	as		978047	0					
ANR	978146	CallExpression	"r_core_anal_get_stats ( core , from , to , blocksize )"		978047	1					
ANR	978147	Callee	r_core_anal_get_stats		978047	0					
ANR	978148	Identifier	r_core_anal_get_stats		978047	0					
ANR	978149	ArgumentList	core		978047	1					
ANR	978150	Argument	core		978047	0					
ANR	978151	Identifier	core		978047	0					
ANR	978152	Argument	from		978047	1					
ANR	978153	Identifier	from		978047	0					
ANR	978154	Argument	to		978047	2					
ANR	978155	Identifier	to		978047	0					
ANR	978156	Argument	blocksize		978047	3					
ANR	978157	Identifier	blocksize		978047	0					
ANR	978158	ForStatement	for ( i = 0 ; i < nblocks ; i ++ )		978047	2					
ANR	978159	ForInit	i = 0 ;	3366:7:97787:97792	978047	0	True				
ANR	978160	AssignmentExpression	i = 0		978047	0		=			
ANR	978161	Identifier	i		978047	0					
ANR	978162	PrimaryExpression	0		978047	1					
ANR	978163	Condition	i < nblocks	3366:14:97794:97804	978047	1	True				
ANR	978164	RelationalExpression	i < nblocks		978047	0		<			
ANR	978165	Identifier	i		978047	0					
ANR	978166	Identifier	nblocks		978047	1					
ANR	978167	PostIncDecOperationExpression	i ++	3366:27:97807:97809	978047	2	True				
ANR	978168	Identifier	i		978047	0					
ANR	978169	IncDec	++		978047	1					
ANR	978170	CompoundStatement		18:3:420:433	978047	3					
ANR	978171	IdentifierDeclStatement	int value = 0 ;	3367:3:97817:97830	978047	0	True				
ANR	978172	IdentifierDecl	value = 0		978047	0					
ANR	978173	IdentifierDeclType	int		978047	0					
ANR	978174	Identifier	value		978047	1					
ANR	978175	AssignmentExpression	value = 0		978047	2		=			
ANR	978176	Identifier	value		978047	0					
ANR	978177	PrimaryExpression	0		978047	1					
ANR	978178	ExpressionStatement	value += as -> block [ i ] . functions	3368:3:97835:97866	978047	1	True				
ANR	978179	AssignmentExpression	value += as -> block [ i ] . functions		978047	0		+=			
ANR	978180	Identifier	value		978047	0					
ANR	978181	MemberAccess	as -> block [ i ] . functions		978047	1					
ANR	978182	ArrayIndexing	as -> block [ i ]		978047	0					
ANR	978183	PtrMemberAccess	as -> block		978047	0					
ANR	978184	Identifier	as		978047	0					
ANR	978185	Identifier	block		978047	1					
ANR	978186	Identifier	i		978047	1					
ANR	978187	Identifier	functions		978047	1					
ANR	978188	ExpressionStatement	value += as -> block [ i ] . in_functions	3369:3:97871:97905	978047	2	True				
ANR	978189	AssignmentExpression	value += as -> block [ i ] . in_functions		978047	0		+=			
ANR	978190	Identifier	value		978047	0					
ANR	978191	MemberAccess	as -> block [ i ] . in_functions		978047	1					
ANR	978192	ArrayIndexing	as -> block [ i ]		978047	0					
ANR	978193	PtrMemberAccess	as -> block		978047	0					
ANR	978194	Identifier	as		978047	0					
ANR	978195	Identifier	block		978047	1					
ANR	978196	Identifier	i		978047	1					
ANR	978197	Identifier	in_functions		978047	1					
ANR	978198	ExpressionStatement	value += as -> block [ i ] . comments	3370:3:97910:97940	978047	3	True				
ANR	978199	AssignmentExpression	value += as -> block [ i ] . comments		978047	0		+=			
ANR	978200	Identifier	value		978047	0					
ANR	978201	MemberAccess	as -> block [ i ] . comments		978047	1					
ANR	978202	ArrayIndexing	as -> block [ i ]		978047	0					
ANR	978203	PtrMemberAccess	as -> block		978047	0					
ANR	978204	Identifier	as		978047	0					
ANR	978205	Identifier	block		978047	1					
ANR	978206	Identifier	i		978047	1					
ANR	978207	Identifier	comments		978047	1					
ANR	978208	ExpressionStatement	value += as -> block [ i ] . symbols	3371:3:97945:97974	978047	4	True				
ANR	978209	AssignmentExpression	value += as -> block [ i ] . symbols		978047	0		+=			
ANR	978210	Identifier	value		978047	0					
ANR	978211	MemberAccess	as -> block [ i ] . symbols		978047	1					
ANR	978212	ArrayIndexing	as -> block [ i ]		978047	0					
ANR	978213	PtrMemberAccess	as -> block		978047	0					
ANR	978214	Identifier	as		978047	0					
ANR	978215	Identifier	block		978047	1					
ANR	978216	Identifier	i		978047	1					
ANR	978217	Identifier	symbols		978047	1					
ANR	978218	ExpressionStatement	value += as -> block [ i ] . flags	3372:3:97979:98006	978047	5	True				
ANR	978219	AssignmentExpression	value += as -> block [ i ] . flags		978047	0		+=			
ANR	978220	Identifier	value		978047	0					
ANR	978221	MemberAccess	as -> block [ i ] . flags		978047	1					
ANR	978222	ArrayIndexing	as -> block [ i ]		978047	0					
ANR	978223	PtrMemberAccess	as -> block		978047	0					
ANR	978224	Identifier	as		978047	0					
ANR	978225	Identifier	block		978047	1					
ANR	978226	Identifier	i		978047	1					
ANR	978227	Identifier	flags		978047	1					
ANR	978228	ExpressionStatement	value += as -> block [ i ] . strings	3373:3:98011:98040	978047	6	True				
ANR	978229	AssignmentExpression	value += as -> block [ i ] . strings		978047	0		+=			
ANR	978230	Identifier	value		978047	0					
ANR	978231	MemberAccess	as -> block [ i ] . strings		978047	1					
ANR	978232	ArrayIndexing	as -> block [ i ]		978047	0					
ANR	978233	PtrMemberAccess	as -> block		978047	0					
ANR	978234	Identifier	as		978047	0					
ANR	978235	Identifier	block		978047	1					
ANR	978236	Identifier	i		978047	1					
ANR	978237	Identifier	strings		978047	1					
ANR	978238	ExpressionStatement	value += as -> block [ i ] . blocks	3374:3:98045:98073	978047	7	True				
ANR	978239	AssignmentExpression	value += as -> block [ i ] . blocks		978047	0		+=			
ANR	978240	Identifier	value		978047	0					
ANR	978241	MemberAccess	as -> block [ i ] . blocks		978047	1					
ANR	978242	ArrayIndexing	as -> block [ i ]		978047	0					
ANR	978243	PtrMemberAccess	as -> block		978047	0					
ANR	978244	Identifier	as		978047	0					
ANR	978245	Identifier	block		978047	1					
ANR	978246	Identifier	i		978047	1					
ANR	978247	Identifier	blocks		978047	1					
ANR	978248	ExpressionStatement	"ptr [ i ] = R_MIN ( 255 , value )"	3375:3:98078:98105	978047	8	True				
ANR	978249	AssignmentExpression	"ptr [ i ] = R_MIN ( 255 , value )"		978047	0		=			
ANR	978250	ArrayIndexing	ptr [ i ]		978047	0					
ANR	978251	Identifier	ptr		978047	0					
ANR	978252	Identifier	i		978047	1					
ANR	978253	CallExpression	"R_MIN ( 255 , value )"		978047	1					
ANR	978254	Callee	R_MIN		978047	0					
ANR	978255	Identifier	R_MIN		978047	0					
ANR	978256	ArgumentList	255		978047	1					
ANR	978257	Argument	255		978047	0					
ANR	978258	PrimaryExpression	255		978047	0					
ANR	978259	Argument	value		978047	1					
ANR	978260	Identifier	value		978047	0					
ANR	978261	ExpressionStatement	r_core_anal_stats_free ( as )	3377:2:98113:98140	978047	3	True				
ANR	978262	CallExpression	r_core_anal_stats_free ( as )		978047	0					
ANR	978263	Callee	r_core_anal_stats_free		978047	0					
ANR	978264	Identifier	r_core_anal_stats_free		978047	0					
ANR	978265	ArgumentList	as		978047	1					
ANR	978266	Argument	as		978047	0					
ANR	978267	Identifier	as		978047	0					
ANR	978268	ReturnStatement	return ptr ;	3378:2:98144:98154	978047	4	True				
ANR	978269	Identifier	ptr		978047	0					
ANR	978270	ForStatement	for ( i = 0 ; i < nblocks ; i ++ )		978047	6					
ANR	978271	ForInit	i = 0 ;	3380:6:98165:98170	978047	0	True				
ANR	978272	AssignmentExpression	i = 0		978047	0		=			
ANR	978273	Identifier	i		978047	0					
ANR	978274	PrimaryExpression	0		978047	1					
ANR	978275	Condition	i < nblocks	3380:13:98172:98182	978047	1	True				
ANR	978276	RelationalExpression	i < nblocks		978047	0		<			
ANR	978277	Identifier	i		978047	0					
ANR	978278	Identifier	nblocks		978047	1					
ANR	978279	PostIncDecOperationExpression	i ++	3380:26:98185:98187	978047	2	True				
ANR	978280	Identifier	i		978047	0					
ANR	978281	IncDec	++		978047	1					
ANR	978282	CompoundStatement		35:2:841:887	978047	3					
ANR	978283	IfStatement	if ( r_cons_is_breaked ( ) )		978047	0					
ANR	978284	Condition	r_cons_is_breaked ( )	3381:6:98198:98217	978047	0	True				
ANR	978285	CallExpression	r_cons_is_breaked ( )		978047	0					
ANR	978286	Callee	r_cons_is_breaked		978047	0					
ANR	978287	Identifier	r_cons_is_breaked		978047	0					
ANR	978288	ArgumentList			978047	1					
ANR	978289	CompoundStatement		32:28:823:823	978047	1					
ANR	978290	BreakStatement	break ;	3382:3:98225:98230	978047	0	True				
ANR	978291	IdentifierDeclStatement	ut64 off = from + ( i + skipblocks ) * blocksize ;	3384:2:98238:98284	978047	1	True				
ANR	978292	IdentifierDecl	off = from + ( i + skipblocks ) * blocksize		978047	0					
ANR	978293	IdentifierDeclType	ut64		978047	0					
ANR	978294	Identifier	off		978047	1					
ANR	978295	AssignmentExpression	off = from + ( i + skipblocks ) * blocksize		978047	2		=			
ANR	978296	Identifier	off		978047	0					
ANR	978297	AdditiveExpression	from + ( i + skipblocks ) * blocksize		978047	1		+			
ANR	978298	Identifier	from		978047	0					
ANR	978299	MultiplicativeExpression	( i + skipblocks ) * blocksize		978047	1		*			
ANR	978300	AdditiveExpression	i + skipblocks		978047	0		+			
ANR	978301	Identifier	i		978047	0					
ANR	978302	Identifier	skipblocks		978047	1					
ANR	978303	Identifier	blocksize		978047	1					
ANR	978304	ForStatement	for ( j = 0 ; j < blocksize ; j ++ )		978047	2					
ANR	978305	ForInit	j = 0 ;	3385:7:98293:98298	978047	0	True				
ANR	978306	AssignmentExpression	j = 0		978047	0		=			
ANR	978307	Identifier	j		978047	0					
ANR	978308	PrimaryExpression	0		978047	1					
ANR	978309	Condition	j < blocksize	3385:14:98300:98312	978047	1	True				
ANR	978310	RelationalExpression	j < blocksize		978047	0		<			
ANR	978311	Identifier	j		978047	0					
ANR	978312	Identifier	blocksize		978047	1					
ANR	978313	PostIncDecOperationExpression	j ++	3385:30:98316:98318	978047	2	True				
ANR	978314	Identifier	j		978047	0					
ANR	978315	IncDec	++		978047	1					
ANR	978316	CompoundStatement		44:3:1100:1166	978047	3					
ANR	978317	IfStatement	if ( type == 'a' )		978047	0					
ANR	978318	Condition	type == 'a'	3386:7:98330:98340	978047	0	True				
ANR	978319	EqualityExpression	type == 'a'		978047	0		==			
ANR	978320	Identifier	type		978047	0					
ANR	978321	PrimaryExpression	'a'		978047	1					
ANR	978322	CompoundStatement		38:4:952:1015	978047	1					
ANR	978323	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , off + j , 0 ) ;"	3387:4:98349:98412	978047	0	True				
ANR	978324	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , off + j , 0 )"		978047	0					
ANR	978325	IdentifierDeclType	RAnalFunction *		978047	0					
ANR	978326	Identifier	fcn		978047	1					
ANR	978327	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , off + j , 0 )"		978047	2		=			
ANR	978328	Identifier	fcn		978047	0					
ANR	978329	CallExpression	"r_anal_get_fcn_in ( core -> anal , off + j , 0 )"		978047	1					
ANR	978330	Callee	r_anal_get_fcn_in		978047	0					
ANR	978331	Identifier	r_anal_get_fcn_in		978047	0					
ANR	978332	ArgumentList	core -> anal		978047	1					
ANR	978333	Argument	core -> anal		978047	0					
ANR	978334	PtrMemberAccess	core -> anal		978047	0					
ANR	978335	Identifier	core		978047	0					
ANR	978336	Identifier	anal		978047	1					
ANR	978337	Argument	off + j		978047	1					
ANR	978338	AdditiveExpression	off + j		978047	0		+			
ANR	978339	Identifier	off		978047	0					
ANR	978340	Identifier	j		978047	1					
ANR	978341	Argument	0		978047	2					
ANR	978342	PrimaryExpression	0		978047	0					
ANR	978343	IfStatement	if ( fcn )		978047	1					
ANR	978344	Condition	fcn	3388:8:98422:98424	978047	0	True				
ANR	978345	Identifier	fcn		978047	0					
ANR	978346	CompoundStatement		39:13:1030:1030	978047	1					
ANR	978347	ExpressionStatement	ptr [ i ] = r_list_length ( fcn -> bbs )	3389:5:98434:98467	978047	0	True				
ANR	978348	AssignmentExpression	ptr [ i ] = r_list_length ( fcn -> bbs )		978047	0		=			
ANR	978349	ArrayIndexing	ptr [ i ]		978047	0					
ANR	978350	Identifier	ptr		978047	0					
ANR	978351	Identifier	i		978047	1					
ANR	978352	CallExpression	r_list_length ( fcn -> bbs )		978047	1					
ANR	978353	Callee	r_list_length		978047	0					
ANR	978354	Identifier	r_list_length		978047	0					
ANR	978355	ArgumentList	fcn -> bbs		978047	1					
ANR	978356	Argument	fcn -> bbs		978047	0					
ANR	978357	PtrMemberAccess	fcn -> bbs		978047	0					
ANR	978358	Identifier	fcn		978047	0					
ANR	978359	Identifier	bbs		978047	1					
ANR	978360	ContinueStatement	continue ;	3391:4:98479:98487	978047	2	True				
ANR	978361	IdentifierDeclStatement	"RAnalOp * op = r_core_anal_op ( core , off + j , R_ANAL_OP_MASK_BASIC ) ;"	3393:3:98497:98563	978047	1	True				
ANR	978362	IdentifierDecl	"* op = r_core_anal_op ( core , off + j , R_ANAL_OP_MASK_BASIC )"		978047	0					
ANR	978363	IdentifierDeclType	RAnalOp *		978047	0					
ANR	978364	Identifier	op		978047	1					
ANR	978365	AssignmentExpression	"* op = r_core_anal_op ( core , off + j , R_ANAL_OP_MASK_BASIC )"		978047	2		=			
ANR	978366	Identifier	op		978047	0					
ANR	978367	CallExpression	"r_core_anal_op ( core , off + j , R_ANAL_OP_MASK_BASIC )"		978047	1					
ANR	978368	Callee	r_core_anal_op		978047	0					
ANR	978369	Identifier	r_core_anal_op		978047	0					
ANR	978370	ArgumentList	core		978047	1					
ANR	978371	Argument	core		978047	0					
ANR	978372	Identifier	core		978047	0					
ANR	978373	Argument	off + j		978047	1					
ANR	978374	AdditiveExpression	off + j		978047	0		+			
ANR	978375	Identifier	off		978047	0					
ANR	978376	Identifier	j		978047	1					
ANR	978377	Argument	R_ANAL_OP_MASK_BASIC		978047	2					
ANR	978378	Identifier	R_ANAL_OP_MASK_BASIC		978047	0					
ANR	978379	IfStatement	if ( op )		978047	2					
ANR	978380	Condition	op	3394:7:98572:98573	978047	0	True				
ANR	978381	Identifier	op		978047	0					
ANR	978382	CompoundStatement		45:11:1179:1179	978047	1					
ANR	978383	IfStatement	if ( op -> size < 1 )		978047	0					
ANR	978384	Condition	op -> size < 1	3395:8:98586:98597	978047	0	True				
ANR	978385	RelationalExpression	op -> size < 1		978047	0		<			
ANR	978386	PtrMemberAccess	op -> size		978047	0					
ANR	978387	Identifier	op		978047	0					
ANR	978388	Identifier	size		978047	1					
ANR	978389	PrimaryExpression	1		978047	1					
ANR	978390	CompoundStatement		46:22:1203:1203	978047	1					
ANR	978391	IfStatement	if ( type == 'i' )		978047	0					
ANR	978392	Condition	type == 'i'	3397:9:98630:98640	978047	0	True				
ANR	978393	EqualityExpression	type == 'i'		978047	0		==			
ANR	978394	Identifier	type		978047	0					
ANR	978395	PrimaryExpression	'i'		978047	1					
ANR	978396	CompoundStatement		48:22:1246:1246	978047	1					
ANR	978397	ExpressionStatement	"matchBar ( ptr , i )"	3398:6:98651:98668	978047	0	True				
ANR	978398	CallExpression	"matchBar ( ptr , i )"		978047	0					
ANR	978399	Callee	matchBar		978047	0					
ANR	978400	Identifier	matchBar		978047	0					
ANR	978401	ArgumentList	ptr		978047	1					
ANR	978402	Argument	ptr		978047	0					
ANR	978403	Identifier	ptr		978047	0					
ANR	978404	Argument	i		978047	1					
ANR	978405	Identifier	i		978047	0					
ANR	978406	ElseStatement	else		978047	0					
ANR	978407	CompoundStatement		51:11:1291:1291	978047	0					
ANR	978408	IfStatement	"if ( checkAnalType ( op , type ) )"		978047	0					
ANR	978409	Condition	"checkAnalType ( op , type )"	3401:9:98699:98722	978047	0	True				
ANR	978410	CallExpression	"checkAnalType ( op , type )"		978047	0					
ANR	978411	Callee	checkAnalType		978047	0					
ANR	978412	Identifier	checkAnalType		978047	0					
ANR	978413	ArgumentList	op		978047	1					
ANR	978414	Argument	op		978047	0					
ANR	978415	Identifier	op		978047	0					
ANR	978416	Argument	type		978047	1					
ANR	978417	Identifier	type		978047	0					
ANR	978418	CompoundStatement		52:35:1328:1328	978047	1					
ANR	978419	ExpressionStatement	"matchBar ( ptr , i )"	3402:6:98733:98750	978047	0	True				
ANR	978420	CallExpression	"matchBar ( ptr , i )"		978047	0					
ANR	978421	Callee	matchBar		978047	0					
ANR	978422	Identifier	matchBar		978047	0					
ANR	978423	ArgumentList	ptr		978047	1					
ANR	978424	Argument	ptr		978047	0					
ANR	978425	Identifier	ptr		978047	0					
ANR	978426	Argument	i		978047	1					
ANR	978427	Identifier	i		978047	0					
ANR	978428	IfStatement	if ( op -> size > 0 )		978047	1					
ANR	978429	Condition	op -> size > 0	3405:8:98773:98784	978047	0	True				
ANR	978430	RelationalExpression	op -> size > 0		978047	0		>			
ANR	978431	PtrMemberAccess	op -> size		978047	0					
ANR	978432	Identifier	op		978047	0					
ANR	978433	Identifier	size		978047	1					
ANR	978434	PrimaryExpression	0		978047	1					
ANR	978435	CompoundStatement		56:22:1390:1390	978047	1					
ANR	978436	ExpressionStatement	j += op -> size - 1	3406:5:98794:98811	978047	0	True				
ANR	978437	AssignmentExpression	j += op -> size - 1		978047	0		+=			
ANR	978438	Identifier	j		978047	0					
ANR	978439	AdditiveExpression	op -> size - 1		978047	1		-			
ANR	978440	PtrMemberAccess	op -> size		978047	0					
ANR	978441	Identifier	op		978047	0					
ANR	978442	Identifier	size		978047	1					
ANR	978443	PrimaryExpression	1		978047	1					
ANR	978444	ExpressionStatement	r_anal_op_free ( op )	3408:4:98823:98842	978047	2	True				
ANR	978445	CallExpression	r_anal_op_free ( op )		978047	0					
ANR	978446	Callee	r_anal_op_free		978047	0					
ANR	978447	Identifier	r_anal_op_free		978047	0					
ANR	978448	ArgumentList	op		978047	1					
ANR	978449	Argument	op		978047	0					
ANR	978450	Identifier	op		978047	0					
ANR	978451	ElseStatement	else		978047	0					
ANR	978452	CompoundStatement		60:10:1457:1457	978047	0					
ANR	978453	IfStatement	if ( type == 'i' )		978047	0					
ANR	978454	Condition	type == 'i'	3410:8:98864:98874	978047	0	True				
ANR	978455	EqualityExpression	type == 'i'		978047	0		==			
ANR	978456	Identifier	type		978047	0					
ANR	978457	PrimaryExpression	'i'		978047	1					
ANR	978458	CompoundStatement		61:21:1480:1480	978047	1					
ANR	978459	ExpressionStatement	"matchBar ( ptr , i )"	3411:5:98884:98901	978047	0	True				
ANR	978460	CallExpression	"matchBar ( ptr , i )"		978047	0					
ANR	978461	Callee	matchBar		978047	0					
ANR	978462	Identifier	matchBar		978047	0					
ANR	978463	ArgumentList	ptr		978047	1					
ANR	978464	Argument	ptr		978047	0					
ANR	978465	Identifier	ptr		978047	0					
ANR	978466	Argument	i		978047	1					
ANR	978467	Identifier	i		978047	0					
ANR	978468	ExpressionStatement	free ( p )	3416:1:98922:98930	978047	7	True				
ANR	978469	CallExpression	free ( p )		978047	0					
ANR	978470	Callee	free		978047	0					
ANR	978471	Identifier	free		978047	0					
ANR	978472	ArgumentList	p		978047	1					
ANR	978473	Argument	p		978047	0					
ANR	978474	Identifier	p		978047	0					
ANR	978475	ReturnStatement	return ptr ;	3417:1:98933:98943	978047	8	True				
ANR	978476	Identifier	ptr		978047	0					
ANR	978477	ReturnType	static ut8 *		978047	1					
ANR	978478	Identifier	analBars		978047	2					
ANR	978479	ParameterList	"RCore * core , int type , int nblocks , int blocksize , int skipblocks , ut64 from"		978047	3					
ANR	978480	Parameter	RCore * core	3350:21:97318:97328	978047	0	True				
ANR	978481	ParameterType	RCore *		978047	0					
ANR	978482	Identifier	core		978047	1					
ANR	978483	Parameter	int type	3350:34:97331:97338	978047	1	True				
ANR	978484	ParameterType	int		978047	0					
ANR	978485	Identifier	type		978047	1					
ANR	978486	Parameter	int nblocks	3350:44:97341:97351	978047	2	True				
ANR	978487	ParameterType	int		978047	0					
ANR	978488	Identifier	nblocks		978047	1					
ANR	978489	Parameter	int blocksize	3350:57:97354:97366	978047	3	True				
ANR	978490	ParameterType	int		978047	0					
ANR	978491	Identifier	blocksize		978047	1					
ANR	978492	Parameter	int skipblocks	3350:72:97369:97382	978047	4	True				
ANR	978493	ParameterType	int		978047	0					
ANR	978494	Identifier	skipblocks		978047	1					
ANR	978495	Parameter	ut64 from	3350:88:97385:97393	978047	5	True				
ANR	978496	ParameterType	ut64		978047	0					
ANR	978497	Identifier	from		978047	1					
ANR	978498	CFGEntryNode	ENTRY		978047		True				
ANR	978499	CFGExitNode	EXIT		978047		True				
ANR	978500	Symbol	blocksize		978047						
ANR	978501	Symbol	* fcn		978047						
ANR	978502	Symbol	* op		978047						
ANR	978503	Symbol	r_core_anal_get_stats		978047						
ANR	978504	Symbol	* core		978047						
ANR	978505	Symbol	skipblocks		978047						
ANR	978506	Symbol	calloc		978047						
ANR	978507	Symbol	r_core_anal_op		978047						
ANR	978508	Symbol	type		978047						
ANR	978509	Symbol	as -> block [ i ] . flags		978047						
ANR	978510	Symbol	as -> block [ i ] . blocks		978047						
ANR	978511	Symbol	core -> anal		978047						
ANR	978512	Symbol	R_ANAL_OP_MASK_BASIC		978047						
ANR	978513	Symbol	as -> block [ i ] . strings		978047						
ANR	978514	Symbol	fcn		978047						
ANR	978515	Symbol	r_cons_is_breaked		978047						
ANR	978516	Symbol	checkAnalType		978047						
ANR	978517	Symbol	* ptr		978047						
ANR	978518	Symbol	from		978047						
ANR	978519	Symbol	* * as		978047						
ANR	978520	Symbol	as -> block [ i ] . in_functions		978047						
ANR	978521	Symbol	value		978047						
ANR	978522	Symbol	malloc		978047						
ANR	978523	Symbol	op		978047						
ANR	978524	Symbol	NULL		978047						
ANR	978525	Symbol	as -> block [ i ] . symbols		978047						
ANR	978526	Symbol	as -> block [ i ] . functions		978047						
ANR	978527	Symbol	* as -> block		978047						
ANR	978528	Symbol	i		978047						
ANR	978529	Symbol	j		978047						
ANR	978530	Symbol	R_MIN		978047						
ANR	978531	Symbol	off		978047						
ANR	978532	Symbol	ptr		978047						
ANR	978533	Symbol	p		978047						
ANR	978534	Symbol	core		978047						
ANR	978535	Symbol	as -> block		978047						
ANR	978536	Symbol	as		978047						
ANR	978537	Symbol	* i		978047						
ANR	978538	Symbol	r_anal_get_fcn_in		978047						
ANR	978539	Symbol	fcn -> bbs		978047						
ANR	978540	Symbol	as -> block [ i ] . comments		978047						
ANR	978541	Symbol	nblocks		978047						
ANR	978542	Symbol	op -> size		978047						
ANR	978543	Symbol	to		978047						
ANR	978544	Symbol	* as		978047						
ANR	978545	Symbol	r_list_length		978047						
ANR	978546	Function	cmd_print_bars	3420:0:98948:108935							
ANR	978547	FunctionDef	"cmd_print_bars (RCore * core , const char * input)"		978546	0					
ANR	978548	CompoundStatement		3420:59:99007:108935	978546	0					
ANR	978549	IdentifierDeclStatement	bool print_bars = false ;	3421:1:99010:99033	978546	0	True				
ANR	978550	IdentifierDecl	print_bars = false		978546	0					
ANR	978551	IdentifierDeclType	bool		978546	0					
ANR	978552	Identifier	print_bars		978546	1					
ANR	978553	AssignmentExpression	print_bars = false		978546	2		=			
ANR	978554	Identifier	false		978546	0					
ANR	978555	Identifier	false		978546	1					
ANR	978556	IdentifierDeclStatement	ut8 * ptr = NULL ;	3422:1:99036:99051	978546	1	True				
ANR	978557	IdentifierDecl	* ptr = NULL		978546	0					
ANR	978558	IdentifierDeclType	ut8 *		978546	0					
ANR	978559	Identifier	ptr		978546	1					
ANR	978560	AssignmentExpression	* ptr = NULL		978546	2		=			
ANR	978561	Identifier	NULL		978546	0					
ANR	978562	Identifier	NULL		978546	1					
ANR	978563	IdentifierDeclStatement	int nblocks = - 1 ;	3424:1:99091:99107	978546	2	True				
ANR	978564	IdentifierDecl	nblocks = - 1		978546	0					
ANR	978565	IdentifierDeclType	int		978546	0					
ANR	978566	Identifier	nblocks		978546	1					
ANR	978567	AssignmentExpression	nblocks = - 1		978546	2		=			
ANR	978568	Identifier	nblocks		978546	0					
ANR	978569	UnaryOperationExpression	- 1		978546	1					
ANR	978570	UnaryOperator	-		978546	0					
ANR	978571	PrimaryExpression	1		978546	1					
ANR	978572	IdentifierDeclStatement	ut64 totalsize = UT64_MAX ;	3425:1:99110:99135	978546	3	True				
ANR	978573	IdentifierDecl	totalsize = UT64_MAX		978546	0					
ANR	978574	IdentifierDeclType	ut64		978546	0					
ANR	978575	Identifier	totalsize		978546	1					
ANR	978576	AssignmentExpression	totalsize = UT64_MAX		978546	2		=			
ANR	978577	Identifier	UT64_MAX		978546	0					
ANR	978578	Identifier	UT64_MAX		978546	1					
ANR	978579	IdentifierDeclStatement	int skipblocks = - 1 ;	3426:1:99138:99157	978546	4	True				
ANR	978580	IdentifierDecl	skipblocks = - 1		978546	0					
ANR	978581	IdentifierDeclType	int		978546	0					
ANR	978582	Identifier	skipblocks		978546	1					
ANR	978583	AssignmentExpression	skipblocks = - 1		978546	2		=			
ANR	978584	Identifier	skipblocks		978546	0					
ANR	978585	UnaryOperationExpression	- 1		978546	1					
ANR	978586	UnaryOperator	-		978546	0					
ANR	978587	PrimaryExpression	1		978546	1					
ANR	978588	IdentifierDeclStatement	RIOMap * map ;	3427:1:99160:99171	978546	5	True				
ANR	978589	IdentifierDecl	* map		978546	0					
ANR	978590	IdentifierDeclType	RIOMap *		978546	0					
ANR	978591	Identifier	map		978546	1					
ANR	978592	IdentifierDeclStatement	RListIter * iter ;	3428:1:99174:99189	978546	6	True				
ANR	978593	IdentifierDecl	* iter		978546	0					
ANR	978594	IdentifierDeclType	RListIter *		978546	0					
ANR	978595	Identifier	iter		978546	1					
ANR	978596	IdentifierDeclStatement	"ut64 from = 0 , to = 0 ;"	3429:1:99192:99213	978546	7	True				
ANR	978597	IdentifierDecl	from = 0		978546	0					
ANR	978598	IdentifierDeclType	ut64		978546	0					
ANR	978599	Identifier	from		978546	1					
ANR	978600	AssignmentExpression	from = 0		978546	2		=			
ANR	978601	Identifier	from		978546	0					
ANR	978602	PrimaryExpression	0		978546	1					
ANR	978603	IdentifierDecl	to = 0		978546	1					
ANR	978604	IdentifierDeclType	ut64		978546	0					
ANR	978605	Identifier	to		978546	1					
ANR	978606	AssignmentExpression	to = 0		978546	2		=			
ANR	978607	Identifier	to		978546	0					
ANR	978608	PrimaryExpression	0		978546	1					
ANR	978609	IdentifierDeclStatement	"RList * list = r_core_get_boundaries_prot ( core , - 1 , NULL , ""zoom"" ) ;"	3430:1:99216:99281	978546	8	True				
ANR	978610	IdentifierDecl	"* list = r_core_get_boundaries_prot ( core , - 1 , NULL , ""zoom"" )"		978546	0					
ANR	978611	IdentifierDeclType	RList *		978546	0					
ANR	978612	Identifier	list		978546	1					
ANR	978613	AssignmentExpression	"* list = r_core_get_boundaries_prot ( core , - 1 , NULL , ""zoom"" )"		978546	2		=			
ANR	978614	Identifier	list		978546	0					
ANR	978615	CallExpression	"r_core_get_boundaries_prot ( core , - 1 , NULL , ""zoom"" )"		978546	1					
ANR	978616	Callee	r_core_get_boundaries_prot		978546	0					
ANR	978617	Identifier	r_core_get_boundaries_prot		978546	0					
ANR	978618	ArgumentList	core		978546	1					
ANR	978619	Argument	core		978546	0					
ANR	978620	Identifier	core		978546	0					
ANR	978621	Argument	- 1		978546	1					
ANR	978622	UnaryOperationExpression	- 1		978546	0					
ANR	978623	UnaryOperator	-		978546	0					
ANR	978624	PrimaryExpression	1		978546	1					
ANR	978625	Argument	NULL		978546	2					
ANR	978626	Identifier	NULL		978546	0					
ANR	978627	Argument	"""zoom"""		978546	3					
ANR	978628	PrimaryExpression	"""zoom"""		978546	0					
ANR	978629	IfStatement	if ( ! list )		978546	9					
ANR	978630	Condition	! list	3431:5:99288:99292	978546	0	True				
ANR	978631	UnaryOperationExpression	! list		978546	0					
ANR	978632	UnaryOperator	!		978546	0					
ANR	978633	Identifier	list		978546	1					
ANR	978634	CompoundStatement		12:12:287:287	978546	1					
ANR	978635	GotoStatement	goto beach ;	3432:2:99299:99309	978546	0	True				
ANR	978636	Identifier	beach		978546	0					
ANR	978637	IdentifierDeclStatement	ut64 blocksize = 0 ;	3435:1:99316:99334	978546	10	True				
ANR	978638	IdentifierDecl	blocksize = 0		978546	0					
ANR	978639	IdentifierDeclType	ut64		978546	0					
ANR	978640	Identifier	blocksize		978546	1					
ANR	978641	AssignmentExpression	blocksize = 0		978546	2		=			
ANR	978642	Identifier	blocksize		978546	0					
ANR	978643	PrimaryExpression	0		978546	1					
ANR	978644	IdentifierDeclStatement	int mode = 'b' ;	3436:1:99337:99351	978546	11	True				
ANR	978645	IdentifierDecl	mode = 'b'		978546	0					
ANR	978646	IdentifierDeclType	int		978546	0					
ANR	978647	Identifier	mode		978546	1					
ANR	978648	AssignmentExpression	mode = 'b'		978546	2		=			
ANR	978649	Identifier	mode		978546	0					
ANR	978650	PrimaryExpression	'b'		978546	1					
ANR	978651	IdentifierDeclStatement	int submode = 0 ;	3437:1:99370:99385	978546	12	True				
ANR	978652	IdentifierDecl	submode = 0		978546	0					
ANR	978653	IdentifierDeclType	int		978546	0					
ANR	978654	Identifier	submode		978546	1					
ANR	978655	AssignmentExpression	submode = 0		978546	2		=			
ANR	978656	Identifier	submode		978546	0					
ANR	978657	PrimaryExpression	0		978546	1					
ANR	978658	IfStatement	if ( input [ 0 ] )		978546	13					
ANR	978659	Condition	input [ 0 ]	3439:5:99406:99413	978546	0	True				
ANR	978660	ArrayIndexing	input [ 0 ]		978546	0					
ANR	978661	Identifier	input		978546	0					
ANR	978662	PrimaryExpression	0		978546	1					
ANR	978663	CompoundStatement		21:2:412:443	978546	1					
ANR	978664	IdentifierDeclStatement	"char * spc = strchr ( input , ' ' ) ;"	3440:2:99420:99451	978546	0	True				
ANR	978665	IdentifierDecl	"* spc = strchr ( input , ' ' )"		978546	0					
ANR	978666	IdentifierDeclType	char *		978546	0					
ANR	978667	Identifier	spc		978546	1					
ANR	978668	AssignmentExpression	"* spc = strchr ( input , ' ' )"		978546	2		=			
ANR	978669	Identifier	spc		978546	0					
ANR	978670	CallExpression	"strchr ( input , ' ' )"		978546	1					
ANR	978671	Callee	strchr		978546	0					
ANR	978672	Identifier	strchr		978546	0					
ANR	978673	ArgumentList	input		978546	1					
ANR	978674	Argument	input		978546	0					
ANR	978675	Identifier	input		978546	0					
ANR	978676	Argument	' '		978546	1					
ANR	978677	PrimaryExpression	' '		978546	0					
ANR	978678	IfStatement	if ( spc )		978546	1					
ANR	978679	Condition	spc	3441:6:99459:99461	978546	0	True				
ANR	978680	Identifier	spc		978546	0					
ANR	978681	CompoundStatement		22:11:456:456	978546	1					
ANR	978682	ExpressionStatement	"nblocks = r_num_math ( core -> num , spc + 1 )"	3442:3:99469:99510	978546	0	True				
ANR	978683	AssignmentExpression	"nblocks = r_num_math ( core -> num , spc + 1 )"		978546	0		=			
ANR	978684	Identifier	nblocks		978546	0					
ANR	978685	CallExpression	"r_num_math ( core -> num , spc + 1 )"		978546	1					
ANR	978686	Callee	r_num_math		978546	0					
ANR	978687	Identifier	r_num_math		978546	0					
ANR	978688	ArgumentList	core -> num		978546	1					
ANR	978689	Argument	core -> num		978546	0					
ANR	978690	PtrMemberAccess	core -> num		978546	0					
ANR	978691	Identifier	core		978546	0					
ANR	978692	Identifier	num		978546	1					
ANR	978693	Argument	spc + 1		978546	1					
ANR	978694	AdditiveExpression	spc + 1		978546	0		+			
ANR	978695	Identifier	spc		978546	0					
ANR	978696	PrimaryExpression	1		978546	1					
ANR	978697	IfStatement	if ( nblocks < 1 )		978546	1					
ANR	978698	Condition	nblocks < 1	3443:7:99519:99529	978546	0	True				
ANR	978699	RelationalExpression	nblocks < 1		978546	0		<			
ANR	978700	Identifier	nblocks		978546	0					
ANR	978701	PrimaryExpression	1		978546	1					
ANR	978702	CompoundStatement		24:20:524:524	978546	1					
ANR	978703	GotoStatement	goto beach ;	3444:4:99538:99548	978546	0	True				
ANR	978704	Identifier	beach		978546	0					
ANR	978705	ExpressionStatement	"spc = strchr ( spc + 1 , ' ' )"	3446:3:99558:99585	978546	2	True				
ANR	978706	AssignmentExpression	"spc = strchr ( spc + 1 , ' ' )"		978546	0		=			
ANR	978707	Identifier	spc		978546	0					
ANR	978708	CallExpression	"strchr ( spc + 1 , ' ' )"		978546	1					
ANR	978709	Callee	strchr		978546	0					
ANR	978710	Identifier	strchr		978546	0					
ANR	978711	ArgumentList	spc + 1		978546	1					
ANR	978712	Argument	spc + 1		978546	0					
ANR	978713	AdditiveExpression	spc + 1		978546	0		+			
ANR	978714	Identifier	spc		978546	0					
ANR	978715	PrimaryExpression	1		978546	1					
ANR	978716	Argument	' '		978546	1					
ANR	978717	PrimaryExpression	' '		978546	0					
ANR	978718	IfStatement	if ( spc )		978546	3					
ANR	978719	Condition	spc	3447:7:99594:99596	978546	0	True				
ANR	978720	Identifier	spc		978546	0					
ANR	978721	CompoundStatement		28:12:591:591	978546	1					
ANR	978722	ExpressionStatement	"totalsize = r_num_math ( core -> num , spc + 1 )"	3448:4:99605:99648	978546	0	True				
ANR	978723	AssignmentExpression	"totalsize = r_num_math ( core -> num , spc + 1 )"		978546	0		=			
ANR	978724	Identifier	totalsize		978546	0					
ANR	978725	CallExpression	"r_num_math ( core -> num , spc + 1 )"		978546	1					
ANR	978726	Callee	r_num_math		978546	0					
ANR	978727	Identifier	r_num_math		978546	0					
ANR	978728	ArgumentList	core -> num		978546	1					
ANR	978729	Argument	core -> num		978546	0					
ANR	978730	PtrMemberAccess	core -> num		978546	0					
ANR	978731	Identifier	core		978546	0					
ANR	978732	Identifier	num		978546	1					
ANR	978733	Argument	spc + 1		978546	1					
ANR	978734	AdditiveExpression	spc + 1		978546	0		+			
ANR	978735	Identifier	spc		978546	0					
ANR	978736	PrimaryExpression	1		978546	1					
ANR	978737	ExpressionStatement	"spc = strchr ( spc + 1 , ' ' )"	3449:4:99654:99681	978546	1	True				
ANR	978738	AssignmentExpression	"spc = strchr ( spc + 1 , ' ' )"		978546	0		=			
ANR	978739	Identifier	spc		978546	0					
ANR	978740	CallExpression	"strchr ( spc + 1 , ' ' )"		978546	1					
ANR	978741	Callee	strchr		978546	0					
ANR	978742	Identifier	strchr		978546	0					
ANR	978743	ArgumentList	spc + 1		978546	1					
ANR	978744	Argument	spc + 1		978546	0					
ANR	978745	AdditiveExpression	spc + 1		978546	0		+			
ANR	978746	Identifier	spc		978546	0					
ANR	978747	PrimaryExpression	1		978546	1					
ANR	978748	Argument	' '		978546	1					
ANR	978749	PrimaryExpression	' '		978546	0					
ANR	978750	IfStatement	if ( spc )		978546	2					
ANR	978751	Condition	spc	3450:8:99691:99693	978546	0	True				
ANR	978752	Identifier	spc		978546	0					
ANR	978753	CompoundStatement		31:13:688:688	978546	1					
ANR	978754	ExpressionStatement	"skipblocks = r_num_math ( core -> num , spc + 1 )"	3451:5:99703:99747	978546	0	True				
ANR	978755	AssignmentExpression	"skipblocks = r_num_math ( core -> num , spc + 1 )"		978546	0		=			
ANR	978756	Identifier	skipblocks		978546	0					
ANR	978757	CallExpression	"r_num_math ( core -> num , spc + 1 )"		978546	1					
ANR	978758	Callee	r_num_math		978546	0					
ANR	978759	Identifier	r_num_math		978546	0					
ANR	978760	ArgumentList	core -> num		978546	1					
ANR	978761	Argument	core -> num		978546	0					
ANR	978762	PtrMemberAccess	core -> num		978546	0					
ANR	978763	Identifier	core		978546	0					
ANR	978764	Identifier	num		978546	1					
ANR	978765	Argument	spc + 1		978546	1					
ANR	978766	AdditiveExpression	spc + 1		978546	0		+			
ANR	978767	Identifier	spc		978546	0					
ANR	978768	PrimaryExpression	1		978546	1					
ANR	978769	ExpressionStatement	mode = input [ 1 ]	3455:2:99766:99781	978546	2	True				
ANR	978770	AssignmentExpression	mode = input [ 1 ]		978546	0		=			
ANR	978771	Identifier	mode		978546	0					
ANR	978772	ArrayIndexing	input [ 1 ]		978546	1					
ANR	978773	Identifier	input		978546	0					
ANR	978774	PrimaryExpression	1		978546	1					
ANR	978775	IfStatement	if ( mode && mode != ' ' && input [ 2 ] )		978546	3					
ANR	978776	Condition	mode && mode != ' ' && input [ 2 ]	3456:6:99789:99819	978546	0	True				
ANR	978777	AndExpression	mode && mode != ' ' && input [ 2 ]		978546	0		&&			
ANR	978778	Identifier	mode		978546	0					
ANR	978779	AndExpression	mode != ' ' && input [ 2 ]		978546	1		&&			
ANR	978780	EqualityExpression	mode != ' '		978546	0		!=			
ANR	978781	Identifier	mode		978546	0					
ANR	978782	PrimaryExpression	' '		978546	1					
ANR	978783	ArrayIndexing	input [ 2 ]		978546	1					
ANR	978784	Identifier	input		978546	0					
ANR	978785	PrimaryExpression	2		978546	1					
ANR	978786	CompoundStatement		37:39:814:814	978546	1					
ANR	978787	ExpressionStatement	submode = input [ 2 ]	3457:3:99827:99845	978546	0	True				
ANR	978788	AssignmentExpression	submode = input [ 2 ]		978546	0		=			
ANR	978789	Identifier	submode		978546	0					
ANR	978790	ArrayIndexing	input [ 2 ]		978546	1					
ANR	978791	Identifier	input		978546	0					
ANR	978792	PrimaryExpression	2		978546	1					
ANR	978793	IfStatement	if ( skipblocks < 0 )		978546	14					
ANR	978794	Condition	skipblocks < 0	3460:5:99859:99872	978546	0	True				
ANR	978795	RelationalExpression	skipblocks < 0		978546	0		<			
ANR	978796	Identifier	skipblocks		978546	0					
ANR	978797	PrimaryExpression	0		978546	1					
ANR	978798	CompoundStatement		41:21:867:867	978546	1					
ANR	978799	ExpressionStatement	skipblocks = 0	3461:2:99879:99893	978546	0	True				
ANR	978800	AssignmentExpression	skipblocks = 0		978546	0		=			
ANR	978801	Identifier	skipblocks		978546	0					
ANR	978802	PrimaryExpression	0		978546	1					
ANR	978803	IfStatement	if ( totalsize == UT64_MAX )		978546	15					
ANR	978804	Condition	totalsize == UT64_MAX	3463:5:99903:99923	978546	0	True				
ANR	978805	EqualityExpression	totalsize == UT64_MAX		978546	0		==			
ANR	978806	Identifier	totalsize		978546	0					
ANR	978807	Identifier	UT64_MAX		978546	1					
ANR	978808	CompoundStatement		44:28:918:918	978546	1					
ANR	978809	IfStatement	"if ( r_config_get_i ( core -> config , ""cfg.debug"" ) )"		978546	0					
ANR	978810	Condition	"r_config_get_i ( core -> config , ""cfg.debug"" )"	3464:6:99934:99975	978546	0	True				
ANR	978811	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		978546	0					
ANR	978812	Callee	r_config_get_i		978546	0					
ANR	978813	Identifier	r_config_get_i		978546	0					
ANR	978814	ArgumentList	core -> config		978546	1					
ANR	978815	Argument	core -> config		978546	0					
ANR	978816	PtrMemberAccess	core -> config		978546	0					
ANR	978817	Identifier	core		978546	0					
ANR	978818	Identifier	config		978546	1					
ANR	978819	Argument	"""cfg.debug"""		978546	1					
ANR	978820	PrimaryExpression	"""cfg.debug"""		978546	0					
ANR	978821	CompoundStatement		46:3:975:1033	978546	1					
ANR	978822	IdentifierDeclStatement	"RDebugMap * map = r_debug_map_get ( core -> dbg , core -> offset ) ;"	3465:3:99983:100041	978546	0	True				
ANR	978823	IdentifierDecl	"* map = r_debug_map_get ( core -> dbg , core -> offset )"		978546	0					
ANR	978824	IdentifierDeclType	RDebugMap *		978546	0					
ANR	978825	Identifier	map		978546	1					
ANR	978826	AssignmentExpression	"* map = r_debug_map_get ( core -> dbg , core -> offset )"		978546	2		=			
ANR	978827	Identifier	map		978546	0					
ANR	978828	CallExpression	"r_debug_map_get ( core -> dbg , core -> offset )"		978546	1					
ANR	978829	Callee	r_debug_map_get		978546	0					
ANR	978830	Identifier	r_debug_map_get		978546	0					
ANR	978831	ArgumentList	core -> dbg		978546	1					
ANR	978832	Argument	core -> dbg		978546	0					
ANR	978833	PtrMemberAccess	core -> dbg		978546	0					
ANR	978834	Identifier	core		978546	0					
ANR	978835	Identifier	dbg		978546	1					
ANR	978836	Argument	core -> offset		978546	1					
ANR	978837	PtrMemberAccess	core -> offset		978546	0					
ANR	978838	Identifier	core		978546	0					
ANR	978839	Identifier	offset		978546	1					
ANR	978840	IfStatement	if ( map )		978546	1					
ANR	978841	Condition	map	3466:7:100050:100052	978546	0	True				
ANR	978842	Identifier	map		978546	0					
ANR	978843	CompoundStatement		47:12:1047:1047	978546	1					
ANR	978844	ExpressionStatement	totalsize = map -> addr_end - map -> addr	3467:4:100061:100098	978546	0	True				
ANR	978845	AssignmentExpression	totalsize = map -> addr_end - map -> addr		978546	0		=			
ANR	978846	Identifier	totalsize		978546	0					
ANR	978847	AdditiveExpression	map -> addr_end - map -> addr		978546	1		-			
ANR	978848	PtrMemberAccess	map -> addr_end		978546	0					
ANR	978849	Identifier	map		978546	0					
ANR	978850	Identifier	addr_end		978546	1					
ANR	978851	PtrMemberAccess	map -> addr		978546	1					
ANR	978852	Identifier	map		978546	0					
ANR	978853	Identifier	addr		978546	1					
ANR	978854	ExpressionStatement	from = map -> addr	3468:4:100104:100120	978546	1	True				
ANR	978855	AssignmentExpression	from = map -> addr		978546	0		=			
ANR	978856	Identifier	from		978546	0					
ANR	978857	PtrMemberAccess	map -> addr		978546	1					
ANR	978858	Identifier	map		978546	0					
ANR	978859	Identifier	addr		978546	1					
ANR	978860	ElseStatement	else		978546	0					
ANR	978861	CompoundStatement		51:9:1128:1128	978546	0					
ANR	978862	IfStatement	if ( core -> file && core -> io )		978546	0					
ANR	978863	Condition	core -> file && core -> io	3471:7:100145:100166	978546	0	True				
ANR	978864	AndExpression	core -> file && core -> io		978546	0		&&			
ANR	978865	PtrMemberAccess	core -> file		978546	0					
ANR	978866	Identifier	core		978546	0					
ANR	978867	Identifier	file		978546	1					
ANR	978868	PtrMemberAccess	core -> io		978546	1					
ANR	978869	Identifier	core		978546	0					
ANR	978870	Identifier	io		978546	1					
ANR	978871	CompoundStatement		52:31:1161:1161	978546	1					
ANR	978872	ExpressionStatement	"totalsize = r_io_fd_size ( core -> io , core -> file -> fd )"	3472:4:100175:100226	978546	0	True				
ANR	978873	AssignmentExpression	"totalsize = r_io_fd_size ( core -> io , core -> file -> fd )"		978546	0		=			
ANR	978874	Identifier	totalsize		978546	0					
ANR	978875	CallExpression	"r_io_fd_size ( core -> io , core -> file -> fd )"		978546	1					
ANR	978876	Callee	r_io_fd_size		978546	0					
ANR	978877	Identifier	r_io_fd_size		978546	0					
ANR	978878	ArgumentList	core -> io		978546	1					
ANR	978879	Argument	core -> io		978546	0					
ANR	978880	PtrMemberAccess	core -> io		978546	0					
ANR	978881	Identifier	core		978546	0					
ANR	978882	Identifier	io		978546	1					
ANR	978883	Argument	core -> file -> fd		978546	1					
ANR	978884	PtrMemberAccess	core -> file -> fd		978546	0					
ANR	978885	PtrMemberAccess	core -> file		978546	0					
ANR	978886	Identifier	core		978546	0					
ANR	978887	Identifier	file		978546	1					
ANR	978888	Identifier	fd		978546	1					
ANR	978889	IfStatement	if ( ( st64 ) totalsize < 1 )		978546	1					
ANR	978890	Condition	( st64 ) totalsize < 1	3473:8:100236:100255	978546	0	True				
ANR	978891	RelationalExpression	( st64 ) totalsize < 1		978546	0		<			
ANR	978892	CastExpression	( st64 ) totalsize		978546	0					
ANR	978893	CastTarget	st64		978546	0					
ANR	978894	Identifier	totalsize		978546	1					
ANR	978895	PrimaryExpression	1		978546	1					
ANR	978896	CompoundStatement		54:30:1250:1250	978546	1					
ANR	978897	ExpressionStatement	totalsize = UT64_MAX	3474:5:100265:100285	978546	0	True				
ANR	978898	AssignmentExpression	totalsize = UT64_MAX		978546	0		=			
ANR	978899	Identifier	totalsize		978546	0					
ANR	978900	Identifier	UT64_MAX		978546	1					
ANR	978901	IfStatement	if ( totalsize == UT64_MAX )		978546	1					
ANR	978902	Condition	totalsize == UT64_MAX	3477:7:100305:100325	978546	0	True				
ANR	978903	EqualityExpression	totalsize == UT64_MAX		978546	0		==			
ANR	978904	Identifier	totalsize		978546	0					
ANR	978905	Identifier	UT64_MAX		978546	1					
ANR	978906	CompoundStatement		58:30:1320:1320	978546	1					
ANR	978907	ExpressionStatement	"eprintf ( ""Cannot determine file size\\n"" )"	3478:4:100334:100374	978546	0	True				
ANR	978908	CallExpression	"eprintf ( ""Cannot determine file size\\n"" )"		978546	0					
ANR	978909	Callee	eprintf		978546	0					
ANR	978910	Identifier	eprintf		978546	0					
ANR	978911	ArgumentList	"""Cannot determine file size\\n"""		978546	1					
ANR	978912	Argument	"""Cannot determine file size\\n"""		978546	0					
ANR	978913	PrimaryExpression	"""Cannot determine file size\\n"""		978546	0					
ANR	978914	GotoStatement	goto beach ;	3479:4:100380:100390	978546	1	True				
ANR	978915	Identifier	beach		978546	0					
ANR	978916	ExpressionStatement	blocksize = ( blocksize > 0 ) ? ( totalsize / blocksize ) : ( core -> blocksize )	3483:1:100405:100476	978546	16	True				
ANR	978917	AssignmentExpression	blocksize = ( blocksize > 0 ) ? ( totalsize / blocksize ) : ( core -> blocksize )		978546	0		=			
ANR	978918	Identifier	blocksize		978546	0					
ANR	978919	ConditionalExpression	( blocksize > 0 ) ? ( totalsize / blocksize ) : ( core -> blocksize )		978546	1					
ANR	978920	Condition	blocksize > 0		978546	0					
ANR	978921	RelationalExpression	blocksize > 0		978546	0		>			
ANR	978922	Identifier	blocksize		978546	0					
ANR	978923	PrimaryExpression	0		978546	1					
ANR	978924	MultiplicativeExpression	totalsize / blocksize		978546	1		/			
ANR	978925	Identifier	totalsize		978546	0					
ANR	978926	Identifier	blocksize		978546	1					
ANR	978927	PtrMemberAccess	core -> blocksize		978546	2					
ANR	978928	Identifier	core		978546	0					
ANR	978929	Identifier	blocksize		978546	1					
ANR	978930	IfStatement	if ( blocksize < 1 )		978546	17					
ANR	978931	Condition	blocksize < 1	3484:5:100483:100495	978546	0	True				
ANR	978932	RelationalExpression	blocksize < 1		978546	0		<			
ANR	978933	Identifier	blocksize		978546	0					
ANR	978934	PrimaryExpression	1		978546	1					
ANR	978935	CompoundStatement		65:20:1490:1490	978546	1					
ANR	978936	ExpressionStatement	"eprintf ( ""Invalid block size: %d\\n"" , ( int ) blocksize )"	3485:2:100502:100554	978546	0	True				
ANR	978937	CallExpression	"eprintf ( ""Invalid block size: %d\\n"" , ( int ) blocksize )"		978546	0					
ANR	978938	Callee	eprintf		978546	0					
ANR	978939	Identifier	eprintf		978546	0					
ANR	978940	ArgumentList	"""Invalid block size: %d\\n"""		978546	1					
ANR	978941	Argument	"""Invalid block size: %d\\n"""		978546	0					
ANR	978942	PrimaryExpression	"""Invalid block size: %d\\n"""		978546	0					
ANR	978943	Argument	( int ) blocksize		978546	1					
ANR	978944	CastExpression	( int ) blocksize		978546	0					
ANR	978945	CastTarget	int		978546	0					
ANR	978946	Identifier	blocksize		978546	1					
ANR	978947	GotoStatement	goto beach ;	3486:2:100558:100568	978546	1	True				
ANR	978948	Identifier	beach		978546	0					
ANR	978949	IfStatement	"if ( ! r_config_get_i ( core -> config , ""cfg.debug"" ) )"		978546	18					
ANR	978950	Condition	"! r_config_get_i ( core -> config , ""cfg.debug"" )"	3488:5:100578:100620	978546	0	True				
ANR	978951	UnaryOperationExpression	"! r_config_get_i ( core -> config , ""cfg.debug"" )"		978546	0					
ANR	978952	UnaryOperator	!		978546	0					
ANR	978953	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		978546	1					
ANR	978954	Callee	r_config_get_i		978546	0					
ANR	978955	Identifier	r_config_get_i		978546	0					
ANR	978956	ArgumentList	core -> config		978546	1					
ANR	978957	Argument	core -> config		978546	0					
ANR	978958	PtrMemberAccess	core -> config		978546	0					
ANR	978959	Identifier	core		978546	0					
ANR	978960	Identifier	config		978546	1					
ANR	978961	Argument	"""cfg.debug"""		978546	1					
ANR	978962	PrimaryExpression	"""cfg.debug"""		978546	0					
ANR	978963	CompoundStatement		70:2:1619:1653	978546	1					
ANR	978964	IdentifierDeclStatement	RIOMap * map1 = r_list_first ( list ) ;	3489:2:100627:100661	978546	0	True				
ANR	978965	IdentifierDecl	* map1 = r_list_first ( list )		978546	0					
ANR	978966	IdentifierDeclType	RIOMap *		978546	0					
ANR	978967	Identifier	map1		978546	1					
ANR	978968	AssignmentExpression	* map1 = r_list_first ( list )		978546	2		=			
ANR	978969	Identifier	map1		978546	0					
ANR	978970	CallExpression	r_list_first ( list )		978546	1					
ANR	978971	Callee	r_list_first		978546	0					
ANR	978972	Identifier	r_list_first		978546	0					
ANR	978973	ArgumentList	list		978546	1					
ANR	978974	Argument	list		978546	0					
ANR	978975	Identifier	list		978546	0					
ANR	978976	IfStatement	if ( map1 )		978546	1					
ANR	978977	Condition	map1	3490:6:100669:100672	978546	0	True				
ANR	978978	Identifier	map1		978546	0					
ANR	978979	CompoundStatement		71:12:1667:1667	978546	1					
ANR	978980	ExpressionStatement	from = map1 -> itv . addr	3491:3:100680:100701	978546	0	True				
ANR	978981	AssignmentExpression	from = map1 -> itv . addr		978546	0		=			
ANR	978982	Identifier	from		978546	0					
ANR	978983	MemberAccess	map1 -> itv . addr		978546	1					
ANR	978984	PtrMemberAccess	map1 -> itv		978546	0					
ANR	978985	Identifier	map1		978546	0					
ANR	978986	Identifier	itv		978546	1					
ANR	978987	Identifier	addr		978546	1					
ANR	978988	Statement	r_list_foreach	3492:3:100706:100719	978546	1	True				
ANR	978989	Statement	(	3492:18:100721:100721	978546	2	True				
ANR	978990	Statement	list	3492:19:100722:100725	978546	3	True				
ANR	978991	Statement	","	3492:23:100726:100726	978546	4	True				
ANR	978992	Statement	iter	3492:25:100728:100731	978546	5	True				
ANR	978993	Statement	","	3492:29:100732:100732	978546	6	True				
ANR	978994	Statement	map	3492:31:100734:100736	978546	7	True				
ANR	978995	Statement	)	3492:34:100737:100737	978546	8	True				
ANR	978996	CompoundStatement		73:36:1731:1731	978546	9					
ANR	978997	ExpressionStatement	to = r_itv_end ( map -> itv )	3493:4:100745:100770	978546	0	True				
ANR	978998	AssignmentExpression	to = r_itv_end ( map -> itv )		978546	0		=			
ANR	978999	Identifier	to		978546	0					
ANR	979000	CallExpression	r_itv_end ( map -> itv )		978546	1					
ANR	979001	Callee	r_itv_end		978546	0					
ANR	979002	Identifier	r_itv_end		978546	0					
ANR	979003	ArgumentList	map -> itv		978546	1					
ANR	979004	Argument	map -> itv		978546	0					
ANR	979005	PtrMemberAccess	map -> itv		978546	0					
ANR	979006	Identifier	map		978546	0					
ANR	979007	Identifier	itv		978546	1					
ANR	979008	ExpressionStatement	totalsize = to - from	3495:3:100780:100801	978546	10	True				
ANR	979009	AssignmentExpression	totalsize = to - from		978546	0		=			
ANR	979010	Identifier	totalsize		978546	0					
ANR	979011	AdditiveExpression	to - from		978546	1		-			
ANR	979012	Identifier	to		978546	0					
ANR	979013	Identifier	from		978546	1					
ANR	979014	ElseStatement	else		978546	0					
ANR	979015	CompoundStatement		77:9:1804:1804	978546	0					
ANR	979016	ExpressionStatement	from = core -> offset	3497:3:100817:100836	978546	0	True				
ANR	979017	AssignmentExpression	from = core -> offset		978546	0		=			
ANR	979018	Identifier	from		978546	0					
ANR	979019	PtrMemberAccess	core -> offset		978546	1					
ANR	979020	Identifier	core		978546	0					
ANR	979021	Identifier	offset		978546	1					
ANR	979022	IfStatement	if ( nblocks < 1 )		978546	19					
ANR	979023	Condition	nblocks < 1	3500:5:100850:100860	978546	0	True				
ANR	979024	RelationalExpression	nblocks < 1		978546	0		<			
ANR	979025	Identifier	nblocks		978546	0					
ANR	979026	PrimaryExpression	1		978546	1					
ANR	979027	CompoundStatement		81:18:1855:1855	978546	1					
ANR	979028	ExpressionStatement	nblocks = totalsize / blocksize	3501:2:100867:100898	978546	0	True				
ANR	979029	AssignmentExpression	nblocks = totalsize / blocksize		978546	0		=			
ANR	979030	Identifier	nblocks		978546	0					
ANR	979031	MultiplicativeExpression	totalsize / blocksize		978546	1		/			
ANR	979032	Identifier	totalsize		978546	0					
ANR	979033	Identifier	blocksize		978546	1					
ANR	979034	ElseStatement	else		978546	0					
ANR	979035	CompoundStatement		83:8:1900:1900	978546	0					
ANR	979036	ExpressionStatement	blocksize = totalsize / nblocks	3503:2:100912:100943	978546	0	True				
ANR	979037	AssignmentExpression	blocksize = totalsize / nblocks		978546	0		=			
ANR	979038	Identifier	blocksize		978546	0					
ANR	979039	MultiplicativeExpression	totalsize / nblocks		978546	1		/			
ANR	979040	Identifier	totalsize		978546	0					
ANR	979041	Identifier	nblocks		978546	1					
ANR	979042	IfStatement	if ( blocksize < 1 )		978546	1					
ANR	979043	Condition	blocksize < 1	3504:7:100952:100964	978546	0	True				
ANR	979044	RelationalExpression	blocksize < 1		978546	0		<			
ANR	979045	Identifier	blocksize		978546	0					
ANR	979046	PrimaryExpression	1		978546	1					
ANR	979047	CompoundStatement		85:22:1959:1959	978546	1					
ANR	979048	ExpressionStatement	"eprintf ( ""Invalid block size: %d\\n"" , ( int ) blocksize )"	3505:3:100972:101024	978546	0	True				
ANR	979049	CallExpression	"eprintf ( ""Invalid block size: %d\\n"" , ( int ) blocksize )"		978546	0					
ANR	979050	Callee	eprintf		978546	0					
ANR	979051	Identifier	eprintf		978546	0					
ANR	979052	ArgumentList	"""Invalid block size: %d\\n"""		978546	1					
ANR	979053	Argument	"""Invalid block size: %d\\n"""		978546	0					
ANR	979054	PrimaryExpression	"""Invalid block size: %d\\n"""		978546	0					
ANR	979055	Argument	( int ) blocksize		978546	1					
ANR	979056	CastExpression	( int ) blocksize		978546	0					
ANR	979057	CastTarget	int		978546	0					
ANR	979058	Identifier	blocksize		978546	1					
ANR	979059	GotoStatement	goto beach ;	3506:3:101029:101039	978546	1	True				
ANR	979060	Identifier	beach		978546	0					
ANR	979061	SwitchStatement	switch ( mode )		978546	20					
ANR	979062	Condition	mode	3509:9:101057:101060	978546	0	True				
ANR	979063	Identifier	mode		978546	0					
ANR	979064	CompoundStatement		90:15:2055:2055	978546	1					
ANR	979065	Label	case '?' :	3510:1:101066:101074	978546	0	True				
ANR	979066	ExpressionStatement	"r_core_cmd_help ( core , help_msg_p_equal )"	3511:2:101086:101126	978546	1	True				
ANR	979067	CallExpression	"r_core_cmd_help ( core , help_msg_p_equal )"		978546	0					
ANR	979068	Callee	r_core_cmd_help		978546	0					
ANR	979069	Identifier	r_core_cmd_help		978546	0					
ANR	979070	ArgumentList	core		978546	1					
ANR	979071	Argument	core		978546	0					
ANR	979072	Identifier	core		978546	0					
ANR	979073	Argument	help_msg_p_equal		978546	1					
ANR	979074	Identifier	help_msg_p_equal		978546	0					
ANR	979075	BreakStatement	break ;	3512:2:101130:101135	978546	2	True				
ANR	979076	Label	case '=' :	3513:1:101138:101146	978546	3	True				
ANR	979077	SwitchStatement	switch ( submode )		978546	4					
ANR	979078	Condition	submode	3514:10:101167:101173	978546	0	True				
ANR	979079	Identifier	submode		978546	0					
ANR	979080	CompoundStatement		95:19:2168:2168	978546	1					
ANR	979081	Label	case '?' :	3515:2:101180:101188	978546	0	True				
ANR	979082	ExpressionStatement	"r_core_cmd_help ( core , help_msg_p_equal )"	3516:3:101193:101233	978546	1	True				
ANR	979083	CallExpression	"r_core_cmd_help ( core , help_msg_p_equal )"		978546	0					
ANR	979084	Callee	r_core_cmd_help		978546	0					
ANR	979085	Identifier	r_core_cmd_help		978546	0					
ANR	979086	ArgumentList	core		978546	1					
ANR	979087	Argument	core		978546	0					
ANR	979088	Identifier	core		978546	0					
ANR	979089	Argument	help_msg_p_equal		978546	1					
ANR	979090	Identifier	help_msg_p_equal		978546	0					
ANR	979091	BreakStatement	break ;	3517:3:101238:101243	978546	2	True				
ANR	979092	Label	case '0' :	3518:2:101247:101255	978546	3	True				
ANR	979093	Label	case 'f' :	3519:2:101273:101281	978546	4	True				
ANR	979094	Label	case 'F' :	3520:2:101299:101307	978546	5	True				
ANR	979095	Label	case 'A' :	3521:2:101325:101333	978546	6	True				
ANR	979096	Label	case 'a' :	3522:2:101351:101359	978546	7	True				
ANR	979097	Label	case 'p' :	3523:2:101374:101382	978546	8	True				
ANR	979098	Label	case 'z' :	3524:2:101405:101413	978546	9	True				
ANR	979099	Label	case 'b' :	3525:2:101444:101452	978546	10	True				
ANR	979100	CompoundStatement		120:4:2760:2771	978546	11					
ANR	979101	IdentifierDeclStatement	"ut64 i , j , k ;"	3527:4:101490:101502	978546	0	True				
ANR	979102	IdentifierDecl	i		978546	0					
ANR	979103	IdentifierDeclType	ut64		978546	0					
ANR	979104	Identifier	i		978546	1					
ANR	979105	IdentifierDecl	j		978546	1					
ANR	979106	IdentifierDeclType	ut64		978546	0					
ANR	979107	Identifier	j		978546	1					
ANR	979108	IdentifierDecl	k		978546	2					
ANR	979109	IdentifierDeclType	ut64		978546	0					
ANR	979110	Identifier	k		978546	1					
ANR	979111	ExpressionStatement	"ptr = calloc ( 1 , nblocks )"	3528:4:101508:101533	978546	1	True				
ANR	979112	AssignmentExpression	"ptr = calloc ( 1 , nblocks )"		978546	0		=			
ANR	979113	Identifier	ptr		978546	0					
ANR	979114	CallExpression	"calloc ( 1 , nblocks )"		978546	1					
ANR	979115	Callee	calloc		978546	0					
ANR	979116	Identifier	calloc		978546	0					
ANR	979117	ArgumentList	1		978546	1					
ANR	979118	Argument	1		978546	0					
ANR	979119	PrimaryExpression	1		978546	0					
ANR	979120	Argument	nblocks		978546	1					
ANR	979121	Identifier	nblocks		978546	0					
ANR	979122	IfStatement	if ( ! ptr )		978546	2					
ANR	979123	Condition	! ptr	3529:8:101543:101546	978546	0	True				
ANR	979124	UnaryOperationExpression	! ptr		978546	0					
ANR	979125	UnaryOperator	!		978546	0					
ANR	979126	Identifier	ptr		978546	1					
ANR	979127	CompoundStatement		110:14:2541:2541	978546	1					
ANR	979128	ExpressionStatement	"eprintf ( ""Error: failed to malloc memory"" )"	3530:5:101556:101598	978546	0	True				
ANR	979129	CallExpression	"eprintf ( ""Error: failed to malloc memory"" )"		978546	0					
ANR	979130	Callee	eprintf		978546	0					
ANR	979131	Identifier	eprintf		978546	0					
ANR	979132	ArgumentList	"""Error: failed to malloc memory"""		978546	1					
ANR	979133	Argument	"""Error: failed to malloc memory"""		978546	0					
ANR	979134	PrimaryExpression	"""Error: failed to malloc memory"""		978546	0					
ANR	979135	GotoStatement	goto beach ;	3531:5:101605:101615	978546	1	True				
ANR	979136	Identifier	beach		978546	0					
ANR	979137	IdentifierDeclStatement	"ut8 * p = calloc ( 1 , blocksize ) ;"	3533:4:101627:101657	978546	3	True				
ANR	979138	IdentifierDecl	"* p = calloc ( 1 , blocksize )"		978546	0					
ANR	979139	IdentifierDeclType	ut8 *		978546	0					
ANR	979140	Identifier	p		978546	1					
ANR	979141	AssignmentExpression	"* p = calloc ( 1 , blocksize )"		978546	2		=			
ANR	979142	Identifier	p		978546	0					
ANR	979143	CallExpression	"calloc ( 1 , blocksize )"		978546	1					
ANR	979144	Callee	calloc		978546	0					
ANR	979145	Identifier	calloc		978546	0					
ANR	979146	ArgumentList	1		978546	1					
ANR	979147	Argument	1		978546	0					
ANR	979148	PrimaryExpression	1		978546	0					
ANR	979149	Argument	blocksize		978546	1					
ANR	979150	Identifier	blocksize		978546	0					
ANR	979151	IfStatement	if ( ! p )		978546	4					
ANR	979152	Condition	! p	3534:8:101667:101668	978546	0	True				
ANR	979153	UnaryOperationExpression	! p		978546	0					
ANR	979154	UnaryOperator	!		978546	0					
ANR	979155	Identifier	p		978546	1					
ANR	979156	CompoundStatement		115:12:2663:2663	978546	1					
ANR	979157	ExpressionStatement	R_FREE ( ptr )	3535:5:101678:101690	978546	0	True				
ANR	979158	CallExpression	R_FREE ( ptr )		978546	0					
ANR	979159	Callee	R_FREE		978546	0					
ANR	979160	Identifier	R_FREE		978546	0					
ANR	979161	ArgumentList	ptr		978546	1					
ANR	979162	Argument	ptr		978546	0					
ANR	979163	Identifier	ptr		978546	0					
ANR	979164	ExpressionStatement	"eprintf ( ""Error: failed to malloc memory"" )"	3536:5:101697:101739	978546	1	True				
ANR	979165	CallExpression	"eprintf ( ""Error: failed to malloc memory"" )"		978546	0					
ANR	979166	Callee	eprintf		978546	0					
ANR	979167	Identifier	eprintf		978546	0					
ANR	979168	ArgumentList	"""Error: failed to malloc memory"""		978546	1					
ANR	979169	Argument	"""Error: failed to malloc memory"""		978546	0					
ANR	979170	PrimaryExpression	"""Error: failed to malloc memory"""		978546	0					
ANR	979171	GotoStatement	goto beach ;	3537:5:101746:101756	978546	2	True				
ANR	979172	Identifier	beach		978546	0					
ANR	979173	IdentifierDeclStatement	int len = 0 ;	3539:4:101768:101779	978546	5	True				
ANR	979174	IdentifierDecl	len = 0		978546	0					
ANR	979175	IdentifierDeclType	int		978546	0					
ANR	979176	Identifier	len		978546	1					
ANR	979177	AssignmentExpression	len = 0		978546	2		=			
ANR	979178	Identifier	len		978546	0					
ANR	979179	PrimaryExpression	0		978546	1					
ANR	979180	IfStatement	if ( submode == 'A' )		978546	6					
ANR	979181	Condition	submode == 'A'	3540:8:101789:101802	978546	0	True				
ANR	979182	EqualityExpression	submode == 'A'		978546	0		==			
ANR	979183	Identifier	submode		978546	0					
ANR	979184	PrimaryExpression	'A'		978546	1					
ANR	979185	CompoundStatement		123:5:2864:2934	978546	1					
ANR	979186	IdentifierDeclStatement	ut64 to = from + totalsize ;	3541:5:101812:101838	978546	0	True				
ANR	979187	IdentifierDecl	to = from + totalsize		978546	0					
ANR	979188	IdentifierDeclType	ut64		978546	0					
ANR	979189	Identifier	to		978546	1					
ANR	979190	AssignmentExpression	to = from + totalsize		978546	2		=			
ANR	979191	Identifier	to		978546	0					
ANR	979192	AdditiveExpression	from + totalsize		978546	1		+			
ANR	979193	Identifier	from		978546	0					
ANR	979194	Identifier	totalsize		978546	1					
ANR	979195	IdentifierDeclStatement	"RCoreAnalStats * as = r_core_anal_get_stats ( core , from , to , blocksize ) ;"	3542:5:101872:101942	978546	1	True				
ANR	979196	IdentifierDecl	"* as = r_core_anal_get_stats ( core , from , to , blocksize )"		978546	0					
ANR	979197	IdentifierDeclType	RCoreAnalStats *		978546	0					
ANR	979198	Identifier	as		978546	1					
ANR	979199	AssignmentExpression	"* as = r_core_anal_get_stats ( core , from , to , blocksize )"		978546	2		=			
ANR	979200	Identifier	as		978546	0					
ANR	979201	CallExpression	"r_core_anal_get_stats ( core , from , to , blocksize )"		978546	1					
ANR	979202	Callee	r_core_anal_get_stats		978546	0					
ANR	979203	Identifier	r_core_anal_get_stats		978546	0					
ANR	979204	ArgumentList	core		978546	1					
ANR	979205	Argument	core		978546	0					
ANR	979206	Identifier	core		978546	0					
ANR	979207	Argument	from		978546	1					
ANR	979208	Identifier	from		978546	0					
ANR	979209	Argument	to		978546	2					
ANR	979210	Identifier	to		978546	0					
ANR	979211	Argument	blocksize		978546	3					
ANR	979212	Identifier	blocksize		978546	0					
ANR	979213	ForStatement	for ( i = 0 ; i < nblocks ; i ++ )		978546	2					
ANR	979214	ForInit	i = 0 ;	3543:10:101954:101959	978546	0	True				
ANR	979215	AssignmentExpression	i = 0		978546	0		=			
ANR	979216	Identifier	i		978546	0					
ANR	979217	PrimaryExpression	0		978546	1					
ANR	979218	Condition	i < nblocks	3543:17:101961:101971	978546	1	True				
ANR	979219	RelationalExpression	i < nblocks		978546	0		<			
ANR	979220	Identifier	i		978546	0					
ANR	979221	Identifier	nblocks		978546	1					
ANR	979222	PostIncDecOperationExpression	i ++	3543:30:101974:101976	978546	2	True				
ANR	979223	Identifier	i		978546	0					
ANR	979224	IncDec	++		978546	1					
ANR	979225	CompoundStatement		125:6:2979:2992	978546	3					
ANR	979226	IdentifierDeclStatement	int value = 0 ;	3544:6:101987:102000	978546	0	True				
ANR	979227	IdentifierDecl	value = 0		978546	0					
ANR	979228	IdentifierDeclType	int		978546	0					
ANR	979229	Identifier	value		978546	1					
ANR	979230	AssignmentExpression	value = 0		978546	2		=			
ANR	979231	Identifier	value		978546	0					
ANR	979232	PrimaryExpression	0		978546	1					
ANR	979233	ExpressionStatement	value += as -> block [ i ] . functions	3545:6:102008:102039	978546	1	True				
ANR	979234	AssignmentExpression	value += as -> block [ i ] . functions		978546	0		+=			
ANR	979235	Identifier	value		978546	0					
ANR	979236	MemberAccess	as -> block [ i ] . functions		978546	1					
ANR	979237	ArrayIndexing	as -> block [ i ]		978546	0					
ANR	979238	PtrMemberAccess	as -> block		978546	0					
ANR	979239	Identifier	as		978546	0					
ANR	979240	Identifier	block		978546	1					
ANR	979241	Identifier	i		978546	1					
ANR	979242	Identifier	functions		978546	1					
ANR	979243	ExpressionStatement	value += as -> block [ i ] . in_functions	3546:6:102047:102081	978546	2	True				
ANR	979244	AssignmentExpression	value += as -> block [ i ] . in_functions		978546	0		+=			
ANR	979245	Identifier	value		978546	0					
ANR	979246	MemberAccess	as -> block [ i ] . in_functions		978546	1					
ANR	979247	ArrayIndexing	as -> block [ i ]		978546	0					
ANR	979248	PtrMemberAccess	as -> block		978546	0					
ANR	979249	Identifier	as		978546	0					
ANR	979250	Identifier	block		978546	1					
ANR	979251	Identifier	i		978546	1					
ANR	979252	Identifier	in_functions		978546	1					
ANR	979253	ExpressionStatement	value += as -> block [ i ] . comments	3547:6:102089:102119	978546	3	True				
ANR	979254	AssignmentExpression	value += as -> block [ i ] . comments		978546	0		+=			
ANR	979255	Identifier	value		978546	0					
ANR	979256	MemberAccess	as -> block [ i ] . comments		978546	1					
ANR	979257	ArrayIndexing	as -> block [ i ]		978546	0					
ANR	979258	PtrMemberAccess	as -> block		978546	0					
ANR	979259	Identifier	as		978546	0					
ANR	979260	Identifier	block		978546	1					
ANR	979261	Identifier	i		978546	1					
ANR	979262	Identifier	comments		978546	1					
ANR	979263	ExpressionStatement	value += as -> block [ i ] . symbols	3548:6:102127:102156	978546	4	True				
ANR	979264	AssignmentExpression	value += as -> block [ i ] . symbols		978546	0		+=			
ANR	979265	Identifier	value		978546	0					
ANR	979266	MemberAccess	as -> block [ i ] . symbols		978546	1					
ANR	979267	ArrayIndexing	as -> block [ i ]		978546	0					
ANR	979268	PtrMemberAccess	as -> block		978546	0					
ANR	979269	Identifier	as		978546	0					
ANR	979270	Identifier	block		978546	1					
ANR	979271	Identifier	i		978546	1					
ANR	979272	Identifier	symbols		978546	1					
ANR	979273	ExpressionStatement	value += as -> block [ i ] . flags	3549:6:102164:102191	978546	5	True				
ANR	979274	AssignmentExpression	value += as -> block [ i ] . flags		978546	0		+=			
ANR	979275	Identifier	value		978546	0					
ANR	979276	MemberAccess	as -> block [ i ] . flags		978546	1					
ANR	979277	ArrayIndexing	as -> block [ i ]		978546	0					
ANR	979278	PtrMemberAccess	as -> block		978546	0					
ANR	979279	Identifier	as		978546	0					
ANR	979280	Identifier	block		978546	1					
ANR	979281	Identifier	i		978546	1					
ANR	979282	Identifier	flags		978546	1					
ANR	979283	ExpressionStatement	value += as -> block [ i ] . strings	3550:6:102199:102228	978546	6	True				
ANR	979284	AssignmentExpression	value += as -> block [ i ] . strings		978546	0		+=			
ANR	979285	Identifier	value		978546	0					
ANR	979286	MemberAccess	as -> block [ i ] . strings		978546	1					
ANR	979287	ArrayIndexing	as -> block [ i ]		978546	0					
ANR	979288	PtrMemberAccess	as -> block		978546	0					
ANR	979289	Identifier	as		978546	0					
ANR	979290	Identifier	block		978546	1					
ANR	979291	Identifier	i		978546	1					
ANR	979292	Identifier	strings		978546	1					
ANR	979293	ExpressionStatement	value += as -> block [ i ] . blocks	3551:6:102236:102264	978546	7	True				
ANR	979294	AssignmentExpression	value += as -> block [ i ] . blocks		978546	0		+=			
ANR	979295	Identifier	value		978546	0					
ANR	979296	MemberAccess	as -> block [ i ] . blocks		978546	1					
ANR	979297	ArrayIndexing	as -> block [ i ]		978546	0					
ANR	979298	PtrMemberAccess	as -> block		978546	0					
ANR	979299	Identifier	as		978546	0					
ANR	979300	Identifier	block		978546	1					
ANR	979301	Identifier	i		978546	1					
ANR	979302	Identifier	blocks		978546	1					
ANR	979303	ExpressionStatement	ptr [ i ] = 256 * value / blocksize	3552:6:102272:102304	978546	8	True				
ANR	979304	AssignmentExpression	ptr [ i ] = 256 * value / blocksize		978546	0		=			
ANR	979305	ArrayIndexing	ptr [ i ]		978546	0					
ANR	979306	Identifier	ptr		978546	0					
ANR	979307	Identifier	i		978546	1					
ANR	979308	MultiplicativeExpression	256 * value / blocksize		978546	1		*			
ANR	979309	PrimaryExpression	256		978546	0					
ANR	979310	MultiplicativeExpression	value / blocksize		978546	1		/			
ANR	979311	Identifier	value		978546	0					
ANR	979312	Identifier	blocksize		978546	1					
ANR	979313	ExpressionStatement	ptr [ i ] *= 3	3553:6:102312:102323	978546	9	True				
ANR	979314	AssignmentExpression	ptr [ i ] *= 3		978546	0		*=			
ANR	979315	ArrayIndexing	ptr [ i ]		978546	0					
ANR	979316	Identifier	ptr		978546	0					
ANR	979317	Identifier	i		978546	1					
ANR	979318	PrimaryExpression	3		978546	1					
ANR	979319	ExpressionStatement	r_core_anal_stats_free ( as )	3555:5:102337:102364	978546	3	True				
ANR	979320	CallExpression	r_core_anal_stats_free ( as )		978546	0					
ANR	979321	Callee	r_core_anal_stats_free		978546	0					
ANR	979322	Identifier	r_core_anal_stats_free		978546	0					
ANR	979323	ArgumentList	as		978546	1					
ANR	979324	Argument	as		978546	0					
ANR	979325	Identifier	as		978546	0					
ANR	979326	ElseStatement	else		978546	0					
ANR	979327	ForStatement	for ( i = 0 ; i < nblocks ; i ++ )		978546	0					
ANR	979328	ForInit	i = 0 ;	3556:16:102382:102387	978546	0	True				
ANR	979329	AssignmentExpression	i = 0		978546	0		=			
ANR	979330	Identifier	i		978546	0					
ANR	979331	PrimaryExpression	0		978546	1					
ANR	979332	Condition	i < nblocks	3556:23:102389:102399	978546	1	True				
ANR	979333	RelationalExpression	i < nblocks		978546	0		<			
ANR	979334	Identifier	i		978546	0					
ANR	979335	Identifier	nblocks		978546	1					
ANR	979336	PostIncDecOperationExpression	i ++	3556:36:102402:102404	978546	2	True				
ANR	979337	Identifier	i		978546	0					
ANR	979338	IncDec	++		978546	1					
ANR	979339	CompoundStatement		138:5:3406:3452	978546	3					
ANR	979340	IdentifierDeclStatement	ut64 off = from + blocksize * ( i + skipblocks ) ;	3557:5:102414:102460	978546	0	True				
ANR	979341	IdentifierDecl	off = from + blocksize * ( i + skipblocks )		978546	0					
ANR	979342	IdentifierDeclType	ut64		978546	0					
ANR	979343	Identifier	off		978546	1					
ANR	979344	AssignmentExpression	off = from + blocksize * ( i + skipblocks )		978546	2		=			
ANR	979345	Identifier	off		978546	0					
ANR	979346	AdditiveExpression	from + blocksize * ( i + skipblocks )		978546	1		+			
ANR	979347	Identifier	from		978546	0					
ANR	979348	MultiplicativeExpression	blocksize * ( i + skipblocks )		978546	1		*			
ANR	979349	Identifier	blocksize		978546	0					
ANR	979350	AdditiveExpression	i + skipblocks		978546	1		+			
ANR	979351	Identifier	i		978546	0					
ANR	979352	Identifier	skipblocks		978546	1					
ANR	979353	ExpressionStatement	"r_io_read_at ( core -> io , off , p , blocksize )"	3558:5:102467:102509	978546	1	True				
ANR	979354	CallExpression	"r_io_read_at ( core -> io , off , p , blocksize )"		978546	0					
ANR	979355	Callee	r_io_read_at		978546	0					
ANR	979356	Identifier	r_io_read_at		978546	0					
ANR	979357	ArgumentList	core -> io		978546	1					
ANR	979358	Argument	core -> io		978546	0					
ANR	979359	PtrMemberAccess	core -> io		978546	0					
ANR	979360	Identifier	core		978546	0					
ANR	979361	Identifier	io		978546	1					
ANR	979362	Argument	off		978546	1					
ANR	979363	Identifier	off		978546	0					
ANR	979364	Argument	p		978546	2					
ANR	979365	Identifier	p		978546	0					
ANR	979366	Argument	blocksize		978546	3					
ANR	979367	Identifier	blocksize		978546	0					
ANR	979368	ForStatement	for ( j = k = 0 ; j < blocksize ; j ++ )		978546	2					
ANR	979369	ForInit	j = k = 0 ;	3559:10:102521:102530	978546	0	True				
ANR	979370	AssignmentExpression	j = k = 0		978546	0		=			
ANR	979371	Identifier	j		978546	0					
ANR	979372	AssignmentExpression	k = 0		978546	1		=			
ANR	979373	Identifier	k		978546	0					
ANR	979374	PrimaryExpression	0		978546	1					
ANR	979375	Condition	j < blocksize	3559:21:102532:102544	978546	1	True				
ANR	979376	RelationalExpression	j < blocksize		978546	0		<			
ANR	979377	Identifier	j		978546	0					
ANR	979378	Identifier	blocksize		978546	1					
ANR	979379	PostIncDecOperationExpression	j ++	3559:36:102547:102549	978546	2	True				
ANR	979380	Identifier	j		978546	0					
ANR	979381	IncDec	++		978546	1					
ANR	979382	CompoundStatement		140:41:3544:3544	978546	3					
ANR	979383	SwitchStatement	switch ( submode )		978546	0					
ANR	979384	Condition	submode	3560:14:102568:102574	978546	0	True				
ANR	979385	Identifier	submode		978546	0					
ANR	979386	CompoundStatement		141:23:3569:3569	978546	1					
ANR	979387	Label	case 'a' :	3561:6:102585:102593	978546	0	True				
ANR	979388	CompoundStatement		144:8:3604:3667	978546	1					
ANR	979389	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , off + j , 0 ) ;"	3563:8:102612:102675	978546	0	True				
ANR	979390	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , off + j , 0 )"		978546	0					
ANR	979391	IdentifierDeclType	RAnalFunction *		978546	0					
ANR	979392	Identifier	fcn		978546	1					
ANR	979393	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , off + j , 0 )"		978546	2		=			
ANR	979394	Identifier	fcn		978546	0					
ANR	979395	CallExpression	"r_anal_get_fcn_in ( core -> anal , off + j , 0 )"		978546	1					
ANR	979396	Callee	r_anal_get_fcn_in		978546	0					
ANR	979397	Identifier	r_anal_get_fcn_in		978546	0					
ANR	979398	ArgumentList	core -> anal		978546	1					
ANR	979399	Argument	core -> anal		978546	0					
ANR	979400	PtrMemberAccess	core -> anal		978546	0					
ANR	979401	Identifier	core		978546	0					
ANR	979402	Identifier	anal		978546	1					
ANR	979403	Argument	off + j		978546	1					
ANR	979404	AdditiveExpression	off + j		978546	0		+			
ANR	979405	Identifier	off		978546	0					
ANR	979406	Identifier	j		978546	1					
ANR	979407	Argument	0		978546	2					
ANR	979408	PrimaryExpression	0		978546	0					
ANR	979409	IfStatement	if ( fcn )		978546	1					
ANR	979410	Condition	fcn	3564:12:102689:102691	978546	0	True				
ANR	979411	Identifier	fcn		978546	0					
ANR	979412	CompoundStatement		145:17:3686:3686	978546	1					
ANR	979413	ExpressionStatement	k += r_list_length ( fcn -> bbs )	3565:9:102705:102734	978546	0	True				
ANR	979414	AssignmentExpression	k += r_list_length ( fcn -> bbs )		978546	0		+=			
ANR	979415	Identifier	k		978546	0					
ANR	979416	CallExpression	r_list_length ( fcn -> bbs )		978546	1					
ANR	979417	Callee	r_list_length		978546	0					
ANR	979418	Identifier	r_list_length		978546	0					
ANR	979419	ArgumentList	fcn -> bbs		978546	1					
ANR	979420	Argument	fcn -> bbs		978546	0					
ANR	979421	PtrMemberAccess	fcn -> bbs		978546	0					
ANR	979422	Identifier	fcn		978546	0					
ANR	979423	Identifier	bbs		978546	1					
ANR	979424	ExpressionStatement	"k = R_MAX ( 255 , k )"	3566:9:102745:102763	978546	1	True				
ANR	979425	AssignmentExpression	"k = R_MAX ( 255 , k )"		978546	0		=			
ANR	979426	Identifier	k		978546	0					
ANR	979427	CallExpression	"R_MAX ( 255 , k )"		978546	1					
ANR	979428	Callee	R_MAX		978546	0					
ANR	979429	Identifier	R_MAX		978546	0					
ANR	979430	ArgumentList	255		978546	1					
ANR	979431	Argument	255		978546	0					
ANR	979432	PrimaryExpression	255		978546	0					
ANR	979433	Argument	k		978546	1					
ANR	979434	Identifier	k		978546	0					
ANR	979435	BreakStatement	break ;	3569:7:102791:102796	978546	2	True				
ANR	979436	Label	case '0' :	3570:6:102804:102812	978546	3	True				
ANR	979437	IfStatement	if ( ! p [ j ] )		978546	4					
ANR	979438	Condition	! p [ j ]	3571:11:102825:102829	978546	0	True				
ANR	979439	UnaryOperationExpression	! p [ j ]		978546	0					
ANR	979440	UnaryOperator	!		978546	0					
ANR	979441	ArrayIndexing	p [ j ]		978546	1					
ANR	979442	Identifier	p		978546	0					
ANR	979443	Identifier	j		978546	1					
ANR	979444	CompoundStatement		152:18:3824:3824	978546	1					
ANR	979445	ExpressionStatement	k ++	3572:8:102842:102845	978546	0	True				
ANR	979446	PostIncDecOperationExpression	k ++		978546	0					
ANR	979447	Identifier	k		978546	0					
ANR	979448	IncDec	++		978546	1					
ANR	979449	BreakStatement	break ;	3574:7:102863:102868	978546	5	True				
ANR	979450	Label	case 'f' :	3575:6:102876:102884	978546	6	True				
ANR	979451	IfStatement	if ( p [ j ] == 0xff )		978546	7					
ANR	979452	Condition	p [ j ] == 0xff	3576:11:102897:102908	978546	0	True				
ANR	979453	EqualityExpression	p [ j ] == 0xff		978546	0		==			
ANR	979454	ArrayIndexing	p [ j ]		978546	0					
ANR	979455	Identifier	p		978546	0					
ANR	979456	Identifier	j		978546	1					
ANR	979457	PrimaryExpression	0xff		978546	1					
ANR	979458	CompoundStatement		157:25:3903:3903	978546	1					
ANR	979459	ExpressionStatement	k ++	3577:8:102921:102924	978546	0	True				
ANR	979460	PostIncDecOperationExpression	k ++		978546	0					
ANR	979461	Identifier	k		978546	0					
ANR	979462	IncDec	++		978546	1					
ANR	979463	BreakStatement	break ;	3579:7:102942:102947	978546	8	True				
ANR	979464	Label	case 'z' :	3580:6:102955:102963	978546	9	True				
ANR	979465	IfStatement	if ( ( IS_PRINTABLE ( p [ j ] ) ) )		978546	10					
ANR	979466	Condition	IS_PRINTABLE ( p [ j ] )	3581:11:102976:102996	978546	0	True				
ANR	979467	CallExpression	IS_PRINTABLE ( p [ j ] )		978546	0					
ANR	979468	Callee	IS_PRINTABLE		978546	0					
ANR	979469	Identifier	IS_PRINTABLE		978546	0					
ANR	979470	ArgumentList	p [ j ]		978546	1					
ANR	979471	Argument	p [ j ]		978546	0					
ANR	979472	ArrayIndexing	p [ j ]		978546	0					
ANR	979473	Identifier	p		978546	0					
ANR	979474	Identifier	j		978546	1					
ANR	979475	CompoundStatement		162:34:3991:3991	978546	1					
ANR	979476	IfStatement	if ( ( j + 1 ) < blocksize && p [ j + 1 ] == 0 )		978546	0					
ANR	979477	Condition	( j + 1 ) < blocksize && p [ j + 1 ] == 0	3582:12:103013:103048	978546	0	True				
ANR	979478	AndExpression	( j + 1 ) < blocksize && p [ j + 1 ] == 0		978546	0		&&			
ANR	979479	RelationalExpression	( j + 1 ) < blocksize		978546	0		<			
ANR	979480	AdditiveExpression	j + 1		978546	0		+			
ANR	979481	Identifier	j		978546	0					
ANR	979482	PrimaryExpression	1		978546	1					
ANR	979483	Identifier	blocksize		978546	1					
ANR	979484	EqualityExpression	p [ j + 1 ] == 0		978546	1		==			
ANR	979485	ArrayIndexing	p [ j + 1 ]		978546	0					
ANR	979486	Identifier	p		978546	0					
ANR	979487	AdditiveExpression	j + 1		978546	1		+			
ANR	979488	Identifier	j		978546	0					
ANR	979489	PrimaryExpression	1		978546	1					
ANR	979490	PrimaryExpression	0		978546	1					
ANR	979491	CompoundStatement		163:50:4043:4043	978546	1					
ANR	979492	ExpressionStatement	k ++	3583:9:103062:103065	978546	0	True				
ANR	979493	PostIncDecOperationExpression	k ++		978546	0					
ANR	979494	Identifier	k		978546	0					
ANR	979495	IncDec	++		978546	1					
ANR	979496	ExpressionStatement	j ++	3584:9:103076:103079	978546	1	True				
ANR	979497	PostIncDecOperationExpression	j ++		978546	0					
ANR	979498	Identifier	j		978546	0					
ANR	979499	IncDec	++		978546	1					
ANR	979500	IfStatement	if ( len ++ > 8 )		978546	1					
ANR	979501	Condition	len ++ > 8	3586:12:103103:103111	978546	0	True				
ANR	979502	RelationalExpression	len ++ > 8		978546	0		>			
ANR	979503	PostIncDecOperationExpression	len ++		978546	0					
ANR	979504	Identifier	len		978546	0					
ANR	979505	IncDec	++		978546	1					
ANR	979506	PrimaryExpression	8		978546	1					
ANR	979507	CompoundStatement		167:23:4106:4106	978546	1					
ANR	979508	ExpressionStatement	k ++	3587:9:103125:103128	978546	0	True				
ANR	979509	PostIncDecOperationExpression	k ++		978546	0					
ANR	979510	Identifier	k		978546	0					
ANR	979511	IncDec	++		978546	1					
ANR	979512	ElseStatement	else		978546	0					
ANR	979513	CompoundStatement		170:14:4146:4146	978546	0					
ANR	979514	ExpressionStatement	len = 0	3590:8:103164:103171	978546	0	True				
ANR	979515	AssignmentExpression	len = 0		978546	0		=			
ANR	979516	Identifier	len		978546	0					
ANR	979517	PrimaryExpression	0		978546	1					
ANR	979518	BreakStatement	break ;	3592:7:103189:103194	978546	11	True				
ANR	979519	Label	case 'p' :	3593:6:103202:103210	978546	12	True				
ANR	979520	IfStatement	if ( ( IS_PRINTABLE ( p [ j ] ) ) )		978546	13					
ANR	979521	Condition	IS_PRINTABLE ( p [ j ] )	3594:11:103223:103243	978546	0	True				
ANR	979522	CallExpression	IS_PRINTABLE ( p [ j ] )		978546	0					
ANR	979523	Callee	IS_PRINTABLE		978546	0					
ANR	979524	Identifier	IS_PRINTABLE		978546	0					
ANR	979525	ArgumentList	p [ j ]		978546	1					
ANR	979526	Argument	p [ j ]		978546	0					
ANR	979527	ArrayIndexing	p [ j ]		978546	0					
ANR	979528	Identifier	p		978546	0					
ANR	979529	Identifier	j		978546	1					
ANR	979530	CompoundStatement		175:34:4238:4238	978546	1					
ANR	979531	ExpressionStatement	k ++	3595:8:103256:103259	978546	0	True				
ANR	979532	PostIncDecOperationExpression	k ++		978546	0					
ANR	979533	Identifier	k		978546	0					
ANR	979534	IncDec	++		978546	1					
ANR	979535	BreakStatement	break ;	3597:7:103277:103282	978546	14	True				
ANR	979536	ExpressionStatement	ptr [ i ] = 256 * k / blocksize	3600:5:103304:103332	978546	3	True				
ANR	979537	AssignmentExpression	ptr [ i ] = 256 * k / blocksize		978546	0		=			
ANR	979538	ArrayIndexing	ptr [ i ]		978546	0					
ANR	979539	Identifier	ptr		978546	0					
ANR	979540	Identifier	i		978546	1					
ANR	979541	MultiplicativeExpression	256 * k / blocksize		978546	1		*			
ANR	979542	PrimaryExpression	256		978546	0					
ANR	979543	MultiplicativeExpression	k / blocksize		978546	1		/			
ANR	979544	Identifier	k		978546	0					
ANR	979545	Identifier	blocksize		978546	1					
ANR	979546	ExpressionStatement	"r_print_columns ( core -> print , ptr , nblocks , 14 )"	3602:4:103344:103391	978546	7	True				
ANR	979547	CallExpression	"r_print_columns ( core -> print , ptr , nblocks , 14 )"		978546	0					
ANR	979548	Callee	r_print_columns		978546	0					
ANR	979549	Identifier	r_print_columns		978546	0					
ANR	979550	ArgumentList	core -> print		978546	1					
ANR	979551	Argument	core -> print		978546	0					
ANR	979552	PtrMemberAccess	core -> print		978546	0					
ANR	979553	Identifier	core		978546	0					
ANR	979554	Identifier	print		978546	1					
ANR	979555	Argument	ptr		978546	1					
ANR	979556	Identifier	ptr		978546	0					
ANR	979557	Argument	nblocks		978546	2					
ANR	979558	Identifier	nblocks		978546	0					
ANR	979559	Argument	14		978546	3					
ANR	979560	PrimaryExpression	14		978546	0					
ANR	979561	ExpressionStatement	free ( p )	3603:4:103397:103405	978546	8	True				
ANR	979562	CallExpression	free ( p )		978546	0					
ANR	979563	Callee	free		978546	0					
ANR	979564	Identifier	free		978546	0					
ANR	979565	ArgumentList	p		978546	1					
ANR	979566	Argument	p		978546	0					
ANR	979567	Identifier	p		978546	0					
ANR	979568	BreakStatement	break ;	3605:3:103415:103420	978546	12	True				
ANR	979569	Label	case 'e' :	3606:2:103424:103432	978546	13	True				
ANR	979570	CompoundStatement		190:3:4453:4462	978546	14					
ANR	979571	IdentifierDeclStatement	ut8 * p ;	3608:3:103450:103456	978546	0	True				
ANR	979572	IdentifierDecl	* p		978546	0					
ANR	979573	IdentifierDeclType	ut8 *		978546	0					
ANR	979574	Identifier	p		978546	1					
ANR	979575	IdentifierDeclStatement	int i = 0 ;	3609:3:103461:103470	978546	1	True				
ANR	979576	IdentifierDecl	i = 0		978546	0					
ANR	979577	IdentifierDeclType	int		978546	0					
ANR	979578	Identifier	i		978546	1					
ANR	979579	AssignmentExpression	i = 0		978546	2		=			
ANR	979580	Identifier	i		978546	0					
ANR	979581	PrimaryExpression	0		978546	1					
ANR	979582	ExpressionStatement	"ptr = calloc ( 1 , nblocks )"	3610:3:103475:103500	978546	2	True				
ANR	979583	AssignmentExpression	"ptr = calloc ( 1 , nblocks )"		978546	0		=			
ANR	979584	Identifier	ptr		978546	0					
ANR	979585	CallExpression	"calloc ( 1 , nblocks )"		978546	1					
ANR	979586	Callee	calloc		978546	0					
ANR	979587	Identifier	calloc		978546	0					
ANR	979588	ArgumentList	1		978546	1					
ANR	979589	Argument	1		978546	0					
ANR	979590	PrimaryExpression	1		978546	0					
ANR	979591	Argument	nblocks		978546	1					
ANR	979592	Identifier	nblocks		978546	0					
ANR	979593	IfStatement	if ( ! ptr )		978546	3					
ANR	979594	Condition	! ptr	3611:7:103509:103512	978546	0	True				
ANR	979595	UnaryOperationExpression	! ptr		978546	0					
ANR	979596	UnaryOperator	!		978546	0					
ANR	979597	Identifier	ptr		978546	1					
ANR	979598	CompoundStatement		192:13:4507:4507	978546	1					
ANR	979599	ExpressionStatement	"eprintf ( ""Error: failed to malloc memory"" )"	3612:4:103521:103563	978546	0	True				
ANR	979600	CallExpression	"eprintf ( ""Error: failed to malloc memory"" )"		978546	0					
ANR	979601	Callee	eprintf		978546	0					
ANR	979602	Identifier	eprintf		978546	0					
ANR	979603	ArgumentList	"""Error: failed to malloc memory"""		978546	1					
ANR	979604	Argument	"""Error: failed to malloc memory"""		978546	0					
ANR	979605	PrimaryExpression	"""Error: failed to malloc memory"""		978546	0					
ANR	979606	GotoStatement	goto beach ;	3613:4:103569:103579	978546	1	True				
ANR	979607	Identifier	beach		978546	0					
ANR	979608	ExpressionStatement	p = malloc ( blocksize )	3615:3:103589:103611	978546	4	True				
ANR	979609	AssignmentExpression	p = malloc ( blocksize )		978546	0		=			
ANR	979610	Identifier	p		978546	0					
ANR	979611	CallExpression	malloc ( blocksize )		978546	1					
ANR	979612	Callee	malloc		978546	0					
ANR	979613	Identifier	malloc		978546	0					
ANR	979614	ArgumentList	blocksize		978546	1					
ANR	979615	Argument	blocksize		978546	0					
ANR	979616	Identifier	blocksize		978546	0					
ANR	979617	IfStatement	if ( ! p )		978546	5					
ANR	979618	Condition	! p	3616:7:103620:103621	978546	0	True				
ANR	979619	UnaryOperationExpression	! p		978546	0					
ANR	979620	UnaryOperator	!		978546	0					
ANR	979621	Identifier	p		978546	1					
ANR	979622	CompoundStatement		197:11:4616:4616	978546	1					
ANR	979623	ExpressionStatement	R_FREE ( ptr )	3617:4:103630:103642	978546	0	True				
ANR	979624	CallExpression	R_FREE ( ptr )		978546	0					
ANR	979625	Callee	R_FREE		978546	0					
ANR	979626	Identifier	R_FREE		978546	0					
ANR	979627	ArgumentList	ptr		978546	1					
ANR	979628	Argument	ptr		978546	0					
ANR	979629	Identifier	ptr		978546	0					
ANR	979630	ExpressionStatement	"eprintf ( ""Error: failed to malloc memory"" )"	3618:4:103648:103690	978546	1	True				
ANR	979631	CallExpression	"eprintf ( ""Error: failed to malloc memory"" )"		978546	0					
ANR	979632	Callee	eprintf		978546	0					
ANR	979633	Identifier	eprintf		978546	0					
ANR	979634	ArgumentList	"""Error: failed to malloc memory"""		978546	1					
ANR	979635	Argument	"""Error: failed to malloc memory"""		978546	0					
ANR	979636	PrimaryExpression	"""Error: failed to malloc memory"""		978546	0					
ANR	979637	GotoStatement	goto beach ;	3619:4:103696:103706	978546	2	True				
ANR	979638	Identifier	beach		978546	0					
ANR	979639	ForStatement	for ( i = 0 ; i < nblocks ; i ++ )		978546	6					
ANR	979640	ForInit	i = 0 ;	3621:8:103721:103726	978546	0	True				
ANR	979641	AssignmentExpression	i = 0		978546	0		=			
ANR	979642	Identifier	i		978546	0					
ANR	979643	PrimaryExpression	0		978546	1					
ANR	979644	Condition	i < nblocks	3621:15:103728:103738	978546	1	True				
ANR	979645	RelationalExpression	i < nblocks		978546	0		<			
ANR	979646	Identifier	i		978546	0					
ANR	979647	Identifier	nblocks		978546	1					
ANR	979648	PostIncDecOperationExpression	i ++	3621:28:103741:103743	978546	2	True				
ANR	979649	Identifier	i		978546	0					
ANR	979650	IncDec	++		978546	1					
ANR	979651	CompoundStatement		203:4:4744:4792	978546	3					
ANR	979652	IdentifierDeclStatement	ut64 off = from + ( blocksize * ( i + skipblocks ) ) ;	3622:4:103752:103800	978546	0	True				
ANR	979653	IdentifierDecl	off = from + ( blocksize * ( i + skipblocks ) )		978546	0					
ANR	979654	IdentifierDeclType	ut64		978546	0					
ANR	979655	Identifier	off		978546	1					
ANR	979656	AssignmentExpression	off = from + ( blocksize * ( i + skipblocks ) )		978546	2		=			
ANR	979657	Identifier	off		978546	0					
ANR	979658	AdditiveExpression	from + ( blocksize * ( i + skipblocks ) )		978546	1		+			
ANR	979659	Identifier	from		978546	0					
ANR	979660	MultiplicativeExpression	blocksize * ( i + skipblocks )		978546	1		*			
ANR	979661	Identifier	blocksize		978546	0					
ANR	979662	AdditiveExpression	i + skipblocks		978546	1		+			
ANR	979663	Identifier	i		978546	0					
ANR	979664	Identifier	skipblocks		978546	1					
ANR	979665	ExpressionStatement	"r_io_read_at ( core -> io , off , p , blocksize )"	3623:4:103806:103848	978546	1	True				
ANR	979666	CallExpression	"r_io_read_at ( core -> io , off , p , blocksize )"		978546	0					
ANR	979667	Callee	r_io_read_at		978546	0					
ANR	979668	Identifier	r_io_read_at		978546	0					
ANR	979669	ArgumentList	core -> io		978546	1					
ANR	979670	Argument	core -> io		978546	0					
ANR	979671	PtrMemberAccess	core -> io		978546	0					
ANR	979672	Identifier	core		978546	0					
ANR	979673	Identifier	io		978546	1					
ANR	979674	Argument	off		978546	1					
ANR	979675	Identifier	off		978546	0					
ANR	979676	Argument	p		978546	2					
ANR	979677	Identifier	p		978546	0					
ANR	979678	Argument	blocksize		978546	3					
ANR	979679	Identifier	blocksize		978546	0					
ANR	979680	ExpressionStatement	"ptr [ i ] = ( ut8 ) ( 255 * r_hash_entropy_fraction ( p , blocksize ) )"	3624:4:103854:103915	978546	2	True				
ANR	979681	AssignmentExpression	"ptr [ i ] = ( ut8 ) ( 255 * r_hash_entropy_fraction ( p , blocksize ) )"		978546	0		=			
ANR	979682	ArrayIndexing	ptr [ i ]		978546	0					
ANR	979683	Identifier	ptr		978546	0					
ANR	979684	Identifier	i		978546	1					
ANR	979685	CastExpression	"( ut8 ) ( 255 * r_hash_entropy_fraction ( p , blocksize ) )"		978546	1					
ANR	979686	CastTarget	ut8		978546	0					
ANR	979687	MultiplicativeExpression	"255 * r_hash_entropy_fraction ( p , blocksize )"		978546	1		*			
ANR	979688	PrimaryExpression	255		978546	0					
ANR	979689	CallExpression	"r_hash_entropy_fraction ( p , blocksize )"		978546	1					
ANR	979690	Callee	r_hash_entropy_fraction		978546	0					
ANR	979691	Identifier	r_hash_entropy_fraction		978546	0					
ANR	979692	ArgumentList	p		978546	1					
ANR	979693	Argument	p		978546	0					
ANR	979694	Identifier	p		978546	0					
ANR	979695	Argument	blocksize		978546	1					
ANR	979696	Identifier	blocksize		978546	0					
ANR	979697	ExpressionStatement	free ( p )	3626:3:103925:103933	978546	7	True				
ANR	979698	CallExpression	free ( p )		978546	0					
ANR	979699	Callee	free		978546	0					
ANR	979700	Identifier	free		978546	0					
ANR	979701	ArgumentList	p		978546	1					
ANR	979702	Argument	p		978546	0					
ANR	979703	Identifier	p		978546	0					
ANR	979704	ExpressionStatement	"r_print_columns ( core -> print , ptr , nblocks , 14 )"	3627:3:103938:103985	978546	8	True				
ANR	979705	CallExpression	"r_print_columns ( core -> print , ptr , nblocks , 14 )"		978546	0					
ANR	979706	Callee	r_print_columns		978546	0					
ANR	979707	Identifier	r_print_columns		978546	0					
ANR	979708	ArgumentList	core -> print		978546	1					
ANR	979709	Argument	core -> print		978546	0					
ANR	979710	PtrMemberAccess	core -> print		978546	0					
ANR	979711	Identifier	core		978546	0					
ANR	979712	Identifier	print		978546	1					
ANR	979713	Argument	ptr		978546	1					
ANR	979714	Identifier	ptr		978546	0					
ANR	979715	Argument	nblocks		978546	2					
ANR	979716	Identifier	nblocks		978546	0					
ANR	979717	Argument	14		978546	3					
ANR	979718	PrimaryExpression	14		978546	0					
ANR	979719	BreakStatement	break ;	3629:3:103994:103999	978546	15	True				
ANR	979720	Label	default :	3630:2:104003:104010	978546	16	True				
ANR	979721	Identifier	default		978546	0					
ANR	979722	ExpressionStatement	"r_print_columns ( core -> print , core -> block , core -> blocksize , 14 )"	3631:3:104015:104078	978546	17	True				
ANR	979723	CallExpression	"r_print_columns ( core -> print , core -> block , core -> blocksize , 14 )"		978546	0					
ANR	979724	Callee	r_print_columns		978546	0					
ANR	979725	Identifier	r_print_columns		978546	0					
ANR	979726	ArgumentList	core -> print		978546	1					
ANR	979727	Argument	core -> print		978546	0					
ANR	979728	PtrMemberAccess	core -> print		978546	0					
ANR	979729	Identifier	core		978546	0					
ANR	979730	Identifier	print		978546	1					
ANR	979731	Argument	core -> block		978546	1					
ANR	979732	PtrMemberAccess	core -> block		978546	0					
ANR	979733	Identifier	core		978546	0					
ANR	979734	Identifier	block		978546	1					
ANR	979735	Argument	core -> blocksize		978546	2					
ANR	979736	PtrMemberAccess	core -> blocksize		978546	0					
ANR	979737	Identifier	core		978546	0					
ANR	979738	Identifier	blocksize		978546	1					
ANR	979739	Argument	14		978546	3					
ANR	979740	PrimaryExpression	14		978546	0					
ANR	979741	BreakStatement	break ;	3632:3:104083:104088	978546	18	True				
ANR	979742	BreakStatement	break ;	3634:2:104096:104101	978546	5	True				
ANR	979743	Label	case '2' :	3635:1:104104:104112	978546	6	True				
ANR	979744	CompoundStatement		221:3:5249:5265	978546	7					
ANR	979745	IdentifierDeclStatement	short * word = ( short * ) core -> block ;	3637:3:104130:104164	978546	0	True				
ANR	979746	IdentifierDecl	* word = ( short * ) core -> block		978546	0					
ANR	979747	IdentifierDeclType	short *		978546	0					
ANR	979748	Identifier	word		978546	1					
ANR	979749	AssignmentExpression	* word = ( short * ) core -> block		978546	2		=			
ANR	979750	Identifier	word		978546	0					
ANR	979751	CastExpression	( short * ) core -> block		978546	1					
ANR	979752	CastTarget	short *		978546	0					
ANR	979753	PtrMemberAccess	core -> block		978546	1					
ANR	979754	Identifier	core		978546	0					
ANR	979755	Identifier	block		978546	1					
ANR	979756	IdentifierDeclStatement	"int i , words = core -> blocksize / 2 ;"	3638:3:104169:104203	978546	1	True				
ANR	979757	IdentifierDecl	i		978546	0					
ANR	979758	IdentifierDeclType	int		978546	0					
ANR	979759	Identifier	i		978546	1					
ANR	979760	IdentifierDecl	words = core -> blocksize / 2		978546	1					
ANR	979761	IdentifierDeclType	int		978546	0					
ANR	979762	Identifier	words		978546	1					
ANR	979763	AssignmentExpression	words = core -> blocksize / 2		978546	2		=			
ANR	979764	Identifier	words		978546	0					
ANR	979765	MultiplicativeExpression	core -> blocksize / 2		978546	1		/			
ANR	979766	PtrMemberAccess	core -> blocksize		978546	0					
ANR	979767	Identifier	core		978546	0					
ANR	979768	Identifier	blocksize		978546	1					
ANR	979769	PrimaryExpression	2		978546	1					
ANR	979770	IdentifierDeclStatement	"int step = r_num_math ( core -> num , input + 2 ) ;"	3639:3:104208:104252	978546	2	True				
ANR	979771	IdentifierDecl	"step = r_num_math ( core -> num , input + 2 )"		978546	0					
ANR	979772	IdentifierDeclType	int		978546	0					
ANR	979773	Identifier	step		978546	1					
ANR	979774	AssignmentExpression	"step = r_num_math ( core -> num , input + 2 )"		978546	2		=			
ANR	979775	Identifier	step		978546	0					
ANR	979776	CallExpression	"r_num_math ( core -> num , input + 2 )"		978546	1					
ANR	979777	Callee	r_num_math		978546	0					
ANR	979778	Identifier	r_num_math		978546	0					
ANR	979779	ArgumentList	core -> num		978546	1					
ANR	979780	Argument	core -> num		978546	0					
ANR	979781	PtrMemberAccess	core -> num		978546	0					
ANR	979782	Identifier	core		978546	0					
ANR	979783	Identifier	num		978546	1					
ANR	979784	Argument	input + 2		978546	1					
ANR	979785	AdditiveExpression	input + 2		978546	0		+			
ANR	979786	Identifier	input		978546	0					
ANR	979787	PrimaryExpression	2		978546	1					
ANR	979788	IdentifierDeclStatement	ut64 oldword = 0 ;	3640:3:104257:104273	978546	3	True				
ANR	979789	IdentifierDecl	oldword = 0		978546	0					
ANR	979790	IdentifierDeclType	ut64		978546	0					
ANR	979791	Identifier	oldword		978546	1					
ANR	979792	AssignmentExpression	oldword = 0		978546	2		=			
ANR	979793	Identifier	oldword		978546	0					
ANR	979794	PrimaryExpression	0		978546	1					
ANR	979795	ForStatement	for ( i = 0 ; i < words ; i ++ )		978546	4					
ANR	979796	ForInit	i = 0 ;	3641:8:104283:104288	978546	0	True				
ANR	979797	AssignmentExpression	i = 0		978546	0		=			
ANR	979798	Identifier	i		978546	0					
ANR	979799	PrimaryExpression	0		978546	1					
ANR	979800	Condition	i < words	3641:15:104290:104296	978546	1	True				
ANR	979801	RelationalExpression	i < words		978546	0		<			
ANR	979802	Identifier	i		978546	0					
ANR	979803	Identifier	words		978546	1					
ANR	979804	PostIncDecOperationExpression	i ++	3641:24:104299:104301	978546	2	True				
ANR	979805	Identifier	i		978546	0					
ANR	979806	IncDec	++		978546	1					
ANR	979807	CompoundStatement		223:4:5302:5334	978546	3					
ANR	979808	IdentifierDeclStatement	ut64 word64 = word [ i ] + ST16_MAX ;	3642:4:104310:104342	978546	0	True				
ANR	979809	IdentifierDecl	word64 = word [ i ] + ST16_MAX		978546	0					
ANR	979810	IdentifierDeclType	ut64		978546	0					
ANR	979811	Identifier	word64		978546	1					
ANR	979812	AssignmentExpression	word64 = word [ i ] + ST16_MAX		978546	2		=			
ANR	979813	Identifier	word64		978546	0					
ANR	979814	AdditiveExpression	word [ i ] + ST16_MAX		978546	1		+			
ANR	979815	ArrayIndexing	word [ i ]		978546	0					
ANR	979816	Identifier	word		978546	0					
ANR	979817	Identifier	i		978546	1					
ANR	979818	Identifier	ST16_MAX		978546	1					
ANR	979819	Statement	r_cons_printf	3643:4:104348:104360	978546	1	True				
ANR	979820	Statement	(	3643:18:104362:104362	978546	2	True				
ANR	979821	Statement	"""0x%08"""	3643:19:104363:104369	978546	3	True				
ANR	979822	Statement	PFMT64x	3643:26:104370:104376	978546	4	True				
ANR	979823	Statement	""" %8d  """	3643:33:104377:104384	978546	5	True				
ANR	979824	Statement	","	3643:41:104385:104385	978546	6	True				
ANR	979825	Statement	core	3643:43:104387:104390	978546	7	True				
ANR	979826	Statement	->	3643:47:104391:104392	978546	8	True				
ANR	979827	Statement	offset	3643:49:104393:104398	978546	9	True				
ANR	979828	Statement	+	3643:56:104400:104400	978546	10	True				
ANR	979829	Statement	(	3643:58:104402:104402	978546	11	True				
ANR	979830	Statement	i	3643:59:104403:104403	978546	12	True				
ANR	979831	Statement	*	3643:61:104405:104405	978546	13	True				
ANR	979832	Statement	2	3643:62:104406:104406	978546	14	True				
ANR	979833	Statement	)	3643:63:104407:104407	978546	15	True				
ANR	979834	Statement	","	3643:64:104408:104408	978546	16	True				
ANR	979835	Statement	word	3643:66:104410:104413	978546	17	True				
ANR	979836	Statement	[	3643:70:104414:104414	978546	18	True				
ANR	979837	Statement	i	3643:71:104415:104415	978546	19	True				
ANR	979838	Statement	]	3643:72:104416:104416	978546	20	True				
ANR	979839	Statement	)	3643:73:104417:104417	978546	21	True				
ANR	979840	ExpressionStatement		3643:74:104418:104418	978546	22	True				
ANR	979841	ExpressionStatement	"r_print_progressbar ( core -> print , word64 * 100 / UT16_MAX , 60 )"	3644:4:104424:104486	978546	23	True				
ANR	979842	CallExpression	"r_print_progressbar ( core -> print , word64 * 100 / UT16_MAX , 60 )"		978546	0					
ANR	979843	Callee	r_print_progressbar		978546	0					
ANR	979844	Identifier	r_print_progressbar		978546	0					
ANR	979845	ArgumentList	core -> print		978546	1					
ANR	979846	Argument	core -> print		978546	0					
ANR	979847	PtrMemberAccess	core -> print		978546	0					
ANR	979848	Identifier	core		978546	0					
ANR	979849	Identifier	print		978546	1					
ANR	979850	Argument	word64 * 100 / UT16_MAX		978546	1					
ANR	979851	MultiplicativeExpression	word64 * 100 / UT16_MAX		978546	0		*			
ANR	979852	Identifier	word64		978546	0					
ANR	979853	MultiplicativeExpression	100 / UT16_MAX		978546	1		/			
ANR	979854	PrimaryExpression	100		978546	0					
ANR	979855	Identifier	UT16_MAX		978546	1					
ANR	979856	Argument	60		978546	2					
ANR	979857	PrimaryExpression	60		978546	0					
ANR	979858	ExpressionStatement	"r_cons_printf ( "" %d"" , word64 - oldword )"	3645:4:104492:104531	978546	24	True				
ANR	979859	CallExpression	"r_cons_printf ( "" %d"" , word64 - oldword )"		978546	0					
ANR	979860	Callee	r_cons_printf		978546	0					
ANR	979861	Identifier	r_cons_printf		978546	0					
ANR	979862	ArgumentList	""" %d"""		978546	1					
ANR	979863	Argument	""" %d"""		978546	0					
ANR	979864	PrimaryExpression	""" %d"""		978546	0					
ANR	979865	Argument	word64 - oldword		978546	1					
ANR	979866	AdditiveExpression	word64 - oldword		978546	0		-			
ANR	979867	Identifier	word64		978546	0					
ANR	979868	Identifier	oldword		978546	1					
ANR	979869	ExpressionStatement	oldword = word64	3646:4:104537:104553	978546	25	True				
ANR	979870	AssignmentExpression	oldword = word64		978546	0		=			
ANR	979871	Identifier	oldword		978546	0					
ANR	979872	Identifier	word64		978546	1					
ANR	979873	ExpressionStatement	r_cons_newline ( )	3647:4:104559:104576	978546	26	True				
ANR	979874	CallExpression	r_cons_newline ( )		978546	0					
ANR	979875	Callee	r_cons_newline		978546	0					
ANR	979876	Identifier	r_cons_newline		978546	0					
ANR	979877	ArgumentList			978546	1					
ANR	979878	ExpressionStatement	i += step	3648:4:104582:104591	978546	27	True				
ANR	979879	AssignmentExpression	i += step		978546	0		+=			
ANR	979880	Identifier	i		978546	0					
ANR	979881	Identifier	step		978546	1					
ANR	979882	BreakStatement	break ;	3651:2:104604:104609	978546	8	True				
ANR	979883	Label	case 'd' :	3652:1:104612:104620	978546	9	True				
ANR	979884	ExpressionStatement	ptr = NULL	3653:2:104633:104643	978546	10	True				
ANR	979885	AssignmentExpression	ptr = NULL		978546	0		=			
ANR	979886	Identifier	ptr		978546	0					
ANR	979887	Identifier	NULL		978546	1					
ANR	979888	IfStatement	if ( input [ 2 ] )		978546	11					
ANR	979889	Condition	input [ 2 ]	3654:6:104651:104658	978546	0	True				
ANR	979890	ArrayIndexing	input [ 2 ]		978546	0					
ANR	979891	Identifier	input		978546	0					
ANR	979892	PrimaryExpression	2		978546	1					
ANR	979893	CompoundStatement		237:3:5709:5738	978546	1					
ANR	979894	IdentifierDeclStatement	"ut64 bufsz = r_num_math ( core -> num , input + 3 ) ;"	3655:3:104666:104712	978546	0	True				
ANR	979895	IdentifierDecl	"bufsz = r_num_math ( core -> num , input + 3 )"		978546	0					
ANR	979896	IdentifierDeclType	ut64		978546	0					
ANR	979897	Identifier	bufsz		978546	1					
ANR	979898	AssignmentExpression	"bufsz = r_num_math ( core -> num , input + 3 )"		978546	2		=			
ANR	979899	Identifier	bufsz		978546	0					
ANR	979900	CallExpression	"r_num_math ( core -> num , input + 3 )"		978546	1					
ANR	979901	Callee	r_num_math		978546	0					
ANR	979902	Identifier	r_num_math		978546	0					
ANR	979903	ArgumentList	core -> num		978546	1					
ANR	979904	Argument	core -> num		978546	0					
ANR	979905	PtrMemberAccess	core -> num		978546	0					
ANR	979906	Identifier	core		978546	0					
ANR	979907	Identifier	num		978546	1					
ANR	979908	Argument	input + 3		978546	1					
ANR	979909	AdditiveExpression	input + 3		978546	0		+			
ANR	979910	Identifier	input		978546	0					
ANR	979911	PrimaryExpression	3		978546	1					
ANR	979912	IdentifierDeclStatement	ut64 curbsz = core -> blocksize ;	3656:3:104717:104746	978546	1	True				
ANR	979913	IdentifierDecl	curbsz = core -> blocksize		978546	0					
ANR	979914	IdentifierDeclType	ut64		978546	0					
ANR	979915	Identifier	curbsz		978546	1					
ANR	979916	AssignmentExpression	curbsz = core -> blocksize		978546	2		=			
ANR	979917	Identifier	curbsz		978546	0					
ANR	979918	PtrMemberAccess	core -> blocksize		978546	1					
ANR	979919	Identifier	core		978546	0					
ANR	979920	Identifier	blocksize		978546	1					
ANR	979921	IfStatement	if ( bufsz < 1 )		978546	2					
ANR	979922	Condition	bufsz < 1	3657:7:104755:104763	978546	0	True				
ANR	979923	RelationalExpression	bufsz < 1		978546	0		<			
ANR	979924	Identifier	bufsz		978546	0					
ANR	979925	PrimaryExpression	1		978546	1					
ANR	979926	CompoundStatement		238:18:5758:5758	978546	1					
ANR	979927	ExpressionStatement	bufsz = curbsz	3658:4:104772:104786	978546	0	True				
ANR	979928	AssignmentExpression	bufsz = curbsz		978546	0		=			
ANR	979929	Identifier	bufsz		978546	0					
ANR	979930	Identifier	curbsz		978546	1					
ANR	979931	IfStatement	if ( bufsz > core -> blocksize )		978546	3					
ANR	979932	Condition	bufsz > core -> blocksize	3660:7:104800:104822	978546	0	True				
ANR	979933	RelationalExpression	bufsz > core -> blocksize		978546	0		>			
ANR	979934	Identifier	bufsz		978546	0					
ANR	979935	PtrMemberAccess	core -> blocksize		978546	1					
ANR	979936	Identifier	core		978546	0					
ANR	979937	Identifier	blocksize		978546	1					
ANR	979938	CompoundStatement		241:32:5817:5817	978546	1					
ANR	979939	ExpressionStatement	"r_core_block_size ( core , bufsz )"	3661:4:104831:104862	978546	0	True				
ANR	979940	CallExpression	"r_core_block_size ( core , bufsz )"		978546	0					
ANR	979941	Callee	r_core_block_size		978546	0					
ANR	979942	Identifier	r_core_block_size		978546	0					
ANR	979943	ArgumentList	core		978546	1					
ANR	979944	Argument	core		978546	0					
ANR	979945	Identifier	core		978546	0					
ANR	979946	Argument	bufsz		978546	1					
ANR	979947	Identifier	bufsz		978546	0					
ANR	979948	ExpressionStatement	r_core_block_read ( core )	3662:4:104868:104892	978546	1	True				
ANR	979949	CallExpression	r_core_block_read ( core )		978546	0					
ANR	979950	Callee	r_core_block_read		978546	0					
ANR	979951	Identifier	r_core_block_read		978546	0					
ANR	979952	ArgumentList	core		978546	1					
ANR	979953	Argument	core		978546	0					
ANR	979954	Identifier	core		978546	0					
ANR	979955	ExpressionStatement	"cmd_print_eq_dict ( core , core -> block , bufsz )"	3664:3:104902:104946	978546	4	True				
ANR	979956	CallExpression	"cmd_print_eq_dict ( core , core -> block , bufsz )"		978546	0					
ANR	979957	Callee	cmd_print_eq_dict		978546	0					
ANR	979958	Identifier	cmd_print_eq_dict		978546	0					
ANR	979959	ArgumentList	core		978546	1					
ANR	979960	Argument	core		978546	0					
ANR	979961	Identifier	core		978546	0					
ANR	979962	Argument	core -> block		978546	1					
ANR	979963	PtrMemberAccess	core -> block		978546	0					
ANR	979964	Identifier	core		978546	0					
ANR	979965	Identifier	block		978546	1					
ANR	979966	Argument	bufsz		978546	2					
ANR	979967	Identifier	bufsz		978546	0					
ANR	979968	IfStatement	if ( bufsz != curbsz )		978546	5					
ANR	979969	Condition	bufsz != curbsz	3665:7:104955:104969	978546	0	True				
ANR	979970	EqualityExpression	bufsz != curbsz		978546	0		!=			
ANR	979971	Identifier	bufsz		978546	0					
ANR	979972	Identifier	curbsz		978546	1					
ANR	979973	CompoundStatement		246:24:5964:5964	978546	1					
ANR	979974	ExpressionStatement	"r_core_block_size ( core , curbsz )"	3666:4:104978:105010	978546	0	True				
ANR	979975	CallExpression	"r_core_block_size ( core , curbsz )"		978546	0					
ANR	979976	Callee	r_core_block_size		978546	0					
ANR	979977	Identifier	r_core_block_size		978546	0					
ANR	979978	ArgumentList	core		978546	1					
ANR	979979	Argument	core		978546	0					
ANR	979980	Identifier	core		978546	0					
ANR	979981	Argument	curbsz		978546	1					
ANR	979982	Identifier	curbsz		978546	0					
ANR	979983	ElseStatement	else		978546	0					
ANR	979984	CompoundStatement		249:9:6018:6018	978546	0					
ANR	979985	ExpressionStatement	"cmd_print_eq_dict ( core , core -> block , core -> blocksize )"	3669:3:105031:105085	978546	0	True				
ANR	979986	CallExpression	"cmd_print_eq_dict ( core , core -> block , core -> blocksize )"		978546	0					
ANR	979987	Callee	cmd_print_eq_dict		978546	0					
ANR	979988	Identifier	cmd_print_eq_dict		978546	0					
ANR	979989	ArgumentList	core		978546	1					
ANR	979990	Argument	core		978546	0					
ANR	979991	Identifier	core		978546	0					
ANR	979992	Argument	core -> block		978546	1					
ANR	979993	PtrMemberAccess	core -> block		978546	0					
ANR	979994	Identifier	core		978546	0					
ANR	979995	Identifier	block		978546	1					
ANR	979996	Argument	core -> blocksize		978546	2					
ANR	979997	PtrMemberAccess	core -> blocksize		978546	0					
ANR	979998	Identifier	core		978546	0					
ANR	979999	Identifier	blocksize		978546	1					
ANR	980000	BreakStatement	break ;	3671:2:105093:105098	978546	12	True				
ANR	980001	Label	case 'j' :	3672:1:105101:105109	978546	13	True				
ANR	980002	Label	case 'A' :	3673:1:105134:105142	978546	14	True				
ANR	980003	Label	case 'a' :	3674:1:105164:105172	978546	15	True				
ANR	980004	Label	case 'c' :	3675:1:105192:105200	978546	16	True				
ANR	980005	Label	case 'i' :	3676:1:105218:105226	978546	17	True				
ANR	980006	Label	case 's' :	3677:1:105246:105254	978546	18	True				
ANR	980007	IfStatement	"if ( ( ptr = analBars ( core , mode , nblocks , blocksize , skipblocks , from ) ) )"		978546	19					
ANR	980008	Condition	"ptr = analBars ( core , mode , nblocks , blocksize , skipblocks , from )"	3678:6:105280:105346	978546	0	True				
ANR	980009	AssignmentExpression	"ptr = analBars ( core , mode , nblocks , blocksize , skipblocks , from )"		978546	0		=			
ANR	980010	Identifier	ptr		978546	0					
ANR	980011	CallExpression	"analBars ( core , mode , nblocks , blocksize , skipblocks , from )"		978546	1					
ANR	980012	Callee	analBars		978546	0					
ANR	980013	Identifier	analBars		978546	0					
ANR	980014	ArgumentList	core		978546	1					
ANR	980015	Argument	core		978546	0					
ANR	980016	Identifier	core		978546	0					
ANR	980017	Argument	mode		978546	1					
ANR	980018	Identifier	mode		978546	0					
ANR	980019	Argument	nblocks		978546	2					
ANR	980020	Identifier	nblocks		978546	0					
ANR	980021	Argument	blocksize		978546	3					
ANR	980022	Identifier	blocksize		978546	0					
ANR	980023	Argument	skipblocks		978546	4					
ANR	980024	Identifier	skipblocks		978546	0					
ANR	980025	Argument	from		978546	5					
ANR	980026	Identifier	from		978546	0					
ANR	980027	CompoundStatement		259:75:6341:6341	978546	1					
ANR	980028	ExpressionStatement	print_bars = true	3679:3:105354:105371	978546	0	True				
ANR	980029	AssignmentExpression	print_bars = true		978546	0		=			
ANR	980030	Identifier	print_bars		978546	0					
ANR	980031	Identifier	true		978546	1					
ANR	980032	BreakStatement	break ;	3681:2:105379:105384	978546	20	True				
ANR	980033	Label	case 'm' :	3682:1:105387:105395	978546	21	True				
ANR	980034	CompoundStatement		266:2:6404:6416	978546	22					
ANR	980035	IdentifierDeclStatement	ut8 * p ;	3684:2:105402:105408	978546	0	True				
ANR	980036	IdentifierDecl	* p		978546	0					
ANR	980037	IdentifierDeclType	ut8 *		978546	0					
ANR	980038	Identifier	p		978546	1					
ANR	980039	IdentifierDeclStatement	"int j , i = 0 ;"	3685:2:105412:105424	978546	1	True				
ANR	980040	IdentifierDecl	j		978546	0					
ANR	980041	IdentifierDeclType	int		978546	0					
ANR	980042	Identifier	j		978546	1					
ANR	980043	IdentifierDecl	i = 0		978546	1					
ANR	980044	IdentifierDeclType	int		978546	0					
ANR	980045	Identifier	i		978546	1					
ANR	980046	AssignmentExpression	i = 0		978546	2		=			
ANR	980047	Identifier	i		978546	0					
ANR	980048	PrimaryExpression	0		978546	1					
ANR	980049	ExpressionStatement	"ptr = calloc ( 1 , nblocks )"	3686:2:105428:105453	978546	2	True				
ANR	980050	AssignmentExpression	"ptr = calloc ( 1 , nblocks )"		978546	0		=			
ANR	980051	Identifier	ptr		978546	0					
ANR	980052	CallExpression	"calloc ( 1 , nblocks )"		978546	1					
ANR	980053	Callee	calloc		978546	0					
ANR	980054	Identifier	calloc		978546	0					
ANR	980055	ArgumentList	1		978546	1					
ANR	980056	Argument	1		978546	0					
ANR	980057	PrimaryExpression	1		978546	0					
ANR	980058	Argument	nblocks		978546	1					
ANR	980059	Identifier	nblocks		978546	0					
ANR	980060	IfStatement	if ( ! ptr )		978546	3					
ANR	980061	Condition	! ptr	3687:6:105461:105464	978546	0	True				
ANR	980062	UnaryOperationExpression	! ptr		978546	0					
ANR	980063	UnaryOperator	!		978546	0					
ANR	980064	Identifier	ptr		978546	1					
ANR	980065	CompoundStatement		268:12:6459:6459	978546	1					
ANR	980066	ExpressionStatement	"eprintf ( ""Error: failed to malloc memory"" )"	3688:3:105472:105514	978546	0	True				
ANR	980067	CallExpression	"eprintf ( ""Error: failed to malloc memory"" )"		978546	0					
ANR	980068	Callee	eprintf		978546	0					
ANR	980069	Identifier	eprintf		978546	0					
ANR	980070	ArgumentList	"""Error: failed to malloc memory"""		978546	1					
ANR	980071	Argument	"""Error: failed to malloc memory"""		978546	0					
ANR	980072	PrimaryExpression	"""Error: failed to malloc memory"""		978546	0					
ANR	980073	GotoStatement	goto beach ;	3689:3:105519:105529	978546	1	True				
ANR	980074	Identifier	beach		978546	0					
ANR	980075	ExpressionStatement	p = malloc ( blocksize )	3691:2:105537:105559	978546	4	True				
ANR	980076	AssignmentExpression	p = malloc ( blocksize )		978546	0		=			
ANR	980077	Identifier	p		978546	0					
ANR	980078	CallExpression	malloc ( blocksize )		978546	1					
ANR	980079	Callee	malloc		978546	0					
ANR	980080	Identifier	malloc		978546	0					
ANR	980081	ArgumentList	blocksize		978546	1					
ANR	980082	Argument	blocksize		978546	0					
ANR	980083	Identifier	blocksize		978546	0					
ANR	980084	IfStatement	if ( ! p )		978546	5					
ANR	980085	Condition	! p	3692:6:105567:105568	978546	0	True				
ANR	980086	UnaryOperationExpression	! p		978546	0					
ANR	980087	UnaryOperator	!		978546	0					
ANR	980088	Identifier	p		978546	1					
ANR	980089	CompoundStatement		273:10:6563:6563	978546	1					
ANR	980090	ExpressionStatement	R_FREE ( ptr )	3693:3:105576:105588	978546	0	True				
ANR	980091	CallExpression	R_FREE ( ptr )		978546	0					
ANR	980092	Callee	R_FREE		978546	0					
ANR	980093	Identifier	R_FREE		978546	0					
ANR	980094	ArgumentList	ptr		978546	1					
ANR	980095	Argument	ptr		978546	0					
ANR	980096	Identifier	ptr		978546	0					
ANR	980097	ExpressionStatement	"eprintf ( ""Error: failed to malloc memory"" )"	3694:3:105593:105635	978546	1	True				
ANR	980098	CallExpression	"eprintf ( ""Error: failed to malloc memory"" )"		978546	0					
ANR	980099	Callee	eprintf		978546	0					
ANR	980100	Identifier	eprintf		978546	0					
ANR	980101	ArgumentList	"""Error: failed to malloc memory"""		978546	1					
ANR	980102	Argument	"""Error: failed to malloc memory"""		978546	0					
ANR	980103	PrimaryExpression	"""Error: failed to malloc memory"""		978546	0					
ANR	980104	GotoStatement	goto beach ;	3695:3:105640:105650	978546	2	True				
ANR	980105	Identifier	beach		978546	0					
ANR	980106	ForStatement	for ( i = 0 ; i < nblocks ; i ++ )		978546	6					
ANR	980107	ForInit	i = 0 ;	3697:7:105663:105668	978546	0	True				
ANR	980108	AssignmentExpression	i = 0		978546	0		=			
ANR	980109	Identifier	i		978546	0					
ANR	980110	PrimaryExpression	0		978546	1					
ANR	980111	Condition	i < nblocks	3697:14:105670:105680	978546	1	True				
ANR	980112	RelationalExpression	i < nblocks		978546	0		<			
ANR	980113	Identifier	i		978546	0					
ANR	980114	Identifier	nblocks		978546	1					
ANR	980115	PostIncDecOperationExpression	i ++	3697:27:105683:105685	978546	2	True				
ANR	980116	Identifier	i		978546	0					
ANR	980117	IncDec	++		978546	1					
ANR	980118	CompoundStatement		279:3:6685:6733	978546	3					
ANR	980119	IdentifierDeclStatement	ut64 off = from + ( blocksize * ( i + skipblocks ) ) ;	3698:3:105693:105741	978546	0	True				
ANR	980120	IdentifierDecl	off = from + ( blocksize * ( i + skipblocks ) )		978546	0					
ANR	980121	IdentifierDeclType	ut64		978546	0					
ANR	980122	Identifier	off		978546	1					
ANR	980123	AssignmentExpression	off = from + ( blocksize * ( i + skipblocks ) )		978546	2		=			
ANR	980124	Identifier	off		978546	0					
ANR	980125	AdditiveExpression	from + ( blocksize * ( i + skipblocks ) )		978546	1		+			
ANR	980126	Identifier	from		978546	0					
ANR	980127	MultiplicativeExpression	blocksize * ( i + skipblocks )		978546	1		*			
ANR	980128	Identifier	blocksize		978546	0					
ANR	980129	AdditiveExpression	i + skipblocks		978546	1		+			
ANR	980130	Identifier	i		978546	0					
ANR	980131	Identifier	skipblocks		978546	1					
ANR	980132	ForStatement	for ( j = 0 ; j < blocksize ; j ++ )		978546	1					
ANR	980133	ForInit	j = 0 ;	3699:8:105751:105756	978546	0	True				
ANR	980134	AssignmentExpression	j = 0		978546	0		=			
ANR	980135	Identifier	j		978546	0					
ANR	980136	PrimaryExpression	0		978546	1					
ANR	980137	Condition	j < blocksize	3699:15:105758:105770	978546	1	True				
ANR	980138	RelationalExpression	j < blocksize		978546	0		<			
ANR	980139	Identifier	j		978546	0					
ANR	980140	Identifier	blocksize		978546	1					
ANR	980141	PostIncDecOperationExpression	j ++	3699:30:105773:105775	978546	2	True				
ANR	980142	Identifier	j		978546	0					
ANR	980143	IncDec	++		978546	1					
ANR	980144	CompoundStatement		280:35:6770:6770	978546	3					
ANR	980145	IfStatement	"if ( r_flag_get_at ( core -> flags , off + j , false ) )"		978546	0					
ANR	980146	Condition	"r_flag_get_at ( core -> flags , off + j , false )"	3700:8:105788:105830	978546	0	True				
ANR	980147	CallExpression	"r_flag_get_at ( core -> flags , off + j , false )"		978546	0					
ANR	980148	Callee	r_flag_get_at		978546	0					
ANR	980149	Identifier	r_flag_get_at		978546	0					
ANR	980150	ArgumentList	core -> flags		978546	1					
ANR	980151	Argument	core -> flags		978546	0					
ANR	980152	PtrMemberAccess	core -> flags		978546	0					
ANR	980153	Identifier	core		978546	0					
ANR	980154	Identifier	flags		978546	1					
ANR	980155	Argument	off + j		978546	1					
ANR	980156	AdditiveExpression	off + j		978546	0		+			
ANR	980157	Identifier	off		978546	0					
ANR	980158	Identifier	j		978546	1					
ANR	980159	Argument	false		978546	2					
ANR	980160	Identifier	false		978546	0					
ANR	980161	CompoundStatement		281:53:6825:6825	978546	1					
ANR	980162	ExpressionStatement	"matchBar ( ptr , i )"	3701:5:105840:105857	978546	0	True				
ANR	980163	CallExpression	"matchBar ( ptr , i )"		978546	0					
ANR	980164	Callee	matchBar		978546	0					
ANR	980165	Identifier	matchBar		978546	0					
ANR	980166	ArgumentList	ptr		978546	1					
ANR	980167	Argument	ptr		978546	0					
ANR	980168	Identifier	ptr		978546	0					
ANR	980169	Argument	i		978546	1					
ANR	980170	Identifier	i		978546	0					
ANR	980171	ExpressionStatement	free ( p )	3705:2:105876:105884	978546	7	True				
ANR	980172	CallExpression	free ( p )		978546	0					
ANR	980173	Callee	free		978546	0					
ANR	980174	Identifier	free		978546	0					
ANR	980175	ArgumentList	p		978546	1					
ANR	980176	Argument	p		978546	0					
ANR	980177	Identifier	p		978546	0					
ANR	980178	ExpressionStatement	print_bars = true	3706:2:105888:105905	978546	8	True				
ANR	980179	AssignmentExpression	print_bars = true		978546	0		=			
ANR	980180	Identifier	print_bars		978546	0					
ANR	980181	Identifier	true		978546	1					
ANR	980182	BreakStatement	break ;	3708:2:105912:105917	978546	23	True				
ANR	980183	Label	case 'e' :	3709:1:105920:105928	978546	24	True				
ANR	980184	CompoundStatement		293:2:6954:6963	978546	25					
ANR	980185	IdentifierDeclStatement	ut8 * p ;	3711:2:105952:105958	978546	0	True				
ANR	980186	IdentifierDecl	* p		978546	0					
ANR	980187	IdentifierDeclType	ut8 *		978546	0					
ANR	980188	Identifier	p		978546	1					
ANR	980189	IdentifierDeclStatement	int i = 0 ;	3712:2:105962:105971	978546	1	True				
ANR	980190	IdentifierDecl	i = 0		978546	0					
ANR	980191	IdentifierDeclType	int		978546	0					
ANR	980192	Identifier	i		978546	1					
ANR	980193	AssignmentExpression	i = 0		978546	2		=			
ANR	980194	Identifier	i		978546	0					
ANR	980195	PrimaryExpression	0		978546	1					
ANR	980196	ExpressionStatement	"ptr = calloc ( 1 , nblocks )"	3713:2:105975:106000	978546	2	True				
ANR	980197	AssignmentExpression	"ptr = calloc ( 1 , nblocks )"		978546	0		=			
ANR	980198	Identifier	ptr		978546	0					
ANR	980199	CallExpression	"calloc ( 1 , nblocks )"		978546	1					
ANR	980200	Callee	calloc		978546	0					
ANR	980201	Identifier	calloc		978546	0					
ANR	980202	ArgumentList	1		978546	1					
ANR	980203	Argument	1		978546	0					
ANR	980204	PrimaryExpression	1		978546	0					
ANR	980205	Argument	nblocks		978546	1					
ANR	980206	Identifier	nblocks		978546	0					
ANR	980207	IfStatement	if ( ! ptr )		978546	3					
ANR	980208	Condition	! ptr	3714:6:106008:106011	978546	0	True				
ANR	980209	UnaryOperationExpression	! ptr		978546	0					
ANR	980210	UnaryOperator	!		978546	0					
ANR	980211	Identifier	ptr		978546	1					
ANR	980212	CompoundStatement		295:12:7006:7006	978546	1					
ANR	980213	ExpressionStatement	"eprintf ( ""Error: failed to malloc memory"" )"	3715:3:106019:106061	978546	0	True				
ANR	980214	CallExpression	"eprintf ( ""Error: failed to malloc memory"" )"		978546	0					
ANR	980215	Callee	eprintf		978546	0					
ANR	980216	Identifier	eprintf		978546	0					
ANR	980217	ArgumentList	"""Error: failed to malloc memory"""		978546	1					
ANR	980218	Argument	"""Error: failed to malloc memory"""		978546	0					
ANR	980219	PrimaryExpression	"""Error: failed to malloc memory"""		978546	0					
ANR	980220	GotoStatement	goto beach ;	3716:3:106066:106076	978546	1	True				
ANR	980221	Identifier	beach		978546	0					
ANR	980222	ExpressionStatement	p = malloc ( blocksize )	3718:2:106084:106106	978546	4	True				
ANR	980223	AssignmentExpression	p = malloc ( blocksize )		978546	0		=			
ANR	980224	Identifier	p		978546	0					
ANR	980225	CallExpression	malloc ( blocksize )		978546	1					
ANR	980226	Callee	malloc		978546	0					
ANR	980227	Identifier	malloc		978546	0					
ANR	980228	ArgumentList	blocksize		978546	1					
ANR	980229	Argument	blocksize		978546	0					
ANR	980230	Identifier	blocksize		978546	0					
ANR	980231	IfStatement	if ( ! p )		978546	5					
ANR	980232	Condition	! p	3719:6:106114:106115	978546	0	True				
ANR	980233	UnaryOperationExpression	! p		978546	0					
ANR	980234	UnaryOperator	!		978546	0					
ANR	980235	Identifier	p		978546	1					
ANR	980236	CompoundStatement		300:10:7110:7110	978546	1					
ANR	980237	ExpressionStatement	R_FREE ( ptr )	3720:3:106123:106135	978546	0	True				
ANR	980238	CallExpression	R_FREE ( ptr )		978546	0					
ANR	980239	Callee	R_FREE		978546	0					
ANR	980240	Identifier	R_FREE		978546	0					
ANR	980241	ArgumentList	ptr		978546	1					
ANR	980242	Argument	ptr		978546	0					
ANR	980243	Identifier	ptr		978546	0					
ANR	980244	ExpressionStatement	"eprintf ( ""Error: failed to malloc memory"" )"	3721:3:106140:106182	978546	1	True				
ANR	980245	CallExpression	"eprintf ( ""Error: failed to malloc memory"" )"		978546	0					
ANR	980246	Callee	eprintf		978546	0					
ANR	980247	Identifier	eprintf		978546	0					
ANR	980248	ArgumentList	"""Error: failed to malloc memory"""		978546	1					
ANR	980249	Argument	"""Error: failed to malloc memory"""		978546	0					
ANR	980250	PrimaryExpression	"""Error: failed to malloc memory"""		978546	0					
ANR	980251	GotoStatement	goto beach ;	3722:3:106187:106197	978546	2	True				
ANR	980252	Identifier	beach		978546	0					
ANR	980253	ForStatement	for ( i = 0 ; i < nblocks ; i ++ )		978546	6					
ANR	980254	ForInit	i = 0 ;	3724:7:106210:106215	978546	0	True				
ANR	980255	AssignmentExpression	i = 0		978546	0		=			
ANR	980256	Identifier	i		978546	0					
ANR	980257	PrimaryExpression	0		978546	1					
ANR	980258	Condition	i < nblocks	3724:14:106217:106227	978546	1	True				
ANR	980259	RelationalExpression	i < nblocks		978546	0		<			
ANR	980260	Identifier	i		978546	0					
ANR	980261	Identifier	nblocks		978546	1					
ANR	980262	PostIncDecOperationExpression	i ++	3724:27:106230:106232	978546	2	True				
ANR	980263	Identifier	i		978546	0					
ANR	980264	IncDec	++		978546	1					
ANR	980265	CompoundStatement		306:3:7232:7280	978546	3					
ANR	980266	IdentifierDeclStatement	ut64 off = from + ( blocksize * ( i + skipblocks ) ) ;	3725:3:106240:106288	978546	0	True				
ANR	980267	IdentifierDecl	off = from + ( blocksize * ( i + skipblocks ) )		978546	0					
ANR	980268	IdentifierDeclType	ut64		978546	0					
ANR	980269	Identifier	off		978546	1					
ANR	980270	AssignmentExpression	off = from + ( blocksize * ( i + skipblocks ) )		978546	2		=			
ANR	980271	Identifier	off		978546	0					
ANR	980272	AdditiveExpression	from + ( blocksize * ( i + skipblocks ) )		978546	1		+			
ANR	980273	Identifier	from		978546	0					
ANR	980274	MultiplicativeExpression	blocksize * ( i + skipblocks )		978546	1		*			
ANR	980275	Identifier	blocksize		978546	0					
ANR	980276	AdditiveExpression	i + skipblocks		978546	1		+			
ANR	980277	Identifier	i		978546	0					
ANR	980278	Identifier	skipblocks		978546	1					
ANR	980279	ExpressionStatement	"r_io_read_at ( core -> io , off , p , blocksize )"	3726:3:106293:106335	978546	1	True				
ANR	980280	CallExpression	"r_io_read_at ( core -> io , off , p , blocksize )"		978546	0					
ANR	980281	Callee	r_io_read_at		978546	0					
ANR	980282	Identifier	r_io_read_at		978546	0					
ANR	980283	ArgumentList	core -> io		978546	1					
ANR	980284	Argument	core -> io		978546	0					
ANR	980285	PtrMemberAccess	core -> io		978546	0					
ANR	980286	Identifier	core		978546	0					
ANR	980287	Identifier	io		978546	1					
ANR	980288	Argument	off		978546	1					
ANR	980289	Identifier	off		978546	0					
ANR	980290	Argument	p		978546	2					
ANR	980291	Identifier	p		978546	0					
ANR	980292	Argument	blocksize		978546	3					
ANR	980293	Identifier	blocksize		978546	0					
ANR	980294	ExpressionStatement	"ptr [ i ] = ( ut8 ) ( 255 * r_hash_entropy_fraction ( p , blocksize ) )"	3727:3:106340:106401	978546	2	True				
ANR	980295	AssignmentExpression	"ptr [ i ] = ( ut8 ) ( 255 * r_hash_entropy_fraction ( p , blocksize ) )"		978546	0		=			
ANR	980296	ArrayIndexing	ptr [ i ]		978546	0					
ANR	980297	Identifier	ptr		978546	0					
ANR	980298	Identifier	i		978546	1					
ANR	980299	CastExpression	"( ut8 ) ( 255 * r_hash_entropy_fraction ( p , blocksize ) )"		978546	1					
ANR	980300	CastTarget	ut8		978546	0					
ANR	980301	MultiplicativeExpression	"255 * r_hash_entropy_fraction ( p , blocksize )"		978546	1		*			
ANR	980302	PrimaryExpression	255		978546	0					
ANR	980303	CallExpression	"r_hash_entropy_fraction ( p , blocksize )"		978546	1					
ANR	980304	Callee	r_hash_entropy_fraction		978546	0					
ANR	980305	Identifier	r_hash_entropy_fraction		978546	0					
ANR	980306	ArgumentList	p		978546	1					
ANR	980307	Argument	p		978546	0					
ANR	980308	Identifier	p		978546	0					
ANR	980309	Argument	blocksize		978546	1					
ANR	980310	Identifier	blocksize		978546	0					
ANR	980311	ExpressionStatement	free ( p )	3729:2:106409:106417	978546	7	True				
ANR	980312	CallExpression	free ( p )		978546	0					
ANR	980313	Callee	free		978546	0					
ANR	980314	Identifier	free		978546	0					
ANR	980315	ArgumentList	p		978546	1					
ANR	980316	Argument	p		978546	0					
ANR	980317	Identifier	p		978546	0					
ANR	980318	ExpressionStatement	print_bars = true	3730:2:106421:106438	978546	8	True				
ANR	980319	AssignmentExpression	print_bars = true		978546	0		=			
ANR	980320	Identifier	print_bars		978546	0					
ANR	980321	Identifier	true		978546	1					
ANR	980322	BreakStatement	break ;	3732:1:106444:106449	978546	26	True				
ANR	980323	Label	case '0' :	3733:1:106452:106460	978546	27	True				
ANR	980324	Label	case 'F' :	3734:1:106477:106485	978546	28	True				
ANR	980325	Label	case 'p' :	3735:1:106502:106510	978546	29	True				
ANR	980326	Label	case 'z' :	3736:1:106532:106540	978546	30	True				
ANR	980327	IfStatement	if ( blocksize > 0 )		978546	31					
ANR	980328	Condition	blocksize > 0	3737:5:106574:106586	978546	0	True				
ANR	980329	RelationalExpression	blocksize > 0		978546	0		>			
ANR	980330	Identifier	blocksize		978546	0					
ANR	980331	PrimaryExpression	0		978546	1					
ANR	980332	CompoundStatement		332:2:7844:7855	978546	1					
ANR	980333	IdentifierDeclStatement	ut8 * p ;	3738:2:106593:106599	978546	0	True				
ANR	980334	IdentifierDecl	* p		978546	0					
ANR	980335	IdentifierDeclType	ut8 *		978546	0					
ANR	980336	Identifier	p		978546	1					
ANR	980337	IdentifierDeclStatement	"ut64 i , j , k ;"	3739:2:106603:106615	978546	1	True				
ANR	980338	IdentifierDecl	i		978546	0					
ANR	980339	IdentifierDeclType	ut64		978546	0					
ANR	980340	Identifier	i		978546	1					
ANR	980341	IdentifierDecl	j		978546	1					
ANR	980342	IdentifierDeclType	ut64		978546	0					
ANR	980343	Identifier	j		978546	1					
ANR	980344	IdentifierDecl	k		978546	2					
ANR	980345	IdentifierDeclType	ut64		978546	0					
ANR	980346	Identifier	k		978546	1					
ANR	980347	ExpressionStatement	"ptr = calloc ( 1 , nblocks )"	3740:2:106619:106644	978546	2	True				
ANR	980348	AssignmentExpression	"ptr = calloc ( 1 , nblocks )"		978546	0		=			
ANR	980349	Identifier	ptr		978546	0					
ANR	980350	CallExpression	"calloc ( 1 , nblocks )"		978546	1					
ANR	980351	Callee	calloc		978546	0					
ANR	980352	Identifier	calloc		978546	0					
ANR	980353	ArgumentList	1		978546	1					
ANR	980354	Argument	1		978546	0					
ANR	980355	PrimaryExpression	1		978546	0					
ANR	980356	Argument	nblocks		978546	1					
ANR	980357	Identifier	nblocks		978546	0					
ANR	980358	IfStatement	if ( ! ptr )		978546	3					
ANR	980359	Condition	! ptr	3741:6:106652:106655	978546	0	True				
ANR	980360	UnaryOperationExpression	! ptr		978546	0					
ANR	980361	UnaryOperator	!		978546	0					
ANR	980362	Identifier	ptr		978546	1					
ANR	980363	CompoundStatement		322:12:7650:7650	978546	1					
ANR	980364	ExpressionStatement	"eprintf ( ""Error: failed to malloc memory"" )"	3742:3:106663:106705	978546	0	True				
ANR	980365	CallExpression	"eprintf ( ""Error: failed to malloc memory"" )"		978546	0					
ANR	980366	Callee	eprintf		978546	0					
ANR	980367	Identifier	eprintf		978546	0					
ANR	980368	ArgumentList	"""Error: failed to malloc memory"""		978546	1					
ANR	980369	Argument	"""Error: failed to malloc memory"""		978546	0					
ANR	980370	PrimaryExpression	"""Error: failed to malloc memory"""		978546	0					
ANR	980371	GotoStatement	goto beach ;	3743:3:106710:106720	978546	1	True				
ANR	980372	Identifier	beach		978546	0					
ANR	980373	ExpressionStatement	"p = calloc ( 1 , blocksize )"	3745:2:106728:106753	978546	4	True				
ANR	980374	AssignmentExpression	"p = calloc ( 1 , blocksize )"		978546	0		=			
ANR	980375	Identifier	p		978546	0					
ANR	980376	CallExpression	"calloc ( 1 , blocksize )"		978546	1					
ANR	980377	Callee	calloc		978546	0					
ANR	980378	Identifier	calloc		978546	0					
ANR	980379	ArgumentList	1		978546	1					
ANR	980380	Argument	1		978546	0					
ANR	980381	PrimaryExpression	1		978546	0					
ANR	980382	Argument	blocksize		978546	1					
ANR	980383	Identifier	blocksize		978546	0					
ANR	980384	IfStatement	if ( ! p )		978546	5					
ANR	980385	Condition	! p	3746:6:106761:106762	978546	0	True				
ANR	980386	UnaryOperationExpression	! p		978546	0					
ANR	980387	UnaryOperator	!		978546	0					
ANR	980388	Identifier	p		978546	1					
ANR	980389	CompoundStatement		327:10:7757:7757	978546	1					
ANR	980390	ExpressionStatement	R_FREE ( ptr )	3747:3:106770:106782	978546	0	True				
ANR	980391	CallExpression	R_FREE ( ptr )		978546	0					
ANR	980392	Callee	R_FREE		978546	0					
ANR	980393	Identifier	R_FREE		978546	0					
ANR	980394	ArgumentList	ptr		978546	1					
ANR	980395	Argument	ptr		978546	0					
ANR	980396	Identifier	ptr		978546	0					
ANR	980397	ExpressionStatement	"eprintf ( ""Error: failed to malloc memory"" )"	3748:3:106787:106829	978546	1	True				
ANR	980398	CallExpression	"eprintf ( ""Error: failed to malloc memory"" )"		978546	0					
ANR	980399	Callee	eprintf		978546	0					
ANR	980400	Identifier	eprintf		978546	0					
ANR	980401	ArgumentList	"""Error: failed to malloc memory"""		978546	1					
ANR	980402	Argument	"""Error: failed to malloc memory"""		978546	0					
ANR	980403	PrimaryExpression	"""Error: failed to malloc memory"""		978546	0					
ANR	980404	GotoStatement	goto beach ;	3749:3:106834:106844	978546	2	True				
ANR	980405	Identifier	beach		978546	0					
ANR	980406	IdentifierDeclStatement	int len = 0 ;	3751:2:106852:106863	978546	6	True				
ANR	980407	IdentifierDecl	len = 0		978546	0					
ANR	980408	IdentifierDeclType	int		978546	0					
ANR	980409	Identifier	len		978546	1					
ANR	980410	AssignmentExpression	len = 0		978546	2		=			
ANR	980411	Identifier	len		978546	0					
ANR	980412	PrimaryExpression	0		978546	1					
ANR	980413	ForStatement	for ( i = 0 ; i < nblocks ; i ++ )		978546	7					
ANR	980414	ForInit	i = 0 ;	3752:7:106872:106877	978546	0	True				
ANR	980415	AssignmentExpression	i = 0		978546	0		=			
ANR	980416	Identifier	i		978546	0					
ANR	980417	PrimaryExpression	0		978546	1					
ANR	980418	Condition	i < nblocks	3752:14:106879:106889	978546	1	True				
ANR	980419	RelationalExpression	i < nblocks		978546	0		<			
ANR	980420	Identifier	i		978546	0					
ANR	980421	Identifier	nblocks		978546	1					
ANR	980422	PostIncDecOperationExpression	i ++	3752:27:106892:106894	978546	2	True				
ANR	980423	Identifier	i		978546	0					
ANR	980424	IncDec	++		978546	1					
ANR	980425	CompoundStatement		334:3:7894:7940	978546	3					
ANR	980426	IdentifierDeclStatement	ut64 off = from + blocksize * ( i + skipblocks ) ;	3753:3:106902:106948	978546	0	True				
ANR	980427	IdentifierDecl	off = from + blocksize * ( i + skipblocks )		978546	0					
ANR	980428	IdentifierDeclType	ut64		978546	0					
ANR	980429	Identifier	off		978546	1					
ANR	980430	AssignmentExpression	off = from + blocksize * ( i + skipblocks )		978546	2		=			
ANR	980431	Identifier	off		978546	0					
ANR	980432	AdditiveExpression	from + blocksize * ( i + skipblocks )		978546	1		+			
ANR	980433	Identifier	from		978546	0					
ANR	980434	MultiplicativeExpression	blocksize * ( i + skipblocks )		978546	1		*			
ANR	980435	Identifier	blocksize		978546	0					
ANR	980436	AdditiveExpression	i + skipblocks		978546	1		+			
ANR	980437	Identifier	i		978546	0					
ANR	980438	Identifier	skipblocks		978546	1					
ANR	980439	ExpressionStatement	"r_io_read_at ( core -> io , off , p , blocksize )"	3754:3:106953:106995	978546	1	True				
ANR	980440	CallExpression	"r_io_read_at ( core -> io , off , p , blocksize )"		978546	0					
ANR	980441	Callee	r_io_read_at		978546	0					
ANR	980442	Identifier	r_io_read_at		978546	0					
ANR	980443	ArgumentList	core -> io		978546	1					
ANR	980444	Argument	core -> io		978546	0					
ANR	980445	PtrMemberAccess	core -> io		978546	0					
ANR	980446	Identifier	core		978546	0					
ANR	980447	Identifier	io		978546	1					
ANR	980448	Argument	off		978546	1					
ANR	980449	Identifier	off		978546	0					
ANR	980450	Argument	p		978546	2					
ANR	980451	Identifier	p		978546	0					
ANR	980452	Argument	blocksize		978546	3					
ANR	980453	Identifier	blocksize		978546	0					
ANR	980454	ForStatement	for ( j = k = 0 ; j < blocksize ; j ++ )		978546	2					
ANR	980455	ForInit	j = k = 0 ;	3755:8:107005:107014	978546	0	True				
ANR	980456	AssignmentExpression	j = k = 0		978546	0		=			
ANR	980457	Identifier	j		978546	0					
ANR	980458	AssignmentExpression	k = 0		978546	1		=			
ANR	980459	Identifier	k		978546	0					
ANR	980460	PrimaryExpression	0		978546	1					
ANR	980461	Condition	j < blocksize	3755:19:107016:107028	978546	1	True				
ANR	980462	RelationalExpression	j < blocksize		978546	0		<			
ANR	980463	Identifier	j		978546	0					
ANR	980464	Identifier	blocksize		978546	1					
ANR	980465	PostIncDecOperationExpression	j ++	3755:34:107031:107033	978546	2	True				
ANR	980466	Identifier	j		978546	0					
ANR	980467	IncDec	++		978546	1					
ANR	980468	CompoundStatement		336:39:8028:8028	978546	3					
ANR	980469	SwitchStatement	switch ( mode )		978546	0					
ANR	980470	Condition	mode	3756:12:107050:107053	978546	0	True				
ANR	980471	Identifier	mode		978546	0					
ANR	980472	CompoundStatement		337:18:8048:8048	978546	1					
ANR	980473	Label	case '0' :	3757:4:107062:107070	978546	0	True				
ANR	980474	IfStatement	if ( ! p [ j ] )		978546	1					
ANR	980475	Condition	! p [ j ]	3758:9:107081:107085	978546	0	True				
ANR	980476	UnaryOperationExpression	! p [ j ]		978546	0					
ANR	980477	UnaryOperator	!		978546	0					
ANR	980478	ArrayIndexing	p [ j ]		978546	1					
ANR	980479	Identifier	p		978546	0					
ANR	980480	Identifier	j		978546	1					
ANR	980481	CompoundStatement		339:16:8080:8080	978546	1					
ANR	980482	ExpressionStatement	k ++	3759:6:107096:107099	978546	0	True				
ANR	980483	PostIncDecOperationExpression	k ++		978546	0					
ANR	980484	Identifier	k		978546	0					
ANR	980485	IncDec	++		978546	1					
ANR	980486	BreakStatement	break ;	3761:5:107113:107118	978546	2	True				
ANR	980487	Label	case 'f' :	3762:4:107124:107132	978546	3	True				
ANR	980488	IfStatement	if ( p [ j ] == 0xff )		978546	4					
ANR	980489	Condition	p [ j ] == 0xff	3763:9:107143:107154	978546	0	True				
ANR	980490	EqualityExpression	p [ j ] == 0xff		978546	0		==			
ANR	980491	ArrayIndexing	p [ j ]		978546	0					
ANR	980492	Identifier	p		978546	0					
ANR	980493	Identifier	j		978546	1					
ANR	980494	PrimaryExpression	0xff		978546	1					
ANR	980495	CompoundStatement		344:23:8149:8149	978546	1					
ANR	980496	ExpressionStatement	k ++	3764:6:107165:107168	978546	0	True				
ANR	980497	PostIncDecOperationExpression	k ++		978546	0					
ANR	980498	Identifier	k		978546	0					
ANR	980499	IncDec	++		978546	1					
ANR	980500	BreakStatement	break ;	3766:5:107182:107187	978546	5	True				
ANR	980501	Label	case 'z' :	3767:4:107193:107201	978546	6	True				
ANR	980502	IfStatement	if ( ( IS_PRINTABLE ( p [ j ] ) ) )		978546	7					
ANR	980503	Condition	IS_PRINTABLE ( p [ j ] )	3768:9:107212:107232	978546	0	True				
ANR	980504	CallExpression	IS_PRINTABLE ( p [ j ] )		978546	0					
ANR	980505	Callee	IS_PRINTABLE		978546	0					
ANR	980506	Identifier	IS_PRINTABLE		978546	0					
ANR	980507	ArgumentList	p [ j ]		978546	1					
ANR	980508	Argument	p [ j ]		978546	0					
ANR	980509	ArrayIndexing	p [ j ]		978546	0					
ANR	980510	Identifier	p		978546	0					
ANR	980511	Identifier	j		978546	1					
ANR	980512	CompoundStatement		349:32:8227:8227	978546	1					
ANR	980513	IfStatement	if ( ( j + 1 ) < blocksize && p [ j + 1 ] == 0 )		978546	0					
ANR	980514	Condition	( j + 1 ) < blocksize && p [ j + 1 ] == 0	3769:10:107247:107282	978546	0	True				
ANR	980515	AndExpression	( j + 1 ) < blocksize && p [ j + 1 ] == 0		978546	0		&&			
ANR	980516	RelationalExpression	( j + 1 ) < blocksize		978546	0		<			
ANR	980517	AdditiveExpression	j + 1		978546	0		+			
ANR	980518	Identifier	j		978546	0					
ANR	980519	PrimaryExpression	1		978546	1					
ANR	980520	Identifier	blocksize		978546	1					
ANR	980521	EqualityExpression	p [ j + 1 ] == 0		978546	1		==			
ANR	980522	ArrayIndexing	p [ j + 1 ]		978546	0					
ANR	980523	Identifier	p		978546	0					
ANR	980524	AdditiveExpression	j + 1		978546	1		+			
ANR	980525	Identifier	j		978546	0					
ANR	980526	PrimaryExpression	1		978546	1					
ANR	980527	PrimaryExpression	0		978546	1					
ANR	980528	CompoundStatement		350:48:8277:8277	978546	1					
ANR	980529	ExpressionStatement	k ++	3770:7:107294:107297	978546	0	True				
ANR	980530	PostIncDecOperationExpression	k ++		978546	0					
ANR	980531	Identifier	k		978546	0					
ANR	980532	IncDec	++		978546	1					
ANR	980533	ExpressionStatement	j ++	3771:7:107306:107309	978546	1	True				
ANR	980534	PostIncDecOperationExpression	j ++		978546	0					
ANR	980535	Identifier	j		978546	0					
ANR	980536	IncDec	++		978546	1					
ANR	980537	IfStatement	if ( len ++ > 8 )		978546	1					
ANR	980538	Condition	len ++ > 8	3773:10:107329:107337	978546	0	True				
ANR	980539	RelationalExpression	len ++ > 8		978546	0		>			
ANR	980540	PostIncDecOperationExpression	len ++		978546	0					
ANR	980541	Identifier	len		978546	0					
ANR	980542	IncDec	++		978546	1					
ANR	980543	PrimaryExpression	8		978546	1					
ANR	980544	CompoundStatement		354:21:8332:8332	978546	1					
ANR	980545	ExpressionStatement	k ++	3774:7:107349:107352	978546	0	True				
ANR	980546	PostIncDecOperationExpression	k ++		978546	0					
ANR	980547	Identifier	k		978546	0					
ANR	980548	IncDec	++		978546	1					
ANR	980549	ElseStatement	else		978546	0					
ANR	980550	CompoundStatement		357:12:8366:8366	978546	0					
ANR	980551	ExpressionStatement	len = 0	3777:6:107382:107389	978546	0	True				
ANR	980552	AssignmentExpression	len = 0		978546	0		=			
ANR	980553	Identifier	len		978546	0					
ANR	980554	PrimaryExpression	0		978546	1					
ANR	980555	BreakStatement	break ;	3779:5:107403:107408	978546	8	True				
ANR	980556	Label	case 'p' :	3780:4:107414:107422	978546	9	True				
ANR	980557	IfStatement	if ( ( IS_PRINTABLE ( p [ j ] ) ) )		978546	10					
ANR	980558	Condition	IS_PRINTABLE ( p [ j ] )	3781:9:107433:107453	978546	0	True				
ANR	980559	CallExpression	IS_PRINTABLE ( p [ j ] )		978546	0					
ANR	980560	Callee	IS_PRINTABLE		978546	0					
ANR	980561	Identifier	IS_PRINTABLE		978546	0					
ANR	980562	ArgumentList	p [ j ]		978546	1					
ANR	980563	Argument	p [ j ]		978546	0					
ANR	980564	ArrayIndexing	p [ j ]		978546	0					
ANR	980565	Identifier	p		978546	0					
ANR	980566	Identifier	j		978546	1					
ANR	980567	CompoundStatement		362:32:8448:8448	978546	1					
ANR	980568	ExpressionStatement	k ++	3782:6:107464:107467	978546	0	True				
ANR	980569	PostIncDecOperationExpression	k ++		978546	0					
ANR	980570	Identifier	k		978546	0					
ANR	980571	IncDec	++		978546	1					
ANR	980572	BreakStatement	break ;	3784:5:107481:107486	978546	11	True				
ANR	980573	ExpressionStatement	ptr [ i ] = 256 * k / blocksize	3787:3:107502:107530	978546	3	True				
ANR	980574	AssignmentExpression	ptr [ i ] = 256 * k / blocksize		978546	0		=			
ANR	980575	ArrayIndexing	ptr [ i ]		978546	0					
ANR	980576	Identifier	ptr		978546	0					
ANR	980577	Identifier	i		978546	1					
ANR	980578	MultiplicativeExpression	256 * k / blocksize		978546	1		*			
ANR	980579	PrimaryExpression	256		978546	0					
ANR	980580	MultiplicativeExpression	k / blocksize		978546	1		/			
ANR	980581	Identifier	k		978546	0					
ANR	980582	Identifier	blocksize		978546	1					
ANR	980583	ExpressionStatement	free ( p )	3789:2:107538:107546	978546	8	True				
ANR	980584	CallExpression	free ( p )		978546	0					
ANR	980585	Callee	free		978546	0					
ANR	980586	Identifier	free		978546	0					
ANR	980587	ArgumentList	p		978546	1					
ANR	980588	Argument	p		978546	0					
ANR	980589	Identifier	p		978546	0					
ANR	980590	ExpressionStatement	print_bars = true	3790:2:107550:107567	978546	9	True				
ANR	980591	AssignmentExpression	print_bars = true		978546	0		=			
ANR	980592	Identifier	print_bars		978546	0					
ANR	980593	Identifier	true		978546	1					
ANR	980594	ElseStatement	else		978546	0					
ANR	980595	CompoundStatement		372:8:8569:8569	978546	0					
ANR	980596	ExpressionStatement	"eprintf ( ""Invalid blocksize\\n"" )"	3792:2:107581:107612	978546	0	True				
ANR	980597	CallExpression	"eprintf ( ""Invalid blocksize\\n"" )"		978546	0					
ANR	980598	Callee	eprintf		978546	0					
ANR	980599	Identifier	eprintf		978546	0					
ANR	980600	ArgumentList	"""Invalid blocksize\\n"""		978546	1					
ANR	980601	Argument	"""Invalid blocksize\\n"""		978546	0					
ANR	980602	PrimaryExpression	"""Invalid blocksize\\n"""		978546	0					
ANR	980603	BreakStatement	break ;	3794:1:107618:107623	978546	32	True				
ANR	980604	Label	case 'b' :	3795:1:107626:107634	978546	33	True				
ANR	980605	Label	case '\\0' :	3796:1:107646:107655	978546	34	True				
ANR	980606	ExpressionStatement	"ptr = calloc ( 1 , nblocks )"	3797:2:107659:107684	978546	35	True				
ANR	980607	AssignmentExpression	"ptr = calloc ( 1 , nblocks )"		978546	0		=			
ANR	980608	Identifier	ptr		978546	0					
ANR	980609	CallExpression	"calloc ( 1 , nblocks )"		978546	1					
ANR	980610	Callee	calloc		978546	0					
ANR	980611	Identifier	calloc		978546	0					
ANR	980612	ArgumentList	1		978546	1					
ANR	980613	Argument	1		978546	0					
ANR	980614	PrimaryExpression	1		978546	0					
ANR	980615	Argument	nblocks		978546	1					
ANR	980616	Identifier	nblocks		978546	0					
ANR	980617	ExpressionStatement	"r_io_read_at ( core -> io , from , ptr , nblocks )"	3798:2:107688:107731	978546	36	True				
ANR	980618	CallExpression	"r_io_read_at ( core -> io , from , ptr , nblocks )"		978546	0					
ANR	980619	Callee	r_io_read_at		978546	0					
ANR	980620	Identifier	r_io_read_at		978546	0					
ANR	980621	ArgumentList	core -> io		978546	1					
ANR	980622	Argument	core -> io		978546	0					
ANR	980623	PtrMemberAccess	core -> io		978546	0					
ANR	980624	Identifier	core		978546	0					
ANR	980625	Identifier	io		978546	1					
ANR	980626	Argument	from		978546	1					
ANR	980627	Identifier	from		978546	0					
ANR	980628	Argument	ptr		978546	2					
ANR	980629	Identifier	ptr		978546	0					
ANR	980630	Argument	nblocks		978546	3					
ANR	980631	Identifier	nblocks		978546	0					
ANR	980632	ExpressionStatement	"r_print_fill ( core -> print , ptr , nblocks , from , blocksize )"	3800:2:107765:107822	978546	37	True				
ANR	980633	CallExpression	"r_print_fill ( core -> print , ptr , nblocks , from , blocksize )"		978546	0					
ANR	980634	Callee	r_print_fill		978546	0					
ANR	980635	Identifier	r_print_fill		978546	0					
ANR	980636	ArgumentList	core -> print		978546	1					
ANR	980637	Argument	core -> print		978546	0					
ANR	980638	PtrMemberAccess	core -> print		978546	0					
ANR	980639	Identifier	core		978546	0					
ANR	980640	Identifier	print		978546	1					
ANR	980641	Argument	ptr		978546	1					
ANR	980642	Identifier	ptr		978546	0					
ANR	980643	Argument	nblocks		978546	2					
ANR	980644	Identifier	nblocks		978546	0					
ANR	980645	Argument	from		978546	3					
ANR	980646	Identifier	from		978546	0					
ANR	980647	Argument	blocksize		978546	4					
ANR	980648	Identifier	blocksize		978546	0					
ANR	980649	ExpressionStatement	R_FREE ( ptr )	3801:2:107826:107838	978546	38	True				
ANR	980650	CallExpression	R_FREE ( ptr )		978546	0					
ANR	980651	Callee	R_FREE		978546	0					
ANR	980652	Identifier	R_FREE		978546	0					
ANR	980653	ArgumentList	ptr		978546	1					
ANR	980654	Argument	ptr		978546	0					
ANR	980655	Identifier	ptr		978546	0					
ANR	980656	BreakStatement	break ;	3802:2:107842:107847	978546	39	True				
ANR	980657	IfStatement	if ( print_bars )		978546	21					
ANR	980658	Condition	print_bars	3804:5:107857:107866	978546	0	True				
ANR	980659	Identifier	print_bars		978546	0					
ANR	980660	CompoundStatement		386:2:8865:8870	978546	1					
ANR	980661	IdentifierDeclStatement	int i ;	3805:2:107873:107878	978546	0	True				
ANR	980662	IdentifierDecl	i		978546	0					
ANR	980663	IdentifierDeclType	int		978546	0					
ANR	980664	Identifier	i		978546	1					
ANR	980665	SwitchStatement	switch ( submode )		978546	1					
ANR	980666	Condition	submode	3806:10:107890:107896	978546	0	True				
ANR	980667	Identifier	submode		978546	0					
ANR	980668	CompoundStatement		387:19:8891:8891	978546	1					
ANR	980669	Label	case 'j' :	3807:2:107903:107911	978546	0	True				
ANR	980670	CompoundStatement		389:3:8910:8928	978546	1					
ANR	980671	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	3808:3:107918:107936	978546	0	True				
ANR	980672	IdentifierDecl	* pj = pj_new ( )		978546	0					
ANR	980673	IdentifierDeclType	PJ *		978546	0					
ANR	980674	Identifier	pj		978546	1					
ANR	980675	AssignmentExpression	* pj = pj_new ( )		978546	2		=			
ANR	980676	Identifier	pj		978546	0					
ANR	980677	CallExpression	pj_new ( )		978546	1					
ANR	980678	Callee	pj_new		978546	0					
ANR	980679	Identifier	pj_new		978546	0					
ANR	980680	ArgumentList			978546	1					
ANR	980681	IfStatement	if ( ! pj )		978546	1					
ANR	980682	Condition	! pj	3809:7:107945:107947	978546	0	True				
ANR	980683	UnaryOperationExpression	! pj		978546	0					
ANR	980684	UnaryOperator	!		978546	0					
ANR	980685	Identifier	pj		978546	1					
ANR	980686	CompoundStatement		390:12:8942:8942	978546	1					
ANR	980687	ReturnStatement	return ;	3810:4:107956:107962	978546	0	True				
ANR	980688	ExpressionStatement	pj_o ( pj )	3813:3:107973:107982	978546	2	True				
ANR	980689	CallExpression	pj_o ( pj )		978546	0					
ANR	980690	Callee	pj_o		978546	0					
ANR	980691	Identifier	pj_o		978546	0					
ANR	980692	ArgumentList	pj		978546	1					
ANR	980693	Argument	pj		978546	0					
ANR	980694	Identifier	pj		978546	0					
ANR	980695	ExpressionStatement	"pj_kn ( pj , ""blocksize"" , blocksize )"	3814:3:107987:108021	978546	3	True				
ANR	980696	CallExpression	"pj_kn ( pj , ""blocksize"" , blocksize )"		978546	0					
ANR	980697	Callee	pj_kn		978546	0					
ANR	980698	Identifier	pj_kn		978546	0					
ANR	980699	ArgumentList	pj		978546	1					
ANR	980700	Argument	pj		978546	0					
ANR	980701	Identifier	pj		978546	0					
ANR	980702	Argument	"""blocksize"""		978546	1					
ANR	980703	PrimaryExpression	"""blocksize"""		978546	0					
ANR	980704	Argument	blocksize		978546	2					
ANR	980705	Identifier	blocksize		978546	0					
ANR	980706	ExpressionStatement	"pj_kn ( pj , ""address"" , from )"	3815:3:108026:108053	978546	4	True				
ANR	980707	CallExpression	"pj_kn ( pj , ""address"" , from )"		978546	0					
ANR	980708	Callee	pj_kn		978546	0					
ANR	980709	Identifier	pj_kn		978546	0					
ANR	980710	ArgumentList	pj		978546	1					
ANR	980711	Argument	pj		978546	0					
ANR	980712	Identifier	pj		978546	0					
ANR	980713	Argument	"""address"""		978546	1					
ANR	980714	PrimaryExpression	"""address"""		978546	0					
ANR	980715	Argument	from		978546	2					
ANR	980716	Identifier	from		978546	0					
ANR	980717	ExpressionStatement	"pj_kn ( pj , ""size"" , totalsize )"	3816:3:108058:108087	978546	5	True				
ANR	980718	CallExpression	"pj_kn ( pj , ""size"" , totalsize )"		978546	0					
ANR	980719	Callee	pj_kn		978546	0					
ANR	980720	Identifier	pj_kn		978546	0					
ANR	980721	ArgumentList	pj		978546	1					
ANR	980722	Argument	pj		978546	0					
ANR	980723	Identifier	pj		978546	0					
ANR	980724	Argument	"""size"""		978546	1					
ANR	980725	PrimaryExpression	"""size"""		978546	0					
ANR	980726	Argument	totalsize		978546	2					
ANR	980727	Identifier	totalsize		978546	0					
ANR	980728	ExpressionStatement	"pj_k ( pj , ""entropy"" )"	3817:3:108092:108112	978546	6	True				
ANR	980729	CallExpression	"pj_k ( pj , ""entropy"" )"		978546	0					
ANR	980730	Callee	pj_k		978546	0					
ANR	980731	Identifier	pj_k		978546	0					
ANR	980732	ArgumentList	pj		978546	1					
ANR	980733	Argument	pj		978546	0					
ANR	980734	Identifier	pj		978546	0					
ANR	980735	Argument	"""entropy"""		978546	1					
ANR	980736	PrimaryExpression	"""entropy"""		978546	0					
ANR	980737	ExpressionStatement	pj_a ( pj )	3818:3:108117:108126	978546	7	True				
ANR	980738	CallExpression	pj_a ( pj )		978546	0					
ANR	980739	Callee	pj_a		978546	0					
ANR	980740	Identifier	pj_a		978546	0					
ANR	980741	ArgumentList	pj		978546	1					
ANR	980742	Argument	pj		978546	0					
ANR	980743	Identifier	pj		978546	0					
ANR	980744	ForStatement	for ( i = 0 ; i < nblocks ; i ++ )		978546	8					
ANR	980745	ForInit	i = 0 ;	3820:8:108137:108142	978546	0	True				
ANR	980746	AssignmentExpression	i = 0		978546	0		=			
ANR	980747	Identifier	i		978546	0					
ANR	980748	PrimaryExpression	0		978546	1					
ANR	980749	Condition	i < nblocks	3820:15:108144:108154	978546	1	True				
ANR	980750	RelationalExpression	i < nblocks		978546	0		<			
ANR	980751	Identifier	i		978546	0					
ANR	980752	Identifier	nblocks		978546	1					
ANR	980753	PostIncDecOperationExpression	i ++	3820:28:108157:108159	978546	2	True				
ANR	980754	Identifier	i		978546	0					
ANR	980755	IncDec	++		978546	1					
ANR	980756	CompoundStatement		403:4:9181:9205	978546	3					
ANR	980757	IdentifierDeclStatement	ut8 ep = ptr [ i ] ;	3821:4:108168:108183	978546	0	True				
ANR	980758	IdentifierDecl	ep = ptr [ i ]		978546	0					
ANR	980759	IdentifierDeclType	ut8		978546	0					
ANR	980760	Identifier	ep		978546	1					
ANR	980761	AssignmentExpression	ep = ptr [ i ]		978546	2		=			
ANR	980762	Identifier	ep		978546	0					
ANR	980763	ArrayIndexing	ptr [ i ]		978546	1					
ANR	980764	Identifier	ptr		978546	0					
ANR	980765	Identifier	i		978546	1					
ANR	980766	IdentifierDeclStatement	ut64 off = blocksize * i ;	3822:4:108189:108213	978546	1	True				
ANR	980767	IdentifierDecl	off = blocksize * i		978546	0					
ANR	980768	IdentifierDeclType	ut64		978546	0					
ANR	980769	Identifier	off		978546	1					
ANR	980770	AssignmentExpression	off = blocksize * i		978546	2		=			
ANR	980771	Identifier	off		978546	0					
ANR	980772	MultiplicativeExpression	blocksize * i		978546	1		*			
ANR	980773	Identifier	blocksize		978546	0					
ANR	980774	Identifier	i		978546	1					
ANR	980775	ExpressionStatement	off += from	3823:4:108219:108230	978546	2	True				
ANR	980776	AssignmentExpression	off += from		978546	0		+=			
ANR	980777	Identifier	off		978546	0					
ANR	980778	Identifier	from		978546	1					
ANR	980779	ExpressionStatement	pj_o ( pj )	3824:4:108236:108245	978546	3	True				
ANR	980780	CallExpression	pj_o ( pj )		978546	0					
ANR	980781	Callee	pj_o		978546	0					
ANR	980782	Identifier	pj_o		978546	0					
ANR	980783	ArgumentList	pj		978546	1					
ANR	980784	Argument	pj		978546	0					
ANR	980785	Identifier	pj		978546	0					
ANR	980786	ExpressionStatement	"pj_kn ( pj , ""addr"" , off )"	3825:4:108251:108274	978546	4	True				
ANR	980787	CallExpression	"pj_kn ( pj , ""addr"" , off )"		978546	0					
ANR	980788	Callee	pj_kn		978546	0					
ANR	980789	Identifier	pj_kn		978546	0					
ANR	980790	ArgumentList	pj		978546	1					
ANR	980791	Argument	pj		978546	0					
ANR	980792	Identifier	pj		978546	0					
ANR	980793	Argument	"""addr"""		978546	1					
ANR	980794	PrimaryExpression	"""addr"""		978546	0					
ANR	980795	Argument	off		978546	2					
ANR	980796	Identifier	off		978546	0					
ANR	980797	ExpressionStatement	"pj_ki ( pj , ""value"" , ep )"	3826:4:108280:108303	978546	5	True				
ANR	980798	CallExpression	"pj_ki ( pj , ""value"" , ep )"		978546	0					
ANR	980799	Callee	pj_ki		978546	0					
ANR	980800	Identifier	pj_ki		978546	0					
ANR	980801	ArgumentList	pj		978546	1					
ANR	980802	Argument	pj		978546	0					
ANR	980803	Identifier	pj		978546	0					
ANR	980804	Argument	"""value"""		978546	1					
ANR	980805	PrimaryExpression	"""value"""		978546	0					
ANR	980806	Argument	ep		978546	2					
ANR	980807	Identifier	ep		978546	0					
ANR	980808	ExpressionStatement	pj_end ( pj )	3827:4:108309:108320	978546	6	True				
ANR	980809	CallExpression	pj_end ( pj )		978546	0					
ANR	980810	Callee	pj_end		978546	0					
ANR	980811	Identifier	pj_end		978546	0					
ANR	980812	ArgumentList	pj		978546	1					
ANR	980813	Argument	pj		978546	0					
ANR	980814	Identifier	pj		978546	0					
ANR	980815	ExpressionStatement	pj_end ( pj )	3830:3:108331:108342	978546	9	True				
ANR	980816	CallExpression	pj_end ( pj )		978546	0					
ANR	980817	Callee	pj_end		978546	0					
ANR	980818	Identifier	pj_end		978546	0					
ANR	980819	ArgumentList	pj		978546	1					
ANR	980820	Argument	pj		978546	0					
ANR	980821	Identifier	pj		978546	0					
ANR	980822	ExpressionStatement	pj_end ( pj )	3831:3:108347:108358	978546	10	True				
ANR	980823	CallExpression	pj_end ( pj )		978546	0					
ANR	980824	Callee	pj_end		978546	0					
ANR	980825	Identifier	pj_end		978546	0					
ANR	980826	ArgumentList	pj		978546	1					
ANR	980827	Argument	pj		978546	0					
ANR	980828	Identifier	pj		978546	0					
ANR	980829	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	3832:3:108363:108394	978546	11	True				
ANR	980830	CallExpression	r_cons_println ( pj_string ( pj ) )		978546	0					
ANR	980831	Callee	r_cons_println		978546	0					
ANR	980832	Identifier	r_cons_println		978546	0					
ANR	980833	ArgumentList	pj_string ( pj )		978546	1					
ANR	980834	Argument	pj_string ( pj )		978546	0					
ANR	980835	CallExpression	pj_string ( pj )		978546	0					
ANR	980836	Callee	pj_string		978546	0					
ANR	980837	Identifier	pj_string		978546	0					
ANR	980838	ArgumentList	pj		978546	1					
ANR	980839	Argument	pj		978546	0					
ANR	980840	Identifier	pj		978546	0					
ANR	980841	ExpressionStatement	pj_free ( pj )	3833:3:108399:108411	978546	12	True				
ANR	980842	CallExpression	pj_free ( pj )		978546	0					
ANR	980843	Callee	pj_free		978546	0					
ANR	980844	Identifier	pj_free		978546	0					
ANR	980845	ArgumentList	pj		978546	1					
ANR	980846	Argument	pj		978546	0					
ANR	980847	Identifier	pj		978546	0					
ANR	980848	BreakStatement	break ;	3834:4:108417:108422	978546	2	True				
ANR	980849	Label	case 'q' :	3835:2:108426:108434	978546	3	True				
ANR	980850	ForStatement	for ( i = 0 ; i < nblocks ; i ++ )		978546	4					
ANR	980851	ForInit	i = 0 ;	3836:8:108444:108449	978546	0	True				
ANR	980852	AssignmentExpression	i = 0		978546	0		=			
ANR	980853	Identifier	i		978546	0					
ANR	980854	PrimaryExpression	0		978546	1					
ANR	980855	Condition	i < nblocks	3836:15:108451:108461	978546	1	True				
ANR	980856	RelationalExpression	i < nblocks		978546	0		<			
ANR	980857	Identifier	i		978546	0					
ANR	980858	Identifier	nblocks		978546	1					
ANR	980859	PostIncDecOperationExpression	i ++	3836:28:108464:108466	978546	2	True				
ANR	980860	Identifier	i		978546	0					
ANR	980861	IncDec	++		978546	1					
ANR	980862	CompoundStatement		418:4:9467:9500	978546	3					
ANR	980863	IdentifierDeclStatement	ut64 off = from + ( blocksize * i ) ;	3837:4:108475:108508	978546	0	True				
ANR	980864	IdentifierDecl	off = from + ( blocksize * i )		978546	0					
ANR	980865	IdentifierDeclType	ut64		978546	0					
ANR	980866	Identifier	off		978546	1					
ANR	980867	AssignmentExpression	off = from + ( blocksize * i )		978546	2		=			
ANR	980868	Identifier	off		978546	0					
ANR	980869	AdditiveExpression	from + ( blocksize * i )		978546	1		+			
ANR	980870	Identifier	from		978546	0					
ANR	980871	MultiplicativeExpression	blocksize * i		978546	1		*			
ANR	980872	Identifier	blocksize		978546	0					
ANR	980873	Identifier	i		978546	1					
ANR	980874	IfStatement	if ( core -> print -> cur_enabled )		978546	1					
ANR	980875	Condition	core -> print -> cur_enabled	3838:8:108518:108541	978546	0	True				
ANR	980876	PtrMemberAccess	core -> print -> cur_enabled		978546	0					
ANR	980877	PtrMemberAccess	core -> print		978546	0					
ANR	980878	Identifier	core		978546	0					
ANR	980879	Identifier	print		978546	1					
ANR	980880	Identifier	cur_enabled		978546	1					
ANR	980881	CompoundStatement		419:34:9536:9536	978546	1					
ANR	980882	IfStatement	if ( i == core -> print -> cur )		978546	0					
ANR	980883	Condition	i == core -> print -> cur	3839:9:108555:108575	978546	0	True				
ANR	980884	EqualityExpression	i == core -> print -> cur		978546	0		==			
ANR	980885	Identifier	i		978546	0					
ANR	980886	PtrMemberAccess	core -> print -> cur		978546	1					
ANR	980887	PtrMemberAccess	core -> print		978546	0					
ANR	980888	Identifier	core		978546	0					
ANR	980889	Identifier	print		978546	1					
ANR	980890	Identifier	cur		978546	1					
ANR	980891	CompoundStatement		420:32:9570:9570	978546	1					
ANR	980892	ExpressionStatement	"r_cons_printf ( ""> "" )"	3840:6:108586:108606	978546	0	True				
ANR	980893	CallExpression	"r_cons_printf ( ""> "" )"		978546	0					
ANR	980894	Callee	r_cons_printf		978546	0					
ANR	980895	Identifier	r_cons_printf		978546	0					
ANR	980896	ArgumentList	"""> """		978546	1					
ANR	980897	Argument	"""> """		978546	0					
ANR	980898	PrimaryExpression	"""> """		978546	0					
ANR	980899	ExpressionStatement	core -> num -> value = off	3841:6:108614:108636	978546	1	True				
ANR	980900	AssignmentExpression	core -> num -> value = off		978546	0		=			
ANR	980901	PtrMemberAccess	core -> num -> value		978546	0					
ANR	980902	PtrMemberAccess	core -> num		978546	0					
ANR	980903	Identifier	core		978546	0					
ANR	980904	Identifier	num		978546	1					
ANR	980905	Identifier	value		978546	1					
ANR	980906	Identifier	off		978546	1					
ANR	980907	ElseStatement	else		978546	0					
ANR	980908	CompoundStatement		423:12:9642:9642	978546	0					
ANR	980909	ExpressionStatement	"r_cons_printf ( ""  "" )"	3843:6:108658:108678	978546	0	True				
ANR	980910	CallExpression	"r_cons_printf ( ""  "" )"		978546	0					
ANR	980911	Callee	r_cons_printf		978546	0					
ANR	980912	Identifier	r_cons_printf		978546	0					
ANR	980913	ArgumentList	"""  """		978546	1					
ANR	980914	Argument	"""  """		978546	0					
ANR	980915	PrimaryExpression	"""  """		978546	0					
ANR	980916	Statement	r_cons_printf	3846:4:108697:108709	978546	2	True				
ANR	980917	Statement	(	3846:18:108711:108711	978546	3	True				
ANR	980918	Statement	"""0x%08"""	3846:19:108712:108718	978546	4	True				
ANR	980919	Statement	PFMT64x	3846:26:108719:108725	978546	5	True				
ANR	980920	Statement	""" %d %d\\n"""	3846:34:108727:108736	978546	6	True				
ANR	980921	Statement	","	3846:44:108737:108737	978546	7	True				
ANR	980922	Statement	off	3846:46:108739:108741	978546	8	True				
ANR	980923	Statement	","	3846:49:108742:108742	978546	9	True				
ANR	980924	Statement	i	3846:51:108744:108744	978546	10	True				
ANR	980925	Statement	","	3846:52:108745:108745	978546	11	True				
ANR	980926	Statement	ptr	3846:54:108747:108749	978546	12	True				
ANR	980927	Statement	[	3846:57:108750:108750	978546	13	True				
ANR	980928	Statement	i	3846:58:108751:108751	978546	14	True				
ANR	980929	Statement	]	3846:59:108752:108752	978546	15	True				
ANR	980930	Statement	)	3846:60:108753:108753	978546	16	True				
ANR	980931	ExpressionStatement		3846:61:108754:108754	978546	17	True				
ANR	980932	BreakStatement	break ;	3848:3:108764:108769	978546	5	True				
ANR	980933	Label	default :	3849:2:108773:108780	978546	6	True				
ANR	980934	Identifier	default		978546	0					
ANR	980935	ExpressionStatement	core -> print -> num = core -> num	3850:3:108785:108813	978546	7	True				
ANR	980936	AssignmentExpression	core -> print -> num = core -> num		978546	0		=			
ANR	980937	PtrMemberAccess	core -> print -> num		978546	0					
ANR	980938	PtrMemberAccess	core -> print		978546	0					
ANR	980939	Identifier	core		978546	0					
ANR	980940	Identifier	print		978546	1					
ANR	980941	Identifier	num		978546	1					
ANR	980942	PtrMemberAccess	core -> num		978546	1					
ANR	980943	Identifier	core		978546	0					
ANR	980944	Identifier	num		978546	1					
ANR	980945	ExpressionStatement	"r_print_fill ( core -> print , ptr , nblocks , from , blocksize )"	3851:3:108818:108875	978546	8	True				
ANR	980946	CallExpression	"r_print_fill ( core -> print , ptr , nblocks , from , blocksize )"		978546	0					
ANR	980947	Callee	r_print_fill		978546	0					
ANR	980948	Identifier	r_print_fill		978546	0					
ANR	980949	ArgumentList	core -> print		978546	1					
ANR	980950	Argument	core -> print		978546	0					
ANR	980951	PtrMemberAccess	core -> print		978546	0					
ANR	980952	Identifier	core		978546	0					
ANR	980953	Identifier	print		978546	1					
ANR	980954	Argument	ptr		978546	1					
ANR	980955	Identifier	ptr		978546	0					
ANR	980956	Argument	nblocks		978546	2					
ANR	980957	Identifier	nblocks		978546	0					
ANR	980958	Argument	from		978546	3					
ANR	980959	Identifier	from		978546	0					
ANR	980960	Argument	blocksize		978546	4					
ANR	980961	Identifier	blocksize		978546	0					
ANR	980962	BreakStatement	break ;	3852:3:108880:108885	978546	9	True				
ANR	980963	Label	beach :	3855:0:108894:108899	978546	22	True				
ANR	980964	Identifier	beach		978546	0					
ANR	980965	ExpressionStatement	r_list_free ( list )	3856:1:108902:108920	978546	23	True				
ANR	980966	CallExpression	r_list_free ( list )		978546	0					
ANR	980967	Callee	r_list_free		978546	0					
ANR	980968	Identifier	r_list_free		978546	0					
ANR	980969	ArgumentList	list		978546	1					
ANR	980970	Argument	list		978546	0					
ANR	980971	Identifier	list		978546	0					
ANR	980972	ExpressionStatement	free ( ptr )	3857:1:108923:108933	978546	24	True				
ANR	980973	CallExpression	free ( ptr )		978546	0					
ANR	980974	Callee	free		978546	0					
ANR	980975	Identifier	free		978546	0					
ANR	980976	ArgumentList	ptr		978546	1					
ANR	980977	Argument	ptr		978546	0					
ANR	980978	Identifier	ptr		978546	0					
ANR	980979	ReturnType	static void		978546	1					
ANR	980980	Identifier	cmd_print_bars		978546	2					
ANR	980981	ParameterList	"RCore * core , const char * input"		978546	3					
ANR	980982	Parameter	RCore * core	3420:27:98975:98985	978546	0	True				
ANR	980983	ParameterType	RCore *		978546	0					
ANR	980984	Identifier	core		978546	1					
ANR	980985	Parameter	const char * input	3420:40:98988:99004	978546	1	True				
ANR	980986	ParameterType	const char *		978546	0					
ANR	980987	Identifier	input		978546	1					
ANR	980988	CFGEntryNode	ENTRY		978546		True				
ANR	980989	CFGExitNode	EXIT		978546		True				
ANR	980990	Symbol	blocksize		978546						
ANR	980991	Symbol	* fcn		978546						
ANR	980992	Symbol	* map		978546						
ANR	980993	Symbol	* input		978546						
ANR	980994	Symbol	strchr		978546						
ANR	980995	Symbol	core -> offset		978546						
ANR	980996	Symbol	len		978546						
ANR	980997	Symbol	* core -> num		978546						
ANR	980998	Symbol	core -> blocksize		978546						
ANR	980999	Symbol	core -> block		978546						
ANR	981000	Symbol	as -> block [ i ] . symbols		978546						
ANR	981001	Symbol	as -> block [ i ] . functions		978546						
ANR	981002	Symbol	iter		978546						
ANR	981003	Symbol	* map1		978546						
ANR	981004	Symbol	word64		978546						
ANR	981005	Symbol	print_bars		978546						
ANR	981006	Symbol	analBars		978546						
ANR	981007	Symbol	input		978546						
ANR	981008	Symbol	as -> block		978546						
ANR	981009	Symbol	as		978546						
ANR	981010	Symbol	core -> print -> cur		978546						
ANR	981011	Symbol	r_config_get_i		978546						
ANR	981012	Symbol	map1 -> itv . addr		978546						
ANR	981013	Symbol	nblocks		978546						
ANR	981014	Symbol	word		978546						
ANR	981015	Symbol	map -> addr		978546						
ANR	981016	Symbol	submode		978546						
ANR	981017	Symbol	* core		978546						
ANR	981018	Symbol	as -> block [ i ] . flags		978546						
ANR	981019	Symbol	core -> anal		978546						
ANR	981020	Symbol	as -> block [ i ] . strings		978546						
ANR	981021	Symbol	fcn		978546						
ANR	981022	Symbol	core -> io		978546						
ANR	981023	Symbol	r_hash_entropy_fraction		978546						
ANR	981024	Symbol	map		978546						
ANR	981025	Symbol	help_msg_p_equal		978546						
ANR	981026	Symbol	malloc		978546						
ANR	981027	Symbol	map1		978546						
ANR	981028	Symbol	words		978546						
ANR	981029	Symbol	i		978546						
ANR	981030	Symbol	oldword		978546						
ANR	981031	Symbol	j		978546						
ANR	981032	Symbol	core -> flags		978546						
ANR	981033	Symbol	k		978546						
ANR	981034	Symbol	off		978546						
ANR	981035	Symbol	r_itv_end		978546						
ANR	981036	Symbol	p		978546						
ANR	981037	Symbol	* core -> print		978546						
ANR	981038	Symbol	fcn -> bbs		978546						
ANR	981039	Symbol	as -> block [ i ] . comments		978546						
ANR	981040	Symbol	R_MAX		978546						
ANR	981041	Symbol	core -> print -> num		978546						
ANR	981042	Symbol	to		978546						
ANR	981043	Symbol	r_core_get_boundaries_prot		978546						
ANR	981044	Symbol	r_flag_get_at		978546						
ANR	981045	Symbol	r_list_length		978546						
ANR	981046	Symbol	bufsz		978546						
ANR	981047	Symbol	IS_PRINTABLE		978546						
ANR	981048	Symbol	ST16_MAX		978546						
ANR	981049	Symbol	pj_string		978546						
ANR	981050	Symbol	core -> num -> value		978546						
ANR	981051	Symbol	mode		978546						
ANR	981052	Symbol	r_io_fd_size		978546						
ANR	981053	Symbol	* ptr		978546						
ANR	981054	Symbol	from		978546						
ANR	981055	Symbol	r_debug_map_get		978546						
ANR	981056	Symbol	UT16_MAX		978546						
ANR	981057	Symbol	core -> num		978546						
ANR	981058	Symbol	* * as		978546						
ANR	981059	Symbol	as -> block [ i ] . in_functions		978546						
ANR	981060	Symbol	curbsz		978546						
ANR	981061	Symbol	NULL		978546						
ANR	981062	Symbol	spc		978546						
ANR	981063	Symbol	ep		978546						
ANR	981064	Symbol	list		978546						
ANR	981065	Symbol	map1 -> itv		978546						
ANR	981066	Symbol	core		978546						
ANR	981067	Symbol	map -> addr_end		978546						
ANR	981068	Symbol	core -> file -> fd		978546						
ANR	981069	Symbol	true		978546						
ANR	981070	Symbol	core -> print		978546						
ANR	981071	Symbol	map -> itv		978546						
ANR	981072	Symbol	r_core_anal_get_stats		978546						
ANR	981073	Symbol	skipblocks		978546						
ANR	981074	Symbol	calloc		978546						
ANR	981075	Symbol	as -> block [ i ] . blocks		978546						
ANR	981076	Symbol	r_num_math		978546						
ANR	981077	Symbol	r_list_first		978546						
ANR	981078	Symbol	UT64_MAX		978546						
ANR	981079	Symbol	value		978546						
ANR	981080	Symbol	* * core		978546						
ANR	981081	Symbol	totalsize		978546						
ANR	981082	Symbol	core -> config		978546						
ANR	981083	Symbol	core -> file		978546						
ANR	981084	Symbol	* word		978546						
ANR	981085	Symbol	* as -> block		978546						
ANR	981086	Symbol	false		978546						
ANR	981087	Symbol	ptr		978546						
ANR	981088	Symbol	* core -> file		978546						
ANR	981089	Symbol	* i		978546						
ANR	981090	Symbol	r_anal_get_fcn_in		978546						
ANR	981091	Symbol	* j		978546						
ANR	981092	Symbol	* p		978546						
ANR	981093	Symbol	step		978546						
ANR	981094	Symbol	pj_new		978546						
ANR	981095	Symbol	pj		978546						
ANR	981096	Symbol	* as		978546						
ANR	981097	Symbol	core -> print -> cur_enabled		978546						
ANR	981098	Symbol	core -> dbg		978546						
ANR	981099	Function	bbcmp	3860:0:108938:109014							
ANR	981100	FunctionDef	"bbcmp (RAnalBlock * a , RAnalBlock * b)"		981099	0					
ANR	981101	CompoundStatement		3860:47:108985:109014	981099	0					
ANR	981102	ReturnStatement	return a -> addr - b -> addr ;	3861:1:108988:109012	981099	0	True				
ANR	981103	AdditiveExpression	a -> addr - b -> addr		981099	0		-			
ANR	981104	PtrMemberAccess	a -> addr		981099	0					
ANR	981105	Identifier	a		981099	0					
ANR	981106	Identifier	addr		981099	1					
ANR	981107	PtrMemberAccess	b -> addr		981099	1					
ANR	981108	Identifier	b		981099	0					
ANR	981109	Identifier	addr		981099	1					
ANR	981110	ReturnType	static int		981099	1					
ANR	981111	Identifier	bbcmp		981099	2					
ANR	981112	ParameterList	"RAnalBlock * a , RAnalBlock * b"		981099	3					
ANR	981113	Parameter	RAnalBlock * a	3860:17:108955:108967	981099	0	True				
ANR	981114	ParameterType	RAnalBlock *		981099	0					
ANR	981115	Identifier	a		981099	1					
ANR	981116	Parameter	RAnalBlock * b	3860:32:108970:108982	981099	1	True				
ANR	981117	ParameterType	RAnalBlock *		981099	0					
ANR	981118	Identifier	b		981099	1					
ANR	981119	CFGEntryNode	ENTRY		981099		True				
ANR	981120	CFGExitNode	EXIT		981099		True				
ANR	981121	Symbol	a		981099						
ANR	981122	Symbol	b		981099						
ANR	981123	Symbol	a -> addr		981099						
ANR	981124	Symbol	* a		981099						
ANR	981125	Symbol	* b		981099						
ANR	981126	Symbol	b -> addr		981099						
ANR	981127	Function	_pointer_table	3865:0:109056:112066							
ANR	981128	FunctionDef	"_pointer_table (RCore * core , ut64 origin , ut64 offset , const ut8 * buf , int len , int step , int mode)"		981127	0					
ANR	981129	CompoundStatement		3865:111:109167:112066	981127	0					
ANR	981130	IdentifierDeclStatement	int i ;	3866:1:109170:109175	981127	0	True				
ANR	981131	IdentifierDecl	i		981127	0					
ANR	981132	IdentifierDeclType	int		981127	0					
ANR	981133	Identifier	i		981127	1					
ANR	981134	IdentifierDeclStatement	ut64 addr ;	3867:1:109178:109187	981127	1	True				
ANR	981135	IdentifierDecl	addr		981127	0					
ANR	981136	IdentifierDeclType	ut64		981127	0					
ANR	981137	Identifier	addr		981127	1					
ANR	981138	IdentifierDeclStatement	st32 * delta ;	3868:1:109190:109201	981127	2	True				
ANR	981139	IdentifierDecl	* delta		981127	0					
ANR	981140	IdentifierDeclType	st32 *		981127	0					
ANR	981141	Identifier	delta		981127	1					
ANR	981142	IfStatement	if ( step < 1 )		981127	3					
ANR	981143	Condition	step < 1	3869:5:109230:109237	981127	0	True				
ANR	981144	RelationalExpression	step < 1		981127	0		<			
ANR	981145	Identifier	step		981127	0					
ANR	981146	PrimaryExpression	1		981127	1					
ANR	981147	CompoundStatement		5:15:72:72	981127	1					
ANR	981148	ExpressionStatement	step = 4	3870:2:109244:109252	981127	0	True				
ANR	981149	AssignmentExpression	step = 4		981127	0		=			
ANR	981150	Identifier	step		981127	0					
ANR	981151	PrimaryExpression	4		981127	1					
ANR	981152	IfStatement	"if ( ! r_io_is_valid_offset ( core -> io , origin , 0 ) || ! r_io_is_valid_offset ( core -> io , offset , 0 ) )"		981127	4					
ANR	981153	Condition	"! r_io_is_valid_offset ( core -> io , origin , 0 ) || ! r_io_is_valid_offset ( core -> io , offset , 0 )"	3872:5:109262:109356	981127	0	True				
ANR	981154	OrExpression	"! r_io_is_valid_offset ( core -> io , origin , 0 ) || ! r_io_is_valid_offset ( core -> io , offset , 0 )"		981127	0		||			
ANR	981155	UnaryOperationExpression	"! r_io_is_valid_offset ( core -> io , origin , 0 )"		981127	0					
ANR	981156	UnaryOperator	!		981127	0					
ANR	981157	CallExpression	"r_io_is_valid_offset ( core -> io , origin , 0 )"		981127	1					
ANR	981158	Callee	r_io_is_valid_offset		981127	0					
ANR	981159	Identifier	r_io_is_valid_offset		981127	0					
ANR	981160	ArgumentList	core -> io		981127	1					
ANR	981161	Argument	core -> io		981127	0					
ANR	981162	PtrMemberAccess	core -> io		981127	0					
ANR	981163	Identifier	core		981127	0					
ANR	981164	Identifier	io		981127	1					
ANR	981165	Argument	origin		981127	1					
ANR	981166	Identifier	origin		981127	0					
ANR	981167	Argument	0		981127	2					
ANR	981168	PrimaryExpression	0		981127	0					
ANR	981169	UnaryOperationExpression	"! r_io_is_valid_offset ( core -> io , offset , 0 )"		981127	1					
ANR	981170	UnaryOperator	!		981127	0					
ANR	981171	CallExpression	"r_io_is_valid_offset ( core -> io , offset , 0 )"		981127	1					
ANR	981172	Callee	r_io_is_valid_offset		981127	0					
ANR	981173	Identifier	r_io_is_valid_offset		981127	0					
ANR	981174	ArgumentList	core -> io		981127	1					
ANR	981175	Argument	core -> io		981127	0					
ANR	981176	PtrMemberAccess	core -> io		981127	0					
ANR	981177	Identifier	core		981127	0					
ANR	981178	Identifier	io		981127	1					
ANR	981179	Argument	offset		981127	1					
ANR	981180	Identifier	offset		981127	0					
ANR	981181	Argument	0		981127	2					
ANR	981182	PrimaryExpression	0		981127	0					
ANR	981183	CompoundStatement		9:50:191:191	981127	1					
ANR	981184	ReturnStatement	return ;	3874:2:109363:109369	981127	0	True				
ANR	981185	IfStatement	if ( origin != offset )		981127	5					
ANR	981186	Condition	origin != offset	3876:5:109379:109394	981127	0	True				
ANR	981187	EqualityExpression	origin != offset		981127	0		!=			
ANR	981188	Identifier	origin		981127	0					
ANR	981189	Identifier	offset		981127	1					
ANR	981190	CompoundStatement		12:23:229:229	981127	1					
ANR	981191	SwitchStatement	switch ( mode )		981127	0					
ANR	981192	Condition	mode	3877:10:109409:109412	981127	0	True				
ANR	981193	Identifier	mode		981127	0					
ANR	981194	CompoundStatement		13:16:247:247	981127	1					
ANR	981195	Label	case '*' :	3878:2:109419:109427	981127	0	True				
ANR	981196	Statement	r_cons_printf	3879:3:109432:109444	981127	1	True				
ANR	981197	Statement	(	3879:17:109446:109446	981127	2	True				
ANR	981198	Statement	"""CC-@ 0x%08"""	3879:18:109447:109458	981127	3	True				
ANR	981199	Statement	PFMT64x	3879:30:109459:109465	981127	4	True				
ANR	981200	Statement	"""\\n"""	3879:38:109467:109470	981127	5	True				
ANR	981201	Statement	","	3879:42:109471:109471	981127	6	True				
ANR	981202	Statement	origin	3879:44:109473:109478	981127	7	True				
ANR	981203	Statement	)	3879:50:109479:109479	981127	8	True				
ANR	981204	ExpressionStatement		3879:51:109480:109480	981127	9	True				
ANR	981205	Statement	r_cons_printf	3880:3:109485:109497	981127	10	True				
ANR	981206	Statement	(	3880:17:109499:109499	981127	11	True				
ANR	981207	Statement	"""CC switch table @ 0x%08"""	3880:18:109500:109524	981127	12	True				
ANR	981208	Statement	PFMT64x	3880:43:109525:109531	981127	13	True				
ANR	981209	Statement	"""\\n"""	3880:51:109533:109536	981127	14	True				
ANR	981210	Statement	","	3880:55:109537:109537	981127	15	True				
ANR	981211	Statement	origin	3880:57:109539:109544	981127	16	True				
ANR	981212	Statement	)	3880:63:109545:109545	981127	17	True				
ANR	981213	ExpressionStatement		3880:64:109546:109546	981127	18	True				
ANR	981214	Statement	r_cons_printf	3881:3:109551:109563	981127	19	True				
ANR	981215	Statement	(	3881:17:109565:109565	981127	20	True				
ANR	981216	Statement	"""axd 0x%"""	3881:18:109566:109574	981127	21	True				
ANR	981217	Statement	PFMT64x	3881:27:109575:109581	981127	22	True				
ANR	981218	Statement	""" 0x%08"""	3881:35:109583:109590	981127	23	True				
ANR	981219	Statement	PFMT64x	3881:43:109591:109597	981127	24	True				
ANR	981220	Statement	"""\\n"""	3881:51:109599:109602	981127	25	True				
ANR	981221	Statement	","	3881:55:109603:109603	981127	26	True				
ANR	981222	Statement	origin	3881:57:109605:109610	981127	27	True				
ANR	981223	Statement	","	3881:63:109611:109611	981127	28	True				
ANR	981224	Statement	offset	3881:65:109613:109618	981127	29	True				
ANR	981225	Statement	)	3881:71:109619:109619	981127	30	True				
ANR	981226	ExpressionStatement		3881:72:109620:109620	981127	31	True				
ANR	981227	BreakStatement	break ;	3882:3:109625:109630	981127	32	True				
ANR	981228	Label	case '.' :	3883:2:109634:109642	981127	33	True				
ANR	981229	Statement	r_core_cmdf	3884:3:109647:109657	981127	34	True				
ANR	981230	Statement	(	3884:15:109659:109659	981127	35	True				
ANR	981231	Statement	core	3884:16:109660:109663	981127	36	True				
ANR	981232	Statement	","	3884:20:109664:109664	981127	37	True				
ANR	981233	Statement	"""CC-@ 0x%08"""	3884:22:109666:109677	981127	38	True				
ANR	981234	Statement	PFMT64x	3884:34:109678:109684	981127	39	True				
ANR	981235	Statement	"""\\n"""	3884:42:109686:109689	981127	40	True				
ANR	981236	Statement	","	3884:46:109690:109690	981127	41	True				
ANR	981237	Statement	origin	3884:48:109692:109697	981127	42	True				
ANR	981238	Statement	)	3884:54:109698:109698	981127	43	True				
ANR	981239	ExpressionStatement		3884:55:109699:109699	981127	44	True				
ANR	981240	Statement	r_core_cmdf	3885:3:109704:109714	981127	45	True				
ANR	981241	Statement	(	3885:15:109716:109716	981127	46	True				
ANR	981242	Statement	core	3885:16:109717:109720	981127	47	True				
ANR	981243	Statement	","	3885:20:109721:109721	981127	48	True				
ANR	981244	Statement	"""CC switch table @ 0x%08"""	3885:22:109723:109747	981127	49	True				
ANR	981245	Statement	PFMT64x	3885:47:109748:109754	981127	50	True				
ANR	981246	Statement	"""\\n"""	3885:55:109756:109759	981127	51	True				
ANR	981247	Statement	","	3885:59:109760:109760	981127	52	True				
ANR	981248	Statement	origin	3885:61:109762:109767	981127	53	True				
ANR	981249	Statement	)	3885:67:109768:109768	981127	54	True				
ANR	981250	ExpressionStatement		3885:68:109769:109769	981127	55	True				
ANR	981251	Statement	r_core_cmdf	3886:3:109774:109784	981127	56	True				
ANR	981252	Statement	(	3886:15:109786:109786	981127	57	True				
ANR	981253	Statement	core	3886:16:109787:109790	981127	58	True				
ANR	981254	Statement	","	3886:20:109791:109791	981127	59	True				
ANR	981255	Statement	"""f switch.0x%08"""	3886:22:109793:109808	981127	60	True				
ANR	981256	Statement	PFMT64x	3886:38:109809:109815	981127	61	True				
ANR	981257	Statement	"""=0x%08"""	3886:45:109816:109823	981127	62	True				
ANR	981258	Statement	PFMT64x	3886:53:109824:109830	981127	63	True				
ANR	981259	Statement	"""\\n"""	3886:60:109831:109834	981127	64	True				
ANR	981260	Statement	","	3886:64:109835:109835	981127	65	True				
ANR	981261	Statement	origin	3886:66:109837:109842	981127	66	True				
ANR	981262	Statement	","	3886:72:109843:109843	981127	67	True				
ANR	981263	Statement	origin	3886:74:109845:109850	981127	68	True				
ANR	981264	Statement	)	3886:80:109851:109851	981127	69	True				
ANR	981265	ExpressionStatement		3886:81:109852:109852	981127	70	True				
ANR	981266	Statement	r_core_cmdf	3887:3:109857:109867	981127	71	True				
ANR	981267	Statement	(	3887:15:109869:109869	981127	72	True				
ANR	981268	Statement	core	3887:16:109870:109873	981127	73	True				
ANR	981269	Statement	","	3887:20:109874:109874	981127	74	True				
ANR	981270	Statement	"""f jmptbl.0x%08"""	3887:22:109876:109891	981127	75	True				
ANR	981271	Statement	PFMT64x	3887:38:109892:109898	981127	76	True				
ANR	981272	Statement	"""=0x%08"""	3887:45:109899:109906	981127	77	True				
ANR	981273	Statement	PFMT64x	3887:53:109907:109913	981127	78	True				
ANR	981274	Statement	"""\\n"""	3887:60:109914:109917	981127	79	True				
ANR	981275	Statement	","	3887:64:109918:109918	981127	80	True				
ANR	981276	Statement	offset	3887:66:109920:109925	981127	81	True				
ANR	981277	Statement	","	3887:72:109926:109926	981127	82	True				
ANR	981278	Statement	offset	3887:74:109928:109933	981127	83	True				
ANR	981279	Statement	)	3887:80:109934:109934	981127	84	True				
ANR	981280	ExpressionStatement		3887:81:109935:109935	981127	85	True				
ANR	981281	Statement	r_core_cmdf	3888:3:109959:109969	981127	86	True				
ANR	981282	Statement	(	3888:15:109971:109971	981127	87	True				
ANR	981283	Statement	core	3888:16:109972:109975	981127	88	True				
ANR	981284	Statement	","	3888:20:109976:109976	981127	89	True				
ANR	981285	Statement	"""axd 0x%"""	3888:22:109978:109986	981127	90	True				
ANR	981286	Statement	PFMT64x	3888:31:109987:109993	981127	91	True				
ANR	981287	Statement	""" 0x%08"""	3888:39:109995:110002	981127	92	True				
ANR	981288	Statement	PFMT64x	3888:47:110003:110009	981127	93	True				
ANR	981289	Statement	"""\\n"""	3888:55:110011:110014	981127	94	True				
ANR	981290	Statement	","	3888:59:110015:110015	981127	95	True				
ANR	981291	Statement	origin	3888:61:110017:110022	981127	96	True				
ANR	981292	Statement	","	3888:67:110023:110023	981127	97	True				
ANR	981293	Statement	offset	3888:69:110025:110030	981127	98	True				
ANR	981294	Statement	)	3888:75:110031:110031	981127	99	True				
ANR	981295	ExpressionStatement		3888:76:110032:110032	981127	100	True				
ANR	981296	BreakStatement	break ;	3889:3:110037:110042	981127	101	True				
ANR	981297	ElseStatement	else		981127	0					
ANR	981298	IfStatement	if ( mode == '.' )		981127	0					
ANR	981299	Condition	mode == '.'	3891:12:110060:110070	981127	0	True				
ANR	981300	EqualityExpression	mode == '.'		981127	0		==			
ANR	981301	Identifier	mode		981127	0					
ANR	981302	PrimaryExpression	'.'		981127	1					
ANR	981303	CompoundStatement		27:25:905:905	981127	1					
ANR	981304	Statement	r_core_cmdf	3892:2:110077:110087	981127	0	True				
ANR	981305	Statement	(	3892:14:110089:110089	981127	1	True				
ANR	981306	Statement	core	3892:15:110090:110093	981127	2	True				
ANR	981307	Statement	","	3892:19:110094:110094	981127	3	True				
ANR	981308	Statement	"""CC-@ 0x%08"""	3892:21:110096:110107	981127	4	True				
ANR	981309	Statement	PFMT64x	3892:33:110108:110114	981127	5	True				
ANR	981310	Statement	"""\\n"""	3892:41:110116:110119	981127	6	True				
ANR	981311	Statement	","	3892:45:110120:110120	981127	7	True				
ANR	981312	Statement	origin	3892:47:110122:110127	981127	8	True				
ANR	981313	Statement	)	3892:53:110128:110128	981127	9	True				
ANR	981314	ExpressionStatement		3892:54:110129:110129	981127	10	True				
ANR	981315	Statement	r_core_cmdf	3893:2:110133:110143	981127	11	True				
ANR	981316	Statement	(	3893:14:110145:110145	981127	12	True				
ANR	981317	Statement	core	3893:15:110146:110149	981127	13	True				
ANR	981318	Statement	","	3893:19:110150:110150	981127	14	True				
ANR	981319	Statement	"""CC switch basic block @ 0x%08"""	3893:21:110152:110182	981127	15	True				
ANR	981320	Statement	PFMT64x	3893:52:110183:110189	981127	16	True				
ANR	981321	Statement	"""\\n"""	3893:60:110191:110194	981127	17	True				
ANR	981322	Statement	","	3893:64:110195:110195	981127	18	True				
ANR	981323	Statement	offset	3893:66:110197:110202	981127	19	True				
ANR	981324	Statement	)	3893:72:110203:110203	981127	20	True				
ANR	981325	ExpressionStatement		3893:73:110204:110204	981127	21	True				
ANR	981326	Statement	r_core_cmdf	3894:2:110208:110218	981127	22	True				
ANR	981327	Statement	(	3894:14:110220:110220	981127	23	True				
ANR	981328	Statement	core	3894:15:110221:110224	981127	24	True				
ANR	981329	Statement	","	3894:19:110225:110225	981127	25	True				
ANR	981330	Statement	"""f switch.0x%08"""	3894:21:110227:110242	981127	26	True				
ANR	981331	Statement	PFMT64x	3894:37:110243:110249	981127	27	True				
ANR	981332	Statement	"""=0x%08"""	3894:44:110250:110257	981127	28	True				
ANR	981333	Statement	PFMT64x	3894:52:110258:110264	981127	29	True				
ANR	981334	Statement	"""\\n"""	3894:59:110265:110268	981127	30	True				
ANR	981335	Statement	","	3894:63:110269:110269	981127	31	True				
ANR	981336	Statement	offset	3894:65:110271:110276	981127	32	True				
ANR	981337	Statement	","	3894:71:110277:110277	981127	33	True				
ANR	981338	Statement	offset	3894:73:110279:110284	981127	34	True				
ANR	981339	Statement	)	3894:79:110285:110285	981127	35	True				
ANR	981340	ExpressionStatement		3894:80:110286:110286	981127	36	True				
ANR	981341	IdentifierDeclStatement	int n = 0 ;	3896:1:110338:110347	981127	6	True				
ANR	981342	IdentifierDecl	n = 0		981127	0					
ANR	981343	IdentifierDeclType	int		981127	0					
ANR	981344	Identifier	n		981127	1					
ANR	981345	AssignmentExpression	n = 0		981127	2		=			
ANR	981346	Identifier	n		981127	0					
ANR	981347	PrimaryExpression	0		981127	1					
ANR	981348	ForStatement	"for ( i = 0 ; ( i + sizeof ( st32 ) ) <= len ; i += step , n ++ )"		981127	7					
ANR	981349	ForInit	i = 0 ;	3897:6:110355:110360	981127	0	True				
ANR	981350	AssignmentExpression	i = 0		981127	0		=			
ANR	981351	Identifier	i		981127	0					
ANR	981352	PrimaryExpression	0		981127	1					
ANR	981353	Condition	( i + sizeof ( st32 ) ) <= len	3897:13:110362:110387	981127	1	True				
ANR	981354	RelationalExpression	( i + sizeof ( st32 ) ) <= len		981127	0		<=			
ANR	981355	AdditiveExpression	i + sizeof ( st32 )		981127	0		+			
ANR	981356	Identifier	i		981127	0					
ANR	981357	SizeofExpression	sizeof ( st32 )		981127	1					
ANR	981358	Sizeof	sizeof		981127	0					
ANR	981359	SizeofOperand	st32		981127	1					
ANR	981360	Identifier	len		981127	1					
ANR	981361	Expression	"i += step , n ++"	3897:41:110390:110403	981127	2	True				
ANR	981362	AssignmentExpression	i += step		981127	0		+=			
ANR	981363	Identifier	i		981127	0					
ANR	981364	Identifier	step		981127	1					
ANR	981365	PostIncDecOperationExpression	n ++		981127	1					
ANR	981366	Identifier	n		981127	0					
ANR	981367	IncDec	++		981127	1					
ANR	981368	CompoundStatement		33:57:1238:1238	981127	3					
ANR	981369	ExpressionStatement	delta = ( st32 * ) ( buf + i )	3898:2:110410:110436	981127	0	True				
ANR	981370	AssignmentExpression	delta = ( st32 * ) ( buf + i )		981127	0		=			
ANR	981371	Identifier	delta		981127	0					
ANR	981372	CastExpression	( st32 * ) ( buf + i )		981127	1					
ANR	981373	CastTarget	st32 *		981127	0					
ANR	981374	AdditiveExpression	buf + i		981127	1		+			
ANR	981375	Identifier	buf		981127	0					
ANR	981376	Identifier	i		981127	1					
ANR	981377	ExpressionStatement	addr = offset + * delta	3899:2:110440:110462	981127	1	True				
ANR	981378	AssignmentExpression	addr = offset + * delta		981127	0		=			
ANR	981379	Identifier	addr		981127	0					
ANR	981380	AdditiveExpression	offset + * delta		981127	1		+			
ANR	981381	Identifier	offset		981127	0					
ANR	981382	UnaryOperationExpression	* delta		981127	1					
ANR	981383	UnaryOperator	*		981127	0					
ANR	981384	Identifier	delta		981127	1					
ANR	981385	IfStatement	"if ( ! r_io_is_valid_offset ( core -> io , addr , 0 ) )"		981127	2					
ANR	981386	Condition	"! r_io_is_valid_offset ( core -> io , addr , 0 )"	3900:6:110470:110510	981127	0	True				
ANR	981387	UnaryOperationExpression	"! r_io_is_valid_offset ( core -> io , addr , 0 )"		981127	0					
ANR	981388	UnaryOperator	!		981127	0					
ANR	981389	CallExpression	"r_io_is_valid_offset ( core -> io , addr , 0 )"		981127	1					
ANR	981390	Callee	r_io_is_valid_offset		981127	0					
ANR	981391	Identifier	r_io_is_valid_offset		981127	0					
ANR	981392	ArgumentList	core -> io		981127	1					
ANR	981393	Argument	core -> io		981127	0					
ANR	981394	PtrMemberAccess	core -> io		981127	0					
ANR	981395	Identifier	core		981127	0					
ANR	981396	Identifier	io		981127	1					
ANR	981397	Argument	addr		981127	1					
ANR	981398	Identifier	addr		981127	0					
ANR	981399	Argument	0		981127	2					
ANR	981400	PrimaryExpression	0		981127	0					
ANR	981401	CompoundStatement		36:49:1345:1345	981127	1					
ANR	981402	IfStatement	"if ( ! r_io_is_valid_offset ( core -> io , * delta , 0 ) )"		981127	0					
ANR	981403	Condition	"! r_io_is_valid_offset ( core -> io , * delta , 0 )"	3903:7:110627:110669	981127	0	True				
ANR	981404	UnaryOperationExpression	"! r_io_is_valid_offset ( core -> io , * delta , 0 )"		981127	0					
ANR	981405	UnaryOperator	!		981127	0					
ANR	981406	CallExpression	"r_io_is_valid_offset ( core -> io , * delta , 0 )"		981127	1					
ANR	981407	Callee	r_io_is_valid_offset		981127	0					
ANR	981408	Identifier	r_io_is_valid_offset		981127	0					
ANR	981409	ArgumentList	core -> io		981127	1					
ANR	981410	Argument	core -> io		981127	0					
ANR	981411	PtrMemberAccess	core -> io		981127	0					
ANR	981412	Identifier	core		981127	0					
ANR	981413	Identifier	io		981127	1					
ANR	981414	Argument	* delta		981127	1					
ANR	981415	UnaryOperationExpression	* delta		981127	0					
ANR	981416	UnaryOperator	*		981127	0					
ANR	981417	Identifier	delta		981127	1					
ANR	981418	Argument	0		981127	2					
ANR	981419	PrimaryExpression	0		981127	0					
ANR	981420	CompoundStatement		39:52:1504:1504	981127	1					
ANR	981421	BreakStatement	break ;	3904:4:110678:110683	981127	0	True				
ANR	981422	ExpressionStatement	addr = * delta	3906:3:110693:110706	981127	1	True				
ANR	981423	AssignmentExpression	addr = * delta		981127	0		=			
ANR	981424	Identifier	addr		981127	0					
ANR	981425	UnaryOperationExpression	* delta		981127	1					
ANR	981426	UnaryOperator	*		981127	0					
ANR	981427	Identifier	delta		981127	1					
ANR	981428	IfStatement	if ( mode == '*' )		981127	3					
ANR	981429	Condition	mode == '*'	3908:6:110718:110728	981127	0	True				
ANR	981430	EqualityExpression	mode == '*'		981127	0		==			
ANR	981431	Identifier	mode		981127	0					
ANR	981432	PrimaryExpression	'*'		981127	1					
ANR	981433	CompoundStatement		44:19:1563:1563	981127	1					
ANR	981434	Statement	r_cons_printf	3909:3:110736:110748	981127	0	True				
ANR	981435	Statement	(	3909:17:110750:110750	981127	1	True				
ANR	981436	Statement	"""af case.%d.0x%"""	3909:18:110751:110766	981127	2	True				
ANR	981437	Statement	PFMT64x	3909:34:110767:110773	981127	3	True				
ANR	981438	Statement	""" 0x%08"""	3909:42:110775:110782	981127	4	True				
ANR	981439	Statement	PFMT64x	3909:50:110783:110789	981127	5	True				
ANR	981440	Statement	"""\\n"""	3909:58:110791:110794	981127	6	True				
ANR	981441	Statement	","	3909:62:110795:110795	981127	7	True				
ANR	981442	Statement	n	3909:64:110797:110797	981127	8	True				
ANR	981443	Statement	","	3909:65:110798:110798	981127	9	True				
ANR	981444	Statement	offset	3909:67:110800:110805	981127	10	True				
ANR	981445	Statement	","	3909:73:110806:110806	981127	11	True				
ANR	981446	Statement	addr	3909:75:110808:110811	981127	12	True				
ANR	981447	Statement	)	3909:79:110812:110812	981127	13	True				
ANR	981448	ExpressionStatement		3909:80:110813:110813	981127	14	True				
ANR	981449	Statement	r_cons_printf	3910:3:110818:110830	981127	15	True				
ANR	981450	Statement	(	3910:17:110832:110832	981127	16	True				
ANR	981451	Statement	"""ax 0x%"""	3910:18:110833:110840	981127	17	True				
ANR	981452	Statement	PFMT64x	3910:26:110841:110847	981127	18	True				
ANR	981453	Statement	""" 0x%08"""	3910:34:110849:110856	981127	19	True				
ANR	981454	Statement	PFMT64x	3910:42:110857:110863	981127	20	True				
ANR	981455	Statement	"""\\n"""	3910:50:110865:110868	981127	21	True				
ANR	981456	Statement	","	3910:54:110869:110869	981127	22	True				
ANR	981457	Statement	offset	3910:56:110871:110876	981127	23	True				
ANR	981458	Statement	","	3910:62:110877:110877	981127	24	True				
ANR	981459	Statement	addr	3910:64:110879:110882	981127	25	True				
ANR	981460	Statement	)	3910:68:110883:110883	981127	26	True				
ANR	981461	ExpressionStatement		3910:69:110884:110884	981127	27	True				
ANR	981462	Statement	r_cons_printf	3911:3:110889:110901	981127	28	True				
ANR	981463	Statement	(	3911:17:110903:110903	981127	29	True				
ANR	981464	Statement	"""ax 0x%"""	3911:18:110904:110911	981127	30	True				
ANR	981465	Statement	PFMT64x	3911:26:110912:110918	981127	31	True				
ANR	981466	Statement	""" 0x%08"""	3911:34:110920:110927	981127	32	True				
ANR	981467	Statement	PFMT64x	3911:42:110928:110934	981127	33	True				
ANR	981468	Statement	"""\\n"""	3911:50:110936:110939	981127	34	True				
ANR	981469	Statement	","	3911:54:110940:110940	981127	35	True				
ANR	981470	Statement	addr	3911:56:110942:110945	981127	36	True				
ANR	981471	Statement	","	3911:60:110946:110946	981127	37	True				
ANR	981472	Statement	offset	3911:62:110948:110953	981127	38	True				
ANR	981473	Statement	)	3911:68:110954:110954	981127	39	True				
ANR	981474	ExpressionStatement		3911:69:110955:110955	981127	40	True				
ANR	981475	Statement	r_cons_printf	3912:3:111016:111028	981127	41	True				
ANR	981476	Statement	(	3912:17:111030:111030	981127	42	True				
ANR	981477	Statement	"""aho case 0x%"""	3912:18:111031:111044	981127	43	True				
ANR	981478	Statement	PFMT64x	3912:32:111045:111051	981127	44	True				
ANR	981479	Statement	""" 0x%08"""	3912:40:111053:111060	981127	45	True				
ANR	981480	Statement	PFMT64x	3912:48:111061:111067	981127	46	True				
ANR	981481	Statement	""" @ 0x%08"""	3912:56:111069:111078	981127	47	True				
ANR	981482	Statement	PFMT64x	3912:66:111079:111085	981127	48	True				
ANR	981483	Statement	"""\\n"""	3912:74:111087:111090	981127	49	True				
ANR	981484	Statement	","	3912:78:111091:111091	981127	50	True				
ANR	981485	Statement	(	3912:80:111093:111093	981127	51	True				
ANR	981486	Statement	ut64	3912:81:111094:111097	981127	52	True				
ANR	981487	Statement	)	3912:85:111098:111098	981127	53	True				
ANR	981488	Statement	i	3912:86:111099:111099	981127	54	True				
ANR	981489	Statement	","	3912:87:111100:111100	981127	55	True				
ANR	981490	Statement	addr	3912:89:111102:111105	981127	56	True				
ANR	981491	Statement	","	3912:93:111106:111106	981127	57	True				
ANR	981492	Statement	offset	3912:95:111108:111113	981127	58	True				
ANR	981493	Statement	+	3912:102:111115:111115	981127	59	True				
ANR	981494	Statement	i	3912:104:111117:111117	981127	60	True				
ANR	981495	Statement	)	3912:105:111118:111118	981127	61	True				
ANR	981496	ExpressionStatement		3912:106:111119:111119	981127	62	True				
ANR	981497	Statement	r_cons_printf	3913:3:111180:111192	981127	63	True				
ANR	981498	Statement	(	3913:17:111194:111194	981127	64	True				
ANR	981499	Statement	"""ahs %d @ 0x%08"""	3913:18:111195:111210	981127	65	True				
ANR	981500	Statement	PFMT64x	3913:34:111211:111217	981127	66	True				
ANR	981501	Statement	"""\\n"""	3913:42:111219:111222	981127	67	True				
ANR	981502	Statement	","	3913:46:111223:111223	981127	68	True				
ANR	981503	Statement	step	3913:48:111225:111228	981127	69	True				
ANR	981504	Statement	","	3913:52:111229:111229	981127	70	True				
ANR	981505	Statement	offset	3913:54:111231:111236	981127	71	True				
ANR	981506	Statement	+	3913:61:111238:111238	981127	72	True				
ANR	981507	Statement	i	3913:63:111240:111240	981127	73	True				
ANR	981508	Statement	)	3913:64:111241:111241	981127	74	True				
ANR	981509	ExpressionStatement		3913:65:111242:111242	981127	75	True				
ANR	981510	ElseStatement	else		981127	0					
ANR	981511	IfStatement	if ( mode == '.' )		981127	0					
ANR	981512	Condition	mode == '.'	3914:13:111257:111267	981127	0	True				
ANR	981513	EqualityExpression	mode == '.'		981127	0		==			
ANR	981514	Identifier	mode		981127	0					
ANR	981515	PrimaryExpression	'.'		981127	1					
ANR	981516	CompoundStatement		50:26:2102:2102	981127	1					
ANR	981517	Statement	r_core_cmdf	3915:3:111275:111285	981127	0	True				
ANR	981518	Statement	(	3915:15:111287:111287	981127	1	True				
ANR	981519	Statement	core	3915:16:111288:111291	981127	2	True				
ANR	981520	Statement	","	3915:20:111292:111292	981127	3	True				
ANR	981521	Statement	"""af case.%d.0x%"""	3915:22:111294:111309	981127	4	True				
ANR	981522	Statement	PFMT64x	3915:38:111310:111316	981127	5	True				
ANR	981523	Statement	""" @ 0x%08"""	3915:46:111318:111327	981127	6	True				
ANR	981524	Statement	PFMT64x	3915:56:111328:111334	981127	7	True				
ANR	981525	Statement	"""\\n"""	3915:64:111336:111339	981127	8	True				
ANR	981526	Statement	","	3915:68:111340:111340	981127	9	True				
ANR	981527	Statement	n	3915:70:111342:111342	981127	10	True				
ANR	981528	Statement	","	3915:71:111343:111343	981127	11	True				
ANR	981529	Statement	offset	3915:73:111345:111350	981127	12	True				
ANR	981530	Statement	","	3915:79:111351:111351	981127	13	True				
ANR	981531	Statement	addr	3915:81:111353:111356	981127	14	True				
ANR	981532	Statement	)	3915:85:111357:111357	981127	15	True				
ANR	981533	ExpressionStatement		3915:86:111358:111358	981127	16	True				
ANR	981534	Statement	r_core_cmdf	3916:3:111363:111373	981127	17	True				
ANR	981535	Statement	(	3916:15:111375:111375	981127	18	True				
ANR	981536	Statement	core	3916:16:111376:111379	981127	19	True				
ANR	981537	Statement	","	3916:20:111380:111380	981127	20	True				
ANR	981538	Statement	"""ax 0x%"""	3916:22:111382:111389	981127	21	True				
ANR	981539	Statement	PFMT64x	3916:30:111390:111396	981127	22	True				
ANR	981540	Statement	""" 0x%08"""	3916:38:111398:111405	981127	23	True				
ANR	981541	Statement	PFMT64x	3916:46:111406:111412	981127	24	True				
ANR	981542	Statement	"""\\n"""	3916:54:111414:111417	981127	25	True				
ANR	981543	Statement	","	3916:58:111418:111418	981127	26	True				
ANR	981544	Statement	offset	3916:60:111420:111425	981127	27	True				
ANR	981545	Statement	","	3916:66:111426:111426	981127	28	True				
ANR	981546	Statement	addr	3916:68:111428:111431	981127	29	True				
ANR	981547	Statement	)	3916:72:111432:111432	981127	30	True				
ANR	981548	ExpressionStatement		3916:73:111433:111433	981127	31	True				
ANR	981549	Statement	r_core_cmdf	3917:3:111438:111448	981127	32	True				
ANR	981550	Statement	(	3917:15:111450:111450	981127	33	True				
ANR	981551	Statement	core	3917:16:111451:111454	981127	34	True				
ANR	981552	Statement	","	3917:20:111455:111455	981127	35	True				
ANR	981553	Statement	"""ax 0x%"""	3917:22:111457:111464	981127	36	True				
ANR	981554	Statement	PFMT64x	3917:30:111465:111471	981127	37	True				
ANR	981555	Statement	""" 0x%08"""	3917:38:111473:111480	981127	38	True				
ANR	981556	Statement	PFMT64x	3917:46:111481:111487	981127	39	True				
ANR	981557	Statement	"""\\n"""	3917:54:111489:111492	981127	40	True				
ANR	981558	Statement	","	3917:58:111493:111493	981127	41	True				
ANR	981559	Statement	addr	3917:60:111495:111498	981127	42	True				
ANR	981560	Statement	","	3917:64:111499:111499	981127	43	True				
ANR	981561	Statement	offset	3917:66:111501:111506	981127	44	True				
ANR	981562	Statement	)	3917:72:111507:111507	981127	45	True				
ANR	981563	ExpressionStatement		3917:73:111508:111508	981127	46	True				
ANR	981564	Statement	r_core_cmdf	3919:3:111671:111681	981127	47	True				
ANR	981565	Statement	(	3919:15:111683:111683	981127	48	True				
ANR	981566	Statement	core	3919:16:111684:111687	981127	49	True				
ANR	981567	Statement	","	3919:20:111688:111688	981127	50	True				
ANR	981568	Statement	"""CCu case %d: @ 0x%08"""	3919:22:111690:111711	981127	51	True				
ANR	981569	Statement	PFMT64x	3919:44:111712:111718	981127	52	True				
ANR	981570	Statement	"""\\n"""	3919:52:111720:111723	981127	53	True				
ANR	981571	Statement	","	3919:56:111724:111724	981127	54	True				
ANR	981572	Statement	n	3919:58:111726:111726	981127	55	True				
ANR	981573	Statement	","	3919:59:111727:111727	981127	56	True				
ANR	981574	Statement	addr	3919:61:111729:111732	981127	57	True				
ANR	981575	Statement	)	3919:65:111733:111733	981127	58	True				
ANR	981576	ExpressionStatement		3919:66:111734:111734	981127	59	True				
ANR	981577	Statement	r_core_cmdf	3920:3:111752:111762	981127	60	True				
ANR	981578	Statement	(	3920:15:111764:111764	981127	61	True				
ANR	981579	Statement	core	3920:16:111765:111768	981127	62	True				
ANR	981580	Statement	","	3920:20:111769:111769	981127	63	True				
ANR	981581	Statement	"""aho case %d 0x%08"""	3920:22:111771:111789	981127	64	True				
ANR	981582	Statement	PFMT64x	3920:41:111790:111796	981127	65	True				
ANR	981583	Statement	""" @ 0x%08"""	3920:49:111798:111807	981127	66	True				
ANR	981584	Statement	PFMT64x	3920:59:111808:111814	981127	67	True				
ANR	981585	Statement	"""\\n"""	3920:67:111816:111819	981127	68	True				
ANR	981586	Statement	","	3920:71:111820:111820	981127	69	True				
ANR	981587	Statement	n	3920:73:111822:111822	981127	70	True				
ANR	981588	Statement	","	3920:74:111823:111823	981127	71	True				
ANR	981589	Statement	addr	3920:76:111825:111828	981127	72	True				
ANR	981590	Statement	","	3920:80:111829:111829	981127	73	True				
ANR	981591	Statement	offset	3920:82:111831:111836	981127	74	True				
ANR	981592	Statement	+	3920:89:111838:111838	981127	75	True				
ANR	981593	Statement	i	3920:91:111840:111840	981127	76	True				
ANR	981594	Statement	)	3920:92:111841:111841	981127	77	True				
ANR	981595	ExpressionStatement		3920:93:111842:111842	981127	78	True				
ANR	981596	Statement	r_core_cmdf	3921:3:111903:111913	981127	79	True				
ANR	981597	Statement	(	3921:15:111915:111915	981127	80	True				
ANR	981598	Statement	core	3921:16:111916:111919	981127	81	True				
ANR	981599	Statement	","	3921:20:111920:111920	981127	82	True				
ANR	981600	Statement	"""ahs %d @ 0x%08"""	3921:22:111922:111937	981127	83	True				
ANR	981601	Statement	PFMT64x	3921:38:111938:111944	981127	84	True				
ANR	981602	Statement	"""\\n"""	3921:46:111946:111949	981127	85	True				
ANR	981603	Statement	","	3921:50:111950:111950	981127	86	True				
ANR	981604	Statement	step	3921:52:111952:111955	981127	87	True				
ANR	981605	Statement	","	3921:56:111956:111956	981127	88	True				
ANR	981606	Statement	offset	3921:58:111958:111963	981127	89	True				
ANR	981607	Statement	+	3921:65:111965:111965	981127	90	True				
ANR	981608	Statement	i	3921:67:111967:111967	981127	91	True				
ANR	981609	Statement	)	3921:68:111968:111968	981127	92	True				
ANR	981610	ExpressionStatement		3921:69:111969:111969	981127	93	True				
ANR	981611	ElseStatement	else		981127	0					
ANR	981612	CompoundStatement		58:9:2812:2812	981127	0					
ANR	981613	Statement	r_cons_printf	3923:3:111985:111997	981127	0	True				
ANR	981614	Statement	(	3923:17:111999:111999	981127	1	True				
ANR	981615	Statement	"""0x%08"""	3923:18:112000:112006	981127	2	True				
ANR	981616	Statement	PFMT64x	3923:25:112007:112013	981127	3	True				
ANR	981617	Statement	""" -> 0x%08"""	3923:33:112015:112025	981127	4	True				
ANR	981618	Statement	PFMT64x	3923:44:112026:112032	981127	5	True				
ANR	981619	Statement	"""\\n"""	3923:52:112034:112037	981127	6	True				
ANR	981620	Statement	","	3923:56:112038:112038	981127	7	True				
ANR	981621	Statement	offset	3923:58:112040:112045	981127	8	True				
ANR	981622	Statement	+	3923:65:112047:112047	981127	9	True				
ANR	981623	Statement	i	3923:67:112049:112049	981127	10	True				
ANR	981624	Statement	","	3923:68:112050:112050	981127	11	True				
ANR	981625	Statement	addr	3923:70:112052:112055	981127	12	True				
ANR	981626	Statement	)	3923:74:112056:112056	981127	13	True				
ANR	981627	ExpressionStatement		3923:75:112057:112057	981127	14	True				
ANR	981628	ReturnType	static void		981127	1					
ANR	981629	Identifier	_pointer_table		981127	2					
ANR	981630	ParameterList	"RCore * core , ut64 origin , ut64 offset , const ut8 * buf , int len , int step , int mode"		981127	3					
ANR	981631	Parameter	RCore * core	3865:27:109083:109093	981127	0	True				
ANR	981632	ParameterType	RCore *		981127	0					
ANR	981633	Identifier	core		981127	1					
ANR	981634	Parameter	ut64 origin	3865:40:109096:109106	981127	1	True				
ANR	981635	ParameterType	ut64		981127	0					
ANR	981636	Identifier	origin		981127	1					
ANR	981637	Parameter	ut64 offset	3865:53:109109:109119	981127	2	True				
ANR	981638	ParameterType	ut64		981127	0					
ANR	981639	Identifier	offset		981127	1					
ANR	981640	Parameter	const ut8 * buf	3865:66:109122:109135	981127	3	True				
ANR	981641	ParameterType	const ut8 *		981127	0					
ANR	981642	Identifier	buf		981127	1					
ANR	981643	Parameter	int len	3865:82:109138:109144	981127	4	True				
ANR	981644	ParameterType	int		981127	0					
ANR	981645	Identifier	len		981127	1					
ANR	981646	Parameter	int step	3865:91:109147:109154	981127	5	True				
ANR	981647	ParameterType	int		981127	0					
ANR	981648	Identifier	step		981127	1					
ANR	981649	Parameter	int mode	3865:101:109157:109164	981127	6	True				
ANR	981650	ParameterType	int		981127	0					
ANR	981651	Identifier	mode		981127	1					
ANR	981652	CFGEntryNode	ENTRY		981127		True				
ANR	981653	CFGExitNode	EXIT		981127		True				
ANR	981654	Symbol	r_io_is_valid_offset		981127						
ANR	981655	Symbol	offset		981127						
ANR	981656	Symbol	origin		981127						
ANR	981657	Symbol	delta		981127						
ANR	981658	Symbol	* core		981127						
ANR	981659	Symbol	i		981127						
ANR	981660	Symbol	n		981127						
ANR	981661	Symbol	mode		981127						
ANR	981662	Symbol	core		981127						
ANR	981663	Symbol	buf		981127						
ANR	981664	Symbol	* delta		981127						
ANR	981665	Symbol	len		981127						
ANR	981666	Symbol	core -> io		981127						
ANR	981667	Symbol	step		981127						
ANR	981668	Symbol	addr		981127						
ANR	981669	Function	tmp_get_contsize	3929:0:112211:112373							
ANR	981670	FunctionDef	tmp_get_contsize (RAnalFunction * f)		981669	0					
ANR	981671	CompoundStatement		3929:47:112258:112373	981669	0					
ANR	981672	IdentifierDeclStatement	int size = r_anal_fcn_contsize ( f ) ;	3930:1:112261:112295	981669	0	True				
ANR	981673	IdentifierDecl	size = r_anal_fcn_contsize ( f )		981669	0					
ANR	981674	IdentifierDeclType	int		981669	0					
ANR	981675	Identifier	size		981669	1					
ANR	981676	AssignmentExpression	size = r_anal_fcn_contsize ( f )		981669	2		=			
ANR	981677	Identifier	size		981669	0					
ANR	981678	CallExpression	r_anal_fcn_contsize ( f )		981669	1					
ANR	981679	Callee	r_anal_fcn_contsize		981669	0					
ANR	981680	Identifier	r_anal_fcn_contsize		981669	0					
ANR	981681	ArgumentList	f		981669	1					
ANR	981682	Argument	f		981669	0					
ANR	981683	Identifier	f		981669	0					
ANR	981684	ExpressionStatement	size = ( size > 0 ) ? size : r_anal_fcn_size ( f )	3931:1:112298:112342	981669	1	True				
ANR	981685	AssignmentExpression	size = ( size > 0 ) ? size : r_anal_fcn_size ( f )		981669	0		=			
ANR	981686	Identifier	size		981669	0					
ANR	981687	ConditionalExpression	( size > 0 ) ? size : r_anal_fcn_size ( f )		981669	1					
ANR	981688	Condition	size > 0		981669	0					
ANR	981689	RelationalExpression	size > 0		981669	0		>			
ANR	981690	Identifier	size		981669	0					
ANR	981691	PrimaryExpression	0		981669	1					
ANR	981692	Identifier	size		981669	1					
ANR	981693	CallExpression	r_anal_fcn_size ( f )		981669	2					
ANR	981694	Callee	r_anal_fcn_size		981669	0					
ANR	981695	Identifier	r_anal_fcn_size		981669	0					
ANR	981696	ArgumentList	f		981669	1					
ANR	981697	Argument	f		981669	0					
ANR	981698	Identifier	f		981669	0					
ANR	981699	ReturnStatement	return ( size < 0 ) ? 0 : size ;	3932:1:112345:112371	981669	2	True				
ANR	981700	ConditionalExpression	( size < 0 ) ? 0 : size		981669	0					
ANR	981701	Condition	size < 0		981669	0					
ANR	981702	RelationalExpression	size < 0		981669	0		<			
ANR	981703	Identifier	size		981669	0					
ANR	981704	PrimaryExpression	0		981669	1					
ANR	981705	PrimaryExpression	0		981669	1					
ANR	981706	Identifier	size		981669	2					
ANR	981707	ReturnType	static ut32		981669	1					
ANR	981708	Identifier	tmp_get_contsize		981669	2					
ANR	981709	ParameterList	RAnalFunction * f		981669	3					
ANR	981710	Parameter	RAnalFunction * f	3929:29:112240:112255	981669	0	True				
ANR	981711	ParameterType	RAnalFunction *		981669	0					
ANR	981712	Identifier	f		981669	1					
ANR	981713	CFGEntryNode	ENTRY		981669		True				
ANR	981714	CFGExitNode	EXIT		981669		True				
ANR	981715	Symbol	size		981669						
ANR	981716	Symbol	r_anal_fcn_size		981669						
ANR	981717	Symbol	f		981669						
ANR	981718	Symbol	r_anal_fcn_contsize		981669						
ANR	981719	Function	__printPattern	3935:0:112376:115091							
ANR	981720	FunctionDef	"__printPattern (RCore * core , const char * _input)"		981719	0					
ANR	981721	CompoundStatement		3935:60:112436:115091	981719	0					
ANR	981722	IdentifierDeclStatement	char * input = strdup ( _input ) ;	3936:1:112439:112468	981719	0	True				
ANR	981723	IdentifierDecl	* input = strdup ( _input )		981719	0					
ANR	981724	IdentifierDeclType	char *		981719	0					
ANR	981725	Identifier	input		981719	1					
ANR	981726	AssignmentExpression	* input = strdup ( _input )		981719	2		=			
ANR	981727	Identifier	input		981719	0					
ANR	981728	CallExpression	strdup ( _input )		981719	1					
ANR	981729	Callee	strdup		981719	0					
ANR	981730	Identifier	strdup		981719	0					
ANR	981731	ArgumentList	_input		981719	1					
ANR	981732	Argument	_input		981719	0					
ANR	981733	Identifier	_input		981719	0					
ANR	981734	IdentifierDeclStatement	"const char * arg = r_str_nextword ( input , ' ' ) ;"	3937:1:112471:112516	981719	1	True				
ANR	981735	IdentifierDecl	"* arg = r_str_nextword ( input , ' ' )"		981719	0					
ANR	981736	IdentifierDeclType	const char *		981719	0					
ANR	981737	Identifier	arg		981719	1					
ANR	981738	AssignmentExpression	"* arg = r_str_nextword ( input , ' ' )"		981719	2		=			
ANR	981739	Identifier	arg		981719	0					
ANR	981740	CallExpression	"r_str_nextword ( input , ' ' )"		981719	1					
ANR	981741	Callee	r_str_nextword		981719	0					
ANR	981742	Identifier	r_str_nextword		981719	0					
ANR	981743	ArgumentList	input		981719	1					
ANR	981744	Argument	input		981719	0					
ANR	981745	Identifier	input		981719	0					
ANR	981746	Argument	' '		981719	1					
ANR	981747	PrimaryExpression	' '		981719	0					
ANR	981748	IdentifierDeclStatement	"size_t i , j ;"	3938:1:112519:112530	981719	2	True				
ANR	981749	IdentifierDecl	i		981719	0					
ANR	981750	IdentifierDeclType	size_t		981719	0					
ANR	981751	Identifier	i		981719	1					
ANR	981752	IdentifierDecl	j		981719	1					
ANR	981753	IdentifierDeclType	size_t		981719	0					
ANR	981754	Identifier	j		981719	1					
ANR	981755	IdentifierDeclStatement	"st64 len = arg ? r_num_math ( core -> num , arg ) : core -> blocksize ;"	3939:1:112533:112593	981719	3	True				
ANR	981756	IdentifierDecl	"len = arg ? r_num_math ( core -> num , arg ) : core -> blocksize"		981719	0					
ANR	981757	IdentifierDeclType	st64		981719	0					
ANR	981758	Identifier	len		981719	1					
ANR	981759	AssignmentExpression	"len = arg ? r_num_math ( core -> num , arg ) : core -> blocksize"		981719	2		=			
ANR	981760	Identifier	len		981719	0					
ANR	981761	ConditionalExpression	"arg ? r_num_math ( core -> num , arg ) : core -> blocksize"		981719	1					
ANR	981762	Condition	arg		981719	0					
ANR	981763	Identifier	arg		981719	0					
ANR	981764	CallExpression	"r_num_math ( core -> num , arg )"		981719	1					
ANR	981765	Callee	r_num_math		981719	0					
ANR	981766	Identifier	r_num_math		981719	0					
ANR	981767	ArgumentList	core -> num		981719	1					
ANR	981768	Argument	core -> num		981719	0					
ANR	981769	PtrMemberAccess	core -> num		981719	0					
ANR	981770	Identifier	core		981719	0					
ANR	981771	Identifier	num		981719	1					
ANR	981772	Argument	arg		981719	1					
ANR	981773	Identifier	arg		981719	0					
ANR	981774	PtrMemberAccess	core -> blocksize		981719	2					
ANR	981775	Identifier	core		981719	0					
ANR	981776	Identifier	blocksize		981719	1					
ANR	981777	IfStatement	if ( len < 1 )		981719	4					
ANR	981778	Condition	len < 1	3940:5:112600:112606	981719	0	True				
ANR	981779	RelationalExpression	len < 1		981719	0		<			
ANR	981780	Identifier	len		981719	0					
ANR	981781	PrimaryExpression	1		981719	1					
ANR	981782	CompoundStatement		6:14:172:172	981719	1					
ANR	981783	ExpressionStatement	"eprintf ( ""Invalid length\\n"" )"	3941:2:112613:112641	981719	0	True				
ANR	981784	CallExpression	"eprintf ( ""Invalid length\\n"" )"		981719	0					
ANR	981785	Callee	eprintf		981719	0					
ANR	981786	Identifier	eprintf		981719	0					
ANR	981787	ArgumentList	"""Invalid length\\n"""		981719	1					
ANR	981788	Argument	"""Invalid length\\n"""		981719	0					
ANR	981789	PrimaryExpression	"""Invalid length\\n"""		981719	0					
ANR	981790	ReturnStatement	return ;	3942:2:112645:112651	981719	1	True				
ANR	981791	SwitchStatement	switch ( input [ 0 ] )		981719	5					
ANR	981792	Condition	input [ 0 ]	3944:9:112665:112672	981719	0	True				
ANR	981793	ArrayIndexing	input [ 0 ]		981719	0					
ANR	981794	Identifier	input		981719	0					
ANR	981795	PrimaryExpression	0		981719	1					
ANR	981796	CompoundStatement		10:19:238:238	981719	1					
ANR	981797	Label	case 'd' :	3945:1:112678:112686	981719	0	True				
ANR	981798	CompoundStatement		14:3:289:339	981719	1					
ANR	981799	IdentifierDeclStatement	"ut8 * buf = ( ut8 * ) r_debruijn_pattern ( len , 0 , NULL ) ;"	3948:3:112726:112776	981719	0	True				
ANR	981800	IdentifierDecl	"* buf = ( ut8 * ) r_debruijn_pattern ( len , 0 , NULL )"		981719	0					
ANR	981801	IdentifierDeclType	ut8 *		981719	0					
ANR	981802	Identifier	buf		981719	1					
ANR	981803	AssignmentExpression	"* buf = ( ut8 * ) r_debruijn_pattern ( len , 0 , NULL )"		981719	2		=			
ANR	981804	Identifier	buf		981719	0					
ANR	981805	CastExpression	"( ut8 * ) r_debruijn_pattern ( len , 0 , NULL )"		981719	1					
ANR	981806	CastTarget	ut8 *		981719	0					
ANR	981807	CallExpression	"r_debruijn_pattern ( len , 0 , NULL )"		981719	1					
ANR	981808	Callee	r_debruijn_pattern		981719	0					
ANR	981809	Identifier	r_debruijn_pattern		981719	0					
ANR	981810	ArgumentList	len		981719	1					
ANR	981811	Argument	len		981719	0					
ANR	981812	Identifier	len		981719	0					
ANR	981813	Argument	0		981719	1					
ANR	981814	PrimaryExpression	0		981719	0					
ANR	981815	Argument	NULL		981719	2					
ANR	981816	Identifier	NULL		981719	0					
ANR	981817	ForStatement	for ( i = 0 ; i < len ; i ++ )		981719	1					
ANR	981818	ForInit	i = 0 ;	3949:8:112786:112791	981719	0	True				
ANR	981819	AssignmentExpression	i = 0		981719	0		=			
ANR	981820	Identifier	i		981719	0					
ANR	981821	PrimaryExpression	0		981719	1					
ANR	981822	Condition	i < len	3949:15:112793:112799	981719	1	True				
ANR	981823	RelationalExpression	i < len		981719	0		<			
ANR	981824	Identifier	i		981719	0					
ANR	981825	Identifier	len		981719	1					
ANR	981826	PostIncDecOperationExpression	i ++	3949:24:112802:112804	981719	2	True				
ANR	981827	Identifier	i		981719	0					
ANR	981828	IncDec	++		981719	1					
ANR	981829	CompoundStatement		15:29:370:370	981719	3					
ANR	981830	ExpressionStatement	"r_cons_printf ( ""%02x"" , buf [ i ] )"	3950:4:112813:112843	981719	0	True				
ANR	981831	CallExpression	"r_cons_printf ( ""%02x"" , buf [ i ] )"		981719	0					
ANR	981832	Callee	r_cons_printf		981719	0					
ANR	981833	Identifier	r_cons_printf		981719	0					
ANR	981834	ArgumentList	"""%02x"""		981719	1					
ANR	981835	Argument	"""%02x"""		981719	0					
ANR	981836	PrimaryExpression	"""%02x"""		981719	0					
ANR	981837	Argument	buf [ i ]		981719	1					
ANR	981838	ArrayIndexing	buf [ i ]		981719	0					
ANR	981839	Identifier	buf		981719	0					
ANR	981840	Identifier	i		981719	1					
ANR	981841	ExpressionStatement	r_cons_newline ( )	3952:3:112853:112870	981719	2	True				
ANR	981842	CallExpression	r_cons_newline ( )		981719	0					
ANR	981843	Callee	r_cons_newline		981719	0					
ANR	981844	Identifier	r_cons_newline		981719	0					
ANR	981845	ArgumentList			981719	1					
ANR	981846	ExpressionStatement	free ( buf )	3953:3:112875:112885	981719	3	True				
ANR	981847	CallExpression	free ( buf )		981719	0					
ANR	981848	Callee	free		981719	0					
ANR	981849	Identifier	free		981719	0					
ANR	981850	ArgumentList	buf		981719	1					
ANR	981851	Argument	buf		981719	0					
ANR	981852	Identifier	buf		981719	0					
ANR	981853	BreakStatement	break ;	3955:2:112893:112898	981719	2	True				
ANR	981854	Label	case '1' :	3956:1:112901:112909	981719	3	True				
ANR	981855	CompoundStatement		25:3:521:552	981719	4					
ANR	981856	IdentifierDeclStatement	int min = ( core -> offset & 0xff ) ;	3959:3:112958:112989	981719	0	True				
ANR	981857	IdentifierDecl	min = ( core -> offset & 0xff )		981719	0					
ANR	981858	IdentifierDeclType	int		981719	0					
ANR	981859	Identifier	min		981719	1					
ANR	981860	AssignmentExpression	min = ( core -> offset & 0xff )		981719	2		=			
ANR	981861	Identifier	min		981719	0					
ANR	981862	BitAndExpression	core -> offset & 0xff		981719	1		&			
ANR	981863	PtrMemberAccess	core -> offset		981719	0					
ANR	981864	Identifier	core		981719	0					
ANR	981865	Identifier	offset		981719	1					
ANR	981866	PrimaryExpression	0xff		981719	1					
ANR	981867	ForStatement	for ( i = 0 ; i < len ; i ++ )		981719	1					
ANR	981868	ForInit	i = 0 ;	3960:8:112999:113004	981719	0	True				
ANR	981869	AssignmentExpression	i = 0		981719	0		=			
ANR	981870	Identifier	i		981719	0					
ANR	981871	PrimaryExpression	0		981719	1					
ANR	981872	Condition	i < len	3960:15:113006:113012	981719	1	True				
ANR	981873	RelationalExpression	i < len		981719	0		<			
ANR	981874	Identifier	i		981719	0					
ANR	981875	Identifier	len		981719	1					
ANR	981876	PostIncDecOperationExpression	i ++	3960:24:113015:113017	981719	2	True				
ANR	981877	Identifier	i		981719	0					
ANR	981878	IncDec	++		981719	1					
ANR	981879	CompoundStatement		26:29:583:583	981719	3					
ANR	981880	ExpressionStatement	"r_cons_printf ( ""%02x"" , i + min )"	3961:4:113026:113057	981719	0	True				
ANR	981881	CallExpression	"r_cons_printf ( ""%02x"" , i + min )"		981719	0					
ANR	981882	Callee	r_cons_printf		981719	0					
ANR	981883	Identifier	r_cons_printf		981719	0					
ANR	981884	ArgumentList	"""%02x"""		981719	1					
ANR	981885	Argument	"""%02x"""		981719	0					
ANR	981886	PrimaryExpression	"""%02x"""		981719	0					
ANR	981887	Argument	i + min		981719	1					
ANR	981888	AdditiveExpression	i + min		981719	0		+			
ANR	981889	Identifier	i		981719	0					
ANR	981890	Identifier	min		981719	1					
ANR	981891	ExpressionStatement	r_cons_newline ( )	3963:3:113067:113084	981719	2	True				
ANR	981892	CallExpression	r_cons_newline ( )		981719	0					
ANR	981893	Callee	r_cons_newline		981719	0					
ANR	981894	Identifier	r_cons_newline		981719	0					
ANR	981895	ArgumentList			981719	1					
ANR	981896	BreakStatement	break ;	3965:2:113092:113097	981719	5	True				
ANR	981897	Label	case '2' :	3966:1:113100:113108	981719	6	True				
ANR	981898	CompoundStatement		36:3:758:791	981719	7					
ANR	981899	IdentifierDeclStatement	int min = ( core -> offset & 0xffff ) ;	3970:3:113195:113228	981719	0	True				
ANR	981900	IdentifierDecl	min = ( core -> offset & 0xffff )		981719	0					
ANR	981901	IdentifierDeclType	int		981719	0					
ANR	981902	Identifier	min		981719	1					
ANR	981903	AssignmentExpression	min = ( core -> offset & 0xffff )		981719	2		=			
ANR	981904	Identifier	min		981719	0					
ANR	981905	BitAndExpression	core -> offset & 0xffff		981719	1		&			
ANR	981906	PtrMemberAccess	core -> offset		981719	0					
ANR	981907	Identifier	core		981719	0					
ANR	981908	Identifier	offset		981719	1					
ANR	981909	PrimaryExpression	0xffff		981719	1					
ANR	981910	ForStatement	for ( i = 0 ; i < len ; i ++ )		981719	1					
ANR	981911	ForInit	i = 0 ;	3971:8:113238:113243	981719	0	True				
ANR	981912	AssignmentExpression	i = 0		981719	0		=			
ANR	981913	Identifier	i		981719	0					
ANR	981914	PrimaryExpression	0		981719	1					
ANR	981915	Condition	i < len	3971:15:113245:113251	981719	1	True				
ANR	981916	RelationalExpression	i < len		981719	0		<			
ANR	981917	Identifier	i		981719	0					
ANR	981918	Identifier	len		981719	1					
ANR	981919	PostIncDecOperationExpression	i ++	3971:24:113254:113256	981719	2	True				
ANR	981920	Identifier	i		981719	0					
ANR	981921	IncDec	++		981719	1					
ANR	981922	CompoundStatement		37:29:822:822	981719	3					
ANR	981923	ExpressionStatement	"r_cons_printf ( ""%04x"" , i + min )"	3972:4:113265:113296	981719	0	True				
ANR	981924	CallExpression	"r_cons_printf ( ""%04x"" , i + min )"		981719	0					
ANR	981925	Callee	r_cons_printf		981719	0					
ANR	981926	Identifier	r_cons_printf		981719	0					
ANR	981927	ArgumentList	"""%04x"""		981719	1					
ANR	981928	Argument	"""%04x"""		981719	0					
ANR	981929	PrimaryExpression	"""%04x"""		981719	0					
ANR	981930	Argument	i + min		981719	1					
ANR	981931	AdditiveExpression	i + min		981719	0		+			
ANR	981932	Identifier	i		981719	0					
ANR	981933	Identifier	min		981719	1					
ANR	981934	ExpressionStatement	r_cons_newline ( )	3974:3:113306:113323	981719	2	True				
ANR	981935	CallExpression	r_cons_newline ( )		981719	0					
ANR	981936	Callee	r_cons_newline		981719	0					
ANR	981937	Identifier	r_cons_newline		981719	0					
ANR	981938	ArgumentList			981719	1					
ANR	981939	BreakStatement	break ;	3976:2:113331:113336	981719	8	True				
ANR	981940	Label	case '4' :	3977:1:113339:113347	981719	9	True				
ANR	981941	CompoundStatement		47:3:997:1032	981719	10					
ANR	981942	IdentifierDeclStatement	int min = ( core -> offset & UT32_MAX ) ;	3981:3:113434:113469	981719	0	True				
ANR	981943	IdentifierDecl	min = ( core -> offset & UT32_MAX )		981719	0					
ANR	981944	IdentifierDeclType	int		981719	0					
ANR	981945	Identifier	min		981719	1					
ANR	981946	AssignmentExpression	min = ( core -> offset & UT32_MAX )		981719	2		=			
ANR	981947	Identifier	min		981719	0					
ANR	981948	BitAndExpression	core -> offset & UT32_MAX		981719	1		&			
ANR	981949	PtrMemberAccess	core -> offset		981719	0					
ANR	981950	Identifier	core		981719	0					
ANR	981951	Identifier	offset		981719	1					
ANR	981952	Identifier	UT32_MAX		981719	1					
ANR	981953	ForStatement	for ( i = 0 ; i < len ; i ++ )		981719	1					
ANR	981954	ForInit	i = 0 ;	3982:8:113479:113484	981719	0	True				
ANR	981955	AssignmentExpression	i = 0		981719	0		=			
ANR	981956	Identifier	i		981719	0					
ANR	981957	PrimaryExpression	0		981719	1					
ANR	981958	Condition	i < len	3982:15:113486:113492	981719	1	True				
ANR	981959	RelationalExpression	i < len		981719	0		<			
ANR	981960	Identifier	i		981719	0					
ANR	981961	Identifier	len		981719	1					
ANR	981962	PostIncDecOperationExpression	i ++	3982:24:113495:113497	981719	2	True				
ANR	981963	Identifier	i		981719	0					
ANR	981964	IncDec	++		981719	1					
ANR	981965	CompoundStatement		48:29:1063:1063	981719	3					
ANR	981966	ExpressionStatement	"r_cons_printf ( ""%08x"" , i + min )"	3983:4:113506:113537	981719	0	True				
ANR	981967	CallExpression	"r_cons_printf ( ""%08x"" , i + min )"		981719	0					
ANR	981968	Callee	r_cons_printf		981719	0					
ANR	981969	Identifier	r_cons_printf		981719	0					
ANR	981970	ArgumentList	"""%08x"""		981719	1					
ANR	981971	Argument	"""%08x"""		981719	0					
ANR	981972	PrimaryExpression	"""%08x"""		981719	0					
ANR	981973	Argument	i + min		981719	1					
ANR	981974	AdditiveExpression	i + min		981719	0		+			
ANR	981975	Identifier	i		981719	0					
ANR	981976	Identifier	min		981719	1					
ANR	981977	ExpressionStatement	r_cons_newline ( )	3985:3:113547:113564	981719	2	True				
ANR	981978	CallExpression	r_cons_newline ( )		981719	0					
ANR	981979	Callee	r_cons_newline		981719	0					
ANR	981980	Identifier	r_cons_newline		981719	0					
ANR	981981	ArgumentList			981719	1					
ANR	981982	BreakStatement	break ;	3987:2:113572:113577	981719	11	True				
ANR	981983	Label	case '8' :	3988:1:113580:113588	981719	12	True				
ANR	981984	CompoundStatement		58:3:1238:1263	981719	13					
ANR	981985	IdentifierDeclStatement	ut64 min = ( core -> offset ) ;	3992:3:113675:113700	981719	0	True				
ANR	981986	IdentifierDecl	min = ( core -> offset )		981719	0					
ANR	981987	IdentifierDeclType	ut64		981719	0					
ANR	981988	Identifier	min		981719	1					
ANR	981989	AssignmentExpression	min = ( core -> offset )		981719	2		=			
ANR	981990	Identifier	min		981719	0					
ANR	981991	PtrMemberAccess	core -> offset		981719	1					
ANR	981992	Identifier	core		981719	0					
ANR	981993	Identifier	offset		981719	1					
ANR	981994	ForStatement	for ( i = 0 ; i < len ; i ++ )		981719	1					
ANR	981995	ForInit	i = 0 ;	3993:8:113710:113715	981719	0	True				
ANR	981996	AssignmentExpression	i = 0		981719	0		=			
ANR	981997	Identifier	i		981719	0					
ANR	981998	PrimaryExpression	0		981719	1					
ANR	981999	Condition	i < len	3993:15:113717:113723	981719	1	True				
ANR	982000	RelationalExpression	i < len		981719	0		<			
ANR	982001	Identifier	i		981719	0					
ANR	982002	Identifier	len		981719	1					
ANR	982003	PostIncDecOperationExpression	i ++	3993:24:113726:113728	981719	2	True				
ANR	982004	Identifier	i		981719	0					
ANR	982005	IncDec	++		981719	1					
ANR	982006	CompoundStatement		59:29:1294:1294	981719	3					
ANR	982007	Statement	r_cons_printf	3994:4:113737:113749	981719	0	True				
ANR	982008	Statement	(	3994:18:113751:113751	981719	1	True				
ANR	982009	Statement	"""%016"""	3994:19:113752:113757	981719	2	True				
ANR	982010	Statement	PFMT64x	3994:25:113758:113764	981719	3	True				
ANR	982011	Statement	","	3994:32:113765:113765	981719	4	True				
ANR	982012	Statement	i	3994:34:113767:113767	981719	5	True				
ANR	982013	Statement	+	3994:36:113769:113769	981719	6	True				
ANR	982014	Statement	min	3994:38:113771:113773	981719	7	True				
ANR	982015	Statement	)	3994:41:113774:113774	981719	8	True				
ANR	982016	ExpressionStatement		3994:42:113775:113775	981719	9	True				
ANR	982017	ExpressionStatement	r_cons_newline ( )	3996:3:113785:113802	981719	2	True				
ANR	982018	CallExpression	r_cons_newline ( )		981719	0					
ANR	982019	Callee	r_cons_newline		981719	0					
ANR	982020	Identifier	r_cons_newline		981719	0					
ANR	982021	ArgumentList			981719	1					
ANR	982022	BreakStatement	break ;	3998:2:113810:113815	981719	14	True				
ANR	982023	Label	case 'f' :	3999:1:113818:113826	981719	15	True				
ANR	982024	CompoundStatement		68:3:1423:1473	981719	16					
ANR	982025	IdentifierDeclStatement	"ut8 * buf = ( ut8 * ) r_debruijn_pattern ( len , 0 , NULL ) ;"	4002:3:113860:113910	981719	0	True				
ANR	982026	IdentifierDecl	"* buf = ( ut8 * ) r_debruijn_pattern ( len , 0 , NULL )"		981719	0					
ANR	982027	IdentifierDeclType	ut8 *		981719	0					
ANR	982028	Identifier	buf		981719	1					
ANR	982029	AssignmentExpression	"* buf = ( ut8 * ) r_debruijn_pattern ( len , 0 , NULL )"		981719	2		=			
ANR	982030	Identifier	buf		981719	0					
ANR	982031	CastExpression	"( ut8 * ) r_debruijn_pattern ( len , 0 , NULL )"		981719	1					
ANR	982032	CastTarget	ut8 *		981719	0					
ANR	982033	CallExpression	"r_debruijn_pattern ( len , 0 , NULL )"		981719	1					
ANR	982034	Callee	r_debruijn_pattern		981719	0					
ANR	982035	Identifier	r_debruijn_pattern		981719	0					
ANR	982036	ArgumentList	len		981719	1					
ANR	982037	Argument	len		981719	0					
ANR	982038	Identifier	len		981719	0					
ANR	982039	Argument	0		981719	1					
ANR	982040	PrimaryExpression	0		981719	0					
ANR	982041	Argument	NULL		981719	2					
ANR	982042	Identifier	NULL		981719	0					
ANR	982043	ForStatement	for ( i = 0 ; i < len ; i ++ )		981719	1					
ANR	982044	ForInit	i = 0 ;	4003:8:113920:113925	981719	0	True				
ANR	982045	AssignmentExpression	i = 0		981719	0		=			
ANR	982046	Identifier	i		981719	0					
ANR	982047	PrimaryExpression	0		981719	1					
ANR	982048	Condition	i < len	4003:15:113927:113933	981719	1	True				
ANR	982049	RelationalExpression	i < len		981719	0		<			
ANR	982050	Identifier	i		981719	0					
ANR	982051	Identifier	len		981719	1					
ANR	982052	PostIncDecOperationExpression	i ++	4003:24:113936:113938	981719	2	True				
ANR	982053	Identifier	i		981719	0					
ANR	982054	IncDec	++		981719	1					
ANR	982055	CompoundStatement		69:29:1504:1504	981719	3					
ANR	982056	ExpressionStatement	"r_cons_printf ( ""%02x"" , 0xff )"	4004:4:113947:113975	981719	0	True				
ANR	982057	CallExpression	"r_cons_printf ( ""%02x"" , 0xff )"		981719	0					
ANR	982058	Callee	r_cons_printf		981719	0					
ANR	982059	Identifier	r_cons_printf		981719	0					
ANR	982060	ArgumentList	"""%02x"""		981719	1					
ANR	982061	Argument	"""%02x"""		981719	0					
ANR	982062	PrimaryExpression	"""%02x"""		981719	0					
ANR	982063	Argument	0xff		981719	1					
ANR	982064	PrimaryExpression	0xff		981719	0					
ANR	982065	ExpressionStatement	r_cons_newline ( )	4006:3:113985:114002	981719	2	True				
ANR	982066	CallExpression	r_cons_newline ( )		981719	0					
ANR	982067	Callee	r_cons_newline		981719	0					
ANR	982068	Identifier	r_cons_newline		981719	0					
ANR	982069	ArgumentList			981719	1					
ANR	982070	ExpressionStatement	free ( buf )	4007:3:114007:114017	981719	3	True				
ANR	982071	CallExpression	free ( buf )		981719	0					
ANR	982072	Callee	free		981719	0					
ANR	982073	Identifier	free		981719	0					
ANR	982074	ArgumentList	buf		981719	1					
ANR	982075	Argument	buf		981719	0					
ANR	982076	Identifier	buf		981719	0					
ANR	982077	BreakStatement	break ;	4009:2:114025:114030	981719	17	True				
ANR	982078	Label	case '0' :	4010:1:114033:114041	981719	18	True				
ANR	982079	CompoundStatement		79:3:1638:1688	981719	19					
ANR	982080	IdentifierDeclStatement	"ut8 * buf = ( ut8 * ) r_debruijn_pattern ( len , 0 , NULL ) ;"	4013:3:114075:114125	981719	0	True				
ANR	982081	IdentifierDecl	"* buf = ( ut8 * ) r_debruijn_pattern ( len , 0 , NULL )"		981719	0					
ANR	982082	IdentifierDeclType	ut8 *		981719	0					
ANR	982083	Identifier	buf		981719	1					
ANR	982084	AssignmentExpression	"* buf = ( ut8 * ) r_debruijn_pattern ( len , 0 , NULL )"		981719	2		=			
ANR	982085	Identifier	buf		981719	0					
ANR	982086	CastExpression	"( ut8 * ) r_debruijn_pattern ( len , 0 , NULL )"		981719	1					
ANR	982087	CastTarget	ut8 *		981719	0					
ANR	982088	CallExpression	"r_debruijn_pattern ( len , 0 , NULL )"		981719	1					
ANR	982089	Callee	r_debruijn_pattern		981719	0					
ANR	982090	Identifier	r_debruijn_pattern		981719	0					
ANR	982091	ArgumentList	len		981719	1					
ANR	982092	Argument	len		981719	0					
ANR	982093	Identifier	len		981719	0					
ANR	982094	Argument	0		981719	1					
ANR	982095	PrimaryExpression	0		981719	0					
ANR	982096	Argument	NULL		981719	2					
ANR	982097	Identifier	NULL		981719	0					
ANR	982098	ForStatement	for ( i = 0 ; i < len ; i ++ )		981719	1					
ANR	982099	ForInit	i = 0 ;	4014:8:114135:114140	981719	0	True				
ANR	982100	AssignmentExpression	i = 0		981719	0		=			
ANR	982101	Identifier	i		981719	0					
ANR	982102	PrimaryExpression	0		981719	1					
ANR	982103	Condition	i < len	4014:15:114142:114148	981719	1	True				
ANR	982104	RelationalExpression	i < len		981719	0		<			
ANR	982105	Identifier	i		981719	0					
ANR	982106	Identifier	len		981719	1					
ANR	982107	PostIncDecOperationExpression	i ++	4014:24:114151:114153	981719	2	True				
ANR	982108	Identifier	i		981719	0					
ANR	982109	IncDec	++		981719	1					
ANR	982110	CompoundStatement		80:29:1719:1719	981719	3					
ANR	982111	ExpressionStatement	"r_cons_printf ( ""%02x"" , 0 )"	4015:4:114162:114187	981719	0	True				
ANR	982112	CallExpression	"r_cons_printf ( ""%02x"" , 0 )"		981719	0					
ANR	982113	Callee	r_cons_printf		981719	0					
ANR	982114	Identifier	r_cons_printf		981719	0					
ANR	982115	ArgumentList	"""%02x"""		981719	1					
ANR	982116	Argument	"""%02x"""		981719	0					
ANR	982117	PrimaryExpression	"""%02x"""		981719	0					
ANR	982118	Argument	0		981719	1					
ANR	982119	PrimaryExpression	0		981719	0					
ANR	982120	ExpressionStatement	r_cons_newline ( )	4017:3:114197:114214	981719	2	True				
ANR	982121	CallExpression	r_cons_newline ( )		981719	0					
ANR	982122	Callee	r_cons_newline		981719	0					
ANR	982123	Identifier	r_cons_newline		981719	0					
ANR	982124	ArgumentList			981719	1					
ANR	982125	ExpressionStatement	free ( buf )	4018:3:114219:114229	981719	3	True				
ANR	982126	CallExpression	free ( buf )		981719	0					
ANR	982127	Callee	free		981719	0					
ANR	982128	Identifier	free		981719	0					
ANR	982129	ArgumentList	buf		981719	1					
ANR	982130	Argument	buf		981719	0					
ANR	982131	Identifier	buf		981719	0					
ANR	982132	BreakStatement	break ;	4020:2:114237:114242	981719	20	True				
ANR	982133	Label	case 'a' :	4021:1:114245:114253	981719	21	True				
ANR	982134	CompoundStatement		92:3:1891:1916	981719	22					
ANR	982135	ExpressionStatement	i = core -> offset	4024:3:114272:114288	981719	0	True				
ANR	982136	AssignmentExpression	i = core -> offset		981719	0		=			
ANR	982137	Identifier	i		981719	0					
ANR	982138	PtrMemberAccess	core -> offset		981719	1					
ANR	982139	Identifier	core		981719	0					
ANR	982140	Identifier	offset		981719	1					
ANR	982141	IdentifierDeclStatement	size_t bs = 4 ;	4025:3:114293:114306	981719	1	True				
ANR	982142	IdentifierDecl	bs = 4		981719	0					
ANR	982143	IdentifierDeclType	size_t		981719	0					
ANR	982144	Identifier	bs		981719	1					
ANR	982145	AssignmentExpression	bs = 4		981719	2		=			
ANR	982146	Identifier	bs		981719	0					
ANR	982147	PrimaryExpression	4		981719	1					
ANR	982148	IdentifierDeclStatement	"ut8 * buf = calloc ( bs , 1 ) ;"	4026:3:114328:114353	981719	2	True				
ANR	982149	IdentifierDecl	"* buf = calloc ( bs , 1 )"		981719	0					
ANR	982150	IdentifierDeclType	ut8 *		981719	0					
ANR	982151	Identifier	buf		981719	1					
ANR	982152	AssignmentExpression	"* buf = calloc ( bs , 1 )"		981719	2		=			
ANR	982153	Identifier	buf		981719	0					
ANR	982154	CallExpression	"calloc ( bs , 1 )"		981719	1					
ANR	982155	Callee	calloc		981719	0					
ANR	982156	Identifier	calloc		981719	0					
ANR	982157	ArgumentList	bs		981719	1					
ANR	982158	Argument	bs		981719	0					
ANR	982159	Identifier	bs		981719	0					
ANR	982160	Argument	1		981719	1					
ANR	982161	PrimaryExpression	1		981719	0					
ANR	982162	ForStatement	for ( i = 0 ; i < len ; i ++ )		981719	3					
ANR	982163	ForInit	i = 0 ;	4028:8:114414:114419	981719	0	True				
ANR	982164	AssignmentExpression	i = 0		981719	0		=			
ANR	982165	Identifier	i		981719	0					
ANR	982166	PrimaryExpression	0		981719	1					
ANR	982167	Condition	i < len	4028:15:114421:114427	981719	1	True				
ANR	982168	RelationalExpression	i < len		981719	0		<			
ANR	982169	Identifier	i		981719	0					
ANR	982170	Identifier	len		981719	1					
ANR	982171	PostIncDecOperationExpression	i ++	4028:24:114430:114432	981719	2	True				
ANR	982172	Identifier	i		981719	0					
ANR	982173	IncDec	++		981719	1					
ANR	982174	CompoundStatement		94:29:1998:1998	981719	3					
ANR	982175	ExpressionStatement	"incAlphaBuffer ( buf , bs )"	4029:4:114441:114465	981719	0	True				
ANR	982176	CallExpression	"incAlphaBuffer ( buf , bs )"		981719	0					
ANR	982177	Callee	incAlphaBuffer		981719	0					
ANR	982178	Identifier	incAlphaBuffer		981719	0					
ANR	982179	ArgumentList	buf		981719	1					
ANR	982180	Argument	buf		981719	0					
ANR	982181	Identifier	buf		981719	0					
ANR	982182	Argument	bs		981719	1					
ANR	982183	Identifier	bs		981719	0					
ANR	982184	ForStatement	for ( j = 0 ; j < bs ; j ++ )		981719	1					
ANR	982185	ForInit	j = 0 ;	4030:9:114476:114481	981719	0	True				
ANR	982186	AssignmentExpression	j = 0		981719	0		=			
ANR	982187	Identifier	j		981719	0					
ANR	982188	PrimaryExpression	0		981719	1					
ANR	982189	Condition	j < bs	4030:16:114483:114488	981719	1	True				
ANR	982190	RelationalExpression	j < bs		981719	0		<			
ANR	982191	Identifier	j		981719	0					
ANR	982192	Identifier	bs		981719	1					
ANR	982193	PostIncDecOperationExpression	j ++	4030:24:114491:114493	981719	2	True				
ANR	982194	Identifier	j		981719	0					
ANR	982195	IncDec	++		981719	1					
ANR	982196	CompoundStatement		96:29:2059:2059	981719	3					
ANR	982197	ExpressionStatement	"r_cons_printf ( ""%c"" , buf [ j ] ? buf [ j ] : 'A' )"	4031:5:114503:114542	981719	0	True				
ANR	982198	CallExpression	"r_cons_printf ( ""%c"" , buf [ j ] ? buf [ j ] : 'A' )"		981719	0					
ANR	982199	Callee	r_cons_printf		981719	0					
ANR	982200	Identifier	r_cons_printf		981719	0					
ANR	982201	ArgumentList	"""%c"""		981719	1					
ANR	982202	Argument	"""%c"""		981719	0					
ANR	982203	PrimaryExpression	"""%c"""		981719	0					
ANR	982204	Argument	buf [ j ] ? buf [ j ] : 'A'		981719	1					
ANR	982205	ConditionalExpression	buf [ j ] ? buf [ j ] : 'A'		981719	0					
ANR	982206	Condition	buf [ j ]		981719	0					
ANR	982207	ArrayIndexing	buf [ j ]		981719	0					
ANR	982208	Identifier	buf		981719	0					
ANR	982209	Identifier	j		981719	1					
ANR	982210	ArrayIndexing	buf [ j ]		981719	1					
ANR	982211	Identifier	buf		981719	0					
ANR	982212	Identifier	j		981719	1					
ANR	982213	PrimaryExpression	'A'		981719	2					
ANR	982214	ExpressionStatement	"r_cons_printf ( "" "" )"	4033:4:114554:114573	981719	2	True				
ANR	982215	CallExpression	"r_cons_printf ( "" "" )"		981719	0					
ANR	982216	Callee	r_cons_printf		981719	0					
ANR	982217	Identifier	r_cons_printf		981719	0					
ANR	982218	ArgumentList	""" """		981719	1					
ANR	982219	Argument	""" """		981719	0					
ANR	982220	PrimaryExpression	""" """		981719	0					
ANR	982221	ExpressionStatement	r_cons_newline ( )	4035:3:114583:114600	981719	4	True				
ANR	982222	CallExpression	r_cons_newline ( )		981719	0					
ANR	982223	Callee	r_cons_newline		981719	0					
ANR	982224	Identifier	r_cons_newline		981719	0					
ANR	982225	ArgumentList			981719	1					
ANR	982226	ExpressionStatement	free ( buf )	4036:3:114605:114615	981719	5	True				
ANR	982227	CallExpression	free ( buf )		981719	0					
ANR	982228	Callee	free		981719	0					
ANR	982229	Identifier	free		981719	0					
ANR	982230	ArgumentList	buf		981719	1					
ANR	982231	Argument	buf		981719	0					
ANR	982232	Identifier	buf		981719	0					
ANR	982233	BreakStatement	break ;	4038:2:114623:114628	981719	23	True				
ANR	982234	Label	case 'n' :	4039:1:114631:114639	981719	24	True				
ANR	982235	CompoundStatement		109:3:2276:2301	981719	25					
ANR	982236	ExpressionStatement	i = core -> offset	4041:3:114657:114673	981719	0	True				
ANR	982237	AssignmentExpression	i = core -> offset		981719	0		=			
ANR	982238	Identifier	i		981719	0					
ANR	982239	PtrMemberAccess	core -> offset		981719	1					
ANR	982240	Identifier	core		981719	0					
ANR	982241	Identifier	offset		981719	1					
ANR	982242	IdentifierDeclStatement	size_t bs = 4 ;	4042:3:114678:114691	981719	1	True				
ANR	982243	IdentifierDecl	bs = 4		981719	0					
ANR	982244	IdentifierDeclType	size_t		981719	0					
ANR	982245	Identifier	bs		981719	1					
ANR	982246	AssignmentExpression	bs = 4		981719	2		=			
ANR	982247	Identifier	bs		981719	0					
ANR	982248	PrimaryExpression	4		981719	1					
ANR	982249	IdentifierDeclStatement	"ut8 * buf = calloc ( bs , 1 ) ;"	4043:3:114713:114738	981719	2	True				
ANR	982250	IdentifierDecl	"* buf = calloc ( bs , 1 )"		981719	0					
ANR	982251	IdentifierDeclType	ut8 *		981719	0					
ANR	982252	Identifier	buf		981719	1					
ANR	982253	AssignmentExpression	"* buf = calloc ( bs , 1 )"		981719	2		=			
ANR	982254	Identifier	buf		981719	0					
ANR	982255	CallExpression	"calloc ( bs , 1 )"		981719	1					
ANR	982256	Callee	calloc		981719	0					
ANR	982257	Identifier	calloc		981719	0					
ANR	982258	ArgumentList	bs		981719	1					
ANR	982259	Argument	bs		981719	0					
ANR	982260	Identifier	bs		981719	0					
ANR	982261	Argument	1		981719	1					
ANR	982262	PrimaryExpression	1		981719	0					
ANR	982263	ForStatement	for ( i = 0 ; i < len ; i ++ )		981719	3					
ANR	982264	ForInit	i = 0 ;	4045:8:114799:114804	981719	0	True				
ANR	982265	AssignmentExpression	i = 0		981719	0		=			
ANR	982266	Identifier	i		981719	0					
ANR	982267	PrimaryExpression	0		981719	1					
ANR	982268	Condition	i < len	4045:15:114806:114812	981719	1	True				
ANR	982269	RelationalExpression	i < len		981719	0		<			
ANR	982270	Identifier	i		981719	0					
ANR	982271	Identifier	len		981719	1					
ANR	982272	PostIncDecOperationExpression	i ++	4045:24:114815:114817	981719	2	True				
ANR	982273	Identifier	i		981719	0					
ANR	982274	IncDec	++		981719	1					
ANR	982275	CompoundStatement		111:29:2383:2383	981719	3					
ANR	982276	ExpressionStatement	"incDigitBuffer ( buf , bs )"	4046:4:114826:114850	981719	0	True				
ANR	982277	CallExpression	"incDigitBuffer ( buf , bs )"		981719	0					
ANR	982278	Callee	incDigitBuffer		981719	0					
ANR	982279	Identifier	incDigitBuffer		981719	0					
ANR	982280	ArgumentList	buf		981719	1					
ANR	982281	Argument	buf		981719	0					
ANR	982282	Identifier	buf		981719	0					
ANR	982283	Argument	bs		981719	1					
ANR	982284	Identifier	bs		981719	0					
ANR	982285	ForStatement	for ( j = 0 ; j < bs ; j ++ )		981719	1					
ANR	982286	ForInit	j = 0 ;	4047:9:114861:114866	981719	0	True				
ANR	982287	AssignmentExpression	j = 0		981719	0		=			
ANR	982288	Identifier	j		981719	0					
ANR	982289	PrimaryExpression	0		981719	1					
ANR	982290	Condition	j < bs	4047:16:114868:114873	981719	1	True				
ANR	982291	RelationalExpression	j < bs		981719	0		<			
ANR	982292	Identifier	j		981719	0					
ANR	982293	Identifier	bs		981719	1					
ANR	982294	PostIncDecOperationExpression	j ++	4047:24:114876:114878	981719	2	True				
ANR	982295	Identifier	j		981719	0					
ANR	982296	IncDec	++		981719	1					
ANR	982297	CompoundStatement		113:29:2444:2444	981719	3					
ANR	982298	ExpressionStatement	"r_cons_printf ( ""%c"" , buf [ j ] ? buf [ j ] : '0' )"	4048:5:114888:114927	981719	0	True				
ANR	982299	CallExpression	"r_cons_printf ( ""%c"" , buf [ j ] ? buf [ j ] : '0' )"		981719	0					
ANR	982300	Callee	r_cons_printf		981719	0					
ANR	982301	Identifier	r_cons_printf		981719	0					
ANR	982302	ArgumentList	"""%c"""		981719	1					
ANR	982303	Argument	"""%c"""		981719	0					
ANR	982304	PrimaryExpression	"""%c"""		981719	0					
ANR	982305	Argument	buf [ j ] ? buf [ j ] : '0'		981719	1					
ANR	982306	ConditionalExpression	buf [ j ] ? buf [ j ] : '0'		981719	0					
ANR	982307	Condition	buf [ j ]		981719	0					
ANR	982308	ArrayIndexing	buf [ j ]		981719	0					
ANR	982309	Identifier	buf		981719	0					
ANR	982310	Identifier	j		981719	1					
ANR	982311	ArrayIndexing	buf [ j ]		981719	1					
ANR	982312	Identifier	buf		981719	0					
ANR	982313	Identifier	j		981719	1					
ANR	982314	PrimaryExpression	'0'		981719	2					
ANR	982315	ExpressionStatement	"r_cons_printf ( "" "" )"	4050:4:114939:114958	981719	2	True				
ANR	982316	CallExpression	"r_cons_printf ( "" "" )"		981719	0					
ANR	982317	Callee	r_cons_printf		981719	0					
ANR	982318	Identifier	r_cons_printf		981719	0					
ANR	982319	ArgumentList	""" """		981719	1					
ANR	982320	Argument	""" """		981719	0					
ANR	982321	PrimaryExpression	""" """		981719	0					
ANR	982322	ExpressionStatement	r_cons_newline ( )	4052:3:114968:114985	981719	4	True				
ANR	982323	CallExpression	r_cons_newline ( )		981719	0					
ANR	982324	Callee	r_cons_newline		981719	0					
ANR	982325	Identifier	r_cons_newline		981719	0					
ANR	982326	ArgumentList			981719	1					
ANR	982327	ExpressionStatement	free ( buf )	4053:3:114990:115000	981719	5	True				
ANR	982328	CallExpression	free ( buf )		981719	0					
ANR	982329	Callee	free		981719	0					
ANR	982330	Identifier	free		981719	0					
ANR	982331	ArgumentList	buf		981719	1					
ANR	982332	Argument	buf		981719	0					
ANR	982333	Identifier	buf		981719	0					
ANR	982334	BreakStatement	break ;	4055:2:115008:115013	981719	26	True				
ANR	982335	Label	default :	4056:1:115016:115023	981719	27	True				
ANR	982336	Identifier	default		981719	0					
ANR	982337	ExpressionStatement	"r_core_cmd_help ( core , help_msg_pp )"	4057:2:115027:115062	981719	28	True				
ANR	982338	CallExpression	"r_core_cmd_help ( core , help_msg_pp )"		981719	0					
ANR	982339	Callee	r_core_cmd_help		981719	0					
ANR	982340	Identifier	r_core_cmd_help		981719	0					
ANR	982341	ArgumentList	core		981719	1					
ANR	982342	Argument	core		981719	0					
ANR	982343	Identifier	core		981719	0					
ANR	982344	Argument	help_msg_pp		981719	1					
ANR	982345	Identifier	help_msg_pp		981719	0					
ANR	982346	BreakStatement	break ;	4058:2:115066:115071	981719	29	True				
ANR	982347	ExpressionStatement	free ( input )	4060:1:115077:115089	981719	6	True				
ANR	982348	CallExpression	free ( input )		981719	0					
ANR	982349	Callee	free		981719	0					
ANR	982350	Identifier	free		981719	0					
ANR	982351	ArgumentList	input		981719	1					
ANR	982352	Argument	input		981719	0					
ANR	982353	Identifier	input		981719	0					
ANR	982354	ReturnType	static void		981719	1					
ANR	982355	Identifier	__printPattern		981719	2					
ANR	982356	ParameterList	"RCore * core , const char * _input"		981719	3					
ANR	982357	Parameter	RCore * core	3935:27:112403:112413	981719	0	True				
ANR	982358	ParameterType	RCore *		981719	0					
ANR	982359	Identifier	core		981719	1					
ANR	982360	Parameter	const char * _input	3935:40:112416:112433	981719	1	True				
ANR	982361	ParameterType	const char *		981719	0					
ANR	982362	Identifier	_input		981719	1					
ANR	982363	CFGEntryNode	ENTRY		981719		True				
ANR	982364	CFGExitNode	EXIT		981719		True				
ANR	982365	Symbol	UT32_MAX		981719						
ANR	982366	Symbol	help_msg_pp		981719						
ANR	982367	Symbol	* core		981719						
ANR	982368	Symbol	* input		981719						
ANR	982369	Symbol	core -> offset		981719						
ANR	982370	Symbol	calloc		981719						
ANR	982371	Symbol	r_num_math		981719						
ANR	982372	Symbol	bs		981719						
ANR	982373	Symbol	min		981719						
ANR	982374	Symbol	len		981719						
ANR	982375	Symbol	arg		981719						
ANR	982376	Symbol	r_str_nextword		981719						
ANR	982377	Symbol	_input		981719						
ANR	982378	Symbol	core -> num		981719						
ANR	982379	Symbol	core -> blocksize		981719						
ANR	982380	Symbol	* buf		981719						
ANR	982381	Symbol	NULL		981719						
ANR	982382	Symbol	r_debruijn_pattern		981719						
ANR	982383	Symbol	i		981719						
ANR	982384	Symbol	j		981719						
ANR	982385	Symbol	core		981719						
ANR	982386	Symbol	input		981719						
ANR	982387	Symbol	buf		981719						
ANR	982388	Symbol	* i		981719						
ANR	982389	Symbol	* j		981719						
ANR	982390	Symbol	strdup		981719						
ANR	982391	Function	pr_bb	4063:0:115094:117300							
ANR	982392	FunctionDef	"pr_bb (RCore * core , RAnalFunction * fcn , RAnalBlock * b , bool emu , ut64 saved_gp , ut8 * saved_arena , char p_type , bool fromHere)"		982391	0					
ANR	982393	CompoundStatement		4063:137:115231:117300	982391	0					
ANR	982394	IdentifierDeclStatement	"bool show_flags = r_config_get_i ( core -> config , ""asm.flags"" ) ;"	4064:1:115234:115294	982391	0	True				
ANR	982395	IdentifierDecl	"show_flags = r_config_get_i ( core -> config , ""asm.flags"" )"		982391	0					
ANR	982396	IdentifierDeclType	bool		982391	0					
ANR	982397	Identifier	show_flags		982391	1					
ANR	982398	AssignmentExpression	"show_flags = r_config_get_i ( core -> config , ""asm.flags"" )"		982391	2		=			
ANR	982399	Identifier	show_flags		982391	0					
ANR	982400	CallExpression	"r_config_get_i ( core -> config , ""asm.flags"" )"		982391	1					
ANR	982401	Callee	r_config_get_i		982391	0					
ANR	982402	Identifier	r_config_get_i		982391	0					
ANR	982403	ArgumentList	core -> config		982391	1					
ANR	982404	Argument	core -> config		982391	0					
ANR	982405	PtrMemberAccess	core -> config		982391	0					
ANR	982406	Identifier	core		982391	0					
ANR	982407	Identifier	config		982391	1					
ANR	982408	Argument	"""asm.flags"""		982391	1					
ANR	982409	PrimaryExpression	"""asm.flags"""		982391	0					
ANR	982410	IdentifierDeclStatement	"const char * orig_bb_middle = r_config_get ( core -> config , ""asm.bb.middle"" ) ;"	4065:1:115297:115370	982391	1	True				
ANR	982411	IdentifierDecl	"* orig_bb_middle = r_config_get ( core -> config , ""asm.bb.middle"" )"		982391	0					
ANR	982412	IdentifierDeclType	const char *		982391	0					
ANR	982413	Identifier	orig_bb_middle		982391	1					
ANR	982414	AssignmentExpression	"* orig_bb_middle = r_config_get ( core -> config , ""asm.bb.middle"" )"		982391	2		=			
ANR	982415	Identifier	orig_bb_middle		982391	0					
ANR	982416	CallExpression	"r_config_get ( core -> config , ""asm.bb.middle"" )"		982391	1					
ANR	982417	Callee	r_config_get		982391	0					
ANR	982418	Identifier	r_config_get		982391	0					
ANR	982419	ArgumentList	core -> config		982391	1					
ANR	982420	Argument	core -> config		982391	0					
ANR	982421	PtrMemberAccess	core -> config		982391	0					
ANR	982422	Identifier	core		982391	0					
ANR	982423	Identifier	config		982391	1					
ANR	982424	Argument	"""asm.bb.middle"""		982391	1					
ANR	982425	PrimaryExpression	"""asm.bb.middle"""		982391	0					
ANR	982426	ExpressionStatement	core -> anal -> gp = saved_gp	4066:1:115373:115398	982391	2	True				
ANR	982427	AssignmentExpression	core -> anal -> gp = saved_gp		982391	0		=			
ANR	982428	PtrMemberAccess	core -> anal -> gp		982391	0					
ANR	982429	PtrMemberAccess	core -> anal		982391	0					
ANR	982430	Identifier	core		982391	0					
ANR	982431	Identifier	anal		982391	1					
ANR	982432	Identifier	gp		982391	1					
ANR	982433	Identifier	saved_gp		982391	1					
ANR	982434	IfStatement	if ( fromHere )		982391	3					
ANR	982435	Condition	fromHere	4067:5:115405:115412	982391	0	True				
ANR	982436	Identifier	fromHere		982391	0					
ANR	982437	CompoundStatement		5:15:183:183	982391	1					
ANR	982438	IfStatement	if ( b -> addr < core -> offset )		982391	0					
ANR	982439	Condition	b -> addr < core -> offset	4068:6:115423:115444	982391	0	True				
ANR	982440	RelationalExpression	b -> addr < core -> offset		982391	0		<			
ANR	982441	PtrMemberAccess	b -> addr		982391	0					
ANR	982442	Identifier	b		982391	0					
ANR	982443	Identifier	addr		982391	1					
ANR	982444	PtrMemberAccess	core -> offset		982391	1					
ANR	982445	Identifier	core		982391	0					
ANR	982446	Identifier	offset		982391	1					
ANR	982447	CompoundStatement		6:30:215:215	982391	1					
ANR	982448	ExpressionStatement	core -> cons -> null = true	4069:3:115452:115475	982391	0	True				
ANR	982449	AssignmentExpression	core -> cons -> null = true		982391	0		=			
ANR	982450	PtrMemberAccess	core -> cons -> null		982391	0					
ANR	982451	PtrMemberAccess	core -> cons		982391	0					
ANR	982452	Identifier	core		982391	0					
ANR	982453	Identifier	cons		982391	1					
ANR	982454	Identifier	null		982391	1					
ANR	982455	Identifier	true		982391	1					
ANR	982456	ElseStatement	else		982391	0					
ANR	982457	CompoundStatement		8:9:254:254	982391	0					
ANR	982458	ExpressionStatement	core -> cons -> null = false	4071:3:115491:115515	982391	0	True				
ANR	982459	AssignmentExpression	core -> cons -> null = false		982391	0		=			
ANR	982460	PtrMemberAccess	core -> cons -> null		982391	0					
ANR	982461	PtrMemberAccess	core -> cons		982391	0					
ANR	982462	Identifier	core		982391	0					
ANR	982463	Identifier	cons		982391	1					
ANR	982464	Identifier	null		982391	1					
ANR	982465	Identifier	false		982391	1					
ANR	982466	IfStatement	if ( emu )		982391	4					
ANR	982467	Condition	emu	4074:5:115529:115531	982391	0	True				
ANR	982468	Identifier	emu		982391	0					
ANR	982469	CompoundStatement		12:10:302:302	982391	1					
ANR	982470	IfStatement	if ( b -> parent_reg_arena )		982391	0					
ANR	982471	Condition	b -> parent_reg_arena	4075:6:115542:115560	982391	0	True				
ANR	982472	PtrMemberAccess	b -> parent_reg_arena		982391	0					
ANR	982473	Identifier	b		982391	0					
ANR	982474	Identifier	parent_reg_arena		982391	1					
ANR	982475	CompoundStatement		14:3:336:343	982391	1					
ANR	982476	IdentifierDeclStatement	ut64 gp ;	4076:3:115568:115575	982391	0	True				
ANR	982477	IdentifierDecl	gp		982391	0					
ANR	982478	IdentifierDeclType	ut64		982391	0					
ANR	982479	Identifier	gp		982391	1					
ANR	982480	ExpressionStatement	"r_reg_arena_poke ( core -> anal -> reg , b -> parent_reg_arena )"	4077:3:115580:115635	982391	1	True				
ANR	982481	CallExpression	"r_reg_arena_poke ( core -> anal -> reg , b -> parent_reg_arena )"		982391	0					
ANR	982482	Callee	r_reg_arena_poke		982391	0					
ANR	982483	Identifier	r_reg_arena_poke		982391	0					
ANR	982484	ArgumentList	core -> anal -> reg		982391	1					
ANR	982485	Argument	core -> anal -> reg		982391	0					
ANR	982486	PtrMemberAccess	core -> anal -> reg		982391	0					
ANR	982487	PtrMemberAccess	core -> anal		982391	0					
ANR	982488	Identifier	core		982391	0					
ANR	982489	Identifier	anal		982391	1					
ANR	982490	Identifier	reg		982391	1					
ANR	982491	Argument	b -> parent_reg_arena		982391	1					
ANR	982492	PtrMemberAccess	b -> parent_reg_arena		982391	0					
ANR	982493	Identifier	b		982391	0					
ANR	982494	Identifier	parent_reg_arena		982391	1					
ANR	982495	ExpressionStatement	R_FREE ( b -> parent_reg_arena )	4078:3:115640:115668	982391	2	True				
ANR	982496	CallExpression	R_FREE ( b -> parent_reg_arena )		982391	0					
ANR	982497	Callee	R_FREE		982391	0					
ANR	982498	Identifier	R_FREE		982391	0					
ANR	982499	ArgumentList	b -> parent_reg_arena		982391	1					
ANR	982500	Argument	b -> parent_reg_arena		982391	0					
ANR	982501	PtrMemberAccess	b -> parent_reg_arena		982391	0					
ANR	982502	Identifier	b		982391	0					
ANR	982503	Identifier	parent_reg_arena		982391	1					
ANR	982504	ExpressionStatement	"gp = r_reg_getv ( core -> anal -> reg , ""gp"" )"	4079:3:115673:115712	982391	3	True				
ANR	982505	AssignmentExpression	"gp = r_reg_getv ( core -> anal -> reg , ""gp"" )"		982391	0		=			
ANR	982506	Identifier	gp		982391	0					
ANR	982507	CallExpression	"r_reg_getv ( core -> anal -> reg , ""gp"" )"		982391	1					
ANR	982508	Callee	r_reg_getv		982391	0					
ANR	982509	Identifier	r_reg_getv		982391	0					
ANR	982510	ArgumentList	core -> anal -> reg		982391	1					
ANR	982511	Argument	core -> anal -> reg		982391	0					
ANR	982512	PtrMemberAccess	core -> anal -> reg		982391	0					
ANR	982513	PtrMemberAccess	core -> anal		982391	0					
ANR	982514	Identifier	core		982391	0					
ANR	982515	Identifier	anal		982391	1					
ANR	982516	Identifier	reg		982391	1					
ANR	982517	Argument	"""gp"""		982391	1					
ANR	982518	PrimaryExpression	"""gp"""		982391	0					
ANR	982519	IfStatement	if ( gp )		982391	4					
ANR	982520	Condition	gp	4080:7:115721:115722	982391	0	True				
ANR	982521	Identifier	gp		982391	0					
ANR	982522	CompoundStatement		18:11:493:493	982391	1					
ANR	982523	ExpressionStatement	core -> anal -> gp = gp	4081:4:115731:115750	982391	0	True				
ANR	982524	AssignmentExpression	core -> anal -> gp = gp		982391	0		=			
ANR	982525	PtrMemberAccess	core -> anal -> gp		982391	0					
ANR	982526	PtrMemberAccess	core -> anal		982391	0					
ANR	982527	Identifier	core		982391	0					
ANR	982528	Identifier	anal		982391	1					
ANR	982529	Identifier	gp		982391	1					
ANR	982530	Identifier	gp		982391	1					
ANR	982531	ElseStatement	else		982391	0					
ANR	982532	CompoundStatement		21:9:534:534	982391	0					
ANR	982533	ExpressionStatement	"r_reg_arena_poke ( core -> anal -> reg , saved_arena )"	4084:3:115771:115818	982391	0	True				
ANR	982534	CallExpression	"r_reg_arena_poke ( core -> anal -> reg , saved_arena )"		982391	0					
ANR	982535	Callee	r_reg_arena_poke		982391	0					
ANR	982536	Identifier	r_reg_arena_poke		982391	0					
ANR	982537	ArgumentList	core -> anal -> reg		982391	1					
ANR	982538	Argument	core -> anal -> reg		982391	0					
ANR	982539	PtrMemberAccess	core -> anal -> reg		982391	0					
ANR	982540	PtrMemberAccess	core -> anal		982391	0					
ANR	982541	Identifier	core		982391	0					
ANR	982542	Identifier	anal		982391	1					
ANR	982543	Identifier	reg		982391	1					
ANR	982544	Argument	saved_arena		982391	1					
ANR	982545	Identifier	saved_arena		982391	0					
ANR	982546	IfStatement	if ( b -> parent_stackptr != INT_MAX )		982391	5					
ANR	982547	Condition	b -> parent_stackptr != INT_MAX	4087:5:115832:115860	982391	0	True				
ANR	982548	EqualityExpression	b -> parent_stackptr != INT_MAX		982391	0		!=			
ANR	982549	PtrMemberAccess	b -> parent_stackptr		982391	0					
ANR	982550	Identifier	b		982391	0					
ANR	982551	Identifier	parent_stackptr		982391	1					
ANR	982552	Identifier	INT_MAX		982391	1					
ANR	982553	CompoundStatement		25:36:631:631	982391	1					
ANR	982554	ExpressionStatement	core -> anal -> stackptr = b -> parent_stackptr	4088:2:115867:115908	982391	0	True				
ANR	982555	AssignmentExpression	core -> anal -> stackptr = b -> parent_stackptr		982391	0		=			
ANR	982556	PtrMemberAccess	core -> anal -> stackptr		982391	0					
ANR	982557	PtrMemberAccess	core -> anal		982391	0					
ANR	982558	Identifier	core		982391	0					
ANR	982559	Identifier	anal		982391	1					
ANR	982560	Identifier	stackptr		982391	1					
ANR	982561	PtrMemberAccess	b -> parent_stackptr		982391	1					
ANR	982562	Identifier	b		982391	0					
ANR	982563	Identifier	parent_stackptr		982391	1					
ANR	982564	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.bb.middle"" , false )"	4090:1:115914:115967	982391	6	True				
ANR	982565	CallExpression	"r_config_set_i ( core -> config , ""asm.bb.middle"" , false )"		982391	0					
ANR	982566	Callee	r_config_set_i		982391	0					
ANR	982567	Identifier	r_config_set_i		982391	0					
ANR	982568	ArgumentList	core -> config		982391	1					
ANR	982569	Argument	core -> config		982391	0					
ANR	982570	PtrMemberAccess	core -> config		982391	0					
ANR	982571	Identifier	core		982391	0					
ANR	982572	Identifier	config		982391	1					
ANR	982573	Argument	"""asm.bb.middle"""		982391	1					
ANR	982574	PrimaryExpression	"""asm.bb.middle"""		982391	0					
ANR	982575	Argument	false		982391	2					
ANR	982576	Identifier	false		982391	0					
ANR	982577	Statement	p_type	4091:1:115970:115975	982391	7	True				
ANR	982578	Statement	==	4091:8:115977:115978	982391	8	True				
ANR	982579	Statement	'D'	4091:11:115980:115982	982391	9	True				
ANR	982580	Statement	?	4092:1:115985:115985	982391	10	True				
ANR	982581	Statement	r_core_cmdf	4092:3:115987:115997	982391	11	True				
ANR	982582	Statement	(	4092:15:115999:115999	982391	12	True				
ANR	982583	Statement	core	4092:16:116000:116003	982391	13	True				
ANR	982584	Statement	","	4092:20:116004:116004	982391	14	True				
ANR	982585	Statement	"""pD %d @0x%"""	4092:22:116006:116017	982391	15	True				
ANR	982586	Statement	PFMT64x	4092:34:116018:116024	982391	16	True				
ANR	982587	Statement	","	4092:41:116025:116025	982391	17	True				
ANR	982588	Statement	b	4092:43:116027:116027	982391	18	True				
ANR	982589	Statement	->	4092:44:116028:116029	982391	19	True				
ANR	982590	Statement	size	4092:46:116030:116033	982391	20	True				
ANR	982591	Statement	","	4092:50:116034:116034	982391	21	True				
ANR	982592	Statement	b	4092:52:116036:116036	982391	22	True				
ANR	982593	Statement	->	4092:53:116037:116038	982391	23	True				
ANR	982594	Statement	addr	4092:55:116039:116042	982391	24	True				
ANR	982595	Statement	)	4092:59:116043:116043	982391	25	True				
ANR	982596	Statement	:	4093:1:116046:116046	982391	26	True				
ANR	982597	Statement	r_core_cmdf	4093:3:116048:116058	982391	27	True				
ANR	982598	Statement	(	4093:15:116060:116060	982391	28	True				
ANR	982599	Statement	core	4093:16:116061:116064	982391	29	True				
ANR	982600	Statement	","	4093:20:116065:116065	982391	30	True				
ANR	982601	Statement	"""pI %d @0x%"""	4093:22:116067:116078	982391	31	True				
ANR	982602	Statement	PFMT64x	4093:34:116079:116085	982391	32	True				
ANR	982603	Statement	","	4093:41:116086:116086	982391	33	True				
ANR	982604	Statement	b	4093:43:116088:116088	982391	34	True				
ANR	982605	Statement	->	4093:44:116089:116090	982391	35	True				
ANR	982606	Statement	size	4093:46:116091:116094	982391	36	True				
ANR	982607	Statement	","	4093:50:116095:116095	982391	37	True				
ANR	982608	Statement	b	4093:52:116097:116097	982391	38	True				
ANR	982609	Statement	->	4093:53:116098:116099	982391	39	True				
ANR	982610	Statement	addr	4093:55:116100:116103	982391	40	True				
ANR	982611	Statement	)	4093:59:116104:116104	982391	41	True				
ANR	982612	ExpressionStatement		4093:60:116105:116105	982391	42	True				
ANR	982613	ExpressionStatement	"r_config_set ( core -> config , ""asm.bb.middle"" , orig_bb_middle )"	4094:1:116108:116168	982391	43	True				
ANR	982614	CallExpression	"r_config_set ( core -> config , ""asm.bb.middle"" , orig_bb_middle )"		982391	0					
ANR	982615	Callee	r_config_set		982391	0					
ANR	982616	Identifier	r_config_set		982391	0					
ANR	982617	ArgumentList	core -> config		982391	1					
ANR	982618	Argument	core -> config		982391	0					
ANR	982619	PtrMemberAccess	core -> config		982391	0					
ANR	982620	Identifier	core		982391	0					
ANR	982621	Identifier	config		982391	1					
ANR	982622	Argument	"""asm.bb.middle"""		982391	1					
ANR	982623	PrimaryExpression	"""asm.bb.middle"""		982391	0					
ANR	982624	Argument	orig_bb_middle		982391	2					
ANR	982625	Identifier	orig_bb_middle		982391	0					
ANR	982626	IfStatement	if ( b -> jump != UT64_MAX )		982391	44					
ANR	982627	Condition	b -> jump != UT64_MAX	4096:5:116176:116194	982391	0	True				
ANR	982628	EqualityExpression	b -> jump != UT64_MAX		982391	0		!=			
ANR	982629	PtrMemberAccess	b -> jump		982391	0					
ANR	982630	Identifier	b		982391	0					
ANR	982631	Identifier	jump		982391	1					
ANR	982632	Identifier	UT64_MAX		982391	1					
ANR	982633	CompoundStatement		34:26:965:965	982391	1					
ANR	982634	IfStatement	if ( b -> jump > b -> addr )		982391	0					
ANR	982635	Condition	b -> jump > b -> addr	4097:6:116205:116221	982391	0	True				
ANR	982636	RelationalExpression	b -> jump > b -> addr		982391	0		>			
ANR	982637	PtrMemberAccess	b -> jump		982391	0					
ANR	982638	Identifier	b		982391	0					
ANR	982639	Identifier	jump		982391	1					
ANR	982640	PtrMemberAccess	b -> addr		982391	1					
ANR	982641	Identifier	b		982391	0					
ANR	982642	Identifier	addr		982391	1					
ANR	982643	CompoundStatement		36:3:997:1047	982391	1					
ANR	982644	IdentifierDeclStatement	"RAnalBlock * jumpbb = r_anal_bb_get_jumpbb ( fcn , b ) ;"	4098:3:116229:116279	982391	0	True				
ANR	982645	IdentifierDecl	"* jumpbb = r_anal_bb_get_jumpbb ( fcn , b )"		982391	0					
ANR	982646	IdentifierDeclType	RAnalBlock *		982391	0					
ANR	982647	Identifier	jumpbb		982391	1					
ANR	982648	AssignmentExpression	"* jumpbb = r_anal_bb_get_jumpbb ( fcn , b )"		982391	2		=			
ANR	982649	Identifier	jumpbb		982391	0					
ANR	982650	CallExpression	"r_anal_bb_get_jumpbb ( fcn , b )"		982391	1					
ANR	982651	Callee	r_anal_bb_get_jumpbb		982391	0					
ANR	982652	Identifier	r_anal_bb_get_jumpbb		982391	0					
ANR	982653	ArgumentList	fcn		982391	1					
ANR	982654	Argument	fcn		982391	0					
ANR	982655	Identifier	fcn		982391	0					
ANR	982656	Argument	b		982391	1					
ANR	982657	Identifier	b		982391	0					
ANR	982658	IfStatement	if ( jumpbb )		982391	1					
ANR	982659	Condition	jumpbb	4099:7:116288:116293	982391	0	True				
ANR	982660	Identifier	jumpbb		982391	0					
ANR	982661	CompoundStatement		37:15:1064:1064	982391	1					
ANR	982662	IfStatement	if ( emu && core -> anal -> last_disasm_reg && ! jumpbb -> parent_reg_arena )		982391	0					
ANR	982663	Condition	emu && core -> anal -> last_disasm_reg && ! jumpbb -> parent_reg_arena	4100:8:116306:116368	982391	0	True				
ANR	982664	AndExpression	emu && core -> anal -> last_disasm_reg && ! jumpbb -> parent_reg_arena		982391	0		&&			
ANR	982665	Identifier	emu		982391	0					
ANR	982666	AndExpression	core -> anal -> last_disasm_reg && ! jumpbb -> parent_reg_arena		982391	1		&&			
ANR	982667	PtrMemberAccess	core -> anal -> last_disasm_reg		982391	0					
ANR	982668	PtrMemberAccess	core -> anal		982391	0					
ANR	982669	Identifier	core		982391	0					
ANR	982670	Identifier	anal		982391	1					
ANR	982671	Identifier	last_disasm_reg		982391	1					
ANR	982672	UnaryOperationExpression	! jumpbb -> parent_reg_arena		982391	1					
ANR	982673	UnaryOperator	!		982391	0					
ANR	982674	PtrMemberAccess	jumpbb -> parent_reg_arena		982391	1					
ANR	982675	Identifier	jumpbb		982391	0					
ANR	982676	Identifier	parent_reg_arena		982391	1					
ANR	982677	CompoundStatement		38:73:1139:1139	982391	1					
ANR	982678	ExpressionStatement	"jumpbb -> parent_reg_arena = r_reg_arena_dup ( core -> anal -> reg , core -> anal -> last_disasm_reg )"	4101:5:116378:116467	982391	0	True				
ANR	982679	AssignmentExpression	"jumpbb -> parent_reg_arena = r_reg_arena_dup ( core -> anal -> reg , core -> anal -> last_disasm_reg )"		982391	0		=			
ANR	982680	PtrMemberAccess	jumpbb -> parent_reg_arena		982391	0					
ANR	982681	Identifier	jumpbb		982391	0					
ANR	982682	Identifier	parent_reg_arena		982391	1					
ANR	982683	CallExpression	"r_reg_arena_dup ( core -> anal -> reg , core -> anal -> last_disasm_reg )"		982391	1					
ANR	982684	Callee	r_reg_arena_dup		982391	0					
ANR	982685	Identifier	r_reg_arena_dup		982391	0					
ANR	982686	ArgumentList	core -> anal -> reg		982391	1					
ANR	982687	Argument	core -> anal -> reg		982391	0					
ANR	982688	PtrMemberAccess	core -> anal -> reg		982391	0					
ANR	982689	PtrMemberAccess	core -> anal		982391	0					
ANR	982690	Identifier	core		982391	0					
ANR	982691	Identifier	anal		982391	1					
ANR	982692	Identifier	reg		982391	1					
ANR	982693	Argument	core -> anal -> last_disasm_reg		982391	1					
ANR	982694	PtrMemberAccess	core -> anal -> last_disasm_reg		982391	0					
ANR	982695	PtrMemberAccess	core -> anal		982391	0					
ANR	982696	Identifier	core		982391	0					
ANR	982697	Identifier	anal		982391	1					
ANR	982698	Identifier	last_disasm_reg		982391	1					
ANR	982699	IfStatement	if ( jumpbb -> parent_stackptr == INT_MAX )		982391	1					
ANR	982700	Condition	jumpbb -> parent_stackptr == INT_MAX	4103:8:116483:116516	982391	0	True				
ANR	982701	EqualityExpression	jumpbb -> parent_stackptr == INT_MAX		982391	0		==			
ANR	982702	PtrMemberAccess	jumpbb -> parent_stackptr		982391	0					
ANR	982703	Identifier	jumpbb		982391	0					
ANR	982704	Identifier	parent_stackptr		982391	1					
ANR	982705	Identifier	INT_MAX		982391	1					
ANR	982706	CompoundStatement		41:44:1287:1287	982391	1					
ANR	982707	ExpressionStatement	jumpbb -> parent_stackptr = core -> anal -> stackptr + b -> stackptr	4104:5:116526:116586	982391	0	True				
ANR	982708	AssignmentExpression	jumpbb -> parent_stackptr = core -> anal -> stackptr + b -> stackptr		982391	0		=			
ANR	982709	PtrMemberAccess	jumpbb -> parent_stackptr		982391	0					
ANR	982710	Identifier	jumpbb		982391	0					
ANR	982711	Identifier	parent_stackptr		982391	1					
ANR	982712	AdditiveExpression	core -> anal -> stackptr + b -> stackptr		982391	1		+			
ANR	982713	PtrMemberAccess	core -> anal -> stackptr		982391	0					
ANR	982714	PtrMemberAccess	core -> anal		982391	0					
ANR	982715	Identifier	core		982391	0					
ANR	982716	Identifier	anal		982391	1					
ANR	982717	Identifier	stackptr		982391	1					
ANR	982718	PtrMemberAccess	b -> stackptr		982391	1					
ANR	982719	Identifier	b		982391	0					
ANR	982720	Identifier	stackptr		982391	1					
ANR	982721	IfStatement	if ( p_type == 'D' && show_flags )		982391	1					
ANR	982722	Condition	p_type == 'D' && show_flags	4108:6:116609:116635	982391	0	True				
ANR	982723	AndExpression	p_type == 'D' && show_flags		982391	0		&&			
ANR	982724	EqualityExpression	p_type == 'D'		982391	0		==			
ANR	982725	Identifier	p_type		982391	0					
ANR	982726	PrimaryExpression	'D'		982391	1					
ANR	982727	Identifier	show_flags		982391	1					
ANR	982728	CompoundStatement		46:35:1406:1406	982391	1					
ANR	982729	Statement	r_cons_printf	4109:3:116643:116655	982391	0	True				
ANR	982730	Statement	(	4109:17:116657:116657	982391	1	True				
ANR	982731	Statement	"""| ----------- true: 0x%08"""	4109:18:116658:116684	982391	2	True				
ANR	982732	Statement	PFMT64x	4109:45:116685:116691	982391	3	True				
ANR	982733	Statement	","	4109:52:116692:116692	982391	4	True				
ANR	982734	Statement	b	4109:54:116694:116694	982391	5	True				
ANR	982735	Statement	->	4109:55:116695:116696	982391	6	True				
ANR	982736	Statement	jump	4109:57:116697:116700	982391	7	True				
ANR	982737	Statement	)	4109:61:116701:116701	982391	8	True				
ANR	982738	ExpressionStatement		4109:62:116702:116702	982391	9	True				
ANR	982739	IfStatement	if ( b -> fail != UT64_MAX )		982391	45					
ANR	982740	Condition	b -> fail != UT64_MAX	4112:5:116716:116734	982391	0	True				
ANR	982741	EqualityExpression	b -> fail != UT64_MAX		982391	0		!=			
ANR	982742	PtrMemberAccess	b -> fail		982391	0					
ANR	982743	Identifier	b		982391	0					
ANR	982744	Identifier	fail		982391	1					
ANR	982745	Identifier	UT64_MAX		982391	1					
ANR	982746	CompoundStatement		50:26:1505:1505	982391	1					
ANR	982747	IfStatement	if ( b -> fail > b -> addr )		982391	0					
ANR	982748	Condition	b -> fail > b -> addr	4113:6:116745:116761	982391	0	True				
ANR	982749	RelationalExpression	b -> fail > b -> addr		982391	0		>			
ANR	982750	PtrMemberAccess	b -> fail		982391	0					
ANR	982751	Identifier	b		982391	0					
ANR	982752	Identifier	fail		982391	1					
ANR	982753	PtrMemberAccess	b -> addr		982391	1					
ANR	982754	Identifier	b		982391	0					
ANR	982755	Identifier	addr		982391	1					
ANR	982756	CompoundStatement		52:3:1537:1587	982391	1					
ANR	982757	IdentifierDeclStatement	"RAnalBlock * failbb = r_anal_bb_get_failbb ( fcn , b ) ;"	4114:3:116769:116819	982391	0	True				
ANR	982758	IdentifierDecl	"* failbb = r_anal_bb_get_failbb ( fcn , b )"		982391	0					
ANR	982759	IdentifierDeclType	RAnalBlock *		982391	0					
ANR	982760	Identifier	failbb		982391	1					
ANR	982761	AssignmentExpression	"* failbb = r_anal_bb_get_failbb ( fcn , b )"		982391	2		=			
ANR	982762	Identifier	failbb		982391	0					
ANR	982763	CallExpression	"r_anal_bb_get_failbb ( fcn , b )"		982391	1					
ANR	982764	Callee	r_anal_bb_get_failbb		982391	0					
ANR	982765	Identifier	r_anal_bb_get_failbb		982391	0					
ANR	982766	ArgumentList	fcn		982391	1					
ANR	982767	Argument	fcn		982391	0					
ANR	982768	Identifier	fcn		982391	0					
ANR	982769	Argument	b		982391	1					
ANR	982770	Identifier	b		982391	0					
ANR	982771	IfStatement	if ( failbb )		982391	1					
ANR	982772	Condition	failbb	4115:7:116828:116833	982391	0	True				
ANR	982773	Identifier	failbb		982391	0					
ANR	982774	CompoundStatement		53:15:1604:1604	982391	1					
ANR	982775	IfStatement	if ( emu && core -> anal -> last_disasm_reg && ! failbb -> parent_reg_arena )		982391	0					
ANR	982776	Condition	emu && core -> anal -> last_disasm_reg && ! failbb -> parent_reg_arena	4116:8:116846:116908	982391	0	True				
ANR	982777	AndExpression	emu && core -> anal -> last_disasm_reg && ! failbb -> parent_reg_arena		982391	0		&&			
ANR	982778	Identifier	emu		982391	0					
ANR	982779	AndExpression	core -> anal -> last_disasm_reg && ! failbb -> parent_reg_arena		982391	1		&&			
ANR	982780	PtrMemberAccess	core -> anal -> last_disasm_reg		982391	0					
ANR	982781	PtrMemberAccess	core -> anal		982391	0					
ANR	982782	Identifier	core		982391	0					
ANR	982783	Identifier	anal		982391	1					
ANR	982784	Identifier	last_disasm_reg		982391	1					
ANR	982785	UnaryOperationExpression	! failbb -> parent_reg_arena		982391	1					
ANR	982786	UnaryOperator	!		982391	0					
ANR	982787	PtrMemberAccess	failbb -> parent_reg_arena		982391	1					
ANR	982788	Identifier	failbb		982391	0					
ANR	982789	Identifier	parent_reg_arena		982391	1					
ANR	982790	CompoundStatement		54:73:1679:1679	982391	1					
ANR	982791	ExpressionStatement	"failbb -> parent_reg_arena = r_reg_arena_dup ( core -> anal -> reg , core -> anal -> last_disasm_reg )"	4117:5:116918:117007	982391	0	True				
ANR	982792	AssignmentExpression	"failbb -> parent_reg_arena = r_reg_arena_dup ( core -> anal -> reg , core -> anal -> last_disasm_reg )"		982391	0		=			
ANR	982793	PtrMemberAccess	failbb -> parent_reg_arena		982391	0					
ANR	982794	Identifier	failbb		982391	0					
ANR	982795	Identifier	parent_reg_arena		982391	1					
ANR	982796	CallExpression	"r_reg_arena_dup ( core -> anal -> reg , core -> anal -> last_disasm_reg )"		982391	1					
ANR	982797	Callee	r_reg_arena_dup		982391	0					
ANR	982798	Identifier	r_reg_arena_dup		982391	0					
ANR	982799	ArgumentList	core -> anal -> reg		982391	1					
ANR	982800	Argument	core -> anal -> reg		982391	0					
ANR	982801	PtrMemberAccess	core -> anal -> reg		982391	0					
ANR	982802	PtrMemberAccess	core -> anal		982391	0					
ANR	982803	Identifier	core		982391	0					
ANR	982804	Identifier	anal		982391	1					
ANR	982805	Identifier	reg		982391	1					
ANR	982806	Argument	core -> anal -> last_disasm_reg		982391	1					
ANR	982807	PtrMemberAccess	core -> anal -> last_disasm_reg		982391	0					
ANR	982808	PtrMemberAccess	core -> anal		982391	0					
ANR	982809	Identifier	core		982391	0					
ANR	982810	Identifier	anal		982391	1					
ANR	982811	Identifier	last_disasm_reg		982391	1					
ANR	982812	IfStatement	if ( failbb -> parent_stackptr == INT_MAX )		982391	1					
ANR	982813	Condition	failbb -> parent_stackptr == INT_MAX	4119:8:117023:117056	982391	0	True				
ANR	982814	EqualityExpression	failbb -> parent_stackptr == INT_MAX		982391	0		==			
ANR	982815	PtrMemberAccess	failbb -> parent_stackptr		982391	0					
ANR	982816	Identifier	failbb		982391	0					
ANR	982817	Identifier	parent_stackptr		982391	1					
ANR	982818	Identifier	INT_MAX		982391	1					
ANR	982819	CompoundStatement		57:44:1827:1827	982391	1					
ANR	982820	ExpressionStatement	failbb -> parent_stackptr = core -> anal -> stackptr + b -> stackptr	4120:5:117066:117126	982391	0	True				
ANR	982821	AssignmentExpression	failbb -> parent_stackptr = core -> anal -> stackptr + b -> stackptr		982391	0		=			
ANR	982822	PtrMemberAccess	failbb -> parent_stackptr		982391	0					
ANR	982823	Identifier	failbb		982391	0					
ANR	982824	Identifier	parent_stackptr		982391	1					
ANR	982825	AdditiveExpression	core -> anal -> stackptr + b -> stackptr		982391	1		+			
ANR	982826	PtrMemberAccess	core -> anal -> stackptr		982391	0					
ANR	982827	PtrMemberAccess	core -> anal		982391	0					
ANR	982828	Identifier	core		982391	0					
ANR	982829	Identifier	anal		982391	1					
ANR	982830	Identifier	stackptr		982391	1					
ANR	982831	PtrMemberAccess	b -> stackptr		982391	1					
ANR	982832	Identifier	b		982391	0					
ANR	982833	Identifier	stackptr		982391	1					
ANR	982834	IfStatement	if ( p_type == 'D' && show_flags )		982391	1					
ANR	982835	Condition	p_type == 'D' && show_flags	4124:6:117149:117175	982391	0	True				
ANR	982836	AndExpression	p_type == 'D' && show_flags		982391	0		&&			
ANR	982837	EqualityExpression	p_type == 'D'		982391	0		==			
ANR	982838	Identifier	p_type		982391	0					
ANR	982839	PrimaryExpression	'D'		982391	1					
ANR	982840	Identifier	show_flags		982391	1					
ANR	982841	CompoundStatement		62:35:1946:1946	982391	1					
ANR	982842	Statement	r_cons_printf	4125:3:117183:117195	982391	0	True				
ANR	982843	Statement	(	4125:17:117197:117197	982391	1	True				
ANR	982844	Statement	"""  false: 0x%08"""	4125:18:117198:117213	982391	2	True				
ANR	982845	Statement	PFMT64x	4125:34:117214:117220	982391	3	True				
ANR	982846	Statement	","	4125:41:117221:117221	982391	4	True				
ANR	982847	Statement	b	4125:43:117223:117223	982391	5	True				
ANR	982848	Statement	->	4125:44:117224:117225	982391	6	True				
ANR	982849	Statement	fail	4125:46:117226:117229	982391	7	True				
ANR	982850	Statement	)	4125:50:117230:117230	982391	8	True				
ANR	982851	ExpressionStatement		4125:51:117231:117231	982391	9	True				
ANR	982852	IfStatement	if ( p_type == 'D' && show_flags )		982391	46					
ANR	982853	Condition	p_type == 'D' && show_flags	4128:5:117245:117271	982391	0	True				
ANR	982854	AndExpression	p_type == 'D' && show_flags		982391	0		&&			
ANR	982855	EqualityExpression	p_type == 'D'		982391	0		==			
ANR	982856	Identifier	p_type		982391	0					
ANR	982857	PrimaryExpression	'D'		982391	1					
ANR	982858	Identifier	show_flags		982391	1					
ANR	982859	CompoundStatement		66:34:2042:2042	982391	1					
ANR	982860	ExpressionStatement	r_cons_newline ( )	4129:2:117278:117295	982391	0	True				
ANR	982861	CallExpression	r_cons_newline ( )		982391	0					
ANR	982862	Callee	r_cons_newline		982391	0					
ANR	982863	Identifier	r_cons_newline		982391	0					
ANR	982864	ArgumentList			982391	1					
ANR	982865	ReturnType	static void		982391	1					
ANR	982866	Identifier	pr_bb		982391	2					
ANR	982867	ParameterList	"RCore * core , RAnalFunction * fcn , RAnalBlock * b , bool emu , ut64 saved_gp , ut8 * saved_arena , char p_type , bool fromHere"		982391	3					
ANR	982868	Parameter	RCore * core	4063:18:115112:115122	982391	0	True				
ANR	982869	ParameterType	RCore *		982391	0					
ANR	982870	Identifier	core		982391	1					
ANR	982871	Parameter	RAnalFunction * fcn	4063:31:115125:115142	982391	1	True				
ANR	982872	ParameterType	RAnalFunction *		982391	0					
ANR	982873	Identifier	fcn		982391	1					
ANR	982874	Parameter	RAnalBlock * b	4063:51:115145:115157	982391	2	True				
ANR	982875	ParameterType	RAnalBlock *		982391	0					
ANR	982876	Identifier	b		982391	1					
ANR	982877	Parameter	bool emu	4063:66:115160:115167	982391	3	True				
ANR	982878	ParameterType	bool		982391	0					
ANR	982879	Identifier	emu		982391	1					
ANR	982880	Parameter	ut64 saved_gp	4063:76:115170:115182	982391	4	True				
ANR	982881	ParameterType	ut64		982391	0					
ANR	982882	Identifier	saved_gp		982391	1					
ANR	982883	Parameter	ut8 * saved_arena	4063:91:115185:115200	982391	5	True				
ANR	982884	ParameterType	ut8 *		982391	0					
ANR	982885	Identifier	saved_arena		982391	1					
ANR	982886	Parameter	char p_type	4063:109:115203:115213	982391	6	True				
ANR	982887	ParameterType	char		982391	0					
ANR	982888	Identifier	p_type		982391	1					
ANR	982889	Parameter	bool fromHere	4063:122:115216:115228	982391	7	True				
ANR	982890	ParameterType	bool		982391	0					
ANR	982891	Identifier	fromHere		982391	1					
ANR	982892	CFGEntryNode	ENTRY		982391		True				
ANR	982893	CFGExitNode	EXIT		982391		True				
ANR	982894	Symbol	core -> anal -> reg		982391						
ANR	982895	Symbol	jumpbb -> parent_reg_arena		982391						
ANR	982896	Symbol	orig_bb_middle		982391						
ANR	982897	Symbol	core -> offset		982391						
ANR	982898	Symbol	failbb -> parent_stackptr		982391						
ANR	982899	Symbol	r_anal_bb_get_jumpbb		982391						
ANR	982900	Symbol	show_flags		982391						
ANR	982901	Symbol	* jumpbb		982391						
ANR	982902	Symbol	r_anal_bb_get_failbb		982391						
ANR	982903	Symbol	b -> parent_reg_arena		982391						
ANR	982904	Symbol	core		982391						
ANR	982905	Symbol	r_reg_arena_dup		982391						
ANR	982906	Symbol	r_config_get_i		982391						
ANR	982907	Symbol	true		982391						
ANR	982908	Symbol	b -> parent_stackptr		982391						
ANR	982909	Symbol	p_type		982391						
ANR	982910	Symbol	failbb -> parent_reg_arena		982391						
ANR	982911	Symbol	b -> stackptr		982391						
ANR	982912	Symbol	r_reg_getv		982391						
ANR	982913	Symbol	* core -> cons		982391						
ANR	982914	Symbol	saved_arena		982391						
ANR	982915	Symbol	* core		982391						
ANR	982916	Symbol	r_config_get		982391						
ANR	982917	Symbol	failbb		982391						
ANR	982918	Symbol	emu		982391						
ANR	982919	Symbol	core -> anal		982391						
ANR	982920	Symbol	b -> addr		982391						
ANR	982921	Symbol	core -> anal -> last_disasm_reg		982391						
ANR	982922	Symbol	fcn		982391						
ANR	982923	Symbol	core -> cons		982391						
ANR	982924	Symbol	core -> cons -> null		982391						
ANR	982925	Symbol	INT_MAX		982391						
ANR	982926	Symbol	* failbb		982391						
ANR	982927	Symbol	saved_gp		982391						
ANR	982928	Symbol	UT64_MAX		982391						
ANR	982929	Symbol	* * core		982391						
ANR	982930	Symbol	core -> config		982391						
ANR	982931	Symbol	b -> fail		982391						
ANR	982932	Symbol	b		982391						
ANR	982933	Symbol	false		982391						
ANR	982934	Symbol	jumpbb -> parent_stackptr		982391						
ANR	982935	Symbol	gp		982391						
ANR	982936	Symbol	core -> anal -> gp		982391						
ANR	982937	Symbol	jumpbb		982391						
ANR	982938	Symbol	* b		982391						
ANR	982939	Symbol	b -> jump		982391						
ANR	982940	Symbol	fromHere		982391						
ANR	982941	Symbol	* core -> anal		982391						
ANR	982942	Symbol	core -> anal -> stackptr		982391						
ANR	982943	DeclStmt									
ANR	982944	Decl							r_itv_t	r_itv_t	addr
ANR	982945	DeclStmt									
ANR	982946	Decl							ut64	ut64	size
ANR	982947	DeclStmt									
ANR	982948	Decl							ut8	ut8 *	dis
ANR	982949	Function	disasm_recursive_old	4143:0:117455:120143							
ANR	982950	FunctionDef	"disasm_recursive_old (RCore * core , ut64 addr , char type_print)"		982949	0					
ANR	982951	CompoundStatement		4143:74:117529:120143	982949	0					
ANR	982952	IdentifierDeclStatement	bool push [ 512 ] ;	4144:1:117532:117546	982949	0	True				
ANR	982953	IdentifierDecl	push [ 512 ]		982949	0					
ANR	982954	IdentifierDeclType	bool [ 512 ]		982949	0					
ANR	982955	Identifier	push		982949	1					
ANR	982956	PrimaryExpression	512		982949	2					
ANR	982957	IdentifierDeclStatement	int pushes = 0 ;	4145:1:117549:117563	982949	1	True				
ANR	982958	IdentifierDecl	pushes = 0		982949	0					
ANR	982959	IdentifierDeclType	int		982949	0					
ANR	982960	Identifier	pushes		982949	1					
ANR	982961	AssignmentExpression	pushes = 0		982949	2		=			
ANR	982962	Identifier	pushes		982949	0					
ANR	982963	PrimaryExpression	0		982949	1					
ANR	982964	IdentifierDeclStatement	RAnalOp aop = { 0 } ;	4146:1:117566:117583	982949	2	True				
ANR	982965	IdentifierDecl	aop = { 0 }		982949	0					
ANR	982966	IdentifierDeclType	RAnalOp		982949	0					
ANR	982967	Identifier	aop		982949	1					
ANR	982968	AssignmentExpression	aop = { 0 }		982949	2		=			
ANR	982969	Identifier	aop		982949	0					
ANR	982970	InitializerList	0		982949	1					
ANR	982971	PrimaryExpression	0		982949	0					
ANR	982972	IdentifierDeclStatement	"int i , j , ret ;"	4147:1:117586:117599	982949	3	True				
ANR	982973	IdentifierDecl	i		982949	0					
ANR	982974	IdentifierDeclType	int		982949	0					
ANR	982975	Identifier	i		982949	1					
ANR	982976	IdentifierDecl	j		982949	1					
ANR	982977	IdentifierDeclType	int		982949	0					
ANR	982978	Identifier	j		982949	1					
ANR	982979	IdentifierDecl	ret		982949	2					
ANR	982980	IdentifierDeclType	int		982949	0					
ANR	982981	Identifier	ret		982949	1					
ANR	982982	IdentifierDeclStatement	"ut8 * buf = calloc ( core -> blocksize , 1 ) ;"	4148:1:117602:117640	982949	4	True				
ANR	982983	IdentifierDecl	"* buf = calloc ( core -> blocksize , 1 )"		982949	0					
ANR	982984	IdentifierDeclType	ut8 *		982949	0					
ANR	982985	Identifier	buf		982949	1					
ANR	982986	AssignmentExpression	"* buf = calloc ( core -> blocksize , 1 )"		982949	2		=			
ANR	982987	Identifier	buf		982949	0					
ANR	982988	CallExpression	"calloc ( core -> blocksize , 1 )"		982949	1					
ANR	982989	Callee	calloc		982949	0					
ANR	982990	Identifier	calloc		982949	0					
ANR	982991	ArgumentList	core -> blocksize		982949	1					
ANR	982992	Argument	core -> blocksize		982949	0					
ANR	982993	PtrMemberAccess	core -> blocksize		982949	0					
ANR	982994	Identifier	core		982949	0					
ANR	982995	Identifier	blocksize		982949	1					
ANR	982996	Argument	1		982949	1					
ANR	982997	PrimaryExpression	1		982949	0					
ANR	982998	IfStatement	if ( ! buf )		982949	5					
ANR	982999	Condition	! buf	4149:5:117671:117674	982949	0	True				
ANR	983000	UnaryOperationExpression	! buf		982949	0					
ANR	983001	UnaryOperator	!		982949	0					
ANR	983002	Identifier	buf		982949	1					
ANR	983003	CompoundStatement		7:11:147:147	982949	1					
ANR	983004	ReturnStatement	return ;	4150:2:117681:117687	982949	0	True				
ANR	983005	IdentifierDeclStatement	"ut8 * raw = calloc ( core -> blocksize , 1 ) ;"	4152:1:117693:117731	982949	6	True				
ANR	983006	IdentifierDecl	"* raw = calloc ( core -> blocksize , 1 )"		982949	0					
ANR	983007	IdentifierDeclType	ut8 *		982949	0					
ANR	983008	Identifier	raw		982949	1					
ANR	983009	AssignmentExpression	"* raw = calloc ( core -> blocksize , 1 )"		982949	2		=			
ANR	983010	Identifier	raw		982949	0					
ANR	983011	CallExpression	"calloc ( core -> blocksize , 1 )"		982949	1					
ANR	983012	Callee	calloc		982949	0					
ANR	983013	Identifier	calloc		982949	0					
ANR	983014	ArgumentList	core -> blocksize		982949	1					
ANR	983015	Argument	core -> blocksize		982949	0					
ANR	983016	PtrMemberAccess	core -> blocksize		982949	0					
ANR	983017	Identifier	core		982949	0					
ANR	983018	Identifier	blocksize		982949	1					
ANR	983019	Argument	1		982949	1					
ANR	983020	PrimaryExpression	1		982949	0					
ANR	983021	IfStatement	if ( ! raw )		982949	7					
ANR	983022	Condition	! raw	4153:5:117762:117765	982949	0	True				
ANR	983023	UnaryOperationExpression	! raw		982949	0					
ANR	983024	UnaryOperator	!		982949	0					
ANR	983025	Identifier	raw		982949	1					
ANR	983026	CompoundStatement		11:11:238:238	982949	1					
ANR	983027	ExpressionStatement	free ( buf )	4154:2:117772:117782	982949	0	True				
ANR	983028	CallExpression	free ( buf )		982949	0					
ANR	983029	Callee	free		982949	0					
ANR	983030	Identifier	free		982949	0					
ANR	983031	ArgumentList	buf		982949	1					
ANR	983032	Argument	buf		982949	0					
ANR	983033	Identifier	buf		982949	0					
ANR	983034	ReturnStatement	return ;	4155:2:117786:117792	982949	1	True				
ANR	983035	IdentifierDeclStatement	int count = 64 ;	4157:1:117798:117812	982949	8	True				
ANR	983036	IdentifierDecl	count = 64		982949	0					
ANR	983037	IdentifierDeclType	int		982949	0					
ANR	983038	Identifier	count		982949	1					
ANR	983039	AssignmentExpression	count = 64		982949	2		=			
ANR	983040	Identifier	count		982949	0					
ANR	983041	PrimaryExpression	64		982949	1					
ANR	983042	IdentifierDeclStatement	int base = 0 ;	4158:1:117815:117827	982949	9	True				
ANR	983043	IdentifierDecl	base = 0		982949	0					
ANR	983044	IdentifierDeclType	int		982949	0					
ANR	983045	Identifier	base		982949	1					
ANR	983046	AssignmentExpression	base = 0		982949	2		=			
ANR	983047	Identifier	base		982949	0					
ANR	983048	PrimaryExpression	0		982949	1					
ANR	983049	ForStatement	for ( i = 0 ; count > 0 && i < core -> blocksize ; i ++ )		982949	10					
ANR	983050	ForInit	i = 0 ;	4159:6:117835:117840	982949	0	True				
ANR	983051	AssignmentExpression	i = 0		982949	0		=			
ANR	983052	Identifier	i		982949	0					
ANR	983053	PrimaryExpression	0		982949	1					
ANR	983054	Condition	count > 0 && i < core -> blocksize	4159:13:117842:117873	982949	1	True				
ANR	983055	AndExpression	count > 0 && i < core -> blocksize		982949	0		&&			
ANR	983056	RelationalExpression	count > 0		982949	0		>			
ANR	983057	Identifier	count		982949	0					
ANR	983058	PrimaryExpression	0		982949	1					
ANR	983059	RelationalExpression	i < core -> blocksize		982949	1		<			
ANR	983060	Identifier	i		982949	0					
ANR	983061	PtrMemberAccess	core -> blocksize		982949	1					
ANR	983062	Identifier	core		982949	0					
ANR	983063	Identifier	blocksize		982949	1					
ANR	983064	PostIncDecOperationExpression	i ++	4159:47:117876:117878	982949	2	True				
ANR	983065	Identifier	i		982949	0					
ANR	983066	IncDec	++		982949	1					
ANR	983067	CompoundStatement		17:52:351:351	982949	3					
ANR	983068	ExpressionStatement	r_anal_op_fini ( & aop )	4160:2:117885:117906	982949	0	True				
ANR	983069	CallExpression	r_anal_op_fini ( & aop )		982949	0					
ANR	983070	Callee	r_anal_op_fini		982949	0					
ANR	983071	Identifier	r_anal_op_fini		982949	0					
ANR	983072	ArgumentList	& aop		982949	1					
ANR	983073	Argument	& aop		982949	0					
ANR	983074	UnaryOperationExpression	& aop		982949	0					
ANR	983075	UnaryOperator	&		982949	0					
ANR	983076	Identifier	aop		982949	1					
ANR	983077	ExpressionStatement	"ret = r_anal_op ( core -> anal , & aop , addr + i , core -> block + i , core -> blocksize - i )"	4161:2:117910:117993	982949	1	True				
ANR	983078	AssignmentExpression	"ret = r_anal_op ( core -> anal , & aop , addr + i , core -> block + i , core -> blocksize - i )"		982949	0		=			
ANR	983079	Identifier	ret		982949	0					
ANR	983080	CallExpression	"r_anal_op ( core -> anal , & aop , addr + i , core -> block + i , core -> blocksize - i )"		982949	1					
ANR	983081	Callee	r_anal_op		982949	0					
ANR	983082	Identifier	r_anal_op		982949	0					
ANR	983083	ArgumentList	core -> anal		982949	1					
ANR	983084	Argument	core -> anal		982949	0					
ANR	983085	PtrMemberAccess	core -> anal		982949	0					
ANR	983086	Identifier	core		982949	0					
ANR	983087	Identifier	anal		982949	1					
ANR	983088	Argument	& aop		982949	1					
ANR	983089	UnaryOperationExpression	& aop		982949	0					
ANR	983090	UnaryOperator	&		982949	0					
ANR	983091	Identifier	aop		982949	1					
ANR	983092	Argument	addr + i		982949	2					
ANR	983093	AdditiveExpression	addr + i		982949	0		+			
ANR	983094	Identifier	addr		982949	0					
ANR	983095	Identifier	i		982949	1					
ANR	983096	Argument	core -> block + i		982949	3					
ANR	983097	AdditiveExpression	core -> block + i		982949	0		+			
ANR	983098	PtrMemberAccess	core -> block		982949	0					
ANR	983099	Identifier	core		982949	0					
ANR	983100	Identifier	block		982949	1					
ANR	983101	Identifier	i		982949	1					
ANR	983102	Argument	core -> blocksize - i		982949	4					
ANR	983103	AdditiveExpression	core -> blocksize - i		982949	0		-			
ANR	983104	PtrMemberAccess	core -> blocksize		982949	0					
ANR	983105	Identifier	core		982949	0					
ANR	983106	Identifier	blocksize		982949	1					
ANR	983107	Identifier	i		982949	1					
ANR	983108	IfStatement	if ( ret < 0 || aop . size < 1 )		982949	2					
ANR	983109	Condition	ret < 0 || aop . size < 1	4162:6:118001:118023	982949	0	True				
ANR	983110	OrExpression	ret < 0 || aop . size < 1		982949	0		||			
ANR	983111	RelationalExpression	ret < 0		982949	0		<			
ANR	983112	Identifier	ret		982949	0					
ANR	983113	PrimaryExpression	0		982949	1					
ANR	983114	RelationalExpression	aop . size < 1		982949	1		<			
ANR	983115	MemberAccess	aop . size		982949	0					
ANR	983116	Identifier	aop		982949	0					
ANR	983117	Identifier	size		982949	1					
ANR	983118	PrimaryExpression	1		982949	1					
ANR	983119	CompoundStatement		20:31:496:496	982949	1					
ANR	983120	ContinueStatement	continue ;	4163:3:118031:118039	982949	0	True				
ANR	983121	ExpressionStatement	buf [ i ] = 1	4165:2:118047:118057	982949	3	True				
ANR	983122	AssignmentExpression	buf [ i ] = 1		982949	0		=			
ANR	983123	ArrayIndexing	buf [ i ]		982949	0					
ANR	983124	Identifier	buf		982949	0					
ANR	983125	Identifier	i		982949	1					
ANR	983126	PrimaryExpression	1		982949	1					
ANR	983127	ForStatement	for ( j = i ; j < i + aop . size ; j ++ )		982949	4					
ANR	983128	ForInit	j = i ;	4166:7:118066:118071	982949	0	True				
ANR	983129	AssignmentExpression	j = i		982949	0		=			
ANR	983130	Identifier	j		982949	0					
ANR	983131	Identifier	i		982949	1					
ANR	983132	Condition	j < i + aop . size	4166:14:118073:118088	982949	1	True				
ANR	983133	RelationalExpression	j < i + aop . size		982949	0		<			
ANR	983134	Identifier	j		982949	0					
ANR	983135	AdditiveExpression	i + aop . size		982949	1		+			
ANR	983136	Identifier	i		982949	0					
ANR	983137	MemberAccess	aop . size		982949	1					
ANR	983138	Identifier	aop		982949	0					
ANR	983139	Identifier	size		982949	1					
ANR	983140	PostIncDecOperationExpression	j ++	4166:32:118091:118093	982949	2	True				
ANR	983141	Identifier	j		982949	0					
ANR	983142	IncDec	++		982949	1					
ANR	983143	CompoundStatement		24:37:566:566	982949	3					
ANR	983144	ExpressionStatement	raw [ j ] = 1	4167:3:118101:118111	982949	0	True				
ANR	983145	AssignmentExpression	raw [ j ] = 1		982949	0		=			
ANR	983146	ArrayIndexing	raw [ j ]		982949	0					
ANR	983147	Identifier	raw		982949	0					
ANR	983148	Identifier	j		982949	1					
ANR	983149	PrimaryExpression	1		982949	1					
ANR	983150	SwitchStatement	switch ( aop . type )		982949	5					
ANR	983151	Condition	aop . type	4170:10:118184:118191	982949	0	True				
ANR	983152	MemberAccess	aop . type		982949	0					
ANR	983153	Identifier	aop		982949	0					
ANR	983154	Identifier	type		982949	1					
ANR	983155	CompoundStatement		28:20:664:664	982949	1					
ANR	983156	Label	case R_ANAL_OP_TYPE_JMP :	4171:2:118198:118221	982949	0	True				
ANR	983157	Identifier	R_ANAL_OP_TYPE_JMP		982949	0					
ANR	983158	Statement	r_core_cmdf	4172:3:118226:118236	982949	1	True				
ANR	983159	Statement	(	4172:15:118238:118238	982949	2	True				
ANR	983160	Statement	core	4172:16:118239:118242	982949	3	True				
ANR	983161	Statement	","	4172:20:118243:118243	982949	4	True				
ANR	983162	Statement	"""pD %d @ 0x%08"""	4172:22:118245:118259	982949	5	True				
ANR	983163	Statement	PFMT64x	4172:37:118260:118266	982949	6	True				
ANR	983164	Statement	","	4172:44:118267:118267	982949	7	True				
ANR	983165	Statement	i	4172:46:118269:118269	982949	8	True				
ANR	983166	Statement	+	4172:48:118271:118271	982949	9	True				
ANR	983167	Statement	aop	4172:50:118273:118275	982949	10	True				
ANR	983168	Statement	.	4172:53:118276:118276	982949	11	True				
ANR	983169	Statement	size	4172:54:118277:118280	982949	12	True				
ANR	983170	Statement	-	4172:59:118282:118282	982949	13	True				
ANR	983171	Statement	base	4172:61:118284:118287	982949	14	True				
ANR	983172	Statement	","	4172:65:118288:118288	982949	15	True				
ANR	983173	Statement	addr	4172:67:118290:118293	982949	16	True				
ANR	983174	Statement	+	4172:72:118295:118295	982949	17	True				
ANR	983175	Statement	base	4172:74:118297:118300	982949	18	True				
ANR	983176	Statement	)	4172:78:118301:118301	982949	19	True				
ANR	983177	ExpressionStatement		4172:79:118302:118302	982949	20	True				
ANR	983178	ExpressionStatement	i = aop . jump - addr - 1	4173:3:118307:118330	982949	21	True				
ANR	983179	AssignmentExpression	i = aop . jump - addr - 1		982949	0		=			
ANR	983180	Identifier	i		982949	0					
ANR	983181	AdditiveExpression	aop . jump - addr - 1		982949	1		-			
ANR	983182	MemberAccess	aop . jump		982949	0					
ANR	983183	Identifier	aop		982949	0					
ANR	983184	Identifier	jump		982949	1					
ANR	983185	AdditiveExpression	addr - 1		982949	1		-			
ANR	983186	Identifier	addr		982949	0					
ANR	983187	PrimaryExpression	1		982949	1					
ANR	983188	ExpressionStatement	base = i + 1	4174:3:118335:118347	982949	22	True				
ANR	983189	AssignmentExpression	base = i + 1		982949	0		=			
ANR	983190	Identifier	base		982949	0					
ANR	983191	AdditiveExpression	i + 1		982949	1		+			
ANR	983192	Identifier	i		982949	0					
ANR	983193	PrimaryExpression	1		982949	1					
ANR	983194	ExpressionStatement	count --	4175:3:118352:118359	982949	23	True				
ANR	983195	PostIncDecOperationExpression	count --		982949	0					
ANR	983196	Identifier	count		982949	0					
ANR	983197	IncDec	--		982949	1					
ANR	983198	ContinueStatement	continue ;	4176:3:118364:118372	982949	24	True				
ANR	983199	BreakStatement	break ;	4177:3:118377:118382	982949	25	True				
ANR	983200	Label	case R_ANAL_OP_TYPE_CJMP :	4179:2:118392:118416	982949	26	True				
ANR	983201	Identifier	R_ANAL_OP_TYPE_CJMP		982949	0					
ANR	983202	IfStatement	if ( aop . jump > addr + i )		982949	27					
ANR	983203	Condition	aop . jump > addr + i	4180:7:118425:118443	982949	0	True				
ANR	983204	RelationalExpression	aop . jump > addr + i		982949	0		>			
ANR	983205	MemberAccess	aop . jump		982949	0					
ANR	983206	Identifier	aop		982949	0					
ANR	983207	Identifier	jump		982949	1					
ANR	983208	AdditiveExpression	addr + i		982949	1		+			
ANR	983209	Identifier	addr		982949	0					
ANR	983210	Identifier	i		982949	1					
ANR	983211	CompoundStatement		38:28:916:916	982949	1					
ANR	983212	IfStatement	if ( pushes > 500 )		982949	0					
ANR	983213	Condition	pushes > 500	4181:8:118456:118467	982949	0	True				
ANR	983214	RelationalExpression	pushes > 500		982949	0		>			
ANR	983215	Identifier	pushes		982949	0					
ANR	983216	PrimaryExpression	500		982949	1					
ANR	983217	CompoundStatement		39:22:940:940	982949	1					
ANR	983218	ExpressionStatement	"eprintf ( ""Too deep\\n"" )"	4182:5:118477:118499	982949	0	True				
ANR	983219	CallExpression	"eprintf ( ""Too deep\\n"" )"		982949	0					
ANR	983220	Callee	eprintf		982949	0					
ANR	983221	Identifier	eprintf		982949	0					
ANR	983222	ArgumentList	"""Too deep\\n"""		982949	1					
ANR	983223	Argument	"""Too deep\\n"""		982949	0					
ANR	983224	PrimaryExpression	"""Too deep\\n"""		982949	0					
ANR	983225	ExpressionStatement	push [ pushes ++ ] = i + aop . size	4184:4:118511:118540	982949	1	True				
ANR	983226	AssignmentExpression	push [ pushes ++ ] = i + aop . size		982949	0		=			
ANR	983227	ArrayIndexing	push [ pushes ++ ]		982949	0					
ANR	983228	Identifier	push		982949	0					
ANR	983229	PostIncDecOperationExpression	pushes ++		982949	1					
ANR	983230	Identifier	pushes		982949	0					
ANR	983231	IncDec	++		982949	1					
ANR	983232	AdditiveExpression	i + aop . size		982949	1		+			
ANR	983233	Identifier	i		982949	0					
ANR	983234	MemberAccess	aop . size		982949	1					
ANR	983235	Identifier	aop		982949	0					
ANR	983236	Identifier	size		982949	1					
ANR	983237	ExpressionStatement	i = aop . jump - addr - 1	4185:4:118546:118569	982949	2	True				
ANR	983238	AssignmentExpression	i = aop . jump - addr - 1		982949	0		=			
ANR	983239	Identifier	i		982949	0					
ANR	983240	AdditiveExpression	aop . jump - addr - 1		982949	1		-			
ANR	983241	MemberAccess	aop . jump		982949	0					
ANR	983242	Identifier	aop		982949	0					
ANR	983243	Identifier	jump		982949	1					
ANR	983244	AdditiveExpression	addr - 1		982949	1		-			
ANR	983245	Identifier	addr		982949	0					
ANR	983246	PrimaryExpression	1		982949	1					
ANR	983247	ContinueStatement	continue ;	4186:4:118575:118583	982949	3	True				
ANR	983248	BreakStatement	break ;	4188:3:118593:118598	982949	28	True				
ANR	983249	Label	case R_ANAL_OP_TYPE_UCJMP :	4190:2:118609:118634	982949	29	True				
ANR	983250	Identifier	R_ANAL_OP_TYPE_UCJMP		982949	0					
ANR	983251	BreakStatement	break ;	4191:3:118639:118644	982949	30	True				
ANR	983252	ExpressionStatement	i += aop . size - 1	4193:2:118652:118669	982949	6	True				
ANR	983253	AssignmentExpression	i += aop . size - 1		982949	0		+=			
ANR	983254	Identifier	i		982949	0					
ANR	983255	AdditiveExpression	aop . size - 1		982949	1		-			
ANR	983256	MemberAccess	aop . size		982949	0					
ANR	983257	Identifier	aop		982949	0					
ANR	983258	Identifier	size		982949	1					
ANR	983259	PrimaryExpression	1		982949	1					
ANR	983260	IfStatement	if ( base < i )		982949	11					
ANR	983261	Condition	base < i	4196:5:118685:118692	982949	0	True				
ANR	983262	RelationalExpression	base < i		982949	0		<			
ANR	983263	Identifier	base		982949	0					
ANR	983264	Identifier	i		982949	1					
ANR	983265	CompoundStatement		54:15:1165:1165	982949	1					
ANR	983266	ExpressionStatement	"r_cons_printf ( ""base:\\n"" )"	4197:0:118697:118722	982949	0	True				
ANR	983267	CallExpression	"r_cons_printf ( ""base:\\n"" )"		982949	0					
ANR	983268	Callee	r_cons_printf		982949	0					
ANR	983269	Identifier	r_cons_printf		982949	0					
ANR	983270	ArgumentList	"""base:\\n"""		982949	1					
ANR	983271	Argument	"""base:\\n"""		982949	0					
ANR	983272	PrimaryExpression	"""base:\\n"""		982949	0					
ANR	983273	Statement	r_core_cmdf	4198:2:118726:118736	982949	1	True				
ANR	983274	Statement	(	4198:14:118738:118738	982949	2	True				
ANR	983275	Statement	core	4198:15:118739:118742	982949	3	True				
ANR	983276	Statement	","	4198:19:118743:118743	982949	4	True				
ANR	983277	Statement	"""pD %d @ 0x%08"""	4198:21:118745:118759	982949	5	True				
ANR	983278	Statement	PFMT64x	4198:36:118760:118766	982949	6	True				
ANR	983279	Statement	","	4198:43:118767:118767	982949	7	True				
ANR	983280	Statement	i	4198:45:118769:118769	982949	8	True				
ANR	983281	Statement	-	4198:47:118771:118771	982949	9	True				
ANR	983282	Statement	base	4198:49:118773:118776	982949	10	True				
ANR	983283	Statement	","	4198:53:118777:118777	982949	11	True				
ANR	983284	Statement	addr	4198:55:118779:118782	982949	12	True				
ANR	983285	Statement	+	4198:60:118784:118784	982949	13	True				
ANR	983286	Statement	base	4198:62:118786:118789	982949	14	True				
ANR	983287	Statement	)	4198:66:118790:118790	982949	15	True				
ANR	983288	ExpressionStatement		4198:67:118791:118791	982949	16	True				
ANR	983289	ExpressionStatement	"r_cons_printf ( ""base:\\n"" )"	4199:0:118828:118853	982949	17	True				
ANR	983290	CallExpression	"r_cons_printf ( ""base:\\n"" )"		982949	0					
ANR	983291	Callee	r_cons_printf		982949	0					
ANR	983292	Identifier	r_cons_printf		982949	0					
ANR	983293	ArgumentList	"""base:\\n"""		982949	1					
ANR	983294	Argument	"""base:\\n"""		982949	0					
ANR	983295	PrimaryExpression	"""base:\\n"""		982949	0					
ANR	983296	IdentifierDeclStatement	int p ;	4204:1:118880:118885	982949	12	True				
ANR	983297	IdentifierDecl	p		982949	0					
ANR	983298	IdentifierDeclType	int		982949	0					
ANR	983299	Identifier	p		982949	1					
ANR	983300	ForStatement	for ( p = 0 ; p < pushes ; p ++ )		982949	13					
ANR	983301	ForInit	p = 0 ;	4205:6:118893:118898	982949	0	True				
ANR	983302	AssignmentExpression	p = 0		982949	0		=			
ANR	983303	Identifier	p		982949	0					
ANR	983304	PrimaryExpression	0		982949	1					
ANR	983305	Condition	p < pushes	4205:13:118900:118907	982949	1	True				
ANR	983306	RelationalExpression	p < pushes		982949	0		<			
ANR	983307	Identifier	p		982949	0					
ANR	983308	Identifier	pushes		982949	1					
ANR	983309	PostIncDecOperationExpression	p ++	4205:23:118910:118912	982949	2	True				
ANR	983310	Identifier	p		982949	0					
ANR	983311	IncDec	++		982949	1					
ANR	983312	CompoundStatement		63:28:1385:1385	982949	3					
ANR	983313	Statement	r_cons_printf	4206:2:118919:118931	982949	0	True				
ANR	983314	Statement	(	4206:16:118933:118933	982949	1	True				
ANR	983315	Statement	"""PUSH 0x%08"""	4206:17:118934:118945	982949	2	True				
ANR	983316	Statement	PFMT64x	4206:29:118946:118952	982949	3	True				
ANR	983317	Statement	"""\\n"""	4206:36:118953:118956	982949	4	True				
ANR	983318	Statement	","	4206:40:118957:118957	982949	5	True				
ANR	983319	Statement	addr	4206:42:118959:118962	982949	6	True				
ANR	983320	Statement	+	4206:47:118964:118964	982949	7	True				
ANR	983321	Statement	push	4206:49:118966:118969	982949	8	True				
ANR	983322	Statement	[	4206:53:118970:118970	982949	9	True				
ANR	983323	Statement	p	4206:54:118971:118971	982949	10	True				
ANR	983324	Statement	]	4206:55:118972:118972	982949	11	True				
ANR	983325	Statement	)	4206:56:118973:118973	982949	12	True				
ANR	983326	ExpressionStatement		4206:57:118974:118974	982949	13	True				
ANR	983327	ForStatement	for ( i = push [ p ] ; i < core -> blocksize ; i ++ )		982949	14					
ANR	983328	ForInit	i = push [ p ] ;	4207:7:118983:118994	982949	0	True				
ANR	983329	AssignmentExpression	i = push [ p ]		982949	0		=			
ANR	983330	Identifier	i		982949	0					
ANR	983331	ArrayIndexing	push [ p ]		982949	1					
ANR	983332	Identifier	push		982949	0					
ANR	983333	Identifier	p		982949	1					
ANR	983334	Condition	i < core -> blocksize	4207:20:118996:119014	982949	1	True				
ANR	983335	RelationalExpression	i < core -> blocksize		982949	0		<			
ANR	983336	Identifier	i		982949	0					
ANR	983337	PtrMemberAccess	core -> blocksize		982949	1					
ANR	983338	Identifier	core		982949	0					
ANR	983339	Identifier	blocksize		982949	1					
ANR	983340	PostIncDecOperationExpression	i ++	4207:41:119017:119019	982949	2	True				
ANR	983341	Identifier	i		982949	0					
ANR	983342	IncDec	++		982949	1					
ANR	983343	CompoundStatement		65:46:1492:1492	982949	3					
ANR	983344	IfStatement	if ( buf [ i ] )		982949	0					
ANR	983345	Condition	buf [ i ]	4208:7:119031:119036	982949	0	True				
ANR	983346	ArrayIndexing	buf [ i ]		982949	0					
ANR	983347	Identifier	buf		982949	0					
ANR	983348	Identifier	i		982949	1					
ANR	983349	CompoundStatement		66:15:1509:1509	982949	1					
ANR	983350	BreakStatement	break ;	4209:4:119045:119050	982949	0	True				
ANR	983351	ExpressionStatement	buf [ i ] = 1	4211:3:119060:119070	982949	1	True				
ANR	983352	AssignmentExpression	buf [ i ] = 1		982949	0		=			
ANR	983353	ArrayIndexing	buf [ i ]		982949	0					
ANR	983354	Identifier	buf		982949	0					
ANR	983355	Identifier	i		982949	1					
ANR	983356	PrimaryExpression	1		982949	1					
ANR	983357	ExpressionStatement	r_anal_op_fini ( & aop )	4212:3:119075:119096	982949	2	True				
ANR	983358	CallExpression	r_anal_op_fini ( & aop )		982949	0					
ANR	983359	Callee	r_anal_op_fini		982949	0					
ANR	983360	Identifier	r_anal_op_fini		982949	0					
ANR	983361	ArgumentList	& aop		982949	1					
ANR	983362	Argument	& aop		982949	0					
ANR	983363	UnaryOperationExpression	& aop		982949	0					
ANR	983364	UnaryOperator	&		982949	0					
ANR	983365	Identifier	aop		982949	1					
ANR	983366	ExpressionStatement	"ret = r_anal_op ( core -> anal , & aop , addr + i , core -> block + i , core -> blocksize - i )"	4213:3:119101:119184	982949	3	True				
ANR	983367	AssignmentExpression	"ret = r_anal_op ( core -> anal , & aop , addr + i , core -> block + i , core -> blocksize - i )"		982949	0		=			
ANR	983368	Identifier	ret		982949	0					
ANR	983369	CallExpression	"r_anal_op ( core -> anal , & aop , addr + i , core -> block + i , core -> blocksize - i )"		982949	1					
ANR	983370	Callee	r_anal_op		982949	0					
ANR	983371	Identifier	r_anal_op		982949	0					
ANR	983372	ArgumentList	core -> anal		982949	1					
ANR	983373	Argument	core -> anal		982949	0					
ANR	983374	PtrMemberAccess	core -> anal		982949	0					
ANR	983375	Identifier	core		982949	0					
ANR	983376	Identifier	anal		982949	1					
ANR	983377	Argument	& aop		982949	1					
ANR	983378	UnaryOperationExpression	& aop		982949	0					
ANR	983379	UnaryOperator	&		982949	0					
ANR	983380	Identifier	aop		982949	1					
ANR	983381	Argument	addr + i		982949	2					
ANR	983382	AdditiveExpression	addr + i		982949	0		+			
ANR	983383	Identifier	addr		982949	0					
ANR	983384	Identifier	i		982949	1					
ANR	983385	Argument	core -> block + i		982949	3					
ANR	983386	AdditiveExpression	core -> block + i		982949	0		+			
ANR	983387	PtrMemberAccess	core -> block		982949	0					
ANR	983388	Identifier	core		982949	0					
ANR	983389	Identifier	block		982949	1					
ANR	983390	Identifier	i		982949	1					
ANR	983391	Argument	core -> blocksize - i		982949	4					
ANR	983392	AdditiveExpression	core -> blocksize - i		982949	0		-			
ANR	983393	PtrMemberAccess	core -> blocksize		982949	0					
ANR	983394	Identifier	core		982949	0					
ANR	983395	Identifier	blocksize		982949	1					
ANR	983396	Identifier	i		982949	1					
ANR	983397	IfStatement	if ( ret < 0 || aop . size < 1 )		982949	4					
ANR	983398	Condition	ret < 0 || aop . size < 1	4214:7:119193:119215	982949	0	True				
ANR	983399	OrExpression	ret < 0 || aop . size < 1		982949	0		||			
ANR	983400	RelationalExpression	ret < 0		982949	0		<			
ANR	983401	Identifier	ret		982949	0					
ANR	983402	PrimaryExpression	0		982949	1					
ANR	983403	RelationalExpression	aop . size < 1		982949	1		<			
ANR	983404	MemberAccess	aop . size		982949	0					
ANR	983405	Identifier	aop		982949	0					
ANR	983406	Identifier	size		982949	1					
ANR	983407	PrimaryExpression	1		982949	1					
ANR	983408	CompoundStatement		72:32:1688:1688	982949	1					
ANR	983409	ContinueStatement	continue ;	4215:4:119224:119232	982949	0	True				
ANR	983410	SwitchStatement	switch ( aop . type )		982949	5					
ANR	983411	Condition	aop . type	4218:11:119309:119316	982949	0	True				
ANR	983412	MemberAccess	aop . type		982949	0					
ANR	983413	Identifier	aop		982949	0					
ANR	983414	Identifier	type		982949	1					
ANR	983415	CompoundStatement		76:21:1789:1789	982949	1					
ANR	983416	Label	case R_ANAL_OP_TYPE_JMP :	4219:3:119324:119347	982949	0	True				
ANR	983417	Identifier	R_ANAL_OP_TYPE_JMP		982949	0					
ANR	983418	IfStatement	if ( aop . jump > addr + i )		982949	1					
ANR	983419	Condition	aop . jump > addr + i	4220:8:119357:119375	982949	0	True				
ANR	983420	RelationalExpression	aop . jump > addr + i		982949	0		>			
ANR	983421	MemberAccess	aop . jump		982949	0					
ANR	983422	Identifier	aop		982949	0					
ANR	983423	Identifier	jump		982949	1					
ANR	983424	AdditiveExpression	addr + i		982949	1		+			
ANR	983425	Identifier	addr		982949	0					
ANR	983426	Identifier	i		982949	1					
ANR	983427	CompoundStatement		78:29:1848:1848	982949	1					
ANR	983428	Statement	r_core_cmdf	4221:5:119385:119395	982949	0	True				
ANR	983429	Statement	(	4221:17:119397:119397	982949	1	True				
ANR	983430	Statement	core	4221:18:119398:119401	982949	2	True				
ANR	983431	Statement	","	4221:22:119402:119402	982949	3	True				
ANR	983432	Statement	"""pD %d @ 0x%08"""	4221:24:119404:119418	982949	4	True				
ANR	983433	Statement	PFMT64x	4221:39:119419:119425	982949	5	True				
ANR	983434	Statement	","	4221:46:119426:119426	982949	6	True				
ANR	983435	Statement	i	4221:48:119428:119428	982949	7	True				
ANR	983436	Statement	+	4221:50:119430:119430	982949	8	True				
ANR	983437	Statement	aop	4221:52:119432:119434	982949	9	True				
ANR	983438	Statement	.	4221:55:119435:119435	982949	10	True				
ANR	983439	Statement	size	4221:56:119436:119439	982949	11	True				
ANR	983440	Statement	-	4221:61:119441:119441	982949	12	True				
ANR	983441	Statement	base	4221:63:119443:119446	982949	13	True				
ANR	983442	Statement	","	4221:67:119447:119447	982949	14	True				
ANR	983443	Statement	addr	4221:69:119449:119452	982949	15	True				
ANR	983444	Statement	+	4221:74:119454:119454	982949	16	True				
ANR	983445	Statement	base	4221:76:119456:119459	982949	17	True				
ANR	983446	Statement	)	4221:80:119460:119460	982949	18	True				
ANR	983447	ExpressionStatement		4221:81:119461:119461	982949	19	True				
ANR	983448	ExpressionStatement	i = aop . jump - addr - 1	4222:5:119468:119491	982949	20	True				
ANR	983449	AssignmentExpression	i = aop . jump - addr - 1		982949	0		=			
ANR	983450	Identifier	i		982949	0					
ANR	983451	AdditiveExpression	aop . jump - addr - 1		982949	1		-			
ANR	983452	MemberAccess	aop . jump		982949	0					
ANR	983453	Identifier	aop		982949	0					
ANR	983454	Identifier	jump		982949	1					
ANR	983455	AdditiveExpression	addr - 1		982949	1		-			
ANR	983456	Identifier	addr		982949	0					
ANR	983457	PrimaryExpression	1		982949	1					
ANR	983458	ExpressionStatement	base = i + 1	4223:5:119498:119510	982949	21	True				
ANR	983459	AssignmentExpression	base = i + 1		982949	0		=			
ANR	983460	Identifier	base		982949	0					
ANR	983461	AdditiveExpression	i + 1		982949	1		+			
ANR	983462	Identifier	i		982949	0					
ANR	983463	PrimaryExpression	1		982949	1					
ANR	983464	ContinueStatement	continue ;	4224:5:119517:119525	982949	22	True				
ANR	983465	BreakStatement	break ;	4226:4:119537:119542	982949	2	True				
ANR	983466	Label	case R_ANAL_OP_TYPE_CJMP :	4228:3:119553:119577	982949	3	True				
ANR	983467	Identifier	R_ANAL_OP_TYPE_CJMP		982949	0					
ANR	983468	IfStatement	if ( aop . jump > addr + i )		982949	4					
ANR	983469	Condition	aop . jump > addr + i	4229:8:119587:119605	982949	0	True				
ANR	983470	RelationalExpression	aop . jump > addr + i		982949	0		>			
ANR	983471	MemberAccess	aop . jump		982949	0					
ANR	983472	Identifier	aop		982949	0					
ANR	983473	Identifier	jump		982949	1					
ANR	983474	AdditiveExpression	addr + i		982949	1		+			
ANR	983475	Identifier	addr		982949	0					
ANR	983476	Identifier	i		982949	1					
ANR	983477	CompoundStatement		87:29:2078:2078	982949	1					
ANR	983478	IfStatement	if ( pushes > 500 )		982949	0					
ANR	983479	Condition	pushes > 500	4230:9:119619:119630	982949	0	True				
ANR	983480	RelationalExpression	pushes > 500		982949	0		>			
ANR	983481	Identifier	pushes		982949	0					
ANR	983482	PrimaryExpression	500		982949	1					
ANR	983483	CompoundStatement		88:23:2103:2103	982949	1					
ANR	983484	ExpressionStatement	"eprintf ( ""Too deep\\n"" )"	4231:6:119641:119663	982949	0	True				
ANR	983485	CallExpression	"eprintf ( ""Too deep\\n"" )"		982949	0					
ANR	983486	Callee	eprintf		982949	0					
ANR	983487	Identifier	eprintf		982949	0					
ANR	983488	ArgumentList	"""Too deep\\n"""		982949	1					
ANR	983489	Argument	"""Too deep\\n"""		982949	0					
ANR	983490	PrimaryExpression	"""Too deep\\n"""		982949	0					
ANR	983491	ExpressionStatement	push [ pushes ++ ] = i + aop . size	4233:5:119677:119706	982949	1	True				
ANR	983492	AssignmentExpression	push [ pushes ++ ] = i + aop . size		982949	0		=			
ANR	983493	ArrayIndexing	push [ pushes ++ ]		982949	0					
ANR	983494	Identifier	push		982949	0					
ANR	983495	PostIncDecOperationExpression	pushes ++		982949	1					
ANR	983496	Identifier	pushes		982949	0					
ANR	983497	IncDec	++		982949	1					
ANR	983498	AdditiveExpression	i + aop . size		982949	1		+			
ANR	983499	Identifier	i		982949	0					
ANR	983500	MemberAccess	aop . size		982949	1					
ANR	983501	Identifier	aop		982949	0					
ANR	983502	Identifier	size		982949	1					
ANR	983503	ExpressionStatement	i = aop . jump - addr - 1	4234:5:119713:119736	982949	2	True				
ANR	983504	AssignmentExpression	i = aop . jump - addr - 1		982949	0		=			
ANR	983505	Identifier	i		982949	0					
ANR	983506	AdditiveExpression	aop . jump - addr - 1		982949	1		-			
ANR	983507	MemberAccess	aop . jump		982949	0					
ANR	983508	Identifier	aop		982949	0					
ANR	983509	Identifier	jump		982949	1					
ANR	983510	AdditiveExpression	addr - 1		982949	1		-			
ANR	983511	Identifier	addr		982949	0					
ANR	983512	PrimaryExpression	1		982949	1					
ANR	983513	ContinueStatement	continue ;	4235:5:119743:119751	982949	3	True				
ANR	983514	BreakStatement	break ;	4237:4:119763:119768	982949	5	True				
ANR	983515	Label	case R_ANAL_OP_TYPE_UCJMP :	4239:3:119780:119805	982949	6	True				
ANR	983516	Identifier	R_ANAL_OP_TYPE_UCJMP		982949	0					
ANR	983517	BreakStatement	break ;	4240:4:119811:119816	982949	7	True				
ANR	983518	ExpressionStatement	i += aop . size - 1	4242:3:119826:119843	982949	6	True				
ANR	983519	AssignmentExpression	i += aop . size - 1		982949	0		+=			
ANR	983520	Identifier	i		982949	0					
ANR	983521	AdditiveExpression	aop . size - 1		982949	1		-			
ANR	983522	MemberAccess	aop . size		982949	0					
ANR	983523	Identifier	aop		982949	0					
ANR	983524	Identifier	size		982949	1					
ANR	983525	PrimaryExpression	1		982949	1					
ANR	983526	ForStatement	for ( i = 0 ; i < core -> blocksize ; i ++ )		982949	14					
ANR	983527	ForInit	i = 0 ;	4247:6:119882:119887	982949	0	True				
ANR	983528	AssignmentExpression	i = 0		982949	0		=			
ANR	983529	Identifier	i		982949	0					
ANR	983530	PrimaryExpression	0		982949	1					
ANR	983531	Condition	i < core -> blocksize	4247:13:119889:119906	982949	1	True				
ANR	983532	RelationalExpression	i < core -> blocksize		982949	0		<			
ANR	983533	Identifier	i		982949	0					
ANR	983534	PtrMemberAccess	core -> blocksize		982949	1					
ANR	983535	Identifier	core		982949	0					
ANR	983536	Identifier	blocksize		982949	1					
ANR	983537	PostIncDecOperationExpression	i ++	4247:33:119909:119911	982949	2	True				
ANR	983538	Identifier	i		982949	0					
ANR	983539	IncDec	++		982949	1					
ANR	983540	CompoundStatement		105:38:2384:2384	982949	3					
ANR	983541	IfStatement	if ( ! buf [ i ] )		982949	0					
ANR	983542	Condition	! buf [ i ]	4248:6:119922:119928	982949	0	True				
ANR	983543	UnaryOperationExpression	! buf [ i ]		982949	0					
ANR	983544	UnaryOperator	!		982949	0					
ANR	983545	ArrayIndexing	buf [ i ]		982949	1					
ANR	983546	Identifier	buf		982949	0					
ANR	983547	Identifier	i		982949	1					
ANR	983548	CompoundStatement		106:15:2401:2401	982949	1					
ANR	983549	ContinueStatement	continue ;	4249:3:119936:119944	982949	0	True				
ANR	983550	Statement	r_core_cmdf	4251:2:119952:119962	982949	1	True				
ANR	983551	Statement	(	4251:14:119964:119964	982949	2	True				
ANR	983552	Statement	core	4251:15:119965:119968	982949	3	True				
ANR	983553	Statement	","	4251:19:119969:119969	982949	4	True				
ANR	983554	Statement	"""pd 1 @ 0x%08"""	4251:21:119971:119984	982949	5	True				
ANR	983555	Statement	PFMT64x	4251:35:119985:119991	982949	6	True				
ANR	983556	Statement	","	4251:42:119992:119992	982949	7	True				
ANR	983557	Statement	addr	4251:44:119994:119997	982949	8	True				
ANR	983558	Statement	+	4251:49:119999:119999	982949	9	True				
ANR	983559	Statement	i	4251:51:120001:120001	982949	10	True				
ANR	983560	Statement	)	4251:52:120002:120002	982949	11	True				
ANR	983561	ExpressionStatement		4251:53:120003:120003	982949	12	True				
ANR	983562	ExpressionStatement	r_anal_op_fini ( & aop )	4252:2:120007:120028	982949	13	True				
ANR	983563	CallExpression	r_anal_op_fini ( & aop )		982949	0					
ANR	983564	Callee	r_anal_op_fini		982949	0					
ANR	983565	Identifier	r_anal_op_fini		982949	0					
ANR	983566	ArgumentList	& aop		982949	1					
ANR	983567	Argument	& aop		982949	0					
ANR	983568	UnaryOperationExpression	& aop		982949	0					
ANR	983569	UnaryOperator	&		982949	0					
ANR	983570	Identifier	aop		982949	1					
ANR	983571	ExpressionStatement	"ret = r_anal_op ( core -> anal , & aop , addr + i , core -> block + i , core -> blocksize - i )"	4253:2:120032:120115	982949	14	True				
ANR	983572	AssignmentExpression	"ret = r_anal_op ( core -> anal , & aop , addr + i , core -> block + i , core -> blocksize - i )"		982949	0		=			
ANR	983573	Identifier	ret		982949	0					
ANR	983574	CallExpression	"r_anal_op ( core -> anal , & aop , addr + i , core -> block + i , core -> blocksize - i )"		982949	1					
ANR	983575	Callee	r_anal_op		982949	0					
ANR	983576	Identifier	r_anal_op		982949	0					
ANR	983577	ArgumentList	core -> anal		982949	1					
ANR	983578	Argument	core -> anal		982949	0					
ANR	983579	PtrMemberAccess	core -> anal		982949	0					
ANR	983580	Identifier	core		982949	0					
ANR	983581	Identifier	anal		982949	1					
ANR	983582	Argument	& aop		982949	1					
ANR	983583	UnaryOperationExpression	& aop		982949	0					
ANR	983584	UnaryOperator	&		982949	0					
ANR	983585	Identifier	aop		982949	1					
ANR	983586	Argument	addr + i		982949	2					
ANR	983587	AdditiveExpression	addr + i		982949	0		+			
ANR	983588	Identifier	addr		982949	0					
ANR	983589	Identifier	i		982949	1					
ANR	983590	Argument	core -> block + i		982949	3					
ANR	983591	AdditiveExpression	core -> block + i		982949	0		+			
ANR	983592	PtrMemberAccess	core -> block		982949	0					
ANR	983593	Identifier	core		982949	0					
ANR	983594	Identifier	block		982949	1					
ANR	983595	Identifier	i		982949	1					
ANR	983596	Argument	core -> blocksize - i		982949	4					
ANR	983597	AdditiveExpression	core -> blocksize - i		982949	0		-			
ANR	983598	PtrMemberAccess	core -> blocksize		982949	0					
ANR	983599	Identifier	core		982949	0					
ANR	983600	Identifier	blocksize		982949	1					
ANR	983601	Identifier	i		982949	1					
ANR	983602	Statement	i	4254:2:120119:120119	982949	15	True				
ANR	983603	Statement	+=	4254:4:120121:120122	982949	16	True				
ANR	983604	Statement	aop	4254:7:120124:120126	982949	17	True				
ANR	983605	Statement	.	4254:10:120127:120127	982949	18	True				
ANR	983606	Statement	size	4254:11:120128:120131	982949	19	True				
ANR	983607	ReturnType	static void		982949	1					
ANR	983608	Identifier	disasm_recursive_old		982949	2					
ANR	983609	ParameterList	"RCore * core , ut64 addr , char type_print"		982949	3					
ANR	983610	Parameter	RCore * core	4143:33:117488:117498	982949	0	True				
ANR	983611	ParameterType	RCore *		982949	0					
ANR	983612	Identifier	core		982949	1					
ANR	983613	Parameter	ut64 addr	4143:46:117501:117509	982949	1	True				
ANR	983614	ParameterType	ut64		982949	0					
ANR	983615	Identifier	addr		982949	1					
ANR	983616	Parameter	char type_print	4143:57:117512:117526	982949	2	True				
ANR	983617	ParameterType	char		982949	0					
ANR	983618	Identifier	type_print		982949	1					
ANR	983619	CFGEntryNode	ENTRY		982949		True				
ANR	983620	CFGExitNode	EXIT		982949		True				
ANR	983621	Symbol	aop . jump		982949						
ANR	983622	Symbol	aop		982949						
ANR	983623	Symbol	* core		982949						
ANR	983624	Symbol	aop . type		982949						
ANR	983625	Symbol	calloc		982949						
ANR	983626	Symbol	pushes		982949						
ANR	983627	Symbol	core -> anal		982949						
ANR	983628	Symbol	* raw		982949						
ANR	983629	Symbol	aop . size		982949						
ANR	983630	Symbol	addr		982949						
ANR	983631	Symbol	type_print		982949						
ANR	983632	Symbol	r_anal_op		982949						
ANR	983633	Symbol	ret		982949						
ANR	983634	Symbol	core -> blocksize		982949						
ANR	983635	Symbol	* buf		982949						
ANR	983636	Symbol	core -> block		982949						
ANR	983637	Symbol	count		982949						
ANR	983638	Symbol	i		982949						
ANR	983639	Symbol	raw		982949						
ANR	983640	Symbol	j		982949						
ANR	983641	Symbol	push		982949						
ANR	983642	Symbol	& aop		982949						
ANR	983643	Symbol	p		982949						
ANR	983644	Symbol	core		982949						
ANR	983645	Symbol	buf		982949						
ANR	983646	Symbol	* i		982949						
ANR	983647	Symbol	* push		982949						
ANR	983648	Symbol	* j		982949						
ANR	983649	Symbol	* p		982949						
ANR	983650	Symbol	base		982949						
ANR	983651	Function	disasm_until_ret	4260:0:120153:121516							
ANR	983652	FunctionDef	"disasm_until_ret (RCore * core , ut64 addr , char type_print , const char * arg)"		983651	0					
ANR	983653	CompoundStatement		4260:87:120240:121516	983651	0					
ANR	983654	IdentifierDeclStatement	int p = 0 ;	4261:1:120243:120252	983651	0	True				
ANR	983655	IdentifierDecl	p = 0		983651	0					
ANR	983656	IdentifierDeclType	int		983651	0					
ANR	983657	Identifier	p		983651	1					
ANR	983658	AssignmentExpression	p = 0		983651	2		=			
ANR	983659	Identifier	p		983651	0					
ANR	983660	PrimaryExpression	0		983651	1					
ANR	983661	IdentifierDeclStatement	const bool show_color = core -> print -> flags & R_PRINT_FLAGS_COLOR ;	4262:1:120255:120319	983651	1	True				
ANR	983662	IdentifierDecl	show_color = core -> print -> flags & R_PRINT_FLAGS_COLOR		983651	0					
ANR	983663	IdentifierDeclType	const bool		983651	0					
ANR	983664	Identifier	show_color		983651	1					
ANR	983665	AssignmentExpression	show_color = core -> print -> flags & R_PRINT_FLAGS_COLOR		983651	2		=			
ANR	983666	Identifier	show_color		983651	0					
ANR	983667	BitAndExpression	core -> print -> flags & R_PRINT_FLAGS_COLOR		983651	1		&			
ANR	983668	PtrMemberAccess	core -> print -> flags		983651	0					
ANR	983669	PtrMemberAccess	core -> print		983651	0					
ANR	983670	Identifier	core		983651	0					
ANR	983671	Identifier	print		983651	1					
ANR	983672	Identifier	flags		983651	1					
ANR	983673	Identifier	R_PRINT_FLAGS_COLOR		983651	1					
ANR	983674	IdentifierDeclStatement	"int i , limit = 1024 ;"	4263:1:120322:120341	983651	2	True				
ANR	983675	IdentifierDecl	i		983651	0					
ANR	983676	IdentifierDeclType	int		983651	0					
ANR	983677	Identifier	i		983651	1					
ANR	983678	IdentifierDecl	limit = 1024		983651	1					
ANR	983679	IdentifierDeclType	int		983651	0					
ANR	983680	Identifier	limit		983651	1					
ANR	983681	AssignmentExpression	limit = 1024		983651	2		=			
ANR	983682	Identifier	limit		983651	0					
ANR	983683	PrimaryExpression	1024		983651	1					
ANR	983684	IfStatement	if ( arg && * arg && arg [ 1 ] )		983651	3					
ANR	983685	Condition	arg && * arg && arg [ 1 ]	4264:5:120348:120368	983651	0	True				
ANR	983686	AndExpression	arg && * arg && arg [ 1 ]		983651	0		&&			
ANR	983687	Identifier	arg		983651	0					
ANR	983688	AndExpression	* arg && arg [ 1 ]		983651	1		&&			
ANR	983689	UnaryOperationExpression	* arg		983651	0					
ANR	983690	UnaryOperator	*		983651	0					
ANR	983691	Identifier	arg		983651	1					
ANR	983692	ArrayIndexing	arg [ 1 ]		983651	1					
ANR	983693	Identifier	arg		983651	0					
ANR	983694	PrimaryExpression	1		983651	1					
ANR	983695	CompoundStatement		5:28:130:130	983651	1					
ANR	983696	ExpressionStatement	"limit = r_num_math ( core -> num , arg + 1 )"	4265:2:120375:120414	983651	0	True				
ANR	983697	AssignmentExpression	"limit = r_num_math ( core -> num , arg + 1 )"		983651	0		=			
ANR	983698	Identifier	limit		983651	0					
ANR	983699	CallExpression	"r_num_math ( core -> num , arg + 1 )"		983651	1					
ANR	983700	Callee	r_num_math		983651	0					
ANR	983701	Identifier	r_num_math		983651	0					
ANR	983702	ArgumentList	core -> num		983651	1					
ANR	983703	Argument	core -> num		983651	0					
ANR	983704	PtrMemberAccess	core -> num		983651	0					
ANR	983705	Identifier	core		983651	0					
ANR	983706	Identifier	num		983651	1					
ANR	983707	Argument	arg + 1		983651	1					
ANR	983708	AdditiveExpression	arg + 1		983651	0		+			
ANR	983709	Identifier	arg		983651	0					
ANR	983710	PrimaryExpression	1		983651	1					
ANR	983711	ForStatement	for ( i = 0 ; i < limit ; i ++ )		983651	4					
ANR	983712	ForInit	i = 0 ;	4267:6:120425:120430	983651	0	True				
ANR	983713	AssignmentExpression	i = 0		983651	0		=			
ANR	983714	Identifier	i		983651	0					
ANR	983715	PrimaryExpression	0		983651	1					
ANR	983716	Condition	i < limit	4267:13:120432:120440	983651	1	True				
ANR	983717	RelationalExpression	i < limit		983651	0		<			
ANR	983718	Identifier	i		983651	0					
ANR	983719	Identifier	limit		983651	1					
ANR	983720	PostIncDecOperationExpression	i ++	4267:24:120443:120445	983651	2	True				
ANR	983721	Identifier	i		983651	0					
ANR	983722	IncDec	++		983651	1					
ANR	983723	CompoundStatement		9:2:211:298	983651	3					
ANR	983724	IdentifierDeclStatement	"RAnalOp * op = r_core_anal_op ( core , addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM ) ;"	4268:2:120452:120539	983651	0	True				
ANR	983725	IdentifierDecl	"* op = r_core_anal_op ( core , addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		983651	0					
ANR	983726	IdentifierDeclType	RAnalOp *		983651	0					
ANR	983727	Identifier	op		983651	1					
ANR	983728	AssignmentExpression	"* op = r_core_anal_op ( core , addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		983651	2		=			
ANR	983729	Identifier	op		983651	0					
ANR	983730	CallExpression	"r_core_anal_op ( core , addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		983651	1					
ANR	983731	Callee	r_core_anal_op		983651	0					
ANR	983732	Identifier	r_core_anal_op		983651	0					
ANR	983733	ArgumentList	core		983651	1					
ANR	983734	Argument	core		983651	0					
ANR	983735	Identifier	core		983651	0					
ANR	983736	Argument	addr		983651	1					
ANR	983737	Identifier	addr		983651	0					
ANR	983738	Argument	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM		983651	2					
ANR	983739	InclusiveOrExpression	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM		983651	0		|			
ANR	983740	Identifier	R_ANAL_OP_MASK_BASIC		983651	0					
ANR	983741	Identifier	R_ANAL_OP_MASK_DISASM		983651	1					
ANR	983742	IfStatement	if ( op )		983651	1					
ANR	983743	Condition	op	4269:6:120547:120548	983651	0	True				
ANR	983744	Identifier	op		983651	0					
ANR	983745	CompoundStatement		12:3:345:388	983651	1					
ANR	983746	IdentifierDeclStatement	char * mnem = op -> mnemonic ;	4270:3:120556:120581	983651	0	True				
ANR	983747	IdentifierDecl	* mnem = op -> mnemonic		983651	0					
ANR	983748	IdentifierDeclType	char *		983651	0					
ANR	983749	Identifier	mnem		983651	1					
ANR	983750	AssignmentExpression	* mnem = op -> mnemonic		983651	2		=			
ANR	983751	Identifier	mnem		983651	0					
ANR	983752	PtrMemberAccess	op -> mnemonic		983651	1					
ANR	983753	Identifier	op		983651	0					
ANR	983754	Identifier	mnemonic		983651	1					
ANR	983755	IdentifierDeclStatement	char * m = malloc ( ( strlen ( mnem ) * 2 ) + 32 ) ;	4271:3:120586:120629	983651	1	True				
ANR	983756	IdentifierDecl	* m = malloc ( ( strlen ( mnem ) * 2 ) + 32 )		983651	0					
ANR	983757	IdentifierDeclType	char *		983651	0					
ANR	983758	Identifier	m		983651	1					
ANR	983759	AssignmentExpression	* m = malloc ( ( strlen ( mnem ) * 2 ) + 32 )		983651	2		=			
ANR	983760	Identifier	m		983651	0					
ANR	983761	CallExpression	malloc ( ( strlen ( mnem ) * 2 ) + 32 )		983651	1					
ANR	983762	Callee	malloc		983651	0					
ANR	983763	Identifier	malloc		983651	0					
ANR	983764	ArgumentList	( strlen ( mnem ) * 2 ) + 32		983651	1					
ANR	983765	Argument	( strlen ( mnem ) * 2 ) + 32		983651	0					
ANR	983766	AdditiveExpression	( strlen ( mnem ) * 2 ) + 32		983651	0		+			
ANR	983767	MultiplicativeExpression	strlen ( mnem ) * 2		983651	0		*			
ANR	983768	CallExpression	strlen ( mnem )		983651	0					
ANR	983769	Callee	strlen		983651	0					
ANR	983770	Identifier	strlen		983651	0					
ANR	983771	ArgumentList	mnem		983651	1					
ANR	983772	Argument	mnem		983651	0					
ANR	983773	Identifier	mnem		983651	0					
ANR	983774	PrimaryExpression	2		983651	1					
ANR	983775	PrimaryExpression	32		983651	1					
ANR	983776	ExpressionStatement	"strcpy ( m , mnem )"	4272:3:120634:120650	983651	2	True				
ANR	983777	CallExpression	"strcpy ( m , mnem )"		983651	0					
ANR	983778	Callee	strcpy		983651	0					
ANR	983779	Identifier	strcpy		983651	0					
ANR	983780	ArgumentList	m		983651	1					
ANR	983781	Argument	m		983651	0					
ANR	983782	Identifier	m		983651	0					
ANR	983783	Argument	mnem		983651	1					
ANR	983784	Identifier	mnem		983651	0					
ANR	983785	IfStatement	if ( type_print == 'q' )		983651	3					
ANR	983786	Condition	type_print == 'q'	4274:7:120711:120727	983651	0	True				
ANR	983787	EqualityExpression	type_print == 'q'		983651	0		==			
ANR	983788	Identifier	type_print		983651	0					
ANR	983789	PrimaryExpression	'q'		983651	1					
ANR	983790	CompoundStatement		15:26:489:489	983651	1					
ANR	983791	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , m )"	4275:4:120736:120761	983651	0	True				
ANR	983792	CallExpression	"r_cons_printf ( ""%s\\n"" , m )"		983651	0					
ANR	983793	Callee	r_cons_printf		983651	0					
ANR	983794	Identifier	r_cons_printf		983651	0					
ANR	983795	ArgumentList	"""%s\\n"""		983651	1					
ANR	983796	Argument	"""%s\\n"""		983651	0					
ANR	983797	PrimaryExpression	"""%s\\n"""		983651	0					
ANR	983798	Argument	m		983651	1					
ANR	983799	Identifier	m		983651	0					
ANR	983800	ElseStatement	else		983651	0					
ANR	983801	CompoundStatement		17:10:532:532	983651	0					
ANR	983802	IfStatement	if ( show_color )		983651	0					
ANR	983803	Condition	show_color	4277:8:120783:120792	983651	0	True				
ANR	983804	Identifier	show_color		983651	0					
ANR	983805	CompoundStatement		19:5:561:627	983651	1					
ANR	983806	IdentifierDeclStatement	const char * offsetColor = r_cons_singleton ( ) -> context -> pal . offset ;	4278:5:120802:120868	983651	0	True				
ANR	983807	IdentifierDecl	* offsetColor = r_cons_singleton ( ) -> context -> pal . offset		983651	0					
ANR	983808	IdentifierDeclType	const char *		983651	0					
ANR	983809	Identifier	offsetColor		983651	1					
ANR	983810	AssignmentExpression	* offsetColor = r_cons_singleton ( ) -> context -> pal . offset		983651	2		=			
ANR	983811	Identifier	offsetColor		983651	0					
ANR	983812	MemberAccess	r_cons_singleton ( ) -> context -> pal . offset		983651	1					
ANR	983813	PtrMemberAccess	r_cons_singleton ( ) -> context -> pal		983651	0					
ANR	983814	PtrMemberAccess	r_cons_singleton ( ) -> context		983651	0					
ANR	983815	CallExpression	r_cons_singleton ( )		983651	0					
ANR	983816	Callee	r_cons_singleton		983651	0					
ANR	983817	Identifier	r_cons_singleton		983651	0					
ANR	983818	ArgumentList			983651	1					
ANR	983819	Identifier	context		983651	1					
ANR	983820	Identifier	pal		983651	1					
ANR	983821	Identifier	offset		983651	1					
ANR	983822	Statement	r_cons_printf	4279:5:120904:120916	983651	1	True				
ANR	983823	Statement	(	4279:19:120918:120918	983651	2	True				
ANR	983824	Statement	"""%s0x%08"""	4279:20:120919:120927	983651	3	True				
ANR	983825	Statement	PFMT64x	4279:29:120928:120934	983651	4	True				
ANR	983826	Statement	""""""	4279:36:120935:120936	983651	5	True				
ANR	983827	Statement	Color_RESET	4279:38:120937:120947	983651	6	True				
ANR	983828	Statement	"""  %10s %s\\n"""	4279:49:120948:120960	983651	7	True				
ANR	983829	Statement	","	4279:62:120961:120961	983651	8	True				
ANR	983830	Statement	offsetColor	4280:7:120970:120980	983651	9	True				
ANR	983831	Statement	","	4280:18:120981:120981	983651	10	True				
ANR	983832	Statement	addr	4280:20:120983:120986	983651	11	True				
ANR	983833	Statement	+	4280:25:120988:120988	983651	12	True				
ANR	983834	Statement	p	4280:27:120990:120990	983651	13	True				
ANR	983835	Statement	","	4280:28:120991:120991	983651	14	True				
ANR	983836	Statement	""""""	4280:30:120993:120994	983651	15	True				
ANR	983837	Statement	","	4280:32:120995:120995	983651	16	True				
ANR	983838	Statement	m	4280:34:120997:120997	983651	17	True				
ANR	983839	Statement	)	4280:35:120998:120998	983651	18	True				
ANR	983840	ExpressionStatement		4280:36:120999:120999	983651	19	True				
ANR	983841	ElseStatement	else		983651	0					
ANR	983842	CompoundStatement		22:11:771:771	983651	0					
ANR	983843	Statement	r_cons_printf	4282:5:121019:121031	983651	0	True				
ANR	983844	Statement	(	4282:19:121033:121033	983651	1	True				
ANR	983845	Statement	"""0x%08"""	4282:20:121034:121040	983651	2	True				
ANR	983846	Statement	PFMT64x	4282:27:121041:121047	983651	3	True				
ANR	983847	Statement	"""  %10s %s\\n"""	4282:34:121048:121060	983651	4	True				
ANR	983848	Statement	","	4282:47:121061:121061	983651	5	True				
ANR	983849	Statement	addr	4282:49:121063:121066	983651	6	True				
ANR	983850	Statement	+	4282:54:121068:121068	983651	7	True				
ANR	983851	Statement	p	4282:56:121070:121070	983651	8	True				
ANR	983852	Statement	","	4282:57:121071:121071	983651	9	True				
ANR	983853	Statement	""""""	4282:59:121073:121074	983651	10	True				
ANR	983854	Statement	","	4282:61:121075:121075	983651	11	True				
ANR	983855	Statement	m	4282:63:121077:121077	983651	12	True				
ANR	983856	Statement	)	4282:64:121078:121078	983651	13	True				
ANR	983857	ExpressionStatement		4282:65:121079:121079	983651	14	True				
ANR	983858	SwitchStatement	switch ( op -> type & 0xfffff )		983651	4					
ANR	983859	Condition	op -> type & 0xfffff	4285:11:121103:121120	983651	0	True				
ANR	983860	BitAndExpression	op -> type & 0xfffff		983651	0		&			
ANR	983861	PtrMemberAccess	op -> type		983651	0					
ANR	983862	Identifier	op		983651	0					
ANR	983863	Identifier	type		983651	1					
ANR	983864	PrimaryExpression	0xfffff		983651	1					
ANR	983865	CompoundStatement		26:31:882:882	983651	1					
ANR	983866	Label	case R_ANAL_OP_TYPE_RET :	4286:3:121128:121151	983651	0	True				
ANR	983867	Identifier	R_ANAL_OP_TYPE_RET		983651	0					
ANR	983868	Label	case R_ANAL_OP_TYPE_UJMP :	4287:3:121156:121180	983651	1	True				
ANR	983869	Identifier	R_ANAL_OP_TYPE_UJMP		983651	0					
ANR	983870	GotoStatement	goto beach ;	4288:4:121186:121196	983651	2	True				
ANR	983871	Identifier	beach		983651	0					
ANR	983872	BreakStatement	break ;	4289:4:121202:121207	983651	3	True				
ANR	983873	IfStatement	if ( op -> type == R_ANAL_OP_TYPE_JMP )		983651	5					
ANR	983874	Condition	op -> type == R_ANAL_OP_TYPE_JMP	4292:7:121222:121251	983651	0	True				
ANR	983875	EqualityExpression	op -> type == R_ANAL_OP_TYPE_JMP		983651	0		==			
ANR	983876	PtrMemberAccess	op -> type		983651	0					
ANR	983877	Identifier	op		983651	0					
ANR	983878	Identifier	type		983651	1					
ANR	983879	Identifier	R_ANAL_OP_TYPE_JMP		983651	1					
ANR	983880	CompoundStatement		33:39:1013:1013	983651	1					
ANR	983881	ExpressionStatement	addr = op -> jump	4293:4:121260:121275	983651	0	True				
ANR	983882	AssignmentExpression	addr = op -> jump		983651	0		=			
ANR	983883	Identifier	addr		983651	0					
ANR	983884	PtrMemberAccess	op -> jump		983651	1					
ANR	983885	Identifier	op		983651	0					
ANR	983886	Identifier	jump		983651	1					
ANR	983887	ElseStatement	else		983651	0					
ANR	983888	CompoundStatement		35:10:1046:1046	983651	0					
ANR	983889	ExpressionStatement	addr += op -> size	4295:4:121293:121309	983651	0	True				
ANR	983890	AssignmentExpression	addr += op -> size		983651	0		+=			
ANR	983891	Identifier	addr		983651	0					
ANR	983892	PtrMemberAccess	op -> size		983651	1					
ANR	983893	Identifier	op		983651	0					
ANR	983894	Identifier	size		983651	1					
ANR	983895	ElseStatement	else		983651	0					
ANR	983896	CompoundStatement		38:9:1084:1084	983651	0					
ANR	983897	Statement	eprintf	4298:3:121330:121336	983651	0	True				
ANR	983898	Statement	(	4298:11:121338:121338	983651	1	True				
ANR	983899	Statement	"""[pdp] Cannot get op at 0x%08"""	4298:12:121339:121368	983651	2	True				
ANR	983900	Statement	PFMT64x	4298:42:121369:121375	983651	3	True				
ANR	983901	Statement	"""\\n"""	4298:49:121376:121379	983651	4	True				
ANR	983902	Statement	","	4298:53:121380:121380	983651	5	True				
ANR	983903	Statement	addr	4298:55:121382:121385	983651	6	True				
ANR	983904	Statement	+	4298:60:121387:121387	983651	7	True				
ANR	983905	Statement	p	4298:62:121389:121389	983651	8	True				
ANR	983906	Statement	)	4298:63:121390:121390	983651	9	True				
ANR	983907	ExpressionStatement		4298:64:121391:121391	983651	10	True				
ANR	983908	ExpressionStatement	r_anal_op_free ( op )	4299:3:121396:121415	983651	11	True				
ANR	983909	CallExpression	r_anal_op_free ( op )		983651	0					
ANR	983910	Callee	r_anal_op_free		983651	0					
ANR	983911	Identifier	r_anal_op_free		983651	0					
ANR	983912	ArgumentList	op		983651	1					
ANR	983913	Argument	op		983651	0					
ANR	983914	Identifier	op		983651	0					
ANR	983915	BreakStatement	break ;	4300:3:121420:121425	983651	12	True				
ANR	983916	ExpressionStatement	r_anal_op_free ( op )	4303:2:121476:121495	983651	2	True				
ANR	983917	CallExpression	r_anal_op_free ( op )		983651	0					
ANR	983918	Callee	r_anal_op_free		983651	0					
ANR	983919	Identifier	r_anal_op_free		983651	0					
ANR	983920	ArgumentList	op		983651	1					
ANR	983921	Argument	op		983651	0					
ANR	983922	Identifier	op		983651	0					
ANR	983923	Label	beach :	4305:0:121500:121505	983651	5	True				
ANR	983924	Identifier	beach		983651	0					
ANR	983925	ReturnStatement	return ;	4306:1:121508:121514	983651	6	True				
ANR	983926	ReturnType	static void		983651	1					
ANR	983927	Identifier	disasm_until_ret		983651	2					
ANR	983928	ParameterList	"RCore * core , ut64 addr , char type_print , const char * arg"		983651	3					
ANR	983929	Parameter	RCore * core	4260:29:120182:120192	983651	0	True				
ANR	983930	ParameterType	RCore *		983651	0					
ANR	983931	Identifier	core		983651	1					
ANR	983932	Parameter	ut64 addr	4260:42:120195:120203	983651	1	True				
ANR	983933	ParameterType	ut64		983651	0					
ANR	983934	Identifier	addr		983651	1					
ANR	983935	Parameter	char type_print	4260:53:120206:120220	983651	2	True				
ANR	983936	ParameterType	char		983651	0					
ANR	983937	Identifier	type_print		983651	1					
ANR	983938	Parameter	const char * arg	4260:70:120223:120237	983651	3	True				
ANR	983939	ParameterType	const char *		983651	0					
ANR	983940	Identifier	arg		983651	1					
ANR	983941	CFGEntryNode	ENTRY		983651		True				
ANR	983942	CFGExitNode	EXIT		983651		True				
ANR	983943	Symbol	* op		983651						
ANR	983944	Symbol	op -> mnemonic		983651						
ANR	983945	Symbol	* core		983651						
ANR	983946	Symbol	r_core_anal_op		983651						
ANR	983947	Symbol	R_ANAL_OP_MASK_BASIC		983651						
ANR	983948	Symbol	r_num_math		983651						
ANR	983949	Symbol	strlen		983651						
ANR	983950	Symbol	offsetColor		983651						
ANR	983951	Symbol	arg		983651						
ANR	983952	Symbol	show_color		983651						
ANR	983953	Symbol	R_PRINT_FLAGS_COLOR		983651						
ANR	983954	Symbol	limit		983651						
ANR	983955	Symbol	r_cons_singleton		983651						
ANR	983956	Symbol	op -> jump		983651						
ANR	983957	Symbol	addr		983651						
ANR	983958	Symbol	type_print		983651						
ANR	983959	Symbol	core -> num		983651						
ANR	983960	Symbol	* * core		983651						
ANR	983961	Symbol	r_cons_singleton ( ) -> context -> pal . offset		983651						
ANR	983962	Symbol	op		983651						
ANR	983963	Symbol	malloc		983651						
ANR	983964	Symbol	r_cons_singleton ( ) -> context -> pal		983651						
ANR	983965	Symbol	op -> type		983651						
ANR	983966	Symbol	i		983651						
ANR	983967	Symbol	* r_cons_singleton ( ) -> context		983651						
ANR	983968	Symbol	m		983651						
ANR	983969	Symbol	* * r_cons_singleton		983651						
ANR	983970	Symbol	p		983651						
ANR	983971	Symbol	core		983651						
ANR	983972	Symbol	* core -> print		983651						
ANR	983973	Symbol	R_ANAL_OP_TYPE_JMP		983651						
ANR	983974	Symbol	R_ANAL_OP_MASK_DISASM		983651						
ANR	983975	Symbol	mnem		983651						
ANR	983976	Symbol	op -> size		983651						
ANR	983977	Symbol	core -> print		983651						
ANR	983978	Symbol	r_cons_singleton ( ) -> context		983651						
ANR	983979	Symbol	core -> print -> flags		983651						
ANR	983980	Symbol	* r_cons_singleton		983651						
ANR	983981	Symbol	* arg		983651						
ANR	983982	Function	disasm_ropchain	4309:0:121519:122122							
ANR	983983	FunctionDef	"disasm_ropchain (RCore * core , ut64 addr , char type_print)"		983982	0					
ANR	983984	CompoundStatement		4309:69:121588:122122	983982	0					
ANR	983985	IdentifierDeclStatement	int p = 0 ;	4310:1:121591:121600	983982	0	True				
ANR	983986	IdentifierDecl	p = 0		983982	0					
ANR	983987	IdentifierDeclType	int		983982	0					
ANR	983988	Identifier	p		983982	1					
ANR	983989	AssignmentExpression	p = 0		983982	2		=			
ANR	983990	Identifier	p		983982	0					
ANR	983991	PrimaryExpression	0		983982	1					
ANR	983992	IdentifierDeclStatement	ut64 n = 0 ;	4311:1:121603:121613	983982	1	True				
ANR	983993	IdentifierDecl	n = 0		983982	0					
ANR	983994	IdentifierDeclType	ut64		983982	0					
ANR	983995	Identifier	n		983982	1					
ANR	983996	AssignmentExpression	n = 0		983982	2		=			
ANR	983997	Identifier	n		983982	0					
ANR	983998	PrimaryExpression	0		983982	1					
ANR	983999	IdentifierDeclStatement	"ut8 * buf = calloc ( core -> blocksize , 1 ) ;"	4312:1:121616:121654	983982	2	True				
ANR	984000	IdentifierDecl	"* buf = calloc ( core -> blocksize , 1 )"		983982	0					
ANR	984001	IdentifierDeclType	ut8 *		983982	0					
ANR	984002	Identifier	buf		983982	1					
ANR	984003	AssignmentExpression	"* buf = calloc ( core -> blocksize , 1 )"		983982	2		=			
ANR	984004	Identifier	buf		983982	0					
ANR	984005	CallExpression	"calloc ( core -> blocksize , 1 )"		983982	1					
ANR	984006	Callee	calloc		983982	0					
ANR	984007	Identifier	calloc		983982	0					
ANR	984008	ArgumentList	core -> blocksize		983982	1					
ANR	984009	Argument	core -> blocksize		983982	0					
ANR	984010	PtrMemberAccess	core -> blocksize		983982	0					
ANR	984011	Identifier	core		983982	0					
ANR	984012	Identifier	blocksize		983982	1					
ANR	984013	Argument	1		983982	1					
ANR	984014	PrimaryExpression	1		983982	0					
ANR	984015	ExpressionStatement	"( void ) r_io_read_at ( core -> io , addr , buf , core -> blocksize )"	4313:1:121657:121714	983982	3	True				
ANR	984016	CastExpression	"( void ) r_io_read_at ( core -> io , addr , buf , core -> blocksize )"		983982	0					
ANR	984017	CastTarget	void		983982	0					
ANR	984018	CallExpression	"r_io_read_at ( core -> io , addr , buf , core -> blocksize )"		983982	1					
ANR	984019	Callee	r_io_read_at		983982	0					
ANR	984020	Identifier	r_io_read_at		983982	0					
ANR	984021	ArgumentList	core -> io		983982	1					
ANR	984022	Argument	core -> io		983982	0					
ANR	984023	PtrMemberAccess	core -> io		983982	0					
ANR	984024	Identifier	core		983982	0					
ANR	984025	Identifier	io		983982	1					
ANR	984026	Argument	addr		983982	1					
ANR	984027	Identifier	addr		983982	0					
ANR	984028	Argument	buf		983982	2					
ANR	984029	Identifier	buf		983982	0					
ANR	984030	Argument	core -> blocksize		983982	3					
ANR	984031	PtrMemberAccess	core -> blocksize		983982	0					
ANR	984032	Identifier	core		983982	0					
ANR	984033	Identifier	blocksize		983982	1					
ANR	984034	WhileStatement	while ( p + 4 < core -> blocksize )		983982	4					
ANR	984035	Condition	p + 4 < core -> blocksize	4314:8:121724:121746	983982	0	True				
ANR	984036	RelationalExpression	p + 4 < core -> blocksize		983982	0		<			
ANR	984037	AdditiveExpression	p + 4		983982	0		+			
ANR	984038	Identifier	p		983982	0					
ANR	984039	PrimaryExpression	4		983982	1					
ANR	984040	PtrMemberAccess	core -> blocksize		983982	1					
ANR	984041	Identifier	core		983982	0					
ANR	984042	Identifier	blocksize		983982	1					
ANR	984043	CompoundStatement		7:2:164:203	983982	1					
ANR	984044	IdentifierDeclStatement	const bool be = core -> print -> big_endian ;	4315:2:121753:121792	983982	0	True				
ANR	984045	IdentifierDecl	be = core -> print -> big_endian		983982	0					
ANR	984046	IdentifierDeclType	const bool		983982	0					
ANR	984047	Identifier	be		983982	1					
ANR	984048	AssignmentExpression	be = core -> print -> big_endian		983982	2		=			
ANR	984049	Identifier	be		983982	0					
ANR	984050	PtrMemberAccess	core -> print -> big_endian		983982	1					
ANR	984051	PtrMemberAccess	core -> print		983982	0					
ANR	984052	Identifier	core		983982	0					
ANR	984053	Identifier	print		983982	1					
ANR	984054	Identifier	big_endian		983982	1					
ANR	984055	IfStatement	if ( core -> assembler -> bits == 64 )		983982	1					
ANR	984056	Condition	core -> assembler -> bits == 64	4316:6:121800:121826	983982	0	True				
ANR	984057	EqualityExpression	core -> assembler -> bits == 64		983982	0		==			
ANR	984058	PtrMemberAccess	core -> assembler -> bits		983982	0					
ANR	984059	PtrMemberAccess	core -> assembler		983982	0					
ANR	984060	Identifier	core		983982	0					
ANR	984061	Identifier	assembler		983982	1					
ANR	984062	Identifier	bits		983982	1					
ANR	984063	PrimaryExpression	64		983982	1					
ANR	984064	CompoundStatement		8:35:240:240	983982	1					
ANR	984065	ExpressionStatement	"n = r_read_ble64 ( buf + p , be )"	4317:3:121834:121864	983982	0	True				
ANR	984066	AssignmentExpression	"n = r_read_ble64 ( buf + p , be )"		983982	0		=			
ANR	984067	Identifier	n		983982	0					
ANR	984068	CallExpression	"r_read_ble64 ( buf + p , be )"		983982	1					
ANR	984069	Callee	r_read_ble64		983982	0					
ANR	984070	Identifier	r_read_ble64		983982	0					
ANR	984071	ArgumentList	buf + p		983982	1					
ANR	984072	Argument	buf + p		983982	0					
ANR	984073	AdditiveExpression	buf + p		983982	0		+			
ANR	984074	Identifier	buf		983982	0					
ANR	984075	Identifier	p		983982	1					
ANR	984076	Argument	be		983982	1					
ANR	984077	Identifier	be		983982	0					
ANR	984078	ElseStatement	else		983982	0					
ANR	984079	CompoundStatement		10:9:286:286	983982	0					
ANR	984080	ExpressionStatement	"n = r_read_ble32 ( buf + p , be )"	4319:3:121880:121910	983982	0	True				
ANR	984081	AssignmentExpression	"n = r_read_ble32 ( buf + p , be )"		983982	0		=			
ANR	984082	Identifier	n		983982	0					
ANR	984083	CallExpression	"r_read_ble32 ( buf + p , be )"		983982	1					
ANR	984084	Callee	r_read_ble32		983982	0					
ANR	984085	Identifier	r_read_ble32		983982	0					
ANR	984086	ArgumentList	buf + p		983982	1					
ANR	984087	Argument	buf + p		983982	0					
ANR	984088	AdditiveExpression	buf + p		983982	0		+			
ANR	984089	Identifier	buf		983982	0					
ANR	984090	Identifier	p		983982	1					
ANR	984091	Argument	be		983982	1					
ANR	984092	Identifier	be		983982	0					
ANR	984093	Statement	r_cons_printf	4321:2:121918:121930	983982	2	True				
ANR	984094	Statement	(	4321:16:121932:121932	983982	3	True				
ANR	984095	Statement	"""[0x%08"""	4321:17:121933:121940	983982	4	True				
ANR	984096	Statement	PFMT64x	4321:25:121941:121947	983982	5	True				
ANR	984097	Statement	"""] 0x%08"""	4321:32:121948:121956	983982	6	True				
ANR	984098	Statement	PFMT64x	4321:41:121957:121963	983982	7	True				
ANR	984099	Statement	"""\\n"""	4321:48:121964:121967	983982	8	True				
ANR	984100	Statement	","	4321:52:121968:121968	983982	9	True				
ANR	984101	Statement	addr	4321:54:121970:121973	983982	10	True				
ANR	984102	Statement	+	4321:59:121975:121975	983982	11	True				
ANR	984103	Statement	p	4321:61:121977:121977	983982	12	True				
ANR	984104	Statement	","	4321:62:121978:121978	983982	13	True				
ANR	984105	Statement	n	4321:64:121980:121980	983982	14	True				
ANR	984106	Statement	)	4321:65:121981:121981	983982	15	True				
ANR	984107	ExpressionStatement		4321:66:121982:121982	983982	16	True				
ANR	984108	ExpressionStatement	"disasm_until_ret ( core , n , type_print , NULL )"	4322:2:121986:122030	983982	17	True				
ANR	984109	CallExpression	"disasm_until_ret ( core , n , type_print , NULL )"		983982	0					
ANR	984110	Callee	disasm_until_ret		983982	0					
ANR	984111	Identifier	disasm_until_ret		983982	0					
ANR	984112	ArgumentList	core		983982	1					
ANR	984113	Argument	core		983982	0					
ANR	984114	Identifier	core		983982	0					
ANR	984115	Argument	n		983982	1					
ANR	984116	Identifier	n		983982	0					
ANR	984117	Argument	type_print		983982	2					
ANR	984118	Identifier	type_print		983982	0					
ANR	984119	Argument	NULL		983982	3					
ANR	984120	Identifier	NULL		983982	0					
ANR	984121	IfStatement	if ( core -> assembler -> bits == 64 )		983982	18					
ANR	984122	Condition	core -> assembler -> bits == 64	4323:6:122038:122064	983982	0	True				
ANR	984123	EqualityExpression	core -> assembler -> bits == 64		983982	0		==			
ANR	984124	PtrMemberAccess	core -> assembler -> bits		983982	0					
ANR	984125	PtrMemberAccess	core -> assembler		983982	0					
ANR	984126	Identifier	core		983982	0					
ANR	984127	Identifier	assembler		983982	1					
ANR	984128	Identifier	bits		983982	1					
ANR	984129	PrimaryExpression	64		983982	1					
ANR	984130	CompoundStatement		15:35:478:478	983982	1					
ANR	984131	ExpressionStatement	p += 8	4324:3:122072:122078	983982	0	True				
ANR	984132	AssignmentExpression	p += 8		983982	0		+=			
ANR	984133	Identifier	p		983982	0					
ANR	984134	PrimaryExpression	8		983982	1					
ANR	984135	ElseStatement	else		983982	0					
ANR	984136	CompoundStatement		17:9:500:500	983982	0					
ANR	984137	ExpressionStatement	p += 4	4326:3:122094:122100	983982	0	True				
ANR	984138	AssignmentExpression	p += 4		983982	0		+=			
ANR	984139	Identifier	p		983982	0					
ANR	984140	PrimaryExpression	4		983982	1					
ANR	984141	ExpressionStatement	free ( buf )	4329:1:122110:122120	983982	5	True				
ANR	984142	CallExpression	free ( buf )		983982	0					
ANR	984143	Callee	free		983982	0					
ANR	984144	Identifier	free		983982	0					
ANR	984145	ArgumentList	buf		983982	1					
ANR	984146	Argument	buf		983982	0					
ANR	984147	Identifier	buf		983982	0					
ANR	984148	ReturnType	static void		983982	1					
ANR	984149	Identifier	disasm_ropchain		983982	2					
ANR	984150	ParameterList	"RCore * core , ut64 addr , char type_print"		983982	3					
ANR	984151	Parameter	RCore * core	4309:28:121547:121557	983982	0	True				
ANR	984152	ParameterType	RCore *		983982	0					
ANR	984153	Identifier	core		983982	1					
ANR	984154	Parameter	ut64 addr	4309:41:121560:121568	983982	1	True				
ANR	984155	ParameterType	ut64		983982	0					
ANR	984156	Identifier	addr		983982	1					
ANR	984157	Parameter	char type_print	4309:52:121571:121585	983982	2	True				
ANR	984158	ParameterType	char		983982	0					
ANR	984159	Identifier	type_print		983982	1					
ANR	984160	CFGEntryNode	ENTRY		983982		True				
ANR	984161	CFGExitNode	EXIT		983982		True				
ANR	984162	Symbol	core -> blocksize		983982						
ANR	984163	Symbol	be		983982						
ANR	984164	Symbol	NULL		983982						
ANR	984165	Symbol	* core		983982						
ANR	984166	Symbol	core -> assembler -> bits		983982						
ANR	984167	Symbol	core -> assembler		983982						
ANR	984168	Symbol	core -> print -> big_endian		983982						
ANR	984169	Symbol	calloc		983982						
ANR	984170	Symbol	n		983982						
ANR	984171	Symbol	p		983982						
ANR	984172	Symbol	* core -> assembler		983982						
ANR	984173	Symbol	core		983982						
ANR	984174	Symbol	buf		983982						
ANR	984175	Symbol	* core -> print		983982						
ANR	984176	Symbol	core -> io		983982						
ANR	984177	Symbol	addr		983982						
ANR	984178	Symbol	type_print		983982						
ANR	984179	Symbol	core -> print		983982						
ANR	984180	Symbol	r_read_ble32		983982						
ANR	984181	Symbol	* * core		983982						
ANR	984182	Symbol	r_read_ble64		983982						
ANR	984183	Function	disasm_recursive	4332:0:122125:123179							
ANR	984184	FunctionDef	"disasm_recursive (RCore * core , ut64 addr , int count , char type_print)"		984183	0					
ANR	984185	CompoundStatement		4332:81:122206:123179	984183	0					
ANR	984186	IdentifierDeclStatement	RAnalOp aop = { 0 } ;	4333:1:122209:122226	984183	0	True				
ANR	984187	IdentifierDecl	aop = { 0 }		984183	0					
ANR	984188	IdentifierDeclType	RAnalOp		984183	0					
ANR	984189	Identifier	aop		984183	1					
ANR	984190	AssignmentExpression	aop = { 0 }		984183	2		=			
ANR	984191	Identifier	aop		984183	0					
ANR	984192	InitializerList	0		984183	1					
ANR	984193	PrimaryExpression	0		984183	0					
ANR	984194	IdentifierDeclStatement	int ret ;	4334:1:122229:122236	984183	1	True				
ANR	984195	IdentifierDecl	ret		984183	0					
ANR	984196	IdentifierDeclType	int		984183	0					
ANR	984197	Identifier	ret		984183	1					
ANR	984198	IdentifierDeclStatement	ut8 buf [ 128 ] ;	4335:1:122239:122251	984183	2	True				
ANR	984199	IdentifierDecl	buf [ 128 ]		984183	0					
ANR	984200	IdentifierDeclType	ut8 [ 128 ]		984183	0					
ANR	984201	Identifier	buf		984183	1					
ANR	984202	PrimaryExpression	128		984183	2					
ANR	984203	IdentifierDeclStatement	PJ * pj = NULL ;	4336:1:122254:122267	984183	3	True				
ANR	984204	IdentifierDecl	* pj = NULL		984183	0					
ANR	984205	IdentifierDeclType	PJ *		984183	0					
ANR	984206	Identifier	pj		984183	1					
ANR	984207	AssignmentExpression	* pj = NULL		984183	2		=			
ANR	984208	Identifier	NULL		984183	0					
ANR	984209	Identifier	NULL		984183	1					
ANR	984210	IfStatement	if ( type_print == 'j' )		984183	4					
ANR	984211	Condition	type_print == 'j'	4337:5:122274:122290	984183	0	True				
ANR	984212	EqualityExpression	type_print == 'j'		984183	0		==			
ANR	984213	Identifier	type_print		984183	0					
ANR	984214	PrimaryExpression	'j'		984183	1					
ANR	984215	CompoundStatement		6:24:86:86	984183	1					
ANR	984216	ExpressionStatement	pj = pj_new ( )	4338:2:122297:122311	984183	0	True				
ANR	984217	AssignmentExpression	pj = pj_new ( )		984183	0		=			
ANR	984218	Identifier	pj		984183	0					
ANR	984219	CallExpression	pj_new ( )		984183	1					
ANR	984220	Callee	pj_new		984183	0					
ANR	984221	Identifier	pj_new		984183	0					
ANR	984222	ArgumentList			984183	1					
ANR	984223	IfStatement	if ( ! pj )		984183	1					
ANR	984224	Condition	! pj	4339:6:122319:122321	984183	0	True				
ANR	984225	UnaryOperationExpression	! pj		984183	0					
ANR	984226	UnaryOperator	!		984183	0					
ANR	984227	Identifier	pj		984183	1					
ANR	984228	CompoundStatement		8:11:117:117	984183	1					
ANR	984229	ReturnStatement	return ;	4340:3:122329:122335	984183	0	True				
ANR	984230	ExpressionStatement	pj_a ( pj )	4342:2:122343:122352	984183	2	True				
ANR	984231	CallExpression	pj_a ( pj )		984183	0					
ANR	984232	Callee	pj_a		984183	0					
ANR	984233	Identifier	pj_a		984183	0					
ANR	984234	ArgumentList	pj		984183	1					
ANR	984235	Argument	pj		984183	0					
ANR	984236	Identifier	pj		984183	0					
ANR	984237	WhileStatement	while ( count -- > 0 )		984183	5					
ANR	984238	Condition	count -- > 0	4344:8:122365:122375	984183	0	True				
ANR	984239	RelationalExpression	count -- > 0		984183	0		>			
ANR	984240	PostIncDecOperationExpression	count --		984183	0					
ANR	984241	Identifier	count		984183	0					
ANR	984242	IncDec	--		984183	1					
ANR	984243	PrimaryExpression	0		984183	1					
ANR	984244	CompoundStatement		13:21:171:171	984183	1					
ANR	984245	ExpressionStatement	"r_io_read_at ( core -> io , addr , buf , sizeof ( buf ) )"	4345:2:122382:122430	984183	0	True				
ANR	984246	CallExpression	"r_io_read_at ( core -> io , addr , buf , sizeof ( buf ) )"		984183	0					
ANR	984247	Callee	r_io_read_at		984183	0					
ANR	984248	Identifier	r_io_read_at		984183	0					
ANR	984249	ArgumentList	core -> io		984183	1					
ANR	984250	Argument	core -> io		984183	0					
ANR	984251	PtrMemberAccess	core -> io		984183	0					
ANR	984252	Identifier	core		984183	0					
ANR	984253	Identifier	io		984183	1					
ANR	984254	Argument	addr		984183	1					
ANR	984255	Identifier	addr		984183	0					
ANR	984256	Argument	buf		984183	2					
ANR	984257	Identifier	buf		984183	0					
ANR	984258	Argument	sizeof ( buf )		984183	3					
ANR	984259	SizeofExpression	sizeof ( buf )		984183	0					
ANR	984260	Sizeof	sizeof		984183	0					
ANR	984261	SizeofOperand	buf		984183	1					
ANR	984262	ExpressionStatement	r_anal_op_fini ( & aop )	4346:2:122434:122455	984183	1	True				
ANR	984263	CallExpression	r_anal_op_fini ( & aop )		984183	0					
ANR	984264	Callee	r_anal_op_fini		984183	0					
ANR	984265	Identifier	r_anal_op_fini		984183	0					
ANR	984266	ArgumentList	& aop		984183	1					
ANR	984267	Argument	& aop		984183	0					
ANR	984268	UnaryOperationExpression	& aop		984183	0					
ANR	984269	UnaryOperator	&		984183	0					
ANR	984270	Identifier	aop		984183	1					
ANR	984271	ExpressionStatement	"ret = r_anal_op ( core -> anal , & aop , addr , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"	4347:2:122459:122540	984183	2	True				
ANR	984272	AssignmentExpression	"ret = r_anal_op ( core -> anal , & aop , addr , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"		984183	0		=			
ANR	984273	Identifier	ret		984183	0					
ANR	984274	CallExpression	"r_anal_op ( core -> anal , & aop , addr , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"		984183	1					
ANR	984275	Callee	r_anal_op		984183	0					
ANR	984276	Identifier	r_anal_op		984183	0					
ANR	984277	ArgumentList	core -> anal		984183	1					
ANR	984278	Argument	core -> anal		984183	0					
ANR	984279	PtrMemberAccess	core -> anal		984183	0					
ANR	984280	Identifier	core		984183	0					
ANR	984281	Identifier	anal		984183	1					
ANR	984282	Argument	& aop		984183	1					
ANR	984283	UnaryOperationExpression	& aop		984183	0					
ANR	984284	UnaryOperator	&		984183	0					
ANR	984285	Identifier	aop		984183	1					
ANR	984286	Argument	addr		984183	2					
ANR	984287	Identifier	addr		984183	0					
ANR	984288	Argument	buf		984183	3					
ANR	984289	Identifier	buf		984183	0					
ANR	984290	Argument	sizeof ( buf )		984183	4					
ANR	984291	SizeofExpression	sizeof ( buf )		984183	0					
ANR	984292	Sizeof	sizeof		984183	0					
ANR	984293	SizeofOperand	buf		984183	1					
ANR	984294	Argument	R_ANAL_OP_MASK_BASIC		984183	5					
ANR	984295	Identifier	R_ANAL_OP_MASK_BASIC		984183	0					
ANR	984296	IfStatement	if ( ret < 0 || aop . size < 1 )		984183	3					
ANR	984297	Condition	ret < 0 || aop . size < 1	4348:6:122548:122570	984183	0	True				
ANR	984298	OrExpression	ret < 0 || aop . size < 1		984183	0		||			
ANR	984299	RelationalExpression	ret < 0		984183	0		<			
ANR	984300	Identifier	ret		984183	0					
ANR	984301	PrimaryExpression	0		984183	1					
ANR	984302	RelationalExpression	aop . size < 1		984183	1		<			
ANR	984303	MemberAccess	aop . size		984183	0					
ANR	984304	Identifier	aop		984183	0					
ANR	984305	Identifier	size		984183	1					
ANR	984306	PrimaryExpression	1		984183	1					
ANR	984307	CompoundStatement		17:31:366:366	984183	1					
ANR	984308	ExpressionStatement	addr ++	4349:3:122578:122584	984183	0	True				
ANR	984309	PostIncDecOperationExpression	addr ++		984183	0					
ANR	984310	Identifier	addr		984183	0					
ANR	984311	IncDec	++		984183	1					
ANR	984312	ContinueStatement	continue ;	4350:3:122589:122597	984183	1	True				
ANR	984313	IfStatement	if ( type_print == 'j' )		984183	4					
ANR	984314	Condition	type_print == 'j'	4353:6:122673:122689	984183	0	True				
ANR	984315	EqualityExpression	type_print == 'j'		984183	0		==			
ANR	984316	Identifier	type_print		984183	0					
ANR	984317	PrimaryExpression	'j'		984183	1					
ANR	984318	CompoundStatement		22:25:485:485	984183	1					
ANR	984319	ExpressionStatement	"r_core_print_disasm_json ( core , addr , buf , sizeof ( buf ) , 1 , pj )"	4354:3:122697:122760	984183	0	True				
ANR	984320	CallExpression	"r_core_print_disasm_json ( core , addr , buf , sizeof ( buf ) , 1 , pj )"		984183	0					
ANR	984321	Callee	r_core_print_disasm_json		984183	0					
ANR	984322	Identifier	r_core_print_disasm_json		984183	0					
ANR	984323	ArgumentList	core		984183	1					
ANR	984324	Argument	core		984183	0					
ANR	984325	Identifier	core		984183	0					
ANR	984326	Argument	addr		984183	1					
ANR	984327	Identifier	addr		984183	0					
ANR	984328	Argument	buf		984183	2					
ANR	984329	Identifier	buf		984183	0					
ANR	984330	Argument	sizeof ( buf )		984183	3					
ANR	984331	SizeofExpression	sizeof ( buf )		984183	0					
ANR	984332	Sizeof	sizeof		984183	0					
ANR	984333	SizeofOperand	buf		984183	1					
ANR	984334	Argument	1		984183	4					
ANR	984335	PrimaryExpression	1		984183	0					
ANR	984336	Argument	pj		984183	5					
ANR	984337	Identifier	pj		984183	0					
ANR	984338	ElseStatement	else		984183	0					
ANR	984339	CompoundStatement		24:9:564:564	984183	0					
ANR	984340	Statement	r_core_cmdf	4356:3:122776:122786	984183	0	True				
ANR	984341	Statement	(	4356:15:122788:122788	984183	1	True				
ANR	984342	Statement	core	4356:16:122789:122792	984183	2	True				
ANR	984343	Statement	","	4356:20:122793:122793	984183	3	True				
ANR	984344	Statement	"""pd 1 @ 0x%08"""	4356:22:122795:122808	984183	4	True				
ANR	984345	Statement	PFMT64x	4356:36:122809:122815	984183	5	True				
ANR	984346	Statement	","	4356:43:122816:122816	984183	6	True				
ANR	984347	Statement	addr	4356:45:122818:122821	984183	7	True				
ANR	984348	Statement	)	4356:49:122822:122822	984183	8	True				
ANR	984349	ExpressionStatement		4356:50:122823:122823	984183	9	True				
ANR	984350	SwitchStatement	switch ( aop . type )		984183	5					
ANR	984351	Condition	aop . type	4358:10:122839:122846	984183	0	True				
ANR	984352	MemberAccess	aop . type		984183	0					
ANR	984353	Identifier	aop		984183	0					
ANR	984354	Identifier	type		984183	1					
ANR	984355	CompoundStatement		27:20:642:642	984183	1					
ANR	984356	Label	case R_ANAL_OP_TYPE_JMP :	4359:2:122853:122876	984183	0	True				
ANR	984357	Identifier	R_ANAL_OP_TYPE_JMP		984183	0					
ANR	984358	ExpressionStatement	addr = aop . jump	4360:3:122881:122896	984183	1	True				
ANR	984359	AssignmentExpression	addr = aop . jump		984183	0		=			
ANR	984360	Identifier	addr		984183	0					
ANR	984361	MemberAccess	aop . jump		984183	1					
ANR	984362	Identifier	aop		984183	0					
ANR	984363	Identifier	jump		984183	1					
ANR	984364	ContinueStatement	continue ;	4361:3:122901:122909	984183	2	True				
ANR	984365	BreakStatement	break ;	4362:3:122914:122919	984183	3	True				
ANR	984366	Label	case R_ANAL_OP_TYPE_UCJMP :	4363:2:122923:122948	984183	4	True				
ANR	984367	Identifier	R_ANAL_OP_TYPE_UCJMP		984183	0					
ANR	984368	BreakStatement	break ;	4364:3:122953:122958	984183	5	True				
ANR	984369	Label	case R_ANAL_OP_TYPE_RET :	4365:2:122962:122985	984183	6	True				
ANR	984370	Identifier	R_ANAL_OP_TYPE_RET		984183	0					
ANR	984371	ExpressionStatement	count = 0	4366:3:122990:122999	984183	7	True				
ANR	984372	AssignmentExpression	count = 0		984183	0		=			
ANR	984373	Identifier	count		984183	0					
ANR	984374	PrimaryExpression	0		984183	1					
ANR	984375	BreakStatement	break ;	4367:3:123043:123048	984183	8	True				
ANR	984376	ExpressionStatement	addr += aop . size	4369:2:123056:123072	984183	6	True				
ANR	984377	AssignmentExpression	addr += aop . size		984183	0		+=			
ANR	984378	Identifier	addr		984183	0					
ANR	984379	MemberAccess	aop . size		984183	1					
ANR	984380	Identifier	aop		984183	0					
ANR	984381	Identifier	size		984183	1					
ANR	984382	IfStatement	if ( type_print == 'j' )		984183	6					
ANR	984383	Condition	type_print == 'j'	4371:5:123082:123098	984183	0	True				
ANR	984384	EqualityExpression	type_print == 'j'		984183	0		==			
ANR	984385	Identifier	type_print		984183	0					
ANR	984386	PrimaryExpression	'j'		984183	1					
ANR	984387	CompoundStatement		40:24:894:894	984183	1					
ANR	984388	ExpressionStatement	pj_end ( pj )	4372:2:123105:123116	984183	0	True				
ANR	984389	CallExpression	pj_end ( pj )		984183	0					
ANR	984390	Callee	pj_end		984183	0					
ANR	984391	Identifier	pj_end		984183	0					
ANR	984392	ArgumentList	pj		984183	1					
ANR	984393	Argument	pj		984183	0					
ANR	984394	Identifier	pj		984183	0					
ANR	984395	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	4373:2:123120:123158	984183	1	True				
ANR	984396	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		984183	0					
ANR	984397	Callee	r_cons_printf		984183	0					
ANR	984398	Identifier	r_cons_printf		984183	0					
ANR	984399	ArgumentList	"""%s\\n"""		984183	1					
ANR	984400	Argument	"""%s\\n"""		984183	0					
ANR	984401	PrimaryExpression	"""%s\\n"""		984183	0					
ANR	984402	Argument	pj_string ( pj )		984183	1					
ANR	984403	CallExpression	pj_string ( pj )		984183	0					
ANR	984404	Callee	pj_string		984183	0					
ANR	984405	Identifier	pj_string		984183	0					
ANR	984406	ArgumentList	pj		984183	1					
ANR	984407	Argument	pj		984183	0					
ANR	984408	Identifier	pj		984183	0					
ANR	984409	ExpressionStatement	pj_free ( pj )	4374:2:123162:123174	984183	2	True				
ANR	984410	CallExpression	pj_free ( pj )		984183	0					
ANR	984411	Callee	pj_free		984183	0					
ANR	984412	Identifier	pj_free		984183	0					
ANR	984413	ArgumentList	pj		984183	1					
ANR	984414	Argument	pj		984183	0					
ANR	984415	Identifier	pj		984183	0					
ANR	984416	ReturnType	static void		984183	1					
ANR	984417	Identifier	disasm_recursive		984183	2					
ANR	984418	ParameterList	"RCore * core , ut64 addr , int count , char type_print"		984183	3					
ANR	984419	Parameter	RCore * core	4332:29:122154:122164	984183	0	True				
ANR	984420	ParameterType	RCore *		984183	0					
ANR	984421	Identifier	core		984183	1					
ANR	984422	Parameter	ut64 addr	4332:42:122167:122175	984183	1	True				
ANR	984423	ParameterType	ut64		984183	0					
ANR	984424	Identifier	addr		984183	1					
ANR	984425	Parameter	int count	4332:53:122178:122186	984183	2	True				
ANR	984426	ParameterType	int		984183	0					
ANR	984427	Identifier	count		984183	1					
ANR	984428	Parameter	char type_print	4332:64:122189:122203	984183	3	True				
ANR	984429	ParameterType	char		984183	0					
ANR	984430	Identifier	type_print		984183	1					
ANR	984431	CFGEntryNode	ENTRY		984183		True				
ANR	984432	CFGExitNode	EXIT		984183		True				
ANR	984433	Symbol	ret		984183						
ANR	984434	Symbol	aop . jump		984183						
ANR	984435	Symbol	aop		984183						
ANR	984436	Symbol	NULL		984183						
ANR	984437	Symbol	pj_string		984183						
ANR	984438	Symbol	count		984183						
ANR	984439	Symbol	* core		984183						
ANR	984440	Symbol	aop . type		984183						
ANR	984441	Symbol	R_ANAL_OP_MASK_BASIC		984183						
ANR	984442	Symbol	core -> anal		984183						
ANR	984443	Symbol	& aop		984183						
ANR	984444	Symbol	core		984183						
ANR	984445	Symbol	buf		984183						
ANR	984446	Symbol	aop . size		984183						
ANR	984447	Symbol	core -> io		984183						
ANR	984448	Symbol	pj		984183						
ANR	984449	Symbol	pj_new		984183						
ANR	984450	Symbol	addr		984183						
ANR	984451	Symbol	type_print		984183						
ANR	984452	Symbol	r_anal_op		984183						
ANR	984453	Function	_disasm_recursive	4379:0:123188:125418							
ANR	984454	FunctionDef	"_disasm_recursive (RCore * core , ut64 addr , char type_print)"		984453	0					
ANR	984455	CompoundStatement		4379:71:123259:125418	984453	0					
ANR	984456	IdentifierDeclStatement	"bool show_flags = r_config_get_i ( core -> config , ""asm.flags"" ) ;"	4380:1:123262:123322	984453	0	True				
ANR	984457	IdentifierDecl	"show_flags = r_config_get_i ( core -> config , ""asm.flags"" )"		984453	0					
ANR	984458	IdentifierDeclType	bool		984453	0					
ANR	984459	Identifier	show_flags		984453	1					
ANR	984460	AssignmentExpression	"show_flags = r_config_get_i ( core -> config , ""asm.flags"" )"		984453	2		=			
ANR	984461	Identifier	show_flags		984453	0					
ANR	984462	CallExpression	"r_config_get_i ( core -> config , ""asm.flags"" )"		984453	1					
ANR	984463	Callee	r_config_get_i		984453	0					
ANR	984464	Identifier	r_config_get_i		984453	0					
ANR	984465	ArgumentList	core -> config		984453	1					
ANR	984466	Argument	core -> config		984453	0					
ANR	984467	PtrMemberAccess	core -> config		984453	0					
ANR	984468	Identifier	core		984453	0					
ANR	984469	Identifier	config		984453	1					
ANR	984470	Argument	"""asm.flags"""		984453	1					
ANR	984471	PrimaryExpression	"""asm.flags"""		984453	0					
ANR	984472	IdentifierDeclStatement	"bool show_bytes = r_config_get_i ( core -> config , ""asm.bytes"" ) ;"	4381:1:123325:123385	984453	1	True				
ANR	984473	IdentifierDecl	"show_bytes = r_config_get_i ( core -> config , ""asm.bytes"" )"		984453	0					
ANR	984474	IdentifierDeclType	bool		984453	0					
ANR	984475	Identifier	show_bytes		984453	1					
ANR	984476	AssignmentExpression	"show_bytes = r_config_get_i ( core -> config , ""asm.bytes"" )"		984453	2		=			
ANR	984477	Identifier	show_bytes		984453	0					
ANR	984478	CallExpression	"r_config_get_i ( core -> config , ""asm.bytes"" )"		984453	1					
ANR	984479	Callee	r_config_get_i		984453	0					
ANR	984480	Identifier	r_config_get_i		984453	0					
ANR	984481	ArgumentList	core -> config		984453	1					
ANR	984482	Argument	core -> config		984453	0					
ANR	984483	PtrMemberAccess	core -> config		984453	0					
ANR	984484	Identifier	core		984453	0					
ANR	984485	Identifier	config		984453	1					
ANR	984486	Argument	"""asm.bytes"""		984453	1					
ANR	984487	PrimaryExpression	"""asm.bytes"""		984453	0					
ANR	984488	IdentifierDeclStatement	"bool show_offset = r_config_get_i ( core -> config , ""asm.offset"" ) ;"	4382:1:123388:123450	984453	2	True				
ANR	984489	IdentifierDecl	"show_offset = r_config_get_i ( core -> config , ""asm.offset"" )"		984453	0					
ANR	984490	IdentifierDeclType	bool		984453	0					
ANR	984491	Identifier	show_offset		984453	1					
ANR	984492	AssignmentExpression	"show_offset = r_config_get_i ( core -> config , ""asm.offset"" )"		984453	2		=			
ANR	984493	Identifier	show_offset		984453	0					
ANR	984494	CallExpression	"r_config_get_i ( core -> config , ""asm.offset"" )"		984453	1					
ANR	984495	Callee	r_config_get_i		984453	0					
ANR	984496	Identifier	r_config_get_i		984453	0					
ANR	984497	ArgumentList	core -> config		984453	1					
ANR	984498	Argument	core -> config		984453	0					
ANR	984499	PtrMemberAccess	core -> config		984453	0					
ANR	984500	Identifier	core		984453	0					
ANR	984501	Identifier	config		984453	1					
ANR	984502	Argument	"""asm.offset"""		984453	1					
ANR	984503	PrimaryExpression	"""asm.offset"""		984453	0					
ANR	984504	IdentifierDeclStatement	"bool show_imtrim = r_config_get_i ( core -> config , ""asm.imm.trim"" ) ;"	4383:1:123453:123517	984453	3	True				
ANR	984505	IdentifierDecl	"show_imtrim = r_config_get_i ( core -> config , ""asm.imm.trim"" )"		984453	0					
ANR	984506	IdentifierDeclType	bool		984453	0					
ANR	984507	Identifier	show_imtrim		984453	1					
ANR	984508	AssignmentExpression	"show_imtrim = r_config_get_i ( core -> config , ""asm.imm.trim"" )"		984453	2		=			
ANR	984509	Identifier	show_imtrim		984453	0					
ANR	984510	CallExpression	"r_config_get_i ( core -> config , ""asm.imm.trim"" )"		984453	1					
ANR	984511	Callee	r_config_get_i		984453	0					
ANR	984512	Identifier	r_config_get_i		984453	0					
ANR	984513	ArgumentList	core -> config		984453	1					
ANR	984514	Argument	core -> config		984453	0					
ANR	984515	PtrMemberAccess	core -> config		984453	0					
ANR	984516	Identifier	core		984453	0					
ANR	984517	Identifier	config		984453	1					
ANR	984518	Argument	"""asm.imm.trim"""		984453	1					
ANR	984519	PrimaryExpression	"""asm.imm.trim"""		984453	0					
ANR	984520	IdentifierDeclStatement	Sdb * db = sdb_new0 ( ) ;	4384:1:123520:123541	984453	4	True				
ANR	984521	IdentifierDecl	* db = sdb_new0 ( )		984453	0					
ANR	984522	IdentifierDeclType	Sdb *		984453	0					
ANR	984523	Identifier	db		984453	1					
ANR	984524	AssignmentExpression	* db = sdb_new0 ( )		984453	2		=			
ANR	984525	Identifier	db		984453	0					
ANR	984526	CallExpression	sdb_new0 ( )		984453	1					
ANR	984527	Callee	sdb_new0		984453	0					
ANR	984528	Identifier	sdb_new0		984453	0					
ANR	984529	ArgumentList			984453	1					
ANR	984530	IdentifierDeclStatement	RAsmOp asmop = { 0 } ;	4385:1:123544:123562	984453	5	True				
ANR	984531	IdentifierDecl	asmop = { 0 }		984453	0					
ANR	984532	IdentifierDeclType	RAsmOp		984453	0					
ANR	984533	Identifier	asmop		984453	1					
ANR	984534	AssignmentExpression	asmop = { 0 }		984453	2		=			
ANR	984535	Identifier	asmop		984453	0					
ANR	984536	InitializerList	0		984453	1					
ANR	984537	PrimaryExpression	0		984453	0					
ANR	984538	IdentifierDeclStatement	RAnalOp aop = { 0 } ;	4386:1:123565:123582	984453	6	True				
ANR	984539	IdentifierDecl	aop = { 0 }		984453	0					
ANR	984540	IdentifierDeclType	RAnalOp		984453	0					
ANR	984541	Identifier	aop		984453	1					
ANR	984542	AssignmentExpression	aop = { 0 }		984453	2		=			
ANR	984543	Identifier	aop		984453	0					
ANR	984544	InitializerList	0		984453	1					
ANR	984545	PrimaryExpression	0		984453	0					
ANR	984546	IdentifierDeclStatement	"int i , ret ;"	4387:1:123585:123595	984453	7	True				
ANR	984547	IdentifierDecl	i		984453	0					
ANR	984548	IdentifierDeclType	int		984453	0					
ANR	984549	Identifier	i		984453	1					
ANR	984550	IdentifierDecl	ret		984453	1					
ANR	984551	IdentifierDeclType	int		984453	0					
ANR	984552	Identifier	ret		984453	1					
ANR	984553	IdentifierDeclStatement	ut8 * buf = core -> block ;	4388:1:123598:123620	984453	8	True				
ANR	984554	IdentifierDecl	* buf = core -> block		984453	0					
ANR	984555	IdentifierDeclType	ut8 *		984453	0					
ANR	984556	Identifier	buf		984453	1					
ANR	984557	AssignmentExpression	* buf = core -> block		984453	2		=			
ANR	984558	Identifier	buf		984453	0					
ANR	984559	PtrMemberAccess	core -> block		984453	1					
ANR	984560	Identifier	core		984453	0					
ANR	984561	Identifier	block		984453	1					
ANR	984562	IdentifierDeclStatement	"int loop , len = core -> blocksize ;"	4389:1:123623:123654	984453	9	True				
ANR	984563	IdentifierDecl	loop		984453	0					
ANR	984564	IdentifierDeclType	int		984453	0					
ANR	984565	Identifier	loop		984453	1					
ANR	984566	IdentifierDecl	len = core -> blocksize		984453	1					
ANR	984567	IdentifierDeclType	int		984453	0					
ANR	984568	Identifier	len		984453	1					
ANR	984569	AssignmentExpression	len = core -> blocksize		984453	2		=			
ANR	984570	Identifier	len		984453	0					
ANR	984571	PtrMemberAccess	core -> blocksize		984453	1					
ANR	984572	Identifier	core		984453	0					
ANR	984573	Identifier	blocksize		984453	1					
ANR	984574	ForStatement	for ( loop = 0 ; loop < 2 ; loop ++ )		984453	10					
ANR	984575	ForInit	loop = 0 ;	4390:6:123662:123670	984453	0	True				
ANR	984576	AssignmentExpression	loop = 0		984453	0		=			
ANR	984577	Identifier	loop		984453	0					
ANR	984578	PrimaryExpression	0		984453	1					
ANR	984579	Condition	loop < 2	4390:16:123672:123679	984453	1	True				
ANR	984580	RelationalExpression	loop < 2		984453	0		<			
ANR	984581	Identifier	loop		984453	0					
ANR	984582	PrimaryExpression	2		984453	1					
ANR	984583	PostIncDecOperationExpression	loop ++	4390:27:123683:123689	984453	2	True				
ANR	984584	Identifier	loop		984453	0					
ANR	984585	IncDec	++		984453	1					
ANR	984586	CompoundStatement		12:36:432:432	984453	3					
ANR	984587	ForStatement	for ( i = 0 ; i < len ; i += aop . size )		984453	0					
ANR	984588	ForInit	i = 0 ;	4391:7:123701:123706	984453	0	True				
ANR	984589	AssignmentExpression	i = 0		984453	0		=			
ANR	984590	Identifier	i		984453	0					
ANR	984591	PrimaryExpression	0		984453	1					
ANR	984592	Condition	i < len	4391:14:123708:123714	984453	1	True				
ANR	984593	RelationalExpression	i < len		984453	0		<			
ANR	984594	Identifier	i		984453	0					
ANR	984595	Identifier	len		984453	1					
ANR	984596	AssignmentExpression	i += aop . size	4391:23:123717:123728	984453	2	True	+=			
ANR	984597	Identifier	i		984453	0					
ANR	984598	MemberAccess	aop . size		984453	1					
ANR	984599	Identifier	aop		984453	0					
ANR	984600	Identifier	size		984453	1					
ANR	984601	CompoundStatement		13:37:471:471	984453	3					
ANR	984602	ExpressionStatement	r_anal_op_fini ( & aop )	4392:3:123736:123757	984453	0	True				
ANR	984603	CallExpression	r_anal_op_fini ( & aop )		984453	0					
ANR	984604	Callee	r_anal_op_fini		984453	0					
ANR	984605	Identifier	r_anal_op_fini		984453	0					
ANR	984606	ArgumentList	& aop		984453	1					
ANR	984607	Argument	& aop		984453	0					
ANR	984608	UnaryOperationExpression	& aop		984453	0					
ANR	984609	UnaryOperator	&		984453	0					
ANR	984610	Identifier	aop		984453	1					
ANR	984611	ExpressionStatement	"r_asm_set_pc ( core -> assembler , addr + i )"	4393:3:123762:123802	984453	1	True				
ANR	984612	CallExpression	"r_asm_set_pc ( core -> assembler , addr + i )"		984453	0					
ANR	984613	Callee	r_asm_set_pc		984453	0					
ANR	984614	Identifier	r_asm_set_pc		984453	0					
ANR	984615	ArgumentList	core -> assembler		984453	1					
ANR	984616	Argument	core -> assembler		984453	0					
ANR	984617	PtrMemberAccess	core -> assembler		984453	0					
ANR	984618	Identifier	core		984453	0					
ANR	984619	Identifier	assembler		984453	1					
ANR	984620	Argument	addr + i		984453	1					
ANR	984621	AdditiveExpression	addr + i		984453	0		+			
ANR	984622	Identifier	addr		984453	0					
ANR	984623	Identifier	i		984453	1					
ANR	984624	ExpressionStatement	"ret = r_asm_disassemble ( core -> assembler , & asmop , buf + i , len - i )"	4399:3:123980:124047	984453	2	True				
ANR	984625	AssignmentExpression	"ret = r_asm_disassemble ( core -> assembler , & asmop , buf + i , len - i )"		984453	0		=			
ANR	984626	Identifier	ret		984453	0					
ANR	984627	CallExpression	"r_asm_disassemble ( core -> assembler , & asmop , buf + i , len - i )"		984453	1					
ANR	984628	Callee	r_asm_disassemble		984453	0					
ANR	984629	Identifier	r_asm_disassemble		984453	0					
ANR	984630	ArgumentList	core -> assembler		984453	1					
ANR	984631	Argument	core -> assembler		984453	0					
ANR	984632	PtrMemberAccess	core -> assembler		984453	0					
ANR	984633	Identifier	core		984453	0					
ANR	984634	Identifier	assembler		984453	1					
ANR	984635	Argument	& asmop		984453	1					
ANR	984636	UnaryOperationExpression	& asmop		984453	0					
ANR	984637	UnaryOperator	&		984453	0					
ANR	984638	Identifier	asmop		984453	1					
ANR	984639	Argument	buf + i		984453	2					
ANR	984640	AdditiveExpression	buf + i		984453	0		+			
ANR	984641	Identifier	buf		984453	0					
ANR	984642	Identifier	i		984453	1					
ANR	984643	Argument	len - i		984453	3					
ANR	984644	AdditiveExpression	len - i		984453	0		-			
ANR	984645	Identifier	len		984453	0					
ANR	984646	Identifier	i		984453	1					
ANR	984647	IfStatement	if ( ret < 0 )		984453	3					
ANR	984648	Condition	ret < 0	4400:7:124056:124062	984453	0	True				
ANR	984649	RelationalExpression	ret < 0		984453	0		<			
ANR	984650	Identifier	ret		984453	0					
ANR	984651	PrimaryExpression	0		984453	1					
ANR	984652	CompoundStatement		22:16:805:805	984453	1					
ANR	984653	ExpressionStatement	asmop . size = 1	4401:4:124071:124085	984453	0	True				
ANR	984654	AssignmentExpression	asmop . size = 1		984453	0		=			
ANR	984655	MemberAccess	asmop . size		984453	0					
ANR	984656	Identifier	asmop		984453	0					
ANR	984657	Identifier	size		984453	1					
ANR	984658	PrimaryExpression	1		984453	1					
ANR	984659	ContinueStatement	continue ;	4402:4:124091:124099	984453	1	True				
ANR	984660	ExpressionStatement	"ret = r_anal_op ( core -> anal , & aop , addr + i , buf + i , len - i )"	4404:3:124109:124172	984453	4	True				
ANR	984661	AssignmentExpression	"ret = r_anal_op ( core -> anal , & aop , addr + i , buf + i , len - i )"		984453	0		=			
ANR	984662	Identifier	ret		984453	0					
ANR	984663	CallExpression	"r_anal_op ( core -> anal , & aop , addr + i , buf + i , len - i )"		984453	1					
ANR	984664	Callee	r_anal_op		984453	0					
ANR	984665	Identifier	r_anal_op		984453	0					
ANR	984666	ArgumentList	core -> anal		984453	1					
ANR	984667	Argument	core -> anal		984453	0					
ANR	984668	PtrMemberAccess	core -> anal		984453	0					
ANR	984669	Identifier	core		984453	0					
ANR	984670	Identifier	anal		984453	1					
ANR	984671	Argument	& aop		984453	1					
ANR	984672	UnaryOperationExpression	& aop		984453	0					
ANR	984673	UnaryOperator	&		984453	0					
ANR	984674	Identifier	aop		984453	1					
ANR	984675	Argument	addr + i		984453	2					
ANR	984676	AdditiveExpression	addr + i		984453	0		+			
ANR	984677	Identifier	addr		984453	0					
ANR	984678	Identifier	i		984453	1					
ANR	984679	Argument	buf + i		984453	3					
ANR	984680	AdditiveExpression	buf + i		984453	0		+			
ANR	984681	Identifier	buf		984453	0					
ANR	984682	Identifier	i		984453	1					
ANR	984683	Argument	len - i		984453	4					
ANR	984684	AdditiveExpression	len - i		984453	0		-			
ANR	984685	Identifier	len		984453	0					
ANR	984686	Identifier	i		984453	1					
ANR	984687	IfStatement	if ( ret < 0 )		984453	5					
ANR	984688	Condition	ret < 0	4405:7:124181:124187	984453	0	True				
ANR	984689	RelationalExpression	ret < 0		984453	0		<			
ANR	984690	Identifier	ret		984453	0					
ANR	984691	PrimaryExpression	0		984453	1					
ANR	984692	CompoundStatement		27:16:930:930	984453	1					
ANR	984693	ExpressionStatement	aop . size = 1	4406:4:124196:124208	984453	0	True				
ANR	984694	AssignmentExpression	aop . size = 1		984453	0		=			
ANR	984695	MemberAccess	aop . size		984453	0					
ANR	984696	Identifier	aop		984453	0					
ANR	984697	Identifier	size		984453	1					
ANR	984698	PrimaryExpression	1		984453	1					
ANR	984699	ContinueStatement	continue ;	4407:4:124214:124222	984453	1	True				
ANR	984700	IfStatement	if ( loop > 0 )		984453	6					
ANR	984701	Condition	loop > 0	4409:7:124236:124243	984453	0	True				
ANR	984702	RelationalExpression	loop > 0		984453	0		>			
ANR	984703	Identifier	loop		984453	0					
ANR	984704	PrimaryExpression	0		984453	1					
ANR	984705	CompoundStatement		38:4:1162:1191	984453	1					
ANR	984706	IfStatement	if ( show_flags )		984453	0					
ANR	984707	Condition	show_flags	4410:8:124256:124265	984453	0	True				
ANR	984708	Identifier	show_flags		984453	0					
ANR	984709	CompoundStatement		32:20:1008:1008	984453	1					
ANR	984710	Statement	const	4411:5:124275:124279	984453	0	True				
ANR	984711	Statement	char	4411:11:124281:124284	984453	1	True				
ANR	984712	Statement	*	4411:16:124286:124286	984453	2	True				
ANR	984713	Statement	x	4411:17:124287:124287	984453	3	True				
ANR	984714	Statement	=	4411:19:124289:124289	984453	4	True				
ANR	984715	Statement	sdb_const_get	4411:21:124291:124303	984453	5	True				
ANR	984716	Statement	(	4411:35:124305:124305	984453	6	True				
ANR	984717	Statement	db	4411:36:124306:124307	984453	7	True				
ANR	984718	Statement	","	4411:38:124308:124308	984453	8	True				
ANR	984719	Statement	sdb_fmt	4411:40:124310:124316	984453	9	True				
ANR	984720	Statement	(	4411:48:124318:124318	984453	10	True				
ANR	984721	Statement	"""label.0x%"""	4411:49:124319:124329	984453	11	True				
ANR	984722	Statement	PFMT64x	4411:60:124330:124336	984453	12	True				
ANR	984723	Statement	","	4411:67:124337:124337	984453	13	True				
ANR	984724	Statement	addr	4411:69:124339:124342	984453	14	True				
ANR	984725	Statement	+	4411:74:124344:124344	984453	15	True				
ANR	984726	Statement	i	4411:76:124346:124346	984453	16	True				
ANR	984727	Statement	)	4411:77:124347:124347	984453	17	True				
ANR	984728	Statement	","	4411:78:124348:124348	984453	18	True				
ANR	984729	Statement	NULL	4411:80:124350:124353	984453	19	True				
ANR	984730	Statement	)	4411:84:124354:124354	984453	20	True				
ANR	984731	ExpressionStatement		4411:85:124355:124355	984453	21	True				
ANR	984732	IfStatement	if ( x )		984453	22					
ANR	984733	Condition	x	4412:9:124366:124366	984453	0	True				
ANR	984734	Identifier	x		984453	0					
ANR	984735	CompoundStatement		34:12:1109:1109	984453	1					
ANR	984736	ExpressionStatement	"r_cons_printf ( ""%s:\\n"" , x )"	4413:6:124377:124403	984453	0	True				
ANR	984737	CallExpression	"r_cons_printf ( ""%s:\\n"" , x )"		984453	0					
ANR	984738	Callee	r_cons_printf		984453	0					
ANR	984739	Identifier	r_cons_printf		984453	0					
ANR	984740	ArgumentList	"""%s:\\n"""		984453	1					
ANR	984741	Argument	"""%s:\\n"""		984453	0					
ANR	984742	PrimaryExpression	"""%s:\\n"""		984453	0					
ANR	984743	Argument	x		984453	1					
ANR	984744	Identifier	x		984453	0					
ANR	984745	IdentifierDeclStatement	char * asm_str = asmop . buf_asm ;	4416:4:124422:124451	984453	1	True				
ANR	984746	IdentifierDecl	* asm_str = asmop . buf_asm		984453	0					
ANR	984747	IdentifierDeclType	char *		984453	0					
ANR	984748	Identifier	asm_str		984453	1					
ANR	984749	AssignmentExpression	* asm_str = asmop . buf_asm		984453	2		=			
ANR	984750	Identifier	asm_str		984453	0					
ANR	984751	MemberAccess	asmop . buf_asm		984453	1					
ANR	984752	Identifier	asmop		984453	0					
ANR	984753	Identifier	buf_asm		984453	1					
ANR	984754	Statement	char	4417:4:124457:124460	984453	2	True				
ANR	984755	Statement	*	4417:9:124462:124462	984453	3	True				
ANR	984756	Statement	color_reg	4417:10:124463:124471	984453	4	True				
ANR	984757	Statement	=	4417:20:124473:124473	984453	5	True				
ANR	984758	Statement	P	4417:22:124475:124475	984453	6	True				
ANR	984759	Statement	(	4417:23:124476:124476	984453	7	True				
ANR	984760	Statement	reg	4417:24:124477:124479	984453	8	True				
ANR	984761	Statement	)	4417:27:124480:124480	984453	9	True				
ANR	984762	Statement	:	4417:28:124481:124481	984453	10	True				
ANR	984763	ExpressionStatement	Color_YELLOW	4417:30:124483:124495	984453	11	True				
ANR	984764	Identifier	Color_YELLOW		984453	0					
ANR	984765	Statement	char	4418:4:124501:124504	984453	12	True				
ANR	984766	Statement	*	4418:9:124506:124506	984453	13	True				
ANR	984767	Statement	color_num	4418:10:124507:124515	984453	14	True				
ANR	984768	Statement	=	4418:20:124517:124517	984453	15	True				
ANR	984769	Statement	P	4418:22:124519:124519	984453	16	True				
ANR	984770	Statement	(	4418:23:124520:124520	984453	17	True				
ANR	984771	Statement	num	4418:24:124521:124523	984453	18	True				
ANR	984772	Statement	)	4418:27:124524:124524	984453	19	True				
ANR	984773	Statement	:	4418:28:124525:124525	984453	20	True				
ANR	984774	ExpressionStatement	Color_CYAN	4418:30:124527:124537	984453	21	True				
ANR	984775	Identifier	Color_CYAN		984453	0					
ANR	984776	ExpressionStatement	"asm_str = r_print_colorize_opcode ( core -> print , asm_str , color_reg , color_num , false )"	4419:4:124543:124628	984453	22	True				
ANR	984777	AssignmentExpression	"asm_str = r_print_colorize_opcode ( core -> print , asm_str , color_reg , color_num , false )"		984453	0		=			
ANR	984778	Identifier	asm_str		984453	0					
ANR	984779	CallExpression	"r_print_colorize_opcode ( core -> print , asm_str , color_reg , color_num , false )"		984453	1					
ANR	984780	Callee	r_print_colorize_opcode		984453	0					
ANR	984781	Identifier	r_print_colorize_opcode		984453	0					
ANR	984782	ArgumentList	core -> print		984453	1					
ANR	984783	Argument	core -> print		984453	0					
ANR	984784	PtrMemberAccess	core -> print		984453	0					
ANR	984785	Identifier	core		984453	0					
ANR	984786	Identifier	print		984453	1					
ANR	984787	Argument	asm_str		984453	1					
ANR	984788	Identifier	asm_str		984453	0					
ANR	984789	Argument	color_reg		984453	2					
ANR	984790	Identifier	color_reg		984453	0					
ANR	984791	Argument	color_num		984453	3					
ANR	984792	Identifier	color_num		984453	0					
ANR	984793	Argument	false		984453	4					
ANR	984794	Identifier	false		984453	0					
ANR	984795	IfStatement	if ( show_imtrim )		984453	23					
ANR	984796	Condition	show_imtrim	4420:8:124638:124648	984453	0	True				
ANR	984797	Identifier	show_imtrim		984453	0					
ANR	984798	CompoundStatement		42:21:1391:1391	984453	1					
ANR	984799	ExpressionStatement	r_parse_immtrim ( asm_str )	4421:5:124658:124683	984453	0	True				
ANR	984800	CallExpression	r_parse_immtrim ( asm_str )		984453	0					
ANR	984801	Callee	r_parse_immtrim		984453	0					
ANR	984802	Identifier	r_parse_immtrim		984453	0					
ANR	984803	ArgumentList	asm_str		984453	1					
ANR	984804	Argument	asm_str		984453	0					
ANR	984805	Identifier	asm_str		984453	0					
ANR	984806	IfStatement	if ( show_offset )		984453	24					
ANR	984807	Condition	show_offset	4423:8:124699:124709	984453	0	True				
ANR	984808	Identifier	show_offset		984453	0					
ANR	984809	CompoundStatement		45:21:1452:1452	984453	1					
ANR	984810	ExpressionStatement	"r_print_offset ( core -> print , addr + i , 0 , 0 , 0 , 0 , NULL )"	4424:5:124719:124775	984453	0	True				
ANR	984811	CallExpression	"r_print_offset ( core -> print , addr + i , 0 , 0 , 0 , 0 , NULL )"		984453	0					
ANR	984812	Callee	r_print_offset		984453	0					
ANR	984813	Identifier	r_print_offset		984453	0					
ANR	984814	ArgumentList	core -> print		984453	1					
ANR	984815	Argument	core -> print		984453	0					
ANR	984816	PtrMemberAccess	core -> print		984453	0					
ANR	984817	Identifier	core		984453	0					
ANR	984818	Identifier	print		984453	1					
ANR	984819	Argument	addr + i		984453	1					
ANR	984820	AdditiveExpression	addr + i		984453	0		+			
ANR	984821	Identifier	addr		984453	0					
ANR	984822	Identifier	i		984453	1					
ANR	984823	Argument	0		984453	2					
ANR	984824	PrimaryExpression	0		984453	0					
ANR	984825	Argument	0		984453	3					
ANR	984826	PrimaryExpression	0		984453	0					
ANR	984827	Argument	0		984453	4					
ANR	984828	PrimaryExpression	0		984453	0					
ANR	984829	Argument	0		984453	5					
ANR	984830	PrimaryExpression	0		984453	0					
ANR	984831	Argument	NULL		984453	6					
ANR	984832	Identifier	NULL		984453	0					
ANR	984833	IfStatement	if ( show_bytes )		984453	25					
ANR	984834	Condition	show_bytes	4426:8:124791:124800	984453	0	True				
ANR	984835	Identifier	show_bytes		984453	0					
ANR	984836	CompoundStatement		50:5:1620:1682	984453	1					
ANR	984837	IdentifierDeclStatement	"char * hexstr = r_print_hexpair ( core -> print , asmop . buf_hex , - 1 ) ;"	4427:5:124810:124873	984453	0	True				
ANR	984838	IdentifierDecl	"* hexstr = r_print_hexpair ( core -> print , asmop . buf_hex , - 1 )"		984453	0					
ANR	984839	IdentifierDeclType	char *		984453	0					
ANR	984840	Identifier	hexstr		984453	1					
ANR	984841	AssignmentExpression	"* hexstr = r_print_hexpair ( core -> print , asmop . buf_hex , - 1 )"		984453	2		=			
ANR	984842	Identifier	hexstr		984453	0					
ANR	984843	CallExpression	"r_print_hexpair ( core -> print , asmop . buf_hex , - 1 )"		984453	1					
ANR	984844	Callee	r_print_hexpair		984453	0					
ANR	984845	Identifier	r_print_hexpair		984453	0					
ANR	984846	ArgumentList	core -> print		984453	1					
ANR	984847	Argument	core -> print		984453	0					
ANR	984848	PtrMemberAccess	core -> print		984453	0					
ANR	984849	Identifier	core		984453	0					
ANR	984850	Identifier	print		984453	1					
ANR	984851	Argument	asmop . buf_hex		984453	1					
ANR	984852	MemberAccess	asmop . buf_hex		984453	0					
ANR	984853	Identifier	asmop		984453	0					
ANR	984854	Identifier	buf_hex		984453	1					
ANR	984855	Argument	- 1		984453	2					
ANR	984856	UnaryOperationExpression	- 1		984453	0					
ANR	984857	UnaryOperator	-		984453	0					
ANR	984858	PrimaryExpression	1		984453	1					
ANR	984859	IdentifierDeclStatement	"const char * pad = r_str_pad ( ' ' , 20 - strlen ( asmop . buf_hex ) ) ;"	4428:5:124880:124942	984453	1	True				
ANR	984860	IdentifierDecl	"* pad = r_str_pad ( ' ' , 20 - strlen ( asmop . buf_hex ) )"		984453	0					
ANR	984861	IdentifierDeclType	const char *		984453	0					
ANR	984862	Identifier	pad		984453	1					
ANR	984863	AssignmentExpression	"* pad = r_str_pad ( ' ' , 20 - strlen ( asmop . buf_hex ) )"		984453	2		=			
ANR	984864	Identifier	pad		984453	0					
ANR	984865	CallExpression	"r_str_pad ( ' ' , 20 - strlen ( asmop . buf_hex ) )"		984453	1					
ANR	984866	Callee	r_str_pad		984453	0					
ANR	984867	Identifier	r_str_pad		984453	0					
ANR	984868	ArgumentList	' '		984453	1					
ANR	984869	Argument	' '		984453	0					
ANR	984870	PrimaryExpression	' '		984453	0					
ANR	984871	Argument	20 - strlen ( asmop . buf_hex )		984453	1					
ANR	984872	AdditiveExpression	20 - strlen ( asmop . buf_hex )		984453	0		-			
ANR	984873	PrimaryExpression	20		984453	0					
ANR	984874	CallExpression	strlen ( asmop . buf_hex )		984453	1					
ANR	984875	Callee	strlen		984453	0					
ANR	984876	Identifier	strlen		984453	0					
ANR	984877	ArgumentList	asmop . buf_hex		984453	1					
ANR	984878	Argument	asmop . buf_hex		984453	0					
ANR	984879	MemberAccess	asmop . buf_hex		984453	0					
ANR	984880	Identifier	asmop		984453	0					
ANR	984881	Identifier	buf_hex		984453	1					
ANR	984882	ExpressionStatement	"r_cons_printf ( "" %s%s %s\\n"" , pad , hexstr , asm_str )"	4429:5:124949:124999	984453	2	True				
ANR	984883	CallExpression	"r_cons_printf ( "" %s%s %s\\n"" , pad , hexstr , asm_str )"		984453	0					
ANR	984884	Callee	r_cons_printf		984453	0					
ANR	984885	Identifier	r_cons_printf		984453	0					
ANR	984886	ArgumentList	""" %s%s %s\\n"""		984453	1					
ANR	984887	Argument	""" %s%s %s\\n"""		984453	0					
ANR	984888	PrimaryExpression	""" %s%s %s\\n"""		984453	0					
ANR	984889	Argument	pad		984453	1					
ANR	984890	Identifier	pad		984453	0					
ANR	984891	Argument	hexstr		984453	2					
ANR	984892	Identifier	hexstr		984453	0					
ANR	984893	Argument	asm_str		984453	3					
ANR	984894	Identifier	asm_str		984453	0					
ANR	984895	ExpressionStatement	free ( hexstr )	4430:5:125006:125019	984453	3	True				
ANR	984896	CallExpression	free ( hexstr )		984453	0					
ANR	984897	Callee	free		984453	0					
ANR	984898	Identifier	free		984453	0					
ANR	984899	ArgumentList	hexstr		984453	1					
ANR	984900	Argument	hexstr		984453	0					
ANR	984901	Identifier	hexstr		984453	0					
ANR	984902	ElseStatement	else		984453	0					
ANR	984903	CompoundStatement		53:11:1772:1772	984453	0					
ANR	984904	ExpressionStatement	"r_cons_printf ( "" %s\\n"" , asm_str )"	4432:5:125039:125071	984453	0	True				
ANR	984905	CallExpression	"r_cons_printf ( "" %s\\n"" , asm_str )"		984453	0					
ANR	984906	Callee	r_cons_printf		984453	0					
ANR	984907	Identifier	r_cons_printf		984453	0					
ANR	984908	ArgumentList	""" %s\\n"""		984453	1					
ANR	984909	Argument	""" %s\\n"""		984453	0					
ANR	984910	PrimaryExpression	""" %s\\n"""		984453	0					
ANR	984911	Argument	asm_str		984453	1					
ANR	984912	Identifier	asm_str		984453	0					
ANR	984913	SwitchStatement	switch ( aop . type )		984453	7					
ANR	984914	Condition	aop . type	4435:11:125095:125102	984453	0	True				
ANR	984915	MemberAccess	aop . type		984453	0					
ANR	984916	Identifier	aop		984453	0					
ANR	984917	Identifier	type		984453	1					
ANR	984918	CompoundStatement		57:21:1845:1845	984453	1					
ANR	984919	Label	case R_ANAL_OP_TYPE_JMP :	4436:3:125110:125133	984453	0	True				
ANR	984920	Identifier	R_ANAL_OP_TYPE_JMP		984453	0					
ANR	984921	BreakStatement	break ;	4437:4:125139:125144	984453	1	True				
ANR	984922	Label	case R_ANAL_OP_TYPE_CALL :	4438:3:125149:125173	984453	2	True				
ANR	984923	Identifier	R_ANAL_OP_TYPE_CALL		984453	0					
ANR	984924	Label	case R_ANAL_OP_TYPE_CJMP :	4439:3:125178:125202	984453	3	True				
ANR	984925	Identifier	R_ANAL_OP_TYPE_CJMP		984453	0					
ANR	984926	Statement	sdb_set	4440:4:125208:125214	984453	4	True				
ANR	984927	Statement	(	4440:12:125216:125216	984453	5	True				
ANR	984928	Statement	db	4440:13:125217:125218	984453	6	True				
ANR	984929	Statement	","	4440:15:125219:125219	984453	7	True				
ANR	984930	Statement	sdb_fmt	4440:17:125221:125227	984453	8	True				
ANR	984931	Statement	(	4440:25:125229:125229	984453	9	True				
ANR	984932	Statement	"""label.0x%"""	4440:26:125230:125240	984453	10	True				
ANR	984933	Statement	PFMT64x	4440:37:125241:125247	984453	11	True				
ANR	984934	Statement	","	4440:44:125248:125248	984453	12	True				
ANR	984935	Statement	aop	4440:46:125250:125252	984453	13	True				
ANR	984936	Statement	.	4440:49:125253:125253	984453	14	True				
ANR	984937	Statement	jump	4440:50:125254:125257	984453	15	True				
ANR	984938	Statement	)	4440:54:125258:125258	984453	16	True				
ANR	984939	Statement	","	4440:55:125259:125259	984453	17	True				
ANR	984940	Statement	sdb_fmt	4441:5:125266:125272	984453	18	True				
ANR	984941	Statement	(	4441:13:125274:125274	984453	19	True				
ANR	984942	Statement	"""from.0x%"""	4441:14:125275:125284	984453	20	True				
ANR	984943	Statement	PFMT64x	4441:24:125285:125291	984453	21	True				
ANR	984944	Statement	","	4441:31:125292:125292	984453	22	True				
ANR	984945	Statement	addr	4441:33:125294:125297	984453	23	True				
ANR	984946	Statement	+	4441:38:125299:125299	984453	24	True				
ANR	984947	Statement	i	4441:40:125301:125301	984453	25	True				
ANR	984948	Statement	)	4441:41:125302:125302	984453	26	True				
ANR	984949	Statement	","	4441:42:125303:125303	984453	27	True				
ANR	984950	Statement	0	4441:44:125305:125305	984453	28	True				
ANR	984951	Statement	)	4441:45:125306:125306	984453	29	True				
ANR	984952	ExpressionStatement		4441:46:125307:125307	984453	30	True				
ANR	984953	BreakStatement	break ;	4442:4:125313:125318	984453	31	True				
ANR	984954	IfStatement	if ( aop . size < 1 )		984453	8					
ANR	984955	Condition	aop . size < 1	4444:7:125332:125343	984453	0	True				
ANR	984956	RelationalExpression	aop . size < 1		984453	0		<			
ANR	984957	MemberAccess	aop . size		984453	0					
ANR	984958	Identifier	aop		984453	0					
ANR	984959	Identifier	size		984453	1					
ANR	984960	PrimaryExpression	1		984453	1					
ANR	984961	CompoundStatement		66:21:2086:2086	984453	1					
ANR	984962	ExpressionStatement	aop . size = 1	4445:4:125352:125364	984453	0	True				
ANR	984963	AssignmentExpression	aop . size = 1		984453	0		=			
ANR	984964	MemberAccess	aop . size		984453	0					
ANR	984965	Identifier	aop		984453	0					
ANR	984966	Identifier	size		984453	1					
ANR	984967	PrimaryExpression	1		984453	1					
ANR	984968	ExpressionStatement	r_anal_op_fini ( & aop )	4449:1:125379:125400	984453	11	True				
ANR	984969	CallExpression	r_anal_op_fini ( & aop )		984453	0					
ANR	984970	Callee	r_anal_op_fini		984453	0					
ANR	984971	Identifier	r_anal_op_fini		984453	0					
ANR	984972	ArgumentList	& aop		984453	1					
ANR	984973	Argument	& aop		984453	0					
ANR	984974	UnaryOperationExpression	& aop		984453	0					
ANR	984975	UnaryOperator	&		984453	0					
ANR	984976	Identifier	aop		984453	1					
ANR	984977	ExpressionStatement	sdb_free ( db )	4450:1:125403:125416	984453	12	True				
ANR	984978	CallExpression	sdb_free ( db )		984453	0					
ANR	984979	Callee	sdb_free		984453	0					
ANR	984980	Identifier	sdb_free		984453	0					
ANR	984981	ArgumentList	db		984453	1					
ANR	984982	Argument	db		984453	0					
ANR	984983	Identifier	db		984453	0					
ANR	984984	ReturnType	static void		984453	1					
ANR	984985	Identifier	_disasm_recursive		984453	2					
ANR	984986	ParameterList	"RCore * core , ut64 addr , char type_print"		984453	3					
ANR	984987	Parameter	RCore * core	4379:30:123218:123228	984453	0	True				
ANR	984988	ParameterType	RCore *		984453	0					
ANR	984989	Identifier	core		984453	1					
ANR	984990	Parameter	ut64 addr	4379:43:123231:123239	984453	1	True				
ANR	984991	ParameterType	ut64		984453	0					
ANR	984992	Identifier	addr		984453	1					
ANR	984993	Parameter	char type_print	4379:54:123242:123256	984453	2	True				
ANR	984994	ParameterType	char		984453	0					
ANR	984995	Identifier	type_print		984453	1					
ANR	984996	CFGEntryNode	ENTRY		984453		True				
ANR	984997	CFGExitNode	EXIT		984453		True				
ANR	984998	Symbol	aop		984453						
ANR	984999	Symbol	show_bytes		984453						
ANR	985000	Symbol	show_offset		984453						
ANR	985001	Symbol	r_print_hexpair		984453						
ANR	985002	Symbol	* core		984453						
ANR	985003	Symbol	core -> assembler		984453						
ANR	985004	Symbol	hexstr		984453						
ANR	985005	Symbol	aop . type		984453						
ANR	985006	Symbol	asm_str		984453						
ANR	985007	Symbol	core -> anal		984453						
ANR	985008	Symbol	asmop . buf_hex		984453						
ANR	985009	Symbol	asmop		984453						
ANR	985010	Symbol	r_print_colorize_opcode		984453						
ANR	985011	Symbol	strlen		984453						
ANR	985012	Symbol	pad		984453						
ANR	985013	Symbol	aop . size		984453						
ANR	985014	Symbol	len		984453						
ANR	985015	Symbol	loop		984453						
ANR	985016	Symbol	show_flags		984453						
ANR	985017	Symbol	addr		984453						
ANR	985018	Symbol	type_print		984453						
ANR	985019	Symbol	r_anal_op		984453						
ANR	985020	Symbol	core -> config		984453						
ANR	985021	Symbol	ret		984453						
ANR	985022	Symbol	core -> blocksize		984453						
ANR	985023	Symbol	sdb_new0		984453						
ANR	985024	Symbol	NULL		984453						
ANR	985025	Symbol	r_str_pad		984453						
ANR	985026	Symbol	core -> block		984453						
ANR	985027	Symbol	false		984453						
ANR	985028	Symbol	i		984453						
ANR	985029	Symbol	& aop		984453						
ANR	985030	Symbol	asmop . buf_asm		984453						
ANR	985031	Symbol	color_reg		984453						
ANR	985032	Symbol	core		984453						
ANR	985033	Symbol	buf		984453						
ANR	985034	Symbol	show_imtrim		984453						
ANR	985035	Symbol	& asmop		984453						
ANR	985036	Symbol	r_config_get_i		984453						
ANR	985037	Symbol	asmop . size		984453						
ANR	985038	Symbol	x		984453						
ANR	985039	Symbol	core -> print		984453						
ANR	985040	Symbol	r_asm_disassemble		984453						
ANR	985041	Symbol	color_num		984453						
ANR	985042	Symbol	db		984453						
ANR	985043	Function	func_walk_blocks	4454:0:125428:129736							
ANR	985044	FunctionDef	"func_walk_blocks (RCore * core , RAnalFunction * f , char input , char type_print , bool fromHere)"		985043	0					
ANR	985045	CompoundStatement		4454:104:125532:129736	985043	0					
ANR	985046	IdentifierDeclStatement	RListIter * iter ;	4455:1:125535:125550	985043	0	True				
ANR	985047	IdentifierDecl	* iter		985043	0					
ANR	985048	IdentifierDeclType	RListIter *		985043	0					
ANR	985049	Identifier	iter		985043	1					
ANR	985050	IdentifierDeclStatement	RAnalBlock * b = NULL ;	4456:1:125553:125573	985043	1	True				
ANR	985051	IdentifierDecl	* b = NULL		985043	0					
ANR	985052	IdentifierDeclType	RAnalBlock *		985043	0					
ANR	985053	Identifier	b		985043	1					
ANR	985054	AssignmentExpression	* b = NULL		985043	2		=			
ANR	985055	Identifier	NULL		985043	0					
ANR	985056	Identifier	NULL		985043	1					
ANR	985057	IdentifierDeclStatement	RAnalFunction * tmp_func ;	4457:1:125576:125599	985043	2	True				
ANR	985058	IdentifierDecl	* tmp_func		985043	0					
ANR	985059	IdentifierDeclType	RAnalFunction *		985043	0					
ANR	985060	Identifier	tmp_func		985043	1					
ANR	985061	IdentifierDeclStatement	RListIter * locs_it = NULL ;	4458:1:125602:125627	985043	3	True				
ANR	985062	IdentifierDecl	* locs_it = NULL		985043	0					
ANR	985063	IdentifierDeclType	RListIter *		985043	0					
ANR	985064	Identifier	locs_it		985043	1					
ANR	985065	AssignmentExpression	* locs_it = NULL		985043	2		=			
ANR	985066	Identifier	NULL		985043	0					
ANR	985067	Identifier	NULL		985043	1					
ANR	985068	IdentifierDeclStatement	"const char * orig_bb_middle = r_config_get ( core -> config , ""asm.bb.middle"" ) ;"	4459:1:125630:125703	985043	4	True				
ANR	985069	IdentifierDecl	"* orig_bb_middle = r_config_get ( core -> config , ""asm.bb.middle"" )"		985043	0					
ANR	985070	IdentifierDeclType	const char *		985043	0					
ANR	985071	Identifier	orig_bb_middle		985043	1					
ANR	985072	AssignmentExpression	"* orig_bb_middle = r_config_get ( core -> config , ""asm.bb.middle"" )"		985043	2		=			
ANR	985073	Identifier	orig_bb_middle		985043	0					
ANR	985074	CallExpression	"r_config_get ( core -> config , ""asm.bb.middle"" )"		985043	1					
ANR	985075	Callee	r_config_get		985043	0					
ANR	985076	Identifier	r_config_get		985043	0					
ANR	985077	ArgumentList	core -> config		985043	1					
ANR	985078	Argument	core -> config		985043	0					
ANR	985079	PtrMemberAccess	core -> config		985043	0					
ANR	985080	Identifier	core		985043	0					
ANR	985081	Identifier	config		985043	1					
ANR	985082	Argument	"""asm.bb.middle"""		985043	1					
ANR	985083	PrimaryExpression	"""asm.bb.middle"""		985043	0					
ANR	985084	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.bb.middle"" , false )"	4460:1:125706:125759	985043	5	True				
ANR	985085	CallExpression	"r_config_set_i ( core -> config , ""asm.bb.middle"" , false )"		985043	0					
ANR	985086	Callee	r_config_set_i		985043	0					
ANR	985087	Identifier	r_config_set_i		985043	0					
ANR	985088	ArgumentList	core -> config		985043	1					
ANR	985089	Argument	core -> config		985043	0					
ANR	985090	PtrMemberAccess	core -> config		985043	0					
ANR	985091	Identifier	core		985043	0					
ANR	985092	Identifier	config		985043	1					
ANR	985093	Argument	"""asm.bb.middle"""		985043	1					
ANR	985094	PrimaryExpression	"""asm.bb.middle"""		985043	0					
ANR	985095	Argument	false		985043	2					
ANR	985096	Identifier	false		985043	0					
ANR	985097	IdentifierDeclStatement	PJ * pj = NULL ;	4461:1:125762:125775	985043	6	True				
ANR	985098	IdentifierDecl	* pj = NULL		985043	0					
ANR	985099	IdentifierDeclType	PJ *		985043	0					
ANR	985100	Identifier	pj		985043	1					
ANR	985101	AssignmentExpression	* pj = NULL		985043	2		=			
ANR	985102	Identifier	NULL		985043	0					
ANR	985103	Identifier	NULL		985043	1					
ANR	985104	IfStatement	if ( f -> fcn_locs )		985043	7					
ANR	985105	Condition	f -> fcn_locs	4463:5:125783:125793	985043	0	True				
ANR	985106	PtrMemberAccess	f -> fcn_locs		985043	0					
ANR	985107	Identifier	f		985043	0					
ANR	985108	Identifier	fcn_locs		985043	1					
ANR	985109	CompoundStatement		10:18:263:263	985043	1					
ANR	985110	ExpressionStatement	locs_it = f -> fcn_locs -> head	4464:2:125800:125827	985043	0	True				
ANR	985111	AssignmentExpression	locs_it = f -> fcn_locs -> head		985043	0		=			
ANR	985112	Identifier	locs_it		985043	0					
ANR	985113	PtrMemberAccess	f -> fcn_locs -> head		985043	1					
ANR	985114	PtrMemberAccess	f -> fcn_locs		985043	0					
ANR	985115	Identifier	f		985043	0					
ANR	985116	Identifier	fcn_locs		985043	1					
ANR	985117	Identifier	head		985043	1					
ANR	985118	IfStatement	if ( ! b )		985043	8					
ANR	985119	Condition	! b	4467:5:125891:125892	985043	0	True				
ANR	985120	UnaryOperationExpression	! b		985043	0					
ANR	985121	UnaryOperator	!		985043	0					
ANR	985122	Identifier	b		985043	1					
ANR	985123	CompoundStatement		14:9:362:362	985043	1					
ANR	985124	IfStatement	if ( r_list_length ( f -> bbs ) >= 1 )		985043	0					
ANR	985125	Condition	r_list_length ( f -> bbs ) >= 1	4468:6:125903:125929	985043	0	True				
ANR	985126	RelationalExpression	r_list_length ( f -> bbs ) >= 1		985043	0		>=			
ANR	985127	CallExpression	r_list_length ( f -> bbs )		985043	0					
ANR	985128	Callee	r_list_length		985043	0					
ANR	985129	Identifier	r_list_length		985043	0					
ANR	985130	ArgumentList	f -> bbs		985043	1					
ANR	985131	Argument	f -> bbs		985043	0					
ANR	985132	PtrMemberAccess	f -> bbs		985043	0					
ANR	985133	Identifier	f		985043	0					
ANR	985134	Identifier	bbs		985043	1					
ANR	985135	PrimaryExpression	1		985043	1					
ANR	985136	CompoundStatement		16:3:404:443	985043	1					
ANR	985137	IdentifierDeclStatement	ut32 fcn_size = r_anal_fcn_realsize ( f ) ;	4469:3:125937:125976	985043	0	True				
ANR	985138	IdentifierDecl	fcn_size = r_anal_fcn_realsize ( f )		985043	0					
ANR	985139	IdentifierDeclType	ut32		985043	0					
ANR	985140	Identifier	fcn_size		985043	1					
ANR	985141	AssignmentExpression	fcn_size = r_anal_fcn_realsize ( f )		985043	2		=			
ANR	985142	Identifier	fcn_size		985043	0					
ANR	985143	CallExpression	r_anal_fcn_realsize ( f )		985043	1					
ANR	985144	Callee	r_anal_fcn_realsize		985043	0					
ANR	985145	Identifier	r_anal_fcn_realsize		985043	0					
ANR	985146	ArgumentList	f		985043	1					
ANR	985147	Argument	f		985043	0					
ANR	985148	Identifier	f		985043	0					
ANR	985149	ExpressionStatement	b = r_list_get_top ( f -> bbs )	4470:3:125981:126008	985043	1	True				
ANR	985150	AssignmentExpression	b = r_list_get_top ( f -> bbs )		985043	0		=			
ANR	985151	Identifier	b		985043	0					
ANR	985152	CallExpression	r_list_get_top ( f -> bbs )		985043	1					
ANR	985153	Callee	r_list_get_top		985043	0					
ANR	985154	Identifier	r_list_get_top		985043	0					
ANR	985155	ArgumentList	f -> bbs		985043	1					
ANR	985156	Argument	f -> bbs		985043	0					
ANR	985157	PtrMemberAccess	f -> bbs		985043	0					
ANR	985158	Identifier	f		985043	0					
ANR	985159	Identifier	bbs		985043	1					
ANR	985160	IfStatement	if ( b -> size > fcn_size )		985043	2					
ANR	985161	Condition	b -> size > fcn_size	4471:7:126017:126034	985043	0	True				
ANR	985162	RelationalExpression	b -> size > fcn_size		985043	0		>			
ANR	985163	PtrMemberAccess	b -> size		985043	0					
ANR	985164	Identifier	b		985043	0					
ANR	985165	Identifier	size		985043	1					
ANR	985166	Identifier	fcn_size		985043	1					
ANR	985167	CompoundStatement		18:27:504:504	985043	1					
ANR	985168	ExpressionStatement	b -> size = fcn_size	4472:4:126043:126061	985043	0	True				
ANR	985169	AssignmentExpression	b -> size = fcn_size		985043	0		=			
ANR	985170	PtrMemberAccess	b -> size		985043	0					
ANR	985171	Identifier	b		985043	0					
ANR	985172	Identifier	size		985043	1					
ANR	985173	Identifier	fcn_size		985043	1					
ANR	985174	ExpressionStatement	"r_list_sort ( f -> bbs , ( RListComparator ) bbcmp )"	4476:1:126076:126121	985043	9	True				
ANR	985175	CallExpression	"r_list_sort ( f -> bbs , ( RListComparator ) bbcmp )"		985043	0					
ANR	985176	Callee	r_list_sort		985043	0					
ANR	985177	Identifier	r_list_sort		985043	0					
ANR	985178	ArgumentList	f -> bbs		985043	1					
ANR	985179	Argument	f -> bbs		985043	0					
ANR	985180	PtrMemberAccess	f -> bbs		985043	0					
ANR	985181	Identifier	f		985043	0					
ANR	985182	Identifier	bbs		985043	1					
ANR	985183	Argument	( RListComparator ) bbcmp		985043	1					
ANR	985184	CastExpression	( RListComparator ) bbcmp		985043	0					
ANR	985185	CastTarget	RListComparator		985043	0					
ANR	985186	Identifier	bbcmp		985043	1					
ANR	985187	IfStatement	if ( input == 'j' && b )		985043	10					
ANR	985188	Condition	input == 'j' && b	4477:5:126128:126144	985043	0	True				
ANR	985189	AndExpression	input == 'j' && b		985043	0		&&			
ANR	985190	EqualityExpression	input == 'j'		985043	0		==			
ANR	985191	Identifier	input		985043	0					
ANR	985192	PrimaryExpression	'j'		985043	1					
ANR	985193	Identifier	b		985043	1					
ANR	985194	CompoundStatement		24:24:614:614	985043	1					
ANR	985195	ExpressionStatement	pj = pj_new ( )	4478:2:126151:126165	985043	0	True				
ANR	985196	AssignmentExpression	pj = pj_new ( )		985043	0		=			
ANR	985197	Identifier	pj		985043	0					
ANR	985198	CallExpression	pj_new ( )		985043	1					
ANR	985199	Callee	pj_new		985043	0					
ANR	985200	Identifier	pj_new		985043	0					
ANR	985201	ArgumentList			985043	1					
ANR	985202	IfStatement	if ( ! pj )		985043	1					
ANR	985203	Condition	! pj	4479:6:126173:126175	985043	0	True				
ANR	985204	UnaryOperationExpression	! pj		985043	0					
ANR	985205	UnaryOperator	!		985043	0					
ANR	985206	Identifier	pj		985043	1					
ANR	985207	CompoundStatement		26:11:645:645	985043	1					
ANR	985208	ReturnStatement	return ;	4480:3:126183:126189	985043	0	True				
ANR	985209	ExpressionStatement	pj_a ( pj )	4482:2:126197:126206	985043	2	True				
ANR	985210	CallExpression	pj_a ( pj )		985043	0					
ANR	985211	Callee	pj_a		985043	0					
ANR	985212	Identifier	pj_a		985043	0					
ANR	985213	ArgumentList	pj		985043	1					
ANR	985214	Argument	pj		985043	0					
ANR	985215	Identifier	pj		985043	0					
ANR	985216	ForStatement	for ( ; locs_it && ( tmp_func = locs_it -> data ) ; locs_it = locs_it -> n )		985043	3					
ANR	985217	Condition	locs_it && ( tmp_func = locs_it -> data )	4483:9:126217:126253	985043	0	True				
ANR	985218	AndExpression	locs_it && ( tmp_func = locs_it -> data )		985043	0		&&			
ANR	985219	Identifier	locs_it		985043	0					
ANR	985220	AssignmentExpression	tmp_func = locs_it -> data		985043	1		=			
ANR	985221	Identifier	tmp_func		985043	0					
ANR	985222	PtrMemberAccess	locs_it -> data		985043	1					
ANR	985223	Identifier	locs_it		985043	0					
ANR	985224	Identifier	data		985043	1					
ANR	985225	AssignmentExpression	locs_it = locs_it -> n	4483:48:126256:126275	985043	1	True	=			
ANR	985226	Identifier	locs_it		985043	0					
ANR	985227	PtrMemberAccess	locs_it -> n		985043	1					
ANR	985228	Identifier	locs_it		985043	0					
ANR	985229	Identifier	n		985043	1					
ANR	985230	CompoundStatement		30:70:745:745	985043	2					
ANR	985231	IfStatement	if ( r_cons_is_breaked ( ) )		985043	0					
ANR	985232	Condition	r_cons_is_breaked ( )	4484:7:126287:126306	985043	0	True				
ANR	985233	CallExpression	r_cons_is_breaked ( )		985043	0					
ANR	985234	Callee	r_cons_is_breaked		985043	0					
ANR	985235	Identifier	r_cons_is_breaked		985043	0					
ANR	985236	ArgumentList			985043	1					
ANR	985237	CompoundStatement		31:29:776:776	985043	1					
ANR	985238	BreakStatement	break ;	4485:4:126315:126320	985043	0	True				
ANR	985239	IfStatement	if ( fromHere )		985043	1					
ANR	985240	Condition	fromHere	4487:7:126334:126341	985043	0	True				
ANR	985241	Identifier	fromHere		985043	0					
ANR	985242	CompoundStatement		34:17:811:811	985043	1					
ANR	985243	IfStatement	if ( b -> addr < core -> offset )		985043	0					
ANR	985244	Condition	b -> addr < core -> offset	4488:8:126354:126375	985043	0	True				
ANR	985245	RelationalExpression	b -> addr < core -> offset		985043	0		<			
ANR	985246	PtrMemberAccess	b -> addr		985043	0					
ANR	985247	Identifier	b		985043	0					
ANR	985248	Identifier	addr		985043	1					
ANR	985249	PtrMemberAccess	core -> offset		985043	1					
ANR	985250	Identifier	core		985043	0					
ANR	985251	Identifier	offset		985043	1					
ANR	985252	CompoundStatement		35:32:845:845	985043	1					
ANR	985253	ExpressionStatement	core -> cons -> null = true	4489:5:126385:126408	985043	0	True				
ANR	985254	AssignmentExpression	core -> cons -> null = true		985043	0		=			
ANR	985255	PtrMemberAccess	core -> cons -> null		985043	0					
ANR	985256	PtrMemberAccess	core -> cons		985043	0					
ANR	985257	Identifier	core		985043	0					
ANR	985258	Identifier	cons		985043	1					
ANR	985259	Identifier	null		985043	1					
ANR	985260	Identifier	true		985043	1					
ANR	985261	ElseStatement	else		985043	0					
ANR	985262	CompoundStatement		37:11:888:888	985043	0					
ANR	985263	ExpressionStatement	core -> cons -> null = false	4491:5:126428:126452	985043	0	True				
ANR	985264	AssignmentExpression	core -> cons -> null = false		985043	0		=			
ANR	985265	PtrMemberAccess	core -> cons -> null		985043	0					
ANR	985266	PtrMemberAccess	core -> cons		985043	0					
ANR	985267	Identifier	core		985043	0					
ANR	985268	Identifier	cons		985043	1					
ANR	985269	Identifier	null		985043	1					
ANR	985270	Identifier	false		985043	1					
ANR	985271	IfStatement	if ( tmp_func -> addr > f -> addr )		985043	2					
ANR	985272	Condition	tmp_func -> addr > f -> addr	4494:7:126472:126495	985043	0	True				
ANR	985273	RelationalExpression	tmp_func -> addr > f -> addr		985043	0		>			
ANR	985274	PtrMemberAccess	tmp_func -> addr		985043	0					
ANR	985275	Identifier	tmp_func		985043	0					
ANR	985276	Identifier	addr		985043	1					
ANR	985277	PtrMemberAccess	f -> addr		985043	1					
ANR	985278	Identifier	f		985043	0					
ANR	985279	Identifier	addr		985043	1					
ANR	985280	CompoundStatement		41:33:965:965	985043	1					
ANR	985281	BreakStatement	break ;	4495:4:126504:126509	985043	0	True				
ANR	985282	Statement	r_list_foreach	4497:3:126519:126532	985043	3	True				
ANR	985283	Statement	(	4497:18:126534:126534	985043	4	True				
ANR	985284	Statement	tmp_func	4497:19:126535:126542	985043	5	True				
ANR	985285	Statement	->	4497:27:126543:126544	985043	6	True				
ANR	985286	Statement	bbs	4497:29:126545:126547	985043	7	True				
ANR	985287	Statement	","	4497:32:126548:126548	985043	8	True				
ANR	985288	Statement	iter	4497:34:126550:126553	985043	9	True				
ANR	985289	Statement	","	4497:38:126554:126554	985043	10	True				
ANR	985290	Statement	b	4497:40:126556:126556	985043	11	True				
ANR	985291	Statement	)	4497:41:126557:126557	985043	12	True				
ANR	985292	CompoundStatement		47:4:1156:1183	985043	13					
ANR	985293	IdentifierDeclStatement	ut8 * buf = malloc ( b -> size ) ;	4500:4:126689:126716	985043	0	True				
ANR	985294	IdentifierDecl	* buf = malloc ( b -> size )		985043	0					
ANR	985295	IdentifierDeclType	ut8 *		985043	0					
ANR	985296	Identifier	buf		985043	1					
ANR	985297	AssignmentExpression	* buf = malloc ( b -> size )		985043	2		=			
ANR	985298	Identifier	buf		985043	0					
ANR	985299	CallExpression	malloc ( b -> size )		985043	1					
ANR	985300	Callee	malloc		985043	0					
ANR	985301	Identifier	malloc		985043	0					
ANR	985302	ArgumentList	b -> size		985043	1					
ANR	985303	Argument	b -> size		985043	0					
ANR	985304	PtrMemberAccess	b -> size		985043	0					
ANR	985305	Identifier	b		985043	0					
ANR	985306	Identifier	size		985043	1					
ANR	985307	IfStatement	if ( buf )		985043	1					
ANR	985308	Condition	buf	4501:8:126726:126728	985043	0	True				
ANR	985309	Identifier	buf		985043	0					
ANR	985310	CompoundStatement		48:13:1198:1198	985043	1					
ANR	985311	ExpressionStatement	"r_io_read_at ( core -> io , b -> addr , buf , b -> size )"	4502:5:126738:126784	985043	0	True				
ANR	985312	CallExpression	"r_io_read_at ( core -> io , b -> addr , buf , b -> size )"		985043	0					
ANR	985313	Callee	r_io_read_at		985043	0					
ANR	985314	Identifier	r_io_read_at		985043	0					
ANR	985315	ArgumentList	core -> io		985043	1					
ANR	985316	Argument	core -> io		985043	0					
ANR	985317	PtrMemberAccess	core -> io		985043	0					
ANR	985318	Identifier	core		985043	0					
ANR	985319	Identifier	io		985043	1					
ANR	985320	Argument	b -> addr		985043	1					
ANR	985321	PtrMemberAccess	b -> addr		985043	0					
ANR	985322	Identifier	b		985043	0					
ANR	985323	Identifier	addr		985043	1					
ANR	985324	Argument	buf		985043	2					
ANR	985325	Identifier	buf		985043	0					
ANR	985326	Argument	b -> size		985043	3					
ANR	985327	PtrMemberAccess	b -> size		985043	0					
ANR	985328	Identifier	b		985043	0					
ANR	985329	Identifier	size		985043	1					
ANR	985330	ExpressionStatement	"r_core_print_disasm_json ( core , b -> addr , buf , b -> size , 0 , pj )"	4503:5:126791:126852	985043	1	True				
ANR	985331	CallExpression	"r_core_print_disasm_json ( core , b -> addr , buf , b -> size , 0 , pj )"		985043	0					
ANR	985332	Callee	r_core_print_disasm_json		985043	0					
ANR	985333	Identifier	r_core_print_disasm_json		985043	0					
ANR	985334	ArgumentList	core		985043	1					
ANR	985335	Argument	core		985043	0					
ANR	985336	Identifier	core		985043	0					
ANR	985337	Argument	b -> addr		985043	1					
ANR	985338	PtrMemberAccess	b -> addr		985043	0					
ANR	985339	Identifier	b		985043	0					
ANR	985340	Identifier	addr		985043	1					
ANR	985341	Argument	buf		985043	2					
ANR	985342	Identifier	buf		985043	0					
ANR	985343	Argument	b -> size		985043	3					
ANR	985344	PtrMemberAccess	b -> size		985043	0					
ANR	985345	Identifier	b		985043	0					
ANR	985346	Identifier	size		985043	1					
ANR	985347	Argument	0		985043	4					
ANR	985348	PrimaryExpression	0		985043	0					
ANR	985349	Argument	pj		985043	5					
ANR	985350	Identifier	pj		985043	0					
ANR	985351	ExpressionStatement	free ( buf )	4504:5:126859:126869	985043	2	True				
ANR	985352	CallExpression	free ( buf )		985043	0					
ANR	985353	Callee	free		985043	0					
ANR	985354	Identifier	free		985043	0					
ANR	985355	ArgumentList	buf		985043	1					
ANR	985356	Argument	buf		985043	0					
ANR	985357	Identifier	buf		985043	0					
ANR	985358	ElseStatement	else		985043	0					
ANR	985359	CompoundStatement		52:11:1349:1349	985043	0					
ANR	985360	ExpressionStatement	"eprintf ( ""cannot allocate %d byte(s)\\n"" , b -> size )"	4506:5:126889:126938	985043	0	True				
ANR	985361	CallExpression	"eprintf ( ""cannot allocate %d byte(s)\\n"" , b -> size )"		985043	0					
ANR	985362	Callee	eprintf		985043	0					
ANR	985363	Identifier	eprintf		985043	0					
ANR	985364	ArgumentList	"""cannot allocate %d byte(s)\\n"""		985043	1					
ANR	985365	Argument	"""cannot allocate %d byte(s)\\n"""		985043	0					
ANR	985366	PrimaryExpression	"""cannot allocate %d byte(s)\\n"""		985043	0					
ANR	985367	Argument	b -> size		985043	1					
ANR	985368	PtrMemberAccess	b -> size		985043	0					
ANR	985369	Identifier	b		985043	0					
ANR	985370	Identifier	size		985043	1					
ANR	985371	Statement	r_list_foreach	4510:2:126957:126970	985043	4	True				
ANR	985372	Statement	(	4510:17:126972:126972	985043	5	True				
ANR	985373	Statement	f	4510:18:126973:126973	985043	6	True				
ANR	985374	Statement	->	4510:19:126974:126975	985043	7	True				
ANR	985375	Statement	bbs	4510:21:126976:126978	985043	8	True				
ANR	985376	Statement	","	4510:24:126979:126979	985043	9	True				
ANR	985377	Statement	iter	4510:26:126981:126984	985043	10	True				
ANR	985378	Statement	","	4510:30:126985:126985	985043	11	True				
ANR	985379	Statement	b	4510:32:126987:126987	985043	12	True				
ANR	985380	Statement	)	4510:33:126988:126988	985043	13	True				
ANR	985381	CompoundStatement		70:3:1802:1829	985043	14					
ANR	985382	IfStatement	if ( fromHere )		985043	0					
ANR	985383	Condition	fromHere	4511:7:126999:127006	985043	0	True				
ANR	985384	Identifier	fromHere		985043	0					
ANR	985385	CompoundStatement		58:17:1476:1476	985043	1					
ANR	985386	IfStatement	if ( b -> addr < core -> offset )		985043	0					
ANR	985387	Condition	b -> addr < core -> offset	4512:8:127019:127040	985043	0	True				
ANR	985388	RelationalExpression	b -> addr < core -> offset		985043	0		<			
ANR	985389	PtrMemberAccess	b -> addr		985043	0					
ANR	985390	Identifier	b		985043	0					
ANR	985391	Identifier	addr		985043	1					
ANR	985392	PtrMemberAccess	core -> offset		985043	1					
ANR	985393	Identifier	core		985043	0					
ANR	985394	Identifier	offset		985043	1					
ANR	985395	CompoundStatement		59:32:1510:1510	985043	1					
ANR	985396	ExpressionStatement	core -> cons -> null = true	4513:5:127050:127073	985043	0	True				
ANR	985397	AssignmentExpression	core -> cons -> null = true		985043	0		=			
ANR	985398	PtrMemberAccess	core -> cons -> null		985043	0					
ANR	985399	PtrMemberAccess	core -> cons		985043	0					
ANR	985400	Identifier	core		985043	0					
ANR	985401	Identifier	cons		985043	1					
ANR	985402	Identifier	null		985043	1					
ANR	985403	Identifier	true		985043	1					
ANR	985404	ElseStatement	else		985043	0					
ANR	985405	CompoundStatement		61:11:1553:1553	985043	0					
ANR	985406	ExpressionStatement	core -> cons -> null = false	4515:5:127093:127117	985043	0	True				
ANR	985407	AssignmentExpression	core -> cons -> null = false		985043	0		=			
ANR	985408	PtrMemberAccess	core -> cons -> null		985043	0					
ANR	985409	PtrMemberAccess	core -> cons		985043	0					
ANR	985410	Identifier	core		985043	0					
ANR	985411	Identifier	cons		985043	1					
ANR	985412	Identifier	null		985043	1					
ANR	985413	Identifier	false		985043	1					
ANR	985414	ExpressionStatement	"r_core_print_disasm_json ( core , core -> offset , buf , bsize , 0 )"	4519:3:127139:127199	985043	1	True				
ANR	985415	CallExpression	"r_core_print_disasm_json ( core , core -> offset , buf , bsize , 0 )"		985043	0					
ANR	985416	Callee	r_core_print_disasm_json		985043	0					
ANR	985417	Identifier	r_core_print_disasm_json		985043	0					
ANR	985418	ArgumentList	core		985043	1					
ANR	985419	Argument	core		985043	0					
ANR	985420	Identifier	core		985043	0					
ANR	985421	Argument	core -> offset		985043	1					
ANR	985422	PtrMemberAccess	core -> offset		985043	0					
ANR	985423	Identifier	core		985043	0					
ANR	985424	Identifier	offset		985043	1					
ANR	985425	Argument	buf		985043	2					
ANR	985426	Identifier	buf		985043	0					
ANR	985427	Argument	bsize		985043	3					
ANR	985428	Identifier	bsize		985043	0					
ANR	985429	Argument	0		985043	4					
ANR	985430	PrimaryExpression	0		985043	0					
ANR	985431	IdentifierDeclStatement	"const char * cmd = ( type_print == 'D' ) ? ""pDj"" : ""pIj"" ;"	4520:3:127204:127255	985043	2	True				
ANR	985432	IdentifierDecl	"* cmd = ( type_print == 'D' ) ? ""pDj"" : ""pIj"""		985043	0					
ANR	985433	IdentifierDeclType	const char *		985043	0					
ANR	985434	Identifier	cmd		985043	1					
ANR	985435	AssignmentExpression	"* cmd = ( type_print == 'D' ) ? ""pDj"" : ""pIj"""		985043	2		=			
ANR	985436	Identifier	cmd		985043	0					
ANR	985437	ConditionalExpression	"( type_print == 'D' ) ? ""pDj"" : ""pIj"""		985043	1					
ANR	985438	Condition	type_print == 'D'		985043	0					
ANR	985439	EqualityExpression	type_print == 'D'		985043	0		==			
ANR	985440	Identifier	type_print		985043	0					
ANR	985441	PrimaryExpression	'D'		985043	1					
ANR	985442	PrimaryExpression	"""pDj"""		985043	1					
ANR	985443	PrimaryExpression	"""pIj"""		985043	2					
ANR	985444	Statement	r_core_cmdf	4521:3:127260:127270	985043	3	True				
ANR	985445	Statement	(	4521:15:127272:127272	985043	4	True				
ANR	985446	Statement	core	4521:16:127273:127276	985043	5	True				
ANR	985447	Statement	","	4521:20:127277:127277	985043	6	True				
ANR	985448	Statement	"""%s %d @ 0x%"""	4521:22:127279:127291	985043	7	True				
ANR	985449	Statement	PFMT64x	4521:35:127292:127298	985043	8	True				
ANR	985450	Statement	","	4521:42:127299:127299	985043	9	True				
ANR	985451	Statement	cmd	4521:44:127301:127303	985043	10	True				
ANR	985452	Statement	","	4521:47:127304:127304	985043	11	True				
ANR	985453	Statement	b	4521:49:127306:127306	985043	12	True				
ANR	985454	Statement	->	4521:50:127307:127308	985043	13	True				
ANR	985455	Statement	size	4521:52:127309:127312	985043	14	True				
ANR	985456	Statement	","	4521:56:127313:127313	985043	15	True				
ANR	985457	Statement	b	4521:58:127315:127315	985043	16	True				
ANR	985458	Statement	->	4521:59:127316:127317	985043	17	True				
ANR	985459	Statement	addr	4521:61:127318:127321	985043	18	True				
ANR	985460	Statement	)	4521:65:127322:127322	985043	19	True				
ANR	985461	ExpressionStatement		4521:66:127323:127323	985043	20	True				
ANR	985462	IdentifierDeclStatement	ut8 * buf = malloc ( b -> size ) ;	4523:3:127335:127362	985043	21	True				
ANR	985463	IdentifierDecl	* buf = malloc ( b -> size )		985043	0					
ANR	985464	IdentifierDeclType	ut8 *		985043	0					
ANR	985465	Identifier	buf		985043	1					
ANR	985466	AssignmentExpression	* buf = malloc ( b -> size )		985043	2		=			
ANR	985467	Identifier	buf		985043	0					
ANR	985468	CallExpression	malloc ( b -> size )		985043	1					
ANR	985469	Callee	malloc		985043	0					
ANR	985470	Identifier	malloc		985043	0					
ANR	985471	ArgumentList	b -> size		985043	1					
ANR	985472	Argument	b -> size		985043	0					
ANR	985473	PtrMemberAccess	b -> size		985043	0					
ANR	985474	Identifier	b		985043	0					
ANR	985475	Identifier	size		985043	1					
ANR	985476	IfStatement	if ( buf )		985043	22					
ANR	985477	Condition	buf	4524:7:127371:127373	985043	0	True				
ANR	985478	Identifier	buf		985043	0					
ANR	985479	CompoundStatement		71:12:1843:1843	985043	1					
ANR	985480	ExpressionStatement	"r_io_read_at ( core -> io , b -> addr , buf , b -> size )"	4525:4:127382:127428	985043	0	True				
ANR	985481	CallExpression	"r_io_read_at ( core -> io , b -> addr , buf , b -> size )"		985043	0					
ANR	985482	Callee	r_io_read_at		985043	0					
ANR	985483	Identifier	r_io_read_at		985043	0					
ANR	985484	ArgumentList	core -> io		985043	1					
ANR	985485	Argument	core -> io		985043	0					
ANR	985486	PtrMemberAccess	core -> io		985043	0					
ANR	985487	Identifier	core		985043	0					
ANR	985488	Identifier	io		985043	1					
ANR	985489	Argument	b -> addr		985043	1					
ANR	985490	PtrMemberAccess	b -> addr		985043	0					
ANR	985491	Identifier	b		985043	0					
ANR	985492	Identifier	addr		985043	1					
ANR	985493	Argument	buf		985043	2					
ANR	985494	Identifier	buf		985043	0					
ANR	985495	Argument	b -> size		985043	3					
ANR	985496	PtrMemberAccess	b -> size		985043	0					
ANR	985497	Identifier	b		985043	0					
ANR	985498	Identifier	size		985043	1					
ANR	985499	ExpressionStatement	"r_core_print_disasm_json ( core , b -> addr , buf , b -> size , 0 , pj )"	4526:4:127434:127495	985043	1	True				
ANR	985500	CallExpression	"r_core_print_disasm_json ( core , b -> addr , buf , b -> size , 0 , pj )"		985043	0					
ANR	985501	Callee	r_core_print_disasm_json		985043	0					
ANR	985502	Identifier	r_core_print_disasm_json		985043	0					
ANR	985503	ArgumentList	core		985043	1					
ANR	985504	Argument	core		985043	0					
ANR	985505	Identifier	core		985043	0					
ANR	985506	Argument	b -> addr		985043	1					
ANR	985507	PtrMemberAccess	b -> addr		985043	0					
ANR	985508	Identifier	b		985043	0					
ANR	985509	Identifier	addr		985043	1					
ANR	985510	Argument	buf		985043	2					
ANR	985511	Identifier	buf		985043	0					
ANR	985512	Argument	b -> size		985043	3					
ANR	985513	PtrMemberAccess	b -> size		985043	0					
ANR	985514	Identifier	b		985043	0					
ANR	985515	Identifier	size		985043	1					
ANR	985516	Argument	0		985043	4					
ANR	985517	PrimaryExpression	0		985043	0					
ANR	985518	Argument	pj		985043	5					
ANR	985519	Identifier	pj		985043	0					
ANR	985520	ExpressionStatement	free ( buf )	4527:4:127501:127511	985043	2	True				
ANR	985521	CallExpression	free ( buf )		985043	0					
ANR	985522	Callee	free		985043	0					
ANR	985523	Identifier	free		985043	0					
ANR	985524	ArgumentList	buf		985043	1					
ANR	985525	Argument	buf		985043	0					
ANR	985526	Identifier	buf		985043	0					
ANR	985527	ElseStatement	else		985043	0					
ANR	985528	CompoundStatement		75:10:1990:1990	985043	0					
ANR	985529	ExpressionStatement	"eprintf ( ""cannot allocate %d byte(s)\\n"" , b -> size )"	4529:4:127529:127578	985043	0	True				
ANR	985530	CallExpression	"eprintf ( ""cannot allocate %d byte(s)\\n"" , b -> size )"		985043	0					
ANR	985531	Callee	eprintf		985043	0					
ANR	985532	Identifier	eprintf		985043	0					
ANR	985533	ArgumentList	"""cannot allocate %d byte(s)\\n"""		985043	1					
ANR	985534	Argument	"""cannot allocate %d byte(s)\\n"""		985043	0					
ANR	985535	PrimaryExpression	"""cannot allocate %d byte(s)\\n"""		985043	0					
ANR	985536	Argument	b -> size		985043	1					
ANR	985537	PtrMemberAccess	b -> size		985043	0					
ANR	985538	Identifier	b		985043	0					
ANR	985539	Identifier	size		985043	1					
ANR	985540	ForStatement	for ( ; locs_it && ( tmp_func = locs_it -> data ) ; locs_it = locs_it -> n )		985043	15					
ANR	985541	Condition	locs_it && ( tmp_func = locs_it -> data )	4532:9:127598:127634	985043	0	True				
ANR	985542	AndExpression	locs_it && ( tmp_func = locs_it -> data )		985043	0		&&			
ANR	985543	Identifier	locs_it		985043	0					
ANR	985544	AssignmentExpression	tmp_func = locs_it -> data		985043	1		=			
ANR	985545	Identifier	tmp_func		985043	0					
ANR	985546	PtrMemberAccess	locs_it -> data		985043	1					
ANR	985547	Identifier	locs_it		985043	0					
ANR	985548	Identifier	data		985043	1					
ANR	985549	AssignmentExpression	locs_it = locs_it -> n	4532:48:127637:127656	985043	1	True	=			
ANR	985550	Identifier	locs_it		985043	0					
ANR	985551	PtrMemberAccess	locs_it -> n		985043	1					
ANR	985552	Identifier	locs_it		985043	0					
ANR	985553	Identifier	n		985043	1					
ANR	985554	CompoundStatement		79:70:2126:2126	985043	2					
ANR	985555	IfStatement	if ( r_cons_is_breaked ( ) )		985043	0					
ANR	985556	Condition	r_cons_is_breaked ( )	4533:7:127668:127687	985043	0	True				
ANR	985557	CallExpression	r_cons_is_breaked ( )		985043	0					
ANR	985558	Callee	r_cons_is_breaked		985043	0					
ANR	985559	Identifier	r_cons_is_breaked		985043	0					
ANR	985560	ArgumentList			985043	1					
ANR	985561	CompoundStatement		80:29:2157:2157	985043	1					
ANR	985562	BreakStatement	break ;	4534:4:127696:127701	985043	0	True				
ANR	985563	Statement	r_list_foreach	4536:3:127711:127724	985043	1	True				
ANR	985564	Statement	(	4536:18:127726:127726	985043	2	True				
ANR	985565	Statement	tmp_func	4536:19:127727:127734	985043	3	True				
ANR	985566	Statement	->	4536:27:127735:127736	985043	4	True				
ANR	985567	Statement	bbs	4536:29:127737:127739	985043	5	True				
ANR	985568	Statement	","	4536:32:127740:127740	985043	6	True				
ANR	985569	Statement	iter	4536:34:127742:127745	985043	7	True				
ANR	985570	Statement	","	4536:38:127746:127746	985043	8	True				
ANR	985571	Statement	b	4536:40:127748:127748	985043	9	True				
ANR	985572	Statement	)	4536:41:127749:127749	985043	10	True				
ANR	985573	CompoundStatement		95:4:2507:2534	985043	11					
ANR	985574	IfStatement	if ( fromHere )		985043	0					
ANR	985575	Condition	fromHere	4537:8:127761:127768	985043	0	True				
ANR	985576	Identifier	fromHere		985043	0					
ANR	985577	CompoundStatement		84:18:2238:2238	985043	1					
ANR	985578	IfStatement	if ( b -> addr < core -> offset )		985043	0					
ANR	985579	Condition	b -> addr < core -> offset	4538:9:127782:127803	985043	0	True				
ANR	985580	RelationalExpression	b -> addr < core -> offset		985043	0		<			
ANR	985581	PtrMemberAccess	b -> addr		985043	0					
ANR	985582	Identifier	b		985043	0					
ANR	985583	Identifier	addr		985043	1					
ANR	985584	PtrMemberAccess	core -> offset		985043	1					
ANR	985585	Identifier	core		985043	0					
ANR	985586	Identifier	offset		985043	1					
ANR	985587	CompoundStatement		85:33:2273:2273	985043	1					
ANR	985588	ExpressionStatement	core -> cons -> null = true	4539:6:127814:127837	985043	0	True				
ANR	985589	AssignmentExpression	core -> cons -> null = true		985043	0		=			
ANR	985590	PtrMemberAccess	core -> cons -> null		985043	0					
ANR	985591	PtrMemberAccess	core -> cons		985043	0					
ANR	985592	Identifier	core		985043	0					
ANR	985593	Identifier	cons		985043	1					
ANR	985594	Identifier	null		985043	1					
ANR	985595	Identifier	true		985043	1					
ANR	985596	ElseStatement	else		985043	0					
ANR	985597	CompoundStatement		87:12:2318:2318	985043	0					
ANR	985598	ExpressionStatement	core -> cons -> null = false	4541:6:127859:127883	985043	0	True				
ANR	985599	AssignmentExpression	core -> cons -> null = false		985043	0		=			
ANR	985600	PtrMemberAccess	core -> cons -> null		985043	0					
ANR	985601	PtrMemberAccess	core -> cons		985043	0					
ANR	985602	Identifier	core		985043	0					
ANR	985603	Identifier	cons		985043	1					
ANR	985604	Identifier	null		985043	1					
ANR	985605	Identifier	false		985043	1					
ANR	985606	IdentifierDeclStatement	"const char * cmd = ( type_print == 'D' ) ? ""pDj"" : ""pIj"" ;"	4545:4:127908:127959	985043	1	True				
ANR	985607	IdentifierDecl	"* cmd = ( type_print == 'D' ) ? ""pDj"" : ""pIj"""		985043	0					
ANR	985608	IdentifierDeclType	const char *		985043	0					
ANR	985609	Identifier	cmd		985043	1					
ANR	985610	AssignmentExpression	"* cmd = ( type_print == 'D' ) ? ""pDj"" : ""pIj"""		985043	2		=			
ANR	985611	Identifier	cmd		985043	0					
ANR	985612	ConditionalExpression	"( type_print == 'D' ) ? ""pDj"" : ""pIj"""		985043	1					
ANR	985613	Condition	type_print == 'D'		985043	0					
ANR	985614	EqualityExpression	type_print == 'D'		985043	0		==			
ANR	985615	Identifier	type_print		985043	0					
ANR	985616	PrimaryExpression	'D'		985043	1					
ANR	985617	PrimaryExpression	"""pDj"""		985043	1					
ANR	985618	PrimaryExpression	"""pIj"""		985043	2					
ANR	985619	Statement	r_core_cmdf	4546:4:127965:127975	985043	2	True				
ANR	985620	Statement	(	4546:16:127977:127977	985043	3	True				
ANR	985621	Statement	core	4546:17:127978:127981	985043	4	True				
ANR	985622	Statement	","	4546:21:127982:127982	985043	5	True				
ANR	985623	Statement	"""%s %d @0x%"""	4546:23:127984:127995	985043	6	True				
ANR	985624	Statement	PFMT64x	4546:35:127996:128002	985043	7	True				
ANR	985625	Statement	","	4546:42:128003:128003	985043	8	True				
ANR	985626	Statement	cmd	4546:44:128005:128007	985043	9	True				
ANR	985627	Statement	","	4546:47:128008:128008	985043	10	True				
ANR	985628	Statement	b	4546:49:128010:128010	985043	11	True				
ANR	985629	Statement	->	4546:50:128011:128012	985043	12	True				
ANR	985630	Statement	size	4546:52:128013:128016	985043	13	True				
ANR	985631	Statement	","	4546:56:128017:128017	985043	14	True				
ANR	985632	Statement	b	4546:58:128019:128019	985043	15	True				
ANR	985633	Statement	->	4546:59:128020:128021	985043	16	True				
ANR	985634	Statement	addr	4546:61:128022:128025	985043	17	True				
ANR	985635	Statement	)	4546:65:128026:128026	985043	18	True				
ANR	985636	ExpressionStatement		4546:66:128027:128027	985043	19	True				
ANR	985637	IdentifierDeclStatement	ut8 * buf = malloc ( b -> size ) ;	4548:4:128040:128067	985043	20	True				
ANR	985638	IdentifierDecl	* buf = malloc ( b -> size )		985043	0					
ANR	985639	IdentifierDeclType	ut8 *		985043	0					
ANR	985640	Identifier	buf		985043	1					
ANR	985641	AssignmentExpression	* buf = malloc ( b -> size )		985043	2		=			
ANR	985642	Identifier	buf		985043	0					
ANR	985643	CallExpression	malloc ( b -> size )		985043	1					
ANR	985644	Callee	malloc		985043	0					
ANR	985645	Identifier	malloc		985043	0					
ANR	985646	ArgumentList	b -> size		985043	1					
ANR	985647	Argument	b -> size		985043	0					
ANR	985648	PtrMemberAccess	b -> size		985043	0					
ANR	985649	Identifier	b		985043	0					
ANR	985650	Identifier	size		985043	1					
ANR	985651	IfStatement	if ( buf )		985043	21					
ANR	985652	Condition	buf	4549:8:128077:128079	985043	0	True				
ANR	985653	Identifier	buf		985043	0					
ANR	985654	CompoundStatement		96:13:2549:2549	985043	1					
ANR	985655	ExpressionStatement	"r_io_read_at ( core -> io , b -> addr , buf , b -> size )"	4550:5:128089:128135	985043	0	True				
ANR	985656	CallExpression	"r_io_read_at ( core -> io , b -> addr , buf , b -> size )"		985043	0					
ANR	985657	Callee	r_io_read_at		985043	0					
ANR	985658	Identifier	r_io_read_at		985043	0					
ANR	985659	ArgumentList	core -> io		985043	1					
ANR	985660	Argument	core -> io		985043	0					
ANR	985661	PtrMemberAccess	core -> io		985043	0					
ANR	985662	Identifier	core		985043	0					
ANR	985663	Identifier	io		985043	1					
ANR	985664	Argument	b -> addr		985043	1					
ANR	985665	PtrMemberAccess	b -> addr		985043	0					
ANR	985666	Identifier	b		985043	0					
ANR	985667	Identifier	addr		985043	1					
ANR	985668	Argument	buf		985043	2					
ANR	985669	Identifier	buf		985043	0					
ANR	985670	Argument	b -> size		985043	3					
ANR	985671	PtrMemberAccess	b -> size		985043	0					
ANR	985672	Identifier	b		985043	0					
ANR	985673	Identifier	size		985043	1					
ANR	985674	ExpressionStatement	"r_core_print_disasm_json ( core , b -> addr , buf , b -> size , 0 , pj )"	4551:5:128142:128203	985043	1	True				
ANR	985675	CallExpression	"r_core_print_disasm_json ( core , b -> addr , buf , b -> size , 0 , pj )"		985043	0					
ANR	985676	Callee	r_core_print_disasm_json		985043	0					
ANR	985677	Identifier	r_core_print_disasm_json		985043	0					
ANR	985678	ArgumentList	core		985043	1					
ANR	985679	Argument	core		985043	0					
ANR	985680	Identifier	core		985043	0					
ANR	985681	Argument	b -> addr		985043	1					
ANR	985682	PtrMemberAccess	b -> addr		985043	0					
ANR	985683	Identifier	b		985043	0					
ANR	985684	Identifier	addr		985043	1					
ANR	985685	Argument	buf		985043	2					
ANR	985686	Identifier	buf		985043	0					
ANR	985687	Argument	b -> size		985043	3					
ANR	985688	PtrMemberAccess	b -> size		985043	0					
ANR	985689	Identifier	b		985043	0					
ANR	985690	Identifier	size		985043	1					
ANR	985691	Argument	0		985043	4					
ANR	985692	PrimaryExpression	0		985043	0					
ANR	985693	Argument	pj		985043	5					
ANR	985694	Identifier	pj		985043	0					
ANR	985695	ExpressionStatement	free ( buf )	4552:5:128210:128220	985043	2	True				
ANR	985696	CallExpression	free ( buf )		985043	0					
ANR	985697	Callee	free		985043	0					
ANR	985698	Identifier	free		985043	0					
ANR	985699	ArgumentList	buf		985043	1					
ANR	985700	Argument	buf		985043	0					
ANR	985701	Identifier	buf		985043	0					
ANR	985702	ElseStatement	else		985043	0					
ANR	985703	CompoundStatement		100:11:2700:2700	985043	0					
ANR	985704	ExpressionStatement	"eprintf ( ""cannot allocate %d byte(s)\\n"" , b -> size )"	4554:5:128240:128289	985043	0	True				
ANR	985705	CallExpression	"eprintf ( ""cannot allocate %d byte(s)\\n"" , b -> size )"		985043	0					
ANR	985706	Callee	eprintf		985043	0					
ANR	985707	Identifier	eprintf		985043	0					
ANR	985708	ArgumentList	"""cannot allocate %d byte(s)\\n"""		985043	1					
ANR	985709	Argument	"""cannot allocate %d byte(s)\\n"""		985043	0					
ANR	985710	PrimaryExpression	"""cannot allocate %d byte(s)\\n"""		985043	0					
ANR	985711	Argument	b -> size		985043	1					
ANR	985712	PtrMemberAccess	b -> size		985043	0					
ANR	985713	Identifier	b		985043	0					
ANR	985714	Identifier	size		985043	1					
ANR	985715	ExpressionStatement	pj_end ( pj )	4559:2:128309:128320	985043	16	True				
ANR	985716	CallExpression	pj_end ( pj )		985043	0					
ANR	985717	Callee	pj_end		985043	0					
ANR	985718	Identifier	pj_end		985043	0					
ANR	985719	ArgumentList	pj		985043	1					
ANR	985720	Argument	pj		985043	0					
ANR	985721	Identifier	pj		985043	0					
ANR	985722	ExpressionStatement	"r_cons_printf ( ""%s"" , pj_string ( pj ) )"	4560:2:128324:128360	985043	17	True				
ANR	985723	CallExpression	"r_cons_printf ( ""%s"" , pj_string ( pj ) )"		985043	0					
ANR	985724	Callee	r_cons_printf		985043	0					
ANR	985725	Identifier	r_cons_printf		985043	0					
ANR	985726	ArgumentList	"""%s"""		985043	1					
ANR	985727	Argument	"""%s"""		985043	0					
ANR	985728	PrimaryExpression	"""%s"""		985043	0					
ANR	985729	Argument	pj_string ( pj )		985043	1					
ANR	985730	CallExpression	pj_string ( pj )		985043	0					
ANR	985731	Callee	pj_string		985043	0					
ANR	985732	Identifier	pj_string		985043	0					
ANR	985733	ArgumentList	pj		985043	1					
ANR	985734	Argument	pj		985043	0					
ANR	985735	Identifier	pj		985043	0					
ANR	985736	ExpressionStatement	pj_free ( pj )	4561:2:128364:128376	985043	18	True				
ANR	985737	CallExpression	pj_free ( pj )		985043	0					
ANR	985738	Callee	pj_free		985043	0					
ANR	985739	Identifier	pj_free		985043	0					
ANR	985740	ArgumentList	pj		985043	1					
ANR	985741	Argument	pj		985043	0					
ANR	985742	Identifier	pj		985043	0					
ANR	985743	ElseStatement	else		985043	0					
ANR	985744	CompoundStatement		114:2:3026:3067	985043	0					
ANR	985745	IdentifierDeclStatement	"bool asm_lines = r_config_get_i ( core -> config , ""asm.lines.bb"" ) ;"	4563:2:128390:128452	985043	0	True				
ANR	985746	IdentifierDecl	"asm_lines = r_config_get_i ( core -> config , ""asm.lines.bb"" )"		985043	0					
ANR	985747	IdentifierDeclType	bool		985043	0					
ANR	985748	Identifier	asm_lines		985043	1					
ANR	985749	AssignmentExpression	"asm_lines = r_config_get_i ( core -> config , ""asm.lines.bb"" )"		985043	2		=			
ANR	985750	Identifier	asm_lines		985043	0					
ANR	985751	CallExpression	"r_config_get_i ( core -> config , ""asm.lines.bb"" )"		985043	1					
ANR	985752	Callee	r_config_get_i		985043	0					
ANR	985753	Identifier	r_config_get_i		985043	0					
ANR	985754	ArgumentList	core -> config		985043	1					
ANR	985755	Argument	core -> config		985043	0					
ANR	985756	PtrMemberAccess	core -> config		985043	0					
ANR	985757	Identifier	core		985043	0					
ANR	985758	Identifier	config		985043	1					
ANR	985759	Argument	"""asm.lines.bb"""		985043	1					
ANR	985760	PrimaryExpression	"""asm.lines.bb"""		985043	0					
ANR	985761	IdentifierDeclStatement	"bool emu = r_config_get_i ( core -> config , ""asm.emu"" ) ;"	4564:2:128456:128507	985043	1	True				
ANR	985762	IdentifierDecl	"emu = r_config_get_i ( core -> config , ""asm.emu"" )"		985043	0					
ANR	985763	IdentifierDeclType	bool		985043	0					
ANR	985764	Identifier	emu		985043	1					
ANR	985765	AssignmentExpression	"emu = r_config_get_i ( core -> config , ""asm.emu"" )"		985043	2		=			
ANR	985766	Identifier	emu		985043	0					
ANR	985767	CallExpression	"r_config_get_i ( core -> config , ""asm.emu"" )"		985043	1					
ANR	985768	Callee	r_config_get_i		985043	0					
ANR	985769	Identifier	r_config_get_i		985043	0					
ANR	985770	ArgumentList	core -> config		985043	1					
ANR	985771	Argument	core -> config		985043	0					
ANR	985772	PtrMemberAccess	core -> config		985043	0					
ANR	985773	Identifier	core		985043	0					
ANR	985774	Identifier	config		985043	1					
ANR	985775	Argument	"""asm.emu"""		985043	1					
ANR	985776	PrimaryExpression	"""asm.emu"""		985043	0					
ANR	985777	IdentifierDeclStatement	ut64 saved_gp = 0 ;	4565:2:128511:128528	985043	2	True				
ANR	985778	IdentifierDecl	saved_gp = 0		985043	0					
ANR	985779	IdentifierDeclType	ut64		985043	0					
ANR	985780	Identifier	saved_gp		985043	1					
ANR	985781	AssignmentExpression	saved_gp = 0		985043	2		=			
ANR	985782	Identifier	saved_gp		985043	0					
ANR	985783	PrimaryExpression	0		985043	1					
ANR	985784	IdentifierDeclStatement	ut8 * saved_arena = NULL ;	4566:2:128532:128555	985043	3	True				
ANR	985785	IdentifierDecl	* saved_arena = NULL		985043	0					
ANR	985786	IdentifierDeclType	ut8 *		985043	0					
ANR	985787	Identifier	saved_arena		985043	1					
ANR	985788	AssignmentExpression	* saved_arena = NULL		985043	2		=			
ANR	985789	Identifier	NULL		985043	0					
ANR	985790	Identifier	NULL		985043	1					
ANR	985791	IdentifierDeclStatement	int saved_stackptr = core -> anal -> stackptr ;	4567:2:128559:128600	985043	4	True				
ANR	985792	IdentifierDecl	saved_stackptr = core -> anal -> stackptr		985043	0					
ANR	985793	IdentifierDeclType	int		985043	0					
ANR	985794	Identifier	saved_stackptr		985043	1					
ANR	985795	AssignmentExpression	saved_stackptr = core -> anal -> stackptr		985043	2		=			
ANR	985796	Identifier	saved_stackptr		985043	0					
ANR	985797	PtrMemberAccess	core -> anal -> stackptr		985043	1					
ANR	985798	PtrMemberAccess	core -> anal		985043	0					
ANR	985799	Identifier	core		985043	0					
ANR	985800	Identifier	anal		985043	1					
ANR	985801	Identifier	stackptr		985043	1					
ANR	985802	IfStatement	if ( emu )		985043	5					
ANR	985803	Condition	emu	4568:6:128608:128610	985043	0	True				
ANR	985804	Identifier	emu		985043	0					
ANR	985805	CompoundStatement		115:11:3080:3080	985043	1					
ANR	985806	ExpressionStatement	saved_gp = core -> anal -> gp	4569:3:128618:128643	985043	0	True				
ANR	985807	AssignmentExpression	saved_gp = core -> anal -> gp		985043	0		=			
ANR	985808	Identifier	saved_gp		985043	0					
ANR	985809	PtrMemberAccess	core -> anal -> gp		985043	1					
ANR	985810	PtrMemberAccess	core -> anal		985043	0					
ANR	985811	Identifier	core		985043	0					
ANR	985812	Identifier	anal		985043	1					
ANR	985813	Identifier	gp		985043	1					
ANR	985814	ExpressionStatement	saved_arena = r_reg_arena_peek ( core -> anal -> reg )	4570:3:128648:128696	985043	1	True				
ANR	985815	AssignmentExpression	saved_arena = r_reg_arena_peek ( core -> anal -> reg )		985043	0		=			
ANR	985816	Identifier	saved_arena		985043	0					
ANR	985817	CallExpression	r_reg_arena_peek ( core -> anal -> reg )		985043	1					
ANR	985818	Callee	r_reg_arena_peek		985043	0					
ANR	985819	Identifier	r_reg_arena_peek		985043	0					
ANR	985820	ArgumentList	core -> anal -> reg		985043	1					
ANR	985821	Argument	core -> anal -> reg		985043	0					
ANR	985822	PtrMemberAccess	core -> anal -> reg		985043	0					
ANR	985823	PtrMemberAccess	core -> anal		985043	0					
ANR	985824	Identifier	core		985043	0					
ANR	985825	Identifier	anal		985043	1					
ANR	985826	Identifier	reg		985043	1					
ANR	985827	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.lines.bb"" , 0 )"	4572:2:128704:128752	985043	6	True				
ANR	985828	CallExpression	"r_config_set_i ( core -> config , ""asm.lines.bb"" , 0 )"		985043	0					
ANR	985829	Callee	r_config_set_i		985043	0					
ANR	985830	Identifier	r_config_set_i		985043	0					
ANR	985831	ArgumentList	core -> config		985043	1					
ANR	985832	Argument	core -> config		985043	0					
ANR	985833	PtrMemberAccess	core -> config		985043	0					
ANR	985834	Identifier	core		985043	0					
ANR	985835	Identifier	config		985043	1					
ANR	985836	Argument	"""asm.lines.bb"""		985043	1					
ANR	985837	PrimaryExpression	"""asm.lines.bb"""		985043	0					
ANR	985838	Argument	0		985043	2					
ANR	985839	PrimaryExpression	0		985043	0					
ANR	985840	ForStatement	for ( ; locs_it && ( tmp_func = locs_it -> data ) ; locs_it = locs_it -> n )		985043	7					
ANR	985841	Condition	locs_it && ( tmp_func = locs_it -> data )	4573:9:128763:128799	985043	0	True				
ANR	985842	AndExpression	locs_it && ( tmp_func = locs_it -> data )		985043	0		&&			
ANR	985843	Identifier	locs_it		985043	0					
ANR	985844	AssignmentExpression	tmp_func = locs_it -> data		985043	1		=			
ANR	985845	Identifier	tmp_func		985043	0					
ANR	985846	PtrMemberAccess	locs_it -> data		985043	1					
ANR	985847	Identifier	locs_it		985043	0					
ANR	985848	Identifier	data		985043	1					
ANR	985849	AssignmentExpression	locs_it = locs_it -> n	4573:48:128802:128821	985043	1	True	=			
ANR	985850	Identifier	locs_it		985043	0					
ANR	985851	PtrMemberAccess	locs_it -> n		985043	1					
ANR	985852	Identifier	locs_it		985043	0					
ANR	985853	Identifier	n		985043	1					
ANR	985854	CompoundStatement		120:70:3291:3291	985043	2					
ANR	985855	IfStatement	if ( tmp_func -> addr >= f -> addr )		985043	0					
ANR	985856	Condition	tmp_func -> addr >= f -> addr	4574:7:128833:128857	985043	0	True				
ANR	985857	RelationalExpression	tmp_func -> addr >= f -> addr		985043	0		>=			
ANR	985858	PtrMemberAccess	tmp_func -> addr		985043	0					
ANR	985859	Identifier	tmp_func		985043	0					
ANR	985860	Identifier	addr		985043	1					
ANR	985861	PtrMemberAccess	f -> addr		985043	1					
ANR	985862	Identifier	f		985043	0					
ANR	985863	Identifier	addr		985043	1					
ANR	985864	CompoundStatement		121:34:3327:3327	985043	1					
ANR	985865	BreakStatement	break ;	4575:4:128866:128871	985043	0	True				
ANR	985866	Statement	r_list_foreach	4577:3:128881:128894	985043	1	True				
ANR	985867	Statement	(	4577:18:128896:128896	985043	2	True				
ANR	985868	Statement	tmp_func	4577:19:128897:128904	985043	3	True				
ANR	985869	Statement	->	4577:27:128905:128906	985043	4	True				
ANR	985870	Statement	bbs	4577:29:128907:128909	985043	5	True				
ANR	985871	Statement	","	4577:32:128910:128910	985043	6	True				
ANR	985872	Statement	iter	4577:34:128912:128915	985043	7	True				
ANR	985873	Statement	","	4577:38:128916:128916	985043	8	True				
ANR	985874	Statement	b	4577:40:128918:128918	985043	9	True				
ANR	985875	Statement	)	4577:41:128919:128919	985043	10	True				
ANR	985876	CompoundStatement		124:43:3388:3388	985043	11					
ANR	985877	ExpressionStatement	"pr_bb ( core , tmp_func , b , emu , saved_gp , saved_arena , type_print , fromHere )"	4578:4:128927:129002	985043	0	True				
ANR	985878	CallExpression	"pr_bb ( core , tmp_func , b , emu , saved_gp , saved_arena , type_print , fromHere )"		985043	0					
ANR	985879	Callee	pr_bb		985043	0					
ANR	985880	Identifier	pr_bb		985043	0					
ANR	985881	ArgumentList	core		985043	1					
ANR	985882	Argument	core		985043	0					
ANR	985883	Identifier	core		985043	0					
ANR	985884	Argument	tmp_func		985043	1					
ANR	985885	Identifier	tmp_func		985043	0					
ANR	985886	Argument	b		985043	2					
ANR	985887	Identifier	b		985043	0					
ANR	985888	Argument	emu		985043	3					
ANR	985889	Identifier	emu		985043	0					
ANR	985890	Argument	saved_gp		985043	4					
ANR	985891	Identifier	saved_gp		985043	0					
ANR	985892	Argument	saved_arena		985043	5					
ANR	985893	Identifier	saved_arena		985043	0					
ANR	985894	Argument	type_print		985043	6					
ANR	985895	Identifier	type_print		985043	0					
ANR	985896	Argument	fromHere		985043	7					
ANR	985897	Identifier	fromHere		985043	0					
ANR	985898	Statement	r_list_foreach	4581:2:129015:129028	985043	8	True				
ANR	985899	Statement	(	4581:17:129030:129030	985043	9	True				
ANR	985900	Statement	f	4581:18:129031:129031	985043	10	True				
ANR	985901	Statement	->	4581:19:129032:129033	985043	11	True				
ANR	985902	Statement	bbs	4581:21:129034:129036	985043	12	True				
ANR	985903	Statement	","	4581:24:129037:129037	985043	13	True				
ANR	985904	Statement	iter	4581:26:129039:129042	985043	14	True				
ANR	985905	Statement	","	4581:30:129043:129043	985043	15	True				
ANR	985906	Statement	b	4581:32:129045:129045	985043	16	True				
ANR	985907	Statement	)	4581:33:129046:129046	985043	17	True				
ANR	985908	CompoundStatement		128:35:3515:3515	985043	18					
ANR	985909	ExpressionStatement	"pr_bb ( core , f , b , emu , saved_gp , saved_arena , type_print , fromHere )"	4582:3:129053:129121	985043	0	True				
ANR	985910	CallExpression	"pr_bb ( core , f , b , emu , saved_gp , saved_arena , type_print , fromHere )"		985043	0					
ANR	985911	Callee	pr_bb		985043	0					
ANR	985912	Identifier	pr_bb		985043	0					
ANR	985913	ArgumentList	core		985043	1					
ANR	985914	Argument	core		985043	0					
ANR	985915	Identifier	core		985043	0					
ANR	985916	Argument	f		985043	1					
ANR	985917	Identifier	f		985043	0					
ANR	985918	Argument	b		985043	2					
ANR	985919	Identifier	b		985043	0					
ANR	985920	Argument	emu		985043	3					
ANR	985921	Identifier	emu		985043	0					
ANR	985922	Argument	saved_gp		985043	4					
ANR	985923	Identifier	saved_gp		985043	0					
ANR	985924	Argument	saved_arena		985043	5					
ANR	985925	Identifier	saved_arena		985043	0					
ANR	985926	Argument	type_print		985043	6					
ANR	985927	Identifier	type_print		985043	0					
ANR	985928	Argument	fromHere		985043	7					
ANR	985929	Identifier	fromHere		985043	0					
ANR	985930	ForStatement	for ( ; locs_it && ( tmp_func = locs_it -> data ) ; locs_it = locs_it -> n )		985043	19					
ANR	985931	Condition	locs_it && ( tmp_func = locs_it -> data )	4584:9:129136:129172	985043	0	True				
ANR	985932	AndExpression	locs_it && ( tmp_func = locs_it -> data )		985043	0		&&			
ANR	985933	Identifier	locs_it		985043	0					
ANR	985934	AssignmentExpression	tmp_func = locs_it -> data		985043	1		=			
ANR	985935	Identifier	tmp_func		985043	0					
ANR	985936	PtrMemberAccess	locs_it -> data		985043	1					
ANR	985937	Identifier	locs_it		985043	0					
ANR	985938	Identifier	data		985043	1					
ANR	985939	AssignmentExpression	locs_it = locs_it -> n	4584:48:129175:129194	985043	1	True	=			
ANR	985940	Identifier	locs_it		985043	0					
ANR	985941	PtrMemberAccess	locs_it -> n		985043	1					
ANR	985942	Identifier	locs_it		985043	0					
ANR	985943	Identifier	n		985043	1					
ANR	985944	CompoundStatement		131:70:3664:3664	985043	2					
ANR	985945	IfStatement	if ( r_cons_is_breaked ( ) )		985043	0					
ANR	985946	Condition	r_cons_is_breaked ( )	4585:7:129206:129225	985043	0	True				
ANR	985947	CallExpression	r_cons_is_breaked ( )		985043	0					
ANR	985948	Callee	r_cons_is_breaked		985043	0					
ANR	985949	Identifier	r_cons_is_breaked		985043	0					
ANR	985950	ArgumentList			985043	1					
ANR	985951	CompoundStatement		132:29:3695:3695	985043	1					
ANR	985952	BreakStatement	break ;	4586:4:129234:129239	985043	0	True				
ANR	985953	Statement	r_list_foreach	4589:3:129284:129297	985043	1	True				
ANR	985954	Statement	(	4589:18:129299:129299	985043	2	True				
ANR	985955	Statement	tmp_func	4589:19:129300:129307	985043	3	True				
ANR	985956	Statement	->	4589:27:129308:129309	985043	4	True				
ANR	985957	Statement	bbs	4589:29:129310:129312	985043	5	True				
ANR	985958	Statement	","	4589:32:129313:129313	985043	6	True				
ANR	985959	Statement	iter	4589:34:129315:129318	985043	7	True				
ANR	985960	Statement	","	4589:38:129319:129319	985043	8	True				
ANR	985961	Statement	b	4589:40:129321:129321	985043	9	True				
ANR	985962	Statement	)	4589:41:129322:129322	985043	10	True				
ANR	985963	CompoundStatement		136:43:3791:3791	985043	11					
ANR	985964	ExpressionStatement	"pr_bb ( core , tmp_func , b , emu , saved_gp , saved_arena , type_print , fromHere )"	4590:4:129330:129405	985043	0	True				
ANR	985965	CallExpression	"pr_bb ( core , tmp_func , b , emu , saved_gp , saved_arena , type_print , fromHere )"		985043	0					
ANR	985966	Callee	pr_bb		985043	0					
ANR	985967	Identifier	pr_bb		985043	0					
ANR	985968	ArgumentList	core		985043	1					
ANR	985969	Argument	core		985043	0					
ANR	985970	Identifier	core		985043	0					
ANR	985971	Argument	tmp_func		985043	1					
ANR	985972	Identifier	tmp_func		985043	0					
ANR	985973	Argument	b		985043	2					
ANR	985974	Identifier	b		985043	0					
ANR	985975	Argument	emu		985043	3					
ANR	985976	Identifier	emu		985043	0					
ANR	985977	Argument	saved_gp		985043	4					
ANR	985978	Identifier	saved_gp		985043	0					
ANR	985979	Argument	saved_arena		985043	5					
ANR	985980	Identifier	saved_arena		985043	0					
ANR	985981	Argument	type_print		985043	6					
ANR	985982	Identifier	type_print		985043	0					
ANR	985983	Argument	fromHere		985043	7					
ANR	985984	Identifier	fromHere		985043	0					
ANR	985985	IfStatement	if ( emu )		985043	20					
ANR	985986	Condition	emu	4593:6:129422:129424	985043	0	True				
ANR	985987	Identifier	emu		985043	0					
ANR	985988	CompoundStatement		140:11:3894:3894	985043	1					
ANR	985989	ExpressionStatement	core -> anal -> gp = saved_gp	4594:3:129432:129457	985043	0	True				
ANR	985990	AssignmentExpression	core -> anal -> gp = saved_gp		985043	0		=			
ANR	985991	PtrMemberAccess	core -> anal -> gp		985043	0					
ANR	985992	PtrMemberAccess	core -> anal		985043	0					
ANR	985993	Identifier	core		985043	0					
ANR	985994	Identifier	anal		985043	1					
ANR	985995	Identifier	gp		985043	1					
ANR	985996	Identifier	saved_gp		985043	1					
ANR	985997	IfStatement	if ( saved_arena )		985043	1					
ANR	985998	Condition	saved_arena	4595:7:129466:129476	985043	0	True				
ANR	985999	Identifier	saved_arena		985043	0					
ANR	986000	CompoundStatement		142:20:3946:3946	985043	1					
ANR	986001	ExpressionStatement	"r_reg_arena_poke ( core -> anal -> reg , saved_arena )"	4596:4:129485:129532	985043	0	True				
ANR	986002	CallExpression	"r_reg_arena_poke ( core -> anal -> reg , saved_arena )"		985043	0					
ANR	986003	Callee	r_reg_arena_poke		985043	0					
ANR	986004	Identifier	r_reg_arena_poke		985043	0					
ANR	986005	ArgumentList	core -> anal -> reg		985043	1					
ANR	986006	Argument	core -> anal -> reg		985043	0					
ANR	986007	PtrMemberAccess	core -> anal -> reg		985043	0					
ANR	986008	PtrMemberAccess	core -> anal		985043	0					
ANR	986009	Identifier	core		985043	0					
ANR	986010	Identifier	anal		985043	1					
ANR	986011	Identifier	reg		985043	1					
ANR	986012	Argument	saved_arena		985043	1					
ANR	986013	Identifier	saved_arena		985043	0					
ANR	986014	ExpressionStatement	R_FREE ( saved_arena )	4597:4:129538:129558	985043	1	True				
ANR	986015	CallExpression	R_FREE ( saved_arena )		985043	0					
ANR	986016	Callee	R_FREE		985043	0					
ANR	986017	Identifier	R_FREE		985043	0					
ANR	986018	ArgumentList	saved_arena		985043	1					
ANR	986019	Argument	saved_arena		985043	0					
ANR	986020	Identifier	saved_arena		985043	0					
ANR	986021	ExpressionStatement	core -> anal -> stackptr = saved_stackptr	4600:2:129571:129608	985043	21	True				
ANR	986022	AssignmentExpression	core -> anal -> stackptr = saved_stackptr		985043	0		=			
ANR	986023	PtrMemberAccess	core -> anal -> stackptr		985043	0					
ANR	986024	PtrMemberAccess	core -> anal		985043	0					
ANR	986025	Identifier	core		985043	0					
ANR	986026	Identifier	anal		985043	1					
ANR	986027	Identifier	stackptr		985043	1					
ANR	986028	Identifier	saved_stackptr		985043	1					
ANR	986029	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.lines.bb"" , asm_lines )"	4601:2:129612:129668	985043	22	True				
ANR	986030	CallExpression	"r_config_set_i ( core -> config , ""asm.lines.bb"" , asm_lines )"		985043	0					
ANR	986031	Callee	r_config_set_i		985043	0					
ANR	986032	Identifier	r_config_set_i		985043	0					
ANR	986033	ArgumentList	core -> config		985043	1					
ANR	986034	Argument	core -> config		985043	0					
ANR	986035	PtrMemberAccess	core -> config		985043	0					
ANR	986036	Identifier	core		985043	0					
ANR	986037	Identifier	config		985043	1					
ANR	986038	Argument	"""asm.lines.bb"""		985043	1					
ANR	986039	PrimaryExpression	"""asm.lines.bb"""		985043	0					
ANR	986040	Argument	asm_lines		985043	2					
ANR	986041	Identifier	asm_lines		985043	0					
ANR	986042	ExpressionStatement	"r_config_set ( core -> config , ""asm.bb.middle"" , orig_bb_middle )"	4603:1:129674:129734	985043	11	True				
ANR	986043	CallExpression	"r_config_set ( core -> config , ""asm.bb.middle"" , orig_bb_middle )"		985043	0					
ANR	986044	Callee	r_config_set		985043	0					
ANR	986045	Identifier	r_config_set		985043	0					
ANR	986046	ArgumentList	core -> config		985043	1					
ANR	986047	Argument	core -> config		985043	0					
ANR	986048	PtrMemberAccess	core -> config		985043	0					
ANR	986049	Identifier	core		985043	0					
ANR	986050	Identifier	config		985043	1					
ANR	986051	Argument	"""asm.bb.middle"""		985043	1					
ANR	986052	PrimaryExpression	"""asm.bb.middle"""		985043	0					
ANR	986053	Argument	orig_bb_middle		985043	2					
ANR	986054	Identifier	orig_bb_middle		985043	0					
ANR	986055	ReturnType	static void		985043	1					
ANR	986056	Identifier	func_walk_blocks		985043	2					
ANR	986057	ParameterList	"RCore * core , RAnalFunction * f , char input , char type_print , bool fromHere"		985043	3					
ANR	986058	Parameter	RCore * core	4454:29:125457:125467	985043	0	True				
ANR	986059	ParameterType	RCore *		985043	0					
ANR	986060	Identifier	core		985043	1					
ANR	986061	Parameter	RAnalFunction * f	4454:42:125470:125485	985043	1	True				
ANR	986062	ParameterType	RAnalFunction *		985043	0					
ANR	986063	Identifier	f		985043	1					
ANR	986064	Parameter	char input	4454:60:125488:125497	985043	2	True				
ANR	986065	ParameterType	char		985043	0					
ANR	986066	Identifier	input		985043	1					
ANR	986067	Parameter	char type_print	4454:72:125500:125514	985043	3	True				
ANR	986068	ParameterType	char		985043	0					
ANR	986069	Identifier	type_print		985043	1					
ANR	986070	Parameter	bool fromHere	4454:89:125517:125529	985043	4	True				
ANR	986071	ParameterType	bool		985043	0					
ANR	986072	Identifier	fromHere		985043	1					
ANR	986073	CFGEntryNode	ENTRY		985043		True				
ANR	986074	CFGExitNode	EXIT		985043		True				
ANR	986075	Symbol	locs_it -> n		985043						
ANR	986076	Symbol	saved_stackptr		985043						
ANR	986077	Symbol	core -> anal -> reg		985043						
ANR	986078	Symbol	locs_it		985043						
ANR	986079	Symbol	pj_string		985043						
ANR	986080	Symbol	orig_bb_middle		985043						
ANR	986081	Symbol	core -> offset		985043						
ANR	986082	Symbol	* tmp_func		985043						
ANR	986083	Symbol	bbcmp		985043						
ANR	986084	Symbol	tmp_func -> addr		985043						
ANR	986085	Symbol	type_print		985043						
ANR	986086	Symbol	NULL		985043						
ANR	986087	Symbol	* * f		985043						
ANR	986088	Symbol	iter		985043						
ANR	986089	Symbol	core		985043						
ANR	986090	Symbol	input		985043						
ANR	986091	Symbol	f -> fcn_locs -> head		985043						
ANR	986092	Symbol	r_config_get_i		985043						
ANR	986093	Symbol	true		985043						
ANR	986094	Symbol	cmd		985043						
ANR	986095	Symbol	r_reg_arena_peek		985043						
ANR	986096	Symbol	locs_it -> data		985043						
ANR	986097	Symbol	r_list_get_top		985043						
ANR	986098	Symbol	* core -> cons		985043						
ANR	986099	Symbol	saved_arena		985043						
ANR	986100	Symbol	b -> size		985043						
ANR	986101	Symbol	* core		985043						
ANR	986102	Symbol	r_config_get		985043						
ANR	986103	Symbol	fcn_size		985043						
ANR	986104	Symbol	emu		985043						
ANR	986105	Symbol	core -> anal		985043						
ANR	986106	Symbol	* f -> fcn_locs		985043						
ANR	986107	Symbol	b -> addr		985043						
ANR	986108	Symbol	r_anal_fcn_realsize		985043						
ANR	986109	Symbol	* locs_it		985043						
ANR	986110	Symbol	r_cons_is_breaked		985043						
ANR	986111	Symbol	core -> cons		985043						
ANR	986112	Symbol	core -> io		985043						
ANR	986113	Symbol	core -> cons -> null		985043						
ANR	986114	Symbol	f -> addr		985043						
ANR	986115	Symbol	saved_gp		985043						
ANR	986116	Symbol	* * core		985043						
ANR	986117	Symbol	core -> config		985043						
ANR	986118	Symbol	f -> fcn_locs		985043						
ANR	986119	Symbol	malloc		985043						
ANR	986120	Symbol	b		985043						
ANR	986121	Symbol	f		985043						
ANR	986122	Symbol	asm_lines		985043						
ANR	986123	Symbol	false		985043						
ANR	986124	Symbol	core -> anal -> gp		985043						
ANR	986125	Symbol	* b		985043						
ANR	986126	Symbol	fromHere		985043						
ANR	986127	Symbol	* f		985043						
ANR	986128	Symbol	buf		985043						
ANR	986129	Symbol	* core -> anal		985043						
ANR	986130	Symbol	tmp_func		985043						
ANR	986131	Symbol	bsize		985043						
ANR	986132	Symbol	pj		985043						
ANR	986133	Symbol	pj_new		985043						
ANR	986134	Symbol	core -> anal -> stackptr		985043						
ANR	986135	Symbol	f -> bbs		985043						
ANR	986136	Symbol	r_list_length		985043						
ANR	986137	Function	cmd_pxb_p	4606:0:129739:129824							
ANR	986138	FunctionDef	cmd_pxb_p (char input)		986137	0					
ANR	986139	CompoundStatement		4606:41:129780:129824	986137	0					
ANR	986140	ReturnStatement	return IS_PRINTABLE ( input ) ? input : '.' ;	4607:1:129783:129822	986137	0	True				
ANR	986141	ConditionalExpression	IS_PRINTABLE ( input ) ? input : '.'		986137	0					
ANR	986142	Condition	IS_PRINTABLE ( input )		986137	0					
ANR	986143	CallExpression	IS_PRINTABLE ( input )		986137	0					
ANR	986144	Callee	IS_PRINTABLE		986137	0					
ANR	986145	Identifier	IS_PRINTABLE		986137	0					
ANR	986146	ArgumentList	input		986137	1					
ANR	986147	Argument	input		986137	0					
ANR	986148	Identifier	input		986137	0					
ANR	986149	Identifier	input		986137	1					
ANR	986150	PrimaryExpression	'.'		986137	2					
ANR	986151	ReturnType	static inline char		986137	1					
ANR	986152	Identifier	cmd_pxb_p		986137	2					
ANR	986153	ParameterList	char input		986137	3					
ANR	986154	Parameter	char input	4606:29:129768:129777	986137	0	True				
ANR	986155	ParameterType	char		986137	0					
ANR	986156	Identifier	input		986137	1					
ANR	986157	CFGEntryNode	ENTRY		986137		True				
ANR	986158	CFGExitNode	EXIT		986137		True				
ANR	986159	Symbol	input		986137						
ANR	986160	Symbol	IS_PRINTABLE		986137						
ANR	986161	Function	cmd_pxb_k	4610:0:129827:129917							
ANR	986162	FunctionDef	"cmd_pxb_k (const ut8 * buffer , int x)"		986161	0					
ANR	986163	CompoundStatement		4610:54:129881:129917	986161	0					
ANR	986164	ReturnStatement	return buffer [ 3 - x ] << ( 8 * x ) ;	4611:1:129884:129915	986161	0	True				
ANR	986165	ShiftExpression	buffer [ 3 - x ] << ( 8 * x )		986161	0		<<			
ANR	986166	ArrayIndexing	buffer [ 3 - x ]		986161	0					
ANR	986167	Identifier	buffer		986161	0					
ANR	986168	AdditiveExpression	3 - x		986161	1		-			
ANR	986169	PrimaryExpression	3		986161	0					
ANR	986170	Identifier	x		986161	1					
ANR	986171	MultiplicativeExpression	8 * x		986161	1		*			
ANR	986172	PrimaryExpression	8		986161	0					
ANR	986173	Identifier	x		986161	1					
ANR	986174	ReturnType	static inline int		986161	1					
ANR	986175	Identifier	cmd_pxb_k		986161	2					
ANR	986176	ParameterList	"const ut8 * buffer , int x"		986161	3					
ANR	986177	Parameter	const ut8 * buffer	4610:28:129855:129871	986161	0	True				
ANR	986178	ParameterType	const ut8 *		986161	0					
ANR	986179	Identifier	buffer		986161	1					
ANR	986180	Parameter	int x	4610:47:129874:129878	986161	1	True				
ANR	986181	ParameterType	int		986161	0					
ANR	986182	Identifier	x		986161	1					
ANR	986183	CFGEntryNode	ENTRY		986161		True				
ANR	986184	CFGExitNode	EXIT		986161		True				
ANR	986185	Symbol	* x		986161						
ANR	986186	Symbol	* buffer		986161						
ANR	986187	Symbol	x		986161						
ANR	986188	Symbol	buffer		986161						
ANR	986189	Function	bits_to_c_code_fmtstr	4614:0:129920:130124							
ANR	986190	FunctionDef	bits_to_c_code_fmtstr (int bits)		986189	0					
ANR	986191	CompoundStatement		4614:51:129971:130124	986189	0					
ANR	986192	SwitchStatement	switch ( bits )		986189	0					
ANR	986193	Condition	bits	4615:9:129982:129985	986189	0	True				
ANR	986194	Identifier	bits		986189	0					
ANR	986195	CompoundStatement		2:15:16:16	986189	1					
ANR	986196	Label	case 16 :	4616:1:129991:129998	986189	0	True				
ANR	986197	ReturnStatement	"return ""0x%04x"" ;"	4617:2:130002:130017	986189	1	True				
ANR	986198	PrimaryExpression	"""0x%04x"""		986189	0					
ANR	986199	Label	case 32 :	4618:1:130020:130027	986189	2	True				
ANR	986200	ReturnStatement	"return ""0x%08xU"" ;"	4619:2:130031:130047	986189	3	True				
ANR	986201	PrimaryExpression	"""0x%08xU"""		986189	0					
ANR	986202	Label	case 64 :	4620:1:130050:130057	986189	4	True				
ANR	986203	Statement	return	4621:2:130061:130066	986189	5	True				
ANR	986204	Statement	"""0x%016"""	4621:9:130068:130075	986189	6	True				
ANR	986205	Statement	PFMT64x	4621:18:130077:130083	986189	7	True				
ANR	986206	ExpressionStatement	"""ULL"""	4621:26:130085:130090	986189	8	True				
ANR	986207	PrimaryExpression	"""ULL"""		986189	0					
ANR	986208	Label	default :	4622:1:130093:130100	986189	9	True				
ANR	986209	Identifier	default		986189	0					
ANR	986210	ReturnStatement	"return ""0x%02x"" ;"	4623:2:130104:130119	986189	10	True				
ANR	986211	PrimaryExpression	"""0x%02x"""		986189	0					
ANR	986212	ReturnType	static const char *		986189	1					
ANR	986213	Identifier	bits_to_c_code_fmtstr		986189	2					
ANR	986214	ParameterList	int bits		986189	3					
ANR	986215	Parameter	int bits	4614:41:129961:129968	986189	0	True				
ANR	986216	ParameterType	int		986189	0					
ANR	986217	Identifier	bits		986189	1					
ANR	986218	CFGEntryNode	ENTRY		986189		True				
ANR	986219	CFGExitNode	EXIT		986189		True				
ANR	986220	Symbol	bits		986189						
ANR	986221	Function	print_c_code	4627:0:130127:130853							
ANR	986222	FunctionDef	"print_c_code (RPrint * p , ut64 addr , const ut8 * buf , int len , int ws , int w)"		986221	0					
ANR	986223	CompoundStatement		4627:87:130214:130853	986221	0					
ANR	986224	IdentifierDeclStatement	const char * fmtstr ;	4628:1:130217:130235	986221	0	True				
ANR	986225	IdentifierDecl	* fmtstr		986221	0					
ANR	986226	IdentifierDeclType	const char *		986221	0					
ANR	986227	Identifier	fmtstr		986221	1					
ANR	986228	IdentifierDeclStatement	"int i , bits ;"	4629:1:130238:130249	986221	1	True				
ANR	986229	IdentifierDecl	i		986221	0					
ANR	986230	IdentifierDeclType	int		986221	0					
ANR	986231	Identifier	i		986221	1					
ANR	986232	IdentifierDecl	bits		986221	1					
ANR	986233	IdentifierDeclType	int		986221	0					
ANR	986234	Identifier	bits		986221	1					
ANR	986235	ExpressionStatement	"ws = R_MAX ( 1 , R_MIN ( ws , 8 ) )"	4631:1:130253:130282	986221	2	True				
ANR	986236	AssignmentExpression	"ws = R_MAX ( 1 , R_MIN ( ws , 8 ) )"		986221	0		=			
ANR	986237	Identifier	ws		986221	0					
ANR	986238	CallExpression	"R_MAX ( 1 , R_MIN ( ws , 8 ) )"		986221	1					
ANR	986239	Callee	R_MAX		986221	0					
ANR	986240	Identifier	R_MAX		986221	0					
ANR	986241	ArgumentList	1		986221	1					
ANR	986242	Argument	1		986221	0					
ANR	986243	PrimaryExpression	1		986221	0					
ANR	986244	Argument	"R_MIN ( ws , 8 )"		986221	1					
ANR	986245	CallExpression	"R_MIN ( ws , 8 )"		986221	0					
ANR	986246	Callee	R_MIN		986221	0					
ANR	986247	Identifier	R_MIN		986221	0					
ANR	986248	ArgumentList	ws		986221	1					
ANR	986249	Argument	ws		986221	0					
ANR	986250	Identifier	ws		986221	0					
ANR	986251	Argument	8		986221	1					
ANR	986252	PrimaryExpression	8		986221	0					
ANR	986253	ExpressionStatement	bits = ws * 8	4632:1:130285:130298	986221	3	True				
ANR	986254	AssignmentExpression	bits = ws * 8		986221	0		=			
ANR	986255	Identifier	bits		986221	0					
ANR	986256	MultiplicativeExpression	ws * 8		986221	1		*			
ANR	986257	Identifier	ws		986221	0					
ANR	986258	PrimaryExpression	8		986221	1					
ANR	986259	ExpressionStatement	fmtstr = bits_to_c_code_fmtstr ( bits )	4633:1:130301:130338	986221	4	True				
ANR	986260	AssignmentExpression	fmtstr = bits_to_c_code_fmtstr ( bits )		986221	0		=			
ANR	986261	Identifier	fmtstr		986221	0					
ANR	986262	CallExpression	bits_to_c_code_fmtstr ( bits )		986221	1					
ANR	986263	Callee	bits_to_c_code_fmtstr		986221	0					
ANR	986264	Identifier	bits_to_c_code_fmtstr		986221	0					
ANR	986265	ArgumentList	bits		986221	1					
ANR	986266	Argument	bits		986221	0					
ANR	986267	Identifier	bits		986221	0					
ANR	986268	ExpressionStatement	len /= ws	4634:1:130341:130350	986221	5	True				
ANR	986269	AssignmentExpression	len /= ws		986221	0		/=			
ANR	986270	Identifier	len		986221	0					
ANR	986271	Identifier	ws		986221	1					
ANR	986272	ExpressionStatement	"p -> cb_printf ( ""#define _BUFFER_SIZE %d\\n"" , len )"	4636:1:130354:130401	986221	6	True				
ANR	986273	CallExpression	"p -> cb_printf ( ""#define _BUFFER_SIZE %d\\n"" , len )"		986221	0					
ANR	986274	Callee	p -> cb_printf		986221	0					
ANR	986275	PtrMemberAccess	p -> cb_printf		986221	0					
ANR	986276	Identifier	p		986221	0					
ANR	986277	Identifier	cb_printf		986221	1					
ANR	986278	ArgumentList	"""#define _BUFFER_SIZE %d\\n"""		986221	1					
ANR	986279	Argument	"""#define _BUFFER_SIZE %d\\n"""		986221	0					
ANR	986280	PrimaryExpression	"""#define _BUFFER_SIZE %d\\n"""		986221	0					
ANR	986281	Argument	len		986221	1					
ANR	986282	Identifier	len		986221	0					
ANR	986283	ExpressionStatement	"p -> cb_printf ( ""const uint%d_t buffer[_BUFFER_SIZE] = {"" , bits )"	4637:1:130404:130466	986221	7	True				
ANR	986284	CallExpression	"p -> cb_printf ( ""const uint%d_t buffer[_BUFFER_SIZE] = {"" , bits )"		986221	0					
ANR	986285	Callee	p -> cb_printf		986221	0					
ANR	986286	PtrMemberAccess	p -> cb_printf		986221	0					
ANR	986287	Identifier	p		986221	0					
ANR	986288	Identifier	cb_printf		986221	1					
ANR	986289	ArgumentList	"""const uint%d_t buffer[_BUFFER_SIZE] = {"""		986221	1					
ANR	986290	Argument	"""const uint%d_t buffer[_BUFFER_SIZE] = {"""		986221	0					
ANR	986291	PrimaryExpression	"""const uint%d_t buffer[_BUFFER_SIZE] = {"""		986221	0					
ANR	986292	Argument	bits		986221	1					
ANR	986293	Identifier	bits		986221	0					
ANR	986294	ExpressionStatement	p -> interrupt = 0	4639:1:130470:130486	986221	8	True				
ANR	986295	AssignmentExpression	p -> interrupt = 0		986221	0		=			
ANR	986296	PtrMemberAccess	p -> interrupt		986221	0					
ANR	986297	Identifier	p		986221	0					
ANR	986298	Identifier	interrupt		986221	1					
ANR	986299	PrimaryExpression	0		986221	1					
ANR	986300	ForStatement	for ( i = 0 ; ! p -> interrupt && i < len ; i ++ )		986221	9					
ANR	986301	ForInit	i = 0 ;	4641:6:130495:130500	986221	0	True				
ANR	986302	AssignmentExpression	i = 0		986221	0		=			
ANR	986303	Identifier	i		986221	0					
ANR	986304	PrimaryExpression	0		986221	1					
ANR	986305	Condition	! p -> interrupt && i < len	4641:13:130502:130525	986221	1	True				
ANR	986306	AndExpression	! p -> interrupt && i < len		986221	0		&&			
ANR	986307	UnaryOperationExpression	! p -> interrupt		986221	0					
ANR	986308	UnaryOperator	!		986221	0					
ANR	986309	PtrMemberAccess	p -> interrupt		986221	1					
ANR	986310	Identifier	p		986221	0					
ANR	986311	Identifier	interrupt		986221	1					
ANR	986312	RelationalExpression	i < len		986221	1		<			
ANR	986313	Identifier	i		986221	0					
ANR	986314	Identifier	len		986221	1					
ANR	986315	PostIncDecOperationExpression	i ++	4641:39:130528:130530	986221	2	True				
ANR	986316	Identifier	i		986221	0					
ANR	986317	IncDec	++		986221	1					
ANR	986318	CompoundStatement		15:44:318:318	986221	3					
ANR	986319	IfStatement	if ( ! ( i % w ) )		986221	0					
ANR	986320	Condition	! ( i % w )	4642:6:130541:130548	986221	0	True				
ANR	986321	UnaryOperationExpression	! ( i % w )		986221	0					
ANR	986322	UnaryOperator	!		986221	0					
ANR	986323	MultiplicativeExpression	i % w		986221	1		%			
ANR	986324	Identifier	i		986221	0					
ANR	986325	Identifier	w		986221	1					
ANR	986326	CompoundStatement		16:16:336:336	986221	1					
ANR	986327	ExpressionStatement	"p -> cb_printf ( ""\\n  "" )"	4643:3:130556:130577	986221	0	True				
ANR	986328	CallExpression	"p -> cb_printf ( ""\\n  "" )"		986221	0					
ANR	986329	Callee	p -> cb_printf		986221	0					
ANR	986330	PtrMemberAccess	p -> cb_printf		986221	0					
ANR	986331	Identifier	p		986221	0					
ANR	986332	Identifier	cb_printf		986221	1					
ANR	986333	ArgumentList	"""\\n  """		986221	1					
ANR	986334	Argument	"""\\n  """		986221	0					
ANR	986335	PrimaryExpression	"""\\n  """		986221	0					
ANR	986336	ExpressionStatement	"r_print_cursor ( p , i , 1 , 1 )"	4645:2:130585:130612	986221	1	True				
ANR	986337	CallExpression	"r_print_cursor ( p , i , 1 , 1 )"		986221	0					
ANR	986338	Callee	r_print_cursor		986221	0					
ANR	986339	Identifier	r_print_cursor		986221	0					
ANR	986340	ArgumentList	p		986221	1					
ANR	986341	Argument	p		986221	0					
ANR	986342	Identifier	p		986221	0					
ANR	986343	Argument	i		986221	1					
ANR	986344	Identifier	i		986221	0					
ANR	986345	Argument	1		986221	2					
ANR	986346	PrimaryExpression	1		986221	0					
ANR	986347	Argument	1		986221	3					
ANR	986348	PrimaryExpression	1		986221	0					
ANR	986349	ExpressionStatement	"p -> cb_printf ( fmtstr , r_read_ble ( buf , p -> big_endian , bits ) )"	4646:2:130616:130676	986221	2	True				
ANR	986350	CallExpression	"p -> cb_printf ( fmtstr , r_read_ble ( buf , p -> big_endian , bits ) )"		986221	0					
ANR	986351	Callee	p -> cb_printf		986221	0					
ANR	986352	PtrMemberAccess	p -> cb_printf		986221	0					
ANR	986353	Identifier	p		986221	0					
ANR	986354	Identifier	cb_printf		986221	1					
ANR	986355	ArgumentList	fmtstr		986221	1					
ANR	986356	Argument	fmtstr		986221	0					
ANR	986357	Identifier	fmtstr		986221	0					
ANR	986358	Argument	"r_read_ble ( buf , p -> big_endian , bits )"		986221	1					
ANR	986359	CallExpression	"r_read_ble ( buf , p -> big_endian , bits )"		986221	0					
ANR	986360	Callee	r_read_ble		986221	0					
ANR	986361	Identifier	r_read_ble		986221	0					
ANR	986362	ArgumentList	buf		986221	1					
ANR	986363	Argument	buf		986221	0					
ANR	986364	Identifier	buf		986221	0					
ANR	986365	Argument	p -> big_endian		986221	1					
ANR	986366	PtrMemberAccess	p -> big_endian		986221	0					
ANR	986367	Identifier	p		986221	0					
ANR	986368	Identifier	big_endian		986221	1					
ANR	986369	Argument	bits		986221	2					
ANR	986370	Identifier	bits		986221	0					
ANR	986371	IfStatement	if ( ( i + 1 ) < len )		986221	3					
ANR	986372	Condition	( i + 1 ) < len	4647:6:130684:130696	986221	0	True				
ANR	986373	RelationalExpression	( i + 1 ) < len		986221	0		<			
ANR	986374	AdditiveExpression	i + 1		986221	0		+			
ANR	986375	Identifier	i		986221	0					
ANR	986376	PrimaryExpression	1		986221	1					
ANR	986377	Identifier	len		986221	1					
ANR	986378	CompoundStatement		21:21:484:484	986221	1					
ANR	986379	ExpressionStatement	"p -> cb_printf ( "","" )"	4648:3:130704:130722	986221	0	True				
ANR	986380	CallExpression	"p -> cb_printf ( "","" )"		986221	0					
ANR	986381	Callee	p -> cb_printf		986221	0					
ANR	986382	PtrMemberAccess	p -> cb_printf		986221	0					
ANR	986383	Identifier	p		986221	0					
ANR	986384	Identifier	cb_printf		986221	1					
ANR	986385	ArgumentList	""","""		986221	1					
ANR	986386	Argument	""","""		986221	0					
ANR	986387	PrimaryExpression	""","""		986221	0					
ANR	986388	IfStatement	if ( ( i + 1 ) % w )		986221	1					
ANR	986389	Condition	( i + 1 ) % w	4650:7:130732:130742	986221	0	True				
ANR	986390	MultiplicativeExpression	( i + 1 ) % w		986221	0		%			
ANR	986391	AdditiveExpression	i + 1		986221	0		+			
ANR	986392	Identifier	i		986221	0					
ANR	986393	PrimaryExpression	1		986221	1					
ANR	986394	Identifier	w		986221	1					
ANR	986395	CompoundStatement		24:20:530:530	986221	1					
ANR	986396	ExpressionStatement	"p -> cb_printf ( "" "" )"	4651:4:130751:130769	986221	0	True				
ANR	986397	CallExpression	"p -> cb_printf ( "" "" )"		986221	0					
ANR	986398	Callee	p -> cb_printf		986221	0					
ANR	986399	PtrMemberAccess	p -> cb_printf		986221	0					
ANR	986400	Identifier	p		986221	0					
ANR	986401	Identifier	cb_printf		986221	1					
ANR	986402	ArgumentList	""" """		986221	1					
ANR	986403	Argument	""" """		986221	0					
ANR	986404	PrimaryExpression	""" """		986221	0					
ANR	986405	ExpressionStatement	"r_print_cursor ( p , i , 1 , 0 )"	4654:2:130782:130809	986221	4	True				
ANR	986406	CallExpression	"r_print_cursor ( p , i , 1 , 0 )"		986221	0					
ANR	986407	Callee	r_print_cursor		986221	0					
ANR	986408	Identifier	r_print_cursor		986221	0					
ANR	986409	ArgumentList	p		986221	1					
ANR	986410	Argument	p		986221	0					
ANR	986411	Identifier	p		986221	0					
ANR	986412	Argument	i		986221	1					
ANR	986413	Identifier	i		986221	0					
ANR	986414	Argument	1		986221	2					
ANR	986415	PrimaryExpression	1		986221	0					
ANR	986416	Argument	0		986221	3					
ANR	986417	PrimaryExpression	0		986221	0					
ANR	986418	ExpressionStatement	buf += ws	4655:2:130813:130822	986221	5	True				
ANR	986419	AssignmentExpression	buf += ws		986221	0		+=			
ANR	986420	Identifier	buf		986221	0					
ANR	986421	Identifier	ws		986221	1					
ANR	986422	ExpressionStatement	"p -> cb_printf ( ""\\n};\\n"" )"	4657:1:130828:130851	986221	10	True				
ANR	986423	CallExpression	"p -> cb_printf ( ""\\n};\\n"" )"		986221	0					
ANR	986424	Callee	p -> cb_printf		986221	0					
ANR	986425	PtrMemberAccess	p -> cb_printf		986221	0					
ANR	986426	Identifier	p		986221	0					
ANR	986427	Identifier	cb_printf		986221	1					
ANR	986428	ArgumentList	"""\\n};\\n"""		986221	1					
ANR	986429	Argument	"""\\n};\\n"""		986221	0					
ANR	986430	PrimaryExpression	"""\\n};\\n"""		986221	0					
ANR	986431	ReturnType	static void		986221	1					
ANR	986432	Identifier	print_c_code		986221	2					
ANR	986433	ParameterList	"RPrint * p , ut64 addr , const ut8 * buf , int len , int ws , int w"		986221	3					
ANR	986434	Parameter	RPrint * p	4627:25:130152:130160	986221	0	True				
ANR	986435	ParameterType	RPrint *		986221	0					
ANR	986436	Identifier	p		986221	1					
ANR	986437	Parameter	ut64 addr	4627:36:130163:130171	986221	1	True				
ANR	986438	ParameterType	ut64		986221	0					
ANR	986439	Identifier	addr		986221	1					
ANR	986440	Parameter	const ut8 * buf	4627:47:130174:130187	986221	2	True				
ANR	986441	ParameterType	const ut8 *		986221	0					
ANR	986442	Identifier	buf		986221	1					
ANR	986443	Parameter	int len	4627:63:130190:130196	986221	3	True				
ANR	986444	ParameterType	int		986221	0					
ANR	986445	Identifier	len		986221	1					
ANR	986446	Parameter	int ws	4627:72:130199:130204	986221	4	True				
ANR	986447	ParameterType	int		986221	0					
ANR	986448	Identifier	ws		986221	1					
ANR	986449	Parameter	int w	4627:80:130207:130211	986221	5	True				
ANR	986450	ParameterType	int		986221	0					
ANR	986451	Identifier	w		986221	1					
ANR	986452	CFGEntryNode	ENTRY		986221		True				
ANR	986453	CFGExitNode	EXIT		986221		True				
ANR	986454	Symbol	fmtstr		986221						
ANR	986455	Symbol	bits		986221						
ANR	986456	Symbol	i		986221						
ANR	986457	Symbol	bits_to_c_code_fmtstr		986221						
ANR	986458	Symbol	R_MIN		986221						
ANR	986459	Symbol	p -> interrupt		986221						
ANR	986460	Symbol	p		986221						
ANR	986461	Symbol	buf		986221						
ANR	986462	Symbol	p -> big_endian		986221						
ANR	986463	Symbol	len		986221						
ANR	986464	Symbol	w		986221						
ANR	986465	Symbol	r_read_ble		986221						
ANR	986466	Symbol	R_MAX		986221						
ANR	986467	Symbol	* p		986221						
ANR	986468	Symbol	addr		986221						
ANR	986469	Symbol	ws		986221						
ANR	986470	Function	r_print_code	4660:0:130856:135003							
ANR	986471	FunctionDef	"r_print_code (RPrint * p , ut64 addr , const ut8 * buf , int len , char lang)"		986470	0					
ANR	986472	CompoundStatement		4660:82:130938:135003	986470	0					
ANR	986473	IdentifierDeclStatement	"int i , w = p -> cols * 0.7 ;"	4661:1:130941:130965	986470	0	True				
ANR	986474	IdentifierDecl	i		986470	0					
ANR	986475	IdentifierDeclType	int		986470	0					
ANR	986476	Identifier	i		986470	1					
ANR	986477	IdentifierDecl	w = p -> cols * 0.7		986470	1					
ANR	986478	IdentifierDeclType	int		986470	0					
ANR	986479	Identifier	w		986470	1					
ANR	986480	AssignmentExpression	w = p -> cols * 0.7		986470	2		=			
ANR	986481	Identifier	w		986470	0					
ANR	986482	MultiplicativeExpression	p -> cols * 0.7		986470	1		*			
ANR	986483	PtrMemberAccess	p -> cols		986470	0					
ANR	986484	Identifier	p		986470	0					
ANR	986485	Identifier	cols		986470	1					
ANR	986486	PrimaryExpression	0.7		986470	1					
ANR	986487	IfStatement	if ( w < 1 )		986470	1					
ANR	986488	Condition	w < 1	4662:5:130972:130976	986470	0	True				
ANR	986489	RelationalExpression	w < 1		986470	0		<			
ANR	986490	Identifier	w		986470	0					
ANR	986491	PrimaryExpression	1		986470	1					
ANR	986492	CompoundStatement		3:12:40:40	986470	1					
ANR	986493	ExpressionStatement	w = 1	4663:2:130983:130988	986470	0	True				
ANR	986494	AssignmentExpression	w = 1		986470	0		=			
ANR	986495	Identifier	w		986470	0					
ANR	986496	PrimaryExpression	1		986470	1					
ANR	986497	SwitchStatement	switch ( lang )		986470	2					
ANR	986498	Condition	lang	4665:9:131002:131005	986470	0	True				
ANR	986499	Identifier	lang		986470	0					
ANR	986500	CompoundStatement		6:15:69:69	986470	1					
ANR	986501	Label	case '?' :	4666:1:131011:131019	986470	0	True				
ANR	986502	ExpressionStatement	"r_core_cmd_help ( ( RCore * ) p -> user , help_msg_pc )"	4667:2:131023:131070	986470	1	True				
ANR	986503	CallExpression	"r_core_cmd_help ( ( RCore * ) p -> user , help_msg_pc )"		986470	0					
ANR	986504	Callee	r_core_cmd_help		986470	0					
ANR	986505	Identifier	r_core_cmd_help		986470	0					
ANR	986506	ArgumentList	( RCore * ) p -> user		986470	1					
ANR	986507	Argument	( RCore * ) p -> user		986470	0					
ANR	986508	CastExpression	( RCore * ) p -> user		986470	0					
ANR	986509	CastTarget	RCore *		986470	0					
ANR	986510	PtrMemberAccess	p -> user		986470	1					
ANR	986511	Identifier	p		986470	0					
ANR	986512	Identifier	user		986470	1					
ANR	986513	Argument	help_msg_pc		986470	1					
ANR	986514	Identifier	help_msg_pc		986470	0					
ANR	986515	BreakStatement	break ;	4668:2:131074:131079	986470	2	True				
ANR	986516	Label	case '*' :	4669:1:131082:131090	986470	3	True				
ANR	986517	ExpressionStatement	"p -> cb_printf ( ""wx "" )"	4670:2:131094:131114	986470	4	True				
ANR	986518	CallExpression	"p -> cb_printf ( ""wx "" )"		986470	0					
ANR	986519	Callee	p -> cb_printf		986470	0					
ANR	986520	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	986521	Identifier	p		986470	0					
ANR	986522	Identifier	cb_printf		986470	1					
ANR	986523	ArgumentList	"""wx """		986470	1					
ANR	986524	Argument	"""wx """		986470	0					
ANR	986525	PrimaryExpression	"""wx """		986470	0					
ANR	986526	ForStatement	for ( i = 0 ; ! p -> interrupt && i < len ; i ++ )		986470	5					
ANR	986527	ForInit	i = 0 ;	4671:7:131123:131128	986470	0	True				
ANR	986528	AssignmentExpression	i = 0		986470	0		=			
ANR	986529	Identifier	i		986470	0					
ANR	986530	PrimaryExpression	0		986470	1					
ANR	986531	Condition	! p -> interrupt && i < len	4671:14:131130:131153	986470	1	True				
ANR	986532	AndExpression	! p -> interrupt && i < len		986470	0		&&			
ANR	986533	UnaryOperationExpression	! p -> interrupt		986470	0					
ANR	986534	UnaryOperator	!		986470	0					
ANR	986535	PtrMemberAccess	p -> interrupt		986470	1					
ANR	986536	Identifier	p		986470	0					
ANR	986537	Identifier	interrupt		986470	1					
ANR	986538	RelationalExpression	i < len		986470	1		<			
ANR	986539	Identifier	i		986470	0					
ANR	986540	Identifier	len		986470	1					
ANR	986541	PostIncDecOperationExpression	i ++	4671:40:131156:131158	986470	2	True				
ANR	986542	Identifier	i		986470	0					
ANR	986543	IncDec	++		986470	1					
ANR	986544	CompoundStatement		12:45:222:222	986470	3					
ANR	986545	IfStatement	if ( i && ! ( i % 16 ) )		986470	0					
ANR	986546	Condition	i && ! ( i % 16 )	4672:7:131170:131183	986470	0	True				
ANR	986547	AndExpression	i && ! ( i % 16 )		986470	0		&&			
ANR	986548	Identifier	i		986470	0					
ANR	986549	UnaryOperationExpression	! ( i % 16 )		986470	1					
ANR	986550	UnaryOperator	!		986470	0					
ANR	986551	MultiplicativeExpression	i % 16		986470	1		%			
ANR	986552	Identifier	i		986470	0					
ANR	986553	PrimaryExpression	16		986470	1					
ANR	986554	CompoundStatement		13:23:247:247	986470	1					
ANR	986555	ExpressionStatement	"p -> cb_printf ( "";s+16\\nwx "" )"	4673:4:131192:131219	986470	0	True				
ANR	986556	CallExpression	"p -> cb_printf ( "";s+16\\nwx "" )"		986470	0					
ANR	986557	Callee	p -> cb_printf		986470	0					
ANR	986558	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	986559	Identifier	p		986470	0					
ANR	986560	Identifier	cb_printf		986470	1					
ANR	986561	ArgumentList	""";s+16\\nwx """		986470	1					
ANR	986562	Argument	""";s+16\\nwx """		986470	0					
ANR	986563	PrimaryExpression	""";s+16\\nwx """		986470	0					
ANR	986564	ExpressionStatement	"p -> cb_printf ( ""%02x"" , buf [ i ] )"	4675:3:131229:131258	986470	1	True				
ANR	986565	CallExpression	"p -> cb_printf ( ""%02x"" , buf [ i ] )"		986470	0					
ANR	986566	Callee	p -> cb_printf		986470	0					
ANR	986567	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	986568	Identifier	p		986470	0					
ANR	986569	Identifier	cb_printf		986470	1					
ANR	986570	ArgumentList	"""%02x"""		986470	1					
ANR	986571	Argument	"""%02x"""		986470	0					
ANR	986572	PrimaryExpression	"""%02x"""		986470	0					
ANR	986573	Argument	buf [ i ]		986470	1					
ANR	986574	ArrayIndexing	buf [ i ]		986470	0					
ANR	986575	Identifier	buf		986470	0					
ANR	986576	Identifier	i		986470	1					
ANR	986577	IfStatement	if ( i && ! ( i % 16 ) )		986470	6					
ANR	986578	Condition	i && ! ( i % 16 )	4677:6:131270:131283	986470	0	True				
ANR	986579	AndExpression	i && ! ( i % 16 )		986470	0		&&			
ANR	986580	Identifier	i		986470	0					
ANR	986581	UnaryOperationExpression	! ( i % 16 )		986470	1					
ANR	986582	UnaryOperator	!		986470	0					
ANR	986583	MultiplicativeExpression	i % 16		986470	1		%			
ANR	986584	Identifier	i		986470	0					
ANR	986585	PrimaryExpression	16		986470	1					
ANR	986586	CompoundStatement		18:22:347:347	986470	1					
ANR	986587	ExpressionStatement	"p -> cb_printf ( "";s+16\\n"" )"	4678:3:131291:131315	986470	0	True				
ANR	986588	CallExpression	"p -> cb_printf ( "";s+16\\n"" )"		986470	0					
ANR	986589	Callee	p -> cb_printf		986470	0					
ANR	986590	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	986591	Identifier	p		986470	0					
ANR	986592	Identifier	cb_printf		986470	1					
ANR	986593	ArgumentList	""";s+16\\n"""		986470	1					
ANR	986594	Argument	""";s+16\\n"""		986470	0					
ANR	986595	PrimaryExpression	""";s+16\\n"""		986470	0					
ANR	986596	ElseStatement	else		986470	0					
ANR	986597	CompoundStatement		20:9:387:387	986470	0					
ANR	986598	ExpressionStatement	"p -> cb_printf ( "";s+%d\\n"" , ( i % 16 ) )"	4680:3:131331:131365	986470	0	True				
ANR	986599	CallExpression	"p -> cb_printf ( "";s+%d\\n"" , ( i % 16 ) )"		986470	0					
ANR	986600	Callee	p -> cb_printf		986470	0					
ANR	986601	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	986602	Identifier	p		986470	0					
ANR	986603	Identifier	cb_printf		986470	1					
ANR	986604	ArgumentList	""";s+%d\\n"""		986470	1					
ANR	986605	Argument	""";s+%d\\n"""		986470	0					
ANR	986606	PrimaryExpression	""";s+%d\\n"""		986470	0					
ANR	986607	Argument	i % 16		986470	1					
ANR	986608	MultiplicativeExpression	i % 16		986470	0		%			
ANR	986609	Identifier	i		986470	0					
ANR	986610	PrimaryExpression	16		986470	1					
ANR	986611	ExpressionStatement	"p -> cb_printf ( ""s-%d\\n"" , len )"	4682:2:131373:131401	986470	7	True				
ANR	986612	CallExpression	"p -> cb_printf ( ""s-%d\\n"" , len )"		986470	0					
ANR	986613	Callee	p -> cb_printf		986470	0					
ANR	986614	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	986615	Identifier	p		986470	0					
ANR	986616	Identifier	cb_printf		986470	1					
ANR	986617	ArgumentList	"""s-%d\\n"""		986470	1					
ANR	986618	Argument	"""s-%d\\n"""		986470	0					
ANR	986619	PrimaryExpression	"""s-%d\\n"""		986470	0					
ANR	986620	Argument	len		986470	1					
ANR	986621	Identifier	len		986470	0					
ANR	986622	BreakStatement	break ;	4683:2:131405:131410	986470	8	True				
ANR	986623	Label	case 'A' :	4684:1:131413:131421	986470	9	True				
ANR	986624	BreakStatement	break ;	4686:2:131483:131488	986470	10	True				
ANR	986625	Label	case 'a' :	4687:1:131491:131499	986470	11	True				
ANR	986626	ExpressionStatement	"p -> cb_printf ( ""shellcode:"" )"	4688:2:131512:131539	986470	12	True				
ANR	986627	CallExpression	"p -> cb_printf ( ""shellcode:"" )"		986470	0					
ANR	986628	Callee	p -> cb_printf		986470	0					
ANR	986629	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	986630	Identifier	p		986470	0					
ANR	986631	Identifier	cb_printf		986470	1					
ANR	986632	ArgumentList	"""shellcode:"""		986470	1					
ANR	986633	Argument	"""shellcode:"""		986470	0					
ANR	986634	PrimaryExpression	"""shellcode:"""		986470	0					
ANR	986635	ForStatement	for ( i = 0 ; ! p -> interrupt && i < len ; i ++ )		986470	13					
ANR	986636	ForInit	i = 0 ;	4689:7:131548:131553	986470	0	True				
ANR	986637	AssignmentExpression	i = 0		986470	0		=			
ANR	986638	Identifier	i		986470	0					
ANR	986639	PrimaryExpression	0		986470	1					
ANR	986640	Condition	! p -> interrupt && i < len	4689:14:131555:131578	986470	1	True				
ANR	986641	AndExpression	! p -> interrupt && i < len		986470	0		&&			
ANR	986642	UnaryOperationExpression	! p -> interrupt		986470	0					
ANR	986643	UnaryOperator	!		986470	0					
ANR	986644	PtrMemberAccess	p -> interrupt		986470	1					
ANR	986645	Identifier	p		986470	0					
ANR	986646	Identifier	interrupt		986470	1					
ANR	986647	RelationalExpression	i < len		986470	1		<			
ANR	986648	Identifier	i		986470	0					
ANR	986649	Identifier	len		986470	1					
ANR	986650	PostIncDecOperationExpression	i ++	4689:40:131581:131583	986470	2	True				
ANR	986651	Identifier	i		986470	0					
ANR	986652	IncDec	++		986470	1					
ANR	986653	CompoundStatement		30:45:647:647	986470	3					
ANR	986654	IfStatement	if ( ! ( i % 8 ) )		986470	0					
ANR	986655	Condition	! ( i % 8 )	4690:7:131595:131602	986470	0	True				
ANR	986656	UnaryOperationExpression	! ( i % 8 )		986470	0					
ANR	986657	UnaryOperator	!		986470	0					
ANR	986658	MultiplicativeExpression	i % 8		986470	1		%			
ANR	986659	Identifier	i		986470	0					
ANR	986660	PrimaryExpression	8		986470	1					
ANR	986661	CompoundStatement		31:17:666:666	986470	1					
ANR	986662	ExpressionStatement	"p -> cb_printf ( ""\\n.byte "" )"	4691:4:131611:131636	986470	0	True				
ANR	986663	CallExpression	"p -> cb_printf ( ""\\n.byte "" )"		986470	0					
ANR	986664	Callee	p -> cb_printf		986470	0					
ANR	986665	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	986666	Identifier	p		986470	0					
ANR	986667	Identifier	cb_printf		986470	1					
ANR	986668	ArgumentList	"""\\n.byte """		986470	1					
ANR	986669	Argument	"""\\n.byte """		986470	0					
ANR	986670	PrimaryExpression	"""\\n.byte """		986470	0					
ANR	986671	ElseStatement	else		986470	0					
ANR	986672	CompoundStatement		33:10:709:709	986470	0					
ANR	986673	ExpressionStatement	"p -> cb_printf ( "", "" )"	4693:4:131654:131673	986470	0	True				
ANR	986674	CallExpression	"p -> cb_printf ( "", "" )"		986470	0					
ANR	986675	Callee	p -> cb_printf		986470	0					
ANR	986676	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	986677	Identifier	p		986470	0					
ANR	986678	Identifier	cb_printf		986470	1					
ANR	986679	ArgumentList	""", """		986470	1					
ANR	986680	Argument	""", """		986470	0					
ANR	986681	PrimaryExpression	""", """		986470	0					
ANR	986682	ExpressionStatement	"p -> cb_printf ( ""0x%02x"" , buf [ i ] )"	4695:3:131683:131714	986470	1	True				
ANR	986683	CallExpression	"p -> cb_printf ( ""0x%02x"" , buf [ i ] )"		986470	0					
ANR	986684	Callee	p -> cb_printf		986470	0					
ANR	986685	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	986686	Identifier	p		986470	0					
ANR	986687	Identifier	cb_printf		986470	1					
ANR	986688	ArgumentList	"""0x%02x"""		986470	1					
ANR	986689	Argument	"""0x%02x"""		986470	0					
ANR	986690	PrimaryExpression	"""0x%02x"""		986470	0					
ANR	986691	Argument	buf [ i ]		986470	1					
ANR	986692	ArrayIndexing	buf [ i ]		986470	0					
ANR	986693	Identifier	buf		986470	0					
ANR	986694	Identifier	i		986470	1					
ANR	986695	ExpressionStatement	"p -> cb_printf ( ""\\n.equ shellcode_len, %d\\n"" , len )"	4697:2:131722:131770	986470	14	True				
ANR	986696	CallExpression	"p -> cb_printf ( ""\\n.equ shellcode_len, %d\\n"" , len )"		986470	0					
ANR	986697	Callee	p -> cb_printf		986470	0					
ANR	986698	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	986699	Identifier	p		986470	0					
ANR	986700	Identifier	cb_printf		986470	1					
ANR	986701	ArgumentList	"""\\n.equ shellcode_len, %d\\n"""		986470	1					
ANR	986702	Argument	"""\\n.equ shellcode_len, %d\\n"""		986470	0					
ANR	986703	PrimaryExpression	"""\\n.equ shellcode_len, %d\\n"""		986470	0					
ANR	986704	Argument	len		986470	1					
ANR	986705	Identifier	len		986470	0					
ANR	986706	BreakStatement	break ;	4698:2:131774:131779	986470	15	True				
ANR	986707	Label	case 's' :	4699:1:131782:131790	986470	16	True				
ANR	986708	ExpressionStatement	"p -> cb_printf ( ""\\"""" )"	4700:2:131803:131822	986470	17	True				
ANR	986709	CallExpression	"p -> cb_printf ( ""\\"""" )"		986470	0					
ANR	986710	Callee	p -> cb_printf		986470	0					
ANR	986711	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	986712	Identifier	p		986470	0					
ANR	986713	Identifier	cb_printf		986470	1					
ANR	986714	ArgumentList	"""\\"""""		986470	1					
ANR	986715	Argument	"""\\"""""		986470	0					
ANR	986716	PrimaryExpression	"""\\"""""		986470	0					
ANR	986717	ForStatement	for ( i = 0 ; ! p -> interrupt && i < len ; i ++ )		986470	18					
ANR	986718	ForInit	i = 0 ;	4701:7:131831:131836	986470	0	True				
ANR	986719	AssignmentExpression	i = 0		986470	0		=			
ANR	986720	Identifier	i		986470	0					
ANR	986721	PrimaryExpression	0		986470	1					
ANR	986722	Condition	! p -> interrupt && i < len	4701:14:131838:131861	986470	1	True				
ANR	986723	AndExpression	! p -> interrupt && i < len		986470	0		&&			
ANR	986724	UnaryOperationExpression	! p -> interrupt		986470	0					
ANR	986725	UnaryOperator	!		986470	0					
ANR	986726	PtrMemberAccess	p -> interrupt		986470	1					
ANR	986727	Identifier	p		986470	0					
ANR	986728	Identifier	interrupt		986470	1					
ANR	986729	RelationalExpression	i < len		986470	1		<			
ANR	986730	Identifier	i		986470	0					
ANR	986731	Identifier	len		986470	1					
ANR	986732	PostIncDecOperationExpression	i ++	4701:40:131864:131866	986470	2	True				
ANR	986733	Identifier	i		986470	0					
ANR	986734	IncDec	++		986470	1					
ANR	986735	CompoundStatement		42:45:930:930	986470	3					
ANR	986736	ExpressionStatement	"p -> cb_printf ( ""\\\\x%02x"" , buf [ i ] )"	4702:3:131874:131906	986470	0	True				
ANR	986737	CallExpression	"p -> cb_printf ( ""\\\\x%02x"" , buf [ i ] )"		986470	0					
ANR	986738	Callee	p -> cb_printf		986470	0					
ANR	986739	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	986740	Identifier	p		986470	0					
ANR	986741	Identifier	cb_printf		986470	1					
ANR	986742	ArgumentList	"""\\\\x%02x"""		986470	1					
ANR	986743	Argument	"""\\\\x%02x"""		986470	0					
ANR	986744	PrimaryExpression	"""\\\\x%02x"""		986470	0					
ANR	986745	Argument	buf [ i ]		986470	1					
ANR	986746	ArrayIndexing	buf [ i ]		986470	0					
ANR	986747	Identifier	buf		986470	0					
ANR	986748	Identifier	i		986470	1					
ANR	986749	ExpressionStatement	"p -> cb_printf ( ""\\""\\n"" )"	4704:2:131914:131935	986470	19	True				
ANR	986750	CallExpression	"p -> cb_printf ( ""\\""\\n"" )"		986470	0					
ANR	986751	Callee	p -> cb_printf		986470	0					
ANR	986752	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	986753	Identifier	p		986470	0					
ANR	986754	Identifier	cb_printf		986470	1					
ANR	986755	ArgumentList	"""\\""\\n"""		986470	1					
ANR	986756	Argument	"""\\""\\n"""		986470	0					
ANR	986757	PrimaryExpression	"""\\""\\n"""		986470	0					
ANR	986758	BreakStatement	break ;	4705:2:131939:131944	986470	20	True				
ANR	986759	Label	case 'S' :	4706:1:131947:131955	986470	21	True				
ANR	986760	CompoundStatement		49:2:1032:1056	986470	22					
ANR	986761	IdentifierDeclStatement	const int trunksize = 16 ;	4708:2:131971:131995	986470	0	True				
ANR	986762	IdentifierDecl	trunksize = 16		986470	0					
ANR	986763	IdentifierDeclType	const int		986470	0					
ANR	986764	Identifier	trunksize		986470	1					
ANR	986765	AssignmentExpression	trunksize = 16		986470	2		=			
ANR	986766	Identifier	trunksize		986470	0					
ANR	986767	PrimaryExpression	16		986470	1					
ANR	986768	ForStatement	for ( i = 0 ; ! p -> interrupt && i < len ; i ++ )		986470	1					
ANR	986769	ForInit	i = 0 ;	4709:7:132004:132009	986470	0	True				
ANR	986770	AssignmentExpression	i = 0		986470	0		=			
ANR	986771	Identifier	i		986470	0					
ANR	986772	PrimaryExpression	0		986470	1					
ANR	986773	Condition	! p -> interrupt && i < len	4709:14:132011:132034	986470	1	True				
ANR	986774	AndExpression	! p -> interrupt && i < len		986470	0		&&			
ANR	986775	UnaryOperationExpression	! p -> interrupt		986470	0					
ANR	986776	UnaryOperator	!		986470	0					
ANR	986777	PtrMemberAccess	p -> interrupt		986470	1					
ANR	986778	Identifier	p		986470	0					
ANR	986779	Identifier	interrupt		986470	1					
ANR	986780	RelationalExpression	i < len		986470	1		<			
ANR	986781	Identifier	i		986470	0					
ANR	986782	Identifier	len		986470	1					
ANR	986783	PostIncDecOperationExpression	i ++	4709:40:132037:132039	986470	2	True				
ANR	986784	Identifier	i		986470	0					
ANR	986785	IncDec	++		986470	1					
ANR	986786	CompoundStatement		50:45:1103:1103	986470	3					
ANR	986787	IfStatement	if ( ! ( i % trunksize ) )		986470	0					
ANR	986788	Condition	! ( i % trunksize )	4710:7:132051:132066	986470	0	True				
ANR	986789	UnaryOperationExpression	! ( i % trunksize )		986470	0					
ANR	986790	UnaryOperator	!		986470	0					
ANR	986791	MultiplicativeExpression	i % trunksize		986470	1		%			
ANR	986792	Identifier	i		986470	0					
ANR	986793	Identifier	trunksize		986470	1					
ANR	986794	CompoundStatement		51:25:1130:1130	986470	1					
ANR	986795	ExpressionStatement	"p -> cb_printf ( ""printf \\"""" )"	4711:4:132075:132101	986470	0	True				
ANR	986796	CallExpression	"p -> cb_printf ( ""printf \\"""" )"		986470	0					
ANR	986797	Callee	p -> cb_printf		986470	0					
ANR	986798	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	986799	Identifier	p		986470	0					
ANR	986800	Identifier	cb_printf		986470	1					
ANR	986801	ArgumentList	"""printf \\"""""		986470	1					
ANR	986802	Argument	"""printf \\"""""		986470	0					
ANR	986803	PrimaryExpression	"""printf \\"""""		986470	0					
ANR	986804	ExpressionStatement	"p -> cb_printf ( ""\\\\%03o"" , buf [ i ] )"	4713:3:132111:132142	986470	1	True				
ANR	986805	CallExpression	"p -> cb_printf ( ""\\\\%03o"" , buf [ i ] )"		986470	0					
ANR	986806	Callee	p -> cb_printf		986470	0					
ANR	986807	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	986808	Identifier	p		986470	0					
ANR	986809	Identifier	cb_printf		986470	1					
ANR	986810	ArgumentList	"""\\\\%03o"""		986470	1					
ANR	986811	Argument	"""\\\\%03o"""		986470	0					
ANR	986812	PrimaryExpression	"""\\\\%03o"""		986470	0					
ANR	986813	Argument	buf [ i ]		986470	1					
ANR	986814	ArrayIndexing	buf [ i ]		986470	0					
ANR	986815	Identifier	buf		986470	0					
ANR	986816	Identifier	i		986470	1					
ANR	986817	IfStatement	if ( ( i % trunksize ) == ( trunksize - 1 ) )		986470	2					
ANR	986818	Condition	( i % trunksize ) == ( trunksize - 1 )	4714:7:132151:132184	986470	0	True				
ANR	986819	EqualityExpression	( i % trunksize ) == ( trunksize - 1 )		986470	0		==			
ANR	986820	MultiplicativeExpression	i % trunksize		986470	0		%			
ANR	986821	Identifier	i		986470	0					
ANR	986822	Identifier	trunksize		986470	1					
ANR	986823	AdditiveExpression	trunksize - 1		986470	1		-			
ANR	986824	Identifier	trunksize		986470	0					
ANR	986825	PrimaryExpression	1		986470	1					
ANR	986826	CompoundStatement		55:43:1248:1248	986470	1					
ANR	986827	ExpressionStatement	"p -> cb_printf ( ""\\"" %s bin\\n"" , ( i <= trunksize ) ? "">"" : "">>"" )"	4715:4:132193:132250	986470	0	True				
ANR	986828	CallExpression	"p -> cb_printf ( ""\\"" %s bin\\n"" , ( i <= trunksize ) ? "">"" : "">>"" )"		986470	0					
ANR	986829	Callee	p -> cb_printf		986470	0					
ANR	986830	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	986831	Identifier	p		986470	0					
ANR	986832	Identifier	cb_printf		986470	1					
ANR	986833	ArgumentList	"""\\"" %s bin\\n"""		986470	1					
ANR	986834	Argument	"""\\"" %s bin\\n"""		986470	0					
ANR	986835	PrimaryExpression	"""\\"" %s bin\\n"""		986470	0					
ANR	986836	Argument	"( i <= trunksize ) ? "">"" : "">>"""		986470	1					
ANR	986837	ConditionalExpression	"( i <= trunksize ) ? "">"" : "">>"""		986470	0					
ANR	986838	Condition	i <= trunksize		986470	0					
ANR	986839	RelationalExpression	i <= trunksize		986470	0		<=			
ANR	986840	Identifier	i		986470	0					
ANR	986841	Identifier	trunksize		986470	1					
ANR	986842	PrimaryExpression	""">"""		986470	1					
ANR	986843	PrimaryExpression	""">>"""		986470	2					
ANR	986844	IfStatement	if ( ( i % trunksize ) )		986470	2					
ANR	986845	Condition	i % trunksize	4718:6:132267:132281	986470	0	True				
ANR	986846	MultiplicativeExpression	i % trunksize		986470	0		%			
ANR	986847	Identifier	i		986470	0					
ANR	986848	Identifier	trunksize		986470	1					
ANR	986849	CompoundStatement		59:23:1345:1345	986470	1					
ANR	986850	ExpressionStatement	"p -> cb_printf ( ""\\"" %s bin\\n"" , ( i <= trunksize ) ? "">"" : "">>"" )"	4719:3:132289:132346	986470	0	True				
ANR	986851	CallExpression	"p -> cb_printf ( ""\\"" %s bin\\n"" , ( i <= trunksize ) ? "">"" : "">>"" )"		986470	0					
ANR	986852	Callee	p -> cb_printf		986470	0					
ANR	986853	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	986854	Identifier	p		986470	0					
ANR	986855	Identifier	cb_printf		986470	1					
ANR	986856	ArgumentList	"""\\"" %s bin\\n"""		986470	1					
ANR	986857	Argument	"""\\"" %s bin\\n"""		986470	0					
ANR	986858	PrimaryExpression	"""\\"" %s bin\\n"""		986470	0					
ANR	986859	Argument	"( i <= trunksize ) ? "">"" : "">>"""		986470	1					
ANR	986860	ConditionalExpression	"( i <= trunksize ) ? "">"" : "">>"""		986470	0					
ANR	986861	Condition	i <= trunksize		986470	0					
ANR	986862	RelationalExpression	i <= trunksize		986470	0		<=			
ANR	986863	Identifier	i		986470	0					
ANR	986864	Identifier	trunksize		986470	1					
ANR	986865	PrimaryExpression	""">"""		986470	1					
ANR	986866	PrimaryExpression	""">>"""		986470	2					
ANR	986867	BreakStatement	break ;	4721:3:132355:132360	986470	23	True				
ANR	986868	Label	case 'J' :	4722:1:132363:132371	986470	24	True				
ANR	986869	CompoundStatement		64:2:1447:1475	986470	25					
ANR	986870	IdentifierDeclStatement	char * out = malloc ( len * 3 ) ;	4723:2:132386:132414	986470	0	True				
ANR	986871	IdentifierDecl	* out = malloc ( len * 3 )		986470	0					
ANR	986872	IdentifierDeclType	char *		986470	0					
ANR	986873	Identifier	out		986470	1					
ANR	986874	AssignmentExpression	* out = malloc ( len * 3 )		986470	2		=			
ANR	986875	Identifier	out		986470	0					
ANR	986876	CallExpression	malloc ( len * 3 )		986470	1					
ANR	986877	Callee	malloc		986470	0					
ANR	986878	Identifier	malloc		986470	0					
ANR	986879	ArgumentList	len * 3		986470	1					
ANR	986880	Argument	len * 3		986470	0					
ANR	986881	MultiplicativeExpression	len * 3		986470	0		*			
ANR	986882	Identifier	len		986470	0					
ANR	986883	PrimaryExpression	3		986470	1					
ANR	986884	ExpressionStatement	"p -> cb_printf ( ""var buffer = new Buffer(\\"""" )"	4724:2:132418:132461	986470	1	True				
ANR	986885	CallExpression	"p -> cb_printf ( ""var buffer = new Buffer(\\"""" )"		986470	0					
ANR	986886	Callee	p -> cb_printf		986470	0					
ANR	986887	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	986888	Identifier	p		986470	0					
ANR	986889	Identifier	cb_printf		986470	1					
ANR	986890	ArgumentList	"""var buffer = new Buffer(\\"""""		986470	1					
ANR	986891	Argument	"""var buffer = new Buffer(\\"""""		986470	0					
ANR	986892	PrimaryExpression	"""var buffer = new Buffer(\\"""""		986470	0					
ANR	986893	ExpressionStatement	out [ 0 ] = 0	4725:2:132465:132475	986470	2	True				
ANR	986894	AssignmentExpression	out [ 0 ] = 0		986470	0		=			
ANR	986895	ArrayIndexing	out [ 0 ]		986470	0					
ANR	986896	Identifier	out		986470	0					
ANR	986897	PrimaryExpression	0		986470	1					
ANR	986898	PrimaryExpression	0		986470	1					
ANR	986899	ExpressionStatement	"r_base64_encode ( out , buf , len )"	4726:2:132479:132510	986470	3	True				
ANR	986900	CallExpression	"r_base64_encode ( out , buf , len )"		986470	0					
ANR	986901	Callee	r_base64_encode		986470	0					
ANR	986902	Identifier	r_base64_encode		986470	0					
ANR	986903	ArgumentList	out		986470	1					
ANR	986904	Argument	out		986470	0					
ANR	986905	Identifier	out		986470	0					
ANR	986906	Argument	buf		986470	1					
ANR	986907	Identifier	buf		986470	0					
ANR	986908	Argument	len		986470	2					
ANR	986909	Identifier	len		986470	0					
ANR	986910	ExpressionStatement	"p -> cb_printf ( ""%s"" , out )"	4727:2:132514:132538	986470	4	True				
ANR	986911	CallExpression	"p -> cb_printf ( ""%s"" , out )"		986470	0					
ANR	986912	Callee	p -> cb_printf		986470	0					
ANR	986913	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	986914	Identifier	p		986470	0					
ANR	986915	Identifier	cb_printf		986470	1					
ANR	986916	ArgumentList	"""%s"""		986470	1					
ANR	986917	Argument	"""%s"""		986470	0					
ANR	986918	PrimaryExpression	"""%s"""		986470	0					
ANR	986919	Argument	out		986470	1					
ANR	986920	Identifier	out		986470	0					
ANR	986921	ExpressionStatement	"p -> cb_printf ( ""\\"", 'base64');\\n"" )"	4728:2:132542:132575	986470	5	True				
ANR	986922	CallExpression	"p -> cb_printf ( ""\\"", 'base64');\\n"" )"		986470	0					
ANR	986923	Callee	p -> cb_printf		986470	0					
ANR	986924	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	986925	Identifier	p		986470	0					
ANR	986926	Identifier	cb_printf		986470	1					
ANR	986927	ArgumentList	"""\\"", 'base64');\\n"""		986470	1					
ANR	986928	Argument	"""\\"", 'base64');\\n"""		986470	0					
ANR	986929	PrimaryExpression	"""\\"", 'base64');\\n"""		986470	0					
ANR	986930	ExpressionStatement	free ( out )	4729:2:132579:132589	986470	6	True				
ANR	986931	CallExpression	free ( out )		986470	0					
ANR	986932	Callee	free		986470	0					
ANR	986933	Identifier	free		986470	0					
ANR	986934	ArgumentList	out		986470	1					
ANR	986935	Argument	out		986470	0					
ANR	986936	Identifier	out		986470	0					
ANR	986937	BreakStatement	break ;	4730:3:132594:132599	986470	26	True				
ANR	986938	Label	case 'k' :	4731:1:132602:132610	986470	27	True				
ANR	986939	ExpressionStatement	"p -> cb_printf ( ""val arr = byteArrayOfInts("" )"	4732:2:132630:132673	986470	28	True				
ANR	986940	CallExpression	"p -> cb_printf ( ""val arr = byteArrayOfInts("" )"		986470	0					
ANR	986941	Callee	p -> cb_printf		986470	0					
ANR	986942	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	986943	Identifier	p		986470	0					
ANR	986944	Identifier	cb_printf		986470	1					
ANR	986945	ArgumentList	"""val arr = byteArrayOfInts("""		986470	1					
ANR	986946	Argument	"""val arr = byteArrayOfInts("""		986470	0					
ANR	986947	PrimaryExpression	"""val arr = byteArrayOfInts("""		986470	0					
ANR	986948	ForStatement	for ( i = 0 ; ! p -> interrupt && i < len ; i ++ )		986470	29					
ANR	986949	ForInit	i = 0 ;	4733:7:132682:132687	986470	0	True				
ANR	986950	AssignmentExpression	i = 0		986470	0		=			
ANR	986951	Identifier	i		986470	0					
ANR	986952	PrimaryExpression	0		986470	1					
ANR	986953	Condition	! p -> interrupt && i < len	4733:14:132689:132712	986470	1	True				
ANR	986954	AndExpression	! p -> interrupt && i < len		986470	0		&&			
ANR	986955	UnaryOperationExpression	! p -> interrupt		986470	0					
ANR	986956	UnaryOperator	!		986470	0					
ANR	986957	PtrMemberAccess	p -> interrupt		986470	1					
ANR	986958	Identifier	p		986470	0					
ANR	986959	Identifier	interrupt		986470	1					
ANR	986960	RelationalExpression	i < len		986470	1		<			
ANR	986961	Identifier	i		986470	0					
ANR	986962	Identifier	len		986470	1					
ANR	986963	PostIncDecOperationExpression	i ++	4733:40:132715:132717	986470	2	True				
ANR	986964	Identifier	i		986470	0					
ANR	986965	IncDec	++		986470	1					
ANR	986966	CompoundStatement		74:45:1781:1781	986470	3					
ANR	986967	ExpressionStatement	"r_print_cursor ( p , i , 1 , 1 )"	4734:3:132725:132752	986470	0	True				
ANR	986968	CallExpression	"r_print_cursor ( p , i , 1 , 1 )"		986470	0					
ANR	986969	Callee	r_print_cursor		986470	0					
ANR	986970	Identifier	r_print_cursor		986470	0					
ANR	986971	ArgumentList	p		986470	1					
ANR	986972	Argument	p		986470	0					
ANR	986973	Identifier	p		986470	0					
ANR	986974	Argument	i		986470	1					
ANR	986975	Identifier	i		986470	0					
ANR	986976	Argument	1		986470	2					
ANR	986977	PrimaryExpression	1		986470	0					
ANR	986978	Argument	1		986470	3					
ANR	986979	PrimaryExpression	1		986470	0					
ANR	986980	ExpressionStatement	"p -> cb_printf ( ""0x%x%s"" , buf [ i ] , ( i + 1 < len ) ? "","" : """" )"	4735:3:132757:132812	986470	1	True				
ANR	986981	CallExpression	"p -> cb_printf ( ""0x%x%s"" , buf [ i ] , ( i + 1 < len ) ? "","" : """" )"		986470	0					
ANR	986982	Callee	p -> cb_printf		986470	0					
ANR	986983	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	986984	Identifier	p		986470	0					
ANR	986985	Identifier	cb_printf		986470	1					
ANR	986986	ArgumentList	"""0x%x%s"""		986470	1					
ANR	986987	Argument	"""0x%x%s"""		986470	0					
ANR	986988	PrimaryExpression	"""0x%x%s"""		986470	0					
ANR	986989	Argument	buf [ i ]		986470	1					
ANR	986990	ArrayIndexing	buf [ i ]		986470	0					
ANR	986991	Identifier	buf		986470	0					
ANR	986992	Identifier	i		986470	1					
ANR	986993	Argument	"( i + 1 < len ) ? "","" : """""		986470	2					
ANR	986994	ConditionalExpression	"( i + 1 < len ) ? "","" : """""		986470	0					
ANR	986995	Condition	i + 1 < len		986470	0					
ANR	986996	RelationalExpression	i + 1 < len		986470	0		<			
ANR	986997	AdditiveExpression	i + 1		986470	0		+			
ANR	986998	Identifier	i		986470	0					
ANR	986999	PrimaryExpression	1		986470	1					
ANR	987000	Identifier	len		986470	1					
ANR	987001	PrimaryExpression	""","""		986470	1					
ANR	987002	PrimaryExpression	""""""		986470	2					
ANR	987003	ExpressionStatement	"r_print_cursor ( p , i , 1 , 0 )"	4736:3:132817:132844	986470	2	True				
ANR	987004	CallExpression	"r_print_cursor ( p , i , 1 , 0 )"		986470	0					
ANR	987005	Callee	r_print_cursor		986470	0					
ANR	987006	Identifier	r_print_cursor		986470	0					
ANR	987007	ArgumentList	p		986470	1					
ANR	987008	Argument	p		986470	0					
ANR	987009	Identifier	p		986470	0					
ANR	987010	Argument	i		986470	1					
ANR	987011	Identifier	i		986470	0					
ANR	987012	Argument	1		986470	2					
ANR	987013	PrimaryExpression	1		986470	0					
ANR	987014	Argument	0		986470	3					
ANR	987015	PrimaryExpression	0		986470	0					
ANR	987016	ExpressionStatement	"p -> cb_printf ( "")\\n"" )"	4738:2:132852:132872	986470	30	True				
ANR	987017	CallExpression	"p -> cb_printf ( "")\\n"" )"		986470	0					
ANR	987018	Callee	p -> cb_printf		986470	0					
ANR	987019	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	987020	Identifier	p		986470	0					
ANR	987021	Identifier	cb_printf		986470	1					
ANR	987022	ArgumentList	""")\\n"""		986470	1					
ANR	987023	Argument	""")\\n"""		986470	0					
ANR	987024	PrimaryExpression	""")\\n"""		986470	0					
ANR	987025	BreakStatement	break ;	4739:2:132876:132881	986470	31	True				
ANR	987026	Label	case 'z' :	4740:1:132884:132892	986470	32	True				
ANR	987027	ExpressionStatement	"p -> cb_printf ( ""let byteArray : [UInt8] = ["" )"	4741:2:132914:132958	986470	33	True				
ANR	987028	CallExpression	"p -> cb_printf ( ""let byteArray : [UInt8] = ["" )"		986470	0					
ANR	987029	Callee	p -> cb_printf		986470	0					
ANR	987030	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	987031	Identifier	p		986470	0					
ANR	987032	Identifier	cb_printf		986470	1					
ANR	987033	ArgumentList	"""let byteArray : [UInt8] = ["""		986470	1					
ANR	987034	Argument	"""let byteArray : [UInt8] = ["""		986470	0					
ANR	987035	PrimaryExpression	"""let byteArray : [UInt8] = ["""		986470	0					
ANR	987036	ForStatement	for ( i = 0 ; ! p -> interrupt && i < len ; i ++ )		986470	34					
ANR	987037	ForInit	i = 0 ;	4743:7:132968:132973	986470	0	True				
ANR	987038	AssignmentExpression	i = 0		986470	0		=			
ANR	987039	Identifier	i		986470	0					
ANR	987040	PrimaryExpression	0		986470	1					
ANR	987041	Condition	! p -> interrupt && i < len	4743:14:132975:132998	986470	1	True				
ANR	987042	AndExpression	! p -> interrupt && i < len		986470	0		&&			
ANR	987043	UnaryOperationExpression	! p -> interrupt		986470	0					
ANR	987044	UnaryOperator	!		986470	0					
ANR	987045	PtrMemberAccess	p -> interrupt		986470	1					
ANR	987046	Identifier	p		986470	0					
ANR	987047	Identifier	interrupt		986470	1					
ANR	987048	RelationalExpression	i < len		986470	1		<			
ANR	987049	Identifier	i		986470	0					
ANR	987050	Identifier	len		986470	1					
ANR	987051	PostIncDecOperationExpression	i ++	4743:40:133001:133003	986470	2	True				
ANR	987052	Identifier	i		986470	0					
ANR	987053	IncDec	++		986470	1					
ANR	987054	CompoundStatement		84:45:2067:2067	986470	3					
ANR	987055	ExpressionStatement	"r_print_cursor ( p , i , 1 , 1 )"	4744:3:133011:133038	986470	0	True				
ANR	987056	CallExpression	"r_print_cursor ( p , i , 1 , 1 )"		986470	0					
ANR	987057	Callee	r_print_cursor		986470	0					
ANR	987058	Identifier	r_print_cursor		986470	0					
ANR	987059	ArgumentList	p		986470	1					
ANR	987060	Argument	p		986470	0					
ANR	987061	Identifier	p		986470	0					
ANR	987062	Argument	i		986470	1					
ANR	987063	Identifier	i		986470	0					
ANR	987064	Argument	1		986470	2					
ANR	987065	PrimaryExpression	1		986470	0					
ANR	987066	Argument	1		986470	3					
ANR	987067	PrimaryExpression	1		986470	0					
ANR	987068	ExpressionStatement	"p -> cb_printf ( ""0x%x%s"" , buf [ i ] , ( i + 1 < len ) ? "", "" : """" )"	4745:3:133043:133099	986470	1	True				
ANR	987069	CallExpression	"p -> cb_printf ( ""0x%x%s"" , buf [ i ] , ( i + 1 < len ) ? "", "" : """" )"		986470	0					
ANR	987070	Callee	p -> cb_printf		986470	0					
ANR	987071	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	987072	Identifier	p		986470	0					
ANR	987073	Identifier	cb_printf		986470	1					
ANR	987074	ArgumentList	"""0x%x%s"""		986470	1					
ANR	987075	Argument	"""0x%x%s"""		986470	0					
ANR	987076	PrimaryExpression	"""0x%x%s"""		986470	0					
ANR	987077	Argument	buf [ i ]		986470	1					
ANR	987078	ArrayIndexing	buf [ i ]		986470	0					
ANR	987079	Identifier	buf		986470	0					
ANR	987080	Identifier	i		986470	1					
ANR	987081	Argument	"( i + 1 < len ) ? "", "" : """""		986470	2					
ANR	987082	ConditionalExpression	"( i + 1 < len ) ? "", "" : """""		986470	0					
ANR	987083	Condition	i + 1 < len		986470	0					
ANR	987084	RelationalExpression	i + 1 < len		986470	0		<			
ANR	987085	AdditiveExpression	i + 1		986470	0		+			
ANR	987086	Identifier	i		986470	0					
ANR	987087	PrimaryExpression	1		986470	1					
ANR	987088	Identifier	len		986470	1					
ANR	987089	PrimaryExpression	""", """		986470	1					
ANR	987090	PrimaryExpression	""""""		986470	2					
ANR	987091	ExpressionStatement	"r_print_cursor ( p , i , 1 , 0 )"	4746:3:133104:133131	986470	2	True				
ANR	987092	CallExpression	"r_print_cursor ( p , i , 1 , 0 )"		986470	0					
ANR	987093	Callee	r_print_cursor		986470	0					
ANR	987094	Identifier	r_print_cursor		986470	0					
ANR	987095	ArgumentList	p		986470	1					
ANR	987096	Argument	p		986470	0					
ANR	987097	Identifier	p		986470	0					
ANR	987098	Argument	i		986470	1					
ANR	987099	Identifier	i		986470	0					
ANR	987100	Argument	1		986470	2					
ANR	987101	PrimaryExpression	1		986470	0					
ANR	987102	Argument	0		986470	3					
ANR	987103	PrimaryExpression	0		986470	0					
ANR	987104	ExpressionStatement	"p -> cb_printf ( ""]\\n"" )"	4748:2:133139:133159	986470	35	True				
ANR	987105	CallExpression	"p -> cb_printf ( ""]\\n"" )"		986470	0					
ANR	987106	Callee	p -> cb_printf		986470	0					
ANR	987107	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	987108	Identifier	p		986470	0					
ANR	987109	Identifier	cb_printf		986470	1					
ANR	987110	ArgumentList	"""]\\n"""		986470	1					
ANR	987111	Argument	"""]\\n"""		986470	0					
ANR	987112	PrimaryExpression	"""]\\n"""		986470	0					
ANR	987113	BreakStatement	break ;	4749:2:133163:133168	986470	36	True				
ANR	987114	Label	case 'r' :	4750:1:133171:133179	986470	37	True				
ANR	987115	ExpressionStatement	"p -> cb_printf ( ""let _: [u8; %d] = [\\n"" , len )"	4751:2:133200:133243	986470	38	True				
ANR	987116	CallExpression	"p -> cb_printf ( ""let _: [u8; %d] = [\\n"" , len )"		986470	0					
ANR	987117	Callee	p -> cb_printf		986470	0					
ANR	987118	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	987119	Identifier	p		986470	0					
ANR	987120	Identifier	cb_printf		986470	1					
ANR	987121	ArgumentList	"""let _: [u8; %d] = [\\n"""		986470	1					
ANR	987122	Argument	"""let _: [u8; %d] = [\\n"""		986470	0					
ANR	987123	PrimaryExpression	"""let _: [u8; %d] = [\\n"""		986470	0					
ANR	987124	Argument	len		986470	1					
ANR	987125	Identifier	len		986470	0					
ANR	987126	ForStatement	for ( i = 0 ; ! p -> interrupt && i < len ; i ++ )		986470	39					
ANR	987127	ForInit	i = 0 ;	4752:7:133252:133257	986470	0	True				
ANR	987128	AssignmentExpression	i = 0		986470	0		=			
ANR	987129	Identifier	i		986470	0					
ANR	987130	PrimaryExpression	0		986470	1					
ANR	987131	Condition	! p -> interrupt && i < len	4752:14:133259:133282	986470	1	True				
ANR	987132	AndExpression	! p -> interrupt && i < len		986470	0		&&			
ANR	987133	UnaryOperationExpression	! p -> interrupt		986470	0					
ANR	987134	UnaryOperator	!		986470	0					
ANR	987135	PtrMemberAccess	p -> interrupt		986470	1					
ANR	987136	Identifier	p		986470	0					
ANR	987137	Identifier	interrupt		986470	1					
ANR	987138	RelationalExpression	i < len		986470	1		<			
ANR	987139	Identifier	i		986470	0					
ANR	987140	Identifier	len		986470	1					
ANR	987141	PostIncDecOperationExpression	i ++	4752:40:133285:133287	986470	2	True				
ANR	987142	Identifier	i		986470	0					
ANR	987143	IncDec	++		986470	1					
ANR	987144	CompoundStatement		93:45:2351:2351	986470	3					
ANR	987145	ExpressionStatement	"r_print_cursor ( p , i , 1 , 1 )"	4753:3:133295:133322	986470	0	True				
ANR	987146	CallExpression	"r_print_cursor ( p , i , 1 , 1 )"		986470	0					
ANR	987147	Callee	r_print_cursor		986470	0					
ANR	987148	Identifier	r_print_cursor		986470	0					
ANR	987149	ArgumentList	p		986470	1					
ANR	987150	Argument	p		986470	0					
ANR	987151	Identifier	p		986470	0					
ANR	987152	Argument	i		986470	1					
ANR	987153	Identifier	i		986470	0					
ANR	987154	Argument	1		986470	2					
ANR	987155	PrimaryExpression	1		986470	0					
ANR	987156	Argument	1		986470	3					
ANR	987157	PrimaryExpression	1		986470	0					
ANR	987158	ExpressionStatement	"p -> cb_printf ( ""0x%x%s"" , buf [ i ] , ( i + 1 < len ) ? "","" : """" )"	4754:3:133327:133382	986470	1	True				
ANR	987159	CallExpression	"p -> cb_printf ( ""0x%x%s"" , buf [ i ] , ( i + 1 < len ) ? "","" : """" )"		986470	0					
ANR	987160	Callee	p -> cb_printf		986470	0					
ANR	987161	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	987162	Identifier	p		986470	0					
ANR	987163	Identifier	cb_printf		986470	1					
ANR	987164	ArgumentList	"""0x%x%s"""		986470	1					
ANR	987165	Argument	"""0x%x%s"""		986470	0					
ANR	987166	PrimaryExpression	"""0x%x%s"""		986470	0					
ANR	987167	Argument	buf [ i ]		986470	1					
ANR	987168	ArrayIndexing	buf [ i ]		986470	0					
ANR	987169	Identifier	buf		986470	0					
ANR	987170	Identifier	i		986470	1					
ANR	987171	Argument	"( i + 1 < len ) ? "","" : """""		986470	2					
ANR	987172	ConditionalExpression	"( i + 1 < len ) ? "","" : """""		986470	0					
ANR	987173	Condition	i + 1 < len		986470	0					
ANR	987174	RelationalExpression	i + 1 < len		986470	0		<			
ANR	987175	AdditiveExpression	i + 1		986470	0		+			
ANR	987176	Identifier	i		986470	0					
ANR	987177	PrimaryExpression	1		986470	1					
ANR	987178	Identifier	len		986470	1					
ANR	987179	PrimaryExpression	""","""		986470	1					
ANR	987180	PrimaryExpression	""""""		986470	2					
ANR	987181	ExpressionStatement	"r_print_cursor ( p , i , 1 , 0 )"	4755:3:133387:133414	986470	2	True				
ANR	987182	CallExpression	"r_print_cursor ( p , i , 1 , 0 )"		986470	0					
ANR	987183	Callee	r_print_cursor		986470	0					
ANR	987184	Identifier	r_print_cursor		986470	0					
ANR	987185	ArgumentList	p		986470	1					
ANR	987186	Argument	p		986470	0					
ANR	987187	Identifier	p		986470	0					
ANR	987188	Argument	i		986470	1					
ANR	987189	Identifier	i		986470	0					
ANR	987190	Argument	1		986470	2					
ANR	987191	PrimaryExpression	1		986470	0					
ANR	987192	Argument	0		986470	3					
ANR	987193	PrimaryExpression	0		986470	0					
ANR	987194	ExpressionStatement	"p -> cb_printf ( ""];\\n"" )"	4757:2:133422:133443	986470	40	True				
ANR	987195	CallExpression	"p -> cb_printf ( ""];\\n"" )"		986470	0					
ANR	987196	Callee	p -> cb_printf		986470	0					
ANR	987197	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	987198	Identifier	p		986470	0					
ANR	987199	Identifier	cb_printf		986470	1					
ANR	987200	ArgumentList	"""];\\n"""		986470	1					
ANR	987201	Argument	"""];\\n"""		986470	0					
ANR	987202	PrimaryExpression	"""];\\n"""		986470	0					
ANR	987203	BreakStatement	break ;	4758:2:133447:133452	986470	41	True				
ANR	987204	Label	case 'o' :	4759:1:133455:133463	986470	42	True				
ANR	987205	ExpressionStatement	"p -> cb_printf ( ""NSData *endMarker = [[NSData alloc] initWithBytes:{\\n"" )"	4760:2:133491:133561	986470	43	True				
ANR	987206	CallExpression	"p -> cb_printf ( ""NSData *endMarker = [[NSData alloc] initWithBytes:{\\n"" )"		986470	0					
ANR	987207	Callee	p -> cb_printf		986470	0					
ANR	987208	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	987209	Identifier	p		986470	0					
ANR	987210	Identifier	cb_printf		986470	1					
ANR	987211	ArgumentList	"""NSData *endMarker = [[NSData alloc] initWithBytes:{\\n"""		986470	1					
ANR	987212	Argument	"""NSData *endMarker = [[NSData alloc] initWithBytes:{\\n"""		986470	0					
ANR	987213	PrimaryExpression	"""NSData *endMarker = [[NSData alloc] initWithBytes:{\\n"""		986470	0					
ANR	987214	ForStatement	for ( i = 0 ; ! p -> interrupt && i < len ; i ++ )		986470	44					
ANR	987215	ForInit	i = 0 ;	4761:7:133570:133575	986470	0	True				
ANR	987216	AssignmentExpression	i = 0		986470	0		=			
ANR	987217	Identifier	i		986470	0					
ANR	987218	PrimaryExpression	0		986470	1					
ANR	987219	Condition	! p -> interrupt && i < len	4761:14:133577:133600	986470	1	True				
ANR	987220	AndExpression	! p -> interrupt && i < len		986470	0		&&			
ANR	987221	UnaryOperationExpression	! p -> interrupt		986470	0					
ANR	987222	UnaryOperator	!		986470	0					
ANR	987223	PtrMemberAccess	p -> interrupt		986470	1					
ANR	987224	Identifier	p		986470	0					
ANR	987225	Identifier	interrupt		986470	1					
ANR	987226	RelationalExpression	i < len		986470	1		<			
ANR	987227	Identifier	i		986470	0					
ANR	987228	Identifier	len		986470	1					
ANR	987229	PostIncDecOperationExpression	i ++	4761:40:133603:133605	986470	2	True				
ANR	987230	Identifier	i		986470	0					
ANR	987231	IncDec	++		986470	1					
ANR	987232	CompoundStatement		102:45:2669:2669	986470	3					
ANR	987233	ExpressionStatement	"r_print_cursor ( p , i , 1 , 1 )"	4762:3:133613:133640	986470	0	True				
ANR	987234	CallExpression	"r_print_cursor ( p , i , 1 , 1 )"		986470	0					
ANR	987235	Callee	r_print_cursor		986470	0					
ANR	987236	Identifier	r_print_cursor		986470	0					
ANR	987237	ArgumentList	p		986470	1					
ANR	987238	Argument	p		986470	0					
ANR	987239	Identifier	p		986470	0					
ANR	987240	Argument	i		986470	1					
ANR	987241	Identifier	i		986470	0					
ANR	987242	Argument	1		986470	2					
ANR	987243	PrimaryExpression	1		986470	0					
ANR	987244	Argument	1		986470	3					
ANR	987245	PrimaryExpression	1		986470	0					
ANR	987246	ExpressionStatement	"p -> cb_printf ( ""0x%x%s"" , buf [ i ] , ( i + 1 < len ) ? "","" : """" )"	4763:3:133645:133700	986470	1	True				
ANR	987247	CallExpression	"p -> cb_printf ( ""0x%x%s"" , buf [ i ] , ( i + 1 < len ) ? "","" : """" )"		986470	0					
ANR	987248	Callee	p -> cb_printf		986470	0					
ANR	987249	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	987250	Identifier	p		986470	0					
ANR	987251	Identifier	cb_printf		986470	1					
ANR	987252	ArgumentList	"""0x%x%s"""		986470	1					
ANR	987253	Argument	"""0x%x%s"""		986470	0					
ANR	987254	PrimaryExpression	"""0x%x%s"""		986470	0					
ANR	987255	Argument	buf [ i ]		986470	1					
ANR	987256	ArrayIndexing	buf [ i ]		986470	0					
ANR	987257	Identifier	buf		986470	0					
ANR	987258	Identifier	i		986470	1					
ANR	987259	Argument	"( i + 1 < len ) ? "","" : """""		986470	2					
ANR	987260	ConditionalExpression	"( i + 1 < len ) ? "","" : """""		986470	0					
ANR	987261	Condition	i + 1 < len		986470	0					
ANR	987262	RelationalExpression	i + 1 < len		986470	0		<			
ANR	987263	AdditiveExpression	i + 1		986470	0		+			
ANR	987264	Identifier	i		986470	0					
ANR	987265	PrimaryExpression	1		986470	1					
ANR	987266	Identifier	len		986470	1					
ANR	987267	PrimaryExpression	""","""		986470	1					
ANR	987268	PrimaryExpression	""""""		986470	2					
ANR	987269	ExpressionStatement	"r_print_cursor ( p , i , 1 , 0 )"	4764:3:133705:133732	986470	2	True				
ANR	987270	CallExpression	"r_print_cursor ( p , i , 1 , 0 )"		986470	0					
ANR	987271	Callee	r_print_cursor		986470	0					
ANR	987272	Identifier	r_print_cursor		986470	0					
ANR	987273	ArgumentList	p		986470	1					
ANR	987274	Argument	p		986470	0					
ANR	987275	Identifier	p		986470	0					
ANR	987276	Argument	i		986470	1					
ANR	987277	Identifier	i		986470	0					
ANR	987278	Argument	1		986470	2					
ANR	987279	PrimaryExpression	1		986470	0					
ANR	987280	Argument	0		986470	3					
ANR	987281	PrimaryExpression	0		986470	0					
ANR	987282	ExpressionStatement	"p -> cb_printf ( ""}];\\n"" )"	4766:2:133740:133762	986470	45	True				
ANR	987283	CallExpression	"p -> cb_printf ( ""}];\\n"" )"		986470	0					
ANR	987284	Callee	p -> cb_printf		986470	0					
ANR	987285	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	987286	Identifier	p		986470	0					
ANR	987287	Identifier	cb_printf		986470	1					
ANR	987288	ArgumentList	"""}];\\n"""		986470	1					
ANR	987289	Argument	"""}];\\n"""		986470	0					
ANR	987290	PrimaryExpression	"""}];\\n"""		986470	0					
ANR	987291	BreakStatement	break ;	4767:2:133766:133771	986470	46	True				
ANR	987292	Label	case 'v' :	4768:1:133774:133782	986470	47	True				
ANR	987293	ExpressionStatement	"p -> cb_printf ( ""byte[] ba = {"" )"	4769:2:133803:133833	986470	48	True				
ANR	987294	CallExpression	"p -> cb_printf ( ""byte[] ba = {"" )"		986470	0					
ANR	987295	Callee	p -> cb_printf		986470	0					
ANR	987296	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	987297	Identifier	p		986470	0					
ANR	987298	Identifier	cb_printf		986470	1					
ANR	987299	ArgumentList	"""byte[] ba = {"""		986470	1					
ANR	987300	Argument	"""byte[] ba = {"""		986470	0					
ANR	987301	PrimaryExpression	"""byte[] ba = {"""		986470	0					
ANR	987302	ForStatement	for ( i = 0 ; ! p -> interrupt && i < len ; i ++ )		986470	49					
ANR	987303	ForInit	i = 0 ;	4770:7:133842:133847	986470	0	True				
ANR	987304	AssignmentExpression	i = 0		986470	0		=			
ANR	987305	Identifier	i		986470	0					
ANR	987306	PrimaryExpression	0		986470	1					
ANR	987307	Condition	! p -> interrupt && i < len	4770:14:133849:133872	986470	1	True				
ANR	987308	AndExpression	! p -> interrupt && i < len		986470	0		&&			
ANR	987309	UnaryOperationExpression	! p -> interrupt		986470	0					
ANR	987310	UnaryOperator	!		986470	0					
ANR	987311	PtrMemberAccess	p -> interrupt		986470	1					
ANR	987312	Identifier	p		986470	0					
ANR	987313	Identifier	interrupt		986470	1					
ANR	987314	RelationalExpression	i < len		986470	1		<			
ANR	987315	Identifier	i		986470	0					
ANR	987316	Identifier	len		986470	1					
ANR	987317	PostIncDecOperationExpression	i ++	4770:40:133875:133877	986470	2	True				
ANR	987318	Identifier	i		986470	0					
ANR	987319	IncDec	++		986470	1					
ANR	987320	CompoundStatement		111:45:2941:2941	986470	3					
ANR	987321	ExpressionStatement	"r_print_cursor ( p , i , 1 , 1 )"	4771:3:133885:133912	986470	0	True				
ANR	987322	CallExpression	"r_print_cursor ( p , i , 1 , 1 )"		986470	0					
ANR	987323	Callee	r_print_cursor		986470	0					
ANR	987324	Identifier	r_print_cursor		986470	0					
ANR	987325	ArgumentList	p		986470	1					
ANR	987326	Argument	p		986470	0					
ANR	987327	Identifier	p		986470	0					
ANR	987328	Argument	i		986470	1					
ANR	987329	Identifier	i		986470	0					
ANR	987330	Argument	1		986470	2					
ANR	987331	PrimaryExpression	1		986470	0					
ANR	987332	Argument	1		986470	3					
ANR	987333	PrimaryExpression	1		986470	0					
ANR	987334	ExpressionStatement	"p -> cb_printf ( ""%d%s"" , buf [ i ] , ( i + 1 < len ) ? "","" : """" )"	4772:3:133917:133970	986470	1	True				
ANR	987335	CallExpression	"p -> cb_printf ( ""%d%s"" , buf [ i ] , ( i + 1 < len ) ? "","" : """" )"		986470	0					
ANR	987336	Callee	p -> cb_printf		986470	0					
ANR	987337	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	987338	Identifier	p		986470	0					
ANR	987339	Identifier	cb_printf		986470	1					
ANR	987340	ArgumentList	"""%d%s"""		986470	1					
ANR	987341	Argument	"""%d%s"""		986470	0					
ANR	987342	PrimaryExpression	"""%d%s"""		986470	0					
ANR	987343	Argument	buf [ i ]		986470	1					
ANR	987344	ArrayIndexing	buf [ i ]		986470	0					
ANR	987345	Identifier	buf		986470	0					
ANR	987346	Identifier	i		986470	1					
ANR	987347	Argument	"( i + 1 < len ) ? "","" : """""		986470	2					
ANR	987348	ConditionalExpression	"( i + 1 < len ) ? "","" : """""		986470	0					
ANR	987349	Condition	i + 1 < len		986470	0					
ANR	987350	RelationalExpression	i + 1 < len		986470	0		<			
ANR	987351	AdditiveExpression	i + 1		986470	0		+			
ANR	987352	Identifier	i		986470	0					
ANR	987353	PrimaryExpression	1		986470	1					
ANR	987354	Identifier	len		986470	1					
ANR	987355	PrimaryExpression	""","""		986470	1					
ANR	987356	PrimaryExpression	""""""		986470	2					
ANR	987357	ExpressionStatement	"r_print_cursor ( p , i , 1 , 0 )"	4773:3:133975:134002	986470	2	True				
ANR	987358	CallExpression	"r_print_cursor ( p , i , 1 , 0 )"		986470	0					
ANR	987359	Callee	r_print_cursor		986470	0					
ANR	987360	Identifier	r_print_cursor		986470	0					
ANR	987361	ArgumentList	p		986470	1					
ANR	987362	Argument	p		986470	0					
ANR	987363	Identifier	p		986470	0					
ANR	987364	Argument	i		986470	1					
ANR	987365	Identifier	i		986470	0					
ANR	987366	Argument	1		986470	2					
ANR	987367	PrimaryExpression	1		986470	0					
ANR	987368	Argument	0		986470	3					
ANR	987369	PrimaryExpression	0		986470	0					
ANR	987370	ExpressionStatement	"p -> cb_printf ( ""};\\n"" )"	4775:2:134010:134031	986470	50	True				
ANR	987371	CallExpression	"p -> cb_printf ( ""};\\n"" )"		986470	0					
ANR	987372	Callee	p -> cb_printf		986470	0					
ANR	987373	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	987374	Identifier	p		986470	0					
ANR	987375	Identifier	cb_printf		986470	1					
ANR	987376	ArgumentList	"""};\\n"""		986470	1					
ANR	987377	Argument	"""};\\n"""		986470	0					
ANR	987378	PrimaryExpression	"""};\\n"""		986470	0					
ANR	987379	BreakStatement	break ;	4776:2:134035:134040	986470	51	True				
ANR	987380	Label	case 'j' :	4777:1:134043:134051	986470	52	True				
ANR	987381	ExpressionStatement	"p -> cb_printf ( ""["" )"	4778:2:134064:134082	986470	53	True				
ANR	987382	CallExpression	"p -> cb_printf ( ""["" )"		986470	0					
ANR	987383	Callee	p -> cb_printf		986470	0					
ANR	987384	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	987385	Identifier	p		986470	0					
ANR	987386	Identifier	cb_printf		986470	1					
ANR	987387	ArgumentList	"""["""		986470	1					
ANR	987388	Argument	"""["""		986470	0					
ANR	987389	PrimaryExpression	"""["""		986470	0					
ANR	987390	ForStatement	for ( i = 0 ; ! p -> interrupt && i < len ; i ++ )		986470	54					
ANR	987391	ForInit	i = 0 ;	4779:7:134091:134096	986470	0	True				
ANR	987392	AssignmentExpression	i = 0		986470	0		=			
ANR	987393	Identifier	i		986470	0					
ANR	987394	PrimaryExpression	0		986470	1					
ANR	987395	Condition	! p -> interrupt && i < len	4779:14:134098:134121	986470	1	True				
ANR	987396	AndExpression	! p -> interrupt && i < len		986470	0		&&			
ANR	987397	UnaryOperationExpression	! p -> interrupt		986470	0					
ANR	987398	UnaryOperator	!		986470	0					
ANR	987399	PtrMemberAccess	p -> interrupt		986470	1					
ANR	987400	Identifier	p		986470	0					
ANR	987401	Identifier	interrupt		986470	1					
ANR	987402	RelationalExpression	i < len		986470	1		<			
ANR	987403	Identifier	i		986470	0					
ANR	987404	Identifier	len		986470	1					
ANR	987405	PostIncDecOperationExpression	i ++	4779:40:134124:134126	986470	2	True				
ANR	987406	Identifier	i		986470	0					
ANR	987407	IncDec	++		986470	1					
ANR	987408	CompoundStatement		120:45:3190:3190	986470	3					
ANR	987409	ExpressionStatement	"r_print_cursor ( p , i , 1 , 1 )"	4780:3:134134:134161	986470	0	True				
ANR	987410	CallExpression	"r_print_cursor ( p , i , 1 , 1 )"		986470	0					
ANR	987411	Callee	r_print_cursor		986470	0					
ANR	987412	Identifier	r_print_cursor		986470	0					
ANR	987413	ArgumentList	p		986470	1					
ANR	987414	Argument	p		986470	0					
ANR	987415	Identifier	p		986470	0					
ANR	987416	Argument	i		986470	1					
ANR	987417	Identifier	i		986470	0					
ANR	987418	Argument	1		986470	2					
ANR	987419	PrimaryExpression	1		986470	0					
ANR	987420	Argument	1		986470	3					
ANR	987421	PrimaryExpression	1		986470	0					
ANR	987422	ExpressionStatement	"p -> cb_printf ( ""%d%s"" , buf [ i ] , ( i + 1 < len ) ? "","" : """" )"	4781:3:134166:134219	986470	1	True				
ANR	987423	CallExpression	"p -> cb_printf ( ""%d%s"" , buf [ i ] , ( i + 1 < len ) ? "","" : """" )"		986470	0					
ANR	987424	Callee	p -> cb_printf		986470	0					
ANR	987425	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	987426	Identifier	p		986470	0					
ANR	987427	Identifier	cb_printf		986470	1					
ANR	987428	ArgumentList	"""%d%s"""		986470	1					
ANR	987429	Argument	"""%d%s"""		986470	0					
ANR	987430	PrimaryExpression	"""%d%s"""		986470	0					
ANR	987431	Argument	buf [ i ]		986470	1					
ANR	987432	ArrayIndexing	buf [ i ]		986470	0					
ANR	987433	Identifier	buf		986470	0					
ANR	987434	Identifier	i		986470	1					
ANR	987435	Argument	"( i + 1 < len ) ? "","" : """""		986470	2					
ANR	987436	ConditionalExpression	"( i + 1 < len ) ? "","" : """""		986470	0					
ANR	987437	Condition	i + 1 < len		986470	0					
ANR	987438	RelationalExpression	i + 1 < len		986470	0		<			
ANR	987439	AdditiveExpression	i + 1		986470	0		+			
ANR	987440	Identifier	i		986470	0					
ANR	987441	PrimaryExpression	1		986470	1					
ANR	987442	Identifier	len		986470	1					
ANR	987443	PrimaryExpression	""","""		986470	1					
ANR	987444	PrimaryExpression	""""""		986470	2					
ANR	987445	ExpressionStatement	"r_print_cursor ( p , i , 1 , 0 )"	4782:3:134224:134251	986470	2	True				
ANR	987446	CallExpression	"r_print_cursor ( p , i , 1 , 0 )"		986470	0					
ANR	987447	Callee	r_print_cursor		986470	0					
ANR	987448	Identifier	r_print_cursor		986470	0					
ANR	987449	ArgumentList	p		986470	1					
ANR	987450	Argument	p		986470	0					
ANR	987451	Identifier	p		986470	0					
ANR	987452	Argument	i		986470	1					
ANR	987453	Identifier	i		986470	0					
ANR	987454	Argument	1		986470	2					
ANR	987455	PrimaryExpression	1		986470	0					
ANR	987456	Argument	0		986470	3					
ANR	987457	PrimaryExpression	0		986470	0					
ANR	987458	ExpressionStatement	"p -> cb_printf ( ""]\\n"" )"	4784:2:134259:134279	986470	55	True				
ANR	987459	CallExpression	"p -> cb_printf ( ""]\\n"" )"		986470	0					
ANR	987460	Callee	p -> cb_printf		986470	0					
ANR	987461	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	987462	Identifier	p		986470	0					
ANR	987463	Identifier	cb_printf		986470	1					
ANR	987464	ArgumentList	"""]\\n"""		986470	1					
ANR	987465	Argument	"""]\\n"""		986470	0					
ANR	987466	PrimaryExpression	"""]\\n"""		986470	0					
ANR	987467	BreakStatement	break ;	4785:2:134283:134288	986470	56	True				
ANR	987468	Label	case 'P' :	4786:1:134291:134299	986470	57	True				
ANR	987469	Label	case 'p' :	4787:1:134302:134310	986470	58	True				
ANR	987470	ExpressionStatement	"p -> cb_printf ( ""import struct\\nbuf = struct.pack (\\""%dB\\"", *["" , len )"	4788:2:134329:134396	986470	59	True				
ANR	987471	CallExpression	"p -> cb_printf ( ""import struct\\nbuf = struct.pack (\\""%dB\\"", *["" , len )"		986470	0					
ANR	987472	Callee	p -> cb_printf		986470	0					
ANR	987473	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	987474	Identifier	p		986470	0					
ANR	987475	Identifier	cb_printf		986470	1					
ANR	987476	ArgumentList	"""import struct\\nbuf = struct.pack (\\""%dB\\"", *["""		986470	1					
ANR	987477	Argument	"""import struct\\nbuf = struct.pack (\\""%dB\\"", *["""		986470	0					
ANR	987478	PrimaryExpression	"""import struct\\nbuf = struct.pack (\\""%dB\\"", *["""		986470	0					
ANR	987479	Argument	len		986470	1					
ANR	987480	Identifier	len		986470	0					
ANR	987481	ForStatement	for ( i = 0 ; ! p -> interrupt && i < len ; i ++ )		986470	60					
ANR	987482	ForInit	i = 0 ;	4789:7:134405:134410	986470	0	True				
ANR	987483	AssignmentExpression	i = 0		986470	0		=			
ANR	987484	Identifier	i		986470	0					
ANR	987485	PrimaryExpression	0		986470	1					
ANR	987486	Condition	! p -> interrupt && i < len	4789:14:134412:134435	986470	1	True				
ANR	987487	AndExpression	! p -> interrupt && i < len		986470	0		&&			
ANR	987488	UnaryOperationExpression	! p -> interrupt		986470	0					
ANR	987489	UnaryOperator	!		986470	0					
ANR	987490	PtrMemberAccess	p -> interrupt		986470	1					
ANR	987491	Identifier	p		986470	0					
ANR	987492	Identifier	interrupt		986470	1					
ANR	987493	RelationalExpression	i < len		986470	1		<			
ANR	987494	Identifier	i		986470	0					
ANR	987495	Identifier	len		986470	1					
ANR	987496	PostIncDecOperationExpression	i ++	4789:40:134438:134440	986470	2	True				
ANR	987497	Identifier	i		986470	0					
ANR	987498	IncDec	++		986470	1					
ANR	987499	CompoundStatement		130:45:3504:3504	986470	3					
ANR	987500	IfStatement	if ( ! ( i % w ) )		986470	0					
ANR	987501	Condition	! ( i % w )	4790:7:134452:134459	986470	0	True				
ANR	987502	UnaryOperationExpression	! ( i % w )		986470	0					
ANR	987503	UnaryOperator	!		986470	0					
ANR	987504	MultiplicativeExpression	i % w		986470	1		%			
ANR	987505	Identifier	i		986470	0					
ANR	987506	Identifier	w		986470	1					
ANR	987507	CompoundStatement		131:17:3523:3523	986470	1					
ANR	987508	ExpressionStatement	"p -> cb_printf ( ""\\n"" )"	4791:4:134468:134487	986470	0	True				
ANR	987509	CallExpression	"p -> cb_printf ( ""\\n"" )"		986470	0					
ANR	987510	Callee	p -> cb_printf		986470	0					
ANR	987511	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	987512	Identifier	p		986470	0					
ANR	987513	Identifier	cb_printf		986470	1					
ANR	987514	ArgumentList	"""\\n"""		986470	1					
ANR	987515	Argument	"""\\n"""		986470	0					
ANR	987516	PrimaryExpression	"""\\n"""		986470	0					
ANR	987517	ExpressionStatement	"r_print_cursor ( p , i , 1 , 1 )"	4793:3:134497:134524	986470	1	True				
ANR	987518	CallExpression	"r_print_cursor ( p , i , 1 , 1 )"		986470	0					
ANR	987519	Callee	r_print_cursor		986470	0					
ANR	987520	Identifier	r_print_cursor		986470	0					
ANR	987521	ArgumentList	p		986470	1					
ANR	987522	Argument	p		986470	0					
ANR	987523	Identifier	p		986470	0					
ANR	987524	Argument	i		986470	1					
ANR	987525	Identifier	i		986470	0					
ANR	987526	Argument	1		986470	2					
ANR	987527	PrimaryExpression	1		986470	0					
ANR	987528	Argument	1		986470	3					
ANR	987529	PrimaryExpression	1		986470	0					
ANR	987530	ExpressionStatement	"p -> cb_printf ( ""0x%02x%s"" , buf [ i ] , ( i + 1 < len ) ? "","" : ""])"" )"	4794:3:134529:134588	986470	2	True				
ANR	987531	CallExpression	"p -> cb_printf ( ""0x%02x%s"" , buf [ i ] , ( i + 1 < len ) ? "","" : ""])"" )"		986470	0					
ANR	987532	Callee	p -> cb_printf		986470	0					
ANR	987533	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	987534	Identifier	p		986470	0					
ANR	987535	Identifier	cb_printf		986470	1					
ANR	987536	ArgumentList	"""0x%02x%s"""		986470	1					
ANR	987537	Argument	"""0x%02x%s"""		986470	0					
ANR	987538	PrimaryExpression	"""0x%02x%s"""		986470	0					
ANR	987539	Argument	buf [ i ]		986470	1					
ANR	987540	ArrayIndexing	buf [ i ]		986470	0					
ANR	987541	Identifier	buf		986470	0					
ANR	987542	Identifier	i		986470	1					
ANR	987543	Argument	"( i + 1 < len ) ? "","" : ""])"""		986470	2					
ANR	987544	ConditionalExpression	"( i + 1 < len ) ? "","" : ""])"""		986470	0					
ANR	987545	Condition	i + 1 < len		986470	0					
ANR	987546	RelationalExpression	i + 1 < len		986470	0		<			
ANR	987547	AdditiveExpression	i + 1		986470	0		+			
ANR	987548	Identifier	i		986470	0					
ANR	987549	PrimaryExpression	1		986470	1					
ANR	987550	Identifier	len		986470	1					
ANR	987551	PrimaryExpression	""","""		986470	1					
ANR	987552	PrimaryExpression	"""])"""		986470	2					
ANR	987553	ExpressionStatement	"r_print_cursor ( p , i , 1 , 0 )"	4795:3:134593:134620	986470	3	True				
ANR	987554	CallExpression	"r_print_cursor ( p , i , 1 , 0 )"		986470	0					
ANR	987555	Callee	r_print_cursor		986470	0					
ANR	987556	Identifier	r_print_cursor		986470	0					
ANR	987557	ArgumentList	p		986470	1					
ANR	987558	Argument	p		986470	0					
ANR	987559	Identifier	p		986470	0					
ANR	987560	Argument	i		986470	1					
ANR	987561	Identifier	i		986470	0					
ANR	987562	Argument	1		986470	2					
ANR	987563	PrimaryExpression	1		986470	0					
ANR	987564	Argument	0		986470	3					
ANR	987565	PrimaryExpression	0		986470	0					
ANR	987566	ExpressionStatement	"p -> cb_printf ( ""\\n"" )"	4797:2:134628:134647	986470	61	True				
ANR	987567	CallExpression	"p -> cb_printf ( ""\\n"" )"		986470	0					
ANR	987568	Callee	p -> cb_printf		986470	0					
ANR	987569	PtrMemberAccess	p -> cb_printf		986470	0					
ANR	987570	Identifier	p		986470	0					
ANR	987571	Identifier	cb_printf		986470	1					
ANR	987572	ArgumentList	"""\\n"""		986470	1					
ANR	987573	Argument	"""\\n"""		986470	0					
ANR	987574	PrimaryExpression	"""\\n"""		986470	0					
ANR	987575	BreakStatement	break ;	4798:2:134651:134656	986470	62	True				
ANR	987576	Label	case 'h' :	4799:1:134659:134667	986470	63	True				
ANR	987577	ExpressionStatement	"print_c_code ( p , addr , buf , len , 2 , p -> cols / 2 )"	4800:2:134680:134728	986470	64	True				
ANR	987578	CallExpression	"print_c_code ( p , addr , buf , len , 2 , p -> cols / 2 )"		986470	0					
ANR	987579	Callee	print_c_code		986470	0					
ANR	987580	Identifier	print_c_code		986470	0					
ANR	987581	ArgumentList	p		986470	1					
ANR	987582	Argument	p		986470	0					
ANR	987583	Identifier	p		986470	0					
ANR	987584	Argument	addr		986470	1					
ANR	987585	Identifier	addr		986470	0					
ANR	987586	Argument	buf		986470	2					
ANR	987587	Identifier	buf		986470	0					
ANR	987588	Argument	len		986470	3					
ANR	987589	Identifier	len		986470	0					
ANR	987590	Argument	2		986470	4					
ANR	987591	PrimaryExpression	2		986470	0					
ANR	987592	Argument	p -> cols / 2		986470	5					
ANR	987593	MultiplicativeExpression	p -> cols / 2		986470	0		/			
ANR	987594	PtrMemberAccess	p -> cols		986470	0					
ANR	987595	Identifier	p		986470	0					
ANR	987596	Identifier	cols		986470	1					
ANR	987597	PrimaryExpression	2		986470	1					
ANR	987598	BreakStatement	break ;	4801:2:134737:134742	986470	65	True				
ANR	987599	Label	case 'w' :	4802:1:134745:134753	986470	66	True				
ANR	987600	ExpressionStatement	"print_c_code ( p , addr , buf , len , 4 , p -> cols / 3 )"	4803:2:134766:134814	986470	67	True				
ANR	987601	CallExpression	"print_c_code ( p , addr , buf , len , 4 , p -> cols / 3 )"		986470	0					
ANR	987602	Callee	print_c_code		986470	0					
ANR	987603	Identifier	print_c_code		986470	0					
ANR	987604	ArgumentList	p		986470	1					
ANR	987605	Argument	p		986470	0					
ANR	987606	Identifier	p		986470	0					
ANR	987607	Argument	addr		986470	1					
ANR	987608	Identifier	addr		986470	0					
ANR	987609	Argument	buf		986470	2					
ANR	987610	Identifier	buf		986470	0					
ANR	987611	Argument	len		986470	3					
ANR	987612	Identifier	len		986470	0					
ANR	987613	Argument	4		986470	4					
ANR	987614	PrimaryExpression	4		986470	0					
ANR	987615	Argument	p -> cols / 3		986470	5					
ANR	987616	MultiplicativeExpression	p -> cols / 3		986470	0		/			
ANR	987617	PtrMemberAccess	p -> cols		986470	0					
ANR	987618	Identifier	p		986470	0					
ANR	987619	Identifier	cols		986470	1					
ANR	987620	PrimaryExpression	3		986470	1					
ANR	987621	BreakStatement	break ;	4804:2:134825:134830	986470	68	True				
ANR	987622	Label	case 'd' :	4805:1:134833:134841	986470	69	True				
ANR	987623	ExpressionStatement	"print_c_code ( p , addr , buf , len , 8 , p -> cols / 5 )"	4806:2:134854:134902	986470	70	True				
ANR	987624	CallExpression	"print_c_code ( p , addr , buf , len , 8 , p -> cols / 5 )"		986470	0					
ANR	987625	Callee	print_c_code		986470	0					
ANR	987626	Identifier	print_c_code		986470	0					
ANR	987627	ArgumentList	p		986470	1					
ANR	987628	Argument	p		986470	0					
ANR	987629	Identifier	p		986470	0					
ANR	987630	Argument	addr		986470	1					
ANR	987631	Identifier	addr		986470	0					
ANR	987632	Argument	buf		986470	2					
ANR	987633	Identifier	buf		986470	0					
ANR	987634	Argument	len		986470	3					
ANR	987635	Identifier	len		986470	0					
ANR	987636	Argument	8		986470	4					
ANR	987637	PrimaryExpression	8		986470	0					
ANR	987638	Argument	p -> cols / 5		986470	5					
ANR	987639	MultiplicativeExpression	p -> cols / 5		986470	0		/			
ANR	987640	PtrMemberAccess	p -> cols		986470	0					
ANR	987641	Identifier	p		986470	0					
ANR	987642	Identifier	cols		986470	1					
ANR	987643	PrimaryExpression	5		986470	1					
ANR	987644	BreakStatement	break ;	4807:2:134912:134917	986470	71	True				
ANR	987645	Label	default :	4808:1:134920:134927	986470	72	True				
ANR	987646	Identifier	default		986470	0					
ANR	987647	ExpressionStatement	"print_c_code ( p , addr , buf , len , 1 , p -> cols / 1.5 )"	4809:2:134931:134981	986470	73	True				
ANR	987648	CallExpression	"print_c_code ( p , addr , buf , len , 1 , p -> cols / 1.5 )"		986470	0					
ANR	987649	Callee	print_c_code		986470	0					
ANR	987650	Identifier	print_c_code		986470	0					
ANR	987651	ArgumentList	p		986470	1					
ANR	987652	Argument	p		986470	0					
ANR	987653	Identifier	p		986470	0					
ANR	987654	Argument	addr		986470	1					
ANR	987655	Identifier	addr		986470	0					
ANR	987656	Argument	buf		986470	2					
ANR	987657	Identifier	buf		986470	0					
ANR	987658	Argument	len		986470	3					
ANR	987659	Identifier	len		986470	0					
ANR	987660	Argument	1		986470	4					
ANR	987661	PrimaryExpression	1		986470	0					
ANR	987662	Argument	p -> cols / 1.5		986470	5					
ANR	987663	MultiplicativeExpression	p -> cols / 1.5		986470	0		/			
ANR	987664	PtrMemberAccess	p -> cols		986470	0					
ANR	987665	Identifier	p		986470	0					
ANR	987666	Identifier	cols		986470	1					
ANR	987667	PrimaryExpression	1.5		986470	1					
ANR	987668	BreakStatement	break ;	4810:2:134993:134998	986470	74	True				
ANR	987669	ReturnType	R_API void		986470	1					
ANR	987670	Identifier	r_print_code		986470	2					
ANR	987671	ParameterList	"RPrint * p , ut64 addr , const ut8 * buf , int len , char lang"		986470	3					
ANR	987672	Parameter	RPrint * p	4660:24:130880:130888	986470	0	True				
ANR	987673	ParameterType	RPrint *		986470	0					
ANR	987674	Identifier	p		986470	1					
ANR	987675	Parameter	ut64 addr	4660:35:130891:130899	986470	1	True				
ANR	987676	ParameterType	ut64		986470	0					
ANR	987677	Identifier	addr		986470	1					
ANR	987678	Parameter	const ut8 * buf	4660:46:130902:130915	986470	2	True				
ANR	987679	ParameterType	const ut8 *		986470	0					
ANR	987680	Identifier	buf		986470	1					
ANR	987681	Parameter	int len	4660:62:130918:130924	986470	3	True				
ANR	987682	ParameterType	int		986470	0					
ANR	987683	Identifier	len		986470	1					
ANR	987684	Parameter	char lang	4660:71:130927:130935	986470	4	True				
ANR	987685	ParameterType	char		986470	0					
ANR	987686	Identifier	lang		986470	1					
ANR	987687	CFGEntryNode	ENTRY		986470		True				
ANR	987688	CFGExitNode	EXIT		986470		True				
ANR	987689	Symbol	malloc		986470						
ANR	987690	Symbol	* buf		986470						
ANR	987691	Symbol	trunksize		986470						
ANR	987692	Symbol	i		986470						
ANR	987693	Symbol	p -> interrupt		986470						
ANR	987694	Symbol	out		986470						
ANR	987695	Symbol	p		986470						
ANR	987696	Symbol	buf		986470						
ANR	987697	Symbol	* i		986470						
ANR	987698	Symbol	len		986470						
ANR	987699	Symbol	help_msg_pc		986470						
ANR	987700	Symbol	w		986470						
ANR	987701	Symbol	* out		986470						
ANR	987702	Symbol	* p		986470						
ANR	987703	Symbol	addr		986470						
ANR	987704	Symbol	lang		986470						
ANR	987705	Symbol	p -> cols		986470						
ANR	987706	Symbol	p -> user		986470						
ANR	987707	Function	print_json_string	4814:0:135006:135981							
ANR	987708	FunctionDef	"print_json_string (RCore * core , const char * block , int len , const char * type)"		987707	0					
ANR	987709	CompoundStatement		4814:89:135095:135981	987707	0					
ANR	987710	IdentifierDeclStatement	char * str ;	4815:1:135098:135107	987707	0	True				
ANR	987711	IdentifierDecl	* str		987707	0					
ANR	987712	IdentifierDeclType	char *		987707	0					
ANR	987713	Identifier	str		987707	1					
ANR	987714	IdentifierDeclStatement	"const char * section_name = r_core_get_section_name ( core , core -> offset ) ;"	4816:1:135110:135181	987707	1	True				
ANR	987715	IdentifierDecl	"* section_name = r_core_get_section_name ( core , core -> offset )"		987707	0					
ANR	987716	IdentifierDeclType	const char *		987707	0					
ANR	987717	Identifier	section_name		987707	1					
ANR	987718	AssignmentExpression	"* section_name = r_core_get_section_name ( core , core -> offset )"		987707	2		=			
ANR	987719	Identifier	section_name		987707	0					
ANR	987720	CallExpression	"r_core_get_section_name ( core , core -> offset )"		987707	1					
ANR	987721	Callee	r_core_get_section_name		987707	0					
ANR	987722	Identifier	r_core_get_section_name		987707	0					
ANR	987723	ArgumentList	core		987707	1					
ANR	987724	Argument	core		987707	0					
ANR	987725	Identifier	core		987707	0					
ANR	987726	Argument	core -> offset		987707	1					
ANR	987727	PtrMemberAccess	core -> offset		987707	0					
ANR	987728	Identifier	core		987707	0					
ANR	987729	Identifier	offset		987707	1					
ANR	987730	IfStatement	if ( section_name && strlen ( section_name ) < 1 )		987707	2					
ANR	987731	Condition	section_name && strlen ( section_name ) < 1	4817:5:135188:135228	987707	0	True				
ANR	987732	AndExpression	section_name && strlen ( section_name ) < 1		987707	0		&&			
ANR	987733	Identifier	section_name		987707	0					
ANR	987734	RelationalExpression	strlen ( section_name ) < 1		987707	1		<			
ANR	987735	CallExpression	strlen ( section_name )		987707	0					
ANR	987736	Callee	strlen		987707	0					
ANR	987737	Identifier	strlen		987707	0					
ANR	987738	ArgumentList	section_name		987707	1					
ANR	987739	Argument	section_name		987707	0					
ANR	987740	Identifier	section_name		987707	0					
ANR	987741	PrimaryExpression	1		987707	1					
ANR	987742	CompoundStatement		4:48:135:135	987707	1					
ANR	987743	ExpressionStatement	"section_name = ""unknown"""	4818:2:135235:135259	987707	0	True				
ANR	987744	AssignmentExpression	"section_name = ""unknown"""		987707	0		=			
ANR	987745	Identifier	section_name		987707	0					
ANR	987746	PrimaryExpression	"""unknown"""		987707	1					
ANR	987747	ElseStatement	else		987707	0					
ANR	987748	CompoundStatement		9:2:283:290	987707	0					
ANR	987749	ExpressionStatement	section_name = r_str_trim_ro ( section_name )	4821:2:135332:135375	987707	0	True				
ANR	987750	AssignmentExpression	section_name = r_str_trim_ro ( section_name )		987707	0		=			
ANR	987751	Identifier	section_name		987707	0					
ANR	987752	CallExpression	r_str_trim_ro ( section_name )		987707	1					
ANR	987753	Callee	r_str_trim_ro		987707	0					
ANR	987754	Identifier	r_str_trim_ro		987707	0					
ANR	987755	ArgumentList	section_name		987707	1					
ANR	987756	Argument	section_name		987707	0					
ANR	987757	Identifier	section_name		987707	0					
ANR	987758	IdentifierDeclStatement	char * p ;	4822:2:135379:135386	987707	1	True				
ANR	987759	IdentifierDecl	* p		987707	0					
ANR	987760	IdentifierDeclType	char *		987707	0					
ANR	987761	Identifier	p		987707	1					
ANR	987762	ForStatement	for ( p = ( char * ) section_name ; * p && * p != ' ' ; p ++ )		987707	2					
ANR	987763	ForInit	p = ( char * ) section_name ;	4823:7:135395:135419	987707	0	True				
ANR	987764	AssignmentExpression	p = ( char * ) section_name		987707	0		=			
ANR	987765	Identifier	p		987707	0					
ANR	987766	CastExpression	( char * ) section_name		987707	1					
ANR	987767	CastTarget	char *		987707	0					
ANR	987768	Identifier	section_name		987707	1					
ANR	987769	Condition	* p && * p != ' '	4823:33:135421:135435	987707	1	True				
ANR	987770	AndExpression	* p && * p != ' '		987707	0		&&			
ANR	987771	UnaryOperationExpression	* p		987707	0					
ANR	987772	UnaryOperator	*		987707	0					
ANR	987773	Identifier	p		987707	1					
ANR	987774	EqualityExpression	* p != ' '		987707	1		!=			
ANR	987775	UnaryOperationExpression	* p		987707	0					
ANR	987776	UnaryOperator	*		987707	0					
ANR	987777	Identifier	p		987707	1					
ANR	987778	PrimaryExpression	' '		987707	1					
ANR	987779	PostIncDecOperationExpression	p ++	4823:50:135438:135440	987707	2	True				
ANR	987780	Identifier	p		987707	0					
ANR	987781	IncDec	++		987707	1					
ANR	987782	CompoundStatement		10:55:347:347	987707	3					
ANR	987783	ExpressionStatement	* p = '\\0'	4824:2:135448:135457	987707	3	True				
ANR	987784	AssignmentExpression	* p = '\\0'		987707	0		=			
ANR	987785	UnaryOperationExpression	* p		987707	0					
ANR	987786	UnaryOperator	*		987707	0					
ANR	987787	Identifier	p		987707	1					
ANR	987788	PrimaryExpression	'\\0'		987707	1					
ANR	987789	ExpressionStatement	"r_cons_printf ( ""{\\""string\\"":"" )"	4827:1:135464:135494	987707	3	True				
ANR	987790	CallExpression	"r_cons_printf ( ""{\\""string\\"":"" )"		987707	0					
ANR	987791	Callee	r_cons_printf		987707	0					
ANR	987792	Identifier	r_cons_printf		987707	0					
ANR	987793	ArgumentList	"""{\\""string\\"":"""		987707	1					
ANR	987794	Argument	"""{\\""string\\"":"""		987707	0					
ANR	987795	PrimaryExpression	"""{\\""string\\"":"""		987707	0					
ANR	987796	ExpressionStatement	"str = r_str_utf16_encode ( block , len )"	4828:1:135497:135534	987707	4	True				
ANR	987797	AssignmentExpression	"str = r_str_utf16_encode ( block , len )"		987707	0		=			
ANR	987798	Identifier	str		987707	0					
ANR	987799	CallExpression	"r_str_utf16_encode ( block , len )"		987707	1					
ANR	987800	Callee	r_str_utf16_encode		987707	0					
ANR	987801	Identifier	r_str_utf16_encode		987707	0					
ANR	987802	ArgumentList	block		987707	1					
ANR	987803	Argument	block		987707	0					
ANR	987804	Identifier	block		987707	0					
ANR	987805	Argument	len		987707	1					
ANR	987806	Identifier	len		987707	0					
ANR	987807	ExpressionStatement	"r_cons_printf ( ""\\""%s\\"""" , str )"	4829:1:135537:135566	987707	5	True				
ANR	987808	CallExpression	"r_cons_printf ( ""\\""%s\\"""" , str )"		987707	0					
ANR	987809	Callee	r_cons_printf		987707	0					
ANR	987810	Identifier	r_cons_printf		987707	0					
ANR	987811	ArgumentList	"""\\""%s\\"""""		987707	1					
ANR	987812	Argument	"""\\""%s\\"""""		987707	0					
ANR	987813	PrimaryExpression	"""\\""%s\\"""""		987707	0					
ANR	987814	Argument	str		987707	1					
ANR	987815	Identifier	str		987707	0					
ANR	987816	Statement	r_cons_printf	4830:1:135569:135581	987707	6	True				
ANR	987817	Statement	(	4830:15:135583:135583	987707	7	True				
ANR	987818	Statement	""",\\""offset\\"":%"""	4830:16:135584:135598	987707	8	True				
ANR	987819	Statement	PFMT64u	4830:31:135599:135605	987707	9	True				
ANR	987820	Statement	","	4830:38:135606:135606	987707	10	True				
ANR	987821	Statement	core	4830:40:135608:135611	987707	11	True				
ANR	987822	Statement	->	4830:44:135612:135613	987707	12	True				
ANR	987823	Statement	offset	4830:46:135614:135619	987707	13	True				
ANR	987824	Statement	)	4830:52:135620:135620	987707	14	True				
ANR	987825	ExpressionStatement		4830:53:135621:135621	987707	15	True				
ANR	987826	ExpressionStatement	"r_cons_printf ( "",\\""section\\"":\\""%s\\"""" , section_name )"	4831:1:135624:135675	987707	16	True				
ANR	987827	CallExpression	"r_cons_printf ( "",\\""section\\"":\\""%s\\"""" , section_name )"		987707	0					
ANR	987828	Callee	r_cons_printf		987707	0					
ANR	987829	Identifier	r_cons_printf		987707	0					
ANR	987830	ArgumentList	""",\\""section\\"":\\""%s\\"""""		987707	1					
ANR	987831	Argument	""",\\""section\\"":\\""%s\\"""""		987707	0					
ANR	987832	PrimaryExpression	""",\\""section\\"":\\""%s\\"""""		987707	0					
ANR	987833	Argument	section_name		987707	1					
ANR	987834	Identifier	section_name		987707	0					
ANR	987835	ExpressionStatement	"r_cons_printf ( "",\\""length\\"":%d"" , len )"	4832:1:135678:135715	987707	17	True				
ANR	987836	CallExpression	"r_cons_printf ( "",\\""length\\"":%d"" , len )"		987707	0					
ANR	987837	Callee	r_cons_printf		987707	0					
ANR	987838	Identifier	r_cons_printf		987707	0					
ANR	987839	ArgumentList	""",\\""length\\"":%d"""		987707	1					
ANR	987840	Argument	""",\\""length\\"":%d"""		987707	0					
ANR	987841	PrimaryExpression	""",\\""length\\"":%d"""		987707	0					
ANR	987842	Argument	len		987707	1					
ANR	987843	Identifier	len		987707	0					
ANR	987844	IfStatement	if ( ! type )		987707	18					
ANR	987845	Condition	! type	4833:5:135722:135726	987707	0	True				
ANR	987846	UnaryOperationExpression	! type		987707	0					
ANR	987847	UnaryOperator	!		987707	0					
ANR	987848	Identifier	type		987707	1					
ANR	987849	CompoundStatement		20:12:633:633	987707	1					
ANR	987850	SwitchStatement	"switch ( get_string_type ( core -> block , len ) )"		987707	0					
ANR	987851	Condition	"get_string_type ( core -> block , len )"	4834:10:135741:135774	987707	0	True				
ANR	987852	CallExpression	"get_string_type ( core -> block , len )"		987707	0					
ANR	987853	Callee	get_string_type		987707	0					
ANR	987854	Identifier	get_string_type		987707	0					
ANR	987855	ArgumentList	core -> block		987707	1					
ANR	987856	Argument	core -> block		987707	0					
ANR	987857	PtrMemberAccess	core -> block		987707	0					
ANR	987858	Identifier	core		987707	0					
ANR	987859	Identifier	block		987707	1					
ANR	987860	Argument	len		987707	1					
ANR	987861	Identifier	len		987707	0					
ANR	987862	CompoundStatement		21:46:681:681	987707	1					
ANR	987863	Label	case 'w' :	4835:2:135781:135789	987707	0	True				
ANR	987864	ExpressionStatement	"type = ""wide"""	4835:12:135791:135804	987707	1	True				
ANR	987865	AssignmentExpression	"type = ""wide"""		987707	0		=			
ANR	987866	Identifier	type		987707	0					
ANR	987867	PrimaryExpression	"""wide"""		987707	1					
ANR	987868	BreakStatement	break ;	4835:27:135806:135811	987707	2	True				
ANR	987869	Label	case 'a' :	4836:2:135815:135823	987707	3	True				
ANR	987870	ExpressionStatement	"type = ""ascii"""	4836:12:135825:135839	987707	4	True				
ANR	987871	AssignmentExpression	"type = ""ascii"""		987707	0		=			
ANR	987872	Identifier	type		987707	0					
ANR	987873	PrimaryExpression	"""ascii"""		987707	1					
ANR	987874	BreakStatement	break ;	4836:28:135841:135846	987707	5	True				
ANR	987875	Label	case 'u' :	4837:2:135850:135858	987707	6	True				
ANR	987876	ExpressionStatement	"type = ""utf"""	4837:12:135860:135872	987707	7	True				
ANR	987877	AssignmentExpression	"type = ""utf"""		987707	0		=			
ANR	987878	Identifier	type		987707	0					
ANR	987879	PrimaryExpression	"""utf"""		987707	1					
ANR	987880	BreakStatement	break ;	4837:26:135874:135879	987707	8	True				
ANR	987881	Label	default :	4838:2:135883:135890	987707	9	True				
ANR	987882	Identifier	default		987707	0					
ANR	987883	ExpressionStatement	"type = ""unknown"""	4838:11:135892:135908	987707	10	True				
ANR	987884	AssignmentExpression	"type = ""unknown"""		987707	0		=			
ANR	987885	Identifier	type		987707	0					
ANR	987886	PrimaryExpression	"""unknown"""		987707	1					
ANR	987887	BreakStatement	break ;	4838:29:135910:135915	987707	11	True				
ANR	987888	ExpressionStatement	"r_cons_printf ( "",\\""type\\"":\\""%s\\""}"" , type )"	4841:1:135925:135966	987707	19	True				
ANR	987889	CallExpression	"r_cons_printf ( "",\\""type\\"":\\""%s\\""}"" , type )"		987707	0					
ANR	987890	Callee	r_cons_printf		987707	0					
ANR	987891	Identifier	r_cons_printf		987707	0					
ANR	987892	ArgumentList	""",\\""type\\"":\\""%s\\""}"""		987707	1					
ANR	987893	Argument	""",\\""type\\"":\\""%s\\""}"""		987707	0					
ANR	987894	PrimaryExpression	""",\\""type\\"":\\""%s\\""}"""		987707	0					
ANR	987895	Argument	type		987707	1					
ANR	987896	Identifier	type		987707	0					
ANR	987897	ExpressionStatement	free ( str )	4842:1:135969:135979	987707	20	True				
ANR	987898	CallExpression	free ( str )		987707	0					
ANR	987899	Callee	free		987707	0					
ANR	987900	Identifier	free		987707	0					
ANR	987901	ArgumentList	str		987707	1					
ANR	987902	Argument	str		987707	0					
ANR	987903	Identifier	str		987707	0					
ANR	987904	ReturnType	static void		987707	1					
ANR	987905	Identifier	print_json_string		987707	2					
ANR	987906	ParameterList	"RCore * core , const char * block , int len , const char * type"		987707	3					
ANR	987907	Parameter	RCore * core	4814:30:135036:135046	987707	0	True				
ANR	987908	ParameterType	RCore *		987707	0					
ANR	987909	Identifier	core		987707	1					
ANR	987910	Parameter	const char * block	4814:43:135049:135065	987707	1	True				
ANR	987911	ParameterType	const char *		987707	0					
ANR	987912	Identifier	block		987707	1					
ANR	987913	Parameter	int len	4814:62:135068:135074	987707	2	True				
ANR	987914	ParameterType	int		987707	0					
ANR	987915	Identifier	len		987707	1					
ANR	987916	Parameter	const char * type	4814:71:135077:135092	987707	3	True				
ANR	987917	ParameterType	const char *		987707	0					
ANR	987918	Identifier	type		987707	1					
ANR	987919	CFGEntryNode	ENTRY		987707		True				
ANR	987920	CFGExitNode	EXIT		987707		True				
ANR	987921	Symbol	r_core_get_section_name		987707						
ANR	987922	Symbol	core -> block		987707						
ANR	987923	Symbol	section_name		987707						
ANR	987924	Symbol	* core		987707						
ANR	987925	Symbol	core -> offset		987707						
ANR	987926	Symbol	type		987707						
ANR	987927	Symbol	r_str_utf16_encode		987707						
ANR	987928	Symbol	str		987707						
ANR	987929	Symbol	p		987707						
ANR	987930	Symbol	core		987707						
ANR	987931	Symbol	strlen		987707						
ANR	987932	Symbol	get_string_type		987707						
ANR	987933	Symbol	len		987707						
ANR	987934	Symbol	r_str_trim_ro		987707						
ANR	987935	Symbol	block		987707						
ANR	987936	Symbol	* p		987707						
ANR	987937	Function	cmd_print	4845:0:135984:200204							
ANR	987938	FunctionDef	"cmd_print (void * data , const char * input)"		987937	0					
ANR	987939	CompoundStatement		4845:52:136036:200204	987937	0					
ANR	987940	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	4846:1:136039:136067	987937	0	True				
ANR	987941	IdentifierDecl	* core = ( RCore * ) data		987937	0					
ANR	987942	IdentifierDeclType	RCore *		987937	0					
ANR	987943	Identifier	core		987937	1					
ANR	987944	AssignmentExpression	* core = ( RCore * ) data		987937	2		=			
ANR	987945	Identifier	core		987937	0					
ANR	987946	CastExpression	( RCore * ) data		987937	1					
ANR	987947	CastTarget	RCore *		987937	0					
ANR	987948	Identifier	data		987937	1					
ANR	987949	IdentifierDeclStatement	"int i , l , len , ret ;"	4847:1:136070:136088	987937	1	True				
ANR	987950	IdentifierDecl	i		987937	0					
ANR	987951	IdentifierDeclType	int		987937	0					
ANR	987952	Identifier	i		987937	1					
ANR	987953	IdentifierDecl	l		987937	1					
ANR	987954	IdentifierDeclType	int		987937	0					
ANR	987955	Identifier	l		987937	1					
ANR	987956	IdentifierDecl	len		987937	2					
ANR	987957	IdentifierDeclType	int		987937	0					
ANR	987958	Identifier	len		987937	1					
ANR	987959	IdentifierDecl	ret		987937	3					
ANR	987960	IdentifierDeclType	int		987937	0					
ANR	987961	Identifier	ret		987937	1					
ANR	987962	IdentifierDeclStatement	ut8 * block ;	4848:1:136091:136101	987937	2	True				
ANR	987963	IdentifierDecl	* block		987937	0					
ANR	987964	IdentifierDeclType	ut8 *		987937	0					
ANR	987965	Identifier	block		987937	1					
ANR	987966	IdentifierDeclStatement	ut32 tbs = core -> blocksize ;	4849:1:136104:136130	987937	3	True				
ANR	987967	IdentifierDecl	tbs = core -> blocksize		987937	0					
ANR	987968	IdentifierDeclType	ut32		987937	0					
ANR	987969	Identifier	tbs		987937	1					
ANR	987970	AssignmentExpression	tbs = core -> blocksize		987937	2		=			
ANR	987971	Identifier	tbs		987937	0					
ANR	987972	PtrMemberAccess	core -> blocksize		987937	1					
ANR	987973	Identifier	core		987937	0					
ANR	987974	Identifier	blocksize		987937	1					
ANR	987975	IdentifierDeclStatement	"ut64 n , off , from , to , at , ate , piece ;"	4850:1:136133:136170	987937	4	True				
ANR	987976	IdentifierDecl	n		987937	0					
ANR	987977	IdentifierDeclType	ut64		987937	0					
ANR	987978	Identifier	n		987937	1					
ANR	987979	IdentifierDecl	off		987937	1					
ANR	987980	IdentifierDeclType	ut64		987937	0					
ANR	987981	Identifier	off		987937	1					
ANR	987982	IdentifierDecl	from		987937	2					
ANR	987983	IdentifierDeclType	ut64		987937	0					
ANR	987984	Identifier	from		987937	1					
ANR	987985	IdentifierDecl	to		987937	3					
ANR	987986	IdentifierDeclType	ut64		987937	0					
ANR	987987	Identifier	to		987937	1					
ANR	987988	IdentifierDecl	at		987937	4					
ANR	987989	IdentifierDeclType	ut64		987937	0					
ANR	987990	Identifier	at		987937	1					
ANR	987991	IdentifierDecl	ate		987937	5					
ANR	987992	IdentifierDeclType	ut64		987937	0					
ANR	987993	Identifier	ate		987937	1					
ANR	987994	IdentifierDecl	piece		987937	6					
ANR	987995	IdentifierDeclType	ut64		987937	0					
ANR	987996	Identifier	piece		987937	1					
ANR	987997	IdentifierDeclStatement	ut64 tmpseek = UT64_MAX ;	4851:1:136173:136196	987937	5	True				
ANR	987998	IdentifierDecl	tmpseek = UT64_MAX		987937	0					
ANR	987999	IdentifierDeclType	ut64		987937	0					
ANR	988000	Identifier	tmpseek		987937	1					
ANR	988001	AssignmentExpression	tmpseek = UT64_MAX		987937	2		=			
ANR	988002	Identifier	UT64_MAX		987937	0					
ANR	988003	Identifier	UT64_MAX		987937	1					
ANR	988004	IdentifierDeclStatement	const int addrbytes = core -> io -> addrbytes ;	4852:1:136199:136240	987937	6	True				
ANR	988005	IdentifierDecl	addrbytes = core -> io -> addrbytes		987937	0					
ANR	988006	IdentifierDeclType	const int		987937	0					
ANR	988007	Identifier	addrbytes		987937	1					
ANR	988008	AssignmentExpression	addrbytes = core -> io -> addrbytes		987937	2		=			
ANR	988009	Identifier	addrbytes		987937	0					
ANR	988010	PtrMemberAccess	core -> io -> addrbytes		987937	1					
ANR	988011	PtrMemberAccess	core -> io		987937	0					
ANR	988012	Identifier	core		987937	0					
ANR	988013	Identifier	io		987937	1					
ANR	988014	Identifier	addrbytes		987937	1					
ANR	988015	ExpressionStatement	i = l = len = ret = 0	4853:1:136243:136264	987937	7	True				
ANR	988016	AssignmentExpression	i = l = len = ret = 0		987937	0		=			
ANR	988017	Identifier	i		987937	0					
ANR	988018	AssignmentExpression	l = len = ret = 0		987937	1		=			
ANR	988019	Identifier	l		987937	0					
ANR	988020	AssignmentExpression	len = ret = 0		987937	1		=			
ANR	988021	Identifier	len		987937	0					
ANR	988022	AssignmentExpression	ret = 0		987937	1		=			
ANR	988023	Identifier	ret		987937	0					
ANR	988024	PrimaryExpression	0		987937	1					
ANR	988025	ExpressionStatement	n = off = from = to = at = ate = piece = 0	4854:1:136267:136309	987937	8	True				
ANR	988026	AssignmentExpression	n = off = from = to = at = ate = piece = 0		987937	0		=			
ANR	988027	Identifier	n		987937	0					
ANR	988028	AssignmentExpression	off = from = to = at = ate = piece = 0		987937	1		=			
ANR	988029	Identifier	off		987937	0					
ANR	988030	AssignmentExpression	from = to = at = ate = piece = 0		987937	1		=			
ANR	988031	Identifier	from		987937	0					
ANR	988032	AssignmentExpression	to = at = ate = piece = 0		987937	1		=			
ANR	988033	Identifier	to		987937	0					
ANR	988034	AssignmentExpression	at = ate = piece = 0		987937	1		=			
ANR	988035	Identifier	at		987937	0					
ANR	988036	AssignmentExpression	ate = piece = 0		987937	1		=			
ANR	988037	Identifier	ate		987937	0					
ANR	988038	AssignmentExpression	piece = 0		987937	1		=			
ANR	988039	Identifier	piece		987937	0					
ANR	988040	PrimaryExpression	0		987937	1					
ANR	988041	IdentifierDeclStatement	PJ * pj = NULL ;	4855:1:136312:136325	987937	9	True				
ANR	988042	IdentifierDecl	* pj = NULL		987937	0					
ANR	988043	IdentifierDeclType	PJ *		987937	0					
ANR	988044	Identifier	pj		987937	1					
ANR	988045	AssignmentExpression	* pj = NULL		987937	2		=			
ANR	988046	Identifier	NULL		987937	0					
ANR	988047	Identifier	NULL		987937	1					
ANR	988048	ExpressionStatement	r_print_init_rowoffsets ( core -> print )	4857:1:136329:136366	987937	10	True				
ANR	988049	CallExpression	r_print_init_rowoffsets ( core -> print )		987937	0					
ANR	988050	Callee	r_print_init_rowoffsets		987937	0					
ANR	988051	Identifier	r_print_init_rowoffsets		987937	0					
ANR	988052	ArgumentList	core -> print		987937	1					
ANR	988053	Argument	core -> print		987937	0					
ANR	988054	PtrMemberAccess	core -> print		987937	0					
ANR	988055	Identifier	core		987937	0					
ANR	988056	Identifier	print		987937	1					
ANR	988057	ExpressionStatement	off = UT64_MAX	4858:1:136369:136383	987937	11	True				
ANR	988058	AssignmentExpression	off = UT64_MAX		987937	0		=			
ANR	988059	Identifier	off		987937	0					
ANR	988060	Identifier	UT64_MAX		987937	1					
ANR	988061	ExpressionStatement	l = len = core -> blocksize	4859:1:136386:136411	987937	12	True				
ANR	988062	AssignmentExpression	l = len = core -> blocksize		987937	0		=			
ANR	988063	Identifier	l		987937	0					
ANR	988064	AssignmentExpression	len = core -> blocksize		987937	1		=			
ANR	988065	Identifier	len		987937	0					
ANR	988066	PtrMemberAccess	core -> blocksize		987937	1					
ANR	988067	Identifier	core		987937	0					
ANR	988068	Identifier	blocksize		987937	1					
ANR	988069	IfStatement	if ( input [ 0 ] && input [ 1 ] )		987937	13					
ANR	988070	Condition	input [ 0 ] && input [ 1 ]	4860:5:136418:136437	987937	0	True				
ANR	988071	AndExpression	input [ 0 ] && input [ 1 ]		987937	0		&&			
ANR	988072	ArrayIndexing	input [ 0 ]		987937	0					
ANR	988073	Identifier	input		987937	0					
ANR	988074	PrimaryExpression	0		987937	1					
ANR	988075	ArrayIndexing	input [ 1 ]		987937	1					
ANR	988076	Identifier	input		987937	0					
ANR	988077	PrimaryExpression	1		987937	1					
ANR	988078	CompoundStatement		18:2:444:496	987937	1					
ANR	988079	IdentifierDeclStatement	int idx = ( input [ 0 ] == 'h' ) ? 2 : 1 ;	4861:2:136444:136477	987937	0	True				
ANR	988080	IdentifierDecl	idx = ( input [ 0 ] == 'h' ) ? 2 : 1		987937	0					
ANR	988081	IdentifierDeclType	int		987937	0					
ANR	988082	Identifier	idx		987937	1					
ANR	988083	AssignmentExpression	idx = ( input [ 0 ] == 'h' ) ? 2 : 1		987937	2		=			
ANR	988084	Identifier	idx		987937	0					
ANR	988085	ConditionalExpression	( input [ 0 ] == 'h' ) ? 2 : 1		987937	1					
ANR	988086	Condition	input [ 0 ] == 'h'		987937	0					
ANR	988087	EqualityExpression	input [ 0 ] == 'h'		987937	0		==			
ANR	988088	ArrayIndexing	input [ 0 ]		987937	0					
ANR	988089	Identifier	input		987937	0					
ANR	988090	PrimaryExpression	0		987937	1					
ANR	988091	PrimaryExpression	'h'		987937	1					
ANR	988092	PrimaryExpression	2		987937	1					
ANR	988093	PrimaryExpression	1		987937	2					
ANR	988094	IdentifierDeclStatement	"const char * p = off ? strchr ( input + idx , ' ' ) : NULL ;"	4862:2:136481:136533	987937	1	True				
ANR	988095	IdentifierDecl	"* p = off ? strchr ( input + idx , ' ' ) : NULL"		987937	0					
ANR	988096	IdentifierDeclType	const char *		987937	0					
ANR	988097	Identifier	p		987937	1					
ANR	988098	AssignmentExpression	"* p = off ? strchr ( input + idx , ' ' ) : NULL"		987937	2		=			
ANR	988099	Identifier	p		987937	0					
ANR	988100	ConditionalExpression	"off ? strchr ( input + idx , ' ' ) : NULL"		987937	1					
ANR	988101	Condition	off		987937	0					
ANR	988102	Identifier	off		987937	0					
ANR	988103	CallExpression	"strchr ( input + idx , ' ' )"		987937	1					
ANR	988104	Callee	strchr		987937	0					
ANR	988105	Identifier	strchr		987937	0					
ANR	988106	ArgumentList	input + idx		987937	1					
ANR	988107	Argument	input + idx		987937	0					
ANR	988108	AdditiveExpression	input + idx		987937	0		+			
ANR	988109	Identifier	input		987937	0					
ANR	988110	Identifier	idx		987937	1					
ANR	988111	Argument	' '		987937	1					
ANR	988112	PrimaryExpression	' '		987937	0					
ANR	988113	Identifier	NULL		987937	2					
ANR	988114	IfStatement	if ( p )		987937	2					
ANR	988115	Condition	p	4863:6:136541:136541	987937	0	True				
ANR	988116	Identifier	p		987937	0					
ANR	988117	CompoundStatement		19:9:507:507	987937	1					
ANR	988118	ExpressionStatement	"l = ( int ) r_num_math ( core -> num , p + 1 )"	4864:3:136549:136588	987937	0	True				
ANR	988119	AssignmentExpression	"l = ( int ) r_num_math ( core -> num , p + 1 )"		987937	0		=			
ANR	988120	Identifier	l		987937	0					
ANR	988121	CastExpression	"( int ) r_num_math ( core -> num , p + 1 )"		987937	1					
ANR	988122	CastTarget	int		987937	0					
ANR	988123	CallExpression	"r_num_math ( core -> num , p + 1 )"		987937	1					
ANR	988124	Callee	r_num_math		987937	0					
ANR	988125	Identifier	r_num_math		987937	0					
ANR	988126	ArgumentList	core -> num		987937	1					
ANR	988127	Argument	core -> num		987937	0					
ANR	988128	PtrMemberAccess	core -> num		987937	0					
ANR	988129	Identifier	core		987937	0					
ANR	988130	Identifier	num		987937	1					
ANR	988131	Argument	p + 1		987937	1					
ANR	988132	AdditiveExpression	p + 1		987937	0		+			
ANR	988133	Identifier	p		987937	0					
ANR	988134	PrimaryExpression	1		987937	1					
ANR	988135	IfStatement	if ( input [ 0 ] != 'd' && input [ 0 ] != 'D' && input [ 0 ] != 'm' && input [ 0 ] != 'a' && input [ 0 ] != 'f' && input [ 0 ] != 'i' && input [ 0 ] != 'I' && input [ 0 ] != 'o' )		987937	1					
ANR	988136	Condition	input [ 0 ] != 'd' && input [ 0 ] != 'D' && input [ 0 ] != 'm' && input [ 0 ] != 'a' && input [ 0 ] != 'f' && input [ 0 ] != 'i' && input [ 0 ] != 'I' && input [ 0 ] != 'o'	4866:7:136660:136815	987937	0	True				
ANR	988137	AndExpression	input [ 0 ] != 'd' && input [ 0 ] != 'D' && input [ 0 ] != 'm' && input [ 0 ] != 'a' && input [ 0 ] != 'f' && input [ 0 ] != 'i' && input [ 0 ] != 'I' && input [ 0 ] != 'o'		987937	0		&&			
ANR	988138	EqualityExpression	input [ 0 ] != 'd'		987937	0		!=			
ANR	988139	ArrayIndexing	input [ 0 ]		987937	0					
ANR	988140	Identifier	input		987937	0					
ANR	988141	PrimaryExpression	0		987937	1					
ANR	988142	PrimaryExpression	'd'		987937	1					
ANR	988143	AndExpression	input [ 0 ] != 'D' && input [ 0 ] != 'm' && input [ 0 ] != 'a' && input [ 0 ] != 'f' && input [ 0 ] != 'i' && input [ 0 ] != 'I' && input [ 0 ] != 'o'		987937	1		&&			
ANR	988144	EqualityExpression	input [ 0 ] != 'D'		987937	0		!=			
ANR	988145	ArrayIndexing	input [ 0 ]		987937	0					
ANR	988146	Identifier	input		987937	0					
ANR	988147	PrimaryExpression	0		987937	1					
ANR	988148	PrimaryExpression	'D'		987937	1					
ANR	988149	AndExpression	input [ 0 ] != 'm' && input [ 0 ] != 'a' && input [ 0 ] != 'f' && input [ 0 ] != 'i' && input [ 0 ] != 'I' && input [ 0 ] != 'o'		987937	1		&&			
ANR	988150	EqualityExpression	input [ 0 ] != 'm'		987937	0		!=			
ANR	988151	ArrayIndexing	input [ 0 ]		987937	0					
ANR	988152	Identifier	input		987937	0					
ANR	988153	PrimaryExpression	0		987937	1					
ANR	988154	PrimaryExpression	'm'		987937	1					
ANR	988155	AndExpression	input [ 0 ] != 'a' && input [ 0 ] != 'f' && input [ 0 ] != 'i' && input [ 0 ] != 'I' && input [ 0 ] != 'o'		987937	1		&&			
ANR	988156	EqualityExpression	input [ 0 ] != 'a'		987937	0		!=			
ANR	988157	ArrayIndexing	input [ 0 ]		987937	0					
ANR	988158	Identifier	input		987937	0					
ANR	988159	PrimaryExpression	0		987937	1					
ANR	988160	PrimaryExpression	'a'		987937	1					
ANR	988161	AndExpression	input [ 0 ] != 'f' && input [ 0 ] != 'i' && input [ 0 ] != 'I' && input [ 0 ] != 'o'		987937	1		&&			
ANR	988162	EqualityExpression	input [ 0 ] != 'f'		987937	0		!=			
ANR	988163	ArrayIndexing	input [ 0 ]		987937	0					
ANR	988164	Identifier	input		987937	0					
ANR	988165	PrimaryExpression	0		987937	1					
ANR	988166	PrimaryExpression	'f'		987937	1					
ANR	988167	AndExpression	input [ 0 ] != 'i' && input [ 0 ] != 'I' && input [ 0 ] != 'o'		987937	1		&&			
ANR	988168	EqualityExpression	input [ 0 ] != 'i'		987937	0		!=			
ANR	988169	ArrayIndexing	input [ 0 ]		987937	0					
ANR	988170	Identifier	input		987937	0					
ANR	988171	PrimaryExpression	0		987937	1					
ANR	988172	PrimaryExpression	'i'		987937	1					
ANR	988173	AndExpression	input [ 0 ] != 'I' && input [ 0 ] != 'o'		987937	1		&&			
ANR	988174	EqualityExpression	input [ 0 ] != 'I'		987937	0		!=			
ANR	988175	ArrayIndexing	input [ 0 ]		987937	0					
ANR	988176	Identifier	input		987937	0					
ANR	988177	PrimaryExpression	0		987937	1					
ANR	988178	PrimaryExpression	'I'		987937	1					
ANR	988179	EqualityExpression	input [ 0 ] != 'o'		987937	1		!=			
ANR	988180	ArrayIndexing	input [ 0 ]		987937	0					
ANR	988181	Identifier	input		987937	0					
ANR	988182	PrimaryExpression	0		987937	1					
ANR	988183	PrimaryExpression	'o'		987937	1					
ANR	988184	CompoundStatement		24:40:781:781	987937	1					
ANR	988185	IfStatement	if ( l < 0 )		987937	0					
ANR	988186	Condition	l < 0	4869:8:136828:136832	987937	0	True				
ANR	988187	RelationalExpression	l < 0		987937	0		<			
ANR	988188	Identifier	l		987937	0					
ANR	988189	PrimaryExpression	0		987937	1					
ANR	988190	CompoundStatement		25:15:798:798	987937	1					
ANR	988191	ExpressionStatement	off = core -> offset + l	4870:5:136842:136864	987937	0	True				
ANR	988192	AssignmentExpression	off = core -> offset + l		987937	0		=			
ANR	988193	Identifier	off		987937	0					
ANR	988194	AdditiveExpression	core -> offset + l		987937	1		+			
ANR	988195	PtrMemberAccess	core -> offset		987937	0					
ANR	988196	Identifier	core		987937	0					
ANR	988197	Identifier	offset		987937	1					
ANR	988198	Identifier	l		987937	1					
ANR	988199	ExpressionStatement	len = l = - l	4871:5:136871:136883	987937	1	True				
ANR	988200	AssignmentExpression	len = l = - l		987937	0		=			
ANR	988201	Identifier	len		987937	0					
ANR	988202	AssignmentExpression	l = - l		987937	1		=			
ANR	988203	Identifier	l		987937	0					
ANR	988204	UnaryOperationExpression	- l		987937	1					
ANR	988205	UnaryOperator	-		987937	0					
ANR	988206	Identifier	l		987937	1					
ANR	988207	ExpressionStatement	tmpseek = core -> offset	4872:5:136890:136912	987937	2	True				
ANR	988208	AssignmentExpression	tmpseek = core -> offset		987937	0		=			
ANR	988209	Identifier	tmpseek		987937	0					
ANR	988210	PtrMemberAccess	core -> offset		987937	1					
ANR	988211	Identifier	core		987937	0					
ANR	988212	Identifier	offset		987937	1					
ANR	988213	ElseStatement	else		987937	0					
ANR	988214	CompoundStatement		29:11:888:888	987937	0					
ANR	988215	ExpressionStatement	len = l	4874:5:136932:136939	987937	0	True				
ANR	988216	AssignmentExpression	len = l		987937	0		=			
ANR	988217	Identifier	len		987937	0					
ANR	988218	Identifier	l		987937	1					
ANR	988219	IfStatement	if ( l > core -> blocksize )		987937	1					
ANR	988220	Condition	l > core -> blocksize	4875:9:136950:136968	987937	0	True				
ANR	988221	RelationalExpression	l > core -> blocksize		987937	0		>			
ANR	988222	Identifier	l		987937	0					
ANR	988223	PtrMemberAccess	core -> blocksize		987937	1					
ANR	988224	Identifier	core		987937	0					
ANR	988225	Identifier	blocksize		987937	1					
ANR	988226	CompoundStatement		31:30:934:934	987937	1					
ANR	988227	IfStatement	"if ( ! r_core_block_size ( core , l ) )"		987937	0					
ANR	988228	Condition	"! r_core_block_size ( core , l )"	4876:10:136983:137010	987937	0	True				
ANR	988229	UnaryOperationExpression	"! r_core_block_size ( core , l )"		987937	0					
ANR	988230	UnaryOperator	!		987937	0					
ANR	988231	CallExpression	"r_core_block_size ( core , l )"		987937	1					
ANR	988232	Callee	r_core_block_size		987937	0					
ANR	988233	Identifier	r_core_block_size		987937	0					
ANR	988234	ArgumentList	core		987937	1					
ANR	988235	Argument	core		987937	0					
ANR	988236	Identifier	core		987937	0					
ANR	988237	Argument	l		987937	1					
ANR	988238	Identifier	l		987937	0					
ANR	988239	CompoundStatement		32:40:976:976	987937	1					
ANR	988240	GotoStatement	goto beach ;	4877:7:137022:137032	987937	0	True				
ANR	988241	Identifier	beach		987937	0					
ANR	988242	ElseStatement	else		987937	0					
ANR	988243	CompoundStatement		37:10:1028:1028	987937	0					
ANR	988244	ExpressionStatement	len = l	4882:4:137071:137078	987937	0	True				
ANR	988245	AssignmentExpression	len = l		987937	0		=			
ANR	988246	Identifier	len		987937	0					
ANR	988247	Identifier	l		987937	1					
ANR	988248	IfStatement	if ( len > core -> blocksize )		987937	14					
ANR	988249	Condition	len > core -> blocksize	4887:5:137098:137118	987937	0	True				
ANR	988250	RelationalExpression	len > core -> blocksize		987937	0		>			
ANR	988251	Identifier	len		987937	0					
ANR	988252	PtrMemberAccess	core -> blocksize		987937	1					
ANR	988253	Identifier	core		987937	0					
ANR	988254	Identifier	blocksize		987937	1					
ANR	988255	CompoundStatement		43:28:1084:1084	987937	1					
ANR	988256	ExpressionStatement	len = core -> blocksize	4888:2:137125:137146	987937	0	True				
ANR	988257	AssignmentExpression	len = core -> blocksize		987937	0		=			
ANR	988258	Identifier	len		987937	0					
ANR	988259	PtrMemberAccess	core -> blocksize		987937	1					
ANR	988260	Identifier	core		987937	0					
ANR	988261	Identifier	blocksize		987937	1					
ANR	988262	IfStatement	if ( input [ 0 ] != 'd' && input [ 0 ] != 'm' && input [ 0 ] != 'a' && input [ 0 ] != 'f' && input [ 0 ] != 'i' )		987937	15					
ANR	988263	Condition	input [ 0 ] != 'd' && input [ 0 ] != 'm' && input [ 0 ] != 'a' && input [ 0 ] != 'f' && input [ 0 ] != 'i'	4891:5:137157:137247	987937	0	True				
ANR	988264	AndExpression	input [ 0 ] != 'd' && input [ 0 ] != 'm' && input [ 0 ] != 'a' && input [ 0 ] != 'f' && input [ 0 ] != 'i'		987937	0		&&			
ANR	988265	EqualityExpression	input [ 0 ] != 'd'		987937	0		!=			
ANR	988266	ArrayIndexing	input [ 0 ]		987937	0					
ANR	988267	Identifier	input		987937	0					
ANR	988268	PrimaryExpression	0		987937	1					
ANR	988269	PrimaryExpression	'd'		987937	1					
ANR	988270	AndExpression	input [ 0 ] != 'm' && input [ 0 ] != 'a' && input [ 0 ] != 'f' && input [ 0 ] != 'i'		987937	1		&&			
ANR	988271	EqualityExpression	input [ 0 ] != 'm'		987937	0		!=			
ANR	988272	ArrayIndexing	input [ 0 ]		987937	0					
ANR	988273	Identifier	input		987937	0					
ANR	988274	PrimaryExpression	0		987937	1					
ANR	988275	PrimaryExpression	'm'		987937	1					
ANR	988276	AndExpression	input [ 0 ] != 'a' && input [ 0 ] != 'f' && input [ 0 ] != 'i'		987937	1		&&			
ANR	988277	EqualityExpression	input [ 0 ] != 'a'		987937	0		!=			
ANR	988278	ArrayIndexing	input [ 0 ]		987937	0					
ANR	988279	Identifier	input		987937	0					
ANR	988280	PrimaryExpression	0		987937	1					
ANR	988281	PrimaryExpression	'a'		987937	1					
ANR	988282	AndExpression	input [ 0 ] != 'f' && input [ 0 ] != 'i'		987937	1		&&			
ANR	988283	EqualityExpression	input [ 0 ] != 'f'		987937	0		!=			
ANR	988284	ArrayIndexing	input [ 0 ]		987937	0					
ANR	988285	Identifier	input		987937	0					
ANR	988286	PrimaryExpression	0		987937	1					
ANR	988287	PrimaryExpression	'f'		987937	1					
ANR	988288	EqualityExpression	input [ 0 ] != 'i'		987937	1		!=			
ANR	988289	ArrayIndexing	input [ 0 ]		987937	0					
ANR	988290	Identifier	input		987937	0					
ANR	988291	PrimaryExpression	0		987937	1					
ANR	988292	PrimaryExpression	'i'		987937	1					
ANR	988293	CompoundStatement		47:98:1213:1213	987937	1					
ANR	988294	ExpressionStatement	n = core -> blocksize_max	4892:2:137254:137277	987937	0	True				
ANR	988295	AssignmentExpression	n = core -> blocksize_max		987937	0		=			
ANR	988296	Identifier	n		987937	0					
ANR	988297	PtrMemberAccess	core -> blocksize_max		987937	1					
ANR	988298	Identifier	core		987937	0					
ANR	988299	Identifier	blocksize_max		987937	1					
ANR	988300	ExpressionStatement	i = ( int ) n	4893:2:137281:137292	987937	1	True				
ANR	988301	AssignmentExpression	i = ( int ) n		987937	0		=			
ANR	988302	Identifier	i		987937	0					
ANR	988303	CastExpression	( int ) n		987937	1					
ANR	988304	CastTarget	int		987937	0					
ANR	988305	Identifier	n		987937	1					
ANR	988306	IfStatement	if ( i != n )		987937	2					
ANR	988307	Condition	i != n	4894:6:137300:137305	987937	0	True				
ANR	988308	EqualityExpression	i != n		987937	0		!=			
ANR	988309	Identifier	i		987937	0					
ANR	988310	Identifier	n		987937	1					
ANR	988311	CompoundStatement		50:14:1271:1271	987937	1					
ANR	988312	ExpressionStatement	i = 0	4895:3:137313:137318	987937	0	True				
ANR	988313	AssignmentExpression	i = 0		987937	0		=			
ANR	988314	Identifier	i		987937	0					
ANR	988315	PrimaryExpression	0		987937	1					
ANR	988316	IfStatement	if ( i && l > i )		987937	3					
ANR	988317	Condition	i && l > i	4897:6:137330:137339	987937	0	True				
ANR	988318	AndExpression	i && l > i		987937	0		&&			
ANR	988319	Identifier	i		987937	0					
ANR	988320	RelationalExpression	l > i		987937	1		>			
ANR	988321	Identifier	l		987937	0					
ANR	988322	Identifier	i		987937	1					
ANR	988323	CompoundStatement		53:18:1305:1305	987937	1					
ANR	988324	Statement	eprintf	4898:3:137347:137353	987937	0	True				
ANR	988325	Statement	(	4898:11:137355:137355	987937	1	True				
ANR	988326	Statement	"""This block size is too big (0x%"""	4898:12:137356:137388	987937	2	True				
ANR	988327	Statement	PFMT64x	4898:45:137389:137395	987937	3	True				
ANR	988328	Statement	""" < 0x%x). Did you mean 'p%c @ %s' instead?\\n"""	4899:4:137401:137446	987937	4	True				
ANR	988329	Statement	","	4899:50:137447:137447	987937	5	True				
ANR	988330	Statement	n	4900:4:137453:137453	987937	6	True				
ANR	988331	Statement	","	4900:5:137454:137454	987937	7	True				
ANR	988332	Statement	l	4900:7:137456:137456	987937	8	True				
ANR	988333	Statement	","	4900:8:137457:137457	987937	9	True				
ANR	988334	Statement	*	4900:10:137459:137459	987937	10	True				
ANR	988335	Statement	input	4900:11:137460:137464	987937	11	True				
ANR	988336	Statement	","	4900:16:137465:137465	987937	12	True				
ANR	988337	Statement	input	4900:18:137467:137471	987937	13	True				
ANR	988338	Statement	+	4900:24:137473:137473	987937	14	True				
ANR	988339	Statement	2	4900:26:137475:137475	987937	15	True				
ANR	988340	Statement	)	4900:27:137476:137476	987937	16	True				
ANR	988341	ExpressionStatement		4900:28:137477:137477	987937	17	True				
ANR	988342	GotoStatement	goto beach ;	4901:3:137482:137492	987937	18	True				
ANR	988343	Identifier	beach		987937	0					
ANR	988344	IfStatement	if ( input [ 0 ] == 'x' || input [ 0 ] == 'D' )		987937	16					
ANR	988345	Condition	input [ 0 ] == 'x' || input [ 0 ] == 'D'	4904:5:137506:137539	987937	0	True				
ANR	988346	OrExpression	input [ 0 ] == 'x' || input [ 0 ] == 'D'		987937	0		||			
ANR	988347	EqualityExpression	input [ 0 ] == 'x'		987937	0		==			
ANR	988348	ArrayIndexing	input [ 0 ]		987937	0					
ANR	988349	Identifier	input		987937	0					
ANR	988350	PrimaryExpression	0		987937	1					
ANR	988351	PrimaryExpression	'x'		987937	1					
ANR	988352	EqualityExpression	input [ 0 ] == 'D'		987937	1		==			
ANR	988353	ArrayIndexing	input [ 0 ]		987937	0					
ANR	988354	Identifier	input		987937	0					
ANR	988355	PrimaryExpression	0		987937	1					
ANR	988356	PrimaryExpression	'D'		987937	1					
ANR	988357	CompoundStatement		60:41:1505:1505	987937	1					
ANR	988358	IfStatement	if ( l > 0 && tmpseek == UT64_MAX )		987937	0					
ANR	988359	Condition	l > 0 && tmpseek == UT64_MAX	4905:6:137550:137577	987937	0	True				
ANR	988360	AndExpression	l > 0 && tmpseek == UT64_MAX		987937	0		&&			
ANR	988361	RelationalExpression	l > 0		987937	0		>			
ANR	988362	Identifier	l		987937	0					
ANR	988363	PrimaryExpression	0		987937	1					
ANR	988364	EqualityExpression	tmpseek == UT64_MAX		987937	1		==			
ANR	988365	Identifier	tmpseek		987937	0					
ANR	988366	Identifier	UT64_MAX		987937	1					
ANR	988367	CompoundStatement		61:36:1543:1543	987937	1					
ANR	988368	IfStatement	"if ( ! r_core_block_size ( core , l ) )"		987937	0					
ANR	988369	Condition	"! r_core_block_size ( core , l )"	4906:7:137589:137616	987937	0	True				
ANR	988370	UnaryOperationExpression	"! r_core_block_size ( core , l )"		987937	0					
ANR	988371	UnaryOperator	!		987937	0					
ANR	988372	CallExpression	"r_core_block_size ( core , l )"		987937	1					
ANR	988373	Callee	r_core_block_size		987937	0					
ANR	988374	Identifier	r_core_block_size		987937	0					
ANR	988375	ArgumentList	core		987937	1					
ANR	988376	Argument	core		987937	0					
ANR	988377	Identifier	core		987937	0					
ANR	988378	Argument	l		987937	1					
ANR	988379	Identifier	l		987937	0					
ANR	988380	CompoundStatement		62:37:1582:1582	987937	1					
ANR	988381	ExpressionStatement	"eprintf ( ""This block size is too big. Did you mean 'p%c @ %s' instead?\\n"" , * input , input + 2 )"	4907:4:137625:137723	987937	0	True				
ANR	988382	CallExpression	"eprintf ( ""This block size is too big. Did you mean 'p%c @ %s' instead?\\n"" , * input , input + 2 )"		987937	0					
ANR	988383	Callee	eprintf		987937	0					
ANR	988384	Identifier	eprintf		987937	0					
ANR	988385	ArgumentList	"""This block size is too big. Did you mean 'p%c @ %s' instead?\\n"""		987937	1					
ANR	988386	Argument	"""This block size is too big. Did you mean 'p%c @ %s' instead?\\n"""		987937	0					
ANR	988387	PrimaryExpression	"""This block size is too big. Did you mean 'p%c @ %s' instead?\\n"""		987937	0					
ANR	988388	Argument	* input		987937	1					
ANR	988389	UnaryOperationExpression	* input		987937	0					
ANR	988390	UnaryOperator	*		987937	0					
ANR	988391	Identifier	input		987937	1					
ANR	988392	Argument	input + 2		987937	2					
ANR	988393	AdditiveExpression	input + 2		987937	0		+			
ANR	988394	Identifier	input		987937	0					
ANR	988395	PrimaryExpression	2		987937	1					
ANR	988396	GotoStatement	goto beach ;	4909:4:137729:137739	987937	1	True				
ANR	988397	Identifier	beach		987937	0					
ANR	988398	IfStatement	if ( input [ 0 ] && input [ 0 ] != 'z' && input [ 1 ] == 'f' && input [ 2 ] != '?' )		987937	17					
ANR	988399	Condition	input [ 0 ] && input [ 0 ] != 'z' && input [ 1 ] == 'f' && input [ 2 ] != '?'	4914:5:137759:137821	987937	0	True				
ANR	988400	AndExpression	input [ 0 ] && input [ 0 ] != 'z' && input [ 1 ] == 'f' && input [ 2 ] != '?'		987937	0		&&			
ANR	988401	ArrayIndexing	input [ 0 ]		987937	0					
ANR	988402	Identifier	input		987937	0					
ANR	988403	PrimaryExpression	0		987937	1					
ANR	988404	AndExpression	input [ 0 ] != 'z' && input [ 1 ] == 'f' && input [ 2 ] != '?'		987937	1		&&			
ANR	988405	EqualityExpression	input [ 0 ] != 'z'		987937	0		!=			
ANR	988406	ArrayIndexing	input [ 0 ]		987937	0					
ANR	988407	Identifier	input		987937	0					
ANR	988408	PrimaryExpression	0		987937	1					
ANR	988409	PrimaryExpression	'z'		987937	1					
ANR	988410	AndExpression	input [ 1 ] == 'f' && input [ 2 ] != '?'		987937	1		&&			
ANR	988411	EqualityExpression	input [ 1 ] == 'f'		987937	0		==			
ANR	988412	ArrayIndexing	input [ 1 ]		987937	0					
ANR	988413	Identifier	input		987937	0					
ANR	988414	PrimaryExpression	1		987937	1					
ANR	988415	PrimaryExpression	'f'		987937	1					
ANR	988416	EqualityExpression	input [ 2 ] != '?'		987937	1		!=			
ANR	988417	ArrayIndexing	input [ 2 ]		987937	0					
ANR	988418	Identifier	input		987937	0					
ANR	988419	PrimaryExpression	2		987937	1					
ANR	988420	PrimaryExpression	'?'		987937	1					
ANR	988421	CompoundStatement		71:2:1791:1857	987937	1					
ANR	988422	IdentifierDeclStatement	"RAnalFunction * f = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 ) ;"	4915:2:137828:137894	987937	0	True				
ANR	988423	IdentifierDecl	"* f = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		987937	0					
ANR	988424	IdentifierDeclType	RAnalFunction *		987937	0					
ANR	988425	Identifier	f		987937	1					
ANR	988426	AssignmentExpression	"* f = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		987937	2		=			
ANR	988427	Identifier	f		987937	0					
ANR	988428	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		987937	1					
ANR	988429	Callee	r_anal_get_fcn_in		987937	0					
ANR	988430	Identifier	r_anal_get_fcn_in		987937	0					
ANR	988431	ArgumentList	core -> anal		987937	1					
ANR	988432	Argument	core -> anal		987937	0					
ANR	988433	PtrMemberAccess	core -> anal		987937	0					
ANR	988434	Identifier	core		987937	0					
ANR	988435	Identifier	anal		987937	1					
ANR	988436	Argument	core -> offset		987937	1					
ANR	988437	PtrMemberAccess	core -> offset		987937	0					
ANR	988438	Identifier	core		987937	0					
ANR	988439	Identifier	offset		987937	1					
ANR	988440	Argument	0		987937	2					
ANR	988441	PrimaryExpression	0		987937	0					
ANR	988442	IfStatement	if ( f )		987937	1					
ANR	988443	Condition	f	4917:6:137949:137949	987937	0	True				
ANR	988444	Identifier	f		987937	0					
ANR	988445	CompoundStatement		73:9:1915:1915	987937	1					
ANR	988446	ExpressionStatement	len = r_anal_fcn_size ( f )	4918:3:137957:137982	987937	0	True				
ANR	988447	AssignmentExpression	len = r_anal_fcn_size ( f )		987937	0		=			
ANR	988448	Identifier	len		987937	0					
ANR	988449	CallExpression	r_anal_fcn_size ( f )		987937	1					
ANR	988450	Callee	r_anal_fcn_size		987937	0					
ANR	988451	Identifier	r_anal_fcn_size		987937	0					
ANR	988452	ArgumentList	f		987937	1					
ANR	988453	Argument	f		987937	0					
ANR	988454	Identifier	f		987937	0					
ANR	988455	IfStatement	if ( len > core -> blocksize )		987937	1					
ANR	988456	Condition	len > core -> blocksize	4919:7:137991:138011	987937	0	True				
ANR	988457	RelationalExpression	len > core -> blocksize		987937	0		>			
ANR	988458	Identifier	len		987937	0					
ANR	988459	PtrMemberAccess	core -> blocksize		987937	1					
ANR	988460	Identifier	core		987937	0					
ANR	988461	Identifier	blocksize		987937	1					
ANR	988462	CompoundStatement		75:30:1977:1977	987937	1					
ANR	988463	ExpressionStatement	len = core -> blocksize	4920:4:138020:138041	987937	0	True				
ANR	988464	AssignmentExpression	len = core -> blocksize		987937	0		=			
ANR	988465	Identifier	len		987937	0					
ANR	988466	PtrMemberAccess	core -> blocksize		987937	1					
ANR	988467	Identifier	core		987937	0					
ANR	988468	Identifier	blocksize		987937	1					
ANR	988469	ElseStatement	else		987937	0					
ANR	988470	CompoundStatement		78:9:2020:2020	987937	0					
ANR	988471	Statement	eprintf	4923:3:138062:138068	987937	0	True				
ANR	988472	Statement	(	4923:11:138070:138070	987937	1	True				
ANR	988473	Statement	"""p: Cannot find function at 0x%08"""	4923:12:138071:138104	987937	2	True				
ANR	988474	Statement	PFMT64x	4923:46:138105:138111	987937	3	True				
ANR	988475	Statement	"""\\n"""	4923:54:138113:138116	987937	4	True				
ANR	988476	Statement	","	4923:58:138117:138117	987937	5	True				
ANR	988477	Statement	core	4923:60:138119:138122	987937	6	True				
ANR	988478	Statement	->	4923:64:138123:138124	987937	7	True				
ANR	988479	Statement	offset	4923:66:138125:138130	987937	8	True				
ANR	988480	Statement	)	4923:72:138131:138131	987937	9	True				
ANR	988481	ExpressionStatement		4923:73:138132:138132	987937	10	True				
ANR	988482	ExpressionStatement	core -> num -> value = 0	4924:3:138137:138157	987937	11	True				
ANR	988483	AssignmentExpression	core -> num -> value = 0		987937	0		=			
ANR	988484	PtrMemberAccess	core -> num -> value		987937	0					
ANR	988485	PtrMemberAccess	core -> num		987937	0					
ANR	988486	Identifier	core		987937	0					
ANR	988487	Identifier	num		987937	1					
ANR	988488	Identifier	value		987937	1					
ANR	988489	PrimaryExpression	0		987937	1					
ANR	988490	GotoStatement	goto beach ;	4925:3:138162:138172	987937	12	True				
ANR	988491	Identifier	beach		987937	0					
ANR	988492	ExpressionStatement	core -> num -> value = len ? len : core -> blocksize	4929:1:138268:138314	987937	18	True				
ANR	988493	AssignmentExpression	core -> num -> value = len ? len : core -> blocksize		987937	0		=			
ANR	988494	PtrMemberAccess	core -> num -> value		987937	0					
ANR	988495	PtrMemberAccess	core -> num		987937	0					
ANR	988496	Identifier	core		987937	0					
ANR	988497	Identifier	num		987937	1					
ANR	988498	Identifier	value		987937	1					
ANR	988499	ConditionalExpression	len ? len : core -> blocksize		987937	1					
ANR	988500	Condition	len		987937	0					
ANR	988501	Identifier	len		987937	0					
ANR	988502	Identifier	len		987937	1					
ANR	988503	PtrMemberAccess	core -> blocksize		987937	2					
ANR	988504	Identifier	core		987937	0					
ANR	988505	Identifier	blocksize		987937	1					
ANR	988506	IfStatement	if ( off != UT64_MAX )		987937	19					
ANR	988507	Condition	off != UT64_MAX	4930:5:138321:138335	987937	0	True				
ANR	988508	EqualityExpression	off != UT64_MAX		987937	0		!=			
ANR	988509	Identifier	off		987937	0					
ANR	988510	Identifier	UT64_MAX		987937	1					
ANR	988511	CompoundStatement		86:22:2301:2301	987937	1					
ANR	988512	ExpressionStatement	"r_core_seek ( core , off , SEEK_SET )"	4931:2:138342:138375	987937	0	True				
ANR	988513	CallExpression	"r_core_seek ( core , off , SEEK_SET )"		987937	0					
ANR	988514	Callee	r_core_seek		987937	0					
ANR	988515	Identifier	r_core_seek		987937	0					
ANR	988516	ArgumentList	core		987937	1					
ANR	988517	Argument	core		987937	0					
ANR	988518	Identifier	core		987937	0					
ANR	988519	Argument	off		987937	1					
ANR	988520	Identifier	off		987937	0					
ANR	988521	Argument	SEEK_SET		987937	2					
ANR	988522	Identifier	SEEK_SET		987937	0					
ANR	988523	ExpressionStatement	r_core_block_read ( core )	4932:2:138379:138403	987937	1	True				
ANR	988524	CallExpression	r_core_block_read ( core )		987937	0					
ANR	988525	Callee	r_core_block_read		987937	0					
ANR	988526	Identifier	r_core_block_read		987937	0					
ANR	988527	ArgumentList	core		987937	1					
ANR	988528	Argument	core		987937	0					
ANR	988529	Identifier	core		987937	0					
ANR	988530	ExpressionStatement	block = core -> block	4935:1:138488:138507	987937	20	True				
ANR	988531	AssignmentExpression	block = core -> block		987937	0		=			
ANR	988532	Identifier	block		987937	0					
ANR	988533	PtrMemberAccess	core -> block		987937	1					
ANR	988534	Identifier	core		987937	0					
ANR	988535	Identifier	block		987937	1					
ANR	988536	SwitchStatement	switch ( * input )		987937	21					
ANR	988537	Condition	* input	4936:9:138518:138523	987937	0	True				
ANR	988538	UnaryOperationExpression	* input		987937	0					
ANR	988539	UnaryOperator	*		987937	0					
ANR	988540	Identifier	input		987937	1					
ANR	988541	CompoundStatement		92:17:2489:2489	987937	1					
ANR	988542	Label	case 'w' :	4937:1:138529:138537	987937	0	True				
ANR	988543	IfStatement	if ( input [ 1 ] == 'n' )		987937	1					
ANR	988544	Condition	input [ 1 ] == 'n'	4938:6:138553:138567	987937	0	True				
ANR	988545	EqualityExpression	input [ 1 ] == 'n'		987937	0		==			
ANR	988546	ArrayIndexing	input [ 1 ]		987937	0					
ANR	988547	Identifier	input		987937	0					
ANR	988548	PrimaryExpression	1		987937	1					
ANR	988549	PrimaryExpression	'n'		987937	1					
ANR	988550	CompoundStatement		94:23:2533:2533	987937	1					
ANR	988551	ExpressionStatement	cmd_print_pwn ( core )	4939:3:138575:138595	987937	0	True				
ANR	988552	CallExpression	cmd_print_pwn ( core )		987937	0					
ANR	988553	Callee	cmd_print_pwn		987937	0					
ANR	988554	Identifier	cmd_print_pwn		987937	0					
ANR	988555	ArgumentList	core		987937	1					
ANR	988556	Argument	core		987937	0					
ANR	988557	Identifier	core		987937	0					
ANR	988558	ElseStatement	else		987937	0					
ANR	988559	IfStatement	if ( input [ 1 ] == 'd' )		987937	0					
ANR	988560	Condition	input [ 1 ] == 'd'	4940:13:138610:138624	987937	0	True				
ANR	988561	EqualityExpression	input [ 1 ] == 'd'		987937	0		==			
ANR	988562	ArrayIndexing	input [ 1 ]		987937	0					
ANR	988563	Identifier	input		987937	0					
ANR	988564	PrimaryExpression	1		987937	1					
ANR	988565	PrimaryExpression	'd'		987937	1					
ANR	988566	CompoundStatement		96:30:2590:2590	987937	1					
ANR	988567	IfStatement	if ( ! r_sandbox_enable ( 0 ) )		987937	0					
ANR	988568	Condition	! r_sandbox_enable ( 0 )	4941:7:138636:138656	987937	0	True				
ANR	988569	UnaryOperationExpression	! r_sandbox_enable ( 0 )		987937	0					
ANR	988570	UnaryOperator	!		987937	0					
ANR	988571	CallExpression	r_sandbox_enable ( 0 )		987937	1					
ANR	988572	Callee	r_sandbox_enable		987937	0					
ANR	988573	Identifier	r_sandbox_enable		987937	0					
ANR	988574	ArgumentList	0		987937	1					
ANR	988575	Argument	0		987937	0					
ANR	988576	PrimaryExpression	0		987937	0					
ANR	988577	CompoundStatement		98:4:2628:2655	987937	1					
ANR	988578	IdentifierDeclStatement	char * cwd = r_sys_getdir ( ) ;	4942:4:138665:138692	987937	0	True				
ANR	988579	IdentifierDecl	* cwd = r_sys_getdir ( )		987937	0					
ANR	988580	IdentifierDeclType	char *		987937	0					
ANR	988581	Identifier	cwd		987937	1					
ANR	988582	AssignmentExpression	* cwd = r_sys_getdir ( )		987937	2		=			
ANR	988583	Identifier	cwd		987937	0					
ANR	988584	CallExpression	r_sys_getdir ( )		987937	1					
ANR	988585	Callee	r_sys_getdir		987937	0					
ANR	988586	Identifier	r_sys_getdir		987937	0					
ANR	988587	ArgumentList			987937	1					
ANR	988588	IfStatement	if ( cwd )		987937	1					
ANR	988589	Condition	cwd	4943:8:138702:138704	987937	0	True				
ANR	988590	Identifier	cwd		987937	0					
ANR	988591	CompoundStatement		99:13:2670:2670	987937	1					
ANR	988592	ExpressionStatement	r_cons_println ( cwd )	4944:5:138714:138734	987937	0	True				
ANR	988593	CallExpression	r_cons_println ( cwd )		987937	0					
ANR	988594	Callee	r_cons_println		987937	0					
ANR	988595	Identifier	r_cons_println		987937	0					
ANR	988596	ArgumentList	cwd		987937	1					
ANR	988597	Argument	cwd		987937	0					
ANR	988598	Identifier	cwd		987937	0					
ANR	988599	ExpressionStatement	free ( cwd )	4945:5:138741:138751	987937	1	True				
ANR	988600	CallExpression	free ( cwd )		987937	0					
ANR	988601	Callee	free		987937	0					
ANR	988602	Identifier	free		987937	0					
ANR	988603	ArgumentList	cwd		987937	1					
ANR	988604	Argument	cwd		987937	0					
ANR	988605	Identifier	cwd		987937	0					
ANR	988606	ElseStatement	else		987937	0					
ANR	988607	CompoundStatement		104:9:2736:2736	987937	0					
ANR	988608	ExpressionStatement	"r_cons_printf ( ""| pwd               display current working directory\\n"" )"	4949:3:138778:138851	987937	0	True				
ANR	988609	CallExpression	"r_cons_printf ( ""| pwd               display current working directory\\n"" )"		987937	0					
ANR	988610	Callee	r_cons_printf		987937	0					
ANR	988611	Identifier	r_cons_printf		987937	0					
ANR	988612	ArgumentList	"""| pwd               display current working directory\\n"""		987937	1					
ANR	988613	Argument	"""| pwd               display current working directory\\n"""		987937	0					
ANR	988614	PrimaryExpression	"""| pwd               display current working directory\\n"""		987937	0					
ANR	988615	BreakStatement	break ;	4951:2:138859:138864	987937	2	True				
ANR	988616	Label	case 'j' :	4952:1:138867:138875	987937	3	True				
ANR	988617	IfStatement	if ( input [ 1 ] == '?' )		987937	4					
ANR	988618	Condition	input [ 1 ] == '?'	4953:6:138891:138905	987937	0	True				
ANR	988619	EqualityExpression	input [ 1 ] == '?'		987937	0		==			
ANR	988620	ArrayIndexing	input [ 1 ]		987937	0					
ANR	988621	Identifier	input		987937	0					
ANR	988622	PrimaryExpression	1		987937	1					
ANR	988623	PrimaryExpression	'?'		987937	1					
ANR	988624	CompoundStatement		109:23:2871:2871	987937	1					
ANR	988625	ExpressionStatement	"r_core_cmd_help ( core , help_msg_pj )"	4954:3:138913:138948	987937	0	True				
ANR	988626	CallExpression	"r_core_cmd_help ( core , help_msg_pj )"		987937	0					
ANR	988627	Callee	r_core_cmd_help		987937	0					
ANR	988628	Identifier	r_core_cmd_help		987937	0					
ANR	988629	ArgumentList	core		987937	1					
ANR	988630	Argument	core		987937	0					
ANR	988631	Identifier	core		987937	0					
ANR	988632	Argument	help_msg_pj		987937	1					
ANR	988633	Identifier	help_msg_pj		987937	0					
ANR	988634	ElseStatement	else		987937	0					
ANR	988635	IfStatement	if ( input [ 1 ] == '.' )		987937	0					
ANR	988636	Condition	input [ 1 ] == '.'	4955:13:138963:138977	987937	0	True				
ANR	988637	EqualityExpression	input [ 1 ] == '.'		987937	0		==			
ANR	988638	ArrayIndexing	input [ 1 ]		987937	0					
ANR	988639	Identifier	input		987937	0					
ANR	988640	PrimaryExpression	1		987937	1					
ANR	988641	PrimaryExpression	'.'		987937	1					
ANR	988642	CompoundStatement		111:30:2943:2943	987937	1					
ANR	988643	IfStatement	if ( input [ 2 ] == '.' )		987937	0					
ANR	988644	Condition	input [ 2 ] == '.'	4956:7:138989:139003	987937	0	True				
ANR	988645	EqualityExpression	input [ 2 ] == '.'		987937	0		==			
ANR	988646	ArrayIndexing	input [ 2 ]		987937	0					
ANR	988647	Identifier	input		987937	0					
ANR	988648	PrimaryExpression	2		987937	1					
ANR	988649	PrimaryExpression	'.'		987937	1					
ANR	988650	CompoundStatement		113:4:2975:3015	987937	1					
ANR	988651	IdentifierDeclStatement	"ut8 * data = calloc ( core -> offset + 1 , 1 ) ;"	4957:4:139012:139052	987937	0	True				
ANR	988652	IdentifierDecl	"* data = calloc ( core -> offset + 1 , 1 )"		987937	0					
ANR	988653	IdentifierDeclType	ut8 *		987937	0					
ANR	988654	Identifier	data		987937	1					
ANR	988655	AssignmentExpression	"* data = calloc ( core -> offset + 1 , 1 )"		987937	2		=			
ANR	988656	Identifier	data		987937	0					
ANR	988657	CallExpression	"calloc ( core -> offset + 1 , 1 )"		987937	1					
ANR	988658	Callee	calloc		987937	0					
ANR	988659	Identifier	calloc		987937	0					
ANR	988660	ArgumentList	core -> offset + 1		987937	1					
ANR	988661	Argument	core -> offset + 1		987937	0					
ANR	988662	AdditiveExpression	core -> offset + 1		987937	0		+			
ANR	988663	PtrMemberAccess	core -> offset		987937	0					
ANR	988664	Identifier	core		987937	0					
ANR	988665	Identifier	offset		987937	1					
ANR	988666	PrimaryExpression	1		987937	1					
ANR	988667	Argument	1		987937	1					
ANR	988668	PrimaryExpression	1		987937	0					
ANR	988669	IfStatement	if ( data )		987937	1					
ANR	988670	Condition	data	4958:8:139062:139065	987937	0	True				
ANR	988671	Identifier	data		987937	0					
ANR	988672	CompoundStatement		117:5:3126:3190	987937	1					
ANR	988673	ExpressionStatement	data [ core -> offset ] = 0	4959:5:139075:139097	987937	0	True				
ANR	988674	AssignmentExpression	data [ core -> offset ] = 0		987937	0		=			
ANR	988675	ArrayIndexing	data [ core -> offset ]		987937	0					
ANR	988676	Identifier	data		987937	0					
ANR	988677	PtrMemberAccess	core -> offset		987937	1					
ANR	988678	Identifier	core		987937	0					
ANR	988679	Identifier	offset		987937	1					
ANR	988680	PrimaryExpression	0		987937	1					
ANR	988681	ExpressionStatement	"( void ) r_io_read_at ( core -> io , 0 , data , core -> offset )"	4960:5:139104:139156	987937	1	True				
ANR	988682	CastExpression	"( void ) r_io_read_at ( core -> io , 0 , data , core -> offset )"		987937	0					
ANR	988683	CastTarget	void		987937	0					
ANR	988684	CallExpression	"r_io_read_at ( core -> io , 0 , data , core -> offset )"		987937	1					
ANR	988685	Callee	r_io_read_at		987937	0					
ANR	988686	Identifier	r_io_read_at		987937	0					
ANR	988687	ArgumentList	core -> io		987937	1					
ANR	988688	Argument	core -> io		987937	0					
ANR	988689	PtrMemberAccess	core -> io		987937	0					
ANR	988690	Identifier	core		987937	0					
ANR	988691	Identifier	io		987937	1					
ANR	988692	Argument	0		987937	1					
ANR	988693	PrimaryExpression	0		987937	0					
ANR	988694	Argument	data		987937	2					
ANR	988695	Identifier	data		987937	0					
ANR	988696	Argument	core -> offset		987937	3					
ANR	988697	PtrMemberAccess	core -> offset		987937	0					
ANR	988698	Identifier	core		987937	0					
ANR	988699	Identifier	offset		987937	1					
ANR	988700	IdentifierDeclStatement	"char * res = r_print_json_path ( ( const char * ) data , core -> offset ) ;"	4961:5:139163:139227	987937	2	True				
ANR	988701	IdentifierDecl	"* res = r_print_json_path ( ( const char * ) data , core -> offset )"		987937	0					
ANR	988702	IdentifierDeclType	char *		987937	0					
ANR	988703	Identifier	res		987937	1					
ANR	988704	AssignmentExpression	"* res = r_print_json_path ( ( const char * ) data , core -> offset )"		987937	2		=			
ANR	988705	Identifier	res		987937	0					
ANR	988706	CallExpression	"r_print_json_path ( ( const char * ) data , core -> offset )"		987937	1					
ANR	988707	Callee	r_print_json_path		987937	0					
ANR	988708	Identifier	r_print_json_path		987937	0					
ANR	988709	ArgumentList	( const char * ) data		987937	1					
ANR	988710	Argument	( const char * ) data		987937	0					
ANR	988711	CastExpression	( const char * ) data		987937	0					
ANR	988712	CastTarget	const char *		987937	0					
ANR	988713	Identifier	data		987937	1					
ANR	988714	Argument	core -> offset		987937	1					
ANR	988715	PtrMemberAccess	core -> offset		987937	0					
ANR	988716	Identifier	core		987937	0					
ANR	988717	Identifier	offset		987937	1					
ANR	988718	IfStatement	if ( res )		987937	3					
ANR	988719	Condition	res	4962:9:139238:139240	987937	0	True				
ANR	988720	Identifier	res		987937	0					
ANR	988721	CompoundStatement		118:14:3206:3206	987937	1					
ANR	988722	ExpressionStatement	"eprintf ( ""-> res(%s)\\n"" , res )"	4963:6:139251:139280	987937	0	True				
ANR	988723	CallExpression	"eprintf ( ""-> res(%s)\\n"" , res )"		987937	0					
ANR	988724	Callee	eprintf		987937	0					
ANR	988725	Identifier	eprintf		987937	0					
ANR	988726	ArgumentList	"""-> res(%s)\\n"""		987937	1					
ANR	988727	Argument	"""-> res(%s)\\n"""		987937	0					
ANR	988728	PrimaryExpression	"""-> res(%s)\\n"""		987937	0					
ANR	988729	Argument	res		987937	1					
ANR	988730	Identifier	res		987937	0					
ANR	988731	ElseStatement	else		987937	0					
ANR	988732	CompoundStatement		126:11:3391:3391	987937	0					
ANR	988733	ExpressionStatement	"eprintf ( ""Cannot allocate %d\\n"" , ( int ) ( core -> offset ) )"	4971:5:139435:139488	987937	0	True				
ANR	988734	CallExpression	"eprintf ( ""Cannot allocate %d\\n"" , ( int ) ( core -> offset ) )"		987937	0					
ANR	988735	Callee	eprintf		987937	0					
ANR	988736	Identifier	eprintf		987937	0					
ANR	988737	ArgumentList	"""Cannot allocate %d\\n"""		987937	1					
ANR	988738	Argument	"""Cannot allocate %d\\n"""		987937	0					
ANR	988739	PrimaryExpression	"""Cannot allocate %d\\n"""		987937	0					
ANR	988740	Argument	( int ) ( core -> offset )		987937	1					
ANR	988741	CastExpression	( int ) ( core -> offset )		987937	0					
ANR	988742	CastTarget	int		987937	0					
ANR	988743	PtrMemberAccess	core -> offset		987937	1					
ANR	988744	Identifier	core		987937	0					
ANR	988745	Identifier	offset		987937	1					
ANR	988746	ElseStatement	else		987937	0					
ANR	988747	CompoundStatement		129:10:3469:3469	987937	0					
ANR	988748	Statement	r_core_cmdf	4974:4:139512:139522	987937	0	True				
ANR	988749	Statement	(	4974:16:139524:139524	987937	1	True				
ANR	988750	Statement	core	4974:17:139525:139528	987937	2	True				
ANR	988751	Statement	","	4974:21:139529:139529	987937	3	True				
ANR	988752	Statement	"""pj %"""	4974:23:139531:139536	987937	4	True				
ANR	988753	Statement	PFMT64u	4974:29:139537:139543	987937	5	True				
ANR	988754	Statement	""" @ 0"""	4974:36:139544:139549	987937	6	True				
ANR	988755	Statement	","	4974:42:139550:139550	987937	7	True				
ANR	988756	Statement	core	4974:44:139552:139555	987937	8	True				
ANR	988757	Statement	->	4974:48:139556:139557	987937	9	True				
ANR	988758	Statement	offset	4974:50:139558:139563	987937	10	True				
ANR	988759	Statement	)	4974:56:139564:139564	987937	11	True				
ANR	988760	ExpressionStatement		4974:57:139565:139565	987937	12	True				
ANR	988761	ElseStatement	else		987937	0					
ANR	988762	CompoundStatement		132:9:3544:3544	987937	0					
ANR	988763	IfStatement	"if ( core -> blocksize < 4 || ! memcmp ( core -> block , ""\\xff\\xff\\xff\\xff"" , 4 ) )"		987937	0					
ANR	988764	Condition	"core -> blocksize < 4 || ! memcmp ( core -> block , ""\\xff\\xff\\xff\\xff"" , 4 )"	4977:7:139590:139656	987937	0	True				
ANR	988765	OrExpression	"core -> blocksize < 4 || ! memcmp ( core -> block , ""\\xff\\xff\\xff\\xff"" , 4 )"		987937	0		||			
ANR	988766	RelationalExpression	core -> blocksize < 4		987937	0		<			
ANR	988767	PtrMemberAccess	core -> blocksize		987937	0					
ANR	988768	Identifier	core		987937	0					
ANR	988769	Identifier	blocksize		987937	1					
ANR	988770	PrimaryExpression	4		987937	1					
ANR	988771	UnaryOperationExpression	"! memcmp ( core -> block , ""\\xff\\xff\\xff\\xff"" , 4 )"		987937	1					
ANR	988772	UnaryOperator	!		987937	0					
ANR	988773	CallExpression	"memcmp ( core -> block , ""\\xff\\xff\\xff\\xff"" , 4 )"		987937	1					
ANR	988774	Callee	memcmp		987937	0					
ANR	988775	Identifier	memcmp		987937	0					
ANR	988776	ArgumentList	core -> block		987937	1					
ANR	988777	Argument	core -> block		987937	0					
ANR	988778	PtrMemberAccess	core -> block		987937	0					
ANR	988779	Identifier	core		987937	0					
ANR	988780	Identifier	block		987937	1					
ANR	988781	Argument	"""\\xff\\xff\\xff\\xff"""		987937	1					
ANR	988782	PrimaryExpression	"""\\xff\\xff\\xff\\xff"""		987937	0					
ANR	988783	Argument	4		987937	2					
ANR	988784	PrimaryExpression	4		987937	0					
ANR	988785	CompoundStatement		133:76:3622:3622	987937	1					
ANR	988786	ExpressionStatement	"eprintf ( ""Cannot read\\n"" )"	4978:4:139665:139690	987937	0	True				
ANR	988787	CallExpression	"eprintf ( ""Cannot read\\n"" )"		987937	0					
ANR	988788	Callee	eprintf		987937	0					
ANR	988789	Identifier	eprintf		987937	0					
ANR	988790	ArgumentList	"""Cannot read\\n"""		987937	1					
ANR	988791	Argument	"""Cannot read\\n"""		987937	0					
ANR	988792	PrimaryExpression	"""Cannot read\\n"""		987937	0					
ANR	988793	ElseStatement	else		987937	0					
ANR	988794	CompoundStatement		136:4:3671:3748	987937	0					
ANR	988795	IdentifierDeclStatement	"char * res = r_print_json_indent ( ( const char * ) core -> block , true , ""  "" , NULL ) ;"	4980:4:139708:139785	987937	0	True				
ANR	988796	IdentifierDecl	"* res = r_print_json_indent ( ( const char * ) core -> block , true , ""  "" , NULL )"		987937	0					
ANR	988797	IdentifierDeclType	char *		987937	0					
ANR	988798	Identifier	res		987937	1					
ANR	988799	AssignmentExpression	"* res = r_print_json_indent ( ( const char * ) core -> block , true , ""  "" , NULL )"		987937	2		=			
ANR	988800	Identifier	res		987937	0					
ANR	988801	CallExpression	"r_print_json_indent ( ( const char * ) core -> block , true , ""  "" , NULL )"		987937	1					
ANR	988802	Callee	r_print_json_indent		987937	0					
ANR	988803	Identifier	r_print_json_indent		987937	0					
ANR	988804	ArgumentList	( const char * ) core -> block		987937	1					
ANR	988805	Argument	( const char * ) core -> block		987937	0					
ANR	988806	CastExpression	( const char * ) core -> block		987937	0					
ANR	988807	CastTarget	const char *		987937	0					
ANR	988808	PtrMemberAccess	core -> block		987937	1					
ANR	988809	Identifier	core		987937	0					
ANR	988810	Identifier	block		987937	1					
ANR	988811	Argument	true		987937	1					
ANR	988812	Identifier	true		987937	0					
ANR	988813	Argument	"""  """		987937	2					
ANR	988814	PrimaryExpression	"""  """		987937	0					
ANR	988815	Argument	NULL		987937	3					
ANR	988816	Identifier	NULL		987937	0					
ANR	988817	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , res )"	4981:4:139791:139818	987937	1	True				
ANR	988818	CallExpression	"r_cons_printf ( ""%s\\n"" , res )"		987937	0					
ANR	988819	Callee	r_cons_printf		987937	0					
ANR	988820	Identifier	r_cons_printf		987937	0					
ANR	988821	ArgumentList	"""%s\\n"""		987937	1					
ANR	988822	Argument	"""%s\\n"""		987937	0					
ANR	988823	PrimaryExpression	"""%s\\n"""		987937	0					
ANR	988824	Argument	res		987937	1					
ANR	988825	Identifier	res		987937	0					
ANR	988826	ExpressionStatement	free ( res )	4982:4:139824:139834	987937	2	True				
ANR	988827	CallExpression	free ( res )		987937	0					
ANR	988828	Callee	free		987937	0					
ANR	988829	Identifier	free		987937	0					
ANR	988830	ArgumentList	res		987937	1					
ANR	988831	Argument	res		987937	0					
ANR	988832	Identifier	res		987937	0					
ANR	988833	BreakStatement	break ;	4985:2:139847:139852	987937	5	True				
ANR	988834	Label	case 'h' :	4986:1:139855:139863	987937	6	True				
ANR	988835	ExpressionStatement	"cmd_print_ph ( core , input + 1 )"	4987:2:139875:139905	987937	7	True				
ANR	988836	CallExpression	"cmd_print_ph ( core , input + 1 )"		987937	0					
ANR	988837	Callee	cmd_print_ph		987937	0					
ANR	988838	Identifier	cmd_print_ph		987937	0					
ANR	988839	ArgumentList	core		987937	1					
ANR	988840	Argument	core		987937	0					
ANR	988841	Identifier	core		987937	0					
ANR	988842	Argument	input + 1		987937	1					
ANR	988843	AdditiveExpression	input + 1		987937	0		+			
ANR	988844	Identifier	input		987937	0					
ANR	988845	PrimaryExpression	1		987937	1					
ANR	988846	BreakStatement	break ;	4988:2:139909:139914	987937	8	True				
ANR	988847	Label	case 'v' :	4989:1:139917:139925	987937	9	True				
ANR	988848	ExpressionStatement	"cmd_print_pv ( core , input + 1 , false )"	4990:2:139937:139974	987937	10	True				
ANR	988849	CallExpression	"cmd_print_pv ( core , input + 1 , false )"		987937	0					
ANR	988850	Callee	cmd_print_pv		987937	0					
ANR	988851	Identifier	cmd_print_pv		987937	0					
ANR	988852	ArgumentList	core		987937	1					
ANR	988853	Argument	core		987937	0					
ANR	988854	Identifier	core		987937	0					
ANR	988855	Argument	input + 1		987937	1					
ANR	988856	AdditiveExpression	input + 1		987937	0		+			
ANR	988857	Identifier	input		987937	0					
ANR	988858	PrimaryExpression	1		987937	1					
ANR	988859	Argument	false		987937	2					
ANR	988860	Identifier	false		987937	0					
ANR	988861	BreakStatement	break ;	4991:2:139978:139983	987937	11	True				
ANR	988862	Label	case 'V' :	4992:1:139986:139994	987937	12	True				
ANR	988863	ExpressionStatement	"cmd_print_pv ( core , input + 1 , true )"	4993:2:140006:140042	987937	13	True				
ANR	988864	CallExpression	"cmd_print_pv ( core , input + 1 , true )"		987937	0					
ANR	988865	Callee	cmd_print_pv		987937	0					
ANR	988866	Identifier	cmd_print_pv		987937	0					
ANR	988867	ArgumentList	core		987937	1					
ANR	988868	Argument	core		987937	0					
ANR	988869	Identifier	core		987937	0					
ANR	988870	Argument	input + 1		987937	1					
ANR	988871	AdditiveExpression	input + 1		987937	0		+			
ANR	988872	Identifier	input		987937	0					
ANR	988873	PrimaryExpression	1		987937	1					
ANR	988874	Argument	true		987937	2					
ANR	988875	Identifier	true		987937	0					
ANR	988876	BreakStatement	break ;	4994:2:140046:140051	987937	14	True				
ANR	988877	Label	case '-' :	4995:1:140054:140062	987937	15	True				
ANR	988878	ReturnStatement	"return cmd_print_blocks ( core , input + 1 ) ;"	4996:2:140074:140115	987937	16	True				
ANR	988879	CallExpression	"cmd_print_blocks ( core , input + 1 )"		987937	0					
ANR	988880	Callee	cmd_print_blocks		987937	0					
ANR	988881	Identifier	cmd_print_blocks		987937	0					
ANR	988882	ArgumentList	core		987937	1					
ANR	988883	Argument	core		987937	0					
ANR	988884	Identifier	core		987937	0					
ANR	988885	Argument	input + 1		987937	1					
ANR	988886	AdditiveExpression	input + 1		987937	0		+			
ANR	988887	Identifier	input		987937	0					
ANR	988888	PrimaryExpression	1		987937	1					
ANR	988889	Label	case '=' :	4997:1:140118:140126	987937	17	True				
ANR	988890	ExpressionStatement	"cmd_print_bars ( core , input )"	4998:2:140138:140166	987937	18	True				
ANR	988891	CallExpression	"cmd_print_bars ( core , input )"		987937	0					
ANR	988892	Callee	cmd_print_bars		987937	0					
ANR	988893	Identifier	cmd_print_bars		987937	0					
ANR	988894	ArgumentList	core		987937	1					
ANR	988895	Argument	core		987937	0					
ANR	988896	Identifier	core		987937	0					
ANR	988897	Argument	input		987937	1					
ANR	988898	Identifier	input		987937	0					
ANR	988899	BreakStatement	break ;	4999:2:140170:140175	987937	19	True				
ANR	988900	Label	case 'A' :	5000:1:140178:140186	987937	20	True				
ANR	988901	CompoundStatement		162:2:4365:4409	987937	21					
ANR	988902	IdentifierDeclStatement	"const ut64 saved_from = r_config_get_i ( core -> config , ""search.from"" ) , saved_to = r_config_get_i ( core -> config , ""search.to"" ) , saved_maxhits = r_config_get_i ( core -> config , ""search.maxhits"" ) ;"	5002:2:140201:140397	987937	0	True				
ANR	988903	IdentifierDecl	"saved_from = r_config_get_i ( core -> config , ""search.from"" )"		987937	0					
ANR	988904	IdentifierDeclType	const ut64		987937	0					
ANR	988905	Identifier	saved_from		987937	1					
ANR	988906	AssignmentExpression	"saved_from = r_config_get_i ( core -> config , ""search.from"" )"		987937	2		=			
ANR	988907	Identifier	saved_from		987937	0					
ANR	988908	CallExpression	"r_config_get_i ( core -> config , ""search.from"" )"		987937	1					
ANR	988909	Callee	r_config_get_i		987937	0					
ANR	988910	Identifier	r_config_get_i		987937	0					
ANR	988911	ArgumentList	core -> config		987937	1					
ANR	988912	Argument	core -> config		987937	0					
ANR	988913	PtrMemberAccess	core -> config		987937	0					
ANR	988914	Identifier	core		987937	0					
ANR	988915	Identifier	config		987937	1					
ANR	988916	Argument	"""search.from"""		987937	1					
ANR	988917	PrimaryExpression	"""search.from"""		987937	0					
ANR	988918	IdentifierDecl	"saved_to = r_config_get_i ( core -> config , ""search.to"" )"		987937	1					
ANR	988919	IdentifierDeclType	const ut64		987937	0					
ANR	988920	Identifier	saved_to		987937	1					
ANR	988921	AssignmentExpression	"saved_to = r_config_get_i ( core -> config , ""search.to"" )"		987937	2		=			
ANR	988922	Identifier	saved_to		987937	0					
ANR	988923	CallExpression	"r_config_get_i ( core -> config , ""search.to"" )"		987937	1					
ANR	988924	Callee	r_config_get_i		987937	0					
ANR	988925	Identifier	r_config_get_i		987937	0					
ANR	988926	ArgumentList	core -> config		987937	1					
ANR	988927	Argument	core -> config		987937	0					
ANR	988928	PtrMemberAccess	core -> config		987937	0					
ANR	988929	Identifier	core		987937	0					
ANR	988930	Identifier	config		987937	1					
ANR	988931	Argument	"""search.to"""		987937	1					
ANR	988932	PrimaryExpression	"""search.to"""		987937	0					
ANR	988933	IdentifierDecl	"saved_maxhits = r_config_get_i ( core -> config , ""search.maxhits"" )"		987937	2					
ANR	988934	IdentifierDeclType	const ut64		987937	0					
ANR	988935	Identifier	saved_maxhits		987937	1					
ANR	988936	AssignmentExpression	"saved_maxhits = r_config_get_i ( core -> config , ""search.maxhits"" )"		987937	2		=			
ANR	988937	Identifier	saved_maxhits		987937	0					
ANR	988938	CallExpression	"r_config_get_i ( core -> config , ""search.maxhits"" )"		987937	1					
ANR	988939	Callee	r_config_get_i		987937	0					
ANR	988940	Identifier	r_config_get_i		987937	0					
ANR	988941	ArgumentList	core -> config		987937	1					
ANR	988942	Argument	core -> config		987937	0					
ANR	988943	PtrMemberAccess	core -> config		987937	0					
ANR	988944	Identifier	core		987937	0					
ANR	988945	Identifier	config		987937	1					
ANR	988946	Argument	"""search.maxhits"""		987937	1					
ANR	988947	PrimaryExpression	"""search.maxhits"""		987937	0					
ANR	988948	IdentifierDeclStatement	"int want = r_num_math ( core -> num , input + 1 ) ;"	5006:2:140402:140446	987937	1	True				
ANR	988949	IdentifierDecl	"want = r_num_math ( core -> num , input + 1 )"		987937	0					
ANR	988950	IdentifierDeclType	int		987937	0					
ANR	988951	Identifier	want		987937	1					
ANR	988952	AssignmentExpression	"want = r_num_math ( core -> num , input + 1 )"		987937	2		=			
ANR	988953	Identifier	want		987937	0					
ANR	988954	CallExpression	"r_num_math ( core -> num , input + 1 )"		987937	1					
ANR	988955	Callee	r_num_math		987937	0					
ANR	988956	Identifier	r_num_math		987937	0					
ANR	988957	ArgumentList	core -> num		987937	1					
ANR	988958	Argument	core -> num		987937	0					
ANR	988959	PtrMemberAccess	core -> num		987937	0					
ANR	988960	Identifier	core		987937	0					
ANR	988961	Identifier	num		987937	1					
ANR	988962	Argument	input + 1		987937	1					
ANR	988963	AdditiveExpression	input + 1		987937	0		+			
ANR	988964	Identifier	input		987937	0					
ANR	988965	PrimaryExpression	1		987937	1					
ANR	988966	IfStatement	if ( input [ 1 ] == '?' )		987937	2					
ANR	988967	Condition	input [ 1 ] == '?'	5007:6:140454:140468	987937	0	True				
ANR	988968	EqualityExpression	input [ 1 ] == '?'		987937	0		==			
ANR	988969	ArrayIndexing	input [ 1 ]		987937	0					
ANR	988970	Identifier	input		987937	0					
ANR	988971	PrimaryExpression	1		987937	1					
ANR	988972	PrimaryExpression	'?'		987937	1					
ANR	988973	CompoundStatement		163:23:4434:4434	987937	1					
ANR	988974	ExpressionStatement	"r_core_cmd0 ( core , ""/A?"" )"	5008:3:140476:140501	987937	0	True				
ANR	988975	CallExpression	"r_core_cmd0 ( core , ""/A?"" )"		987937	0					
ANR	988976	Callee	r_core_cmd0		987937	0					
ANR	988977	Identifier	r_core_cmd0		987937	0					
ANR	988978	ArgumentList	core		987937	1					
ANR	988979	Argument	core		987937	0					
ANR	988980	Identifier	core		987937	0					
ANR	988981	Argument	"""/A?"""		987937	1					
ANR	988982	PrimaryExpression	"""/A?"""		987937	0					
ANR	988983	ElseStatement	else		987937	0					
ANR	988984	CompoundStatement		165:9:4475:4475	987937	0					
ANR	988985	ExpressionStatement	"r_config_set_i ( core -> config , ""search.maxhits"" , want )"	5010:3:140517:140570	987937	0	True				
ANR	988986	CallExpression	"r_config_set_i ( core -> config , ""search.maxhits"" , want )"		987937	0					
ANR	988987	Callee	r_config_set_i		987937	0					
ANR	988988	Identifier	r_config_set_i		987937	0					
ANR	988989	ArgumentList	core -> config		987937	1					
ANR	988990	Argument	core -> config		987937	0					
ANR	988991	PtrMemberAccess	core -> config		987937	0					
ANR	988992	Identifier	core		987937	0					
ANR	988993	Identifier	config		987937	1					
ANR	988994	Argument	"""search.maxhits"""		987937	1					
ANR	988995	PrimaryExpression	"""search.maxhits"""		987937	0					
ANR	988996	Argument	want		987937	2					
ANR	988997	Identifier	want		987937	0					
ANR	988998	ExpressionStatement	"r_config_set_i ( core -> config , ""search.from"" , core -> offset )"	5011:3:140575:140633	987937	1	True				
ANR	988999	CallExpression	"r_config_set_i ( core -> config , ""search.from"" , core -> offset )"		987937	0					
ANR	989000	Callee	r_config_set_i		987937	0					
ANR	989001	Identifier	r_config_set_i		987937	0					
ANR	989002	ArgumentList	core -> config		987937	1					
ANR	989003	Argument	core -> config		987937	0					
ANR	989004	PtrMemberAccess	core -> config		987937	0					
ANR	989005	Identifier	core		987937	0					
ANR	989006	Identifier	config		987937	1					
ANR	989007	Argument	"""search.from"""		987937	1					
ANR	989008	PrimaryExpression	"""search.from"""		987937	0					
ANR	989009	Argument	core -> offset		987937	2					
ANR	989010	PtrMemberAccess	core -> offset		987937	0					
ANR	989011	Identifier	core		987937	0					
ANR	989012	Identifier	offset		987937	1					
ANR	989013	ExpressionStatement	"r_config_set_i ( core -> config , ""search.to"" , core -> offset + core -> blocksize )"	5012:3:140638:140712	987937	2	True				
ANR	989014	CallExpression	"r_config_set_i ( core -> config , ""search.to"" , core -> offset + core -> blocksize )"		987937	0					
ANR	989015	Callee	r_config_set_i		987937	0					
ANR	989016	Identifier	r_config_set_i		987937	0					
ANR	989017	ArgumentList	core -> config		987937	1					
ANR	989018	Argument	core -> config		987937	0					
ANR	989019	PtrMemberAccess	core -> config		987937	0					
ANR	989020	Identifier	core		987937	0					
ANR	989021	Identifier	config		987937	1					
ANR	989022	Argument	"""search.to"""		987937	1					
ANR	989023	PrimaryExpression	"""search.to"""		987937	0					
ANR	989024	Argument	core -> offset + core -> blocksize		987937	2					
ANR	989025	AdditiveExpression	core -> offset + core -> blocksize		987937	0		+			
ANR	989026	PtrMemberAccess	core -> offset		987937	0					
ANR	989027	Identifier	core		987937	0					
ANR	989028	Identifier	offset		987937	1					
ANR	989029	PtrMemberAccess	core -> blocksize		987937	1					
ANR	989030	Identifier	core		987937	0					
ANR	989031	Identifier	blocksize		987937	1					
ANR	989032	ExpressionStatement	"r_core_cmd0 ( core , ""/A"" )"	5013:3:140717:140741	987937	3	True				
ANR	989033	CallExpression	"r_core_cmd0 ( core , ""/A"" )"		987937	0					
ANR	989034	Callee	r_core_cmd0		987937	0					
ANR	989035	Identifier	r_core_cmd0		987937	0					
ANR	989036	ArgumentList	core		987937	1					
ANR	989037	Argument	core		987937	0					
ANR	989038	Identifier	core		987937	0					
ANR	989039	Argument	"""/A"""		987937	1					
ANR	989040	PrimaryExpression	"""/A"""		987937	0					
ANR	989041	ExpressionStatement	"r_config_set_i ( core -> config , ""search.maxhits"" , saved_maxhits )"	5014:3:140746:140808	987937	4	True				
ANR	989042	CallExpression	"r_config_set_i ( core -> config , ""search.maxhits"" , saved_maxhits )"		987937	0					
ANR	989043	Callee	r_config_set_i		987937	0					
ANR	989044	Identifier	r_config_set_i		987937	0					
ANR	989045	ArgumentList	core -> config		987937	1					
ANR	989046	Argument	core -> config		987937	0					
ANR	989047	PtrMemberAccess	core -> config		987937	0					
ANR	989048	Identifier	core		987937	0					
ANR	989049	Identifier	config		987937	1					
ANR	989050	Argument	"""search.maxhits"""		987937	1					
ANR	989051	PrimaryExpression	"""search.maxhits"""		987937	0					
ANR	989052	Argument	saved_maxhits		987937	2					
ANR	989053	Identifier	saved_maxhits		987937	0					
ANR	989054	ExpressionStatement	"r_config_set_i ( core -> config , ""search.from"" , saved_from )"	5015:3:140813:140869	987937	5	True				
ANR	989055	CallExpression	"r_config_set_i ( core -> config , ""search.from"" , saved_from )"		987937	0					
ANR	989056	Callee	r_config_set_i		987937	0					
ANR	989057	Identifier	r_config_set_i		987937	0					
ANR	989058	ArgumentList	core -> config		987937	1					
ANR	989059	Argument	core -> config		987937	0					
ANR	989060	PtrMemberAccess	core -> config		987937	0					
ANR	989061	Identifier	core		987937	0					
ANR	989062	Identifier	config		987937	1					
ANR	989063	Argument	"""search.from"""		987937	1					
ANR	989064	PrimaryExpression	"""search.from"""		987937	0					
ANR	989065	Argument	saved_from		987937	2					
ANR	989066	Identifier	saved_from		987937	0					
ANR	989067	ExpressionStatement	"r_config_set_i ( core -> config , ""search.to"" , saved_to )"	5016:3:140874:140926	987937	6	True				
ANR	989068	CallExpression	"r_config_set_i ( core -> config , ""search.to"" , saved_to )"		987937	0					
ANR	989069	Callee	r_config_set_i		987937	0					
ANR	989070	Identifier	r_config_set_i		987937	0					
ANR	989071	ArgumentList	core -> config		987937	1					
ANR	989072	Argument	core -> config		987937	0					
ANR	989073	PtrMemberAccess	core -> config		987937	0					
ANR	989074	Identifier	core		987937	0					
ANR	989075	Identifier	config		987937	1					
ANR	989076	Argument	"""search.to"""		987937	1					
ANR	989077	PrimaryExpression	"""search.to"""		987937	0					
ANR	989078	Argument	saved_to		987937	2					
ANR	989079	Identifier	saved_to		987937	0					
ANR	989080	BreakStatement	break ;	5019:1:140936:140941	987937	22	True				
ANR	989081	Label	case 'a' :	5020:1:140944:140952	987937	23	True				
ANR	989082	CompoundStatement		178:2:4930:4952	987937	24					
ANR	989083	IdentifierDeclStatement	const char * arg = NULL ;	5022:2:140967:140989	987937	0	True				
ANR	989084	IdentifierDecl	* arg = NULL		987937	0					
ANR	989085	IdentifierDeclType	const char *		987937	0					
ANR	989086	Identifier	arg		987937	1					
ANR	989087	AssignmentExpression	* arg = NULL		987937	2		=			
ANR	989088	Identifier	NULL		987937	0					
ANR	989089	Identifier	NULL		987937	1					
ANR	989090	IfStatement	if ( input [ 1 ] != '\\0' )		987937	1					
ANR	989091	Condition	input [ 1 ] != '\\0'	5023:6:140997:141012	987937	0	True				
ANR	989092	EqualityExpression	input [ 1 ] != '\\0'		987937	0		!=			
ANR	989093	ArrayIndexing	input [ 1 ]		987937	0					
ANR	989094	Identifier	input		987937	0					
ANR	989095	PrimaryExpression	1		987937	1					
ANR	989096	PrimaryExpression	'\\0'		987937	1					
ANR	989097	CompoundStatement		179:24:4978:4978	987937	1					
ANR	989098	ExpressionStatement	arg = r_str_trim_ro ( input + 2 )	5024:3:141020:141051	987937	0	True				
ANR	989099	AssignmentExpression	arg = r_str_trim_ro ( input + 2 )		987937	0		=			
ANR	989100	Identifier	arg		987937	0					
ANR	989101	CallExpression	r_str_trim_ro ( input + 2 )		987937	1					
ANR	989102	Callee	r_str_trim_ro		987937	0					
ANR	989103	Identifier	r_str_trim_ro		987937	0					
ANR	989104	ArgumentList	input + 2		987937	1					
ANR	989105	Argument	input + 2		987937	0					
ANR	989106	AdditiveExpression	input + 2		987937	0		+			
ANR	989107	Identifier	input		987937	0					
ANR	989108	PrimaryExpression	2		987937	1					
ANR	989109	IfStatement	if ( input [ 1 ] == 'e' )		987937	2					
ANR	989110	Condition	input [ 1 ] == 'e'	5026:6:141063:141077	987937	0	True				
ANR	989111	EqualityExpression	input [ 1 ] == 'e'		987937	0		==			
ANR	989112	ArrayIndexing	input [ 1 ]		987937	0					
ANR	989113	Identifier	input		987937	0					
ANR	989114	PrimaryExpression	1		987937	1					
ANR	989115	PrimaryExpression	'e'		987937	1					
ANR	989116	CompoundStatement		182:23:5043:5043	987937	1					
ANR	989117	IfStatement	if ( input [ 2 ] == '?' )		987937	0					
ANR	989118	Condition	input [ 2 ] == '?'	5027:7:141098:141112	987937	0	True				
ANR	989119	EqualityExpression	input [ 2 ] == '?'		987937	0		==			
ANR	989120	ArrayIndexing	input [ 2 ]		987937	0					
ANR	989121	Identifier	input		987937	0					
ANR	989122	PrimaryExpression	2		987937	1					
ANR	989123	PrimaryExpression	'?'		987937	1					
ANR	989124	CompoundStatement		183:24:5078:5078	987937	1					
ANR	989125	ExpressionStatement	"r_cons_printf ( ""|Usage: pae [asm]       print ESIL expression of the given assembly expression\\n"" )"	5028:4:141121:141219	987937	0	True				
ANR	989126	CallExpression	"r_cons_printf ( ""|Usage: pae [asm]       print ESIL expression of the given assembly expression\\n"" )"		987937	0					
ANR	989127	Callee	r_cons_printf		987937	0					
ANR	989128	Identifier	r_cons_printf		987937	0					
ANR	989129	ArgumentList	"""|Usage: pae [asm]       print ESIL expression of the given assembly expression\\n"""		987937	1					
ANR	989130	Argument	"""|Usage: pae [asm]       print ESIL expression of the given assembly expression\\n"""		987937	0					
ANR	989131	PrimaryExpression	"""|Usage: pae [asm]       print ESIL expression of the given assembly expression\\n"""		987937	0					
ANR	989132	ElseStatement	else		987937	0					
ANR	989133	CompoundStatement		190:4:5309:5371	987937	0					
ANR	989134	IdentifierDeclStatement	int printed = 0 ;	5030:4:141237:141252	987937	0	True				
ANR	989135	IdentifierDecl	printed = 0		987937	0					
ANR	989136	IdentifierDeclType	int		987937	0					
ANR	989137	Identifier	printed		987937	1					
ANR	989138	AssignmentExpression	printed = 0		987937	2		=			
ANR	989139	Identifier	printed		987937	0					
ANR	989140	PrimaryExpression	0		987937	1					
ANR	989141	IdentifierDeclStatement	int bufsz ;	5031:4:141258:141267	987937	1	True				
ANR	989142	IdentifierDecl	bufsz		987937	0					
ANR	989143	IdentifierDeclType	int		987937	0					
ANR	989144	Identifier	bufsz		987937	1					
ANR	989145	IdentifierDeclStatement	RAnalOp aop = { 0 } ;	5032:4:141273:141290	987937	2	True				
ANR	989146	IdentifierDecl	aop = { 0 }		987937	0					
ANR	989147	IdentifierDeclType	RAnalOp		987937	0					
ANR	989148	Identifier	aop		987937	1					
ANR	989149	AssignmentExpression	aop = { 0 }		987937	2		=			
ANR	989150	Identifier	aop		987937	0					
ANR	989151	InitializerList	0		987937	1					
ANR	989152	PrimaryExpression	0		987937	0					
ANR	989153	ExpressionStatement	"r_asm_set_pc ( core -> assembler , core -> offset )"	5033:4:141296:141340	987937	3	True				
ANR	989154	CallExpression	"r_asm_set_pc ( core -> assembler , core -> offset )"		987937	0					
ANR	989155	Callee	r_asm_set_pc		987937	0					
ANR	989156	Identifier	r_asm_set_pc		987937	0					
ANR	989157	ArgumentList	core -> assembler		987937	1					
ANR	989158	Argument	core -> assembler		987937	0					
ANR	989159	PtrMemberAccess	core -> assembler		987937	0					
ANR	989160	Identifier	core		987937	0					
ANR	989161	Identifier	assembler		987937	1					
ANR	989162	Argument	core -> offset		987937	1					
ANR	989163	PtrMemberAccess	core -> offset		987937	0					
ANR	989164	Identifier	core		987937	0					
ANR	989165	Identifier	offset		987937	1					
ANR	989166	IdentifierDeclStatement	"RAsmCode * acode = r_asm_massemble ( core -> assembler , input + 2 ) ;"	5034:4:141346:141408	987937	4	True				
ANR	989167	IdentifierDecl	"* acode = r_asm_massemble ( core -> assembler , input + 2 )"		987937	0					
ANR	989168	IdentifierDeclType	RAsmCode *		987937	0					
ANR	989169	Identifier	acode		987937	1					
ANR	989170	AssignmentExpression	"* acode = r_asm_massemble ( core -> assembler , input + 2 )"		987937	2		=			
ANR	989171	Identifier	acode		987937	0					
ANR	989172	CallExpression	"r_asm_massemble ( core -> assembler , input + 2 )"		987937	1					
ANR	989173	Callee	r_asm_massemble		987937	0					
ANR	989174	Identifier	r_asm_massemble		987937	0					
ANR	989175	ArgumentList	core -> assembler		987937	1					
ANR	989176	Argument	core -> assembler		987937	0					
ANR	989177	PtrMemberAccess	core -> assembler		987937	0					
ANR	989178	Identifier	core		987937	0					
ANR	989179	Identifier	assembler		987937	1					
ANR	989180	Argument	input + 2		987937	1					
ANR	989181	AdditiveExpression	input + 2		987937	0		+			
ANR	989182	Identifier	input		987937	0					
ANR	989183	PrimaryExpression	2		987937	1					
ANR	989184	IfStatement	if ( acode )		987937	5					
ANR	989185	Condition	acode	5035:8:141418:141422	987937	0	True				
ANR	989186	Identifier	acode		987937	0					
ANR	989187	CompoundStatement		191:15:5388:5388	987937	1					
ANR	989188	ExpressionStatement	bufsz = acode -> len	5036:5:141432:141450	987937	0	True				
ANR	989189	AssignmentExpression	bufsz = acode -> len		987937	0		=			
ANR	989190	Identifier	bufsz		987937	0					
ANR	989191	PtrMemberAccess	acode -> len		987937	1					
ANR	989192	Identifier	acode		987937	0					
ANR	989193	Identifier	len		987937	1					
ANR	989194	WhileStatement	while ( printed < bufsz )		987937	1					
ANR	989195	Condition	printed < bufsz	5037:12:141464:141478	987937	0	True				
ANR	989196	RelationalExpression	printed < bufsz		987937	0		<			
ANR	989197	Identifier	printed		987937	0					
ANR	989198	Identifier	bufsz		987937	1					
ANR	989199	CompoundStatement		193:29:5444:5444	987937	1					
ANR	989200	ExpressionStatement	aop . size = 0	5038:6:141489:141501	987937	0	True				
ANR	989201	AssignmentExpression	aop . size = 0		987937	0		=			
ANR	989202	MemberAccess	aop . size		987937	0					
ANR	989203	Identifier	aop		987937	0					
ANR	989204	Identifier	size		987937	1					
ANR	989205	PrimaryExpression	0		987937	1					
ANR	989206	IfStatement	"if ( r_anal_op ( core -> anal , & aop , core -> offset , ( const ut8 * ) acode -> bytes + printed , bufsz - printed , R_ANAL_OP_MASK_ESIL ) > 0 )"		987937	1					
ANR	989207	Condition	"r_anal_op ( core -> anal , & aop , core -> offset , ( const ut8 * ) acode -> bytes + printed , bufsz - printed , R_ANAL_OP_MASK_ESIL ) > 0"	5039:10:141513:141644	987937	0	True				
ANR	989208	RelationalExpression	"r_anal_op ( core -> anal , & aop , core -> offset , ( const ut8 * ) acode -> bytes + printed , bufsz - printed , R_ANAL_OP_MASK_ESIL ) > 0"		987937	0		>			
ANR	989209	CallExpression	"r_anal_op ( core -> anal , & aop , core -> offset , ( const ut8 * ) acode -> bytes + printed , bufsz - printed , R_ANAL_OP_MASK_ESIL )"		987937	0					
ANR	989210	Callee	r_anal_op		987937	0					
ANR	989211	Identifier	r_anal_op		987937	0					
ANR	989212	ArgumentList	core -> anal		987937	1					
ANR	989213	Argument	core -> anal		987937	0					
ANR	989214	PtrMemberAccess	core -> anal		987937	0					
ANR	989215	Identifier	core		987937	0					
ANR	989216	Identifier	anal		987937	1					
ANR	989217	Argument	& aop		987937	1					
ANR	989218	UnaryOperationExpression	& aop		987937	0					
ANR	989219	UnaryOperator	&		987937	0					
ANR	989220	Identifier	aop		987937	1					
ANR	989221	Argument	core -> offset		987937	2					
ANR	989222	PtrMemberAccess	core -> offset		987937	0					
ANR	989223	Identifier	core		987937	0					
ANR	989224	Identifier	offset		987937	1					
ANR	989225	Argument	( const ut8 * ) acode -> bytes + printed		987937	3					
ANR	989226	AdditiveExpression	( const ut8 * ) acode -> bytes + printed		987937	0		+			
ANR	989227	CastExpression	( const ut8 * ) acode -> bytes		987937	0					
ANR	989228	CastTarget	const ut8 *		987937	0					
ANR	989229	PtrMemberAccess	acode -> bytes		987937	1					
ANR	989230	Identifier	acode		987937	0					
ANR	989231	Identifier	bytes		987937	1					
ANR	989232	Identifier	printed		987937	1					
ANR	989233	Argument	bufsz - printed		987937	4					
ANR	989234	AdditiveExpression	bufsz - printed		987937	0		-			
ANR	989235	Identifier	bufsz		987937	0					
ANR	989236	Identifier	printed		987937	1					
ANR	989237	Argument	R_ANAL_OP_MASK_ESIL		987937	5					
ANR	989238	Identifier	R_ANAL_OP_MASK_ESIL		987937	0					
ANR	989239	PrimaryExpression	0		987937	1					
ANR	989240	CompoundStatement		197:7:5619:5665	987937	1					
ANR	989241	IdentifierDeclStatement	const char * str = R_STRBUF_SAFEGET ( & aop . esil ) ;	5041:7:141656:141702	987937	0	True				
ANR	989242	IdentifierDecl	* str = R_STRBUF_SAFEGET ( & aop . esil )		987937	0					
ANR	989243	IdentifierDeclType	const char *		987937	0					
ANR	989244	Identifier	str		987937	1					
ANR	989245	AssignmentExpression	* str = R_STRBUF_SAFEGET ( & aop . esil )		987937	2		=			
ANR	989246	Identifier	str		987937	0					
ANR	989247	CallExpression	R_STRBUF_SAFEGET ( & aop . esil )		987937	1					
ANR	989248	Callee	R_STRBUF_SAFEGET		987937	0					
ANR	989249	Identifier	R_STRBUF_SAFEGET		987937	0					
ANR	989250	ArgumentList	& aop . esil		987937	1					
ANR	989251	Argument	& aop . esil		987937	0					
ANR	989252	UnaryOperationExpression	& aop . esil		987937	0					
ANR	989253	UnaryOperator	&		987937	0					
ANR	989254	MemberAccess	aop . esil		987937	1					
ANR	989255	Identifier	aop		987937	0					
ANR	989256	Identifier	esil		987937	1					
ANR	989257	ExpressionStatement	r_cons_println ( str )	5042:7:141711:141731	987937	1	True				
ANR	989258	CallExpression	r_cons_println ( str )		987937	0					
ANR	989259	Callee	r_cons_println		987937	0					
ANR	989260	Identifier	r_cons_println		987937	0					
ANR	989261	ArgumentList	str		987937	1					
ANR	989262	Argument	str		987937	0					
ANR	989263	Identifier	str		987937	0					
ANR	989264	ElseStatement	else		987937	0					
ANR	989265	CompoundStatement		199:13:5709:5709	987937	0					
ANR	989266	ExpressionStatement	"eprintf ( ""Cannot decode instruction\\n"" )"	5044:7:141755:141794	987937	0	True				
ANR	989267	CallExpression	"eprintf ( ""Cannot decode instruction\\n"" )"		987937	0					
ANR	989268	Callee	eprintf		987937	0					
ANR	989269	Identifier	eprintf		987937	0					
ANR	989270	ArgumentList	"""Cannot decode instruction\\n"""		987937	1					
ANR	989271	Argument	"""Cannot decode instruction\\n"""		987937	0					
ANR	989272	PrimaryExpression	"""Cannot decode instruction\\n"""		987937	0					
ANR	989273	BreakStatement	break ;	5045:7:141803:141808	987937	1	True				
ANR	989274	IfStatement	if ( aop . size < 1 )		987937	2					
ANR	989275	Condition	aop . size < 1	5047:10:141828:141839	987937	0	True				
ANR	989276	RelationalExpression	aop . size < 1		987937	0		<			
ANR	989277	MemberAccess	aop . size		987937	0					
ANR	989278	Identifier	aop		987937	0					
ANR	989279	Identifier	size		987937	1					
ANR	989280	PrimaryExpression	1		987937	1					
ANR	989281	CompoundStatement		203:24:5805:5805	987937	1					
ANR	989282	ExpressionStatement	"eprintf ( ""Cannot decode instruction\\n"" )"	5048:7:141851:141890	987937	0	True				
ANR	989283	CallExpression	"eprintf ( ""Cannot decode instruction\\n"" )"		987937	0					
ANR	989284	Callee	eprintf		987937	0					
ANR	989285	Identifier	eprintf		987937	0					
ANR	989286	ArgumentList	"""Cannot decode instruction\\n"""		987937	1					
ANR	989287	Argument	"""Cannot decode instruction\\n"""		987937	0					
ANR	989288	PrimaryExpression	"""Cannot decode instruction\\n"""		987937	0					
ANR	989289	BreakStatement	break ;	5049:7:141899:141904	987937	1	True				
ANR	989290	ExpressionStatement	printed += aop . size	5051:6:141920:141939	987937	3	True				
ANR	989291	AssignmentExpression	printed += aop . size		987937	0		+=			
ANR	989292	Identifier	printed		987937	0					
ANR	989293	MemberAccess	aop . size		987937	1					
ANR	989294	Identifier	aop		987937	0					
ANR	989295	Identifier	size		987937	1					
ANR	989296	ExpressionStatement	r_anal_op_fini ( & aop )	5052:6:141947:141968	987937	4	True				
ANR	989297	CallExpression	r_anal_op_fini ( & aop )		987937	0					
ANR	989298	Callee	r_anal_op_fini		987937	0					
ANR	989299	Identifier	r_anal_op_fini		987937	0					
ANR	989300	ArgumentList	& aop		987937	1					
ANR	989301	Argument	& aop		987937	0					
ANR	989302	UnaryOperationExpression	& aop		987937	0					
ANR	989303	UnaryOperator	&		987937	0					
ANR	989304	Identifier	aop		987937	1					
ANR	989305	ElseStatement	else		987937	0					
ANR	989306	IfStatement	if ( input [ 1 ] == 'D' )		987937	0					
ANR	989307	Condition	input [ 1 ] == 'D'	5056:13:142001:142015	987937	0	True				
ANR	989308	EqualityExpression	input [ 1 ] == 'D'		987937	0		==			
ANR	989309	ArrayIndexing	input [ 1 ]		987937	0					
ANR	989310	Identifier	input		987937	0					
ANR	989311	PrimaryExpression	1		987937	1					
ANR	989312	PrimaryExpression	'D'		987937	1					
ANR	989313	CompoundStatement		212:30:5981:5981	987937	1					
ANR	989314	IfStatement	if ( input [ 2 ] == '?' )		987937	0					
ANR	989315	Condition	input [ 2 ] == '?'	5057:7:142036:142050	987937	0	True				
ANR	989316	EqualityExpression	input [ 2 ] == '?'		987937	0		==			
ANR	989317	ArrayIndexing	input [ 2 ]		987937	0					
ANR	989318	Identifier	input		987937	0					
ANR	989319	PrimaryExpression	2		987937	1					
ANR	989320	PrimaryExpression	'?'		987937	1					
ANR	989321	CompoundStatement		213:24:6016:6016	987937	1					
ANR	989322	ExpressionStatement	"r_cons_printf ( ""|Usage: paD [hex]       print assembly expression from hexpairs and show hexpairs\\n"" )"	5058:4:142059:142160	987937	0	True				
ANR	989323	CallExpression	"r_cons_printf ( ""|Usage: paD [hex]       print assembly expression from hexpairs and show hexpairs\\n"" )"		987937	0					
ANR	989324	Callee	r_cons_printf		987937	0					
ANR	989325	Identifier	r_cons_printf		987937	0					
ANR	989326	ArgumentList	"""|Usage: paD [hex]       print assembly expression from hexpairs and show hexpairs\\n"""		987937	1					
ANR	989327	Argument	"""|Usage: paD [hex]       print assembly expression from hexpairs and show hexpairs\\n"""		987937	0					
ANR	989328	PrimaryExpression	"""|Usage: paD [hex]       print assembly expression from hexpairs and show hexpairs\\n"""		987937	0					
ANR	989329	ElseStatement	else		987937	0					
ANR	989330	CompoundStatement		215:10:6135:6135	987937	0					
ANR	989331	ExpressionStatement	"r_core_cmdf ( core , ""pdi@x:%s"" , input + 2 )"	5060:4:142178:142219	987937	0	True				
ANR	989332	CallExpression	"r_core_cmdf ( core , ""pdi@x:%s"" , input + 2 )"		987937	0					
ANR	989333	Callee	r_core_cmdf		987937	0					
ANR	989334	Identifier	r_core_cmdf		987937	0					
ANR	989335	ArgumentList	core		987937	1					
ANR	989336	Argument	core		987937	0					
ANR	989337	Identifier	core		987937	0					
ANR	989338	Argument	"""pdi@x:%s"""		987937	1					
ANR	989339	PrimaryExpression	"""pdi@x:%s"""		987937	0					
ANR	989340	Argument	input + 2		987937	2					
ANR	989341	AdditiveExpression	input + 2		987937	0		+			
ANR	989342	Identifier	input		987937	0					
ANR	989343	PrimaryExpression	2		987937	1					
ANR	989344	ElseStatement	else		987937	0					
ANR	989345	IfStatement	if ( input [ 1 ] == 'd' )		987937	0					
ANR	989346	Condition	input [ 1 ] == 'd'	5062:13:142239:142253	987937	0	True				
ANR	989347	EqualityExpression	input [ 1 ] == 'd'		987937	0		==			
ANR	989348	ArrayIndexing	input [ 1 ]		987937	0					
ANR	989349	Identifier	input		987937	0					
ANR	989350	PrimaryExpression	1		987937	1					
ANR	989351	PrimaryExpression	'd'		987937	1					
ANR	989352	CompoundStatement		218:30:6219:6219	987937	1					
ANR	989353	SwitchStatement	switch ( input [ 2 ] )		987937	0					
ANR	989354	Condition	input [ 2 ]	5063:11:142279:142286	987937	0	True				
ANR	989355	ArrayIndexing	input [ 2 ]		987937	0					
ANR	989356	Identifier	input		987937	0					
ANR	989357	PrimaryExpression	2		987937	1					
ANR	989358	CompoundStatement		219:21:6252:6252	987937	1					
ANR	989359	Label	case 'e' :	5064:3:142294:142302	987937	0	True				
ANR	989360	IfStatement	if ( input [ 3 ] == '?' )		987937	1					
ANR	989361	Condition	input [ 3 ] == '?'	5065:8:142322:142336	987937	0	True				
ANR	989362	EqualityExpression	input [ 3 ] == '?'		987937	0		==			
ANR	989363	ArrayIndexing	input [ 3 ]		987937	0					
ANR	989364	Identifier	input		987937	0					
ANR	989365	PrimaryExpression	3		987937	1					
ANR	989366	PrimaryExpression	'?'		987937	1					
ANR	989367	CompoundStatement		221:25:6302:6302	987937	1					
ANR	989368	ExpressionStatement	"r_cons_printf ( ""|Usage: pade [hex]       print ESIL expression from hexpairs\\n"" )"	5066:5:142346:142426	987937	0	True				
ANR	989369	CallExpression	"r_cons_printf ( ""|Usage: pade [hex]       print ESIL expression from hexpairs\\n"" )"		987937	0					
ANR	989370	Callee	r_cons_printf		987937	0					
ANR	989371	Identifier	r_cons_printf		987937	0					
ANR	989372	ArgumentList	"""|Usage: pade [hex]       print ESIL expression from hexpairs\\n"""		987937	1					
ANR	989373	Argument	"""|Usage: pade [hex]       print ESIL expression from hexpairs\\n"""		987937	0					
ANR	989374	PrimaryExpression	"""|Usage: pade [hex]       print ESIL expression from hexpairs\\n"""		987937	0					
ANR	989375	ElseStatement	else		987937	0					
ANR	989376	CompoundStatement		227:5:6473:6517	987937	0					
ANR	989377	IdentifierDeclStatement	int printed = 0 ;	5068:5:142446:142461	987937	0	True				
ANR	989378	IdentifierDecl	printed = 0		987937	0					
ANR	989379	IdentifierDeclType	int		987937	0					
ANR	989380	Identifier	printed		987937	1					
ANR	989381	AssignmentExpression	printed = 0		987937	2		=			
ANR	989382	Identifier	printed		987937	0					
ANR	989383	PrimaryExpression	0		987937	1					
ANR	989384	IdentifierDeclStatement	int bufsz ;	5069:5:142468:142477	987937	1	True				
ANR	989385	IdentifierDecl	bufsz		987937	0					
ANR	989386	IdentifierDeclType	int		987937	0					
ANR	989387	Identifier	bufsz		987937	1					
ANR	989388	IdentifierDeclStatement	RAnalOp aop = { 0 } ;	5070:5:142484:142503	987937	2	True				
ANR	989389	IdentifierDecl	aop = { 0 }		987937	0					
ANR	989390	IdentifierDeclType	RAnalOp		987937	0					
ANR	989391	Identifier	aop		987937	1					
ANR	989392	AssignmentExpression	aop = { 0 }		987937	2		=			
ANR	989393	Identifier	aop		987937	0					
ANR	989394	InitializerList	0		987937	1					
ANR	989395	PrimaryExpression	0		987937	0					
ANR	989396	IdentifierDeclStatement	"char * hex_arg = calloc ( 1 , strlen ( arg ) + 1 ) ;"	5071:5:142510:142554	987937	3	True				
ANR	989397	IdentifierDecl	"* hex_arg = calloc ( 1 , strlen ( arg ) + 1 )"		987937	0					
ANR	989398	IdentifierDeclType	char *		987937	0					
ANR	989399	Identifier	hex_arg		987937	1					
ANR	989400	AssignmentExpression	"* hex_arg = calloc ( 1 , strlen ( arg ) + 1 )"		987937	2		=			
ANR	989401	Identifier	hex_arg		987937	0					
ANR	989402	CallExpression	"calloc ( 1 , strlen ( arg ) + 1 )"		987937	1					
ANR	989403	Callee	calloc		987937	0					
ANR	989404	Identifier	calloc		987937	0					
ANR	989405	ArgumentList	1		987937	1					
ANR	989406	Argument	1		987937	0					
ANR	989407	PrimaryExpression	1		987937	0					
ANR	989408	Argument	strlen ( arg ) + 1		987937	1					
ANR	989409	AdditiveExpression	strlen ( arg ) + 1		987937	0		+			
ANR	989410	CallExpression	strlen ( arg )		987937	0					
ANR	989411	Callee	strlen		987937	0					
ANR	989412	Identifier	strlen		987937	0					
ANR	989413	ArgumentList	arg		987937	1					
ANR	989414	Argument	arg		987937	0					
ANR	989415	Identifier	arg		987937	0					
ANR	989416	PrimaryExpression	1		987937	1					
ANR	989417	IfStatement	if ( hex_arg )		987937	4					
ANR	989418	Condition	hex_arg	5072:9:142565:142571	987937	0	True				
ANR	989419	Identifier	hex_arg		987937	0					
ANR	989420	CompoundStatement		228:18:6537:6537	987937	1					
ANR	989421	ExpressionStatement	"bufsz = r_hex_str2bin ( arg + 1 , ( ut8 * ) hex_arg )"	5073:6:142582:142629	987937	0	True				
ANR	989422	AssignmentExpression	"bufsz = r_hex_str2bin ( arg + 1 , ( ut8 * ) hex_arg )"		987937	0		=			
ANR	989423	Identifier	bufsz		987937	0					
ANR	989424	CallExpression	"r_hex_str2bin ( arg + 1 , ( ut8 * ) hex_arg )"		987937	1					
ANR	989425	Callee	r_hex_str2bin		987937	0					
ANR	989426	Identifier	r_hex_str2bin		987937	0					
ANR	989427	ArgumentList	arg + 1		987937	1					
ANR	989428	Argument	arg + 1		987937	0					
ANR	989429	AdditiveExpression	arg + 1		987937	0		+			
ANR	989430	Identifier	arg		987937	0					
ANR	989431	PrimaryExpression	1		987937	1					
ANR	989432	Argument	( ut8 * ) hex_arg		987937	1					
ANR	989433	CastExpression	( ut8 * ) hex_arg		987937	0					
ANR	989434	CastTarget	ut8 *		987937	0					
ANR	989435	Identifier	hex_arg		987937	1					
ANR	989436	WhileStatement	while ( printed < bufsz )		987937	1					
ANR	989437	Condition	printed < bufsz	5074:13:142644:142658	987937	0	True				
ANR	989438	RelationalExpression	printed < bufsz		987937	0		<			
ANR	989439	Identifier	printed		987937	0					
ANR	989440	Identifier	bufsz		987937	1					
ANR	989441	CompoundStatement		230:30:6624:6624	987937	1					
ANR	989442	ExpressionStatement	aop . size = 0	5075:7:142670:142682	987937	0	True				
ANR	989443	AssignmentExpression	aop . size = 0		987937	0		=			
ANR	989444	MemberAccess	aop . size		987937	0					
ANR	989445	Identifier	aop		987937	0					
ANR	989446	Identifier	size		987937	1					
ANR	989447	PrimaryExpression	0		987937	1					
ANR	989448	IfStatement	"if ( r_anal_op ( core -> anal , & aop , core -> offset , ( const ut8 * ) hex_arg + printed , bufsz - printed , R_ANAL_OP_MASK_ESIL ) > 0 )"		987937	1					
ANR	989449	Condition	"r_anal_op ( core -> anal , & aop , core -> offset , ( const ut8 * ) hex_arg + printed , bufsz - printed , R_ANAL_OP_MASK_ESIL ) > 0"	5076:11:142695:142822	987937	0	True				
ANR	989450	RelationalExpression	"r_anal_op ( core -> anal , & aop , core -> offset , ( const ut8 * ) hex_arg + printed , bufsz - printed , R_ANAL_OP_MASK_ESIL ) > 0"		987937	0		>			
ANR	989451	CallExpression	"r_anal_op ( core -> anal , & aop , core -> offset , ( const ut8 * ) hex_arg + printed , bufsz - printed , R_ANAL_OP_MASK_ESIL )"		987937	0					
ANR	989452	Callee	r_anal_op		987937	0					
ANR	989453	Identifier	r_anal_op		987937	0					
ANR	989454	ArgumentList	core -> anal		987937	1					
ANR	989455	Argument	core -> anal		987937	0					
ANR	989456	PtrMemberAccess	core -> anal		987937	0					
ANR	989457	Identifier	core		987937	0					
ANR	989458	Identifier	anal		987937	1					
ANR	989459	Argument	& aop		987937	1					
ANR	989460	UnaryOperationExpression	& aop		987937	0					
ANR	989461	UnaryOperator	&		987937	0					
ANR	989462	Identifier	aop		987937	1					
ANR	989463	Argument	core -> offset		987937	2					
ANR	989464	PtrMemberAccess	core -> offset		987937	0					
ANR	989465	Identifier	core		987937	0					
ANR	989466	Identifier	offset		987937	1					
ANR	989467	Argument	( const ut8 * ) hex_arg + printed		987937	3					
ANR	989468	AdditiveExpression	( const ut8 * ) hex_arg + printed		987937	0		+			
ANR	989469	CastExpression	( const ut8 * ) hex_arg		987937	0					
ANR	989470	CastTarget	const ut8 *		987937	0					
ANR	989471	Identifier	hex_arg		987937	1					
ANR	989472	Identifier	printed		987937	1					
ANR	989473	Argument	bufsz - printed		987937	4					
ANR	989474	AdditiveExpression	bufsz - printed		987937	0		-			
ANR	989475	Identifier	bufsz		987937	0					
ANR	989476	Identifier	printed		987937	1					
ANR	989477	Argument	R_ANAL_OP_MASK_ESIL		987937	5					
ANR	989478	Identifier	R_ANAL_OP_MASK_ESIL		987937	0					
ANR	989479	PrimaryExpression	0		987937	1					
ANR	989480	CompoundStatement		234:8:6798:6844	987937	1					
ANR	989481	IdentifierDeclStatement	const char * str = R_STRBUF_SAFEGET ( & aop . esil ) ;	5078:8:142835:142881	987937	0	True				
ANR	989482	IdentifierDecl	* str = R_STRBUF_SAFEGET ( & aop . esil )		987937	0					
ANR	989483	IdentifierDeclType	const char *		987937	0					
ANR	989484	Identifier	str		987937	1					
ANR	989485	AssignmentExpression	* str = R_STRBUF_SAFEGET ( & aop . esil )		987937	2		=			
ANR	989486	Identifier	str		987937	0					
ANR	989487	CallExpression	R_STRBUF_SAFEGET ( & aop . esil )		987937	1					
ANR	989488	Callee	R_STRBUF_SAFEGET		987937	0					
ANR	989489	Identifier	R_STRBUF_SAFEGET		987937	0					
ANR	989490	ArgumentList	& aop . esil		987937	1					
ANR	989491	Argument	& aop . esil		987937	0					
ANR	989492	UnaryOperationExpression	& aop . esil		987937	0					
ANR	989493	UnaryOperator	&		987937	0					
ANR	989494	MemberAccess	aop . esil		987937	1					
ANR	989495	Identifier	aop		987937	0					
ANR	989496	Identifier	esil		987937	1					
ANR	989497	ExpressionStatement	r_cons_println ( str )	5079:8:142891:142911	987937	1	True				
ANR	989498	CallExpression	r_cons_println ( str )		987937	0					
ANR	989499	Callee	r_cons_println		987937	0					
ANR	989500	Identifier	r_cons_println		987937	0					
ANR	989501	ArgumentList	str		987937	1					
ANR	989502	Argument	str		987937	0					
ANR	989503	Identifier	str		987937	0					
ANR	989504	ElseStatement	else		987937	0					
ANR	989505	CompoundStatement		236:14:6890:6890	987937	0					
ANR	989506	ExpressionStatement	"eprintf ( ""Cannot decode instruction\\n"" )"	5081:8:142937:142976	987937	0	True				
ANR	989507	CallExpression	"eprintf ( ""Cannot decode instruction\\n"" )"		987937	0					
ANR	989508	Callee	eprintf		987937	0					
ANR	989509	Identifier	eprintf		987937	0					
ANR	989510	ArgumentList	"""Cannot decode instruction\\n"""		987937	1					
ANR	989511	Argument	"""Cannot decode instruction\\n"""		987937	0					
ANR	989512	PrimaryExpression	"""Cannot decode instruction\\n"""		987937	0					
ANR	989513	BreakStatement	break ;	5082:8:142986:142991	987937	1	True				
ANR	989514	IfStatement	if ( aop . size < 1 )		987937	2					
ANR	989515	Condition	aop . size < 1	5084:11:143013:143024	987937	0	True				
ANR	989516	RelationalExpression	aop . size < 1		987937	0		<			
ANR	989517	MemberAccess	aop . size		987937	0					
ANR	989518	Identifier	aop		987937	0					
ANR	989519	Identifier	size		987937	1					
ANR	989520	PrimaryExpression	1		987937	1					
ANR	989521	CompoundStatement		240:25:6990:6990	987937	1					
ANR	989522	ExpressionStatement	"eprintf ( ""Cannot decode instruction\\n"" )"	5085:8:143037:143076	987937	0	True				
ANR	989523	CallExpression	"eprintf ( ""Cannot decode instruction\\n"" )"		987937	0					
ANR	989524	Callee	eprintf		987937	0					
ANR	989525	Identifier	eprintf		987937	0					
ANR	989526	ArgumentList	"""Cannot decode instruction\\n"""		987937	1					
ANR	989527	Argument	"""Cannot decode instruction\\n"""		987937	0					
ANR	989528	PrimaryExpression	"""Cannot decode instruction\\n"""		987937	0					
ANR	989529	BreakStatement	break ;	5086:8:143086:143091	987937	1	True				
ANR	989530	ExpressionStatement	printed += aop . size	5088:7:143109:143128	987937	3	True				
ANR	989531	AssignmentExpression	printed += aop . size		987937	0		+=			
ANR	989532	Identifier	printed		987937	0					
ANR	989533	MemberAccess	aop . size		987937	1					
ANR	989534	Identifier	aop		987937	0					
ANR	989535	Identifier	size		987937	1					
ANR	989536	ExpressionStatement	r_anal_op_fini ( & aop )	5089:7:143137:143158	987937	4	True				
ANR	989537	CallExpression	r_anal_op_fini ( & aop )		987937	0					
ANR	989538	Callee	r_anal_op_fini		987937	0					
ANR	989539	Identifier	r_anal_op_fini		987937	0					
ANR	989540	ArgumentList	& aop		987937	1					
ANR	989541	Argument	& aop		987937	0					
ANR	989542	UnaryOperationExpression	& aop		987937	0					
ANR	989543	UnaryOperator	&		987937	0					
ANR	989544	Identifier	aop		987937	1					
ANR	989545	ExpressionStatement	free ( hex_arg )	5091:6:143174:143188	987937	2	True				
ANR	989546	CallExpression	free ( hex_arg )		987937	0					
ANR	989547	Callee	free		987937	0					
ANR	989548	Identifier	free		987937	0					
ANR	989549	ArgumentList	hex_arg		987937	1					
ANR	989550	Argument	hex_arg		987937	0					
ANR	989551	Identifier	hex_arg		987937	0					
ANR	989552	BreakStatement	break ;	5094:4:143207:143212	987937	2	True				
ANR	989553	Label	case ' ' :	5095:3:143217:143225	987937	3	True				
ANR	989554	ExpressionStatement	"__cmd_pad ( core , arg )"	5096:4:143240:143261	987937	4	True				
ANR	989555	CallExpression	"__cmd_pad ( core , arg )"		987937	0					
ANR	989556	Callee	__cmd_pad		987937	0					
ANR	989557	Identifier	__cmd_pad		987937	0					
ANR	989558	ArgumentList	core		987937	1					
ANR	989559	Argument	core		987937	0					
ANR	989560	Identifier	core		987937	0					
ANR	989561	Argument	arg		987937	1					
ANR	989562	Identifier	arg		987937	0					
ANR	989563	BreakStatement	break ;	5097:4:143267:143272	987937	5	True				
ANR	989564	Label	case '?' :	5098:3:143277:143285	987937	6	True				
ANR	989565	ExpressionStatement	"r_cons_printf ( ""|Usage: pad [hex]       print assembly expression from hexpairs\\n"" )"	5099:4:143301:143384	987937	7	True				
ANR	989566	CallExpression	"r_cons_printf ( ""|Usage: pad [hex]       print assembly expression from hexpairs\\n"" )"		987937	0					
ANR	989567	Callee	r_cons_printf		987937	0					
ANR	989568	Identifier	r_cons_printf		987937	0					
ANR	989569	ArgumentList	"""|Usage: pad [hex]       print assembly expression from hexpairs\\n"""		987937	1					
ANR	989570	Argument	"""|Usage: pad [hex]       print assembly expression from hexpairs\\n"""		987937	0					
ANR	989571	PrimaryExpression	"""|Usage: pad [hex]       print assembly expression from hexpairs\\n"""		987937	0					
ANR	989572	BreakStatement	break ;	5100:4:143390:143395	987937	8	True				
ANR	989573	Label	default :	5101:3:143400:143407	987937	9	True				
ANR	989574	Identifier	default		987937	0					
ANR	989575	ExpressionStatement	"r_cons_printf ( ""|Usage: pa[edD] [asm|hex]  print (dis)assembled\\n"" )"	5102:4:143413:143480	987937	10	True				
ANR	989576	CallExpression	"r_cons_printf ( ""|Usage: pa[edD] [asm|hex]  print (dis)assembled\\n"" )"		987937	0					
ANR	989577	Callee	r_cons_printf		987937	0					
ANR	989578	Identifier	r_cons_printf		987937	0					
ANR	989579	ArgumentList	"""|Usage: pa[edD] [asm|hex]  print (dis)assembled\\n"""		987937	1					
ANR	989580	Argument	"""|Usage: pa[edD] [asm|hex]  print (dis)assembled\\n"""		987937	0					
ANR	989581	PrimaryExpression	"""|Usage: pa[edD] [asm|hex]  print (dis)assembled\\n"""		987937	0					
ANR	989582	BreakStatement	break ;	5103:4:143486:143491	987937	11	True				
ANR	989583	ElseStatement	else		987937	0					
ANR	989584	IfStatement	if ( input [ 1 ] == '?' )		987937	0					
ANR	989585	Condition	input [ 1 ] == '?'	5105:13:143511:143525	987937	0	True				
ANR	989586	EqualityExpression	input [ 1 ] == '?'		987937	0		==			
ANR	989587	ArrayIndexing	input [ 1 ]		987937	0					
ANR	989588	Identifier	input		987937	0					
ANR	989589	PrimaryExpression	1		987937	1					
ANR	989590	PrimaryExpression	'?'		987937	1					
ANR	989591	CompoundStatement		261:30:7491:7491	987937	1					
ANR	989592	ExpressionStatement	"r_core_cmd_help ( core , help_msg_pa )"	5106:3:143533:143568	987937	0	True				
ANR	989593	CallExpression	"r_core_cmd_help ( core , help_msg_pa )"		987937	0					
ANR	989594	Callee	r_core_cmd_help		987937	0					
ANR	989595	Identifier	r_core_cmd_help		987937	0					
ANR	989596	ArgumentList	core		987937	1					
ANR	989597	Argument	core		987937	0					
ANR	989598	Identifier	core		987937	0					
ANR	989599	Argument	help_msg_pa		987937	1					
ANR	989600	Identifier	help_msg_pa		987937	0					
ANR	989601	ElseStatement	else		987937	0					
ANR	989602	CompoundStatement		267:3:7620:7682	987937	0					
ANR	989603	IdentifierDeclStatement	int i ;	5108:3:143584:143589	987937	0	True				
ANR	989604	IdentifierDecl	i		987937	0					
ANR	989605	IdentifierDeclType	int		987937	0					
ANR	989606	Identifier	i		987937	1					
ANR	989607	IdentifierDeclStatement	int bytes ;	5109:3:143594:143603	987937	1	True				
ANR	989608	IdentifierDecl	bytes		987937	0					
ANR	989609	IdentifierDeclType	int		987937	0					
ANR	989610	Identifier	bytes		987937	1					
ANR	989611	ExpressionStatement	"r_asm_set_pc ( core -> assembler , core -> offset )"	5110:3:143608:143652	987937	2	True				
ANR	989612	CallExpression	"r_asm_set_pc ( core -> assembler , core -> offset )"		987937	0					
ANR	989613	Callee	r_asm_set_pc		987937	0					
ANR	989614	Identifier	r_asm_set_pc		987937	0					
ANR	989615	ArgumentList	core -> assembler		987937	1					
ANR	989616	Argument	core -> assembler		987937	0					
ANR	989617	PtrMemberAccess	core -> assembler		987937	0					
ANR	989618	Identifier	core		987937	0					
ANR	989619	Identifier	assembler		987937	1					
ANR	989620	Argument	core -> offset		987937	1					
ANR	989621	PtrMemberAccess	core -> offset		987937	0					
ANR	989622	Identifier	core		987937	0					
ANR	989623	Identifier	offset		987937	1					
ANR	989624	IdentifierDeclStatement	"RAsmCode * acode = r_asm_massemble ( core -> assembler , input + 1 ) ;"	5111:3:143657:143719	987937	3	True				
ANR	989625	IdentifierDecl	"* acode = r_asm_massemble ( core -> assembler , input + 1 )"		987937	0					
ANR	989626	IdentifierDeclType	RAsmCode *		987937	0					
ANR	989627	Identifier	acode		987937	1					
ANR	989628	AssignmentExpression	"* acode = r_asm_massemble ( core -> assembler , input + 1 )"		987937	2		=			
ANR	989629	Identifier	acode		987937	0					
ANR	989630	CallExpression	"r_asm_massemble ( core -> assembler , input + 1 )"		987937	1					
ANR	989631	Callee	r_asm_massemble		987937	0					
ANR	989632	Identifier	r_asm_massemble		987937	0					
ANR	989633	ArgumentList	core -> assembler		987937	1					
ANR	989634	Argument	core -> assembler		987937	0					
ANR	989635	PtrMemberAccess	core -> assembler		987937	0					
ANR	989636	Identifier	core		987937	0					
ANR	989637	Identifier	assembler		987937	1					
ANR	989638	Argument	input + 1		987937	1					
ANR	989639	AdditiveExpression	input + 1		987937	0		+			
ANR	989640	Identifier	input		987937	0					
ANR	989641	PrimaryExpression	1		987937	1					
ANR	989642	IfStatement	if ( acode )		987937	4					
ANR	989643	Condition	acode	5112:7:143728:143732	987937	0	True				
ANR	989644	Identifier	acode		987937	0					
ANR	989645	CompoundStatement		268:14:7698:7698	987937	1					
ANR	989646	ExpressionStatement	bytes = acode -> len	5113:4:143741:143759	987937	0	True				
ANR	989647	AssignmentExpression	bytes = acode -> len		987937	0		=			
ANR	989648	Identifier	bytes		987937	0					
ANR	989649	PtrMemberAccess	acode -> len		987937	1					
ANR	989650	Identifier	acode		987937	0					
ANR	989651	Identifier	len		987937	1					
ANR	989652	ForStatement	for ( i = 0 ; i < bytes ; i ++ )		987937	1					
ANR	989653	ForInit	i = 0 ;	5114:9:143770:143775	987937	0	True				
ANR	989654	AssignmentExpression	i = 0		987937	0		=			
ANR	989655	Identifier	i		987937	0					
ANR	989656	PrimaryExpression	0		987937	1					
ANR	989657	Condition	i < bytes	5114:16:143777:143785	987937	1	True				
ANR	989658	RelationalExpression	i < bytes		987937	0		<			
ANR	989659	Identifier	i		987937	0					
ANR	989660	Identifier	bytes		987937	1					
ANR	989661	PostIncDecOperationExpression	i ++	5114:27:143788:143790	987937	2	True				
ANR	989662	Identifier	i		987937	0					
ANR	989663	IncDec	++		987937	1					
ANR	989664	CompoundStatement		271:5:7763:7786	987937	3					
ANR	989665	IdentifierDeclStatement	ut8 b = acode -> bytes [ i ] ;	5115:5:143800:143823	987937	0	True				
ANR	989666	IdentifierDecl	b = acode -> bytes [ i ]		987937	0					
ANR	989667	IdentifierDeclType	ut8		987937	0					
ANR	989668	Identifier	b		987937	1					
ANR	989669	AssignmentExpression	b = acode -> bytes [ i ]		987937	2		=			
ANR	989670	Identifier	b		987937	0					
ANR	989671	ArrayIndexing	acode -> bytes [ i ]		987937	1					
ANR	989672	PtrMemberAccess	acode -> bytes		987937	0					
ANR	989673	Identifier	acode		987937	0					
ANR	989674	Identifier	bytes		987937	1					
ANR	989675	Identifier	i		987937	1					
ANR	989676	ExpressionStatement	"r_cons_printf ( ""%02x"" , b )"	5116:5:143880:143905	987937	1	True				
ANR	989677	CallExpression	"r_cons_printf ( ""%02x"" , b )"		987937	0					
ANR	989678	Callee	r_cons_printf		987937	0					
ANR	989679	Identifier	r_cons_printf		987937	0					
ANR	989680	ArgumentList	"""%02x"""		987937	1					
ANR	989681	Argument	"""%02x"""		987937	0					
ANR	989682	PrimaryExpression	"""%02x"""		987937	0					
ANR	989683	Argument	b		987937	1					
ANR	989684	Identifier	b		987937	0					
ANR	989685	ExpressionStatement	r_cons_newline ( )	5118:4:143917:143934	987937	2	True				
ANR	989686	CallExpression	r_cons_newline ( )		987937	0					
ANR	989687	Callee	r_cons_newline		987937	0					
ANR	989688	Identifier	r_cons_newline		987937	0					
ANR	989689	ArgumentList			987937	1					
ANR	989690	ExpressionStatement	r_asm_code_free ( acode )	5119:4:143940:143963	987937	3	True				
ANR	989691	CallExpression	r_asm_code_free ( acode )		987937	0					
ANR	989692	Callee	r_asm_code_free		987937	0					
ANR	989693	Identifier	r_asm_code_free		987937	0					
ANR	989694	ArgumentList	acode		987937	1					
ANR	989695	Argument	acode		987937	0					
ANR	989696	Identifier	acode		987937	0					
ANR	989697	BreakStatement	break ;	5123:1:143978:143983	987937	25	True				
ANR	989698	Label	case 'b' :	5124:1:143986:143994	987937	26	True				
ANR	989699	CompoundStatement		280:11:7959:7959	987937	27					
ANR	989700	IfStatement	if ( input [ 1 ] == '?' )		987937	0					
ANR	989701	Condition	input [ 1 ] == '?'	5125:6:144012:144026	987937	0	True				
ANR	989702	EqualityExpression	input [ 1 ] == '?'		987937	0		==			
ANR	989703	ArrayIndexing	input [ 1 ]		987937	0					
ANR	989704	Identifier	input		987937	0					
ANR	989705	PrimaryExpression	1		987937	1					
ANR	989706	PrimaryExpression	'?'		987937	1					
ANR	989707	CompoundStatement		281:23:7992:7992	987937	1					
ANR	989708	ExpressionStatement	"r_cons_printf ( ""|Usage: p[bB] [len] ([skip])  ; see also pB and pxb\\n"" )"	5126:3:144034:144105	987937	0	True				
ANR	989709	CallExpression	"r_cons_printf ( ""|Usage: p[bB] [len] ([skip])  ; see also pB and pxb\\n"" )"		987937	0					
ANR	989710	Callee	r_cons_printf		987937	0					
ANR	989711	Identifier	r_cons_printf		987937	0					
ANR	989712	ArgumentList	"""|Usage: p[bB] [len] ([skip])  ; see also pB and pxb\\n"""		987937	1					
ANR	989713	Argument	"""|Usage: p[bB] [len] ([skip])  ; see also pB and pxb\\n"""		987937	0					
ANR	989714	PrimaryExpression	"""|Usage: p[bB] [len] ([skip])  ; see also pB and pxb\\n"""		987937	0					
ANR	989715	ElseStatement	else		987937	0					
ANR	989716	IfStatement	if ( l != 0 )		987937	0					
ANR	989717	Condition	l != 0	5127:13:144120:144125	987937	0	True				
ANR	989718	EqualityExpression	l != 0		987937	0		!=			
ANR	989719	Identifier	l		987937	0					
ANR	989720	PrimaryExpression	0		987937	1					
ANR	989721	CompoundStatement		286:3:8142:8177	987937	1					
ANR	989722	IdentifierDeclStatement	"int from , to ;"	5128:3:144133:144145	987937	0	True				
ANR	989723	IdentifierDecl	from		987937	0					
ANR	989724	IdentifierDeclType	int		987937	0					
ANR	989725	Identifier	from		987937	1					
ANR	989726	IdentifierDecl	to		987937	1					
ANR	989727	IdentifierDeclType	int		987937	0					
ANR	989728	Identifier	to		987937	1					
ANR	989729	IdentifierDeclStatement	const int size = len * 8 ;	5129:3:144150:144174	987937	1	True				
ANR	989730	IdentifierDecl	size = len * 8		987937	0					
ANR	989731	IdentifierDeclType	const int		987937	0					
ANR	989732	Identifier	size		987937	1					
ANR	989733	AssignmentExpression	size = len * 8		987937	2		=			
ANR	989734	Identifier	size		987937	0					
ANR	989735	MultiplicativeExpression	len * 8		987937	1		*			
ANR	989736	Identifier	len		987937	0					
ANR	989737	PrimaryExpression	8		987937	1					
ANR	989738	IdentifierDeclStatement	"char * spc , * buf = malloc ( size + 1 ) ;"	5130:3:144179:144214	987937	2	True				
ANR	989739	IdentifierDecl	* spc		987937	0					
ANR	989740	IdentifierDeclType	char *		987937	0					
ANR	989741	Identifier	spc		987937	1					
ANR	989742	IdentifierDecl	* buf = malloc ( size + 1 )		987937	1					
ANR	989743	IdentifierDeclType	char *		987937	0					
ANR	989744	Identifier	buf		987937	1					
ANR	989745	AssignmentExpression	* buf = malloc ( size + 1 )		987937	2		=			
ANR	989746	Identifier	buf		987937	0					
ANR	989747	CallExpression	malloc ( size + 1 )		987937	1					
ANR	989748	Callee	malloc		987937	0					
ANR	989749	Identifier	malloc		987937	0					
ANR	989750	ArgumentList	size + 1		987937	1					
ANR	989751	Argument	size + 1		987937	0					
ANR	989752	AdditiveExpression	size + 1		987937	0		+			
ANR	989753	Identifier	size		987937	0					
ANR	989754	PrimaryExpression	1		987937	1					
ANR	989755	ExpressionStatement	"spc = strchr ( input , ' ' )"	5131:3:144219:144244	987937	3	True				
ANR	989756	AssignmentExpression	"spc = strchr ( input , ' ' )"		987937	0		=			
ANR	989757	Identifier	spc		987937	0					
ANR	989758	CallExpression	"strchr ( input , ' ' )"		987937	1					
ANR	989759	Callee	strchr		987937	0					
ANR	989760	Identifier	strchr		987937	0					
ANR	989761	ArgumentList	input		987937	1					
ANR	989762	Argument	input		987937	0					
ANR	989763	Identifier	input		987937	0					
ANR	989764	Argument	' '		987937	1					
ANR	989765	PrimaryExpression	' '		987937	0					
ANR	989766	IfStatement	if ( spc )		987937	4					
ANR	989767	Condition	spc	5132:7:144253:144255	987937	0	True				
ANR	989768	Identifier	spc		987937	0					
ANR	989769	CompoundStatement		288:12:8221:8221	987937	1					
ANR	989770	ExpressionStatement	"len = r_num_math ( core -> num , spc + 1 )"	5133:4:144264:144301	987937	0	True				
ANR	989771	AssignmentExpression	"len = r_num_math ( core -> num , spc + 1 )"		987937	0		=			
ANR	989772	Identifier	len		987937	0					
ANR	989773	CallExpression	"r_num_math ( core -> num , spc + 1 )"		987937	1					
ANR	989774	Callee	r_num_math		987937	0					
ANR	989775	Identifier	r_num_math		987937	0					
ANR	989776	ArgumentList	core -> num		987937	1					
ANR	989777	Argument	core -> num		987937	0					
ANR	989778	PtrMemberAccess	core -> num		987937	0					
ANR	989779	Identifier	core		987937	0					
ANR	989780	Identifier	num		987937	1					
ANR	989781	Argument	spc + 1		987937	1					
ANR	989782	AdditiveExpression	spc + 1		987937	0		+			
ANR	989783	Identifier	spc		987937	0					
ANR	989784	PrimaryExpression	1		987937	1					
ANR	989785	IfStatement	if ( len < 1 )		987937	1					
ANR	989786	Condition	len < 1	5134:8:144311:144317	987937	0	True				
ANR	989787	RelationalExpression	len < 1		987937	0		<			
ANR	989788	Identifier	len		987937	0					
ANR	989789	PrimaryExpression	1		987937	1					
ANR	989790	CompoundStatement		290:17:8283:8283	987937	1					
ANR	989791	ExpressionStatement	len = 1	5135:5:144327:144334	987937	0	True				
ANR	989792	AssignmentExpression	len = 1		987937	0		=			
ANR	989793	Identifier	len		987937	0					
ANR	989794	PrimaryExpression	1		987937	1					
ANR	989795	ExpressionStatement	"spc = strchr ( spc + 1 , ' ' )"	5137:4:144346:144373	987937	2	True				
ANR	989796	AssignmentExpression	"spc = strchr ( spc + 1 , ' ' )"		987937	0		=			
ANR	989797	Identifier	spc		987937	0					
ANR	989798	CallExpression	"strchr ( spc + 1 , ' ' )"		987937	1					
ANR	989799	Callee	strchr		987937	0					
ANR	989800	Identifier	strchr		987937	0					
ANR	989801	ArgumentList	spc + 1		987937	1					
ANR	989802	Argument	spc + 1		987937	0					
ANR	989803	AdditiveExpression	spc + 1		987937	0		+			
ANR	989804	Identifier	spc		987937	0					
ANR	989805	PrimaryExpression	1		987937	1					
ANR	989806	Argument	' '		987937	1					
ANR	989807	PrimaryExpression	' '		987937	0					
ANR	989808	IfStatement	if ( spc )		987937	3					
ANR	989809	Condition	spc	5138:8:144383:144385	987937	0	True				
ANR	989810	Identifier	spc		987937	0					
ANR	989811	CompoundStatement		294:13:8351:8351	987937	1					
ANR	989812	ExpressionStatement	"from = r_num_math ( core -> num , spc + 1 )"	5139:5:144395:144433	987937	0	True				
ANR	989813	AssignmentExpression	"from = r_num_math ( core -> num , spc + 1 )"		987937	0		=			
ANR	989814	Identifier	from		987937	0					
ANR	989815	CallExpression	"r_num_math ( core -> num , spc + 1 )"		987937	1					
ANR	989816	Callee	r_num_math		987937	0					
ANR	989817	Identifier	r_num_math		987937	0					
ANR	989818	ArgumentList	core -> num		987937	1					
ANR	989819	Argument	core -> num		987937	0					
ANR	989820	PtrMemberAccess	core -> num		987937	0					
ANR	989821	Identifier	core		987937	0					
ANR	989822	Identifier	num		987937	1					
ANR	989823	Argument	spc + 1		987937	1					
ANR	989824	AdditiveExpression	spc + 1		987937	0		+			
ANR	989825	Identifier	spc		987937	0					
ANR	989826	PrimaryExpression	1		987937	1					
ANR	989827	ElseStatement	else		987937	0					
ANR	989828	CompoundStatement		296:11:8409:8409	987937	0					
ANR	989829	ExpressionStatement	from = 0	5141:5:144453:144461	987937	0	True				
ANR	989830	AssignmentExpression	from = 0		987937	0		=			
ANR	989831	Identifier	from		987937	0					
ANR	989832	PrimaryExpression	0		987937	1					
ANR	989833	ExpressionStatement	to = from + len	5143:4:144473:144488	987937	4	True				
ANR	989834	AssignmentExpression	to = from + len		987937	0		=			
ANR	989835	Identifier	to		987937	0					
ANR	989836	AdditiveExpression	from + len		987937	1		+			
ANR	989837	Identifier	from		987937	0					
ANR	989838	Identifier	len		987937	1					
ANR	989839	ElseStatement	else		987937	0					
ANR	989840	CompoundStatement		300:10:8463:8463	987937	0					
ANR	989841	ExpressionStatement	from = 0	5145:4:144506:144514	987937	0	True				
ANR	989842	AssignmentExpression	from = 0		987937	0		=			
ANR	989843	Identifier	from		987937	0					
ANR	989844	PrimaryExpression	0		987937	1					
ANR	989845	ExpressionStatement	to = size	5146:4:144520:144529	987937	1	True				
ANR	989846	AssignmentExpression	to = size		987937	0		=			
ANR	989847	Identifier	to		987937	0					
ANR	989848	Identifier	size		987937	1					
ANR	989849	IfStatement	if ( buf )		987937	5					
ANR	989850	Condition	buf	5148:7:144543:144545	987937	0	True				
ANR	989851	Identifier	buf		987937	0					
ANR	989852	CompoundStatement		305:4:8517:8528	987937	1					
ANR	989853	IdentifierDeclStatement	int buf_len ;	5149:4:144554:144565	987937	0	True				
ANR	989854	IdentifierDecl	buf_len		987937	0					
ANR	989855	IdentifierDeclType	int		987937	0					
ANR	989856	Identifier	buf_len		987937	1					
ANR	989857	ExpressionStatement	"r_str_bits ( buf , block , size , NULL )"	5150:4:144571:144606	987937	1	True				
ANR	989858	CallExpression	"r_str_bits ( buf , block , size , NULL )"		987937	0					
ANR	989859	Callee	r_str_bits		987937	0					
ANR	989860	Identifier	r_str_bits		987937	0					
ANR	989861	ArgumentList	buf		987937	1					
ANR	989862	Argument	buf		987937	0					
ANR	989863	Identifier	buf		987937	0					
ANR	989864	Argument	block		987937	1					
ANR	989865	Identifier	block		987937	0					
ANR	989866	Argument	size		987937	2					
ANR	989867	Identifier	size		987937	0					
ANR	989868	Argument	NULL		987937	3					
ANR	989869	Identifier	NULL		987937	0					
ANR	989870	ExpressionStatement	buf_len = strlen ( buf )	5151:4:144612:144634	987937	2	True				
ANR	989871	AssignmentExpression	buf_len = strlen ( buf )		987937	0		=			
ANR	989872	Identifier	buf_len		987937	0					
ANR	989873	CallExpression	strlen ( buf )		987937	1					
ANR	989874	Callee	strlen		987937	0					
ANR	989875	Identifier	strlen		987937	0					
ANR	989876	ArgumentList	buf		987937	1					
ANR	989877	Argument	buf		987937	0					
ANR	989878	Identifier	buf		987937	0					
ANR	989879	IfStatement	if ( from >= 0 && to >= 0 )		987937	3					
ANR	989880	Condition	from >= 0 && to >= 0	5152:8:144644:144663	987937	0	True				
ANR	989881	AndExpression	from >= 0 && to >= 0		987937	0		&&			
ANR	989882	RelationalExpression	from >= 0		987937	0		>=			
ANR	989883	Identifier	from		987937	0					
ANR	989884	PrimaryExpression	0		987937	1					
ANR	989885	RelationalExpression	to >= 0		987937	1		>=			
ANR	989886	Identifier	to		987937	0					
ANR	989887	PrimaryExpression	0		987937	1					
ANR	989888	CompoundStatement		308:30:8629:8629	987937	1					
ANR	989889	IfStatement	if ( from >= buf_len )		987937	0					
ANR	989890	Condition	from >= buf_len	5153:9:144677:144691	987937	0	True				
ANR	989891	RelationalExpression	from >= buf_len		987937	0		>=			
ANR	989892	Identifier	from		987937	0					
ANR	989893	Identifier	buf_len		987937	1					
ANR	989894	CompoundStatement		309:26:8657:8657	987937	1					
ANR	989895	ExpressionStatement	from = buf_len	5154:6:144702:144716	987937	0	True				
ANR	989896	AssignmentExpression	from = buf_len		987937	0		=			
ANR	989897	Identifier	from		987937	0					
ANR	989898	Identifier	buf_len		987937	1					
ANR	989899	IfStatement	if ( to < buf_len )		987937	1					
ANR	989900	Condition	to < buf_len	5156:9:144734:144745	987937	0	True				
ANR	989901	RelationalExpression	to < buf_len		987937	0		<			
ANR	989902	Identifier	to		987937	0					
ANR	989903	Identifier	buf_len		987937	1					
ANR	989904	CompoundStatement		312:23:8711:8711	987937	1					
ANR	989905	ExpressionStatement	buf [ to ] = 0	5157:6:144756:144767	987937	0	True				
ANR	989906	AssignmentExpression	buf [ to ] = 0		987937	0		=			
ANR	989907	ArrayIndexing	buf [ to ]		987937	0					
ANR	989908	Identifier	buf		987937	0					
ANR	989909	Identifier	to		987937	1					
ANR	989910	PrimaryExpression	0		987937	1					
ANR	989911	ExpressionStatement	r_cons_println ( buf + from )	5160:5:144811:144838	987937	2	True				
ANR	989912	CallExpression	r_cons_println ( buf + from )		987937	0					
ANR	989913	Callee	r_cons_println		987937	0					
ANR	989914	Identifier	r_cons_println		987937	0					
ANR	989915	ArgumentList	buf + from		987937	1					
ANR	989916	Argument	buf + from		987937	0					
ANR	989917	AdditiveExpression	buf + from		987937	0		+			
ANR	989918	Identifier	buf		987937	0					
ANR	989919	Identifier	from		987937	1					
ANR	989920	ExpressionStatement	free ( buf )	5162:4:144850:144860	987937	4	True				
ANR	989921	CallExpression	free ( buf )		987937	0					
ANR	989922	Callee	free		987937	0					
ANR	989923	Identifier	free		987937	0					
ANR	989924	ArgumentList	buf		987937	1					
ANR	989925	Argument	buf		987937	0					
ANR	989926	Identifier	buf		987937	0					
ANR	989927	ElseStatement	else		987937	0					
ANR	989928	CompoundStatement		319:10:8835:8835	987937	0					
ANR	989929	ExpressionStatement	"eprintf ( ""ERROR: Cannot malloc %d byte(s)\\n"" , size )"	5164:4:144878:144929	987937	0	True				
ANR	989930	CallExpression	"eprintf ( ""ERROR: Cannot malloc %d byte(s)\\n"" , size )"		987937	0					
ANR	989931	Callee	eprintf		987937	0					
ANR	989932	Identifier	eprintf		987937	0					
ANR	989933	ArgumentList	"""ERROR: Cannot malloc %d byte(s)\\n"""		987937	1					
ANR	989934	Argument	"""ERROR: Cannot malloc %d byte(s)\\n"""		987937	0					
ANR	989935	PrimaryExpression	"""ERROR: Cannot malloc %d byte(s)\\n"""		987937	0					
ANR	989936	Argument	size		987937	1					
ANR	989937	Identifier	size		987937	0					
ANR	989938	BreakStatement	break ;	5168:2:144945:144950	987937	28	True				
ANR	989939	Label	case 'B' :	5169:1:144953:144961	987937	29	True				
ANR	989940	CompoundStatement		325:11:8926:8926	987937	30					
ANR	989941	IfStatement	if ( input [ 1 ] == '?' )		987937	0					
ANR	989942	Condition	input [ 1 ] == '?'	5170:6:144979:144993	987937	0	True				
ANR	989943	EqualityExpression	input [ 1 ] == '?'		987937	0		==			
ANR	989944	ArrayIndexing	input [ 1 ]		987937	0					
ANR	989945	Identifier	input		987937	0					
ANR	989946	PrimaryExpression	1		987937	1					
ANR	989947	PrimaryExpression	'?'		987937	1					
ANR	989948	CompoundStatement		326:23:8959:8959	987937	1					
ANR	989949	ExpressionStatement	"r_cons_printf ( ""|Usage: p[bB] [len]       bitstream of N bytes\\n"" )"	5171:3:145001:145067	987937	0	True				
ANR	989950	CallExpression	"r_cons_printf ( ""|Usage: p[bB] [len]       bitstream of N bytes\\n"" )"		987937	0					
ANR	989951	Callee	r_cons_printf		987937	0					
ANR	989952	Identifier	r_cons_printf		987937	0					
ANR	989953	ArgumentList	"""|Usage: p[bB] [len]       bitstream of N bytes\\n"""		987937	1					
ANR	989954	Argument	"""|Usage: p[bB] [len]       bitstream of N bytes\\n"""		987937	0					
ANR	989955	PrimaryExpression	"""|Usage: p[bB] [len]       bitstream of N bytes\\n"""		987937	0					
ANR	989956	ElseStatement	else		987937	0					
ANR	989957	IfStatement	if ( l != 0 )		987937	0					
ANR	989958	Condition	l != 0	5172:13:145082:145087	987937	0	True				
ANR	989959	EqualityExpression	l != 0		987937	0		!=			
ANR	989960	Identifier	l		987937	0					
ANR	989961	PrimaryExpression	0		987937	1					
ANR	989962	CompoundStatement		330:3:9071:9080	987937	1					
ANR	989963	IdentifierDeclStatement	int size ;	5173:3:145095:145103	987937	0	True				
ANR	989964	IdentifierDecl	size		987937	0					
ANR	989965	IdentifierDeclType	int		987937	0					
ANR	989966	Identifier	size		987937	1					
ANR	989967	IdentifierDeclStatement	char * buf ;	5174:3:145108:145117	987937	1	True				
ANR	989968	IdentifierDecl	* buf		987937	0					
ANR	989969	IdentifierDeclType	char *		987937	0					
ANR	989970	Identifier	buf		987937	1					
ANR	989971	IfStatement	"if ( ! r_core_block_size ( core , len ) )"		987937	2					
ANR	989972	Condition	"! r_core_block_size ( core , len )"	5175:7:145126:145155	987937	0	True				
ANR	989973	UnaryOperationExpression	"! r_core_block_size ( core , len )"		987937	0					
ANR	989974	UnaryOperator	!		987937	0					
ANR	989975	CallExpression	"r_core_block_size ( core , len )"		987937	1					
ANR	989976	Callee	r_core_block_size		987937	0					
ANR	989977	Identifier	r_core_block_size		987937	0					
ANR	989978	ArgumentList	core		987937	1					
ANR	989979	Argument	core		987937	0					
ANR	989980	Identifier	core		987937	0					
ANR	989981	Argument	len		987937	1					
ANR	989982	Identifier	len		987937	0					
ANR	989983	CompoundStatement		331:39:9121:9121	987937	1					
ANR	989984	ExpressionStatement	len = core -> blocksize	5176:4:145164:145185	987937	0	True				
ANR	989985	AssignmentExpression	len = core -> blocksize		987937	0		=			
ANR	989986	Identifier	len		987937	0					
ANR	989987	PtrMemberAccess	core -> blocksize		987937	1					
ANR	989988	Identifier	core		987937	0					
ANR	989989	Identifier	blocksize		987937	1					
ANR	989990	ExpressionStatement	size = len * 8	5178:3:145195:145209	987937	3	True				
ANR	989991	AssignmentExpression	size = len * 8		987937	0		=			
ANR	989992	Identifier	size		987937	0					
ANR	989993	MultiplicativeExpression	len * 8		987937	1		*			
ANR	989994	Identifier	len		987937	0					
ANR	989995	PrimaryExpression	8		987937	1					
ANR	989996	ExpressionStatement	buf = malloc ( size + 1 )	5179:3:145214:145237	987937	4	True				
ANR	989997	AssignmentExpression	buf = malloc ( size + 1 )		987937	0		=			
ANR	989998	Identifier	buf		987937	0					
ANR	989999	CallExpression	malloc ( size + 1 )		987937	1					
ANR	990000	Callee	malloc		987937	0					
ANR	990001	Identifier	malloc		987937	0					
ANR	990002	ArgumentList	size + 1		987937	1					
ANR	990003	Argument	size + 1		987937	0					
ANR	990004	AdditiveExpression	size + 1		987937	0		+			
ANR	990005	Identifier	size		987937	0					
ANR	990006	PrimaryExpression	1		987937	1					
ANR	990007	IfStatement	if ( buf )		987937	5					
ANR	990008	Condition	buf	5180:7:145246:145248	987937	0	True				
ANR	990009	Identifier	buf		987937	0					
ANR	990010	CompoundStatement		336:12:9214:9214	987937	1					
ANR	990011	ExpressionStatement	"r_str_bits ( buf , core -> block , size , NULL )"	5181:4:145257:145298	987937	0	True				
ANR	990012	CallExpression	"r_str_bits ( buf , core -> block , size , NULL )"		987937	0					
ANR	990013	Callee	r_str_bits		987937	0					
ANR	990014	Identifier	r_str_bits		987937	0					
ANR	990015	ArgumentList	buf		987937	1					
ANR	990016	Argument	buf		987937	0					
ANR	990017	Identifier	buf		987937	0					
ANR	990018	Argument	core -> block		987937	1					
ANR	990019	PtrMemberAccess	core -> block		987937	0					
ANR	990020	Identifier	core		987937	0					
ANR	990021	Identifier	block		987937	1					
ANR	990022	Argument	size		987937	2					
ANR	990023	Identifier	size		987937	0					
ANR	990024	Argument	NULL		987937	3					
ANR	990025	Identifier	NULL		987937	0					
ANR	990026	ExpressionStatement	r_cons_println ( buf )	5182:4:145304:145324	987937	1	True				
ANR	990027	CallExpression	r_cons_println ( buf )		987937	0					
ANR	990028	Callee	r_cons_println		987937	0					
ANR	990029	Identifier	r_cons_println		987937	0					
ANR	990030	ArgumentList	buf		987937	1					
ANR	990031	Argument	buf		987937	0					
ANR	990032	Identifier	buf		987937	0					
ANR	990033	ExpressionStatement	free ( buf )	5183:4:145330:145340	987937	2	True				
ANR	990034	CallExpression	free ( buf )		987937	0					
ANR	990035	Callee	free		987937	0					
ANR	990036	Identifier	free		987937	0					
ANR	990037	ArgumentList	buf		987937	1					
ANR	990038	Argument	buf		987937	0					
ANR	990039	Identifier	buf		987937	0					
ANR	990040	ElseStatement	else		987937	0					
ANR	990041	CompoundStatement		340:10:9315:9315	987937	0					
ANR	990042	ExpressionStatement	"eprintf ( ""ERROR: Cannot malloc %d byte(s)\\n"" , size )"	5185:4:145358:145409	987937	0	True				
ANR	990043	CallExpression	"eprintf ( ""ERROR: Cannot malloc %d byte(s)\\n"" , size )"		987937	0					
ANR	990044	Callee	eprintf		987937	0					
ANR	990045	Identifier	eprintf		987937	0					
ANR	990046	ArgumentList	"""ERROR: Cannot malloc %d byte(s)\\n"""		987937	1					
ANR	990047	Argument	"""ERROR: Cannot malloc %d byte(s)\\n"""		987937	0					
ANR	990048	PrimaryExpression	"""ERROR: Cannot malloc %d byte(s)\\n"""		987937	0					
ANR	990049	Argument	size		987937	1					
ANR	990050	Identifier	size		987937	0					
ANR	990051	BreakStatement	break ;	5189:2:145425:145430	987937	31	True				
ANR	990052	Label	case 'I' :	5190:1:145433:145441	987937	32	True				
ANR	990053	SwitchStatement	switch ( input [ 1 ] )		987937	33					
ANR	990054	Condition	input [ 1 ]	5191:10:145461:145468	987937	0	True				
ANR	990055	ArrayIndexing	input [ 1 ]		987937	0					
ANR	990056	Identifier	input		987937	0					
ANR	990057	PrimaryExpression	1		987937	1					
ANR	990058	CompoundStatement		347:20:9434:9434	987937	1					
ANR	990059	Label	case 'j' :	5192:2:145475:145483	987937	0	True				
ANR	990060	IfStatement	if ( l != 0 )		987937	1					
ANR	990061	Condition	l != 0	5193:7:145520:145525	987937	0	True				
ANR	990062	EqualityExpression	l != 0		987937	0		!=			
ANR	990063	Identifier	l		987937	0					
ANR	990064	PrimaryExpression	0		987937	1					
ANR	990065	CompoundStatement		349:15:9491:9491	987937	1					
ANR	990066	IfStatement	if ( input [ 2 ] )		987937	0					
ANR	990067	Condition	input [ 2 ]	5194:8:145538:145545	987937	0	True				
ANR	990068	ArrayIndexing	input [ 2 ]		987937	0					
ANR	990069	Identifier	input		987937	0					
ANR	990070	PrimaryExpression	2		987937	1					
ANR	990071	CompoundStatement		350:18:9511:9511	987937	1					
ANR	990072	ExpressionStatement	"cmd_pDj ( core , input + 2 )"	5195:5:145555:145580	987937	0	True				
ANR	990073	CallExpression	"cmd_pDj ( core , input + 2 )"		987937	0					
ANR	990074	Callee	cmd_pDj		987937	0					
ANR	990075	Identifier	cmd_pDj		987937	0					
ANR	990076	ArgumentList	core		987937	1					
ANR	990077	Argument	core		987937	0					
ANR	990078	Identifier	core		987937	0					
ANR	990079	Argument	input + 2		987937	1					
ANR	990080	AdditiveExpression	input + 2		987937	0		+			
ANR	990081	Identifier	input		987937	0					
ANR	990082	PrimaryExpression	2		987937	1					
ANR	990083	ElseStatement	else		987937	0					
ANR	990084	CompoundStatement		352:11:9556:9556	987937	0					
ANR	990085	ExpressionStatement	"cmd_pDj ( core , sdb_fmt ( ""%d"" , core -> blocksize ) )"	5197:5:145600:145647	987937	0	True				
ANR	990086	CallExpression	"cmd_pDj ( core , sdb_fmt ( ""%d"" , core -> blocksize ) )"		987937	0					
ANR	990087	Callee	cmd_pDj		987937	0					
ANR	990088	Identifier	cmd_pDj		987937	0					
ANR	990089	ArgumentList	core		987937	1					
ANR	990090	Argument	core		987937	0					
ANR	990091	Identifier	core		987937	0					
ANR	990092	Argument	"sdb_fmt ( ""%d"" , core -> blocksize )"		987937	1					
ANR	990093	CallExpression	"sdb_fmt ( ""%d"" , core -> blocksize )"		987937	0					
ANR	990094	Callee	sdb_fmt		987937	0					
ANR	990095	Identifier	sdb_fmt		987937	0					
ANR	990096	ArgumentList	"""%d"""		987937	1					
ANR	990097	Argument	"""%d"""		987937	0					
ANR	990098	PrimaryExpression	"""%d"""		987937	0					
ANR	990099	Argument	core -> blocksize		987937	1					
ANR	990100	PtrMemberAccess	core -> blocksize		987937	0					
ANR	990101	Identifier	core		987937	0					
ANR	990102	Identifier	blocksize		987937	1					
ANR	990103	BreakStatement	break ;	5200:3:145663:145668	987937	2	True				
ANR	990104	Label	case 'f' :	5201:2:145672:145680	987937	3	True				
ANR	990105	CompoundStatement		359:3:9661:9777	987937	4					
ANR	990106	IdentifierDeclStatement	"const RAnalFunction * f = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM ) ;"	5203:3:145698:145814	987937	0	True				
ANR	990107	IdentifierDecl	"* f = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		987937	0					
ANR	990108	IdentifierDeclType	const RAnalFunction *		987937	0					
ANR	990109	Identifier	f		987937	1					
ANR	990110	AssignmentExpression	"* f = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		987937	2		=			
ANR	990111	Identifier	f		987937	0					
ANR	990112	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		987937	1					
ANR	990113	Callee	r_anal_get_fcn_in		987937	0					
ANR	990114	Identifier	r_anal_get_fcn_in		987937	0					
ANR	990115	ArgumentList	core -> anal		987937	1					
ANR	990116	Argument	core -> anal		987937	0					
ANR	990117	PtrMemberAccess	core -> anal		987937	0					
ANR	990118	Identifier	core		987937	0					
ANR	990119	Identifier	anal		987937	1					
ANR	990120	Argument	core -> offset		987937	1					
ANR	990121	PtrMemberAccess	core -> offset		987937	0					
ANR	990122	Identifier	core		987937	0					
ANR	990123	Identifier	offset		987937	1					
ANR	990124	Argument	R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM		987937	2					
ANR	990125	InclusiveOrExpression	R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM		987937	0		|			
ANR	990126	Identifier	R_ANAL_FCN_TYPE_FCN		987937	0					
ANR	990127	Identifier	R_ANAL_FCN_TYPE_SYM		987937	1					
ANR	990128	IfStatement	if ( f )		987937	1					
ANR	990129	Condition	f	5205:7:145823:145823	987937	0	True				
ANR	990130	Identifier	f		987937	0					
ANR	990131	CompoundStatement		361:10:9789:9789	987937	1					
ANR	990132	ExpressionStatement	"r_core_print_disasm_instructions ( core , r_anal_fcn_size ( f ) , 0 )"	5206:4:145832:145900	987937	0	True				
ANR	990133	CallExpression	"r_core_print_disasm_instructions ( core , r_anal_fcn_size ( f ) , 0 )"		987937	0					
ANR	990134	Callee	r_core_print_disasm_instructions		987937	0					
ANR	990135	Identifier	r_core_print_disasm_instructions		987937	0					
ANR	990136	ArgumentList	core		987937	1					
ANR	990137	Argument	core		987937	0					
ANR	990138	Identifier	core		987937	0					
ANR	990139	Argument	r_anal_fcn_size ( f )		987937	1					
ANR	990140	CallExpression	r_anal_fcn_size ( f )		987937	0					
ANR	990141	Callee	r_anal_fcn_size		987937	0					
ANR	990142	Identifier	r_anal_fcn_size		987937	0					
ANR	990143	ArgumentList	f		987937	1					
ANR	990144	Argument	f		987937	0					
ANR	990145	Identifier	f		987937	0					
ANR	990146	Argument	0		987937	2					
ANR	990147	PrimaryExpression	0		987937	0					
ANR	990148	BreakStatement	break ;	5208:4:145906:145911	987937	1	True				
ANR	990149	Label	case 'd' :	5211:2:145924:145932	987937	5	True				
ANR	990150	IfStatement	if ( l )		987937	6					
ANR	990151	Condition	l	5212:7:145969:145969	987937	0	True				
ANR	990152	Identifier	l		987937	0					
ANR	990153	CompoundStatement		368:10:9935:9935	987937	1					
ANR	990154	ExpressionStatement	"r_core_disasm_pdi ( core , 0 , l , 0 )"	5213:4:145978:146011	987937	0	True				
ANR	990155	CallExpression	"r_core_disasm_pdi ( core , 0 , l , 0 )"		987937	0					
ANR	990156	Callee	r_core_disasm_pdi		987937	0					
ANR	990157	Identifier	r_core_disasm_pdi		987937	0					
ANR	990158	ArgumentList	core		987937	1					
ANR	990159	Argument	core		987937	0					
ANR	990160	Identifier	core		987937	0					
ANR	990161	Argument	0		987937	1					
ANR	990162	PrimaryExpression	0		987937	0					
ANR	990163	Argument	l		987937	2					
ANR	990164	Identifier	l		987937	0					
ANR	990165	Argument	0		987937	3					
ANR	990166	PrimaryExpression	0		987937	0					
ANR	990167	BreakStatement	break ;	5215:3:146021:146026	987937	7	True				
ANR	990168	Label	case '?' :	5216:2:146030:146038	987937	8	True				
ANR	990169	Statement	r_cons_printf	5217:3:146052:146064	987937	9	True				
ANR	990170	Statement	(	5217:17:146066:146066	987937	10	True				
ANR	990171	Statement	"""|Usage: p[iI][df] [len]   print N instructions/bytes"""	5217:18:146067:146120	987937	11	True				
ANR	990172	Statement	"""(f=func) (see pi? and pdi)\\n"""	5218:4:146126:146155	987937	12	True				
ANR	990173	Statement	)	5218:34:146156:146156	987937	13	True				
ANR	990174	ExpressionStatement		5218:35:146157:146157	987937	14	True				
ANR	990175	BreakStatement	break ;	5219:3:146162:146167	987937	15	True				
ANR	990176	Label	default :	5220:2:146171:146178	987937	16	True				
ANR	990177	Identifier	default		987937	0					
ANR	990178	IfStatement	if ( l )		987937	17					
ANR	990179	Condition	l	5221:7:146187:146187	987937	0	True				
ANR	990180	Identifier	l		987937	0					
ANR	990181	CompoundStatement		377:10:10153:10153	987937	1					
ANR	990182	ExpressionStatement	"r_core_print_disasm_instructions ( core , l , 0 )"	5222:4:146196:146241	987937	0	True				
ANR	990183	CallExpression	"r_core_print_disasm_instructions ( core , l , 0 )"		987937	0					
ANR	990184	Callee	r_core_print_disasm_instructions		987937	0					
ANR	990185	Identifier	r_core_print_disasm_instructions		987937	0					
ANR	990186	ArgumentList	core		987937	1					
ANR	990187	Argument	core		987937	0					
ANR	990188	Identifier	core		987937	0					
ANR	990189	Argument	l		987937	1					
ANR	990190	Identifier	l		987937	0					
ANR	990191	Argument	0		987937	2					
ANR	990192	PrimaryExpression	0		987937	0					
ANR	990193	BreakStatement	break ;	5225:2:146254:146259	987937	34	True				
ANR	990194	Label	case 'i' :	5226:1:146262:146270	987937	35	True				
ANR	990195	SwitchStatement	switch ( input [ 1 ] )		987937	36					
ANR	990196	Condition	input [ 1 ]	5227:10:146290:146297	987937	0	True				
ANR	990197	ArrayIndexing	input [ 1 ]		987937	0					
ANR	990198	Identifier	input		987937	0					
ANR	990199	PrimaryExpression	1		987937	1					
ANR	990200	CompoundStatement		383:20:10263:10263	987937	1					
ANR	990201	Label	case '?' :	5228:2:146304:146312	987937	0	True				
ANR	990202	ExpressionStatement	"r_core_cmd_help ( core , help_msg_pi )"	5230:3:146367:146402	987937	1	True				
ANR	990203	CallExpression	"r_core_cmd_help ( core , help_msg_pi )"		987937	0					
ANR	990204	Callee	r_core_cmd_help		987937	0					
ANR	990205	Identifier	r_core_cmd_help		987937	0					
ANR	990206	ArgumentList	core		987937	1					
ANR	990207	Argument	core		987937	0					
ANR	990208	Identifier	core		987937	0					
ANR	990209	Argument	help_msg_pi		987937	1					
ANR	990210	Identifier	help_msg_pi		987937	0					
ANR	990211	BreakStatement	break ;	5231:3:146407:146412	987937	2	True				
ANR	990212	Label	case 'u' :	5232:2:146416:146424	987937	3	True				
ANR	990213	ExpressionStatement	"disasm_until_ret ( core , core -> offset , input [ 2 ] , input + 2 )"	5233:3:146494:146552	987937	4	True				
ANR	990214	CallExpression	"disasm_until_ret ( core , core -> offset , input [ 2 ] , input + 2 )"		987937	0					
ANR	990215	Callee	disasm_until_ret		987937	0					
ANR	990216	Identifier	disasm_until_ret		987937	0					
ANR	990217	ArgumentList	core		987937	1					
ANR	990218	Argument	core		987937	0					
ANR	990219	Identifier	core		987937	0					
ANR	990220	Argument	core -> offset		987937	1					
ANR	990221	PtrMemberAccess	core -> offset		987937	0					
ANR	990222	Identifier	core		987937	0					
ANR	990223	Identifier	offset		987937	1					
ANR	990224	Argument	input [ 2 ]		987937	2					
ANR	990225	ArrayIndexing	input [ 2 ]		987937	0					
ANR	990226	Identifier	input		987937	0					
ANR	990227	PrimaryExpression	2		987937	1					
ANR	990228	Argument	input + 2		987937	3					
ANR	990229	AdditiveExpression	input + 2		987937	0		+			
ANR	990230	Identifier	input		987937	0					
ANR	990231	PrimaryExpression	2		987937	1					
ANR	990232	BreakStatement	break ;	5234:3:146557:146562	987937	5	True				
ANR	990233	Label	case 'x' :	5235:2:146566:146574	987937	6	True				
ANR	990234	ExpressionStatement	"__cmd_pad ( core , r_str_trim_ro ( input + 2 ) )"	5236:3:146588:146631	987937	7	True				
ANR	990235	CallExpression	"__cmd_pad ( core , r_str_trim_ro ( input + 2 ) )"		987937	0					
ANR	990236	Callee	__cmd_pad		987937	0					
ANR	990237	Identifier	__cmd_pad		987937	0					
ANR	990238	ArgumentList	core		987937	1					
ANR	990239	Argument	core		987937	0					
ANR	990240	Identifier	core		987937	0					
ANR	990241	Argument	r_str_trim_ro ( input + 2 )		987937	1					
ANR	990242	CallExpression	r_str_trim_ro ( input + 2 )		987937	0					
ANR	990243	Callee	r_str_trim_ro		987937	0					
ANR	990244	Identifier	r_str_trim_ro		987937	0					
ANR	990245	ArgumentList	input + 2		987937	1					
ANR	990246	Argument	input + 2		987937	0					
ANR	990247	AdditiveExpression	input + 2		987937	0		+			
ANR	990248	Identifier	input		987937	0					
ANR	990249	PrimaryExpression	2		987937	1					
ANR	990250	BreakStatement	break ;	5237:3:146636:146641	987937	8	True				
ANR	990251	Label	case 'a' :	5238:2:146645:146653	987937	9	True				
ANR	990252	IfStatement	if ( l != 0 )		987937	10					
ANR	990253	Condition	l != 0	5239:7:146707:146712	987937	0	True				
ANR	990254	EqualityExpression	l != 0		987937	0		!=			
ANR	990255	Identifier	l		987937	0					
ANR	990256	PrimaryExpression	0		987937	1					
ANR	990257	CompoundStatement		395:15:10678:10678	987937	1					
ANR	990258	ExpressionStatement	"r_core_print_disasm_all ( core , core -> offset , l , len , 'i' )"	5240:4:146721:146783	987937	0	True				
ANR	990259	CallExpression	"r_core_print_disasm_all ( core , core -> offset , l , len , 'i' )"		987937	0					
ANR	990260	Callee	r_core_print_disasm_all		987937	0					
ANR	990261	Identifier	r_core_print_disasm_all		987937	0					
ANR	990262	ArgumentList	core		987937	1					
ANR	990263	Argument	core		987937	0					
ANR	990264	Identifier	core		987937	0					
ANR	990265	Argument	core -> offset		987937	1					
ANR	990266	PtrMemberAccess	core -> offset		987937	0					
ANR	990267	Identifier	core		987937	0					
ANR	990268	Identifier	offset		987937	1					
ANR	990269	Argument	l		987937	2					
ANR	990270	Identifier	l		987937	0					
ANR	990271	Argument	len		987937	3					
ANR	990272	Identifier	len		987937	0					
ANR	990273	Argument	'i'		987937	4					
ANR	990274	PrimaryExpression	'i'		987937	0					
ANR	990275	BreakStatement	break ;	5243:3:146793:146798	987937	11	True				
ANR	990276	Label	case 'j' :	5244:2:146802:146810	987937	12	True				
ANR	990277	IfStatement	if ( l != 0 )		987937	13					
ANR	990278	Condition	l != 0	5245:7:146845:146850	987937	0	True				
ANR	990279	EqualityExpression	l != 0		987937	0		!=			
ANR	990280	Identifier	l		987937	0					
ANR	990281	PrimaryExpression	0		987937	1					
ANR	990282	CompoundStatement		401:15:10816:10816	987937	1					
ANR	990283	ExpressionStatement	"cmd_pdj ( core , input + 2 , block )"	5246:4:146859:146891	987937	0	True				
ANR	990284	CallExpression	"cmd_pdj ( core , input + 2 , block )"		987937	0					
ANR	990285	Callee	cmd_pdj		987937	0					
ANR	990286	Identifier	cmd_pdj		987937	0					
ANR	990287	ArgumentList	core		987937	1					
ANR	990288	Argument	core		987937	0					
ANR	990289	Identifier	core		987937	0					
ANR	990290	Argument	input + 2		987937	1					
ANR	990291	AdditiveExpression	input + 2		987937	0		+			
ANR	990292	Identifier	input		987937	0					
ANR	990293	PrimaryExpression	2		987937	1					
ANR	990294	Argument	block		987937	2					
ANR	990295	Identifier	block		987937	0					
ANR	990296	BreakStatement	break ;	5248:3:146901:146906	987937	14	True				
ANR	990297	Label	case 'd' :	5249:2:146910:146918	987937	15	True				
ANR	990298	IfStatement	if ( l != 0 )		987937	16					
ANR	990299	Condition	l != 0	5250:7:146955:146960	987937	0	True				
ANR	990300	EqualityExpression	l != 0		987937	0		!=			
ANR	990301	Identifier	l		987937	0					
ANR	990302	PrimaryExpression	0		987937	1					
ANR	990303	CompoundStatement		406:15:10926:10926	987937	1					
ANR	990304	ExpressionStatement	"r_core_disasm_pdi ( core , l , 0 , 0 )"	5251:4:146969:147002	987937	0	True				
ANR	990305	CallExpression	"r_core_disasm_pdi ( core , l , 0 , 0 )"		987937	0					
ANR	990306	Callee	r_core_disasm_pdi		987937	0					
ANR	990307	Identifier	r_core_disasm_pdi		987937	0					
ANR	990308	ArgumentList	core		987937	1					
ANR	990309	Argument	core		987937	0					
ANR	990310	Identifier	core		987937	0					
ANR	990311	Argument	l		987937	1					
ANR	990312	Identifier	l		987937	0					
ANR	990313	Argument	0		987937	2					
ANR	990314	PrimaryExpression	0		987937	0					
ANR	990315	Argument	0		987937	3					
ANR	990316	PrimaryExpression	0		987937	0					
ANR	990317	BreakStatement	break ;	5253:3:147012:147017	987937	17	True				
ANR	990318	Label	case 'e' :	5254:2:147021:147029	987937	18	True				
ANR	990319	IfStatement	if ( l != 0 )		987937	19					
ANR	990320	Condition	l != 0	5255:7:147047:147052	987937	0	True				
ANR	990321	EqualityExpression	l != 0		987937	0		!=			
ANR	990322	Identifier	l		987937	0					
ANR	990323	PrimaryExpression	0		987937	1					
ANR	990324	CompoundStatement		411:15:11018:11018	987937	1					
ANR	990325	ExpressionStatement	"r_core_disasm_pdi ( core , l , 0 , 'e' )"	5256:4:147061:147096	987937	0	True				
ANR	990326	CallExpression	"r_core_disasm_pdi ( core , l , 0 , 'e' )"		987937	0					
ANR	990327	Callee	r_core_disasm_pdi		987937	0					
ANR	990328	Identifier	r_core_disasm_pdi		987937	0					
ANR	990329	ArgumentList	core		987937	1					
ANR	990330	Argument	core		987937	0					
ANR	990331	Identifier	core		987937	0					
ANR	990332	Argument	l		987937	1					
ANR	990333	Identifier	l		987937	0					
ANR	990334	Argument	0		987937	2					
ANR	990335	PrimaryExpression	0		987937	0					
ANR	990336	Argument	'e'		987937	3					
ANR	990337	PrimaryExpression	'e'		987937	0					
ANR	990338	BreakStatement	break ;	5258:3:147106:147111	987937	20	True				
ANR	990339	Label	case 'f' :	5259:2:147115:147123	987937	21	True				
ANR	990340	IfStatement	if ( input [ 2 ] == '?' )		987937	22					
ANR	990341	Condition	input [ 2 ] == '?'	5260:8:147142:147156	987937	0	True				
ANR	990342	EqualityExpression	input [ 2 ] == '?'		987937	0		==			
ANR	990343	ArrayIndexing	input [ 2 ]		987937	0					
ANR	990344	Identifier	input		987937	0					
ANR	990345	PrimaryExpression	2		987937	1					
ANR	990346	PrimaryExpression	'?'		987937	1					
ANR	990347	CompoundStatement		416:25:11122:11122	987937	1					
ANR	990348	ExpressionStatement	"r_core_cmd_help ( core , help_msg_pif )"	5261:5:147176:147211	987937	0	True				
ANR	990349	CallExpression	"r_core_cmd_help ( core , help_msg_pif )"		987937	0					
ANR	990350	Callee	r_core_cmd_help		987937	0					
ANR	990351	Identifier	r_core_cmd_help		987937	0					
ANR	990352	ArgumentList	core		987937	1					
ANR	990353	Argument	core		987937	0					
ANR	990354	Identifier	core		987937	0					
ANR	990355	Argument	help_msg_pif		987937	1					
ANR	990356	Identifier	help_msg_pif		987937	0					
ANR	990357	ElseStatement	else		987937	0					
ANR	990358	IfStatement	if ( input [ 2 ] == 'j' )		987937	0					
ANR	990359	Condition	input [ 2 ] == 'j'	5262:15:147228:147242	987937	0	True				
ANR	990360	EqualityExpression	input [ 2 ] == 'j'		987937	0		==			
ANR	990361	ArrayIndexing	input [ 2 ]		987937	0					
ANR	990362	Identifier	input		987937	0					
ANR	990363	PrimaryExpression	2		987937	1					
ANR	990364	PrimaryExpression	'j'		987937	1					
ANR	990365	CompoundStatement		418:32:11208:11208	987937	1					
ANR	990366	ExpressionStatement	"r_core_cmdf ( core , ""pdfj%s"" , input + 3 )"	5263:5:147252:147291	987937	0	True				
ANR	990367	CallExpression	"r_core_cmdf ( core , ""pdfj%s"" , input + 3 )"		987937	0					
ANR	990368	Callee	r_core_cmdf		987937	0					
ANR	990369	Identifier	r_core_cmdf		987937	0					
ANR	990370	ArgumentList	core		987937	1					
ANR	990371	Argument	core		987937	0					
ANR	990372	Identifier	core		987937	0					
ANR	990373	Argument	"""pdfj%s"""		987937	1					
ANR	990374	PrimaryExpression	"""pdfj%s"""		987937	0					
ANR	990375	Argument	input + 3		987937	2					
ANR	990376	AdditiveExpression	input + 3		987937	0		+			
ANR	990377	Identifier	input		987937	0					
ANR	990378	PrimaryExpression	3		987937	1					
ANR	990379	ElseStatement	else		987937	0					
ANR	990380	IfStatement	if ( input [ 2 ] == 'c' )		987937	0					
ANR	990381	Condition	input [ 2 ] == 'c'	5264:15:147308:147322	987937	0	True				
ANR	990382	EqualityExpression	input [ 2 ] == 'c'		987937	0		==			
ANR	990383	ArrayIndexing	input [ 2 ]		987937	0					
ANR	990384	Identifier	input		987937	0					
ANR	990385	PrimaryExpression	2		987937	1					
ANR	990386	PrimaryExpression	'c'		987937	1					
ANR	990387	CompoundStatement		435:5:11580:11692	987937	1					
ANR	990388	IdentifierDeclStatement	RListIter * iter ;	5266:5:147343:147358	987937	0	True				
ANR	990389	IdentifierDecl	* iter		987937	0					
ANR	990390	IdentifierDeclType	RListIter *		987937	0					
ANR	990391	Identifier	iter		987937	1					
ANR	990392	IdentifierDeclStatement	RAnalRef * refi ;	5267:5:147365:147379	987937	1	True				
ANR	990393	IdentifierDecl	* refi		987937	0					
ANR	990394	IdentifierDeclType	RAnalRef *		987937	0					
ANR	990395	Identifier	refi		987937	1					
ANR	990396	IdentifierDeclStatement	RList * refs = NULL ;	5268:5:147386:147404	987937	2	True				
ANR	990397	IdentifierDecl	* refs = NULL		987937	0					
ANR	990398	IdentifierDeclType	RList *		987937	0					
ANR	990399	Identifier	refs		987937	1					
ANR	990400	AssignmentExpression	* refs = NULL		987937	2		=			
ANR	990401	Identifier	NULL		987937	0					
ANR	990402	Identifier	NULL		987937	1					
ANR	990403	IdentifierDeclStatement	PJ * pj = NULL ;	5269:5:147411:147424	987937	3	True				
ANR	990404	IdentifierDecl	* pj = NULL		987937	0					
ANR	990405	IdentifierDeclType	PJ *		987937	0					
ANR	990406	Identifier	pj		987937	1					
ANR	990407	AssignmentExpression	* pj = NULL		987937	2		=			
ANR	990408	Identifier	NULL		987937	0					
ANR	990409	Identifier	NULL		987937	1					
ANR	990410	IfStatement	if ( input [ 3 ] != 0 )		987937	4					
ANR	990411	Condition	input [ 3 ] != 0	5272:9:147461:147472	987937	0	True				
ANR	990412	EqualityExpression	input [ 3 ] != 0		987937	0		!=			
ANR	990413	ArrayIndexing	input [ 3 ]		987937	0					
ANR	990414	Identifier	input		987937	0					
ANR	990415	PrimaryExpression	3		987937	1					
ANR	990416	PrimaryExpression	0		987937	1					
ANR	990417	CompoundStatement		428:23:11438:11438	987937	1					
ANR	990418	IfStatement	if ( input [ 3 ] == 'j' )		987937	0					
ANR	990419	Condition	input [ 3 ] == 'j'	5273:10:147487:147501	987937	0	True				
ANR	990420	EqualityExpression	input [ 3 ] == 'j'		987937	0		==			
ANR	990421	ArrayIndexing	input [ 3 ]		987937	0					
ANR	990422	Identifier	input		987937	0					
ANR	990423	PrimaryExpression	3		987937	1					
ANR	990424	PrimaryExpression	'j'		987937	1					
ANR	990425	CompoundStatement		429:27:11467:11467	987937	1					
ANR	990426	ExpressionStatement	pj = pj_new ( )	5274:7:147524:147538	987937	0	True				
ANR	990427	AssignmentExpression	pj = pj_new ( )		987937	0		=			
ANR	990428	Identifier	pj		987937	0					
ANR	990429	CallExpression	pj_new ( )		987937	1					
ANR	990430	Callee	pj_new		987937	0					
ANR	990431	Identifier	pj_new		987937	0					
ANR	990432	ArgumentList			987937	1					
ANR	990433	ExpressionStatement	pj_a ( pj )	5275:7:147547:147556	987937	1	True				
ANR	990434	CallExpression	pj_a ( pj )		987937	0					
ANR	990435	Callee	pj_a		987937	0					
ANR	990436	Identifier	pj_a		987937	0					
ANR	990437	ArgumentList	pj		987937	1					
ANR	990438	Argument	pj		987937	0					
ANR	990439	Identifier	pj		987937	0					
ANR	990440	IdentifierDeclStatement	"RAnalFunction * f = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM ) ;"	5279:5:147617:147729	987937	5	True				
ANR	990441	IdentifierDecl	"* f = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		987937	0					
ANR	990442	IdentifierDeclType	RAnalFunction *		987937	0					
ANR	990443	Identifier	f		987937	1					
ANR	990444	AssignmentExpression	"* f = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		987937	2		=			
ANR	990445	Identifier	f		987937	0					
ANR	990446	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		987937	1					
ANR	990447	Callee	r_anal_get_fcn_in		987937	0					
ANR	990448	Identifier	r_anal_get_fcn_in		987937	0					
ANR	990449	ArgumentList	core -> anal		987937	1					
ANR	990450	Argument	core -> anal		987937	0					
ANR	990451	PtrMemberAccess	core -> anal		987937	0					
ANR	990452	Identifier	core		987937	0					
ANR	990453	Identifier	anal		987937	1					
ANR	990454	Argument	core -> offset		987937	1					
ANR	990455	PtrMemberAccess	core -> offset		987937	0					
ANR	990456	Identifier	core		987937	0					
ANR	990457	Identifier	offset		987937	1					
ANR	990458	Argument	R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM		987937	2					
ANR	990459	InclusiveOrExpression	R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM		987937	0		|			
ANR	990460	Identifier	R_ANAL_FCN_TYPE_FCN		987937	0					
ANR	990461	Identifier	R_ANAL_FCN_TYPE_SYM		987937	1					
ANR	990462	IfStatement	if ( ! f )		987937	6					
ANR	990463	Condition	! f	5283:9:147805:147806	987937	0	True				
ANR	990464	UnaryOperationExpression	! f		987937	0					
ANR	990465	UnaryOperator	!		987937	0					
ANR	990466	Identifier	f		987937	1					
ANR	990467	CompoundStatement		439:13:11772:11772	987937	1					
ANR	990468	IfStatement	if ( pj )		987937	0					
ANR	990469	Condition	pj	5285:10:147854:147855	987937	0	True				
ANR	990470	Identifier	pj		987937	0					
ANR	990471	CompoundStatement		441:14:11821:11821	987937	1					
ANR	990472	ExpressionStatement	pj_end ( pj )	5286:7:147867:147878	987937	0	True				
ANR	990473	CallExpression	pj_end ( pj )		987937	0					
ANR	990474	Callee	pj_end		987937	0					
ANR	990475	Identifier	pj_end		987937	0					
ANR	990476	ArgumentList	pj		987937	1					
ANR	990477	Argument	pj		987937	0					
ANR	990478	Identifier	pj		987937	0					
ANR	990479	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	5287:7:147887:147917	987937	1	True				
ANR	990480	CallExpression	r_cons_println ( pj_string ( pj ) )		987937	0					
ANR	990481	Callee	r_cons_println		987937	0					
ANR	990482	Identifier	r_cons_println		987937	0					
ANR	990483	ArgumentList	pj_string ( pj )		987937	1					
ANR	990484	Argument	pj_string ( pj )		987937	0					
ANR	990485	CallExpression	pj_string ( pj )		987937	0					
ANR	990486	Callee	pj_string		987937	0					
ANR	990487	Identifier	pj_string		987937	0					
ANR	990488	ArgumentList	pj		987937	1					
ANR	990489	Argument	pj		987937	0					
ANR	990490	Identifier	pj		987937	0					
ANR	990491	ExpressionStatement	pj_free ( pj )	5288:7:147926:147938	987937	2	True				
ANR	990492	CallExpression	pj_free ( pj )		987937	0					
ANR	990493	Callee	pj_free		987937	0					
ANR	990494	Identifier	pj_free		987937	0					
ANR	990495	ArgumentList	pj		987937	1					
ANR	990496	Argument	pj		987937	0					
ANR	990497	Identifier	pj		987937	0					
ANR	990498	BreakStatement	break ;	5290:6:147954:147959	987937	1	True				
ANR	990499	ExpressionStatement	"refs = r_core_anal_fcn_get_calls ( core , f )"	5293:5:148015:148057	987937	7	True				
ANR	990500	AssignmentExpression	"refs = r_core_anal_fcn_get_calls ( core , f )"		987937	0		=			
ANR	990501	Identifier	refs		987937	0					
ANR	990502	CallExpression	"r_core_anal_fcn_get_calls ( core , f )"		987937	1					
ANR	990503	Callee	r_core_anal_fcn_get_calls		987937	0					
ANR	990504	Identifier	r_core_anal_fcn_get_calls		987937	0					
ANR	990505	ArgumentList	core		987937	1					
ANR	990506	Argument	core		987937	0					
ANR	990507	Identifier	core		987937	0					
ANR	990508	Argument	f		987937	1					
ANR	990509	Identifier	f		987937	0					
ANR	990510	IfStatement	if ( ! r_list_empty ( refs ) )		987937	8					
ANR	990511	Condition	! r_list_empty ( refs )	5296:9:148090:148109	987937	0	True				
ANR	990512	UnaryOperationExpression	! r_list_empty ( refs )		987937	0					
ANR	990513	UnaryOperator	!		987937	0					
ANR	990514	CallExpression	r_list_empty ( refs )		987937	1					
ANR	990515	Callee	r_list_empty		987937	0					
ANR	990516	Identifier	r_list_empty		987937	0					
ANR	990517	ArgumentList	refs		987937	1					
ANR	990518	Argument	refs		987937	0					
ANR	990519	Identifier	refs		987937	0					
ANR	990520	CompoundStatement		455:6:12122:12172	987937	1					
ANR	990521	IdentifierDeclStatement	RConfigHold * hc = r_config_hold_new ( core -> config ) ;	5299:6:148159:148209	987937	0	True				
ANR	990522	IdentifierDecl	* hc = r_config_hold_new ( core -> config )		987937	0					
ANR	990523	IdentifierDeclType	RConfigHold *		987937	0					
ANR	990524	Identifier	hc		987937	1					
ANR	990525	AssignmentExpression	* hc = r_config_hold_new ( core -> config )		987937	2		=			
ANR	990526	Identifier	hc		987937	0					
ANR	990527	CallExpression	r_config_hold_new ( core -> config )		987937	1					
ANR	990528	Callee	r_config_hold_new		987937	0					
ANR	990529	Identifier	r_config_hold_new		987937	0					
ANR	990530	ArgumentList	core -> config		987937	1					
ANR	990531	Argument	core -> config		987937	0					
ANR	990532	PtrMemberAccess	core -> config		987937	0					
ANR	990533	Identifier	core		987937	0					
ANR	990534	Identifier	config		987937	1					
ANR	990535	ExpressionStatement	"r_config_hold_i ( hc , ""asm.offset"" , NULL )"	5300:6:148217:148257	987937	1	True				
ANR	990536	CallExpression	"r_config_hold_i ( hc , ""asm.offset"" , NULL )"		987937	0					
ANR	990537	Callee	r_config_hold_i		987937	0					
ANR	990538	Identifier	r_config_hold_i		987937	0					
ANR	990539	ArgumentList	hc		987937	1					
ANR	990540	Argument	hc		987937	0					
ANR	990541	Identifier	hc		987937	0					
ANR	990542	Argument	"""asm.offset"""		987937	1					
ANR	990543	PrimaryExpression	"""asm.offset"""		987937	0					
ANR	990544	Argument	NULL		987937	2					
ANR	990545	Identifier	NULL		987937	0					
ANR	990546	ExpressionStatement	"r_config_hold_i ( hc , ""asm.comments"" , NULL )"	5301:6:148265:148307	987937	2	True				
ANR	990547	CallExpression	"r_config_hold_i ( hc , ""asm.comments"" , NULL )"		987937	0					
ANR	990548	Callee	r_config_hold_i		987937	0					
ANR	990549	Identifier	r_config_hold_i		987937	0					
ANR	990550	ArgumentList	hc		987937	1					
ANR	990551	Argument	hc		987937	0					
ANR	990552	Identifier	hc		987937	0					
ANR	990553	Argument	"""asm.comments"""		987937	1					
ANR	990554	PrimaryExpression	"""asm.comments"""		987937	0					
ANR	990555	Argument	NULL		987937	2					
ANR	990556	Identifier	NULL		987937	0					
ANR	990557	ExpressionStatement	"r_config_hold_i ( hc , ""asm.tabs"" , NULL )"	5302:6:148315:148353	987937	3	True				
ANR	990558	CallExpression	"r_config_hold_i ( hc , ""asm.tabs"" , NULL )"		987937	0					
ANR	990559	Callee	r_config_hold_i		987937	0					
ANR	990560	Identifier	r_config_hold_i		987937	0					
ANR	990561	ArgumentList	hc		987937	1					
ANR	990562	Argument	hc		987937	0					
ANR	990563	Identifier	hc		987937	0					
ANR	990564	Argument	"""asm.tabs"""		987937	1					
ANR	990565	PrimaryExpression	"""asm.tabs"""		987937	0					
ANR	990566	Argument	NULL		987937	2					
ANR	990567	Identifier	NULL		987937	0					
ANR	990568	ExpressionStatement	"r_config_hold_i ( hc , ""asm.bytes"" , NULL )"	5303:6:148361:148400	987937	4	True				
ANR	990569	CallExpression	"r_config_hold_i ( hc , ""asm.bytes"" , NULL )"		987937	0					
ANR	990570	Callee	r_config_hold_i		987937	0					
ANR	990571	Identifier	r_config_hold_i		987937	0					
ANR	990572	ArgumentList	hc		987937	1					
ANR	990573	Argument	hc		987937	0					
ANR	990574	Identifier	hc		987937	0					
ANR	990575	Argument	"""asm.bytes"""		987937	1					
ANR	990576	PrimaryExpression	"""asm.bytes"""		987937	0					
ANR	990577	Argument	NULL		987937	2					
ANR	990578	Identifier	NULL		987937	0					
ANR	990579	ExpressionStatement	"r_config_hold_i ( hc , ""emu.str"" , NULL )"	5304:6:148408:148445	987937	5	True				
ANR	990580	CallExpression	"r_config_hold_i ( hc , ""emu.str"" , NULL )"		987937	0					
ANR	990581	Callee	r_config_hold_i		987937	0					
ANR	990582	Identifier	r_config_hold_i		987937	0					
ANR	990583	ArgumentList	hc		987937	1					
ANR	990584	Argument	hc		987937	0					
ANR	990585	Identifier	hc		987937	0					
ANR	990586	Argument	"""emu.str"""		987937	1					
ANR	990587	PrimaryExpression	"""emu.str"""		987937	0					
ANR	990588	Argument	NULL		987937	2					
ANR	990589	Identifier	NULL		987937	0					
ANR	990590	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.offset"" , false )"	5308:6:148499:148549	987937	6	True				
ANR	990591	CallExpression	"r_config_set_i ( core -> config , ""asm.offset"" , false )"		987937	0					
ANR	990592	Callee	r_config_set_i		987937	0					
ANR	990593	Identifier	r_config_set_i		987937	0					
ANR	990594	ArgumentList	core -> config		987937	1					
ANR	990595	Argument	core -> config		987937	0					
ANR	990596	PtrMemberAccess	core -> config		987937	0					
ANR	990597	Identifier	core		987937	0					
ANR	990598	Identifier	config		987937	1					
ANR	990599	Argument	"""asm.offset"""		987937	1					
ANR	990600	PrimaryExpression	"""asm.offset"""		987937	0					
ANR	990601	Argument	false		987937	2					
ANR	990602	Identifier	false		987937	0					
ANR	990603	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.comments"" , false )"	5309:6:148557:148609	987937	7	True				
ANR	990604	CallExpression	"r_config_set_i ( core -> config , ""asm.comments"" , false )"		987937	0					
ANR	990605	Callee	r_config_set_i		987937	0					
ANR	990606	Identifier	r_config_set_i		987937	0					
ANR	990607	ArgumentList	core -> config		987937	1					
ANR	990608	Argument	core -> config		987937	0					
ANR	990609	PtrMemberAccess	core -> config		987937	0					
ANR	990610	Identifier	core		987937	0					
ANR	990611	Identifier	config		987937	1					
ANR	990612	Argument	"""asm.comments"""		987937	1					
ANR	990613	PrimaryExpression	"""asm.comments"""		987937	0					
ANR	990614	Argument	false		987937	2					
ANR	990615	Identifier	false		987937	0					
ANR	990616	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.tabs"" , 0 )"	5310:6:148617:148661	987937	8	True				
ANR	990617	CallExpression	"r_config_set_i ( core -> config , ""asm.tabs"" , 0 )"		987937	0					
ANR	990618	Callee	r_config_set_i		987937	0					
ANR	990619	Identifier	r_config_set_i		987937	0					
ANR	990620	ArgumentList	core -> config		987937	1					
ANR	990621	Argument	core -> config		987937	0					
ANR	990622	PtrMemberAccess	core -> config		987937	0					
ANR	990623	Identifier	core		987937	0					
ANR	990624	Identifier	config		987937	1					
ANR	990625	Argument	"""asm.tabs"""		987937	1					
ANR	990626	PrimaryExpression	"""asm.tabs"""		987937	0					
ANR	990627	Argument	0		987937	2					
ANR	990628	PrimaryExpression	0		987937	0					
ANR	990629	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.bytes"" , false )"	5311:6:148669:148718	987937	9	True				
ANR	990630	CallExpression	"r_config_set_i ( core -> config , ""asm.bytes"" , false )"		987937	0					
ANR	990631	Callee	r_config_set_i		987937	0					
ANR	990632	Identifier	r_config_set_i		987937	0					
ANR	990633	ArgumentList	core -> config		987937	1					
ANR	990634	Argument	core -> config		987937	0					
ANR	990635	PtrMemberAccess	core -> config		987937	0					
ANR	990636	Identifier	core		987937	0					
ANR	990637	Identifier	config		987937	1					
ANR	990638	Argument	"""asm.bytes"""		987937	1					
ANR	990639	PrimaryExpression	"""asm.bytes"""		987937	0					
ANR	990640	Argument	false		987937	2					
ANR	990641	Identifier	false		987937	0					
ANR	990642	ExpressionStatement	"r_config_set_i ( core -> config , ""emu.str"" , false )"	5312:6:148726:148773	987937	10	True				
ANR	990643	CallExpression	"r_config_set_i ( core -> config , ""emu.str"" , false )"		987937	0					
ANR	990644	Callee	r_config_set_i		987937	0					
ANR	990645	Identifier	r_config_set_i		987937	0					
ANR	990646	ArgumentList	core -> config		987937	1					
ANR	990647	Argument	core -> config		987937	0					
ANR	990648	PtrMemberAccess	core -> config		987937	0					
ANR	990649	Identifier	core		987937	0					
ANR	990650	Identifier	config		987937	1					
ANR	990651	Argument	"""emu.str"""		987937	1					
ANR	990652	PrimaryExpression	"""emu.str"""		987937	0					
ANR	990653	Argument	false		987937	2					
ANR	990654	Identifier	false		987937	0					
ANR	990655	Statement	r_list_foreach	5315:6:148824:148837	987937	11	True				
ANR	990656	Statement	(	5315:21:148839:148839	987937	12	True				
ANR	990657	Statement	refs	5315:22:148840:148843	987937	13	True				
ANR	990658	Statement	","	5315:26:148844:148844	987937	14	True				
ANR	990659	Statement	iter	5315:28:148846:148849	987937	15	True				
ANR	990660	Statement	","	5315:32:148850:148850	987937	16	True				
ANR	990661	Statement	refi	5315:34:148852:148855	987937	17	True				
ANR	990662	Statement	)	5315:38:148856:148856	987937	18	True				
ANR	990663	CompoundStatement		471:40:12821:12821	987937	19					
ANR	990664	IfStatement	if ( pj )		987937	0					
ANR	990665	Condition	pj	5316:11:148871:148872	987937	0	True				
ANR	990666	Identifier	pj		987937	0					
ANR	990667	CompoundStatement		478:8:13152:13213	987937	1					
ANR	990668	IdentifierDeclStatement	"RAnalFunction * f = r_anal_get_fcn_in ( core -> anal , refi -> addr , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM ) ;"	5317:8:148885:148998	987937	0	True				
ANR	990669	IdentifierDecl	"* f = r_anal_get_fcn_in ( core -> anal , refi -> addr , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		987937	0					
ANR	990670	IdentifierDeclType	RAnalFunction *		987937	0					
ANR	990671	Identifier	f		987937	1					
ANR	990672	AssignmentExpression	"* f = r_anal_get_fcn_in ( core -> anal , refi -> addr , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		987937	2		=			
ANR	990673	Identifier	f		987937	0					
ANR	990674	CallExpression	"r_anal_get_fcn_in ( core -> anal , refi -> addr , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		987937	1					
ANR	990675	Callee	r_anal_get_fcn_in		987937	0					
ANR	990676	Identifier	r_anal_get_fcn_in		987937	0					
ANR	990677	ArgumentList	core -> anal		987937	1					
ANR	990678	Argument	core -> anal		987937	0					
ANR	990679	PtrMemberAccess	core -> anal		987937	0					
ANR	990680	Identifier	core		987937	0					
ANR	990681	Identifier	anal		987937	1					
ANR	990682	Argument	refi -> addr		987937	1					
ANR	990683	PtrMemberAccess	refi -> addr		987937	0					
ANR	990684	Identifier	refi		987937	0					
ANR	990685	Identifier	addr		987937	1					
ANR	990686	Argument	R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM		987937	2					
ANR	990687	InclusiveOrExpression	R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM		987937	0		|			
ANR	990688	Identifier	R_ANAL_FCN_TYPE_FCN		987937	0					
ANR	990689	Identifier	R_ANAL_FCN_TYPE_SYM		987937	1					
ANR	990690	Statement	char	5319:8:149008:149011	987937	1	True				
ANR	990691	Statement	*	5319:13:149013:149013	987937	2	True				
ANR	990692	Statement	dst	5319:14:149014:149016	987937	3	True				
ANR	990693	Statement	=	5319:18:149018:149018	987937	4	True				
ANR	990694	Statement	r_str_newf	5319:20:149020:149029	987937	5	True				
ANR	990695	Statement	(	5319:31:149031:149031	987937	6	True				
ANR	990696	Statement	(	5319:32:149032:149032	987937	7	True				
ANR	990697	Statement	f	5319:33:149033:149033	987937	8	True				
ANR	990698	Statement	?	5319:34:149034:149034	987937	9	True				
ANR	990699	Statement	f	5319:36:149036:149036	987937	10	True				
ANR	990700	Statement	->	5319:37:149037:149038	987937	11	True				
ANR	990701	Label	name :	5319:39:149039:149043	987937	12	True				
ANR	990702	Identifier	name		987937	0					
ANR	990703	Statement	"""0x%08"""	5319:45:149045:149051	987937	13	True				
ANR	990704	Statement	PFMT64x	5319:52:149052:149058	987937	14	True				
ANR	990705	Statement	)	5319:59:149059:149059	987937	15	True				
ANR	990706	Statement	","	5319:60:149060:149060	987937	16	True				
ANR	990707	Statement	refi	5319:62:149062:149065	987937	17	True				
ANR	990708	Statement	->	5319:66:149066:149067	987937	18	True				
ANR	990709	Statement	addr	5319:68:149068:149071	987937	19	True				
ANR	990710	Statement	)	5319:72:149072:149072	987937	20	True				
ANR	990711	ExpressionStatement		5319:73:149073:149073	987937	21	True				
ANR	990712	IdentifierDeclStatement	char * dst2 = NULL ;	5320:8:149083:149100	987937	22	True				
ANR	990713	IdentifierDecl	* dst2 = NULL		987937	0					
ANR	990714	IdentifierDeclType	char *		987937	0					
ANR	990715	Identifier	dst2		987937	1					
ANR	990716	AssignmentExpression	* dst2 = NULL		987937	2		=			
ANR	990717	Identifier	NULL		987937	0					
ANR	990718	Identifier	NULL		987937	1					
ANR	990719	IdentifierDeclStatement	"RAnalOp * op = r_core_anal_op ( core , refi -> addr , R_ANAL_OP_MASK_BASIC ) ;"	5321:8:149110:149179	987937	23	True				
ANR	990720	IdentifierDecl	"* op = r_core_anal_op ( core , refi -> addr , R_ANAL_OP_MASK_BASIC )"		987937	0					
ANR	990721	IdentifierDeclType	RAnalOp *		987937	0					
ANR	990722	Identifier	op		987937	1					
ANR	990723	AssignmentExpression	"* op = r_core_anal_op ( core , refi -> addr , R_ANAL_OP_MASK_BASIC )"		987937	2		=			
ANR	990724	Identifier	op		987937	0					
ANR	990725	CallExpression	"r_core_anal_op ( core , refi -> addr , R_ANAL_OP_MASK_BASIC )"		987937	1					
ANR	990726	Callee	r_core_anal_op		987937	0					
ANR	990727	Identifier	r_core_anal_op		987937	0					
ANR	990728	ArgumentList	core		987937	1					
ANR	990729	Argument	core		987937	0					
ANR	990730	Identifier	core		987937	0					
ANR	990731	Argument	refi -> addr		987937	1					
ANR	990732	PtrMemberAccess	refi -> addr		987937	0					
ANR	990733	Identifier	refi		987937	0					
ANR	990734	Identifier	addr		987937	1					
ANR	990735	Argument	R_ANAL_OP_MASK_BASIC		987937	2					
ANR	990736	Identifier	R_ANAL_OP_MASK_BASIC		987937	0					
ANR	990737	IdentifierDeclStatement	"RBinReloc * rel = r_core_getreloc ( core , refi -> addr , op -> size ) ;"	5322:8:149189:149250	987937	24	True				
ANR	990738	IdentifierDecl	"* rel = r_core_getreloc ( core , refi -> addr , op -> size )"		987937	0					
ANR	990739	IdentifierDeclType	RBinReloc *		987937	0					
ANR	990740	Identifier	rel		987937	1					
ANR	990741	AssignmentExpression	"* rel = r_core_getreloc ( core , refi -> addr , op -> size )"		987937	2		=			
ANR	990742	Identifier	rel		987937	0					
ANR	990743	CallExpression	"r_core_getreloc ( core , refi -> addr , op -> size )"		987937	1					
ANR	990744	Callee	r_core_getreloc		987937	0					
ANR	990745	Identifier	r_core_getreloc		987937	0					
ANR	990746	ArgumentList	core		987937	1					
ANR	990747	Argument	core		987937	0					
ANR	990748	Identifier	core		987937	0					
ANR	990749	Argument	refi -> addr		987937	1					
ANR	990750	PtrMemberAccess	refi -> addr		987937	0					
ANR	990751	Identifier	refi		987937	0					
ANR	990752	Identifier	addr		987937	1					
ANR	990753	Argument	op -> size		987937	2					
ANR	990754	PtrMemberAccess	op -> size		987937	0					
ANR	990755	Identifier	op		987937	0					
ANR	990756	Identifier	size		987937	1					
ANR	990757	IfStatement	if ( rel )		987937	25					
ANR	990758	Condition	rel	5323:12:149264:149266	987937	0	True				
ANR	990759	Identifier	rel		987937	0					
ANR	990760	CompoundStatement		479:17:13232:13232	987937	1					
ANR	990761	IfStatement	if ( rel && rel -> import && rel -> import -> name )		987937	0					
ANR	990762	Condition	rel && rel -> import && rel -> import -> name	5324:13:149284:149322	987937	0	True				
ANR	990763	AndExpression	rel && rel -> import && rel -> import -> name		987937	0		&&			
ANR	990764	Identifier	rel		987937	0					
ANR	990765	AndExpression	rel -> import && rel -> import -> name		987937	1		&&			
ANR	990766	PtrMemberAccess	rel -> import		987937	0					
ANR	990767	Identifier	rel		987937	0					
ANR	990768	Identifier	import		987937	1					
ANR	990769	PtrMemberAccess	rel -> import -> name		987937	1					
ANR	990770	PtrMemberAccess	rel -> import		987937	0					
ANR	990771	Identifier	rel		987937	0					
ANR	990772	Identifier	import		987937	1					
ANR	990773	Identifier	name		987937	1					
ANR	990774	CompoundStatement		480:54:13288:13288	987937	1					
ANR	990775	ExpressionStatement	dst2 = rel -> import -> name	5325:10:149337:149361	987937	0	True				
ANR	990776	AssignmentExpression	dst2 = rel -> import -> name		987937	0		=			
ANR	990777	Identifier	dst2		987937	0					
ANR	990778	PtrMemberAccess	rel -> import -> name		987937	1					
ANR	990779	PtrMemberAccess	rel -> import		987937	0					
ANR	990780	Identifier	rel		987937	0					
ANR	990781	Identifier	import		987937	1					
ANR	990782	Identifier	name		987937	1					
ANR	990783	ElseStatement	else		987937	0					
ANR	990784	IfStatement	if ( rel && rel -> symbol && rel -> symbol -> name )		987937	0					
ANR	990785	Condition	rel && rel -> symbol && rel -> symbol -> name	5326:20:149383:149421	987937	0	True				
ANR	990786	AndExpression	rel && rel -> symbol && rel -> symbol -> name		987937	0		&&			
ANR	990787	Identifier	rel		987937	0					
ANR	990788	AndExpression	rel -> symbol && rel -> symbol -> name		987937	1		&&			
ANR	990789	PtrMemberAccess	rel -> symbol		987937	0					
ANR	990790	Identifier	rel		987937	0					
ANR	990791	Identifier	symbol		987937	1					
ANR	990792	PtrMemberAccess	rel -> symbol -> name		987937	1					
ANR	990793	PtrMemberAccess	rel -> symbol		987937	0					
ANR	990794	Identifier	rel		987937	0					
ANR	990795	Identifier	symbol		987937	1					
ANR	990796	Identifier	name		987937	1					
ANR	990797	CompoundStatement		482:61:13387:13387	987937	1					
ANR	990798	ExpressionStatement	dst2 = rel -> symbol -> name	5327:10:149436:149460	987937	0	True				
ANR	990799	AssignmentExpression	dst2 = rel -> symbol -> name		987937	0		=			
ANR	990800	Identifier	dst2		987937	0					
ANR	990801	PtrMemberAccess	rel -> symbol -> name		987937	1					
ANR	990802	PtrMemberAccess	rel -> symbol		987937	0					
ANR	990803	Identifier	rel		987937	0					
ANR	990804	Identifier	symbol		987937	1					
ANR	990805	Identifier	name		987937	1					
ANR	990806	ElseStatement	else		987937	0					
ANR	990807	CompoundStatement		485:15:13451:13451	987937	0					
ANR	990808	ExpressionStatement	dst2 = dst	5330:9:149499:149509	987937	0	True				
ANR	990809	AssignmentExpression	dst2 = dst		987937	0		=			
ANR	990810	Identifier	dst2		987937	0					
ANR	990811	Identifier	dst		987937	1					
ANR	990812	ExpressionStatement	pj_o ( pj )	5332:8:149529:149538	987937	26	True				
ANR	990813	CallExpression	pj_o ( pj )		987937	0					
ANR	990814	Callee	pj_o		987937	0					
ANR	990815	Identifier	pj_o		987937	0					
ANR	990816	ArgumentList	pj		987937	1					
ANR	990817	Argument	pj		987937	0					
ANR	990818	Identifier	pj		987937	0					
ANR	990819	ExpressionStatement	"pj_ks ( pj , ""dest"" , dst2 )"	5333:8:149548:149572	987937	27	True				
ANR	990820	CallExpression	"pj_ks ( pj , ""dest"" , dst2 )"		987937	0					
ANR	990821	Callee	pj_ks		987937	0					
ANR	990822	Identifier	pj_ks		987937	0					
ANR	990823	ArgumentList	pj		987937	1					
ANR	990824	Argument	pj		987937	0					
ANR	990825	Identifier	pj		987937	0					
ANR	990826	Argument	"""dest"""		987937	1					
ANR	990827	PrimaryExpression	"""dest"""		987937	0					
ANR	990828	Argument	dst2		987937	2					
ANR	990829	Identifier	dst2		987937	0					
ANR	990830	ExpressionStatement	"pj_kn ( pj , ""addr"" , refi -> addr )"	5334:8:149582:149612	987937	28	True				
ANR	990831	CallExpression	"pj_kn ( pj , ""addr"" , refi -> addr )"		987937	0					
ANR	990832	Callee	pj_kn		987937	0					
ANR	990833	Identifier	pj_kn		987937	0					
ANR	990834	ArgumentList	pj		987937	1					
ANR	990835	Argument	pj		987937	0					
ANR	990836	Identifier	pj		987937	0					
ANR	990837	Argument	"""addr"""		987937	1					
ANR	990838	PrimaryExpression	"""addr"""		987937	0					
ANR	990839	Argument	refi -> addr		987937	2					
ANR	990840	PtrMemberAccess	refi -> addr		987937	0					
ANR	990841	Identifier	refi		987937	0					
ANR	990842	Identifier	addr		987937	1					
ANR	990843	ExpressionStatement	"pj_kn ( pj , ""at"" , refi -> at )"	5335:8:149622:149648	987937	29	True				
ANR	990844	CallExpression	"pj_kn ( pj , ""at"" , refi -> at )"		987937	0					
ANR	990845	Callee	pj_kn		987937	0					
ANR	990846	Identifier	pj_kn		987937	0					
ANR	990847	ArgumentList	pj		987937	1					
ANR	990848	Argument	pj		987937	0					
ANR	990849	Identifier	pj		987937	0					
ANR	990850	Argument	"""at"""		987937	1					
ANR	990851	PrimaryExpression	"""at"""		987937	0					
ANR	990852	Argument	refi -> at		987937	2					
ANR	990853	PtrMemberAccess	refi -> at		987937	0					
ANR	990854	Identifier	refi		987937	0					
ANR	990855	Identifier	at		987937	1					
ANR	990856	ExpressionStatement	pj_end ( pj )	5336:8:149658:149669	987937	30	True				
ANR	990857	CallExpression	pj_end ( pj )		987937	0					
ANR	990858	Callee	pj_end		987937	0					
ANR	990859	Identifier	pj_end		987937	0					
ANR	990860	ArgumentList	pj		987937	1					
ANR	990861	Argument	pj		987937	0					
ANR	990862	Identifier	pj		987937	0					
ANR	990863	ExpressionStatement	r_anal_op_free ( op )	5337:8:149679:149698	987937	31	True				
ANR	990864	CallExpression	r_anal_op_free ( op )		987937	0					
ANR	990865	Callee	r_anal_op_free		987937	0					
ANR	990866	Identifier	r_anal_op_free		987937	0					
ANR	990867	ArgumentList	op		987937	1					
ANR	990868	Argument	op		987937	0					
ANR	990869	Identifier	op		987937	0					
ANR	990870	ElseStatement	else		987937	0					
ANR	990871	CompoundStatement		494:14:13677:13677	987937	0					
ANR	990872	Statement	char	5339:8:149724:149727	987937	0	True				
ANR	990873	Statement	*	5339:13:149729:149729	987937	1	True				
ANR	990874	Statement	s	5339:14:149730:149730	987937	2	True				
ANR	990875	Statement	=	5339:16:149732:149732	987937	3	True				
ANR	990876	Statement	r_core_cmd_strf	5339:18:149734:149748	987937	4	True				
ANR	990877	Statement	(	5339:34:149750:149750	987937	5	True				
ANR	990878	Statement	core	5339:35:149751:149754	987937	6	True				
ANR	990879	Statement	","	5339:39:149755:149755	987937	7	True				
ANR	990880	Statement	"""pdi %i @ 0x%08"""	5339:41:149757:149772	987937	8	True				
ANR	990881	Statement	PFMT64x	5339:57:149773:149779	987937	9	True				
ANR	990882	Statement	","	5339:64:149780:149780	987937	10	True				
ANR	990883	Statement	1	5339:66:149782:149782	987937	11	True				
ANR	990884	Statement	","	5339:67:149783:149783	987937	12	True				
ANR	990885	Statement	refi	5339:69:149785:149788	987937	13	True				
ANR	990886	Statement	->	5339:73:149789:149790	987937	14	True				
ANR	990887	Statement	at	5339:75:149791:149792	987937	15	True				
ANR	990888	Statement	)	5339:77:149793:149793	987937	16	True				
ANR	990889	ExpressionStatement		5339:78:149794:149794	987937	17	True				
ANR	990890	ExpressionStatement	"r_cons_printf ( ""%s"" , s )"	5340:8:149804:149827	987937	18	True				
ANR	990891	CallExpression	"r_cons_printf ( ""%s"" , s )"		987937	0					
ANR	990892	Callee	r_cons_printf		987937	0					
ANR	990893	Identifier	r_cons_printf		987937	0					
ANR	990894	ArgumentList	"""%s"""		987937	1					
ANR	990895	Argument	"""%s"""		987937	0					
ANR	990896	PrimaryExpression	"""%s"""		987937	0					
ANR	990897	Argument	s		987937	1					
ANR	990898	Identifier	s		987937	0					
ANR	990899	ExpressionStatement	r_config_hold_restore ( hc )	5345:6:149890:149916	987937	20	True				
ANR	990900	CallExpression	r_config_hold_restore ( hc )		987937	0					
ANR	990901	Callee	r_config_hold_restore		987937	0					
ANR	990902	Identifier	r_config_hold_restore		987937	0					
ANR	990903	ArgumentList	hc		987937	1					
ANR	990904	Argument	hc		987937	0					
ANR	990905	Identifier	hc		987937	0					
ANR	990906	ExpressionStatement	r_config_hold_free ( hc )	5346:6:149924:149947	987937	21	True				
ANR	990907	CallExpression	r_config_hold_free ( hc )		987937	0					
ANR	990908	Callee	r_config_hold_free		987937	0					
ANR	990909	Identifier	r_config_hold_free		987937	0					
ANR	990910	ArgumentList	hc		987937	1					
ANR	990911	Argument	hc		987937	0					
ANR	990912	Identifier	hc		987937	0					
ANR	990913	IfStatement	if ( pj )		987937	9					
ANR	990914	Condition	pj	5349:9:149991:149992	987937	0	True				
ANR	990915	Identifier	pj		987937	0					
ANR	990916	CompoundStatement		505:13:13958:13958	987937	1					
ANR	990917	ExpressionStatement	pj_end ( pj )	5350:6:150003:150014	987937	0	True				
ANR	990918	CallExpression	pj_end ( pj )		987937	0					
ANR	990919	Callee	pj_end		987937	0					
ANR	990920	Identifier	pj_end		987937	0					
ANR	990921	ArgumentList	pj		987937	1					
ANR	990922	Argument	pj		987937	0					
ANR	990923	Identifier	pj		987937	0					
ANR	990924	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	5351:6:150022:150053	987937	1	True				
ANR	990925	CallExpression	r_cons_println ( pj_string ( pj ) )		987937	0					
ANR	990926	Callee	r_cons_println		987937	0					
ANR	990927	Identifier	r_cons_println		987937	0					
ANR	990928	ArgumentList	pj_string ( pj )		987937	1					
ANR	990929	Argument	pj_string ( pj )		987937	0					
ANR	990930	CallExpression	pj_string ( pj )		987937	0					
ANR	990931	Callee	pj_string		987937	0					
ANR	990932	Identifier	pj_string		987937	0					
ANR	990933	ArgumentList	pj		987937	1					
ANR	990934	Argument	pj		987937	0					
ANR	990935	Identifier	pj		987937	0					
ANR	990936	ExpressionStatement	pj_free ( pj )	5352:6:150061:150073	987937	2	True				
ANR	990937	CallExpression	pj_free ( pj )		987937	0					
ANR	990938	Callee	pj_free		987937	0					
ANR	990939	Identifier	pj_free		987937	0					
ANR	990940	ArgumentList	pj		987937	1					
ANR	990941	Argument	pj		987937	0					
ANR	990942	Identifier	pj		987937	0					
ANR	990943	ElseStatement	else		987937	0					
ANR	990944	IfStatement	if ( l != 0 )		987937	0					
ANR	990945	Condition	l != 0	5354:15:150097:150102	987937	0	True				
ANR	990946	EqualityExpression	l != 0		987937	0		!=			
ANR	990947	Identifier	l		987937	0					
ANR	990948	PrimaryExpression	0		987937	1					
ANR	990949	CompoundStatement		511:5:14075:14187	987937	1					
ANR	990950	IdentifierDeclStatement	"RAnalFunction * f = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM ) ;"	5355:5:150112:150224	987937	0	True				
ANR	990951	IdentifierDecl	"* f = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		987937	0					
ANR	990952	IdentifierDeclType	RAnalFunction *		987937	0					
ANR	990953	Identifier	f		987937	1					
ANR	990954	AssignmentExpression	"* f = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		987937	2		=			
ANR	990955	Identifier	f		987937	0					
ANR	990956	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		987937	1					
ANR	990957	Callee	r_anal_get_fcn_in		987937	0					
ANR	990958	Identifier	r_anal_get_fcn_in		987937	0					
ANR	990959	ArgumentList	core -> anal		987937	1					
ANR	990960	Argument	core -> anal		987937	0					
ANR	990961	PtrMemberAccess	core -> anal		987937	0					
ANR	990962	Identifier	core		987937	0					
ANR	990963	Identifier	anal		987937	1					
ANR	990964	Argument	core -> offset		987937	1					
ANR	990965	PtrMemberAccess	core -> offset		987937	0					
ANR	990966	Identifier	core		987937	0					
ANR	990967	Identifier	offset		987937	1					
ANR	990968	Argument	R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM		987937	2					
ANR	990969	InclusiveOrExpression	R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM		987937	0		|			
ANR	990970	Identifier	R_ANAL_FCN_TYPE_FCN		987937	0					
ANR	990971	Identifier	R_ANAL_FCN_TYPE_SYM		987937	1					
ANR	990972	IfStatement	if ( f )		987937	1					
ANR	990973	Condition	f	5357:9:150235:150235	987937	0	True				
ANR	990974	Identifier	f		987937	0					
ANR	990975	CompoundStatement		516:6:14287:14316	987937	1					
ANR	990976	IdentifierDeclStatement	ut32 bsz = core -> blocksize ;	5358:6:150246:150272	987937	0	True				
ANR	990977	IdentifierDecl	bsz = core -> blocksize		987937	0					
ANR	990978	IdentifierDeclType	ut32		987937	0					
ANR	990979	Identifier	bsz		987937	1					
ANR	990980	AssignmentExpression	bsz = core -> blocksize		987937	2		=			
ANR	990981	Identifier	bsz		987937	0					
ANR	990982	PtrMemberAccess	core -> blocksize		987937	1					
ANR	990983	Identifier	core		987937	0					
ANR	990984	Identifier	blocksize		987937	1					
ANR	990985	IdentifierDeclStatement	int fsz = r_anal_fcn_size ( f ) ;	5360:6:150324:150353	987937	1	True				
ANR	990986	IdentifierDecl	fsz = r_anal_fcn_size ( f )		987937	0					
ANR	990987	IdentifierDeclType	int		987937	0					
ANR	990988	Identifier	fsz		987937	1					
ANR	990989	AssignmentExpression	fsz = r_anal_fcn_size ( f )		987937	2		=			
ANR	990990	Identifier	fsz		987937	0					
ANR	990991	CallExpression	r_anal_fcn_size ( f )		987937	1					
ANR	990992	Callee	r_anal_fcn_size		987937	0					
ANR	990993	Identifier	r_anal_fcn_size		987937	0					
ANR	990994	ArgumentList	f		987937	1					
ANR	990995	Argument	f		987937	0					
ANR	990996	Identifier	f		987937	0					
ANR	990997	ExpressionStatement	"r_core_block_size ( core , fsz )"	5361:6:150385:150414	987937	2	True				
ANR	990998	CallExpression	"r_core_block_size ( core , fsz )"		987937	0					
ANR	990999	Callee	r_core_block_size		987937	0					
ANR	991000	Identifier	r_core_block_size		987937	0					
ANR	991001	ArgumentList	core		987937	1					
ANR	991002	Argument	core		987937	0					
ANR	991003	Identifier	core		987937	0					
ANR	991004	Argument	fsz		987937	1					
ANR	991005	Identifier	fsz		987937	0					
ANR	991006	ExpressionStatement	"r_core_print_disasm_instructions ( core , fsz , 0 )"	5362:6:150422:150469	987937	3	True				
ANR	991007	CallExpression	"r_core_print_disasm_instructions ( core , fsz , 0 )"		987937	0					
ANR	991008	Callee	r_core_print_disasm_instructions		987937	0					
ANR	991009	Identifier	r_core_print_disasm_instructions		987937	0					
ANR	991010	ArgumentList	core		987937	1					
ANR	991011	Argument	core		987937	0					
ANR	991012	Identifier	core		987937	0					
ANR	991013	Argument	fsz		987937	1					
ANR	991014	Identifier	fsz		987937	0					
ANR	991015	Argument	0		987937	2					
ANR	991016	PrimaryExpression	0		987937	0					
ANR	991017	ExpressionStatement	"r_core_block_size ( core , bsz )"	5363:6:150477:150506	987937	4	True				
ANR	991018	CallExpression	"r_core_block_size ( core , bsz )"		987937	0					
ANR	991019	Callee	r_core_block_size		987937	0					
ANR	991020	Identifier	r_core_block_size		987937	0					
ANR	991021	ArgumentList	core		987937	1					
ANR	991022	Argument	core		987937	0					
ANR	991023	Identifier	core		987937	0					
ANR	991024	Argument	bsz		987937	1					
ANR	991025	Identifier	bsz		987937	0					
ANR	991026	ElseStatement	else		987937	0					
ANR	991027	CompoundStatement		520:12:14483:14483	987937	0					
ANR	991028	ExpressionStatement	"r_core_print_disasm_instructions ( core , core -> blocksize , l )"	5365:6:150528:150594	987937	0	True				
ANR	991029	CallExpression	"r_core_print_disasm_instructions ( core , core -> blocksize , l )"		987937	0					
ANR	991030	Callee	r_core_print_disasm_instructions		987937	0					
ANR	991031	Identifier	r_core_print_disasm_instructions		987937	0					
ANR	991032	ArgumentList	core		987937	1					
ANR	991033	Argument	core		987937	0					
ANR	991034	Identifier	core		987937	0					
ANR	991035	Argument	core -> blocksize		987937	1					
ANR	991036	PtrMemberAccess	core -> blocksize		987937	0					
ANR	991037	Identifier	core		987937	0					
ANR	991038	Identifier	blocksize		987937	1					
ANR	991039	Argument	l		987937	2					
ANR	991040	Identifier	l		987937	0					
ANR	991041	BreakStatement	break ;	5369:3:150612:150617	987937	23	True				
ANR	991042	Label	case 'r' :	5370:2:150621:150629	987937	24	True				
ANR	991043	CompoundStatement		528:3:14610:14720	987937	25					
ANR	991044	IdentifierDeclStatement	"RAnalFunction * f = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM ) ;"	5372:3:150647:150757	987937	0	True				
ANR	991045	IdentifierDecl	"* f = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		987937	0					
ANR	991046	IdentifierDeclType	RAnalFunction *		987937	0					
ANR	991047	Identifier	f		987937	1					
ANR	991048	AssignmentExpression	"* f = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		987937	2		=			
ANR	991049	Identifier	f		987937	0					
ANR	991050	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		987937	1					
ANR	991051	Callee	r_anal_get_fcn_in		987937	0					
ANR	991052	Identifier	r_anal_get_fcn_in		987937	0					
ANR	991053	ArgumentList	core -> anal		987937	1					
ANR	991054	Argument	core -> anal		987937	0					
ANR	991055	PtrMemberAccess	core -> anal		987937	0					
ANR	991056	Identifier	core		987937	0					
ANR	991057	Identifier	anal		987937	1					
ANR	991058	Argument	core -> offset		987937	1					
ANR	991059	PtrMemberAccess	core -> offset		987937	0					
ANR	991060	Identifier	core		987937	0					
ANR	991061	Identifier	offset		987937	1					
ANR	991062	Argument	R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM		987937	2					
ANR	991063	InclusiveOrExpression	R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM		987937	0		|			
ANR	991064	Identifier	R_ANAL_FCN_TYPE_FCN		987937	0					
ANR	991065	Identifier	R_ANAL_FCN_TYPE_SYM		987937	1					
ANR	991066	IfStatement	if ( f )		987937	1					
ANR	991067	Condition	f	5374:7:150766:150766	987937	0	True				
ANR	991068	Identifier	f		987937	0					
ANR	991069	CompoundStatement		530:10:14732:14732	987937	1					
ANR	991070	ExpressionStatement	"func_walk_blocks ( core , f , input [ 2 ] , 'I' , input [ 2 ] == '.' )"	5375:4:150775:150833	987937	0	True				
ANR	991071	CallExpression	"func_walk_blocks ( core , f , input [ 2 ] , 'I' , input [ 2 ] == '.' )"		987937	0					
ANR	991072	Callee	func_walk_blocks		987937	0					
ANR	991073	Identifier	func_walk_blocks		987937	0					
ANR	991074	ArgumentList	core		987937	1					
ANR	991075	Argument	core		987937	0					
ANR	991076	Identifier	core		987937	0					
ANR	991077	Argument	f		987937	1					
ANR	991078	Identifier	f		987937	0					
ANR	991079	Argument	input [ 2 ]		987937	2					
ANR	991080	ArrayIndexing	input [ 2 ]		987937	0					
ANR	991081	Identifier	input		987937	0					
ANR	991082	PrimaryExpression	2		987937	1					
ANR	991083	Argument	'I'		987937	3					
ANR	991084	PrimaryExpression	'I'		987937	0					
ANR	991085	Argument	input [ 2 ] == '.'		987937	4					
ANR	991086	EqualityExpression	input [ 2 ] == '.'		987937	0		==			
ANR	991087	ArrayIndexing	input [ 2 ]		987937	0					
ANR	991088	Identifier	input		987937	0					
ANR	991089	PrimaryExpression	2		987937	1					
ANR	991090	PrimaryExpression	'.'		987937	1					
ANR	991091	ElseStatement	else		987937	0					
ANR	991092	CompoundStatement		532:10:14808:14808	987937	0					
ANR	991093	Statement	eprintf	5377:4:150851:150857	987937	0	True				
ANR	991094	Statement	(	5377:12:150859:150859	987937	1	True				
ANR	991095	Statement	"""Cannot find function at 0x%08"""	5377:13:150860:150890	987937	2	True				
ANR	991096	Statement	PFMT64x	5377:44:150891:150897	987937	3	True				
ANR	991097	Statement	"""\\n"""	5377:52:150899:150902	987937	4	True				
ANR	991098	Statement	","	5377:56:150903:150903	987937	5	True				
ANR	991099	Statement	core	5377:58:150905:150908	987937	6	True				
ANR	991100	Statement	->	5377:62:150909:150910	987937	7	True				
ANR	991101	Statement	offset	5377:64:150911:150916	987937	8	True				
ANR	991102	Statement	)	5377:70:150917:150917	987937	9	True				
ANR	991103	ExpressionStatement		5377:71:150918:150918	987937	10	True				
ANR	991104	ExpressionStatement	core -> num -> value = 0	5378:4:150924:150944	987937	11	True				
ANR	991105	AssignmentExpression	core -> num -> value = 0		987937	0		=			
ANR	991106	PtrMemberAccess	core -> num -> value		987937	0					
ANR	991107	PtrMemberAccess	core -> num		987937	0					
ANR	991108	Identifier	core		987937	0					
ANR	991109	Identifier	num		987937	1					
ANR	991110	Identifier	value		987937	1					
ANR	991111	PrimaryExpression	0		987937	1					
ANR	991112	BreakStatement	break ;	5381:2:150957:150962	987937	26	True				
ANR	991113	Label	case 'b' :	5382:2:150966:150974	987937	27	True				
ANR	991114	CompoundStatement		540:3:14955:15019	987937	28					
ANR	991115	IdentifierDeclStatement	"RAnalBlock * b = r_anal_bb_from_offset ( core -> anal , core -> offset ) ;"	5384:3:150992:151056	987937	0	True				
ANR	991116	IdentifierDecl	"* b = r_anal_bb_from_offset ( core -> anal , core -> offset )"		987937	0					
ANR	991117	IdentifierDeclType	RAnalBlock *		987937	0					
ANR	991118	Identifier	b		987937	1					
ANR	991119	AssignmentExpression	"* b = r_anal_bb_from_offset ( core -> anal , core -> offset )"		987937	2		=			
ANR	991120	Identifier	b		987937	0					
ANR	991121	CallExpression	"r_anal_bb_from_offset ( core -> anal , core -> offset )"		987937	1					
ANR	991122	Callee	r_anal_bb_from_offset		987937	0					
ANR	991123	Identifier	r_anal_bb_from_offset		987937	0					
ANR	991124	ArgumentList	core -> anal		987937	1					
ANR	991125	Argument	core -> anal		987937	0					
ANR	991126	PtrMemberAccess	core -> anal		987937	0					
ANR	991127	Identifier	core		987937	0					
ANR	991128	Identifier	anal		987937	1					
ANR	991129	Argument	core -> offset		987937	1					
ANR	991130	PtrMemberAccess	core -> offset		987937	0					
ANR	991131	Identifier	core		987937	0					
ANR	991132	Identifier	offset		987937	1					
ANR	991133	IfStatement	if ( b )		987937	1					
ANR	991134	Condition	b	5385:7:151065:151065	987937	0	True				
ANR	991135	Identifier	b		987937	0					
ANR	991136	CompoundStatement		541:10:15031:15031	987937	1					
ANR	991137	ExpressionStatement	"r_core_print_disasm_instructions ( core , b -> size - ( core -> offset - b -> addr ) , 0 )"	5386:5:151075:151153	987937	0	True				
ANR	991138	CallExpression	"r_core_print_disasm_instructions ( core , b -> size - ( core -> offset - b -> addr ) , 0 )"		987937	0					
ANR	991139	Callee	r_core_print_disasm_instructions		987937	0					
ANR	991140	Identifier	r_core_print_disasm_instructions		987937	0					
ANR	991141	ArgumentList	core		987937	1					
ANR	991142	Argument	core		987937	0					
ANR	991143	Identifier	core		987937	0					
ANR	991144	Argument	b -> size - ( core -> offset - b -> addr )		987937	1					
ANR	991145	AdditiveExpression	b -> size - ( core -> offset - b -> addr )		987937	0		-			
ANR	991146	PtrMemberAccess	b -> size		987937	0					
ANR	991147	Identifier	b		987937	0					
ANR	991148	Identifier	size		987937	1					
ANR	991149	AdditiveExpression	core -> offset - b -> addr		987937	1		-			
ANR	991150	PtrMemberAccess	core -> offset		987937	0					
ANR	991151	Identifier	core		987937	0					
ANR	991152	Identifier	offset		987937	1					
ANR	991153	PtrMemberAccess	b -> addr		987937	1					
ANR	991154	Identifier	b		987937	0					
ANR	991155	Identifier	addr		987937	1					
ANR	991156	Argument	0		987937	2					
ANR	991157	PrimaryExpression	0		987937	0					
ANR	991158	ElseStatement	else		987937	0					
ANR	991159	CompoundStatement		543:10:15128:15128	987937	0					
ANR	991160	Statement	eprintf	5388:4:151171:151177	987937	0	True				
ANR	991161	Statement	(	5388:12:151179:151179	987937	1	True				
ANR	991162	Statement	"""Cannot find function at 0x%08"""	5388:13:151180:151210	987937	2	True				
ANR	991163	Statement	PFMT64x	5388:44:151211:151217	987937	3	True				
ANR	991164	Statement	"""\\n"""	5388:52:151219:151222	987937	4	True				
ANR	991165	Statement	","	5388:56:151223:151223	987937	5	True				
ANR	991166	Statement	core	5388:58:151225:151228	987937	6	True				
ANR	991167	Statement	->	5388:62:151229:151230	987937	7	True				
ANR	991168	Statement	offset	5388:64:151231:151236	987937	8	True				
ANR	991169	Statement	)	5388:70:151237:151237	987937	9	True				
ANR	991170	ExpressionStatement		5388:71:151238:151238	987937	10	True				
ANR	991171	ExpressionStatement	core -> num -> value = 0	5389:4:151244:151264	987937	11	True				
ANR	991172	AssignmentExpression	core -> num -> value = 0		987937	0		=			
ANR	991173	PtrMemberAccess	core -> num -> value		987937	0					
ANR	991174	PtrMemberAccess	core -> num		987937	0					
ANR	991175	Identifier	core		987937	0					
ANR	991176	Identifier	num		987937	1					
ANR	991177	Identifier	value		987937	1					
ANR	991178	PrimaryExpression	0		987937	1					
ANR	991179	BreakStatement	break ;	5392:2:151277:151282	987937	29	True				
ANR	991180	Label	default :	5393:2:151286:151293	987937	30	True				
ANR	991181	Identifier	default		987937	0					
ANR	991182	IfStatement	if ( l != 0 )		987937	31					
ANR	991183	Condition	l != 0	5394:7:151310:151315	987937	0	True				
ANR	991184	EqualityExpression	l != 0		987937	0		!=			
ANR	991185	Identifier	l		987937	0					
ANR	991186	PrimaryExpression	0		987937	1					
ANR	991187	CompoundStatement		550:15:15281:15281	987937	1					
ANR	991188	ExpressionStatement	"r_core_print_disasm_instructions ( core , 0 , l )"	5395:4:151324:151369	987937	0	True				
ANR	991189	CallExpression	"r_core_print_disasm_instructions ( core , 0 , l )"		987937	0					
ANR	991190	Callee	r_core_print_disasm_instructions		987937	0					
ANR	991191	Identifier	r_core_print_disasm_instructions		987937	0					
ANR	991192	ArgumentList	core		987937	1					
ANR	991193	Argument	core		987937	0					
ANR	991194	Identifier	core		987937	0					
ANR	991195	Argument	0		987937	1					
ANR	991196	PrimaryExpression	0		987937	0					
ANR	991197	Argument	l		987937	2					
ANR	991198	Identifier	l		987937	0					
ANR	991199	BreakStatement	break ;	5397:3:151379:151384	987937	32	True				
ANR	991200	GotoStatement	goto beach ;	5399:2:151392:151402	987937	37	True				
ANR	991201	Identifier	beach		987937	0					
ANR	991202	Label	case 'D' :	5400:1:151405:151413	987937	38	True				
ANR	991203	Label	case 'd' :	5401:1:151424:151432	987937	39	True				
ANR	991204	CompoundStatement		595:2:16332:16353	987937	40					
ANR	991205	IdentifierDeclStatement	ut64 use_blocksize = core -> blocksize ;	5403:2:151447:151483	987937	0	True				
ANR	991206	IdentifierDecl	use_blocksize = core -> blocksize		987937	0					
ANR	991207	IdentifierDeclType	ut64		987937	0					
ANR	991208	Identifier	use_blocksize		987937	1					
ANR	991209	AssignmentExpression	use_blocksize = core -> blocksize		987937	2		=			
ANR	991210	Identifier	use_blocksize		987937	0					
ANR	991211	PtrMemberAccess	core -> blocksize		987937	1					
ANR	991212	Identifier	core		987937	0					
ANR	991213	Identifier	blocksize		987937	1					
ANR	991214	IdentifierDeclStatement	ut8 bw_disassemble = false ;	5404:2:151487:151513	987937	1	True				
ANR	991215	IdentifierDecl	bw_disassemble = false		987937	0					
ANR	991216	IdentifierDeclType	ut8		987937	0					
ANR	991217	Identifier	bw_disassemble		987937	1					
ANR	991218	AssignmentExpression	bw_disassemble = false		987937	2		=			
ANR	991219	Identifier	false		987937	0					
ANR	991220	Identifier	false		987937	1					
ANR	991221	IdentifierDeclStatement	"ut32 pd_result = false , processed_cmd = false ;"	5405:2:151517:151562	987937	2	True				
ANR	991222	IdentifierDecl	pd_result = false		987937	0					
ANR	991223	IdentifierDeclType	ut32		987937	0					
ANR	991224	Identifier	pd_result		987937	1					
ANR	991225	AssignmentExpression	pd_result = false		987937	2		=			
ANR	991226	Identifier	false		987937	0					
ANR	991227	Identifier	false		987937	1					
ANR	991228	IdentifierDecl	processed_cmd = false		987937	1					
ANR	991229	IdentifierDeclType	ut32		987937	0					
ANR	991230	Identifier	processed_cmd		987937	1					
ANR	991231	AssignmentExpression	processed_cmd = false		987937	2		=			
ANR	991232	Identifier	false		987937	0					
ANR	991233	Identifier	false		987937	1					
ANR	991234	IdentifierDeclStatement	bool formatted_json = false ;	5406:2:151566:151593	987937	3	True				
ANR	991235	IdentifierDecl	formatted_json = false		987937	0					
ANR	991236	IdentifierDeclType	bool		987937	0					
ANR	991237	Identifier	formatted_json		987937	1					
ANR	991238	AssignmentExpression	formatted_json = false		987937	2		=			
ANR	991239	Identifier	false		987937	0					
ANR	991240	Identifier	false		987937	1					
ANR	991241	IfStatement	if ( input [ 1 ] && input [ 2 ] )		987937	4					
ANR	991242	Condition	input [ 1 ] && input [ 2 ]	5407:6:151601:151620	987937	0	True				
ANR	991243	AndExpression	input [ 1 ] && input [ 2 ]		987937	0		&&			
ANR	991244	ArrayIndexing	input [ 1 ]		987937	0					
ANR	991245	Identifier	input		987937	0					
ANR	991246	PrimaryExpression	1		987937	1					
ANR	991247	ArrayIndexing	input [ 2 ]		987937	1					
ANR	991248	Identifier	input		987937	0					
ANR	991249	PrimaryExpression	2		987937	1					
ANR	991250	CompoundStatement		563:28:15586:15586	987937	1					
ANR	991251	IfStatement	"if ( ! strncmp ( input + 1 , ""--"" , 2 ) )"		987937	0					
ANR	991252	Condition	"! strncmp ( input + 1 , ""--"" , 2 )"	5409:7:151663:151691	987937	0	True				
ANR	991253	UnaryOperationExpression	"! strncmp ( input + 1 , ""--"" , 2 )"		987937	0					
ANR	991254	UnaryOperator	!		987937	0					
ANR	991255	CallExpression	"strncmp ( input + 1 , ""--"" , 2 )"		987937	1					
ANR	991256	Callee	strncmp		987937	0					
ANR	991257	Identifier	strncmp		987937	0					
ANR	991258	ArgumentList	input + 1		987937	1					
ANR	991259	Argument	input + 1		987937	0					
ANR	991260	AdditiveExpression	input + 1		987937	0		+			
ANR	991261	Identifier	input		987937	0					
ANR	991262	PrimaryExpression	1		987937	1					
ANR	991263	Argument	"""--"""		987937	1					
ANR	991264	PrimaryExpression	"""--"""		987937	0					
ANR	991265	Argument	2		987937	2					
ANR	991266	PrimaryExpression	2		987937	0					
ANR	991267	CompoundStatement		566:4:15663:15704	987937	1					
ANR	991268	IdentifierDeclStatement	"char * offs = r_str_newf ( ""%s"" , input + 2 ) ;"	5410:4:151700:151741	987937	0	True				
ANR	991269	IdentifierDecl	"* offs = r_str_newf ( ""%s"" , input + 2 )"		987937	0					
ANR	991270	IdentifierDeclType	char *		987937	0					
ANR	991271	Identifier	offs		987937	1					
ANR	991272	AssignmentExpression	"* offs = r_str_newf ( ""%s"" , input + 2 )"		987937	2		=			
ANR	991273	Identifier	offs		987937	0					
ANR	991274	CallExpression	"r_str_newf ( ""%s"" , input + 2 )"		987937	1					
ANR	991275	Callee	r_str_newf		987937	0					
ANR	991276	Identifier	r_str_newf		987937	0					
ANR	991277	ArgumentList	"""%s"""		987937	1					
ANR	991278	Argument	"""%s"""		987937	0					
ANR	991279	PrimaryExpression	"""%s"""		987937	0					
ANR	991280	Argument	input + 2		987937	1					
ANR	991281	AdditiveExpression	input + 2		987937	0		+			
ANR	991282	Identifier	input		987937	0					
ANR	991283	PrimaryExpression	2		987937	1					
ANR	991284	IfStatement	if ( offs )		987937	1					
ANR	991285	Condition	offs	5411:8:151751:151754	987937	0	True				
ANR	991286	Identifier	offs		987937	0					
ANR	991287	CompoundStatement		569:5:15772:15781	987937	1					
ANR	991288	IdentifierDeclStatement	"ut64 sz = r_num_math ( core -> num , offs ) ;"	5412:5:151764:151802	987937	0	True				
ANR	991289	IdentifierDecl	"sz = r_num_math ( core -> num , offs )"		987937	0					
ANR	991290	IdentifierDeclType	ut64		987937	0					
ANR	991291	Identifier	sz		987937	1					
ANR	991292	AssignmentExpression	"sz = r_num_math ( core -> num , offs )"		987937	2		=			
ANR	991293	Identifier	sz		987937	0					
ANR	991294	CallExpression	"r_num_math ( core -> num , offs )"		987937	1					
ANR	991295	Callee	r_num_math		987937	0					
ANR	991296	Identifier	r_num_math		987937	0					
ANR	991297	ArgumentList	core -> num		987937	1					
ANR	991298	Argument	core -> num		987937	0					
ANR	991299	PtrMemberAccess	core -> num		987937	0					
ANR	991300	Identifier	core		987937	0					
ANR	991301	Identifier	num		987937	1					
ANR	991302	Argument	offs		987937	1					
ANR	991303	Identifier	offs		987937	0					
ANR	991304	IdentifierDeclStatement	char * fmt ;	5413:5:151809:151818	987937	1	True				
ANR	991305	IdentifierDecl	* fmt		987937	0					
ANR	991306	IdentifierDeclType	char *		987937	0					
ANR	991307	Identifier	fmt		987937	1					
ANR	991308	IfStatement	if ( ( ( st64 ) sz * - 1 ) > core -> offset )		987937	2					
ANR	991309	Condition	( ( st64 ) sz * - 1 ) > core -> offset	5414:9:151829:151858	987937	0	True				
ANR	991310	RelationalExpression	( ( st64 ) sz * - 1 ) > core -> offset		987937	0		>			
ANR	991311	MultiplicativeExpression	( st64 ) sz * - 1		987937	0		*			
ANR	991312	CastExpression	( st64 ) sz		987937	0					
ANR	991313	CastTarget	st64		987937	0					
ANR	991314	Identifier	sz		987937	1					
ANR	991315	UnaryOperationExpression	- 1		987937	1					
ANR	991316	UnaryOperator	-		987937	0					
ANR	991317	PrimaryExpression	1		987937	1					
ANR	991318	PtrMemberAccess	core -> offset		987937	1					
ANR	991319	Identifier	core		987937	0					
ANR	991320	Identifier	offset		987937	1					
ANR	991321	CompoundStatement		570:41:15824:15824	987937	1					
ANR	991322	Statement	fmt	5417:6:151955:151957	987937	0	True				
ANR	991323	Statement	=	5417:10:151959:151959	987937	1	True				
ANR	991324	Statement	r_str_newf	5417:12:151961:151970	987937	2	True				
ANR	991325	Statement	(	5417:23:151972:151972	987937	3	True				
ANR	991326	Statement	"""d %"""	5417:24:151973:151977	987937	4	True				
ANR	991327	Statement	PFMT64d	5417:29:151978:151984	987937	5	True				
ANR	991328	Statement	","	5417:36:151985:151985	987937	6	True				
ANR	991329	Statement	-	5417:38:151987:151987	987937	7	True				
ANR	991330	Statement	1	5417:39:151988:151988	987937	8	True				
ANR	991331	Statement	*	5417:41:151990:151990	987937	9	True				
ANR	991332	Statement	core	5417:43:151992:151995	987937	10	True				
ANR	991333	Statement	->	5417:47:151996:151997	987937	11	True				
ANR	991334	Statement	offset	5417:49:151998:152003	987937	12	True				
ANR	991335	Statement	)	5417:55:152004:152004	987937	13	True				
ANR	991336	ExpressionStatement		5417:56:152005:152005	987937	14	True				
ANR	991337	ElseStatement	else		987937	0					
ANR	991338	CompoundStatement		574:12:15982:15982	987937	0					
ANR	991339	ExpressionStatement	"fmt = r_str_newf ( ""d %s"" , input + 2 )"	5419:6:152027:152063	987937	0	True				
ANR	991340	AssignmentExpression	"fmt = r_str_newf ( ""d %s"" , input + 2 )"		987937	0		=			
ANR	991341	Identifier	fmt		987937	0					
ANR	991342	CallExpression	"r_str_newf ( ""d %s"" , input + 2 )"		987937	1					
ANR	991343	Callee	r_str_newf		987937	0					
ANR	991344	Identifier	r_str_newf		987937	0					
ANR	991345	ArgumentList	"""d %s"""		987937	1					
ANR	991346	Argument	"""d %s"""		987937	0					
ANR	991347	PrimaryExpression	"""d %s"""		987937	0					
ANR	991348	Argument	input + 2		987937	1					
ANR	991349	AdditiveExpression	input + 2		987937	0		+			
ANR	991350	Identifier	input		987937	0					
ANR	991351	PrimaryExpression	2		987937	1					
ANR	991352	IfStatement	if ( fmt )		987937	3					
ANR	991353	Condition	fmt	5421:9:152081:152083	987937	0	True				
ANR	991354	Identifier	fmt		987937	0					
ANR	991355	CompoundStatement		577:14:16049:16049	987937	1					
ANR	991356	ExpressionStatement	"cmd_print ( core , fmt )"	5422:6:152094:152115	987937	0	True				
ANR	991357	CallExpression	"cmd_print ( core , fmt )"		987937	0					
ANR	991358	Callee	cmd_print		987937	0					
ANR	991359	Identifier	cmd_print		987937	0					
ANR	991360	ArgumentList	core		987937	1					
ANR	991361	Argument	core		987937	0					
ANR	991362	Identifier	core		987937	0					
ANR	991363	Argument	fmt		987937	1					
ANR	991364	Identifier	fmt		987937	0					
ANR	991365	ExpressionStatement	"strcpy ( fmt + 2 , input + 3 )"	5423:6:152123:152150	987937	1	True				
ANR	991366	CallExpression	"strcpy ( fmt + 2 , input + 3 )"		987937	0					
ANR	991367	Callee	strcpy		987937	0					
ANR	991368	Identifier	strcpy		987937	0					
ANR	991369	ArgumentList	fmt + 2		987937	1					
ANR	991370	Argument	fmt + 2		987937	0					
ANR	991371	AdditiveExpression	fmt + 2		987937	0		+			
ANR	991372	Identifier	fmt		987937	0					
ANR	991373	PrimaryExpression	2		987937	1					
ANR	991374	Argument	input + 3		987937	1					
ANR	991375	AdditiveExpression	input + 3		987937	0		+			
ANR	991376	Identifier	input		987937	0					
ANR	991377	PrimaryExpression	3		987937	1					
ANR	991378	ExpressionStatement	"cmd_print ( core , fmt )"	5424:6:152158:152179	987937	2	True				
ANR	991379	CallExpression	"cmd_print ( core , fmt )"		987937	0					
ANR	991380	Callee	cmd_print		987937	0					
ANR	991381	Identifier	cmd_print		987937	0					
ANR	991382	ArgumentList	core		987937	1					
ANR	991383	Argument	core		987937	0					
ANR	991384	Identifier	core		987937	0					
ANR	991385	Argument	fmt		987937	1					
ANR	991386	Identifier	fmt		987937	0					
ANR	991387	ExpressionStatement	free ( fmt )	5425:6:152187:152197	987937	3	True				
ANR	991388	CallExpression	free ( fmt )		987937	0					
ANR	991389	Callee	free		987937	0					
ANR	991390	Identifier	free		987937	0					
ANR	991391	ArgumentList	fmt		987937	1					
ANR	991392	Argument	fmt		987937	0					
ANR	991393	Identifier	fmt		987937	0					
ANR	991394	ExpressionStatement	free ( offs )	5427:5:152211:152222	987937	4	True				
ANR	991395	CallExpression	free ( offs )		987937	0					
ANR	991396	Callee	free		987937	0					
ANR	991397	Identifier	free		987937	0					
ANR	991398	ArgumentList	offs		987937	1					
ANR	991399	Argument	offs		987937	0					
ANR	991400	Identifier	offs		987937	0					
ANR	991401	ExpressionStatement	ret = 0	5429:4:152234:152241	987937	2	True				
ANR	991402	AssignmentExpression	ret = 0		987937	0		=			
ANR	991403	Identifier	ret		987937	0					
ANR	991404	PrimaryExpression	0		987937	1					
ANR	991405	GotoStatement	goto beach ;	5430:4:152247:152257	987937	3	True				
ANR	991406	Identifier	beach		987937	0					
ANR	991407	IfStatement	if ( input [ 1 ] == 'x' )		987937	5					
ANR	991408	Condition	input [ 1 ] == 'x'	5434:6:152275:152289	987937	0	True				
ANR	991409	EqualityExpression	input [ 1 ] == 'x'		987937	0		==			
ANR	991410	ArrayIndexing	input [ 1 ]		987937	0					
ANR	991411	Identifier	input		987937	0					
ANR	991412	PrimaryExpression	1		987937	1					
ANR	991413	PrimaryExpression	'x'		987937	1					
ANR	991414	CompoundStatement		590:23:16255:16255	987937	1					
ANR	991415	ExpressionStatement	"__cmd_pad ( core , r_str_trim_ro ( input + 2 ) )"	5435:3:152304:152347	987937	0	True				
ANR	991416	CallExpression	"__cmd_pad ( core , r_str_trim_ro ( input + 2 ) )"		987937	0					
ANR	991417	Callee	__cmd_pad		987937	0					
ANR	991418	Identifier	__cmd_pad		987937	0					
ANR	991419	ArgumentList	core		987937	1					
ANR	991420	Argument	core		987937	0					
ANR	991421	Identifier	core		987937	0					
ANR	991422	Argument	r_str_trim_ro ( input + 2 )		987937	1					
ANR	991423	CallExpression	r_str_trim_ro ( input + 2 )		987937	0					
ANR	991424	Callee	r_str_trim_ro		987937	0					
ANR	991425	Identifier	r_str_trim_ro		987937	0					
ANR	991426	ArgumentList	input + 2		987937	1					
ANR	991427	Argument	input + 2		987937	0					
ANR	991428	AdditiveExpression	input + 2		987937	0		+			
ANR	991429	Identifier	input		987937	0					
ANR	991430	PrimaryExpression	2		987937	1					
ANR	991431	ReturnStatement	return 0 ;	5436:3:152352:152360	987937	1	True				
ANR	991432	PrimaryExpression	0		987937	0					
ANR	991433	IdentifierDeclStatement	const char * sp = NULL ;	5439:2:152369:152390	987937	6	True				
ANR	991434	IdentifierDecl	* sp = NULL		987937	0					
ANR	991435	IdentifierDeclType	const char *		987937	0					
ANR	991436	Identifier	sp		987937	1					
ANR	991437	AssignmentExpression	* sp = NULL		987937	2		=			
ANR	991438	Identifier	NULL		987937	0					
ANR	991439	Identifier	NULL		987937	1					
ANR	991440	IfStatement	if ( input [ 1 ] == '.' )		987937	7					
ANR	991441	Condition	input [ 1 ] == '.'	5440:6:152398:152412	987937	0	True				
ANR	991442	EqualityExpression	input [ 1 ] == '.'		987937	0		==			
ANR	991443	ArrayIndexing	input [ 1 ]		987937	0					
ANR	991444	Identifier	input		987937	0					
ANR	991445	PrimaryExpression	1		987937	1					
ANR	991446	PrimaryExpression	'.'		987937	1					
ANR	991447	CompoundStatement		596:23:16378:16378	987937	1					
ANR	991448	ExpressionStatement	sp = input + 2	5441:3:152420:152434	987937	0	True				
ANR	991449	AssignmentExpression	sp = input + 2		987937	0		=			
ANR	991450	Identifier	sp		987937	0					
ANR	991451	AdditiveExpression	input + 2		987937	1		+			
ANR	991452	Identifier	input		987937	0					
ANR	991453	PrimaryExpression	2		987937	1					
ANR	991454	ElseStatement	else		987937	0					
ANR	991455	CompoundStatement		598:9:16408:16408	987937	0					
ANR	991456	ExpressionStatement	"sp = strchr ( input + 1 , ' ' )"	5443:3:152450:152478	987937	0	True				
ANR	991457	AssignmentExpression	"sp = strchr ( input + 1 , ' ' )"		987937	0		=			
ANR	991458	Identifier	sp		987937	0					
ANR	991459	CallExpression	"strchr ( input + 1 , ' ' )"		987937	1					
ANR	991460	Callee	strchr		987937	0					
ANR	991461	Identifier	strchr		987937	0					
ANR	991462	ArgumentList	input + 1		987937	1					
ANR	991463	Argument	input + 1		987937	0					
ANR	991464	AdditiveExpression	input + 1		987937	0		+			
ANR	991465	Identifier	input		987937	0					
ANR	991466	PrimaryExpression	1		987937	1					
ANR	991467	Argument	' '		987937	1					
ANR	991468	PrimaryExpression	' '		987937	0					
ANR	991469	IfStatement	if ( ! sp && ( input [ 1 ] == '-' || IS_DIGIT ( input [ 1 ] ) ) )		987937	8					
ANR	991470	Condition	! sp && ( input [ 1 ] == '-' || IS_DIGIT ( input [ 1 ] ) )	5445:6:152490:152536	987937	0	True				
ANR	991471	AndExpression	! sp && ( input [ 1 ] == '-' || IS_DIGIT ( input [ 1 ] ) )		987937	0		&&			
ANR	991472	UnaryOperationExpression	! sp		987937	0					
ANR	991473	UnaryOperator	!		987937	0					
ANR	991474	Identifier	sp		987937	1					
ANR	991475	OrExpression	input [ 1 ] == '-' || IS_DIGIT ( input [ 1 ] )		987937	1		||			
ANR	991476	EqualityExpression	input [ 1 ] == '-'		987937	0		==			
ANR	991477	ArrayIndexing	input [ 1 ]		987937	0					
ANR	991478	Identifier	input		987937	0					
ANR	991479	PrimaryExpression	1		987937	1					
ANR	991480	PrimaryExpression	'-'		987937	1					
ANR	991481	CallExpression	IS_DIGIT ( input [ 1 ] )		987937	1					
ANR	991482	Callee	IS_DIGIT		987937	0					
ANR	991483	Identifier	IS_DIGIT		987937	0					
ANR	991484	ArgumentList	input [ 1 ]		987937	1					
ANR	991485	Argument	input [ 1 ]		987937	0					
ANR	991486	ArrayIndexing	input [ 1 ]		987937	0					
ANR	991487	Identifier	input		987937	0					
ANR	991488	PrimaryExpression	1		987937	1					
ANR	991489	CompoundStatement		601:55:16502:16502	987937	1					
ANR	991490	ExpressionStatement	sp = input + 1	5446:3:152544:152558	987937	0	True				
ANR	991491	AssignmentExpression	sp = input + 1		987937	0		=			
ANR	991492	Identifier	sp		987937	0					
ANR	991493	AdditiveExpression	input + 1		987937	1		+			
ANR	991494	Identifier	input		987937	0					
ANR	991495	PrimaryExpression	1		987937	1					
ANR	991496	IfStatement	if ( sp )		987937	9					
ANR	991497	Condition	sp	5448:6:152570:152571	987937	0	True				
ANR	991498	Identifier	sp		987937	0					
ANR	991499	CompoundStatement		605:3:16542:16598	987937	1					
ANR	991500	IdentifierDeclStatement	"int n = ( int ) r_num_math ( core -> num , r_str_trim_ro ( sp ) ) ;"	5449:3:152579:152635	987937	0	True				
ANR	991501	IdentifierDecl	"n = ( int ) r_num_math ( core -> num , r_str_trim_ro ( sp ) )"		987937	0					
ANR	991502	IdentifierDeclType	int		987937	0					
ANR	991503	Identifier	n		987937	1					
ANR	991504	AssignmentExpression	"n = ( int ) r_num_math ( core -> num , r_str_trim_ro ( sp ) )"		987937	2		=			
ANR	991505	Identifier	n		987937	0					
ANR	991506	CastExpression	"( int ) r_num_math ( core -> num , r_str_trim_ro ( sp ) )"		987937	1					
ANR	991507	CastTarget	int		987937	0					
ANR	991508	CallExpression	"r_num_math ( core -> num , r_str_trim_ro ( sp ) )"		987937	1					
ANR	991509	Callee	r_num_math		987937	0					
ANR	991510	Identifier	r_num_math		987937	0					
ANR	991511	ArgumentList	core -> num		987937	1					
ANR	991512	Argument	core -> num		987937	0					
ANR	991513	PtrMemberAccess	core -> num		987937	0					
ANR	991514	Identifier	core		987937	0					
ANR	991515	Identifier	num		987937	1					
ANR	991516	Argument	r_str_trim_ro ( sp )		987937	1					
ANR	991517	CallExpression	r_str_trim_ro ( sp )		987937	0					
ANR	991518	Callee	r_str_trim_ro		987937	0					
ANR	991519	Identifier	r_str_trim_ro		987937	0					
ANR	991520	ArgumentList	sp		987937	1					
ANR	991521	Argument	sp		987937	0					
ANR	991522	Identifier	sp		987937	0					
ANR	991523	IfStatement	if ( ! n )		987937	1					
ANR	991524	Condition	! n	5450:7:152644:152645	987937	0	True				
ANR	991525	UnaryOperationExpression	! n		987937	0					
ANR	991526	UnaryOperator	!		987937	0					
ANR	991527	Identifier	n		987937	1					
ANR	991528	CompoundStatement		606:11:16611:16611	987937	1					
ANR	991529	GotoStatement	goto beach ;	5451:4:152654:152664	987937	0	True				
ANR	991530	Identifier	beach		987937	0					
ANR	991531	ExpressionStatement	use_blocksize = n	5453:3:152674:152691	987937	2	True				
ANR	991532	AssignmentExpression	use_blocksize = n		987937	0		=			
ANR	991533	Identifier	use_blocksize		987937	0					
ANR	991534	Identifier	n		987937	1					
ANR	991535	IfStatement	if ( core -> blocksize_max < use_blocksize && ( int ) use_blocksize < - core -> blocksize_max )		987937	10					
ANR	991536	Condition	core -> blocksize_max < use_blocksize && ( int ) use_blocksize < - core -> blocksize_max	5456:6:152704:152784	987937	0	True				
ANR	991537	AndExpression	core -> blocksize_max < use_blocksize && ( int ) use_blocksize < - core -> blocksize_max		987937	0		&&			
ANR	991538	RelationalExpression	core -> blocksize_max < use_blocksize		987937	0		<			
ANR	991539	PtrMemberAccess	core -> blocksize_max		987937	0					
ANR	991540	Identifier	core		987937	0					
ANR	991541	Identifier	blocksize_max		987937	1					
ANR	991542	Identifier	use_blocksize		987937	1					
ANR	991543	RelationalExpression	( int ) use_blocksize < - core -> blocksize_max		987937	1		<			
ANR	991544	CastExpression	( int ) use_blocksize		987937	0					
ANR	991545	CastTarget	int		987937	0					
ANR	991546	Identifier	use_blocksize		987937	1					
ANR	991547	UnaryOperationExpression	- core -> blocksize_max		987937	1					
ANR	991548	UnaryOperator	-		987937	0					
ANR	991549	PtrMemberAccess	core -> blocksize_max		987937	1					
ANR	991550	Identifier	core		987937	0					
ANR	991551	Identifier	blocksize_max		987937	1					
ANR	991552	CompoundStatement		612:89:16750:16750	987937	1					
ANR	991553	Statement	eprintf	5457:3:152792:152798	987937	0	True				
ANR	991554	Statement	(	5457:11:152800:152800	987937	1	True				
ANR	991555	Statement	"""This block size is too big (%"""	5457:12:152801:152831	987937	2	True				
ANR	991556	Statement	PFMT64u	5457:43:152832:152838	987937	3	True				
ANR	991557	Statement	"""<%"""	5457:51:152840:152843	987937	4	True				
ANR	991558	Statement	PFMT64u	5457:55:152844:152850	987937	5	True				
ANR	991559	Statement	"""). Did you mean 'p%c @ 0x%08"""	5457:63:152852:152881	987937	6	True				
ANR	991560	Statement	PFMT64x	5457:93:152882:152888	987937	7	True				
ANR	991561	Statement	"""' instead?\\n"""	5457:101:152890:152903	987937	8	True				
ANR	991562	Statement	","	5457:115:152904:152904	987937	9	True				
ANR	991563	Statement	(	5458:4:152910:152910	987937	10	True				
ANR	991564	Statement	ut64	5458:5:152911:152914	987937	11	True				
ANR	991565	Statement	)	5458:9:152915:152915	987937	12	True				
ANR	991566	Statement	core	5458:11:152917:152920	987937	13	True				
ANR	991567	Statement	->	5458:15:152921:152922	987937	14	True				
ANR	991568	Statement	blocksize_max	5458:17:152923:152935	987937	15	True				
ANR	991569	Statement	","	5458:30:152936:152936	987937	16	True				
ANR	991570	Statement	(	5458:32:152938:152938	987937	17	True				
ANR	991571	Statement	ut64	5458:33:152939:152942	987937	18	True				
ANR	991572	Statement	)	5458:37:152943:152943	987937	19	True				
ANR	991573	Statement	use_blocksize	5458:39:152945:152957	987937	20	True				
ANR	991574	Statement	","	5458:52:152958:152958	987937	21	True				
ANR	991575	Statement	input	5458:54:152960:152964	987937	22	True				
ANR	991576	Statement	[	5458:59:152965:152965	987937	23	True				
ANR	991577	Statement	0	5458:60:152966:152966	987937	24	True				
ANR	991578	Statement	]	5458:61:152967:152967	987937	25	True				
ANR	991579	Statement	","	5458:62:152968:152968	987937	26	True				
ANR	991580	Statement	(	5458:64:152970:152970	987937	27	True				
ANR	991581	Statement	ut64	5458:65:152971:152974	987937	28	True				
ANR	991582	Statement	)	5458:69:152975:152975	987937	29	True				
ANR	991583	Statement	use_blocksize	5458:71:152977:152989	987937	30	True				
ANR	991584	Statement	)	5458:84:152990:152990	987937	31	True				
ANR	991585	ExpressionStatement		5458:85:152991:152991	987937	32	True				
ANR	991586	GotoStatement	goto beach ;	5459:3:152996:153006	987937	33	True				
ANR	991587	Identifier	beach		987937	0					
ANR	991588	ElseStatement	else		987937	0					
ANR	991589	IfStatement	if ( core -> blocksize_max < use_blocksize && ( int ) use_blocksize > - ( int ) core -> blocksize_max )		987937	0					
ANR	991590	Condition	core -> blocksize_max < use_blocksize && ( int ) use_blocksize > - ( int ) core -> blocksize_max	5460:13:153021:153106	987937	0	True				
ANR	991591	AndExpression	core -> blocksize_max < use_blocksize && ( int ) use_blocksize > - ( int ) core -> blocksize_max		987937	0		&&			
ANR	991592	RelationalExpression	core -> blocksize_max < use_blocksize		987937	0		<			
ANR	991593	PtrMemberAccess	core -> blocksize_max		987937	0					
ANR	991594	Identifier	core		987937	0					
ANR	991595	Identifier	blocksize_max		987937	1					
ANR	991596	Identifier	use_blocksize		987937	1					
ANR	991597	RelationalExpression	( int ) use_blocksize > - ( int ) core -> blocksize_max		987937	1		>			
ANR	991598	CastExpression	( int ) use_blocksize		987937	0					
ANR	991599	CastTarget	int		987937	0					
ANR	991600	Identifier	use_blocksize		987937	1					
ANR	991601	UnaryOperationExpression	- ( int ) core -> blocksize_max		987937	1					
ANR	991602	UnaryOperator	-		987937	0					
ANR	991603	CastExpression	( int ) core -> blocksize_max		987937	1					
ANR	991604	CastTarget	int		987937	0					
ANR	991605	PtrMemberAccess	core -> blocksize_max		987937	1					
ANR	991606	Identifier	core		987937	0					
ANR	991607	Identifier	blocksize_max		987937	1					
ANR	991608	CompoundStatement		616:101:17072:17072	987937	1					
ANR	991609	ExpressionStatement	bw_disassemble = true	5461:3:153114:153135	987937	0	True				
ANR	991610	AssignmentExpression	bw_disassemble = true		987937	0		=			
ANR	991611	Identifier	bw_disassemble		987937	0					
ANR	991612	Identifier	true		987937	1					
ANR	991613	ExpressionStatement	l = use_blocksize	5462:3:153140:153157	987937	1	True				
ANR	991614	AssignmentExpression	l = use_blocksize		987937	0		=			
ANR	991615	Identifier	l		987937	0					
ANR	991616	Identifier	use_blocksize		987937	1					
ANR	991617	ExpressionStatement	use_blocksize = - use_blocksize	5463:3:153174:153204	987937	2	True				
ANR	991618	AssignmentExpression	use_blocksize = - use_blocksize		987937	0		=			
ANR	991619	Identifier	use_blocksize		987937	0					
ANR	991620	UnaryOperationExpression	- use_blocksize		987937	1					
ANR	991621	UnaryOperator	-		987937	0					
ANR	991622	Identifier	use_blocksize		987937	1					
ANR	991623	ElseStatement	else		987937	0					
ANR	991624	CompoundStatement		620:9:17178:17178	987937	0					
ANR	991625	ExpressionStatement	l = use_blocksize	5465:3:153220:153237	987937	0	True				
ANR	991626	AssignmentExpression	l = use_blocksize		987937	0		=			
ANR	991627	Identifier	l		987937	0					
ANR	991628	Identifier	use_blocksize		987937	1					
ANR	991629	ExpressionStatement	r_core_block_read ( core )	5468:2:153300:153324	987937	11	True				
ANR	991630	CallExpression	r_core_block_read ( core )		987937	0					
ANR	991631	Callee	r_core_block_read		987937	0					
ANR	991632	Identifier	r_core_block_read		987937	0					
ANR	991633	ArgumentList	core		987937	1					
ANR	991634	Argument	core		987937	0					
ANR	991635	Identifier	core		987937	0					
ANR	991636	SwitchStatement	switch ( input [ 1 ] )		987937	12					
ANR	991637	Condition	input [ 1 ]	5470:10:153337:153344	987937	0	True				
ANR	991638	ArrayIndexing	input [ 1 ]		987937	0					
ANR	991639	Identifier	input		987937	0					
ANR	991640	PrimaryExpression	1		987937	1					
ANR	991641	CompoundStatement		626:20:17310:17310	987937	1					
ANR	991642	Label	case 'C' :	5471:2:153351:153359	987937	0	True				
ANR	991643	ExpressionStatement	"r_core_disasm_pdi ( core , l , 0 , 'C' )"	5472:3:153373:153408	987937	1	True				
ANR	991644	CallExpression	"r_core_disasm_pdi ( core , l , 0 , 'C' )"		987937	0					
ANR	991645	Callee	r_core_disasm_pdi		987937	0					
ANR	991646	Identifier	r_core_disasm_pdi		987937	0					
ANR	991647	ArgumentList	core		987937	1					
ANR	991648	Argument	core		987937	0					
ANR	991649	Identifier	core		987937	0					
ANR	991650	Argument	l		987937	1					
ANR	991651	Identifier	l		987937	0					
ANR	991652	Argument	0		987937	2					
ANR	991653	PrimaryExpression	0		987937	0					
ANR	991654	Argument	'C'		987937	3					
ANR	991655	PrimaryExpression	'C'		987937	0					
ANR	991656	ExpressionStatement	pd_result = 0	5473:3:153413:153426	987937	2	True				
ANR	991657	AssignmentExpression	pd_result = 0		987937	0		=			
ANR	991658	Identifier	pd_result		987937	0					
ANR	991659	PrimaryExpression	0		987937	1					
ANR	991660	ExpressionStatement	processed_cmd = true	5474:3:153431:153451	987937	3	True				
ANR	991661	AssignmentExpression	processed_cmd = true		987937	0		=			
ANR	991662	Identifier	processed_cmd		987937	0					
ANR	991663	Identifier	true		987937	1					
ANR	991664	BreakStatement	break ;	5475:3:153456:153461	987937	4	True				
ANR	991665	Label	case 'c' :	5476:2:153465:153473	987937	5	True				
ANR	991666	ExpressionStatement	"r_core_pseudo_code ( core , input + 2 )"	5477:3:153496:153532	987937	6	True				
ANR	991667	CallExpression	"r_core_pseudo_code ( core , input + 2 )"		987937	0					
ANR	991668	Callee	r_core_pseudo_code		987937	0					
ANR	991669	Identifier	r_core_pseudo_code		987937	0					
ANR	991670	ArgumentList	core		987937	1					
ANR	991671	Argument	core		987937	0					
ANR	991672	Identifier	core		987937	0					
ANR	991673	Argument	input + 2		987937	1					
ANR	991674	AdditiveExpression	input + 2		987937	0		+			
ANR	991675	Identifier	input		987937	0					
ANR	991676	PrimaryExpression	2		987937	1					
ANR	991677	ExpressionStatement	pd_result = 0	5478:3:153537:153550	987937	7	True				
ANR	991678	AssignmentExpression	pd_result = 0		987937	0		=			
ANR	991679	Identifier	pd_result		987937	0					
ANR	991680	PrimaryExpression	0		987937	1					
ANR	991681	ExpressionStatement	processed_cmd = true	5479:3:153555:153575	987937	8	True				
ANR	991682	AssignmentExpression	processed_cmd = true		987937	0		=			
ANR	991683	Identifier	processed_cmd		987937	0					
ANR	991684	Identifier	true		987937	1					
ANR	991685	BreakStatement	break ;	5480:3:153580:153585	987937	9	True				
ANR	991686	Label	case 'k' :	5481:2:153589:153597	987937	10	True				
ANR	991687	CompoundStatement		640:3:17607:17672	987937	11					
ANR	991688	IdentifierDeclStatement	int len = 0 ;	5483:3:153628:153639	987937	0	True				
ANR	991689	IdentifierDecl	len = 0		987937	0					
ANR	991690	IdentifierDeclType	int		987937	0					
ANR	991691	Identifier	len		987937	1					
ANR	991692	AssignmentExpression	len = 0		987937	2		=			
ANR	991693	Identifier	len		987937	0					
ANR	991694	PrimaryExpression	0		987937	1					
ANR	991695	IdentifierDeclStatement	"ut64 at = findClassBounds ( core , r_str_trim_ro ( input + 2 ) , & len ) ;"	5484:3:153644:153709	987937	1	True				
ANR	991696	IdentifierDecl	"at = findClassBounds ( core , r_str_trim_ro ( input + 2 ) , & len )"		987937	0					
ANR	991697	IdentifierDeclType	ut64		987937	0					
ANR	991698	Identifier	at		987937	1					
ANR	991699	AssignmentExpression	"at = findClassBounds ( core , r_str_trim_ro ( input + 2 ) , & len )"		987937	2		=			
ANR	991700	Identifier	at		987937	0					
ANR	991701	CallExpression	"findClassBounds ( core , r_str_trim_ro ( input + 2 ) , & len )"		987937	1					
ANR	991702	Callee	findClassBounds		987937	0					
ANR	991703	Identifier	findClassBounds		987937	0					
ANR	991704	ArgumentList	core		987937	1					
ANR	991705	Argument	core		987937	0					
ANR	991706	Identifier	core		987937	0					
ANR	991707	Argument	r_str_trim_ro ( input + 2 )		987937	1					
ANR	991708	CallExpression	r_str_trim_ro ( input + 2 )		987937	0					
ANR	991709	Callee	r_str_trim_ro		987937	0					
ANR	991710	Identifier	r_str_trim_ro		987937	0					
ANR	991711	ArgumentList	input + 2		987937	1					
ANR	991712	Argument	input + 2		987937	0					
ANR	991713	AdditiveExpression	input + 2		987937	0		+			
ANR	991714	Identifier	input		987937	0					
ANR	991715	PrimaryExpression	2		987937	1					
ANR	991716	Argument	& len		987937	2					
ANR	991717	UnaryOperationExpression	& len		987937	0					
ANR	991718	UnaryOperator	&		987937	0					
ANR	991719	Identifier	len		987937	1					
ANR	991720	Statement	return	5485:3:153714:153719	987937	2	True				
ANR	991721	Statement	r_core_cmdf	5485:10:153721:153731	987937	3	True				
ANR	991722	Statement	(	5485:22:153733:153733	987937	4	True				
ANR	991723	Statement	core	5485:23:153734:153737	987937	5	True				
ANR	991724	Statement	","	5485:27:153738:153738	987937	6	True				
ANR	991725	Statement	"""pD %d @ %"""	5485:29:153740:153750	987937	7	True				
ANR	991726	Statement	PFMT64u	5485:40:153751:153757	987937	8	True				
ANR	991727	Statement	","	5485:47:153758:153758	987937	9	True				
ANR	991728	Statement	len	5485:49:153760:153762	987937	10	True				
ANR	991729	Statement	","	5485:52:153763:153763	987937	11	True				
ANR	991730	Statement	at	5485:54:153765:153766	987937	12	True				
ANR	991731	Statement	)	5485:56:153767:153767	987937	13	True				
ANR	991732	ExpressionStatement		5485:57:153768:153768	987937	14	True				
ANR	991733	Label	case 'i' :	5487:2:153776:153784	987937	12	True				
ANR	991734	ExpressionStatement	processed_cmd = true	5488:3:153807:153827	987937	13	True				
ANR	991735	AssignmentExpression	processed_cmd = true		987937	0		=			
ANR	991736	Identifier	processed_cmd		987937	0					
ANR	991737	Identifier	true		987937	1					
ANR	991738	IfStatement	if ( * input == 'D' )		987937	14					
ANR	991739	Condition	* input == 'D'	5489:7:153836:153848	987937	0	True				
ANR	991740	EqualityExpression	* input == 'D'		987937	0		==			
ANR	991741	UnaryOperationExpression	* input		987937	0					
ANR	991742	UnaryOperator	*		987937	0					
ANR	991743	Identifier	input		987937	1					
ANR	991744	PrimaryExpression	'D'		987937	1					
ANR	991745	CompoundStatement		645:22:17814:17814	987937	1					
ANR	991746	ExpressionStatement	"r_core_disasm_pdi ( core , 0 , l , 0 )"	5490:4:153857:153890	987937	0	True				
ANR	991747	CallExpression	"r_core_disasm_pdi ( core , 0 , l , 0 )"		987937	0					
ANR	991748	Callee	r_core_disasm_pdi		987937	0					
ANR	991749	Identifier	r_core_disasm_pdi		987937	0					
ANR	991750	ArgumentList	core		987937	1					
ANR	991751	Argument	core		987937	0					
ANR	991752	Identifier	core		987937	0					
ANR	991753	Argument	0		987937	1					
ANR	991754	PrimaryExpression	0		987937	0					
ANR	991755	Argument	l		987937	2					
ANR	991756	Identifier	l		987937	0					
ANR	991757	Argument	0		987937	3					
ANR	991758	PrimaryExpression	0		987937	0					
ANR	991759	ElseStatement	else		987937	0					
ANR	991760	CompoundStatement		647:10:17865:17865	987937	0					
ANR	991761	ExpressionStatement	"r_core_disasm_pdi ( core , l , 0 , 0 )"	5492:4:153908:153941	987937	0	True				
ANR	991762	CallExpression	"r_core_disasm_pdi ( core , l , 0 , 0 )"		987937	0					
ANR	991763	Callee	r_core_disasm_pdi		987937	0					
ANR	991764	Identifier	r_core_disasm_pdi		987937	0					
ANR	991765	ArgumentList	core		987937	1					
ANR	991766	Argument	core		987937	0					
ANR	991767	Identifier	core		987937	0					
ANR	991768	Argument	l		987937	1					
ANR	991769	Identifier	l		987937	0					
ANR	991770	Argument	0		987937	2					
ANR	991771	PrimaryExpression	0		987937	0					
ANR	991772	Argument	0		987937	3					
ANR	991773	PrimaryExpression	0		987937	0					
ANR	991774	ExpressionStatement	pd_result = 0	5494:3:153951:153964	987937	15	True				
ANR	991775	AssignmentExpression	pd_result = 0		987937	0		=			
ANR	991776	Identifier	pd_result		987937	0					
ANR	991777	PrimaryExpression	0		987937	1					
ANR	991778	BreakStatement	break ;	5495:3:153969:153974	987937	16	True				
ANR	991779	Label	case 'a' :	5496:2:153978:153986	987937	17	True				
ANR	991780	ExpressionStatement	processed_cmd = true	5497:3:154000:154020	987937	18	True				
ANR	991781	AssignmentExpression	processed_cmd = true		987937	0		=			
ANR	991782	Identifier	processed_cmd		987937	0					
ANR	991783	Identifier	true		987937	1					
ANR	991784	ExpressionStatement	"r_core_print_disasm_all ( core , core -> offset , l , len , input [ 2 ] )"	5498:3:154025:154087	987937	19	True				
ANR	991785	CallExpression	"r_core_print_disasm_all ( core , core -> offset , l , len , input [ 2 ] )"		987937	0					
ANR	991786	Callee	r_core_print_disasm_all		987937	0					
ANR	991787	Identifier	r_core_print_disasm_all		987937	0					
ANR	991788	ArgumentList	core		987937	1					
ANR	991789	Argument	core		987937	0					
ANR	991790	Identifier	core		987937	0					
ANR	991791	Argument	core -> offset		987937	1					
ANR	991792	PtrMemberAccess	core -> offset		987937	0					
ANR	991793	Identifier	core		987937	0					
ANR	991794	Identifier	offset		987937	1					
ANR	991795	Argument	l		987937	2					
ANR	991796	Identifier	l		987937	0					
ANR	991797	Argument	len		987937	3					
ANR	991798	Identifier	len		987937	0					
ANR	991799	Argument	input [ 2 ]		987937	4					
ANR	991800	ArrayIndexing	input [ 2 ]		987937	0					
ANR	991801	Identifier	input		987937	0					
ANR	991802	PrimaryExpression	2		987937	1					
ANR	991803	ExpressionStatement	pd_result = true	5499:3:154092:154108	987937	20	True				
ANR	991804	AssignmentExpression	pd_result = true		987937	0		=			
ANR	991805	Identifier	pd_result		987937	0					
ANR	991806	Identifier	true		987937	1					
ANR	991807	BreakStatement	break ;	5500:3:154113:154118	987937	21	True				
ANR	991808	Label	case 'R' :	5501:2:154122:154130	987937	22	True				
ANR	991809	ExpressionStatement	processed_cmd = true	5502:3:154144:154164	987937	23	True				
ANR	991810	AssignmentExpression	processed_cmd = true		987937	0		=			
ANR	991811	Identifier	processed_cmd		987937	0					
ANR	991812	Identifier	true		987937	1					
ANR	991813	IfStatement	if ( input [ 2 ] == 'j' )		987937	24					
ANR	991814	Condition	input [ 2 ] == 'j'	5503:7:154173:154187	987937	0	True				
ANR	991815	EqualityExpression	input [ 2 ] == 'j'		987937	0		==			
ANR	991816	ArrayIndexing	input [ 2 ]		987937	0					
ANR	991817	Identifier	input		987937	0					
ANR	991818	PrimaryExpression	2		987937	1					
ANR	991819	PrimaryExpression	'j'		987937	1					
ANR	991820	CompoundStatement		659:24:18153:18153	987937	1					
ANR	991821	ExpressionStatement	"disasm_recursive ( core , core -> offset , use_blocksize , 'j' )"	5504:4:154196:154253	987937	0	True				
ANR	991822	CallExpression	"disasm_recursive ( core , core -> offset , use_blocksize , 'j' )"		987937	0					
ANR	991823	Callee	disasm_recursive		987937	0					
ANR	991824	Identifier	disasm_recursive		987937	0					
ANR	991825	ArgumentList	core		987937	1					
ANR	991826	Argument	core		987937	0					
ANR	991827	Identifier	core		987937	0					
ANR	991828	Argument	core -> offset		987937	1					
ANR	991829	PtrMemberAccess	core -> offset		987937	0					
ANR	991830	Identifier	core		987937	0					
ANR	991831	Identifier	offset		987937	1					
ANR	991832	Argument	use_blocksize		987937	2					
ANR	991833	Identifier	use_blocksize		987937	0					
ANR	991834	Argument	'j'		987937	3					
ANR	991835	PrimaryExpression	'j'		987937	0					
ANR	991836	ElseStatement	else		987937	0					
ANR	991837	CompoundStatement		661:10:18228:18228	987937	0					
ANR	991838	ExpressionStatement	"disasm_recursive ( core , core -> offset , use_blocksize , 'D' )"	5506:4:154271:154328	987937	0	True				
ANR	991839	CallExpression	"disasm_recursive ( core , core -> offset , use_blocksize , 'D' )"		987937	0					
ANR	991840	Callee	disasm_recursive		987937	0					
ANR	991841	Identifier	disasm_recursive		987937	0					
ANR	991842	ArgumentList	core		987937	1					
ANR	991843	Argument	core		987937	0					
ANR	991844	Identifier	core		987937	0					
ANR	991845	Argument	core -> offset		987937	1					
ANR	991846	PtrMemberAccess	core -> offset		987937	0					
ANR	991847	Identifier	core		987937	0					
ANR	991848	Identifier	offset		987937	1					
ANR	991849	Argument	use_blocksize		987937	2					
ANR	991850	Identifier	use_blocksize		987937	0					
ANR	991851	Argument	'D'		987937	3					
ANR	991852	PrimaryExpression	'D'		987937	0					
ANR	991853	ExpressionStatement	pd_result = true	5508:3:154338:154354	987937	25	True				
ANR	991854	AssignmentExpression	pd_result = true		987937	0		=			
ANR	991855	Identifier	pd_result		987937	0					
ANR	991856	Identifier	true		987937	1					
ANR	991857	BreakStatement	break ;	5509:3:154359:154364	987937	26	True				
ANR	991858	Label	case 'r' :	5510:2:154368:154376	987937	27	True				
ANR	991859	ExpressionStatement	processed_cmd = true	5511:3:154390:154410	987937	28	True				
ANR	991860	AssignmentExpression	processed_cmd = true		987937	0		=			
ANR	991861	Identifier	processed_cmd		987937	0					
ANR	991862	Identifier	true		987937	1					
ANR	991863	CompoundStatement		669:4:18384:18450	987937	29					
ANR	991864	IdentifierDeclStatement	"RAnalFunction * f = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 ) ;"	5513:4:154421:154487	987937	0	True				
ANR	991865	IdentifierDecl	"* f = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		987937	0					
ANR	991866	IdentifierDeclType	RAnalFunction *		987937	0					
ANR	991867	Identifier	f		987937	1					
ANR	991868	AssignmentExpression	"* f = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		987937	2		=			
ANR	991869	Identifier	f		987937	0					
ANR	991870	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		987937	1					
ANR	991871	Callee	r_anal_get_fcn_in		987937	0					
ANR	991872	Identifier	r_anal_get_fcn_in		987937	0					
ANR	991873	ArgumentList	core -> anal		987937	1					
ANR	991874	Argument	core -> anal		987937	0					
ANR	991875	PtrMemberAccess	core -> anal		987937	0					
ANR	991876	Identifier	core		987937	0					
ANR	991877	Identifier	anal		987937	1					
ANR	991878	Argument	core -> offset		987937	1					
ANR	991879	PtrMemberAccess	core -> offset		987937	0					
ANR	991880	Identifier	core		987937	0					
ANR	991881	Identifier	offset		987937	1					
ANR	991882	Argument	0		987937	2					
ANR	991883	PrimaryExpression	0		987937	0					
ANR	991884	IfStatement	if ( f )		987937	1					
ANR	991885	Condition	f	5515:8:154546:154546	987937	0	True				
ANR	991886	Identifier	f		987937	0					
ANR	991887	CompoundStatement		671:11:18512:18512	987937	1					
ANR	991888	ExpressionStatement	"func_walk_blocks ( core , f , input [ 2 ] , 'D' , input [ 2 ] == '.' )"	5516:5:154556:154614	987937	0	True				
ANR	991889	CallExpression	"func_walk_blocks ( core , f , input [ 2 ] , 'D' , input [ 2 ] == '.' )"		987937	0					
ANR	991890	Callee	func_walk_blocks		987937	0					
ANR	991891	Identifier	func_walk_blocks		987937	0					
ANR	991892	ArgumentList	core		987937	1					
ANR	991893	Argument	core		987937	0					
ANR	991894	Identifier	core		987937	0					
ANR	991895	Argument	f		987937	1					
ANR	991896	Identifier	f		987937	0					
ANR	991897	Argument	input [ 2 ]		987937	2					
ANR	991898	ArrayIndexing	input [ 2 ]		987937	0					
ANR	991899	Identifier	input		987937	0					
ANR	991900	PrimaryExpression	2		987937	1					
ANR	991901	Argument	'D'		987937	3					
ANR	991902	PrimaryExpression	'D'		987937	0					
ANR	991903	Argument	input [ 2 ] == '.'		987937	4					
ANR	991904	EqualityExpression	input [ 2 ] == '.'		987937	0		==			
ANR	991905	ArrayIndexing	input [ 2 ]		987937	0					
ANR	991906	Identifier	input		987937	0					
ANR	991907	PrimaryExpression	2		987937	1					
ANR	991908	PrimaryExpression	'.'		987937	1					
ANR	991909	ElseStatement	else		987937	0					
ANR	991910	CompoundStatement		673:11:18590:18590	987937	0					
ANR	991911	Statement	eprintf	5518:5:154634:154640	987937	0	True				
ANR	991912	Statement	(	5518:13:154642:154642	987937	1	True				
ANR	991913	Statement	"""Cannot find function at 0x%08"""	5518:14:154643:154673	987937	2	True				
ANR	991914	Statement	PFMT64x	5518:45:154674:154680	987937	3	True				
ANR	991915	Statement	"""\\n"""	5518:53:154682:154685	987937	4	True				
ANR	991916	Statement	","	5518:57:154686:154686	987937	5	True				
ANR	991917	Statement	core	5518:59:154688:154691	987937	6	True				
ANR	991918	Statement	->	5518:63:154692:154693	987937	7	True				
ANR	991919	Statement	offset	5518:65:154694:154699	987937	8	True				
ANR	991920	Statement	)	5518:71:154700:154700	987937	9	True				
ANR	991921	ExpressionStatement		5518:72:154701:154701	987937	10	True				
ANR	991922	ExpressionStatement	pd_result = true	5520:4:154713:154729	987937	2	True				
ANR	991923	AssignmentExpression	pd_result = true		987937	0		=			
ANR	991924	Identifier	pd_result		987937	0					
ANR	991925	Identifier	true		987937	1					
ANR	991926	BreakStatement	break ;	5522:3:154739:154744	987937	30	True				
ANR	991927	Label	case 'b' :	5523:2:154748:154756	987937	31	True				
ANR	991928	ExpressionStatement	processed_cmd = true	5524:3:154770:154790	987937	32	True				
ANR	991929	AssignmentExpression	processed_cmd = true		987937	0		=			
ANR	991930	Identifier	processed_cmd		987937	0					
ANR	991931	Identifier	true		987937	1					
ANR	991932	IfStatement	if ( input [ 2 ] == '?' )		987937	33					
ANR	991933	Condition	input [ 2 ] == '?'	5525:7:154799:154813	987937	0	True				
ANR	991934	EqualityExpression	input [ 2 ] == '?'		987937	0		==			
ANR	991935	ArrayIndexing	input [ 2 ]		987937	0					
ANR	991936	Identifier	input		987937	0					
ANR	991937	PrimaryExpression	2		987937	1					
ANR	991938	PrimaryExpression	'?'		987937	1					
ANR	991939	CompoundStatement		681:24:18779:18779	987937	1					
ANR	991940	ExpressionStatement	"r_cons_printf ( ""Usage: pdb[j]  - disassemble basic block\\n"" )"	5526:4:154822:154882	987937	0	True				
ANR	991941	CallExpression	"r_cons_printf ( ""Usage: pdb[j]  - disassemble basic block\\n"" )"		987937	0					
ANR	991942	Callee	r_cons_printf		987937	0					
ANR	991943	Identifier	r_cons_printf		987937	0					
ANR	991944	ArgumentList	"""Usage: pdb[j]  - disassemble basic block\\n"""		987937	1					
ANR	991945	Argument	"""Usage: pdb[j]  - disassemble basic block\\n"""		987937	0					
ANR	991946	PrimaryExpression	"""Usage: pdb[j]  - disassemble basic block\\n"""		987937	0					
ANR	991947	ElseStatement	else		987937	0					
ANR	991948	CompoundStatement		684:4:18863:18927	987937	0					
ANR	991949	IdentifierDeclStatement	"RAnalBlock * b = r_anal_bb_from_offset ( core -> anal , core -> offset ) ;"	5528:4:154900:154964	987937	0	True				
ANR	991950	IdentifierDecl	"* b = r_anal_bb_from_offset ( core -> anal , core -> offset )"		987937	0					
ANR	991951	IdentifierDeclType	RAnalBlock *		987937	0					
ANR	991952	Identifier	b		987937	1					
ANR	991953	AssignmentExpression	"* b = r_anal_bb_from_offset ( core -> anal , core -> offset )"		987937	2		=			
ANR	991954	Identifier	b		987937	0					
ANR	991955	CallExpression	"r_anal_bb_from_offset ( core -> anal , core -> offset )"		987937	1					
ANR	991956	Callee	r_anal_bb_from_offset		987937	0					
ANR	991957	Identifier	r_anal_bb_from_offset		987937	0					
ANR	991958	ArgumentList	core -> anal		987937	1					
ANR	991959	Argument	core -> anal		987937	0					
ANR	991960	PtrMemberAccess	core -> anal		987937	0					
ANR	991961	Identifier	core		987937	0					
ANR	991962	Identifier	anal		987937	1					
ANR	991963	Argument	core -> offset		987937	1					
ANR	991964	PtrMemberAccess	core -> offset		987937	0					
ANR	991965	Identifier	core		987937	0					
ANR	991966	Identifier	offset		987937	1					
ANR	991967	IfStatement	if ( b )		987937	1					
ANR	991968	Condition	b	5529:8:154974:154974	987937	0	True				
ANR	991969	Identifier	b		987937	0					
ANR	991970	CompoundStatement		686:5:18947:18980	987937	1					
ANR	991971	IdentifierDeclStatement	ut8 * block = malloc ( b -> size + 1 ) ;	5530:5:154984:155017	987937	0	True				
ANR	991972	IdentifierDecl	* block = malloc ( b -> size + 1 )		987937	0					
ANR	991973	IdentifierDeclType	ut8 *		987937	0					
ANR	991974	Identifier	block		987937	1					
ANR	991975	AssignmentExpression	* block = malloc ( b -> size + 1 )		987937	2		=			
ANR	991976	Identifier	block		987937	0					
ANR	991977	CallExpression	malloc ( b -> size + 1 )		987937	1					
ANR	991978	Callee	malloc		987937	0					
ANR	991979	Identifier	malloc		987937	0					
ANR	991980	ArgumentList	b -> size + 1		987937	1					
ANR	991981	Argument	b -> size + 1		987937	0					
ANR	991982	AdditiveExpression	b -> size + 1		987937	0		+			
ANR	991983	PtrMemberAccess	b -> size		987937	0					
ANR	991984	Identifier	b		987937	0					
ANR	991985	Identifier	size		987937	1					
ANR	991986	PrimaryExpression	1		987937	1					
ANR	991987	IfStatement	if ( block )		987937	1					
ANR	991988	Condition	block	5531:9:155028:155032	987937	0	True				
ANR	991989	Identifier	block		987937	0					
ANR	991990	CompoundStatement		687:16:18998:18998	987937	1					
ANR	991991	ExpressionStatement	"r_io_read_at ( core -> io , b -> addr , block , b -> size )"	5532:6:155043:155091	987937	0	True				
ANR	991992	CallExpression	"r_io_read_at ( core -> io , b -> addr , block , b -> size )"		987937	0					
ANR	991993	Callee	r_io_read_at		987937	0					
ANR	991994	Identifier	r_io_read_at		987937	0					
ANR	991995	ArgumentList	core -> io		987937	1					
ANR	991996	Argument	core -> io		987937	0					
ANR	991997	PtrMemberAccess	core -> io		987937	0					
ANR	991998	Identifier	core		987937	0					
ANR	991999	Identifier	io		987937	1					
ANR	992000	Argument	b -> addr		987937	1					
ANR	992001	PtrMemberAccess	b -> addr		987937	0					
ANR	992002	Identifier	b		987937	0					
ANR	992003	Identifier	addr		987937	1					
ANR	992004	Argument	block		987937	2					
ANR	992005	Identifier	block		987937	0					
ANR	992006	Argument	b -> size		987937	3					
ANR	992007	PtrMemberAccess	b -> size		987937	0					
ANR	992008	Identifier	b		987937	0					
ANR	992009	Identifier	size		987937	1					
ANR	992010	IfStatement	if ( input [ 2 ] == 'j' )		987937	1					
ANR	992011	Condition	input [ 2 ] == 'j'	5534:10:155104:155118	987937	0	True				
ANR	992012	EqualityExpression	input [ 2 ] == 'j'		987937	0		==			
ANR	992013	ArrayIndexing	input [ 2 ]		987937	0					
ANR	992014	Identifier	input		987937	0					
ANR	992015	PrimaryExpression	2		987937	1					
ANR	992016	PrimaryExpression	'j'		987937	1					
ANR	992017	CompoundStatement		690:27:19084:19084	987937	1					
ANR	992018	ExpressionStatement	pj = pj_new ( )	5535:7:155130:155144	987937	0	True				
ANR	992019	AssignmentExpression	pj = pj_new ( )		987937	0		=			
ANR	992020	Identifier	pj		987937	0					
ANR	992021	CallExpression	pj_new ( )		987937	1					
ANR	992022	Callee	pj_new		987937	0					
ANR	992023	Identifier	pj_new		987937	0					
ANR	992024	ArgumentList			987937	1					
ANR	992025	IfStatement	if ( ! pj )		987937	1					
ANR	992026	Condition	! pj	5536:11:155157:155159	987937	0	True				
ANR	992027	UnaryOperationExpression	! pj		987937	0					
ANR	992028	UnaryOperator	!		987937	0					
ANR	992029	Identifier	pj		987937	1					
ANR	992030	CompoundStatement		692:16:19125:19125	987937	1					
ANR	992031	BreakStatement	break ;	5537:8:155172:155177	987937	0	True				
ANR	992032	ExpressionStatement	pj_a ( pj )	5539:7:155195:155204	987937	2	True				
ANR	992033	CallExpression	pj_a ( pj )		987937	0					
ANR	992034	Callee	pj_a		987937	0					
ANR	992035	Identifier	pj_a		987937	0					
ANR	992036	ArgumentList	pj		987937	1					
ANR	992037	Argument	pj		987937	0					
ANR	992038	Identifier	pj		987937	0					
ANR	992039	ExpressionStatement	"r_core_print_disasm_json ( core , b -> addr , block , b -> size , 0 , pj )"	5540:7:155213:155276	987937	3	True				
ANR	992040	CallExpression	"r_core_print_disasm_json ( core , b -> addr , block , b -> size , 0 , pj )"		987937	0					
ANR	992041	Callee	r_core_print_disasm_json		987937	0					
ANR	992042	Identifier	r_core_print_disasm_json		987937	0					
ANR	992043	ArgumentList	core		987937	1					
ANR	992044	Argument	core		987937	0					
ANR	992045	Identifier	core		987937	0					
ANR	992046	Argument	b -> addr		987937	1					
ANR	992047	PtrMemberAccess	b -> addr		987937	0					
ANR	992048	Identifier	b		987937	0					
ANR	992049	Identifier	addr		987937	1					
ANR	992050	Argument	block		987937	2					
ANR	992051	Identifier	block		987937	0					
ANR	992052	Argument	b -> size		987937	3					
ANR	992053	PtrMemberAccess	b -> size		987937	0					
ANR	992054	Identifier	b		987937	0					
ANR	992055	Identifier	size		987937	1					
ANR	992056	Argument	0		987937	4					
ANR	992057	PrimaryExpression	0		987937	0					
ANR	992058	Argument	pj		987937	5					
ANR	992059	Identifier	pj		987937	0					
ANR	992060	ExpressionStatement	pj_end ( pj )	5541:7:155285:155296	987937	4	True				
ANR	992061	CallExpression	pj_end ( pj )		987937	0					
ANR	992062	Callee	pj_end		987937	0					
ANR	992063	Identifier	pj_end		987937	0					
ANR	992064	ArgumentList	pj		987937	1					
ANR	992065	Argument	pj		987937	0					
ANR	992066	Identifier	pj		987937	0					
ANR	992067	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	5542:7:155305:155343	987937	5	True				
ANR	992068	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		987937	0					
ANR	992069	Callee	r_cons_printf		987937	0					
ANR	992070	Identifier	r_cons_printf		987937	0					
ANR	992071	ArgumentList	"""%s\\n"""		987937	1					
ANR	992072	Argument	"""%s\\n"""		987937	0					
ANR	992073	PrimaryExpression	"""%s\\n"""		987937	0					
ANR	992074	Argument	pj_string ( pj )		987937	1					
ANR	992075	CallExpression	pj_string ( pj )		987937	0					
ANR	992076	Callee	pj_string		987937	0					
ANR	992077	Identifier	pj_string		987937	0					
ANR	992078	ArgumentList	pj		987937	1					
ANR	992079	Argument	pj		987937	0					
ANR	992080	Identifier	pj		987937	0					
ANR	992081	ExpressionStatement	pj_free ( pj )	5543:7:155352:155364	987937	6	True				
ANR	992082	CallExpression	pj_free ( pj )		987937	0					
ANR	992083	Callee	pj_free		987937	0					
ANR	992084	Identifier	pj_free		987937	0					
ANR	992085	ArgumentList	pj		987937	1					
ANR	992086	Argument	pj		987937	0					
ANR	992087	Identifier	pj		987937	0					
ANR	992088	ElseStatement	else		987937	0					
ANR	992089	CompoundStatement		700:13:19342:19342	987937	0					
ANR	992090	ExpressionStatement	"core -> num -> value = r_core_print_disasm ( core -> print , core , b -> addr , block , b -> size , 9999 , 0 , 2 , input [ 2 ] == 'J' , NULL , NULL )"	5545:7:155388:155529	987937	0	True				
ANR	992091	AssignmentExpression	"core -> num -> value = r_core_print_disasm ( core -> print , core , b -> addr , block , b -> size , 9999 , 0 , 2 , input [ 2 ] == 'J' , NULL , NULL )"		987937	0		=			
ANR	992092	PtrMemberAccess	core -> num -> value		987937	0					
ANR	992093	PtrMemberAccess	core -> num		987937	0					
ANR	992094	Identifier	core		987937	0					
ANR	992095	Identifier	num		987937	1					
ANR	992096	Identifier	value		987937	1					
ANR	992097	CallExpression	"r_core_print_disasm ( core -> print , core , b -> addr , block , b -> size , 9999 , 0 , 2 , input [ 2 ] == 'J' , NULL , NULL )"		987937	1					
ANR	992098	Callee	r_core_print_disasm		987937	0					
ANR	992099	Identifier	r_core_print_disasm		987937	0					
ANR	992100	ArgumentList	core -> print		987937	1					
ANR	992101	Argument	core -> print		987937	0					
ANR	992102	PtrMemberAccess	core -> print		987937	0					
ANR	992103	Identifier	core		987937	0					
ANR	992104	Identifier	print		987937	1					
ANR	992105	Argument	core		987937	1					
ANR	992106	Identifier	core		987937	0					
ANR	992107	Argument	b -> addr		987937	2					
ANR	992108	PtrMemberAccess	b -> addr		987937	0					
ANR	992109	Identifier	b		987937	0					
ANR	992110	Identifier	addr		987937	1					
ANR	992111	Argument	block		987937	3					
ANR	992112	Identifier	block		987937	0					
ANR	992113	Argument	b -> size		987937	4					
ANR	992114	PtrMemberAccess	b -> size		987937	0					
ANR	992115	Identifier	b		987937	0					
ANR	992116	Identifier	size		987937	1					
ANR	992117	Argument	9999		987937	5					
ANR	992118	PrimaryExpression	9999		987937	0					
ANR	992119	Argument	0		987937	6					
ANR	992120	PrimaryExpression	0		987937	0					
ANR	992121	Argument	2		987937	7					
ANR	992122	PrimaryExpression	2		987937	0					
ANR	992123	Argument	input [ 2 ] == 'J'		987937	8					
ANR	992124	EqualityExpression	input [ 2 ] == 'J'		987937	0		==			
ANR	992125	ArrayIndexing	input [ 2 ]		987937	0					
ANR	992126	Identifier	input		987937	0					
ANR	992127	PrimaryExpression	2		987937	1					
ANR	992128	PrimaryExpression	'J'		987937	1					
ANR	992129	Argument	NULL		987937	9					
ANR	992130	Identifier	NULL		987937	0					
ANR	992131	Argument	NULL		987937	10					
ANR	992132	Identifier	NULL		987937	0					
ANR	992133	ExpressionStatement	free ( block )	5549:6:155545:155557	987937	2	True				
ANR	992134	CallExpression	free ( block )		987937	0					
ANR	992135	Callee	free		987937	0					
ANR	992136	Identifier	free		987937	0					
ANR	992137	ArgumentList	block		987937	1					
ANR	992138	Argument	block		987937	0					
ANR	992139	Identifier	block		987937	0					
ANR	992140	ExpressionStatement	pd_result = 0	5550:6:155565:155578	987937	3	True				
ANR	992141	AssignmentExpression	pd_result = 0		987937	0		=			
ANR	992142	Identifier	pd_result		987937	0					
ANR	992143	PrimaryExpression	0		987937	1					
ANR	992144	ElseStatement	else		987937	0					
ANR	992145	CompoundStatement		708:11:19561:19561	987937	0					
ANR	992146	Statement	eprintf	5553:5:155605:155611	987937	0	True				
ANR	992147	Statement	(	5553:13:155613:155613	987937	1	True				
ANR	992148	Statement	"""Cannot find function at 0x%08"""	5553:14:155614:155644	987937	2	True				
ANR	992149	Statement	PFMT64x	5553:45:155645:155651	987937	3	True				
ANR	992150	Statement	"""\\n"""	5553:53:155653:155656	987937	4	True				
ANR	992151	Statement	","	5553:57:155657:155657	987937	5	True				
ANR	992152	Statement	core	5553:59:155659:155662	987937	6	True				
ANR	992153	Statement	->	5553:63:155663:155664	987937	7	True				
ANR	992154	Statement	offset	5553:65:155665:155670	987937	8	True				
ANR	992155	Statement	)	5553:71:155671:155671	987937	9	True				
ANR	992156	ExpressionStatement		5553:72:155672:155672	987937	10	True				
ANR	992157	ExpressionStatement	core -> num -> value = 0	5554:5:155679:155699	987937	11	True				
ANR	992158	AssignmentExpression	core -> num -> value = 0		987937	0		=			
ANR	992159	PtrMemberAccess	core -> num -> value		987937	0					
ANR	992160	PtrMemberAccess	core -> num		987937	0					
ANR	992161	Identifier	core		987937	0					
ANR	992162	Identifier	num		987937	1					
ANR	992163	Identifier	value		987937	1					
ANR	992164	PrimaryExpression	0		987937	1					
ANR	992165	BreakStatement	break ;	5557:3:155715:155720	987937	34	True				
ANR	992166	Label	case 's' :	5558:2:155724:155732	987937	35	True				
ANR	992167	ExpressionStatement	processed_cmd = true	5559:3:155757:155777	987937	36	True				
ANR	992168	AssignmentExpression	processed_cmd = true		987937	0		=			
ANR	992169	Identifier	processed_cmd		987937	0					
ANR	992170	Identifier	true		987937	1					
ANR	992171	IfStatement	if ( input [ 2 ] == '?' )		987937	37					
ANR	992172	Condition	input [ 2 ] == '?'	5560:7:155786:155800	987937	0	True				
ANR	992173	EqualityExpression	input [ 2 ] == '?'		987937	0		==			
ANR	992174	ArrayIndexing	input [ 2 ]		987937	0					
ANR	992175	Identifier	input		987937	0					
ANR	992176	PrimaryExpression	2		987937	1					
ANR	992177	PrimaryExpression	'?'		987937	1					
ANR	992178	CompoundStatement		716:24:19766:19766	987937	1					
ANR	992179	ExpressionStatement	"r_cons_printf ( ""Usage: pds[bf]  - sumarize N bytes or function (pdfs)\\n"" )"	5561:4:155809:155882	987937	0	True				
ANR	992180	CallExpression	"r_cons_printf ( ""Usage: pds[bf]  - sumarize N bytes or function (pdfs)\\n"" )"		987937	0					
ANR	992181	Callee	r_cons_printf		987937	0					
ANR	992182	Identifier	r_cons_printf		987937	0					
ANR	992183	ArgumentList	"""Usage: pds[bf]  - sumarize N bytes or function (pdfs)\\n"""		987937	1					
ANR	992184	Argument	"""Usage: pds[bf]  - sumarize N bytes or function (pdfs)\\n"""		987937	0					
ANR	992185	PrimaryExpression	"""Usage: pds[bf]  - sumarize N bytes or function (pdfs)\\n"""		987937	0					
ANR	992186	ElseStatement	else		987937	0					
ANR	992187	CompoundStatement		718:10:19857:19857	987937	0					
ANR	992188	ExpressionStatement	"disasm_strings ( core , input , NULL )"	5563:4:155900:155934	987937	0	True				
ANR	992189	CallExpression	"disasm_strings ( core , input , NULL )"		987937	0					
ANR	992190	Callee	disasm_strings		987937	0					
ANR	992191	Identifier	disasm_strings		987937	0					
ANR	992192	ArgumentList	core		987937	1					
ANR	992193	Argument	core		987937	0					
ANR	992194	Identifier	core		987937	0					
ANR	992195	Argument	input		987937	1					
ANR	992196	Identifier	input		987937	0					
ANR	992197	Argument	NULL		987937	2					
ANR	992198	Identifier	NULL		987937	0					
ANR	992199	BreakStatement	break ;	5565:3:155944:155949	987937	38	True				
ANR	992200	Label	case 'f' :	5566:2:155953:155961	987937	39	True				
ANR	992201	ExpressionStatement	processed_cmd = true	5567:3:155975:155995	987937	40	True				
ANR	992202	AssignmentExpression	processed_cmd = true		987937	0		=			
ANR	992203	Identifier	processed_cmd		987937	0					
ANR	992204	Identifier	true		987937	1					
ANR	992205	IfStatement	if ( input [ 2 ] == '?' )		987937	41					
ANR	992206	Condition	input [ 2 ] == '?'	5568:7:156004:156018	987937	0	True				
ANR	992207	EqualityExpression	input [ 2 ] == '?'		987937	0		==			
ANR	992208	ArrayIndexing	input [ 2 ]		987937	0					
ANR	992209	Identifier	input		987937	0					
ANR	992210	PrimaryExpression	2		987937	1					
ANR	992211	PrimaryExpression	'?'		987937	1					
ANR	992212	CompoundStatement		724:24:19984:19984	987937	1					
ANR	992213	ExpressionStatement	"r_core_cmd_help ( core , help_msg_pdf )"	5569:4:156027:156062	987937	0	True				
ANR	992214	CallExpression	"r_core_cmd_help ( core , help_msg_pdf )"		987937	0					
ANR	992215	Callee	r_core_cmd_help		987937	0					
ANR	992216	Identifier	r_core_cmd_help		987937	0					
ANR	992217	ArgumentList	core		987937	1					
ANR	992218	Argument	core		987937	0					
ANR	992219	Identifier	core		987937	0					
ANR	992220	Argument	help_msg_pdf		987937	1					
ANR	992221	Identifier	help_msg_pdf		987937	0					
ANR	992222	ElseStatement	else		987937	0					
ANR	992223	IfStatement	if ( input [ 2 ] == 's' )		987937	0					
ANR	992224	Condition	input [ 2 ] == 's'	5570:14:156078:156092	987937	0	True				
ANR	992225	EqualityExpression	input [ 2 ] == 's'		987937	0		==			
ANR	992226	ArrayIndexing	input [ 2 ]		987937	0					
ANR	992227	Identifier	input		987937	0					
ANR	992228	PrimaryExpression	2		987937	1					
ANR	992229	PrimaryExpression	's'		987937	1					
ANR	992230	CompoundStatement		729:4:20139:20250	987937	1					
ANR	992231	IdentifierDeclStatement	ut64 oseek = core -> offset ;	5571:4:156111:156136	987937	0	True				
ANR	992232	IdentifierDecl	oseek = core -> offset		987937	0					
ANR	992233	IdentifierDeclType	ut64		987937	0					
ANR	992234	Identifier	oseek		987937	1					
ANR	992235	AssignmentExpression	oseek = core -> offset		987937	2		=			
ANR	992236	Identifier	oseek		987937	0					
ANR	992237	PtrMemberAccess	core -> offset		987937	1					
ANR	992238	Identifier	core		987937	0					
ANR	992239	Identifier	offset		987937	1					
ANR	992240	IdentifierDeclStatement	int oblock = core -> blocksize ;	5572:4:156142:156170	987937	1	True				
ANR	992241	IdentifierDecl	oblock = core -> blocksize		987937	0					
ANR	992242	IdentifierDeclType	int		987937	0					
ANR	992243	Identifier	oblock		987937	1					
ANR	992244	AssignmentExpression	oblock = core -> blocksize		987937	2		=			
ANR	992245	Identifier	oblock		987937	0					
ANR	992246	PtrMemberAccess	core -> blocksize		987937	1					
ANR	992247	Identifier	core		987937	0					
ANR	992248	Identifier	blocksize		987937	1					
ANR	992249	IdentifierDeclStatement	"RAnalFunction * f = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM ) ;"	5573:4:156176:156287	987937	2	True				
ANR	992250	IdentifierDecl	"* f = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		987937	0					
ANR	992251	IdentifierDeclType	RAnalFunction *		987937	0					
ANR	992252	Identifier	f		987937	1					
ANR	992253	AssignmentExpression	"* f = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		987937	2		=			
ANR	992254	Identifier	f		987937	0					
ANR	992255	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		987937	1					
ANR	992256	Callee	r_anal_get_fcn_in		987937	0					
ANR	992257	Identifier	r_anal_get_fcn_in		987937	0					
ANR	992258	ArgumentList	core -> anal		987937	1					
ANR	992259	Argument	core -> anal		987937	0					
ANR	992260	PtrMemberAccess	core -> anal		987937	0					
ANR	992261	Identifier	core		987937	0					
ANR	992262	Identifier	anal		987937	1					
ANR	992263	Argument	core -> offset		987937	1					
ANR	992264	PtrMemberAccess	core -> offset		987937	0					
ANR	992265	Identifier	core		987937	0					
ANR	992266	Identifier	offset		987937	1					
ANR	992267	Argument	R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM		987937	2					
ANR	992268	InclusiveOrExpression	R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM		987937	0		|			
ANR	992269	Identifier	R_ANAL_FCN_TYPE_FCN		987937	0					
ANR	992270	Identifier	R_ANAL_FCN_TYPE_SYM		987937	1					
ANR	992271	IfStatement	if ( f )		987937	3					
ANR	992272	Condition	f	5575:8:156297:156297	987937	0	True				
ANR	992273	Identifier	f		987937	0					
ANR	992274	CompoundStatement		733:5:20310:20339	987937	1					
ANR	992275	IdentifierDeclStatement	ut32 rs = r_anal_fcn_realsize ( f ) ;	5576:5:156307:156340	987937	0	True				
ANR	992276	IdentifierDecl	rs = r_anal_fcn_realsize ( f )		987937	0					
ANR	992277	IdentifierDeclType	ut32		987937	0					
ANR	992278	Identifier	rs		987937	1					
ANR	992279	AssignmentExpression	rs = r_anal_fcn_realsize ( f )		987937	2		=			
ANR	992280	Identifier	rs		987937	0					
ANR	992281	CallExpression	r_anal_fcn_realsize ( f )		987937	1					
ANR	992282	Callee	r_anal_fcn_realsize		987937	0					
ANR	992283	Identifier	r_anal_fcn_realsize		987937	0					
ANR	992284	ArgumentList	f		987937	1					
ANR	992285	Argument	f		987937	0					
ANR	992286	Identifier	f		987937	0					
ANR	992287	IdentifierDeclStatement	ut32 fs = r_anal_fcn_size ( f ) ;	5577:5:156347:156376	987937	1	True				
ANR	992288	IdentifierDecl	fs = r_anal_fcn_size ( f )		987937	0					
ANR	992289	IdentifierDeclType	ut32		987937	0					
ANR	992290	Identifier	fs		987937	1					
ANR	992291	AssignmentExpression	fs = r_anal_fcn_size ( f )		987937	2		=			
ANR	992292	Identifier	fs		987937	0					
ANR	992293	CallExpression	r_anal_fcn_size ( f )		987937	1					
ANR	992294	Callee	r_anal_fcn_size		987937	0					
ANR	992295	Identifier	r_anal_fcn_size		987937	0					
ANR	992296	ArgumentList	f		987937	1					
ANR	992297	Argument	f		987937	0					
ANR	992298	Identifier	f		987937	0					
ANR	992299	ExpressionStatement	"r_core_seek ( core , oseek , SEEK_SET )"	5578:5:156383:156418	987937	2	True				
ANR	992300	CallExpression	"r_core_seek ( core , oseek , SEEK_SET )"		987937	0					
ANR	992301	Callee	r_core_seek		987937	0					
ANR	992302	Identifier	r_core_seek		987937	0					
ANR	992303	ArgumentList	core		987937	1					
ANR	992304	Argument	core		987937	0					
ANR	992305	Identifier	core		987937	0					
ANR	992306	Argument	oseek		987937	1					
ANR	992307	Identifier	oseek		987937	0					
ANR	992308	Argument	SEEK_SET		987937	2					
ANR	992309	Identifier	SEEK_SET		987937	0					
ANR	992310	ExpressionStatement	"r_core_block_size ( core , R_MAX ( rs , fs ) )"	5579:5:156425:156465	987937	3	True				
ANR	992311	CallExpression	"r_core_block_size ( core , R_MAX ( rs , fs ) )"		987937	0					
ANR	992312	Callee	r_core_block_size		987937	0					
ANR	992313	Identifier	r_core_block_size		987937	0					
ANR	992314	ArgumentList	core		987937	1					
ANR	992315	Argument	core		987937	0					
ANR	992316	Identifier	core		987937	0					
ANR	992317	Argument	"R_MAX ( rs , fs )"		987937	1					
ANR	992318	CallExpression	"R_MAX ( rs , fs )"		987937	0					
ANR	992319	Callee	R_MAX		987937	0					
ANR	992320	Identifier	R_MAX		987937	0					
ANR	992321	ArgumentList	rs		987937	1					
ANR	992322	Argument	rs		987937	0					
ANR	992323	Identifier	rs		987937	0					
ANR	992324	Argument	fs		987937	1					
ANR	992325	Identifier	fs		987937	0					
ANR	992326	ExpressionStatement	"disasm_strings ( core , input , f )"	5580:5:156472:156503	987937	4	True				
ANR	992327	CallExpression	"disasm_strings ( core , input , f )"		987937	0					
ANR	992328	Callee	disasm_strings		987937	0					
ANR	992329	Identifier	disasm_strings		987937	0					
ANR	992330	ArgumentList	core		987937	1					
ANR	992331	Argument	core		987937	0					
ANR	992332	Identifier	core		987937	0					
ANR	992333	Argument	input		987937	1					
ANR	992334	Identifier	input		987937	0					
ANR	992335	Argument	f		987937	2					
ANR	992336	Identifier	f		987937	0					
ANR	992337	ExpressionStatement	"r_core_block_size ( core , oblock )"	5581:5:156510:156542	987937	5	True				
ANR	992338	CallExpression	"r_core_block_size ( core , oblock )"		987937	0					
ANR	992339	Callee	r_core_block_size		987937	0					
ANR	992340	Identifier	r_core_block_size		987937	0					
ANR	992341	ArgumentList	core		987937	1					
ANR	992342	Argument	core		987937	0					
ANR	992343	Identifier	core		987937	0					
ANR	992344	Argument	oblock		987937	1					
ANR	992345	Identifier	oblock		987937	0					
ANR	992346	ExpressionStatement	"r_core_seek ( core , oseek , SEEK_SET )"	5582:5:156549:156584	987937	6	True				
ANR	992347	CallExpression	"r_core_seek ( core , oseek , SEEK_SET )"		987937	0					
ANR	992348	Callee	r_core_seek		987937	0					
ANR	992349	Identifier	r_core_seek		987937	0					
ANR	992350	ArgumentList	core		987937	1					
ANR	992351	Argument	core		987937	0					
ANR	992352	Identifier	core		987937	0					
ANR	992353	Argument	oseek		987937	1					
ANR	992354	Identifier	oseek		987937	0					
ANR	992355	Argument	SEEK_SET		987937	2					
ANR	992356	Identifier	SEEK_SET		987937	0					
ANR	992357	ExpressionStatement	processed_cmd = true	5584:4:156596:156616	987937	4	True				
ANR	992358	AssignmentExpression	processed_cmd = true		987937	0		=			
ANR	992359	Identifier	processed_cmd		987937	0					
ANR	992360	Identifier	true		987937	1					
ANR	992361	ElseStatement	else		987937	0					
ANR	992362	CompoundStatement		749:4:20851:20876	987937	0					
ANR	992363	IdentifierDeclStatement	ut32 bsz = core -> blocksize ;	5586:4:156634:156660	987937	0	True				
ANR	992364	IdentifierDecl	bsz = core -> blocksize		987937	0					
ANR	992365	IdentifierDeclType	ut32		987937	0					
ANR	992366	Identifier	bsz		987937	1					
ANR	992367	AssignmentExpression	bsz = core -> blocksize		987937	2		=			
ANR	992368	Identifier	bsz		987937	0					
ANR	992369	PtrMemberAccess	core -> blocksize		987937	1					
ANR	992370	Identifier	core		987937	0					
ANR	992371	Identifier	blocksize		987937	1					
ANR	992372	IdentifierDeclStatement	"RAnalFunction * f = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_ROOT ) ;"	5587:4:156666:156751	987937	1	True				
ANR	992373	IdentifierDecl	"* f = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_ROOT )"		987937	0					
ANR	992374	IdentifierDeclType	RAnalFunction *		987937	0					
ANR	992375	Identifier	f		987937	1					
ANR	992376	AssignmentExpression	"* f = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_ROOT )"		987937	2		=			
ANR	992377	Identifier	f		987937	0					
ANR	992378	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_ROOT )"		987937	1					
ANR	992379	Callee	r_anal_get_fcn_in		987937	0					
ANR	992380	Identifier	r_anal_get_fcn_in		987937	0					
ANR	992381	ArgumentList	core -> anal		987937	1					
ANR	992382	Argument	core -> anal		987937	0					
ANR	992383	PtrMemberAccess	core -> anal		987937	0					
ANR	992384	Identifier	core		987937	0					
ANR	992385	Identifier	anal		987937	1					
ANR	992386	Argument	core -> offset		987937	1					
ANR	992387	PtrMemberAccess	core -> offset		987937	0					
ANR	992388	Identifier	core		987937	0					
ANR	992389	Identifier	offset		987937	1					
ANR	992390	Argument	R_ANAL_FCN_TYPE_ROOT		987937	2					
ANR	992391	Identifier	R_ANAL_FCN_TYPE_ROOT		987937	0					
ANR	992392	IfStatement	if ( ! f )		987937	2					
ANR	992393	Condition	! f	5588:8:156761:156762	987937	0	True				
ANR	992394	UnaryOperationExpression	! f		987937	0					
ANR	992395	UnaryOperator	!		987937	0					
ANR	992396	Identifier	f		987937	1					
ANR	992397	CompoundStatement		744:12:20728:20728	987937	1					
ANR	992398	ExpressionStatement	"f = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"	5589:5:156772:156823	987937	0	True				
ANR	992399	AssignmentExpression	"f = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		987937	0		=			
ANR	992400	Identifier	f		987937	0					
ANR	992401	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		987937	1					
ANR	992402	Callee	r_anal_get_fcn_in		987937	0					
ANR	992403	Identifier	r_anal_get_fcn_in		987937	0					
ANR	992404	ArgumentList	core -> anal		987937	1					
ANR	992405	Argument	core -> anal		987937	0					
ANR	992406	PtrMemberAccess	core -> anal		987937	0					
ANR	992407	Identifier	core		987937	0					
ANR	992408	Identifier	anal		987937	1					
ANR	992409	Argument	core -> offset		987937	1					
ANR	992410	PtrMemberAccess	core -> offset		987937	0					
ANR	992411	Identifier	core		987937	0					
ANR	992412	Identifier	offset		987937	1					
ANR	992413	Argument	0		987937	2					
ANR	992414	PrimaryExpression	0		987937	0					
ANR	992415	IdentifierDeclStatement	RAnalFunction * tmp_func ;	5591:4:156835:156858	987937	3	True				
ANR	992416	IdentifierDecl	* tmp_func		987937	0					
ANR	992417	IdentifierDeclType	RAnalFunction *		987937	0					
ANR	992418	Identifier	tmp_func		987937	1					
ANR	992419	IdentifierDeclStatement	ut32 cont_size = 0 ;	5592:4:156864:156882	987937	4	True				
ANR	992420	IdentifierDecl	cont_size = 0		987937	0					
ANR	992421	IdentifierDeclType	ut32		987937	0					
ANR	992422	Identifier	cont_size		987937	1					
ANR	992423	AssignmentExpression	cont_size = 0		987937	2		=			
ANR	992424	Identifier	cont_size		987937	0					
ANR	992425	PrimaryExpression	0		987937	1					
ANR	992426	IdentifierDeclStatement	RListIter * locs_it = NULL ;	5593:4:156888:156913	987937	5	True				
ANR	992427	IdentifierDecl	* locs_it = NULL		987937	0					
ANR	992428	IdentifierDeclType	RListIter *		987937	0					
ANR	992429	Identifier	locs_it		987937	1					
ANR	992430	AssignmentExpression	* locs_it = NULL		987937	2		=			
ANR	992431	Identifier	NULL		987937	0					
ANR	992432	Identifier	NULL		987937	1					
ANR	992433	IfStatement	if ( f && f -> fcn_locs )		987937	6					
ANR	992434	Condition	f && f -> fcn_locs	5594:8:156923:156938	987937	0	True				
ANR	992435	AndExpression	f && f -> fcn_locs		987937	0		&&			
ANR	992436	Identifier	f		987937	0					
ANR	992437	PtrMemberAccess	f -> fcn_locs		987937	1					
ANR	992438	Identifier	f		987937	0					
ANR	992439	Identifier	fcn_locs		987937	1					
ANR	992440	CompoundStatement		750:26:20904:20904	987937	1					
ANR	992441	ExpressionStatement	locs_it = f -> fcn_locs -> head	5595:5:156948:156975	987937	0	True				
ANR	992442	AssignmentExpression	locs_it = f -> fcn_locs -> head		987937	0		=			
ANR	992443	Identifier	locs_it		987937	0					
ANR	992444	PtrMemberAccess	f -> fcn_locs -> head		987937	1					
ANR	992445	PtrMemberAccess	f -> fcn_locs		987937	0					
ANR	992446	Identifier	f		987937	0					
ANR	992447	Identifier	fcn_locs		987937	1					
ANR	992448	Identifier	head		987937	1					
ANR	992449	IfStatement	if ( f && input [ 2 ] == 'j' )		987937	7					
ANR	992450	Condition	f && input [ 2 ] == 'j'	5597:8:156991:157010	987937	0	True				
ANR	992451	AndExpression	f && input [ 2 ] == 'j'		987937	0		&&			
ANR	992452	Identifier	f		987937	0					
ANR	992453	EqualityExpression	input [ 2 ] == 'j'		987937	1		==			
ANR	992454	ArrayIndexing	input [ 2 ]		987937	0					
ANR	992455	Identifier	input		987937	0					
ANR	992456	PrimaryExpression	2		987937	1					
ANR	992457	PrimaryExpression	'j'		987937	1					
ANR	992458	CompoundStatement		757:5:21085:21158	987937	1					
ANR	992459	IdentifierDeclStatement	ut8 * loc_buf = NULL ;	5598:5:157030:157049	987937	0	True				
ANR	992460	IdentifierDecl	* loc_buf = NULL		987937	0					
ANR	992461	IdentifierDeclType	ut8 *		987937	0					
ANR	992462	Identifier	loc_buf		987937	1					
ANR	992463	AssignmentExpression	* loc_buf = NULL		987937	2		=			
ANR	992464	Identifier	NULL		987937	0					
ANR	992465	Identifier	NULL		987937	1					
ANR	992466	IdentifierDeclStatement	RAnalBlock * b ;	5599:5:157056:157069	987937	1	True				
ANR	992467	IdentifierDecl	* b		987937	0					
ANR	992468	IdentifierDeclType	RAnalBlock *		987937	0					
ANR	992469	Identifier	b		987937	1					
ANR	992470	IdentifierDeclStatement	ut32 fcn_size = r_anal_fcn_realsize ( f ) ;	5600:5:157076:157115	987937	2	True				
ANR	992471	IdentifierDecl	fcn_size = r_anal_fcn_realsize ( f )		987937	0					
ANR	992472	IdentifierDeclType	ut32		987937	0					
ANR	992473	Identifier	fcn_size		987937	1					
ANR	992474	AssignmentExpression	fcn_size = r_anal_fcn_realsize ( f )		987937	2		=			
ANR	992475	Identifier	fcn_size		987937	0					
ANR	992476	CallExpression	r_anal_fcn_realsize ( f )		987937	1					
ANR	992477	Callee	r_anal_fcn_realsize		987937	0					
ANR	992478	Identifier	r_anal_fcn_realsize		987937	0					
ANR	992479	ArgumentList	f		987937	1					
ANR	992480	Argument	f		987937	0					
ANR	992481	Identifier	f		987937	0					
ANR	992482	IdentifierDeclStatement	"const char * orig_bb_middle = r_config_get ( core -> config , ""asm.bb.middle"" ) ;"	5601:5:157122:157195	987937	3	True				
ANR	992483	IdentifierDecl	"* orig_bb_middle = r_config_get ( core -> config , ""asm.bb.middle"" )"		987937	0					
ANR	992484	IdentifierDeclType	const char *		987937	0					
ANR	992485	Identifier	orig_bb_middle		987937	1					
ANR	992486	AssignmentExpression	"* orig_bb_middle = r_config_get ( core -> config , ""asm.bb.middle"" )"		987937	2		=			
ANR	992487	Identifier	orig_bb_middle		987937	0					
ANR	992488	CallExpression	"r_config_get ( core -> config , ""asm.bb.middle"" )"		987937	1					
ANR	992489	Callee	r_config_get		987937	0					
ANR	992490	Identifier	r_config_get		987937	0					
ANR	992491	ArgumentList	core -> config		987937	1					
ANR	992492	Argument	core -> config		987937	0					
ANR	992493	PtrMemberAccess	core -> config		987937	0					
ANR	992494	Identifier	core		987937	0					
ANR	992495	Identifier	config		987937	1					
ANR	992496	Argument	"""asm.bb.middle"""		987937	1					
ANR	992497	PrimaryExpression	"""asm.bb.middle"""		987937	0					
ANR	992498	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.bb.middle"" , false )"	5602:5:157202:157255	987937	4	True				
ANR	992499	CallExpression	"r_config_set_i ( core -> config , ""asm.bb.middle"" , false )"		987937	0					
ANR	992500	Callee	r_config_set_i		987937	0					
ANR	992501	Identifier	r_config_set_i		987937	0					
ANR	992502	ArgumentList	core -> config		987937	1					
ANR	992503	Argument	core -> config		987937	0					
ANR	992504	PtrMemberAccess	core -> config		987937	0					
ANR	992505	Identifier	core		987937	0					
ANR	992506	Identifier	config		987937	1					
ANR	992507	Argument	"""asm.bb.middle"""		987937	1					
ANR	992508	PrimaryExpression	"""asm.bb.middle"""		987937	0					
ANR	992509	Argument	false		987937	2					
ANR	992510	Identifier	false		987937	0					
ANR	992511	ExpressionStatement	cont_size = tmp_get_contsize ( f )	5603:5:157262:157294	987937	5	True				
ANR	992512	AssignmentExpression	cont_size = tmp_get_contsize ( f )		987937	0		=			
ANR	992513	Identifier	cont_size		987937	0					
ANR	992514	CallExpression	tmp_get_contsize ( f )		987937	1					
ANR	992515	Callee	tmp_get_contsize		987937	0					
ANR	992516	Identifier	tmp_get_contsize		987937	0					
ANR	992517	ArgumentList	f		987937	1					
ANR	992518	Argument	f		987937	0					
ANR	992519	Identifier	f		987937	0					
ANR	992520	ExpressionStatement	pj = pj_new ( )	5604:5:157301:157315	987937	6	True				
ANR	992521	AssignmentExpression	pj = pj_new ( )		987937	0		=			
ANR	992522	Identifier	pj		987937	0					
ANR	992523	CallExpression	pj_new ( )		987937	1					
ANR	992524	Callee	pj_new		987937	0					
ANR	992525	Identifier	pj_new		987937	0					
ANR	992526	ArgumentList			987937	1					
ANR	992527	IfStatement	if ( ! pj )		987937	7					
ANR	992528	Condition	! pj	5605:9:157326:157328	987937	0	True				
ANR	992529	UnaryOperationExpression	! pj		987937	0					
ANR	992530	UnaryOperator	!		987937	0					
ANR	992531	Identifier	pj		987937	1					
ANR	992532	CompoundStatement		761:14:21294:21294	987937	1					
ANR	992533	BreakStatement	break ;	5606:6:157339:157344	987937	0	True				
ANR	992534	ExpressionStatement	pj_o ( pj )	5608:5:157358:157367	987937	8	True				
ANR	992535	CallExpression	pj_o ( pj )		987937	0					
ANR	992536	Callee	pj_o		987937	0					
ANR	992537	Identifier	pj_o		987937	0					
ANR	992538	ArgumentList	pj		987937	1					
ANR	992539	Argument	pj		987937	0					
ANR	992540	Identifier	pj		987937	0					
ANR	992541	ExpressionStatement	"pj_ks ( pj , ""name"" , f -> name )"	5609:5:157374:157401	987937	9	True				
ANR	992542	CallExpression	"pj_ks ( pj , ""name"" , f -> name )"		987937	0					
ANR	992543	Callee	pj_ks		987937	0					
ANR	992544	Identifier	pj_ks		987937	0					
ANR	992545	ArgumentList	pj		987937	1					
ANR	992546	Argument	pj		987937	0					
ANR	992547	Identifier	pj		987937	0					
ANR	992548	Argument	"""name"""		987937	1					
ANR	992549	PrimaryExpression	"""name"""		987937	0					
ANR	992550	Argument	f -> name		987937	2					
ANR	992551	PtrMemberAccess	f -> name		987937	0					
ANR	992552	Identifier	f		987937	0					
ANR	992553	Identifier	name		987937	1					
ANR	992554	ExpressionStatement	"pj_kn ( pj , ""size"" , fcn_size )"	5610:5:157408:157436	987937	10	True				
ANR	992555	CallExpression	"pj_kn ( pj , ""size"" , fcn_size )"		987937	0					
ANR	992556	Callee	pj_kn		987937	0					
ANR	992557	Identifier	pj_kn		987937	0					
ANR	992558	ArgumentList	pj		987937	1					
ANR	992559	Argument	pj		987937	0					
ANR	992560	Identifier	pj		987937	0					
ANR	992561	Argument	"""size"""		987937	1					
ANR	992562	PrimaryExpression	"""size"""		987937	0					
ANR	992563	Argument	fcn_size		987937	2					
ANR	992564	Identifier	fcn_size		987937	0					
ANR	992565	ExpressionStatement	"pj_kn ( pj , ""addr"" , f -> addr )"	5611:5:157443:157470	987937	11	True				
ANR	992566	CallExpression	"pj_kn ( pj , ""addr"" , f -> addr )"		987937	0					
ANR	992567	Callee	pj_kn		987937	0					
ANR	992568	Identifier	pj_kn		987937	0					
ANR	992569	ArgumentList	pj		987937	1					
ANR	992570	Argument	pj		987937	0					
ANR	992571	Identifier	pj		987937	0					
ANR	992572	Argument	"""addr"""		987937	1					
ANR	992573	PrimaryExpression	"""addr"""		987937	0					
ANR	992574	Argument	f -> addr		987937	2					
ANR	992575	PtrMemberAccess	f -> addr		987937	0					
ANR	992576	Identifier	f		987937	0					
ANR	992577	Identifier	addr		987937	1					
ANR	992578	ExpressionStatement	"pj_k ( pj , ""ops"" )"	5612:5:157477:157493	987937	12	True				
ANR	992579	CallExpression	"pj_k ( pj , ""ops"" )"		987937	0					
ANR	992580	Callee	pj_k		987937	0					
ANR	992581	Identifier	pj_k		987937	0					
ANR	992582	ArgumentList	pj		987937	1					
ANR	992583	Argument	pj		987937	0					
ANR	992584	Identifier	pj		987937	0					
ANR	992585	Argument	"""ops"""		987937	1					
ANR	992586	PrimaryExpression	"""ops"""		987937	0					
ANR	992587	ExpressionStatement	pj_a ( pj )	5613:5:157500:157509	987937	13	True				
ANR	992588	CallExpression	pj_a ( pj )		987937	0					
ANR	992589	Callee	pj_a		987937	0					
ANR	992590	Identifier	pj_a		987937	0					
ANR	992591	ArgumentList	pj		987937	1					
ANR	992592	Argument	pj		987937	0					
ANR	992593	Identifier	pj		987937	0					
ANR	992594	ForStatement	for ( ; locs_it && ( tmp_func = locs_it -> data ) ; locs_it = locs_it -> n )		987937	14					
ANR	992595	Condition	locs_it && ( tmp_func = locs_it -> data )	5617:12:157703:157739	987937	0	True				
ANR	992596	AndExpression	locs_it && ( tmp_func = locs_it -> data )		987937	0		&&			
ANR	992597	Identifier	locs_it		987937	0					
ANR	992598	AssignmentExpression	tmp_func = locs_it -> data		987937	1		=			
ANR	992599	Identifier	tmp_func		987937	0					
ANR	992600	PtrMemberAccess	locs_it -> data		987937	1					
ANR	992601	Identifier	locs_it		987937	0					
ANR	992602	Identifier	data		987937	1					
ANR	992603	AssignmentExpression	locs_it = locs_it -> n	5617:51:157742:157761	987937	1	True	=			
ANR	992604	Identifier	locs_it		987937	0					
ANR	992605	PtrMemberAccess	locs_it -> n		987937	1					
ANR	992606	Identifier	locs_it		987937	0					
ANR	992607	Identifier	n		987937	1					
ANR	992608	CompoundStatement		773:73:21727:21727	987937	2					
ANR	992609	IfStatement	if ( tmp_func -> addr > f -> addr )		987937	0					
ANR	992610	Condition	tmp_func -> addr > f -> addr	5618:10:157776:157799	987937	0	True				
ANR	992611	RelationalExpression	tmp_func -> addr > f -> addr		987937	0		>			
ANR	992612	PtrMemberAccess	tmp_func -> addr		987937	0					
ANR	992613	Identifier	tmp_func		987937	0					
ANR	992614	Identifier	addr		987937	1					
ANR	992615	PtrMemberAccess	f -> addr		987937	1					
ANR	992616	Identifier	f		987937	0					
ANR	992617	Identifier	addr		987937	1					
ANR	992618	CompoundStatement		774:36:21765:21765	987937	1					
ANR	992619	BreakStatement	break ;	5619:7:157811:157816	987937	0	True				
ANR	992620	ExpressionStatement	cont_size = tmp_get_contsize ( tmp_func )	5621:6:157832:157871	987937	1	True				
ANR	992621	AssignmentExpression	cont_size = tmp_get_contsize ( tmp_func )		987937	0		=			
ANR	992622	Identifier	cont_size		987937	0					
ANR	992623	CallExpression	tmp_get_contsize ( tmp_func )		987937	1					
ANR	992624	Callee	tmp_get_contsize		987937	0					
ANR	992625	Identifier	tmp_get_contsize		987937	0					
ANR	992626	ArgumentList	tmp_func		987937	1					
ANR	992627	Argument	tmp_func		987937	0					
ANR	992628	Identifier	tmp_func		987937	0					
ANR	992629	ExpressionStatement	"loc_buf = calloc ( cont_size , 1 )"	5622:6:157879:157910	987937	2	True				
ANR	992630	AssignmentExpression	"loc_buf = calloc ( cont_size , 1 )"		987937	0		=			
ANR	992631	Identifier	loc_buf		987937	0					
ANR	992632	CallExpression	"calloc ( cont_size , 1 )"		987937	1					
ANR	992633	Callee	calloc		987937	0					
ANR	992634	Identifier	calloc		987937	0					
ANR	992635	ArgumentList	cont_size		987937	1					
ANR	992636	Argument	cont_size		987937	0					
ANR	992637	Identifier	cont_size		987937	0					
ANR	992638	Argument	1		987937	1					
ANR	992639	PrimaryExpression	1		987937	0					
ANR	992640	ExpressionStatement	"r_io_read_at ( core -> io , tmp_func -> addr , loc_buf , cont_size )"	5623:6:157918:157977	987937	3	True				
ANR	992641	CallExpression	"r_io_read_at ( core -> io , tmp_func -> addr , loc_buf , cont_size )"		987937	0					
ANR	992642	Callee	r_io_read_at		987937	0					
ANR	992643	Identifier	r_io_read_at		987937	0					
ANR	992644	ArgumentList	core -> io		987937	1					
ANR	992645	Argument	core -> io		987937	0					
ANR	992646	PtrMemberAccess	core -> io		987937	0					
ANR	992647	Identifier	core		987937	0					
ANR	992648	Identifier	io		987937	1					
ANR	992649	Argument	tmp_func -> addr		987937	1					
ANR	992650	PtrMemberAccess	tmp_func -> addr		987937	0					
ANR	992651	Identifier	tmp_func		987937	0					
ANR	992652	Identifier	addr		987937	1					
ANR	992653	Argument	loc_buf		987937	2					
ANR	992654	Identifier	loc_buf		987937	0					
ANR	992655	Argument	cont_size		987937	3					
ANR	992656	Identifier	cont_size		987937	0					
ANR	992657	ExpressionStatement	"r_core_print_disasm_json ( core , tmp_func -> addr , loc_buf , cont_size , 0 , pj )"	5624:6:157985:158059	987937	4	True				
ANR	992658	CallExpression	"r_core_print_disasm_json ( core , tmp_func -> addr , loc_buf , cont_size , 0 , pj )"		987937	0					
ANR	992659	Callee	r_core_print_disasm_json		987937	0					
ANR	992660	Identifier	r_core_print_disasm_json		987937	0					
ANR	992661	ArgumentList	core		987937	1					
ANR	992662	Argument	core		987937	0					
ANR	992663	Identifier	core		987937	0					
ANR	992664	Argument	tmp_func -> addr		987937	1					
ANR	992665	PtrMemberAccess	tmp_func -> addr		987937	0					
ANR	992666	Identifier	tmp_func		987937	0					
ANR	992667	Identifier	addr		987937	1					
ANR	992668	Argument	loc_buf		987937	2					
ANR	992669	Identifier	loc_buf		987937	0					
ANR	992670	Argument	cont_size		987937	3					
ANR	992671	Identifier	cont_size		987937	0					
ANR	992672	Argument	0		987937	4					
ANR	992673	PrimaryExpression	0		987937	0					
ANR	992674	Argument	pj		987937	5					
ANR	992675	Identifier	pj		987937	0					
ANR	992676	ExpressionStatement	free ( loc_buf )	5625:6:158067:158081	987937	5	True				
ANR	992677	CallExpression	free ( loc_buf )		987937	0					
ANR	992678	Callee	free		987937	0					
ANR	992679	Identifier	free		987937	0					
ANR	992680	ArgumentList	loc_buf		987937	1					
ANR	992681	Argument	loc_buf		987937	0					
ANR	992682	Identifier	loc_buf		987937	0					
ANR	992683	Statement	r_list_foreach	5627:5:158095:158108	987937	15	True				
ANR	992684	Statement	(	5627:20:158110:158110	987937	16	True				
ANR	992685	Statement	f	5627:21:158111:158111	987937	17	True				
ANR	992686	Statement	->	5627:22:158112:158113	987937	18	True				
ANR	992687	Statement	bbs	5627:24:158114:158116	987937	19	True				
ANR	992688	Statement	","	5627:27:158117:158117	987937	20	True				
ANR	992689	Statement	locs_it	5627:29:158119:158125	987937	21	True				
ANR	992690	Statement	","	5627:36:158126:158126	987937	22	True				
ANR	992691	Statement	b	5627:38:158128:158128	987937	23	True				
ANR	992692	Statement	)	5627:39:158129:158129	987937	24	True				
ANR	992693	CompoundStatement		785:6:22103:22130	987937	25					
ANR	992694	IdentifierDeclStatement	ut8 * buf = malloc ( b -> size ) ;	5629:6:158140:158167	987937	0	True				
ANR	992695	IdentifierDecl	* buf = malloc ( b -> size )		987937	0					
ANR	992696	IdentifierDeclType	ut8 *		987937	0					
ANR	992697	Identifier	buf		987937	1					
ANR	992698	AssignmentExpression	* buf = malloc ( b -> size )		987937	2		=			
ANR	992699	Identifier	buf		987937	0					
ANR	992700	CallExpression	malloc ( b -> size )		987937	1					
ANR	992701	Callee	malloc		987937	0					
ANR	992702	Identifier	malloc		987937	0					
ANR	992703	ArgumentList	b -> size		987937	1					
ANR	992704	Argument	b -> size		987937	0					
ANR	992705	PtrMemberAccess	b -> size		987937	0					
ANR	992706	Identifier	b		987937	0					
ANR	992707	Identifier	size		987937	1					
ANR	992708	IfStatement	if ( buf )		987937	1					
ANR	992709	Condition	buf	5630:10:158179:158181	987937	0	True				
ANR	992710	Identifier	buf		987937	0					
ANR	992711	CompoundStatement		786:15:22147:22147	987937	1					
ANR	992712	ExpressionStatement	"r_io_read_at ( core -> io , b -> addr , buf , b -> size )"	5631:7:158193:158239	987937	0	True				
ANR	992713	CallExpression	"r_io_read_at ( core -> io , b -> addr , buf , b -> size )"		987937	0					
ANR	992714	Callee	r_io_read_at		987937	0					
ANR	992715	Identifier	r_io_read_at		987937	0					
ANR	992716	ArgumentList	core -> io		987937	1					
ANR	992717	Argument	core -> io		987937	0					
ANR	992718	PtrMemberAccess	core -> io		987937	0					
ANR	992719	Identifier	core		987937	0					
ANR	992720	Identifier	io		987937	1					
ANR	992721	Argument	b -> addr		987937	1					
ANR	992722	PtrMemberAccess	b -> addr		987937	0					
ANR	992723	Identifier	b		987937	0					
ANR	992724	Identifier	addr		987937	1					
ANR	992725	Argument	buf		987937	2					
ANR	992726	Identifier	buf		987937	0					
ANR	992727	Argument	b -> size		987937	3					
ANR	992728	PtrMemberAccess	b -> size		987937	0					
ANR	992729	Identifier	b		987937	0					
ANR	992730	Identifier	size		987937	1					
ANR	992731	ExpressionStatement	"r_core_print_disasm_json ( core , b -> addr , buf , b -> size , 0 , pj )"	5632:7:158248:158309	987937	1	True				
ANR	992732	CallExpression	"r_core_print_disasm_json ( core , b -> addr , buf , b -> size , 0 , pj )"		987937	0					
ANR	992733	Callee	r_core_print_disasm_json		987937	0					
ANR	992734	Identifier	r_core_print_disasm_json		987937	0					
ANR	992735	ArgumentList	core		987937	1					
ANR	992736	Argument	core		987937	0					
ANR	992737	Identifier	core		987937	0					
ANR	992738	Argument	b -> addr		987937	1					
ANR	992739	PtrMemberAccess	b -> addr		987937	0					
ANR	992740	Identifier	b		987937	0					
ANR	992741	Identifier	addr		987937	1					
ANR	992742	Argument	buf		987937	2					
ANR	992743	Identifier	buf		987937	0					
ANR	992744	Argument	b -> size		987937	3					
ANR	992745	PtrMemberAccess	b -> size		987937	0					
ANR	992746	Identifier	b		987937	0					
ANR	992747	Identifier	size		987937	1					
ANR	992748	Argument	0		987937	4					
ANR	992749	PrimaryExpression	0		987937	0					
ANR	992750	Argument	pj		987937	5					
ANR	992751	Identifier	pj		987937	0					
ANR	992752	ExpressionStatement	free ( buf )	5633:7:158318:158328	987937	2	True				
ANR	992753	CallExpression	free ( buf )		987937	0					
ANR	992754	Callee	free		987937	0					
ANR	992755	Identifier	free		987937	0					
ANR	992756	ArgumentList	buf		987937	1					
ANR	992757	Argument	buf		987937	0					
ANR	992758	Identifier	buf		987937	0					
ANR	992759	ElseStatement	else		987937	0					
ANR	992760	CompoundStatement		790:13:22306:22306	987937	0					
ANR	992761	ExpressionStatement	"eprintf ( ""cannot allocate %d byte(s)\\n"" , b -> size )"	5635:7:158352:158401	987937	0	True				
ANR	992762	CallExpression	"eprintf ( ""cannot allocate %d byte(s)\\n"" , b -> size )"		987937	0					
ANR	992763	Callee	eprintf		987937	0					
ANR	992764	Identifier	eprintf		987937	0					
ANR	992765	ArgumentList	"""cannot allocate %d byte(s)\\n"""		987937	1					
ANR	992766	Argument	"""cannot allocate %d byte(s)\\n"""		987937	0					
ANR	992767	PrimaryExpression	"""cannot allocate %d byte(s)\\n"""		987937	0					
ANR	992768	Argument	b -> size		987937	1					
ANR	992769	PtrMemberAccess	b -> size		987937	0					
ANR	992770	Identifier	b		987937	0					
ANR	992771	Identifier	size		987937	1					
ANR	992772	ForStatement	for ( ; locs_it && ( tmp_func = locs_it -> data ) ; locs_it = locs_it -> n )		987937	26					
ANR	992773	Condition	locs_it && ( tmp_func = locs_it -> data )	5638:12:158430:158466	987937	0	True				
ANR	992774	AndExpression	locs_it && ( tmp_func = locs_it -> data )		987937	0		&&			
ANR	992775	Identifier	locs_it		987937	0					
ANR	992776	AssignmentExpression	tmp_func = locs_it -> data		987937	1		=			
ANR	992777	Identifier	tmp_func		987937	0					
ANR	992778	PtrMemberAccess	locs_it -> data		987937	1					
ANR	992779	Identifier	locs_it		987937	0					
ANR	992780	Identifier	data		987937	1					
ANR	992781	AssignmentExpression	locs_it = locs_it -> n	5638:51:158469:158488	987937	1	True	=			
ANR	992782	Identifier	locs_it		987937	0					
ANR	992783	PtrMemberAccess	locs_it -> n		987937	1					
ANR	992784	Identifier	locs_it		987937	0					
ANR	992785	Identifier	n		987937	1					
ANR	992786	CompoundStatement		794:73:22454:22454	987937	2					
ANR	992787	ExpressionStatement	cont_size = tmp_get_contsize ( tmp_func )	5639:6:158499:158538	987937	0	True				
ANR	992788	AssignmentExpression	cont_size = tmp_get_contsize ( tmp_func )		987937	0		=			
ANR	992789	Identifier	cont_size		987937	0					
ANR	992790	CallExpression	tmp_get_contsize ( tmp_func )		987937	1					
ANR	992791	Callee	tmp_get_contsize		987937	0					
ANR	992792	Identifier	tmp_get_contsize		987937	0					
ANR	992793	ArgumentList	tmp_func		987937	1					
ANR	992794	Argument	tmp_func		987937	0					
ANR	992795	Identifier	tmp_func		987937	0					
ANR	992796	ExpressionStatement	"loc_buf = calloc ( cont_size , 1 )"	5640:6:158546:158577	987937	1	True				
ANR	992797	AssignmentExpression	"loc_buf = calloc ( cont_size , 1 )"		987937	0		=			
ANR	992798	Identifier	loc_buf		987937	0					
ANR	992799	CallExpression	"calloc ( cont_size , 1 )"		987937	1					
ANR	992800	Callee	calloc		987937	0					
ANR	992801	Identifier	calloc		987937	0					
ANR	992802	ArgumentList	cont_size		987937	1					
ANR	992803	Argument	cont_size		987937	0					
ANR	992804	Identifier	cont_size		987937	0					
ANR	992805	Argument	1		987937	1					
ANR	992806	PrimaryExpression	1		987937	0					
ANR	992807	IfStatement	if ( loc_buf )		987937	2					
ANR	992808	Condition	loc_buf	5641:10:158589:158595	987937	0	True				
ANR	992809	Identifier	loc_buf		987937	0					
ANR	992810	CompoundStatement		797:19:22561:22561	987937	1					
ANR	992811	ExpressionStatement	"r_io_read_at ( core -> io , tmp_func -> addr , loc_buf , cont_size )"	5642:7:158607:158666	987937	0	True				
ANR	992812	CallExpression	"r_io_read_at ( core -> io , tmp_func -> addr , loc_buf , cont_size )"		987937	0					
ANR	992813	Callee	r_io_read_at		987937	0					
ANR	992814	Identifier	r_io_read_at		987937	0					
ANR	992815	ArgumentList	core -> io		987937	1					
ANR	992816	Argument	core -> io		987937	0					
ANR	992817	PtrMemberAccess	core -> io		987937	0					
ANR	992818	Identifier	core		987937	0					
ANR	992819	Identifier	io		987937	1					
ANR	992820	Argument	tmp_func -> addr		987937	1					
ANR	992821	PtrMemberAccess	tmp_func -> addr		987937	0					
ANR	992822	Identifier	tmp_func		987937	0					
ANR	992823	Identifier	addr		987937	1					
ANR	992824	Argument	loc_buf		987937	2					
ANR	992825	Identifier	loc_buf		987937	0					
ANR	992826	Argument	cont_size		987937	3					
ANR	992827	Identifier	cont_size		987937	0					
ANR	992828	ExpressionStatement	"r_core_print_disasm_json ( core , tmp_func -> addr , loc_buf , cont_size , 0 , pj )"	5643:7:158675:158749	987937	1	True				
ANR	992829	CallExpression	"r_core_print_disasm_json ( core , tmp_func -> addr , loc_buf , cont_size , 0 , pj )"		987937	0					
ANR	992830	Callee	r_core_print_disasm_json		987937	0					
ANR	992831	Identifier	r_core_print_disasm_json		987937	0					
ANR	992832	ArgumentList	core		987937	1					
ANR	992833	Argument	core		987937	0					
ANR	992834	Identifier	core		987937	0					
ANR	992835	Argument	tmp_func -> addr		987937	1					
ANR	992836	PtrMemberAccess	tmp_func -> addr		987937	0					
ANR	992837	Identifier	tmp_func		987937	0					
ANR	992838	Identifier	addr		987937	1					
ANR	992839	Argument	loc_buf		987937	2					
ANR	992840	Identifier	loc_buf		987937	0					
ANR	992841	Argument	cont_size		987937	3					
ANR	992842	Identifier	cont_size		987937	0					
ANR	992843	Argument	0		987937	4					
ANR	992844	PrimaryExpression	0		987937	0					
ANR	992845	Argument	pj		987937	5					
ANR	992846	Identifier	pj		987937	0					
ANR	992847	ExpressionStatement	free ( loc_buf )	5644:7:158758:158772	987937	2	True				
ANR	992848	CallExpression	free ( loc_buf )		987937	0					
ANR	992849	Callee	free		987937	0					
ANR	992850	Identifier	free		987937	0					
ANR	992851	ArgumentList	loc_buf		987937	1					
ANR	992852	Argument	loc_buf		987937	0					
ANR	992853	Identifier	loc_buf		987937	0					
ANR	992854	ExpressionStatement	pj_end ( pj )	5647:5:158794:158805	987937	27	True				
ANR	992855	CallExpression	pj_end ( pj )		987937	0					
ANR	992856	Callee	pj_end		987937	0					
ANR	992857	Identifier	pj_end		987937	0					
ANR	992858	ArgumentList	pj		987937	1					
ANR	992859	Argument	pj		987937	0					
ANR	992860	Identifier	pj		987937	0					
ANR	992861	ExpressionStatement	pj_end ( pj )	5648:5:158812:158823	987937	28	True				
ANR	992862	CallExpression	pj_end ( pj )		987937	0					
ANR	992863	Callee	pj_end		987937	0					
ANR	992864	Identifier	pj_end		987937	0					
ANR	992865	ArgumentList	pj		987937	1					
ANR	992866	Argument	pj		987937	0					
ANR	992867	Identifier	pj		987937	0					
ANR	992868	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	5649:5:158830:158868	987937	29	True				
ANR	992869	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		987937	0					
ANR	992870	Callee	r_cons_printf		987937	0					
ANR	992871	Identifier	r_cons_printf		987937	0					
ANR	992872	ArgumentList	"""%s\\n"""		987937	1					
ANR	992873	Argument	"""%s\\n"""		987937	0					
ANR	992874	PrimaryExpression	"""%s\\n"""		987937	0					
ANR	992875	Argument	pj_string ( pj )		987937	1					
ANR	992876	CallExpression	pj_string ( pj )		987937	0					
ANR	992877	Callee	pj_string		987937	0					
ANR	992878	Identifier	pj_string		987937	0					
ANR	992879	ArgumentList	pj		987937	1					
ANR	992880	Argument	pj		987937	0					
ANR	992881	Identifier	pj		987937	0					
ANR	992882	ExpressionStatement	pj_free ( pj )	5650:5:158875:158887	987937	30	True				
ANR	992883	CallExpression	pj_free ( pj )		987937	0					
ANR	992884	Callee	pj_free		987937	0					
ANR	992885	Identifier	pj_free		987937	0					
ANR	992886	ArgumentList	pj		987937	1					
ANR	992887	Argument	pj		987937	0					
ANR	992888	Identifier	pj		987937	0					
ANR	992889	ExpressionStatement	pd_result = 0	5651:5:158894:158907	987937	31	True				
ANR	992890	AssignmentExpression	pd_result = 0		987937	0		=			
ANR	992891	Identifier	pd_result		987937	0					
ANR	992892	PrimaryExpression	0		987937	1					
ANR	992893	ExpressionStatement	"r_config_set ( core -> config , ""asm.bb.middle"" , orig_bb_middle )"	5652:5:158914:158974	987937	32	True				
ANR	992894	CallExpression	"r_config_set ( core -> config , ""asm.bb.middle"" , orig_bb_middle )"		987937	0					
ANR	992895	Callee	r_config_set		987937	0					
ANR	992896	Identifier	r_config_set		987937	0					
ANR	992897	ArgumentList	core -> config		987937	1					
ANR	992898	Argument	core -> config		987937	0					
ANR	992899	PtrMemberAccess	core -> config		987937	0					
ANR	992900	Identifier	core		987937	0					
ANR	992901	Identifier	config		987937	1					
ANR	992902	Argument	"""asm.bb.middle"""		987937	1					
ANR	992903	PrimaryExpression	"""asm.bb.middle"""		987937	0					
ANR	992904	Argument	orig_bb_middle		987937	2					
ANR	992905	Identifier	orig_bb_middle		987937	0					
ANR	992906	ElseStatement	else		987937	0					
ANR	992907	IfStatement	if ( f )		987937	0					
ANR	992908	Condition	f	5653:15:158991:158991	987937	0	True				
ANR	992909	Identifier	f		987937	0					
ANR	992910	CompoundStatement		821:5:23312:23348	987937	1					
ANR	992911	ForStatement	for ( ; locs_it && ( tmp_func = locs_it -> data ) ; locs_it = locs_it -> n )		987937	0					
ANR	992912	Condition	locs_it && ( tmp_func = locs_it -> data )	5655:12:159014:159050	987937	0	True				
ANR	992913	AndExpression	locs_it && ( tmp_func = locs_it -> data )		987937	0		&&			
ANR	992914	Identifier	locs_it		987937	0					
ANR	992915	AssignmentExpression	tmp_func = locs_it -> data		987937	1		=			
ANR	992916	Identifier	tmp_func		987937	0					
ANR	992917	PtrMemberAccess	locs_it -> data		987937	1					
ANR	992918	Identifier	locs_it		987937	0					
ANR	992919	Identifier	data		987937	1					
ANR	992920	AssignmentExpression	locs_it = locs_it -> n	5655:51:159053:159072	987937	1	True	=			
ANR	992921	Identifier	locs_it		987937	0					
ANR	992922	PtrMemberAccess	locs_it -> n		987937	1					
ANR	992923	Identifier	locs_it		987937	0					
ANR	992924	Identifier	n		987937	1					
ANR	992925	CompoundStatement		811:73:23038:23038	987937	2					
ANR	992926	IfStatement	if ( tmp_func -> addr > f -> addr )		987937	0					
ANR	992927	Condition	tmp_func -> addr > f -> addr	5656:10:159087:159110	987937	0	True				
ANR	992928	RelationalExpression	tmp_func -> addr > f -> addr		987937	0		>			
ANR	992929	PtrMemberAccess	tmp_func -> addr		987937	0					
ANR	992930	Identifier	tmp_func		987937	0					
ANR	992931	Identifier	addr		987937	1					
ANR	992932	PtrMemberAccess	f -> addr		987937	1					
ANR	992933	Identifier	f		987937	0					
ANR	992934	Identifier	addr		987937	1					
ANR	992935	CompoundStatement		812:36:23076:23076	987937	1					
ANR	992936	BreakStatement	break ;	5657:7:159122:159127	987937	0	True				
ANR	992937	ExpressionStatement	cont_size = tmp_get_contsize ( tmp_func )	5659:6:159143:159182	987937	1	True				
ANR	992938	AssignmentExpression	cont_size = tmp_get_contsize ( tmp_func )		987937	0		=			
ANR	992939	Identifier	cont_size		987937	0					
ANR	992940	CallExpression	tmp_get_contsize ( tmp_func )		987937	1					
ANR	992941	Callee	tmp_get_contsize		987937	0					
ANR	992942	Identifier	tmp_get_contsize		987937	0					
ANR	992943	ArgumentList	tmp_func		987937	1					
ANR	992944	Argument	tmp_func		987937	0					
ANR	992945	Identifier	tmp_func		987937	0					
ANR	992946	Statement	r_core_cmdf	5660:6:159190:159200	987937	2	True				
ANR	992947	Statement	(	5660:18:159202:159202	987937	3	True				
ANR	992948	Statement	core	5660:19:159203:159206	987937	4	True				
ANR	992949	Statement	","	5660:23:159207:159207	987937	5	True				
ANR	992950	Statement	"""pD %d @ 0x%08"""	5660:25:159209:159223	987937	6	True				
ANR	992951	Statement	PFMT64x	5660:41:159225:159231	987937	7	True				
ANR	992952	Statement	","	5660:48:159232:159232	987937	8	True				
ANR	992953	Statement	cont_size	5660:50:159234:159242	987937	9	True				
ANR	992954	Statement	","	5660:59:159243:159243	987937	10	True				
ANR	992955	Statement	tmp_func	5660:61:159245:159252	987937	11	True				
ANR	992956	Statement	->	5660:69:159253:159254	987937	12	True				
ANR	992957	Statement	addr	5660:71:159255:159258	987937	13	True				
ANR	992958	Statement	)	5660:75:159259:159259	987937	14	True				
ANR	992959	ExpressionStatement		5660:76:159260:159260	987937	15	True				
ANR	992960	ExpressionStatement	cont_size = tmp_get_contsize ( f )	5662:5:159274:159306	987937	1	True				
ANR	992961	AssignmentExpression	cont_size = tmp_get_contsize ( f )		987937	0		=			
ANR	992962	Identifier	cont_size		987937	0					
ANR	992963	CallExpression	tmp_get_contsize ( f )		987937	1					
ANR	992964	Callee	tmp_get_contsize		987937	0					
ANR	992965	Identifier	tmp_get_contsize		987937	0					
ANR	992966	ArgumentList	f		987937	1					
ANR	992967	Argument	f		987937	0					
ANR	992968	Identifier	f		987937	0					
ANR	992969	IdentifierDeclStatement	ut32 linear = f -> _size ;	5664:5:159320:159342	987937	2	True				
ANR	992970	IdentifierDecl	linear = f -> _size		987937	0					
ANR	992971	IdentifierDeclType	ut32		987937	0					
ANR	992972	Identifier	linear		987937	1					
ANR	992973	AssignmentExpression	linear = f -> _size		987937	2		=			
ANR	992974	Identifier	linear		987937	0					
ANR	992975	PtrMemberAccess	f -> _size		987937	1					
ANR	992976	Identifier	f		987937	0					
ANR	992977	Identifier	_size		987937	1					
ANR	992978	IdentifierDeclStatement	ut32 bbsum = r_anal_fcn_realsize ( f ) ;	5665:5:159349:159385	987937	3	True				
ANR	992979	IdentifierDecl	bbsum = r_anal_fcn_realsize ( f )		987937	0					
ANR	992980	IdentifierDeclType	ut32		987937	0					
ANR	992981	Identifier	bbsum		987937	1					
ANR	992982	AssignmentExpression	bbsum = r_anal_fcn_realsize ( f )		987937	2		=			
ANR	992983	Identifier	bbsum		987937	0					
ANR	992984	CallExpression	r_anal_fcn_realsize ( f )		987937	1					
ANR	992985	Callee	r_anal_fcn_realsize		987937	0					
ANR	992986	Identifier	r_anal_fcn_realsize		987937	0					
ANR	992987	ArgumentList	f		987937	1					
ANR	992988	Argument	f		987937	0					
ANR	992989	Identifier	f		987937	0					
ANR	992990	IfStatement	if ( bbsum + 4096 < linear )		987937	4					
ANR	992991	Condition	bbsum + 4096 < linear	5666:9:159396:159416	987937	0	True				
ANR	992992	RelationalExpression	bbsum + 4096 < linear		987937	0		<			
ANR	992993	AdditiveExpression	bbsum + 4096		987937	0		+			
ANR	992994	Identifier	bbsum		987937	0					
ANR	992995	PrimaryExpression	4096		987937	1					
ANR	992996	Identifier	linear		987937	1					
ANR	992997	CompoundStatement		822:32:23382:23382	987937	1					
ANR	992998	ExpressionStatement	"eprintf ( ""Linear size differs too much from the bbsum, please use pdr instead.\\n"" )"	5667:6:159427:159509	987937	0	True				
ANR	992999	CallExpression	"eprintf ( ""Linear size differs too much from the bbsum, please use pdr instead.\\n"" )"		987937	0					
ANR	993000	Callee	eprintf		987937	0					
ANR	993001	Identifier	eprintf		987937	0					
ANR	993002	ArgumentList	"""Linear size differs too much from the bbsum, please use pdr instead.\\n"""		987937	1					
ANR	993003	Argument	"""Linear size differs too much from the bbsum, please use pdr instead.\\n"""		987937	0					
ANR	993004	PrimaryExpression	"""Linear size differs too much from the bbsum, please use pdr instead.\\n"""		987937	0					
ANR	993005	ElseStatement	else		987937	0					
ANR	993006	CompoundStatement		829:6:23654:23679	987937	0					
ANR	993007	IdentifierDeclStatement	ut64 at = f -> addr ;	5669:6:159531:159548	987937	0	True				
ANR	993008	IdentifierDecl	at = f -> addr		987937	0					
ANR	993009	IdentifierDeclType	ut64		987937	0					
ANR	993010	Identifier	at		987937	1					
ANR	993011	AssignmentExpression	at = f -> addr		987937	2		=			
ANR	993012	Identifier	at		987937	0					
ANR	993013	PtrMemberAccess	f -> addr		987937	1					
ANR	993014	Identifier	f		987937	0					
ANR	993015	Identifier	addr		987937	1					
ANR	993016	IdentifierDeclStatement	ut64 sz = f -> _size > 0 ? f -> _size : r_anal_fcn_realsize ( f ) ;	5670:6:159556:159615	987937	1	True				
ANR	993017	IdentifierDecl	sz = f -> _size > 0 ? f -> _size : r_anal_fcn_realsize ( f )		987937	0					
ANR	993018	IdentifierDeclType	ut64		987937	0					
ANR	993019	Identifier	sz		987937	1					
ANR	993020	AssignmentExpression	sz = f -> _size > 0 ? f -> _size : r_anal_fcn_realsize ( f )		987937	2		=			
ANR	993021	Identifier	sz		987937	0					
ANR	993022	ConditionalExpression	f -> _size > 0 ? f -> _size : r_anal_fcn_realsize ( f )		987937	1					
ANR	993023	Condition	f -> _size > 0		987937	0					
ANR	993024	RelationalExpression	f -> _size > 0		987937	0		>			
ANR	993025	PtrMemberAccess	f -> _size		987937	0					
ANR	993026	Identifier	f		987937	0					
ANR	993027	Identifier	_size		987937	1					
ANR	993028	PrimaryExpression	0		987937	1					
ANR	993029	PtrMemberAccess	f -> _size		987937	1					
ANR	993030	Identifier	f		987937	0					
ANR	993031	Identifier	_size		987937	1					
ANR	993032	CallExpression	r_anal_fcn_realsize ( f )		987937	2					
ANR	993033	Callee	r_anal_fcn_realsize		987937	0					
ANR	993034	Identifier	r_anal_fcn_realsize		987937	0					
ANR	993035	ArgumentList	f		987937	1					
ANR	993036	Argument	f		987937	0					
ANR	993037	Identifier	f		987937	0					
ANR	993038	IdentifierDeclStatement	ut32 rs = r_anal_fcn_realsize ( f ) ;	5671:6:159623:159656	987937	2	True				
ANR	993039	IdentifierDecl	rs = r_anal_fcn_realsize ( f )		987937	0					
ANR	993040	IdentifierDeclType	ut32		987937	0					
ANR	993041	Identifier	rs		987937	1					
ANR	993042	AssignmentExpression	rs = r_anal_fcn_realsize ( f )		987937	2		=			
ANR	993043	Identifier	rs		987937	0					
ANR	993044	CallExpression	r_anal_fcn_realsize ( f )		987937	1					
ANR	993045	Callee	r_anal_fcn_realsize		987937	0					
ANR	993046	Identifier	r_anal_fcn_realsize		987937	0					
ANR	993047	ArgumentList	f		987937	1					
ANR	993048	Argument	f		987937	0					
ANR	993049	Identifier	f		987937	0					
ANR	993050	ExpressionStatement	"sz = R_MAX ( sz , rs )"	5672:6:159664:159683	987937	3	True				
ANR	993051	AssignmentExpression	"sz = R_MAX ( sz , rs )"		987937	0		=			
ANR	993052	Identifier	sz		987937	0					
ANR	993053	CallExpression	"R_MAX ( sz , rs )"		987937	1					
ANR	993054	Callee	R_MAX		987937	0					
ANR	993055	Identifier	R_MAX		987937	0					
ANR	993056	ArgumentList	sz		987937	1					
ANR	993057	Argument	sz		987937	0					
ANR	993058	Identifier	sz		987937	0					
ANR	993059	Argument	rs		987937	1					
ANR	993060	Identifier	rs		987937	0					
ANR	993061	IdentifierDeclStatement	"ut8 * buf = calloc ( sz , 1 ) ;"	5673:6:159691:159716	987937	4	True				
ANR	993062	IdentifierDecl	"* buf = calloc ( sz , 1 )"		987937	0					
ANR	993063	IdentifierDeclType	ut8 *		987937	0					
ANR	993064	Identifier	buf		987937	1					
ANR	993065	AssignmentExpression	"* buf = calloc ( sz , 1 )"		987937	2		=			
ANR	993066	Identifier	buf		987937	0					
ANR	993067	CallExpression	"calloc ( sz , 1 )"		987937	1					
ANR	993068	Callee	calloc		987937	0					
ANR	993069	Identifier	calloc		987937	0					
ANR	993070	ArgumentList	sz		987937	1					
ANR	993071	Argument	sz		987937	0					
ANR	993072	Identifier	sz		987937	0					
ANR	993073	Argument	1		987937	1					
ANR	993074	PrimaryExpression	1		987937	0					
ANR	993075	ExpressionStatement	"( void ) r_io_read_at ( core -> io , at , buf , sz )"	5674:6:159724:159766	987937	5	True				
ANR	993076	CastExpression	"( void ) r_io_read_at ( core -> io , at , buf , sz )"		987937	0					
ANR	993077	CastTarget	void		987937	0					
ANR	993078	CallExpression	"r_io_read_at ( core -> io , at , buf , sz )"		987937	1					
ANR	993079	Callee	r_io_read_at		987937	0					
ANR	993080	Identifier	r_io_read_at		987937	0					
ANR	993081	ArgumentList	core -> io		987937	1					
ANR	993082	Argument	core -> io		987937	0					
ANR	993083	PtrMemberAccess	core -> io		987937	0					
ANR	993084	Identifier	core		987937	0					
ANR	993085	Identifier	io		987937	1					
ANR	993086	Argument	at		987937	1					
ANR	993087	Identifier	at		987937	0					
ANR	993088	Argument	buf		987937	2					
ANR	993089	Identifier	buf		987937	0					
ANR	993090	Argument	sz		987937	3					
ANR	993091	Identifier	sz		987937	0					
ANR	993092	ExpressionStatement	"core -> num -> value = r_core_print_disasm ( core -> print , core , at , buf , sz , sz , 0 , 1 , 0 , NULL , f )"	5675:6:159774:159867	987937	6	True				
ANR	993093	AssignmentExpression	"core -> num -> value = r_core_print_disasm ( core -> print , core , at , buf , sz , sz , 0 , 1 , 0 , NULL , f )"		987937	0		=			
ANR	993094	PtrMemberAccess	core -> num -> value		987937	0					
ANR	993095	PtrMemberAccess	core -> num		987937	0					
ANR	993096	Identifier	core		987937	0					
ANR	993097	Identifier	num		987937	1					
ANR	993098	Identifier	value		987937	1					
ANR	993099	CallExpression	"r_core_print_disasm ( core -> print , core , at , buf , sz , sz , 0 , 1 , 0 , NULL , f )"		987937	1					
ANR	993100	Callee	r_core_print_disasm		987937	0					
ANR	993101	Identifier	r_core_print_disasm		987937	0					
ANR	993102	ArgumentList	core -> print		987937	1					
ANR	993103	Argument	core -> print		987937	0					
ANR	993104	PtrMemberAccess	core -> print		987937	0					
ANR	993105	Identifier	core		987937	0					
ANR	993106	Identifier	print		987937	1					
ANR	993107	Argument	core		987937	1					
ANR	993108	Identifier	core		987937	0					
ANR	993109	Argument	at		987937	2					
ANR	993110	Identifier	at		987937	0					
ANR	993111	Argument	buf		987937	3					
ANR	993112	Identifier	buf		987937	0					
ANR	993113	Argument	sz		987937	4					
ANR	993114	Identifier	sz		987937	0					
ANR	993115	Argument	sz		987937	5					
ANR	993116	Identifier	sz		987937	0					
ANR	993117	Argument	0		987937	6					
ANR	993118	PrimaryExpression	0		987937	0					
ANR	993119	Argument	1		987937	7					
ANR	993120	PrimaryExpression	1		987937	0					
ANR	993121	Argument	0		987937	8					
ANR	993122	PrimaryExpression	0		987937	0					
ANR	993123	Argument	NULL		987937	9					
ANR	993124	Identifier	NULL		987937	0					
ANR	993125	Argument	f		987937	10					
ANR	993126	Identifier	f		987937	0					
ANR	993127	ExpressionStatement	free ( buf )	5676:6:159875:159885	987937	7	True				
ANR	993128	CallExpression	free ( buf )		987937	0					
ANR	993129	Callee	free		987937	0					
ANR	993130	Identifier	free		987937	0					
ANR	993131	ArgumentList	buf		987937	1					
ANR	993132	Argument	buf		987937	0					
ANR	993133	Identifier	buf		987937	0					
ANR	993134	ForStatement	for ( ; locs_it && ( tmp_func = locs_it -> data ) ; locs_it = locs_it -> n )		987937	5					
ANR	993135	Condition	locs_it && ( tmp_func = locs_it -> data )	5680:12:160025:160061	987937	0	True				
ANR	993136	AndExpression	locs_it && ( tmp_func = locs_it -> data )		987937	0		&&			
ANR	993137	Identifier	locs_it		987937	0					
ANR	993138	AssignmentExpression	tmp_func = locs_it -> data		987937	1		=			
ANR	993139	Identifier	tmp_func		987937	0					
ANR	993140	PtrMemberAccess	locs_it -> data		987937	1					
ANR	993141	Identifier	locs_it		987937	0					
ANR	993142	Identifier	data		987937	1					
ANR	993143	AssignmentExpression	locs_it = locs_it -> n	5680:51:160064:160083	987937	1	True	=			
ANR	993144	Identifier	locs_it		987937	0					
ANR	993145	PtrMemberAccess	locs_it -> n		987937	1					
ANR	993146	Identifier	locs_it		987937	0					
ANR	993147	Identifier	n		987937	1					
ANR	993148	CompoundStatement		836:73:24049:24049	987937	2					
ANR	993149	ExpressionStatement	cont_size = tmp_get_contsize ( tmp_func )	5681:6:160094:160133	987937	0	True				
ANR	993150	AssignmentExpression	cont_size = tmp_get_contsize ( tmp_func )		987937	0		=			
ANR	993151	Identifier	cont_size		987937	0					
ANR	993152	CallExpression	tmp_get_contsize ( tmp_func )		987937	1					
ANR	993153	Callee	tmp_get_contsize		987937	0					
ANR	993154	Identifier	tmp_get_contsize		987937	0					
ANR	993155	ArgumentList	tmp_func		987937	1					
ANR	993156	Argument	tmp_func		987937	0					
ANR	993157	Identifier	tmp_func		987937	0					
ANR	993158	Statement	r_core_cmdf	5682:6:160141:160151	987937	1	True				
ANR	993159	Statement	(	5682:18:160153:160153	987937	2	True				
ANR	993160	Statement	core	5682:19:160154:160157	987937	3	True				
ANR	993161	Statement	","	5682:23:160158:160158	987937	4	True				
ANR	993162	Statement	"""pD %d @ 0x%08"""	5682:25:160160:160174	987937	5	True				
ANR	993163	Statement	PFMT64x	5682:41:160176:160182	987937	6	True				
ANR	993164	Statement	","	5682:48:160183:160183	987937	7	True				
ANR	993165	Statement	cont_size	5682:50:160185:160193	987937	8	True				
ANR	993166	Statement	","	5682:59:160194:160194	987937	9	True				
ANR	993167	Statement	tmp_func	5682:61:160196:160203	987937	10	True				
ANR	993168	Statement	->	5682:69:160204:160205	987937	11	True				
ANR	993169	Statement	addr	5682:71:160206:160209	987937	12	True				
ANR	993170	Statement	)	5682:75:160210:160210	987937	13	True				
ANR	993171	ExpressionStatement		5682:76:160211:160211	987937	14	True				
ANR	993172	ExpressionStatement	pd_result = 0	5685:5:160232:160245	987937	6	True				
ANR	993173	AssignmentExpression	pd_result = 0		987937	0		=			
ANR	993174	Identifier	pd_result		987937	0					
ANR	993175	PrimaryExpression	0		987937	1					
ANR	993176	ElseStatement	else		987937	0					
ANR	993177	CompoundStatement		842:11:24221:24221	987937	0					
ANR	993178	Statement	eprintf	5687:5:160265:160271	987937	0	True				
ANR	993179	Statement	(	5687:13:160273:160273	987937	1	True				
ANR	993180	Statement	"""pdf: Cannot find function at 0x%08"""	5687:14:160274:160309	987937	2	True				
ANR	993181	Statement	PFMT64x	5687:50:160310:160316	987937	3	True				
ANR	993182	Statement	"""\\n"""	5687:58:160318:160321	987937	4	True				
ANR	993183	Statement	","	5687:62:160322:160322	987937	5	True				
ANR	993184	Statement	core	5687:64:160324:160327	987937	6	True				
ANR	993185	Statement	->	5687:68:160328:160329	987937	7	True				
ANR	993186	Statement	offset	5687:70:160330:160335	987937	8	True				
ANR	993187	Statement	)	5687:76:160336:160336	987937	9	True				
ANR	993188	ExpressionStatement		5687:77:160337:160337	987937	10	True				
ANR	993189	ExpressionStatement	processed_cmd = true	5688:5:160344:160364	987937	11	True				
ANR	993190	AssignmentExpression	processed_cmd = true		987937	0		=			
ANR	993191	Identifier	processed_cmd		987937	0					
ANR	993192	Identifier	true		987937	1					
ANR	993193	ExpressionStatement	core -> num -> value = 0	5689:5:160371:160391	987937	12	True				
ANR	993194	AssignmentExpression	core -> num -> value = 0		987937	0		=			
ANR	993195	PtrMemberAccess	core -> num -> value		987937	0					
ANR	993196	PtrMemberAccess	core -> num		987937	0					
ANR	993197	Identifier	core		987937	0					
ANR	993198	Identifier	num		987937	1					
ANR	993199	Identifier	value		987937	1					
ANR	993200	PrimaryExpression	0		987937	1					
ANR	993201	IfStatement	if ( bsz != core -> blocksize )		987937	8					
ANR	993202	Condition	bsz != core -> blocksize	5691:8:160407:160428	987937	0	True				
ANR	993203	EqualityExpression	bsz != core -> blocksize		987937	0		!=			
ANR	993204	Identifier	bsz		987937	0					
ANR	993205	PtrMemberAccess	core -> blocksize		987937	1					
ANR	993206	Identifier	core		987937	0					
ANR	993207	Identifier	blocksize		987937	1					
ANR	993208	CompoundStatement		847:32:24394:24394	987937	1					
ANR	993209	ExpressionStatement	"r_core_block_size ( core , bsz )"	5692:5:160438:160467	987937	0	True				
ANR	993210	CallExpression	"r_core_block_size ( core , bsz )"		987937	0					
ANR	993211	Callee	r_core_block_size		987937	0					
ANR	993212	Identifier	r_core_block_size		987937	0					
ANR	993213	ArgumentList	core		987937	1					
ANR	993214	Argument	core		987937	0					
ANR	993215	Identifier	core		987937	0					
ANR	993216	Argument	bsz		987937	1					
ANR	993217	Identifier	bsz		987937	0					
ANR	993218	ExpressionStatement	l = 0	5695:3:160483:160488	987937	42	True				
ANR	993219	AssignmentExpression	l = 0		987937	0		=			
ANR	993220	Identifier	l		987937	0					
ANR	993221	PrimaryExpression	0		987937	1					
ANR	993222	BreakStatement	break ;	5696:3:160493:160498	987937	43	True				
ANR	993223	Label	case 'p' :	5697:2:160502:160510	987937	44	True				
ANR	993224	ExpressionStatement	processed_cmd = true	5698:3:160524:160544	987937	45	True				
ANR	993225	AssignmentExpression	processed_cmd = true		987937	0		=			
ANR	993226	Identifier	processed_cmd		987937	0					
ANR	993227	Identifier	true		987937	1					
ANR	993228	ExpressionStatement	"disasm_ropchain ( core , core -> offset , 'D' )"	5699:3:160549:160590	987937	46	True				
ANR	993229	CallExpression	"disasm_ropchain ( core , core -> offset , 'D' )"		987937	0					
ANR	993230	Callee	disasm_ropchain		987937	0					
ANR	993231	Identifier	disasm_ropchain		987937	0					
ANR	993232	ArgumentList	core		987937	1					
ANR	993233	Argument	core		987937	0					
ANR	993234	Identifier	core		987937	0					
ANR	993235	Argument	core -> offset		987937	1					
ANR	993236	PtrMemberAccess	core -> offset		987937	0					
ANR	993237	Identifier	core		987937	0					
ANR	993238	Identifier	offset		987937	1					
ANR	993239	Argument	'D'		987937	2					
ANR	993240	PrimaryExpression	'D'		987937	0					
ANR	993241	ExpressionStatement	pd_result = true	5700:3:160595:160611	987937	47	True				
ANR	993242	AssignmentExpression	pd_result = true		987937	0		=			
ANR	993243	Identifier	pd_result		987937	0					
ANR	993244	Identifier	true		987937	1					
ANR	993245	BreakStatement	break ;	5701:3:160616:160621	987937	48	True				
ANR	993246	Label	case 'l' :	5702:2:160625:160633	987937	49	True				
ANR	993247	ExpressionStatement	processed_cmd = true	5703:3:160647:160667	987937	50	True				
ANR	993248	AssignmentExpression	processed_cmd = true		987937	0		=			
ANR	993249	Identifier	processed_cmd		987937	0					
ANR	993250	Identifier	true		987937	1					
ANR	993251	CompoundStatement		862:4:24659:24669	987937	51					
ANR	993252	IdentifierDeclStatement	RAsmOp asmop ;	5705:4:160678:160690	987937	0	True				
ANR	993253	IdentifierDecl	asmop		987937	0					
ANR	993254	IdentifierDeclType	RAsmOp		987937	0					
ANR	993255	Identifier	asmop		987937	1					
ANR	993256	IdentifierDeclStatement	"int j , ret ;"	5706:4:160696:160706	987937	1	True				
ANR	993257	IdentifierDecl	j		987937	0					
ANR	993258	IdentifierDeclType	int		987937	0					
ANR	993259	Identifier	j		987937	1					
ANR	993260	IdentifierDecl	ret		987937	1					
ANR	993261	IdentifierDeclType	int		987937	0					
ANR	993262	Identifier	ret		987937	1					
ANR	993263	IfStatement	if ( ! l )		987937	2					
ANR	993264	Condition	! l	5707:8:160716:160717	987937	0	True				
ANR	993265	UnaryOperationExpression	! l		987937	0					
ANR	993266	UnaryOperator	!		987937	0					
ANR	993267	Identifier	l		987937	1					
ANR	993268	CompoundStatement		863:12:24683:24683	987937	1					
ANR	993269	ExpressionStatement	l = len	5708:5:160727:160734	987937	0	True				
ANR	993270	AssignmentExpression	l = len		987937	0		=			
ANR	993271	Identifier	l		987937	0					
ANR	993272	Identifier	len		987937	1					
ANR	993273	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	5710:4:160746:160776	987937	3	True				
ANR	993274	CallExpression	"r_cons_break_push ( NULL , NULL )"		987937	0					
ANR	993275	Callee	r_cons_break_push		987937	0					
ANR	993276	Identifier	r_cons_break_push		987937	0					
ANR	993277	ArgumentList	NULL		987937	1					
ANR	993278	Argument	NULL		987937	0					
ANR	993279	Identifier	NULL		987937	0					
ANR	993280	Argument	NULL		987937	1					
ANR	993281	Identifier	NULL		987937	0					
ANR	993282	ForStatement	"for ( i = j = 0 ; i < core -> blocksize && j < l ; i += ret , j ++ )"		987937	4					
ANR	993283	ForInit	i = j = 0 ;	5711:9:160787:160796	987937	0	True				
ANR	993284	AssignmentExpression	i = j = 0		987937	0		=			
ANR	993285	Identifier	i		987937	0					
ANR	993286	AssignmentExpression	j = 0		987937	1		=			
ANR	993287	Identifier	j		987937	0					
ANR	993288	PrimaryExpression	0		987937	1					
ANR	993289	Condition	i < core -> blocksize && j < l	5711:20:160798:160825	987937	1	True				
ANR	993290	AndExpression	i < core -> blocksize && j < l		987937	0		&&			
ANR	993291	RelationalExpression	i < core -> blocksize		987937	0		<			
ANR	993292	Identifier	i		987937	0					
ANR	993293	PtrMemberAccess	core -> blocksize		987937	1					
ANR	993294	Identifier	core		987937	0					
ANR	993295	Identifier	blocksize		987937	1					
ANR	993296	RelationalExpression	j < l		987937	1		<			
ANR	993297	Identifier	j		987937	0					
ANR	993298	Identifier	l		987937	1					
ANR	993299	Expression	"i += ret , j ++"	5711:50:160828:160840	987937	2	True				
ANR	993300	AssignmentExpression	i += ret		987937	0		+=			
ANR	993301	Identifier	i		987937	0					
ANR	993302	Identifier	ret		987937	1					
ANR	993303	PostIncDecOperationExpression	j ++		987937	1					
ANR	993304	Identifier	j		987937	0					
ANR	993305	IncDec	++		987937	1					
ANR	993306	CompoundStatement		867:65:24806:24806	987937	3					
ANR	993307	ExpressionStatement	"ret = r_asm_disassemble ( core -> assembler , & asmop , block + i , len - i )"	5712:5:160850:160919	987937	0	True				
ANR	993308	AssignmentExpression	"ret = r_asm_disassemble ( core -> assembler , & asmop , block + i , len - i )"		987937	0		=			
ANR	993309	Identifier	ret		987937	0					
ANR	993310	CallExpression	"r_asm_disassemble ( core -> assembler , & asmop , block + i , len - i )"		987937	1					
ANR	993311	Callee	r_asm_disassemble		987937	0					
ANR	993312	Identifier	r_asm_disassemble		987937	0					
ANR	993313	ArgumentList	core -> assembler		987937	1					
ANR	993314	Argument	core -> assembler		987937	0					
ANR	993315	PtrMemberAccess	core -> assembler		987937	0					
ANR	993316	Identifier	core		987937	0					
ANR	993317	Identifier	assembler		987937	1					
ANR	993318	Argument	& asmop		987937	1					
ANR	993319	UnaryOperationExpression	& asmop		987937	0					
ANR	993320	UnaryOperator	&		987937	0					
ANR	993321	Identifier	asmop		987937	1					
ANR	993322	Argument	block + i		987937	2					
ANR	993323	AdditiveExpression	block + i		987937	0		+			
ANR	993324	Identifier	block		987937	0					
ANR	993325	Identifier	i		987937	1					
ANR	993326	Argument	len - i		987937	3					
ANR	993327	AdditiveExpression	len - i		987937	0		-			
ANR	993328	Identifier	len		987937	0					
ANR	993329	Identifier	i		987937	1					
ANR	993330	IfStatement	if ( r_cons_is_breaked ( ) )		987937	1					
ANR	993331	Condition	r_cons_is_breaked ( )	5713:9:160930:160949	987937	0	True				
ANR	993332	CallExpression	r_cons_is_breaked ( )		987937	0					
ANR	993333	Callee	r_cons_is_breaked		987937	0					
ANR	993334	Identifier	r_cons_is_breaked		987937	0					
ANR	993335	ArgumentList			987937	1					
ANR	993336	CompoundStatement		869:31:24915:24915	987937	1					
ANR	993337	BreakStatement	break ;	5714:6:160960:160965	987937	0	True				
ANR	993338	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , ret )"	5716:5:160979:161006	987937	2	True				
ANR	993339	CallExpression	"r_cons_printf ( ""%d\\n"" , ret )"		987937	0					
ANR	993340	Callee	r_cons_printf		987937	0					
ANR	993341	Identifier	r_cons_printf		987937	0					
ANR	993342	ArgumentList	"""%d\\n"""		987937	1					
ANR	993343	Argument	"""%d\\n"""		987937	0					
ANR	993344	PrimaryExpression	"""%d\\n"""		987937	0					
ANR	993345	Argument	ret		987937	1					
ANR	993346	Identifier	ret		987937	0					
ANR	993347	IfStatement	if ( ret < 1 )		987937	3					
ANR	993348	Condition	ret < 1	5717:9:161017:161023	987937	0	True				
ANR	993349	RelationalExpression	ret < 1		987937	0		<			
ANR	993350	Identifier	ret		987937	0					
ANR	993351	PrimaryExpression	1		987937	1					
ANR	993352	CompoundStatement		873:18:24989:24989	987937	1					
ANR	993353	ExpressionStatement	ret = 1	5718:6:161034:161041	987937	0	True				
ANR	993354	AssignmentExpression	ret = 1		987937	0		=			
ANR	993355	Identifier	ret		987937	0					
ANR	993356	PrimaryExpression	1		987937	1					
ANR	993357	ExpressionStatement	r_cons_break_pop ( )	5721:4:161060:161079	987937	5	True				
ANR	993358	CallExpression	r_cons_break_pop ( )		987937	0					
ANR	993359	Callee	r_cons_break_pop		987937	0					
ANR	993360	Identifier	r_cons_break_pop		987937	0					
ANR	993361	ArgumentList			987937	1					
ANR	993362	ExpressionStatement	pd_result = 0	5722:4:161085:161098	987937	6	True				
ANR	993363	AssignmentExpression	pd_result = 0		987937	0		=			
ANR	993364	Identifier	pd_result		987937	0					
ANR	993365	PrimaryExpression	0		987937	1					
ANR	993366	BreakStatement	break ;	5724:3:161108:161113	987937	52	True				
ANR	993367	Label	case 'j' :	5725:2:161117:161125	987937	53	True				
ANR	993368	ExpressionStatement	processed_cmd = true	5726:3:161137:161157	987937	54	True				
ANR	993369	AssignmentExpression	processed_cmd = true		987937	0		=			
ANR	993370	Identifier	processed_cmd		987937	0					
ANR	993371	Identifier	true		987937	1					
ANR	993372	IfStatement	if ( * input == 'D' )		987937	55					
ANR	993373	Condition	* input == 'D'	5727:7:161166:161178	987937	0	True				
ANR	993374	EqualityExpression	* input == 'D'		987937	0		==			
ANR	993375	UnaryOperationExpression	* input		987937	0					
ANR	993376	UnaryOperator	*		987937	0					
ANR	993377	Identifier	input		987937	1					
ANR	993378	PrimaryExpression	'D'		987937	1					
ANR	993379	CompoundStatement		883:22:25144:25144	987937	1					
ANR	993380	ExpressionStatement	"cmd_pDj ( core , input + 2 )"	5728:4:161187:161212	987937	0	True				
ANR	993381	CallExpression	"cmd_pDj ( core , input + 2 )"		987937	0					
ANR	993382	Callee	cmd_pDj		987937	0					
ANR	993383	Identifier	cmd_pDj		987937	0					
ANR	993384	ArgumentList	core		987937	1					
ANR	993385	Argument	core		987937	0					
ANR	993386	Identifier	core		987937	0					
ANR	993387	Argument	input + 2		987937	1					
ANR	993388	AdditiveExpression	input + 2		987937	0		+			
ANR	993389	Identifier	input		987937	0					
ANR	993390	PrimaryExpression	2		987937	1					
ANR	993391	ElseStatement	else		987937	0					
ANR	993392	CompoundStatement		885:10:25187:25187	987937	0					
ANR	993393	ExpressionStatement	"cmd_pdj ( core , input + 2 , block )"	5730:4:161230:161262	987937	0	True				
ANR	993394	CallExpression	"cmd_pdj ( core , input + 2 , block )"		987937	0					
ANR	993395	Callee	cmd_pdj		987937	0					
ANR	993396	Identifier	cmd_pdj		987937	0					
ANR	993397	ArgumentList	core		987937	1					
ANR	993398	Argument	core		987937	0					
ANR	993399	Identifier	core		987937	0					
ANR	993400	Argument	input + 2		987937	1					
ANR	993401	AdditiveExpression	input + 2		987937	0		+			
ANR	993402	Identifier	input		987937	0					
ANR	993403	PrimaryExpression	2		987937	1					
ANR	993404	Argument	block		987937	2					
ANR	993405	Identifier	block		987937	0					
ANR	993406	ExpressionStatement	r_cons_newline ( )	5732:3:161272:161289	987937	56	True				
ANR	993407	CallExpression	r_cons_newline ( )		987937	0					
ANR	993408	Callee	r_cons_newline		987937	0					
ANR	993409	Identifier	r_cons_newline		987937	0					
ANR	993410	ArgumentList			987937	1					
ANR	993411	ExpressionStatement	pd_result = 0	5733:3:161294:161307	987937	57	True				
ANR	993412	AssignmentExpression	pd_result = 0		987937	0		=			
ANR	993413	Identifier	pd_result		987937	0					
ANR	993414	PrimaryExpression	0		987937	1					
ANR	993415	BreakStatement	break ;	5734:3:161312:161317	987937	58	True				
ANR	993416	Label	case 'J' :	5735:2:161321:161329	987937	59	True				
ANR	993417	ExpressionStatement	formatted_json = true	5736:3:161341:161362	987937	60	True				
ANR	993418	AssignmentExpression	formatted_json = true		987937	0		=			
ANR	993419	Identifier	formatted_json		987937	0					
ANR	993420	Identifier	true		987937	1					
ANR	993421	BreakStatement	break ;	5737:3:161367:161372	987937	61	True				
ANR	993422	Label	case 0 :	5738:2:161376:161382	987937	62	True				
ANR	993423	IfStatement	if ( ! core -> fixedblock && * input == 'd' )		987937	63					
ANR	993424	Condition	! core -> fixedblock && * input == 'd'	5740:7:161458:161491	987937	0	True				
ANR	993425	AndExpression	! core -> fixedblock && * input == 'd'		987937	0		&&			
ANR	993426	UnaryOperationExpression	! core -> fixedblock		987937	0					
ANR	993427	UnaryOperator	!		987937	0					
ANR	993428	PtrMemberAccess	core -> fixedblock		987937	1					
ANR	993429	Identifier	core		987937	0					
ANR	993430	Identifier	fixedblock		987937	1					
ANR	993431	EqualityExpression	* input == 'd'		987937	1		==			
ANR	993432	UnaryOperationExpression	* input		987937	0					
ANR	993433	UnaryOperator	*		987937	0					
ANR	993434	Identifier	input		987937	1					
ANR	993435	PrimaryExpression	'd'		987937	1					
ANR	993436	CompoundStatement		896:43:25457:25457	987937	1					
ANR	993437	ExpressionStatement	l /= 4	5741:4:161500:161506	987937	0	True				
ANR	993438	AssignmentExpression	l /= 4		987937	0		/=			
ANR	993439	Identifier	l		987937	0					
ANR	993440	PrimaryExpression	4		987937	1					
ANR	993441	BreakStatement	break ;	5743:3:161516:161521	987937	64	True				
ANR	993442	Label	case '?' :	5744:2:161525:161533	987937	65	True				
ANR	993443	ExpressionStatement	processed_cmd = true	5745:3:161547:161567	987937	66	True				
ANR	993444	AssignmentExpression	processed_cmd = true		987937	0		=			
ANR	993445	Identifier	processed_cmd		987937	0					
ANR	993446	Identifier	true		987937	1					
ANR	993447	ExpressionStatement	"r_core_cmd_help ( core , help_msg_pd )"	5746:3:161572:161607	987937	67	True				
ANR	993448	CallExpression	"r_core_cmd_help ( core , help_msg_pd )"		987937	0					
ANR	993449	Callee	r_core_cmd_help		987937	0					
ANR	993450	Identifier	r_core_cmd_help		987937	0					
ANR	993451	ArgumentList	core		987937	1					
ANR	993452	Argument	core		987937	0					
ANR	993453	Identifier	core		987937	0					
ANR	993454	Argument	help_msg_pd		987937	1					
ANR	993455	Identifier	help_msg_pd		987937	0					
ANR	993456	ExpressionStatement	pd_result = 0	5747:3:161612:161625	987937	68	True				
ANR	993457	AssignmentExpression	pd_result = 0		987937	0		=			
ANR	993458	Identifier	pd_result		987937	0					
ANR	993459	PrimaryExpression	0		987937	1					
ANR	993460	IfStatement	if ( ! processed_cmd )		987937	13					
ANR	993461	Condition	! processed_cmd	5749:6:161637:161650	987937	0	True				
ANR	993462	UnaryOperationExpression	! processed_cmd		987937	0					
ANR	993463	UnaryOperator	!		987937	0					
ANR	993464	Identifier	processed_cmd		987937	1					
ANR	993465	CompoundStatement		908:3:25673:25683	987937	1					
ANR	993466	IdentifierDeclStatement	ut64 addr = core -> offset ;	5750:3:161658:161682	987937	0	True				
ANR	993467	IdentifierDecl	addr = core -> offset		987937	0					
ANR	993468	IdentifierDeclType	ut64		987937	0					
ANR	993469	Identifier	addr		987937	1					
ANR	993470	AssignmentExpression	addr = core -> offset		987937	2		=			
ANR	993471	Identifier	addr		987937	0					
ANR	993472	PtrMemberAccess	core -> offset		987937	1					
ANR	993473	Identifier	core		987937	0					
ANR	993474	Identifier	offset		987937	1					
ANR	993475	IdentifierDeclStatement	ut8 * block1 = NULL ;	5751:3:161687:161705	987937	1	True				
ANR	993476	IdentifierDecl	* block1 = NULL		987937	0					
ANR	993477	IdentifierDeclType	ut8 *		987937	0					
ANR	993478	Identifier	block1		987937	1					
ANR	993479	AssignmentExpression	* block1 = NULL		987937	2		=			
ANR	993480	Identifier	NULL		987937	0					
ANR	993481	Identifier	NULL		987937	1					
ANR	993482	IdentifierDeclStatement	ut64 start ;	5752:3:161710:161720	987937	2	True				
ANR	993483	IdentifierDecl	start		987937	0					
ANR	993484	IdentifierDeclType	ut64		987937	0					
ANR	993485	Identifier	start		987937	1					
ANR	993486	IfStatement	if ( bw_disassemble )		987937	3					
ANR	993487	Condition	bw_disassemble	5754:7:161730:161743	987937	0	True				
ANR	993488	Identifier	bw_disassemble		987937	0					
ANR	993489	CompoundStatement		910:23:25709:25709	987937	1					
ANR	993490	ExpressionStatement	block1 = malloc ( core -> blocksize )	5755:4:161752:161785	987937	0	True				
ANR	993491	AssignmentExpression	block1 = malloc ( core -> blocksize )		987937	0		=			
ANR	993492	Identifier	block1		987937	0					
ANR	993493	CallExpression	malloc ( core -> blocksize )		987937	1					
ANR	993494	Callee	malloc		987937	0					
ANR	993495	Identifier	malloc		987937	0					
ANR	993496	ArgumentList	core -> blocksize		987937	1					
ANR	993497	Argument	core -> blocksize		987937	0					
ANR	993498	PtrMemberAccess	core -> blocksize		987937	0					
ANR	993499	Identifier	core		987937	0					
ANR	993500	Identifier	blocksize		987937	1					
ANR	993501	IfStatement	if ( l < 0 )		987937	1					
ANR	993502	Condition	l < 0	5756:8:161795:161799	987937	0	True				
ANR	993503	RelationalExpression	l < 0		987937	0		<			
ANR	993504	Identifier	l		987937	0					
ANR	993505	PrimaryExpression	0		987937	1					
ANR	993506	CompoundStatement		912:15:25765:25765	987937	1					
ANR	993507	ExpressionStatement	l = - l	5757:5:161809:161815	987937	0	True				
ANR	993508	AssignmentExpression	l = - l		987937	0		=			
ANR	993509	Identifier	l		987937	0					
ANR	993510	UnaryOperationExpression	- l		987937	1					
ANR	993511	UnaryOperator	-		987937	0					
ANR	993512	Identifier	l		987937	1					
ANR	993513	IfStatement	if ( block1 )		987937	2					
ANR	993514	Condition	block1	5759:8:161831:161836	987937	0	True				
ANR	993515	Identifier	block1		987937	0					
ANR	993516	CompoundStatement		915:16:25802:25802	987937	1					
ANR	993517	IfStatement	if ( * input == 'D' )		987937	0					
ANR	993518	Condition	* input == 'D'	5760:9:161850:161862	987937	0	True				
ANR	993519	EqualityExpression	* input == 'D'		987937	0		==			
ANR	993520	UnaryOperationExpression	* input		987937	0					
ANR	993521	UnaryOperator	*		987937	0					
ANR	993522	Identifier	input		987937	1					
ANR	993523	PrimaryExpression	'D'		987937	1					
ANR	993524	CompoundStatement		916:24:25828:25828	987937	1					
ANR	993525	ExpressionStatement	free ( block1 )	5761:6:161879:161892	987937	0	True				
ANR	993526	CallExpression	free ( block1 )		987937	0					
ANR	993527	Callee	free		987937	0					
ANR	993528	Identifier	free		987937	0					
ANR	993529	ArgumentList	block1		987937	1					
ANR	993530	Argument	block1		987937	0					
ANR	993531	Identifier	block1		987937	0					
ANR	993532	IfStatement	if ( ! ( block1 = malloc ( l ) ) )		987937	1					
ANR	993533	Condition	! ( block1 = malloc ( l ) )	5762:10:161904:161925	987937	0	True				
ANR	993534	UnaryOperationExpression	! ( block1 = malloc ( l ) )		987937	0					
ANR	993535	UnaryOperator	!		987937	0					
ANR	993536	AssignmentExpression	block1 = malloc ( l )		987937	1		=			
ANR	993537	Identifier	block1		987937	0					
ANR	993538	CallExpression	malloc ( l )		987937	1					
ANR	993539	Callee	malloc		987937	0					
ANR	993540	Identifier	malloc		987937	0					
ANR	993541	ArgumentList	l		987937	1					
ANR	993542	Argument	l		987937	0					
ANR	993543	Identifier	l		987937	0					
ANR	993544	CompoundStatement		918:34:25891:25891	987937	1					
ANR	993545	BreakStatement	break ;	5763:7:161937:161942	987937	0	True				
ANR	993546	ExpressionStatement	"r_io_read_at ( core -> io , addr - l , block1 , l )"	5765:6:161958:162002	987937	2	True				
ANR	993547	CallExpression	"r_io_read_at ( core -> io , addr - l , block1 , l )"		987937	0					
ANR	993548	Callee	r_io_read_at		987937	0					
ANR	993549	Identifier	r_io_read_at		987937	0					
ANR	993550	ArgumentList	core -> io		987937	1					
ANR	993551	Argument	core -> io		987937	0					
ANR	993552	PtrMemberAccess	core -> io		987937	0					
ANR	993553	Identifier	core		987937	0					
ANR	993554	Identifier	io		987937	1					
ANR	993555	Argument	addr - l		987937	1					
ANR	993556	AdditiveExpression	addr - l		987937	0		-			
ANR	993557	Identifier	addr		987937	0					
ANR	993558	Identifier	l		987937	1					
ANR	993559	Argument	block1		987937	2					
ANR	993560	Identifier	block1		987937	0					
ANR	993561	Argument	l		987937	3					
ANR	993562	Identifier	l		987937	0					
ANR	993563	ExpressionStatement	"core -> num -> value = r_core_print_disasm ( core -> print , core , addr - l , block1 , l , l , 0 , 1 , formatted_json , NULL , NULL )"	5766:6:162031:162147	987937	3	True				
ANR	993564	AssignmentExpression	"core -> num -> value = r_core_print_disasm ( core -> print , core , addr - l , block1 , l , l , 0 , 1 , formatted_json , NULL , NULL )"		987937	0		=			
ANR	993565	PtrMemberAccess	core -> num -> value		987937	0					
ANR	993566	PtrMemberAccess	core -> num		987937	0					
ANR	993567	Identifier	core		987937	0					
ANR	993568	Identifier	num		987937	1					
ANR	993569	Identifier	value		987937	1					
ANR	993570	CallExpression	"r_core_print_disasm ( core -> print , core , addr - l , block1 , l , l , 0 , 1 , formatted_json , NULL , NULL )"		987937	1					
ANR	993571	Callee	r_core_print_disasm		987937	0					
ANR	993572	Identifier	r_core_print_disasm		987937	0					
ANR	993573	ArgumentList	core -> print		987937	1					
ANR	993574	Argument	core -> print		987937	0					
ANR	993575	PtrMemberAccess	core -> print		987937	0					
ANR	993576	Identifier	core		987937	0					
ANR	993577	Identifier	print		987937	1					
ANR	993578	Argument	core		987937	1					
ANR	993579	Identifier	core		987937	0					
ANR	993580	Argument	addr - l		987937	2					
ANR	993581	AdditiveExpression	addr - l		987937	0		-			
ANR	993582	Identifier	addr		987937	0					
ANR	993583	Identifier	l		987937	1					
ANR	993584	Argument	block1		987937	3					
ANR	993585	Identifier	block1		987937	0					
ANR	993586	Argument	l		987937	4					
ANR	993587	Identifier	l		987937	0					
ANR	993588	Argument	l		987937	5					
ANR	993589	Identifier	l		987937	0					
ANR	993590	Argument	0		987937	6					
ANR	993591	PrimaryExpression	0		987937	0					
ANR	993592	Argument	1		987937	7					
ANR	993593	PrimaryExpression	1		987937	0					
ANR	993594	Argument	formatted_json		987937	8					
ANR	993595	Identifier	formatted_json		987937	0					
ANR	993596	Argument	NULL		987937	9					
ANR	993597	Identifier	NULL		987937	0					
ANR	993598	Argument	NULL		987937	10					
ANR	993599	Identifier	NULL		987937	0					
ANR	993600	ElseStatement	else		987937	0					
ANR	993601	CompoundStatement		931:6:26399:26452	987937	0					
ANR	993602	IdentifierDeclStatement	int instr_len ;	5768:6:162175:162188	987937	0	True				
ANR	993603	IdentifierDecl	instr_len		987937	0					
ANR	993604	IdentifierDeclType	int		987937	0					
ANR	993605	Identifier	instr_len		987937	1					
ANR	993606	IfStatement	"if ( ! r_core_prevop_addr ( core , core -> offset , l , & start ) )"		987937	1					
ANR	993607	Condition	"! r_core_prevop_addr ( core , core -> offset , l , & start )"	5769:10:162200:162250	987937	0	True				
ANR	993608	UnaryOperationExpression	"! r_core_prevop_addr ( core , core -> offset , l , & start )"		987937	0					
ANR	993609	UnaryOperator	!		987937	0					
ANR	993610	CallExpression	"r_core_prevop_addr ( core , core -> offset , l , & start )"		987937	1					
ANR	993611	Callee	r_core_prevop_addr		987937	0					
ANR	993612	Identifier	r_core_prevop_addr		987937	0					
ANR	993613	ArgumentList	core		987937	1					
ANR	993614	Argument	core		987937	0					
ANR	993615	Identifier	core		987937	0					
ANR	993616	Argument	core -> offset		987937	1					
ANR	993617	PtrMemberAccess	core -> offset		987937	0					
ANR	993618	Identifier	core		987937	0					
ANR	993619	Identifier	offset		987937	1					
ANR	993620	Argument	l		987937	2					
ANR	993621	Identifier	l		987937	0					
ANR	993622	Argument	& start		987937	3					
ANR	993623	UnaryOperationExpression	& start		987937	0					
ANR	993624	UnaryOperator	&		987937	0					
ANR	993625	Identifier	start		987937	1					
ANR	993626	CompoundStatement		925:63:26216:26216	987937	1					
ANR	993627	ExpressionStatement	"start = r_core_prevop_addr_force ( core , core -> offset , l )"	5771:7:162288:162344	987937	0	True				
ANR	993628	AssignmentExpression	"start = r_core_prevop_addr_force ( core , core -> offset , l )"		987937	0		=			
ANR	993629	Identifier	start		987937	0					
ANR	993630	CallExpression	"r_core_prevop_addr_force ( core , core -> offset , l )"		987937	1					
ANR	993631	Callee	r_core_prevop_addr_force		987937	0					
ANR	993632	Identifier	r_core_prevop_addr_force		987937	0					
ANR	993633	ArgumentList	core		987937	1					
ANR	993634	Argument	core		987937	0					
ANR	993635	Identifier	core		987937	0					
ANR	993636	Argument	core -> offset		987937	1					
ANR	993637	PtrMemberAccess	core -> offset		987937	0					
ANR	993638	Identifier	core		987937	0					
ANR	993639	Identifier	offset		987937	1					
ANR	993640	Argument	l		987937	2					
ANR	993641	Identifier	l		987937	0					
ANR	993642	ExpressionStatement	instr_len = core -> offset - start	5773:6:162360:162392	987937	2	True				
ANR	993643	AssignmentExpression	instr_len = core -> offset - start		987937	0		=			
ANR	993644	Identifier	instr_len		987937	0					
ANR	993645	AdditiveExpression	core -> offset - start		987937	1		-			
ANR	993646	PtrMemberAccess	core -> offset		987937	0					
ANR	993647	Identifier	core		987937	0					
ANR	993648	Identifier	offset		987937	1					
ANR	993649	Identifier	start		987937	1					
ANR	993650	IdentifierDeclStatement	ut64 prevaddr = core -> offset ;	5774:6:162400:162428	987937	3	True				
ANR	993651	IdentifierDecl	prevaddr = core -> offset		987937	0					
ANR	993652	IdentifierDeclType	ut64		987937	0					
ANR	993653	Identifier	prevaddr		987937	1					
ANR	993654	AssignmentExpression	prevaddr = core -> offset		987937	2		=			
ANR	993655	Identifier	prevaddr		987937	0					
ANR	993656	PtrMemberAccess	core -> offset		987937	1					
ANR	993657	Identifier	core		987937	0					
ANR	993658	Identifier	offset		987937	1					
ANR	993659	IdentifierDeclStatement	"int bs = core -> blocksize , bs1 = addrbytes * instr_len ;"	5775:6:162436:162489	987937	4	True				
ANR	993660	IdentifierDecl	bs = core -> blocksize		987937	0					
ANR	993661	IdentifierDeclType	int		987937	0					
ANR	993662	Identifier	bs		987937	1					
ANR	993663	AssignmentExpression	bs = core -> blocksize		987937	2		=			
ANR	993664	Identifier	bs		987937	0					
ANR	993665	PtrMemberAccess	core -> blocksize		987937	1					
ANR	993666	Identifier	core		987937	0					
ANR	993667	Identifier	blocksize		987937	1					
ANR	993668	IdentifierDecl	bs1 = addrbytes * instr_len		987937	1					
ANR	993669	IdentifierDeclType	int		987937	0					
ANR	993670	Identifier	bs1		987937	1					
ANR	993671	AssignmentExpression	bs1 = addrbytes * instr_len		987937	2		=			
ANR	993672	Identifier	bs1		987937	0					
ANR	993673	MultiplicativeExpression	addrbytes * instr_len		987937	1		*			
ANR	993674	Identifier	addrbytes		987937	0					
ANR	993675	Identifier	instr_len		987937	1					
ANR	993676	IfStatement	if ( bs1 > bs )		987937	5					
ANR	993677	Condition	bs1 > bs	5776:10:162501:162508	987937	0	True				
ANR	993678	RelationalExpression	bs1 > bs		987937	0		>			
ANR	993679	Identifier	bs1		987937	0					
ANR	993680	Identifier	bs		987937	1					
ANR	993681	CompoundStatement		933:7:26483:26520	987937	1					
ANR	993682	IdentifierDeclStatement	"ut8 * tmpblock = realloc ( block1 , bs1 ) ;"	5777:7:162520:162557	987937	0	True				
ANR	993683	IdentifierDecl	"* tmpblock = realloc ( block1 , bs1 )"		987937	0					
ANR	993684	IdentifierDeclType	ut8 *		987937	0					
ANR	993685	Identifier	tmpblock		987937	1					
ANR	993686	AssignmentExpression	"* tmpblock = realloc ( block1 , bs1 )"		987937	2		=			
ANR	993687	Identifier	tmpblock		987937	0					
ANR	993688	CallExpression	"realloc ( block1 , bs1 )"		987937	1					
ANR	993689	Callee	realloc		987937	0					
ANR	993690	Identifier	realloc		987937	0					
ANR	993691	ArgumentList	block1		987937	1					
ANR	993692	Argument	block1		987937	0					
ANR	993693	Identifier	block1		987937	0					
ANR	993694	Argument	bs1		987937	1					
ANR	993695	Identifier	bs1		987937	0					
ANR	993696	IfStatement	if ( ! tmpblock )		987937	1					
ANR	993697	Condition	! tmpblock	5778:11:162570:162578	987937	0	True				
ANR	993698	UnaryOperationExpression	! tmpblock		987937	0					
ANR	993699	UnaryOperator	!		987937	0					
ANR	993700	Identifier	tmpblock		987937	1					
ANR	993701	CompoundStatement		934:22:26544:26544	987937	1					
ANR	993702	ExpressionStatement	"eprintf ( ""Memory reallocation failed.\\n"" )"	5779:8:162591:162632	987937	0	True				
ANR	993703	CallExpression	"eprintf ( ""Memory reallocation failed.\\n"" )"		987937	0					
ANR	993704	Callee	eprintf		987937	0					
ANR	993705	Identifier	eprintf		987937	0					
ANR	993706	ArgumentList	"""Memory reallocation failed.\\n"""		987937	1					
ANR	993707	Argument	"""Memory reallocation failed.\\n"""		987937	0					
ANR	993708	PrimaryExpression	"""Memory reallocation failed.\\n"""		987937	0					
ANR	993709	ExpressionStatement	free ( block1 )	5780:8:162642:162655	987937	1	True				
ANR	993710	CallExpression	free ( block1 )		987937	0					
ANR	993711	Callee	free		987937	0					
ANR	993712	Identifier	free		987937	0					
ANR	993713	ArgumentList	block1		987937	1					
ANR	993714	Argument	block1		987937	0					
ANR	993715	Identifier	block1		987937	0					
ANR	993716	BreakStatement	break ;	5781:8:162665:162670	987937	2	True				
ANR	993717	ExpressionStatement	block1 = tmpblock	5783:7:162688:162705	987937	2	True				
ANR	993718	AssignmentExpression	block1 = tmpblock		987937	0		=			
ANR	993719	Identifier	block1		987937	0					
ANR	993720	Identifier	tmpblock		987937	1					
ANR	993721	ExpressionStatement	"r_core_seek ( core , prevaddr - instr_len , true )"	5785:6:162721:162767	987937	6	True				
ANR	993722	CallExpression	"r_core_seek ( core , prevaddr - instr_len , true )"		987937	0					
ANR	993723	Callee	r_core_seek		987937	0					
ANR	993724	Identifier	r_core_seek		987937	0					
ANR	993725	ArgumentList	core		987937	1					
ANR	993726	Argument	core		987937	0					
ANR	993727	Identifier	core		987937	0					
ANR	993728	Argument	prevaddr - instr_len		987937	1					
ANR	993729	AdditiveExpression	prevaddr - instr_len		987937	0		-			
ANR	993730	Identifier	prevaddr		987937	0					
ANR	993731	Identifier	instr_len		987937	1					
ANR	993732	Argument	true		987937	2					
ANR	993733	Identifier	true		987937	0					
ANR	993734	ExpressionStatement	"memcpy ( block1 , block , bs )"	5786:6:162775:162801	987937	7	True				
ANR	993735	CallExpression	"memcpy ( block1 , block , bs )"		987937	0					
ANR	993736	Callee	memcpy		987937	0					
ANR	993737	Identifier	memcpy		987937	0					
ANR	993738	ArgumentList	block1		987937	1					
ANR	993739	Argument	block1		987937	0					
ANR	993740	Identifier	block1		987937	0					
ANR	993741	Argument	block		987937	1					
ANR	993742	Identifier	block		987937	0					
ANR	993743	Argument	bs		987937	2					
ANR	993744	Identifier	bs		987937	0					
ANR	993745	IfStatement	if ( bs1 > bs )		987937	8					
ANR	993746	Condition	bs1 > bs	5787:10:162813:162820	987937	0	True				
ANR	993747	RelationalExpression	bs1 > bs		987937	0		>			
ANR	993748	Identifier	bs1		987937	0					
ANR	993749	Identifier	bs		987937	1					
ANR	993750	CompoundStatement		943:20:26786:26786	987937	1					
ANR	993751	ExpressionStatement	"r_io_read_at ( core -> io , addr + bs / addrbytes , block1 + ( bs - bs % addrbytes ) , bs1 - ( bs - bs % addrbytes ) )"	5788:7:162832:162955	987937	0	True				
ANR	993752	CallExpression	"r_io_read_at ( core -> io , addr + bs / addrbytes , block1 + ( bs - bs % addrbytes ) , bs1 - ( bs - bs % addrbytes ) )"		987937	0					
ANR	993753	Callee	r_io_read_at		987937	0					
ANR	993754	Identifier	r_io_read_at		987937	0					
ANR	993755	ArgumentList	core -> io		987937	1					
ANR	993756	Argument	core -> io		987937	0					
ANR	993757	PtrMemberAccess	core -> io		987937	0					
ANR	993758	Identifier	core		987937	0					
ANR	993759	Identifier	io		987937	1					
ANR	993760	Argument	addr + bs / addrbytes		987937	1					
ANR	993761	AdditiveExpression	addr + bs / addrbytes		987937	0		+			
ANR	993762	Identifier	addr		987937	0					
ANR	993763	MultiplicativeExpression	bs / addrbytes		987937	1		/			
ANR	993764	Identifier	bs		987937	0					
ANR	993765	Identifier	addrbytes		987937	1					
ANR	993766	Argument	block1 + ( bs - bs % addrbytes )		987937	2					
ANR	993767	AdditiveExpression	block1 + ( bs - bs % addrbytes )		987937	0		+			
ANR	993768	Identifier	block1		987937	0					
ANR	993769	AdditiveExpression	bs - bs % addrbytes		987937	1		-			
ANR	993770	Identifier	bs		987937	0					
ANR	993771	MultiplicativeExpression	bs % addrbytes		987937	1		%			
ANR	993772	Identifier	bs		987937	0					
ANR	993773	Identifier	addrbytes		987937	1					
ANR	993774	Argument	bs1 - ( bs - bs % addrbytes )		987937	3					
ANR	993775	AdditiveExpression	bs1 - ( bs - bs % addrbytes )		987937	0		-			
ANR	993776	Identifier	bs1		987937	0					
ANR	993777	AdditiveExpression	bs - bs % addrbytes		987937	1		-			
ANR	993778	Identifier	bs		987937	0					
ANR	993779	MultiplicativeExpression	bs % addrbytes		987937	1		%			
ANR	993780	Identifier	bs		987937	0					
ANR	993781	Identifier	addrbytes		987937	1					
ANR	993782	ExpressionStatement	"core -> num -> value = r_core_print_disasm ( core -> print , core , core -> offset , block1 , R_MAX ( bs , bs1 ) , l , 0 , 1 , formatted_json , NULL , NULL )"	5792:6:162971:163112	987937	9	True				
ANR	993783	AssignmentExpression	"core -> num -> value = r_core_print_disasm ( core -> print , core , core -> offset , block1 , R_MAX ( bs , bs1 ) , l , 0 , 1 , formatted_json , NULL , NULL )"		987937	0		=			
ANR	993784	PtrMemberAccess	core -> num -> value		987937	0					
ANR	993785	PtrMemberAccess	core -> num		987937	0					
ANR	993786	Identifier	core		987937	0					
ANR	993787	Identifier	num		987937	1					
ANR	993788	Identifier	value		987937	1					
ANR	993789	CallExpression	"r_core_print_disasm ( core -> print , core , core -> offset , block1 , R_MAX ( bs , bs1 ) , l , 0 , 1 , formatted_json , NULL , NULL )"		987937	1					
ANR	993790	Callee	r_core_print_disasm		987937	0					
ANR	993791	Identifier	r_core_print_disasm		987937	0					
ANR	993792	ArgumentList	core -> print		987937	1					
ANR	993793	Argument	core -> print		987937	0					
ANR	993794	PtrMemberAccess	core -> print		987937	0					
ANR	993795	Identifier	core		987937	0					
ANR	993796	Identifier	print		987937	1					
ANR	993797	Argument	core		987937	1					
ANR	993798	Identifier	core		987937	0					
ANR	993799	Argument	core -> offset		987937	2					
ANR	993800	PtrMemberAccess	core -> offset		987937	0					
ANR	993801	Identifier	core		987937	0					
ANR	993802	Identifier	offset		987937	1					
ANR	993803	Argument	block1		987937	3					
ANR	993804	Identifier	block1		987937	0					
ANR	993805	Argument	"R_MAX ( bs , bs1 )"		987937	4					
ANR	993806	CallExpression	"R_MAX ( bs , bs1 )"		987937	0					
ANR	993807	Callee	R_MAX		987937	0					
ANR	993808	Identifier	R_MAX		987937	0					
ANR	993809	ArgumentList	bs		987937	1					
ANR	993810	Argument	bs		987937	0					
ANR	993811	Identifier	bs		987937	0					
ANR	993812	Argument	bs1		987937	1					
ANR	993813	Identifier	bs1		987937	0					
ANR	993814	Argument	l		987937	5					
ANR	993815	Identifier	l		987937	0					
ANR	993816	Argument	0		987937	6					
ANR	993817	PrimaryExpression	0		987937	0					
ANR	993818	Argument	1		987937	7					
ANR	993819	PrimaryExpression	1		987937	0					
ANR	993820	Argument	formatted_json		987937	8					
ANR	993821	Identifier	formatted_json		987937	0					
ANR	993822	Argument	NULL		987937	9					
ANR	993823	Identifier	NULL		987937	0					
ANR	993824	Argument	NULL		987937	10					
ANR	993825	Identifier	NULL		987937	0					
ANR	993826	ExpressionStatement	"r_core_seek ( core , prevaddr , true )"	5794:6:163120:163154	987937	10	True				
ANR	993827	CallExpression	"r_core_seek ( core , prevaddr , true )"		987937	0					
ANR	993828	Callee	r_core_seek		987937	0					
ANR	993829	Identifier	r_core_seek		987937	0					
ANR	993830	ArgumentList	core		987937	1					
ANR	993831	Argument	core		987937	0					
ANR	993832	Identifier	core		987937	0					
ANR	993833	Argument	prevaddr		987937	1					
ANR	993834	Identifier	prevaddr		987937	0					
ANR	993835	Argument	true		987937	2					
ANR	993836	Identifier	true		987937	0					
ANR	993837	ElseStatement	else		987937	0					
ANR	993838	CompoundStatement		953:10:27142:27142	987937	0					
ANR	993839	IfStatement	if ( * input == 'D' && use_blocksize > 0 )		987937	0					
ANR	993840	Condition	* input == 'D' && use_blocksize > 0	5799:8:163225:163258	987937	0	True				
ANR	993841	AndExpression	* input == 'D' && use_blocksize > 0		987937	0		&&			
ANR	993842	EqualityExpression	* input == 'D'		987937	0		==			
ANR	993843	UnaryOperationExpression	* input		987937	0					
ANR	993844	UnaryOperator	*		987937	0					
ANR	993845	Identifier	input		987937	1					
ANR	993846	PrimaryExpression	'D'		987937	1					
ANR	993847	RelationalExpression	use_blocksize > 0		987937	1		>			
ANR	993848	Identifier	use_blocksize		987937	0					
ANR	993849	PrimaryExpression	0		987937	1					
ANR	993850	CompoundStatement		955:44:27224:27224	987937	1					
ANR	993851	ExpressionStatement	l = use_blocksize	5800:0:163263:163280	987937	0	True				
ANR	993852	AssignmentExpression	l = use_blocksize		987937	0		=			
ANR	993853	Identifier	l		987937	0					
ANR	993854	Identifier	use_blocksize		987937	1					
ANR	993855	IfStatement	if ( l > R_CORE_MAX_DISASM )		987937	1					
ANR	993856	Condition	l > R_CORE_MAX_DISASM	5801:9:163291:163311	987937	0	True				
ANR	993857	RelationalExpression	l > R_CORE_MAX_DISASM		987937	0		>			
ANR	993858	Identifier	l		987937	0					
ANR	993859	Identifier	R_CORE_MAX_DISASM		987937	1					
ANR	993860	CompoundStatement		957:32:27277:27277	987937	1					
ANR	993861	ExpressionStatement	"eprintf ( ""Block size too big\\n"" )"	5802:6:163328:163360	987937	0	True				
ANR	993862	CallExpression	"eprintf ( ""Block size too big\\n"" )"		987937	0					
ANR	993863	Callee	eprintf		987937	0					
ANR	993864	Identifier	eprintf		987937	0					
ANR	993865	ArgumentList	"""Block size too big\\n"""		987937	1					
ANR	993866	Argument	"""Block size too big\\n"""		987937	0					
ANR	993867	PrimaryExpression	"""Block size too big\\n"""		987937	0					
ANR	993868	ReturnStatement	return 1 ;	5803:6:163368:163376	987937	1	True				
ANR	993869	PrimaryExpression	1		987937	0					
ANR	993870	ExpressionStatement	block1 = malloc ( addrbytes * l )	5805:5:163390:163421	987937	2	True				
ANR	993871	AssignmentExpression	block1 = malloc ( addrbytes * l )		987937	0		=			
ANR	993872	Identifier	block1		987937	0					
ANR	993873	CallExpression	malloc ( addrbytes * l )		987937	1					
ANR	993874	Callee	malloc		987937	0					
ANR	993875	Identifier	malloc		987937	0					
ANR	993876	ArgumentList	addrbytes * l		987937	1					
ANR	993877	Argument	addrbytes * l		987937	0					
ANR	993878	MultiplicativeExpression	addrbytes * l		987937	0		*			
ANR	993879	Identifier	addrbytes		987937	0					
ANR	993880	Identifier	l		987937	1					
ANR	993881	IfStatement	if ( block1 )		987937	3					
ANR	993882	Condition	block1	5806:9:163432:163437	987937	0	True				
ANR	993883	Identifier	block1		987937	0					
ANR	993884	CompoundStatement		962:17:27403:27403	987937	1					
ANR	993885	ExpressionStatement	"r_io_read_at ( core -> io , addr , block1 , addrbytes * l )"	5807:6:163448:163500	987937	0	True				
ANR	993886	CallExpression	"r_io_read_at ( core -> io , addr , block1 , addrbytes * l )"		987937	0					
ANR	993887	Callee	r_io_read_at		987937	0					
ANR	993888	Identifier	r_io_read_at		987937	0					
ANR	993889	ArgumentList	core -> io		987937	1					
ANR	993890	Argument	core -> io		987937	0					
ANR	993891	PtrMemberAccess	core -> io		987937	0					
ANR	993892	Identifier	core		987937	0					
ANR	993893	Identifier	io		987937	1					
ANR	993894	Argument	addr		987937	1					
ANR	993895	Identifier	addr		987937	0					
ANR	993896	Argument	block1		987937	2					
ANR	993897	Identifier	block1		987937	0					
ANR	993898	Argument	addrbytes * l		987937	3					
ANR	993899	MultiplicativeExpression	addrbytes * l		987937	0		*			
ANR	993900	Identifier	addrbytes		987937	0					
ANR	993901	Identifier	l		987937	1					
ANR	993902	ExpressionStatement	"core -> num -> value = r_core_print_disasm ( core -> print , core , addr , block1 , addrbytes * l , l , 0 , 1 , formatted_json , NULL , NULL )"	5808:6:163508:163639	987937	1	True				
ANR	993903	AssignmentExpression	"core -> num -> value = r_core_print_disasm ( core -> print , core , addr , block1 , addrbytes * l , l , 0 , 1 , formatted_json , NULL , NULL )"		987937	0		=			
ANR	993904	PtrMemberAccess	core -> num -> value		987937	0					
ANR	993905	PtrMemberAccess	core -> num		987937	0					
ANR	993906	Identifier	core		987937	0					
ANR	993907	Identifier	num		987937	1					
ANR	993908	Identifier	value		987937	1					
ANR	993909	CallExpression	"r_core_print_disasm ( core -> print , core , addr , block1 , addrbytes * l , l , 0 , 1 , formatted_json , NULL , NULL )"		987937	1					
ANR	993910	Callee	r_core_print_disasm		987937	0					
ANR	993911	Identifier	r_core_print_disasm		987937	0					
ANR	993912	ArgumentList	core -> print		987937	1					
ANR	993913	Argument	core -> print		987937	0					
ANR	993914	PtrMemberAccess	core -> print		987937	0					
ANR	993915	Identifier	core		987937	0					
ANR	993916	Identifier	print		987937	1					
ANR	993917	Argument	core		987937	1					
ANR	993918	Identifier	core		987937	0					
ANR	993919	Argument	addr		987937	2					
ANR	993920	Identifier	addr		987937	0					
ANR	993921	Argument	block1		987937	3					
ANR	993922	Identifier	block1		987937	0					
ANR	993923	Argument	addrbytes * l		987937	4					
ANR	993924	MultiplicativeExpression	addrbytes * l		987937	0		*			
ANR	993925	Identifier	addrbytes		987937	0					
ANR	993926	Identifier	l		987937	1					
ANR	993927	Argument	l		987937	5					
ANR	993928	Identifier	l		987937	0					
ANR	993929	Argument	0		987937	6					
ANR	993930	PrimaryExpression	0		987937	0					
ANR	993931	Argument	1		987937	7					
ANR	993932	PrimaryExpression	1		987937	0					
ANR	993933	Argument	formatted_json		987937	8					
ANR	993934	Identifier	formatted_json		987937	0					
ANR	993935	Argument	NULL		987937	9					
ANR	993936	Identifier	NULL		987937	0					
ANR	993937	Argument	NULL		987937	10					
ANR	993938	Identifier	NULL		987937	0					
ANR	993939	ElseStatement	else		987937	0					
ANR	993940	CompoundStatement		966:12:27616:27616	987937	0					
ANR	993941	ExpressionStatement	"eprintf ( ""Cannot allocate %d byte(s)\\n"" , addrbytes * l )"	5811:6:163661:163716	987937	0	True				
ANR	993942	CallExpression	"eprintf ( ""Cannot allocate %d byte(s)\\n"" , addrbytes * l )"		987937	0					
ANR	993943	Callee	eprintf		987937	0					
ANR	993944	Identifier	eprintf		987937	0					
ANR	993945	ArgumentList	"""Cannot allocate %d byte(s)\\n"""		987937	1					
ANR	993946	Argument	"""Cannot allocate %d byte(s)\\n"""		987937	0					
ANR	993947	PrimaryExpression	"""Cannot allocate %d byte(s)\\n"""		987937	0					
ANR	993948	Argument	addrbytes * l		987937	1					
ANR	993949	MultiplicativeExpression	addrbytes * l		987937	0		*			
ANR	993950	Identifier	addrbytes		987937	0					
ANR	993951	Identifier	l		987937	1					
ANR	993952	ElseStatement	else		987937	0					
ANR	993953	CompoundStatement		971:5:27735:27771	987937	0					
ANR	993954	IdentifierDeclStatement	ut8 * buf = core -> block ;	5814:5:163743:163765	987937	0	True				
ANR	993955	IdentifierDecl	* buf = core -> block		987937	0					
ANR	993956	IdentifierDeclType	ut8 *		987937	0					
ANR	993957	Identifier	buf		987937	1					
ANR	993958	AssignmentExpression	* buf = core -> block		987937	2		=			
ANR	993959	Identifier	buf		987937	0					
ANR	993960	PtrMemberAccess	core -> block		987937	1					
ANR	993961	Identifier	core		987937	0					
ANR	993962	Identifier	block		987937	1					
ANR	993963	IdentifierDeclStatement	const int buf_size = core -> blocksize ;	5815:5:163772:163808	987937	1	True				
ANR	993964	IdentifierDecl	buf_size = core -> blocksize		987937	0					
ANR	993965	IdentifierDeclType	const int		987937	0					
ANR	993966	Identifier	buf_size		987937	1					
ANR	993967	AssignmentExpression	buf_size = core -> blocksize		987937	2		=			
ANR	993968	Identifier	buf_size		987937	0					
ANR	993969	PtrMemberAccess	core -> blocksize		987937	1					
ANR	993970	Identifier	core		987937	0					
ANR	993971	Identifier	blocksize		987937	1					
ANR	993972	IfStatement	if ( buf )		987937	2					
ANR	993973	Condition	buf	5816:9:163819:163821	987937	0	True				
ANR	993974	Identifier	buf		987937	0					
ANR	993975	CompoundStatement		972:14:27787:27787	987937	1					
ANR	993976	IfStatement	if ( ! l )		987937	0					
ANR	993977	Condition	! l	5817:10:163836:163837	987937	0	True				
ANR	993978	UnaryOperationExpression	! l		987937	0					
ANR	993979	UnaryOperator	!		987937	0					
ANR	993980	Identifier	l		987937	1					
ANR	993981	CompoundStatement		973:14:27803:27803	987937	1					
ANR	993982	ExpressionStatement	l = use_blocksize	5818:7:163849:163866	987937	0	True				
ANR	993983	AssignmentExpression	l = use_blocksize		987937	0		=			
ANR	993984	Identifier	l		987937	0					
ANR	993985	Identifier	use_blocksize		987937	1					
ANR	993986	IfStatement	if ( ! core -> fixedblock )		987937	1					
ANR	993987	Condition	! core -> fixedblock	5819:11:163879:163895	987937	0	True				
ANR	993988	UnaryOperationExpression	! core -> fixedblock		987937	0					
ANR	993989	UnaryOperator	!		987937	0					
ANR	993990	PtrMemberAccess	core -> fixedblock		987937	1					
ANR	993991	Identifier	core		987937	0					
ANR	993992	Identifier	fixedblock		987937	1					
ANR	993993	CompoundStatement		975:30:27861:27861	987937	1					
ANR	993994	ExpressionStatement	l /= 4	5820:8:163908:163914	987937	0	True				
ANR	993995	AssignmentExpression	l /= 4		987937	0		/=			
ANR	993996	Identifier	l		987937	0					
ANR	993997	PrimaryExpression	4		987937	1					
ANR	993998	ExpressionStatement	"core -> num -> value = r_core_print_disasm ( core -> print , core , addr , buf , buf_size , l , 0 , 0 , formatted_json , NULL , NULL )"	5823:6:163939:164071	987937	1	True				
ANR	993999	AssignmentExpression	"core -> num -> value = r_core_print_disasm ( core -> print , core , addr , buf , buf_size , l , 0 , 0 , formatted_json , NULL , NULL )"		987937	0		=			
ANR	994000	PtrMemberAccess	core -> num -> value		987937	0					
ANR	994001	PtrMemberAccess	core -> num		987937	0					
ANR	994002	Identifier	core		987937	0					
ANR	994003	Identifier	num		987937	1					
ANR	994004	Identifier	value		987937	1					
ANR	994005	CallExpression	"r_core_print_disasm ( core -> print , core , addr , buf , buf_size , l , 0 , 0 , formatted_json , NULL , NULL )"		987937	1					
ANR	994006	Callee	r_core_print_disasm		987937	0					
ANR	994007	Identifier	r_core_print_disasm		987937	0					
ANR	994008	ArgumentList	core -> print		987937	1					
ANR	994009	Argument	core -> print		987937	0					
ANR	994010	PtrMemberAccess	core -> print		987937	0					
ANR	994011	Identifier	core		987937	0					
ANR	994012	Identifier	print		987937	1					
ANR	994013	Argument	core		987937	1					
ANR	994014	Identifier	core		987937	0					
ANR	994015	Argument	addr		987937	2					
ANR	994016	Identifier	addr		987937	0					
ANR	994017	Argument	buf		987937	3					
ANR	994018	Identifier	buf		987937	0					
ANR	994019	Argument	buf_size		987937	4					
ANR	994020	Identifier	buf_size		987937	0					
ANR	994021	Argument	l		987937	5					
ANR	994022	Identifier	l		987937	0					
ANR	994023	Argument	0		987937	6					
ANR	994024	PrimaryExpression	0		987937	0					
ANR	994025	Argument	0		987937	7					
ANR	994026	PrimaryExpression	0		987937	0					
ANR	994027	Argument	formatted_json		987937	8					
ANR	994028	Identifier	formatted_json		987937	0					
ANR	994029	Argument	NULL		987937	9					
ANR	994030	Identifier	NULL		987937	0					
ANR	994031	Argument	NULL		987937	10					
ANR	994032	Identifier	NULL		987937	0					
ANR	994033	ExpressionStatement	free ( block1 )	5829:3:164094:164107	987937	4	True				
ANR	994034	CallExpression	free ( block1 )		987937	0					
ANR	994035	Callee	free		987937	0					
ANR	994036	Identifier	free		987937	0					
ANR	994037	ArgumentList	block1		987937	1					
ANR	994038	Argument	block1		987937	0					
ANR	994039	Identifier	block1		987937	0					
ANR	994040	IfStatement	if ( formatted_json )		987937	5					
ANR	994041	Condition	formatted_json	5830:7:164116:164129	987937	0	True				
ANR	994042	Identifier	formatted_json		987937	0					
ANR	994043	CompoundStatement		986:23:28095:28095	987937	1					
ANR	994044	ExpressionStatement	"r_cons_print ( ""\\n"" )"	5831:4:164138:164157	987937	0	True				
ANR	994045	CallExpression	"r_cons_print ( ""\\n"" )"		987937	0					
ANR	994046	Callee	r_cons_print		987937	0					
ANR	994047	Identifier	r_cons_print		987937	0					
ANR	994048	ArgumentList	"""\\n"""		987937	1					
ANR	994049	Argument	"""\\n"""		987937	0					
ANR	994050	PrimaryExpression	"""\\n"""		987937	0					
ANR	994051	IfStatement	if ( processed_cmd )		987937	14					
ANR	994052	Condition	processed_cmd	5834:6:164174:164186	987937	0	True				
ANR	994053	Identifier	processed_cmd		987937	0					
ANR	994054	CompoundStatement		990:21:28152:28152	987937	1					
ANR	994055	ExpressionStatement	ret = pd_result	5835:3:164194:164209	987937	0	True				
ANR	994056	AssignmentExpression	ret = pd_result		987937	0		=			
ANR	994057	Identifier	ret		987937	0					
ANR	994058	Identifier	pd_result		987937	1					
ANR	994059	GotoStatement	goto beach ;	5836:3:164214:164224	987937	1	True				
ANR	994060	Identifier	beach		987937	0					
ANR	994061	BreakStatement	break ;	5839:1:164234:164239	987937	41	True				
ANR	994062	Label	case 'p' :	5840:1:164242:164250	987937	42	True				
ANR	994063	ExpressionStatement	"__printPattern ( core , input + 1 )"	5841:2:164262:164294	987937	43	True				
ANR	994064	CallExpression	"__printPattern ( core , input + 1 )"		987937	0					
ANR	994065	Callee	__printPattern		987937	0					
ANR	994066	Identifier	__printPattern		987937	0					
ANR	994067	ArgumentList	core		987937	1					
ANR	994068	Argument	core		987937	0					
ANR	994069	Identifier	core		987937	0					
ANR	994070	Argument	input + 1		987937	1					
ANR	994071	AdditiveExpression	input + 1		987937	0		+			
ANR	994072	Identifier	input		987937	0					
ANR	994073	PrimaryExpression	1		987937	1					
ANR	994074	BreakStatement	break ;	5842:2:164298:164303	987937	44	True				
ANR	994075	Label	case 's' :	5843:1:164306:164314	987937	45	True				
ANR	994076	SwitchStatement	switch ( input [ 1 ] )		987937	46					
ANR	994077	Condition	input [ 1 ]	5844:10:164334:164341	987937	0	True				
ANR	994078	ArrayIndexing	input [ 1 ]		987937	0					
ANR	994079	Identifier	input		987937	0					
ANR	994080	PrimaryExpression	1		987937	1					
ANR	994081	CompoundStatement		1000:20:28307:28307	987937	1					
ANR	994082	Label	case '?' :	5845:2:164348:164356	987937	0	True				
ANR	994083	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ps )"	5846:3:164370:164405	987937	1	True				
ANR	994084	CallExpression	"r_core_cmd_help ( core , help_msg_ps )"		987937	0					
ANR	994085	Callee	r_core_cmd_help		987937	0					
ANR	994086	Identifier	r_core_cmd_help		987937	0					
ANR	994087	ArgumentList	core		987937	1					
ANR	994088	Argument	core		987937	0					
ANR	994089	Identifier	core		987937	0					
ANR	994090	Argument	help_msg_ps		987937	1					
ANR	994091	Identifier	help_msg_ps		987937	0					
ANR	994092	BreakStatement	break ;	5847:3:164410:164415	987937	2	True				
ANR	994093	Label	case 'j' :	5848:2:164419:164427	987937	3	True				
ANR	994094	IfStatement	if ( l > 0 )		987937	4					
ANR	994095	Condition	l > 0	5849:7:164445:164449	987937	0	True				
ANR	994096	RelationalExpression	l > 0		987937	0		>			
ANR	994097	Identifier	l		987937	0					
ANR	994098	PrimaryExpression	0		987937	1					
ANR	994099	CompoundStatement		1005:14:28415:28415	987937	1					
ANR	994100	IfStatement	if ( input [ 2 ] == ' ' && input [ 3 ] )		987937	0					
ANR	994101	Condition	input [ 2 ] == ' ' && input [ 3 ]	5850:8:164462:164488	987937	0	True				
ANR	994102	AndExpression	input [ 2 ] == ' ' && input [ 3 ]		987937	0		&&			
ANR	994103	EqualityExpression	input [ 2 ] == ' '		987937	0		==			
ANR	994104	ArrayIndexing	input [ 2 ]		987937	0					
ANR	994105	Identifier	input		987937	0					
ANR	994106	PrimaryExpression	2		987937	1					
ANR	994107	PrimaryExpression	' '		987937	1					
ANR	994108	ArrayIndexing	input [ 3 ]		987937	1					
ANR	994109	Identifier	input		987937	0					
ANR	994110	PrimaryExpression	3		987937	1					
ANR	994111	CompoundStatement		1006:37:28454:28454	987937	1					
ANR	994112	ExpressionStatement	"len = r_num_math ( core -> num , input + 3 )"	5851:5:164498:164537	987937	0	True				
ANR	994113	AssignmentExpression	"len = r_num_math ( core -> num , input + 3 )"		987937	0		=			
ANR	994114	Identifier	len		987937	0					
ANR	994115	CallExpression	"r_num_math ( core -> num , input + 3 )"		987937	1					
ANR	994116	Callee	r_num_math		987937	0					
ANR	994117	Identifier	r_num_math		987937	0					
ANR	994118	ArgumentList	core -> num		987937	1					
ANR	994119	Argument	core -> num		987937	0					
ANR	994120	PtrMemberAccess	core -> num		987937	0					
ANR	994121	Identifier	core		987937	0					
ANR	994122	Identifier	num		987937	1					
ANR	994123	Argument	input + 3		987937	1					
ANR	994124	AdditiveExpression	input + 3		987937	0		+			
ANR	994125	Identifier	input		987937	0					
ANR	994126	PrimaryExpression	3		987937	1					
ANR	994127	ExpressionStatement	"len = R_MIN ( len , core -> blocksize )"	5852:5:164544:164578	987937	1	True				
ANR	994128	AssignmentExpression	"len = R_MIN ( len , core -> blocksize )"		987937	0		=			
ANR	994129	Identifier	len		987937	0					
ANR	994130	CallExpression	"R_MIN ( len , core -> blocksize )"		987937	1					
ANR	994131	Callee	R_MIN		987937	0					
ANR	994132	Identifier	R_MIN		987937	0					
ANR	994133	ArgumentList	len		987937	1					
ANR	994134	Argument	len		987937	0					
ANR	994135	Identifier	len		987937	0					
ANR	994136	Argument	core -> blocksize		987937	1					
ANR	994137	PtrMemberAccess	core -> blocksize		987937	0					
ANR	994138	Identifier	core		987937	0					
ANR	994139	Identifier	blocksize		987937	1					
ANR	994140	ExpressionStatement	"print_json_string ( core , ( const char * ) core -> block , len , NULL )"	5854:4:164590:164653	987937	1	True				
ANR	994141	CallExpression	"print_json_string ( core , ( const char * ) core -> block , len , NULL )"		987937	0					
ANR	994142	Callee	print_json_string		987937	0					
ANR	994143	Identifier	print_json_string		987937	0					
ANR	994144	ArgumentList	core		987937	1					
ANR	994145	Argument	core		987937	0					
ANR	994146	Identifier	core		987937	0					
ANR	994147	Argument	( const char * ) core -> block		987937	1					
ANR	994148	CastExpression	( const char * ) core -> block		987937	0					
ANR	994149	CastTarget	const char *		987937	0					
ANR	994150	PtrMemberAccess	core -> block		987937	1					
ANR	994151	Identifier	core		987937	0					
ANR	994152	Identifier	block		987937	1					
ANR	994153	Argument	len		987937	2					
ANR	994154	Identifier	len		987937	0					
ANR	994155	Argument	NULL		987937	3					
ANR	994156	Identifier	NULL		987937	0					
ANR	994157	ExpressionStatement	r_cons_newline ( )	5855:4:164659:164676	987937	2	True				
ANR	994158	CallExpression	r_cons_newline ( )		987937	0					
ANR	994159	Callee	r_cons_newline		987937	0					
ANR	994160	Identifier	r_cons_newline		987937	0					
ANR	994161	ArgumentList			987937	1					
ANR	994162	BreakStatement	break ;	5857:3:164686:164691	987937	5	True				
ANR	994163	Label	case 'i' :	5858:2:164695:164703	987937	6	True				
ANR	994164	IfStatement	if ( l > 0 )		987937	7					
ANR	994165	Condition	l > 0	5859:7:164721:164725	987937	0	True				
ANR	994166	RelationalExpression	l > 0		987937	0		>			
ANR	994167	Identifier	l		987937	0					
ANR	994168	PrimaryExpression	0		987937	1					
ANR	994169	CompoundStatement		1018:4:28752:28766	987937	1					
ANR	994170	IdentifierDeclStatement	ut8 * buf = malloc ( 1024 + 1 ) ;	5860:4:164734:164762	987937	0	True				
ANR	994171	IdentifierDecl	* buf = malloc ( 1024 + 1 )		987937	0					
ANR	994172	IdentifierDeclType	ut8 *		987937	0					
ANR	994173	Identifier	buf		987937	1					
ANR	994174	AssignmentExpression	* buf = malloc ( 1024 + 1 )		987937	2		=			
ANR	994175	Identifier	buf		987937	0					
ANR	994176	CallExpression	malloc ( 1024 + 1 )		987937	1					
ANR	994177	Callee	malloc		987937	0					
ANR	994178	Identifier	malloc		987937	0					
ANR	994179	ArgumentList	1024 + 1		987937	1					
ANR	994180	Argument	1024 + 1		987937	0					
ANR	994181	AdditiveExpression	1024 + 1		987937	0		+			
ANR	994182	PrimaryExpression	1024		987937	0					
ANR	994183	PrimaryExpression	1		987937	1					
ANR	994184	IdentifierDeclStatement	int delta = 512 ;	5861:4:164768:164783	987937	1	True				
ANR	994185	IdentifierDecl	delta = 512		987937	0					
ANR	994186	IdentifierDeclType	int		987937	0					
ANR	994187	Identifier	delta		987937	1					
ANR	994188	AssignmentExpression	delta = 512		987937	2		=			
ANR	994189	Identifier	delta		987937	0					
ANR	994190	PrimaryExpression	512		987937	1					
ANR	994191	IdentifierDeclStatement	"ut8 * p , * e , * b ;"	5862:4:164789:164803	987937	2	True				
ANR	994192	IdentifierDecl	* p		987937	0					
ANR	994193	IdentifierDeclType	ut8 *		987937	0					
ANR	994194	Identifier	p		987937	1					
ANR	994195	IdentifierDecl	* e		987937	1					
ANR	994196	IdentifierDeclType	ut8 *		987937	0					
ANR	994197	Identifier	e		987937	1					
ANR	994198	IdentifierDecl	* b		987937	2					
ANR	994199	IdentifierDeclType	ut8 *		987937	0					
ANR	994200	Identifier	b		987937	1					
ANR	994201	IfStatement	if ( ! buf )		987937	3					
ANR	994202	Condition	! buf	5863:8:164813:164816	987937	0	True				
ANR	994203	UnaryOperationExpression	! buf		987937	0					
ANR	994204	UnaryOperator	!		987937	0					
ANR	994205	Identifier	buf		987937	1					
ANR	994206	CompoundStatement		1019:14:28782:28782	987937	1					
ANR	994207	ReturnStatement	return 0 ;	5864:5:164826:164834	987937	0	True				
ANR	994208	PrimaryExpression	0		987937	0					
ANR	994209	ExpressionStatement	buf [ 1024 ] = 0	5866:4:164846:164859	987937	4	True				
ANR	994210	AssignmentExpression	buf [ 1024 ] = 0		987937	0		=			
ANR	994211	ArrayIndexing	buf [ 1024 ]		987937	0					
ANR	994212	Identifier	buf		987937	0					
ANR	994213	PrimaryExpression	1024		987937	1					
ANR	994214	PrimaryExpression	0		987937	1					
ANR	994215	IfStatement	if ( core -> offset < delta )		987937	5					
ANR	994216	Condition	core -> offset < delta	5867:8:164869:164888	987937	0	True				
ANR	994217	RelationalExpression	core -> offset < delta		987937	0		<			
ANR	994218	PtrMemberAccess	core -> offset		987937	0					
ANR	994219	Identifier	core		987937	0					
ANR	994220	Identifier	offset		987937	1					
ANR	994221	Identifier	delta		987937	1					
ANR	994222	CompoundStatement		1023:30:28854:28854	987937	1					
ANR	994223	ExpressionStatement	delta = core -> offset	5868:5:164898:164918	987937	0	True				
ANR	994224	AssignmentExpression	delta = core -> offset		987937	0		=			
ANR	994225	Identifier	delta		987937	0					
ANR	994226	PtrMemberAccess	core -> offset		987937	1					
ANR	994227	Identifier	core		987937	0					
ANR	994228	Identifier	offset		987937	1					
ANR	994229	ExpressionStatement	p = buf + delta	5870:4:164930:164945	987937	6	True				
ANR	994230	AssignmentExpression	p = buf + delta		987937	0		=			
ANR	994231	Identifier	p		987937	0					
ANR	994232	AdditiveExpression	buf + delta		987937	1		+			
ANR	994233	Identifier	buf		987937	0					
ANR	994234	Identifier	delta		987937	1					
ANR	994235	ExpressionStatement	"r_io_read_at ( core -> io , core -> offset - delta , buf , 1024 )"	5871:4:164951:165007	987937	7	True				
ANR	994236	CallExpression	"r_io_read_at ( core -> io , core -> offset - delta , buf , 1024 )"		987937	0					
ANR	994237	Callee	r_io_read_at		987937	0					
ANR	994238	Identifier	r_io_read_at		987937	0					
ANR	994239	ArgumentList	core -> io		987937	1					
ANR	994240	Argument	core -> io		987937	0					
ANR	994241	PtrMemberAccess	core -> io		987937	0					
ANR	994242	Identifier	core		987937	0					
ANR	994243	Identifier	io		987937	1					
ANR	994244	Argument	core -> offset - delta		987937	1					
ANR	994245	AdditiveExpression	core -> offset - delta		987937	0		-			
ANR	994246	PtrMemberAccess	core -> offset		987937	0					
ANR	994247	Identifier	core		987937	0					
ANR	994248	Identifier	offset		987937	1					
ANR	994249	Identifier	delta		987937	1					
ANR	994250	Argument	buf		987937	2					
ANR	994251	Identifier	buf		987937	0					
ANR	994252	Argument	1024		987937	3					
ANR	994253	PrimaryExpression	1024		987937	0					
ANR	994254	ForStatement	for ( b = p ; b > buf ; b -- )		987937	8					
ANR	994255	ForInit	b = p ;	5872:9:165018:165023	987937	0	True				
ANR	994256	AssignmentExpression	b = p		987937	0		=			
ANR	994257	Identifier	b		987937	0					
ANR	994258	Identifier	p		987937	1					
ANR	994259	Condition	b > buf	5872:16:165025:165031	987937	1	True				
ANR	994260	RelationalExpression	b > buf		987937	0		>			
ANR	994261	Identifier	b		987937	0					
ANR	994262	Identifier	buf		987937	1					
ANR	994263	PostIncDecOperationExpression	b --	5872:25:165034:165036	987937	2	True				
ANR	994264	Identifier	b		987937	0					
ANR	994265	IncDec	--		987937	1					
ANR	994266	CompoundStatement		1028:30:29002:29002	987937	3					
ANR	994267	IfStatement	if ( ! IS_PRINTABLE ( * b ) )		987937	0					
ANR	994268	Condition	! IS_PRINTABLE ( * b )	5873:9:165050:165067	987937	0	True				
ANR	994269	UnaryOperationExpression	! IS_PRINTABLE ( * b )		987937	0					
ANR	994270	UnaryOperator	!		987937	0					
ANR	994271	CallExpression	IS_PRINTABLE ( * b )		987937	1					
ANR	994272	Callee	IS_PRINTABLE		987937	0					
ANR	994273	Identifier	IS_PRINTABLE		987937	0					
ANR	994274	ArgumentList	* b		987937	1					
ANR	994275	Argument	* b		987937	0					
ANR	994276	UnaryOperationExpression	* b		987937	0					
ANR	994277	UnaryOperator	*		987937	0					
ANR	994278	Identifier	b		987937	1					
ANR	994279	CompoundStatement		1029:29:29033:29033	987937	1					
ANR	994280	ExpressionStatement	b ++	5874:6:165078:165081	987937	0	True				
ANR	994281	PostIncDecOperationExpression	b ++		987937	0					
ANR	994282	Identifier	b		987937	0					
ANR	994283	IncDec	++		987937	1					
ANR	994284	BreakStatement	break ;	5875:6:165089:165094	987937	1	True				
ANR	994285	ForStatement	for ( e = p ; e < ( buf + 1024 ) ; e ++ )		987937	9					
ANR	994286	ForInit	e = p ;	5878:9:165118:165123	987937	0	True				
ANR	994287	AssignmentExpression	e = p		987937	0		=			
ANR	994288	Identifier	e		987937	0					
ANR	994289	Identifier	p		987937	1					
ANR	994290	Condition	e < ( buf + 1024 )	5878:16:165125:165140	987937	1	True				
ANR	994291	RelationalExpression	e < ( buf + 1024 )		987937	0		<			
ANR	994292	Identifier	e		987937	0					
ANR	994293	AdditiveExpression	buf + 1024		987937	1		+			
ANR	994294	Identifier	buf		987937	0					
ANR	994295	PrimaryExpression	1024		987937	1					
ANR	994296	PostIncDecOperationExpression	e ++	5878:34:165143:165145	987937	2	True				
ANR	994297	Identifier	e		987937	0					
ANR	994298	IncDec	++		987937	1					
ANR	994299	CompoundStatement		1034:39:29111:29111	987937	3					
ANR	994300	IfStatement	if ( ! IS_PRINTABLE ( * b ) )		987937	0					
ANR	994301	Condition	! IS_PRINTABLE ( * b )	5879:9:165159:165176	987937	0	True				
ANR	994302	UnaryOperationExpression	! IS_PRINTABLE ( * b )		987937	0					
ANR	994303	UnaryOperator	!		987937	0					
ANR	994304	CallExpression	IS_PRINTABLE ( * b )		987937	1					
ANR	994305	Callee	IS_PRINTABLE		987937	0					
ANR	994306	Identifier	IS_PRINTABLE		987937	0					
ANR	994307	ArgumentList	* b		987937	1					
ANR	994308	Argument	* b		987937	0					
ANR	994309	UnaryOperationExpression	* b		987937	0					
ANR	994310	UnaryOperator	*		987937	0					
ANR	994311	Identifier	b		987937	1					
ANR	994312	CompoundStatement		1035:29:29142:29142	987937	1					
ANR	994313	ExpressionStatement	* e = 0	5880:6:165187:165193	987937	0	True				
ANR	994314	AssignmentExpression	* e = 0		987937	0		=			
ANR	994315	UnaryOperationExpression	* e		987937	0					
ANR	994316	UnaryOperator	*		987937	0					
ANR	994317	Identifier	e		987937	1					
ANR	994318	PrimaryExpression	0		987937	1					
ANR	994319	ExpressionStatement	e --	5881:6:165201:165204	987937	1	True				
ANR	994320	PostIncDecOperationExpression	e --		987937	0					
ANR	994321	Identifier	e		987937	0					
ANR	994322	IncDec	--		987937	1					
ANR	994323	BreakStatement	break ;	5882:6:165212:165217	987937	2	True				
ANR	994324	ExpressionStatement	r_cons_strcat ( ( const char * ) b )	5885:4:165236:165268	987937	10	True				
ANR	994325	CallExpression	r_cons_strcat ( ( const char * ) b )		987937	0					
ANR	994326	Callee	r_cons_strcat		987937	0					
ANR	994327	Identifier	r_cons_strcat		987937	0					
ANR	994328	ArgumentList	( const char * ) b		987937	1					
ANR	994329	Argument	( const char * ) b		987937	0					
ANR	994330	CastExpression	( const char * ) b		987937	0					
ANR	994331	CastTarget	const char *		987937	0					
ANR	994332	Identifier	b		987937	1					
ANR	994333	ExpressionStatement	r_cons_newline ( )	5886:4:165274:165291	987937	11	True				
ANR	994334	CallExpression	r_cons_newline ( )		987937	0					
ANR	994335	Callee	r_cons_newline		987937	0					
ANR	994336	Identifier	r_cons_newline		987937	0					
ANR	994337	ArgumentList			987937	1					
ANR	994338	ExpressionStatement	free ( buf )	5889:4:165376:165386	987937	12	True				
ANR	994339	CallExpression	free ( buf )		987937	0					
ANR	994340	Callee	free		987937	0					
ANR	994341	Identifier	free		987937	0					
ANR	994342	ArgumentList	buf		987937	1					
ANR	994343	Argument	buf		987937	0					
ANR	994344	Identifier	buf		987937	0					
ANR	994345	BreakStatement	break ;	5891:3:165396:165401	987937	8	True				
ANR	994346	Label	case 'x' :	5892:2:165405:165413	987937	9	True				
ANR	994347	IfStatement	if ( l > 0 )		987937	10					
ANR	994348	Condition	l > 0	5893:7:165431:165435	987937	0	True				
ANR	994349	RelationalExpression	l > 0		987937	0		>			
ANR	994350	Identifier	l		987937	0					
ANR	994351	PrimaryExpression	0		987937	1					
ANR	994352	CompoundStatement		1049:14:29401:29401	987937	1					
ANR	994353	ExpressionStatement	"r_print_string ( core -> print , core -> offset , block , len , R_PRINT_STRING_ESC_NL )"	5894:4:165444:165521	987937	0	True				
ANR	994354	CallExpression	"r_print_string ( core -> print , core -> offset , block , len , R_PRINT_STRING_ESC_NL )"		987937	0					
ANR	994355	Callee	r_print_string		987937	0					
ANR	994356	Identifier	r_print_string		987937	0					
ANR	994357	ArgumentList	core -> print		987937	1					
ANR	994358	Argument	core -> print		987937	0					
ANR	994359	PtrMemberAccess	core -> print		987937	0					
ANR	994360	Identifier	core		987937	0					
ANR	994361	Identifier	print		987937	1					
ANR	994362	Argument	core -> offset		987937	1					
ANR	994363	PtrMemberAccess	core -> offset		987937	0					
ANR	994364	Identifier	core		987937	0					
ANR	994365	Identifier	offset		987937	1					
ANR	994366	Argument	block		987937	2					
ANR	994367	Identifier	block		987937	0					
ANR	994368	Argument	len		987937	3					
ANR	994369	Identifier	len		987937	0					
ANR	994370	Argument	R_PRINT_STRING_ESC_NL		987937	4					
ANR	994371	Identifier	R_PRINT_STRING_ESC_NL		987937	0					
ANR	994372	BreakStatement	break ;	5896:3:165531:165536	987937	11	True				
ANR	994373	Label	case 'b' :	5897:2:165540:165548	987937	12	True				
ANR	994374	IfStatement	if ( l > 0 )		987937	13					
ANR	994375	Condition	l > 0	5898:7:165566:165570	987937	0	True				
ANR	994376	RelationalExpression	l > 0		987937	0		>			
ANR	994377	Identifier	l		987937	0					
ANR	994378	PrimaryExpression	0		987937	1					
ANR	994379	CompoundStatement		1057:4:29629:29648	987937	1					
ANR	994380	IdentifierDeclStatement	int quiet = input [ 2 ] == 'q' ;	5899:4:165579:165606	987937	0	True				
ANR	994381	IdentifierDecl	quiet = input [ 2 ] == 'q'		987937	0					
ANR	994382	IdentifierDeclType	int		987937	0					
ANR	994383	Identifier	quiet		987937	1					
ANR	994384	AssignmentExpression	quiet = input [ 2 ] == 'q'		987937	2		=			
ANR	994385	Identifier	quiet		987937	0					
ANR	994386	EqualityExpression	input [ 2 ] == 'q'		987937	1		==			
ANR	994387	ArrayIndexing	input [ 2 ]		987937	0					
ANR	994388	Identifier	input		987937	0					
ANR	994389	PrimaryExpression	2		987937	1					
ANR	994390	PrimaryExpression	'q'		987937	1					
ANR	994391	IdentifierDeclStatement	char * s = malloc ( core -> blocksize + 1 ) ;	5900:4:165622:165660	987937	1	True				
ANR	994392	IdentifierDecl	* s = malloc ( core -> blocksize + 1 )		987937	0					
ANR	994393	IdentifierDeclType	char *		987937	0					
ANR	994394	Identifier	s		987937	1					
ANR	994395	AssignmentExpression	* s = malloc ( core -> blocksize + 1 )		987937	2		=			
ANR	994396	Identifier	s		987937	0					
ANR	994397	CallExpression	malloc ( core -> blocksize + 1 )		987937	1					
ANR	994398	Callee	malloc		987937	0					
ANR	994399	Identifier	malloc		987937	0					
ANR	994400	ArgumentList	core -> blocksize + 1		987937	1					
ANR	994401	Argument	core -> blocksize + 1		987937	0					
ANR	994402	AdditiveExpression	core -> blocksize + 1		987937	0		+			
ANR	994403	PtrMemberAccess	core -> blocksize		987937	0					
ANR	994404	Identifier	core		987937	0					
ANR	994405	Identifier	blocksize		987937	1					
ANR	994406	PrimaryExpression	1		987937	1					
ANR	994407	IdentifierDeclStatement	"int i , j , hasnl = 0 ;"	5901:4:165666:165685	987937	2	True				
ANR	994408	IdentifierDecl	i		987937	0					
ANR	994409	IdentifierDeclType	int		987937	0					
ANR	994410	Identifier	i		987937	1					
ANR	994411	IdentifierDecl	j		987937	1					
ANR	994412	IdentifierDeclType	int		987937	0					
ANR	994413	Identifier	j		987937	1					
ANR	994414	IdentifierDecl	hasnl = 0		987937	2					
ANR	994415	IdentifierDeclType	int		987937	0					
ANR	994416	Identifier	hasnl		987937	1					
ANR	994417	AssignmentExpression	hasnl = 0		987937	2		=			
ANR	994418	Identifier	hasnl		987937	0					
ANR	994419	PrimaryExpression	0		987937	1					
ANR	994420	IfStatement	if ( s )		987937	3					
ANR	994421	Condition	s	5902:8:165695:165695	987937	0	True				
ANR	994422	Identifier	s		987937	0					
ANR	994423	CompoundStatement		1058:11:29661:29661	987937	1					
ANR	994424	IfStatement	if ( ! quiet )		987937	0					
ANR	994425	Condition	! quiet	5903:9:165709:165714	987937	0	True				
ANR	994426	UnaryOperationExpression	! quiet		987937	0					
ANR	994427	UnaryOperator	!		987937	0					
ANR	994428	Identifier	quiet		987937	1					
ANR	994429	CompoundStatement		1059:17:29680:29680	987937	1					
ANR	994430	ExpressionStatement	"r_print_offset ( core -> print , core -> offset , 0 , 0 , 0 , 0 , NULL )"	5904:6:165725:165785	987937	0	True				
ANR	994431	CallExpression	"r_print_offset ( core -> print , core -> offset , 0 , 0 , 0 , 0 , NULL )"		987937	0					
ANR	994432	Callee	r_print_offset		987937	0					
ANR	994433	Identifier	r_print_offset		987937	0					
ANR	994434	ArgumentList	core -> print		987937	1					
ANR	994435	Argument	core -> print		987937	0					
ANR	994436	PtrMemberAccess	core -> print		987937	0					
ANR	994437	Identifier	core		987937	0					
ANR	994438	Identifier	print		987937	1					
ANR	994439	Argument	core -> offset		987937	1					
ANR	994440	PtrMemberAccess	core -> offset		987937	0					
ANR	994441	Identifier	core		987937	0					
ANR	994442	Identifier	offset		987937	1					
ANR	994443	Argument	0		987937	2					
ANR	994444	PrimaryExpression	0		987937	0					
ANR	994445	Argument	0		987937	3					
ANR	994446	PrimaryExpression	0		987937	0					
ANR	994447	Argument	0		987937	4					
ANR	994448	PrimaryExpression	0		987937	0					
ANR	994449	Argument	0		987937	5					
ANR	994450	PrimaryExpression	0		987937	0					
ANR	994451	Argument	NULL		987937	6					
ANR	994452	Identifier	NULL		987937	0					
ANR	994453	ForStatement	for ( i = j = 0 ; i < core -> blocksize ; i ++ )		987937	1					
ANR	994454	ForInit	i = j = 0 ;	5907:10:165837:165846	987937	0	True				
ANR	994455	AssignmentExpression	i = j = 0		987937	0		=			
ANR	994456	Identifier	i		987937	0					
ANR	994457	AssignmentExpression	j = 0		987937	1		=			
ANR	994458	Identifier	j		987937	0					
ANR	994459	PrimaryExpression	0		987937	1					
ANR	994460	Condition	i < core -> blocksize	5907:21:165848:165866	987937	1	True				
ANR	994461	RelationalExpression	i < core -> blocksize		987937	0		<			
ANR	994462	Identifier	i		987937	0					
ANR	994463	PtrMemberAccess	core -> blocksize		987937	1					
ANR	994464	Identifier	core		987937	0					
ANR	994465	Identifier	blocksize		987937	1					
ANR	994466	PostIncDecOperationExpression	i ++	5907:42:165869:165871	987937	2	True				
ANR	994467	Identifier	i		987937	0					
ANR	994468	IncDec	++		987937	1					
ANR	994469	CompoundStatement		1064:6:29845:29870	987937	3					
ANR	994470	IdentifierDeclStatement	char ch = ( char ) block [ i ] ;	5908:6:165882:165907	987937	0	True				
ANR	994471	IdentifierDecl	ch = ( char ) block [ i ]		987937	0					
ANR	994472	IdentifierDeclType	char		987937	0					
ANR	994473	Identifier	ch		987937	1					
ANR	994474	AssignmentExpression	ch = ( char ) block [ i ]		987937	2		=			
ANR	994475	Identifier	ch		987937	0					
ANR	994476	CastExpression	( char ) block [ i ]		987937	1					
ANR	994477	CastTarget	char		987937	0					
ANR	994478	ArrayIndexing	block [ i ]		987937	1					
ANR	994479	Identifier	block		987937	0					
ANR	994480	Identifier	i		987937	1					
ANR	994481	IfStatement	if ( ! ch )		987937	1					
ANR	994482	Condition	! ch	5909:10:165919:165921	987937	0	True				
ANR	994483	UnaryOperationExpression	! ch		987937	0					
ANR	994484	UnaryOperator	!		987937	0					
ANR	994485	Identifier	ch		987937	1					
ANR	994486	CompoundStatement		1065:15:29887:29887	987937	1					
ANR	994487	IfStatement	if ( ! hasnl )		987937	0					
ANR	994488	Condition	! hasnl	5910:11:165937:165942	987937	0	True				
ANR	994489	UnaryOperationExpression	! hasnl		987937	0					
ANR	994490	UnaryOperator	!		987937	0					
ANR	994491	Identifier	hasnl		987937	1					
ANR	994492	CompoundStatement		1066:19:29908:29908	987937	1					
ANR	994493	ExpressionStatement	s [ j ] = 0	5911:8:165955:165963	987937	0	True				
ANR	994494	AssignmentExpression	s [ j ] = 0		987937	0		=			
ANR	994495	ArrayIndexing	s [ j ]		987937	0					
ANR	994496	Identifier	s		987937	0					
ANR	994497	Identifier	j		987937	1					
ANR	994498	PrimaryExpression	0		987937	1					
ANR	994499	IfStatement	if ( * s )		987937	1					
ANR	994500	Condition	* s	5912:12:165977:165978	987937	0	True				
ANR	994501	UnaryOperationExpression	* s		987937	0					
ANR	994502	UnaryOperator	*		987937	0					
ANR	994503	Identifier	s		987937	1					
ANR	994504	CompoundStatement		1068:16:29944:29944	987937	1					
ANR	994505	ExpressionStatement	r_cons_println ( s )	5913:9:165992:166010	987937	0	True				
ANR	994506	CallExpression	r_cons_println ( s )		987937	0					
ANR	994507	Callee	r_cons_println		987937	0					
ANR	994508	Identifier	r_cons_println		987937	0					
ANR	994509	ArgumentList	s		987937	1					
ANR	994510	Argument	s		987937	0					
ANR	994511	Identifier	s		987937	0					
ANR	994512	IfStatement	if ( ! quiet )		987937	1					
ANR	994513	Condition	! quiet	5914:13:166025:166030	987937	0	True				
ANR	994514	UnaryOperationExpression	! quiet		987937	0					
ANR	994515	UnaryOperator	!		987937	0					
ANR	994516	Identifier	quiet		987937	1					
ANR	994517	CompoundStatement		1070:21:29996:29996	987937	1					
ANR	994518	ExpressionStatement	"r_print_offset ( core -> print , core -> offset + i , 0 , 0 , 0 , 0 , NULL )"	5915:10:166045:166109	987937	0	True				
ANR	994519	CallExpression	"r_print_offset ( core -> print , core -> offset + i , 0 , 0 , 0 , 0 , NULL )"		987937	0					
ANR	994520	Callee	r_print_offset		987937	0					
ANR	994521	Identifier	r_print_offset		987937	0					
ANR	994522	ArgumentList	core -> print		987937	1					
ANR	994523	Argument	core -> print		987937	0					
ANR	994524	PtrMemberAccess	core -> print		987937	0					
ANR	994525	Identifier	core		987937	0					
ANR	994526	Identifier	print		987937	1					
ANR	994527	Argument	core -> offset + i		987937	1					
ANR	994528	AdditiveExpression	core -> offset + i		987937	0		+			
ANR	994529	PtrMemberAccess	core -> offset		987937	0					
ANR	994530	Identifier	core		987937	0					
ANR	994531	Identifier	offset		987937	1					
ANR	994532	Identifier	i		987937	1					
ANR	994533	Argument	0		987937	2					
ANR	994534	PrimaryExpression	0		987937	0					
ANR	994535	Argument	0		987937	3					
ANR	994536	PrimaryExpression	0		987937	0					
ANR	994537	Argument	0		987937	4					
ANR	994538	PrimaryExpression	0		987937	0					
ANR	994539	Argument	0		987937	5					
ANR	994540	PrimaryExpression	0		987937	0					
ANR	994541	Argument	NULL		987937	6					
ANR	994542	Identifier	NULL		987937	0					
ANR	994543	ExpressionStatement	j = 0	5918:8:166140:166145	987937	2	True				
ANR	994544	AssignmentExpression	j = 0		987937	0		=			
ANR	994545	Identifier	j		987937	0					
ANR	994546	PrimaryExpression	0		987937	1					
ANR	994547	ExpressionStatement	s [ 0 ] = 0	5919:8:166155:166163	987937	3	True				
ANR	994548	AssignmentExpression	s [ 0 ] = 0		987937	0		=			
ANR	994549	ArrayIndexing	s [ 0 ]		987937	0					
ANR	994550	Identifier	s		987937	0					
ANR	994551	PrimaryExpression	0		987937	1					
ANR	994552	PrimaryExpression	0		987937	1					
ANR	994553	ExpressionStatement	hasnl = 1	5921:7:166181:166190	987937	1	True				
ANR	994554	AssignmentExpression	hasnl = 1		987937	0		=			
ANR	994555	Identifier	hasnl		987937	0					
ANR	994556	PrimaryExpression	1		987937	1					
ANR	994557	ContinueStatement	continue ;	5922:7:166199:166207	987937	2	True				
ANR	994558	ExpressionStatement	hasnl = 0	5924:6:166223:166232	987937	2	True				
ANR	994559	AssignmentExpression	hasnl = 0		987937	0		=			
ANR	994560	Identifier	hasnl		987937	0					
ANR	994561	PrimaryExpression	0		987937	1					
ANR	994562	IfStatement	if ( IS_PRINTABLE ( ch ) )		987937	3					
ANR	994563	Condition	IS_PRINTABLE ( ch )	5925:10:166244:166260	987937	0	True				
ANR	994564	CallExpression	IS_PRINTABLE ( ch )		987937	0					
ANR	994565	Callee	IS_PRINTABLE		987937	0					
ANR	994566	Identifier	IS_PRINTABLE		987937	0					
ANR	994567	ArgumentList	ch		987937	1					
ANR	994568	Argument	ch		987937	0					
ANR	994569	Identifier	ch		987937	0					
ANR	994570	CompoundStatement		1081:29:30226:30226	987937	1					
ANR	994571	ExpressionStatement	s [ j ++ ] = ch	5926:7:166272:166283	987937	0	True				
ANR	994572	AssignmentExpression	s [ j ++ ] = ch		987937	0		=			
ANR	994573	ArrayIndexing	s [ j ++ ]		987937	0					
ANR	994574	Identifier	s		987937	0					
ANR	994575	PostIncDecOperationExpression	j ++		987937	1					
ANR	994576	Identifier	j		987937	0					
ANR	994577	IncDec	++		987937	1					
ANR	994578	Identifier	ch		987937	1					
ANR	994579	ExpressionStatement	s [ j ] = 0	5929:5:166305:166313	987937	2	True				
ANR	994580	AssignmentExpression	s [ j ] = 0		987937	0		=			
ANR	994581	ArrayIndexing	s [ j ]		987937	0					
ANR	994582	Identifier	s		987937	0					
ANR	994583	Identifier	j		987937	1					
ANR	994584	PrimaryExpression	0		987937	1					
ANR	994585	ExpressionStatement	r_cons_print ( s )	5930:5:166320:166336	987937	3	True				
ANR	994586	CallExpression	r_cons_print ( s )		987937	0					
ANR	994587	Callee	r_cons_print		987937	0					
ANR	994588	Identifier	r_cons_print		987937	0					
ANR	994589	ArgumentList	s		987937	1					
ANR	994590	Argument	s		987937	0					
ANR	994591	Identifier	s		987937	0					
ANR	994592	ExpressionStatement	free ( s )	5931:5:166369:166377	987937	4	True				
ANR	994593	CallExpression	free ( s )		987937	0					
ANR	994594	Callee	free		987937	0					
ANR	994595	Identifier	free		987937	0					
ANR	994596	ArgumentList	s		987937	1					
ANR	994597	Argument	s		987937	0					
ANR	994598	Identifier	s		987937	0					
ANR	994599	BreakStatement	break ;	5934:3:166393:166398	987937	14	True				
ANR	994600	Label	case 'z' :	5935:2:166402:166410	987937	15	True				
ANR	994601	IfStatement	if ( l > 0 )		987937	16					
ANR	994602	Condition	l > 0	5936:7:166428:166432	987937	0	True				
ANR	994603	RelationalExpression	l > 0		987937	0		>			
ANR	994604	Identifier	l		987937	0					
ANR	994605	PrimaryExpression	0		987937	1					
ANR	994606	CompoundStatement		1094:4:30448:30456	987937	1					
ANR	994607	IdentifierDeclStatement	char * s = malloc ( core -> blocksize + 1 ) ;	5937:4:166441:166479	987937	0	True				
ANR	994608	IdentifierDecl	* s = malloc ( core -> blocksize + 1 )		987937	0					
ANR	994609	IdentifierDeclType	char *		987937	0					
ANR	994610	Identifier	s		987937	1					
ANR	994611	AssignmentExpression	* s = malloc ( core -> blocksize + 1 )		987937	2		=			
ANR	994612	Identifier	s		987937	0					
ANR	994613	CallExpression	malloc ( core -> blocksize + 1 )		987937	1					
ANR	994614	Callee	malloc		987937	0					
ANR	994615	Identifier	malloc		987937	0					
ANR	994616	ArgumentList	core -> blocksize + 1		987937	1					
ANR	994617	Argument	core -> blocksize + 1		987937	0					
ANR	994618	AdditiveExpression	core -> blocksize + 1		987937	0		+			
ANR	994619	PtrMemberAccess	core -> blocksize		987937	0					
ANR	994620	Identifier	core		987937	0					
ANR	994621	Identifier	blocksize		987937	1					
ANR	994622	PrimaryExpression	1		987937	1					
ANR	994623	IdentifierDeclStatement	"int i , j ;"	5938:4:166485:166493	987937	1	True				
ANR	994624	IdentifierDecl	i		987937	0					
ANR	994625	IdentifierDeclType	int		987937	0					
ANR	994626	Identifier	i		987937	1					
ANR	994627	IdentifierDecl	j		987937	1					
ANR	994628	IdentifierDeclType	int		987937	0					
ANR	994629	Identifier	j		987937	1					
ANR	994630	IfStatement	if ( s )		987937	2					
ANR	994631	Condition	s	5939:8:166503:166503	987937	0	True				
ANR	994632	Identifier	s		987937	0					
ANR	994633	CompoundStatement		1095:11:30469:30469	987937	1					
ANR	994634	ForStatement	for ( i = j = 0 ; i < core -> blocksize ; i ++ )		987937	0					
ANR	994635	ForInit	i = j = 0 ;	5941:10:166551:166560	987937	0	True				
ANR	994636	AssignmentExpression	i = j = 0		987937	0		=			
ANR	994637	Identifier	i		987937	0					
ANR	994638	AssignmentExpression	j = 0		987937	1		=			
ANR	994639	Identifier	j		987937	0					
ANR	994640	PrimaryExpression	0		987937	1					
ANR	994641	Condition	i < core -> blocksize	5941:21:166562:166580	987937	1	True				
ANR	994642	RelationalExpression	i < core -> blocksize		987937	0		<			
ANR	994643	Identifier	i		987937	0					
ANR	994644	PtrMemberAccess	core -> blocksize		987937	1					
ANR	994645	Identifier	core		987937	0					
ANR	994646	Identifier	blocksize		987937	1					
ANR	994647	PostIncDecOperationExpression	i ++	5941:42:166583:166585	987937	2	True				
ANR	994648	Identifier	i		987937	0					
ANR	994649	IncDec	++		987937	1					
ANR	994650	CompoundStatement		1098:6:30559:30590	987937	3					
ANR	994651	IdentifierDeclStatement	char ch = ( char ) core -> block [ i ] ;	5942:6:166596:166627	987937	0	True				
ANR	994652	IdentifierDecl	ch = ( char ) core -> block [ i ]		987937	0					
ANR	994653	IdentifierDeclType	char		987937	0					
ANR	994654	Identifier	ch		987937	1					
ANR	994655	AssignmentExpression	ch = ( char ) core -> block [ i ]		987937	2		=			
ANR	994656	Identifier	ch		987937	0					
ANR	994657	CastExpression	( char ) core -> block [ i ]		987937	1					
ANR	994658	CastTarget	char		987937	0					
ANR	994659	ArrayIndexing	core -> block [ i ]		987937	1					
ANR	994660	PtrMemberAccess	core -> block		987937	0					
ANR	994661	Identifier	core		987937	0					
ANR	994662	Identifier	block		987937	1					
ANR	994663	Identifier	i		987937	1					
ANR	994664	IfStatement	if ( ! ch )		987937	1					
ANR	994665	Condition	! ch	5943:10:166639:166641	987937	0	True				
ANR	994666	UnaryOperationExpression	! ch		987937	0					
ANR	994667	UnaryOperator	!		987937	0					
ANR	994668	Identifier	ch		987937	1					
ANR	994669	CompoundStatement		1099:15:30607:30607	987937	1					
ANR	994670	BreakStatement	break ;	5944:7:166653:166658	987937	0	True				
ANR	994671	IfStatement	if ( IS_PRINTABLE ( ch ) )		987937	2					
ANR	994672	Condition	IS_PRINTABLE ( ch )	5946:10:166678:166694	987937	0	True				
ANR	994673	CallExpression	IS_PRINTABLE ( ch )		987937	0					
ANR	994674	Callee	IS_PRINTABLE		987937	0					
ANR	994675	Identifier	IS_PRINTABLE		987937	0					
ANR	994676	ArgumentList	ch		987937	1					
ANR	994677	Argument	ch		987937	0					
ANR	994678	Identifier	ch		987937	0					
ANR	994679	CompoundStatement		1102:29:30660:30660	987937	1					
ANR	994680	ExpressionStatement	s [ j ++ ] = ch	5947:7:166706:166717	987937	0	True				
ANR	994681	AssignmentExpression	s [ j ++ ] = ch		987937	0		=			
ANR	994682	ArrayIndexing	s [ j ++ ]		987937	0					
ANR	994683	Identifier	s		987937	0					
ANR	994684	PostIncDecOperationExpression	j ++		987937	1					
ANR	994685	Identifier	j		987937	0					
ANR	994686	IncDec	++		987937	1					
ANR	994687	Identifier	ch		987937	1					
ANR	994688	ExpressionStatement	s [ j ] = '\\0'	5950:5:166739:166750	987937	1	True				
ANR	994689	AssignmentExpression	s [ j ] = '\\0'		987937	0		=			
ANR	994690	ArrayIndexing	s [ j ]		987937	0					
ANR	994691	Identifier	s		987937	0					
ANR	994692	Identifier	j		987937	1					
ANR	994693	PrimaryExpression	'\\0'		987937	1					
ANR	994694	IfStatement	if ( input [ 2 ] == 'j' )		987937	2					
ANR	994695	Condition	input [ 2 ] == 'j'	5951:9:166761:166775	987937	0	True				
ANR	994696	EqualityExpression	input [ 2 ] == 'j'		987937	0		==			
ANR	994697	ArrayIndexing	input [ 2 ]		987937	0					
ANR	994698	Identifier	input		987937	0					
ANR	994699	PrimaryExpression	2		987937	1					
ANR	994700	PrimaryExpression	'j'		987937	1					
ANR	994701	CompoundStatement		1107:26:30741:30741	987937	1					
ANR	994702	ExpressionStatement	"print_json_string ( core , ( const char * ) s , j , NULL )"	5952:6:166794:166845	987937	0	True				
ANR	994703	CallExpression	"print_json_string ( core , ( const char * ) s , j , NULL )"		987937	0					
ANR	994704	Callee	print_json_string		987937	0					
ANR	994705	Identifier	print_json_string		987937	0					
ANR	994706	ArgumentList	core		987937	1					
ANR	994707	Argument	core		987937	0					
ANR	994708	Identifier	core		987937	0					
ANR	994709	Argument	( const char * ) s		987937	1					
ANR	994710	CastExpression	( const char * ) s		987937	0					
ANR	994711	CastTarget	const char *		987937	0					
ANR	994712	Identifier	s		987937	1					
ANR	994713	Argument	j		987937	2					
ANR	994714	Identifier	j		987937	0					
ANR	994715	Argument	NULL		987937	3					
ANR	994716	Identifier	NULL		987937	0					
ANR	994717	ExpressionStatement	r_cons_newline ( )	5953:6:166853:166870	987937	1	True				
ANR	994718	CallExpression	r_cons_newline ( )		987937	0					
ANR	994719	Callee	r_cons_newline		987937	0					
ANR	994720	Identifier	r_cons_newline		987937	0					
ANR	994721	ArgumentList			987937	1					
ANR	994722	ElseStatement	else		987937	0					
ANR	994723	CompoundStatement		1110:12:30847:30847	987937	0					
ANR	994724	ExpressionStatement	r_cons_println ( s )	5955:6:166892:166910	987937	0	True				
ANR	994725	CallExpression	r_cons_println ( s )		987937	0					
ANR	994726	Callee	r_cons_println		987937	0					
ANR	994727	Identifier	r_cons_println		987937	0					
ANR	994728	ArgumentList	s		987937	1					
ANR	994729	Argument	s		987937	0					
ANR	994730	Identifier	s		987937	0					
ANR	994731	ExpressionStatement	free ( s )	5957:5:166924:166932	987937	3	True				
ANR	994732	CallExpression	free ( s )		987937	0					
ANR	994733	Callee	free		987937	0					
ANR	994734	Identifier	free		987937	0					
ANR	994735	ArgumentList	s		987937	1					
ANR	994736	Argument	s		987937	0					
ANR	994737	Identifier	s		987937	0					
ANR	994738	BreakStatement	break ;	5960:3:166948:166953	987937	17	True				
ANR	994739	Label	case 'p' :	5961:2:166957:166965	987937	18	True				
ANR	994740	IfStatement	if ( l > 0 )		987937	19					
ANR	994741	Condition	l > 0	5962:7:166983:166987	987937	0	True				
ANR	994742	RelationalExpression	l > 0		987937	0		>			
ANR	994743	Identifier	l		987937	0					
ANR	994744	PrimaryExpression	0		987937	1					
ANR	994745	CompoundStatement		1119:4:30959:30985	987937	1					
ANR	994746	IdentifierDeclStatement	int mylen = core -> block [ 0 ] ;	5963:4:166996:167022	987937	0	True				
ANR	994747	IdentifierDecl	mylen = core -> block [ 0 ]		987937	0					
ANR	994748	IdentifierDeclType	int		987937	0					
ANR	994749	Identifier	mylen		987937	1					
ANR	994750	AssignmentExpression	mylen = core -> block [ 0 ]		987937	2		=			
ANR	994751	Identifier	mylen		987937	0					
ANR	994752	ArrayIndexing	core -> block [ 0 ]		987937	1					
ANR	994753	PtrMemberAccess	core -> block		987937	0					
ANR	994754	Identifier	core		987937	0					
ANR	994755	Identifier	block		987937	1					
ANR	994756	PrimaryExpression	0		987937	1					
ANR	994757	IfStatement	if ( mylen < core -> blocksize )		987937	1					
ANR	994758	Condition	mylen < core -> blocksize	5965:8:167092:167114	987937	0	True				
ANR	994759	RelationalExpression	mylen < core -> blocksize		987937	0		<			
ANR	994760	Identifier	mylen		987937	0					
ANR	994761	PtrMemberAccess	core -> blocksize		987937	1					
ANR	994762	Identifier	core		987937	0					
ANR	994763	Identifier	blocksize		987937	1					
ANR	994764	CompoundStatement		1121:33:31080:31080	987937	1					
ANR	994765	IfStatement	if ( input [ 2 ] == 'j' )		987937	0					
ANR	994766	Condition	input [ 2 ] == 'j'	5966:9:167128:167142	987937	0	True				
ANR	994767	EqualityExpression	input [ 2 ] == 'j'		987937	0		==			
ANR	994768	ArrayIndexing	input [ 2 ]		987937	0					
ANR	994769	Identifier	input		987937	0					
ANR	994770	PrimaryExpression	2		987937	1					
ANR	994771	PrimaryExpression	'j'		987937	1					
ANR	994772	CompoundStatement		1122:26:31108:31108	987937	1					
ANR	994773	ExpressionStatement	"print_json_string ( core , ( const char * ) core -> block + 1 , mylen , NULL )"	5967:6:167161:167230	987937	0	True				
ANR	994774	CallExpression	"print_json_string ( core , ( const char * ) core -> block + 1 , mylen , NULL )"		987937	0					
ANR	994775	Callee	print_json_string		987937	0					
ANR	994776	Identifier	print_json_string		987937	0					
ANR	994777	ArgumentList	core		987937	1					
ANR	994778	Argument	core		987937	0					
ANR	994779	Identifier	core		987937	0					
ANR	994780	Argument	( const char * ) core -> block + 1		987937	1					
ANR	994781	AdditiveExpression	( const char * ) core -> block + 1		987937	0		+			
ANR	994782	CastExpression	( const char * ) core -> block		987937	0					
ANR	994783	CastTarget	const char *		987937	0					
ANR	994784	PtrMemberAccess	core -> block		987937	1					
ANR	994785	Identifier	core		987937	0					
ANR	994786	Identifier	block		987937	1					
ANR	994787	PrimaryExpression	1		987937	1					
ANR	994788	Argument	mylen		987937	2					
ANR	994789	Identifier	mylen		987937	0					
ANR	994790	Argument	NULL		987937	3					
ANR	994791	Identifier	NULL		987937	0					
ANR	994792	ExpressionStatement	r_cons_newline ( )	5968:6:167238:167255	987937	1	True				
ANR	994793	CallExpression	r_cons_newline ( )		987937	0					
ANR	994794	Callee	r_cons_newline		987937	0					
ANR	994795	Identifier	r_cons_newline		987937	0					
ANR	994796	ArgumentList			987937	1					
ANR	994797	ElseStatement	else		987937	0					
ANR	994798	CompoundStatement		1125:12:31232:31232	987937	0					
ANR	994799	ExpressionStatement	"r_print_string ( core -> print , core -> offset , core -> block + 1 , mylen , R_PRINT_STRING_ZEROEND )"	5970:6:167277:167374	987937	0	True				
ANR	994800	CallExpression	"r_print_string ( core -> print , core -> offset , core -> block + 1 , mylen , R_PRINT_STRING_ZEROEND )"		987937	0					
ANR	994801	Callee	r_print_string		987937	0					
ANR	994802	Identifier	r_print_string		987937	0					
ANR	994803	ArgumentList	core -> print		987937	1					
ANR	994804	Argument	core -> print		987937	0					
ANR	994805	PtrMemberAccess	core -> print		987937	0					
ANR	994806	Identifier	core		987937	0					
ANR	994807	Identifier	print		987937	1					
ANR	994808	Argument	core -> offset		987937	1					
ANR	994809	PtrMemberAccess	core -> offset		987937	0					
ANR	994810	Identifier	core		987937	0					
ANR	994811	Identifier	offset		987937	1					
ANR	994812	Argument	core -> block + 1		987937	2					
ANR	994813	AdditiveExpression	core -> block + 1		987937	0		+			
ANR	994814	PtrMemberAccess	core -> block		987937	0					
ANR	994815	Identifier	core		987937	0					
ANR	994816	Identifier	block		987937	1					
ANR	994817	PrimaryExpression	1		987937	1					
ANR	994818	Argument	mylen		987937	3					
ANR	994819	Identifier	mylen		987937	0					
ANR	994820	Argument	R_PRINT_STRING_ZEROEND		987937	4					
ANR	994821	Identifier	R_PRINT_STRING_ZEROEND		987937	0					
ANR	994822	ExpressionStatement	core -> num -> value = mylen	5973:5:167388:167412	987937	1	True				
ANR	994823	AssignmentExpression	core -> num -> value = mylen		987937	0		=			
ANR	994824	PtrMemberAccess	core -> num -> value		987937	0					
ANR	994825	PtrMemberAccess	core -> num		987937	0					
ANR	994826	Identifier	core		987937	0					
ANR	994827	Identifier	num		987937	1					
ANR	994828	Identifier	value		987937	1					
ANR	994829	Identifier	mylen		987937	1					
ANR	994830	ElseStatement	else		987937	0					
ANR	994831	CompoundStatement		1130:11:31388:31388	987937	0					
ANR	994832	ExpressionStatement	core -> num -> value = 0	5975:5:167432:167452	987937	0	True				
ANR	994833	AssignmentExpression	core -> num -> value = 0		987937	0		=			
ANR	994834	PtrMemberAccess	core -> num -> value		987937	0					
ANR	994835	PtrMemberAccess	core -> num		987937	0					
ANR	994836	Identifier	core		987937	0					
ANR	994837	Identifier	num		987937	1					
ANR	994838	Identifier	value		987937	1					
ANR	994839	PrimaryExpression	0		987937	1					
ANR	994840	BreakStatement	break ;	5978:3:167477:167482	987937	20	True				
ANR	994841	Label	case 'w' :	5979:2:167486:167494	987937	21	True				
ANR	994842	IfStatement	if ( l > 0 )		987937	22					
ANR	994843	Condition	l > 0	5980:7:167512:167516	987937	0	True				
ANR	994844	RelationalExpression	l > 0		987937	0		>			
ANR	994845	Identifier	l		987937	0					
ANR	994846	PrimaryExpression	0		987937	1					
ANR	994847	CompoundStatement		1136:14:31482:31482	987937	1					
ANR	994848	IfStatement	if ( input [ 2 ] == 'j' )		987937	0					
ANR	994849	Condition	input [ 2 ] == 'j'	5981:8:167529:167543	987937	0	True				
ANR	994850	EqualityExpression	input [ 2 ] == 'j'		987937	0		==			
ANR	994851	ArrayIndexing	input [ 2 ]		987937	0					
ANR	994852	Identifier	input		987937	0					
ANR	994853	PrimaryExpression	2		987937	1					
ANR	994854	PrimaryExpression	'j'		987937	1					
ANR	994855	CompoundStatement		1137:25:31509:31509	987937	1					
ANR	994856	ExpressionStatement	"print_json_string ( core , ( const char * ) core -> block , len , ""wide"" )"	5982:5:167561:167626	987937	0	True				
ANR	994857	CallExpression	"print_json_string ( core , ( const char * ) core -> block , len , ""wide"" )"		987937	0					
ANR	994858	Callee	print_json_string		987937	0					
ANR	994859	Identifier	print_json_string		987937	0					
ANR	994860	ArgumentList	core		987937	1					
ANR	994861	Argument	core		987937	0					
ANR	994862	Identifier	core		987937	0					
ANR	994863	Argument	( const char * ) core -> block		987937	1					
ANR	994864	CastExpression	( const char * ) core -> block		987937	0					
ANR	994865	CastTarget	const char *		987937	0					
ANR	994866	PtrMemberAccess	core -> block		987937	1					
ANR	994867	Identifier	core		987937	0					
ANR	994868	Identifier	block		987937	1					
ANR	994869	Argument	len		987937	2					
ANR	994870	Identifier	len		987937	0					
ANR	994871	Argument	"""wide"""		987937	3					
ANR	994872	PrimaryExpression	"""wide"""		987937	0					
ANR	994873	ExpressionStatement	r_cons_newline ( )	5983:5:167633:167650	987937	1	True				
ANR	994874	CallExpression	r_cons_newline ( )		987937	0					
ANR	994875	Callee	r_cons_newline		987937	0					
ANR	994876	Identifier	r_cons_newline		987937	0					
ANR	994877	ArgumentList			987937	1					
ANR	994878	ElseStatement	else		987937	0					
ANR	994879	CompoundStatement		1140:11:31626:31626	987937	0					
ANR	994880	ExpressionStatement	"r_print_string ( core -> print , core -> offset , core -> block , len , R_PRINT_STRING_WIDE | R_PRINT_STRING_ZEROEND )"	5985:5:167670:167782	987937	0	True				
ANR	994881	CallExpression	"r_print_string ( core -> print , core -> offset , core -> block , len , R_PRINT_STRING_WIDE | R_PRINT_STRING_ZEROEND )"		987937	0					
ANR	994882	Callee	r_print_string		987937	0					
ANR	994883	Identifier	r_print_string		987937	0					
ANR	994884	ArgumentList	core -> print		987937	1					
ANR	994885	Argument	core -> print		987937	0					
ANR	994886	PtrMemberAccess	core -> print		987937	0					
ANR	994887	Identifier	core		987937	0					
ANR	994888	Identifier	print		987937	1					
ANR	994889	Argument	core -> offset		987937	1					
ANR	994890	PtrMemberAccess	core -> offset		987937	0					
ANR	994891	Identifier	core		987937	0					
ANR	994892	Identifier	offset		987937	1					
ANR	994893	Argument	core -> block		987937	2					
ANR	994894	PtrMemberAccess	core -> block		987937	0					
ANR	994895	Identifier	core		987937	0					
ANR	994896	Identifier	block		987937	1					
ANR	994897	Argument	len		987937	3					
ANR	994898	Identifier	len		987937	0					
ANR	994899	Argument	R_PRINT_STRING_WIDE | R_PRINT_STRING_ZEROEND		987937	4					
ANR	994900	InclusiveOrExpression	R_PRINT_STRING_WIDE | R_PRINT_STRING_ZEROEND		987937	0		|			
ANR	994901	Identifier	R_PRINT_STRING_WIDE		987937	0					
ANR	994902	Identifier	R_PRINT_STRING_ZEROEND		987937	1					
ANR	994903	BreakStatement	break ;	5989:3:167798:167803	987937	23	True				
ANR	994904	Label	case 'W' :	5990:2:167807:167815	987937	24	True				
ANR	994905	IfStatement	if ( l > 0 )		987937	25					
ANR	994906	Condition	l > 0	5991:7:167833:167837	987937	0	True				
ANR	994907	RelationalExpression	l > 0		987937	0		>			
ANR	994908	Identifier	l		987937	0					
ANR	994909	PrimaryExpression	0		987937	1					
ANR	994910	CompoundStatement		1147:14:31803:31803	987937	1					
ANR	994911	IfStatement	if ( input [ 2 ] == 'j' )		987937	0					
ANR	994912	Condition	input [ 2 ] == 'j'	5992:8:167850:167864	987937	0	True				
ANR	994913	EqualityExpression	input [ 2 ] == 'j'		987937	0		==			
ANR	994914	ArrayIndexing	input [ 2 ]		987937	0					
ANR	994915	Identifier	input		987937	0					
ANR	994916	PrimaryExpression	2		987937	1					
ANR	994917	PrimaryExpression	'j'		987937	1					
ANR	994918	CompoundStatement		1148:25:31830:31830	987937	1					
ANR	994919	ExpressionStatement	"print_json_string ( core , ( const char * ) core -> block , len , ""wide32"" )"	5993:5:167882:167949	987937	0	True				
ANR	994920	CallExpression	"print_json_string ( core , ( const char * ) core -> block , len , ""wide32"" )"		987937	0					
ANR	994921	Callee	print_json_string		987937	0					
ANR	994922	Identifier	print_json_string		987937	0					
ANR	994923	ArgumentList	core		987937	1					
ANR	994924	Argument	core		987937	0					
ANR	994925	Identifier	core		987937	0					
ANR	994926	Argument	( const char * ) core -> block		987937	1					
ANR	994927	CastExpression	( const char * ) core -> block		987937	0					
ANR	994928	CastTarget	const char *		987937	0					
ANR	994929	PtrMemberAccess	core -> block		987937	1					
ANR	994930	Identifier	core		987937	0					
ANR	994931	Identifier	block		987937	1					
ANR	994932	Argument	len		987937	2					
ANR	994933	Identifier	len		987937	0					
ANR	994934	Argument	"""wide32"""		987937	3					
ANR	994935	PrimaryExpression	"""wide32"""		987937	0					
ANR	994936	ExpressionStatement	r_cons_newline ( )	5994:5:167956:167973	987937	1	True				
ANR	994937	CallExpression	r_cons_newline ( )		987937	0					
ANR	994938	Callee	r_cons_newline		987937	0					
ANR	994939	Identifier	r_cons_newline		987937	0					
ANR	994940	ArgumentList			987937	1					
ANR	994941	ElseStatement	else		987937	0					
ANR	994942	CompoundStatement		1151:11:31949:31949	987937	0					
ANR	994943	ExpressionStatement	"r_print_string ( core -> print , core -> offset , core -> block , len , R_PRINT_STRING_WIDE32 | R_PRINT_STRING_ZEROEND )"	5996:5:167993:168107	987937	0	True				
ANR	994944	CallExpression	"r_print_string ( core -> print , core -> offset , core -> block , len , R_PRINT_STRING_WIDE32 | R_PRINT_STRING_ZEROEND )"		987937	0					
ANR	994945	Callee	r_print_string		987937	0					
ANR	994946	Identifier	r_print_string		987937	0					
ANR	994947	ArgumentList	core -> print		987937	1					
ANR	994948	Argument	core -> print		987937	0					
ANR	994949	PtrMemberAccess	core -> print		987937	0					
ANR	994950	Identifier	core		987937	0					
ANR	994951	Identifier	print		987937	1					
ANR	994952	Argument	core -> offset		987937	1					
ANR	994953	PtrMemberAccess	core -> offset		987937	0					
ANR	994954	Identifier	core		987937	0					
ANR	994955	Identifier	offset		987937	1					
ANR	994956	Argument	core -> block		987937	2					
ANR	994957	PtrMemberAccess	core -> block		987937	0					
ANR	994958	Identifier	core		987937	0					
ANR	994959	Identifier	block		987937	1					
ANR	994960	Argument	len		987937	3					
ANR	994961	Identifier	len		987937	0					
ANR	994962	Argument	R_PRINT_STRING_WIDE32 | R_PRINT_STRING_ZEROEND		987937	4					
ANR	994963	InclusiveOrExpression	R_PRINT_STRING_WIDE32 | R_PRINT_STRING_ZEROEND		987937	0		|			
ANR	994964	Identifier	R_PRINT_STRING_WIDE32		987937	0					
ANR	994965	Identifier	R_PRINT_STRING_ZEROEND		987937	1					
ANR	994966	BreakStatement	break ;	6000:3:168123:168128	987937	26	True				
ANR	994967	Label	case ' ' :	6001:2:168132:168140	987937	27	True				
ANR	994968	ExpressionStatement	"r_print_string ( core -> print , core -> offset , core -> block , l , 0 )"	6002:3:168153:168214	987937	28	True				
ANR	994969	CallExpression	"r_print_string ( core -> print , core -> offset , core -> block , l , 0 )"		987937	0					
ANR	994970	Callee	r_print_string		987937	0					
ANR	994971	Identifier	r_print_string		987937	0					
ANR	994972	ArgumentList	core -> print		987937	1					
ANR	994973	Argument	core -> print		987937	0					
ANR	994974	PtrMemberAccess	core -> print		987937	0					
ANR	994975	Identifier	core		987937	0					
ANR	994976	Identifier	print		987937	1					
ANR	994977	Argument	core -> offset		987937	1					
ANR	994978	PtrMemberAccess	core -> offset		987937	0					
ANR	994979	Identifier	core		987937	0					
ANR	994980	Identifier	offset		987937	1					
ANR	994981	Argument	core -> block		987937	2					
ANR	994982	PtrMemberAccess	core -> block		987937	0					
ANR	994983	Identifier	core		987937	0					
ANR	994984	Identifier	block		987937	1					
ANR	994985	Argument	l		987937	3					
ANR	994986	Identifier	l		987937	0					
ANR	994987	Argument	0		987937	4					
ANR	994988	PrimaryExpression	0		987937	0					
ANR	994989	BreakStatement	break ;	6003:3:168219:168224	987937	29	True				
ANR	994990	Label	case 'u' :	6004:2:168228:168236	987937	30	True				
ANR	994991	IfStatement	if ( l > 0 )		987937	31					
ANR	994992	Condition	l > 0	6005:7:168254:168258	987937	0	True				
ANR	994993	RelationalExpression	l > 0		987937	0		>			
ANR	994994	Identifier	l		987937	0					
ANR	994995	PrimaryExpression	0		987937	1					
ANR	994996	CompoundStatement		1162:4:32230:32257	987937	1					
ANR	994997	IdentifierDeclStatement	bool json = input [ 2 ] == 'j' ;	6006:4:168267:168294	987937	0	True				
ANR	994998	IdentifierDecl	json = input [ 2 ] == 'j'		987937	0					
ANR	994999	IdentifierDeclType	bool		987937	0					
ANR	995000	Identifier	json		987937	1					
ANR	995001	AssignmentExpression	json = input [ 2 ] == 'j'		987937	2		=			
ANR	995002	Identifier	json		987937	0					
ANR	995003	EqualityExpression	input [ 2 ] == 'j'		987937	1		==			
ANR	995004	ArrayIndexing	input [ 2 ]		987937	0					
ANR	995005	Identifier	input		987937	0					
ANR	995006	PrimaryExpression	2		987937	1					
ANR	995007	PrimaryExpression	'j'		987937	1					
ANR	995008	IfStatement	if ( input [ 2 ] == 'z' )		987937	1					
ANR	995009	Condition	input [ 2 ] == 'z'	6007:8:168314:168328	987937	0	True				
ANR	995010	EqualityExpression	input [ 2 ] == 'z'		987937	0		==			
ANR	995011	ArrayIndexing	input [ 2 ]		987937	0					
ANR	995012	Identifier	input		987937	0					
ANR	995013	PrimaryExpression	2		987937	1					
ANR	995014	PrimaryExpression	'z'		987937	1					
ANR	995015	CompoundStatement		1165:5:32326:32368	987937	1					
ANR	995016	IdentifierDeclStatement	"int i , z ;"	6008:5:168348:168356	987937	0	True				
ANR	995017	IdentifierDecl	i		987937	0					
ANR	995018	IdentifierDeclType	int		987937	0					
ANR	995019	Identifier	i		987937	1					
ANR	995020	IdentifierDecl	z		987937	1					
ANR	995021	IdentifierDeclType	int		987937	0					
ANR	995022	Identifier	z		987937	1					
ANR	995023	IdentifierDeclStatement	const char * p = ( const char * ) core -> block ;	6009:5:168363:168405	987937	1	True				
ANR	995024	IdentifierDecl	* p = ( const char * ) core -> block		987937	0					
ANR	995025	IdentifierDeclType	const char *		987937	0					
ANR	995026	Identifier	p		987937	1					
ANR	995027	AssignmentExpression	* p = ( const char * ) core -> block		987937	2		=			
ANR	995028	Identifier	p		987937	0					
ANR	995029	CastExpression	( const char * ) core -> block		987937	1					
ANR	995030	CastTarget	const char *		987937	0					
ANR	995031	PtrMemberAccess	core -> block		987937	1					
ANR	995032	Identifier	core		987937	0					
ANR	995033	Identifier	block		987937	1					
ANR	995034	ForStatement	"for ( i = 0 , z = 0 ; i < len ; i ++ )"		987937	2					
ANR	995035	ForInit	"i = 0 , z = 0 ;"	6010:10:168417:168429	987937	0	True				
ANR	995036	Expression	"i = 0 , z = 0"		987937	0					
ANR	995037	AssignmentExpression	i = 0		987937	0		=			
ANR	995038	Identifier	i		987937	0					
ANR	995039	PrimaryExpression	0		987937	1					
ANR	995040	AssignmentExpression	z = 0		987937	1		=			
ANR	995041	Identifier	z		987937	0					
ANR	995042	PrimaryExpression	0		987937	1					
ANR	995043	Condition	i < len	6010:24:168431:168437	987937	1	True				
ANR	995044	RelationalExpression	i < len		987937	0		<			
ANR	995045	Identifier	i		987937	0					
ANR	995046	Identifier	len		987937	1					
ANR	995047	PostIncDecOperationExpression	i ++	6010:33:168440:168442	987937	2	True				
ANR	995048	Identifier	i		987937	0					
ANR	995049	IncDec	++		987937	1					
ANR	995050	CompoundStatement		1166:38:32408:32408	987937	3					
ANR	995051	IfStatement	if ( ! p [ i ] && ! z )		987937	0					
ANR	995052	Condition	! p [ i ] && ! z	6012:10:168499:168509	987937	0	True				
ANR	995053	AndExpression	! p [ i ] && ! z		987937	0		&&			
ANR	995054	UnaryOperationExpression	! p [ i ]		987937	0					
ANR	995055	UnaryOperator	!		987937	0					
ANR	995056	ArrayIndexing	p [ i ]		987937	1					
ANR	995057	Identifier	p		987937	0					
ANR	995058	Identifier	i		987937	1					
ANR	995059	UnaryOperationExpression	! z		987937	1					
ANR	995060	UnaryOperator	!		987937	0					
ANR	995061	Identifier	z		987937	1					
ANR	995062	ExpressionStatement	z = 1	6012:23:168512:168517	987937	1	True				
ANR	995063	AssignmentExpression	z = 1		987937	0		=			
ANR	995064	Identifier	z		987937	0					
ANR	995065	PrimaryExpression	1		987937	1					
ANR	995066	ElseStatement	else		987937	0					
ANR	995067	IfStatement	if ( ! p [ i ] && z )		987937	0					
ANR	995068	Condition	! p [ i ] && z	6013:15:168534:168543	987937	0	True				
ANR	995069	AndExpression	! p [ i ] && z		987937	0		&&			
ANR	995070	UnaryOperationExpression	! p [ i ]		987937	0					
ANR	995071	UnaryOperator	!		987937	0					
ANR	995072	ArrayIndexing	p [ i ]		987937	1					
ANR	995073	Identifier	p		987937	0					
ANR	995074	Identifier	i		987937	1					
ANR	995075	Identifier	z		987937	1					
ANR	995076	CompoundStatement		1169:27:32509:32509	987937	1					
ANR	995077	ExpressionStatement	len = i - 1	6014:7:168555:168566	987937	0	True				
ANR	995078	AssignmentExpression	len = i - 1		987937	0		=			
ANR	995079	Identifier	len		987937	0					
ANR	995080	AdditiveExpression	i - 1		987937	1		-			
ANR	995081	Identifier	i		987937	0					
ANR	995082	PrimaryExpression	1		987937	1					
ANR	995083	BreakStatement	break ;	6015:7:168575:168580	987937	1	True				
ANR	995084	ExpressionStatement	json = input [ 3 ] == 'j'	6018:5:168602:168624	987937	3	True				
ANR	995085	AssignmentExpression	json = input [ 3 ] == 'j'		987937	0		=			
ANR	995086	Identifier	json		987937	0					
ANR	995087	EqualityExpression	input [ 3 ] == 'j'		987937	1		==			
ANR	995088	ArrayIndexing	input [ 3 ]		987937	0					
ANR	995089	Identifier	input		987937	0					
ANR	995090	PrimaryExpression	3		987937	1					
ANR	995091	PrimaryExpression	'j'		987937	1					
ANR	995092	IfStatement	if ( json )		987937	2					
ANR	995093	Condition	json	6020:8:168651:168654	987937	0	True				
ANR	995094	Identifier	json		987937	0					
ANR	995095	CompoundStatement		1176:14:32620:32620	987937	1					
ANR	995096	ExpressionStatement	"print_json_string ( core , ( const char * ) core -> block , len , ""utf16"" )"	6021:5:168672:168738	987937	0	True				
ANR	995097	CallExpression	"print_json_string ( core , ( const char * ) core -> block , len , ""utf16"" )"		987937	0					
ANR	995098	Callee	print_json_string		987937	0					
ANR	995099	Identifier	print_json_string		987937	0					
ANR	995100	ArgumentList	core		987937	1					
ANR	995101	Argument	core		987937	0					
ANR	995102	Identifier	core		987937	0					
ANR	995103	Argument	( const char * ) core -> block		987937	1					
ANR	995104	CastExpression	( const char * ) core -> block		987937	0					
ANR	995105	CastTarget	const char *		987937	0					
ANR	995106	PtrMemberAccess	core -> block		987937	1					
ANR	995107	Identifier	core		987937	0					
ANR	995108	Identifier	block		987937	1					
ANR	995109	Argument	len		987937	2					
ANR	995110	Identifier	len		987937	0					
ANR	995111	Argument	"""utf16"""		987937	3					
ANR	995112	PrimaryExpression	"""utf16"""		987937	0					
ANR	995113	ExpressionStatement	r_cons_newline ( )	6022:5:168745:168762	987937	1	True				
ANR	995114	CallExpression	r_cons_newline ( )		987937	0					
ANR	995115	Callee	r_cons_newline		987937	0					
ANR	995116	Identifier	r_cons_newline		987937	0					
ANR	995117	ArgumentList			987937	1					
ANR	995118	ElseStatement	else		987937	0					
ANR	995119	CompoundStatement		1180:5:32745:32809	987937	0					
ANR	995120	IdentifierDeclStatement	"char * str = r_str_utf16_encode ( ( const char * ) core -> block , len ) ;"	6024:5:168782:168846	987937	0	True				
ANR	995121	IdentifierDecl	"* str = r_str_utf16_encode ( ( const char * ) core -> block , len )"		987937	0					
ANR	995122	IdentifierDeclType	char *		987937	0					
ANR	995123	Identifier	str		987937	1					
ANR	995124	AssignmentExpression	"* str = r_str_utf16_encode ( ( const char * ) core -> block , len )"		987937	2		=			
ANR	995125	Identifier	str		987937	0					
ANR	995126	CallExpression	"r_str_utf16_encode ( ( const char * ) core -> block , len )"		987937	1					
ANR	995127	Callee	r_str_utf16_encode		987937	0					
ANR	995128	Identifier	r_str_utf16_encode		987937	0					
ANR	995129	ArgumentList	( const char * ) core -> block		987937	1					
ANR	995130	Argument	( const char * ) core -> block		987937	0					
ANR	995131	CastExpression	( const char * ) core -> block		987937	0					
ANR	995132	CastTarget	const char *		987937	0					
ANR	995133	PtrMemberAccess	core -> block		987937	1					
ANR	995134	Identifier	core		987937	0					
ANR	995135	Identifier	block		987937	1					
ANR	995136	Argument	len		987937	1					
ANR	995137	Identifier	len		987937	0					
ANR	995138	ExpressionStatement	r_cons_println ( str )	6025:5:168853:168873	987937	1	True				
ANR	995139	CallExpression	r_cons_println ( str )		987937	0					
ANR	995140	Callee	r_cons_println		987937	0					
ANR	995141	Identifier	r_cons_println		987937	0					
ANR	995142	ArgumentList	str		987937	1					
ANR	995143	Argument	str		987937	0					
ANR	995144	Identifier	str		987937	0					
ANR	995145	ExpressionStatement	free ( str )	6026:5:168880:168890	987937	2	True				
ANR	995146	CallExpression	free ( str )		987937	0					
ANR	995147	Callee	free		987937	0					
ANR	995148	Identifier	free		987937	0					
ANR	995149	ArgumentList	str		987937	1					
ANR	995150	Argument	str		987937	0					
ANR	995151	Identifier	str		987937	0					
ANR	995152	BreakStatement	break ;	6029:3:168906:168911	987937	32	True				
ANR	995153	Label	case 'q' :	6030:2:168915:168923	987937	33	True				
ANR	995154	ExpressionStatement	"r_core_cmd0 ( core , ""pqs"" )"	6031:3:168937:168962	987937	34	True				
ANR	995155	CallExpression	"r_core_cmd0 ( core , ""pqs"" )"		987937	0					
ANR	995156	Callee	r_core_cmd0		987937	0					
ANR	995157	Identifier	r_core_cmd0		987937	0					
ANR	995158	ArgumentList	core		987937	1					
ANR	995159	Argument	core		987937	0					
ANR	995160	Identifier	core		987937	0					
ANR	995161	Argument	"""pqs"""		987937	1					
ANR	995162	PrimaryExpression	"""pqs"""		987937	0					
ANR	995163	BreakStatement	break ;	6032:3:168967:168972	987937	35	True				
ANR	995164	Label	case 's' :	6033:2:168976:168984	987937	36	True				
ANR	995165	IfStatement	if ( l > 0 )		987937	37					
ANR	995166	Condition	l > 0	6034:7:169002:169006	987937	0	True				
ANR	995167	RelationalExpression	l > 0		987937	0		>			
ANR	995168	Identifier	l		987937	0					
ANR	995169	PrimaryExpression	0		987937	1					
ANR	995170	CompoundStatement		1194:4:33142:33166	987937	1					
ANR	995171	IdentifierDeclStatement	"int h , w = r_cons_get_size ( & h ) ;"	6035:4:169015:169046	987937	0	True				
ANR	995172	IdentifierDecl	h		987937	0					
ANR	995173	IdentifierDeclType	int		987937	0					
ANR	995174	Identifier	h		987937	1					
ANR	995175	IdentifierDecl	w = r_cons_get_size ( & h )		987937	1					
ANR	995176	IdentifierDeclType	int		987937	0					
ANR	995177	Identifier	w		987937	1					
ANR	995178	AssignmentExpression	w = r_cons_get_size ( & h )		987937	2		=			
ANR	995179	Identifier	w		987937	0					
ANR	995180	CallExpression	r_cons_get_size ( & h )		987937	1					
ANR	995181	Callee	r_cons_get_size		987937	0					
ANR	995182	Identifier	r_cons_get_size		987937	0					
ANR	995183	ArgumentList	& h		987937	1					
ANR	995184	Argument	& h		987937	0					
ANR	995185	UnaryOperationExpression	& h		987937	0					
ANR	995186	UnaryOperator	&		987937	0					
ANR	995187	Identifier	h		987937	1					
ANR	995188	IdentifierDeclStatement	"int colwidth = r_config_get_i ( core -> config , ""hex.cols"" ) * 2 ;"	6036:4:169052:169112	987937	1	True				
ANR	995189	IdentifierDecl	"colwidth = r_config_get_i ( core -> config , ""hex.cols"" ) * 2"		987937	0					
ANR	995190	IdentifierDeclType	int		987937	0					
ANR	995191	Identifier	colwidth		987937	1					
ANR	995192	AssignmentExpression	"colwidth = r_config_get_i ( core -> config , ""hex.cols"" ) * 2"		987937	2		=			
ANR	995193	Identifier	colwidth		987937	0					
ANR	995194	MultiplicativeExpression	"r_config_get_i ( core -> config , ""hex.cols"" ) * 2"		987937	1		*			
ANR	995195	CallExpression	"r_config_get_i ( core -> config , ""hex.cols"" )"		987937	0					
ANR	995196	Callee	r_config_get_i		987937	0					
ANR	995197	Identifier	r_config_get_i		987937	0					
ANR	995198	ArgumentList	core -> config		987937	1					
ANR	995199	Argument	core -> config		987937	0					
ANR	995200	PtrMemberAccess	core -> config		987937	0					
ANR	995201	Identifier	core		987937	0					
ANR	995202	Identifier	config		987937	1					
ANR	995203	Argument	"""hex.cols"""		987937	1					
ANR	995204	PrimaryExpression	"""hex.cols"""		987937	0					
ANR	995205	PrimaryExpression	2		987937	1					
ANR	995206	ExpressionStatement	core -> print -> width = ( colwidth == 32 ) ? w : colwidth	6037:4:169118:169167	987937	2	True				
ANR	995207	AssignmentExpression	core -> print -> width = ( colwidth == 32 ) ? w : colwidth		987937	0		=			
ANR	995208	PtrMemberAccess	core -> print -> width		987937	0					
ANR	995209	PtrMemberAccess	core -> print		987937	0					
ANR	995210	Identifier	core		987937	0					
ANR	995211	Identifier	print		987937	1					
ANR	995212	Identifier	width		987937	1					
ANR	995213	ConditionalExpression	( colwidth == 32 ) ? w : colwidth		987937	1					
ANR	995214	Condition	colwidth == 32		987937	0					
ANR	995215	EqualityExpression	colwidth == 32		987937	0		==			
ANR	995216	Identifier	colwidth		987937	0					
ANR	995217	PrimaryExpression	32		987937	1					
ANR	995218	Identifier	w		987937	1					
ANR	995219	Identifier	colwidth		987937	2					
ANR	995220	IdentifierDeclStatement	int bs = core -> blocksize ;	6038:4:169179:169203	987937	3	True				
ANR	995221	IdentifierDecl	bs = core -> blocksize		987937	0					
ANR	995222	IdentifierDeclType	int		987937	0					
ANR	995223	Identifier	bs		987937	1					
ANR	995224	AssignmentExpression	bs = core -> blocksize		987937	2		=			
ANR	995225	Identifier	bs		987937	0					
ANR	995226	PtrMemberAccess	core -> blocksize		987937	1					
ANR	995227	Identifier	core		987937	0					
ANR	995228	Identifier	blocksize		987937	1					
ANR	995229	IfStatement	if ( len == bs )		987937	4					
ANR	995230	Condition	len == bs	6039:8:169213:169221	987937	0	True				
ANR	995231	EqualityExpression	len == bs		987937	0		==			
ANR	995232	Identifier	len		987937	0					
ANR	995233	Identifier	bs		987937	1					
ANR	995234	CompoundStatement		1195:19:33187:33187	987937	1					
ANR	995235	ExpressionStatement	len = ( h * w ) / 3	6040:5:169231:169248	987937	0	True				
ANR	995236	AssignmentExpression	len = ( h * w ) / 3		987937	0		=			
ANR	995237	Identifier	len		987937	0					
ANR	995238	MultiplicativeExpression	( h * w ) / 3		987937	1		/			
ANR	995239	MultiplicativeExpression	h * w		987937	0		*			
ANR	995240	Identifier	h		987937	0					
ANR	995241	Identifier	w		987937	1					
ANR	995242	PrimaryExpression	3		987937	1					
ANR	995243	ExpressionStatement	"r_core_block_size ( core , len )"	6041:5:169255:169284	987937	1	True				
ANR	995244	CallExpression	"r_core_block_size ( core , len )"		987937	0					
ANR	995245	Callee	r_core_block_size		987937	0					
ANR	995246	Identifier	r_core_block_size		987937	0					
ANR	995247	ArgumentList	core		987937	1					
ANR	995248	Argument	core		987937	0					
ANR	995249	Identifier	core		987937	0					
ANR	995250	Argument	len		987937	1					
ANR	995251	Identifier	len		987937	0					
ANR	995252	ExpressionStatement	"r_print_string ( core -> print , core -> offset , core -> block , len , R_PRINT_STRING_WRAP )"	6043:4:169296:169383	987937	5	True				
ANR	995253	CallExpression	"r_print_string ( core -> print , core -> offset , core -> block , len , R_PRINT_STRING_WRAP )"		987937	0					
ANR	995254	Callee	r_print_string		987937	0					
ANR	995255	Identifier	r_print_string		987937	0					
ANR	995256	ArgumentList	core -> print		987937	1					
ANR	995257	Argument	core -> print		987937	0					
ANR	995258	PtrMemberAccess	core -> print		987937	0					
ANR	995259	Identifier	core		987937	0					
ANR	995260	Identifier	print		987937	1					
ANR	995261	Argument	core -> offset		987937	1					
ANR	995262	PtrMemberAccess	core -> offset		987937	0					
ANR	995263	Identifier	core		987937	0					
ANR	995264	Identifier	offset		987937	1					
ANR	995265	Argument	core -> block		987937	2					
ANR	995266	PtrMemberAccess	core -> block		987937	0					
ANR	995267	Identifier	core		987937	0					
ANR	995268	Identifier	block		987937	1					
ANR	995269	Argument	len		987937	3					
ANR	995270	Identifier	len		987937	0					
ANR	995271	Argument	R_PRINT_STRING_WRAP		987937	4					
ANR	995272	Identifier	R_PRINT_STRING_WRAP		987937	0					
ANR	995273	ExpressionStatement	"r_core_block_size ( core , bs )"	6045:4:169389:169417	987937	6	True				
ANR	995274	CallExpression	"r_core_block_size ( core , bs )"		987937	0					
ANR	995275	Callee	r_core_block_size		987937	0					
ANR	995276	Identifier	r_core_block_size		987937	0					
ANR	995277	ArgumentList	core		987937	1					
ANR	995278	Argument	core		987937	0					
ANR	995279	Identifier	core		987937	0					
ANR	995280	Argument	bs		987937	1					
ANR	995281	Identifier	bs		987937	0					
ANR	995282	BreakStatement	break ;	6047:3:169427:169432	987937	38	True				
ANR	995283	Label	case '+' :	6048:2:169436:169444	987937	39	True				
ANR	995284	IfStatement	if ( l > 0 )		987937	40					
ANR	995285	Condition	l > 0	6049:7:169462:169466	987937	0	True				
ANR	995286	RelationalExpression	l > 0		987937	0		>			
ANR	995287	Identifier	l		987937	0					
ANR	995288	PrimaryExpression	0		987937	1					
ANR	995289	CompoundStatement		1207:4:33479:33535	987937	1					
ANR	995290	IdentifierDeclStatement	bool json = input [ 2 ] == 'j' ;	6050:4:169475:169502	987937	0	True				
ANR	995291	IdentifierDecl	json = input [ 2 ] == 'j'		987937	0					
ANR	995292	IdentifierDeclType	bool		987937	0					
ANR	995293	Identifier	json		987937	1					
ANR	995294	AssignmentExpression	json = input [ 2 ] == 'j'		987937	2		=			
ANR	995295	Identifier	json		987937	0					
ANR	995296	EqualityExpression	input [ 2 ] == 'j'		987937	1		==			
ANR	995297	ArrayIndexing	input [ 2 ]		987937	0					
ANR	995298	Identifier	input		987937	0					
ANR	995299	PrimaryExpression	2		987937	1					
ANR	995300	PrimaryExpression	'j'		987937	1					
ANR	995301	IdentifierDeclStatement	"ut64 bitness = r_config_get_i ( core -> config , ""asm.bits"" ) ;"	6051:4:169516:169572	987937	1	True				
ANR	995302	IdentifierDecl	"bitness = r_config_get_i ( core -> config , ""asm.bits"" )"		987937	0					
ANR	995303	IdentifierDeclType	ut64		987937	0					
ANR	995304	Identifier	bitness		987937	1					
ANR	995305	AssignmentExpression	"bitness = r_config_get_i ( core -> config , ""asm.bits"" )"		987937	2		=			
ANR	995306	Identifier	bitness		987937	0					
ANR	995307	CallExpression	"r_config_get_i ( core -> config , ""asm.bits"" )"		987937	1					
ANR	995308	Callee	r_config_get_i		987937	0					
ANR	995309	Identifier	r_config_get_i		987937	0					
ANR	995310	ArgumentList	core -> config		987937	1					
ANR	995311	Argument	core -> config		987937	0					
ANR	995312	PtrMemberAccess	core -> config		987937	0					
ANR	995313	Identifier	core		987937	0					
ANR	995314	Identifier	config		987937	1					
ANR	995315	Argument	"""asm.bits"""		987937	1					
ANR	995316	PrimaryExpression	"""asm.bits"""		987937	0					
ANR	995317	IfStatement	if ( bitness != 32 && bitness != 64 )		987937	2					
ANR	995318	Condition	bitness != 32 && bitness != 64	6052:8:169582:169611	987937	0	True				
ANR	995319	AndExpression	bitness != 32 && bitness != 64		987937	0		&&			
ANR	995320	EqualityExpression	bitness != 32		987937	0		!=			
ANR	995321	Identifier	bitness		987937	0					
ANR	995322	PrimaryExpression	32		987937	1					
ANR	995323	EqualityExpression	bitness != 64		987937	1		!=			
ANR	995324	Identifier	bitness		987937	0					
ANR	995325	PrimaryExpression	64		987937	1					
ANR	995326	CompoundStatement		1208:40:33577:33577	987937	1					
ANR	995327	Statement	eprintf	6053:5:169621:169627	987937	0	True				
ANR	995328	Statement	(	6053:13:169629:169629	987937	1	True				
ANR	995329	Statement	"""Error: bitness of %"""	6053:14:169630:169650	987937	2	True				
ANR	995330	Statement	PFMT64u	6053:36:169652:169658	987937	3	True				
ANR	995331	Statement	""" not supported\\n"""	6053:44:169660:169677	987937	4	True				
ANR	995332	Statement	","	6053:62:169678:169678	987937	5	True				
ANR	995333	Statement	bitness	6053:64:169680:169686	987937	6	True				
ANR	995334	Statement	)	6053:71:169687:169687	987937	7	True				
ANR	995335	ExpressionStatement		6053:72:169688:169688	987937	8	True				
ANR	995336	BreakStatement	break ;	6054:5:169695:169700	987937	9	True				
ANR	995337	IfStatement	if ( * core -> block & 0x1 )		987937	3					
ANR	995338	Condition	* core -> block & 0x1	6056:8:169716:169733	987937	0	True				
ANR	995339	BitAndExpression	* core -> block & 0x1		987937	0		&			
ANR	995340	UnaryOperationExpression	* core -> block		987937	0					
ANR	995341	UnaryOperator	*		987937	0					
ANR	995342	PtrMemberAccess	core -> block		987937	1					
ANR	995343	Identifier	core		987937	0					
ANR	995344	Identifier	block		987937	1					
ANR	995345	PrimaryExpression	0x1		987937	1					
ANR	995346	CompoundStatement		1212:28:33699:33699	987937	1					
ANR	995347	IfStatement	if ( bitness == 64 )		987937	0					
ANR	995348	Condition	bitness == 64	6057:9:169764:169776	987937	0	True				
ANR	995349	EqualityExpression	bitness == 64		987937	0		==			
ANR	995350	Identifier	bitness		987937	0					
ANR	995351	PrimaryExpression	64		987937	1					
ANR	995352	CompoundStatement		1213:24:33742:33742	987937	1					
ANR	995353	Statement	r_core_cmdf	6058:6:169787:169797	987937	0	True				
ANR	995354	Statement	(	6058:18:169799:169799	987937	1	True				
ANR	995355	Statement	core	6058:19:169800:169803	987937	2	True				
ANR	995356	Statement	","	6058:23:169804:169804	987937	3	True				
ANR	995357	Statement	"""ps%c @ 0x%"""	6058:25:169806:169817	987937	4	True				
ANR	995358	Statement	PFMT64x	6058:38:169819:169825	987937	5	True				
ANR	995359	Statement	","	6058:45:169826:169826	987937	6	True				
ANR	995360	Statement	json	6058:47:169828:169831	987937	7	True				
ANR	995361	Statement	?	6058:52:169833:169833	987937	8	True				
ANR	995362	Label	'j' :	6058:54:169835:169839	987937	9	True				
ANR	995363	Statement	' '	6058:60:169841:169843	987937	10	True				
ANR	995364	Statement	","	6058:63:169844:169844	987937	11	True				
ANR	995365	Statement	*	6058:65:169846:169846	987937	12	True				
ANR	995366	Statement	(	6058:66:169847:169847	987937	13	True				
ANR	995367	Statement	(	6058:67:169848:169848	987937	14	True				
ANR	995368	Statement	ut64	6058:68:169849:169852	987937	15	True				
ANR	995369	Statement	*	6058:73:169854:169854	987937	16	True				
ANR	995370	Statement	)	6058:74:169855:169855	987937	17	True				
ANR	995371	Statement	core	6058:75:169856:169859	987937	18	True				
ANR	995372	Statement	->	6058:79:169860:169861	987937	19	True				
ANR	995373	Statement	block	6058:81:169862:169866	987937	20	True				
ANR	995374	Statement	+	6058:87:169868:169868	987937	21	True				
ANR	995375	Statement	2	6058:89:169870:169870	987937	22	True				
ANR	995376	Statement	)	6058:90:169871:169871	987937	23	True				
ANR	995377	Statement	)	6058:91:169872:169872	987937	24	True				
ANR	995378	ExpressionStatement		6058:92:169873:169873	987937	25	True				
ANR	995379	ElseStatement	else		987937	0					
ANR	995380	CompoundStatement		1215:12:33850:33850	987937	0					
ANR	995381	Statement	r_core_cmdf	6060:6:169895:169905	987937	0	True				
ANR	995382	Statement	(	6060:18:169907:169907	987937	1	True				
ANR	995383	Statement	core	6060:19:169908:169911	987937	2	True				
ANR	995384	Statement	","	6060:23:169912:169912	987937	3	True				
ANR	995385	Statement	"""ps%c @ 0x%"""	6060:25:169914:169925	987937	4	True				
ANR	995386	Statement	PFMT32x	6060:38:169927:169933	987937	5	True				
ANR	995387	Statement	","	6060:45:169934:169934	987937	6	True				
ANR	995388	Statement	json	6060:47:169936:169939	987937	7	True				
ANR	995389	Statement	?	6060:52:169941:169941	987937	8	True				
ANR	995390	Label	'j' :	6060:54:169943:169947	987937	9	True				
ANR	995391	Statement	' '	6060:60:169949:169951	987937	10	True				
ANR	995392	Statement	","	6060:63:169952:169952	987937	11	True				
ANR	995393	Statement	*	6060:65:169954:169954	987937	12	True				
ANR	995394	Statement	(	6060:66:169955:169955	987937	13	True				
ANR	995395	Statement	(	6060:67:169956:169956	987937	14	True				
ANR	995396	Statement	ut32	6060:68:169957:169960	987937	15	True				
ANR	995397	Statement	*	6060:73:169962:169962	987937	16	True				
ANR	995398	Statement	)	6060:74:169963:169963	987937	17	True				
ANR	995399	Statement	core	6060:75:169964:169967	987937	18	True				
ANR	995400	Statement	->	6060:79:169968:169969	987937	19	True				
ANR	995401	Statement	block	6060:81:169970:169974	987937	20	True				
ANR	995402	Statement	+	6060:87:169976:169976	987937	21	True				
ANR	995403	Statement	2	6060:89:169978:169978	987937	22	True				
ANR	995404	Statement	)	6060:90:169979:169979	987937	23	True				
ANR	995405	Statement	)	6060:91:169980:169980	987937	24	True				
ANR	995406	ExpressionStatement		6060:92:169981:169981	987937	25	True				
ANR	995407	ElseStatement	else		987937	0					
ANR	995408	IfStatement	if ( json )		987937	0					
ANR	995409	Condition	json	6062:15:170005:170008	987937	0	True				
ANR	995410	Identifier	json		987937	0					
ANR	995411	CompoundStatement		1218:21:33974:33974	987937	1					
ANR	995412	ExpressionStatement	"print_json_string ( core , ( const char * ) core -> block + 1 , len , NULL )"	6063:5:170018:170085	987937	0	True				
ANR	995413	CallExpression	"print_json_string ( core , ( const char * ) core -> block + 1 , len , NULL )"		987937	0					
ANR	995414	Callee	print_json_string		987937	0					
ANR	995415	Identifier	print_json_string		987937	0					
ANR	995416	ArgumentList	core		987937	1					
ANR	995417	Argument	core		987937	0					
ANR	995418	Identifier	core		987937	0					
ANR	995419	Argument	( const char * ) core -> block + 1		987937	1					
ANR	995420	AdditiveExpression	( const char * ) core -> block + 1		987937	0		+			
ANR	995421	CastExpression	( const char * ) core -> block		987937	0					
ANR	995422	CastTarget	const char *		987937	0					
ANR	995423	PtrMemberAccess	core -> block		987937	1					
ANR	995424	Identifier	core		987937	0					
ANR	995425	Identifier	block		987937	1					
ANR	995426	PrimaryExpression	1		987937	1					
ANR	995427	Argument	len		987937	2					
ANR	995428	Identifier	len		987937	0					
ANR	995429	Argument	NULL		987937	3					
ANR	995430	Identifier	NULL		987937	0					
ANR	995431	ExpressionStatement	r_cons_newline ( )	6064:5:170092:170109	987937	1	True				
ANR	995432	CallExpression	r_cons_newline ( )		987937	0					
ANR	995433	Callee	r_cons_newline		987937	0					
ANR	995434	Identifier	r_cons_newline		987937	0					
ANR	995435	ArgumentList			987937	1					
ANR	995436	ElseStatement	else		987937	0					
ANR	995437	CompoundStatement		1221:11:34085:34085	987937	0					
ANR	995438	ExpressionStatement	"r_print_string ( core -> print , core -> offset , core -> block + 1 , len , R_PRINT_STRING_ZEROEND )"	6066:5:170129:170238	987937	0	True				
ANR	995439	CallExpression	"r_print_string ( core -> print , core -> offset , core -> block + 1 , len , R_PRINT_STRING_ZEROEND )"		987937	0					
ANR	995440	Callee	r_print_string		987937	0					
ANR	995441	Identifier	r_print_string		987937	0					
ANR	995442	ArgumentList	core -> print		987937	1					
ANR	995443	Argument	core -> print		987937	0					
ANR	995444	PtrMemberAccess	core -> print		987937	0					
ANR	995445	Identifier	core		987937	0					
ANR	995446	Identifier	print		987937	1					
ANR	995447	Argument	core -> offset		987937	1					
ANR	995448	PtrMemberAccess	core -> offset		987937	0					
ANR	995449	Identifier	core		987937	0					
ANR	995450	Identifier	offset		987937	1					
ANR	995451	Argument	core -> block + 1		987937	2					
ANR	995452	AdditiveExpression	core -> block + 1		987937	0		+			
ANR	995453	PtrMemberAccess	core -> block		987937	0					
ANR	995454	Identifier	core		987937	0					
ANR	995455	Identifier	block		987937	1					
ANR	995456	PrimaryExpression	1		987937	1					
ANR	995457	Argument	len		987937	3					
ANR	995458	Identifier	len		987937	0					
ANR	995459	Argument	R_PRINT_STRING_ZEROEND		987937	4					
ANR	995460	Identifier	R_PRINT_STRING_ZEROEND		987937	0					
ANR	995461	BreakStatement	break ;	6070:3:170254:170259	987937	41	True				
ANR	995462	Label	default :	6071:2:170263:170270	987937	42	True				
ANR	995463	Identifier	default		987937	0					
ANR	995464	IfStatement	if ( l > 0 )		987937	43					
ANR	995465	Condition	l > 0	6072:7:170279:170283	987937	0	True				
ANR	995466	RelationalExpression	l > 0		987937	0		>			
ANR	995467	Identifier	l		987937	0					
ANR	995468	PrimaryExpression	0		987937	1					
ANR	995469	CompoundStatement		1228:14:34249:34249	987937	1					
ANR	995470	ExpressionStatement	"r_print_string ( core -> print , core -> offset , core -> block , len , R_PRINT_STRING_ZEROEND )"	6073:4:170292:170381	987937	0	True				
ANR	995471	CallExpression	"r_print_string ( core -> print , core -> offset , core -> block , len , R_PRINT_STRING_ZEROEND )"		987937	0					
ANR	995472	Callee	r_print_string		987937	0					
ANR	995473	Identifier	r_print_string		987937	0					
ANR	995474	ArgumentList	core -> print		987937	1					
ANR	995475	Argument	core -> print		987937	0					
ANR	995476	PtrMemberAccess	core -> print		987937	0					
ANR	995477	Identifier	core		987937	0					
ANR	995478	Identifier	print		987937	1					
ANR	995479	Argument	core -> offset		987937	1					
ANR	995480	PtrMemberAccess	core -> offset		987937	0					
ANR	995481	Identifier	core		987937	0					
ANR	995482	Identifier	offset		987937	1					
ANR	995483	Argument	core -> block		987937	2					
ANR	995484	PtrMemberAccess	core -> block		987937	0					
ANR	995485	Identifier	core		987937	0					
ANR	995486	Identifier	block		987937	1					
ANR	995487	Argument	len		987937	3					
ANR	995488	Identifier	len		987937	0					
ANR	995489	Argument	R_PRINT_STRING_ZEROEND		987937	4					
ANR	995490	Identifier	R_PRINT_STRING_ZEROEND		987937	0					
ANR	995491	BreakStatement	break ;	6076:3:170391:170396	987937	44	True				
ANR	995492	BreakStatement	break ;	6078:2:170404:170409	987937	47	True				
ANR	995493	Label	case 'm' :	6079:1:170412:170420	987937	48	True				
ANR	995494	IfStatement	if ( input [ 1 ] == '?' )		987937	49					
ANR	995495	Condition	input [ 1 ] == '?'	6080:6:170436:170450	987937	0	True				
ANR	995496	EqualityExpression	input [ 1 ] == '?'		987937	0		==			
ANR	995497	ArrayIndexing	input [ 1 ]		987937	0					
ANR	995498	Identifier	input		987937	0					
ANR	995499	PrimaryExpression	1		987937	1					
ANR	995500	PrimaryExpression	'?'		987937	1					
ANR	995501	CompoundStatement		1236:23:34416:34416	987937	1					
ANR	995502	Statement	r_cons_printf	6081:3:170458:170470	987937	0	True				
ANR	995503	Statement	(	6081:17:170472:170472	987937	1	True				
ANR	995504	Statement	"""|Usage: pm [file|directory]\\n"""	6081:18:170473:170503	987937	2	True				
ANR	995505	Statement	"""| r_magic will use given file/dir as reference\\n"""	6082:4:170509:170558	987937	3	True				
ANR	995506	Statement	"""| output of those magic can contain expressions like:\\n"""	6083:4:170564:170620	987937	4	True				
ANR	995507	Statement	"""|   foo@0x40   # use 'foo' magic file on address 0x40\\n"""	6084:4:170626:170682	987937	5	True				
ANR	995508	Statement	"""|   @0x40      # use current magic file on address 0x40\\n"""	6085:4:170688:170746	987937	6	True				
ANR	995509	Statement	"""|   \\\\n         # append newline\\n"""	6086:4:170752:170787	987937	7	True				
ANR	995510	Statement	"""| e dir.magic  # defaults to """	6087:4:170793:170823	987937	8	True				
ANR	995511	Statement	R_JOIN_2_PATHS	6087:36:170825:170838	987937	9	True				
ANR	995512	Statement	(	6087:51:170840:170840	987937	10	True				
ANR	995513	Statement	"""{R2_PREFIX}"""	6087:52:170841:170853	987937	11	True				
ANR	995514	Statement	","	6087:65:170854:170854	987937	12	True				
ANR	995515	Statement	R2_SDB_MAGIC	6087:67:170856:170867	987937	13	True				
ANR	995516	Statement	)	6087:79:170868:170868	987937	14	True				
ANR	995517	Statement	"""\\n"""	6087:81:170870:170873	987937	15	True				
ANR	995518	Statement	"""| /m           # search for magic signatures\\n"""	6088:4:170879:170926	987937	16	True				
ANR	995519	Statement	)	6089:4:170932:170932	987937	17	True				
ANR	995520	ExpressionStatement		6089:5:170933:170933	987937	18	True				
ANR	995521	ElseStatement	else		987937	0					
ANR	995522	CompoundStatement		1246:9:34907:34907	987937	0					
ANR	995523	IfStatement	if ( l > 0 )		987937	0					
ANR	995524	Condition	l > 0	6092:7:171003:171007	987937	0	True				
ANR	995525	RelationalExpression	l > 0		987937	0		>			
ANR	995526	Identifier	l		987937	0					
ANR	995527	PrimaryExpression	0		987937	1					
ANR	995528	CompoundStatement		1248:14:34973:34973	987937	1					
ANR	995529	ExpressionStatement	"r_core_magic ( core , input + 1 , true )"	6093:4:171016:171052	987937	0	True				
ANR	995530	CallExpression	"r_core_magic ( core , input + 1 , true )"		987937	0					
ANR	995531	Callee	r_core_magic		987937	0					
ANR	995532	Identifier	r_core_magic		987937	0					
ANR	995533	ArgumentList	core		987937	1					
ANR	995534	Argument	core		987937	0					
ANR	995535	Identifier	core		987937	0					
ANR	995536	Argument	input + 1		987937	1					
ANR	995537	AdditiveExpression	input + 1		987937	0		+			
ANR	995538	Identifier	input		987937	0					
ANR	995539	PrimaryExpression	1		987937	1					
ANR	995540	Argument	true		987937	2					
ANR	995541	Identifier	true		987937	0					
ANR	995542	BreakStatement	break ;	6096:2:171065:171070	987937	50	True				
ANR	995543	Label	case 'u' :	6097:1:171073:171081	987937	51	True				
ANR	995544	IfStatement	if ( input [ 1 ] == '?' )		987937	52					
ANR	995545	Condition	input [ 1 ] == '?'	6098:6:171097:171111	987937	0	True				
ANR	995546	EqualityExpression	input [ 1 ] == '?'		987937	0		==			
ANR	995547	ArrayIndexing	input [ 1 ]		987937	0					
ANR	995548	Identifier	input		987937	0					
ANR	995549	PrimaryExpression	1		987937	1					
ANR	995550	PrimaryExpression	'?'		987937	1					
ANR	995551	CompoundStatement		1254:23:35077:35077	987937	1					
ANR	995552	Statement	r_cons_printf	6099:3:171119:171131	987937	0	True				
ANR	995553	Statement	(	6099:17:171133:171133	987937	1	True				
ANR	995554	Statement	"""|Usage: pu[w] [len]       print N url"""	6099:18:171134:171172	987937	2	True				
ANR	995555	Statement	"""encoded bytes (w=wide)\\n"""	6100:4:171178:171203	987937	3	True				
ANR	995556	Statement	)	6100:30:171204:171204	987937	4	True				
ANR	995557	ExpressionStatement		6100:31:171205:171205	987937	5	True				
ANR	995558	ElseStatement	else		987937	0					
ANR	995559	CompoundStatement		1257:9:35179:35179	987937	0					
ANR	995560	IfStatement	if ( l > 0 )		987937	0					
ANR	995561	Condition	l > 0	6102:7:171225:171229	987937	0	True				
ANR	995562	RelationalExpression	l > 0		987937	0		>			
ANR	995563	Identifier	l		987937	0					
ANR	995564	PrimaryExpression	0		987937	1					
ANR	995565	CompoundStatement		1258:14:35195:35195	987937	1					
ANR	995566	ExpressionStatement	"r_print_string ( core -> print , core -> offset , core -> block , len , R_PRINT_STRING_URLENCODE | ( ( input [ 1 ] == 'w' ) ? R_PRINT_STRING_WIDE : 0 ) )"	6103:4:171238:171380	987937	0	True				
ANR	995567	CallExpression	"r_print_string ( core -> print , core -> offset , core -> block , len , R_PRINT_STRING_URLENCODE | ( ( input [ 1 ] == 'w' ) ? R_PRINT_STRING_WIDE : 0 ) )"		987937	0					
ANR	995568	Callee	r_print_string		987937	0					
ANR	995569	Identifier	r_print_string		987937	0					
ANR	995570	ArgumentList	core -> print		987937	1					
ANR	995571	Argument	core -> print		987937	0					
ANR	995572	PtrMemberAccess	core -> print		987937	0					
ANR	995573	Identifier	core		987937	0					
ANR	995574	Identifier	print		987937	1					
ANR	995575	Argument	core -> offset		987937	1					
ANR	995576	PtrMemberAccess	core -> offset		987937	0					
ANR	995577	Identifier	core		987937	0					
ANR	995578	Identifier	offset		987937	1					
ANR	995579	Argument	core -> block		987937	2					
ANR	995580	PtrMemberAccess	core -> block		987937	0					
ANR	995581	Identifier	core		987937	0					
ANR	995582	Identifier	block		987937	1					
ANR	995583	Argument	len		987937	3					
ANR	995584	Identifier	len		987937	0					
ANR	995585	Argument	R_PRINT_STRING_URLENCODE | ( ( input [ 1 ] == 'w' ) ? R_PRINT_STRING_WIDE : 0 )		987937	4					
ANR	995586	InclusiveOrExpression	R_PRINT_STRING_URLENCODE | ( ( input [ 1 ] == 'w' ) ? R_PRINT_STRING_WIDE : 0 )		987937	0		|			
ANR	995587	Identifier	R_PRINT_STRING_URLENCODE		987937	0					
ANR	995588	ConditionalExpression	( input [ 1 ] == 'w' ) ? R_PRINT_STRING_WIDE : 0		987937	1					
ANR	995589	Condition	input [ 1 ] == 'w'		987937	0					
ANR	995590	EqualityExpression	input [ 1 ] == 'w'		987937	0		==			
ANR	995591	ArrayIndexing	input [ 1 ]		987937	0					
ANR	995592	Identifier	input		987937	0					
ANR	995593	PrimaryExpression	1		987937	1					
ANR	995594	PrimaryExpression	'w'		987937	1					
ANR	995595	Identifier	R_PRINT_STRING_WIDE		987937	1					
ANR	995596	PrimaryExpression	0		987937	2					
ANR	995597	BreakStatement	break ;	6108:2:171393:171398	987937	53	True				
ANR	995598	Label	case 'c' :	6109:1:171401:171409	987937	54	True				
ANR	995599	IfStatement	if ( l )		987937	55					
ANR	995600	Condition	l	6110:6:171425:171425	987937	0	True				
ANR	995601	Identifier	l		987937	0					
ANR	995602	CompoundStatement		1269:3:35443:35452	987937	1					
ANR	995603	IdentifierDeclStatement	const ut8 * buf = core -> block ;	6111:3:171433:171461	987937	0	True				
ANR	995604	IdentifierDecl	* buf = core -> block		987937	0					
ANR	995605	IdentifierDeclType	const ut8 *		987937	0					
ANR	995606	Identifier	buf		987937	1					
ANR	995607	AssignmentExpression	* buf = core -> block		987937	2		=			
ANR	995608	Identifier	buf		987937	0					
ANR	995609	PtrMemberAccess	core -> block		987937	1					
ANR	995610	Identifier	core		987937	0					
ANR	995611	Identifier	block		987937	1					
ANR	995612	IdentifierDeclStatement	int i = 0 ;	6112:3:171466:171475	987937	1	True				
ANR	995613	IdentifierDecl	i = 0		987937	0					
ANR	995614	IdentifierDeclType	int		987937	0					
ANR	995615	Identifier	i		987937	1					
ANR	995616	AssignmentExpression	i = 0		987937	2		=			
ANR	995617	Identifier	i		987937	0					
ANR	995618	PrimaryExpression	0		987937	1					
ANR	995619	IdentifierDeclStatement	int j = 0 ;	6113:3:171480:171489	987937	2	True				
ANR	995620	IdentifierDecl	j = 0		987937	0					
ANR	995621	IdentifierDeclType	int		987937	0					
ANR	995622	Identifier	j		987937	1					
ANR	995623	AssignmentExpression	j = 0		987937	2		=			
ANR	995624	Identifier	j		987937	0					
ANR	995625	PrimaryExpression	0		987937	1					
ANR	995626	IfStatement	if ( input [ 1 ] == 'A' )		987937	3					
ANR	995627	Condition	input [ 1 ] == 'A'	6114:7:171498:171512	987937	0	True				
ANR	995628	EqualityExpression	input [ 1 ] == 'A'		987937	0		==			
ANR	995629	ArrayIndexing	input [ 1 ]		987937	0					
ANR	995630	Identifier	input		987937	0					
ANR	995631	PrimaryExpression	1		987937	1					
ANR	995632	PrimaryExpression	'A'		987937	1					
ANR	995633	CompoundStatement		1270:24:35478:35478	987937	1					
ANR	995634	Statement	r_cons_printf	6115:4:171530:171542	987937	0	True				
ANR	995635	Statement	(	6115:18:171544:171544	987937	1	True				
ANR	995636	Statement	"""sub_0x%08"""	6115:19:171545:171555	987937	2	True				
ANR	995637	Statement	PFMT64x	6115:30:171556:171562	987937	3	True				
ANR	995638	Statement	""":\\n"""	6115:38:171564:171568	987937	4	True				
ANR	995639	Statement	","	6115:43:171569:171569	987937	5	True				
ANR	995640	Statement	core	6115:45:171571:171574	987937	6	True				
ANR	995641	Statement	->	6115:49:171575:171576	987937	7	True				
ANR	995642	Statement	offset	6115:51:171577:171582	987937	8	True				
ANR	995643	Statement	)	6115:57:171583:171583	987937	9	True				
ANR	995644	ExpressionStatement		6115:58:171584:171584	987937	10	True				
ANR	995645	ForStatement	for ( i = 0 ; i < len ; i ++ )		987937	11					
ANR	995646	ForInit	i = 0 ;	6116:9:171595:171600	987937	0	True				
ANR	995647	AssignmentExpression	i = 0		987937	0		=			
ANR	995648	Identifier	i		987937	0					
ANR	995649	PrimaryExpression	0		987937	1					
ANR	995650	Condition	i < len	6116:16:171602:171608	987937	1	True				
ANR	995651	RelationalExpression	i < len		987937	0		<			
ANR	995652	Identifier	i		987937	0					
ANR	995653	Identifier	len		987937	1					
ANR	995654	PostIncDecOperationExpression	i ++	6116:25:171611:171613	987937	2	True				
ANR	995655	Identifier	i		987937	0					
ANR	995656	IncDec	++		987937	1					
ANR	995657	CompoundStatement		1277:5:35699:35718	987937	3					
ANR	995658	IdentifierDeclStatement	RAsmOp asmop = { 0 } ;	6117:5:171623:171654	987937	0	True				
ANR	995659	IdentifierDecl	asmop = { 0 }		987937	0					
ANR	995660	IdentifierDeclType	RAsmOp		987937	0					
ANR	995661	Identifier	asmop		987937	1					
ANR	995662	AssignmentExpression	asmop = { 0 }		987937	2		=			
ANR	995663	Identifier	asmop		987937	0					
ANR	995664	InitializerList	0		987937	1					
ANR	995665	PrimaryExpression	0		987937	0					
ANR	995666	ExpressionStatement	"( void ) r_asm_disassemble ( core -> assembler , & asmop , buf + i , len - i )"	6120:5:171661:171729	987937	1	True				
ANR	995667	CastExpression	"( void ) r_asm_disassemble ( core -> assembler , & asmop , buf + i , len - i )"		987937	0					
ANR	995668	CastTarget	void		987937	0					
ANR	995669	CallExpression	"r_asm_disassemble ( core -> assembler , & asmop , buf + i , len - i )"		987937	1					
ANR	995670	Callee	r_asm_disassemble		987937	0					
ANR	995671	Identifier	r_asm_disassemble		987937	0					
ANR	995672	ArgumentList	core -> assembler		987937	1					
ANR	995673	Argument	core -> assembler		987937	0					
ANR	995674	PtrMemberAccess	core -> assembler		987937	0					
ANR	995675	Identifier	core		987937	0					
ANR	995676	Identifier	assembler		987937	1					
ANR	995677	Argument	& asmop		987937	1					
ANR	995678	UnaryOperationExpression	& asmop		987937	0					
ANR	995679	UnaryOperator	&		987937	0					
ANR	995680	Identifier	asmop		987937	1					
ANR	995681	Argument	buf + i		987937	2					
ANR	995682	AdditiveExpression	buf + i		987937	0		+			
ANR	995683	Identifier	buf		987937	0					
ANR	995684	Identifier	i		987937	1					
ANR	995685	Argument	len - i		987937	3					
ANR	995686	AdditiveExpression	len - i		987937	0		-			
ANR	995687	Identifier	len		987937	0					
ANR	995688	Identifier	i		987937	1					
ANR	995689	IdentifierDeclStatement	int sz = asmop . size ;	6121:5:171736:171755	987937	2	True				
ANR	995690	IdentifierDecl	sz = asmop . size		987937	0					
ANR	995691	IdentifierDeclType	int		987937	0					
ANR	995692	Identifier	sz		987937	1					
ANR	995693	AssignmentExpression	sz = asmop . size		987937	2		=			
ANR	995694	Identifier	sz		987937	0					
ANR	995695	MemberAccess	asmop . size		987937	1					
ANR	995696	Identifier	asmop		987937	0					
ANR	995697	Identifier	size		987937	1					
ANR	995698	IfStatement	if ( sz < 1 )		987937	3					
ANR	995699	Condition	sz < 1	6122:9:171766:171771	987937	0	True				
ANR	995700	RelationalExpression	sz < 1		987937	0		<			
ANR	995701	Identifier	sz		987937	0					
ANR	995702	PrimaryExpression	1		987937	1					
ANR	995703	CompoundStatement		1278:17:35737:35737	987937	1					
ANR	995704	ExpressionStatement	sz = 1	6123:6:171782:171788	987937	0	True				
ANR	995705	AssignmentExpression	sz = 1		987937	0		=			
ANR	995706	Identifier	sz		987937	0					
ANR	995707	PrimaryExpression	1		987937	1					
ANR	995708	ExpressionStatement	"r_cons_printf ( "" .byte "" )"	6125:5:171802:171827	987937	4	True				
ANR	995709	CallExpression	"r_cons_printf ( "" .byte "" )"		987937	0					
ANR	995710	Callee	r_cons_printf		987937	0					
ANR	995711	Identifier	r_cons_printf		987937	0					
ANR	995712	ArgumentList	""" .byte """		987937	1					
ANR	995713	Argument	""" .byte """		987937	0					
ANR	995714	PrimaryExpression	""" .byte """		987937	0					
ANR	995715	ForStatement	for ( j = 0 ; j < sz ; j ++ )		987937	5					
ANR	995716	ForInit	j = 0 ;	6126:10:171839:171844	987937	0	True				
ANR	995717	AssignmentExpression	j = 0		987937	0		=			
ANR	995718	Identifier	j		987937	0					
ANR	995719	PrimaryExpression	0		987937	1					
ANR	995720	Condition	j < sz	6126:17:171846:171851	987937	1	True				
ANR	995721	RelationalExpression	j < sz		987937	0		<			
ANR	995722	Identifier	j		987937	0					
ANR	995723	Identifier	sz		987937	1					
ANR	995724	PostIncDecOperationExpression	j ++	6126:25:171854:171856	987937	2	True				
ANR	995725	Identifier	j		987937	0					
ANR	995726	IncDec	++		987937	1					
ANR	995727	CompoundStatement		1282:30:35822:35822	987937	3					
ANR	995728	ExpressionStatement	"r_cons_printf ( ""%s0x%02x"" , j ? "", "" : """" , buf [ i ] )"	6127:6:171867:171914	987937	0	True				
ANR	995729	CallExpression	"r_cons_printf ( ""%s0x%02x"" , j ? "", "" : """" , buf [ i ] )"		987937	0					
ANR	995730	Callee	r_cons_printf		987937	0					
ANR	995731	Identifier	r_cons_printf		987937	0					
ANR	995732	ArgumentList	"""%s0x%02x"""		987937	1					
ANR	995733	Argument	"""%s0x%02x"""		987937	0					
ANR	995734	PrimaryExpression	"""%s0x%02x"""		987937	0					
ANR	995735	Argument	"j ? "", "" : """""		987937	1					
ANR	995736	ConditionalExpression	"j ? "", "" : """""		987937	0					
ANR	995737	Condition	j		987937	0					
ANR	995738	Identifier	j		987937	0					
ANR	995739	PrimaryExpression	""", """		987937	1					
ANR	995740	PrimaryExpression	""""""		987937	2					
ANR	995741	Argument	buf [ i ]		987937	2					
ANR	995742	ArrayIndexing	buf [ i ]		987937	0					
ANR	995743	Identifier	buf		987937	0					
ANR	995744	Identifier	i		987937	1					
ANR	995745	ExpressionStatement	i ++	6128:6:171922:171925	987937	1	True				
ANR	995746	PostIncDecOperationExpression	i ++		987937	0					
ANR	995747	Identifier	i		987937	0					
ANR	995748	IncDec	++		987937	1					
ANR	995749	ExpressionStatement	"r_cons_printf ( ""  // %s\\n"" , r_strbuf_get ( & asmop . buf_asm ) )"	6130:5:171939:171997	987937	6	True				
ANR	995750	CallExpression	"r_cons_printf ( ""  // %s\\n"" , r_strbuf_get ( & asmop . buf_asm ) )"		987937	0					
ANR	995751	Callee	r_cons_printf		987937	0					
ANR	995752	Identifier	r_cons_printf		987937	0					
ANR	995753	ArgumentList	"""  // %s\\n"""		987937	1					
ANR	995754	Argument	"""  // %s\\n"""		987937	0					
ANR	995755	PrimaryExpression	"""  // %s\\n"""		987937	0					
ANR	995756	Argument	r_strbuf_get ( & asmop . buf_asm )		987937	1					
ANR	995757	CallExpression	r_strbuf_get ( & asmop . buf_asm )		987937	0					
ANR	995758	Callee	r_strbuf_get		987937	0					
ANR	995759	Identifier	r_strbuf_get		987937	0					
ANR	995760	ArgumentList	& asmop . buf_asm		987937	1					
ANR	995761	Argument	& asmop . buf_asm		987937	0					
ANR	995762	UnaryOperationExpression	& asmop . buf_asm		987937	0					
ANR	995763	UnaryOperator	&		987937	0					
ANR	995764	MemberAccess	asmop . buf_asm		987937	1					
ANR	995765	Identifier	asmop		987937	0					
ANR	995766	Identifier	buf_asm		987937	1					
ANR	995767	ExpressionStatement	i --	6131:5:172004:172007	987937	7	True				
ANR	995768	PostIncDecOperationExpression	i --		987937	0					
ANR	995769	Identifier	i		987937	0					
ANR	995770	IncDec	--		987937	1					
ANR	995771	ExpressionStatement	"r_cons_printf ( "".equ shellcode_len, %d\\n"" , len )"	6133:4:172019:172066	987937	12	True				
ANR	995772	CallExpression	"r_cons_printf ( "".equ shellcode_len, %d\\n"" , len )"		987937	0					
ANR	995773	Callee	r_cons_printf		987937	0					
ANR	995774	Identifier	r_cons_printf		987937	0					
ANR	995775	ArgumentList	""".equ shellcode_len, %d\\n"""		987937	1					
ANR	995776	Argument	""".equ shellcode_len, %d\\n"""		987937	0					
ANR	995777	PrimaryExpression	""".equ shellcode_len, %d\\n"""		987937	0					
ANR	995778	Argument	len		987937	1					
ANR	995779	Identifier	len		987937	0					
ANR	995780	ElseStatement	else		987937	0					
ANR	995781	CompoundStatement		1290:10:36041:36041	987937	0					
ANR	995782	ExpressionStatement	"r_print_code ( core -> print , core -> offset , core -> block , len , input [ 1 ] )"	6135:4:172084:172152	987937	0	True				
ANR	995783	CallExpression	"r_print_code ( core -> print , core -> offset , core -> block , len , input [ 1 ] )"		987937	0					
ANR	995784	Callee	r_print_code		987937	0					
ANR	995785	Identifier	r_print_code		987937	0					
ANR	995786	ArgumentList	core -> print		987937	1					
ANR	995787	Argument	core -> print		987937	0					
ANR	995788	PtrMemberAccess	core -> print		987937	0					
ANR	995789	Identifier	core		987937	0					
ANR	995790	Identifier	print		987937	1					
ANR	995791	Argument	core -> offset		987937	1					
ANR	995792	PtrMemberAccess	core -> offset		987937	0					
ANR	995793	Identifier	core		987937	0					
ANR	995794	Identifier	offset		987937	1					
ANR	995795	Argument	core -> block		987937	2					
ANR	995796	PtrMemberAccess	core -> block		987937	0					
ANR	995797	Identifier	core		987937	0					
ANR	995798	Identifier	block		987937	1					
ANR	995799	Argument	len		987937	3					
ANR	995800	Identifier	len		987937	0					
ANR	995801	Argument	input [ 1 ]		987937	4					
ANR	995802	ArrayIndexing	input [ 1 ]		987937	0					
ANR	995803	Identifier	input		987937	0					
ANR	995804	PrimaryExpression	1		987937	1					
ANR	995805	BreakStatement	break ;	6138:2:172165:172170	987937	56	True				
ANR	995806	Label	case 'C' :	6139:1:172173:172181	987937	57	True				
ANR	995807	SwitchStatement	switch ( input [ 1 ] )		987937	58					
ANR	995808	Condition	input [ 1 ]	6140:10:172201:172208	987937	0	True				
ANR	995809	ArrayIndexing	input [ 1 ]		987937	0					
ANR	995810	Identifier	input		987937	0					
ANR	995811	PrimaryExpression	1		987937	1					
ANR	995812	CompoundStatement		1296:20:36174:36174	987937	1					
ANR	995813	Label	case 0 :	6141:2:172215:172221	987937	0	True				
ANR	995814	ExpressionStatement	"cmd_pCd ( core , """" )"	6142:3:172226:172244	987937	1	True				
ANR	995815	CallExpression	"cmd_pCd ( core , """" )"		987937	0					
ANR	995816	Callee	cmd_pCd		987937	0					
ANR	995817	Identifier	cmd_pCd		987937	0					
ANR	995818	ArgumentList	core		987937	1					
ANR	995819	Argument	core		987937	0					
ANR	995820	Identifier	core		987937	0					
ANR	995821	Argument	""""""		987937	1					
ANR	995822	PrimaryExpression	""""""		987937	0					
ANR	995823	BreakStatement	break ;	6143:3:172249:172254	987937	2	True				
ANR	995824	Label	case ' ' :	6144:2:172258:172266	987937	3	True				
ANR	995825	Label	case 'd' :	6145:2:172270:172278	987937	4	True				
ANR	995826	ExpressionStatement	"cmd_pCd ( core , input + 2 )"	6146:3:172283:172308	987937	5	True				
ANR	995827	CallExpression	"cmd_pCd ( core , input + 2 )"		987937	0					
ANR	995828	Callee	cmd_pCd		987937	0					
ANR	995829	Identifier	cmd_pCd		987937	0					
ANR	995830	ArgumentList	core		987937	1					
ANR	995831	Argument	core		987937	0					
ANR	995832	Identifier	core		987937	0					
ANR	995833	Argument	input + 2		987937	1					
ANR	995834	AdditiveExpression	input + 2		987937	0		+			
ANR	995835	Identifier	input		987937	0					
ANR	995836	PrimaryExpression	2		987937	1					
ANR	995837	BreakStatement	break ;	6147:3:172313:172318	987937	6	True				
ANR	995838	Label	case 'D' :	6148:2:172322:172330	987937	7	True				
ANR	995839	ExpressionStatement	"cmd_pCD ( core , input + 2 )"	6149:3:172335:172360	987937	8	True				
ANR	995840	CallExpression	"cmd_pCD ( core , input + 2 )"		987937	0					
ANR	995841	Callee	cmd_pCD		987937	0					
ANR	995842	Identifier	cmd_pCD		987937	0					
ANR	995843	ArgumentList	core		987937	1					
ANR	995844	Argument	core		987937	0					
ANR	995845	Identifier	core		987937	0					
ANR	995846	Argument	input + 2		987937	1					
ANR	995847	AdditiveExpression	input + 2		987937	0		+			
ANR	995848	Identifier	input		987937	0					
ANR	995849	PrimaryExpression	2		987937	1					
ANR	995850	BreakStatement	break ;	6150:3:172365:172370	987937	9	True				
ANR	995851	Label	case 'a' :	6151:2:172374:172382	987937	10	True				
ANR	995852	ExpressionStatement	"cmd_pCx ( core , input + 2 , ""pxa"" )"	6152:3:172387:172419	987937	11	True				
ANR	995853	CallExpression	"cmd_pCx ( core , input + 2 , ""pxa"" )"		987937	0					
ANR	995854	Callee	cmd_pCx		987937	0					
ANR	995855	Identifier	cmd_pCx		987937	0					
ANR	995856	ArgumentList	core		987937	1					
ANR	995857	Argument	core		987937	0					
ANR	995858	Identifier	core		987937	0					
ANR	995859	Argument	input + 2		987937	1					
ANR	995860	AdditiveExpression	input + 2		987937	0		+			
ANR	995861	Identifier	input		987937	0					
ANR	995862	PrimaryExpression	2		987937	1					
ANR	995863	Argument	"""pxa"""		987937	2					
ANR	995864	PrimaryExpression	"""pxa"""		987937	0					
ANR	995865	BreakStatement	break ;	6153:3:172424:172429	987937	12	True				
ANR	995866	Label	case 'A' :	6154:2:172433:172441	987937	13	True				
ANR	995867	ExpressionStatement	"cmd_pCx ( core , input + 2 , ""pxA"" )"	6155:3:172446:172478	987937	14	True				
ANR	995868	CallExpression	"cmd_pCx ( core , input + 2 , ""pxA"" )"		987937	0					
ANR	995869	Callee	cmd_pCx		987937	0					
ANR	995870	Identifier	cmd_pCx		987937	0					
ANR	995871	ArgumentList	core		987937	1					
ANR	995872	Argument	core		987937	0					
ANR	995873	Identifier	core		987937	0					
ANR	995874	Argument	input + 2		987937	1					
ANR	995875	AdditiveExpression	input + 2		987937	0		+			
ANR	995876	Identifier	input		987937	0					
ANR	995877	PrimaryExpression	2		987937	1					
ANR	995878	Argument	"""pxA"""		987937	2					
ANR	995879	PrimaryExpression	"""pxA"""		987937	0					
ANR	995880	BreakStatement	break ;	6156:3:172483:172488	987937	15	True				
ANR	995881	Label	case 'x' :	6157:2:172492:172500	987937	16	True				
ANR	995882	ExpressionStatement	"cmd_pCx ( core , input + 2 , ""px"" )"	6158:3:172505:172536	987937	17	True				
ANR	995883	CallExpression	"cmd_pCx ( core , input + 2 , ""px"" )"		987937	0					
ANR	995884	Callee	cmd_pCx		987937	0					
ANR	995885	Identifier	cmd_pCx		987937	0					
ANR	995886	ArgumentList	core		987937	1					
ANR	995887	Argument	core		987937	0					
ANR	995888	Identifier	core		987937	0					
ANR	995889	Argument	input + 2		987937	1					
ANR	995890	AdditiveExpression	input + 2		987937	0		+			
ANR	995891	Identifier	input		987937	0					
ANR	995892	PrimaryExpression	2		987937	1					
ANR	995893	Argument	"""px"""		987937	2					
ANR	995894	PrimaryExpression	"""px"""		987937	0					
ANR	995895	BreakStatement	break ;	6159:3:172541:172546	987937	18	True				
ANR	995896	Label	case 'w' :	6160:2:172550:172558	987937	19	True				
ANR	995897	ExpressionStatement	"cmd_pCx ( core , input + 2 , ""pxw"" )"	6161:3:172563:172595	987937	20	True				
ANR	995898	CallExpression	"cmd_pCx ( core , input + 2 , ""pxw"" )"		987937	0					
ANR	995899	Callee	cmd_pCx		987937	0					
ANR	995900	Identifier	cmd_pCx		987937	0					
ANR	995901	ArgumentList	core		987937	1					
ANR	995902	Argument	core		987937	0					
ANR	995903	Identifier	core		987937	0					
ANR	995904	Argument	input + 2		987937	1					
ANR	995905	AdditiveExpression	input + 2		987937	0		+			
ANR	995906	Identifier	input		987937	0					
ANR	995907	PrimaryExpression	2		987937	1					
ANR	995908	Argument	"""pxw"""		987937	2					
ANR	995909	PrimaryExpression	"""pxw"""		987937	0					
ANR	995910	BreakStatement	break ;	6162:3:172600:172605	987937	21	True				
ANR	995911	Label	case 'c' :	6163:2:172609:172617	987937	22	True				
ANR	995912	ExpressionStatement	"cmd_pCx ( core , input + 2 , ""pc"" )"	6164:3:172622:172653	987937	23	True				
ANR	995913	CallExpression	"cmd_pCx ( core , input + 2 , ""pc"" )"		987937	0					
ANR	995914	Callee	cmd_pCx		987937	0					
ANR	995915	Identifier	cmd_pCx		987937	0					
ANR	995916	ArgumentList	core		987937	1					
ANR	995917	Argument	core		987937	0					
ANR	995918	Identifier	core		987937	0					
ANR	995919	Argument	input + 2		987937	1					
ANR	995920	AdditiveExpression	input + 2		987937	0		+			
ANR	995921	Identifier	input		987937	0					
ANR	995922	PrimaryExpression	2		987937	1					
ANR	995923	Argument	"""pc"""		987937	2					
ANR	995924	PrimaryExpression	"""pc"""		987937	0					
ANR	995925	BreakStatement	break ;	6165:3:172658:172663	987937	24	True				
ANR	995926	Label	default :	6166:2:172667:172674	987937	25	True				
ANR	995927	Identifier	default		987937	0					
ANR	995928	ExpressionStatement	"eprintf ( ""Usage: pCd\\n"" )"	6167:3:172679:172703	987937	26	True				
ANR	995929	CallExpression	"eprintf ( ""Usage: pCd\\n"" )"		987937	0					
ANR	995930	Callee	eprintf		987937	0					
ANR	995931	Identifier	eprintf		987937	0					
ANR	995932	ArgumentList	"""Usage: pCd\\n"""		987937	1					
ANR	995933	Argument	"""Usage: pCd\\n"""		987937	0					
ANR	995934	PrimaryExpression	"""Usage: pCd\\n"""		987937	0					
ANR	995935	BreakStatement	break ;	6168:3:172708:172713	987937	27	True				
ANR	995936	BreakStatement	break ;	6170:2:172721:172726	987937	59	True				
ANR	995937	Label	case 'r' :	6171:1:172729:172737	987937	60	True				
ANR	995938	SwitchStatement	switch ( input [ 1 ] )		987937	61					
ANR	995939	Condition	input [ 1 ]	6172:10:172757:172764	987937	0	True				
ANR	995940	ArrayIndexing	input [ 1 ]		987937	0					
ANR	995941	Identifier	input		987937	0					
ANR	995942	PrimaryExpression	1		987937	1					
ANR	995943	CompoundStatement		1328:20:36730:36730	987937	1					
ANR	995944	Label	case 'i' :	6173:2:172771:172779	987937	0	True				
ANR	995945	CompoundStatement		1336:4:36933:36985	987937	1					
ANR	995946	IdentifierDeclStatement	int mode = 0 ;	6176:4:172872:172884	987937	0	True				
ANR	995947	IdentifierDecl	mode = 0		987937	0					
ANR	995948	IdentifierDeclType	int		987937	0					
ANR	995949	Identifier	mode		987937	1					
ANR	995950	AssignmentExpression	mode = 0		987937	2		=			
ANR	995951	Identifier	mode		987937	0					
ANR	995952	PrimaryExpression	0		987937	1					
ANR	995953	IfStatement	"if ( r_config_get ( core -> config , ""scr.color"" ) == 0 )"		987937	1					
ANR	995954	Condition	"r_config_get ( core -> config , ""scr.color"" ) == 0"	6177:8:172894:172938	987937	0	True				
ANR	995955	EqualityExpression	"r_config_get ( core -> config , ""scr.color"" ) == 0"		987937	0		==			
ANR	995956	CallExpression	"r_config_get ( core -> config , ""scr.color"" )"		987937	0					
ANR	995957	Callee	r_config_get		987937	0					
ANR	995958	Identifier	r_config_get		987937	0					
ANR	995959	ArgumentList	core -> config		987937	1					
ANR	995960	Argument	core -> config		987937	0					
ANR	995961	PtrMemberAccess	core -> config		987937	0					
ANR	995962	Identifier	core		987937	0					
ANR	995963	Identifier	config		987937	1					
ANR	995964	Argument	"""scr.color"""		987937	1					
ANR	995965	PrimaryExpression	"""scr.color"""		987937	0					
ANR	995966	PrimaryExpression	0		987937	1					
ANR	995967	CompoundStatement		1333:55:36904:36904	987937	1					
ANR	995968	ExpressionStatement	mode = 'a'	6178:5:172948:172958	987937	0	True				
ANR	995969	AssignmentExpression	mode = 'a'		987937	0		=			
ANR	995970	Identifier	mode		987937	0					
ANR	995971	PrimaryExpression	'a'		987937	1					
ANR	995972	IdentifierDeclStatement	"int cols = r_config_get_i ( core -> config , ""hex.cols"" ) ;"	6180:4:172970:173022	987937	2	True				
ANR	995973	IdentifierDecl	"cols = r_config_get_i ( core -> config , ""hex.cols"" )"		987937	0					
ANR	995974	IdentifierDeclType	int		987937	0					
ANR	995975	Identifier	cols		987937	1					
ANR	995976	AssignmentExpression	"cols = r_config_get_i ( core -> config , ""hex.cols"" )"		987937	2		=			
ANR	995977	Identifier	cols		987937	0					
ANR	995978	CallExpression	"r_config_get_i ( core -> config , ""hex.cols"" )"		987937	1					
ANR	995979	Callee	r_config_get_i		987937	0					
ANR	995980	Identifier	r_config_get_i		987937	0					
ANR	995981	ArgumentList	core -> config		987937	1					
ANR	995982	Argument	core -> config		987937	0					
ANR	995983	PtrMemberAccess	core -> config		987937	0					
ANR	995984	Identifier	core		987937	0					
ANR	995985	Identifier	config		987937	1					
ANR	995986	Argument	"""hex.cols"""		987937	1					
ANR	995987	PrimaryExpression	"""hex.cols"""		987937	0					
ANR	995988	ExpressionStatement	"r_cons_image ( core -> block , core -> blocksize , cols , mode )"	6181:4:173028:173083	987937	3	True				
ANR	995989	CallExpression	"r_cons_image ( core -> block , core -> blocksize , cols , mode )"		987937	0					
ANR	995990	Callee	r_cons_image		987937	0					
ANR	995991	Identifier	r_cons_image		987937	0					
ANR	995992	ArgumentList	core -> block		987937	1					
ANR	995993	Argument	core -> block		987937	0					
ANR	995994	PtrMemberAccess	core -> block		987937	0					
ANR	995995	Identifier	core		987937	0					
ANR	995996	Identifier	block		987937	1					
ANR	995997	Argument	core -> blocksize		987937	1					
ANR	995998	PtrMemberAccess	core -> blocksize		987937	0					
ANR	995999	Identifier	core		987937	0					
ANR	996000	Identifier	blocksize		987937	1					
ANR	996001	Argument	cols		987937	2					
ANR	996002	Identifier	cols		987937	0					
ANR	996003	Argument	mode		987937	3					
ANR	996004	Identifier	mode		987937	0					
ANR	996005	BreakStatement	break ;	6183:3:173093:173098	987937	2	True				
ANR	996006	Label	case 'c' :	6184:2:173102:173110	987937	3	True				
ANR	996007	IfStatement	if ( input [ 2 ] == '?' )		987937	4					
ANR	996008	Condition	input [ 2 ] == '?'	6185:7:173146:173160	987937	0	True				
ANR	996009	EqualityExpression	input [ 2 ] == '?'		987937	0		==			
ANR	996010	ArrayIndexing	input [ 2 ]		987937	0					
ANR	996011	Identifier	input		987937	0					
ANR	996012	PrimaryExpression	2		987937	1					
ANR	996013	PrimaryExpression	'?'		987937	1					
ANR	996014	CompoundStatement		1341:24:37126:37126	987937	1					
ANR	996015	ExpressionStatement	"r_cons_printf ( ""prc=e # colorblocks of entropy\\n"" )"	6186:4:173169:173219	987937	0	True				
ANR	996016	CallExpression	"r_cons_printf ( ""prc=e # colorblocks of entropy\\n"" )"		987937	0					
ANR	996017	Callee	r_cons_printf		987937	0					
ANR	996018	Identifier	r_cons_printf		987937	0					
ANR	996019	ArgumentList	"""prc=e # colorblocks of entropy\\n"""		987937	1					
ANR	996020	Argument	"""prc=e # colorblocks of entropy\\n"""		987937	0					
ANR	996021	PrimaryExpression	"""prc=e # colorblocks of entropy\\n"""		987937	0					
ANR	996022	ExpressionStatement	"r_core_cmd0 ( core , ""pz?"" )"	6187:4:173225:173250	987937	1	True				
ANR	996023	CallExpression	"r_core_cmd0 ( core , ""pz?"" )"		987937	0					
ANR	996024	Callee	r_core_cmd0		987937	0					
ANR	996025	Identifier	r_core_cmd0		987937	0					
ANR	996026	ArgumentList	core		987937	1					
ANR	996027	Argument	core		987937	0					
ANR	996028	Identifier	core		987937	0					
ANR	996029	Argument	"""pz?"""		987937	1					
ANR	996030	PrimaryExpression	"""pz?"""		987937	0					
ANR	996031	ElseStatement	else		987937	0					
ANR	996032	IfStatement	if ( input [ 2 ] == '=' )		987937	0					
ANR	996033	Condition	input [ 2 ] == '='	6188:14:173266:173280	987937	0	True				
ANR	996034	EqualityExpression	input [ 2 ] == '='		987937	0		==			
ANR	996035	ArrayIndexing	input [ 2 ]		987937	0					
ANR	996036	Identifier	input		987937	0					
ANR	996037	PrimaryExpression	2		987937	1					
ANR	996038	PrimaryExpression	'='		987937	1					
ANR	996039	CompoundStatement		1344:31:37246:37246	987937	1					
ANR	996040	IfStatement	if ( input [ 3 ] == '?' )		987937	0					
ANR	996041	Condition	input [ 3 ] == '?'	6189:8:173293:173307	987937	0	True				
ANR	996042	EqualityExpression	input [ 3 ] == '?'		987937	0		==			
ANR	996043	ArrayIndexing	input [ 3 ]		987937	0					
ANR	996044	Identifier	input		987937	0					
ANR	996045	PrimaryExpression	3		987937	1					
ANR	996046	PrimaryExpression	'?'		987937	1					
ANR	996047	CompoundStatement		1345:25:37273:37273	987937	1					
ANR	996048	ExpressionStatement	"r_core_cmd_help ( core , help_msg_p_equal )"	6190:5:173317:173357	987937	0	True				
ANR	996049	CallExpression	"r_core_cmd_help ( core , help_msg_p_equal )"		987937	0					
ANR	996050	Callee	r_core_cmd_help		987937	0					
ANR	996051	Identifier	r_core_cmd_help		987937	0					
ANR	996052	ArgumentList	core		987937	1					
ANR	996053	Argument	core		987937	0					
ANR	996054	Identifier	core		987937	0					
ANR	996055	Argument	help_msg_p_equal		987937	1					
ANR	996056	Identifier	help_msg_p_equal		987937	0					
ANR	996057	ElseStatement	else		987937	0					
ANR	996058	CompoundStatement		1347:11:37333:37333	987937	0					
ANR	996059	ExpressionStatement	"cmd_prc_zoom ( core , input + 2 )"	6192:5:173377:173407	987937	0	True				
ANR	996060	CallExpression	"cmd_prc_zoom ( core , input + 2 )"		987937	0					
ANR	996061	Callee	cmd_prc_zoom		987937	0					
ANR	996062	Identifier	cmd_prc_zoom		987937	0					
ANR	996063	ArgumentList	core		987937	1					
ANR	996064	Argument	core		987937	0					
ANR	996065	Identifier	core		987937	0					
ANR	996066	Argument	input + 2		987937	1					
ANR	996067	AdditiveExpression	input + 2		987937	0		+			
ANR	996068	Identifier	input		987937	0					
ANR	996069	PrimaryExpression	2		987937	1					
ANR	996070	ElseStatement	else		987937	0					
ANR	996071	CompoundStatement		1350:10:37388:37388	987937	0					
ANR	996072	ExpressionStatement	"cmd_prc ( core , block , len )"	6195:4:173431:173457	987937	0	True				
ANR	996073	CallExpression	"cmd_prc ( core , block , len )"		987937	0					
ANR	996074	Callee	cmd_prc		987937	0					
ANR	996075	Identifier	cmd_prc		987937	0					
ANR	996076	ArgumentList	core		987937	1					
ANR	996077	Argument	core		987937	0					
ANR	996078	Identifier	core		987937	0					
ANR	996079	Argument	block		987937	1					
ANR	996080	Identifier	block		987937	0					
ANR	996081	Argument	len		987937	2					
ANR	996082	Identifier	len		987937	0					
ANR	996083	BreakStatement	break ;	6197:3:173467:173472	987937	5	True				
ANR	996084	Label	case '?' :	6198:2:173476:173484	987937	6	True				
ANR	996085	ExpressionStatement	"r_core_cmd_help ( core , help_msg_pr )"	6199:3:173489:173524	987937	7	True				
ANR	996086	CallExpression	"r_core_cmd_help ( core , help_msg_pr )"		987937	0					
ANR	996087	Callee	r_core_cmd_help		987937	0					
ANR	996088	Identifier	r_core_cmd_help		987937	0					
ANR	996089	ArgumentList	core		987937	1					
ANR	996090	Argument	core		987937	0					
ANR	996091	Identifier	core		987937	0					
ANR	996092	Argument	help_msg_pr		987937	1					
ANR	996093	Identifier	help_msg_pr		987937	0					
ANR	996094	BreakStatement	break ;	6200:3:173529:173534	987937	8	True				
ANR	996095	Label	case 'g' :	6201:2:173538:173546	987937	9	True				
ANR	996096	SwitchStatement	switch ( input [ 2 ] )		987937	10					
ANR	996097	Condition	input [ 2 ]	6202:11:173578:173585	987937	0	True				
ANR	996098	ArrayIndexing	input [ 2 ]		987937	0					
ANR	996099	Identifier	input		987937	0					
ANR	996100	PrimaryExpression	2		987937	1					
ANR	996101	CompoundStatement		1358:21:37551:37551	987937	1					
ANR	996102	Label	case '?' :	6203:3:173593:173601	987937	0	True				
ANR	996103	ExpressionStatement	"r_core_cmd_help ( core , help_msg_prg )"	6204:4:173607:173643	987937	1	True				
ANR	996104	CallExpression	"r_core_cmd_help ( core , help_msg_prg )"		987937	0					
ANR	996105	Callee	r_core_cmd_help		987937	0					
ANR	996106	Identifier	r_core_cmd_help		987937	0					
ANR	996107	ArgumentList	core		987937	1					
ANR	996108	Argument	core		987937	0					
ANR	996109	Identifier	core		987937	0					
ANR	996110	Argument	help_msg_prg		987937	1					
ANR	996111	Identifier	help_msg_prg		987937	0					
ANR	996112	BreakStatement	break ;	6205:4:173649:173654	987937	2	True				
ANR	996113	Label	case 'i' :	6206:3:173659:173667	987937	3	True				
ANR	996114	CompoundStatement		1366:4:37695:37703	987937	4					
ANR	996115	IdentifierDeclStatement	int outlen = 0 ;	6208:4:173688:173702	987937	0	True				
ANR	996116	IdentifierDecl	outlen = 0		987937	0					
ANR	996117	IdentifierDeclType	int		987937	0					
ANR	996118	Identifier	outlen		987937	1					
ANR	996119	AssignmentExpression	outlen = 0		987937	2		=			
ANR	996120	Identifier	outlen		987937	0					
ANR	996121	PrimaryExpression	0		987937	1					
ANR	996122	IdentifierDeclStatement	int inConsumed = 0 ;	6209:4:173708:173726	987937	1	True				
ANR	996123	IdentifierDecl	inConsumed = 0		987937	0					
ANR	996124	IdentifierDeclType	int		987937	0					
ANR	996125	Identifier	inConsumed		987937	1					
ANR	996126	AssignmentExpression	inConsumed = 0		987937	2		=			
ANR	996127	Identifier	inConsumed		987937	0					
ANR	996128	PrimaryExpression	0		987937	1					
ANR	996129	IdentifierDeclStatement	ut8 * out ;	6210:4:173732:173740	987937	2	True				
ANR	996130	IdentifierDecl	* out		987937	0					
ANR	996131	IdentifierDeclType	ut8 *		987937	0					
ANR	996132	Identifier	out		987937	1					
ANR	996133	ExpressionStatement	"out = r_inflate ( block , core -> blocksize , & inConsumed , & outlen )"	6211:4:173746:173808	987937	3	True				
ANR	996134	AssignmentExpression	"out = r_inflate ( block , core -> blocksize , & inConsumed , & outlen )"		987937	0		=			
ANR	996135	Identifier	out		987937	0					
ANR	996136	CallExpression	"r_inflate ( block , core -> blocksize , & inConsumed , & outlen )"		987937	1					
ANR	996137	Callee	r_inflate		987937	0					
ANR	996138	Identifier	r_inflate		987937	0					
ANR	996139	ArgumentList	block		987937	1					
ANR	996140	Argument	block		987937	0					
ANR	996141	Identifier	block		987937	0					
ANR	996142	Argument	core -> blocksize		987937	1					
ANR	996143	PtrMemberAccess	core -> blocksize		987937	0					
ANR	996144	Identifier	core		987937	0					
ANR	996145	Identifier	blocksize		987937	1					
ANR	996146	Argument	& inConsumed		987937	2					
ANR	996147	UnaryOperationExpression	& inConsumed		987937	0					
ANR	996148	UnaryOperator	&		987937	0					
ANR	996149	Identifier	inConsumed		987937	1					
ANR	996150	Argument	& outlen		987937	3					
ANR	996151	UnaryOperationExpression	& outlen		987937	0					
ANR	996152	UnaryOperator	&		987937	0					
ANR	996153	Identifier	outlen		987937	1					
ANR	996154	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , inConsumed )"	6212:4:173814:173848	987937	4	True				
ANR	996155	CallExpression	"r_cons_printf ( ""%d\\n"" , inConsumed )"		987937	0					
ANR	996156	Callee	r_cons_printf		987937	0					
ANR	996157	Identifier	r_cons_printf		987937	0					
ANR	996158	ArgumentList	"""%d\\n"""		987937	1					
ANR	996159	Argument	"""%d\\n"""		987937	0					
ANR	996160	PrimaryExpression	"""%d\\n"""		987937	0					
ANR	996161	Argument	inConsumed		987937	1					
ANR	996162	Identifier	inConsumed		987937	0					
ANR	996163	ExpressionStatement	free ( out )	6213:4:173854:173864	987937	5	True				
ANR	996164	CallExpression	free ( out )		987937	0					
ANR	996165	Callee	free		987937	0					
ANR	996166	Identifier	free		987937	0					
ANR	996167	ArgumentList	out		987937	1					
ANR	996168	Argument	out		987937	0					
ANR	996169	Identifier	out		987937	0					
ANR	996170	BreakStatement	break ;	6215:3:173874:173879	987937	5	True				
ANR	996171	Label	case 'o' :	6216:3:173884:173892	987937	6	True				
ANR	996172	CompoundStatement		1375:4:37896:37904	987937	7					
ANR	996173	IdentifierDeclStatement	int outlen = 0 ;	6218:4:173913:173927	987937	0	True				
ANR	996174	IdentifierDecl	outlen = 0		987937	0					
ANR	996175	IdentifierDeclType	int		987937	0					
ANR	996176	Identifier	outlen		987937	1					
ANR	996177	AssignmentExpression	outlen = 0		987937	2		=			
ANR	996178	Identifier	outlen		987937	0					
ANR	996179	PrimaryExpression	0		987937	1					
ANR	996180	IdentifierDeclStatement	ut8 * out ;	6219:4:173933:173941	987937	1	True				
ANR	996181	IdentifierDecl	* out		987937	0					
ANR	996182	IdentifierDeclType	ut8 *		987937	0					
ANR	996183	Identifier	out		987937	1					
ANR	996184	ExpressionStatement	"out = r_inflate ( block , core -> blocksize , NULL , & outlen )"	6220:4:173947:174002	987937	2	True				
ANR	996185	AssignmentExpression	"out = r_inflate ( block , core -> blocksize , NULL , & outlen )"		987937	0		=			
ANR	996186	Identifier	out		987937	0					
ANR	996187	CallExpression	"r_inflate ( block , core -> blocksize , NULL , & outlen )"		987937	1					
ANR	996188	Callee	r_inflate		987937	0					
ANR	996189	Identifier	r_inflate		987937	0					
ANR	996190	ArgumentList	block		987937	1					
ANR	996191	Argument	block		987937	0					
ANR	996192	Identifier	block		987937	0					
ANR	996193	Argument	core -> blocksize		987937	1					
ANR	996194	PtrMemberAccess	core -> blocksize		987937	0					
ANR	996195	Identifier	core		987937	0					
ANR	996196	Identifier	blocksize		987937	1					
ANR	996197	Argument	NULL		987937	2					
ANR	996198	Identifier	NULL		987937	0					
ANR	996199	Argument	& outlen		987937	3					
ANR	996200	UnaryOperationExpression	& outlen		987937	0					
ANR	996201	UnaryOperator	&		987937	0					
ANR	996202	Identifier	outlen		987937	1					
ANR	996203	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , outlen )"	6221:4:174008:174038	987937	3	True				
ANR	996204	CallExpression	"r_cons_printf ( ""%d\\n"" , outlen )"		987937	0					
ANR	996205	Callee	r_cons_printf		987937	0					
ANR	996206	Identifier	r_cons_printf		987937	0					
ANR	996207	ArgumentList	"""%d\\n"""		987937	1					
ANR	996208	Argument	"""%d\\n"""		987937	0					
ANR	996209	PrimaryExpression	"""%d\\n"""		987937	0					
ANR	996210	Argument	outlen		987937	1					
ANR	996211	Identifier	outlen		987937	0					
ANR	996212	ExpressionStatement	free ( out )	6222:4:174044:174054	987937	4	True				
ANR	996213	CallExpression	free ( out )		987937	0					
ANR	996214	Callee	free		987937	0					
ANR	996215	Identifier	free		987937	0					
ANR	996216	ArgumentList	out		987937	1					
ANR	996217	Argument	out		987937	0					
ANR	996218	Identifier	out		987937	0					
ANR	996219	BreakStatement	break ;	6224:3:174064:174069	987937	8	True				
ANR	996220	Label	default :	6225:3:174074:174081	987937	9	True				
ANR	996221	Identifier	default		987937	0					
ANR	996222	CompoundStatement		1384:4:38075:38083	987937	10					
ANR	996223	IdentifierDeclStatement	int outlen = 0 ;	6227:4:174092:174106	987937	0	True				
ANR	996224	IdentifierDecl	outlen = 0		987937	0					
ANR	996225	IdentifierDeclType	int		987937	0					
ANR	996226	Identifier	outlen		987937	1					
ANR	996227	AssignmentExpression	outlen = 0		987937	2		=			
ANR	996228	Identifier	outlen		987937	0					
ANR	996229	PrimaryExpression	0		987937	1					
ANR	996230	IdentifierDeclStatement	ut8 * out ;	6228:4:174112:174120	987937	1	True				
ANR	996231	IdentifierDecl	* out		987937	0					
ANR	996232	IdentifierDeclType	ut8 *		987937	0					
ANR	996233	Identifier	out		987937	1					
ANR	996234	ExpressionStatement	"out = r_inflate ( block , core -> blocksize , NULL , & outlen )"	6229:4:174126:174181	987937	2	True				
ANR	996235	AssignmentExpression	"out = r_inflate ( block , core -> blocksize , NULL , & outlen )"		987937	0		=			
ANR	996236	Identifier	out		987937	0					
ANR	996237	CallExpression	"r_inflate ( block , core -> blocksize , NULL , & outlen )"		987937	1					
ANR	996238	Callee	r_inflate		987937	0					
ANR	996239	Identifier	r_inflate		987937	0					
ANR	996240	ArgumentList	block		987937	1					
ANR	996241	Argument	block		987937	0					
ANR	996242	Identifier	block		987937	0					
ANR	996243	Argument	core -> blocksize		987937	1					
ANR	996244	PtrMemberAccess	core -> blocksize		987937	0					
ANR	996245	Identifier	core		987937	0					
ANR	996246	Identifier	blocksize		987937	1					
ANR	996247	Argument	NULL		987937	2					
ANR	996248	Identifier	NULL		987937	0					
ANR	996249	Argument	& outlen		987937	3					
ANR	996250	UnaryOperationExpression	& outlen		987937	0					
ANR	996251	UnaryOperator	&		987937	0					
ANR	996252	Identifier	outlen		987937	1					
ANR	996253	IfStatement	if ( out )		987937	3					
ANR	996254	Condition	out	6230:8:174191:174193	987937	0	True				
ANR	996255	Identifier	out		987937	0					
ANR	996256	CompoundStatement		1386:13:38159:38159	987937	1					
ANR	996257	ExpressionStatement	"r_cons_memcat ( ( const char * ) out , outlen )"	6231:5:174203:174245	987937	0	True				
ANR	996258	CallExpression	"r_cons_memcat ( ( const char * ) out , outlen )"		987937	0					
ANR	996259	Callee	r_cons_memcat		987937	0					
ANR	996260	Identifier	r_cons_memcat		987937	0					
ANR	996261	ArgumentList	( const char * ) out		987937	1					
ANR	996262	Argument	( const char * ) out		987937	0					
ANR	996263	CastExpression	( const char * ) out		987937	0					
ANR	996264	CastTarget	const char *		987937	0					
ANR	996265	Identifier	out		987937	1					
ANR	996266	Argument	outlen		987937	1					
ANR	996267	Identifier	outlen		987937	0					
ANR	996268	ExpressionStatement	free ( out )	6233:4:174257:174267	987937	4	True				
ANR	996269	CallExpression	free ( out )		987937	0					
ANR	996270	Callee	free		987937	0					
ANR	996271	Identifier	free		987937	0					
ANR	996272	ArgumentList	out		987937	1					
ANR	996273	Argument	out		987937	0					
ANR	996274	Identifier	out		987937	0					
ANR	996275	BreakStatement	break ;	6236:3:174282:174287	987937	11	True				
ANR	996276	Label	case 'l' :	6238:2:174313:174321	987937	12	True				
ANR	996277	IfStatement	if ( l != 0 )		987937	13					
ANR	996278	Condition	l != 0	6239:7:174339:174344	987937	0	True				
ANR	996279	EqualityExpression	l != 0		987937	0		!=			
ANR	996280	Identifier	l		987937	0					
ANR	996281	PrimaryExpression	0		987937	1					
ANR	996282	CompoundStatement		1395:15:38310:38310	987937	1					
ANR	996283	ExpressionStatement	"printraw ( core , len , 1 )"	6240:4:174353:174376	987937	0	True				
ANR	996284	CallExpression	"printraw ( core , len , 1 )"		987937	0					
ANR	996285	Callee	printraw		987937	0					
ANR	996286	Identifier	printraw		987937	0					
ANR	996287	ArgumentList	core		987937	1					
ANR	996288	Argument	core		987937	0					
ANR	996289	Identifier	core		987937	0					
ANR	996290	Argument	len		987937	1					
ANR	996291	Identifier	len		987937	0					
ANR	996292	Argument	1		987937	2					
ANR	996293	PrimaryExpression	1		987937	0					
ANR	996294	BreakStatement	break ;	6242:3:174386:174391	987937	14	True				
ANR	996295	Label	case 'x' :	6243:2:174395:174403	987937	15	True				
ANR	996296	IfStatement	if ( l != 0 )		987937	16					
ANR	996297	Condition	l != 0	6245:7:174427:174432	987937	0	True				
ANR	996298	EqualityExpression	l != 0		987937	0		!=			
ANR	996299	Identifier	l		987937	0					
ANR	996300	PrimaryExpression	0		987937	1					
ANR	996301	CompoundStatement		1401:15:38398:38398	987937	1					
ANR	996302	ExpressionStatement	"printraw ( core , len , 2 )"	6246:4:174441:174464	987937	0	True				
ANR	996303	CallExpression	"printraw ( core , len , 2 )"		987937	0					
ANR	996304	Callee	printraw		987937	0					
ANR	996305	Identifier	printraw		987937	0					
ANR	996306	ArgumentList	core		987937	1					
ANR	996307	Argument	core		987937	0					
ANR	996308	Identifier	core		987937	0					
ANR	996309	Argument	len		987937	1					
ANR	996310	Identifier	len		987937	0					
ANR	996311	Argument	2		987937	2					
ANR	996312	PrimaryExpression	2		987937	0					
ANR	996313	BreakStatement	break ;	6256:3:174702:174707	987937	17	True				
ANR	996314	Label	case 'z' :	6257:2:174711:174719	987937	18	True				
ANR	996315	IfStatement	if ( l != 0 )		987937	19					
ANR	996316	Condition	l != 0	6258:7:174737:174742	987937	0	True				
ANR	996317	EqualityExpression	l != 0		987937	0		!=			
ANR	996318	Identifier	l		987937	0					
ANR	996319	PrimaryExpression	0		987937	1					
ANR	996320	CompoundStatement		1414:15:38708:38708	987937	1					
ANR	996321	ExpressionStatement	"printraw ( core , strlen ( ( const char * ) core -> block ) , 0 )"	6259:4:174751:174806	987937	0	True				
ANR	996322	CallExpression	"printraw ( core , strlen ( ( const char * ) core -> block ) , 0 )"		987937	0					
ANR	996323	Callee	printraw		987937	0					
ANR	996324	Identifier	printraw		987937	0					
ANR	996325	ArgumentList	core		987937	1					
ANR	996326	Argument	core		987937	0					
ANR	996327	Identifier	core		987937	0					
ANR	996328	Argument	strlen ( ( const char * ) core -> block )		987937	1					
ANR	996329	CallExpression	strlen ( ( const char * ) core -> block )		987937	0					
ANR	996330	Callee	strlen		987937	0					
ANR	996331	Identifier	strlen		987937	0					
ANR	996332	ArgumentList	( const char * ) core -> block		987937	1					
ANR	996333	Argument	( const char * ) core -> block		987937	0					
ANR	996334	CastExpression	( const char * ) core -> block		987937	0					
ANR	996335	CastTarget	const char *		987937	0					
ANR	996336	PtrMemberAccess	core -> block		987937	1					
ANR	996337	Identifier	core		987937	0					
ANR	996338	Identifier	block		987937	1					
ANR	996339	Argument	0		987937	2					
ANR	996340	PrimaryExpression	0		987937	0					
ANR	996341	BreakStatement	break ;	6261:3:174816:174821	987937	20	True				
ANR	996342	Label	default :	6262:2:174825:174832	987937	21	True				
ANR	996343	Identifier	default		987937	0					
ANR	996344	IfStatement	if ( l != 0 )		987937	22					
ANR	996345	Condition	l != 0	6263:7:174841:174846	987937	0	True				
ANR	996346	EqualityExpression	l != 0		987937	0		!=			
ANR	996347	Identifier	l		987937	0					
ANR	996348	PrimaryExpression	0		987937	1					
ANR	996349	CompoundStatement		1419:15:38812:38812	987937	1					
ANR	996350	ExpressionStatement	"printraw ( core , len , 0 )"	6264:4:174855:174878	987937	0	True				
ANR	996351	CallExpression	"printraw ( core , len , 0 )"		987937	0					
ANR	996352	Callee	printraw		987937	0					
ANR	996353	Identifier	printraw		987937	0					
ANR	996354	ArgumentList	core		987937	1					
ANR	996355	Argument	core		987937	0					
ANR	996356	Identifier	core		987937	0					
ANR	996357	Argument	len		987937	1					
ANR	996358	Identifier	len		987937	0					
ANR	996359	Argument	0		987937	2					
ANR	996360	PrimaryExpression	0		987937	0					
ANR	996361	BreakStatement	break ;	6266:3:174888:174893	987937	23	True				
ANR	996362	BreakStatement	break ;	6268:2:174901:174906	987937	62	True				
ANR	996363	Label	case '3' :	6269:1:174909:174917	987937	63	True				
ANR	996364	IfStatement	if ( input [ 1 ] == '?' )		987937	64					
ANR	996365	Condition	input [ 1 ] == '?'	6270:6:174940:174954	987937	0	True				
ANR	996366	EqualityExpression	input [ 1 ] == '?'		987937	0		==			
ANR	996367	ArrayIndexing	input [ 1 ]		987937	0					
ANR	996368	Identifier	input		987937	0					
ANR	996369	PrimaryExpression	1		987937	1					
ANR	996370	PrimaryExpression	'?'		987937	1					
ANR	996371	CompoundStatement		1426:23:38920:38920	987937	1					
ANR	996372	ExpressionStatement	"eprintf ( ""Usage: p3 [file] - print 3D stereogram image of current block\\n"" )"	6271:3:174962:175037	987937	0	True				
ANR	996373	CallExpression	"eprintf ( ""Usage: p3 [file] - print 3D stereogram image of current block\\n"" )"		987937	0					
ANR	996374	Callee	eprintf		987937	0					
ANR	996375	Identifier	eprintf		987937	0					
ANR	996376	ArgumentList	"""Usage: p3 [file] - print 3D stereogram image of current block\\n"""		987937	1					
ANR	996377	Argument	"""Usage: p3 [file] - print 3D stereogram image of current block\\n"""		987937	0					
ANR	996378	PrimaryExpression	"""Usage: p3 [file] - print 3D stereogram image of current block\\n"""		987937	0					
ANR	996379	ElseStatement	else		987937	0					
ANR	996380	IfStatement	if ( input [ 1 ] == ' ' )		987937	0					
ANR	996381	Condition	input [ 1 ] == ' '	6272:13:175052:175066	987937	0	True				
ANR	996382	EqualityExpression	input [ 1 ] == ' '		987937	0		==			
ANR	996383	ArrayIndexing	input [ 1 ]		987937	0					
ANR	996384	Identifier	input		987937	0					
ANR	996385	PrimaryExpression	1		987937	1					
ANR	996386	PrimaryExpression	' '		987937	1					
ANR	996387	CompoundStatement		1430:3:39085:39130	987937	1					
ANR	996388	IdentifierDeclStatement	"char * data = r_file_slurp ( input + 2 , NULL ) ;"	6273:3:175074:175117	987937	0	True				
ANR	996389	IdentifierDecl	"* data = r_file_slurp ( input + 2 , NULL )"		987937	0					
ANR	996390	IdentifierDeclType	char *		987937	0					
ANR	996391	Identifier	data		987937	1					
ANR	996392	AssignmentExpression	"* data = r_file_slurp ( input + 2 , NULL )"		987937	2		=			
ANR	996393	Identifier	data		987937	0					
ANR	996394	CallExpression	"r_file_slurp ( input + 2 , NULL )"		987937	1					
ANR	996395	Callee	r_file_slurp		987937	0					
ANR	996396	Identifier	r_file_slurp		987937	0					
ANR	996397	ArgumentList	input + 2		987937	1					
ANR	996398	Argument	input + 2		987937	0					
ANR	996399	AdditiveExpression	input + 2		987937	0		+			
ANR	996400	Identifier	input		987937	0					
ANR	996401	PrimaryExpression	2		987937	1					
ANR	996402	Argument	NULL		987937	1					
ANR	996403	Identifier	NULL		987937	0					
ANR	996404	IdentifierDeclStatement	"char * res = r_print_stereogram ( data , 78 , 20 ) ;"	6274:3:175122:175167	987937	1	True				
ANR	996405	IdentifierDecl	"* res = r_print_stereogram ( data , 78 , 20 )"		987937	0					
ANR	996406	IdentifierDeclType	char *		987937	0					
ANR	996407	Identifier	res		987937	1					
ANR	996408	AssignmentExpression	"* res = r_print_stereogram ( data , 78 , 20 )"		987937	2		=			
ANR	996409	Identifier	res		987937	0					
ANR	996410	CallExpression	"r_print_stereogram ( data , 78 , 20 )"		987937	1					
ANR	996411	Callee	r_print_stereogram		987937	0					
ANR	996412	Identifier	r_print_stereogram		987937	0					
ANR	996413	ArgumentList	data		987937	1					
ANR	996414	Argument	data		987937	0					
ANR	996415	Identifier	data		987937	0					
ANR	996416	Argument	78		987937	1					
ANR	996417	PrimaryExpression	78		987937	0					
ANR	996418	Argument	20		987937	2					
ANR	996419	PrimaryExpression	20		987937	0					
ANR	996420	ExpressionStatement	"r_print_stereogram_print ( core -> print , res )"	6275:3:175172:175215	987937	2	True				
ANR	996421	CallExpression	"r_print_stereogram_print ( core -> print , res )"		987937	0					
ANR	996422	Callee	r_print_stereogram_print		987937	0					
ANR	996423	Identifier	r_print_stereogram_print		987937	0					
ANR	996424	ArgumentList	core -> print		987937	1					
ANR	996425	Argument	core -> print		987937	0					
ANR	996426	PtrMemberAccess	core -> print		987937	0					
ANR	996427	Identifier	core		987937	0					
ANR	996428	Identifier	print		987937	1					
ANR	996429	Argument	res		987937	1					
ANR	996430	Identifier	res		987937	0					
ANR	996431	ExpressionStatement	free ( res )	6277:3:175260:175270	987937	3	True				
ANR	996432	CallExpression	free ( res )		987937	0					
ANR	996433	Callee	free		987937	0					
ANR	996434	Identifier	free		987937	0					
ANR	996435	ArgumentList	res		987937	1					
ANR	996436	Argument	res		987937	0					
ANR	996437	Identifier	res		987937	0					
ANR	996438	ExpressionStatement	free ( data )	6278:3:175275:175286	987937	4	True				
ANR	996439	CallExpression	free ( data )		987937	0					
ANR	996440	Callee	free		987937	0					
ANR	996441	Identifier	free		987937	0					
ANR	996442	ArgumentList	data		987937	1					
ANR	996443	Argument	data		987937	0					
ANR	996444	Identifier	data		987937	0					
ANR	996445	ElseStatement	else		987937	0					
ANR	996446	CompoundStatement		1436:3:39265:39326	987937	0					
ANR	996447	IdentifierDeclStatement	"char * res = r_print_stereogram_bytes ( block , core -> blocksize ) ;"	6280:3:175302:175363	987937	0	True				
ANR	996448	IdentifierDecl	"* res = r_print_stereogram_bytes ( block , core -> blocksize )"		987937	0					
ANR	996449	IdentifierDeclType	char *		987937	0					
ANR	996450	Identifier	res		987937	1					
ANR	996451	AssignmentExpression	"* res = r_print_stereogram_bytes ( block , core -> blocksize )"		987937	2		=			
ANR	996452	Identifier	res		987937	0					
ANR	996453	CallExpression	"r_print_stereogram_bytes ( block , core -> blocksize )"		987937	1					
ANR	996454	Callee	r_print_stereogram_bytes		987937	0					
ANR	996455	Identifier	r_print_stereogram_bytes		987937	0					
ANR	996456	ArgumentList	block		987937	1					
ANR	996457	Argument	block		987937	0					
ANR	996458	Identifier	block		987937	0					
ANR	996459	Argument	core -> blocksize		987937	1					
ANR	996460	PtrMemberAccess	core -> blocksize		987937	0					
ANR	996461	Identifier	core		987937	0					
ANR	996462	Identifier	blocksize		987937	1					
ANR	996463	ExpressionStatement	"r_print_stereogram_print ( core -> print , res )"	6281:3:175368:175411	987937	1	True				
ANR	996464	CallExpression	"r_print_stereogram_print ( core -> print , res )"		987937	0					
ANR	996465	Callee	r_print_stereogram_print		987937	0					
ANR	996466	Identifier	r_print_stereogram_print		987937	0					
ANR	996467	ArgumentList	core -> print		987937	1					
ANR	996468	Argument	core -> print		987937	0					
ANR	996469	PtrMemberAccess	core -> print		987937	0					
ANR	996470	Identifier	core		987937	0					
ANR	996471	Identifier	print		987937	1					
ANR	996472	Argument	res		987937	1					
ANR	996473	Identifier	res		987937	0					
ANR	996474	ExpressionStatement	free ( res )	6282:3:175416:175426	987937	2	True				
ANR	996475	CallExpression	free ( res )		987937	0					
ANR	996476	Callee	free		987937	0					
ANR	996477	Identifier	free		987937	0					
ANR	996478	ArgumentList	res		987937	1					
ANR	996479	Argument	res		987937	0					
ANR	996480	Identifier	res		987937	0					
ANR	996481	BreakStatement	break ;	6284:2:175434:175439	987937	65	True				
ANR	996482	Label	case 'o' :	6285:1:175442:175450	987937	66	True				
ANR	996483	ExpressionStatement	"cmd_print_op ( core , input )"	6286:2:175462:175487	987937	67	True				
ANR	996484	CallExpression	"cmd_print_op ( core , input )"		987937	0					
ANR	996485	Callee	cmd_print_op		987937	0					
ANR	996486	Identifier	cmd_print_op		987937	0					
ANR	996487	ArgumentList	core		987937	1					
ANR	996488	Argument	core		987937	0					
ANR	996489	Identifier	core		987937	0					
ANR	996490	Argument	input		987937	1					
ANR	996491	Identifier	input		987937	0					
ANR	996492	BreakStatement	break ;	6287:2:175491:175496	987937	68	True				
ANR	996493	Label	case 'x' :	6288:1:175499:175507	987937	69	True				
ANR	996494	CompoundStatement		1452:2:39681:39742	987937	70					
ANR	996495	IdentifierDeclStatement	"int show_offset = r_config_get_i ( core -> config , ""asm.offset"" ) ;"	6290:2:175522:175583	987937	0	True				
ANR	996496	IdentifierDecl	"show_offset = r_config_get_i ( core -> config , ""asm.offset"" )"		987937	0					
ANR	996497	IdentifierDeclType	int		987937	0					
ANR	996498	Identifier	show_offset		987937	1					
ANR	996499	AssignmentExpression	"show_offset = r_config_get_i ( core -> config , ""asm.offset"" )"		987937	2		=			
ANR	996500	Identifier	show_offset		987937	0					
ANR	996501	CallExpression	"r_config_get_i ( core -> config , ""asm.offset"" )"		987937	1					
ANR	996502	Callee	r_config_get_i		987937	0					
ANR	996503	Identifier	r_config_get_i		987937	0					
ANR	996504	ArgumentList	core -> config		987937	1					
ANR	996505	Argument	core -> config		987937	0					
ANR	996506	PtrMemberAccess	core -> config		987937	0					
ANR	996507	Identifier	core		987937	0					
ANR	996508	Identifier	config		987937	1					
ANR	996509	Argument	"""asm.offset"""		987937	1					
ANR	996510	PrimaryExpression	"""asm.offset"""		987937	0					
ANR	996511	IfStatement	if ( show_offset )		987937	1					
ANR	996512	Condition	show_offset	6291:6:175591:175601	987937	0	True				
ANR	996513	Identifier	show_offset		987937	0					
ANR	996514	CompoundStatement		1447:19:39567:39567	987937	1					
ANR	996515	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_OFFSET	6292:3:175609:175651	987937	0	True				
ANR	996516	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_OFFSET		987937	0		|=			
ANR	996517	PtrMemberAccess	core -> print -> flags		987937	0					
ANR	996518	PtrMemberAccess	core -> print		987937	0					
ANR	996519	Identifier	core		987937	0					
ANR	996520	Identifier	print		987937	1					
ANR	996521	Identifier	flags		987937	1					
ANR	996522	Identifier	R_PRINT_FLAGS_OFFSET		987937	1					
ANR	996523	ElseStatement	else		987937	0					
ANR	996524	CompoundStatement		1449:9:39625:39625	987937	0					
ANR	996525	ExpressionStatement	core -> print -> flags &= ~R_PRINT_FLAGS_OFFSET	6294:3:175667:175710	987937	0	True				
ANR	996526	AssignmentExpression	core -> print -> flags &= ~R_PRINT_FLAGS_OFFSET		987937	0		&=			
ANR	996527	PtrMemberAccess	core -> print -> flags		987937	0					
ANR	996528	PtrMemberAccess	core -> print		987937	0					
ANR	996529	Identifier	core		987937	0					
ANR	996530	Identifier	print		987937	1					
ANR	996531	Identifier	flags		987937	1					
ANR	996532	Identifier	~R_PRINT_FLAGS_OFFSET		987937	1					
ANR	996533	IdentifierDeclStatement	"int show_header = r_config_get_i ( core -> config , ""hex.header"" ) ;"	6296:2:175718:175779	987937	2	True				
ANR	996534	IdentifierDecl	"show_header = r_config_get_i ( core -> config , ""hex.header"" )"		987937	0					
ANR	996535	IdentifierDeclType	int		987937	0					
ANR	996536	Identifier	show_header		987937	1					
ANR	996537	AssignmentExpression	"show_header = r_config_get_i ( core -> config , ""hex.header"" )"		987937	2		=			
ANR	996538	Identifier	show_header		987937	0					
ANR	996539	CallExpression	"r_config_get_i ( core -> config , ""hex.header"" )"		987937	1					
ANR	996540	Callee	r_config_get_i		987937	0					
ANR	996541	Identifier	r_config_get_i		987937	0					
ANR	996542	ArgumentList	core -> config		987937	1					
ANR	996543	Argument	core -> config		987937	0					
ANR	996544	PtrMemberAccess	core -> config		987937	0					
ANR	996545	Identifier	core		987937	0					
ANR	996546	Identifier	config		987937	1					
ANR	996547	Argument	"""hex.header"""		987937	1					
ANR	996548	PrimaryExpression	"""hex.header"""		987937	0					
ANR	996549	IfStatement	if ( show_header )		987937	3					
ANR	996550	Condition	show_header	6297:6:175787:175797	987937	0	True				
ANR	996551	Identifier	show_header		987937	0					
ANR	996552	CompoundStatement		1453:19:39763:39763	987937	1					
ANR	996553	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_HEADER	6298:3:175805:175847	987937	0	True				
ANR	996554	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_HEADER		987937	0		|=			
ANR	996555	PtrMemberAccess	core -> print -> flags		987937	0					
ANR	996556	PtrMemberAccess	core -> print		987937	0					
ANR	996557	Identifier	core		987937	0					
ANR	996558	Identifier	print		987937	1					
ANR	996559	Identifier	flags		987937	1					
ANR	996560	Identifier	R_PRINT_FLAGS_HEADER		987937	1					
ANR	996561	ElseStatement	else		987937	0					
ANR	996562	CompoundStatement		1455:9:39821:39821	987937	0					
ANR	996563	ExpressionStatement	core -> print -> flags &= ~R_PRINT_FLAGS_HEADER	6300:3:175863:175906	987937	0	True				
ANR	996564	AssignmentExpression	core -> print -> flags &= ~R_PRINT_FLAGS_HEADER		987937	0		&=			
ANR	996565	PtrMemberAccess	core -> print -> flags		987937	0					
ANR	996566	PtrMemberAccess	core -> print		987937	0					
ANR	996567	Identifier	core		987937	0					
ANR	996568	Identifier	print		987937	1					
ANR	996569	Identifier	flags		987937	1					
ANR	996570	Identifier	~R_PRINT_FLAGS_HEADER		987937	1					
ANR	996571	ExpressionStatement	core -> print -> use_comments = false	6303:2:175958:175991	987937	4	True				
ANR	996572	AssignmentExpression	core -> print -> use_comments = false		987937	0		=			
ANR	996573	PtrMemberAccess	core -> print -> use_comments		987937	0					
ANR	996574	PtrMemberAccess	core -> print		987937	0					
ANR	996575	Identifier	core		987937	0					
ANR	996576	Identifier	print		987937	1					
ANR	996577	Identifier	use_comments		987937	1					
ANR	996578	Identifier	false		987937	1					
ANR	996579	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	6305:2:175998:176028	987937	71	True				
ANR	996580	CallExpression	"r_cons_break_push ( NULL , NULL )"		987937	0					
ANR	996581	Callee	r_cons_break_push		987937	0					
ANR	996582	Identifier	r_cons_break_push		987937	0					
ANR	996583	ArgumentList	NULL		987937	1					
ANR	996584	Argument	NULL		987937	0					
ANR	996585	Identifier	NULL		987937	0					
ANR	996586	Argument	NULL		987937	1					
ANR	996587	Identifier	NULL		987937	0					
ANR	996588	SwitchStatement	switch ( input [ 1 ] )		987937	72					
ANR	996589	Condition	input [ 1 ]	6306:10:176040:176047	987937	0	True				
ANR	996590	ArrayIndexing	input [ 1 ]		987937	0					
ANR	996591	Identifier	input		987937	0					
ANR	996592	PrimaryExpression	1		987937	1					
ANR	996593	CompoundStatement		1462:20:40013:40013	987937	1					
ANR	996594	Label	case 'j' :	6307:2:176054:176062	987937	0	True				
ANR	996595	ExpressionStatement	"r_print_jsondump ( core -> print , core -> block , core -> blocksize , 8 )"	6308:3:176076:176139	987937	1	True				
ANR	996596	CallExpression	"r_print_jsondump ( core -> print , core -> block , core -> blocksize , 8 )"		987937	0					
ANR	996597	Callee	r_print_jsondump		987937	0					
ANR	996598	Identifier	r_print_jsondump		987937	0					
ANR	996599	ArgumentList	core -> print		987937	1					
ANR	996600	Argument	core -> print		987937	0					
ANR	996601	PtrMemberAccess	core -> print		987937	0					
ANR	996602	Identifier	core		987937	0					
ANR	996603	Identifier	print		987937	1					
ANR	996604	Argument	core -> block		987937	1					
ANR	996605	PtrMemberAccess	core -> block		987937	0					
ANR	996606	Identifier	core		987937	0					
ANR	996607	Identifier	block		987937	1					
ANR	996608	Argument	core -> blocksize		987937	2					
ANR	996609	PtrMemberAccess	core -> blocksize		987937	0					
ANR	996610	Identifier	core		987937	0					
ANR	996611	Identifier	blocksize		987937	1					
ANR	996612	Argument	8		987937	3					
ANR	996613	PrimaryExpression	8		987937	0					
ANR	996614	BreakStatement	break ;	6309:3:176144:176149	987937	2	True				
ANR	996615	Label	case '/' :	6310:2:176153:176161	987937	3	True				
ANR	996616	ExpressionStatement	"r_core_print_examine ( core , input + 2 )"	6311:3:176175:176213	987937	4	True				
ANR	996617	CallExpression	"r_core_print_examine ( core , input + 2 )"		987937	0					
ANR	996618	Callee	r_core_print_examine		987937	0					
ANR	996619	Identifier	r_core_print_examine		987937	0					
ANR	996620	ArgumentList	core		987937	1					
ANR	996621	Argument	core		987937	0					
ANR	996622	Identifier	core		987937	0					
ANR	996623	Argument	input + 2		987937	1					
ANR	996624	AdditiveExpression	input + 2		987937	0		+			
ANR	996625	Identifier	input		987937	0					
ANR	996626	PrimaryExpression	2		987937	1					
ANR	996627	BreakStatement	break ;	6312:3:176218:176223	987937	5	True				
ANR	996628	Label	case '?' :	6313:2:176227:176235	987937	6	True				
ANR	996629	ExpressionStatement	"r_core_cmd_help ( core , help_msg_px )"	6314:3:176240:176275	987937	7	True				
ANR	996630	CallExpression	"r_core_cmd_help ( core , help_msg_px )"		987937	0					
ANR	996631	Callee	r_core_cmd_help		987937	0					
ANR	996632	Identifier	r_core_cmd_help		987937	0					
ANR	996633	ArgumentList	core		987937	1					
ANR	996634	Argument	core		987937	0					
ANR	996635	Identifier	core		987937	0					
ANR	996636	Argument	help_msg_px		987937	1					
ANR	996637	Identifier	help_msg_px		987937	0					
ANR	996638	BreakStatement	break ;	6315:3:176280:176285	987937	8	True				
ANR	996639	Label	case '0' :	6316:2:176289:176297	987937	9	True				
ANR	996640	IfStatement	if ( l )		987937	10					
ANR	996641	Condition	l	6317:7:176315:176315	987937	0	True				
ANR	996642	Identifier	l		987937	0					
ANR	996643	CompoundStatement		1474:4:40287:40352	987937	1					
ANR	996644	IdentifierDeclStatement	"int len = r_str_nlen ( ( const char * ) core -> block , core -> blocksize ) ;"	6318:4:176324:176389	987937	0	True				
ANR	996645	IdentifierDecl	"len = r_str_nlen ( ( const char * ) core -> block , core -> blocksize )"		987937	0					
ANR	996646	IdentifierDeclType	int		987937	0					
ANR	996647	Identifier	len		987937	1					
ANR	996648	AssignmentExpression	"len = r_str_nlen ( ( const char * ) core -> block , core -> blocksize )"		987937	2		=			
ANR	996649	Identifier	len		987937	0					
ANR	996650	CallExpression	"r_str_nlen ( ( const char * ) core -> block , core -> blocksize )"		987937	1					
ANR	996651	Callee	r_str_nlen		987937	0					
ANR	996652	Identifier	r_str_nlen		987937	0					
ANR	996653	ArgumentList	( const char * ) core -> block		987937	1					
ANR	996654	Argument	( const char * ) core -> block		987937	0					
ANR	996655	CastExpression	( const char * ) core -> block		987937	0					
ANR	996656	CastTarget	const char *		987937	0					
ANR	996657	PtrMemberAccess	core -> block		987937	1					
ANR	996658	Identifier	core		987937	0					
ANR	996659	Identifier	block		987937	1					
ANR	996660	Argument	core -> blocksize		987937	1					
ANR	996661	PtrMemberAccess	core -> blocksize		987937	0					
ANR	996662	Identifier	core		987937	0					
ANR	996663	Identifier	blocksize		987937	1					
ANR	996664	ExpressionStatement	"r_print_bytes ( core -> print , core -> block , len , ""%02x"" )"	6319:4:176395:176448	987937	1	True				
ANR	996665	CallExpression	"r_print_bytes ( core -> print , core -> block , len , ""%02x"" )"		987937	0					
ANR	996666	Callee	r_print_bytes		987937	0					
ANR	996667	Identifier	r_print_bytes		987937	0					
ANR	996668	ArgumentList	core -> print		987937	1					
ANR	996669	Argument	core -> print		987937	0					
ANR	996670	PtrMemberAccess	core -> print		987937	0					
ANR	996671	Identifier	core		987937	0					
ANR	996672	Identifier	print		987937	1					
ANR	996673	Argument	core -> block		987937	1					
ANR	996674	PtrMemberAccess	core -> block		987937	0					
ANR	996675	Identifier	core		987937	0					
ANR	996676	Identifier	block		987937	1					
ANR	996677	Argument	len		987937	2					
ANR	996678	Identifier	len		987937	0					
ANR	996679	Argument	"""%02x"""		987937	3					
ANR	996680	PrimaryExpression	"""%02x"""		987937	0					
ANR	996681	BreakStatement	break ;	6321:3:176458:176463	987937	11	True				
ANR	996682	Label	case 'a' :	6322:2:176467:176475	987937	12	True				
ANR	996683	IfStatement	if ( l != 0 )		987937	13					
ANR	996684	Condition	l != 0	6323:7:176493:176498	987937	0	True				
ANR	996685	EqualityExpression	l != 0		987937	0		!=			
ANR	996686	Identifier	l		987937	0					
ANR	996687	PrimaryExpression	0		987937	1					
ANR	996688	CompoundStatement		1479:15:40464:40464	987937	1					
ANR	996689	IfStatement	if ( len % 16 )		987937	0					
ANR	996690	Condition	len % 16	6324:8:176511:176518	987937	0	True				
ANR	996691	MultiplicativeExpression	len % 16		987937	0		%			
ANR	996692	Identifier	len		987937	0					
ANR	996693	PrimaryExpression	16		987937	1					
ANR	996694	CompoundStatement		1480:18:40484:40484	987937	1					
ANR	996695	ExpressionStatement	len += 16 - ( len % 16 )	6325:5:176528:176550	987937	0	True				
ANR	996696	AssignmentExpression	len += 16 - ( len % 16 )		987937	0		+=			
ANR	996697	Identifier	len		987937	0					
ANR	996698	AdditiveExpression	16 - ( len % 16 )		987937	1		-			
ANR	996699	PrimaryExpression	16		987937	0					
ANR	996700	MultiplicativeExpression	len % 16		987937	1		%			
ANR	996701	Identifier	len		987937	0					
ANR	996702	PrimaryExpression	16		987937	1					
ANR	996703	ExpressionStatement	"annotated_hexdump ( core , input + 2 , len )"	6327:4:176562:176602	987937	1	True				
ANR	996704	CallExpression	"annotated_hexdump ( core , input + 2 , len )"		987937	0					
ANR	996705	Callee	annotated_hexdump		987937	0					
ANR	996706	Identifier	annotated_hexdump		987937	0					
ANR	996707	ArgumentList	core		987937	1					
ANR	996708	Argument	core		987937	0					
ANR	996709	Identifier	core		987937	0					
ANR	996710	Argument	input + 2		987937	1					
ANR	996711	AdditiveExpression	input + 2		987937	0		+			
ANR	996712	Identifier	input		987937	0					
ANR	996713	PrimaryExpression	2		987937	1					
ANR	996714	Argument	len		987937	2					
ANR	996715	Identifier	len		987937	0					
ANR	996716	BreakStatement	break ;	6329:3:176612:176617	987937	14	True				
ANR	996717	Label	case 'x' :	6330:2:176621:176629	987937	15	True				
ANR	996718	IfStatement	if ( l != 0 )		987937	16					
ANR	996719	Condition	l != 0	6331:7:176647:176652	987937	0	True				
ANR	996720	EqualityExpression	l != 0		987937	0		!=			
ANR	996721	Identifier	l		987937	0					
ANR	996722	PrimaryExpression	0		987937	1					
ANR	996723	CompoundStatement		1487:15:40618:40618	987937	1					
ANR	996724	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_NONHEX	6332:4:176661:176703	987937	0	True				
ANR	996725	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_NONHEX		987937	0		|=			
ANR	996726	PtrMemberAccess	core -> print -> flags		987937	0					
ANR	996727	PtrMemberAccess	core -> print		987937	0					
ANR	996728	Identifier	core		987937	0					
ANR	996729	Identifier	print		987937	1					
ANR	996730	Identifier	flags		987937	1					
ANR	996731	Identifier	R_PRINT_FLAGS_NONHEX		987937	1					
ANR	996732	ExpressionStatement	"r_print_hexdump ( core -> print , core -> offset , core -> block , len , 8 , 1 , 1 )"	6333:4:176709:176784	987937	1	True				
ANR	996733	CallExpression	"r_print_hexdump ( core -> print , core -> offset , core -> block , len , 8 , 1 , 1 )"		987937	0					
ANR	996734	Callee	r_print_hexdump		987937	0					
ANR	996735	Identifier	r_print_hexdump		987937	0					
ANR	996736	ArgumentList	core -> print		987937	1					
ANR	996737	Argument	core -> print		987937	0					
ANR	996738	PtrMemberAccess	core -> print		987937	0					
ANR	996739	Identifier	core		987937	0					
ANR	996740	Identifier	print		987937	1					
ANR	996741	Argument	core -> offset		987937	1					
ANR	996742	PtrMemberAccess	core -> offset		987937	0					
ANR	996743	Identifier	core		987937	0					
ANR	996744	Identifier	offset		987937	1					
ANR	996745	Argument	core -> block		987937	2					
ANR	996746	PtrMemberAccess	core -> block		987937	0					
ANR	996747	Identifier	core		987937	0					
ANR	996748	Identifier	block		987937	1					
ANR	996749	Argument	len		987937	3					
ANR	996750	Identifier	len		987937	0					
ANR	996751	Argument	8		987937	4					
ANR	996752	PrimaryExpression	8		987937	0					
ANR	996753	Argument	1		987937	5					
ANR	996754	PrimaryExpression	1		987937	0					
ANR	996755	Argument	1		987937	6					
ANR	996756	PrimaryExpression	1		987937	0					
ANR	996757	ExpressionStatement	core -> print -> flags &= ~R_PRINT_FLAGS_NONHEX	6335:4:176790:176833	987937	2	True				
ANR	996758	AssignmentExpression	core -> print -> flags &= ~R_PRINT_FLAGS_NONHEX		987937	0		&=			
ANR	996759	PtrMemberAccess	core -> print -> flags		987937	0					
ANR	996760	PtrMemberAccess	core -> print		987937	0					
ANR	996761	Identifier	core		987937	0					
ANR	996762	Identifier	print		987937	1					
ANR	996763	Identifier	flags		987937	1					
ANR	996764	Identifier	~R_PRINT_FLAGS_NONHEX		987937	1					
ANR	996765	BreakStatement	break ;	6337:3:176843:176848	987937	17	True				
ANR	996766	Label	case 'X' :	6338:2:176852:176860	987937	18	True				
ANR	996767	IfStatement	if ( l != 0 )		987937	19					
ANR	996768	Condition	l != 0	6339:7:176878:176883	987937	0	True				
ANR	996769	EqualityExpression	l != 0		987937	0		!=			
ANR	996770	Identifier	l		987937	0					
ANR	996771	PrimaryExpression	0		987937	1					
ANR	996772	CompoundStatement		1496:4:40855:40881	987937	1					
ANR	996773	IdentifierDeclStatement	"ut8 * buf = calloc ( len , 4 ) ;"	6340:4:176892:176918	987937	0	True				
ANR	996774	IdentifierDecl	"* buf = calloc ( len , 4 )"		987937	0					
ANR	996775	IdentifierDeclType	ut8 *		987937	0					
ANR	996776	Identifier	buf		987937	1					
ANR	996777	AssignmentExpression	"* buf = calloc ( len , 4 )"		987937	2		=			
ANR	996778	Identifier	buf		987937	0					
ANR	996779	CallExpression	"calloc ( len , 4 )"		987937	1					
ANR	996780	Callee	calloc		987937	0					
ANR	996781	Identifier	calloc		987937	0					
ANR	996782	ArgumentList	len		987937	1					
ANR	996783	Argument	len		987937	0					
ANR	996784	Identifier	len		987937	0					
ANR	996785	Argument	4		987937	1					
ANR	996786	PrimaryExpression	4		987937	0					
ANR	996787	IfStatement	if ( buf )		987937	1					
ANR	996788	Condition	buf	6341:8:176928:176930	987937	0	True				
ANR	996789	Identifier	buf		987937	0					
ANR	996790	CompoundStatement		1497:13:40896:40896	987937	1					
ANR	996791	ExpressionStatement	"r_io_read_at ( core -> io , core -> offset , buf , len * 4 )"	6342:5:176940:176991	987937	0	True				
ANR	996792	CallExpression	"r_io_read_at ( core -> io , core -> offset , buf , len * 4 )"		987937	0					
ANR	996793	Callee	r_io_read_at		987937	0					
ANR	996794	Identifier	r_io_read_at		987937	0					
ANR	996795	ArgumentList	core -> io		987937	1					
ANR	996796	Argument	core -> io		987937	0					
ANR	996797	PtrMemberAccess	core -> io		987937	0					
ANR	996798	Identifier	core		987937	0					
ANR	996799	Identifier	io		987937	1					
ANR	996800	Argument	core -> offset		987937	1					
ANR	996801	PtrMemberAccess	core -> offset		987937	0					
ANR	996802	Identifier	core		987937	0					
ANR	996803	Identifier	offset		987937	1					
ANR	996804	Argument	buf		987937	2					
ANR	996805	Identifier	buf		987937	0					
ANR	996806	Argument	len * 4		987937	3					
ANR	996807	MultiplicativeExpression	len * 4		987937	0		*			
ANR	996808	Identifier	len		987937	0					
ANR	996809	PrimaryExpression	4		987937	1					
ANR	996810	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_NONHEX	6343:5:176998:177040	987937	1	True				
ANR	996811	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_NONHEX		987937	0		|=			
ANR	996812	PtrMemberAccess	core -> print -> flags		987937	0					
ANR	996813	PtrMemberAccess	core -> print		987937	0					
ANR	996814	Identifier	core		987937	0					
ANR	996815	Identifier	print		987937	1					
ANR	996816	Identifier	flags		987937	1					
ANR	996817	Identifier	R_PRINT_FLAGS_NONHEX		987937	1					
ANR	996818	ExpressionStatement	"r_print_hexdump ( core -> print , core -> offset , buf , len * 4 , 8 , 1 , 1 )"	6344:5:177047:177113	987937	2	True				
ANR	996819	CallExpression	"r_print_hexdump ( core -> print , core -> offset , buf , len * 4 , 8 , 1 , 1 )"		987937	0					
ANR	996820	Callee	r_print_hexdump		987937	0					
ANR	996821	Identifier	r_print_hexdump		987937	0					
ANR	996822	ArgumentList	core -> print		987937	1					
ANR	996823	Argument	core -> print		987937	0					
ANR	996824	PtrMemberAccess	core -> print		987937	0					
ANR	996825	Identifier	core		987937	0					
ANR	996826	Identifier	print		987937	1					
ANR	996827	Argument	core -> offset		987937	1					
ANR	996828	PtrMemberAccess	core -> offset		987937	0					
ANR	996829	Identifier	core		987937	0					
ANR	996830	Identifier	offset		987937	1					
ANR	996831	Argument	buf		987937	2					
ANR	996832	Identifier	buf		987937	0					
ANR	996833	Argument	len * 4		987937	3					
ANR	996834	MultiplicativeExpression	len * 4		987937	0		*			
ANR	996835	Identifier	len		987937	0					
ANR	996836	PrimaryExpression	4		987937	1					
ANR	996837	Argument	8		987937	4					
ANR	996838	PrimaryExpression	8		987937	0					
ANR	996839	Argument	1		987937	5					
ANR	996840	PrimaryExpression	1		987937	0					
ANR	996841	Argument	1		987937	6					
ANR	996842	PrimaryExpression	1		987937	0					
ANR	996843	ExpressionStatement	core -> print -> flags &= ~R_PRINT_FLAGS_NONHEX	6345:5:177120:177163	987937	3	True				
ANR	996844	AssignmentExpression	core -> print -> flags &= ~R_PRINT_FLAGS_NONHEX		987937	0		&=			
ANR	996845	PtrMemberAccess	core -> print -> flags		987937	0					
ANR	996846	PtrMemberAccess	core -> print		987937	0					
ANR	996847	Identifier	core		987937	0					
ANR	996848	Identifier	print		987937	1					
ANR	996849	Identifier	flags		987937	1					
ANR	996850	Identifier	~R_PRINT_FLAGS_NONHEX		987937	1					
ANR	996851	ExpressionStatement	free ( buf )	6346:5:177170:177180	987937	4	True				
ANR	996852	CallExpression	free ( buf )		987937	0					
ANR	996853	Callee	free		987937	0					
ANR	996854	Identifier	free		987937	0					
ANR	996855	ArgumentList	buf		987937	1					
ANR	996856	Argument	buf		987937	0					
ANR	996857	Identifier	buf		987937	0					
ANR	996858	BreakStatement	break ;	6349:3:177196:177201	987937	20	True				
ANR	996859	Label	case 'A' :	6350:2:177205:177213	987937	21	True				
ANR	996860	IfStatement	if ( input [ 2 ] == '?' )		987937	22					
ANR	996861	Condition	input [ 2 ] == '?'	6351:7:177231:177245	987937	0	True				
ANR	996862	EqualityExpression	input [ 2 ] == '?'		987937	0		==			
ANR	996863	ArrayIndexing	input [ 2 ]		987937	0					
ANR	996864	Identifier	input		987937	0					
ANR	996865	PrimaryExpression	2		987937	1					
ANR	996866	PrimaryExpression	'?'		987937	1					
ANR	996867	CompoundStatement		1507:24:41211:41211	987937	1					
ANR	996868	ExpressionStatement	"r_core_cmd_help ( core , help_msg_pxA )"	6352:4:177254:177290	987937	0	True				
ANR	996869	CallExpression	"r_core_cmd_help ( core , help_msg_pxA )"		987937	0					
ANR	996870	Callee	r_core_cmd_help		987937	0					
ANR	996871	Identifier	r_core_cmd_help		987937	0					
ANR	996872	ArgumentList	core		987937	1					
ANR	996873	Argument	core		987937	0					
ANR	996874	Identifier	core		987937	0					
ANR	996875	Argument	help_msg_pxA		987937	1					
ANR	996876	Identifier	help_msg_pxA		987937	0					
ANR	996877	ElseStatement	else		987937	0					
ANR	996878	IfStatement	if ( l )		987937	0					
ANR	996879	Condition	l	6353:14:177306:177306	987937	0	True				
ANR	996880	Identifier	l		987937	0					
ANR	996881	CompoundStatement		1509:17:41272:41272	987937	1					
ANR	996882	ExpressionStatement	"cmd_print_pxA ( core , len , input + 2 )"	6354:4:177315:177351	987937	0	True				
ANR	996883	CallExpression	"cmd_print_pxA ( core , len , input + 2 )"		987937	0					
ANR	996884	Callee	cmd_print_pxA		987937	0					
ANR	996885	Identifier	cmd_print_pxA		987937	0					
ANR	996886	ArgumentList	core		987937	1					
ANR	996887	Argument	core		987937	0					
ANR	996888	Identifier	core		987937	0					
ANR	996889	Argument	len		987937	1					
ANR	996890	Identifier	len		987937	0					
ANR	996891	Argument	input + 2		987937	2					
ANR	996892	AdditiveExpression	input + 2		987937	0		+			
ANR	996893	Identifier	input		987937	0					
ANR	996894	PrimaryExpression	2		987937	1					
ANR	996895	BreakStatement	break ;	6356:3:177361:177366	987937	23	True				
ANR	996896	Label	case 'b' :	6357:2:177370:177378	987937	24	True				
ANR	996897	IfStatement	if ( l )		987937	25					
ANR	996898	Condition	l	6358:7:177396:177396	987937	0	True				
ANR	996899	Identifier	l		987937	0					
ANR	996900	CompoundStatement		1517:4:41394:41406	987937	1					
ANR	996901	IdentifierDeclStatement	ut32 n ;	6359:4:177405:177411	987937	0	True				
ANR	996902	IdentifierDecl	n		987937	0					
ANR	996903	IdentifierDeclType	ut32		987937	0					
ANR	996904	Identifier	n		987937	1					
ANR	996905	IdentifierDeclStatement	"int i , c ;"	6360:4:177417:177425	987937	1	True				
ANR	996906	IdentifierDecl	i		987937	0					
ANR	996907	IdentifierDeclType	int		987937	0					
ANR	996908	Identifier	i		987937	1					
ANR	996909	IdentifierDecl	c		987937	1					
ANR	996910	IdentifierDeclType	int		987937	0					
ANR	996911	Identifier	c		987937	1					
ANR	996912	IdentifierDeclStatement	char buf [ 32 ] ;	6361:4:177431:177443	987937	2	True				
ANR	996913	IdentifierDecl	buf [ 32 ]		987937	0					
ANR	996914	IdentifierDeclType	char [ 32 ]		987937	0					
ANR	996915	Identifier	buf		987937	1					
ANR	996916	PrimaryExpression	32		987937	2					
ANR	996917	ForStatement	"for ( i = c = 0 ; i < len ; i ++ , c ++ )"		987937	3					
ANR	996918	ForInit	i = c = 0 ;	6362:9:177454:177463	987937	0	True				
ANR	996919	AssignmentExpression	i = c = 0		987937	0		=			
ANR	996920	Identifier	i		987937	0					
ANR	996921	AssignmentExpression	c = 0		987937	1		=			
ANR	996922	Identifier	c		987937	0					
ANR	996923	PrimaryExpression	0		987937	1					
ANR	996924	Condition	i < len	6362:20:177465:177471	987937	1	True				
ANR	996925	RelationalExpression	i < len		987937	0		<			
ANR	996926	Identifier	i		987937	0					
ANR	996927	Identifier	len		987937	1					
ANR	996928	Expression	"i ++ , c ++"	6362:29:177474:177481	987937	2	True				
ANR	996929	PostIncDecOperationExpression	i ++		987937	0					
ANR	996930	Identifier	i		987937	0					
ANR	996931	IncDec	++		987937	1					
ANR	996932	PostIncDecOperationExpression	c ++		987937	1					
ANR	996933	Identifier	c		987937	0					
ANR	996934	IncDec	++		987937	1					
ANR	996935	CompoundStatement		1518:39:41447:41447	987937	3					
ANR	996936	IfStatement	if ( c == 0 )		987937	0					
ANR	996937	Condition	c == 0	6363:9:177495:177500	987937	0	True				
ANR	996938	EqualityExpression	c == 0		987937	0		==			
ANR	996939	Identifier	c		987937	0					
ANR	996940	PrimaryExpression	0		987937	1					
ANR	996941	CompoundStatement		1520:6:41474:41500	987937	1					
ANR	996942	IdentifierDeclStatement	ut64 ea = core -> offset + i ;	6364:6:177511:177537	987937	0	True				
ANR	996943	IdentifierDecl	ea = core -> offset + i		987937	0					
ANR	996944	IdentifierDeclType	ut64		987937	0					
ANR	996945	Identifier	ea		987937	1					
ANR	996946	AssignmentExpression	ea = core -> offset + i		987937	2		=			
ANR	996947	Identifier	ea		987937	0					
ANR	996948	AdditiveExpression	core -> offset + i		987937	1		+			
ANR	996949	PtrMemberAccess	core -> offset		987937	0					
ANR	996950	Identifier	core		987937	0					
ANR	996951	Identifier	offset		987937	1					
ANR	996952	Identifier	i		987937	1					
ANR	996953	IfStatement	if ( core -> print -> pava )		987937	1					
ANR	996954	Condition	core -> print -> pava	6365:10:177549:177565	987937	0	True				
ANR	996955	PtrMemberAccess	core -> print -> pava		987937	0					
ANR	996956	PtrMemberAccess	core -> print		987937	0					
ANR	996957	Identifier	core		987937	0					
ANR	996958	Identifier	print		987937	1					
ANR	996959	Identifier	pava		987937	1					
ANR	996960	CompoundStatement		1522:7:41540:41573	987937	1					
ANR	996961	IdentifierDeclStatement	"ut64 va = r_io_p2v ( core -> io , ea ) ;"	6366:7:177577:177610	987937	0	True				
ANR	996962	IdentifierDecl	"va = r_io_p2v ( core -> io , ea )"		987937	0					
ANR	996963	IdentifierDeclType	ut64		987937	0					
ANR	996964	Identifier	va		987937	1					
ANR	996965	AssignmentExpression	"va = r_io_p2v ( core -> io , ea )"		987937	2		=			
ANR	996966	Identifier	va		987937	0					
ANR	996967	CallExpression	"r_io_p2v ( core -> io , ea )"		987937	1					
ANR	996968	Callee	r_io_p2v		987937	0					
ANR	996969	Identifier	r_io_p2v		987937	0					
ANR	996970	ArgumentList	core -> io		987937	1					
ANR	996971	Argument	core -> io		987937	0					
ANR	996972	PtrMemberAccess	core -> io		987937	0					
ANR	996973	Identifier	core		987937	0					
ANR	996974	Identifier	io		987937	1					
ANR	996975	Argument	ea		987937	1					
ANR	996976	Identifier	ea		987937	0					
ANR	996977	IfStatement	if ( va != UT64_MAX )		987937	1					
ANR	996978	Condition	va != UT64_MAX	6367:11:177623:177636	987937	0	True				
ANR	996979	EqualityExpression	va != UT64_MAX		987937	0		!=			
ANR	996980	Identifier	va		987937	0					
ANR	996981	Identifier	UT64_MAX		987937	1					
ANR	996982	CompoundStatement		1523:27:41602:41602	987937	1					
ANR	996983	ExpressionStatement	ea = va	6368:8:177649:177656	987937	0	True				
ANR	996984	AssignmentExpression	ea = va		987937	0		=			
ANR	996985	Identifier	ea		987937	0					
ANR	996986	Identifier	va		987937	1					
ANR	996987	ExpressionStatement	"r_print_section ( core -> print , ea )"	6371:6:177681:177714	987937	2	True				
ANR	996988	CallExpression	"r_print_section ( core -> print , ea )"		987937	0					
ANR	996989	Callee	r_print_section		987937	0					
ANR	996990	Identifier	r_print_section		987937	0					
ANR	996991	ArgumentList	core -> print		987937	1					
ANR	996992	Argument	core -> print		987937	0					
ANR	996993	PtrMemberAccess	core -> print		987937	0					
ANR	996994	Identifier	core		987937	0					
ANR	996995	Identifier	print		987937	1					
ANR	996996	Argument	ea		987937	1					
ANR	996997	Identifier	ea		987937	0					
ANR	996998	ExpressionStatement	"r_print_offset ( core -> print , ea , 0 , 0 , 0 , 0 , NULL )"	6372:6:177722:177772	987937	3	True				
ANR	996999	CallExpression	"r_print_offset ( core -> print , ea , 0 , 0 , 0 , 0 , NULL )"		987937	0					
ANR	997000	Callee	r_print_offset		987937	0					
ANR	997001	Identifier	r_print_offset		987937	0					
ANR	997002	ArgumentList	core -> print		987937	1					
ANR	997003	Argument	core -> print		987937	0					
ANR	997004	PtrMemberAccess	core -> print		987937	0					
ANR	997005	Identifier	core		987937	0					
ANR	997006	Identifier	print		987937	1					
ANR	997007	Argument	ea		987937	1					
ANR	997008	Identifier	ea		987937	0					
ANR	997009	Argument	0		987937	2					
ANR	997010	PrimaryExpression	0		987937	0					
ANR	997011	Argument	0		987937	3					
ANR	997012	PrimaryExpression	0		987937	0					
ANR	997013	Argument	0		987937	4					
ANR	997014	PrimaryExpression	0		987937	0					
ANR	997015	Argument	0		987937	5					
ANR	997016	PrimaryExpression	0		987937	0					
ANR	997017	Argument	NULL		987937	6					
ANR	997018	Identifier	NULL		987937	0					
ANR	997019	ExpressionStatement	"r_str_bits ( buf , core -> block + i , 8 , NULL )"	6374:5:177786:177828	987937	1	True				
ANR	997020	CallExpression	"r_str_bits ( buf , core -> block + i , 8 , NULL )"		987937	0					
ANR	997021	Callee	r_str_bits		987937	0					
ANR	997022	Identifier	r_str_bits		987937	0					
ANR	997023	ArgumentList	buf		987937	1					
ANR	997024	Argument	buf		987937	0					
ANR	997025	Identifier	buf		987937	0					
ANR	997026	Argument	core -> block + i		987937	1					
ANR	997027	AdditiveExpression	core -> block + i		987937	0		+			
ANR	997028	PtrMemberAccess	core -> block		987937	0					
ANR	997029	Identifier	core		987937	0					
ANR	997030	Identifier	block		987937	1					
ANR	997031	Identifier	i		987937	1					
ANR	997032	Argument	8		987937	2					
ANR	997033	PrimaryExpression	8		987937	0					
ANR	997034	Argument	NULL		987937	3					
ANR	997035	Identifier	NULL		987937	0					
ANR	997036	ExpressionStatement	"memmove ( buf + 5 , buf + 4 , 5 )"	6377:5:177855:177884	987937	2	True				
ANR	997037	CallExpression	"memmove ( buf + 5 , buf + 4 , 5 )"		987937	0					
ANR	997038	Callee	memmove		987937	0					
ANR	997039	Identifier	memmove		987937	0					
ANR	997040	ArgumentList	buf + 5		987937	1					
ANR	997041	Argument	buf + 5		987937	0					
ANR	997042	AdditiveExpression	buf + 5		987937	0		+			
ANR	997043	Identifier	buf		987937	0					
ANR	997044	PrimaryExpression	5		987937	1					
ANR	997045	Argument	buf + 4		987937	1					
ANR	997046	AdditiveExpression	buf + 4		987937	0		+			
ANR	997047	Identifier	buf		987937	0					
ANR	997048	PrimaryExpression	4		987937	1					
ANR	997049	Argument	5		987937	2					
ANR	997050	PrimaryExpression	5		987937	0					
ANR	997051	ExpressionStatement	buf [ 4 ] = 0	6378:5:177891:177901	987937	3	True				
ANR	997052	AssignmentExpression	buf [ 4 ] = 0		987937	0		=			
ANR	997053	ArrayIndexing	buf [ 4 ]		987937	0					
ANR	997054	Identifier	buf		987937	0					
ANR	997055	PrimaryExpression	4		987937	1					
ANR	997056	PrimaryExpression	0		987937	1					
ANR	997057	ExpressionStatement	"r_print_cursor ( core -> print , i , 1 , 1 )"	6380:5:177909:177946	987937	4	True				
ANR	997058	CallExpression	"r_print_cursor ( core -> print , i , 1 , 1 )"		987937	0					
ANR	997059	Callee	r_print_cursor		987937	0					
ANR	997060	Identifier	r_print_cursor		987937	0					
ANR	997061	ArgumentList	core -> print		987937	1					
ANR	997062	Argument	core -> print		987937	0					
ANR	997063	PtrMemberAccess	core -> print		987937	0					
ANR	997064	Identifier	core		987937	0					
ANR	997065	Identifier	print		987937	1					
ANR	997066	Argument	i		987937	1					
ANR	997067	Identifier	i		987937	0					
ANR	997068	Argument	1		987937	2					
ANR	997069	PrimaryExpression	1		987937	0					
ANR	997070	Argument	1		987937	3					
ANR	997071	PrimaryExpression	1		987937	0					
ANR	997072	ExpressionStatement	"r_cons_printf ( ""%s.%s  "" , buf , buf + 5 )"	6381:5:177953:177992	987937	5	True				
ANR	997073	CallExpression	"r_cons_printf ( ""%s.%s  "" , buf , buf + 5 )"		987937	0					
ANR	997074	Callee	r_cons_printf		987937	0					
ANR	997075	Identifier	r_cons_printf		987937	0					
ANR	997076	ArgumentList	"""%s.%s  """		987937	1					
ANR	997077	Argument	"""%s.%s  """		987937	0					
ANR	997078	PrimaryExpression	"""%s.%s  """		987937	0					
ANR	997079	Argument	buf		987937	1					
ANR	997080	Identifier	buf		987937	0					
ANR	997081	Argument	buf + 5		987937	2					
ANR	997082	AdditiveExpression	buf + 5		987937	0		+			
ANR	997083	Identifier	buf		987937	0					
ANR	997084	PrimaryExpression	5		987937	1					
ANR	997085	ExpressionStatement	"r_print_cursor ( core -> print , i , 1 , 0 )"	6382:5:177999:178036	987937	6	True				
ANR	997086	CallExpression	"r_print_cursor ( core -> print , i , 1 , 0 )"		987937	0					
ANR	997087	Callee	r_print_cursor		987937	0					
ANR	997088	Identifier	r_print_cursor		987937	0					
ANR	997089	ArgumentList	core -> print		987937	1					
ANR	997090	Argument	core -> print		987937	0					
ANR	997091	PtrMemberAccess	core -> print		987937	0					
ANR	997092	Identifier	core		987937	0					
ANR	997093	Identifier	print		987937	1					
ANR	997094	Argument	i		987937	1					
ANR	997095	Identifier	i		987937	0					
ANR	997096	Argument	1		987937	2					
ANR	997097	PrimaryExpression	1		987937	0					
ANR	997098	Argument	0		987937	3					
ANR	997099	PrimaryExpression	0		987937	0					
ANR	997100	IfStatement	if ( c == 3 )		987937	7					
ANR	997101	Condition	c == 3	6383:9:178047:178052	987937	0	True				
ANR	997102	EqualityExpression	c == 3		987937	0		==			
ANR	997103	Identifier	c		987937	0					
ANR	997104	PrimaryExpression	3		987937	1					
ANR	997105	CompoundStatement		1542:6:42115:42143	987937	1					
ANR	997106	IdentifierDeclStatement	const ut8 * b = core -> block + i - 3 ;	6384:6:178063:178097	987937	0	True				
ANR	997107	IdentifierDecl	* b = core -> block + i - 3		987937	0					
ANR	997108	IdentifierDeclType	const ut8 *		987937	0					
ANR	997109	Identifier	b		987937	1					
ANR	997110	AssignmentExpression	* b = core -> block + i - 3		987937	2		=			
ANR	997111	Identifier	b		987937	0					
ANR	997112	AdditiveExpression	core -> block + i - 3		987937	1		+			
ANR	997113	PtrMemberAccess	core -> block		987937	0					
ANR	997114	Identifier	core		987937	0					
ANR	997115	Identifier	block		987937	1					
ANR	997116	AdditiveExpression	i - 3		987937	1		-			
ANR	997117	Identifier	i		987937	0					
ANR	997118	PrimaryExpression	3		987937	1					
ANR	997119	IdentifierDeclStatement	"int ( * k ) ( const ut8 * , int ) = cmd_pxb_k ;"	6385:6:178105:178144	987937	1	True				
ANR	997120	IdentifierDecl	"( * k ) ( const ut8 * , int ) = cmd_pxb_k"		987937	0					
ANR	997121	IdentifierDeclType	"int ( * ) ( const ut8 * , int )"		987937	0					
ANR	997122	Identifier	k		987937	1					
ANR	997123	AssignmentExpression	"( * k ) ( const ut8 * , int ) = cmd_pxb_k"		987937	2		=			
ANR	997124	Identifier	cmd_pxb_k		987937	0					
ANR	997125	Identifier	cmd_pxb_k		987937	1					
ANR	997126	IdentifierDeclStatement	char ( * p ) ( char ) = cmd_pxb_p ;	6386:6:178152:178180	987937	2	True				
ANR	997127	IdentifierDecl	( * p ) ( char ) = cmd_pxb_p		987937	0					
ANR	997128	IdentifierDeclType	char ( * ) ( char )		987937	0					
ANR	997129	Identifier	p		987937	1					
ANR	997130	AssignmentExpression	( * p ) ( char ) = cmd_pxb_p		987937	2		=			
ANR	997131	Identifier	cmd_pxb_p		987937	0					
ANR	997132	Identifier	cmd_pxb_p		987937	1					
ANR	997133	ExpressionStatement	"n = k ( b , 0 ) | k ( b , 1 ) | k ( b , 2 ) | k ( b , 3 )"	6388:6:178189:178234	987937	3	True				
ANR	997134	AssignmentExpression	"n = k ( b , 0 ) | k ( b , 1 ) | k ( b , 2 ) | k ( b , 3 )"		987937	0		=			
ANR	997135	Identifier	n		987937	0					
ANR	997136	InclusiveOrExpression	"k ( b , 0 ) | k ( b , 1 ) | k ( b , 2 ) | k ( b , 3 )"		987937	1		|			
ANR	997137	CallExpression	"k ( b , 0 )"		987937	0					
ANR	997138	Callee	k		987937	0					
ANR	997139	Identifier	k		987937	0					
ANR	997140	ArgumentList	b		987937	1					
ANR	997141	Argument	b		987937	0					
ANR	997142	Identifier	b		987937	0					
ANR	997143	Argument	0		987937	1					
ANR	997144	PrimaryExpression	0		987937	0					
ANR	997145	InclusiveOrExpression	"k ( b , 1 ) | k ( b , 2 ) | k ( b , 3 )"		987937	1		|			
ANR	997146	CallExpression	"k ( b , 1 )"		987937	0					
ANR	997147	Callee	k		987937	0					
ANR	997148	Identifier	k		987937	0					
ANR	997149	ArgumentList	b		987937	1					
ANR	997150	Argument	b		987937	0					
ANR	997151	Identifier	b		987937	0					
ANR	997152	Argument	1		987937	1					
ANR	997153	PrimaryExpression	1		987937	0					
ANR	997154	InclusiveOrExpression	"k ( b , 2 ) | k ( b , 3 )"		987937	1		|			
ANR	997155	CallExpression	"k ( b , 2 )"		987937	0					
ANR	997156	Callee	k		987937	0					
ANR	997157	Identifier	k		987937	0					
ANR	997158	ArgumentList	b		987937	1					
ANR	997159	Argument	b		987937	0					
ANR	997160	Identifier	b		987937	0					
ANR	997161	Argument	2		987937	1					
ANR	997162	PrimaryExpression	2		987937	0					
ANR	997163	CallExpression	"k ( b , 3 )"		987937	1					
ANR	997164	Callee	k		987937	0					
ANR	997165	Identifier	k		987937	0					
ANR	997166	ArgumentList	b		987937	1					
ANR	997167	Argument	b		987937	0					
ANR	997168	Identifier	b		987937	0					
ANR	997169	Argument	3		987937	1					
ANR	997170	PrimaryExpression	3		987937	0					
ANR	997171	ExpressionStatement	"r_cons_printf ( ""0x%08x  %c%c%c%c\\n"" , n , p ( b [ 0 ] ) , p ( b [ 1 ] ) , p ( b [ 2 ] ) , p ( b [ 3 ] ) )"	6389:6:178242:178328	987937	4	True				
ANR	997172	CallExpression	"r_cons_printf ( ""0x%08x  %c%c%c%c\\n"" , n , p ( b [ 0 ] ) , p ( b [ 1 ] ) , p ( b [ 2 ] ) , p ( b [ 3 ] ) )"		987937	0					
ANR	997173	Callee	r_cons_printf		987937	0					
ANR	997174	Identifier	r_cons_printf		987937	0					
ANR	997175	ArgumentList	"""0x%08x  %c%c%c%c\\n"""		987937	1					
ANR	997176	Argument	"""0x%08x  %c%c%c%c\\n"""		987937	0					
ANR	997177	PrimaryExpression	"""0x%08x  %c%c%c%c\\n"""		987937	0					
ANR	997178	Argument	n		987937	1					
ANR	997179	Identifier	n		987937	0					
ANR	997180	Argument	p ( b [ 0 ] )		987937	2					
ANR	997181	CallExpression	p ( b [ 0 ] )		987937	0					
ANR	997182	Callee	p		987937	0					
ANR	997183	Identifier	p		987937	0					
ANR	997184	ArgumentList	b [ 0 ]		987937	1					
ANR	997185	Argument	b [ 0 ]		987937	0					
ANR	997186	ArrayIndexing	b [ 0 ]		987937	0					
ANR	997187	Identifier	b		987937	0					
ANR	997188	PrimaryExpression	0		987937	1					
ANR	997189	Argument	p ( b [ 1 ] )		987937	3					
ANR	997190	CallExpression	p ( b [ 1 ] )		987937	0					
ANR	997191	Callee	p		987937	0					
ANR	997192	Identifier	p		987937	0					
ANR	997193	ArgumentList	b [ 1 ]		987937	1					
ANR	997194	Argument	b [ 1 ]		987937	0					
ANR	997195	ArrayIndexing	b [ 1 ]		987937	0					
ANR	997196	Identifier	b		987937	0					
ANR	997197	PrimaryExpression	1		987937	1					
ANR	997198	Argument	p ( b [ 2 ] )		987937	4					
ANR	997199	CallExpression	p ( b [ 2 ] )		987937	0					
ANR	997200	Callee	p		987937	0					
ANR	997201	Identifier	p		987937	0					
ANR	997202	ArgumentList	b [ 2 ]		987937	1					
ANR	997203	Argument	b [ 2 ]		987937	0					
ANR	997204	ArrayIndexing	b [ 2 ]		987937	0					
ANR	997205	Identifier	b		987937	0					
ANR	997206	PrimaryExpression	2		987937	1					
ANR	997207	Argument	p ( b [ 3 ] )		987937	5					
ANR	997208	CallExpression	p ( b [ 3 ] )		987937	0					
ANR	997209	Callee	p		987937	0					
ANR	997210	Identifier	p		987937	0					
ANR	997211	ArgumentList	b [ 3 ]		987937	1					
ANR	997212	Argument	b [ 3 ]		987937	0					
ANR	997213	ArrayIndexing	b [ 3 ]		987937	0					
ANR	997214	Identifier	b		987937	0					
ANR	997215	PrimaryExpression	3		987937	1					
ANR	997216	ExpressionStatement	c = - 1	6391:6:178336:178342	987937	5	True				
ANR	997217	AssignmentExpression	c = - 1		987937	0		=			
ANR	997218	Identifier	c		987937	0					
ANR	997219	UnaryOperationExpression	- 1		987937	1					
ANR	997220	UnaryOperator	-		987937	0					
ANR	997221	PrimaryExpression	1		987937	1					
ANR	997222	BreakStatement	break ;	6395:3:178365:178370	987937	26	True				
ANR	997223	Label	case 'c' :	6396:2:178374:178382	987937	27	True				
ANR	997224	CompoundStatement		1554:3:42364:42405	987937	28					
ANR	997225	IdentifierDeclStatement	int ocomments = core -> print -> use_comments ;	6398:3:178401:178442	987937	0	True				
ANR	997226	IdentifierDecl	ocomments = core -> print -> use_comments		987937	0					
ANR	997227	IdentifierDeclType	int		987937	0					
ANR	997228	Identifier	ocomments		987937	1					
ANR	997229	AssignmentExpression	ocomments = core -> print -> use_comments		987937	2		=			
ANR	997230	Identifier	ocomments		987937	0					
ANR	997231	PtrMemberAccess	core -> print -> use_comments		987937	1					
ANR	997232	PtrMemberAccess	core -> print		987937	0					
ANR	997233	Identifier	core		987937	0					
ANR	997234	Identifier	print		987937	1					
ANR	997235	Identifier	use_comments		987937	1					
ANR	997236	ExpressionStatement	core -> print -> use_comments = core -> print -> flags & R_PRINT_FLAGS_COMMENT	6399:3:178447:178517	987937	1	True				
ANR	997237	AssignmentExpression	core -> print -> use_comments = core -> print -> flags & R_PRINT_FLAGS_COMMENT		987937	0		=			
ANR	997238	PtrMemberAccess	core -> print -> use_comments		987937	0					
ANR	997239	PtrMemberAccess	core -> print		987937	0					
ANR	997240	Identifier	core		987937	0					
ANR	997241	Identifier	print		987937	1					
ANR	997242	Identifier	use_comments		987937	1					
ANR	997243	BitAndExpression	core -> print -> flags & R_PRINT_FLAGS_COMMENT		987937	1		&			
ANR	997244	PtrMemberAccess	core -> print -> flags		987937	0					
ANR	997245	PtrMemberAccess	core -> print		987937	0					
ANR	997246	Identifier	core		987937	0					
ANR	997247	Identifier	print		987937	1					
ANR	997248	Identifier	flags		987937	1					
ANR	997249	Identifier	R_PRINT_FLAGS_COMMENT		987937	1					
ANR	997250	IfStatement	if ( l )		987937	2					
ANR	997251	Condition	l	6400:7:178526:178526	987937	0	True				
ANR	997252	Identifier	l		987937	0					
ANR	997253	CompoundStatement		1558:4:42558:42608	987937	1					
ANR	997254	IdentifierDeclStatement	"ut64 from = r_config_get_i ( core -> config , ""diff.from"" ) ;"	6401:4:178535:178589	987937	0	True				
ANR	997255	IdentifierDecl	"from = r_config_get_i ( core -> config , ""diff.from"" )"		987937	0					
ANR	997256	IdentifierDeclType	ut64		987937	0					
ANR	997257	Identifier	from		987937	1					
ANR	997258	AssignmentExpression	"from = r_config_get_i ( core -> config , ""diff.from"" )"		987937	2		=			
ANR	997259	Identifier	from		987937	0					
ANR	997260	CallExpression	"r_config_get_i ( core -> config , ""diff.from"" )"		987937	1					
ANR	997261	Callee	r_config_get_i		987937	0					
ANR	997262	Identifier	r_config_get_i		987937	0					
ANR	997263	ArgumentList	core -> config		987937	1					
ANR	997264	Argument	core -> config		987937	0					
ANR	997265	PtrMemberAccess	core -> config		987937	0					
ANR	997266	Identifier	core		987937	0					
ANR	997267	Identifier	config		987937	1					
ANR	997268	Argument	"""diff.from"""		987937	1					
ANR	997269	PrimaryExpression	"""diff.from"""		987937	0					
ANR	997270	IdentifierDeclStatement	"ut64 to = r_config_get_i ( core -> config , ""diff.to"" ) ;"	6402:4:178595:178645	987937	1	True				
ANR	997271	IdentifierDecl	"to = r_config_get_i ( core -> config , ""diff.to"" )"		987937	0					
ANR	997272	IdentifierDeclType	ut64		987937	0					
ANR	997273	Identifier	to		987937	1					
ANR	997274	AssignmentExpression	"to = r_config_get_i ( core -> config , ""diff.to"" )"		987937	2		=			
ANR	997275	Identifier	to		987937	0					
ANR	997276	CallExpression	"r_config_get_i ( core -> config , ""diff.to"" )"		987937	1					
ANR	997277	Callee	r_config_get_i		987937	0					
ANR	997278	Identifier	r_config_get_i		987937	0					
ANR	997279	ArgumentList	core -> config		987937	1					
ANR	997280	Argument	core -> config		987937	0					
ANR	997281	PtrMemberAccess	core -> config		987937	0					
ANR	997282	Identifier	core		987937	0					
ANR	997283	Identifier	config		987937	1					
ANR	997284	Argument	"""diff.to"""		987937	1					
ANR	997285	PrimaryExpression	"""diff.to"""		987937	0					
ANR	997286	IfStatement	if ( from == to && ! from )		987937	2					
ANR	997287	Condition	from == to && ! from	6403:8:178655:178673	987937	0	True				
ANR	997288	AndExpression	from == to && ! from		987937	0		&&			
ANR	997289	EqualityExpression	from == to		987937	0		==			
ANR	997290	Identifier	from		987937	0					
ANR	997291	Identifier	to		987937	1					
ANR	997292	UnaryOperationExpression	! from		987937	1					
ANR	997293	UnaryOperator	!		987937	0					
ANR	997294	Identifier	from		987937	1					
ANR	997295	CompoundStatement		1559:29:42639:42639	987937	1					
ANR	997296	ExpressionStatement	"r_core_block_size ( core , len )"	6404:5:178683:178712	987937	0	True				
ANR	997297	CallExpression	"r_core_block_size ( core , len )"		987937	0					
ANR	997298	Callee	r_core_block_size		987937	0					
ANR	997299	Identifier	r_core_block_size		987937	0					
ANR	997300	ArgumentList	core		987937	1					
ANR	997301	Argument	core		987937	0					
ANR	997302	Identifier	core		987937	0					
ANR	997303	Argument	len		987937	1					
ANR	997304	Identifier	len		987937	0					
ANR	997305	ExpressionStatement	len = core -> blocksize	6405:5:178719:178740	987937	1	True				
ANR	997306	AssignmentExpression	len = core -> blocksize		987937	0		=			
ANR	997307	Identifier	len		987937	0					
ANR	997308	PtrMemberAccess	core -> blocksize		987937	1					
ANR	997309	Identifier	core		987937	0					
ANR	997310	Identifier	blocksize		987937	1					
ANR	997311	ExpressionStatement	"r_print_hexdump ( core -> print , core -> offset , core -> block , core -> blocksize , 16 , 1 , 1 )"	6406:5:178747:178836	987937	2	True				
ANR	997312	CallExpression	"r_print_hexdump ( core -> print , core -> offset , core -> block , core -> blocksize , 16 , 1 , 1 )"		987937	0					
ANR	997313	Callee	r_print_hexdump		987937	0					
ANR	997314	Identifier	r_print_hexdump		987937	0					
ANR	997315	ArgumentList	core -> print		987937	1					
ANR	997316	Argument	core -> print		987937	0					
ANR	997317	PtrMemberAccess	core -> print		987937	0					
ANR	997318	Identifier	core		987937	0					
ANR	997319	Identifier	print		987937	1					
ANR	997320	Argument	core -> offset		987937	1					
ANR	997321	PtrMemberAccess	core -> offset		987937	0					
ANR	997322	Identifier	core		987937	0					
ANR	997323	Identifier	offset		987937	1					
ANR	997324	Argument	core -> block		987937	2					
ANR	997325	PtrMemberAccess	core -> block		987937	0					
ANR	997326	Identifier	core		987937	0					
ANR	997327	Identifier	block		987937	1					
ANR	997328	Argument	core -> blocksize		987937	3					
ANR	997329	PtrMemberAccess	core -> blocksize		987937	0					
ANR	997330	Identifier	core		987937	0					
ANR	997331	Identifier	blocksize		987937	1					
ANR	997332	Argument	16		987937	4					
ANR	997333	PrimaryExpression	16		987937	0					
ANR	997334	Argument	1		987937	5					
ANR	997335	PrimaryExpression	1		987937	0					
ANR	997336	Argument	1		987937	6					
ANR	997337	PrimaryExpression	1		987937	0					
ANR	997338	ElseStatement	else		987937	0					
ANR	997339	CompoundStatement		1564:11:42812:42812	987937	0					
ANR	997340	ExpressionStatement	"r_core_print_cmp ( core , from , to )"	6409:5:178856:178889	987937	0	True				
ANR	997341	CallExpression	"r_core_print_cmp ( core , from , to )"		987937	0					
ANR	997342	Callee	r_core_print_cmp		987937	0					
ANR	997343	Identifier	r_core_print_cmp		987937	0					
ANR	997344	ArgumentList	core		987937	1					
ANR	997345	Argument	core		987937	0					
ANR	997346	Identifier	core		987937	0					
ANR	997347	Argument	from		987937	1					
ANR	997348	Identifier	from		987937	0					
ANR	997349	Argument	to		987937	2					
ANR	997350	Identifier	to		987937	0					
ANR	997351	ExpressionStatement	core -> num -> value = len	6411:4:178901:178923	987937	3	True				
ANR	997352	AssignmentExpression	core -> num -> value = len		987937	0		=			
ANR	997353	PtrMemberAccess	core -> num -> value		987937	0					
ANR	997354	PtrMemberAccess	core -> num		987937	0					
ANR	997355	Identifier	core		987937	0					
ANR	997356	Identifier	num		987937	1					
ANR	997357	Identifier	value		987937	1					
ANR	997358	Identifier	len		987937	1					
ANR	997359	ExpressionStatement	core -> print -> use_comments = ocomments	6413:3:178933:178970	987937	3	True				
ANR	997360	AssignmentExpression	core -> print -> use_comments = ocomments		987937	0		=			
ANR	997361	PtrMemberAccess	core -> print -> use_comments		987937	0					
ANR	997362	PtrMemberAccess	core -> print		987937	0					
ANR	997363	Identifier	core		987937	0					
ANR	997364	Identifier	print		987937	1					
ANR	997365	Identifier	use_comments		987937	1					
ANR	997366	Identifier	ocomments		987937	1					
ANR	997367	BreakStatement	break ;	6415:3:178980:178985	987937	29	True				
ANR	997368	Label	case 'i' :	6416:2:178989:178997	987937	30	True				
ANR	997369	IfStatement	if ( l != 0 )		987937	31					
ANR	997370	Condition	l != 0	6417:7:179015:179020	987937	0	True				
ANR	997371	EqualityExpression	l != 0		987937	0		!=			
ANR	997372	Identifier	l		987937	0					
ANR	997373	PrimaryExpression	0		987937	1					
ANR	997374	CompoundStatement		1573:15:42986:42986	987937	1					
ANR	997375	ExpressionStatement	"r_print_hexii ( core -> print , core -> offset , core -> block , core -> blocksize , r_config_get_i ( core -> config , ""hex.cols"" ) )"	6418:4:179029:179148	987937	0	True				
ANR	997376	CallExpression	"r_print_hexii ( core -> print , core -> offset , core -> block , core -> blocksize , r_config_get_i ( core -> config , ""hex.cols"" ) )"		987937	0					
ANR	997377	Callee	r_print_hexii		987937	0					
ANR	997378	Identifier	r_print_hexii		987937	0					
ANR	997379	ArgumentList	core -> print		987937	1					
ANR	997380	Argument	core -> print		987937	0					
ANR	997381	PtrMemberAccess	core -> print		987937	0					
ANR	997382	Identifier	core		987937	0					
ANR	997383	Identifier	print		987937	1					
ANR	997384	Argument	core -> offset		987937	1					
ANR	997385	PtrMemberAccess	core -> offset		987937	0					
ANR	997386	Identifier	core		987937	0					
ANR	997387	Identifier	offset		987937	1					
ANR	997388	Argument	core -> block		987937	2					
ANR	997389	PtrMemberAccess	core -> block		987937	0					
ANR	997390	Identifier	core		987937	0					
ANR	997391	Identifier	block		987937	1					
ANR	997392	Argument	core -> blocksize		987937	3					
ANR	997393	PtrMemberAccess	core -> blocksize		987937	0					
ANR	997394	Identifier	core		987937	0					
ANR	997395	Identifier	blocksize		987937	1					
ANR	997396	Argument	"r_config_get_i ( core -> config , ""hex.cols"" )"		987937	4					
ANR	997397	CallExpression	"r_config_get_i ( core -> config , ""hex.cols"" )"		987937	0					
ANR	997398	Callee	r_config_get_i		987937	0					
ANR	997399	Identifier	r_config_get_i		987937	0					
ANR	997400	ArgumentList	core -> config		987937	1					
ANR	997401	Argument	core -> config		987937	0					
ANR	997402	PtrMemberAccess	core -> config		987937	0					
ANR	997403	Identifier	core		987937	0					
ANR	997404	Identifier	config		987937	1					
ANR	997405	Argument	"""hex.cols"""		987937	1					
ANR	997406	PrimaryExpression	"""hex.cols"""		987937	0					
ANR	997407	BreakStatement	break ;	6421:3:179158:179163	987937	32	True				
ANR	997408	Label	case 'o' :	6422:2:179167:179175	987937	33	True				
ANR	997409	IfStatement	if ( l != 0 )		987937	34					
ANR	997410	Condition	l != 0	6423:7:179193:179198	987937	0	True				
ANR	997411	EqualityExpression	l != 0		987937	0		!=			
ANR	997412	Identifier	l		987937	0					
ANR	997413	PrimaryExpression	0		987937	1					
ANR	997414	CompoundStatement		1579:15:43164:43164	987937	1					
ANR	997415	ExpressionStatement	"r_print_hexdump ( core -> print , core -> offset , core -> block , len , 8 , 1 , 1 )"	6424:4:179207:179282	987937	0	True				
ANR	997416	CallExpression	"r_print_hexdump ( core -> print , core -> offset , core -> block , len , 8 , 1 , 1 )"		987937	0					
ANR	997417	Callee	r_print_hexdump		987937	0					
ANR	997418	Identifier	r_print_hexdump		987937	0					
ANR	997419	ArgumentList	core -> print		987937	1					
ANR	997420	Argument	core -> print		987937	0					
ANR	997421	PtrMemberAccess	core -> print		987937	0					
ANR	997422	Identifier	core		987937	0					
ANR	997423	Identifier	print		987937	1					
ANR	997424	Argument	core -> offset		987937	1					
ANR	997425	PtrMemberAccess	core -> offset		987937	0					
ANR	997426	Identifier	core		987937	0					
ANR	997427	Identifier	offset		987937	1					
ANR	997428	Argument	core -> block		987937	2					
ANR	997429	PtrMemberAccess	core -> block		987937	0					
ANR	997430	Identifier	core		987937	0					
ANR	997431	Identifier	block		987937	1					
ANR	997432	Argument	len		987937	3					
ANR	997433	Identifier	len		987937	0					
ANR	997434	Argument	8		987937	4					
ANR	997435	PrimaryExpression	8		987937	0					
ANR	997436	Argument	1		987937	5					
ANR	997437	PrimaryExpression	1		987937	0					
ANR	997438	Argument	1		987937	6					
ANR	997439	PrimaryExpression	1		987937	0					
ANR	997440	BreakStatement	break ;	6427:3:179292:179297	987937	35	True				
ANR	997441	Label	case 't' :	6428:2:179301:179309	987937	36	True				
ANR	997442	CompoundStatement		1594:3:43626:43654	987937	37					
ANR	997443	IdentifierDeclStatement	ut64 origin = core -> offset ;	6430:3:179328:179354	987937	0	True				
ANR	997444	IdentifierDecl	origin = core -> offset		987937	0					
ANR	997445	IdentifierDeclType	ut64		987937	0					
ANR	997446	Identifier	origin		987937	1					
ANR	997447	AssignmentExpression	origin = core -> offset		987937	2		=			
ANR	997448	Identifier	origin		987937	0					
ANR	997449	PtrMemberAccess	core -> offset		987937	1					
ANR	997450	Identifier	core		987937	0					
ANR	997451	Identifier	offset		987937	1					
ANR	997452	IdentifierDeclStatement	"const char * arg = strchr ( input , ' ' ) ;"	6431:3:179359:179396	987937	1	True				
ANR	997453	IdentifierDecl	"* arg = strchr ( input , ' ' )"		987937	0					
ANR	997454	IdentifierDeclType	const char *		987937	0					
ANR	997455	Identifier	arg		987937	1					
ANR	997456	AssignmentExpression	"* arg = strchr ( input , ' ' )"		987937	2		=			
ANR	997457	Identifier	arg		987937	0					
ANR	997458	CallExpression	"strchr ( input , ' ' )"		987937	1					
ANR	997459	Callee	strchr		987937	0					
ANR	997460	Identifier	strchr		987937	0					
ANR	997461	ArgumentList	input		987937	1					
ANR	997462	Argument	input		987937	0					
ANR	997463	Identifier	input		987937	0					
ANR	997464	Argument	' '		987937	1					
ANR	997465	PrimaryExpression	' '		987937	0					
ANR	997466	IfStatement	if ( arg )		987937	2					
ANR	997467	Condition	arg	6432:7:179405:179407	987937	0	True				
ANR	997468	Identifier	arg		987937	0					
ANR	997469	CompoundStatement		1588:12:43373:43373	987937	1					
ANR	997470	ExpressionStatement	"origin = r_num_math ( core -> num , arg + 1 )"	6433:4:179416:179456	987937	0	True				
ANR	997471	AssignmentExpression	"origin = r_num_math ( core -> num , arg + 1 )"		987937	0		=			
ANR	997472	Identifier	origin		987937	0					
ANR	997473	CallExpression	"r_num_math ( core -> num , arg + 1 )"		987937	1					
ANR	997474	Callee	r_num_math		987937	0					
ANR	997475	Identifier	r_num_math		987937	0					
ANR	997476	ArgumentList	core -> num		987937	1					
ANR	997477	Argument	core -> num		987937	0					
ANR	997478	PtrMemberAccess	core -> num		987937	0					
ANR	997479	Identifier	core		987937	0					
ANR	997480	Identifier	num		987937	1					
ANR	997481	Argument	arg + 1		987937	1					
ANR	997482	AdditiveExpression	arg + 1		987937	0		+			
ANR	997483	Identifier	arg		987937	0					
ANR	997484	PrimaryExpression	1		987937	1					
ANR	997485	IdentifierDeclStatement	"ut8 * block = calloc ( len , 1 ) ;"	6438:3:179663:179691	987937	3	True				
ANR	997486	IdentifierDecl	"* block = calloc ( len , 1 )"		987937	0					
ANR	997487	IdentifierDeclType	ut8 *		987937	0					
ANR	997488	Identifier	block		987937	1					
ANR	997489	AssignmentExpression	"* block = calloc ( len , 1 )"		987937	2		=			
ANR	997490	Identifier	block		987937	0					
ANR	997491	CallExpression	"calloc ( len , 1 )"		987937	1					
ANR	997492	Callee	calloc		987937	0					
ANR	997493	Identifier	calloc		987937	0					
ANR	997494	ArgumentList	len		987937	1					
ANR	997495	Argument	len		987937	0					
ANR	997496	Identifier	len		987937	0					
ANR	997497	Argument	1		987937	1					
ANR	997498	PrimaryExpression	1		987937	0					
ANR	997499	IfStatement	if ( block )		987937	4					
ANR	997500	Condition	block	6439:7:179700:179704	987937	0	True				
ANR	997501	Identifier	block		987937	0					
ANR	997502	CompoundStatement		1595:14:43670:43670	987937	1					
ANR	997503	ExpressionStatement	"memcpy ( block , core -> block , len )"	6440:4:179713:179745	987937	0	True				
ANR	997504	CallExpression	"memcpy ( block , core -> block , len )"		987937	0					
ANR	997505	Callee	memcpy		987937	0					
ANR	997506	Identifier	memcpy		987937	0					
ANR	997507	ArgumentList	block		987937	1					
ANR	997508	Argument	block		987937	0					
ANR	997509	Identifier	block		987937	0					
ANR	997510	Argument	core -> block		987937	1					
ANR	997511	PtrMemberAccess	core -> block		987937	0					
ANR	997512	Identifier	core		987937	0					
ANR	997513	Identifier	block		987937	1					
ANR	997514	Argument	len		987937	2					
ANR	997515	Identifier	len		987937	0					
ANR	997516	ExpressionStatement	"_pointer_table ( core , origin , core -> offset , block , len , 4 , input [ 2 ] )"	6441:4:179751:179819	987937	1	True				
ANR	997517	CallExpression	"_pointer_table ( core , origin , core -> offset , block , len , 4 , input [ 2 ] )"		987937	0					
ANR	997518	Callee	_pointer_table		987937	0					
ANR	997519	Identifier	_pointer_table		987937	0					
ANR	997520	ArgumentList	core		987937	1					
ANR	997521	Argument	core		987937	0					
ANR	997522	Identifier	core		987937	0					
ANR	997523	Argument	origin		987937	1					
ANR	997524	Identifier	origin		987937	0					
ANR	997525	Argument	core -> offset		987937	2					
ANR	997526	PtrMemberAccess	core -> offset		987937	0					
ANR	997527	Identifier	core		987937	0					
ANR	997528	Identifier	offset		987937	1					
ANR	997529	Argument	block		987937	3					
ANR	997530	Identifier	block		987937	0					
ANR	997531	Argument	len		987937	4					
ANR	997532	Identifier	len		987937	0					
ANR	997533	Argument	4		987937	5					
ANR	997534	PrimaryExpression	4		987937	0					
ANR	997535	Argument	input [ 2 ]		987937	6					
ANR	997536	ArrayIndexing	input [ 2 ]		987937	0					
ANR	997537	Identifier	input		987937	0					
ANR	997538	PrimaryExpression	2		987937	1					
ANR	997539	ExpressionStatement	free ( block )	6442:4:179825:179837	987937	2	True				
ANR	997540	CallExpression	free ( block )		987937	0					
ANR	997541	Callee	free		987937	0					
ANR	997542	Identifier	free		987937	0					
ANR	997543	ArgumentList	block		987937	1					
ANR	997544	Argument	block		987937	0					
ANR	997545	Identifier	block		987937	0					
ANR	997546	BreakStatement	break ;	6445:3:179852:179857	987937	38	True				
ANR	997547	Label	case 'd' :	6446:2:179861:179869	987937	39	True				
ANR	997548	IfStatement	if ( input [ 2 ] == '?' )		987937	40					
ANR	997549	Condition	input [ 2 ] == '?'	6447:7:179887:179901	987937	0	True				
ANR	997550	EqualityExpression	input [ 2 ] == '?'		987937	0		==			
ANR	997551	ArrayIndexing	input [ 2 ]		987937	0					
ANR	997552	Identifier	input		987937	0					
ANR	997553	PrimaryExpression	2		987937	1					
ANR	997554	PrimaryExpression	'?'		987937	1					
ANR	997555	CompoundStatement		1603:24:43867:43867	987937	1					
ANR	997556	ExpressionStatement	"r_core_cmd_help ( core , help_msg_pxd )"	6448:4:179910:179946	987937	0	True				
ANR	997557	CallExpression	"r_core_cmd_help ( core , help_msg_pxd )"		987937	0					
ANR	997558	Callee	r_core_cmd_help		987937	0					
ANR	997559	Identifier	r_core_cmd_help		987937	0					
ANR	997560	ArgumentList	core		987937	1					
ANR	997561	Argument	core		987937	0					
ANR	997562	Identifier	core		987937	0					
ANR	997563	Argument	help_msg_pxd		987937	1					
ANR	997564	Identifier	help_msg_pxd		987937	0					
ANR	997565	ElseStatement	else		987937	0					
ANR	997566	IfStatement	if ( l != 0 )		987937	0					
ANR	997567	Condition	l != 0	6449:14:179962:179967	987937	0	True				
ANR	997568	EqualityExpression	l != 0		987937	0		!=			
ANR	997569	Identifier	l		987937	0					
ANR	997570	PrimaryExpression	0		987937	1					
ANR	997571	CompoundStatement		1605:22:43933:43933	987937	1					
ANR	997572	SwitchStatement	switch ( input [ 2 ] )		987937	0					
ANR	997573	Condition	input [ 2 ]	6450:12:179984:179991	987937	0	True				
ANR	997574	ArrayIndexing	input [ 2 ]		987937	0					
ANR	997575	Identifier	input		987937	0					
ANR	997576	PrimaryExpression	2		987937	1					
ANR	997577	CompoundStatement		1606:22:43957:43957	987937	1					
ANR	997578	Label	case '1' :	6451:4:180000:180008	987937	0	True				
ANR	997579	ExpressionStatement	"r_print_hexdump ( core -> print , core -> offset , core -> block , len , - 1 , 4 , 1 )"	6453:5:180050:180128	987937	1	True				
ANR	997580	CallExpression	"r_print_hexdump ( core -> print , core -> offset , core -> block , len , - 1 , 4 , 1 )"		987937	0					
ANR	997581	Callee	r_print_hexdump		987937	0					
ANR	997582	Identifier	r_print_hexdump		987937	0					
ANR	997583	ArgumentList	core -> print		987937	1					
ANR	997584	Argument	core -> print		987937	0					
ANR	997585	PtrMemberAccess	core -> print		987937	0					
ANR	997586	Identifier	core		987937	0					
ANR	997587	Identifier	print		987937	1					
ANR	997588	Argument	core -> offset		987937	1					
ANR	997589	PtrMemberAccess	core -> offset		987937	0					
ANR	997590	Identifier	core		987937	0					
ANR	997591	Identifier	offset		987937	1					
ANR	997592	Argument	core -> block		987937	2					
ANR	997593	PtrMemberAccess	core -> block		987937	0					
ANR	997594	Identifier	core		987937	0					
ANR	997595	Identifier	block		987937	1					
ANR	997596	Argument	len		987937	3					
ANR	997597	Identifier	len		987937	0					
ANR	997598	Argument	- 1		987937	4					
ANR	997599	UnaryOperationExpression	- 1		987937	0					
ANR	997600	UnaryOperator	-		987937	0					
ANR	997601	PrimaryExpression	1		987937	1					
ANR	997602	Argument	4		987937	5					
ANR	997603	PrimaryExpression	4		987937	0					
ANR	997604	Argument	1		987937	6					
ANR	997605	PrimaryExpression	1		987937	0					
ANR	997606	BreakStatement	break ;	6455:5:180135:180140	987937	2	True				
ANR	997607	Label	case '2' :	6456:4:180146:180154	987937	3	True				
ANR	997608	ExpressionStatement	"r_print_hexdump ( core -> print , core -> offset , core -> block , len , - 10 , 2 , 1 )"	6458:5:180197:180276	987937	4	True				
ANR	997609	CallExpression	"r_print_hexdump ( core -> print , core -> offset , core -> block , len , - 10 , 2 , 1 )"		987937	0					
ANR	997610	Callee	r_print_hexdump		987937	0					
ANR	997611	Identifier	r_print_hexdump		987937	0					
ANR	997612	ArgumentList	core -> print		987937	1					
ANR	997613	Argument	core -> print		987937	0					
ANR	997614	PtrMemberAccess	core -> print		987937	0					
ANR	997615	Identifier	core		987937	0					
ANR	997616	Identifier	print		987937	1					
ANR	997617	Argument	core -> offset		987937	1					
ANR	997618	PtrMemberAccess	core -> offset		987937	0					
ANR	997619	Identifier	core		987937	0					
ANR	997620	Identifier	offset		987937	1					
ANR	997621	Argument	core -> block		987937	2					
ANR	997622	PtrMemberAccess	core -> block		987937	0					
ANR	997623	Identifier	core		987937	0					
ANR	997624	Identifier	block		987937	1					
ANR	997625	Argument	len		987937	3					
ANR	997626	Identifier	len		987937	0					
ANR	997627	Argument	- 10		987937	4					
ANR	997628	UnaryOperationExpression	- 10		987937	0					
ANR	997629	UnaryOperator	-		987937	0					
ANR	997630	PrimaryExpression	10		987937	1					
ANR	997631	Argument	2		987937	5					
ANR	997632	PrimaryExpression	2		987937	0					
ANR	997633	Argument	1		987937	6					
ANR	997634	PrimaryExpression	1		987937	0					
ANR	997635	BreakStatement	break ;	6460:5:180283:180288	987937	5	True				
ANR	997636	Label	case '8' :	6461:4:180294:180302	987937	6	True				
ANR	997637	ExpressionStatement	"r_print_hexdump ( core -> print , core -> offset , core -> block , len , - 8 , 4 , 1 )"	6462:5:180309:180387	987937	7	True				
ANR	997638	CallExpression	"r_print_hexdump ( core -> print , core -> offset , core -> block , len , - 8 , 4 , 1 )"		987937	0					
ANR	997639	Callee	r_print_hexdump		987937	0					
ANR	997640	Identifier	r_print_hexdump		987937	0					
ANR	997641	ArgumentList	core -> print		987937	1					
ANR	997642	Argument	core -> print		987937	0					
ANR	997643	PtrMemberAccess	core -> print		987937	0					
ANR	997644	Identifier	core		987937	0					
ANR	997645	Identifier	print		987937	1					
ANR	997646	Argument	core -> offset		987937	1					
ANR	997647	PtrMemberAccess	core -> offset		987937	0					
ANR	997648	Identifier	core		987937	0					
ANR	997649	Identifier	offset		987937	1					
ANR	997650	Argument	core -> block		987937	2					
ANR	997651	PtrMemberAccess	core -> block		987937	0					
ANR	997652	Identifier	core		987937	0					
ANR	997653	Identifier	block		987937	1					
ANR	997654	Argument	len		987937	3					
ANR	997655	Identifier	len		987937	0					
ANR	997656	Argument	- 8		987937	4					
ANR	997657	UnaryOperationExpression	- 8		987937	0					
ANR	997658	UnaryOperator	-		987937	0					
ANR	997659	PrimaryExpression	8		987937	1					
ANR	997660	Argument	4		987937	5					
ANR	997661	PrimaryExpression	4		987937	0					
ANR	997662	Argument	1		987937	6					
ANR	997663	PrimaryExpression	1		987937	0					
ANR	997664	BreakStatement	break ;	6464:5:180394:180399	987937	8	True				
ANR	997665	Label	case '4' :	6465:4:180405:180413	987937	9	True				
ANR	997666	Label	case ' ' :	6466:4:180419:180427	987937	10	True				
ANR	997667	Label	case 0 :	6467:4:180433:180439	987937	11	True				
ANR	997668	ExpressionStatement	"r_print_hexdump ( core -> print , core -> offset , core -> block , len , 10 , 4 , 1 )"	6469:5:180474:180551	987937	12	True				
ANR	997669	CallExpression	"r_print_hexdump ( core -> print , core -> offset , core -> block , len , 10 , 4 , 1 )"		987937	0					
ANR	997670	Callee	r_print_hexdump		987937	0					
ANR	997671	Identifier	r_print_hexdump		987937	0					
ANR	997672	ArgumentList	core -> print		987937	1					
ANR	997673	Argument	core -> print		987937	0					
ANR	997674	PtrMemberAccess	core -> print		987937	0					
ANR	997675	Identifier	core		987937	0					
ANR	997676	Identifier	print		987937	1					
ANR	997677	Argument	core -> offset		987937	1					
ANR	997678	PtrMemberAccess	core -> offset		987937	0					
ANR	997679	Identifier	core		987937	0					
ANR	997680	Identifier	offset		987937	1					
ANR	997681	Argument	core -> block		987937	2					
ANR	997682	PtrMemberAccess	core -> block		987937	0					
ANR	997683	Identifier	core		987937	0					
ANR	997684	Identifier	block		987937	1					
ANR	997685	Argument	len		987937	3					
ANR	997686	Identifier	len		987937	0					
ANR	997687	Argument	10		987937	4					
ANR	997688	PrimaryExpression	10		987937	0					
ANR	997689	Argument	4		987937	5					
ANR	997690	PrimaryExpression	4		987937	0					
ANR	997691	Argument	1		987937	6					
ANR	997692	PrimaryExpression	1		987937	0					
ANR	997693	BreakStatement	break ;	6471:5:180558:180563	987937	13	True				
ANR	997694	Label	default :	6472:4:180569:180576	987937	14	True				
ANR	997695	Identifier	default		987937	0					
ANR	997696	ExpressionStatement	"r_core_cmd_help ( core , help_msg_pxd )"	6473:5:180583:180619	987937	15	True				
ANR	997697	CallExpression	"r_core_cmd_help ( core , help_msg_pxd )"		987937	0					
ANR	997698	Callee	r_core_cmd_help		987937	0					
ANR	997699	Identifier	r_core_cmd_help		987937	0					
ANR	997700	ArgumentList	core		987937	1					
ANR	997701	Argument	core		987937	0					
ANR	997702	Identifier	core		987937	0					
ANR	997703	Argument	help_msg_pxd		987937	1					
ANR	997704	Identifier	help_msg_pxd		987937	0					
ANR	997705	BreakStatement	break ;	6474:5:180626:180631	987937	16	True				
ANR	997706	BreakStatement	break ;	6477:3:180647:180652	987937	41	True				
ANR	997707	Label	case 'w' :	6478:2:180656:180664	987937	42	True				
ANR	997708	IfStatement	if ( l != 0 )		987937	43					
ANR	997709	Condition	l != 0	6479:7:180682:180687	987937	0	True				
ANR	997710	EqualityExpression	l != 0		987937	0		!=			
ANR	997711	Identifier	l		987937	0					
ANR	997712	PrimaryExpression	0		987937	1					
ANR	997713	CompoundStatement		1635:15:44653:44653	987937	1					
ANR	997714	IfStatement	if ( input [ 2 ] == 'j' )		987937	0					
ANR	997715	Condition	input [ 2 ] == 'j'	6480:8:180700:180714	987937	0	True				
ANR	997716	EqualityExpression	input [ 2 ] == 'j'		987937	0		==			
ANR	997717	ArrayIndexing	input [ 2 ]		987937	0					
ANR	997718	Identifier	input		987937	0					
ANR	997719	PrimaryExpression	2		987937	1					
ANR	997720	PrimaryExpression	'j'		987937	1					
ANR	997721	CompoundStatement		1636:25:44680:44680	987937	1					
ANR	997722	ExpressionStatement	"r_print_jsondump ( core -> print , core -> block , len , 32 )"	6481:5:180724:180776	987937	0	True				
ANR	997723	CallExpression	"r_print_jsondump ( core -> print , core -> block , len , 32 )"		987937	0					
ANR	997724	Callee	r_print_jsondump		987937	0					
ANR	997725	Identifier	r_print_jsondump		987937	0					
ANR	997726	ArgumentList	core -> print		987937	1					
ANR	997727	Argument	core -> print		987937	0					
ANR	997728	PtrMemberAccess	core -> print		987937	0					
ANR	997729	Identifier	core		987937	0					
ANR	997730	Identifier	print		987937	1					
ANR	997731	Argument	core -> block		987937	1					
ANR	997732	PtrMemberAccess	core -> block		987937	0					
ANR	997733	Identifier	core		987937	0					
ANR	997734	Identifier	block		987937	1					
ANR	997735	Argument	len		987937	2					
ANR	997736	Identifier	len		987937	0					
ANR	997737	Argument	32		987937	3					
ANR	997738	PrimaryExpression	32		987937	0					
ANR	997739	ElseStatement	else		987937	0					
ANR	997740	CompoundStatement		1638:11:44752:44752	987937	0					
ANR	997741	ExpressionStatement	"r_print_hexdump ( core -> print , core -> offset , core -> block , len , 32 , 4 , 1 )"	6483:5:180796:180867	987937	0	True				
ANR	997742	CallExpression	"r_print_hexdump ( core -> print , core -> offset , core -> block , len , 32 , 4 , 1 )"		987937	0					
ANR	997743	Callee	r_print_hexdump		987937	0					
ANR	997744	Identifier	r_print_hexdump		987937	0					
ANR	997745	ArgumentList	core -> print		987937	1					
ANR	997746	Argument	core -> print		987937	0					
ANR	997747	PtrMemberAccess	core -> print		987937	0					
ANR	997748	Identifier	core		987937	0					
ANR	997749	Identifier	print		987937	1					
ANR	997750	Argument	core -> offset		987937	1					
ANR	997751	PtrMemberAccess	core -> offset		987937	0					
ANR	997752	Identifier	core		987937	0					
ANR	997753	Identifier	offset		987937	1					
ANR	997754	Argument	core -> block		987937	2					
ANR	997755	PtrMemberAccess	core -> block		987937	0					
ANR	997756	Identifier	core		987937	0					
ANR	997757	Identifier	block		987937	1					
ANR	997758	Argument	len		987937	3					
ANR	997759	Identifier	len		987937	0					
ANR	997760	Argument	32		987937	4					
ANR	997761	PrimaryExpression	32		987937	0					
ANR	997762	Argument	4		987937	5					
ANR	997763	PrimaryExpression	4		987937	0					
ANR	997764	Argument	1		987937	6					
ANR	997765	PrimaryExpression	1		987937	0					
ANR	997766	BreakStatement	break ;	6486:3:180883:180888	987937	44	True				
ANR	997767	Label	case 'W' :	6487:2:180892:180900	987937	45	True				
ANR	997768	IfStatement	if ( l )		987937	46					
ANR	997769	Condition	l	6488:7:180918:180918	987937	0	True				
ANR	997770	Identifier	l		987937	0					
ANR	997771	CompoundStatement		1645:4:44890:44973	987937	1					
ANR	997772	IdentifierDeclStatement	"bool printOffset = ( input [ 2 ] != 'q' && r_config_get_i ( core -> config , ""asm.offset"" ) ) ;"	6489:4:180927:181010	987937	0	True				
ANR	997773	IdentifierDecl	"printOffset = ( input [ 2 ] != 'q' && r_config_get_i ( core -> config , ""asm.offset"" ) )"		987937	0					
ANR	997774	IdentifierDeclType	bool		987937	0					
ANR	997775	Identifier	printOffset		987937	1					
ANR	997776	AssignmentExpression	"printOffset = ( input [ 2 ] != 'q' && r_config_get_i ( core -> config , ""asm.offset"" ) )"		987937	2		=			
ANR	997777	Identifier	printOffset		987937	0					
ANR	997778	AndExpression	"input [ 2 ] != 'q' && r_config_get_i ( core -> config , ""asm.offset"" )"		987937	1		&&			
ANR	997779	EqualityExpression	input [ 2 ] != 'q'		987937	0		!=			
ANR	997780	ArrayIndexing	input [ 2 ]		987937	0					
ANR	997781	Identifier	input		987937	0					
ANR	997782	PrimaryExpression	2		987937	1					
ANR	997783	PrimaryExpression	'q'		987937	1					
ANR	997784	CallExpression	"r_config_get_i ( core -> config , ""asm.offset"" )"		987937	1					
ANR	997785	Callee	r_config_get_i		987937	0					
ANR	997786	Identifier	r_config_get_i		987937	0					
ANR	997787	ArgumentList	core -> config		987937	1					
ANR	997788	Argument	core -> config		987937	0					
ANR	997789	PtrMemberAccess	core -> config		987937	0					
ANR	997790	Identifier	core		987937	0					
ANR	997791	Identifier	config		987937	1					
ANR	997792	Argument	"""asm.offset"""		987937	1					
ANR	997793	PrimaryExpression	"""asm.offset"""		987937	0					
ANR	997794	ExpressionStatement	len = len - ( len % 4 )	6490:4:181016:181037	987937	1	True				
ANR	997795	AssignmentExpression	len = len - ( len % 4 )		987937	0		=			
ANR	997796	Identifier	len		987937	0					
ANR	997797	AdditiveExpression	len - ( len % 4 )		987937	1		-			
ANR	997798	Identifier	len		987937	0					
ANR	997799	MultiplicativeExpression	len % 4		987937	1		%			
ANR	997800	Identifier	len		987937	0					
ANR	997801	PrimaryExpression	4		987937	1					
ANR	997802	ForStatement	for ( i = 0 ; i < len ; i += 4 )		987937	2					
ANR	997803	ForInit	i = 0 ;	6491:9:181048:181053	987937	0	True				
ANR	997804	AssignmentExpression	i = 0		987937	0		=			
ANR	997805	Identifier	i		987937	0					
ANR	997806	PrimaryExpression	0		987937	1					
ANR	997807	Condition	i < len	6491:16:181055:181061	987937	1	True				
ANR	997808	RelationalExpression	i < len		987937	0		<			
ANR	997809	Identifier	i		987937	0					
ANR	997810	Identifier	len		987937	1					
ANR	997811	AssignmentExpression	i += 4	6491:25:181064:181069	987937	2	True	+=			
ANR	997812	Identifier	i		987937	0					
ANR	997813	PrimaryExpression	4		987937	1					
ANR	997814	CompoundStatement		1652:5:45130:45194	987937	3					
ANR	997815	IdentifierDeclStatement	"const char * a , * b ;"	6492:5:181079:181096	987937	0	True				
ANR	997816	IdentifierDecl	* a		987937	0					
ANR	997817	IdentifierDeclType	const char *		987937	0					
ANR	997818	Identifier	a		987937	1					
ANR	997819	IdentifierDecl	* b		987937	1					
ANR	997820	IdentifierDeclType	const char *		987937	0					
ANR	997821	Identifier	b		987937	1					
ANR	997822	IdentifierDeclStatement	char * fn ;	6493:5:181103:181111	987937	1	True				
ANR	997823	IdentifierDecl	* fn		987937	0					
ANR	997824	IdentifierDeclType	char *		987937	0					
ANR	997825	Identifier	fn		987937	1					
ANR	997826	IdentifierDeclStatement	RPrint * p = core -> print ;	6494:5:181118:181141	987937	2	True				
ANR	997827	IdentifierDecl	* p = core -> print		987937	0					
ANR	997828	IdentifierDeclType	RPrint *		987937	0					
ANR	997829	Identifier	p		987937	1					
ANR	997830	AssignmentExpression	* p = core -> print		987937	2		=			
ANR	997831	Identifier	p		987937	0					
ANR	997832	PtrMemberAccess	core -> print		987937	1					
ANR	997833	Identifier	core		987937	0					
ANR	997834	Identifier	print		987937	1					
ANR	997835	IdentifierDeclStatement	RFlagItem * f ;	6495:5:181148:181160	987937	3	True				
ANR	997836	IdentifierDecl	* f		987937	0					
ANR	997837	IdentifierDeclType	RFlagItem *		987937	0					
ANR	997838	Identifier	f		987937	1					
ANR	997839	IdentifierDeclStatement	"ut32 v = r_read_ble32 ( core -> block + i , core -> print -> big_endian ) ;"	6496:5:181167:181231	987937	4	True				
ANR	997840	IdentifierDecl	"v = r_read_ble32 ( core -> block + i , core -> print -> big_endian )"		987937	0					
ANR	997841	IdentifierDeclType	ut32		987937	0					
ANR	997842	Identifier	v		987937	1					
ANR	997843	AssignmentExpression	"v = r_read_ble32 ( core -> block + i , core -> print -> big_endian )"		987937	2		=			
ANR	997844	Identifier	v		987937	0					
ANR	997845	CallExpression	"r_read_ble32 ( core -> block + i , core -> print -> big_endian )"		987937	1					
ANR	997846	Callee	r_read_ble32		987937	0					
ANR	997847	Identifier	r_read_ble32		987937	0					
ANR	997848	ArgumentList	core -> block + i		987937	1					
ANR	997849	Argument	core -> block + i		987937	0					
ANR	997850	AdditiveExpression	core -> block + i		987937	0		+			
ANR	997851	PtrMemberAccess	core -> block		987937	0					
ANR	997852	Identifier	core		987937	0					
ANR	997853	Identifier	block		987937	1					
ANR	997854	Identifier	i		987937	1					
ANR	997855	Argument	core -> print -> big_endian		987937	1					
ANR	997856	PtrMemberAccess	core -> print -> big_endian		987937	0					
ANR	997857	PtrMemberAccess	core -> print		987937	0					
ANR	997858	Identifier	core		987937	0					
ANR	997859	Identifier	print		987937	1					
ANR	997860	Identifier	big_endian		987937	1					
ANR	997861	IfStatement	if ( p && p -> colorfor )		987937	5					
ANR	997862	Condition	p && p -> colorfor	6497:9:181242:181257	987937	0	True				
ANR	997863	AndExpression	p && p -> colorfor		987937	0		&&			
ANR	997864	Identifier	p		987937	0					
ANR	997865	PtrMemberAccess	p -> colorfor		987937	1					
ANR	997866	Identifier	p		987937	0					
ANR	997867	Identifier	colorfor		987937	1					
ANR	997868	CompoundStatement		1653:27:45223:45223	987937	1					
ANR	997869	ExpressionStatement	"a = p -> colorfor ( p -> user , v , true )"	6498:6:181268:181302	987937	0	True				
ANR	997870	AssignmentExpression	"a = p -> colorfor ( p -> user , v , true )"		987937	0		=			
ANR	997871	Identifier	a		987937	0					
ANR	997872	CallExpression	"p -> colorfor ( p -> user , v , true )"		987937	1					
ANR	997873	Callee	p -> colorfor		987937	0					
ANR	997874	PtrMemberAccess	p -> colorfor		987937	0					
ANR	997875	Identifier	p		987937	0					
ANR	997876	Identifier	colorfor		987937	1					
ANR	997877	ArgumentList	p -> user		987937	1					
ANR	997878	Argument	p -> user		987937	0					
ANR	997879	PtrMemberAccess	p -> user		987937	0					
ANR	997880	Identifier	p		987937	0					
ANR	997881	Identifier	user		987937	1					
ANR	997882	Argument	v		987937	1					
ANR	997883	Identifier	v		987937	0					
ANR	997884	Argument	true		987937	2					
ANR	997885	Identifier	true		987937	0					
ANR	997886	IfStatement	if ( a && * a )		987937	1					
ANR	997887	Condition	a && * a	6499:10:181314:181320	987937	0	True				
ANR	997888	AndExpression	a && * a		987937	0		&&			
ANR	997889	Identifier	a		987937	0					
ANR	997890	UnaryOperationExpression	* a		987937	1					
ANR	997891	UnaryOperator	*		987937	0					
ANR	997892	Identifier	a		987937	1					
ANR	997893	CompoundStatement		1655:19:45286:45286	987937	1					
ANR	997894	ExpressionStatement	b = Color_RESET	6500:7:181332:181347	987937	0	True				
ANR	997895	AssignmentExpression	b = Color_RESET		987937	0		=			
ANR	997896	Identifier	b		987937	0					
ANR	997897	Identifier	Color_RESET		987937	1					
ANR	997898	ElseStatement	else		987937	0					
ANR	997899	CompoundStatement		1657:13:45325:45325	987937	0					
ANR	997900	ExpressionStatement	"a = b = """""	6502:7:181371:181381	987937	0	True				
ANR	997901	AssignmentExpression	"a = b = """""		987937	0		=			
ANR	997902	Identifier	a		987937	0					
ANR	997903	AssignmentExpression	"b = """""		987937	1		=			
ANR	997904	Identifier	b		987937	0					
ANR	997905	PrimaryExpression	""""""		987937	1					
ANR	997906	ElseStatement	else		987937	0					
ANR	997907	CompoundStatement		1660:12:45366:45366	987937	0					
ANR	997908	ExpressionStatement	"a = b = """""	6505:6:181411:181421	987937	0	True				
ANR	997909	AssignmentExpression	"a = b = """""		987937	0		=			
ANR	997910	Identifier	a		987937	0					
ANR	997911	AssignmentExpression	"b = """""		987937	1		=			
ANR	997912	Identifier	b		987937	0					
ANR	997913	PrimaryExpression	""""""		987937	1					
ANR	997914	ExpressionStatement	"f = r_flag_get_at ( core -> flags , v , true )"	6507:5:181435:181475	987937	6	True				
ANR	997915	AssignmentExpression	"f = r_flag_get_at ( core -> flags , v , true )"		987937	0		=			
ANR	997916	Identifier	f		987937	0					
ANR	997917	CallExpression	"r_flag_get_at ( core -> flags , v , true )"		987937	1					
ANR	997918	Callee	r_flag_get_at		987937	0					
ANR	997919	Identifier	r_flag_get_at		987937	0					
ANR	997920	ArgumentList	core -> flags		987937	1					
ANR	997921	Argument	core -> flags		987937	0					
ANR	997922	PtrMemberAccess	core -> flags		987937	0					
ANR	997923	Identifier	core		987937	0					
ANR	997924	Identifier	flags		987937	1					
ANR	997925	Argument	v		987937	1					
ANR	997926	Identifier	v		987937	0					
ANR	997927	Argument	true		987937	2					
ANR	997928	Identifier	true		987937	0					
ANR	997929	ExpressionStatement	fn = NULL	6508:5:181482:181491	987937	7	True				
ANR	997930	AssignmentExpression	fn = NULL		987937	0		=			
ANR	997931	Identifier	fn		987937	0					
ANR	997932	Identifier	NULL		987937	1					
ANR	997933	IfStatement	if ( f )		987937	8					
ANR	997934	Condition	f	6509:9:181502:181502	987937	0	True				
ANR	997935	Identifier	f		987937	0					
ANR	997936	CompoundStatement		1666:6:45476:45504	987937	1					
ANR	997937	IdentifierDeclStatement	st64 delta = ( v - f -> offset ) ;	6510:6:181513:181541	987937	0	True				
ANR	997938	IdentifierDecl	delta = ( v - f -> offset )		987937	0					
ANR	997939	IdentifierDeclType	st64		987937	0					
ANR	997940	Identifier	delta		987937	1					
ANR	997941	AssignmentExpression	delta = ( v - f -> offset )		987937	2		=			
ANR	997942	Identifier	delta		987937	0					
ANR	997943	AdditiveExpression	v - f -> offset		987937	1		-			
ANR	997944	Identifier	v		987937	0					
ANR	997945	PtrMemberAccess	f -> offset		987937	1					
ANR	997946	Identifier	f		987937	0					
ANR	997947	Identifier	offset		987937	1					
ANR	997948	IfStatement	if ( delta >= 0 && delta < 8192 )		987937	1					
ANR	997949	Condition	delta >= 0 && delta < 8192	6511:10:181553:181578	987937	0	True				
ANR	997950	AndExpression	delta >= 0 && delta < 8192		987937	0		&&			
ANR	997951	RelationalExpression	delta >= 0		987937	0		>=			
ANR	997952	Identifier	delta		987937	0					
ANR	997953	PrimaryExpression	0		987937	1					
ANR	997954	RelationalExpression	delta < 8192		987937	1		<			
ANR	997955	Identifier	delta		987937	0					
ANR	997956	PrimaryExpression	8192		987937	1					
ANR	997957	CompoundStatement		1667:38:45544:45544	987937	1					
ANR	997958	IfStatement	if ( v == f -> offset )		987937	0					
ANR	997959	Condition	v == f -> offset	6512:11:181594:181607	987937	0	True				
ANR	997960	EqualityExpression	v == f -> offset		987937	0		==			
ANR	997961	Identifier	v		987937	0					
ANR	997962	PtrMemberAccess	f -> offset		987937	1					
ANR	997963	Identifier	f		987937	0					
ANR	997964	Identifier	offset		987937	1					
ANR	997965	CompoundStatement		1668:27:45573:45573	987937	1					
ANR	997966	ExpressionStatement	fn = strdup ( f -> name )	6513:8:181620:181641	987937	0	True				
ANR	997967	AssignmentExpression	fn = strdup ( f -> name )		987937	0		=			
ANR	997968	Identifier	fn		987937	0					
ANR	997969	CallExpression	strdup ( f -> name )		987937	1					
ANR	997970	Callee	strdup		987937	0					
ANR	997971	Identifier	strdup		987937	0					
ANR	997972	ArgumentList	f -> name		987937	1					
ANR	997973	Argument	f -> name		987937	0					
ANR	997974	PtrMemberAccess	f -> name		987937	0					
ANR	997975	Identifier	f		987937	0					
ANR	997976	Identifier	name		987937	1					
ANR	997977	ElseStatement	else		987937	0					
ANR	997978	CompoundStatement		1670:14:45620:45620	987937	0					
ANR	997979	ExpressionStatement	"fn = r_str_newf ( ""%s+%d"" , f -> name , v - f -> offset )"	6515:8:181667:181725	987937	0	True				
ANR	997980	AssignmentExpression	"fn = r_str_newf ( ""%s+%d"" , f -> name , v - f -> offset )"		987937	0		=			
ANR	997981	Identifier	fn		987937	0					
ANR	997982	CallExpression	"r_str_newf ( ""%s+%d"" , f -> name , v - f -> offset )"		987937	1					
ANR	997983	Callee	r_str_newf		987937	0					
ANR	997984	Identifier	r_str_newf		987937	0					
ANR	997985	ArgumentList	"""%s+%d"""		987937	1					
ANR	997986	Argument	"""%s+%d"""		987937	0					
ANR	997987	PrimaryExpression	"""%s+%d"""		987937	0					
ANR	997988	Argument	f -> name		987937	1					
ANR	997989	PtrMemberAccess	f -> name		987937	0					
ANR	997990	Identifier	f		987937	0					
ANR	997991	Identifier	name		987937	1					
ANR	997992	Argument	v - f -> offset		987937	2					
ANR	997993	AdditiveExpression	v - f -> offset		987937	0		-			
ANR	997994	Identifier	v		987937	0					
ANR	997995	PtrMemberAccess	f -> offset		987937	1					
ANR	997996	Identifier	f		987937	0					
ANR	997997	Identifier	offset		987937	1					
ANR	997998	IfStatement	if ( printOffset )		987937	9					
ANR	997999	Condition	printOffset	6520:9:181760:181770	987937	0	True				
ANR	998000	Identifier	printOffset		987937	0					
ANR	998001	CompoundStatement		1676:22:45736:45736	987937	1					
ANR	998002	ExpressionStatement	"r_print_section ( core -> print , core -> offset + i )"	6521:6:181781:181827	987937	0	True				
ANR	998003	CallExpression	"r_print_section ( core -> print , core -> offset + i )"		987937	0					
ANR	998004	Callee	r_print_section		987937	0					
ANR	998005	Identifier	r_print_section		987937	0					
ANR	998006	ArgumentList	core -> print		987937	1					
ANR	998007	Argument	core -> print		987937	0					
ANR	998008	PtrMemberAccess	core -> print		987937	0					
ANR	998009	Identifier	core		987937	0					
ANR	998010	Identifier	print		987937	1					
ANR	998011	Argument	core -> offset + i		987937	1					
ANR	998012	AdditiveExpression	core -> offset + i		987937	0		+			
ANR	998013	PtrMemberAccess	core -> offset		987937	0					
ANR	998014	Identifier	core		987937	0					
ANR	998015	Identifier	offset		987937	1					
ANR	998016	Identifier	i		987937	1					
ANR	998017	Statement	r_cons_printf	6522:6:181835:181847	987937	1	True				
ANR	998018	Statement	(	6522:20:181849:181849	987937	2	True				
ANR	998019	Statement	"""0x%08"""	6522:21:181850:181856	987937	3	True				
ANR	998020	Statement	PFMT64x	6522:28:181857:181863	987937	4	True				
ANR	998021	Statement	""" %s0x%08"""	6522:36:181865:181874	987937	5	True				
ANR	998022	Statement	PFMT64x	6522:46:181875:181881	987937	6	True				
ANR	998023	Statement	"""%s%s%s\\n"""	6522:54:181883:181892	987937	7	True				
ANR	998024	Statement	","	6522:64:181893:181893	987937	8	True				
ANR	998025	Statement	(	6523:8:181903:181903	987937	9	True				
ANR	998026	Statement	ut64	6523:9:181904:181907	987937	10	True				
ANR	998027	Statement	)	6523:13:181908:181908	987937	11	True				
ANR	998028	Statement	core	6523:15:181910:181913	987937	12	True				
ANR	998029	Statement	->	6523:19:181914:181915	987937	13	True				
ANR	998030	Statement	offset	6523:21:181916:181921	987937	14	True				
ANR	998031	Statement	+	6523:28:181923:181923	987937	15	True				
ANR	998032	Statement	i	6523:30:181925:181925	987937	16	True				
ANR	998033	Statement	","	6523:31:181926:181926	987937	17	True				
ANR	998034	Statement	a	6523:33:181928:181928	987937	18	True				
ANR	998035	Statement	","	6523:34:181929:181929	987937	19	True				
ANR	998036	Statement	(	6523:36:181931:181931	987937	20	True				
ANR	998037	Statement	ut64	6523:37:181932:181935	987937	21	True				
ANR	998038	Statement	)	6523:41:181936:181936	987937	22	True				
ANR	998039	Statement	v	6523:43:181938:181938	987937	23	True				
ANR	998040	Statement	","	6523:44:181939:181939	987937	24	True				
ANR	998041	Statement	b	6524:8:181949:181949	987937	25	True				
ANR	998042	Statement	","	6524:9:181950:181950	987937	26	True				
ANR	998043	Statement	fn	6524:11:181952:181953	987937	27	True				
ANR	998044	Statement	?	6524:13:181954:181954	987937	28	True				
ANR	998045	Statement	""" """	6524:15:181956:181958	987937	29	True				
ANR	998046	Statement	:	6524:18:181959:181959	987937	30	True				
ANR	998047	Statement	""""""	6524:20:181961:181962	987937	31	True				
ANR	998048	Statement	","	6524:22:181963:181963	987937	32	True				
ANR	998049	Statement	fn	6524:24:181965:181966	987937	33	True				
ANR	998050	Statement	?	6524:26:181967:181967	987937	34	True				
ANR	998051	Label	fn :	6524:28:181969:181971	987937	35	True				
ANR	998052	Identifier	fn		987937	0					
ANR	998053	Statement	""""""	6524:32:181973:181974	987937	36	True				
ANR	998054	Statement	)	6524:34:181975:181975	987937	37	True				
ANR	998055	ExpressionStatement		6524:35:181976:181976	987937	38	True				
ANR	998056	ElseStatement	else		987937	0					
ANR	998057	CompoundStatement		1681:12:45953:45953	987937	0					
ANR	998058	Statement	r_cons_printf	6526:6:181998:182010	987937	0	True				
ANR	998059	Statement	(	6526:20:182012:182012	987937	1	True				
ANR	998060	Statement	"""%s0x%08"""	6526:21:182013:182021	987937	2	True				
ANR	998061	Statement	PFMT64x	6526:30:182022:182028	987937	3	True				
ANR	998062	Statement	"""%s\\n"""	6526:38:182030:182035	987937	4	True				
ANR	998063	Statement	","	6526:44:182036:182036	987937	5	True				
ANR	998064	Statement	a	6526:46:182038:182038	987937	6	True				
ANR	998065	Statement	","	6526:47:182039:182039	987937	7	True				
ANR	998066	Statement	(	6526:49:182041:182041	987937	8	True				
ANR	998067	Statement	ut64	6526:50:182042:182045	987937	9	True				
ANR	998068	Statement	)	6526:54:182046:182046	987937	10	True				
ANR	998069	Statement	v	6526:56:182048:182048	987937	11	True				
ANR	998070	Statement	","	6526:57:182049:182049	987937	12	True				
ANR	998071	Statement	b	6526:59:182051:182051	987937	13	True				
ANR	998072	Statement	)	6526:60:182052:182052	987937	14	True				
ANR	998073	ExpressionStatement		6526:61:182053:182053	987937	15	True				
ANR	998074	ExpressionStatement	free ( fn )	6528:5:182067:182076	987937	10	True				
ANR	998075	CallExpression	free ( fn )		987937	0					
ANR	998076	Callee	free		987937	0					
ANR	998077	Identifier	free		987937	0					
ANR	998078	ArgumentList	fn		987937	1					
ANR	998079	Argument	fn		987937	0					
ANR	998080	Identifier	fn		987937	0					
ANR	998081	BreakStatement	break ;	6531:3:182092:182097	987937	47	True				
ANR	998082	Label	case 'r' :	6532:2:182101:182109	987937	48	True				
ANR	998083	IfStatement	if ( l )		987937	49					
ANR	998084	Condition	l	6533:7:182127:182127	987937	0	True				
ANR	998085	Identifier	l		987937	0					
ANR	998086	CompoundStatement		1689:10:46093:46093	987937	1					
ANR	998087	IfStatement	if ( input [ 2 ] == 'j' )		987937	0					
ANR	998088	Condition	input [ 2 ] == 'j'	6534:8:182140:182154	987937	0	True				
ANR	998089	EqualityExpression	input [ 2 ] == 'j'		987937	0		==			
ANR	998090	ArrayIndexing	input [ 2 ]		987937	0					
ANR	998091	Identifier	input		987937	0					
ANR	998092	PrimaryExpression	2		987937	1					
ANR	998093	PrimaryExpression	'j'		987937	1					
ANR	998094	CompoundStatement		1699:5:46298:46327	987937	1					
ANR	998095	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	6535:5:182164:182182	987937	0	True				
ANR	998096	IdentifierDecl	* pj = pj_new ( )		987937	0					
ANR	998097	IdentifierDeclType	PJ *		987937	0					
ANR	998098	Identifier	pj		987937	1					
ANR	998099	AssignmentExpression	* pj = pj_new ( )		987937	2		=			
ANR	998100	Identifier	pj		987937	0					
ANR	998101	CallExpression	pj_new ( )		987937	1					
ANR	998102	Callee	pj_new		987937	0					
ANR	998103	Identifier	pj_new		987937	0					
ANR	998104	ArgumentList			987937	1					
ANR	998105	IfStatement	if ( ! pj )		987937	1					
ANR	998106	Condition	! pj	6536:9:182193:182195	987937	0	True				
ANR	998107	UnaryOperationExpression	! pj		987937	0					
ANR	998108	UnaryOperator	!		987937	0					
ANR	998109	Identifier	pj		987937	1					
ANR	998110	CompoundStatement		1692:14:46161:46161	987937	1					
ANR	998111	ReturnStatement	return 0 ;	6537:6:182206:182214	987937	0	True				
ANR	998112	PrimaryExpression	0		987937	0					
ANR	998113	IdentifierDeclStatement	int base = core -> anal -> bits ;	6539:5:182228:182255	987937	2	True				
ANR	998114	IdentifierDecl	base = core -> anal -> bits		987937	0					
ANR	998115	IdentifierDeclType	int		987937	0					
ANR	998116	Identifier	base		987937	1					
ANR	998117	AssignmentExpression	base = core -> anal -> bits		987937	2		=			
ANR	998118	Identifier	base		987937	0					
ANR	998119	PtrMemberAccess	core -> anal -> bits		987937	1					
ANR	998120	PtrMemberAccess	core -> anal		987937	0					
ANR	998121	Identifier	core		987937	0					
ANR	998122	Identifier	anal		987937	1					
ANR	998123	Identifier	bits		987937	1					
ANR	998124	ExpressionStatement	pj_a ( pj )	6540:5:182262:182271	987937	3	True				
ANR	998125	CallExpression	pj_a ( pj )		987937	0					
ANR	998126	Callee	pj_a		987937	0					
ANR	998127	Identifier	pj_a		987937	0					
ANR	998128	ArgumentList	pj		987937	1					
ANR	998129	Argument	pj		987937	0					
ANR	998130	Identifier	pj		987937	0					
ANR	998131	IdentifierDeclStatement	const ut8 * buf = core -> block ;	6541:5:182278:182306	987937	4	True				
ANR	998132	IdentifierDecl	* buf = core -> block		987937	0					
ANR	998133	IdentifierDeclType	const ut8 *		987937	0					
ANR	998134	Identifier	buf		987937	1					
ANR	998135	AssignmentExpression	* buf = core -> block		987937	2		=			
ANR	998136	Identifier	buf		987937	0					
ANR	998137	PtrMemberAccess	core -> block		987937	1					
ANR	998138	Identifier	core		987937	0					
ANR	998139	Identifier	block		987937	1					
ANR	998140	IdentifierDeclStatement	int withref = 0 ;	6542:5:182313:182328	987937	5	True				
ANR	998141	IdentifierDecl	withref = 0		987937	0					
ANR	998142	IdentifierDeclType	int		987937	0					
ANR	998143	Identifier	withref		987937	1					
ANR	998144	AssignmentExpression	withref = 0		987937	2		=			
ANR	998145	Identifier	withref		987937	0					
ANR	998146	PrimaryExpression	0		987937	1					
ANR	998147	IdentifierDeclStatement	const int wordsize = base / 8 ;	6543:5:182335:182364	987937	6	True				
ANR	998148	IdentifierDecl	wordsize = base / 8		987937	0					
ANR	998149	IdentifierDeclType	const int		987937	0					
ANR	998150	Identifier	wordsize		987937	1					
ANR	998151	AssignmentExpression	wordsize = base / 8		987937	2		=			
ANR	998152	Identifier	wordsize		987937	0					
ANR	998153	MultiplicativeExpression	base / 8		987937	1		/			
ANR	998154	Identifier	base		987937	0					
ANR	998155	PrimaryExpression	8		987937	1					
ANR	998156	ForStatement	for ( i = 0 ; i < core -> blocksize ; i += wordsize )		987937	7					
ANR	998157	ForInit	i = 0 ;	6544:10:182376:182381	987937	0	True				
ANR	998158	AssignmentExpression	i = 0		987937	0		=			
ANR	998159	Identifier	i		987937	0					
ANR	998160	PrimaryExpression	0		987937	1					
ANR	998161	Condition	i < core -> blocksize	6544:17:182383:182401	987937	1	True				
ANR	998162	RelationalExpression	i < core -> blocksize		987937	0		<			
ANR	998163	Identifier	i		987937	0					
ANR	998164	PtrMemberAccess	core -> blocksize		987937	1					
ANR	998165	Identifier	core		987937	0					
ANR	998166	Identifier	blocksize		987937	1					
ANR	998167	AssignmentExpression	i += wordsize	6544:38:182404:182416	987937	2	True	+=			
ANR	998168	Identifier	i		987937	0					
ANR	998169	Identifier	wordsize		987937	1					
ANR	998170	CompoundStatement		1703:6:46464:46479	987937	3					
ANR	998171	IdentifierDeclStatement	ut64 addr = core -> offset + i ;	6545:6:182427:182455	987937	0	True				
ANR	998172	IdentifierDecl	addr = core -> offset + i		987937	0					
ANR	998173	IdentifierDeclType	ut64		987937	0					
ANR	998174	Identifier	addr		987937	1					
ANR	998175	AssignmentExpression	addr = core -> offset + i		987937	2		=			
ANR	998176	Identifier	addr		987937	0					
ANR	998177	AdditiveExpression	core -> offset + i		987937	1		+			
ANR	998178	PtrMemberAccess	core -> offset		987937	0					
ANR	998179	Identifier	core		987937	0					
ANR	998180	Identifier	offset		987937	1					
ANR	998181	Identifier	i		987937	1					
ANR	998182	IdentifierDeclStatement	ut64 * foo = ( ut64 * ) ( buf + i ) ;	6546:6:182463:182493	987937	1	True				
ANR	998183	IdentifierDecl	* foo = ( ut64 * ) ( buf + i )		987937	0					
ANR	998184	IdentifierDeclType	ut64 *		987937	0					
ANR	998185	Identifier	foo		987937	1					
ANR	998186	AssignmentExpression	* foo = ( ut64 * ) ( buf + i )		987937	2		=			
ANR	998187	Identifier	foo		987937	0					
ANR	998188	CastExpression	( ut64 * ) ( buf + i )		987937	1					
ANR	998189	CastTarget	ut64 *		987937	0					
ANR	998190	AdditiveExpression	buf + i		987937	1		+			
ANR	998191	Identifier	buf		987937	0					
ANR	998192	Identifier	i		987937	1					
ANR	998193	IdentifierDeclStatement	ut64 val = * foo ;	6547:6:182501:182516	987937	2	True				
ANR	998194	IdentifierDecl	val = * foo		987937	0					
ANR	998195	IdentifierDeclType	ut64		987937	0					
ANR	998196	Identifier	val		987937	1					
ANR	998197	AssignmentExpression	val = * foo		987937	2		=			
ANR	998198	Identifier	val		987937	0					
ANR	998199	UnaryOperationExpression	* foo		987937	1					
ANR	998200	UnaryOperator	*		987937	0					
ANR	998201	Identifier	foo		987937	1					
ANR	998202	IfStatement	if ( base == 32 )		987937	3					
ANR	998203	Condition	base == 32	6548:10:182528:182537	987937	0	True				
ANR	998204	EqualityExpression	base == 32		987937	0		==			
ANR	998205	Identifier	base		987937	0					
ANR	998206	PrimaryExpression	32		987937	1					
ANR	998207	CompoundStatement		1704:22:46503:46503	987937	1					
ANR	998208	ExpressionStatement	val &= UT32_MAX	6549:7:182549:182564	987937	0	True				
ANR	998209	AssignmentExpression	val &= UT32_MAX		987937	0		&=			
ANR	998210	Identifier	val		987937	0					
ANR	998211	Identifier	UT32_MAX		987937	1					
ANR	998212	ExpressionStatement	pj_o ( pj )	6551:6:182580:182589	987937	4	True				
ANR	998213	CallExpression	pj_o ( pj )		987937	0					
ANR	998214	Callee	pj_o		987937	0					
ANR	998215	Identifier	pj_o		987937	0					
ANR	998216	ArgumentList	pj		987937	1					
ANR	998217	Argument	pj		987937	0					
ANR	998218	Identifier	pj		987937	0					
ANR	998219	ExpressionStatement	"pj_kn ( pj , ""addr"" , addr )"	6552:6:182597:182621	987937	5	True				
ANR	998220	CallExpression	"pj_kn ( pj , ""addr"" , addr )"		987937	0					
ANR	998221	Callee	pj_kn		987937	0					
ANR	998222	Identifier	pj_kn		987937	0					
ANR	998223	ArgumentList	pj		987937	1					
ANR	998224	Argument	pj		987937	0					
ANR	998225	Identifier	pj		987937	0					
ANR	998226	Argument	"""addr"""		987937	1					
ANR	998227	PrimaryExpression	"""addr"""		987937	0					
ANR	998228	Argument	addr		987937	2					
ANR	998229	Identifier	addr		987937	0					
ANR	998230	ExpressionStatement	"pj_kn ( pj , ""value"" , val )"	6553:6:182629:182653	987937	6	True				
ANR	998231	CallExpression	"pj_kn ( pj , ""value"" , val )"		987937	0					
ANR	998232	Callee	pj_kn		987937	0					
ANR	998233	Identifier	pj_kn		987937	0					
ANR	998234	ArgumentList	pj		987937	1					
ANR	998235	Argument	pj		987937	0					
ANR	998236	Identifier	pj		987937	0					
ANR	998237	Argument	"""value"""		987937	1					
ANR	998238	PrimaryExpression	"""value"""		987937	0					
ANR	998239	Argument	val		987937	2					
ANR	998240	Identifier	val		987937	0					
ANR	998241	ExpressionStatement	withref = 0	6556:6:182709:182720	987937	7	True				
ANR	998242	AssignmentExpression	withref = 0		987937	0		=			
ANR	998243	Identifier	withref		987937	0					
ANR	998244	PrimaryExpression	0		987937	1					
ANR	998245	IfStatement	if ( core -> print -> hasrefs )		987937	8					
ANR	998246	Condition	core -> print -> hasrefs	6557:10:182732:182751	987937	0	True				
ANR	998247	PtrMemberAccess	core -> print -> hasrefs		987937	0					
ANR	998248	PtrMemberAccess	core -> print		987937	0					
ANR	998249	Identifier	core		987937	0					
ANR	998250	Identifier	print		987937	1					
ANR	998251	Identifier	hasrefs		987937	1					
ANR	998252	CompoundStatement		1714:7:46726:46790	987937	1					
ANR	998253	IdentifierDeclStatement	"char * rstr = core -> print -> hasrefs ( core -> print -> user , val , true ) ;"	6558:7:182763:182827	987937	0	True				
ANR	998254	IdentifierDecl	"* rstr = core -> print -> hasrefs ( core -> print -> user , val , true )"		987937	0					
ANR	998255	IdentifierDeclType	char *		987937	0					
ANR	998256	Identifier	rstr		987937	1					
ANR	998257	AssignmentExpression	"* rstr = core -> print -> hasrefs ( core -> print -> user , val , true )"		987937	2		=			
ANR	998258	Identifier	rstr		987937	0					
ANR	998259	CallExpression	"core -> print -> hasrefs ( core -> print -> user , val , true )"		987937	1					
ANR	998260	Callee	core -> print -> hasrefs		987937	0					
ANR	998261	PtrMemberAccess	core -> print -> hasrefs		987937	0					
ANR	998262	PtrMemberAccess	core -> print		987937	0					
ANR	998263	Identifier	core		987937	0					
ANR	998264	Identifier	print		987937	1					
ANR	998265	Identifier	hasrefs		987937	1					
ANR	998266	ArgumentList	core -> print -> user		987937	1					
ANR	998267	Argument	core -> print -> user		987937	0					
ANR	998268	PtrMemberAccess	core -> print -> user		987937	0					
ANR	998269	PtrMemberAccess	core -> print		987937	0					
ANR	998270	Identifier	core		987937	0					
ANR	998271	Identifier	print		987937	1					
ANR	998272	Identifier	user		987937	1					
ANR	998273	Argument	val		987937	1					
ANR	998274	Identifier	val		987937	0					
ANR	998275	Argument	true		987937	2					
ANR	998276	Identifier	true		987937	0					
ANR	998277	IfStatement	if ( rstr && * rstr )		987937	1					
ANR	998278	Condition	rstr && * rstr	6559:11:182840:182852	987937	0	True				
ANR	998279	AndExpression	rstr && * rstr		987937	0		&&			
ANR	998280	Identifier	rstr		987937	0					
ANR	998281	UnaryOperationExpression	* rstr		987937	1					
ANR	998282	UnaryOperator	*		987937	0					
ANR	998283	Identifier	rstr		987937	1					
ANR	998284	CompoundStatement		1716:8:46828:46858	987937	1					
ANR	998285	IdentifierDeclStatement	char * ns = r_str_escape ( rstr ) ;	6560:8:182865:182895	987937	0	True				
ANR	998286	IdentifierDecl	* ns = r_str_escape ( rstr )		987937	0					
ANR	998287	IdentifierDeclType	char *		987937	0					
ANR	998288	Identifier	ns		987937	1					
ANR	998289	AssignmentExpression	* ns = r_str_escape ( rstr )		987937	2		=			
ANR	998290	Identifier	ns		987937	0					
ANR	998291	CallExpression	r_str_escape ( rstr )		987937	1					
ANR	998292	Callee	r_str_escape		987937	0					
ANR	998293	Identifier	r_str_escape		987937	0					
ANR	998294	ArgumentList	rstr		987937	1					
ANR	998295	Argument	rstr		987937	0					
ANR	998296	Identifier	rstr		987937	0					
ANR	998297	ExpressionStatement	"pj_ks ( pj , ""ref"" , r_str_trim_ro ( ns ) )"	6561:8:182905:182942	987937	1	True				
ANR	998298	CallExpression	"pj_ks ( pj , ""ref"" , r_str_trim_ro ( ns ) )"		987937	0					
ANR	998299	Callee	pj_ks		987937	0					
ANR	998300	Identifier	pj_ks		987937	0					
ANR	998301	ArgumentList	pj		987937	1					
ANR	998302	Argument	pj		987937	0					
ANR	998303	Identifier	pj		987937	0					
ANR	998304	Argument	"""ref"""		987937	1					
ANR	998305	PrimaryExpression	"""ref"""		987937	0					
ANR	998306	Argument	r_str_trim_ro ( ns )		987937	2					
ANR	998307	CallExpression	r_str_trim_ro ( ns )		987937	0					
ANR	998308	Callee	r_str_trim_ro		987937	0					
ANR	998309	Identifier	r_str_trim_ro		987937	0					
ANR	998310	ArgumentList	ns		987937	1					
ANR	998311	Argument	ns		987937	0					
ANR	998312	Identifier	ns		987937	0					
ANR	998313	ExpressionStatement	pj_end ( pj )	6562:8:182952:182963	987937	2	True				
ANR	998314	CallExpression	pj_end ( pj )		987937	0					
ANR	998315	Callee	pj_end		987937	0					
ANR	998316	Identifier	pj_end		987937	0					
ANR	998317	ArgumentList	pj		987937	1					
ANR	998318	Argument	pj		987937	0					
ANR	998319	Identifier	pj		987937	0					
ANR	998320	ExpressionStatement	free ( ns )	6563:8:182973:182982	987937	3	True				
ANR	998321	CallExpression	free ( ns )		987937	0					
ANR	998322	Callee	free		987937	0					
ANR	998323	Identifier	free		987937	0					
ANR	998324	ArgumentList	ns		987937	1					
ANR	998325	Argument	ns		987937	0					
ANR	998326	Identifier	ns		987937	0					
ANR	998327	ExpressionStatement	withref = 1	6564:8:182992:183003	987937	4	True				
ANR	998328	AssignmentExpression	withref = 1		987937	0		=			
ANR	998329	Identifier	withref		987937	0					
ANR	998330	PrimaryExpression	1		987937	1					
ANR	998331	ExpressionStatement	free ( rstr )	6566:7:183021:183032	987937	2	True				
ANR	998332	CallExpression	free ( rstr )		987937	0					
ANR	998333	Callee	free		987937	0					
ANR	998334	Identifier	free		987937	0					
ANR	998335	ArgumentList	rstr		987937	1					
ANR	998336	Argument	rstr		987937	0					
ANR	998337	Identifier	rstr		987937	0					
ANR	998338	IfStatement	if ( ! withref )		987937	9					
ANR	998339	Condition	! withref	6568:10:183052:183059	987937	0	True				
ANR	998340	UnaryOperationExpression	! withref		987937	0					
ANR	998341	UnaryOperator	!		987937	0					
ANR	998342	Identifier	withref		987937	1					
ANR	998343	CompoundStatement		1724:20:47025:47025	987937	1					
ANR	998344	ExpressionStatement	pj_end ( pj )	6569:7:183071:183082	987937	0	True				
ANR	998345	CallExpression	pj_end ( pj )		987937	0					
ANR	998346	Callee	pj_end		987937	0					
ANR	998347	Identifier	pj_end		987937	0					
ANR	998348	ArgumentList	pj		987937	1					
ANR	998349	Argument	pj		987937	0					
ANR	998350	Identifier	pj		987937	0					
ANR	998351	ExpressionStatement	pj_end ( pj )	6572:5:183104:183115	987937	8	True				
ANR	998352	CallExpression	pj_end ( pj )		987937	0					
ANR	998353	Callee	pj_end		987937	0					
ANR	998354	Identifier	pj_end		987937	0					
ANR	998355	ArgumentList	pj		987937	1					
ANR	998356	Argument	pj		987937	0					
ANR	998357	Identifier	pj		987937	0					
ANR	998358	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	6573:5:183122:183153	987937	9	True				
ANR	998359	CallExpression	r_cons_println ( pj_string ( pj ) )		987937	0					
ANR	998360	Callee	r_cons_println		987937	0					
ANR	998361	Identifier	r_cons_println		987937	0					
ANR	998362	ArgumentList	pj_string ( pj )		987937	1					
ANR	998363	Argument	pj_string ( pj )		987937	0					
ANR	998364	CallExpression	pj_string ( pj )		987937	0					
ANR	998365	Callee	pj_string		987937	0					
ANR	998366	Identifier	pj_string		987937	0					
ANR	998367	ArgumentList	pj		987937	1					
ANR	998368	Argument	pj		987937	0					
ANR	998369	Identifier	pj		987937	0					
ANR	998370	ExpressionStatement	pj_free ( pj )	6574:5:183160:183172	987937	10	True				
ANR	998371	CallExpression	pj_free ( pj )		987937	0					
ANR	998372	Callee	pj_free		987937	0					
ANR	998373	Identifier	pj_free		987937	0					
ANR	998374	ArgumentList	pj		987937	1					
ANR	998375	Argument	pj		987937	0					
ANR	998376	Identifier	pj		987937	0					
ANR	998377	ElseStatement	else		987937	0					
ANR	998378	CompoundStatement		1733:5:47197:47232	987937	0					
ANR	998379	IdentifierDeclStatement	const int ocols = core -> print -> cols ;	6576:5:183192:183227	987937	0	True				
ANR	998380	IdentifierDecl	ocols = core -> print -> cols		987937	0					
ANR	998381	IdentifierDeclType	const int		987937	0					
ANR	998382	Identifier	ocols		987937	1					
ANR	998383	AssignmentExpression	ocols = core -> print -> cols		987937	2		=			
ANR	998384	Identifier	ocols		987937	0					
ANR	998385	PtrMemberAccess	core -> print -> cols		987937	1					
ANR	998386	PtrMemberAccess	core -> print		987937	0					
ANR	998387	Identifier	core		987937	0					
ANR	998388	Identifier	print		987937	1					
ANR	998389	Identifier	cols		987937	1					
ANR	998390	IdentifierDeclStatement	int bitsize = core -> assembler -> bits ;	6577:5:183234:183269	987937	1	True				
ANR	998391	IdentifierDecl	bitsize = core -> assembler -> bits		987937	0					
ANR	998392	IdentifierDeclType	int		987937	0					
ANR	998393	Identifier	bitsize		987937	1					
ANR	998394	AssignmentExpression	bitsize = core -> assembler -> bits		987937	2		=			
ANR	998395	Identifier	bitsize		987937	0					
ANR	998396	PtrMemberAccess	core -> assembler -> bits		987937	1					
ANR	998397	PtrMemberAccess	core -> assembler		987937	0					
ANR	998398	Identifier	core		987937	0					
ANR	998399	Identifier	assembler		987937	1					
ANR	998400	Identifier	bits		987937	1					
ANR	998401	IfStatement	if ( bitsize == 16 )		987937	2					
ANR	998402	Condition	bitsize == 16	6579:9:183333:183345	987937	0	True				
ANR	998403	EqualityExpression	bitsize == 16		987937	0		==			
ANR	998404	Identifier	bitsize		987937	0					
ANR	998405	PrimaryExpression	16		987937	1					
ANR	998406	CompoundStatement		1735:24:47311:47311	987937	1					
ANR	998407	ExpressionStatement	bitsize = 32	6580:6:183356:183368	987937	0	True				
ANR	998408	AssignmentExpression	bitsize = 32		987937	0		=			
ANR	998409	Identifier	bitsize		987937	0					
ANR	998410	PrimaryExpression	32		987937	1					
ANR	998411	ExpressionStatement	core -> print -> cols = 1	6582:5:183382:183403	987937	3	True				
ANR	998412	AssignmentExpression	core -> print -> cols = 1		987937	0		=			
ANR	998413	PtrMemberAccess	core -> print -> cols		987937	0					
ANR	998414	PtrMemberAccess	core -> print		987937	0					
ANR	998415	Identifier	core		987937	0					
ANR	998416	Identifier	print		987937	1					
ANR	998417	Identifier	cols		987937	1					
ANR	998418	PrimaryExpression	1		987937	1					
ANR	998419	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_REFS	6583:5:183410:183450	987937	4	True				
ANR	998420	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_REFS		987937	0		|=			
ANR	998421	PtrMemberAccess	core -> print -> flags		987937	0					
ANR	998422	PtrMemberAccess	core -> print		987937	0					
ANR	998423	Identifier	core		987937	0					
ANR	998424	Identifier	print		987937	1					
ANR	998425	Identifier	flags		987937	1					
ANR	998426	Identifier	R_PRINT_FLAGS_REFS		987937	1					
ANR	998427	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	6584:5:183457:183487	987937	5	True				
ANR	998428	CallExpression	"r_cons_break_push ( NULL , NULL )"		987937	0					
ANR	998429	Callee	r_cons_break_push		987937	0					
ANR	998430	Identifier	r_cons_break_push		987937	0					
ANR	998431	ArgumentList	NULL		987937	1					
ANR	998432	Argument	NULL		987937	0					
ANR	998433	Identifier	NULL		987937	0					
ANR	998434	Argument	NULL		987937	1					
ANR	998435	Identifier	NULL		987937	0					
ANR	998436	ExpressionStatement	"r_print_hexdump ( core -> print , core -> offset , core -> block , R_MIN ( len , core -> blocksize ) , bitsize , bitsize / 8 , 1 )"	6585:5:183494:183617	987937	6	True				
ANR	998437	CallExpression	"r_print_hexdump ( core -> print , core -> offset , core -> block , R_MIN ( len , core -> blocksize ) , bitsize , bitsize / 8 , 1 )"		987937	0					
ANR	998438	Callee	r_print_hexdump		987937	0					
ANR	998439	Identifier	r_print_hexdump		987937	0					
ANR	998440	ArgumentList	core -> print		987937	1					
ANR	998441	Argument	core -> print		987937	0					
ANR	998442	PtrMemberAccess	core -> print		987937	0					
ANR	998443	Identifier	core		987937	0					
ANR	998444	Identifier	print		987937	1					
ANR	998445	Argument	core -> offset		987937	1					
ANR	998446	PtrMemberAccess	core -> offset		987937	0					
ANR	998447	Identifier	core		987937	0					
ANR	998448	Identifier	offset		987937	1					
ANR	998449	Argument	core -> block		987937	2					
ANR	998450	PtrMemberAccess	core -> block		987937	0					
ANR	998451	Identifier	core		987937	0					
ANR	998452	Identifier	block		987937	1					
ANR	998453	Argument	"R_MIN ( len , core -> blocksize )"		987937	3					
ANR	998454	CallExpression	"R_MIN ( len , core -> blocksize )"		987937	0					
ANR	998455	Callee	R_MIN		987937	0					
ANR	998456	Identifier	R_MIN		987937	0					
ANR	998457	ArgumentList	len		987937	1					
ANR	998458	Argument	len		987937	0					
ANR	998459	Identifier	len		987937	0					
ANR	998460	Argument	core -> blocksize		987937	1					
ANR	998461	PtrMemberAccess	core -> blocksize		987937	0					
ANR	998462	Identifier	core		987937	0					
ANR	998463	Identifier	blocksize		987937	1					
ANR	998464	Argument	bitsize		987937	4					
ANR	998465	Identifier	bitsize		987937	0					
ANR	998466	Argument	bitsize / 8		987937	5					
ANR	998467	MultiplicativeExpression	bitsize / 8		987937	0		/			
ANR	998468	Identifier	bitsize		987937	0					
ANR	998469	PrimaryExpression	8		987937	1					
ANR	998470	Argument	1		987937	6					
ANR	998471	PrimaryExpression	1		987937	0					
ANR	998472	ExpressionStatement	r_cons_break_pop ( )	6588:5:183624:183643	987937	7	True				
ANR	998473	CallExpression	r_cons_break_pop ( )		987937	0					
ANR	998474	Callee	r_cons_break_pop		987937	0					
ANR	998475	Identifier	r_cons_break_pop		987937	0					
ANR	998476	ArgumentList			987937	1					
ANR	998477	ExpressionStatement	core -> print -> flags &= ~R_PRINT_FLAGS_REFS	6589:5:183650:183691	987937	8	True				
ANR	998478	AssignmentExpression	core -> print -> flags &= ~R_PRINT_FLAGS_REFS		987937	0		&=			
ANR	998479	PtrMemberAccess	core -> print -> flags		987937	0					
ANR	998480	PtrMemberAccess	core -> print		987937	0					
ANR	998481	Identifier	core		987937	0					
ANR	998482	Identifier	print		987937	1					
ANR	998483	Identifier	flags		987937	1					
ANR	998484	Identifier	~R_PRINT_FLAGS_REFS		987937	1					
ANR	998485	ExpressionStatement	core -> print -> cols = ocols	6590:5:183698:183723	987937	9	True				
ANR	998486	AssignmentExpression	core -> print -> cols = ocols		987937	0		=			
ANR	998487	PtrMemberAccess	core -> print -> cols		987937	0					
ANR	998488	PtrMemberAccess	core -> print		987937	0					
ANR	998489	Identifier	core		987937	0					
ANR	998490	Identifier	print		987937	1					
ANR	998491	Identifier	cols		987937	1					
ANR	998492	Identifier	ocols		987937	1					
ANR	998493	BreakStatement	break ;	6593:3:183739:183744	987937	50	True				
ANR	998494	Label	case 'h' :	6594:2:183748:183756	987937	51	True				
ANR	998495	IfStatement	if ( l )		987937	52					
ANR	998496	Condition	l	6595:7:183774:183774	987937	0	True				
ANR	998497	Identifier	l		987937	0					
ANR	998498	CompoundStatement		1751:10:47740:47740	987937	1					
ANR	998499	IfStatement	if ( input [ 2 ] == 'j' )		987937	0					
ANR	998500	Condition	input [ 2 ] == 'j'	6596:8:183787:183801	987937	0	True				
ANR	998501	EqualityExpression	input [ 2 ] == 'j'		987937	0		==			
ANR	998502	ArrayIndexing	input [ 2 ]		987937	0					
ANR	998503	Identifier	input		987937	0					
ANR	998504	PrimaryExpression	2		987937	1					
ANR	998505	PrimaryExpression	'j'		987937	1					
ANR	998506	CompoundStatement		1752:25:47767:47767	987937	1					
ANR	998507	ExpressionStatement	"r_print_jsondump ( core -> print , core -> block , len , 16 )"	6597:5:183811:183863	987937	0	True				
ANR	998508	CallExpression	"r_print_jsondump ( core -> print , core -> block , len , 16 )"		987937	0					
ANR	998509	Callee	r_print_jsondump		987937	0					
ANR	998510	Identifier	r_print_jsondump		987937	0					
ANR	998511	ArgumentList	core -> print		987937	1					
ANR	998512	Argument	core -> print		987937	0					
ANR	998513	PtrMemberAccess	core -> print		987937	0					
ANR	998514	Identifier	core		987937	0					
ANR	998515	Identifier	print		987937	1					
ANR	998516	Argument	core -> block		987937	1					
ANR	998517	PtrMemberAccess	core -> block		987937	0					
ANR	998518	Identifier	core		987937	0					
ANR	998519	Identifier	block		987937	1					
ANR	998520	Argument	len		987937	2					
ANR	998521	Identifier	len		987937	0					
ANR	998522	Argument	16		987937	3					
ANR	998523	PrimaryExpression	16		987937	0					
ANR	998524	ElseStatement	else		987937	0					
ANR	998525	CompoundStatement		1754:11:47839:47839	987937	0					
ANR	998526	ExpressionStatement	"r_print_hexdump ( core -> print , core -> offset , core -> block , len , 32 , 2 , 1 )"	6599:5:183883:183960	987937	0	True				
ANR	998527	CallExpression	"r_print_hexdump ( core -> print , core -> offset , core -> block , len , 32 , 2 , 1 )"		987937	0					
ANR	998528	Callee	r_print_hexdump		987937	0					
ANR	998529	Identifier	r_print_hexdump		987937	0					
ANR	998530	ArgumentList	core -> print		987937	1					
ANR	998531	Argument	core -> print		987937	0					
ANR	998532	PtrMemberAccess	core -> print		987937	0					
ANR	998533	Identifier	core		987937	0					
ANR	998534	Identifier	print		987937	1					
ANR	998535	Argument	core -> offset		987937	1					
ANR	998536	PtrMemberAccess	core -> offset		987937	0					
ANR	998537	Identifier	core		987937	0					
ANR	998538	Identifier	offset		987937	1					
ANR	998539	Argument	core -> block		987937	2					
ANR	998540	PtrMemberAccess	core -> block		987937	0					
ANR	998541	Identifier	core		987937	0					
ANR	998542	Identifier	block		987937	1					
ANR	998543	Argument	len		987937	3					
ANR	998544	Identifier	len		987937	0					
ANR	998545	Argument	32		987937	4					
ANR	998546	PrimaryExpression	32		987937	0					
ANR	998547	Argument	2		987937	5					
ANR	998548	PrimaryExpression	2		987937	0					
ANR	998549	Argument	1		987937	6					
ANR	998550	PrimaryExpression	1		987937	0					
ANR	998551	BreakStatement	break ;	6603:3:183976:183981	987937	53	True				
ANR	998552	Label	case 'H' :	6604:2:183985:183993	987937	54	True				
ANR	998553	IfStatement	if ( l != 0 )		987937	55					
ANR	998554	Condition	l != 0	6605:7:184011:184016	987937	0	True				
ANR	998555	EqualityExpression	l != 0		987937	0		!=			
ANR	998556	Identifier	l		987937	0					
ANR	998557	PrimaryExpression	0		987937	1					
ANR	998558	CompoundStatement		1761:15:47982:47982	987937	1					
ANR	998559	ExpressionStatement	len = len - ( len % 2 )	6606:4:184025:184046	987937	0	True				
ANR	998560	AssignmentExpression	len = len - ( len % 2 )		987937	0		=			
ANR	998561	Identifier	len		987937	0					
ANR	998562	AdditiveExpression	len - ( len % 2 )		987937	1		-			
ANR	998563	Identifier	len		987937	0					
ANR	998564	MultiplicativeExpression	len % 2		987937	1		%			
ANR	998565	Identifier	len		987937	0					
ANR	998566	PrimaryExpression	2		987937	1					
ANR	998567	ForStatement	for ( i = 0 ; i < len ; i += 2 )		987937	1					
ANR	998568	ForInit	i = 0 ;	6607:9:184057:184062	987937	0	True				
ANR	998569	AssignmentExpression	i = 0		987937	0		=			
ANR	998570	Identifier	i		987937	0					
ANR	998571	PrimaryExpression	0		987937	1					
ANR	998572	Condition	i < len	6607:16:184064:184070	987937	1	True				
ANR	998573	RelationalExpression	i < len		987937	0		<			
ANR	998574	Identifier	i		987937	0					
ANR	998575	Identifier	len		987937	1					
ANR	998576	AssignmentExpression	i += 2	6607:25:184073:184078	987937	2	True	+=			
ANR	998577	Identifier	i		987937	0					
ANR	998578	PrimaryExpression	2		987937	1					
ANR	998579	CompoundStatement		1768:5:48139:48200	987937	3					
ANR	998580	IdentifierDeclStatement	"const char * a , * b ;"	6608:5:184088:184105	987937	0	True				
ANR	998581	IdentifierDecl	* a		987937	0					
ANR	998582	IdentifierDeclType	const char *		987937	0					
ANR	998583	Identifier	a		987937	1					
ANR	998584	IdentifierDecl	* b		987937	1					
ANR	998585	IdentifierDeclType	const char *		987937	0					
ANR	998586	Identifier	b		987937	1					
ANR	998587	IdentifierDeclStatement	char * fn ;	6609:5:184112:184120	987937	1	True				
ANR	998588	IdentifierDecl	* fn		987937	0					
ANR	998589	IdentifierDeclType	char *		987937	0					
ANR	998590	Identifier	fn		987937	1					
ANR	998591	IdentifierDeclStatement	RPrint * p = core -> print ;	6610:5:184127:184150	987937	2	True				
ANR	998592	IdentifierDecl	* p = core -> print		987937	0					
ANR	998593	IdentifierDeclType	RPrint *		987937	0					
ANR	998594	Identifier	p		987937	1					
ANR	998595	AssignmentExpression	* p = core -> print		987937	2		=			
ANR	998596	Identifier	p		987937	0					
ANR	998597	PtrMemberAccess	core -> print		987937	1					
ANR	998598	Identifier	core		987937	0					
ANR	998599	Identifier	print		987937	1					
ANR	998600	IdentifierDeclStatement	RFlagItem * f ;	6611:5:184157:184169	987937	3	True				
ANR	998601	IdentifierDecl	* f		987937	0					
ANR	998602	IdentifierDeclType	RFlagItem *		987937	0					
ANR	998603	Identifier	f		987937	1					
ANR	998604	IdentifierDeclStatement	"ut64 v = ( ut64 ) r_read_ble16 ( core -> block + i , p -> big_endian ) ;"	6612:5:184176:184237	987937	4	True				
ANR	998605	IdentifierDecl	"v = ( ut64 ) r_read_ble16 ( core -> block + i , p -> big_endian )"		987937	0					
ANR	998606	IdentifierDeclType	ut64		987937	0					
ANR	998607	Identifier	v		987937	1					
ANR	998608	AssignmentExpression	"v = ( ut64 ) r_read_ble16 ( core -> block + i , p -> big_endian )"		987937	2		=			
ANR	998609	Identifier	v		987937	0					
ANR	998610	CastExpression	"( ut64 ) r_read_ble16 ( core -> block + i , p -> big_endian )"		987937	1					
ANR	998611	CastTarget	ut64		987937	0					
ANR	998612	CallExpression	"r_read_ble16 ( core -> block + i , p -> big_endian )"		987937	1					
ANR	998613	Callee	r_read_ble16		987937	0					
ANR	998614	Identifier	r_read_ble16		987937	0					
ANR	998615	ArgumentList	core -> block + i		987937	1					
ANR	998616	Argument	core -> block + i		987937	0					
ANR	998617	AdditiveExpression	core -> block + i		987937	0		+			
ANR	998618	PtrMemberAccess	core -> block		987937	0					
ANR	998619	Identifier	core		987937	0					
ANR	998620	Identifier	block		987937	1					
ANR	998621	Identifier	i		987937	1					
ANR	998622	Argument	p -> big_endian		987937	1					
ANR	998623	PtrMemberAccess	p -> big_endian		987937	0					
ANR	998624	Identifier	p		987937	0					
ANR	998625	Identifier	big_endian		987937	1					
ANR	998626	IfStatement	if ( p && p -> colorfor )		987937	5					
ANR	998627	Condition	p && p -> colorfor	6613:9:184248:184263	987937	0	True				
ANR	998628	AndExpression	p && p -> colorfor		987937	0		&&			
ANR	998629	Identifier	p		987937	0					
ANR	998630	PtrMemberAccess	p -> colorfor		987937	1					
ANR	998631	Identifier	p		987937	0					
ANR	998632	Identifier	colorfor		987937	1					
ANR	998633	CompoundStatement		1769:27:48229:48229	987937	1					
ANR	998634	ExpressionStatement	"a = p -> colorfor ( p -> user , v , true )"	6614:6:184274:184308	987937	0	True				
ANR	998635	AssignmentExpression	"a = p -> colorfor ( p -> user , v , true )"		987937	0		=			
ANR	998636	Identifier	a		987937	0					
ANR	998637	CallExpression	"p -> colorfor ( p -> user , v , true )"		987937	1					
ANR	998638	Callee	p -> colorfor		987937	0					
ANR	998639	PtrMemberAccess	p -> colorfor		987937	0					
ANR	998640	Identifier	p		987937	0					
ANR	998641	Identifier	colorfor		987937	1					
ANR	998642	ArgumentList	p -> user		987937	1					
ANR	998643	Argument	p -> user		987937	0					
ANR	998644	PtrMemberAccess	p -> user		987937	0					
ANR	998645	Identifier	p		987937	0					
ANR	998646	Identifier	user		987937	1					
ANR	998647	Argument	v		987937	1					
ANR	998648	Identifier	v		987937	0					
ANR	998649	Argument	true		987937	2					
ANR	998650	Identifier	true		987937	0					
ANR	998651	IfStatement	if ( a && * a )		987937	1					
ANR	998652	Condition	a && * a	6615:10:184320:184326	987937	0	True				
ANR	998653	AndExpression	a && * a		987937	0		&&			
ANR	998654	Identifier	a		987937	0					
ANR	998655	UnaryOperationExpression	* a		987937	1					
ANR	998656	UnaryOperator	*		987937	0					
ANR	998657	Identifier	a		987937	1					
ANR	998658	CompoundStatement		1771:19:48292:48292	987937	1					
ANR	998659	ExpressionStatement	b = Color_RESET	6616:7:184338:184353	987937	0	True				
ANR	998660	AssignmentExpression	b = Color_RESET		987937	0		=			
ANR	998661	Identifier	b		987937	0					
ANR	998662	Identifier	Color_RESET		987937	1					
ANR	998663	ElseStatement	else		987937	0					
ANR	998664	CompoundStatement		1773:13:48331:48331	987937	0					
ANR	998665	ExpressionStatement	"a = b = """""	6618:7:184377:184387	987937	0	True				
ANR	998666	AssignmentExpression	"a = b = """""		987937	0		=			
ANR	998667	Identifier	a		987937	0					
ANR	998668	AssignmentExpression	"b = """""		987937	1		=			
ANR	998669	Identifier	b		987937	0					
ANR	998670	PrimaryExpression	""""""		987937	1					
ANR	998671	ElseStatement	else		987937	0					
ANR	998672	CompoundStatement		1776:12:48372:48372	987937	0					
ANR	998673	ExpressionStatement	"a = b = """""	6621:6:184417:184427	987937	0	True				
ANR	998674	AssignmentExpression	"a = b = """""		987937	0		=			
ANR	998675	Identifier	a		987937	0					
ANR	998676	AssignmentExpression	"b = """""		987937	1		=			
ANR	998677	Identifier	b		987937	0					
ANR	998678	PrimaryExpression	""""""		987937	1					
ANR	998679	ExpressionStatement	"f = r_flag_get_at ( core -> flags , v , true )"	6623:5:184441:184481	987937	6	True				
ANR	998680	AssignmentExpression	"f = r_flag_get_at ( core -> flags , v , true )"		987937	0		=			
ANR	998681	Identifier	f		987937	0					
ANR	998682	CallExpression	"r_flag_get_at ( core -> flags , v , true )"		987937	1					
ANR	998683	Callee	r_flag_get_at		987937	0					
ANR	998684	Identifier	r_flag_get_at		987937	0					
ANR	998685	ArgumentList	core -> flags		987937	1					
ANR	998686	Argument	core -> flags		987937	0					
ANR	998687	PtrMemberAccess	core -> flags		987937	0					
ANR	998688	Identifier	core		987937	0					
ANR	998689	Identifier	flags		987937	1					
ANR	998690	Argument	v		987937	1					
ANR	998691	Identifier	v		987937	0					
ANR	998692	Argument	true		987937	2					
ANR	998693	Identifier	true		987937	0					
ANR	998694	ExpressionStatement	fn = NULL	6624:5:184488:184497	987937	7	True				
ANR	998695	AssignmentExpression	fn = NULL		987937	0		=			
ANR	998696	Identifier	fn		987937	0					
ANR	998697	Identifier	NULL		987937	1					
ANR	998698	IfStatement	if ( f )		987937	8					
ANR	998699	Condition	f	6625:9:184508:184508	987937	0	True				
ANR	998700	Identifier	f		987937	0					
ANR	998701	CompoundStatement		1782:6:48482:48510	987937	1					
ANR	998702	IdentifierDeclStatement	st64 delta = ( v - f -> offset ) ;	6626:6:184519:184547	987937	0	True				
ANR	998703	IdentifierDecl	delta = ( v - f -> offset )		987937	0					
ANR	998704	IdentifierDeclType	st64		987937	0					
ANR	998705	Identifier	delta		987937	1					
ANR	998706	AssignmentExpression	delta = ( v - f -> offset )		987937	2		=			
ANR	998707	Identifier	delta		987937	0					
ANR	998708	AdditiveExpression	v - f -> offset		987937	1		-			
ANR	998709	Identifier	v		987937	0					
ANR	998710	PtrMemberAccess	f -> offset		987937	1					
ANR	998711	Identifier	f		987937	0					
ANR	998712	Identifier	offset		987937	1					
ANR	998713	IfStatement	if ( delta >= 0 && delta < 8192 )		987937	1					
ANR	998714	Condition	delta >= 0 && delta < 8192	6627:10:184559:184584	987937	0	True				
ANR	998715	AndExpression	delta >= 0 && delta < 8192		987937	0		&&			
ANR	998716	RelationalExpression	delta >= 0		987937	0		>=			
ANR	998717	Identifier	delta		987937	0					
ANR	998718	PrimaryExpression	0		987937	1					
ANR	998719	RelationalExpression	delta < 8192		987937	1		<			
ANR	998720	Identifier	delta		987937	0					
ANR	998721	PrimaryExpression	8192		987937	1					
ANR	998722	CompoundStatement		1783:38:48550:48550	987937	1					
ANR	998723	IfStatement	if ( v == f -> offset )		987937	0					
ANR	998724	Condition	v == f -> offset	6628:11:184600:184613	987937	0	True				
ANR	998725	EqualityExpression	v == f -> offset		987937	0		==			
ANR	998726	Identifier	v		987937	0					
ANR	998727	PtrMemberAccess	f -> offset		987937	1					
ANR	998728	Identifier	f		987937	0					
ANR	998729	Identifier	offset		987937	1					
ANR	998730	CompoundStatement		1784:27:48579:48579	987937	1					
ANR	998731	ExpressionStatement	fn = strdup ( f -> name )	6629:8:184626:184647	987937	0	True				
ANR	998732	AssignmentExpression	fn = strdup ( f -> name )		987937	0		=			
ANR	998733	Identifier	fn		987937	0					
ANR	998734	CallExpression	strdup ( f -> name )		987937	1					
ANR	998735	Callee	strdup		987937	0					
ANR	998736	Identifier	strdup		987937	0					
ANR	998737	ArgumentList	f -> name		987937	1					
ANR	998738	Argument	f -> name		987937	0					
ANR	998739	PtrMemberAccess	f -> name		987937	0					
ANR	998740	Identifier	f		987937	0					
ANR	998741	Identifier	name		987937	1					
ANR	998742	ElseStatement	else		987937	0					
ANR	998743	CompoundStatement		1786:14:48626:48626	987937	0					
ANR	998744	ExpressionStatement	"fn = r_str_newf ( ""%s+%d"" , f -> name , v - f -> offset )"	6631:8:184673:184722	987937	0	True				
ANR	998745	AssignmentExpression	"fn = r_str_newf ( ""%s+%d"" , f -> name , v - f -> offset )"		987937	0		=			
ANR	998746	Identifier	fn		987937	0					
ANR	998747	CallExpression	"r_str_newf ( ""%s+%d"" , f -> name , v - f -> offset )"		987937	1					
ANR	998748	Callee	r_str_newf		987937	0					
ANR	998749	Identifier	r_str_newf		987937	0					
ANR	998750	ArgumentList	"""%s+%d"""		987937	1					
ANR	998751	Argument	"""%s+%d"""		987937	0					
ANR	998752	PrimaryExpression	"""%s+%d"""		987937	0					
ANR	998753	Argument	f -> name		987937	1					
ANR	998754	PtrMemberAccess	f -> name		987937	0					
ANR	998755	Identifier	f		987937	0					
ANR	998756	Identifier	name		987937	1					
ANR	998757	Argument	v - f -> offset		987937	2					
ANR	998758	AdditiveExpression	v - f -> offset		987937	0		-			
ANR	998759	Identifier	v		987937	0					
ANR	998760	PtrMemberAccess	f -> offset		987937	1					
ANR	998761	Identifier	f		987937	0					
ANR	998762	Identifier	offset		987937	1					
ANR	998763	Statement	r_cons_printf	6635:5:184753:184765	987937	9	True				
ANR	998764	Statement	(	6635:19:184767:184767	987937	10	True				
ANR	998765	Statement	"""0x%08"""	6635:20:184768:184774	987937	11	True				
ANR	998766	Statement	PFMT64x	6635:27:184775:184781	987937	12	True				
ANR	998767	Statement	""" %s0x%04"""	6635:35:184783:184792	987937	13	True				
ANR	998768	Statement	PFMT64x	6635:45:184793:184799	987937	14	True				
ANR	998769	Statement	"""%s %s\\n"""	6635:53:184801:184809	987937	15	True				
ANR	998770	Statement	","	6635:62:184810:184810	987937	16	True				
ANR	998771	Statement	(	6636:6:184818:184818	987937	17	True				
ANR	998772	Statement	ut64	6636:7:184819:184822	987937	18	True				
ANR	998773	Statement	)	6636:11:184823:184823	987937	19	True				
ANR	998774	Statement	core	6636:13:184825:184828	987937	20	True				
ANR	998775	Statement	->	6636:17:184829:184830	987937	21	True				
ANR	998776	Statement	offset	6636:19:184831:184836	987937	22	True				
ANR	998777	Statement	+	6636:26:184838:184838	987937	23	True				
ANR	998778	Statement	i	6636:28:184840:184840	987937	24	True				
ANR	998779	Statement	","	6636:29:184841:184841	987937	25	True				
ANR	998780	Statement	a	6636:31:184843:184843	987937	26	True				
ANR	998781	Statement	","	6636:32:184844:184844	987937	27	True				
ANR	998782	Statement	v	6636:34:184846:184846	987937	28	True				
ANR	998783	Statement	","	6636:35:184847:184847	987937	29	True				
ANR	998784	Statement	b	6636:37:184849:184849	987937	30	True				
ANR	998785	Statement	","	6636:38:184850:184850	987937	31	True				
ANR	998786	Statement	fn	6636:40:184852:184853	987937	32	True				
ANR	998787	Statement	?	6636:42:184854:184854	987937	33	True				
ANR	998788	Label	fn :	6636:44:184856:184858	987937	34	True				
ANR	998789	Identifier	fn		987937	0					
ANR	998790	Statement	""""""	6636:48:184860:184861	987937	35	True				
ANR	998791	Statement	)	6636:50:184862:184862	987937	36	True				
ANR	998792	ExpressionStatement		6636:51:184863:184863	987937	37	True				
ANR	998793	ExpressionStatement	free ( fn )	6637:5:184870:184879	987937	38	True				
ANR	998794	CallExpression	free ( fn )		987937	0					
ANR	998795	Callee	free		987937	0					
ANR	998796	Identifier	free		987937	0					
ANR	998797	ArgumentList	fn		987937	1					
ANR	998798	Argument	fn		987937	0					
ANR	998799	Identifier	fn		987937	0					
ANR	998800	BreakStatement	break ;	6640:3:184895:184900	987937	56	True				
ANR	998801	Label	case 'q' :	6641:2:184904:184912	987937	57	True				
ANR	998802	IfStatement	if ( l )		987937	58					
ANR	998803	Condition	l	6642:7:184930:184930	987937	0	True				
ANR	998804	Identifier	l		987937	0					
ANR	998805	CompoundStatement		1798:10:48896:48896	987937	1					
ANR	998806	IfStatement	if ( input [ 2 ] == 'j' )		987937	0					
ANR	998807	Condition	input [ 2 ] == 'j'	6643:8:184943:184957	987937	0	True				
ANR	998808	EqualityExpression	input [ 2 ] == 'j'		987937	0		==			
ANR	998809	ArrayIndexing	input [ 2 ]		987937	0					
ANR	998810	Identifier	input		987937	0					
ANR	998811	PrimaryExpression	2		987937	1					
ANR	998812	PrimaryExpression	'j'		987937	1					
ANR	998813	CompoundStatement		1799:25:48923:48923	987937	1					
ANR	998814	ExpressionStatement	"r_print_jsondump ( core -> print , core -> block , len , 64 )"	6644:5:184967:185019	987937	0	True				
ANR	998815	CallExpression	"r_print_jsondump ( core -> print , core -> block , len , 64 )"		987937	0					
ANR	998816	Callee	r_print_jsondump		987937	0					
ANR	998817	Identifier	r_print_jsondump		987937	0					
ANR	998818	ArgumentList	core -> print		987937	1					
ANR	998819	Argument	core -> print		987937	0					
ANR	998820	PtrMemberAccess	core -> print		987937	0					
ANR	998821	Identifier	core		987937	0					
ANR	998822	Identifier	print		987937	1					
ANR	998823	Argument	core -> block		987937	1					
ANR	998824	PtrMemberAccess	core -> block		987937	0					
ANR	998825	Identifier	core		987937	0					
ANR	998826	Identifier	block		987937	1					
ANR	998827	Argument	len		987937	2					
ANR	998828	Identifier	len		987937	0					
ANR	998829	Argument	64		987937	3					
ANR	998830	PrimaryExpression	64		987937	0					
ANR	998831	ElseStatement	else		987937	0					
ANR	998832	CompoundStatement		1801:11:48995:48995	987937	0					
ANR	998833	ExpressionStatement	"r_print_hexdump ( core -> print , core -> offset , core -> block , len , 64 , 8 , 1 )"	6646:5:185039:185110	987937	0	True				
ANR	998834	CallExpression	"r_print_hexdump ( core -> print , core -> offset , core -> block , len , 64 , 8 , 1 )"		987937	0					
ANR	998835	Callee	r_print_hexdump		987937	0					
ANR	998836	Identifier	r_print_hexdump		987937	0					
ANR	998837	ArgumentList	core -> print		987937	1					
ANR	998838	Argument	core -> print		987937	0					
ANR	998839	PtrMemberAccess	core -> print		987937	0					
ANR	998840	Identifier	core		987937	0					
ANR	998841	Identifier	print		987937	1					
ANR	998842	Argument	core -> offset		987937	1					
ANR	998843	PtrMemberAccess	core -> offset		987937	0					
ANR	998844	Identifier	core		987937	0					
ANR	998845	Identifier	offset		987937	1					
ANR	998846	Argument	core -> block		987937	2					
ANR	998847	PtrMemberAccess	core -> block		987937	0					
ANR	998848	Identifier	core		987937	0					
ANR	998849	Identifier	block		987937	1					
ANR	998850	Argument	len		987937	3					
ANR	998851	Identifier	len		987937	0					
ANR	998852	Argument	64		987937	4					
ANR	998853	PrimaryExpression	64		987937	0					
ANR	998854	Argument	8		987937	5					
ANR	998855	PrimaryExpression	8		987937	0					
ANR	998856	Argument	1		987937	6					
ANR	998857	PrimaryExpression	1		987937	0					
ANR	998858	BreakStatement	break ;	6649:3:185126:185131	987937	59	True				
ANR	998859	Label	case 'Q' :	6650:2:185135:185143	987937	60	True				
ANR	998860	IfStatement	if ( l )		987937	61					
ANR	998861	Condition	l	6652:7:185211:185211	987937	0	True				
ANR	998862	Identifier	l		987937	0					
ANR	998863	CompoundStatement		1809:4:49183:49266	987937	1					
ANR	998864	IdentifierDeclStatement	"bool printOffset = ( input [ 2 ] != 'q' && r_config_get_i ( core -> config , ""asm.offset"" ) ) ;"	6653:4:185220:185303	987937	0	True				
ANR	998865	IdentifierDecl	"printOffset = ( input [ 2 ] != 'q' && r_config_get_i ( core -> config , ""asm.offset"" ) )"		987937	0					
ANR	998866	IdentifierDeclType	bool		987937	0					
ANR	998867	Identifier	printOffset		987937	1					
ANR	998868	AssignmentExpression	"printOffset = ( input [ 2 ] != 'q' && r_config_get_i ( core -> config , ""asm.offset"" ) )"		987937	2		=			
ANR	998869	Identifier	printOffset		987937	0					
ANR	998870	AndExpression	"input [ 2 ] != 'q' && r_config_get_i ( core -> config , ""asm.offset"" )"		987937	1		&&			
ANR	998871	EqualityExpression	input [ 2 ] != 'q'		987937	0		!=			
ANR	998872	ArrayIndexing	input [ 2 ]		987937	0					
ANR	998873	Identifier	input		987937	0					
ANR	998874	PrimaryExpression	2		987937	1					
ANR	998875	PrimaryExpression	'q'		987937	1					
ANR	998876	CallExpression	"r_config_get_i ( core -> config , ""asm.offset"" )"		987937	1					
ANR	998877	Callee	r_config_get_i		987937	0					
ANR	998878	Identifier	r_config_get_i		987937	0					
ANR	998879	ArgumentList	core -> config		987937	1					
ANR	998880	Argument	core -> config		987937	0					
ANR	998881	PtrMemberAccess	core -> config		987937	0					
ANR	998882	Identifier	core		987937	0					
ANR	998883	Identifier	config		987937	1					
ANR	998884	Argument	"""asm.offset"""		987937	1					
ANR	998885	PrimaryExpression	"""asm.offset"""		987937	0					
ANR	998886	ExpressionStatement	len = len - ( len % 8 )	6654:4:185309:185330	987937	1	True				
ANR	998887	AssignmentExpression	len = len - ( len % 8 )		987937	0		=			
ANR	998888	Identifier	len		987937	0					
ANR	998889	AdditiveExpression	len - ( len % 8 )		987937	1		-			
ANR	998890	Identifier	len		987937	0					
ANR	998891	MultiplicativeExpression	len % 8		987937	1		%			
ANR	998892	Identifier	len		987937	0					
ANR	998893	PrimaryExpression	8		987937	1					
ANR	998894	ForStatement	for ( i = 0 ; i < len ; i += 8 )		987937	2					
ANR	998895	ForInit	i = 0 ;	6655:9:185341:185346	987937	0	True				
ANR	998896	AssignmentExpression	i = 0		987937	0		=			
ANR	998897	Identifier	i		987937	0					
ANR	998898	PrimaryExpression	0		987937	1					
ANR	998899	Condition	i < len	6655:16:185348:185354	987937	1	True				
ANR	998900	RelationalExpression	i < len		987937	0		<			
ANR	998901	Identifier	i		987937	0					
ANR	998902	Identifier	len		987937	1					
ANR	998903	AssignmentExpression	i += 8	6655:25:185357:185362	987937	2	True	+=			
ANR	998904	Identifier	i		987937	0					
ANR	998905	PrimaryExpression	8		987937	1					
ANR	998906	CompoundStatement		1816:5:49423:49477	987937	3					
ANR	998907	IdentifierDeclStatement	"const char * a , * b ;"	6656:5:185372:185389	987937	0	True				
ANR	998908	IdentifierDecl	* a		987937	0					
ANR	998909	IdentifierDeclType	const char *		987937	0					
ANR	998910	Identifier	a		987937	1					
ANR	998911	IdentifierDecl	* b		987937	1					
ANR	998912	IdentifierDeclType	const char *		987937	0					
ANR	998913	Identifier	b		987937	1					
ANR	998914	IdentifierDeclStatement	char * fn ;	6657:5:185396:185404	987937	1	True				
ANR	998915	IdentifierDecl	* fn		987937	0					
ANR	998916	IdentifierDeclType	char *		987937	0					
ANR	998917	Identifier	fn		987937	1					
ANR	998918	IdentifierDeclStatement	RPrint * p = core -> print ;	6658:5:185411:185434	987937	2	True				
ANR	998919	IdentifierDecl	* p = core -> print		987937	0					
ANR	998920	IdentifierDeclType	RPrint *		987937	0					
ANR	998921	Identifier	p		987937	1					
ANR	998922	AssignmentExpression	* p = core -> print		987937	2		=			
ANR	998923	Identifier	p		987937	0					
ANR	998924	PtrMemberAccess	core -> print		987937	1					
ANR	998925	Identifier	core		987937	0					
ANR	998926	Identifier	print		987937	1					
ANR	998927	IdentifierDeclStatement	RFlagItem * f ;	6659:5:185441:185453	987937	3	True				
ANR	998928	IdentifierDecl	* f		987937	0					
ANR	998929	IdentifierDeclType	RFlagItem *		987937	0					
ANR	998930	Identifier	f		987937	1					
ANR	998931	IdentifierDeclStatement	"ut64 v = r_read_ble64 ( core -> block + i , p -> big_endian ) ;"	6660:5:185460:185514	987937	4	True				
ANR	998932	IdentifierDecl	"v = r_read_ble64 ( core -> block + i , p -> big_endian )"		987937	0					
ANR	998933	IdentifierDeclType	ut64		987937	0					
ANR	998934	Identifier	v		987937	1					
ANR	998935	AssignmentExpression	"v = r_read_ble64 ( core -> block + i , p -> big_endian )"		987937	2		=			
ANR	998936	Identifier	v		987937	0					
ANR	998937	CallExpression	"r_read_ble64 ( core -> block + i , p -> big_endian )"		987937	1					
ANR	998938	Callee	r_read_ble64		987937	0					
ANR	998939	Identifier	r_read_ble64		987937	0					
ANR	998940	ArgumentList	core -> block + i		987937	1					
ANR	998941	Argument	core -> block + i		987937	0					
ANR	998942	AdditiveExpression	core -> block + i		987937	0		+			
ANR	998943	PtrMemberAccess	core -> block		987937	0					
ANR	998944	Identifier	core		987937	0					
ANR	998945	Identifier	block		987937	1					
ANR	998946	Identifier	i		987937	1					
ANR	998947	Argument	p -> big_endian		987937	1					
ANR	998948	PtrMemberAccess	p -> big_endian		987937	0					
ANR	998949	Identifier	p		987937	0					
ANR	998950	Identifier	big_endian		987937	1					
ANR	998951	IfStatement	if ( p && p -> colorfor )		987937	5					
ANR	998952	Condition	p && p -> colorfor	6661:9:185525:185540	987937	0	True				
ANR	998953	AndExpression	p && p -> colorfor		987937	0		&&			
ANR	998954	Identifier	p		987937	0					
ANR	998955	PtrMemberAccess	p -> colorfor		987937	1					
ANR	998956	Identifier	p		987937	0					
ANR	998957	Identifier	colorfor		987937	1					
ANR	998958	CompoundStatement		1817:27:49506:49506	987937	1					
ANR	998959	ExpressionStatement	"a = p -> colorfor ( p -> user , v , true )"	6662:6:185551:185585	987937	0	True				
ANR	998960	AssignmentExpression	"a = p -> colorfor ( p -> user , v , true )"		987937	0		=			
ANR	998961	Identifier	a		987937	0					
ANR	998962	CallExpression	"p -> colorfor ( p -> user , v , true )"		987937	1					
ANR	998963	Callee	p -> colorfor		987937	0					
ANR	998964	PtrMemberAccess	p -> colorfor		987937	0					
ANR	998965	Identifier	p		987937	0					
ANR	998966	Identifier	colorfor		987937	1					
ANR	998967	ArgumentList	p -> user		987937	1					
ANR	998968	Argument	p -> user		987937	0					
ANR	998969	PtrMemberAccess	p -> user		987937	0					
ANR	998970	Identifier	p		987937	0					
ANR	998971	Identifier	user		987937	1					
ANR	998972	Argument	v		987937	1					
ANR	998973	Identifier	v		987937	0					
ANR	998974	Argument	true		987937	2					
ANR	998975	Identifier	true		987937	0					
ANR	998976	IfStatement	if ( a && * a )		987937	1					
ANR	998977	Condition	a && * a	6663:10:185597:185603	987937	0	True				
ANR	998978	AndExpression	a && * a		987937	0		&&			
ANR	998979	Identifier	a		987937	0					
ANR	998980	UnaryOperationExpression	* a		987937	1					
ANR	998981	UnaryOperator	*		987937	0					
ANR	998982	Identifier	a		987937	1					
ANR	998983	CompoundStatement		1819:19:49569:49569	987937	1					
ANR	998984	ExpressionStatement	b = Color_RESET	6664:7:185615:185630	987937	0	True				
ANR	998985	AssignmentExpression	b = Color_RESET		987937	0		=			
ANR	998986	Identifier	b		987937	0					
ANR	998987	Identifier	Color_RESET		987937	1					
ANR	998988	ElseStatement	else		987937	0					
ANR	998989	CompoundStatement		1821:13:49608:49608	987937	0					
ANR	998990	ExpressionStatement	"a = b = """""	6666:7:185654:185664	987937	0	True				
ANR	998991	AssignmentExpression	"a = b = """""		987937	0		=			
ANR	998992	Identifier	a		987937	0					
ANR	998993	AssignmentExpression	"b = """""		987937	1		=			
ANR	998994	Identifier	b		987937	0					
ANR	998995	PrimaryExpression	""""""		987937	1					
ANR	998996	ElseStatement	else		987937	0					
ANR	998997	CompoundStatement		1824:12:49649:49649	987937	0					
ANR	998998	ExpressionStatement	"a = b = """""	6669:6:185694:185704	987937	0	True				
ANR	998999	AssignmentExpression	"a = b = """""		987937	0		=			
ANR	999000	Identifier	a		987937	0					
ANR	999001	AssignmentExpression	"b = """""		987937	1		=			
ANR	999002	Identifier	b		987937	0					
ANR	999003	PrimaryExpression	""""""		987937	1					
ANR	999004	ExpressionStatement	"f = r_flag_get_at ( core -> flags , v , true )"	6671:5:185718:185758	987937	6	True				
ANR	999005	AssignmentExpression	"f = r_flag_get_at ( core -> flags , v , true )"		987937	0		=			
ANR	999006	Identifier	f		987937	0					
ANR	999007	CallExpression	"r_flag_get_at ( core -> flags , v , true )"		987937	1					
ANR	999008	Callee	r_flag_get_at		987937	0					
ANR	999009	Identifier	r_flag_get_at		987937	0					
ANR	999010	ArgumentList	core -> flags		987937	1					
ANR	999011	Argument	core -> flags		987937	0					
ANR	999012	PtrMemberAccess	core -> flags		987937	0					
ANR	999013	Identifier	core		987937	0					
ANR	999014	Identifier	flags		987937	1					
ANR	999015	Argument	v		987937	1					
ANR	999016	Identifier	v		987937	0					
ANR	999017	Argument	true		987937	2					
ANR	999018	Identifier	true		987937	0					
ANR	999019	ExpressionStatement	fn = NULL	6672:5:185765:185774	987937	7	True				
ANR	999020	AssignmentExpression	fn = NULL		987937	0		=			
ANR	999021	Identifier	fn		987937	0					
ANR	999022	Identifier	NULL		987937	1					
ANR	999023	IfStatement	if ( f )		987937	8					
ANR	999024	Condition	f	6673:9:185785:185785	987937	0	True				
ANR	999025	Identifier	f		987937	0					
ANR	999026	CompoundStatement		1830:6:49759:49787	987937	1					
ANR	999027	IdentifierDeclStatement	st64 delta = ( v - f -> offset ) ;	6674:6:185796:185824	987937	0	True				
ANR	999028	IdentifierDecl	delta = ( v - f -> offset )		987937	0					
ANR	999029	IdentifierDeclType	st64		987937	0					
ANR	999030	Identifier	delta		987937	1					
ANR	999031	AssignmentExpression	delta = ( v - f -> offset )		987937	2		=			
ANR	999032	Identifier	delta		987937	0					
ANR	999033	AdditiveExpression	v - f -> offset		987937	1		-			
ANR	999034	Identifier	v		987937	0					
ANR	999035	PtrMemberAccess	f -> offset		987937	1					
ANR	999036	Identifier	f		987937	0					
ANR	999037	Identifier	offset		987937	1					
ANR	999038	IfStatement	if ( delta >= 0 && delta < 8192 )		987937	1					
ANR	999039	Condition	delta >= 0 && delta < 8192	6675:10:185836:185861	987937	0	True				
ANR	999040	AndExpression	delta >= 0 && delta < 8192		987937	0		&&			
ANR	999041	RelationalExpression	delta >= 0		987937	0		>=			
ANR	999042	Identifier	delta		987937	0					
ANR	999043	PrimaryExpression	0		987937	1					
ANR	999044	RelationalExpression	delta < 8192		987937	1		<			
ANR	999045	Identifier	delta		987937	0					
ANR	999046	PrimaryExpression	8192		987937	1					
ANR	999047	CompoundStatement		1831:38:49827:49827	987937	1					
ANR	999048	IfStatement	if ( v == f -> offset )		987937	0					
ANR	999049	Condition	v == f -> offset	6676:11:185877:185890	987937	0	True				
ANR	999050	EqualityExpression	v == f -> offset		987937	0		==			
ANR	999051	Identifier	v		987937	0					
ANR	999052	PtrMemberAccess	f -> offset		987937	1					
ANR	999053	Identifier	f		987937	0					
ANR	999054	Identifier	offset		987937	1					
ANR	999055	CompoundStatement		1832:27:49856:49856	987937	1					
ANR	999056	ExpressionStatement	fn = strdup ( f -> name )	6677:8:185903:185924	987937	0	True				
ANR	999057	AssignmentExpression	fn = strdup ( f -> name )		987937	0		=			
ANR	999058	Identifier	fn		987937	0					
ANR	999059	CallExpression	strdup ( f -> name )		987937	1					
ANR	999060	Callee	strdup		987937	0					
ANR	999061	Identifier	strdup		987937	0					
ANR	999062	ArgumentList	f -> name		987937	1					
ANR	999063	Argument	f -> name		987937	0					
ANR	999064	PtrMemberAccess	f -> name		987937	0					
ANR	999065	Identifier	f		987937	0					
ANR	999066	Identifier	name		987937	1					
ANR	999067	ElseStatement	else		987937	0					
ANR	999068	CompoundStatement		1834:14:49903:49903	987937	0					
ANR	999069	ExpressionStatement	"fn = r_str_newf ( ""%s+%d"" , f -> name , v - f -> offset )"	6679:8:185950:185999	987937	0	True				
ANR	999070	AssignmentExpression	"fn = r_str_newf ( ""%s+%d"" , f -> name , v - f -> offset )"		987937	0		=			
ANR	999071	Identifier	fn		987937	0					
ANR	999072	CallExpression	"r_str_newf ( ""%s+%d"" , f -> name , v - f -> offset )"		987937	1					
ANR	999073	Callee	r_str_newf		987937	0					
ANR	999074	Identifier	r_str_newf		987937	0					
ANR	999075	ArgumentList	"""%s+%d"""		987937	1					
ANR	999076	Argument	"""%s+%d"""		987937	0					
ANR	999077	PrimaryExpression	"""%s+%d"""		987937	0					
ANR	999078	Argument	f -> name		987937	1					
ANR	999079	PtrMemberAccess	f -> name		987937	0					
ANR	999080	Identifier	f		987937	0					
ANR	999081	Identifier	name		987937	1					
ANR	999082	Argument	v - f -> offset		987937	2					
ANR	999083	AdditiveExpression	v - f -> offset		987937	0		-			
ANR	999084	Identifier	v		987937	0					
ANR	999085	PtrMemberAccess	f -> offset		987937	1					
ANR	999086	Identifier	f		987937	0					
ANR	999087	Identifier	offset		987937	1					
ANR	999088	IfStatement	if ( printOffset )		987937	9					
ANR	999089	Condition	printOffset	6683:9:186034:186044	987937	0	True				
ANR	999090	Identifier	printOffset		987937	0					
ANR	999091	CompoundStatement		1839:22:50010:50010	987937	1					
ANR	999092	ExpressionStatement	"r_print_section ( core -> print , core -> offset + i )"	6684:6:186055:186101	987937	0	True				
ANR	999093	CallExpression	"r_print_section ( core -> print , core -> offset + i )"		987937	0					
ANR	999094	Callee	r_print_section		987937	0					
ANR	999095	Identifier	r_print_section		987937	0					
ANR	999096	ArgumentList	core -> print		987937	1					
ANR	999097	Argument	core -> print		987937	0					
ANR	999098	PtrMemberAccess	core -> print		987937	0					
ANR	999099	Identifier	core		987937	0					
ANR	999100	Identifier	print		987937	1					
ANR	999101	Argument	core -> offset + i		987937	1					
ANR	999102	AdditiveExpression	core -> offset + i		987937	0		+			
ANR	999103	PtrMemberAccess	core -> offset		987937	0					
ANR	999104	Identifier	core		987937	0					
ANR	999105	Identifier	offset		987937	1					
ANR	999106	Identifier	i		987937	1					
ANR	999107	Statement	r_cons_printf	6685:6:186109:186121	987937	1	True				
ANR	999108	Statement	(	6685:20:186123:186123	987937	2	True				
ANR	999109	Statement	"""0x%08"""	6685:21:186124:186130	987937	3	True				
ANR	999110	Statement	PFMT64x	6685:28:186131:186137	987937	4	True				
ANR	999111	Statement	""" %s0x%016"""	6685:36:186139:186149	987937	5	True				
ANR	999112	Statement	PFMT64x	6685:47:186150:186156	987937	6	True				
ANR	999113	Statement	"""%s %s\\n"""	6685:55:186158:186166	987937	7	True				
ANR	999114	Statement	","	6685:64:186167:186167	987937	8	True				
ANR	999115	Statement	(	6686:8:186177:186177	987937	9	True				
ANR	999116	Statement	ut64	6686:9:186178:186181	987937	10	True				
ANR	999117	Statement	)	6686:13:186182:186182	987937	11	True				
ANR	999118	Statement	core	6686:15:186184:186187	987937	12	True				
ANR	999119	Statement	->	6686:19:186188:186189	987937	13	True				
ANR	999120	Statement	offset	6686:21:186190:186195	987937	14	True				
ANR	999121	Statement	+	6686:28:186197:186197	987937	15	True				
ANR	999122	Statement	i	6686:30:186199:186199	987937	16	True				
ANR	999123	Statement	","	6686:31:186200:186200	987937	17	True				
ANR	999124	Statement	a	6686:33:186202:186202	987937	18	True				
ANR	999125	Statement	","	6686:34:186203:186203	987937	19	True				
ANR	999126	Statement	v	6686:36:186205:186205	987937	20	True				
ANR	999127	Statement	","	6686:37:186206:186206	987937	21	True				
ANR	999128	Statement	b	6686:39:186208:186208	987937	22	True				
ANR	999129	Statement	","	6686:40:186209:186209	987937	23	True				
ANR	999130	Statement	fn	6686:42:186211:186212	987937	24	True				
ANR	999131	Statement	?	6686:44:186213:186213	987937	25	True				
ANR	999132	Label	fn :	6686:46:186215:186217	987937	26	True				
ANR	999133	Identifier	fn		987937	0					
ANR	999134	Statement	""""""	6686:50:186219:186220	987937	27	True				
ANR	999135	Statement	)	6686:52:186221:186221	987937	28	True				
ANR	999136	ExpressionStatement		6686:53:186222:186222	987937	29	True				
ANR	999137	ElseStatement	else		987937	0					
ANR	999138	CompoundStatement		1843:12:50199:50199	987937	0					
ANR	999139	Statement	r_cons_printf	6688:6:186244:186256	987937	0	True				
ANR	999140	Statement	(	6688:20:186258:186258	987937	1	True				
ANR	999141	Statement	"""%s0x%016"""	6688:21:186259:186268	987937	2	True				
ANR	999142	Statement	PFMT64x	6688:31:186269:186275	987937	3	True				
ANR	999143	Statement	"""%s\\n"""	6688:39:186277:186282	987937	4	True				
ANR	999144	Statement	","	6688:45:186283:186283	987937	5	True				
ANR	999145	Statement	a	6688:47:186285:186285	987937	6	True				
ANR	999146	Statement	","	6688:48:186286:186286	987937	7	True				
ANR	999147	Statement	v	6688:50:186288:186288	987937	8	True				
ANR	999148	Statement	","	6688:51:186289:186289	987937	9	True				
ANR	999149	Statement	b	6688:53:186291:186291	987937	10	True				
ANR	999150	Statement	)	6688:54:186292:186292	987937	11	True				
ANR	999151	ExpressionStatement		6688:55:186293:186293	987937	12	True				
ANR	999152	ExpressionStatement	free ( fn )	6690:5:186307:186316	987937	10	True				
ANR	999153	CallExpression	free ( fn )		987937	0					
ANR	999154	Callee	free		987937	0					
ANR	999155	Identifier	free		987937	0					
ANR	999156	ArgumentList	fn		987937	1					
ANR	999157	Argument	fn		987937	0					
ANR	999158	Identifier	fn		987937	0					
ANR	999159	BreakStatement	break ;	6693:3:186332:186337	987937	62	True				
ANR	999160	Label	case 's' :	6694:2:186341:186349	987937	63	True				
ANR	999161	IfStatement	if ( l )		987937	64					
ANR	999162	Condition	l	6695:7:186367:186367	987937	0	True				
ANR	999163	Identifier	l		987937	0					
ANR	999164	CompoundStatement		1851:10:50333:50333	987937	1					
ANR	999165	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_SPARSE	6696:4:186376:186418	987937	0	True				
ANR	999166	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_SPARSE		987937	0		|=			
ANR	999167	PtrMemberAccess	core -> print -> flags		987937	0					
ANR	999168	PtrMemberAccess	core -> print		987937	0					
ANR	999169	Identifier	core		987937	0					
ANR	999170	Identifier	print		987937	1					
ANR	999171	Identifier	flags		987937	1					
ANR	999172	Identifier	R_PRINT_FLAGS_SPARSE		987937	1					
ANR	999173	ExpressionStatement	"r_print_hexdump ( core -> print , core -> offset , core -> block , len , 16 , 1 , 1 )"	6697:4:186424:186495	987937	1	True				
ANR	999174	CallExpression	"r_print_hexdump ( core -> print , core -> offset , core -> block , len , 16 , 1 , 1 )"		987937	0					
ANR	999175	Callee	r_print_hexdump		987937	0					
ANR	999176	Identifier	r_print_hexdump		987937	0					
ANR	999177	ArgumentList	core -> print		987937	1					
ANR	999178	Argument	core -> print		987937	0					
ANR	999179	PtrMemberAccess	core -> print		987937	0					
ANR	999180	Identifier	core		987937	0					
ANR	999181	Identifier	print		987937	1					
ANR	999182	Argument	core -> offset		987937	1					
ANR	999183	PtrMemberAccess	core -> offset		987937	0					
ANR	999184	Identifier	core		987937	0					
ANR	999185	Identifier	offset		987937	1					
ANR	999186	Argument	core -> block		987937	2					
ANR	999187	PtrMemberAccess	core -> block		987937	0					
ANR	999188	Identifier	core		987937	0					
ANR	999189	Identifier	block		987937	1					
ANR	999190	Argument	len		987937	3					
ANR	999191	Identifier	len		987937	0					
ANR	999192	Argument	16		987937	4					
ANR	999193	PrimaryExpression	16		987937	0					
ANR	999194	Argument	1		987937	5					
ANR	999195	PrimaryExpression	1		987937	0					
ANR	999196	Argument	1		987937	6					
ANR	999197	PrimaryExpression	1		987937	0					
ANR	999198	ExpressionStatement	core -> print -> flags &= ( ( ( ut32 ) - 1 ) & ( ~R_PRINT_FLAGS_SPARSE ) )	6698:4:186501:186563	987937	2	True				
ANR	999199	AssignmentExpression	core -> print -> flags &= ( ( ( ut32 ) - 1 ) & ( ~R_PRINT_FLAGS_SPARSE ) )		987937	0		&=			
ANR	999200	PtrMemberAccess	core -> print -> flags		987937	0					
ANR	999201	PtrMemberAccess	core -> print		987937	0					
ANR	999202	Identifier	core		987937	0					
ANR	999203	Identifier	print		987937	1					
ANR	999204	Identifier	flags		987937	1					
ANR	999205	BitAndExpression	( ( ut32 ) - 1 ) & ( ~R_PRINT_FLAGS_SPARSE )		987937	1		&			
ANR	999206	CastExpression	( ut32 ) - 1		987937	0					
ANR	999207	CastTarget	ut32		987937	0					
ANR	999208	UnaryOperationExpression	- 1		987937	1					
ANR	999209	UnaryOperator	-		987937	0					
ANR	999210	PrimaryExpression	1		987937	1					
ANR	999211	Identifier	~R_PRINT_FLAGS_SPARSE		987937	1					
ANR	999212	BreakStatement	break ;	6700:3:186573:186578	987937	65	True				
ANR	999213	Label	case 'e' :	6701:2:186582:186590	987937	66	True				
ANR	999214	IfStatement	if ( l != 0 )		987937	67					
ANR	999215	Condition	l != 0	6702:7:186622:186627	987937	0	True				
ANR	999216	EqualityExpression	l != 0		987937	0		!=			
ANR	999217	Identifier	l		987937	0					
ANR	999218	PrimaryExpression	0		987937	1					
ANR	999219	CompoundStatement		1926:4:55053:55081	987937	1					
ANR	999220	IdentifierDeclStatement	int j ;	6703:4:186636:186641	987937	0	True				
ANR	999221	IdentifierDecl	j		987937	0					
ANR	999222	IdentifierDeclType	int		987937	0					
ANR	999223	Identifier	j		987937	1					
ANR	999224	IdentifierDeclStatement	"char emoji [ ] = { x8c , x80 , x8c , x82 , x8c , x85 , x8c , x88 , x8c , x99 , x8c , x9e , x8c , x9f , x8c , xa0 , x8c , xb0 , x8c , xb1 , x8c , xb2 , x8c , xb3 , x8c , xb4 , x8c , xb5 , x8c , xb7 , x8c , xb8 , x8c , xb9 , x8c , xba , x8c , xbb , x8c , xbc , x8c , xbd , x8c , xbe , x8c , xbf , x8d , x80 , x8d , x81 , x8d , x82 , x8d , x83 , x8d , x84 , x8d , x85 , x8d , x86 , x8d , x87 , x8d , x88 , x8d , x89 , x8d , x8a , x8d , x8b , x8d , x8c , x8d , x8d , x8d , x8e , x8d , x8f , x8d , x90 , x8d , x91 , x8d , x92 , x8d , x93 , x8d , x94 , x8d , x95 , x8d , x96 , x8d , x97 , x8d , x98 , x8d , x9c , x8d , x9d , x8d , x9e , x8d , x9f , x8d , xa0 , x8d , xa1 , x8d , xa2 , x8d , xa3 , x8d , xa4 , x8d , xa5 , x8d , xa6 , x8d , xa7 , x8d , xa8 , x8d , xa9 , x8d , xaa , x8d , xab , x8d , xac , x8d , xad , x8d , xae , x8d , xaf , x8d , xb0 , x8d , xb1 , x8d , xb2 , x8d , xb3 , x8d , xb4 , x8d , xb5 , x8d , xb6 , x8d , xb7 , x8d , xb8 , x8d , xb9 , x8d , xba , x8d , xbb , x8d , xbc , x8e , x80 , x8e , x81 , x8e , x82 , x8e , x83 , x8e , x84 , x8e , x85 , x8e , x88 , x8e , x89 , x8e , x8a , x8e , x8b , x8e , x8c , x8e , x8d , x8e , x8e , x8e , x8f , x8e , x92 , x8e , x93 , x8e , xa0 , x8e , xa1 , x8e , xa2 , x8e , xa3 , x8e , xa4 , x8e , xa5 , x8e , xa6 , x8e , xa7 , x8e , xa8 , x8e , xa9 , x8e , xaa , x8e , xab , x8e , xac , x8e , xad , x8e , xae , x8e , xaf , x8e , xb0 , x8e , xb1 , x8e , xb2 , x8e , xb3 , x8e , xb4 , x8e , xb5 , x8e , xb7 , x8e , xb8 , x8e , xb9 , x8e , xba , x8e , xbb , x8e , xbd , x8e , xbe , x8e , xbf , x8f , x80 , x8f , x81 , x8f , x82 , x8f , x83 , x8f , x84 , x8f , x86 , x8f , x87 , x8f , x88 , x8f , x89 , x8f , x8a , x90 , x80 , x90 , x81 , x90 , x82 , x90 , x83 , x90 , x84 , x90 , x85 , x90 , x86 , x90 , x87 , x90 , x88 , x90 , x89 , x90 , x8a , x90 , x8b , x90 , x8c , x90 , x8d , x90 , x8e , x90 , x8f , x90 , x90 , x90 , x91 , x90 , x92 , x90 , x93 , x90 , x94 , x90 , x95 , x90 , x96 , x90 , x97 , x90 , x98 , x90 , x99 , x90 , x9a , x90 , x9b , x90 , x9c , x90 , x9d , x90 , x9e , x90 , x9f , x90 , xa0 , x90 , xa1 , x90 , xa2 , x90 , xa3 , x90 , xa4 , x90 , xa5 , x90 , xa6 , x90 , xa7 , x90 , xa8 , x90 , xa9 , x90 , xaa , x90 , xab , x90 , xac , x90 , xad , x90 , xae , x90 , xaf , x90 , xb0 , x90 , xb1 , x90 , xb2 , x90 , xb3 , x90 , xb4 , x90 , xb5 , x90 , xb6 , x90 , xb7 , x90 , xb8 , x90 , xb9 , x90 , xba , x90 , xbb , x90 , xbc , x90 , xbd , x90 , xbe , x91 , x80 , x91 , x82 , x91 , x83 , x91 , x84 , x91 , x85 , x91 , x86 , x91 , x87 , x91 , x88 , x91 , x89 , x91 , x8a , x91 , x8b , x91 , x8c , x91 , x8d , x91 , x8e , x91 , x8f , x91 , x90 , x91 , x91 , x91 , x92 , x91 , x93 , x91 , x94 , x91 , x95 , x91 , x96 , x91 , x97 , x91 , x98 , x91 , x99 , x91 , x9a , x91 , x9b , x91 , x9c , x91 , x9d , x91 , x9e , x91 , x9f , x91 , xa0 , x91 , xa1 , x91 , xa2 , x91 , xa3 , x91 , xa4 , x91 , xa5 , x91 , xa6 , x91 , xa7 , x91 , xa8 , x91 , xa9 , x91 , xaa , x91 , xae , x91 , xaf , x91 , xba , x91 , xbb , x91 , xbc , x91 , xbd , x91 , xbe , x91 , xbf , x92 , x80 , x92 , x81 , x92 , x82 , x92 , x83 , x92 , x84 , x92 , x85 } ;"	6704:4:186647:191084	987937	1	True				
ANR	999225	IdentifierDecl	"emoji [ ] = { x8c , x80 , x8c , x82 , x8c , x85 , x8c , x88 , x8c , x99 , x8c , x9e , x8c , x9f , x8c , xa0 , x8c , xb0 , x8c , xb1 , x8c , xb2 , x8c , xb3 , x8c , xb4 , x8c , xb5 , x8c , xb7 , x8c , xb8 , x8c , xb9 , x8c , xba , x8c , xbb , x8c , xbc , x8c , xbd , x8c , xbe , x8c , xbf , x8d , x80 , x8d , x81 , x8d , x82 , x8d , x83 , x8d , x84 , x8d , x85 , x8d , x86 , x8d , x87 , x8d , x88 , x8d , x89 , x8d , x8a , x8d , x8b , x8d , x8c , x8d , x8d , x8d , x8e , x8d , x8f , x8d , x90 , x8d , x91 , x8d , x92 , x8d , x93 , x8d , x94 , x8d , x95 , x8d , x96 , x8d , x97 , x8d , x98 , x8d , x9c , x8d , x9d , x8d , x9e , x8d , x9f , x8d , xa0 , x8d , xa1 , x8d , xa2 , x8d , xa3 , x8d , xa4 , x8d , xa5 , x8d , xa6 , x8d , xa7 , x8d , xa8 , x8d , xa9 , x8d , xaa , x8d , xab , x8d , xac , x8d , xad , x8d , xae , x8d , xaf , x8d , xb0 , x8d , xb1 , x8d , xb2 , x8d , xb3 , x8d , xb4 , x8d , xb5 , x8d , xb6 , x8d , xb7 , x8d , xb8 , x8d , xb9 , x8d , xba , x8d , xbb , x8d , xbc , x8e , x80 , x8e , x81 , x8e , x82 , x8e , x83 , x8e , x84 , x8e , x85 , x8e , x88 , x8e , x89 , x8e , x8a , x8e , x8b , x8e , x8c , x8e , x8d , x8e , x8e , x8e , x8f , x8e , x92 , x8e , x93 , x8e , xa0 , x8e , xa1 , x8e , xa2 , x8e , xa3 , x8e , xa4 , x8e , xa5 , x8e , xa6 , x8e , xa7 , x8e , xa8 , x8e , xa9 , x8e , xaa , x8e , xab , x8e , xac , x8e , xad , x8e , xae , x8e , xaf , x8e , xb0 , x8e , xb1 , x8e , xb2 , x8e , xb3 , x8e , xb4 , x8e , xb5 , x8e , xb7 , x8e , xb8 , x8e , xb9 , x8e , xba , x8e , xbb , x8e , xbd , x8e , xbe , x8e , xbf , x8f , x80 , x8f , x81 , x8f , x82 , x8f , x83 , x8f , x84 , x8f , x86 , x8f , x87 , x8f , x88 , x8f , x89 , x8f , x8a , x90 , x80 , x90 , x81 , x90 , x82 , x90 , x83 , x90 , x84 , x90 , x85 , x90 , x86 , x90 , x87 , x90 , x88 , x90 , x89 , x90 , x8a , x90 , x8b , x90 , x8c , x90 , x8d , x90 , x8e , x90 , x8f , x90 , x90 , x90 , x91 , x90 , x92 , x90 , x93 , x90 , x94 , x90 , x95 , x90 , x96 , x90 , x97 , x90 , x98 , x90 , x99 , x90 , x9a , x90 , x9b , x90 , x9c , x90 , x9d , x90 , x9e , x90 , x9f , x90 , xa0 , x90 , xa1 , x90 , xa2 , x90 , xa3 , x90 , xa4 , x90 , xa5 , x90 , xa6 , x90 , xa7 , x90 , xa8 , x90 , xa9 , x90 , xaa , x90 , xab , x90 , xac , x90 , xad , x90 , xae , x90 , xaf , x90 , xb0 , x90 , xb1 , x90 , xb2 , x90 , xb3 , x90 , xb4 , x90 , xb5 , x90 , xb6 , x90 , xb7 , x90 , xb8 , x90 , xb9 , x90 , xba , x90 , xbb , x90 , xbc , x90 , xbd , x90 , xbe , x91 , x80 , x91 , x82 , x91 , x83 , x91 , x84 , x91 , x85 , x91 , x86 , x91 , x87 , x91 , x88 , x91 , x89 , x91 , x8a , x91 , x8b , x91 , x8c , x91 , x8d , x91 , x8e , x91 , x8f , x91 , x90 , x91 , x91 , x91 , x92 , x91 , x93 , x91 , x94 , x91 , x95 , x91 , x96 , x91 , x97 , x91 , x98 , x91 , x99 , x91 , x9a , x91 , x9b , x91 , x9c , x91 , x9d , x91 , x9e , x91 , x9f , x91 , xa0 , x91 , xa1 , x91 , xa2 , x91 , xa3 , x91 , xa4 , x91 , xa5 , x91 , xa6 , x91 , xa7 , x91 , xa8 , x91 , xa9 , x91 , xaa , x91 , xae , x91 , xaf , x91 , xba , x91 , xbb , x91 , xbc , x91 , xbd , x91 , xbe , x91 , xbf , x92 , x80 , x92 , x81 , x92 , x82 , x92 , x83 , x92 , x84 , x92 , x85 }"		987937	0					
ANR	999226	IdentifierDeclType	char [ ]		987937	0					
ANR	999227	Identifier	emoji		987937	1					
ANR	999228	AssignmentExpression	"emoji [ ] = { x8c , x80 , x8c , x82 , x8c , x85 , x8c , x88 , x8c , x99 , x8c , x9e , x8c , x9f , x8c , xa0 , x8c , xb0 , x8c , xb1 , x8c , xb2 , x8c , xb3 , x8c , xb4 , x8c , xb5 , x8c , xb7 , x8c , xb8 , x8c , xb9 , x8c , xba , x8c , xbb , x8c , xbc , x8c , xbd , x8c , xbe , x8c , xbf , x8d , x80 , x8d , x81 , x8d , x82 , x8d , x83 , x8d , x84 , x8d , x85 , x8d , x86 , x8d , x87 , x8d , x88 , x8d , x89 , x8d , x8a , x8d , x8b , x8d , x8c , x8d , x8d , x8d , x8e , x8d , x8f , x8d , x90 , x8d , x91 , x8d , x92 , x8d , x93 , x8d , x94 , x8d , x95 , x8d , x96 , x8d , x97 , x8d , x98 , x8d , x9c , x8d , x9d , x8d , x9e , x8d , x9f , x8d , xa0 , x8d , xa1 , x8d , xa2 , x8d , xa3 , x8d , xa4 , x8d , xa5 , x8d , xa6 , x8d , xa7 , x8d , xa8 , x8d , xa9 , x8d , xaa , x8d , xab , x8d , xac , x8d , xad , x8d , xae , x8d , xaf , x8d , xb0 , x8d , xb1 , x8d , xb2 , x8d , xb3 , x8d , xb4 , x8d , xb5 , x8d , xb6 , x8d , xb7 , x8d , xb8 , x8d , xb9 , x8d , xba , x8d , xbb , x8d , xbc , x8e , x80 , x8e , x81 , x8e , x82 , x8e , x83 , x8e , x84 , x8e , x85 , x8e , x88 , x8e , x89 , x8e , x8a , x8e , x8b , x8e , x8c , x8e , x8d , x8e , x8e , x8e , x8f , x8e , x92 , x8e , x93 , x8e , xa0 , x8e , xa1 , x8e , xa2 , x8e , xa3 , x8e , xa4 , x8e , xa5 , x8e , xa6 , x8e , xa7 , x8e , xa8 , x8e , xa9 , x8e , xaa , x8e , xab , x8e , xac , x8e , xad , x8e , xae , x8e , xaf , x8e , xb0 , x8e , xb1 , x8e , xb2 , x8e , xb3 , x8e , xb4 , x8e , xb5 , x8e , xb7 , x8e , xb8 , x8e , xb9 , x8e , xba , x8e , xbb , x8e , xbd , x8e , xbe , x8e , xbf , x8f , x80 , x8f , x81 , x8f , x82 , x8f , x83 , x8f , x84 , x8f , x86 , x8f , x87 , x8f , x88 , x8f , x89 , x8f , x8a , x90 , x80 , x90 , x81 , x90 , x82 , x90 , x83 , x90 , x84 , x90 , x85 , x90 , x86 , x90 , x87 , x90 , x88 , x90 , x89 , x90 , x8a , x90 , x8b , x90 , x8c , x90 , x8d , x90 , x8e , x90 , x8f , x90 , x90 , x90 , x91 , x90 , x92 , x90 , x93 , x90 , x94 , x90 , x95 , x90 , x96 , x90 , x97 , x90 , x98 , x90 , x99 , x90 , x9a , x90 , x9b , x90 , x9c , x90 , x9d , x90 , x9e , x90 , x9f , x90 , xa0 , x90 , xa1 , x90 , xa2 , x90 , xa3 , x90 , xa4 , x90 , xa5 , x90 , xa6 , x90 , xa7 , x90 , xa8 , x90 , xa9 , x90 , xaa , x90 , xab , x90 , xac , x90 , xad , x90 , xae , x90 , xaf , x90 , xb0 , x90 , xb1 , x90 , xb2 , x90 , xb3 , x90 , xb4 , x90 , xb5 , x90 , xb6 , x90 , xb7 , x90 , xb8 , x90 , xb9 , x90 , xba , x90 , xbb , x90 , xbc , x90 , xbd , x90 , xbe , x91 , x80 , x91 , x82 , x91 , x83 , x91 , x84 , x91 , x85 , x91 , x86 , x91 , x87 , x91 , x88 , x91 , x89 , x91 , x8a , x91 , x8b , x91 , x8c , x91 , x8d , x91 , x8e , x91 , x8f , x91 , x90 , x91 , x91 , x91 , x92 , x91 , x93 , x91 , x94 , x91 , x95 , x91 , x96 , x91 , x97 , x91 , x98 , x91 , x99 , x91 , x9a , x91 , x9b , x91 , x9c , x91 , x9d , x91 , x9e , x91 , x9f , x91 , xa0 , x91 , xa1 , x91 , xa2 , x91 , xa3 , x91 , xa4 , x91 , xa5 , x91 , xa6 , x91 , xa7 , x91 , xa8 , x91 , xa9 , x91 , xaa , x91 , xae , x91 , xaf , x91 , xba , x91 , xbb , x91 , xbc , x91 , xbd , x91 , xbe , x91 , xbf , x92 , x80 , x92 , x81 , x92 , x82 , x92 , x83 , x92 , x84 , x92 , x85 }"		987937	2		=			
ANR	999229	Identifier	emoji		987937	0					
ANR	999230	InitializerList	x8c		987937	1					
ANR	999231	Identifier	x8c		987937	0					
ANR	999232	Identifier	x80		987937	1					
ANR	999233	Identifier	x8c		987937	2					
ANR	999234	Identifier	x82		987937	3					
ANR	999235	Identifier	x8c		987937	4					
ANR	999236	Identifier	x85		987937	5					
ANR	999237	Identifier	x8c		987937	6					
ANR	999238	Identifier	x88		987937	7					
ANR	999239	Identifier	x8c		987937	8					
ANR	999240	Identifier	x99		987937	9					
ANR	999241	Identifier	x8c		987937	10					
ANR	999242	Identifier	x9e		987937	11					
ANR	999243	Identifier	x8c		987937	12					
ANR	999244	Identifier	x9f		987937	13					
ANR	999245	Identifier	x8c		987937	14					
ANR	999246	Identifier	xa0		987937	15					
ANR	999247	Identifier	x8c		987937	16					
ANR	999248	Identifier	xb0		987937	17					
ANR	999249	Identifier	x8c		987937	18					
ANR	999250	Identifier	xb1		987937	19					
ANR	999251	Identifier	x8c		987937	20					
ANR	999252	Identifier	xb2		987937	21					
ANR	999253	Identifier	x8c		987937	22					
ANR	999254	Identifier	xb3		987937	23					
ANR	999255	Identifier	x8c		987937	24					
ANR	999256	Identifier	xb4		987937	25					
ANR	999257	Identifier	x8c		987937	26					
ANR	999258	Identifier	xb5		987937	27					
ANR	999259	Identifier	x8c		987937	28					
ANR	999260	Identifier	xb7		987937	29					
ANR	999261	Identifier	x8c		987937	30					
ANR	999262	Identifier	xb8		987937	31					
ANR	999263	Identifier	x8c		987937	32					
ANR	999264	Identifier	xb9		987937	33					
ANR	999265	Identifier	x8c		987937	34					
ANR	999266	Identifier	xba		987937	35					
ANR	999267	Identifier	x8c		987937	36					
ANR	999268	Identifier	xbb		987937	37					
ANR	999269	Identifier	x8c		987937	38					
ANR	999270	Identifier	xbc		987937	39					
ANR	999271	Identifier	x8c		987937	40					
ANR	999272	Identifier	xbd		987937	41					
ANR	999273	Identifier	x8c		987937	42					
ANR	999274	Identifier	xbe		987937	43					
ANR	999275	Identifier	x8c		987937	44					
ANR	999276	Identifier	xbf		987937	45					
ANR	999277	Identifier	x8d		987937	46					
ANR	999278	Identifier	x80		987937	47					
ANR	999279	Identifier	x8d		987937	48					
ANR	999280	Identifier	x81		987937	49					
ANR	999281	Identifier	x8d		987937	50					
ANR	999282	Identifier	x82		987937	51					
ANR	999283	Identifier	x8d		987937	52					
ANR	999284	Identifier	x83		987937	53					
ANR	999285	Identifier	x8d		987937	54					
ANR	999286	Identifier	x84		987937	55					
ANR	999287	Identifier	x8d		987937	56					
ANR	999288	Identifier	x85		987937	57					
ANR	999289	Identifier	x8d		987937	58					
ANR	999290	Identifier	x86		987937	59					
ANR	999291	Identifier	x8d		987937	60					
ANR	999292	Identifier	x87		987937	61					
ANR	999293	Identifier	x8d		987937	62					
ANR	999294	Identifier	x88		987937	63					
ANR	999295	Identifier	x8d		987937	64					
ANR	999296	Identifier	x89		987937	65					
ANR	999297	Identifier	x8d		987937	66					
ANR	999298	Identifier	x8a		987937	67					
ANR	999299	Identifier	x8d		987937	68					
ANR	999300	Identifier	x8b		987937	69					
ANR	999301	Identifier	x8d		987937	70					
ANR	999302	Identifier	x8c		987937	71					
ANR	999303	Identifier	x8d		987937	72					
ANR	999304	Identifier	x8d		987937	73					
ANR	999305	Identifier	x8d		987937	74					
ANR	999306	Identifier	x8e		987937	75					
ANR	999307	Identifier	x8d		987937	76					
ANR	999308	Identifier	x8f		987937	77					
ANR	999309	Identifier	x8d		987937	78					
ANR	999310	Identifier	x90		987937	79					
ANR	999311	Identifier	x8d		987937	80					
ANR	999312	Identifier	x91		987937	81					
ANR	999313	Identifier	x8d		987937	82					
ANR	999314	Identifier	x92		987937	83					
ANR	999315	Identifier	x8d		987937	84					
ANR	999316	Identifier	x93		987937	85					
ANR	999317	Identifier	x8d		987937	86					
ANR	999318	Identifier	x94		987937	87					
ANR	999319	Identifier	x8d		987937	88					
ANR	999320	Identifier	x95		987937	89					
ANR	999321	Identifier	x8d		987937	90					
ANR	999322	Identifier	x96		987937	91					
ANR	999323	Identifier	x8d		987937	92					
ANR	999324	Identifier	x97		987937	93					
ANR	999325	Identifier	x8d		987937	94					
ANR	999326	Identifier	x98		987937	95					
ANR	999327	Identifier	x8d		987937	96					
ANR	999328	Identifier	x9c		987937	97					
ANR	999329	Identifier	x8d		987937	98					
ANR	999330	Identifier	x9d		987937	99					
ANR	999331	Identifier	x8d		987937	100					
ANR	999332	Identifier	x9e		987937	101					
ANR	999333	Identifier	x8d		987937	102					
ANR	999334	Identifier	x9f		987937	103					
ANR	999335	Identifier	x8d		987937	104					
ANR	999336	Identifier	xa0		987937	105					
ANR	999337	Identifier	x8d		987937	106					
ANR	999338	Identifier	xa1		987937	107					
ANR	999339	Identifier	x8d		987937	108					
ANR	999340	Identifier	xa2		987937	109					
ANR	999341	Identifier	x8d		987937	110					
ANR	999342	Identifier	xa3		987937	111					
ANR	999343	Identifier	x8d		987937	112					
ANR	999344	Identifier	xa4		987937	113					
ANR	999345	Identifier	x8d		987937	114					
ANR	999346	Identifier	xa5		987937	115					
ANR	999347	Identifier	x8d		987937	116					
ANR	999348	Identifier	xa6		987937	117					
ANR	999349	Identifier	x8d		987937	118					
ANR	999350	Identifier	xa7		987937	119					
ANR	999351	Identifier	x8d		987937	120					
ANR	999352	Identifier	xa8		987937	121					
ANR	999353	Identifier	x8d		987937	122					
ANR	999354	Identifier	xa9		987937	123					
ANR	999355	Identifier	x8d		987937	124					
ANR	999356	Identifier	xaa		987937	125					
ANR	999357	Identifier	x8d		987937	126					
ANR	999358	Identifier	xab		987937	127					
ANR	999359	Identifier	x8d		987937	128					
ANR	999360	Identifier	xac		987937	129					
ANR	999361	Identifier	x8d		987937	130					
ANR	999362	Identifier	xad		987937	131					
ANR	999363	Identifier	x8d		987937	132					
ANR	999364	Identifier	xae		987937	133					
ANR	999365	Identifier	x8d		987937	134					
ANR	999366	Identifier	xaf		987937	135					
ANR	999367	Identifier	x8d		987937	136					
ANR	999368	Identifier	xb0		987937	137					
ANR	999369	Identifier	x8d		987937	138					
ANR	999370	Identifier	xb1		987937	139					
ANR	999371	Identifier	x8d		987937	140					
ANR	999372	Identifier	xb2		987937	141					
ANR	999373	Identifier	x8d		987937	142					
ANR	999374	Identifier	xb3		987937	143					
ANR	999375	Identifier	x8d		987937	144					
ANR	999376	Identifier	xb4		987937	145					
ANR	999377	Identifier	x8d		987937	146					
ANR	999378	Identifier	xb5		987937	147					
ANR	999379	Identifier	x8d		987937	148					
ANR	999380	Identifier	xb6		987937	149					
ANR	999381	Identifier	x8d		987937	150					
ANR	999382	Identifier	xb7		987937	151					
ANR	999383	Identifier	x8d		987937	152					
ANR	999384	Identifier	xb8		987937	153					
ANR	999385	Identifier	x8d		987937	154					
ANR	999386	Identifier	xb9		987937	155					
ANR	999387	Identifier	x8d		987937	156					
ANR	999388	Identifier	xba		987937	157					
ANR	999389	Identifier	x8d		987937	158					
ANR	999390	Identifier	xbb		987937	159					
ANR	999391	Identifier	x8d		987937	160					
ANR	999392	Identifier	xbc		987937	161					
ANR	999393	Identifier	x8e		987937	162					
ANR	999394	Identifier	x80		987937	163					
ANR	999395	Identifier	x8e		987937	164					
ANR	999396	Identifier	x81		987937	165					
ANR	999397	Identifier	x8e		987937	166					
ANR	999398	Identifier	x82		987937	167					
ANR	999399	Identifier	x8e		987937	168					
ANR	999400	Identifier	x83		987937	169					
ANR	999401	Identifier	x8e		987937	170					
ANR	999402	Identifier	x84		987937	171					
ANR	999403	Identifier	x8e		987937	172					
ANR	999404	Identifier	x85		987937	173					
ANR	999405	Identifier	x8e		987937	174					
ANR	999406	Identifier	x88		987937	175					
ANR	999407	Identifier	x8e		987937	176					
ANR	999408	Identifier	x89		987937	177					
ANR	999409	Identifier	x8e		987937	178					
ANR	999410	Identifier	x8a		987937	179					
ANR	999411	Identifier	x8e		987937	180					
ANR	999412	Identifier	x8b		987937	181					
ANR	999413	Identifier	x8e		987937	182					
ANR	999414	Identifier	x8c		987937	183					
ANR	999415	Identifier	x8e		987937	184					
ANR	999416	Identifier	x8d		987937	185					
ANR	999417	Identifier	x8e		987937	186					
ANR	999418	Identifier	x8e		987937	187					
ANR	999419	Identifier	x8e		987937	188					
ANR	999420	Identifier	x8f		987937	189					
ANR	999421	Identifier	x8e		987937	190					
ANR	999422	Identifier	x92		987937	191					
ANR	999423	Identifier	x8e		987937	192					
ANR	999424	Identifier	x93		987937	193					
ANR	999425	Identifier	x8e		987937	194					
ANR	999426	Identifier	xa0		987937	195					
ANR	999427	Identifier	x8e		987937	196					
ANR	999428	Identifier	xa1		987937	197					
ANR	999429	Identifier	x8e		987937	198					
ANR	999430	Identifier	xa2		987937	199					
ANR	999431	Identifier	x8e		987937	200					
ANR	999432	Identifier	xa3		987937	201					
ANR	999433	Identifier	x8e		987937	202					
ANR	999434	Identifier	xa4		987937	203					
ANR	999435	Identifier	x8e		987937	204					
ANR	999436	Identifier	xa5		987937	205					
ANR	999437	Identifier	x8e		987937	206					
ANR	999438	Identifier	xa6		987937	207					
ANR	999439	Identifier	x8e		987937	208					
ANR	999440	Identifier	xa7		987937	209					
ANR	999441	Identifier	x8e		987937	210					
ANR	999442	Identifier	xa8		987937	211					
ANR	999443	Identifier	x8e		987937	212					
ANR	999444	Identifier	xa9		987937	213					
ANR	999445	Identifier	x8e		987937	214					
ANR	999446	Identifier	xaa		987937	215					
ANR	999447	Identifier	x8e		987937	216					
ANR	999448	Identifier	xab		987937	217					
ANR	999449	Identifier	x8e		987937	218					
ANR	999450	Identifier	xac		987937	219					
ANR	999451	Identifier	x8e		987937	220					
ANR	999452	Identifier	xad		987937	221					
ANR	999453	Identifier	x8e		987937	222					
ANR	999454	Identifier	xae		987937	223					
ANR	999455	Identifier	x8e		987937	224					
ANR	999456	Identifier	xaf		987937	225					
ANR	999457	Identifier	x8e		987937	226					
ANR	999458	Identifier	xb0		987937	227					
ANR	999459	Identifier	x8e		987937	228					
ANR	999460	Identifier	xb1		987937	229					
ANR	999461	Identifier	x8e		987937	230					
ANR	999462	Identifier	xb2		987937	231					
ANR	999463	Identifier	x8e		987937	232					
ANR	999464	Identifier	xb3		987937	233					
ANR	999465	Identifier	x8e		987937	234					
ANR	999466	Identifier	xb4		987937	235					
ANR	999467	Identifier	x8e		987937	236					
ANR	999468	Identifier	xb5		987937	237					
ANR	999469	Identifier	x8e		987937	238					
ANR	999470	Identifier	xb7		987937	239					
ANR	999471	Identifier	x8e		987937	240					
ANR	999472	Identifier	xb8		987937	241					
ANR	999473	Identifier	x8e		987937	242					
ANR	999474	Identifier	xb9		987937	243					
ANR	999475	Identifier	x8e		987937	244					
ANR	999476	Identifier	xba		987937	245					
ANR	999477	Identifier	x8e		987937	246					
ANR	999478	Identifier	xbb		987937	247					
ANR	999479	Identifier	x8e		987937	248					
ANR	999480	Identifier	xbd		987937	249					
ANR	999481	Identifier	x8e		987937	250					
ANR	999482	Identifier	xbe		987937	251					
ANR	999483	Identifier	x8e		987937	252					
ANR	999484	Identifier	xbf		987937	253					
ANR	999485	Identifier	x8f		987937	254					
ANR	999486	Identifier	x80		987937	255					
ANR	999487	Identifier	x8f		987937	256					
ANR	999488	Identifier	x81		987937	257					
ANR	999489	Identifier	x8f		987937	258					
ANR	999490	Identifier	x82		987937	259					
ANR	999491	Identifier	x8f		987937	260					
ANR	999492	Identifier	x83		987937	261					
ANR	999493	Identifier	x8f		987937	262					
ANR	999494	Identifier	x84		987937	263					
ANR	999495	Identifier	x8f		987937	264					
ANR	999496	Identifier	x86		987937	265					
ANR	999497	Identifier	x8f		987937	266					
ANR	999498	Identifier	x87		987937	267					
ANR	999499	Identifier	x8f		987937	268					
ANR	999500	Identifier	x88		987937	269					
ANR	999501	Identifier	x8f		987937	270					
ANR	999502	Identifier	x89		987937	271					
ANR	999503	Identifier	x8f		987937	272					
ANR	999504	Identifier	x8a		987937	273					
ANR	999505	Identifier	x90		987937	274					
ANR	999506	Identifier	x80		987937	275					
ANR	999507	Identifier	x90		987937	276					
ANR	999508	Identifier	x81		987937	277					
ANR	999509	Identifier	x90		987937	278					
ANR	999510	Identifier	x82		987937	279					
ANR	999511	Identifier	x90		987937	280					
ANR	999512	Identifier	x83		987937	281					
ANR	999513	Identifier	x90		987937	282					
ANR	999514	Identifier	x84		987937	283					
ANR	999515	Identifier	x90		987937	284					
ANR	999516	Identifier	x85		987937	285					
ANR	999517	Identifier	x90		987937	286					
ANR	999518	Identifier	x86		987937	287					
ANR	999519	Identifier	x90		987937	288					
ANR	999520	Identifier	x87		987937	289					
ANR	999521	Identifier	x90		987937	290					
ANR	999522	Identifier	x88		987937	291					
ANR	999523	Identifier	x90		987937	292					
ANR	999524	Identifier	x89		987937	293					
ANR	999525	Identifier	x90		987937	294					
ANR	999526	Identifier	x8a		987937	295					
ANR	999527	Identifier	x90		987937	296					
ANR	999528	Identifier	x8b		987937	297					
ANR	999529	Identifier	x90		987937	298					
ANR	999530	Identifier	x8c		987937	299					
ANR	999531	Identifier	x90		987937	300					
ANR	999532	Identifier	x8d		987937	301					
ANR	999533	Identifier	x90		987937	302					
ANR	999534	Identifier	x8e		987937	303					
ANR	999535	Identifier	x90		987937	304					
ANR	999536	Identifier	x8f		987937	305					
ANR	999537	Identifier	x90		987937	306					
ANR	999538	Identifier	x90		987937	307					
ANR	999539	Identifier	x90		987937	308					
ANR	999540	Identifier	x91		987937	309					
ANR	999541	Identifier	x90		987937	310					
ANR	999542	Identifier	x92		987937	311					
ANR	999543	Identifier	x90		987937	312					
ANR	999544	Identifier	x93		987937	313					
ANR	999545	Identifier	x90		987937	314					
ANR	999546	Identifier	x94		987937	315					
ANR	999547	Identifier	x90		987937	316					
ANR	999548	Identifier	x95		987937	317					
ANR	999549	Identifier	x90		987937	318					
ANR	999550	Identifier	x96		987937	319					
ANR	999551	Identifier	x90		987937	320					
ANR	999552	Identifier	x97		987937	321					
ANR	999553	Identifier	x90		987937	322					
ANR	999554	Identifier	x98		987937	323					
ANR	999555	Identifier	x90		987937	324					
ANR	999556	Identifier	x99		987937	325					
ANR	999557	Identifier	x90		987937	326					
ANR	999558	Identifier	x9a		987937	327					
ANR	999559	Identifier	x90		987937	328					
ANR	999560	Identifier	x9b		987937	329					
ANR	999561	Identifier	x90		987937	330					
ANR	999562	Identifier	x9c		987937	331					
ANR	999563	Identifier	x90		987937	332					
ANR	999564	Identifier	x9d		987937	333					
ANR	999565	Identifier	x90		987937	334					
ANR	999566	Identifier	x9e		987937	335					
ANR	999567	Identifier	x90		987937	336					
ANR	999568	Identifier	x9f		987937	337					
ANR	999569	Identifier	x90		987937	338					
ANR	999570	Identifier	xa0		987937	339					
ANR	999571	Identifier	x90		987937	340					
ANR	999572	Identifier	xa1		987937	341					
ANR	999573	Identifier	x90		987937	342					
ANR	999574	Identifier	xa2		987937	343					
ANR	999575	Identifier	x90		987937	344					
ANR	999576	Identifier	xa3		987937	345					
ANR	999577	Identifier	x90		987937	346					
ANR	999578	Identifier	xa4		987937	347					
ANR	999579	Identifier	x90		987937	348					
ANR	999580	Identifier	xa5		987937	349					
ANR	999581	Identifier	x90		987937	350					
ANR	999582	Identifier	xa6		987937	351					
ANR	999583	Identifier	x90		987937	352					
ANR	999584	Identifier	xa7		987937	353					
ANR	999585	Identifier	x90		987937	354					
ANR	999586	Identifier	xa8		987937	355					
ANR	999587	Identifier	x90		987937	356					
ANR	999588	Identifier	xa9		987937	357					
ANR	999589	Identifier	x90		987937	358					
ANR	999590	Identifier	xaa		987937	359					
ANR	999591	Identifier	x90		987937	360					
ANR	999592	Identifier	xab		987937	361					
ANR	999593	Identifier	x90		987937	362					
ANR	999594	Identifier	xac		987937	363					
ANR	999595	Identifier	x90		987937	364					
ANR	999596	Identifier	xad		987937	365					
ANR	999597	Identifier	x90		987937	366					
ANR	999598	Identifier	xae		987937	367					
ANR	999599	Identifier	x90		987937	368					
ANR	999600	Identifier	xaf		987937	369					
ANR	999601	Identifier	x90		987937	370					
ANR	999602	Identifier	xb0		987937	371					
ANR	999603	Identifier	x90		987937	372					
ANR	999604	Identifier	xb1		987937	373					
ANR	999605	Identifier	x90		987937	374					
ANR	999606	Identifier	xb2		987937	375					
ANR	999607	Identifier	x90		987937	376					
ANR	999608	Identifier	xb3		987937	377					
ANR	999609	Identifier	x90		987937	378					
ANR	999610	Identifier	xb4		987937	379					
ANR	999611	Identifier	x90		987937	380					
ANR	999612	Identifier	xb5		987937	381					
ANR	999613	Identifier	x90		987937	382					
ANR	999614	Identifier	xb6		987937	383					
ANR	999615	Identifier	x90		987937	384					
ANR	999616	Identifier	xb7		987937	385					
ANR	999617	Identifier	x90		987937	386					
ANR	999618	Identifier	xb8		987937	387					
ANR	999619	Identifier	x90		987937	388					
ANR	999620	Identifier	xb9		987937	389					
ANR	999621	Identifier	x90		987937	390					
ANR	999622	Identifier	xba		987937	391					
ANR	999623	Identifier	x90		987937	392					
ANR	999624	Identifier	xbb		987937	393					
ANR	999625	Identifier	x90		987937	394					
ANR	999626	Identifier	xbc		987937	395					
ANR	999627	Identifier	x90		987937	396					
ANR	999628	Identifier	xbd		987937	397					
ANR	999629	Identifier	x90		987937	398					
ANR	999630	Identifier	xbe		987937	399					
ANR	999631	Identifier	x91		987937	400					
ANR	999632	Identifier	x80		987937	401					
ANR	999633	Identifier	x91		987937	402					
ANR	999634	Identifier	x82		987937	403					
ANR	999635	Identifier	x91		987937	404					
ANR	999636	Identifier	x83		987937	405					
ANR	999637	Identifier	x91		987937	406					
ANR	999638	Identifier	x84		987937	407					
ANR	999639	Identifier	x91		987937	408					
ANR	999640	Identifier	x85		987937	409					
ANR	999641	Identifier	x91		987937	410					
ANR	999642	Identifier	x86		987937	411					
ANR	999643	Identifier	x91		987937	412					
ANR	999644	Identifier	x87		987937	413					
ANR	999645	Identifier	x91		987937	414					
ANR	999646	Identifier	x88		987937	415					
ANR	999647	Identifier	x91		987937	416					
ANR	999648	Identifier	x89		987937	417					
ANR	999649	Identifier	x91		987937	418					
ANR	999650	Identifier	x8a		987937	419					
ANR	999651	Identifier	x91		987937	420					
ANR	999652	Identifier	x8b		987937	421					
ANR	999653	Identifier	x91		987937	422					
ANR	999654	Identifier	x8c		987937	423					
ANR	999655	Identifier	x91		987937	424					
ANR	999656	Identifier	x8d		987937	425					
ANR	999657	Identifier	x91		987937	426					
ANR	999658	Identifier	x8e		987937	427					
ANR	999659	Identifier	x91		987937	428					
ANR	999660	Identifier	x8f		987937	429					
ANR	999661	Identifier	x91		987937	430					
ANR	999662	Identifier	x90		987937	431					
ANR	999663	Identifier	x91		987937	432					
ANR	999664	Identifier	x91		987937	433					
ANR	999665	Identifier	x91		987937	434					
ANR	999666	Identifier	x92		987937	435					
ANR	999667	Identifier	x91		987937	436					
ANR	999668	Identifier	x93		987937	437					
ANR	999669	Identifier	x91		987937	438					
ANR	999670	Identifier	x94		987937	439					
ANR	999671	Identifier	x91		987937	440					
ANR	999672	Identifier	x95		987937	441					
ANR	999673	Identifier	x91		987937	442					
ANR	999674	Identifier	x96		987937	443					
ANR	999675	Identifier	x91		987937	444					
ANR	999676	Identifier	x97		987937	445					
ANR	999677	Identifier	x91		987937	446					
ANR	999678	Identifier	x98		987937	447					
ANR	999679	Identifier	x91		987937	448					
ANR	999680	Identifier	x99		987937	449					
ANR	999681	Identifier	x91		987937	450					
ANR	999682	Identifier	x9a		987937	451					
ANR	999683	Identifier	x91		987937	452					
ANR	999684	Identifier	x9b		987937	453					
ANR	999685	Identifier	x91		987937	454					
ANR	999686	Identifier	x9c		987937	455					
ANR	999687	Identifier	x91		987937	456					
ANR	999688	Identifier	x9d		987937	457					
ANR	999689	Identifier	x91		987937	458					
ANR	999690	Identifier	x9e		987937	459					
ANR	999691	Identifier	x91		987937	460					
ANR	999692	Identifier	x9f		987937	461					
ANR	999693	Identifier	x91		987937	462					
ANR	999694	Identifier	xa0		987937	463					
ANR	999695	Identifier	x91		987937	464					
ANR	999696	Identifier	xa1		987937	465					
ANR	999697	Identifier	x91		987937	466					
ANR	999698	Identifier	xa2		987937	467					
ANR	999699	Identifier	x91		987937	468					
ANR	999700	Identifier	xa3		987937	469					
ANR	999701	Identifier	x91		987937	470					
ANR	999702	Identifier	xa4		987937	471					
ANR	999703	Identifier	x91		987937	472					
ANR	999704	Identifier	xa5		987937	473					
ANR	999705	Identifier	x91		987937	474					
ANR	999706	Identifier	xa6		987937	475					
ANR	999707	Identifier	x91		987937	476					
ANR	999708	Identifier	xa7		987937	477					
ANR	999709	Identifier	x91		987937	478					
ANR	999710	Identifier	xa8		987937	479					
ANR	999711	Identifier	x91		987937	480					
ANR	999712	Identifier	xa9		987937	481					
ANR	999713	Identifier	x91		987937	482					
ANR	999714	Identifier	xaa		987937	483					
ANR	999715	Identifier	x91		987937	484					
ANR	999716	Identifier	xae		987937	485					
ANR	999717	Identifier	x91		987937	486					
ANR	999718	Identifier	xaf		987937	487					
ANR	999719	Identifier	x91		987937	488					
ANR	999720	Identifier	xba		987937	489					
ANR	999721	Identifier	x91		987937	490					
ANR	999722	Identifier	xbb		987937	491					
ANR	999723	Identifier	x91		987937	492					
ANR	999724	Identifier	xbc		987937	493					
ANR	999725	Identifier	x91		987937	494					
ANR	999726	Identifier	xbd		987937	495					
ANR	999727	Identifier	x91		987937	496					
ANR	999728	Identifier	xbe		987937	497					
ANR	999729	Identifier	x91		987937	498					
ANR	999730	Identifier	xbf		987937	499					
ANR	999731	Identifier	x92		987937	500					
ANR	999732	Identifier	x80		987937	501					
ANR	999733	Identifier	x92		987937	502					
ANR	999734	Identifier	x81		987937	503					
ANR	999735	Identifier	x92		987937	504					
ANR	999736	Identifier	x82		987937	505					
ANR	999737	Identifier	x92		987937	506					
ANR	999738	Identifier	x83		987937	507					
ANR	999739	Identifier	x92		987937	508					
ANR	999740	Identifier	x84		987937	509					
ANR	999741	Identifier	x92		987937	510					
ANR	999742	Identifier	x85		987937	511					
ANR	999743	IdentifierDeclStatement	int cols = core -> print -> cols ;	6770:4:191090:191118	987937	2	True				
ANR	999744	IdentifierDecl	cols = core -> print -> cols		987937	0					
ANR	999745	IdentifierDeclType	int		987937	0					
ANR	999746	Identifier	cols		987937	1					
ANR	999747	AssignmentExpression	cols = core -> print -> cols		987937	2		=			
ANR	999748	Identifier	cols		987937	0					
ANR	999749	PtrMemberAccess	core -> print -> cols		987937	1					
ANR	999750	PtrMemberAccess	core -> print		987937	0					
ANR	999751	Identifier	core		987937	0					
ANR	999752	Identifier	print		987937	1					
ANR	999753	Identifier	cols		987937	1					
ANR	999754	IfStatement	if ( cols < 1 )		987937	3					
ANR	999755	Condition	cols < 1	6771:8:191128:191135	987937	0	True				
ANR	999756	RelationalExpression	cols < 1		987937	0		<			
ANR	999757	Identifier	cols		987937	0					
ANR	999758	PrimaryExpression	1		987937	1					
ANR	999759	CompoundStatement		1927:18:55101:55101	987937	1					
ANR	999760	ExpressionStatement	cols = 1	6772:5:191145:191153	987937	0	True				
ANR	999761	AssignmentExpression	cols = 1		987937	0		=			
ANR	999762	Identifier	cols		987937	0					
ANR	999763	PrimaryExpression	1		987937	1					
ANR	999764	ForStatement	for ( i = 0 ; i < len ; i += cols )		987937	4					
ANR	999765	ForInit	i = 0 ;	6774:9:191170:191175	987937	0	True				
ANR	999766	AssignmentExpression	i = 0		987937	0		=			
ANR	999767	Identifier	i		987937	0					
ANR	999768	PrimaryExpression	0		987937	1					
ANR	999769	Condition	i < len	6774:16:191177:191183	987937	1	True				
ANR	999770	RelationalExpression	i < len		987937	0		<			
ANR	999771	Identifier	i		987937	0					
ANR	999772	Identifier	len		987937	1					
ANR	999773	AssignmentExpression	i += cols	6774:25:191186:191194	987937	2	True	+=			
ANR	999774	Identifier	i		987937	0					
ANR	999775	Identifier	cols		987937	1					
ANR	999776	CompoundStatement		1930:36:55160:55160	987937	3					
ANR	999777	ExpressionStatement	"r_print_addr ( core -> print , core -> offset + i )"	6775:5:191204:191248	987937	0	True				
ANR	999778	CallExpression	"r_print_addr ( core -> print , core -> offset + i )"		987937	0					
ANR	999779	Callee	r_print_addr		987937	0					
ANR	999780	Identifier	r_print_addr		987937	0					
ANR	999781	ArgumentList	core -> print		987937	1					
ANR	999782	Argument	core -> print		987937	0					
ANR	999783	PtrMemberAccess	core -> print		987937	0					
ANR	999784	Identifier	core		987937	0					
ANR	999785	Identifier	print		987937	1					
ANR	999786	Argument	core -> offset + i		987937	1					
ANR	999787	AdditiveExpression	core -> offset + i		987937	0		+			
ANR	999788	PtrMemberAccess	core -> offset		987937	0					
ANR	999789	Identifier	core		987937	0					
ANR	999790	Identifier	offset		987937	1					
ANR	999791	Identifier	i		987937	1					
ANR	999792	ForStatement	for ( j = i ; j < i + cols ; j += 1 )		987937	1					
ANR	999793	ForInit	j = i ;	6776:10:191260:191265	987937	0	True				
ANR	999794	AssignmentExpression	j = i		987937	0		=			
ANR	999795	Identifier	j		987937	0					
ANR	999796	Identifier	i		987937	1					
ANR	999797	Condition	j < i + cols	6776:17:191267:191278	987937	1	True				
ANR	999798	RelationalExpression	j < i + cols		987937	0		<			
ANR	999799	Identifier	j		987937	0					
ANR	999800	AdditiveExpression	i + cols		987937	1		+			
ANR	999801	Identifier	i		987937	0					
ANR	999802	Identifier	cols		987937	1					
ANR	999803	AssignmentExpression	j += 1	6776:31:191281:191286	987937	2	True	+=			
ANR	999804	Identifier	j		987937	0					
ANR	999805	PrimaryExpression	1		987937	1					
ANR	999806	CompoundStatement		1933:6:55260:55292	987937	3					
ANR	999807	IdentifierDeclStatement	ut8 * p = ( ut8 * ) core -> block + j ;	6777:6:191297:191329	987937	0	True				
ANR	999808	IdentifierDecl	* p = ( ut8 * ) core -> block + j		987937	0					
ANR	999809	IdentifierDeclType	ut8 *		987937	0					
ANR	999810	Identifier	p		987937	1					
ANR	999811	AssignmentExpression	* p = ( ut8 * ) core -> block + j		987937	2		=			
ANR	999812	Identifier	p		987937	0					
ANR	999813	AdditiveExpression	( ut8 * ) core -> block + j		987937	1		+			
ANR	999814	CastExpression	( ut8 * ) core -> block		987937	0					
ANR	999815	CastTarget	ut8 *		987937	0					
ANR	999816	PtrMemberAccess	core -> block		987937	1					
ANR	999817	Identifier	core		987937	0					
ANR	999818	Identifier	block		987937	1					
ANR	999819	Identifier	j		987937	1					
ANR	999820	IfStatement	if ( j < len )		987937	1					
ANR	999821	Condition	j < len	6778:10:191341:191347	987937	0	True				
ANR	999822	RelationalExpression	j < len		987937	0		<			
ANR	999823	Identifier	j		987937	0					
ANR	999824	Identifier	len		987937	1					
ANR	999825	CompoundStatement		1934:19:55313:55313	987937	1					
ANR	999826	ExpressionStatement	"r_cons_printf ( ""\\xf0\\x9f%c%c "" , emoji [ * p * 2 ] , emoji [ * p * 2 + 1 ] )"	6779:7:191359:191424	987937	0	True				
ANR	999827	CallExpression	"r_cons_printf ( ""\\xf0\\x9f%c%c "" , emoji [ * p * 2 ] , emoji [ * p * 2 + 1 ] )"		987937	0					
ANR	999828	Callee	r_cons_printf		987937	0					
ANR	999829	Identifier	r_cons_printf		987937	0					
ANR	999830	ArgumentList	"""\\xf0\\x9f%c%c """		987937	1					
ANR	999831	Argument	"""\\xf0\\x9f%c%c """		987937	0					
ANR	999832	PrimaryExpression	"""\\xf0\\x9f%c%c """		987937	0					
ANR	999833	Argument	emoji [ * p * 2 ]		987937	1					
ANR	999834	ArrayIndexing	emoji [ * p * 2 ]		987937	0					
ANR	999835	Identifier	emoji		987937	0					
ANR	999836	MultiplicativeExpression	* p * 2		987937	1		*			
ANR	999837	UnaryOperationExpression	* p		987937	0					
ANR	999838	UnaryOperator	*		987937	0					
ANR	999839	Identifier	p		987937	1					
ANR	999840	PrimaryExpression	2		987937	1					
ANR	999841	Argument	emoji [ * p * 2 + 1 ]		987937	2					
ANR	999842	ArrayIndexing	emoji [ * p * 2 + 1 ]		987937	0					
ANR	999843	Identifier	emoji		987937	0					
ANR	999844	AdditiveExpression	* p * 2 + 1		987937	1		+			
ANR	999845	MultiplicativeExpression	* p * 2		987937	0		*			
ANR	999846	UnaryOperationExpression	* p		987937	0					
ANR	999847	UnaryOperator	*		987937	0					
ANR	999848	Identifier	p		987937	1					
ANR	999849	PrimaryExpression	2		987937	1					
ANR	999850	PrimaryExpression	1		987937	1					
ANR	999851	ElseStatement	else		987937	0					
ANR	999852	CompoundStatement		1936:13:55402:55402	987937	0					
ANR	999853	ExpressionStatement	"r_cons_print ( ""  "" )"	6781:7:191448:191467	987937	0	True				
ANR	999854	CallExpression	"r_cons_print ( ""  "" )"		987937	0					
ANR	999855	Callee	r_cons_print		987937	0					
ANR	999856	Identifier	r_cons_print		987937	0					
ANR	999857	ArgumentList	"""  """		987937	1					
ANR	999858	Argument	"""  """		987937	0					
ANR	999859	PrimaryExpression	"""  """		987937	0					
ANR	999860	ExpressionStatement	"r_cons_print ( "" "" )"	6784:5:191489:191507	987937	2	True				
ANR	999861	CallExpression	"r_cons_print ( "" "" )"		987937	0					
ANR	999862	Callee	r_cons_print		987937	0					
ANR	999863	Identifier	r_cons_print		987937	0					
ANR	999864	ArgumentList	""" """		987937	1					
ANR	999865	Argument	""" """		987937	0					
ANR	999866	PrimaryExpression	""" """		987937	0					
ANR	999867	ForStatement	for ( j = i ; j < len && j < i + cols ; j += 1 )		987937	3					
ANR	999868	ForInit	j = i ;	6785:10:191519:191524	987937	0	True				
ANR	999869	AssignmentExpression	j = i		987937	0		=			
ANR	999870	Identifier	j		987937	0					
ANR	999871	Identifier	i		987937	1					
ANR	999872	Condition	j < len && j < i + cols	6785:17:191526:191548	987937	1	True				
ANR	999873	AndExpression	j < len && j < i + cols		987937	0		&&			
ANR	999874	RelationalExpression	j < len		987937	0		<			
ANR	999875	Identifier	j		987937	0					
ANR	999876	Identifier	len		987937	1					
ANR	999877	RelationalExpression	j < i + cols		987937	1		<			
ANR	999878	Identifier	j		987937	0					
ANR	999879	AdditiveExpression	i + cols		987937	1		+			
ANR	999880	Identifier	i		987937	0					
ANR	999881	Identifier	cols		987937	1					
ANR	999882	AssignmentExpression	j += 1	6785:42:191551:191556	987937	2	True	+=			
ANR	999883	Identifier	j		987937	0					
ANR	999884	PrimaryExpression	1		987937	1					
ANR	999885	CompoundStatement		1942:6:55530:55562	987937	3					
ANR	999886	IdentifierDeclStatement	ut8 * p = ( ut8 * ) core -> block + j ;	6786:6:191567:191599	987937	0	True				
ANR	999887	IdentifierDecl	* p = ( ut8 * ) core -> block + j		987937	0					
ANR	999888	IdentifierDeclType	ut8 *		987937	0					
ANR	999889	Identifier	p		987937	1					
ANR	999890	AssignmentExpression	* p = ( ut8 * ) core -> block + j		987937	2		=			
ANR	999891	Identifier	p		987937	0					
ANR	999892	AdditiveExpression	( ut8 * ) core -> block + j		987937	1		+			
ANR	999893	CastExpression	( ut8 * ) core -> block		987937	0					
ANR	999894	CastTarget	ut8 *		987937	0					
ANR	999895	PtrMemberAccess	core -> block		987937	1					
ANR	999896	Identifier	core		987937	0					
ANR	999897	Identifier	block		987937	1					
ANR	999898	Identifier	j		987937	1					
ANR	999899	ExpressionStatement	"r_print_byte ( core -> print , ""%c"" , j , * p )"	6787:6:191607:191646	987937	1	True				
ANR	999900	CallExpression	"r_print_byte ( core -> print , ""%c"" , j , * p )"		987937	0					
ANR	999901	Callee	r_print_byte		987937	0					
ANR	999902	Identifier	r_print_byte		987937	0					
ANR	999903	ArgumentList	core -> print		987937	1					
ANR	999904	Argument	core -> print		987937	0					
ANR	999905	PtrMemberAccess	core -> print		987937	0					
ANR	999906	Identifier	core		987937	0					
ANR	999907	Identifier	print		987937	1					
ANR	999908	Argument	"""%c"""		987937	1					
ANR	999909	PrimaryExpression	"""%c"""		987937	0					
ANR	999910	Argument	j		987937	2					
ANR	999911	Identifier	j		987937	0					
ANR	999912	Argument	* p		987937	3					
ANR	999913	UnaryOperationExpression	* p		987937	0					
ANR	999914	UnaryOperator	*		987937	0					
ANR	999915	Identifier	p		987937	1					
ANR	999916	ExpressionStatement	r_cons_newline ( )	6789:5:191660:191677	987937	4	True				
ANR	999917	CallExpression	r_cons_newline ( )		987937	0					
ANR	999918	Callee	r_cons_newline		987937	0					
ANR	999919	Identifier	r_cons_newline		987937	0					
ANR	999920	ArgumentList			987937	1					
ANR	999921	BreakStatement	break ;	6792:3:191693:191698	987937	68	True				
ANR	999922	Label	case 'l' :	6793:2:191702:191710	987937	69	True				
ANR	999923	ExpressionStatement	len = core -> print -> cols * len	6794:3:191724:191753	987937	70	True				
ANR	999924	AssignmentExpression	len = core -> print -> cols * len		987937	0		=			
ANR	999925	Identifier	len		987937	0					
ANR	999926	MultiplicativeExpression	core -> print -> cols * len		987937	1		*			
ANR	999927	PtrMemberAccess	core -> print -> cols		987937	0					
ANR	999928	PtrMemberAccess	core -> print		987937	0					
ANR	999929	Identifier	core		987937	0					
ANR	999930	Identifier	print		987937	1					
ANR	999931	Identifier	cols		987937	1					
ANR	999932	Identifier	len		987937	1					
ANR	999933	Label	default :	6796:2:191778:191785	987937	71	True				
ANR	999934	Identifier	default		987937	0					
ANR	999935	IfStatement	if ( l )		987937	72					
ANR	999936	Condition	l	6797:7:191794:191794	987937	0	True				
ANR	999937	Identifier	l		987937	0					
ANR	999938	CompoundStatement		1955:4:55826:55876	987937	1					
ANR	999939	IdentifierDeclStatement	"ut64 from = r_config_get_i ( core -> config , ""diff.from"" ) ;"	6798:4:191803:191857	987937	0	True				
ANR	999940	IdentifierDecl	"from = r_config_get_i ( core -> config , ""diff.from"" )"		987937	0					
ANR	999941	IdentifierDeclType	ut64		987937	0					
ANR	999942	Identifier	from		987937	1					
ANR	999943	AssignmentExpression	"from = r_config_get_i ( core -> config , ""diff.from"" )"		987937	2		=			
ANR	999944	Identifier	from		987937	0					
ANR	999945	CallExpression	"r_config_get_i ( core -> config , ""diff.from"" )"		987937	1					
ANR	999946	Callee	r_config_get_i		987937	0					
ANR	999947	Identifier	r_config_get_i		987937	0					
ANR	999948	ArgumentList	core -> config		987937	1					
ANR	999949	Argument	core -> config		987937	0					
ANR	999950	PtrMemberAccess	core -> config		987937	0					
ANR	999951	Identifier	core		987937	0					
ANR	999952	Identifier	config		987937	1					
ANR	999953	Argument	"""diff.from"""		987937	1					
ANR	999954	PrimaryExpression	"""diff.from"""		987937	0					
ANR	999955	IdentifierDeclStatement	"ut64 to = r_config_get_i ( core -> config , ""diff.to"" ) ;"	6799:4:191863:191913	987937	1	True				
ANR	999956	IdentifierDecl	"to = r_config_get_i ( core -> config , ""diff.to"" )"		987937	0					
ANR	999957	IdentifierDeclType	ut64		987937	0					
ANR	999958	Identifier	to		987937	1					
ANR	999959	AssignmentExpression	"to = r_config_get_i ( core -> config , ""diff.to"" )"		987937	2		=			
ANR	999960	Identifier	to		987937	0					
ANR	999961	CallExpression	"r_config_get_i ( core -> config , ""diff.to"" )"		987937	1					
ANR	999962	Callee	r_config_get_i		987937	0					
ANR	999963	Identifier	r_config_get_i		987937	0					
ANR	999964	ArgumentList	core -> config		987937	1					
ANR	999965	Argument	core -> config		987937	0					
ANR	999966	PtrMemberAccess	core -> config		987937	0					
ANR	999967	Identifier	core		987937	0					
ANR	999968	Identifier	config		987937	1					
ANR	999969	Argument	"""diff.to"""		987937	1					
ANR	999970	PrimaryExpression	"""diff.to"""		987937	0					
ANR	999971	IfStatement	if ( from == to && ! from )		987937	2					
ANR	999972	Condition	from == to && ! from	6800:8:191923:191941	987937	0	True				
ANR	999973	AndExpression	from == to && ! from		987937	0		&&			
ANR	999974	EqualityExpression	from == to		987937	0		==			
ANR	999975	Identifier	from		987937	0					
ANR	999976	Identifier	to		987937	1					
ANR	999977	UnaryOperationExpression	! from		987937	1					
ANR	999978	UnaryOperator	!		987937	0					
ANR	999979	Identifier	from		987937	1					
ANR	999980	CompoundStatement		1957:5:55914:55935	987937	1					
ANR	999981	IdentifierDeclStatement	const char * sp = NULL ;	6801:5:191951:191972	987937	0	True				
ANR	999982	IdentifierDecl	* sp = NULL		987937	0					
ANR	999983	IdentifierDeclType	const char *		987937	0					
ANR	999984	Identifier	sp		987937	1					
ANR	999985	AssignmentExpression	* sp = NULL		987937	2		=			
ANR	999986	Identifier	NULL		987937	0					
ANR	999987	Identifier	NULL		987937	1					
ANR	999988	IfStatement	if ( input [ 1 ] == '.' )		987937	1					
ANR	999989	Condition	input [ 1 ] == '.'	6802:9:191983:191997	987937	0	True				
ANR	999990	EqualityExpression	input [ 1 ] == '.'		987937	0		==			
ANR	999991	ArrayIndexing	input [ 1 ]		987937	0					
ANR	999992	Identifier	input		987937	0					
ANR	999993	PrimaryExpression	1		987937	1					
ANR	999994	PrimaryExpression	'.'		987937	1					
ANR	999995	CompoundStatement		1958:26:55963:55963	987937	1					
ANR	999996	ExpressionStatement	sp = input + 2	6803:6:192008:192022	987937	0	True				
ANR	999997	AssignmentExpression	sp = input + 2		987937	0		=			
ANR	999998	Identifier	sp		987937	0					
ANR	999999	AdditiveExpression	input + 2		987937	1		+			
ANR	1000000	Identifier	input		987937	0					
ANR	1000001	PrimaryExpression	2		987937	1					
ANR	1000002	IfStatement	if ( IS_DIGIT ( input [ 1 ] ) )		987937	2					
ANR	1000003	Condition	IS_DIGIT ( input [ 1 ] )	6805:9:192040:192058	987937	0	True				
ANR	1000004	CallExpression	IS_DIGIT ( input [ 1 ] )		987937	0					
ANR	1000005	Callee	IS_DIGIT		987937	0					
ANR	1000006	Identifier	IS_DIGIT		987937	0					
ANR	1000007	ArgumentList	input [ 1 ]		987937	1					
ANR	1000008	Argument	input [ 1 ]		987937	0					
ANR	1000009	ArrayIndexing	input [ 1 ]		987937	0					
ANR	1000010	Identifier	input		987937	0					
ANR	1000011	PrimaryExpression	1		987937	1					
ANR	1000012	CompoundStatement		1961:30:56024:56024	987937	1					
ANR	1000013	ExpressionStatement	sp = input + 1	6806:6:192069:192083	987937	0	True				
ANR	1000014	AssignmentExpression	sp = input + 1		987937	0		=			
ANR	1000015	Identifier	sp		987937	0					
ANR	1000016	AdditiveExpression	input + 1		987937	1		+			
ANR	1000017	Identifier	input		987937	0					
ANR	1000018	PrimaryExpression	1		987937	1					
ANR	1000019	IfStatement	if ( sp )		987937	3					
ANR	1000020	Condition	sp	6808:9:192101:192102	987937	0	True				
ANR	1000021	Identifier	sp		987937	0					
ANR	1000022	CompoundStatement		1965:6:56076:56132	987937	1					
ANR	1000023	IdentifierDeclStatement	"int n = ( int ) r_num_math ( core -> num , r_str_trim_ro ( sp ) ) ;"	6809:6:192113:192169	987937	0	True				
ANR	1000024	IdentifierDecl	"n = ( int ) r_num_math ( core -> num , r_str_trim_ro ( sp ) )"		987937	0					
ANR	1000025	IdentifierDeclType	int		987937	0					
ANR	1000026	Identifier	n		987937	1					
ANR	1000027	AssignmentExpression	"n = ( int ) r_num_math ( core -> num , r_str_trim_ro ( sp ) )"		987937	2		=			
ANR	1000028	Identifier	n		987937	0					
ANR	1000029	CastExpression	"( int ) r_num_math ( core -> num , r_str_trim_ro ( sp ) )"		987937	1					
ANR	1000030	CastTarget	int		987937	0					
ANR	1000031	CallExpression	"r_num_math ( core -> num , r_str_trim_ro ( sp ) )"		987937	1					
ANR	1000032	Callee	r_num_math		987937	0					
ANR	1000033	Identifier	r_num_math		987937	0					
ANR	1000034	ArgumentList	core -> num		987937	1					
ANR	1000035	Argument	core -> num		987937	0					
ANR	1000036	PtrMemberAccess	core -> num		987937	0					
ANR	1000037	Identifier	core		987937	0					
ANR	1000038	Identifier	num		987937	1					
ANR	1000039	Argument	r_str_trim_ro ( sp )		987937	1					
ANR	1000040	CallExpression	r_str_trim_ro ( sp )		987937	0					
ANR	1000041	Callee	r_str_trim_ro		987937	0					
ANR	1000042	Identifier	r_str_trim_ro		987937	0					
ANR	1000043	ArgumentList	sp		987937	1					
ANR	1000044	Argument	sp		987937	0					
ANR	1000045	Identifier	sp		987937	0					
ANR	1000046	IfStatement	if ( ! n )		987937	1					
ANR	1000047	Condition	! n	6810:10:192181:192182	987937	0	True				
ANR	1000048	UnaryOperationExpression	! n		987937	0					
ANR	1000049	UnaryOperator	!		987937	0					
ANR	1000050	Identifier	n		987937	1					
ANR	1000051	CompoundStatement		1966:14:56148:56148	987937	1					
ANR	1000052	GotoStatement	goto beach ;	6811:7:192194:192204	987937	0	True				
ANR	1000053	Identifier	beach		987937	0					
ANR	1000054	ExpressionStatement	len = n	6813:6:192220:192227	987937	2	True				
ANR	1000055	AssignmentExpression	len = n		987937	0		=			
ANR	1000056	Identifier	len		987937	0					
ANR	1000057	Identifier	n		987937	1					
ANR	1000058	IfStatement	"if ( ! r_core_block_size ( core , len ) )"		987937	4					
ANR	1000059	Condition	"! r_core_block_size ( core , len )"	6815:9:192245:192274	987937	0	True				
ANR	1000060	UnaryOperationExpression	"! r_core_block_size ( core , len )"		987937	0					
ANR	1000061	UnaryOperator	!		987937	0					
ANR	1000062	CallExpression	"r_core_block_size ( core , len )"		987937	1					
ANR	1000063	Callee	r_core_block_size		987937	0					
ANR	1000064	Identifier	r_core_block_size		987937	0					
ANR	1000065	ArgumentList	core		987937	1					
ANR	1000066	Argument	core		987937	0					
ANR	1000067	Identifier	core		987937	0					
ANR	1000068	Argument	len		987937	1					
ANR	1000069	Identifier	len		987937	0					
ANR	1000070	CompoundStatement		1971:41:56240:56240	987937	1					
ANR	1000071	ExpressionStatement	len = core -> blocksize	6816:6:192285:192306	987937	0	True				
ANR	1000072	AssignmentExpression	len = core -> blocksize		987937	0		=			
ANR	1000073	Identifier	len		987937	0					
ANR	1000074	PtrMemberAccess	core -> blocksize		987937	1					
ANR	1000075	Identifier	core		987937	0					
ANR	1000076	Identifier	blocksize		987937	1					
ANR	1000077	ExpressionStatement	r_core_block_read ( core )	6818:5:192320:192344	987937	5	True				
ANR	1000078	CallExpression	r_core_block_read ( core )		987937	0					
ANR	1000079	Callee	r_core_block_read		987937	0					
ANR	1000080	Identifier	r_core_block_read		987937	0					
ANR	1000081	ArgumentList	core		987937	1					
ANR	1000082	Argument	core		987937	0					
ANR	1000083	Identifier	core		987937	0					
ANR	1000084	ExpressionStatement	"r_print_hexdump ( core -> print , r_core_pava ( core , core -> offset ) , core -> block , len , 16 , 1 , 1 )"	6819:5:192351:192448	987937	6	True				
ANR	1000085	CallExpression	"r_print_hexdump ( core -> print , r_core_pava ( core , core -> offset ) , core -> block , len , 16 , 1 , 1 )"		987937	0					
ANR	1000086	Callee	r_print_hexdump		987937	0					
ANR	1000087	Identifier	r_print_hexdump		987937	0					
ANR	1000088	ArgumentList	core -> print		987937	1					
ANR	1000089	Argument	core -> print		987937	0					
ANR	1000090	PtrMemberAccess	core -> print		987937	0					
ANR	1000091	Identifier	core		987937	0					
ANR	1000092	Identifier	print		987937	1					
ANR	1000093	Argument	"r_core_pava ( core , core -> offset )"		987937	1					
ANR	1000094	CallExpression	"r_core_pava ( core , core -> offset )"		987937	0					
ANR	1000095	Callee	r_core_pava		987937	0					
ANR	1000096	Identifier	r_core_pava		987937	0					
ANR	1000097	ArgumentList	core		987937	1					
ANR	1000098	Argument	core		987937	0					
ANR	1000099	Identifier	core		987937	0					
ANR	1000100	Argument	core -> offset		987937	1					
ANR	1000101	PtrMemberAccess	core -> offset		987937	0					
ANR	1000102	Identifier	core		987937	0					
ANR	1000103	Identifier	offset		987937	1					
ANR	1000104	Argument	core -> block		987937	2					
ANR	1000105	PtrMemberAccess	core -> block		987937	0					
ANR	1000106	Identifier	core		987937	0					
ANR	1000107	Identifier	block		987937	1					
ANR	1000108	Argument	len		987937	3					
ANR	1000109	Identifier	len		987937	0					
ANR	1000110	Argument	16		987937	4					
ANR	1000111	PrimaryExpression	16		987937	0					
ANR	1000112	Argument	1		987937	5					
ANR	1000113	PrimaryExpression	1		987937	0					
ANR	1000114	Argument	1		987937	6					
ANR	1000115	PrimaryExpression	1		987937	0					
ANR	1000116	ElseStatement	else		987937	0					
ANR	1000117	CompoundStatement		1977:11:56424:56424	987937	0					
ANR	1000118	ExpressionStatement	"r_core_print_cmp ( core , from , to )"	6822:5:192468:192501	987937	0	True				
ANR	1000119	CallExpression	"r_core_print_cmp ( core , from , to )"		987937	0					
ANR	1000120	Callee	r_core_print_cmp		987937	0					
ANR	1000121	Identifier	r_core_print_cmp		987937	0					
ANR	1000122	ArgumentList	core		987937	1					
ANR	1000123	Argument	core		987937	0					
ANR	1000124	Identifier	core		987937	0					
ANR	1000125	Argument	from		987937	1					
ANR	1000126	Identifier	from		987937	0					
ANR	1000127	Argument	to		987937	2					
ANR	1000128	Identifier	to		987937	0					
ANR	1000129	ExpressionStatement	core -> num -> value = len	6824:4:192513:192535	987937	3	True				
ANR	1000130	AssignmentExpression	core -> num -> value = len		987937	0		=			
ANR	1000131	PtrMemberAccess	core -> num -> value		987937	0					
ANR	1000132	PtrMemberAccess	core -> num		987937	0					
ANR	1000133	Identifier	core		987937	0					
ANR	1000134	Identifier	num		987937	1					
ANR	1000135	Identifier	value		987937	1					
ANR	1000136	Identifier	len		987937	1					
ANR	1000137	BreakStatement	break ;	6826:3:192545:192550	987937	73	True				
ANR	1000138	ExpressionStatement	r_cons_break_pop ( )	6828:2:192558:192577	987937	73	True				
ANR	1000139	CallExpression	r_cons_break_pop ( )		987937	0					
ANR	1000140	Callee	r_cons_break_pop		987937	0					
ANR	1000141	Identifier	r_cons_break_pop		987937	0					
ANR	1000142	ArgumentList			987937	1					
ANR	1000143	BreakStatement	break ;	6829:2:192581:192586	987937	74	True				
ANR	1000144	Label	case '2' :	6830:1:192589:192597	987937	75	True				
ANR	1000145	IfStatement	if ( l )		987937	76					
ANR	1000146	Condition	l	6831:6:192613:192613	987937	0	True				
ANR	1000147	Identifier	l		987937	0					
ANR	1000148	CompoundStatement		1987:9:56579:56579	987937	1					
ANR	1000149	IfStatement	if ( input [ 1 ] == '?' )		987937	0					
ANR	1000150	Condition	input [ 1 ] == '?'	6832:7:192625:192639	987937	0	True				
ANR	1000151	EqualityExpression	input [ 1 ] == '?'		987937	0		==			
ANR	1000152	ArrayIndexing	input [ 1 ]		987937	0					
ANR	1000153	Identifier	input		987937	0					
ANR	1000154	PrimaryExpression	1		987937	1					
ANR	1000155	PrimaryExpression	'?'		987937	1					
ANR	1000156	CompoundStatement		1988:24:56605:56605	987937	1					
ANR	1000157	Statement	r_cons_printf	6833:4:192648:192660	987937	0	True				
ANR	1000158	Statement	(	6833:18:192662:192662	987937	1	True				
ANR	1000159	Statement	"""|Usage: p2 [number of bytes representing tiles]\\n"""	6833:19:192663:192713	987937	2	True				
ANR	1000160	Statement	"""NOTE: Only full tiles will be printed\\n"""	6834:5:192720:192760	987937	3	True				
ANR	1000161	Statement	)	6834:46:192761:192761	987937	4	True				
ANR	1000162	ExpressionStatement		6834:47:192762:192762	987937	5	True				
ANR	1000163	ElseStatement	else		987937	0					
ANR	1000164	CompoundStatement		1991:10:56737:56737	987937	0					
ANR	1000165	ExpressionStatement	"r_print_2bpp_tiles ( core -> print , core -> block , len / 16 )"	6836:4:192780:192835	987937	0	True				
ANR	1000166	CallExpression	"r_print_2bpp_tiles ( core -> print , core -> block , len / 16 )"		987937	0					
ANR	1000167	Callee	r_print_2bpp_tiles		987937	0					
ANR	1000168	Identifier	r_print_2bpp_tiles		987937	0					
ANR	1000169	ArgumentList	core -> print		987937	1					
ANR	1000170	Argument	core -> print		987937	0					
ANR	1000171	PtrMemberAccess	core -> print		987937	0					
ANR	1000172	Identifier	core		987937	0					
ANR	1000173	Identifier	print		987937	1					
ANR	1000174	Argument	core -> block		987937	1					
ANR	1000175	PtrMemberAccess	core -> block		987937	0					
ANR	1000176	Identifier	core		987937	0					
ANR	1000177	Identifier	block		987937	1					
ANR	1000178	Argument	len / 16		987937	2					
ANR	1000179	MultiplicativeExpression	len / 16		987937	0		/			
ANR	1000180	Identifier	len		987937	0					
ANR	1000181	PrimaryExpression	16		987937	1					
ANR	1000182	BreakStatement	break ;	6839:2:192848:192853	987937	77	True				
ANR	1000183	Label	case '6' :	6840:1:192856:192864	987937	78	True				
ANR	1000184	IfStatement	if ( l )		987937	79					
ANR	1000185	Condition	l	6841:6:192880:192880	987937	0	True				
ANR	1000186	Identifier	l		987937	0					
ANR	1000187	CompoundStatement		1999:3:56893:56918	987937	1					
ANR	1000188	IdentifierDeclStatement	int malen = ( core -> blocksize * 4 ) + 1 ;	6842:3:192888:192925	987937	0	True				
ANR	1000189	IdentifierDecl	malen = ( core -> blocksize * 4 ) + 1		987937	0					
ANR	1000190	IdentifierDeclType	int		987937	0					
ANR	1000191	Identifier	malen		987937	1					
ANR	1000192	AssignmentExpression	malen = ( core -> blocksize * 4 ) + 1		987937	2		=			
ANR	1000193	Identifier	malen		987937	0					
ANR	1000194	AdditiveExpression	( core -> blocksize * 4 ) + 1		987937	1		+			
ANR	1000195	MultiplicativeExpression	core -> blocksize * 4		987937	0		*			
ANR	1000196	PtrMemberAccess	core -> blocksize		987937	0					
ANR	1000197	Identifier	core		987937	0					
ANR	1000198	Identifier	blocksize		987937	1					
ANR	1000199	PrimaryExpression	4		987937	1					
ANR	1000200	PrimaryExpression	1		987937	1					
ANR	1000201	IdentifierDeclStatement	ut8 * buf = malloc ( malen ) ;	6843:3:192930:192955	987937	1	True				
ANR	1000202	IdentifierDecl	* buf = malloc ( malen )		987937	0					
ANR	1000203	IdentifierDeclType	ut8 *		987937	0					
ANR	1000204	Identifier	buf		987937	1					
ANR	1000205	AssignmentExpression	* buf = malloc ( malen )		987937	2		=			
ANR	1000206	Identifier	buf		987937	0					
ANR	1000207	CallExpression	malloc ( malen )		987937	1					
ANR	1000208	Callee	malloc		987937	0					
ANR	1000209	Identifier	malloc		987937	0					
ANR	1000210	ArgumentList	malen		987937	1					
ANR	1000211	Argument	malen		987937	0					
ANR	1000212	Identifier	malen		987937	0					
ANR	1000213	IfStatement	if ( ! buf )		987937	2					
ANR	1000214	Condition	! buf	6844:7:192964:192967	987937	0	True				
ANR	1000215	UnaryOperationExpression	! buf		987937	0					
ANR	1000216	UnaryOperator	!		987937	0					
ANR	1000217	Identifier	buf		987937	1					
ANR	1000218	CompoundStatement		2000:13:56933:56933	987937	1					
ANR	1000219	BreakStatement	break ;	6845:4:192976:192981	987937	0	True				
ANR	1000220	ExpressionStatement	"memset ( buf , 0 , malen )"	6847:3:192991:193013	987937	3	True				
ANR	1000221	CallExpression	"memset ( buf , 0 , malen )"		987937	0					
ANR	1000222	Callee	memset		987937	0					
ANR	1000223	Identifier	memset		987937	0					
ANR	1000224	ArgumentList	buf		987937	1					
ANR	1000225	Argument	buf		987937	0					
ANR	1000226	Identifier	buf		987937	0					
ANR	1000227	Argument	0		987937	1					
ANR	1000228	PrimaryExpression	0		987937	0					
ANR	1000229	Argument	malen		987937	2					
ANR	1000230	Identifier	malen		987937	0					
ANR	1000231	SwitchStatement	switch ( input [ 1 ] )		987937	4					
ANR	1000232	Condition	input [ 1 ]	6848:11:193026:193033	987937	0	True				
ANR	1000233	ArrayIndexing	input [ 1 ]		987937	0					
ANR	1000234	Identifier	input		987937	0					
ANR	1000235	PrimaryExpression	1		987937	1					
ANR	1000236	CompoundStatement		2004:21:56999:56999	987937	1					
ANR	1000237	Label	case 'd' :	6849:3:193041:193049	987937	0	True				
ANR	1000238	IfStatement	"if ( r_base64_decode ( buf , ( const char * ) block , len ) )"		987937	1					
ANR	1000239	Condition	"r_base64_decode ( buf , ( const char * ) block , len )"	6850:8:193068:193115	987937	0	True				
ANR	1000240	CallExpression	"r_base64_decode ( buf , ( const char * ) block , len )"		987937	0					
ANR	1000241	Callee	r_base64_decode		987937	0					
ANR	1000242	Identifier	r_base64_decode		987937	0					
ANR	1000243	ArgumentList	buf		987937	1					
ANR	1000244	Argument	buf		987937	0					
ANR	1000245	Identifier	buf		987937	0					
ANR	1000246	Argument	( const char * ) block		987937	1					
ANR	1000247	CastExpression	( const char * ) block		987937	0					
ANR	1000248	CastTarget	const char *		987937	0					
ANR	1000249	Identifier	block		987937	1					
ANR	1000250	Argument	len		987937	2					
ANR	1000251	Identifier	len		987937	0					
ANR	1000252	CompoundStatement		2006:58:57081:57081	987937	1					
ANR	1000253	ExpressionStatement	r_cons_println ( ( const char * ) buf )	6851:5:193125:193160	987937	0	True				
ANR	1000254	CallExpression	r_cons_println ( ( const char * ) buf )		987937	0					
ANR	1000255	Callee	r_cons_println		987937	0					
ANR	1000256	Identifier	r_cons_println		987937	0					
ANR	1000257	ArgumentList	( const char * ) buf		987937	1					
ANR	1000258	Argument	( const char * ) buf		987937	0					
ANR	1000259	CastExpression	( const char * ) buf		987937	0					
ANR	1000260	CastTarget	const char *		987937	0					
ANR	1000261	Identifier	buf		987937	1					
ANR	1000262	ElseStatement	else		987937	0					
ANR	1000263	CompoundStatement		2008:11:57136:57136	987937	0					
ANR	1000264	ExpressionStatement	"eprintf ( ""r_base64_decode: invalid stream\\n"" )"	6853:5:193180:193225	987937	0	True				
ANR	1000265	CallExpression	"eprintf ( ""r_base64_decode: invalid stream\\n"" )"		987937	0					
ANR	1000266	Callee	eprintf		987937	0					
ANR	1000267	Identifier	eprintf		987937	0					
ANR	1000268	ArgumentList	"""r_base64_decode: invalid stream\\n"""		987937	1					
ANR	1000269	Argument	"""r_base64_decode: invalid stream\\n"""		987937	0					
ANR	1000270	PrimaryExpression	"""r_base64_decode: invalid stream\\n"""		987937	0					
ANR	1000271	BreakStatement	break ;	6855:4:193237:193242	987937	2	True				
ANR	1000272	Label	case 'e' :	6856:3:193247:193255	987937	3	True				
ANR	1000273	ExpressionStatement	len = len > core -> blocksize ? core -> blocksize : len	6857:5:193271:193320	987937	4	True				
ANR	1000274	AssignmentExpression	len = len > core -> blocksize ? core -> blocksize : len		987937	0		=			
ANR	1000275	Identifier	len		987937	0					
ANR	1000276	ConditionalExpression	len > core -> blocksize ? core -> blocksize : len		987937	1					
ANR	1000277	Condition	len > core -> blocksize		987937	0					
ANR	1000278	RelationalExpression	len > core -> blocksize		987937	0		>			
ANR	1000279	Identifier	len		987937	0					
ANR	1000280	PtrMemberAccess	core -> blocksize		987937	1					
ANR	1000281	Identifier	core		987937	0					
ANR	1000282	Identifier	blocksize		987937	1					
ANR	1000283	PtrMemberAccess	core -> blocksize		987937	1					
ANR	1000284	Identifier	core		987937	0					
ANR	1000285	Identifier	blocksize		987937	1					
ANR	1000286	Identifier	len		987937	2					
ANR	1000287	ExpressionStatement	"r_base64_encode ( ( char * ) buf , block , len )"	6858:5:193327:193369	987937	5	True				
ANR	1000288	CallExpression	"r_base64_encode ( ( char * ) buf , block , len )"		987937	0					
ANR	1000289	Callee	r_base64_encode		987937	0					
ANR	1000290	Identifier	r_base64_encode		987937	0					
ANR	1000291	ArgumentList	( char * ) buf		987937	1					
ANR	1000292	Argument	( char * ) buf		987937	0					
ANR	1000293	CastExpression	( char * ) buf		987937	0					
ANR	1000294	CastTarget	char *		987937	0					
ANR	1000295	Identifier	buf		987937	1					
ANR	1000296	Argument	block		987937	1					
ANR	1000297	Identifier	block		987937	0					
ANR	1000298	Argument	len		987937	2					
ANR	1000299	Identifier	len		987937	0					
ANR	1000300	ExpressionStatement	r_cons_println ( ( const char * ) buf )	6859:5:193376:193411	987937	6	True				
ANR	1000301	CallExpression	r_cons_println ( ( const char * ) buf )		987937	0					
ANR	1000302	Callee	r_cons_println		987937	0					
ANR	1000303	Identifier	r_cons_println		987937	0					
ANR	1000304	ArgumentList	( const char * ) buf		987937	1					
ANR	1000305	Argument	( const char * ) buf		987937	0					
ANR	1000306	CastExpression	( const char * ) buf		987937	0					
ANR	1000307	CastTarget	const char *		987937	0					
ANR	1000308	Identifier	buf		987937	1					
ANR	1000309	BreakStatement	break ;	6860:4:193417:193422	987937	7	True				
ANR	1000310	Label	case '?' :	6861:3:193427:193435	987937	8	True				
ANR	1000311	Label	default :	6862:3:193440:193447	987937	9	True				
ANR	1000312	Identifier	default		987937	0					
ANR	1000313	ExpressionStatement	"r_core_cmd_help ( core , help_msg_p6 )"	6863:4:193453:193487	987937	10	True				
ANR	1000314	CallExpression	"r_core_cmd_help ( core , help_msg_p6 )"		987937	0					
ANR	1000315	Callee	r_core_cmd_help		987937	0					
ANR	1000316	Identifier	r_core_cmd_help		987937	0					
ANR	1000317	ArgumentList	core		987937	1					
ANR	1000318	Argument	core		987937	0					
ANR	1000319	Identifier	core		987937	0					
ANR	1000320	Argument	help_msg_p6		987937	1					
ANR	1000321	Identifier	help_msg_p6		987937	0					
ANR	1000322	BreakStatement	break ;	6864:4:193493:193498	987937	11	True				
ANR	1000323	ExpressionStatement	free ( buf )	6866:3:193508:193518	987937	5	True				
ANR	1000324	CallExpression	free ( buf )		987937	0					
ANR	1000325	Callee	free		987937	0					
ANR	1000326	Identifier	free		987937	0					
ANR	1000327	ArgumentList	buf		987937	1					
ANR	1000328	Argument	buf		987937	0					
ANR	1000329	Identifier	buf		987937	0					
ANR	1000330	BreakStatement	break ;	6868:2:193526:193531	987937	80	True				
ANR	1000331	Label	case '8' :	6869:1:193534:193542	987937	81	True				
ANR	1000332	IfStatement	if ( input [ 1 ] == '?' )		987937	82					
ANR	1000333	Condition	input [ 1 ] == '?'	6870:6:193558:193572	987937	0	True				
ANR	1000334	EqualityExpression	input [ 1 ] == '?'		987937	0		==			
ANR	1000335	ArrayIndexing	input [ 1 ]		987937	0					
ANR	1000336	Identifier	input		987937	0					
ANR	1000337	PrimaryExpression	1		987937	1					
ANR	1000338	PrimaryExpression	'?'		987937	1					
ANR	1000339	CompoundStatement		2026:23:57538:57538	987937	1					
ANR	1000340	ExpressionStatement	"r_cons_printf ( ""|Usage: p8[fj] [len]     8bit hexpair list of bytes (see pcj)\\n"" )"	6871:3:193580:193661	987937	0	True				
ANR	1000341	CallExpression	"r_cons_printf ( ""|Usage: p8[fj] [len]     8bit hexpair list of bytes (see pcj)\\n"" )"		987937	0					
ANR	1000342	Callee	r_cons_printf		987937	0					
ANR	1000343	Identifier	r_cons_printf		987937	0					
ANR	1000344	ArgumentList	"""|Usage: p8[fj] [len]     8bit hexpair list of bytes (see pcj)\\n"""		987937	1					
ANR	1000345	Argument	"""|Usage: p8[fj] [len]     8bit hexpair list of bytes (see pcj)\\n"""		987937	0					
ANR	1000346	PrimaryExpression	"""|Usage: p8[fj] [len]     8bit hexpair list of bytes (see pcj)\\n"""		987937	0					
ANR	1000347	ExpressionStatement	"r_cons_printf ( "" p8  : print hexpairs string\\n"" )"	6872:3:193666:193714	987937	1	True				
ANR	1000348	CallExpression	"r_cons_printf ( "" p8  : print hexpairs string\\n"" )"		987937	0					
ANR	1000349	Callee	r_cons_printf		987937	0					
ANR	1000350	Identifier	r_cons_printf		987937	0					
ANR	1000351	ArgumentList	""" p8  : print hexpairs string\\n"""		987937	1					
ANR	1000352	Argument	""" p8  : print hexpairs string\\n"""		987937	0					
ANR	1000353	PrimaryExpression	""" p8  : print hexpairs string\\n"""		987937	0					
ANR	1000354	ExpressionStatement	"r_cons_printf ( "" p8f : print hexpairs of function (linear)\\n"" )"	6873:3:193719:193781	987937	2	True				
ANR	1000355	CallExpression	"r_cons_printf ( "" p8f : print hexpairs of function (linear)\\n"" )"		987937	0					
ANR	1000356	Callee	r_cons_printf		987937	0					
ANR	1000357	Identifier	r_cons_printf		987937	0					
ANR	1000358	ArgumentList	""" p8f : print hexpairs of function (linear)\\n"""		987937	1					
ANR	1000359	Argument	""" p8f : print hexpairs of function (linear)\\n"""		987937	0					
ANR	1000360	PrimaryExpression	""" p8f : print hexpairs of function (linear)\\n"""		987937	0					
ANR	1000361	ExpressionStatement	"r_cons_printf ( "" p8j : print hexpairs in JSON array\\n"" )"	6874:3:193786:193841	987937	3	True				
ANR	1000362	CallExpression	"r_cons_printf ( "" p8j : print hexpairs in JSON array\\n"" )"		987937	0					
ANR	1000363	Callee	r_cons_printf		987937	0					
ANR	1000364	Identifier	r_cons_printf		987937	0					
ANR	1000365	ArgumentList	""" p8j : print hexpairs in JSON array\\n"""		987937	1					
ANR	1000366	Argument	""" p8j : print hexpairs in JSON array\\n"""		987937	0					
ANR	1000367	PrimaryExpression	""" p8j : print hexpairs in JSON array\\n"""		987937	0					
ANR	1000368	ElseStatement	else		987937	0					
ANR	1000369	IfStatement	if ( l )		987937	0					
ANR	1000370	Condition	l	6875:13:193856:193856	987937	0	True				
ANR	1000371	Identifier	l		987937	0					
ANR	1000372	CompoundStatement		2031:16:57822:57822	987937	1					
ANR	1000373	IfStatement	"if ( ! r_core_block_size ( core , len ) )"		987937	0					
ANR	1000374	Condition	"! r_core_block_size ( core , len )"	6876:7:193868:193897	987937	0	True				
ANR	1000375	UnaryOperationExpression	"! r_core_block_size ( core , len )"		987937	0					
ANR	1000376	UnaryOperator	!		987937	0					
ANR	1000377	CallExpression	"r_core_block_size ( core , len )"		987937	1					
ANR	1000378	Callee	r_core_block_size		987937	0					
ANR	1000379	Identifier	r_core_block_size		987937	0					
ANR	1000380	ArgumentList	core		987937	1					
ANR	1000381	Argument	core		987937	0					
ANR	1000382	Identifier	core		987937	0					
ANR	1000383	Argument	len		987937	1					
ANR	1000384	Identifier	len		987937	0					
ANR	1000385	CompoundStatement		2032:39:57863:57863	987937	1					
ANR	1000386	ExpressionStatement	len = core -> blocksize	6877:4:193906:193927	987937	0	True				
ANR	1000387	AssignmentExpression	len = core -> blocksize		987937	0		=			
ANR	1000388	Identifier	len		987937	0					
ANR	1000389	PtrMemberAccess	core -> blocksize		987937	1					
ANR	1000390	Identifier	core		987937	0					
ANR	1000391	Identifier	blocksize		987937	1					
ANR	1000392	IfStatement	if ( input [ 1 ] == 'j' )		987937	1					
ANR	1000393	Condition	input [ 1 ] == 'j'	6879:7:193941:193955	987937	0	True				
ANR	1000394	EqualityExpression	input [ 1 ] == 'j'		987937	0		==			
ANR	1000395	ArrayIndexing	input [ 1 ]		987937	0					
ANR	1000396	Identifier	input		987937	0					
ANR	1000397	PrimaryExpression	1		987937	1					
ANR	1000398	PrimaryExpression	'j'		987937	1					
ANR	1000399	CompoundStatement		2035:24:57921:57921	987937	1					
ANR	1000400	ExpressionStatement	"r_core_cmdf ( core , ""pcj %s"" , input + 2 )"	6880:4:193973:194012	987937	0	True				
ANR	1000401	CallExpression	"r_core_cmdf ( core , ""pcj %s"" , input + 2 )"		987937	0					
ANR	1000402	Callee	r_core_cmdf		987937	0					
ANR	1000403	Identifier	r_core_cmdf		987937	0					
ANR	1000404	ArgumentList	core		987937	1					
ANR	1000405	Argument	core		987937	0					
ANR	1000406	Identifier	core		987937	0					
ANR	1000407	Argument	"""pcj %s"""		987937	1					
ANR	1000408	PrimaryExpression	"""pcj %s"""		987937	0					
ANR	1000409	Argument	input + 2		987937	2					
ANR	1000410	AdditiveExpression	input + 2		987937	0		+			
ANR	1000411	Identifier	input		987937	0					
ANR	1000412	PrimaryExpression	2		987937	1					
ANR	1000413	ElseStatement	else		987937	0					
ANR	1000414	IfStatement	if ( input [ 1 ] == 'f' )		987937	0					
ANR	1000415	Condition	input [ 1 ] == 'f'	6881:14:194028:194042	987937	0	True				
ANR	1000416	EqualityExpression	input [ 1 ] == 'f'		987937	0		==			
ANR	1000417	ArrayIndexing	input [ 1 ]		987937	0					
ANR	1000418	Identifier	input		987937	0					
ANR	1000419	PrimaryExpression	1		987937	1					
ANR	1000420	PrimaryExpression	'f'		987937	1					
ANR	1000421	CompoundStatement		2037:31:58008:58008	987937	1					
ANR	1000422	ExpressionStatement	"r_core_cmdf ( core , ""p8 $FS @ $FB"" )"	6882:4:194060:194094	987937	0	True				
ANR	1000423	CallExpression	"r_core_cmdf ( core , ""p8 $FS @ $FB"" )"		987937	0					
ANR	1000424	Callee	r_core_cmdf		987937	0					
ANR	1000425	Identifier	r_core_cmdf		987937	0					
ANR	1000426	ArgumentList	core		987937	1					
ANR	1000427	Argument	core		987937	0					
ANR	1000428	Identifier	core		987937	0					
ANR	1000429	Argument	"""p8 $FS @ $FB"""		987937	1					
ANR	1000430	PrimaryExpression	"""p8 $FS @ $FB"""		987937	0					
ANR	1000431	ElseStatement	else		987937	0					
ANR	1000432	CompoundStatement		2039:10:58069:58069	987937	0					
ANR	1000433	ExpressionStatement	r_core_block_read ( core )	6884:4:194112:194136	987937	0	True				
ANR	1000434	CallExpression	r_core_block_read ( core )		987937	0					
ANR	1000435	Callee	r_core_block_read		987937	0					
ANR	1000436	Identifier	r_core_block_read		987937	0					
ANR	1000437	ArgumentList	core		987937	1					
ANR	1000438	Argument	core		987937	0					
ANR	1000439	Identifier	core		987937	0					
ANR	1000440	ExpressionStatement	block = core -> block	6885:4:194142:194161	987937	1	True				
ANR	1000441	AssignmentExpression	block = core -> block		987937	0		=			
ANR	1000442	Identifier	block		987937	0					
ANR	1000443	PtrMemberAccess	core -> block		987937	1					
ANR	1000444	Identifier	core		987937	0					
ANR	1000445	Identifier	block		987937	1					
ANR	1000446	ExpressionStatement	"r_print_bytes ( core -> print , block , len , ""%02x"" )"	6886:4:194167:194214	987937	2	True				
ANR	1000447	CallExpression	"r_print_bytes ( core -> print , block , len , ""%02x"" )"		987937	0					
ANR	1000448	Callee	r_print_bytes		987937	0					
ANR	1000449	Identifier	r_print_bytes		987937	0					
ANR	1000450	ArgumentList	core -> print		987937	1					
ANR	1000451	Argument	core -> print		987937	0					
ANR	1000452	PtrMemberAccess	core -> print		987937	0					
ANR	1000453	Identifier	core		987937	0					
ANR	1000454	Identifier	print		987937	1					
ANR	1000455	Argument	block		987937	1					
ANR	1000456	Identifier	block		987937	0					
ANR	1000457	Argument	len		987937	2					
ANR	1000458	Identifier	len		987937	0					
ANR	1000459	Argument	"""%02x"""		987937	3					
ANR	1000460	PrimaryExpression	"""%02x"""		987937	0					
ANR	1000461	BreakStatement	break ;	6889:2:194227:194232	987937	83	True				
ANR	1000462	Label	case 'g' :	6890:1:194235:194243	987937	84	True				
ANR	1000463	ExpressionStatement	"cmd_print_gadget ( core , input + 1 )"	6891:2:194255:194289	987937	85	True				
ANR	1000464	CallExpression	"cmd_print_gadget ( core , input + 1 )"		987937	0					
ANR	1000465	Callee	cmd_print_gadget		987937	0					
ANR	1000466	Identifier	cmd_print_gadget		987937	0					
ANR	1000467	ArgumentList	core		987937	1					
ANR	1000468	Argument	core		987937	0					
ANR	1000469	Identifier	core		987937	0					
ANR	1000470	Argument	input + 1		987937	1					
ANR	1000471	AdditiveExpression	input + 1		987937	0		+			
ANR	1000472	Identifier	input		987937	0					
ANR	1000473	PrimaryExpression	1		987937	1					
ANR	1000474	BreakStatement	break ;	6892:2:194293:194298	987937	86	True				
ANR	1000475	Label	case 'f' :	6893:1:194301:194309	987937	87	True				
ANR	1000476	ExpressionStatement	"cmd_print_format ( core , input , block , len )"	6894:2:194321:194363	987937	88	True				
ANR	1000477	CallExpression	"cmd_print_format ( core , input , block , len )"		987937	0					
ANR	1000478	Callee	cmd_print_format		987937	0					
ANR	1000479	Identifier	cmd_print_format		987937	0					
ANR	1000480	ArgumentList	core		987937	1					
ANR	1000481	Argument	core		987937	0					
ANR	1000482	Identifier	core		987937	0					
ANR	1000483	Argument	input		987937	1					
ANR	1000484	Identifier	input		987937	0					
ANR	1000485	Argument	block		987937	2					
ANR	1000486	Identifier	block		987937	0					
ANR	1000487	Argument	len		987937	3					
ANR	1000488	Identifier	len		987937	0					
ANR	1000489	BreakStatement	break ;	6895:2:194367:194372	987937	89	True				
ANR	1000490	Label	case 'F' :	6896:1:194375:194383	987937	90	True				
ANR	1000491	ExpressionStatement	"cmd_print_fromage ( core , input + 1 , block , len )"	6897:2:194395:194442	987937	91	True				
ANR	1000492	CallExpression	"cmd_print_fromage ( core , input + 1 , block , len )"		987937	0					
ANR	1000493	Callee	cmd_print_fromage		987937	0					
ANR	1000494	Identifier	cmd_print_fromage		987937	0					
ANR	1000495	ArgumentList	core		987937	1					
ANR	1000496	Argument	core		987937	0					
ANR	1000497	Identifier	core		987937	0					
ANR	1000498	Argument	input + 1		987937	1					
ANR	1000499	AdditiveExpression	input + 1		987937	0		+			
ANR	1000500	Identifier	input		987937	0					
ANR	1000501	PrimaryExpression	1		987937	1					
ANR	1000502	Argument	block		987937	2					
ANR	1000503	Identifier	block		987937	0					
ANR	1000504	Argument	len		987937	3					
ANR	1000505	Identifier	len		987937	0					
ANR	1000506	BreakStatement	break ;	6898:2:194446:194451	987937	92	True				
ANR	1000507	Label	case 'k' :	6899:1:194454:194462	987937	93	True				
ANR	1000508	IfStatement	if ( input [ 1 ] == '?' )		987937	94					
ANR	1000509	Condition	input [ 1 ] == '?'	6900:6:194478:194492	987937	0	True				
ANR	1000510	EqualityExpression	input [ 1 ] == '?'		987937	0		==			
ANR	1000511	ArrayIndexing	input [ 1 ]		987937	0					
ANR	1000512	Identifier	input		987937	0					
ANR	1000513	PrimaryExpression	1		987937	1					
ANR	1000514	PrimaryExpression	'?'		987937	1					
ANR	1000515	CompoundStatement		2056:23:58458:58458	987937	1					
ANR	1000516	ExpressionStatement	"r_cons_printf ( ""|Usage: pk [len]       print key in randomart\\n"" )"	6901:3:194500:194565	987937	0	True				
ANR	1000517	CallExpression	"r_cons_printf ( ""|Usage: pk [len]       print key in randomart\\n"" )"		987937	0					
ANR	1000518	Callee	r_cons_printf		987937	0					
ANR	1000519	Identifier	r_cons_printf		987937	0					
ANR	1000520	ArgumentList	"""|Usage: pk [len]       print key in randomart\\n"""		987937	1					
ANR	1000521	Argument	"""|Usage: pk [len]       print key in randomart\\n"""		987937	0					
ANR	1000522	PrimaryExpression	"""|Usage: pk [len]       print key in randomart\\n"""		987937	0					
ANR	1000523	ExpressionStatement	"r_cons_printf ( ""|Usage: pkill [process-name]\\n"" )"	6902:3:194570:194618	987937	1	True				
ANR	1000524	CallExpression	"r_cons_printf ( ""|Usage: pkill [process-name]\\n"" )"		987937	0					
ANR	1000525	Callee	r_cons_printf		987937	0					
ANR	1000526	Identifier	r_cons_printf		987937	0					
ANR	1000527	ArgumentList	"""|Usage: pkill [process-name]\\n"""		987937	1					
ANR	1000528	Argument	"""|Usage: pkill [process-name]\\n"""		987937	0					
ANR	1000529	PrimaryExpression	"""|Usage: pkill [process-name]\\n"""		987937	0					
ANR	1000530	ElseStatement	else		987937	0					
ANR	1000531	IfStatement	"if ( ! strncmp ( input , ""kill"" , 4 ) )"		987937	0					
ANR	1000532	Condition	"! strncmp ( input , ""kill"" , 4 )"	6903:13:194633:194659	987937	0	True				
ANR	1000533	UnaryOperationExpression	"! strncmp ( input , ""kill"" , 4 )"		987937	0					
ANR	1000534	UnaryOperator	!		987937	0					
ANR	1000535	CallExpression	"strncmp ( input , ""kill"" , 4 )"		987937	1					
ANR	1000536	Callee	strncmp		987937	0					
ANR	1000537	Identifier	strncmp		987937	0					
ANR	1000538	ArgumentList	input		987937	1					
ANR	1000539	Argument	input		987937	0					
ANR	1000540	Identifier	input		987937	0					
ANR	1000541	Argument	"""kill"""		987937	1					
ANR	1000542	PrimaryExpression	"""kill"""		987937	0					
ANR	1000543	Argument	4		987937	2					
ANR	1000544	PrimaryExpression	4		987937	0					
ANR	1000545	CompoundStatement		2063:3:58711:58806	987937	1					
ANR	1000546	IdentifierDeclStatement	RListIter * iter ;	6904:3:194667:194682	987937	0	True				
ANR	1000547	IdentifierDecl	* iter		987937	0					
ANR	1000548	IdentifierDeclType	RListIter *		987937	0					
ANR	1000549	Identifier	iter		987937	1					
ANR	1000550	IdentifierDeclStatement	RDebugPid * pid ;	6905:3:194687:194701	987937	1	True				
ANR	1000551	IdentifierDecl	* pid		987937	0					
ANR	1000552	IdentifierDeclType	RDebugPid *		987937	0					
ANR	1000553	Identifier	pid		987937	1					
ANR	1000554	IdentifierDeclStatement	"const char * arg = strchr ( input , ' ' ) ;"	6906:3:194706:194743	987937	2	True				
ANR	1000555	IdentifierDecl	"* arg = strchr ( input , ' ' )"		987937	0					
ANR	1000556	IdentifierDeclType	const char *		987937	0					
ANR	1000557	Identifier	arg		987937	1					
ANR	1000558	AssignmentExpression	"* arg = strchr ( input , ' ' )"		987937	2		=			
ANR	1000559	Identifier	arg		987937	0					
ANR	1000560	CallExpression	"strchr ( input , ' ' )"		987937	1					
ANR	1000561	Callee	strchr		987937	0					
ANR	1000562	Identifier	strchr		987937	0					
ANR	1000563	ArgumentList	input		987937	1					
ANR	1000564	Argument	input		987937	0					
ANR	1000565	Identifier	input		987937	0					
ANR	1000566	Argument	' '		987937	1					
ANR	1000567	PrimaryExpression	' '		987937	0					
ANR	1000568	IdentifierDeclStatement	"RList * pids = ( core -> dbg -> h && core -> dbg -> h -> pids ) ? core -> dbg -> h -> pids ( core -> dbg , 0 ) : NULL ;"	6907:3:194748:194843	987937	3	True				
ANR	1000569	IdentifierDecl	"* pids = ( core -> dbg -> h && core -> dbg -> h -> pids ) ? core -> dbg -> h -> pids ( core -> dbg , 0 ) : NULL"		987937	0					
ANR	1000570	IdentifierDeclType	RList *		987937	0					
ANR	1000571	Identifier	pids		987937	1					
ANR	1000572	AssignmentExpression	"* pids = ( core -> dbg -> h && core -> dbg -> h -> pids ) ? core -> dbg -> h -> pids ( core -> dbg , 0 ) : NULL"		987937	2		=			
ANR	1000573	Identifier	pids		987937	0					
ANR	1000574	ConditionalExpression	"( core -> dbg -> h && core -> dbg -> h -> pids ) ? core -> dbg -> h -> pids ( core -> dbg , 0 ) : NULL"		987937	1					
ANR	1000575	Condition	core -> dbg -> h && core -> dbg -> h -> pids		987937	0					
ANR	1000576	AndExpression	core -> dbg -> h && core -> dbg -> h -> pids		987937	0		&&			
ANR	1000577	PtrMemberAccess	core -> dbg -> h		987937	0					
ANR	1000578	PtrMemberAccess	core -> dbg		987937	0					
ANR	1000579	Identifier	core		987937	0					
ANR	1000580	Identifier	dbg		987937	1					
ANR	1000581	Identifier	h		987937	1					
ANR	1000582	PtrMemberAccess	core -> dbg -> h -> pids		987937	1					
ANR	1000583	PtrMemberAccess	core -> dbg -> h		987937	0					
ANR	1000584	PtrMemberAccess	core -> dbg		987937	0					
ANR	1000585	Identifier	core		987937	0					
ANR	1000586	Identifier	dbg		987937	1					
ANR	1000587	Identifier	h		987937	1					
ANR	1000588	Identifier	pids		987937	1					
ANR	1000589	CallExpression	"core -> dbg -> h -> pids ( core -> dbg , 0 )"		987937	1					
ANR	1000590	Callee	core -> dbg -> h -> pids		987937	0					
ANR	1000591	PtrMemberAccess	core -> dbg -> h -> pids		987937	0					
ANR	1000592	PtrMemberAccess	core -> dbg -> h		987937	0					
ANR	1000593	PtrMemberAccess	core -> dbg		987937	0					
ANR	1000594	Identifier	core		987937	0					
ANR	1000595	Identifier	dbg		987937	1					
ANR	1000596	Identifier	h		987937	1					
ANR	1000597	Identifier	pids		987937	1					
ANR	1000598	ArgumentList	core -> dbg		987937	1					
ANR	1000599	Argument	core -> dbg		987937	0					
ANR	1000600	PtrMemberAccess	core -> dbg		987937	0					
ANR	1000601	Identifier	core		987937	0					
ANR	1000602	Identifier	dbg		987937	1					
ANR	1000603	Argument	0		987937	1					
ANR	1000604	PrimaryExpression	0		987937	0					
ANR	1000605	Identifier	NULL		987937	2					
ANR	1000606	IfStatement	if ( arg && * ++ arg )		987937	4					
ANR	1000607	Condition	arg && * ++ arg	6909:7:194852:194864	987937	0	True				
ANR	1000608	AndExpression	arg && * ++ arg		987937	0		&&			
ANR	1000609	Identifier	arg		987937	0					
ANR	1000610	UnaryOperationExpression	* ++ arg		987937	1					
ANR	1000611	UnaryOperator	*		987937	0					
ANR	1000612	UnaryExpression	++ arg		987937	1					
ANR	1000613	IncDec	++		987937	0					
ANR	1000614	Identifier	arg		987937	1					
ANR	1000615	CompoundStatement		2065:22:58830:58830	987937	1					
ANR	1000616	Statement	r_list_foreach	6910:4:194873:194886	987937	0	True				
ANR	1000617	Statement	(	6910:19:194888:194888	987937	1	True				
ANR	1000618	Statement	pids	6910:20:194889:194892	987937	2	True				
ANR	1000619	Statement	","	6910:24:194893:194893	987937	3	True				
ANR	1000620	Statement	iter	6910:26:194895:194898	987937	4	True				
ANR	1000621	Statement	","	6910:30:194899:194899	987937	5	True				
ANR	1000622	Statement	pid	6910:32:194901:194903	987937	6	True				
ANR	1000623	Statement	)	6910:35:194904:194904	987937	7	True				
ANR	1000624	CompoundStatement		2066:37:58869:58869	987937	8					
ANR	1000625	IfStatement	"if ( strstr ( pid -> path , arg ) )"		987937	0					
ANR	1000626	Condition	"strstr ( pid -> path , arg )"	6911:9:194917:194939	987937	0	True				
ANR	1000627	CallExpression	"strstr ( pid -> path , arg )"		987937	0					
ANR	1000628	Callee	strstr		987937	0					
ANR	1000629	Identifier	strstr		987937	0					
ANR	1000630	ArgumentList	pid -> path		987937	1					
ANR	1000631	Argument	pid -> path		987937	0					
ANR	1000632	PtrMemberAccess	pid -> path		987937	0					
ANR	1000633	Identifier	pid		987937	0					
ANR	1000634	Identifier	path		987937	1					
ANR	1000635	Argument	arg		987937	1					
ANR	1000636	Identifier	arg		987937	0					
ANR	1000637	CompoundStatement		2067:34:58905:58905	987937	1					
ANR	1000638	ExpressionStatement	"r_cons_printf ( ""dk 9 %d\\n"" , pid -> pid )"	6912:6:194950:194987	987937	0	True				
ANR	1000639	CallExpression	"r_cons_printf ( ""dk 9 %d\\n"" , pid -> pid )"		987937	0					
ANR	1000640	Callee	r_cons_printf		987937	0					
ANR	1000641	Identifier	r_cons_printf		987937	0					
ANR	1000642	ArgumentList	"""dk 9 %d\\n"""		987937	1					
ANR	1000643	Argument	"""dk 9 %d\\n"""		987937	0					
ANR	1000644	PrimaryExpression	"""dk 9 %d\\n"""		987937	0					
ANR	1000645	Argument	pid -> pid		987937	1					
ANR	1000646	PtrMemberAccess	pid -> pid		987937	0					
ANR	1000647	Identifier	pid		987937	0					
ANR	1000648	Identifier	pid		987937	1					
ANR	1000649	ExpressionStatement	r_list_free ( pids )	6917:3:195078:195096	987937	5	True				
ANR	1000650	CallExpression	r_list_free ( pids )		987937	0					
ANR	1000651	Callee	r_list_free		987937	0					
ANR	1000652	Identifier	r_list_free		987937	0					
ANR	1000653	ArgumentList	pids		987937	1					
ANR	1000654	Argument	pids		987937	0					
ANR	1000655	Identifier	pids		987937	0					
ANR	1000656	ElseStatement	else		987937	0					
ANR	1000657	IfStatement	if ( l > 0 )		987937	0					
ANR	1000658	Condition	l > 0	6918:13:195111:195115	987937	0	True				
ANR	1000659	RelationalExpression	l > 0		987937	0		>			
ANR	1000660	Identifier	l		987937	0					
ANR	1000661	PrimaryExpression	0		987937	1					
ANR	1000662	CompoundStatement		2076:3:59140:59194	987937	1					
ANR	1000663	ExpressionStatement	len = len > core -> blocksize ? core -> blocksize : len	6919:3:195123:195172	987937	0	True				
ANR	1000664	AssignmentExpression	len = len > core -> blocksize ? core -> blocksize : len		987937	0		=			
ANR	1000665	Identifier	len		987937	0					
ANR	1000666	ConditionalExpression	len > core -> blocksize ? core -> blocksize : len		987937	1					
ANR	1000667	Condition	len > core -> blocksize		987937	0					
ANR	1000668	RelationalExpression	len > core -> blocksize		987937	0		>			
ANR	1000669	Identifier	len		987937	0					
ANR	1000670	PtrMemberAccess	core -> blocksize		987937	1					
ANR	1000671	Identifier	core		987937	0					
ANR	1000672	Identifier	blocksize		987937	1					
ANR	1000673	PtrMemberAccess	core -> blocksize		987937	1					
ANR	1000674	Identifier	core		987937	0					
ANR	1000675	Identifier	blocksize		987937	1					
ANR	1000676	Identifier	len		987937	2					
ANR	1000677	IdentifierDeclStatement	"char * s = r_print_randomart ( block , len , core -> offset ) ;"	6920:3:195177:195231	987937	1	True				
ANR	1000678	IdentifierDecl	"* s = r_print_randomart ( block , len , core -> offset )"		987937	0					
ANR	1000679	IdentifierDeclType	char *		987937	0					
ANR	1000680	Identifier	s		987937	1					
ANR	1000681	AssignmentExpression	"* s = r_print_randomart ( block , len , core -> offset )"		987937	2		=			
ANR	1000682	Identifier	s		987937	0					
ANR	1000683	CallExpression	"r_print_randomart ( block , len , core -> offset )"		987937	1					
ANR	1000684	Callee	r_print_randomart		987937	0					
ANR	1000685	Identifier	r_print_randomart		987937	0					
ANR	1000686	ArgumentList	block		987937	1					
ANR	1000687	Argument	block		987937	0					
ANR	1000688	Identifier	block		987937	0					
ANR	1000689	Argument	len		987937	1					
ANR	1000690	Identifier	len		987937	0					
ANR	1000691	Argument	core -> offset		987937	2					
ANR	1000692	PtrMemberAccess	core -> offset		987937	0					
ANR	1000693	Identifier	core		987937	0					
ANR	1000694	Identifier	offset		987937	1					
ANR	1000695	ExpressionStatement	r_cons_println ( s )	6921:3:195236:195254	987937	2	True				
ANR	1000696	CallExpression	r_cons_println ( s )		987937	0					
ANR	1000697	Callee	r_cons_println		987937	0					
ANR	1000698	Identifier	r_cons_println		987937	0					
ANR	1000699	ArgumentList	s		987937	1					
ANR	1000700	Argument	s		987937	0					
ANR	1000701	Identifier	s		987937	0					
ANR	1000702	ExpressionStatement	free ( s )	6922:3:195259:195267	987937	3	True				
ANR	1000703	CallExpression	free ( s )		987937	0					
ANR	1000704	Callee	free		987937	0					
ANR	1000705	Identifier	free		987937	0					
ANR	1000706	ArgumentList	s		987937	1					
ANR	1000707	Argument	s		987937	0					
ANR	1000708	Identifier	s		987937	0					
ANR	1000709	BreakStatement	break ;	6924:2:195275:195280	987937	95	True				
ANR	1000710	Label	case 'K' :	6925:1:195283:195291	987937	96	True				
ANR	1000711	IfStatement	if ( input [ 1 ] == '?' )		987937	97					
ANR	1000712	Condition	input [ 1 ] == '?'	6926:6:195307:195321	987937	0	True				
ANR	1000713	EqualityExpression	input [ 1 ] == '?'		987937	0		==			
ANR	1000714	ArrayIndexing	input [ 1 ]		987937	0					
ANR	1000715	Identifier	input		987937	0					
ANR	1000716	PrimaryExpression	1		987937	1					
ANR	1000717	PrimaryExpression	'?'		987937	1					
ANR	1000718	CompoundStatement		2082:23:59287:59287	987937	1					
ANR	1000719	ExpressionStatement	"r_cons_printf ( ""|Usage: pK [len]       print key in randomart mosaic\\n"" )"	6927:3:195329:195401	987937	0	True				
ANR	1000720	CallExpression	"r_cons_printf ( ""|Usage: pK [len]       print key in randomart mosaic\\n"" )"		987937	0					
ANR	1000721	Callee	r_cons_printf		987937	0					
ANR	1000722	Identifier	r_cons_printf		987937	0					
ANR	1000723	ArgumentList	"""|Usage: pK [len]       print key in randomart mosaic\\n"""		987937	1					
ANR	1000724	Argument	"""|Usage: pK [len]       print key in randomart mosaic\\n"""		987937	0					
ANR	1000725	PrimaryExpression	"""|Usage: pK [len]       print key in randomart mosaic\\n"""		987937	0					
ANR	1000726	ElseStatement	else		987937	0					
ANR	1000727	IfStatement	if ( l > 0 )		987937	0					
ANR	1000728	Condition	l > 0	6928:13:195416:195420	987937	0	True				
ANR	1000729	RelationalExpression	l > 0		987937	0		>			
ANR	1000730	Identifier	l		987937	0					
ANR	1000731	PrimaryExpression	0		987937	1					
ANR	1000732	CompoundStatement		2093:3:59599:59606	987937	1					
ANR	1000733	ExpressionStatement	len = len > core -> blocksize ? core -> blocksize : len	6929:3:195428:195477	987937	0	True				
ANR	1000734	AssignmentExpression	len = len > core -> blocksize ? core -> blocksize : len		987937	0		=			
ANR	1000735	Identifier	len		987937	0					
ANR	1000736	ConditionalExpression	len > core -> blocksize ? core -> blocksize : len		987937	1					
ANR	1000737	Condition	len > core -> blocksize		987937	0					
ANR	1000738	RelationalExpression	len > core -> blocksize		987937	0		>			
ANR	1000739	Identifier	len		987937	0					
ANR	1000740	PtrMemberAccess	core -> blocksize		987937	1					
ANR	1000741	Identifier	core		987937	0					
ANR	1000742	Identifier	blocksize		987937	1					
ANR	1000743	PtrMemberAccess	core -> blocksize		987937	1					
ANR	1000744	Identifier	core		987937	0					
ANR	1000745	Identifier	blocksize		987937	1					
ANR	1000746	Identifier	len		987937	2					
ANR	1000747	IdentifierDeclStatement	"int w , h ;"	6930:3:195482:195490	987937	1	True				
ANR	1000748	IdentifierDecl	w		987937	0					
ANR	1000749	IdentifierDeclType	int		987937	0					
ANR	1000750	Identifier	w		987937	1					
ANR	1000751	IdentifierDecl	h		987937	1					
ANR	1000752	IdentifierDeclType	int		987937	0					
ANR	1000753	Identifier	h		987937	1					
ANR	1000754	IdentifierDeclStatement	RConsCanvas * c ;	6931:3:195495:195509	987937	2	True				
ANR	1000755	IdentifierDecl	* c		987937	0					
ANR	1000756	IdentifierDeclType	RConsCanvas *		987937	0					
ANR	1000757	Identifier	c		987937	1					
ANR	1000758	ExpressionStatement	w = r_cons_get_size ( & h )	6932:3:195514:195538	987937	3	True				
ANR	1000759	AssignmentExpression	w = r_cons_get_size ( & h )		987937	0		=			
ANR	1000760	Identifier	w		987937	0					
ANR	1000761	CallExpression	r_cons_get_size ( & h )		987937	1					
ANR	1000762	Callee	r_cons_get_size		987937	0					
ANR	1000763	Identifier	r_cons_get_size		987937	0					
ANR	1000764	ArgumentList	& h		987937	1					
ANR	1000765	Argument	& h		987937	0					
ANR	1000766	UnaryOperationExpression	& h		987937	0					
ANR	1000767	UnaryOperator	&		987937	0					
ANR	1000768	Identifier	h		987937	1					
ANR	1000769	IdentifierDeclStatement	ut64 offset0 = core -> offset ;	6933:3:195543:195570	987937	4	True				
ANR	1000770	IdentifierDecl	offset0 = core -> offset		987937	0					
ANR	1000771	IdentifierDeclType	ut64		987937	0					
ANR	1000772	Identifier	offset0		987937	1					
ANR	1000773	AssignmentExpression	offset0 = core -> offset		987937	2		=			
ANR	1000774	Identifier	offset0		987937	0					
ANR	1000775	PtrMemberAccess	core -> offset		987937	1					
ANR	1000776	Identifier	core		987937	0					
ANR	1000777	Identifier	offset		987937	1					
ANR	1000778	IdentifierDeclStatement	int cols = ( w / 20 ) ;	6934:3:195575:195594	987937	5	True				
ANR	1000779	IdentifierDecl	cols = ( w / 20 )		987937	0					
ANR	1000780	IdentifierDeclType	int		987937	0					
ANR	1000781	Identifier	cols		987937	1					
ANR	1000782	AssignmentExpression	cols = ( w / 20 )		987937	2		=			
ANR	1000783	Identifier	cols		987937	0					
ANR	1000784	MultiplicativeExpression	w / 20		987937	1		/			
ANR	1000785	Identifier	w		987937	0					
ANR	1000786	PrimaryExpression	20		987937	1					
ANR	1000787	IdentifierDeclStatement	int rows = ( h / 12 ) ;	6935:3:195599:195618	987937	6	True				
ANR	1000788	IdentifierDecl	rows = ( h / 12 )		987937	0					
ANR	1000789	IdentifierDeclType	int		987937	0					
ANR	1000790	Identifier	rows		987937	1					
ANR	1000791	AssignmentExpression	rows = ( h / 12 )		987937	2		=			
ANR	1000792	Identifier	rows		987937	0					
ANR	1000793	MultiplicativeExpression	h / 12		987937	1		/			
ANR	1000794	Identifier	h		987937	0					
ANR	1000795	PrimaryExpression	12		987937	1					
ANR	1000796	IdentifierDeclStatement	"int i , j ;"	6936:3:195623:195631	987937	7	True				
ANR	1000797	IdentifierDecl	i		987937	0					
ANR	1000798	IdentifierDeclType	int		987937	0					
ANR	1000799	Identifier	i		987937	1					
ANR	1000800	IdentifierDecl	j		987937	1					
ANR	1000801	IdentifierDeclType	int		987937	0					
ANR	1000802	Identifier	j		987937	1					
ANR	1000803	IdentifierDeclStatement	char * s ;	6937:3:195636:195643	987937	8	True				
ANR	1000804	IdentifierDecl	* s		987937	0					
ANR	1000805	IdentifierDeclType	char *		987937	0					
ANR	1000806	Identifier	s		987937	1					
ANR	1000807	IfStatement	if ( rows < 1 )		987937	9					
ANR	1000808	Condition	rows < 1	6938:7:195652:195659	987937	0	True				
ANR	1000809	RelationalExpression	rows < 1		987937	0		<			
ANR	1000810	Identifier	rows		987937	0					
ANR	1000811	PrimaryExpression	1		987937	1					
ANR	1000812	CompoundStatement		2094:17:59625:59625	987937	1					
ANR	1000813	ExpressionStatement	rows = 1	6939:4:195668:195676	987937	0	True				
ANR	1000814	AssignmentExpression	rows = 1		987937	0		=			
ANR	1000815	Identifier	rows		987937	0					
ANR	1000816	PrimaryExpression	1		987937	1					
ANR	1000817	ExpressionStatement	"c = r_cons_canvas_new ( w , rows * 11 )"	6941:3:195686:195722	987937	10	True				
ANR	1000818	AssignmentExpression	"c = r_cons_canvas_new ( w , rows * 11 )"		987937	0		=			
ANR	1000819	Identifier	c		987937	0					
ANR	1000820	CallExpression	"r_cons_canvas_new ( w , rows * 11 )"		987937	1					
ANR	1000821	Callee	r_cons_canvas_new		987937	0					
ANR	1000822	Identifier	r_cons_canvas_new		987937	0					
ANR	1000823	ArgumentList	w		987937	1					
ANR	1000824	Argument	w		987937	0					
ANR	1000825	Identifier	w		987937	0					
ANR	1000826	Argument	rows * 11		987937	1					
ANR	1000827	MultiplicativeExpression	rows * 11		987937	0		*			
ANR	1000828	Identifier	rows		987937	0					
ANR	1000829	PrimaryExpression	11		987937	1					
ANR	1000830	ForStatement	for ( i = 0 ; i < rows ; i ++ )		987937	11					
ANR	1000831	ForInit	i = 0 ;	6942:8:195732:195737	987937	0	True				
ANR	1000832	AssignmentExpression	i = 0		987937	0		=			
ANR	1000833	Identifier	i		987937	0					
ANR	1000834	PrimaryExpression	0		987937	1					
ANR	1000835	Condition	i < rows	6942:15:195739:195746	987937	1	True				
ANR	1000836	RelationalExpression	i < rows		987937	0		<			
ANR	1000837	Identifier	i		987937	0					
ANR	1000838	Identifier	rows		987937	1					
ANR	1000839	PostIncDecOperationExpression	i ++	6942:25:195749:195751	987937	2	True				
ANR	1000840	Identifier	i		987937	0					
ANR	1000841	IncDec	++		987937	1					
ANR	1000842	CompoundStatement		2098:30:59717:59717	987937	3					
ANR	1000843	ForStatement	for ( j = 0 ; j < cols ; j ++ )		987937	0					
ANR	1000844	ForInit	j = 0 ;	6943:9:195765:195770	987937	0	True				
ANR	1000845	AssignmentExpression	j = 0		987937	0		=			
ANR	1000846	Identifier	j		987937	0					
ANR	1000847	PrimaryExpression	0		987937	1					
ANR	1000848	Condition	j < cols	6943:16:195772:195779	987937	1	True				
ANR	1000849	RelationalExpression	j < cols		987937	0		<			
ANR	1000850	Identifier	j		987937	0					
ANR	1000851	Identifier	cols		987937	1					
ANR	1000852	PostIncDecOperationExpression	j ++	6943:26:195782:195784	987937	2	True				
ANR	1000853	Identifier	j		987937	0					
ANR	1000854	IncDec	++		987937	1					
ANR	1000855	CompoundStatement		2099:31:59750:59750	987937	3					
ANR	1000856	ExpressionStatement	"r_cons_canvas_gotoxy ( c , j * 20 , i * 11 )"	6944:5:195794:195834	987937	0	True				
ANR	1000857	CallExpression	"r_cons_canvas_gotoxy ( c , j * 20 , i * 11 )"		987937	0					
ANR	1000858	Callee	r_cons_canvas_gotoxy		987937	0					
ANR	1000859	Identifier	r_cons_canvas_gotoxy		987937	0					
ANR	1000860	ArgumentList	c		987937	1					
ANR	1000861	Argument	c		987937	0					
ANR	1000862	Identifier	c		987937	0					
ANR	1000863	Argument	j * 20		987937	1					
ANR	1000864	MultiplicativeExpression	j * 20		987937	0		*			
ANR	1000865	Identifier	j		987937	0					
ANR	1000866	PrimaryExpression	20		987937	1					
ANR	1000867	Argument	i * 11		987937	2					
ANR	1000868	MultiplicativeExpression	i * 11		987937	0		*			
ANR	1000869	Identifier	i		987937	0					
ANR	1000870	PrimaryExpression	11		987937	1					
ANR	1000871	ExpressionStatement	core -> offset += len	6945:5:195841:195860	987937	1	True				
ANR	1000872	AssignmentExpression	core -> offset += len		987937	0		+=			
ANR	1000873	PtrMemberAccess	core -> offset		987937	0					
ANR	1000874	Identifier	core		987937	0					
ANR	1000875	Identifier	offset		987937	1					
ANR	1000876	Identifier	len		987937	1					
ANR	1000877	ExpressionStatement	"r_io_read_at ( core -> io , core -> offset , core -> block , len )"	6946:5:195867:195922	987937	2	True				
ANR	1000878	CallExpression	"r_io_read_at ( core -> io , core -> offset , core -> block , len )"		987937	0					
ANR	1000879	Callee	r_io_read_at		987937	0					
ANR	1000880	Identifier	r_io_read_at		987937	0					
ANR	1000881	ArgumentList	core -> io		987937	1					
ANR	1000882	Argument	core -> io		987937	0					
ANR	1000883	PtrMemberAccess	core -> io		987937	0					
ANR	1000884	Identifier	core		987937	0					
ANR	1000885	Identifier	io		987937	1					
ANR	1000886	Argument	core -> offset		987937	1					
ANR	1000887	PtrMemberAccess	core -> offset		987937	0					
ANR	1000888	Identifier	core		987937	0					
ANR	1000889	Identifier	offset		987937	1					
ANR	1000890	Argument	core -> block		987937	2					
ANR	1000891	PtrMemberAccess	core -> block		987937	0					
ANR	1000892	Identifier	core		987937	0					
ANR	1000893	Identifier	block		987937	1					
ANR	1000894	Argument	len		987937	3					
ANR	1000895	Identifier	len		987937	0					
ANR	1000896	ExpressionStatement	"s = r_print_randomart ( core -> block , len , core -> offset )"	6947:5:195929:195983	987937	3	True				
ANR	1000897	AssignmentExpression	"s = r_print_randomart ( core -> block , len , core -> offset )"		987937	0		=			
ANR	1000898	Identifier	s		987937	0					
ANR	1000899	CallExpression	"r_print_randomart ( core -> block , len , core -> offset )"		987937	1					
ANR	1000900	Callee	r_print_randomart		987937	0					
ANR	1000901	Identifier	r_print_randomart		987937	0					
ANR	1000902	ArgumentList	core -> block		987937	1					
ANR	1000903	Argument	core -> block		987937	0					
ANR	1000904	PtrMemberAccess	core -> block		987937	0					
ANR	1000905	Identifier	core		987937	0					
ANR	1000906	Identifier	block		987937	1					
ANR	1000907	Argument	len		987937	1					
ANR	1000908	Identifier	len		987937	0					
ANR	1000909	Argument	core -> offset		987937	2					
ANR	1000910	PtrMemberAccess	core -> offset		987937	0					
ANR	1000911	Identifier	core		987937	0					
ANR	1000912	Identifier	offset		987937	1					
ANR	1000913	ExpressionStatement	"r_cons_canvas_write ( c , s )"	6948:5:195990:196016	987937	4	True				
ANR	1000914	CallExpression	"r_cons_canvas_write ( c , s )"		987937	0					
ANR	1000915	Callee	r_cons_canvas_write		987937	0					
ANR	1000916	Identifier	r_cons_canvas_write		987937	0					
ANR	1000917	ArgumentList	c		987937	1					
ANR	1000918	Argument	c		987937	0					
ANR	1000919	Identifier	c		987937	0					
ANR	1000920	Argument	s		987937	1					
ANR	1000921	Identifier	s		987937	0					
ANR	1000922	ExpressionStatement	free ( s )	6949:5:196023:196031	987937	5	True				
ANR	1000923	CallExpression	free ( s )		987937	0					
ANR	1000924	Callee	free		987937	0					
ANR	1000925	Identifier	free		987937	0					
ANR	1000926	ArgumentList	s		987937	1					
ANR	1000927	Argument	s		987937	0					
ANR	1000928	Identifier	s		987937	0					
ANR	1000929	ExpressionStatement	r_cons_canvas_print ( c )	6952:3:196047:196070	987937	12	True				
ANR	1000930	CallExpression	r_cons_canvas_print ( c )		987937	0					
ANR	1000931	Callee	r_cons_canvas_print		987937	0					
ANR	1000932	Identifier	r_cons_canvas_print		987937	0					
ANR	1000933	ArgumentList	c		987937	1					
ANR	1000934	Argument	c		987937	0					
ANR	1000935	Identifier	c		987937	0					
ANR	1000936	ExpressionStatement	r_cons_canvas_free ( c )	6953:3:196075:196097	987937	13	True				
ANR	1000937	CallExpression	r_cons_canvas_free ( c )		987937	0					
ANR	1000938	Callee	r_cons_canvas_free		987937	0					
ANR	1000939	Identifier	r_cons_canvas_free		987937	0					
ANR	1000940	ArgumentList	c		987937	1					
ANR	1000941	Argument	c		987937	0					
ANR	1000942	Identifier	c		987937	0					
ANR	1000943	ExpressionStatement	"r_io_read_at ( core -> io , offset0 , core -> block , len )"	6954:3:196102:196152	987937	14	True				
ANR	1000944	CallExpression	"r_io_read_at ( core -> io , offset0 , core -> block , len )"		987937	0					
ANR	1000945	Callee	r_io_read_at		987937	0					
ANR	1000946	Identifier	r_io_read_at		987937	0					
ANR	1000947	ArgumentList	core -> io		987937	1					
ANR	1000948	Argument	core -> io		987937	0					
ANR	1000949	PtrMemberAccess	core -> io		987937	0					
ANR	1000950	Identifier	core		987937	0					
ANR	1000951	Identifier	io		987937	1					
ANR	1000952	Argument	offset0		987937	1					
ANR	1000953	Identifier	offset0		987937	0					
ANR	1000954	Argument	core -> block		987937	2					
ANR	1000955	PtrMemberAccess	core -> block		987937	0					
ANR	1000956	Identifier	core		987937	0					
ANR	1000957	Identifier	block		987937	1					
ANR	1000958	Argument	len		987937	3					
ANR	1000959	Identifier	len		987937	0					
ANR	1000960	ExpressionStatement	core -> offset = offset0	6955:3:196157:196179	987937	15	True				
ANR	1000961	AssignmentExpression	core -> offset = offset0		987937	0		=			
ANR	1000962	PtrMemberAccess	core -> offset		987937	0					
ANR	1000963	Identifier	core		987937	0					
ANR	1000964	Identifier	offset		987937	1					
ANR	1000965	Identifier	offset0		987937	1					
ANR	1000966	ExpressionStatement	"r_cons_printf ( ""\\n"" )"	6956:3:196184:196204	987937	16	True				
ANR	1000967	CallExpression	"r_cons_printf ( ""\\n"" )"		987937	0					
ANR	1000968	Callee	r_cons_printf		987937	0					
ANR	1000969	Identifier	r_cons_printf		987937	0					
ANR	1000970	ArgumentList	"""\\n"""		987937	1					
ANR	1000971	Argument	"""\\n"""		987937	0					
ANR	1000972	PrimaryExpression	"""\\n"""		987937	0					
ANR	1000973	BreakStatement	break ;	6958:2:196212:196217	987937	98	True				
ANR	1000974	Label	case 'n' :	6959:1:196220:196228	987937	99	True				
ANR	1000975	ExpressionStatement	"eprintf ( ""easter egg license has expired\\n"" )"	6960:2:196242:196286	987937	100	True				
ANR	1000976	CallExpression	"eprintf ( ""easter egg license has expired\\n"" )"		987937	0					
ANR	1000977	Callee	eprintf		987937	0					
ANR	1000978	Identifier	eprintf		987937	0					
ANR	1000979	ArgumentList	"""easter egg license has expired\\n"""		987937	1					
ANR	1000980	Argument	"""easter egg license has expired\\n"""		987937	0					
ANR	1000981	PrimaryExpression	"""easter egg license has expired\\n"""		987937	0					
ANR	1000982	BreakStatement	break ;	6961:2:196290:196295	987937	101	True				
ANR	1000983	Label	case 't' :	6962:1:196298:196306	987937	102	True				
ANR	1000984	SwitchStatement	switch ( input [ 1 ] )		987937	103					
ANR	1000985	Condition	input [ 1 ]	6963:10:196326:196333	987937	0	True				
ANR	1000986	ArrayIndexing	input [ 1 ]		987937	0					
ANR	1000987	Identifier	input		987937	0					
ANR	1000988	PrimaryExpression	1		987937	1					
ANR	1000989	CompoundStatement		2119:20:60299:60299	987937	1					
ANR	1000990	Label	case '.' :	6964:2:196340:196348	987937	0	True				
ANR	1000991	CompoundStatement		2122:4:60322:60343	987937	1					
ANR	1000992	IdentifierDeclStatement	char nowstr [ 64 ] = { 0 } ;	6966:4:196359:196380	987937	0	True				
ANR	1000993	IdentifierDecl	nowstr [ 64 ] = { 0 }		987937	0					
ANR	1000994	IdentifierDeclType	char [ 64 ]		987937	0					
ANR	1000995	Identifier	nowstr		987937	1					
ANR	1000996	PrimaryExpression	64		987937	2					
ANR	1000997	AssignmentExpression	nowstr [ 64 ] = { 0 }		987937	3		=			
ANR	1000998	Identifier	nowstr		987937	0					
ANR	1000999	InitializerList	0		987937	1					
ANR	1001000	PrimaryExpression	0		987937	0					
ANR	1001001	ExpressionStatement	"r_print_date_get_now ( core -> print , nowstr )"	6967:4:196386:196428	987937	1	True				
ANR	1001002	CallExpression	"r_print_date_get_now ( core -> print , nowstr )"		987937	0					
ANR	1001003	Callee	r_print_date_get_now		987937	0					
ANR	1001004	Identifier	r_print_date_get_now		987937	0					
ANR	1001005	ArgumentList	core -> print		987937	1					
ANR	1001006	Argument	core -> print		987937	0					
ANR	1001007	PtrMemberAccess	core -> print		987937	0					
ANR	1001008	Identifier	core		987937	0					
ANR	1001009	Identifier	print		987937	1					
ANR	1001010	Argument	nowstr		987937	1					
ANR	1001011	Identifier	nowstr		987937	0					
ANR	1001012	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , nowstr )"	6968:4:196434:196464	987937	2	True				
ANR	1001013	CallExpression	"r_cons_printf ( ""%s\\n"" , nowstr )"		987937	0					
ANR	1001014	Callee	r_cons_printf		987937	0					
ANR	1001015	Identifier	r_cons_printf		987937	0					
ANR	1001016	ArgumentList	"""%s\\n"""		987937	1					
ANR	1001017	Argument	"""%s\\n"""		987937	0					
ANR	1001018	PrimaryExpression	"""%s\\n"""		987937	0					
ANR	1001019	Argument	nowstr		987937	1					
ANR	1001020	Identifier	nowstr		987937	0					
ANR	1001021	BreakStatement	break ;	6970:3:196474:196479	987937	2	True				
ANR	1001022	Label	case ' ' :	6971:2:196483:196491	987937	3	True				
ANR	1001023	Label	case '\\0' :	6972:2:196495:196504	987937	4	True				
ANR	1001024	IfStatement	if ( len < sizeof ( ut32 ) )		987937	5					
ANR	1001025	Condition	len < sizeof ( ut32 )	6974:7:196602:196620	987937	0	True				
ANR	1001026	RelationalExpression	len < sizeof ( ut32 )		987937	0		<			
ANR	1001027	Identifier	len		987937	0					
ANR	1001028	SizeofExpression	sizeof ( ut32 )		987937	1					
ANR	1001029	Sizeof	sizeof		987937	0					
ANR	1001030	SizeofOperand	ut32		987937	1					
ANR	1001031	CompoundStatement		2130:28:60586:60586	987937	1					
ANR	1001032	ExpressionStatement	"eprintf ( ""You should change the block size: b %d\\n"" , ( int ) sizeof ( ut32 ) )"	6975:4:196629:196702	987937	0	True				
ANR	1001033	CallExpression	"eprintf ( ""You should change the block size: b %d\\n"" , ( int ) sizeof ( ut32 ) )"		987937	0					
ANR	1001034	Callee	eprintf		987937	0					
ANR	1001035	Identifier	eprintf		987937	0					
ANR	1001036	ArgumentList	"""You should change the block size: b %d\\n"""		987937	1					
ANR	1001037	Argument	"""You should change the block size: b %d\\n"""		987937	0					
ANR	1001038	PrimaryExpression	"""You should change the block size: b %d\\n"""		987937	0					
ANR	1001039	Argument	( int ) sizeof ( ut32 )		987937	1					
ANR	1001040	CastExpression	( int ) sizeof ( ut32 )		987937	0					
ANR	1001041	CastTarget	int		987937	0					
ANR	1001042	SizeofExpression	sizeof ( ut32 )		987937	1					
ANR	1001043	Sizeof	sizeof		987937	0					
ANR	1001044	SizeofOperand	ut32		987937	1					
ANR	1001045	IfStatement	if ( len % sizeof ( ut32 ) )		987937	6					
ANR	1001046	Condition	len % sizeof ( ut32 )	6977:7:196716:196734	987937	0	True				
ANR	1001047	MultiplicativeExpression	len % sizeof ( ut32 )		987937	0		%			
ANR	1001048	Identifier	len		987937	0					
ANR	1001049	SizeofExpression	sizeof ( ut32 )		987937	1					
ANR	1001050	Sizeof	sizeof		987937	0					
ANR	1001051	SizeofOperand	ut32		987937	1					
ANR	1001052	CompoundStatement		2133:28:60700:60700	987937	1					
ANR	1001053	ExpressionStatement	len = len - ( len % sizeof ( ut32 ) )	6978:4:196743:196776	987937	0	True				
ANR	1001054	AssignmentExpression	len = len - ( len % sizeof ( ut32 ) )		987937	0		=			
ANR	1001055	Identifier	len		987937	0					
ANR	1001056	AdditiveExpression	len - ( len % sizeof ( ut32 ) )		987937	1		-			
ANR	1001057	Identifier	len		987937	0					
ANR	1001058	MultiplicativeExpression	len % sizeof ( ut32 )		987937	1		%			
ANR	1001059	Identifier	len		987937	0					
ANR	1001060	SizeofExpression	sizeof ( ut32 )		987937	1					
ANR	1001061	Sizeof	sizeof		987937	0					
ANR	1001062	SizeofOperand	ut32		987937	1					
ANR	1001063	ForStatement	for ( l = 0 ; l < len ; l += sizeof ( ut32 ) )		987937	7					
ANR	1001064	ForInit	l = 0 ;	6980:8:196791:196796	987937	0	True				
ANR	1001065	AssignmentExpression	l = 0		987937	0		=			
ANR	1001066	Identifier	l		987937	0					
ANR	1001067	PrimaryExpression	0		987937	1					
ANR	1001068	Condition	l < len	6980:15:196798:196804	987937	1	True				
ANR	1001069	RelationalExpression	l < len		987937	0		<			
ANR	1001070	Identifier	l		987937	0					
ANR	1001071	Identifier	len		987937	1					
ANR	1001072	AssignmentExpression	l += sizeof ( ut32 )	6980:24:196807:196824	987937	2	True	+=			
ANR	1001073	Identifier	l		987937	0					
ANR	1001074	SizeofExpression	sizeof ( ut32 )		987937	1					
ANR	1001075	Sizeof	sizeof		987937	0					
ANR	1001076	SizeofOperand	ut32		987937	1					
ANR	1001077	CompoundStatement		2136:44:60790:60790	987937	3					
ANR	1001078	ExpressionStatement	"r_print_date_unix ( core -> print , block + l , sizeof ( ut32 ) )"	6981:4:196833:196890	987937	0	True				
ANR	1001079	CallExpression	"r_print_date_unix ( core -> print , block + l , sizeof ( ut32 ) )"		987937	0					
ANR	1001080	Callee	r_print_date_unix		987937	0					
ANR	1001081	Identifier	r_print_date_unix		987937	0					
ANR	1001082	ArgumentList	core -> print		987937	1					
ANR	1001083	Argument	core -> print		987937	0					
ANR	1001084	PtrMemberAccess	core -> print		987937	0					
ANR	1001085	Identifier	core		987937	0					
ANR	1001086	Identifier	print		987937	1					
ANR	1001087	Argument	block + l		987937	1					
ANR	1001088	AdditiveExpression	block + l		987937	0		+			
ANR	1001089	Identifier	block		987937	0					
ANR	1001090	Identifier	l		987937	1					
ANR	1001091	Argument	sizeof ( ut32 )		987937	2					
ANR	1001092	SizeofExpression	sizeof ( ut32 )		987937	0					
ANR	1001093	Sizeof	sizeof		987937	0					
ANR	1001094	SizeofOperand	ut32		987937	1					
ANR	1001095	BreakStatement	break ;	6983:3:196900:196905	987937	8	True				
ANR	1001096	Label	case 'h' :	6984:2:196909:196917	987937	9	True				
ANR	1001097	IfStatement	if ( len < sizeof ( ut32 ) )		987937	10					
ANR	1001098	Condition	len < sizeof ( ut32 )	6986:7:197024:197042	987937	0	True				
ANR	1001099	RelationalExpression	len < sizeof ( ut32 )		987937	0		<			
ANR	1001100	Identifier	len		987937	0					
ANR	1001101	SizeofExpression	sizeof ( ut32 )		987937	1					
ANR	1001102	Sizeof	sizeof		987937	0					
ANR	1001103	SizeofOperand	ut32		987937	1					
ANR	1001104	CompoundStatement		2142:28:61008:61008	987937	1					
ANR	1001105	ExpressionStatement	"eprintf ( ""You should change the block size: b %d\\n"" , ( int ) sizeof ( ut32 ) )"	6987:4:197051:197124	987937	0	True				
ANR	1001106	CallExpression	"eprintf ( ""You should change the block size: b %d\\n"" , ( int ) sizeof ( ut32 ) )"		987937	0					
ANR	1001107	Callee	eprintf		987937	0					
ANR	1001108	Identifier	eprintf		987937	0					
ANR	1001109	ArgumentList	"""You should change the block size: b %d\\n"""		987937	1					
ANR	1001110	Argument	"""You should change the block size: b %d\\n"""		987937	0					
ANR	1001111	PrimaryExpression	"""You should change the block size: b %d\\n"""		987937	0					
ANR	1001112	Argument	( int ) sizeof ( ut32 )		987937	1					
ANR	1001113	CastExpression	( int ) sizeof ( ut32 )		987937	0					
ANR	1001114	CastTarget	int		987937	0					
ANR	1001115	SizeofExpression	sizeof ( ut32 )		987937	1					
ANR	1001116	Sizeof	sizeof		987937	0					
ANR	1001117	SizeofOperand	ut32		987937	1					
ANR	1001118	IfStatement	if ( len % sizeof ( ut32 ) )		987937	11					
ANR	1001119	Condition	len % sizeof ( ut32 )	6989:7:197138:197156	987937	0	True				
ANR	1001120	MultiplicativeExpression	len % sizeof ( ut32 )		987937	0		%			
ANR	1001121	Identifier	len		987937	0					
ANR	1001122	SizeofExpression	sizeof ( ut32 )		987937	1					
ANR	1001123	Sizeof	sizeof		987937	0					
ANR	1001124	SizeofOperand	ut32		987937	1					
ANR	1001125	CompoundStatement		2145:28:61122:61122	987937	1					
ANR	1001126	ExpressionStatement	len = len - ( len % sizeof ( ut32 ) )	6990:4:197165:197198	987937	0	True				
ANR	1001127	AssignmentExpression	len = len - ( len % sizeof ( ut32 ) )		987937	0		=			
ANR	1001128	Identifier	len		987937	0					
ANR	1001129	AdditiveExpression	len - ( len % sizeof ( ut32 ) )		987937	1		-			
ANR	1001130	Identifier	len		987937	0					
ANR	1001131	MultiplicativeExpression	len % sizeof ( ut32 )		987937	1		%			
ANR	1001132	Identifier	len		987937	0					
ANR	1001133	SizeofExpression	sizeof ( ut32 )		987937	1					
ANR	1001134	Sizeof	sizeof		987937	0					
ANR	1001135	SizeofOperand	ut32		987937	1					
ANR	1001136	ForStatement	for ( l = 0 ; l < len ; l += sizeof ( ut32 ) )		987937	12					
ANR	1001137	ForInit	l = 0 ;	6992:8:197213:197218	987937	0	True				
ANR	1001138	AssignmentExpression	l = 0		987937	0		=			
ANR	1001139	Identifier	l		987937	0					
ANR	1001140	PrimaryExpression	0		987937	1					
ANR	1001141	Condition	l < len	6992:15:197220:197226	987937	1	True				
ANR	1001142	RelationalExpression	l < len		987937	0		<			
ANR	1001143	Identifier	l		987937	0					
ANR	1001144	Identifier	len		987937	1					
ANR	1001145	AssignmentExpression	l += sizeof ( ut32 )	6992:24:197229:197246	987937	2	True	+=			
ANR	1001146	Identifier	l		987937	0					
ANR	1001147	SizeofExpression	sizeof ( ut32 )		987937	1					
ANR	1001148	Sizeof	sizeof		987937	0					
ANR	1001149	SizeofOperand	ut32		987937	1					
ANR	1001150	CompoundStatement		2148:44:61212:61212	987937	3					
ANR	1001151	ExpressionStatement	"r_print_date_hfs ( core -> print , block + l , sizeof ( ut32 ) )"	6993:4:197255:197311	987937	0	True				
ANR	1001152	CallExpression	"r_print_date_hfs ( core -> print , block + l , sizeof ( ut32 ) )"		987937	0					
ANR	1001153	Callee	r_print_date_hfs		987937	0					
ANR	1001154	Identifier	r_print_date_hfs		987937	0					
ANR	1001155	ArgumentList	core -> print		987937	1					
ANR	1001156	Argument	core -> print		987937	0					
ANR	1001157	PtrMemberAccess	core -> print		987937	0					
ANR	1001158	Identifier	core		987937	0					
ANR	1001159	Identifier	print		987937	1					
ANR	1001160	Argument	block + l		987937	1					
ANR	1001161	AdditiveExpression	block + l		987937	0		+			
ANR	1001162	Identifier	block		987937	0					
ANR	1001163	Identifier	l		987937	1					
ANR	1001164	Argument	sizeof ( ut32 )		987937	2					
ANR	1001165	SizeofExpression	sizeof ( ut32 )		987937	0					
ANR	1001166	Sizeof	sizeof		987937	0					
ANR	1001167	SizeofOperand	ut32		987937	1					
ANR	1001168	BreakStatement	break ;	6995:3:197321:197326	987937	13	True				
ANR	1001169	Label	case 'd' :	6996:2:197330:197338	987937	14	True				
ANR	1001170	IfStatement	if ( len < sizeof ( ut32 ) )		987937	15					
ANR	1001171	Condition	len < sizeof ( ut32 )	6999:7:197491:197509	987937	0	True				
ANR	1001172	RelationalExpression	len < sizeof ( ut32 )		987937	0		<			
ANR	1001173	Identifier	len		987937	0					
ANR	1001174	SizeofExpression	sizeof ( ut32 )		987937	1					
ANR	1001175	Sizeof	sizeof		987937	0					
ANR	1001176	SizeofOperand	ut32		987937	1					
ANR	1001177	CompoundStatement		2155:28:61475:61475	987937	1					
ANR	1001178	ExpressionStatement	"eprintf ( ""You should change the block size: b %d\\n"" , ( int ) sizeof ( ut32 ) )"	7000:4:197518:197591	987937	0	True				
ANR	1001179	CallExpression	"eprintf ( ""You should change the block size: b %d\\n"" , ( int ) sizeof ( ut32 ) )"		987937	0					
ANR	1001180	Callee	eprintf		987937	0					
ANR	1001181	Identifier	eprintf		987937	0					
ANR	1001182	ArgumentList	"""You should change the block size: b %d\\n"""		987937	1					
ANR	1001183	Argument	"""You should change the block size: b %d\\n"""		987937	0					
ANR	1001184	PrimaryExpression	"""You should change the block size: b %d\\n"""		987937	0					
ANR	1001185	Argument	( int ) sizeof ( ut32 )		987937	1					
ANR	1001186	CastExpression	( int ) sizeof ( ut32 )		987937	0					
ANR	1001187	CastTarget	int		987937	0					
ANR	1001188	SizeofExpression	sizeof ( ut32 )		987937	1					
ANR	1001189	Sizeof	sizeof		987937	0					
ANR	1001190	SizeofOperand	ut32		987937	1					
ANR	1001191	IfStatement	if ( len % sizeof ( ut32 ) )		987937	16					
ANR	1001192	Condition	len % sizeof ( ut32 )	7002:7:197605:197623	987937	0	True				
ANR	1001193	MultiplicativeExpression	len % sizeof ( ut32 )		987937	0		%			
ANR	1001194	Identifier	len		987937	0					
ANR	1001195	SizeofExpression	sizeof ( ut32 )		987937	1					
ANR	1001196	Sizeof	sizeof		987937	0					
ANR	1001197	SizeofOperand	ut32		987937	1					
ANR	1001198	CompoundStatement		2158:28:61589:61589	987937	1					
ANR	1001199	ExpressionStatement	len = len - ( len % sizeof ( ut32 ) )	7003:4:197632:197665	987937	0	True				
ANR	1001200	AssignmentExpression	len = len - ( len % sizeof ( ut32 ) )		987937	0		=			
ANR	1001201	Identifier	len		987937	0					
ANR	1001202	AdditiveExpression	len - ( len % sizeof ( ut32 ) )		987937	1		-			
ANR	1001203	Identifier	len		987937	0					
ANR	1001204	MultiplicativeExpression	len % sizeof ( ut32 )		987937	1		%			
ANR	1001205	Identifier	len		987937	0					
ANR	1001206	SizeofExpression	sizeof ( ut32 )		987937	1					
ANR	1001207	Sizeof	sizeof		987937	0					
ANR	1001208	SizeofOperand	ut32		987937	1					
ANR	1001209	ForStatement	for ( l = 0 ; l < len ; l += sizeof ( ut32 ) )		987937	17					
ANR	1001210	ForInit	l = 0 ;	7005:8:197680:197685	987937	0	True				
ANR	1001211	AssignmentExpression	l = 0		987937	0		=			
ANR	1001212	Identifier	l		987937	0					
ANR	1001213	PrimaryExpression	0		987937	1					
ANR	1001214	Condition	l < len	7005:15:197687:197693	987937	1	True				
ANR	1001215	RelationalExpression	l < len		987937	0		<			
ANR	1001216	Identifier	l		987937	0					
ANR	1001217	Identifier	len		987937	1					
ANR	1001218	AssignmentExpression	l += sizeof ( ut32 )	7005:24:197696:197713	987937	2	True	+=			
ANR	1001219	Identifier	l		987937	0					
ANR	1001220	SizeofExpression	sizeof ( ut32 )		987937	1					
ANR	1001221	Sizeof	sizeof		987937	0					
ANR	1001222	SizeofOperand	ut32		987937	1					
ANR	1001223	CompoundStatement		2161:44:61679:61679	987937	3					
ANR	1001224	ExpressionStatement	"r_print_date_dos ( core -> print , block + l , sizeof ( ut32 ) )"	7006:4:197722:197778	987937	0	True				
ANR	1001225	CallExpression	"r_print_date_dos ( core -> print , block + l , sizeof ( ut32 ) )"		987937	0					
ANR	1001226	Callee	r_print_date_dos		987937	0					
ANR	1001227	Identifier	r_print_date_dos		987937	0					
ANR	1001228	ArgumentList	core -> print		987937	1					
ANR	1001229	Argument	core -> print		987937	0					
ANR	1001230	PtrMemberAccess	core -> print		987937	0					
ANR	1001231	Identifier	core		987937	0					
ANR	1001232	Identifier	print		987937	1					
ANR	1001233	Argument	block + l		987937	1					
ANR	1001234	AdditiveExpression	block + l		987937	0		+			
ANR	1001235	Identifier	block		987937	0					
ANR	1001236	Identifier	l		987937	1					
ANR	1001237	Argument	sizeof ( ut32 )		987937	2					
ANR	1001238	SizeofExpression	sizeof ( ut32 )		987937	0					
ANR	1001239	Sizeof	sizeof		987937	0					
ANR	1001240	SizeofOperand	ut32		987937	1					
ANR	1001241	BreakStatement	break ;	7008:3:197788:197793	987937	18	True				
ANR	1001242	Label	case 'n' :	7009:2:197797:197805	987937	19	True				
ANR	1001243	IfStatement	if ( len < sizeof ( ut64 ) )		987937	20					
ANR	1001244	Condition	len < sizeof ( ut64 )	7010:7:197823:197841	987937	0	True				
ANR	1001245	RelationalExpression	len < sizeof ( ut64 )		987937	0		<			
ANR	1001246	Identifier	len		987937	0					
ANR	1001247	SizeofExpression	sizeof ( ut64 )		987937	1					
ANR	1001248	Sizeof	sizeof		987937	0					
ANR	1001249	SizeofOperand	ut64		987937	1					
ANR	1001250	CompoundStatement		2166:28:61807:61807	987937	1					
ANR	1001251	ExpressionStatement	"eprintf ( ""You should change the block size: b %d\\n"" , ( int ) sizeof ( ut64 ) )"	7011:4:197850:197923	987937	0	True				
ANR	1001252	CallExpression	"eprintf ( ""You should change the block size: b %d\\n"" , ( int ) sizeof ( ut64 ) )"		987937	0					
ANR	1001253	Callee	eprintf		987937	0					
ANR	1001254	Identifier	eprintf		987937	0					
ANR	1001255	ArgumentList	"""You should change the block size: b %d\\n"""		987937	1					
ANR	1001256	Argument	"""You should change the block size: b %d\\n"""		987937	0					
ANR	1001257	PrimaryExpression	"""You should change the block size: b %d\\n"""		987937	0					
ANR	1001258	Argument	( int ) sizeof ( ut64 )		987937	1					
ANR	1001259	CastExpression	( int ) sizeof ( ut64 )		987937	0					
ANR	1001260	CastTarget	int		987937	0					
ANR	1001261	SizeofExpression	sizeof ( ut64 )		987937	1					
ANR	1001262	Sizeof	sizeof		987937	0					
ANR	1001263	SizeofOperand	ut64		987937	1					
ANR	1001264	IfStatement	if ( len % sizeof ( ut64 ) )		987937	21					
ANR	1001265	Condition	len % sizeof ( ut64 )	7013:7:197937:197955	987937	0	True				
ANR	1001266	MultiplicativeExpression	len % sizeof ( ut64 )		987937	0		%			
ANR	1001267	Identifier	len		987937	0					
ANR	1001268	SizeofExpression	sizeof ( ut64 )		987937	1					
ANR	1001269	Sizeof	sizeof		987937	0					
ANR	1001270	SizeofOperand	ut64		987937	1					
ANR	1001271	CompoundStatement		2169:28:61921:61921	987937	1					
ANR	1001272	ExpressionStatement	len = len - ( len % sizeof ( ut64 ) )	7014:4:197964:197997	987937	0	True				
ANR	1001273	AssignmentExpression	len = len - ( len % sizeof ( ut64 ) )		987937	0		=			
ANR	1001274	Identifier	len		987937	0					
ANR	1001275	AdditiveExpression	len - ( len % sizeof ( ut64 ) )		987937	1		-			
ANR	1001276	Identifier	len		987937	0					
ANR	1001277	MultiplicativeExpression	len % sizeof ( ut64 )		987937	1		%			
ANR	1001278	Identifier	len		987937	0					
ANR	1001279	SizeofExpression	sizeof ( ut64 )		987937	1					
ANR	1001280	Sizeof	sizeof		987937	0					
ANR	1001281	SizeofOperand	ut64		987937	1					
ANR	1001282	ForStatement	for ( l = 0 ; l < len ; l += sizeof ( ut64 ) )		987937	22					
ANR	1001283	ForInit	l = 0 ;	7016:8:198012:198017	987937	0	True				
ANR	1001284	AssignmentExpression	l = 0		987937	0		=			
ANR	1001285	Identifier	l		987937	0					
ANR	1001286	PrimaryExpression	0		987937	1					
ANR	1001287	Condition	l < len	7016:15:198019:198025	987937	1	True				
ANR	1001288	RelationalExpression	l < len		987937	0		<			
ANR	1001289	Identifier	l		987937	0					
ANR	1001290	Identifier	len		987937	1					
ANR	1001291	AssignmentExpression	l += sizeof ( ut64 )	7016:24:198028:198045	987937	2	True	+=			
ANR	1001292	Identifier	l		987937	0					
ANR	1001293	SizeofExpression	sizeof ( ut64 )		987937	1					
ANR	1001294	Sizeof	sizeof		987937	0					
ANR	1001295	SizeofOperand	ut64		987937	1					
ANR	1001296	CompoundStatement		2172:44:62011:62011	987937	3					
ANR	1001297	ExpressionStatement	"r_print_date_w32 ( core -> print , block + l , sizeof ( ut64 ) )"	7017:4:198054:198110	987937	0	True				
ANR	1001298	CallExpression	"r_print_date_w32 ( core -> print , block + l , sizeof ( ut64 ) )"		987937	0					
ANR	1001299	Callee	r_print_date_w32		987937	0					
ANR	1001300	Identifier	r_print_date_w32		987937	0					
ANR	1001301	ArgumentList	core -> print		987937	1					
ANR	1001302	Argument	core -> print		987937	0					
ANR	1001303	PtrMemberAccess	core -> print		987937	0					
ANR	1001304	Identifier	core		987937	0					
ANR	1001305	Identifier	print		987937	1					
ANR	1001306	Argument	block + l		987937	1					
ANR	1001307	AdditiveExpression	block + l		987937	0		+			
ANR	1001308	Identifier	block		987937	0					
ANR	1001309	Identifier	l		987937	1					
ANR	1001310	Argument	sizeof ( ut64 )		987937	2					
ANR	1001311	SizeofExpression	sizeof ( ut64 )		987937	0					
ANR	1001312	Sizeof	sizeof		987937	0					
ANR	1001313	SizeofOperand	ut64		987937	1					
ANR	1001314	BreakStatement	break ;	7019:3:198120:198125	987937	23	True				
ANR	1001315	Label	case '?' :	7020:2:198129:198137	987937	24	True				
ANR	1001316	ExpressionStatement	"r_core_cmd_help ( core , help_msg_pt )"	7021:3:198142:198177	987937	25	True				
ANR	1001317	CallExpression	"r_core_cmd_help ( core , help_msg_pt )"		987937	0					
ANR	1001318	Callee	r_core_cmd_help		987937	0					
ANR	1001319	Identifier	r_core_cmd_help		987937	0					
ANR	1001320	ArgumentList	core		987937	1					
ANR	1001321	Argument	core		987937	0					
ANR	1001322	Identifier	core		987937	0					
ANR	1001323	Argument	help_msg_pt		987937	1					
ANR	1001324	Identifier	help_msg_pt		987937	0					
ANR	1001325	BreakStatement	break ;	7022:3:198182:198187	987937	26	True				
ANR	1001326	BreakStatement	break ;	7024:2:198195:198200	987937	104	True				
ANR	1001327	Label	case 'q' :	7025:1:198203:198211	987937	105	True				
ANR	1001328	SwitchStatement	switch ( input [ 1 ] )		987937	106					
ANR	1001329	Condition	input [ 1 ]	7026:10:198231:198238	987937	0	True				
ANR	1001330	ArrayIndexing	input [ 1 ]		987937	0					
ANR	1001331	Identifier	input		987937	0					
ANR	1001332	PrimaryExpression	1		987937	1					
ANR	1001333	CompoundStatement		2182:20:62204:62204	987937	1					
ANR	1001334	Label	case '?' :	7027:2:198245:198253	987937	0	True				
ANR	1001335	ExpressionStatement	"eprintf ( ""Usage: pq[s] [len]\\n"" )"	7028:3:198258:198290	987937	1	True				
ANR	1001336	CallExpression	"eprintf ( ""Usage: pq[s] [len]\\n"" )"		987937	0					
ANR	1001337	Callee	eprintf		987937	0					
ANR	1001338	Identifier	eprintf		987937	0					
ANR	1001339	ArgumentList	"""Usage: pq[s] [len]\\n"""		987937	1					
ANR	1001340	Argument	"""Usage: pq[s] [len]\\n"""		987937	0					
ANR	1001341	PrimaryExpression	"""Usage: pq[s] [len]\\n"""		987937	0					
ANR	1001342	ExpressionStatement	len = 0	7029:3:198295:198302	987937	2	True				
ANR	1001343	AssignmentExpression	len = 0		987937	0		=			
ANR	1001344	Identifier	len		987937	0					
ANR	1001345	PrimaryExpression	0		987937	1					
ANR	1001346	BreakStatement	break ;	7030:3:198307:198312	987937	3	True				
ANR	1001347	Label	case 's' :	7031:2:198316:198324	987937	4	True				
ANR	1001348	Label	case 'z' :	7032:2:198337:198345	987937	5	True				
ANR	1001349	ExpressionStatement	"len = r_str_nlen ( ( const char * ) block , core -> blocksize )"	7033:3:198373:198428	987937	6	True				
ANR	1001350	AssignmentExpression	"len = r_str_nlen ( ( const char * ) block , core -> blocksize )"		987937	0		=			
ANR	1001351	Identifier	len		987937	0					
ANR	1001352	CallExpression	"r_str_nlen ( ( const char * ) block , core -> blocksize )"		987937	1					
ANR	1001353	Callee	r_str_nlen		987937	0					
ANR	1001354	Identifier	r_str_nlen		987937	0					
ANR	1001355	ArgumentList	( const char * ) block		987937	1					
ANR	1001356	Argument	( const char * ) block		987937	0					
ANR	1001357	CastExpression	( const char * ) block		987937	0					
ANR	1001358	CastTarget	const char *		987937	0					
ANR	1001359	Identifier	block		987937	1					
ANR	1001360	Argument	core -> blocksize		987937	1					
ANR	1001361	PtrMemberAccess	core -> blocksize		987937	0					
ANR	1001362	Identifier	core		987937	0					
ANR	1001363	Identifier	blocksize		987937	1					
ANR	1001364	BreakStatement	break ;	7034:3:198433:198438	987937	7	True				
ANR	1001365	Label	default :	7035:2:198442:198449	987937	8	True				
ANR	1001366	Identifier	default		987937	0					
ANR	1001367	IfStatement	if ( len < 1 )		987937	9					
ANR	1001368	Condition	len < 1	7036:7:198458:198464	987937	0	True				
ANR	1001369	RelationalExpression	len < 1		987937	0		<			
ANR	1001370	Identifier	len		987937	0					
ANR	1001371	PrimaryExpression	1		987937	1					
ANR	1001372	CompoundStatement		2192:16:62430:62430	987937	1					
ANR	1001373	ExpressionStatement	len = 0	7037:4:198473:198480	987937	0	True				
ANR	1001374	AssignmentExpression	len = 0		987937	0		=			
ANR	1001375	Identifier	len		987937	0					
ANR	1001376	PrimaryExpression	0		987937	1					
ANR	1001377	IfStatement	if ( len > core -> blocksize )		987937	10					
ANR	1001378	Condition	len > core -> blocksize	7039:7:198494:198514	987937	0	True				
ANR	1001379	RelationalExpression	len > core -> blocksize		987937	0		>			
ANR	1001380	Identifier	len		987937	0					
ANR	1001381	PtrMemberAccess	core -> blocksize		987937	1					
ANR	1001382	Identifier	core		987937	0					
ANR	1001383	Identifier	blocksize		987937	1					
ANR	1001384	CompoundStatement		2195:30:62480:62480	987937	1					
ANR	1001385	ExpressionStatement	len = core -> blocksize	7040:4:198523:198544	987937	0	True				
ANR	1001386	AssignmentExpression	len = core -> blocksize		987937	0		=			
ANR	1001387	Identifier	len		987937	0					
ANR	1001388	PtrMemberAccess	core -> blocksize		987937	1					
ANR	1001389	Identifier	core		987937	0					
ANR	1001390	Identifier	blocksize		987937	1					
ANR	1001391	BreakStatement	break ;	7042:3:198554:198559	987937	11	True				
ANR	1001392	IfStatement	if ( len > 0 )		987937	107					
ANR	1001393	Condition	len > 0	7044:6:198571:198577	987937	0	True				
ANR	1001394	RelationalExpression	len > 0		987937	0		>			
ANR	1001395	Identifier	len		987937	0					
ANR	1001396	PrimaryExpression	0		987937	1					
ANR	1001397	CompoundStatement		2202:3:62612:62702	987937	1					
ANR	1001398	IdentifierDeclStatement	bool inverted = ( input [ 1 ] == 'i' ) ;	7045:3:198585:198618	987937	0	True				
ANR	1001399	IdentifierDecl	inverted = ( input [ 1 ] == 'i' )		987937	0					
ANR	1001400	IdentifierDeclType	bool		987937	0					
ANR	1001401	Identifier	inverted		987937	1					
ANR	1001402	AssignmentExpression	inverted = ( input [ 1 ] == 'i' )		987937	2		=			
ANR	1001403	Identifier	inverted		987937	0					
ANR	1001404	EqualityExpression	input [ 1 ] == 'i'		987937	1		==			
ANR	1001405	ArrayIndexing	input [ 1 ]		987937	0					
ANR	1001406	Identifier	input		987937	0					
ANR	1001407	PrimaryExpression	1		987937	1					
ANR	1001408	PrimaryExpression	'i'		987937	1					
ANR	1001409	IdentifierDeclStatement	"char * res = r_qrcode_gen ( block , len , r_config_get_i ( core -> config , ""scr.utf8"" ) , inverted ) ;"	7046:3:198649:198739	987937	1	True				
ANR	1001410	IdentifierDecl	"* res = r_qrcode_gen ( block , len , r_config_get_i ( core -> config , ""scr.utf8"" ) , inverted )"		987937	0					
ANR	1001411	IdentifierDeclType	char *		987937	0					
ANR	1001412	Identifier	res		987937	1					
ANR	1001413	AssignmentExpression	"* res = r_qrcode_gen ( block , len , r_config_get_i ( core -> config , ""scr.utf8"" ) , inverted )"		987937	2		=			
ANR	1001414	Identifier	res		987937	0					
ANR	1001415	CallExpression	"r_qrcode_gen ( block , len , r_config_get_i ( core -> config , ""scr.utf8"" ) , inverted )"		987937	1					
ANR	1001416	Callee	r_qrcode_gen		987937	0					
ANR	1001417	Identifier	r_qrcode_gen		987937	0					
ANR	1001418	ArgumentList	block		987937	1					
ANR	1001419	Argument	block		987937	0					
ANR	1001420	Identifier	block		987937	0					
ANR	1001421	Argument	len		987937	1					
ANR	1001422	Identifier	len		987937	0					
ANR	1001423	Argument	"r_config_get_i ( core -> config , ""scr.utf8"" )"		987937	2					
ANR	1001424	CallExpression	"r_config_get_i ( core -> config , ""scr.utf8"" )"		987937	0					
ANR	1001425	Callee	r_config_get_i		987937	0					
ANR	1001426	Identifier	r_config_get_i		987937	0					
ANR	1001427	ArgumentList	core -> config		987937	1					
ANR	1001428	Argument	core -> config		987937	0					
ANR	1001429	PtrMemberAccess	core -> config		987937	0					
ANR	1001430	Identifier	core		987937	0					
ANR	1001431	Identifier	config		987937	1					
ANR	1001432	Argument	"""scr.utf8"""		987937	1					
ANR	1001433	PrimaryExpression	"""scr.utf8"""		987937	0					
ANR	1001434	Argument	inverted		987937	3					
ANR	1001435	Identifier	inverted		987937	0					
ANR	1001436	IfStatement	if ( res )		987937	2					
ANR	1001437	Condition	res	7047:7:198748:198750	987937	0	True				
ANR	1001438	Identifier	res		987937	0					
ANR	1001439	CompoundStatement		2203:12:62716:62716	987937	1					
ANR	1001440	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , res )"	7048:4:198759:198786	987937	0	True				
ANR	1001441	CallExpression	"r_cons_printf ( ""%s\\n"" , res )"		987937	0					
ANR	1001442	Callee	r_cons_printf		987937	0					
ANR	1001443	Identifier	r_cons_printf		987937	0					
ANR	1001444	ArgumentList	"""%s\\n"""		987937	1					
ANR	1001445	Argument	"""%s\\n"""		987937	0					
ANR	1001446	PrimaryExpression	"""%s\\n"""		987937	0					
ANR	1001447	Argument	res		987937	1					
ANR	1001448	Identifier	res		987937	0					
ANR	1001449	ExpressionStatement	free ( res )	7049:4:198792:198802	987937	1	True				
ANR	1001450	CallExpression	free ( res )		987937	0					
ANR	1001451	Callee	free		987937	0					
ANR	1001452	Identifier	free		987937	0					
ANR	1001453	ArgumentList	res		987937	1					
ANR	1001454	Argument	res		987937	0					
ANR	1001455	Identifier	res		987937	0					
ANR	1001456	BreakStatement	break ;	7052:2:198815:198820	987937	108	True				
ANR	1001457	Label	case 'z' :	7053:1:198823:198831	987937	109	True				
ANR	1001458	IfStatement	if ( input [ 1 ] == '?' )		987937	110					
ANR	1001459	Condition	input [ 1 ] == '?'	7054:6:198847:198861	987937	0	True				
ANR	1001460	EqualityExpression	input [ 1 ] == '?'		987937	0		==			
ANR	1001461	ArrayIndexing	input [ 1 ]		987937	0					
ANR	1001462	Identifier	input		987937	0					
ANR	1001463	PrimaryExpression	1		987937	1					
ANR	1001464	PrimaryExpression	'?'		987937	1					
ANR	1001465	CompoundStatement		2210:23:62827:62827	987937	1					
ANR	1001466	ExpressionStatement	"r_core_cmd_help ( core , help_msg_pz )"	7055:3:198869:198904	987937	0	True				
ANR	1001467	CallExpression	"r_core_cmd_help ( core , help_msg_pz )"		987937	0					
ANR	1001468	Callee	r_core_cmd_help		987937	0					
ANR	1001469	Identifier	r_core_cmd_help		987937	0					
ANR	1001470	ArgumentList	core		987937	1					
ANR	1001471	Argument	core		987937	0					
ANR	1001472	Identifier	core		987937	0					
ANR	1001473	Argument	help_msg_pz		987937	1					
ANR	1001474	Identifier	help_msg_pz		987937	0					
ANR	1001475	ElseStatement	else		987937	0					
ANR	1001476	CompoundStatement		2230:3:63395:63414	987937	0					
ANR	1001477	IdentifierDeclStatement	RIOMap * map ;	7057:3:198920:198931	987937	0	True				
ANR	1001478	IdentifierDecl	* map		987937	0					
ANR	1001479	IdentifierDeclType	RIOMap *		987937	0					
ANR	1001480	Identifier	map		987937	1					
ANR	1001481	IdentifierDeclStatement	RListIter * iter ;	7058:3:198936:198951	987937	1	True				
ANR	1001482	IdentifierDecl	* iter		987937	0					
ANR	1001483	IdentifierDeclType	RListIter *		987937	0					
ANR	1001484	Identifier	iter		987937	1					
ANR	1001485	IdentifierDeclStatement	"RList * list = r_core_get_boundaries_prot ( core , - 1 , NULL , ""zoom"" ) ;"	7059:3:198956:199021	987937	2	True				
ANR	1001486	IdentifierDecl	"* list = r_core_get_boundaries_prot ( core , - 1 , NULL , ""zoom"" )"		987937	0					
ANR	1001487	IdentifierDeclType	RList *		987937	0					
ANR	1001488	Identifier	list		987937	1					
ANR	1001489	AssignmentExpression	"* list = r_core_get_boundaries_prot ( core , - 1 , NULL , ""zoom"" )"		987937	2		=			
ANR	1001490	Identifier	list		987937	0					
ANR	1001491	CallExpression	"r_core_get_boundaries_prot ( core , - 1 , NULL , ""zoom"" )"		987937	1					
ANR	1001492	Callee	r_core_get_boundaries_prot		987937	0					
ANR	1001493	Identifier	r_core_get_boundaries_prot		987937	0					
ANR	1001494	ArgumentList	core		987937	1					
ANR	1001495	Argument	core		987937	0					
ANR	1001496	Identifier	core		987937	0					
ANR	1001497	Argument	- 1		987937	1					
ANR	1001498	UnaryOperationExpression	- 1		987937	0					
ANR	1001499	UnaryOperator	-		987937	0					
ANR	1001500	PrimaryExpression	1		987937	1					
ANR	1001501	Argument	NULL		987937	2					
ANR	1001502	Identifier	NULL		987937	0					
ANR	1001503	Argument	"""zoom"""		987937	3					
ANR	1001504	PrimaryExpression	"""zoom"""		987937	0					
ANR	1001505	IfStatement	if ( list && r_list_length ( list ) > 0 )		987937	3					
ANR	1001506	Condition	list && r_list_length ( list ) > 0	7060:7:199030:199061	987937	0	True				
ANR	1001507	AndExpression	list && r_list_length ( list ) > 0		987937	0		&&			
ANR	1001508	Identifier	list		987937	0					
ANR	1001509	RelationalExpression	r_list_length ( list ) > 0		987937	1		>			
ANR	1001510	CallExpression	r_list_length ( list )		987937	0					
ANR	1001511	Callee	r_list_length		987937	0					
ANR	1001512	Identifier	r_list_length		987937	0					
ANR	1001513	ArgumentList	list		987937	1					
ANR	1001514	Argument	list		987937	0					
ANR	1001515	Identifier	list		987937	0					
ANR	1001516	PrimaryExpression	0		987937	1					
ANR	1001517	CompoundStatement		2218:4:63068:63094	987937	1					
ANR	1001518	IdentifierDeclStatement	RListIter * iter1 = list -> head ;	7061:4:199070:199099	987937	0	True				
ANR	1001519	IdentifierDecl	* iter1 = list -> head		987937	0					
ANR	1001520	IdentifierDeclType	RListIter *		987937	0					
ANR	1001521	Identifier	iter1		987937	1					
ANR	1001522	AssignmentExpression	* iter1 = list -> head		987937	2		=			
ANR	1001523	Identifier	iter1		987937	0					
ANR	1001524	PtrMemberAccess	list -> head		987937	1					
ANR	1001525	Identifier	list		987937	0					
ANR	1001526	Identifier	head		987937	1					
ANR	1001527	IdentifierDeclStatement	RIOMap * map1 = iter1 -> data ;	7062:4:199105:199131	987937	1	True				
ANR	1001528	IdentifierDecl	* map1 = iter1 -> data		987937	0					
ANR	1001529	IdentifierDeclType	RIOMap *		987937	0					
ANR	1001530	Identifier	map1		987937	1					
ANR	1001531	AssignmentExpression	* map1 = iter1 -> data		987937	2		=			
ANR	1001532	Identifier	map1		987937	0					
ANR	1001533	PtrMemberAccess	iter1 -> data		987937	1					
ANR	1001534	Identifier	iter1		987937	0					
ANR	1001535	Identifier	data		987937	1					
ANR	1001536	ExpressionStatement	from = map1 -> itv . addr	7063:4:199137:199158	987937	2	True				
ANR	1001537	AssignmentExpression	from = map1 -> itv . addr		987937	0		=			
ANR	1001538	Identifier	from		987937	0					
ANR	1001539	MemberAccess	map1 -> itv . addr		987937	1					
ANR	1001540	PtrMemberAccess	map1 -> itv		987937	0					
ANR	1001541	Identifier	map1		987937	0					
ANR	1001542	Identifier	itv		987937	1					
ANR	1001543	Identifier	addr		987937	1					
ANR	1001544	Statement	r_list_foreach	7064:4:199164:199177	987937	3	True				
ANR	1001545	Statement	(	7064:19:199179:199179	987937	4	True				
ANR	1001546	Statement	list	7064:20:199180:199183	987937	5	True				
ANR	1001547	Statement	","	7064:24:199184:199184	987937	6	True				
ANR	1001548	Statement	iter	7064:26:199186:199189	987937	7	True				
ANR	1001549	Statement	","	7064:30:199190:199190	987937	8	True				
ANR	1001550	Statement	map	7064:32:199192:199194	987937	9	True				
ANR	1001551	Statement	)	7064:35:199195:199195	987937	10	True				
ANR	1001552	CompoundStatement		2220:37:63160:63160	987937	11					
ANR	1001553	ExpressionStatement	to = r_itv_end ( map -> itv )	7065:5:199204:199229	987937	0	True				
ANR	1001554	AssignmentExpression	to = r_itv_end ( map -> itv )		987937	0		=			
ANR	1001555	Identifier	to		987937	0					
ANR	1001556	CallExpression	r_itv_end ( map -> itv )		987937	1					
ANR	1001557	Callee	r_itv_end		987937	0					
ANR	1001558	Identifier	r_itv_end		987937	0					
ANR	1001559	ArgumentList	map -> itv		987937	1					
ANR	1001560	Argument	map -> itv		987937	0					
ANR	1001561	PtrMemberAccess	map -> itv		987937	0					
ANR	1001562	Identifier	map		987937	0					
ANR	1001563	Identifier	itv		987937	1					
ANR	1001564	ElseStatement	else		987937	0					
ANR	1001565	CompoundStatement		2223:10:63210:63210	987937	0					
ANR	1001566	ExpressionStatement	from = core -> offset	7068:4:199253:199272	987937	0	True				
ANR	1001567	AssignmentExpression	from = core -> offset		987937	0		=			
ANR	1001568	Identifier	from		987937	0					
ANR	1001569	PtrMemberAccess	core -> offset		987937	1					
ANR	1001570	Identifier	core		987937	0					
ANR	1001571	Identifier	offset		987937	1					
ANR	1001572	ExpressionStatement	to = from + core -> blocksize	7069:4:199278:199305	987937	1	True				
ANR	1001573	AssignmentExpression	to = from + core -> blocksize		987937	0		=			
ANR	1001574	Identifier	to		987937	0					
ANR	1001575	AdditiveExpression	from + core -> blocksize		987937	1		+			
ANR	1001576	Identifier	from		987937	0					
ANR	1001577	PtrMemberAccess	core -> blocksize		987937	1					
ANR	1001578	Identifier	core		987937	0					
ANR	1001579	Identifier	blocksize		987937	1					
ANR	1001580	IdentifierDeclStatement	"ut64 maxsize = r_config_get_i ( core -> config , ""zoom.maxsz"" ) ;"	7071:3:199315:199373	987937	4	True				
ANR	1001581	IdentifierDecl	"maxsize = r_config_get_i ( core -> config , ""zoom.maxsz"" )"		987937	0					
ANR	1001582	IdentifierDeclType	ut64		987937	0					
ANR	1001583	Identifier	maxsize		987937	1					
ANR	1001584	AssignmentExpression	"maxsize = r_config_get_i ( core -> config , ""zoom.maxsz"" )"		987937	2		=			
ANR	1001585	Identifier	maxsize		987937	0					
ANR	1001586	CallExpression	"r_config_get_i ( core -> config , ""zoom.maxsz"" )"		987937	1					
ANR	1001587	Callee	r_config_get_i		987937	0					
ANR	1001588	Identifier	r_config_get_i		987937	0					
ANR	1001589	ArgumentList	core -> config		987937	1					
ANR	1001590	Argument	core -> config		987937	0					
ANR	1001591	PtrMemberAccess	core -> config		987937	0					
ANR	1001592	Identifier	core		987937	0					
ANR	1001593	Identifier	config		987937	1					
ANR	1001594	Argument	"""zoom.maxsz"""		987937	1					
ANR	1001595	PrimaryExpression	"""zoom.maxsz"""		987937	0					
ANR	1001596	IdentifierDeclStatement	int oldva = core -> io -> va ;	7072:3:199378:199402	987937	5	True				
ANR	1001597	IdentifierDecl	oldva = core -> io -> va		987937	0					
ANR	1001598	IdentifierDeclType	int		987937	0					
ANR	1001599	Identifier	oldva		987937	1					
ANR	1001600	AssignmentExpression	oldva = core -> io -> va		987937	2		=			
ANR	1001601	Identifier	oldva		987937	0					
ANR	1001602	PtrMemberAccess	core -> io -> va		987937	1					
ANR	1001603	PtrMemberAccess	core -> io		987937	0					
ANR	1001604	Identifier	core		987937	0					
ANR	1001605	Identifier	io		987937	1					
ANR	1001606	Identifier	va		987937	1					
ANR	1001607	IdentifierDeclStatement	char * oldmode = NULL ;	7073:3:199407:199427	987937	6	True				
ANR	1001608	IdentifierDecl	* oldmode = NULL		987937	0					
ANR	1001609	IdentifierDeclType	char *		987937	0					
ANR	1001610	Identifier	oldmode		987937	1					
ANR	1001611	AssignmentExpression	* oldmode = NULL		987937	2		=			
ANR	1001612	Identifier	NULL		987937	0					
ANR	1001613	Identifier	NULL		987937	1					
ANR	1001614	IdentifierDeclStatement	bool do_zoom = true ;	7074:3:199432:199451	987937	7	True				
ANR	1001615	IdentifierDecl	do_zoom = true		987937	0					
ANR	1001616	IdentifierDeclType	bool		987937	0					
ANR	1001617	Identifier	do_zoom		987937	1					
ANR	1001618	AssignmentExpression	do_zoom = true		987937	2		=			
ANR	1001619	Identifier	true		987937	0					
ANR	1001620	Identifier	true		987937	1					
ANR	1001621	ExpressionStatement	core -> io -> va = 0	7076:3:199457:199473	987937	8	True				
ANR	1001622	AssignmentExpression	core -> io -> va = 0		987937	0		=			
ANR	1001623	PtrMemberAccess	core -> io -> va		987937	0					
ANR	1001624	PtrMemberAccess	core -> io		987937	0					
ANR	1001625	Identifier	core		987937	0					
ANR	1001626	Identifier	io		987937	1					
ANR	1001627	Identifier	va		987937	1					
ANR	1001628	PrimaryExpression	0		987937	1					
ANR	1001629	IfStatement	if ( input [ 1 ] && input [ 1 ] != ' ' )		987937	9					
ANR	1001630	Condition	input [ 1 ] && input [ 1 ] != ' '	7077:7:199482:199508	987937	0	True				
ANR	1001631	AndExpression	input [ 1 ] && input [ 1 ] != ' '		987937	0		&&			
ANR	1001632	ArrayIndexing	input [ 1 ]		987937	0					
ANR	1001633	Identifier	input		987937	0					
ANR	1001634	PrimaryExpression	1		987937	1					
ANR	1001635	EqualityExpression	input [ 1 ] != ' '		987937	1		!=			
ANR	1001636	ArrayIndexing	input [ 1 ]		987937	0					
ANR	1001637	Identifier	input		987937	0					
ANR	1001638	PrimaryExpression	1		987937	1					
ANR	1001639	PrimaryExpression	' '		987937	1					
ANR	1001640	CompoundStatement		2233:36:63474:63474	987937	1					
ANR	1001641	ExpressionStatement	"oldmode = strdup ( r_config_get ( core -> config , ""zoom.byte"" ) )"	7078:4:199517:199576	987937	0	True				
ANR	1001642	AssignmentExpression	"oldmode = strdup ( r_config_get ( core -> config , ""zoom.byte"" ) )"		987937	0		=			
ANR	1001643	Identifier	oldmode		987937	0					
ANR	1001644	CallExpression	"strdup ( r_config_get ( core -> config , ""zoom.byte"" ) )"		987937	1					
ANR	1001645	Callee	strdup		987937	0					
ANR	1001646	Identifier	strdup		987937	0					
ANR	1001647	ArgumentList	"r_config_get ( core -> config , ""zoom.byte"" )"		987937	1					
ANR	1001648	Argument	"r_config_get ( core -> config , ""zoom.byte"" )"		987937	0					
ANR	1001649	CallExpression	"r_config_get ( core -> config , ""zoom.byte"" )"		987937	0					
ANR	1001650	Callee	r_config_get		987937	0					
ANR	1001651	Identifier	r_config_get		987937	0					
ANR	1001652	ArgumentList	core -> config		987937	1					
ANR	1001653	Argument	core -> config		987937	0					
ANR	1001654	PtrMemberAccess	core -> config		987937	0					
ANR	1001655	Identifier	core		987937	0					
ANR	1001656	Identifier	config		987937	1					
ANR	1001657	Argument	"""zoom.byte"""		987937	1					
ANR	1001658	PrimaryExpression	"""zoom.byte"""		987937	0					
ANR	1001659	IfStatement	"if ( ! r_config_set ( core -> config , ""zoom.byte"" , input + 1 ) )"		987937	1					
ANR	1001660	Condition	"! r_config_set ( core -> config , ""zoom.byte"" , input + 1 )"	7079:8:199586:199637	987937	0	True				
ANR	1001661	UnaryOperationExpression	"! r_config_set ( core -> config , ""zoom.byte"" , input + 1 )"		987937	0					
ANR	1001662	UnaryOperator	!		987937	0					
ANR	1001663	CallExpression	"r_config_set ( core -> config , ""zoom.byte"" , input + 1 )"		987937	1					
ANR	1001664	Callee	r_config_set		987937	0					
ANR	1001665	Identifier	r_config_set		987937	0					
ANR	1001666	ArgumentList	core -> config		987937	1					
ANR	1001667	Argument	core -> config		987937	0					
ANR	1001668	PtrMemberAccess	core -> config		987937	0					
ANR	1001669	Identifier	core		987937	0					
ANR	1001670	Identifier	config		987937	1					
ANR	1001671	Argument	"""zoom.byte"""		987937	1					
ANR	1001672	PrimaryExpression	"""zoom.byte"""		987937	0					
ANR	1001673	Argument	input + 1		987937	2					
ANR	1001674	AdditiveExpression	input + 1		987937	0		+			
ANR	1001675	Identifier	input		987937	0					
ANR	1001676	PrimaryExpression	1		987937	1					
ANR	1001677	CompoundStatement		2235:62:63603:63603	987937	1					
ANR	1001678	ExpressionStatement	do_zoom = false	7080:5:199647:199662	987937	0	True				
ANR	1001679	AssignmentExpression	do_zoom = false		987937	0		=			
ANR	1001680	Identifier	do_zoom		987937	0					
ANR	1001681	Identifier	false		987937	1					
ANR	1001682	IfStatement	if ( do_zoom && l > 0 )		987937	10					
ANR	1001683	Condition	do_zoom && l > 0	7083:7:199682:199697	987937	0	True				
ANR	1001684	AndExpression	do_zoom && l > 0		987937	0		&&			
ANR	1001685	Identifier	do_zoom		987937	0					
ANR	1001686	RelationalExpression	l > 0		987937	1		>			
ANR	1001687	Identifier	l		987937	0					
ANR	1001688	PrimaryExpression	0		987937	1					
ANR	1001689	CompoundStatement		2239:25:63663:63663	987937	1					
ANR	1001690	ExpressionStatement	"r_print_zoom ( core -> print , core , printzoomcallback , from , to , l , ( int ) maxsize )"	7084:4:199706:199790	987937	0	True				
ANR	1001691	CallExpression	"r_print_zoom ( core -> print , core , printzoomcallback , from , to , l , ( int ) maxsize )"		987937	0					
ANR	1001692	Callee	r_print_zoom		987937	0					
ANR	1001693	Identifier	r_print_zoom		987937	0					
ANR	1001694	ArgumentList	core -> print		987937	1					
ANR	1001695	Argument	core -> print		987937	0					
ANR	1001696	PtrMemberAccess	core -> print		987937	0					
ANR	1001697	Identifier	core		987937	0					
ANR	1001698	Identifier	print		987937	1					
ANR	1001699	Argument	core		987937	1					
ANR	1001700	Identifier	core		987937	0					
ANR	1001701	Argument	printzoomcallback		987937	2					
ANR	1001702	Identifier	printzoomcallback		987937	0					
ANR	1001703	Argument	from		987937	3					
ANR	1001704	Identifier	from		987937	0					
ANR	1001705	Argument	to		987937	4					
ANR	1001706	Identifier	to		987937	0					
ANR	1001707	Argument	l		987937	5					
ANR	1001708	Identifier	l		987937	0					
ANR	1001709	Argument	( int ) maxsize		987937	6					
ANR	1001710	CastExpression	( int ) maxsize		987937	0					
ANR	1001711	CastTarget	int		987937	0					
ANR	1001712	Identifier	maxsize		987937	1					
ANR	1001713	IfStatement	if ( oldmode )		987937	11					
ANR	1001714	Condition	oldmode	7087:7:199804:199810	987937	0	True				
ANR	1001715	Identifier	oldmode		987937	0					
ANR	1001716	CompoundStatement		2243:16:63776:63776	987937	1					
ANR	1001717	ExpressionStatement	"r_config_set ( core -> config , ""zoom.byte"" , oldmode )"	7088:4:199819:199868	987937	0	True				
ANR	1001718	CallExpression	"r_config_set ( core -> config , ""zoom.byte"" , oldmode )"		987937	0					
ANR	1001719	Callee	r_config_set		987937	0					
ANR	1001720	Identifier	r_config_set		987937	0					
ANR	1001721	ArgumentList	core -> config		987937	1					
ANR	1001722	Argument	core -> config		987937	0					
ANR	1001723	PtrMemberAccess	core -> config		987937	0					
ANR	1001724	Identifier	core		987937	0					
ANR	1001725	Identifier	config		987937	1					
ANR	1001726	Argument	"""zoom.byte"""		987937	1					
ANR	1001727	PrimaryExpression	"""zoom.byte"""		987937	0					
ANR	1001728	Argument	oldmode		987937	2					
ANR	1001729	Identifier	oldmode		987937	0					
ANR	1001730	ExpressionStatement	core -> io -> va = oldva	7090:3:199878:199898	987937	12	True				
ANR	1001731	AssignmentExpression	core -> io -> va = oldva		987937	0		=			
ANR	1001732	PtrMemberAccess	core -> io -> va		987937	0					
ANR	1001733	PtrMemberAccess	core -> io		987937	0					
ANR	1001734	Identifier	core		987937	0					
ANR	1001735	Identifier	io		987937	1					
ANR	1001736	Identifier	va		987937	1					
ANR	1001737	Identifier	oldva		987937	1					
ANR	1001738	ExpressionStatement	R_FREE ( oldmode )	7091:3:199903:199919	987937	13	True				
ANR	1001739	CallExpression	R_FREE ( oldmode )		987937	0					
ANR	1001740	Callee	R_FREE		987937	0					
ANR	1001741	Identifier	R_FREE		987937	0					
ANR	1001742	ArgumentList	oldmode		987937	1					
ANR	1001743	Argument	oldmode		987937	0					
ANR	1001744	Identifier	oldmode		987937	0					
ANR	1001745	ExpressionStatement	r_list_free ( list )	7092:3:199924:199942	987937	14	True				
ANR	1001746	CallExpression	r_list_free ( list )		987937	0					
ANR	1001747	Callee	r_list_free		987937	0					
ANR	1001748	Identifier	r_list_free		987937	0					
ANR	1001749	ArgumentList	list		987937	1					
ANR	1001750	Argument	list		987937	0					
ANR	1001751	Identifier	list		987937	0					
ANR	1001752	BreakStatement	break ;	7094:2:199950:199955	987937	111	True				
ANR	1001753	Label	default :	7095:1:199958:199965	987937	112	True				
ANR	1001754	Identifier	default		987937	0					
ANR	1001755	ExpressionStatement	"r_core_cmd_help ( core , help_msg_p )"	7096:2:199969:200003	987937	113	True				
ANR	1001756	CallExpression	"r_core_cmd_help ( core , help_msg_p )"		987937	0					
ANR	1001757	Callee	r_core_cmd_help		987937	0					
ANR	1001758	Identifier	r_core_cmd_help		987937	0					
ANR	1001759	ArgumentList	core		987937	1					
ANR	1001760	Argument	core		987937	0					
ANR	1001761	Identifier	core		987937	0					
ANR	1001762	Argument	help_msg_p		987937	1					
ANR	1001763	Identifier	help_msg_p		987937	0					
ANR	1001764	BreakStatement	break ;	7097:2:200007:200012	987937	114	True				
ANR	1001765	Label	beach :	7099:0:200017:200022	987937	22	True				
ANR	1001766	Identifier	beach		987937	0					
ANR	1001767	IfStatement	if ( tmpseek != UT64_MAX )		987937	23					
ANR	1001768	Condition	tmpseek != UT64_MAX	7100:5:200029:200047	987937	0	True				
ANR	1001769	EqualityExpression	tmpseek != UT64_MAX		987937	0		!=			
ANR	1001770	Identifier	tmpseek		987937	0					
ANR	1001771	Identifier	UT64_MAX		987937	1					
ANR	1001772	CompoundStatement		2256:26:64013:64013	987937	1					
ANR	1001773	ExpressionStatement	"r_core_seek ( core , tmpseek , SEEK_SET )"	7101:2:200054:200091	987937	0	True				
ANR	1001774	CallExpression	"r_core_seek ( core , tmpseek , SEEK_SET )"		987937	0					
ANR	1001775	Callee	r_core_seek		987937	0					
ANR	1001776	Identifier	r_core_seek		987937	0					
ANR	1001777	ArgumentList	core		987937	1					
ANR	1001778	Argument	core		987937	0					
ANR	1001779	Identifier	core		987937	0					
ANR	1001780	Argument	tmpseek		987937	1					
ANR	1001781	Identifier	tmpseek		987937	0					
ANR	1001782	Argument	SEEK_SET		987937	2					
ANR	1001783	Identifier	SEEK_SET		987937	0					
ANR	1001784	ExpressionStatement	r_core_block_read ( core )	7102:2:200095:200119	987937	1	True				
ANR	1001785	CallExpression	r_core_block_read ( core )		987937	0					
ANR	1001786	Callee	r_core_block_read		987937	0					
ANR	1001787	Identifier	r_core_block_read		987937	0					
ANR	1001788	ArgumentList	core		987937	1					
ANR	1001789	Argument	core		987937	0					
ANR	1001790	Identifier	core		987937	0					
ANR	1001791	IfStatement	if ( tbs != core -> blocksize )		987937	24					
ANR	1001792	Condition	tbs != core -> blocksize	7104:5:200129:200150	987937	0	True				
ANR	1001793	EqualityExpression	tbs != core -> blocksize		987937	0		!=			
ANR	1001794	Identifier	tbs		987937	0					
ANR	1001795	PtrMemberAccess	core -> blocksize		987937	1					
ANR	1001796	Identifier	core		987937	0					
ANR	1001797	Identifier	blocksize		987937	1					
ANR	1001798	CompoundStatement		2260:29:64116:64116	987937	1					
ANR	1001799	ExpressionStatement	"r_core_block_size ( core , tbs )"	7105:2:200157:200186	987937	0	True				
ANR	1001800	CallExpression	"r_core_block_size ( core , tbs )"		987937	0					
ANR	1001801	Callee	r_core_block_size		987937	0					
ANR	1001802	Identifier	r_core_block_size		987937	0					
ANR	1001803	ArgumentList	core		987937	1					
ANR	1001804	Argument	core		987937	0					
ANR	1001805	Identifier	core		987937	0					
ANR	1001806	Argument	tbs		987937	1					
ANR	1001807	Identifier	tbs		987937	0					
ANR	1001808	ReturnStatement	return ret ;	7107:1:200192:200202	987937	25	True				
ANR	1001809	Identifier	ret		987937	0					
ANR	1001810	ReturnType	static int		987937	1					
ANR	1001811	Identifier	cmd_print		987937	2					
ANR	1001812	ParameterList	"void * data , const char * input"		987937	3					
ANR	1001813	Parameter	void * data	4845:21:136005:136014	987937	0	True				
ANR	1001814	ParameterType	void *		987937	0					
ANR	1001815	Identifier	data		987937	1					
ANR	1001816	Parameter	const char * input	4845:33:136017:136033	987937	1	True				
ANR	1001817	ParameterType	const char *		987937	0					
ANR	1001818	Identifier	input		987937	1					
ANR	1001819	CFGEntryNode	ENTRY		987937		True				
ANR	1001820	CFGExitNode	EXIT		987937		True				
ANR	1001821	Symbol	* core -> dbg -> h		987937						
ANR	1001822	Symbol	asmop		987937						
ANR	1001823	Symbol	* core -> assembler		987937						
ANR	1001824	Symbol	strncmp		987937						
ANR	1001825	Symbol	r_print_json_indent		987937						
ANR	1001826	Symbol	refi -> addr		987937						
ANR	1001827	Symbol	outlen		987937						
ANR	1001828	Symbol	f -> _size		987937						
ANR	1001829	Symbol	r_anal_op		987937						
ANR	1001830	Symbol	r_file_slurp		987937						
ANR	1001831	Symbol	core -> block		987937						
ANR	1001832	Symbol	block1		987937						
ANR	1001833	Symbol	core -> print -> big_endian		987937						
ANR	1001834	Symbol	core -> dbg -> h		987937						
ANR	1001835	Symbol	r_qrcode_gen		987937						
ANR	1001836	Symbol	r_str_utf16_encode		987937						
ANR	1001837	Symbol	* * * core		987937						
ANR	1001838	Symbol	at		987937						
ANR	1001839	Symbol	R_PRINT_FLAGS_REFS		987937						
ANR	1001840	Symbol	size		987937						
ANR	1001841	Symbol	hasnl		987937						
ANR	1001842	Symbol	* core		987937						
ANR	1001843	Symbol	rstr		987937						
ANR	1001844	Symbol	acode		987937						
ANR	1001845	Symbol	* f -> fcn_locs		987937						
ANR	1001846	Symbol	core -> fixedblock		987937						
ANR	1001847	Symbol	processed_cmd		987937						
ANR	1001848	Symbol	bs		987937						
ANR	1001849	Symbol	r_cons_is_breaked		987937						
ANR	1001850	Symbol	help_msg_p		987937						
ANR	1001851	Symbol	quiet		987937						
ANR	1001852	Symbol	r_config_set		987937						
ANR	1001853	Symbol	r_hex_str2bin		987937						
ANR	1001854	Symbol	help_msg_p_equal		987937						
ANR	1001855	Symbol	a		987937						
ANR	1001856	Symbol	b		987937						
ANR	1001857	Symbol	c		987937						
ANR	1001858	Symbol	e		987937						
ANR	1001859	Symbol	ch		987937						
ANR	1001860	Symbol	f		987937						
ANR	1001861	Symbol	core -> print -> cols		987937						
ANR	1001862	Symbol	h		987937						
ANR	1001863	Symbol	i		987937						
ANR	1001864	Symbol	j		987937						
ANR	1001865	Symbol	R_MIN		987937						
ANR	1001866	Symbol	k		987937						
ANR	1001867	Symbol	l		987937						
ANR	1001868	Symbol	n		987937						
ANR	1001869	Symbol	R_PRINT_STRING_ESC_NL		987937						
ANR	1001870	Symbol	p		987937						
ANR	1001871	Symbol	list -> head		987937						
ANR	1001872	Symbol	s		987937						
ANR	1001873	Symbol	tmp_func		987937						
ANR	1001874	Symbol	v		987937						
ANR	1001875	Symbol	w		987937						
ANR	1001876	Symbol	z		987937						
ANR	1001877	Symbol	pids		987937						
ANR	1001878	Symbol	* data		987937						
ANR	1001879	Symbol	* acode -> bytes		987937						
ANR	1001880	Symbol	locs_it -> n		987937						
ANR	1001881	Symbol	pj_string		987937						
ANR	1001882	Symbol	show_offset		987937						
ANR	1001883	Symbol	r_core_anal_op		987937						
ANR	1001884	Symbol	realloc		987937						
ANR	1001885	Symbol	fmt		987937						
ANR	1001886	Symbol	core -> print -> width		987937						
ANR	1001887	Symbol	strlen		987937						
ANR	1001888	Symbol	memcmp		987937						
ANR	1001889	Symbol	rel		987937						
ANR	1001890	Symbol	R_ANAL_FCN_TYPE_SYM		987937						
ANR	1001891	Symbol	r_core_anal_fcn_get_calls		987937						
ANR	1001892	Symbol	ea		987937						
ANR	1001893	Symbol	ret		987937						
ANR	1001894	Symbol	res		987937						
ANR	1001895	Symbol	prevaddr		987937						
ANR	1001896	Symbol	list		987937						
ANR	1001897	Symbol	r_str_escape		987937						
ANR	1001898	Symbol	piece		987937						
ANR	1001899	Symbol	strstr		987937						
ANR	1001900	Symbol	& start		987937						
ANR	1001901	Symbol	tmpseek		987937						
ANR	1001902	Symbol	R_ANAL_OP_MASK_ESIL		987937						
ANR	1001903	Symbol	r_anal_bb_from_offset		987937						
ANR	1001904	Symbol	origin		987937						
ANR	1001905	Symbol	foo		987937						
ANR	1001906	Symbol	fn		987937						
ANR	1001907	Symbol	r_print_randomart		987937						
ANR	1001908	Symbol	fs		987937						
ANR	1001909	Symbol	r_num_math		987937						
ANR	1001910	Symbol	offs		987937						
ANR	1001911	Symbol	f -> addr		987937						
ANR	1001912	Symbol	json		987937						
ANR	1001913	Symbol	sdb_fmt		987937						
ANR	1001914	Symbol	loc_buf		987937						
ANR	1001915	Symbol	f -> fcn_locs		987937						
ANR	1001916	Symbol	addrbytes		987937						
ANR	1001917	Symbol	tmp_get_contsize		987937						
ANR	1001918	Symbol	instr_len		987937						
ANR	1001919	Symbol	false		987937						
ANR	1001920	Symbol	r_core_getreloc		987937						
ANR	1001921	Symbol	R_PRINT_FLAGS_SPARSE		987937						
ANR	1001922	Symbol	~R_PRINT_FLAGS_OFFSET		987937						
ANR	1001923	Symbol	* block		987937						
ANR	1001924	Symbol	p -> colorfor		987937						
ANR	1001925	Symbol	r_anal_get_fcn_in		987937						
ANR	1001926	Symbol	pj_new		987937						
ANR	1001927	Symbol	hc		987937						
ANR	1001928	Symbol	strdup		987937						
ANR	1001929	Symbol	r_read_ble64		987937						
ANR	1001930	Symbol	bitness		987937						
ANR	1001931	Symbol	& outlen		987937						
ANR	1001932	Symbol	help_msg_ps		987937						
ANR	1001933	Symbol	R_ANAL_FCN_TYPE_FCN		987937						
ANR	1001934	Symbol	help_msg_pr		987937						
ANR	1001935	Symbol	help_msg_pd		987937						
ANR	1001936	Symbol	help_msg_pi		987937						
ANR	1001937	Symbol	help_msg_pj		987937						
ANR	1001938	Symbol	tmpblock		987937						
ANR	1001939	Symbol	* tmp_func		987937						
ANR	1001940	Symbol	help_msg_pa		987937						
ANR	1001941	Symbol	block		987937						
ANR	1001942	Symbol	* core -> block		987937						
ANR	1001943	Symbol	* * acode		987937						
ANR	1001944	Symbol	printOffset		987937						
ANR	1001945	Symbol	& aop . esil		987937						
ANR	1001946	Symbol	* map1		987937						
ANR	1001947	Symbol	& aop		987937						
ANR	1001948	Symbol	printed		987937						
ANR	1001949	Symbol	oseek		987937						
ANR	1001950	Symbol	R_ANAL_FCN_TYPE_ROOT		987937						
ANR	1001951	Symbol	f -> fcn_locs -> head		987937						
ANR	1001952	Symbol	cmd_print_blocks		987937						
ANR	1001953	Symbol	help_msg_p6		987937						
ANR	1001954	Symbol	maxsize		987937						
ANR	1001955	Symbol	& len		987937						
ANR	1001956	Symbol	printzoomcallback		987937						
ANR	1001957	Symbol	* rel -> import		987937						
ANR	1001958	Symbol	r_config_get		987937						
ANR	1001959	Symbol	Color_RESET		987937						
ANR	1001960	Symbol	core -> assembler		987937						
ANR	1001961	Symbol	fsz		987937						
ANR	1001962	Symbol	r_anal_fcn_realsize		987937						
ANR	1001963	Symbol	r_core_prevop_addr		987937						
ANR	1001964	Symbol	oldva		987937						
ANR	1001965	Symbol	r_read_ble32		987937						
ANR	1001966	Symbol	map		987937						
ANR	1001967	Symbol	help_msg_pxd		987937						
ANR	1001968	Symbol	malloc		987937						
ANR	1001969	Symbol	core -> anal -> bits		987937						
ANR	1001970	Symbol	linear		987937						
ANR	1001971	Symbol	R_STRBUF_SAFEGET		987937						
ANR	1001972	Symbol	r_print_stereogram		987937						
ANR	1001973	Symbol	r_sys_getdir		987937						
ANR	1001974	Symbol	r_read_ble16		987937						
ANR	1001975	Symbol	off		987937						
ANR	1001976	Symbol	use_blocksize		987937						
ANR	1001977	Symbol	x81		987937						
ANR	1001978	Symbol	x80		987937						
ANR	1001979	Symbol	x83		987937						
ANR	1001980	Symbol	* core -> anal		987937						
ANR	1001981	Symbol	x82		987937						
ANR	1001982	Symbol	x85		987937						
ANR	1001983	Symbol	x84		987937						
ANR	1001984	Symbol	x87		987937						
ANR	1001985	Symbol	x86		987937						
ANR	1001986	Symbol	x89		987937						
ANR	1001987	Symbol	x88		987937						
ANR	1001988	Symbol	help_msg_pt		987937						
ANR	1001989	Symbol	help_msg_px		987937						
ANR	1001990	Symbol	r_list_length		987937						
ANR	1001991	Symbol	help_msg_pz		987937						
ANR	1001992	Symbol	UT32_MAX		987937						
ANR	1001993	Symbol	bufsz		987937						
ANR	1001994	Symbol	help_msg_pxA		987937						
ANR	1001995	Symbol	* op		987937						
ANR	1001996	Symbol	emoji		987937						
ANR	1001997	Symbol	r_anal_fcn_size		987937						
ANR	1001998	Symbol	orig_bb_middle		987937						
ANR	1001999	Symbol	core -> num -> value		987937						
ANR	1002000	Symbol	pid		987937						
ANR	1002001	Symbol	x90		987937						
ANR	1002002	Symbol	* foo		987937						
ANR	1002003	Symbol	mode		987937						
ANR	1002004	Symbol	x92		987937						
ANR	1002005	Symbol	x91		987937						
ANR	1002006	Symbol	x94		987937						
ANR	1002007	Symbol	nowstr		987937						
ANR	1002008	Symbol	x93		987937						
ANR	1002009	Symbol	refi -> at		987937						
ANR	1002010	Symbol	x96		987937						
ANR	1002011	Symbol	x95		987937						
ANR	1002012	Symbol	x98		987937						
ANR	1002013	Symbol	x97		987937						
ANR	1002014	Symbol	x99		987937						
ANR	1002015	Symbol	oldmode		987937						
ANR	1002016	Symbol	x8a		987937						
ANR	1002017	Symbol	x8c		987937						
ANR	1002018	Symbol	NULL		987937						
ANR	1002019	Symbol	x8b		987937						
ANR	1002020	Symbol	x8e		987937						
ANR	1002021	Symbol	r_cons_get_size		987937						
ANR	1002022	Symbol	x8d		987937						
ANR	1002023	Symbol	core -> blocksize_max		987937						
ANR	1002024	Symbol	spc		987937						
ANR	1002025	Symbol	inConsumed		987937						
ANR	1002026	Symbol	x8f		987937						
ANR	1002027	Symbol	ocols		987937						
ANR	1002028	Symbol	rel -> symbol		987937						
ANR	1002029	Symbol	R_PRINT_FLAGS_COMMENT		987937						
ANR	1002030	Symbol	r_core_prevop_addr_force		987937						
ANR	1002031	Symbol	true		987937						
ANR	1002032	Symbol	x9b		987937						
ANR	1002033	Symbol	x9a		987937						
ANR	1002034	Symbol	x9d		987937						
ANR	1002035	Symbol	map -> itv		987937						
ANR	1002036	Symbol	* rel		987937						
ANR	1002037	Symbol	x9c		987937						
ANR	1002038	Symbol	dst		987937						
ANR	1002039	Symbol	x9f		987937						
ANR	1002040	Symbol	ns		987937						
ANR	1002041	Symbol	x9e		987937						
ANR	1002042	Symbol	r_sandbox_enable		987937						
ANR	1002043	Symbol	r_inflate		987937						
ANR	1002044	Symbol	b -> size		987937						
ANR	1002045	Symbol	fcn_size		987937						
ANR	1002046	Symbol	r_str_newf		987937						
ANR	1002047	Symbol	r_print_json_path		987937						
ANR	1002048	Symbol	* refi		987937						
ANR	1002049	Symbol	b -> addr		987937						
ANR	1002050	Symbol	aop . size		987937						
ANR	1002051	Symbol	R_PRINT_FLAGS_HEADER		987937						
ANR	1002052	Symbol	core -> config		987937						
ANR	1002053	Symbol	op		987937						
ANR	1002054	Symbol	r_io_p2v		987937						
ANR	1002055	Symbol	formatted_json		987937						
ANR	1002056	Symbol	iter1		987937						
ANR	1002057	Symbol	* rel -> symbol		987937						
ANR	1002058	Symbol	r_str_nlen		987937						
ANR	1002059	Symbol	* a		987937						
ANR	1002060	Symbol	* b		987937						
ANR	1002061	Symbol	rows		987937						
ANR	1002062	Symbol	* e		987937						
ANR	1002063	Symbol	* f		987937						
ANR	1002064	Symbol	R_PRINT_STRING_URLENCODE		987937						
ANR	1002065	Symbol	* i		987937						
ANR	1002066	Symbol	* j		987937						
ANR	1002067	Symbol	bytes		987937						
ANR	1002068	Symbol	saved_from		987937						
ANR	1002069	Symbol	pj		987937						
ANR	1002070	Symbol	* p		987937						
ANR	1002071	Symbol	rel -> import		987937						
ANR	1002072	Symbol	R_PRINT_STRING_WRAP		987937						
ANR	1002073	Symbol	* s		987937						
ANR	1002074	Symbol	bs1		987937						
ANR	1002075	Symbol	aop		987937						
ANR	1002076	Symbol	refi		987937						
ANR	1002077	Symbol	* map		987937						
ANR	1002078	Symbol	* input		987937						
ANR	1002079	Symbol	delta		987937						
ANR	1002080	Symbol	strchr		987937						
ANR	1002081	Symbol	core -> offset		987937						
ANR	1002082	Symbol	~R_PRINT_FLAGS_SPARSE		987937						
ANR	1002083	Symbol	rel -> symbol -> name		987937						
ANR	1002084	Symbol	len		987937						
ANR	1002085	Symbol	tmp_func -> addr		987937						
ANR	1002086	Symbol	help_msg_prg		987937						
ANR	1002087	Symbol	& inConsumed		987937						
ANR	1002088	Symbol	* core -> num		987937						
ANR	1002089	Symbol	core -> blocksize		987937						
ANR	1002090	Symbol	* to		987937						
ANR	1002091	Symbol	want		987937						
ANR	1002092	Symbol	malen		987937						
ANR	1002093	Symbol	str		987937						
ANR	1002094	Symbol	input		987937						
ANR	1002095	Symbol	r_config_get_i		987937						
ANR	1002096	Symbol	r_str_trim_ro		987937						
ANR	1002097	Symbol	* core -> dbg		987937						
ANR	1002098	Symbol	core -> print -> flags		987937						
ANR	1002099	Symbol	rs		987937						
ANR	1002100	Symbol	cmd_pxb_p		987937						
ANR	1002101	Symbol	f -> name		987937						
ANR	1002102	Symbol	cmd_pxb_k		987937						
ANR	1002103	Symbol	bsz		987937						
ANR	1002104	Symbol	offset0		987937						
ANR	1002105	Symbol	core -> anal		987937						
ANR	1002106	Symbol	~R_PRINT_FLAGS_NONHEX		987937						
ANR	1002107	Symbol	* locs_it		987937						
ANR	1002108	Symbol	core -> io		987937						
ANR	1002109	Symbol	r_config_hold_new		987937						
ANR	1002110	Symbol	arg		987937						
ANR	1002111	Symbol	sp		987937						
ANR	1002112	Symbol	xa0		987937						
ANR	1002113	Symbol	map1		987937						
ANR	1002114	Symbol	acode -> bytes		987937						
ANR	1002115	Symbol	sz		987937						
ANR	1002116	Symbol	core -> io -> addrbytes		987937						
ANR	1002117	Symbol	xa2		987937						
ANR	1002118	Symbol	xa1		987937						
ANR	1002119	Symbol	core -> flags		987937						
ANR	1002120	Symbol	xa4		987937						
ANR	1002121	Symbol	xa3		987937						
ANR	1002122	Symbol	xa6		987937						
ANR	1002123	Symbol	xa5		987937						
ANR	1002124	Symbol	xa8		987937						
ANR	1002125	Symbol	IS_DIGIT		987937						
ANR	1002126	Symbol	xa7		987937						
ANR	1002127	Symbol	r_itv_end		987937						
ANR	1002128	Symbol	cwd		987937						
ANR	1002129	Symbol	xa9		987937						
ANR	1002130	Symbol	buf		987937						
ANR	1002131	Symbol	* core -> print		987937						
ANR	1002132	Symbol	f -> offset		987937						
ANR	1002133	Symbol	refs		987937						
ANR	1002134	Symbol	& asmop . buf_asm		987937						
ANR	1002135	Symbol	asmop . size		987937						
ANR	1002136	Symbol	to		987937						
ANR	1002137	Symbol	r_flag_get_at		987937						
ANR	1002138	Symbol	oblock		987937						
ANR	1002139	Symbol	show_header		987937						
ANR	1002140	Symbol	core -> print -> pava		987937						
ANR	1002141	Symbol	IS_PRINTABLE		987937						
ANR	1002142	Symbol	xb1		987937						
ANR	1002143	Symbol	xb0		987937						
ANR	1002144	Symbol	xb3		987937						
ANR	1002145	Symbol	xb2		987937						
ANR	1002146	Symbol	xb5		987937						
ANR	1002147	Symbol	xb4		987937						
ANR	1002148	Symbol	xb7		987937						
ANR	1002149	Symbol	xb6		987937						
ANR	1002150	Symbol	xb9		987937						
ANR	1002151	Symbol	xb8		987937						
ANR	1002152	Symbol	ate		987937						
ANR	1002153	Symbol	xab		987937						
ANR	1002154	Symbol	xaa		987937						
ANR	1002155	Symbol	xad		987937						
ANR	1002156	Symbol	xac		987937						
ANR	1002157	Symbol	xaf		987937						
ANR	1002158	Symbol	xae		987937						
ANR	1002159	Symbol	R_CORE_MAX_DISASM		987937						
ANR	1002160	Symbol	ocomments		987937						
ANR	1002161	Symbol	r_print_stereogram_bytes		987937						
ANR	1002162	Symbol	* * f		987937						
ANR	1002163	Symbol	buf_size		987937						
ANR	1002164	Symbol	va		987937						
ANR	1002165	Symbol	findClassBounds		987937						
ANR	1002166	Symbol	xba		987937						
ANR	1002167	Symbol	colwidth		987937						
ANR	1002168	Symbol	xbc		987937						
ANR	1002169	Symbol	xbb		987937						
ANR	1002170	Symbol	xbe		987937						
ANR	1002171	Symbol	xbd		987937						
ANR	1002172	Symbol	idx		987937						
ANR	1002173	Symbol	xbf		987937						
ANR	1002174	Symbol	locs_it -> data		987937						
ANR	1002175	Symbol	calloc		987937						
ANR	1002176	Symbol	rel -> import -> name		987937						
ANR	1002177	Symbol	withref		987937						
ANR	1002178	Symbol	R_ANAL_OP_MASK_BASIC		987937						
ANR	1002179	Symbol	mylen		987937						
ANR	1002180	Symbol	pid -> path		987937						
ANR	1002181	Symbol	cols		987937						
ANR	1002182	Symbol	~R_PRINT_FLAGS_HEADER		987937						
ANR	1002183	Symbol	r_base64_decode		987937						
ANR	1002184	Symbol	start		987937						
ANR	1002185	Symbol	r_core_print_disasm		987937						
ANR	1002186	Symbol	* * rel		987937						
ANR	1002187	Symbol	& h		987937						
ANR	1002188	Symbol	* emoji		987937						
ANR	1002189	Symbol	* pid		987937						
ANR	1002190	Symbol	r_asm_disassemble		987937						
ANR	1002191	Symbol	* iter1		987937						
ANR	1002192	Symbol	base		987937						
ANR	1002193	Symbol	* * core -> dbg		987937						
ANR	1002194	Symbol	R_PRINT_STRING_ZEROEND		987937						
ANR	1002195	Symbol	* rstr		987937						
ANR	1002196	Symbol	iter1 -> data		987937						
ANR	1002197	Symbol	~R_PRINT_FLAGS_REFS		987937						
ANR	1002198	Symbol	val		987937						
ANR	1002199	Symbol	* buf		987937						
ANR	1002200	Symbol	dst2		987937						
ANR	1002201	Symbol	iter		987937						
ANR	1002202	Symbol	help_msg_pif		987937						
ANR	1002203	Symbol	core -> print -> user		987937						
ANR	1002204	Symbol	map1 -> itv . addr		987937						
ANR	1002205	Symbol	r_list_empty		987937						
ANR	1002206	Symbol	r_cons_canvas_new		987937						
ANR	1002207	Symbol	* arg		987937						
ANR	1002208	Symbol	core -> print -> use_comments		987937						
ANR	1002209	Symbol	R_PRINT_STRING_WIDE32		987937						
ANR	1002210	Symbol	R_PRINT_STRING_WIDE		987937						
ANR	1002211	Symbol	core -> assembler -> bits		987937						
ANR	1002212	Symbol	saved_to		987937						
ANR	1002213	Symbol	out		987937						
ANR	1002214	Symbol	* core -> offset		987937						
ANR	1002215	Symbol	* * p		987937						
ANR	1002216	Symbol	bitsize		987937						
ANR	1002217	Symbol	pd_result		987937						
ANR	1002218	Symbol	* list		987937						
ANR	1002219	Symbol	& asmop		987937						
ANR	1002220	Symbol	R_MAX		987937						
ANR	1002221	Symbol	r_core_get_boundaries_prot		987937						
ANR	1002222	Symbol	p -> user		987937						
ANR	1002223	Symbol	r_core_block_size		987937						
ANR	1002224	Symbol	data		987937						
ANR	1002225	Symbol	locs_it		987937						
ANR	1002226	Symbol	cont_size		987937						
ANR	1002227	Symbol	acode -> len		987937						
ANR	1002228	Symbol	R_PRINT_FLAGS_NONHEX		987937						
ANR	1002229	Symbol	core -> print -> hasrefs		987937						
ANR	1002230	Symbol	r_asm_massemble		987937						
ANR	1002231	Symbol	bbsum		987937						
ANR	1002232	Symbol	from		987937						
ANR	1002233	Symbol	hex_arg		987937						
ANR	1002234	Symbol	core -> num		987937						
ANR	1002235	Symbol	inverted		987937						
ANR	1002236	Symbol	map1 -> itv		987937						
ANR	1002237	Symbol	core -> io -> va		987937						
ANR	1002238	Symbol	core		987937						
ANR	1002239	Symbol	wordsize		987937						
ANR	1002240	Symbol	core -> print		987937						
ANR	1002241	Symbol	* acode		987937						
ANR	1002242	Symbol	tbs		987937						
ANR	1002243	Symbol	core -> dbg -> h -> pids		987937						
ANR	1002244	Symbol	help_msg_pdf		987937						
ANR	1002245	Symbol	* ++ arg		987937						
ANR	1002246	Symbol	do_zoom		987937						
ANR	1002247	Symbol	R_PRINT_FLAGS_OFFSET		987937						
ANR	1002248	Symbol	buf_len		987937						
ANR	1002249	Symbol	bw_disassemble		987937						
ANR	1002250	Symbol	UT64_MAX		987937						
ANR	1002251	Symbol	addr		987937						
ANR	1002252	Symbol	* * core		987937						
ANR	1002253	Symbol	saved_maxhits		987937						
ANR	1002254	Symbol	SEEK_SET		987937						
ANR	1002255	Symbol	pid -> pid		987937						
ANR	1002256	Symbol	r_core_pava		987937						
ANR	1002257	Symbol	* core -> io		987937						
ANR	1002258	Symbol	p -> big_endian		987937						
ANR	1002259	Symbol	r_strbuf_get		987937						
ANR	1002260	Symbol	op -> size		987937						
ANR	1002261	Symbol	core -> dbg		987937						
ANR	1002262	Function	cmd_hexdump	7110:0:200207:200300							
ANR	1002263	FunctionDef	"cmd_hexdump (void * data , const char * input)"		1002262	0					
ANR	1002264	CompoundStatement		7110:54:200261:200300	1002262	0					
ANR	1002265	ReturnStatement	"return cmd_print ( data , input - 1 ) ;"	7111:1:200264:200298	1002262	0	True				
ANR	1002266	CallExpression	"cmd_print ( data , input - 1 )"		1002262	0					
ANR	1002267	Callee	cmd_print		1002262	0					
ANR	1002268	Identifier	cmd_print		1002262	0					
ANR	1002269	ArgumentList	data		1002262	1					
ANR	1002270	Argument	data		1002262	0					
ANR	1002271	Identifier	data		1002262	0					
ANR	1002272	Argument	input - 1		1002262	1					
ANR	1002273	AdditiveExpression	input - 1		1002262	0		-			
ANR	1002274	Identifier	input		1002262	0					
ANR	1002275	PrimaryExpression	1		1002262	1					
ANR	1002276	ReturnType	static int		1002262	1					
ANR	1002277	Identifier	cmd_hexdump		1002262	2					
ANR	1002278	ParameterList	"void * data , const char * input"		1002262	3					
ANR	1002279	Parameter	void * data	7110:23:200230:200239	1002262	0	True				
ANR	1002280	ParameterType	void *		1002262	0					
ANR	1002281	Identifier	data		1002262	1					
ANR	1002282	Parameter	const char * input	7110:35:200242:200258	1002262	1	True				
ANR	1002283	ParameterType	const char *		1002262	0					
ANR	1002284	Identifier	input		1002262	1					
ANR	1002285	CFGEntryNode	ENTRY		1002262		True				
ANR	1002286	CFGExitNode	EXIT		1002262		True				
ANR	1002287	Symbol	input		1002262						
ANR	1002288	Symbol	data		1002262						
ANR	1002289	Symbol	cmd_print		1002262						
ANR	1002290	Function	lenof	7114:0:200303:200521							
ANR	1002291	FunctionDef	"lenof (ut64 off , int two)"		1002290	0					
ANR	1002292	CompoundStatement		7114:36:200339:200521	1002290	0					
ANR	1002293	IdentifierDeclStatement	char buf [ 64 ] ;	7115:1:200342:200354	1002290	0	True				
ANR	1002294	IdentifierDecl	buf [ 64 ]		1002290	0					
ANR	1002295	IdentifierDeclType	char [ 64 ]		1002290	0					
ANR	1002296	Identifier	buf		1002290	1					
ANR	1002297	PrimaryExpression	64		1002290	2					
ANR	1002298	ExpressionStatement	buf [ 0 ] = 0	7116:1:200357:200367	1002290	1	True				
ANR	1002299	AssignmentExpression	buf [ 0 ] = 0		1002290	0		=			
ANR	1002300	ArrayIndexing	buf [ 0 ]		1002290	0					
ANR	1002301	Identifier	buf		1002290	0					
ANR	1002302	PrimaryExpression	0		1002290	1					
ANR	1002303	PrimaryExpression	0		1002290	1					
ANR	1002304	IfStatement	if ( two )		1002290	2					
ANR	1002305	Condition	two	7117:5:200374:200376	1002290	0	True				
ANR	1002306	Identifier	two		1002290	0					
ANR	1002307	CompoundStatement		4:10:39:39	1002290	1					
ANR	1002308	Statement	snprintf	7118:2:200383:200390	1002290	0	True				
ANR	1002309	Statement	(	7118:11:200392:200392	1002290	1	True				
ANR	1002310	Statement	buf	7118:12:200393:200395	1002290	2	True				
ANR	1002311	Statement	","	7118:15:200396:200396	1002290	3	True				
ANR	1002312	Statement	sizeof	7118:17:200398:200403	1002290	4	True				
ANR	1002313	Statement	(	7118:24:200405:200405	1002290	5	True				
ANR	1002314	Statement	buf	7118:25:200406:200408	1002290	6	True				
ANR	1002315	Statement	)	7118:28:200409:200409	1002290	7	True				
ANR	1002316	Statement	","	7118:29:200410:200410	1002290	8	True				
ANR	1002317	Statement	"""+0x%"""	7118:31:200412:200417	1002290	9	True				
ANR	1002318	Statement	PFMT64x	7118:37:200418:200424	1002290	10	True				
ANR	1002319	Statement	","	7118:44:200425:200425	1002290	11	True				
ANR	1002320	Statement	off	7118:46:200427:200429	1002290	12	True				
ANR	1002321	Statement	)	7118:49:200430:200430	1002290	13	True				
ANR	1002322	ExpressionStatement		7118:50:200431:200431	1002290	14	True				
ANR	1002323	ElseStatement	else		1002290	0					
ANR	1002324	CompoundStatement		6:8:101:101	1002290	0					
ANR	1002325	Statement	snprintf	7120:2:200445:200452	1002290	0	True				
ANR	1002326	Statement	(	7120:11:200454:200454	1002290	1	True				
ANR	1002327	Statement	buf	7120:12:200455:200457	1002290	2	True				
ANR	1002328	Statement	","	7120:15:200458:200458	1002290	3	True				
ANR	1002329	Statement	sizeof	7120:17:200460:200465	1002290	4	True				
ANR	1002330	Statement	(	7120:24:200467:200467	1002290	5	True				
ANR	1002331	Statement	buf	7120:25:200468:200470	1002290	6	True				
ANR	1002332	Statement	)	7120:28:200471:200471	1002290	7	True				
ANR	1002333	Statement	","	7120:29:200472:200472	1002290	8	True				
ANR	1002334	Statement	"""0x%08"""	7120:31:200474:200480	1002290	9	True				
ANR	1002335	Statement	PFMT64x	7120:38:200481:200487	1002290	10	True				
ANR	1002336	Statement	","	7120:45:200488:200488	1002290	11	True				
ANR	1002337	Statement	off	7120:47:200490:200492	1002290	12	True				
ANR	1002338	Statement	)	7120:50:200493:200493	1002290	13	True				
ANR	1002339	ExpressionStatement		7120:51:200494:200494	1002290	14	True				
ANR	1002340	ReturnStatement	return strlen ( buf ) ;	7122:1:200500:200519	1002290	3	True				
ANR	1002341	CallExpression	strlen ( buf )		1002290	0					
ANR	1002342	Callee	strlen		1002290	0					
ANR	1002343	Identifier	strlen		1002290	0					
ANR	1002344	ArgumentList	buf		1002290	1					
ANR	1002345	Argument	buf		1002290	0					
ANR	1002346	Identifier	buf		1002290	0					
ANR	1002347	ReturnType	static int		1002290	1					
ANR	1002348	Identifier	lenof		1002290	2					
ANR	1002349	ParameterList	"ut64 off , int two"		1002290	3					
ANR	1002350	Parameter	ut64 off	7114:17:200320:200327	1002290	0	True				
ANR	1002351	ParameterType	ut64		1002290	0					
ANR	1002352	Identifier	off		1002290	1					
ANR	1002353	Parameter	int two	7114:27:200330:200336	1002290	1	True				
ANR	1002354	ParameterType	int		1002290	0					
ANR	1002355	Identifier	two		1002290	1					
ANR	1002356	CFGEntryNode	ENTRY		1002290		True				
ANR	1002357	CFGExitNode	EXIT		1002290		True				
ANR	1002358	Symbol	strlen		1002290						
ANR	1002359	Symbol	buf		1002290						
ANR	1002360	Symbol	* buf		1002290						
ANR	1002361	Symbol	two		1002290						
ANR	1002362	Symbol	off		1002290						
ANR	1002363	Function	r_print_offset_sg	7125:0:200524:203676							
ANR	1002364	FunctionDef	"r_print_offset_sg (RPrint * p , ut64 off , int invert , int offseg , int seggrn , int offdec , int delta , const char * label)"		1002363	0					
ANR	1002365	CompoundStatement		7125:128:200652:203676	1002363	0					
ANR	1002366	IdentifierDeclStatement	char space [ 32 ] = { 0 } ;	7126:1:200655:200680	1002363	0	True				
ANR	1002367	IdentifierDecl	space [ 32 ] = { 0 }		1002363	0					
ANR	1002368	IdentifierDeclType	char [ 32 ]		1002363	0					
ANR	1002369	Identifier	space		1002363	1					
ANR	1002370	PrimaryExpression	32		1002363	2					
ANR	1002371	AssignmentExpression	space [ 32 ] = { 0 }		1002363	3		=			
ANR	1002372	Identifier	space		1002363	0					
ANR	1002373	InitializerList	0		1002363	1					
ANR	1002374	PrimaryExpression	0		1002363	0					
ANR	1002375	IdentifierDeclStatement	const char * white ;	7129:1:200683:200700	1002363	1	True				
ANR	1002376	IdentifierDecl	* white		1002363	0					
ANR	1002377	IdentifierDeclType	const char *		1002363	0					
ANR	1002378	Identifier	white		1002363	1					
ANR	1002379	IdentifierDeclStatement	const char * reset = p -> resetbg ? Color_RESET : Color_RESET_NOBG ;	7130:1:200703:200764	1002363	2	True				
ANR	1002380	IdentifierDecl	* reset = p -> resetbg ? Color_RESET : Color_RESET_NOBG		1002363	0					
ANR	1002381	IdentifierDeclType	const char *		1002363	0					
ANR	1002382	Identifier	reset		1002363	1					
ANR	1002383	AssignmentExpression	* reset = p -> resetbg ? Color_RESET : Color_RESET_NOBG		1002363	2		=			
ANR	1002384	Identifier	reset		1002363	0					
ANR	1002385	ConditionalExpression	p -> resetbg ? Color_RESET : Color_RESET_NOBG		1002363	1					
ANR	1002386	Condition	p -> resetbg		1002363	0					
ANR	1002387	PtrMemberAccess	p -> resetbg		1002363	0					
ANR	1002388	Identifier	p		1002363	0					
ANR	1002389	Identifier	resetbg		1002363	1					
ANR	1002390	Identifier	Color_RESET		1002363	1					
ANR	1002391	Identifier	Color_RESET_NOBG		1002363	2					
ANR	1002392	IdentifierDeclStatement	bool show_color = p -> flags & R_PRINT_FLAGS_COLOR ;	7131:1:200767:200815	1002363	3	True				
ANR	1002393	IdentifierDecl	show_color = p -> flags & R_PRINT_FLAGS_COLOR		1002363	0					
ANR	1002394	IdentifierDeclType	bool		1002363	0					
ANR	1002395	Identifier	show_color		1002363	1					
ANR	1002396	AssignmentExpression	show_color = p -> flags & R_PRINT_FLAGS_COLOR		1002363	2		=			
ANR	1002397	Identifier	show_color		1002363	0					
ANR	1002398	BitAndExpression	p -> flags & R_PRINT_FLAGS_COLOR		1002363	1		&			
ANR	1002399	PtrMemberAccess	p -> flags		1002363	0					
ANR	1002400	Identifier	p		1002363	0					
ANR	1002401	Identifier	flags		1002363	1					
ANR	1002402	Identifier	R_PRINT_FLAGS_COLOR		1002363	1					
ANR	1002403	IfStatement	if ( show_color )		1002363	4					
ANR	1002404	Condition	show_color	7132:5:200822:200831	1002363	0	True				
ANR	1002405	Identifier	show_color		1002363	0					
ANR	1002406	CompoundStatement		11:2:293:351	1002363	1					
ANR	1002407	IdentifierDeclStatement	char rgbstr [ 32 ] ;	7133:2:200838:200853	1002363	0	True				
ANR	1002408	IdentifierDecl	rgbstr [ 32 ]		1002363	0					
ANR	1002409	IdentifierDeclType	char [ 32 ]		1002363	0					
ANR	1002410	Identifier	rgbstr		1002363	1					
ANR	1002411	PrimaryExpression	32		1002363	2					
ANR	1002412	IdentifierDeclStatement	const char * k = r_cons_singleton ( ) -> context -> pal . offset ;	7134:2:200857:200913	1002363	1	True				
ANR	1002413	IdentifierDecl	* k = r_cons_singleton ( ) -> context -> pal . offset		1002363	0					
ANR	1002414	IdentifierDeclType	const char *		1002363	0					
ANR	1002415	Identifier	k		1002363	1					
ANR	1002416	AssignmentExpression	* k = r_cons_singleton ( ) -> context -> pal . offset		1002363	2		=			
ANR	1002417	Identifier	k		1002363	0					
ANR	1002418	MemberAccess	r_cons_singleton ( ) -> context -> pal . offset		1002363	1					
ANR	1002419	PtrMemberAccess	r_cons_singleton ( ) -> context -> pal		1002363	0					
ANR	1002420	PtrMemberAccess	r_cons_singleton ( ) -> context		1002363	0					
ANR	1002421	CallExpression	r_cons_singleton ( )		1002363	0					
ANR	1002422	Callee	r_cons_singleton		1002363	0					
ANR	1002423	Identifier	r_cons_singleton		1002363	0					
ANR	1002424	ArgumentList			1002363	1					
ANR	1002425	Identifier	context		1002363	1					
ANR	1002426	Identifier	pal		1002363	1					
ANR	1002427	Identifier	offset		1002363	1					
ANR	1002428	IdentifierDeclStatement	"const char * inv = invert ? R_CONS_INVERT ( true , true ) : """" ;"	7135:2:200946:201004	1002363	2	True				
ANR	1002429	IdentifierDecl	"* inv = invert ? R_CONS_INVERT ( true , true ) : """""		1002363	0					
ANR	1002430	IdentifierDeclType	const char *		1002363	0					
ANR	1002431	Identifier	inv		1002363	1					
ANR	1002432	AssignmentExpression	"* inv = invert ? R_CONS_INVERT ( true , true ) : """""		1002363	2		=			
ANR	1002433	Identifier	inv		1002363	0					
ANR	1002434	ConditionalExpression	"invert ? R_CONS_INVERT ( true , true ) : """""		1002363	1					
ANR	1002435	Condition	invert		1002363	0					
ANR	1002436	Identifier	invert		1002363	0					
ANR	1002437	CallExpression	"R_CONS_INVERT ( true , true )"		1002363	1					
ANR	1002438	Callee	R_CONS_INVERT		1002363	0					
ANR	1002439	Identifier	R_CONS_INVERT		1002363	0					
ANR	1002440	ArgumentList	true		1002363	1					
ANR	1002441	Argument	true		1002363	0					
ANR	1002442	Identifier	true		1002363	0					
ANR	1002443	Argument	true		1002363	1					
ANR	1002444	Identifier	true		1002363	0					
ANR	1002445	PrimaryExpression	""""""		1002363	2					
ANR	1002446	IfStatement	if ( p -> flags & R_PRINT_FLAGS_RAINBOW )		1002363	3					
ANR	1002447	Condition	p -> flags & R_PRINT_FLAGS_RAINBOW	7136:6:201012:201043	1002363	0	True				
ANR	1002448	BitAndExpression	p -> flags & R_PRINT_FLAGS_RAINBOW		1002363	0		&			
ANR	1002449	PtrMemberAccess	p -> flags		1002363	0					
ANR	1002450	Identifier	p		1002363	0					
ANR	1002451	Identifier	flags		1002363	1					
ANR	1002452	Identifier	R_PRINT_FLAGS_RAINBOW		1002363	1					
ANR	1002453	CompoundStatement		12:40:393:393	1002363	1					
ANR	1002454	ExpressionStatement	"k = r_cons_rgb_str_off ( rgbstr , sizeof ( rgbstr ) , off )"	7137:3:201051:201104	1002363	0	True				
ANR	1002455	AssignmentExpression	"k = r_cons_rgb_str_off ( rgbstr , sizeof ( rgbstr ) , off )"		1002363	0		=			
ANR	1002456	Identifier	k		1002363	0					
ANR	1002457	CallExpression	"r_cons_rgb_str_off ( rgbstr , sizeof ( rgbstr ) , off )"		1002363	1					
ANR	1002458	Callee	r_cons_rgb_str_off		1002363	0					
ANR	1002459	Identifier	r_cons_rgb_str_off		1002363	0					
ANR	1002460	ArgumentList	rgbstr		1002363	1					
ANR	1002461	Argument	rgbstr		1002363	0					
ANR	1002462	Identifier	rgbstr		1002363	0					
ANR	1002463	Argument	sizeof ( rgbstr )		1002363	1					
ANR	1002464	SizeofExpression	sizeof ( rgbstr )		1002363	0					
ANR	1002465	Sizeof	sizeof		1002363	0					
ANR	1002466	SizeofOperand	rgbstr		1002363	1					
ANR	1002467	Argument	off		1002363	2					
ANR	1002468	Identifier	off		1002363	0					
ANR	1002469	IfStatement	if ( offseg )		1002363	4					
ANR	1002470	Condition	offseg	7139:6:201116:201121	1002363	0	True				
ANR	1002471	Identifier	offseg		1002363	0					
ANR	1002472	CompoundStatement		16:3:476:485	1002363	1					
ANR	1002473	IdentifierDeclStatement	"ut32 s , a ;"	7140:3:201129:201138	1002363	0	True				
ANR	1002474	IdentifierDecl	s		1002363	0					
ANR	1002475	IdentifierDeclType	ut32		1002363	0					
ANR	1002476	Identifier	s		1002363	1					
ANR	1002477	IdentifierDecl	a		1002363	1					
ANR	1002478	IdentifierDeclType	ut32		1002363	0					
ANR	1002479	Identifier	a		1002363	1					
ANR	1002480	ExpressionStatement	a = off & 0xffff	7141:3:201143:201159	1002363	1	True				
ANR	1002481	AssignmentExpression	a = off & 0xffff		1002363	0		=			
ANR	1002482	Identifier	a		1002363	0					
ANR	1002483	BitAndExpression	off & 0xffff		1002363	1		&			
ANR	1002484	Identifier	off		1002363	0					
ANR	1002485	PrimaryExpression	0xffff		1002363	1					
ANR	1002486	ExpressionStatement	s = ( off - a ) >> seggrn	7142:3:201164:201187	1002363	2	True				
ANR	1002487	AssignmentExpression	s = ( off - a ) >> seggrn		1002363	0		=			
ANR	1002488	Identifier	s		1002363	0					
ANR	1002489	ShiftExpression	( off - a ) >> seggrn		1002363	1		>>			
ANR	1002490	AdditiveExpression	off - a		1002363	0		-			
ANR	1002491	Identifier	off		1002363	0					
ANR	1002492	Identifier	a		1002363	1					
ANR	1002493	Identifier	seggrn		1002363	1					
ANR	1002494	IfStatement	if ( offdec )		1002363	3					
ANR	1002495	Condition	offdec	7143:7:201196:201201	1002363	0	True				
ANR	1002496	Identifier	offdec		1002363	0					
ANR	1002497	CompoundStatement		19:15:551:551	1002363	1					
ANR	1002498	ExpressionStatement	"snprintf ( space , sizeof ( space ) , ""%d:%d"" , s & 0xffff , a & 0xffff )"	7144:4:201210:201275	1002363	0	True				
ANR	1002499	CallExpression	"snprintf ( space , sizeof ( space ) , ""%d:%d"" , s & 0xffff , a & 0xffff )"		1002363	0					
ANR	1002500	Callee	snprintf		1002363	0					
ANR	1002501	Identifier	snprintf		1002363	0					
ANR	1002502	ArgumentList	space		1002363	1					
ANR	1002503	Argument	space		1002363	0					
ANR	1002504	Identifier	space		1002363	0					
ANR	1002505	Argument	sizeof ( space )		1002363	1					
ANR	1002506	SizeofExpression	sizeof ( space )		1002363	0					
ANR	1002507	Sizeof	sizeof		1002363	0					
ANR	1002508	SizeofOperand	space		1002363	1					
ANR	1002509	Argument	"""%d:%d"""		1002363	2					
ANR	1002510	PrimaryExpression	"""%d:%d"""		1002363	0					
ANR	1002511	Argument	s & 0xffff		1002363	3					
ANR	1002512	BitAndExpression	s & 0xffff		1002363	0		&			
ANR	1002513	Identifier	s		1002363	0					
ANR	1002514	PrimaryExpression	0xffff		1002363	1					
ANR	1002515	Argument	a & 0xffff		1002363	4					
ANR	1002516	BitAndExpression	a & 0xffff		1002363	0		&			
ANR	1002517	Identifier	a		1002363	0					
ANR	1002518	PrimaryExpression	0xffff		1002363	1					
ANR	1002519	ExpressionStatement	"white = r_str_pad ( ' ' , 9 - strlen ( space ) )"	7145:4:201281:201324	1002363	1	True				
ANR	1002520	AssignmentExpression	"white = r_str_pad ( ' ' , 9 - strlen ( space ) )"		1002363	0		=			
ANR	1002521	Identifier	white		1002363	0					
ANR	1002522	CallExpression	"r_str_pad ( ' ' , 9 - strlen ( space ) )"		1002363	1					
ANR	1002523	Callee	r_str_pad		1002363	0					
ANR	1002524	Identifier	r_str_pad		1002363	0					
ANR	1002525	ArgumentList	' '		1002363	1					
ANR	1002526	Argument	' '		1002363	0					
ANR	1002527	PrimaryExpression	' '		1002363	0					
ANR	1002528	Argument	9 - strlen ( space )		1002363	1					
ANR	1002529	AdditiveExpression	9 - strlen ( space )		1002363	0		-			
ANR	1002530	PrimaryExpression	9		1002363	0					
ANR	1002531	CallExpression	strlen ( space )		1002363	1					
ANR	1002532	Callee	strlen		1002363	0					
ANR	1002533	Identifier	strlen		1002363	0					
ANR	1002534	ArgumentList	space		1002363	1					
ANR	1002535	Argument	space		1002363	0					
ANR	1002536	Identifier	space		1002363	0					
ANR	1002537	ExpressionStatement	"r_cons_printf ( ""%s%s%s%s%s"" , k , inv , white , space , reset )"	7146:4:201330:201387	1002363	2	True				
ANR	1002538	CallExpression	"r_cons_printf ( ""%s%s%s%s%s"" , k , inv , white , space , reset )"		1002363	0					
ANR	1002539	Callee	r_cons_printf		1002363	0					
ANR	1002540	Identifier	r_cons_printf		1002363	0					
ANR	1002541	ArgumentList	"""%s%s%s%s%s"""		1002363	1					
ANR	1002542	Argument	"""%s%s%s%s%s"""		1002363	0					
ANR	1002543	PrimaryExpression	"""%s%s%s%s%s"""		1002363	0					
ANR	1002544	Argument	k		1002363	1					
ANR	1002545	Identifier	k		1002363	0					
ANR	1002546	Argument	inv		1002363	2					
ANR	1002547	Identifier	inv		1002363	0					
ANR	1002548	Argument	white		1002363	3					
ANR	1002549	Identifier	white		1002363	0					
ANR	1002550	Argument	space		1002363	4					
ANR	1002551	Identifier	space		1002363	0					
ANR	1002552	Argument	reset		1002363	5					
ANR	1002553	Identifier	reset		1002363	0					
ANR	1002554	ElseStatement	else		1002363	0					
ANR	1002555	CompoundStatement		23:10:746:746	1002363	0					
ANR	1002556	ExpressionStatement	"r_cons_printf ( ""%s%s%04x:%04x%s"" , k , inv , s & 0xFFFF , a & 0xFFFF , reset )"	7148:4:201405:201477	1002363	0	True				
ANR	1002557	CallExpression	"r_cons_printf ( ""%s%s%04x:%04x%s"" , k , inv , s & 0xFFFF , a & 0xFFFF , reset )"		1002363	0					
ANR	1002558	Callee	r_cons_printf		1002363	0					
ANR	1002559	Identifier	r_cons_printf		1002363	0					
ANR	1002560	ArgumentList	"""%s%s%04x:%04x%s"""		1002363	1					
ANR	1002561	Argument	"""%s%s%04x:%04x%s"""		1002363	0					
ANR	1002562	PrimaryExpression	"""%s%s%04x:%04x%s"""		1002363	0					
ANR	1002563	Argument	k		1002363	1					
ANR	1002564	Identifier	k		1002363	0					
ANR	1002565	Argument	inv		1002363	2					
ANR	1002566	Identifier	inv		1002363	0					
ANR	1002567	Argument	s & 0xFFFF		1002363	3					
ANR	1002568	BitAndExpression	s & 0xFFFF		1002363	0		&			
ANR	1002569	Identifier	s		1002363	0					
ANR	1002570	PrimaryExpression	0xFFFF		1002363	1					
ANR	1002571	Argument	a & 0xFFFF		1002363	4					
ANR	1002572	BitAndExpression	a & 0xFFFF		1002363	0		&			
ANR	1002573	Identifier	a		1002363	0					
ANR	1002574	PrimaryExpression	0xFFFF		1002363	1					
ANR	1002575	Argument	reset		1002363	5					
ANR	1002576	Identifier	reset		1002363	0					
ANR	1002577	ElseStatement	else		1002363	0					
ANR	1002578	CompoundStatement		28:3:873:899	1002363	0					
ANR	1002579	IdentifierDeclStatement	"int sz = lenof ( off , 0 ) ;"	7151:3:201498:201521	1002363	0	True				
ANR	1002580	IdentifierDecl	"sz = lenof ( off , 0 )"		1002363	0					
ANR	1002581	IdentifierDeclType	int		1002363	0					
ANR	1002582	Identifier	sz		1002363	1					
ANR	1002583	AssignmentExpression	"sz = lenof ( off , 0 )"		1002363	2		=			
ANR	1002584	Identifier	sz		1002363	0					
ANR	1002585	CallExpression	"lenof ( off , 0 )"		1002363	1					
ANR	1002586	Callee	lenof		1002363	0					
ANR	1002587	Identifier	lenof		1002363	0					
ANR	1002588	ArgumentList	off		1002363	1					
ANR	1002589	Argument	off		1002363	0					
ANR	1002590	Identifier	off		1002363	0					
ANR	1002591	Argument	0		1002363	1					
ANR	1002592	PrimaryExpression	0		1002363	0					
ANR	1002593	IdentifierDeclStatement	"int sz2 = lenof ( delta , 1 ) ;"	7152:3:201526:201552	1002363	1	True				
ANR	1002594	IdentifierDecl	"sz2 = lenof ( delta , 1 )"		1002363	0					
ANR	1002595	IdentifierDeclType	int		1002363	0					
ANR	1002596	Identifier	sz2		1002363	1					
ANR	1002597	AssignmentExpression	"sz2 = lenof ( delta , 1 )"		1002363	2		=			
ANR	1002598	Identifier	sz2		1002363	0					
ANR	1002599	CallExpression	"lenof ( delta , 1 )"		1002363	1					
ANR	1002600	Callee	lenof		1002363	0					
ANR	1002601	Identifier	lenof		1002363	0					
ANR	1002602	ArgumentList	delta		1002363	1					
ANR	1002603	Argument	delta		1002363	0					
ANR	1002604	Identifier	delta		1002363	0					
ANR	1002605	Argument	1		1002363	1					
ANR	1002606	PrimaryExpression	1		1002363	0					
ANR	1002607	IfStatement	if ( delta > 0 || label )		1002363	2					
ANR	1002608	Condition	delta > 0 || label	7153:7:201561:201578	1002363	0	True				
ANR	1002609	OrExpression	delta > 0 || label		1002363	0		||			
ANR	1002610	RelationalExpression	delta > 0		1002363	0		>			
ANR	1002611	Identifier	delta		1002363	0					
ANR	1002612	PrimaryExpression	0		1002363	1					
ANR	1002613	Identifier	label		1002363	1					
ANR	1002614	CompoundStatement		29:27:928:928	1002363	1					
ANR	1002615	IfStatement	if ( label )		1002363	0					
ANR	1002616	Condition	label	7154:8:201591:201595	1002363	0	True				
ANR	1002617	Identifier	label		1002363	0					
ANR	1002618	CompoundStatement		31:5:952:980	1002363	1					
ANR	1002619	IdentifierDeclStatement	const int label_padding = 10 ;	7155:5:201605:201633	1002363	0	True				
ANR	1002620	IdentifierDecl	label_padding = 10		1002363	0					
ANR	1002621	IdentifierDeclType	const int		1002363	0					
ANR	1002622	Identifier	label_padding		1002363	1					
ANR	1002623	AssignmentExpression	label_padding = 10		1002363	2		=			
ANR	1002624	Identifier	label_padding		1002363	0					
ANR	1002625	PrimaryExpression	10		1002363	1					
ANR	1002626	IfStatement	if ( delta > 0 )		1002363	1					
ANR	1002627	Condition	delta > 0	7156:9:201644:201652	1002363	0	True				
ANR	1002628	RelationalExpression	delta > 0		1002363	0		>			
ANR	1002629	Identifier	delta		1002363	0					
ANR	1002630	PrimaryExpression	0		1002363	1					
ANR	1002631	CompoundStatement		32:20:1002:1002	1002363	1					
ANR	1002632	IfStatement	if ( offdec )		1002363	0					
ANR	1002633	Condition	offdec	7157:10:201667:201672	1002363	0	True				
ANR	1002634	Identifier	offdec		1002363	0					
ANR	1002635	CompoundStatement		34:7:1031:1090	1002363	1					
ANR	1002636	IdentifierDeclStatement	"const char * pad = r_str_pad ( ' ' , sz - sz2 + label_padding ) ;"	7158:7:201684:201743	1002363	0	True				
ANR	1002637	IdentifierDecl	"* pad = r_str_pad ( ' ' , sz - sz2 + label_padding )"		1002363	0					
ANR	1002638	IdentifierDeclType	const char *		1002363	0					
ANR	1002639	Identifier	pad		1002363	1					
ANR	1002640	AssignmentExpression	"* pad = r_str_pad ( ' ' , sz - sz2 + label_padding )"		1002363	2		=			
ANR	1002641	Identifier	pad		1002363	0					
ANR	1002642	CallExpression	"r_str_pad ( ' ' , sz - sz2 + label_padding )"		1002363	1					
ANR	1002643	Callee	r_str_pad		1002363	0					
ANR	1002644	Identifier	r_str_pad		1002363	0					
ANR	1002645	ArgumentList	' '		1002363	1					
ANR	1002646	Argument	' '		1002363	0					
ANR	1002647	PrimaryExpression	' '		1002363	0					
ANR	1002648	Argument	sz - sz2 + label_padding		1002363	1					
ANR	1002649	AdditiveExpression	sz - sz2 + label_padding		1002363	0		-			
ANR	1002650	Identifier	sz		1002363	0					
ANR	1002651	AdditiveExpression	sz2 + label_padding		1002363	1		+			
ANR	1002652	Identifier	sz2		1002363	0					
ANR	1002653	Identifier	label_padding		1002363	1					
ANR	1002654	ExpressionStatement	"r_cons_printf ( ""%s%s%s%s+%d%s"" , k , inv , label , reset , delta , pad )"	7159:7:201752:201817	1002363	1	True				
ANR	1002655	CallExpression	"r_cons_printf ( ""%s%s%s%s+%d%s"" , k , inv , label , reset , delta , pad )"		1002363	0					
ANR	1002656	Callee	r_cons_printf		1002363	0					
ANR	1002657	Identifier	r_cons_printf		1002363	0					
ANR	1002658	ArgumentList	"""%s%s%s%s+%d%s"""		1002363	1					
ANR	1002659	Argument	"""%s%s%s%s+%d%s"""		1002363	0					
ANR	1002660	PrimaryExpression	"""%s%s%s%s+%d%s"""		1002363	0					
ANR	1002661	Argument	k		1002363	1					
ANR	1002662	Identifier	k		1002363	0					
ANR	1002663	Argument	inv		1002363	2					
ANR	1002664	Identifier	inv		1002363	0					
ANR	1002665	Argument	label		1002363	3					
ANR	1002666	Identifier	label		1002363	0					
ANR	1002667	Argument	reset		1002363	4					
ANR	1002668	Identifier	reset		1002363	0					
ANR	1002669	Argument	delta		1002363	5					
ANR	1002670	Identifier	delta		1002363	0					
ANR	1002671	Argument	pad		1002363	6					
ANR	1002672	Identifier	pad		1002363	0					
ANR	1002673	ElseStatement	else		1002363	0					
ANR	1002674	CompoundStatement		37:7:1188:1247	1002363	0					
ANR	1002675	IdentifierDeclStatement	"const char * pad = r_str_pad ( ' ' , sz - sz2 + label_padding ) ;"	7161:7:201841:201900	1002363	0	True				
ANR	1002676	IdentifierDecl	"* pad = r_str_pad ( ' ' , sz - sz2 + label_padding )"		1002363	0					
ANR	1002677	IdentifierDeclType	const char *		1002363	0					
ANR	1002678	Identifier	pad		1002363	1					
ANR	1002679	AssignmentExpression	"* pad = r_str_pad ( ' ' , sz - sz2 + label_padding )"		1002363	2		=			
ANR	1002680	Identifier	pad		1002363	0					
ANR	1002681	CallExpression	"r_str_pad ( ' ' , sz - sz2 + label_padding )"		1002363	1					
ANR	1002682	Callee	r_str_pad		1002363	0					
ANR	1002683	Identifier	r_str_pad		1002363	0					
ANR	1002684	ArgumentList	' '		1002363	1					
ANR	1002685	Argument	' '		1002363	0					
ANR	1002686	PrimaryExpression	' '		1002363	0					
ANR	1002687	Argument	sz - sz2 + label_padding		1002363	1					
ANR	1002688	AdditiveExpression	sz - sz2 + label_padding		1002363	0		-			
ANR	1002689	Identifier	sz		1002363	0					
ANR	1002690	AdditiveExpression	sz2 + label_padding		1002363	1		+			
ANR	1002691	Identifier	sz2		1002363	0					
ANR	1002692	Identifier	label_padding		1002363	1					
ANR	1002693	ExpressionStatement	"r_cons_printf ( ""%s%s%s%s+0x%x%s"" , k , inv , label , reset , delta , pad )"	7162:7:201909:201976	1002363	1	True				
ANR	1002694	CallExpression	"r_cons_printf ( ""%s%s%s%s+0x%x%s"" , k , inv , label , reset , delta , pad )"		1002363	0					
ANR	1002695	Callee	r_cons_printf		1002363	0					
ANR	1002696	Identifier	r_cons_printf		1002363	0					
ANR	1002697	ArgumentList	"""%s%s%s%s+0x%x%s"""		1002363	1					
ANR	1002698	Argument	"""%s%s%s%s+0x%x%s"""		1002363	0					
ANR	1002699	PrimaryExpression	"""%s%s%s%s+0x%x%s"""		1002363	0					
ANR	1002700	Argument	k		1002363	1					
ANR	1002701	Identifier	k		1002363	0					
ANR	1002702	Argument	inv		1002363	2					
ANR	1002703	Identifier	inv		1002363	0					
ANR	1002704	Argument	label		1002363	3					
ANR	1002705	Identifier	label		1002363	0					
ANR	1002706	Argument	reset		1002363	4					
ANR	1002707	Identifier	reset		1002363	0					
ANR	1002708	Argument	delta		1002363	5					
ANR	1002709	Identifier	delta		1002363	0					
ANR	1002710	Argument	pad		1002363	6					
ANR	1002711	Identifier	pad		1002363	0					
ANR	1002712	ElseStatement	else		1002363	0					
ANR	1002713	CompoundStatement		41:6:1353:1406	1002363	0					
ANR	1002714	IdentifierDeclStatement	"const char * pad = r_str_pad ( ' ' , sz + label_padding ) ;"	7165:6:202006:202059	1002363	0	True				
ANR	1002715	IdentifierDecl	"* pad = r_str_pad ( ' ' , sz + label_padding )"		1002363	0					
ANR	1002716	IdentifierDeclType	const char *		1002363	0					
ANR	1002717	Identifier	pad		1002363	1					
ANR	1002718	AssignmentExpression	"* pad = r_str_pad ( ' ' , sz + label_padding )"		1002363	2		=			
ANR	1002719	Identifier	pad		1002363	0					
ANR	1002720	CallExpression	"r_str_pad ( ' ' , sz + label_padding )"		1002363	1					
ANR	1002721	Callee	r_str_pad		1002363	0					
ANR	1002722	Identifier	r_str_pad		1002363	0					
ANR	1002723	ArgumentList	' '		1002363	1					
ANR	1002724	Argument	' '		1002363	0					
ANR	1002725	PrimaryExpression	' '		1002363	0					
ANR	1002726	Argument	sz + label_padding		1002363	1					
ANR	1002727	AdditiveExpression	sz + label_padding		1002363	0		+			
ANR	1002728	Identifier	sz		1002363	0					
ANR	1002729	Identifier	label_padding		1002363	1					
ANR	1002730	ExpressionStatement	"r_cons_printf ( ""%s%s%s%s%s"" , k , inv , label , reset , pad )"	7166:6:202067:202122	1002363	1	True				
ANR	1002731	CallExpression	"r_cons_printf ( ""%s%s%s%s%s"" , k , inv , label , reset , pad )"		1002363	0					
ANR	1002732	Callee	r_cons_printf		1002363	0					
ANR	1002733	Identifier	r_cons_printf		1002363	0					
ANR	1002734	ArgumentList	"""%s%s%s%s%s"""		1002363	1					
ANR	1002735	Argument	"""%s%s%s%s%s"""		1002363	0					
ANR	1002736	PrimaryExpression	"""%s%s%s%s%s"""		1002363	0					
ANR	1002737	Argument	k		1002363	1					
ANR	1002738	Identifier	k		1002363	0					
ANR	1002739	Argument	inv		1002363	2					
ANR	1002740	Identifier	inv		1002363	0					
ANR	1002741	Argument	label		1002363	3					
ANR	1002742	Identifier	label		1002363	0					
ANR	1002743	Argument	reset		1002363	4					
ANR	1002744	Identifier	reset		1002363	0					
ANR	1002745	Argument	pad		1002363	5					
ANR	1002746	Identifier	pad		1002363	0					
ANR	1002747	ElseStatement	else		1002363	0					
ANR	1002748	CompoundStatement		45:5:1496:1539	1002363	0					
ANR	1002749	IdentifierDeclStatement	"const char * pad = r_str_pad ( ' ' , sz - sz2 ) ;"	7169:5:202149:202192	1002363	0	True				
ANR	1002750	IdentifierDecl	"* pad = r_str_pad ( ' ' , sz - sz2 )"		1002363	0					
ANR	1002751	IdentifierDeclType	const char *		1002363	0					
ANR	1002752	Identifier	pad		1002363	1					
ANR	1002753	AssignmentExpression	"* pad = r_str_pad ( ' ' , sz - sz2 )"		1002363	2		=			
ANR	1002754	Identifier	pad		1002363	0					
ANR	1002755	CallExpression	"r_str_pad ( ' ' , sz - sz2 )"		1002363	1					
ANR	1002756	Callee	r_str_pad		1002363	0					
ANR	1002757	Identifier	r_str_pad		1002363	0					
ANR	1002758	ArgumentList	' '		1002363	1					
ANR	1002759	Argument	' '		1002363	0					
ANR	1002760	PrimaryExpression	' '		1002363	0					
ANR	1002761	Argument	sz - sz2		1002363	1					
ANR	1002762	AdditiveExpression	sz - sz2		1002363	0		-			
ANR	1002763	Identifier	sz		1002363	0					
ANR	1002764	Identifier	sz2		1002363	1					
ANR	1002765	IfStatement	if ( offdec )		1002363	1					
ANR	1002766	Condition	offdec	7170:9:202203:202208	1002363	0	True				
ANR	1002767	Identifier	offdec		1002363	0					
ANR	1002768	CompoundStatement		46:17:1558:1558	1002363	1					
ANR	1002769	ExpressionStatement	"r_cons_printf ( ""%s+%d%s"" , pad , delta , reset )"	7171:6:202219:202263	1002363	0	True				
ANR	1002770	CallExpression	"r_cons_printf ( ""%s+%d%s"" , pad , delta , reset )"		1002363	0					
ANR	1002771	Callee	r_cons_printf		1002363	0					
ANR	1002772	Identifier	r_cons_printf		1002363	0					
ANR	1002773	ArgumentList	"""%s+%d%s"""		1002363	1					
ANR	1002774	Argument	"""%s+%d%s"""		1002363	0					
ANR	1002775	PrimaryExpression	"""%s+%d%s"""		1002363	0					
ANR	1002776	Argument	pad		1002363	1					
ANR	1002777	Identifier	pad		1002363	0					
ANR	1002778	Argument	delta		1002363	2					
ANR	1002779	Identifier	delta		1002363	0					
ANR	1002780	Argument	reset		1002363	3					
ANR	1002781	Identifier	reset		1002363	0					
ANR	1002782	ElseStatement	else		1002363	0					
ANR	1002783	CompoundStatement		48:12:1624:1624	1002363	0					
ANR	1002784	ExpressionStatement	"r_cons_printf ( ""%s+0x%x%s"" , pad , delta , reset )"	7173:6:202285:202331	1002363	0	True				
ANR	1002785	CallExpression	"r_cons_printf ( ""%s+0x%x%s"" , pad , delta , reset )"		1002363	0					
ANR	1002786	Callee	r_cons_printf		1002363	0					
ANR	1002787	Identifier	r_cons_printf		1002363	0					
ANR	1002788	ArgumentList	"""%s+0x%x%s"""		1002363	1					
ANR	1002789	Argument	"""%s+0x%x%s"""		1002363	0					
ANR	1002790	PrimaryExpression	"""%s+0x%x%s"""		1002363	0					
ANR	1002791	Argument	pad		1002363	1					
ANR	1002792	Identifier	pad		1002363	0					
ANR	1002793	Argument	delta		1002363	2					
ANR	1002794	Identifier	delta		1002363	0					
ANR	1002795	Argument	reset		1002363	3					
ANR	1002796	Identifier	reset		1002363	0					
ANR	1002797	ElseStatement	else		1002363	0					
ANR	1002798	CompoundStatement		52:10:1703:1703	1002363	0					
ANR	1002799	IfStatement	if ( offdec )		1002363	0					
ANR	1002800	Condition	offdec	7177:8:202366:202371	1002363	0	True				
ANR	1002801	Identifier	offdec		1002363	0					
ANR	1002802	CompoundStatement		53:16:1721:1721	1002363	1					
ANR	1002803	Statement	snprintf	7178:5:202381:202388	1002363	0	True				
ANR	1002804	Statement	(	7178:14:202390:202390	1002363	1	True				
ANR	1002805	Statement	space	7178:15:202391:202395	1002363	2	True				
ANR	1002806	Statement	","	7178:20:202396:202396	1002363	3	True				
ANR	1002807	Statement	sizeof	7178:22:202398:202403	1002363	4	True				
ANR	1002808	Statement	(	7178:29:202405:202405	1002363	5	True				
ANR	1002809	Statement	space	7178:30:202406:202410	1002363	6	True				
ANR	1002810	Statement	)	7178:35:202411:202411	1002363	7	True				
ANR	1002811	Statement	","	7178:36:202412:202412	1002363	8	True				
ANR	1002812	Statement	"""%"""	7178:38:202414:202416	1002363	9	True				
ANR	1002813	Statement	PFMT64u	7178:41:202417:202423	1002363	10	True				
ANR	1002814	Statement	","	7178:48:202424:202424	1002363	11	True				
ANR	1002815	Statement	off	7178:50:202426:202428	1002363	12	True				
ANR	1002816	Statement	)	7178:53:202429:202429	1002363	13	True				
ANR	1002817	ExpressionStatement		7178:54:202430:202430	1002363	14	True				
ANR	1002818	ExpressionStatement	"white = r_str_pad ( ' ' , 10 - strlen ( space ) )"	7179:5:202437:202481	1002363	15	True				
ANR	1002819	AssignmentExpression	"white = r_str_pad ( ' ' , 10 - strlen ( space ) )"		1002363	0		=			
ANR	1002820	Identifier	white		1002363	0					
ANR	1002821	CallExpression	"r_str_pad ( ' ' , 10 - strlen ( space ) )"		1002363	1					
ANR	1002822	Callee	r_str_pad		1002363	0					
ANR	1002823	Identifier	r_str_pad		1002363	0					
ANR	1002824	ArgumentList	' '		1002363	1					
ANR	1002825	Argument	' '		1002363	0					
ANR	1002826	PrimaryExpression	' '		1002363	0					
ANR	1002827	Argument	10 - strlen ( space )		1002363	1					
ANR	1002828	AdditiveExpression	10 - strlen ( space )		1002363	0		-			
ANR	1002829	PrimaryExpression	10		1002363	0					
ANR	1002830	CallExpression	strlen ( space )		1002363	1					
ANR	1002831	Callee	strlen		1002363	0					
ANR	1002832	Identifier	strlen		1002363	0					
ANR	1002833	ArgumentList	space		1002363	1					
ANR	1002834	Argument	space		1002363	0					
ANR	1002835	Identifier	space		1002363	0					
ANR	1002836	ExpressionStatement	"r_cons_printf ( ""%s%s%s%s%s"" , k , inv , white , space , reset )"	7180:5:202488:202545	1002363	16	True				
ANR	1002837	CallExpression	"r_cons_printf ( ""%s%s%s%s%s"" , k , inv , white , space , reset )"		1002363	0					
ANR	1002838	Callee	r_cons_printf		1002363	0					
ANR	1002839	Identifier	r_cons_printf		1002363	0					
ANR	1002840	ArgumentList	"""%s%s%s%s%s"""		1002363	1					
ANR	1002841	Argument	"""%s%s%s%s%s"""		1002363	0					
ANR	1002842	PrimaryExpression	"""%s%s%s%s%s"""		1002363	0					
ANR	1002843	Argument	k		1002363	1					
ANR	1002844	Identifier	k		1002363	0					
ANR	1002845	Argument	inv		1002363	2					
ANR	1002846	Identifier	inv		1002363	0					
ANR	1002847	Argument	white		1002363	3					
ANR	1002848	Identifier	white		1002363	0					
ANR	1002849	Argument	space		1002363	4					
ANR	1002850	Identifier	space		1002363	0					
ANR	1002851	Argument	reset		1002363	5					
ANR	1002852	Identifier	reset		1002363	0					
ANR	1002853	ElseStatement	else		1002363	0					
ANR	1002854	CompoundStatement		57:11:1905:1905	1002363	0					
ANR	1002855	IfStatement	if ( p -> wide_offsets )		1002363	0					
ANR	1002856	Condition	p -> wide_offsets	7182:9:202569:202583	1002363	0	True				
ANR	1002857	PtrMemberAccess	p -> wide_offsets		1002363	0					
ANR	1002858	Identifier	p		1002363	0					
ANR	1002859	Identifier	wide_offsets		1002363	1					
ANR	1002860	CompoundStatement		58:26:1933:1933	1002363	1					
ANR	1002861	Statement	r_cons_printf	7183:6:202594:202606	1002363	0	True				
ANR	1002862	Statement	(	7183:20:202608:202608	1002363	1	True				
ANR	1002863	Statement	"""%s%s0x%016"""	7183:21:202609:202620	1002363	2	True				
ANR	1002864	Statement	PFMT64x	7183:33:202621:202627	1002363	3	True				
ANR	1002865	Statement	"""%s"""	7183:41:202629:202632	1002363	4	True				
ANR	1002866	Statement	","	7183:45:202633:202633	1002363	5	True				
ANR	1002867	Statement	k	7183:47:202635:202635	1002363	6	True				
ANR	1002868	Statement	","	7183:48:202636:202636	1002363	7	True				
ANR	1002869	Statement	inv	7183:50:202638:202640	1002363	8	True				
ANR	1002870	Statement	","	7183:53:202641:202641	1002363	9	True				
ANR	1002871	Statement	off	7183:55:202643:202645	1002363	10	True				
ANR	1002872	Statement	","	7183:58:202646:202646	1002363	11	True				
ANR	1002873	Statement	reset	7183:60:202648:202652	1002363	12	True				
ANR	1002874	Statement	)	7183:65:202653:202653	1002363	13	True				
ANR	1002875	ExpressionStatement		7183:66:202654:202654	1002363	14	True				
ANR	1002876	ElseStatement	else		1002363	0					
ANR	1002877	CompoundStatement		60:12:2015:2015	1002363	0					
ANR	1002878	Statement	r_cons_printf	7185:6:202676:202688	1002363	0	True				
ANR	1002879	Statement	(	7185:20:202690:202690	1002363	1	True				
ANR	1002880	Statement	"""%s%s0x%08"""	7185:21:202691:202701	1002363	2	True				
ANR	1002881	Statement	PFMT64x	7185:32:202702:202708	1002363	3	True				
ANR	1002882	Statement	"""%s"""	7185:40:202710:202713	1002363	4	True				
ANR	1002883	Statement	","	7185:44:202714:202714	1002363	5	True				
ANR	1002884	Statement	k	7185:46:202716:202716	1002363	6	True				
ANR	1002885	Statement	","	7185:47:202717:202717	1002363	7	True				
ANR	1002886	Statement	inv	7185:49:202719:202721	1002363	8	True				
ANR	1002887	Statement	","	7185:52:202722:202722	1002363	9	True				
ANR	1002888	Statement	off	7185:54:202724:202726	1002363	10	True				
ANR	1002889	Statement	","	7185:57:202727:202727	1002363	11	True				
ANR	1002890	Statement	reset	7185:59:202729:202733	1002363	12	True				
ANR	1002891	Statement	)	7185:64:202734:202734	1002363	13	True				
ANR	1002892	ExpressionStatement		7185:65:202735:202735	1002363	14	True				
ANR	1002893	ExpressionStatement	"r_cons_print ( "" "" )"	7190:2:202761:202779	1002363	5	True				
ANR	1002894	CallExpression	"r_cons_print ( "" "" )"		1002363	0					
ANR	1002895	Callee	r_cons_print		1002363	0					
ANR	1002896	Identifier	r_cons_print		1002363	0					
ANR	1002897	ArgumentList	""" """		1002363	1					
ANR	1002898	Argument	""" """		1002363	0					
ANR	1002899	PrimaryExpression	""" """		1002363	0					
ANR	1002900	ElseStatement	else		1002363	0					
ANR	1002901	CompoundStatement		67:8:2136:2136	1002363	0					
ANR	1002902	IfStatement	if ( offseg )		1002363	0					
ANR	1002903	Condition	offseg	7192:6:202797:202802	1002363	0	True				
ANR	1002904	Identifier	offseg		1002363	0					
ANR	1002905	CompoundStatement		69:3:2157:2166	1002363	1					
ANR	1002906	IdentifierDeclStatement	"ut32 s , a ;"	7193:3:202810:202819	1002363	0	True				
ANR	1002907	IdentifierDecl	s		1002363	0					
ANR	1002908	IdentifierDeclType	ut32		1002363	0					
ANR	1002909	Identifier	s		1002363	1					
ANR	1002910	IdentifierDecl	a		1002363	1					
ANR	1002911	IdentifierDeclType	ut32		1002363	0					
ANR	1002912	Identifier	a		1002363	1					
ANR	1002913	ExpressionStatement	a = off & 0xffff	7194:3:202824:202840	1002363	1	True				
ANR	1002914	AssignmentExpression	a = off & 0xffff		1002363	0		=			
ANR	1002915	Identifier	a		1002363	0					
ANR	1002916	BitAndExpression	off & 0xffff		1002363	1		&			
ANR	1002917	Identifier	off		1002363	0					
ANR	1002918	PrimaryExpression	0xffff		1002363	1					
ANR	1002919	ExpressionStatement	s = ( off - a ) >> seggrn	7195:3:202845:202868	1002363	2	True				
ANR	1002920	AssignmentExpression	s = ( off - a ) >> seggrn		1002363	0		=			
ANR	1002921	Identifier	s		1002363	0					
ANR	1002922	ShiftExpression	( off - a ) >> seggrn		1002363	1		>>			
ANR	1002923	AdditiveExpression	off - a		1002363	0		-			
ANR	1002924	Identifier	off		1002363	0					
ANR	1002925	Identifier	a		1002363	1					
ANR	1002926	Identifier	seggrn		1002363	1					
ANR	1002927	IfStatement	if ( offdec )		1002363	3					
ANR	1002928	Condition	offdec	7196:7:202877:202882	1002363	0	True				
ANR	1002929	Identifier	offdec		1002363	0					
ANR	1002930	CompoundStatement		72:15:2232:2232	1002363	1					
ANR	1002931	ExpressionStatement	"snprintf ( space , sizeof ( space ) , ""%d:%d"" , s & 0xffff , a & 0xffff )"	7197:4:202891:202956	1002363	0	True				
ANR	1002932	CallExpression	"snprintf ( space , sizeof ( space ) , ""%d:%d"" , s & 0xffff , a & 0xffff )"		1002363	0					
ANR	1002933	Callee	snprintf		1002363	0					
ANR	1002934	Identifier	snprintf		1002363	0					
ANR	1002935	ArgumentList	space		1002363	1					
ANR	1002936	Argument	space		1002363	0					
ANR	1002937	Identifier	space		1002363	0					
ANR	1002938	Argument	sizeof ( space )		1002363	1					
ANR	1002939	SizeofExpression	sizeof ( space )		1002363	0					
ANR	1002940	Sizeof	sizeof		1002363	0					
ANR	1002941	SizeofOperand	space		1002363	1					
ANR	1002942	Argument	"""%d:%d"""		1002363	2					
ANR	1002943	PrimaryExpression	"""%d:%d"""		1002363	0					
ANR	1002944	Argument	s & 0xffff		1002363	3					
ANR	1002945	BitAndExpression	s & 0xffff		1002363	0		&			
ANR	1002946	Identifier	s		1002363	0					
ANR	1002947	PrimaryExpression	0xffff		1002363	1					
ANR	1002948	Argument	a & 0xffff		1002363	4					
ANR	1002949	BitAndExpression	a & 0xffff		1002363	0		&			
ANR	1002950	Identifier	a		1002363	0					
ANR	1002951	PrimaryExpression	0xffff		1002363	1					
ANR	1002952	ExpressionStatement	"white = r_str_pad ( ' ' , 9 - strlen ( space ) )"	7198:4:202962:203005	1002363	1	True				
ANR	1002953	AssignmentExpression	"white = r_str_pad ( ' ' , 9 - strlen ( space ) )"		1002363	0		=			
ANR	1002954	Identifier	white		1002363	0					
ANR	1002955	CallExpression	"r_str_pad ( ' ' , 9 - strlen ( space ) )"		1002363	1					
ANR	1002956	Callee	r_str_pad		1002363	0					
ANR	1002957	Identifier	r_str_pad		1002363	0					
ANR	1002958	ArgumentList	' '		1002363	1					
ANR	1002959	Argument	' '		1002363	0					
ANR	1002960	PrimaryExpression	' '		1002363	0					
ANR	1002961	Argument	9 - strlen ( space )		1002363	1					
ANR	1002962	AdditiveExpression	9 - strlen ( space )		1002363	0		-			
ANR	1002963	PrimaryExpression	9		1002363	0					
ANR	1002964	CallExpression	strlen ( space )		1002363	1					
ANR	1002965	Callee	strlen		1002363	0					
ANR	1002966	Identifier	strlen		1002363	0					
ANR	1002967	ArgumentList	space		1002363	1					
ANR	1002968	Argument	space		1002363	0					
ANR	1002969	Identifier	space		1002363	0					
ANR	1002970	ExpressionStatement	"r_cons_printf ( ""%s%s%s"" , white , space , reset )"	7199:4:203011:203056	1002363	2	True				
ANR	1002971	CallExpression	"r_cons_printf ( ""%s%s%s"" , white , space , reset )"		1002363	0					
ANR	1002972	Callee	r_cons_printf		1002363	0					
ANR	1002973	Identifier	r_cons_printf		1002363	0					
ANR	1002974	ArgumentList	"""%s%s%s"""		1002363	1					
ANR	1002975	Argument	"""%s%s%s"""		1002363	0					
ANR	1002976	PrimaryExpression	"""%s%s%s"""		1002363	0					
ANR	1002977	Argument	white		1002363	1					
ANR	1002978	Identifier	white		1002363	0					
ANR	1002979	Argument	space		1002363	2					
ANR	1002980	Identifier	space		1002363	0					
ANR	1002981	Argument	reset		1002363	3					
ANR	1002982	Identifier	reset		1002363	0					
ANR	1002983	ElseStatement	else		1002363	0					
ANR	1002984	CompoundStatement		76:10:2415:2415	1002363	0					
ANR	1002985	ExpressionStatement	"r_cons_printf ( ""%04x:%04x"" , s & 0xFFFF , a & 0xFFFF )"	7201:4:203074:203125	1002363	0	True				
ANR	1002986	CallExpression	"r_cons_printf ( ""%04x:%04x"" , s & 0xFFFF , a & 0xFFFF )"		1002363	0					
ANR	1002987	Callee	r_cons_printf		1002363	0					
ANR	1002988	Identifier	r_cons_printf		1002363	0					
ANR	1002989	ArgumentList	"""%04x:%04x"""		1002363	1					
ANR	1002990	Argument	"""%04x:%04x"""		1002363	0					
ANR	1002991	PrimaryExpression	"""%04x:%04x"""		1002363	0					
ANR	1002992	Argument	s & 0xFFFF		1002363	1					
ANR	1002993	BitAndExpression	s & 0xFFFF		1002363	0		&			
ANR	1002994	Identifier	s		1002363	0					
ANR	1002995	PrimaryExpression	0xFFFF		1002363	1					
ANR	1002996	Argument	a & 0xFFFF		1002363	2					
ANR	1002997	BitAndExpression	a & 0xFFFF		1002363	0		&			
ANR	1002998	Identifier	a		1002363	0					
ANR	1002999	PrimaryExpression	0xFFFF		1002363	1					
ANR	1003000	ElseStatement	else		1002363	0					
ANR	1003001	CompoundStatement		82:3:2552:2603	1002363	0					
ANR	1003002	IdentifierDeclStatement	"int sz = lenof ( off , 0 ) ;"	7204:3:203146:203169	1002363	0	True				
ANR	1003003	IdentifierDecl	"sz = lenof ( off , 0 )"		1002363	0					
ANR	1003004	IdentifierDeclType	int		1002363	0					
ANR	1003005	Identifier	sz		1002363	1					
ANR	1003006	AssignmentExpression	"sz = lenof ( off , 0 )"		1002363	2		=			
ANR	1003007	Identifier	sz		1002363	0					
ANR	1003008	CallExpression	"lenof ( off , 0 )"		1002363	1					
ANR	1003009	Callee	lenof		1002363	0					
ANR	1003010	Identifier	lenof		1002363	0					
ANR	1003011	ArgumentList	off		1002363	1					
ANR	1003012	Argument	off		1002363	0					
ANR	1003013	Identifier	off		1002363	0					
ANR	1003014	Argument	0		1002363	1					
ANR	1003015	PrimaryExpression	0		1002363	0					
ANR	1003016	IdentifierDeclStatement	"int sz2 = lenof ( delta , 1 ) ;"	7205:3:203174:203200	1002363	1	True				
ANR	1003017	IdentifierDecl	"sz2 = lenof ( delta , 1 )"		1002363	0					
ANR	1003018	IdentifierDeclType	int		1002363	0					
ANR	1003019	Identifier	sz2		1002363	1					
ANR	1003020	AssignmentExpression	"sz2 = lenof ( delta , 1 )"		1002363	2		=			
ANR	1003021	Identifier	sz2		1002363	0					
ANR	1003022	CallExpression	"lenof ( delta , 1 )"		1002363	1					
ANR	1003023	Callee	lenof		1002363	0					
ANR	1003024	Identifier	lenof		1002363	0					
ANR	1003025	ArgumentList	delta		1002363	1					
ANR	1003026	Argument	delta		1002363	0					
ANR	1003027	Identifier	delta		1002363	0					
ANR	1003028	Argument	1		1002363	1					
ANR	1003029	PrimaryExpression	1		1002363	0					
ANR	1003030	IdentifierDeclStatement	"const char * pad = r_str_pad ( ' ' , sz - 5 - sz2 - 3 ) ;"	7206:3:203205:203256	1002363	2	True				
ANR	1003031	IdentifierDecl	"* pad = r_str_pad ( ' ' , sz - 5 - sz2 - 3 )"		1002363	0					
ANR	1003032	IdentifierDeclType	const char *		1002363	0					
ANR	1003033	Identifier	pad		1002363	1					
ANR	1003034	AssignmentExpression	"* pad = r_str_pad ( ' ' , sz - 5 - sz2 - 3 )"		1002363	2		=			
ANR	1003035	Identifier	pad		1002363	0					
ANR	1003036	CallExpression	"r_str_pad ( ' ' , sz - 5 - sz2 - 3 )"		1002363	1					
ANR	1003037	Callee	r_str_pad		1002363	0					
ANR	1003038	Identifier	r_str_pad		1002363	0					
ANR	1003039	ArgumentList	' '		1002363	1					
ANR	1003040	Argument	' '		1002363	0					
ANR	1003041	PrimaryExpression	' '		1002363	0					
ANR	1003042	Argument	sz - 5 - sz2 - 3		1002363	1					
ANR	1003043	AdditiveExpression	sz - 5 - sz2 - 3		1002363	0		-			
ANR	1003044	Identifier	sz		1002363	0					
ANR	1003045	AdditiveExpression	5 - sz2 - 3		1002363	1		-			
ANR	1003046	PrimaryExpression	5		1002363	0					
ANR	1003047	AdditiveExpression	sz2 - 3		1002363	1		-			
ANR	1003048	Identifier	sz2		1002363	0					
ANR	1003049	PrimaryExpression	3		1002363	1					
ANR	1003050	IfStatement	if ( delta > 0 )		1002363	3					
ANR	1003051	Condition	delta > 0	7207:7:203265:203273	1002363	0	True				
ANR	1003052	RelationalExpression	delta > 0		1002363	0		>			
ANR	1003053	Identifier	delta		1002363	0					
ANR	1003054	PrimaryExpression	0		1002363	1					
ANR	1003055	CompoundStatement		83:18:2623:2623	1002363	1					
ANR	1003056	IfStatement	if ( offdec )		1002363	0					
ANR	1003057	Condition	offdec	7208:8:203286:203291	1002363	0	True				
ANR	1003058	Identifier	offdec		1002363	0					
ANR	1003059	CompoundStatement		84:16:2641:2641	1002363	1					
ANR	1003060	ExpressionStatement	"r_cons_printf ( ""%s+%d%s"" , pad , delta , reset )"	7209:5:203301:203345	1002363	0	True				
ANR	1003061	CallExpression	"r_cons_printf ( ""%s+%d%s"" , pad , delta , reset )"		1002363	0					
ANR	1003062	Callee	r_cons_printf		1002363	0					
ANR	1003063	Identifier	r_cons_printf		1002363	0					
ANR	1003064	ArgumentList	"""%s+%d%s"""		1002363	1					
ANR	1003065	Argument	"""%s+%d%s"""		1002363	0					
ANR	1003066	PrimaryExpression	"""%s+%d%s"""		1002363	0					
ANR	1003067	Argument	pad		1002363	1					
ANR	1003068	Identifier	pad		1002363	0					
ANR	1003069	Argument	delta		1002363	2					
ANR	1003070	Identifier	delta		1002363	0					
ANR	1003071	Argument	reset		1002363	3					
ANR	1003072	Identifier	reset		1002363	0					
ANR	1003073	ElseStatement	else		1002363	0					
ANR	1003074	CompoundStatement		86:11:2705:2705	1002363	0					
ANR	1003075	ExpressionStatement	"r_cons_printf ( ""%s+0x%x%s"" , pad , delta , reset )"	7211:5:203365:203411	1002363	0	True				
ANR	1003076	CallExpression	"r_cons_printf ( ""%s+0x%x%s"" , pad , delta , reset )"		1002363	0					
ANR	1003077	Callee	r_cons_printf		1002363	0					
ANR	1003078	Identifier	r_cons_printf		1002363	0					
ANR	1003079	ArgumentList	"""%s+0x%x%s"""		1002363	1					
ANR	1003080	Argument	"""%s+0x%x%s"""		1002363	0					
ANR	1003081	PrimaryExpression	"""%s+0x%x%s"""		1002363	0					
ANR	1003082	Argument	pad		1002363	1					
ANR	1003083	Identifier	pad		1002363	0					
ANR	1003084	Argument	delta		1002363	2					
ANR	1003085	Identifier	delta		1002363	0					
ANR	1003086	Argument	reset		1002363	3					
ANR	1003087	Identifier	reset		1002363	0					
ANR	1003088	ElseStatement	else		1002363	0					
ANR	1003089	CompoundStatement		89:10:2776:2776	1002363	0					
ANR	1003090	IfStatement	if ( offdec )		1002363	0					
ANR	1003091	Condition	offdec	7214:8:203439:203444	1002363	0	True				
ANR	1003092	Identifier	offdec		1002363	0					
ANR	1003093	CompoundStatement		90:16:2794:2794	1002363	1					
ANR	1003094	Statement	snprintf	7215:5:203454:203461	1002363	0	True				
ANR	1003095	Statement	(	7215:14:203463:203463	1002363	1	True				
ANR	1003096	Statement	space	7215:15:203464:203468	1002363	2	True				
ANR	1003097	Statement	","	7215:20:203469:203469	1002363	3	True				
ANR	1003098	Statement	sizeof	7215:22:203471:203476	1002363	4	True				
ANR	1003099	Statement	(	7215:29:203478:203478	1002363	5	True				
ANR	1003100	Statement	space	7215:30:203479:203483	1002363	6	True				
ANR	1003101	Statement	)	7215:35:203484:203484	1002363	7	True				
ANR	1003102	Statement	","	7215:36:203485:203485	1002363	8	True				
ANR	1003103	Statement	"""%"""	7215:38:203487:203489	1002363	9	True				
ANR	1003104	Statement	PFMT64u	7215:41:203490:203496	1002363	10	True				
ANR	1003105	Statement	","	7215:48:203497:203497	1002363	11	True				
ANR	1003106	Statement	off	7215:50:203499:203501	1002363	12	True				
ANR	1003107	Statement	)	7215:53:203502:203502	1002363	13	True				
ANR	1003108	ExpressionStatement		7215:54:203503:203503	1002363	14	True				
ANR	1003109	ExpressionStatement	"white = r_str_pad ( ' ' , 10 - strlen ( space ) )"	7216:5:203510:203554	1002363	15	True				
ANR	1003110	AssignmentExpression	"white = r_str_pad ( ' ' , 10 - strlen ( space ) )"		1002363	0		=			
ANR	1003111	Identifier	white		1002363	0					
ANR	1003112	CallExpression	"r_str_pad ( ' ' , 10 - strlen ( space ) )"		1002363	1					
ANR	1003113	Callee	r_str_pad		1002363	0					
ANR	1003114	Identifier	r_str_pad		1002363	0					
ANR	1003115	ArgumentList	' '		1002363	1					
ANR	1003116	Argument	' '		1002363	0					
ANR	1003117	PrimaryExpression	' '		1002363	0					
ANR	1003118	Argument	10 - strlen ( space )		1002363	1					
ANR	1003119	AdditiveExpression	10 - strlen ( space )		1002363	0		-			
ANR	1003120	PrimaryExpression	10		1002363	0					
ANR	1003121	CallExpression	strlen ( space )		1002363	1					
ANR	1003122	Callee	strlen		1002363	0					
ANR	1003123	Identifier	strlen		1002363	0					
ANR	1003124	ArgumentList	space		1002363	1					
ANR	1003125	Argument	space		1002363	0					
ANR	1003126	Identifier	space		1002363	0					
ANR	1003127	ExpressionStatement	"r_cons_printf ( ""%s%s"" , white , space )"	7217:5:203561:203597	1002363	16	True				
ANR	1003128	CallExpression	"r_cons_printf ( ""%s%s"" , white , space )"		1002363	0					
ANR	1003129	Callee	r_cons_printf		1002363	0					
ANR	1003130	Identifier	r_cons_printf		1002363	0					
ANR	1003131	ArgumentList	"""%s%s"""		1002363	1					
ANR	1003132	Argument	"""%s%s"""		1002363	0					
ANR	1003133	PrimaryExpression	"""%s%s"""		1002363	0					
ANR	1003134	Argument	white		1002363	1					
ANR	1003135	Identifier	white		1002363	0					
ANR	1003136	Argument	space		1002363	2					
ANR	1003137	Identifier	space		1002363	0					
ANR	1003138	ElseStatement	else		1002363	0					
ANR	1003139	CompoundStatement		94:11:2957:2957	1002363	0					
ANR	1003140	Statement	r_cons_printf	7219:5:203617:203629	1002363	0	True				
ANR	1003141	Statement	(	7219:19:203631:203631	1002363	1	True				
ANR	1003142	Statement	"""0x%08"""	7219:20:203632:203638	1002363	2	True				
ANR	1003143	Statement	PFMT64x	7219:27:203639:203645	1002363	3	True				
ANR	1003144	Statement	""" """	7219:35:203647:203649	1002363	4	True				
ANR	1003145	Statement	","	7219:38:203650:203650	1002363	5	True				
ANR	1003146	Statement	off	7219:40:203652:203654	1002363	6	True				
ANR	1003147	Statement	)	7219:43:203655:203655	1002363	7	True				
ANR	1003148	ExpressionStatement		7219:44:203656:203656	1002363	8	True				
ANR	1003149	ReturnType	R_API void		1002363	1					
ANR	1003150	Identifier	r_print_offset_sg		1002363	2					
ANR	1003151	ParameterList	"RPrint * p , ut64 off , int invert , int offseg , int seggrn , int offdec , int delta , const char * label"		1002363	3					
ANR	1003152	Parameter	RPrint * p	7125:29:200553:200561	1002363	0	True				
ANR	1003153	ParameterType	RPrint *		1002363	0					
ANR	1003154	Identifier	p		1002363	1					
ANR	1003155	Parameter	ut64 off	7125:40:200564:200571	1002363	1	True				
ANR	1003156	ParameterType	ut64		1002363	0					
ANR	1003157	Identifier	off		1002363	1					
ANR	1003158	Parameter	int invert	7125:50:200574:200583	1002363	2	True				
ANR	1003159	ParameterType	int		1002363	0					
ANR	1003160	Identifier	invert		1002363	1					
ANR	1003161	Parameter	int offseg	7125:62:200586:200595	1002363	3	True				
ANR	1003162	ParameterType	int		1002363	0					
ANR	1003163	Identifier	offseg		1002363	1					
ANR	1003164	Parameter	int seggrn	7125:74:200598:200607	1002363	4	True				
ANR	1003165	ParameterType	int		1002363	0					
ANR	1003166	Identifier	seggrn		1002363	1					
ANR	1003167	Parameter	int offdec	7125:86:200610:200619	1002363	5	True				
ANR	1003168	ParameterType	int		1002363	0					
ANR	1003169	Identifier	offdec		1002363	1					
ANR	1003170	Parameter	int delta	7125:98:200622:200630	1002363	6	True				
ANR	1003171	ParameterType	int		1002363	0					
ANR	1003172	Identifier	delta		1002363	1					
ANR	1003173	Parameter	const char * label	7125:109:200633:200649	1002363	7	True				
ANR	1003174	ParameterType	const char *		1002363	0					
ANR	1003175	Identifier	label		1002363	1					
ANR	1003176	CFGEntryNode	ENTRY		1002363		True				
ANR	1003177	CFGExitNode	EXIT		1002363		True				
ANR	1003178	Symbol	p -> resetbg		1002363						
ANR	1003179	Symbol	offdec		1002363						
ANR	1003180	Symbol	delta		1002363						
ANR	1003181	Symbol	Color_RESET		1002363						
ANR	1003182	Symbol	lenof		1002363						
ANR	1003183	Symbol	space		1002363						
ANR	1003184	Symbol	R_CONS_INVERT		1002363						
ANR	1003185	Symbol	strlen		1002363						
ANR	1003186	Symbol	seggrn		1002363						
ANR	1003187	Symbol	pad		1002363						
ANR	1003188	Symbol	white		1002363						
ANR	1003189	Symbol	show_color		1002363						
ANR	1003190	Symbol	R_PRINT_FLAGS_RAINBOW		1002363						
ANR	1003191	Symbol	r_cons_rgb_str_off		1002363						
ANR	1003192	Symbol	R_PRINT_FLAGS_COLOR		1002363						
ANR	1003193	Symbol	r_cons_singleton		1002363						
ANR	1003194	Symbol	r_cons_singleton ( ) -> context -> pal . offset		1002363						
ANR	1003195	Symbol	a		1002363						
ANR	1003196	Symbol	r_str_pad		1002363						
ANR	1003197	Symbol	invert		1002363						
ANR	1003198	Symbol	rgbstr		1002363						
ANR	1003199	Symbol	r_cons_singleton ( ) -> context -> pal		1002363						
ANR	1003200	Symbol	sz		1002363						
ANR	1003201	Symbol	* r_cons_singleton ( ) -> context		1002363						
ANR	1003202	Symbol	sz2		1002363						
ANR	1003203	Symbol	label		1002363						
ANR	1003204	Symbol	k		1002363						
ANR	1003205	Symbol	off		1002363						
ANR	1003206	Symbol	* * r_cons_singleton		1002363						
ANR	1003207	Symbol	p		1002363						
ANR	1003208	Symbol	inv		1002363						
ANR	1003209	Symbol	offseg		1002363						
ANR	1003210	Symbol	s		1002363						
ANR	1003211	Symbol	true		1002363						
ANR	1003212	Symbol	reset		1002363						
ANR	1003213	Symbol	p -> flags		1002363						
ANR	1003214	Symbol	* p		1002363						
ANR	1003215	Symbol	Color_RESET_NOBG		1002363						
ANR	1003216	Symbol	r_cons_singleton ( ) -> context		1002363						
ANR	1003217	Symbol	label_padding		1002363						
ANR	1003218	Symbol	* r_cons_singleton		1002363						
ANR	1003219	Symbol	p -> wide_offsets		1002363						
ANR	1003220	Function	r_print_offset	7228:0:203758:203942							
ANR	1003221	FunctionDef	"r_print_offset (RPrint * p , ut64 off , int invert , int offseg , int offdec , int delta , const char * label)"		1003220	0					
ANR	1003222	CompoundStatement		7228:113:203871:203942	1003220	0					
ANR	1003223	ExpressionStatement	"r_print_offset_sg ( p , off , invert , offseg , 4 , offdec , delta , label )"	7229:1:203874:203940	1003220	0	True				
ANR	1003224	CallExpression	"r_print_offset_sg ( p , off , invert , offseg , 4 , offdec , delta , label )"		1003220	0					
ANR	1003225	Callee	r_print_offset_sg		1003220	0					
ANR	1003226	Identifier	r_print_offset_sg		1003220	0					
ANR	1003227	ArgumentList	p		1003220	1					
ANR	1003228	Argument	p		1003220	0					
ANR	1003229	Identifier	p		1003220	0					
ANR	1003230	Argument	off		1003220	1					
ANR	1003231	Identifier	off		1003220	0					
ANR	1003232	Argument	invert		1003220	2					
ANR	1003233	Identifier	invert		1003220	0					
ANR	1003234	Argument	offseg		1003220	3					
ANR	1003235	Identifier	offseg		1003220	0					
ANR	1003236	Argument	4		1003220	4					
ANR	1003237	PrimaryExpression	4		1003220	0					
ANR	1003238	Argument	offdec		1003220	5					
ANR	1003239	Identifier	offdec		1003220	0					
ANR	1003240	Argument	delta		1003220	6					
ANR	1003241	Identifier	delta		1003220	0					
ANR	1003242	Argument	label		1003220	7					
ANR	1003243	Identifier	label		1003220	0					
ANR	1003244	ReturnType	R_API void		1003220	1					
ANR	1003245	Identifier	r_print_offset		1003220	2					
ANR	1003246	ParameterList	"RPrint * p , ut64 off , int invert , int offseg , int offdec , int delta , const char * label"		1003220	3					
ANR	1003247	Parameter	RPrint * p	7228:26:203784:203792	1003220	0	True				
ANR	1003248	ParameterType	RPrint *		1003220	0					
ANR	1003249	Identifier	p		1003220	1					
ANR	1003250	Parameter	ut64 off	7228:37:203795:203802	1003220	1	True				
ANR	1003251	ParameterType	ut64		1003220	0					
ANR	1003252	Identifier	off		1003220	1					
ANR	1003253	Parameter	int invert	7228:47:203805:203814	1003220	2	True				
ANR	1003254	ParameterType	int		1003220	0					
ANR	1003255	Identifier	invert		1003220	1					
ANR	1003256	Parameter	int offseg	7228:59:203817:203826	1003220	3	True				
ANR	1003257	ParameterType	int		1003220	0					
ANR	1003258	Identifier	offseg		1003220	1					
ANR	1003259	Parameter	int offdec	7228:71:203829:203838	1003220	4	True				
ANR	1003260	ParameterType	int		1003220	0					
ANR	1003261	Identifier	offdec		1003220	1					
ANR	1003262	Parameter	int delta	7228:83:203841:203849	1003220	5	True				
ANR	1003263	ParameterType	int		1003220	0					
ANR	1003264	Identifier	delta		1003220	1					
ANR	1003265	Parameter	const char * label	7228:94:203852:203868	1003220	6	True				
ANR	1003266	ParameterType	const char *		1003220	0					
ANR	1003267	Identifier	label		1003220	1					
ANR	1003268	CFGEntryNode	ENTRY		1003220		True				
ANR	1003269	CFGExitNode	EXIT		1003220		True				
ANR	1003270	Symbol	p		1003220						
ANR	1003271	Symbol	offseg		1003220						
ANR	1003272	Symbol	invert		1003220						
ANR	1003273	Symbol	offdec		1003220						
ANR	1003274	Symbol	delta		1003220						
ANR	1003275	Symbol	label		1003220						
ANR	1003276	Symbol	off		1003220						
