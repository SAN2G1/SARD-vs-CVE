command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4784241	File	data/converged/CVE-2019-16718~_radare2/libr_egg_emit_x86.c								
ANR	4784242	DeclStmt									
ANR	4784243	Decl							char	char * [ ]	regs
ANR	4784244	DeclStmt									
ANR	4784245	Decl							char	char * [ ]	regs
ANR	4784246	Function	emit_init	35:0:801:997							
ANR	4784247	FunctionDef	emit_init (REgg * egg)		4784246	0					
ANR	4784248	CompoundStatement		35:34:835:997	4784246	0					
ANR	4784249	IfStatement	if ( attsyntax )		4784246	0					
ANR	4784250	Condition	attsyntax	37:4:871:879	4784246	0	True				
ANR	4784251	Identifier	attsyntax		4784246	0					
ANR	4784252	CompoundStatement		3:15:46:46	4784246	1					
ANR	4784253	Statement	r_egg_printf	38:1:885:896	4784246	0	True				
ANR	4784254	Statement	(	38:14:898:898	4784246	1	True				
ANR	4784255	Statement	egg	38:15:899:901	4784246	2	True				
ANR	4784256	Statement	","	38:18:902:902	4784246	3	True				
ANR	4784257	Statement	"""mov %%"""	38:20:904:911	4784246	4	True				
ANR	4784258	Statement	R_SP	38:29:913:916	4784246	5	True				
ANR	4784259	Statement	""", %%"""	38:34:918:923	4784246	6	True				
ANR	4784260	Statement	R_BP	38:41:925:928	4784246	7	True				
ANR	4784261	Statement	"""\\n"""	38:46:930:933	4784246	8	True				
ANR	4784262	Statement	)	38:50:934:934	4784246	9	True				
ANR	4784263	ExpressionStatement		38:51:935:935	4784246	10	True				
ANR	4784264	ElseStatement	else		4784246	0					
ANR	4784265	CompoundStatement		5:7:108:108	4784246	0					
ANR	4784266	Statement	r_egg_printf	40:1:947:958	4784246	0	True				
ANR	4784267	Statement	(	40:14:960:960	4784246	1	True				
ANR	4784268	Statement	egg	40:15:961:963	4784246	2	True				
ANR	4784269	Statement	","	40:18:964:964	4784246	3	True				
ANR	4784270	Statement	"""mov """	40:20:966:971	4784246	4	True				
ANR	4784271	Statement	R_BP	40:27:973:976	4784246	5	True				
ANR	4784272	Statement	""", """	40:32:978:981	4784246	6	True				
ANR	4784273	Statement	R_SP	40:37:983:986	4784246	7	True				
ANR	4784274	Statement	"""\\n"""	40:42:988:991	4784246	8	True				
ANR	4784275	Statement	)	40:46:992:992	4784246	9	True				
ANR	4784276	ExpressionStatement		40:47:993:993	4784246	10	True				
ANR	4784277	ReturnType	static void		4784246	1					
ANR	4784278	Identifier	emit_init		4784246	2					
ANR	4784279	ParameterList	REgg * egg		4784246	3					
ANR	4784280	Parameter	REgg * egg	35:23:824:832	4784246	0	True				
ANR	4784281	ParameterType	REgg *		4784246	0					
ANR	4784282	Identifier	egg		4784246	1					
ANR	4784283	CFGEntryNode	ENTRY		4784246		True				
ANR	4784284	CFGExitNode	EXIT		4784246		True				
ANR	4784285	Symbol	egg		4784246						
ANR	4784286	Symbol	attsyntax		4784246						
ANR	4784287	Function	emit_syscall	44:0:1000:1657							
ANR	4784288	FunctionDef	"emit_syscall (REgg * egg , int nargs)"		4784287	0					
ANR	4784289	CompoundStatement		44:49:1049:1657	4784287	0					
ANR	4784290	IdentifierDeclStatement	char p [ 512 ] ;	45:1:1052:1063	4784287	0	True				
ANR	4784291	IdentifierDecl	p [ 512 ]		4784287	0					
ANR	4784292	IdentifierDeclType	char [ 512 ]		4784287	0					
ANR	4784293	Identifier	p		4784287	1					
ANR	4784294	PrimaryExpression	512		4784287	2					
ANR	4784295	IfStatement	if ( attsyntax )		4784287	1					
ANR	4784296	Condition	attsyntax	46:5:1070:1078	4784287	0	True				
ANR	4784297	Identifier	attsyntax		4784287	0					
ANR	4784298	CompoundStatement		3:16:31:31	4784287	1					
ANR	4784299	Statement	return	47:2:1085:1090	4784287	0	True				
ANR	4784300	Statement	strdup	47:9:1092:1097	4784287	1	True				
ANR	4784301	Statement	(	47:16:1099:1099	4784287	2	True				
ANR	4784302	Statement	""": mov $`.arg`, %"""	47:17:1100:1117	4784287	3	True				
ANR	4784303	Statement	R_AX	47:36:1119:1122	4784287	4	True				
ANR	4784304	Statement	"""\\n: """	47:41:1124:1129	4784287	5	True				
ANR	4784305	Statement	SYSCALL_ATT	47:48:1131:1141	4784287	6	True				
ANR	4784306	Statement	"""\\n"""	47:60:1143:1146	4784287	7	True				
ANR	4784307	Statement	)	47:64:1147:1147	4784287	8	True				
ANR	4784308	ExpressionStatement		47:65:1148:1148	4784287	9	True				
ANR	4784309	SwitchStatement	switch ( egg -> os )		4784287	2					
ANR	4784310	Condition	egg -> os	49:9:1162:1168	4784287	0	True				
ANR	4784311	PtrMemberAccess	egg -> os		4784287	0					
ANR	4784312	Identifier	egg		4784287	0					
ANR	4784313	Identifier	os		4784287	1					
ANR	4784314	CompoundStatement		6:18:121:121	4784287	1					
ANR	4784315	Label	case R_EGG_OS_LINUX :	50:1:1174:1193	4784287	0	True				
ANR	4784316	Identifier	R_EGG_OS_LINUX		4784287	0					
ANR	4784317	Statement	strcpy	51:2:1197:1202	4784287	1	True				
ANR	4784318	Statement	(	51:9:1204:1204	4784287	2	True				
ANR	4784319	Statement	p	51:10:1205:1205	4784287	3	True				
ANR	4784320	Statement	","	51:11:1206:1206	4784287	4	True				
ANR	4784321	Statement	"""\\n : mov """	51:13:1208:1218	4784287	5	True				
ANR	4784322	Statement	R_AX	51:24:1219:1222	4784287	6	True				
ANR	4784323	Statement	""", `.arg`\\n : """	51:28:1223:1237	4784287	7	True				
ANR	4784324	Statement	SYSCALL_INTEL	51:43:1238:1250	4784287	8	True				
ANR	4784325	Statement	"""\\n"""	51:57:1252:1255	4784287	9	True				
ANR	4784326	Statement	)	51:61:1256:1256	4784287	10	True				
ANR	4784327	ExpressionStatement		51:62:1257:1257	4784287	11	True				
ANR	4784328	BreakStatement	break ;	52:2:1261:1266	4784287	12	True				
ANR	4784329	Label	case R_EGG_OS_OSX :	53:1:1269:1286	4784287	13	True				
ANR	4784330	Identifier	R_EGG_OS_OSX		4784287	0					
ANR	4784331	Label	case R_EGG_OS_MACOS :	54:1:1289:1308	4784287	14	True				
ANR	4784332	Identifier	R_EGG_OS_MACOS		4784287	0					
ANR	4784333	Label	case R_EGG_OS_DARWIN :	55:1:1311:1331	4784287	15	True				
ANR	4784334	Identifier	R_EGG_OS_DARWIN		4784287	0					
ANR	4784335	Statement	snprintf	57:2:1351:1358	4784287	16	True				
ANR	4784336	Statement	(	57:11:1360:1360	4784287	17	True				
ANR	4784337	Statement	p	57:12:1361:1361	4784287	18	True				
ANR	4784338	Statement	","	57:13:1362:1362	4784287	19	True				
ANR	4784339	Statement	sizeof	57:15:1364:1369	4784287	20	True				
ANR	4784340	Statement	(	57:22:1371:1371	4784287	21	True				
ANR	4784341	Statement	p	57:23:1372:1372	4784287	22	True				
ANR	4784342	Statement	)	57:24:1373:1373	4784287	23	True				
ANR	4784343	Statement	","	57:25:1374:1374	4784287	24	True				
ANR	4784344	Statement	"""\\n"""	57:27:1376:1379	4784287	25	True				
ANR	4784345	Statement	"""  : mov rax, `.arg`\\n"""	58:3:1384:1406	4784287	26	True				
ANR	4784346	Statement	"""  : syscall\\n"""	59:3:1411:1425	4784287	27	True				
ANR	4784347	Statement	)	59:18:1426:1426	4784287	28	True				
ANR	4784348	ExpressionStatement		59:19:1427:1427	4784287	29	True				
ANR	4784349	BreakStatement	break ;	68:2:1602:1607	4784287	30	True				
ANR	4784350	Label	default :	69:1:1610:1617	4784287	31	True				
ANR	4784351	Identifier	default		4784287	0					
ANR	4784352	ReturnStatement	return NULL ;	70:2:1621:1632	4784287	32	True				
ANR	4784353	Identifier	NULL		4784287	0					
ANR	4784354	ReturnStatement	return strdup ( p ) ;	72:1:1638:1655	4784287	3	True				
ANR	4784355	CallExpression	strdup ( p )		4784287	0					
ANR	4784356	Callee	strdup		4784287	0					
ANR	4784357	Identifier	strdup		4784287	0					
ANR	4784358	ArgumentList	p		4784287	1					
ANR	4784359	Argument	p		4784287	0					
ANR	4784360	Identifier	p		4784287	0					
ANR	4784361	ReturnType	static char *		4784287	1					
ANR	4784362	Identifier	emit_syscall		4784287	2					
ANR	4784363	ParameterList	"REgg * egg , int nargs"		4784287	3					
ANR	4784364	Parameter	REgg * egg	44:27:1027:1035	4784287	0	True				
ANR	4784365	ParameterType	REgg *		4784287	0					
ANR	4784366	Identifier	egg		4784287	1					
ANR	4784367	Parameter	int nargs	44:38:1038:1046	4784287	1	True				
ANR	4784368	ParameterType	int		4784287	0					
ANR	4784369	Identifier	nargs		4784287	1					
ANR	4784370	CFGEntryNode	ENTRY		4784287		True				
ANR	4784371	CFGExitNode	EXIT		4784287		True				
ANR	4784372	Symbol	nargs		4784287						
ANR	4784373	Symbol	p		4784287						
ANR	4784374	Symbol	* egg		4784287						
ANR	4784375	Symbol	NULL		4784287						
ANR	4784376	Symbol	egg		4784287						
ANR	4784377	Symbol	egg -> os		4784287						
ANR	4784378	Symbol	attsyntax		4784287						
ANR	4784379	Symbol	strdup		4784287						
ANR	4784380	Function	emit_frame	75:0:1660:1981							
ANR	4784381	FunctionDef	"emit_frame (REgg * egg , int sz)"		4784380	0					
ANR	4784382	CompoundStatement		75:43:1703:1981	4784380	0					
ANR	4784383	IfStatement	if ( sz < 1 )		4784380	0					
ANR	4784384	Condition	sz < 1	76:5:1710:1715	4784380	0	True				
ANR	4784385	RelationalExpression	sz < 1		4784380	0		<			
ANR	4784386	Identifier	sz		4784380	0					
ANR	4784387	PrimaryExpression	1		4784380	1					
ANR	4784388	CompoundStatement		2:13:14:14	4784380	1					
ANR	4784389	ReturnStatement	return ;	77:2:1722:1728	4784380	0	True				
ANR	4784390	IfStatement	if ( attsyntax )		4784380	1					
ANR	4784391	Condition	attsyntax	79:5:1738:1746	4784380	0	True				
ANR	4784392	Identifier	attsyntax		4784380	0					
ANR	4784393	CompoundStatement		5:16:45:45	4784380	1					
ANR	4784394	Statement	r_egg_printf	80:2:1753:1764	4784380	0	True				
ANR	4784395	Statement	(	80:15:1766:1766	4784380	1	True				
ANR	4784396	Statement	egg	80:16:1767:1769	4784380	2	True				
ANR	4784397	Statement	","	80:19:1770:1770	4784380	3	True				
ANR	4784398	Statement	"""  push %%"""	81:2:1774:1784	4784380	4	True				
ANR	4784399	Statement	R_BP	81:13:1785:1788	4784380	5	True				
ANR	4784400	Statement	"""\\n"""	81:17:1789:1792	4784380	6	True				
ANR	4784401	Statement	"""  mov %%"""	82:2:1796:1805	4784380	7	True				
ANR	4784402	Statement	R_SP	82:12:1806:1809	4784380	8	True				
ANR	4784403	Statement	""", %%"""	82:16:1810:1815	4784380	9	True				
ANR	4784404	Statement	R_BP	82:22:1816:1819	4784380	10	True				
ANR	4784405	Statement	"""\\n"""	82:26:1820:1823	4784380	11	True				
ANR	4784406	Statement	"""  sub $%d, %%"""	83:2:1827:1841	4784380	12	True				
ANR	4784407	Statement	R_SP	83:17:1842:1845	4784380	13	True				
ANR	4784408	Statement	"""\\n"""	83:21:1846:1849	4784380	14	True				
ANR	4784409	Statement	","	83:25:1850:1850	4784380	15	True				
ANR	4784410	Statement	sz	83:27:1852:1853	4784380	16	True				
ANR	4784411	Statement	)	83:29:1854:1854	4784380	17	True				
ANR	4784412	ExpressionStatement		83:30:1855:1855	4784380	18	True				
ANR	4784413	ElseStatement	else		4784380	0					
ANR	4784414	CompoundStatement		10:8:161:161	4784380	0					
ANR	4784415	Statement	r_egg_printf	85:2:1869:1880	4784380	0	True				
ANR	4784416	Statement	(	85:15:1882:1882	4784380	1	True				
ANR	4784417	Statement	egg	85:16:1883:1885	4784380	2	True				
ANR	4784418	Statement	","	85:19:1886:1886	4784380	3	True				
ANR	4784419	Statement	"""  push """	86:3:1891:1899	4784380	4	True				
ANR	4784420	Statement	R_BP	86:13:1901:1904	4784380	5	True				
ANR	4784421	Statement	"""\\n"""	86:18:1906:1909	4784380	6	True				
ANR	4784422	Statement	"""  mov """	87:3:1914:1921	4784380	7	True				
ANR	4784423	Statement	R_BP	87:12:1923:1926	4784380	8	True				
ANR	4784424	Statement	""", """	87:17:1928:1931	4784380	9	True				
ANR	4784425	Statement	R_SP	87:22:1933:1936	4784380	10	True				
ANR	4784426	Statement	"""\\n"""	87:27:1938:1941	4784380	11	True				
ANR	4784427	Statement	"""  sub """	88:3:1946:1953	4784380	12	True				
ANR	4784428	Statement	R_SP	88:12:1955:1958	4784380	13	True				
ANR	4784429	Statement	""", %d\\n"""	88:17:1960:1967	4784380	14	True				
ANR	4784430	Statement	","	88:25:1968:1968	4784380	15	True				
ANR	4784431	Statement	sz	89:3:1973:1974	4784380	16	True				
ANR	4784432	Statement	)	89:5:1975:1975	4784380	17	True				
ANR	4784433	ExpressionStatement		89:6:1976:1976	4784380	18	True				
ANR	4784434	ReturnType	static void		4784380	1					
ANR	4784435	Identifier	emit_frame		4784380	2					
ANR	4784436	ParameterList	"REgg * egg , int sz"		4784380	3					
ANR	4784437	Parameter	REgg * egg	75:24:1684:1692	4784380	0	True				
ANR	4784438	ParameterType	REgg *		4784380	0					
ANR	4784439	Identifier	egg		4784380	1					
ANR	4784440	Parameter	int sz	75:35:1695:1700	4784380	1	True				
ANR	4784441	ParameterType	int		4784380	0					
ANR	4784442	Identifier	sz		4784380	1					
ANR	4784443	CFGEntryNode	ENTRY		4784380		True				
ANR	4784444	CFGExitNode	EXIT		4784380		True				
ANR	4784445	Symbol	egg		4784380						
ANR	4784446	Symbol	sz		4784380						
ANR	4784447	Symbol	attsyntax		4784380						
ANR	4784448	Function	emit_frame_end	93:0:1984:2329							
ANR	4784449	FunctionDef	"emit_frame_end (REgg * egg , int sz , int ctx)"		4784448	0					
ANR	4784450	CompoundStatement		93:56:2040:2329	4784448	0					
ANR	4784451	IfStatement	if ( sz > 0 )		4784448	0					
ANR	4784452	Condition	sz > 0	94:5:2047:2050	4784448	0	True				
ANR	4784453	RelationalExpression	sz > 0		4784448	0		>			
ANR	4784454	Identifier	sz		4784448	0					
ANR	4784455	PrimaryExpression	0		4784448	1					
ANR	4784456	CompoundStatement		2:11:12:12	4784448	1					
ANR	4784457	IfStatement	if ( attsyntax )		4784448	0					
ANR	4784458	Condition	attsyntax	95:6:2061:2069	4784448	0	True				
ANR	4784459	Identifier	attsyntax		4784448	0					
ANR	4784460	CompoundStatement		3:17:31:31	4784448	1					
ANR	4784461	Statement	r_egg_printf	96:3:2077:2088	4784448	0	True				
ANR	4784462	Statement	(	96:16:2090:2090	4784448	1	True				
ANR	4784463	Statement	egg	96:17:2091:2093	4784448	2	True				
ANR	4784464	Statement	","	96:20:2094:2094	4784448	3	True				
ANR	4784465	Statement	"""  add $%d, %%"""	96:22:2096:2110	4784448	4	True				
ANR	4784466	Statement	R_SP	96:37:2111:2114	4784448	5	True				
ANR	4784467	Statement	"""\\n"""	96:41:2115:2118	4784448	6	True				
ANR	4784468	Statement	","	96:45:2119:2119	4784448	7	True				
ANR	4784469	Statement	sz	96:47:2121:2122	4784448	8	True				
ANR	4784470	Statement	)	96:49:2123:2123	4784448	9	True				
ANR	4784471	ExpressionStatement		96:50:2124:2124	4784448	10	True				
ANR	4784472	Statement	r_egg_printf	97:3:2129:2140	4784448	11	True				
ANR	4784473	Statement	(	97:16:2142:2142	4784448	12	True				
ANR	4784474	Statement	egg	97:17:2143:2145	4784448	13	True				
ANR	4784475	Statement	","	97:20:2146:2146	4784448	14	True				
ANR	4784476	Statement	"""  pop %%"""	97:22:2148:2157	4784448	15	True				
ANR	4784477	Statement	R_BP	97:32:2158:2161	4784448	16	True				
ANR	4784478	Statement	"""\\n"""	97:36:2162:2165	4784448	17	True				
ANR	4784479	Statement	)	97:40:2166:2166	4784448	18	True				
ANR	4784480	ExpressionStatement		97:41:2167:2167	4784448	19	True				
ANR	4784481	ElseStatement	else		4784448	0					
ANR	4784482	CompoundStatement		6:9:137:137	4784448	0					
ANR	4784483	Statement	r_egg_printf	99:3:2183:2194	4784448	0	True				
ANR	4784484	Statement	(	99:16:2196:2196	4784448	1	True				
ANR	4784485	Statement	egg	99:17:2197:2199	4784448	2	True				
ANR	4784486	Statement	","	99:20:2200:2200	4784448	3	True				
ANR	4784487	Statement	"""  add """	99:22:2202:2209	4784448	4	True				
ANR	4784488	Statement	R_SP	99:30:2210:2213	4784448	5	True				
ANR	4784489	Statement	""", %d\\n"""	99:34:2214:2221	4784448	6	True				
ANR	4784490	Statement	","	99:42:2222:2222	4784448	7	True				
ANR	4784491	Statement	sz	99:44:2224:2225	4784448	8	True				
ANR	4784492	Statement	)	99:46:2226:2226	4784448	9	True				
ANR	4784493	ExpressionStatement		99:47:2227:2227	4784448	10	True				
ANR	4784494	Statement	r_egg_printf	100:3:2232:2243	4784448	11	True				
ANR	4784495	Statement	(	100:16:2245:2245	4784448	12	True				
ANR	4784496	Statement	egg	100:17:2246:2248	4784448	13	True				
ANR	4784497	Statement	","	100:20:2249:2249	4784448	14	True				
ANR	4784498	Statement	"""  pop """	100:22:2251:2258	4784448	15	True				
ANR	4784499	Statement	R_BP	100:30:2259:2262	4784448	16	True				
ANR	4784500	Statement	"""\\n"""	100:34:2263:2266	4784448	17	True				
ANR	4784501	Statement	)	100:38:2267:2267	4784448	18	True				
ANR	4784502	ExpressionStatement		100:39:2268:2268	4784448	19	True				
ANR	4784503	IfStatement	if ( ctx > 0 )		4784448	1					
ANR	4784504	Condition	ctx > 0	103:5:2282:2288	4784448	0	True				
ANR	4784505	RelationalExpression	ctx > 0		4784448	0		>			
ANR	4784506	Identifier	ctx		4784448	0					
ANR	4784507	PrimaryExpression	0		4784448	1					
ANR	4784508	CompoundStatement		11:14:250:250	4784448	1					
ANR	4784509	ExpressionStatement	"r_egg_printf ( egg , ""  ret\\n"" )"	104:2:2295:2324	4784448	0	True				
ANR	4784510	CallExpression	"r_egg_printf ( egg , ""  ret\\n"" )"		4784448	0					
ANR	4784511	Callee	r_egg_printf		4784448	0					
ANR	4784512	Identifier	r_egg_printf		4784448	0					
ANR	4784513	ArgumentList	egg		4784448	1					
ANR	4784514	Argument	egg		4784448	0					
ANR	4784515	Identifier	egg		4784448	0					
ANR	4784516	Argument	"""  ret\\n"""		4784448	1					
ANR	4784517	PrimaryExpression	"""  ret\\n"""		4784448	0					
ANR	4784518	ReturnType	static void		4784448	1					
ANR	4784519	Identifier	emit_frame_end		4784448	2					
ANR	4784520	ParameterList	"REgg * egg , int sz , int ctx"		4784448	3					
ANR	4784521	Parameter	REgg * egg	93:28:2012:2020	4784448	0	True				
ANR	4784522	ParameterType	REgg *		4784448	0					
ANR	4784523	Identifier	egg		4784448	1					
ANR	4784524	Parameter	int sz	93:39:2023:2028	4784448	1	True				
ANR	4784525	ParameterType	int		4784448	0					
ANR	4784526	Identifier	sz		4784448	1					
ANR	4784527	Parameter	int ctx	93:47:2031:2037	4784448	2	True				
ANR	4784528	ParameterType	int		4784448	0					
ANR	4784529	Identifier	ctx		4784448	1					
ANR	4784530	CFGEntryNode	ENTRY		4784448		True				
ANR	4784531	CFGExitNode	EXIT		4784448		True				
ANR	4784532	Symbol	egg		4784448						
ANR	4784533	Symbol	ctx		4784448						
ANR	4784534	Symbol	sz		4784448						
ANR	4784535	Symbol	attsyntax		4784448						
ANR	4784536	Function	emit_comment	108:0:2332:2609							
ANR	4784537	FunctionDef	"emit_comment (REgg * egg , const char * fmt)"		4784536	0					
ANR	4784538	CompoundStatement		108:58:2390:2609	4784536	0					
ANR	4784539	IdentifierDeclStatement	va_list ap ;	109:1:2393:2403	4784536	0	True				
ANR	4784540	IdentifierDecl	ap		4784536	0					
ANR	4784541	IdentifierDeclType	va_list		4784536	0					
ANR	4784542	Identifier	ap		4784536	1					
ANR	4784543	IdentifierDeclStatement	char buf [ 1024 ] ;	110:1:2406:2420	4784536	1	True				
ANR	4784544	IdentifierDecl	buf [ 1024 ]		4784536	0					
ANR	4784545	IdentifierDeclType	char [ 1024 ]		4784536	0					
ANR	4784546	Identifier	buf		4784536	1					
ANR	4784547	PrimaryExpression	1024		4784536	2					
ANR	4784548	ExpressionStatement	"va_start ( ap , fmt )"	111:1:2423:2441	4784536	2	True				
ANR	4784549	CallExpression	"va_start ( ap , fmt )"		4784536	0					
ANR	4784550	Callee	va_start		4784536	0					
ANR	4784551	Identifier	va_start		4784536	0					
ANR	4784552	ArgumentList	ap		4784536	1					
ANR	4784553	Argument	ap		4784536	0					
ANR	4784554	Identifier	ap		4784536	0					
ANR	4784555	Argument	fmt		4784536	1					
ANR	4784556	Identifier	fmt		4784536	0					
ANR	4784557	ExpressionStatement	"vsnprintf ( buf , sizeof ( buf ) , fmt , ap )"	112:1:2444:2482	4784536	3	True				
ANR	4784558	CallExpression	"vsnprintf ( buf , sizeof ( buf ) , fmt , ap )"		4784536	0					
ANR	4784559	Callee	vsnprintf		4784536	0					
ANR	4784560	Identifier	vsnprintf		4784536	0					
ANR	4784561	ArgumentList	buf		4784536	1					
ANR	4784562	Argument	buf		4784536	0					
ANR	4784563	Identifier	buf		4784536	0					
ANR	4784564	Argument	sizeof ( buf )		4784536	1					
ANR	4784565	SizeofExpression	sizeof ( buf )		4784536	0					
ANR	4784566	Sizeof	sizeof		4784536	0					
ANR	4784567	SizeofOperand	buf		4784536	1					
ANR	4784568	Argument	fmt		4784536	2					
ANR	4784569	Identifier	fmt		4784536	0					
ANR	4784570	Argument	ap		4784536	3					
ANR	4784571	Identifier	ap		4784536	0					
ANR	4784572	IfStatement	if ( attsyntax )		4784536	4					
ANR	4784573	Condition	attsyntax	113:5:2489:2497	4784536	0	True				
ANR	4784574	Identifier	attsyntax		4784536	0					
ANR	4784575	CompoundStatement		6:16:109:109	4784536	1					
ANR	4784576	ExpressionStatement	"r_egg_printf ( egg , ""  /* %s */\\n"" , buf )"	114:2:2504:2543	4784536	0	True				
ANR	4784577	CallExpression	"r_egg_printf ( egg , ""  /* %s */\\n"" , buf )"		4784536	0					
ANR	4784578	Callee	r_egg_printf		4784536	0					
ANR	4784579	Identifier	r_egg_printf		4784536	0					
ANR	4784580	ArgumentList	egg		4784536	1					
ANR	4784581	Argument	egg		4784536	0					
ANR	4784582	Identifier	egg		4784536	0					
ANR	4784583	Argument	"""  /* %s */\\n"""		4784536	1					
ANR	4784584	PrimaryExpression	"""  /* %s */\\n"""		4784536	0					
ANR	4784585	Argument	buf		4784536	2					
ANR	4784586	Identifier	buf		4784536	0					
ANR	4784587	ElseStatement	else		4784536	0					
ANR	4784588	CompoundStatement		8:8:162:162	4784536	0					
ANR	4784589	ExpressionStatement	"r_egg_printf ( egg , ""# %s\\n"" , buf )"	116:2:2557:2590	4784536	0	True				
ANR	4784590	CallExpression	"r_egg_printf ( egg , ""# %s\\n"" , buf )"		4784536	0					
ANR	4784591	Callee	r_egg_printf		4784536	0					
ANR	4784592	Identifier	r_egg_printf		4784536	0					
ANR	4784593	ArgumentList	egg		4784536	1					
ANR	4784594	Argument	egg		4784536	0					
ANR	4784595	Identifier	egg		4784536	0					
ANR	4784596	Argument	"""# %s\\n"""		4784536	1					
ANR	4784597	PrimaryExpression	"""# %s\\n"""		4784536	0					
ANR	4784598	Argument	buf		4784536	2					
ANR	4784599	Identifier	buf		4784536	0					
ANR	4784600	ExpressionStatement	va_end ( ap )	118:1:2596:2607	4784536	5	True				
ANR	4784601	CallExpression	va_end ( ap )		4784536	0					
ANR	4784602	Callee	va_end		4784536	0					
ANR	4784603	Identifier	va_end		4784536	0					
ANR	4784604	ArgumentList	ap		4784536	1					
ANR	4784605	Argument	ap		4784536	0					
ANR	4784606	Identifier	ap		4784536	0					
ANR	4784607	ReturnType	static void		4784536	1					
ANR	4784608	Identifier	emit_comment		4784536	2					
ANR	4784609	ParameterList	"REgg * egg , const char * fmt"		4784536	3					
ANR	4784610	Parameter	REgg * egg	108:25:2357:2365	4784536	0	True				
ANR	4784611	ParameterType	REgg *		4784536	0					
ANR	4784612	Identifier	egg		4784536	1					
ANR	4784613	Parameter	const char * fmt	108:36:2368:2382	4784536	1	True				
ANR	4784614	ParameterType	const char *		4784536	0					
ANR	4784615	Identifier	fmt		4784536	1					
ANR	4784616	CFGEntryNode	ENTRY		4784536		True				
ANR	4784617	CFGExitNode	EXIT		4784536		True				
ANR	4784618	Symbol	buf		4784536						
ANR	4784619	Symbol	egg		4784536						
ANR	4784620	Symbol	attsyntax		4784536						
ANR	4784621	Symbol	fmt		4784536						
ANR	4784622	Symbol	ap		4784536						
ANR	4784623	Function	emit_equ	121:0:2612:2732							
ANR	4784624	FunctionDef	"emit_equ (REgg * egg , const char * key , const char * value)"		4784623	0					
ANR	4784625	CompoundStatement		121:69:2681:2732	4784623	0					
ANR	4784626	ExpressionStatement	"r_egg_printf ( egg , "".equ %s,%s\\n"" , key , value )"	122:1:2684:2730	4784623	0	True				
ANR	4784627	CallExpression	"r_egg_printf ( egg , "".equ %s,%s\\n"" , key , value )"		4784623	0					
ANR	4784628	Callee	r_egg_printf		4784623	0					
ANR	4784629	Identifier	r_egg_printf		4784623	0					
ANR	4784630	ArgumentList	egg		4784623	1					
ANR	4784631	Argument	egg		4784623	0					
ANR	4784632	Identifier	egg		4784623	0					
ANR	4784633	Argument	""".equ %s,%s\\n"""		4784623	1					
ANR	4784634	PrimaryExpression	""".equ %s,%s\\n"""		4784623	0					
ANR	4784635	Argument	key		4784623	2					
ANR	4784636	Identifier	key		4784623	0					
ANR	4784637	Argument	value		4784623	3					
ANR	4784638	Identifier	value		4784623	0					
ANR	4784639	ReturnType	static void		4784623	1					
ANR	4784640	Identifier	emit_equ		4784623	2					
ANR	4784641	ParameterList	"REgg * egg , const char * key , const char * value"		4784623	3					
ANR	4784642	Parameter	REgg * egg	121:22:2634:2642	4784623	0	True				
ANR	4784643	ParameterType	REgg *		4784623	0					
ANR	4784644	Identifier	egg		4784623	1					
ANR	4784645	Parameter	const char * key	121:33:2645:2659	4784623	1	True				
ANR	4784646	ParameterType	const char *		4784623	0					
ANR	4784647	Identifier	key		4784623	1					
ANR	4784648	Parameter	const char * value	121:50:2662:2678	4784623	2	True				
ANR	4784649	ParameterType	const char *		4784623	0					
ANR	4784650	Identifier	value		4784623	1					
ANR	4784651	CFGEntryNode	ENTRY		4784623		True				
ANR	4784652	CFGExitNode	EXIT		4784623		True				
ANR	4784653	Symbol	egg		4784623						
ANR	4784654	Symbol	value		4784623						
ANR	4784655	Symbol	key		4784623						
ANR	4784656	Function	getreg	125:0:2735:2833							
ANR	4784657	FunctionDef	getreg (int i)		4784656	0					
ANR	4784658	CompoundStatement		125:33:2768:2833	4784656	0					
ANR	4784659	IfStatement	if ( i < 0 || i >= R_NGP )		4784656	0					
ANR	4784660	Condition	i < 0 || i >= R_NGP	126:5:2775:2793	4784656	0	True				
ANR	4784661	OrExpression	i < 0 || i >= R_NGP		4784656	0		||			
ANR	4784662	RelationalExpression	i < 0		4784656	0		<			
ANR	4784663	Identifier	i		4784656	0					
ANR	4784664	PrimaryExpression	0		4784656	1					
ANR	4784665	RelationalExpression	i >= R_NGP		4784656	1		>=			
ANR	4784666	Identifier	i		4784656	0					
ANR	4784667	Identifier	R_NGP		4784656	1					
ANR	4784668	CompoundStatement		2:26:27:27	4784656	1					
ANR	4784669	ReturnStatement	return NULL ;	127:2:2800:2811	4784656	0	True				
ANR	4784670	Identifier	NULL		4784656	0					
ANR	4784671	ReturnStatement	return regs [ i ] ;	129:1:2817:2831	4784656	1	True				
ANR	4784672	ArrayIndexing	regs [ i ]		4784656	0					
ANR	4784673	Identifier	regs		4784656	0					
ANR	4784674	Identifier	i		4784656	1					
ANR	4784675	ReturnType	static const char *		4784656	1					
ANR	4784676	Identifier	getreg		4784656	2					
ANR	4784677	ParameterList	int i		4784656	3					
ANR	4784678	Parameter	int i	125:26:2761:2765	4784656	0	True				
ANR	4784679	ParameterType	int		4784656	0					
ANR	4784680	Identifier	i		4784656	1					
ANR	4784681	CFGEntryNode	ENTRY		4784656		True				
ANR	4784682	CFGExitNode	EXIT		4784656		True				
ANR	4784683	Symbol	NULL		4784656						
ANR	4784684	Symbol	* i		4784656						
ANR	4784685	Symbol	R_NGP		4784656						
ANR	4784686	Symbol	* regs		4784656						
ANR	4784687	Symbol	i		4784656						
ANR	4784688	Symbol	regs		4784656						
ANR	4784689	Function	emit_syscall_args	132:0:2836:3383							
ANR	4784690	FunctionDef	"emit_syscall_args (REgg * egg , int nargs)"		4784689	0					
ANR	4784691	CompoundStatement		132:52:2888:3383	4784689	0					
ANR	4784692	IdentifierDeclStatement	"int j , k ;"	133:1:2891:2899	4784689	0	True				
ANR	4784693	IdentifierDecl	j		4784689	0					
ANR	4784694	IdentifierDeclType	int		4784689	0					
ANR	4784695	Identifier	j		4784689	1					
ANR	4784696	IdentifierDecl	k		4784689	1					
ANR	4784697	IdentifierDeclType	int		4784689	0					
ANR	4784698	Identifier	k		4784689	1					
ANR	4784699	ForStatement	for ( j = 0 ; j < nargs ; j ++ )		4784689	1					
ANR	4784700	ForInit	j = 0 ;	134:6:2907:2912	4784689	0	True				
ANR	4784701	AssignmentExpression	j = 0		4784689	0		=			
ANR	4784702	Identifier	j		4784689	0					
ANR	4784703	PrimaryExpression	0		4784689	1					
ANR	4784704	Condition	j < nargs	134:13:2914:2922	4784689	1	True				
ANR	4784705	RelationalExpression	j < nargs		4784689	0		<			
ANR	4784706	Identifier	j		4784689	0					
ANR	4784707	Identifier	nargs		4784689	1					
ANR	4784708	PostIncDecOperationExpression	j ++	134:24:2925:2927	4784689	2	True				
ANR	4784709	Identifier	j		4784689	0					
ANR	4784710	IncDec	++		4784689	1					
ANR	4784711	CompoundStatement		5:2:61:93	4784689	3					
ANR	4784712	ExpressionStatement	k = j * R_SZ	135:2:2934:2946	4784689	0	True				
ANR	4784713	AssignmentExpression	k = j * R_SZ		4784689	0		=			
ANR	4784714	Identifier	k		4784689	0					
ANR	4784715	MultiplicativeExpression	j * R_SZ		4784689	1		*			
ANR	4784716	Identifier	j		4784689	0					
ANR	4784717	Identifier	R_SZ		4784689	1					
ANR	4784718	IdentifierDeclStatement	const char * reg = getreg ( j + 1 ) ;	136:2:2950:2982	4784689	1	True				
ANR	4784719	IdentifierDecl	* reg = getreg ( j + 1 )		4784689	0					
ANR	4784720	IdentifierDeclType	const char *		4784689	0					
ANR	4784721	Identifier	reg		4784689	1					
ANR	4784722	AssignmentExpression	* reg = getreg ( j + 1 )		4784689	2		=			
ANR	4784723	Identifier	reg		4784689	0					
ANR	4784724	CallExpression	getreg ( j + 1 )		4784689	1					
ANR	4784725	Callee	getreg		4784689	0					
ANR	4784726	Identifier	getreg		4784689	0					
ANR	4784727	ArgumentList	j + 1		4784689	1					
ANR	4784728	Argument	j + 1		4784689	0					
ANR	4784729	AdditiveExpression	j + 1		4784689	0		+			
ANR	4784730	Identifier	j		4784689	0					
ANR	4784731	PrimaryExpression	1		4784689	1					
ANR	4784732	IfStatement	if ( ! reg )		4784689	2					
ANR	4784733	Condition	! reg	137:6:2990:2993	4784689	0	True				
ANR	4784734	UnaryOperationExpression	! reg		4784689	0					
ANR	4784735	UnaryOperator	!		4784689	0					
ANR	4784736	Identifier	reg		4784689	1					
ANR	4784737	CompoundStatement		6:12:107:107	4784689	1					
ANR	4784738	ExpressionStatement	"eprintf ( ""Cannot find gpr %d\\n"" , j + 1 )"	138:3:3001:3040	4784689	0	True				
ANR	4784739	CallExpression	"eprintf ( ""Cannot find gpr %d\\n"" , j + 1 )"		4784689	0					
ANR	4784740	Callee	eprintf		4784689	0					
ANR	4784741	Identifier	eprintf		4784689	0					
ANR	4784742	ArgumentList	"""Cannot find gpr %d\\n"""		4784689	1					
ANR	4784743	Argument	"""Cannot find gpr %d\\n"""		4784689	0					
ANR	4784744	PrimaryExpression	"""Cannot find gpr %d\\n"""		4784689	0					
ANR	4784745	Argument	j + 1		4784689	1					
ANR	4784746	AdditiveExpression	j + 1		4784689	0		+			
ANR	4784747	Identifier	j		4784689	0					
ANR	4784748	PrimaryExpression	1		4784689	1					
ANR	4784749	BreakStatement	break ;	139:3:3045:3050	4784689	1	True				
ANR	4784750	IfStatement	if ( attsyntax )		4784689	3					
ANR	4784751	Condition	attsyntax	141:6:3062:3070	4784689	0	True				
ANR	4784752	Identifier	attsyntax		4784689	0					
ANR	4784753	CompoundStatement		10:17:184:184	4784689	1					
ANR	4784754	Statement	r_egg_printf	142:3:3078:3089	4784689	0	True				
ANR	4784755	Statement	(	142:16:3091:3091	4784689	1	True				
ANR	4784756	Statement	egg	142:17:3092:3094	4784689	2	True				
ANR	4784757	Statement	","	142:20:3095:3095	4784689	3	True				
ANR	4784758	Statement	"""  mov %d(%%"""	142:22:3097:3109	4784689	4	True				
ANR	4784759	Statement	R_SP	142:35:3110:3113	4784689	5	True				
ANR	4784760	Statement	"""), %%%s\\n"""	142:39:3114:3124	4784689	6	True				
ANR	4784761	Statement	","	142:50:3125:3125	4784689	7	True				
ANR	4784762	Statement	k	142:52:3127:3127	4784689	8	True				
ANR	4784763	Statement	","	142:53:3128:3128	4784689	9	True				
ANR	4784764	Statement	reg	142:55:3130:3132	4784689	10	True				
ANR	4784765	Statement	)	142:58:3133:3133	4784689	11	True				
ANR	4784766	ExpressionStatement		142:59:3134:3134	4784689	12	True				
ANR	4784767	ElseStatement	else		4784689	0					
ANR	4784768	CompoundStatement		12:9:256:256	4784689	0					
ANR	4784769	IfStatement	if ( k > 0 )		4784689	0					
ANR	4784770	Condition	k > 0	144:7:3154:3158	4784689	0	True				
ANR	4784771	RelationalExpression	k > 0		4784689	0		>			
ANR	4784772	Identifier	k		4784689	0					
ANR	4784773	PrimaryExpression	0		4784689	1					
ANR	4784774	CompoundStatement		13:14:272:272	4784689	1					
ANR	4784775	Statement	r_egg_printf	145:4:3167:3178	4784689	0	True				
ANR	4784776	Statement	(	145:17:3180:3180	4784689	1	True				
ANR	4784777	Statement	egg	145:18:3181:3183	4784689	2	True				
ANR	4784778	Statement	","	145:21:3184:3184	4784689	3	True				
ANR	4784779	Statement	"""  mov %s, ["""	145:23:3186:3198	4784689	4	True				
ANR	4784780	Statement	R_SP	145:36:3199:3202	4784689	5	True				
ANR	4784781	Statement	"""+%d]\\n"""	145:40:3203:3210	4784689	6	True				
ANR	4784782	Statement	","	145:48:3211:3211	4784689	7	True				
ANR	4784783	Statement	reg	145:50:3213:3215	4784689	8	True				
ANR	4784784	Statement	","	145:53:3216:3216	4784689	9	True				
ANR	4784785	Statement	k	145:55:3218:3218	4784689	10	True				
ANR	4784786	Statement	)	145:56:3219:3219	4784689	11	True				
ANR	4784787	ExpressionStatement		145:57:3220:3220	4784689	12	True				
ANR	4784788	ElseStatement	else		4784689	0					
ANR	4784789	IfStatement	if ( k < 0 )		4784689	0					
ANR	4784790	Condition	k < 0	146:14:3236:3240	4784689	0	True				
ANR	4784791	RelationalExpression	k < 0		4784689	0		<			
ANR	4784792	Identifier	k		4784689	0					
ANR	4784793	PrimaryExpression	0		4784689	1					
ANR	4784794	CompoundStatement		15:21:354:354	4784689	1					
ANR	4784795	Statement	r_egg_printf	147:4:3249:3260	4784689	0	True				
ANR	4784796	Statement	(	147:17:3262:3262	4784689	1	True				
ANR	4784797	Statement	egg	147:18:3263:3265	4784689	2	True				
ANR	4784798	Statement	","	147:21:3266:3266	4784689	3	True				
ANR	4784799	Statement	"""  mov %s, ["""	147:23:3268:3280	4784689	4	True				
ANR	4784800	Statement	R_SP	147:36:3281:3284	4784689	5	True				
ANR	4784801	Statement	"""%d]\\n"""	147:40:3285:3291	4784689	6	True				
ANR	4784802	Statement	","	147:47:3292:3292	4784689	7	True				
ANR	4784803	Statement	reg	147:49:3294:3296	4784689	8	True				
ANR	4784804	Statement	","	147:52:3297:3297	4784689	9	True				
ANR	4784805	Statement	k	147:54:3299:3299	4784689	10	True				
ANR	4784806	Statement	)	147:55:3300:3300	4784689	11	True				
ANR	4784807	ExpressionStatement		147:56:3301:3301	4784689	12	True				
ANR	4784808	ElseStatement	else		4784689	0					
ANR	4784809	CompoundStatement		17:10:424:424	4784689	0					
ANR	4784810	Statement	r_egg_printf	149:4:3319:3330	4784689	0	True				
ANR	4784811	Statement	(	149:17:3332:3332	4784689	1	True				
ANR	4784812	Statement	egg	149:18:3333:3335	4784689	2	True				
ANR	4784813	Statement	","	149:21:3336:3336	4784689	3	True				
ANR	4784814	Statement	"""  mov %s, ["""	149:23:3338:3350	4784689	4	True				
ANR	4784815	Statement	R_SP	149:36:3351:3354	4784689	5	True				
ANR	4784816	Statement	"""]\\n"""	149:40:3355:3359	4784689	6	True				
ANR	4784817	Statement	","	149:45:3360:3360	4784689	7	True				
ANR	4784818	Statement	reg	149:47:3362:3364	4784689	8	True				
ANR	4784819	Statement	","	149:50:3365:3365	4784689	9	True				
ANR	4784820	Statement	k	149:52:3367:3367	4784689	10	True				
ANR	4784821	Statement	)	149:53:3368:3368	4784689	11	True				
ANR	4784822	ExpressionStatement		149:54:3369:3369	4784689	12	True				
ANR	4784823	ReturnType	static void		4784689	1					
ANR	4784824	Identifier	emit_syscall_args		4784689	2					
ANR	4784825	ParameterList	"REgg * egg , int nargs"		4784689	3					
ANR	4784826	Parameter	REgg * egg	132:30:2866:2874	4784689	0	True				
ANR	4784827	ParameterType	REgg *		4784689	0					
ANR	4784828	Identifier	egg		4784689	1					
ANR	4784829	Parameter	int nargs	132:41:2877:2885	4784689	1	True				
ANR	4784830	ParameterType	int		4784689	0					
ANR	4784831	Identifier	nargs		4784689	1					
ANR	4784832	CFGEntryNode	ENTRY		4784689		True				
ANR	4784833	CFGExitNode	EXIT		4784689		True				
ANR	4784834	Symbol	nargs		4784689						
ANR	4784835	Symbol	R_SZ		4784689						
ANR	4784836	Symbol	egg		4784689						
ANR	4784837	Symbol	reg		4784689						
ANR	4784838	Symbol	getreg		4784689						
ANR	4784839	Symbol	attsyntax		4784689						
ANR	4784840	Symbol	j		4784689						
ANR	4784841	Symbol	k		4784689						
ANR	4784842	Function	emit_string	155:0:3386:5391							
ANR	4784843	FunctionDef	"emit_string (REgg * egg , const char * dstvar , const char * str , int j)"		4784842	0					
ANR	4784844	CompoundStatement		155:79:3465:5391	4784842	0					
ANR	4784845	IdentifierDeclStatement	"char * p , str2 [ 64 ] ;"	156:1:3468:3485	4784842	0	True				
ANR	4784846	IdentifierDecl	* p		4784842	0					
ANR	4784847	IdentifierDeclType	char *		4784842	0					
ANR	4784848	Identifier	p		4784842	1					
ANR	4784849	IdentifierDecl	str2 [ 64 ]		4784842	1					
ANR	4784850	IdentifierDeclType	char [ 64 ]		4784842	0					
ANR	4784851	Identifier	str2		4784842	1					
ANR	4784852	PrimaryExpression	64		4784842	2					
ANR	4784853	IdentifierDeclStatement	"int i , oj = j ;"	157:1:3488:3501	4784842	1	True				
ANR	4784854	IdentifierDecl	i		4784842	0					
ANR	4784855	IdentifierDeclType	int		4784842	0					
ANR	4784856	Identifier	i		4784842	1					
ANR	4784857	IdentifierDecl	oj = j		4784842	1					
ANR	4784858	IdentifierDeclType	int		4784842	0					
ANR	4784859	Identifier	oj		4784842	1					
ANR	4784860	AssignmentExpression	oj = j		4784842	2		=			
ANR	4784861	Identifier	j		4784842	0					
ANR	4784862	Identifier	j		4784842	1					
ANR	4784863	IdentifierDeclStatement	int len = strlen ( str ) ;	159:1:3505:3527	4784842	2	True				
ANR	4784864	IdentifierDecl	len = strlen ( str )		4784842	0					
ANR	4784865	IdentifierDeclType	int		4784842	0					
ANR	4784866	Identifier	len		4784842	1					
ANR	4784867	AssignmentExpression	len = strlen ( str )		4784842	2		=			
ANR	4784868	Identifier	len		4784842	0					
ANR	4784869	CallExpression	strlen ( str )		4784842	1					
ANR	4784870	Callee	strlen		4784842	0					
ANR	4784871	Identifier	strlen		4784842	0					
ANR	4784872	ArgumentList	str		4784842	1					
ANR	4784873	Argument	str		4784842	0					
ANR	4784874	Identifier	str		4784842	0					
ANR	4784875	IdentifierDeclStatement	"char * s = calloc ( 1 , len + 8 ) ;"	160:1:3530:3559	4784842	3	True				
ANR	4784876	IdentifierDecl	"* s = calloc ( 1 , len + 8 )"		4784842	0					
ANR	4784877	IdentifierDeclType	char *		4784842	0					
ANR	4784878	Identifier	s		4784842	1					
ANR	4784879	AssignmentExpression	"* s = calloc ( 1 , len + 8 )"		4784842	2		=			
ANR	4784880	Identifier	s		4784842	0					
ANR	4784881	CallExpression	"calloc ( 1 , len + 8 )"		4784842	1					
ANR	4784882	Callee	calloc		4784842	0					
ANR	4784883	Identifier	calloc		4784842	0					
ANR	4784884	ArgumentList	1		4784842	1					
ANR	4784885	Argument	1		4784842	0					
ANR	4784886	PrimaryExpression	1		4784842	0					
ANR	4784887	Argument	len + 8		4784842	1					
ANR	4784888	AdditiveExpression	len + 8		4784842	0		+			
ANR	4784889	Identifier	len		4784842	0					
ANR	4784890	PrimaryExpression	8		4784842	1					
ANR	4784891	IfStatement	if ( ! s )		4784842	4					
ANR	4784892	Condition	! s	161:5:3566:3567	4784842	0	True				
ANR	4784893	UnaryOperationExpression	! s		4784842	0					
ANR	4784894	UnaryOperator	!		4784842	0					
ANR	4784895	Identifier	s		4784842	1					
ANR	4784896	CompoundStatement		7:9:104:104	4784842	1					
ANR	4784897	ReturnStatement	return ;	162:2:3574:3580	4784842	0	True				
ANR	4784898	ExpressionStatement	"memcpy ( s , str , len )"	164:1:3586:3606	4784842	5	True				
ANR	4784899	CallExpression	"memcpy ( s , str , len )"		4784842	0					
ANR	4784900	Callee	memcpy		4784842	0					
ANR	4784901	Identifier	memcpy		4784842	0					
ANR	4784902	ArgumentList	s		4784842	1					
ANR	4784903	Argument	s		4784842	0					
ANR	4784904	Identifier	s		4784842	0					
ANR	4784905	Argument	str		4784842	1					
ANR	4784906	Identifier	str		4784842	0					
ANR	4784907	Argument	len		4784842	2					
ANR	4784908	Identifier	len		4784842	0					
ANR	4784909	ExpressionStatement	"memset ( s + len , 0 , 4 )"	165:1:3609:3631	4784842	6	True				
ANR	4784910	CallExpression	"memset ( s + len , 0 , 4 )"		4784842	0					
ANR	4784911	Callee	memset		4784842	0					
ANR	4784912	Identifier	memset		4784842	0					
ANR	4784913	ArgumentList	s + len		4784842	1					
ANR	4784914	Argument	s + len		4784842	0					
ANR	4784915	AdditiveExpression	s + len		4784842	0		+			
ANR	4784916	Identifier	s		4784842	0					
ANR	4784917	Identifier	len		4784842	1					
ANR	4784918	Argument	0		4784842	1					
ANR	4784919	PrimaryExpression	0		4784842	0					
ANR	4784920	Argument	4		4784842	2					
ANR	4784921	PrimaryExpression	4		4784842	0					
ANR	4784922	Statement	define	168:1:3703:3708	4784842	7	True				
ANR	4784923	Statement	BPOFF	168:8:3710:3714	4784842	8	True				
ANR	4784924	Statement	(	168:14:3716:3716	4784842	9	True				
ANR	4784925	Statement	R_SZ	168:15:3717:3720	4784842	10	True				
ANR	4784926	Statement	-	168:19:3721:3721	4784842	11	True				
ANR	4784927	Statement	4	168:20:3722:3722	4784842	12	True				
ANR	4784928	Statement	)	168:21:3723:3723	4784842	13	True				
ANR	4784929	Statement	define	169:1:3726:3731	4784842	14	True				
ANR	4784930	Statement	M32	169:8:3733:3735	4784842	15	True				
ANR	4784931	Statement	(	169:11:3736:3736	4784842	16	True				
ANR	4784932	Statement	x	169:12:3737:3737	4784842	17	True				
ANR	4784933	Statement	)	169:13:3738:3738	4784842	18	True				
ANR	4784934	Statement	(	169:15:3740:3740	4784842	19	True				
ANR	4784935	Statement	unsigned	169:16:3741:3748	4784842	20	True				
ANR	4784936	Statement	int	169:25:3750:3752	4784842	21	True				
ANR	4784937	Statement	)	169:28:3753:3753	4784842	22	True				
ANR	4784938	Statement	(	169:29:3754:3754	4784842	23	True				
ANR	4784939	Statement	(	169:30:3755:3755	4784842	24	True				
ANR	4784940	Statement	x	169:31:3756:3756	4784842	25	True				
ANR	4784941	Statement	)	169:32:3757:3757	4784842	26	True				
ANR	4784942	Statement	&	169:34:3759:3759	4784842	27	True				
ANR	4784943	Statement	0xffffffff	169:36:3761:3770	4784842	28	True				
ANR	4784944	Statement	)	169:46:3771:3771	4784842	29	True				
ANR	4784945	ForStatement	for ( i = 4 ; i <= oj ; i += 4 )		4784842	30					
ANR	4784946	ForInit	i = 4 ;	171:6:3817:3820	4784842	0	True				
ANR	4784947	AssignmentExpression	i = 4		4784842	0		=			
ANR	4784948	Identifier	i		4784842	0					
ANR	4784949	PrimaryExpression	4		4784842	1					
ANR	4784950	Condition	i <= oj	171:11:3822:3826	4784842	1	True				
ANR	4784951	RelationalExpression	i <= oj		4784842	0		<=			
ANR	4784952	Identifier	i		4784842	0					
ANR	4784953	Identifier	oj		4784842	1					
ANR	4784954	AssignmentExpression	i += 4	171:18:3829:3832	4784842	2	True	+=			
ANR	4784955	Identifier	i		4784842	0					
ANR	4784956	PrimaryExpression	4		4784842	1					
ANR	4784957	CompoundStatement		19:2:418:443	4784842	3					
ANR	4784958	IdentifierDeclStatement	ut32 * n = ( ut32 * ) ( s + i - 4 ) ;	173:2:3884:3909	4784842	0	True				
ANR	4784959	IdentifierDecl	* n = ( ut32 * ) ( s + i - 4 )		4784842	0					
ANR	4784960	IdentifierDeclType	ut32 *		4784842	0					
ANR	4784961	Identifier	n		4784842	1					
ANR	4784962	AssignmentExpression	* n = ( ut32 * ) ( s + i - 4 )		4784842	2		=			
ANR	4784963	Identifier	n		4784842	0					
ANR	4784964	CastExpression	( ut32 * ) ( s + i - 4 )		4784842	1					
ANR	4784965	CastTarget	ut32 *		4784842	0					
ANR	4784966	AdditiveExpression	s + i - 4		4784842	1		+			
ANR	4784967	Identifier	s		4784842	0					
ANR	4784968	AdditiveExpression	i - 4		4784842	1		-			
ANR	4784969	Identifier	i		4784842	0					
ANR	4784970	PrimaryExpression	4		4784842	1					
ANR	4784971	ExpressionStatement	"p = r_egg_mkvar ( egg , str2 , dstvar , i + BPOFF )"	174:2:3913:3957	4784842	1	True				
ANR	4784972	AssignmentExpression	"p = r_egg_mkvar ( egg , str2 , dstvar , i + BPOFF )"		4784842	0		=			
ANR	4784973	Identifier	p		4784842	0					
ANR	4784974	CallExpression	"r_egg_mkvar ( egg , str2 , dstvar , i + BPOFF )"		4784842	1					
ANR	4784975	Callee	r_egg_mkvar		4784842	0					
ANR	4784976	Identifier	r_egg_mkvar		4784842	0					
ANR	4784977	ArgumentList	egg		4784842	1					
ANR	4784978	Argument	egg		4784842	0					
ANR	4784979	Identifier	egg		4784842	0					
ANR	4784980	Argument	str2		4784842	1					
ANR	4784981	Identifier	str2		4784842	0					
ANR	4784982	Argument	dstvar		4784842	2					
ANR	4784983	Identifier	dstvar		4784842	0					
ANR	4784984	Argument	i + BPOFF		4784842	3					
ANR	4784985	AdditiveExpression	i + BPOFF		4784842	0		+			
ANR	4784986	Identifier	i		4784842	0					
ANR	4784987	Identifier	BPOFF		4784842	1					
ANR	4784988	IfStatement	if ( attsyntax )		4784842	2					
ANR	4784989	Condition	attsyntax	175:6:3965:3973	4784842	0	True				
ANR	4784990	Identifier	attsyntax		4784842	0					
ANR	4784991	CompoundStatement		21:17:510:510	4784842	1					
ANR	4784992	ExpressionStatement	"r_egg_printf ( egg , ""  movl $0x%x, %s\\n"" , M32 ( * n ) , p )"	176:3:3981:4034	4784842	0	True				
ANR	4784993	CallExpression	"r_egg_printf ( egg , ""  movl $0x%x, %s\\n"" , M32 ( * n ) , p )"		4784842	0					
ANR	4784994	Callee	r_egg_printf		4784842	0					
ANR	4784995	Identifier	r_egg_printf		4784842	0					
ANR	4784996	ArgumentList	egg		4784842	1					
ANR	4784997	Argument	egg		4784842	0					
ANR	4784998	Identifier	egg		4784842	0					
ANR	4784999	Argument	"""  movl $0x%x, %s\\n"""		4784842	1					
ANR	4785000	PrimaryExpression	"""  movl $0x%x, %s\\n"""		4784842	0					
ANR	4785001	Argument	M32 ( * n )		4784842	2					
ANR	4785002	CallExpression	M32 ( * n )		4784842	0					
ANR	4785003	Callee	M32		4784842	0					
ANR	4785004	Identifier	M32		4784842	0					
ANR	4785005	ArgumentList	* n		4784842	1					
ANR	4785006	Argument	* n		4784842	0					
ANR	4785007	UnaryOperationExpression	* n		4784842	0					
ANR	4785008	UnaryOperator	*		4784842	0					
ANR	4785009	Identifier	n		4784842	1					
ANR	4785010	Argument	p		4784842	3					
ANR	4785011	Identifier	p		4784842	0					
ANR	4785012	ElseStatement	else		4784842	0					
ANR	4785013	CompoundStatement		23:9:579:579	4784842	0					
ANR	4785014	ExpressionStatement	"r_egg_printf ( egg , ""  mov dword %s, 0x%x\\n"" , p , M32 ( * n ) )"	178:3:4050:4107	4784842	0	True				
ANR	4785015	CallExpression	"r_egg_printf ( egg , ""  mov dword %s, 0x%x\\n"" , p , M32 ( * n ) )"		4784842	0					
ANR	4785016	Callee	r_egg_printf		4784842	0					
ANR	4785017	Identifier	r_egg_printf		4784842	0					
ANR	4785018	ArgumentList	egg		4784842	1					
ANR	4785019	Argument	egg		4784842	0					
ANR	4785020	Identifier	egg		4784842	0					
ANR	4785021	Argument	"""  mov dword %s, 0x%x\\n"""		4784842	1					
ANR	4785022	PrimaryExpression	"""  mov dword %s, 0x%x\\n"""		4784842	0					
ANR	4785023	Argument	p		4784842	2					
ANR	4785024	Identifier	p		4784842	0					
ANR	4785025	Argument	M32 ( * n )		4784842	3					
ANR	4785026	CallExpression	M32 ( * n )		4784842	0					
ANR	4785027	Callee	M32		4784842	0					
ANR	4785028	Identifier	M32		4784842	0					
ANR	4785029	ArgumentList	* n		4784842	1					
ANR	4785030	Argument	* n		4784842	0					
ANR	4785031	UnaryOperationExpression	* n		4784842	0					
ANR	4785032	UnaryOperator	*		4784842	0					
ANR	4785033	Identifier	n		4784842	1					
ANR	4785034	ExpressionStatement	free ( p )	180:2:4115:4123	4784842	3	True				
ANR	4785035	CallExpression	free ( p )		4784842	0					
ANR	4785036	Callee	free		4784842	0					
ANR	4785037	Identifier	free		4784842	0					
ANR	4785038	ArgumentList	p		4784842	1					
ANR	4785039	Argument	p		4784842	0					
ANR	4785040	Identifier	p		4784842	0					
ANR	4785041	ExpressionStatement	j -= 4	181:2:4127:4133	4784842	4	True				
ANR	4785042	AssignmentExpression	j -= 4		4784842	0		-=			
ANR	4785043	Identifier	j		4784842	0					
ANR	4785044	PrimaryExpression	4		4784842	1					
ANR	4785045	IdentifierDeclStatement	"undef M32 p = r_egg_mkvar ( egg , str2 , dstvar , i + BPOFF ) ;"	183:1:4139:4207	4784842	31	True				
ANR	4785046	IdentifierDecl	"p = r_egg_mkvar ( egg , str2 , dstvar , i + BPOFF )"		4784842	0					
ANR	4785047	IdentifierDeclType	undef M32		4784842	0					
ANR	4785048	Identifier	p		4784842	1					
ANR	4785049	AssignmentExpression	"p = r_egg_mkvar ( egg , str2 , dstvar , i + BPOFF )"		4784842	2		=			
ANR	4785050	Identifier	p		4784842	0					
ANR	4785051	CallExpression	"r_egg_mkvar ( egg , str2 , dstvar , i + BPOFF )"		4784842	1					
ANR	4785052	Callee	r_egg_mkvar		4784842	0					
ANR	4785053	Identifier	r_egg_mkvar		4784842	0					
ANR	4785054	ArgumentList	egg		4784842	1					
ANR	4785055	Argument	egg		4784842	0					
ANR	4785056	Identifier	egg		4784842	0					
ANR	4785057	Argument	str2		4784842	1					
ANR	4785058	Identifier	str2		4784842	0					
ANR	4785059	Argument	dstvar		4784842	2					
ANR	4785060	Identifier	dstvar		4784842	0					
ANR	4785061	Argument	i + BPOFF		4784842	3					
ANR	4785062	AdditiveExpression	i + BPOFF		4784842	0		+			
ANR	4785063	Identifier	i		4784842	0					
ANR	4785064	Identifier	BPOFF		4784842	1					
ANR	4785065	IfStatement	if ( attsyntax )		4784842	32					
ANR	4785066	Condition	attsyntax	187:5:4214:4222	4784842	0	True				
ANR	4785067	Identifier	attsyntax		4784842	0					
ANR	4785068	CompoundStatement		33:16:759:759	4784842	1					
ANR	4785069	ExpressionStatement	"r_egg_printf ( egg , ""  movl $0, %s\\n"" , p )"	188:2:4229:4269	4784842	0	True				
ANR	4785070	CallExpression	"r_egg_printf ( egg , ""  movl $0, %s\\n"" , p )"		4784842	0					
ANR	4785071	Callee	r_egg_printf		4784842	0					
ANR	4785072	Identifier	r_egg_printf		4784842	0					
ANR	4785073	ArgumentList	egg		4784842	1					
ANR	4785074	Argument	egg		4784842	0					
ANR	4785075	Identifier	egg		4784842	0					
ANR	4785076	Argument	"""  movl $0, %s\\n"""		4784842	1					
ANR	4785077	PrimaryExpression	"""  movl $0, %s\\n"""		4784842	0					
ANR	4785078	Argument	p		4784842	2					
ANR	4785079	Identifier	p		4784842	0					
ANR	4785080	ElseStatement	else		4784842	0					
ANR	4785081	CompoundStatement		35:8:813:813	4784842	0					
ANR	4785082	ExpressionStatement	"r_egg_printf ( egg , ""  mov dword %s, 0\\n"" , p )"	190:2:4283:4327	4784842	0	True				
ANR	4785083	CallExpression	"r_egg_printf ( egg , ""  mov dword %s, 0\\n"" , p )"		4784842	0					
ANR	4785084	Callee	r_egg_printf		4784842	0					
ANR	4785085	Identifier	r_egg_printf		4784842	0					
ANR	4785086	ArgumentList	egg		4784842	1					
ANR	4785087	Argument	egg		4784842	0					
ANR	4785088	Identifier	egg		4784842	0					
ANR	4785089	Argument	"""  mov dword %s, 0\\n"""		4784842	1					
ANR	4785090	PrimaryExpression	"""  mov dword %s, 0\\n"""		4784842	0					
ANR	4785091	Argument	p		4784842	2					
ANR	4785092	Identifier	p		4784842	0					
ANR	4785093	ExpressionStatement	free ( p )	192:1:4333:4341	4784842	33	True				
ANR	4785094	CallExpression	free ( p )		4784842	0					
ANR	4785095	Callee	free		4784842	0					
ANR	4785096	Identifier	free		4784842	0					
ANR	4785097	ArgumentList	p		4784842	1					
ANR	4785098	Argument	p		4784842	0					
ANR	4785099	Identifier	p		4784842	0					
ANR	4785100	ExpressionStatement	"p = r_egg_mkvar ( egg , str2 , dstvar , j + 4 + BPOFF )"	195:1:4366:4412	4784842	34	True				
ANR	4785101	AssignmentExpression	"p = r_egg_mkvar ( egg , str2 , dstvar , j + 4 + BPOFF )"		4784842	0		=			
ANR	4785102	Identifier	p		4784842	0					
ANR	4785103	CallExpression	"r_egg_mkvar ( egg , str2 , dstvar , j + 4 + BPOFF )"		4784842	1					
ANR	4785104	Callee	r_egg_mkvar		4784842	0					
ANR	4785105	Identifier	r_egg_mkvar		4784842	0					
ANR	4785106	ArgumentList	egg		4784842	1					
ANR	4785107	Argument	egg		4784842	0					
ANR	4785108	Identifier	egg		4784842	0					
ANR	4785109	Argument	str2		4784842	1					
ANR	4785110	Identifier	str2		4784842	0					
ANR	4785111	Argument	dstvar		4784842	2					
ANR	4785112	Identifier	dstvar		4784842	0					
ANR	4785113	Argument	j + 4 + BPOFF		4784842	3					
ANR	4785114	AdditiveExpression	j + 4 + BPOFF		4784842	0		+			
ANR	4785115	Identifier	j		4784842	0					
ANR	4785116	AdditiveExpression	4 + BPOFF		4784842	1		+			
ANR	4785117	PrimaryExpression	4		4784842	0					
ANR	4785118	Identifier	BPOFF		4784842	1					
ANR	4785119	IfStatement	if ( attsyntax )		4784842	35					
ANR	4785120	Condition	attsyntax	196:5:4419:4427	4784842	0	True				
ANR	4785121	Identifier	attsyntax		4784842	0					
ANR	4785122	CompoundStatement		42:16:964:964	4784842	1					
ANR	4785123	Statement	r_egg_printf	197:2:4434:4445	4784842	0	True				
ANR	4785124	Statement	(	197:15:4447:4447	4784842	1	True				
ANR	4785125	Statement	egg	197:16:4448:4450	4784842	2	True				
ANR	4785126	Statement	","	197:19:4451:4451	4784842	3	True				
ANR	4785127	Statement	"""  lea %s, %%"""	197:21:4453:4466	4784842	4	True				
ANR	4785128	Statement	R_AX	197:36:4468:4471	4784842	5	True				
ANR	4785129	Statement	"""\\n"""	197:41:4473:4476	4784842	6	True				
ANR	4785130	Statement	","	197:45:4477:4477	4784842	7	True				
ANR	4785131	Statement	p	197:47:4479:4479	4784842	8	True				
ANR	4785132	Statement	)	197:48:4480:4480	4784842	9	True				
ANR	4785133	ExpressionStatement		197:49:4481:4481	4784842	10	True				
ANR	4785134	ElseStatement	else		4784842	0					
ANR	4785135	CompoundStatement		44:8:1025:1025	4784842	0					
ANR	4785136	Statement	r_egg_printf	199:2:4495:4506	4784842	0	True				
ANR	4785137	Statement	(	199:15:4508:4508	4784842	1	True				
ANR	4785138	Statement	egg	199:16:4509:4511	4784842	2	True				
ANR	4785139	Statement	","	199:19:4512:4512	4784842	3	True				
ANR	4785140	Statement	"""  lea """	199:21:4514:4521	4784842	4	True				
ANR	4785141	Statement	R_AX	199:30:4523:4526	4784842	5	True				
ANR	4785142	Statement	""", %s\\n"""	199:35:4528:4535	4784842	6	True				
ANR	4785143	Statement	","	199:43:4536:4536	4784842	7	True				
ANR	4785144	Statement	p	199:45:4538:4538	4784842	8	True				
ANR	4785145	Statement	)	199:46:4539:4539	4784842	9	True				
ANR	4785146	ExpressionStatement		199:47:4540:4540	4784842	10	True				
ANR	4785147	ExpressionStatement	free ( p )	201:1:4546:4554	4784842	36	True				
ANR	4785148	CallExpression	free ( p )		4784842	0					
ANR	4785149	Callee	free		4784842	0					
ANR	4785150	Identifier	free		4784842	0					
ANR	4785151	ArgumentList	p		4784842	1					
ANR	4785152	Argument	p		4784842	0					
ANR	4785153	Identifier	p		4784842	0					
ANR	4785154	ExpressionStatement	"p = r_egg_mkvar ( egg , str2 , dstvar , 0 )"	203:1:4558:4596	4784842	37	True				
ANR	4785155	AssignmentExpression	"p = r_egg_mkvar ( egg , str2 , dstvar , 0 )"		4784842	0		=			
ANR	4785156	Identifier	p		4784842	0					
ANR	4785157	CallExpression	"r_egg_mkvar ( egg , str2 , dstvar , 0 )"		4784842	1					
ANR	4785158	Callee	r_egg_mkvar		4784842	0					
ANR	4785159	Identifier	r_egg_mkvar		4784842	0					
ANR	4785160	ArgumentList	egg		4784842	1					
ANR	4785161	Argument	egg		4784842	0					
ANR	4785162	Identifier	egg		4784842	0					
ANR	4785163	Argument	str2		4784842	1					
ANR	4785164	Identifier	str2		4784842	0					
ANR	4785165	Argument	dstvar		4784842	2					
ANR	4785166	Identifier	dstvar		4784842	0					
ANR	4785167	Argument	0		4784842	3					
ANR	4785168	PrimaryExpression	0		4784842	0					
ANR	4785169	IfStatement	if ( attsyntax )		4784842	38					
ANR	4785170	Condition	attsyntax	204:5:4603:4611	4784842	0	True				
ANR	4785171	Identifier	attsyntax		4784842	0					
ANR	4785172	CompoundStatement		50:16:1148:1148	4784842	1					
ANR	4785173	Statement	r_egg_printf	205:2:4618:4629	4784842	0	True				
ANR	4785174	Statement	(	205:15:4631:4631	4784842	1	True				
ANR	4785175	Statement	egg	205:16:4632:4634	4784842	2	True				
ANR	4785176	Statement	","	205:19:4635:4635	4784842	3	True				
ANR	4785177	Statement	"""  mov %%"""	205:21:4637:4646	4784842	4	True				
ANR	4785178	Statement	R_AX	205:32:4648:4651	4784842	5	True				
ANR	4785179	Statement	""", %s\\n"""	205:37:4653:4660	4784842	6	True				
ANR	4785180	Statement	","	205:45:4661:4661	4784842	7	True				
ANR	4785181	Statement	p	205:47:4663:4663	4784842	8	True				
ANR	4785182	Statement	)	205:48:4664:4664	4784842	9	True				
ANR	4785183	ExpressionStatement		205:49:4665:4665	4784842	10	True				
ANR	4785184	ElseStatement	else		4784842	0					
ANR	4785185	CompoundStatement		52:8:1209:1209	4784842	0					
ANR	4785186	Statement	r_egg_printf	207:2:4679:4690	4784842	0	True				
ANR	4785187	Statement	(	207:15:4692:4692	4784842	1	True				
ANR	4785188	Statement	egg	207:16:4693:4695	4784842	2	True				
ANR	4785189	Statement	","	207:19:4696:4696	4784842	3	True				
ANR	4785190	Statement	"""  mov %s, """	207:21:4698:4709	4784842	4	True				
ANR	4785191	Statement	R_AX	207:34:4711:4714	4784842	5	True				
ANR	4785192	Statement	"""\\n"""	207:39:4716:4719	4784842	6	True				
ANR	4785193	Statement	","	207:43:4720:4720	4784842	7	True				
ANR	4785194	Statement	p	207:45:4722:4722	4784842	8	True				
ANR	4785195	Statement	)	207:46:4723:4723	4784842	9	True				
ANR	4785196	ExpressionStatement		207:47:4724:4724	4784842	10	True				
ANR	4785197	ExpressionStatement	free ( p )	209:1:4730:4738	4784842	39	True				
ANR	4785198	CallExpression	free ( p )		4784842	0					
ANR	4785199	Callee	free		4784842	0					
ANR	4785200	Identifier	free		4784842	0					
ANR	4785201	ArgumentList	p		4784842	1					
ANR	4785202	Argument	p		4784842	0					
ANR	4785203	Identifier	p		4784842	0					
ANR	4785204	Statement	undef	211:1:4742:4746	4784842	40	True				
ANR	4785205	Statement	BPOFF	211:7:4748:4752	4784842	41	True				
ANR	4785206	IdentifierDeclStatement	"char * p , str2 [ 64 ] ;"	213:1:4761:4778	4784842	42	True				
ANR	4785207	IdentifierDecl	* p		4784842	0					
ANR	4785208	IdentifierDeclType	char *		4784842	0					
ANR	4785209	Identifier	p		4784842	1					
ANR	4785210	IdentifierDecl	str2 [ 64 ]		4784842	1					
ANR	4785211	IdentifierDeclType	char [ 64 ]		4784842	0					
ANR	4785212	Identifier	str2		4784842	1					
ANR	4785213	PrimaryExpression	64		4784842	2					
ANR	4785214	IdentifierDeclStatement	"int i , oj = j ;"	214:1:4781:4794	4784842	43	True				
ANR	4785215	IdentifierDecl	i		4784842	0					
ANR	4785216	IdentifierDeclType	int		4784842	0					
ANR	4785217	Identifier	i		4784842	1					
ANR	4785218	IdentifierDecl	oj = j		4784842	1					
ANR	4785219	IdentifierDeclType	int		4784842	0					
ANR	4785220	Identifier	oj		4784842	1					
ANR	4785221	AssignmentExpression	oj = j		4784842	2		=			
ANR	4785222	Identifier	j		4784842	0					
ANR	4785223	Identifier	j		4784842	1					
ANR	4785224	ForStatement	for ( i = 0 ; i < oj ; i += 4 )		4784842	44					
ANR	4785225	ForInit	i = 0 ;	215:6:4802:4805	4784842	0	True				
ANR	4785226	AssignmentExpression	i = 0		4784842	0		=			
ANR	4785227	Identifier	i		4784842	0					
ANR	4785228	PrimaryExpression	0		4784842	1					
ANR	4785229	Condition	i < oj	215:11:4807:4810	4784842	1	True				
ANR	4785230	RelationalExpression	i < oj		4784842	0		<			
ANR	4785231	Identifier	i		4784842	0					
ANR	4785232	Identifier	oj		4784842	1					
ANR	4785233	AssignmentExpression	i += 4	215:17:4813:4816	4784842	2	True	+=			
ANR	4785234	Identifier	i		4784842	0					
ANR	4785235	PrimaryExpression	4		4784842	1					
ANR	4785236	CompoundStatement		63:2:1396:1419	4784842	3					
ANR	4785237	IdentifierDeclStatement	int * n = ( int * ) ( str + i ) ;	217:2:4862:4885	4784842	0	True				
ANR	4785238	IdentifierDecl	* n = ( int * ) ( str + i )		4784842	0					
ANR	4785239	IdentifierDeclType	int *		4784842	0					
ANR	4785240	Identifier	n		4784842	1					
ANR	4785241	AssignmentExpression	* n = ( int * ) ( str + i )		4784842	2		=			
ANR	4785242	Identifier	n		4784842	0					
ANR	4785243	CastExpression	( int * ) ( str + i )		4784842	1					
ANR	4785244	CastTarget	int *		4784842	0					
ANR	4785245	AdditiveExpression	str + i		4784842	1		+			
ANR	4785246	Identifier	str		4784842	0					
ANR	4785247	Identifier	i		4784842	1					
ANR	4785248	ExpressionStatement	"p = r_egg_mkvar ( egg , str2 , dstvar , j )"	218:2:4889:4927	4784842	1	True				
ANR	4785249	AssignmentExpression	"p = r_egg_mkvar ( egg , str2 , dstvar , j )"		4784842	0		=			
ANR	4785250	Identifier	p		4784842	0					
ANR	4785251	CallExpression	"r_egg_mkvar ( egg , str2 , dstvar , j )"		4784842	1					
ANR	4785252	Callee	r_egg_mkvar		4784842	0					
ANR	4785253	Identifier	r_egg_mkvar		4784842	0					
ANR	4785254	ArgumentList	egg		4784842	1					
ANR	4785255	Argument	egg		4784842	0					
ANR	4785256	Identifier	egg		4784842	0					
ANR	4785257	Argument	str2		4784842	1					
ANR	4785258	Identifier	str2		4784842	0					
ANR	4785259	Argument	dstvar		4784842	2					
ANR	4785260	Identifier	dstvar		4784842	0					
ANR	4785261	Argument	j		4784842	3					
ANR	4785262	Identifier	j		4784842	0					
ANR	4785263	IfStatement	if ( attsyntax )		4784842	2					
ANR	4785264	Condition	attsyntax	219:6:4935:4943	4784842	0	True				
ANR	4785265	Identifier	attsyntax		4784842	0					
ANR	4785266	ExpressionStatement	"r_egg_printf ( egg , ""  movl $0x%x, %s\\n"" , * n , p )"	219:17:4946:4993	4784842	1	True				
ANR	4785267	CallExpression	"r_egg_printf ( egg , ""  movl $0x%x, %s\\n"" , * n , p )"		4784842	0					
ANR	4785268	Callee	r_egg_printf		4784842	0					
ANR	4785269	Identifier	r_egg_printf		4784842	0					
ANR	4785270	ArgumentList	egg		4784842	1					
ANR	4785271	Argument	egg		4784842	0					
ANR	4785272	Identifier	egg		4784842	0					
ANR	4785273	Argument	"""  movl $0x%x, %s\\n"""		4784842	1					
ANR	4785274	PrimaryExpression	"""  movl $0x%x, %s\\n"""		4784842	0					
ANR	4785275	Argument	* n		4784842	2					
ANR	4785276	UnaryOperationExpression	* n		4784842	0					
ANR	4785277	UnaryOperator	*		4784842	0					
ANR	4785278	Identifier	n		4784842	1					
ANR	4785279	Argument	p		4784842	3					
ANR	4785280	Identifier	p		4784842	0					
ANR	4785281	ElseStatement	else		4784842	0					
ANR	4785282	ExpressionStatement	"r_egg_printf ( egg , ""  mov %s, 0x%x\\n"" , p , * n )"	220:7:5002:5047	4784842	0	True				
ANR	4785283	CallExpression	"r_egg_printf ( egg , ""  mov %s, 0x%x\\n"" , p , * n )"		4784842	0					
ANR	4785284	Callee	r_egg_printf		4784842	0					
ANR	4785285	Identifier	r_egg_printf		4784842	0					
ANR	4785286	ArgumentList	egg		4784842	1					
ANR	4785287	Argument	egg		4784842	0					
ANR	4785288	Identifier	egg		4784842	0					
ANR	4785289	Argument	"""  mov %s, 0x%x\\n"""		4784842	1					
ANR	4785290	PrimaryExpression	"""  mov %s, 0x%x\\n"""		4784842	0					
ANR	4785291	Argument	p		4784842	2					
ANR	4785292	Identifier	p		4784842	0					
ANR	4785293	Argument	* n		4784842	3					
ANR	4785294	UnaryOperationExpression	* n		4784842	0					
ANR	4785295	UnaryOperator	*		4784842	0					
ANR	4785296	Identifier	n		4784842	1					
ANR	4785297	ExpressionStatement	j -= 4	221:2:5051:5057	4784842	3	True				
ANR	4785298	AssignmentExpression	j -= 4		4784842	0		-=			
ANR	4785299	Identifier	j		4784842	0					
ANR	4785300	PrimaryExpression	4		4784842	1					
ANR	4785301	ExpressionStatement	"p = r_egg_mkvar ( egg , str2 , dstvar , oj )"	223:1:5063:5102	4784842	45	True				
ANR	4785302	AssignmentExpression	"p = r_egg_mkvar ( egg , str2 , dstvar , oj )"		4784842	0		=			
ANR	4785303	Identifier	p		4784842	0					
ANR	4785304	CallExpression	"r_egg_mkvar ( egg , str2 , dstvar , oj )"		4784842	1					
ANR	4785305	Callee	r_egg_mkvar		4784842	0					
ANR	4785306	Identifier	r_egg_mkvar		4784842	0					
ANR	4785307	ArgumentList	egg		4784842	1					
ANR	4785308	Argument	egg		4784842	0					
ANR	4785309	Identifier	egg		4784842	0					
ANR	4785310	Argument	str2		4784842	1					
ANR	4785311	Identifier	str2		4784842	0					
ANR	4785312	Argument	dstvar		4784842	2					
ANR	4785313	Identifier	dstvar		4784842	0					
ANR	4785314	Argument	oj		4784842	3					
ANR	4785315	Identifier	oj		4784842	0					
ANR	4785316	IfStatement	if ( attsyntax )		4784842	46					
ANR	4785317	Condition	attsyntax	224:5:5109:5117	4784842	0	True				
ANR	4785318	Identifier	attsyntax		4784842	0					
ANR	4785319	Statement	r_egg_printf	224:16:5120:5131	4784842	1	True				
ANR	4785320	ElseStatement	else		4784842	0					
ANR	4785321	Statement	r_egg_printf	225:6:5173:5184	4784842	0	True				
ANR	4785322	Statement	(	224:29:5133:5133	4784842	47	True				
ANR	4785323	Statement	egg	224:30:5134:5136	4784842	48	True				
ANR	4785324	Statement	","	224:33:5137:5137	4784842	49	True				
ANR	4785325	Statement	"""  lea %s, %%"""	224:35:5139:5152	4784842	50	True				
ANR	4785326	Statement	R_AX	224:49:5153:5156	4784842	51	True				
ANR	4785327	Statement	"""\\n"""	224:53:5157:5160	4784842	52	True				
ANR	4785328	Statement	","	224:57:5161:5161	4784842	53	True				
ANR	4785329	Statement	p	224:59:5163:5163	4784842	54	True				
ANR	4785330	Statement	)	224:60:5164:5164	4784842	55	True				
ANR	4785331	ExpressionStatement		224:61:5165:5165	4784842	56	True				
ANR	4785332	Statement	(	225:19:5186:5186	4784842	57	True				
ANR	4785333	Statement	egg	225:20:5187:5189	4784842	58	True				
ANR	4785334	Statement	","	225:23:5190:5190	4784842	59	True				
ANR	4785335	Statement	"""  lea """	225:25:5192:5199	4784842	60	True				
ANR	4785336	Statement	R_AX	225:33:5200:5203	4784842	61	True				
ANR	4785337	Statement	""", %s\\n"""	225:37:5204:5211	4784842	62	True				
ANR	4785338	Statement	","	225:45:5212:5212	4784842	63	True				
ANR	4785339	Statement	p	225:47:5214:5214	4784842	64	True				
ANR	4785340	Statement	)	225:48:5215:5215	4784842	65	True				
ANR	4785341	ExpressionStatement		225:49:5216:5216	4784842	66	True				
ANR	4785342	ExpressionStatement	"p = r_egg_mkvar ( egg , str2 , dstvar , 0 )"	226:1:5219:5257	4784842	67	True				
ANR	4785343	AssignmentExpression	"p = r_egg_mkvar ( egg , str2 , dstvar , 0 )"		4784842	0		=			
ANR	4785344	Identifier	p		4784842	0					
ANR	4785345	CallExpression	"r_egg_mkvar ( egg , str2 , dstvar , 0 )"		4784842	1					
ANR	4785346	Callee	r_egg_mkvar		4784842	0					
ANR	4785347	Identifier	r_egg_mkvar		4784842	0					
ANR	4785348	ArgumentList	egg		4784842	1					
ANR	4785349	Argument	egg		4784842	0					
ANR	4785350	Identifier	egg		4784842	0					
ANR	4785351	Argument	str2		4784842	1					
ANR	4785352	Identifier	str2		4784842	0					
ANR	4785353	Argument	dstvar		4784842	2					
ANR	4785354	Identifier	dstvar		4784842	0					
ANR	4785355	Argument	0		4784842	3					
ANR	4785356	PrimaryExpression	0		4784842	0					
ANR	4785357	IfStatement	if ( attsyntax )		4784842	68					
ANR	4785358	Condition	attsyntax	227:5:5264:5272	4784842	0	True				
ANR	4785359	Identifier	attsyntax		4784842	0					
ANR	4785360	Statement	r_egg_printf	227:16:5275:5286	4784842	1	True				
ANR	4785361	ElseStatement	else		4784842	0					
ANR	4785362	Statement	r_egg_printf	228:6:5328:5339	4784842	0	True				
ANR	4785363	Statement	(	227:29:5288:5288	4784842	69	True				
ANR	4785364	Statement	egg	227:30:5289:5291	4784842	70	True				
ANR	4785365	Statement	","	227:33:5292:5292	4784842	71	True				
ANR	4785366	Statement	"""  mov %%"""	227:35:5294:5303	4784842	72	True				
ANR	4785367	Statement	R_AX	227:45:5304:5307	4784842	73	True				
ANR	4785368	Statement	""", %s\\n"""	227:49:5308:5315	4784842	74	True				
ANR	4785369	Statement	","	227:57:5316:5316	4784842	75	True				
ANR	4785370	Statement	p	227:59:5318:5318	4784842	76	True				
ANR	4785371	Statement	)	227:60:5319:5319	4784842	77	True				
ANR	4785372	ExpressionStatement		227:61:5320:5320	4784842	78	True				
ANR	4785373	Statement	(	228:19:5341:5341	4784842	79	True				
ANR	4785374	Statement	egg	228:20:5342:5344	4784842	80	True				
ANR	4785375	Statement	","	228:23:5345:5345	4784842	81	True				
ANR	4785376	Statement	"""  mov %s, """	228:25:5347:5358	4784842	82	True				
ANR	4785377	Statement	R_AX	228:37:5359:5362	4784842	83	True				
ANR	4785378	Statement	"""\\n"""	228:41:5363:5366	4784842	84	True				
ANR	4785379	Statement	","	228:45:5367:5367	4784842	85	True				
ANR	4785380	Statement	p	228:47:5369:5369	4784842	86	True				
ANR	4785381	Statement	)	228:48:5370:5370	4784842	87	True				
ANR	4785382	ExpressionStatement		228:49:5371:5371	4784842	88	True				
ANR	4785383	ExpressionStatement	free ( s )	230:1:5381:5389	4784842	89	True				
ANR	4785384	CallExpression	free ( s )		4784842	0					
ANR	4785385	Callee	free		4784842	0					
ANR	4785386	Identifier	free		4784842	0					
ANR	4785387	ArgumentList	s		4784842	1					
ANR	4785388	Argument	s		4784842	0					
ANR	4785389	Identifier	s		4784842	0					
ANR	4785390	ReturnType	static void		4784842	1					
ANR	4785391	Identifier	emit_string		4784842	2					
ANR	4785392	ParameterList	"REgg * egg , const char * dstvar , const char * str , int j"		4784842	3					
ANR	4785393	Parameter	REgg * egg	155:24:3410:3418	4784842	0	True				
ANR	4785394	ParameterType	REgg *		4784842	0					
ANR	4785395	Identifier	egg		4784842	1					
ANR	4785396	Parameter	const char * dstvar	155:35:3421:3438	4784842	1	True				
ANR	4785397	ParameterType	const char *		4784842	0					
ANR	4785398	Identifier	dstvar		4784842	1					
ANR	4785399	Parameter	const char * str	155:55:3441:3455	4784842	2	True				
ANR	4785400	ParameterType	const char *		4784842	0					
ANR	4785401	Identifier	str		4784842	1					
ANR	4785402	Parameter	int j	155:72:3458:3462	4784842	3	True				
ANR	4785403	ParameterType	int		4784842	0					
ANR	4785404	Identifier	j		4784842	1					
ANR	4785405	CFGEntryNode	ENTRY		4784842		True				
ANR	4785406	CFGExitNode	EXIT		4784842		True				
ANR	4785407	Symbol	r_egg_mkvar		4784842						
ANR	4785408	Symbol	egg		4784842						
ANR	4785409	Symbol	BPOFF		4784842						
ANR	4785410	Symbol	attsyntax		4784842						
ANR	4785411	Symbol	i		4784842						
ANR	4785412	Symbol	j		4784842						
ANR	4785413	Symbol	calloc		4784842						
ANR	4785414	Symbol	dstvar		4784842						
ANR	4785415	Symbol	M32		4784842						
ANR	4785416	Symbol	n		4784842						
ANR	4785417	Symbol	str		4784842						
ANR	4785418	Symbol	p		4784842						
ANR	4785419	Symbol	strlen		4784842						
ANR	4785420	Symbol	s		4784842						
ANR	4785421	Symbol	len		4784842						
ANR	4785422	Symbol	str2		4784842						
ANR	4785423	Symbol	* n		4784842						
ANR	4785424	Symbol	oj		4784842						
ANR	4785425	Function	emit_call	233:0:5394:5645							
ANR	4785426	FunctionDef	"emit_call (REgg * egg , const char * str , int atr)"		4785425	0					
ANR	4785427	CompoundStatement		233:59:5453:5645	4785425	0					
ANR	4785428	IfStatement	if ( atr )		4785425	0					
ANR	4785429	Condition	atr	234:5:5460:5462	4785425	0	True				
ANR	4785430	Identifier	atr		4785425	0					
ANR	4785431	CompoundStatement		2:10:11:11	4785425	1					
ANR	4785432	IfStatement	if ( attsyntax )		4785425	0					
ANR	4785433	Condition	attsyntax	235:6:5473:5481	4785425	0	True				
ANR	4785434	Identifier	attsyntax		4785425	0					
ANR	4785435	CompoundStatement		3:17:30:30	4785425	1					
ANR	4785436	ExpressionStatement	"r_egg_printf ( egg , ""  call *%s\\n"" , str )"	236:3:5489:5528	4785425	0	True				
ANR	4785437	CallExpression	"r_egg_printf ( egg , ""  call *%s\\n"" , str )"		4785425	0					
ANR	4785438	Callee	r_egg_printf		4785425	0					
ANR	4785439	Identifier	r_egg_printf		4785425	0					
ANR	4785440	ArgumentList	egg		4785425	1					
ANR	4785441	Argument	egg		4785425	0					
ANR	4785442	Identifier	egg		4785425	0					
ANR	4785443	Argument	"""  call *%s\\n"""		4785425	1					
ANR	4785444	PrimaryExpression	"""  call *%s\\n"""		4785425	0					
ANR	4785445	Argument	str		4785425	2					
ANR	4785446	Identifier	str		4785425	0					
ANR	4785447	ElseStatement	else		4785425	0					
ANR	4785448	CompoundStatement		5:9:85:85	4785425	0					
ANR	4785449	ExpressionStatement	"r_egg_printf ( egg , ""  call [%s]\\n"" , str )"	238:3:5544:5584	4785425	0	True				
ANR	4785450	CallExpression	"r_egg_printf ( egg , ""  call [%s]\\n"" , str )"		4785425	0					
ANR	4785451	Callee	r_egg_printf		4785425	0					
ANR	4785452	Identifier	r_egg_printf		4785425	0					
ANR	4785453	ArgumentList	egg		4785425	1					
ANR	4785454	Argument	egg		4785425	0					
ANR	4785455	Identifier	egg		4785425	0					
ANR	4785456	Argument	"""  call [%s]\\n"""		4785425	1					
ANR	4785457	PrimaryExpression	"""  call [%s]\\n"""		4785425	0					
ANR	4785458	Argument	str		4785425	2					
ANR	4785459	Identifier	str		4785425	0					
ANR	4785460	ElseStatement	else		4785425	0					
ANR	4785461	CompoundStatement		8:8:144:144	4785425	0					
ANR	4785462	ExpressionStatement	"r_egg_printf ( egg , ""  call %s\\n"" , str )"	241:2:5602:5640	4785425	0	True				
ANR	4785463	CallExpression	"r_egg_printf ( egg , ""  call %s\\n"" , str )"		4785425	0					
ANR	4785464	Callee	r_egg_printf		4785425	0					
ANR	4785465	Identifier	r_egg_printf		4785425	0					
ANR	4785466	ArgumentList	egg		4785425	1					
ANR	4785467	Argument	egg		4785425	0					
ANR	4785468	Identifier	egg		4785425	0					
ANR	4785469	Argument	"""  call %s\\n"""		4785425	1					
ANR	4785470	PrimaryExpression	"""  call %s\\n"""		4785425	0					
ANR	4785471	Argument	str		4785425	2					
ANR	4785472	Identifier	str		4785425	0					
ANR	4785473	ReturnType	static void		4785425	1					
ANR	4785474	Identifier	emit_call		4785425	2					
ANR	4785475	ParameterList	"REgg * egg , const char * str , int atr"		4785425	3					
ANR	4785476	Parameter	REgg * egg	233:22:5416:5424	4785425	0	True				
ANR	4785477	ParameterType	REgg *		4785425	0					
ANR	4785478	Identifier	egg		4785425	1					
ANR	4785479	Parameter	const char * str	233:33:5427:5441	4785425	1	True				
ANR	4785480	ParameterType	const char *		4785425	0					
ANR	4785481	Identifier	str		4785425	1					
ANR	4785482	Parameter	int atr	233:50:5444:5450	4785425	2	True				
ANR	4785483	ParameterType	int		4785425	0					
ANR	4785484	Identifier	atr		4785425	1					
ANR	4785485	CFGEntryNode	ENTRY		4785425		True				
ANR	4785486	CFGExitNode	EXIT		4785425		True				
ANR	4785487	Symbol	str		4785425						
ANR	4785488	Symbol	egg		4785425						
ANR	4785489	Symbol	attsyntax		4785425						
ANR	4785490	Symbol	atr		4785425						
ANR	4785491	Function	emit_jmp	245:0:5648:5971							
ANR	4785492	FunctionDef	"emit_jmp (REgg * egg , const char * str , int atr)"		4785491	0					
ANR	4785493	CompoundStatement		245:58:5706:5971	4785491	0					
ANR	4785494	IfStatement	if ( str )		4785491	0					
ANR	4785495	Condition	str	246:5:5713:5715	4785491	0	True				
ANR	4785496	Identifier	str		4785491	0					
ANR	4785497	CompoundStatement		2:10:11:11	4785491	1					
ANR	4785498	IfStatement	if ( atr )		4785491	0					
ANR	4785499	Condition	atr	247:6:5726:5728	4785491	0	True				
ANR	4785500	Identifier	atr		4785491	0					
ANR	4785501	CompoundStatement		3:11:24:24	4785491	1					
ANR	4785502	IfStatement	if ( attsyntax )		4785491	0					
ANR	4785503	Condition	attsyntax	248:7:5740:5748	4785491	0	True				
ANR	4785504	Identifier	attsyntax		4785491	0					
ANR	4785505	CompoundStatement		4:18:44:44	4785491	1					
ANR	4785506	ExpressionStatement	"r_egg_printf ( egg , ""  jmp *%s\\n"" , str )"	249:4:5757:5795	4785491	0	True				
ANR	4785507	CallExpression	"r_egg_printf ( egg , ""  jmp *%s\\n"" , str )"		4785491	0					
ANR	4785508	Callee	r_egg_printf		4785491	0					
ANR	4785509	Identifier	r_egg_printf		4785491	0					
ANR	4785510	ArgumentList	egg		4785491	1					
ANR	4785511	Argument	egg		4785491	0					
ANR	4785512	Identifier	egg		4785491	0					
ANR	4785513	Argument	"""  jmp *%s\\n"""		4785491	1					
ANR	4785514	PrimaryExpression	"""  jmp *%s\\n"""		4785491	0					
ANR	4785515	Argument	str		4785491	2					
ANR	4785516	Identifier	str		4785491	0					
ANR	4785517	ElseStatement	else		4785491	0					
ANR	4785518	CompoundStatement		6:10:100:100	4785491	0					
ANR	4785519	ExpressionStatement	"r_egg_printf ( egg , ""  jmp [%s]\\n"" , str )"	251:4:5813:5852	4785491	0	True				
ANR	4785520	CallExpression	"r_egg_printf ( egg , ""  jmp [%s]\\n"" , str )"		4785491	0					
ANR	4785521	Callee	r_egg_printf		4785491	0					
ANR	4785522	Identifier	r_egg_printf		4785491	0					
ANR	4785523	ArgumentList	egg		4785491	1					
ANR	4785524	Argument	egg		4785491	0					
ANR	4785525	Identifier	egg		4785491	0					
ANR	4785526	Argument	"""  jmp [%s]\\n"""		4785491	1					
ANR	4785527	PrimaryExpression	"""  jmp [%s]\\n"""		4785491	0					
ANR	4785528	Argument	str		4785491	2					
ANR	4785529	Identifier	str		4785491	0					
ANR	4785530	ElseStatement	else		4785491	0					
ANR	4785531	CompoundStatement		9:9:161:161	4785491	0					
ANR	4785532	ExpressionStatement	"r_egg_printf ( egg , ""  jmp %s\\n"" , str )"	254:3:5873:5910	4785491	0	True				
ANR	4785533	CallExpression	"r_egg_printf ( egg , ""  jmp %s\\n"" , str )"		4785491	0					
ANR	4785534	Callee	r_egg_printf		4785491	0					
ANR	4785535	Identifier	r_egg_printf		4785491	0					
ANR	4785536	ArgumentList	egg		4785491	1					
ANR	4785537	Argument	egg		4785491	0					
ANR	4785538	Identifier	egg		4785491	0					
ANR	4785539	Argument	"""  jmp %s\\n"""		4785491	1					
ANR	4785540	PrimaryExpression	"""  jmp %s\\n"""		4785491	0					
ANR	4785541	Argument	str		4785491	2					
ANR	4785542	Identifier	str		4785491	0					
ANR	4785543	ElseStatement	else		4785491	0					
ANR	4785544	CompoundStatement		12:8:217:217	4785491	0					
ANR	4785545	ExpressionStatement	"eprintf ( ""Jump without destination\\n"" )"	257:2:5928:5966	4785491	0	True				
ANR	4785546	CallExpression	"eprintf ( ""Jump without destination\\n"" )"		4785491	0					
ANR	4785547	Callee	eprintf		4785491	0					
ANR	4785548	Identifier	eprintf		4785491	0					
ANR	4785549	ArgumentList	"""Jump without destination\\n"""		4785491	1					
ANR	4785550	Argument	"""Jump without destination\\n"""		4785491	0					
ANR	4785551	PrimaryExpression	"""Jump without destination\\n"""		4785491	0					
ANR	4785552	ReturnType	static void		4785491	1					
ANR	4785553	Identifier	emit_jmp		4785491	2					
ANR	4785554	ParameterList	"REgg * egg , const char * str , int atr"		4785491	3					
ANR	4785555	Parameter	REgg * egg	245:21:5669:5677	4785491	0	True				
ANR	4785556	ParameterType	REgg *		4785491	0					
ANR	4785557	Identifier	egg		4785491	1					
ANR	4785558	Parameter	const char * str	245:32:5680:5694	4785491	1	True				
ANR	4785559	ParameterType	const char *		4785491	0					
ANR	4785560	Identifier	str		4785491	1					
ANR	4785561	Parameter	int atr	245:49:5697:5703	4785491	2	True				
ANR	4785562	ParameterType	int		4785491	0					
ANR	4785563	Identifier	atr		4785491	1					
ANR	4785564	CFGEntryNode	ENTRY		4785491		True				
ANR	4785565	CFGExitNode	EXIT		4785491		True				
ANR	4785566	Symbol	str		4785491						
ANR	4785567	Symbol	egg		4785491						
ANR	4785568	Symbol	attsyntax		4785491						
ANR	4785569	Symbol	atr		4785491						
ANR	4785570	Function	emit_arg	261:0:5974:7149							
ANR	4785571	FunctionDef	"emit_arg (REgg * egg , int xs , int num , const char * str)"		4785570	0					
ANR	4785572	CompoundStatement		261:67:6041:7149	4785570	0					
ANR	4785573	IdentifierDeclStatement	int d = atoi ( str ) ;	262:1:6044:6062	4785570	0	True				
ANR	4785574	IdentifierDecl	d = atoi ( str )		4785570	0					
ANR	4785575	IdentifierDeclType	int		4785570	0					
ANR	4785576	Identifier	d		4785570	1					
ANR	4785577	AssignmentExpression	d = atoi ( str )		4785570	2		=			
ANR	4785578	Identifier	d		4785570	0					
ANR	4785579	CallExpression	atoi ( str )		4785570	1					
ANR	4785580	Callee	atoi		4785570	0					
ANR	4785581	Identifier	atoi		4785570	0					
ANR	4785582	ArgumentList	str		4785570	1					
ANR	4785583	Argument	str		4785570	0					
ANR	4785584	Identifier	str		4785570	0					
ANR	4785585	IfStatement	if ( ! attsyntax && ( * str == '$' ) )		4785570	1					
ANR	4785586	Condition	! attsyntax && ( * str == '$' )	263:5:6069:6095	4785570	0	True				
ANR	4785587	AndExpression	! attsyntax && ( * str == '$' )		4785570	0		&&			
ANR	4785588	UnaryOperationExpression	! attsyntax		4785570	0					
ANR	4785589	UnaryOperator	!		4785570	0					
ANR	4785590	Identifier	attsyntax		4785570	1					
ANR	4785591	EqualityExpression	* str == '$'		4785570	1		==			
ANR	4785592	UnaryOperationExpression	* str		4785570	0					
ANR	4785593	UnaryOperator	*		4785570	0					
ANR	4785594	Identifier	str		4785570	1					
ANR	4785595	PrimaryExpression	'$'		4785570	1					
ANR	4785596	CompoundStatement		3:34:56:56	4785570	1					
ANR	4785597	ExpressionStatement	str = str + 1	264:2:6102:6115	4785570	0	True				
ANR	4785598	AssignmentExpression	str = str + 1		4785570	0		=			
ANR	4785599	Identifier	str		4785570	0					
ANR	4785600	AdditiveExpression	str + 1		4785570	1		+			
ANR	4785601	Identifier	str		4785570	0					
ANR	4785602	PrimaryExpression	1		4785570	1					
ANR	4785603	SwitchStatement	switch ( xs )		4785570	2					
ANR	4785604	Condition	xs	266:9:6129:6130	4785570	0	True				
ANR	4785605	Identifier	xs		4785570	0					
ANR	4785606	CompoundStatement		6:13:91:91	4785570	1					
ANR	4785607	Label	case 0 :	267:1:6136:6142	4785570	0	True				
ANR	4785608	IfStatement	if ( attsyntax )		4785570	1					
ANR	4785609	Condition	attsyntax	273:6:6277:6285	4785570	0	True				
ANR	4785610	Identifier	attsyntax		4785570	0					
ANR	4785611	CompoundStatement		13:17:246:246	4785570	1					
ANR	4785612	Statement	r_egg_printf	274:3:6293:6304	4785570	0	True				
ANR	4785613	Statement	(	274:16:6306:6306	4785570	1	True				
ANR	4785614	Statement	egg	274:17:6307:6309	4785570	2	True				
ANR	4785615	Statement	","	274:20:6310:6310	4785570	3	True				
ANR	4785616	Statement	"""  mov %s, %%"""	274:22:6312:6325	4785570	4	True				
ANR	4785617	Statement	R_AX	274:36:6326:6329	4785570	5	True				
ANR	4785618	Statement	"""\\n"""	274:41:6331:6334	4785570	6	True				
ANR	4785619	Statement	","	274:45:6335:6335	4785570	7	True				
ANR	4785620	Statement	str	274:47:6337:6339	4785570	8	True				
ANR	4785621	Statement	)	274:50:6340:6340	4785570	9	True				
ANR	4785622	ExpressionStatement		274:51:6341:6341	4785570	10	True				
ANR	4785623	Statement	r_egg_printf	275:3:6346:6357	4785570	11	True				
ANR	4785624	Statement	(	275:16:6359:6359	4785570	12	True				
ANR	4785625	Statement	egg	275:17:6360:6362	4785570	13	True				
ANR	4785626	Statement	","	275:20:6363:6363	4785570	14	True				
ANR	4785627	Statement	"""  push %%"""	275:22:6365:6375	4785570	15	True				
ANR	4785628	Statement	R_AX	275:33:6376:6379	4785570	16	True				
ANR	4785629	Statement	"""\\n"""	275:38:6381:6384	4785570	17	True				
ANR	4785630	Statement	)	275:42:6385:6385	4785570	18	True				
ANR	4785631	ExpressionStatement		275:43:6386:6386	4785570	19	True				
ANR	4785632	ElseStatement	else		4785570	0					
ANR	4785633	CompoundStatement		16:9:355:355	4785570	0					
ANR	4785634	Statement	r_egg_printf	277:3:6402:6413	4785570	0	True				
ANR	4785635	Statement	(	277:16:6415:6415	4785570	1	True				
ANR	4785636	Statement	egg	277:17:6416:6418	4785570	2	True				
ANR	4785637	Statement	","	277:20:6419:6419	4785570	3	True				
ANR	4785638	Statement	"""  mov """	277:22:6421:6428	4785570	4	True				
ANR	4785639	Statement	R_AX	277:30:6429:6432	4785570	5	True				
ANR	4785640	Statement	""", %s\\n"""	277:35:6434:6441	4785570	6	True				
ANR	4785641	Statement	","	277:43:6442:6442	4785570	7	True				
ANR	4785642	Statement	str	277:45:6444:6446	4785570	8	True				
ANR	4785643	Statement	)	277:48:6447:6447	4785570	9	True				
ANR	4785644	ExpressionStatement		277:49:6448:6448	4785570	10	True				
ANR	4785645	Statement	r_egg_printf	278:3:6453:6464	4785570	11	True				
ANR	4785646	Statement	(	278:16:6466:6466	4785570	12	True				
ANR	4785647	Statement	egg	278:17:6467:6469	4785570	13	True				
ANR	4785648	Statement	","	278:20:6470:6470	4785570	14	True				
ANR	4785649	Statement	"""  push """	278:22:6472:6480	4785570	15	True				
ANR	4785650	Statement	R_AX	278:31:6481:6484	4785570	16	True				
ANR	4785651	Statement	"""\\n"""	278:36:6486:6489	4785570	17	True				
ANR	4785652	Statement	)	278:40:6490:6490	4785570	18	True				
ANR	4785653	ExpressionStatement		278:41:6491:6491	4785570	19	True				
ANR	4785654	BreakStatement	break ;	283:2:6554:6559	4785570	2	True				
ANR	4785655	Label	case '*' :	284:1:6562:6570	4785570	3	True				
ANR	4785656	IfStatement	if ( attsyntax )		4785570	4					
ANR	4785657	Condition	attsyntax	285:6:6578:6586	4785570	0	True				
ANR	4785658	Identifier	attsyntax		4785570	0					
ANR	4785659	CompoundStatement		25:17:547:547	4785570	1					
ANR	4785660	ExpressionStatement	"r_egg_printf ( egg , ""  push (%s)\\n"" , str )"	286:3:6594:6634	4785570	0	True				
ANR	4785661	CallExpression	"r_egg_printf ( egg , ""  push (%s)\\n"" , str )"		4785570	0					
ANR	4785662	Callee	r_egg_printf		4785570	0					
ANR	4785663	Identifier	r_egg_printf		4785570	0					
ANR	4785664	ArgumentList	egg		4785570	1					
ANR	4785665	Argument	egg		4785570	0					
ANR	4785666	Identifier	egg		4785570	0					
ANR	4785667	Argument	"""  push (%s)\\n"""		4785570	1					
ANR	4785668	PrimaryExpression	"""  push (%s)\\n"""		4785570	0					
ANR	4785669	Argument	str		4785570	2					
ANR	4785670	Identifier	str		4785570	0					
ANR	4785671	ElseStatement	else		4785570	0					
ANR	4785672	CompoundStatement		27:9:603:603	4785570	0					
ANR	4785673	ExpressionStatement	"r_egg_printf ( egg , ""  push [%s]\\n"" , str )"	288:3:6650:6690	4785570	0	True				
ANR	4785674	CallExpression	"r_egg_printf ( egg , ""  push [%s]\\n"" , str )"		4785570	0					
ANR	4785675	Callee	r_egg_printf		4785570	0					
ANR	4785676	Identifier	r_egg_printf		4785570	0					
ANR	4785677	ArgumentList	egg		4785570	1					
ANR	4785678	Argument	egg		4785570	0					
ANR	4785679	Identifier	egg		4785570	0					
ANR	4785680	Argument	"""  push [%s]\\n"""		4785570	1					
ANR	4785681	PrimaryExpression	"""  push [%s]\\n"""		4785570	0					
ANR	4785682	Argument	str		4785570	2					
ANR	4785683	Identifier	str		4785570	0					
ANR	4785684	BreakStatement	break ;	290:2:6698:6703	4785570	5	True				
ANR	4785685	Label	case '&' :	291:1:6706:6714	4785570	6	True				
ANR	4785686	IfStatement	if ( attsyntax )		4785570	7					
ANR	4785687	Condition	attsyntax	292:6:6722:6730	4785570	0	True				
ANR	4785688	Identifier	attsyntax		4785570	0					
ANR	4785689	CompoundStatement		32:17:691:691	4785570	1					
ANR	4785690	IfStatement	if ( d != 0 )		4785570	0					
ANR	4785691	Condition	d != 0	293:7:6742:6747	4785570	0	True				
ANR	4785692	EqualityExpression	d != 0		4785570	0		!=			
ANR	4785693	Identifier	d		4785570	0					
ANR	4785694	PrimaryExpression	0		4785570	1					
ANR	4785695	CompoundStatement		33:15:708:708	4785570	1					
ANR	4785696	Statement	r_egg_printf	294:4:6756:6767	4785570	0	True				
ANR	4785697	Statement	(	294:17:6769:6769	4785570	1	True				
ANR	4785698	Statement	egg	294:18:6770:6772	4785570	2	True				
ANR	4785699	Statement	","	294:21:6773:6773	4785570	3	True				
ANR	4785700	Statement	"""  addl $%d, %%"""	294:23:6775:6790	4785570	4	True				
ANR	4785701	Statement	R_BP	294:40:6792:6795	4785570	5	True				
ANR	4785702	Statement	"""\\n"""	294:45:6797:6800	4785570	6	True				
ANR	4785703	Statement	","	294:49:6801:6801	4785570	7	True				
ANR	4785704	Statement	d	294:51:6803:6803	4785570	8	True				
ANR	4785705	Statement	)	294:52:6804:6804	4785570	9	True				
ANR	4785706	ExpressionStatement		294:53:6805:6805	4785570	10	True				
ANR	4785707	Statement	r_egg_printf	296:3:6815:6826	4785570	1	True				
ANR	4785708	Statement	(	296:16:6828:6828	4785570	2	True				
ANR	4785709	Statement	egg	296:17:6829:6831	4785570	3	True				
ANR	4785710	Statement	","	296:20:6832:6832	4785570	4	True				
ANR	4785711	Statement	"""  pushl %%"""	296:22:6834:6845	4785570	5	True				
ANR	4785712	Statement	R_BP	296:34:6846:6849	4785570	6	True				
ANR	4785713	Statement	"""\\n"""	296:38:6850:6853	4785570	7	True				
ANR	4785714	Statement	)	296:42:6854:6854	4785570	8	True				
ANR	4785715	ExpressionStatement		296:43:6855:6855	4785570	9	True				
ANR	4785716	IfStatement	if ( d != 0 )		4785570	10					
ANR	4785717	Condition	d != 0	297:7:6864:6869	4785570	0	True				
ANR	4785718	EqualityExpression	d != 0		4785570	0		!=			
ANR	4785719	Identifier	d		4785570	0					
ANR	4785720	PrimaryExpression	0		4785570	1					
ANR	4785721	CompoundStatement		37:15:830:830	4785570	1					
ANR	4785722	Statement	r_egg_printf	298:4:6878:6889	4785570	0	True				
ANR	4785723	Statement	(	298:17:6891:6891	4785570	1	True				
ANR	4785724	Statement	egg	298:18:6892:6894	4785570	2	True				
ANR	4785725	Statement	","	298:21:6895:6895	4785570	3	True				
ANR	4785726	Statement	"""  subl $%d, %%"""	298:23:6897:6912	4785570	4	True				
ANR	4785727	Statement	R_BP	298:40:6914:6917	4785570	5	True				
ANR	4785728	Statement	"""\\n"""	298:45:6919:6922	4785570	6	True				
ANR	4785729	Statement	","	298:49:6923:6923	4785570	7	True				
ANR	4785730	Statement	d	298:51:6925:6925	4785570	8	True				
ANR	4785731	Statement	)	298:52:6926:6926	4785570	9	True				
ANR	4785732	ExpressionStatement		298:53:6927:6927	4785570	10	True				
ANR	4785733	ElseStatement	else		4785570	0					
ANR	4785734	CompoundStatement		40:9:901:901	4785570	0					
ANR	4785735	IfStatement	if ( d != 0 )		4785570	0					
ANR	4785736	Condition	d != 0	301:7:6952:6957	4785570	0	True				
ANR	4785737	EqualityExpression	d != 0		4785570	0		!=			
ANR	4785738	Identifier	d		4785570	0					
ANR	4785739	PrimaryExpression	0		4785570	1					
ANR	4785740	CompoundStatement		41:15:918:918	4785570	1					
ANR	4785741	Statement	r_egg_printf	302:4:6966:6977	4785570	0	True				
ANR	4785742	Statement	(	302:17:6979:6979	4785570	1	True				
ANR	4785743	Statement	egg	302:18:6980:6982	4785570	2	True				
ANR	4785744	Statement	","	302:21:6983:6983	4785570	3	True				
ANR	4785745	Statement	"""  add """	302:23:6985:6992	4785570	4	True				
ANR	4785746	Statement	R_BP	302:32:6994:6997	4785570	5	True				
ANR	4785747	Statement	""", %d\\n"""	302:37:6999:7006	4785570	6	True				
ANR	4785748	Statement	","	302:45:7007:7007	4785570	7	True				
ANR	4785749	Statement	d	302:47:7009:7009	4785570	8	True				
ANR	4785750	Statement	)	302:48:7010:7010	4785570	9	True				
ANR	4785751	ExpressionStatement		302:49:7011:7011	4785570	10	True				
ANR	4785752	Statement	r_egg_printf	304:3:7021:7032	4785570	1	True				
ANR	4785753	Statement	(	304:16:7034:7034	4785570	2	True				
ANR	4785754	Statement	egg	304:17:7035:7037	4785570	3	True				
ANR	4785755	Statement	","	304:20:7038:7038	4785570	4	True				
ANR	4785756	Statement	"""  push """	304:22:7040:7048	4785570	5	True				
ANR	4785757	Statement	R_BP	304:31:7049:7052	4785570	6	True				
ANR	4785758	Statement	"""\\n"""	304:35:7053:7056	4785570	7	True				
ANR	4785759	Statement	)	304:39:7057:7057	4785570	8	True				
ANR	4785760	ExpressionStatement		304:40:7058:7058	4785570	9	True				
ANR	4785761	IfStatement	if ( d != 0 )		4785570	10					
ANR	4785762	Condition	d != 0	305:7:7067:7072	4785570	0	True				
ANR	4785763	EqualityExpression	d != 0		4785570	0		!=			
ANR	4785764	Identifier	d		4785570	0					
ANR	4785765	PrimaryExpression	0		4785570	1					
ANR	4785766	CompoundStatement		45:15:1033:1033	4785570	1					
ANR	4785767	Statement	r_egg_printf	306:4:7081:7092	4785570	0	True				
ANR	4785768	Statement	(	306:17:7094:7094	4785570	1	True				
ANR	4785769	Statement	egg	306:18:7095:7097	4785570	2	True				
ANR	4785770	Statement	","	306:21:7098:7098	4785570	3	True				
ANR	4785771	Statement	"""  sub """	306:23:7100:7107	4785570	4	True				
ANR	4785772	Statement	R_BP	306:32:7109:7112	4785570	5	True				
ANR	4785773	Statement	""", %d\\n"""	306:37:7114:7121	4785570	6	True				
ANR	4785774	Statement	","	306:45:7122:7122	4785570	7	True				
ANR	4785775	Statement	d	306:47:7124:7124	4785570	8	True				
ANR	4785776	Statement	)	306:48:7125:7125	4785570	9	True				
ANR	4785777	ExpressionStatement		306:49:7126:7126	4785570	10	True				
ANR	4785778	BreakStatement	break ;	309:2:7139:7144	4785570	8	True				
ANR	4785779	ReturnType	static void		4785570	1					
ANR	4785780	Identifier	emit_arg		4785570	2					
ANR	4785781	ParameterList	"REgg * egg , int xs , int num , const char * str"		4785570	3					
ANR	4785782	Parameter	REgg * egg	261:22:5996:6004	4785570	0	True				
ANR	4785783	ParameterType	REgg *		4785570	0					
ANR	4785784	Identifier	egg		4785570	1					
ANR	4785785	Parameter	int xs	261:33:6007:6012	4785570	1	True				
ANR	4785786	ParameterType	int		4785570	0					
ANR	4785787	Identifier	xs		4785570	1					
ANR	4785788	Parameter	int num	261:41:6015:6021	4785570	2	True				
ANR	4785789	ParameterType	int		4785570	0					
ANR	4785790	Identifier	num		4785570	1					
ANR	4785791	Parameter	const char * str	261:50:6024:6038	4785570	3	True				
ANR	4785792	ParameterType	const char *		4785570	0					
ANR	4785793	Identifier	str		4785570	1					
ANR	4785794	CFGEntryNode	ENTRY		4785570		True				
ANR	4785795	CFGExitNode	EXIT		4785570		True				
ANR	4785796	Symbol	str		4785570						
ANR	4785797	Symbol	atoi		4785570						
ANR	4785798	Symbol	egg		4785570						
ANR	4785799	Symbol	d		4785570						
ANR	4785800	Symbol	num		4785570						
ANR	4785801	Symbol	attsyntax		4785570						
ANR	4785802	Symbol	xs		4785570						
ANR	4785803	Symbol	* str		4785570						
ANR	4785804	Function	emit_get_result	313:0:7152:7345							
ANR	4785805	FunctionDef	"emit_get_result (REgg * egg , const char * ocn)"		4785804	0					
ANR	4785806	CompoundStatement		313:56:7208:7345	4785804	0					
ANR	4785807	IfStatement	if ( attsyntax )		4785804	0					
ANR	4785808	Condition	attsyntax	314:5:7215:7223	4785804	0	True				
ANR	4785809	Identifier	attsyntax		4785804	0					
ANR	4785810	CompoundStatement		2:16:17:17	4785804	1					
ANR	4785811	Statement	r_egg_printf	315:2:7230:7241	4785804	0	True				
ANR	4785812	Statement	(	315:15:7243:7243	4785804	1	True				
ANR	4785813	Statement	egg	315:16:7244:7246	4785804	2	True				
ANR	4785814	Statement	","	315:19:7247:7247	4785804	3	True				
ANR	4785815	Statement	"""  mov %%"""	315:21:7249:7258	4785804	4	True				
ANR	4785816	Statement	R_AX	315:32:7260:7263	4785804	5	True				
ANR	4785817	Statement	""", %s\\n"""	315:37:7265:7272	4785804	6	True				
ANR	4785818	Statement	","	315:45:7273:7273	4785804	7	True				
ANR	4785819	Statement	ocn	315:47:7275:7277	4785804	8	True				
ANR	4785820	Statement	)	315:50:7278:7278	4785804	9	True				
ANR	4785821	ExpressionStatement		315:51:7279:7279	4785804	10	True				
ANR	4785822	ElseStatement	else		4785804	0					
ANR	4785823	CompoundStatement		4:8:80:80	4785804	0					
ANR	4785824	Statement	r_egg_printf	317:2:7293:7304	4785804	0	True				
ANR	4785825	Statement	(	317:15:7306:7306	4785804	1	True				
ANR	4785826	Statement	egg	317:16:7307:7309	4785804	2	True				
ANR	4785827	Statement	","	317:19:7310:7310	4785804	3	True				
ANR	4785828	Statement	"""  mov %s, """	317:21:7312:7323	4785804	4	True				
ANR	4785829	Statement	R_AX	317:34:7325:7328	4785804	5	True				
ANR	4785830	Statement	"""\\n"""	317:39:7330:7333	4785804	6	True				
ANR	4785831	Statement	","	317:43:7334:7334	4785804	7	True				
ANR	4785832	Statement	ocn	317:45:7336:7338	4785804	8	True				
ANR	4785833	Statement	)	317:48:7339:7339	4785804	9	True				
ANR	4785834	ExpressionStatement		317:49:7340:7340	4785804	10	True				
ANR	4785835	ReturnType	static void		4785804	1					
ANR	4785836	Identifier	emit_get_result		4785804	2					
ANR	4785837	ParameterList	"REgg * egg , const char * ocn"		4785804	3					
ANR	4785838	Parameter	REgg * egg	313:28:7180:7188	4785804	0	True				
ANR	4785839	ParameterType	REgg *		4785804	0					
ANR	4785840	Identifier	egg		4785804	1					
ANR	4785841	Parameter	const char * ocn	313:39:7191:7205	4785804	1	True				
ANR	4785842	ParameterType	const char *		4785804	0					
ANR	4785843	Identifier	ocn		4785804	1					
ANR	4785844	CFGEntryNode	ENTRY		4785804		True				
ANR	4785845	CFGExitNode	EXIT		4785804		True				
ANR	4785846	Symbol	egg		4785804						
ANR	4785847	Symbol	attsyntax		4785804						
ANR	4785848	Symbol	ocn		4785804						
ANR	4785849	Function	emit_restore_stack	321:0:7348:7552							
ANR	4785850	FunctionDef	"emit_restore_stack (REgg * egg , int size)"		4785849	0					
ANR	4785851	CompoundStatement		321:53:7401:7552	4785849	0					
ANR	4785852	IfStatement	if ( attsyntax )		4785849	0					
ANR	4785853	Condition	attsyntax	322:5:7408:7416	4785849	0	True				
ANR	4785854	Identifier	attsyntax		4785849	0					
ANR	4785855	CompoundStatement		2:16:17:17	4785849	1					
ANR	4785856	Statement	r_egg_printf	323:2:7423:7434	4785849	0	True				
ANR	4785857	Statement	(	323:15:7436:7436	4785849	1	True				
ANR	4785858	Statement	egg	323:16:7437:7439	4785849	2	True				
ANR	4785859	Statement	","	323:19:7440:7440	4785849	3	True				
ANR	4785860	Statement	"""  add $%d, %%"""	323:21:7442:7456	4785849	4	True				
ANR	4785861	Statement	R_SP	323:37:7458:7461	4785849	5	True				
ANR	4785862	Statement	""" /* args */\\n"""	323:42:7463:7477	4785849	6	True				
ANR	4785863	Statement	","	323:57:7478:7478	4785849	7	True				
ANR	4785864	Statement	size	323:59:7480:7483	4785849	8	True				
ANR	4785865	Statement	)	323:63:7484:7484	4785849	9	True				
ANR	4785866	ExpressionStatement		323:64:7485:7485	4785849	10	True				
ANR	4785867	ElseStatement	else		4785849	0					
ANR	4785868	CompoundStatement		4:8:93:93	4785849	0					
ANR	4785869	Statement	r_egg_printf	325:2:7499:7510	4785849	0	True				
ANR	4785870	Statement	(	325:15:7512:7512	4785849	1	True				
ANR	4785871	Statement	egg	325:16:7513:7515	4785849	2	True				
ANR	4785872	Statement	","	325:19:7516:7516	4785849	3	True				
ANR	4785873	Statement	"""  add """	325:21:7518:7525	4785849	4	True				
ANR	4785874	Statement	R_SP	325:30:7527:7530	4785849	5	True				
ANR	4785875	Statement	""", %d\\n"""	325:35:7532:7539	4785849	6	True				
ANR	4785876	Statement	","	325:43:7540:7540	4785849	7	True				
ANR	4785877	Statement	size	325:45:7542:7545	4785849	8	True				
ANR	4785878	Statement	)	325:49:7546:7546	4785849	9	True				
ANR	4785879	ExpressionStatement		325:50:7547:7547	4785849	10	True				
ANR	4785880	ReturnType	static void		4785849	1					
ANR	4785881	Identifier	emit_restore_stack		4785849	2					
ANR	4785882	ParameterList	"REgg * egg , int size"		4785849	3					
ANR	4785883	Parameter	REgg * egg	321:32:7380:7388	4785849	0	True				
ANR	4785884	ParameterType	REgg *		4785849	0					
ANR	4785885	Identifier	egg		4785849	1					
ANR	4785886	Parameter	int size	321:43:7391:7398	4785849	1	True				
ANR	4785887	ParameterType	int		4785849	0					
ANR	4785888	Identifier	size		4785849	1					
ANR	4785889	CFGEntryNode	ENTRY		4785849		True				
ANR	4785890	CFGExitNode	EXIT		4785849		True				
ANR	4785891	Symbol	egg		4785849						
ANR	4785892	Symbol	size		4785849						
ANR	4785893	Symbol	attsyntax		4785849						
ANR	4785894	Function	emit_get_while_end	329:0:7555:7708							
ANR	4785895	FunctionDef	"emit_get_while_end (REgg * egg , char * str , const char * ctxpush , const char * label)"		4785894	0					
ANR	4785896	CompoundStatement		329:94:7649:7708	4785894	0					
ANR	4785897	ExpressionStatement	"sprintf ( str , ""  push %s\\n  jmp %s\\n"" , ctxpush , label )"	330:1:7652:7706	4785894	0	True				
ANR	4785898	CallExpression	"sprintf ( str , ""  push %s\\n  jmp %s\\n"" , ctxpush , label )"		4785894	0					
ANR	4785899	Callee	sprintf		4785894	0					
ANR	4785900	Identifier	sprintf		4785894	0					
ANR	4785901	ArgumentList	str		4785894	1					
ANR	4785902	Argument	str		4785894	0					
ANR	4785903	Identifier	str		4785894	0					
ANR	4785904	Argument	"""  push %s\\n  jmp %s\\n"""		4785894	1					
ANR	4785905	PrimaryExpression	"""  push %s\\n  jmp %s\\n"""		4785894	0					
ANR	4785906	Argument	ctxpush		4785894	2					
ANR	4785907	Identifier	ctxpush		4785894	0					
ANR	4785908	Argument	label		4785894	3					
ANR	4785909	Identifier	label		4785894	0					
ANR	4785910	ReturnType	static void		4785894	1					
ANR	4785911	Identifier	emit_get_while_end		4785894	2					
ANR	4785912	ParameterList	"REgg * egg , char * str , const char * ctxpush , const char * label"		4785894	3					
ANR	4785913	Parameter	REgg * egg	329:32:7587:7595	4785894	0	True				
ANR	4785914	ParameterType	REgg *		4785894	0					
ANR	4785915	Identifier	egg		4785894	1					
ANR	4785916	Parameter	char * str	329:43:7598:7606	4785894	1	True				
ANR	4785917	ParameterType	char *		4785894	0					
ANR	4785918	Identifier	str		4785894	1					
ANR	4785919	Parameter	const char * ctxpush	329:54:7609:7627	4785894	2	True				
ANR	4785920	ParameterType	const char *		4785894	0					
ANR	4785921	Identifier	ctxpush		4785894	1					
ANR	4785922	Parameter	const char * label	329:75:7630:7646	4785894	3	True				
ANR	4785923	ParameterType	const char *		4785894	0					
ANR	4785924	Identifier	label		4785894	1					
ANR	4785925	CFGEntryNode	ENTRY		4785894		True				
ANR	4785926	CFGExitNode	EXIT		4785894		True				
ANR	4785927	Symbol	str		4785894						
ANR	4785928	Symbol	egg		4785894						
ANR	4785929	Symbol	ctxpush		4785894						
ANR	4785930	Symbol	label		4785894						
ANR	4785931	Function	emit_while_end	333:0:7711:13602							
ANR	4785932	FunctionDef	"emit_while_end (REgg * egg , const char * labelback)"		4785931	0					
ANR	4785933	CompoundStatement		333:62:7773:13602	4785931	0					
ANR	4785934	IfStatement	if ( attsyntax )		4785931	0					
ANR	4785935	Condition	attsyntax	335:5:7786:7794	4785931	0	True				
ANR	4785936	Identifier	attsyntax		4785931	0					
ANR	4785937	CompoundStatement		3:16:23:23	4785931	1					
ANR	4785938	Statement	r_egg_printf	336:2:7801:7812	4785931	0	True				
ANR	4785939	Statement	(	336:15:7814:7814	4785931	1	True				
ANR	4785940	Statement	egg	336:16:7815:7817	4785931	2	True				
ANR	4785941	Statement	","	336:19:7818:7818	4785931	3	True				
ANR	4785942	Statement	"""  pop %%"""	336:21:7820:7829	4785931	4	True				
ANR	4785943	Statement	R_AX	336:31:7830:7833	4785931	5	True				
ANR	4785944	Statement	"""\\n"""	336:35:7834:7837	4785931	6	True				
ANR	4785945	Statement	)	336:39:7838:7838	4785931	7	True				
ANR	4785946	ExpressionStatement		336:40:7839:7839	4785931	8	True				
ANR	4785947	Statement	r_egg_printf	337:2:7843:7854	4785931	9	True				
ANR	4785948	Statement	(	337:15:7856:7856	4785931	10	True				
ANR	4785949	Statement	egg	337:16:7857:7859	4785931	11	True				
ANR	4785950	Statement	","	337:19:7860:7860	4785931	12	True				
ANR	4785951	Statement	"""  cmp $0, %%"""	337:21:7862:7875	4785931	13	True				
ANR	4785952	Statement	R_AX	337:35:7876:7879	4785931	14	True				
ANR	4785953	Statement	"""\\n"""	337:39:7880:7883	4785931	15	True				
ANR	4785954	Statement	)	337:43:7884:7884	4785931	16	True				
ANR	4785955	ExpressionStatement		337:44:7885:7885	4785931	17	True				
ANR	4785956	ExpressionStatement	"r_egg_printf ( egg , ""  jnz %s\\n"" , labelback )"	338:2:7927:7970	4785931	18	True				
ANR	4785957	CallExpression	"r_egg_printf ( egg , ""  jnz %s\\n"" , labelback )"		4785931	0					
ANR	4785958	Callee	r_egg_printf		4785931	0					
ANR	4785959	Identifier	r_egg_printf		4785931	0					
ANR	4785960	ArgumentList	egg		4785931	1					
ANR	4785961	Argument	egg		4785931	0					
ANR	4785962	Identifier	egg		4785931	0					
ANR	4785963	Argument	"""  jnz %s\\n"""		4785931	1					
ANR	4785964	PrimaryExpression	"""  jnz %s\\n"""		4785931	0					
ANR	4785965	Argument	labelback		4785931	2					
ANR	4785966	Identifier	labelback		4785931	0					
ANR	4785967	ElseStatement	else		4785931	0					
ANR	4785968	CompoundStatement		7:8:206:206	4785931	0					
ANR	4785969	Statement	r_egg_printf	341:2:7991:8002	4785931	0	True				
ANR	4785970	Statement	(	341:15:8004:8004	4785931	1	True				
ANR	4785971	Statement	egg	341:16:8005:8007	4785931	2	True				
ANR	4785972	Statement	","	341:19:8008:8008	4785931	3	True				
ANR	4785973	Statement	"""  pop """	341:21:8010:8017	4785931	4	True				
ANR	4785974	Statement	R_AX	341:29:8018:8021	4785931	5	True				
ANR	4785975	Statement	"""\\n"""	341:33:8022:8025	4785931	6	True				
ANR	4785976	Statement	)	341:37:8026:8026	4785931	7	True				
ANR	4785977	ExpressionStatement		341:38:8027:8027	4785931	8	True				
ANR	4785978	Statement	r_egg_printf	342:2:8031:8042	4785931	9	True				
ANR	4785979	Statement	(	342:15:8044:8044	4785931	10	True				
ANR	4785980	Statement	egg	342:16:8045:8047	4785931	11	True				
ANR	4785981	Statement	","	342:19:8048:8048	4785931	12	True				
ANR	4785982	Statement	"""  test """	342:21:8050:8058	4785931	13	True				
ANR	4785983	Statement	R_AX	342:30:8059:8062	4785931	14	True				
ANR	4785984	Statement	""", """	342:34:8063:8066	4785931	15	True				
ANR	4785985	Statement	R_AX	342:38:8067:8070	4785931	16	True				
ANR	4785986	Statement	"""\\n"""	342:42:8071:8074	4785931	17	True				
ANR	4785987	Statement	)	342:46:8075:8075	4785931	18	True				
ANR	4785988	ExpressionStatement		342:47:8076:8076	4785931	19	True				
ANR	4785989	ExpressionStatement	"r_egg_printf ( egg , ""  jnz %s\\n"" , labelback )"	343:2:8118:8161	4785931	20	True				
ANR	4785990	CallExpression	"r_egg_printf ( egg , ""  jnz %s\\n"" , labelback )"		4785931	0					
ANR	4785991	Callee	r_egg_printf		4785931	0					
ANR	4785992	Identifier	r_egg_printf		4785931	0					
ANR	4785993	ArgumentList	egg		4785931	1					
ANR	4785994	Argument	egg		4785931	0					
ANR	4785995	Identifier	egg		4785931	0					
ANR	4785996	Argument	"""  jnz %s\\n"""		4785931	1					
ANR	4785997	PrimaryExpression	"""  jnz %s\\n"""		4785931	0					
ANR	4785998	Argument	labelback		4785931	2					
ANR	4785999	Identifier	labelback		4785931	0					
ANR	4786000	Statement	static	348:0:8193:8198	4785931	1	True				
ANR	4786001	Statement	void	348:7:8200:8203	4785931	2	True				
ANR	4786002	Statement	emit_get_var	348:12:8205:8216	4785931	3	True				
ANR	4786003	Statement	(	348:25:8218:8218	4785931	4	True				
ANR	4786004	Statement	REgg	348:26:8219:8222	4785931	5	True				
ANR	4786005	Statement	*	348:31:8224:8224	4785931	6	True				
ANR	4786006	Statement	egg	348:32:8225:8227	4785931	7	True				
ANR	4786007	Statement	","	348:35:8228:8228	4785931	8	True				
ANR	4786008	Statement	int	348:37:8230:8232	4785931	9	True				
ANR	4786009	Statement	type	348:41:8234:8237	4785931	10	True				
ANR	4786010	Statement	","	348:45:8238:8238	4785931	11	True				
ANR	4786011	Statement	char	348:47:8240:8243	4785931	12	True				
ANR	4786012	Statement	*	348:52:8245:8245	4785931	13	True				
ANR	4786013	Statement	out	348:53:8246:8248	4785931	14	True				
ANR	4786014	Statement	","	348:56:8249:8249	4785931	15	True				
ANR	4786015	Statement	int	348:58:8251:8253	4785931	16	True				
ANR	4786016	Statement	idx	348:62:8255:8257	4785931	17	True				
ANR	4786017	Statement	)	348:65:8258:8258	4785931	18	True				
ANR	4786018	CompoundStatement		16:67:486:486	4785931	19					
ANR	4786019	SwitchStatement	switch ( type )		4785931	0					
ANR	4786020	Condition	type	349:9:8271:8274	4785931	0	True				
ANR	4786021	Identifier	type		4785931	0					
ANR	4786022	CompoundStatement		17:15:503:503	4785931	1					
ANR	4786023	Label	case 0 :	350:1:8280:8286	4785931	0	True				
ANR	4786024	IfStatement	if ( idx > 0 )		4785931	1					
ANR	4786025	Condition	idx > 0	351:6:8310:8316	4785931	0	True				
ANR	4786026	RelationalExpression	idx > 0		4785931	0		>			
ANR	4786027	Identifier	idx		4785931	0					
ANR	4786028	PrimaryExpression	0		4785931	1					
ANR	4786029	CompoundStatement		19:15:545:545	4785931	1					
ANR	4786030	Statement	sprintf	352:3:8324:8330	4785931	0	True				
ANR	4786031	Statement	(	352:11:8332:8332	4785931	1	True				
ANR	4786032	Statement	out	352:12:8333:8335	4785931	2	True				
ANR	4786033	Statement	","	352:15:8336:8336	4785931	3	True				
ANR	4786034	Statement	"""["""	352:17:8338:8340	4785931	4	True				
ANR	4786035	Statement	R_BP	352:21:8342:8345	4785931	5	True				
ANR	4786036	Statement	"""+%d]"""	352:26:8347:8352	4785931	6	True				
ANR	4786037	Statement	","	352:32:8353:8353	4785931	7	True				
ANR	4786038	Statement	idx	352:34:8355:8357	4785931	8	True				
ANR	4786039	Statement	)	352:37:8358:8358	4785931	9	True				
ANR	4786040	ExpressionStatement		352:38:8359:8359	4785931	10	True				
ANR	4786041	ElseStatement	else		4785931	0					
ANR	4786042	IfStatement	if ( idx < 0 )		4785931	0					
ANR	4786043	Condition	idx < 0	353:13:8374:8380	4785931	0	True				
ANR	4786044	RelationalExpression	idx < 0		4785931	0		<			
ANR	4786045	Identifier	idx		4785931	0					
ANR	4786046	PrimaryExpression	0		4785931	1					
ANR	4786047	CompoundStatement		21:22:609:609	4785931	1					
ANR	4786048	Statement	sprintf	354:3:8388:8394	4785931	0	True				
ANR	4786049	Statement	(	354:11:8396:8396	4785931	1	True				
ANR	4786050	Statement	out	354:12:8397:8399	4785931	2	True				
ANR	4786051	Statement	","	354:15:8400:8400	4785931	3	True				
ANR	4786052	Statement	"""["""	354:17:8402:8404	4785931	4	True				
ANR	4786053	Statement	R_BP	354:21:8406:8409	4785931	5	True				
ANR	4786054	Statement	"""%d]"""	354:26:8411:8415	4785931	6	True				
ANR	4786055	Statement	","	354:31:8416:8416	4785931	7	True				
ANR	4786056	Statement	idx	354:33:8418:8420	4785931	8	True				
ANR	4786057	Statement	)	354:36:8421:8421	4785931	9	True				
ANR	4786058	ExpressionStatement		354:37:8422:8422	4785931	10	True				
ANR	4786059	ElseStatement	else		4785931	0					
ANR	4786060	CompoundStatement		23:9:659:659	4785931	0					
ANR	4786061	Statement	strcpy	356:3:8438:8443	4785931	0	True				
ANR	4786062	Statement	(	356:10:8445:8445	4785931	1	True				
ANR	4786063	Statement	out	356:11:8446:8448	4785931	2	True				
ANR	4786064	Statement	","	356:14:8449:8449	4785931	3	True				
ANR	4786065	Statement	"""["""	356:16:8451:8453	4785931	4	True				
ANR	4786066	Statement	R_BP	356:20:8455:8458	4785931	5	True				
ANR	4786067	Statement	"""]"""	356:25:8460:8462	4785931	6	True				
ANR	4786068	Statement	)	356:28:8463:8463	4785931	7	True				
ANR	4786069	ExpressionStatement		356:29:8464:8464	4785931	8	True				
ANR	4786070	BreakStatement	break ;	358:2:8472:8477	4785931	2	True				
ANR	4786071	Label	case 1 :	359:1:8480:8486	4785931	3	True				
ANR	4786072	ExpressionStatement	"eprintf ( ""WARNING: Using stack vars in naked functions\\n"" )"	361:2:8575:8633	4785931	4	True				
ANR	4786073	CallExpression	"eprintf ( ""WARNING: Using stack vars in naked functions\\n"" )"		4785931	0					
ANR	4786074	Callee	eprintf		4785931	0					
ANR	4786075	Identifier	eprintf		4785931	0					
ANR	4786076	ArgumentList	"""WARNING: Using stack vars in naked functions\\n"""		4785931	1					
ANR	4786077	Argument	"""WARNING: Using stack vars in naked functions\\n"""		4785931	0					
ANR	4786078	PrimaryExpression	"""WARNING: Using stack vars in naked functions\\n"""		4785931	0					
ANR	4786079	ExpressionStatement	idx = 8	362:2:8637:8644	4785931	5	True				
ANR	4786080	AssignmentExpression	idx = 8		4785931	0		=			
ANR	4786081	Identifier	idx		4785931	0					
ANR	4786082	PrimaryExpression	8		4785931	1					
ANR	4786083	IfStatement	if ( idx > 0 )		4785931	6					
ANR	4786084	Condition	idx > 0	363:6:8689:8695	4785931	0	True				
ANR	4786085	RelationalExpression	idx > 0		4785931	0		>			
ANR	4786086	Identifier	idx		4785931	0					
ANR	4786087	PrimaryExpression	0		4785931	1					
ANR	4786088	CompoundStatement		31:15:924:924	4785931	1					
ANR	4786089	Statement	sprintf	364:3:8703:8709	4785931	0	True				
ANR	4786090	Statement	(	364:11:8711:8711	4785931	1	True				
ANR	4786091	Statement	out	364:12:8712:8714	4785931	2	True				
ANR	4786092	Statement	","	364:15:8715:8715	4785931	3	True				
ANR	4786093	Statement	"""["""	364:17:8717:8719	4785931	4	True				
ANR	4786094	Statement	R_SP	364:21:8721:8724	4785931	5	True				
ANR	4786095	Statement	"""+%d]"""	364:26:8726:8731	4785931	6	True				
ANR	4786096	Statement	","	364:32:8732:8732	4785931	7	True				
ANR	4786097	Statement	idx	364:34:8734:8736	4785931	8	True				
ANR	4786098	Statement	)	364:37:8737:8737	4785931	9	True				
ANR	4786099	ExpressionStatement		364:38:8738:8738	4785931	10	True				
ANR	4786100	ElseStatement	else		4785931	0					
ANR	4786101	IfStatement	if ( idx < 0 )		4785931	0					
ANR	4786102	Condition	idx < 0	365:13:8753:8759	4785931	0	True				
ANR	4786103	RelationalExpression	idx < 0		4785931	0		<			
ANR	4786104	Identifier	idx		4785931	0					
ANR	4786105	PrimaryExpression	0		4785931	1					
ANR	4786106	CompoundStatement		33:22:988:988	4785931	1					
ANR	4786107	Statement	sprintf	366:3:8767:8773	4785931	0	True				
ANR	4786108	Statement	(	366:11:8775:8775	4785931	1	True				
ANR	4786109	Statement	out	366:12:8776:8778	4785931	2	True				
ANR	4786110	Statement	","	366:15:8779:8779	4785931	3	True				
ANR	4786111	Statement	"""["""	366:17:8781:8783	4785931	4	True				
ANR	4786112	Statement	R_SP	366:21:8785:8788	4785931	5	True				
ANR	4786113	Statement	"""%d]"""	366:26:8790:8794	4785931	6	True				
ANR	4786114	Statement	","	366:31:8795:8795	4785931	7	True				
ANR	4786115	Statement	idx	366:33:8797:8799	4785931	8	True				
ANR	4786116	Statement	)	366:36:8800:8800	4785931	9	True				
ANR	4786117	ExpressionStatement		366:37:8801:8801	4785931	10	True				
ANR	4786118	ElseStatement	else		4785931	0					
ANR	4786119	CompoundStatement		35:9:1038:1038	4785931	0					
ANR	4786120	Statement	strcpy	368:3:8817:8822	4785931	0	True				
ANR	4786121	Statement	(	368:10:8824:8824	4785931	1	True				
ANR	4786122	Statement	out	368:11:8825:8827	4785931	2	True				
ANR	4786123	Statement	","	368:14:8828:8828	4785931	3	True				
ANR	4786124	Statement	"""["""	368:16:8830:8832	4785931	4	True				
ANR	4786125	Statement	R_SP	368:20:8834:8837	4785931	5	True				
ANR	4786126	Statement	"""]"""	368:25:8839:8841	4785931	6	True				
ANR	4786127	Statement	)	368:28:8842:8842	4785931	7	True				
ANR	4786128	ExpressionStatement		368:29:8843:8843	4785931	8	True				
ANR	4786129	BreakStatement	break ;	370:2:8851:8856	4785931	7	True				
ANR	4786130	Label	case 2 :	371:1:8859:8865	4785931	8	True				
ANR	4786131	IfStatement	if ( idx > 0 )		4785931	9					
ANR	4786132	Condition	idx > 0	372:6:8873:8879	4785931	0	True				
ANR	4786133	RelationalExpression	idx > 0		4785931	0		>			
ANR	4786134	Identifier	idx		4785931	0					
ANR	4786135	PrimaryExpression	0		4785931	1					
ANR	4786136	CompoundStatement		40:15:1108:1108	4785931	1					
ANR	4786137	Statement	sprintf	373:3:8887:8893	4785931	0	True				
ANR	4786138	Statement	(	373:11:8895:8895	4785931	1	True				
ANR	4786139	Statement	out	373:12:8896:8898	4785931	2	True				
ANR	4786140	Statement	","	373:15:8899:8899	4785931	3	True				
ANR	4786141	Statement	"""["""	373:17:8901:8903	4785931	4	True				
ANR	4786142	Statement	R_BP	373:21:8905:8908	4785931	5	True				
ANR	4786143	Statement	"""+%d]"""	373:26:8910:8915	4785931	6	True				
ANR	4786144	Statement	","	373:32:8916:8916	4785931	7	True				
ANR	4786145	Statement	idx	373:34:8918:8920	4785931	8	True				
ANR	4786146	Statement	)	373:37:8921:8921	4785931	9	True				
ANR	4786147	ExpressionStatement		373:38:8922:8922	4785931	10	True				
ANR	4786148	ElseStatement	else		4785931	0					
ANR	4786149	IfStatement	if ( idx < 0 )		4785931	0					
ANR	4786150	Condition	idx < 0	374:13:8937:8943	4785931	0	True				
ANR	4786151	RelationalExpression	idx < 0		4785931	0		<			
ANR	4786152	Identifier	idx		4785931	0					
ANR	4786153	PrimaryExpression	0		4785931	1					
ANR	4786154	CompoundStatement		42:22:1172:1172	4785931	1					
ANR	4786155	Statement	sprintf	375:3:8951:8957	4785931	0	True				
ANR	4786156	Statement	(	375:11:8959:8959	4785931	1	True				
ANR	4786157	Statement	out	375:12:8960:8962	4785931	2	True				
ANR	4786158	Statement	","	375:15:8963:8963	4785931	3	True				
ANR	4786159	Statement	"""["""	375:17:8965:8967	4785931	4	True				
ANR	4786160	Statement	R_BP	375:21:8969:8972	4785931	5	True				
ANR	4786161	Statement	"""%d]"""	375:26:8974:8978	4785931	6	True				
ANR	4786162	Statement	","	375:31:8979:8979	4785931	7	True				
ANR	4786163	Statement	idx	375:33:8981:8983	4785931	8	True				
ANR	4786164	Statement	)	375:36:8984:8984	4785931	9	True				
ANR	4786165	ExpressionStatement		375:37:8985:8985	4785931	10	True				
ANR	4786166	ElseStatement	else		4785931	0					
ANR	4786167	CompoundStatement		44:9:1222:1222	4785931	0					
ANR	4786168	Statement	strcpy	377:3:9001:9006	4785931	0	True				
ANR	4786169	Statement	(	377:10:9008:9008	4785931	1	True				
ANR	4786170	Statement	out	377:11:9009:9011	4785931	2	True				
ANR	4786171	Statement	","	377:14:9012:9012	4785931	3	True				
ANR	4786172	Statement	"""["""	377:16:9014:9016	4785931	4	True				
ANR	4786173	Statement	R_BP	377:20:9018:9021	4785931	5	True				
ANR	4786174	Statement	"""]"""	377:25:9023:9025	4785931	6	True				
ANR	4786175	Statement	)	377:28:9026:9026	4785931	7	True				
ANR	4786176	ExpressionStatement		377:29:9027:9027	4785931	8	True				
ANR	4786177	BreakStatement	break ;	379:2:9035:9040	4785931	10	True				
ANR	4786178	Statement	static	383:0:9048:9053	4785931	20	True				
ANR	4786179	Statement	void	383:7:9055:9058	4785931	21	True				
ANR	4786180	Statement	emit_trap	383:12:9060:9068	4785931	22	True				
ANR	4786181	Statement	(	383:22:9070:9070	4785931	23	True				
ANR	4786182	Statement	REgg	383:23:9071:9074	4785931	24	True				
ANR	4786183	Statement	*	383:28:9076:9076	4785931	25	True				
ANR	4786184	Statement	egg	383:29:9077:9079	4785931	26	True				
ANR	4786185	Statement	)	383:32:9080:9080	4785931	27	True				
ANR	4786186	CompoundStatement		51:34:1308:1308	4785931	28					
ANR	4786187	ExpressionStatement	"r_egg_printf ( egg , ""  int3\\n"" )"	384:1:9085:9115	4785931	0	True				
ANR	4786188	CallExpression	"r_egg_printf ( egg , ""  int3\\n"" )"		4785931	0					
ANR	4786189	Callee	r_egg_printf		4785931	0					
ANR	4786190	Identifier	r_egg_printf		4785931	0					
ANR	4786191	ArgumentList	egg		4785931	1					
ANR	4786192	Argument	egg		4785931	0					
ANR	4786193	Identifier	egg		4785931	0					
ANR	4786194	Argument	"""  int3\\n"""		4785931	1					
ANR	4786195	PrimaryExpression	"""  int3\\n"""		4785931	0					
ANR	4786196	Statement	static	387:0:9120:9125	4785931	29	True				
ANR	4786197	Statement	void	387:7:9127:9130	4785931	30	True				
ANR	4786198	Statement	emit_load_ptr	387:12:9132:9144	4785931	31	True				
ANR	4786199	Statement	(	387:25:9145:9145	4785931	32	True				
ANR	4786200	Statement	REgg	387:26:9146:9149	4785931	33	True				
ANR	4786201	Statement	*	387:31:9151:9151	4785931	34	True				
ANR	4786202	Statement	egg	387:32:9152:9154	4785931	35	True				
ANR	4786203	Statement	","	387:35:9155:9155	4785931	36	True				
ANR	4786204	Statement	const	387:37:9157:9161	4785931	37	True				
ANR	4786205	Statement	char	387:43:9163:9166	4785931	38	True				
ANR	4786206	Statement	*	387:48:9168:9168	4785931	39	True				
ANR	4786207	Statement	dst	387:49:9169:9171	4785931	40	True				
ANR	4786208	Statement	)	387:52:9172:9172	4785931	41	True				
ANR	4786209	CompoundStatement		56:1:1403:1421	4785931	42					
ANR	4786210	IdentifierDeclStatement	int d = atoi ( dst ) ;	388:1:9177:9195	4785931	0	True				
ANR	4786211	IdentifierDecl	d = atoi ( dst )		4785931	0					
ANR	4786212	IdentifierDeclType	int		4785931	0					
ANR	4786213	Identifier	d		4785931	1					
ANR	4786214	AssignmentExpression	d = atoi ( dst )		4785931	2		=			
ANR	4786215	Identifier	d		4785931	0					
ANR	4786216	CallExpression	atoi ( dst )		4785931	1					
ANR	4786217	Callee	atoi		4785931	0					
ANR	4786218	Identifier	atoi		4785931	0					
ANR	4786219	ArgumentList	dst		4785931	1					
ANR	4786220	Argument	dst		4785931	0					
ANR	4786221	Identifier	dst		4785931	0					
ANR	4786222	IfStatement	if ( d == 0 )		4785931	1					
ANR	4786223	Condition	d == 0	389:5:9202:9207	4785931	0	True				
ANR	4786224	EqualityExpression	d == 0		4785931	0		==			
ANR	4786225	Identifier	d		4785931	0					
ANR	4786226	PrimaryExpression	0		4785931	1					
ANR	4786227	CompoundStatement		58:2:1471:1498	4785931	1					
ANR	4786228	IdentifierDeclStatement	"char * p = strchr ( dst , '+' ) ;"	390:2:9245:9272	4785931	0	True				
ANR	4786229	IdentifierDecl	"* p = strchr ( dst , '+' )"		4785931	0					
ANR	4786230	IdentifierDeclType	char *		4785931	0					
ANR	4786231	Identifier	p		4785931	1					
ANR	4786232	AssignmentExpression	"* p = strchr ( dst , '+' )"		4785931	2		=			
ANR	4786233	Identifier	p		4785931	0					
ANR	4786234	CallExpression	"strchr ( dst , '+' )"		4785931	1					
ANR	4786235	Callee	strchr		4785931	0					
ANR	4786236	Identifier	strchr		4785931	0					
ANR	4786237	ArgumentList	dst		4785931	1					
ANR	4786238	Argument	dst		4785931	0					
ANR	4786239	Identifier	dst		4785931	0					
ANR	4786240	Argument	'+'		4785931	1					
ANR	4786241	PrimaryExpression	'+'		4785931	0					
ANR	4786242	IfStatement	if ( p )		4785931	1					
ANR	4786243	Condition	p	391:6:9280:9280	4785931	0	True				
ANR	4786244	Identifier	p		4785931	0					
ANR	4786245	CompoundStatement		59:9:1509:1509	4785931	1					
ANR	4786246	ExpressionStatement	d = atoi ( p + 1 )	392:3:9288:9304	4785931	0	True				
ANR	4786247	AssignmentExpression	d = atoi ( p + 1 )		4785931	0		=			
ANR	4786248	Identifier	d		4785931	0					
ANR	4786249	CallExpression	atoi ( p + 1 )		4785931	1					
ANR	4786250	Callee	atoi		4785931	0					
ANR	4786251	Identifier	atoi		4785931	0					
ANR	4786252	ArgumentList	p + 1		4785931	1					
ANR	4786253	Argument	p + 1		4785931	0					
ANR	4786254	AdditiveExpression	p + 1		4785931	0		+			
ANR	4786255	Identifier	p		4785931	0					
ANR	4786256	PrimaryExpression	1		4785931	1					
ANR	4786257	IfStatement	if ( attsyntax )		4785931	2					
ANR	4786258	Condition	attsyntax	398:5:9428:9436	4785931	0	True				
ANR	4786259	Identifier	attsyntax		4785931	0					
ANR	4786260	CompoundStatement		66:16:1665:1665	4785931	1					
ANR	4786261	Statement	r_egg_printf	399:2:9443:9454	4785931	0	True				
ANR	4786262	Statement	(	399:15:9456:9456	4785931	1	True				
ANR	4786263	Statement	egg	399:16:9457:9459	4785931	2	True				
ANR	4786264	Statement	","	399:19:9460:9460	4785931	3	True				
ANR	4786265	Statement	"""  leal %d(%%"""	399:21:9462:9475	4785931	4	True				
ANR	4786266	Statement	R_BP	399:35:9476:9479	4785931	5	True				
ANR	4786267	Statement	"""), %%"""	399:39:9480:9486	4785931	6	True				
ANR	4786268	Statement	R_AX	399:46:9487:9490	4785931	7	True				
ANR	4786269	Statement	"""\\n"""	399:50:9491:9494	4785931	8	True				
ANR	4786270	Statement	","	399:54:9495:9495	4785931	9	True				
ANR	4786271	Statement	d	399:56:9497:9497	4785931	10	True				
ANR	4786272	Statement	)	399:57:9498:9498	4785931	11	True				
ANR	4786273	ExpressionStatement		399:58:9499:9499	4785931	12	True				
ANR	4786274	ElseStatement	else		4785931	0					
ANR	4786275	CompoundStatement		68:8:1735:1735	4785931	0					
ANR	4786276	Statement	r_egg_printf	401:2:9513:9524	4785931	0	True				
ANR	4786277	Statement	(	401:15:9526:9526	4785931	1	True				
ANR	4786278	Statement	egg	401:16:9527:9529	4785931	2	True				
ANR	4786279	Statement	","	401:19:9530:9530	4785931	3	True				
ANR	4786280	Statement	"""  lea """	401:21:9532:9539	4785931	4	True				
ANR	4786281	Statement	R_AX	401:29:9540:9543	4785931	5	True				
ANR	4786282	Statement	""", ["""	401:33:9544:9548	4785931	6	True				
ANR	4786283	Statement	R_BP	401:38:9549:9552	4785931	7	True				
ANR	4786284	Statement	"""+%d]\\n"""	401:42:9553:9560	4785931	8	True				
ANR	4786285	Statement	","	401:50:9561:9561	4785931	9	True				
ANR	4786286	Statement	d	401:52:9563:9563	4785931	10	True				
ANR	4786287	Statement	)	401:53:9564:9564	4785931	11	True				
ANR	4786288	ExpressionStatement		401:54:9565:9565	4785931	12	True				
ANR	4786289	Statement	static	407:0:9679:9684	4785931	43	True				
ANR	4786290	Statement	void	407:7:9686:9689	4785931	44	True				
ANR	4786291	Statement	emit_branch	407:12:9691:9701	4785931	45	True				
ANR	4786292	Statement	(	407:23:9702:9702	4785931	46	True				
ANR	4786293	Statement	REgg	407:24:9703:9706	4785931	47	True				
ANR	4786294	Statement	*	407:29:9708:9708	4785931	48	True				
ANR	4786295	Statement	egg	407:30:9709:9711	4785931	49	True				
ANR	4786296	Statement	","	407:33:9712:9712	4785931	50	True				
ANR	4786297	Statement	char	407:35:9714:9717	4785931	51	True				
ANR	4786298	Statement	*	407:40:9719:9719	4785931	52	True				
ANR	4786299	Statement	b	407:41:9720:9720	4785931	53	True				
ANR	4786300	Statement	","	407:42:9721:9721	4785931	54	True				
ANR	4786301	Statement	char	407:44:9723:9726	4785931	55	True				
ANR	4786302	Statement	*	407:49:9728:9728	4785931	56	True				
ANR	4786303	Statement	g	407:50:9729:9729	4785931	57	True				
ANR	4786304	Statement	","	407:51:9730:9730	4785931	58	True				
ANR	4786305	Statement	char	407:53:9732:9735	4785931	59	True				
ANR	4786306	Statement	*	407:58:9737:9737	4785931	60	True				
ANR	4786307	Statement	e	407:59:9738:9738	4785931	61	True				
ANR	4786308	Statement	","	407:60:9739:9739	4785931	62	True				
ANR	4786309	Statement	char	407:62:9741:9744	4785931	63	True				
ANR	4786310	Statement	*	407:67:9746:9746	4785931	64	True				
ANR	4786311	Statement	n	407:68:9747:9747	4785931	65	True				
ANR	4786312	Statement	","	407:69:9748:9748	4785931	66	True				
ANR	4786313	Statement	int	407:71:9750:9752	4785931	67	True				
ANR	4786314	Statement	sz	407:75:9754:9755	4785931	68	True				
ANR	4786315	Statement	","	407:77:9756:9756	4785931	69	True				
ANR	4786316	Statement	const	407:79:9758:9762	4785931	70	True				
ANR	4786317	Statement	char	407:85:9764:9767	4785931	71	True				
ANR	4786318	Statement	*	407:90:9769:9769	4785931	72	True				
ANR	4786319	Statement	dst	407:91:9770:9772	4785931	73	True				
ANR	4786320	Statement	)	407:94:9773:9773	4785931	74	True				
ANR	4786321	CompoundStatement		79:1:2060:2080	4785931	75					
ANR	4786322	IdentifierDeclStatement	"char * p , str [ 64 ] ;"	408:1:9778:9794	4785931	0	True				
ANR	4786323	IdentifierDecl	* p		4785931	0					
ANR	4786324	IdentifierDeclType	char *		4785931	0					
ANR	4786325	Identifier	p		4785931	1					
ANR	4786326	IdentifierDecl	str [ 64 ]		4785931	1					
ANR	4786327	IdentifierDeclType	char [ 64 ]		4785931	0					
ANR	4786328	Identifier	str		4785931	1					
ANR	4786329	PrimaryExpression	64		4785931	2					
ANR	4786330	IdentifierDeclStatement	char * arg = NULL ;	409:1:9797:9813	4785931	1	True				
ANR	4786331	IdentifierDecl	* arg = NULL		4785931	0					
ANR	4786332	IdentifierDeclType	char *		4785931	0					
ANR	4786333	Identifier	arg		4785931	1					
ANR	4786334	AssignmentExpression	* arg = NULL		4785931	2		=			
ANR	4786335	Identifier	NULL		4785931	0					
ANR	4786336	Identifier	NULL		4785931	1					
ANR	4786337	IdentifierDeclStatement	"char * op = ""jz"" ;"	410:1:9816:9831	4785931	2	True				
ANR	4786338	IdentifierDecl	"* op = ""jz"""		4785931	0					
ANR	4786339	IdentifierDeclType	char *		4785931	0					
ANR	4786340	Identifier	op		4785931	1					
ANR	4786341	AssignmentExpression	"* op = ""jz"""		4785931	2		=			
ANR	4786342	Identifier	op		4785931	0					
ANR	4786343	PrimaryExpression	"""jz"""		4785931	1					
ANR	4786344	IdentifierDeclStatement	int signed_value = 1 ;	411:1:9834:9854	4785931	3	True				
ANR	4786345	IdentifierDecl	signed_value = 1		4785931	0					
ANR	4786346	IdentifierDeclType	int		4785931	0					
ANR	4786347	Identifier	signed_value		4785931	1					
ANR	4786348	AssignmentExpression	signed_value = 1		4785931	2		=			
ANR	4786349	Identifier	signed_value		4785931	0					
ANR	4786350	PrimaryExpression	1		4785931	1					
ANR	4786351	IfStatement	if ( b )		4785931	4					
ANR	4786352	Condition	b	413:5:9965:9965	4785931	0	True				
ANR	4786353	Identifier	b		4785931	0					
ANR	4786354	CompoundStatement		81:8:2194:2194	4785931	1					
ANR	4786355	ExpressionStatement	* b = '\\0'	414:2:9972:9981	4785931	0	True				
ANR	4786356	AssignmentExpression	* b = '\\0'		4785931	0		=			
ANR	4786357	UnaryOperationExpression	* b		4785931	0					
ANR	4786358	UnaryOperator	*		4785931	0					
ANR	4786359	Identifier	b		4785931	1					
ANR	4786360	PrimaryExpression	'\\0'		4785931	1					
ANR	4786361	IfStatement	if ( signed_value )		4785931	1					
ANR	4786362	Condition	signed_value	415:6:9989:10000	4785931	0	True				
ANR	4786363	Identifier	signed_value		4785931	0					
ANR	4786364	CompoundStatement		83:20:2229:2229	4785931	1					
ANR	4786365	ExpressionStatement	"op = e ? ""jge"" : ""jg"""	416:3:10008:10027	4785931	0	True				
ANR	4786366	AssignmentExpression	"op = e ? ""jge"" : ""jg"""		4785931	0		=			
ANR	4786367	Identifier	op		4785931	0					
ANR	4786368	ConditionalExpression	"e ? ""jge"" : ""jg"""		4785931	1					
ANR	4786369	Condition	e		4785931	0					
ANR	4786370	Identifier	e		4785931	0					
ANR	4786371	PrimaryExpression	"""jge"""		4785931	1					
ANR	4786372	PrimaryExpression	"""jg"""		4785931	2					
ANR	4786373	ElseStatement	else		4785931	0					
ANR	4786374	CompoundStatement		85:9:2264:2264	4785931	0					
ANR	4786375	ExpressionStatement	"op = e ? ""jae"" : ""ja"""	418:3:10043:10062	4785931	0	True				
ANR	4786376	AssignmentExpression	"op = e ? ""jae"" : ""ja"""		4785931	0		=			
ANR	4786377	Identifier	op		4785931	0					
ANR	4786378	ConditionalExpression	"e ? ""jae"" : ""ja"""		4785931	1					
ANR	4786379	Condition	e		4785931	0					
ANR	4786380	Identifier	e		4785931	0					
ANR	4786381	PrimaryExpression	"""jae"""		4785931	1					
ANR	4786382	PrimaryExpression	"""ja"""		4785931	2					
ANR	4786383	ExpressionStatement	arg = b + 1	420:2:10070:10079	4785931	2	True				
ANR	4786384	AssignmentExpression	arg = b + 1		4785931	0		=			
ANR	4786385	Identifier	arg		4785931	0					
ANR	4786386	AdditiveExpression	b + 1		4785931	1		+			
ANR	4786387	Identifier	b		4785931	0					
ANR	4786388	PrimaryExpression	1		4785931	1					
ANR	4786389	ElseStatement	else		4785931	0					
ANR	4786390	IfStatement	if ( g )		4785931	0					
ANR	4786391	Condition	g	422:5:10094:10094	4785931	0	True				
ANR	4786392	Identifier	g		4785931	0					
ANR	4786393	CompoundStatement		90:8:2323:2323	4785931	1					
ANR	4786394	ExpressionStatement	* g = '\\0'	423:2:10101:10110	4785931	0	True				
ANR	4786395	AssignmentExpression	* g = '\\0'		4785931	0		=			
ANR	4786396	UnaryOperationExpression	* g		4785931	0					
ANR	4786397	UnaryOperator	*		4785931	0					
ANR	4786398	Identifier	g		4785931	1					
ANR	4786399	PrimaryExpression	'\\0'		4785931	1					
ANR	4786400	IfStatement	if ( signed_value )		4785931	1					
ANR	4786401	Condition	signed_value	424:6:10118:10129	4785931	0	True				
ANR	4786402	Identifier	signed_value		4785931	0					
ANR	4786403	CompoundStatement		92:20:2358:2358	4785931	1					
ANR	4786404	ExpressionStatement	"op = e ? ""jle"" : ""jl"""	425:3:10137:10156	4785931	0	True				
ANR	4786405	AssignmentExpression	"op = e ? ""jle"" : ""jl"""		4785931	0		=			
ANR	4786406	Identifier	op		4785931	0					
ANR	4786407	ConditionalExpression	"e ? ""jle"" : ""jl"""		4785931	1					
ANR	4786408	Condition	e		4785931	0					
ANR	4786409	Identifier	e		4785931	0					
ANR	4786410	PrimaryExpression	"""jle"""		4785931	1					
ANR	4786411	PrimaryExpression	"""jl"""		4785931	2					
ANR	4786412	ElseStatement	else		4785931	0					
ANR	4786413	CompoundStatement		94:9:2393:2393	4785931	0					
ANR	4786414	ExpressionStatement	"op = e ? ""jbe"" : ""jb"""	427:3:10172:10191	4785931	0	True				
ANR	4786415	AssignmentExpression	"op = e ? ""jbe"" : ""jb"""		4785931	0		=			
ANR	4786416	Identifier	op		4785931	0					
ANR	4786417	ConditionalExpression	"e ? ""jbe"" : ""jb"""		4785931	1					
ANR	4786418	Condition	e		4785931	0					
ANR	4786419	Identifier	e		4785931	0					
ANR	4786420	PrimaryExpression	"""jbe"""		4785931	1					
ANR	4786421	PrimaryExpression	"""jb"""		4785931	2					
ANR	4786422	ExpressionStatement	arg = g + 1	429:2:10199:10210	4785931	2	True				
ANR	4786423	AssignmentExpression	arg = g + 1		4785931	0		=			
ANR	4786424	Identifier	arg		4785931	0					
ANR	4786425	AdditiveExpression	g + 1		4785931	1		+			
ANR	4786426	Identifier	g		4785931	0					
ANR	4786427	PrimaryExpression	1		4785931	1					
ANR	4786428	IfStatement	if ( ! arg )		4785931	5					
ANR	4786429	Condition	! arg	431:5:10220:10223	4785931	0	True				
ANR	4786430	UnaryOperationExpression	! arg		4785931	0					
ANR	4786431	UnaryOperator	!		4785931	0					
ANR	4786432	Identifier	arg		4785931	1					
ANR	4786433	CompoundStatement		99:11:2452:2452	4785931	1					
ANR	4786434	IfStatement	if ( e )		4785931	0					
ANR	4786435	Condition	e	432:6:10234:10234	4785931	0	True				
ANR	4786436	Identifier	e		4785931	0					
ANR	4786437	CompoundStatement		100:9:2463:2463	4785931	1					
ANR	4786438	ExpressionStatement	arg = e + 1	433:3:10242:10251	4785931	0	True				
ANR	4786439	AssignmentExpression	arg = e + 1		4785931	0		=			
ANR	4786440	Identifier	arg		4785931	0					
ANR	4786441	AdditiveExpression	e + 1		4785931	1		+			
ANR	4786442	Identifier	e		4785931	0					
ANR	4786443	PrimaryExpression	1		4785931	1					
ANR	4786444	ExpressionStatement	"op = ""jne"""	434:3:10256:10266	4785931	1	True				
ANR	4786445	AssignmentExpression	"op = ""jne"""		4785931	0		=			
ANR	4786446	Identifier	op		4785931	0					
ANR	4786447	PrimaryExpression	"""jne"""		4785931	1					
ANR	4786448	ElseStatement	else		4785931	0					
ANR	4786449	CompoundStatement		103:9:2503:2503	4785931	0					
ANR	4786450	ExpressionStatement	"arg = attsyntax ? ""$0"" : ""0"""	436:3:10282:10308	4785931	0	True				
ANR	4786451	AssignmentExpression	"arg = attsyntax ? ""$0"" : ""0"""		4785931	0		=			
ANR	4786452	Identifier	arg		4785931	0					
ANR	4786453	ConditionalExpression	"attsyntax ? ""$0"" : ""0"""		4785931	1					
ANR	4786454	Condition	attsyntax		4785931	0					
ANR	4786455	Identifier	attsyntax		4785931	0					
ANR	4786456	PrimaryExpression	"""$0"""		4785931	1					
ANR	4786457	PrimaryExpression	"""0"""		4785931	2					
ANR	4786458	IfStatement	if ( n )		4785931	1					
ANR	4786459	Condition	n	437:7:10317:10317	4785931	0	True				
ANR	4786460	Identifier	n		4785931	0					
ANR	4786461	CompoundStatement		105:10:2546:2546	4785931	1					
ANR	4786462	ExpressionStatement	"op = ""jnz"""	438:4:10326:10336	4785931	0	True				
ANR	4786463	AssignmentExpression	"op = ""jnz"""		4785931	0		=			
ANR	4786464	Identifier	op		4785931	0					
ANR	4786465	PrimaryExpression	"""jnz"""		4785931	1					
ANR	4786466	ElseStatement	else		4785931	0					
ANR	4786467	CompoundStatement		107:10:2574:2574	4785931	0					
ANR	4786468	ExpressionStatement	"op = ""jz"""	440:4:10354:10363	4785931	0	True				
ANR	4786469	AssignmentExpression	"op = ""jz"""		4785931	0		=			
ANR	4786470	Identifier	op		4785931	0					
ANR	4786471	PrimaryExpression	"""jz"""		4785931	1					
ANR	4786472	IfStatement	if ( * arg == '=' )		4785931	6					
ANR	4786473	Condition	* arg == '='	445:5:10383:10393	4785931	0	True				
ANR	4786474	EqualityExpression	* arg == '='		4785931	0		==			
ANR	4786475	UnaryOperationExpression	* arg		4785931	0					
ANR	4786476	UnaryOperator	*		4785931	0					
ANR	4786477	Identifier	arg		4785931	1					
ANR	4786478	PrimaryExpression	'='		4785931	1					
ANR	4786479	CompoundStatement		113:18:2622:2622	4785931	1					
ANR	4786480	ExpressionStatement	arg ++	446:2:10400:10405	4785931	0	True				
ANR	4786481	PostIncDecOperationExpression	arg ++		4785931	0					
ANR	4786482	Identifier	arg		4785931	0					
ANR	4786483	IncDec	++		4785931	1					
ANR	4786484	ExpressionStatement	"p = r_egg_mkvar ( egg , str , arg , 0 )"	448:1:10433:10467	4785931	7	True				
ANR	4786485	AssignmentExpression	"p = r_egg_mkvar ( egg , str , arg , 0 )"		4785931	0		=			
ANR	4786486	Identifier	p		4785931	0					
ANR	4786487	CallExpression	"r_egg_mkvar ( egg , str , arg , 0 )"		4785931	1					
ANR	4786488	Callee	r_egg_mkvar		4785931	0					
ANR	4786489	Identifier	r_egg_mkvar		4785931	0					
ANR	4786490	ArgumentList	egg		4785931	1					
ANR	4786491	Argument	egg		4785931	0					
ANR	4786492	Identifier	egg		4785931	0					
ANR	4786493	Argument	str		4785931	1					
ANR	4786494	Identifier	str		4785931	0					
ANR	4786495	Argument	arg		4785931	2					
ANR	4786496	Identifier	arg		4785931	0					
ANR	4786497	Argument	0		4785931	3					
ANR	4786498	PrimaryExpression	0		4785931	0					
ANR	4786499	IfStatement	if ( attsyntax )		4785931	8					
ANR	4786500	Condition	attsyntax	449:5:10474:10482	4785931	0	True				
ANR	4786501	Identifier	attsyntax		4785931	0					
ANR	4786502	CompoundStatement		117:16:2711:2711	4785931	1					
ANR	4786503	Statement	r_egg_printf	450:2:10489:10500	4785931	0	True				
ANR	4786504	Statement	(	450:15:10502:10502	4785931	1	True				
ANR	4786505	Statement	egg	450:16:10503:10505	4785931	2	True				
ANR	4786506	Statement	","	450:19:10506:10506	4785931	3	True				
ANR	4786507	Statement	"""  pop %%"""	450:21:10508:10517	4785931	4	True				
ANR	4786508	Statement	R_AX	450:31:10518:10521	4785931	5	True				
ANR	4786509	Statement	"""\\n"""	450:35:10522:10525	4785931	6	True				
ANR	4786510	Statement	)	450:39:10526:10526	4785931	7	True				
ANR	4786511	ExpressionStatement		450:40:10527:10527	4785931	8	True				
ANR	4786512	Statement	r_egg_printf	451:2:10586:10597	4785931	9	True				
ANR	4786513	Statement	(	451:15:10599:10599	4785931	10	True				
ANR	4786514	Statement	egg	451:16:10600:10602	4785931	11	True				
ANR	4786515	Statement	","	451:19:10603:10603	4785931	12	True				
ANR	4786516	Statement	"""  cmp%c %s, %%"""	451:21:10605:10620	4785931	13	True				
ANR	4786517	Statement	R_AX	451:37:10621:10624	4785931	14	True				
ANR	4786518	Statement	"""\\n"""	451:41:10625:10628	4785931	15	True				
ANR	4786519	Statement	","	451:45:10629:10629	4785931	16	True				
ANR	4786520	Statement	sz	451:47:10631:10632	4785931	17	True				
ANR	4786521	Statement	","	451:49:10633:10633	4785931	18	True				
ANR	4786522	Statement	p	451:51:10635:10635	4785931	19	True				
ANR	4786523	Statement	)	451:52:10636:10636	4785931	20	True				
ANR	4786524	ExpressionStatement		451:53:10637:10637	4785931	21	True				
ANR	4786525	ElseStatement	else		4785931	0					
ANR	4786526	CompoundStatement		120:8:2873:2873	4785931	0					
ANR	4786527	Statement	r_egg_printf	453:2:10651:10662	4785931	0	True				
ANR	4786528	Statement	(	453:15:10664:10664	4785931	1	True				
ANR	4786529	Statement	egg	453:16:10665:10667	4785931	2	True				
ANR	4786530	Statement	","	453:19:10668:10668	4785931	3	True				
ANR	4786531	Statement	"""  pop """	453:21:10670:10677	4785931	4	True				
ANR	4786532	Statement	R_AX	453:29:10678:10681	4785931	5	True				
ANR	4786533	Statement	"""\\n"""	453:33:10682:10685	4785931	6	True				
ANR	4786534	Statement	)	453:37:10686:10686	4785931	7	True				
ANR	4786535	ExpressionStatement		453:38:10687:10687	4785931	8	True				
ANR	4786536	Statement	r_egg_printf	454:2:10746:10757	4785931	9	True				
ANR	4786537	Statement	(	454:15:10759:10759	4785931	10	True				
ANR	4786538	Statement	egg	454:16:10760:10762	4785931	11	True				
ANR	4786539	Statement	","	454:19:10763:10763	4785931	12	True				
ANR	4786540	Statement	"""  cmp """	454:21:10765:10772	4785931	13	True				
ANR	4786541	Statement	R_AX	454:29:10773:10776	4785931	14	True				
ANR	4786542	Statement	""", %s\\n"""	454:33:10777:10784	4785931	15	True				
ANR	4786543	Statement	","	454:41:10785:10785	4785931	16	True				
ANR	4786544	Statement	p	454:43:10787:10787	4785931	17	True				
ANR	4786545	Statement	)	454:44:10788:10788	4785931	18	True				
ANR	4786546	ExpressionStatement		454:45:10789:10789	4785931	19	True				
ANR	4786547	ExpressionStatement	free ( p )	457:1:10814:10822	4785931	9	True				
ANR	4786548	CallExpression	free ( p )		4785931	0					
ANR	4786549	Callee	free		4785931	0					
ANR	4786550	Identifier	free		4785931	0					
ANR	4786551	ArgumentList	p		4785931	1					
ANR	4786552	Argument	p		4785931	0					
ANR	4786553	Identifier	p		4785931	0					
ANR	4786554	ExpressionStatement	"r_egg_printf ( egg , ""  %s %s\\n"" , op , dst )"	458:1:10825:10865	4785931	10	True				
ANR	4786555	CallExpression	"r_egg_printf ( egg , ""  %s %s\\n"" , op , dst )"		4785931	0					
ANR	4786556	Callee	r_egg_printf		4785931	0					
ANR	4786557	Identifier	r_egg_printf		4785931	0					
ANR	4786558	ArgumentList	egg		4785931	1					
ANR	4786559	Argument	egg		4785931	0					
ANR	4786560	Identifier	egg		4785931	0					
ANR	4786561	Argument	"""  %s %s\\n"""		4785931	1					
ANR	4786562	PrimaryExpression	"""  %s %s\\n"""		4785931	0					
ANR	4786563	Argument	op		4785931	2					
ANR	4786564	Identifier	op		4785931	0					
ANR	4786565	Argument	dst		4785931	3					
ANR	4786566	Identifier	dst		4785931	0					
ANR	4786567	Statement	static	461:0:10870:10875	4785931	76	True				
ANR	4786568	Statement	void	461:7:10877:10880	4785931	77	True				
ANR	4786569	Statement	emit_load	461:12:10882:10890	4785931	78	True				
ANR	4786570	Statement	(	461:21:10891:10891	4785931	79	True				
ANR	4786571	Statement	REgg	461:22:10892:10895	4785931	80	True				
ANR	4786572	Statement	*	461:27:10897:10897	4785931	81	True				
ANR	4786573	Statement	egg	461:28:10898:10900	4785931	82	True				
ANR	4786574	Statement	","	461:31:10901:10901	4785931	83	True				
ANR	4786575	Statement	const	461:33:10903:10907	4785931	84	True				
ANR	4786576	Statement	char	461:39:10909:10912	4785931	85	True				
ANR	4786577	Statement	*	461:44:10914:10914	4785931	86	True				
ANR	4786578	Statement	dst	461:45:10915:10917	4785931	87	True				
ANR	4786579	Statement	","	461:48:10918:10918	4785931	88	True				
ANR	4786580	Statement	int	461:50:10920:10922	4785931	89	True				
ANR	4786581	Statement	sz	461:54:10924:10925	4785931	90	True				
ANR	4786582	Statement	)	461:56:10926:10926	4785931	91	True				
ANR	4786583	CompoundStatement		129:58:3154:3154	4785931	92					
ANR	4786584	IfStatement	if ( attsyntax )		4785931	0					
ANR	4786585	Condition	attsyntax	462:5:10935:10943	4785931	0	True				
ANR	4786586	Identifier	attsyntax		4785931	0					
ANR	4786587	CompoundStatement		130:16:3172:3172	4785931	1					
ANR	4786588	SwitchStatement	switch ( sz )		4785931	0					
ANR	4786589	Condition	sz	463:10:10958:10959	4785931	0	True				
ANR	4786590	Identifier	sz		4785931	0					
ANR	4786591	CompoundStatement		131:14:3188:3188	4785931	1					
ANR	4786592	Label	case 'l' :	464:2:10966:10974	4785931	0	True				
ANR	4786593	Statement	r_egg_printf	465:3:10979:10990	4785931	1	True				
ANR	4786594	Statement	(	465:16:10992:10992	4785931	2	True				
ANR	4786595	Statement	egg	465:17:10993:10995	4785931	3	True				
ANR	4786596	Statement	","	465:20:10996:10996	4785931	4	True				
ANR	4786597	Statement	"""  movl %s, %%"""	465:22:10998:11012	4785931	5	True				
ANR	4786598	Statement	R_AX	465:37:11013:11016	4785931	6	True				
ANR	4786599	Statement	"""\\n"""	465:41:11017:11020	4785931	7	True				
ANR	4786600	Statement	","	465:45:11021:11021	4785931	8	True				
ANR	4786601	Statement	dst	465:47:11023:11025	4785931	9	True				
ANR	4786602	Statement	)	465:50:11026:11026	4785931	10	True				
ANR	4786603	ExpressionStatement		465:51:11027:11027	4785931	11	True				
ANR	4786604	Statement	r_egg_printf	466:3:11032:11043	4785931	12	True				
ANR	4786605	Statement	(	466:16:11045:11045	4785931	13	True				
ANR	4786606	Statement	egg	466:17:11046:11048	4785931	14	True				
ANR	4786607	Statement	","	466:20:11049:11049	4785931	15	True				
ANR	4786608	Statement	"""  movl (%%"""	466:22:11051:11062	4785931	16	True				
ANR	4786609	Statement	R_AX	466:34:11063:11066	4785931	17	True				
ANR	4786610	Statement	"""), %%"""	466:38:11067:11073	4785931	18	True				
ANR	4786611	Statement	R_AX	466:45:11074:11077	4785931	19	True				
ANR	4786612	Statement	"""\\n"""	466:49:11078:11081	4785931	20	True				
ANR	4786613	Statement	)	466:53:11082:11082	4785931	21	True				
ANR	4786614	ExpressionStatement		466:54:11083:11083	4785931	22	True				
ANR	4786615	BreakStatement	break ;	467:3:11088:11093	4785931	23	True				
ANR	4786616	Label	case 'b' :	468:2:11097:11105	4785931	24	True				
ANR	4786617	Statement	r_egg_printf	469:3:11110:11121	4785931	25	True				
ANR	4786618	Statement	(	469:16:11123:11123	4785931	26	True				
ANR	4786619	Statement	egg	469:17:11124:11126	4785931	27	True				
ANR	4786620	Statement	","	469:20:11127:11127	4785931	28	True				
ANR	4786621	Statement	"""  movl %s, %%"""	469:22:11129:11143	4785931	29	True				
ANR	4786622	Statement	R_AX	469:37:11144:11147	4785931	30	True				
ANR	4786623	Statement	"""\\n"""	469:41:11148:11151	4785931	31	True				
ANR	4786624	Statement	","	469:45:11152:11152	4785931	32	True				
ANR	4786625	Statement	dst	469:47:11154:11156	4785931	33	True				
ANR	4786626	Statement	)	469:50:11157:11157	4785931	34	True				
ANR	4786627	ExpressionStatement		469:51:11158:11158	4785931	35	True				
ANR	4786628	Statement	r_egg_printf	470:3:11163:11174	4785931	36	True				
ANR	4786629	Statement	(	470:16:11176:11176	4785931	37	True				
ANR	4786630	Statement	egg	470:17:11177:11179	4785931	38	True				
ANR	4786631	Statement	","	470:20:11180:11180	4785931	39	True				
ANR	4786632	Statement	"""  movzb (%%"""	470:22:11182:11194	4785931	40	True				
ANR	4786633	Statement	R_AX	470:35:11195:11198	4785931	41	True				
ANR	4786634	Statement	"""), %%"""	470:39:11199:11205	4785931	42	True				
ANR	4786635	Statement	R_AX	470:46:11206:11209	4785931	43	True				
ANR	4786636	Statement	"""\\n"""	470:50:11210:11213	4785931	44	True				
ANR	4786637	Statement	)	470:54:11214:11214	4785931	45	True				
ANR	4786638	ExpressionStatement		470:55:11215:11215	4785931	46	True				
ANR	4786639	BreakStatement	break ;	471:3:11220:11225	4785931	47	True				
ANR	4786640	Label	default :	472:2:11229:11236	4785931	48	True				
ANR	4786641	Identifier	default		4785931	0					
ANR	4786642	Statement	r_egg_printf	474:3:11266:11277	4785931	49	True				
ANR	4786643	Statement	(	474:16:11279:11279	4785931	50	True				
ANR	4786644	Statement	egg	474:17:11280:11282	4785931	51	True				
ANR	4786645	Statement	","	474:20:11283:11283	4785931	52	True				
ANR	4786646	Statement	"""  mov%c %s, %%"""	474:22:11285:11300	4785931	53	True				
ANR	4786647	Statement	R_AX	474:38:11301:11304	4785931	54	True				
ANR	4786648	Statement	"""\\n"""	474:42:11305:11308	4785931	55	True				
ANR	4786649	Statement	","	474:46:11309:11309	4785931	56	True				
ANR	4786650	Statement	sz	474:48:11311:11312	4785931	57	True				
ANR	4786651	Statement	","	474:50:11313:11313	4785931	58	True				
ANR	4786652	Statement	dst	474:52:11315:11317	4785931	59	True				
ANR	4786653	Statement	)	474:55:11318:11318	4785931	60	True				
ANR	4786654	ExpressionStatement		474:56:11319:11319	4785931	61	True				
ANR	4786655	Statement	r_egg_printf	475:3:11324:11335	4785931	62	True				
ANR	4786656	Statement	(	475:16:11337:11337	4785931	63	True				
ANR	4786657	Statement	egg	475:17:11338:11340	4785931	64	True				
ANR	4786658	Statement	","	475:20:11341:11341	4785931	65	True				
ANR	4786659	Statement	"""  mov%c (%%"""	475:22:11343:11355	4785931	66	True				
ANR	4786660	Statement	R_AX	475:35:11356:11359	4785931	67	True				
ANR	4786661	Statement	"""), %%"""	475:39:11360:11366	4785931	68	True				
ANR	4786662	Statement	R_AX	475:46:11367:11370	4785931	69	True				
ANR	4786663	Statement	"""\\n"""	475:50:11371:11374	4785931	70	True				
ANR	4786664	Statement	","	475:54:11375:11375	4785931	71	True				
ANR	4786665	Statement	sz	475:56:11377:11378	4785931	72	True				
ANR	4786666	Statement	)	475:58:11379:11379	4785931	73	True				
ANR	4786667	ExpressionStatement		475:59:11380:11380	4785931	74	True				
ANR	4786668	ElseStatement	else		4785931	0					
ANR	4786669	CompoundStatement		145:8:3620:3620	4785931	0					
ANR	4786670	SwitchStatement	switch ( sz )		4785931	0					
ANR	4786671	Condition	sz	478:10:11406:11407	4785931	0	True				
ANR	4786672	Identifier	sz		4785931	0					
ANR	4786673	CompoundStatement		146:14:3636:3636	4785931	1					
ANR	4786674	Label	case 'l' :	479:2:11414:11422	4785931	0	True				
ANR	4786675	Statement	r_egg_printf	480:3:11427:11438	4785931	1	True				
ANR	4786676	Statement	(	480:16:11440:11440	4785931	2	True				
ANR	4786677	Statement	egg	480:17:11441:11443	4785931	3	True				
ANR	4786678	Statement	","	480:20:11444:11444	4785931	4	True				
ANR	4786679	Statement	"""  mov """	480:22:11446:11453	4785931	5	True				
ANR	4786680	Statement	R_AX	480:30:11454:11457	4785931	6	True				
ANR	4786681	Statement	""", %s\\n"""	480:34:11458:11465	4785931	7	True				
ANR	4786682	Statement	","	480:42:11466:11466	4785931	8	True				
ANR	4786683	Statement	dst	480:44:11468:11470	4785931	9	True				
ANR	4786684	Statement	)	480:47:11471:11471	4785931	10	True				
ANR	4786685	ExpressionStatement		480:48:11472:11472	4785931	11	True				
ANR	4786686	Statement	r_egg_printf	481:3:11477:11488	4785931	12	True				
ANR	4786687	Statement	(	481:16:11490:11490	4785931	13	True				
ANR	4786688	Statement	egg	481:17:11491:11493	4785931	14	True				
ANR	4786689	Statement	","	481:20:11494:11494	4785931	15	True				
ANR	4786690	Statement	"""  mov """	481:22:11496:11503	4785931	16	True				
ANR	4786691	Statement	R_AX	481:30:11504:11507	4785931	17	True				
ANR	4786692	Statement	""", ["""	481:34:11508:11512	4785931	18	True				
ANR	4786693	Statement	R_AX	481:39:11513:11516	4785931	19	True				
ANR	4786694	Statement	"""]\\n"""	481:43:11517:11521	4785931	20	True				
ANR	4786695	Statement	)	481:48:11522:11522	4785931	21	True				
ANR	4786696	ExpressionStatement		481:49:11523:11523	4785931	22	True				
ANR	4786697	BreakStatement	break ;	482:3:11528:11533	4785931	23	True				
ANR	4786698	Label	case 'b' :	483:2:11537:11545	4785931	24	True				
ANR	4786699	Statement	r_egg_printf	484:3:11550:11561	4785931	25	True				
ANR	4786700	Statement	(	484:16:11563:11563	4785931	26	True				
ANR	4786701	Statement	egg	484:17:11564:11566	4785931	27	True				
ANR	4786702	Statement	","	484:20:11567:11567	4785931	28	True				
ANR	4786703	Statement	"""  mov """	484:22:11569:11576	4785931	29	True				
ANR	4786704	Statement	R_AX	484:30:11577:11580	4785931	30	True				
ANR	4786705	Statement	""", %s\\n"""	484:34:11581:11588	4785931	31	True				
ANR	4786706	Statement	","	484:42:11589:11589	4785931	32	True				
ANR	4786707	Statement	dst	484:44:11591:11593	4785931	33	True				
ANR	4786708	Statement	)	484:47:11594:11594	4785931	34	True				
ANR	4786709	ExpressionStatement		484:48:11595:11595	4785931	35	True				
ANR	4786710	Statement	r_egg_printf	485:3:11600:11611	4785931	36	True				
ANR	4786711	Statement	(	485:16:11613:11613	4785931	37	True				
ANR	4786712	Statement	egg	485:17:11614:11616	4785931	38	True				
ANR	4786713	Statement	","	485:20:11617:11617	4785931	39	True				
ANR	4786714	Statement	"""  movz """	485:22:11619:11627	4785931	40	True				
ANR	4786715	Statement	R_AX	485:31:11628:11631	4785931	41	True				
ANR	4786716	Statement	""", ["""	485:35:11632:11636	4785931	42	True				
ANR	4786717	Statement	R_AX	485:40:11637:11640	4785931	43	True				
ANR	4786718	Statement	"""]\\n"""	485:44:11641:11645	4785931	44	True				
ANR	4786719	Statement	)	485:49:11646:11646	4785931	45	True				
ANR	4786720	ExpressionStatement		485:50:11647:11647	4785931	46	True				
ANR	4786721	BreakStatement	break ;	486:3:11652:11657	4785931	47	True				
ANR	4786722	Label	default :	487:2:11661:11668	4785931	48	True				
ANR	4786723	Identifier	default		4785931	0					
ANR	4786724	Statement	r_egg_printf	489:3:11698:11709	4785931	49	True				
ANR	4786725	Statement	(	489:16:11711:11711	4785931	50	True				
ANR	4786726	Statement	egg	489:17:11712:11714	4785931	51	True				
ANR	4786727	Statement	","	489:20:11715:11715	4785931	52	True				
ANR	4786728	Statement	"""  mov """	489:22:11717:11724	4785931	53	True				
ANR	4786729	Statement	R_AX	489:30:11725:11728	4785931	54	True				
ANR	4786730	Statement	""", %s\\n"""	489:34:11729:11736	4785931	55	True				
ANR	4786731	Statement	","	489:42:11737:11737	4785931	56	True				
ANR	4786732	Statement	dst	489:44:11739:11741	4785931	57	True				
ANR	4786733	Statement	)	489:47:11742:11742	4785931	58	True				
ANR	4786734	ExpressionStatement		489:48:11743:11743	4785931	59	True				
ANR	4786735	Statement	r_egg_printf	490:3:11748:11759	4785931	60	True				
ANR	4786736	Statement	(	490:16:11761:11761	4785931	61	True				
ANR	4786737	Statement	egg	490:17:11762:11764	4785931	62	True				
ANR	4786738	Statement	","	490:20:11765:11765	4785931	63	True				
ANR	4786739	Statement	"""  mov """	490:22:11767:11774	4785931	64	True				
ANR	4786740	Statement	R_AX	490:30:11775:11778	4785931	65	True				
ANR	4786741	Statement	""", ["""	490:34:11779:11783	4785931	66	True				
ANR	4786742	Statement	R_AX	490:39:11784:11787	4785931	67	True				
ANR	4786743	Statement	"""]\\n"""	490:43:11788:11792	4785931	68	True				
ANR	4786744	Statement	)	490:48:11793:11793	4785931	69	True				
ANR	4786745	ExpressionStatement		490:49:11794:11794	4785931	70	True				
ANR	4786746	Statement	static	495:0:11806:11811	4785931	93	True				
ANR	4786747	Statement	void	495:7:11813:11816	4785931	94	True				
ANR	4786748	Statement	emit_mathop	495:12:11818:11828	4785931	95	True				
ANR	4786749	Statement	(	495:23:11829:11829	4785931	96	True				
ANR	4786750	Statement	REgg	495:24:11830:11833	4785931	97	True				
ANR	4786751	Statement	*	495:29:11835:11835	4785931	98	True				
ANR	4786752	Statement	egg	495:30:11836:11838	4785931	99	True				
ANR	4786753	Statement	","	495:33:11839:11839	4785931	100	True				
ANR	4786754	Statement	int	495:35:11841:11843	4785931	101	True				
ANR	4786755	Statement	ch	495:39:11845:11846	4785931	102	True				
ANR	4786756	Statement	","	495:41:11847:11847	4785931	103	True				
ANR	4786757	Statement	int	495:43:11849:11851	4785931	104	True				
ANR	4786758	Statement	vs	495:47:11853:11854	4785931	105	True				
ANR	4786759	Statement	","	495:49:11855:11855	4785931	106	True				
ANR	4786760	Statement	int	495:51:11857:11859	4785931	107	True				
ANR	4786761	Statement	type	495:55:11861:11864	4785931	108	True				
ANR	4786762	Statement	","	495:59:11865:11865	4785931	109	True				
ANR	4786763	Statement	const	495:61:11867:11871	4785931	110	True				
ANR	4786764	Statement	char	495:67:11873:11876	4785931	111	True				
ANR	4786765	Statement	*	495:72:11878:11878	4785931	112	True				
ANR	4786766	Statement	eq	495:73:11879:11880	4785931	113	True				
ANR	4786767	Statement	","	495:75:11881:11881	4785931	114	True				
ANR	4786768	Statement	const	495:77:11883:11887	4785931	115	True				
ANR	4786769	Statement	char	495:83:11889:11892	4785931	116	True				
ANR	4786770	Statement	*	495:88:11894:11894	4785931	117	True				
ANR	4786771	Statement	p	495:89:11895:11895	4785931	118	True				
ANR	4786772	Statement	)	495:90:11896:11896	4785931	119	True				
ANR	4786773	CompoundStatement		164:1:4127:4135	4785931	120					
ANR	4786774	IdentifierDeclStatement	char * op ;	496:1:11901:11909	4785931	0	True				
ANR	4786775	IdentifierDecl	* op		4785931	0					
ANR	4786776	IdentifierDeclType	char *		4785931	0					
ANR	4786777	Identifier	op		4785931	1					
ANR	4786778	SwitchStatement	switch ( ch )		4785931	1					
ANR	4786779	Condition	ch	497:8:11919:11920	4785931	0	True				
ANR	4786780	Identifier	ch		4785931	0					
ANR	4786781	CompoundStatement		165:12:4149:4149	4785931	1					
ANR	4786782	Label	case '^' :	498:1:11926:11934	4785931	0	True				
ANR	4786783	ExpressionStatement	"op = ""xor"""	498:11:11936:11946	4785931	1	True				
ANR	4786784	AssignmentExpression	"op = ""xor"""		4785931	0		=			
ANR	4786785	Identifier	op		4785931	0					
ANR	4786786	PrimaryExpression	"""xor"""		4785931	1					
ANR	4786787	BreakStatement	break ;	498:23:11948:11953	4785931	2	True				
ANR	4786788	Label	case '&' :	499:1:11956:11964	4785931	3	True				
ANR	4786789	ExpressionStatement	"op = ""and"""	499:11:11966:11976	4785931	4	True				
ANR	4786790	AssignmentExpression	"op = ""and"""		4785931	0		=			
ANR	4786791	Identifier	op		4785931	0					
ANR	4786792	PrimaryExpression	"""and"""		4785931	1					
ANR	4786793	BreakStatement	break ;	499:23:11978:11983	4785931	5	True				
ANR	4786794	Label	case '|' :	500:1:11986:11994	4785931	6	True				
ANR	4786795	ExpressionStatement	"op = ""or"""	500:11:11996:12005	4785931	7	True				
ANR	4786796	AssignmentExpression	"op = ""or"""		4785931	0		=			
ANR	4786797	Identifier	op		4785931	0					
ANR	4786798	PrimaryExpression	"""or"""		4785931	1					
ANR	4786799	BreakStatement	break ;	500:23:12008:12013	4785931	8	True				
ANR	4786800	Label	case '-' :	501:1:12016:12024	4785931	9	True				
ANR	4786801	ExpressionStatement	"op = ""sub"""	501:11:12026:12036	4785931	10	True				
ANR	4786802	AssignmentExpression	"op = ""sub"""		4785931	0		=			
ANR	4786803	Identifier	op		4785931	0					
ANR	4786804	PrimaryExpression	"""sub"""		4785931	1					
ANR	4786805	BreakStatement	break ;	501:23:12038:12043	4785931	11	True				
ANR	4786806	Label	case '+' :	502:1:12046:12054	4785931	12	True				
ANR	4786807	ExpressionStatement	"op = ""add"""	502:11:12056:12066	4785931	13	True				
ANR	4786808	AssignmentExpression	"op = ""add"""		4785931	0		=			
ANR	4786809	Identifier	op		4785931	0					
ANR	4786810	PrimaryExpression	"""add"""		4785931	1					
ANR	4786811	BreakStatement	break ;	502:23:12068:12073	4785931	14	True				
ANR	4786812	Label	case '*' :	503:1:12076:12084	4785931	15	True				
ANR	4786813	ExpressionStatement	"op = ""mul"""	503:11:12086:12096	4785931	16	True				
ANR	4786814	AssignmentExpression	"op = ""mul"""		4785931	0		=			
ANR	4786815	Identifier	op		4785931	0					
ANR	4786816	PrimaryExpression	"""mul"""		4785931	1					
ANR	4786817	BreakStatement	break ;	503:23:12098:12103	4785931	17	True				
ANR	4786818	Label	case '/' :	504:1:12106:12114	4785931	18	True				
ANR	4786819	ExpressionStatement	"op = ""div"""	504:11:12116:12126	4785931	19	True				
ANR	4786820	AssignmentExpression	"op = ""div"""		4785931	0		=			
ANR	4786821	Identifier	op		4785931	0					
ANR	4786822	PrimaryExpression	"""div"""		4785931	1					
ANR	4786823	BreakStatement	break ;	504:23:12128:12133	4785931	20	True				
ANR	4786824	Label	default :	505:1:12136:12143	4785931	21	True				
ANR	4786825	Identifier	default		4785931	0					
ANR	4786826	ExpressionStatement	"op = ""mov"""	505:11:12146:12156	4785931	22	True				
ANR	4786827	AssignmentExpression	"op = ""mov"""		4785931	0		=			
ANR	4786828	Identifier	op		4785931	0					
ANR	4786829	PrimaryExpression	"""mov"""		4785931	1					
ANR	4786830	BreakStatement	break ;	505:23:12158:12163	4785931	23	True				
ANR	4786831	IfStatement	if ( attsyntax )		4785931	2					
ANR	4786832	Condition	attsyntax	507:5:12173:12181	4785931	0	True				
ANR	4786833	Identifier	attsyntax		4785931	0					
ANR	4786834	CompoundStatement		175:16:4410:4410	4785931	1					
ANR	4786835	IfStatement	if ( ! eq )		4785931	0					
ANR	4786836	Condition	! eq	508:6:12192:12194	4785931	0	True				
ANR	4786837	UnaryOperationExpression	! eq		4785931	0					
ANR	4786838	UnaryOperator	!		4785931	0					
ANR	4786839	Identifier	eq		4785931	1					
ANR	4786840	CompoundStatement		176:11:4423:4423	4785931	1					
ANR	4786841	Statement	eq	509:3:12202:12203	4785931	0	True				
ANR	4786842	Statement	=	509:6:12205:12205	4785931	1	True				
ANR	4786843	Statement	"""%"""	509:8:12207:12209	4785931	2	True				
ANR	4786844	ExpressionStatement	R_AX	509:12:12211:12215	4785931	3	True				
ANR	4786845	Identifier	R_AX		4785931	0					
ANR	4786846	IfStatement	if ( ! p )		4785931	1					
ANR	4786847	Condition	! p	511:6:12227:12228	4785931	0	True				
ANR	4786848	UnaryOperationExpression	! p		4785931	0					
ANR	4786849	UnaryOperator	!		4785931	0					
ANR	4786850	Identifier	p		4785931	1					
ANR	4786851	CompoundStatement		179:10:4457:4457	4785931	1					
ANR	4786852	Statement	p	512:3:12236:12236	4785931	0	True				
ANR	4786853	Statement	=	512:5:12238:12238	4785931	1	True				
ANR	4786854	Statement	"""%"""	512:7:12240:12242	4785931	2	True				
ANR	4786855	ExpressionStatement	R_AX	512:11:12244:12248	4785931	3	True				
ANR	4786856	Identifier	R_AX		4785931	0					
ANR	4786857	ExpressionStatement	"r_egg_printf ( egg , ""  %s%c %c%s, %s\\n"" , op , vs , type , eq , p )"	514:2:12256:12316	4785931	2	True				
ANR	4786858	CallExpression	"r_egg_printf ( egg , ""  %s%c %c%s, %s\\n"" , op , vs , type , eq , p )"		4785931	0					
ANR	4786859	Callee	r_egg_printf		4785931	0					
ANR	4786860	Identifier	r_egg_printf		4785931	0					
ANR	4786861	ArgumentList	egg		4785931	1					
ANR	4786862	Argument	egg		4785931	0					
ANR	4786863	Identifier	egg		4785931	0					
ANR	4786864	Argument	"""  %s%c %c%s, %s\\n"""		4785931	1					
ANR	4786865	PrimaryExpression	"""  %s%c %c%s, %s\\n"""		4785931	0					
ANR	4786866	Argument	op		4785931	2					
ANR	4786867	Identifier	op		4785931	0					
ANR	4786868	Argument	vs		4785931	3					
ANR	4786869	Identifier	vs		4785931	0					
ANR	4786870	Argument	type		4785931	4					
ANR	4786871	Identifier	type		4785931	0					
ANR	4786872	Argument	eq		4785931	5					
ANR	4786873	Identifier	eq		4785931	0					
ANR	4786874	Argument	p		4785931	6					
ANR	4786875	Identifier	p		4785931	0					
ANR	4786876	ElseStatement	else		4785931	0					
ANR	4786877	CompoundStatement		183:8:4552:4552	4785931	0					
ANR	4786878	IfStatement	if ( ! eq )		4785931	0					
ANR	4786879	Condition	! eq	516:6:12334:12336	4785931	0	True				
ANR	4786880	UnaryOperationExpression	! eq		4785931	0					
ANR	4786881	UnaryOperator	!		4785931	0					
ANR	4786882	Identifier	eq		4785931	1					
ANR	4786883	CompoundStatement		184:11:4565:4565	4785931	1					
ANR	4786884	ExpressionStatement	eq = R_AX	517:3:12344:12353	4785931	0	True				
ANR	4786885	AssignmentExpression	eq = R_AX		4785931	0		=			
ANR	4786886	Identifier	eq		4785931	0					
ANR	4786887	Identifier	R_AX		4785931	1					
ANR	4786888	IfStatement	if ( ! p )		4785931	1					
ANR	4786889	Condition	! p	519:6:12365:12366	4785931	0	True				
ANR	4786890	UnaryOperationExpression	! p		4785931	0					
ANR	4786891	UnaryOperator	!		4785931	0					
ANR	4786892	Identifier	p		4785931	1					
ANR	4786893	CompoundStatement		187:10:4595:4595	4785931	1					
ANR	4786894	ExpressionStatement	p = R_AX	520:3:12374:12382	4785931	0	True				
ANR	4786895	AssignmentExpression	p = R_AX		4785931	0		=			
ANR	4786896	Identifier	p		4785931	0					
ANR	4786897	Identifier	R_AX		4785931	1					
ANR	4786898	ExpressionStatement	"eprintf ( ""TYPE = %c\\n"" , type )"	524:2:12407:12436	4785931	2	True				
ANR	4786899	CallExpression	"eprintf ( ""TYPE = %c\\n"" , type )"		4785931	0					
ANR	4786900	Callee	eprintf		4785931	0					
ANR	4786901	Identifier	eprintf		4785931	0					
ANR	4786902	ArgumentList	"""TYPE = %c\\n"""		4785931	1					
ANR	4786903	Argument	"""TYPE = %c\\n"""		4785931	0					
ANR	4786904	PrimaryExpression	"""TYPE = %c\\n"""		4785931	0					
ANR	4786905	Argument	type		4785931	1					
ANR	4786906	Identifier	type		4785931	0					
ANR	4786907	ExpressionStatement	"eprintf ( ""  %s%c %c%s, %s\\n"" , op , vs , type , eq , p )"	525:2:12440:12490	4785931	3	True				
ANR	4786908	CallExpression	"eprintf ( ""  %s%c %c%s, %s\\n"" , op , vs , type , eq , p )"		4785931	0					
ANR	4786909	Callee	eprintf		4785931	0					
ANR	4786910	Identifier	eprintf		4785931	0					
ANR	4786911	ArgumentList	"""  %s%c %c%s, %s\\n"""		4785931	1					
ANR	4786912	Argument	"""  %s%c %c%s, %s\\n"""		4785931	0					
ANR	4786913	PrimaryExpression	"""  %s%c %c%s, %s\\n"""		4785931	0					
ANR	4786914	Argument	op		4785931	1					
ANR	4786915	Identifier	op		4785931	0					
ANR	4786916	Argument	vs		4785931	2					
ANR	4786917	Identifier	vs		4785931	0					
ANR	4786918	Argument	type		4785931	3					
ANR	4786919	Identifier	type		4785931	0					
ANR	4786920	Argument	eq		4785931	4					
ANR	4786921	Identifier	eq		4785931	0					
ANR	4786922	Argument	p		4785931	5					
ANR	4786923	Identifier	p		4785931	0					
ANR	4786924	ExpressionStatement	"eprintf ( ""  %s %s, [%s]\\n"" , op , p , eq )"	526:2:12494:12532	4785931	4	True				
ANR	4786925	CallExpression	"eprintf ( ""  %s %s, [%s]\\n"" , op , p , eq )"		4785931	0					
ANR	4786926	Callee	eprintf		4785931	0					
ANR	4786927	Identifier	eprintf		4785931	0					
ANR	4786928	ArgumentList	"""  %s %s, [%s]\\n"""		4785931	1					
ANR	4786929	Argument	"""  %s %s, [%s]\\n"""		4785931	0					
ANR	4786930	PrimaryExpression	"""  %s %s, [%s]\\n"""		4785931	0					
ANR	4786931	Argument	op		4785931	1					
ANR	4786932	Identifier	op		4785931	0					
ANR	4786933	Argument	p		4785931	2					
ANR	4786934	Identifier	p		4785931	0					
ANR	4786935	Argument	eq		4785931	3					
ANR	4786936	Identifier	eq		4785931	0					
ANR	4786937	IfStatement	if ( type == '*' )		4785931	5					
ANR	4786938	Condition	type == '*'	528:6:12547:12557	4785931	0	True				
ANR	4786939	EqualityExpression	type == '*'		4785931	0		==			
ANR	4786940	Identifier	type		4785931	0					
ANR	4786941	PrimaryExpression	'*'		4785931	1					
ANR	4786942	CompoundStatement		196:19:4786:4786	4785931	1					
ANR	4786943	ExpressionStatement	"r_egg_printf ( egg , ""  %s %s, [%s]\\n"" , op , p , eq )"	529:3:12565:12613	4785931	0	True				
ANR	4786944	CallExpression	"r_egg_printf ( egg , ""  %s %s, [%s]\\n"" , op , p , eq )"		4785931	0					
ANR	4786945	Callee	r_egg_printf		4785931	0					
ANR	4786946	Identifier	r_egg_printf		4785931	0					
ANR	4786947	ArgumentList	egg		4785931	1					
ANR	4786948	Argument	egg		4785931	0					
ANR	4786949	Identifier	egg		4785931	0					
ANR	4786950	Argument	"""  %s %s, [%s]\\n"""		4785931	1					
ANR	4786951	PrimaryExpression	"""  %s %s, [%s]\\n"""		4785931	0					
ANR	4786952	Argument	op		4785931	2					
ANR	4786953	Identifier	op		4785931	0					
ANR	4786954	Argument	p		4785931	3					
ANR	4786955	Identifier	p		4785931	0					
ANR	4786956	Argument	eq		4785931	4					
ANR	4786957	Identifier	eq		4785931	0					
ANR	4786958	ElseStatement	else		4785931	0					
ANR	4786959	CompoundStatement		198:9:4850:4850	4785931	0					
ANR	4786960	ExpressionStatement	"r_egg_printf ( egg , ""  %s %s, %s\\n"" , op , p , eq )"	531:3:12629:12675	4785931	0	True				
ANR	4786961	CallExpression	"r_egg_printf ( egg , ""  %s %s, %s\\n"" , op , p , eq )"		4785931	0					
ANR	4786962	Callee	r_egg_printf		4785931	0					
ANR	4786963	Identifier	r_egg_printf		4785931	0					
ANR	4786964	ArgumentList	egg		4785931	1					
ANR	4786965	Argument	egg		4785931	0					
ANR	4786966	Identifier	egg		4785931	0					
ANR	4786967	Argument	"""  %s %s, %s\\n"""		4785931	1					
ANR	4786968	PrimaryExpression	"""  %s %s, %s\\n"""		4785931	0					
ANR	4786969	Argument	op		4785931	2					
ANR	4786970	Identifier	op		4785931	0					
ANR	4786971	Argument	p		4785931	3					
ANR	4786972	Identifier	p		4785931	0					
ANR	4786973	Argument	eq		4785931	4					
ANR	4786974	Identifier	eq		4785931	0					
ANR	4786975	Statement	static	536:0:12687:12692	4785931	121	True				
ANR	4786976	Statement	const	536:7:12694:12698	4785931	122	True				
ANR	4786977	Statement	char	536:13:12700:12703	4785931	123	True				
ANR	4786978	Statement	*	536:17:12704:12704	4785931	124	True				
ANR	4786979	Statement	emit_regs	536:19:12706:12714	4785931	125	True				
ANR	4786980	Statement	(	536:28:12715:12715	4785931	126	True				
ANR	4786981	Statement	REgg	536:29:12716:12719	4785931	127	True				
ANR	4786982	Statement	*	536:34:12721:12721	4785931	128	True				
ANR	4786983	Statement	egg	536:35:12722:12724	4785931	129	True				
ANR	4786984	Statement	","	536:38:12725:12725	4785931	130	True				
ANR	4786985	Statement	int	536:40:12727:12729	4785931	131	True				
ANR	4786986	Statement	idx	536:44:12731:12733	4785931	132	True				
ANR	4786987	Statement	)	536:47:12734:12734	4785931	133	True				
ANR	4786988	CompoundStatement		204:49:4962:4962	4785931	134					
ANR	4786989	ReturnStatement	return regs [ idx % R_NGP ] ;	537:1:12739:12761	4785931	0	True				
ANR	4786990	ArrayIndexing	regs [ idx % R_NGP ]		4785931	0					
ANR	4786991	Identifier	regs		4785931	0					
ANR	4786992	MultiplicativeExpression	idx % R_NGP		4785931	1		%			
ANR	4786993	Identifier	idx		4785931	0					
ANR	4786994	Identifier	R_NGP		4785931	1					
ANR	4786995	Statement	static	540:0:12766:12771	4785931	135	True				
ANR	4786996	Statement	void	540:7:12773:12776	4785931	136	True				
ANR	4786997	Statement	emit_get_ar	540:12:12778:12788	4785931	137	True				
ANR	4786998	Statement	(	540:24:12790:12790	4785931	138	True				
ANR	4786999	Statement	REgg	540:25:12791:12794	4785931	139	True				
ANR	4787000	Statement	*	540:30:12796:12796	4785931	140	True				
ANR	4787001	Statement	egg	540:31:12797:12799	4785931	141	True				
ANR	4787002	Statement	","	540:34:12800:12800	4785931	142	True				
ANR	4787003	Statement	char	540:36:12802:12805	4785931	143	True				
ANR	4787004	Statement	*	540:41:12807:12807	4785931	144	True				
ANR	4787005	Statement	out	540:42:12808:12810	4785931	145	True				
ANR	4787006	Statement	","	540:45:12811:12811	4785931	146	True				
ANR	4787007	Statement	int	540:47:12813:12815	4785931	147	True				
ANR	4787008	Statement	idx	540:51:12817:12819	4785931	148	True				
ANR	4787009	Statement	)	540:54:12820:12820	4785931	149	True				
ANR	4787010	CompoundStatement		209:1:5051:5104	4785931	150					
ANR	4787011	IdentifierDeclStatement	"const char * reg = emit_regs ( egg , R_REG_AR_OFF + idx ) ;"	541:1:12825:12878	4785931	0	True				
ANR	4787012	IdentifierDecl	"* reg = emit_regs ( egg , R_REG_AR_OFF + idx )"		4785931	0					
ANR	4787013	IdentifierDeclType	const char *		4785931	0					
ANR	4787014	Identifier	reg		4785931	1					
ANR	4787015	AssignmentExpression	"* reg = emit_regs ( egg , R_REG_AR_OFF + idx )"		4785931	2		=			
ANR	4787016	Identifier	reg		4785931	0					
ANR	4787017	CallExpression	"emit_regs ( egg , R_REG_AR_OFF + idx )"		4785931	1					
ANR	4787018	Callee	emit_regs		4785931	0					
ANR	4787019	Identifier	emit_regs		4785931	0					
ANR	4787020	ArgumentList	egg		4785931	1					
ANR	4787021	Argument	egg		4785931	0					
ANR	4787022	Identifier	egg		4785931	0					
ANR	4787023	Argument	R_REG_AR_OFF + idx		4785931	1					
ANR	4787024	AdditiveExpression	R_REG_AR_OFF + idx		4785931	0		+			
ANR	4787025	Identifier	R_REG_AR_OFF		4785931	0					
ANR	4787026	Identifier	idx		4785931	1					
ANR	4787027	IfStatement	if ( reg )		4785931	1					
ANR	4787028	Condition	reg	543:5:12886:12888	4785931	0	True				
ANR	4787029	Identifier	reg		4785931	0					
ANR	4787030	CompoundStatement		211:10:5117:5117	4785931	1					
ANR	4787031	ExpressionStatement	"strcpy ( out , reg )"	544:2:12895:12912	4785931	0	True				
ANR	4787032	CallExpression	"strcpy ( out , reg )"		4785931	0					
ANR	4787033	Callee	strcpy		4785931	0					
ANR	4787034	Identifier	strcpy		4785931	0					
ANR	4787035	ArgumentList	out		4785931	1					
ANR	4787036	Argument	out		4785931	0					
ANR	4787037	Identifier	out		4785931	0					
ANR	4787038	Argument	reg		4785931	1					
ANR	4787039	Identifier	reg		4785931	0					
ANR	4787040	Statement	REggEmit	548:0:12920:12927	4785931	151	True				
ANR	4787041	Statement	EMIT_NAME	548:9:12929:12937	4785931	152	True				
ANR	4787042	Statement	=	548:19:12939:12939	4785931	153	True				
ANR	4787043	CompoundStatement		216:21:5167:5167	4785931	154					
ANR	4787044	Statement	.	549:1:12944:12944	4785931	0	True				
ANR	4787045	Statement	retvar	549:2:12945:12950	4785931	1	True				
ANR	4787046	Statement	=	549:9:12952:12952	4785931	2	True				
ANR	4787047	Statement	R_AX	549:11:12954:12957	4785931	3	True				
ANR	4787048	Statement	","	549:15:12958:12958	4785931	4	True				
ANR	4787049	Statement	.	550:1:12961:12961	4785931	5	True				
ANR	4787050	Statement	arch	550:2:12962:12965	4785931	6	True				
ANR	4787051	Statement	=	550:7:12967:12967	4785931	7	True				
ANR	4787052	Statement	R_ARCH	550:9:12969:12974	4785931	8	True				
ANR	4787053	Statement	","	550:15:12975:12975	4785931	9	True				
ANR	4787054	Statement	.	551:1:12978:12978	4785931	10	True				
ANR	4787055	Statement	size	551:2:12979:12982	4785931	11	True				
ANR	4787056	Statement	=	551:7:12984:12984	4785931	12	True				
ANR	4787057	Statement	R_SZ	551:9:12986:12989	4785931	13	True				
ANR	4787058	Statement	","	551:13:12990:12990	4785931	14	True				
ANR	4787059	Statement	.	552:1:12993:12993	4785931	15	True				
ANR	4787060	Statement	init	552:2:12994:12997	4785931	16	True				
ANR	4787061	Statement	=	552:7:12999:12999	4785931	17	True				
ANR	4787062	Statement	emit_init	552:9:13001:13009	4785931	18	True				
ANR	4787063	Statement	","	552:18:13010:13010	4785931	19	True				
ANR	4787064	Statement	.	553:1:13013:13013	4785931	20	True				
ANR	4787065	Statement	jmp	553:2:13014:13016	4785931	21	True				
ANR	4787066	Statement	=	553:6:13018:13018	4785931	22	True				
ANR	4787067	Statement	emit_jmp	553:8:13020:13027	4785931	23	True				
ANR	4787068	Statement	","	553:16:13028:13028	4785931	24	True				
ANR	4787069	Statement	.	554:1:13031:13031	4785931	25	True				
ANR	4787070	Statement	call	554:2:13032:13035	4785931	26	True				
ANR	4787071	Statement	=	554:7:13037:13037	4785931	27	True				
ANR	4787072	Statement	emit_call	554:9:13039:13047	4785931	28	True				
ANR	4787073	Statement	","	554:18:13048:13048	4785931	29	True				
ANR	4787074	Statement	.	555:1:13051:13051	4785931	30	True				
ANR	4787075	Statement	equ	555:2:13052:13054	4785931	31	True				
ANR	4787076	Statement	=	555:6:13056:13056	4785931	32	True				
ANR	4787077	Statement	emit_equ	555:8:13058:13065	4785931	33	True				
ANR	4787078	Statement	","	555:16:13066:13066	4785931	34	True				
ANR	4787079	Statement	.	556:1:13069:13069	4785931	35	True				
ANR	4787080	Statement	regs	556:2:13070:13073	4785931	36	True				
ANR	4787081	Statement	=	556:7:13075:13075	4785931	37	True				
ANR	4787082	Statement	emit_regs	556:9:13077:13085	4785931	38	True				
ANR	4787083	Statement	","	556:18:13086:13086	4785931	39	True				
ANR	4787084	Statement	.	558:1:13107:13107	4785931	40	True				
ANR	4787085	Statement	trap	558:2:13108:13111	4785931	41	True				
ANR	4787086	Statement	=	558:7:13113:13113	4785931	42	True				
ANR	4787087	Statement	emit_trap	558:9:13115:13123	4785931	43	True				
ANR	4787088	Statement	","	558:18:13124:13124	4785931	44	True				
ANR	4787089	Statement	.	559:1:13127:13127	4785931	45	True				
ANR	4787090	Statement	frame	559:2:13128:13132	4785931	46	True				
ANR	4787091	Statement	=	559:8:13134:13134	4785931	47	True				
ANR	4787092	Statement	emit_frame	559:10:13136:13145	4785931	48	True				
ANR	4787093	Statement	","	559:20:13146:13146	4785931	49	True				
ANR	4787094	Statement	.	560:1:13149:13149	4785931	50	True				
ANR	4787095	Statement	frame_end	560:2:13150:13158	4785931	51	True				
ANR	4787096	Statement	=	560:12:13160:13160	4785931	52	True				
ANR	4787097	Statement	emit_frame_end	560:14:13162:13175	4785931	53	True				
ANR	4787098	Statement	","	560:28:13176:13176	4785931	54	True				
ANR	4787099	Statement	.	561:1:13179:13179	4785931	55	True				
ANR	4787100	Statement	comment	561:2:13180:13186	4785931	56	True				
ANR	4787101	Statement	=	561:10:13188:13188	4785931	57	True				
ANR	4787102	Statement	emit_comment	561:12:13190:13201	4785931	58	True				
ANR	4787103	Statement	","	561:24:13202:13202	4785931	59	True				
ANR	4787104	Statement	.	562:1:13205:13205	4785931	60	True				
ANR	4787105	Statement	push_arg	562:2:13206:13213	4785931	61	True				
ANR	4787106	Statement	=	562:11:13215:13215	4785931	62	True				
ANR	4787107	Statement	emit_arg	562:13:13217:13224	4785931	63	True				
ANR	4787108	Statement	","	562:21:13225:13225	4785931	64	True				
ANR	4787109	Statement	.	563:1:13228:13228	4785931	65	True				
ANR	4787110	Statement	restore_stack	563:2:13229:13241	4785931	66	True				
ANR	4787111	Statement	=	563:16:13243:13243	4785931	67	True				
ANR	4787112	Statement	emit_restore_stack	563:18:13245:13262	4785931	68	True				
ANR	4787113	Statement	","	563:36:13263:13263	4785931	69	True				
ANR	4787114	Statement	.	564:1:13266:13266	4785931	70	True				
ANR	4787115	Statement	get_result	564:2:13267:13276	4785931	71	True				
ANR	4787116	Statement	=	564:13:13278:13278	4785931	72	True				
ANR	4787117	Statement	emit_get_result	564:15:13280:13294	4785931	73	True				
ANR	4787118	Statement	","	564:30:13295:13295	4785931	74	True				
ANR	4787119	Statement	.	565:1:13298:13298	4785931	75	True				
ANR	4787120	Statement	syscall_args	565:2:13299:13310	4785931	76	True				
ANR	4787121	Statement	=	565:15:13312:13312	4785931	77	True				
ANR	4787122	Statement	emit_syscall_args	565:17:13314:13330	4785931	78	True				
ANR	4787123	Statement	","	565:34:13331:13331	4785931	79	True				
ANR	4787124	Statement	.	566:1:13334:13334	4785931	80	True				
ANR	4787125	Statement	set_string	566:2:13335:13344	4785931	81	True				
ANR	4787126	Statement	=	566:13:13346:13346	4785931	82	True				
ANR	4787127	Statement	emit_string	566:15:13348:13358	4785931	83	True				
ANR	4787128	Statement	","	566:26:13359:13359	4785931	84	True				
ANR	4787129	Statement	.	567:1:13362:13362	4785931	85	True				
ANR	4787130	Statement	get_ar	567:2:13363:13368	4785931	86	True				
ANR	4787131	Statement	=	567:9:13370:13370	4785931	87	True				
ANR	4787132	Statement	emit_get_ar	567:11:13372:13382	4785931	88	True				
ANR	4787133	Statement	","	567:22:13383:13383	4785931	89	True				
ANR	4787134	Statement	.	568:1:13386:13386	4785931	90	True				
ANR	4787135	Statement	get_var	568:2:13387:13393	4785931	91	True				
ANR	4787136	Statement	=	568:10:13395:13395	4785931	92	True				
ANR	4787137	Statement	emit_get_var	568:12:13397:13408	4785931	93	True				
ANR	4787138	Statement	","	568:24:13409:13409	4785931	94	True				
ANR	4787139	Statement	.	569:1:13412:13412	4785931	95	True				
ANR	4787140	Statement	while_end	569:2:13413:13421	4785931	96	True				
ANR	4787141	Statement	=	569:12:13423:13423	4785931	97	True				
ANR	4787142	Statement	emit_while_end	569:14:13425:13438	4785931	98	True				
ANR	4787143	Statement	","	569:28:13439:13439	4785931	99	True				
ANR	4787144	Statement	.	570:1:13442:13442	4785931	100	True				
ANR	4787145	Statement	get_while_end	570:2:13443:13455	4785931	101	True				
ANR	4787146	Statement	=	570:16:13457:13457	4785931	102	True				
ANR	4787147	Statement	emit_get_while_end	570:18:13459:13476	4785931	103	True				
ANR	4787148	Statement	","	570:36:13477:13477	4785931	104	True				
ANR	4787149	Statement	.	571:1:13480:13480	4785931	105	True				
ANR	4787150	Statement	branch	571:2:13481:13486	4785931	106	True				
ANR	4787151	Statement	=	571:9:13488:13488	4785931	107	True				
ANR	4787152	Statement	emit_branch	571:11:13490:13500	4785931	108	True				
ANR	4787153	Statement	","	571:22:13501:13501	4785931	109	True				
ANR	4787154	Statement	.	572:1:13504:13504	4785931	110	True				
ANR	4787155	Statement	load	572:2:13505:13508	4785931	111	True				
ANR	4787156	Statement	=	572:7:13510:13510	4785931	112	True				
ANR	4787157	Statement	emit_load	572:9:13512:13520	4785931	113	True				
ANR	4787158	Statement	","	572:18:13521:13521	4785931	114	True				
ANR	4787159	Statement	.	573:1:13524:13524	4785931	115	True				
ANR	4787160	Statement	load_ptr	573:2:13525:13532	4785931	116	True				
ANR	4787161	Statement	=	573:11:13534:13534	4785931	117	True				
ANR	4787162	Statement	emit_load_ptr	573:13:13536:13548	4785931	118	True				
ANR	4787163	Statement	","	573:26:13549:13549	4785931	119	True				
ANR	4787164	Statement	.	574:1:13552:13552	4785931	120	True				
ANR	4787165	Statement	mathop	574:2:13553:13558	4785931	121	True				
ANR	4787166	Statement	=	574:9:13560:13560	4785931	122	True				
ANR	4787167	Statement	emit_mathop	574:11:13562:13572	4785931	123	True				
ANR	4787168	Statement	","	574:22:13573:13573	4785931	124	True				
ANR	4787169	Statement	.	575:1:13576:13576	4785931	125	True				
ANR	4787170	Statement	syscall	575:2:13577:13583	4785931	126	True				
ANR	4787171	Statement	=	575:10:13585:13585	4785931	127	True				
ANR	4787172	Statement	emit_syscall	575:12:13587:13598	4785931	128	True				
ANR	4787173	Statement	","	575:24:13599:13599	4785931	129	True				
ANR	4787174	ReturnType	static void		4785931	1					
ANR	4787175	Identifier	emit_while_end		4785931	2					
ANR	4787176	ParameterList	"REgg * egg , const char * labelback"		4785931	3					
ANR	4787177	Parameter	REgg * egg	333:28:7739:7747	4785931	0	True				
ANR	4787178	ParameterType	REgg *		4785931	0					
ANR	4787179	Identifier	egg		4785931	1					
ANR	4787180	Parameter	const char * labelback	333:39:7750:7770	4785931	1	True				
ANR	4787181	ParameterType	const char *		4785931	0					
ANR	4787182	Identifier	labelback		4785931	1					
ANR	4787183	CFGEntryNode	ENTRY		4785931		True				
ANR	4787184	CFGExitNode	EXIT		4785931		True				
ANR	4787185	Symbol	R_REG_AR_OFF		4785931						
ANR	4787186	Symbol	egg		4785931						
ANR	4787187	Symbol	dst		4785931						
ANR	4787188	Symbol	* R_NGP		4785931						
ANR	4787189	Symbol	strchr		4785931						
ANR	4787190	Symbol	type		4785931						
ANR	4787191	Symbol	out		4785931						
ANR	4787192	Symbol	signed_value		4785931						
ANR	4787193	Symbol	reg		4785931						
ANR	4787194	Symbol	labelback		4785931						
ANR	4787195	Symbol	arg		4785931						
ANR	4787196	Symbol	* idx		4785931						
ANR	4787197	Symbol	atoi		4785931						
ANR	4787198	Symbol	r_egg_mkvar		4785931						
ANR	4787199	Symbol	op		4785931						
ANR	4787200	Symbol	b		4785931						
ANR	4787201	Symbol	R_AX		4785931						
ANR	4787202	Symbol	NULL		4785931						
ANR	4787203	Symbol	d		4785931						
ANR	4787204	Symbol	e		4785931						
ANR	4787205	Symbol	ch		4785931						
ANR	4787206	Symbol	R_NGP		4785931						
ANR	4787207	Symbol	attsyntax		4785931						
ANR	4787208	Symbol	g		4785931						
ANR	4787209	Symbol	sz		4785931						
ANR	4787210	Symbol	regs		4785931						
ANR	4787211	Symbol	* b		4785931						
ANR	4787212	Symbol	eq		4785931						
ANR	4787213	Symbol	n		4785931						
ANR	4787214	Symbol	p		4785931						
ANR	4787215	Symbol	str		4785931						
ANR	4787216	Symbol	* g		4785931						
ANR	4787217	Symbol	* regs		4785931						
ANR	4787218	Symbol	emit_regs		4785931						
ANR	4787219	Symbol	idx		4785931						
ANR	4787220	Symbol	vs		4785931						
ANR	4787221	Symbol	* arg		4785931						
