command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2693501	File	data/converged/CVE-2019-16718~_radare2/libr_asm_arch_avr_avr_disasm.c								
ANR	2693502	DeclStmt									
ANR	2693503	Decl							int	int	AVR_Long_Instruction
ANR	2693504	DeclStmt									
ANR	2693505	Decl							uint32_t	uint32_t	AVR_Long_Address
ANR	2693506	DeclStmt									
ANR	2693507	Decl							disassembledInstruction	disassembledInstruction	longInstruction
ANR	2693508	DeclStmt									
ANR	2693509	Decl							int	int ( disassembledInstruction * dInstruction )	disassembleOperands
ANR	2693510	DeclStmt									
ANR	2693511	Decl							uint16_t	"uint16_t ( uint16_t data , uint16_t mask )"	extractDataFromMask
ANR	2693512	DeclStmt									
ANR	2693513	Decl							int	"int ( uint16_t opcode , int offset )"	lookupInstruction
ANR	2693514	Function	disassembleInstruction	58:0:2759:5632							
ANR	2693515	FunctionDef	"disassembleInstruction (disassembledInstruction * dInstruction , const assembledInstruction aInstruction)"		2693514	0					
ANR	2693516	CompoundStatement		58:114:2873:5632	2693514	0					
ANR	2693517	IdentifierDeclStatement	"int insidx , i ;"	59:1:2876:2889	2693514	0	True				
ANR	2693518	IdentifierDecl	insidx		2693514	0					
ANR	2693519	IdentifierDeclType	int		2693514	0					
ANR	2693520	Identifier	insidx		2693514	1					
ANR	2693521	IdentifierDecl	i		2693514	1					
ANR	2693522	IdentifierDeclType	int		2693514	0					
ANR	2693523	Identifier	i		2693514	1					
ANR	2693524	IfStatement	if ( ! dInstruction )		2693514	1					
ANR	2693525	Condition	! dInstruction	61:5:2898:2910	2693514	0	True				
ANR	2693526	UnaryOperationExpression	! dInstruction		2693514	0					
ANR	2693527	UnaryOperator	!		2693514	0					
ANR	2693528	Identifier	dInstruction		2693514	1					
ANR	2693529	ReturnStatement	return ERROR_INVALID_ARGUMENTS ;	62:2:2915:2945	2693514	1	True				
ANR	2693530	Identifier	ERROR_INVALID_ARGUMENTS		2693514	0					
ANR	2693531	ExpressionStatement	"insidx = lookupInstruction ( aInstruction . opcode , 0 )"	66:1:2983:3033	2693514	2	True				
ANR	2693532	AssignmentExpression	"insidx = lookupInstruction ( aInstruction . opcode , 0 )"		2693514	0		=			
ANR	2693533	Identifier	insidx		2693514	0					
ANR	2693534	CallExpression	"lookupInstruction ( aInstruction . opcode , 0 )"		2693514	1					
ANR	2693535	Callee	lookupInstruction		2693514	0					
ANR	2693536	Identifier	lookupInstruction		2693514	0					
ANR	2693537	ArgumentList	aInstruction . opcode		2693514	1					
ANR	2693538	Argument	aInstruction . opcode		2693514	0					
ANR	2693539	MemberAccess	aInstruction . opcode		2693514	0					
ANR	2693540	Identifier	aInstruction		2693514	0					
ANR	2693541	Identifier	opcode		2693514	1					
ANR	2693542	Argument	0		2693514	1					
ANR	2693543	PrimaryExpression	0		2693514	0					
ANR	2693544	IfStatement	if ( insidx == AVR_TOTAL_INSTRUCTIONS )		2693514	3					
ANR	2693545	Condition	insidx == AVR_TOTAL_INSTRUCTIONS	67:5:3040:3071	2693514	0	True				
ANR	2693546	EqualityExpression	insidx == AVR_TOTAL_INSTRUCTIONS		2693514	0		==			
ANR	2693547	Identifier	insidx		2693514	0					
ANR	2693548	Identifier	AVR_TOTAL_INSTRUCTIONS		2693514	1					
ANR	2693549	CompoundStatement		10:39:200:200	2693514	1					
ANR	2693550	ReturnStatement	return 0 ;	69:2:3103:3111	2693514	0	True				
ANR	2693551	PrimaryExpression	0		2693514	0					
ANR	2693552	IfStatement	if ( AVR_Long_Instruction == AVR_LONG_INSTRUCTION_FOUND )		2693514	4					
ANR	2693553	Condition	AVR_Long_Instruction == AVR_LONG_INSTRUCTION_FOUND	75:5:3295:3344	2693514	0	True				
ANR	2693554	EqualityExpression	AVR_Long_Instruction == AVR_LONG_INSTRUCTION_FOUND		2693514	0		==			
ANR	2693555	Identifier	AVR_Long_Instruction		2693514	0					
ANR	2693556	Identifier	AVR_LONG_INSTRUCTION_FOUND		2693514	1					
ANR	2693557	CompoundStatement		18:57:473:473	2693514	1					
ANR	2693558	ExpressionStatement	AVR_Long_Instruction = AVR_LONG_INSTRUCTION_PRINT	76:2:3351:3400	2693514	0	True				
ANR	2693559	AssignmentExpression	AVR_Long_Instruction = AVR_LONG_INSTRUCTION_PRINT		2693514	0		=			
ANR	2693560	Identifier	AVR_Long_Instruction		2693514	0					
ANR	2693561	Identifier	AVR_LONG_INSTRUCTION_PRINT		2693514	1					
ANR	2693562	ExpressionStatement	AVR_Long_Address |= aInstruction . opcode	77:2:3404:3443	2693514	1	True				
ANR	2693563	AssignmentExpression	AVR_Long_Address |= aInstruction . opcode		2693514	0		|=			
ANR	2693564	Identifier	AVR_Long_Address		2693514	0					
ANR	2693565	MemberAccess	aInstruction . opcode		2693514	1					
ANR	2693566	Identifier	aInstruction		2693514	0					
ANR	2693567	Identifier	opcode		2693514	1					
ANR	2693568	IfStatement	"if ( ! strcmp ( longInstruction . instruction -> mnemonic , ""call"" ) || ! strcmp ( longInstruction . instruction -> mnemonic , ""jmp"" ) )"		2693514	2					
ANR	2693569	Condition	"! strcmp ( longInstruction . instruction -> mnemonic , ""call"" ) || ! strcmp ( longInstruction . instruction -> mnemonic , ""jmp"" )"	82:19:3711:3837	2693514	0	True				
ANR	2693570	OrExpression	"! strcmp ( longInstruction . instruction -> mnemonic , ""call"" ) || ! strcmp ( longInstruction . instruction -> mnemonic , ""jmp"" )"		2693514	0		||			
ANR	2693571	UnaryOperationExpression	"! strcmp ( longInstruction . instruction -> mnemonic , ""call"" )"		2693514	0					
ANR	2693572	UnaryOperator	!		2693514	0					
ANR	2693573	CallExpression	"strcmp ( longInstruction . instruction -> mnemonic , ""call"" )"		2693514	1					
ANR	2693574	Callee	strcmp		2693514	0					
ANR	2693575	Identifier	strcmp		2693514	0					
ANR	2693576	ArgumentList	longInstruction . instruction -> mnemonic		2693514	1					
ANR	2693577	Argument	longInstruction . instruction -> mnemonic		2693514	0					
ANR	2693578	PtrMemberAccess	longInstruction . instruction -> mnemonic		2693514	0					
ANR	2693579	MemberAccess	longInstruction . instruction		2693514	0					
ANR	2693580	Identifier	longInstruction		2693514	0					
ANR	2693581	Identifier	instruction		2693514	1					
ANR	2693582	Identifier	mnemonic		2693514	1					
ANR	2693583	Argument	"""call"""		2693514	1					
ANR	2693584	PrimaryExpression	"""call"""		2693514	0					
ANR	2693585	UnaryOperationExpression	"! strcmp ( longInstruction . instruction -> mnemonic , ""jmp"" )"		2693514	1					
ANR	2693586	UnaryOperator	!		2693514	0					
ANR	2693587	CallExpression	"strcmp ( longInstruction . instruction -> mnemonic , ""jmp"" )"		2693514	1					
ANR	2693588	Callee	strcmp		2693514	0					
ANR	2693589	Identifier	strcmp		2693514	0					
ANR	2693590	ArgumentList	longInstruction . instruction -> mnemonic		2693514	1					
ANR	2693591	Argument	longInstruction . instruction -> mnemonic		2693514	0					
ANR	2693592	PtrMemberAccess	longInstruction . instruction -> mnemonic		2693514	0					
ANR	2693593	MemberAccess	longInstruction . instruction		2693514	0					
ANR	2693594	Identifier	longInstruction		2693514	0					
ANR	2693595	Identifier	instruction		2693514	1					
ANR	2693596	Identifier	mnemonic		2693514	1					
ANR	2693597	Argument	"""jmp"""		2693514	1					
ANR	2693598	PrimaryExpression	"""jmp"""		2693514	0					
ANR	2693599	CompoundStatement		27:9:975:975	2693514	1					
ANR	2693600	ExpressionStatement	AVR_Long_Address *= 2	85:3:3854:3875	2693514	0	True				
ANR	2693601	AssignmentExpression	AVR_Long_Address *= 2		2693514	0		*=			
ANR	2693602	Identifier	AVR_Long_Address		2693514	0					
ANR	2693603	PrimaryExpression	2		2693514	1					
ANR	2693604	ExpressionStatement	* dInstruction = longInstruction	87:2:3897:3928	2693514	3	True				
ANR	2693605	AssignmentExpression	* dInstruction = longInstruction		2693514	0		=			
ANR	2693606	UnaryOperationExpression	* dInstruction		2693514	0					
ANR	2693607	UnaryOperator	*		2693514	0					
ANR	2693608	Identifier	dInstruction		2693514	1					
ANR	2693609	Identifier	longInstruction		2693514	1					
ANR	2693610	ReturnStatement	return 0 ;	88:2:3932:3940	2693514	4	True				
ANR	2693611	PrimaryExpression	0		2693514	0					
ANR	2693612	ElseStatement	else		2693514	0					
ANR	2693613	IfStatement	if ( AVR_Long_Instruction == AVR_LONG_INSTRUCTION_PRINT )		2693514	0					
ANR	2693614	Condition	AVR_Long_Instruction == AVR_LONG_INSTRUCTION_PRINT	91:12:4090:4139	2693514	0	True				
ANR	2693615	EqualityExpression	AVR_Long_Instruction == AVR_LONG_INSTRUCTION_PRINT		2693514	0		==			
ANR	2693616	Identifier	AVR_Long_Instruction		2693514	0					
ANR	2693617	Identifier	AVR_LONG_INSTRUCTION_PRINT		2693514	1					
ANR	2693618	CompoundStatement		34:64:1268:1268	2693514	1					
ANR	2693619	ExpressionStatement	AVR_Long_Instruction = 0	92:2:4146:4170	2693514	0	True				
ANR	2693620	AssignmentExpression	AVR_Long_Instruction = 0		2693514	0		=			
ANR	2693621	Identifier	AVR_Long_Instruction		2693514	0					
ANR	2693622	PrimaryExpression	0		2693514	1					
ANR	2693623	ExpressionStatement	dInstruction -> address = aInstruction . address	97:1:4315:4359	2693514	5	True				
ANR	2693624	AssignmentExpression	dInstruction -> address = aInstruction . address		2693514	0		=			
ANR	2693625	PtrMemberAccess	dInstruction -> address		2693514	0					
ANR	2693626	Identifier	dInstruction		2693514	0					
ANR	2693627	Identifier	address		2693514	1					
ANR	2693628	MemberAccess	aInstruction . address		2693514	1					
ANR	2693629	Identifier	aInstruction		2693514	0					
ANR	2693630	Identifier	address		2693514	1					
ANR	2693631	ExpressionStatement	dInstruction -> instruction = & instructionSet [ insidx ]	98:1:4362:4413	2693514	6	True				
ANR	2693632	AssignmentExpression	dInstruction -> instruction = & instructionSet [ insidx ]		2693514	0		=			
ANR	2693633	PtrMemberAccess	dInstruction -> instruction		2693514	0					
ANR	2693634	Identifier	dInstruction		2693514	0					
ANR	2693635	Identifier	instruction		2693514	1					
ANR	2693636	UnaryOperationExpression	& instructionSet [ insidx ]		2693514	1					
ANR	2693637	UnaryOperator	&		2693514	0					
ANR	2693638	ArrayIndexing	instructionSet [ insidx ]		2693514	1					
ANR	2693639	Identifier	instructionSet		2693514	0					
ANR	2693640	Identifier	insidx		2693514	1					
ANR	2693641	ExpressionStatement	dInstruction -> alternateInstruction = NULL	99:1:4416:4457	2693514	7	True				
ANR	2693642	AssignmentExpression	dInstruction -> alternateInstruction = NULL		2693514	0		=			
ANR	2693643	PtrMemberAccess	dInstruction -> alternateInstruction		2693514	0					
ANR	2693644	Identifier	dInstruction		2693514	0					
ANR	2693645	Identifier	alternateInstruction		2693514	1					
ANR	2693646	Identifier	NULL		2693514	1					
ANR	2693647	ForStatement	for ( i = 0 ; i < instructionSet [ insidx ] . numOperands ; i ++ )		2693514	8					
ANR	2693648	ForInit	i = 0 ;	103:6:4578:4583	2693514	0	True				
ANR	2693649	AssignmentExpression	i = 0		2693514	0		=			
ANR	2693650	Identifier	i		2693514	0					
ANR	2693651	PrimaryExpression	0		2693514	1					
ANR	2693652	Condition	i < instructionSet [ insidx ] . numOperands	103:13:4585:4622	2693514	1	True				
ANR	2693653	RelationalExpression	i < instructionSet [ insidx ] . numOperands		2693514	0		<			
ANR	2693654	Identifier	i		2693514	0					
ANR	2693655	MemberAccess	instructionSet [ insidx ] . numOperands		2693514	1					
ANR	2693656	ArrayIndexing	instructionSet [ insidx ]		2693514	0					
ANR	2693657	Identifier	instructionSet		2693514	0					
ANR	2693658	Identifier	insidx		2693514	1					
ANR	2693659	Identifier	numOperands		2693514	1					
ANR	2693660	PostIncDecOperationExpression	i ++	103:53:4625:4627	2693514	2	True				
ANR	2693661	Identifier	i		2693514	0					
ANR	2693662	IncDec	++		2693514	1					
ANR	2693663	CompoundStatement		46:58:1756:1756	2693514	3					
ANR	2693664	ExpressionStatement	"dInstruction -> operands [ i ] = extractDataFromMask ( aInstruction . opcode , dInstruction -> instruction -> operandMasks [ i ] )"	104:2:4634:4746	2693514	0	True				
ANR	2693665	AssignmentExpression	"dInstruction -> operands [ i ] = extractDataFromMask ( aInstruction . opcode , dInstruction -> instruction -> operandMasks [ i ] )"		2693514	0		=			
ANR	2693666	ArrayIndexing	dInstruction -> operands [ i ]		2693514	0					
ANR	2693667	PtrMemberAccess	dInstruction -> operands		2693514	0					
ANR	2693668	Identifier	dInstruction		2693514	0					
ANR	2693669	Identifier	operands		2693514	1					
ANR	2693670	Identifier	i		2693514	1					
ANR	2693671	CallExpression	"extractDataFromMask ( aInstruction . opcode , dInstruction -> instruction -> operandMasks [ i ] )"		2693514	1					
ANR	2693672	Callee	extractDataFromMask		2693514	0					
ANR	2693673	Identifier	extractDataFromMask		2693514	0					
ANR	2693674	ArgumentList	aInstruction . opcode		2693514	1					
ANR	2693675	Argument	aInstruction . opcode		2693514	0					
ANR	2693676	MemberAccess	aInstruction . opcode		2693514	0					
ANR	2693677	Identifier	aInstruction		2693514	0					
ANR	2693678	Identifier	opcode		2693514	1					
ANR	2693679	Argument	dInstruction -> instruction -> operandMasks [ i ]		2693514	1					
ANR	2693680	ArrayIndexing	dInstruction -> instruction -> operandMasks [ i ]		2693514	0					
ANR	2693681	PtrMemberAccess	dInstruction -> instruction -> operandMasks		2693514	0					
ANR	2693682	PtrMemberAccess	dInstruction -> instruction		2693514	0					
ANR	2693683	Identifier	dInstruction		2693514	0					
ANR	2693684	Identifier	instruction		2693514	1					
ANR	2693685	Identifier	operandMasks		2693514	1					
ANR	2693686	Identifier	i		2693514	1					
ANR	2693687	IfStatement	if ( dInstruction -> instruction -> operandTypes [ i ] == OPERAND_LONG_ABSOLUTE_ADDRESS )		2693514	1					
ANR	2693688	Condition	dInstruction -> instruction -> operandTypes [ i ] == OPERAND_LONG_ABSOLUTE_ADDRESS	108:6:4943:5017	2693514	0	True				
ANR	2693689	EqualityExpression	dInstruction -> instruction -> operandTypes [ i ] == OPERAND_LONG_ABSOLUTE_ADDRESS		2693514	0		==			
ANR	2693690	ArrayIndexing	dInstruction -> instruction -> operandTypes [ i ]		2693514	0					
ANR	2693691	PtrMemberAccess	dInstruction -> instruction -> operandTypes		2693514	0					
ANR	2693692	PtrMemberAccess	dInstruction -> instruction		2693514	0					
ANR	2693693	Identifier	dInstruction		2693514	0					
ANR	2693694	Identifier	instruction		2693514	1					
ANR	2693695	Identifier	operandTypes		2693514	1					
ANR	2693696	Identifier	i		2693514	1					
ANR	2693697	Identifier	OPERAND_LONG_ABSOLUTE_ADDRESS		2693514	1					
ANR	2693698	CompoundStatement		51:83:2146:2146	2693514	1					
ANR	2693699	ExpressionStatement	AVR_Long_Instruction = AVR_LONG_INSTRUCTION_FOUND	109:3:5025:5074	2693514	0	True				
ANR	2693700	AssignmentExpression	AVR_Long_Instruction = AVR_LONG_INSTRUCTION_FOUND		2693514	0		=			
ANR	2693701	Identifier	AVR_Long_Instruction		2693514	0					
ANR	2693702	Identifier	AVR_LONG_INSTRUCTION_FOUND		2693514	1					
ANR	2693703	ExpressionStatement	AVR_Long_Address = dInstruction -> operands [ i ] << 16	110:3:5079:5129	2693514	1	True				
ANR	2693704	AssignmentExpression	AVR_Long_Address = dInstruction -> operands [ i ] << 16		2693514	0		=			
ANR	2693705	Identifier	AVR_Long_Address		2693514	0					
ANR	2693706	ShiftExpression	dInstruction -> operands [ i ] << 16		2693514	1		<<			
ANR	2693707	ArrayIndexing	dInstruction -> operands [ i ]		2693514	0					
ANR	2693708	PtrMemberAccess	dInstruction -> operands		2693514	0					
ANR	2693709	Identifier	dInstruction		2693514	0					
ANR	2693710	Identifier	operands		2693514	1					
ANR	2693711	Identifier	i		2693514	1					
ANR	2693712	PrimaryExpression	16		2693514	1					
ANR	2693713	ExpressionStatement	longInstruction = * dInstruction	111:3:5134:5165	2693514	2	True				
ANR	2693714	AssignmentExpression	longInstruction = * dInstruction		2693514	0		=			
ANR	2693715	Identifier	longInstruction		2693514	0					
ANR	2693716	UnaryOperationExpression	* dInstruction		2693514	1					
ANR	2693717	UnaryOperator	*		2693514	0					
ANR	2693718	Identifier	dInstruction		2693514	1					
ANR	2693719	IfStatement	if ( disassembleOperands ( dInstruction ) < 0 )		2693514	9					
ANR	2693720	Condition	disassembleOperands ( dInstruction ) < 0	116:5:5209:5245	2693514	0	True				
ANR	2693721	RelationalExpression	disassembleOperands ( dInstruction ) < 0		2693514	0		<			
ANR	2693722	CallExpression	disassembleOperands ( dInstruction )		2693514	0					
ANR	2693723	Callee	disassembleOperands		2693514	0					
ANR	2693724	Identifier	disassembleOperands		2693514	0					
ANR	2693725	ArgumentList	dInstruction		2693514	1					
ANR	2693726	Argument	dInstruction		2693514	0					
ANR	2693727	Identifier	dInstruction		2693514	0					
ANR	2693728	PrimaryExpression	0		2693514	1					
ANR	2693729	ReturnStatement	return ERROR_INVALID_ARGUMENTS ;	117:2:5250:5280	2693514	1	True				
ANR	2693730	Identifier	ERROR_INVALID_ARGUMENTS		2693514	0					
ANR	2693731	IfStatement	if ( AVR_Long_Instruction == AVR_LONG_INSTRUCTION_FOUND )		2693514	10					
ANR	2693732	Condition	AVR_Long_Instruction == AVR_LONG_INSTRUCTION_FOUND	119:5:5340:5389	2693514	0	True				
ANR	2693733	EqualityExpression	AVR_Long_Instruction == AVR_LONG_INSTRUCTION_FOUND		2693514	0		==			
ANR	2693734	Identifier	AVR_Long_Instruction		2693514	0					
ANR	2693735	Identifier	AVR_LONG_INSTRUCTION_FOUND		2693514	1					
ANR	2693736	CompoundStatement		62:57:2518:2518	2693514	1					
ANR	2693737	ExpressionStatement	longInstruction = * dInstruction	123:2:5584:5615	2693514	0	True				
ANR	2693738	AssignmentExpression	longInstruction = * dInstruction		2693514	0		=			
ANR	2693739	Identifier	longInstruction		2693514	0					
ANR	2693740	UnaryOperationExpression	* dInstruction		2693514	1					
ANR	2693741	UnaryOperator	*		2693514	0					
ANR	2693742	Identifier	dInstruction		2693514	1					
ANR	2693743	ReturnStatement	return 0 ;	126:1:5622:5630	2693514	11	True				
ANR	2693744	PrimaryExpression	0		2693514	0					
ANR	2693745	ReturnType	static int		2693514	1					
ANR	2693746	Identifier	disassembleInstruction		2693514	2					
ANR	2693747	ParameterList	"disassembledInstruction * dInstruction , const assembledInstruction aInstruction"		2693514	3					
ANR	2693748	Parameter	disassembledInstruction * dInstruction	58:34:2793:2829	2693514	0	True				
ANR	2693749	ParameterType	disassembledInstruction *		2693514	0					
ANR	2693750	Identifier	dInstruction		2693514	1					
ANR	2693751	Parameter	const assembledInstruction aInstruction	58:73:2832:2870	2693514	1	True				
ANR	2693752	ParameterType	const assembledInstruction		2693514	0					
ANR	2693753	Identifier	aInstruction		2693514	1					
ANR	2693754	CFGEntryNode	ENTRY		2693514		True				
ANR	2693755	CFGExitNode	EXIT		2693514		True				
ANR	2693756	Symbol	OPERAND_LONG_ABSOLUTE_ADDRESS		2693514						
ANR	2693757	Symbol	disassembleOperands		2693514						
ANR	2693758	Symbol	* longInstruction		2693514						
ANR	2693759	Symbol	aInstruction . opcode		2693514						
ANR	2693760	Symbol	* instructionSet		2693514						
ANR	2693761	Symbol	lookupInstruction		2693514						
ANR	2693762	Symbol	longInstruction . instruction		2693514						
ANR	2693763	Symbol	* dInstruction		2693514						
ANR	2693764	Symbol	dInstruction		2693514						
ANR	2693765	Symbol	* * dInstruction		2693514						
ANR	2693766	Symbol	AVR_Long_Instruction		2693514						
ANR	2693767	Symbol	dInstruction -> instruction -> operandTypes		2693514						
ANR	2693768	Symbol	* longInstruction . instruction		2693514						
ANR	2693769	Symbol	AVR_LONG_INSTRUCTION_PRINT		2693514						
ANR	2693770	Symbol	longInstruction		2693514						
ANR	2693771	Symbol	dInstruction -> alternateInstruction		2693514						
ANR	2693772	Symbol	* * dInstruction -> instruction		2693514						
ANR	2693773	Symbol	instructionSet [ insidx ] . numOperands		2693514						
ANR	2693774	Symbol	AVR_TOTAL_INSTRUCTIONS		2693514						
ANR	2693775	Symbol	* dInstruction -> operands		2693514						
ANR	2693776	Symbol	aInstruction		2693514						
ANR	2693777	Symbol	strcmp		2693514						
ANR	2693778	Symbol	extractDataFromMask		2693514						
ANR	2693779	Symbol	ERROR_INVALID_ARGUMENTS		2693514						
ANR	2693780	Symbol	NULL		2693514						
ANR	2693781	Symbol	instructionSet		2693514						
ANR	2693782	Symbol	dInstruction -> address		2693514						
ANR	2693783	Symbol	i		2693514						
ANR	2693784	Symbol	* dInstruction -> instruction -> operandMasks		2693514						
ANR	2693785	Symbol	* insidx		2693514						
ANR	2693786	Symbol	* dInstruction -> instruction -> operandTypes		2693514						
ANR	2693787	Symbol	aInstruction . address		2693514						
ANR	2693788	Symbol	AVR_LONG_INSTRUCTION_FOUND		2693514						
ANR	2693789	Symbol	* i		2693514						
ANR	2693790	Symbol	AVR_Long_Address		2693514						
ANR	2693791	Symbol	dInstruction -> operands		2693514						
ANR	2693792	Symbol	* dInstruction -> instruction		2693514						
ANR	2693793	Symbol	dInstruction -> instruction		2693514						
ANR	2693794	Symbol	longInstruction . instruction -> mnemonic		2693514						
ANR	2693795	Symbol	dInstruction -> instruction -> operandMasks		2693514						
ANR	2693796	Symbol	* * * dInstruction		2693514						
ANR	2693797	Symbol	insidx		2693514						
ANR	2693798	Function	extractDataFromMask	130:0:5744:6363							
ANR	2693799	FunctionDef	"extractDataFromMask (uint16_t data , uint16_t mask)"		2693798	0					
ANR	2693800	CompoundStatement		130:66:5810:6363	2693798	0					
ANR	2693801	IdentifierDeclStatement	"int i , j ;"	131:1:5813:5821	2693798	0	True				
ANR	2693802	IdentifierDecl	i		2693798	0					
ANR	2693803	IdentifierDeclType	int		2693798	0					
ANR	2693804	Identifier	i		2693798	1					
ANR	2693805	IdentifierDecl	j		2693798	1					
ANR	2693806	IdentifierDeclType	int		2693798	0					
ANR	2693807	Identifier	j		2693798	1					
ANR	2693808	IdentifierDeclStatement	uint16_t result = 0 ;	132:1:5824:5843	2693798	1	True				
ANR	2693809	IdentifierDecl	result = 0		2693798	0					
ANR	2693810	IdentifierDeclType	uint16_t		2693798	0					
ANR	2693811	Identifier	result		2693798	1					
ANR	2693812	AssignmentExpression	result = 0		2693798	2		=			
ANR	2693813	Identifier	result		2693798	0					
ANR	2693814	PrimaryExpression	0		2693798	1					
ANR	2693815	ForStatement	"for ( i = 0 , j = 0 ; i < 16 ; i ++ )"		2693798	2					
ANR	2693816	ForInit	"i = 0 , j = 0 ;"	136:6:5962:5974	2693798	0	True				
ANR	2693817	Expression	"i = 0 , j = 0"		2693798	0					
ANR	2693818	AssignmentExpression	i = 0		2693798	0		=			
ANR	2693819	Identifier	i		2693798	0					
ANR	2693820	PrimaryExpression	0		2693798	1					
ANR	2693821	AssignmentExpression	j = 0		2693798	1		=			
ANR	2693822	Identifier	j		2693798	0					
ANR	2693823	PrimaryExpression	0		2693798	1					
ANR	2693824	Condition	i < 16	136:20:5976:5981	2693798	1	True				
ANR	2693825	RelationalExpression	i < 16		2693798	0		<			
ANR	2693826	Identifier	i		2693798	0					
ANR	2693827	PrimaryExpression	16		2693798	1					
ANR	2693828	PostIncDecOperationExpression	i ++	136:28:5984:5986	2693798	2	True				
ANR	2693829	Identifier	i		2693798	0					
ANR	2693830	IncDec	++		2693798	1					
ANR	2693831	CompoundStatement		7:33:178:178	2693798	3					
ANR	2693832	IfStatement	if ( mask & ( 1 << i ) )		2693798	0					
ANR	2693833	Condition	mask & ( 1 << i )	138:6:6044:6056	2693798	0	True				
ANR	2693834	BitAndExpression	mask & ( 1 << i )		2693798	0		&			
ANR	2693835	Identifier	mask		2693798	0					
ANR	2693836	ShiftExpression	1 << i		2693798	1		<<			
ANR	2693837	PrimaryExpression	1		2693798	0					
ANR	2693838	Identifier	i		2693798	1					
ANR	2693839	CompoundStatement		9:21:248:248	2693798	1					
ANR	2693840	IfStatement	if ( ( ( mask & ( 1 << i ) ) & data ) != 0 )		2693798	0					
ANR	2693841	Condition	( ( mask & ( 1 << i ) ) & data ) != 0	142:7:6228:6256	2693798	0	True				
ANR	2693842	EqualityExpression	( ( mask & ( 1 << i ) ) & data ) != 0		2693798	0		!=			
ANR	2693843	BitAndExpression	( mask & ( 1 << i ) ) & data		2693798	0		&			
ANR	2693844	BitAndExpression	mask & ( 1 << i )		2693798	0		&			
ANR	2693845	Identifier	mask		2693798	0					
ANR	2693846	ShiftExpression	1 << i		2693798	1		<<			
ANR	2693847	PrimaryExpression	1		2693798	0					
ANR	2693848	Identifier	i		2693798	1					
ANR	2693849	Identifier	data		2693798	1					
ANR	2693850	PrimaryExpression	0		2693798	1					
ANR	2693851	ExpressionStatement	result |= ( 1 << j )	143:4:6263:6279	2693798	1	True				
ANR	2693852	AssignmentExpression	result |= ( 1 << j )		2693798	0		|=			
ANR	2693853	Identifier	result		2693798	0					
ANR	2693854	ShiftExpression	1 << j		2693798	1		<<			
ANR	2693855	PrimaryExpression	1		2693798	0					
ANR	2693856	Identifier	j		2693798	1					
ANR	2693857	ExpressionStatement	j ++	145:3:6333:6336	2693798	1	True				
ANR	2693858	PostIncDecOperationExpression	j ++		2693798	0					
ANR	2693859	Identifier	j		2693798	0					
ANR	2693860	IncDec	++		2693798	1					
ANR	2693861	ReturnStatement	return result ;	149:1:6348:6361	2693798	3	True				
ANR	2693862	Identifier	result		2693798	0					
ANR	2693863	ReturnType	static uint16_t		2693798	1					
ANR	2693864	Identifier	extractDataFromMask		2693798	2					
ANR	2693865	ParameterList	"uint16_t data , uint16_t mask"		2693798	3					
ANR	2693866	Parameter	uint16_t data	130:36:5780:5792	2693798	0	True				
ANR	2693867	ParameterType	uint16_t		2693798	0					
ANR	2693868	Identifier	data		2693798	1					
ANR	2693869	Parameter	uint16_t mask	130:51:5795:5807	2693798	1	True				
ANR	2693870	ParameterType	uint16_t		2693798	0					
ANR	2693871	Identifier	mask		2693798	1					
ANR	2693872	CFGEntryNode	ENTRY		2693798		True				
ANR	2693873	CFGExitNode	EXIT		2693798		True				
ANR	2693874	Symbol	result		2693798						
ANR	2693875	Symbol	data		2693798						
ANR	2693876	Symbol	i		2693798						
ANR	2693877	Symbol	j		2693798						
ANR	2693878	Symbol	mask		2693798						
ANR	2693879	Function	lookupInstruction	156:0:6612:8555							
ANR	2693880	FunctionDef	"lookupInstruction (uint16_t opcode , int offset)"		2693879	0					
ANR	2693881	CompoundStatement		156:58:6670:8555	2693879	0					
ANR	2693882	IdentifierDeclStatement	"uint16_t opcodeSearch , operandTemp ;"	157:1:6673:6707	2693879	0	True				
ANR	2693883	IdentifierDecl	opcodeSearch		2693879	0					
ANR	2693884	IdentifierDeclType	uint16_t		2693879	0					
ANR	2693885	Identifier	opcodeSearch		2693879	1					
ANR	2693886	IdentifierDecl	operandTemp		2693879	1					
ANR	2693887	IdentifierDeclType	uint16_t		2693879	0					
ANR	2693888	Identifier	operandTemp		2693879	1					
ANR	2693889	IdentifierDeclStatement	"int insidx , ghostRegisterConfirmed , i , j ;"	158:1:6710:6750	2693879	1	True				
ANR	2693890	IdentifierDecl	insidx		2693879	0					
ANR	2693891	IdentifierDeclType	int		2693879	0					
ANR	2693892	Identifier	insidx		2693879	1					
ANR	2693893	IdentifierDecl	ghostRegisterConfirmed		2693879	1					
ANR	2693894	IdentifierDeclType	int		2693879	0					
ANR	2693895	Identifier	ghostRegisterConfirmed		2693879	1					
ANR	2693896	IdentifierDecl	i		2693879	2					
ANR	2693897	IdentifierDeclType	int		2693879	0					
ANR	2693898	Identifier	i		2693879	1					
ANR	2693899	IdentifierDecl	j		2693879	3					
ANR	2693900	IdentifierDeclType	int		2693879	0					
ANR	2693901	Identifier	j		2693879	1					
ANR	2693902	ForStatement	for ( insidx = offset ; insidx < AVR_TOTAL_INSTRUCTIONS ; insidx ++ )		2693879	2					
ANR	2693903	ForInit	insidx = offset ;	160:6:6760:6775	2693879	0	True				
ANR	2693904	AssignmentExpression	insidx = offset		2693879	0		=			
ANR	2693905	Identifier	insidx		2693879	0					
ANR	2693906	Identifier	offset		2693879	1					
ANR	2693907	Condition	insidx < AVR_TOTAL_INSTRUCTIONS	160:23:6777:6807	2693879	1	True				
ANR	2693908	RelationalExpression	insidx < AVR_TOTAL_INSTRUCTIONS		2693879	0		<			
ANR	2693909	Identifier	insidx		2693879	0					
ANR	2693910	Identifier	AVR_TOTAL_INSTRUCTIONS		2693879	1					
ANR	2693911	PostIncDecOperationExpression	insidx ++	160:56:6810:6817	2693879	2	True				
ANR	2693912	Identifier	insidx		2693879	0					
ANR	2693913	IncDec	++		2693879	1					
ANR	2693914	CompoundStatement		5:66:149:149	2693879	3					
ANR	2693915	ExpressionStatement	opcodeSearch = opcode	161:2:6824:6845	2693879	0	True				
ANR	2693916	AssignmentExpression	opcodeSearch = opcode		2693879	0		=			
ANR	2693917	Identifier	opcodeSearch		2693879	0					
ANR	2693918	Identifier	opcode		2693879	1					
ANR	2693919	ExpressionStatement	ghostRegisterConfirmed = 1	164:2:6996:7022	2693879	1	True				
ANR	2693920	AssignmentExpression	ghostRegisterConfirmed = 1		2693879	0		=			
ANR	2693921	Identifier	ghostRegisterConfirmed		2693879	0					
ANR	2693922	PrimaryExpression	1		2693879	1					
ANR	2693923	ForStatement	for ( i = 0 ; i < AVR_MAX_NUM_OPERANDS ; i ++ )		2693879	2					
ANR	2693924	ForInit	i = 0 ;	170:7:7352:7357	2693879	0	True				
ANR	2693925	AssignmentExpression	i = 0		2693879	0		=			
ANR	2693926	Identifier	i		2693879	0					
ANR	2693927	PrimaryExpression	0		2693879	1					
ANR	2693928	Condition	i < AVR_MAX_NUM_OPERANDS	170:14:7359:7382	2693879	1	True				
ANR	2693929	RelationalExpression	i < AVR_MAX_NUM_OPERANDS		2693879	0		<			
ANR	2693930	Identifier	i		2693879	0					
ANR	2693931	Identifier	AVR_MAX_NUM_OPERANDS		2693879	1					
ANR	2693932	PostIncDecOperationExpression	i ++	170:40:7385:7387	2693879	2	True				
ANR	2693933	Identifier	i		2693879	0					
ANR	2693934	IncDec	++		2693879	1					
ANR	2693935	CompoundStatement		15:45:719:719	2693879	3					
ANR	2693936	IfStatement	if ( instructionSet [ insidx ] . operandTypes [ i ] == OPERAND_REGISTER_GHOST )		2693879	0					
ANR	2693937	Condition	instructionSet [ insidx ] . operandTypes [ i ] == OPERAND_REGISTER_GHOST	171:7:7399:7462	2693879	0	True				
ANR	2693938	EqualityExpression	instructionSet [ insidx ] . operandTypes [ i ] == OPERAND_REGISTER_GHOST		2693879	0		==			
ANR	2693939	ArrayIndexing	instructionSet [ insidx ] . operandTypes [ i ]		2693879	0					
ANR	2693940	MemberAccess	instructionSet [ insidx ] . operandTypes		2693879	0					
ANR	2693941	ArrayIndexing	instructionSet [ insidx ]		2693879	0					
ANR	2693942	Identifier	instructionSet		2693879	0					
ANR	2693943	Identifier	insidx		2693879	1					
ANR	2693944	Identifier	operandTypes		2693879	1					
ANR	2693945	Identifier	i		2693879	1					
ANR	2693946	Identifier	OPERAND_REGISTER_GHOST		2693879	1					
ANR	2693947	CompoundStatement		16:73:794:794	2693879	1					
ANR	2693948	ExpressionStatement	"operandTemp = extractDataFromMask ( opcode , instructionSet [ insidx ] . operandMasks [ 0 ] )"	173:4:7504:7585	2693879	0	True				
ANR	2693949	AssignmentExpression	"operandTemp = extractDataFromMask ( opcode , instructionSet [ insidx ] . operandMasks [ 0 ] )"		2693879	0		=			
ANR	2693950	Identifier	operandTemp		2693879	0					
ANR	2693951	CallExpression	"extractDataFromMask ( opcode , instructionSet [ insidx ] . operandMasks [ 0 ] )"		2693879	1					
ANR	2693952	Callee	extractDataFromMask		2693879	0					
ANR	2693953	Identifier	extractDataFromMask		2693879	0					
ANR	2693954	ArgumentList	opcode		2693879	1					
ANR	2693955	Argument	opcode		2693879	0					
ANR	2693956	Identifier	opcode		2693879	0					
ANR	2693957	Argument	instructionSet [ insidx ] . operandMasks [ 0 ]		2693879	1					
ANR	2693958	ArrayIndexing	instructionSet [ insidx ] . operandMasks [ 0 ]		2693879	0					
ANR	2693959	MemberAccess	instructionSet [ insidx ] . operandMasks		2693879	0					
ANR	2693960	ArrayIndexing	instructionSet [ insidx ]		2693879	0					
ANR	2693961	Identifier	instructionSet		2693879	0					
ANR	2693962	Identifier	insidx		2693879	1					
ANR	2693963	Identifier	operandMasks		2693879	1					
ANR	2693964	PrimaryExpression	0		2693879	1					
ANR	2693965	ForStatement	for ( j = 1 ; j < AVR_MAX_NUM_OPERANDS ; j ++ )		2693879	1					
ANR	2693966	ForInit	j = 1 ;	175:9:7650:7655	2693879	0	True				
ANR	2693967	AssignmentExpression	j = 1		2693879	0		=			
ANR	2693968	Identifier	j		2693879	0					
ANR	2693969	PrimaryExpression	1		2693879	1					
ANR	2693970	Condition	j < AVR_MAX_NUM_OPERANDS	175:16:7657:7680	2693879	1	True				
ANR	2693971	RelationalExpression	j < AVR_MAX_NUM_OPERANDS		2693879	0		<			
ANR	2693972	Identifier	j		2693879	0					
ANR	2693973	Identifier	AVR_MAX_NUM_OPERANDS		2693879	1					
ANR	2693974	PostIncDecOperationExpression	j ++	175:42:7683:7685	2693879	2	True				
ANR	2693975	Identifier	j		2693879	0					
ANR	2693976	IncDec	++		2693879	1					
ANR	2693977	CompoundStatement		20:47:1017:1017	2693879	3					
ANR	2693978	IfStatement	"if ( extractDataFromMask ( opcode , instructionSet [ insidx ] . operandMasks [ i ] ) != operandTemp )"		2693879	0					
ANR	2693979	Condition	"extractDataFromMask ( opcode , instructionSet [ insidx ] . operandMasks [ i ] ) != operandTemp"	176:9:7699:7787	2693879	0	True				
ANR	2693980	EqualityExpression	"extractDataFromMask ( opcode , instructionSet [ insidx ] . operandMasks [ i ] ) != operandTemp"		2693879	0		!=			
ANR	2693981	CallExpression	"extractDataFromMask ( opcode , instructionSet [ insidx ] . operandMasks [ i ] )"		2693879	0					
ANR	2693982	Callee	extractDataFromMask		2693879	0					
ANR	2693983	Identifier	extractDataFromMask		2693879	0					
ANR	2693984	ArgumentList	opcode		2693879	1					
ANR	2693985	Argument	opcode		2693879	0					
ANR	2693986	Identifier	opcode		2693879	0					
ANR	2693987	Argument	instructionSet [ insidx ] . operandMasks [ i ]		2693879	1					
ANR	2693988	ArrayIndexing	instructionSet [ insidx ] . operandMasks [ i ]		2693879	0					
ANR	2693989	MemberAccess	instructionSet [ insidx ] . operandMasks		2693879	0					
ANR	2693990	ArrayIndexing	instructionSet [ insidx ]		2693879	0					
ANR	2693991	Identifier	instructionSet		2693879	0					
ANR	2693992	Identifier	insidx		2693879	1					
ANR	2693993	Identifier	operandMasks		2693879	1					
ANR	2693994	Identifier	i		2693879	1					
ANR	2693995	Identifier	operandTemp		2693879	1					
ANR	2693996	ExpressionStatement	ghostRegisterConfirmed = 0	178:6:7796:7822	2693879	1	True				
ANR	2693997	AssignmentExpression	ghostRegisterConfirmed = 0		2693879	0		=			
ANR	2693998	Identifier	ghostRegisterConfirmed		2693879	0					
ANR	2693999	PrimaryExpression	0		2693879	1					
ANR	2694000	ExpressionStatement	opcodeSearch &= ~ ( instructionSet [ insidx ] . operandMasks [ i ] )	181:3:7839:7896	2693879	1	True				
ANR	2694001	AssignmentExpression	opcodeSearch &= ~ ( instructionSet [ insidx ] . operandMasks [ i ] )		2693879	0		&=			
ANR	2694002	Identifier	opcodeSearch		2693879	0					
ANR	2694003	UnaryOperationExpression	~ ( instructionSet [ insidx ] . operandMasks [ i ] )		2693879	1					
ANR	2694004	UnaryOperator	~		2693879	0					
ANR	2694005	ArrayIndexing	instructionSet [ insidx ] . operandMasks [ i ]		2693879	1					
ANR	2694006	MemberAccess	instructionSet [ insidx ] . operandMasks		2693879	0					
ANR	2694007	ArrayIndexing	instructionSet [ insidx ]		2693879	0					
ANR	2694008	Identifier	instructionSet		2693879	0					
ANR	2694009	Identifier	insidx		2693879	1					
ANR	2694010	Identifier	operandMasks		2693879	1					
ANR	2694011	Identifier	i		2693879	1					
ANR	2694012	IfStatement	if ( ghostRegisterConfirmed == 0 )		2693879	3					
ANR	2694013	Condition	ghostRegisterConfirmed == 0	186:6:8135:8161	2693879	0	True				
ANR	2694014	EqualityExpression	ghostRegisterConfirmed == 0		2693879	0		==			
ANR	2694015	Identifier	ghostRegisterConfirmed		2693879	0					
ANR	2694016	PrimaryExpression	0		2693879	1					
ANR	2694017	ContinueStatement	continue ;	187:3:8167:8175	2693879	1	True				
ANR	2694018	IfStatement	if ( opcodeSearch == instructionSet [ insidx ] . opcodeMask )		2693879	4					
ANR	2694019	Condition	opcodeSearch == instructionSet [ insidx ] . opcodeMask	189:6:8184:8232	2693879	0	True				
ANR	2694020	EqualityExpression	opcodeSearch == instructionSet [ insidx ] . opcodeMask		2693879	0		==			
ANR	2694021	Identifier	opcodeSearch		2693879	0					
ANR	2694022	MemberAccess	instructionSet [ insidx ] . opcodeMask		2693879	1					
ANR	2694023	ArrayIndexing	instructionSet [ insidx ]		2693879	0					
ANR	2694024	Identifier	instructionSet		2693879	0					
ANR	2694025	Identifier	insidx		2693879	1					
ANR	2694026	Identifier	opcodeMask		2693879	1					
ANR	2694027	BreakStatement	break ;	190:3:8239:8244	2693879	1	True				
ANR	2694028	ReturnStatement	return insidx ;	196:1:8540:8553	2693879	3	True				
ANR	2694029	Identifier	insidx		2693879	0					
ANR	2694030	ReturnType	static int		2693879	1					
ANR	2694031	Identifier	lookupInstruction		2693879	2					
ANR	2694032	ParameterList	"uint16_t opcode , int offset"		2693879	3					
ANR	2694033	Parameter	uint16_t opcode	156:29:6641:6655	2693879	0	True				
ANR	2694034	ParameterType	uint16_t		2693879	0					
ANR	2694035	Identifier	opcode		2693879	1					
ANR	2694036	Parameter	int offset	156:46:6658:6667	2693879	1	True				
ANR	2694037	ParameterType	int		2693879	0					
ANR	2694038	Identifier	offset		2693879	1					
ANR	2694039	CFGEntryNode	ENTRY		2693879		True				
ANR	2694040	CFGExitNode	EXIT		2693879		True				
ANR	2694041	Symbol	extractDataFromMask		2693879						
ANR	2694042	Symbol	offset		2693879						
ANR	2694043	Symbol	opcodeSearch		2693879						
ANR	2694044	Symbol	OPERAND_REGISTER_GHOST		2693879						
ANR	2694045	Symbol	instructionSet		2693879						
ANR	2694046	Symbol	instructionSet [ insidx ] . operandMasks		2693879						
ANR	2694047	Symbol	AVR_MAX_NUM_OPERANDS		2693879						
ANR	2694048	Symbol	instructionSet [ insidx ] . operandTypes		2693879						
ANR	2694049	Symbol	* instructionSet		2693879						
ANR	2694050	Symbol	ghostRegisterConfirmed		2693879						
ANR	2694051	Symbol	i		2693879						
ANR	2694052	Symbol	instructionSet [ insidx ] . opcodeMask		2693879						
ANR	2694053	Symbol	j		2693879						
ANR	2694054	Symbol	opcode		2693879						
ANR	2694055	Symbol	* insidx		2693879						
ANR	2694056	Symbol	* i		2693879						
ANR	2694057	Symbol	operandTemp		2693879						
ANR	2694058	Symbol	* * instructionSet		2693879						
ANR	2694059	Symbol	* instructionSet [ insidx ] . operandTypes		2693879						
ANR	2694060	Symbol	AVR_TOTAL_INSTRUCTIONS		2693879						
ANR	2694061	Symbol	insidx		2693879						
ANR	2694062	Symbol	* * insidx		2693879						
ANR	2694063	Symbol	* instructionSet [ insidx ] . operandMasks		2693879						
ANR	2694064	Function	disassembleOperands	200:0:8623:12434							
ANR	2694065	FunctionDef	disassembleOperands (disassembledInstruction * dInstruction)		2694064	0					
ANR	2694066	CompoundStatement		200:70:8693:12434	2694064	0					
ANR	2694067	IdentifierDeclStatement	int i ;	201:1:8696:8701	2694064	0	True				
ANR	2694068	IdentifierDecl	i		2694064	0					
ANR	2694069	IdentifierDeclType	int		2694064	0					
ANR	2694070	Identifier	i		2694064	1					
ANR	2694071	IfStatement	if ( ! dInstruction )		2694064	1					
ANR	2694072	Condition	! dInstruction	204:5:8742:8754	2694064	0	True				
ANR	2694073	UnaryOperationExpression	! dInstruction		2694064	0					
ANR	2694074	UnaryOperator	!		2694064	0					
ANR	2694075	Identifier	dInstruction		2694064	1					
ANR	2694076	ReturnStatement	return ERROR_INVALID_ARGUMENTS ;	205:2:8759:8789	2694064	1	True				
ANR	2694077	Identifier	ERROR_INVALID_ARGUMENTS		2694064	0					
ANR	2694078	IfStatement	if ( ! dInstruction -> instruction )		2694064	2					
ANR	2694079	Condition	! dInstruction -> instruction	206:5:8796:8821	2694064	0	True				
ANR	2694080	UnaryOperationExpression	! dInstruction -> instruction		2694064	0					
ANR	2694081	UnaryOperator	!		2694064	0					
ANR	2694082	PtrMemberAccess	dInstruction -> instruction		2694064	1					
ANR	2694083	Identifier	dInstruction		2694064	0					
ANR	2694084	Identifier	instruction		2694064	1					
ANR	2694085	ReturnStatement	return ERROR_INVALID_ARGUMENTS ;	207:2:8826:8856	2694064	1	True				
ANR	2694086	Identifier	ERROR_INVALID_ARGUMENTS		2694064	0					
ANR	2694087	ForStatement	for ( i = 0 ; i < dInstruction -> instruction -> numOperands ; i ++ )		2694064	3					
ANR	2694088	ForInit	i = 0 ;	210:6:8918:8923	2694064	0	True				
ANR	2694089	AssignmentExpression	i = 0		2694064	0		=			
ANR	2694090	Identifier	i		2694064	0					
ANR	2694091	PrimaryExpression	0		2694064	1					
ANR	2694092	Condition	i < dInstruction -> instruction -> numOperands	210:13:8925:8966	2694064	1	True				
ANR	2694093	RelationalExpression	i < dInstruction -> instruction -> numOperands		2694064	0		<			
ANR	2694094	Identifier	i		2694064	0					
ANR	2694095	PtrMemberAccess	dInstruction -> instruction -> numOperands		2694064	1					
ANR	2694096	PtrMemberAccess	dInstruction -> instruction		2694064	0					
ANR	2694097	Identifier	dInstruction		2694064	0					
ANR	2694098	Identifier	instruction		2694064	1					
ANR	2694099	Identifier	numOperands		2694064	1					
ANR	2694100	PostIncDecOperationExpression	i ++	210:57:8969:8971	2694064	2	True				
ANR	2694101	Identifier	i		2694064	0					
ANR	2694102	IncDec	++		2694064	1					
ANR	2694103	CompoundStatement		11:62:280:280	2694064	3					
ANR	2694104	SwitchStatement	switch ( dInstruction -> instruction -> operandTypes [ i ] )		2694064	0					
ANR	2694105	Condition	dInstruction -> instruction -> operandTypes [ i ]	211:10:8986:9027	2694064	0	True				
ANR	2694106	ArrayIndexing	dInstruction -> instruction -> operandTypes [ i ]		2694064	0					
ANR	2694107	PtrMemberAccess	dInstruction -> instruction -> operandTypes		2694064	0					
ANR	2694108	PtrMemberAccess	dInstruction -> instruction		2694064	0					
ANR	2694109	Identifier	dInstruction		2694064	0					
ANR	2694110	Identifier	instruction		2694064	1					
ANR	2694111	Identifier	operandTypes		2694064	1					
ANR	2694112	Identifier	i		2694064	1					
ANR	2694113	CompoundStatement		12:54:336:336	2694064	1					
ANR	2694114	Label	case OPERAND_BRANCH_ADDRESS :	212:2:9034:9061	2694064	0	True				
ANR	2694115	Identifier	OPERAND_BRANCH_ADDRESS		2694064	0					
ANR	2694116	ExpressionStatement	dInstruction -> operands [ i ] <<= 1	227:3:9904:9935	2694064	1	True				
ANR	2694117	AssignmentExpression	dInstruction -> operands [ i ] <<= 1		2694064	0		<<=			
ANR	2694118	ArrayIndexing	dInstruction -> operands [ i ]		2694064	0					
ANR	2694119	PtrMemberAccess	dInstruction -> operands		2694064	0					
ANR	2694120	Identifier	dInstruction		2694064	0					
ANR	2694121	Identifier	operands		2694064	1					
ANR	2694122	Identifier	i		2694064	1					
ANR	2694123	PrimaryExpression	1		2694064	1					
ANR	2694124	IfStatement	if ( dInstruction -> operands [ i ] & 0x80 )		2694064	2					
ANR	2694125	Condition	dInstruction -> operands [ i ] & 0x80	228:7:9944:9975	2694064	0	True				
ANR	2694126	BitAndExpression	dInstruction -> operands [ i ] & 0x80		2694064	0		&			
ANR	2694127	ArrayIndexing	dInstruction -> operands [ i ]		2694064	0					
ANR	2694128	PtrMemberAccess	dInstruction -> operands		2694064	0					
ANR	2694129	Identifier	dInstruction		2694064	0					
ANR	2694130	Identifier	operands		2694064	1					
ANR	2694131	Identifier	i		2694064	1					
ANR	2694132	PrimaryExpression	0x80		2694064	1					
ANR	2694133	CompoundStatement		29:41:1284:1284	2694064	1					
ANR	2694134	ExpressionStatement	dInstruction -> operands [ i ] = ( ~dInstruction -> operands [ i ] + 1 ) & 0x7F	233:4:10242:10305	2694064	0	True				
ANR	2694135	AssignmentExpression	dInstruction -> operands [ i ] = ( ~dInstruction -> operands [ i ] + 1 ) & 0x7F		2694064	0		=			
ANR	2694136	ArrayIndexing	dInstruction -> operands [ i ]		2694064	0					
ANR	2694137	PtrMemberAccess	dInstruction -> operands		2694064	0					
ANR	2694138	Identifier	dInstruction		2694064	0					
ANR	2694139	Identifier	operands		2694064	1					
ANR	2694140	Identifier	i		2694064	1					
ANR	2694141	BitAndExpression	( ~dInstruction -> operands [ i ] + 1 ) & 0x7F		2694064	1		&			
ANR	2694142	AdditiveExpression	~dInstruction -> operands [ i ] + 1		2694064	0		+			
ANR	2694143	ArrayIndexing	~dInstruction -> operands [ i ]		2694064	0					
ANR	2694144	PtrMemberAccess	~dInstruction -> operands		2694064	0					
ANR	2694145	Identifier	~dInstruction		2694064	0					
ANR	2694146	Identifier	operands		2694064	1					
ANR	2694147	Identifier	i		2694064	1					
ANR	2694148	PrimaryExpression	1		2694064	1					
ANR	2694149	PrimaryExpression	0x7F		2694064	1					
ANR	2694150	ExpressionStatement	dInstruction -> operands [ i ] = - dInstruction -> operands [ i ] + 2	234:4:10311:10367	2694064	1	True				
ANR	2694151	AssignmentExpression	dInstruction -> operands [ i ] = - dInstruction -> operands [ i ] + 2		2694064	0		=			
ANR	2694152	ArrayIndexing	dInstruction -> operands [ i ]		2694064	0					
ANR	2694153	PtrMemberAccess	dInstruction -> operands		2694064	0					
ANR	2694154	Identifier	dInstruction		2694064	0					
ANR	2694155	Identifier	operands		2694064	1					
ANR	2694156	Identifier	i		2694064	1					
ANR	2694157	AdditiveExpression	- dInstruction -> operands [ i ] + 2		2694064	1		+			
ANR	2694158	UnaryOperationExpression	- dInstruction -> operands [ i ]		2694064	0					
ANR	2694159	UnaryOperator	-		2694064	0					
ANR	2694160	ArrayIndexing	dInstruction -> operands [ i ]		2694064	1					
ANR	2694161	PtrMemberAccess	dInstruction -> operands		2694064	0					
ANR	2694162	Identifier	dInstruction		2694064	0					
ANR	2694163	Identifier	operands		2694064	1					
ANR	2694164	Identifier	i		2694064	1					
ANR	2694165	PrimaryExpression	2		2694064	1					
ANR	2694166	ElseStatement	else		2694064	0					
ANR	2694167	CompoundStatement		36:10:1685:1685	2694064	0					
ANR	2694168	ExpressionStatement	dInstruction -> operands [ i ] += 2	236:4:10385:10415	2694064	0	True				
ANR	2694169	AssignmentExpression	dInstruction -> operands [ i ] += 2		2694064	0		+=			
ANR	2694170	ArrayIndexing	dInstruction -> operands [ i ]		2694064	0					
ANR	2694171	PtrMemberAccess	dInstruction -> operands		2694064	0					
ANR	2694172	Identifier	dInstruction		2694064	0					
ANR	2694173	Identifier	operands		2694064	1					
ANR	2694174	Identifier	i		2694064	1					
ANR	2694175	PrimaryExpression	2		2694064	1					
ANR	2694176	BreakStatement	break ;	238:3:10425:10430	2694064	3	True				
ANR	2694177	Label	case OPERAND_RELATIVE_ADDRESS :	239:2:10434:10463	2694064	4	True				
ANR	2694178	Identifier	OPERAND_RELATIVE_ADDRESS		2694064	0					
ANR	2694179	ExpressionStatement	dInstruction -> operands [ i ] <<= 1	254:3:11339:11370	2694064	5	True				
ANR	2694180	AssignmentExpression	dInstruction -> operands [ i ] <<= 1		2694064	0		<<=			
ANR	2694181	ArrayIndexing	dInstruction -> operands [ i ]		2694064	0					
ANR	2694182	PtrMemberAccess	dInstruction -> operands		2694064	0					
ANR	2694183	Identifier	dInstruction		2694064	0					
ANR	2694184	Identifier	operands		2694064	1					
ANR	2694185	Identifier	i		2694064	1					
ANR	2694186	PrimaryExpression	1		2694064	1					
ANR	2694187	IfStatement	if ( dInstruction -> operands [ i ] & 0x1000 )		2694064	6					
ANR	2694188	Condition	dInstruction -> operands [ i ] & 0x1000	255:7:11379:11412	2694064	0	True				
ANR	2694189	BitAndExpression	dInstruction -> operands [ i ] & 0x1000		2694064	0		&			
ANR	2694190	ArrayIndexing	dInstruction -> operands [ i ]		2694064	0					
ANR	2694191	PtrMemberAccess	dInstruction -> operands		2694064	0					
ANR	2694192	Identifier	dInstruction		2694064	0					
ANR	2694193	Identifier	operands		2694064	1					
ANR	2694194	Identifier	i		2694064	1					
ANR	2694195	PrimaryExpression	0x1000		2694064	1					
ANR	2694196	CompoundStatement		61:4:2987:3038	2694064	1					
ANR	2694197	IdentifierDeclStatement	short val = ( ( ~dInstruction -> operands [ i ] ) ) & 0xFFF ;	260:4:11681:11732	2694064	0	True				
ANR	2694198	IdentifierDecl	val = ( ( ~dInstruction -> operands [ i ] ) ) & 0xFFF		2694064	0					
ANR	2694199	IdentifierDeclType	short		2694064	0					
ANR	2694200	Identifier	val		2694064	1					
ANR	2694201	AssignmentExpression	val = ( ( ~dInstruction -> operands [ i ] ) ) & 0xFFF		2694064	2		=			
ANR	2694202	Identifier	val		2694064	0					
ANR	2694203	BitAndExpression	( ( ~dInstruction -> operands [ i ] ) ) & 0xFFF		2694064	1		&			
ANR	2694204	ArrayIndexing	~dInstruction -> operands [ i ]		2694064	0					
ANR	2694205	PtrMemberAccess	~dInstruction -> operands		2694064	0					
ANR	2694206	Identifier	~dInstruction		2694064	0					
ANR	2694207	Identifier	operands		2694064	1					
ANR	2694208	Identifier	i		2694064	1					
ANR	2694209	PrimaryExpression	0xFFF		2694064	1					
ANR	2694210	ExpressionStatement	dInstruction -> operands [ i ] = - val + 1	262:4:11808:11844	2694064	1	True				
ANR	2694211	AssignmentExpression	dInstruction -> operands [ i ] = - val + 1		2694064	0		=			
ANR	2694212	ArrayIndexing	dInstruction -> operands [ i ]		2694064	0					
ANR	2694213	PtrMemberAccess	dInstruction -> operands		2694064	0					
ANR	2694214	Identifier	dInstruction		2694064	0					
ANR	2694215	Identifier	operands		2694064	1					
ANR	2694216	Identifier	i		2694064	1					
ANR	2694217	AdditiveExpression	- val + 1		2694064	1		+			
ANR	2694218	UnaryOperationExpression	- val		2694064	0					
ANR	2694219	UnaryOperator	-		2694064	0					
ANR	2694220	Identifier	val		2694064	1					
ANR	2694221	PrimaryExpression	1		2694064	1					
ANR	2694222	ElseStatement	else		2694064	0					
ANR	2694223	CompoundStatement		65:10:3200:3200	2694064	0					
ANR	2694224	ExpressionStatement	dInstruction -> operands [ i ] += 2	265:4:11900:11930	2694064	0	True				
ANR	2694225	AssignmentExpression	dInstruction -> operands [ i ] += 2		2694064	0		+=			
ANR	2694226	ArrayIndexing	dInstruction -> operands [ i ]		2694064	0					
ANR	2694227	PtrMemberAccess	dInstruction -> operands		2694064	0					
ANR	2694228	Identifier	dInstruction		2694064	0					
ANR	2694229	Identifier	operands		2694064	1					
ANR	2694230	Identifier	i		2694064	1					
ANR	2694231	PrimaryExpression	2		2694064	1					
ANR	2694232	BreakStatement	break ;	267:3:11940:11945	2694064	7	True				
ANR	2694233	Label	case OPERAND_REGISTER_STARTR16 :	268:2:11949:11979	2694064	8	True				
ANR	2694234	Identifier	OPERAND_REGISTER_STARTR16		2694064	0					
ANR	2694235	ExpressionStatement	dInstruction -> operands [ i ] = 16 + dInstruction -> operands [ i ]	269:3:11984:12043	2694064	9	True				
ANR	2694236	AssignmentExpression	dInstruction -> operands [ i ] = 16 + dInstruction -> operands [ i ]		2694064	0		=			
ANR	2694237	ArrayIndexing	dInstruction -> operands [ i ]		2694064	0					
ANR	2694238	PtrMemberAccess	dInstruction -> operands		2694064	0					
ANR	2694239	Identifier	dInstruction		2694064	0					
ANR	2694240	Identifier	operands		2694064	1					
ANR	2694241	Identifier	i		2694064	1					
ANR	2694242	AdditiveExpression	16 + dInstruction -> operands [ i ]		2694064	1		+			
ANR	2694243	PrimaryExpression	16		2694064	0					
ANR	2694244	ArrayIndexing	dInstruction -> operands [ i ]		2694064	1					
ANR	2694245	PtrMemberAccess	dInstruction -> operands		2694064	0					
ANR	2694246	Identifier	dInstruction		2694064	0					
ANR	2694247	Identifier	operands		2694064	1					
ANR	2694248	Identifier	i		2694064	1					
ANR	2694249	BreakStatement	break ;	270:3:12048:12053	2694064	10	True				
ANR	2694250	Label	case OPERAND_REGISTER_EVEN_PAIR :	271:2:12057:12088	2694064	11	True				
ANR	2694251	Identifier	OPERAND_REGISTER_EVEN_PAIR		2694064	0					
ANR	2694252	ExpressionStatement	dInstruction -> operands [ i ] = dInstruction -> operands [ i ] * 2	272:3:12093:12150	2694064	12	True				
ANR	2694253	AssignmentExpression	dInstruction -> operands [ i ] = dInstruction -> operands [ i ] * 2		2694064	0		=			
ANR	2694254	ArrayIndexing	dInstruction -> operands [ i ]		2694064	0					
ANR	2694255	PtrMemberAccess	dInstruction -> operands		2694064	0					
ANR	2694256	Identifier	dInstruction		2694064	0					
ANR	2694257	Identifier	operands		2694064	1					
ANR	2694258	Identifier	i		2694064	1					
ANR	2694259	MultiplicativeExpression	dInstruction -> operands [ i ] * 2		2694064	1		*			
ANR	2694260	ArrayIndexing	dInstruction -> operands [ i ]		2694064	0					
ANR	2694261	PtrMemberAccess	dInstruction -> operands		2694064	0					
ANR	2694262	Identifier	dInstruction		2694064	0					
ANR	2694263	Identifier	operands		2694064	1					
ANR	2694264	Identifier	i		2694064	1					
ANR	2694265	PrimaryExpression	2		2694064	1					
ANR	2694266	BreakStatement	break ;	273:3:12155:12160	2694064	13	True				
ANR	2694267	Label	case OPERAND_REGISTER_EVEN_PAIR_STARTR24 :	274:2:12164:12204	2694064	14	True				
ANR	2694268	Identifier	OPERAND_REGISTER_EVEN_PAIR_STARTR24		2694064	0					
ANR	2694269	ExpressionStatement	dInstruction -> operands [ i ] = 24 + ( dInstruction -> operands [ i ] * 2 )	275:3:12209:12273	2694064	15	True				
ANR	2694270	AssignmentExpression	dInstruction -> operands [ i ] = 24 + ( dInstruction -> operands [ i ] * 2 )		2694064	0		=			
ANR	2694271	ArrayIndexing	dInstruction -> operands [ i ]		2694064	0					
ANR	2694272	PtrMemberAccess	dInstruction -> operands		2694064	0					
ANR	2694273	Identifier	dInstruction		2694064	0					
ANR	2694274	Identifier	operands		2694064	1					
ANR	2694275	Identifier	i		2694064	1					
ANR	2694276	AdditiveExpression	24 + ( dInstruction -> operands [ i ] * 2 )		2694064	1		+			
ANR	2694277	PrimaryExpression	24		2694064	0					
ANR	2694278	MultiplicativeExpression	dInstruction -> operands [ i ] * 2		2694064	1		*			
ANR	2694279	ArrayIndexing	dInstruction -> operands [ i ]		2694064	0					
ANR	2694280	PtrMemberAccess	dInstruction -> operands		2694064	0					
ANR	2694281	Identifier	dInstruction		2694064	0					
ANR	2694282	Identifier	operands		2694064	1					
ANR	2694283	Identifier	i		2694064	1					
ANR	2694284	PrimaryExpression	2		2694064	1					
ANR	2694285	BreakStatement	break ;	276:3:12278:12283	2694064	16	True				
ANR	2694286	Label	case OPERAND_COMPLEMENTED_DATA :	277:2:12287:12317	2694064	17	True				
ANR	2694287	Identifier	OPERAND_COMPLEMENTED_DATA		2694064	0					
ANR	2694288	ExpressionStatement	dInstruction -> operands [ i ] = ~dInstruction -> operands [ i ] & 0xFF	278:3:12322:12383	2694064	18	True				
ANR	2694289	AssignmentExpression	dInstruction -> operands [ i ] = ~dInstruction -> operands [ i ] & 0xFF		2694064	0		=			
ANR	2694290	ArrayIndexing	dInstruction -> operands [ i ]		2694064	0					
ANR	2694291	PtrMemberAccess	dInstruction -> operands		2694064	0					
ANR	2694292	Identifier	dInstruction		2694064	0					
ANR	2694293	Identifier	operands		2694064	1					
ANR	2694294	Identifier	i		2694064	1					
ANR	2694295	BitAndExpression	~dInstruction -> operands [ i ] & 0xFF		2694064	1		&			
ANR	2694296	ArrayIndexing	~dInstruction -> operands [ i ]		2694064	0					
ANR	2694297	PtrMemberAccess	~dInstruction -> operands		2694064	0					
ANR	2694298	Identifier	~dInstruction		2694064	0					
ANR	2694299	Identifier	operands		2694064	1					
ANR	2694300	Identifier	i		2694064	1					
ANR	2694301	PrimaryExpression	0xFF		2694064	1					
ANR	2694302	BreakStatement	break ;	279:3:12388:12393	2694064	19	True				
ANR	2694303	Label	default :	280:2:12397:12404	2694064	20	True				
ANR	2694304	Identifier	default		2694064	0					
ANR	2694305	BreakStatement	break ;	281:3:12409:12414	2694064	21	True				
ANR	2694306	ReturnStatement	return 0 ;	284:1:12424:12432	2694064	4	True				
ANR	2694307	PrimaryExpression	0		2694064	0					
ANR	2694308	ReturnType	static int		2694064	1					
ANR	2694309	Identifier	disassembleOperands		2694064	2					
ANR	2694310	ParameterList	disassembledInstruction * dInstruction		2694064	3					
ANR	2694311	Parameter	disassembledInstruction * dInstruction	200:31:8654:8690	2694064	0	True				
ANR	2694312	ParameterType	disassembledInstruction *		2694064	0					
ANR	2694313	Identifier	dInstruction		2694064	1					
ANR	2694314	CFGEntryNode	ENTRY		2694064		True				
ANR	2694315	CFGExitNode	EXIT		2694064		True				
ANR	2694316	Symbol	val		2694064						
ANR	2694317	Symbol	ERROR_INVALID_ARGUMENTS		2694064						
ANR	2694318	Symbol	dInstruction -> instruction -> numOperands		2694064						
ANR	2694319	Symbol	i		2694064						
ANR	2694320	Symbol	* dInstruction		2694064						
ANR	2694321	Symbol	* * ~dInstruction		2694064						
ANR	2694322	Symbol	~dInstruction		2694064						
ANR	2694323	Symbol	dInstruction		2694064						
ANR	2694324	Symbol	* dInstruction -> instruction -> operandTypes		2694064						
ANR	2694325	Symbol	* ~dInstruction		2694064						
ANR	2694326	Symbol	* * dInstruction		2694064						
ANR	2694327	Symbol	dInstruction -> instruction -> operandTypes		2694064						
ANR	2694328	Symbol	* i		2694064						
ANR	2694329	Symbol	* dInstruction -> instruction		2694064						
ANR	2694330	Symbol	dInstruction -> operands		2694064						
ANR	2694331	Symbol	dInstruction -> instruction		2694064						
ANR	2694332	Symbol	* ~dInstruction -> operands		2694064						
ANR	2694333	Symbol	* * dInstruction -> instruction		2694064						
ANR	2694334	Symbol	* * * dInstruction		2694064						
ANR	2694335	Symbol	~dInstruction -> operands		2694064						
ANR	2694336	Symbol	* dInstruction -> operands		2694064						
