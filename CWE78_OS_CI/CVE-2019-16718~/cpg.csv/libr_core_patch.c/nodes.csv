command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4554022	File	data/converged/CVE-2019-16718~_radare2/libr_core_patch.c								
ANR	4554023	Function	r_core_patch_line	5:0:74:891							
ANR	4554024	FunctionDef	"r_core_patch_line (RCore * core , char * str)"		4554023	0					
ANR	4554025	CompoundStatement		5:53:127:891	4554023	0					
ANR	4554026	IdentifierDeclStatement	"char * p , * q ;"	6:1:130:141	4554023	0	True				
ANR	4554027	IdentifierDecl	* p		4554023	0					
ANR	4554028	IdentifierDeclType	char *		4554023	0					
ANR	4554029	Identifier	p		4554023	1					
ANR	4554030	IdentifierDecl	* q		4554023	1					
ANR	4554031	IdentifierDeclType	char *		4554023	0					
ANR	4554032	Identifier	q		4554023	1					
ANR	4554033	ExpressionStatement	"p = strchr ( str + 1 , ' ' )"	7:1:144:169	4554023	1	True				
ANR	4554034	AssignmentExpression	"p = strchr ( str + 1 , ' ' )"		4554023	0		=			
ANR	4554035	Identifier	p		4554023	0					
ANR	4554036	CallExpression	"strchr ( str + 1 , ' ' )"		4554023	1					
ANR	4554037	Callee	strchr		4554023	0					
ANR	4554038	Identifier	strchr		4554023	0					
ANR	4554039	ArgumentList	str + 1		4554023	1					
ANR	4554040	Argument	str + 1		4554023	0					
ANR	4554041	AdditiveExpression	str + 1		4554023	0		+			
ANR	4554042	Identifier	str		4554023	0					
ANR	4554043	PrimaryExpression	1		4554023	1					
ANR	4554044	Argument	' '		4554023	1					
ANR	4554045	PrimaryExpression	' '		4554023	0					
ANR	4554046	IfStatement	if ( ! p )		4554023	2					
ANR	4554047	Condition	! p	8:5:176:177	4554023	0	True				
ANR	4554048	UnaryOperationExpression	! p		4554023	0					
ANR	4554049	UnaryOperator	!		4554023	0					
ANR	4554050	Identifier	p		4554023	1					
ANR	4554051	CompoundStatement		4:9:52:52	4554023	1					
ANR	4554052	ReturnStatement	return 0 ;	9:2:184:192	4554023	0	True				
ANR	4554053	PrimaryExpression	0		4554023	0					
ANR	4554054	ExpressionStatement	* p = 0	11:1:198:204	4554023	3	True				
ANR	4554055	AssignmentExpression	* p = 0		4554023	0		=			
ANR	4554056	UnaryOperationExpression	* p		4554023	0					
ANR	4554057	UnaryOperator	*		4554023	0					
ANR	4554058	Identifier	p		4554023	1					
ANR	4554059	PrimaryExpression	0		4554023	1					
ANR	4554060	ForStatement	for ( ++ p ; * p == ' ' ; p ++ )		4554023	4					
ANR	4554061	ForInit	++ p ;	12:6:212:215	4554023	0	True				
ANR	4554062	UnaryExpression	++ p		4554023	0					
ANR	4554063	IncDec	++		4554023	0					
ANR	4554064	Identifier	p		4554023	1					
ANR	4554065	Condition	* p == ' '	12:11:217:225	4554023	1	True				
ANR	4554066	EqualityExpression	* p == ' '		4554023	0		==			
ANR	4554067	UnaryOperationExpression	* p		4554023	0					
ANR	4554068	UnaryOperator	*		4554023	0					
ANR	4554069	Identifier	p		4554023	1					
ANR	4554070	PrimaryExpression	' '		4554023	1					
ANR	4554071	PostIncDecOperationExpression	p ++	12:22:228:230	4554023	2	True				
ANR	4554072	Identifier	p		4554023	0					
ANR	4554073	IncDec	++		4554023	1					
ANR	4554074	CompoundStatement		8:27:105:105	4554023	3					
ANR	4554075	ExpressionStatement		13:2:237:237	4554023	0	True				
ANR	4554076	SwitchStatement	switch ( * p )		4554023	5					
ANR	4554077	Condition	* p	16:9:277:278	4554023	0	True				
ANR	4554078	UnaryOperationExpression	* p		4554023	0					
ANR	4554079	UnaryOperator	*		4554023	0					
ANR	4554080	Identifier	p		4554023	1					
ANR	4554081	CompoundStatement		12:13:153:153	4554023	1					
ANR	4554082	Label	"case '""' :"	17:1:284:292	4554023	0	True				
ANR	4554083	ExpressionStatement	"q = strchr ( p + 1 , '""' )"	18:4:298:320	4554023	1	True				
ANR	4554084	AssignmentExpression	"q = strchr ( p + 1 , '""' )"		4554023	0		=			
ANR	4554085	Identifier	q		4554023	0					
ANR	4554086	CallExpression	"strchr ( p + 1 , '""' )"		4554023	1					
ANR	4554087	Callee	strchr		4554023	0					
ANR	4554088	Identifier	strchr		4554023	0					
ANR	4554089	ArgumentList	p + 1		4554023	1					
ANR	4554090	Argument	p + 1		4554023	0					
ANR	4554091	AdditiveExpression	p + 1		4554023	0		+			
ANR	4554092	Identifier	p		4554023	0					
ANR	4554093	PrimaryExpression	1		4554023	1					
ANR	4554094	Argument	"'""'"		4554023	1					
ANR	4554095	PrimaryExpression	"'""'"		4554023	0					
ANR	4554096	IfStatement	if ( q )		4554023	2					
ANR	4554097	Condition	q	19:8:330:330	4554023	0	True				
ANR	4554098	Identifier	q		4554023	0					
ANR	4554099	CompoundStatement		15:11:205:205	4554023	1					
ANR	4554100	ExpressionStatement	* q = 0	20:5:340:346	4554023	0	True				
ANR	4554101	AssignmentExpression	* q = 0		4554023	0		=			
ANR	4554102	UnaryOperationExpression	* q		4554023	0					
ANR	4554103	UnaryOperator	*		4554023	0					
ANR	4554104	Identifier	q		4554023	1					
ANR	4554105	PrimaryExpression	0		4554023	1					
ANR	4554106	ExpressionStatement	"r_core_cmdf ( core , ""s %s"" , str )"	22:4:358:389	4554023	3	True				
ANR	4554107	CallExpression	"r_core_cmdf ( core , ""s %s"" , str )"		4554023	0					
ANR	4554108	Callee	r_core_cmdf		4554023	0					
ANR	4554109	Identifier	r_core_cmdf		4554023	0					
ANR	4554110	ArgumentList	core		4554023	1					
ANR	4554111	Argument	core		4554023	0					
ANR	4554112	Identifier	core		4554023	0					
ANR	4554113	Argument	"""s %s"""		4554023	1					
ANR	4554114	PrimaryExpression	"""s %s"""		4554023	0					
ANR	4554115	Argument	str		4554023	2					
ANR	4554116	Identifier	str		4554023	0					
ANR	4554117	ExpressionStatement	"r_core_cmdf ( core , ""\\""w %s\\"""" , p + 1 )"	23:4:395:430	4554023	4	True				
ANR	4554118	CallExpression	"r_core_cmdf ( core , ""\\""w %s\\"""" , p + 1 )"		4554023	0					
ANR	4554119	Callee	r_core_cmdf		4554023	0					
ANR	4554120	Identifier	r_core_cmdf		4554023	0					
ANR	4554121	ArgumentList	core		4554023	1					
ANR	4554122	Argument	core		4554023	0					
ANR	4554123	Identifier	core		4554023	0					
ANR	4554124	Argument	"""\\""w %s\\"""""		4554023	1					
ANR	4554125	PrimaryExpression	"""\\""w %s\\"""""		4554023	0					
ANR	4554126	Argument	p + 1		4554023	2					
ANR	4554127	AdditiveExpression	p + 1		4554023	0		+			
ANR	4554128	Identifier	p		4554023	0					
ANR	4554129	PrimaryExpression	1		4554023	1					
ANR	4554130	BreakStatement	break ;	24:4:436:441	4554023	5	True				
ANR	4554131	Label	case ':' :	25:1:444:452	4554023	6	True				
ANR	4554132	ExpressionStatement	"r_core_cmdf ( core , ""s %s"" , str )"	26:4:458:489	4554023	7	True				
ANR	4554133	CallExpression	"r_core_cmdf ( core , ""s %s"" , str )"		4554023	0					
ANR	4554134	Callee	r_core_cmdf		4554023	0					
ANR	4554135	Identifier	r_core_cmdf		4554023	0					
ANR	4554136	ArgumentList	core		4554023	1					
ANR	4554137	Argument	core		4554023	0					
ANR	4554138	Identifier	core		4554023	0					
ANR	4554139	Argument	"""s %s"""		4554023	1					
ANR	4554140	PrimaryExpression	"""s %s"""		4554023	0					
ANR	4554141	Argument	str		4554023	2					
ANR	4554142	Identifier	str		4554023	0					
ANR	4554143	ExpressionStatement	"r_core_cmdf ( core , ""\\""wa %s\\"""" , p )"	27:4:495:529	4554023	8	True				
ANR	4554144	CallExpression	"r_core_cmdf ( core , ""\\""wa %s\\"""" , p )"		4554023	0					
ANR	4554145	Callee	r_core_cmdf		4554023	0					
ANR	4554146	Identifier	r_core_cmdf		4554023	0					
ANR	4554147	ArgumentList	core		4554023	1					
ANR	4554148	Argument	core		4554023	0					
ANR	4554149	Identifier	core		4554023	0					
ANR	4554150	Argument	"""\\""wa %s\\"""""		4554023	1					
ANR	4554151	PrimaryExpression	"""\\""wa %s\\"""""		4554023	0					
ANR	4554152	Argument	p		4554023	2					
ANR	4554153	Identifier	p		4554023	0					
ANR	4554154	BreakStatement	break ;	28:4:535:540	4554023	9	True				
ANR	4554155	Label	case 'v' :	29:1:543:551	4554023	10	True				
ANR	4554156	ExpressionStatement	"q = strchr ( p + 1 , ' ' )"	30:2:555:577	4554023	11	True				
ANR	4554157	AssignmentExpression	"q = strchr ( p + 1 , ' ' )"		4554023	0		=			
ANR	4554158	Identifier	q		4554023	0					
ANR	4554159	CallExpression	"strchr ( p + 1 , ' ' )"		4554023	1					
ANR	4554160	Callee	strchr		4554023	0					
ANR	4554161	Identifier	strchr		4554023	0					
ANR	4554162	ArgumentList	p + 1		4554023	1					
ANR	4554163	Argument	p + 1		4554023	0					
ANR	4554164	AdditiveExpression	p + 1		4554023	0		+			
ANR	4554165	Identifier	p		4554023	0					
ANR	4554166	PrimaryExpression	1		4554023	1					
ANR	4554167	Argument	' '		4554023	1					
ANR	4554168	PrimaryExpression	' '		4554023	0					
ANR	4554169	IfStatement	if ( q )		4554023	12					
ANR	4554170	Condition	q	31:6:585:585	4554023	0	True				
ANR	4554171	Identifier	q		4554023	0					
ANR	4554172	CompoundStatement		27:9:460:460	4554023	1					
ANR	4554173	ExpressionStatement	* q = 0	32:3:593:599	4554023	0	True				
ANR	4554174	AssignmentExpression	* q = 0		4554023	0		=			
ANR	4554175	UnaryOperationExpression	* q		4554023	0					
ANR	4554176	UnaryOperator	*		4554023	0					
ANR	4554177	Identifier	q		4554023	1					
ANR	4554178	PrimaryExpression	0		4554023	1					
ANR	4554179	ForStatement	for ( ++ q ; * q == ' ' ; q ++ )		4554023	1					
ANR	4554180	ForInit	++ q ;	33:8:609:612	4554023	0	True				
ANR	4554181	UnaryExpression	++ q		4554023	0					
ANR	4554182	IncDec	++		4554023	0					
ANR	4554183	Identifier	q		4554023	1					
ANR	4554184	Condition	* q == ' '	33:13:614:622	4554023	1	True				
ANR	4554185	EqualityExpression	* q == ' '		4554023	0		==			
ANR	4554186	UnaryOperationExpression	* q		4554023	0					
ANR	4554187	UnaryOperator	*		4554023	0					
ANR	4554188	Identifier	q		4554023	1					
ANR	4554189	PrimaryExpression	' '		4554023	1					
ANR	4554190	PostIncDecOperationExpression	q ++	33:24:625:627	4554023	2	True				
ANR	4554191	Identifier	q		4554023	0					
ANR	4554192	IncDec	++		4554023	1					
ANR	4554193	CompoundStatement		29:29:502:502	4554023	3					
ANR	4554194	ExpressionStatement		34:4:636:636	4554023	0	True				
ANR	4554195	ElseStatement	else		4554023	0					
ANR	4554196	CompoundStatement		32:9:549:549	4554023	0					
ANR	4554197	ReturnStatement	return 0 ;	37:3:682:690	4554023	0	True				
ANR	4554198	PrimaryExpression	0		4554023	0					
ANR	4554199	ExpressionStatement	"r_core_cmdf ( core , ""s %s"" , str )"	39:2:698:729	4554023	13	True				
ANR	4554200	CallExpression	"r_core_cmdf ( core , ""s %s"" , str )"		4554023	0					
ANR	4554201	Callee	r_core_cmdf		4554023	0					
ANR	4554202	Identifier	r_core_cmdf		4554023	0					
ANR	4554203	ArgumentList	core		4554023	1					
ANR	4554204	Argument	core		4554023	0					
ANR	4554205	Identifier	core		4554023	0					
ANR	4554206	Argument	"""s %s"""		4554023	1					
ANR	4554207	PrimaryExpression	"""s %s"""		4554023	0					
ANR	4554208	Argument	str		4554023	2					
ANR	4554209	Identifier	str		4554023	0					
ANR	4554210	ExpressionStatement	"r_core_cmdf ( core , ""wv%s %s"" , p + 1 , q )"	40:2:733:772	4554023	14	True				
ANR	4554211	CallExpression	"r_core_cmdf ( core , ""wv%s %s"" , p + 1 , q )"		4554023	0					
ANR	4554212	Callee	r_core_cmdf		4554023	0					
ANR	4554213	Identifier	r_core_cmdf		4554023	0					
ANR	4554214	ArgumentList	core		4554023	1					
ANR	4554215	Argument	core		4554023	0					
ANR	4554216	Identifier	core		4554023	0					
ANR	4554217	Argument	"""wv%s %s"""		4554023	1					
ANR	4554218	PrimaryExpression	"""wv%s %s"""		4554023	0					
ANR	4554219	Argument	p + 1		4554023	2					
ANR	4554220	AdditiveExpression	p + 1		4554023	0		+			
ANR	4554221	Identifier	p		4554023	0					
ANR	4554222	PrimaryExpression	1		4554023	1					
ANR	4554223	Argument	q		4554023	3					
ANR	4554224	Identifier	q		4554023	0					
ANR	4554225	BreakStatement	break ;	41:2:776:781	4554023	15	True				
ANR	4554226	Label	default :	42:1:784:791	4554023	16	True				
ANR	4554227	Identifier	default		4554023	0					
ANR	4554228	ExpressionStatement	"r_core_cmdf ( core , ""s %s"" , str )"	43:4:797:828	4554023	17	True				
ANR	4554229	CallExpression	"r_core_cmdf ( core , ""s %s"" , str )"		4554023	0					
ANR	4554230	Callee	r_core_cmdf		4554023	0					
ANR	4554231	Identifier	r_core_cmdf		4554023	0					
ANR	4554232	ArgumentList	core		4554023	1					
ANR	4554233	Argument	core		4554023	0					
ANR	4554234	Identifier	core		4554023	0					
ANR	4554235	Argument	"""s %s"""		4554023	1					
ANR	4554236	PrimaryExpression	"""s %s"""		4554023	0					
ANR	4554237	Argument	str		4554023	2					
ANR	4554238	Identifier	str		4554023	0					
ANR	4554239	ExpressionStatement	"r_core_cmdf ( core , ""wx %s"" , p )"	44:4:834:864	4554023	18	True				
ANR	4554240	CallExpression	"r_core_cmdf ( core , ""wx %s"" , p )"		4554023	0					
ANR	4554241	Callee	r_core_cmdf		4554023	0					
ANR	4554242	Identifier	r_core_cmdf		4554023	0					
ANR	4554243	ArgumentList	core		4554023	1					
ANR	4554244	Argument	core		4554023	0					
ANR	4554245	Identifier	core		4554023	0					
ANR	4554246	Argument	"""wx %s"""		4554023	1					
ANR	4554247	PrimaryExpression	"""wx %s"""		4554023	0					
ANR	4554248	Argument	p		4554023	2					
ANR	4554249	Identifier	p		4554023	0					
ANR	4554250	BreakStatement	break ;	45:4:870:875	4554023	19	True				
ANR	4554251	ReturnStatement	return 1 ;	47:1:881:889	4554023	6	True				
ANR	4554252	PrimaryExpression	1		4554023	0					
ANR	4554253	ReturnType	R_API int		4554023	1					
ANR	4554254	Identifier	r_core_patch_line		4554023	2					
ANR	4554255	ParameterList	"RCore * core , char * str"		4554023	3					
ANR	4554256	Parameter	RCore * core	5:29:103:113	4554023	0	True				
ANR	4554257	ParameterType	RCore *		4554023	0					
ANR	4554258	Identifier	core		4554023	1					
ANR	4554259	Parameter	char * str	5:42:116:124	4554023	1	True				
ANR	4554260	ParameterType	char *		4554023	0					
ANR	4554261	Identifier	str		4554023	1					
ANR	4554262	CFGEntryNode	ENTRY		4554023		True				
ANR	4554263	CFGExitNode	EXIT		4554023		True				
ANR	4554264	Symbol	str		4554023						
ANR	4554265	Symbol	p		4554023						
ANR	4554266	Symbol	core		4554023						
ANR	4554267	Symbol	q		4554023						
ANR	4554268	Symbol	strchr		4554023						
ANR	4554269	Symbol	* p		4554023						
ANR	4554270	Symbol	* q		4554023						
ANR	4554271	Function	__core_patch_bracket	50:0:894:2133							
ANR	4554272	FunctionDef	"__core_patch_bracket (RCore * core , const char * str , ut64 * noff)"		4554271	0					
ANR	4554273	CompoundStatement		50:74:968:2133	4554271	0					
ANR	4554274	IdentifierDeclStatement	char tmp [ 128 ] ;	51:1:971:984	4554271	0	True				
ANR	4554275	IdentifierDecl	tmp [ 128 ]		4554271	0					
ANR	4554276	IdentifierDeclType	char [ 128 ]		4554271	0					
ANR	4554277	Identifier	tmp		4554271	1					
ANR	4554278	PrimaryExpression	128		4554271	2					
ANR	4554279	IdentifierDeclStatement	"char * s , * p , * q , * off ;"	52:1:987:1008	4554271	1	True				
ANR	4554280	IdentifierDecl	* s		4554271	0					
ANR	4554281	IdentifierDeclType	char *		4554271	0					
ANR	4554282	Identifier	s		4554271	1					
ANR	4554283	IdentifierDecl	* p		4554271	1					
ANR	4554284	IdentifierDeclType	char *		4554271	0					
ANR	4554285	Identifier	p		4554271	1					
ANR	4554286	IdentifierDecl	* q		4554271	2					
ANR	4554287	IdentifierDeclType	char *		4554271	0					
ANR	4554288	Identifier	q		4554271	1					
ANR	4554289	IdentifierDecl	* off		4554271	3					
ANR	4554290	IdentifierDeclType	char *		4554271	0					
ANR	4554291	Identifier	off		4554271	1					
ANR	4554292	IdentifierDeclStatement	RBuffer * b = r_buf_new ( ) ;	53:1:1011:1036	4554271	2	True				
ANR	4554293	IdentifierDecl	* b = r_buf_new ( )		4554271	0					
ANR	4554294	IdentifierDeclType	RBuffer *		4554271	0					
ANR	4554295	Identifier	b		4554271	1					
ANR	4554296	AssignmentExpression	* b = r_buf_new ( )		4554271	2		=			
ANR	4554297	Identifier	b		4554271	0					
ANR	4554298	CallExpression	r_buf_new ( )		4554271	1					
ANR	4554299	Callee	r_buf_new		4554271	0					
ANR	4554300	Identifier	r_buf_new		4554271	0					
ANR	4554301	ArgumentList			4554271	1					
ANR	4554302	IfStatement	if ( ! b )		4554271	3					
ANR	4554303	Condition	! b	54:5:1043:1044	4554271	0	True				
ANR	4554304	UnaryOperationExpression	! b		4554271	0					
ANR	4554305	UnaryOperator	!		4554271	0					
ANR	4554306	Identifier	b		4554271	1					
ANR	4554307	CompoundStatement		5:9:78:78	4554271	1					
ANR	4554308	ReturnStatement	return 0 ;	55:2:1051:1059	4554271	0	True				
ANR	4554309	PrimaryExpression	0		4554271	0					
ANR	4554310	ExpressionStatement	p = off = strdup ( str )	57:1:1065:1087	4554271	4	True				
ANR	4554311	AssignmentExpression	p = off = strdup ( str )		4554271	0		=			
ANR	4554312	Identifier	p		4554271	0					
ANR	4554313	AssignmentExpression	off = strdup ( str )		4554271	1		=			
ANR	4554314	Identifier	off		4554271	0					
ANR	4554315	CallExpression	strdup ( str )		4554271	1					
ANR	4554316	Callee	strdup		4554271	0					
ANR	4554317	Identifier	strdup		4554271	0					
ANR	4554318	ArgumentList	str		4554271	1					
ANR	4554319	Argument	str		4554271	0					
ANR	4554320	Identifier	str		4554271	0					
ANR	4554321	IfStatement	if ( ! p )		4554271	5					
ANR	4554322	Condition	! p	58:5:1094:1095	4554271	0	True				
ANR	4554323	UnaryOperationExpression	! p		4554271	0					
ANR	4554324	UnaryOperator	!		4554271	0					
ANR	4554325	Identifier	p		4554271	1					
ANR	4554326	CompoundStatement		9:9:129:129	4554271	1					
ANR	4554327	ExpressionStatement	r_buf_free ( b )	59:2:1102:1116	4554271	0	True				
ANR	4554328	CallExpression	r_buf_free ( b )		4554271	0					
ANR	4554329	Callee	r_buf_free		4554271	0					
ANR	4554330	Identifier	r_buf_free		4554271	0					
ANR	4554331	ArgumentList	b		4554271	1					
ANR	4554332	Argument	b		4554271	0					
ANR	4554333	Identifier	b		4554271	0					
ANR	4554334	ReturnStatement	return 0 ;	60:2:1120:1128	4554271	1	True				
ANR	4554335	PrimaryExpression	0		4554271	0					
ANR	4554336	ForStatement	for ( ; * p ; )		4554271	6					
ANR	4554337	Condition	* p	62:7:1140:1141	4554271	0	True				
ANR	4554338	UnaryOperationExpression	* p		4554271	0					
ANR	4554339	UnaryOperator	*		4554271	0					
ANR	4554340	Identifier	p		4554271	1					
ANR	4554341	CompoundStatement		13:12:176:176	4554271	1					
ANR	4554342	IfStatement	if ( * p == '\\n' )		4554271	0					
ANR	4554343	Condition	* p == '\\n'	63:6:1153:1160	4554271	0	True				
ANR	4554344	EqualityExpression	* p == '\\n'		4554271	0		==			
ANR	4554345	UnaryOperationExpression	* p		4554271	0					
ANR	4554346	UnaryOperator	*		4554271	0					
ANR	4554347	Identifier	p		4554271	1					
ANR	4554348	PrimaryExpression	'\\n'		4554271	1					
ANR	4554349	CompoundStatement		14:16:194:194	4554271	1					
ANR	4554350	ExpressionStatement	* p ++ = 0	64:3:1168:1176	4554271	0	True				
ANR	4554351	AssignmentExpression	* p ++ = 0		4554271	0		=			
ANR	4554352	UnaryOperationExpression	* p ++		4554271	0					
ANR	4554353	UnaryOperator	*		4554271	0					
ANR	4554354	PostIncDecOperationExpression	p ++		4554271	1					
ANR	4554355	Identifier	p		4554271	0					
ANR	4554356	IncDec	++		4554271	1					
ANR	4554357	PrimaryExpression	0		4554271	1					
ANR	4554358	ElseStatement	else		4554271	0					
ANR	4554359	CompoundStatement		16:9:218:218	4554271	0					
ANR	4554360	ExpressionStatement	p ++	66:3:1192:1195	4554271	0	True				
ANR	4554361	PostIncDecOperationExpression	p ++		4554271	0					
ANR	4554362	Identifier	p		4554271	0					
ANR	4554363	IncDec	++		4554271	1					
ANR	4554364	ContinueStatement	continue ;	67:3:1200:1208	4554271	1	True				
ANR	4554365	IfStatement	if ( * str == '}' )		4554271	1					
ANR	4554366	Condition	* str == '}'	69:6:1220:1230	4554271	0	True				
ANR	4554367	EqualityExpression	* str == '}'		4554271	0		==			
ANR	4554368	UnaryOperationExpression	* str		4554271	0					
ANR	4554369	UnaryOperator	*		4554271	0					
ANR	4554370	Identifier	str		4554271	1					
ANR	4554371	PrimaryExpression	'}'		4554271	1					
ANR	4554372	CompoundStatement		20:19:264:264	4554271	1					
ANR	4554373	BreakStatement	break ;	70:3:1238:1243	4554271	0	True				
ANR	4554374	IfStatement	"if ( ( q = strstr ( str , ""${"" ) ) )"		4554271	2					
ANR	4554375	Condition	"q = strstr ( str , ""${"" )"	72:6:1255:1278	4554271	0	True				
ANR	4554376	AssignmentExpression	"q = strstr ( str , ""${"" )"		4554271	0		=			
ANR	4554377	Identifier	q		4554271	0					
ANR	4554378	CallExpression	"strstr ( str , ""${"" )"		4554271	1					
ANR	4554379	Callee	strstr		4554271	0					
ANR	4554380	Identifier	strstr		4554271	0					
ANR	4554381	ArgumentList	str		4554271	1					
ANR	4554382	Argument	str		4554271	0					
ANR	4554383	Identifier	str		4554271	0					
ANR	4554384	Argument	"""${"""		4554271	1					
ANR	4554385	PrimaryExpression	"""${"""		4554271	0					
ANR	4554386	CompoundStatement		24:3:317:345	4554271	1					
ANR	4554387	IdentifierDeclStatement	"char * end = strchr ( q + 2 , '}' ) ;"	73:3:1286:1314	4554271	0	True				
ANR	4554388	IdentifierDecl	"* end = strchr ( q + 2 , '}' )"		4554271	0					
ANR	4554389	IdentifierDeclType	char *		4554271	0					
ANR	4554390	Identifier	end		4554271	1					
ANR	4554391	AssignmentExpression	"* end = strchr ( q + 2 , '}' )"		4554271	2		=			
ANR	4554392	Identifier	end		4554271	0					
ANR	4554393	CallExpression	"strchr ( q + 2 , '}' )"		4554271	1					
ANR	4554394	Callee	strchr		4554271	0					
ANR	4554395	Identifier	strchr		4554271	0					
ANR	4554396	ArgumentList	q + 2		4554271	1					
ANR	4554397	Argument	q + 2		4554271	0					
ANR	4554398	AdditiveExpression	q + 2		4554271	0		+			
ANR	4554399	Identifier	q		4554271	0					
ANR	4554400	PrimaryExpression	2		4554271	1					
ANR	4554401	Argument	'}'		4554271	1					
ANR	4554402	PrimaryExpression	'}'		4554271	0					
ANR	4554403	IfStatement	if ( end )		4554271	1					
ANR	4554404	Condition	end	74:7:1323:1325	4554271	0	True				
ANR	4554405	Identifier	end		4554271	0					
ANR	4554406	CompoundStatement		25:12:359:359	4554271	1					
ANR	4554407	ExpressionStatement	* q = * end = 0	75:4:1334:1347	4554271	0	True				
ANR	4554408	AssignmentExpression	* q = * end = 0		4554271	0		=			
ANR	4554409	UnaryOperationExpression	* q		4554271	0					
ANR	4554410	UnaryOperator	*		4554271	0					
ANR	4554411	Identifier	q		4554271	1					
ANR	4554412	AssignmentExpression	* end = 0		4554271	1		=			
ANR	4554413	UnaryOperationExpression	* end		4554271	0					
ANR	4554414	UnaryOperator	*		4554271	0					
ANR	4554415	Identifier	end		4554271	1					
ANR	4554416	PrimaryExpression	0		4554271	1					
ANR	4554417	ExpressionStatement	"* noff = r_num_math ( core -> num , q + 2 )"	76:4:1353:1388	4554271	1	True				
ANR	4554418	AssignmentExpression	"* noff = r_num_math ( core -> num , q + 2 )"		4554271	0		=			
ANR	4554419	UnaryOperationExpression	* noff		4554271	0					
ANR	4554420	UnaryOperator	*		4554271	0					
ANR	4554421	Identifier	noff		4554271	1					
ANR	4554422	CallExpression	"r_num_math ( core -> num , q + 2 )"		4554271	1					
ANR	4554423	Callee	r_num_math		4554271	0					
ANR	4554424	Identifier	r_num_math		4554271	0					
ANR	4554425	ArgumentList	core -> num		4554271	1					
ANR	4554426	Argument	core -> num		4554271	0					
ANR	4554427	PtrMemberAccess	core -> num		4554271	0					
ANR	4554428	Identifier	core		4554271	0					
ANR	4554429	Identifier	num		4554271	1					
ANR	4554430	Argument	q + 2		4554271	1					
ANR	4554431	AdditiveExpression	q + 2		4554271	0		+			
ANR	4554432	Identifier	q		4554271	0					
ANR	4554433	PrimaryExpression	2		4554271	1					
ANR	4554434	ExpressionStatement	"r_buf_append_bytes ( b , ( const ut8 * ) str , strlen ( str ) )"	77:4:1394:1447	4554271	2	True				
ANR	4554435	CallExpression	"r_buf_append_bytes ( b , ( const ut8 * ) str , strlen ( str ) )"		4554271	0					
ANR	4554436	Callee	r_buf_append_bytes		4554271	0					
ANR	4554437	Identifier	r_buf_append_bytes		4554271	0					
ANR	4554438	ArgumentList	b		4554271	1					
ANR	4554439	Argument	b		4554271	0					
ANR	4554440	Identifier	b		4554271	0					
ANR	4554441	Argument	( const ut8 * ) str		4554271	1					
ANR	4554442	CastExpression	( const ut8 * ) str		4554271	0					
ANR	4554443	CastTarget	const ut8 *		4554271	0					
ANR	4554444	Identifier	str		4554271	1					
ANR	4554445	Argument	strlen ( str )		4554271	2					
ANR	4554446	CallExpression	strlen ( str )		4554271	0					
ANR	4554447	Callee	strlen		4554271	0					
ANR	4554448	Identifier	strlen		4554271	0					
ANR	4554449	ArgumentList	str		4554271	1					
ANR	4554450	Argument	str		4554271	0					
ANR	4554451	Identifier	str		4554271	0					
ANR	4554452	Statement	snprintf	78:4:1453:1460	4554271	3	True				
ANR	4554453	Statement	(	78:13:1462:1462	4554271	4	True				
ANR	4554454	Statement	tmp	78:14:1463:1465	4554271	5	True				
ANR	4554455	Statement	","	78:17:1466:1466	4554271	6	True				
ANR	4554456	Statement	sizeof	78:19:1468:1473	4554271	7	True				
ANR	4554457	Statement	(	78:26:1475:1475	4554271	8	True				
ANR	4554458	Statement	tmp	78:27:1476:1478	4554271	9	True				
ANR	4554459	Statement	)	78:30:1479:1479	4554271	10	True				
ANR	4554460	Statement	","	78:31:1480:1480	4554271	11	True				
ANR	4554461	Statement	"""0x%08"""	78:33:1482:1488	4554271	12	True				
ANR	4554462	Statement	PFMT64x	78:40:1489:1495	4554271	13	True				
ANR	4554463	Statement	","	78:47:1496:1496	4554271	14	True				
ANR	4554464	Statement	*	78:49:1498:1498	4554271	15	True				
ANR	4554465	Statement	noff	78:50:1499:1502	4554271	16	True				
ANR	4554466	Statement	)	78:54:1503:1503	4554271	17	True				
ANR	4554467	ExpressionStatement		78:55:1504:1504	4554271	18	True				
ANR	4554468	ExpressionStatement	"r_buf_append_bytes ( b , ( const ut8 * ) tmp , strlen ( tmp ) )"	79:4:1510:1563	4554271	19	True				
ANR	4554469	CallExpression	"r_buf_append_bytes ( b , ( const ut8 * ) tmp , strlen ( tmp ) )"		4554271	0					
ANR	4554470	Callee	r_buf_append_bytes		4554271	0					
ANR	4554471	Identifier	r_buf_append_bytes		4554271	0					
ANR	4554472	ArgumentList	b		4554271	1					
ANR	4554473	Argument	b		4554271	0					
ANR	4554474	Identifier	b		4554271	0					
ANR	4554475	Argument	( const ut8 * ) tmp		4554271	1					
ANR	4554476	CastExpression	( const ut8 * ) tmp		4554271	0					
ANR	4554477	CastTarget	const ut8 *		4554271	0					
ANR	4554478	Identifier	tmp		4554271	1					
ANR	4554479	Argument	strlen ( tmp )		4554271	2					
ANR	4554480	CallExpression	strlen ( tmp )		4554271	0					
ANR	4554481	Callee	strlen		4554271	0					
ANR	4554482	Identifier	strlen		4554271	0					
ANR	4554483	ArgumentList	tmp		4554271	1					
ANR	4554484	Argument	tmp		4554271	0					
ANR	4554485	Identifier	tmp		4554271	0					
ANR	4554486	ExpressionStatement	"r_buf_append_bytes ( b , ( const ut8 * ) end + 1 , strlen ( end + 1 ) )"	80:4:1569:1626	4554271	20	True				
ANR	4554487	CallExpression	"r_buf_append_bytes ( b , ( const ut8 * ) end + 1 , strlen ( end + 1 ) )"		4554271	0					
ANR	4554488	Callee	r_buf_append_bytes		4554271	0					
ANR	4554489	Identifier	r_buf_append_bytes		4554271	0					
ANR	4554490	ArgumentList	b		4554271	1					
ANR	4554491	Argument	b		4554271	0					
ANR	4554492	Identifier	b		4554271	0					
ANR	4554493	Argument	( const ut8 * ) end + 1		4554271	1					
ANR	4554494	AdditiveExpression	( const ut8 * ) end + 1		4554271	0		+			
ANR	4554495	CastExpression	( const ut8 * ) end		4554271	0					
ANR	4554496	CastTarget	const ut8 *		4554271	0					
ANR	4554497	Identifier	end		4554271	1					
ANR	4554498	PrimaryExpression	1		4554271	1					
ANR	4554499	Argument	strlen ( end + 1 )		4554271	2					
ANR	4554500	CallExpression	strlen ( end + 1 )		4554271	0					
ANR	4554501	Callee	strlen		4554271	0					
ANR	4554502	Identifier	strlen		4554271	0					
ANR	4554503	ArgumentList	end + 1		4554271	1					
ANR	4554504	Argument	end + 1		4554271	0					
ANR	4554505	AdditiveExpression	end + 1		4554271	0		+			
ANR	4554506	Identifier	end		4554271	0					
ANR	4554507	PrimaryExpression	1		4554271	1					
ANR	4554508	ElseStatement	else		4554271	0					
ANR	4554509	CompoundStatement		33:9:673:673	4554271	0					
ANR	4554510	ExpressionStatement	"r_buf_append_bytes ( b , ( const ut8 * ) str , strlen ( str ) )"	83:3:1647:1700	4554271	0	True				
ANR	4554511	CallExpression	"r_buf_append_bytes ( b , ( const ut8 * ) str , strlen ( str ) )"		4554271	0					
ANR	4554512	Callee	r_buf_append_bytes		4554271	0					
ANR	4554513	Identifier	r_buf_append_bytes		4554271	0					
ANR	4554514	ArgumentList	b		4554271	1					
ANR	4554515	Argument	b		4554271	0					
ANR	4554516	Identifier	b		4554271	0					
ANR	4554517	Argument	( const ut8 * ) str		4554271	1					
ANR	4554518	CastExpression	( const ut8 * ) str		4554271	0					
ANR	4554519	CastTarget	const ut8 *		4554271	0					
ANR	4554520	Identifier	str		4554271	1					
ANR	4554521	Argument	strlen ( str )		4554271	2					
ANR	4554522	CallExpression	strlen ( str )		4554271	0					
ANR	4554523	Callee	strlen		4554271	0					
ANR	4554524	Identifier	strlen		4554271	0					
ANR	4554525	ArgumentList	str		4554271	1					
ANR	4554526	Argument	str		4554271	0					
ANR	4554527	Identifier	str		4554271	0					
ANR	4554528	ExpressionStatement	str = p	85:2:1708:1715	4554271	3	True				
ANR	4554529	AssignmentExpression	str = p		4554271	0		=			
ANR	4554530	Identifier	str		4554271	0					
ANR	4554531	Identifier	p		4554271	1					
ANR	4554532	ExpressionStatement	s = r_buf_to_string ( b )	88:1:1722:1745	4554271	7	True				
ANR	4554533	AssignmentExpression	s = r_buf_to_string ( b )		4554271	0		=			
ANR	4554534	Identifier	s		4554271	0					
ANR	4554535	CallExpression	r_buf_to_string ( b )		4554271	1					
ANR	4554536	Callee	r_buf_to_string		4554271	0					
ANR	4554537	Identifier	r_buf_to_string		4554271	0					
ANR	4554538	ArgumentList	b		4554271	1					
ANR	4554539	Argument	b		4554271	0					
ANR	4554540	Identifier	b		4554271	0					
ANR	4554541	ExpressionStatement	"r_egg_load ( core -> egg , s , 0 )"	89:1:1748:1776	4554271	8	True				
ANR	4554542	CallExpression	"r_egg_load ( core -> egg , s , 0 )"		4554271	0					
ANR	4554543	Callee	r_egg_load		4554271	0					
ANR	4554544	Identifier	r_egg_load		4554271	0					
ANR	4554545	ArgumentList	core -> egg		4554271	1					
ANR	4554546	Argument	core -> egg		4554271	0					
ANR	4554547	PtrMemberAccess	core -> egg		4554271	0					
ANR	4554548	Identifier	core		4554271	0					
ANR	4554549	Identifier	egg		4554271	1					
ANR	4554550	Argument	s		4554271	1					
ANR	4554551	Identifier	s		4554271	0					
ANR	4554552	Argument	0		4554271	2					
ANR	4554553	PrimaryExpression	0		4554271	0					
ANR	4554554	ExpressionStatement	free ( s )	90:1:1779:1787	4554271	9	True				
ANR	4554555	CallExpression	free ( s )		4554271	0					
ANR	4554556	Callee	free		4554271	0					
ANR	4554557	Identifier	free		4554271	0					
ANR	4554558	ArgumentList	s		4554271	1					
ANR	4554559	Argument	s		4554271	0					
ANR	4554560	Identifier	s		4554271	0					
ANR	4554561	ExpressionStatement	( void ) r_egg_compile ( core -> egg )	92:1:1791:1822	4554271	10	True				
ANR	4554562	CastExpression	( void ) r_egg_compile ( core -> egg )		4554271	0					
ANR	4554563	CastTarget	void		4554271	0					
ANR	4554564	CallExpression	r_egg_compile ( core -> egg )		4554271	1					
ANR	4554565	Callee	r_egg_compile		4554271	0					
ANR	4554566	Identifier	r_egg_compile		4554271	0					
ANR	4554567	ArgumentList	core -> egg		4554271	1					
ANR	4554568	Argument	core -> egg		4554271	0					
ANR	4554569	PtrMemberAccess	core -> egg		4554271	0					
ANR	4554570	Identifier	core		4554271	0					
ANR	4554571	Identifier	egg		4554271	1					
ANR	4554572	ExpressionStatement	( void ) r_egg_assemble ( core -> egg )	93:1:1825:1857	4554271	11	True				
ANR	4554573	CastExpression	( void ) r_egg_assemble ( core -> egg )		4554271	0					
ANR	4554574	CastTarget	void		4554271	0					
ANR	4554575	CallExpression	r_egg_assemble ( core -> egg )		4554271	1					
ANR	4554576	Callee	r_egg_assemble		4554271	0					
ANR	4554577	Identifier	r_egg_assemble		4554271	0					
ANR	4554578	ArgumentList	core -> egg		4554271	1					
ANR	4554579	Argument	core -> egg		4554271	0					
ANR	4554580	PtrMemberAccess	core -> egg		4554271	0					
ANR	4554581	Identifier	core		4554271	0					
ANR	4554582	Identifier	egg		4554271	1					
ANR	4554583	ExpressionStatement	r_buf_free ( b )	95:1:1861:1875	4554271	12	True				
ANR	4554584	CallExpression	r_buf_free ( b )		4554271	0					
ANR	4554585	Callee	r_buf_free		4554271	0					
ANR	4554586	Identifier	r_buf_free		4554271	0					
ANR	4554587	ArgumentList	b		4554271	1					
ANR	4554588	Argument	b		4554271	0					
ANR	4554589	Identifier	b		4554271	0					
ANR	4554590	ExpressionStatement	b = r_egg_get_bin ( core -> egg )	96:1:1878:1907	4554271	13	True				
ANR	4554591	AssignmentExpression	b = r_egg_get_bin ( core -> egg )		4554271	0		=			
ANR	4554592	Identifier	b		4554271	0					
ANR	4554593	CallExpression	r_egg_get_bin ( core -> egg )		4554271	1					
ANR	4554594	Callee	r_egg_get_bin		4554271	0					
ANR	4554595	Identifier	r_egg_get_bin		4554271	0					
ANR	4554596	ArgumentList	core -> egg		4554271	1					
ANR	4554597	Argument	core -> egg		4554271	0					
ANR	4554598	PtrMemberAccess	core -> egg		4554271	0					
ANR	4554599	Identifier	core		4554271	0					
ANR	4554600	Identifier	egg		4554271	1					
ANR	4554601	IfStatement	"if ( strcmp ( off , ""+"" ) )"		4554271	14					
ANR	4554602	Condition	"strcmp ( off , ""+"" )"	98:5:1915:1931	4554271	0	True				
ANR	4554603	CallExpression	"strcmp ( off , ""+"" )"		4554271	0					
ANR	4554604	Callee	strcmp		4554271	0					
ANR	4554605	Identifier	strcmp		4554271	0					
ANR	4554606	ArgumentList	off		4554271	1					
ANR	4554607	Argument	off		4554271	0					
ANR	4554608	Identifier	off		4554271	0					
ANR	4554609	Argument	"""+"""		4554271	1					
ANR	4554610	PrimaryExpression	"""+"""		4554271	0					
ANR	4554611	CompoundStatement		49:24:965:965	4554271	1					
ANR	4554612	ExpressionStatement	"* noff = r_num_math ( core -> num , off )"	99:2:1938:1973	4554271	0	True				
ANR	4554613	AssignmentExpression	"* noff = r_num_math ( core -> num , off )"		4554271	0		=			
ANR	4554614	UnaryOperationExpression	* noff		4554271	0					
ANR	4554615	UnaryOperator	*		4554271	0					
ANR	4554616	Identifier	noff		4554271	1					
ANR	4554617	CallExpression	"r_num_math ( core -> num , off )"		4554271	1					
ANR	4554618	Callee	r_num_math		4554271	0					
ANR	4554619	Identifier	r_num_math		4554271	0					
ANR	4554620	ArgumentList	core -> num		4554271	1					
ANR	4554621	Argument	core -> num		4554271	0					
ANR	4554622	PtrMemberAccess	core -> num		4554271	0					
ANR	4554623	Identifier	core		4554271	0					
ANR	4554624	Identifier	num		4554271	1					
ANR	4554625	Argument	off		4554271	1					
ANR	4554626	Identifier	off		4554271	0					
ANR	4554627	IdentifierDeclStatement	ut64 tmpsz ;	101:1:1979:1989	4554271	15	True				
ANR	4554628	IdentifierDecl	tmpsz		4554271	0					
ANR	4554629	IdentifierDeclType	ut64		4554271	0					
ANR	4554630	Identifier	tmpsz		4554271	1					
ANR	4554631	IdentifierDeclStatement	"const ut8 * tmpbuf = r_buf_data ( b , & tmpsz ) ;"	102:1:1992:2034	4554271	16	True				
ANR	4554632	IdentifierDecl	"* tmpbuf = r_buf_data ( b , & tmpsz )"		4554271	0					
ANR	4554633	IdentifierDeclType	const ut8 *		4554271	0					
ANR	4554634	Identifier	tmpbuf		4554271	1					
ANR	4554635	AssignmentExpression	"* tmpbuf = r_buf_data ( b , & tmpsz )"		4554271	2		=			
ANR	4554636	Identifier	tmpbuf		4554271	0					
ANR	4554637	CallExpression	"r_buf_data ( b , & tmpsz )"		4554271	1					
ANR	4554638	Callee	r_buf_data		4554271	0					
ANR	4554639	Identifier	r_buf_data		4554271	0					
ANR	4554640	ArgumentList	b		4554271	1					
ANR	4554641	Argument	b		4554271	0					
ANR	4554642	Identifier	b		4554271	0					
ANR	4554643	Argument	& tmpsz		4554271	1					
ANR	4554644	UnaryOperationExpression	& tmpsz		4554271	0					
ANR	4554645	UnaryOperator	&		4554271	0					
ANR	4554646	Identifier	tmpsz		4554271	1					
ANR	4554647	ExpressionStatement	"r_core_write_at ( core , * noff , tmpbuf , tmpsz )"	103:1:2037:2081	4554271	17	True				
ANR	4554648	CallExpression	"r_core_write_at ( core , * noff , tmpbuf , tmpsz )"		4554271	0					
ANR	4554649	Callee	r_core_write_at		4554271	0					
ANR	4554650	Identifier	r_core_write_at		4554271	0					
ANR	4554651	ArgumentList	core		4554271	1					
ANR	4554652	Argument	core		4554271	0					
ANR	4554653	Identifier	core		4554271	0					
ANR	4554654	Argument	* noff		4554271	1					
ANR	4554655	UnaryOperationExpression	* noff		4554271	0					
ANR	4554656	UnaryOperator	*		4554271	0					
ANR	4554657	Identifier	noff		4554271	1					
ANR	4554658	Argument	tmpbuf		4554271	2					
ANR	4554659	Identifier	tmpbuf		4554271	0					
ANR	4554660	Argument	tmpsz		4554271	3					
ANR	4554661	Identifier	tmpsz		4554271	0					
ANR	4554662	ExpressionStatement	* noff += r_buf_size ( b )	104:1:2084:2107	4554271	18	True				
ANR	4554663	AssignmentExpression	* noff += r_buf_size ( b )		4554271	0		+=			
ANR	4554664	UnaryOperationExpression	* noff		4554271	0					
ANR	4554665	UnaryOperator	*		4554271	0					
ANR	4554666	Identifier	noff		4554271	1					
ANR	4554667	CallExpression	r_buf_size ( b )		4554271	1					
ANR	4554668	Callee	r_buf_size		4554271	0					
ANR	4554669	Identifier	r_buf_size		4554271	0					
ANR	4554670	ArgumentList	b		4554271	1					
ANR	4554671	Argument	b		4554271	0					
ANR	4554672	Identifier	b		4554271	0					
ANR	4554673	ExpressionStatement	free ( off )	105:1:2110:2120	4554271	19	True				
ANR	4554674	CallExpression	free ( off )		4554271	0					
ANR	4554675	Callee	free		4554271	0					
ANR	4554676	Identifier	free		4554271	0					
ANR	4554677	ArgumentList	off		4554271	1					
ANR	4554678	Argument	off		4554271	0					
ANR	4554679	Identifier	off		4554271	0					
ANR	4554680	ReturnStatement	return 1 ;	106:1:2123:2131	4554271	20	True				
ANR	4554681	PrimaryExpression	1		4554271	0					
ANR	4554682	ReturnType	static int		4554271	1					
ANR	4554683	Identifier	__core_patch_bracket		4554271	2					
ANR	4554684	ParameterList	"RCore * core , const char * str , ut64 * noff"		4554271	3					
ANR	4554685	Parameter	RCore * core	50:32:926:936	4554271	0	True				
ANR	4554686	ParameterType	RCore *		4554271	0					
ANR	4554687	Identifier	core		4554271	1					
ANR	4554688	Parameter	const char * str	50:45:939:953	4554271	1	True				
ANR	4554689	ParameterType	const char *		4554271	0					
ANR	4554690	Identifier	str		4554271	1					
ANR	4554691	Parameter	ut64 * noff	50:62:956:965	4554271	2	True				
ANR	4554692	ParameterType	ut64 *		4554271	0					
ANR	4554693	Identifier	noff		4554271	1					
ANR	4554694	CFGEntryNode	ENTRY		4554271		True				
ANR	4554695	CFGExitNode	EXIT		4554271		True				
ANR	4554696	Symbol	* core		4554271						
ANR	4554697	Symbol	strchr		4554271						
ANR	4554698	Symbol	r_num_math		4554271						
ANR	4554699	Symbol	strlen		4554271						
ANR	4554700	Symbol	core -> egg		4554271						
ANR	4554701	Symbol	* noff		4554271						
ANR	4554702	Symbol	tmp		4554271						
ANR	4554703	Symbol	& tmpsz		4554271						
ANR	4554704	Symbol	end		4554271						
ANR	4554705	Symbol	r_buf_to_string		4554271						
ANR	4554706	Symbol	tmpbuf		4554271						
ANR	4554707	Symbol	r_buf_new		4554271						
ANR	4554708	Symbol	* str		4554271						
ANR	4554709	Symbol	core -> num		4554271						
ANR	4554710	Symbol	r_buf_data		4554271						
ANR	4554711	Symbol	strcmp		4554271						
ANR	4554712	Symbol	b		4554271						
ANR	4554713	Symbol	* p ++		4554271						
ANR	4554714	Symbol	tmpsz		4554271						
ANR	4554715	Symbol	off		4554271						
ANR	4554716	Symbol	str		4554271						
ANR	4554717	Symbol	p		4554271						
ANR	4554718	Symbol	core		4554271						
ANR	4554719	Symbol	q		4554271						
ANR	4554720	Symbol	noff		4554271						
ANR	4554721	Symbol	s		4554271						
ANR	4554722	Symbol	strstr		4554271						
ANR	4554723	Symbol	r_egg_get_bin		4554271						
ANR	4554724	Symbol	* p		4554271						
ANR	4554725	Symbol	* end		4554271						
ANR	4554726	Symbol	strdup		4554271						
ANR	4554727	Symbol	* q		4554271						
ANR	4554728	Symbol	r_buf_size		4554271						
ANR	4554729	Function	r_core_patch	109:0:2136:2854							
ANR	4554730	FunctionDef	"r_core_patch (RCore * core , const char * patch)"		4554729	0					
ANR	4554731	CompoundStatement		109:55:2191:2854	4554729	0					
ANR	4554732	IdentifierDeclStatement	"char * p , * p0 , * str ;"	110:1:2194:2212	4554729	0	True				
ANR	4554733	IdentifierDecl	* p		4554729	0					
ANR	4554734	IdentifierDeclType	char *		4554729	0					
ANR	4554735	Identifier	p		4554729	1					
ANR	4554736	IdentifierDecl	* p0		4554729	1					
ANR	4554737	IdentifierDeclType	char *		4554729	0					
ANR	4554738	Identifier	p0		4554729	1					
ANR	4554739	IdentifierDecl	* str		4554729	2					
ANR	4554740	IdentifierDeclType	char *		4554729	0					
ANR	4554741	Identifier	str		4554729	1					
ANR	4554742	Statement	ut64	111:1:2215:2218	4554729	1	True				
ANR	4554743	Statement	noff	111:6:2220:2223	4554729	2	True				
ANR	4554744	Statement	=	111:11:2225:2225	4554729	3	True				
ANR	4554745	Statement	0L	111:13:2227:2228	4554729	4	True				
ANR	4554746	ExpressionStatement	L	111:15:2229:2230	4554729	5	True				
ANR	4554747	Identifier	L		4554729	0					
ANR	4554748	ExpressionStatement	p = p0 = str = strdup ( patch )	113:1:2234:2263	4554729	6	True				
ANR	4554749	AssignmentExpression	p = p0 = str = strdup ( patch )		4554729	0		=			
ANR	4554750	Identifier	p		4554729	0					
ANR	4554751	AssignmentExpression	p0 = str = strdup ( patch )		4554729	1		=			
ANR	4554752	Identifier	p0		4554729	0					
ANR	4554753	AssignmentExpression	str = strdup ( patch )		4554729	1		=			
ANR	4554754	Identifier	str		4554729	0					
ANR	4554755	CallExpression	strdup ( patch )		4554729	1					
ANR	4554756	Callee	strdup		4554729	0					
ANR	4554757	Identifier	strdup		4554729	0					
ANR	4554758	ArgumentList	patch		4554729	1					
ANR	4554759	Argument	patch		4554729	0					
ANR	4554760	Identifier	patch		4554729	0					
ANR	4554761	IfStatement	if ( ! p )		4554729	7					
ANR	4554762	Condition	! p	114:5:2270:2271	4554729	0	True				
ANR	4554763	UnaryOperationExpression	! p		4554729	0					
ANR	4554764	UnaryOperator	!		4554729	0					
ANR	4554765	Identifier	p		4554729	1					
ANR	4554766	CompoundStatement		6:9:82:82	4554729	1					
ANR	4554767	ReturnStatement	return 0 ;	115:2:2278:2286	4554729	0	True				
ANR	4554768	PrimaryExpression	0		4554729	0					
ANR	4554769	ForStatement	for ( ; * p ; p ++ )		4554729	8					
ANR	4554770	Condition	* p	117:8:2299:2300	4554729	0	True				
ANR	4554771	UnaryOperationExpression	* p		4554729	0					
ANR	4554772	UnaryOperator	*		4554729	0					
ANR	4554773	Identifier	p		4554729	1					
ANR	4554774	PostIncDecOperationExpression	p ++	117:12:2303:2305	4554729	1	True				
ANR	4554775	Identifier	p		4554729	0					
ANR	4554776	IncDec	++		4554729	1					
ANR	4554777	CompoundStatement		9:17:116:116	4554729	2					
ANR	4554778	IfStatement	if ( ! * p || * p == '\\n' )		4554729	0					
ANR	4554779	Condition	! * p || * p == '\\n'	119:6:2343:2359	4554729	0	True				
ANR	4554780	OrExpression	! * p || * p == '\\n'		4554729	0		||			
ANR	4554781	UnaryOperationExpression	! * p		4554729	0					
ANR	4554782	UnaryOperator	!		4554729	0					
ANR	4554783	UnaryOperationExpression	* p		4554729	1					
ANR	4554784	UnaryOperator	*		4554729	0					
ANR	4554785	Identifier	p		4554729	1					
ANR	4554786	EqualityExpression	* p == '\\n'		4554729	1		==			
ANR	4554787	UnaryOperationExpression	* p		4554729	0					
ANR	4554788	UnaryOperator	*		4554729	0					
ANR	4554789	Identifier	p		4554729	1					
ANR	4554790	PrimaryExpression	'\\n'		4554729	1					
ANR	4554791	CompoundStatement		11:25:170:170	4554729	1					
ANR	4554792	ExpressionStatement	* p ++ = 0	120:3:2367:2375	4554729	0	True				
ANR	4554793	AssignmentExpression	* p ++ = 0		4554729	0		=			
ANR	4554794	UnaryOperationExpression	* p ++		4554729	0					
ANR	4554795	UnaryOperator	*		4554729	0					
ANR	4554796	PostIncDecOperationExpression	p ++		4554729	1					
ANR	4554797	Identifier	p		4554729	0					
ANR	4554798	IncDec	++		4554729	1					
ANR	4554799	PrimaryExpression	0		4554729	1					
ANR	4554800	ElseStatement	else		4554729	0					
ANR	4554801	CompoundStatement		13:9:195:195	4554729	0					
ANR	4554802	ContinueStatement	continue ;	122:3:2392:2400	4554729	0	True				
ANR	4554803	SwitchStatement	switch ( * str )		4554729	1					
ANR	4554804	Condition	* str	125:10:2417:2420	4554729	0	True				
ANR	4554805	UnaryOperationExpression	* str		4554729	0					
ANR	4554806	UnaryOperator	*		4554729	0					
ANR	4554807	Identifier	str		4554729	1					
ANR	4554808	CompoundStatement		17:16:231:231	4554729	1					
ANR	4554809	Label	case '#' :	126:2:2427:2435	4554729	0	True				
ANR	4554810	Label	case '\\n' :	127:2:2439:2448	4554729	1	True				
ANR	4554811	Label	case '\\r' :	128:2:2452:2461	4554729	2	True				
ANR	4554812	Label	case '\\0' :	129:2:2465:2474	4554729	3	True				
ANR	4554813	BreakStatement	break ;	130:3:2479:2484	4554729	4	True				
ANR	4554814	Label	case ':' :	131:2:2488:2496	4554729	5	True				
ANR	4554815	ExpressionStatement	"r_core_cmd0 ( core , str + 1 )"	132:3:2501:2526	4554729	6	True				
ANR	4554816	CallExpression	"r_core_cmd0 ( core , str + 1 )"		4554729	0					
ANR	4554817	Callee	r_core_cmd0		4554729	0					
ANR	4554818	Identifier	r_core_cmd0		4554729	0					
ANR	4554819	ArgumentList	core		4554729	1					
ANR	4554820	Argument	core		4554729	0					
ANR	4554821	Identifier	core		4554729	0					
ANR	4554822	Argument	str + 1		4554729	1					
ANR	4554823	AdditiveExpression	str + 1		4554729	0		+			
ANR	4554824	Identifier	str		4554729	0					
ANR	4554825	PrimaryExpression	1		4554729	1					
ANR	4554826	BreakStatement	break ;	133:3:2531:2536	4554729	7	True				
ANR	4554827	Label	case '.' :	134:2:2540:2548	4554729	8	True				
ANR	4554828	Label	case '!' :	135:2:2552:2560	4554729	9	True				
ANR	4554829	ExpressionStatement	"r_core_cmd0 ( core , str )"	136:3:2565:2588	4554729	10	True				
ANR	4554830	CallExpression	"r_core_cmd0 ( core , str )"		4554729	0					
ANR	4554831	Callee	r_core_cmd0		4554729	0					
ANR	4554832	Identifier	r_core_cmd0		4554729	0					
ANR	4554833	ArgumentList	core		4554729	1					
ANR	4554834	Argument	core		4554729	0					
ANR	4554835	Identifier	core		4554729	0					
ANR	4554836	Argument	str		4554729	1					
ANR	4554837	Identifier	str		4554729	0					
ANR	4554838	BreakStatement	break ;	137:3:2593:2598	4554729	11	True				
ANR	4554839	Label	case '{' :	138:2:2602:2610	4554729	12	True				
ANR	4554840	ExpressionStatement	"( void ) __core_patch_bracket ( core , str , & noff )"	139:3:2615:2660	4554729	13	True				
ANR	4554841	CastExpression	"( void ) __core_patch_bracket ( core , str , & noff )"		4554729	0					
ANR	4554842	CastTarget	void		4554729	0					
ANR	4554843	CallExpression	"__core_patch_bracket ( core , str , & noff )"		4554729	1					
ANR	4554844	Callee	__core_patch_bracket		4554729	0					
ANR	4554845	Identifier	__core_patch_bracket		4554729	0					
ANR	4554846	ArgumentList	core		4554729	1					
ANR	4554847	Argument	core		4554729	0					
ANR	4554848	Identifier	core		4554729	0					
ANR	4554849	Argument	str		4554729	1					
ANR	4554850	Identifier	str		4554729	0					
ANR	4554851	Argument	& noff		4554729	2					
ANR	4554852	UnaryOperationExpression	& noff		4554729	0					
ANR	4554853	UnaryOperator	&		4554729	0					
ANR	4554854	Identifier	noff		4554729	1					
ANR	4554855	BreakStatement	break ;	140:3:2665:2670	4554729	14	True				
ANR	4554856	Label	default :	141:2:2674:2681	4554729	15	True				
ANR	4554857	Identifier	default		4554729	0					
ANR	4554858	ExpressionStatement	"r_core_patch_line ( core , str )"	142:3:2686:2715	4554729	16	True				
ANR	4554859	CallExpression	"r_core_patch_line ( core , str )"		4554729	0					
ANR	4554860	Callee	r_core_patch_line		4554729	0					
ANR	4554861	Identifier	r_core_patch_line		4554729	0					
ANR	4554862	ArgumentList	core		4554729	1					
ANR	4554863	Argument	core		4554729	0					
ANR	4554864	Identifier	core		4554729	0					
ANR	4554865	Argument	str		4554729	1					
ANR	4554866	Identifier	str		4554729	0					
ANR	4554867	BreakStatement	break ;	143:3:2720:2725	4554729	17	True				
ANR	4554868	IfStatement	if ( ! * p )		4554729	2					
ANR	4554869	Condition	! * p	145:6:2737:2739	4554729	0	True				
ANR	4554870	UnaryOperationExpression	! * p		4554729	0					
ANR	4554871	UnaryOperator	!		4554729	0					
ANR	4554872	UnaryOperationExpression	* p		4554729	1					
ANR	4554873	UnaryOperator	*		4554729	0					
ANR	4554874	Identifier	p		4554729	1					
ANR	4554875	CompoundStatement		37:11:550:550	4554729	1					
ANR	4554876	BreakStatement	break ;	146:3:2747:2752	4554729	0	True				
ANR	4554877	ExpressionStatement	str = p	148:2:2760:2767	4554729	3	True				
ANR	4554878	AssignmentExpression	str = p		4554729	0		=			
ANR	4554879	Identifier	str		4554729	0					
ANR	4554880	Identifier	p		4554729	1					
ANR	4554881	ExpressionStatement	free ( p0 )	152:1:2832:2841	4554729	9	True				
ANR	4554882	CallExpression	free ( p0 )		4554729	0					
ANR	4554883	Callee	free		4554729	0					
ANR	4554884	Identifier	free		4554729	0					
ANR	4554885	ArgumentList	p0		4554729	1					
ANR	4554886	Argument	p0		4554729	0					
ANR	4554887	Identifier	p0		4554729	0					
ANR	4554888	ReturnStatement	return 0 ;	153:1:2844:2852	4554729	10	True				
ANR	4554889	PrimaryExpression	0		4554729	0					
ANR	4554890	ReturnType	R_API int		4554729	1					
ANR	4554891	Identifier	r_core_patch		4554729	2					
ANR	4554892	ParameterList	"RCore * core , const char * patch"		4554729	3					
ANR	4554893	Parameter	RCore * core	109:23:2159:2169	4554729	0	True				
ANR	4554894	ParameterType	RCore *		4554729	0					
ANR	4554895	Identifier	core		4554729	1					
ANR	4554896	Parameter	const char * patch	109:36:2172:2188	4554729	1	True				
ANR	4554897	ParameterType	const char *		4554729	0					
ANR	4554898	Identifier	patch		4554729	1					
ANR	4554899	CFGEntryNode	ENTRY		4554729		True				
ANR	4554900	CFGExitNode	EXIT		4554729		True				
ANR	4554901	Symbol	patch		4554729						
ANR	4554902	Symbol	p		4554729						
ANR	4554903	Symbol	p0		4554729						
ANR	4554904	Symbol	str		4554729						
ANR	4554905	Symbol	core		4554729						
ANR	4554906	Symbol	& noff		4554729						
ANR	4554907	Symbol	* p ++		4554729						
ANR	4554908	Symbol	* p		4554729						
ANR	4554909	Symbol	strdup		4554729						
ANR	4554910	Symbol	* str		4554729						
