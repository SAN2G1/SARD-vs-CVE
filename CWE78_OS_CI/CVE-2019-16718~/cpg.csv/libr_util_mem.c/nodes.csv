command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5159658	File	data/converged/CVE-2019-16718~_radare2/libr_util_mem.c								
ANR	5159659	Function	r_mem_count	13:0:290:384							
ANR	5159660	FunctionDef	r_mem_count (const ut8 * * addr)		5159659	0					
ANR	5159661	CompoundStatement		13:40:330:384	5159659	0					
ANR	5159662	IdentifierDeclStatement	int i = 0 ;	14:1:333:342	5159659	0	True				
ANR	5159663	IdentifierDecl	i = 0		5159659	0					
ANR	5159664	IdentifierDeclType	int		5159659	0					
ANR	5159665	Identifier	i		5159659	1					
ANR	5159666	AssignmentExpression	i = 0		5159659	2		=			
ANR	5159667	Identifier	i		5159659	0					
ANR	5159668	PrimaryExpression	0		5159659	1					
ANR	5159669	WhileStatement	while ( * addr ++ )		5159659	1					
ANR	5159670	Condition	* addr ++	15:8:352:358	5159659	0	True				
ANR	5159671	UnaryOperationExpression	* addr ++		5159659	0					
ANR	5159672	UnaryOperator	*		5159659	0					
ANR	5159673	PostIncDecOperationExpression	addr ++		5159659	1					
ANR	5159674	Identifier	addr		5159659	0					
ANR	5159675	IncDec	++		5159659	1					
ANR	5159676	CompoundStatement		3:17:30:30	5159659	1					
ANR	5159677	ExpressionStatement	i ++	16:2:365:368	5159659	0	True				
ANR	5159678	PostIncDecOperationExpression	i ++		5159659	0					
ANR	5159679	Identifier	i		5159659	0					
ANR	5159680	IncDec	++		5159659	1					
ANR	5159681	ReturnStatement	return i ;	18:1:374:382	5159659	2	True				
ANR	5159682	Identifier	i		5159659	0					
ANR	5159683	ReturnType	R_API int		5159659	1					
ANR	5159684	Identifier	r_mem_count		5159659	2					
ANR	5159685	ParameterList	const ut8 * * addr		5159659	3					
ANR	5159686	Parameter	const ut8 * * addr	13:22:312:327	5159659	0	True				
ANR	5159687	ParameterType	const ut8 * *		5159659	0					
ANR	5159688	Identifier	addr		5159659	1					
ANR	5159689	CFGEntryNode	ENTRY		5159659		True				
ANR	5159690	CFGExitNode	EXIT		5159659		True				
ANR	5159691	Symbol	i		5159659						
ANR	5159692	Symbol	addr		5159659						
ANR	5159693	Symbol	* addr ++		5159659						
ANR	5159694	Function	r_mem_eq	21:0:387:539							
ANR	5159695	FunctionDef	"r_mem_eq (ut8 * a , ut8 * b , int len)"		5159694	0					
ANR	5159696	CompoundStatement		21:44:431:539	5159694	0					
ANR	5159697	Statement	register	22:1:434:441	5159694	0	True				
ANR	5159698	IdentifierDeclStatement	int i ;	22:10:443:448	5159694	1	True				
ANR	5159699	IdentifierDecl	i		5159694	0					
ANR	5159700	IdentifierDeclType	int		5159694	0					
ANR	5159701	Identifier	i		5159694	1					
ANR	5159702	ForStatement	for ( i = 0 ; i < len ; i ++ )		5159694	2					
ANR	5159703	ForInit	i = 0 ;	23:6:456:461	5159694	0	True				
ANR	5159704	AssignmentExpression	i = 0		5159694	0		=			
ANR	5159705	Identifier	i		5159694	0					
ANR	5159706	PrimaryExpression	0		5159694	1					
ANR	5159707	Condition	i < len	23:13:463:469	5159694	1	True				
ANR	5159708	RelationalExpression	i < len		5159694	0		<			
ANR	5159709	Identifier	i		5159694	0					
ANR	5159710	Identifier	len		5159694	1					
ANR	5159711	PostIncDecOperationExpression	i ++	23:22:472:474	5159694	2	True				
ANR	5159712	Identifier	i		5159694	0					
ANR	5159713	IncDec	++		5159694	1					
ANR	5159714	CompoundStatement		3:27:45:45	5159694	3					
ANR	5159715	IfStatement	if ( a [ i ] != b [ i ] )		5159694	0					
ANR	5159716	Condition	a [ i ] != b [ i ]	24:6:485:496	5159694	0	True				
ANR	5159717	EqualityExpression	a [ i ] != b [ i ]		5159694	0		!=			
ANR	5159718	ArrayIndexing	a [ i ]		5159694	0					
ANR	5159719	Identifier	a		5159694	0					
ANR	5159720	Identifier	i		5159694	1					
ANR	5159721	ArrayIndexing	b [ i ]		5159694	1					
ANR	5159722	Identifier	b		5159694	0					
ANR	5159723	Identifier	i		5159694	1					
ANR	5159724	CompoundStatement		4:20:67:67	5159694	1					
ANR	5159725	ReturnStatement	return false ;	25:3:504:516	5159694	0	True				
ANR	5159726	Identifier	false		5159694	0					
ANR	5159727	ReturnStatement	return true ;	28:1:526:537	5159694	3	True				
ANR	5159728	Identifier	true		5159694	0					
ANR	5159729	ReturnType	R_API int		5159694	1					
ANR	5159730	Identifier	r_mem_eq		5159694	2					
ANR	5159731	ParameterList	"ut8 * a , ut8 * b , int len"		5159694	3					
ANR	5159732	Parameter	ut8 * a	21:19:406:411	5159694	0	True				
ANR	5159733	ParameterType	ut8 *		5159694	0					
ANR	5159734	Identifier	a		5159694	1					
ANR	5159735	Parameter	ut8 * b	21:27:414:419	5159694	1	True				
ANR	5159736	ParameterType	ut8 *		5159694	0					
ANR	5159737	Identifier	b		5159694	1					
ANR	5159738	Parameter	int len	21:35:422:428	5159694	2	True				
ANR	5159739	ParameterType	int		5159694	0					
ANR	5159740	Identifier	len		5159694	1					
ANR	5159741	CFGEntryNode	ENTRY		5159694		True				
ANR	5159742	CFGExitNode	EXIT		5159694		True				
ANR	5159743	Symbol	a		5159694						
ANR	5159744	Symbol	b		5159694						
ANR	5159745	Symbol	* i		5159694						
ANR	5159746	Symbol	len		5159694						
ANR	5159747	Symbol	false		5159694						
ANR	5159748	Symbol	true		5159694						
ANR	5159749	Symbol	i		5159694						
ANR	5159750	Symbol	* a		5159694						
ANR	5159751	Symbol	* b		5159694						
ANR	5159752	Function	r_mem_copyloop	31:0:542:732							
ANR	5159753	FunctionDef	"r_mem_copyloop (ut8 * dest , const ut8 * orig , int dsize , int osize)"		5159752	0					
ANR	5159754	CompoundStatement		31:76:618:732	5159752	0					
ANR	5159755	IdentifierDeclStatement	"int i = 0 , j ;"	32:1:621:633	5159752	0	True				
ANR	5159756	IdentifierDecl	i = 0		5159752	0					
ANR	5159757	IdentifierDeclType	int		5159752	0					
ANR	5159758	Identifier	i		5159752	1					
ANR	5159759	AssignmentExpression	i = 0		5159752	2		=			
ANR	5159760	Identifier	i		5159752	0					
ANR	5159761	PrimaryExpression	0		5159752	1					
ANR	5159762	IdentifierDecl	j		5159752	1					
ANR	5159763	IdentifierDeclType	int		5159752	0					
ANR	5159764	Identifier	j		5159752	1					
ANR	5159765	WhileStatement	while ( i < dsize )		5159752	1					
ANR	5159766	Condition	i < dsize	33:8:643:651	5159752	0	True				
ANR	5159767	RelationalExpression	i < dsize		5159752	0		<			
ANR	5159768	Identifier	i		5159752	0					
ANR	5159769	Identifier	dsize		5159752	1					
ANR	5159770	CompoundStatement		3:19:35:35	5159752	1					
ANR	5159771	ForStatement	for ( j = 0 ; j < osize && i < dsize ; j ++ )		5159752	0					
ANR	5159772	ForInit	j = 0 ;	34:7:663:668	5159752	0	True				
ANR	5159773	AssignmentExpression	j = 0		5159752	0		=			
ANR	5159774	Identifier	j		5159752	0					
ANR	5159775	PrimaryExpression	0		5159752	1					
ANR	5159776	Condition	j < osize && i < dsize	34:14:670:691	5159752	1	True				
ANR	5159777	AndExpression	j < osize && i < dsize		5159752	0		&&			
ANR	5159778	RelationalExpression	j < osize		5159752	0		<			
ANR	5159779	Identifier	j		5159752	0					
ANR	5159780	Identifier	osize		5159752	1					
ANR	5159781	RelationalExpression	i < dsize		5159752	1		<			
ANR	5159782	Identifier	i		5159752	0					
ANR	5159783	Identifier	dsize		5159752	1					
ANR	5159784	PostIncDecOperationExpression	j ++	34:38:694:696	5159752	2	True				
ANR	5159785	Identifier	j		5159752	0					
ANR	5159786	IncDec	++		5159752	1					
ANR	5159787	CompoundStatement		4:43:80:80	5159752	3					
ANR	5159788	ExpressionStatement	dest [ i ++ ] = orig [ j ]	35:3:704:723	5159752	0	True				
ANR	5159789	AssignmentExpression	dest [ i ++ ] = orig [ j ]		5159752	0		=			
ANR	5159790	ArrayIndexing	dest [ i ++ ]		5159752	0					
ANR	5159791	Identifier	dest		5159752	0					
ANR	5159792	PostIncDecOperationExpression	i ++		5159752	1					
ANR	5159793	Identifier	i		5159752	0					
ANR	5159794	IncDec	++		5159752	1					
ANR	5159795	ArrayIndexing	orig [ j ]		5159752	1					
ANR	5159796	Identifier	orig		5159752	0					
ANR	5159797	Identifier	j		5159752	1					
ANR	5159798	ReturnType	R_API void		5159752	1					
ANR	5159799	Identifier	r_mem_copyloop		5159752	2					
ANR	5159800	ParameterList	"ut8 * dest , const ut8 * orig , int dsize , int osize"		5159752	3					
ANR	5159801	Parameter	ut8 * dest	31:26:568:576	5159752	0	True				
ANR	5159802	ParameterType	ut8 *		5159752	0					
ANR	5159803	Identifier	dest		5159752	1					
ANR	5159804	Parameter	const ut8 * orig	31:37:579:593	5159752	1	True				
ANR	5159805	ParameterType	const ut8 *		5159752	0					
ANR	5159806	Identifier	orig		5159752	1					
ANR	5159807	Parameter	int dsize	31:54:596:604	5159752	2	True				
ANR	5159808	ParameterType	int		5159752	0					
ANR	5159809	Identifier	dsize		5159752	1					
ANR	5159810	Parameter	int osize	31:65:607:615	5159752	3	True				
ANR	5159811	ParameterType	int		5159752	0					
ANR	5159812	Identifier	osize		5159752	1					
ANR	5159813	CFGEntryNode	ENTRY		5159752		True				
ANR	5159814	CFGExitNode	EXIT		5159752		True				
ANR	5159815	Symbol	dsize		5159752						
ANR	5159816	Symbol	osize		5159752						
ANR	5159817	Symbol	* j		5159752						
ANR	5159818	Symbol	orig		5159752						
ANR	5159819	Symbol	* orig		5159752						
ANR	5159820	Symbol	* dest		5159752						
ANR	5159821	Symbol	i		5159752						
ANR	5159822	Symbol	j		5159752						
ANR	5159823	Symbol	dest		5159752						
ANR	5159824	Function	r_mem_cmp_mask	40:0:735:1161							
ANR	5159825	FunctionDef	"r_mem_cmp_mask (const ut8 * dest , const ut8 * orig , const ut8 * mask , int len)"		5159824	0					
ANR	5159826	CompoundStatement		40:85:820:1161	5159824	0					
ANR	5159827	IdentifierDeclStatement	"int i , ret = - 1 ;"	41:1:823:838	5159824	0	True				
ANR	5159828	IdentifierDecl	i		5159824	0					
ANR	5159829	IdentifierDeclType	int		5159824	0					
ANR	5159830	Identifier	i		5159824	1					
ANR	5159831	IdentifierDecl	ret = - 1		5159824	1					
ANR	5159832	IdentifierDeclType	int		5159824	0					
ANR	5159833	Identifier	ret		5159824	1					
ANR	5159834	AssignmentExpression	ret = - 1		5159824	2		=			
ANR	5159835	Identifier	ret		5159824	0					
ANR	5159836	UnaryOperationExpression	- 1		5159824	1					
ANR	5159837	UnaryOperator	-		5159824	0					
ANR	5159838	PrimaryExpression	1		5159824	1					
ANR	5159839	IdentifierDeclStatement	"ut8 * mdest , * morig ;"	42:1:841:859	5159824	1	True				
ANR	5159840	IdentifierDecl	* mdest		5159824	0					
ANR	5159841	IdentifierDeclType	ut8 *		5159824	0					
ANR	5159842	Identifier	mdest		5159824	1					
ANR	5159843	IdentifierDecl	* morig		5159824	1					
ANR	5159844	IdentifierDeclType	ut8 *		5159824	0					
ANR	5159845	Identifier	morig		5159824	1					
ANR	5159846	ExpressionStatement	mdest = malloc ( len )	43:1:862:882	5159824	2	True				
ANR	5159847	AssignmentExpression	mdest = malloc ( len )		5159824	0		=			
ANR	5159848	Identifier	mdest		5159824	0					
ANR	5159849	CallExpression	malloc ( len )		5159824	1					
ANR	5159850	Callee	malloc		5159824	0					
ANR	5159851	Identifier	malloc		5159824	0					
ANR	5159852	ArgumentList	len		5159824	1					
ANR	5159853	Argument	len		5159824	0					
ANR	5159854	Identifier	len		5159824	0					
ANR	5159855	IfStatement	if ( ! mdest )		5159824	3					
ANR	5159856	Condition	! mdest	44:5:889:894	5159824	0	True				
ANR	5159857	UnaryOperationExpression	! mdest		5159824	0					
ANR	5159858	UnaryOperator	!		5159824	0					
ANR	5159859	Identifier	mdest		5159824	1					
ANR	5159860	CompoundStatement		5:13:76:76	5159824	1					
ANR	5159861	ReturnStatement	return ret ;	45:2:901:911	5159824	0	True				
ANR	5159862	Identifier	ret		5159824	0					
ANR	5159863	ExpressionStatement	morig = malloc ( len )	47:1:917:937	5159824	4	True				
ANR	5159864	AssignmentExpression	morig = malloc ( len )		5159824	0		=			
ANR	5159865	Identifier	morig		5159824	0					
ANR	5159866	CallExpression	malloc ( len )		5159824	1					
ANR	5159867	Callee	malloc		5159824	0					
ANR	5159868	Identifier	malloc		5159824	0					
ANR	5159869	ArgumentList	len		5159824	1					
ANR	5159870	Argument	len		5159824	0					
ANR	5159871	Identifier	len		5159824	0					
ANR	5159872	IfStatement	if ( ! morig )		5159824	5					
ANR	5159873	Condition	! morig	48:5:944:949	5159824	0	True				
ANR	5159874	UnaryOperationExpression	! morig		5159824	0					
ANR	5159875	UnaryOperator	!		5159824	0					
ANR	5159876	Identifier	morig		5159824	1					
ANR	5159877	CompoundStatement		9:13:131:131	5159824	1					
ANR	5159878	ExpressionStatement	free ( mdest )	49:2:956:968	5159824	0	True				
ANR	5159879	CallExpression	free ( mdest )		5159824	0					
ANR	5159880	Callee	free		5159824	0					
ANR	5159881	Identifier	free		5159824	0					
ANR	5159882	ArgumentList	mdest		5159824	1					
ANR	5159883	Argument	mdest		5159824	0					
ANR	5159884	Identifier	mdest		5159824	0					
ANR	5159885	ReturnStatement	return ret ;	50:2:972:982	5159824	1	True				
ANR	5159886	Identifier	ret		5159824	0					
ANR	5159887	ForStatement	for ( i = 0 ; i < len ; i ++ )		5159824	6					
ANR	5159888	ForInit	i = 0 ;	52:6:993:998	5159824	0	True				
ANR	5159889	AssignmentExpression	i = 0		5159824	0		=			
ANR	5159890	Identifier	i		5159824	0					
ANR	5159891	PrimaryExpression	0		5159824	1					
ANR	5159892	Condition	i < len	52:13:1000:1006	5159824	1	True				
ANR	5159893	RelationalExpression	i < len		5159824	0		<			
ANR	5159894	Identifier	i		5159824	0					
ANR	5159895	Identifier	len		5159824	1					
ANR	5159896	PostIncDecOperationExpression	i ++	52:22:1009:1011	5159824	2	True				
ANR	5159897	Identifier	i		5159824	0					
ANR	5159898	IncDec	++		5159824	1					
ANR	5159899	CompoundStatement		13:27:193:193	5159824	3					
ANR	5159900	ExpressionStatement	mdest [ i ] = dest [ i ] & mask [ i ]	53:2:1018:1046	5159824	0	True				
ANR	5159901	AssignmentExpression	mdest [ i ] = dest [ i ] & mask [ i ]		5159824	0		=			
ANR	5159902	ArrayIndexing	mdest [ i ]		5159824	0					
ANR	5159903	Identifier	mdest		5159824	0					
ANR	5159904	Identifier	i		5159824	1					
ANR	5159905	BitAndExpression	dest [ i ] & mask [ i ]		5159824	1		&			
ANR	5159906	ArrayIndexing	dest [ i ]		5159824	0					
ANR	5159907	Identifier	dest		5159824	0					
ANR	5159908	Identifier	i		5159824	1					
ANR	5159909	ArrayIndexing	mask [ i ]		5159824	1					
ANR	5159910	Identifier	mask		5159824	0					
ANR	5159911	Identifier	i		5159824	1					
ANR	5159912	ExpressionStatement	morig [ i ] = orig [ i ] & mask [ i ]	54:2:1050:1078	5159824	1	True				
ANR	5159913	AssignmentExpression	morig [ i ] = orig [ i ] & mask [ i ]		5159824	0		=			
ANR	5159914	ArrayIndexing	morig [ i ]		5159824	0					
ANR	5159915	Identifier	morig		5159824	0					
ANR	5159916	Identifier	i		5159824	1					
ANR	5159917	BitAndExpression	orig [ i ] & mask [ i ]		5159824	1		&			
ANR	5159918	ArrayIndexing	orig [ i ]		5159824	0					
ANR	5159919	Identifier	orig		5159824	0					
ANR	5159920	Identifier	i		5159824	1					
ANR	5159921	ArrayIndexing	mask [ i ]		5159824	1					
ANR	5159922	Identifier	mask		5159824	0					
ANR	5159923	Identifier	i		5159824	1					
ANR	5159924	ExpressionStatement	"ret = memcmp ( mdest , morig , len )"	56:1:1084:1116	5159824	7	True				
ANR	5159925	AssignmentExpression	"ret = memcmp ( mdest , morig , len )"		5159824	0		=			
ANR	5159926	Identifier	ret		5159824	0					
ANR	5159927	CallExpression	"memcmp ( mdest , morig , len )"		5159824	1					
ANR	5159928	Callee	memcmp		5159824	0					
ANR	5159929	Identifier	memcmp		5159824	0					
ANR	5159930	ArgumentList	mdest		5159824	1					
ANR	5159931	Argument	mdest		5159824	0					
ANR	5159932	Identifier	mdest		5159824	0					
ANR	5159933	Argument	morig		5159824	1					
ANR	5159934	Identifier	morig		5159824	0					
ANR	5159935	Argument	len		5159824	2					
ANR	5159936	Identifier	len		5159824	0					
ANR	5159937	ExpressionStatement	free ( mdest )	57:1:1119:1131	5159824	8	True				
ANR	5159938	CallExpression	free ( mdest )		5159824	0					
ANR	5159939	Callee	free		5159824	0					
ANR	5159940	Identifier	free		5159824	0					
ANR	5159941	ArgumentList	mdest		5159824	1					
ANR	5159942	Argument	mdest		5159824	0					
ANR	5159943	Identifier	mdest		5159824	0					
ANR	5159944	ExpressionStatement	free ( morig )	58:1:1134:1146	5159824	9	True				
ANR	5159945	CallExpression	free ( morig )		5159824	0					
ANR	5159946	Callee	free		5159824	0					
ANR	5159947	Identifier	free		5159824	0					
ANR	5159948	ArgumentList	morig		5159824	1					
ANR	5159949	Argument	morig		5159824	0					
ANR	5159950	Identifier	morig		5159824	0					
ANR	5159951	ReturnStatement	return ret ;	59:1:1149:1159	5159824	10	True				
ANR	5159952	Identifier	ret		5159824	0					
ANR	5159953	ReturnType	R_API int		5159824	1					
ANR	5159954	Identifier	r_mem_cmp_mask		5159824	2					
ANR	5159955	ParameterList	"const ut8 * dest , const ut8 * orig , const ut8 * mask , int len"		5159824	3					
ANR	5159956	Parameter	const ut8 * dest	40:25:760:774	5159824	0	True				
ANR	5159957	ParameterType	const ut8 *		5159824	0					
ANR	5159958	Identifier	dest		5159824	1					
ANR	5159959	Parameter	const ut8 * orig	40:42:777:791	5159824	1	True				
ANR	5159960	ParameterType	const ut8 *		5159824	0					
ANR	5159961	Identifier	orig		5159824	1					
ANR	5159962	Parameter	const ut8 * mask	40:59:794:808	5159824	2	True				
ANR	5159963	ParameterType	const ut8 *		5159824	0					
ANR	5159964	Identifier	mask		5159824	1					
ANR	5159965	Parameter	int len	40:76:811:817	5159824	3	True				
ANR	5159966	ParameterType	int		5159824	0					
ANR	5159967	Identifier	len		5159824	1					
ANR	5159968	CFGEntryNode	ENTRY		5159824		True				
ANR	5159969	CFGExitNode	EXIT		5159824		True				
ANR	5159970	Symbol	ret		5159824						
ANR	5159971	Symbol	mdest		5159824						
ANR	5159972	Symbol	malloc		5159824						
ANR	5159973	Symbol	* mask		5159824						
ANR	5159974	Symbol	* dest		5159824						
ANR	5159975	Symbol	i		5159824						
ANR	5159976	Symbol	dest		5159824						
ANR	5159977	Symbol	* morig		5159824						
ANR	5159978	Symbol	* i		5159824						
ANR	5159979	Symbol	memcmp		5159824						
ANR	5159980	Symbol	len		5159824						
ANR	5159981	Symbol	orig		5159824						
ANR	5159982	Symbol	* orig		5159824						
ANR	5159983	Symbol	* mdest		5159824						
ANR	5159984	Symbol	morig		5159824						
ANR	5159985	Symbol	mask		5159824						
ANR	5159986	Function	r_mem_copybits	62:0:1164:1799							
ANR	5159987	FunctionDef	"r_mem_copybits (ut8 * dst , const ut8 * src , int bits)"		5159986	0					
ANR	5159988	CompoundStatement		62:62:1226:1799	5159986	0					
ANR	5159989	IdentifierDeclStatement	"ut8 srcmask , dstmask ;"	63:1:1229:1249	5159986	0	True				
ANR	5159990	IdentifierDecl	srcmask		5159986	0					
ANR	5159991	IdentifierDeclType	ut8		5159986	0					
ANR	5159992	Identifier	srcmask		5159986	1					
ANR	5159993	IdentifierDecl	dstmask		5159986	1					
ANR	5159994	IdentifierDeclType	ut8		5159986	0					
ANR	5159995	Identifier	dstmask		5159986	1					
ANR	5159996	IdentifierDeclStatement	int bytes = ( int ) ( bits / 8 ) ;	64:1:1252:1280	5159986	1	True				
ANR	5159997	IdentifierDecl	bytes = ( int ) ( bits / 8 )		5159986	0					
ANR	5159998	IdentifierDeclType	int		5159986	0					
ANR	5159999	Identifier	bytes		5159986	1					
ANR	5160000	AssignmentExpression	bytes = ( int ) ( bits / 8 )		5159986	2		=			
ANR	5160001	Identifier	bytes		5159986	0					
ANR	5160002	CastExpression	( int ) ( bits / 8 )		5159986	1					
ANR	5160003	CastTarget	int		5159986	0					
ANR	5160004	MultiplicativeExpression	bits / 8		5159986	1		/			
ANR	5160005	Identifier	bits		5159986	0					
ANR	5160006	PrimaryExpression	8		5159986	1					
ANR	5160007	ExpressionStatement	bits = bits % 8	65:1:1283:1298	5159986	2	True				
ANR	5160008	AssignmentExpression	bits = bits % 8		5159986	0		=			
ANR	5160009	Identifier	bits		5159986	0					
ANR	5160010	MultiplicativeExpression	bits % 8		5159986	1		%			
ANR	5160011	Identifier	bits		5159986	0					
ANR	5160012	PrimaryExpression	8		5159986	1					
ANR	5160013	ExpressionStatement	"memcpy ( dst , src , bytes )"	66:1:1301:1325	5159986	3	True				
ANR	5160014	CallExpression	"memcpy ( dst , src , bytes )"		5159986	0					
ANR	5160015	Callee	memcpy		5159986	0					
ANR	5160016	Identifier	memcpy		5159986	0					
ANR	5160017	ArgumentList	dst		5159986	1					
ANR	5160018	Argument	dst		5159986	0					
ANR	5160019	Identifier	dst		5159986	0					
ANR	5160020	Argument	src		5159986	1					
ANR	5160021	Identifier	src		5159986	0					
ANR	5160022	Argument	bytes		5159986	2					
ANR	5160023	Identifier	bytes		5159986	0					
ANR	5160024	IfStatement	if ( bits )		5159986	4					
ANR	5160025	Condition	bits	67:5:1332:1335	5159986	0	True				
ANR	5160026	Identifier	bits		5159986	0					
ANR	5160027	CompoundStatement		6:11:111:111	5159986	1					
ANR	5160028	ExpressionStatement	srcmask = dstmask = 0	68:2:1342:1363	5159986	0	True				
ANR	5160029	AssignmentExpression	srcmask = dstmask = 0		5159986	0		=			
ANR	5160030	Identifier	srcmask		5159986	0					
ANR	5160031	AssignmentExpression	dstmask = 0		5159986	1		=			
ANR	5160032	Identifier	dstmask		5159986	0					
ANR	5160033	PrimaryExpression	0		5159986	1					
ANR	5160034	SwitchStatement	switch ( bits )		5159986	1					
ANR	5160035	Condition	bits	69:10:1375:1378	5159986	0	True				
ANR	5160036	Identifier	bits		5159986	0					
ANR	5160037	CompoundStatement		8:16:154:154	5159986	1					
ANR	5160038	Label	case 1 :	70:2:1385:1391	5159986	0	True				
ANR	5160039	ExpressionStatement	srcmask = 0x80	70:10:1393:1407	5159986	1	True				
ANR	5160040	AssignmentExpression	srcmask = 0x80		5159986	0		=			
ANR	5160041	Identifier	srcmask		5159986	0					
ANR	5160042	PrimaryExpression	0x80		5159986	1					
ANR	5160043	ExpressionStatement	dstmask = 0x7f	70:26:1409:1423	5159986	2	True				
ANR	5160044	AssignmentExpression	dstmask = 0x7f		5159986	0		=			
ANR	5160045	Identifier	dstmask		5159986	0					
ANR	5160046	PrimaryExpression	0x7f		5159986	1					
ANR	5160047	BreakStatement	break ;	70:42:1425:1430	5159986	3	True				
ANR	5160048	Label	case 2 :	71:2:1434:1440	5159986	4	True				
ANR	5160049	ExpressionStatement	srcmask = 0xc0	71:10:1442:1456	5159986	5	True				
ANR	5160050	AssignmentExpression	srcmask = 0xc0		5159986	0		=			
ANR	5160051	Identifier	srcmask		5159986	0					
ANR	5160052	PrimaryExpression	0xc0		5159986	1					
ANR	5160053	ExpressionStatement	dstmask = 0x3f	71:26:1458:1472	5159986	6	True				
ANR	5160054	AssignmentExpression	dstmask = 0x3f		5159986	0		=			
ANR	5160055	Identifier	dstmask		5159986	0					
ANR	5160056	PrimaryExpression	0x3f		5159986	1					
ANR	5160057	BreakStatement	break ;	71:42:1474:1479	5159986	7	True				
ANR	5160058	Label	case 3 :	72:2:1483:1489	5159986	8	True				
ANR	5160059	ExpressionStatement	srcmask = 0xe0	72:10:1491:1505	5159986	9	True				
ANR	5160060	AssignmentExpression	srcmask = 0xe0		5159986	0		=			
ANR	5160061	Identifier	srcmask		5159986	0					
ANR	5160062	PrimaryExpression	0xe0		5159986	1					
ANR	5160063	ExpressionStatement	dstmask = 0x1f	72:26:1507:1521	5159986	10	True				
ANR	5160064	AssignmentExpression	dstmask = 0x1f		5159986	0		=			
ANR	5160065	Identifier	dstmask		5159986	0					
ANR	5160066	PrimaryExpression	0x1f		5159986	1					
ANR	5160067	BreakStatement	break ;	72:42:1523:1528	5159986	11	True				
ANR	5160068	Label	case 4 :	73:2:1532:1538	5159986	12	True				
ANR	5160069	ExpressionStatement	srcmask = 0xf0	73:10:1540:1554	5159986	13	True				
ANR	5160070	AssignmentExpression	srcmask = 0xf0		5159986	0		=			
ANR	5160071	Identifier	srcmask		5159986	0					
ANR	5160072	PrimaryExpression	0xf0		5159986	1					
ANR	5160073	ExpressionStatement	dstmask = 0x0f	73:26:1556:1570	5159986	14	True				
ANR	5160074	AssignmentExpression	dstmask = 0x0f		5159986	0		=			
ANR	5160075	Identifier	dstmask		5159986	0					
ANR	5160076	PrimaryExpression	0x0f		5159986	1					
ANR	5160077	BreakStatement	break ;	73:42:1572:1577	5159986	15	True				
ANR	5160078	Label	case 5 :	74:2:1581:1587	5159986	16	True				
ANR	5160079	ExpressionStatement	srcmask = 0xf8	74:10:1589:1603	5159986	17	True				
ANR	5160080	AssignmentExpression	srcmask = 0xf8		5159986	0		=			
ANR	5160081	Identifier	srcmask		5159986	0					
ANR	5160082	PrimaryExpression	0xf8		5159986	1					
ANR	5160083	ExpressionStatement	dstmask = 0x07	74:26:1605:1619	5159986	18	True				
ANR	5160084	AssignmentExpression	dstmask = 0x07		5159986	0		=			
ANR	5160085	Identifier	dstmask		5159986	0					
ANR	5160086	PrimaryExpression	0x07		5159986	1					
ANR	5160087	BreakStatement	break ;	74:42:1621:1626	5159986	19	True				
ANR	5160088	Label	case 6 :	75:2:1630:1636	5159986	20	True				
ANR	5160089	ExpressionStatement	srcmask = 0xfc	75:10:1638:1652	5159986	21	True				
ANR	5160090	AssignmentExpression	srcmask = 0xfc		5159986	0		=			
ANR	5160091	Identifier	srcmask		5159986	0					
ANR	5160092	PrimaryExpression	0xfc		5159986	1					
ANR	5160093	ExpressionStatement	dstmask = 0x03	75:26:1654:1668	5159986	22	True				
ANR	5160094	AssignmentExpression	dstmask = 0x03		5159986	0		=			
ANR	5160095	Identifier	dstmask		5159986	0					
ANR	5160096	PrimaryExpression	0x03		5159986	1					
ANR	5160097	BreakStatement	break ;	75:42:1670:1675	5159986	23	True				
ANR	5160098	Label	case 7 :	76:2:1679:1685	5159986	24	True				
ANR	5160099	ExpressionStatement	srcmask = 0xfe	76:10:1687:1701	5159986	25	True				
ANR	5160100	AssignmentExpression	srcmask = 0xfe		5159986	0		=			
ANR	5160101	Identifier	srcmask		5159986	0					
ANR	5160102	PrimaryExpression	0xfe		5159986	1					
ANR	5160103	ExpressionStatement	dstmask = 0x01	76:26:1703:1717	5159986	26	True				
ANR	5160104	AssignmentExpression	dstmask = 0x01		5159986	0		=			
ANR	5160105	Identifier	dstmask		5159986	0					
ANR	5160106	PrimaryExpression	0x01		5159986	1					
ANR	5160107	BreakStatement	break ;	76:42:1719:1724	5159986	27	True				
ANR	5160108	ExpressionStatement	dst [ bytes ] = ( ( dst [ bytes ] & dstmask ) | ( src [ bytes ] & srcmask ) )	78:2:1732:1794	5159986	2	True				
ANR	5160109	AssignmentExpression	dst [ bytes ] = ( ( dst [ bytes ] & dstmask ) | ( src [ bytes ] & srcmask ) )		5159986	0		=			
ANR	5160110	ArrayIndexing	dst [ bytes ]		5159986	0					
ANR	5160111	Identifier	dst		5159986	0					
ANR	5160112	Identifier	bytes		5159986	1					
ANR	5160113	InclusiveOrExpression	( dst [ bytes ] & dstmask ) | ( src [ bytes ] & srcmask )		5159986	1		|			
ANR	5160114	BitAndExpression	dst [ bytes ] & dstmask		5159986	0		&			
ANR	5160115	ArrayIndexing	dst [ bytes ]		5159986	0					
ANR	5160116	Identifier	dst		5159986	0					
ANR	5160117	Identifier	bytes		5159986	1					
ANR	5160118	Identifier	dstmask		5159986	1					
ANR	5160119	BitAndExpression	src [ bytes ] & srcmask		5159986	1		&			
ANR	5160120	ArrayIndexing	src [ bytes ]		5159986	0					
ANR	5160121	Identifier	src		5159986	0					
ANR	5160122	Identifier	bytes		5159986	1					
ANR	5160123	Identifier	srcmask		5159986	1					
ANR	5160124	ReturnType	R_API void		5159986	1					
ANR	5160125	Identifier	r_mem_copybits		5159986	2					
ANR	5160126	ParameterList	"ut8 * dst , const ut8 * src , int bits"		5159986	3					
ANR	5160127	Parameter	ut8 * dst	62:26:1190:1197	5159986	0	True				
ANR	5160128	ParameterType	ut8 *		5159986	0					
ANR	5160129	Identifier	dst		5159986	1					
ANR	5160130	Parameter	const ut8 * src	62:36:1200:1213	5159986	1	True				
ANR	5160131	ParameterType	const ut8 *		5159986	0					
ANR	5160132	Identifier	src		5159986	1					
ANR	5160133	Parameter	int bits	62:52:1216:1223	5159986	2	True				
ANR	5160134	ParameterType	int		5159986	0					
ANR	5160135	Identifier	bits		5159986	1					
ANR	5160136	CFGEntryNode	ENTRY		5159986		True				
ANR	5160137	CFGExitNode	EXIT		5159986		True				
ANR	5160138	Symbol	* dst		5159986						
ANR	5160139	Symbol	dstmask		5159986						
ANR	5160140	Symbol	dst		5159986						
ANR	5160141	Symbol	src		5159986						
ANR	5160142	Symbol	bytes		5159986						
ANR	5160143	Symbol	bits		5159986						
ANR	5160144	Symbol	srcmask		5159986						
ANR	5160145	Symbol	* bytes		5159986						
ANR	5160146	Symbol	* src		5159986						
ANR	5160147	Function	readbit	82:0:1802:2034							
ANR	5160148	FunctionDef	"readbit (const ut8 * src , int bitoffset)"		5160147	0					
ANR	5160149	CompoundStatement		82:51:1853:2034	5160147	0					
ANR	5160150	IdentifierDeclStatement	const int wholeBytes = bitoffset / 8 ;	83:1:1856:1892	5160147	0	True				
ANR	5160151	IdentifierDecl	wholeBytes = bitoffset / 8		5160147	0					
ANR	5160152	IdentifierDeclType	const int		5160147	0					
ANR	5160153	Identifier	wholeBytes		5160147	1					
ANR	5160154	AssignmentExpression	wholeBytes = bitoffset / 8		5160147	2		=			
ANR	5160155	Identifier	wholeBytes		5160147	0					
ANR	5160156	MultiplicativeExpression	bitoffset / 8		5160147	1		/			
ANR	5160157	Identifier	bitoffset		5160147	0					
ANR	5160158	PrimaryExpression	8		5160147	1					
ANR	5160159	IdentifierDeclStatement	const int remainingBits = bitoffset % 8 ;	84:1:1895:1934	5160147	1	True				
ANR	5160160	IdentifierDecl	remainingBits = bitoffset % 8		5160147	0					
ANR	5160161	IdentifierDeclType	const int		5160147	0					
ANR	5160162	Identifier	remainingBits		5160147	1					
ANR	5160163	AssignmentExpression	remainingBits = bitoffset % 8		5160147	2		=			
ANR	5160164	Identifier	remainingBits		5160147	0					
ANR	5160165	MultiplicativeExpression	bitoffset % 8		5160147	1		%			
ANR	5160166	Identifier	bitoffset		5160147	0					
ANR	5160167	PrimaryExpression	8		5160147	1					
ANR	5160168	ReturnStatement	return ( src [ wholeBytes ] & 1 << remainingBits ) ;	86:1:1988:2032	5160147	2	True				
ANR	5160169	BitAndExpression	src [ wholeBytes ] & 1 << remainingBits		5160147	0		&			
ANR	5160170	ArrayIndexing	src [ wholeBytes ]		5160147	0					
ANR	5160171	Identifier	src		5160147	0					
ANR	5160172	Identifier	wholeBytes		5160147	1					
ANR	5160173	ShiftExpression	1 << remainingBits		5160147	1		<<			
ANR	5160174	PrimaryExpression	1		5160147	0					
ANR	5160175	Identifier	remainingBits		5160147	1					
ANR	5160176	ReturnType	static char		5160147	1					
ANR	5160177	Identifier	readbit		5160147	2					
ANR	5160178	ParameterList	"const ut8 * src , int bitoffset"		5160147	3					
ANR	5160179	Parameter	const ut8 * src	82:20:1822:1835	5160147	0	True				
ANR	5160180	ParameterType	const ut8 *		5160147	0					
ANR	5160181	Identifier	src		5160147	1					
ANR	5160182	Parameter	int bitoffset	82:36:1838:1850	5160147	1	True				
ANR	5160183	ParameterType	int		5160147	0					
ANR	5160184	Identifier	bitoffset		5160147	1					
ANR	5160185	CFGEntryNode	ENTRY		5160147		True				
ANR	5160186	CFGExitNode	EXIT		5160147		True				
ANR	5160187	Symbol	src		5160147						
ANR	5160188	Symbol	bitoffset		5160147						
ANR	5160189	Symbol	remainingBits		5160147						
ANR	5160190	Symbol	* wholeBytes		5160147						
ANR	5160191	Symbol	wholeBytes		5160147						
ANR	5160192	Symbol	* src		5160147						
ANR	5160193	Function	writebit	89:0:2037:2320							
ANR	5160194	FunctionDef	"writebit (ut8 * dst , int i , bool c)"		5160193	0					
ANR	5160195	CompoundStatement		89:47:2084:2320	5160193	0					
ANR	5160196	IdentifierDeclStatement	int byte = i / 8 ;	90:1:2087:2103	5160193	0	True				
ANR	5160197	IdentifierDecl	byte = i / 8		5160193	0					
ANR	5160198	IdentifierDeclType	int		5160193	0					
ANR	5160199	Identifier	byte		5160193	1					
ANR	5160200	AssignmentExpression	byte = i / 8		5160193	2		=			
ANR	5160201	Identifier	byte		5160193	0					
ANR	5160202	MultiplicativeExpression	i / 8		5160193	1		/			
ANR	5160203	Identifier	i		5160193	0					
ANR	5160204	PrimaryExpression	8		5160193	1					
ANR	5160205	IdentifierDeclStatement	int bit = ( i % 8 ) ;	91:1:2106:2123	5160193	1	True				
ANR	5160206	IdentifierDecl	bit = ( i % 8 )		5160193	0					
ANR	5160207	IdentifierDeclType	int		5160193	0					
ANR	5160208	Identifier	bit		5160193	1					
ANR	5160209	AssignmentExpression	bit = ( i % 8 )		5160193	2		=			
ANR	5160210	Identifier	bit		5160193	0					
ANR	5160211	MultiplicativeExpression	i % 8		5160193	1		%			
ANR	5160212	Identifier	i		5160193	0					
ANR	5160213	PrimaryExpression	8		5160193	1					
ANR	5160214	ExpressionStatement	dst += byte	93:0:2174:2185	5160193	2	True				
ANR	5160215	AssignmentExpression	dst += byte		5160193	0		+=			
ANR	5160216	Identifier	dst		5160193	0					
ANR	5160217	Identifier	byte		5160193	1					
ANR	5160218	IfStatement	if ( c )		5160193	3					
ANR	5160219	Condition	c	94:5:2192:2192	5160193	0	True				
ANR	5160220	Identifier	c		5160193	0					
ANR	5160221	CompoundStatement		6:8:110:110	5160193	1					
ANR	5160222	ExpressionStatement	"R_BIT_SET ( dst , bit )"	96:2:2228:2249	5160193	0	True				
ANR	5160223	CallExpression	"R_BIT_SET ( dst , bit )"		5160193	0					
ANR	5160224	Callee	R_BIT_SET		5160193	0					
ANR	5160225	Identifier	R_BIT_SET		5160193	0					
ANR	5160226	ArgumentList	dst		5160193	1					
ANR	5160227	Argument	dst		5160193	0					
ANR	5160228	Identifier	dst		5160193	0					
ANR	5160229	Argument	bit		5160193	1					
ANR	5160230	Identifier	bit		5160193	0					
ANR	5160231	ElseStatement	else		5160193	0					
ANR	5160232	CompoundStatement		9:8:174:174	5160193	0					
ANR	5160233	ExpressionStatement	"R_BIT_UNSET ( dst , bit )"	99:2:2292:2315	5160193	0	True				
ANR	5160234	CallExpression	"R_BIT_UNSET ( dst , bit )"		5160193	0					
ANR	5160235	Callee	R_BIT_UNSET		5160193	0					
ANR	5160236	Identifier	R_BIT_UNSET		5160193	0					
ANR	5160237	ArgumentList	dst		5160193	1					
ANR	5160238	Argument	dst		5160193	0					
ANR	5160239	Identifier	dst		5160193	0					
ANR	5160240	Argument	bit		5160193	1					
ANR	5160241	Identifier	bit		5160193	0					
ANR	5160242	ReturnType	static void		5160193	1					
ANR	5160243	Identifier	writebit		5160193	2					
ANR	5160244	ParameterList	"ut8 * dst , int i , bool c"		5160193	3					
ANR	5160245	Parameter	ut8 * dst	89:22:2059:2066	5160193	0	True				
ANR	5160246	ParameterType	ut8 *		5160193	0					
ANR	5160247	Identifier	dst		5160193	1					
ANR	5160248	Parameter	int i	89:32:2069:2073	5160193	1	True				
ANR	5160249	ParameterType	int		5160193	0					
ANR	5160250	Identifier	i		5160193	1					
ANR	5160251	Parameter	bool c	89:39:2076:2081	5160193	2	True				
ANR	5160252	ParameterType	bool		5160193	0					
ANR	5160253	Identifier	c		5160193	1					
ANR	5160254	CFGEntryNode	ENTRY		5160193		True				
ANR	5160255	CFGExitNode	EXIT		5160193		True				
ANR	5160256	Symbol	c		5160193						
ANR	5160257	Symbol	dst		5160193						
ANR	5160258	Symbol	byte		5160193						
ANR	5160259	Symbol	i		5160193						
ANR	5160260	Symbol	bit		5160193						
ANR	5160261	Function	r_mem_copybits_delta	104:0:2361:2647							
ANR	5160262	FunctionDef	"r_mem_copybits_delta (ut8 * dst , int doff , const ut8 * src , int soff , int bits)"		5160261	0					
ANR	5160263	CompoundStatement		104:88:2449:2647	5160261	0					
ANR	5160264	IdentifierDeclStatement	int i ;	105:1:2452:2457	5160261	0	True				
ANR	5160265	IdentifierDecl	i		5160261	0					
ANR	5160266	IdentifierDeclType	int		5160261	0					
ANR	5160267	Identifier	i		5160261	1					
ANR	5160268	IfStatement	if ( doff < 0 || soff < 0 || ! dst || ! src )		5160261	1					
ANR	5160269	Condition	doff < 0 || soff < 0 || ! dst || ! src	106:5:2464:2499	5160261	0	True				
ANR	5160270	OrExpression	doff < 0 || soff < 0 || ! dst || ! src		5160261	0		||			
ANR	5160271	RelationalExpression	doff < 0		5160261	0		<			
ANR	5160272	Identifier	doff		5160261	0					
ANR	5160273	PrimaryExpression	0		5160261	1					
ANR	5160274	OrExpression	soff < 0 || ! dst || ! src		5160261	1		||			
ANR	5160275	RelationalExpression	soff < 0		5160261	0		<			
ANR	5160276	Identifier	soff		5160261	0					
ANR	5160277	PrimaryExpression	0		5160261	1					
ANR	5160278	OrExpression	! dst || ! src		5160261	1		||			
ANR	5160279	UnaryOperationExpression	! dst		5160261	0					
ANR	5160280	UnaryOperator	!		5160261	0					
ANR	5160281	Identifier	dst		5160261	1					
ANR	5160282	UnaryOperationExpression	! src		5160261	1					
ANR	5160283	UnaryOperator	!		5160261	0					
ANR	5160284	Identifier	src		5160261	1					
ANR	5160285	CompoundStatement		3:43:52:52	5160261	1					
ANR	5160286	ReturnStatement	return ;	107:2:2506:2512	5160261	0	True				
ANR	5160287	ForStatement	for ( i = 0 ; i < bits ; i ++ )		5160261	2					
ANR	5160288	ForInit	i = 0 ;	109:6:2523:2528	5160261	0	True				
ANR	5160289	AssignmentExpression	i = 0		5160261	0		=			
ANR	5160290	Identifier	i		5160261	0					
ANR	5160291	PrimaryExpression	0		5160261	1					
ANR	5160292	Condition	i < bits	109:13:2530:2537	5160261	1	True				
ANR	5160293	RelationalExpression	i < bits		5160261	0		<			
ANR	5160294	Identifier	i		5160261	0					
ANR	5160295	Identifier	bits		5160261	1					
ANR	5160296	PostIncDecOperationExpression	i ++	109:23:2540:2542	5160261	2	True				
ANR	5160297	Identifier	i		5160261	0					
ANR	5160298	IncDec	++		5160261	1					
ANR	5160299	CompoundStatement		7:2:99:131	5160261	3					
ANR	5160300	IdentifierDeclStatement	"bool c = readbit ( src , i + soff ) ;"	110:2:2549:2581	5160261	0	True				
ANR	5160301	IdentifierDecl	"c = readbit ( src , i + soff )"		5160261	0					
ANR	5160302	IdentifierDeclType	bool		5160261	0					
ANR	5160303	Identifier	c		5160261	1					
ANR	5160304	AssignmentExpression	"c = readbit ( src , i + soff )"		5160261	2		=			
ANR	5160305	Identifier	c		5160261	0					
ANR	5160306	CallExpression	"readbit ( src , i + soff )"		5160261	1					
ANR	5160307	Callee	readbit		5160261	0					
ANR	5160308	Identifier	readbit		5160261	0					
ANR	5160309	ArgumentList	src		5160261	1					
ANR	5160310	Argument	src		5160261	0					
ANR	5160311	Identifier	src		5160261	0					
ANR	5160312	Argument	i + soff		5160261	1					
ANR	5160313	AdditiveExpression	i + soff		5160261	0		+			
ANR	5160314	Identifier	i		5160261	0					
ANR	5160315	Identifier	soff		5160261	1					
ANR	5160316	ExpressionStatement	"writebit ( dst , i + doff , c )"	112:2:2615:2642	5160261	1	True				
ANR	5160317	CallExpression	"writebit ( dst , i + doff , c )"		5160261	0					
ANR	5160318	Callee	writebit		5160261	0					
ANR	5160319	Identifier	writebit		5160261	0					
ANR	5160320	ArgumentList	dst		5160261	1					
ANR	5160321	Argument	dst		5160261	0					
ANR	5160322	Identifier	dst		5160261	0					
ANR	5160323	Argument	i + doff		5160261	1					
ANR	5160324	AdditiveExpression	i + doff		5160261	0		+			
ANR	5160325	Identifier	i		5160261	0					
ANR	5160326	Identifier	doff		5160261	1					
ANR	5160327	Argument	c		5160261	2					
ANR	5160328	Identifier	c		5160261	0					
ANR	5160329	ReturnType	R_API void		5160261	1					
ANR	5160330	Identifier	r_mem_copybits_delta		5160261	2					
ANR	5160331	ParameterList	"ut8 * dst , int doff , const ut8 * src , int soff , int bits"		5160261	3					
ANR	5160332	Parameter	ut8 * dst	104:32:2393:2400	5160261	0	True				
ANR	5160333	ParameterType	ut8 *		5160261	0					
ANR	5160334	Identifier	dst		5160261	1					
ANR	5160335	Parameter	int doff	104:42:2403:2410	5160261	1	True				
ANR	5160336	ParameterType	int		5160261	0					
ANR	5160337	Identifier	doff		5160261	1					
ANR	5160338	Parameter	const ut8 * src	104:52:2413:2426	5160261	2	True				
ANR	5160339	ParameterType	const ut8 *		5160261	0					
ANR	5160340	Identifier	src		5160261	1					
ANR	5160341	Parameter	int soff	104:68:2429:2436	5160261	3	True				
ANR	5160342	ParameterType	int		5160261	0					
ANR	5160343	Identifier	soff		5160261	1					
ANR	5160344	Parameter	int bits	104:78:2439:2446	5160261	4	True				
ANR	5160345	ParameterType	int		5160261	0					
ANR	5160346	Identifier	bits		5160261	1					
ANR	5160347	CFGEntryNode	ENTRY		5160261		True				
ANR	5160348	CFGExitNode	EXIT		5160261		True				
ANR	5160349	Symbol	readbit		5160261						
ANR	5160350	Symbol	c		5160261						
ANR	5160351	Symbol	dst		5160261						
ANR	5160352	Symbol	doff		5160261						
ANR	5160353	Symbol	src		5160261						
ANR	5160354	Symbol	bits		5160261						
ANR	5160355	Symbol	soff		5160261						
ANR	5160356	Symbol	i		5160261						
ANR	5160357	Function	r_mem_get_num	116:0:2650:2918							
ANR	5160358	FunctionDef	"r_mem_get_num (const ut8 * b , int size)"		5160357	0					
ANR	5160359	CompoundStatement		116:49:2699:2918	5160357	0					
ANR	5160360	SwitchStatement	switch ( size )		5160357	0					
ANR	5160361	Condition	size	118:9:2755:2758	5160357	0	True				
ANR	5160362	Identifier	size		5160357	0					
ANR	5160363	CompoundStatement		3:15:61:61	5160357	1					
ANR	5160364	Label	case 1 :	119:1:2764:2770	5160357	0	True				
ANR	5160365	ReturnStatement	return r_read_le8 ( b ) ;	120:2:2774:2795	5160357	1	True				
ANR	5160366	CallExpression	r_read_le8 ( b )		5160357	0					
ANR	5160367	Callee	r_read_le8		5160357	0					
ANR	5160368	Identifier	r_read_le8		5160357	0					
ANR	5160369	ArgumentList	b		5160357	1					
ANR	5160370	Argument	b		5160357	0					
ANR	5160371	Identifier	b		5160357	0					
ANR	5160372	Label	case 2 :	121:1:2798:2804	5160357	2	True				
ANR	5160373	ReturnStatement	return r_read_le16 ( b ) ;	122:2:2808:2830	5160357	3	True				
ANR	5160374	CallExpression	r_read_le16 ( b )		5160357	0					
ANR	5160375	Callee	r_read_le16		5160357	0					
ANR	5160376	Identifier	r_read_le16		5160357	0					
ANR	5160377	ArgumentList	b		5160357	1					
ANR	5160378	Argument	b		5160357	0					
ANR	5160379	Identifier	b		5160357	0					
ANR	5160380	Label	case 4 :	123:1:2833:2839	5160357	4	True				
ANR	5160381	ReturnStatement	return r_read_le32 ( b ) ;	124:2:2843:2865	5160357	5	True				
ANR	5160382	CallExpression	r_read_le32 ( b )		5160357	0					
ANR	5160383	Callee	r_read_le32		5160357	0					
ANR	5160384	Identifier	r_read_le32		5160357	0					
ANR	5160385	ArgumentList	b		5160357	1					
ANR	5160386	Argument	b		5160357	0					
ANR	5160387	Identifier	b		5160357	0					
ANR	5160388	Label	case 8 :	125:1:2868:2874	5160357	6	True				
ANR	5160389	ReturnStatement	return r_read_le64 ( b ) ;	126:2:2878:2900	5160357	7	True				
ANR	5160390	CallExpression	r_read_le64 ( b )		5160357	0					
ANR	5160391	Callee	r_read_le64		5160357	0					
ANR	5160392	Identifier	r_read_le64		5160357	0					
ANR	5160393	ArgumentList	b		5160357	1					
ANR	5160394	Argument	b		5160357	0					
ANR	5160395	Identifier	b		5160357	0					
ANR	5160396	Statement	return	128:1:2906:2911	5160357	1	True				
ANR	5160397	Statement	0L	128:8:2913:2914	5160357	2	True				
ANR	5160398	ExpressionStatement	L	128:10:2915:2916	5160357	3	True				
ANR	5160399	Identifier	L		5160357	0					
ANR	5160400	ReturnType	R_API ut64		5160357	1					
ANR	5160401	Identifier	r_mem_get_num		5160357	2					
ANR	5160402	ParameterList	"const ut8 * b , int size"		5160357	3					
ANR	5160403	Parameter	const ut8 * b	116:25:2675:2686	5160357	0	True				
ANR	5160404	ParameterType	const ut8 *		5160357	0					
ANR	5160405	Identifier	b		5160357	1					
ANR	5160406	Parameter	int size	116:39:2689:2696	5160357	1	True				
ANR	5160407	ParameterType	int		5160357	0					
ANR	5160408	Identifier	size		5160357	1					
ANR	5160409	CFGEntryNode	ENTRY		5160357		True				
ANR	5160410	CFGExitNode	EXIT		5160357		True				
ANR	5160411	Symbol	b		5160357						
ANR	5160412	Symbol	r_read_le32		5160357						
ANR	5160413	Symbol	size		5160357						
ANR	5160414	Symbol	r_read_le64		5160357						
ANR	5160415	Symbol	r_read_le8		5160357						
ANR	5160416	Symbol	r_read_le16		5160357						
ANR	5160417	Function	r_mem_set_num	132:0:3007:3420							
ANR	5160418	FunctionDef	"r_mem_set_num (ut8 * dest , int dest_size , ut64 num)"		5160417	0					
ANR	5160419	CompoundStatement		132:60:3067:3420	5160417	0					
ANR	5160420	SwitchStatement	switch ( dest_size )		5160417	0					
ANR	5160421	Condition	dest_size	134:9:3123:3131	5160417	0	True				
ANR	5160422	Identifier	dest_size		5160417	0					
ANR	5160423	CompoundStatement		3:20:66:66	5160417	1					
ANR	5160424	Label	case 1 :	135:1:3137:3143	5160417	0	True				
ANR	5160425	ExpressionStatement	"r_write_le8 ( dest , ( ut8 ) ( num & UT8_MAX ) )"	136:2:3147:3188	5160417	1	True				
ANR	5160426	CallExpression	"r_write_le8 ( dest , ( ut8 ) ( num & UT8_MAX ) )"		5160417	0					
ANR	5160427	Callee	r_write_le8		5160417	0					
ANR	5160428	Identifier	r_write_le8		5160417	0					
ANR	5160429	ArgumentList	dest		5160417	1					
ANR	5160430	Argument	dest		5160417	0					
ANR	5160431	Identifier	dest		5160417	0					
ANR	5160432	Argument	( ut8 ) ( num & UT8_MAX )		5160417	1					
ANR	5160433	CastExpression	( ut8 ) ( num & UT8_MAX )		5160417	0					
ANR	5160434	CastTarget	ut8		5160417	0					
ANR	5160435	BitAndExpression	num & UT8_MAX		5160417	1		&			
ANR	5160436	Identifier	num		5160417	0					
ANR	5160437	Identifier	UT8_MAX		5160417	1					
ANR	5160438	BreakStatement	break ;	137:2:3192:3197	5160417	2	True				
ANR	5160439	Label	case 2 :	138:1:3200:3206	5160417	3	True				
ANR	5160440	ExpressionStatement	"r_write_le16 ( dest , ( ut16 ) ( num & UT16_MAX ) )"	139:2:3210:3254	5160417	4	True				
ANR	5160441	CallExpression	"r_write_le16 ( dest , ( ut16 ) ( num & UT16_MAX ) )"		5160417	0					
ANR	5160442	Callee	r_write_le16		5160417	0					
ANR	5160443	Identifier	r_write_le16		5160417	0					
ANR	5160444	ArgumentList	dest		5160417	1					
ANR	5160445	Argument	dest		5160417	0					
ANR	5160446	Identifier	dest		5160417	0					
ANR	5160447	Argument	( ut16 ) ( num & UT16_MAX )		5160417	1					
ANR	5160448	CastExpression	( ut16 ) ( num & UT16_MAX )		5160417	0					
ANR	5160449	CastTarget	ut16		5160417	0					
ANR	5160450	BitAndExpression	num & UT16_MAX		5160417	1		&			
ANR	5160451	Identifier	num		5160417	0					
ANR	5160452	Identifier	UT16_MAX		5160417	1					
ANR	5160453	BreakStatement	break ;	140:2:3258:3263	5160417	5	True				
ANR	5160454	Label	case 4 :	141:1:3266:3272	5160417	6	True				
ANR	5160455	ExpressionStatement	"r_write_le32 ( dest , ( ut32 ) ( num & UT32_MAX ) )"	142:2:3276:3320	5160417	7	True				
ANR	5160456	CallExpression	"r_write_le32 ( dest , ( ut32 ) ( num & UT32_MAX ) )"		5160417	0					
ANR	5160457	Callee	r_write_le32		5160417	0					
ANR	5160458	Identifier	r_write_le32		5160417	0					
ANR	5160459	ArgumentList	dest		5160417	1					
ANR	5160460	Argument	dest		5160417	0					
ANR	5160461	Identifier	dest		5160417	0					
ANR	5160462	Argument	( ut32 ) ( num & UT32_MAX )		5160417	1					
ANR	5160463	CastExpression	( ut32 ) ( num & UT32_MAX )		5160417	0					
ANR	5160464	CastTarget	ut32		5160417	0					
ANR	5160465	BitAndExpression	num & UT32_MAX		5160417	1		&			
ANR	5160466	Identifier	num		5160417	0					
ANR	5160467	Identifier	UT32_MAX		5160417	1					
ANR	5160468	BreakStatement	break ;	143:2:3324:3329	5160417	8	True				
ANR	5160469	Label	case 8 :	144:1:3332:3338	5160417	9	True				
ANR	5160470	ExpressionStatement	"r_write_le64 ( dest , num )"	145:2:3342:3366	5160417	10	True				
ANR	5160471	CallExpression	"r_write_le64 ( dest , num )"		5160417	0					
ANR	5160472	Callee	r_write_le64		5160417	0					
ANR	5160473	Identifier	r_write_le64		5160417	0					
ANR	5160474	ArgumentList	dest		5160417	1					
ANR	5160475	Argument	dest		5160417	0					
ANR	5160476	Identifier	dest		5160417	0					
ANR	5160477	Argument	num		5160417	1					
ANR	5160478	Identifier	num		5160417	0					
ANR	5160479	BreakStatement	break ;	146:2:3370:3375	5160417	11	True				
ANR	5160480	Label	default :	147:1:3378:3385	5160417	12	True				
ANR	5160481	Identifier	default		5160417	0					
ANR	5160482	ReturnStatement	return false ;	148:2:3389:3401	5160417	13	True				
ANR	5160483	Identifier	false		5160417	0					
ANR	5160484	ReturnStatement	return true ;	150:1:3407:3418	5160417	1	True				
ANR	5160485	Identifier	true		5160417	0					
ANR	5160486	ReturnType	R_API int		5160417	1					
ANR	5160487	Identifier	r_mem_set_num		5160417	2					
ANR	5160488	ParameterList	"ut8 * dest , int dest_size , ut64 num"		5160417	3					
ANR	5160489	Parameter	ut8 * dest	132:24:3031:3039	5160417	0	True				
ANR	5160490	ParameterType	ut8 *		5160417	0					
ANR	5160491	Identifier	dest		5160417	1					
ANR	5160492	Parameter	int dest_size	132:35:3042:3054	5160417	1	True				
ANR	5160493	ParameterType	int		5160417	0					
ANR	5160494	Identifier	dest_size		5160417	1					
ANR	5160495	Parameter	ut64 num	132:50:3057:3064	5160417	2	True				
ANR	5160496	ParameterType	ut64		5160417	0					
ANR	5160497	Identifier	num		5160417	1					
ANR	5160498	CFGEntryNode	ENTRY		5160417		True				
ANR	5160499	CFGExitNode	EXIT		5160417		True				
ANR	5160500	Symbol	UT32_MAX		5160417						
ANR	5160501	Symbol	UT8_MAX		5160417						
ANR	5160502	Symbol	num		5160417						
ANR	5160503	Symbol	false		5160417						
ANR	5160504	Symbol	true		5160417						
ANR	5160505	Symbol	UT16_MAX		5160417						
ANR	5160506	Symbol	dest		5160417						
ANR	5160507	Symbol	dest_size		5160417						
ANR	5160508	Function	r_mem_swaporcopy	156:0:3570:3749							
ANR	5160509	FunctionDef	"r_mem_swaporcopy (ut8 * dest , const ut8 * src , int len , bool big_endian)"		5160508	0					
ANR	5160510	CompoundStatement		156:81:3651:3749	5160508	0					
ANR	5160511	IfStatement	if ( big_endian )		5160508	0					
ANR	5160512	Condition	big_endian	157:5:3658:3667	5160508	0	True				
ANR	5160513	Identifier	big_endian		5160508	0					
ANR	5160514	CompoundStatement		2:17:18:18	5160508	1					
ANR	5160515	ExpressionStatement	"r_mem_swapendian ( dest , src , len )"	158:2:3674:3707	5160508	0	True				
ANR	5160516	CallExpression	"r_mem_swapendian ( dest , src , len )"		5160508	0					
ANR	5160517	Callee	r_mem_swapendian		5160508	0					
ANR	5160518	Identifier	r_mem_swapendian		5160508	0					
ANR	5160519	ArgumentList	dest		5160508	1					
ANR	5160520	Argument	dest		5160508	0					
ANR	5160521	Identifier	dest		5160508	0					
ANR	5160522	Argument	src		5160508	1					
ANR	5160523	Identifier	src		5160508	0					
ANR	5160524	Argument	len		5160508	2					
ANR	5160525	Identifier	len		5160508	0					
ANR	5160526	ElseStatement	else		5160508	0					
ANR	5160527	CompoundStatement		4:8:65:65	5160508	0					
ANR	5160528	ExpressionStatement	"memcpy ( dest , src , len )"	160:2:3721:3744	5160508	0	True				
ANR	5160529	CallExpression	"memcpy ( dest , src , len )"		5160508	0					
ANR	5160530	Callee	memcpy		5160508	0					
ANR	5160531	Identifier	memcpy		5160508	0					
ANR	5160532	ArgumentList	dest		5160508	1					
ANR	5160533	Argument	dest		5160508	0					
ANR	5160534	Identifier	dest		5160508	0					
ANR	5160535	Argument	src		5160508	1					
ANR	5160536	Identifier	src		5160508	0					
ANR	5160537	Argument	len		5160508	2					
ANR	5160538	Identifier	len		5160508	0					
ANR	5160539	ReturnType	R_API void		5160508	1					
ANR	5160540	Identifier	r_mem_swaporcopy		5160508	2					
ANR	5160541	ParameterList	"ut8 * dest , const ut8 * src , int len , bool big_endian"		5160508	3					
ANR	5160542	Parameter	ut8 * dest	156:28:3598:3606	5160508	0	True				
ANR	5160543	ParameterType	ut8 *		5160508	0					
ANR	5160544	Identifier	dest		5160508	1					
ANR	5160545	Parameter	const ut8 * src	156:39:3609:3622	5160508	1	True				
ANR	5160546	ParameterType	const ut8 *		5160508	0					
ANR	5160547	Identifier	src		5160508	1					
ANR	5160548	Parameter	int len	156:55:3625:3631	5160508	2	True				
ANR	5160549	ParameterType	int		5160508	0					
ANR	5160550	Identifier	len		5160508	1					
ANR	5160551	Parameter	bool big_endian	156:64:3634:3648	5160508	3	True				
ANR	5160552	ParameterType	bool		5160508	0					
ANR	5160553	Identifier	big_endian		5160508	1					
ANR	5160554	CFGEntryNode	ENTRY		5160508		True				
ANR	5160555	CFGExitNode	EXIT		5160508		True				
ANR	5160556	Symbol	len		5160508						
ANR	5160557	Symbol	big_endian		5160508						
ANR	5160558	Symbol	src		5160508						
ANR	5160559	Symbol	dest		5160508						
ANR	5160560	Function	r_mem_swapendian	166:0:3855:4612							
ANR	5160561	FunctionDef	"r_mem_swapendian (ut8 * dest , const ut8 * orig , int size)"		5160560	0					
ANR	5160562	CompoundStatement		166:66:3921:4612	5160560	0					
ANR	5160563	IdentifierDeclStatement	ut8 buffer [ 8 ] ;	167:1:3924:3937	5160560	0	True				
ANR	5160564	IdentifierDecl	buffer [ 8 ]		5160560	0					
ANR	5160565	IdentifierDeclType	ut8 [ 8 ]		5160560	0					
ANR	5160566	Identifier	buffer		5160560	1					
ANR	5160567	PrimaryExpression	8		5160560	2					
ANR	5160568	SwitchStatement	switch ( size )		5160560	1					
ANR	5160569	Condition	size	168:9:3948:3951	5160560	0	True				
ANR	5160570	Identifier	size		5160560	0					
ANR	5160571	CompoundStatement		3:15:32:32	5160560	1					
ANR	5160572	Label	case 1 :	169:1:3957:3963	5160560	0	True				
ANR	5160573	ExpressionStatement	* dest = * orig	170:2:3967:3980	5160560	1	True				
ANR	5160574	AssignmentExpression	* dest = * orig		5160560	0		=			
ANR	5160575	UnaryOperationExpression	* dest		5160560	0					
ANR	5160576	UnaryOperator	*		5160560	0					
ANR	5160577	Identifier	dest		5160560	1					
ANR	5160578	UnaryOperationExpression	* orig		5160560	1					
ANR	5160579	UnaryOperator	*		5160560	0					
ANR	5160580	Identifier	orig		5160560	1					
ANR	5160581	BreakStatement	break ;	171:2:3984:3989	5160560	2	True				
ANR	5160582	Label	case 2 :	172:1:3992:3998	5160560	3	True				
ANR	5160583	ExpressionStatement	* buffer = * orig	173:2:4002:4017	5160560	4	True				
ANR	5160584	AssignmentExpression	* buffer = * orig		5160560	0		=			
ANR	5160585	UnaryOperationExpression	* buffer		5160560	0					
ANR	5160586	UnaryOperator	*		5160560	0					
ANR	5160587	Identifier	buffer		5160560	1					
ANR	5160588	UnaryOperationExpression	* orig		5160560	1					
ANR	5160589	UnaryOperator	*		5160560	0					
ANR	5160590	Identifier	orig		5160560	1					
ANR	5160591	ExpressionStatement	dest [ 0 ] = orig [ 1 ]	174:2:4021:4038	5160560	5	True				
ANR	5160592	AssignmentExpression	dest [ 0 ] = orig [ 1 ]		5160560	0		=			
ANR	5160593	ArrayIndexing	dest [ 0 ]		5160560	0					
ANR	5160594	Identifier	dest		5160560	0					
ANR	5160595	PrimaryExpression	0		5160560	1					
ANR	5160596	ArrayIndexing	orig [ 1 ]		5160560	1					
ANR	5160597	Identifier	orig		5160560	0					
ANR	5160598	PrimaryExpression	1		5160560	1					
ANR	5160599	ExpressionStatement	dest [ 1 ] = buffer [ 0 ]	175:2:4042:4061	5160560	6	True				
ANR	5160600	AssignmentExpression	dest [ 1 ] = buffer [ 0 ]		5160560	0		=			
ANR	5160601	ArrayIndexing	dest [ 1 ]		5160560	0					
ANR	5160602	Identifier	dest		5160560	0					
ANR	5160603	PrimaryExpression	1		5160560	1					
ANR	5160604	ArrayIndexing	buffer [ 0 ]		5160560	1					
ANR	5160605	Identifier	buffer		5160560	0					
ANR	5160606	PrimaryExpression	0		5160560	1					
ANR	5160607	BreakStatement	break ;	176:2:4065:4070	5160560	7	True				
ANR	5160608	Label	case 3 :	177:1:4073:4079	5160560	8	True				
ANR	5160609	ExpressionStatement	* buffer = * orig	178:2:4083:4098	5160560	9	True				
ANR	5160610	AssignmentExpression	* buffer = * orig		5160560	0		=			
ANR	5160611	UnaryOperationExpression	* buffer		5160560	0					
ANR	5160612	UnaryOperator	*		5160560	0					
ANR	5160613	Identifier	buffer		5160560	1					
ANR	5160614	UnaryOperationExpression	* orig		5160560	1					
ANR	5160615	UnaryOperator	*		5160560	0					
ANR	5160616	Identifier	orig		5160560	1					
ANR	5160617	ExpressionStatement	dest [ 0 ] = orig [ 2 ]	179:2:4102:4119	5160560	10	True				
ANR	5160618	AssignmentExpression	dest [ 0 ] = orig [ 2 ]		5160560	0		=			
ANR	5160619	ArrayIndexing	dest [ 0 ]		5160560	0					
ANR	5160620	Identifier	dest		5160560	0					
ANR	5160621	PrimaryExpression	0		5160560	1					
ANR	5160622	ArrayIndexing	orig [ 2 ]		5160560	1					
ANR	5160623	Identifier	orig		5160560	0					
ANR	5160624	PrimaryExpression	2		5160560	1					
ANR	5160625	ExpressionStatement	dest [ 1 ] = orig [ 1 ]	180:2:4123:4140	5160560	11	True				
ANR	5160626	AssignmentExpression	dest [ 1 ] = orig [ 1 ]		5160560	0		=			
ANR	5160627	ArrayIndexing	dest [ 1 ]		5160560	0					
ANR	5160628	Identifier	dest		5160560	0					
ANR	5160629	PrimaryExpression	1		5160560	1					
ANR	5160630	ArrayIndexing	orig [ 1 ]		5160560	1					
ANR	5160631	Identifier	orig		5160560	0					
ANR	5160632	PrimaryExpression	1		5160560	1					
ANR	5160633	ExpressionStatement	dest [ 2 ] = buffer [ 0 ]	181:2:4144:4163	5160560	12	True				
ANR	5160634	AssignmentExpression	dest [ 2 ] = buffer [ 0 ]		5160560	0		=			
ANR	5160635	ArrayIndexing	dest [ 2 ]		5160560	0					
ANR	5160636	Identifier	dest		5160560	0					
ANR	5160637	PrimaryExpression	2		5160560	1					
ANR	5160638	ArrayIndexing	buffer [ 0 ]		5160560	1					
ANR	5160639	Identifier	buffer		5160560	0					
ANR	5160640	PrimaryExpression	0		5160560	1					
ANR	5160641	BreakStatement	break ;	182:2:4167:4172	5160560	13	True				
ANR	5160642	Label	case 4 :	183:1:4175:4181	5160560	14	True				
ANR	5160643	ExpressionStatement	"memcpy ( buffer , orig , 4 )"	184:2:4185:4209	5160560	15	True				
ANR	5160644	CallExpression	"memcpy ( buffer , orig , 4 )"		5160560	0					
ANR	5160645	Callee	memcpy		5160560	0					
ANR	5160646	Identifier	memcpy		5160560	0					
ANR	5160647	ArgumentList	buffer		5160560	1					
ANR	5160648	Argument	buffer		5160560	0					
ANR	5160649	Identifier	buffer		5160560	0					
ANR	5160650	Argument	orig		5160560	1					
ANR	5160651	Identifier	orig		5160560	0					
ANR	5160652	Argument	4		5160560	2					
ANR	5160653	PrimaryExpression	4		5160560	0					
ANR	5160654	ExpressionStatement	dest [ 0 ] = buffer [ 3 ]	185:2:4213:4232	5160560	16	True				
ANR	5160655	AssignmentExpression	dest [ 0 ] = buffer [ 3 ]		5160560	0		=			
ANR	5160656	ArrayIndexing	dest [ 0 ]		5160560	0					
ANR	5160657	Identifier	dest		5160560	0					
ANR	5160658	PrimaryExpression	0		5160560	1					
ANR	5160659	ArrayIndexing	buffer [ 3 ]		5160560	1					
ANR	5160660	Identifier	buffer		5160560	0					
ANR	5160661	PrimaryExpression	3		5160560	1					
ANR	5160662	ExpressionStatement	dest [ 1 ] = buffer [ 2 ]	186:2:4236:4255	5160560	17	True				
ANR	5160663	AssignmentExpression	dest [ 1 ] = buffer [ 2 ]		5160560	0		=			
ANR	5160664	ArrayIndexing	dest [ 1 ]		5160560	0					
ANR	5160665	Identifier	dest		5160560	0					
ANR	5160666	PrimaryExpression	1		5160560	1					
ANR	5160667	ArrayIndexing	buffer [ 2 ]		5160560	1					
ANR	5160668	Identifier	buffer		5160560	0					
ANR	5160669	PrimaryExpression	2		5160560	1					
ANR	5160670	ExpressionStatement	dest [ 2 ] = buffer [ 1 ]	187:2:4259:4278	5160560	18	True				
ANR	5160671	AssignmentExpression	dest [ 2 ] = buffer [ 1 ]		5160560	0		=			
ANR	5160672	ArrayIndexing	dest [ 2 ]		5160560	0					
ANR	5160673	Identifier	dest		5160560	0					
ANR	5160674	PrimaryExpression	2		5160560	1					
ANR	5160675	ArrayIndexing	buffer [ 1 ]		5160560	1					
ANR	5160676	Identifier	buffer		5160560	0					
ANR	5160677	PrimaryExpression	1		5160560	1					
ANR	5160678	ExpressionStatement	dest [ 3 ] = buffer [ 0 ]	188:2:4282:4301	5160560	19	True				
ANR	5160679	AssignmentExpression	dest [ 3 ] = buffer [ 0 ]		5160560	0		=			
ANR	5160680	ArrayIndexing	dest [ 3 ]		5160560	0					
ANR	5160681	Identifier	dest		5160560	0					
ANR	5160682	PrimaryExpression	3		5160560	1					
ANR	5160683	ArrayIndexing	buffer [ 0 ]		5160560	1					
ANR	5160684	Identifier	buffer		5160560	0					
ANR	5160685	PrimaryExpression	0		5160560	1					
ANR	5160686	BreakStatement	break ;	189:2:4305:4310	5160560	20	True				
ANR	5160687	Label	case 8 :	190:1:4313:4319	5160560	21	True				
ANR	5160688	ExpressionStatement	"memcpy ( buffer , orig , 8 )"	191:2:4323:4347	5160560	22	True				
ANR	5160689	CallExpression	"memcpy ( buffer , orig , 8 )"		5160560	0					
ANR	5160690	Callee	memcpy		5160560	0					
ANR	5160691	Identifier	memcpy		5160560	0					
ANR	5160692	ArgumentList	buffer		5160560	1					
ANR	5160693	Argument	buffer		5160560	0					
ANR	5160694	Identifier	buffer		5160560	0					
ANR	5160695	Argument	orig		5160560	1					
ANR	5160696	Identifier	orig		5160560	0					
ANR	5160697	Argument	8		5160560	2					
ANR	5160698	PrimaryExpression	8		5160560	0					
ANR	5160699	ExpressionStatement	dest [ 0 ] = buffer [ 7 ]	192:2:4351:4370	5160560	23	True				
ANR	5160700	AssignmentExpression	dest [ 0 ] = buffer [ 7 ]		5160560	0		=			
ANR	5160701	ArrayIndexing	dest [ 0 ]		5160560	0					
ANR	5160702	Identifier	dest		5160560	0					
ANR	5160703	PrimaryExpression	0		5160560	1					
ANR	5160704	ArrayIndexing	buffer [ 7 ]		5160560	1					
ANR	5160705	Identifier	buffer		5160560	0					
ANR	5160706	PrimaryExpression	7		5160560	1					
ANR	5160707	ExpressionStatement	dest [ 1 ] = buffer [ 6 ]	193:2:4374:4393	5160560	24	True				
ANR	5160708	AssignmentExpression	dest [ 1 ] = buffer [ 6 ]		5160560	0		=			
ANR	5160709	ArrayIndexing	dest [ 1 ]		5160560	0					
ANR	5160710	Identifier	dest		5160560	0					
ANR	5160711	PrimaryExpression	1		5160560	1					
ANR	5160712	ArrayIndexing	buffer [ 6 ]		5160560	1					
ANR	5160713	Identifier	buffer		5160560	0					
ANR	5160714	PrimaryExpression	6		5160560	1					
ANR	5160715	ExpressionStatement	dest [ 2 ] = buffer [ 5 ]	194:2:4397:4416	5160560	25	True				
ANR	5160716	AssignmentExpression	dest [ 2 ] = buffer [ 5 ]		5160560	0		=			
ANR	5160717	ArrayIndexing	dest [ 2 ]		5160560	0					
ANR	5160718	Identifier	dest		5160560	0					
ANR	5160719	PrimaryExpression	2		5160560	1					
ANR	5160720	ArrayIndexing	buffer [ 5 ]		5160560	1					
ANR	5160721	Identifier	buffer		5160560	0					
ANR	5160722	PrimaryExpression	5		5160560	1					
ANR	5160723	ExpressionStatement	dest [ 3 ] = buffer [ 4 ]	195:2:4420:4439	5160560	26	True				
ANR	5160724	AssignmentExpression	dest [ 3 ] = buffer [ 4 ]		5160560	0		=			
ANR	5160725	ArrayIndexing	dest [ 3 ]		5160560	0					
ANR	5160726	Identifier	dest		5160560	0					
ANR	5160727	PrimaryExpression	3		5160560	1					
ANR	5160728	ArrayIndexing	buffer [ 4 ]		5160560	1					
ANR	5160729	Identifier	buffer		5160560	0					
ANR	5160730	PrimaryExpression	4		5160560	1					
ANR	5160731	ExpressionStatement	dest [ 4 ] = buffer [ 3 ]	196:2:4443:4462	5160560	27	True				
ANR	5160732	AssignmentExpression	dest [ 4 ] = buffer [ 3 ]		5160560	0		=			
ANR	5160733	ArrayIndexing	dest [ 4 ]		5160560	0					
ANR	5160734	Identifier	dest		5160560	0					
ANR	5160735	PrimaryExpression	4		5160560	1					
ANR	5160736	ArrayIndexing	buffer [ 3 ]		5160560	1					
ANR	5160737	Identifier	buffer		5160560	0					
ANR	5160738	PrimaryExpression	3		5160560	1					
ANR	5160739	ExpressionStatement	dest [ 5 ] = buffer [ 2 ]	197:2:4466:4485	5160560	28	True				
ANR	5160740	AssignmentExpression	dest [ 5 ] = buffer [ 2 ]		5160560	0		=			
ANR	5160741	ArrayIndexing	dest [ 5 ]		5160560	0					
ANR	5160742	Identifier	dest		5160560	0					
ANR	5160743	PrimaryExpression	5		5160560	1					
ANR	5160744	ArrayIndexing	buffer [ 2 ]		5160560	1					
ANR	5160745	Identifier	buffer		5160560	0					
ANR	5160746	PrimaryExpression	2		5160560	1					
ANR	5160747	ExpressionStatement	dest [ 6 ] = buffer [ 1 ]	198:2:4489:4508	5160560	29	True				
ANR	5160748	AssignmentExpression	dest [ 6 ] = buffer [ 1 ]		5160560	0		=			
ANR	5160749	ArrayIndexing	dest [ 6 ]		5160560	0					
ANR	5160750	Identifier	dest		5160560	0					
ANR	5160751	PrimaryExpression	6		5160560	1					
ANR	5160752	ArrayIndexing	buffer [ 1 ]		5160560	1					
ANR	5160753	Identifier	buffer		5160560	0					
ANR	5160754	PrimaryExpression	1		5160560	1					
ANR	5160755	ExpressionStatement	dest [ 7 ] = buffer [ 0 ]	199:2:4512:4531	5160560	30	True				
ANR	5160756	AssignmentExpression	dest [ 7 ] = buffer [ 0 ]		5160560	0		=			
ANR	5160757	ArrayIndexing	dest [ 7 ]		5160560	0					
ANR	5160758	Identifier	dest		5160560	0					
ANR	5160759	PrimaryExpression	7		5160560	1					
ANR	5160760	ArrayIndexing	buffer [ 0 ]		5160560	1					
ANR	5160761	Identifier	buffer		5160560	0					
ANR	5160762	PrimaryExpression	0		5160560	1					
ANR	5160763	BreakStatement	break ;	200:2:4535:4540	5160560	31	True				
ANR	5160764	Label	default :	201:1:4543:4550	5160560	32	True				
ANR	5160765	Identifier	default		5160560	0					
ANR	5160766	IfStatement	if ( dest != orig )		5160560	33					
ANR	5160767	Condition	dest != orig	202:6:4558:4569	5160560	0	True				
ANR	5160768	EqualityExpression	dest != orig		5160560	0		!=			
ANR	5160769	Identifier	dest		5160560	0					
ANR	5160770	Identifier	orig		5160560	1					
ANR	5160771	CompoundStatement		37:20:650:650	5160560	1					
ANR	5160772	ExpressionStatement	"memmove ( dest , orig , size )"	203:3:4577:4603	5160560	0	True				
ANR	5160773	CallExpression	"memmove ( dest , orig , size )"		5160560	0					
ANR	5160774	Callee	memmove		5160560	0					
ANR	5160775	Identifier	memmove		5160560	0					
ANR	5160776	ArgumentList	dest		5160560	1					
ANR	5160777	Argument	dest		5160560	0					
ANR	5160778	Identifier	dest		5160560	0					
ANR	5160779	Argument	orig		5160560	1					
ANR	5160780	Identifier	orig		5160560	0					
ANR	5160781	Argument	size		5160560	2					
ANR	5160782	Identifier	size		5160560	0					
ANR	5160783	ReturnType	R_API void		5160560	1					
ANR	5160784	Identifier	r_mem_swapendian		5160560	2					
ANR	5160785	ParameterList	"ut8 * dest , const ut8 * orig , int size"		5160560	3					
ANR	5160786	Parameter	ut8 * dest	166:28:3883:3891	5160560	0	True				
ANR	5160787	ParameterType	ut8 *		5160560	0					
ANR	5160788	Identifier	dest		5160560	1					
ANR	5160789	Parameter	const ut8 * orig	166:39:3894:3908	5160560	1	True				
ANR	5160790	ParameterType	const ut8 *		5160560	0					
ANR	5160791	Identifier	orig		5160560	1					
ANR	5160792	Parameter	int size	166:56:3911:3918	5160560	2	True				
ANR	5160793	ParameterType	int		5160560	0					
ANR	5160794	Identifier	size		5160560	1					
ANR	5160795	CFGEntryNode	ENTRY		5160560		True				
ANR	5160796	CFGExitNode	EXIT		5160560		True				
ANR	5160797	Symbol	* buffer		5160560						
ANR	5160798	Symbol	size		5160560						
ANR	5160799	Symbol	orig		5160560						
ANR	5160800	Symbol	* dest		5160560						
ANR	5160801	Symbol	* orig		5160560						
ANR	5160802	Symbol	buffer		5160560						
ANR	5160803	Symbol	dest		5160560						
ANR	5160804	Function	r_mem_mem	210:6:4773:5058							
ANR	5160805	FunctionDef	"r_mem_mem (const ut8 * haystack , int hlen , const ut8 * needle , int nlen)"		5160804	0					
ANR	5160806	CompoundStatement		210:87:4854:5058	5160804	0					
ANR	5160807	IdentifierDeclStatement	"int i , until = hlen - nlen + 1 ;"	211:1:4857:4887	5160804	0	True				
ANR	5160808	IdentifierDecl	i		5160804	0					
ANR	5160809	IdentifierDeclType	int		5160804	0					
ANR	5160810	Identifier	i		5160804	1					
ANR	5160811	IdentifierDecl	until = hlen - nlen + 1		5160804	1					
ANR	5160812	IdentifierDeclType	int		5160804	0					
ANR	5160813	Identifier	until		5160804	1					
ANR	5160814	AssignmentExpression	until = hlen - nlen + 1		5160804	2		=			
ANR	5160815	Identifier	until		5160804	0					
ANR	5160816	AdditiveExpression	hlen - nlen + 1		5160804	1		-			
ANR	5160817	Identifier	hlen		5160804	0					
ANR	5160818	AdditiveExpression	nlen + 1		5160804	1		+			
ANR	5160819	Identifier	nlen		5160804	0					
ANR	5160820	PrimaryExpression	1		5160804	1					
ANR	5160821	IfStatement	if ( hlen < 1 || nlen < 1 )		5160804	1					
ANR	5160822	Condition	hlen < 1 || nlen < 1	212:5:4894:4913	5160804	0	True				
ANR	5160823	OrExpression	hlen < 1 || nlen < 1		5160804	0		||			
ANR	5160824	RelationalExpression	hlen < 1		5160804	0		<			
ANR	5160825	Identifier	hlen		5160804	0					
ANR	5160826	PrimaryExpression	1		5160804	1					
ANR	5160827	RelationalExpression	nlen < 1		5160804	1		<			
ANR	5160828	Identifier	nlen		5160804	0					
ANR	5160829	PrimaryExpression	1		5160804	1					
ANR	5160830	CompoundStatement		3:27:61:61	5160804	1					
ANR	5160831	ReturnStatement	return NULL ;	213:2:4920:4931	5160804	0	True				
ANR	5160832	Identifier	NULL		5160804	0					
ANR	5160833	ForStatement	for ( i = 0 ; i < until ; i ++ )		5160804	2					
ANR	5160834	ForInit	i = 0 ;	215:6:4942:4947	5160804	0	True				
ANR	5160835	AssignmentExpression	i = 0		5160804	0		=			
ANR	5160836	Identifier	i		5160804	0					
ANR	5160837	PrimaryExpression	0		5160804	1					
ANR	5160838	Condition	i < until	215:13:4949:4957	5160804	1	True				
ANR	5160839	RelationalExpression	i < until		5160804	0		<			
ANR	5160840	Identifier	i		5160804	0					
ANR	5160841	Identifier	until		5160804	1					
ANR	5160842	PostIncDecOperationExpression	i ++	215:24:4960:4962	5160804	2	True				
ANR	5160843	Identifier	i		5160804	0					
ANR	5160844	IncDec	++		5160804	1					
ANR	5160845	CompoundStatement		6:29:110:110	5160804	3					
ANR	5160846	IfStatement	"if ( ! memcmp ( haystack + i , needle , nlen ) )"		5160804	0					
ANR	5160847	Condition	"! memcmp ( haystack + i , needle , nlen )"	216:6:4973:5008	5160804	0	True				
ANR	5160848	UnaryOperationExpression	"! memcmp ( haystack + i , needle , nlen )"		5160804	0					
ANR	5160849	UnaryOperator	!		5160804	0					
ANR	5160850	CallExpression	"memcmp ( haystack + i , needle , nlen )"		5160804	1					
ANR	5160851	Callee	memcmp		5160804	0					
ANR	5160852	Identifier	memcmp		5160804	0					
ANR	5160853	ArgumentList	haystack + i		5160804	1					
ANR	5160854	Argument	haystack + i		5160804	0					
ANR	5160855	AdditiveExpression	haystack + i		5160804	0		+			
ANR	5160856	Identifier	haystack		5160804	0					
ANR	5160857	Identifier	i		5160804	1					
ANR	5160858	Argument	needle		5160804	1					
ANR	5160859	Identifier	needle		5160804	0					
ANR	5160860	Argument	nlen		5160804	2					
ANR	5160861	Identifier	nlen		5160804	0					
ANR	5160862	CompoundStatement		7:44:156:156	5160804	1					
ANR	5160863	ReturnStatement	return haystack + i ;	217:3:5016:5035	5160804	0	True				
ANR	5160864	AdditiveExpression	haystack + i		5160804	0		+			
ANR	5160865	Identifier	haystack		5160804	0					
ANR	5160866	Identifier	i		5160804	1					
ANR	5160867	ReturnStatement	return NULL ;	220:1:5045:5056	5160804	3	True				
ANR	5160868	Identifier	NULL		5160804	0					
ANR	5160869	ReturnType	const ut8 *		5160804	1					
ANR	5160870	Identifier	r_mem_mem		5160804	2					
ANR	5160871	ParameterList	"const ut8 * haystack , int hlen , const ut8 * needle , int nlen"		5160804	3					
ANR	5160872	Parameter	const ut8 * haystack	210:27:4794:4812	5160804	0	True				
ANR	5160873	ParameterType	const ut8 *		5160804	0					
ANR	5160874	Identifier	haystack		5160804	1					
ANR	5160875	Parameter	int hlen	210:48:4815:4822	5160804	1	True				
ANR	5160876	ParameterType	int		5160804	0					
ANR	5160877	Identifier	hlen		5160804	1					
ANR	5160878	Parameter	const ut8 * needle	210:58:4825:4841	5160804	2	True				
ANR	5160879	ParameterType	const ut8 *		5160804	0					
ANR	5160880	Identifier	needle		5160804	1					
ANR	5160881	Parameter	int nlen	210:77:4844:4851	5160804	3	True				
ANR	5160882	ParameterType	int		5160804	0					
ANR	5160883	Identifier	nlen		5160804	1					
ANR	5160884	CFGEntryNode	ENTRY		5160804		True				
ANR	5160885	CFGExitNode	EXIT		5160804		True				
ANR	5160886	Symbol	haystack		5160804						
ANR	5160887	Symbol	NULL		5160804						
ANR	5160888	Symbol	memcmp		5160804						
ANR	5160889	Symbol	nlen		5160804						
ANR	5160890	Symbol	i		5160804						
ANR	5160891	Symbol	until		5160804						
ANR	5160892	Symbol	needle		5160804						
ANR	5160893	Symbol	hlen		5160804						
ANR	5160894	Function	r_mem_mem_aligned	224:6:5136:5530							
ANR	5160895	FunctionDef	"r_mem_mem_aligned (const ut8 * haystack , int hlen , const ut8 * needle , int nlen , int align)"		5160894	0					
ANR	5160896	CompoundStatement		224:106:5236:5530	5160894	0					
ANR	5160897	IdentifierDeclStatement	"int i , until = hlen - nlen + 1 ;"	225:1:5239:5269	5160894	0	True				
ANR	5160898	IdentifierDecl	i		5160894	0					
ANR	5160899	IdentifierDeclType	int		5160894	0					
ANR	5160900	Identifier	i		5160894	1					
ANR	5160901	IdentifierDecl	until = hlen - nlen + 1		5160894	1					
ANR	5160902	IdentifierDeclType	int		5160894	0					
ANR	5160903	Identifier	until		5160894	1					
ANR	5160904	AssignmentExpression	until = hlen - nlen + 1		5160894	2		=			
ANR	5160905	Identifier	until		5160894	0					
ANR	5160906	AdditiveExpression	hlen - nlen + 1		5160894	1		-			
ANR	5160907	Identifier	hlen		5160894	0					
ANR	5160908	AdditiveExpression	nlen + 1		5160894	1		+			
ANR	5160909	Identifier	nlen		5160894	0					
ANR	5160910	PrimaryExpression	1		5160894	1					
ANR	5160911	IfStatement	if ( align < 1 )		5160894	1					
ANR	5160912	Condition	align < 1	226:5:5276:5284	5160894	0	True				
ANR	5160913	RelationalExpression	align < 1		5160894	0		<			
ANR	5160914	Identifier	align		5160894	0					
ANR	5160915	PrimaryExpression	1		5160894	1					
ANR	5160916	CompoundStatement		3:16:50:50	5160894	1					
ANR	5160917	ExpressionStatement	align = 1	227:2:5291:5300	5160894	0	True				
ANR	5160918	AssignmentExpression	align = 1		5160894	0		=			
ANR	5160919	Identifier	align		5160894	0					
ANR	5160920	PrimaryExpression	1		5160894	1					
ANR	5160921	IfStatement	if ( hlen < 1 || nlen < 1 )		5160894	2					
ANR	5160922	Condition	hlen < 1 || nlen < 1	229:5:5310:5329	5160894	0	True				
ANR	5160923	OrExpression	hlen < 1 || nlen < 1		5160894	0		||			
ANR	5160924	RelationalExpression	hlen < 1		5160894	0		<			
ANR	5160925	Identifier	hlen		5160894	0					
ANR	5160926	PrimaryExpression	1		5160894	1					
ANR	5160927	RelationalExpression	nlen < 1		5160894	1		<			
ANR	5160928	Identifier	nlen		5160894	0					
ANR	5160929	PrimaryExpression	1		5160894	1					
ANR	5160930	CompoundStatement		6:27:95:95	5160894	1					
ANR	5160931	ReturnStatement	return NULL ;	230:2:5336:5347	5160894	0	True				
ANR	5160932	Identifier	NULL		5160894	0					
ANR	5160933	IfStatement	if ( align > 1 )		5160894	3					
ANR	5160934	Condition	align > 1	232:5:5357:5365	5160894	0	True				
ANR	5160935	RelationalExpression	align > 1		5160894	0		>			
ANR	5160936	Identifier	align		5160894	0					
ANR	5160937	PrimaryExpression	1		5160894	1					
ANR	5160938	CompoundStatement		9:16:131:131	5160894	1					
ANR	5160939	ExpressionStatement	until -= ( until % align )	233:2:5372:5396	5160894	0	True				
ANR	5160940	AssignmentExpression	until -= ( until % align )		5160894	0		-=			
ANR	5160941	Identifier	until		5160894	0					
ANR	5160942	MultiplicativeExpression	until % align		5160894	1		%			
ANR	5160943	Identifier	until		5160894	0					
ANR	5160944	Identifier	align		5160894	1					
ANR	5160945	ForStatement	for ( i = 0 ; i < until ; i += align )		5160894	4					
ANR	5160946	ForInit	i = 0 ;	235:6:5407:5412	5160894	0	True				
ANR	5160947	AssignmentExpression	i = 0		5160894	0		=			
ANR	5160948	Identifier	i		5160894	0					
ANR	5160949	PrimaryExpression	0		5160894	1					
ANR	5160950	Condition	i < until	235:13:5414:5422	5160894	1	True				
ANR	5160951	RelationalExpression	i < until		5160894	0		<			
ANR	5160952	Identifier	i		5160894	0					
ANR	5160953	Identifier	until		5160894	1					
ANR	5160954	AssignmentExpression	i += align	235:24:5425:5434	5160894	2	True	+=			
ANR	5160955	Identifier	i		5160894	0					
ANR	5160956	Identifier	align		5160894	1					
ANR	5160957	CompoundStatement		12:36:200:200	5160894	3					
ANR	5160958	IfStatement	"if ( ! memcmp ( haystack + i , needle , nlen ) )"		5160894	0					
ANR	5160959	Condition	"! memcmp ( haystack + i , needle , nlen )"	236:6:5445:5480	5160894	0	True				
ANR	5160960	UnaryOperationExpression	"! memcmp ( haystack + i , needle , nlen )"		5160894	0					
ANR	5160961	UnaryOperator	!		5160894	0					
ANR	5160962	CallExpression	"memcmp ( haystack + i , needle , nlen )"		5160894	1					
ANR	5160963	Callee	memcmp		5160894	0					
ANR	5160964	Identifier	memcmp		5160894	0					
ANR	5160965	ArgumentList	haystack + i		5160894	1					
ANR	5160966	Argument	haystack + i		5160894	0					
ANR	5160967	AdditiveExpression	haystack + i		5160894	0		+			
ANR	5160968	Identifier	haystack		5160894	0					
ANR	5160969	Identifier	i		5160894	1					
ANR	5160970	Argument	needle		5160894	1					
ANR	5160971	Identifier	needle		5160894	0					
ANR	5160972	Argument	nlen		5160894	2					
ANR	5160973	Identifier	nlen		5160894	0					
ANR	5160974	CompoundStatement		13:44:246:246	5160894	1					
ANR	5160975	ReturnStatement	return haystack + i ;	237:3:5488:5507	5160894	0	True				
ANR	5160976	AdditiveExpression	haystack + i		5160894	0		+			
ANR	5160977	Identifier	haystack		5160894	0					
ANR	5160978	Identifier	i		5160894	1					
ANR	5160979	ReturnStatement	return NULL ;	240:1:5517:5528	5160894	5	True				
ANR	5160980	Identifier	NULL		5160894	0					
ANR	5160981	ReturnType	const ut8 *		5160894	1					
ANR	5160982	Identifier	r_mem_mem_aligned		5160894	2					
ANR	5160983	ParameterList	"const ut8 * haystack , int hlen , const ut8 * needle , int nlen , int align"		5160894	3					
ANR	5160984	Parameter	const ut8 * haystack	224:35:5165:5183	5160894	0	True				
ANR	5160985	ParameterType	const ut8 *		5160894	0					
ANR	5160986	Identifier	haystack		5160894	1					
ANR	5160987	Parameter	int hlen	224:56:5186:5193	5160894	1	True				
ANR	5160988	ParameterType	int		5160894	0					
ANR	5160989	Identifier	hlen		5160894	1					
ANR	5160990	Parameter	const ut8 * needle	224:66:5196:5212	5160894	2	True				
ANR	5160991	ParameterType	const ut8 *		5160894	0					
ANR	5160992	Identifier	needle		5160894	1					
ANR	5160993	Parameter	int nlen	224:85:5215:5222	5160894	3	True				
ANR	5160994	ParameterType	int		5160894	0					
ANR	5160995	Identifier	nlen		5160894	1					
ANR	5160996	Parameter	int align	224:95:5225:5233	5160894	4	True				
ANR	5160997	ParameterType	int		5160894	0					
ANR	5160998	Identifier	align		5160894	1					
ANR	5160999	CFGEntryNode	ENTRY		5160894		True				
ANR	5161000	CFGExitNode	EXIT		5160894		True				
ANR	5161001	Symbol	haystack		5160894						
ANR	5161002	Symbol	NULL		5160894						
ANR	5161003	Symbol	memcmp		5160894						
ANR	5161004	Symbol	nlen		5160894						
ANR	5161005	Symbol	i		5160894						
ANR	5161006	Symbol	until		5160894						
ANR	5161007	Symbol	needle		5160894						
ANR	5161008	Symbol	align		5160894						
ANR	5161009	Symbol	hlen		5160894						
ANR	5161010	Function	r_mem_protect	243:0:5533:6242							
ANR	5161011	FunctionDef	"r_mem_protect (void * ptr , int size , const char * prot)"		5161010	0					
ANR	5161012	CompoundStatement		243:63:5596:6242	5161010	0					
ANR	5161013	IdentifierDeclStatement	int p = 0 ;	245:1:5612:5621	5161010	0	True				
ANR	5161014	IdentifierDecl	p = 0		5161010	0					
ANR	5161015	IdentifierDeclType	int		5161010	0					
ANR	5161016	Identifier	p		5161010	1					
ANR	5161017	AssignmentExpression	p = 0		5161010	2		=			
ANR	5161018	Identifier	p		5161010	0					
ANR	5161019	PrimaryExpression	0		5161010	1					
ANR	5161020	IfStatement	"if ( strchr ( prot , 'x' ) )"		5161010	1					
ANR	5161021	Condition	"strchr ( prot , 'x' )"	246:5:5628:5645	5161010	0	True				
ANR	5161022	CallExpression	"strchr ( prot , 'x' )"		5161010	0					
ANR	5161023	Callee	strchr		5161010	0					
ANR	5161024	Identifier	strchr		5161010	0					
ANR	5161025	ArgumentList	prot		5161010	1					
ANR	5161026	Argument	prot		5161010	0					
ANR	5161027	Identifier	prot		5161010	0					
ANR	5161028	Argument	'x'		5161010	1					
ANR	5161029	PrimaryExpression	'x'		5161010	0					
ANR	5161030	CompoundStatement		4:25:51:51	5161010	1					
ANR	5161031	ExpressionStatement	p |= PROT_EXEC	247:2:5652:5666	5161010	0	True				
ANR	5161032	AssignmentExpression	p |= PROT_EXEC		5161010	0		|=			
ANR	5161033	Identifier	p		5161010	0					
ANR	5161034	Identifier	PROT_EXEC		5161010	1					
ANR	5161035	IfStatement	"if ( strchr ( prot , 'r' ) )"		5161010	2					
ANR	5161036	Condition	"strchr ( prot , 'r' )"	249:5:5676:5693	5161010	0	True				
ANR	5161037	CallExpression	"strchr ( prot , 'r' )"		5161010	0					
ANR	5161038	Callee	strchr		5161010	0					
ANR	5161039	Identifier	strchr		5161010	0					
ANR	5161040	ArgumentList	prot		5161010	1					
ANR	5161041	Argument	prot		5161010	0					
ANR	5161042	Identifier	prot		5161010	0					
ANR	5161043	Argument	'r'		5161010	1					
ANR	5161044	PrimaryExpression	'r'		5161010	0					
ANR	5161045	CompoundStatement		7:25:99:99	5161010	1					
ANR	5161046	ExpressionStatement	p |= PROT_READ	250:2:5700:5714	5161010	0	True				
ANR	5161047	AssignmentExpression	p |= PROT_READ		5161010	0		|=			
ANR	5161048	Identifier	p		5161010	0					
ANR	5161049	Identifier	PROT_READ		5161010	1					
ANR	5161050	IfStatement	"if ( strchr ( prot , 'w' ) )"		5161010	3					
ANR	5161051	Condition	"strchr ( prot , 'w' )"	252:5:5724:5741	5161010	0	True				
ANR	5161052	CallExpression	"strchr ( prot , 'w' )"		5161010	0					
ANR	5161053	Callee	strchr		5161010	0					
ANR	5161054	Identifier	strchr		5161010	0					
ANR	5161055	ArgumentList	prot		5161010	1					
ANR	5161056	Argument	prot		5161010	0					
ANR	5161057	Identifier	prot		5161010	0					
ANR	5161058	Argument	'w'		5161010	1					
ANR	5161059	PrimaryExpression	'w'		5161010	0					
ANR	5161060	CompoundStatement		10:25:147:147	5161010	1					
ANR	5161061	ExpressionStatement	p |= PROT_WRITE	253:2:5748:5763	5161010	0	True				
ANR	5161062	AssignmentExpression	p |= PROT_WRITE		5161010	0		|=			
ANR	5161063	Identifier	p		5161010	0					
ANR	5161064	Identifier	PROT_WRITE		5161010	1					
ANR	5161065	IfStatement	"if ( mprotect ( ptr , size , p ) == - 1 )"		5161010	4					
ANR	5161066	Condition	"mprotect ( ptr , size , p ) == - 1"	255:5:5773:5801	5161010	0	True				
ANR	5161067	EqualityExpression	"mprotect ( ptr , size , p ) == - 1"		5161010	0		==			
ANR	5161068	CallExpression	"mprotect ( ptr , size , p )"		5161010	0					
ANR	5161069	Callee	mprotect		5161010	0					
ANR	5161070	Identifier	mprotect		5161010	0					
ANR	5161071	ArgumentList	ptr		5161010	1					
ANR	5161072	Argument	ptr		5161010	0					
ANR	5161073	Identifier	ptr		5161010	0					
ANR	5161074	Argument	size		5161010	1					
ANR	5161075	Identifier	size		5161010	0					
ANR	5161076	Argument	p		5161010	2					
ANR	5161077	Identifier	p		5161010	0					
ANR	5161078	UnaryOperationExpression	- 1		5161010	1					
ANR	5161079	UnaryOperator	-		5161010	0					
ANR	5161080	PrimaryExpression	1		5161010	1					
ANR	5161081	CompoundStatement		13:36:207:207	5161010	1					
ANR	5161082	ReturnStatement	return false ;	256:2:5808:5820	5161010	0	True				
ANR	5161083	Identifier	false		5161010	0					
ANR	5161084	ReturnStatement	return true ;	280:1:6229:6240	5161010	5	True				
ANR	5161085	Identifier	true		5161010	0					
ANR	5161086	ReturnType	R_API int		5161010	1					
ANR	5161087	Identifier	r_mem_protect		5161010	2					
ANR	5161088	ParameterList	"void * ptr , int size , const char * prot"		5161010	3					
ANR	5161089	Parameter	void * ptr	243:24:5557:5565	5161010	0	True				
ANR	5161090	ParameterType	void *		5161010	0					
ANR	5161091	Identifier	ptr		5161010	1					
ANR	5161092	Parameter	int size	243:35:5568:5575	5161010	1	True				
ANR	5161093	ParameterType	int		5161010	0					
ANR	5161094	Identifier	size		5161010	1					
ANR	5161095	Parameter	const char * prot	243:45:5578:5593	5161010	2	True				
ANR	5161096	ParameterType	const char *		5161010	0					
ANR	5161097	Identifier	prot		5161010	1					
ANR	5161098	CFGEntryNode	ENTRY		5161010		True				
ANR	5161099	CFGExitNode	EXIT		5161010		True				
ANR	5161100	Symbol	p		5161010						
ANR	5161101	Symbol	prot		5161010						
ANR	5161102	Symbol	size		5161010						
ANR	5161103	Symbol	PROT_WRITE		5161010						
ANR	5161104	Symbol	mprotect		5161010						
ANR	5161105	Symbol	PROT_EXEC		5161010						
ANR	5161106	Symbol	false		5161010						
ANR	5161107	Symbol	true		5161010						
ANR	5161108	Symbol	strchr		5161010						
ANR	5161109	Symbol	PROT_READ		5161010						
ANR	5161110	Symbol	ptr		5161010						
ANR	5161111	Function	r_mem_dup	283:0:6245:6373							
ANR	5161112	FunctionDef	"r_mem_dup (const void * s , int l)"		5161111	0					
ANR	5161113	CompoundStatement		283:44:6289:6373	5161111	0					
ANR	5161114	IdentifierDeclStatement	void * d = malloc ( l ) ;	284:1:6292:6312	5161111	0	True				
ANR	5161115	IdentifierDecl	* d = malloc ( l )		5161111	0					
ANR	5161116	IdentifierDeclType	void *		5161111	0					
ANR	5161117	Identifier	d		5161111	1					
ANR	5161118	AssignmentExpression	* d = malloc ( l )		5161111	2		=			
ANR	5161119	Identifier	d		5161111	0					
ANR	5161120	CallExpression	malloc ( l )		5161111	1					
ANR	5161121	Callee	malloc		5161111	0					
ANR	5161122	Identifier	malloc		5161111	0					
ANR	5161123	ArgumentList	l		5161111	1					
ANR	5161124	Argument	l		5161111	0					
ANR	5161125	Identifier	l		5161111	0					
ANR	5161126	IfStatement	if ( ! d )		5161111	1					
ANR	5161127	Condition	! d	285:5:6319:6320	5161111	0	True				
ANR	5161128	UnaryOperationExpression	! d		5161111	0					
ANR	5161129	UnaryOperator	!		5161111	0					
ANR	5161130	Identifier	d		5161111	1					
ANR	5161131	CompoundStatement		3:9:33:33	5161111	1					
ANR	5161132	ReturnStatement	return NULL ;	286:2:6327:6338	5161111	0	True				
ANR	5161133	Identifier	NULL		5161111	0					
ANR	5161134	ExpressionStatement	"memcpy ( d , s , l )"	288:1:6344:6360	5161111	2	True				
ANR	5161135	CallExpression	"memcpy ( d , s , l )"		5161111	0					
ANR	5161136	Callee	memcpy		5161111	0					
ANR	5161137	Identifier	memcpy		5161111	0					
ANR	5161138	ArgumentList	d		5161111	1					
ANR	5161139	Argument	d		5161111	0					
ANR	5161140	Identifier	d		5161111	0					
ANR	5161141	Argument	s		5161111	1					
ANR	5161142	Identifier	s		5161111	0					
ANR	5161143	Argument	l		5161111	2					
ANR	5161144	Identifier	l		5161111	0					
ANR	5161145	ReturnStatement	return d ;	289:1:6363:6371	5161111	3	True				
ANR	5161146	Identifier	d		5161111	0					
ANR	5161147	ReturnType	R_API void *		5161111	1					
ANR	5161148	Identifier	r_mem_dup		5161111	2					
ANR	5161149	ParameterList	"const void * s , int l"		5161111	3					
ANR	5161150	Parameter	const void * s	283:22:6267:6279	5161111	0	True				
ANR	5161151	ParameterType	const void *		5161111	0					
ANR	5161152	Identifier	s		5161111	1					
ANR	5161153	Parameter	int l	283:37:6282:6286	5161111	1	True				
ANR	5161154	ParameterType	int		5161111	0					
ANR	5161155	Identifier	l		5161111	1					
ANR	5161156	CFGEntryNode	ENTRY		5161111		True				
ANR	5161157	CFGExitNode	EXIT		5161111		True				
ANR	5161158	Symbol	malloc		5161111						
ANR	5161159	Symbol	s		5161111						
ANR	5161160	Symbol	NULL		5161111						
ANR	5161161	Symbol	d		5161111						
ANR	5161162	Symbol	l		5161111						
ANR	5161163	Function	r_mem_reverse	292:0:6376:6540							
ANR	5161164	FunctionDef	"r_mem_reverse (ut8 * b , int l)"		5161163	0					
ANR	5161165	CompoundStatement		292:40:6416:6540	5161163	0					
ANR	5161166	IdentifierDeclStatement	ut8 tmp ;	293:1:6419:6426	5161163	0	True				
ANR	5161167	IdentifierDecl	tmp		5161163	0					
ANR	5161168	IdentifierDeclType	ut8		5161163	0					
ANR	5161169	Identifier	tmp		5161163	1					
ANR	5161170	IdentifierDeclStatement	"int i , end = l / 2 ;"	294:1:6429:6447	5161163	1	True				
ANR	5161171	IdentifierDecl	i		5161163	0					
ANR	5161172	IdentifierDeclType	int		5161163	0					
ANR	5161173	Identifier	i		5161163	1					
ANR	5161174	IdentifierDecl	end = l / 2		5161163	1					
ANR	5161175	IdentifierDeclType	int		5161163	0					
ANR	5161176	Identifier	end		5161163	1					
ANR	5161177	AssignmentExpression	end = l / 2		5161163	2		=			
ANR	5161178	Identifier	end		5161163	0					
ANR	5161179	MultiplicativeExpression	l / 2		5161163	1		/			
ANR	5161180	Identifier	l		5161163	0					
ANR	5161181	PrimaryExpression	2		5161163	1					
ANR	5161182	ForStatement	for ( i = 0 ; i < end ; i ++ )		5161163	2					
ANR	5161183	ForInit	i = 0 ;	295:6:6455:6460	5161163	0	True				
ANR	5161184	AssignmentExpression	i = 0		5161163	0		=			
ANR	5161185	Identifier	i		5161163	0					
ANR	5161186	PrimaryExpression	0		5161163	1					
ANR	5161187	Condition	i < end	295:13:6462:6468	5161163	1	True				
ANR	5161188	RelationalExpression	i < end		5161163	0		<			
ANR	5161189	Identifier	i		5161163	0					
ANR	5161190	Identifier	end		5161163	1					
ANR	5161191	PostIncDecOperationExpression	i ++	295:22:6471:6473	5161163	2	True				
ANR	5161192	Identifier	i		5161163	0					
ANR	5161193	IncDec	++		5161163	1					
ANR	5161194	CompoundStatement		4:27:59:59	5161163	3					
ANR	5161195	ExpressionStatement	tmp = b [ i ]	296:2:6480:6490	5161163	0	True				
ANR	5161196	AssignmentExpression	tmp = b [ i ]		5161163	0		=			
ANR	5161197	Identifier	tmp		5161163	0					
ANR	5161198	ArrayIndexing	b [ i ]		5161163	1					
ANR	5161199	Identifier	b		5161163	0					
ANR	5161200	Identifier	i		5161163	1					
ANR	5161201	ExpressionStatement	b [ i ] = b [ l - i - 1 ]	297:2:6494:6513	5161163	1	True				
ANR	5161202	AssignmentExpression	b [ i ] = b [ l - i - 1 ]		5161163	0		=			
ANR	5161203	ArrayIndexing	b [ i ]		5161163	0					
ANR	5161204	Identifier	b		5161163	0					
ANR	5161205	Identifier	i		5161163	1					
ANR	5161206	ArrayIndexing	b [ l - i - 1 ]		5161163	1					
ANR	5161207	Identifier	b		5161163	0					
ANR	5161208	AdditiveExpression	l - i - 1		5161163	1		-			
ANR	5161209	Identifier	l		5161163	0					
ANR	5161210	AdditiveExpression	i - 1		5161163	1		-			
ANR	5161211	Identifier	i		5161163	0					
ANR	5161212	PrimaryExpression	1		5161163	1					
ANR	5161213	ExpressionStatement	b [ l - i - 1 ] = tmp	298:2:6517:6535	5161163	2	True				
ANR	5161214	AssignmentExpression	b [ l - i - 1 ] = tmp		5161163	0		=			
ANR	5161215	ArrayIndexing	b [ l - i - 1 ]		5161163	0					
ANR	5161216	Identifier	b		5161163	0					
ANR	5161217	AdditiveExpression	l - i - 1		5161163	1		-			
ANR	5161218	Identifier	l		5161163	0					
ANR	5161219	AdditiveExpression	i - 1		5161163	1		-			
ANR	5161220	Identifier	i		5161163	0					
ANR	5161221	PrimaryExpression	1		5161163	1					
ANR	5161222	Identifier	tmp		5161163	1					
ANR	5161223	ReturnType	R_API void		5161163	1					
ANR	5161224	Identifier	r_mem_reverse		5161163	2					
ANR	5161225	ParameterList	"ut8 * b , int l"		5161163	3					
ANR	5161226	Parameter	ut8 * b	292:25:6401:6406	5161163	0	True				
ANR	5161227	ParameterType	ut8 *		5161163	0					
ANR	5161228	Identifier	b		5161163	1					
ANR	5161229	Parameter	int l	292:33:6409:6413	5161163	1	True				
ANR	5161230	ParameterType	int		5161163	0					
ANR	5161231	Identifier	l		5161163	1					
ANR	5161232	CFGEntryNode	ENTRY		5161163		True				
ANR	5161233	CFGExitNode	EXIT		5161163		True				
ANR	5161234	Symbol	b		5161163						
ANR	5161235	Symbol	* i		5161163						
ANR	5161236	Symbol	tmp		5161163						
ANR	5161237	Symbol	* l		5161163						
ANR	5161238	Symbol	i		5161163						
ANR	5161239	Symbol	end		5161163						
ANR	5161240	Symbol	l		5161163						
ANR	5161241	Symbol	* b		5161163						
ANR	5161242	Function	r_mem_is_printable	302:0:6543:6733							
ANR	5161243	FunctionDef	"r_mem_is_printable (const ut8 * a , int la)"		5161242	0					
ANR	5161244	CompoundStatement		302:52:6595:6733	5161242	0					
ANR	5161245	IdentifierDeclStatement	int i ;	303:1:6598:6603	5161242	0	True				
ANR	5161246	IdentifierDecl	i		5161242	0					
ANR	5161247	IdentifierDeclType	int		5161242	0					
ANR	5161248	Identifier	i		5161242	1					
ANR	5161249	ForStatement	for ( i = 0 ; i < la ; i ++ )		5161242	1					
ANR	5161250	ForInit	i = 0 ;	304:6:6611:6616	5161242	0	True				
ANR	5161251	AssignmentExpression	i = 0		5161242	0		=			
ANR	5161252	Identifier	i		5161242	0					
ANR	5161253	PrimaryExpression	0		5161242	1					
ANR	5161254	Condition	i < la	304:13:6618:6623	5161242	1	True				
ANR	5161255	RelationalExpression	i < la		5161242	0		<			
ANR	5161256	Identifier	i		5161242	0					
ANR	5161257	Identifier	la		5161242	1					
ANR	5161258	PostIncDecOperationExpression	i ++	304:21:6626:6628	5161242	2	True				
ANR	5161259	Identifier	i		5161242	0					
ANR	5161260	IncDec	++		5161242	1					
ANR	5161261	CompoundStatement		3:26:35:35	5161242	3					
ANR	5161262	IfStatement	if ( a [ i ] != '\\n' && a [ i ] != '\\t' && ! IS_PRINTABLE ( a [ i ] ) )		5161242	0					
ANR	5161263	Condition	a [ i ] != '\\n' && a [ i ] != '\\t' && ! IS_PRINTABLE ( a [ i ] )	305:6:6639:6690	5161242	0	True				
ANR	5161264	AndExpression	a [ i ] != '\\n' && a [ i ] != '\\t' && ! IS_PRINTABLE ( a [ i ] )		5161242	0		&&			
ANR	5161265	EqualityExpression	a [ i ] != '\\n'		5161242	0		!=			
ANR	5161266	ArrayIndexing	a [ i ]		5161242	0					
ANR	5161267	Identifier	a		5161242	0					
ANR	5161268	Identifier	i		5161242	1					
ANR	5161269	PrimaryExpression	'\\n'		5161242	1					
ANR	5161270	AndExpression	a [ i ] != '\\t' && ! IS_PRINTABLE ( a [ i ] )		5161242	1		&&			
ANR	5161271	EqualityExpression	a [ i ] != '\\t'		5161242	0		!=			
ANR	5161272	ArrayIndexing	a [ i ]		5161242	0					
ANR	5161273	Identifier	a		5161242	0					
ANR	5161274	Identifier	i		5161242	1					
ANR	5161275	PrimaryExpression	'\\t'		5161242	1					
ANR	5161276	UnaryOperationExpression	! IS_PRINTABLE ( a [ i ] )		5161242	1					
ANR	5161277	UnaryOperator	!		5161242	0					
ANR	5161278	CallExpression	IS_PRINTABLE ( a [ i ] )		5161242	1					
ANR	5161279	Callee	IS_PRINTABLE		5161242	0					
ANR	5161280	Identifier	IS_PRINTABLE		5161242	0					
ANR	5161281	ArgumentList	a [ i ]		5161242	1					
ANR	5161282	Argument	a [ i ]		5161242	0					
ANR	5161283	ArrayIndexing	a [ i ]		5161242	0					
ANR	5161284	Identifier	a		5161242	0					
ANR	5161285	Identifier	i		5161242	1					
ANR	5161286	CompoundStatement		4:60:97:97	5161242	1					
ANR	5161287	ReturnStatement	return false ;	306:3:6698:6710	5161242	0	True				
ANR	5161288	Identifier	false		5161242	0					
ANR	5161289	ReturnStatement	return true ;	309:1:6720:6731	5161242	2	True				
ANR	5161290	Identifier	true		5161242	0					
ANR	5161291	ReturnType	R_API bool		5161242	1					
ANR	5161292	Identifier	r_mem_is_printable		5161242	2					
ANR	5161293	ParameterList	"const ut8 * a , int la"		5161242	3					
ANR	5161294	Parameter	const ut8 * a	302:30:6573:6584	5161242	0	True				
ANR	5161295	ParameterType	const ut8 *		5161242	0					
ANR	5161296	Identifier	a		5161242	1					
ANR	5161297	Parameter	int la	302:44:6587:6592	5161242	1	True				
ANR	5161298	ParameterType	int		5161242	0					
ANR	5161299	Identifier	la		5161242	1					
ANR	5161300	CFGEntryNode	ENTRY		5161242		True				
ANR	5161301	CFGExitNode	EXIT		5161242		True				
ANR	5161302	Symbol	a		5161242						
ANR	5161303	Symbol	* i		5161242						
ANR	5161304	Symbol	IS_PRINTABLE		5161242						
ANR	5161305	Symbol	la		5161242						
ANR	5161306	Symbol	false		5161242						
ANR	5161307	Symbol	true		5161242						
ANR	5161308	Symbol	i		5161242						
ANR	5161309	Symbol	* a		5161242						
ANR	5161310	Function	r_mem_is_zero	312:0:6736:6871							
ANR	5161311	FunctionDef	"r_mem_is_zero (const ut8 * b , int l)"		5161310	0					
ANR	5161312	CompoundStatement		312:46:6782:6871	5161310	0					
ANR	5161313	IdentifierDeclStatement	int i ;	313:1:6785:6790	5161310	0	True				
ANR	5161314	IdentifierDecl	i		5161310	0					
ANR	5161315	IdentifierDeclType	int		5161310	0					
ANR	5161316	Identifier	i		5161310	1					
ANR	5161317	ForStatement	for ( i = 0 ; i < l ; i ++ )		5161310	1					
ANR	5161318	ForInit	i = 0 ;	314:6:6798:6803	5161310	0	True				
ANR	5161319	AssignmentExpression	i = 0		5161310	0		=			
ANR	5161320	Identifier	i		5161310	0					
ANR	5161321	PrimaryExpression	0		5161310	1					
ANR	5161322	Condition	i < l	314:13:6805:6809	5161310	1	True				
ANR	5161323	RelationalExpression	i < l		5161310	0		<			
ANR	5161324	Identifier	i		5161310	0					
ANR	5161325	Identifier	l		5161310	1					
ANR	5161326	PostIncDecOperationExpression	i ++	314:20:6812:6814	5161310	2	True				
ANR	5161327	Identifier	i		5161310	0					
ANR	5161328	IncDec	++		5161310	1					
ANR	5161329	CompoundStatement		3:25:34:34	5161310	3					
ANR	5161330	IfStatement	if ( b [ i ] )		5161310	0					
ANR	5161331	Condition	b [ i ]	315:6:6825:6828	5161310	0	True				
ANR	5161332	ArrayIndexing	b [ i ]		5161310	0					
ANR	5161333	Identifier	b		5161310	0					
ANR	5161334	Identifier	i		5161310	1					
ANR	5161335	CompoundStatement		4:12:48:48	5161310	1					
ANR	5161336	ReturnStatement	return false ;	316:3:6836:6848	5161310	0	True				
ANR	5161337	Identifier	false		5161310	0					
ANR	5161338	ReturnStatement	return true ;	319:1:6858:6869	5161310	2	True				
ANR	5161339	Identifier	true		5161310	0					
ANR	5161340	ReturnType	R_API bool		5161310	1					
ANR	5161341	Identifier	r_mem_is_zero		5161310	2					
ANR	5161342	ParameterList	"const ut8 * b , int l"		5161310	3					
ANR	5161343	Parameter	const ut8 * b	312:25:6761:6772	5161310	0	True				
ANR	5161344	ParameterType	const ut8 *		5161310	0					
ANR	5161345	Identifier	b		5161310	1					
ANR	5161346	Parameter	int l	312:39:6775:6779	5161310	1	True				
ANR	5161347	ParameterType	int		5161310	0					
ANR	5161348	Identifier	l		5161310	1					
ANR	5161349	CFGEntryNode	ENTRY		5161310		True				
ANR	5161350	CFGExitNode	EXIT		5161310		True				
ANR	5161351	Symbol	b		5161310						
ANR	5161352	Symbol	* i		5161310						
ANR	5161353	Symbol	false		5161310						
ANR	5161354	Symbol	true		5161310						
ANR	5161355	Symbol	i		5161310						
ANR	5161356	Symbol	l		5161310						
ANR	5161357	Symbol	* b		5161310						
ANR	5161358	Function	r_mem_alloc	322:0:6874:6932							
ANR	5161359	FunctionDef	r_mem_alloc (int sz)		5161358	0					
ANR	5161360	CompoundStatement		322:32:6906:6932	5161358	0					
ANR	5161361	ReturnStatement	"return calloc ( sz , 1 ) ;"	323:1:6909:6930	5161358	0	True				
ANR	5161362	CallExpression	"calloc ( sz , 1 )"		5161358	0					
ANR	5161363	Callee	calloc		5161358	0					
ANR	5161364	Identifier	calloc		5161358	0					
ANR	5161365	ArgumentList	sz		5161358	1					
ANR	5161366	Argument	sz		5161358	0					
ANR	5161367	Identifier	sz		5161358	0					
ANR	5161368	Argument	1		5161358	1					
ANR	5161369	PrimaryExpression	1		5161358	0					
ANR	5161370	ReturnType	R_API void *		5161358	1					
ANR	5161371	Identifier	r_mem_alloc		5161358	2					
ANR	5161372	ParameterList	int sz		5161358	3					
ANR	5161373	Parameter	int sz	322:24:6898:6903	5161358	0	True				
ANR	5161374	ParameterType	int		5161358	0					
ANR	5161375	Identifier	sz		5161358	1					
ANR	5161376	CFGEntryNode	ENTRY		5161358		True				
ANR	5161377	CFGExitNode	EXIT		5161358		True				
ANR	5161378	Symbol	sz		5161358						
ANR	5161379	Symbol	calloc		5161358						
ANR	5161380	Function	r_mem_free	326:0:6935:6979							
ANR	5161381	FunctionDef	r_mem_free (void * p)		5161380	0					
ANR	5161382	CompoundStatement		326:31:6966:6979	5161380	0					
ANR	5161383	ExpressionStatement	free ( p )	327:1:6969:6977	5161380	0	True				
ANR	5161384	CallExpression	free ( p )		5161380	0					
ANR	5161385	Callee	free		5161380	0					
ANR	5161386	Identifier	free		5161380	0					
ANR	5161387	ArgumentList	p		5161380	1					
ANR	5161388	Argument	p		5161380	0					
ANR	5161389	Identifier	p		5161380	0					
ANR	5161390	ReturnType	R_API void		5161380	1					
ANR	5161391	Identifier	r_mem_free		5161380	2					
ANR	5161392	ParameterList	void * p		5161380	3					
ANR	5161393	Parameter	void * p	326:22:6957:6963	5161380	0	True				
ANR	5161394	ParameterType	void *		5161380	0					
ANR	5161395	Identifier	p		5161380	1					
ANR	5161396	CFGEntryNode	ENTRY		5161380		True				
ANR	5161397	CFGExitNode	EXIT		5161380		True				
ANR	5161398	Symbol	p		5161380						
ANR	5161399	Function	r_mem_memzero	330:0:6982:7284							
ANR	5161400	FunctionDef	"r_mem_memzero (void * dst , size_t l)"		5161399	0					
ANR	5161401	CompoundStatement		330:46:7028:7284	5161399	0					
ANR	5161402	ExpressionStatement	"RtlSecureZeroMemory ( dst , l )"	332:1:7047:7075	5161399	0	True				
ANR	5161403	CallExpression	"RtlSecureZeroMemory ( dst , l )"		5161399	0					
ANR	5161404	Callee	RtlSecureZeroMemory		5161399	0					
ANR	5161405	Identifier	RtlSecureZeroMemory		5161399	0					
ANR	5161406	ArgumentList	dst		5161399	1					
ANR	5161407	Argument	dst		5161399	0					
ANR	5161408	Identifier	dst		5161399	0					
ANR	5161409	Argument	l		5161399	1					
ANR	5161410	Identifier	l		5161399	0					
ANR	5161411	ReturnType	R_API void		5161399	1					
ANR	5161412	Identifier	r_mem_memzero		5161399	2					
ANR	5161413	ParameterList	"void * dst , size_t l"		5161399	3					
ANR	5161414	Parameter	void * dst	330:25:7007:7015	5161399	0	True				
ANR	5161415	ParameterType	void *		5161399	0					
ANR	5161416	Identifier	dst		5161399	1					
ANR	5161417	Parameter	size_t l	330:36:7018:7025	5161399	1	True				
ANR	5161418	ParameterType	size_t		5161399	0					
ANR	5161419	Identifier	l		5161399	1					
ANR	5161420	CFGEntryNode	ENTRY		5161399		True				
ANR	5161421	CFGExitNode	EXIT		5161399		True				
ANR	5161422	Symbol	dst		5161399						
ANR	5161423	Symbol	l		5161399						
ANR	5161424	Function	r_mem_mmap_resize	345:0:7287:7754							
ANR	5161425	FunctionDef	"r_mem_mmap_resize (RMmap * m , ut64 newsize)"		5161424	0					
ANR	5161426	CompoundStatement		345:54:7341:7754	5161424	0					
ANR	5161427	IfStatement	if ( m -> fm != INVALID_HANDLE_VALUE )		5161424	0					
ANR	5161428	Condition	m -> fm != INVALID_HANDLE_VALUE	347:5:7364:7392	5161424	0	True				
ANR	5161429	EqualityExpression	m -> fm != INVALID_HANDLE_VALUE		5161424	0		!=			
ANR	5161430	PtrMemberAccess	m -> fm		5161424	0					
ANR	5161431	Identifier	m		5161424	0					
ANR	5161432	Identifier	fm		5161424	1					
ANR	5161433	Identifier	INVALID_HANDLE_VALUE		5161424	1					
ANR	5161434	CompoundStatement		3:36:53:53	5161424	1					
ANR	5161435	ExpressionStatement	CloseHandle ( m -> fm )	348:2:7399:7418	5161424	0	True				
ANR	5161436	CallExpression	CloseHandle ( m -> fm )		5161424	0					
ANR	5161437	Callee	CloseHandle		5161424	0					
ANR	5161438	Identifier	CloseHandle		5161424	0					
ANR	5161439	ArgumentList	m -> fm		5161424	1					
ANR	5161440	Argument	m -> fm		5161424	0					
ANR	5161441	PtrMemberAccess	m -> fm		5161424	0					
ANR	5161442	Identifier	m		5161424	0					
ANR	5161443	Identifier	fm		5161424	1					
ANR	5161444	IfStatement	if ( m -> fh != INVALID_HANDLE_VALUE )		5161424	1					
ANR	5161445	Condition	m -> fh != INVALID_HANDLE_VALUE	350:5:7428:7456	5161424	0	True				
ANR	5161446	EqualityExpression	m -> fh != INVALID_HANDLE_VALUE		5161424	0		!=			
ANR	5161447	PtrMemberAccess	m -> fh		5161424	0					
ANR	5161448	Identifier	m		5161424	0					
ANR	5161449	Identifier	fh		5161424	1					
ANR	5161450	Identifier	INVALID_HANDLE_VALUE		5161424	1					
ANR	5161451	CompoundStatement		6:36:117:117	5161424	1					
ANR	5161452	ExpressionStatement	CloseHandle ( m -> fh )	351:2:7463:7482	5161424	0	True				
ANR	5161453	CallExpression	CloseHandle ( m -> fh )		5161424	0					
ANR	5161454	Callee	CloseHandle		5161424	0					
ANR	5161455	Identifier	CloseHandle		5161424	0					
ANR	5161456	ArgumentList	m -> fh		5161424	1					
ANR	5161457	Argument	m -> fh		5161424	0					
ANR	5161458	PtrMemberAccess	m -> fh		5161424	0					
ANR	5161459	Identifier	m		5161424	0					
ANR	5161460	Identifier	fh		5161424	1					
ANR	5161461	IfStatement	if ( m -> buf )		5161424	2					
ANR	5161462	Condition	m -> buf	353:5:7492:7497	5161424	0	True				
ANR	5161463	PtrMemberAccess	m -> buf		5161424	0					
ANR	5161464	Identifier	m		5161424	0					
ANR	5161465	Identifier	buf		5161424	1					
ANR	5161466	CompoundStatement		9:13:158:158	5161424	1					
ANR	5161467	ExpressionStatement	UnmapViewOfFile ( m -> buf )	354:2:7504:7528	5161424	0	True				
ANR	5161468	CallExpression	UnmapViewOfFile ( m -> buf )		5161424	0					
ANR	5161469	Callee	UnmapViewOfFile		5161424	0					
ANR	5161470	Identifier	UnmapViewOfFile		5161424	0					
ANR	5161471	ArgumentList	m -> buf		5161424	1					
ANR	5161472	Argument	m -> buf		5161424	0					
ANR	5161473	PtrMemberAccess	m -> buf		5161424	0					
ANR	5161474	Identifier	m		5161424	0					
ANR	5161475	Identifier	buf		5161424	1					
ANR	5161476	IfStatement	"if ( ! r_sys_truncate ( m -> filename , newsize ) )"		5161424	3					
ANR	5161477	Condition	"! r_sys_truncate ( m -> filename , newsize )"	361:5:7615:7652	5161424	0	True				
ANR	5161478	UnaryOperationExpression	"! r_sys_truncate ( m -> filename , newsize )"		5161424	0					
ANR	5161479	UnaryOperator	!		5161424	0					
ANR	5161480	CallExpression	"r_sys_truncate ( m -> filename , newsize )"		5161424	1					
ANR	5161481	Callee	r_sys_truncate		5161424	0					
ANR	5161482	Identifier	r_sys_truncate		5161424	0					
ANR	5161483	ArgumentList	m -> filename		5161424	1					
ANR	5161484	Argument	m -> filename		5161424	0					
ANR	5161485	PtrMemberAccess	m -> filename		5161424	0					
ANR	5161486	Identifier	m		5161424	0					
ANR	5161487	Identifier	filename		5161424	1					
ANR	5161488	Argument	newsize		5161424	1					
ANR	5161489	Identifier	newsize		5161424	0					
ANR	5161490	CompoundStatement		17:45:313:313	5161424	1					
ANR	5161491	ReturnStatement	return NULL ;	362:2:7659:7670	5161424	0	True				
ANR	5161492	Identifier	NULL		5161424	0					
ANR	5161493	ExpressionStatement	m -> len = newsize	365:1:7677:7693	5161424	4	True				
ANR	5161494	AssignmentExpression	m -> len = newsize		5161424	0		=			
ANR	5161495	PtrMemberAccess	m -> len		5161424	0					
ANR	5161496	Identifier	m		5161424	0					
ANR	5161497	Identifier	len		5161424	1					
ANR	5161498	Identifier	newsize		5161424	1					
ANR	5161499	ExpressionStatement	"r_file_mmap_arch ( m , m -> filename , m -> fd )"	366:1:7696:7736	5161424	5	True				
ANR	5161500	CallExpression	"r_file_mmap_arch ( m , m -> filename , m -> fd )"		5161424	0					
ANR	5161501	Callee	r_file_mmap_arch		5161424	0					
ANR	5161502	Identifier	r_file_mmap_arch		5161424	0					
ANR	5161503	ArgumentList	m		5161424	1					
ANR	5161504	Argument	m		5161424	0					
ANR	5161505	Identifier	m		5161424	0					
ANR	5161506	Argument	m -> filename		5161424	1					
ANR	5161507	PtrMemberAccess	m -> filename		5161424	0					
ANR	5161508	Identifier	m		5161424	0					
ANR	5161509	Identifier	filename		5161424	1					
ANR	5161510	Argument	m -> fd		5161424	2					
ANR	5161511	PtrMemberAccess	m -> fd		5161424	0					
ANR	5161512	Identifier	m		5161424	0					
ANR	5161513	Identifier	fd		5161424	1					
ANR	5161514	ReturnStatement	return m -> buf ;	367:1:7739:7752	5161424	6	True				
ANR	5161515	PtrMemberAccess	m -> buf		5161424	0					
ANR	5161516	Identifier	m		5161424	0					
ANR	5161517	Identifier	buf		5161424	1					
ANR	5161518	ReturnType	R_API void *		5161424	1					
ANR	5161519	Identifier	r_mem_mmap_resize		5161424	2					
ANR	5161520	ParameterList	"RMmap * m , ut64 newsize"		5161424	3					
ANR	5161521	Parameter	RMmap * m	345:30:7317:7324	5161424	0	True				
ANR	5161522	ParameterType	RMmap *		5161424	0					
ANR	5161523	Identifier	m		5161424	1					
ANR	5161524	Parameter	ut64 newsize	345:40:7327:7338	5161424	1	True				
ANR	5161525	ParameterType	ut64		5161424	0					
ANR	5161526	Identifier	newsize		5161424	1					
ANR	5161527	CFGEntryNode	ENTRY		5161424		True				
ANR	5161528	CFGExitNode	EXIT		5161424		True				
ANR	5161529	Symbol	m -> len		5161424						
ANR	5161530	Symbol	NULL		5161424						
ANR	5161531	Symbol	m -> fd		5161424						
ANR	5161532	Symbol	* m		5161424						
ANR	5161533	Symbol	m -> fh		5161424						
ANR	5161534	Symbol	newsize		5161424						
ANR	5161535	Symbol	m -> fm		5161424						
ANR	5161536	Symbol	r_sys_truncate		5161424						
ANR	5161537	Symbol	m -> buf		5161424						
ANR	5161538	Symbol	m		5161424						
ANR	5161539	Symbol	INVALID_HANDLE_VALUE		5161424						
ANR	5161540	Symbol	m -> filename		5161424						
