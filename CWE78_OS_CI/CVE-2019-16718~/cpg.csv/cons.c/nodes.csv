command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1078987	File	data/converged/CVE-2019-16718~_radare2/cons.c								
ANR	1078988	DeclStmt									
ANR	1078989	Decl							x	x ( r_cons )	R_LIB_VERSION
ANR	1078990	DeclStmt									
ANR	1078991	Decl							RConsContext	RConsContext	r_cons_context_default
ANR	1078992	DeclStmt									
ANR	1078993	Decl							RCons	RCons	r_cons_instance
ANR	1078994	ClassDef	<unnamed>	25:8:541:621							
ANR	1078995	DeclStmt									
ANR	1078996	Decl							char	char *	buf
ANR	1078997	DeclStmt									
ANR	1078998	Decl							int	int	buf_len
ANR	1078999	DeclStmt									
ANR	1079000	Decl							int	int	buf_size
ANR	1079001	DeclStmt									
ANR	1079002	Decl							RConsGrep	RConsGrep *	grep
ANR	1079003	DeclStmt									
ANR	1079004	Decl									RConsStack
ANR	1079005	ClassDef	<unnamed>	32:8:632:731							
ANR	1079006	DeclStmt									
ANR	1079007	Decl							bool	bool	breaked
ANR	1079008	DeclStmt									
ANR	1079009	Decl							RConsEvent	RConsEvent	event_interrupt
ANR	1079010	DeclStmt									
ANR	1079011	Decl							void	void *	event_interrupt_data
ANR	1079012	DeclStmt									
ANR	1079013	Decl									RConsBreakStack
ANR	1079014	DeclStmt									
ANR	1079015	Decl							void	void ( RConsGrep * grep )	cons_grep_reset
ANR	1079016	Function	break_stack_free	40:0:781:879							
ANR	1079017	FunctionDef	break_stack_free (void * ptr)		1079016	0					
ANR	1079018	CompoundStatement		40:40:821:879	1079016	0					
ANR	1079019	IdentifierDeclStatement	RConsBreakStack * b = ( RConsBreakStack * ) ptr ;	41:1:824:866	1079016	0	True				
ANR	1079020	IdentifierDecl	* b = ( RConsBreakStack * ) ptr		1079016	0					
ANR	1079021	IdentifierDeclType	RConsBreakStack *		1079016	0					
ANR	1079022	Identifier	b		1079016	1					
ANR	1079023	AssignmentExpression	* b = ( RConsBreakStack * ) ptr		1079016	2		=			
ANR	1079024	Identifier	b		1079016	0					
ANR	1079025	CastExpression	( RConsBreakStack * ) ptr		1079016	1					
ANR	1079026	CastTarget	RConsBreakStack *		1079016	0					
ANR	1079027	Identifier	ptr		1079016	1					
ANR	1079028	ExpressionStatement	free ( b )	42:1:869:877	1079016	1	True				
ANR	1079029	CallExpression	free ( b )		1079016	0					
ANR	1079030	Callee	free		1079016	0					
ANR	1079031	Identifier	free		1079016	0					
ANR	1079032	ArgumentList	b		1079016	1					
ANR	1079033	Argument	b		1079016	0					
ANR	1079034	Identifier	b		1079016	0					
ANR	1079035	ReturnType	static void		1079016	1					
ANR	1079036	Identifier	break_stack_free		1079016	2					
ANR	1079037	ParameterList	void * ptr		1079016	3					
ANR	1079038	Parameter	void * ptr	40:29:810:818	1079016	0	True				
ANR	1079039	ParameterType	void *		1079016	0					
ANR	1079040	Identifier	ptr		1079016	1					
ANR	1079041	CFGEntryNode	ENTRY		1079016		True				
ANR	1079042	CFGExitNode	EXIT		1079016		True				
ANR	1079043	Symbol	b		1079016						
ANR	1079044	Symbol	ptr		1079016						
ANR	1079045	Function	cons_stack_free	45:0:882:1071							
ANR	1079046	FunctionDef	cons_stack_free (void * ptr)		1079045	0					
ANR	1079047	CompoundStatement		45:39:921:1071	1079045	0					
ANR	1079048	IdentifierDeclStatement	RConsStack * s = ( RConsStack * ) ptr ;	46:1:924:957	1079045	0	True				
ANR	1079049	IdentifierDecl	* s = ( RConsStack * ) ptr		1079045	0					
ANR	1079050	IdentifierDeclType	RConsStack *		1079045	0					
ANR	1079051	Identifier	s		1079045	1					
ANR	1079052	AssignmentExpression	* s = ( RConsStack * ) ptr		1079045	2		=			
ANR	1079053	Identifier	s		1079045	0					
ANR	1079054	CastExpression	( RConsStack * ) ptr		1079045	1					
ANR	1079055	CastTarget	RConsStack *		1079045	0					
ANR	1079056	Identifier	ptr		1079045	1					
ANR	1079057	ExpressionStatement	free ( s -> buf )	47:1:960:973	1079045	1	True				
ANR	1079058	CallExpression	free ( s -> buf )		1079045	0					
ANR	1079059	Callee	free		1079045	0					
ANR	1079060	Identifier	free		1079045	0					
ANR	1079061	ArgumentList	s -> buf		1079045	1					
ANR	1079062	Argument	s -> buf		1079045	0					
ANR	1079063	PtrMemberAccess	s -> buf		1079045	0					
ANR	1079064	Identifier	s		1079045	0					
ANR	1079065	Identifier	buf		1079045	1					
ANR	1079066	IfStatement	if ( s -> grep )		1079045	2					
ANR	1079067	Condition	s -> grep	48:5:980:986	1079045	0	True				
ANR	1079068	PtrMemberAccess	s -> grep		1079045	0					
ANR	1079069	Identifier	s		1079045	0					
ANR	1079070	Identifier	grep		1079045	1					
ANR	1079071	CompoundStatement		4:14:67:67	1079045	1					
ANR	1079072	ExpressionStatement	R_FREE ( s -> grep -> str )	49:2:993:1014	1079045	0	True				
ANR	1079073	CallExpression	R_FREE ( s -> grep -> str )		1079045	0					
ANR	1079074	Callee	R_FREE		1079045	0					
ANR	1079075	Identifier	R_FREE		1079045	0					
ANR	1079076	ArgumentList	s -> grep -> str		1079045	1					
ANR	1079077	Argument	s -> grep -> str		1079045	0					
ANR	1079078	PtrMemberAccess	s -> grep -> str		1079045	0					
ANR	1079079	PtrMemberAccess	s -> grep		1079045	0					
ANR	1079080	Identifier	s		1079045	0					
ANR	1079081	Identifier	grep		1079045	1					
ANR	1079082	Identifier	str		1079045	1					
ANR	1079083	ExpressionStatement	CTX ( grep . str ) = NULL	50:2:1018:1038	1079045	1	True				
ANR	1079084	AssignmentExpression	CTX ( grep . str ) = NULL		1079045	0		=			
ANR	1079085	CallExpression	CTX ( grep . str )		1079045	0					
ANR	1079086	Callee	CTX		1079045	0					
ANR	1079087	Identifier	CTX		1079045	0					
ANR	1079088	ArgumentList	grep . str		1079045	1					
ANR	1079089	Argument	grep . str		1079045	0					
ANR	1079090	MemberAccess	grep . str		1079045	0					
ANR	1079091	Identifier	grep		1079045	0					
ANR	1079092	Identifier	str		1079045	1					
ANR	1079093	Identifier	NULL		1079045	1					
ANR	1079094	ExpressionStatement	free ( s -> grep )	52:1:1044:1058	1079045	3	True				
ANR	1079095	CallExpression	free ( s -> grep )		1079045	0					
ANR	1079096	Callee	free		1079045	0					
ANR	1079097	Identifier	free		1079045	0					
ANR	1079098	ArgumentList	s -> grep		1079045	1					
ANR	1079099	Argument	s -> grep		1079045	0					
ANR	1079100	PtrMemberAccess	s -> grep		1079045	0					
ANR	1079101	Identifier	s		1079045	0					
ANR	1079102	Identifier	grep		1079045	1					
ANR	1079103	ExpressionStatement	free ( s )	53:1:1061:1069	1079045	4	True				
ANR	1079104	CallExpression	free ( s )		1079045	0					
ANR	1079105	Callee	free		1079045	0					
ANR	1079106	Identifier	free		1079045	0					
ANR	1079107	ArgumentList	s		1079045	1					
ANR	1079108	Argument	s		1079045	0					
ANR	1079109	Identifier	s		1079045	0					
ANR	1079110	ReturnType	static void		1079045	1					
ANR	1079111	Identifier	cons_stack_free		1079045	2					
ANR	1079112	ParameterList	void * ptr		1079045	3					
ANR	1079113	Parameter	void * ptr	45:28:910:918	1079045	0	True				
ANR	1079114	ParameterType	void *		1079045	0					
ANR	1079115	Identifier	ptr		1079045	1					
ANR	1079116	CFGEntryNode	ENTRY		1079045		True				
ANR	1079117	CFGExitNode	EXIT		1079045		True				
ANR	1079118	Symbol	s		1079045						
ANR	1079119	Symbol	s -> buf		1079045						
ANR	1079120	Symbol	s -> grep		1079045						
ANR	1079121	Symbol	NULL		1079045						
ANR	1079122	Symbol	CTX		1079045						
ANR	1079123	Symbol	grep		1079045						
ANR	1079124	Symbol	* * s		1079045						
ANR	1079125	Symbol	* s		1079045						
ANR	1079126	Symbol	s -> grep -> str		1079045						
ANR	1079127	Symbol	* s -> grep		1079045						
ANR	1079128	Symbol	ptr		1079045						
ANR	1079129	Symbol	grep . str		1079045						
ANR	1079130	Function	cons_stack_dump	56:0:1074:1781							
ANR	1079131	FunctionDef	cons_stack_dump (bool recreate)		1079130	0					
ANR	1079132	CompoundStatement		56:50:1124:1781	1079130	0					
ANR	1079133	IdentifierDeclStatement	RConsStack * data = R_NEW0 ( RConsStack ) ;	57:1:1127:1165	1079130	0	True				
ANR	1079134	IdentifierDecl	* data = R_NEW0 ( RConsStack )		1079130	0					
ANR	1079135	IdentifierDeclType	RConsStack *		1079130	0					
ANR	1079136	Identifier	data		1079130	1					
ANR	1079137	AssignmentExpression	* data = R_NEW0 ( RConsStack )		1079130	2		=			
ANR	1079138	Identifier	data		1079130	0					
ANR	1079139	CallExpression	R_NEW0 ( RConsStack )		1079130	1					
ANR	1079140	Callee	R_NEW0		1079130	0					
ANR	1079141	Identifier	R_NEW0		1079130	0					
ANR	1079142	ArgumentList	RConsStack		1079130	1					
ANR	1079143	Argument	RConsStack		1079130	0					
ANR	1079144	Identifier	RConsStack		1079130	0					
ANR	1079145	IfStatement	if ( data )		1079130	1					
ANR	1079146	Condition	data	58:5:1172:1175	1079130	0	True				
ANR	1079147	Identifier	data		1079130	0					
ANR	1079148	CompoundStatement		3:11:53:53	1079130	1					
ANR	1079149	IfStatement	if ( CTX ( buffer ) )		1079130	0					
ANR	1079150	Condition	CTX ( buffer )	59:6:1186:1197	1079130	0	True				
ANR	1079151	CallExpression	CTX ( buffer )		1079130	0					
ANR	1079152	Callee	CTX		1079130	0					
ANR	1079153	Identifier	CTX		1079130	0					
ANR	1079154	ArgumentList	buffer		1079130	1					
ANR	1079155	Argument	buffer		1079130	0					
ANR	1079156	Identifier	buffer		1079130	0					
ANR	1079157	CompoundStatement		4:20:75:75	1079130	1					
ANR	1079158	ExpressionStatement	data -> buf = CTX ( buffer )	60:3:1205:1229	1079130	0	True				
ANR	1079159	AssignmentExpression	data -> buf = CTX ( buffer )		1079130	0		=			
ANR	1079160	PtrMemberAccess	data -> buf		1079130	0					
ANR	1079161	Identifier	data		1079130	0					
ANR	1079162	Identifier	buf		1079130	1					
ANR	1079163	CallExpression	CTX ( buffer )		1079130	1					
ANR	1079164	Callee	CTX		1079130	0					
ANR	1079165	Identifier	CTX		1079130	0					
ANR	1079166	ArgumentList	buffer		1079130	1					
ANR	1079167	Argument	buffer		1079130	0					
ANR	1079168	Identifier	buffer		1079130	0					
ANR	1079169	ExpressionStatement	data -> buf_len = CTX ( buffer_len )	61:3:1234:1266	1079130	1	True				
ANR	1079170	AssignmentExpression	data -> buf_len = CTX ( buffer_len )		1079130	0		=			
ANR	1079171	PtrMemberAccess	data -> buf_len		1079130	0					
ANR	1079172	Identifier	data		1079130	0					
ANR	1079173	Identifier	buf_len		1079130	1					
ANR	1079174	CallExpression	CTX ( buffer_len )		1079130	1					
ANR	1079175	Callee	CTX		1079130	0					
ANR	1079176	Identifier	CTX		1079130	0					
ANR	1079177	ArgumentList	buffer_len		1079130	1					
ANR	1079178	Argument	buffer_len		1079130	0					
ANR	1079179	Identifier	buffer_len		1079130	0					
ANR	1079180	ExpressionStatement	data -> buf_size = CTX ( buffer_sz )	62:3:1271:1303	1079130	2	True				
ANR	1079181	AssignmentExpression	data -> buf_size = CTX ( buffer_sz )		1079130	0		=			
ANR	1079182	PtrMemberAccess	data -> buf_size		1079130	0					
ANR	1079183	Identifier	data		1079130	0					
ANR	1079184	Identifier	buf_size		1079130	1					
ANR	1079185	CallExpression	CTX ( buffer_sz )		1079130	1					
ANR	1079186	Callee	CTX		1079130	0					
ANR	1079187	Identifier	CTX		1079130	0					
ANR	1079188	ArgumentList	buffer_sz		1079130	1					
ANR	1079189	Argument	buffer_sz		1079130	0					
ANR	1079190	Identifier	buffer_sz		1079130	0					
ANR	1079191	ExpressionStatement	data -> grep = R_NEW0 ( RConsGrep )	64:2:1311:1342	1079130	1	True				
ANR	1079192	AssignmentExpression	data -> grep = R_NEW0 ( RConsGrep )		1079130	0		=			
ANR	1079193	PtrMemberAccess	data -> grep		1079130	0					
ANR	1079194	Identifier	data		1079130	0					
ANR	1079195	Identifier	grep		1079130	1					
ANR	1079196	CallExpression	R_NEW0 ( RConsGrep )		1079130	1					
ANR	1079197	Callee	R_NEW0		1079130	0					
ANR	1079198	Identifier	R_NEW0		1079130	0					
ANR	1079199	ArgumentList	RConsGrep		1079130	1					
ANR	1079200	Argument	RConsGrep		1079130	0					
ANR	1079201	Identifier	RConsGrep		1079130	0					
ANR	1079202	IfStatement	if ( data -> grep )		1079130	2					
ANR	1079203	Condition	data -> grep	65:6:1350:1359	1079130	0	True				
ANR	1079204	PtrMemberAccess	data -> grep		1079130	0					
ANR	1079205	Identifier	data		1079130	0					
ANR	1079206	Identifier	grep		1079130	1					
ANR	1079207	CompoundStatement		10:18:237:237	1079130	1					
ANR	1079208	ExpressionStatement	"memcpy ( data -> grep , & I . context -> grep , sizeof ( RConsGrep ) )"	66:3:1367:1424	1079130	0	True				
ANR	1079209	CallExpression	"memcpy ( data -> grep , & I . context -> grep , sizeof ( RConsGrep ) )"		1079130	0					
ANR	1079210	Callee	memcpy		1079130	0					
ANR	1079211	Identifier	memcpy		1079130	0					
ANR	1079212	ArgumentList	data -> grep		1079130	1					
ANR	1079213	Argument	data -> grep		1079130	0					
ANR	1079214	PtrMemberAccess	data -> grep		1079130	0					
ANR	1079215	Identifier	data		1079130	0					
ANR	1079216	Identifier	grep		1079130	1					
ANR	1079217	Argument	& I . context -> grep		1079130	1					
ANR	1079218	UnaryOperationExpression	& I . context -> grep		1079130	0					
ANR	1079219	UnaryOperator	&		1079130	0					
ANR	1079220	PtrMemberAccess	I . context -> grep		1079130	1					
ANR	1079221	MemberAccess	I . context		1079130	0					
ANR	1079222	Identifier	I		1079130	0					
ANR	1079223	Identifier	context		1079130	1					
ANR	1079224	Identifier	grep		1079130	1					
ANR	1079225	Argument	sizeof ( RConsGrep )		1079130	2					
ANR	1079226	SizeofExpression	sizeof ( RConsGrep )		1079130	0					
ANR	1079227	Sizeof	sizeof		1079130	0					
ANR	1079228	SizeofOperand	RConsGrep		1079130	1					
ANR	1079229	IfStatement	if ( I . context -> grep . str )		1079130	1					
ANR	1079230	Condition	I . context -> grep . str	67:7:1433:1451	1079130	0	True				
ANR	1079231	MemberAccess	I . context -> grep . str		1079130	0					
ANR	1079232	PtrMemberAccess	I . context -> grep		1079130	0					
ANR	1079233	MemberAccess	I . context		1079130	0					
ANR	1079234	Identifier	I		1079130	0					
ANR	1079235	Identifier	context		1079130	1					
ANR	1079236	Identifier	grep		1079130	1					
ANR	1079237	Identifier	str		1079130	1					
ANR	1079238	CompoundStatement		12:28:329:329	1079130	1					
ANR	1079239	ExpressionStatement	data -> grep -> str = strdup ( I . context -> grep . str )	68:4:1460:1506	1079130	0	True				
ANR	1079240	AssignmentExpression	data -> grep -> str = strdup ( I . context -> grep . str )		1079130	0		=			
ANR	1079241	PtrMemberAccess	data -> grep -> str		1079130	0					
ANR	1079242	PtrMemberAccess	data -> grep		1079130	0					
ANR	1079243	Identifier	data		1079130	0					
ANR	1079244	Identifier	grep		1079130	1					
ANR	1079245	Identifier	str		1079130	1					
ANR	1079246	CallExpression	strdup ( I . context -> grep . str )		1079130	1					
ANR	1079247	Callee	strdup		1079130	0					
ANR	1079248	Identifier	strdup		1079130	0					
ANR	1079249	ArgumentList	I . context -> grep . str		1079130	1					
ANR	1079250	Argument	I . context -> grep . str		1079130	0					
ANR	1079251	MemberAccess	I . context -> grep . str		1079130	0					
ANR	1079252	PtrMemberAccess	I . context -> grep		1079130	0					
ANR	1079253	MemberAccess	I . context		1079130	0					
ANR	1079254	Identifier	I		1079130	0					
ANR	1079255	Identifier	context		1079130	1					
ANR	1079256	Identifier	grep		1079130	1					
ANR	1079257	Identifier	str		1079130	1					
ANR	1079258	IfStatement	if ( recreate && I . context -> buffer_sz > 0 )		1079130	3					
ANR	1079259	Condition	recreate && I . context -> buffer_sz > 0	71:6:1523:1558	1079130	0	True				
ANR	1079260	AndExpression	recreate && I . context -> buffer_sz > 0		1079130	0		&&			
ANR	1079261	Identifier	recreate		1079130	0					
ANR	1079262	RelationalExpression	I . context -> buffer_sz > 0		1079130	1		>			
ANR	1079263	PtrMemberAccess	I . context -> buffer_sz		1079130	0					
ANR	1079264	MemberAccess	I . context		1079130	0					
ANR	1079265	Identifier	I		1079130	0					
ANR	1079266	Identifier	context		1079130	1					
ANR	1079267	Identifier	buffer_sz		1079130	1					
ANR	1079268	PrimaryExpression	0		1079130	1					
ANR	1079269	CompoundStatement		16:44:436:436	1079130	1					
ANR	1079270	ExpressionStatement	I . context -> buffer = malloc ( I . context -> buffer_sz )	72:3:1566:1615	1079130	0	True				
ANR	1079271	AssignmentExpression	I . context -> buffer = malloc ( I . context -> buffer_sz )		1079130	0		=			
ANR	1079272	PtrMemberAccess	I . context -> buffer		1079130	0					
ANR	1079273	MemberAccess	I . context		1079130	0					
ANR	1079274	Identifier	I		1079130	0					
ANR	1079275	Identifier	context		1079130	1					
ANR	1079276	Identifier	buffer		1079130	1					
ANR	1079277	CallExpression	malloc ( I . context -> buffer_sz )		1079130	1					
ANR	1079278	Callee	malloc		1079130	0					
ANR	1079279	Identifier	malloc		1079130	0					
ANR	1079280	ArgumentList	I . context -> buffer_sz		1079130	1					
ANR	1079281	Argument	I . context -> buffer_sz		1079130	0					
ANR	1079282	PtrMemberAccess	I . context -> buffer_sz		1079130	0					
ANR	1079283	MemberAccess	I . context		1079130	0					
ANR	1079284	Identifier	I		1079130	0					
ANR	1079285	Identifier	context		1079130	1					
ANR	1079286	Identifier	buffer_sz		1079130	1					
ANR	1079287	IfStatement	if ( ! I . context -> buffer )		1079130	1					
ANR	1079288	Condition	! I . context -> buffer	73:7:1624:1641	1079130	0	True				
ANR	1079289	UnaryOperationExpression	! I . context -> buffer		1079130	0					
ANR	1079290	UnaryOperator	!		1079130	0					
ANR	1079291	PtrMemberAccess	I . context -> buffer		1079130	1					
ANR	1079292	MemberAccess	I . context		1079130	0					
ANR	1079293	Identifier	I		1079130	0					
ANR	1079294	Identifier	context		1079130	1					
ANR	1079295	Identifier	buffer		1079130	1					
ANR	1079296	CompoundStatement		18:27:519:519	1079130	1					
ANR	1079297	ExpressionStatement	I . context -> buffer = data -> buf	74:4:1650:1679	1079130	0	True				
ANR	1079298	AssignmentExpression	I . context -> buffer = data -> buf		1079130	0		=			
ANR	1079299	PtrMemberAccess	I . context -> buffer		1079130	0					
ANR	1079300	MemberAccess	I . context		1079130	0					
ANR	1079301	Identifier	I		1079130	0					
ANR	1079302	Identifier	context		1079130	1					
ANR	1079303	Identifier	buffer		1079130	1					
ANR	1079304	PtrMemberAccess	data -> buf		1079130	1					
ANR	1079305	Identifier	data		1079130	0					
ANR	1079306	Identifier	buf		1079130	1					
ANR	1079307	ExpressionStatement	free ( data )	75:4:1685:1696	1079130	1	True				
ANR	1079308	CallExpression	free ( data )		1079130	0					
ANR	1079309	Callee	free		1079130	0					
ANR	1079310	Identifier	free		1079130	0					
ANR	1079311	ArgumentList	data		1079130	1					
ANR	1079312	Argument	data		1079130	0					
ANR	1079313	Identifier	data		1079130	0					
ANR	1079314	ReturnStatement	return NULL ;	76:4:1702:1713	1079130	2	True				
ANR	1079315	Identifier	NULL		1079130	0					
ANR	1079316	ElseStatement	else		1079130	0					
ANR	1079317	CompoundStatement		23:9:604:604	1079130	0					
ANR	1079318	ExpressionStatement	I . context -> buffer = NULL	79:3:1734:1758	1079130	0	True				
ANR	1079319	AssignmentExpression	I . context -> buffer = NULL		1079130	0		=			
ANR	1079320	PtrMemberAccess	I . context -> buffer		1079130	0					
ANR	1079321	MemberAccess	I . context		1079130	0					
ANR	1079322	Identifier	I		1079130	0					
ANR	1079323	Identifier	context		1079130	1					
ANR	1079324	Identifier	buffer		1079130	1					
ANR	1079325	Identifier	NULL		1079130	1					
ANR	1079326	ReturnStatement	return data ;	82:1:1768:1779	1079130	2	True				
ANR	1079327	Identifier	data		1079130	0					
ANR	1079328	ReturnType	static RConsStack *		1079130	1					
ANR	1079329	Identifier	cons_stack_dump		1079130	2					
ANR	1079330	ParameterList	bool recreate		1079130	3					
ANR	1079331	Parameter	bool recreate	56:35:1109:1121	1079130	0	True				
ANR	1079332	ParameterType	bool		1079130	0					
ANR	1079333	Identifier	recreate		1079130	1					
ANR	1079334	CFGEntryNode	ENTRY		1079130		True				
ANR	1079335	CFGExitNode	EXIT		1079130		True				
ANR	1079336	Symbol	RConsGrep		1079130						
ANR	1079337	Symbol	I . context -> grep		1079130						
ANR	1079338	Symbol	* * data		1079130						
ANR	1079339	Symbol	data		1079130						
ANR	1079340	Symbol	CTX		1079130						
ANR	1079341	Symbol	* data -> grep		1079130						
ANR	1079342	Symbol	I		1079130						
ANR	1079343	Symbol	data -> buf_size		1079130						
ANR	1079344	Symbol	* I		1079130						
ANR	1079345	Symbol	buffer		1079130						
ANR	1079346	Symbol	data -> grep -> str		1079130						
ANR	1079347	Symbol	RConsStack		1079130						
ANR	1079348	Symbol	malloc		1079130						
ANR	1079349	Symbol	NULL		1079130						
ANR	1079350	Symbol	data -> buf_len		1079130						
ANR	1079351	Symbol	& I . context -> grep		1079130						
ANR	1079352	Symbol	I . context		1079130						
ANR	1079353	Symbol	buffer_sz		1079130						
ANR	1079354	Symbol	recreate		1079130						
ANR	1079355	Symbol	data -> grep		1079130						
ANR	1079356	Symbol	R_NEW0		1079130						
ANR	1079357	Symbol	* I . context		1079130						
ANR	1079358	Symbol	buffer_len		1079130						
ANR	1079359	Symbol	data -> buf		1079130						
ANR	1079360	Symbol	I . context -> buffer_sz		1079130						
ANR	1079361	Symbol	I . context -> buffer		1079130						
ANR	1079362	Symbol	strdup		1079130						
ANR	1079363	Symbol	* data		1079130						
ANR	1079364	Symbol	I . context -> grep . str		1079130						
ANR	1079365	Function	cons_stack_load	85:0:1784:2148							
ANR	1079366	FunctionDef	"cons_stack_load (RConsStack * data , bool free_current)"		1079365	0					
ANR	1079367	CompoundStatement		85:65:1849:2148	1079365	0					
ANR	1079368	IfStatement	if ( free_current )		1079365	0					
ANR	1079369	Condition	free_current	86:5:1856:1867	1079365	0	True				
ANR	1079370	Identifier	free_current		1079365	0					
ANR	1079371	CompoundStatement		2:19:20:20	1079365	1					
ANR	1079372	ExpressionStatement	free ( I . context -> buffer )	87:2:1874:1898	1079365	0	True				
ANR	1079373	CallExpression	free ( I . context -> buffer )		1079365	0					
ANR	1079374	Callee	free		1079365	0					
ANR	1079375	Identifier	free		1079365	0					
ANR	1079376	ArgumentList	I . context -> buffer		1079365	1					
ANR	1079377	Argument	I . context -> buffer		1079365	0					
ANR	1079378	PtrMemberAccess	I . context -> buffer		1079365	0					
ANR	1079379	MemberAccess	I . context		1079365	0					
ANR	1079380	Identifier	I		1079365	0					
ANR	1079381	Identifier	context		1079365	1					
ANR	1079382	Identifier	buffer		1079365	1					
ANR	1079383	ExpressionStatement	I . context -> buffer = data -> buf	89:1:1904:1933	1079365	1	True				
ANR	1079384	AssignmentExpression	I . context -> buffer = data -> buf		1079365	0		=			
ANR	1079385	PtrMemberAccess	I . context -> buffer		1079365	0					
ANR	1079386	MemberAccess	I . context		1079365	0					
ANR	1079387	Identifier	I		1079365	0					
ANR	1079388	Identifier	context		1079365	1					
ANR	1079389	Identifier	buffer		1079365	1					
ANR	1079390	PtrMemberAccess	data -> buf		1079365	1					
ANR	1079391	Identifier	data		1079365	0					
ANR	1079392	Identifier	buf		1079365	1					
ANR	1079393	ExpressionStatement	data -> buf = NULL	90:1:1936:1952	1079365	2	True				
ANR	1079394	AssignmentExpression	data -> buf = NULL		1079365	0		=			
ANR	1079395	PtrMemberAccess	data -> buf		1079365	0					
ANR	1079396	Identifier	data		1079365	0					
ANR	1079397	Identifier	buf		1079365	1					
ANR	1079398	Identifier	NULL		1079365	1					
ANR	1079399	ExpressionStatement	I . context -> buffer_len = data -> buf_len	91:1:1955:1992	1079365	3	True				
ANR	1079400	AssignmentExpression	I . context -> buffer_len = data -> buf_len		1079365	0		=			
ANR	1079401	PtrMemberAccess	I . context -> buffer_len		1079365	0					
ANR	1079402	MemberAccess	I . context		1079365	0					
ANR	1079403	Identifier	I		1079365	0					
ANR	1079404	Identifier	context		1079365	1					
ANR	1079405	Identifier	buffer_len		1079365	1					
ANR	1079406	PtrMemberAccess	data -> buf_len		1079365	1					
ANR	1079407	Identifier	data		1079365	0					
ANR	1079408	Identifier	buf_len		1079365	1					
ANR	1079409	ExpressionStatement	I . context -> buffer_sz = data -> buf_size	92:1:1995:2032	1079365	4	True				
ANR	1079410	AssignmentExpression	I . context -> buffer_sz = data -> buf_size		1079365	0		=			
ANR	1079411	PtrMemberAccess	I . context -> buffer_sz		1079365	0					
ANR	1079412	MemberAccess	I . context		1079365	0					
ANR	1079413	Identifier	I		1079365	0					
ANR	1079414	Identifier	context		1079365	1					
ANR	1079415	Identifier	buffer_sz		1079365	1					
ANR	1079416	PtrMemberAccess	data -> buf_size		1079365	1					
ANR	1079417	Identifier	data		1079365	0					
ANR	1079418	Identifier	buf_size		1079365	1					
ANR	1079419	IfStatement	if ( data -> grep )		1079365	5					
ANR	1079420	Condition	data -> grep	94:5:2040:2049	1079365	0	True				
ANR	1079421	PtrMemberAccess	data -> grep		1079365	0					
ANR	1079422	Identifier	data		1079365	0					
ANR	1079423	Identifier	grep		1079365	1					
ANR	1079424	CompoundStatement		10:17:202:202	1079365	1					
ANR	1079425	ExpressionStatement	free ( I . context -> grep . str )	95:2:2056:2082	1079365	0	True				
ANR	1079426	CallExpression	free ( I . context -> grep . str )		1079365	0					
ANR	1079427	Callee	free		1079365	0					
ANR	1079428	Identifier	free		1079365	0					
ANR	1079429	ArgumentList	I . context -> grep . str		1079365	1					
ANR	1079430	Argument	I . context -> grep . str		1079365	0					
ANR	1079431	MemberAccess	I . context -> grep . str		1079365	0					
ANR	1079432	PtrMemberAccess	I . context -> grep		1079365	0					
ANR	1079433	MemberAccess	I . context		1079365	0					
ANR	1079434	Identifier	I		1079365	0					
ANR	1079435	Identifier	context		1079365	1					
ANR	1079436	Identifier	grep		1079365	1					
ANR	1079437	Identifier	str		1079365	1					
ANR	1079438	ExpressionStatement	"memcpy ( & I . context -> grep , data -> grep , sizeof ( RConsGrep ) )"	96:2:2086:2143	1079365	1	True				
ANR	1079439	CallExpression	"memcpy ( & I . context -> grep , data -> grep , sizeof ( RConsGrep ) )"		1079365	0					
ANR	1079440	Callee	memcpy		1079365	0					
ANR	1079441	Identifier	memcpy		1079365	0					
ANR	1079442	ArgumentList	& I . context -> grep		1079365	1					
ANR	1079443	Argument	& I . context -> grep		1079365	0					
ANR	1079444	UnaryOperationExpression	& I . context -> grep		1079365	0					
ANR	1079445	UnaryOperator	&		1079365	0					
ANR	1079446	PtrMemberAccess	I . context -> grep		1079365	1					
ANR	1079447	MemberAccess	I . context		1079365	0					
ANR	1079448	Identifier	I		1079365	0					
ANR	1079449	Identifier	context		1079365	1					
ANR	1079450	Identifier	grep		1079365	1					
ANR	1079451	Argument	data -> grep		1079365	1					
ANR	1079452	PtrMemberAccess	data -> grep		1079365	0					
ANR	1079453	Identifier	data		1079365	0					
ANR	1079454	Identifier	grep		1079365	1					
ANR	1079455	Argument	sizeof ( RConsGrep )		1079365	2					
ANR	1079456	SizeofExpression	sizeof ( RConsGrep )		1079365	0					
ANR	1079457	Sizeof	sizeof		1079365	0					
ANR	1079458	SizeofOperand	RConsGrep		1079365	1					
ANR	1079459	ReturnType	static void		1079365	1					
ANR	1079460	Identifier	cons_stack_load		1079365	2					
ANR	1079461	ParameterList	"RConsStack * data , bool free_current"		1079365	3					
ANR	1079462	Parameter	RConsStack * data	85:28:1812:1827	1079365	0	True				
ANR	1079463	ParameterType	RConsStack *		1079365	0					
ANR	1079464	Identifier	data		1079365	1					
ANR	1079465	Parameter	bool free_current	85:46:1830:1846	1079365	1	True				
ANR	1079466	ParameterType	bool		1079365	0					
ANR	1079467	Identifier	free_current		1079365	1					
ANR	1079468	CFGEntryNode	ENTRY		1079365		True				
ANR	1079469	CFGExitNode	EXIT		1079365		True				
ANR	1079470	Symbol	I . context -> grep		1079365						
ANR	1079471	Symbol	NULL		1079365						
ANR	1079472	Symbol	data		1079365						
ANR	1079473	Symbol	I . context -> buffer_len		1079365						
ANR	1079474	Symbol	I		1079365						
ANR	1079475	Symbol	data -> buf_len		1079365						
ANR	1079476	Symbol	& I . context -> grep		1079365						
ANR	1079477	Symbol	I . context		1079365						
ANR	1079478	Symbol	data -> buf_size		1079365						
ANR	1079479	Symbol	data -> grep		1079365						
ANR	1079480	Symbol	* I . context		1079365						
ANR	1079481	Symbol	free_current		1079365						
ANR	1079482	Symbol	* I		1079365						
ANR	1079483	Symbol	data -> buf		1079365						
ANR	1079484	Symbol	I . context -> buffer_sz		1079365						
ANR	1079485	Symbol	I . context -> buffer		1079365						
ANR	1079486	Symbol	* data		1079365						
ANR	1079487	Symbol	I . context -> grep . str		1079365						
ANR	1079488	Function	cons_context_init	100:0:2151:2919							
ANR	1079489	FunctionDef	"cons_context_init (RConsContext * context , R_NULLABLE RConsContext * parent)"		1079488	0					
ANR	1079490	CompoundStatement		100:86:2237:2919	1079488	0					
ANR	1079491	ExpressionStatement	context -> breaked = false	101:1:2240:2264	1079488	0	True				
ANR	1079492	AssignmentExpression	context -> breaked = false		1079488	0		=			
ANR	1079493	PtrMemberAccess	context -> breaked		1079488	0					
ANR	1079494	Identifier	context		1079488	0					
ANR	1079495	Identifier	breaked		1079488	1					
ANR	1079496	Identifier	false		1079488	1					
ANR	1079497	ExpressionStatement	context -> cmd_depth = R_CONS_CMD_DEPTH + 1	102:1:2267:2308	1079488	1	True				
ANR	1079498	AssignmentExpression	context -> cmd_depth = R_CONS_CMD_DEPTH + 1		1079488	0		=			
ANR	1079499	PtrMemberAccess	context -> cmd_depth		1079488	0					
ANR	1079500	Identifier	context		1079488	0					
ANR	1079501	Identifier	cmd_depth		1079488	1					
ANR	1079502	AdditiveExpression	R_CONS_CMD_DEPTH + 1		1079488	1		+			
ANR	1079503	Identifier	R_CONS_CMD_DEPTH		1079488	0					
ANR	1079504	PrimaryExpression	1		1079488	1					
ANR	1079505	ExpressionStatement	context -> buffer = NULL	103:1:2311:2333	1079488	2	True				
ANR	1079506	AssignmentExpression	context -> buffer = NULL		1079488	0		=			
ANR	1079507	PtrMemberAccess	context -> buffer		1079488	0					
ANR	1079508	Identifier	context		1079488	0					
ANR	1079509	Identifier	buffer		1079488	1					
ANR	1079510	Identifier	NULL		1079488	1					
ANR	1079511	ExpressionStatement	context -> buffer_sz = 0	104:1:2336:2358	1079488	3	True				
ANR	1079512	AssignmentExpression	context -> buffer_sz = 0		1079488	0		=			
ANR	1079513	PtrMemberAccess	context -> buffer_sz		1079488	0					
ANR	1079514	Identifier	context		1079488	0					
ANR	1079515	Identifier	buffer_sz		1079488	1					
ANR	1079516	PrimaryExpression	0		1079488	1					
ANR	1079517	ExpressionStatement	context -> lastEnabled = true	105:1:2361:2388	1079488	4	True				
ANR	1079518	AssignmentExpression	context -> lastEnabled = true		1079488	0		=			
ANR	1079519	PtrMemberAccess	context -> lastEnabled		1079488	0					
ANR	1079520	Identifier	context		1079488	0					
ANR	1079521	Identifier	lastEnabled		1079488	1					
ANR	1079522	Identifier	true		1079488	1					
ANR	1079523	ExpressionStatement	context -> buffer_len = 0	106:1:2391:2414	1079488	5	True				
ANR	1079524	AssignmentExpression	context -> buffer_len = 0		1079488	0		=			
ANR	1079525	PtrMemberAccess	context -> buffer_len		1079488	0					
ANR	1079526	Identifier	context		1079488	0					
ANR	1079527	Identifier	buffer_len		1079488	1					
ANR	1079528	PrimaryExpression	0		1079488	1					
ANR	1079529	ExpressionStatement	context -> is_interactive = false	107:1:2417:2448	1079488	6	True				
ANR	1079530	AssignmentExpression	context -> is_interactive = false		1079488	0		=			
ANR	1079531	PtrMemberAccess	context -> is_interactive		1079488	0					
ANR	1079532	Identifier	context		1079488	0					
ANR	1079533	Identifier	is_interactive		1079488	1					
ANR	1079534	Identifier	false		1079488	1					
ANR	1079535	ExpressionStatement	"context -> cons_stack = r_stack_newf ( 6 , cons_stack_free )"	108:1:2451:2506	1079488	7	True				
ANR	1079536	AssignmentExpression	"context -> cons_stack = r_stack_newf ( 6 , cons_stack_free )"		1079488	0		=			
ANR	1079537	PtrMemberAccess	context -> cons_stack		1079488	0					
ANR	1079538	Identifier	context		1079488	0					
ANR	1079539	Identifier	cons_stack		1079488	1					
ANR	1079540	CallExpression	"r_stack_newf ( 6 , cons_stack_free )"		1079488	1					
ANR	1079541	Callee	r_stack_newf		1079488	0					
ANR	1079542	Identifier	r_stack_newf		1079488	0					
ANR	1079543	ArgumentList	6		1079488	1					
ANR	1079544	Argument	6		1079488	0					
ANR	1079545	PrimaryExpression	6		1079488	0					
ANR	1079546	Argument	cons_stack_free		1079488	1					
ANR	1079547	Identifier	cons_stack_free		1079488	0					
ANR	1079548	ExpressionStatement	"context -> break_stack = r_stack_newf ( 6 , break_stack_free )"	109:1:2509:2566	1079488	8	True				
ANR	1079549	AssignmentExpression	"context -> break_stack = r_stack_newf ( 6 , break_stack_free )"		1079488	0		=			
ANR	1079550	PtrMemberAccess	context -> break_stack		1079488	0					
ANR	1079551	Identifier	context		1079488	0					
ANR	1079552	Identifier	break_stack		1079488	1					
ANR	1079553	CallExpression	"r_stack_newf ( 6 , break_stack_free )"		1079488	1					
ANR	1079554	Callee	r_stack_newf		1079488	0					
ANR	1079555	Identifier	r_stack_newf		1079488	0					
ANR	1079556	ArgumentList	6		1079488	1					
ANR	1079557	Argument	6		1079488	0					
ANR	1079558	PrimaryExpression	6		1079488	0					
ANR	1079559	Argument	break_stack_free		1079488	1					
ANR	1079560	Identifier	break_stack_free		1079488	0					
ANR	1079561	ExpressionStatement	context -> event_interrupt = NULL	110:1:2569:2600	1079488	9	True				
ANR	1079562	AssignmentExpression	context -> event_interrupt = NULL		1079488	0		=			
ANR	1079563	PtrMemberAccess	context -> event_interrupt		1079488	0					
ANR	1079564	Identifier	context		1079488	0					
ANR	1079565	Identifier	event_interrupt		1079488	1					
ANR	1079566	Identifier	NULL		1079488	1					
ANR	1079567	ExpressionStatement	context -> event_interrupt_data = NULL	111:1:2603:2639	1079488	10	True				
ANR	1079568	AssignmentExpression	context -> event_interrupt_data = NULL		1079488	0		=			
ANR	1079569	PtrMemberAccess	context -> event_interrupt_data		1079488	0					
ANR	1079570	Identifier	context		1079488	0					
ANR	1079571	Identifier	event_interrupt_data		1079488	1					
ANR	1079572	Identifier	NULL		1079488	1					
ANR	1079573	ExpressionStatement	context -> pageable = true	112:1:2642:2666	1079488	11	True				
ANR	1079574	AssignmentExpression	context -> pageable = true		1079488	0		=			
ANR	1079575	PtrMemberAccess	context -> pageable		1079488	0					
ANR	1079576	Identifier	context		1079488	0					
ANR	1079577	Identifier	pageable		1079488	1					
ANR	1079578	Identifier	true		1079488	1					
ANR	1079579	ExpressionStatement	context -> log_callback = NULL	113:1:2669:2697	1079488	12	True				
ANR	1079580	AssignmentExpression	context -> log_callback = NULL		1079488	0		=			
ANR	1079581	PtrMemberAccess	context -> log_callback		1079488	0					
ANR	1079582	Identifier	context		1079488	0					
ANR	1079583	Identifier	log_callback		1079488	1					
ANR	1079584	Identifier	NULL		1079488	1					
ANR	1079585	IfStatement	if ( parent )		1079488	13					
ANR	1079586	Condition	parent	115:5:2705:2710	1079488	0	True				
ANR	1079587	Identifier	parent		1079488	0					
ANR	1079588	CompoundStatement		16:13:475:475	1079488	1					
ANR	1079589	ExpressionStatement	context -> color_mode = parent -> color_mode	116:2:2717:2757	1079488	0	True				
ANR	1079590	AssignmentExpression	context -> color_mode = parent -> color_mode		1079488	0		=			
ANR	1079591	PtrMemberAccess	context -> color_mode		1079488	0					
ANR	1079592	Identifier	context		1079488	0					
ANR	1079593	Identifier	color_mode		1079488	1					
ANR	1079594	PtrMemberAccess	parent -> color_mode		1079488	1					
ANR	1079595	Identifier	parent		1079488	0					
ANR	1079596	Identifier	color_mode		1079488	1					
ANR	1079597	ExpressionStatement	"r_cons_pal_copy ( context , parent )"	117:2:2761:2794	1079488	1	True				
ANR	1079598	CallExpression	"r_cons_pal_copy ( context , parent )"		1079488	0					
ANR	1079599	Callee	r_cons_pal_copy		1079488	0					
ANR	1079600	Identifier	r_cons_pal_copy		1079488	0					
ANR	1079601	ArgumentList	context		1079488	1					
ANR	1079602	Argument	context		1079488	0					
ANR	1079603	Identifier	context		1079488	0					
ANR	1079604	Argument	parent		1079488	1					
ANR	1079605	Identifier	parent		1079488	0					
ANR	1079606	ElseStatement	else		1079488	0					
ANR	1079607	CompoundStatement		19:8:566:566	1079488	0					
ANR	1079608	ExpressionStatement	context -> color_mode = COLOR_MODE_DISABLED	119:2:2808:2849	1079488	0	True				
ANR	1079609	AssignmentExpression	context -> color_mode = COLOR_MODE_DISABLED		1079488	0		=			
ANR	1079610	PtrMemberAccess	context -> color_mode		1079488	0					
ANR	1079611	Identifier	context		1079488	0					
ANR	1079612	Identifier	color_mode		1079488	1					
ANR	1079613	Identifier	COLOR_MODE_DISABLED		1079488	1					
ANR	1079614	ExpressionStatement	r_cons_pal_init ( context )	120:2:2853:2878	1079488	1	True				
ANR	1079615	CallExpression	r_cons_pal_init ( context )		1079488	0					
ANR	1079616	Callee	r_cons_pal_init		1079488	0					
ANR	1079617	Identifier	r_cons_pal_init		1079488	0					
ANR	1079618	ArgumentList	context		1079488	1					
ANR	1079619	Argument	context		1079488	0					
ANR	1079620	Identifier	context		1079488	0					
ANR	1079621	ExpressionStatement	cons_grep_reset ( & context -> grep )	123:1:2885:2917	1079488	14	True				
ANR	1079622	CallExpression	cons_grep_reset ( & context -> grep )		1079488	0					
ANR	1079623	Callee	cons_grep_reset		1079488	0					
ANR	1079624	Identifier	cons_grep_reset		1079488	0					
ANR	1079625	ArgumentList	& context -> grep		1079488	1					
ANR	1079626	Argument	& context -> grep		1079488	0					
ANR	1079627	UnaryOperationExpression	& context -> grep		1079488	0					
ANR	1079628	UnaryOperator	&		1079488	0					
ANR	1079629	PtrMemberAccess	context -> grep		1079488	1					
ANR	1079630	Identifier	context		1079488	0					
ANR	1079631	Identifier	grep		1079488	1					
ANR	1079632	ReturnType	static void		1079488	1					
ANR	1079633	Identifier	cons_context_init		1079488	2					
ANR	1079634	ParameterList	"RConsContext * context , R_NULLABLE RConsContext * parent"		1079488	3					
ANR	1079635	Parameter	RConsContext * context	100:30:2181:2201	1079488	0	True				
ANR	1079636	ParameterType	RConsContext *		1079488	0					
ANR	1079637	Identifier	context		1079488	1					
ANR	1079638	Parameter	R_NULLABLE RConsContext * parent	100:53:2204:2234	1079488	1	True				
ANR	1079639	ParameterType	R_NULLABLE RConsContext *		1079488	0					
ANR	1079640	Identifier	parent		1079488	1					
ANR	1079641	CFGEntryNode	ENTRY		1079488		True				
ANR	1079642	CFGExitNode	EXIT		1079488		True				
ANR	1079643	Symbol	parent		1079488						
ANR	1079644	Symbol	context -> buffer_len		1079488						
ANR	1079645	Symbol	* parent		1079488						
ANR	1079646	Symbol	context -> log_callback		1079488						
ANR	1079647	Symbol	COLOR_MODE_DISABLED		1079488						
ANR	1079648	Symbol	cons_stack_free		1079488						
ANR	1079649	Symbol	context -> event_interrupt		1079488						
ANR	1079650	Symbol	R_CONS_CMD_DEPTH		1079488						
ANR	1079651	Symbol	r_stack_newf		1079488						
ANR	1079652	Symbol	context		1079488						
ANR	1079653	Symbol	context -> is_interactive		1079488						
ANR	1079654	Symbol	context -> event_interrupt_data		1079488						
ANR	1079655	Symbol	context -> cons_stack		1079488						
ANR	1079656	Symbol	context -> cmd_depth		1079488						
ANR	1079657	Symbol	NULL		1079488						
ANR	1079658	Symbol	context -> pageable		1079488						
ANR	1079659	Symbol	false		1079488						
ANR	1079660	Symbol	context -> lastEnabled		1079488						
ANR	1079661	Symbol	* context		1079488						
ANR	1079662	Symbol	context -> buffer		1079488						
ANR	1079663	Symbol	break_stack_free		1079488						
ANR	1079664	Symbol	context -> color_mode		1079488						
ANR	1079665	Symbol	& context -> grep		1079488						
ANR	1079666	Symbol	context -> buffer_sz		1079488						
ANR	1079667	Symbol	parent -> color_mode		1079488						
ANR	1079668	Symbol	context -> breaked		1079488						
ANR	1079669	Symbol	context -> break_stack		1079488						
ANR	1079670	Symbol	true		1079488						
ANR	1079671	Function	cons_context_deinit	126:0:2922:3082							
ANR	1079672	FunctionDef	cons_context_deinit (RConsContext * context)		1079671	0					
ANR	1079673	CompoundStatement		126:55:2977:3082	1079671	0					
ANR	1079674	ExpressionStatement	r_stack_free ( context -> cons_stack )	127:1:2980:3014	1079671	0	True				
ANR	1079675	CallExpression	r_stack_free ( context -> cons_stack )		1079671	0					
ANR	1079676	Callee	r_stack_free		1079671	0					
ANR	1079677	Identifier	r_stack_free		1079671	0					
ANR	1079678	ArgumentList	context -> cons_stack		1079671	1					
ANR	1079679	Argument	context -> cons_stack		1079671	0					
ANR	1079680	PtrMemberAccess	context -> cons_stack		1079671	0					
ANR	1079681	Identifier	context		1079671	0					
ANR	1079682	Identifier	cons_stack		1079671	1					
ANR	1079683	ExpressionStatement	r_stack_free ( context -> break_stack )	128:1:3017:3052	1079671	1	True				
ANR	1079684	CallExpression	r_stack_free ( context -> break_stack )		1079671	0					
ANR	1079685	Callee	r_stack_free		1079671	0					
ANR	1079686	Identifier	r_stack_free		1079671	0					
ANR	1079687	ArgumentList	context -> break_stack		1079671	1					
ANR	1079688	Argument	context -> break_stack		1079671	0					
ANR	1079689	PtrMemberAccess	context -> break_stack		1079671	0					
ANR	1079690	Identifier	context		1079671	0					
ANR	1079691	Identifier	break_stack		1079671	1					
ANR	1079692	ExpressionStatement	r_cons_pal_free ( context )	129:1:3055:3080	1079671	2	True				
ANR	1079693	CallExpression	r_cons_pal_free ( context )		1079671	0					
ANR	1079694	Callee	r_cons_pal_free		1079671	0					
ANR	1079695	Identifier	r_cons_pal_free		1079671	0					
ANR	1079696	ArgumentList	context		1079671	1					
ANR	1079697	Argument	context		1079671	0					
ANR	1079698	Identifier	context		1079671	0					
ANR	1079699	ReturnType	static void		1079671	1					
ANR	1079700	Identifier	cons_context_deinit		1079671	2					
ANR	1079701	ParameterList	RConsContext * context		1079671	3					
ANR	1079702	Parameter	RConsContext * context	126:32:2954:2974	1079671	0	True				
ANR	1079703	ParameterType	RConsContext *		1079671	0					
ANR	1079704	Identifier	context		1079671	1					
ANR	1079705	CFGEntryNode	ENTRY		1079671		True				
ANR	1079706	CFGExitNode	EXIT		1079671		True				
ANR	1079707	Symbol	context -> cons_stack		1079671						
ANR	1079708	Symbol	context -> break_stack		1079671						
ANR	1079709	Symbol	context		1079671						
ANR	1079710	Symbol	* context		1079671						
ANR	1079711	Function	__break_signal	132:0:3085:3172							
ANR	1079712	FunctionDef	__break_signal (int sig)		1079711	0					
ANR	1079713	CompoundStatement		132:36:3121:3172	1079711	0					
ANR	1079714	ExpressionStatement	r_cons_context_break ( & r_cons_context_default )	133:1:3124:3170	1079711	0	True				
ANR	1079715	CallExpression	r_cons_context_break ( & r_cons_context_default )		1079711	0					
ANR	1079716	Callee	r_cons_context_break		1079711	0					
ANR	1079717	Identifier	r_cons_context_break		1079711	0					
ANR	1079718	ArgumentList	& r_cons_context_default		1079711	1					
ANR	1079719	Argument	& r_cons_context_default		1079711	0					
ANR	1079720	UnaryOperationExpression	& r_cons_context_default		1079711	0					
ANR	1079721	UnaryOperator	&		1079711	0					
ANR	1079722	Identifier	r_cons_context_default		1079711	1					
ANR	1079723	ReturnType	static void		1079711	1					
ANR	1079724	Identifier	__break_signal		1079711	2					
ANR	1079725	ParameterList	int sig		1079711	3					
ANR	1079726	Parameter	int sig	132:27:3112:3118	1079711	0	True				
ANR	1079727	ParameterType	int		1079711	0					
ANR	1079728	Identifier	sig		1079711	1					
ANR	1079729	CFGEntryNode	ENTRY		1079711		True				
ANR	1079730	CFGExitNode	EXIT		1079711		True				
ANR	1079731	Symbol	sig		1079711						
ANR	1079732	Symbol	& r_cons_context_default		1079711						
ANR	1079733	Function	__cons_write_ll	136:0:3175:3532							
ANR	1079734	FunctionDef	"__cons_write_ll (const char * buf , int len)"		1079733	0					
ANR	1079735	CompoundStatement		136:61:3236:3532	1079733	0					
ANR	1079736	IfStatement	if ( I . ansicon )		1079733	0					
ANR	1079737	Condition	I . ansicon	138:5:3259:3267	1079733	0	True				
ANR	1079738	MemberAccess	I . ansicon		1079733	0					
ANR	1079739	Identifier	I		1079733	0					
ANR	1079740	Identifier	ansicon		1079733	1					
ANR	1079741	CompoundStatement		3:16:33:33	1079733	1					
ANR	1079742	ExpressionStatement	"( void ) write ( I . fdout , buf , len )"	139:2:3274:3306	1079733	0	True				
ANR	1079743	CastExpression	"( void ) write ( I . fdout , buf , len )"		1079733	0					
ANR	1079744	CastTarget	void		1079733	0					
ANR	1079745	CallExpression	"write ( I . fdout , buf , len )"		1079733	1					
ANR	1079746	Callee	write		1079733	0					
ANR	1079747	Identifier	write		1079733	0					
ANR	1079748	ArgumentList	I . fdout		1079733	1					
ANR	1079749	Argument	I . fdout		1079733	0					
ANR	1079750	MemberAccess	I . fdout		1079733	0					
ANR	1079751	Identifier	I		1079733	0					
ANR	1079752	Identifier	fdout		1079733	1					
ANR	1079753	Argument	buf		1079733	1					
ANR	1079754	Identifier	buf		1079733	0					
ANR	1079755	Argument	len		1079733	2					
ANR	1079756	Identifier	len		1079733	0					
ANR	1079757	ElseStatement	else		1079733	0					
ANR	1079758	CompoundStatement		5:8:79:79	1079733	0					
ANR	1079759	IfStatement	if ( I . fdout == 1 )		1079733	0					
ANR	1079760	Condition	I . fdout == 1	141:6:3324:3335	1079733	0	True				
ANR	1079761	EqualityExpression	I . fdout == 1		1079733	0		==			
ANR	1079762	MemberAccess	I . fdout		1079733	0					
ANR	1079763	Identifier	I		1079733	0					
ANR	1079764	Identifier	fdout		1079733	1					
ANR	1079765	PrimaryExpression	1		1079733	1					
ANR	1079766	CompoundStatement		6:20:101:101	1079733	1					
ANR	1079767	ExpressionStatement	"r_cons_w32_print ( ( const ut8 * ) buf , len , false )"	142:3:3343:3389	1079733	0	True				
ANR	1079768	CallExpression	"r_cons_w32_print ( ( const ut8 * ) buf , len , false )"		1079733	0					
ANR	1079769	Callee	r_cons_w32_print		1079733	0					
ANR	1079770	Identifier	r_cons_w32_print		1079733	0					
ANR	1079771	ArgumentList	( const ut8 * ) buf		1079733	1					
ANR	1079772	Argument	( const ut8 * ) buf		1079733	0					
ANR	1079773	CastExpression	( const ut8 * ) buf		1079733	0					
ANR	1079774	CastTarget	const ut8 *		1079733	0					
ANR	1079775	Identifier	buf		1079733	1					
ANR	1079776	Argument	len		1079733	1					
ANR	1079777	Identifier	len		1079733	0					
ANR	1079778	Argument	false		1079733	2					
ANR	1079779	Identifier	false		1079733	0					
ANR	1079780	ElseStatement	else		1079733	0					
ANR	1079781	CompoundStatement		8:9:163:163	1079733	0					
ANR	1079782	ExpressionStatement	"( void ) write ( I . fdout , buf , len )"	144:3:3405:3437	1079733	0	True				
ANR	1079783	CastExpression	"( void ) write ( I . fdout , buf , len )"		1079733	0					
ANR	1079784	CastTarget	void		1079733	0					
ANR	1079785	CallExpression	"write ( I . fdout , buf , len )"		1079733	1					
ANR	1079786	Callee	write		1079733	0					
ANR	1079787	Identifier	write		1079733	0					
ANR	1079788	ArgumentList	I . fdout		1079733	1					
ANR	1079789	Argument	I . fdout		1079733	0					
ANR	1079790	MemberAccess	I . fdout		1079733	0					
ANR	1079791	Identifier	I		1079733	0					
ANR	1079792	Identifier	fdout		1079733	1					
ANR	1079793	Argument	buf		1079733	1					
ANR	1079794	Identifier	buf		1079733	0					
ANR	1079795	Argument	len		1079733	2					
ANR	1079796	Identifier	len		1079733	0					
ANR	1079797	ReturnType	static inline void		1079733	1					
ANR	1079798	Identifier	__cons_write_ll		1079733	2					
ANR	1079799	ParameterList	"const char * buf , int len"		1079733	3					
ANR	1079800	Parameter	const char * buf	136:35:3210:3224	1079733	0	True				
ANR	1079801	ParameterType	const char *		1079733	0					
ANR	1079802	Identifier	buf		1079733	1					
ANR	1079803	Parameter	int len	136:52:3227:3233	1079733	1	True				
ANR	1079804	ParameterType	int		1079733	0					
ANR	1079805	Identifier	len		1079733	1					
ANR	1079806	CFGEntryNode	ENTRY		1079733		True				
ANR	1079807	CFGExitNode	EXIT		1079733		True				
ANR	1079808	Symbol	buf		1079733						
ANR	1079809	Symbol	len		1079733						
ANR	1079810	Symbol	I . fdout		1079733						
ANR	1079811	Symbol	false		1079733						
ANR	1079812	Symbol	I		1079733						
ANR	1079813	Symbol	I . ansicon		1079733						
ANR	1079814	Function	__cons_write	155:0:3535:3804							
ANR	1079815	FunctionDef	"__cons_write (const char * obuf , int olen)"		1079814	0					
ANR	1079816	CompoundStatement		155:60:3595:3804	1079814	0					
ANR	1079817	IdentifierDeclStatement	const unsigned int bucket = 64 * 1024 ;	156:1:3598:3635	1079814	0	True				
ANR	1079818	IdentifierDecl	bucket = 64 * 1024		1079814	0					
ANR	1079819	IdentifierDeclType	const unsigned int		1079814	0					
ANR	1079820	Identifier	bucket		1079814	1					
ANR	1079821	AssignmentExpression	bucket = 64 * 1024		1079814	2		=			
ANR	1079822	Identifier	bucket		1079814	0					
ANR	1079823	MultiplicativeExpression	64 * 1024		1079814	1		*			
ANR	1079824	PrimaryExpression	64		1079814	0					
ANR	1079825	PrimaryExpression	1024		1079814	1					
ANR	1079826	IdentifierDeclStatement	unsigned int i ;	157:1:3638:3652	1079814	1	True				
ANR	1079827	IdentifierDecl	i		1079814	0					
ANR	1079828	IdentifierDeclType	unsigned int		1079814	0					
ANR	1079829	Identifier	i		1079814	1					
ANR	1079830	ForStatement	for ( i = 0 ; ( i + bucket ) < olen ; i += bucket )		1079814	2					
ANR	1079831	ForInit	i = 0 ;	158:6:3660:3665	1079814	0	True				
ANR	1079832	AssignmentExpression	i = 0		1079814	0		=			
ANR	1079833	Identifier	i		1079814	0					
ANR	1079834	PrimaryExpression	0		1079814	1					
ANR	1079835	Condition	( i + bucket ) < olen	158:13:3667:3685	1079814	1	True				
ANR	1079836	RelationalExpression	( i + bucket ) < olen		1079814	0		<			
ANR	1079837	AdditiveExpression	i + bucket		1079814	0		+			
ANR	1079838	Identifier	i		1079814	0					
ANR	1079839	Identifier	bucket		1079814	1					
ANR	1079840	Identifier	olen		1079814	1					
ANR	1079841	AssignmentExpression	i += bucket	158:34:3688:3698	1079814	2	True	+=			
ANR	1079842	Identifier	i		1079814	0					
ANR	1079843	Identifier	bucket		1079814	1					
ANR	1079844	CompoundStatement		4:47:105:105	1079814	3					
ANR	1079845	ExpressionStatement	"__cons_write_ll ( obuf + i , bucket )"	159:2:3705:3739	1079814	0	True				
ANR	1079846	CallExpression	"__cons_write_ll ( obuf + i , bucket )"		1079814	0					
ANR	1079847	Callee	__cons_write_ll		1079814	0					
ANR	1079848	Identifier	__cons_write_ll		1079814	0					
ANR	1079849	ArgumentList	obuf + i		1079814	1					
ANR	1079850	Argument	obuf + i		1079814	0					
ANR	1079851	AdditiveExpression	obuf + i		1079814	0		+			
ANR	1079852	Identifier	obuf		1079814	0					
ANR	1079853	Identifier	i		1079814	1					
ANR	1079854	Argument	bucket		1079814	1					
ANR	1079855	Identifier	bucket		1079814	0					
ANR	1079856	IfStatement	if ( i < olen )		1079814	3					
ANR	1079857	Condition	i < olen	161:5:3749:3756	1079814	0	True				
ANR	1079858	RelationalExpression	i < olen		1079814	0		<			
ANR	1079859	Identifier	i		1079814	0					
ANR	1079860	Identifier	olen		1079814	1					
ANR	1079861	CompoundStatement		7:15:163:163	1079814	1					
ANR	1079862	ExpressionStatement	"__cons_write_ll ( obuf + i , olen - i )"	162:2:3763:3799	1079814	0	True				
ANR	1079863	CallExpression	"__cons_write_ll ( obuf + i , olen - i )"		1079814	0					
ANR	1079864	Callee	__cons_write_ll		1079814	0					
ANR	1079865	Identifier	__cons_write_ll		1079814	0					
ANR	1079866	ArgumentList	obuf + i		1079814	1					
ANR	1079867	Argument	obuf + i		1079814	0					
ANR	1079868	AdditiveExpression	obuf + i		1079814	0		+			
ANR	1079869	Identifier	obuf		1079814	0					
ANR	1079870	Identifier	i		1079814	1					
ANR	1079871	Argument	olen - i		1079814	1					
ANR	1079872	AdditiveExpression	olen - i		1079814	0		-			
ANR	1079873	Identifier	olen		1079814	0					
ANR	1079874	Identifier	i		1079814	1					
ANR	1079875	ReturnType	static inline void		1079814	1					
ANR	1079876	Identifier	__cons_write		1079814	2					
ANR	1079877	ParameterList	"const char * obuf , int olen"		1079814	3					
ANR	1079878	Parameter	const char * obuf	155:32:3567:3582	1079814	0	True				
ANR	1079879	ParameterType	const char *		1079814	0					
ANR	1079880	Identifier	obuf		1079814	1					
ANR	1079881	Parameter	int olen	155:50:3585:3592	1079814	1	True				
ANR	1079882	ParameterType	int		1079814	0					
ANR	1079883	Identifier	olen		1079814	1					
ANR	1079884	CFGEntryNode	ENTRY		1079814		True				
ANR	1079885	CFGExitNode	EXIT		1079814		True				
ANR	1079886	Symbol	bucket		1079814						
ANR	1079887	Symbol	olen		1079814						
ANR	1079888	Symbol	obuf		1079814						
ANR	1079889	Symbol	i		1079814						
ANR	1079890	Function	r_cons_color_random	166:0:3807:4619							
ANR	1079891	FunctionDef	r_cons_color_random (ut8 alpha)		1079890	0					
ANR	1079892	CompoundStatement		166:44:3851:4619	1079890	0					
ANR	1079893	IdentifierDeclStatement	RColor rcolor = { 0 } ;	167:1:3854:3873	1079890	0	True				
ANR	1079894	IdentifierDecl	rcolor = { 0 }		1079890	0					
ANR	1079895	IdentifierDeclType	RColor		1079890	0					
ANR	1079896	Identifier	rcolor		1079890	1					
ANR	1079897	AssignmentExpression	rcolor = { 0 }		1079890	2		=			
ANR	1079898	Identifier	rcolor		1079890	0					
ANR	1079899	InitializerList	0		1079890	1					
ANR	1079900	PrimaryExpression	0		1079890	0					
ANR	1079901	IfStatement	if ( I . context -> color_mode > COLOR_MODE_16 )		1079890	1					
ANR	1079902	Condition	I . context -> color_mode > COLOR_MODE_16	168:5:3880:3916	1079890	0	True				
ANR	1079903	RelationalExpression	I . context -> color_mode > COLOR_MODE_16		1079890	0		>			
ANR	1079904	PtrMemberAccess	I . context -> color_mode		1079890	0					
ANR	1079905	MemberAccess	I . context		1079890	0					
ANR	1079906	Identifier	I		1079890	0					
ANR	1079907	Identifier	context		1079890	1					
ANR	1079908	Identifier	color_mode		1079890	1					
ANR	1079909	Identifier	COLOR_MODE_16		1079890	1					
ANR	1079910	CompoundStatement		3:44:67:67	1079890	1					
ANR	1079911	ExpressionStatement	rcolor . r = r_num_rand ( 0xff )	169:2:3923:3951	1079890	0	True				
ANR	1079912	AssignmentExpression	rcolor . r = r_num_rand ( 0xff )		1079890	0		=			
ANR	1079913	MemberAccess	rcolor . r		1079890	0					
ANR	1079914	Identifier	rcolor		1079890	0					
ANR	1079915	Identifier	r		1079890	1					
ANR	1079916	CallExpression	r_num_rand ( 0xff )		1079890	1					
ANR	1079917	Callee	r_num_rand		1079890	0					
ANR	1079918	Identifier	r_num_rand		1079890	0					
ANR	1079919	ArgumentList	0xff		1079890	1					
ANR	1079920	Argument	0xff		1079890	0					
ANR	1079921	PrimaryExpression	0xff		1079890	0					
ANR	1079922	ExpressionStatement	rcolor . g = r_num_rand ( 0xff )	170:2:3955:3983	1079890	1	True				
ANR	1079923	AssignmentExpression	rcolor . g = r_num_rand ( 0xff )		1079890	0		=			
ANR	1079924	MemberAccess	rcolor . g		1079890	0					
ANR	1079925	Identifier	rcolor		1079890	0					
ANR	1079926	Identifier	g		1079890	1					
ANR	1079927	CallExpression	r_num_rand ( 0xff )		1079890	1					
ANR	1079928	Callee	r_num_rand		1079890	0					
ANR	1079929	Identifier	r_num_rand		1079890	0					
ANR	1079930	ArgumentList	0xff		1079890	1					
ANR	1079931	Argument	0xff		1079890	0					
ANR	1079932	PrimaryExpression	0xff		1079890	0					
ANR	1079933	ExpressionStatement	rcolor . b = r_num_rand ( 0xff )	171:2:3987:4015	1079890	2	True				
ANR	1079934	AssignmentExpression	rcolor . b = r_num_rand ( 0xff )		1079890	0		=			
ANR	1079935	MemberAccess	rcolor . b		1079890	0					
ANR	1079936	Identifier	rcolor		1079890	0					
ANR	1079937	Identifier	b		1079890	1					
ANR	1079938	CallExpression	r_num_rand ( 0xff )		1079890	1					
ANR	1079939	Callee	r_num_rand		1079890	0					
ANR	1079940	Identifier	r_num_rand		1079890	0					
ANR	1079941	ArgumentList	0xff		1079890	1					
ANR	1079942	Argument	0xff		1079890	0					
ANR	1079943	PrimaryExpression	0xff		1079890	0					
ANR	1079944	ExpressionStatement	rcolor . a = alpha	172:2:4019:4035	1079890	3	True				
ANR	1079945	AssignmentExpression	rcolor . a = alpha		1079890	0		=			
ANR	1079946	MemberAccess	rcolor . a		1079890	0					
ANR	1079947	Identifier	rcolor		1079890	0					
ANR	1079948	Identifier	a		1079890	1					
ANR	1079949	Identifier	alpha		1079890	1					
ANR	1079950	ReturnStatement	return rcolor ;	173:2:4039:4052	1079890	4	True				
ANR	1079951	Identifier	rcolor		1079890	0					
ANR	1079952	IdentifierDeclStatement	int r = r_num_rand ( 16 ) ;	175:1:4058:4081	1079890	2	True				
ANR	1079953	IdentifierDecl	r = r_num_rand ( 16 )		1079890	0					
ANR	1079954	IdentifierDeclType	int		1079890	0					
ANR	1079955	Identifier	r		1079890	1					
ANR	1079956	AssignmentExpression	r = r_num_rand ( 16 )		1079890	2		=			
ANR	1079957	Identifier	r		1079890	0					
ANR	1079958	CallExpression	r_num_rand ( 16 )		1079890	1					
ANR	1079959	Callee	r_num_rand		1079890	0					
ANR	1079960	Identifier	r_num_rand		1079890	0					
ANR	1079961	ArgumentList	16		1079890	1					
ANR	1079962	Argument	16		1079890	0					
ANR	1079963	PrimaryExpression	16		1079890	0					
ANR	1079964	SwitchStatement	switch ( r )		1079890	3					
ANR	1079965	Condition	r	176:9:4092:4092	1079890	0	True				
ANR	1079966	Identifier	r		1079890	0					
ANR	1079967	CompoundStatement		11:12:243:243	1079890	1					
ANR	1079968	Label	case 0 :	177:1:4098:4104	1079890	0	True				
ANR	1079969	Label	case 1 :	177:9:4106:4112	1079890	1	True				
ANR	1079970	ExpressionStatement	rcolor = ( RColor ) RColor_RED	177:17:4114:4142	1079890	2	True				
ANR	1079971	AssignmentExpression	rcolor = ( RColor ) RColor_RED		1079890	0		=			
ANR	1079972	Identifier	rcolor		1079890	0					
ANR	1079973	CastExpression	( RColor ) RColor_RED		1079890	1					
ANR	1079974	CastTarget	RColor		1079890	0					
ANR	1079975	Identifier	RColor_RED		1079890	1					
ANR	1079976	BreakStatement	break ;	177:47:4144:4149	1079890	3	True				
ANR	1079977	Label	case 2 :	178:1:4152:4158	1079890	4	True				
ANR	1079978	Label	case 3 :	178:9:4160:4166	1079890	5	True				
ANR	1079979	ExpressionStatement	rcolor = ( RColor ) RColor_WHITE	178:17:4168:4198	1079890	6	True				
ANR	1079980	AssignmentExpression	rcolor = ( RColor ) RColor_WHITE		1079890	0		=			
ANR	1079981	Identifier	rcolor		1079890	0					
ANR	1079982	CastExpression	( RColor ) RColor_WHITE		1079890	1					
ANR	1079983	CastTarget	RColor		1079890	0					
ANR	1079984	Identifier	RColor_WHITE		1079890	1					
ANR	1079985	BreakStatement	break ;	178:49:4200:4205	1079890	7	True				
ANR	1079986	Label	case 4 :	179:1:4208:4214	1079890	8	True				
ANR	1079987	Label	case 5 :	179:9:4216:4222	1079890	9	True				
ANR	1079988	ExpressionStatement	rcolor = ( RColor ) RColor_GREEN	179:17:4224:4254	1079890	10	True				
ANR	1079989	AssignmentExpression	rcolor = ( RColor ) RColor_GREEN		1079890	0		=			
ANR	1079990	Identifier	rcolor		1079890	0					
ANR	1079991	CastExpression	( RColor ) RColor_GREEN		1079890	1					
ANR	1079992	CastTarget	RColor		1079890	0					
ANR	1079993	Identifier	RColor_GREEN		1079890	1					
ANR	1079994	BreakStatement	break ;	179:49:4256:4261	1079890	11	True				
ANR	1079995	Label	case 6 :	180:1:4264:4270	1079890	12	True				
ANR	1079996	Label	case 7 :	180:9:4272:4278	1079890	13	True				
ANR	1079997	ExpressionStatement	rcolor = ( RColor ) RColor_MAGENTA	180:17:4280:4312	1079890	14	True				
ANR	1079998	AssignmentExpression	rcolor = ( RColor ) RColor_MAGENTA		1079890	0		=			
ANR	1079999	Identifier	rcolor		1079890	0					
ANR	1080000	CastExpression	( RColor ) RColor_MAGENTA		1079890	1					
ANR	1080001	CastTarget	RColor		1079890	0					
ANR	1080002	Identifier	RColor_MAGENTA		1079890	1					
ANR	1080003	BreakStatement	break ;	180:51:4314:4319	1079890	15	True				
ANR	1080004	Label	case 8 :	181:1:4322:4328	1079890	16	True				
ANR	1080005	Label	case 9 :	181:9:4330:4336	1079890	17	True				
ANR	1080006	ExpressionStatement	rcolor = ( RColor ) RColor_YELLOW	181:17:4338:4369	1079890	18	True				
ANR	1080007	AssignmentExpression	rcolor = ( RColor ) RColor_YELLOW		1079890	0		=			
ANR	1080008	Identifier	rcolor		1079890	0					
ANR	1080009	CastExpression	( RColor ) RColor_YELLOW		1079890	1					
ANR	1080010	CastTarget	RColor		1079890	0					
ANR	1080011	Identifier	RColor_YELLOW		1079890	1					
ANR	1080012	BreakStatement	break ;	181:50:4371:4376	1079890	19	True				
ANR	1080013	Label	case 10 :	182:1:4379:4386	1079890	20	True				
ANR	1080014	Label	case 11 :	182:10:4388:4395	1079890	21	True				
ANR	1080015	ExpressionStatement	rcolor = ( RColor ) RColor_CYAN	182:19:4397:4426	1079890	22	True				
ANR	1080016	AssignmentExpression	rcolor = ( RColor ) RColor_CYAN		1079890	0		=			
ANR	1080017	Identifier	rcolor		1079890	0					
ANR	1080018	CastExpression	( RColor ) RColor_CYAN		1079890	1					
ANR	1080019	CastTarget	RColor		1079890	0					
ANR	1080020	Identifier	RColor_CYAN		1079890	1					
ANR	1080021	BreakStatement	break ;	182:50:4428:4433	1079890	23	True				
ANR	1080022	Label	case 12 :	183:1:4436:4443	1079890	24	True				
ANR	1080023	Label	case 13 :	183:10:4445:4452	1079890	25	True				
ANR	1080024	ExpressionStatement	rcolor = ( RColor ) RColor_BLUE	183:19:4454:4483	1079890	26	True				
ANR	1080025	AssignmentExpression	rcolor = ( RColor ) RColor_BLUE		1079890	0		=			
ANR	1080026	Identifier	rcolor		1079890	0					
ANR	1080027	CastExpression	( RColor ) RColor_BLUE		1079890	1					
ANR	1080028	CastTarget	RColor		1079890	0					
ANR	1080029	Identifier	RColor_BLUE		1079890	1					
ANR	1080030	BreakStatement	break ;	183:50:4485:4490	1079890	27	True				
ANR	1080031	Label	case 14 :	184:1:4493:4500	1079890	28	True				
ANR	1080032	Label	case 15 :	184:10:4502:4509	1079890	29	True				
ANR	1080033	ExpressionStatement	rcolor = ( RColor ) RColor_GRAY	184:19:4511:4540	1079890	30	True				
ANR	1080034	AssignmentExpression	rcolor = ( RColor ) RColor_GRAY		1079890	0		=			
ANR	1080035	Identifier	rcolor		1079890	0					
ANR	1080036	CastExpression	( RColor ) RColor_GRAY		1079890	1					
ANR	1080037	CastTarget	RColor		1079890	0					
ANR	1080038	Identifier	RColor_GRAY		1079890	1					
ANR	1080039	BreakStatement	break ;	184:50:4542:4547	1079890	31	True				
ANR	1080040	IfStatement	if ( r & 1 )		1079890	4					
ANR	1080041	Condition	r & 1	186:5:4557:4561	1079890	0	True				
ANR	1080042	BitAndExpression	r & 1		1079890	0		&			
ANR	1080043	Identifier	r		1079890	0					
ANR	1080044	PrimaryExpression	1		1079890	1					
ANR	1080045	CompoundStatement		21:12:712:712	1079890	1					
ANR	1080046	ExpressionStatement	rcolor . attr = R_CONS_ATTR_BOLD	187:2:4568:4598	1079890	0	True				
ANR	1080047	AssignmentExpression	rcolor . attr = R_CONS_ATTR_BOLD		1079890	0		=			
ANR	1080048	MemberAccess	rcolor . attr		1079890	0					
ANR	1080049	Identifier	rcolor		1079890	0					
ANR	1080050	Identifier	attr		1079890	1					
ANR	1080051	Identifier	R_CONS_ATTR_BOLD		1079890	1					
ANR	1080052	ReturnStatement	return rcolor ;	189:1:4604:4617	1079890	5	True				
ANR	1080053	Identifier	rcolor		1079890	0					
ANR	1080054	ReturnType	R_API RColor		1079890	1					
ANR	1080055	Identifier	r_cons_color_random		1079890	2					
ANR	1080056	ParameterList	ut8 alpha		1079890	3					
ANR	1080057	Parameter	ut8 alpha	166:33:3840:3848	1079890	0	True				
ANR	1080058	ParameterType	ut8		1079890	0					
ANR	1080059	Identifier	alpha		1079890	1					
ANR	1080060	CFGEntryNode	ENTRY		1079890		True				
ANR	1080061	CFGExitNode	EXIT		1079890		True				
ANR	1080062	Symbol	rcolor . g		1079890						
ANR	1080063	Symbol	rcolor . attr		1079890						
ANR	1080064	Symbol	I		1079890						
ANR	1080065	Symbol	RColor_CYAN		1079890						
ANR	1080066	Symbol	I . context		1079890						
ANR	1080067	Symbol	RColor_RED		1079890						
ANR	1080068	Symbol	RColor_GRAY		1079890						
ANR	1080069	Symbol	rcolor . a		1079890						
ANR	1080070	Symbol	r_num_rand		1079890						
ANR	1080071	Symbol	rcolor . b		1079890						
ANR	1080072	Symbol	RColor_YELLOW		1079890						
ANR	1080073	Symbol	R_CONS_ATTR_BOLD		1079890						
ANR	1080074	Symbol	* I . context		1079890						
ANR	1080075	Symbol	COLOR_MODE_16		1079890						
ANR	1080076	Symbol	I . context -> color_mode		1079890						
ANR	1080077	Symbol	r		1079890						
ANR	1080078	Symbol	RColor_WHITE		1079890						
ANR	1080079	Symbol	RColor_BLUE		1079890						
ANR	1080080	Symbol	* I		1079890						
ANR	1080081	Symbol	alpha		1079890						
ANR	1080082	Symbol	RColor_MAGENTA		1079890						
ANR	1080083	Symbol	RColor_GREEN		1079890						
ANR	1080084	Symbol	rcolor		1079890						
ANR	1080085	Symbol	rcolor . r		1079890						
ANR	1080086	Function	r_cons_color	192:0:4622:4992							
ANR	1080087	FunctionDef	"r_cons_color (int fg , int r , int g , int b)"		1080086	0					
ANR	1080088	CompoundStatement		192:53:4675:4992	1080086	0					
ANR	1080089	IdentifierDeclStatement	int k ;	193:1:4678:4683	1080086	0	True				
ANR	1080090	IdentifierDecl	k		1080086	0					
ANR	1080091	IdentifierDeclType	int		1080086	0					
ANR	1080092	Identifier	k		1080086	1					
ANR	1080093	ExpressionStatement	"r = R_DIM ( r , 0 , 255 )"	194:1:4686:4707	1080086	1	True				
ANR	1080094	AssignmentExpression	"r = R_DIM ( r , 0 , 255 )"		1080086	0		=			
ANR	1080095	Identifier	r		1080086	0					
ANR	1080096	CallExpression	"R_DIM ( r , 0 , 255 )"		1080086	1					
ANR	1080097	Callee	R_DIM		1080086	0					
ANR	1080098	Identifier	R_DIM		1080086	0					
ANR	1080099	ArgumentList	r		1080086	1					
ANR	1080100	Argument	r		1080086	0					
ANR	1080101	Identifier	r		1080086	0					
ANR	1080102	Argument	0		1080086	1					
ANR	1080103	PrimaryExpression	0		1080086	0					
ANR	1080104	Argument	255		1080086	2					
ANR	1080105	PrimaryExpression	255		1080086	0					
ANR	1080106	ExpressionStatement	"g = R_DIM ( g , 0 , 255 )"	195:1:4710:4731	1080086	2	True				
ANR	1080107	AssignmentExpression	"g = R_DIM ( g , 0 , 255 )"		1080086	0		=			
ANR	1080108	Identifier	g		1080086	0					
ANR	1080109	CallExpression	"R_DIM ( g , 0 , 255 )"		1080086	1					
ANR	1080110	Callee	R_DIM		1080086	0					
ANR	1080111	Identifier	R_DIM		1080086	0					
ANR	1080112	ArgumentList	g		1080086	1					
ANR	1080113	Argument	g		1080086	0					
ANR	1080114	Identifier	g		1080086	0					
ANR	1080115	Argument	0		1080086	1					
ANR	1080116	PrimaryExpression	0		1080086	0					
ANR	1080117	Argument	255		1080086	2					
ANR	1080118	PrimaryExpression	255		1080086	0					
ANR	1080119	ExpressionStatement	"b = R_DIM ( b , 0 , 255 )"	196:1:4734:4755	1080086	3	True				
ANR	1080120	AssignmentExpression	"b = R_DIM ( b , 0 , 255 )"		1080086	0		=			
ANR	1080121	Identifier	b		1080086	0					
ANR	1080122	CallExpression	"R_DIM ( b , 0 , 255 )"		1080086	1					
ANR	1080123	Callee	R_DIM		1080086	0					
ANR	1080124	Identifier	R_DIM		1080086	0					
ANR	1080125	ArgumentList	b		1080086	1					
ANR	1080126	Argument	b		1080086	0					
ANR	1080127	Identifier	b		1080086	0					
ANR	1080128	Argument	0		1080086	1					
ANR	1080129	PrimaryExpression	0		1080086	0					
ANR	1080130	Argument	255		1080086	2					
ANR	1080131	PrimaryExpression	255		1080086	0					
ANR	1080132	IfStatement	if ( r == g && g == b )		1080086	4					
ANR	1080133	Condition	r == g && g == b	197:5:4762:4777	1080086	0	True				
ANR	1080134	AndExpression	r == g && g == b		1080086	0		&&			
ANR	1080135	EqualityExpression	r == g		1080086	0		==			
ANR	1080136	Identifier	r		1080086	0					
ANR	1080137	Identifier	g		1080086	1					
ANR	1080138	EqualityExpression	g == b		1080086	1		==			
ANR	1080139	Identifier	g		1080086	0					
ANR	1080140	Identifier	b		1080086	1					
ANR	1080141	CompoundStatement		6:23:104:104	1080086	1					
ANR	1080142	ExpressionStatement	k = 232 + ( int ) ( ( ( r + g + b ) / 3 ) / 10.3 )	198:2:4791:4824	1080086	0	True				
ANR	1080143	AssignmentExpression	k = 232 + ( int ) ( ( ( r + g + b ) / 3 ) / 10.3 )		1080086	0		=			
ANR	1080144	Identifier	k		1080086	0					
ANR	1080145	AdditiveExpression	232 + ( int ) ( ( ( r + g + b ) / 3 ) / 10.3 )		1080086	1		+			
ANR	1080146	PrimaryExpression	232		1080086	0					
ANR	1080147	CastExpression	( int ) ( ( ( r + g + b ) / 3 ) / 10.3 )		1080086	1					
ANR	1080148	CastTarget	int		1080086	0					
ANR	1080149	MultiplicativeExpression	( ( r + g + b ) / 3 ) / 10.3		1080086	1		/			
ANR	1080150	MultiplicativeExpression	( r + g + b ) / 3		1080086	0		/			
ANR	1080151	AdditiveExpression	r + g + b		1080086	0		+			
ANR	1080152	Identifier	r		1080086	0					
ANR	1080153	AdditiveExpression	g + b		1080086	1		+			
ANR	1080154	Identifier	g		1080086	0					
ANR	1080155	Identifier	b		1080086	1					
ANR	1080156	PrimaryExpression	3		1080086	1					
ANR	1080157	PrimaryExpression	10.3		1080086	1					
ANR	1080158	ElseStatement	else		1080086	0					
ANR	1080159	CompoundStatement		8:8:158:158	1080086	0					
ANR	1080160	ExpressionStatement	r = ( int ) ( r / 42.6 )	200:2:4838:4857	1080086	0	True				
ANR	1080161	AssignmentExpression	r = ( int ) ( r / 42.6 )		1080086	0		=			
ANR	1080162	Identifier	r		1080086	0					
ANR	1080163	CastExpression	( int ) ( r / 42.6 )		1080086	1					
ANR	1080164	CastTarget	int		1080086	0					
ANR	1080165	MultiplicativeExpression	r / 42.6		1080086	1		/			
ANR	1080166	Identifier	r		1080086	0					
ANR	1080167	PrimaryExpression	42.6		1080086	1					
ANR	1080168	ExpressionStatement	g = ( int ) ( g / 42.6 )	201:2:4861:4880	1080086	1	True				
ANR	1080169	AssignmentExpression	g = ( int ) ( g / 42.6 )		1080086	0		=			
ANR	1080170	Identifier	g		1080086	0					
ANR	1080171	CastExpression	( int ) ( g / 42.6 )		1080086	1					
ANR	1080172	CastTarget	int		1080086	0					
ANR	1080173	MultiplicativeExpression	g / 42.6		1080086	1		/			
ANR	1080174	Identifier	g		1080086	0					
ANR	1080175	PrimaryExpression	42.6		1080086	1					
ANR	1080176	ExpressionStatement	b = ( int ) ( b / 42.6 )	202:2:4884:4903	1080086	2	True				
ANR	1080177	AssignmentExpression	b = ( int ) ( b / 42.6 )		1080086	0		=			
ANR	1080178	Identifier	b		1080086	0					
ANR	1080179	CastExpression	( int ) ( b / 42.6 )		1080086	1					
ANR	1080180	CastTarget	int		1080086	0					
ANR	1080181	MultiplicativeExpression	b / 42.6		1080086	1		/			
ANR	1080182	Identifier	b		1080086	0					
ANR	1080183	PrimaryExpression	42.6		1080086	1					
ANR	1080184	ExpressionStatement	k = 16 + ( r * 36 ) + ( g * 6 ) + b	203:2:4907:4938	1080086	3	True				
ANR	1080185	AssignmentExpression	k = 16 + ( r * 36 ) + ( g * 6 ) + b		1080086	0		=			
ANR	1080186	Identifier	k		1080086	0					
ANR	1080187	AdditiveExpression	16 + ( r * 36 ) + ( g * 6 ) + b		1080086	1		+			
ANR	1080188	PrimaryExpression	16		1080086	0					
ANR	1080189	AdditiveExpression	( r * 36 ) + ( g * 6 ) + b		1080086	1		+			
ANR	1080190	MultiplicativeExpression	r * 36		1080086	0		*			
ANR	1080191	Identifier	r		1080086	0					
ANR	1080192	PrimaryExpression	36		1080086	1					
ANR	1080193	AdditiveExpression	( g * 6 ) + b		1080086	1		+			
ANR	1080194	MultiplicativeExpression	g * 6		1080086	0		*			
ANR	1080195	Identifier	g		1080086	0					
ANR	1080196	PrimaryExpression	6		1080086	1					
ANR	1080197	Identifier	b		1080086	1					
ANR	1080198	ExpressionStatement	"r_cons_printf ( ""\\x1b[%d;5;%dm"" , fg ? 48 : 38 , k )"	205:1:4944:4990	1080086	5	True				
ANR	1080199	CallExpression	"r_cons_printf ( ""\\x1b[%d;5;%dm"" , fg ? 48 : 38 , k )"		1080086	0					
ANR	1080200	Callee	r_cons_printf		1080086	0					
ANR	1080201	Identifier	r_cons_printf		1080086	0					
ANR	1080202	ArgumentList	"""\\x1b[%d;5;%dm"""		1080086	1					
ANR	1080203	Argument	"""\\x1b[%d;5;%dm"""		1080086	0					
ANR	1080204	PrimaryExpression	"""\\x1b[%d;5;%dm"""		1080086	0					
ANR	1080205	Argument	fg ? 48 : 38		1080086	1					
ANR	1080206	ConditionalExpression	fg ? 48 : 38		1080086	0					
ANR	1080207	Condition	fg		1080086	0					
ANR	1080208	Identifier	fg		1080086	0					
ANR	1080209	PrimaryExpression	48		1080086	1					
ANR	1080210	PrimaryExpression	38		1080086	2					
ANR	1080211	Argument	k		1080086	2					
ANR	1080212	Identifier	k		1080086	0					
ANR	1080213	ReturnType	R_API void		1080086	1					
ANR	1080214	Identifier	r_cons_color		1080086	2					
ANR	1080215	ParameterList	"int fg , int r , int g , int b"		1080086	3					
ANR	1080216	Parameter	int fg	192:24:4646:4651	1080086	0	True				
ANR	1080217	ParameterType	int		1080086	0					
ANR	1080218	Identifier	fg		1080086	1					
ANR	1080219	Parameter	int r	192:32:4654:4658	1080086	1	True				
ANR	1080220	ParameterType	int		1080086	0					
ANR	1080221	Identifier	r		1080086	1					
ANR	1080222	Parameter	int g	192:39:4661:4665	1080086	2	True				
ANR	1080223	ParameterType	int		1080086	0					
ANR	1080224	Identifier	g		1080086	1					
ANR	1080225	Parameter	int b	192:46:4668:4672	1080086	3	True				
ANR	1080226	ParameterType	int		1080086	0					
ANR	1080227	Identifier	b		1080086	1					
ANR	1080228	CFGEntryNode	ENTRY		1080086		True				
ANR	1080229	CFGExitNode	EXIT		1080086		True				
ANR	1080230	Symbol	fg		1080086						
ANR	1080231	Symbol	r		1080086						
ANR	1080232	Symbol	b		1080086						
ANR	1080233	Symbol	R_DIM		1080086						
ANR	1080234	Symbol	g		1080086						
ANR	1080235	Symbol	k		1080086						
ANR	1080236	Function	r_cons_println	208:0:4995:5081							
ANR	1080237	FunctionDef	r_cons_println (const char * str)		1080236	0					
ANR	1080238	CompoundStatement		208:43:5038:5081	1080236	0					
ANR	1080239	ExpressionStatement	r_cons_print ( str )	209:1:5041:5059	1080236	0	True				
ANR	1080240	CallExpression	r_cons_print ( str )		1080236	0					
ANR	1080241	Callee	r_cons_print		1080236	0					
ANR	1080242	Identifier	r_cons_print		1080236	0					
ANR	1080243	ArgumentList	str		1080236	1					
ANR	1080244	Argument	str		1080236	0					
ANR	1080245	Identifier	str		1080236	0					
ANR	1080246	ExpressionStatement	r_cons_newline ( )	210:1:5062:5079	1080236	1	True				
ANR	1080247	CallExpression	r_cons_newline ( )		1080236	0					
ANR	1080248	Callee	r_cons_newline		1080236	0					
ANR	1080249	Identifier	r_cons_newline		1080236	0					
ANR	1080250	ArgumentList			1080236	1					
ANR	1080251	ReturnType	R_API void		1080236	1					
ANR	1080252	Identifier	r_cons_println		1080236	2					
ANR	1080253	ParameterList	const char * str		1080236	3					
ANR	1080254	Parameter	const char * str	208:26:5021:5035	1080236	0	True				
ANR	1080255	ParameterType	const char *		1080236	0					
ANR	1080256	Identifier	str		1080236	1					
ANR	1080257	CFGEntryNode	ENTRY		1080236		True				
ANR	1080258	CFGExitNode	EXIT		1080236		True				
ANR	1080259	Symbol	str		1080236						
ANR	1080260	Function	r_cons_strcat_justify	213:0:5084:5510							
ANR	1080261	FunctionDef	"r_cons_strcat_justify (const char * str , int j , char c)"		1080260	0					
ANR	1080262	CompoundStatement		213:65:5149:5510	1080260	0					
ANR	1080263	IdentifierDeclStatement	"int i , o , len ;"	214:1:5152:5165	1080260	0	True				
ANR	1080264	IdentifierDecl	i		1080260	0					
ANR	1080265	IdentifierDeclType	int		1080260	0					
ANR	1080266	Identifier	i		1080260	1					
ANR	1080267	IdentifierDecl	o		1080260	1					
ANR	1080268	IdentifierDeclType	int		1080260	0					
ANR	1080269	Identifier	o		1080260	1					
ANR	1080270	IdentifierDecl	len		1080260	2					
ANR	1080271	IdentifierDeclType	int		1080260	0					
ANR	1080272	Identifier	len		1080260	1					
ANR	1080273	ForStatement	"for ( o = i = len = 0 ; str [ i ] ; i ++ , len ++ )"		1080260	1					
ANR	1080274	ForInit	o = i = len = 0 ;	215:6:5173:5188	1080260	0	True				
ANR	1080275	AssignmentExpression	o = i = len = 0		1080260	0		=			
ANR	1080276	Identifier	o		1080260	0					
ANR	1080277	AssignmentExpression	i = len = 0		1080260	1		=			
ANR	1080278	Identifier	i		1080260	0					
ANR	1080279	AssignmentExpression	len = 0		1080260	1		=			
ANR	1080280	Identifier	len		1080260	0					
ANR	1080281	PrimaryExpression	0		1080260	1					
ANR	1080282	Condition	str [ i ]	215:23:5190:5195	1080260	1	True				
ANR	1080283	ArrayIndexing	str [ i ]		1080260	0					
ANR	1080284	Identifier	str		1080260	0					
ANR	1080285	Identifier	i		1080260	1					
ANR	1080286	Expression	"i ++ , len ++"	215:31:5198:5207	1080260	2	True				
ANR	1080287	PostIncDecOperationExpression	i ++		1080260	0					
ANR	1080288	Identifier	i		1080260	0					
ANR	1080289	IncDec	++		1080260	1					
ANR	1080290	PostIncDecOperationExpression	len ++		1080260	1					
ANR	1080291	Identifier	len		1080260	0					
ANR	1080292	IncDec	++		1080260	1					
ANR	1080293	CompoundStatement		3:43:60:60	1080260	3					
ANR	1080294	IfStatement	if ( str [ i ] == '\\n' )		1080260	0					
ANR	1080295	Condition	str [ i ] == '\\n'	216:6:5218:5231	1080260	0	True				
ANR	1080296	EqualityExpression	str [ i ] == '\\n'		1080260	0		==			
ANR	1080297	ArrayIndexing	str [ i ]		1080260	0					
ANR	1080298	Identifier	str		1080260	0					
ANR	1080299	Identifier	i		1080260	1					
ANR	1080300	PrimaryExpression	'\\n'		1080260	1					
ANR	1080301	CompoundStatement		4:22:84:84	1080260	1					
ANR	1080302	ExpressionStatement	"r_cons_memset ( ' ' , j )"	217:3:5239:5261	1080260	0	True				
ANR	1080303	CallExpression	"r_cons_memset ( ' ' , j )"		1080260	0					
ANR	1080304	Callee	r_cons_memset		1080260	0					
ANR	1080305	Identifier	r_cons_memset		1080260	0					
ANR	1080306	ArgumentList	' '		1080260	1					
ANR	1080307	Argument	' '		1080260	0					
ANR	1080308	PrimaryExpression	' '		1080260	0					
ANR	1080309	Argument	j		1080260	1					
ANR	1080310	Identifier	j		1080260	0					
ANR	1080311	IfStatement	if ( c )		1080260	1					
ANR	1080312	Condition	c	218:7:5270:5270	1080260	0	True				
ANR	1080313	Identifier	c		1080260	0					
ANR	1080314	CompoundStatement		6:10:123:123	1080260	1					
ANR	1080315	ExpressionStatement	"r_cons_memset ( c , 1 )"	219:4:5279:5299	1080260	0	True				
ANR	1080316	CallExpression	"r_cons_memset ( c , 1 )"		1080260	0					
ANR	1080317	Callee	r_cons_memset		1080260	0					
ANR	1080318	Identifier	r_cons_memset		1080260	0					
ANR	1080319	ArgumentList	c		1080260	1					
ANR	1080320	Argument	c		1080260	0					
ANR	1080321	Identifier	c		1080260	0					
ANR	1080322	Argument	1		1080260	1					
ANR	1080323	PrimaryExpression	1		1080260	0					
ANR	1080324	ExpressionStatement	"r_cons_memset ( ' ' , 1 )"	220:4:5305:5327	1080260	1	True				
ANR	1080325	CallExpression	"r_cons_memset ( ' ' , 1 )"		1080260	0					
ANR	1080326	Callee	r_cons_memset		1080260	0					
ANR	1080327	Identifier	r_cons_memset		1080260	0					
ANR	1080328	ArgumentList	' '		1080260	1					
ANR	1080329	Argument	' '		1080260	0					
ANR	1080330	PrimaryExpression	' '		1080260	0					
ANR	1080331	Argument	1		1080260	1					
ANR	1080332	PrimaryExpression	1		1080260	0					
ANR	1080333	ExpressionStatement	"r_cons_memcat ( str + o , len )"	222:3:5337:5365	1080260	2	True				
ANR	1080334	CallExpression	"r_cons_memcat ( str + o , len )"		1080260	0					
ANR	1080335	Callee	r_cons_memcat		1080260	0					
ANR	1080336	Identifier	r_cons_memcat		1080260	0					
ANR	1080337	ArgumentList	str + o		1080260	1					
ANR	1080338	Argument	str + o		1080260	0					
ANR	1080339	AdditiveExpression	str + o		1080260	0		+			
ANR	1080340	Identifier	str		1080260	0					
ANR	1080341	Identifier	o		1080260	1					
ANR	1080342	Argument	len		1080260	1					
ANR	1080343	Identifier	len		1080260	0					
ANR	1080344	IfStatement	if ( str [ o + len ] == '\\n' )		1080260	3					
ANR	1080345	Condition	str [ o + len ] == '\\n'	223:7:5374:5393	1080260	0	True				
ANR	1080346	EqualityExpression	str [ o + len ] == '\\n'		1080260	0		==			
ANR	1080347	ArrayIndexing	str [ o + len ]		1080260	0					
ANR	1080348	Identifier	str		1080260	0					
ANR	1080349	AdditiveExpression	o + len		1080260	1		+			
ANR	1080350	Identifier	o		1080260	0					
ANR	1080351	Identifier	len		1080260	1					
ANR	1080352	PrimaryExpression	'\\n'		1080260	1					
ANR	1080353	CompoundStatement		11:29:246:246	1080260	1					
ANR	1080354	ExpressionStatement	r_cons_newline ( )	224:4:5402:5419	1080260	0	True				
ANR	1080355	CallExpression	r_cons_newline ( )		1080260	0					
ANR	1080356	Callee	r_cons_newline		1080260	0					
ANR	1080357	Identifier	r_cons_newline		1080260	0					
ANR	1080358	ArgumentList			1080260	1					
ANR	1080359	ExpressionStatement	o = i + 1	226:3:5429:5438	1080260	4	True				
ANR	1080360	AssignmentExpression	o = i + 1		1080260	0		=			
ANR	1080361	Identifier	o		1080260	0					
ANR	1080362	AdditiveExpression	i + 1		1080260	1		+			
ANR	1080363	Identifier	i		1080260	0					
ANR	1080364	PrimaryExpression	1		1080260	1					
ANR	1080365	ExpressionStatement	len = 0	227:3:5443:5450	1080260	5	True				
ANR	1080366	AssignmentExpression	len = 0		1080260	0		=			
ANR	1080367	Identifier	len		1080260	0					
ANR	1080368	PrimaryExpression	0		1080260	1					
ANR	1080369	IfStatement	if ( len > 1 )		1080260	2					
ANR	1080370	Condition	len > 1	230:5:5464:5470	1080260	0	True				
ANR	1080371	RelationalExpression	len > 1		1080260	0		>			
ANR	1080372	Identifier	len		1080260	0					
ANR	1080373	PrimaryExpression	1		1080260	1					
ANR	1080374	CompoundStatement		18:14:323:323	1080260	1					
ANR	1080375	ExpressionStatement	"r_cons_memcat ( str + o , len )"	231:2:5477:5505	1080260	0	True				
ANR	1080376	CallExpression	"r_cons_memcat ( str + o , len )"		1080260	0					
ANR	1080377	Callee	r_cons_memcat		1080260	0					
ANR	1080378	Identifier	r_cons_memcat		1080260	0					
ANR	1080379	ArgumentList	str + o		1080260	1					
ANR	1080380	Argument	str + o		1080260	0					
ANR	1080381	AdditiveExpression	str + o		1080260	0		+			
ANR	1080382	Identifier	str		1080260	0					
ANR	1080383	Identifier	o		1080260	1					
ANR	1080384	Argument	len		1080260	1					
ANR	1080385	Identifier	len		1080260	0					
ANR	1080386	ReturnType	R_API void		1080260	1					
ANR	1080387	Identifier	r_cons_strcat_justify		1080260	2					
ANR	1080388	ParameterList	"const char * str , int j , char c"		1080260	3					
ANR	1080389	Parameter	const char * str	213:33:5117:5131	1080260	0	True				
ANR	1080390	ParameterType	const char *		1080260	0					
ANR	1080391	Identifier	str		1080260	1					
ANR	1080392	Parameter	int j	213:50:5134:5138	1080260	1	True				
ANR	1080393	ParameterType	int		1080260	0					
ANR	1080394	Identifier	j		1080260	1					
ANR	1080395	Parameter	char c	213:57:5141:5146	1080260	2	True				
ANR	1080396	ParameterType	char		1080260	0					
ANR	1080397	Identifier	c		1080260	1					
ANR	1080398	CFGEntryNode	ENTRY		1080260		True				
ANR	1080399	CFGExitNode	EXIT		1080260		True				
ANR	1080400	Symbol	str		1080260						
ANR	1080401	Symbol	c		1080260						
ANR	1080402	Symbol	* i		1080260						
ANR	1080403	Symbol	len		1080260						
ANR	1080404	Symbol	i		1080260						
ANR	1080405	Symbol	* o		1080260						
ANR	1080406	Symbol	j		1080260						
ANR	1080407	Symbol	* str		1080260						
ANR	1080408	Symbol	o		1080260						
ANR	1080409	Symbol	* len		1080260						
ANR	1080410	Function	r_cons_strcat_at	235:0:5513:6397							
ANR	1080411	FunctionDef	"r_cons_strcat_at (const char * _str , int x , char y , int w , int h)"		1080410	0					
ANR	1080412	CompoundStatement		235:75:5588:6397	1080410	0					
ANR	1080413	IdentifierDeclStatement	"int i , o , len ;"	236:1:5591:5604	1080410	0	True				
ANR	1080414	IdentifierDecl	i		1080410	0					
ANR	1080415	IdentifierDeclType	int		1080410	0					
ANR	1080416	Identifier	i		1080410	1					
ANR	1080417	IdentifierDecl	o		1080410	1					
ANR	1080418	IdentifierDeclType	int		1080410	0					
ANR	1080419	Identifier	o		1080410	1					
ANR	1080420	IdentifierDecl	len		1080410	2					
ANR	1080421	IdentifierDeclType	int		1080410	0					
ANR	1080422	Identifier	len		1080410	1					
ANR	1080423	IdentifierDeclStatement	int cols = 0 ;	237:1:5607:5619	1080410	1	True				
ANR	1080424	IdentifierDecl	cols = 0		1080410	0					
ANR	1080425	IdentifierDeclType	int		1080410	0					
ANR	1080426	Identifier	cols		1080410	1					
ANR	1080427	AssignmentExpression	cols = 0		1080410	2		=			
ANR	1080428	Identifier	cols		1080410	0					
ANR	1080429	PrimaryExpression	0		1080410	1					
ANR	1080430	IdentifierDeclStatement	int rows = 0 ;	238:1:5622:5634	1080410	2	True				
ANR	1080431	IdentifierDecl	rows = 0		1080410	0					
ANR	1080432	IdentifierDeclType	int		1080410	0					
ANR	1080433	Identifier	rows		1080410	1					
ANR	1080434	AssignmentExpression	rows = 0		1080410	2		=			
ANR	1080435	Identifier	rows		1080410	0					
ANR	1080436	PrimaryExpression	0		1080410	1					
ANR	1080437	IfStatement	if ( x < 0 || y < 0 )		1080410	3					
ANR	1080438	Condition	x < 0 || y < 0	239:5:5641:5654	1080410	0	True				
ANR	1080439	OrExpression	x < 0 || y < 0		1080410	0		||			
ANR	1080440	RelationalExpression	x < 0		1080410	0		<			
ANR	1080441	Identifier	x		1080410	0					
ANR	1080442	PrimaryExpression	0		1080410	1					
ANR	1080443	RelationalExpression	y < 0		1080410	1		<			
ANR	1080444	Identifier	y		1080410	0					
ANR	1080445	PrimaryExpression	0		1080410	1					
ANR	1080446	CompoundStatement		6:2:72:103	1080410	1					
ANR	1080447	IdentifierDeclStatement	"int H , W = r_cons_get_size ( & H ) ;"	240:2:5661:5692	1080410	0	True				
ANR	1080448	IdentifierDecl	H		1080410	0					
ANR	1080449	IdentifierDeclType	int		1080410	0					
ANR	1080450	Identifier	H		1080410	1					
ANR	1080451	IdentifierDecl	W = r_cons_get_size ( & H )		1080410	1					
ANR	1080452	IdentifierDeclType	int		1080410	0					
ANR	1080453	Identifier	W		1080410	1					
ANR	1080454	AssignmentExpression	W = r_cons_get_size ( & H )		1080410	2		=			
ANR	1080455	Identifier	W		1080410	0					
ANR	1080456	CallExpression	r_cons_get_size ( & H )		1080410	1					
ANR	1080457	Callee	r_cons_get_size		1080410	0					
ANR	1080458	Identifier	r_cons_get_size		1080410	0					
ANR	1080459	ArgumentList	& H		1080410	1					
ANR	1080460	Argument	& H		1080410	0					
ANR	1080461	UnaryOperationExpression	& H		1080410	0					
ANR	1080462	UnaryOperator	&		1080410	0					
ANR	1080463	Identifier	H		1080410	1					
ANR	1080464	IfStatement	if ( x < 0 )		1080410	1					
ANR	1080465	Condition	x < 0	241:6:5700:5704	1080410	0	True				
ANR	1080466	RelationalExpression	x < 0		1080410	0		<			
ANR	1080467	Identifier	x		1080410	0					
ANR	1080468	PrimaryExpression	0		1080410	1					
ANR	1080469	CompoundStatement		7:13:118:118	1080410	1					
ANR	1080470	ExpressionStatement	x += W	242:3:5712:5718	1080410	0	True				
ANR	1080471	AssignmentExpression	x += W		1080410	0		+=			
ANR	1080472	Identifier	x		1080410	0					
ANR	1080473	Identifier	W		1080410	1					
ANR	1080474	IfStatement	if ( y < 0 )		1080410	2					
ANR	1080475	Condition	y < 0	244:6:5730:5734	1080410	0	True				
ANR	1080476	RelationalExpression	y < 0		1080410	0		<			
ANR	1080477	Identifier	y		1080410	0					
ANR	1080478	PrimaryExpression	0		1080410	1					
ANR	1080479	CompoundStatement		10:13:148:148	1080410	1					
ANR	1080480	ExpressionStatement	y += H	245:3:5742:5748	1080410	0	True				
ANR	1080481	AssignmentExpression	y += H		1080410	0		+=			
ANR	1080482	Identifier	y		1080410	0					
ANR	1080483	Identifier	H		1080410	1					
ANR	1080484	IdentifierDeclStatement	"char * str = r_str_ansi_crop ( _str , 0 , 0 , w + 1 , h ) ;"	248:1:5758:5808	1080410	4	True				
ANR	1080485	IdentifierDecl	"* str = r_str_ansi_crop ( _str , 0 , 0 , w + 1 , h )"		1080410	0					
ANR	1080486	IdentifierDeclType	char *		1080410	0					
ANR	1080487	Identifier	str		1080410	1					
ANR	1080488	AssignmentExpression	"* str = r_str_ansi_crop ( _str , 0 , 0 , w + 1 , h )"		1080410	2		=			
ANR	1080489	Identifier	str		1080410	0					
ANR	1080490	CallExpression	"r_str_ansi_crop ( _str , 0 , 0 , w + 1 , h )"		1080410	1					
ANR	1080491	Callee	r_str_ansi_crop		1080410	0					
ANR	1080492	Identifier	r_str_ansi_crop		1080410	0					
ANR	1080493	ArgumentList	_str		1080410	1					
ANR	1080494	Argument	_str		1080410	0					
ANR	1080495	Identifier	_str		1080410	0					
ANR	1080496	Argument	0		1080410	1					
ANR	1080497	PrimaryExpression	0		1080410	0					
ANR	1080498	Argument	0		1080410	2					
ANR	1080499	PrimaryExpression	0		1080410	0					
ANR	1080500	Argument	w + 1		1080410	3					
ANR	1080501	AdditiveExpression	w + 1		1080410	0		+			
ANR	1080502	Identifier	w		1080410	0					
ANR	1080503	PrimaryExpression	1		1080410	1					
ANR	1080504	Argument	h		1080410	4					
ANR	1080505	Identifier	h		1080410	0					
ANR	1080506	ExpressionStatement	r_cons_strcat ( R_CONS_CURSOR_SAVE )	249:1:5811:5845	1080410	5	True				
ANR	1080507	CallExpression	r_cons_strcat ( R_CONS_CURSOR_SAVE )		1080410	0					
ANR	1080508	Callee	r_cons_strcat		1080410	0					
ANR	1080509	Identifier	r_cons_strcat		1080410	0					
ANR	1080510	ArgumentList	R_CONS_CURSOR_SAVE		1080410	1					
ANR	1080511	Argument	R_CONS_CURSOR_SAVE		1080410	0					
ANR	1080512	Identifier	R_CONS_CURSOR_SAVE		1080410	0					
ANR	1080513	ForStatement	"for ( o = i = len = 0 ; str [ i ] ; i ++ , len ++ )"		1080410	6					
ANR	1080514	ForInit	o = i = len = 0 ;	250:6:5853:5868	1080410	0	True				
ANR	1080515	AssignmentExpression	o = i = len = 0		1080410	0		=			
ANR	1080516	Identifier	o		1080410	0					
ANR	1080517	AssignmentExpression	i = len = 0		1080410	1		=			
ANR	1080518	Identifier	i		1080410	0					
ANR	1080519	AssignmentExpression	len = 0		1080410	1		=			
ANR	1080520	Identifier	len		1080410	0					
ANR	1080521	PrimaryExpression	0		1080410	1					
ANR	1080522	Condition	str [ i ]	250:23:5870:5875	1080410	1	True				
ANR	1080523	ArrayIndexing	str [ i ]		1080410	0					
ANR	1080524	Identifier	str		1080410	0					
ANR	1080525	Identifier	i		1080410	1					
ANR	1080526	Expression	"i ++ , len ++"	250:31:5878:5887	1080410	2	True				
ANR	1080527	PostIncDecOperationExpression	i ++		1080410	0					
ANR	1080528	Identifier	i		1080410	0					
ANR	1080529	IncDec	++		1080410	1					
ANR	1080530	PostIncDecOperationExpression	len ++		1080410	1					
ANR	1080531	Identifier	len		1080410	0					
ANR	1080532	IncDec	++		1080410	1					
ANR	1080533	CompoundStatement		16:43:301:301	1080410	3					
ANR	1080534	IfStatement	if ( w < 0 || rows > w )		1080410	0					
ANR	1080535	Condition	w < 0 || rows > w	251:6:5898:5914	1080410	0	True				
ANR	1080536	OrExpression	w < 0 || rows > w		1080410	0		||			
ANR	1080537	RelationalExpression	w < 0		1080410	0		<			
ANR	1080538	Identifier	w		1080410	0					
ANR	1080539	PrimaryExpression	0		1080410	1					
ANR	1080540	RelationalExpression	rows > w		1080410	1		>			
ANR	1080541	Identifier	rows		1080410	0					
ANR	1080542	Identifier	w		1080410	1					
ANR	1080543	CompoundStatement		17:25:328:328	1080410	1					
ANR	1080544	BreakStatement	break ;	252:3:5922:5927	1080410	0	True				
ANR	1080545	IfStatement	if ( str [ i ] == '\\n' )		1080410	1					
ANR	1080546	Condition	str [ i ] == '\\n'	254:6:5939:5952	1080410	0	True				
ANR	1080547	EqualityExpression	str [ i ] == '\\n'		1080410	0		==			
ANR	1080548	ArrayIndexing	str [ i ]		1080410	0					
ANR	1080549	Identifier	str		1080410	0					
ANR	1080550	Identifier	i		1080410	1					
ANR	1080551	PrimaryExpression	'\\n'		1080410	1					
ANR	1080552	CompoundStatement		24:3:476:525	1080410	1					
ANR	1080553	ExpressionStatement	"r_cons_gotoxy ( x , y + rows )"	255:3:5960:5987	1080410	0	True				
ANR	1080554	CallExpression	"r_cons_gotoxy ( x , y + rows )"		1080410	0					
ANR	1080555	Callee	r_cons_gotoxy		1080410	0					
ANR	1080556	Identifier	r_cons_gotoxy		1080410	0					
ANR	1080557	ArgumentList	x		1080410	1					
ANR	1080558	Argument	x		1080410	0					
ANR	1080559	Identifier	x		1080410	0					
ANR	1080560	Argument	y + rows		1080410	1					
ANR	1080561	AdditiveExpression	y + rows		1080410	0		+			
ANR	1080562	Identifier	y		1080410	0					
ANR	1080563	Identifier	rows		1080410	1					
ANR	1080564	IdentifierDeclStatement	int ansilen = r_str_ansi_len ( str + o ) ;	256:3:5992:6030	1080410	1	True				
ANR	1080565	IdentifierDecl	ansilen = r_str_ansi_len ( str + o )		1080410	0					
ANR	1080566	IdentifierDeclType	int		1080410	0					
ANR	1080567	Identifier	ansilen		1080410	1					
ANR	1080568	AssignmentExpression	ansilen = r_str_ansi_len ( str + o )		1080410	2		=			
ANR	1080569	Identifier	ansilen		1080410	0					
ANR	1080570	CallExpression	r_str_ansi_len ( str + o )		1080410	1					
ANR	1080571	Callee	r_str_ansi_len		1080410	0					
ANR	1080572	Identifier	r_str_ansi_len		1080410	0					
ANR	1080573	ArgumentList	str + o		1080410	1					
ANR	1080574	Argument	str + o		1080410	0					
ANR	1080575	AdditiveExpression	str + o		1080410	0		+			
ANR	1080576	Identifier	str		1080410	0					
ANR	1080577	Identifier	o		1080410	1					
ANR	1080578	ExpressionStatement	"cols = R_MIN ( w , ansilen )"	257:3:6035:6060	1080410	2	True				
ANR	1080579	AssignmentExpression	"cols = R_MIN ( w , ansilen )"		1080410	0		=			
ANR	1080580	Identifier	cols		1080410	0					
ANR	1080581	CallExpression	"R_MIN ( w , ansilen )"		1080410	1					
ANR	1080582	Callee	R_MIN		1080410	0					
ANR	1080583	Identifier	R_MIN		1080410	0					
ANR	1080584	ArgumentList	w		1080410	1					
ANR	1080585	Argument	w		1080410	0					
ANR	1080586	Identifier	w		1080410	0					
ANR	1080587	Argument	ansilen		1080410	1					
ANR	1080588	Identifier	ansilen		1080410	0					
ANR	1080589	IdentifierDeclStatement	"const char * end = r_str_ansi_chrn ( str + o , cols ) ;"	258:3:6065:6114	1080410	3	True				
ANR	1080590	IdentifierDecl	"* end = r_str_ansi_chrn ( str + o , cols )"		1080410	0					
ANR	1080591	IdentifierDeclType	const char *		1080410	0					
ANR	1080592	Identifier	end		1080410	1					
ANR	1080593	AssignmentExpression	"* end = r_str_ansi_chrn ( str + o , cols )"		1080410	2		=			
ANR	1080594	Identifier	end		1080410	0					
ANR	1080595	CallExpression	"r_str_ansi_chrn ( str + o , cols )"		1080410	1					
ANR	1080596	Callee	r_str_ansi_chrn		1080410	0					
ANR	1080597	Identifier	r_str_ansi_chrn		1080410	0					
ANR	1080598	ArgumentList	str + o		1080410	1					
ANR	1080599	Argument	str + o		1080410	0					
ANR	1080600	AdditiveExpression	str + o		1080410	0		+			
ANR	1080601	Identifier	str		1080410	0					
ANR	1080602	Identifier	o		1080410	1					
ANR	1080603	Argument	cols		1080410	1					
ANR	1080604	Identifier	cols		1080410	0					
ANR	1080605	ExpressionStatement	cols = end - str + o	259:3:6119:6139	1080410	4	True				
ANR	1080606	AssignmentExpression	cols = end - str + o		1080410	0		=			
ANR	1080607	Identifier	cols		1080410	0					
ANR	1080608	AdditiveExpression	end - str + o		1080410	1		-			
ANR	1080609	Identifier	end		1080410	0					
ANR	1080610	AdditiveExpression	str + o		1080410	1		+			
ANR	1080611	Identifier	str		1080410	0					
ANR	1080612	Identifier	o		1080410	1					
ANR	1080613	ExpressionStatement	"r_cons_memcat ( str + o , R_MIN ( len , cols ) )"	260:3:6144:6186	1080410	5	True				
ANR	1080614	CallExpression	"r_cons_memcat ( str + o , R_MIN ( len , cols ) )"		1080410	0					
ANR	1080615	Callee	r_cons_memcat		1080410	0					
ANR	1080616	Identifier	r_cons_memcat		1080410	0					
ANR	1080617	ArgumentList	str + o		1080410	1					
ANR	1080618	Argument	str + o		1080410	0					
ANR	1080619	AdditiveExpression	str + o		1080410	0		+			
ANR	1080620	Identifier	str		1080410	0					
ANR	1080621	Identifier	o		1080410	1					
ANR	1080622	Argument	"R_MIN ( len , cols )"		1080410	1					
ANR	1080623	CallExpression	"R_MIN ( len , cols )"		1080410	0					
ANR	1080624	Callee	R_MIN		1080410	0					
ANR	1080625	Identifier	R_MIN		1080410	0					
ANR	1080626	ArgumentList	len		1080410	1					
ANR	1080627	Argument	len		1080410	0					
ANR	1080628	Identifier	len		1080410	0					
ANR	1080629	Argument	cols		1080410	1					
ANR	1080630	Identifier	cols		1080410	0					
ANR	1080631	ExpressionStatement	o = i + 1	261:3:6191:6200	1080410	6	True				
ANR	1080632	AssignmentExpression	o = i + 1		1080410	0		=			
ANR	1080633	Identifier	o		1080410	0					
ANR	1080634	AdditiveExpression	i + 1		1080410	1		+			
ANR	1080635	Identifier	i		1080410	0					
ANR	1080636	PrimaryExpression	1		1080410	1					
ANR	1080637	ExpressionStatement	len = 0	262:3:6205:6212	1080410	7	True				
ANR	1080638	AssignmentExpression	len = 0		1080410	0		=			
ANR	1080639	Identifier	len		1080410	0					
ANR	1080640	PrimaryExpression	0		1080410	1					
ANR	1080641	ExpressionStatement	rows ++	263:3:6217:6223	1080410	8	True				
ANR	1080642	PostIncDecOperationExpression	rows ++		1080410	0					
ANR	1080643	Identifier	rows		1080410	0					
ANR	1080644	IncDec	++		1080410	1					
ANR	1080645	IfStatement	if ( len > 1 )		1080410	7					
ANR	1080646	Condition	len > 1	266:5:6237:6243	1080410	0	True				
ANR	1080647	RelationalExpression	len > 1		1080410	0		>			
ANR	1080648	Identifier	len		1080410	0					
ANR	1080649	PrimaryExpression	1		1080410	1					
ANR	1080650	CompoundStatement		32:14:657:657	1080410	1					
ANR	1080651	ExpressionStatement	"r_cons_gotoxy ( x , y + rows )"	267:2:6250:6277	1080410	0	True				
ANR	1080652	CallExpression	"r_cons_gotoxy ( x , y + rows )"		1080410	0					
ANR	1080653	Callee	r_cons_gotoxy		1080410	0					
ANR	1080654	Identifier	r_cons_gotoxy		1080410	0					
ANR	1080655	ArgumentList	x		1080410	1					
ANR	1080656	Argument	x		1080410	0					
ANR	1080657	Identifier	x		1080410	0					
ANR	1080658	Argument	y + rows		1080410	1					
ANR	1080659	AdditiveExpression	y + rows		1080410	0		+			
ANR	1080660	Identifier	y		1080410	0					
ANR	1080661	Identifier	rows		1080410	1					
ANR	1080662	ExpressionStatement	"r_cons_memcat ( str + o , len )"	268:2:6281:6309	1080410	1	True				
ANR	1080663	CallExpression	"r_cons_memcat ( str + o , len )"		1080410	0					
ANR	1080664	Callee	r_cons_memcat		1080410	0					
ANR	1080665	Identifier	r_cons_memcat		1080410	0					
ANR	1080666	ArgumentList	str + o		1080410	1					
ANR	1080667	Argument	str + o		1080410	0					
ANR	1080668	AdditiveExpression	str + o		1080410	0		+			
ANR	1080669	Identifier	str		1080410	0					
ANR	1080670	Identifier	o		1080410	1					
ANR	1080671	Argument	len		1080410	1					
ANR	1080672	Identifier	len		1080410	0					
ANR	1080673	ExpressionStatement	r_cons_strcat ( Color_RESET )	270:1:6315:6342	1080410	8	True				
ANR	1080674	CallExpression	r_cons_strcat ( Color_RESET )		1080410	0					
ANR	1080675	Callee	r_cons_strcat		1080410	0					
ANR	1080676	Identifier	r_cons_strcat		1080410	0					
ANR	1080677	ArgumentList	Color_RESET		1080410	1					
ANR	1080678	Argument	Color_RESET		1080410	0					
ANR	1080679	Identifier	Color_RESET		1080410	0					
ANR	1080680	ExpressionStatement	r_cons_strcat ( R_CONS_CURSOR_RESTORE )	271:1:6345:6382	1080410	9	True				
ANR	1080681	CallExpression	r_cons_strcat ( R_CONS_CURSOR_RESTORE )		1080410	0					
ANR	1080682	Callee	r_cons_strcat		1080410	0					
ANR	1080683	Identifier	r_cons_strcat		1080410	0					
ANR	1080684	ArgumentList	R_CONS_CURSOR_RESTORE		1080410	1					
ANR	1080685	Argument	R_CONS_CURSOR_RESTORE		1080410	0					
ANR	1080686	Identifier	R_CONS_CURSOR_RESTORE		1080410	0					
ANR	1080687	ExpressionStatement	free ( str )	272:1:6385:6395	1080410	10	True				
ANR	1080688	CallExpression	free ( str )		1080410	0					
ANR	1080689	Callee	free		1080410	0					
ANR	1080690	Identifier	free		1080410	0					
ANR	1080691	ArgumentList	str		1080410	1					
ANR	1080692	Argument	str		1080410	0					
ANR	1080693	Identifier	str		1080410	0					
ANR	1080694	ReturnType	R_API void		1080410	1					
ANR	1080695	Identifier	r_cons_strcat_at		1080410	2					
ANR	1080696	ParameterList	"const char * _str , int x , char y , int w , int h"		1080410	3					
ANR	1080697	Parameter	const char * _str	235:28:5541:5556	1080410	0	True				
ANR	1080698	ParameterType	const char *		1080410	0					
ANR	1080699	Identifier	_str		1080410	1					
ANR	1080700	Parameter	int x	235:46:5559:5563	1080410	1	True				
ANR	1080701	ParameterType	int		1080410	0					
ANR	1080702	Identifier	x		1080410	1					
ANR	1080703	Parameter	char y	235:53:5566:5571	1080410	2	True				
ANR	1080704	ParameterType	char		1080410	0					
ANR	1080705	Identifier	y		1080410	1					
ANR	1080706	Parameter	int w	235:61:5574:5578	1080410	3	True				
ANR	1080707	ParameterType	int		1080410	0					
ANR	1080708	Identifier	w		1080410	1					
ANR	1080709	Parameter	int h	235:68:5581:5585	1080410	4	True				
ANR	1080710	ParameterType	int		1080410	0					
ANR	1080711	Identifier	h		1080410	1					
ANR	1080712	CFGEntryNode	ENTRY		1080410		True				
ANR	1080713	CFGExitNode	EXIT		1080410		True				
ANR	1080714	Symbol	ansilen		1080410						
ANR	1080715	Symbol	H		1080410						
ANR	1080716	Symbol	r_str_ansi_len		1080410						
ANR	1080717	Symbol	Color_RESET		1080410						
ANR	1080718	Symbol	& H		1080410						
ANR	1080719	Symbol	len		1080410						
ANR	1080720	Symbol	W		1080410						
ANR	1080721	Symbol	r_str_ansi_crop		1080410						
ANR	1080722	Symbol	end		1080410						
ANR	1080723	Symbol	* str		1080410						
ANR	1080724	Symbol	cols		1080410						
ANR	1080725	Symbol	_str		1080410						
ANR	1080726	Symbol	R_CONS_CURSOR_SAVE		1080410						
ANR	1080727	Symbol	r_cons_get_size		1080410						
ANR	1080728	Symbol	h		1080410						
ANR	1080729	Symbol	i		1080410						
ANR	1080730	Symbol	R_MIN		1080410						
ANR	1080731	Symbol	r_str_ansi_chrn		1080410						
ANR	1080732	Symbol	rows		1080410						
ANR	1080733	Symbol	o		1080410						
ANR	1080734	Symbol	str		1080410						
ANR	1080735	Symbol	R_CONS_CURSOR_RESTORE		1080410						
ANR	1080736	Symbol	* i		1080410						
ANR	1080737	Symbol	w		1080410						
ANR	1080738	Symbol	x		1080410						
ANR	1080739	Symbol	y		1080410						
ANR	1080740	Function	r_cons_singleton	275:0:6400:6446							
ANR	1080741	FunctionDef	r_cons_singleton ()		1080740	0					
ANR	1080742	CompoundStatement		275:32:6432:6446	1080740	0					
ANR	1080743	ReturnStatement	return & I ;	276:1:6435:6444	1080740	0	True				
ANR	1080744	UnaryOperationExpression	& I		1080740	0					
ANR	1080745	UnaryOperator	&		1080740	0					
ANR	1080746	Identifier	I		1080740	1					
ANR	1080747	ReturnType	R_API RCons *		1080740	1					
ANR	1080748	Identifier	r_cons_singleton		1080740	2					
ANR	1080749	ParameterList			1080740	3					
ANR	1080750	CFGEntryNode	ENTRY		1080740		True				
ANR	1080751	CFGExitNode	EXIT		1080740		True				
ANR	1080752	Symbol	& I		1080740						
ANR	1080753	Function	r_cons_break_clear	279:0:6449:6512							
ANR	1080754	FunctionDef	r_cons_break_clear ()		1080753	0					
ANR	1080755	CompoundStatement		279:32:6481:6512	1080753	0					
ANR	1080756	ExpressionStatement	I . context -> breaked = false	280:1:6484:6510	1080753	0	True				
ANR	1080757	AssignmentExpression	I . context -> breaked = false		1080753	0		=			
ANR	1080758	PtrMemberAccess	I . context -> breaked		1080753	0					
ANR	1080759	MemberAccess	I . context		1080753	0					
ANR	1080760	Identifier	I		1080753	0					
ANR	1080761	Identifier	context		1080753	1					
ANR	1080762	Identifier	breaked		1080753	1					
ANR	1080763	Identifier	false		1080753	1					
ANR	1080764	ReturnType	R_API void		1080753	1					
ANR	1080765	Identifier	r_cons_break_clear		1080753	2					
ANR	1080766	ParameterList			1080753	3					
ANR	1080767	CFGEntryNode	ENTRY		1080753		True				
ANR	1080768	CFGExitNode	EXIT		1080753		True				
ANR	1080769	Symbol	* I . context		1080753						
ANR	1080770	Symbol	* I		1080753						
ANR	1080771	Symbol	false		1080753						
ANR	1080772	Symbol	I		1080753						
ANR	1080773	Symbol	I . context		1080753						
ANR	1080774	Symbol	I . context -> breaked		1080753						
ANR	1080775	Function	r_cons_context_break_push	283:0:6515:7235							
ANR	1080776	FunctionDef	"r_cons_context_break_push (RConsContext * context , RConsBreak cb , void * user , bool sig)"		1080775	0					
ANR	1080777	CompoundStatement		283:97:6612:7235	1080775	0					
ANR	1080778	IfStatement	if ( ! context -> break_stack )		1080775	0					
ANR	1080779	Condition	! context -> break_stack	284:5:6619:6639	1080775	0	True				
ANR	1080780	UnaryOperationExpression	! context -> break_stack		1080775	0					
ANR	1080781	UnaryOperator	!		1080775	0					
ANR	1080782	PtrMemberAccess	context -> break_stack		1080775	1					
ANR	1080783	Identifier	context		1080775	0					
ANR	1080784	Identifier	break_stack		1080775	1					
ANR	1080785	CompoundStatement		2:28:29:29	1080775	1					
ANR	1080786	ReturnStatement	return ;	285:2:6646:6652	1080775	0	True				
ANR	1080787	IdentifierDeclStatement	RConsBreakStack * b = R_NEW0 ( RConsBreakStack ) ;	289:1:6721:6766	1080775	1	True				
ANR	1080788	IdentifierDecl	* b = R_NEW0 ( RConsBreakStack )		1080775	0					
ANR	1080789	IdentifierDeclType	RConsBreakStack *		1080775	0					
ANR	1080790	Identifier	b		1080775	1					
ANR	1080791	AssignmentExpression	* b = R_NEW0 ( RConsBreakStack )		1080775	2		=			
ANR	1080792	Identifier	b		1080775	0					
ANR	1080793	CallExpression	R_NEW0 ( RConsBreakStack )		1080775	1					
ANR	1080794	Callee	R_NEW0		1080775	0					
ANR	1080795	Identifier	R_NEW0		1080775	0					
ANR	1080796	ArgumentList	RConsBreakStack		1080775	1					
ANR	1080797	Argument	RConsBreakStack		1080775	0					
ANR	1080798	Identifier	RConsBreakStack		1080775	0					
ANR	1080799	IfStatement	if ( ! b )		1080775	2					
ANR	1080800	Condition	! b	290:5:6773:6774	1080775	0	True				
ANR	1080801	UnaryOperationExpression	! b		1080775	0					
ANR	1080802	UnaryOperator	!		1080775	0					
ANR	1080803	Identifier	b		1080775	1					
ANR	1080804	CompoundStatement		8:9:164:164	1080775	1					
ANR	1080805	ReturnStatement	return ;	291:2:6781:6787	1080775	0	True				
ANR	1080806	IfStatement	if ( r_stack_is_empty ( context -> break_stack ) )		1080775	3					
ANR	1080807	Condition	r_stack_is_empty ( context -> break_stack )	293:5:6797:6835	1080775	0	True				
ANR	1080808	CallExpression	r_stack_is_empty ( context -> break_stack )		1080775	0					
ANR	1080809	Callee	r_stack_is_empty		1080775	0					
ANR	1080810	Identifier	r_stack_is_empty		1080775	0					
ANR	1080811	ArgumentList	context -> break_stack		1080775	1					
ANR	1080812	Argument	context -> break_stack		1080775	0					
ANR	1080813	PtrMemberAccess	context -> break_stack		1080775	0					
ANR	1080814	Identifier	context		1080775	0					
ANR	1080815	Identifier	break_stack		1080775	1					
ANR	1080816	CompoundStatement		11:46:225:225	1080775	1					
ANR	1080817	IfStatement	if ( sig && r_cons_context_is_main ( ) )		1080775	0					
ANR	1080818	Condition	sig && r_cons_context_is_main ( )	295:6:6859:6890	1080775	0	True				
ANR	1080819	AndExpression	sig && r_cons_context_is_main ( )		1080775	0		&&			
ANR	1080820	Identifier	sig		1080775	0					
ANR	1080821	CallExpression	r_cons_context_is_main ( )		1080775	1					
ANR	1080822	Callee	r_cons_context_is_main		1080775	0					
ANR	1080823	Identifier	r_cons_context_is_main		1080775	0					
ANR	1080824	ArgumentList			1080775	1					
ANR	1080825	CompoundStatement		13:40:280:280	1080775	1					
ANR	1080826	ExpressionStatement	"signal ( SIGINT , __break_signal )"	296:3:6898:6929	1080775	0	True				
ANR	1080827	CallExpression	"signal ( SIGINT , __break_signal )"		1080775	0					
ANR	1080828	Callee	signal		1080775	0					
ANR	1080829	Identifier	signal		1080775	0					
ANR	1080830	ArgumentList	SIGINT		1080775	1					
ANR	1080831	Argument	SIGINT		1080775	0					
ANR	1080832	Identifier	SIGINT		1080775	0					
ANR	1080833	Argument	__break_signal		1080775	1					
ANR	1080834	Identifier	__break_signal		1080775	0					
ANR	1080835	ExpressionStatement	context -> breaked = false	299:2:6944:6968	1080775	1	True				
ANR	1080836	AssignmentExpression	context -> breaked = false		1080775	0		=			
ANR	1080837	PtrMemberAccess	context -> breaked		1080775	0					
ANR	1080838	Identifier	context		1080775	0					
ANR	1080839	Identifier	breaked		1080775	1					
ANR	1080840	Identifier	false		1080775	1					
ANR	1080841	ExpressionStatement	b -> event_interrupt = context -> event_interrupt	302:1:6999:7044	1080775	4	True				
ANR	1080842	AssignmentExpression	b -> event_interrupt = context -> event_interrupt		1080775	0		=			
ANR	1080843	PtrMemberAccess	b -> event_interrupt		1080775	0					
ANR	1080844	Identifier	b		1080775	0					
ANR	1080845	Identifier	event_interrupt		1080775	1					
ANR	1080846	PtrMemberAccess	context -> event_interrupt		1080775	1					
ANR	1080847	Identifier	context		1080775	0					
ANR	1080848	Identifier	event_interrupt		1080775	1					
ANR	1080849	ExpressionStatement	b -> event_interrupt_data = context -> event_interrupt_data	303:1:7047:7102	1080775	5	True				
ANR	1080850	AssignmentExpression	b -> event_interrupt_data = context -> event_interrupt_data		1080775	0		=			
ANR	1080851	PtrMemberAccess	b -> event_interrupt_data		1080775	0					
ANR	1080852	Identifier	b		1080775	0					
ANR	1080853	Identifier	event_interrupt_data		1080775	1					
ANR	1080854	PtrMemberAccess	context -> event_interrupt_data		1080775	1					
ANR	1080855	Identifier	context		1080775	0					
ANR	1080856	Identifier	event_interrupt_data		1080775	1					
ANR	1080857	ExpressionStatement	"r_stack_push ( context -> break_stack , b )"	304:1:7105:7143	1080775	6	True				
ANR	1080858	CallExpression	"r_stack_push ( context -> break_stack , b )"		1080775	0					
ANR	1080859	Callee	r_stack_push		1080775	0					
ANR	1080860	Identifier	r_stack_push		1080775	0					
ANR	1080861	ArgumentList	context -> break_stack		1080775	1					
ANR	1080862	Argument	context -> break_stack		1080775	0					
ANR	1080863	PtrMemberAccess	context -> break_stack		1080775	0					
ANR	1080864	Identifier	context		1080775	0					
ANR	1080865	Identifier	break_stack		1080775	1					
ANR	1080866	Argument	b		1080775	1					
ANR	1080867	Identifier	b		1080775	0					
ANR	1080868	ExpressionStatement	context -> event_interrupt = cb	306:1:7165:7194	1080775	7	True				
ANR	1080869	AssignmentExpression	context -> event_interrupt = cb		1080775	0		=			
ANR	1080870	PtrMemberAccess	context -> event_interrupt		1080775	0					
ANR	1080871	Identifier	context		1080775	0					
ANR	1080872	Identifier	event_interrupt		1080775	1					
ANR	1080873	Identifier	cb		1080775	1					
ANR	1080874	ExpressionStatement	context -> event_interrupt_data = user	307:1:7197:7233	1080775	8	True				
ANR	1080875	AssignmentExpression	context -> event_interrupt_data = user		1080775	0		=			
ANR	1080876	PtrMemberAccess	context -> event_interrupt_data		1080775	0					
ANR	1080877	Identifier	context		1080775	0					
ANR	1080878	Identifier	event_interrupt_data		1080775	1					
ANR	1080879	Identifier	user		1080775	1					
ANR	1080880	ReturnType	R_API void		1080775	1					
ANR	1080881	Identifier	r_cons_context_break_push		1080775	2					
ANR	1080882	ParameterList	"RConsContext * context , RConsBreak cb , void * user , bool sig"		1080775	3					
ANR	1080883	Parameter	RConsContext * context	283:37:6552:6572	1080775	0	True				
ANR	1080884	ParameterType	RConsContext *		1080775	0					
ANR	1080885	Identifier	context		1080775	1					
ANR	1080886	Parameter	RConsBreak cb	283:60:6575:6587	1080775	1	True				
ANR	1080887	ParameterType	RConsBreak		1080775	0					
ANR	1080888	Identifier	cb		1080775	1					
ANR	1080889	Parameter	void * user	283:75:6590:6599	1080775	2	True				
ANR	1080890	ParameterType	void *		1080775	0					
ANR	1080891	Identifier	user		1080775	1					
ANR	1080892	Parameter	bool sig	283:87:6602:6609	1080775	3	True				
ANR	1080893	ParameterType	bool		1080775	0					
ANR	1080894	Identifier	sig		1080775	1					
ANR	1080895	CFGEntryNode	ENTRY		1080775		True				
ANR	1080896	CFGExitNode	EXIT		1080775		True				
ANR	1080897	Symbol	b		1080775						
ANR	1080898	Symbol	RConsBreakStack		1080775						
ANR	1080899	Symbol	false		1080775						
ANR	1080900	Symbol	* b		1080775						
ANR	1080901	Symbol	context -> event_interrupt		1080775						
ANR	1080902	Symbol	* context		1080775						
ANR	1080903	Symbol	sig		1080775						
ANR	1080904	Symbol	R_NEW0		1080775						
ANR	1080905	Symbol	r_cons_context_is_main		1080775						
ANR	1080906	Symbol	context -> breaked		1080775						
ANR	1080907	Symbol	SIGINT		1080775						
ANR	1080908	Symbol	context -> break_stack		1080775						
ANR	1080909	Symbol	context		1080775						
ANR	1080910	Symbol	__break_signal		1080775						
ANR	1080911	Symbol	b -> event_interrupt		1080775						
ANR	1080912	Symbol	b -> event_interrupt_data		1080775						
ANR	1080913	Symbol	r_stack_is_empty		1080775						
ANR	1080914	Symbol	user		1080775						
ANR	1080915	Symbol	cb		1080775						
ANR	1080916	Symbol	context -> event_interrupt_data		1080775						
ANR	1080917	Function	r_cons_context_break_pop	310:0:7238:7764							
ANR	1080918	FunctionDef	"r_cons_context_break_pop (RConsContext * context , bool sig)"		1080917	0					
ANR	1080919	CompoundStatement		310:69:7307:7764	1080917	0					
ANR	1080920	IfStatement	if ( ! context -> break_stack )		1080917	0					
ANR	1080921	Condition	! context -> break_stack	311:5:7314:7334	1080917	0	True				
ANR	1080922	UnaryOperationExpression	! context -> break_stack		1080917	0					
ANR	1080923	UnaryOperator	!		1080917	0					
ANR	1080924	PtrMemberAccess	context -> break_stack		1080917	1					
ANR	1080925	Identifier	context		1080917	0					
ANR	1080926	Identifier	break_stack		1080917	1					
ANR	1080927	CompoundStatement		2:28:29:29	1080917	1					
ANR	1080928	ReturnStatement	return ;	312:2:7341:7347	1080917	0	True				
ANR	1080929	IdentifierDeclStatement	RConsBreakStack * b = NULL ;	315:1:7374:7399	1080917	1	True				
ANR	1080930	IdentifierDecl	* b = NULL		1080917	0					
ANR	1080931	IdentifierDeclType	RConsBreakStack *		1080917	0					
ANR	1080932	Identifier	b		1080917	1					
ANR	1080933	AssignmentExpression	* b = NULL		1080917	2		=			
ANR	1080934	Identifier	NULL		1080917	0					
ANR	1080935	Identifier	NULL		1080917	1					
ANR	1080936	ExpressionStatement	b = r_stack_pop ( context -> break_stack )	316:1:7402:7440	1080917	2	True				
ANR	1080937	AssignmentExpression	b = r_stack_pop ( context -> break_stack )		1080917	0		=			
ANR	1080938	Identifier	b		1080917	0					
ANR	1080939	CallExpression	r_stack_pop ( context -> break_stack )		1080917	1					
ANR	1080940	Callee	r_stack_pop		1080917	0					
ANR	1080941	Identifier	r_stack_pop		1080917	0					
ANR	1080942	ArgumentList	context -> break_stack		1080917	1					
ANR	1080943	Argument	context -> break_stack		1080917	0					
ANR	1080944	PtrMemberAccess	context -> break_stack		1080917	0					
ANR	1080945	Identifier	context		1080917	0					
ANR	1080946	Identifier	break_stack		1080917	1					
ANR	1080947	IfStatement	if ( b )		1080917	3					
ANR	1080948	Condition	b	317:5:7447:7447	1080917	0	True				
ANR	1080949	Identifier	b		1080917	0					
ANR	1080950	CompoundStatement		8:8:142:142	1080917	1					
ANR	1080951	ExpressionStatement	context -> event_interrupt = b -> event_interrupt	318:2:7454:7499	1080917	0	True				
ANR	1080952	AssignmentExpression	context -> event_interrupt = b -> event_interrupt		1080917	0		=			
ANR	1080953	PtrMemberAccess	context -> event_interrupt		1080917	0					
ANR	1080954	Identifier	context		1080917	0					
ANR	1080955	Identifier	event_interrupt		1080917	1					
ANR	1080956	PtrMemberAccess	b -> event_interrupt		1080917	1					
ANR	1080957	Identifier	b		1080917	0					
ANR	1080958	Identifier	event_interrupt		1080917	1					
ANR	1080959	ExpressionStatement	context -> event_interrupt_data = b -> event_interrupt_data	319:2:7503:7558	1080917	1	True				
ANR	1080960	AssignmentExpression	context -> event_interrupt_data = b -> event_interrupt_data		1080917	0		=			
ANR	1080961	PtrMemberAccess	context -> event_interrupt_data		1080917	0					
ANR	1080962	Identifier	context		1080917	0					
ANR	1080963	Identifier	event_interrupt_data		1080917	1					
ANR	1080964	PtrMemberAccess	b -> event_interrupt_data		1080917	1					
ANR	1080965	Identifier	b		1080917	0					
ANR	1080966	Identifier	event_interrupt_data		1080917	1					
ANR	1080967	ExpressionStatement	break_stack_free ( b )	320:2:7562:7582	1080917	2	True				
ANR	1080968	CallExpression	break_stack_free ( b )		1080917	0					
ANR	1080969	Callee	break_stack_free		1080917	0					
ANR	1080970	Identifier	break_stack_free		1080917	0					
ANR	1080971	ArgumentList	b		1080917	1					
ANR	1080972	Argument	b		1080917	0					
ANR	1080973	Identifier	b		1080917	0					
ANR	1080974	ElseStatement	else		1080917	0					
ANR	1080975	CompoundStatement		12:8:284:284	1080917	0					
ANR	1080976	IfStatement	if ( sig && r_cons_context_is_main ( ) )		1080917	0					
ANR	1080977	Condition	sig && r_cons_context_is_main ( )	324:6:7657:7688	1080917	0	True				
ANR	1080978	AndExpression	sig && r_cons_context_is_main ( )		1080917	0		&&			
ANR	1080979	Identifier	sig		1080917	0					
ANR	1080980	CallExpression	r_cons_context_is_main ( )		1080917	1					
ANR	1080981	Callee	r_cons_context_is_main		1080917	0					
ANR	1080982	Identifier	r_cons_context_is_main		1080917	0					
ANR	1080983	ArgumentList			1080917	1					
ANR	1080984	CompoundStatement		15:40:383:383	1080917	1					
ANR	1080985	ExpressionStatement	"signal ( SIGINT , SIG_IGN )"	325:3:7696:7720	1080917	0	True				
ANR	1080986	CallExpression	"signal ( SIGINT , SIG_IGN )"		1080917	0					
ANR	1080987	Callee	signal		1080917	0					
ANR	1080988	Identifier	signal		1080917	0					
ANR	1080989	ArgumentList	SIGINT		1080917	1					
ANR	1080990	Argument	SIGINT		1080917	0					
ANR	1080991	Identifier	SIGINT		1080917	0					
ANR	1080992	Argument	SIG_IGN		1080917	1					
ANR	1080993	Identifier	SIG_IGN		1080917	0					
ANR	1080994	ExpressionStatement	context -> breaked = false	328:2:7735:7759	1080917	1	True				
ANR	1080995	AssignmentExpression	context -> breaked = false		1080917	0		=			
ANR	1080996	PtrMemberAccess	context -> breaked		1080917	0					
ANR	1080997	Identifier	context		1080917	0					
ANR	1080998	Identifier	breaked		1080917	1					
ANR	1080999	Identifier	false		1080917	1					
ANR	1081000	ReturnType	R_API void		1080917	1					
ANR	1081001	Identifier	r_cons_context_break_pop		1080917	2					
ANR	1081002	ParameterList	"RConsContext * context , bool sig"		1080917	3					
ANR	1081003	Parameter	RConsContext * context	310:36:7274:7294	1080917	0	True				
ANR	1081004	ParameterType	RConsContext *		1080917	0					
ANR	1081005	Identifier	context		1080917	1					
ANR	1081006	Parameter	bool sig	310:59:7297:7304	1080917	1	True				
ANR	1081007	ParameterType	bool		1080917	0					
ANR	1081008	Identifier	sig		1080917	1					
ANR	1081009	CFGEntryNode	ENTRY		1080917		True				
ANR	1081010	CFGExitNode	EXIT		1080917		True				
ANR	1081011	Symbol	b		1080917						
ANR	1081012	Symbol	NULL		1080917						
ANR	1081013	Symbol	false		1080917						
ANR	1081014	Symbol	SIG_IGN		1080917						
ANR	1081015	Symbol	context -> event_interrupt		1080917						
ANR	1081016	Symbol	* b		1080917						
ANR	1081017	Symbol	* context		1080917						
ANR	1081018	Symbol	sig		1080917						
ANR	1081019	Symbol	r_cons_context_is_main		1080917						
ANR	1081020	Symbol	context -> breaked		1080917						
ANR	1081021	Symbol	r_stack_pop		1080917						
ANR	1081022	Symbol	SIGINT		1080917						
ANR	1081023	Symbol	context -> break_stack		1080917						
ANR	1081024	Symbol	context		1080917						
ANR	1081025	Symbol	b -> event_interrupt		1080917						
ANR	1081026	Symbol	b -> event_interrupt_data		1080917						
ANR	1081027	Symbol	context -> event_interrupt_data		1080917						
ANR	1081028	Function	r_cons_break_push	332:0:7767:7881							
ANR	1081029	FunctionDef	"r_cons_break_push (RConsBreak cb , void * user)"		1081028	0					
ANR	1081030	CompoundStatement		332:56:7823:7881	1081028	0					
ANR	1081031	ExpressionStatement	"r_cons_context_break_push ( I . context , cb , user , true )"	333:1:7826:7879	1081028	0	True				
ANR	1081032	CallExpression	"r_cons_context_break_push ( I . context , cb , user , true )"		1081028	0					
ANR	1081033	Callee	r_cons_context_break_push		1081028	0					
ANR	1081034	Identifier	r_cons_context_break_push		1081028	0					
ANR	1081035	ArgumentList	I . context		1081028	1					
ANR	1081036	Argument	I . context		1081028	0					
ANR	1081037	MemberAccess	I . context		1081028	0					
ANR	1081038	Identifier	I		1081028	0					
ANR	1081039	Identifier	context		1081028	1					
ANR	1081040	Argument	cb		1081028	1					
ANR	1081041	Identifier	cb		1081028	0					
ANR	1081042	Argument	user		1081028	2					
ANR	1081043	Identifier	user		1081028	0					
ANR	1081044	Argument	true		1081028	3					
ANR	1081045	Identifier	true		1081028	0					
ANR	1081046	ReturnType	R_API void		1081028	1					
ANR	1081047	Identifier	r_cons_break_push		1081028	2					
ANR	1081048	ParameterList	"RConsBreak cb , void * user"		1081028	3					
ANR	1081049	Parameter	RConsBreak cb	332:29:7796:7808	1081028	0	True				
ANR	1081050	ParameterType	RConsBreak		1081028	0					
ANR	1081051	Identifier	cb		1081028	1					
ANR	1081052	Parameter	void * user	332:44:7811:7820	1081028	1	True				
ANR	1081053	ParameterType	void *		1081028	0					
ANR	1081054	Identifier	user		1081028	1					
ANR	1081055	CFGEntryNode	ENTRY		1081028		True				
ANR	1081056	CFGExitNode	EXIT		1081028		True				
ANR	1081057	Symbol	true		1081028						
ANR	1081058	Symbol	I		1081028						
ANR	1081059	Symbol	I . context		1081028						
ANR	1081060	Symbol	user		1081028						
ANR	1081061	Symbol	cb		1081028						
ANR	1081062	Function	r_cons_break_pop	336:0:7884:7961							
ANR	1081063	FunctionDef	r_cons_break_pop ()		1081062	0					
ANR	1081064	CompoundStatement		336:30:7914:7961	1081062	0					
ANR	1081065	ExpressionStatement	"r_cons_context_break_pop ( I . context , true )"	337:1:7917:7959	1081062	0	True				
ANR	1081066	CallExpression	"r_cons_context_break_pop ( I . context , true )"		1081062	0					
ANR	1081067	Callee	r_cons_context_break_pop		1081062	0					
ANR	1081068	Identifier	r_cons_context_break_pop		1081062	0					
ANR	1081069	ArgumentList	I . context		1081062	1					
ANR	1081070	Argument	I . context		1081062	0					
ANR	1081071	MemberAccess	I . context		1081062	0					
ANR	1081072	Identifier	I		1081062	0					
ANR	1081073	Identifier	context		1081062	1					
ANR	1081074	Argument	true		1081062	1					
ANR	1081075	Identifier	true		1081062	0					
ANR	1081076	ReturnType	R_API void		1081062	1					
ANR	1081077	Identifier	r_cons_break_pop		1081062	2					
ANR	1081078	ParameterList			1081062	3					
ANR	1081079	CFGEntryNode	ENTRY		1081062		True				
ANR	1081080	CFGExitNode	EXIT		1081062		True				
ANR	1081081	Symbol	true		1081062						
ANR	1081082	Symbol	I		1081062						
ANR	1081083	Symbol	I . context		1081062						
ANR	1081084	Function	r_cons_is_interactive	340:0:7964:8036							
ANR	1081085	FunctionDef	r_cons_is_interactive ()		1081084	0					
ANR	1081086	CompoundStatement		340:35:7999:8036	1081084	0					
ANR	1081087	ReturnStatement	return I . context -> is_interactive ;	341:1:8002:8034	1081084	0	True				
ANR	1081088	PtrMemberAccess	I . context -> is_interactive		1081084	0					
ANR	1081089	MemberAccess	I . context		1081084	0					
ANR	1081090	Identifier	I		1081084	0					
ANR	1081091	Identifier	context		1081084	1					
ANR	1081092	Identifier	is_interactive		1081084	1					
ANR	1081093	ReturnType	R_API bool		1081084	1					
ANR	1081094	Identifier	r_cons_is_interactive		1081084	2					
ANR	1081095	ParameterList			1081084	3					
ANR	1081096	CFGEntryNode	ENTRY		1081084		True				
ANR	1081097	CFGExitNode	EXIT		1081084		True				
ANR	1081098	Symbol	* I . context		1081084						
ANR	1081099	Symbol	* I		1081084						
ANR	1081100	Symbol	I . context -> is_interactive		1081084						
ANR	1081101	Symbol	I		1081084						
ANR	1081102	Symbol	I . context		1081084						
ANR	1081103	Function	r_cons_default_context_is_interactive	344:0:8039:8143							
ANR	1081104	FunctionDef	r_cons_default_context_is_interactive ()		1081103	0					
ANR	1081105	CompoundStatement		344:55:8094:8143	1081103	0					
ANR	1081106	ReturnStatement	return r_cons_context_default . is_interactive ;	345:1:8097:8141	1081103	0	True				
ANR	1081107	MemberAccess	r_cons_context_default . is_interactive		1081103	0					
ANR	1081108	Identifier	r_cons_context_default		1081103	0					
ANR	1081109	Identifier	is_interactive		1081103	1					
ANR	1081110	ReturnType	R_API bool		1081103	1					
ANR	1081111	Identifier	r_cons_default_context_is_interactive		1081103	2					
ANR	1081112	ParameterList			1081103	3					
ANR	1081113	CFGEntryNode	ENTRY		1081103		True				
ANR	1081114	CFGExitNode	EXIT		1081103		True				
ANR	1081115	Symbol	r_cons_context_default . is_interactive		1081103						
ANR	1081116	Symbol	r_cons_context_default		1081103						
ANR	1081117	Function	r_cons_is_breaked	348:0:8146:8388							
ANR	1081118	FunctionDef	r_cons_is_breaked ()		1081117	0					
ANR	1081119	CompoundStatement		348:31:8177:8388	1081117	0					
ANR	1081120	IfStatement	if ( I . cb_break )		1081117	0					
ANR	1081121	Condition	I . cb_break	349:5:8184:8193	1081117	0	True				
ANR	1081122	MemberAccess	I . cb_break		1081117	0					
ANR	1081123	Identifier	I		1081117	0					
ANR	1081124	Identifier	cb_break		1081117	1					
ANR	1081125	CompoundStatement		2:17:18:18	1081117	1					
ANR	1081126	ExpressionStatement	I . cb_break ( I . user )	350:2:8200:8219	1081117	0	True				
ANR	1081127	CallExpression	I . cb_break ( I . user )		1081117	0					
ANR	1081128	Callee	I . cb_break		1081117	0					
ANR	1081129	MemberAccess	I . cb_break		1081117	0					
ANR	1081130	Identifier	I		1081117	0					
ANR	1081131	Identifier	cb_break		1081117	1					
ANR	1081132	ArgumentList	I . user		1081117	1					
ANR	1081133	Argument	I . user		1081117	0					
ANR	1081134	MemberAccess	I . user		1081117	0					
ANR	1081135	Identifier	I		1081117	0					
ANR	1081136	Identifier	user		1081117	1					
ANR	1081137	IfStatement	if ( I . timeout )		1081117	1					
ANR	1081138	Condition	I . timeout	352:5:8229:8237	1081117	0	True				
ANR	1081139	MemberAccess	I . timeout		1081117	0					
ANR	1081140	Identifier	I		1081117	0					
ANR	1081141	Identifier	timeout		1081117	1					
ANR	1081142	CompoundStatement		5:16:62:62	1081117	1					
ANR	1081143	IfStatement	if ( r_sys_now ( ) > I . timeout )		1081117	0					
ANR	1081144	Condition	r_sys_now ( ) > I . timeout	353:6:8248:8271	1081117	0	True				
ANR	1081145	RelationalExpression	r_sys_now ( ) > I . timeout		1081117	0		>			
ANR	1081146	CallExpression	r_sys_now ( )		1081117	0					
ANR	1081147	Callee	r_sys_now		1081117	0					
ANR	1081148	Identifier	r_sys_now		1081117	0					
ANR	1081149	ArgumentList			1081117	1					
ANR	1081150	MemberAccess	I . timeout		1081117	1					
ANR	1081151	Identifier	I		1081117	0					
ANR	1081152	Identifier	timeout		1081117	1					
ANR	1081153	CompoundStatement		6:32:96:96	1081117	1					
ANR	1081154	ExpressionStatement	I . context -> breaked = true	354:3:8279:8304	1081117	0	True				
ANR	1081155	AssignmentExpression	I . context -> breaked = true		1081117	0		=			
ANR	1081156	PtrMemberAccess	I . context -> breaked		1081117	0					
ANR	1081157	MemberAccess	I . context		1081117	0					
ANR	1081158	Identifier	I		1081117	0					
ANR	1081159	Identifier	context		1081117	1					
ANR	1081160	Identifier	breaked		1081117	1					
ANR	1081161	Identifier	true		1081117	1					
ANR	1081162	ExpressionStatement	"eprintf ( ""\\nTimeout!\\n"" )"	355:3:8309:8333	1081117	1	True				
ANR	1081163	CallExpression	"eprintf ( ""\\nTimeout!\\n"" )"		1081117	0					
ANR	1081164	Callee	eprintf		1081117	0					
ANR	1081165	Identifier	eprintf		1081117	0					
ANR	1081166	ArgumentList	"""\\nTimeout!\\n"""		1081117	1					
ANR	1081167	Argument	"""\\nTimeout!\\n"""		1081117	0					
ANR	1081168	PrimaryExpression	"""\\nTimeout!\\n"""		1081117	0					
ANR	1081169	ExpressionStatement	I . timeout = 0	356:3:8338:8351	1081117	2	True				
ANR	1081170	AssignmentExpression	I . timeout = 0		1081117	0		=			
ANR	1081171	MemberAccess	I . timeout		1081117	0					
ANR	1081172	Identifier	I		1081117	0					
ANR	1081173	Identifier	timeout		1081117	1					
ANR	1081174	PrimaryExpression	0		1081117	1					
ANR	1081175	ReturnStatement	return I . context -> breaked ;	359:1:8361:8386	1081117	2	True				
ANR	1081176	PtrMemberAccess	I . context -> breaked		1081117	0					
ANR	1081177	MemberAccess	I . context		1081117	0					
ANR	1081178	Identifier	I		1081117	0					
ANR	1081179	Identifier	context		1081117	1					
ANR	1081180	Identifier	breaked		1081117	1					
ANR	1081181	ReturnType	R_API bool		1081117	1					
ANR	1081182	Identifier	r_cons_is_breaked		1081117	2					
ANR	1081183	ParameterList			1081117	3					
ANR	1081184	CFGEntryNode	ENTRY		1081117		True				
ANR	1081185	CFGExitNode	EXIT		1081117		True				
ANR	1081186	Symbol	I . user		1081117						
ANR	1081187	Symbol	* I . context		1081117						
ANR	1081188	Symbol	* I		1081117						
ANR	1081189	Symbol	I . cb_break		1081117						
ANR	1081190	Symbol	r_sys_now		1081117						
ANR	1081191	Symbol	true		1081117						
ANR	1081192	Symbol	I		1081117						
ANR	1081193	Symbol	I . context		1081117						
ANR	1081194	Symbol	I . timeout		1081117						
ANR	1081195	Symbol	I . context -> breaked		1081117						
ANR	1081196	Function	r_cons_get_cur_line	362:0:8391:9117							
ANR	1081197	FunctionDef	r_cons_get_cur_line ()		1081196	0					
ANR	1081198	CompoundStatement		362:32:8423:9117	1081196	0					
ANR	1081199	IdentifierDeclStatement	int curline = 0 ;	363:1:8426:8441	1081196	0	True				
ANR	1081200	IdentifierDecl	curline = 0		1081196	0					
ANR	1081201	IdentifierDeclType	int		1081196	0					
ANR	1081202	Identifier	curline		1081196	1					
ANR	1081203	AssignmentExpression	curline = 0		1081196	2		=			
ANR	1081204	Identifier	curline		1081196	0					
ANR	1081205	PrimaryExpression	0		1081196	1					
ANR	1081206	IdentifierDeclStatement	POINT point ;	365:1:8460:8471	1081196	1	True				
ANR	1081207	IdentifierDecl	point		1081196	0					
ANR	1081208	IdentifierDeclType	POINT		1081196	0					
ANR	1081209	Identifier	point		1081196	1					
ANR	1081210	IfStatement	if ( GetCursorPos ( & point ) )		1081196	2					
ANR	1081211	Condition	GetCursorPos ( & point )	366:6:8479:8499	1081196	0	True				
ANR	1081212	CallExpression	GetCursorPos ( & point )		1081196	0					
ANR	1081213	Callee	GetCursorPos		1081196	0					
ANR	1081214	Identifier	GetCursorPos		1081196	0					
ANR	1081215	ArgumentList	& point		1081196	1					
ANR	1081216	Argument	& point		1081196	0					
ANR	1081217	UnaryOperationExpression	& point		1081196	0					
ANR	1081218	UnaryOperator	&		1081196	0					
ANR	1081219	Identifier	point		1081196	1					
ANR	1081220	CompoundStatement		5:29:78:78	1081196	1					
ANR	1081221	ExpressionStatement	curline = point . y	367:3:8507:8524	1081196	0	True				
ANR	1081222	AssignmentExpression	curline = point . y		1081196	0		=			
ANR	1081223	Identifier	curline		1081196	0					
ANR	1081224	MemberAccess	point . y		1081196	1					
ANR	1081225	Identifier	point		1081196	0					
ANR	1081226	Identifier	y		1081196	1					
ANR	1081227	IdentifierDeclStatement	char buf [ 8 ] ;	371:2:8552:8563	1081196	3	True				
ANR	1081228	IdentifierDecl	buf [ 8 ]		1081196	0					
ANR	1081229	IdentifierDeclType	char [ 8 ]		1081196	0					
ANR	1081230	Identifier	buf		1081196	1					
ANR	1081231	PrimaryExpression	8		1081196	2					
ANR	1081232	IdentifierDeclStatement	"struct termios save , raw ;"	372:2:8567:8590	1081196	4	True				
ANR	1081233	IdentifierDecl	save		1081196	0					
ANR	1081234	IdentifierDeclType	struct termios		1081196	0					
ANR	1081235	Identifier	save		1081196	1					
ANR	1081236	IdentifierDecl	raw		1081196	1					
ANR	1081237	IdentifierDeclType	struct termios		1081196	0					
ANR	1081238	Identifier	raw		1081196	1					
ANR	1081239	ExpressionStatement	fflush ( stdout )	373:2:8594:8608	1081196	5	True				
ANR	1081240	CallExpression	fflush ( stdout )		1081196	0					
ANR	1081241	Callee	fflush		1081196	0					
ANR	1081242	Identifier	fflush		1081196	0					
ANR	1081243	ArgumentList	stdout		1081196	1					
ANR	1081244	Argument	stdout		1081196	0					
ANR	1081245	Identifier	stdout		1081196	0					
ANR	1081246	ExpressionStatement	"( void ) tcgetattr ( 0 , & save )"	374:2:8682:8709	1081196	6	True				
ANR	1081247	CastExpression	"( void ) tcgetattr ( 0 , & save )"		1081196	0					
ANR	1081248	CastTarget	void		1081196	0					
ANR	1081249	CallExpression	"tcgetattr ( 0 , & save )"		1081196	1					
ANR	1081250	Callee	tcgetattr		1081196	0					
ANR	1081251	Identifier	tcgetattr		1081196	0					
ANR	1081252	ArgumentList	0		1081196	1					
ANR	1081253	Argument	0		1081196	0					
ANR	1081254	PrimaryExpression	0		1081196	0					
ANR	1081255	Argument	& save		1081196	1					
ANR	1081256	UnaryOperationExpression	& save		1081196	0					
ANR	1081257	UnaryOperator	&		1081196	0					
ANR	1081258	Identifier	save		1081196	1					
ANR	1081259	ExpressionStatement	cfmakeraw ( & raw )	375:2:8713:8729	1081196	7	True				
ANR	1081260	CallExpression	cfmakeraw ( & raw )		1081196	0					
ANR	1081261	Callee	cfmakeraw		1081196	0					
ANR	1081262	Identifier	cfmakeraw		1081196	0					
ANR	1081263	ArgumentList	& raw		1081196	1					
ANR	1081264	Argument	& raw		1081196	0					
ANR	1081265	UnaryOperationExpression	& raw		1081196	0					
ANR	1081266	UnaryOperator	&		1081196	0					
ANR	1081267	Identifier	raw		1081196	1					
ANR	1081268	ExpressionStatement	"( void ) tcsetattr ( 0 , TCSANOW , & raw )"	376:2:8733:8768	1081196	8	True				
ANR	1081269	CastExpression	"( void ) tcsetattr ( 0 , TCSANOW , & raw )"		1081196	0					
ANR	1081270	CastTarget	void		1081196	0					
ANR	1081271	CallExpression	"tcsetattr ( 0 , TCSANOW , & raw )"		1081196	1					
ANR	1081272	Callee	tcsetattr		1081196	0					
ANR	1081273	Identifier	tcsetattr		1081196	0					
ANR	1081274	ArgumentList	0		1081196	1					
ANR	1081275	Argument	0		1081196	0					
ANR	1081276	PrimaryExpression	0		1081196	0					
ANR	1081277	Argument	TCSANOW		1081196	1					
ANR	1081278	Identifier	TCSANOW		1081196	0					
ANR	1081279	Argument	& raw		1081196	2					
ANR	1081280	UnaryOperationExpression	& raw		1081196	0					
ANR	1081281	UnaryOperator	&		1081196	0					
ANR	1081282	Identifier	raw		1081196	1					
ANR	1081283	IfStatement	if ( isatty ( fileno ( stdin ) ) )		1081196	9					
ANR	1081284	Condition	isatty ( fileno ( stdin ) )	377:6:8776:8798	1081196	0	True				
ANR	1081285	CallExpression	isatty ( fileno ( stdin ) )		1081196	0					
ANR	1081286	Callee	isatty		1081196	0					
ANR	1081287	Identifier	isatty		1081196	0					
ANR	1081288	ArgumentList	fileno ( stdin )		1081196	1					
ANR	1081289	Argument	fileno ( stdin )		1081196	0					
ANR	1081290	CallExpression	fileno ( stdin )		1081196	0					
ANR	1081291	Callee	fileno		1081196	0					
ANR	1081292	Identifier	fileno		1081196	0					
ANR	1081293	ArgumentList	stdin		1081196	1					
ANR	1081294	Argument	stdin		1081196	0					
ANR	1081295	Identifier	stdin		1081196	0					
ANR	1081296	CompoundStatement		16:30:376:376	1081196	1					
ANR	1081297	ExpressionStatement	"write ( 1 , R_CONS_GET_CURSOR_POSITION , sizeof ( R_CONS_GET_CURSOR_POSITION ) )"	378:3:8805:8879	1081196	0	True				
ANR	1081298	CallExpression	"write ( 1 , R_CONS_GET_CURSOR_POSITION , sizeof ( R_CONS_GET_CURSOR_POSITION ) )"		1081196	0					
ANR	1081299	Callee	write		1081196	0					
ANR	1081300	Identifier	write		1081196	0					
ANR	1081301	ArgumentList	1		1081196	1					
ANR	1081302	Argument	1		1081196	0					
ANR	1081303	PrimaryExpression	1		1081196	0					
ANR	1081304	Argument	R_CONS_GET_CURSOR_POSITION		1081196	1					
ANR	1081305	Identifier	R_CONS_GET_CURSOR_POSITION		1081196	0					
ANR	1081306	Argument	sizeof ( R_CONS_GET_CURSOR_POSITION )		1081196	2					
ANR	1081307	SizeofExpression	sizeof ( R_CONS_GET_CURSOR_POSITION )		1081196	0					
ANR	1081308	Sizeof	sizeof		1081196	0					
ANR	1081309	SizeofOperand	R_CONS_GET_CURSOR_POSITION		1081196	1					
ANR	1081310	ExpressionStatement	"read ( 0 , buf , sizeof ( buf ) )"	379:3:8884:8911	1081196	1	True				
ANR	1081311	CallExpression	"read ( 0 , buf , sizeof ( buf ) )"		1081196	0					
ANR	1081312	Callee	read		1081196	0					
ANR	1081313	Identifier	read		1081196	0					
ANR	1081314	ArgumentList	0		1081196	1					
ANR	1081315	Argument	0		1081196	0					
ANR	1081316	PrimaryExpression	0		1081196	0					
ANR	1081317	Argument	buf		1081196	1					
ANR	1081318	Identifier	buf		1081196	0					
ANR	1081319	Argument	sizeof ( buf )		1081196	2					
ANR	1081320	SizeofExpression	sizeof ( buf )		1081196	0					
ANR	1081321	Sizeof	sizeof		1081196	0					
ANR	1081322	SizeofOperand	buf		1081196	1					
ANR	1081323	IfStatement	if ( isdigit ( buf [ 2 ] ) )		1081196	2					
ANR	1081324	Condition	isdigit ( buf [ 2 ] )	380:7:8920:8935	1081196	0	True				
ANR	1081325	CallExpression	isdigit ( buf [ 2 ] )		1081196	0					
ANR	1081326	Callee	isdigit		1081196	0					
ANR	1081327	Identifier	isdigit		1081196	0					
ANR	1081328	ArgumentList	buf [ 2 ]		1081196	1					
ANR	1081329	Argument	buf [ 2 ]		1081196	0					
ANR	1081330	ArrayIndexing	buf [ 2 ]		1081196	0					
ANR	1081331	Identifier	buf		1081196	0					
ANR	1081332	PrimaryExpression	2		1081196	1					
ANR	1081333	CompoundStatement		19:25:514:514	1081196	1					
ANR	1081334	ExpressionStatement	curline = ( buf [ 2 ] - '0' )	381:4:8944:8968	1081196	0	True				
ANR	1081335	AssignmentExpression	curline = ( buf [ 2 ] - '0' )		1081196	0		=			
ANR	1081336	Identifier	curline		1081196	0					
ANR	1081337	AdditiveExpression	buf [ 2 ] - '0'		1081196	1		-			
ANR	1081338	ArrayIndexing	buf [ 2 ]		1081196	0					
ANR	1081339	Identifier	buf		1081196	0					
ANR	1081340	PrimaryExpression	2		1081196	1					
ANR	1081341	PrimaryExpression	'0'		1081196	1					
ANR	1081342	IfStatement	if ( isdigit ( buf [ 3 ] ) )		1081196	3					
ANR	1081343	Condition	isdigit ( buf [ 3 ] )	382:9:8979:8994	1081196	0	True				
ANR	1081344	CallExpression	isdigit ( buf [ 3 ] )		1081196	0					
ANR	1081345	Callee	isdigit		1081196	0					
ANR	1081346	Identifier	isdigit		1081196	0					
ANR	1081347	ArgumentList	buf [ 3 ]		1081196	1					
ANR	1081348	Argument	buf [ 3 ]		1081196	0					
ANR	1081349	ArrayIndexing	buf [ 3 ]		1081196	0					
ANR	1081350	Identifier	buf		1081196	0					
ANR	1081351	PrimaryExpression	3		1081196	1					
ANR	1081352	CompoundStatement		21:27:573:573	1081196	1					
ANR	1081353	ExpressionStatement	curline = curline * 10 + ( buf [ 3 ] - '0' )	383:4:9003:9042	1081196	0	True				
ANR	1081354	AssignmentExpression	curline = curline * 10 + ( buf [ 3 ] - '0' )		1081196	0		=			
ANR	1081355	Identifier	curline		1081196	0					
ANR	1081356	AdditiveExpression	curline * 10 + ( buf [ 3 ] - '0' )		1081196	1		+			
ANR	1081357	MultiplicativeExpression	curline * 10		1081196	0		*			
ANR	1081358	Identifier	curline		1081196	0					
ANR	1081359	PrimaryExpression	10		1081196	1					
ANR	1081360	AdditiveExpression	buf [ 3 ] - '0'		1081196	1		-			
ANR	1081361	ArrayIndexing	buf [ 3 ]		1081196	0					
ANR	1081362	Identifier	buf		1081196	0					
ANR	1081363	PrimaryExpression	3		1081196	1					
ANR	1081364	PrimaryExpression	'0'		1081196	1					
ANR	1081365	ExpressionStatement	"( void ) tcsetattr ( 0 , TCSANOW , & save )"	386:2:9055:9091	1081196	10	True				
ANR	1081366	CastExpression	"( void ) tcsetattr ( 0 , TCSANOW , & save )"		1081196	0					
ANR	1081367	CastTarget	void		1081196	0					
ANR	1081368	CallExpression	"tcsetattr ( 0 , TCSANOW , & save )"		1081196	1					
ANR	1081369	Callee	tcsetattr		1081196	0					
ANR	1081370	Identifier	tcsetattr		1081196	0					
ANR	1081371	ArgumentList	0		1081196	1					
ANR	1081372	Argument	0		1081196	0					
ANR	1081373	PrimaryExpression	0		1081196	0					
ANR	1081374	Argument	TCSANOW		1081196	1					
ANR	1081375	Identifier	TCSANOW		1081196	0					
ANR	1081376	Argument	& save		1081196	2					
ANR	1081377	UnaryOperationExpression	& save		1081196	0					
ANR	1081378	UnaryOperator	&		1081196	0					
ANR	1081379	Identifier	save		1081196	1					
ANR	1081380	ReturnStatement	return curline ;	388:1:9101:9115	1081196	11	True				
ANR	1081381	Identifier	curline		1081196	0					
ANR	1081382	ReturnType	R_API int		1081196	1					
ANR	1081383	Identifier	r_cons_get_cur_line		1081196	2					
ANR	1081384	ParameterList			1081196	3					
ANR	1081385	CFGEntryNode	ENTRY		1081196		True				
ANR	1081386	CFGExitNode	EXIT		1081196		True				
ANR	1081387	Symbol	stdin		1081196						
ANR	1081388	Symbol	* buf		1081196						
ANR	1081389	Symbol	stdout		1081196						
ANR	1081390	Symbol	GetCursorPos		1081196						
ANR	1081391	Symbol	R_CONS_GET_CURSOR_POSITION		1081196						
ANR	1081392	Symbol	& save		1081196						
ANR	1081393	Symbol	save		1081196						
ANR	1081394	Symbol	raw		1081196						
ANR	1081395	Symbol	& raw		1081196						
ANR	1081396	Symbol	TCSANOW		1081196						
ANR	1081397	Symbol	isatty		1081196						
ANR	1081398	Symbol	point		1081196						
ANR	1081399	Symbol	& point		1081196						
ANR	1081400	Symbol	buf		1081196						
ANR	1081401	Symbol	fileno		1081196						
ANR	1081402	Symbol	curline		1081196						
ANR	1081403	Symbol	isdigit		1081196						
ANR	1081404	Symbol	point . y		1081196						
ANR	1081405	Function	r_cons_break_timeout	391:0:9120:9328							
ANR	1081406	FunctionDef	r_cons_break_timeout (int timeout)		1081405	0					
ANR	1081407	CompoundStatement		391:45:9165:9328	1081405	0					
ANR	1081408	IfStatement	if ( ! timeout && I . timeout )		1081405	0					
ANR	1081409	Condition	! timeout && I . timeout	392:5:9172:9192	1081405	0	True				
ANR	1081410	AndExpression	! timeout && I . timeout		1081405	0		&&			
ANR	1081411	UnaryOperationExpression	! timeout		1081405	0					
ANR	1081412	UnaryOperator	!		1081405	0					
ANR	1081413	Identifier	timeout		1081405	1					
ANR	1081414	MemberAccess	I . timeout		1081405	1					
ANR	1081415	Identifier	I		1081405	0					
ANR	1081416	Identifier	timeout		1081405	1					
ANR	1081417	CompoundStatement		2:28:29:29	1081405	1					
ANR	1081418	ExpressionStatement	I . timeout = 0	393:2:9199:9212	1081405	0	True				
ANR	1081419	AssignmentExpression	I . timeout = 0		1081405	0		=			
ANR	1081420	MemberAccess	I . timeout		1081405	0					
ANR	1081421	Identifier	I		1081405	0					
ANR	1081422	Identifier	timeout		1081405	1					
ANR	1081423	PrimaryExpression	0		1081405	1					
ANR	1081424	ElseStatement	else		1081405	0					
ANR	1081425	CompoundStatement		4:8:56:56	1081405	0					
ANR	1081426	IfStatement	if ( timeout )		1081405	0					
ANR	1081427	Condition	timeout	395:6:9230:9236	1081405	0	True				
ANR	1081428	Identifier	timeout		1081405	0					
ANR	1081429	CompoundStatement		5:15:73:73	1081405	1					
ANR	1081430	ExpressionStatement	I . timeout = r_sys_now ( ) + ( timeout * 1000000 )	396:3:9244:9290	1081405	0	True				
ANR	1081431	AssignmentExpression	I . timeout = r_sys_now ( ) + ( timeout * 1000000 )		1081405	0		=			
ANR	1081432	MemberAccess	I . timeout		1081405	0					
ANR	1081433	Identifier	I		1081405	0					
ANR	1081434	Identifier	timeout		1081405	1					
ANR	1081435	AdditiveExpression	r_sys_now ( ) + ( timeout * 1000000 )		1081405	1		+			
ANR	1081436	CallExpression	r_sys_now ( )		1081405	0					
ANR	1081437	Callee	r_sys_now		1081405	0					
ANR	1081438	Identifier	r_sys_now		1081405	0					
ANR	1081439	ArgumentList			1081405	1					
ANR	1081440	MultiplicativeExpression	timeout * 1000000		1081405	1		*			
ANR	1081441	Identifier	timeout		1081405	0					
ANR	1081442	PrimaryExpression	1000000		1081405	1					
ANR	1081443	ElseStatement	else		1081405	0					
ANR	1081444	CompoundStatement		7:9:135:135	1081405	0					
ANR	1081445	ExpressionStatement	I . timeout = 0	398:3:9306:9319	1081405	0	True				
ANR	1081446	AssignmentExpression	I . timeout = 0		1081405	0		=			
ANR	1081447	MemberAccess	I . timeout		1081405	0					
ANR	1081448	Identifier	I		1081405	0					
ANR	1081449	Identifier	timeout		1081405	1					
ANR	1081450	PrimaryExpression	0		1081405	1					
ANR	1081451	ReturnType	R_API void		1081405	1					
ANR	1081452	Identifier	r_cons_break_timeout		1081405	2					
ANR	1081453	ParameterList	int timeout		1081405	3					
ANR	1081454	Parameter	int timeout	391:32:9152:9162	1081405	0	True				
ANR	1081455	ParameterType	int		1081405	0					
ANR	1081456	Identifier	timeout		1081405	1					
ANR	1081457	CFGEntryNode	ENTRY		1081405		True				
ANR	1081458	CFGExitNode	EXIT		1081405		True				
ANR	1081459	Symbol	r_sys_now		1081405						
ANR	1081460	Symbol	I		1081405						
ANR	1081461	Symbol	I . timeout		1081405						
ANR	1081462	Symbol	timeout		1081405						
ANR	1081463	Function	r_cons_break_end	403:0:9331:9738							
ANR	1081464	FunctionDef	r_cons_break_end ()		1081463	0					
ANR	1081465	CompoundStatement		403:30:9361:9738	1081463	0					
ANR	1081466	ExpressionStatement	I . context -> breaked = false	404:1:9364:9390	1081463	0	True				
ANR	1081467	AssignmentExpression	I . context -> breaked = false		1081463	0		=			
ANR	1081468	PtrMemberAccess	I . context -> breaked		1081463	0					
ANR	1081469	MemberAccess	I . context		1081463	0					
ANR	1081470	Identifier	I		1081463	0					
ANR	1081471	Identifier	context		1081463	1					
ANR	1081472	Identifier	breaked		1081463	1					
ANR	1081473	Identifier	false		1081463	1					
ANR	1081474	ExpressionStatement	I . timeout = 0	405:1:9393:9406	1081463	1	True				
ANR	1081475	AssignmentExpression	I . timeout = 0		1081463	0		=			
ANR	1081476	MemberAccess	I . timeout		1081463	0					
ANR	1081477	Identifier	I		1081463	0					
ANR	1081478	Identifier	timeout		1081463	1					
ANR	1081479	PrimaryExpression	0		1081463	1					
ANR	1081480	ExpressionStatement	"signal ( SIGINT , SIG_IGN )"	407:1:9422:9446	1081463	2	True				
ANR	1081481	CallExpression	"signal ( SIGINT , SIG_IGN )"		1081463	0					
ANR	1081482	Callee	signal		1081463	0					
ANR	1081483	Identifier	signal		1081463	0					
ANR	1081484	ArgumentList	SIGINT		1081463	1					
ANR	1081485	Argument	SIGINT		1081463	0					
ANR	1081486	Identifier	SIGINT		1081463	0					
ANR	1081487	Argument	SIG_IGN		1081463	1					
ANR	1081488	Identifier	SIG_IGN		1081463	0					
ANR	1081489	IfStatement	if ( ! r_stack_is_empty ( I . context -> break_stack ) )		1081463	3					
ANR	1081490	Condition	! r_stack_is_empty ( I . context -> break_stack )	409:5:9460:9501	1081463	0	True				
ANR	1081491	UnaryOperationExpression	! r_stack_is_empty ( I . context -> break_stack )		1081463	0					
ANR	1081492	UnaryOperator	!		1081463	0					
ANR	1081493	CallExpression	r_stack_is_empty ( I . context -> break_stack )		1081463	1					
ANR	1081494	Callee	r_stack_is_empty		1081463	0					
ANR	1081495	Identifier	r_stack_is_empty		1081463	0					
ANR	1081496	ArgumentList	I . context -> break_stack		1081463	1					
ANR	1081497	Argument	I . context -> break_stack		1081463	0					
ANR	1081498	PtrMemberAccess	I . context -> break_stack		1081463	0					
ANR	1081499	MemberAccess	I . context		1081463	0					
ANR	1081500	Identifier	I		1081463	0					
ANR	1081501	Identifier	context		1081463	1					
ANR	1081502	Identifier	break_stack		1081463	1					
ANR	1081503	CompoundStatement		7:49:142:142	1081463	1					
ANR	1081504	ExpressionStatement	r_stack_free ( I . context -> break_stack )	411:2:9531:9568	1081463	0	True				
ANR	1081505	CallExpression	r_stack_free ( I . context -> break_stack )		1081463	0					
ANR	1081506	Callee	r_stack_free		1081463	0					
ANR	1081507	Identifier	r_stack_free		1081463	0					
ANR	1081508	ArgumentList	I . context -> break_stack		1081463	1					
ANR	1081509	Argument	I . context -> break_stack		1081463	0					
ANR	1081510	PtrMemberAccess	I . context -> break_stack		1081463	0					
ANR	1081511	MemberAccess	I . context		1081463	0					
ANR	1081512	Identifier	I		1081463	0					
ANR	1081513	Identifier	context		1081463	1					
ANR	1081514	Identifier	break_stack		1081463	1					
ANR	1081515	ExpressionStatement	"I . context -> break_stack = r_stack_newf ( 6 , break_stack_free )"	413:2:9595:9654	1081463	1	True				
ANR	1081516	AssignmentExpression	"I . context -> break_stack = r_stack_newf ( 6 , break_stack_free )"		1081463	0		=			
ANR	1081517	PtrMemberAccess	I . context -> break_stack		1081463	0					
ANR	1081518	MemberAccess	I . context		1081463	0					
ANR	1081519	Identifier	I		1081463	0					
ANR	1081520	Identifier	context		1081463	1					
ANR	1081521	Identifier	break_stack		1081463	1					
ANR	1081522	CallExpression	"r_stack_newf ( 6 , break_stack_free )"		1081463	1					
ANR	1081523	Callee	r_stack_newf		1081463	0					
ANR	1081524	Identifier	r_stack_newf		1081463	0					
ANR	1081525	ArgumentList	6		1081463	1					
ANR	1081526	Argument	6		1081463	0					
ANR	1081527	PrimaryExpression	6		1081463	0					
ANR	1081528	Argument	break_stack_free		1081463	1					
ANR	1081529	Identifier	break_stack_free		1081463	0					
ANR	1081530	ExpressionStatement	I . context -> event_interrupt_data = NULL	414:2:9658:9696	1081463	2	True				
ANR	1081531	AssignmentExpression	I . context -> event_interrupt_data = NULL		1081463	0		=			
ANR	1081532	PtrMemberAccess	I . context -> event_interrupt_data		1081463	0					
ANR	1081533	MemberAccess	I . context		1081463	0					
ANR	1081534	Identifier	I		1081463	0					
ANR	1081535	Identifier	context		1081463	1					
ANR	1081536	Identifier	event_interrupt_data		1081463	1					
ANR	1081537	Identifier	NULL		1081463	1					
ANR	1081538	ExpressionStatement	I . context -> event_interrupt = NULL	415:2:9700:9733	1081463	3	True				
ANR	1081539	AssignmentExpression	I . context -> event_interrupt = NULL		1081463	0		=			
ANR	1081540	PtrMemberAccess	I . context -> event_interrupt		1081463	0					
ANR	1081541	MemberAccess	I . context		1081463	0					
ANR	1081542	Identifier	I		1081463	0					
ANR	1081543	Identifier	context		1081463	1					
ANR	1081544	Identifier	event_interrupt		1081463	1					
ANR	1081545	Identifier	NULL		1081463	1					
ANR	1081546	ReturnType	R_API void		1081463	1					
ANR	1081547	Identifier	r_cons_break_end		1081463	2					
ANR	1081548	ParameterList			1081463	3					
ANR	1081549	CFGEntryNode	ENTRY		1081463		True				
ANR	1081550	CFGExitNode	EXIT		1081463		True				
ANR	1081551	Symbol	NULL		1081463						
ANR	1081552	Symbol	false		1081463						
ANR	1081553	Symbol	I		1081463						
ANR	1081554	Symbol	SIG_IGN		1081463						
ANR	1081555	Symbol	I . context -> break_stack		1081463						
ANR	1081556	Symbol	I . context -> event_interrupt_data		1081463						
ANR	1081557	Symbol	I . context		1081463						
ANR	1081558	Symbol	break_stack_free		1081463						
ANR	1081559	Symbol	* I . context		1081463						
ANR	1081560	Symbol	* I		1081463						
ANR	1081561	Symbol	r_stack_newf		1081463						
ANR	1081562	Symbol	SIGINT		1081463						
ANR	1081563	Symbol	r_stack_is_empty		1081463						
ANR	1081564	Symbol	I . timeout		1081463						
ANR	1081565	Symbol	I . context -> breaked		1081463						
ANR	1081566	Symbol	I . context -> event_interrupt		1081463						
ANR	1081567	Function	r_cons_sleep_begin	419:0:9741:9859							
ANR	1081568	FunctionDef	r_cons_sleep_begin ()		1081567	0					
ANR	1081569	CompoundStatement		419:37:9778:9859	1081567	0					
ANR	1081570	IfStatement	if ( ! I . cb_sleep_begin )		1081567	0					
ANR	1081571	Condition	! I . cb_sleep_begin	420:5:9785:9801	1081567	0	True				
ANR	1081572	UnaryOperationExpression	! I . cb_sleep_begin		1081567	0					
ANR	1081573	UnaryOperator	!		1081567	0					
ANR	1081574	MemberAccess	I . cb_sleep_begin		1081567	1					
ANR	1081575	Identifier	I		1081567	0					
ANR	1081576	Identifier	cb_sleep_begin		1081567	1					
ANR	1081577	CompoundStatement		2:24:25:25	1081567	1					
ANR	1081578	ReturnStatement	return NULL ;	421:2:9808:9819	1081567	0	True				
ANR	1081579	Identifier	NULL		1081567	0					
ANR	1081580	ReturnStatement	return I . cb_sleep_begin ( I . user ) ;	423:1:9825:9857	1081567	1	True				
ANR	1081581	CallExpression	I . cb_sleep_begin ( I . user )		1081567	0					
ANR	1081582	Callee	I . cb_sleep_begin		1081567	0					
ANR	1081583	MemberAccess	I . cb_sleep_begin		1081567	0					
ANR	1081584	Identifier	I		1081567	0					
ANR	1081585	Identifier	cb_sleep_begin		1081567	1					
ANR	1081586	ArgumentList	I . user		1081567	1					
ANR	1081587	Argument	I . user		1081567	0					
ANR	1081588	MemberAccess	I . user		1081567	0					
ANR	1081589	Identifier	I		1081567	0					
ANR	1081590	Identifier	user		1081567	1					
ANR	1081591	ReturnType	R_API void *		1081567	1					
ANR	1081592	Identifier	r_cons_sleep_begin		1081567	2					
ANR	1081593	ParameterList			1081567	3					
ANR	1081594	CFGEntryNode	ENTRY		1081567		True				
ANR	1081595	CFGExitNode	EXIT		1081567		True				
ANR	1081596	Symbol	I . cb_sleep_begin		1081567						
ANR	1081597	Symbol	I . user		1081567						
ANR	1081598	Symbol	NULL		1081567						
ANR	1081599	Symbol	I		1081567						
ANR	1081600	Function	r_cons_sleep_end	426:0:9862:9973							
ANR	1081601	FunctionDef	r_cons_sleep_end (void * user)		1081600	0					
ANR	1081602	CompoundStatement		426:40:9902:9973	1081600	0					
ANR	1081603	IfStatement	if ( ! I . cb_sleep_end )		1081600	0					
ANR	1081604	Condition	! I . cb_sleep_end	427:5:9909:9923	1081600	0	True				
ANR	1081605	UnaryOperationExpression	! I . cb_sleep_end		1081600	0					
ANR	1081606	UnaryOperator	!		1081600	0					
ANR	1081607	MemberAccess	I . cb_sleep_end		1081600	1					
ANR	1081608	Identifier	I		1081600	0					
ANR	1081609	Identifier	cb_sleep_end		1081600	1					
ANR	1081610	CompoundStatement		2:22:23:23	1081600	1					
ANR	1081611	ReturnStatement	return ;	428:2:9930:9936	1081600	0	True				
ANR	1081612	ExpressionStatement	"I . cb_sleep_end ( I . user , user )"	430:1:9942:9971	1081600	1	True				
ANR	1081613	CallExpression	"I . cb_sleep_end ( I . user , user )"		1081600	0					
ANR	1081614	Callee	I . cb_sleep_end		1081600	0					
ANR	1081615	MemberAccess	I . cb_sleep_end		1081600	0					
ANR	1081616	Identifier	I		1081600	0					
ANR	1081617	Identifier	cb_sleep_end		1081600	1					
ANR	1081618	ArgumentList	I . user		1081600	1					
ANR	1081619	Argument	I . user		1081600	0					
ANR	1081620	MemberAccess	I . user		1081600	0					
ANR	1081621	Identifier	I		1081600	0					
ANR	1081622	Identifier	user		1081600	1					
ANR	1081623	Argument	user		1081600	1					
ANR	1081624	Identifier	user		1081600	0					
ANR	1081625	ReturnType	R_API void		1081600	1					
ANR	1081626	Identifier	r_cons_sleep_end		1081600	2					
ANR	1081627	ParameterList	void * user		1081600	3					
ANR	1081628	Parameter	void * user	426:28:9890:9899	1081600	0	True				
ANR	1081629	ParameterType	void *		1081600	0					
ANR	1081630	Identifier	user		1081600	1					
ANR	1081631	CFGEntryNode	ENTRY		1081600		True				
ANR	1081632	CFGExitNode	EXIT		1081600		True				
ANR	1081633	Symbol	I . user		1081600						
ANR	1081634	Symbol	I		1081600						
ANR	1081635	Symbol	user		1081600						
ANR	1081636	Symbol	I . cb_sleep_end		1081600						
ANR	1081637	DeclStmt									
ANR	1081638	Decl							HANDLE	HANDLE	h
ANR	1081639	Function	__w32_control	435:0:10009:10178							
ANR	1081640	FunctionDef	__w32_control (DWORD type)		1081639	0					
ANR	1081641	CompoundStatement		435:38:10047:10178	1081639	0					
ANR	1081642	IfStatement	if ( type == CTRL_C_EVENT )		1081639	0					
ANR	1081643	Condition	type == CTRL_C_EVENT	436:5:10054:10073	1081639	0	True				
ANR	1081644	EqualityExpression	type == CTRL_C_EVENT		1081639	0		==			
ANR	1081645	Identifier	type		1081639	0					
ANR	1081646	Identifier	CTRL_C_EVENT		1081639	1					
ANR	1081647	CompoundStatement		2:27:28:28	1081639	1					
ANR	1081648	ExpressionStatement	__break_signal ( 2 )	437:2:10080:10098	1081639	0	True				
ANR	1081649	CallExpression	__break_signal ( 2 )		1081639	0					
ANR	1081650	Callee	__break_signal		1081639	0					
ANR	1081651	Identifier	__break_signal		1081639	0					
ANR	1081652	ArgumentList	2		1081639	1					
ANR	1081653	Argument	2		1081639	0					
ANR	1081654	PrimaryExpression	2		1081639	0					
ANR	1081655	ExpressionStatement	"eprintf ( ""{ctrl+c} pressed.\\n"" )"	438:2:10112:10143	1081639	1	True				
ANR	1081656	CallExpression	"eprintf ( ""{ctrl+c} pressed.\\n"" )"		1081639	0					
ANR	1081657	Callee	eprintf		1081639	0					
ANR	1081658	Identifier	eprintf		1081639	0					
ANR	1081659	ArgumentList	"""{ctrl+c} pressed.\\n"""		1081639	1					
ANR	1081660	Argument	"""{ctrl+c} pressed.\\n"""		1081639	0					
ANR	1081661	PrimaryExpression	"""{ctrl+c} pressed.\\n"""		1081639	0					
ANR	1081662	ReturnStatement	return true ;	439:2:10147:10158	1081639	2	True				
ANR	1081663	Identifier	true		1081639	0					
ANR	1081664	ReturnStatement	return false ;	441:1:10164:10176	1081639	1	True				
ANR	1081665	Identifier	false		1081639	0					
ANR	1081666	ReturnType	static BOOL		1081639	1					
ANR	1081667	Identifier	__w32_control		1081639	2					
ANR	1081668	ParameterList	DWORD type		1081639	3					
ANR	1081669	Parameter	DWORD type	435:26:10035:10044	1081639	0	True				
ANR	1081670	ParameterType	DWORD		1081639	0					
ANR	1081671	Identifier	type		1081639	1					
ANR	1081672	CFGEntryNode	ENTRY		1081639		True				
ANR	1081673	CFGExitNode	EXIT		1081639		True				
ANR	1081674	Symbol	CTRL_C_EVENT		1081639						
ANR	1081675	Symbol	true		1081639						
ANR	1081676	Symbol	false		1081639						
ANR	1081677	Symbol	type		1081639						
ANR	1081678	DeclStmt									
ANR	1081679	Decl							volatile sig_atomic_t	volatile sig_atomic_t	sigwinchFlag
ANR	1081680	Function	resize	445:0:10231:10280							
ANR	1081681	FunctionDef	resize (int sig)		1081680	0					
ANR	1081682	CompoundStatement		445:28:10259:10280	1081680	0					
ANR	1081683	ExpressionStatement	sigwinchFlag = 1	446:1:10262:10278	1081680	0	True				
ANR	1081684	AssignmentExpression	sigwinchFlag = 1		1081680	0		=			
ANR	1081685	Identifier	sigwinchFlag		1081680	0					
ANR	1081686	PrimaryExpression	1		1081680	1					
ANR	1081687	ReturnType	static void		1081680	1					
ANR	1081688	Identifier	resize		1081680	2					
ANR	1081689	ParameterList	int sig		1081680	3					
ANR	1081690	Parameter	int sig	445:19:10250:10256	1081680	0	True				
ANR	1081691	ParameterType	int		1081680	0					
ANR	1081692	Identifier	sig		1081680	1					
ANR	1081693	CFGEntryNode	ENTRY		1081680		True				
ANR	1081694	CFGExitNode	EXIT		1081680		True				
ANR	1081695	Symbol	sig		1081680						
ANR	1081696	Symbol	sigwinchFlag		1081680						
ANR	1081697	Function	resizeWin	449:0:10289:10371							
ANR	1081698	FunctionDef	resizeWin ()		1081697	0					
ANR	1081699	CompoundStatement		449:21:10310:10371	1081697	0					
ANR	1081700	IfStatement	if ( I . event_resize )		1081697	0					
ANR	1081701	Condition	I . event_resize	450:5:10317:10330	1081697	0	True				
ANR	1081702	MemberAccess	I . event_resize		1081697	0					
ANR	1081703	Identifier	I		1081697	0					
ANR	1081704	Identifier	event_resize		1081697	1					
ANR	1081705	CompoundStatement		2:21:22:22	1081697	1					
ANR	1081706	ExpressionStatement	I . event_resize ( I . event_data )	451:2:10337:10366	1081697	0	True				
ANR	1081707	CallExpression	I . event_resize ( I . event_data )		1081697	0					
ANR	1081708	Callee	I . event_resize		1081697	0					
ANR	1081709	MemberAccess	I . event_resize		1081697	0					
ANR	1081710	Identifier	I		1081697	0					
ANR	1081711	Identifier	event_resize		1081697	1					
ANR	1081712	ArgumentList	I . event_data		1081697	1					
ANR	1081713	Argument	I . event_data		1081697	0					
ANR	1081714	MemberAccess	I . event_data		1081697	0					
ANR	1081715	Identifier	I		1081697	0					
ANR	1081716	Identifier	event_data		1081697	1					
ANR	1081717	ReturnType	void		1081697	1					
ANR	1081718	Identifier	resizeWin		1081697	2					
ANR	1081719	ParameterList			1081697	3					
ANR	1081720	CFGEntryNode	ENTRY		1081697		True				
ANR	1081721	CFGExitNode	EXIT		1081697		True				
ANR	1081722	Symbol	I		1081697						
ANR	1081723	Symbol	I . event_resize		1081697						
ANR	1081724	Symbol	I . event_data		1081697						
ANR	1081725	Function	r_cons_set_click	455:0:10374:10491							
ANR	1081726	FunctionDef	"r_cons_set_click (int x , int y)"		1081725	0					
ANR	1081727	CompoundStatement		455:42:10416:10491	1081725	0					
ANR	1081728	ExpressionStatement	I . click_x = x	456:1:10419:10432	1081725	0	True				
ANR	1081729	AssignmentExpression	I . click_x = x		1081725	0		=			
ANR	1081730	MemberAccess	I . click_x		1081725	0					
ANR	1081731	Identifier	I		1081725	0					
ANR	1081732	Identifier	click_x		1081725	1					
ANR	1081733	Identifier	x		1081725	1					
ANR	1081734	ExpressionStatement	I . click_y = y	457:1:10435:10448	1081725	1	True				
ANR	1081735	AssignmentExpression	I . click_y = y		1081725	0		=			
ANR	1081736	MemberAccess	I . click_y		1081725	0					
ANR	1081737	Identifier	I		1081725	0					
ANR	1081738	Identifier	click_y		1081725	1					
ANR	1081739	Identifier	y		1081725	1					
ANR	1081740	ExpressionStatement	I . click_set = true	458:1:10451:10469	1081725	2	True				
ANR	1081741	AssignmentExpression	I . click_set = true		1081725	0		=			
ANR	1081742	MemberAccess	I . click_set		1081725	0					
ANR	1081743	Identifier	I		1081725	0					
ANR	1081744	Identifier	click_set		1081725	1					
ANR	1081745	Identifier	true		1081725	1					
ANR	1081746	ExpressionStatement	I . mouse_event = 1	459:1:10472:10489	1081725	3	True				
ANR	1081747	AssignmentExpression	I . mouse_event = 1		1081725	0		=			
ANR	1081748	MemberAccess	I . mouse_event		1081725	0					
ANR	1081749	Identifier	I		1081725	0					
ANR	1081750	Identifier	mouse_event		1081725	1					
ANR	1081751	PrimaryExpression	1		1081725	1					
ANR	1081752	ReturnType	R_API void		1081725	1					
ANR	1081753	Identifier	r_cons_set_click		1081725	2					
ANR	1081754	ParameterList	"int x , int y"		1081725	3					
ANR	1081755	Parameter	int x	455:28:10402:10406	1081725	0	True				
ANR	1081756	ParameterType	int		1081725	0					
ANR	1081757	Identifier	x		1081725	1					
ANR	1081758	Parameter	int y	455:35:10409:10413	1081725	1	True				
ANR	1081759	ParameterType	int		1081725	0					
ANR	1081760	Identifier	y		1081725	1					
ANR	1081761	CFGEntryNode	ENTRY		1081725		True				
ANR	1081762	CFGExitNode	EXIT		1081725		True				
ANR	1081763	Symbol	x		1081725						
ANR	1081764	Symbol	I . click_y		1081725						
ANR	1081765	Symbol	true		1081725						
ANR	1081766	Symbol	y		1081725						
ANR	1081767	Symbol	I		1081725						
ANR	1081768	Symbol	I . click_x		1081725						
ANR	1081769	Symbol	I . click_set		1081725						
ANR	1081770	Symbol	I . mouse_event		1081725						
ANR	1081771	Function	r_cons_get_click	462:0:10494:10663							
ANR	1081772	FunctionDef	"r_cons_get_click (int * x , int * y)"		1081771	0					
ANR	1081773	CompoundStatement		462:44:10538:10663	1081771	0					
ANR	1081774	IfStatement	if ( x )		1081771	0					
ANR	1081775	Condition	x	463:5:10545:10545	1081771	0	True				
ANR	1081776	Identifier	x		1081771	0					
ANR	1081777	CompoundStatement		2:8:9:9	1081771	1					
ANR	1081778	ExpressionStatement	* x = I . click_x	464:2:10552:10566	1081771	0	True				
ANR	1081779	AssignmentExpression	* x = I . click_x		1081771	0		=			
ANR	1081780	UnaryOperationExpression	* x		1081771	0					
ANR	1081781	UnaryOperator	*		1081771	0					
ANR	1081782	Identifier	x		1081771	1					
ANR	1081783	MemberAccess	I . click_x		1081771	1					
ANR	1081784	Identifier	I		1081771	0					
ANR	1081785	Identifier	click_x		1081771	1					
ANR	1081786	IfStatement	if ( y )		1081771	1					
ANR	1081787	Condition	y	466:5:10576:10576	1081771	0	True				
ANR	1081788	Identifier	y		1081771	0					
ANR	1081789	CompoundStatement		5:8:40:40	1081771	1					
ANR	1081790	ExpressionStatement	* y = I . click_y	467:2:10583:10597	1081771	0	True				
ANR	1081791	AssignmentExpression	* y = I . click_y		1081771	0		=			
ANR	1081792	UnaryOperationExpression	* y		1081771	0					
ANR	1081793	UnaryOperator	*		1081771	0					
ANR	1081794	Identifier	y		1081771	1					
ANR	1081795	MemberAccess	I . click_y		1081771	1					
ANR	1081796	Identifier	I		1081771	0					
ANR	1081797	Identifier	click_y		1081771	1					
ANR	1081798	IdentifierDeclStatement	bool set = I . click_set ;	469:1:10603:10625	1081771	2	True				
ANR	1081799	IdentifierDecl	set = I . click_set		1081771	0					
ANR	1081800	IdentifierDeclType	bool		1081771	0					
ANR	1081801	Identifier	set		1081771	1					
ANR	1081802	AssignmentExpression	set = I . click_set		1081771	2		=			
ANR	1081803	Identifier	set		1081771	0					
ANR	1081804	MemberAccess	I . click_set		1081771	1					
ANR	1081805	Identifier	I		1081771	0					
ANR	1081806	Identifier	click_set		1081771	1					
ANR	1081807	ExpressionStatement	I . click_set = false	470:1:10628:10647	1081771	3	True				
ANR	1081808	AssignmentExpression	I . click_set = false		1081771	0		=			
ANR	1081809	MemberAccess	I . click_set		1081771	0					
ANR	1081810	Identifier	I		1081771	0					
ANR	1081811	Identifier	click_set		1081771	1					
ANR	1081812	Identifier	false		1081771	1					
ANR	1081813	ExpressionStatement		470:21:10648:10648	1081771	4	True				
ANR	1081814	ReturnStatement	return set ;	471:1:10651:10661	1081771	5	True				
ANR	1081815	Identifier	set		1081771	0					
ANR	1081816	ReturnType	R_API bool		1081771	1					
ANR	1081817	Identifier	r_cons_get_click		1081771	2					
ANR	1081818	ParameterList	"int * x , int * y"		1081771	3					
ANR	1081819	Parameter	int * x	462:28:10522:10527	1081771	0	True				
ANR	1081820	ParameterType	int *		1081771	0					
ANR	1081821	Identifier	x		1081771	1					
ANR	1081822	Parameter	int * y	462:36:10530:10535	1081771	1	True				
ANR	1081823	ParameterType	int *		1081771	0					
ANR	1081824	Identifier	y		1081771	1					
ANR	1081825	CFGEntryNode	ENTRY		1081771		True				
ANR	1081826	CFGExitNode	EXIT		1081771		True				
ANR	1081827	Symbol	* x		1081771						
ANR	1081828	Symbol	* y		1081771						
ANR	1081829	Symbol	set		1081771						
ANR	1081830	Symbol	x		1081771						
ANR	1081831	Symbol	I . click_y		1081771						
ANR	1081832	Symbol	false		1081771						
ANR	1081833	Symbol	y		1081771						
ANR	1081834	Symbol	I		1081771						
ANR	1081835	Symbol	I . click_x		1081771						
ANR	1081836	Symbol	I . click_set		1081771						
ANR	1081837	Function	r_cons_enable_highlight	474:0:10666:10759							
ANR	1081838	FunctionDef	r_cons_enable_highlight (const bool enable)		1081837	0					
ANR	1081839	CompoundStatement		474:54:10720:10759	1081837	0					
ANR	1081840	ExpressionStatement	I . enable_highlight = enable	475:8:10730:10757	1081837	0	True				
ANR	1081841	AssignmentExpression	I . enable_highlight = enable		1081837	0		=			
ANR	1081842	MemberAccess	I . enable_highlight		1081837	0					
ANR	1081843	Identifier	I		1081837	0					
ANR	1081844	Identifier	enable_highlight		1081837	1					
ANR	1081845	Identifier	enable		1081837	1					
ANR	1081846	ReturnType	R_API void		1081837	1					
ANR	1081847	Identifier	r_cons_enable_highlight		1081837	2					
ANR	1081848	ParameterList	const bool enable		1081837	3					
ANR	1081849	Parameter	const bool enable	474:35:10701:10717	1081837	0	True				
ANR	1081850	ParameterType	const bool		1081837	0					
ANR	1081851	Identifier	enable		1081837	1					
ANR	1081852	CFGEntryNode	ENTRY		1081837		True				
ANR	1081853	CFGExitNode	EXIT		1081837		True				
ANR	1081854	Symbol	enable		1081837						
ANR	1081855	Symbol	I		1081837						
ANR	1081856	Symbol	I . enable_highlight		1081837						
ANR	1081857	Function	r_cons_enable_mouse	478:0:10762:11579							
ANR	1081858	FunctionDef	r_cons_enable_mouse (const bool enable)		1081857	0					
ANR	1081859	CompoundStatement		478:50:10812:11579	1081857	0					
ANR	1081860	Statement	const	480:1:10828:10832	1081857	0	True				
ANR	1081861	Statement	char	480:7:10834:10837	1081857	1	True				
ANR	1081862	Statement	*	480:12:10839:10839	1081857	2	True				
ANR	1081863	Statement	click	480:13:10840:10844	1081857	3	True				
ANR	1081864	Statement	=	480:19:10846:10846	1081857	4	True				
ANR	1081865	Statement	enable	480:21:10848:10853	1081857	5	True				
ANR	1081866	Statement	?	481:2:10857:10857	1081857	6	True				
ANR	1081867	Statement	"""\\x1b[?1000;1006;1015h"""	481:4:10859:10881	1081857	7	True				
ANR	1081868	Statement	:	482:2:10885:10885	1081857	8	True				
ANR	1081869	Statement	"""\\x1b[?1001r"""	482:4:10887:10899	1081857	9	True				
ANR	1081870	ExpressionStatement	"""\\x1b[?1000l"""	482:18:10901:10914	1081857	10	True				
ANR	1081871	PrimaryExpression	"""\\x1b[?1000l"""		1081857	0					
ANR	1081872	IdentifierDeclStatement	bool enabled = I . mouse ;	485:1:11039:11061	1081857	11	True				
ANR	1081873	IdentifierDecl	enabled = I . mouse		1081857	0					
ANR	1081874	IdentifierDeclType	bool		1081857	0					
ANR	1081875	Identifier	enabled		1081857	1					
ANR	1081876	AssignmentExpression	enabled = I . mouse		1081857	2		=			
ANR	1081877	Identifier	enabled		1081857	0					
ANR	1081878	MemberAccess	I . mouse		1081857	1					
ANR	1081879	Identifier	I		1081857	0					
ANR	1081880	Identifier	mouse		1081857	1					
ANR	1081881	ExpressionStatement	I . mouse = enable	486:1:11064:11080	1081857	12	True				
ANR	1081882	AssignmentExpression	I . mouse = enable		1081857	0		=			
ANR	1081883	MemberAccess	I . mouse		1081857	0					
ANR	1081884	Identifier	I		1081857	0					
ANR	1081885	Identifier	mouse		1081857	1					
ANR	1081886	Identifier	enable		1081857	1					
ANR	1081887	ExpressionStatement	"write ( 2 , click , strlen ( click ) )"	487:1:11083:11115	1081857	13	True				
ANR	1081888	CallExpression	"write ( 2 , click , strlen ( click ) )"		1081857	0					
ANR	1081889	Callee	write		1081857	0					
ANR	1081890	Identifier	write		1081857	0					
ANR	1081891	ArgumentList	2		1081857	1					
ANR	1081892	Argument	2		1081857	0					
ANR	1081893	PrimaryExpression	2		1081857	0					
ANR	1081894	Argument	click		1081857	1					
ANR	1081895	Identifier	click		1081857	0					
ANR	1081896	Argument	strlen ( click )		1081857	2					
ANR	1081897	CallExpression	strlen ( click )		1081857	0					
ANR	1081898	Callee	strlen		1081857	0					
ANR	1081899	Identifier	strlen		1081857	0					
ANR	1081900	ArgumentList	click		1081857	1					
ANR	1081901	Argument	click		1081857	0					
ANR	1081902	Identifier	click		1081857	0					
ANR	1081903	ReturnStatement	return enabled ;	488:1:11118:11132	1081857	14	True				
ANR	1081904	Identifier	enabled		1081857	0					
ANR	1081905	ReturnType	R_API bool		1081857	1					
ANR	1081906	Identifier	r_cons_enable_mouse		1081857	2					
ANR	1081907	ParameterList	const bool enable		1081857	3					
ANR	1081908	Parameter	const bool enable	478:31:10793:10809	1081857	0	True				
ANR	1081909	ParameterType	const bool		1081857	0					
ANR	1081910	Identifier	enable		1081857	1					
ANR	1081911	CFGEntryNode	ENTRY		1081857		True				
ANR	1081912	CFGExitNode	EXIT		1081857		True				
ANR	1081913	Symbol	strlen		1081857						
ANR	1081914	Symbol	enable		1081857						
ANR	1081915	Symbol	I		1081857						
ANR	1081916	Symbol	I . mouse		1081857						
ANR	1081917	Symbol	click		1081857						
ANR	1081918	Symbol	enabled		1081857						
ANR	1081919	Function	r_cons_new	511:0:11721:13654							
ANR	1081920	FunctionDef	r_cons_new ()		1081919	0					
ANR	1081921	CompoundStatement		511:26:11747:13654	1081919	0					
ANR	1081922	ExpressionStatement	I . refcnt ++	512:1:11750:11760	1081919	0	True				
ANR	1081923	PostIncDecOperationExpression	I . refcnt ++		1081919	0					
ANR	1081924	MemberAccess	I . refcnt		1081919	0					
ANR	1081925	Identifier	I		1081919	0					
ANR	1081926	Identifier	refcnt		1081919	1					
ANR	1081927	IncDec	++		1081919	1					
ANR	1081928	IfStatement	if ( I . refcnt != 1 )		1081919	1					
ANR	1081929	Condition	I . refcnt != 1	513:5:11767:11779	1081919	0	True				
ANR	1081930	EqualityExpression	I . refcnt != 1		1081919	0		!=			
ANR	1081931	MemberAccess	I . refcnt		1081919	0					
ANR	1081932	Identifier	I		1081919	0					
ANR	1081933	Identifier	refcnt		1081919	1					
ANR	1081934	PrimaryExpression	1		1081919	1					
ANR	1081935	CompoundStatement		3:20:34:34	1081919	1					
ANR	1081936	ReturnStatement	return & I ;	514:2:11786:11795	1081919	0	True				
ANR	1081937	UnaryOperationExpression	& I		1081919	0					
ANR	1081938	UnaryOperator	&		1081919	0					
ANR	1081939	Identifier	I		1081919	1					
ANR	1081940	ExpressionStatement	I . rgbstr = r_cons_rgb_str_off	516:1:11801:11830	1081919	2	True				
ANR	1081941	AssignmentExpression	I . rgbstr = r_cons_rgb_str_off		1081919	0		=			
ANR	1081942	MemberAccess	I . rgbstr		1081919	0					
ANR	1081943	Identifier	I		1081919	0					
ANR	1081944	Identifier	rgbstr		1081919	1					
ANR	1081945	Identifier	r_cons_rgb_str_off		1081919	1					
ANR	1081946	ExpressionStatement	I . line = r_line_new ( )	517:1:11833:11855	1081919	3	True				
ANR	1081947	AssignmentExpression	I . line = r_line_new ( )		1081919	0		=			
ANR	1081948	MemberAccess	I . line		1081919	0					
ANR	1081949	Identifier	I		1081919	0					
ANR	1081950	Identifier	line		1081919	1					
ANR	1081951	CallExpression	r_line_new ( )		1081919	1					
ANR	1081952	Callee	r_line_new		1081919	0					
ANR	1081953	Identifier	r_line_new		1081919	0					
ANR	1081954	ArgumentList			1081919	1					
ANR	1081955	ExpressionStatement	I . enable_highlight = true	518:1:11858:11883	1081919	4	True				
ANR	1081956	AssignmentExpression	I . enable_highlight = true		1081919	0		=			
ANR	1081957	MemberAccess	I . enable_highlight		1081919	0					
ANR	1081958	Identifier	I		1081919	0					
ANR	1081959	Identifier	enable_highlight		1081919	1					
ANR	1081960	Identifier	true		1081919	1					
ANR	1081961	ExpressionStatement	I . highlight = NULL	519:1:11886:11904	1081919	5	True				
ANR	1081962	AssignmentExpression	I . highlight = NULL		1081919	0		=			
ANR	1081963	MemberAccess	I . highlight		1081919	0					
ANR	1081964	Identifier	I		1081919	0					
ANR	1081965	Identifier	highlight		1081919	1					
ANR	1081966	Identifier	NULL		1081919	1					
ANR	1081967	ExpressionStatement	I . is_wine = - 1	520:1:11907:11921	1081919	6	True				
ANR	1081968	AssignmentExpression	I . is_wine = - 1		1081919	0		=			
ANR	1081969	MemberAccess	I . is_wine		1081919	0					
ANR	1081970	Identifier	I		1081919	0					
ANR	1081971	Identifier	is_wine		1081919	1					
ANR	1081972	UnaryOperationExpression	- 1		1081919	1					
ANR	1081973	UnaryOperator	-		1081919	0					
ANR	1081974	PrimaryExpression	1		1081919	1					
ANR	1081975	ExpressionStatement	I . fps = 0	521:1:11924:11933	1081919	7	True				
ANR	1081976	AssignmentExpression	I . fps = 0		1081919	0		=			
ANR	1081977	MemberAccess	I . fps		1081919	0					
ANR	1081978	Identifier	I		1081919	0					
ANR	1081979	Identifier	fps		1081919	1					
ANR	1081980	PrimaryExpression	0		1081919	1					
ANR	1081981	ExpressionStatement	I . blankline = true	522:1:11936:11954	1081919	8	True				
ANR	1081982	AssignmentExpression	I . blankline = true		1081919	0		=			
ANR	1081983	MemberAccess	I . blankline		1081919	0					
ANR	1081984	Identifier	I		1081919	0					
ANR	1081985	Identifier	blankline		1081919	1					
ANR	1081986	Identifier	true		1081919	1					
ANR	1081987	ExpressionStatement	I . teefile = NULL	523:1:11957:11973	1081919	9	True				
ANR	1081988	AssignmentExpression	I . teefile = NULL		1081919	0		=			
ANR	1081989	MemberAccess	I . teefile		1081919	0					
ANR	1081990	Identifier	I		1081919	0					
ANR	1081991	Identifier	teefile		1081919	1					
ANR	1081992	Identifier	NULL		1081919	1					
ANR	1081993	ExpressionStatement	I . fix_columns = 0	524:1:11976:11993	1081919	10	True				
ANR	1081994	AssignmentExpression	I . fix_columns = 0		1081919	0		=			
ANR	1081995	MemberAccess	I . fix_columns		1081919	0					
ANR	1081996	Identifier	I		1081919	0					
ANR	1081997	Identifier	fix_columns		1081919	1					
ANR	1081998	PrimaryExpression	0		1081919	1					
ANR	1081999	ExpressionStatement	I . fix_rows = 0	525:1:11996:12010	1081919	11	True				
ANR	1082000	AssignmentExpression	I . fix_rows = 0		1081919	0		=			
ANR	1082001	MemberAccess	I . fix_rows		1081919	0					
ANR	1082002	Identifier	I		1081919	0					
ANR	1082003	Identifier	fix_rows		1081919	1					
ANR	1082004	PrimaryExpression	0		1081919	1					
ANR	1082005	ExpressionStatement	I . mouse_event = 0	526:1:12013:12030	1081919	12	True				
ANR	1082006	AssignmentExpression	I . mouse_event = 0		1081919	0		=			
ANR	1082007	MemberAccess	I . mouse_event		1081919	0					
ANR	1082008	Identifier	I		1081919	0					
ANR	1082009	Identifier	mouse_event		1081919	1					
ANR	1082010	PrimaryExpression	0		1081919	1					
ANR	1082011	ExpressionStatement	I . force_rows = 0	527:1:12033:12049	1081919	13	True				
ANR	1082012	AssignmentExpression	I . force_rows = 0		1081919	0		=			
ANR	1082013	MemberAccess	I . force_rows		1081919	0					
ANR	1082014	Identifier	I		1081919	0					
ANR	1082015	Identifier	force_rows		1081919	1					
ANR	1082016	PrimaryExpression	0		1081919	1					
ANR	1082017	ExpressionStatement	I . force_columns = 0	528:1:12052:12071	1081919	14	True				
ANR	1082018	AssignmentExpression	I . force_columns = 0		1081919	0		=			
ANR	1082019	MemberAccess	I . force_columns		1081919	0					
ANR	1082020	Identifier	I		1081919	0					
ANR	1082021	Identifier	force_columns		1081919	1					
ANR	1082022	PrimaryExpression	0		1081919	1					
ANR	1082023	ExpressionStatement	I . event_resize = NULL	529:1:12074:12095	1081919	15	True				
ANR	1082024	AssignmentExpression	I . event_resize = NULL		1081919	0		=			
ANR	1082025	MemberAccess	I . event_resize		1081919	0					
ANR	1082026	Identifier	I		1081919	0					
ANR	1082027	Identifier	event_resize		1081919	1					
ANR	1082028	Identifier	NULL		1081919	1					
ANR	1082029	ExpressionStatement	I . event_data = NULL	530:1:12098:12117	1081919	16	True				
ANR	1082030	AssignmentExpression	I . event_data = NULL		1081919	0		=			
ANR	1082031	MemberAccess	I . event_data		1081919	0					
ANR	1082032	Identifier	I		1081919	0					
ANR	1082033	Identifier	event_data		1081919	1					
ANR	1082034	Identifier	NULL		1081919	1					
ANR	1082035	ExpressionStatement	I . noflush = false	531:1:12120:12137	1081919	17	True				
ANR	1082036	AssignmentExpression	I . noflush = false		1081919	0		=			
ANR	1082037	MemberAccess	I . noflush		1081919	0					
ANR	1082038	Identifier	I		1081919	0					
ANR	1082039	Identifier	noflush		1081919	1					
ANR	1082040	Identifier	false		1081919	1					
ANR	1082041	ExpressionStatement	I . linesleep = 0	532:1:12140:12155	1081919	18	True				
ANR	1082042	AssignmentExpression	I . linesleep = 0		1081919	0		=			
ANR	1082043	MemberAccess	I . linesleep		1081919	0					
ANR	1082044	Identifier	I		1081919	0					
ANR	1082045	Identifier	linesleep		1081919	1					
ANR	1082046	PrimaryExpression	0		1081919	1					
ANR	1082047	ExpressionStatement	I . fdin = stdin	533:1:12158:12172	1081919	19	True				
ANR	1082048	AssignmentExpression	I . fdin = stdin		1081919	0		=			
ANR	1082049	MemberAccess	I . fdin		1081919	0					
ANR	1082050	Identifier	I		1081919	0					
ANR	1082051	Identifier	fdin		1081919	1					
ANR	1082052	Identifier	stdin		1081919	1					
ANR	1082053	ExpressionStatement	I . fdout = 1	534:1:12175:12186	1081919	20	True				
ANR	1082054	AssignmentExpression	I . fdout = 1		1081919	0		=			
ANR	1082055	MemberAccess	I . fdout		1081919	0					
ANR	1082056	Identifier	I		1081919	0					
ANR	1082057	Identifier	fdout		1081919	1					
ANR	1082058	PrimaryExpression	1		1081919	1					
ANR	1082059	ExpressionStatement	I . break_lines = false	535:1:12189:12210	1081919	21	True				
ANR	1082060	AssignmentExpression	I . break_lines = false		1081919	0		=			
ANR	1082061	MemberAccess	I . break_lines		1081919	0					
ANR	1082062	Identifier	I		1081919	0					
ANR	1082063	Identifier	break_lines		1081919	1					
ANR	1082064	Identifier	false		1081919	1					
ANR	1082065	ExpressionStatement	I . lines = 0	536:1:12213:12224	1081919	22	True				
ANR	1082066	AssignmentExpression	I . lines = 0		1081919	0		=			
ANR	1082067	MemberAccess	I . lines		1081919	0					
ANR	1082068	Identifier	I		1081919	0					
ANR	1082069	Identifier	lines		1081919	1					
ANR	1082070	PrimaryExpression	0		1081919	1					
ANR	1082071	ExpressionStatement	I . context = & r_cons_context_default	538:1:12228:12263	1081919	23	True				
ANR	1082072	AssignmentExpression	I . context = & r_cons_context_default		1081919	0		=			
ANR	1082073	MemberAccess	I . context		1081919	0					
ANR	1082074	Identifier	I		1081919	0					
ANR	1082075	Identifier	context		1081919	1					
ANR	1082076	UnaryOperationExpression	& r_cons_context_default		1081919	1					
ANR	1082077	UnaryOperator	&		1081919	0					
ANR	1082078	Identifier	r_cons_context_default		1081919	1					
ANR	1082079	ExpressionStatement	"cons_context_init ( I . context , NULL )"	539:1:12266:12301	1081919	24	True				
ANR	1082080	CallExpression	"cons_context_init ( I . context , NULL )"		1081919	0					
ANR	1082081	Callee	cons_context_init		1081919	0					
ANR	1082082	Identifier	cons_context_init		1081919	0					
ANR	1082083	ArgumentList	I . context		1081919	1					
ANR	1082084	Argument	I . context		1081919	0					
ANR	1082085	MemberAccess	I . context		1081919	0					
ANR	1082086	Identifier	I		1081919	0					
ANR	1082087	Identifier	context		1081919	1					
ANR	1082088	Argument	NULL		1081919	1					
ANR	1082089	Identifier	NULL		1081919	0					
ANR	1082090	ExpressionStatement	r_cons_get_size ( & I . pagesize )	541:1:12305:12334	1081919	25	True				
ANR	1082091	CallExpression	r_cons_get_size ( & I . pagesize )		1081919	0					
ANR	1082092	Callee	r_cons_get_size		1081919	0					
ANR	1082093	Identifier	r_cons_get_size		1081919	0					
ANR	1082094	ArgumentList	& I . pagesize		1081919	1					
ANR	1082095	Argument	& I . pagesize		1081919	0					
ANR	1082096	UnaryOperationExpression	& I . pagesize		1081919	0					
ANR	1082097	UnaryOperator	&		1081919	0					
ANR	1082098	MemberAccess	I . pagesize		1081919	1					
ANR	1082099	Identifier	I		1081919	0					
ANR	1082100	Identifier	pagesize		1081919	1					
ANR	1082101	ExpressionStatement	I . num = NULL	542:1:12337:12349	1081919	26	True				
ANR	1082102	AssignmentExpression	I . num = NULL		1081919	0		=			
ANR	1082103	MemberAccess	I . num		1081919	0					
ANR	1082104	Identifier	I		1081919	0					
ANR	1082105	Identifier	num		1081919	1					
ANR	1082106	Identifier	NULL		1081919	1					
ANR	1082107	ExpressionStatement	I . null = 0	543:1:12352:12362	1081919	27	True				
ANR	1082108	AssignmentExpression	I . null = 0		1081919	0		=			
ANR	1082109	MemberAccess	I . null		1081919	0					
ANR	1082110	Identifier	I		1081919	0					
ANR	1082111	Identifier	null		1081919	1					
ANR	1082112	PrimaryExpression	0		1081919	1					
ANR	1082113	ExpressionStatement	I . ansicon = r_cons_is_ansicon ( )	545:1:12381:12413	1081919	28	True				
ANR	1082114	AssignmentExpression	I . ansicon = r_cons_is_ansicon ( )		1081919	0		=			
ANR	1082115	MemberAccess	I . ansicon		1081919	0					
ANR	1082116	Identifier	I		1081919	0					
ANR	1082117	Identifier	ansicon		1081919	1					
ANR	1082118	CallExpression	r_cons_is_ansicon ( )		1081919	1					
ANR	1082119	Callee	r_cons_is_ansicon		1081919	0					
ANR	1082120	Identifier	r_cons_is_ansicon		1081919	0					
ANR	1082121	ArgumentList			1081919	1					
ANR	1082122	IfStatement	if ( IsValidCodePage ( CP_UTF8 ) )		1081919	29					
ANR	1082123	Condition	IsValidCodePage ( CP_UTF8 )	547:5:12432:12456	1081919	0	True				
ANR	1082124	CallExpression	IsValidCodePage ( CP_UTF8 )		1081919	0					
ANR	1082125	Callee	IsValidCodePage		1081919	0					
ANR	1082126	Identifier	IsValidCodePage		1081919	0					
ANR	1082127	ArgumentList	CP_UTF8		1081919	1					
ANR	1082128	Argument	CP_UTF8		1081919	0					
ANR	1082129	Identifier	CP_UTF8		1081919	0					
ANR	1082130	CompoundStatement		37:32:711:711	1081919	1					
ANR	1082131	IfStatement	if ( ! SetConsoleOutputCP ( CP_UTF8 ) || ! SetConsoleCP ( CP_UTF8 ) )		1081919	0					
ANR	1082132	Condition	! SetConsoleOutputCP ( CP_UTF8 ) || ! SetConsoleCP ( CP_UTF8 )	548:6:12467:12522	1081919	0	True				
ANR	1082133	OrExpression	! SetConsoleOutputCP ( CP_UTF8 ) || ! SetConsoleCP ( CP_UTF8 )		1081919	0		||			
ANR	1082134	UnaryOperationExpression	! SetConsoleOutputCP ( CP_UTF8 )		1081919	0					
ANR	1082135	UnaryOperator	!		1081919	0					
ANR	1082136	CallExpression	SetConsoleOutputCP ( CP_UTF8 )		1081919	1					
ANR	1082137	Callee	SetConsoleOutputCP		1081919	0					
ANR	1082138	Identifier	SetConsoleOutputCP		1081919	0					
ANR	1082139	ArgumentList	CP_UTF8		1081919	1					
ANR	1082140	Argument	CP_UTF8		1081919	0					
ANR	1082141	Identifier	CP_UTF8		1081919	0					
ANR	1082142	UnaryOperationExpression	! SetConsoleCP ( CP_UTF8 )		1081919	1					
ANR	1082143	UnaryOperator	!		1081919	0					
ANR	1082144	CallExpression	SetConsoleCP ( CP_UTF8 )		1081919	1					
ANR	1082145	Callee	SetConsoleCP		1081919	0					
ANR	1082146	Identifier	SetConsoleCP		1081919	0					
ANR	1082147	ArgumentList	CP_UTF8		1081919	1					
ANR	1082148	Argument	CP_UTF8		1081919	0					
ANR	1082149	Identifier	CP_UTF8		1081919	0					
ANR	1082150	CompoundStatement		38:64:777:777	1081919	1					
ANR	1082151	ExpressionStatement	"r_sys_perror ( ""r_cons_new"" )"	549:3:12530:12557	1081919	0	True				
ANR	1082152	CallExpression	"r_sys_perror ( ""r_cons_new"" )"		1081919	0					
ANR	1082153	Callee	r_sys_perror		1081919	0					
ANR	1082154	Identifier	r_sys_perror		1081919	0					
ANR	1082155	ArgumentList	"""r_cons_new"""		1081919	1					
ANR	1082156	Argument	"""r_cons_new"""		1081919	0					
ANR	1082157	PrimaryExpression	"""r_cons_new"""		1081919	0					
ANR	1082158	ElseStatement	else		1081919	0					
ANR	1082159	CompoundStatement		41:8:823:823	1081919	0					
ANR	1082160	ExpressionStatement	"R_LOG_WARN ( ""UTF-8 Codepage not installed.\\n"" )"	552:2:12575:12621	1081919	0	True				
ANR	1082161	CallExpression	"R_LOG_WARN ( ""UTF-8 Codepage not installed.\\n"" )"		1081919	0					
ANR	1082162	Callee	R_LOG_WARN		1081919	0					
ANR	1082163	Identifier	R_LOG_WARN		1081919	0					
ANR	1082164	ArgumentList	"""UTF-8 Codepage not installed.\\n"""		1081919	1					
ANR	1082165	Argument	"""UTF-8 Codepage not installed.\\n"""		1081919	0					
ANR	1082166	PrimaryExpression	"""UTF-8 Codepage not installed.\\n"""		1081919	0					
ANR	1082167	ExpressionStatement	I . pager = NULL	581:1:13493:13507	1081919	30	True				
ANR	1082168	AssignmentExpression	I . pager = NULL		1081919	0		=			
ANR	1082169	MemberAccess	I . pager		1081919	0					
ANR	1082170	Identifier	I		1081919	0					
ANR	1082171	Identifier	pager		1081919	1					
ANR	1082172	Identifier	NULL		1081919	1					
ANR	1082173	ExpressionStatement	I . mouse = 0	582:1:13536:13547	1081919	31	True				
ANR	1082174	AssignmentExpression	I . mouse = 0		1081919	0		=			
ANR	1082175	MemberAccess	I . mouse		1081919	0					
ANR	1082176	Identifier	I		1081919	0					
ANR	1082177	Identifier	mouse		1081919	1					
ANR	1082178	PrimaryExpression	0		1081919	1					
ANR	1082179	ExpressionStatement	r_cons_reset ( )	583:1:13550:13565	1081919	32	True				
ANR	1082180	CallExpression	r_cons_reset ( )		1081919	0					
ANR	1082181	Callee	r_cons_reset		1081919	0					
ANR	1082182	Identifier	r_cons_reset		1081919	0					
ANR	1082183	ArgumentList			1081919	1					
ANR	1082184	ExpressionStatement	r_cons_rgb_init ( )	584:1:13568:13586	1081919	33	True				
ANR	1082185	CallExpression	r_cons_rgb_init ( )		1081919	0					
ANR	1082186	Callee	r_cons_rgb_init		1081919	0					
ANR	1082187	Identifier	r_cons_rgb_init		1081919	0					
ANR	1082188	ArgumentList			1081919	1					
ANR	1082189	ExpressionStatement	r_print_set_is_interrupted_cb ( r_cons_is_breaked )	586:1:13590:13639	1081919	34	True				
ANR	1082190	CallExpression	r_print_set_is_interrupted_cb ( r_cons_is_breaked )		1081919	0					
ANR	1082191	Callee	r_print_set_is_interrupted_cb		1081919	0					
ANR	1082192	Identifier	r_print_set_is_interrupted_cb		1081919	0					
ANR	1082193	ArgumentList	r_cons_is_breaked		1081919	1					
ANR	1082194	Argument	r_cons_is_breaked		1081919	0					
ANR	1082195	Identifier	r_cons_is_breaked		1081919	0					
ANR	1082196	ReturnStatement	return & I ;	588:1:13643:13652	1081919	35	True				
ANR	1082197	UnaryOperationExpression	& I		1081919	0					
ANR	1082198	UnaryOperator	&		1081919	0					
ANR	1082199	Identifier	I		1081919	1					
ANR	1082200	ReturnType	R_API RCons *		1081919	1					
ANR	1082201	Identifier	r_cons_new		1081919	2					
ANR	1082202	ParameterList			1081919	3					
ANR	1082203	CFGEntryNode	ENTRY		1081919		True				
ANR	1082204	CFGExitNode	EXIT		1081919		True				
ANR	1082205	Symbol	I . pager		1081919						
ANR	1082206	Symbol	I . is_wine		1081919						
ANR	1082207	Symbol	stdin		1081919						
ANR	1082208	Symbol	I . null		1081919						
ANR	1082209	Symbol	CP_UTF8		1081919						
ANR	1082210	Symbol	I . teefile		1081919						
ANR	1082211	Symbol	I		1081919						
ANR	1082212	Symbol	I . event_resize		1081919						
ANR	1082213	Symbol	SetConsoleOutputCP		1081919						
ANR	1082214	Symbol	I . mouse		1081919						
ANR	1082215	Symbol	& I		1081919						
ANR	1082216	Symbol	r_cons_is_breaked		1081919						
ANR	1082217	Symbol	I . highlight		1081919						
ANR	1082218	Symbol	r_cons_rgb_str_off		1081919						
ANR	1082219	Symbol	I . refcnt		1081919						
ANR	1082220	Symbol	I . ansicon		1081919						
ANR	1082221	Symbol	I . enable_highlight		1081919						
ANR	1082222	Symbol	I . event_data		1081919						
ANR	1082223	Symbol	I . mouse_event		1081919						
ANR	1082224	Symbol	& I . pagesize		1081919						
ANR	1082225	Symbol	I . break_lines		1081919						
ANR	1082226	Symbol	I . fix_columns		1081919						
ANR	1082227	Symbol	I . fdin		1081919						
ANR	1082228	Symbol	NULL		1081919						
ANR	1082229	Symbol	I . noflush		1081919						
ANR	1082230	Symbol	I . num		1081919						
ANR	1082231	Symbol	false		1081919						
ANR	1082232	Symbol	I . fdout		1081919						
ANR	1082233	Symbol	I . context		1081919						
ANR	1082234	Symbol	I . line		1081919						
ANR	1082235	Symbol	r_cons_is_ansicon		1081919						
ANR	1082236	Symbol	I . blankline		1081919						
ANR	1082237	Symbol	I . lines		1081919						
ANR	1082238	Symbol	I . rgbstr		1081919						
ANR	1082239	Symbol	I . fix_rows		1081919						
ANR	1082240	Symbol	I . force_columns		1081919						
ANR	1082241	Symbol	IsValidCodePage		1081919						
ANR	1082242	Symbol	true		1081919						
ANR	1082243	Symbol	r_line_new		1081919						
ANR	1082244	Symbol	I . fps		1081919						
ANR	1082245	Symbol	I . linesleep		1081919						
ANR	1082246	Symbol	& r_cons_context_default		1081919						
ANR	1082247	Symbol	SetConsoleCP		1081919						
ANR	1082248	Symbol	I . force_rows		1081919						
ANR	1082249	Function	r_cons_free	591:0:13657:13973							
ANR	1082250	FunctionDef	r_cons_free ()		1082249	0					
ANR	1082251	CompoundStatement		591:27:13684:13973	1082249	0					
ANR	1082252	ExpressionStatement	I . refcnt --	592:1:13687:13697	1082249	0	True				
ANR	1082253	PostIncDecOperationExpression	I . refcnt --		1082249	0					
ANR	1082254	MemberAccess	I . refcnt		1082249	0					
ANR	1082255	Identifier	I		1082249	0					
ANR	1082256	Identifier	refcnt		1082249	1					
ANR	1082257	IncDec	--		1082249	1					
ANR	1082258	IfStatement	if ( I . refcnt != 0 )		1082249	1					
ANR	1082259	Condition	I . refcnt != 0	593:5:13704:13716	1082249	0	True				
ANR	1082260	EqualityExpression	I . refcnt != 0		1082249	0		!=			
ANR	1082261	MemberAccess	I . refcnt		1082249	0					
ANR	1082262	Identifier	I		1082249	0					
ANR	1082263	Identifier	refcnt		1082249	1					
ANR	1082264	PrimaryExpression	0		1082249	1					
ANR	1082265	CompoundStatement		3:20:34:34	1082249	1					
ANR	1082266	ReturnStatement	return NULL ;	594:2:13723:13734	1082249	0	True				
ANR	1082267	Identifier	NULL		1082249	0					
ANR	1082268	IfStatement	if ( I . line )		1082249	2					
ANR	1082269	Condition	I . line	596:5:13744:13749	1082249	0	True				
ANR	1082270	MemberAccess	I . line		1082249	0					
ANR	1082271	Identifier	I		1082249	0					
ANR	1082272	Identifier	line		1082249	1					
ANR	1082273	CompoundStatement		6:13:67:67	1082249	1					
ANR	1082274	ExpressionStatement	r_line_free ( )	597:2:13756:13770	1082249	0	True				
ANR	1082275	CallExpression	r_line_free ( )		1082249	0					
ANR	1082276	Callee	r_line_free		1082249	0					
ANR	1082277	Identifier	r_line_free		1082249	0					
ANR	1082278	ArgumentList			1082249	1					
ANR	1082279	ExpressionStatement	I . line = NULL	598:2:13774:13787	1082249	1	True				
ANR	1082280	AssignmentExpression	I . line = NULL		1082249	0		=			
ANR	1082281	MemberAccess	I . line		1082249	0					
ANR	1082282	Identifier	I		1082249	0					
ANR	1082283	Identifier	line		1082249	1					
ANR	1082284	Identifier	NULL		1082249	1					
ANR	1082285	ExpressionStatement	R_FREE ( I . context -> buffer )	600:1:13793:13819	1082249	3	True				
ANR	1082286	CallExpression	R_FREE ( I . context -> buffer )		1082249	0					
ANR	1082287	Callee	R_FREE		1082249	0					
ANR	1082288	Identifier	R_FREE		1082249	0					
ANR	1082289	ArgumentList	I . context -> buffer		1082249	1					
ANR	1082290	Argument	I . context -> buffer		1082249	0					
ANR	1082291	PtrMemberAccess	I . context -> buffer		1082249	0					
ANR	1082292	MemberAccess	I . context		1082249	0					
ANR	1082293	Identifier	I		1082249	0					
ANR	1082294	Identifier	context		1082249	1					
ANR	1082295	Identifier	buffer		1082249	1					
ANR	1082296	ExpressionStatement	R_FREE ( I . break_word )	601:1:13822:13843	1082249	4	True				
ANR	1082297	CallExpression	R_FREE ( I . break_word )		1082249	0					
ANR	1082298	Callee	R_FREE		1082249	0					
ANR	1082299	Identifier	R_FREE		1082249	0					
ANR	1082300	ArgumentList	I . break_word		1082249	1					
ANR	1082301	Argument	I . break_word		1082249	0					
ANR	1082302	MemberAccess	I . break_word		1082249	0					
ANR	1082303	Identifier	I		1082249	0					
ANR	1082304	Identifier	break_word		1082249	1					
ANR	1082305	ExpressionStatement	cons_context_deinit ( I . context )	602:1:13846:13877	1082249	5	True				
ANR	1082306	CallExpression	cons_context_deinit ( I . context )		1082249	0					
ANR	1082307	Callee	cons_context_deinit		1082249	0					
ANR	1082308	Identifier	cons_context_deinit		1082249	0					
ANR	1082309	ArgumentList	I . context		1082249	1					
ANR	1082310	Argument	I . context		1082249	0					
ANR	1082311	MemberAccess	I . context		1082249	0					
ANR	1082312	Identifier	I		1082249	0					
ANR	1082313	Identifier	context		1082249	1					
ANR	1082314	ExpressionStatement	R_FREE ( I . context -> lastOutput )	603:1:13880:13910	1082249	6	True				
ANR	1082315	CallExpression	R_FREE ( I . context -> lastOutput )		1082249	0					
ANR	1082316	Callee	R_FREE		1082249	0					
ANR	1082317	Identifier	R_FREE		1082249	0					
ANR	1082318	ArgumentList	I . context -> lastOutput		1082249	1					
ANR	1082319	Argument	I . context -> lastOutput		1082249	0					
ANR	1082320	PtrMemberAccess	I . context -> lastOutput		1082249	0					
ANR	1082321	MemberAccess	I . context		1082249	0					
ANR	1082322	Identifier	I		1082249	0					
ANR	1082323	Identifier	context		1082249	1					
ANR	1082324	Identifier	lastOutput		1082249	1					
ANR	1082325	ExpressionStatement	I . context -> lastLength = 0	604:1:13913:13938	1082249	7	True				
ANR	1082326	AssignmentExpression	I . context -> lastLength = 0		1082249	0		=			
ANR	1082327	PtrMemberAccess	I . context -> lastLength		1082249	0					
ANR	1082328	MemberAccess	I . context		1082249	0					
ANR	1082329	Identifier	I		1082249	0					
ANR	1082330	Identifier	context		1082249	1					
ANR	1082331	Identifier	lastLength		1082249	1					
ANR	1082332	PrimaryExpression	0		1082249	1					
ANR	1082333	ExpressionStatement	R_FREE ( I . pager )	605:1:13941:13957	1082249	8	True				
ANR	1082334	CallExpression	R_FREE ( I . pager )		1082249	0					
ANR	1082335	Callee	R_FREE		1082249	0					
ANR	1082336	Identifier	R_FREE		1082249	0					
ANR	1082337	ArgumentList	I . pager		1082249	1					
ANR	1082338	Argument	I . pager		1082249	0					
ANR	1082339	MemberAccess	I . pager		1082249	0					
ANR	1082340	Identifier	I		1082249	0					
ANR	1082341	Identifier	pager		1082249	1					
ANR	1082342	ReturnStatement	return NULL ;	606:1:13960:13971	1082249	9	True				
ANR	1082343	Identifier	NULL		1082249	0					
ANR	1082344	ReturnType	R_API RCons *		1082249	1					
ANR	1082345	Identifier	r_cons_free		1082249	2					
ANR	1082346	ParameterList			1082249	3					
ANR	1082347	CFGEntryNode	ENTRY		1082249		True				
ANR	1082348	CFGExitNode	EXIT		1082249		True				
ANR	1082349	Symbol	I . context -> lastLength		1082249						
ANR	1082350	Symbol	I . pager		1082249						
ANR	1082351	Symbol	* I . context		1082249						
ANR	1082352	Symbol	NULL		1082249						
ANR	1082353	Symbol	* I		1082249						
ANR	1082354	Symbol	I . context -> buffer		1082249						
ANR	1082355	Symbol	I . break_word		1082249						
ANR	1082356	Symbol	I . context -> lastOutput		1082249						
ANR	1082357	Symbol	I		1082249						
ANR	1082358	Symbol	I . refcnt		1082249						
ANR	1082359	Symbol	I . context		1082249						
ANR	1082360	Symbol	I . line		1082249						
ANR	1082361	Function	palloc	610:0:14000:14800							
ANR	1082362	FunctionDef	palloc (int moar)		1082361	0					
ANR	1082363	CompoundStatement		610:29:14029:14800	1082361	0					
ANR	1082364	IdentifierDeclStatement	void * temp ;	611:1:14032:14042	1082361	0	True				
ANR	1082365	IdentifierDecl	* temp		1082361	0					
ANR	1082366	IdentifierDeclType	void *		1082361	0					
ANR	1082367	Identifier	temp		1082361	1					
ANR	1082368	IfStatement	if ( moar <= 0 )		1082361	1					
ANR	1082369	Condition	moar <= 0	612:5:14049:14057	1082361	0	True				
ANR	1082370	RelationalExpression	moar <= 0		1082361	0		<=			
ANR	1082371	Identifier	moar		1082361	0					
ANR	1082372	PrimaryExpression	0		1082361	1					
ANR	1082373	CompoundStatement		3:16:30:30	1082361	1					
ANR	1082374	ReturnStatement	return false ;	613:2:14064:14076	1082361	0	True				
ANR	1082375	Identifier	false		1082361	0					
ANR	1082376	IfStatement	if ( ! I . context -> buffer )		1082361	2					
ANR	1082377	Condition	! I . context -> buffer	615:5:14086:14103	1082361	0	True				
ANR	1082378	UnaryOperationExpression	! I . context -> buffer		1082361	0					
ANR	1082379	UnaryOperator	!		1082361	0					
ANR	1082380	PtrMemberAccess	I . context -> buffer		1082361	1					
ANR	1082381	MemberAccess	I . context		1082361	0					
ANR	1082382	Identifier	I		1082361	0					
ANR	1082383	Identifier	context		1082361	1					
ANR	1082384	Identifier	buffer		1082361	1					
ANR	1082385	CompoundStatement		7:2:80:90	1082361	1					
ANR	1082386	IdentifierDeclStatement	int new_sz ;	616:2:14110:14120	1082361	0	True				
ANR	1082387	IdentifierDecl	new_sz		1082361	0					
ANR	1082388	IdentifierDeclType	int		1082361	0					
ANR	1082389	Identifier	new_sz		1082361	1					
ANR	1082390	IfStatement	if ( ( INT_MAX - MOAR ) < moar )		1082361	1					
ANR	1082391	Condition	( INT_MAX - MOAR ) < moar	617:6:14128:14150	1082361	0	True				
ANR	1082392	RelationalExpression	( INT_MAX - MOAR ) < moar		1082361	0		<			
ANR	1082393	AdditiveExpression	INT_MAX - MOAR		1082361	0		-			
ANR	1082394	Identifier	INT_MAX		1082361	0					
ANR	1082395	Identifier	MOAR		1082361	1					
ANR	1082396	Identifier	moar		1082361	1					
ANR	1082397	CompoundStatement		8:31:123:123	1082361	1					
ANR	1082398	ReturnStatement	return false ;	618:3:14158:14170	1082361	0	True				
ANR	1082399	Identifier	false		1082361	0					
ANR	1082400	ExpressionStatement	new_sz = moar + MOAR	620:2:14178:14198	1082361	2	True				
ANR	1082401	AssignmentExpression	new_sz = moar + MOAR		1082361	0		=			
ANR	1082402	Identifier	new_sz		1082361	0					
ANR	1082403	AdditiveExpression	moar + MOAR		1082361	1		+			
ANR	1082404	Identifier	moar		1082361	0					
ANR	1082405	Identifier	MOAR		1082361	1					
ANR	1082406	ExpressionStatement	"temp = calloc ( 1 , new_sz )"	621:2:14202:14227	1082361	3	True				
ANR	1082407	AssignmentExpression	"temp = calloc ( 1 , new_sz )"		1082361	0		=			
ANR	1082408	Identifier	temp		1082361	0					
ANR	1082409	CallExpression	"calloc ( 1 , new_sz )"		1082361	1					
ANR	1082410	Callee	calloc		1082361	0					
ANR	1082411	Identifier	calloc		1082361	0					
ANR	1082412	ArgumentList	1		1082361	1					
ANR	1082413	Argument	1		1082361	0					
ANR	1082414	PrimaryExpression	1		1082361	0					
ANR	1082415	Argument	new_sz		1082361	1					
ANR	1082416	Identifier	new_sz		1082361	0					
ANR	1082417	IfStatement	if ( temp )		1082361	4					
ANR	1082418	Condition	temp	622:6:14235:14238	1082361	0	True				
ANR	1082419	Identifier	temp		1082361	0					
ANR	1082420	CompoundStatement		13:12:211:211	1082361	1					
ANR	1082421	ExpressionStatement	I . context -> buffer_sz = new_sz	623:3:14246:14275	1082361	0	True				
ANR	1082422	AssignmentExpression	I . context -> buffer_sz = new_sz		1082361	0		=			
ANR	1082423	PtrMemberAccess	I . context -> buffer_sz		1082361	0					
ANR	1082424	MemberAccess	I . context		1082361	0					
ANR	1082425	Identifier	I		1082361	0					
ANR	1082426	Identifier	context		1082361	1					
ANR	1082427	Identifier	buffer_sz		1082361	1					
ANR	1082428	Identifier	new_sz		1082361	1					
ANR	1082429	ExpressionStatement	I . context -> buffer = temp	624:3:14280:14304	1082361	1	True				
ANR	1082430	AssignmentExpression	I . context -> buffer = temp		1082361	0		=			
ANR	1082431	PtrMemberAccess	I . context -> buffer		1082361	0					
ANR	1082432	MemberAccess	I . context		1082361	0					
ANR	1082433	Identifier	I		1082361	0					
ANR	1082434	Identifier	context		1082361	1					
ANR	1082435	Identifier	buffer		1082361	1					
ANR	1082436	Identifier	temp		1082361	1					
ANR	1082437	ExpressionStatement	I . context -> buffer [ 0 ] = '\\0'	625:3:14309:14336	1082361	2	True				
ANR	1082438	AssignmentExpression	I . context -> buffer [ 0 ] = '\\0'		1082361	0		=			
ANR	1082439	ArrayIndexing	I . context -> buffer [ 0 ]		1082361	0					
ANR	1082440	PtrMemberAccess	I . context -> buffer		1082361	0					
ANR	1082441	MemberAccess	I . context		1082361	0					
ANR	1082442	Identifier	I		1082361	0					
ANR	1082443	Identifier	context		1082361	1					
ANR	1082444	Identifier	buffer		1082361	1					
ANR	1082445	PrimaryExpression	0		1082361	1					
ANR	1082446	PrimaryExpression	'\\0'		1082361	1					
ANR	1082447	ElseStatement	else		1082361	0					
ANR	1082448	IfStatement	if ( moar + I . context -> buffer_len > I . context -> buffer_sz )		1082361	0					
ANR	1082449	Condition	moar + I . context -> buffer_len > I . context -> buffer_sz	627:12:14354:14404	1082361	0	True				
ANR	1082450	RelationalExpression	moar + I . context -> buffer_len > I . context -> buffer_sz		1082361	0		>			
ANR	1082451	AdditiveExpression	moar + I . context -> buffer_len		1082361	0		+			
ANR	1082452	Identifier	moar		1082361	0					
ANR	1082453	PtrMemberAccess	I . context -> buffer_len		1082361	1					
ANR	1082454	MemberAccess	I . context		1082361	0					
ANR	1082455	Identifier	I		1082361	0					
ANR	1082456	Identifier	context		1082361	1					
ANR	1082457	Identifier	buffer_len		1082361	1					
ANR	1082458	PtrMemberAccess	I . context -> buffer_sz		1082361	1					
ANR	1082459	MemberAccess	I . context		1082361	0					
ANR	1082460	Identifier	I		1082361	0					
ANR	1082461	Identifier	context		1082361	1					
ANR	1082462	Identifier	buffer_sz		1082361	1					
ANR	1082463	CompoundStatement		20:2:401:441	1082361	1					
ANR	1082464	IdentifierDeclStatement	char * new_buffer ;	628:2:14411:14427	1082361	0	True				
ANR	1082465	IdentifierDecl	* new_buffer		1082361	0					
ANR	1082466	IdentifierDeclType	char *		1082361	0					
ANR	1082467	Identifier	new_buffer		1082361	1					
ANR	1082468	IdentifierDeclStatement	int old_buffer_sz = I . context -> buffer_sz ;	629:2:14431:14471	1082361	1	True				
ANR	1082469	IdentifierDecl	old_buffer_sz = I . context -> buffer_sz		1082361	0					
ANR	1082470	IdentifierDeclType	int		1082361	0					
ANR	1082471	Identifier	old_buffer_sz		1082361	1					
ANR	1082472	AssignmentExpression	old_buffer_sz = I . context -> buffer_sz		1082361	2		=			
ANR	1082473	Identifier	old_buffer_sz		1082361	0					
ANR	1082474	PtrMemberAccess	I . context -> buffer_sz		1082361	1					
ANR	1082475	MemberAccess	I . context		1082361	0					
ANR	1082476	Identifier	I		1082361	0					
ANR	1082477	Identifier	context		1082361	1					
ANR	1082478	Identifier	buffer_sz		1082361	1					
ANR	1082479	IfStatement	if ( ( INT_MAX - MOAR - moar ) < I . context -> buffer_sz )		1082361	2					
ANR	1082480	Condition	( INT_MAX - MOAR - moar ) < I . context -> buffer_sz	630:6:14479:14524	1082361	0	True				
ANR	1082481	RelationalExpression	( INT_MAX - MOAR - moar ) < I . context -> buffer_sz		1082361	0		<			
ANR	1082482	AdditiveExpression	INT_MAX - MOAR - moar		1082361	0		-			
ANR	1082483	Identifier	INT_MAX		1082361	0					
ANR	1082484	AdditiveExpression	MOAR - moar		1082361	1		-			
ANR	1082485	Identifier	MOAR		1082361	0					
ANR	1082486	Identifier	moar		1082361	1					
ANR	1082487	PtrMemberAccess	I . context -> buffer_sz		1082361	1					
ANR	1082488	MemberAccess	I . context		1082361	0					
ANR	1082489	Identifier	I		1082361	0					
ANR	1082490	Identifier	context		1082361	1					
ANR	1082491	Identifier	buffer_sz		1082361	1					
ANR	1082492	CompoundStatement		21:54:497:497	1082361	1					
ANR	1082493	ReturnStatement	return false ;	631:3:14532:14544	1082361	0	True				
ANR	1082494	Identifier	false		1082361	0					
ANR	1082495	ExpressionStatement	I . context -> buffer_sz += moar + MOAR	633:2:14552:14587	1082361	3	True				
ANR	1082496	AssignmentExpression	I . context -> buffer_sz += moar + MOAR		1082361	0		+=			
ANR	1082497	PtrMemberAccess	I . context -> buffer_sz		1082361	0					
ANR	1082498	MemberAccess	I . context		1082361	0					
ANR	1082499	Identifier	I		1082361	0					
ANR	1082500	Identifier	context		1082361	1					
ANR	1082501	Identifier	buffer_sz		1082361	1					
ANR	1082502	AdditiveExpression	moar + MOAR		1082361	1		+			
ANR	1082503	Identifier	moar		1082361	0					
ANR	1082504	Identifier	MOAR		1082361	1					
ANR	1082505	ExpressionStatement	"new_buffer = realloc ( I . context -> buffer , I . context -> buffer_sz )"	634:2:14591:14653	1082361	4	True				
ANR	1082506	AssignmentExpression	"new_buffer = realloc ( I . context -> buffer , I . context -> buffer_sz )"		1082361	0		=			
ANR	1082507	Identifier	new_buffer		1082361	0					
ANR	1082508	CallExpression	"realloc ( I . context -> buffer , I . context -> buffer_sz )"		1082361	1					
ANR	1082509	Callee	realloc		1082361	0					
ANR	1082510	Identifier	realloc		1082361	0					
ANR	1082511	ArgumentList	I . context -> buffer		1082361	1					
ANR	1082512	Argument	I . context -> buffer		1082361	0					
ANR	1082513	PtrMemberAccess	I . context -> buffer		1082361	0					
ANR	1082514	MemberAccess	I . context		1082361	0					
ANR	1082515	Identifier	I		1082361	0					
ANR	1082516	Identifier	context		1082361	1					
ANR	1082517	Identifier	buffer		1082361	1					
ANR	1082518	Argument	I . context -> buffer_sz		1082361	1					
ANR	1082519	PtrMemberAccess	I . context -> buffer_sz		1082361	0					
ANR	1082520	MemberAccess	I . context		1082361	0					
ANR	1082521	Identifier	I		1082361	0					
ANR	1082522	Identifier	context		1082361	1					
ANR	1082523	Identifier	buffer_sz		1082361	1					
ANR	1082524	IfStatement	if ( new_buffer )		1082361	5					
ANR	1082525	Condition	new_buffer	635:6:14661:14670	1082361	0	True				
ANR	1082526	Identifier	new_buffer		1082361	0					
ANR	1082527	CompoundStatement		26:18:643:643	1082361	1					
ANR	1082528	ExpressionStatement	I . context -> buffer = new_buffer	636:3:14678:14708	1082361	0	True				
ANR	1082529	AssignmentExpression	I . context -> buffer = new_buffer		1082361	0		=			
ANR	1082530	PtrMemberAccess	I . context -> buffer		1082361	0					
ANR	1082531	MemberAccess	I . context		1082361	0					
ANR	1082532	Identifier	I		1082361	0					
ANR	1082533	Identifier	context		1082361	1					
ANR	1082534	Identifier	buffer		1082361	1					
ANR	1082535	Identifier	new_buffer		1082361	1					
ANR	1082536	ElseStatement	else		1082361	0					
ANR	1082537	CompoundStatement		28:9:689:689	1082361	0					
ANR	1082538	ExpressionStatement	I . context -> buffer_sz = old_buffer_sz	638:3:14724:14760	1082361	0	True				
ANR	1082539	AssignmentExpression	I . context -> buffer_sz = old_buffer_sz		1082361	0		=			
ANR	1082540	PtrMemberAccess	I . context -> buffer_sz		1082361	0					
ANR	1082541	MemberAccess	I . context		1082361	0					
ANR	1082542	Identifier	I		1082361	0					
ANR	1082543	Identifier	context		1082361	1					
ANR	1082544	Identifier	buffer_sz		1082361	1					
ANR	1082545	Identifier	old_buffer_sz		1082361	1					
ANR	1082546	ReturnStatement	return false ;	639:3:14765:14777	1082361	1	True				
ANR	1082547	Identifier	false		1082361	0					
ANR	1082548	ReturnStatement	return true ;	642:1:14787:14798	1082361	3	True				
ANR	1082549	Identifier	true		1082361	0					
ANR	1082550	ReturnType	static bool		1082361	1					
ANR	1082551	Identifier	palloc		1082361	2					
ANR	1082552	ParameterList	int moar		1082361	3					
ANR	1082553	Parameter	int moar	610:19:14019:14026	1082361	0	True				
ANR	1082554	ParameterType	int		1082361	0					
ANR	1082555	Identifier	moar		1082361	1					
ANR	1082556	CFGEntryNode	ENTRY		1082361		True				
ANR	1082557	CFGExitNode	EXIT		1082361		True				
ANR	1082558	Symbol	moar		1082361						
ANR	1082559	Symbol	* * I . context		1082361						
ANR	1082560	Symbol	temp		1082361						
ANR	1082561	Symbol	* I . context -> buffer		1082361						
ANR	1082562	Symbol	* * I		1082361						
ANR	1082563	Symbol	I . context -> buffer_len		1082361						
ANR	1082564	Symbol	false		1082361						
ANR	1082565	Symbol	I		1082361						
ANR	1082566	Symbol	I . context		1082361						
ANR	1082567	Symbol	calloc		1082361						
ANR	1082568	Symbol	realloc		1082361						
ANR	1082569	Symbol	old_buffer_sz		1082361						
ANR	1082570	Symbol	* I . context		1082361						
ANR	1082571	Symbol	* I		1082361						
ANR	1082572	Symbol	I . context -> buffer_sz		1082361						
ANR	1082573	Symbol	I . context -> buffer		1082361						
ANR	1082574	Symbol	MOAR		1082361						
ANR	1082575	Symbol	INT_MAX		1082361						
ANR	1082576	Symbol	true		1082361						
ANR	1082577	Symbol	new_buffer		1082361						
ANR	1082578	Symbol	new_sz		1082361						
ANR	1082579	Function	r_cons_eof	645:0:14803:14851							
ANR	1082580	FunctionDef	r_cons_eof ()		1082579	0					
ANR	1082581	CompoundStatement		645:23:14826:14851	1082579	0					
ANR	1082582	ReturnStatement	return feof ( I . fdin ) ;	646:1:14829:14849	1082579	0	True				
ANR	1082583	CallExpression	feof ( I . fdin )		1082579	0					
ANR	1082584	Callee	feof		1082579	0					
ANR	1082585	Identifier	feof		1082579	0					
ANR	1082586	ArgumentList	I . fdin		1082579	1					
ANR	1082587	Argument	I . fdin		1082579	0					
ANR	1082588	MemberAccess	I . fdin		1082579	0					
ANR	1082589	Identifier	I		1082579	0					
ANR	1082590	Identifier	fdin		1082579	1					
ANR	1082591	ReturnType	R_API int		1082579	1					
ANR	1082592	Identifier	r_cons_eof		1082579	2					
ANR	1082593	ParameterList			1082579	3					
ANR	1082594	CFGEntryNode	ENTRY		1082579		True				
ANR	1082595	CFGExitNode	EXIT		1082579		True				
ANR	1082596	Symbol	I . fdin		1082579						
ANR	1082597	Symbol	I		1082579						
ANR	1082598	Symbol	feof		1082579						
ANR	1082599	Function	r_cons_gotoxy	649:0:14854:14992							
ANR	1082600	FunctionDef	"r_cons_gotoxy (int x , int y)"		1082599	0					
ANR	1082601	CompoundStatement		649:39:14893:14992	1082599	0					
ANR	1082602	ExpressionStatement	"r_cons_w32_gotoxy ( 1 , x , y )"	651:1:14912:14939	1082599	0	True				
ANR	1082603	CallExpression	"r_cons_w32_gotoxy ( 1 , x , y )"		1082599	0					
ANR	1082604	Callee	r_cons_w32_gotoxy		1082599	0					
ANR	1082605	Identifier	r_cons_w32_gotoxy		1082599	0					
ANR	1082606	ArgumentList	1		1082599	1					
ANR	1082607	Argument	1		1082599	0					
ANR	1082608	PrimaryExpression	1		1082599	0					
ANR	1082609	Argument	x		1082599	1					
ANR	1082610	Identifier	x		1082599	0					
ANR	1082611	Argument	y		1082599	2					
ANR	1082612	Identifier	y		1082599	0					
ANR	1082613	ReturnType	R_API void		1082599	1					
ANR	1082614	Identifier	r_cons_gotoxy		1082599	2					
ANR	1082615	ParameterList	"int x , int y"		1082599	3					
ANR	1082616	Parameter	int x	649:25:14879:14883	1082599	0	True				
ANR	1082617	ParameterType	int		1082599	0					
ANR	1082618	Identifier	x		1082599	1					
ANR	1082619	Parameter	int y	649:32:14886:14890	1082599	1	True				
ANR	1082620	ParameterType	int		1082599	0					
ANR	1082621	Identifier	y		1082599	1					
ANR	1082622	CFGEntryNode	ENTRY		1082599		True				
ANR	1082623	CFGExitNode	EXIT		1082599		True				
ANR	1082624	Symbol	x		1082599						
ANR	1082625	Symbol	y		1082599						
ANR	1082626	Function	r_cons_print_clear	657:0:14995:15066							
ANR	1082627	FunctionDef	r_cons_print_clear ()		1082626	0					
ANR	1082628	CompoundStatement		657:32:15027:15066	1082626	0					
ANR	1082629	ExpressionStatement	"r_cons_strcat ( ""\\x1b[0;0H\\x1b[0m"" )"	658:1:15030:15064	1082626	0	True				
ANR	1082630	CallExpression	"r_cons_strcat ( ""\\x1b[0;0H\\x1b[0m"" )"		1082626	0					
ANR	1082631	Callee	r_cons_strcat		1082626	0					
ANR	1082632	Identifier	r_cons_strcat		1082626	0					
ANR	1082633	ArgumentList	"""\\x1b[0;0H\\x1b[0m"""		1082626	1					
ANR	1082634	Argument	"""\\x1b[0;0H\\x1b[0m"""		1082626	0					
ANR	1082635	PrimaryExpression	"""\\x1b[0;0H\\x1b[0m"""		1082626	0					
ANR	1082636	ReturnType	R_API void		1082626	1					
ANR	1082637	Identifier	r_cons_print_clear		1082626	2					
ANR	1082638	ParameterList			1082626	3					
ANR	1082639	CFGEntryNode	ENTRY		1082626		True				
ANR	1082640	CFGExitNode	EXIT		1082626		True				
ANR	1082641	Function	r_cons_fill_line	661:0:15069:15353							
ANR	1082642	FunctionDef	r_cons_fill_line ()		1082641	0					
ANR	1082643	CompoundStatement		661:30:15099:15353	1082641	0					
ANR	1082644	IdentifierDeclStatement	"char * p , white [ 1024 ] ;"	662:1:15102:15122	1082641	0	True				
ANR	1082645	IdentifierDecl	* p		1082641	0					
ANR	1082646	IdentifierDeclType	char *		1082641	0					
ANR	1082647	Identifier	p		1082641	1					
ANR	1082648	IdentifierDecl	white [ 1024 ]		1082641	1					
ANR	1082649	IdentifierDeclType	char [ 1024 ]		1082641	0					
ANR	1082650	Identifier	white		1082641	1					
ANR	1082651	PrimaryExpression	1024		1082641	2					
ANR	1082652	IdentifierDeclStatement	int cols = I . columns - 1 ;	663:1:15125:15149	1082641	1	True				
ANR	1082653	IdentifierDecl	cols = I . columns - 1		1082641	0					
ANR	1082654	IdentifierDeclType	int		1082641	0					
ANR	1082655	Identifier	cols		1082641	1					
ANR	1082656	AssignmentExpression	cols = I . columns - 1		1082641	2		=			
ANR	1082657	Identifier	cols		1082641	0					
ANR	1082658	AdditiveExpression	I . columns - 1		1082641	1		-			
ANR	1082659	MemberAccess	I . columns		1082641	0					
ANR	1082660	Identifier	I		1082641	0					
ANR	1082661	Identifier	columns		1082641	1					
ANR	1082662	PrimaryExpression	1		1082641	1					
ANR	1082663	IfStatement	if ( cols < 1 )		1082641	2					
ANR	1082664	Condition	cols < 1	664:5:15156:15163	1082641	0	True				
ANR	1082665	RelationalExpression	cols < 1		1082641	0		<			
ANR	1082666	Identifier	cols		1082641	0					
ANR	1082667	PrimaryExpression	1		1082641	1					
ANR	1082668	CompoundStatement		4:15:66:66	1082641	1					
ANR	1082669	ReturnStatement	return ;	665:2:15170:15176	1082641	0	True				
ANR	1082670	ExpressionStatement	p = ( cols >= sizeof ( white ) ) ? malloc ( cols + 1 ) : white	667:1:15182:15240	1082641	3	True				
ANR	1082671	AssignmentExpression	p = ( cols >= sizeof ( white ) ) ? malloc ( cols + 1 ) : white		1082641	0		=			
ANR	1082672	Identifier	p		1082641	0					
ANR	1082673	ConditionalExpression	( cols >= sizeof ( white ) ) ? malloc ( cols + 1 ) : white		1082641	1					
ANR	1082674	Condition	cols >= sizeof ( white )		1082641	0					
ANR	1082675	RelationalExpression	cols >= sizeof ( white )		1082641	0		>=			
ANR	1082676	Identifier	cols		1082641	0					
ANR	1082677	SizeofExpression	sizeof ( white )		1082641	1					
ANR	1082678	Sizeof	sizeof		1082641	0					
ANR	1082679	SizeofOperand	white		1082641	1					
ANR	1082680	CallExpression	malloc ( cols + 1 )		1082641	1					
ANR	1082681	Callee	malloc		1082641	0					
ANR	1082682	Identifier	malloc		1082641	0					
ANR	1082683	ArgumentList	cols + 1		1082641	1					
ANR	1082684	Argument	cols + 1		1082641	0					
ANR	1082685	AdditiveExpression	cols + 1		1082641	0		+			
ANR	1082686	Identifier	cols		1082641	0					
ANR	1082687	PrimaryExpression	1		1082641	1					
ANR	1082688	Identifier	white		1082641	2					
ANR	1082689	IfStatement	if ( p )		1082641	4					
ANR	1082690	Condition	p	669:5:15247:15247	1082641	0	True				
ANR	1082691	Identifier	p		1082641	0					
ANR	1082692	CompoundStatement		9:8:150:150	1082641	1					
ANR	1082693	ExpressionStatement	"memset ( p , ' ' , cols )"	670:2:15254:15275	1082641	0	True				
ANR	1082694	CallExpression	"memset ( p , ' ' , cols )"		1082641	0					
ANR	1082695	Callee	memset		1082641	0					
ANR	1082696	Identifier	memset		1082641	0					
ANR	1082697	ArgumentList	p		1082641	1					
ANR	1082698	Argument	p		1082641	0					
ANR	1082699	Identifier	p		1082641	0					
ANR	1082700	Argument	' '		1082641	1					
ANR	1082701	PrimaryExpression	' '		1082641	0					
ANR	1082702	Argument	cols		1082641	2					
ANR	1082703	Identifier	cols		1082641	0					
ANR	1082704	ExpressionStatement	p [ cols ] = 0	671:2:15279:15290	1082641	1	True				
ANR	1082705	AssignmentExpression	p [ cols ] = 0		1082641	0		=			
ANR	1082706	ArrayIndexing	p [ cols ]		1082641	0					
ANR	1082707	Identifier	p		1082641	0					
ANR	1082708	Identifier	cols		1082641	1					
ANR	1082709	PrimaryExpression	0		1082641	1					
ANR	1082710	ExpressionStatement	r_cons_strcat ( p )	672:2:15294:15311	1082641	2	True				
ANR	1082711	CallExpression	r_cons_strcat ( p )		1082641	0					
ANR	1082712	Callee	r_cons_strcat		1082641	0					
ANR	1082713	Identifier	r_cons_strcat		1082641	0					
ANR	1082714	ArgumentList	p		1082641	1					
ANR	1082715	Argument	p		1082641	0					
ANR	1082716	Identifier	p		1082641	0					
ANR	1082717	IfStatement	if ( white != p )		1082641	3					
ANR	1082718	Condition	white != p	673:6:15319:15328	1082641	0	True				
ANR	1082719	EqualityExpression	white != p		1082641	0		!=			
ANR	1082720	Identifier	white		1082641	0					
ANR	1082721	Identifier	p		1082641	1					
ANR	1082722	CompoundStatement		13:18:231:231	1082641	1					
ANR	1082723	ExpressionStatement	free ( p )	674:3:15336:15344	1082641	0	True				
ANR	1082724	CallExpression	free ( p )		1082641	0					
ANR	1082725	Callee	free		1082641	0					
ANR	1082726	Identifier	free		1082641	0					
ANR	1082727	ArgumentList	p		1082641	1					
ANR	1082728	Argument	p		1082641	0					
ANR	1082729	Identifier	p		1082641	0					
ANR	1082730	ReturnType	R_API void		1082641	1					
ANR	1082731	Identifier	r_cons_fill_line		1082641	2					
ANR	1082732	ParameterList			1082641	3					
ANR	1082733	CFGEntryNode	ENTRY		1082641		True				
ANR	1082734	CFGExitNode	EXIT		1082641		True				
ANR	1082735	Symbol	p		1082641						
ANR	1082736	Symbol	malloc		1082641						
ANR	1082737	Symbol	white		1082641						
ANR	1082738	Symbol	* cols		1082641						
ANR	1082739	Symbol	I . columns		1082641						
ANR	1082740	Symbol	I		1082641						
ANR	1082741	Symbol	* p		1082641						
ANR	1082742	Symbol	cols		1082641						
ANR	1082743	Function	r_cons_clear_line	679:0:15356:15917							
ANR	1082744	FunctionDef	r_cons_clear_line (int std_err)		1082743	0					
ANR	1082745	CompoundStatement		679:42:15398:15917	1082743	0					
ANR	1082746	IfStatement	if ( I . ansicon )		1082743	0					
ANR	1082747	Condition	I . ansicon	681:5:15421:15429	1082743	0	True				
ANR	1082748	MemberAccess	I . ansicon		1082743	0					
ANR	1082749	Identifier	I		1082743	0					
ANR	1082750	Identifier	ansicon		1082743	1					
ANR	1082751	CompoundStatement		3:16:33:33	1082743	1					
ANR	1082752	ExpressionStatement	"fprintf ( std_err ? stderr : stdout , ""%s"" , R_CONS_CLEAR_LINE )"	682:2:15436:15493	1082743	0	True				
ANR	1082753	CallExpression	"fprintf ( std_err ? stderr : stdout , ""%s"" , R_CONS_CLEAR_LINE )"		1082743	0					
ANR	1082754	Callee	fprintf		1082743	0					
ANR	1082755	Identifier	fprintf		1082743	0					
ANR	1082756	ArgumentList	std_err ? stderr : stdout		1082743	1					
ANR	1082757	Argument	std_err ? stderr : stdout		1082743	0					
ANR	1082758	ConditionalExpression	std_err ? stderr : stdout		1082743	0					
ANR	1082759	Condition	std_err		1082743	0					
ANR	1082760	Identifier	std_err		1082743	0					
ANR	1082761	Identifier	stderr		1082743	1					
ANR	1082762	Identifier	stdout		1082743	2					
ANR	1082763	Argument	"""%s"""		1082743	1					
ANR	1082764	PrimaryExpression	"""%s"""		1082743	0					
ANR	1082765	Argument	R_CONS_CLEAR_LINE		1082743	2					
ANR	1082766	Identifier	R_CONS_CLEAR_LINE		1082743	0					
ANR	1082767	ElseStatement	else		1082743	0					
ANR	1082768	CompoundStatement		6:2:108:124	1082743	0					
ANR	1082769	IdentifierDeclStatement	char white [ 1024 ] ;	684:2:15507:15523	1082743	0	True				
ANR	1082770	IdentifierDecl	white [ 1024 ]		1082743	0					
ANR	1082771	IdentifierDeclType	char [ 1024 ]		1082743	0					
ANR	1082772	Identifier	white		1082743	1					
ANR	1082773	PrimaryExpression	1024		1082743	2					
ANR	1082774	ExpressionStatement	"memset ( & white , ' ' , sizeof ( white ) )"	685:2:15527:15563	1082743	1	True				
ANR	1082775	CallExpression	"memset ( & white , ' ' , sizeof ( white ) )"		1082743	0					
ANR	1082776	Callee	memset		1082743	0					
ANR	1082777	Identifier	memset		1082743	0					
ANR	1082778	ArgumentList	& white		1082743	1					
ANR	1082779	Argument	& white		1082743	0					
ANR	1082780	UnaryOperationExpression	& white		1082743	0					
ANR	1082781	UnaryOperator	&		1082743	0					
ANR	1082782	Identifier	white		1082743	1					
ANR	1082783	Argument	' '		1082743	1					
ANR	1082784	PrimaryExpression	' '		1082743	0					
ANR	1082785	Argument	sizeof ( white )		1082743	2					
ANR	1082786	SizeofExpression	sizeof ( white )		1082743	0					
ANR	1082787	Sizeof	sizeof		1082743	0					
ANR	1082788	SizeofOperand	white		1082743	1					
ANR	1082789	IfStatement	if ( I . columns > 0 && I . columns < sizeof ( white ) )		1082743	2					
ANR	1082790	Condition	I . columns > 0 && I . columns < sizeof ( white )	686:6:15571:15613	1082743	0	True				
ANR	1082791	AndExpression	I . columns > 0 && I . columns < sizeof ( white )		1082743	0		&&			
ANR	1082792	RelationalExpression	I . columns > 0		1082743	0		>			
ANR	1082793	MemberAccess	I . columns		1082743	0					
ANR	1082794	Identifier	I		1082743	0					
ANR	1082795	Identifier	columns		1082743	1					
ANR	1082796	PrimaryExpression	0		1082743	1					
ANR	1082797	RelationalExpression	I . columns < sizeof ( white )		1082743	1		<			
ANR	1082798	MemberAccess	I . columns		1082743	0					
ANR	1082799	Identifier	I		1082743	0					
ANR	1082800	Identifier	columns		1082743	1					
ANR	1082801	SizeofExpression	sizeof ( white )		1082743	1					
ANR	1082802	Sizeof	sizeof		1082743	0					
ANR	1082803	SizeofOperand	white		1082743	1					
ANR	1082804	CompoundStatement		8:51:217:217	1082743	1					
ANR	1082805	ExpressionStatement	white [ I . columns - 1 ] = 0	687:3:15621:15645	1082743	0	True				
ANR	1082806	AssignmentExpression	white [ I . columns - 1 ] = 0		1082743	0		=			
ANR	1082807	ArrayIndexing	white [ I . columns - 1 ]		1082743	0					
ANR	1082808	Identifier	white		1082743	0					
ANR	1082809	AdditiveExpression	I . columns - 1		1082743	1		-			
ANR	1082810	MemberAccess	I . columns		1082743	0					
ANR	1082811	Identifier	I		1082743	0					
ANR	1082812	Identifier	columns		1082743	1					
ANR	1082813	PrimaryExpression	1		1082743	1					
ANR	1082814	PrimaryExpression	0		1082743	1					
ANR	1082815	ElseStatement	else		1082743	0					
ANR	1082816	IfStatement	if ( I . columns == 0 )		1082743	0					
ANR	1082817	Condition	I . columns == 0	688:13:15660:15673	1082743	0	True				
ANR	1082818	EqualityExpression	I . columns == 0		1082743	0		==			
ANR	1082819	MemberAccess	I . columns		1082743	0					
ANR	1082820	Identifier	I		1082743	0					
ANR	1082821	Identifier	columns		1082743	1					
ANR	1082822	PrimaryExpression	0		1082743	1					
ANR	1082823	CompoundStatement		10:29:277:277	1082743	1					
ANR	1082824	ExpressionStatement	white [ 0 ] = 0	689:3:15681:15693	1082743	0	True				
ANR	1082825	AssignmentExpression	white [ 0 ] = 0		1082743	0		=			
ANR	1082826	ArrayIndexing	white [ 0 ]		1082743	0					
ANR	1082827	Identifier	white		1082743	0					
ANR	1082828	PrimaryExpression	0		1082743	1					
ANR	1082829	PrimaryExpression	0		1082743	1					
ANR	1082830	ElseStatement	else		1082743	0					
ANR	1082831	CompoundStatement		12:9:305:305	1082743	0					
ANR	1082832	ExpressionStatement	white [ sizeof ( white ) - 1 ] = 0	691:3:15709:15738	1082743	0	True				
ANR	1082833	AssignmentExpression	white [ sizeof ( white ) - 1 ] = 0		1082743	0		=			
ANR	1082834	ArrayIndexing	white [ sizeof ( white ) - 1 ]		1082743	0					
ANR	1082835	Identifier	white		1082743	0					
ANR	1082836	AdditiveExpression	sizeof ( white ) - 1		1082743	1		-			
ANR	1082837	SizeofExpression	sizeof ( white )		1082743	0					
ANR	1082838	Sizeof	sizeof		1082743	0					
ANR	1082839	SizeofOperand	white		1082743	1					
ANR	1082840	PrimaryExpression	1		1082743	1					
ANR	1082841	PrimaryExpression	0		1082743	1					
ANR	1082842	ExpressionStatement	"fprintf ( std_err ? stderr : stdout , ""\\r%s\\r"" , white )"	693:2:15754:15804	1082743	3	True				
ANR	1082843	CallExpression	"fprintf ( std_err ? stderr : stdout , ""\\r%s\\r"" , white )"		1082743	0					
ANR	1082844	Callee	fprintf		1082743	0					
ANR	1082845	Identifier	fprintf		1082743	0					
ANR	1082846	ArgumentList	std_err ? stderr : stdout		1082743	1					
ANR	1082847	Argument	std_err ? stderr : stdout		1082743	0					
ANR	1082848	ConditionalExpression	std_err ? stderr : stdout		1082743	0					
ANR	1082849	Condition	std_err		1082743	0					
ANR	1082850	Identifier	std_err		1082743	0					
ANR	1082851	Identifier	stderr		1082743	1					
ANR	1082852	Identifier	stdout		1082743	2					
ANR	1082853	Argument	"""\\r%s\\r"""		1082743	1					
ANR	1082854	PrimaryExpression	"""\\r%s\\r"""		1082743	0					
ANR	1082855	Argument	white		1082743	2					
ANR	1082856	Identifier	white		1082743	0					
ANR	1082857	ExpressionStatement	fflush ( std_err ? stderr : stdout )	698:1:15883:15915	1082743	1	True				
ANR	1082858	CallExpression	fflush ( std_err ? stderr : stdout )		1082743	0					
ANR	1082859	Callee	fflush		1082743	0					
ANR	1082860	Identifier	fflush		1082743	0					
ANR	1082861	ArgumentList	std_err ? stderr : stdout		1082743	1					
ANR	1082862	Argument	std_err ? stderr : stdout		1082743	0					
ANR	1082863	ConditionalExpression	std_err ? stderr : stdout		1082743	0					
ANR	1082864	Condition	std_err		1082743	0					
ANR	1082865	Identifier	std_err		1082743	0					
ANR	1082866	Identifier	stderr		1082743	1					
ANR	1082867	Identifier	stdout		1082743	2					
ANR	1082868	ReturnType	R_API void		1082743	1					
ANR	1082869	Identifier	r_cons_clear_line		1082743	2					
ANR	1082870	ParameterList	int std_err		1082743	3					
ANR	1082871	Parameter	int std_err	679:29:15385:15395	1082743	0	True				
ANR	1082872	ParameterType	int		1082743	0					
ANR	1082873	Identifier	std_err		1082743	1					
ANR	1082874	CFGEntryNode	ENTRY		1082743		True				
ANR	1082875	CFGExitNode	EXIT		1082743		True				
ANR	1082876	Symbol	R_CONS_CLEAR_LINE		1082743						
ANR	1082877	Symbol	* I		1082743						
ANR	1082878	Symbol	stdout		1082743						
ANR	1082879	Symbol	white		1082743						
ANR	1082880	Symbol	std_err		1082743						
ANR	1082881	Symbol	I . columns		1082743						
ANR	1082882	Symbol	I		1082743						
ANR	1082883	Symbol	& white		1082743						
ANR	1082884	Symbol	I . ansicon		1082743						
ANR	1082885	Symbol	* I . columns		1082743						
ANR	1082886	Symbol	stderr		1082743						
ANR	1082887	Symbol	* white		1082743						
ANR	1082888	Function	r_cons_clear00	701:0:15920:15991							
ANR	1082889	FunctionDef	r_cons_clear00 ()		1082888	0					
ANR	1082890	CompoundStatement		701:28:15948:15991	1082888	0					
ANR	1082891	ExpressionStatement	r_cons_clear ( )	702:1:15951:15966	1082888	0	True				
ANR	1082892	CallExpression	r_cons_clear ( )		1082888	0					
ANR	1082893	Callee	r_cons_clear		1082888	0					
ANR	1082894	Identifier	r_cons_clear		1082888	0					
ANR	1082895	ArgumentList			1082888	1					
ANR	1082896	ExpressionStatement	"r_cons_gotoxy ( 0 , 0 )"	703:1:15969:15989	1082888	1	True				
ANR	1082897	CallExpression	"r_cons_gotoxy ( 0 , 0 )"		1082888	0					
ANR	1082898	Callee	r_cons_gotoxy		1082888	0					
ANR	1082899	Identifier	r_cons_gotoxy		1082888	0					
ANR	1082900	ArgumentList	0		1082888	1					
ANR	1082901	Argument	0		1082888	0					
ANR	1082902	PrimaryExpression	0		1082888	0					
ANR	1082903	Argument	0		1082888	1					
ANR	1082904	PrimaryExpression	0		1082888	0					
ANR	1082905	ReturnType	R_API void		1082888	1					
ANR	1082906	Identifier	r_cons_clear00		1082888	2					
ANR	1082907	ParameterList			1082888	3					
ANR	1082908	CFGEntryNode	ENTRY		1082888		True				
ANR	1082909	CFGExitNode	EXIT		1082888		True				
ANR	1082910	Function	r_cons_reset_colors	706:0:15994:16059							
ANR	1082911	FunctionDef	r_cons_reset_colors ()		1082910	0					
ANR	1082912	CompoundStatement		706:33:16027:16059	1082910	0					
ANR	1082913	ExpressionStatement	r_cons_strcat ( Color_RESET )	707:1:16030:16057	1082910	0	True				
ANR	1082914	CallExpression	r_cons_strcat ( Color_RESET )		1082910	0					
ANR	1082915	Callee	r_cons_strcat		1082910	0					
ANR	1082916	Identifier	r_cons_strcat		1082910	0					
ANR	1082917	ArgumentList	Color_RESET		1082910	1					
ANR	1082918	Argument	Color_RESET		1082910	0					
ANR	1082919	Identifier	Color_RESET		1082910	0					
ANR	1082920	ReturnType	R_API void		1082910	1					
ANR	1082921	Identifier	r_cons_reset_colors		1082910	2					
ANR	1082922	ParameterList			1082910	3					
ANR	1082923	CFGEntryNode	ENTRY		1082910		True				
ANR	1082924	CFGExitNode	EXIT		1082910		True				
ANR	1082925	Symbol	Color_RESET		1082910						
ANR	1082926	Function	r_cons_clear	710:0:16062:16205							
ANR	1082927	FunctionDef	r_cons_clear ()		1082926	0					
ANR	1082928	CompoundStatement		710:26:16088:16205	1082926	0					
ANR	1082929	ExpressionStatement	I . lines = 0	711:1:16091:16102	1082926	0	True				
ANR	1082930	AssignmentExpression	I . lines = 0		1082926	0		=			
ANR	1082931	MemberAccess	I . lines		1082926	0					
ANR	1082932	Identifier	I		1082926	0					
ANR	1082933	Identifier	lines		1082926	1					
ANR	1082934	PrimaryExpression	0		1082926	1					
ANR	1082935	ExpressionStatement	r_cons_w32_clear ( )	713:1:16121:16140	1082926	1	True				
ANR	1082936	CallExpression	r_cons_w32_clear ( )		1082926	0					
ANR	1082937	Callee	r_cons_w32_clear		1082926	0					
ANR	1082938	Identifier	r_cons_w32_clear		1082926	0					
ANR	1082939	ArgumentList			1082926	1					
ANR	1082940	ReturnType	R_API void		1082926	1					
ANR	1082941	Identifier	r_cons_clear		1082926	2					
ANR	1082942	ParameterList			1082926	3					
ANR	1082943	CFGEntryNode	ENTRY		1082926		True				
ANR	1082944	CFGExitNode	EXIT		1082926		True				
ANR	1082945	Symbol	I . lines		1082926						
ANR	1082946	Symbol	I		1082926						
ANR	1082947	Function	cons_grep_reset	719:0:16208:16360							
ANR	1082948	FunctionDef	cons_grep_reset (RConsGrep * grep)		1082947	0					
ANR	1082949	CompoundStatement		719:45:16253:16360	1082947	0					
ANR	1082950	ExpressionStatement	R_FREE ( grep -> str )	720:1:16256:16274	1082947	0	True				
ANR	1082951	CallExpression	R_FREE ( grep -> str )		1082947	0					
ANR	1082952	Callee	R_FREE		1082947	0					
ANR	1082953	Identifier	R_FREE		1082947	0					
ANR	1082954	ArgumentList	grep -> str		1082947	1					
ANR	1082955	Argument	grep -> str		1082947	0					
ANR	1082956	PtrMemberAccess	grep -> str		1082947	0					
ANR	1082957	Identifier	grep		1082947	0					
ANR	1082958	Identifier	str		1082947	1					
ANR	1082959	ExpressionStatement	ZERO_FILL ( * grep )	721:1:16277:16294	1082947	1	True				
ANR	1082960	CallExpression	ZERO_FILL ( * grep )		1082947	0					
ANR	1082961	Callee	ZERO_FILL		1082947	0					
ANR	1082962	Identifier	ZERO_FILL		1082947	0					
ANR	1082963	ArgumentList	* grep		1082947	1					
ANR	1082964	Argument	* grep		1082947	0					
ANR	1082965	UnaryOperationExpression	* grep		1082947	0					
ANR	1082966	UnaryOperator	*		1082947	0					
ANR	1082967	Identifier	grep		1082947	1					
ANR	1082968	ExpressionStatement	grep -> line = - 1	722:1:16297:16312	1082947	2	True				
ANR	1082969	AssignmentExpression	grep -> line = - 1		1082947	0		=			
ANR	1082970	PtrMemberAccess	grep -> line		1082947	0					
ANR	1082971	Identifier	grep		1082947	0					
ANR	1082972	Identifier	line		1082947	1					
ANR	1082973	UnaryOperationExpression	- 1		1082947	1					
ANR	1082974	UnaryOperator	-		1082947	0					
ANR	1082975	PrimaryExpression	1		1082947	1					
ANR	1082976	ExpressionStatement	grep -> sort = - 1	723:1:16315:16330	1082947	3	True				
ANR	1082977	AssignmentExpression	grep -> sort = - 1		1082947	0		=			
ANR	1082978	PtrMemberAccess	grep -> sort		1082947	0					
ANR	1082979	Identifier	grep		1082947	0					
ANR	1082980	Identifier	sort		1082947	1					
ANR	1082981	UnaryOperationExpression	- 1		1082947	1					
ANR	1082982	UnaryOperator	-		1082947	0					
ANR	1082983	PrimaryExpression	1		1082947	1					
ANR	1082984	ExpressionStatement	grep -> sort_invert = false	724:1:16333:16358	1082947	4	True				
ANR	1082985	AssignmentExpression	grep -> sort_invert = false		1082947	0		=			
ANR	1082986	PtrMemberAccess	grep -> sort_invert		1082947	0					
ANR	1082987	Identifier	grep		1082947	0					
ANR	1082988	Identifier	sort_invert		1082947	1					
ANR	1082989	Identifier	false		1082947	1					
ANR	1082990	ReturnType	static void		1082947	1					
ANR	1082991	Identifier	cons_grep_reset		1082947	2					
ANR	1082992	ParameterList	RConsGrep * grep		1082947	3					
ANR	1082993	Parameter	RConsGrep * grep	719:28:16236:16250	1082947	0	True				
ANR	1082994	ParameterType	RConsGrep *		1082947	0					
ANR	1082995	Identifier	grep		1082947	1					
ANR	1082996	CFGEntryNode	ENTRY		1082947		True				
ANR	1082997	CFGExitNode	EXIT		1082947		True				
ANR	1082998	Symbol	grep -> line		1082947						
ANR	1082999	Symbol	* grep		1082947						
ANR	1083000	Symbol	grep		1082947						
ANR	1083001	Symbol	false		1082947						
ANR	1083002	Symbol	grep -> sort_invert		1082947						
ANR	1083003	Symbol	grep -> str		1082947						
ANR	1083004	Symbol	grep -> sort		1082947						
ANR	1083005	Function	r_cons_reset	727:0:16363:16587							
ANR	1083006	FunctionDef	r_cons_reset ()		1083005	0					
ANR	1083007	CompoundStatement		727:26:16389:16587	1083005	0					
ANR	1083008	IfStatement	if ( I . context -> buffer )		1083005	0					
ANR	1083009	Condition	I . context -> buffer	728:5:16396:16412	1083005	0	True				
ANR	1083010	PtrMemberAccess	I . context -> buffer		1083005	0					
ANR	1083011	MemberAccess	I . context		1083005	0					
ANR	1083012	Identifier	I		1083005	0					
ANR	1083013	Identifier	context		1083005	1					
ANR	1083014	Identifier	buffer		1083005	1					
ANR	1083015	CompoundStatement		2:24:25:25	1083005	1					
ANR	1083016	ExpressionStatement	I . context -> buffer [ 0 ] = '\\0'	729:2:16419:16446	1083005	0	True				
ANR	1083017	AssignmentExpression	I . context -> buffer [ 0 ] = '\\0'		1083005	0		=			
ANR	1083018	ArrayIndexing	I . context -> buffer [ 0 ]		1083005	0					
ANR	1083019	PtrMemberAccess	I . context -> buffer		1083005	0					
ANR	1083020	MemberAccess	I . context		1083005	0					
ANR	1083021	Identifier	I		1083005	0					
ANR	1083022	Identifier	context		1083005	1					
ANR	1083023	Identifier	buffer		1083005	1					
ANR	1083024	PrimaryExpression	0		1083005	1					
ANR	1083025	PrimaryExpression	'\\0'		1083005	1					
ANR	1083026	ExpressionStatement	I . context -> buffer_len = 0	731:1:16452:16477	1083005	1	True				
ANR	1083027	AssignmentExpression	I . context -> buffer_len = 0		1083005	0		=			
ANR	1083028	PtrMemberAccess	I . context -> buffer_len		1083005	0					
ANR	1083029	MemberAccess	I . context		1083005	0					
ANR	1083030	Identifier	I		1083005	0					
ANR	1083031	Identifier	context		1083005	1					
ANR	1083032	Identifier	buffer_len		1083005	1					
ANR	1083033	PrimaryExpression	0		1083005	1					
ANR	1083034	ExpressionStatement	I . lines = 0	732:1:16480:16491	1083005	2	True				
ANR	1083035	AssignmentExpression	I . lines = 0		1083005	0		=			
ANR	1083036	MemberAccess	I . lines		1083005	0					
ANR	1083037	Identifier	I		1083005	0					
ANR	1083038	Identifier	lines		1083005	1					
ANR	1083039	PrimaryExpression	0		1083005	1					
ANR	1083040	ExpressionStatement	I . lastline = I . context -> buffer	733:1:16494:16524	1083005	3	True				
ANR	1083041	AssignmentExpression	I . lastline = I . context -> buffer		1083005	0		=			
ANR	1083042	MemberAccess	I . lastline		1083005	0					
ANR	1083043	Identifier	I		1083005	0					
ANR	1083044	Identifier	lastline		1083005	1					
ANR	1083045	PtrMemberAccess	I . context -> buffer		1083005	1					
ANR	1083046	MemberAccess	I . context		1083005	0					
ANR	1083047	Identifier	I		1083005	0					
ANR	1083048	Identifier	context		1083005	1					
ANR	1083049	Identifier	buffer		1083005	1					
ANR	1083050	ExpressionStatement	cons_grep_reset ( & I . context -> grep )	734:1:16527:16561	1083005	4	True				
ANR	1083051	CallExpression	cons_grep_reset ( & I . context -> grep )		1083005	0					
ANR	1083052	Callee	cons_grep_reset		1083005	0					
ANR	1083053	Identifier	cons_grep_reset		1083005	0					
ANR	1083054	ArgumentList	& I . context -> grep		1083005	1					
ANR	1083055	Argument	& I . context -> grep		1083005	0					
ANR	1083056	UnaryOperationExpression	& I . context -> grep		1083005	0					
ANR	1083057	UnaryOperator	&		1083005	0					
ANR	1083058	PtrMemberAccess	I . context -> grep		1083005	1					
ANR	1083059	MemberAccess	I . context		1083005	0					
ANR	1083060	Identifier	I		1083005	0					
ANR	1083061	Identifier	context		1083005	1					
ANR	1083062	Identifier	grep		1083005	1					
ANR	1083063	ExpressionStatement	CTX ( pageable ) = true	735:1:16564:16585	1083005	5	True				
ANR	1083064	AssignmentExpression	CTX ( pageable ) = true		1083005	0		=			
ANR	1083065	CallExpression	CTX ( pageable )		1083005	0					
ANR	1083066	Callee	CTX		1083005	0					
ANR	1083067	Identifier	CTX		1083005	0					
ANR	1083068	ArgumentList	pageable		1083005	1					
ANR	1083069	Argument	pageable		1083005	0					
ANR	1083070	Identifier	pageable		1083005	0					
ANR	1083071	Identifier	true		1083005	1					
ANR	1083072	ReturnType	R_API void		1083005	1					
ANR	1083073	Identifier	r_cons_reset		1083005	2					
ANR	1083074	ParameterList			1083005	3					
ANR	1083075	CFGEntryNode	ENTRY		1083005		True				
ANR	1083076	CFGExitNode	EXIT		1083005		True				
ANR	1083077	Symbol	* * I . context		1083005						
ANR	1083078	Symbol	* I . context -> buffer		1083005						
ANR	1083079	Symbol	* * I		1083005						
ANR	1083080	Symbol	I . context -> buffer_len		1083005						
ANR	1083081	Symbol	CTX		1083005						
ANR	1083082	Symbol	I		1083005						
ANR	1083083	Symbol	pageable		1083005						
ANR	1083084	Symbol	& I . context -> grep		1083005						
ANR	1083085	Symbol	I . context		1083005						
ANR	1083086	Symbol	I . lines		1083005						
ANR	1083087	Symbol	* I . context		1083005						
ANR	1083088	Symbol	* I		1083005						
ANR	1083089	Symbol	I . context -> buffer		1083005						
ANR	1083090	Symbol	true		1083005						
ANR	1083091	Symbol	I . lastline		1083005						
ANR	1083092	Function	r_cons_get_buffer	738:6:16596:16731							
ANR	1083093	FunctionDef	r_cons_get_buffer ()		1083092	0					
ANR	1083094	CompoundStatement		738:38:16628:16731	1083092	0					
ANR	1083095	ReturnStatement	return I . context -> buffer_len ? I . context -> buffer : NULL ;	740:1:16675:16729	1083092	0	True				
ANR	1083096	ConditionalExpression	I . context -> buffer_len ? I . context -> buffer : NULL		1083092	0					
ANR	1083097	Condition	I . context -> buffer_len		1083092	0					
ANR	1083098	PtrMemberAccess	I . context -> buffer_len		1083092	0					
ANR	1083099	MemberAccess	I . context		1083092	0					
ANR	1083100	Identifier	I		1083092	0					
ANR	1083101	Identifier	context		1083092	1					
ANR	1083102	Identifier	buffer_len		1083092	1					
ANR	1083103	PtrMemberAccess	I . context -> buffer		1083092	1					
ANR	1083104	MemberAccess	I . context		1083092	0					
ANR	1083105	Identifier	I		1083092	0					
ANR	1083106	Identifier	context		1083092	1					
ANR	1083107	Identifier	buffer		1083092	1					
ANR	1083108	Identifier	NULL		1083092	2					
ANR	1083109	ReturnType	const char *		1083092	1					
ANR	1083110	Identifier	r_cons_get_buffer		1083092	2					
ANR	1083111	ParameterList			1083092	3					
ANR	1083112	CFGEntryNode	ENTRY		1083092		True				
ANR	1083113	CFGExitNode	EXIT		1083092		True				
ANR	1083114	Symbol	* I . context		1083092						
ANR	1083115	Symbol	NULL		1083092						
ANR	1083116	Symbol	* I		1083092						
ANR	1083117	Symbol	I . context -> buffer_len		1083092						
ANR	1083118	Symbol	I . context -> buffer		1083092						
ANR	1083119	Symbol	I		1083092						
ANR	1083120	Symbol	I . context		1083092						
ANR	1083121	Function	r_cons_get_buffer_len	743:0:16734:16801							
ANR	1083122	FunctionDef	r_cons_get_buffer_len ()		1083121	0					
ANR	1083123	CompoundStatement		743:34:16768:16801	1083121	0					
ANR	1083124	ReturnStatement	return I . context -> buffer_len ;	744:1:16771:16799	1083121	0	True				
ANR	1083125	PtrMemberAccess	I . context -> buffer_len		1083121	0					
ANR	1083126	MemberAccess	I . context		1083121	0					
ANR	1083127	Identifier	I		1083121	0					
ANR	1083128	Identifier	context		1083121	1					
ANR	1083129	Identifier	buffer_len		1083121	1					
ANR	1083130	ReturnType	R_API int		1083121	1					
ANR	1083131	Identifier	r_cons_get_buffer_len		1083121	2					
ANR	1083132	ParameterList			1083121	3					
ANR	1083133	CFGEntryNode	ENTRY		1083121		True				
ANR	1083134	CFGExitNode	EXIT		1083121		True				
ANR	1083135	Symbol	* I . context		1083121						
ANR	1083136	Symbol	* I		1083121						
ANR	1083137	Symbol	I . context -> buffer_len		1083121						
ANR	1083138	Symbol	I		1083121						
ANR	1083139	Symbol	I . context		1083121						
ANR	1083140	Function	r_cons_filter	747:0:16804:17346							
ANR	1083141	FunctionDef	r_cons_filter ()		1083140	0					
ANR	1083142	CompoundStatement		747:27:16831:17346	1083140	0					
ANR	1083143	IfStatement	if ( I . filter || I . context -> grep . nstrings > 0 || I . context -> grep . tokens_used || I . context -> grep . less || I . context -> grep . json )		1083140	0					
ANR	1083144	Condition	I . filter || I . context -> grep . nstrings > 0 || I . context -> grep . tokens_used || I . context -> grep . less || I . context -> grep . json	749:5:16850:16968	1083140	0	True				
ANR	1083145	OrExpression	I . filter || I . context -> grep . nstrings > 0 || I . context -> grep . tokens_used || I . context -> grep . less || I . context -> grep . json		1083140	0		||			
ANR	1083146	MemberAccess	I . filter		1083140	0					
ANR	1083147	Identifier	I		1083140	0					
ANR	1083148	Identifier	filter		1083140	1					
ANR	1083149	OrExpression	I . context -> grep . nstrings > 0 || I . context -> grep . tokens_used || I . context -> grep . less || I . context -> grep . json		1083140	1		||			
ANR	1083150	RelationalExpression	I . context -> grep . nstrings > 0		1083140	0		>			
ANR	1083151	MemberAccess	I . context -> grep . nstrings		1083140	0					
ANR	1083152	PtrMemberAccess	I . context -> grep		1083140	0					
ANR	1083153	MemberAccess	I . context		1083140	0					
ANR	1083154	Identifier	I		1083140	0					
ANR	1083155	Identifier	context		1083140	1					
ANR	1083156	Identifier	grep		1083140	1					
ANR	1083157	Identifier	nstrings		1083140	1					
ANR	1083158	PrimaryExpression	0		1083140	1					
ANR	1083159	OrExpression	I . context -> grep . tokens_used || I . context -> grep . less || I . context -> grep . json		1083140	1		||			
ANR	1083160	MemberAccess	I . context -> grep . tokens_used		1083140	0					
ANR	1083161	PtrMemberAccess	I . context -> grep		1083140	0					
ANR	1083162	MemberAccess	I . context		1083140	0					
ANR	1083163	Identifier	I		1083140	0					
ANR	1083164	Identifier	context		1083140	1					
ANR	1083165	Identifier	grep		1083140	1					
ANR	1083166	Identifier	tokens_used		1083140	1					
ANR	1083167	OrExpression	I . context -> grep . less || I . context -> grep . json		1083140	1		||			
ANR	1083168	MemberAccess	I . context -> grep . less		1083140	0					
ANR	1083169	PtrMemberAccess	I . context -> grep		1083140	0					
ANR	1083170	MemberAccess	I . context		1083140	0					
ANR	1083171	Identifier	I		1083140	0					
ANR	1083172	Identifier	context		1083140	1					
ANR	1083173	Identifier	grep		1083140	1					
ANR	1083174	Identifier	less		1083140	1					
ANR	1083175	MemberAccess	I . context -> grep . json		1083140	1					
ANR	1083176	PtrMemberAccess	I . context -> grep		1083140	0					
ANR	1083177	MemberAccess	I . context		1083140	0					
ANR	1083178	Identifier	I		1083140	0					
ANR	1083179	Identifier	context		1083140	1					
ANR	1083180	Identifier	grep		1083140	1					
ANR	1083181	Identifier	json		1083140	1					
ANR	1083182	CompoundStatement		3:126:139:139	1083140	1					
ANR	1083183	ExpressionStatement	( void ) r_cons_grepbuf ( )	750:2:16975:16998	1083140	0	True				
ANR	1083184	CastExpression	( void ) r_cons_grepbuf ( )		1083140	0					
ANR	1083185	CastTarget	void		1083140	0					
ANR	1083186	CallExpression	r_cons_grepbuf ( )		1083140	1					
ANR	1083187	Callee	r_cons_grepbuf		1083140	0					
ANR	1083188	Identifier	r_cons_grepbuf		1083140	0					
ANR	1083189	ArgumentList			1083140	1					
ANR	1083190	ExpressionStatement	I . filter = false	751:2:17002:17018	1083140	1	True				
ANR	1083191	AssignmentExpression	I . filter = false		1083140	0		=			
ANR	1083192	MemberAccess	I . filter		1083140	0					
ANR	1083193	Identifier	I		1083140	0					
ANR	1083194	Identifier	filter		1083140	1					
ANR	1083195	Identifier	false		1083140	1					
ANR	1083196	IfStatement	if ( I . is_html )		1083140	1					
ANR	1083197	Condition	I . is_html	754:5:17040:17048	1083140	0	True				
ANR	1083198	MemberAccess	I . is_html		1083140	0					
ANR	1083199	Identifier	I		1083140	0					
ANR	1083200	Identifier	is_html		1083140	1					
ANR	1083201	CompoundStatement		11:2:312:359	1083140	1					
ANR	1083202	IdentifierDeclStatement	int newlen = 0 ;	755:2:17055:17069	1083140	0	True				
ANR	1083203	IdentifierDecl	newlen = 0		1083140	0					
ANR	1083204	IdentifierDeclType	int		1083140	0					
ANR	1083205	Identifier	newlen		1083140	1					
ANR	1083206	AssignmentExpression	newlen = 0		1083140	2		=			
ANR	1083207	Identifier	newlen		1083140	0					
ANR	1083208	PrimaryExpression	0		1083140	1					
ANR	1083209	IdentifierDeclStatement	"char * input = r_str_ndup ( I . context -> buffer , I . context -> buffer_len ) ;"	756:2:17073:17140	1083140	1	True				
ANR	1083210	IdentifierDecl	"* input = r_str_ndup ( I . context -> buffer , I . context -> buffer_len )"		1083140	0					
ANR	1083211	IdentifierDeclType	char *		1083140	0					
ANR	1083212	Identifier	input		1083140	1					
ANR	1083213	AssignmentExpression	"* input = r_str_ndup ( I . context -> buffer , I . context -> buffer_len )"		1083140	2		=			
ANR	1083214	Identifier	input		1083140	0					
ANR	1083215	CallExpression	"r_str_ndup ( I . context -> buffer , I . context -> buffer_len )"		1083140	1					
ANR	1083216	Callee	r_str_ndup		1083140	0					
ANR	1083217	Identifier	r_str_ndup		1083140	0					
ANR	1083218	ArgumentList	I . context -> buffer		1083140	1					
ANR	1083219	Argument	I . context -> buffer		1083140	0					
ANR	1083220	PtrMemberAccess	I . context -> buffer		1083140	0					
ANR	1083221	MemberAccess	I . context		1083140	0					
ANR	1083222	Identifier	I		1083140	0					
ANR	1083223	Identifier	context		1083140	1					
ANR	1083224	Identifier	buffer		1083140	1					
ANR	1083225	Argument	I . context -> buffer_len		1083140	1					
ANR	1083226	PtrMemberAccess	I . context -> buffer_len		1083140	0					
ANR	1083227	MemberAccess	I . context		1083140	0					
ANR	1083228	Identifier	I		1083140	0					
ANR	1083229	Identifier	context		1083140	1					
ANR	1083230	Identifier	buffer_len		1083140	1					
ANR	1083231	IdentifierDeclStatement	"char * res = r_cons_html_filter ( input , & newlen ) ;"	757:2:17144:17191	1083140	2	True				
ANR	1083232	IdentifierDecl	"* res = r_cons_html_filter ( input , & newlen )"		1083140	0					
ANR	1083233	IdentifierDeclType	char *		1083140	0					
ANR	1083234	Identifier	res		1083140	1					
ANR	1083235	AssignmentExpression	"* res = r_cons_html_filter ( input , & newlen )"		1083140	2		=			
ANR	1083236	Identifier	res		1083140	0					
ANR	1083237	CallExpression	"r_cons_html_filter ( input , & newlen )"		1083140	1					
ANR	1083238	Callee	r_cons_html_filter		1083140	0					
ANR	1083239	Identifier	r_cons_html_filter		1083140	0					
ANR	1083240	ArgumentList	input		1083140	1					
ANR	1083241	Argument	input		1083140	0					
ANR	1083242	Identifier	input		1083140	0					
ANR	1083243	Argument	& newlen		1083140	1					
ANR	1083244	UnaryOperationExpression	& newlen		1083140	0					
ANR	1083245	UnaryOperator	&		1083140	0					
ANR	1083246	Identifier	newlen		1083140	1					
ANR	1083247	ExpressionStatement	free ( I . context -> buffer )	758:2:17195:17219	1083140	3	True				
ANR	1083248	CallExpression	free ( I . context -> buffer )		1083140	0					
ANR	1083249	Callee	free		1083140	0					
ANR	1083250	Identifier	free		1083140	0					
ANR	1083251	ArgumentList	I . context -> buffer		1083140	1					
ANR	1083252	Argument	I . context -> buffer		1083140	0					
ANR	1083253	PtrMemberAccess	I . context -> buffer		1083140	0					
ANR	1083254	MemberAccess	I . context		1083140	0					
ANR	1083255	Identifier	I		1083140	0					
ANR	1083256	Identifier	context		1083140	1					
ANR	1083257	Identifier	buffer		1083140	1					
ANR	1083258	ExpressionStatement	free ( input )	759:2:17223:17235	1083140	4	True				
ANR	1083259	CallExpression	free ( input )		1083140	0					
ANR	1083260	Callee	free		1083140	0					
ANR	1083261	Identifier	free		1083140	0					
ANR	1083262	ArgumentList	input		1083140	1					
ANR	1083263	Argument	input		1083140	0					
ANR	1083264	Identifier	input		1083140	0					
ANR	1083265	ExpressionStatement	I . context -> buffer = res	760:2:17239:17262	1083140	5	True				
ANR	1083266	AssignmentExpression	I . context -> buffer = res		1083140	0		=			
ANR	1083267	PtrMemberAccess	I . context -> buffer		1083140	0					
ANR	1083268	MemberAccess	I . context		1083140	0					
ANR	1083269	Identifier	I		1083140	0					
ANR	1083270	Identifier	context		1083140	1					
ANR	1083271	Identifier	buffer		1083140	1					
ANR	1083272	Identifier	res		1083140	1					
ANR	1083273	ExpressionStatement	I . context -> buffer_len = newlen	761:2:17266:17296	1083140	6	True				
ANR	1083274	AssignmentExpression	I . context -> buffer_len = newlen		1083140	0		=			
ANR	1083275	PtrMemberAccess	I . context -> buffer_len		1083140	0					
ANR	1083276	MemberAccess	I . context		1083140	0					
ANR	1083277	Identifier	I		1083140	0					
ANR	1083278	Identifier	context		1083140	1					
ANR	1083279	Identifier	buffer_len		1083140	1					
ANR	1083280	Identifier	newlen		1083140	1					
ANR	1083281	ExpressionStatement	I . context -> buffer_sz = newlen	762:2:17300:17329	1083140	7	True				
ANR	1083282	AssignmentExpression	I . context -> buffer_sz = newlen		1083140	0		=			
ANR	1083283	PtrMemberAccess	I . context -> buffer_sz		1083140	0					
ANR	1083284	MemberAccess	I . context		1083140	0					
ANR	1083285	Identifier	I		1083140	0					
ANR	1083286	Identifier	context		1083140	1					
ANR	1083287	Identifier	buffer_sz		1083140	1					
ANR	1083288	Identifier	newlen		1083140	1					
ANR	1083289	ReturnType	R_API void		1083140	1					
ANR	1083290	Identifier	r_cons_filter		1083140	2					
ANR	1083291	ParameterList			1083140	3					
ANR	1083292	CFGEntryNode	ENTRY		1083140		True				
ANR	1083293	CFGExitNode	EXIT		1083140		True				
ANR	1083294	Symbol	I . context -> grep		1083140						
ANR	1083295	Symbol	r_cons_html_filter		1083140						
ANR	1083296	Symbol	res		1083140						
ANR	1083297	Symbol	I . filter		1083140						
ANR	1083298	Symbol	I . context -> buffer_len		1083140						
ANR	1083299	Symbol	r_str_ndup		1083140						
ANR	1083300	Symbol	false		1083140						
ANR	1083301	Symbol	I		1083140						
ANR	1083302	Symbol	newlen		1083140						
ANR	1083303	Symbol	I . context		1083140						
ANR	1083304	Symbol	I . context -> grep . nstrings		1083140						
ANR	1083305	Symbol	* I . context		1083140						
ANR	1083306	Symbol	input		1083140						
ANR	1083307	Symbol	I . context -> grep . tokens_used		1083140						
ANR	1083308	Symbol	* I		1083140						
ANR	1083309	Symbol	I . context -> grep . json		1083140						
ANR	1083310	Symbol	I . context -> buffer_sz		1083140						
ANR	1083311	Symbol	I . context -> buffer		1083140						
ANR	1083312	Symbol	I . is_html		1083140						
ANR	1083313	Symbol	I . context -> grep . less		1083140						
ANR	1083314	Symbol	& newlen		1083140						
ANR	1083315	Function	r_cons_push	767:0:17349:17648							
ANR	1083316	FunctionDef	r_cons_push ()		1083315	0					
ANR	1083317	CompoundStatement		767:25:17374:17648	1083315	0					
ANR	1083318	IfStatement	if ( ! I . context -> cons_stack )		1083315	0					
ANR	1083319	Condition	! I . context -> cons_stack	768:5:17381:17402	1083315	0	True				
ANR	1083320	UnaryOperationExpression	! I . context -> cons_stack		1083315	0					
ANR	1083321	UnaryOperator	!		1083315	0					
ANR	1083322	PtrMemberAccess	I . context -> cons_stack		1083315	1					
ANR	1083323	MemberAccess	I . context		1083315	0					
ANR	1083324	Identifier	I		1083315	0					
ANR	1083325	Identifier	context		1083315	1					
ANR	1083326	Identifier	cons_stack		1083315	1					
ANR	1083327	CompoundStatement		2:29:30:30	1083315	1					
ANR	1083328	ReturnStatement	return ;	769:2:17409:17415	1083315	0	True				
ANR	1083329	IdentifierDeclStatement	RConsStack * data = cons_stack_dump ( true ) ;	771:1:17421:17462	1083315	1	True				
ANR	1083330	IdentifierDecl	* data = cons_stack_dump ( true )		1083315	0					
ANR	1083331	IdentifierDeclType	RConsStack *		1083315	0					
ANR	1083332	Identifier	data		1083315	1					
ANR	1083333	AssignmentExpression	* data = cons_stack_dump ( true )		1083315	2		=			
ANR	1083334	Identifier	data		1083315	0					
ANR	1083335	CallExpression	cons_stack_dump ( true )		1083315	1					
ANR	1083336	Callee	cons_stack_dump		1083315	0					
ANR	1083337	Identifier	cons_stack_dump		1083315	0					
ANR	1083338	ArgumentList	true		1083315	1					
ANR	1083339	Argument	true		1083315	0					
ANR	1083340	Identifier	true		1083315	0					
ANR	1083341	IfStatement	if ( ! data )		1083315	2					
ANR	1083342	Condition	! data	772:5:17469:17473	1083315	0	True				
ANR	1083343	UnaryOperationExpression	! data		1083315	0					
ANR	1083344	UnaryOperator	!		1083315	0					
ANR	1083345	Identifier	data		1083315	1					
ANR	1083346	CompoundStatement		6:12:101:101	1083315	1					
ANR	1083347	ReturnStatement	return ;	773:2:17480:17486	1083315	0	True				
ANR	1083348	ExpressionStatement	"r_stack_push ( I . context -> cons_stack , data )"	775:1:17492:17534	1083315	3	True				
ANR	1083349	CallExpression	"r_stack_push ( I . context -> cons_stack , data )"		1083315	0					
ANR	1083350	Callee	r_stack_push		1083315	0					
ANR	1083351	Identifier	r_stack_push		1083315	0					
ANR	1083352	ArgumentList	I . context -> cons_stack		1083315	1					
ANR	1083353	Argument	I . context -> cons_stack		1083315	0					
ANR	1083354	PtrMemberAccess	I . context -> cons_stack		1083315	0					
ANR	1083355	MemberAccess	I . context		1083315	0					
ANR	1083356	Identifier	I		1083315	0					
ANR	1083357	Identifier	context		1083315	1					
ANR	1083358	Identifier	cons_stack		1083315	1					
ANR	1083359	Argument	data		1083315	1					
ANR	1083360	Identifier	data		1083315	0					
ANR	1083361	ExpressionStatement	I . context -> buffer_len = 0	776:1:17537:17562	1083315	4	True				
ANR	1083362	AssignmentExpression	I . context -> buffer_len = 0		1083315	0		=			
ANR	1083363	PtrMemberAccess	I . context -> buffer_len		1083315	0					
ANR	1083364	MemberAccess	I . context		1083315	0					
ANR	1083365	Identifier	I		1083315	0					
ANR	1083366	Identifier	context		1083315	1					
ANR	1083367	Identifier	buffer_len		1083315	1					
ANR	1083368	PrimaryExpression	0		1083315	1					
ANR	1083369	IfStatement	if ( I . context -> buffer )		1083315	5					
ANR	1083370	Condition	I . context -> buffer	777:5:17569:17585	1083315	0	True				
ANR	1083371	PtrMemberAccess	I . context -> buffer		1083315	0					
ANR	1083372	MemberAccess	I . context		1083315	0					
ANR	1083373	Identifier	I		1083315	0					
ANR	1083374	Identifier	context		1083315	1					
ANR	1083375	Identifier	buffer		1083315	1					
ANR	1083376	CompoundStatement		11:24:213:213	1083315	1					
ANR	1083377	ExpressionStatement	"memset ( I . context -> buffer , 0 , I . context -> buffer_sz )"	778:2:17592:17643	1083315	0	True				
ANR	1083378	CallExpression	"memset ( I . context -> buffer , 0 , I . context -> buffer_sz )"		1083315	0					
ANR	1083379	Callee	memset		1083315	0					
ANR	1083380	Identifier	memset		1083315	0					
ANR	1083381	ArgumentList	I . context -> buffer		1083315	1					
ANR	1083382	Argument	I . context -> buffer		1083315	0					
ANR	1083383	PtrMemberAccess	I . context -> buffer		1083315	0					
ANR	1083384	MemberAccess	I . context		1083315	0					
ANR	1083385	Identifier	I		1083315	0					
ANR	1083386	Identifier	context		1083315	1					
ANR	1083387	Identifier	buffer		1083315	1					
ANR	1083388	Argument	0		1083315	1					
ANR	1083389	PrimaryExpression	0		1083315	0					
ANR	1083390	Argument	I . context -> buffer_sz		1083315	2					
ANR	1083391	PtrMemberAccess	I . context -> buffer_sz		1083315	0					
ANR	1083392	MemberAccess	I . context		1083315	0					
ANR	1083393	Identifier	I		1083315	0					
ANR	1083394	Identifier	context		1083315	1					
ANR	1083395	Identifier	buffer_sz		1083315	1					
ANR	1083396	ReturnType	R_API void		1083315	1					
ANR	1083397	Identifier	r_cons_push		1083315	2					
ANR	1083398	ParameterList			1083315	3					
ANR	1083399	CFGEntryNode	ENTRY		1083315		True				
ANR	1083400	CFGExitNode	EXIT		1083315		True				
ANR	1083401	Symbol	* I . context		1083315						
ANR	1083402	Symbol	cons_stack_dump		1083315						
ANR	1083403	Symbol	* I		1083315						
ANR	1083404	Symbol	data		1083315						
ANR	1083405	Symbol	I . context -> buffer_sz		1083315						
ANR	1083406	Symbol	I . context -> buffer_len		1083315						
ANR	1083407	Symbol	I . context -> buffer		1083315						
ANR	1083408	Symbol	true		1083315						
ANR	1083409	Symbol	I		1083315						
ANR	1083410	Symbol	I . context		1083315						
ANR	1083411	Symbol	I . context -> cons_stack		1083315						
ANR	1083412	Function	r_cons_pop	782:0:17651:17883							
ANR	1083413	FunctionDef	r_cons_pop ()		1083412	0					
ANR	1083414	CompoundStatement		782:24:17675:17883	1083412	0					
ANR	1083415	IfStatement	if ( ! I . context -> cons_stack )		1083412	0					
ANR	1083416	Condition	! I . context -> cons_stack	783:5:17682:17703	1083412	0	True				
ANR	1083417	UnaryOperationExpression	! I . context -> cons_stack		1083412	0					
ANR	1083418	UnaryOperator	!		1083412	0					
ANR	1083419	PtrMemberAccess	I . context -> cons_stack		1083412	1					
ANR	1083420	MemberAccess	I . context		1083412	0					
ANR	1083421	Identifier	I		1083412	0					
ANR	1083422	Identifier	context		1083412	1					
ANR	1083423	Identifier	cons_stack		1083412	1					
ANR	1083424	CompoundStatement		2:29:30:30	1083412	1					
ANR	1083425	ReturnStatement	return ;	784:2:17710:17716	1083412	0	True				
ANR	1083426	IdentifierDeclStatement	RConsStack * data = ( RConsStack * ) r_stack_pop ( I . context -> cons_stack ) ;	786:1:17722:17790	1083412	1	True				
ANR	1083427	IdentifierDecl	* data = ( RConsStack * ) r_stack_pop ( I . context -> cons_stack )		1083412	0					
ANR	1083428	IdentifierDeclType	RConsStack *		1083412	0					
ANR	1083429	Identifier	data		1083412	1					
ANR	1083430	AssignmentExpression	* data = ( RConsStack * ) r_stack_pop ( I . context -> cons_stack )		1083412	2		=			
ANR	1083431	Identifier	data		1083412	0					
ANR	1083432	CastExpression	( RConsStack * ) r_stack_pop ( I . context -> cons_stack )		1083412	1					
ANR	1083433	CastTarget	RConsStack *		1083412	0					
ANR	1083434	CallExpression	r_stack_pop ( I . context -> cons_stack )		1083412	1					
ANR	1083435	Callee	r_stack_pop		1083412	0					
ANR	1083436	Identifier	r_stack_pop		1083412	0					
ANR	1083437	ArgumentList	I . context -> cons_stack		1083412	1					
ANR	1083438	Argument	I . context -> cons_stack		1083412	0					
ANR	1083439	PtrMemberAccess	I . context -> cons_stack		1083412	0					
ANR	1083440	MemberAccess	I . context		1083412	0					
ANR	1083441	Identifier	I		1083412	0					
ANR	1083442	Identifier	context		1083412	1					
ANR	1083443	Identifier	cons_stack		1083412	1					
ANR	1083444	IfStatement	if ( ! data )		1083412	2					
ANR	1083445	Condition	! data	787:5:17797:17801	1083412	0	True				
ANR	1083446	UnaryOperationExpression	! data		1083412	0					
ANR	1083447	UnaryOperator	!		1083412	0					
ANR	1083448	Identifier	data		1083412	1					
ANR	1083449	CompoundStatement		6:12:128:128	1083412	1					
ANR	1083450	ReturnStatement	return ;	788:2:17808:17814	1083412	0	True				
ANR	1083451	ExpressionStatement	"cons_stack_load ( data , true )"	790:1:17820:17848	1083412	3	True				
ANR	1083452	CallExpression	"cons_stack_load ( data , true )"		1083412	0					
ANR	1083453	Callee	cons_stack_load		1083412	0					
ANR	1083454	Identifier	cons_stack_load		1083412	0					
ANR	1083455	ArgumentList	data		1083412	1					
ANR	1083456	Argument	data		1083412	0					
ANR	1083457	Identifier	data		1083412	0					
ANR	1083458	Argument	true		1083412	1					
ANR	1083459	Identifier	true		1083412	0					
ANR	1083460	ExpressionStatement	cons_stack_free ( ( void * ) data )	791:1:17851:17881	1083412	4	True				
ANR	1083461	CallExpression	cons_stack_free ( ( void * ) data )		1083412	0					
ANR	1083462	Callee	cons_stack_free		1083412	0					
ANR	1083463	Identifier	cons_stack_free		1083412	0					
ANR	1083464	ArgumentList	( void * ) data		1083412	1					
ANR	1083465	Argument	( void * ) data		1083412	0					
ANR	1083466	CastExpression	( void * ) data		1083412	0					
ANR	1083467	CastTarget	void *		1083412	0					
ANR	1083468	Identifier	data		1083412	1					
ANR	1083469	ReturnType	R_API void		1083412	1					
ANR	1083470	Identifier	r_cons_pop		1083412	2					
ANR	1083471	ParameterList			1083412	3					
ANR	1083472	CFGEntryNode	ENTRY		1083412		True				
ANR	1083473	CFGExitNode	EXIT		1083412		True				
ANR	1083474	Symbol	* I . context		1083412						
ANR	1083475	Symbol	* I		1083412						
ANR	1083476	Symbol	data		1083412						
ANR	1083477	Symbol	r_stack_pop		1083412						
ANR	1083478	Symbol	true		1083412						
ANR	1083479	Symbol	I		1083412						
ANR	1083480	Symbol	I . context		1083412						
ANR	1083481	Symbol	I . context -> cons_stack		1083412						
ANR	1083482	Function	r_cons_context_new	794:0:17886:18098							
ANR	1083483	FunctionDef	r_cons_context_new (R_NULLABLE RConsContext * parent)		1083482	0					
ANR	1083484	CompoundStatement		794:72:17958:18098	1083482	0					
ANR	1083485	IdentifierDeclStatement	RConsContext * context = R_NEW0 ( RConsContext ) ;	795:1:17961:18006	1083482	0	True				
ANR	1083486	IdentifierDecl	* context = R_NEW0 ( RConsContext )		1083482	0					
ANR	1083487	IdentifierDeclType	RConsContext *		1083482	0					
ANR	1083488	Identifier	context		1083482	1					
ANR	1083489	AssignmentExpression	* context = R_NEW0 ( RConsContext )		1083482	2		=			
ANR	1083490	Identifier	context		1083482	0					
ANR	1083491	CallExpression	R_NEW0 ( RConsContext )		1083482	1					
ANR	1083492	Callee	R_NEW0		1083482	0					
ANR	1083493	Identifier	R_NEW0		1083482	0					
ANR	1083494	ArgumentList	RConsContext		1083482	1					
ANR	1083495	Argument	RConsContext		1083482	0					
ANR	1083496	Identifier	RConsContext		1083482	0					
ANR	1083497	IfStatement	if ( ! context )		1083482	1					
ANR	1083498	Condition	! context	796:5:18013:18020	1083482	0	True				
ANR	1083499	UnaryOperationExpression	! context		1083482	0					
ANR	1083500	UnaryOperator	!		1083482	0					
ANR	1083501	Identifier	context		1083482	1					
ANR	1083502	CompoundStatement		3:15:64:64	1083482	1					
ANR	1083503	ReturnStatement	return NULL ;	797:2:18027:18038	1083482	0	True				
ANR	1083504	Identifier	NULL		1083482	0					
ANR	1083505	ExpressionStatement	"cons_context_init ( context , parent )"	799:1:18044:18079	1083482	2	True				
ANR	1083506	CallExpression	"cons_context_init ( context , parent )"		1083482	0					
ANR	1083507	Callee	cons_context_init		1083482	0					
ANR	1083508	Identifier	cons_context_init		1083482	0					
ANR	1083509	ArgumentList	context		1083482	1					
ANR	1083510	Argument	context		1083482	0					
ANR	1083511	Identifier	context		1083482	0					
ANR	1083512	Argument	parent		1083482	1					
ANR	1083513	Identifier	parent		1083482	0					
ANR	1083514	ReturnStatement	return context ;	800:1:18082:18096	1083482	3	True				
ANR	1083515	Identifier	context		1083482	0					
ANR	1083516	ReturnType	R_API RConsContext *		1083482	1					
ANR	1083517	Identifier	r_cons_context_new		1083482	2					
ANR	1083518	ParameterList	R_NULLABLE RConsContext * parent		1083482	3					
ANR	1083519	Parameter	R_NULLABLE RConsContext * parent	794:39:17925:17955	1083482	0	True				
ANR	1083520	ParameterType	R_NULLABLE RConsContext *		1083482	0					
ANR	1083521	Identifier	parent		1083482	1					
ANR	1083522	CFGEntryNode	ENTRY		1083482		True				
ANR	1083523	CFGExitNode	EXIT		1083482		True				
ANR	1083524	Symbol	parent		1083482						
ANR	1083525	Symbol	R_NEW0		1083482						
ANR	1083526	Symbol	NULL		1083482						
ANR	1083527	Symbol	RConsContext		1083482						
ANR	1083528	Symbol	context		1083482						
ANR	1083529	Function	r_cons_context_free	803:0:18101:18236							
ANR	1083530	FunctionDef	r_cons_context_free (RConsContext * context)		1083529	0					
ANR	1083531	CompoundStatement		803:54:18155:18236	1083529	0					
ANR	1083532	IfStatement	if ( ! context )		1083529	0					
ANR	1083533	Condition	! context	804:5:18162:18169	1083529	0	True				
ANR	1083534	UnaryOperationExpression	! context		1083529	0					
ANR	1083535	UnaryOperator	!		1083529	0					
ANR	1083536	Identifier	context		1083529	1					
ANR	1083537	CompoundStatement		2:15:16:16	1083529	1					
ANR	1083538	ReturnStatement	return ;	805:2:18176:18182	1083529	0	True				
ANR	1083539	ExpressionStatement	cons_context_deinit ( context )	807:1:18188:18217	1083529	1	True				
ANR	1083540	CallExpression	cons_context_deinit ( context )		1083529	0					
ANR	1083541	Callee	cons_context_deinit		1083529	0					
ANR	1083542	Identifier	cons_context_deinit		1083529	0					
ANR	1083543	ArgumentList	context		1083529	1					
ANR	1083544	Argument	context		1083529	0					
ANR	1083545	Identifier	context		1083529	0					
ANR	1083546	ExpressionStatement	free ( context )	808:1:18220:18234	1083529	2	True				
ANR	1083547	CallExpression	free ( context )		1083529	0					
ANR	1083548	Callee	free		1083529	0					
ANR	1083549	Identifier	free		1083529	0					
ANR	1083550	ArgumentList	context		1083529	1					
ANR	1083551	Argument	context		1083529	0					
ANR	1083552	Identifier	context		1083529	0					
ANR	1083553	ReturnType	R_API void		1083529	1					
ANR	1083554	Identifier	r_cons_context_free		1083529	2					
ANR	1083555	ParameterList	RConsContext * context		1083529	3					
ANR	1083556	Parameter	RConsContext * context	803:31:18132:18152	1083529	0	True				
ANR	1083557	ParameterType	RConsContext *		1083529	0					
ANR	1083558	Identifier	context		1083529	1					
ANR	1083559	CFGEntryNode	ENTRY		1083529		True				
ANR	1083560	CFGExitNode	EXIT		1083529		True				
ANR	1083561	Symbol	context		1083529						
ANR	1083562	Function	r_cons_context_load	811:0:18239:18317							
ANR	1083563	FunctionDef	r_cons_context_load (RConsContext * context)		1083562	0					
ANR	1083564	CompoundStatement		811:54:18293:18317	1083562	0					
ANR	1083565	ExpressionStatement	I . context = context	812:1:18296:18315	1083562	0	True				
ANR	1083566	AssignmentExpression	I . context = context		1083562	0		=			
ANR	1083567	MemberAccess	I . context		1083562	0					
ANR	1083568	Identifier	I		1083562	0					
ANR	1083569	Identifier	context		1083562	1					
ANR	1083570	Identifier	context		1083562	1					
ANR	1083571	ReturnType	R_API void		1083562	1					
ANR	1083572	Identifier	r_cons_context_load		1083562	2					
ANR	1083573	ParameterList	RConsContext * context		1083562	3					
ANR	1083574	Parameter	RConsContext * context	811:31:18270:18290	1083562	0	True				
ANR	1083575	ParameterType	RConsContext *		1083562	0					
ANR	1083576	Identifier	context		1083562	1					
ANR	1083577	CFGEntryNode	ENTRY		1083562		True				
ANR	1083578	CFGExitNode	EXIT		1083562		True				
ANR	1083579	Symbol	context		1083562						
ANR	1083580	Symbol	I		1083562						
ANR	1083581	Symbol	I . context		1083562						
ANR	1083582	Function	r_cons_context_reset	815:0:18320:18394							
ANR	1083583	FunctionDef	r_cons_context_reset ()		1083582	0					
ANR	1083584	CompoundStatement		815:34:18354:18394	1083582	0					
ANR	1083585	ExpressionStatement	I . context = & r_cons_context_default	816:1:18357:18392	1083582	0	True				
ANR	1083586	AssignmentExpression	I . context = & r_cons_context_default		1083582	0		=			
ANR	1083587	MemberAccess	I . context		1083582	0					
ANR	1083588	Identifier	I		1083582	0					
ANR	1083589	Identifier	context		1083582	1					
ANR	1083590	UnaryOperationExpression	& r_cons_context_default		1083582	1					
ANR	1083591	UnaryOperator	&		1083582	0					
ANR	1083592	Identifier	r_cons_context_default		1083582	1					
ANR	1083593	ReturnType	R_API void		1083582	1					
ANR	1083594	Identifier	r_cons_context_reset		1083582	2					
ANR	1083595	ParameterList			1083582	3					
ANR	1083596	CFGEntryNode	ENTRY		1083582		True				
ANR	1083597	CFGExitNode	EXIT		1083582		True				
ANR	1083598	Symbol	I		1083582						
ANR	1083599	Symbol	I . context		1083582						
ANR	1083600	Symbol	& r_cons_context_default		1083582						
ANR	1083601	Function	r_cons_context_is_main	819:0:18397:18481							
ANR	1083602	FunctionDef	r_cons_context_is_main ()		1083601	0					
ANR	1083603	CompoundStatement		819:36:18433:18481	1083601	0					
ANR	1083604	ReturnStatement	return I . context == & r_cons_context_default ;	820:1:18436:18479	1083601	0	True				
ANR	1083605	EqualityExpression	I . context == & r_cons_context_default		1083601	0		==			
ANR	1083606	MemberAccess	I . context		1083601	0					
ANR	1083607	Identifier	I		1083601	0					
ANR	1083608	Identifier	context		1083601	1					
ANR	1083609	UnaryOperationExpression	& r_cons_context_default		1083601	1					
ANR	1083610	UnaryOperator	&		1083601	0					
ANR	1083611	Identifier	r_cons_context_default		1083601	1					
ANR	1083612	ReturnType	R_API bool		1083601	1					
ANR	1083613	Identifier	r_cons_context_is_main		1083601	2					
ANR	1083614	ParameterList			1083601	3					
ANR	1083615	CFGEntryNode	ENTRY		1083601		True				
ANR	1083616	CFGExitNode	EXIT		1083601		True				
ANR	1083617	Symbol	I		1083601						
ANR	1083618	Symbol	& r_cons_context_default		1083601						
ANR	1083619	Symbol	I . context		1083601						
ANR	1083620	Function	r_cons_context_break	823:0:18484:18693							
ANR	1083621	FunctionDef	r_cons_context_break (RConsContext * context)		1083620	0					
ANR	1083622	CompoundStatement		823:55:18539:18693	1083620	0					
ANR	1083623	IfStatement	if ( ! context )		1083620	0					
ANR	1083624	Condition	! context	824:5:18546:18553	1083620	0	True				
ANR	1083625	UnaryOperationExpression	! context		1083620	0					
ANR	1083626	UnaryOperator	!		1083620	0					
ANR	1083627	Identifier	context		1083620	1					
ANR	1083628	CompoundStatement		2:15:16:16	1083620	1					
ANR	1083629	ReturnStatement	return ;	825:2:18560:18566	1083620	0	True				
ANR	1083630	ExpressionStatement	context -> breaked = true	827:1:18572:18595	1083620	1	True				
ANR	1083631	AssignmentExpression	context -> breaked = true		1083620	0		=			
ANR	1083632	PtrMemberAccess	context -> breaked		1083620	0					
ANR	1083633	Identifier	context		1083620	0					
ANR	1083634	Identifier	breaked		1083620	1					
ANR	1083635	Identifier	true		1083620	1					
ANR	1083636	IfStatement	if ( context -> event_interrupt )		1083620	2					
ANR	1083637	Condition	context -> event_interrupt	828:5:18602:18625	1083620	0	True				
ANR	1083638	PtrMemberAccess	context -> event_interrupt		1083620	0					
ANR	1083639	Identifier	context		1083620	0					
ANR	1083640	Identifier	event_interrupt		1083620	1					
ANR	1083641	CompoundStatement		6:31:88:88	1083620	1					
ANR	1083642	ExpressionStatement	context -> event_interrupt ( context -> event_interrupt_data )	829:2:18632:18688	1083620	0	True				
ANR	1083643	CallExpression	context -> event_interrupt ( context -> event_interrupt_data )		1083620	0					
ANR	1083644	Callee	context -> event_interrupt		1083620	0					
ANR	1083645	PtrMemberAccess	context -> event_interrupt		1083620	0					
ANR	1083646	Identifier	context		1083620	0					
ANR	1083647	Identifier	event_interrupt		1083620	1					
ANR	1083648	ArgumentList	context -> event_interrupt_data		1083620	1					
ANR	1083649	Argument	context -> event_interrupt_data		1083620	0					
ANR	1083650	PtrMemberAccess	context -> event_interrupt_data		1083620	0					
ANR	1083651	Identifier	context		1083620	0					
ANR	1083652	Identifier	event_interrupt_data		1083620	1					
ANR	1083653	ReturnType	R_API void		1083620	1					
ANR	1083654	Identifier	r_cons_context_break		1083620	2					
ANR	1083655	ParameterList	RConsContext * context		1083620	3					
ANR	1083656	Parameter	RConsContext * context	823:32:18516:18536	1083620	0	True				
ANR	1083657	ParameterType	RConsContext *		1083620	0					
ANR	1083658	Identifier	context		1083620	1					
ANR	1083659	CFGEntryNode	ENTRY		1083620		True				
ANR	1083660	CFGExitNode	EXIT		1083620		True				
ANR	1083661	Symbol	context -> breaked		1083620						
ANR	1083662	Symbol	context		1083620						
ANR	1083663	Symbol	true		1083620						
ANR	1083664	Symbol	context -> event_interrupt		1083620						
ANR	1083665	Symbol	* context		1083620						
ANR	1083666	Symbol	context -> event_interrupt_data		1083620						
ANR	1083667	Function	r_cons_last	833:0:18696:18844							
ANR	1083668	FunctionDef	r_cons_last ()		1083667	0					
ANR	1083669	CompoundStatement		833:29:18725:18844	1083667	0					
ANR	1083670	IfStatement	if ( ! CTX ( lastEnabled ) )		1083667	0					
ANR	1083671	Condition	! CTX ( lastEnabled )	834:5:18732:18749	1083667	0	True				
ANR	1083672	UnaryOperationExpression	! CTX ( lastEnabled )		1083667	0					
ANR	1083673	UnaryOperator	!		1083667	0					
ANR	1083674	CallExpression	CTX ( lastEnabled )		1083667	1					
ANR	1083675	Callee	CTX		1083667	0					
ANR	1083676	Identifier	CTX		1083667	0					
ANR	1083677	ArgumentList	lastEnabled		1083667	1					
ANR	1083678	Argument	lastEnabled		1083667	0					
ANR	1083679	Identifier	lastEnabled		1083667	0					
ANR	1083680	CompoundStatement		2:25:26:26	1083667	1					
ANR	1083681	ReturnStatement	return ;	835:2:18756:18762	1083667	0	True				
ANR	1083682	ExpressionStatement	CTX ( lastMode ) = true	837:1:18768:18789	1083667	1	True				
ANR	1083683	AssignmentExpression	CTX ( lastMode ) = true		1083667	0		=			
ANR	1083684	CallExpression	CTX ( lastMode )		1083667	0					
ANR	1083685	Callee	CTX		1083667	0					
ANR	1083686	Identifier	CTX		1083667	0					
ANR	1083687	ArgumentList	lastMode		1083667	1					
ANR	1083688	Argument	lastMode		1083667	0					
ANR	1083689	Identifier	lastMode		1083667	0					
ANR	1083690	Identifier	true		1083667	1					
ANR	1083691	ExpressionStatement	"r_cons_memcat ( CTX ( lastOutput ) , CTX ( lastLength ) )"	838:1:18792:18842	1083667	2	True				
ANR	1083692	CallExpression	"r_cons_memcat ( CTX ( lastOutput ) , CTX ( lastLength ) )"		1083667	0					
ANR	1083693	Callee	r_cons_memcat		1083667	0					
ANR	1083694	Identifier	r_cons_memcat		1083667	0					
ANR	1083695	ArgumentList	CTX ( lastOutput )		1083667	1					
ANR	1083696	Argument	CTX ( lastOutput )		1083667	0					
ANR	1083697	CallExpression	CTX ( lastOutput )		1083667	0					
ANR	1083698	Callee	CTX		1083667	0					
ANR	1083699	Identifier	CTX		1083667	0					
ANR	1083700	ArgumentList	lastOutput		1083667	1					
ANR	1083701	Argument	lastOutput		1083667	0					
ANR	1083702	Identifier	lastOutput		1083667	0					
ANR	1083703	Argument	CTX ( lastLength )		1083667	1					
ANR	1083704	CallExpression	CTX ( lastLength )		1083667	0					
ANR	1083705	Callee	CTX		1083667	0					
ANR	1083706	Identifier	CTX		1083667	0					
ANR	1083707	ArgumentList	lastLength		1083667	1					
ANR	1083708	Argument	lastLength		1083667	0					
ANR	1083709	Identifier	lastLength		1083667	0					
ANR	1083710	ReturnType	R_API void		1083667	1					
ANR	1083711	Identifier	r_cons_last		1083667	2					
ANR	1083712	ParameterList			1083667	3					
ANR	1083713	CFGEntryNode	ENTRY		1083667		True				
ANR	1083714	CFGExitNode	EXIT		1083667		True				
ANR	1083715	Symbol	lastEnabled		1083667						
ANR	1083716	Symbol	CTX		1083667						
ANR	1083717	Symbol	true		1083667						
ANR	1083718	Symbol	lastMode		1083667						
ANR	1083719	Symbol	lastLength		1083667						
ANR	1083720	Symbol	lastOutput		1083667						
ANR	1083721	Function	lastMatters	841:0:18847:19088							
ANR	1083722	FunctionDef	lastMatters ()		1083721	0					
ANR	1083723	CompoundStatement		841:26:18873:19088	1083721	0					
ANR	1083724	ReturnStatement	return ( I . context -> buffer_len > 0 ) && ( CTX ( lastEnabled ) && ! I . filter && I . context -> grep . nstrings < 1 && ! I . context -> grep . tokens_used && ! I . context -> grep . less && ! I . context -> grep . json && ! I . is_html ) ;	842:1:18876:19086	1083721	0	True				
ANR	1083725	AndExpression	( I . context -> buffer_len > 0 ) && ( CTX ( lastEnabled ) && ! I . filter && I . context -> grep . nstrings < 1 && ! I . context -> grep . tokens_used && ! I . context -> grep . less && ! I . context -> grep . json && ! I . is_html )		1083721	0		&&			
ANR	1083726	RelationalExpression	I . context -> buffer_len > 0		1083721	0		>			
ANR	1083727	PtrMemberAccess	I . context -> buffer_len		1083721	0					
ANR	1083728	MemberAccess	I . context		1083721	0					
ANR	1083729	Identifier	I		1083721	0					
ANR	1083730	Identifier	context		1083721	1					
ANR	1083731	Identifier	buffer_len		1083721	1					
ANR	1083732	PrimaryExpression	0		1083721	1					
ANR	1083733	AndExpression	CTX ( lastEnabled ) && ! I . filter && I . context -> grep . nstrings < 1 && ! I . context -> grep . tokens_used && ! I . context -> grep . less && ! I . context -> grep . json && ! I . is_html		1083721	1		&&			
ANR	1083734	CallExpression	CTX ( lastEnabled )		1083721	0					
ANR	1083735	Callee	CTX		1083721	0					
ANR	1083736	Identifier	CTX		1083721	0					
ANR	1083737	ArgumentList	lastEnabled		1083721	1					
ANR	1083738	Argument	lastEnabled		1083721	0					
ANR	1083739	Identifier	lastEnabled		1083721	0					
ANR	1083740	AndExpression	! I . filter && I . context -> grep . nstrings < 1 && ! I . context -> grep . tokens_used && ! I . context -> grep . less && ! I . context -> grep . json && ! I . is_html		1083721	1		&&			
ANR	1083741	UnaryOperationExpression	! I . filter		1083721	0					
ANR	1083742	UnaryOperator	!		1083721	0					
ANR	1083743	MemberAccess	I . filter		1083721	1					
ANR	1083744	Identifier	I		1083721	0					
ANR	1083745	Identifier	filter		1083721	1					
ANR	1083746	AndExpression	I . context -> grep . nstrings < 1 && ! I . context -> grep . tokens_used && ! I . context -> grep . less && ! I . context -> grep . json && ! I . is_html		1083721	1		&&			
ANR	1083747	RelationalExpression	I . context -> grep . nstrings < 1		1083721	0		<			
ANR	1083748	MemberAccess	I . context -> grep . nstrings		1083721	0					
ANR	1083749	PtrMemberAccess	I . context -> grep		1083721	0					
ANR	1083750	MemberAccess	I . context		1083721	0					
ANR	1083751	Identifier	I		1083721	0					
ANR	1083752	Identifier	context		1083721	1					
ANR	1083753	Identifier	grep		1083721	1					
ANR	1083754	Identifier	nstrings		1083721	1					
ANR	1083755	PrimaryExpression	1		1083721	1					
ANR	1083756	AndExpression	! I . context -> grep . tokens_used && ! I . context -> grep . less && ! I . context -> grep . json && ! I . is_html		1083721	1		&&			
ANR	1083757	UnaryOperationExpression	! I . context -> grep . tokens_used		1083721	0					
ANR	1083758	UnaryOperator	!		1083721	0					
ANR	1083759	MemberAccess	I . context -> grep . tokens_used		1083721	1					
ANR	1083760	PtrMemberAccess	I . context -> grep		1083721	0					
ANR	1083761	MemberAccess	I . context		1083721	0					
ANR	1083762	Identifier	I		1083721	0					
ANR	1083763	Identifier	context		1083721	1					
ANR	1083764	Identifier	grep		1083721	1					
ANR	1083765	Identifier	tokens_used		1083721	1					
ANR	1083766	AndExpression	! I . context -> grep . less && ! I . context -> grep . json && ! I . is_html		1083721	1		&&			
ANR	1083767	UnaryOperationExpression	! I . context -> grep . less		1083721	0					
ANR	1083768	UnaryOperator	!		1083721	0					
ANR	1083769	MemberAccess	I . context -> grep . less		1083721	1					
ANR	1083770	PtrMemberAccess	I . context -> grep		1083721	0					
ANR	1083771	MemberAccess	I . context		1083721	0					
ANR	1083772	Identifier	I		1083721	0					
ANR	1083773	Identifier	context		1083721	1					
ANR	1083774	Identifier	grep		1083721	1					
ANR	1083775	Identifier	less		1083721	1					
ANR	1083776	AndExpression	! I . context -> grep . json && ! I . is_html		1083721	1		&&			
ANR	1083777	UnaryOperationExpression	! I . context -> grep . json		1083721	0					
ANR	1083778	UnaryOperator	!		1083721	0					
ANR	1083779	MemberAccess	I . context -> grep . json		1083721	1					
ANR	1083780	PtrMemberAccess	I . context -> grep		1083721	0					
ANR	1083781	MemberAccess	I . context		1083721	0					
ANR	1083782	Identifier	I		1083721	0					
ANR	1083783	Identifier	context		1083721	1					
ANR	1083784	Identifier	grep		1083721	1					
ANR	1083785	Identifier	json		1083721	1					
ANR	1083786	UnaryOperationExpression	! I . is_html		1083721	1					
ANR	1083787	UnaryOperator	!		1083721	0					
ANR	1083788	MemberAccess	I . is_html		1083721	1					
ANR	1083789	Identifier	I		1083721	0					
ANR	1083790	Identifier	is_html		1083721	1					
ANR	1083791	ReturnType	static bool		1083721	1					
ANR	1083792	Identifier	lastMatters		1083721	2					
ANR	1083793	ParameterList			1083721	3					
ANR	1083794	CFGEntryNode	ENTRY		1083721		True				
ANR	1083795	CFGExitNode	EXIT		1083721		True				
ANR	1083796	Symbol	I . context -> grep		1083721						
ANR	1083797	Symbol	I . filter		1083721						
ANR	1083798	Symbol	I . context -> buffer_len		1083721						
ANR	1083799	Symbol	CTX		1083721						
ANR	1083800	Symbol	I		1083721						
ANR	1083801	Symbol	I . context		1083721						
ANR	1083802	Symbol	I . context -> grep . nstrings		1083721						
ANR	1083803	Symbol	* I . context		1083721						
ANR	1083804	Symbol	I . context -> grep . tokens_used		1083721						
ANR	1083805	Symbol	I . context -> grep . json		1083721						
ANR	1083806	Symbol	* I		1083721						
ANR	1083807	Symbol	lastEnabled		1083721						
ANR	1083808	Symbol	I . is_html		1083721						
ANR	1083809	Symbol	I . context -> grep . less		1083721						
ANR	1083810	Function	r_cons_echo	848:0:19091:19525							
ANR	1083811	FunctionDef	r_cons_echo (const char * msg)		1083810	0					
ANR	1083812	CompoundStatement		848:40:19131:19525	1083810	0					
ANR	1083813	Statement	static	849:1:19134:19139	1083810	0	True				
ANR	1083814	IdentifierDeclStatement	RStrBuf * echodata = NULL ;	849:8:19141:19165	1083810	1	True				
ANR	1083815	IdentifierDecl	* echodata = NULL		1083810	0					
ANR	1083816	IdentifierDeclType	RStrBuf *		1083810	0					
ANR	1083817	Identifier	echodata		1083810	1					
ANR	1083818	AssignmentExpression	* echodata = NULL		1083810	2		=			
ANR	1083819	Identifier	NULL		1083810	0					
ANR	1083820	Identifier	NULL		1083810	1					
ANR	1083821	IfStatement	if ( msg )		1083810	2					
ANR	1083822	Condition	msg	850:5:19217:19219	1083810	0	True				
ANR	1083823	Identifier	msg		1083810	0					
ANR	1083824	CompoundStatement		3:10:90:90	1083810	1					
ANR	1083825	IfStatement	if ( echodata )		1083810	0					
ANR	1083826	Condition	echodata	851:6:19230:19237	1083810	0	True				
ANR	1083827	Identifier	echodata		1083810	0					
ANR	1083828	CompoundStatement		4:16:108:108	1083810	1					
ANR	1083829	ExpressionStatement	"r_strbuf_append ( echodata , msg )"	852:3:19245:19276	1083810	0	True				
ANR	1083830	CallExpression	"r_strbuf_append ( echodata , msg )"		1083810	0					
ANR	1083831	Callee	r_strbuf_append		1083810	0					
ANR	1083832	Identifier	r_strbuf_append		1083810	0					
ANR	1083833	ArgumentList	echodata		1083810	1					
ANR	1083834	Argument	echodata		1083810	0					
ANR	1083835	Identifier	echodata		1083810	0					
ANR	1083836	Argument	msg		1083810	1					
ANR	1083837	Identifier	msg		1083810	0					
ANR	1083838	ExpressionStatement	"r_strbuf_append ( echodata , ""\\n"" )"	853:3:19281:19313	1083810	1	True				
ANR	1083839	CallExpression	"r_strbuf_append ( echodata , ""\\n"" )"		1083810	0					
ANR	1083840	Callee	r_strbuf_append		1083810	0					
ANR	1083841	Identifier	r_strbuf_append		1083810	0					
ANR	1083842	ArgumentList	echodata		1083810	1					
ANR	1083843	Argument	echodata		1083810	0					
ANR	1083844	Identifier	echodata		1083810	0					
ANR	1083845	Argument	"""\\n"""		1083810	1					
ANR	1083846	PrimaryExpression	"""\\n"""		1083810	0					
ANR	1083847	ElseStatement	else		1083810	0					
ANR	1083848	CompoundStatement		7:9:192:192	1083810	0					
ANR	1083849	ExpressionStatement	echodata = r_strbuf_new ( msg )	855:3:19329:19358	1083810	0	True				
ANR	1083850	AssignmentExpression	echodata = r_strbuf_new ( msg )		1083810	0		=			
ANR	1083851	Identifier	echodata		1083810	0					
ANR	1083852	CallExpression	r_strbuf_new ( msg )		1083810	1					
ANR	1083853	Callee	r_strbuf_new		1083810	0					
ANR	1083854	Identifier	r_strbuf_new		1083810	0					
ANR	1083855	ArgumentList	msg		1083810	1					
ANR	1083856	Argument	msg		1083810	0					
ANR	1083857	Identifier	msg		1083810	0					
ANR	1083858	ElseStatement	else		1083810	0					
ANR	1083859	CompoundStatement		10:8:240:240	1083810	0					
ANR	1083860	IfStatement	if ( echodata )		1083810	0					
ANR	1083861	Condition	echodata	858:6:19380:19387	1083810	0	True				
ANR	1083862	Identifier	echodata		1083810	0					
ANR	1083863	CompoundStatement		12:3:263:301	1083810	1					
ANR	1083864	IdentifierDeclStatement	char * data = r_strbuf_drain ( echodata ) ;	859:3:19395:19433	1083810	0	True				
ANR	1083865	IdentifierDecl	* data = r_strbuf_drain ( echodata )		1083810	0					
ANR	1083866	IdentifierDeclType	char *		1083810	0					
ANR	1083867	Identifier	data		1083810	1					
ANR	1083868	AssignmentExpression	* data = r_strbuf_drain ( echodata )		1083810	2		=			
ANR	1083869	Identifier	data		1083810	0					
ANR	1083870	CallExpression	r_strbuf_drain ( echodata )		1083810	1					
ANR	1083871	Callee	r_strbuf_drain		1083810	0					
ANR	1083872	Identifier	r_strbuf_drain		1083810	0					
ANR	1083873	ArgumentList	echodata		1083810	1					
ANR	1083874	Argument	echodata		1083810	0					
ANR	1083875	Identifier	echodata		1083810	0					
ANR	1083876	ExpressionStatement	r_cons_strcat ( data )	860:3:19438:19458	1083810	1	True				
ANR	1083877	CallExpression	r_cons_strcat ( data )		1083810	0					
ANR	1083878	Callee	r_cons_strcat		1083810	0					
ANR	1083879	Identifier	r_cons_strcat		1083810	0					
ANR	1083880	ArgumentList	data		1083810	1					
ANR	1083881	Argument	data		1083810	0					
ANR	1083882	Identifier	data		1083810	0					
ANR	1083883	ExpressionStatement	r_cons_newline ( )	861:3:19463:19480	1083810	2	True				
ANR	1083884	CallExpression	r_cons_newline ( )		1083810	0					
ANR	1083885	Callee	r_cons_newline		1083810	0					
ANR	1083886	Identifier	r_cons_newline		1083810	0					
ANR	1083887	ArgumentList			1083810	1					
ANR	1083888	ExpressionStatement	echodata = NULL	862:3:19485:19500	1083810	3	True				
ANR	1083889	AssignmentExpression	echodata = NULL		1083810	0		=			
ANR	1083890	Identifier	echodata		1083810	0					
ANR	1083891	Identifier	NULL		1083810	1					
ANR	1083892	ExpressionStatement	free ( data )	863:3:19505:19516	1083810	4	True				
ANR	1083893	CallExpression	free ( data )		1083810	0					
ANR	1083894	Callee	free		1083810	0					
ANR	1083895	Identifier	free		1083810	0					
ANR	1083896	ArgumentList	data		1083810	1					
ANR	1083897	Argument	data		1083810	0					
ANR	1083898	Identifier	data		1083810	0					
ANR	1083899	ReturnType	R_API void		1083810	1					
ANR	1083900	Identifier	r_cons_echo		1083810	2					
ANR	1083901	ParameterList	const char * msg		1083810	3					
ANR	1083902	Parameter	const char * msg	848:23:19114:19128	1083810	0	True				
ANR	1083903	ParameterType	const char *		1083810	0					
ANR	1083904	Identifier	msg		1083810	1					
ANR	1083905	CFGEntryNode	ENTRY		1083810		True				
ANR	1083906	CFGExitNode	EXIT		1083810		True				
ANR	1083907	Symbol	msg		1083810						
ANR	1083908	Symbol	NULL		1083810						
ANR	1083909	Symbol	r_strbuf_new		1083810						
ANR	1083910	Symbol	data		1083810						
ANR	1083911	Symbol	r_strbuf_drain		1083810						
ANR	1083912	Symbol	echodata		1083810						
ANR	1083913	Function	r_cons_flush	868:0:19528:22495							
ANR	1083914	FunctionDef	r_cons_flush ()		1083913	0					
ANR	1083915	CompoundStatement		868:30:19558:22495	1083913	0					
ANR	1083916	IdentifierDeclStatement	const char * tee = I . teefile ;	869:1:19561:19588	1083913	0	True				
ANR	1083917	IdentifierDecl	* tee = I . teefile		1083913	0					
ANR	1083918	IdentifierDeclType	const char *		1083913	0					
ANR	1083919	Identifier	tee		1083913	1					
ANR	1083920	AssignmentExpression	* tee = I . teefile		1083913	2		=			
ANR	1083921	Identifier	tee		1083913	0					
ANR	1083922	MemberAccess	I . teefile		1083913	1					
ANR	1083923	Identifier	I		1083913	0					
ANR	1083924	Identifier	teefile		1083913	1					
ANR	1083925	IfStatement	if ( I . noflush )		1083913	1					
ANR	1083926	Condition	I . noflush	870:5:19595:19603	1083913	0	True				
ANR	1083927	MemberAccess	I . noflush		1083913	0					
ANR	1083928	Identifier	I		1083913	0					
ANR	1083929	Identifier	noflush		1083913	1					
ANR	1083930	CompoundStatement		3:16:47:47	1083913	1					
ANR	1083931	ReturnStatement	return ;	871:2:19610:19616	1083913	0	True				
ANR	1083932	IfStatement	if ( I . null )		1083913	2					
ANR	1083933	Condition	I . null	873:5:19626:19631	1083913	0	True				
ANR	1083934	MemberAccess	I . null		1083913	0					
ANR	1083935	Identifier	I		1083913	0					
ANR	1083936	Identifier	null		1083913	1					
ANR	1083937	CompoundStatement		6:13:75:75	1083913	1					
ANR	1083938	ExpressionStatement	r_cons_reset ( )	874:2:19638:19653	1083913	0	True				
ANR	1083939	CallExpression	r_cons_reset ( )		1083913	0					
ANR	1083940	Callee	r_cons_reset		1083913	0					
ANR	1083941	Identifier	r_cons_reset		1083913	0					
ANR	1083942	ArgumentList			1083913	1					
ANR	1083943	ReturnStatement	return ;	875:2:19657:19663	1083913	1	True				
ANR	1083944	IfStatement	if ( lastMatters ( ) && ! CTX ( lastMode ) )		1083913	3					
ANR	1083945	Condition	lastMatters ( ) && ! CTX ( lastMode )	877:5:19673:19705	1083913	0	True				
ANR	1083946	AndExpression	lastMatters ( ) && ! CTX ( lastMode )		1083913	0		&&			
ANR	1083947	CallExpression	lastMatters ( )		1083913	0					
ANR	1083948	Callee	lastMatters		1083913	0					
ANR	1083949	Identifier	lastMatters		1083913	0					
ANR	1083950	ArgumentList			1083913	1					
ANR	1083951	UnaryOperationExpression	! CTX ( lastMode )		1083913	1					
ANR	1083952	UnaryOperator	!		1083913	0					
ANR	1083953	CallExpression	CTX ( lastMode )		1083913	1					
ANR	1083954	Callee	CTX		1083913	0					
ANR	1083955	Identifier	CTX		1083913	0					
ANR	1083956	ArgumentList	lastMode		1083913	1					
ANR	1083957	Argument	lastMode		1083913	0					
ANR	1083958	Identifier	lastMode		1083913	0					
ANR	1083959	CompoundStatement		10:40:149:149	1083913	1					
ANR	1083960	IfStatement	if ( CTX ( buffer_len ) > CTX ( lastLength ) )		1083913	0					
ANR	1083961	Condition	CTX ( buffer_len ) > CTX ( lastLength )	879:6:19744:19778	1083913	0	True				
ANR	1083962	RelationalExpression	CTX ( buffer_len ) > CTX ( lastLength )		1083913	0		>			
ANR	1083963	CallExpression	CTX ( buffer_len )		1083913	0					
ANR	1083964	Callee	CTX		1083913	0					
ANR	1083965	Identifier	CTX		1083913	0					
ANR	1083966	ArgumentList	buffer_len		1083913	1					
ANR	1083967	Argument	buffer_len		1083913	0					
ANR	1083968	Identifier	buffer_len		1083913	0					
ANR	1083969	CallExpression	CTX ( lastLength )		1083913	1					
ANR	1083970	Callee	CTX		1083913	0					
ANR	1083971	Identifier	CTX		1083913	0					
ANR	1083972	ArgumentList	lastLength		1083913	1					
ANR	1083973	Argument	lastLength		1083913	0					
ANR	1083974	Identifier	lastLength		1083913	0					
ANR	1083975	CompoundStatement		12:43:222:222	1083913	1					
ANR	1083976	ExpressionStatement	free ( CTX ( lastOutput ) )	880:3:19786:19809	1083913	0	True				
ANR	1083977	CallExpression	free ( CTX ( lastOutput ) )		1083913	0					
ANR	1083978	Callee	free		1083913	0					
ANR	1083979	Identifier	free		1083913	0					
ANR	1083980	ArgumentList	CTX ( lastOutput )		1083913	1					
ANR	1083981	Argument	CTX ( lastOutput )		1083913	0					
ANR	1083982	CallExpression	CTX ( lastOutput )		1083913	0					
ANR	1083983	Callee	CTX		1083913	0					
ANR	1083984	Identifier	CTX		1083913	0					
ANR	1083985	ArgumentList	lastOutput		1083913	1					
ANR	1083986	Argument	lastOutput		1083913	0					
ANR	1083987	Identifier	lastOutput		1083913	0					
ANR	1083988	ExpressionStatement	CTX ( lastOutput ) = malloc ( CTX ( buffer_len ) + 1 )	881:3:19814:19862	1083913	1	True				
ANR	1083989	AssignmentExpression	CTX ( lastOutput ) = malloc ( CTX ( buffer_len ) + 1 )		1083913	0		=			
ANR	1083990	CallExpression	CTX ( lastOutput )		1083913	0					
ANR	1083991	Callee	CTX		1083913	0					
ANR	1083992	Identifier	CTX		1083913	0					
ANR	1083993	ArgumentList	lastOutput		1083913	1					
ANR	1083994	Argument	lastOutput		1083913	0					
ANR	1083995	Identifier	lastOutput		1083913	0					
ANR	1083996	CallExpression	malloc ( CTX ( buffer_len ) + 1 )		1083913	1					
ANR	1083997	Callee	malloc		1083913	0					
ANR	1083998	Identifier	malloc		1083913	0					
ANR	1083999	ArgumentList	CTX ( buffer_len ) + 1		1083913	1					
ANR	1084000	Argument	CTX ( buffer_len ) + 1		1083913	0					
ANR	1084001	AdditiveExpression	CTX ( buffer_len ) + 1		1083913	0		+			
ANR	1084002	CallExpression	CTX ( buffer_len )		1083913	0					
ANR	1084003	Callee	CTX		1083913	0					
ANR	1084004	Identifier	CTX		1083913	0					
ANR	1084005	ArgumentList	buffer_len		1083913	1					
ANR	1084006	Argument	buffer_len		1083913	0					
ANR	1084007	Identifier	buffer_len		1083913	0					
ANR	1084008	PrimaryExpression	1		1083913	1					
ANR	1084009	ExpressionStatement	CTX ( lastLength ) = CTX ( buffer_len )	883:2:19870:19905	1083913	1	True				
ANR	1084010	AssignmentExpression	CTX ( lastLength ) = CTX ( buffer_len )		1083913	0		=			
ANR	1084011	CallExpression	CTX ( lastLength )		1083913	0					
ANR	1084012	Callee	CTX		1083913	0					
ANR	1084013	Identifier	CTX		1083913	0					
ANR	1084014	ArgumentList	lastLength		1083913	1					
ANR	1084015	Argument	lastLength		1083913	0					
ANR	1084016	Identifier	lastLength		1083913	0					
ANR	1084017	CallExpression	CTX ( buffer_len )		1083913	1					
ANR	1084018	Callee	CTX		1083913	0					
ANR	1084019	Identifier	CTX		1083913	0					
ANR	1084020	ArgumentList	buffer_len		1083913	1					
ANR	1084021	Argument	buffer_len		1083913	0					
ANR	1084022	Identifier	buffer_len		1083913	0					
ANR	1084023	ExpressionStatement	"memcpy ( CTX ( lastOutput ) , CTX ( buffer ) , CTX ( buffer_len ) )"	884:2:19909:19966	1083913	2	True				
ANR	1084024	CallExpression	"memcpy ( CTX ( lastOutput ) , CTX ( buffer ) , CTX ( buffer_len ) )"		1083913	0					
ANR	1084025	Callee	memcpy		1083913	0					
ANR	1084026	Identifier	memcpy		1083913	0					
ANR	1084027	ArgumentList	CTX ( lastOutput )		1083913	1					
ANR	1084028	Argument	CTX ( lastOutput )		1083913	0					
ANR	1084029	CallExpression	CTX ( lastOutput )		1083913	0					
ANR	1084030	Callee	CTX		1083913	0					
ANR	1084031	Identifier	CTX		1083913	0					
ANR	1084032	ArgumentList	lastOutput		1083913	1					
ANR	1084033	Argument	lastOutput		1083913	0					
ANR	1084034	Identifier	lastOutput		1083913	0					
ANR	1084035	Argument	CTX ( buffer )		1083913	1					
ANR	1084036	CallExpression	CTX ( buffer )		1083913	0					
ANR	1084037	Callee	CTX		1083913	0					
ANR	1084038	Identifier	CTX		1083913	0					
ANR	1084039	ArgumentList	buffer		1083913	1					
ANR	1084040	Argument	buffer		1083913	0					
ANR	1084041	Identifier	buffer		1083913	0					
ANR	1084042	Argument	CTX ( buffer_len )		1083913	2					
ANR	1084043	CallExpression	CTX ( buffer_len )		1083913	0					
ANR	1084044	Callee	CTX		1083913	0					
ANR	1084045	Identifier	CTX		1083913	0					
ANR	1084046	ArgumentList	buffer_len		1083913	1					
ANR	1084047	Argument	buffer_len		1083913	0					
ANR	1084048	Identifier	buffer_len		1083913	0					
ANR	1084049	ElseStatement	else		1083913	0					
ANR	1084050	CompoundStatement		18:8:417:417	1083913	0					
ANR	1084051	ExpressionStatement	CTX ( lastMode ) = false	886:2:19980:20002	1083913	0	True				
ANR	1084052	AssignmentExpression	CTX ( lastMode ) = false		1083913	0		=			
ANR	1084053	CallExpression	CTX ( lastMode )		1083913	0					
ANR	1084054	Callee	CTX		1083913	0					
ANR	1084055	Identifier	CTX		1083913	0					
ANR	1084056	ArgumentList	lastMode		1083913	1					
ANR	1084057	Argument	lastMode		1083913	0					
ANR	1084058	Identifier	lastMode		1083913	0					
ANR	1084059	Identifier	false		1083913	1					
ANR	1084060	ExpressionStatement	r_cons_filter ( )	888:1:20008:20024	1083913	4	True				
ANR	1084061	CallExpression	r_cons_filter ( )		1083913	0					
ANR	1084062	Callee	r_cons_filter		1083913	0					
ANR	1084063	Identifier	r_cons_filter		1083913	0					
ANR	1084064	ArgumentList			1083913	1					
ANR	1084065	IfStatement	if ( r_cons_is_interactive ( ) && I . fdout == 1 )		1083913	5					
ANR	1084066	Condition	r_cons_is_interactive ( ) && I . fdout == 1	889:5:20031:20070	1083913	0	True				
ANR	1084067	AndExpression	r_cons_is_interactive ( ) && I . fdout == 1		1083913	0		&&			
ANR	1084068	CallExpression	r_cons_is_interactive ( )		1083913	0					
ANR	1084069	Callee	r_cons_is_interactive		1083913	0					
ANR	1084070	Identifier	r_cons_is_interactive		1083913	0					
ANR	1084071	ArgumentList			1083913	1					
ANR	1084072	EqualityExpression	I . fdout == 1		1083913	1		==			
ANR	1084073	MemberAccess	I . fdout		1083913	0					
ANR	1084074	Identifier	I		1083913	0					
ANR	1084075	Identifier	fdout		1083913	1					
ANR	1084076	PrimaryExpression	1		1083913	1					
ANR	1084077	CompoundStatement		22:47:514:514	1083913	1					
ANR	1084078	IfStatement	"if ( CTX ( pageable ) && CTX ( buffer ) && I . pager && * I . pager && CTX ( buffer_len ) > 0 && r_str_char_count ( CTX ( buffer ) , '\\n' ) >= I . rows )"		1083913	0					
ANR	1084079	Condition	"CTX ( pageable ) && CTX ( buffer ) && I . pager && * I . pager && CTX ( buffer_len ) > 0 && r_str_char_count ( CTX ( buffer ) , '\\n' ) >= I . rows"	891:6:20151:20278	1083913	0	True				
ANR	1084080	AndExpression	"CTX ( pageable ) && CTX ( buffer ) && I . pager && * I . pager && CTX ( buffer_len ) > 0 && r_str_char_count ( CTX ( buffer ) , '\\n' ) >= I . rows"		1083913	0		&&			
ANR	1084081	CallExpression	CTX ( pageable )		1083913	0					
ANR	1084082	Callee	CTX		1083913	0					
ANR	1084083	Identifier	CTX		1083913	0					
ANR	1084084	ArgumentList	pageable		1083913	1					
ANR	1084085	Argument	pageable		1083913	0					
ANR	1084086	Identifier	pageable		1083913	0					
ANR	1084087	AndExpression	"CTX ( buffer ) && I . pager && * I . pager && CTX ( buffer_len ) > 0 && r_str_char_count ( CTX ( buffer ) , '\\n' ) >= I . rows"		1083913	1		&&			
ANR	1084088	CallExpression	CTX ( buffer )		1083913	0					
ANR	1084089	Callee	CTX		1083913	0					
ANR	1084090	Identifier	CTX		1083913	0					
ANR	1084091	ArgumentList	buffer		1083913	1					
ANR	1084092	Argument	buffer		1083913	0					
ANR	1084093	Identifier	buffer		1083913	0					
ANR	1084094	AndExpression	"I . pager && * I . pager && CTX ( buffer_len ) > 0 && r_str_char_count ( CTX ( buffer ) , '\\n' ) >= I . rows"		1083913	1		&&			
ANR	1084095	MemberAccess	I . pager		1083913	0					
ANR	1084096	Identifier	I		1083913	0					
ANR	1084097	Identifier	pager		1083913	1					
ANR	1084098	AndExpression	"* I . pager && CTX ( buffer_len ) > 0 && r_str_char_count ( CTX ( buffer ) , '\\n' ) >= I . rows"		1083913	1		&&			
ANR	1084099	UnaryOperationExpression	* I . pager		1083913	0					
ANR	1084100	UnaryOperator	*		1083913	0					
ANR	1084101	MemberAccess	I . pager		1083913	1					
ANR	1084102	Identifier	I		1083913	0					
ANR	1084103	Identifier	pager		1083913	1					
ANR	1084104	AndExpression	"CTX ( buffer_len ) > 0 && r_str_char_count ( CTX ( buffer ) , '\\n' ) >= I . rows"		1083913	1		&&			
ANR	1084105	RelationalExpression	CTX ( buffer_len ) > 0		1083913	0		>			
ANR	1084106	CallExpression	CTX ( buffer_len )		1083913	0					
ANR	1084107	Callee	CTX		1083913	0					
ANR	1084108	Identifier	CTX		1083913	0					
ANR	1084109	ArgumentList	buffer_len		1083913	1					
ANR	1084110	Argument	buffer_len		1083913	0					
ANR	1084111	Identifier	buffer_len		1083913	0					
ANR	1084112	PrimaryExpression	0		1083913	1					
ANR	1084113	RelationalExpression	"r_str_char_count ( CTX ( buffer ) , '\\n' ) >= I . rows"		1083913	1		>=			
ANR	1084114	CallExpression	"r_str_char_count ( CTX ( buffer ) , '\\n' )"		1083913	0					
ANR	1084115	Callee	r_str_char_count		1083913	0					
ANR	1084116	Identifier	r_str_char_count		1083913	0					
ANR	1084117	ArgumentList	CTX ( buffer )		1083913	1					
ANR	1084118	Argument	CTX ( buffer )		1083913	0					
ANR	1084119	CallExpression	CTX ( buffer )		1083913	0					
ANR	1084120	Callee	CTX		1083913	0					
ANR	1084121	Identifier	CTX		1083913	0					
ANR	1084122	ArgumentList	buffer		1083913	1					
ANR	1084123	Argument	buffer		1083913	0					
ANR	1084124	Identifier	buffer		1083913	0					
ANR	1084125	Argument	'\\n'		1083913	1					
ANR	1084126	PrimaryExpression	'\\n'		1083913	0					
ANR	1084127	MemberAccess	I . rows		1083913	1					
ANR	1084128	Identifier	I		1083913	0					
ANR	1084129	Identifier	rows		1083913	1					
ANR	1084130	CompoundStatement		24:136:722:722	1083913	1					
ANR	1084131	ExpressionStatement	I . context -> buffer [ I . context -> buffer_len - 1 ] = 0	892:3:20286:20334	1083913	0	True				
ANR	1084132	AssignmentExpression	I . context -> buffer [ I . context -> buffer_len - 1 ] = 0		1083913	0		=			
ANR	1084133	ArrayIndexing	I . context -> buffer [ I . context -> buffer_len - 1 ]		1083913	0					
ANR	1084134	PtrMemberAccess	I . context -> buffer		1083913	0					
ANR	1084135	MemberAccess	I . context		1083913	0					
ANR	1084136	Identifier	I		1083913	0					
ANR	1084137	Identifier	context		1083913	1					
ANR	1084138	Identifier	buffer		1083913	1					
ANR	1084139	AdditiveExpression	I . context -> buffer_len - 1		1083913	1		-			
ANR	1084140	PtrMemberAccess	I . context -> buffer_len		1083913	0					
ANR	1084141	MemberAccess	I . context		1083913	0					
ANR	1084142	Identifier	I		1083913	0					
ANR	1084143	Identifier	context		1083913	1					
ANR	1084144	Identifier	buffer_len		1083913	1					
ANR	1084145	PrimaryExpression	1		1083913	1					
ANR	1084146	PrimaryExpression	0		1083913	1					
ANR	1084147	IfStatement	"if ( ! strcmp ( I . pager , "".."" ) )"		1083913	1					
ANR	1084148	Condition	"! strcmp ( I . pager , "".."" )"	893:7:20343:20365	1083913	0	True				
ANR	1084149	UnaryOperationExpression	"! strcmp ( I . pager , "".."" )"		1083913	0					
ANR	1084150	UnaryOperator	!		1083913	0					
ANR	1084151	CallExpression	"strcmp ( I . pager , "".."" )"		1083913	1					
ANR	1084152	Callee	strcmp		1083913	0					
ANR	1084153	Identifier	strcmp		1083913	0					
ANR	1084154	ArgumentList	I . pager		1083913	1					
ANR	1084155	Argument	I . pager		1083913	0					
ANR	1084156	MemberAccess	I . pager		1083913	0					
ANR	1084157	Identifier	I		1083913	0					
ANR	1084158	Identifier	pager		1083913	1					
ANR	1084159	Argument	""".."""		1083913	1					
ANR	1084160	PrimaryExpression	""".."""		1083913	0					
ANR	1084161	CompoundStatement		27:4:815:870	1083913	1					
ANR	1084162	IdentifierDeclStatement	"char * str = r_str_ndup ( CTX ( buffer ) , CTX ( buffer_len ) ) ;"	894:4:20374:20429	1083913	0	True				
ANR	1084163	IdentifierDecl	"* str = r_str_ndup ( CTX ( buffer ) , CTX ( buffer_len ) )"		1083913	0					
ANR	1084164	IdentifierDeclType	char *		1083913	0					
ANR	1084165	Identifier	str		1083913	1					
ANR	1084166	AssignmentExpression	"* str = r_str_ndup ( CTX ( buffer ) , CTX ( buffer_len ) )"		1083913	2		=			
ANR	1084167	Identifier	str		1083913	0					
ANR	1084168	CallExpression	"r_str_ndup ( CTX ( buffer ) , CTX ( buffer_len ) )"		1083913	1					
ANR	1084169	Callee	r_str_ndup		1083913	0					
ANR	1084170	Identifier	r_str_ndup		1083913	0					
ANR	1084171	ArgumentList	CTX ( buffer )		1083913	1					
ANR	1084172	Argument	CTX ( buffer )		1083913	0					
ANR	1084173	CallExpression	CTX ( buffer )		1083913	0					
ANR	1084174	Callee	CTX		1083913	0					
ANR	1084175	Identifier	CTX		1083913	0					
ANR	1084176	ArgumentList	buffer		1083913	1					
ANR	1084177	Argument	buffer		1083913	0					
ANR	1084178	Identifier	buffer		1083913	0					
ANR	1084179	Argument	CTX ( buffer_len )		1083913	1					
ANR	1084180	CallExpression	CTX ( buffer_len )		1083913	0					
ANR	1084181	Callee	CTX		1083913	0					
ANR	1084182	Identifier	CTX		1083913	0					
ANR	1084183	ArgumentList	buffer_len		1083913	1					
ANR	1084184	Argument	buffer_len		1083913	0					
ANR	1084185	Identifier	buffer_len		1083913	0					
ANR	1084186	ExpressionStatement	CTX ( pageable ) = false	895:4:20435:20457	1083913	1	True				
ANR	1084187	AssignmentExpression	CTX ( pageable ) = false		1083913	0		=			
ANR	1084188	CallExpression	CTX ( pageable )		1083913	0					
ANR	1084189	Callee	CTX		1083913	0					
ANR	1084190	Identifier	CTX		1083913	0					
ANR	1084191	ArgumentList	pageable		1083913	1					
ANR	1084192	Argument	pageable		1083913	0					
ANR	1084193	Identifier	pageable		1083913	0					
ANR	1084194	Identifier	false		1083913	1					
ANR	1084195	ExpressionStatement	"r_cons_less_str ( str , NULL )"	896:4:20463:20490	1083913	2	True				
ANR	1084196	CallExpression	"r_cons_less_str ( str , NULL )"		1083913	0					
ANR	1084197	Callee	r_cons_less_str		1083913	0					
ANR	1084198	Identifier	r_cons_less_str		1083913	0					
ANR	1084199	ArgumentList	str		1083913	1					
ANR	1084200	Argument	str		1083913	0					
ANR	1084201	Identifier	str		1083913	0					
ANR	1084202	Argument	NULL		1083913	1					
ANR	1084203	Identifier	NULL		1083913	0					
ANR	1084204	ExpressionStatement	r_cons_reset ( )	897:4:20496:20511	1083913	3	True				
ANR	1084205	CallExpression	r_cons_reset ( )		1083913	0					
ANR	1084206	Callee	r_cons_reset		1083913	0					
ANR	1084207	Identifier	r_cons_reset		1083913	0					
ANR	1084208	ArgumentList			1083913	1					
ANR	1084209	ExpressionStatement	free ( str )	898:4:20517:20527	1083913	4	True				
ANR	1084210	CallExpression	free ( str )		1083913	0					
ANR	1084211	Callee	free		1083913	0					
ANR	1084212	Identifier	free		1083913	0					
ANR	1084213	ArgumentList	str		1083913	1					
ANR	1084214	Argument	str		1083913	0					
ANR	1084215	Identifier	str		1083913	0					
ANR	1084216	ReturnStatement	return ;	899:4:20533:20539	1083913	5	True				
ANR	1084217	ElseStatement	else		1083913	0					
ANR	1084218	CompoundStatement		33:10:992:992	1083913	0					
ANR	1084219	ExpressionStatement	"r_sys_cmd_str_full ( I . pager , CTX ( buffer ) , NULL , NULL , NULL )"	901:4:20557:20617	1083913	0	True				
ANR	1084220	CallExpression	"r_sys_cmd_str_full ( I . pager , CTX ( buffer ) , NULL , NULL , NULL )"		1083913	0					
ANR	1084221	Callee	r_sys_cmd_str_full		1083913	0					
ANR	1084222	Identifier	r_sys_cmd_str_full		1083913	0					
ANR	1084223	ArgumentList	I . pager		1083913	1					
ANR	1084224	Argument	I . pager		1083913	0					
ANR	1084225	MemberAccess	I . pager		1083913	0					
ANR	1084226	Identifier	I		1083913	0					
ANR	1084227	Identifier	pager		1083913	1					
ANR	1084228	Argument	CTX ( buffer )		1083913	1					
ANR	1084229	CallExpression	CTX ( buffer )		1083913	0					
ANR	1084230	Callee	CTX		1083913	0					
ANR	1084231	Identifier	CTX		1083913	0					
ANR	1084232	ArgumentList	buffer		1083913	1					
ANR	1084233	Argument	buffer		1083913	0					
ANR	1084234	Identifier	buffer		1083913	0					
ANR	1084235	Argument	NULL		1083913	2					
ANR	1084236	Identifier	NULL		1083913	0					
ANR	1084237	Argument	NULL		1083913	3					
ANR	1084238	Identifier	NULL		1083913	0					
ANR	1084239	Argument	NULL		1083913	4					
ANR	1084240	Identifier	NULL		1083913	0					
ANR	1084241	ExpressionStatement	r_cons_reset ( )	902:4:20623:20638	1083913	1	True				
ANR	1084242	CallExpression	r_cons_reset ( )		1083913	0					
ANR	1084243	Callee	r_cons_reset		1083913	0					
ANR	1084244	Identifier	r_cons_reset		1083913	0					
ANR	1084245	ArgumentList			1083913	1					
ANR	1084246	ElseStatement	else		1083913	0					
ANR	1084247	IfStatement	if ( I . context -> buffer_len > CONS_MAX_USER )		1083913	0					
ANR	1084248	Condition	I . context -> buffer_len > CONS_MAX_USER	904:13:20658:20694	1083913	0	True				
ANR	1084249	RelationalExpression	I . context -> buffer_len > CONS_MAX_USER		1083913	0		>			
ANR	1084250	PtrMemberAccess	I . context -> buffer_len		1083913	0					
ANR	1084251	MemberAccess	I . context		1083913	0					
ANR	1084252	Identifier	I		1083913	0					
ANR	1084253	Identifier	context		1083913	1					
ANR	1084254	Identifier	buffer_len		1083913	1					
ANR	1084255	Identifier	CONS_MAX_USER		1083913	1					
ANR	1084256	CompoundStatement		39:3:1159:1175	1083913	1					
ANR	1084257	IdentifierDeclStatement	"int i , lines = 0 ;"	906:3:20718:20734	1083913	0	True				
ANR	1084258	IdentifierDecl	i		1083913	0					
ANR	1084259	IdentifierDeclType	int		1083913	0					
ANR	1084260	Identifier	i		1083913	1					
ANR	1084261	IdentifierDecl	lines = 0		1083913	1					
ANR	1084262	IdentifierDeclType	int		1083913	0					
ANR	1084263	Identifier	lines		1083913	1					
ANR	1084264	AssignmentExpression	lines = 0		1083913	2		=			
ANR	1084265	Identifier	lines		1083913	0					
ANR	1084266	PrimaryExpression	0		1083913	1					
ANR	1084267	ForStatement	for ( i = 0 ; I . context -> buffer [ i ] ; i ++ )		1083913	1					
ANR	1084268	ForInit	i = 0 ;	907:8:20744:20749	1083913	0	True				
ANR	1084269	AssignmentExpression	i = 0		1083913	0		=			
ANR	1084270	Identifier	i		1083913	0					
ANR	1084271	PrimaryExpression	0		1083913	1					
ANR	1084272	Condition	I . context -> buffer [ i ]	907:15:20751:20770	1083913	1	True				
ANR	1084273	ArrayIndexing	I . context -> buffer [ i ]		1083913	0					
ANR	1084274	PtrMemberAccess	I . context -> buffer		1083913	0					
ANR	1084275	MemberAccess	I . context		1083913	0					
ANR	1084276	Identifier	I		1083913	0					
ANR	1084277	Identifier	context		1083913	1					
ANR	1084278	Identifier	buffer		1083913	1					
ANR	1084279	Identifier	i		1083913	1					
ANR	1084280	PostIncDecOperationExpression	i ++	907:37:20773:20775	1083913	2	True				
ANR	1084281	Identifier	i		1083913	0					
ANR	1084282	IncDec	++		1083913	1					
ANR	1084283	CompoundStatement		40:42:1219:1219	1083913	3					
ANR	1084284	IfStatement	if ( I . context -> buffer [ i ] == '\\n' )		1083913	0					
ANR	1084285	Condition	I . context -> buffer [ i ] == '\\n'	908:8:20788:20815	1083913	0	True				
ANR	1084286	EqualityExpression	I . context -> buffer [ i ] == '\\n'		1083913	0		==			
ANR	1084287	ArrayIndexing	I . context -> buffer [ i ]		1083913	0					
ANR	1084288	PtrMemberAccess	I . context -> buffer		1083913	0					
ANR	1084289	MemberAccess	I . context		1083913	0					
ANR	1084290	Identifier	I		1083913	0					
ANR	1084291	Identifier	context		1083913	1					
ANR	1084292	Identifier	buffer		1083913	1					
ANR	1084293	Identifier	i		1083913	1					
ANR	1084294	PrimaryExpression	'\\n'		1083913	1					
ANR	1084295	CompoundStatement		41:38:1259:1259	1083913	1					
ANR	1084296	ExpressionStatement	lines ++	909:5:20825:20833	1083913	0	True				
ANR	1084297	PostIncDecOperationExpression	lines ++		1083913	0					
ANR	1084298	Identifier	lines		1083913	0					
ANR	1084299	IncDec	++		1083913	1					
ANR	1084300	IfStatement	"if ( lines > 0 && ! r_cons_yesno ( 'n' , ""Do you want to print %d lines? (y/N)"" , lines ) )"		1083913	2					
ANR	1084301	Condition	"lines > 0 && ! r_cons_yesno ( 'n' , ""Do you want to print %d lines? (y/N)"" , lines )"	912:7:20853:20930	1083913	0	True				
ANR	1084302	AndExpression	"lines > 0 && ! r_cons_yesno ( 'n' , ""Do you want to print %d lines? (y/N)"" , lines )"		1083913	0		&&			
ANR	1084303	RelationalExpression	lines > 0		1083913	0		>			
ANR	1084304	Identifier	lines		1083913	0					
ANR	1084305	PrimaryExpression	0		1083913	1					
ANR	1084306	UnaryOperationExpression	"! r_cons_yesno ( 'n' , ""Do you want to print %d lines? (y/N)"" , lines )"		1083913	1					
ANR	1084307	UnaryOperator	!		1083913	0					
ANR	1084308	CallExpression	"r_cons_yesno ( 'n' , ""Do you want to print %d lines? (y/N)"" , lines )"		1083913	1					
ANR	1084309	Callee	r_cons_yesno		1083913	0					
ANR	1084310	Identifier	r_cons_yesno		1083913	0					
ANR	1084311	ArgumentList	'n'		1083913	1					
ANR	1084312	Argument	'n'		1083913	0					
ANR	1084313	PrimaryExpression	'n'		1083913	0					
ANR	1084314	Argument	"""Do you want to print %d lines? (y/N)"""		1083913	1					
ANR	1084315	PrimaryExpression	"""Do you want to print %d lines? (y/N)"""		1083913	0					
ANR	1084316	Argument	lines		1083913	2					
ANR	1084317	Identifier	lines		1083913	0					
ANR	1084318	CompoundStatement		45:87:1374:1374	1083913	1					
ANR	1084319	ExpressionStatement	r_cons_reset ( )	913:4:20939:20954	1083913	0	True				
ANR	1084320	CallExpression	r_cons_reset ( )		1083913	0					
ANR	1084321	Callee	r_cons_reset		1083913	0					
ANR	1084322	Identifier	r_cons_reset		1083913	0					
ANR	1084323	ArgumentList			1083913	1					
ANR	1084324	ReturnStatement	return ;	914:4:20960:20966	1083913	1	True				
ANR	1084325	ExpressionStatement	r_cons_set_raw ( true )	925:3:21209:21230	1083913	3	True				
ANR	1084326	CallExpression	r_cons_set_raw ( true )		1083913	0					
ANR	1084327	Callee	r_cons_set_raw		1083913	0					
ANR	1084328	Identifier	r_cons_set_raw		1083913	0					
ANR	1084329	ArgumentList	true		1083913	1					
ANR	1084330	Argument	true		1083913	0					
ANR	1084331	Identifier	true		1083913	0					
ANR	1084332	IfStatement	if ( tee && * tee )		1083913	6					
ANR	1084333	Condition	tee && * tee	928:5:21244:21254	1083913	0	True				
ANR	1084334	AndExpression	tee && * tee		1083913	0		&&			
ANR	1084335	Identifier	tee		1083913	0					
ANR	1084336	UnaryOperationExpression	* tee		1083913	1					
ANR	1084337	UnaryOperator	*		1083913	0					
ANR	1084338	Identifier	tee		1083913	1					
ANR	1084339	CompoundStatement		62:2:1702:1739	1083913	1					
ANR	1084340	IdentifierDeclStatement	"FILE * d = r_sandbox_fopen ( tee , ""a+"" ) ;"	929:2:21261:21298	1083913	0	True				
ANR	1084341	IdentifierDecl	"* d = r_sandbox_fopen ( tee , ""a+"" )"		1083913	0					
ANR	1084342	IdentifierDeclType	FILE *		1083913	0					
ANR	1084343	Identifier	d		1083913	1					
ANR	1084344	AssignmentExpression	"* d = r_sandbox_fopen ( tee , ""a+"" )"		1083913	2		=			
ANR	1084345	Identifier	d		1083913	0					
ANR	1084346	CallExpression	"r_sandbox_fopen ( tee , ""a+"" )"		1083913	1					
ANR	1084347	Callee	r_sandbox_fopen		1083913	0					
ANR	1084348	Identifier	r_sandbox_fopen		1083913	0					
ANR	1084349	ArgumentList	tee		1083913	1					
ANR	1084350	Argument	tee		1083913	0					
ANR	1084351	Identifier	tee		1083913	0					
ANR	1084352	Argument	"""a+"""		1083913	1					
ANR	1084353	PrimaryExpression	"""a+"""		1083913	0					
ANR	1084354	IfStatement	if ( d )		1083913	1					
ANR	1084355	Condition	d	930:6:21306:21306	1083913	0	True				
ANR	1084356	Identifier	d		1083913	0					
ANR	1084357	CompoundStatement		63:9:1750:1750	1083913	1					
ANR	1084358	IfStatement	"if ( I . context -> buffer_len != fwrite ( I . context -> buffer , 1 , I . context -> buffer_len , d ) )"		1083913	0					
ANR	1084359	Condition	"I . context -> buffer_len != fwrite ( I . context -> buffer , 1 , I . context -> buffer_len , d )"	931:7:21318:21397	1083913	0	True				
ANR	1084360	EqualityExpression	"I . context -> buffer_len != fwrite ( I . context -> buffer , 1 , I . context -> buffer_len , d )"		1083913	0		!=			
ANR	1084361	PtrMemberAccess	I . context -> buffer_len		1083913	0					
ANR	1084362	MemberAccess	I . context		1083913	0					
ANR	1084363	Identifier	I		1083913	0					
ANR	1084364	Identifier	context		1083913	1					
ANR	1084365	Identifier	buffer_len		1083913	1					
ANR	1084366	CallExpression	"fwrite ( I . context -> buffer , 1 , I . context -> buffer_len , d )"		1083913	1					
ANR	1084367	Callee	fwrite		1083913	0					
ANR	1084368	Identifier	fwrite		1083913	0					
ANR	1084369	ArgumentList	I . context -> buffer		1083913	1					
ANR	1084370	Argument	I . context -> buffer		1083913	0					
ANR	1084371	PtrMemberAccess	I . context -> buffer		1083913	0					
ANR	1084372	MemberAccess	I . context		1083913	0					
ANR	1084373	Identifier	I		1083913	0					
ANR	1084374	Identifier	context		1083913	1					
ANR	1084375	Identifier	buffer		1083913	1					
ANR	1084376	Argument	1		1083913	1					
ANR	1084377	PrimaryExpression	1		1083913	0					
ANR	1084378	Argument	I . context -> buffer_len		1083913	2					
ANR	1084379	PtrMemberAccess	I . context -> buffer_len		1083913	0					
ANR	1084380	MemberAccess	I . context		1083913	0					
ANR	1084381	Identifier	I		1083913	0					
ANR	1084382	Identifier	context		1083913	1					
ANR	1084383	Identifier	buffer_len		1083913	1					
ANR	1084384	Argument	d		1083913	3					
ANR	1084385	Identifier	d		1083913	0					
ANR	1084386	CompoundStatement		64:89:1841:1841	1083913	1					
ANR	1084387	ExpressionStatement	"eprintf ( ""r_cons_flush: fwrite: error (%s)\\n"" , tee )"	932:4:21406:21457	1083913	0	True				
ANR	1084388	CallExpression	"eprintf ( ""r_cons_flush: fwrite: error (%s)\\n"" , tee )"		1083913	0					
ANR	1084389	Callee	eprintf		1083913	0					
ANR	1084390	Identifier	eprintf		1083913	0					
ANR	1084391	ArgumentList	"""r_cons_flush: fwrite: error (%s)\\n"""		1083913	1					
ANR	1084392	Argument	"""r_cons_flush: fwrite: error (%s)\\n"""		1083913	0					
ANR	1084393	PrimaryExpression	"""r_cons_flush: fwrite: error (%s)\\n"""		1083913	0					
ANR	1084394	Argument	tee		1083913	1					
ANR	1084395	Identifier	tee		1083913	0					
ANR	1084396	ExpressionStatement	fclose ( d )	934:3:21467:21477	1083913	1	True				
ANR	1084397	CallExpression	fclose ( d )		1083913	0					
ANR	1084398	Callee	fclose		1083913	0					
ANR	1084399	Identifier	fclose		1083913	0					
ANR	1084400	ArgumentList	d		1083913	1					
ANR	1084401	Argument	d		1083913	0					
ANR	1084402	Identifier	d		1083913	0					
ANR	1084403	ElseStatement	else		1083913	0					
ANR	1084404	CompoundStatement		68:9:1929:1929	1083913	0					
ANR	1084405	ExpressionStatement	"eprintf ( ""Cannot write on '%s'\\n"" , tee )"	936:3:21493:21532	1083913	0	True				
ANR	1084406	CallExpression	"eprintf ( ""Cannot write on '%s'\\n"" , tee )"		1083913	0					
ANR	1084407	Callee	eprintf		1083913	0					
ANR	1084408	Identifier	eprintf		1083913	0					
ANR	1084409	ArgumentList	"""Cannot write on '%s'\\n"""		1083913	1					
ANR	1084410	Argument	"""Cannot write on '%s'\\n"""		1083913	0					
ANR	1084411	PrimaryExpression	"""Cannot write on '%s'\\n"""		1083913	0					
ANR	1084412	Argument	tee		1083913	1					
ANR	1084413	Identifier	tee		1083913	0					
ANR	1084414	ExpressionStatement	r_cons_highlight ( I . highlight )	939:1:21542:21572	1083913	7	True				
ANR	1084415	CallExpression	r_cons_highlight ( I . highlight )		1083913	0					
ANR	1084416	Callee	r_cons_highlight		1083913	0					
ANR	1084417	Identifier	r_cons_highlight		1083913	0					
ANR	1084418	ArgumentList	I . highlight		1083913	1					
ANR	1084419	Argument	I . highlight		1083913	0					
ANR	1084420	MemberAccess	I . highlight		1083913	0					
ANR	1084421	Identifier	I		1083913	0					
ANR	1084422	Identifier	highlight		1083913	1					
ANR	1084423	IfStatement	if ( r_cons_is_interactive ( ) && ! r_sandbox_enable ( false ) )		1083913	8					
ANR	1084424	Condition	r_cons_is_interactive ( ) && ! r_sandbox_enable ( false )	942:5:21631:21683	1083913	0	True				
ANR	1084425	AndExpression	r_cons_is_interactive ( ) && ! r_sandbox_enable ( false )		1083913	0		&&			
ANR	1084426	CallExpression	r_cons_is_interactive ( )		1083913	0					
ANR	1084427	Callee	r_cons_is_interactive		1083913	0					
ANR	1084428	Identifier	r_cons_is_interactive		1083913	0					
ANR	1084429	ArgumentList			1083913	1					
ANR	1084430	UnaryOperationExpression	! r_sandbox_enable ( false )		1083913	1					
ANR	1084431	UnaryOperator	!		1083913	0					
ANR	1084432	CallExpression	r_sandbox_enable ( false )		1083913	1					
ANR	1084433	Callee	r_sandbox_enable		1083913	0					
ANR	1084434	Identifier	r_sandbox_enable		1083913	0					
ANR	1084435	ArgumentList	false		1083913	1					
ANR	1084436	Argument	false		1083913	0					
ANR	1084437	Identifier	false		1083913	0					
ANR	1084438	CompoundStatement		75:60:2127:2127	1083913	1					
ANR	1084439	IfStatement	if ( I . linesleep > 0 && I . linesleep < 1000 )		1083913	0					
ANR	1084440	Condition	I . linesleep > 0 && I . linesleep < 1000	943:6:21694:21730	1083913	0	True				
ANR	1084441	AndExpression	I . linesleep > 0 && I . linesleep < 1000		1083913	0		&&			
ANR	1084442	RelationalExpression	I . linesleep > 0		1083913	0		>			
ANR	1084443	MemberAccess	I . linesleep		1083913	0					
ANR	1084444	Identifier	I		1083913	0					
ANR	1084445	Identifier	linesleep		1083913	1					
ANR	1084446	PrimaryExpression	0		1083913	1					
ANR	1084447	RelationalExpression	I . linesleep < 1000		1083913	1		<			
ANR	1084448	MemberAccess	I . linesleep		1083913	0					
ANR	1084449	Identifier	I		1083913	0					
ANR	1084450	Identifier	linesleep		1083913	1					
ANR	1084451	PrimaryExpression	1000		1083913	1					
ANR	1084452	CompoundStatement		81:3:2302:2333	1083913	1					
ANR	1084453	IdentifierDeclStatement	int i = 0 ;	944:3:21738:21747	1083913	0	True				
ANR	1084454	IdentifierDecl	i = 0		1083913	0					
ANR	1084455	IdentifierDeclType	int		1083913	0					
ANR	1084456	Identifier	i		1083913	1					
ANR	1084457	AssignmentExpression	i = 0		1083913	2		=			
ANR	1084458	Identifier	i		1083913	0					
ANR	1084459	PrimaryExpression	0		1083913	1					
ANR	1084460	IdentifierDeclStatement	"int pagesize = R_MAX ( 1 , I . pagesize ) ;"	945:3:21752:21788	1083913	1	True				
ANR	1084461	IdentifierDecl	"pagesize = R_MAX ( 1 , I . pagesize )"		1083913	0					
ANR	1084462	IdentifierDeclType	int		1083913	0					
ANR	1084463	Identifier	pagesize		1083913	1					
ANR	1084464	AssignmentExpression	"pagesize = R_MAX ( 1 , I . pagesize )"		1083913	2		=			
ANR	1084465	Identifier	pagesize		1083913	0					
ANR	1084466	CallExpression	"R_MAX ( 1 , I . pagesize )"		1083913	1					
ANR	1084467	Callee	R_MAX		1083913	0					
ANR	1084468	Identifier	R_MAX		1083913	0					
ANR	1084469	ArgumentList	1		1083913	1					
ANR	1084470	Argument	1		1083913	0					
ANR	1084471	PrimaryExpression	1		1083913	0					
ANR	1084472	Argument	I . pagesize		1083913	1					
ANR	1084473	MemberAccess	I . pagesize		1083913	0					
ANR	1084474	Identifier	I		1083913	0					
ANR	1084475	Identifier	pagesize		1083913	1					
ANR	1084476	IdentifierDeclStatement	char * ptr = I . context -> buffer ;	946:3:21793:21822	1083913	2	True				
ANR	1084477	IdentifierDecl	* ptr = I . context -> buffer		1083913	0					
ANR	1084478	IdentifierDeclType	char *		1083913	0					
ANR	1084479	Identifier	ptr		1083913	1					
ANR	1084480	AssignmentExpression	* ptr = I . context -> buffer		1083913	2		=			
ANR	1084481	Identifier	ptr		1083913	0					
ANR	1084482	PtrMemberAccess	I . context -> buffer		1083913	1					
ANR	1084483	MemberAccess	I . context		1083913	0					
ANR	1084484	Identifier	I		1083913	0					
ANR	1084485	Identifier	context		1083913	1					
ANR	1084486	Identifier	buffer		1083913	1					
ANR	1084487	IdentifierDeclStatement	"char * nl = strchr ( ptr , '\\n' ) ;"	947:3:21827:21856	1083913	3	True				
ANR	1084488	IdentifierDecl	"* nl = strchr ( ptr , '\\n' )"		1083913	0					
ANR	1084489	IdentifierDeclType	char *		1083913	0					
ANR	1084490	Identifier	nl		1083913	1					
ANR	1084491	AssignmentExpression	"* nl = strchr ( ptr , '\\n' )"		1083913	2		=			
ANR	1084492	Identifier	nl		1083913	0					
ANR	1084493	CallExpression	"strchr ( ptr , '\\n' )"		1083913	1					
ANR	1084494	Callee	strchr		1083913	0					
ANR	1084495	Identifier	strchr		1083913	0					
ANR	1084496	ArgumentList	ptr		1083913	1					
ANR	1084497	Argument	ptr		1083913	0					
ANR	1084498	Identifier	ptr		1083913	0					
ANR	1084499	Argument	'\\n'		1083913	1					
ANR	1084500	PrimaryExpression	'\\n'		1083913	0					
ANR	1084501	IdentifierDeclStatement	int len = I . context -> buffer_len ;	948:3:21861:21892	1083913	4	True				
ANR	1084502	IdentifierDecl	len = I . context -> buffer_len		1083913	0					
ANR	1084503	IdentifierDeclType	int		1083913	0					
ANR	1084504	Identifier	len		1083913	1					
ANR	1084505	AssignmentExpression	len = I . context -> buffer_len		1083913	2		=			
ANR	1084506	Identifier	len		1083913	0					
ANR	1084507	PtrMemberAccess	I . context -> buffer_len		1083913	1					
ANR	1084508	MemberAccess	I . context		1083913	0					
ANR	1084509	Identifier	I		1083913	0					
ANR	1084510	Identifier	context		1083913	1					
ANR	1084511	Identifier	buffer_len		1083913	1					
ANR	1084512	ExpressionStatement	I . context -> buffer [ I . context -> buffer_len ] = 0	949:3:21897:21941	1083913	5	True				
ANR	1084513	AssignmentExpression	I . context -> buffer [ I . context -> buffer_len ] = 0		1083913	0		=			
ANR	1084514	ArrayIndexing	I . context -> buffer [ I . context -> buffer_len ]		1083913	0					
ANR	1084515	PtrMemberAccess	I . context -> buffer		1083913	0					
ANR	1084516	MemberAccess	I . context		1083913	0					
ANR	1084517	Identifier	I		1083913	0					
ANR	1084518	Identifier	context		1083913	1					
ANR	1084519	Identifier	buffer		1083913	1					
ANR	1084520	PtrMemberAccess	I . context -> buffer_len		1083913	1					
ANR	1084521	MemberAccess	I . context		1083913	0					
ANR	1084522	Identifier	I		1083913	0					
ANR	1084523	Identifier	context		1083913	1					
ANR	1084524	Identifier	buffer_len		1083913	1					
ANR	1084525	PrimaryExpression	0		1083913	1					
ANR	1084526	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	950:3:21946:21976	1083913	6	True				
ANR	1084527	CallExpression	"r_cons_break_push ( NULL , NULL )"		1083913	0					
ANR	1084528	Callee	r_cons_break_push		1083913	0					
ANR	1084529	Identifier	r_cons_break_push		1083913	0					
ANR	1084530	ArgumentList	NULL		1083913	1					
ANR	1084531	Argument	NULL		1083913	0					
ANR	1084532	Identifier	NULL		1083913	0					
ANR	1084533	Argument	NULL		1083913	1					
ANR	1084534	Identifier	NULL		1083913	0					
ANR	1084535	WhileStatement	while ( nl && ! r_cons_is_breaked ( ) )		1083913	7					
ANR	1084536	Condition	nl && ! r_cons_is_breaked ( )	951:10:21988:22014	1083913	0	True				
ANR	1084537	AndExpression	nl && ! r_cons_is_breaked ( )		1083913	0		&&			
ANR	1084538	Identifier	nl		1083913	0					
ANR	1084539	UnaryOperationExpression	! r_cons_is_breaked ( )		1083913	1					
ANR	1084540	UnaryOperator	!		1083913	0					
ANR	1084541	CallExpression	r_cons_is_breaked ( )		1083913	1					
ANR	1084542	Callee	r_cons_is_breaked		1083913	0					
ANR	1084543	Identifier	r_cons_is_breaked		1083913	0					
ANR	1084544	ArgumentList			1083913	1					
ANR	1084545	CompoundStatement		84:39:2458:2458	1083913	1					
ANR	1084546	ExpressionStatement	"__cons_write ( ptr , nl - ptr + 1 )"	952:4:22023:22055	1083913	0	True				
ANR	1084547	CallExpression	"__cons_write ( ptr , nl - ptr + 1 )"		1083913	0					
ANR	1084548	Callee	__cons_write		1083913	0					
ANR	1084549	Identifier	__cons_write		1083913	0					
ANR	1084550	ArgumentList	ptr		1083913	1					
ANR	1084551	Argument	ptr		1083913	0					
ANR	1084552	Identifier	ptr		1083913	0					
ANR	1084553	Argument	nl - ptr + 1		1083913	1					
ANR	1084554	AdditiveExpression	nl - ptr + 1		1083913	0		-			
ANR	1084555	Identifier	nl		1083913	0					
ANR	1084556	AdditiveExpression	ptr + 1		1083913	1		+			
ANR	1084557	Identifier	ptr		1083913	0					
ANR	1084558	PrimaryExpression	1		1083913	1					
ANR	1084559	IfStatement	if ( ! ( i % pagesize ) )		1083913	1					
ANR	1084560	Condition	! ( i % pagesize )	953:8:22065:22079	1083913	0	True				
ANR	1084561	UnaryOperationExpression	! ( i % pagesize )		1083913	0					
ANR	1084562	UnaryOperator	!		1083913	0					
ANR	1084563	MultiplicativeExpression	i % pagesize		1083913	1		%			
ANR	1084564	Identifier	i		1083913	0					
ANR	1084565	Identifier	pagesize		1083913	1					
ANR	1084566	CompoundStatement		86:25:2523:2523	1083913	1					
ANR	1084567	ExpressionStatement	r_sys_usleep ( I . linesleep * 1000 )	954:5:22089:22122	1083913	0	True				
ANR	1084568	CallExpression	r_sys_usleep ( I . linesleep * 1000 )		1083913	0					
ANR	1084569	Callee	r_sys_usleep		1083913	0					
ANR	1084570	Identifier	r_sys_usleep		1083913	0					
ANR	1084571	ArgumentList	I . linesleep * 1000		1083913	1					
ANR	1084572	Argument	I . linesleep * 1000		1083913	0					
ANR	1084573	MultiplicativeExpression	I . linesleep * 1000		1083913	0		*			
ANR	1084574	MemberAccess	I . linesleep		1083913	0					
ANR	1084575	Identifier	I		1083913	0					
ANR	1084576	Identifier	linesleep		1083913	1					
ANR	1084577	PrimaryExpression	1000		1083913	1					
ANR	1084578	ExpressionStatement	ptr = nl + 1	956:4:22134:22146	1083913	2	True				
ANR	1084579	AssignmentExpression	ptr = nl + 1		1083913	0		=			
ANR	1084580	Identifier	ptr		1083913	0					
ANR	1084581	AdditiveExpression	nl + 1		1083913	1		+			
ANR	1084582	Identifier	nl		1083913	0					
ANR	1084583	PrimaryExpression	1		1083913	1					
ANR	1084584	ExpressionStatement	"nl = strchr ( ptr , '\\n' )"	957:4:22152:22175	1083913	3	True				
ANR	1084585	AssignmentExpression	"nl = strchr ( ptr , '\\n' )"		1083913	0		=			
ANR	1084586	Identifier	nl		1083913	0					
ANR	1084587	CallExpression	"strchr ( ptr , '\\n' )"		1083913	1					
ANR	1084588	Callee	strchr		1083913	0					
ANR	1084589	Identifier	strchr		1083913	0					
ANR	1084590	ArgumentList	ptr		1083913	1					
ANR	1084591	Argument	ptr		1083913	0					
ANR	1084592	Identifier	ptr		1083913	0					
ANR	1084593	Argument	'\\n'		1083913	1					
ANR	1084594	PrimaryExpression	'\\n'		1083913	0					
ANR	1084595	ExpressionStatement	i ++	958:4:22181:22184	1083913	4	True				
ANR	1084596	PostIncDecOperationExpression	i ++		1083913	0					
ANR	1084597	Identifier	i		1083913	0					
ANR	1084598	IncDec	++		1083913	1					
ANR	1084599	ExpressionStatement	"__cons_write ( ptr , I . context -> buffer + len - ptr )"	960:3:22194:22243	1083913	8	True				
ANR	1084600	CallExpression	"__cons_write ( ptr , I . context -> buffer + len - ptr )"		1083913	0					
ANR	1084601	Callee	__cons_write		1083913	0					
ANR	1084602	Identifier	__cons_write		1083913	0					
ANR	1084603	ArgumentList	ptr		1083913	1					
ANR	1084604	Argument	ptr		1083913	0					
ANR	1084605	Identifier	ptr		1083913	0					
ANR	1084606	Argument	I . context -> buffer + len - ptr		1083913	1					
ANR	1084607	AdditiveExpression	I . context -> buffer + len - ptr		1083913	0		+			
ANR	1084608	PtrMemberAccess	I . context -> buffer		1083913	0					
ANR	1084609	MemberAccess	I . context		1083913	0					
ANR	1084610	Identifier	I		1083913	0					
ANR	1084611	Identifier	context		1083913	1					
ANR	1084612	Identifier	buffer		1083913	1					
ANR	1084613	AdditiveExpression	len - ptr		1083913	1		-			
ANR	1084614	Identifier	len		1083913	0					
ANR	1084615	Identifier	ptr		1083913	1					
ANR	1084616	ExpressionStatement	r_cons_break_pop ( )	961:3:22248:22267	1083913	9	True				
ANR	1084617	CallExpression	r_cons_break_pop ( )		1083913	0					
ANR	1084618	Callee	r_cons_break_pop		1083913	0					
ANR	1084619	Identifier	r_cons_break_pop		1083913	0					
ANR	1084620	ArgumentList			1083913	1					
ANR	1084621	ElseStatement	else		1083913	0					
ANR	1084622	CompoundStatement		95:9:2719:2719	1083913	0					
ANR	1084623	ExpressionStatement	"__cons_write ( I . context -> buffer , I . context -> buffer_len )"	963:3:22283:22338	1083913	0	True				
ANR	1084624	CallExpression	"__cons_write ( I . context -> buffer , I . context -> buffer_len )"		1083913	0					
ANR	1084625	Callee	__cons_write		1083913	0					
ANR	1084626	Identifier	__cons_write		1083913	0					
ANR	1084627	ArgumentList	I . context -> buffer		1083913	1					
ANR	1084628	Argument	I . context -> buffer		1083913	0					
ANR	1084629	PtrMemberAccess	I . context -> buffer		1083913	0					
ANR	1084630	MemberAccess	I . context		1083913	0					
ANR	1084631	Identifier	I		1083913	0					
ANR	1084632	Identifier	context		1083913	1					
ANR	1084633	Identifier	buffer		1083913	1					
ANR	1084634	Argument	I . context -> buffer_len		1083913	1					
ANR	1084635	PtrMemberAccess	I . context -> buffer_len		1083913	0					
ANR	1084636	MemberAccess	I . context		1083913	0					
ANR	1084637	Identifier	I		1083913	0					
ANR	1084638	Identifier	context		1083913	1					
ANR	1084639	Identifier	buffer_len		1083913	1					
ANR	1084640	ElseStatement	else		1083913	0					
ANR	1084641	CompoundStatement		98:8:2793:2793	1083913	0					
ANR	1084642	ExpressionStatement	"__cons_write ( I . context -> buffer , I . context -> buffer_len )"	966:2:22356:22411	1083913	0	True				
ANR	1084643	CallExpression	"__cons_write ( I . context -> buffer , I . context -> buffer_len )"		1083913	0					
ANR	1084644	Callee	__cons_write		1083913	0					
ANR	1084645	Identifier	__cons_write		1083913	0					
ANR	1084646	ArgumentList	I . context -> buffer		1083913	1					
ANR	1084647	Argument	I . context -> buffer		1083913	0					
ANR	1084648	PtrMemberAccess	I . context -> buffer		1083913	0					
ANR	1084649	MemberAccess	I . context		1083913	0					
ANR	1084650	Identifier	I		1083913	0					
ANR	1084651	Identifier	context		1083913	1					
ANR	1084652	Identifier	buffer		1083913	1					
ANR	1084653	Argument	I . context -> buffer_len		1083913	1					
ANR	1084654	PtrMemberAccess	I . context -> buffer_len		1083913	0					
ANR	1084655	MemberAccess	I . context		1083913	0					
ANR	1084656	Identifier	I		1083913	0					
ANR	1084657	Identifier	context		1083913	1					
ANR	1084658	Identifier	buffer_len		1083913	1					
ANR	1084659	ExpressionStatement	r_cons_reset ( )	969:1:22418:22433	1083913	9	True				
ANR	1084660	CallExpression	r_cons_reset ( )		1083913	0					
ANR	1084661	Callee	r_cons_reset		1083913	0					
ANR	1084662	Identifier	r_cons_reset		1083913	0					
ANR	1084663	ArgumentList			1083913	1					
ANR	1084664	IfStatement	if ( I . newline )		1083913	10					
ANR	1084665	Condition	I . newline	970:5:22440:22448	1083913	0	True				
ANR	1084666	MemberAccess	I . newline		1083913	0					
ANR	1084667	Identifier	I		1083913	0					
ANR	1084668	Identifier	newline		1083913	1					
ANR	1084669	CompoundStatement		103:16:2892:2892	1083913	1					
ANR	1084670	ExpressionStatement	"eprintf ( ""\\n"" )"	971:2:22455:22469	1083913	0	True				
ANR	1084671	CallExpression	"eprintf ( ""\\n"" )"		1083913	0					
ANR	1084672	Callee	eprintf		1083913	0					
ANR	1084673	Identifier	eprintf		1083913	0					
ANR	1084674	ArgumentList	"""\\n"""		1083913	1					
ANR	1084675	Argument	"""\\n"""		1083913	0					
ANR	1084676	PrimaryExpression	"""\\n"""		1083913	0					
ANR	1084677	ExpressionStatement	I . newline = false	972:2:22473:22490	1083913	1	True				
ANR	1084678	AssignmentExpression	I . newline = false		1083913	0		=			
ANR	1084679	MemberAccess	I . newline		1083913	0					
ANR	1084680	Identifier	I		1083913	0					
ANR	1084681	Identifier	newline		1083913	1					
ANR	1084682	Identifier	false		1083913	1					
ANR	1084683	ReturnType	R_API void		1083913	1					
ANR	1084684	Identifier	r_cons_flush		1083913	2					
ANR	1084685	ParameterList			1083913	3					
ANR	1084686	CFGEntryNode	ENTRY		1083913		True				
ANR	1084687	CFGExitNode	EXIT		1083913		True				
ANR	1084688	Symbol	I . pager		1083913						
ANR	1084689	Symbol	I . null		1083913						
ANR	1084690	Symbol	* * I		1083913						
ANR	1084691	Symbol	CTX		1083913						
ANR	1084692	Symbol	CONS_MAX_USER		1083913						
ANR	1084693	Symbol	strchr		1083913						
ANR	1084694	Symbol	r_str_char_count		1083913						
ANR	1084695	Symbol	len		1083913						
ANR	1084696	Symbol	tee		1083913						
ANR	1084697	Symbol	buffer		1083913						
ANR	1084698	Symbol	strcmp		1083913						
ANR	1084699	Symbol	r_cons_is_interactive		1083913						
ANR	1084700	Symbol	* I . context -> buffer		1083913						
ANR	1084701	Symbol	NULL		1083913						
ANR	1084702	Symbol	I . noflush		1083913						
ANR	1084703	Symbol	lastMatters		1083913						
ANR	1084704	Symbol	pageable		1083913						
ANR	1084705	Symbol	* I . pager		1083913						
ANR	1084706	Symbol	I . context		1083913						
ANR	1084707	Symbol	str		1083913						
ANR	1084708	Symbol	buffer_len		1083913						
ANR	1084709	Symbol	I . rows		1083913						
ANR	1084710	Symbol	true		1083913						
ANR	1084711	Symbol	I . pagesize		1083913						
ANR	1084712	Symbol	nl		1083913						
ANR	1084713	Symbol	* * I . context		1083913						
ANR	1084714	Symbol	I . teefile		1083913						
ANR	1084715	Symbol	r_str_ndup		1083913						
ANR	1084716	Symbol	r_sandbox_enable		1083913						
ANR	1084717	Symbol	I		1083913						
ANR	1084718	Symbol	lastLength		1083913						
ANR	1084719	Symbol	r_cons_is_breaked		1083913						
ANR	1084720	Symbol	* I		1083913						
ANR	1084721	Symbol	I . highlight		1083913						
ANR	1084722	Symbol	I . newline		1083913						
ANR	1084723	Symbol	pagesize		1083913						
ANR	1084724	Symbol	lastMode		1083913						
ANR	1084725	Symbol	lines		1083913						
ANR	1084726	Symbol	malloc		1083913						
ANR	1084727	Symbol	d		1083913						
ANR	1084728	Symbol	I . context -> buffer_len		1083913						
ANR	1084729	Symbol	false		1083913						
ANR	1084730	Symbol	I . fdout		1083913						
ANR	1084731	Symbol	r_cons_yesno		1083913						
ANR	1084732	Symbol	i		1083913						
ANR	1084733	Symbol	fwrite		1083913						
ANR	1084734	Symbol	lastOutput		1083913						
ANR	1084735	Symbol	ptr		1083913						
ANR	1084736	Symbol	* I . context -> buffer_len		1083913						
ANR	1084737	Symbol	* I . context		1083913						
ANR	1084738	Symbol	* i		1083913						
ANR	1084739	Symbol	I . context -> buffer		1083913						
ANR	1084740	Symbol	R_MAX		1083913						
ANR	1084741	Symbol	r_sandbox_fopen		1083913						
ANR	1084742	Symbol	I . linesleep		1083913						
ANR	1084743	Symbol	* tee		1083913						
ANR	1084744	Function	r_cons_visual_flush	976:0:22498:23467							
ANR	1084745	FunctionDef	r_cons_visual_flush ()		1084744	0					
ANR	1084746	CompoundStatement		976:33:22531:23467	1084744	0					
ANR	1084747	IfStatement	if ( I . noflush )		1084744	0					
ANR	1084748	Condition	I . noflush	977:5:22538:22546	1084744	0	True				
ANR	1084749	MemberAccess	I . noflush		1084744	0					
ANR	1084750	Identifier	I		1084744	0					
ANR	1084751	Identifier	noflush		1084744	1					
ANR	1084752	CompoundStatement		2:16:17:17	1084744	1					
ANR	1084753	ReturnStatement	return ;	978:2:22553:22559	1084744	0	True				
ANR	1084754	ExpressionStatement	r_cons_highlight ( I . highlight )	980:1:22565:22595	1084744	1	True				
ANR	1084755	CallExpression	r_cons_highlight ( I . highlight )		1084744	0					
ANR	1084756	Callee	r_cons_highlight		1084744	0					
ANR	1084757	Identifier	r_cons_highlight		1084744	0					
ANR	1084758	ArgumentList	I . highlight		1084744	1					
ANR	1084759	Argument	I . highlight		1084744	0					
ANR	1084760	MemberAccess	I . highlight		1084744	0					
ANR	1084761	Identifier	I		1084744	0					
ANR	1084762	Identifier	highlight		1084744	1					
ANR	1084763	IfStatement	if ( ! I . null )		1084744	2					
ANR	1084764	Condition	! I . null	981:5:22602:22608	1084744	0	True				
ANR	1084765	UnaryOperationExpression	! I . null		1084744	0					
ANR	1084766	UnaryOperator	!		1084744	0					
ANR	1084767	MemberAccess	I . null		1084744	1					
ANR	1084768	Identifier	I		1084744	0					
ANR	1084769	Identifier	null		1084744	1					
ANR	1084770	CompoundStatement		6:14:79:79	1084744	1					
ANR	1084771	IfStatement	if ( I . ansicon )		1084744	0					
ANR	1084772	Condition	I . ansicon	984:6:22687:22695	1084744	0	True				
ANR	1084773	MemberAccess	I . ansicon		1084744	0					
ANR	1084774	Identifier	I		1084744	0					
ANR	1084775	Identifier	ansicon		1084744	1					
ANR	1084776	CompoundStatement		9:17:166:166	1084744	1					
ANR	1084777	ExpressionStatement	r_cons_visual_write ( I . context -> buffer )	985:3:22703:22742	1084744	0	True				
ANR	1084778	CallExpression	r_cons_visual_write ( I . context -> buffer )		1084744	0					
ANR	1084779	Callee	r_cons_visual_write		1084744	0					
ANR	1084780	Identifier	r_cons_visual_write		1084744	0					
ANR	1084781	ArgumentList	I . context -> buffer		1084744	1					
ANR	1084782	Argument	I . context -> buffer		1084744	0					
ANR	1084783	PtrMemberAccess	I . context -> buffer		1084744	0					
ANR	1084784	MemberAccess	I . context		1084744	0					
ANR	1084785	Identifier	I		1084744	0					
ANR	1084786	Identifier	context		1084744	1					
ANR	1084787	Identifier	buffer		1084744	1					
ANR	1084788	ElseStatement	else		1084744	0					
ANR	1084789	CompoundStatement		11:9:221:221	1084744	0					
ANR	1084790	ExpressionStatement	"r_cons_w32_print ( ( const ut8 * ) I . context -> buffer , I . context -> buffer_len , true )"	987:3:22758:22835	1084744	0	True				
ANR	1084791	CallExpression	"r_cons_w32_print ( ( const ut8 * ) I . context -> buffer , I . context -> buffer_len , true )"		1084744	0					
ANR	1084792	Callee	r_cons_w32_print		1084744	0					
ANR	1084793	Identifier	r_cons_w32_print		1084744	0					
ANR	1084794	ArgumentList	( const ut8 * ) I . context -> buffer		1084744	1					
ANR	1084795	Argument	( const ut8 * ) I . context -> buffer		1084744	0					
ANR	1084796	CastExpression	( const ut8 * ) I . context -> buffer		1084744	0					
ANR	1084797	CastTarget	const ut8 *		1084744	0					
ANR	1084798	PtrMemberAccess	I . context -> buffer		1084744	1					
ANR	1084799	MemberAccess	I . context		1084744	0					
ANR	1084800	Identifier	I		1084744	0					
ANR	1084801	Identifier	context		1084744	1					
ANR	1084802	Identifier	buffer		1084744	1					
ANR	1084803	Argument	I . context -> buffer_len		1084744	1					
ANR	1084804	PtrMemberAccess	I . context -> buffer_len		1084744	0					
ANR	1084805	MemberAccess	I . context		1084744	0					
ANR	1084806	Identifier	I		1084744	0					
ANR	1084807	Identifier	context		1084744	1					
ANR	1084808	Identifier	buffer_len		1084744	1					
ANR	1084809	Argument	true		1084744	2					
ANR	1084810	Identifier	true		1084744	0					
ANR	1084811	ExpressionStatement	r_cons_reset ( )	993:1:22901:22916	1084744	3	True				
ANR	1084812	CallExpression	r_cons_reset ( )		1084744	0					
ANR	1084813	Callee	r_cons_reset		1084744	0					
ANR	1084814	Identifier	r_cons_reset		1084744	0					
ANR	1084815	ArgumentList			1084744	1					
ANR	1084816	IfStatement	if ( I . fps )		1084744	4					
ANR	1084817	Condition	I . fps	994:5:22923:22927	1084744	0	True				
ANR	1084818	MemberAccess	I . fps		1084744	0					
ANR	1084819	Identifier	I		1084744	0					
ANR	1084820	Identifier	fps		1084744	1					
ANR	1084821	CompoundStatement		20:2:402:441	1084744	1					
ANR	1084822	IdentifierDeclStatement	"int fps = 0 , w = r_cons_get_size ( NULL ) ;"	995:2:22934:22973	1084744	0	True				
ANR	1084823	IdentifierDecl	fps = 0		1084744	0					
ANR	1084824	IdentifierDeclType	int		1084744	0					
ANR	1084825	Identifier	fps		1084744	1					
ANR	1084826	AssignmentExpression	fps = 0		1084744	2		=			
ANR	1084827	Identifier	fps		1084744	0					
ANR	1084828	PrimaryExpression	0		1084744	1					
ANR	1084829	IdentifierDecl	w = r_cons_get_size ( NULL )		1084744	1					
ANR	1084830	IdentifierDeclType	int		1084744	0					
ANR	1084831	Identifier	w		1084744	1					
ANR	1084832	AssignmentExpression	w = r_cons_get_size ( NULL )		1084744	2		=			
ANR	1084833	Identifier	w		1084744	0					
ANR	1084834	CallExpression	r_cons_get_size ( NULL )		1084744	1					
ANR	1084835	Callee	r_cons_get_size		1084744	0					
ANR	1084836	Identifier	r_cons_get_size		1084744	0					
ANR	1084837	ArgumentList	NULL		1084744	1					
ANR	1084838	Argument	NULL		1084744	0					
ANR	1084839	Identifier	NULL		1084744	0					
ANR	1084840	Statement	static	996:2:22977:22982	1084744	1	True				
ANR	1084841	Statement	ut64	996:9:22984:22987	1084744	2	True				
ANR	1084842	Statement	prev	996:14:22989:22992	1084744	3	True				
ANR	1084843	Statement	=	996:19:22994:22994	1084744	4	True				
ANR	1084844	Statement	0L	996:21:22996:22997	1084744	5	True				
ANR	1084845	ExpressionStatement	L	996:23:22998:22999	1084744	6	True				
ANR	1084846	Identifier	L		1084744	0					
ANR	1084847	ExpressionStatement	fps = 0	997:2:23019:23026	1084744	7	True				
ANR	1084848	AssignmentExpression	fps = 0		1084744	0		=			
ANR	1084849	Identifier	fps		1084744	0					
ANR	1084850	PrimaryExpression	0		1084744	1					
ANR	1084851	IfStatement	if ( prev )		1084744	8					
ANR	1084852	Condition	prev	998:6:23034:23037	1084744	0	True				
ANR	1084853	Identifier	prev		1084744	0					
ANR	1084854	CompoundStatement		25:3:541:571	1084744	1					
ANR	1084855	IdentifierDeclStatement	ut64 now = r_sys_now ( ) ;	999:3:23045:23068	1084744	0	True				
ANR	1084856	IdentifierDecl	now = r_sys_now ( )		1084744	0					
ANR	1084857	IdentifierDeclType	ut64		1084744	0					
ANR	1084858	Identifier	now		1084744	1					
ANR	1084859	AssignmentExpression	now = r_sys_now ( )		1084744	2		=			
ANR	1084860	Identifier	now		1084744	0					
ANR	1084861	CallExpression	r_sys_now ( )		1084744	1					
ANR	1084862	Callee	r_sys_now		1084744	0					
ANR	1084863	Identifier	r_sys_now		1084744	0					
ANR	1084864	ArgumentList			1084744	1					
ANR	1084865	IdentifierDeclStatement	st64 diff = ( st64 ) ( now - prev ) ;	1000:3:23073:23103	1084744	1	True				
ANR	1084866	IdentifierDecl	diff = ( st64 ) ( now - prev )		1084744	0					
ANR	1084867	IdentifierDeclType	st64		1084744	0					
ANR	1084868	Identifier	diff		1084744	1					
ANR	1084869	AssignmentExpression	diff = ( st64 ) ( now - prev )		1084744	2		=			
ANR	1084870	Identifier	diff		1084744	0					
ANR	1084871	CastExpression	( st64 ) ( now - prev )		1084744	1					
ANR	1084872	CastTarget	st64		1084744	0					
ANR	1084873	AdditiveExpression	now - prev		1084744	1		-			
ANR	1084874	Identifier	now		1084744	0					
ANR	1084875	Identifier	prev		1084744	1					
ANR	1084876	IfStatement	if ( diff < 0 )		1084744	2					
ANR	1084877	Condition	diff < 0	1001:7:23112:23119	1084744	0	True				
ANR	1084878	RelationalExpression	diff < 0		1084744	0		<			
ANR	1084879	Identifier	diff		1084744	0					
ANR	1084880	PrimaryExpression	0		1084744	1					
ANR	1084881	CompoundStatement		26:17:590:590	1084744	1					
ANR	1084882	ExpressionStatement	fps = 0	1002:4:23128:23135	1084744	0	True				
ANR	1084883	AssignmentExpression	fps = 0		1084744	0		=			
ANR	1084884	Identifier	fps		1084744	0					
ANR	1084885	PrimaryExpression	0		1084744	1					
ANR	1084886	ElseStatement	else		1084744	0					
ANR	1084887	CompoundStatement		28:10:615:615	1084744	0					
ANR	1084888	ExpressionStatement	fps = ( diff < 1000000 ) ? ( 1000000.0 / diff ) : 0	1004:4:23153:23196	1084744	0	True				
ANR	1084889	AssignmentExpression	fps = ( diff < 1000000 ) ? ( 1000000.0 / diff ) : 0		1084744	0		=			
ANR	1084890	Identifier	fps		1084744	0					
ANR	1084891	ConditionalExpression	( diff < 1000000 ) ? ( 1000000.0 / diff ) : 0		1084744	1					
ANR	1084892	Condition	diff < 1000000		1084744	0					
ANR	1084893	RelationalExpression	diff < 1000000		1084744	0		<			
ANR	1084894	Identifier	diff		1084744	0					
ANR	1084895	PrimaryExpression	1000000		1084744	1					
ANR	1084896	MultiplicativeExpression	1000000.0 / diff		1084744	1		/			
ANR	1084897	PrimaryExpression	1000000.0		1084744	0					
ANR	1084898	Identifier	diff		1084744	1					
ANR	1084899	PrimaryExpression	0		1084744	2					
ANR	1084900	ExpressionStatement	prev = now	1006:3:23206:23216	1084744	3	True				
ANR	1084901	AssignmentExpression	prev = now		1084744	0		=			
ANR	1084902	Identifier	prev		1084744	0					
ANR	1084903	Identifier	now		1084744	1					
ANR	1084904	ElseStatement	else		1084744	0					
ANR	1084905	CompoundStatement		32:9:695:695	1084744	0					
ANR	1084906	ExpressionStatement	prev = r_sys_now ( )	1008:3:23232:23251	1084744	0	True				
ANR	1084907	AssignmentExpression	prev = r_sys_now ( )		1084744	0		=			
ANR	1084908	Identifier	prev		1084744	0					
ANR	1084909	CallExpression	r_sys_now ( )		1084744	1					
ANR	1084910	Callee	r_sys_now		1084744	0					
ANR	1084911	Identifier	r_sys_now		1084744	0					
ANR	1084912	ArgumentList			1084744	1					
ANR	1084913	IfStatement	if ( I . ansicon )		1084744	9					
ANR	1084914	Condition	I . ansicon	1011:6:23282:23290	1084744	0	True				
ANR	1084915	MemberAccess	I . ansicon		1084744	0					
ANR	1084916	Identifier	I		1084744	0					
ANR	1084917	Identifier	ansicon		1084744	1					
ANR	1084918	CompoundStatement		36:17:761:761	1084744	1					
ANR	1084919	ExpressionStatement	"eprintf ( ""\\x1b[0;%dH[%d FPS] \\n"" , w - 10 , fps )"	1013:3:23305:23351	1084744	0	True				
ANR	1084920	CallExpression	"eprintf ( ""\\x1b[0;%dH[%d FPS] \\n"" , w - 10 , fps )"		1084744	0					
ANR	1084921	Callee	eprintf		1084744	0					
ANR	1084922	Identifier	eprintf		1084744	0					
ANR	1084923	ArgumentList	"""\\x1b[0;%dH[%d FPS] \\n"""		1084744	1					
ANR	1084924	Argument	"""\\x1b[0;%dH[%d FPS] \\n"""		1084744	0					
ANR	1084925	PrimaryExpression	"""\\x1b[0;%dH[%d FPS] \\n"""		1084744	0					
ANR	1084926	Argument	w - 10		1084744	1					
ANR	1084927	AdditiveExpression	w - 10		1084744	0		-			
ANR	1084928	Identifier	w		1084744	0					
ANR	1084929	PrimaryExpression	10		1084744	1					
ANR	1084930	Argument	fps		1084744	2					
ANR	1084931	Identifier	fps		1084744	0					
ANR	1084932	ElseStatement	else		1084744	0					
ANR	1084933	CompoundStatement		40:9:849:849	1084744	0					
ANR	1084934	ExpressionStatement	"r_cons_w32_gotoxy ( 2 , w - 10 , 0 )"	1016:3:23386:23418	1084744	0	True				
ANR	1084935	CallExpression	"r_cons_w32_gotoxy ( 2 , w - 10 , 0 )"		1084744	0					
ANR	1084936	Callee	r_cons_w32_gotoxy		1084744	0					
ANR	1084937	Identifier	r_cons_w32_gotoxy		1084744	0					
ANR	1084938	ArgumentList	2		1084744	1					
ANR	1084939	Argument	2		1084744	0					
ANR	1084940	PrimaryExpression	2		1084744	0					
ANR	1084941	Argument	w - 10		1084744	1					
ANR	1084942	AdditiveExpression	w - 10		1084744	0		-			
ANR	1084943	Identifier	w		1084744	0					
ANR	1084944	PrimaryExpression	10		1084744	1					
ANR	1084945	Argument	0		1084744	2					
ANR	1084946	PrimaryExpression	0		1084744	0					
ANR	1084947	ExpressionStatement	"eprintf ( ""[%d FPS] \\n"" , fps )"	1017:3:23423:23451	1084744	1	True				
ANR	1084948	CallExpression	"eprintf ( ""[%d FPS] \\n"" , fps )"		1084744	0					
ANR	1084949	Callee	eprintf		1084744	0					
ANR	1084950	Identifier	eprintf		1084744	0					
ANR	1084951	ArgumentList	"""[%d FPS] \\n"""		1084744	1					
ANR	1084952	Argument	"""[%d FPS] \\n"""		1084744	0					
ANR	1084953	PrimaryExpression	"""[%d FPS] \\n"""		1084744	0					
ANR	1084954	Argument	fps		1084744	1					
ANR	1084955	Identifier	fps		1084744	0					
ANR	1084956	ReturnType	R_API void		1084744	1					
ANR	1084957	Identifier	r_cons_visual_flush		1084744	2					
ANR	1084958	ParameterList			1084744	3					
ANR	1084959	CFGEntryNode	ENTRY		1084744		True				
ANR	1084960	CFGExitNode	EXIT		1084744		True				
ANR	1084961	Symbol	I . null		1084744						
ANR	1084962	Symbol	NULL		1084744						
ANR	1084963	Symbol	I . noflush		1084744						
ANR	1084964	Symbol	I . context -> buffer_len		1084744						
ANR	1084965	Symbol	r_cons_get_size		1084744						
ANR	1084966	Symbol	r_sys_now		1084744						
ANR	1084967	Symbol	prev		1084744						
ANR	1084968	Symbol	fps		1084744						
ANR	1084969	Symbol	I		1084744						
ANR	1084970	Symbol	diff		1084744						
ANR	1084971	Symbol	I . context		1084744						
ANR	1084972	Symbol	* I . context		1084744						
ANR	1084973	Symbol	* I		1084744						
ANR	1084974	Symbol	I . highlight		1084744						
ANR	1084975	Symbol	I . context -> buffer		1084744						
ANR	1084976	Symbol	w		1084744						
ANR	1084977	Symbol	now		1084744						
ANR	1084978	Symbol	true		1084744						
ANR	1084979	Symbol	I . fps		1084744						
ANR	1084980	Symbol	I . ansicon		1084744						
ANR	1084981	Function	real_strlen	1023:0:23470:23676							
ANR	1084982	FunctionDef	"real_strlen (const char * ptr , int len)"		1084981	0					
ANR	1084983	CompoundStatement		1023:49:23519:23676	1084981	0					
ANR	1084984	IdentifierDeclStatement	int utf8len = r_str_len_utf8 ( ptr ) ;	1024:1:23522:23556	1084981	0	True				
ANR	1084985	IdentifierDecl	utf8len = r_str_len_utf8 ( ptr )		1084981	0					
ANR	1084986	IdentifierDeclType	int		1084981	0					
ANR	1084987	Identifier	utf8len		1084981	1					
ANR	1084988	AssignmentExpression	utf8len = r_str_len_utf8 ( ptr )		1084981	2		=			
ANR	1084989	Identifier	utf8len		1084981	0					
ANR	1084990	CallExpression	r_str_len_utf8 ( ptr )		1084981	1					
ANR	1084991	Callee	r_str_len_utf8		1084981	0					
ANR	1084992	Identifier	r_str_len_utf8		1084981	0					
ANR	1084993	ArgumentList	ptr		1084981	1					
ANR	1084994	Argument	ptr		1084981	0					
ANR	1084995	Identifier	ptr		1084981	0					
ANR	1084996	IdentifierDeclStatement	int ansilen = r_str_ansi_len ( ptr ) ;	1025:1:23559:23593	1084981	1	True				
ANR	1084997	IdentifierDecl	ansilen = r_str_ansi_len ( ptr )		1084981	0					
ANR	1084998	IdentifierDeclType	int		1084981	0					
ANR	1084999	Identifier	ansilen		1084981	1					
ANR	1085000	AssignmentExpression	ansilen = r_str_ansi_len ( ptr )		1084981	2		=			
ANR	1085001	Identifier	ansilen		1084981	0					
ANR	1085002	CallExpression	r_str_ansi_len ( ptr )		1084981	1					
ANR	1085003	Callee	r_str_ansi_len		1084981	0					
ANR	1085004	Identifier	r_str_ansi_len		1084981	0					
ANR	1085005	ArgumentList	ptr		1084981	1					
ANR	1085006	Argument	ptr		1084981	0					
ANR	1085007	Identifier	ptr		1084981	0					
ANR	1085008	IdentifierDeclStatement	int diff = len - utf8len ;	1026:1:23596:23620	1084981	2	True				
ANR	1085009	IdentifierDecl	diff = len - utf8len		1084981	0					
ANR	1085010	IdentifierDeclType	int		1084981	0					
ANR	1085011	Identifier	diff		1084981	1					
ANR	1085012	AssignmentExpression	diff = len - utf8len		1084981	2		=			
ANR	1085013	Identifier	diff		1084981	0					
ANR	1085014	AdditiveExpression	len - utf8len		1084981	1		-			
ANR	1085015	Identifier	len		1084981	0					
ANR	1085016	Identifier	utf8len		1084981	1					
ANR	1085017	IfStatement	if ( diff > 0 )		1084981	3					
ANR	1085018	Condition	diff > 0	1027:5:23627:23634	1084981	0	True				
ANR	1085019	RelationalExpression	diff > 0		1084981	0		>			
ANR	1085020	Identifier	diff		1084981	0					
ANR	1085021	PrimaryExpression	0		1084981	1					
ANR	1085022	CompoundStatement		5:15:117:117	1084981	1					
ANR	1085023	ExpressionStatement	diff --	1028:2:23641:23647	1084981	0	True				
ANR	1085024	PostIncDecOperationExpression	diff --		1084981	0					
ANR	1085025	Identifier	diff		1084981	0					
ANR	1085026	IncDec	--		1084981	1					
ANR	1085027	ReturnStatement	return ansilen - diff ;	1030:1:23653:23674	1084981	4	True				
ANR	1085028	AdditiveExpression	ansilen - diff		1084981	0		-			
ANR	1085029	Identifier	ansilen		1084981	0					
ANR	1085030	Identifier	diff		1084981	1					
ANR	1085031	ReturnType	static int		1084981	1					
ANR	1085032	Identifier	real_strlen		1084981	2					
ANR	1085033	ParameterList	"const char * ptr , int len"		1084981	3					
ANR	1085034	Parameter	const char * ptr	1023:23:23493:23507	1084981	0	True				
ANR	1085035	ParameterType	const char *		1084981	0					
ANR	1085036	Identifier	ptr		1084981	1					
ANR	1085037	Parameter	int len	1023:40:23510:23516	1084981	1	True				
ANR	1085038	ParameterType	int		1084981	0					
ANR	1085039	Identifier	len		1084981	1					
ANR	1085040	CFGEntryNode	ENTRY		1084981		True				
ANR	1085041	CFGExitNode	EXIT		1084981		True				
ANR	1085042	Symbol	r_str_len_utf8		1084981						
ANR	1085043	Symbol	len		1084981						
ANR	1085044	Symbol	ansilen		1084981						
ANR	1085045	Symbol	utf8len		1084981						
ANR	1085046	Symbol	r_str_ansi_len		1084981						
ANR	1085047	Symbol	diff		1084981						
ANR	1085048	Symbol	ptr		1084981						
ANR	1085049	Function	r_cons_visual_write	1033:0:23679:25429							
ANR	1085050	FunctionDef	r_cons_visual_write (char * buffer)		1085049	0					
ANR	1085051	CompoundStatement		1033:45:23724:25429	1085049	0					
ANR	1085052	IdentifierDeclStatement	char white [ 1024 ] ;	1034:1:23727:23743	1085049	0	True				
ANR	1085053	IdentifierDecl	white [ 1024 ]		1085049	0					
ANR	1085054	IdentifierDeclType	char [ 1024 ]		1085049	0					
ANR	1085055	Identifier	white		1085049	1					
ANR	1085056	PrimaryExpression	1024		1085049	2					
ANR	1085057	IdentifierDeclStatement	int cols = I . columns ;	1035:1:23746:23766	1085049	1	True				
ANR	1085058	IdentifierDecl	cols = I . columns		1085049	0					
ANR	1085059	IdentifierDeclType	int		1085049	0					
ANR	1085060	Identifier	cols		1085049	1					
ANR	1085061	AssignmentExpression	cols = I . columns		1085049	2		=			
ANR	1085062	Identifier	cols		1085049	0					
ANR	1085063	MemberAccess	I . columns		1085049	1					
ANR	1085064	Identifier	I		1085049	0					
ANR	1085065	Identifier	columns		1085049	1					
ANR	1085066	IdentifierDeclStatement	"int alen , plen , lines = I . rows ;"	1036:1:23769:23799	1085049	2	True				
ANR	1085067	IdentifierDecl	alen		1085049	0					
ANR	1085068	IdentifierDeclType	int		1085049	0					
ANR	1085069	Identifier	alen		1085049	1					
ANR	1085070	IdentifierDecl	plen		1085049	1					
ANR	1085071	IdentifierDeclType	int		1085049	0					
ANR	1085072	Identifier	plen		1085049	1					
ANR	1085073	IdentifierDecl	lines = I . rows		1085049	2					
ANR	1085074	IdentifierDeclType	int		1085049	0					
ANR	1085075	Identifier	lines		1085049	1					
ANR	1085076	AssignmentExpression	lines = I . rows		1085049	2		=			
ANR	1085077	Identifier	lines		1085049	0					
ANR	1085078	MemberAccess	I . rows		1085049	1					
ANR	1085079	Identifier	I		1085049	0					
ANR	1085080	Identifier	rows		1085049	1					
ANR	1085081	IdentifierDeclStatement	bool break_lines = I . break_lines ;	1037:1:23802:23834	1085049	3	True				
ANR	1085082	IdentifierDecl	break_lines = I . break_lines		1085049	0					
ANR	1085083	IdentifierDeclType	bool		1085049	0					
ANR	1085084	Identifier	break_lines		1085049	1					
ANR	1085085	AssignmentExpression	break_lines = I . break_lines		1085049	2		=			
ANR	1085086	Identifier	break_lines		1085049	0					
ANR	1085087	MemberAccess	I . break_lines		1085049	1					
ANR	1085088	Identifier	I		1085049	0					
ANR	1085089	Identifier	break_lines		1085049	1					
ANR	1085090	IdentifierDeclStatement	const char * endptr ;	1038:1:23837:23855	1085049	4	True				
ANR	1085091	IdentifierDecl	* endptr		1085049	0					
ANR	1085092	IdentifierDeclType	const char *		1085049	0					
ANR	1085093	Identifier	endptr		1085049	1					
ANR	1085094	IdentifierDeclStatement	"char * nl , * ptr = buffer , * pptr ;"	1039:1:23858:23888	1085049	5	True				
ANR	1085095	IdentifierDecl	* nl		1085049	0					
ANR	1085096	IdentifierDeclType	char *		1085049	0					
ANR	1085097	Identifier	nl		1085049	1					
ANR	1085098	IdentifierDecl	* ptr = buffer		1085049	1					
ANR	1085099	IdentifierDeclType	char *		1085049	0					
ANR	1085100	Identifier	ptr		1085049	1					
ANR	1085101	AssignmentExpression	* ptr = buffer		1085049	2		=			
ANR	1085102	Identifier	buffer		1085049	0					
ANR	1085103	Identifier	buffer		1085049	1					
ANR	1085104	IdentifierDecl	* pptr		1085049	2					
ANR	1085105	IdentifierDeclType	char *		1085049	0					
ANR	1085106	Identifier	pptr		1085049	1					
ANR	1085107	IfStatement	if ( I . null )		1085049	6					
ANR	1085108	Condition	I . null	1041:5:23896:23901	1085049	0	True				
ANR	1085109	MemberAccess	I . null		1085049	0					
ANR	1085110	Identifier	I		1085049	0					
ANR	1085111	Identifier	null		1085049	1					
ANR	1085112	CompoundStatement		9:13:179:179	1085049	1					
ANR	1085113	ReturnStatement	return ;	1042:2:23908:23914	1085049	0	True				
ANR	1085114	ExpressionStatement	"memset ( & white , ' ' , sizeof ( white ) )"	1044:1:23920:23956	1085049	7	True				
ANR	1085115	CallExpression	"memset ( & white , ' ' , sizeof ( white ) )"		1085049	0					
ANR	1085116	Callee	memset		1085049	0					
ANR	1085117	Identifier	memset		1085049	0					
ANR	1085118	ArgumentList	& white		1085049	1					
ANR	1085119	Argument	& white		1085049	0					
ANR	1085120	UnaryOperationExpression	& white		1085049	0					
ANR	1085121	UnaryOperator	&		1085049	0					
ANR	1085122	Identifier	white		1085049	1					
ANR	1085123	Argument	' '		1085049	1					
ANR	1085124	PrimaryExpression	' '		1085049	0					
ANR	1085125	Argument	sizeof ( white )		1085049	2					
ANR	1085126	SizeofExpression	sizeof ( white )		1085049	0					
ANR	1085127	Sizeof	sizeof		1085049	0					
ANR	1085128	SizeofOperand	white		1085049	1					
ANR	1085129	WhileStatement	"while ( ( nl = strchr ( ptr , '\\n' ) ) )"		1085049	8					
ANR	1085130	Condition	"nl = strchr ( ptr , '\\n' )"	1045:8:23966:23990	1085049	0	True				
ANR	1085131	AssignmentExpression	"nl = strchr ( ptr , '\\n' )"		1085049	0		=			
ANR	1085132	Identifier	nl		1085049	0					
ANR	1085133	CallExpression	"strchr ( ptr , '\\n' )"		1085049	1					
ANR	1085134	Callee	strchr		1085049	0					
ANR	1085135	Identifier	strchr		1085049	0					
ANR	1085136	ArgumentList	ptr		1085049	1					
ANR	1085137	Argument	ptr		1085049	0					
ANR	1085138	Identifier	ptr		1085049	0					
ANR	1085139	Argument	'\\n'		1085049	1					
ANR	1085140	PrimaryExpression	'\\n'		1085049	0					
ANR	1085141	CompoundStatement		15:2:311:331	1085049	1					
ANR	1085142	IdentifierDeclStatement	int len = ( ( int ) ( size_t ) ( nl - ptr ) ) + 1 ;	1046:2:23997:24032	1085049	0	True				
ANR	1085143	IdentifierDecl	len = ( ( int ) ( size_t ) ( nl - ptr ) ) + 1		1085049	0					
ANR	1085144	IdentifierDeclType	int		1085049	0					
ANR	1085145	Identifier	len		1085049	1					
ANR	1085146	AssignmentExpression	len = ( ( int ) ( size_t ) ( nl - ptr ) ) + 1		1085049	2		=			
ANR	1085147	Identifier	len		1085049	0					
ANR	1085148	AdditiveExpression	( ( int ) ( size_t ) ( nl - ptr ) ) + 1		1085049	1		+			
ANR	1085149	CastExpression	( int ) ( size_t ) ( nl - ptr )		1085049	0					
ANR	1085150	CastTarget	int		1085049	0					
ANR	1085151	CastExpression	( size_t ) ( nl - ptr )		1085049	1					
ANR	1085152	CastTarget	size_t		1085049	0					
ANR	1085153	AdditiveExpression	nl - ptr		1085049	1		-			
ANR	1085154	Identifier	nl		1085049	0					
ANR	1085155	Identifier	ptr		1085049	1					
ANR	1085156	PrimaryExpression	1		1085049	1					
ANR	1085157	IdentifierDeclStatement	int lines_needed = 0 ;	1047:2:24036:24056	1085049	1	True				
ANR	1085158	IdentifierDecl	lines_needed = 0		1085049	0					
ANR	1085159	IdentifierDeclType	int		1085049	0					
ANR	1085160	Identifier	lines_needed		1085049	1					
ANR	1085161	AssignmentExpression	lines_needed = 0		1085049	2		=			
ANR	1085162	Identifier	lines_needed		1085049	0					
ANR	1085163	PrimaryExpression	0		1085049	1					
ANR	1085164	ExpressionStatement	* nl = 0	1049:2:24061:24068	1085049	2	True				
ANR	1085165	AssignmentExpression	* nl = 0		1085049	0		=			
ANR	1085166	UnaryOperationExpression	* nl		1085049	0					
ANR	1085167	UnaryOperator	*		1085049	0					
ANR	1085168	Identifier	nl		1085049	1					
ANR	1085169	PrimaryExpression	0		1085049	1					
ANR	1085170	ExpressionStatement	"alen = real_strlen ( ptr , len )"	1050:2:24072:24101	1085049	3	True				
ANR	1085171	AssignmentExpression	"alen = real_strlen ( ptr , len )"		1085049	0		=			
ANR	1085172	Identifier	alen		1085049	0					
ANR	1085173	CallExpression	"real_strlen ( ptr , len )"		1085049	1					
ANR	1085174	Callee	real_strlen		1085049	0					
ANR	1085175	Identifier	real_strlen		1085049	0					
ANR	1085176	ArgumentList	ptr		1085049	1					
ANR	1085177	Argument	ptr		1085049	0					
ANR	1085178	Identifier	ptr		1085049	0					
ANR	1085179	Argument	len		1085049	1					
ANR	1085180	Identifier	len		1085049	0					
ANR	1085181	ExpressionStatement	* nl = '\\n'	1051:2:24105:24115	1085049	4	True				
ANR	1085182	AssignmentExpression	* nl = '\\n'		1085049	0		=			
ANR	1085183	UnaryOperationExpression	* nl		1085049	0					
ANR	1085184	UnaryOperator	*		1085049	0					
ANR	1085185	Identifier	nl		1085049	1					
ANR	1085186	PrimaryExpression	'\\n'		1085049	1					
ANR	1085187	ExpressionStatement	pptr = ptr > buffer ? ptr - 1 : ptr	1052:2:24119:24154	1085049	5	True				
ANR	1085188	AssignmentExpression	pptr = ptr > buffer ? ptr - 1 : ptr		1085049	0		=			
ANR	1085189	Identifier	pptr		1085049	0					
ANR	1085190	ConditionalExpression	ptr > buffer ? ptr - 1 : ptr		1085049	1					
ANR	1085191	Condition	ptr > buffer		1085049	0					
ANR	1085192	RelationalExpression	ptr > buffer		1085049	0		>			
ANR	1085193	Identifier	ptr		1085049	0					
ANR	1085194	Identifier	buffer		1085049	1					
ANR	1085195	AdditiveExpression	ptr - 1		1085049	1		-			
ANR	1085196	Identifier	ptr		1085049	0					
ANR	1085197	PrimaryExpression	1		1085049	1					
ANR	1085198	Identifier	ptr		1085049	2					
ANR	1085199	ExpressionStatement	plen = ptr > buffer ? len : len - 1	1053:2:24158:24193	1085049	6	True				
ANR	1085200	AssignmentExpression	plen = ptr > buffer ? len : len - 1		1085049	0		=			
ANR	1085201	Identifier	plen		1085049	0					
ANR	1085202	ConditionalExpression	ptr > buffer ? len : len - 1		1085049	1					
ANR	1085203	Condition	ptr > buffer		1085049	0					
ANR	1085204	RelationalExpression	ptr > buffer		1085049	0		>			
ANR	1085205	Identifier	ptr		1085049	0					
ANR	1085206	Identifier	buffer		1085049	1					
ANR	1085207	Identifier	len		1085049	1					
ANR	1085208	AdditiveExpression	len - 1		1085049	2		-			
ANR	1085209	Identifier	len		1085049	0					
ANR	1085210	PrimaryExpression	1		1085049	1					
ANR	1085211	IfStatement	if ( break_lines )		1085049	7					
ANR	1085212	Condition	break_lines	1055:6:24202:24212	1085049	0	True				
ANR	1085213	Identifier	break_lines		1085049	0					
ANR	1085214	CompoundStatement		23:19:490:490	1085049	1					
ANR	1085215	ExpressionStatement	lines_needed = alen / cols + ( alen % cols == 0 ? 0 : 1 )	1056:3:24220:24275	1085049	0	True				
ANR	1085216	AssignmentExpression	lines_needed = alen / cols + ( alen % cols == 0 ? 0 : 1 )		1085049	0		=			
ANR	1085217	Identifier	lines_needed		1085049	0					
ANR	1085218	AdditiveExpression	alen / cols + ( alen % cols == 0 ? 0 : 1 )		1085049	1		+			
ANR	1085219	MultiplicativeExpression	alen / cols		1085049	0		/			
ANR	1085220	Identifier	alen		1085049	0					
ANR	1085221	Identifier	cols		1085049	1					
ANR	1085222	ConditionalExpression	alen % cols == 0 ? 0 : 1		1085049	1					
ANR	1085223	Condition	alen % cols == 0		1085049	0					
ANR	1085224	EqualityExpression	alen % cols == 0		1085049	0		==			
ANR	1085225	MultiplicativeExpression	alen % cols		1085049	0		%			
ANR	1085226	Identifier	alen		1085049	0					
ANR	1085227	Identifier	cols		1085049	1					
ANR	1085228	PrimaryExpression	0		1085049	1					
ANR	1085229	PrimaryExpression	0		1085049	1					
ANR	1085230	PrimaryExpression	1		1085049	2					
ANR	1085231	IfStatement	if ( ( break_lines && lines < lines_needed && lines > 0 ) || ( ! break_lines && alen > cols ) )		1085049	8					
ANR	1085232	Condition	( break_lines && lines < lines_needed && lines > 0 ) || ( ! break_lines && alen > cols )	1058:6:24287:24375	1085049	0	True				
ANR	1085233	OrExpression	( break_lines && lines < lines_needed && lines > 0 ) || ( ! break_lines && alen > cols )		1085049	0		||			
ANR	1085234	AndExpression	break_lines && lines < lines_needed && lines > 0		1085049	0		&&			
ANR	1085235	Identifier	break_lines		1085049	0					
ANR	1085236	AndExpression	lines < lines_needed && lines > 0		1085049	1		&&			
ANR	1085237	RelationalExpression	lines < lines_needed		1085049	0		<			
ANR	1085238	Identifier	lines		1085049	0					
ANR	1085239	Identifier	lines_needed		1085049	1					
ANR	1085240	RelationalExpression	lines > 0		1085049	1		>			
ANR	1085241	Identifier	lines		1085049	0					
ANR	1085242	PrimaryExpression	0		1085049	1					
ANR	1085243	AndExpression	! break_lines && alen > cols		1085049	1		&&			
ANR	1085244	UnaryOperationExpression	! break_lines		1085049	0					
ANR	1085245	UnaryOperator	!		1085049	0					
ANR	1085246	Identifier	break_lines		1085049	1					
ANR	1085247	RelationalExpression	alen > cols		1085049	1		>			
ANR	1085248	Identifier	alen		1085049	0					
ANR	1085249	Identifier	cols		1085049	1					
ANR	1085250	CompoundStatement		28:3:658:672	1085049	1					
ANR	1085251	IdentifierDeclStatement	int olen = len ;	1060:3:24383:24397	1085049	0	True				
ANR	1085252	IdentifierDecl	olen = len		1085049	0					
ANR	1085253	IdentifierDeclType	int		1085049	0					
ANR	1085254	Identifier	olen		1085049	1					
ANR	1085255	AssignmentExpression	olen = len		1085049	2		=			
ANR	1085256	Identifier	len		1085049	0					
ANR	1085257	Identifier	len		1085049	1					
ANR	1085258	ExpressionStatement	"endptr = r_str_ansi_chrn ( ptr , ( break_lines ? cols * lines : cols ) + 1 )"	1061:3:24402:24473	1085049	1	True				
ANR	1085259	AssignmentExpression	"endptr = r_str_ansi_chrn ( ptr , ( break_lines ? cols * lines : cols ) + 1 )"		1085049	0		=			
ANR	1085260	Identifier	endptr		1085049	0					
ANR	1085261	CallExpression	"r_str_ansi_chrn ( ptr , ( break_lines ? cols * lines : cols ) + 1 )"		1085049	1					
ANR	1085262	Callee	r_str_ansi_chrn		1085049	0					
ANR	1085263	Identifier	r_str_ansi_chrn		1085049	0					
ANR	1085264	ArgumentList	ptr		1085049	1					
ANR	1085265	Argument	ptr		1085049	0					
ANR	1085266	Identifier	ptr		1085049	0					
ANR	1085267	Argument	( break_lines ? cols * lines : cols ) + 1		1085049	1					
ANR	1085268	AdditiveExpression	( break_lines ? cols * lines : cols ) + 1		1085049	0		+			
ANR	1085269	ConditionalExpression	break_lines ? cols * lines : cols		1085049	0					
ANR	1085270	Condition	break_lines		1085049	0					
ANR	1085271	Identifier	break_lines		1085049	0					
ANR	1085272	MultiplicativeExpression	cols * lines		1085049	1		*			
ANR	1085273	Identifier	cols		1085049	0					
ANR	1085274	Identifier	lines		1085049	1					
ANR	1085275	Identifier	cols		1085049	2					
ANR	1085276	PrimaryExpression	1		1085049	1					
ANR	1085277	ExpressionStatement	endptr ++	1062:3:24478:24486	1085049	2	True				
ANR	1085278	PostIncDecOperationExpression	endptr ++		1085049	0					
ANR	1085279	Identifier	endptr		1085049	0					
ANR	1085280	IncDec	++		1085049	1					
ANR	1085281	ExpressionStatement	len = endptr - ptr	1063:3:24491:24509	1085049	3	True				
ANR	1085282	AssignmentExpression	len = endptr - ptr		1085049	0		=			
ANR	1085283	Identifier	len		1085049	0					
ANR	1085284	AdditiveExpression	endptr - ptr		1085049	1		-			
ANR	1085285	Identifier	endptr		1085049	0					
ANR	1085286	Identifier	ptr		1085049	1					
ANR	1085287	ExpressionStatement	plen = ptr > buffer ? len : len - 1	1064:3:24514:24549	1085049	4	True				
ANR	1085288	AssignmentExpression	plen = ptr > buffer ? len : len - 1		1085049	0		=			
ANR	1085289	Identifier	plen		1085049	0					
ANR	1085290	ConditionalExpression	ptr > buffer ? len : len - 1		1085049	1					
ANR	1085291	Condition	ptr > buffer		1085049	0					
ANR	1085292	RelationalExpression	ptr > buffer		1085049	0		>			
ANR	1085293	Identifier	ptr		1085049	0					
ANR	1085294	Identifier	buffer		1085049	1					
ANR	1085295	Identifier	len		1085049	1					
ANR	1085296	AdditiveExpression	len - 1		1085049	2		-			
ANR	1085297	Identifier	len		1085049	0					
ANR	1085298	PrimaryExpression	1		1085049	1					
ANR	1085299	IfStatement	if ( lines > 0 )		1085049	5					
ANR	1085300	Condition	lines > 0	1065:7:24558:24566	1085049	0	True				
ANR	1085301	RelationalExpression	lines > 0		1085049	0		>			
ANR	1085302	Identifier	lines		1085049	0					
ANR	1085303	PrimaryExpression	0		1085049	1					
ANR	1085304	CompoundStatement		33:18:844:844	1085049	1					
ANR	1085305	ExpressionStatement	"__cons_write ( pptr , plen )"	1066:4:24575:24600	1085049	0	True				
ANR	1085306	CallExpression	"__cons_write ( pptr , plen )"		1085049	0					
ANR	1085307	Callee	__cons_write		1085049	0					
ANR	1085308	Identifier	__cons_write		1085049	0					
ANR	1085309	ArgumentList	pptr		1085049	1					
ANR	1085310	Argument	pptr		1085049	0					
ANR	1085311	Identifier	pptr		1085049	0					
ANR	1085312	Argument	plen		1085049	1					
ANR	1085313	Identifier	plen		1085049	0					
ANR	1085314	IfStatement	if ( len != olen )		1085049	1					
ANR	1085315	Condition	len != olen	1067:8:24610:24620	1085049	0	True				
ANR	1085316	EqualityExpression	len != olen		1085049	0		!=			
ANR	1085317	Identifier	len		1085049	0					
ANR	1085318	Identifier	olen		1085049	1					
ANR	1085319	CompoundStatement		35:21:898:898	1085049	1					
ANR	1085320	ExpressionStatement	"__cons_write ( Color_RESET , strlen ( Color_RESET ) )"	1068:5:24630:24678	1085049	0	True				
ANR	1085321	CallExpression	"__cons_write ( Color_RESET , strlen ( Color_RESET ) )"		1085049	0					
ANR	1085322	Callee	__cons_write		1085049	0					
ANR	1085323	Identifier	__cons_write		1085049	0					
ANR	1085324	ArgumentList	Color_RESET		1085049	1					
ANR	1085325	Argument	Color_RESET		1085049	0					
ANR	1085326	Identifier	Color_RESET		1085049	0					
ANR	1085327	Argument	strlen ( Color_RESET )		1085049	1					
ANR	1085328	CallExpression	strlen ( Color_RESET )		1085049	0					
ANR	1085329	Callee	strlen		1085049	0					
ANR	1085330	Identifier	strlen		1085049	0					
ANR	1085331	ArgumentList	Color_RESET		1085049	1					
ANR	1085332	Argument	Color_RESET		1085049	0					
ANR	1085333	Identifier	Color_RESET		1085049	0					
ANR	1085334	ElseStatement	else		1085049	0					
ANR	1085335	CompoundStatement		39:9:975:975	1085049	0					
ANR	1085336	IfStatement	if ( lines > 0 )		1085049	0					
ANR	1085337	Condition	lines > 0	1072:7:24709:24717	1085049	0	True				
ANR	1085338	RelationalExpression	lines > 0		1085049	0		>			
ANR	1085339	Identifier	lines		1085049	0					
ANR	1085340	PrimaryExpression	0		1085049	1					
ANR	1085341	CompoundStatement		41:4:1001:1055	1085049	1					
ANR	1085342	IdentifierDeclStatement	int w = cols - ( alen % cols == 0 ? cols : alen % cols ) ;	1073:4:24726:24780	1085049	0	True				
ANR	1085343	IdentifierDecl	w = cols - ( alen % cols == 0 ? cols : alen % cols )		1085049	0					
ANR	1085344	IdentifierDeclType	int		1085049	0					
ANR	1085345	Identifier	w		1085049	1					
ANR	1085346	AssignmentExpression	w = cols - ( alen % cols == 0 ? cols : alen % cols )		1085049	2		=			
ANR	1085347	Identifier	w		1085049	0					
ANR	1085348	AdditiveExpression	cols - ( alen % cols == 0 ? cols : alen % cols )		1085049	1		-			
ANR	1085349	Identifier	cols		1085049	0					
ANR	1085350	ConditionalExpression	alen % cols == 0 ? cols : alen % cols		1085049	1					
ANR	1085351	Condition	alen % cols == 0		1085049	0					
ANR	1085352	EqualityExpression	alen % cols == 0		1085049	0		==			
ANR	1085353	MultiplicativeExpression	alen % cols		1085049	0		%			
ANR	1085354	Identifier	alen		1085049	0					
ANR	1085355	Identifier	cols		1085049	1					
ANR	1085356	PrimaryExpression	0		1085049	1					
ANR	1085357	Identifier	cols		1085049	1					
ANR	1085358	MultiplicativeExpression	alen % cols		1085049	2		%			
ANR	1085359	Identifier	alen		1085049	0					
ANR	1085360	Identifier	cols		1085049	1					
ANR	1085361	ExpressionStatement	"__cons_write ( pptr , plen )"	1074:4:24786:24811	1085049	1	True				
ANR	1085362	CallExpression	"__cons_write ( pptr , plen )"		1085049	0					
ANR	1085363	Callee	__cons_write		1085049	0					
ANR	1085364	Identifier	__cons_write		1085049	0					
ANR	1085365	ArgumentList	pptr		1085049	1					
ANR	1085366	Argument	pptr		1085049	0					
ANR	1085367	Identifier	pptr		1085049	0					
ANR	1085368	Argument	plen		1085049	1					
ANR	1085369	Identifier	plen		1085049	0					
ANR	1085370	IfStatement	if ( I . blankline && w > 0 )		1085049	2					
ANR	1085371	Condition	I . blankline && w > 0	1075:8:24821:24840	1085049	0	True				
ANR	1085372	AndExpression	I . blankline && w > 0		1085049	0		&&			
ANR	1085373	MemberAccess	I . blankline		1085049	0					
ANR	1085374	Identifier	I		1085049	0					
ANR	1085375	Identifier	blankline		1085049	1					
ANR	1085376	RelationalExpression	w > 0		1085049	1		>			
ANR	1085377	Identifier	w		1085049	0					
ANR	1085378	PrimaryExpression	0		1085049	1					
ANR	1085379	CompoundStatement		43:30:1118:1118	1085049	1					
ANR	1085380	IfStatement	if ( w > sizeof ( white ) - 1 )		1085049	0					
ANR	1085381	Condition	w > sizeof ( white ) - 1	1076:9:24854:24875	1085049	0	True				
ANR	1085382	RelationalExpression	w > sizeof ( white ) - 1		1085049	0		>			
ANR	1085383	Identifier	w		1085049	0					
ANR	1085384	AdditiveExpression	sizeof ( white ) - 1		1085049	1		-			
ANR	1085385	SizeofExpression	sizeof ( white )		1085049	0					
ANR	1085386	Sizeof	sizeof		1085049	0					
ANR	1085387	SizeofOperand	white		1085049	1					
ANR	1085388	PrimaryExpression	1		1085049	1					
ANR	1085389	CompoundStatement		44:33:1153:1153	1085049	1					
ANR	1085390	ExpressionStatement	w = sizeof ( white ) - 1	1077:6:24886:24908	1085049	0	True				
ANR	1085391	AssignmentExpression	w = sizeof ( white ) - 1		1085049	0		=			
ANR	1085392	Identifier	w		1085049	0					
ANR	1085393	AdditiveExpression	sizeof ( white ) - 1		1085049	1		-			
ANR	1085394	SizeofExpression	sizeof ( white )		1085049	0					
ANR	1085395	Sizeof	sizeof		1085049	0					
ANR	1085396	SizeofOperand	white		1085049	1					
ANR	1085397	PrimaryExpression	1		1085049	1					
ANR	1085398	ExpressionStatement	"__cons_write ( white , w )"	1079:5:24922:24945	1085049	1	True				
ANR	1085399	CallExpression	"__cons_write ( white , w )"		1085049	0					
ANR	1085400	Callee	__cons_write		1085049	0					
ANR	1085401	Identifier	__cons_write		1085049	0					
ANR	1085402	ArgumentList	white		1085049	1					
ANR	1085403	Argument	white		1085049	0					
ANR	1085404	Identifier	white		1085049	0					
ANR	1085405	Argument	w		1085049	1					
ANR	1085406	Identifier	w		1085049	0					
ANR	1085407	IfStatement	"if ( r_mem_mem ( ( const ut8 * ) ptr , len , ( const ut8 * ) ""\\x1b[0;0H"" , 6 ) )"		1085049	1					
ANR	1085408	Condition	"r_mem_mem ( ( const ut8 * ) ptr , len , ( const ut8 * ) ""\\x1b[0;0H"" , 6 )"	1083:7:25015:25074	1085049	0	True				
ANR	1085409	CallExpression	"r_mem_mem ( ( const ut8 * ) ptr , len , ( const ut8 * ) ""\\x1b[0;0H"" , 6 )"		1085049	0					
ANR	1085410	Callee	r_mem_mem		1085049	0					
ANR	1085411	Identifier	r_mem_mem		1085049	0					
ANR	1085412	ArgumentList	( const ut8 * ) ptr		1085049	1					
ANR	1085413	Argument	( const ut8 * ) ptr		1085049	0					
ANR	1085414	CastExpression	( const ut8 * ) ptr		1085049	0					
ANR	1085415	CastTarget	const ut8 *		1085049	0					
ANR	1085416	Identifier	ptr		1085049	1					
ANR	1085417	Argument	len		1085049	1					
ANR	1085418	Identifier	len		1085049	0					
ANR	1085419	Argument	"( const ut8 * ) ""\\x1b[0;0H"""		1085049	2					
ANR	1085420	CastExpression	"( const ut8 * ) ""\\x1b[0;0H"""		1085049	0					
ANR	1085421	CastTarget	const ut8 *		1085049	0					
ANR	1085422	PrimaryExpression	"""\\x1b[0;0H"""		1085049	1					
ANR	1085423	Argument	6		1085049	3					
ANR	1085424	PrimaryExpression	6		1085049	0					
ANR	1085425	CompoundStatement		51:69:1352:1352	1085049	1					
ANR	1085426	ExpressionStatement	lines = I . rows	1084:4:25083:25097	1085049	0	True				
ANR	1085427	AssignmentExpression	lines = I . rows		1085049	0		=			
ANR	1085428	Identifier	lines		1085049	0					
ANR	1085429	MemberAccess	I . rows		1085049	1					
ANR	1085430	Identifier	I		1085049	0					
ANR	1085431	Identifier	rows		1085049	1					
ANR	1085432	ExpressionStatement	"__cons_write ( pptr , plen )"	1085:4:25103:25128	1085049	1	True				
ANR	1085433	CallExpression	"__cons_write ( pptr , plen )"		1085049	0					
ANR	1085434	Callee	__cons_write		1085049	0					
ANR	1085435	Identifier	__cons_write		1085049	0					
ANR	1085436	ArgumentList	pptr		1085049	1					
ANR	1085437	Argument	pptr		1085049	0					
ANR	1085438	Identifier	pptr		1085049	0					
ANR	1085439	Argument	plen		1085049	1					
ANR	1085440	Identifier	plen		1085049	0					
ANR	1085441	IfStatement	if ( break_lines )		1085049	9					
ANR	1085442	Condition	break_lines	1088:6:25145:25155	1085049	0	True				
ANR	1085443	Identifier	break_lines		1085049	0					
ANR	1085444	CompoundStatement		56:19:1433:1433	1085049	1					
ANR	1085445	ExpressionStatement	lines -= lines_needed	1089:3:25163:25184	1085049	0	True				
ANR	1085446	AssignmentExpression	lines -= lines_needed		1085049	0		-=			
ANR	1085447	Identifier	lines		1085049	0					
ANR	1085448	Identifier	lines_needed		1085049	1					
ANR	1085449	ElseStatement	else		1085049	0					
ANR	1085450	CompoundStatement		58:9:1470:1470	1085049	0					
ANR	1085451	ExpressionStatement	lines --	1091:3:25200:25207	1085049	0	True				
ANR	1085452	PostIncDecOperationExpression	lines --		1085049	0					
ANR	1085453	Identifier	lines		1085049	0					
ANR	1085454	IncDec	--		1085049	1					
ANR	1085455	ExpressionStatement	ptr = nl + 1	1093:2:25239:25251	1085049	10	True				
ANR	1085456	AssignmentExpression	ptr = nl + 1		1085049	0		=			
ANR	1085457	Identifier	ptr		1085049	0					
ANR	1085458	AdditiveExpression	nl + 1		1085049	1		+			
ANR	1085459	Identifier	nl		1085049	0					
ANR	1085460	PrimaryExpression	1		1085049	1					
ANR	1085461	IfStatement	if ( lines > 0 )		1085049	9					
ANR	1085462	Condition	lines > 0	1096:5:25292:25300	1085049	0	True				
ANR	1085463	RelationalExpression	lines > 0		1085049	0		>			
ANR	1085464	Identifier	lines		1085049	0					
ANR	1085465	PrimaryExpression	0		1085049	1					
ANR	1085466	CompoundStatement		64:16:1578:1578	1085049	1					
ANR	1085467	IfStatement	if ( cols > sizeof ( white ) )		1085049	0					
ANR	1085468	Condition	cols > sizeof ( white )	1097:6:25311:25331	1085049	0	True				
ANR	1085469	RelationalExpression	cols > sizeof ( white )		1085049	0		>			
ANR	1085470	Identifier	cols		1085049	0					
ANR	1085471	SizeofExpression	sizeof ( white )		1085049	1					
ANR	1085472	Sizeof	sizeof		1085049	0					
ANR	1085473	SizeofOperand	white		1085049	1					
ANR	1085474	CompoundStatement		65:29:1609:1609	1085049	1					
ANR	1085475	ExpressionStatement	cols = sizeof ( white )	1098:3:25339:25360	1085049	0	True				
ANR	1085476	AssignmentExpression	cols = sizeof ( white )		1085049	0		=			
ANR	1085477	Identifier	cols		1085049	0					
ANR	1085478	SizeofExpression	sizeof ( white )		1085049	1					
ANR	1085479	Sizeof	sizeof		1085049	0					
ANR	1085480	SizeofOperand	white		1085049	1					
ANR	1085481	WhileStatement	while ( -- lines >= 0 )		1085049	1					
ANR	1085482	Condition	-- lines >= 0	1100:9:25375:25386	1085049	0	True				
ANR	1085483	RelationalExpression	-- lines >= 0		1085049	0		>=			
ANR	1085484	UnaryExpression	-- lines		1085049	0					
ANR	1085485	IncDec	--		1085049	0					
ANR	1085486	Identifier	lines		1085049	1					
ANR	1085487	PrimaryExpression	0		1085049	1					
ANR	1085488	CompoundStatement		68:23:1664:1664	1085049	1					
ANR	1085489	ExpressionStatement	"__cons_write ( white , cols )"	1101:3:25394:25420	1085049	0	True				
ANR	1085490	CallExpression	"__cons_write ( white , cols )"		1085049	0					
ANR	1085491	Callee	__cons_write		1085049	0					
ANR	1085492	Identifier	__cons_write		1085049	0					
ANR	1085493	ArgumentList	white		1085049	1					
ANR	1085494	Argument	white		1085049	0					
ANR	1085495	Identifier	white		1085049	0					
ANR	1085496	Argument	cols		1085049	1					
ANR	1085497	Identifier	cols		1085049	0					
ANR	1085498	ReturnType	R_API void		1085049	1					
ANR	1085499	Identifier	r_cons_visual_write		1085049	2					
ANR	1085500	ParameterList	char * buffer		1085049	3					
ANR	1085501	Parameter	char * buffer	1033:31:23710:23721	1085049	0	True				
ANR	1085502	ParameterType	char *		1085049	0					
ANR	1085503	Identifier	buffer		1085049	1					
ANR	1085504	CFGEntryNode	ENTRY		1085049		True				
ANR	1085505	CFGExitNode	EXIT		1085049		True				
ANR	1085506	Symbol	I . null		1085049						
ANR	1085507	Symbol	real_strlen		1085049						
ANR	1085508	Symbol	Color_RESET		1085049						
ANR	1085509	Symbol	r_mem_mem		1085049						
ANR	1085510	Symbol	I		1085049						
ANR	1085511	Symbol	strchr		1085049						
ANR	1085512	Symbol	pptr		1085049						
ANR	1085513	Symbol	plen		1085049						
ANR	1085514	Symbol	strlen		1085049						
ANR	1085515	Symbol	white		1085049						
ANR	1085516	Symbol	len		1085049						
ANR	1085517	Symbol	buffer		1085049						
ANR	1085518	Symbol	lines		1085049						
ANR	1085519	Symbol	cols		1085049						
ANR	1085520	Symbol	I . break_lines		1085049						
ANR	1085521	Symbol	endptr		1085049						
ANR	1085522	Symbol	I . columns		1085049						
ANR	1085523	Symbol	* nl		1085049						
ANR	1085524	Symbol	& white		1085049						
ANR	1085525	Symbol	r_str_ansi_chrn		1085049						
ANR	1085526	Symbol	lines_needed		1085049						
ANR	1085527	Symbol	I . blankline		1085049						
ANR	1085528	Symbol	ptr		1085049						
ANR	1085529	Symbol	break_lines		1085049						
ANR	1085530	Symbol	olen		1085049						
ANR	1085531	Symbol	I . rows		1085049						
ANR	1085532	Symbol	w		1085049						
ANR	1085533	Symbol	alen		1085049						
ANR	1085534	Symbol	nl		1085049						
ANR	1085535	Function	r_cons_printf_list	1106:0:25432:26238							
ANR	1085536	FunctionDef	"r_cons_printf_list (const char * format , va_list ap)"		1085535	0					
ANR	1085537	CompoundStatement		1106:62:25494:26238	1085535	0					
ANR	1085538	IdentifierDeclStatement	"size_t size , written ;"	1107:1:25497:25517	1085535	0	True				
ANR	1085539	IdentifierDecl	size		1085535	0					
ANR	1085540	IdentifierDeclType	size_t		1085535	0					
ANR	1085541	Identifier	size		1085535	1					
ANR	1085542	IdentifierDecl	written		1085535	1					
ANR	1085543	IdentifierDeclType	size_t		1085535	0					
ANR	1085544	Identifier	written		1085535	1					
ANR	1085545	IdentifierDeclStatement	"va_list ap2 , ap3 ;"	1108:1:25520:25536	1085535	1	True				
ANR	1085546	IdentifierDecl	ap2		1085535	0					
ANR	1085547	IdentifierDeclType	va_list		1085535	0					
ANR	1085548	Identifier	ap2		1085535	1					
ANR	1085549	IdentifierDecl	ap3		1085535	1					
ANR	1085550	IdentifierDeclType	va_list		1085535	0					
ANR	1085551	Identifier	ap3		1085535	1					
ANR	1085552	ExpressionStatement	"va_copy ( ap2 , ap )"	1110:1:25540:25557	1085535	2	True				
ANR	1085553	CallExpression	"va_copy ( ap2 , ap )"		1085535	0					
ANR	1085554	Callee	va_copy		1085535	0					
ANR	1085555	Identifier	va_copy		1085535	0					
ANR	1085556	ArgumentList	ap2		1085535	1					
ANR	1085557	Argument	ap2		1085535	0					
ANR	1085558	Identifier	ap2		1085535	0					
ANR	1085559	Argument	ap		1085535	1					
ANR	1085560	Identifier	ap		1085535	0					
ANR	1085561	ExpressionStatement	"va_copy ( ap3 , ap )"	1111:1:25560:25577	1085535	3	True				
ANR	1085562	CallExpression	"va_copy ( ap3 , ap )"		1085535	0					
ANR	1085563	Callee	va_copy		1085535	0					
ANR	1085564	Identifier	va_copy		1085535	0					
ANR	1085565	ArgumentList	ap3		1085535	1					
ANR	1085566	Argument	ap3		1085535	0					
ANR	1085567	Identifier	ap3		1085535	0					
ANR	1085568	Argument	ap		1085535	1					
ANR	1085569	Identifier	ap		1085535	0					
ANR	1085570	IfStatement	if ( I . null || ! format )		1085535	4					
ANR	1085571	Condition	I . null || ! format	1112:5:25584:25600	1085535	0	True				
ANR	1085572	OrExpression	I . null || ! format		1085535	0		||			
ANR	1085573	MemberAccess	I . null		1085535	0					
ANR	1085574	Identifier	I		1085535	0					
ANR	1085575	Identifier	null		1085535	1					
ANR	1085576	UnaryOperationExpression	! format		1085535	1					
ANR	1085577	UnaryOperator	!		1085535	0					
ANR	1085578	Identifier	format		1085535	1					
ANR	1085579	CompoundStatement		7:24:108:108	1085535	1					
ANR	1085580	ExpressionStatement	va_end ( ap2 )	1113:2:25607:25619	1085535	0	True				
ANR	1085581	CallExpression	va_end ( ap2 )		1085535	0					
ANR	1085582	Callee	va_end		1085535	0					
ANR	1085583	Identifier	va_end		1085535	0					
ANR	1085584	ArgumentList	ap2		1085535	1					
ANR	1085585	Argument	ap2		1085535	0					
ANR	1085586	Identifier	ap2		1085535	0					
ANR	1085587	ExpressionStatement	va_end ( ap3 )	1114:2:25623:25635	1085535	1	True				
ANR	1085588	CallExpression	va_end ( ap3 )		1085535	0					
ANR	1085589	Callee	va_end		1085535	0					
ANR	1085590	Identifier	va_end		1085535	0					
ANR	1085591	ArgumentList	ap3		1085535	1					
ANR	1085592	Argument	ap3		1085535	0					
ANR	1085593	Identifier	ap3		1085535	0					
ANR	1085594	ReturnStatement	return ;	1115:2:25639:25645	1085535	2	True				
ANR	1085595	IfStatement	"if ( strchr ( format , '%' ) )"		1085535	5					
ANR	1085596	Condition	"strchr ( format , '%' )"	1117:5:25655:25674	1085535	0	True				
ANR	1085597	CallExpression	"strchr ( format , '%' )"		1085535	0					
ANR	1085598	Callee	strchr		1085535	0					
ANR	1085599	Identifier	strchr		1085535	0					
ANR	1085600	ArgumentList	format		1085535	1					
ANR	1085601	Argument	format		1085535	0					
ANR	1085602	Identifier	format		1085535	0					
ANR	1085603	Argument	'%'		1085535	1					
ANR	1085604	PrimaryExpression	'%'		1085535	0					
ANR	1085605	CompoundStatement		12:27:182:182	1085535	1					
ANR	1085606	IfStatement	if ( palloc ( MOAR + strlen ( format ) * 20 ) )		1085535	0					
ANR	1085607	Condition	palloc ( MOAR + strlen ( format ) * 20 )	1118:6:25685:25720	1085535	0	True				
ANR	1085608	CallExpression	palloc ( MOAR + strlen ( format ) * 20 )		1085535	0					
ANR	1085609	Callee	palloc		1085535	0					
ANR	1085610	Identifier	palloc		1085535	0					
ANR	1085611	ArgumentList	MOAR + strlen ( format ) * 20		1085535	1					
ANR	1085612	Argument	MOAR + strlen ( format ) * 20		1085535	0					
ANR	1085613	AdditiveExpression	MOAR + strlen ( format ) * 20		1085535	0		+			
ANR	1085614	Identifier	MOAR		1085535	0					
ANR	1085615	MultiplicativeExpression	strlen ( format ) * 20		1085535	1		*			
ANR	1085616	CallExpression	strlen ( format )		1085535	0					
ANR	1085617	Callee	strlen		1085535	0					
ANR	1085618	Identifier	strlen		1085535	0					
ANR	1085619	ArgumentList	format		1085535	1					
ANR	1085620	Argument	format		1085535	0					
ANR	1085621	Identifier	format		1085535	0					
ANR	1085622	PrimaryExpression	20		1085535	1					
ANR	1085623	CompoundStatement		13:44:228:228	1085535	1					
ANR	1085624	Label	club :	1119:0:25725:25729	1085535	0	True				
ANR	1085625	Identifier	club		1085535	0					
ANR	1085626	ExpressionStatement	size = I . context -> buffer_sz - I . context -> buffer_len - 1	1120:3:25734:25789	1085535	1	True				
ANR	1085627	AssignmentExpression	size = I . context -> buffer_sz - I . context -> buffer_len - 1		1085535	0		=			
ANR	1085628	Identifier	size		1085535	0					
ANR	1085629	AdditiveExpression	I . context -> buffer_sz - I . context -> buffer_len - 1		1085535	1		-			
ANR	1085630	PtrMemberAccess	I . context -> buffer_sz		1085535	0					
ANR	1085631	MemberAccess	I . context		1085535	0					
ANR	1085632	Identifier	I		1085535	0					
ANR	1085633	Identifier	context		1085535	1					
ANR	1085634	Identifier	buffer_sz		1085535	1					
ANR	1085635	AdditiveExpression	I . context -> buffer_len - 1		1085535	1		-			
ANR	1085636	PtrMemberAccess	I . context -> buffer_len		1085535	0					
ANR	1085637	MemberAccess	I . context		1085535	0					
ANR	1085638	Identifier	I		1085535	0					
ANR	1085639	Identifier	context		1085535	1					
ANR	1085640	Identifier	buffer_len		1085535	1					
ANR	1085641	PrimaryExpression	1		1085535	1					
ANR	1085642	ExpressionStatement	"written = vsnprintf ( I . context -> buffer + I . context -> buffer_len , size , format , ap3 )"	1121:3:25837:25919	1085535	2	True				
ANR	1085643	AssignmentExpression	"written = vsnprintf ( I . context -> buffer + I . context -> buffer_len , size , format , ap3 )"		1085535	0		=			
ANR	1085644	Identifier	written		1085535	0					
ANR	1085645	CallExpression	"vsnprintf ( I . context -> buffer + I . context -> buffer_len , size , format , ap3 )"		1085535	1					
ANR	1085646	Callee	vsnprintf		1085535	0					
ANR	1085647	Identifier	vsnprintf		1085535	0					
ANR	1085648	ArgumentList	I . context -> buffer + I . context -> buffer_len		1085535	1					
ANR	1085649	Argument	I . context -> buffer + I . context -> buffer_len		1085535	0					
ANR	1085650	AdditiveExpression	I . context -> buffer + I . context -> buffer_len		1085535	0		+			
ANR	1085651	PtrMemberAccess	I . context -> buffer		1085535	0					
ANR	1085652	MemberAccess	I . context		1085535	0					
ANR	1085653	Identifier	I		1085535	0					
ANR	1085654	Identifier	context		1085535	1					
ANR	1085655	Identifier	buffer		1085535	1					
ANR	1085656	PtrMemberAccess	I . context -> buffer_len		1085535	1					
ANR	1085657	MemberAccess	I . context		1085535	0					
ANR	1085658	Identifier	I		1085535	0					
ANR	1085659	Identifier	context		1085535	1					
ANR	1085660	Identifier	buffer_len		1085535	1					
ANR	1085661	Argument	size		1085535	1					
ANR	1085662	Identifier	size		1085535	0					
ANR	1085663	Argument	format		1085535	2					
ANR	1085664	Identifier	format		1085535	0					
ANR	1085665	Argument	ap3		1085535	3					
ANR	1085666	Identifier	ap3		1085535	0					
ANR	1085667	IfStatement	if ( written >= size )		1085535	3					
ANR	1085668	Condition	written >= size	1122:7:25928:25942	1085535	0	True				
ANR	1085669	RelationalExpression	written >= size		1085535	0		>=			
ANR	1085670	Identifier	written		1085535	0					
ANR	1085671	Identifier	size		1085535	1					
ANR	1085672	CompoundStatement		17:24:450:450	1085535	1					
ANR	1085673	IfStatement	if ( palloc ( written ) )		1085535	0					
ANR	1085674	Condition	palloc ( written )	1123:8:25988:26003	1085535	0	True				
ANR	1085675	CallExpression	palloc ( written )		1085535	0					
ANR	1085676	Callee	palloc		1085535	0					
ANR	1085677	Identifier	palloc		1085535	0					
ANR	1085678	ArgumentList	written		1085535	1					
ANR	1085679	Argument	written		1085535	0					
ANR	1085680	Identifier	written		1085535	0					
ANR	1085681	CompoundStatement		18:26:511:511	1085535	1					
ANR	1085682	ExpressionStatement	va_end ( ap3 )	1124:5:26013:26025	1085535	0	True				
ANR	1085683	CallExpression	va_end ( ap3 )		1085535	0					
ANR	1085684	Callee	va_end		1085535	0					
ANR	1085685	Identifier	va_end		1085535	0					
ANR	1085686	ArgumentList	ap3		1085535	1					
ANR	1085687	Argument	ap3		1085535	0					
ANR	1085688	Identifier	ap3		1085535	0					
ANR	1085689	ExpressionStatement	"va_copy ( ap3 , ap2 )"	1125:5:26032:26050	1085535	1	True				
ANR	1085690	CallExpression	"va_copy ( ap3 , ap2 )"		1085535	0					
ANR	1085691	Callee	va_copy		1085535	0					
ANR	1085692	Identifier	va_copy		1085535	0					
ANR	1085693	ArgumentList	ap3		1085535	1					
ANR	1085694	Argument	ap3		1085535	0					
ANR	1085695	Identifier	ap3		1085535	0					
ANR	1085696	Argument	ap2		1085535	1					
ANR	1085697	Identifier	ap2		1085535	0					
ANR	1085698	GotoStatement	goto club ;	1126:5:26057:26066	1085535	2	True				
ANR	1085699	Identifier	club		1085535	0					
ANR	1085700	ExpressionStatement	I . context -> buffer_len += written	1129:3:26082:26114	1085535	4	True				
ANR	1085701	AssignmentExpression	I . context -> buffer_len += written		1085535	0		+=			
ANR	1085702	PtrMemberAccess	I . context -> buffer_len		1085535	0					
ANR	1085703	MemberAccess	I . context		1085535	0					
ANR	1085704	Identifier	I		1085535	0					
ANR	1085705	Identifier	context		1085535	1					
ANR	1085706	Identifier	buffer_len		1085535	1					
ANR	1085707	Identifier	written		1085535	1					
ANR	1085708	ExpressionStatement	I . context -> buffer [ I . context -> buffer_len ] = 0	1130:3:26119:26163	1085535	5	True				
ANR	1085709	AssignmentExpression	I . context -> buffer [ I . context -> buffer_len ] = 0		1085535	0		=			
ANR	1085710	ArrayIndexing	I . context -> buffer [ I . context -> buffer_len ]		1085535	0					
ANR	1085711	PtrMemberAccess	I . context -> buffer		1085535	0					
ANR	1085712	MemberAccess	I . context		1085535	0					
ANR	1085713	Identifier	I		1085535	0					
ANR	1085714	Identifier	context		1085535	1					
ANR	1085715	Identifier	buffer		1085535	1					
ANR	1085716	PtrMemberAccess	I . context -> buffer_len		1085535	1					
ANR	1085717	MemberAccess	I . context		1085535	0					
ANR	1085718	Identifier	I		1085535	0					
ANR	1085719	Identifier	context		1085535	1					
ANR	1085720	Identifier	buffer_len		1085535	1					
ANR	1085721	PrimaryExpression	0		1085535	1					
ANR	1085722	ElseStatement	else		1085535	0					
ANR	1085723	CompoundStatement		27:8:682:682	1085535	0					
ANR	1085724	ExpressionStatement	r_cons_strcat ( format )	1133:2:26181:26203	1085535	0	True				
ANR	1085725	CallExpression	r_cons_strcat ( format )		1085535	0					
ANR	1085726	Callee	r_cons_strcat		1085535	0					
ANR	1085727	Identifier	r_cons_strcat		1085535	0					
ANR	1085728	ArgumentList	format		1085535	1					
ANR	1085729	Argument	format		1085535	0					
ANR	1085730	Identifier	format		1085535	0					
ANR	1085731	ExpressionStatement	va_end ( ap2 )	1135:1:26209:26221	1085535	6	True				
ANR	1085732	CallExpression	va_end ( ap2 )		1085535	0					
ANR	1085733	Callee	va_end		1085535	0					
ANR	1085734	Identifier	va_end		1085535	0					
ANR	1085735	ArgumentList	ap2		1085535	1					
ANR	1085736	Argument	ap2		1085535	0					
ANR	1085737	Identifier	ap2		1085535	0					
ANR	1085738	ExpressionStatement	va_end ( ap3 )	1136:1:26224:26236	1085535	7	True				
ANR	1085739	CallExpression	va_end ( ap3 )		1085535	0					
ANR	1085740	Callee	va_end		1085535	0					
ANR	1085741	Identifier	va_end		1085535	0					
ANR	1085742	ArgumentList	ap3		1085535	1					
ANR	1085743	Argument	ap3		1085535	0					
ANR	1085744	Identifier	ap3		1085535	0					
ANR	1085745	ReturnType	R_API void		1085535	1					
ANR	1085746	Identifier	r_cons_printf_list		1085535	2					
ANR	1085747	ParameterList	"const char * format , va_list ap"		1085535	3					
ANR	1085748	Parameter	const char * format	1106:30:25462:25479	1085535	0	True				
ANR	1085749	ParameterType	const char *		1085535	0					
ANR	1085750	Identifier	format		1085535	1					
ANR	1085751	Parameter	va_list ap	1106:50:25482:25491	1085535	1	True				
ANR	1085752	ParameterType	va_list		1085535	0					
ANR	1085753	Identifier	ap		1085535	1					
ANR	1085754	CFGEntryNode	ENTRY		1085535		True				
ANR	1085755	CFGExitNode	EXIT		1085535		True				
ANR	1085756	Symbol	* * I . context		1085535						
ANR	1085757	Symbol	ap2		1085535						
ANR	1085758	Symbol	I . null		1085535						
ANR	1085759	Symbol	* I . context -> buffer		1085535						
ANR	1085760	Symbol	* * I		1085535						
ANR	1085761	Symbol	ap3		1085535						
ANR	1085762	Symbol	I . context -> buffer_len		1085535						
ANR	1085763	Symbol	format		1085535						
ANR	1085764	Symbol	I		1085535						
ANR	1085765	Symbol	strchr		1085535						
ANR	1085766	Symbol	I . context		1085535						
ANR	1085767	Symbol	palloc		1085535						
ANR	1085768	Symbol	ap		1085535						
ANR	1085769	Symbol	* I . context -> buffer_len		1085535						
ANR	1085770	Symbol	strlen		1085535						
ANR	1085771	Symbol	* I . context		1085535						
ANR	1085772	Symbol	* I		1085535						
ANR	1085773	Symbol	size		1085535						
ANR	1085774	Symbol	I . context -> buffer_sz		1085535						
ANR	1085775	Symbol	I . context -> buffer		1085535						
ANR	1085776	Symbol	MOAR		1085535						
ANR	1085777	Symbol	written		1085535						
ANR	1085778	Symbol	vsnprintf		1085535						
ANR	1085779	Function	r_cons_printf	1139:0:26241:26433							
ANR	1085780	FunctionDef	r_cons_printf (const char * format)		1085779	0					
ANR	1085781	CompoundStatement		1139:49:26290:26433	1085779	0					
ANR	1085782	IdentifierDeclStatement	va_list ap ;	1140:1:26293:26303	1085779	0	True				
ANR	1085783	IdentifierDecl	ap		1085779	0					
ANR	1085784	IdentifierDeclType	va_list		1085779	0					
ANR	1085785	Identifier	ap		1085779	1					
ANR	1085786	IfStatement	if ( ! format || ! * format )		1085779	1					
ANR	1085787	Condition	! format || ! * format	1141:5:26310:26328	1085779	0	True				
ANR	1085788	OrExpression	! format || ! * format		1085779	0		||			
ANR	1085789	UnaryOperationExpression	! format		1085779	0					
ANR	1085790	UnaryOperator	!		1085779	0					
ANR	1085791	Identifier	format		1085779	1					
ANR	1085792	UnaryOperationExpression	! * format		1085779	1					
ANR	1085793	UnaryOperator	!		1085779	0					
ANR	1085794	UnaryOperationExpression	* format		1085779	1					
ANR	1085795	UnaryOperator	*		1085779	0					
ANR	1085796	Identifier	format		1085779	1					
ANR	1085797	CompoundStatement		3:26:40:40	1085779	1					
ANR	1085798	ReturnStatement	return - 1 ;	1142:2:26335:26344	1085779	0	True				
ANR	1085799	UnaryOperationExpression	- 1		1085779	0					
ANR	1085800	UnaryOperator	-		1085779	0					
ANR	1085801	PrimaryExpression	1		1085779	1					
ANR	1085802	ExpressionStatement	"va_start ( ap , format )"	1144:1:26350:26371	1085779	2	True				
ANR	1085803	CallExpression	"va_start ( ap , format )"		1085779	0					
ANR	1085804	Callee	va_start		1085779	0					
ANR	1085805	Identifier	va_start		1085779	0					
ANR	1085806	ArgumentList	ap		1085779	1					
ANR	1085807	Argument	ap		1085779	0					
ANR	1085808	Identifier	ap		1085779	0					
ANR	1085809	Argument	format		1085779	1					
ANR	1085810	Identifier	format		1085779	0					
ANR	1085811	ExpressionStatement	"r_cons_printf_list ( format , ap )"	1145:1:26374:26405	1085779	3	True				
ANR	1085812	CallExpression	"r_cons_printf_list ( format , ap )"		1085779	0					
ANR	1085813	Callee	r_cons_printf_list		1085779	0					
ANR	1085814	Identifier	r_cons_printf_list		1085779	0					
ANR	1085815	ArgumentList	format		1085779	1					
ANR	1085816	Argument	format		1085779	0					
ANR	1085817	Identifier	format		1085779	0					
ANR	1085818	Argument	ap		1085779	1					
ANR	1085819	Identifier	ap		1085779	0					
ANR	1085820	ExpressionStatement	va_end ( ap )	1146:1:26408:26419	1085779	4	True				
ANR	1085821	CallExpression	va_end ( ap )		1085779	0					
ANR	1085822	Callee	va_end		1085779	0					
ANR	1085823	Identifier	va_end		1085779	0					
ANR	1085824	ArgumentList	ap		1085779	1					
ANR	1085825	Argument	ap		1085779	0					
ANR	1085826	Identifier	ap		1085779	0					
ANR	1085827	ReturnStatement	return 0 ;	1148:1:26423:26431	1085779	5	True				
ANR	1085828	PrimaryExpression	0		1085779	0					
ANR	1085829	ReturnType	R_API int		1085779	1					
ANR	1085830	Identifier	r_cons_printf		1085779	2					
ANR	1085831	ParameterList	const char * format		1085779	3					
ANR	1085832	Parameter	const char * format	1139:24:26265:26282	1085779	0	True				
ANR	1085833	ParameterType	const char *		1085779	0					
ANR	1085834	Identifier	format		1085779	1					
ANR	1085835	CFGEntryNode	ENTRY		1085779		True				
ANR	1085836	CFGExitNode	EXIT		1085779		True				
ANR	1085837	Symbol	* format		1085779						
ANR	1085838	Symbol	format		1085779						
ANR	1085839	Symbol	ap		1085779						
ANR	1085840	Function	r_cons_get_column	1151:0:26436:26640							
ANR	1085841	FunctionDef	r_cons_get_column ()		1085840	0					
ANR	1085842	CompoundStatement		1151:30:26466:26640	1085840	0					
ANR	1085843	IdentifierDeclStatement	"char * line = strrchr ( I . context -> buffer , '\\n' ) ;"	1152:1:26469:26515	1085840	0	True				
ANR	1085844	IdentifierDecl	"* line = strrchr ( I . context -> buffer , '\\n' )"		1085840	0					
ANR	1085845	IdentifierDeclType	char *		1085840	0					
ANR	1085846	Identifier	line		1085840	1					
ANR	1085847	AssignmentExpression	"* line = strrchr ( I . context -> buffer , '\\n' )"		1085840	2		=			
ANR	1085848	Identifier	line		1085840	0					
ANR	1085849	CallExpression	"strrchr ( I . context -> buffer , '\\n' )"		1085840	1					
ANR	1085850	Callee	strrchr		1085840	0					
ANR	1085851	Identifier	strrchr		1085840	0					
ANR	1085852	ArgumentList	I . context -> buffer		1085840	1					
ANR	1085853	Argument	I . context -> buffer		1085840	0					
ANR	1085854	PtrMemberAccess	I . context -> buffer		1085840	0					
ANR	1085855	MemberAccess	I . context		1085840	0					
ANR	1085856	Identifier	I		1085840	0					
ANR	1085857	Identifier	context		1085840	1					
ANR	1085858	Identifier	buffer		1085840	1					
ANR	1085859	Argument	'\\n'		1085840	1					
ANR	1085860	PrimaryExpression	'\\n'		1085840	0					
ANR	1085861	IfStatement	if ( ! line )		1085840	1					
ANR	1085862	Condition	! line	1153:5:26522:26526	1085840	0	True				
ANR	1085863	UnaryOperationExpression	! line		1085840	0					
ANR	1085864	UnaryOperator	!		1085840	0					
ANR	1085865	Identifier	line		1085840	1					
ANR	1085866	CompoundStatement		3:12:62:62	1085840	1					
ANR	1085867	ExpressionStatement	line = I . context -> buffer	1154:2:26533:26557	1085840	0	True				
ANR	1085868	AssignmentExpression	line = I . context -> buffer		1085840	0		=			
ANR	1085869	Identifier	line		1085840	0					
ANR	1085870	PtrMemberAccess	I . context -> buffer		1085840	1					
ANR	1085871	MemberAccess	I . context		1085840	0					
ANR	1085872	Identifier	I		1085840	0					
ANR	1085873	Identifier	context		1085840	1					
ANR	1085874	Identifier	buffer		1085840	1					
ANR	1085875	ExpressionStatement	I . context -> buffer [ I . context -> buffer_len ] = 0	1156:1:26563:26607	1085840	2	True				
ANR	1085876	AssignmentExpression	I . context -> buffer [ I . context -> buffer_len ] = 0		1085840	0		=			
ANR	1085877	ArrayIndexing	I . context -> buffer [ I . context -> buffer_len ]		1085840	0					
ANR	1085878	PtrMemberAccess	I . context -> buffer		1085840	0					
ANR	1085879	MemberAccess	I . context		1085840	0					
ANR	1085880	Identifier	I		1085840	0					
ANR	1085881	Identifier	context		1085840	1					
ANR	1085882	Identifier	buffer		1085840	1					
ANR	1085883	PtrMemberAccess	I . context -> buffer_len		1085840	1					
ANR	1085884	MemberAccess	I . context		1085840	0					
ANR	1085885	Identifier	I		1085840	0					
ANR	1085886	Identifier	context		1085840	1					
ANR	1085887	Identifier	buffer_len		1085840	1					
ANR	1085888	PrimaryExpression	0		1085840	1					
ANR	1085889	ReturnStatement	return r_str_ansi_len ( line ) ;	1157:1:26610:26638	1085840	3	True				
ANR	1085890	CallExpression	r_str_ansi_len ( line )		1085840	0					
ANR	1085891	Callee	r_str_ansi_len		1085840	0					
ANR	1085892	Identifier	r_str_ansi_len		1085840	0					
ANR	1085893	ArgumentList	line		1085840	1					
ANR	1085894	Argument	line		1085840	0					
ANR	1085895	Identifier	line		1085840	0					
ANR	1085896	ReturnType	R_API int		1085840	1					
ANR	1085897	Identifier	r_cons_get_column		1085840	2					
ANR	1085898	ParameterList			1085840	3					
ANR	1085899	CFGEntryNode	ENTRY		1085840		True				
ANR	1085900	CFGExitNode	EXIT		1085840		True				
ANR	1085901	Symbol	* * I . context		1085840						
ANR	1085902	Symbol	* I . context -> buffer		1085840						
ANR	1085903	Symbol	* * I		1085840						
ANR	1085904	Symbol	I . context -> buffer_len		1085840						
ANR	1085905	Symbol	line		1085840						
ANR	1085906	Symbol	r_str_ansi_len		1085840						
ANR	1085907	Symbol	I		1085840						
ANR	1085908	Symbol	I . context		1085840						
ANR	1085909	Symbol	* I . context -> buffer_len		1085840						
ANR	1085910	Symbol	* I . context		1085840						
ANR	1085911	Symbol	* I		1085840						
ANR	1085912	Symbol	I . context -> buffer		1085840						
ANR	1085913	Symbol	strrchr		1085840						
ANR	1085914	Function	r_cons_memcat	1161:0:26704:27392							
ANR	1085915	FunctionDef	"r_cons_memcat (const char * str , int len)"		1085914	0					
ANR	1085916	CompoundStatement		1161:50:26754:27392	1085914	0					
ANR	1085917	IfStatement	if ( len < 0 || ( I . context -> buffer_len + len ) < 0 )		1085914	0					
ANR	1085918	Condition	len < 0 || ( I . context -> buffer_len + len ) < 0	1162:5:26761:26804	1085914	0	True				
ANR	1085919	OrExpression	len < 0 || ( I . context -> buffer_len + len ) < 0		1085914	0		||			
ANR	1085920	RelationalExpression	len < 0		1085914	0		<			
ANR	1085921	Identifier	len		1085914	0					
ANR	1085922	PrimaryExpression	0		1085914	1					
ANR	1085923	RelationalExpression	( I . context -> buffer_len + len ) < 0		1085914	1		<			
ANR	1085924	AdditiveExpression	I . context -> buffer_len + len		1085914	0		+			
ANR	1085925	PtrMemberAccess	I . context -> buffer_len		1085914	0					
ANR	1085926	MemberAccess	I . context		1085914	0					
ANR	1085927	Identifier	I		1085914	0					
ANR	1085928	Identifier	context		1085914	1					
ANR	1085929	Identifier	buffer_len		1085914	1					
ANR	1085930	Identifier	len		1085914	1					
ANR	1085931	PrimaryExpression	0		1085914	1					
ANR	1085932	CompoundStatement		2:51:52:52	1085914	1					
ANR	1085933	ReturnStatement	return - 1 ;	1163:2:26811:26820	1085914	0	True				
ANR	1085934	UnaryOperationExpression	- 1		1085914	0					
ANR	1085935	UnaryOperator	-		1085914	0					
ANR	1085936	PrimaryExpression	1		1085914	1					
ANR	1085937	IfStatement	if ( I . echo )		1085914	1					
ANR	1085938	Condition	I . echo	1165:5:26830:26835	1085914	0	True				
ANR	1085939	MemberAccess	I . echo		1085914	0					
ANR	1085940	Identifier	I		1085914	0					
ANR	1085941	Identifier	echo		1085914	1					
ANR	1085942	CompoundStatement		7:2:132:140	1085914	1					
ANR	1085943	IdentifierDeclStatement	int rlen ;	1167:2:26887:26895	1085914	0	True				
ANR	1085944	IdentifierDecl	rlen		1085914	0					
ANR	1085945	IdentifierDeclType	int		1085914	0					
ANR	1085946	Identifier	rlen		1085914	1					
ANR	1085947	IfStatement	"if ( ( rlen = write ( 2 , str , len ) ) != len )"		1085914	1					
ANR	1085948	Condition	"( rlen = write ( 2 , str , len ) ) != len"	1168:6:26903:26937	1085914	0	True				
ANR	1085949	EqualityExpression	"( rlen = write ( 2 , str , len ) ) != len"		1085914	0		!=			
ANR	1085950	AssignmentExpression	"rlen = write ( 2 , str , len )"		1085914	0		=			
ANR	1085951	Identifier	rlen		1085914	0					
ANR	1085952	CallExpression	"write ( 2 , str , len )"		1085914	1					
ANR	1085953	Callee	write		1085914	0					
ANR	1085954	Identifier	write		1085914	0					
ANR	1085955	ArgumentList	2		1085914	1					
ANR	1085956	Argument	2		1085914	0					
ANR	1085957	PrimaryExpression	2		1085914	0					
ANR	1085958	Argument	str		1085914	1					
ANR	1085959	Identifier	str		1085914	0					
ANR	1085960	Argument	len		1085914	2					
ANR	1085961	Identifier	len		1085914	0					
ANR	1085962	Identifier	len		1085914	1					
ANR	1085963	CompoundStatement		8:43:185:185	1085914	1					
ANR	1085964	ReturnStatement	return rlen ;	1169:3:26945:26956	1085914	0	True				
ANR	1085965	Identifier	rlen		1085914	0					
ANR	1085966	IfStatement	if ( str && len > 0 && ! I . null )		1085914	2					
ANR	1085967	Condition	str && len > 0 && ! I . null	1172:5:26970:26994	1085914	0	True				
ANR	1085968	AndExpression	str && len > 0 && ! I . null		1085914	0		&&			
ANR	1085969	Identifier	str		1085914	0					
ANR	1085970	AndExpression	len > 0 && ! I . null		1085914	1		&&			
ANR	1085971	RelationalExpression	len > 0		1085914	0		>			
ANR	1085972	Identifier	len		1085914	0					
ANR	1085973	PrimaryExpression	0		1085914	1					
ANR	1085974	UnaryOperationExpression	! I . null		1085914	1					
ANR	1085975	UnaryOperator	!		1085914	0					
ANR	1085976	MemberAccess	I . null		1085914	1					
ANR	1085977	Identifier	I		1085914	0					
ANR	1085978	Identifier	null		1085914	1					
ANR	1085979	CompoundStatement		12:32:242:242	1085914	1					
ANR	1085980	IfStatement	if ( palloc ( len + 1 ) )		1085914	0					
ANR	1085981	Condition	palloc ( len + 1 )	1173:6:27005:27020	1085914	0	True				
ANR	1085982	CallExpression	palloc ( len + 1 )		1085914	0					
ANR	1085983	Callee	palloc		1085914	0					
ANR	1085984	Identifier	palloc		1085914	0					
ANR	1085985	ArgumentList	len + 1		1085914	1					
ANR	1085986	Argument	len + 1		1085914	0					
ANR	1085987	AdditiveExpression	len + 1		1085914	0		+			
ANR	1085988	Identifier	len		1085914	0					
ANR	1085989	PrimaryExpression	1		1085914	1					
ANR	1085990	CompoundStatement		13:24:268:268	1085914	1					
ANR	1085991	ExpressionStatement	"memcpy ( I . context -> buffer + I . context -> buffer_len , str , len )"	1174:3:27028:27088	1085914	0	True				
ANR	1085992	CallExpression	"memcpy ( I . context -> buffer + I . context -> buffer_len , str , len )"		1085914	0					
ANR	1085993	Callee	memcpy		1085914	0					
ANR	1085994	Identifier	memcpy		1085914	0					
ANR	1085995	ArgumentList	I . context -> buffer + I . context -> buffer_len		1085914	1					
ANR	1085996	Argument	I . context -> buffer + I . context -> buffer_len		1085914	0					
ANR	1085997	AdditiveExpression	I . context -> buffer + I . context -> buffer_len		1085914	0		+			
ANR	1085998	PtrMemberAccess	I . context -> buffer		1085914	0					
ANR	1085999	MemberAccess	I . context		1085914	0					
ANR	1086000	Identifier	I		1085914	0					
ANR	1086001	Identifier	context		1085914	1					
ANR	1086002	Identifier	buffer		1085914	1					
ANR	1086003	PtrMemberAccess	I . context -> buffer_len		1085914	1					
ANR	1086004	MemberAccess	I . context		1085914	0					
ANR	1086005	Identifier	I		1085914	0					
ANR	1086006	Identifier	context		1085914	1					
ANR	1086007	Identifier	buffer_len		1085914	1					
ANR	1086008	Argument	str		1085914	1					
ANR	1086009	Identifier	str		1085914	0					
ANR	1086010	Argument	len		1085914	2					
ANR	1086011	Identifier	len		1085914	0					
ANR	1086012	ExpressionStatement	I . context -> buffer_len += len	1175:3:27093:27121	1085914	1	True				
ANR	1086013	AssignmentExpression	I . context -> buffer_len += len		1085914	0		+=			
ANR	1086014	PtrMemberAccess	I . context -> buffer_len		1085914	0					
ANR	1086015	MemberAccess	I . context		1085914	0					
ANR	1086016	Identifier	I		1085914	0					
ANR	1086017	Identifier	context		1085914	1					
ANR	1086018	Identifier	buffer_len		1085914	1					
ANR	1086019	Identifier	len		1085914	1					
ANR	1086020	ExpressionStatement	I . context -> buffer [ I . context -> buffer_len ] = 0	1176:3:27126:27170	1085914	2	True				
ANR	1086021	AssignmentExpression	I . context -> buffer [ I . context -> buffer_len ] = 0		1085914	0		=			
ANR	1086022	ArrayIndexing	I . context -> buffer [ I . context -> buffer_len ]		1085914	0					
ANR	1086023	PtrMemberAccess	I . context -> buffer		1085914	0					
ANR	1086024	MemberAccess	I . context		1085914	0					
ANR	1086025	Identifier	I		1085914	0					
ANR	1086026	Identifier	context		1085914	1					
ANR	1086027	Identifier	buffer		1085914	1					
ANR	1086028	PtrMemberAccess	I . context -> buffer_len		1085914	1					
ANR	1086029	MemberAccess	I . context		1085914	0					
ANR	1086030	Identifier	I		1085914	0					
ANR	1086031	Identifier	context		1085914	1					
ANR	1086032	Identifier	buffer_len		1085914	1					
ANR	1086033	PrimaryExpression	0		1085914	1					
ANR	1086034	IfStatement	if ( I . flush )		1085914	3					
ANR	1086035	Condition	I . flush	1179:5:27184:27190	1085914	0	True				
ANR	1086036	MemberAccess	I . flush		1085914	0					
ANR	1086037	Identifier	I		1085914	0					
ANR	1086038	Identifier	flush		1085914	1					
ANR	1086039	CompoundStatement		19:14:438:438	1085914	1					
ANR	1086040	ExpressionStatement	r_cons_flush ( )	1180:2:27197:27212	1085914	0	True				
ANR	1086041	CallExpression	r_cons_flush ( )		1085914	0					
ANR	1086042	Callee	r_cons_flush		1085914	0					
ANR	1086043	Identifier	r_cons_flush		1085914	0					
ANR	1086044	ArgumentList			1085914	1					
ANR	1086045	IfStatement	if ( I . break_word && str && len > 0 )		1085914	4					
ANR	1086046	Condition	I . break_word && str && len > 0	1182:5:27222:27251	1085914	0	True				
ANR	1086047	AndExpression	I . break_word && str && len > 0		1085914	0		&&			
ANR	1086048	MemberAccess	I . break_word		1085914	0					
ANR	1086049	Identifier	I		1085914	0					
ANR	1086050	Identifier	break_word		1085914	1					
ANR	1086051	AndExpression	str && len > 0		1085914	1		&&			
ANR	1086052	Identifier	str		1085914	0					
ANR	1086053	RelationalExpression	len > 0		1085914	1		>			
ANR	1086054	Identifier	len		1085914	0					
ANR	1086055	PrimaryExpression	0		1085914	1					
ANR	1086056	CompoundStatement		22:37:499:499	1085914	1					
ANR	1086057	IfStatement	"if ( r_mem_mem ( ( const ut8 * ) str , len , ( const ut8 * ) I . break_word , I . break_word_len ) )"		1085914	0					
ANR	1086058	Condition	"r_mem_mem ( ( const ut8 * ) str , len , ( const ut8 * ) I . break_word , I . break_word_len )"	1183:6:27262:27337	1085914	0	True				
ANR	1086059	CallExpression	"r_mem_mem ( ( const ut8 * ) str , len , ( const ut8 * ) I . break_word , I . break_word_len )"		1085914	0					
ANR	1086060	Callee	r_mem_mem		1085914	0					
ANR	1086061	Identifier	r_mem_mem		1085914	0					
ANR	1086062	ArgumentList	( const ut8 * ) str		1085914	1					
ANR	1086063	Argument	( const ut8 * ) str		1085914	0					
ANR	1086064	CastExpression	( const ut8 * ) str		1085914	0					
ANR	1086065	CastTarget	const ut8 *		1085914	0					
ANR	1086066	Identifier	str		1085914	1					
ANR	1086067	Argument	len		1085914	1					
ANR	1086068	Identifier	len		1085914	0					
ANR	1086069	Argument	( const ut8 * ) I . break_word		1085914	2					
ANR	1086070	CastExpression	( const ut8 * ) I . break_word		1085914	0					
ANR	1086071	CastTarget	const ut8 *		1085914	0					
ANR	1086072	MemberAccess	I . break_word		1085914	1					
ANR	1086073	Identifier	I		1085914	0					
ANR	1086074	Identifier	break_word		1085914	1					
ANR	1086075	Argument	I . break_word_len		1085914	3					
ANR	1086076	MemberAccess	I . break_word_len		1085914	0					
ANR	1086077	Identifier	I		1085914	0					
ANR	1086078	Identifier	break_word_len		1085914	1					
ANR	1086079	CompoundStatement		23:84:585:585	1085914	1					
ANR	1086080	ExpressionStatement	I . context -> breaked = true	1184:3:27345:27370	1085914	0	True				
ANR	1086081	AssignmentExpression	I . context -> breaked = true		1085914	0		=			
ANR	1086082	PtrMemberAccess	I . context -> breaked		1085914	0					
ANR	1086083	MemberAccess	I . context		1085914	0					
ANR	1086084	Identifier	I		1085914	0					
ANR	1086085	Identifier	context		1085914	1					
ANR	1086086	Identifier	breaked		1085914	1					
ANR	1086087	Identifier	true		1085914	1					
ANR	1086088	ReturnStatement	return len ;	1187:1:27380:27390	1085914	5	True				
ANR	1086089	Identifier	len		1085914	0					
ANR	1086090	ReturnType	R_API int		1085914	1					
ANR	1086091	Identifier	r_cons_memcat		1085914	2					
ANR	1086092	ParameterList	"const char * str , int len"		1085914	3					
ANR	1086093	Parameter	const char * str	1161:24:26728:26742	1085914	0	True				
ANR	1086094	ParameterType	const char *		1085914	0					
ANR	1086095	Identifier	str		1085914	1					
ANR	1086096	Parameter	int len	1161:41:26745:26751	1085914	1	True				
ANR	1086097	ParameterType	int		1085914	0					
ANR	1086098	Identifier	len		1085914	1					
ANR	1086099	CFGEntryNode	ENTRY		1085914		True				
ANR	1086100	CFGExitNode	EXIT		1085914		True				
ANR	1086101	Symbol	I . echo		1085914						
ANR	1086102	Symbol	* * I . context		1085914						
ANR	1086103	Symbol	I . null		1085914						
ANR	1086104	Symbol	* * I		1085914						
ANR	1086105	Symbol	* I . context -> buffer		1085914						
ANR	1086106	Symbol	I . context -> buffer_len		1085914						
ANR	1086107	Symbol	I . break_word		1085914						
ANR	1086108	Symbol	I . flush		1085914						
ANR	1086109	Symbol	r_mem_mem		1085914						
ANR	1086110	Symbol	I		1085914						
ANR	1086111	Symbol	I . break_word_len		1085914						
ANR	1086112	Symbol	I . context		1085914						
ANR	1086113	Symbol	palloc		1085914						
ANR	1086114	Symbol	str		1085914						
ANR	1086115	Symbol	* I . context -> buffer_len		1085914						
ANR	1086116	Symbol	* I . context		1085914						
ANR	1086117	Symbol	* I		1085914						
ANR	1086118	Symbol	len		1085914						
ANR	1086119	Symbol	rlen		1085914						
ANR	1086120	Symbol	I . context -> buffer		1085914						
ANR	1086121	Symbol	true		1085914						
ANR	1086122	Symbol	write		1085914						
ANR	1086123	Symbol	I . context -> breaked		1085914						
ANR	1086124	Function	r_cons_memset	1190:0:27395:27646							
ANR	1086125	FunctionDef	"r_cons_memset (char ch , int len)"		1086124	0					
ANR	1086126	CompoundStatement		1190:43:27438:27646	1086124	0					
ANR	1086127	IfStatement	if ( ! I . null && len > 0 )		1086124	0					
ANR	1086128	Condition	! I . null && len > 0	1191:5:27445:27462	1086124	0	True				
ANR	1086129	AndExpression	! I . null && len > 0		1086124	0		&&			
ANR	1086130	UnaryOperationExpression	! I . null		1086124	0					
ANR	1086131	UnaryOperator	!		1086124	0					
ANR	1086132	MemberAccess	I . null		1086124	1					
ANR	1086133	Identifier	I		1086124	0					
ANR	1086134	Identifier	null		1086124	1					
ANR	1086135	RelationalExpression	len > 0		1086124	1		>			
ANR	1086136	Identifier	len		1086124	0					
ANR	1086137	PrimaryExpression	0		1086124	1					
ANR	1086138	CompoundStatement		2:25:26:26	1086124	1					
ANR	1086139	IfStatement	if ( palloc ( len + 1 ) )		1086124	0					
ANR	1086140	Condition	palloc ( len + 1 )	1192:6:27473:27488	1086124	0	True				
ANR	1086141	CallExpression	palloc ( len + 1 )		1086124	0					
ANR	1086142	Callee	palloc		1086124	0					
ANR	1086143	Identifier	palloc		1086124	0					
ANR	1086144	ArgumentList	len + 1		1086124	1					
ANR	1086145	Argument	len + 1		1086124	0					
ANR	1086146	AdditiveExpression	len + 1		1086124	0		+			
ANR	1086147	Identifier	len		1086124	0					
ANR	1086148	PrimaryExpression	1		1086124	1					
ANR	1086149	CompoundStatement		3:24:52:52	1086124	1					
ANR	1086150	ExpressionStatement	"memset ( I . context -> buffer + I . context -> buffer_len , ch , len )"	1193:3:27496:27555	1086124	0	True				
ANR	1086151	CallExpression	"memset ( I . context -> buffer + I . context -> buffer_len , ch , len )"		1086124	0					
ANR	1086152	Callee	memset		1086124	0					
ANR	1086153	Identifier	memset		1086124	0					
ANR	1086154	ArgumentList	I . context -> buffer + I . context -> buffer_len		1086124	1					
ANR	1086155	Argument	I . context -> buffer + I . context -> buffer_len		1086124	0					
ANR	1086156	AdditiveExpression	I . context -> buffer + I . context -> buffer_len		1086124	0		+			
ANR	1086157	PtrMemberAccess	I . context -> buffer		1086124	0					
ANR	1086158	MemberAccess	I . context		1086124	0					
ANR	1086159	Identifier	I		1086124	0					
ANR	1086160	Identifier	context		1086124	1					
ANR	1086161	Identifier	buffer		1086124	1					
ANR	1086162	PtrMemberAccess	I . context -> buffer_len		1086124	1					
ANR	1086163	MemberAccess	I . context		1086124	0					
ANR	1086164	Identifier	I		1086124	0					
ANR	1086165	Identifier	context		1086124	1					
ANR	1086166	Identifier	buffer_len		1086124	1					
ANR	1086167	Argument	ch		1086124	1					
ANR	1086168	Identifier	ch		1086124	0					
ANR	1086169	Argument	len		1086124	2					
ANR	1086170	Identifier	len		1086124	0					
ANR	1086171	ExpressionStatement	I . context -> buffer_len += len	1194:3:27560:27588	1086124	1	True				
ANR	1086172	AssignmentExpression	I . context -> buffer_len += len		1086124	0		+=			
ANR	1086173	PtrMemberAccess	I . context -> buffer_len		1086124	0					
ANR	1086174	MemberAccess	I . context		1086124	0					
ANR	1086175	Identifier	I		1086124	0					
ANR	1086176	Identifier	context		1086124	1					
ANR	1086177	Identifier	buffer_len		1086124	1					
ANR	1086178	Identifier	len		1086124	1					
ANR	1086179	ExpressionStatement	I . context -> buffer [ I . context -> buffer_len ] = 0	1195:3:27593:27637	1086124	2	True				
ANR	1086180	AssignmentExpression	I . context -> buffer [ I . context -> buffer_len ] = 0		1086124	0		=			
ANR	1086181	ArrayIndexing	I . context -> buffer [ I . context -> buffer_len ]		1086124	0					
ANR	1086182	PtrMemberAccess	I . context -> buffer		1086124	0					
ANR	1086183	MemberAccess	I . context		1086124	0					
ANR	1086184	Identifier	I		1086124	0					
ANR	1086185	Identifier	context		1086124	1					
ANR	1086186	Identifier	buffer		1086124	1					
ANR	1086187	PtrMemberAccess	I . context -> buffer_len		1086124	1					
ANR	1086188	MemberAccess	I . context		1086124	0					
ANR	1086189	Identifier	I		1086124	0					
ANR	1086190	Identifier	context		1086124	1					
ANR	1086191	Identifier	buffer_len		1086124	1					
ANR	1086192	PrimaryExpression	0		1086124	1					
ANR	1086193	ReturnType	R_API void		1086124	1					
ANR	1086194	Identifier	r_cons_memset		1086124	2					
ANR	1086195	ParameterList	"char ch , int len"		1086124	3					
ANR	1086196	Parameter	char ch	1190:25:27420:27426	1086124	0	True				
ANR	1086197	ParameterType	char		1086124	0					
ANR	1086198	Identifier	ch		1086124	1					
ANR	1086199	Parameter	int len	1190:34:27429:27435	1086124	1	True				
ANR	1086200	ParameterType	int		1086124	0					
ANR	1086201	Identifier	len		1086124	1					
ANR	1086202	CFGEntryNode	ENTRY		1086124		True				
ANR	1086203	CFGExitNode	EXIT		1086124		True				
ANR	1086204	Symbol	* * I . context		1086124						
ANR	1086205	Symbol	I . null		1086124						
ANR	1086206	Symbol	* * I		1086124						
ANR	1086207	Symbol	* I . context -> buffer		1086124						
ANR	1086208	Symbol	ch		1086124						
ANR	1086209	Symbol	I . context -> buffer_len		1086124						
ANR	1086210	Symbol	I		1086124						
ANR	1086211	Symbol	I . context		1086124						
ANR	1086212	Symbol	palloc		1086124						
ANR	1086213	Symbol	* I . context -> buffer_len		1086124						
ANR	1086214	Symbol	* I . context		1086124						
ANR	1086215	Symbol	* I		1086124						
ANR	1086216	Symbol	len		1086124						
ANR	1086217	Symbol	I . context -> buffer		1086124						
ANR	1086218	Function	r_cons_strcat	1200:0:27649:27807							
ANR	1086219	FunctionDef	r_cons_strcat (const char * str)		1086218	0					
ANR	1086220	CompoundStatement		1200:42:27691:27807	1086218	0					
ANR	1086221	IdentifierDeclStatement	int len ;	1201:1:27694:27701	1086218	0	True				
ANR	1086222	IdentifierDecl	len		1086218	0					
ANR	1086223	IdentifierDeclType	int		1086218	0					
ANR	1086224	Identifier	len		1086218	1					
ANR	1086225	IfStatement	if ( ! str || I . null )		1086218	1					
ANR	1086226	Condition	! str || I . null	1202:5:27708:27721	1086218	0	True				
ANR	1086227	OrExpression	! str || I . null		1086218	0		||			
ANR	1086228	UnaryOperationExpression	! str		1086218	0					
ANR	1086229	UnaryOperator	!		1086218	0					
ANR	1086230	Identifier	str		1086218	1					
ANR	1086231	MemberAccess	I . null		1086218	1					
ANR	1086232	Identifier	I		1086218	0					
ANR	1086233	Identifier	null		1086218	1					
ANR	1086234	CompoundStatement		3:21:32:32	1086218	1					
ANR	1086235	ReturnStatement	return ;	1203:2:27728:27734	1086218	0	True				
ANR	1086236	ExpressionStatement	len = strlen ( str )	1205:1:27740:27758	1086218	2	True				
ANR	1086237	AssignmentExpression	len = strlen ( str )		1086218	0		=			
ANR	1086238	Identifier	len		1086218	0					
ANR	1086239	CallExpression	strlen ( str )		1086218	1					
ANR	1086240	Callee	strlen		1086218	0					
ANR	1086241	Identifier	strlen		1086218	0					
ANR	1086242	ArgumentList	str		1086218	1					
ANR	1086243	Argument	str		1086218	0					
ANR	1086244	Identifier	str		1086218	0					
ANR	1086245	IfStatement	if ( len > 0 )		1086218	3					
ANR	1086246	Condition	len > 0	1206:5:27765:27771	1086218	0	True				
ANR	1086247	RelationalExpression	len > 0		1086218	0		>			
ANR	1086248	Identifier	len		1086218	0					
ANR	1086249	PrimaryExpression	0		1086218	1					
ANR	1086250	CompoundStatement		7:14:82:82	1086218	1					
ANR	1086251	ExpressionStatement	"r_cons_memcat ( str , len )"	1207:2:27778:27802	1086218	0	True				
ANR	1086252	CallExpression	"r_cons_memcat ( str , len )"		1086218	0					
ANR	1086253	Callee	r_cons_memcat		1086218	0					
ANR	1086254	Identifier	r_cons_memcat		1086218	0					
ANR	1086255	ArgumentList	str		1086218	1					
ANR	1086256	Argument	str		1086218	0					
ANR	1086257	Identifier	str		1086218	0					
ANR	1086258	Argument	len		1086218	1					
ANR	1086259	Identifier	len		1086218	0					
ANR	1086260	ReturnType	R_API void		1086218	1					
ANR	1086261	Identifier	r_cons_strcat		1086218	2					
ANR	1086262	ParameterList	const char * str		1086218	3					
ANR	1086263	Parameter	const char * str	1200:25:27674:27688	1086218	0	True				
ANR	1086264	ParameterType	const char *		1086218	0					
ANR	1086265	Identifier	str		1086218	1					
ANR	1086266	CFGEntryNode	ENTRY		1086218		True				
ANR	1086267	CFGExitNode	EXIT		1086218		True				
ANR	1086268	Symbol	str		1086218						
ANR	1086269	Symbol	strlen		1086218						
ANR	1086270	Symbol	I . null		1086218						
ANR	1086271	Symbol	len		1086218						
ANR	1086272	Symbol	I		1086218						
ANR	1086273	Function	r_cons_newline	1211:0:27810:28312							
ANR	1086274	FunctionDef	r_cons_newline ()		1086273	0					
ANR	1086275	CompoundStatement		1211:28:27838:28312	1086273	0					
ANR	1086276	IfStatement	if ( ! I . null )		1086273	0					
ANR	1086277	Condition	! I . null	1212:5:27845:27851	1086273	0	True				
ANR	1086278	UnaryOperationExpression	! I . null		1086273	0					
ANR	1086279	UnaryOperator	!		1086273	0					
ANR	1086280	MemberAccess	I . null		1086273	1					
ANR	1086281	Identifier	I		1086273	0					
ANR	1086282	Identifier	null		1086273	1					
ANR	1086283	CompoundStatement		2:14:15:15	1086273	1					
ANR	1086284	ExpressionStatement	"r_cons_strcat ( ""\\n"" )"	1213:2:27858:27878	1086273	0	True				
ANR	1086285	CallExpression	"r_cons_strcat ( ""\\n"" )"		1086273	0					
ANR	1086286	Callee	r_cons_strcat		1086273	0					
ANR	1086287	Identifier	r_cons_strcat		1086273	0					
ANR	1086288	ArgumentList	"""\\n"""		1086273	1					
ANR	1086289	Argument	"""\\n"""		1086273	0					
ANR	1086290	PrimaryExpression	"""\\n"""		1086273	0					
ANR	1086291	ReturnType	R_API void		1086273	1					
ANR	1086292	Identifier	r_cons_newline		1086273	2					
ANR	1086293	ParameterList			1086273	3					
ANR	1086294	CFGEntryNode	ENTRY		1086273		True				
ANR	1086295	CFGExitNode	EXIT		1086273		True				
ANR	1086296	Symbol	I . null		1086273						
ANR	1086297	Symbol	I		1086273						
ANR	1086298	Function	r_cons_get_cursor	1227:0:28416:29157							
ANR	1086299	FunctionDef	r_cons_get_cursor (int * rows)		1086298	0					
ANR	1086300	CompoundStatement		1227:39:28455:29157	1086298	0					
ANR	1086301	IdentifierDeclStatement	"int i , col = 0 ;"	1228:1:28458:28472	1086298	0	True				
ANR	1086302	IdentifierDecl	i		1086298	0					
ANR	1086303	IdentifierDeclType	int		1086298	0					
ANR	1086304	Identifier	i		1086298	1					
ANR	1086305	IdentifierDecl	col = 0		1086298	1					
ANR	1086306	IdentifierDeclType	int		1086298	0					
ANR	1086307	Identifier	col		1086298	1					
ANR	1086308	AssignmentExpression	col = 0		1086298	2		=			
ANR	1086309	Identifier	col		1086298	0					
ANR	1086310	PrimaryExpression	0		1086298	1					
ANR	1086311	IdentifierDeclStatement	int row = 0 ;	1229:1:28475:28486	1086298	1	True				
ANR	1086312	IdentifierDecl	row = 0		1086298	0					
ANR	1086313	IdentifierDeclType	int		1086298	0					
ANR	1086314	Identifier	row		1086298	1					
ANR	1086315	AssignmentExpression	row = 0		1086298	2		=			
ANR	1086316	Identifier	row		1086298	0					
ANR	1086317	PrimaryExpression	0		1086298	1					
ANR	1086318	ForStatement	for ( i = 0 ; i < I . context -> buffer_len ; i ++ )		1086298	2					
ANR	1086319	ForInit	i = 0 ;	1231:6:28561:28566	1086298	0	True				
ANR	1086320	AssignmentExpression	i = 0		1086298	0		=			
ANR	1086321	Identifier	i		1086298	0					
ANR	1086322	PrimaryExpression	0		1086298	1					
ANR	1086323	Condition	i < I . context -> buffer_len	1231:13:28568:28592	1086298	1	True				
ANR	1086324	RelationalExpression	i < I . context -> buffer_len		1086298	0		<			
ANR	1086325	Identifier	i		1086298	0					
ANR	1086326	PtrMemberAccess	I . context -> buffer_len		1086298	1					
ANR	1086327	MemberAccess	I . context		1086298	0					
ANR	1086328	Identifier	I		1086298	0					
ANR	1086329	Identifier	context		1086298	1					
ANR	1086330	Identifier	buffer_len		1086298	1					
ANR	1086331	PostIncDecOperationExpression	i ++	1231:40:28595:28597	1086298	2	True				
ANR	1086332	Identifier	i		1086298	0					
ANR	1086333	IncDec	++		1086298	1					
ANR	1086334	CompoundStatement		5:45:144:144	1086298	3					
ANR	1086335	IfStatement	if ( I . context -> buffer [ i ] == 0x1b )		1086298	0					
ANR	1086336	Condition	I . context -> buffer [ i ] == 0x1b	1233:6:28662:28689	1086298	0	True				
ANR	1086337	EqualityExpression	I . context -> buffer [ i ] == 0x1b		1086298	0		==			
ANR	1086338	ArrayIndexing	I . context -> buffer [ i ]		1086298	0					
ANR	1086339	PtrMemberAccess	I . context -> buffer		1086298	0					
ANR	1086340	MemberAccess	I . context		1086298	0					
ANR	1086341	Identifier	I		1086298	0					
ANR	1086342	Identifier	context		1086298	1					
ANR	1086343	Identifier	buffer		1086298	1					
ANR	1086344	Identifier	i		1086298	1					
ANR	1086345	PrimaryExpression	0x1b		1086298	1					
ANR	1086346	CompoundStatement		9:3:281:310	1086298	1					
ANR	1086347	IdentifierDeclStatement	char ch2 = I . context -> buffer [ i + 1 ] ;	1234:3:28697:28732	1086298	0	True				
ANR	1086348	IdentifierDecl	ch2 = I . context -> buffer [ i + 1 ]		1086298	0					
ANR	1086349	IdentifierDeclType	char		1086298	0					
ANR	1086350	Identifier	ch2		1086298	1					
ANR	1086351	AssignmentExpression	ch2 = I . context -> buffer [ i + 1 ]		1086298	2		=			
ANR	1086352	Identifier	ch2		1086298	0					
ANR	1086353	ArrayIndexing	I . context -> buffer [ i + 1 ]		1086298	1					
ANR	1086354	PtrMemberAccess	I . context -> buffer		1086298	0					
ANR	1086355	MemberAccess	I . context		1086298	0					
ANR	1086356	Identifier	I		1086298	0					
ANR	1086357	Identifier	context		1086298	1					
ANR	1086358	Identifier	buffer		1086298	1					
ANR	1086359	AdditiveExpression	i + 1		1086298	1		+			
ANR	1086360	Identifier	i		1086298	0					
ANR	1086361	PrimaryExpression	1		1086298	1					
ANR	1086362	IdentifierDeclStatement	char * str = I . context -> buffer ;	1235:3:28737:28766	1086298	1	True				
ANR	1086363	IdentifierDecl	* str = I . context -> buffer		1086298	0					
ANR	1086364	IdentifierDeclType	char *		1086298	0					
ANR	1086365	Identifier	str		1086298	1					
ANR	1086366	AssignmentExpression	* str = I . context -> buffer		1086298	2		=			
ANR	1086367	Identifier	str		1086298	0					
ANR	1086368	PtrMemberAccess	I . context -> buffer		1086298	1					
ANR	1086369	MemberAccess	I . context		1086298	0					
ANR	1086370	Identifier	I		1086298	0					
ANR	1086371	Identifier	context		1086298	1					
ANR	1086372	Identifier	buffer		1086298	1					
ANR	1086373	IfStatement	if ( ch2 == '\\\\' )		1086298	2					
ANR	1086374	Condition	ch2 == '\\\\'	1236:7:28775:28785	1086298	0	True				
ANR	1086375	EqualityExpression	ch2 == '\\\\'		1086298	0		==			
ANR	1086376	Identifier	ch2		1086298	0					
ANR	1086377	PrimaryExpression	'\\\\'		1086298	1					
ANR	1086378	CompoundStatement		10:20:332:332	1086298	1					
ANR	1086379	ExpressionStatement	i ++	1237:4:28794:28797	1086298	0	True				
ANR	1086380	PostIncDecOperationExpression	i ++		1086298	0					
ANR	1086381	Identifier	i		1086298	0					
ANR	1086382	IncDec	++		1086298	1					
ANR	1086383	ElseStatement	else		1086298	0					
ANR	1086384	IfStatement	if ( ch2 == ']' )		1086298	0					
ANR	1086385	Condition	ch2 == ']'	1238:14:28813:28822	1086298	0	True				
ANR	1086386	EqualityExpression	ch2 == ']'		1086298	0		==			
ANR	1086387	Identifier	ch2		1086298	0					
ANR	1086388	PrimaryExpression	']'		1086298	1					
ANR	1086389	CompoundStatement		12:26:369:369	1086298	1					
ANR	1086390	IfStatement	"if ( ! strncmp ( str + 2 + 5 , ""rgb:"" , 4 ) )"		1086298	0					
ANR	1086391	Condition	"! strncmp ( str + 2 + 5 , ""rgb:"" , 4 )"	1239:8:28835:28867	1086298	0	True				
ANR	1086392	UnaryOperationExpression	"! strncmp ( str + 2 + 5 , ""rgb:"" , 4 )"		1086298	0					
ANR	1086393	UnaryOperator	!		1086298	0					
ANR	1086394	CallExpression	"strncmp ( str + 2 + 5 , ""rgb:"" , 4 )"		1086298	1					
ANR	1086395	Callee	strncmp		1086298	0					
ANR	1086396	Identifier	strncmp		1086298	0					
ANR	1086397	ArgumentList	str + 2 + 5		1086298	1					
ANR	1086398	Argument	str + 2 + 5		1086298	0					
ANR	1086399	AdditiveExpression	str + 2 + 5		1086298	0		+			
ANR	1086400	Identifier	str		1086298	0					
ANR	1086401	AdditiveExpression	2 + 5		1086298	1		+			
ANR	1086402	PrimaryExpression	2		1086298	0					
ANR	1086403	PrimaryExpression	5		1086298	1					
ANR	1086404	Argument	"""rgb:"""		1086298	1					
ANR	1086405	PrimaryExpression	"""rgb:"""		1086298	0					
ANR	1086406	Argument	4		1086298	2					
ANR	1086407	PrimaryExpression	4		1086298	0					
ANR	1086408	CompoundStatement		13:43:414:414	1086298	1					
ANR	1086409	ExpressionStatement	i += 18	1240:5:28877:28884	1086298	0	True				
ANR	1086410	AssignmentExpression	i += 18		1086298	0		+=			
ANR	1086411	Identifier	i		1086298	0					
ANR	1086412	PrimaryExpression	18		1086298	1					
ANR	1086413	ElseStatement	else		1086298	0					
ANR	1086414	IfStatement	if ( ch2 == '[' )		1086298	0					
ANR	1086415	Condition	ch2 == '['	1242:14:28906:28915	1086298	0	True				
ANR	1086416	EqualityExpression	ch2 == '['		1086298	0		==			
ANR	1086417	Identifier	ch2		1086298	0					
ANR	1086418	PrimaryExpression	'['		1086298	1					
ANR	1086419	CompoundStatement		16:26:462:462	1086298	1					
ANR	1086420	ForStatement	for ( ++ i ; str [ i ] && str [ i ] != 'J' && str [ i ] != 'm' && str [ i ] != 'H' ; i ++ )		1086298	0					
ANR	1086421	ForInit	++ i ;	1243:9:28929:28932	1086298	0	True				
ANR	1086422	UnaryExpression	++ i		1086298	0					
ANR	1086423	IncDec	++		1086298	0					
ANR	1086424	Identifier	i		1086298	1					
ANR	1086425	Condition	str [ i ] && str [ i ] != 'J' && str [ i ] != 'm' && str [ i ] != 'H'	1243:14:28934:28990	1086298	1	True				
ANR	1086426	AndExpression	str [ i ] && str [ i ] != 'J' && str [ i ] != 'm' && str [ i ] != 'H'		1086298	0		&&			
ANR	1086427	ArrayIndexing	str [ i ]		1086298	0					
ANR	1086428	Identifier	str		1086298	0					
ANR	1086429	Identifier	i		1086298	1					
ANR	1086430	AndExpression	str [ i ] != 'J' && str [ i ] != 'm' && str [ i ] != 'H'		1086298	1		&&			
ANR	1086431	EqualityExpression	str [ i ] != 'J'		1086298	0		!=			
ANR	1086432	ArrayIndexing	str [ i ]		1086298	0					
ANR	1086433	Identifier	str		1086298	0					
ANR	1086434	Identifier	i		1086298	1					
ANR	1086435	PrimaryExpression	'J'		1086298	1					
ANR	1086436	AndExpression	str [ i ] != 'm' && str [ i ] != 'H'		1086298	1		&&			
ANR	1086437	EqualityExpression	str [ i ] != 'm'		1086298	0		!=			
ANR	1086438	ArrayIndexing	str [ i ]		1086298	0					
ANR	1086439	Identifier	str		1086298	0					
ANR	1086440	Identifier	i		1086298	1					
ANR	1086441	PrimaryExpression	'm'		1086298	1					
ANR	1086442	EqualityExpression	str [ i ] != 'H'		1086298	1		!=			
ANR	1086443	ArrayIndexing	str [ i ]		1086298	0					
ANR	1086444	Identifier	str		1086298	0					
ANR	1086445	Identifier	i		1086298	1					
ANR	1086446	PrimaryExpression	'H'		1086298	1					
ANR	1086447	PostIncDecOperationExpression	i ++	1243:73:28993:28995	1086298	2	True				
ANR	1086448	Identifier	i		1086298	0					
ANR	1086449	IncDec	++		1086298	1					
ANR	1086450	CompoundStatement		17:78:542:542	1086298	3					
ANR	1086451	ExpressionStatement		1244:5:29005:29005	1086298	0	True				
ANR	1086452	ElseStatement	else		1086298	0					
ANR	1086453	IfStatement	if ( I . context -> buffer [ i ] == '\\n' )		1086298	0					
ANR	1086454	Condition	I . context -> buffer [ i ] == '\\n'	1247:13:29031:29058	1086298	0	True				
ANR	1086455	EqualityExpression	I . context -> buffer [ i ] == '\\n'		1086298	0		==			
ANR	1086456	ArrayIndexing	I . context -> buffer [ i ]		1086298	0					
ANR	1086457	PtrMemberAccess	I . context -> buffer		1086298	0					
ANR	1086458	MemberAccess	I . context		1086298	0					
ANR	1086459	Identifier	I		1086298	0					
ANR	1086460	Identifier	context		1086298	1					
ANR	1086461	Identifier	buffer		1086298	1					
ANR	1086462	Identifier	i		1086298	1					
ANR	1086463	PrimaryExpression	'\\n'		1086298	1					
ANR	1086464	CompoundStatement		21:43:605:605	1086298	1					
ANR	1086465	ExpressionStatement	row ++	1248:3:29066:29071	1086298	0	True				
ANR	1086466	PostIncDecOperationExpression	row ++		1086298	0					
ANR	1086467	Identifier	row		1086298	0					
ANR	1086468	IncDec	++		1086298	1					
ANR	1086469	ExpressionStatement	col = 0	1249:3:29076:29083	1086298	1	True				
ANR	1086470	AssignmentExpression	col = 0		1086298	0		=			
ANR	1086471	Identifier	col		1086298	0					
ANR	1086472	PrimaryExpression	0		1086298	1					
ANR	1086473	ElseStatement	else		1086298	0					
ANR	1086474	CompoundStatement		24:9:638:638	1086298	0					
ANR	1086475	ExpressionStatement	col ++	1251:3:29099:29104	1086298	0	True				
ANR	1086476	PostIncDecOperationExpression	col ++		1086298	0					
ANR	1086477	Identifier	col		1086298	0					
ANR	1086478	IncDec	++		1086298	1					
ANR	1086479	IfStatement	if ( rows )		1086298	3					
ANR	1086480	Condition	rows	1254:5:29118:29121	1086298	0	True				
ANR	1086481	Identifier	rows		1086298	0					
ANR	1086482	CompoundStatement		28:11:668:668	1086298	1					
ANR	1086483	ExpressionStatement	* rows = row	1255:2:29128:29139	1086298	0	True				
ANR	1086484	AssignmentExpression	* rows = row		1086298	0		=			
ANR	1086485	UnaryOperationExpression	* rows		1086298	0					
ANR	1086486	UnaryOperator	*		1086298	0					
ANR	1086487	Identifier	rows		1086298	1					
ANR	1086488	Identifier	row		1086298	1					
ANR	1086489	ReturnStatement	return col ;	1257:1:29145:29155	1086298	4	True				
ANR	1086490	Identifier	col		1086298	0					
ANR	1086491	ReturnType	R_API int		1086298	1					
ANR	1086492	Identifier	r_cons_get_cursor		1086298	2					
ANR	1086493	ParameterList	int * rows		1086298	3					
ANR	1086494	Parameter	int * rows	1227:28:28444:28452	1086298	0	True				
ANR	1086495	ParameterType	int *		1086298	0					
ANR	1086496	Identifier	rows		1086298	1					
ANR	1086497	CFGEntryNode	ENTRY		1086298		True				
ANR	1086498	CFGExitNode	EXIT		1086298		True				
ANR	1086499	Symbol	* * I . context		1086298						
ANR	1086500	Symbol	col		1086298						
ANR	1086501	Symbol	* * I		1086298						
ANR	1086502	Symbol	* I . context -> buffer		1086298						
ANR	1086503	Symbol	I . context -> buffer_len		1086298						
ANR	1086504	Symbol	i		1086298						
ANR	1086505	Symbol	I		1086298						
ANR	1086506	Symbol	I . context		1086298						
ANR	1086507	Symbol	rows		1086298						
ANR	1086508	Symbol	ch2		1086298						
ANR	1086509	Symbol	* rows		1086298						
ANR	1086510	Symbol	str		1086298						
ANR	1086511	Symbol	* I . context		1086298						
ANR	1086512	Symbol	strncmp		1086298						
ANR	1086513	Symbol	* I		1086298						
ANR	1086514	Symbol	* i		1086298						
ANR	1086515	Symbol	I . context -> buffer		1086298						
ANR	1086516	Symbol	row		1086298						
ANR	1086517	Symbol	* str		1086298						
ANR	1086518	Function	r_cons_isatty	1260:0:29160:29604							
ANR	1086519	FunctionDef	r_cons_isatty ()		1086518	0					
ANR	1086520	CompoundStatement		1260:27:29187:29604	1086518	0					
ANR	1086521	IdentifierDeclStatement	struct winsize win = { 0 } ;	1262:1:29203:29229	1086518	0	True				
ANR	1086522	IdentifierDecl	win = { 0 }		1086518	0					
ANR	1086523	IdentifierDeclType	struct winsize		1086518	0					
ANR	1086524	Identifier	win		1086518	1					
ANR	1086525	AssignmentExpression	win = { 0 }		1086518	2		=			
ANR	1086526	Identifier	win		1086518	0					
ANR	1086527	InitializerList	0		1086518	1					
ANR	1086528	PrimaryExpression	0		1086518	0					
ANR	1086529	IdentifierDeclStatement	const char * tty ;	1263:1:29232:29247	1086518	1	True				
ANR	1086530	IdentifierDecl	* tty		1086518	0					
ANR	1086531	IdentifierDeclType	const char *		1086518	0					
ANR	1086532	Identifier	tty		1086518	1					
ANR	1086533	IdentifierDeclStatement	struct stat sb ;	1264:1:29250:29264	1086518	2	True				
ANR	1086534	IdentifierDecl	sb		1086518	0					
ANR	1086535	IdentifierDeclType	struct stat		1086518	0					
ANR	1086536	Identifier	sb		1086518	1					
ANR	1086537	IfStatement	if ( ! isatty ( 1 ) )		1086518	3					
ANR	1086538	Condition	! isatty ( 1 )	1266:5:29272:29282	1086518	0	True				
ANR	1086539	UnaryOperationExpression	! isatty ( 1 )		1086518	0					
ANR	1086540	UnaryOperator	!		1086518	0					
ANR	1086541	CallExpression	isatty ( 1 )		1086518	1					
ANR	1086542	Callee	isatty		1086518	0					
ANR	1086543	Identifier	isatty		1086518	0					
ANR	1086544	ArgumentList	1		1086518	1					
ANR	1086545	Argument	1		1086518	0					
ANR	1086546	PrimaryExpression	1		1086518	0					
ANR	1086547	CompoundStatement		7:18:97:97	1086518	1					
ANR	1086548	ReturnStatement	return false ;	1267:2:29289:29301	1086518	0	True				
ANR	1086549	Identifier	false		1086518	0					
ANR	1086550	IfStatement	"if ( ioctl ( 1 , TIOCGWINSZ , & win ) )"		1086518	4					
ANR	1086551	Condition	"ioctl ( 1 , TIOCGWINSZ , & win )"	1269:5:29311:29337	1086518	0	True				
ANR	1086552	CallExpression	"ioctl ( 1 , TIOCGWINSZ , & win )"		1086518	0					
ANR	1086553	Callee	ioctl		1086518	0					
ANR	1086554	Identifier	ioctl		1086518	0					
ANR	1086555	ArgumentList	1		1086518	1					
ANR	1086556	Argument	1		1086518	0					
ANR	1086557	PrimaryExpression	1		1086518	0					
ANR	1086558	Argument	TIOCGWINSZ		1086518	1					
ANR	1086559	Identifier	TIOCGWINSZ		1086518	0					
ANR	1086560	Argument	& win		1086518	2					
ANR	1086561	UnaryOperationExpression	& win		1086518	0					
ANR	1086562	UnaryOperator	&		1086518	0					
ANR	1086563	Identifier	win		1086518	1					
ANR	1086564	CompoundStatement		10:34:152:152	1086518	1					
ANR	1086565	ReturnStatement	return false ;	1270:2:29344:29356	1086518	0	True				
ANR	1086566	Identifier	false		1086518	0					
ANR	1086567	IfStatement	if ( ! win . ws_col || ! win . ws_row )		1086518	5					
ANR	1086568	Condition	! win . ws_col || ! win . ws_row	1272:5:29366:29391	1086518	0	True				
ANR	1086569	OrExpression	! win . ws_col || ! win . ws_row		1086518	0		||			
ANR	1086570	UnaryOperationExpression	! win . ws_col		1086518	0					
ANR	1086571	UnaryOperator	!		1086518	0					
ANR	1086572	MemberAccess	win . ws_col		1086518	1					
ANR	1086573	Identifier	win		1086518	0					
ANR	1086574	Identifier	ws_col		1086518	1					
ANR	1086575	UnaryOperationExpression	! win . ws_row		1086518	1					
ANR	1086576	UnaryOperator	!		1086518	0					
ANR	1086577	MemberAccess	win . ws_row		1086518	1					
ANR	1086578	Identifier	win		1086518	0					
ANR	1086579	Identifier	ws_row		1086518	1					
ANR	1086580	CompoundStatement		13:33:206:206	1086518	1					
ANR	1086581	ReturnStatement	return false ;	1273:2:29398:29410	1086518	0	True				
ANR	1086582	Identifier	false		1086518	0					
ANR	1086583	ExpressionStatement	tty = ttyname ( 1 )	1275:1:29416:29433	1086518	6	True				
ANR	1086584	AssignmentExpression	tty = ttyname ( 1 )		1086518	0		=			
ANR	1086585	Identifier	tty		1086518	0					
ANR	1086586	CallExpression	ttyname ( 1 )		1086518	1					
ANR	1086587	Callee	ttyname		1086518	0					
ANR	1086588	Identifier	ttyname		1086518	0					
ANR	1086589	ArgumentList	1		1086518	1					
ANR	1086590	Argument	1		1086518	0					
ANR	1086591	PrimaryExpression	1		1086518	0					
ANR	1086592	IfStatement	if ( ! tty )		1086518	7					
ANR	1086593	Condition	! tty	1276:5:29440:29443	1086518	0	True				
ANR	1086594	UnaryOperationExpression	! tty		1086518	0					
ANR	1086595	UnaryOperator	!		1086518	0					
ANR	1086596	Identifier	tty		1086518	1					
ANR	1086597	CompoundStatement		17:11:258:258	1086518	1					
ANR	1086598	ReturnStatement	return false ;	1277:2:29450:29462	1086518	0	True				
ANR	1086599	Identifier	false		1086518	0					
ANR	1086600	IfStatement	"if ( stat ( tty , & sb ) || ! S_ISCHR ( sb . st_mode ) )"		1086518	8					
ANR	1086601	Condition	"stat ( tty , & sb ) || ! S_ISCHR ( sb . st_mode )"	1279:5:29472:29511	1086518	0	True				
ANR	1086602	OrExpression	"stat ( tty , & sb ) || ! S_ISCHR ( sb . st_mode )"		1086518	0		||			
ANR	1086603	CallExpression	"stat ( tty , & sb )"		1086518	0					
ANR	1086604	Callee	stat		1086518	0					
ANR	1086605	Identifier	stat		1086518	0					
ANR	1086606	ArgumentList	tty		1086518	1					
ANR	1086607	Argument	tty		1086518	0					
ANR	1086608	Identifier	tty		1086518	0					
ANR	1086609	Argument	& sb		1086518	1					
ANR	1086610	UnaryOperationExpression	& sb		1086518	0					
ANR	1086611	UnaryOperator	&		1086518	0					
ANR	1086612	Identifier	sb		1086518	1					
ANR	1086613	UnaryOperationExpression	! S_ISCHR ( sb . st_mode )		1086518	1					
ANR	1086614	UnaryOperator	!		1086518	0					
ANR	1086615	CallExpression	S_ISCHR ( sb . st_mode )		1086518	1					
ANR	1086616	Callee	S_ISCHR		1086518	0					
ANR	1086617	Identifier	S_ISCHR		1086518	0					
ANR	1086618	ArgumentList	sb . st_mode		1086518	1					
ANR	1086619	Argument	sb . st_mode		1086518	0					
ANR	1086620	MemberAccess	sb . st_mode		1086518	0					
ANR	1086621	Identifier	sb		1086518	0					
ANR	1086622	Identifier	st_mode		1086518	1					
ANR	1086623	CompoundStatement		20:47:326:326	1086518	1					
ANR	1086624	ReturnStatement	return false ;	1280:2:29518:29530	1086518	0	True				
ANR	1086625	Identifier	false		1086518	0					
ANR	1086626	ReturnStatement	return true ;	1282:1:29536:29547	1086518	9	True				
ANR	1086627	Identifier	true		1086518	0					
ANR	1086628	ReturnStatement	return false ;	1285:1:29590:29602	1086518	10	True				
ANR	1086629	Identifier	false		1086518	0					
ANR	1086630	ReturnType	R_API bool		1086518	1					
ANR	1086631	Identifier	r_cons_isatty		1086518	2					
ANR	1086632	ParameterList			1086518	3					
ANR	1086633	CFGEntryNode	ENTRY		1086518		True				
ANR	1086634	CFGExitNode	EXIT		1086518		True				
ANR	1086635	Symbol	win . ws_row		1086518						
ANR	1086636	Symbol	stat		1086518						
ANR	1086637	Symbol	& win		1086518						
ANR	1086638	Symbol	ttyname		1086518						
ANR	1086639	Symbol	false		1086518						
ANR	1086640	Symbol	TIOCGWINSZ		1086518						
ANR	1086641	Symbol	isatty		1086518						
ANR	1086642	Symbol	ioctl		1086518						
ANR	1086643	Symbol	sb		1086518						
ANR	1086644	Symbol	tty		1086518						
ANR	1086645	Symbol	& sb		1086518						
ANR	1086646	Symbol	sb . st_mode		1086518						
ANR	1086647	Symbol	true		1086518						
ANR	1086648	Symbol	S_ISCHR		1086518						
ANR	1086649	Symbol	win		1086518						
ANR	1086650	Symbol	win . ws_col		1086518						
ANR	1086651	Function	r_cons_get_size	1289:0:29673:31393							
ANR	1086652	FunctionDef	r_cons_get_size (int * rows)		1086651	0					
ANR	1086653	CompoundStatement		1289:37:29710:31393	1086651	0					
ANR	1086654	IdentifierDeclStatement	CONSOLE_SCREEN_BUFFER_INFO csbi ;	1291:1:29729:29760	1086651	0	True				
ANR	1086655	IdentifierDecl	csbi		1086651	0					
ANR	1086656	IdentifierDeclType	CONSOLE_SCREEN_BUFFER_INFO		1086651	0					
ANR	1086657	Identifier	csbi		1086651	1					
ANR	1086658	IdentifierDeclStatement	"bool ret = GetConsoleScreenBufferInfo ( GetStdHandle ( STD_OUTPUT_HANDLE ) , & csbi ) ;"	1292:1:29763:29842	1086651	1	True				
ANR	1086659	IdentifierDecl	"ret = GetConsoleScreenBufferInfo ( GetStdHandle ( STD_OUTPUT_HANDLE ) , & csbi )"		1086651	0					
ANR	1086660	IdentifierDeclType	bool		1086651	0					
ANR	1086661	Identifier	ret		1086651	1					
ANR	1086662	AssignmentExpression	"ret = GetConsoleScreenBufferInfo ( GetStdHandle ( STD_OUTPUT_HANDLE ) , & csbi )"		1086651	2		=			
ANR	1086663	Identifier	ret		1086651	0					
ANR	1086664	CallExpression	"GetConsoleScreenBufferInfo ( GetStdHandle ( STD_OUTPUT_HANDLE ) , & csbi )"		1086651	1					
ANR	1086665	Callee	GetConsoleScreenBufferInfo		1086651	0					
ANR	1086666	Identifier	GetConsoleScreenBufferInfo		1086651	0					
ANR	1086667	ArgumentList	GetStdHandle ( STD_OUTPUT_HANDLE )		1086651	1					
ANR	1086668	Argument	GetStdHandle ( STD_OUTPUT_HANDLE )		1086651	0					
ANR	1086669	CallExpression	GetStdHandle ( STD_OUTPUT_HANDLE )		1086651	0					
ANR	1086670	Callee	GetStdHandle		1086651	0					
ANR	1086671	Identifier	GetStdHandle		1086651	0					
ANR	1086672	ArgumentList	STD_OUTPUT_HANDLE		1086651	1					
ANR	1086673	Argument	STD_OUTPUT_HANDLE		1086651	0					
ANR	1086674	Identifier	STD_OUTPUT_HANDLE		1086651	0					
ANR	1086675	Argument	& csbi		1086651	1					
ANR	1086676	UnaryOperationExpression	& csbi		1086651	0					
ANR	1086677	UnaryOperator	&		1086651	0					
ANR	1086678	Identifier	csbi		1086651	1					
ANR	1086679	ExpressionStatement	I . columns = csbi . srWindow . Right - csbi . srWindow . Left + 1	1293:1:29845:29901	1086651	2	True				
ANR	1086680	AssignmentExpression	I . columns = csbi . srWindow . Right - csbi . srWindow . Left + 1		1086651	0		=			
ANR	1086681	MemberAccess	I . columns		1086651	0					
ANR	1086682	Identifier	I		1086651	0					
ANR	1086683	Identifier	columns		1086651	1					
ANR	1086684	AdditiveExpression	csbi . srWindow . Right - csbi . srWindow . Left + 1		1086651	1		-			
ANR	1086685	MemberAccess	csbi . srWindow . Right		1086651	0					
ANR	1086686	MemberAccess	csbi . srWindow		1086651	0					
ANR	1086687	Identifier	csbi		1086651	0					
ANR	1086688	Identifier	srWindow		1086651	1					
ANR	1086689	Identifier	Right		1086651	1					
ANR	1086690	AdditiveExpression	csbi . srWindow . Left + 1		1086651	1		+			
ANR	1086691	MemberAccess	csbi . srWindow . Left		1086651	0					
ANR	1086692	MemberAccess	csbi . srWindow		1086651	0					
ANR	1086693	Identifier	csbi		1086651	0					
ANR	1086694	Identifier	srWindow		1086651	1					
ANR	1086695	Identifier	Left		1086651	1					
ANR	1086696	PrimaryExpression	1		1086651	1					
ANR	1086697	ExpressionStatement	I . rows = csbi . srWindow . Bottom - csbi . srWindow . Top + 1	1294:1:29904:29957	1086651	3	True				
ANR	1086698	AssignmentExpression	I . rows = csbi . srWindow . Bottom - csbi . srWindow . Top + 1		1086651	0		=			
ANR	1086699	MemberAccess	I . rows		1086651	0					
ANR	1086700	Identifier	I		1086651	0					
ANR	1086701	Identifier	rows		1086651	1					
ANR	1086702	AdditiveExpression	csbi . srWindow . Bottom - csbi . srWindow . Top + 1		1086651	1		-			
ANR	1086703	MemberAccess	csbi . srWindow . Bottom		1086651	0					
ANR	1086704	MemberAccess	csbi . srWindow		1086651	0					
ANR	1086705	Identifier	csbi		1086651	0					
ANR	1086706	Identifier	srWindow		1086651	1					
ANR	1086707	Identifier	Bottom		1086651	1					
ANR	1086708	AdditiveExpression	csbi . srWindow . Top + 1		1086651	1		+			
ANR	1086709	MemberAccess	csbi . srWindow . Top		1086651	0					
ANR	1086710	MemberAccess	csbi . srWindow		1086651	0					
ANR	1086711	Identifier	csbi		1086651	0					
ANR	1086712	Identifier	srWindow		1086651	1					
ANR	1086713	Identifier	Top		1086651	1					
ANR	1086714	PrimaryExpression	1		1086651	1					
ANR	1086715	IfStatement	if ( ! ret || I . columns == - 1 && I . rows == 0 )		1086651	4					
ANR	1086716	Condition	! ret || I . columns == - 1 && I . rows == 0	1295:6:29965:30002	1086651	0	True				
ANR	1086717	OrExpression	! ret || I . columns == - 1 && I . rows == 0		1086651	0		||			
ANR	1086718	UnaryOperationExpression	! ret		1086651	0					
ANR	1086719	UnaryOperator	!		1086651	0					
ANR	1086720	Identifier	ret		1086651	1					
ANR	1086721	AndExpression	I . columns == - 1 && I . rows == 0		1086651	1		&&			
ANR	1086722	EqualityExpression	I . columns == - 1		1086651	0		==			
ANR	1086723	MemberAccess	I . columns		1086651	0					
ANR	1086724	Identifier	I		1086651	0					
ANR	1086725	Identifier	columns		1086651	1					
ANR	1086726	UnaryOperationExpression	- 1		1086651	1					
ANR	1086727	UnaryOperator	-		1086651	0					
ANR	1086728	PrimaryExpression	1		1086651	1					
ANR	1086729	EqualityExpression	I . rows == 0		1086651	1		==			
ANR	1086730	MemberAccess	I . rows		1086651	0					
ANR	1086731	Identifier	I		1086651	0					
ANR	1086732	Identifier	rows		1086651	1					
ANR	1086733	PrimaryExpression	0		1086651	1					
ANR	1086734	CompoundStatement		7:46:294:294	1086651	1					
ANR	1086735	ExpressionStatement	I . columns = 80	1297:2:30069:30083	1086651	0	True				
ANR	1086736	AssignmentExpression	I . columns = 80		1086651	0		=			
ANR	1086737	MemberAccess	I . columns		1086651	0					
ANR	1086738	Identifier	I		1086651	0					
ANR	1086739	Identifier	columns		1086651	1					
ANR	1086740	PrimaryExpression	80		1086651	1					
ANR	1086741	ExpressionStatement	I . rows = 23	1298:2:30087:30098	1086651	1	True				
ANR	1086742	AssignmentExpression	I . rows = 23		1086651	0		=			
ANR	1086743	MemberAccess	I . rows		1086651	0					
ANR	1086744	Identifier	I		1086651	0					
ANR	1086745	Identifier	rows		1086651	1					
ANR	1086746	PrimaryExpression	23		1086651	1					
ANR	1086747	ExpressionStatement	I . rows = 0	1336:1:30894:30904	1086651	5	True				
ANR	1086748	AssignmentExpression	I . rows = 0		1086651	0		=			
ANR	1086749	MemberAccess	I . rows		1086651	0					
ANR	1086750	Identifier	I		1086651	0					
ANR	1086751	Identifier	rows		1086651	1					
ANR	1086752	PrimaryExpression	0		1086651	1					
ANR	1086753	ExpressionStatement	I . columns = 0	1337:1:30907:30920	1086651	6	True				
ANR	1086754	AssignmentExpression	I . columns = 0		1086651	0		=			
ANR	1086755	MemberAccess	I . columns		1086651	0					
ANR	1086756	Identifier	I		1086651	0					
ANR	1086757	Identifier	columns		1086651	1					
ANR	1086758	PrimaryExpression	0		1086651	1					
ANR	1086759	ExpressionStatement	I . rows = - 1	1341:1:30977:30988	1086651	7	True				
ANR	1086760	AssignmentExpression	I . rows = - 1		1086651	0		=			
ANR	1086761	MemberAccess	I . rows		1086651	0					
ANR	1086762	Identifier	I		1086651	0					
ANR	1086763	Identifier	rows		1086651	1					
ANR	1086764	UnaryOperationExpression	- 1		1086651	1					
ANR	1086765	UnaryOperator	-		1086651	0					
ANR	1086766	PrimaryExpression	1		1086651	1					
ANR	1086767	ExpressionStatement	I . columns = - 1	1342:1:30991:31005	1086651	8	True				
ANR	1086768	AssignmentExpression	I . columns = - 1		1086651	0		=			
ANR	1086769	MemberAccess	I . columns		1086651	0					
ANR	1086770	Identifier	I		1086651	0					
ANR	1086771	Identifier	columns		1086651	1					
ANR	1086772	UnaryOperationExpression	- 1		1086651	1					
ANR	1086773	UnaryOperator	-		1086651	0					
ANR	1086774	PrimaryExpression	1		1086651	1					
ANR	1086775	IfStatement	if ( I . rows < 0 )		1086651	9					
ANR	1086776	Condition	I . rows < 0	1344:5:31019:31028	1086651	0	True				
ANR	1086777	RelationalExpression	I . rows < 0		1086651	0		<			
ANR	1086778	MemberAccess	I . rows		1086651	0					
ANR	1086779	Identifier	I		1086651	0					
ANR	1086780	Identifier	rows		1086651	1					
ANR	1086781	PrimaryExpression	0		1086651	1					
ANR	1086782	CompoundStatement		56:17:1320:1320	1086651	1					
ANR	1086783	ExpressionStatement	I . rows = 0	1345:2:31035:31045	1086651	0	True				
ANR	1086784	AssignmentExpression	I . rows = 0		1086651	0		=			
ANR	1086785	MemberAccess	I . rows		1086651	0					
ANR	1086786	Identifier	I		1086651	0					
ANR	1086787	Identifier	rows		1086651	1					
ANR	1086788	PrimaryExpression	0		1086651	1					
ANR	1086789	IfStatement	if ( I . columns < 0 )		1086651	10					
ANR	1086790	Condition	I . columns < 0	1347:5:31055:31067	1086651	0	True				
ANR	1086791	RelationalExpression	I . columns < 0		1086651	0		<			
ANR	1086792	MemberAccess	I . columns		1086651	0					
ANR	1086793	Identifier	I		1086651	0					
ANR	1086794	Identifier	columns		1086651	1					
ANR	1086795	PrimaryExpression	0		1086651	1					
ANR	1086796	CompoundStatement		59:20:1359:1359	1086651	1					
ANR	1086797	ExpressionStatement	I . columns = 0	1348:2:31074:31087	1086651	0	True				
ANR	1086798	AssignmentExpression	I . columns = 0		1086651	0		=			
ANR	1086799	MemberAccess	I . columns		1086651	0					
ANR	1086800	Identifier	I		1086651	0					
ANR	1086801	Identifier	columns		1086651	1					
ANR	1086802	PrimaryExpression	0		1086651	1					
ANR	1086803	IfStatement	if ( I . force_columns )		1086651	11					
ANR	1086804	Condition	I . force_columns	1350:5:31097:31111	1086651	0	True				
ANR	1086805	MemberAccess	I . force_columns		1086651	0					
ANR	1086806	Identifier	I		1086651	0					
ANR	1086807	Identifier	force_columns		1086651	1					
ANR	1086808	CompoundStatement		62:22:1403:1403	1086651	1					
ANR	1086809	ExpressionStatement	I . columns = I . force_columns	1351:2:31118:31145	1086651	0	True				
ANR	1086810	AssignmentExpression	I . columns = I . force_columns		1086651	0		=			
ANR	1086811	MemberAccess	I . columns		1086651	0					
ANR	1086812	Identifier	I		1086651	0					
ANR	1086813	Identifier	columns		1086651	1					
ANR	1086814	MemberAccess	I . force_columns		1086651	1					
ANR	1086815	Identifier	I		1086651	0					
ANR	1086816	Identifier	force_columns		1086651	1					
ANR	1086817	IfStatement	if ( I . force_rows )		1086651	12					
ANR	1086818	Condition	I . force_rows	1353:5:31155:31166	1086651	0	True				
ANR	1086819	MemberAccess	I . force_rows		1086651	0					
ANR	1086820	Identifier	I		1086651	0					
ANR	1086821	Identifier	force_rows		1086651	1					
ANR	1086822	CompoundStatement		65:19:1458:1458	1086651	1					
ANR	1086823	ExpressionStatement	I . rows = I . force_rows	1354:2:31173:31194	1086651	0	True				
ANR	1086824	AssignmentExpression	I . rows = I . force_rows		1086651	0		=			
ANR	1086825	MemberAccess	I . rows		1086651	0					
ANR	1086826	Identifier	I		1086651	0					
ANR	1086827	Identifier	rows		1086651	1					
ANR	1086828	MemberAccess	I . force_rows		1086651	1					
ANR	1086829	Identifier	I		1086651	0					
ANR	1086830	Identifier	force_rows		1086651	1					
ANR	1086831	IfStatement	if ( I . fix_columns )		1086651	13					
ANR	1086832	Condition	I . fix_columns	1356:5:31204:31216	1086651	0	True				
ANR	1086833	MemberAccess	I . fix_columns		1086651	0					
ANR	1086834	Identifier	I		1086651	0					
ANR	1086835	Identifier	fix_columns		1086651	1					
ANR	1086836	CompoundStatement		68:20:1508:1508	1086651	1					
ANR	1086837	ExpressionStatement	I . columns += I . fix_columns	1357:2:31223:31249	1086651	0	True				
ANR	1086838	AssignmentExpression	I . columns += I . fix_columns		1086651	0		+=			
ANR	1086839	MemberAccess	I . columns		1086651	0					
ANR	1086840	Identifier	I		1086651	0					
ANR	1086841	Identifier	columns		1086651	1					
ANR	1086842	MemberAccess	I . fix_columns		1086651	1					
ANR	1086843	Identifier	I		1086651	0					
ANR	1086844	Identifier	fix_columns		1086651	1					
ANR	1086845	IfStatement	if ( I . fix_rows )		1086651	14					
ANR	1086846	Condition	I . fix_rows	1359:5:31259:31268	1086651	0	True				
ANR	1086847	MemberAccess	I . fix_rows		1086651	0					
ANR	1086848	Identifier	I		1086651	0					
ANR	1086849	Identifier	fix_rows		1086651	1					
ANR	1086850	CompoundStatement		71:17:1560:1560	1086651	1					
ANR	1086851	ExpressionStatement	I . rows += I . fix_rows	1360:2:31275:31295	1086651	0	True				
ANR	1086852	AssignmentExpression	I . rows += I . fix_rows		1086651	0		+=			
ANR	1086853	MemberAccess	I . rows		1086651	0					
ANR	1086854	Identifier	I		1086651	0					
ANR	1086855	Identifier	rows		1086651	1					
ANR	1086856	MemberAccess	I . fix_rows		1086651	1					
ANR	1086857	Identifier	I		1086651	0					
ANR	1086858	Identifier	fix_rows		1086651	1					
ANR	1086859	IfStatement	if ( rows )		1086651	15					
ANR	1086860	Condition	rows	1362:5:31305:31308	1086651	0	True				
ANR	1086861	Identifier	rows		1086651	0					
ANR	1086862	CompoundStatement		74:11:1600:1600	1086651	1					
ANR	1086863	ExpressionStatement	* rows = I . rows	1363:2:31315:31329	1086651	0	True				
ANR	1086864	AssignmentExpression	* rows = I . rows		1086651	0		=			
ANR	1086865	UnaryOperationExpression	* rows		1086651	0					
ANR	1086866	UnaryOperator	*		1086651	0					
ANR	1086867	Identifier	rows		1086651	1					
ANR	1086868	MemberAccess	I . rows		1086651	1					
ANR	1086869	Identifier	I		1086651	0					
ANR	1086870	Identifier	rows		1086651	1					
ANR	1086871	ExpressionStatement	"I . rows = R_MAX ( 0 , I . rows )"	1365:1:31335:31361	1086651	16	True				
ANR	1086872	AssignmentExpression	"I . rows = R_MAX ( 0 , I . rows )"		1086651	0		=			
ANR	1086873	MemberAccess	I . rows		1086651	0					
ANR	1086874	Identifier	I		1086651	0					
ANR	1086875	Identifier	rows		1086651	1					
ANR	1086876	CallExpression	"R_MAX ( 0 , I . rows )"		1086651	1					
ANR	1086877	Callee	R_MAX		1086651	0					
ANR	1086878	Identifier	R_MAX		1086651	0					
ANR	1086879	ArgumentList	0		1086651	1					
ANR	1086880	Argument	0		1086651	0					
ANR	1086881	PrimaryExpression	0		1086651	0					
ANR	1086882	Argument	I . rows		1086651	1					
ANR	1086883	MemberAccess	I . rows		1086651	0					
ANR	1086884	Identifier	I		1086651	0					
ANR	1086885	Identifier	rows		1086651	1					
ANR	1086886	ReturnStatement	"return R_MAX ( 0 , I . columns ) ;"	1366:1:31364:31391	1086651	17	True				
ANR	1086887	CallExpression	"R_MAX ( 0 , I . columns )"		1086651	0					
ANR	1086888	Callee	R_MAX		1086651	0					
ANR	1086889	Identifier	R_MAX		1086651	0					
ANR	1086890	ArgumentList	0		1086651	1					
ANR	1086891	Argument	0		1086651	0					
ANR	1086892	PrimaryExpression	0		1086651	0					
ANR	1086893	Argument	I . columns		1086651	1					
ANR	1086894	MemberAccess	I . columns		1086651	0					
ANR	1086895	Identifier	I		1086651	0					
ANR	1086896	Identifier	columns		1086651	1					
ANR	1086897	ReturnType	R_API int		1086651	1					
ANR	1086898	Identifier	r_cons_get_size		1086651	2					
ANR	1086899	ParameterList	int * rows		1086651	3					
ANR	1086900	Parameter	int * rows	1289:26:29699:29707	1086651	0	True				
ANR	1086901	ParameterType	int *		1086651	0					
ANR	1086902	Identifier	rows		1086651	1					
ANR	1086903	CFGEntryNode	ENTRY		1086651		True				
ANR	1086904	CFGExitNode	EXIT		1086651		True				
ANR	1086905	Symbol	ret		1086651						
ANR	1086906	Symbol	GetStdHandle		1086651						
ANR	1086907	Symbol	I . fix_columns		1086651						
ANR	1086908	Symbol	STD_OUTPUT_HANDLE		1086651						
ANR	1086909	Symbol	GetConsoleScreenBufferInfo		1086651						
ANR	1086910	Symbol	I . columns		1086651						
ANR	1086911	Symbol	I		1086651						
ANR	1086912	Symbol	rows		1086651						
ANR	1086913	Symbol	* rows		1086651						
ANR	1086914	Symbol	I . rows		1086651						
ANR	1086915	Symbol	I . fix_rows		1086651						
ANR	1086916	Symbol	I . force_columns		1086651						
ANR	1086917	Symbol	& csbi		1086651						
ANR	1086918	Symbol	R_MAX		1086651						
ANR	1086919	Symbol	csbi		1086651						
ANR	1086920	Symbol	csbi . srWindow . Top		1086651						
ANR	1086921	Symbol	csbi . srWindow . Right		1086651						
ANR	1086922	Symbol	csbi . srWindow . Left		1086651						
ANR	1086923	Symbol	csbi . srWindow . Bottom		1086651						
ANR	1086924	Symbol	csbi . srWindow		1086651						
ANR	1086925	Symbol	I . force_rows		1086651						
ANR	1086926	DeclStmt									
ANR	1086927	Decl							R_API os_info	R_API os_info * ( )	r_sys_get_osinfo
ANR	1086928	Function	r_cons_is_ansicon	1371:0:31447:31915							
ANR	1086929	FunctionDef	r_cons_is_ansicon ()		1086928	0					
ANR	1086930	CompoundStatement		1371:35:31482:31915	1086928	0					
ANR	1086931	IdentifierDeclStatement	DWORD major ;	1372:1:31485:31496	1086928	0	True				
ANR	1086932	IdentifierDecl	major		1086928	0					
ANR	1086933	IdentifierDeclType	DWORD		1086928	0					
ANR	1086934	Identifier	major		1086928	1					
ANR	1086935	IdentifierDeclStatement	DWORD minor ;	1373:1:31499:31510	1086928	1	True				
ANR	1086936	IdentifierDecl	minor		1086928	0					
ANR	1086937	IdentifierDeclType	DWORD		1086928	0					
ANR	1086938	Identifier	minor		1086928	1					
ANR	1086939	IdentifierDeclStatement	bool win_support = false ;	1374:1:31513:31537	1086928	2	True				
ANR	1086940	IdentifierDecl	win_support = false		1086928	0					
ANR	1086941	IdentifierDeclType	bool		1086928	0					
ANR	1086942	Identifier	win_support		1086928	1					
ANR	1086943	AssignmentExpression	win_support = false		1086928	2		=			
ANR	1086944	Identifier	false		1086928	0					
ANR	1086945	Identifier	false		1086928	1					
ANR	1086946	IdentifierDeclStatement	os_info * info = r_sys_get_osinfo ( ) ;	1375:1:31540:31575	1086928	3	True				
ANR	1086947	IdentifierDecl	* info = r_sys_get_osinfo ( )		1086928	0					
ANR	1086948	IdentifierDeclType	os_info *		1086928	0					
ANR	1086949	Identifier	info		1086928	1					
ANR	1086950	AssignmentExpression	* info = r_sys_get_osinfo ( )		1086928	2		=			
ANR	1086951	Identifier	info		1086928	0					
ANR	1086952	CallExpression	r_sys_get_osinfo ( )		1086928	1					
ANR	1086953	Callee	r_sys_get_osinfo		1086928	0					
ANR	1086954	Identifier	r_sys_get_osinfo		1086928	0					
ANR	1086955	ArgumentList			1086928	1					
ANR	1086956	IfStatement	if ( info )		1086928	4					
ANR	1086957	Condition	info	1376:5:31582:31585	1086928	0	True				
ANR	1086958	Identifier	info		1086928	0					
ANR	1086959	CompoundStatement		6:11:105:105	1086928	1					
ANR	1086960	ExpressionStatement	major = info -> major	1377:2:31592:31611	1086928	0	True				
ANR	1086961	AssignmentExpression	major = info -> major		1086928	0		=			
ANR	1086962	Identifier	major		1086928	0					
ANR	1086963	PtrMemberAccess	info -> major		1086928	1					
ANR	1086964	Identifier	info		1086928	0					
ANR	1086965	Identifier	major		1086928	1					
ANR	1086966	ExpressionStatement	minor = info -> minor	1378:2:31615:31634	1086928	1	True				
ANR	1086967	AssignmentExpression	minor = info -> minor		1086928	0		=			
ANR	1086968	Identifier	minor		1086928	0					
ANR	1086969	PtrMemberAccess	info -> minor		1086928	1					
ANR	1086970	Identifier	info		1086928	0					
ANR	1086971	Identifier	minor		1086928	1					
ANR	1086972	IfStatement	if ( major > 10 || major == 10 && minor > 0 || major == 10 && minor == 0 && info -> compilation >= 1703 )		1086928	2					
ANR	1086973	Condition	major > 10 || major == 10 && minor > 0 || major == 10 && minor == 0 && info -> compilation >= 1703	1379:6:31642:31743	1086928	0	True				
ANR	1086974	OrExpression	major > 10 || major == 10 && minor > 0 || major == 10 && minor == 0 && info -> compilation >= 1703		1086928	0		||			
ANR	1086975	RelationalExpression	major > 10		1086928	0		>			
ANR	1086976	Identifier	major		1086928	0					
ANR	1086977	PrimaryExpression	10		1086928	1					
ANR	1086978	OrExpression	major == 10 && minor > 0 || major == 10 && minor == 0 && info -> compilation >= 1703		1086928	1		||			
ANR	1086979	AndExpression	major == 10 && minor > 0		1086928	0		&&			
ANR	1086980	EqualityExpression	major == 10		1086928	0		==			
ANR	1086981	Identifier	major		1086928	0					
ANR	1086982	PrimaryExpression	10		1086928	1					
ANR	1086983	RelationalExpression	minor > 0		1086928	1		>			
ANR	1086984	Identifier	minor		1086928	0					
ANR	1086985	PrimaryExpression	0		1086928	1					
ANR	1086986	AndExpression	major == 10 && minor == 0 && info -> compilation >= 1703		1086928	1		&&			
ANR	1086987	EqualityExpression	major == 10		1086928	0		==			
ANR	1086988	Identifier	major		1086928	0					
ANR	1086989	PrimaryExpression	10		1086928	1					
ANR	1086990	AndExpression	minor == 0 && info -> compilation >= 1703		1086928	1		&&			
ANR	1086991	EqualityExpression	minor == 0		1086928	0		==			
ANR	1086992	Identifier	minor		1086928	0					
ANR	1086993	PrimaryExpression	0		1086928	1					
ANR	1086994	RelationalExpression	info -> compilation >= 1703		1086928	1		>=			
ANR	1086995	PtrMemberAccess	info -> compilation		1086928	0					
ANR	1086996	Identifier	info		1086928	0					
ANR	1086997	Identifier	compilation		1086928	1					
ANR	1086998	PrimaryExpression	1703		1086928	1					
ANR	1086999	CompoundStatement		11:62:263:263	1086928	1					
ANR	1087000	ExpressionStatement	win_support = true	1382:3:31751:31769	1086928	0	True				
ANR	1087001	AssignmentExpression	win_support = true		1086928	0		=			
ANR	1087002	Identifier	win_support		1086928	0					
ANR	1087003	Identifier	true		1086928	1					
ANR	1087004	ExpressionStatement	free ( info )	1385:1:31779:31790	1086928	5	True				
ANR	1087005	CallExpression	free ( info )		1086928	0					
ANR	1087006	Callee	free		1086928	0					
ANR	1087007	Identifier	free		1086928	0					
ANR	1087008	ArgumentList	info		1086928	1					
ANR	1087009	Argument	info		1086928	0					
ANR	1087010	Identifier	info		1086928	0					
ANR	1087011	IdentifierDeclStatement	"char * ansicon = r_sys_getenv ( ""ANSICON"" ) ;"	1386:1:31793:31833	1086928	6	True				
ANR	1087012	IdentifierDecl	"* ansicon = r_sys_getenv ( ""ANSICON"" )"		1086928	0					
ANR	1087013	IdentifierDeclType	char *		1086928	0					
ANR	1087014	Identifier	ansicon		1086928	1					
ANR	1087015	AssignmentExpression	"* ansicon = r_sys_getenv ( ""ANSICON"" )"		1086928	2		=			
ANR	1087016	Identifier	ansicon		1086928	0					
ANR	1087017	CallExpression	"r_sys_getenv ( ""ANSICON"" )"		1086928	1					
ANR	1087018	Callee	r_sys_getenv		1086928	0					
ANR	1087019	Identifier	r_sys_getenv		1086928	0					
ANR	1087020	ArgumentList	"""ANSICON"""		1086928	1					
ANR	1087021	Argument	"""ANSICON"""		1086928	0					
ANR	1087022	PrimaryExpression	"""ANSICON"""		1086928	0					
ANR	1087023	IfStatement	if ( ansicon )		1086928	7					
ANR	1087024	Condition	ansicon	1387:5:31840:31846	1086928	0	True				
ANR	1087025	Identifier	ansicon		1086928	0					
ANR	1087026	CompoundStatement		17:14:366:366	1086928	1					
ANR	1087027	ExpressionStatement	free ( ansicon )	1388:2:31853:31867	1086928	0	True				
ANR	1087028	CallExpression	free ( ansicon )		1086928	0					
ANR	1087029	Callee	free		1086928	0					
ANR	1087030	Identifier	free		1086928	0					
ANR	1087031	ArgumentList	ansicon		1086928	1					
ANR	1087032	Argument	ansicon		1086928	0					
ANR	1087033	Identifier	ansicon		1086928	0					
ANR	1087034	ExpressionStatement	win_support = true	1389:2:31871:31889	1086928	1	True				
ANR	1087035	AssignmentExpression	win_support = true		1086928	0		=			
ANR	1087036	Identifier	win_support		1086928	0					
ANR	1087037	Identifier	true		1086928	1					
ANR	1087038	ReturnStatement	return win_support ;	1391:1:31895:31913	1086928	8	True				
ANR	1087039	Identifier	win_support		1086928	0					
ANR	1087040	ReturnType	R_API bool		1086928	1					
ANR	1087041	Identifier	r_cons_is_ansicon		1086928	2					
ANR	1087042	ParameterList			1086928	3					
ANR	1087043	CFGEntryNode	ENTRY		1086928		True				
ANR	1087044	CFGExitNode	EXIT		1086928		True				
ANR	1087045	Symbol	info -> minor		1086928						
ANR	1087046	Symbol	minor		1086928						
ANR	1087047	Symbol	r_sys_getenv		1086928						
ANR	1087048	Symbol	false		1086928						
ANR	1087049	Symbol	ansicon		1086928						
ANR	1087050	Symbol	info -> compilation		1086928						
ANR	1087051	Symbol	r_sys_get_osinfo		1086928						
ANR	1087052	Symbol	info -> major		1086928						
ANR	1087053	Symbol	major		1086928						
ANR	1087054	Symbol	win_support		1086928						
ANR	1087055	Symbol	true		1086928						
ANR	1087056	Symbol	* info		1086928						
ANR	1087057	Symbol	info		1086928						
ANR	1087058	Function	r_cons_show_cursor	1395:0:31925:32488							
ANR	1087059	FunctionDef	r_cons_show_cursor (int cursor)		1087058	0					
ANR	1087060	CompoundStatement		1395:42:31967:32488	1087058	0					
ANR	1087061	IfStatement	if ( I . ansicon )		1087058	0					
ANR	1087062	Condition	I . ansicon	1397:5:31990:31998	1087058	0	True				
ANR	1087063	MemberAccess	I . ansicon		1087058	0					
ANR	1087064	Identifier	I		1087058	0					
ANR	1087065	Identifier	ansicon		1087058	1					
ANR	1087066	CompoundStatement		3:16:33:33	1087058	1					
ANR	1087067	ExpressionStatement	"write ( 1 , cursor ? ""\\x1b[?25h"" : ""\\x1b[?25l"" , 6 )"	1399:2:32012:32060	1087058	0	True				
ANR	1087068	CallExpression	"write ( 1 , cursor ? ""\\x1b[?25h"" : ""\\x1b[?25l"" , 6 )"		1087058	0					
ANR	1087069	Callee	write		1087058	0					
ANR	1087070	Identifier	write		1087058	0					
ANR	1087071	ArgumentList	1		1087058	1					
ANR	1087072	Argument	1		1087058	0					
ANR	1087073	PrimaryExpression	1		1087058	0					
ANR	1087074	Argument	"cursor ? ""\\x1b[?25h"" : ""\\x1b[?25l"""		1087058	1					
ANR	1087075	ConditionalExpression	"cursor ? ""\\x1b[?25h"" : ""\\x1b[?25l"""		1087058	0					
ANR	1087076	Condition	cursor		1087058	0					
ANR	1087077	Identifier	cursor		1087058	0					
ANR	1087078	PrimaryExpression	"""\\x1b[?25h"""		1087058	1					
ANR	1087079	PrimaryExpression	"""\\x1b[?25l"""		1087058	2					
ANR	1087080	Argument	6		1087058	2					
ANR	1087081	PrimaryExpression	6		1087058	0					
ANR	1087082	ElseStatement	else		1087058	0					
ANR	1087083	CompoundStatement		10:2:180:211	1087058	0					
ANR	1087084	Statement	static	1402:2:32090:32095	1087058	0	True				
ANR	1087085	IdentifierDeclStatement	HANDLE hStdout = NULL ;	1402:9:32097:32118	1087058	1	True				
ANR	1087086	IdentifierDecl	hStdout = NULL		1087058	0					
ANR	1087087	IdentifierDeclType	HANDLE		1087058	0					
ANR	1087088	Identifier	hStdout		1087058	1					
ANR	1087089	AssignmentExpression	hStdout = NULL		1087058	2		=			
ANR	1087090	Identifier	NULL		1087058	0					
ANR	1087091	Identifier	NULL		1087058	1					
ANR	1087092	Statement	static	1403:2:32122:32127	1087058	2	True				
ANR	1087093	IdentifierDeclStatement	DWORD size = - 1 ;	1403:9:32129:32144	1087058	3	True				
ANR	1087094	IdentifierDecl	size = - 1		1087058	0					
ANR	1087095	IdentifierDeclType	DWORD		1087058	0					
ANR	1087096	Identifier	size		1087058	1					
ANR	1087097	AssignmentExpression	size = - 1		1087058	2		=			
ANR	1087098	Identifier	size		1087058	0					
ANR	1087099	UnaryOperationExpression	- 1		1087058	1					
ANR	1087100	UnaryOperator	-		1087058	0					
ANR	1087101	PrimaryExpression	1		1087058	1					
ANR	1087102	IdentifierDeclStatement	CONSOLE_CURSOR_INFO cursor_info ;	1404:2:32148:32179	1087058	4	True				
ANR	1087103	IdentifierDecl	cursor_info		1087058	0					
ANR	1087104	IdentifierDeclType	CONSOLE_CURSOR_INFO		1087058	0					
ANR	1087105	Identifier	cursor_info		1087058	1					
ANR	1087106	IfStatement	if ( ! hStdout )		1087058	5					
ANR	1087107	Condition	! hStdout	1405:6:32187:32194	1087058	0	True				
ANR	1087108	UnaryOperationExpression	! hStdout		1087058	0					
ANR	1087109	UnaryOperator	!		1087058	0					
ANR	1087110	Identifier	hStdout		1087058	1					
ANR	1087111	CompoundStatement		11:16:229:229	1087058	1					
ANR	1087112	ExpressionStatement	hStdout = GetStdHandle ( STD_OUTPUT_HANDLE )	1406:3:32202:32244	1087058	0	True				
ANR	1087113	AssignmentExpression	hStdout = GetStdHandle ( STD_OUTPUT_HANDLE )		1087058	0		=			
ANR	1087114	Identifier	hStdout		1087058	0					
ANR	1087115	CallExpression	GetStdHandle ( STD_OUTPUT_HANDLE )		1087058	1					
ANR	1087116	Callee	GetStdHandle		1087058	0					
ANR	1087117	Identifier	GetStdHandle		1087058	0					
ANR	1087118	ArgumentList	STD_OUTPUT_HANDLE		1087058	1					
ANR	1087119	Argument	STD_OUTPUT_HANDLE		1087058	0					
ANR	1087120	Identifier	STD_OUTPUT_HANDLE		1087058	0					
ANR	1087121	IfStatement	if ( size == - 1 )		1087058	6					
ANR	1087122	Condition	size == - 1	1408:6:32256:32265	1087058	0	True				
ANR	1087123	EqualityExpression	size == - 1		1087058	0		==			
ANR	1087124	Identifier	size		1087058	0					
ANR	1087125	UnaryOperationExpression	- 1		1087058	1					
ANR	1087126	UnaryOperator	-		1087058	0					
ANR	1087127	PrimaryExpression	1		1087058	1					
ANR	1087128	CompoundStatement		14:18:300:300	1087058	1					
ANR	1087129	ExpressionStatement	"GetConsoleCursorInfo ( hStdout , & cursor_info )"	1409:3:32273:32317	1087058	0	True				
ANR	1087130	CallExpression	"GetConsoleCursorInfo ( hStdout , & cursor_info )"		1087058	0					
ANR	1087131	Callee	GetConsoleCursorInfo		1087058	0					
ANR	1087132	Identifier	GetConsoleCursorInfo		1087058	0					
ANR	1087133	ArgumentList	hStdout		1087058	1					
ANR	1087134	Argument	hStdout		1087058	0					
ANR	1087135	Identifier	hStdout		1087058	0					
ANR	1087136	Argument	& cursor_info		1087058	1					
ANR	1087137	UnaryOperationExpression	& cursor_info		1087058	0					
ANR	1087138	UnaryOperator	&		1087058	0					
ANR	1087139	Identifier	cursor_info		1087058	1					
ANR	1087140	ExpressionStatement	size = cursor_info . dwSize	1410:3:32322:32347	1087058	1	True				
ANR	1087141	AssignmentExpression	size = cursor_info . dwSize		1087058	0		=			
ANR	1087142	Identifier	size		1087058	0					
ANR	1087143	MemberAccess	cursor_info . dwSize		1087058	1					
ANR	1087144	Identifier	cursor_info		1087058	0					
ANR	1087145	Identifier	dwSize		1087058	1					
ANR	1087146	ExpressionStatement	cursor_info . dwSize = size	1412:2:32355:32380	1087058	7	True				
ANR	1087147	AssignmentExpression	cursor_info . dwSize = size		1087058	0		=			
ANR	1087148	MemberAccess	cursor_info . dwSize		1087058	0					
ANR	1087149	Identifier	cursor_info		1087058	0					
ANR	1087150	Identifier	dwSize		1087058	1					
ANR	1087151	Identifier	size		1087058	1					
ANR	1087152	ExpressionStatement	cursor_info . bVisible = cursor ? TRUE : FALSE	1413:2:32384:32428	1087058	8	True				
ANR	1087153	AssignmentExpression	cursor_info . bVisible = cursor ? TRUE : FALSE		1087058	0		=			
ANR	1087154	MemberAccess	cursor_info . bVisible		1087058	0					
ANR	1087155	Identifier	cursor_info		1087058	0					
ANR	1087156	Identifier	bVisible		1087058	1					
ANR	1087157	ConditionalExpression	cursor ? TRUE : FALSE		1087058	1					
ANR	1087158	Condition	cursor		1087058	0					
ANR	1087159	Identifier	cursor		1087058	0					
ANR	1087160	Identifier	TRUE		1087058	1					
ANR	1087161	Identifier	FALSE		1087058	2					
ANR	1087162	ExpressionStatement	"SetConsoleCursorInfo ( hStdout , & cursor_info )"	1414:2:32432:32476	1087058	9	True				
ANR	1087163	CallExpression	"SetConsoleCursorInfo ( hStdout , & cursor_info )"		1087058	0					
ANR	1087164	Callee	SetConsoleCursorInfo		1087058	0					
ANR	1087165	Identifier	SetConsoleCursorInfo		1087058	0					
ANR	1087166	ArgumentList	hStdout		1087058	1					
ANR	1087167	Argument	hStdout		1087058	0					
ANR	1087168	Identifier	hStdout		1087058	0					
ANR	1087169	Argument	& cursor_info		1087058	1					
ANR	1087170	UnaryOperationExpression	& cursor_info		1087058	0					
ANR	1087171	UnaryOperator	&		1087058	0					
ANR	1087172	Identifier	cursor_info		1087058	1					
ANR	1087173	ReturnType	R_API void		1087058	1					
ANR	1087174	Identifier	r_cons_show_cursor		1087058	2					
ANR	1087175	ParameterList	int cursor		1087058	3					
ANR	1087176	Parameter	int cursor	1395:30:31955:31964	1087058	0	True				
ANR	1087177	ParameterType	int		1087058	0					
ANR	1087178	Identifier	cursor		1087058	1					
ANR	1087179	CFGEntryNode	ENTRY		1087058		True				
ANR	1087180	CFGExitNode	EXIT		1087058		True				
ANR	1087181	Symbol	cursor		1087058						
ANR	1087182	Symbol	GetStdHandle		1087058						
ANR	1087183	Symbol	NULL		1087058						
ANR	1087184	Symbol	STD_OUTPUT_HANDLE		1087058						
ANR	1087185	Symbol	cursor_info . dwSize		1087058						
ANR	1087186	Symbol	I		1087058						
ANR	1087187	Symbol	TRUE		1087058						
ANR	1087188	Symbol	hStdout		1087058						
ANR	1087189	Symbol	& cursor_info		1087058						
ANR	1087190	Symbol	size		1087058						
ANR	1087191	Symbol	cursor_info . bVisible		1087058						
ANR	1087192	Symbol	FALSE		1087058						
ANR	1087193	Symbol	I . ansicon		1087058						
ANR	1087194	Symbol	cursor_info		1087058						
ANR	1087195	Function	r_cons_set_raw	1431:0:32858:33443							
ANR	1087196	FunctionDef	r_cons_set_raw (bool is_raw)		1087195	0					
ANR	1087197	CompoundStatement		1431:39:32897:33443	1087195	0					
ANR	1087198	Statement	static	1432:1:32900:32905	1087195	0	True				
ANR	1087199	IdentifierDeclStatement	int oldraw = - 1 ;	1432:8:32907:32922	1087195	1	True				
ANR	1087200	IdentifierDecl	oldraw = - 1		1087195	0					
ANR	1087201	IdentifierDeclType	int		1087195	0					
ANR	1087202	Identifier	oldraw		1087195	1					
ANR	1087203	AssignmentExpression	oldraw = - 1		1087195	2		=			
ANR	1087204	Identifier	oldraw		1087195	0					
ANR	1087205	UnaryOperationExpression	- 1		1087195	1					
ANR	1087206	UnaryOperator	-		1087195	0					
ANR	1087207	PrimaryExpression	1		1087195	1					
ANR	1087208	IfStatement	if ( oldraw != - 1 )		1087195	2					
ANR	1087209	Condition	oldraw != - 1	1433:5:32929:32940	1087195	0	True				
ANR	1087210	EqualityExpression	oldraw != - 1		1087195	0		!=			
ANR	1087211	Identifier	oldraw		1087195	0					
ANR	1087212	UnaryOperationExpression	- 1		1087195	1					
ANR	1087213	UnaryOperator	-		1087195	0					
ANR	1087214	PrimaryExpression	1		1087195	1					
ANR	1087215	CompoundStatement		3:19:45:45	1087195	1					
ANR	1087216	IfStatement	if ( is_raw == oldraw )		1087195	0					
ANR	1087217	Condition	is_raw == oldraw	1434:6:32951:32966	1087195	0	True				
ANR	1087218	EqualityExpression	is_raw == oldraw		1087195	0		==			
ANR	1087219	Identifier	is_raw		1087195	0					
ANR	1087220	Identifier	oldraw		1087195	1					
ANR	1087221	CompoundStatement		4:24:71:71	1087195	1					
ANR	1087222	ReturnStatement	return ;	1435:3:32974:32980	1087195	0	True				
ANR	1087223	ExpressionStatement	fflush ( stdout )	1457:1:33408:33423	1087195	3	True				
ANR	1087224	CallExpression	fflush ( stdout )		1087195	0					
ANR	1087225	Callee	fflush		1087195	0					
ANR	1087226	Identifier	fflush		1087195	0					
ANR	1087227	ArgumentList	stdout		1087195	1					
ANR	1087228	Argument	stdout		1087195	0					
ANR	1087229	Identifier	stdout		1087195	0					
ANR	1087230	ExpressionStatement	oldraw = is_raw	1458:1:33426:33441	1087195	4	True				
ANR	1087231	AssignmentExpression	oldraw = is_raw		1087195	0		=			
ANR	1087232	Identifier	oldraw		1087195	0					
ANR	1087233	Identifier	is_raw		1087195	1					
ANR	1087234	ReturnType	R_API void		1087195	1					
ANR	1087235	Identifier	r_cons_set_raw		1087195	2					
ANR	1087236	ParameterList	bool is_raw		1087195	3					
ANR	1087237	Parameter	bool is_raw	1431:26:32884:32894	1087195	0	True				
ANR	1087238	ParameterType	bool		1087195	0					
ANR	1087239	Identifier	is_raw		1087195	1					
ANR	1087240	CFGEntryNode	ENTRY		1087195		True				
ANR	1087241	CFGExitNode	EXIT		1087195		True				
ANR	1087242	Symbol	stdout		1087195						
ANR	1087243	Symbol	oldraw		1087195						
ANR	1087244	Symbol	is_raw		1087195						
ANR	1087245	Function	r_cons_invert	1461:0:33446:33538							
ANR	1087246	FunctionDef	"r_cons_invert (int set , int color)"		1087245	0					
ANR	1087247	CompoundStatement		1461:45:33491:33538	1087245	0					
ANR	1087248	ExpressionStatement	"r_cons_strcat ( R_CONS_INVERT ( set , color ) )"	1462:1:33494:33536	1087245	0	True				
ANR	1087249	CallExpression	"r_cons_strcat ( R_CONS_INVERT ( set , color ) )"		1087245	0					
ANR	1087250	Callee	r_cons_strcat		1087245	0					
ANR	1087251	Identifier	r_cons_strcat		1087245	0					
ANR	1087252	ArgumentList	"R_CONS_INVERT ( set , color )"		1087245	1					
ANR	1087253	Argument	"R_CONS_INVERT ( set , color )"		1087245	0					
ANR	1087254	CallExpression	"R_CONS_INVERT ( set , color )"		1087245	0					
ANR	1087255	Callee	R_CONS_INVERT		1087245	0					
ANR	1087256	Identifier	R_CONS_INVERT		1087245	0					
ANR	1087257	ArgumentList	set		1087245	1					
ANR	1087258	Argument	set		1087245	0					
ANR	1087259	Identifier	set		1087245	0					
ANR	1087260	Argument	color		1087245	1					
ANR	1087261	Identifier	color		1087245	0					
ANR	1087262	ReturnType	R_API void		1087245	1					
ANR	1087263	Identifier	r_cons_invert		1087245	2					
ANR	1087264	ParameterList	"int set , int color"		1087245	3					
ANR	1087265	Parameter	int set	1461:25:33471:33477	1087245	0	True				
ANR	1087266	ParameterType	int		1087245	0					
ANR	1087267	Identifier	set		1087245	1					
ANR	1087268	Parameter	int color	1461:34:33480:33488	1087245	1	True				
ANR	1087269	ParameterType	int		1087245	0					
ANR	1087270	Identifier	color		1087245	1					
ANR	1087271	CFGEntryNode	ENTRY		1087245		True				
ANR	1087272	CFGExitNode	EXIT		1087245		True				
ANR	1087273	Symbol	set		1087245						
ANR	1087274	Symbol	color		1087245						
ANR	1087275	Symbol	R_CONS_INVERT		1087245						
ANR	1087276	Function	r_cons_set_cup	1471:0:33731:34310							
ANR	1087277	FunctionDef	r_cons_set_cup (int enable)		1087276	0					
ANR	1087278	CompoundStatement		1471:38:33769:34310	1087276	0					
ANR	1087279	Statement	const	1473:1:33785:33789	1087276	0	True				
ANR	1087280	Statement	char	1473:7:33791:33794	1087276	1	True				
ANR	1087281	Statement	*	1473:12:33796:33796	1087276	2	True				
ANR	1087282	Statement	code	1473:13:33797:33800	1087276	3	True				
ANR	1087283	Statement	=	1473:18:33802:33802	1087276	4	True				
ANR	1087284	Statement	enable	1473:20:33804:33809	1087276	5	True				
ANR	1087285	Statement	?	1474:2:33813:33813	1087276	6	True				
ANR	1087286	Statement	"""\\x1b[?1049h"""	1474:4:33815:33827	1087276	7	True				
ANR	1087287	Statement	"""\\x1b"""	1474:18:33829:33834	1087276	8	True				
ANR	1087288	Statement	"""7\\x1b[?47h"""	1474:25:33836:33847	1087276	9	True				
ANR	1087289	Statement	:	1475:2:33851:33851	1087276	10	True				
ANR	1087290	Statement	"""\\x1b[?1049l"""	1475:4:33853:33865	1087276	11	True				
ANR	1087291	Statement	"""\\x1b[?47l"""	1475:18:33867:33877	1087276	12	True				
ANR	1087292	Statement	"""\\x1b"""	1475:30:33879:33884	1087276	13	True				
ANR	1087293	ExpressionStatement	"""8"""	1475:37:33886:33889	1087276	14	True				
ANR	1087294	PrimaryExpression	"""8"""		1087276	0					
ANR	1087295	ExpressionStatement	"write ( 2 , code , strlen ( code ) )"	1476:1:33892:33922	1087276	15	True				
ANR	1087296	CallExpression	"write ( 2 , code , strlen ( code ) )"		1087276	0					
ANR	1087297	Callee	write		1087276	0					
ANR	1087298	Identifier	write		1087276	0					
ANR	1087299	ArgumentList	2		1087276	1					
ANR	1087300	Argument	2		1087276	0					
ANR	1087301	PrimaryExpression	2		1087276	0					
ANR	1087302	Argument	code		1087276	1					
ANR	1087303	Identifier	code		1087276	0					
ANR	1087304	Argument	strlen ( code )		1087276	2					
ANR	1087305	CallExpression	strlen ( code )		1087276	0					
ANR	1087306	Callee	strlen		1087276	0					
ANR	1087307	Identifier	strlen		1087276	0					
ANR	1087308	ArgumentList	code		1087276	1					
ANR	1087309	Argument	code		1087276	0					
ANR	1087310	Identifier	code		1087276	0					
ANR	1087311	ExpressionStatement	fflush ( stdout )	1477:1:33925:33940	1087276	16	True				
ANR	1087312	CallExpression	fflush ( stdout )		1087276	0					
ANR	1087313	Callee	fflush		1087276	0					
ANR	1087314	Identifier	fflush		1087276	0					
ANR	1087315	ArgumentList	stdout		1087276	1					
ANR	1087316	Argument	stdout		1087276	0					
ANR	1087317	Identifier	stdout		1087276	0					
ANR	1087318	ReturnType	R_API void		1087276	1					
ANR	1087319	Identifier	r_cons_set_cup		1087276	2					
ANR	1087320	ParameterList	int enable		1087276	3					
ANR	1087321	Parameter	int enable	1471:26:33757:33766	1087276	0	True				
ANR	1087322	ParameterType	int		1087276	0					
ANR	1087323	Identifier	enable		1087276	1					
ANR	1087324	CFGEntryNode	ENTRY		1087276		True				
ANR	1087325	CFGExitNode	EXIT		1087276		True				
ANR	1087326	Symbol	strlen		1087276						
ANR	1087327	Symbol	code		1087276						
ANR	1087328	Symbol	stdout		1087276						
ANR	1087329	Symbol	enable		1087276						
ANR	1087330	Function	r_cons_column	1497:0:34313:34629							
ANR	1087331	FunctionDef	r_cons_column (int c)		1087330	0					
ANR	1087332	CompoundStatement		1497:32:34345:34629	1087330	0					
ANR	1087333	IdentifierDeclStatement	char * b = malloc ( I . context -> buffer_len + 1 ) ;	1498:1:34348:34392	1087330	0	True				
ANR	1087334	IdentifierDecl	* b = malloc ( I . context -> buffer_len + 1 )		1087330	0					
ANR	1087335	IdentifierDeclType	char *		1087330	0					
ANR	1087336	Identifier	b		1087330	1					
ANR	1087337	AssignmentExpression	* b = malloc ( I . context -> buffer_len + 1 )		1087330	2		=			
ANR	1087338	Identifier	b		1087330	0					
ANR	1087339	CallExpression	malloc ( I . context -> buffer_len + 1 )		1087330	1					
ANR	1087340	Callee	malloc		1087330	0					
ANR	1087341	Identifier	malloc		1087330	0					
ANR	1087342	ArgumentList	I . context -> buffer_len + 1		1087330	1					
ANR	1087343	Argument	I . context -> buffer_len + 1		1087330	0					
ANR	1087344	AdditiveExpression	I . context -> buffer_len + 1		1087330	0		+			
ANR	1087345	PtrMemberAccess	I . context -> buffer_len		1087330	0					
ANR	1087346	MemberAccess	I . context		1087330	0					
ANR	1087347	Identifier	I		1087330	0					
ANR	1087348	Identifier	context		1087330	1					
ANR	1087349	Identifier	buffer_len		1087330	1					
ANR	1087350	PrimaryExpression	1		1087330	1					
ANR	1087351	IfStatement	if ( ! b )		1087330	1					
ANR	1087352	Condition	! b	1499:5:34399:34400	1087330	0	True				
ANR	1087353	UnaryOperationExpression	! b		1087330	0					
ANR	1087354	UnaryOperator	!		1087330	0					
ANR	1087355	Identifier	b		1087330	1					
ANR	1087356	CompoundStatement		3:9:57:57	1087330	1					
ANR	1087357	ReturnStatement	return ;	1500:2:34407:34413	1087330	0	True				
ANR	1087358	ExpressionStatement	"memcpy ( b , I . context -> buffer , I . context -> buffer_len )"	1502:1:34419:34471	1087330	2	True				
ANR	1087359	CallExpression	"memcpy ( b , I . context -> buffer , I . context -> buffer_len )"		1087330	0					
ANR	1087360	Callee	memcpy		1087330	0					
ANR	1087361	Identifier	memcpy		1087330	0					
ANR	1087362	ArgumentList	b		1087330	1					
ANR	1087363	Argument	b		1087330	0					
ANR	1087364	Identifier	b		1087330	0					
ANR	1087365	Argument	I . context -> buffer		1087330	1					
ANR	1087366	PtrMemberAccess	I . context -> buffer		1087330	0					
ANR	1087367	MemberAccess	I . context		1087330	0					
ANR	1087368	Identifier	I		1087330	0					
ANR	1087369	Identifier	context		1087330	1					
ANR	1087370	Identifier	buffer		1087330	1					
ANR	1087371	Argument	I . context -> buffer_len		1087330	2					
ANR	1087372	PtrMemberAccess	I . context -> buffer_len		1087330	0					
ANR	1087373	MemberAccess	I . context		1087330	0					
ANR	1087374	Identifier	I		1087330	0					
ANR	1087375	Identifier	context		1087330	1					
ANR	1087376	Identifier	buffer_len		1087330	1					
ANR	1087377	ExpressionStatement	b [ I . context -> buffer_len ] = 0	1503:1:34474:34502	1087330	3	True				
ANR	1087378	AssignmentExpression	b [ I . context -> buffer_len ] = 0		1087330	0		=			
ANR	1087379	ArrayIndexing	b [ I . context -> buffer_len ]		1087330	0					
ANR	1087380	Identifier	b		1087330	0					
ANR	1087381	PtrMemberAccess	I . context -> buffer_len		1087330	1					
ANR	1087382	MemberAccess	I . context		1087330	0					
ANR	1087383	Identifier	I		1087330	0					
ANR	1087384	Identifier	context		1087330	1					
ANR	1087385	Identifier	buffer_len		1087330	1					
ANR	1087386	PrimaryExpression	0		1087330	1					
ANR	1087387	ExpressionStatement	r_cons_reset ( )	1504:1:34505:34520	1087330	4	True				
ANR	1087388	CallExpression	r_cons_reset ( )		1087330	0					
ANR	1087389	Callee	r_cons_reset		1087330	0					
ANR	1087390	Identifier	r_cons_reset		1087330	0					
ANR	1087391	ArgumentList			1087330	1					
ANR	1087392	ExpressionStatement	"r_cons_strcat_justify ( b , c , 0 )"	1506:1:34562:34593	1087330	5	True				
ANR	1087393	CallExpression	"r_cons_strcat_justify ( b , c , 0 )"		1087330	0					
ANR	1087394	Callee	r_cons_strcat_justify		1087330	0					
ANR	1087395	Identifier	r_cons_strcat_justify		1087330	0					
ANR	1087396	ArgumentList	b		1087330	1					
ANR	1087397	Argument	b		1087330	0					
ANR	1087398	Identifier	b		1087330	0					
ANR	1087399	Argument	c		1087330	1					
ANR	1087400	Identifier	c		1087330	0					
ANR	1087401	Argument	0		1087330	2					
ANR	1087402	PrimaryExpression	0		1087330	0					
ANR	1087403	ExpressionStatement	"r_cons_gotoxy ( 0 , 0 )"	1507:1:34596:34616	1087330	6	True				
ANR	1087404	CallExpression	"r_cons_gotoxy ( 0 , 0 )"		1087330	0					
ANR	1087405	Callee	r_cons_gotoxy		1087330	0					
ANR	1087406	Identifier	r_cons_gotoxy		1087330	0					
ANR	1087407	ArgumentList	0		1087330	1					
ANR	1087408	Argument	0		1087330	0					
ANR	1087409	PrimaryExpression	0		1087330	0					
ANR	1087410	Argument	0		1087330	1					
ANR	1087411	PrimaryExpression	0		1087330	0					
ANR	1087412	ExpressionStatement	free ( b )	1508:1:34619:34627	1087330	7	True				
ANR	1087413	CallExpression	free ( b )		1087330	0					
ANR	1087414	Callee	free		1087330	0					
ANR	1087415	Identifier	free		1087330	0					
ANR	1087416	ArgumentList	b		1087330	1					
ANR	1087417	Argument	b		1087330	0					
ANR	1087418	Identifier	b		1087330	0					
ANR	1087419	ReturnType	R_API void		1087330	1					
ANR	1087420	Identifier	r_cons_column		1087330	2					
ANR	1087421	ParameterList	int c		1087330	3					
ANR	1087422	Parameter	int c	1497:25:34338:34342	1087330	0	True				
ANR	1087423	ParameterType	int		1087330	0					
ANR	1087424	Identifier	c		1087330	1					
ANR	1087425	CFGEntryNode	ENTRY		1087330		True				
ANR	1087426	CFGExitNode	EXIT		1087330		True				
ANR	1087427	Symbol	* * I . context		1087330						
ANR	1087428	Symbol	malloc		1087330						
ANR	1087429	Symbol	b		1087330						
ANR	1087430	Symbol	* * I		1087330						
ANR	1087431	Symbol	c		1087330						
ANR	1087432	Symbol	I . context -> buffer_len		1087330						
ANR	1087433	Symbol	I		1087330						
ANR	1087434	Symbol	I . context		1087330						
ANR	1087435	Symbol	* b		1087330						
ANR	1087436	Symbol	* I . context -> buffer_len		1087330						
ANR	1087437	Symbol	* I . context		1087330						
ANR	1087438	Symbol	* I		1087330						
ANR	1087439	Symbol	I . context -> buffer		1087330						
ANR	1087440	DeclStmt									
ANR	1087441	Decl							bool	bool	lasti
ANR	1087442	Function	r_cons_set_interactive	1514:0:34737:34887							
ANR	1087443	FunctionDef	r_cons_set_interactive (bool x)		1087442	0					
ANR	1087444	CompoundStatement		1514:42:34779:34887	1087442	0					
ANR	1087445	ExpressionStatement	lasti = r_cons_singleton ( ) -> context -> is_interactive	1515:1:34782:34834	1087442	0	True				
ANR	1087446	AssignmentExpression	lasti = r_cons_singleton ( ) -> context -> is_interactive		1087442	0		=			
ANR	1087447	Identifier	lasti		1087442	0					
ANR	1087448	PtrMemberAccess	r_cons_singleton ( ) -> context -> is_interactive		1087442	1					
ANR	1087449	PtrMemberAccess	r_cons_singleton ( ) -> context		1087442	0					
ANR	1087450	CallExpression	r_cons_singleton ( )		1087442	0					
ANR	1087451	Callee	r_cons_singleton		1087442	0					
ANR	1087452	Identifier	r_cons_singleton		1087442	0					
ANR	1087453	ArgumentList			1087442	1					
ANR	1087454	Identifier	context		1087442	1					
ANR	1087455	Identifier	is_interactive		1087442	1					
ANR	1087456	ExpressionStatement	r_cons_singleton ( ) -> context -> is_interactive = x	1516:1:34837:34885	1087442	1	True				
ANR	1087457	AssignmentExpression	r_cons_singleton ( ) -> context -> is_interactive = x		1087442	0		=			
ANR	1087458	PtrMemberAccess	r_cons_singleton ( ) -> context -> is_interactive		1087442	0					
ANR	1087459	PtrMemberAccess	r_cons_singleton ( ) -> context		1087442	0					
ANR	1087460	CallExpression	r_cons_singleton ( )		1087442	0					
ANR	1087461	Callee	r_cons_singleton		1087442	0					
ANR	1087462	Identifier	r_cons_singleton		1087442	0					
ANR	1087463	ArgumentList			1087442	1					
ANR	1087464	Identifier	context		1087442	1					
ANR	1087465	Identifier	is_interactive		1087442	1					
ANR	1087466	Identifier	x		1087442	1					
ANR	1087467	ReturnType	R_API void		1087442	1					
ANR	1087468	Identifier	r_cons_set_interactive		1087442	2					
ANR	1087469	ParameterList	bool x		1087442	3					
ANR	1087470	Parameter	bool x	1514:34:34771:34776	1087442	0	True				
ANR	1087471	ParameterType	bool		1087442	0					
ANR	1087472	Identifier	x		1087442	1					
ANR	1087473	CFGEntryNode	ENTRY		1087442		True				
ANR	1087474	CFGExitNode	EXIT		1087442		True				
ANR	1087475	Symbol	r_cons_singleton ( ) -> context -> is_interactive		1087442						
ANR	1087476	Symbol	x		1087442						
ANR	1087477	Symbol	r_cons_singleton		1087442						
ANR	1087478	Symbol	* r_cons_singleton ( ) -> context		1087442						
ANR	1087479	Symbol	lasti		1087442						
ANR	1087480	Symbol	r_cons_singleton ( ) -> context		1087442						
ANR	1087481	Symbol	* r_cons_singleton		1087442						
ANR	1087482	Symbol	* * r_cons_singleton		1087442						
ANR	1087483	Function	r_cons_set_last_interactive	1519:0:34890:34988							
ANR	1087484	FunctionDef	r_cons_set_last_interactive ()		1087483	0					
ANR	1087485	CompoundStatement		1519:41:34931:34988	1087483	0					
ANR	1087486	ExpressionStatement	r_cons_singleton ( ) -> context -> is_interactive = lasti	1520:1:34934:34986	1087483	0	True				
ANR	1087487	AssignmentExpression	r_cons_singleton ( ) -> context -> is_interactive = lasti		1087483	0		=			
ANR	1087488	PtrMemberAccess	r_cons_singleton ( ) -> context -> is_interactive		1087483	0					
ANR	1087489	PtrMemberAccess	r_cons_singleton ( ) -> context		1087483	0					
ANR	1087490	CallExpression	r_cons_singleton ( )		1087483	0					
ANR	1087491	Callee	r_cons_singleton		1087483	0					
ANR	1087492	Identifier	r_cons_singleton		1087483	0					
ANR	1087493	ArgumentList			1087483	1					
ANR	1087494	Identifier	context		1087483	1					
ANR	1087495	Identifier	is_interactive		1087483	1					
ANR	1087496	Identifier	lasti		1087483	1					
ANR	1087497	ReturnType	R_API void		1087483	1					
ANR	1087498	Identifier	r_cons_set_last_interactive		1087483	2					
ANR	1087499	ParameterList			1087483	3					
ANR	1087500	CFGEntryNode	ENTRY		1087483		True				
ANR	1087501	CFGExitNode	EXIT		1087483		True				
ANR	1087502	Symbol	r_cons_singleton ( ) -> context -> is_interactive		1087483						
ANR	1087503	Symbol	r_cons_singleton		1087483						
ANR	1087504	Symbol	* r_cons_singleton ( ) -> context		1087483						
ANR	1087505	Symbol	lasti		1087483						
ANR	1087506	Symbol	r_cons_singleton ( ) -> context		1087483						
ANR	1087507	Symbol	* * r_cons_singleton		1087483						
ANR	1087508	Symbol	* r_cons_singleton		1087483						
ANR	1087509	Function	r_cons_set_title	1523:0:34991:35077							
ANR	1087510	FunctionDef	r_cons_set_title (const char * str)		1087509	0					
ANR	1087511	CompoundStatement		1523:45:35036:35077	1087509	0					
ANR	1087512	ExpressionStatement	"r_cons_printf ( ""\\x1b]0;%s\\007"" , str )"	1524:1:35039:35075	1087509	0	True				
ANR	1087513	CallExpression	"r_cons_printf ( ""\\x1b]0;%s\\007"" , str )"		1087509	0					
ANR	1087514	Callee	r_cons_printf		1087509	0					
ANR	1087515	Identifier	r_cons_printf		1087509	0					
ANR	1087516	ArgumentList	"""\\x1b]0;%s\\007"""		1087509	1					
ANR	1087517	Argument	"""\\x1b]0;%s\\007"""		1087509	0					
ANR	1087518	PrimaryExpression	"""\\x1b]0;%s\\007"""		1087509	0					
ANR	1087519	Argument	str		1087509	1					
ANR	1087520	Identifier	str		1087509	0					
ANR	1087521	ReturnType	R_API void		1087509	1					
ANR	1087522	Identifier	r_cons_set_title		1087509	2					
ANR	1087523	ParameterList	const char * str		1087509	3					
ANR	1087524	Parameter	const char * str	1523:28:35019:35033	1087509	0	True				
ANR	1087525	ParameterType	const char *		1087509	0					
ANR	1087526	Identifier	str		1087509	1					
ANR	1087527	CFGEntryNode	ENTRY		1087509		True				
ANR	1087528	CFGExitNode	EXIT		1087509		True				
ANR	1087529	Symbol	str		1087509						
ANR	1087530	Function	r_cons_zero	1527:0:35080:35170							
ANR	1087531	FunctionDef	r_cons_zero ()		1087530	0					
ANR	1087532	CompoundStatement		1527:25:35105:35170	1087530	0					
ANR	1087533	IfStatement	if ( I . line )		1087530	0					
ANR	1087534	Condition	I . line	1528:5:35112:35117	1087530	0	True				
ANR	1087535	MemberAccess	I . line		1087530	0					
ANR	1087536	Identifier	I		1087530	0					
ANR	1087537	Identifier	line		1087530	1					
ANR	1087538	CompoundStatement		2:13:14:14	1087530	1					
ANR	1087539	ExpressionStatement	I . line -> zerosep = true	1529:2:35124:35146	1087530	0	True				
ANR	1087540	AssignmentExpression	I . line -> zerosep = true		1087530	0		=			
ANR	1087541	PtrMemberAccess	I . line -> zerosep		1087530	0					
ANR	1087542	MemberAccess	I . line		1087530	0					
ANR	1087543	Identifier	I		1087530	0					
ANR	1087544	Identifier	line		1087530	1					
ANR	1087545	Identifier	zerosep		1087530	1					
ANR	1087546	Identifier	true		1087530	1					
ANR	1087547	ExpressionStatement	"write ( 1 , """" , 1 )"	1531:1:35152:35168	1087530	1	True				
ANR	1087548	CallExpression	"write ( 1 , """" , 1 )"		1087530	0					
ANR	1087549	Callee	write		1087530	0					
ANR	1087550	Identifier	write		1087530	0					
ANR	1087551	ArgumentList	1		1087530	1					
ANR	1087552	Argument	1		1087530	0					
ANR	1087553	PrimaryExpression	1		1087530	0					
ANR	1087554	Argument	""""""		1087530	1					
ANR	1087555	PrimaryExpression	""""""		1087530	0					
ANR	1087556	Argument	1		1087530	2					
ANR	1087557	PrimaryExpression	1		1087530	0					
ANR	1087558	ReturnType	R_API void		1087530	1					
ANR	1087559	Identifier	r_cons_zero		1087530	2					
ANR	1087560	ParameterList			1087530	3					
ANR	1087561	CFGEntryNode	ENTRY		1087530		True				
ANR	1087562	CFGExitNode	EXIT		1087530		True				
ANR	1087563	Symbol	* I		1087530						
ANR	1087564	Symbol	true		1087530						
ANR	1087565	Symbol	I		1087530						
ANR	1087566	Symbol	I . line -> zerosep		1087530						
ANR	1087567	Symbol	I . line		1087530						
ANR	1087568	Symbol	* I . line		1087530						
ANR	1087569	Function	r_cons_highlight	1534:0:35173:36542							
ANR	1087570	FunctionDef	r_cons_highlight (const char * word)		1087569	0					
ANR	1087571	CompoundStatement		1534:46:35219:36542	1087569	0					
ANR	1087572	IdentifierDeclStatement	"int l , * cpos = NULL ;"	1535:1:35222:35241	1087569	0	True				
ANR	1087573	IdentifierDecl	l		1087569	0					
ANR	1087574	IdentifierDeclType	int		1087569	0					
ANR	1087575	Identifier	l		1087569	1					
ANR	1087576	IdentifierDecl	* cpos = NULL		1087569	1					
ANR	1087577	IdentifierDeclType	int *		1087569	0					
ANR	1087578	Identifier	cpos		1087569	1					
ANR	1087579	AssignmentExpression	* cpos = NULL		1087569	2		=			
ANR	1087580	Identifier	NULL		1087569	0					
ANR	1087581	Identifier	NULL		1087569	1					
ANR	1087582	IdentifierDeclStatement	"char * rword = NULL , * res , * clean = NULL ;"	1536:1:35244:35283	1087569	1	True				
ANR	1087583	IdentifierDecl	* rword = NULL		1087569	0					
ANR	1087584	IdentifierDeclType	char *		1087569	0					
ANR	1087585	Identifier	rword		1087569	1					
ANR	1087586	AssignmentExpression	* rword = NULL		1087569	2		=			
ANR	1087587	Identifier	NULL		1087569	0					
ANR	1087588	Identifier	NULL		1087569	1					
ANR	1087589	IdentifierDecl	* res		1087569	1					
ANR	1087590	IdentifierDeclType	char *		1087569	0					
ANR	1087591	Identifier	res		1087569	1					
ANR	1087592	IdentifierDecl	* clean = NULL		1087569	2					
ANR	1087593	IdentifierDeclType	char *		1087569	0					
ANR	1087594	Identifier	clean		1087569	1					
ANR	1087595	AssignmentExpression	* clean = NULL		1087569	2		=			
ANR	1087596	Identifier	NULL		1087569	0					
ANR	1087597	Identifier	NULL		1087569	1					
ANR	1087598	IdentifierDeclStatement	"char * inv [ 2 ] = { R_CONS_INVERT ( true , true ) , R_CONS_INVERT ( false , true ) } ;"	1537:1:35286:35365	1087569	2	True				
ANR	1087599	IdentifierDecl	"* inv [ 2 ] = { R_CONS_INVERT ( true , true ) , R_CONS_INVERT ( false , true ) }"		1087569	0					
ANR	1087600	IdentifierDeclType	char * [ 2 ]		1087569	0					
ANR	1087601	Identifier	inv		1087569	1					
ANR	1087602	PrimaryExpression	2		1087569	2					
ANR	1087603	AssignmentExpression	"* inv [ 2 ] = { R_CONS_INVERT ( true , true ) , R_CONS_INVERT ( false , true ) }"		1087569	3		=			
ANR	1087604	Identifier	inv		1087569	0					
ANR	1087605	InitializerList	"R_CONS_INVERT ( true , true )"		1087569	1					
ANR	1087606	CallExpression	"R_CONS_INVERT ( true , true )"		1087569	0					
ANR	1087607	Callee	R_CONS_INVERT		1087569	0					
ANR	1087608	Identifier	R_CONS_INVERT		1087569	0					
ANR	1087609	ArgumentList	true		1087569	1					
ANR	1087610	Argument	true		1087569	0					
ANR	1087611	Identifier	true		1087569	0					
ANR	1087612	Argument	true		1087569	1					
ANR	1087613	Identifier	true		1087569	0					
ANR	1087614	CallExpression	"R_CONS_INVERT ( false , true )"		1087569	1					
ANR	1087615	Callee	R_CONS_INVERT		1087569	0					
ANR	1087616	Identifier	R_CONS_INVERT		1087569	0					
ANR	1087617	ArgumentList	false		1087569	1					
ANR	1087618	Argument	false		1087569	0					
ANR	1087619	Identifier	false		1087569	0					
ANR	1087620	Argument	true		1087569	1					
ANR	1087621	Identifier	true		1087569	0					
ANR	1087622	IdentifierDeclStatement	"int linv [ 2 ] = { strlen ( inv [ 0 ] ) , strlen ( inv [ 1 ] ) } ;"	1541:1:35368:35423	1087569	3	True				
ANR	1087623	IdentifierDecl	"linv [ 2 ] = { strlen ( inv [ 0 ] ) , strlen ( inv [ 1 ] ) }"		1087569	0					
ANR	1087624	IdentifierDeclType	int [ 2 ]		1087569	0					
ANR	1087625	Identifier	linv		1087569	1					
ANR	1087626	PrimaryExpression	2		1087569	2					
ANR	1087627	AssignmentExpression	"linv [ 2 ] = { strlen ( inv [ 0 ] ) , strlen ( inv [ 1 ] ) }"		1087569	3		=			
ANR	1087628	Identifier	linv		1087569	0					
ANR	1087629	InitializerList	strlen ( inv [ 0 ] )		1087569	1					
ANR	1087630	CallExpression	strlen ( inv [ 0 ] )		1087569	0					
ANR	1087631	Callee	strlen		1087569	0					
ANR	1087632	Identifier	strlen		1087569	0					
ANR	1087633	ArgumentList	inv [ 0 ]		1087569	1					
ANR	1087634	Argument	inv [ 0 ]		1087569	0					
ANR	1087635	ArrayIndexing	inv [ 0 ]		1087569	0					
ANR	1087636	Identifier	inv		1087569	0					
ANR	1087637	PrimaryExpression	0		1087569	1					
ANR	1087638	CallExpression	strlen ( inv [ 1 ] )		1087569	1					
ANR	1087639	Callee	strlen		1087569	0					
ANR	1087640	Identifier	strlen		1087569	0					
ANR	1087641	ArgumentList	inv [ 1 ]		1087569	1					
ANR	1087642	Argument	inv [ 1 ]		1087569	0					
ANR	1087643	ArrayIndexing	inv [ 1 ]		1087569	0					
ANR	1087644	Identifier	inv		1087569	0					
ANR	1087645	PrimaryExpression	1		1087569	1					
ANR	1087646	IfStatement	if ( ! I . enable_highlight )		1087569	4					
ANR	1087647	Condition	! I . enable_highlight	1546:12:35438:35456	1087569	0	True				
ANR	1087648	UnaryOperationExpression	! I . enable_highlight		1087569	0					
ANR	1087649	UnaryOperator	!		1087569	0					
ANR	1087650	MemberAccess	I . enable_highlight		1087569	1					
ANR	1087651	Identifier	I		1087569	0					
ANR	1087652	Identifier	enable_highlight		1087569	1					
ANR	1087653	CompoundStatement		13:33:239:239	1087569	1					
ANR	1087654	ExpressionStatement	r_cons_enable_highlight ( true )	1547:16:35477:35507	1087569	0	True				
ANR	1087655	CallExpression	r_cons_enable_highlight ( true )		1087569	0					
ANR	1087656	Callee	r_cons_enable_highlight		1087569	0					
ANR	1087657	Identifier	r_cons_enable_highlight		1087569	0					
ANR	1087658	ArgumentList	true		1087569	1					
ANR	1087659	Argument	true		1087569	0					
ANR	1087660	Identifier	true		1087569	0					
ANR	1087661	ReturnStatement	return ;	1548:16:35525:35531	1087569	1	True				
ANR	1087662	IfStatement	if ( word && * word && I . context -> buffer )		1087569	5					
ANR	1087663	Condition	word && * word && I . context -> buffer	1550:5:35548:35581	1087569	0	True				
ANR	1087664	AndExpression	word && * word && I . context -> buffer		1087569	0		&&			
ANR	1087665	Identifier	word		1087569	0					
ANR	1087666	AndExpression	* word && I . context -> buffer		1087569	1		&&			
ANR	1087667	UnaryOperationExpression	* word		1087569	0					
ANR	1087668	UnaryOperator	*		1087569	0					
ANR	1087669	Identifier	word		1087569	1					
ANR	1087670	PtrMemberAccess	I . context -> buffer		1087569	1					
ANR	1087671	MemberAccess	I . context		1087569	0					
ANR	1087672	Identifier	I		1087569	0					
ANR	1087673	Identifier	context		1087569	1					
ANR	1087674	Identifier	buffer		1087569	1					
ANR	1087675	CompoundStatement		19:2:400:410	1087569	1					
ANR	1087676	IdentifierDeclStatement	int word_len = strlen ( word ) ;	1551:2:35588:35616	1087569	0	True				
ANR	1087677	IdentifierDecl	word_len = strlen ( word )		1087569	0					
ANR	1087678	IdentifierDeclType	int		1087569	0					
ANR	1087679	Identifier	word_len		1087569	1					
ANR	1087680	AssignmentExpression	word_len = strlen ( word )		1087569	2		=			
ANR	1087681	Identifier	word_len		1087569	0					
ANR	1087682	CallExpression	strlen ( word )		1087569	1					
ANR	1087683	Callee	strlen		1087569	0					
ANR	1087684	Identifier	strlen		1087569	0					
ANR	1087685	ArgumentList	word		1087569	1					
ANR	1087686	Argument	word		1087569	0					
ANR	1087687	Identifier	word		1087569	0					
ANR	1087688	IdentifierDeclStatement	char * orig ;	1552:2:35620:35630	1087569	1	True				
ANR	1087689	IdentifierDecl	* orig		1087569	0					
ANR	1087690	IdentifierDeclType	char *		1087569	0					
ANR	1087691	Identifier	orig		1087569	1					
ANR	1087692	ExpressionStatement	"clean = r_str_ndup ( I . context -> buffer , I . context -> buffer_len )"	1553:2:35634:35695	1087569	2	True				
ANR	1087693	AssignmentExpression	"clean = r_str_ndup ( I . context -> buffer , I . context -> buffer_len )"		1087569	0		=			
ANR	1087694	Identifier	clean		1087569	0					
ANR	1087695	CallExpression	"r_str_ndup ( I . context -> buffer , I . context -> buffer_len )"		1087569	1					
ANR	1087696	Callee	r_str_ndup		1087569	0					
ANR	1087697	Identifier	r_str_ndup		1087569	0					
ANR	1087698	ArgumentList	I . context -> buffer		1087569	1					
ANR	1087699	Argument	I . context -> buffer		1087569	0					
ANR	1087700	PtrMemberAccess	I . context -> buffer		1087569	0					
ANR	1087701	MemberAccess	I . context		1087569	0					
ANR	1087702	Identifier	I		1087569	0					
ANR	1087703	Identifier	context		1087569	1					
ANR	1087704	Identifier	buffer		1087569	1					
ANR	1087705	Argument	I . context -> buffer_len		1087569	1					
ANR	1087706	PtrMemberAccess	I . context -> buffer_len		1087569	0					
ANR	1087707	MemberAccess	I . context		1087569	0					
ANR	1087708	Identifier	I		1087569	0					
ANR	1087709	Identifier	context		1087569	1					
ANR	1087710	Identifier	buffer_len		1087569	1					
ANR	1087711	ExpressionStatement	"l = r_str_ansi_filter ( clean , & orig , & cpos , - 1 )"	1554:2:35699:35746	1087569	3	True				
ANR	1087712	AssignmentExpression	"l = r_str_ansi_filter ( clean , & orig , & cpos , - 1 )"		1087569	0		=			
ANR	1087713	Identifier	l		1087569	0					
ANR	1087714	CallExpression	"r_str_ansi_filter ( clean , & orig , & cpos , - 1 )"		1087569	1					
ANR	1087715	Callee	r_str_ansi_filter		1087569	0					
ANR	1087716	Identifier	r_str_ansi_filter		1087569	0					
ANR	1087717	ArgumentList	clean		1087569	1					
ANR	1087718	Argument	clean		1087569	0					
ANR	1087719	Identifier	clean		1087569	0					
ANR	1087720	Argument	& orig		1087569	1					
ANR	1087721	UnaryOperationExpression	& orig		1087569	0					
ANR	1087722	UnaryOperator	&		1087569	0					
ANR	1087723	Identifier	orig		1087569	1					
ANR	1087724	Argument	& cpos		1087569	2					
ANR	1087725	UnaryOperationExpression	& cpos		1087569	0					
ANR	1087726	UnaryOperator	&		1087569	0					
ANR	1087727	Identifier	cpos		1087569	1					
ANR	1087728	Argument	- 1		1087569	3					
ANR	1087729	UnaryOperationExpression	- 1		1087569	0					
ANR	1087730	UnaryOperator	-		1087569	0					
ANR	1087731	PrimaryExpression	1		1087569	1					
ANR	1087732	ExpressionStatement	I . context -> buffer = orig	1555:2:35750:35774	1087569	4	True				
ANR	1087733	AssignmentExpression	I . context -> buffer = orig		1087569	0		=			
ANR	1087734	PtrMemberAccess	I . context -> buffer		1087569	0					
ANR	1087735	MemberAccess	I . context		1087569	0					
ANR	1087736	Identifier	I		1087569	0					
ANR	1087737	Identifier	context		1087569	1					
ANR	1087738	Identifier	buffer		1087569	1					
ANR	1087739	Identifier	orig		1087569	1					
ANR	1087740	IfStatement	if ( I . highlight )		1087569	5					
ANR	1087741	Condition	I . highlight	1556:6:35782:35792	1087569	0	True				
ANR	1087742	MemberAccess	I . highlight		1087569	0					
ANR	1087743	Identifier	I		1087569	0					
ANR	1087744	Identifier	highlight		1087569	1					
ANR	1087745	CompoundStatement		23:19:575:575	1087569	1					
ANR	1087746	IfStatement	"if ( strcmp ( word , I . highlight ) )"		1087569	0					
ANR	1087747	Condition	"strcmp ( word , I . highlight )"	1557:7:35804:35829	1087569	0	True				
ANR	1087748	CallExpression	"strcmp ( word , I . highlight )"		1087569	0					
ANR	1087749	Callee	strcmp		1087569	0					
ANR	1087750	Identifier	strcmp		1087569	0					
ANR	1087751	ArgumentList	word		1087569	1					
ANR	1087752	Argument	word		1087569	0					
ANR	1087753	Identifier	word		1087569	0					
ANR	1087754	Argument	I . highlight		1087569	1					
ANR	1087755	MemberAccess	I . highlight		1087569	0					
ANR	1087756	Identifier	I		1087569	0					
ANR	1087757	Identifier	highlight		1087569	1					
ANR	1087758	CompoundStatement		24:35:612:612	1087569	1					
ANR	1087759	ExpressionStatement	free ( I . highlight )	1558:4:35838:35856	1087569	0	True				
ANR	1087760	CallExpression	free ( I . highlight )		1087569	0					
ANR	1087761	Callee	free		1087569	0					
ANR	1087762	Identifier	free		1087569	0					
ANR	1087763	ArgumentList	I . highlight		1087569	1					
ANR	1087764	Argument	I . highlight		1087569	0					
ANR	1087765	MemberAccess	I . highlight		1087569	0					
ANR	1087766	Identifier	I		1087569	0					
ANR	1087767	Identifier	highlight		1087569	1					
ANR	1087768	ExpressionStatement	I . highlight = strdup ( word )	1559:4:35862:35889	1087569	1	True				
ANR	1087769	AssignmentExpression	I . highlight = strdup ( word )		1087569	0		=			
ANR	1087770	MemberAccess	I . highlight		1087569	0					
ANR	1087771	Identifier	I		1087569	0					
ANR	1087772	Identifier	highlight		1087569	1					
ANR	1087773	CallExpression	strdup ( word )		1087569	1					
ANR	1087774	Callee	strdup		1087569	0					
ANR	1087775	Identifier	strdup		1087569	0					
ANR	1087776	ArgumentList	word		1087569	1					
ANR	1087777	Argument	word		1087569	0					
ANR	1087778	Identifier	word		1087569	0					
ANR	1087779	ElseStatement	else		1087569	0					
ANR	1087780	CompoundStatement		28:9:685:685	1087569	0					
ANR	1087781	ExpressionStatement	I . highlight = strdup ( word )	1562:3:35910:35937	1087569	0	True				
ANR	1087782	AssignmentExpression	I . highlight = strdup ( word )		1087569	0		=			
ANR	1087783	MemberAccess	I . highlight		1087569	0					
ANR	1087784	Identifier	I		1087569	0					
ANR	1087785	Identifier	highlight		1087569	1					
ANR	1087786	CallExpression	strdup ( word )		1087569	1					
ANR	1087787	Callee	strdup		1087569	0					
ANR	1087788	Identifier	strdup		1087569	0					
ANR	1087789	ArgumentList	word		1087569	1					
ANR	1087790	Argument	word		1087569	0					
ANR	1087791	Identifier	word		1087569	0					
ANR	1087792	ExpressionStatement	rword = malloc ( word_len + linv [ 0 ] + linv [ 1 ] + 1 )	1564:2:35945:35994	1087569	6	True				
ANR	1087793	AssignmentExpression	rword = malloc ( word_len + linv [ 0 ] + linv [ 1 ] + 1 )		1087569	0		=			
ANR	1087794	Identifier	rword		1087569	0					
ANR	1087795	CallExpression	malloc ( word_len + linv [ 0 ] + linv [ 1 ] + 1 )		1087569	1					
ANR	1087796	Callee	malloc		1087569	0					
ANR	1087797	Identifier	malloc		1087569	0					
ANR	1087798	ArgumentList	word_len + linv [ 0 ] + linv [ 1 ] + 1		1087569	1					
ANR	1087799	Argument	word_len + linv [ 0 ] + linv [ 1 ] + 1		1087569	0					
ANR	1087800	AdditiveExpression	word_len + linv [ 0 ] + linv [ 1 ] + 1		1087569	0		+			
ANR	1087801	Identifier	word_len		1087569	0					
ANR	1087802	AdditiveExpression	linv [ 0 ] + linv [ 1 ] + 1		1087569	1		+			
ANR	1087803	ArrayIndexing	linv [ 0 ]		1087569	0					
ANR	1087804	Identifier	linv		1087569	0					
ANR	1087805	PrimaryExpression	0		1087569	1					
ANR	1087806	AdditiveExpression	linv [ 1 ] + 1		1087569	1		+			
ANR	1087807	ArrayIndexing	linv [ 1 ]		1087569	0					
ANR	1087808	Identifier	linv		1087569	0					
ANR	1087809	PrimaryExpression	1		1087569	1					
ANR	1087810	PrimaryExpression	1		1087569	1					
ANR	1087811	IfStatement	if ( ! rword )		1087569	7					
ANR	1087812	Condition	! rword	1565:6:36002:36007	1087569	0	True				
ANR	1087813	UnaryOperationExpression	! rword		1087569	0					
ANR	1087814	UnaryOperator	!		1087569	0					
ANR	1087815	Identifier	rword		1087569	1					
ANR	1087816	CompoundStatement		32:14:790:790	1087569	1					
ANR	1087817	ExpressionStatement	free ( cpos )	1566:3:36015:36026	1087569	0	True				
ANR	1087818	CallExpression	free ( cpos )		1087569	0					
ANR	1087819	Callee	free		1087569	0					
ANR	1087820	Identifier	free		1087569	0					
ANR	1087821	ArgumentList	cpos		1087569	1					
ANR	1087822	Argument	cpos		1087569	0					
ANR	1087823	Identifier	cpos		1087569	0					
ANR	1087824	ExpressionStatement	free ( clean )	1567:3:36031:36043	1087569	1	True				
ANR	1087825	CallExpression	free ( clean )		1087569	0					
ANR	1087826	Callee	free		1087569	0					
ANR	1087827	Identifier	free		1087569	0					
ANR	1087828	ArgumentList	clean		1087569	1					
ANR	1087829	Argument	clean		1087569	0					
ANR	1087830	Identifier	clean		1087569	0					
ANR	1087831	ReturnStatement	return ;	1568:3:36048:36054	1087569	2	True				
ANR	1087832	ExpressionStatement	"strcpy ( rword , inv [ 0 ] )"	1570:2:36062:36084	1087569	8	True				
ANR	1087833	CallExpression	"strcpy ( rword , inv [ 0 ] )"		1087569	0					
ANR	1087834	Callee	strcpy		1087569	0					
ANR	1087835	Identifier	strcpy		1087569	0					
ANR	1087836	ArgumentList	rword		1087569	1					
ANR	1087837	Argument	rword		1087569	0					
ANR	1087838	Identifier	rword		1087569	0					
ANR	1087839	Argument	inv [ 0 ]		1087569	1					
ANR	1087840	ArrayIndexing	inv [ 0 ]		1087569	0					
ANR	1087841	Identifier	inv		1087569	0					
ANR	1087842	PrimaryExpression	0		1087569	1					
ANR	1087843	ExpressionStatement	"strcpy ( rword + linv [ 0 ] , word )"	1571:2:36088:36118	1087569	9	True				
ANR	1087844	CallExpression	"strcpy ( rword + linv [ 0 ] , word )"		1087569	0					
ANR	1087845	Callee	strcpy		1087569	0					
ANR	1087846	Identifier	strcpy		1087569	0					
ANR	1087847	ArgumentList	rword + linv [ 0 ]		1087569	1					
ANR	1087848	Argument	rword + linv [ 0 ]		1087569	0					
ANR	1087849	AdditiveExpression	rword + linv [ 0 ]		1087569	0		+			
ANR	1087850	Identifier	rword		1087569	0					
ANR	1087851	ArrayIndexing	linv [ 0 ]		1087569	1					
ANR	1087852	Identifier	linv		1087569	0					
ANR	1087853	PrimaryExpression	0		1087569	1					
ANR	1087854	Argument	word		1087569	1					
ANR	1087855	Identifier	word		1087569	0					
ANR	1087856	ExpressionStatement	"strcpy ( rword + linv [ 0 ] + word_len , inv [ 1 ] )"	1572:2:36122:36165	1087569	10	True				
ANR	1087857	CallExpression	"strcpy ( rword + linv [ 0 ] + word_len , inv [ 1 ] )"		1087569	0					
ANR	1087858	Callee	strcpy		1087569	0					
ANR	1087859	Identifier	strcpy		1087569	0					
ANR	1087860	ArgumentList	rword + linv [ 0 ] + word_len		1087569	1					
ANR	1087861	Argument	rword + linv [ 0 ] + word_len		1087569	0					
ANR	1087862	AdditiveExpression	rword + linv [ 0 ] + word_len		1087569	0		+			
ANR	1087863	Identifier	rword		1087569	0					
ANR	1087864	AdditiveExpression	linv [ 0 ] + word_len		1087569	1		+			
ANR	1087865	ArrayIndexing	linv [ 0 ]		1087569	0					
ANR	1087866	Identifier	linv		1087569	0					
ANR	1087867	PrimaryExpression	0		1087569	1					
ANR	1087868	Identifier	word_len		1087569	1					
ANR	1087869	Argument	inv [ 1 ]		1087569	1					
ANR	1087870	ArrayIndexing	inv [ 1 ]		1087569	0					
ANR	1087871	Identifier	inv		1087569	0					
ANR	1087872	PrimaryExpression	1		1087569	1					
ANR	1087873	ExpressionStatement	"res = r_str_replace_thunked ( I . context -> buffer , clean , cpos , l , word , rword , 1 )"	1573:2:36169:36258	1087569	11	True				
ANR	1087874	AssignmentExpression	"res = r_str_replace_thunked ( I . context -> buffer , clean , cpos , l , word , rword , 1 )"		1087569	0		=			
ANR	1087875	Identifier	res		1087569	0					
ANR	1087876	CallExpression	"r_str_replace_thunked ( I . context -> buffer , clean , cpos , l , word , rword , 1 )"		1087569	1					
ANR	1087877	Callee	r_str_replace_thunked		1087569	0					
ANR	1087878	Identifier	r_str_replace_thunked		1087569	0					
ANR	1087879	ArgumentList	I . context -> buffer		1087569	1					
ANR	1087880	Argument	I . context -> buffer		1087569	0					
ANR	1087881	PtrMemberAccess	I . context -> buffer		1087569	0					
ANR	1087882	MemberAccess	I . context		1087569	0					
ANR	1087883	Identifier	I		1087569	0					
ANR	1087884	Identifier	context		1087569	1					
ANR	1087885	Identifier	buffer		1087569	1					
ANR	1087886	Argument	clean		1087569	1					
ANR	1087887	Identifier	clean		1087569	0					
ANR	1087888	Argument	cpos		1087569	2					
ANR	1087889	Identifier	cpos		1087569	0					
ANR	1087890	Argument	l		1087569	3					
ANR	1087891	Identifier	l		1087569	0					
ANR	1087892	Argument	word		1087569	4					
ANR	1087893	Identifier	word		1087569	0					
ANR	1087894	Argument	rword		1087569	5					
ANR	1087895	Identifier	rword		1087569	0					
ANR	1087896	Argument	1		1087569	6					
ANR	1087897	PrimaryExpression	1		1087569	0					
ANR	1087898	IfStatement	if ( res )		1087569	12					
ANR	1087899	Condition	res	1575:6:36266:36268	1087569	0	True				
ANR	1087900	Identifier	res		1087569	0					
ANR	1087901	CompoundStatement		42:11:1051:1051	1087569	1					
ANR	1087902	ExpressionStatement	I . context -> buffer = res	1576:3:36276:36299	1087569	0	True				
ANR	1087903	AssignmentExpression	I . context -> buffer = res		1087569	0		=			
ANR	1087904	PtrMemberAccess	I . context -> buffer		1087569	0					
ANR	1087905	MemberAccess	I . context		1087569	0					
ANR	1087906	Identifier	I		1087569	0					
ANR	1087907	Identifier	context		1087569	1					
ANR	1087908	Identifier	buffer		1087569	1					
ANR	1087909	Identifier	res		1087569	1					
ANR	1087910	ExpressionStatement	I . context -> buffer_len = I . context -> buffer_sz = strlen ( res )	1577:3:36304:36363	1087569	1	True				
ANR	1087911	AssignmentExpression	I . context -> buffer_len = I . context -> buffer_sz = strlen ( res )		1087569	0		=			
ANR	1087912	PtrMemberAccess	I . context -> buffer_len		1087569	0					
ANR	1087913	MemberAccess	I . context		1087569	0					
ANR	1087914	Identifier	I		1087569	0					
ANR	1087915	Identifier	context		1087569	1					
ANR	1087916	Identifier	buffer_len		1087569	1					
ANR	1087917	AssignmentExpression	I . context -> buffer_sz = strlen ( res )		1087569	1		=			
ANR	1087918	PtrMemberAccess	I . context -> buffer_sz		1087569	0					
ANR	1087919	MemberAccess	I . context		1087569	0					
ANR	1087920	Identifier	I		1087569	0					
ANR	1087921	Identifier	context		1087569	1					
ANR	1087922	Identifier	buffer_sz		1087569	1					
ANR	1087923	CallExpression	strlen ( res )		1087569	1					
ANR	1087924	Callee	strlen		1087569	0					
ANR	1087925	Identifier	strlen		1087569	0					
ANR	1087926	ArgumentList	res		1087569	1					
ANR	1087927	Argument	res		1087569	0					
ANR	1087928	Identifier	res		1087569	0					
ANR	1087929	ExpressionStatement	free ( rword )	1579:2:36371:36383	1087569	13	True				
ANR	1087930	CallExpression	free ( rword )		1087569	0					
ANR	1087931	Callee	free		1087569	0					
ANR	1087932	Identifier	free		1087569	0					
ANR	1087933	ArgumentList	rword		1087569	1					
ANR	1087934	Argument	rword		1087569	0					
ANR	1087935	Identifier	rword		1087569	0					
ANR	1087936	ExpressionStatement	free ( clean )	1580:2:36387:36399	1087569	14	True				
ANR	1087937	CallExpression	free ( clean )		1087569	0					
ANR	1087938	Callee	free		1087569	0					
ANR	1087939	Identifier	free		1087569	0					
ANR	1087940	ArgumentList	clean		1087569	1					
ANR	1087941	Argument	clean		1087569	0					
ANR	1087942	Identifier	clean		1087569	0					
ANR	1087943	ExpressionStatement	free ( cpos )	1581:2:36403:36414	1087569	15	True				
ANR	1087944	CallExpression	free ( cpos )		1087569	0					
ANR	1087945	Callee	free		1087569	0					
ANR	1087946	Identifier	free		1087569	0					
ANR	1087947	ArgumentList	cpos		1087569	1					
ANR	1087948	Argument	cpos		1087569	0					
ANR	1087949	Identifier	cpos		1087569	0					
ANR	1087950	ElseStatement	else		1087569	0					
ANR	1087951	CompoundStatement		51:8:1293:1293	1087569	0					
ANR	1087952	ExpressionStatement	R_FREE ( I . highlight )	1585:2:36517:36537	1087569	0	True				
ANR	1087953	CallExpression	R_FREE ( I . highlight )		1087569	0					
ANR	1087954	Callee	R_FREE		1087569	0					
ANR	1087955	Identifier	R_FREE		1087569	0					
ANR	1087956	ArgumentList	I . highlight		1087569	1					
ANR	1087957	Argument	I . highlight		1087569	0					
ANR	1087958	MemberAccess	I . highlight		1087569	0					
ANR	1087959	Identifier	I		1087569	0					
ANR	1087960	Identifier	highlight		1087569	1					
ANR	1087961	ReturnType	R_API void		1087569	1					
ANR	1087962	Identifier	r_cons_highlight		1087569	2					
ANR	1087963	ParameterList	const char * word		1087569	3					
ANR	1087964	Parameter	const char * word	1534:28:35201:35216	1087569	0	True				
ANR	1087965	ParameterType	const char *		1087569	0					
ANR	1087966	Identifier	word		1087569	1					
ANR	1087967	CFGEntryNode	ENTRY		1087569		True				
ANR	1087968	CFGExitNode	EXIT		1087569		True				
ANR	1087969	Symbol	rword		1087569						
ANR	1087970	Symbol	& cpos		1087569						
ANR	1087971	Symbol	r_str_ndup		1087569						
ANR	1087972	Symbol	I		1087569						
ANR	1087973	Symbol	R_CONS_INVERT		1087569						
ANR	1087974	Symbol	strlen		1087569						
ANR	1087975	Symbol	* I		1087569						
ANR	1087976	Symbol	word_len		1087569						
ANR	1087977	Symbol	I . highlight		1087569						
ANR	1087978	Symbol	* linv		1087569						
ANR	1087979	Symbol	I . enable_highlight		1087569						
ANR	1087980	Symbol	strcmp		1087569						
ANR	1087981	Symbol	res		1087569						
ANR	1087982	Symbol	malloc		1087569						
ANR	1087983	Symbol	NULL		1087569						
ANR	1087984	Symbol	* inv		1087569						
ANR	1087985	Symbol	I . context -> buffer_len		1087569						
ANR	1087986	Symbol	* word		1087569						
ANR	1087987	Symbol	false		1087569						
ANR	1087988	Symbol	r_str_replace_thunked		1087569						
ANR	1087989	Symbol	I . context		1087569						
ANR	1087990	Symbol	l		1087569						
ANR	1087991	Symbol	clean		1087569						
ANR	1087992	Symbol	inv		1087569						
ANR	1087993	Symbol	* I . context		1087569						
ANR	1087994	Symbol	& orig		1087569						
ANR	1087995	Symbol	I . context -> buffer_sz		1087569						
ANR	1087996	Symbol	orig		1087569						
ANR	1087997	Symbol	I . context -> buffer		1087569						
ANR	1087998	Symbol	linv		1087569						
ANR	1087999	Symbol	true		1087569						
ANR	1088000	Symbol	r_str_ansi_filter		1087569						
ANR	1088001	Symbol	strdup		1087569						
ANR	1088002	Symbol	word		1087569						
ANR	1088003	Symbol	cpos		1087569						
ANR	1088004	Function	r_cons_lastline	1589:0:36545:36827							
ANR	1088005	FunctionDef	r_cons_lastline (int * len)		1088004	0					
ANR	1088006	CompoundStatement		1589:38:36583:36827	1088004	0					
ANR	1088007	IdentifierDeclStatement	char * b = I . context -> buffer + I . context -> buffer_len ;	1590:1:36586:36637	1088004	0	True				
ANR	1088008	IdentifierDecl	* b = I . context -> buffer + I . context -> buffer_len		1088004	0					
ANR	1088009	IdentifierDeclType	char *		1088004	0					
ANR	1088010	Identifier	b		1088004	1					
ANR	1088011	AssignmentExpression	* b = I . context -> buffer + I . context -> buffer_len		1088004	2		=			
ANR	1088012	Identifier	b		1088004	0					
ANR	1088013	AdditiveExpression	I . context -> buffer + I . context -> buffer_len		1088004	1		+			
ANR	1088014	PtrMemberAccess	I . context -> buffer		1088004	0					
ANR	1088015	MemberAccess	I . context		1088004	0					
ANR	1088016	Identifier	I		1088004	0					
ANR	1088017	Identifier	context		1088004	1					
ANR	1088018	Identifier	buffer		1088004	1					
ANR	1088019	PtrMemberAccess	I . context -> buffer_len		1088004	1					
ANR	1088020	MemberAccess	I . context		1088004	0					
ANR	1088021	Identifier	I		1088004	0					
ANR	1088022	Identifier	context		1088004	1					
ANR	1088023	Identifier	buffer_len		1088004	1					
ANR	1088024	WhileStatement	while ( b > I . context -> buffer )		1088004	1					
ANR	1088025	Condition	b > I . context -> buffer	1591:8:36647:36667	1088004	0	True				
ANR	1088026	RelationalExpression	b > I . context -> buffer		1088004	0		>			
ANR	1088027	Identifier	b		1088004	0					
ANR	1088028	PtrMemberAccess	I . context -> buffer		1088004	1					
ANR	1088029	MemberAccess	I . context		1088004	0					
ANR	1088030	Identifier	I		1088004	0					
ANR	1088031	Identifier	context		1088004	1					
ANR	1088032	Identifier	buffer		1088004	1					
ANR	1088033	CompoundStatement		3:31:86:86	1088004	1					
ANR	1088034	IfStatement	if ( * b == '\\n' )		1088004	0					
ANR	1088035	Condition	* b == '\\n'	1592:6:36678:36687	1088004	0	True				
ANR	1088036	EqualityExpression	* b == '\\n'		1088004	0		==			
ANR	1088037	UnaryOperationExpression	* b		1088004	0					
ANR	1088038	UnaryOperator	*		1088004	0					
ANR	1088039	Identifier	b		1088004	1					
ANR	1088040	PrimaryExpression	'\\n'		1088004	1					
ANR	1088041	CompoundStatement		4:18:106:106	1088004	1					
ANR	1088042	ExpressionStatement	b ++	1593:3:36695:36698	1088004	0	True				
ANR	1088043	PostIncDecOperationExpression	b ++		1088004	0					
ANR	1088044	Identifier	b		1088004	0					
ANR	1088045	IncDec	++		1088004	1					
ANR	1088046	BreakStatement	break ;	1594:3:36703:36708	1088004	1	True				
ANR	1088047	ExpressionStatement	b --	1596:2:36716:36719	1088004	1	True				
ANR	1088048	PostIncDecOperationExpression	b --		1088004	0					
ANR	1088049	Identifier	b		1088004	0					
ANR	1088050	IncDec	--		1088004	1					
ANR	1088051	IfStatement	if ( len )		1088004	2					
ANR	1088052	Condition	len	1598:5:36729:36731	1088004	0	True				
ANR	1088053	Identifier	len		1088004	0					
ANR	1088054	CompoundStatement		11:2:154:187	1088004	1					
ANR	1088055	IdentifierDeclStatement	int delta = b - I . context -> buffer ;	1599:2:36738:36771	1088004	0	True				
ANR	1088056	IdentifierDecl	delta = b - I . context -> buffer		1088004	0					
ANR	1088057	IdentifierDeclType	int		1088004	0					
ANR	1088058	Identifier	delta		1088004	1					
ANR	1088059	AssignmentExpression	delta = b - I . context -> buffer		1088004	2		=			
ANR	1088060	Identifier	delta		1088004	0					
ANR	1088061	AdditiveExpression	b - I . context -> buffer		1088004	1		-			
ANR	1088062	Identifier	b		1088004	0					
ANR	1088063	PtrMemberAccess	I . context -> buffer		1088004	1					
ANR	1088064	MemberAccess	I . context		1088004	0					
ANR	1088065	Identifier	I		1088004	0					
ANR	1088066	Identifier	context		1088004	1					
ANR	1088067	Identifier	buffer		1088004	1					
ANR	1088068	ExpressionStatement	* len = I . context -> buffer_len - delta	1600:2:36775:36811	1088004	1	True				
ANR	1088069	AssignmentExpression	* len = I . context -> buffer_len - delta		1088004	0		=			
ANR	1088070	UnaryOperationExpression	* len		1088004	0					
ANR	1088071	UnaryOperator	*		1088004	0					
ANR	1088072	Identifier	len		1088004	1					
ANR	1088073	AdditiveExpression	I . context -> buffer_len - delta		1088004	1		-			
ANR	1088074	PtrMemberAccess	I . context -> buffer_len		1088004	0					
ANR	1088075	MemberAccess	I . context		1088004	0					
ANR	1088076	Identifier	I		1088004	0					
ANR	1088077	Identifier	context		1088004	1					
ANR	1088078	Identifier	buffer_len		1088004	1					
ANR	1088079	Identifier	delta		1088004	1					
ANR	1088080	ReturnStatement	return b ;	1602:1:36817:36825	1088004	3	True				
ANR	1088081	Identifier	b		1088004	0					
ANR	1088082	ReturnType	R_API char *		1088004	1					
ANR	1088083	Identifier	r_cons_lastline		1088004	2					
ANR	1088084	ParameterList	int * len		1088004	3					
ANR	1088085	Parameter	int * len	1589:28:36573:36580	1088004	0	True				
ANR	1088086	ParameterType	int *		1088004	0					
ANR	1088087	Identifier	len		1088004	1					
ANR	1088088	CFGEntryNode	ENTRY		1088004		True				
ANR	1088089	CFGExitNode	EXIT		1088004		True				
ANR	1088090	Symbol	* I . context		1088004						
ANR	1088091	Symbol	b		1088004						
ANR	1088092	Symbol	* I		1088004						
ANR	1088093	Symbol	len		1088004						
ANR	1088094	Symbol	I . context -> buffer_len		1088004						
ANR	1088095	Symbol	I . context -> buffer		1088004						
ANR	1088096	Symbol	delta		1088004						
ANR	1088097	Symbol	I		1088004						
ANR	1088098	Symbol	I . context		1088004						
ANR	1088099	Symbol	* b		1088004						
ANR	1088100	Symbol	* len		1088004						
ANR	1088101	Function	r_cons_lastline_utf8_ansi_len	1607:0:36967:37558							
ANR	1088102	FunctionDef	r_cons_lastline_utf8_ansi_len (int * len)		1088101	0					
ANR	1088103	CompoundStatement		1607:52:37019:37558	1088101	0					
ANR	1088104	IfStatement	if ( ! len )		1088101	0					
ANR	1088105	Condition	! len	1608:5:37026:37029	1088101	0	True				
ANR	1088106	UnaryOperationExpression	! len		1088101	0					
ANR	1088107	UnaryOperator	!		1088101	0					
ANR	1088108	Identifier	len		1088101	1					
ANR	1088109	CompoundStatement		2:11:12:12	1088101	1					
ANR	1088110	ReturnStatement	return r_cons_lastline ( 0 ) ;	1609:2:37036:37062	1088101	0	True				
ANR	1088111	CallExpression	r_cons_lastline ( 0 )		1088101	0					
ANR	1088112	Callee	r_cons_lastline		1088101	0					
ANR	1088113	Identifier	r_cons_lastline		1088101	0					
ANR	1088114	ArgumentList	0		1088101	1					
ANR	1088115	Argument	0		1088101	0					
ANR	1088116	PrimaryExpression	0		1088101	0					
ANR	1088117	IdentifierDeclStatement	char * b = I . context -> buffer + I . context -> buffer_len ;	1612:1:37069:37120	1088101	1	True				
ANR	1088118	IdentifierDecl	* b = I . context -> buffer + I . context -> buffer_len		1088101	0					
ANR	1088119	IdentifierDeclType	char *		1088101	0					
ANR	1088120	Identifier	b		1088101	1					
ANR	1088121	AssignmentExpression	* b = I . context -> buffer + I . context -> buffer_len		1088101	2		=			
ANR	1088122	Identifier	b		1088101	0					
ANR	1088123	AdditiveExpression	I . context -> buffer + I . context -> buffer_len		1088101	1		+			
ANR	1088124	PtrMemberAccess	I . context -> buffer		1088101	0					
ANR	1088125	MemberAccess	I . context		1088101	0					
ANR	1088126	Identifier	I		1088101	0					
ANR	1088127	Identifier	context		1088101	1					
ANR	1088128	Identifier	buffer		1088101	1					
ANR	1088129	PtrMemberAccess	I . context -> buffer_len		1088101	1					
ANR	1088130	MemberAccess	I . context		1088101	0					
ANR	1088131	Identifier	I		1088101	0					
ANR	1088132	Identifier	context		1088101	1					
ANR	1088133	Identifier	buffer_len		1088101	1					
ANR	1088134	IdentifierDeclStatement	int l = 0 ;	1613:1:37123:37132	1088101	2	True				
ANR	1088135	IdentifierDecl	l = 0		1088101	0					
ANR	1088136	IdentifierDeclType	int		1088101	0					
ANR	1088137	Identifier	l		1088101	1					
ANR	1088138	AssignmentExpression	l = 0		1088101	2		=			
ANR	1088139	Identifier	l		1088101	0					
ANR	1088140	PrimaryExpression	0		1088101	1					
ANR	1088141	IdentifierDeclStatement	int last_possible_ansi_end = 0 ;	1614:1:37135:37165	1088101	3	True				
ANR	1088142	IdentifierDecl	last_possible_ansi_end = 0		1088101	0					
ANR	1088143	IdentifierDeclType	int		1088101	0					
ANR	1088144	Identifier	last_possible_ansi_end		1088101	1					
ANR	1088145	AssignmentExpression	last_possible_ansi_end = 0		1088101	2		=			
ANR	1088146	Identifier	last_possible_ansi_end		1088101	0					
ANR	1088147	PrimaryExpression	0		1088101	1					
ANR	1088148	IdentifierDeclStatement	char ch = '\\0' ;	1615:1:37168:37182	1088101	4	True				
ANR	1088149	IdentifierDecl	ch = '\\0'		1088101	0					
ANR	1088150	IdentifierDeclType	char		1088101	0					
ANR	1088151	Identifier	ch		1088101	1					
ANR	1088152	AssignmentExpression	ch = '\\0'		1088101	2		=			
ANR	1088153	Identifier	ch		1088101	0					
ANR	1088154	PrimaryExpression	'\\0'		1088101	1					
ANR	1088155	IdentifierDeclStatement	char ch2 ;	1616:1:37185:37193	1088101	5	True				
ANR	1088156	IdentifierDecl	ch2		1088101	0					
ANR	1088157	IdentifierDeclType	char		1088101	0					
ANR	1088158	Identifier	ch2		1088101	1					
ANR	1088159	WhileStatement	while ( b > I . context -> buffer )		1088101	6					
ANR	1088160	Condition	b > I . context -> buffer	1617:8:37203:37223	1088101	0	True				
ANR	1088161	RelationalExpression	b > I . context -> buffer		1088101	0		>			
ANR	1088162	Identifier	b		1088101	0					
ANR	1088163	PtrMemberAccess	I . context -> buffer		1088101	1					
ANR	1088164	MemberAccess	I . context		1088101	0					
ANR	1088165	Identifier	I		1088101	0					
ANR	1088166	Identifier	context		1088101	1					
ANR	1088167	Identifier	buffer		1088101	1					
ANR	1088168	CompoundStatement		11:31:206:206	1088101	1					
ANR	1088169	ExpressionStatement	ch2 = ch	1618:2:37230:37238	1088101	0	True				
ANR	1088170	AssignmentExpression	ch2 = ch		1088101	0		=			
ANR	1088171	Identifier	ch2		1088101	0					
ANR	1088172	Identifier	ch		1088101	1					
ANR	1088173	ExpressionStatement	ch = * b	1619:2:37242:37249	1088101	1	True				
ANR	1088174	AssignmentExpression	ch = * b		1088101	0		=			
ANR	1088175	Identifier	ch		1088101	0					
ANR	1088176	UnaryOperationExpression	* b		1088101	1					
ANR	1088177	UnaryOperator	*		1088101	0					
ANR	1088178	Identifier	b		1088101	1					
ANR	1088179	IfStatement	if ( ch == '\\n' )		1088101	2					
ANR	1088180	Condition	ch == '\\n'	1621:6:37258:37267	1088101	0	True				
ANR	1088181	EqualityExpression	ch == '\\n'		1088101	0		==			
ANR	1088182	Identifier	ch		1088101	0					
ANR	1088183	PrimaryExpression	'\\n'		1088101	1					
ANR	1088184	CompoundStatement		15:18:250:250	1088101	1					
ANR	1088185	ExpressionStatement	b ++	1622:3:37275:37278	1088101	0	True				
ANR	1088186	PostIncDecOperationExpression	b ++		1088101	0					
ANR	1088187	Identifier	b		1088101	0					
ANR	1088188	IncDec	++		1088101	1					
ANR	1088189	ExpressionStatement	l --	1623:3:37283:37286	1088101	1	True				
ANR	1088190	PostIncDecOperationExpression	l --		1088101	0					
ANR	1088191	Identifier	l		1088101	0					
ANR	1088192	IncDec	--		1088101	1					
ANR	1088193	BreakStatement	break ;	1624:3:37291:37296	1088101	2	True				
ANR	1088194	IfStatement	if ( ( ch & 0xc0 ) != 0x80 )		1088101	3					
ANR	1088195	Condition	( ch & 0xc0 ) != 0x80	1628:6:37320:37338	1088101	0	True				
ANR	1088196	EqualityExpression	( ch & 0xc0 ) != 0x80		1088101	0		!=			
ANR	1088197	BitAndExpression	ch & 0xc0		1088101	0		&			
ANR	1088198	Identifier	ch		1088101	0					
ANR	1088199	PrimaryExpression	0xc0		1088101	1					
ANR	1088200	PrimaryExpression	0x80		1088101	1					
ANR	1088201	CompoundStatement		22:27:321:321	1088101	1					
ANR	1088202	ExpressionStatement	l ++	1629:3:37346:37349	1088101	0	True				
ANR	1088203	PostIncDecOperationExpression	l ++		1088101	0					
ANR	1088204	Identifier	l		1088101	0					
ANR	1088205	IncDec	++		1088101	1					
ANR	1088206	IfStatement	if ( ch == 'J' || ch == 'm' || ch == 'H' )		1088101	4					
ANR	1088207	Condition	ch == 'J' || ch == 'm' || ch == 'H'	1633:6:37372:37406	1088101	0	True				
ANR	1088208	OrExpression	ch == 'J' || ch == 'm' || ch == 'H'		1088101	0		||			
ANR	1088209	EqualityExpression	ch == 'J'		1088101	0		==			
ANR	1088210	Identifier	ch		1088101	0					
ANR	1088211	PrimaryExpression	'J'		1088101	1					
ANR	1088212	OrExpression	ch == 'm' || ch == 'H'		1088101	1		||			
ANR	1088213	EqualityExpression	ch == 'm'		1088101	0		==			
ANR	1088214	Identifier	ch		1088101	0					
ANR	1088215	PrimaryExpression	'm'		1088101	1					
ANR	1088216	EqualityExpression	ch == 'H'		1088101	1		==			
ANR	1088217	Identifier	ch		1088101	0					
ANR	1088218	PrimaryExpression	'H'		1088101	1					
ANR	1088219	CompoundStatement		27:43:389:389	1088101	1					
ANR	1088220	ExpressionStatement	last_possible_ansi_end = l - 1	1634:3:37414:37444	1088101	0	True				
ANR	1088221	AssignmentExpression	last_possible_ansi_end = l - 1		1088101	0		=			
ANR	1088222	Identifier	last_possible_ansi_end		1088101	0					
ANR	1088223	AdditiveExpression	l - 1		1088101	1		-			
ANR	1088224	Identifier	l		1088101	0					
ANR	1088225	PrimaryExpression	1		1088101	1					
ANR	1088226	ElseStatement	else		1088101	0					
ANR	1088227	IfStatement	if ( ch == x1b && ch2 == '[' )		1088101	0					
ANR	1088228	Condition	ch == x1b && ch2 == '['	1635:13:37459:37484	1088101	0	True				
ANR	1088229	AndExpression	ch == x1b && ch2 == '['		1088101	0		&&			
ANR	1088230	EqualityExpression	ch == x1b		1088101	0		==			
ANR	1088231	Identifier	ch		1088101	0					
ANR	1088232	Identifier	x1b		1088101	1					
ANR	1088233	EqualityExpression	ch2 == '['		1088101	1		==			
ANR	1088234	Identifier	ch2		1088101	0					
ANR	1088235	PrimaryExpression	'['		1088101	1					
ANR	1088236	CompoundStatement		29:41:467:467	1088101	1					
ANR	1088237	ExpressionStatement	l = last_possible_ansi_end	1636:3:37492:37518	1088101	0	True				
ANR	1088238	AssignmentExpression	l = last_possible_ansi_end		1088101	0		=			
ANR	1088239	Identifier	l		1088101	0					
ANR	1088240	Identifier	last_possible_ansi_end		1088101	1					
ANR	1088241	ExpressionStatement	b --	1639:2:37527:37530	1088101	5	True				
ANR	1088242	PostIncDecOperationExpression	b --		1088101	0					
ANR	1088243	Identifier	b		1088101	0					
ANR	1088244	IncDec	--		1088101	1					
ANR	1088245	ExpressionStatement	* len = l	1642:1:37537:37545	1088101	7	True				
ANR	1088246	AssignmentExpression	* len = l		1088101	0		=			
ANR	1088247	UnaryOperationExpression	* len		1088101	0					
ANR	1088248	UnaryOperator	*		1088101	0					
ANR	1088249	Identifier	len		1088101	1					
ANR	1088250	Identifier	l		1088101	1					
ANR	1088251	ReturnStatement	return b ;	1643:1:37548:37556	1088101	8	True				
ANR	1088252	Identifier	b		1088101	0					
ANR	1088253	ReturnType	R_API char *		1088101	1					
ANR	1088254	Identifier	r_cons_lastline_utf8_ansi_len		1088101	2					
ANR	1088255	ParameterList	int * len		1088101	3					
ANR	1088256	Parameter	int * len	1607:42:37009:37016	1088101	0	True				
ANR	1088257	ParameterType	int *		1088101	0					
ANR	1088258	Identifier	len		1088101	1					
ANR	1088259	CFGEntryNode	ENTRY		1088101		True				
ANR	1088260	CFGExitNode	EXIT		1088101		True				
ANR	1088261	Symbol	r_cons_lastline		1088101						
ANR	1088262	Symbol	b		1088101						
ANR	1088263	Symbol	I . context -> buffer_len		1088101						
ANR	1088264	Symbol	ch		1088101						
ANR	1088265	Symbol	x1b		1088101						
ANR	1088266	Symbol	I		1088101						
ANR	1088267	Symbol	I . context		1088101						
ANR	1088268	Symbol	l		1088101						
ANR	1088269	Symbol	ch2		1088101						
ANR	1088270	Symbol	* b		1088101						
ANR	1088271	Symbol	* I . context		1088101						
ANR	1088272	Symbol	* I		1088101						
ANR	1088273	Symbol	last_possible_ansi_end		1088101						
ANR	1088274	Symbol	len		1088101						
ANR	1088275	Symbol	I . context -> buffer		1088101						
ANR	1088276	Symbol	* len		1088101						
ANR	1088277	Function	r_cons_swap_ground	1647:0:37638:38179							
ANR	1088278	FunctionDef	r_cons_swap_ground (const char * col)		1088277	0					
ANR	1088279	CompoundStatement		1647:48:37686:38179	1088277	0					
ANR	1088280	IfStatement	if ( ! col )		1088277	0					
ANR	1088281	Condition	! col	1648:5:37693:37696	1088277	0	True				
ANR	1088282	UnaryOperationExpression	! col		1088277	0					
ANR	1088283	UnaryOperator	!		1088277	0					
ANR	1088284	Identifier	col		1088277	1					
ANR	1088285	CompoundStatement		2:11:12:12	1088277	1					
ANR	1088286	ReturnStatement	return NULL ;	1649:2:37703:37714	1088277	0	True				
ANR	1088287	Identifier	NULL		1088277	0					
ANR	1088288	IfStatement	"if ( ! strncmp ( col , ""\\x1b[48;5;"" , 7 ) )"		1088277	1					
ANR	1088289	Condition	"! strncmp ( col , ""\\x1b[48;5;"" , 7 )"	1651:5:37724:37754	1088277	0	True				
ANR	1088290	UnaryOperationExpression	"! strncmp ( col , ""\\x1b[48;5;"" , 7 )"		1088277	0					
ANR	1088291	UnaryOperator	!		1088277	0					
ANR	1088292	CallExpression	"strncmp ( col , ""\\x1b[48;5;"" , 7 )"		1088277	1					
ANR	1088293	Callee	strncmp		1088277	0					
ANR	1088294	Identifier	strncmp		1088277	0					
ANR	1088295	ArgumentList	col		1088277	1					
ANR	1088296	Argument	col		1088277	0					
ANR	1088297	Identifier	col		1088277	0					
ANR	1088298	Argument	"""\\x1b[48;5;"""		1088277	1					
ANR	1088299	PrimaryExpression	"""\\x1b[48;5;"""		1088277	0					
ANR	1088300	Argument	7		1088277	2					
ANR	1088301	PrimaryExpression	7		1088277	0					
ANR	1088302	CompoundStatement		5:38:70:70	1088277	1					
ANR	1088303	ReturnStatement	"return r_str_newf ( ""\\x1b[38;5;%s"" , col + 7 ) ;"	1653:2:37784:37825	1088277	0	True				
ANR	1088304	CallExpression	"r_str_newf ( ""\\x1b[38;5;%s"" , col + 7 )"		1088277	0					
ANR	1088305	Callee	r_str_newf		1088277	0					
ANR	1088306	Identifier	r_str_newf		1088277	0					
ANR	1088307	ArgumentList	"""\\x1b[38;5;%s"""		1088277	1					
ANR	1088308	Argument	"""\\x1b[38;5;%s"""		1088277	0					
ANR	1088309	PrimaryExpression	"""\\x1b[38;5;%s"""		1088277	0					
ANR	1088310	Argument	col + 7		1088277	1					
ANR	1088311	AdditiveExpression	col + 7		1088277	0		+			
ANR	1088312	Identifier	col		1088277	0					
ANR	1088313	PrimaryExpression	7		1088277	1					
ANR	1088314	ElseStatement	else		1088277	0					
ANR	1088315	IfStatement	"if ( ! strncmp ( col , ""\\x1b[38;5;"" , 7 ) )"		1088277	0					
ANR	1088316	Condition	"! strncmp ( col , ""\\x1b[38;5;"" , 7 )"	1654:12:37839:37869	1088277	0	True				
ANR	1088317	UnaryOperationExpression	"! strncmp ( col , ""\\x1b[38;5;"" , 7 )"		1088277	0					
ANR	1088318	UnaryOperator	!		1088277	0					
ANR	1088319	CallExpression	"strncmp ( col , ""\\x1b[38;5;"" , 7 )"		1088277	1					
ANR	1088320	Callee	strncmp		1088277	0					
ANR	1088321	Identifier	strncmp		1088277	0					
ANR	1088322	ArgumentList	col		1088277	1					
ANR	1088323	Argument	col		1088277	0					
ANR	1088324	Identifier	col		1088277	0					
ANR	1088325	Argument	"""\\x1b[38;5;"""		1088277	1					
ANR	1088326	PrimaryExpression	"""\\x1b[38;5;"""		1088277	0					
ANR	1088327	Argument	7		1088277	2					
ANR	1088328	PrimaryExpression	7		1088277	0					
ANR	1088329	CompoundStatement		8:45:185:185	1088277	1					
ANR	1088330	ReturnStatement	"return r_str_newf ( ""\\x1b[48;5;%s"" , col + 7 ) ;"	1656:2:37899:37940	1088277	0	True				
ANR	1088331	CallExpression	"r_str_newf ( ""\\x1b[48;5;%s"" , col + 7 )"		1088277	0					
ANR	1088332	Callee	r_str_newf		1088277	0					
ANR	1088333	Identifier	r_str_newf		1088277	0					
ANR	1088334	ArgumentList	"""\\x1b[48;5;%s"""		1088277	1					
ANR	1088335	Argument	"""\\x1b[48;5;%s"""		1088277	0					
ANR	1088336	PrimaryExpression	"""\\x1b[48;5;%s"""		1088277	0					
ANR	1088337	Argument	col + 7		1088277	1					
ANR	1088338	AdditiveExpression	col + 7		1088277	0		+			
ANR	1088339	Identifier	col		1088277	0					
ANR	1088340	PrimaryExpression	7		1088277	1					
ANR	1088341	ElseStatement	else		1088277	0					
ANR	1088342	IfStatement	"if ( ! strncmp ( col , ""\\x1b[4"" , 3 ) )"		1088277	0					
ANR	1088343	Condition	"! strncmp ( col , ""\\x1b[4"" , 3 )"	1657:12:37954:37980	1088277	0	True				
ANR	1088344	UnaryOperationExpression	"! strncmp ( col , ""\\x1b[4"" , 3 )"		1088277	0					
ANR	1088345	UnaryOperator	!		1088277	0					
ANR	1088346	CallExpression	"strncmp ( col , ""\\x1b[4"" , 3 )"		1088277	1					
ANR	1088347	Callee	strncmp		1088277	0					
ANR	1088348	Identifier	strncmp		1088277	0					
ANR	1088349	ArgumentList	col		1088277	1					
ANR	1088350	Argument	col		1088277	0					
ANR	1088351	Identifier	col		1088277	0					
ANR	1088352	Argument	"""\\x1b[4"""		1088277	1					
ANR	1088353	PrimaryExpression	"""\\x1b[4"""		1088277	0					
ANR	1088354	Argument	3		1088277	2					
ANR	1088355	PrimaryExpression	3		1088277	0					
ANR	1088356	CompoundStatement		11:41:296:296	1088277	1					
ANR	1088357	ReturnStatement	"return r_str_newf ( ""\\x1b[3%s"" , col + 3 ) ;"	1659:2:38009:38046	1088277	0	True				
ANR	1088358	CallExpression	"r_str_newf ( ""\\x1b[3%s"" , col + 3 )"		1088277	0					
ANR	1088359	Callee	r_str_newf		1088277	0					
ANR	1088360	Identifier	r_str_newf		1088277	0					
ANR	1088361	ArgumentList	"""\\x1b[3%s"""		1088277	1					
ANR	1088362	Argument	"""\\x1b[3%s"""		1088277	0					
ANR	1088363	PrimaryExpression	"""\\x1b[3%s"""		1088277	0					
ANR	1088364	Argument	col + 3		1088277	1					
ANR	1088365	AdditiveExpression	col + 3		1088277	0		+			
ANR	1088366	Identifier	col		1088277	0					
ANR	1088367	PrimaryExpression	3		1088277	1					
ANR	1088368	ElseStatement	else		1088277	0					
ANR	1088369	IfStatement	"if ( ! strncmp ( col , ""\\x1b[3"" , 3 ) )"		1088277	0					
ANR	1088370	Condition	"! strncmp ( col , ""\\x1b[3"" , 3 )"	1660:12:38060:38086	1088277	0	True				
ANR	1088371	UnaryOperationExpression	"! strncmp ( col , ""\\x1b[3"" , 3 )"		1088277	0					
ANR	1088372	UnaryOperator	!		1088277	0					
ANR	1088373	CallExpression	"strncmp ( col , ""\\x1b[3"" , 3 )"		1088277	1					
ANR	1088374	Callee	strncmp		1088277	0					
ANR	1088375	Identifier	strncmp		1088277	0					
ANR	1088376	ArgumentList	col		1088277	1					
ANR	1088377	Argument	col		1088277	0					
ANR	1088378	Identifier	col		1088277	0					
ANR	1088379	Argument	"""\\x1b[3"""		1088277	1					
ANR	1088380	PrimaryExpression	"""\\x1b[3"""		1088277	0					
ANR	1088381	Argument	3		1088277	2					
ANR	1088382	PrimaryExpression	3		1088277	0					
ANR	1088383	CompoundStatement		14:41:402:402	1088277	1					
ANR	1088384	ReturnStatement	"return r_str_newf ( ""\\x1b[4%s"" , col + 3 ) ;"	1662:2:38115:38152	1088277	0	True				
ANR	1088385	CallExpression	"r_str_newf ( ""\\x1b[4%s"" , col + 3 )"		1088277	0					
ANR	1088386	Callee	r_str_newf		1088277	0					
ANR	1088387	Identifier	r_str_newf		1088277	0					
ANR	1088388	ArgumentList	"""\\x1b[4%s"""		1088277	1					
ANR	1088389	Argument	"""\\x1b[4%s"""		1088277	0					
ANR	1088390	PrimaryExpression	"""\\x1b[4%s"""		1088277	0					
ANR	1088391	Argument	col + 3		1088277	1					
ANR	1088392	AdditiveExpression	col + 3		1088277	0		+			
ANR	1088393	Identifier	col		1088277	0					
ANR	1088394	PrimaryExpression	3		1088277	1					
ANR	1088395	ReturnStatement	return strdup ( col ) ;	1664:1:38158:38177	1088277	2	True				
ANR	1088396	CallExpression	strdup ( col )		1088277	0					
ANR	1088397	Callee	strdup		1088277	0					
ANR	1088398	Identifier	strdup		1088277	0					
ANR	1088399	ArgumentList	col		1088277	1					
ANR	1088400	Argument	col		1088277	0					
ANR	1088401	Identifier	col		1088277	0					
ANR	1088402	ReturnType	R_API char *		1088277	1					
ANR	1088403	Identifier	r_cons_swap_ground		1088277	2					
ANR	1088404	ParameterList	const char * col		1088277	3					
ANR	1088405	Parameter	const char * col	1647:31:37669:37683	1088277	0	True				
ANR	1088406	ParameterType	const char *		1088277	0					
ANR	1088407	Identifier	col		1088277	1					
ANR	1088408	CFGEntryNode	ENTRY		1088277		True				
ANR	1088409	CFGExitNode	EXIT		1088277		True				
ANR	1088410	Symbol	col		1088277						
ANR	1088411	Symbol	strncmp		1088277						
ANR	1088412	Symbol	NULL		1088277						
ANR	1088413	Symbol	r_str_newf		1088277						
ANR	1088414	Symbol	strdup		1088277						
ANR	1088415	Function	r_cons_drop	1667:0:38182:38339							
ANR	1088416	FunctionDef	r_cons_drop (int n)		1088415	0					
ANR	1088417	CompoundStatement		1667:30:38212:38339	1088415	0					
ANR	1088418	IfStatement	if ( n > I . context -> buffer_len )		1088415	0					
ANR	1088419	Condition	n > I . context -> buffer_len	1668:5:38219:38243	1088415	0	True				
ANR	1088420	RelationalExpression	n > I . context -> buffer_len		1088415	0		>			
ANR	1088421	Identifier	n		1088415	0					
ANR	1088422	PtrMemberAccess	I . context -> buffer_len		1088415	1					
ANR	1088423	MemberAccess	I . context		1088415	0					
ANR	1088424	Identifier	I		1088415	0					
ANR	1088425	Identifier	context		1088415	1					
ANR	1088426	Identifier	buffer_len		1088415	1					
ANR	1088427	CompoundStatement		2:32:33:33	1088415	1					
ANR	1088428	ExpressionStatement	I . context -> buffer_len = 0	1669:2:38250:38275	1088415	0	True				
ANR	1088429	AssignmentExpression	I . context -> buffer_len = 0		1088415	0		=			
ANR	1088430	PtrMemberAccess	I . context -> buffer_len		1088415	0					
ANR	1088431	MemberAccess	I . context		1088415	0					
ANR	1088432	Identifier	I		1088415	0					
ANR	1088433	Identifier	context		1088415	1					
ANR	1088434	Identifier	buffer_len		1088415	1					
ANR	1088435	PrimaryExpression	0		1088415	1					
ANR	1088436	ReturnStatement	return false ;	1670:2:38279:38291	1088415	1	True				
ANR	1088437	Identifier	false		1088415	0					
ANR	1088438	ExpressionStatement	I . context -> buffer_len -= n	1672:1:38297:38323	1088415	1	True				
ANR	1088439	AssignmentExpression	I . context -> buffer_len -= n		1088415	0		-=			
ANR	1088440	PtrMemberAccess	I . context -> buffer_len		1088415	0					
ANR	1088441	MemberAccess	I . context		1088415	0					
ANR	1088442	Identifier	I		1088415	0					
ANR	1088443	Identifier	context		1088415	1					
ANR	1088444	Identifier	buffer_len		1088415	1					
ANR	1088445	Identifier	n		1088415	1					
ANR	1088446	ReturnStatement	return true ;	1673:1:38326:38337	1088415	2	True				
ANR	1088447	Identifier	true		1088415	0					
ANR	1088448	ReturnType	R_API bool		1088415	1					
ANR	1088449	Identifier	r_cons_drop		1088415	2					
ANR	1088450	ParameterList	int n		1088415	3					
ANR	1088451	Parameter	int n	1667:23:38205:38209	1088415	0	True				
ANR	1088452	ParameterType	int		1088415	0					
ANR	1088453	Identifier	n		1088415	1					
ANR	1088454	CFGEntryNode	ENTRY		1088415		True				
ANR	1088455	CFGExitNode	EXIT		1088415		True				
ANR	1088456	Symbol	* I . context		1088415						
ANR	1088457	Symbol	* I		1088415						
ANR	1088458	Symbol	I . context -> buffer_len		1088415						
ANR	1088459	Symbol	false		1088415						
ANR	1088460	Symbol	true		1088415						
ANR	1088461	Symbol	I		1088415						
ANR	1088462	Symbol	I . context		1088415						
ANR	1088463	Symbol	n		1088415						
ANR	1088464	Function	r_cons_chop	1676:0:38342:38551							
ANR	1088465	FunctionDef	r_cons_chop ()		1088464	0					
ANR	1088466	CompoundStatement		1676:25:38367:38551	1088464	0					
ANR	1088467	WhileStatement	while ( I . context -> buffer_len > 0 )		1088464	0					
ANR	1088468	Condition	I . context -> buffer_len > 0	1677:8:38377:38401	1088464	0	True				
ANR	1088469	RelationalExpression	I . context -> buffer_len > 0		1088464	0		>			
ANR	1088470	PtrMemberAccess	I . context -> buffer_len		1088464	0					
ANR	1088471	MemberAccess	I . context		1088464	0					
ANR	1088472	Identifier	I		1088464	0					
ANR	1088473	Identifier	context		1088464	1					
ANR	1088474	Identifier	buffer_len		1088464	1					
ANR	1088475	PrimaryExpression	0		1088464	1					
ANR	1088476	CompoundStatement		3:2:40:94	1088464	1					
ANR	1088477	IdentifierDeclStatement	char ch = I . context -> buffer [ I . context -> buffer_len - 1 ] ;	1678:2:38408:38462	1088464	0	True				
ANR	1088478	IdentifierDecl	ch = I . context -> buffer [ I . context -> buffer_len - 1 ]		1088464	0					
ANR	1088479	IdentifierDeclType	char		1088464	0					
ANR	1088480	Identifier	ch		1088464	1					
ANR	1088481	AssignmentExpression	ch = I . context -> buffer [ I . context -> buffer_len - 1 ]		1088464	2		=			
ANR	1088482	Identifier	ch		1088464	0					
ANR	1088483	ArrayIndexing	I . context -> buffer [ I . context -> buffer_len - 1 ]		1088464	1					
ANR	1088484	PtrMemberAccess	I . context -> buffer		1088464	0					
ANR	1088485	MemberAccess	I . context		1088464	0					
ANR	1088486	Identifier	I		1088464	0					
ANR	1088487	Identifier	context		1088464	1					
ANR	1088488	Identifier	buffer		1088464	1					
ANR	1088489	AdditiveExpression	I . context -> buffer_len - 1		1088464	1		-			
ANR	1088490	PtrMemberAccess	I . context -> buffer_len		1088464	0					
ANR	1088491	MemberAccess	I . context		1088464	0					
ANR	1088492	Identifier	I		1088464	0					
ANR	1088493	Identifier	context		1088464	1					
ANR	1088494	Identifier	buffer_len		1088464	1					
ANR	1088495	PrimaryExpression	1		1088464	1					
ANR	1088496	IfStatement	if ( ch != '\\n' && ! IS_WHITESPACE ( ch ) )		1088464	1					
ANR	1088497	Condition	ch != '\\n' && ! IS_WHITESPACE ( ch )	1679:6:38470:38502	1088464	0	True				
ANR	1088498	AndExpression	ch != '\\n' && ! IS_WHITESPACE ( ch )		1088464	0		&&			
ANR	1088499	EqualityExpression	ch != '\\n'		1088464	0		!=			
ANR	1088500	Identifier	ch		1088464	0					
ANR	1088501	PrimaryExpression	'\\n'		1088464	1					
ANR	1088502	UnaryOperationExpression	! IS_WHITESPACE ( ch )		1088464	1					
ANR	1088503	UnaryOperator	!		1088464	0					
ANR	1088504	CallExpression	IS_WHITESPACE ( ch )		1088464	1					
ANR	1088505	Callee	IS_WHITESPACE		1088464	0					
ANR	1088506	Identifier	IS_WHITESPACE		1088464	0					
ANR	1088507	ArgumentList	ch		1088464	1					
ANR	1088508	Argument	ch		1088464	0					
ANR	1088509	Identifier	ch		1088464	0					
ANR	1088510	CompoundStatement		4:41:137:137	1088464	1					
ANR	1088511	BreakStatement	break ;	1680:3:38510:38515	1088464	0	True				
ANR	1088512	ExpressionStatement	I . context -> buffer_len --	1682:2:38523:38546	1088464	2	True				
ANR	1088513	PostIncDecOperationExpression	I . context -> buffer_len --		1088464	0					
ANR	1088514	PtrMemberAccess	I . context -> buffer_len		1088464	0					
ANR	1088515	MemberAccess	I . context		1088464	0					
ANR	1088516	Identifier	I		1088464	0					
ANR	1088517	Identifier	context		1088464	1					
ANR	1088518	Identifier	buffer_len		1088464	1					
ANR	1088519	IncDec	--		1088464	1					
ANR	1088520	ReturnType	R_API void		1088464	1					
ANR	1088521	Identifier	r_cons_chop		1088464	2					
ANR	1088522	ParameterList			1088464	3					
ANR	1088523	CFGEntryNode	ENTRY		1088464		True				
ANR	1088524	CFGExitNode	EXIT		1088464		True				
ANR	1088525	Symbol	* * I . context		1088464						
ANR	1088526	Symbol	* I . context -> buffer_len		1088464						
ANR	1088527	Symbol	* I . context		1088464						
ANR	1088528	Symbol	* * I		1088464						
ANR	1088529	Symbol	* I . context -> buffer		1088464						
ANR	1088530	Symbol	* I		1088464						
ANR	1088531	Symbol	I . context -> buffer_len		1088464						
ANR	1088532	Symbol	ch		1088464						
ANR	1088533	Symbol	I . context -> buffer		1088464						
ANR	1088534	Symbol	I		1088464						
ANR	1088535	Symbol	I . context		1088464						
ANR	1088536	Symbol	IS_WHITESPACE		1088464						
ANR	1088537	Function	r_cons_bind	1686:0:38554:38770							
ANR	1088538	FunctionDef	r_cons_bind (RConsBind * bind)		1088537	0					
ANR	1088539	CompoundStatement		1686:40:38594:38770	1088537	0					
ANR	1088540	IfStatement	if ( ! bind )		1088537	0					
ANR	1088541	Condition	! bind	1687:5:38601:38605	1088537	0	True				
ANR	1088542	UnaryOperationExpression	! bind		1088537	0					
ANR	1088543	UnaryOperator	!		1088537	0					
ANR	1088544	Identifier	bind		1088537	1					
ANR	1088545	CompoundStatement		2:12:13:13	1088537	1					
ANR	1088546	ReturnStatement	return ;	1688:2:38612:38618	1088537	0	True				
ANR	1088547	ExpressionStatement	bind -> get_size = r_cons_get_size	1690:1:38624:38656	1088537	1	True				
ANR	1088548	AssignmentExpression	bind -> get_size = r_cons_get_size		1088537	0		=			
ANR	1088549	PtrMemberAccess	bind -> get_size		1088537	0					
ANR	1088550	Identifier	bind		1088537	0					
ANR	1088551	Identifier	get_size		1088537	1					
ANR	1088552	Identifier	r_cons_get_size		1088537	1					
ANR	1088553	ExpressionStatement	bind -> get_cursor = r_cons_get_cursor	1691:1:38659:38695	1088537	2	True				
ANR	1088554	AssignmentExpression	bind -> get_cursor = r_cons_get_cursor		1088537	0		=			
ANR	1088555	PtrMemberAccess	bind -> get_cursor		1088537	0					
ANR	1088556	Identifier	bind		1088537	0					
ANR	1088557	Identifier	get_cursor		1088537	1					
ANR	1088558	Identifier	r_cons_get_cursor		1088537	1					
ANR	1088559	ExpressionStatement	bind -> cb_printf = r_cons_printf	1692:1:38698:38729	1088537	3	True				
ANR	1088560	AssignmentExpression	bind -> cb_printf = r_cons_printf		1088537	0		=			
ANR	1088561	PtrMemberAccess	bind -> cb_printf		1088537	0					
ANR	1088562	Identifier	bind		1088537	0					
ANR	1088563	Identifier	cb_printf		1088537	1					
ANR	1088564	Identifier	r_cons_printf		1088537	1					
ANR	1088565	ExpressionStatement	bind -> is_breaked = r_cons_is_breaked	1693:1:38732:38768	1088537	4	True				
ANR	1088566	AssignmentExpression	bind -> is_breaked = r_cons_is_breaked		1088537	0		=			
ANR	1088567	PtrMemberAccess	bind -> is_breaked		1088537	0					
ANR	1088568	Identifier	bind		1088537	0					
ANR	1088569	Identifier	is_breaked		1088537	1					
ANR	1088570	Identifier	r_cons_is_breaked		1088537	1					
ANR	1088571	ReturnType	R_API void		1088537	1					
ANR	1088572	Identifier	r_cons_bind		1088537	2					
ANR	1088573	ParameterList	RConsBind * bind		1088537	3					
ANR	1088574	Parameter	RConsBind * bind	1686:23:38577:38591	1088537	0	True				
ANR	1088575	ParameterType	RConsBind *		1088537	0					
ANR	1088576	Identifier	bind		1088537	1					
ANR	1088577	CFGEntryNode	ENTRY		1088537		True				
ANR	1088578	CFGExitNode	EXIT		1088537		True				
ANR	1088579	Symbol	r_cons_is_breaked		1088537						
ANR	1088580	Symbol	bind		1088537						
ANR	1088581	Symbol	bind -> get_cursor		1088537						
ANR	1088582	Symbol	r_cons_get_size		1088537						
ANR	1088583	Symbol	bind -> get_size		1088537						
ANR	1088584	Symbol	r_cons_printf		1088537						
ANR	1088585	Symbol	r_cons_get_cursor		1088537						
ANR	1088586	Symbol	* bind		1088537						
ANR	1088587	Symbol	bind -> cb_printf		1088537						
ANR	1088588	Symbol	bind -> is_breaked		1088537						
ANR	1088589	Function	r_cons_get_rune	1696:6:38779:39519							
ANR	1088590	FunctionDef	r_cons_get_rune (const ut8 ch)		1088589	0					
ANR	1088591	CompoundStatement		1696:48:38821:39519	1088589	0					
ANR	1088592	IfStatement	if ( ch >= RUNECODE_MIN && ch < RUNECODE_MAX )		1088589	0					
ANR	1088593	Condition	ch >= RUNECODE_MIN && ch < RUNECODE_MAX	1697:5:38828:38866	1088589	0	True				
ANR	1088594	AndExpression	ch >= RUNECODE_MIN && ch < RUNECODE_MAX		1088589	0		&&			
ANR	1088595	RelationalExpression	ch >= RUNECODE_MIN		1088589	0		>=			
ANR	1088596	Identifier	ch		1088589	0					
ANR	1088597	Identifier	RUNECODE_MIN		1088589	1					
ANR	1088598	RelationalExpression	ch < RUNECODE_MAX		1088589	1		<			
ANR	1088599	Identifier	ch		1088589	0					
ANR	1088600	Identifier	RUNECODE_MAX		1088589	1					
ANR	1088601	CompoundStatement		2:46:47:47	1088589	1					
ANR	1088602	SwitchStatement	switch ( ch )		1088589	0					
ANR	1088603	Condition	ch	1698:10:38881:38882	1088589	0	True				
ANR	1088604	Identifier	ch		1088589	0					
ANR	1088605	CompoundStatement		3:14:63:63	1088589	1					
ANR	1088606	Label	case RUNECODE_LINE_HORIZ :	1699:2:38889:38913	1088589	0	True				
ANR	1088607	Identifier	RUNECODE_LINE_HORIZ		1088589	0					
ANR	1088608	ReturnStatement	return RUNE_LINE_HORIZ ;	1699:28:38915:38937	1088589	1	True				
ANR	1088609	Identifier	RUNE_LINE_HORIZ		1088589	0					
ANR	1088610	Label	case RUNECODE_LINE_VERT :	1700:2:38941:38964	1088589	2	True				
ANR	1088611	Identifier	RUNECODE_LINE_VERT		1088589	0					
ANR	1088612	ReturnStatement	return RUNE_LINE_VERT ;	1700:28:38967:38988	1088589	3	True				
ANR	1088613	Identifier	RUNE_LINE_VERT		1088589	0					
ANR	1088614	Label	case RUNECODE_LINE_CROSS :	1701:2:38992:39016	1088589	4	True				
ANR	1088615	Identifier	RUNECODE_LINE_CROSS		1088589	0					
ANR	1088616	ReturnStatement	return RUNE_LINE_CROSS ;	1701:28:39018:39040	1088589	5	True				
ANR	1088617	Identifier	RUNE_LINE_CROSS		1088589	0					
ANR	1088618	Label	case RUNECODE_CORNER_TL :	1702:2:39044:39067	1088589	6	True				
ANR	1088619	Identifier	RUNECODE_CORNER_TL		1088589	0					
ANR	1088620	ReturnStatement	return RUNE_CORNER_TL ;	1702:28:39070:39091	1088589	7	True				
ANR	1088621	Identifier	RUNE_CORNER_TL		1088589	0					
ANR	1088622	Label	case RUNECODE_CORNER_TR :	1703:2:39095:39118	1088589	8	True				
ANR	1088623	Identifier	RUNECODE_CORNER_TR		1088589	0					
ANR	1088624	ReturnStatement	return RUNE_CORNER_TR ;	1703:28:39121:39142	1088589	9	True				
ANR	1088625	Identifier	RUNE_CORNER_TR		1088589	0					
ANR	1088626	Label	case RUNECODE_CORNER_BR :	1704:2:39146:39169	1088589	10	True				
ANR	1088627	Identifier	RUNECODE_CORNER_BR		1088589	0					
ANR	1088628	ReturnStatement	return RUNE_CORNER_BR ;	1704:28:39172:39193	1088589	11	True				
ANR	1088629	Identifier	RUNE_CORNER_BR		1088589	0					
ANR	1088630	Label	case RUNECODE_CORNER_BL :	1705:2:39197:39220	1088589	12	True				
ANR	1088631	Identifier	RUNECODE_CORNER_BL		1088589	0					
ANR	1088632	ReturnStatement	return RUNE_CORNER_BL ;	1705:28:39223:39244	1088589	13	True				
ANR	1088633	Identifier	RUNE_CORNER_BL		1088589	0					
ANR	1088634	Label	case RUNECODE_CURVE_CORNER_TL :	1706:2:39248:39277	1088589	14	True				
ANR	1088635	Identifier	RUNECODE_CURVE_CORNER_TL		1088589	0					
ANR	1088636	ReturnStatement	return RUNE_CURVE_CORNER_TL ;	1706:34:39280:39307	1088589	15	True				
ANR	1088637	Identifier	RUNE_CURVE_CORNER_TL		1088589	0					
ANR	1088638	Label	case RUNECODE_CURVE_CORNER_TR :	1707:2:39311:39340	1088589	16	True				
ANR	1088639	Identifier	RUNECODE_CURVE_CORNER_TR		1088589	0					
ANR	1088640	ReturnStatement	return RUNE_CURVE_CORNER_TR ;	1707:34:39343:39370	1088589	17	True				
ANR	1088641	Identifier	RUNE_CURVE_CORNER_TR		1088589	0					
ANR	1088642	Label	case RUNECODE_CURVE_CORNER_BR :	1708:2:39374:39403	1088589	18	True				
ANR	1088643	Identifier	RUNECODE_CURVE_CORNER_BR		1088589	0					
ANR	1088644	ReturnStatement	return RUNE_CURVE_CORNER_BR ;	1708:34:39406:39433	1088589	19	True				
ANR	1088645	Identifier	RUNE_CURVE_CORNER_BR		1088589	0					
ANR	1088646	Label	case RUNECODE_CURVE_CORNER_BL :	1709:2:39437:39466	1088589	20	True				
ANR	1088647	Identifier	RUNECODE_CURVE_CORNER_BL		1088589	0					
ANR	1088648	ReturnStatement	return RUNE_CURVE_CORNER_BL ;	1709:34:39469:39496	1088589	21	True				
ANR	1088649	Identifier	RUNE_CURVE_CORNER_BL		1088589	0					
ANR	1088650	ReturnStatement	return NULL ;	1712:1:39506:39517	1088589	1	True				
ANR	1088651	Identifier	NULL		1088589	0					
ANR	1088652	ReturnType	const char *		1088589	1					
ANR	1088653	Identifier	r_cons_get_rune		1088589	2					
ANR	1088654	ParameterList	const ut8 ch		1088589	3					
ANR	1088655	Parameter	const ut8 ch	1696:34:38807:38818	1088589	0	True				
ANR	1088656	ParameterType	const ut8		1088589	0					
ANR	1088657	Identifier	ch		1088589	1					
ANR	1088658	CFGEntryNode	ENTRY		1088589		True				
ANR	1088659	CFGExitNode	EXIT		1088589		True				
ANR	1088660	Symbol	RUNE_CORNER_TR		1088589						
ANR	1088661	Symbol	RUNE_CURVE_CORNER_TR		1088589						
ANR	1088662	Symbol	NULL		1088589						
ANR	1088663	Symbol	ch		1088589						
ANR	1088664	Symbol	RUNE_LINE_VERT		1088589						
ANR	1088665	Symbol	RUNECODE_MAX		1088589						
ANR	1088666	Symbol	RUNE_CORNER_BL		1088589						
ANR	1088667	Symbol	RUNE_CURVE_CORNER_BL		1088589						
ANR	1088668	Symbol	RUNE_CORNER_BR		1088589						
ANR	1088669	Symbol	RUNE_CURVE_CORNER_BR		1088589						
ANR	1088670	Symbol	RUNE_LINE_HORIZ		1088589						
ANR	1088671	Symbol	RUNE_CORNER_TL		1088589						
ANR	1088672	Symbol	RUNE_CURVE_CORNER_TL		1088589						
ANR	1088673	Symbol	RUNECODE_MIN		1088589						
ANR	1088674	Symbol	RUNE_LINE_CROSS		1088589						
ANR	1088675	Function	r_cons_cmd_help	1730:0:39901:41186							
ANR	1088676	FunctionDef	"r_cons_cmd_help (const char * help [ ] , bool use_color)"		1088675	0					
ANR	1088677	CompoundStatement		1730:63:39964:41186	1088675	0					
ANR	1088678	IdentifierDeclStatement	RCons * cons = r_cons_singleton ( ) ;	1731:1:39967:40000	1088675	0	True				
ANR	1088679	IdentifierDecl	* cons = r_cons_singleton ( )		1088675	0					
ANR	1088680	IdentifierDeclType	RCons *		1088675	0					
ANR	1088681	Identifier	cons		1088675	1					
ANR	1088682	AssignmentExpression	* cons = r_cons_singleton ( )		1088675	2		=			
ANR	1088683	Identifier	cons		1088675	0					
ANR	1088684	CallExpression	r_cons_singleton ( )		1088675	1					
ANR	1088685	Callee	r_cons_singleton		1088675	0					
ANR	1088686	Identifier	r_cons_singleton		1088675	0					
ANR	1088687	ArgumentList			1088675	1					
ANR	1088688	IdentifierDeclStatement	"const char * pal_args_color = use_color ? cons -> context -> pal . args : """" , * pal_help_color = use_color ? cons -> context -> pal . help : """" , * pal_reset = use_color ? cons -> context -> pal . reset : """" ;"	1732:1:40003:40194	1088675	1	True				
ANR	1088689	IdentifierDecl	"* pal_args_color = use_color ? cons -> context -> pal . args : """""		1088675	0					
ANR	1088690	IdentifierDeclType	const char *		1088675	0					
ANR	1088691	Identifier	pal_args_color		1088675	1					
ANR	1088692	AssignmentExpression	"* pal_args_color = use_color ? cons -> context -> pal . args : """""		1088675	2		=			
ANR	1088693	Identifier	pal_args_color		1088675	0					
ANR	1088694	ConditionalExpression	"use_color ? cons -> context -> pal . args : """""		1088675	1					
ANR	1088695	Condition	use_color		1088675	0					
ANR	1088696	Identifier	use_color		1088675	0					
ANR	1088697	MemberAccess	cons -> context -> pal . args		1088675	1					
ANR	1088698	PtrMemberAccess	cons -> context -> pal		1088675	0					
ANR	1088699	PtrMemberAccess	cons -> context		1088675	0					
ANR	1088700	Identifier	cons		1088675	0					
ANR	1088701	Identifier	context		1088675	1					
ANR	1088702	Identifier	pal		1088675	1					
ANR	1088703	Identifier	args		1088675	1					
ANR	1088704	PrimaryExpression	""""""		1088675	2					
ANR	1088705	IdentifierDecl	"* pal_help_color = use_color ? cons -> context -> pal . help : """""		1088675	1					
ANR	1088706	IdentifierDeclType	const char *		1088675	0					
ANR	1088707	Identifier	pal_help_color		1088675	1					
ANR	1088708	AssignmentExpression	"* pal_help_color = use_color ? cons -> context -> pal . help : """""		1088675	2		=			
ANR	1088709	Identifier	pal_help_color		1088675	0					
ANR	1088710	ConditionalExpression	"use_color ? cons -> context -> pal . help : """""		1088675	1					
ANR	1088711	Condition	use_color		1088675	0					
ANR	1088712	Identifier	use_color		1088675	0					
ANR	1088713	MemberAccess	cons -> context -> pal . help		1088675	1					
ANR	1088714	PtrMemberAccess	cons -> context -> pal		1088675	0					
ANR	1088715	PtrMemberAccess	cons -> context		1088675	0					
ANR	1088716	Identifier	cons		1088675	0					
ANR	1088717	Identifier	context		1088675	1					
ANR	1088718	Identifier	pal		1088675	1					
ANR	1088719	Identifier	help		1088675	1					
ANR	1088720	PrimaryExpression	""""""		1088675	2					
ANR	1088721	IdentifierDecl	"* pal_reset = use_color ? cons -> context -> pal . reset : """""		1088675	2					
ANR	1088722	IdentifierDeclType	const char *		1088675	0					
ANR	1088723	Identifier	pal_reset		1088675	1					
ANR	1088724	AssignmentExpression	"* pal_reset = use_color ? cons -> context -> pal . reset : """""		1088675	2		=			
ANR	1088725	Identifier	pal_reset		1088675	0					
ANR	1088726	ConditionalExpression	"use_color ? cons -> context -> pal . reset : """""		1088675	1					
ANR	1088727	Condition	use_color		1088675	0					
ANR	1088728	Identifier	use_color		1088675	0					
ANR	1088729	MemberAccess	cons -> context -> pal . reset		1088675	1					
ANR	1088730	PtrMemberAccess	cons -> context -> pal		1088675	0					
ANR	1088731	PtrMemberAccess	cons -> context		1088675	0					
ANR	1088732	Identifier	cons		1088675	0					
ANR	1088733	Identifier	context		1088675	1					
ANR	1088734	Identifier	pal		1088675	1					
ANR	1088735	Identifier	reset		1088675	1					
ANR	1088736	PrimaryExpression	""""""		1088675	2					
ANR	1088737	IdentifierDeclStatement	"int i , max_length = 0 ;"	1735:1:40197:40218	1088675	2	True				
ANR	1088738	IdentifierDecl	i		1088675	0					
ANR	1088739	IdentifierDeclType	int		1088675	0					
ANR	1088740	Identifier	i		1088675	1					
ANR	1088741	IdentifierDecl	max_length = 0		1088675	1					
ANR	1088742	IdentifierDeclType	int		1088675	0					
ANR	1088743	Identifier	max_length		1088675	1					
ANR	1088744	AssignmentExpression	max_length = 0		1088675	2		=			
ANR	1088745	Identifier	max_length		1088675	0					
ANR	1088746	PrimaryExpression	0		1088675	1					
ANR	1088747	IdentifierDeclStatement	"const char * usage_str = ""Usage:"" ;"	1736:1:40221:40253	1088675	3	True				
ANR	1088748	IdentifierDecl	"* usage_str = ""Usage:"""		1088675	0					
ANR	1088749	IdentifierDeclType	const char *		1088675	0					
ANR	1088750	Identifier	usage_str		1088675	1					
ANR	1088751	AssignmentExpression	"* usage_str = ""Usage:"""		1088675	2		=			
ANR	1088752	Identifier	usage_str		1088675	0					
ANR	1088753	PrimaryExpression	"""Usage:"""		1088675	1					
ANR	1088754	ForStatement	for ( i = 0 ; help [ i ] ; i += 3 )		1088675	4					
ANR	1088755	ForInit	i = 0 ;	1738:6:40262:40267	1088675	0	True				
ANR	1088756	AssignmentExpression	i = 0		1088675	0		=			
ANR	1088757	Identifier	i		1088675	0					
ANR	1088758	PrimaryExpression	0		1088675	1					
ANR	1088759	Condition	help [ i ]	1738:13:40269:40275	1088675	1	True				
ANR	1088760	ArrayIndexing	help [ i ]		1088675	0					
ANR	1088761	Identifier	help		1088675	0					
ANR	1088762	Identifier	i		1088675	1					
ANR	1088763	AssignmentExpression	i += 3	1738:22:40278:40283	1088675	2	True	+=			
ANR	1088764	Identifier	i		1088675	0					
ANR	1088765	PrimaryExpression	3		1088675	1					
ANR	1088766	CompoundStatement		11:2:356:387	1088675	3					
ANR	1088767	IdentifierDeclStatement	int len0 = strlen ( help [ i ] ) ;	1739:2:40290:40317	1088675	0	True				
ANR	1088768	IdentifierDecl	len0 = strlen ( help [ i ] )		1088675	0					
ANR	1088769	IdentifierDeclType	int		1088675	0					
ANR	1088770	Identifier	len0		1088675	1					
ANR	1088771	AssignmentExpression	len0 = strlen ( help [ i ] )		1088675	2		=			
ANR	1088772	Identifier	len0		1088675	0					
ANR	1088773	CallExpression	strlen ( help [ i ] )		1088675	1					
ANR	1088774	Callee	strlen		1088675	0					
ANR	1088775	Identifier	strlen		1088675	0					
ANR	1088776	ArgumentList	help [ i ]		1088675	1					
ANR	1088777	Argument	help [ i ]		1088675	0					
ANR	1088778	ArrayIndexing	help [ i ]		1088675	0					
ANR	1088779	Identifier	help		1088675	0					
ANR	1088780	Identifier	i		1088675	1					
ANR	1088781	IdentifierDeclStatement	int len1 = strlen ( help [ i + 1 ] ) ;	1740:2:40321:40352	1088675	1	True				
ANR	1088782	IdentifierDecl	len1 = strlen ( help [ i + 1 ] )		1088675	0					
ANR	1088783	IdentifierDeclType	int		1088675	0					
ANR	1088784	Identifier	len1		1088675	1					
ANR	1088785	AssignmentExpression	len1 = strlen ( help [ i + 1 ] )		1088675	2		=			
ANR	1088786	Identifier	len1		1088675	0					
ANR	1088787	CallExpression	strlen ( help [ i + 1 ] )		1088675	1					
ANR	1088788	Callee	strlen		1088675	0					
ANR	1088789	Identifier	strlen		1088675	0					
ANR	1088790	ArgumentList	help [ i + 1 ]		1088675	1					
ANR	1088791	Argument	help [ i + 1 ]		1088675	0					
ANR	1088792	ArrayIndexing	help [ i + 1 ]		1088675	0					
ANR	1088793	Identifier	help		1088675	0					
ANR	1088794	AdditiveExpression	i + 1		1088675	1		+			
ANR	1088795	Identifier	i		1088675	0					
ANR	1088796	PrimaryExpression	1		1088675	1					
ANR	1088797	IfStatement	if ( i )		1088675	2					
ANR	1088798	Condition	i	1741:6:40360:40360	1088675	0	True				
ANR	1088799	Identifier	i		1088675	0					
ANR	1088800	CompoundStatement		12:9:398:398	1088675	1					
ANR	1088801	ExpressionStatement	"max_length = R_MAX ( max_length , len0 + len1 )"	1742:3:40368:40412	1088675	0	True				
ANR	1088802	AssignmentExpression	"max_length = R_MAX ( max_length , len0 + len1 )"		1088675	0		=			
ANR	1088803	Identifier	max_length		1088675	0					
ANR	1088804	CallExpression	"R_MAX ( max_length , len0 + len1 )"		1088675	1					
ANR	1088805	Callee	R_MAX		1088675	0					
ANR	1088806	Identifier	R_MAX		1088675	0					
ANR	1088807	ArgumentList	max_length		1088675	1					
ANR	1088808	Argument	max_length		1088675	0					
ANR	1088809	Identifier	max_length		1088675	0					
ANR	1088810	Argument	len0 + len1		1088675	1					
ANR	1088811	AdditiveExpression	len0 + len1		1088675	0		+			
ANR	1088812	Identifier	len0		1088675	0					
ANR	1088813	Identifier	len1		1088675	1					
ANR	1088814	ForStatement	for ( i = 0 ; help [ i ] ; i += 3 )		1088675	5					
ANR	1088815	ForInit	i = 0 ;	1746:6:40428:40433	1088675	0	True				
ANR	1088816	AssignmentExpression	i = 0		1088675	0		=			
ANR	1088817	Identifier	i		1088675	0					
ANR	1088818	PrimaryExpression	0		1088675	1					
ANR	1088819	Condition	help [ i ]	1746:13:40435:40441	1088675	1	True				
ANR	1088820	ArrayIndexing	help [ i ]		1088675	0					
ANR	1088821	Identifier	help		1088675	0					
ANR	1088822	Identifier	i		1088675	1					
ANR	1088823	AssignmentExpression	i += 3	1746:22:40444:40449	1088675	2	True	+=			
ANR	1088824	Identifier	i		1088675	0					
ANR	1088825	PrimaryExpression	3		1088675	1					
ANR	1088826	CompoundStatement		17:30:487:487	1088675	3					
ANR	1088827	IfStatement	"if ( ! strncmp ( help [ i ] , usage_str , strlen ( usage_str ) ) )"		1088675	0					
ANR	1088828	Condition	"! strncmp ( help [ i ] , usage_str , strlen ( usage_str ) )"	1747:6:40460:40508	1088675	0	True				
ANR	1088829	UnaryOperationExpression	"! strncmp ( help [ i ] , usage_str , strlen ( usage_str ) )"		1088675	0					
ANR	1088830	UnaryOperator	!		1088675	0					
ANR	1088831	CallExpression	"strncmp ( help [ i ] , usage_str , strlen ( usage_str ) )"		1088675	1					
ANR	1088832	Callee	strncmp		1088675	0					
ANR	1088833	Identifier	strncmp		1088675	0					
ANR	1088834	ArgumentList	help [ i ]		1088675	1					
ANR	1088835	Argument	help [ i ]		1088675	0					
ANR	1088836	ArrayIndexing	help [ i ]		1088675	0					
ANR	1088837	Identifier	help		1088675	0					
ANR	1088838	Identifier	i		1088675	1					
ANR	1088839	Argument	usage_str		1088675	1					
ANR	1088840	Identifier	usage_str		1088675	0					
ANR	1088841	Argument	strlen ( usage_str )		1088675	2					
ANR	1088842	CallExpression	strlen ( usage_str )		1088675	0					
ANR	1088843	Callee	strlen		1088675	0					
ANR	1088844	Identifier	strlen		1088675	0					
ANR	1088845	ArgumentList	usage_str		1088675	1					
ANR	1088846	Argument	usage_str		1088675	0					
ANR	1088847	Identifier	usage_str		1088675	0					
ANR	1088848	CompoundStatement		18:57:546:546	1088675	1					
ANR	1088849	ExpressionStatement	"r_cons_printf ( ""%s%s %s  %s%s\\n"" , pal_args_color , help [ i ] , help [ i + 1 ] , help [ i + 2 ] , pal_reset )"	1749:3:40585:40684	1088675	0	True				
ANR	1088850	CallExpression	"r_cons_printf ( ""%s%s %s  %s%s\\n"" , pal_args_color , help [ i ] , help [ i + 1 ] , help [ i + 2 ] , pal_reset )"		1088675	0					
ANR	1088851	Callee	r_cons_printf		1088675	0					
ANR	1088852	Identifier	r_cons_printf		1088675	0					
ANR	1088853	ArgumentList	"""%s%s %s  %s%s\\n"""		1088675	1					
ANR	1088854	Argument	"""%s%s %s  %s%s\\n"""		1088675	0					
ANR	1088855	PrimaryExpression	"""%s%s %s  %s%s\\n"""		1088675	0					
ANR	1088856	Argument	pal_args_color		1088675	1					
ANR	1088857	Identifier	pal_args_color		1088675	0					
ANR	1088858	Argument	help [ i ]		1088675	2					
ANR	1088859	ArrayIndexing	help [ i ]		1088675	0					
ANR	1088860	Identifier	help		1088675	0					
ANR	1088861	Identifier	i		1088675	1					
ANR	1088862	Argument	help [ i + 1 ]		1088675	3					
ANR	1088863	ArrayIndexing	help [ i + 1 ]		1088675	0					
ANR	1088864	Identifier	help		1088675	0					
ANR	1088865	AdditiveExpression	i + 1		1088675	1		+			
ANR	1088866	Identifier	i		1088675	0					
ANR	1088867	PrimaryExpression	1		1088675	1					
ANR	1088868	Argument	help [ i + 2 ]		1088675	4					
ANR	1088869	ArrayIndexing	help [ i + 2 ]		1088675	0					
ANR	1088870	Identifier	help		1088675	0					
ANR	1088871	AdditiveExpression	i + 2		1088675	1		+			
ANR	1088872	Identifier	i		1088675	0					
ANR	1088873	PrimaryExpression	2		1088675	1					
ANR	1088874	Argument	pal_reset		1088675	5					
ANR	1088875	Identifier	pal_reset		1088675	0					
ANR	1088876	ContinueStatement	continue ;	1751:3:40689:40697	1088675	1	True				
ANR	1088877	IfStatement	if ( ! help [ i + 1 ] [ 0 ] && ! help [ i + 2 ] [ 0 ] )		1088675	1					
ANR	1088878	Condition	! help [ i + 1 ] [ 0 ] && ! help [ i + 2 ] [ 0 ]	1753:6:40709:40742	1088675	0	True				
ANR	1088879	AndExpression	! help [ i + 1 ] [ 0 ] && ! help [ i + 2 ] [ 0 ]		1088675	0		&&			
ANR	1088880	UnaryOperationExpression	! help [ i + 1 ] [ 0 ]		1088675	0					
ANR	1088881	UnaryOperator	!		1088675	0					
ANR	1088882	ArrayIndexing	help [ i + 1 ] [ 0 ]		1088675	1					
ANR	1088883	ArrayIndexing	help [ i + 1 ]		1088675	0					
ANR	1088884	Identifier	help		1088675	0					
ANR	1088885	AdditiveExpression	i + 1		1088675	1		+			
ANR	1088886	Identifier	i		1088675	0					
ANR	1088887	PrimaryExpression	1		1088675	1					
ANR	1088888	PrimaryExpression	0		1088675	1					
ANR	1088889	UnaryOperationExpression	! help [ i + 2 ] [ 0 ]		1088675	1					
ANR	1088890	UnaryOperator	!		1088675	0					
ANR	1088891	ArrayIndexing	help [ i + 2 ] [ 0 ]		1088675	1					
ANR	1088892	ArrayIndexing	help [ i + 2 ]		1088675	0					
ANR	1088893	Identifier	help		1088675	0					
ANR	1088894	AdditiveExpression	i + 2		1088675	1		+			
ANR	1088895	Identifier	i		1088675	0					
ANR	1088896	PrimaryExpression	2		1088675	1					
ANR	1088897	PrimaryExpression	0		1088675	1					
ANR	1088898	CompoundStatement		24:42:780:780	1088675	1					
ANR	1088899	ExpressionStatement	"r_cons_printf ( ""%s%s%s\\n"" , pal_help_color , help [ i ] , pal_reset )"	1755:3:40793:40855	1088675	0	True				
ANR	1088900	CallExpression	"r_cons_printf ( ""%s%s%s\\n"" , pal_help_color , help [ i ] , pal_reset )"		1088675	0					
ANR	1088901	Callee	r_cons_printf		1088675	0					
ANR	1088902	Identifier	r_cons_printf		1088675	0					
ANR	1088903	ArgumentList	"""%s%s%s\\n"""		1088675	1					
ANR	1088904	Argument	"""%s%s%s\\n"""		1088675	0					
ANR	1088905	PrimaryExpression	"""%s%s%s\\n"""		1088675	0					
ANR	1088906	Argument	pal_help_color		1088675	1					
ANR	1088907	Identifier	pal_help_color		1088675	0					
ANR	1088908	Argument	help [ i ]		1088675	2					
ANR	1088909	ArrayIndexing	help [ i ]		1088675	0					
ANR	1088910	Identifier	help		1088675	0					
ANR	1088911	Identifier	i		1088675	1					
ANR	1088912	Argument	pal_reset		1088675	3					
ANR	1088913	Identifier	pal_reset		1088675	0					
ANR	1088914	ElseStatement	else		1088675	0					
ANR	1088915	CompoundStatement		30:3:1000:1069	1088675	0					
ANR	1088916	IdentifierDeclStatement	int str_length = strlen ( help [ i ] ) + strlen ( help [ i + 1 ] ) ;	1758:3:40904:40960	1088675	0	True				
ANR	1088917	IdentifierDecl	str_length = strlen ( help [ i ] ) + strlen ( help [ i + 1 ] )		1088675	0					
ANR	1088918	IdentifierDeclType	int		1088675	0					
ANR	1088919	Identifier	str_length		1088675	1					
ANR	1088920	AssignmentExpression	str_length = strlen ( help [ i ] ) + strlen ( help [ i + 1 ] )		1088675	2		=			
ANR	1088921	Identifier	str_length		1088675	0					
ANR	1088922	AdditiveExpression	strlen ( help [ i ] ) + strlen ( help [ i + 1 ] )		1088675	1		+			
ANR	1088923	CallExpression	strlen ( help [ i ] )		1088675	0					
ANR	1088924	Callee	strlen		1088675	0					
ANR	1088925	Identifier	strlen		1088675	0					
ANR	1088926	ArgumentList	help [ i ]		1088675	1					
ANR	1088927	Argument	help [ i ]		1088675	0					
ANR	1088928	ArrayIndexing	help [ i ]		1088675	0					
ANR	1088929	Identifier	help		1088675	0					
ANR	1088930	Identifier	i		1088675	1					
ANR	1088931	CallExpression	strlen ( help [ i + 1 ] )		1088675	1					
ANR	1088932	Callee	strlen		1088675	0					
ANR	1088933	Identifier	strlen		1088675	0					
ANR	1088934	ArgumentList	help [ i + 1 ]		1088675	1					
ANR	1088935	Argument	help [ i + 1 ]		1088675	0					
ANR	1088936	ArrayIndexing	help [ i + 1 ]		1088675	0					
ANR	1088937	Identifier	help		1088675	0					
ANR	1088938	AdditiveExpression	i + 1		1088675	1		+			
ANR	1088939	Identifier	i		1088675	0					
ANR	1088940	PrimaryExpression	1		1088675	1					
ANR	1088941	IdentifierDeclStatement	int padding = ( str_length < max_length ) ? ( max_length - str_length ) : 0 ;	1759:3:40965:41034	1088675	1	True				
ANR	1088942	IdentifierDecl	padding = ( str_length < max_length ) ? ( max_length - str_length ) : 0		1088675	0					
ANR	1088943	IdentifierDeclType	int		1088675	0					
ANR	1088944	Identifier	padding		1088675	1					
ANR	1088945	AssignmentExpression	padding = ( str_length < max_length ) ? ( max_length - str_length ) : 0		1088675	2		=			
ANR	1088946	Identifier	padding		1088675	0					
ANR	1088947	ConditionalExpression	( str_length < max_length ) ? ( max_length - str_length ) : 0		1088675	1					
ANR	1088948	Condition	str_length < max_length		1088675	0					
ANR	1088949	RelationalExpression	str_length < max_length		1088675	0		<			
ANR	1088950	Identifier	str_length		1088675	0					
ANR	1088951	Identifier	max_length		1088675	1					
ANR	1088952	AdditiveExpression	max_length - str_length		1088675	1		-			
ANR	1088953	Identifier	max_length		1088675	0					
ANR	1088954	Identifier	str_length		1088675	1					
ANR	1088955	PrimaryExpression	0		1088675	2					
ANR	1088956	ExpressionStatement	"r_cons_printf ( ""| %s%s%s%*s  %s%s%s\\n"" , help [ i ] , pal_args_color , help [ i + 1 ] , padding , """" , pal_help_color , help [ i + 2 ] , pal_reset )"	1760:3:41039:41177	1088675	2	True				
ANR	1088957	CallExpression	"r_cons_printf ( ""| %s%s%s%*s  %s%s%s\\n"" , help [ i ] , pal_args_color , help [ i + 1 ] , padding , """" , pal_help_color , help [ i + 2 ] , pal_reset )"		1088675	0					
ANR	1088958	Callee	r_cons_printf		1088675	0					
ANR	1088959	Identifier	r_cons_printf		1088675	0					
ANR	1088960	ArgumentList	"""| %s%s%s%*s  %s%s%s\\n"""		1088675	1					
ANR	1088961	Argument	"""| %s%s%s%*s  %s%s%s\\n"""		1088675	0					
ANR	1088962	PrimaryExpression	"""| %s%s%s%*s  %s%s%s\\n"""		1088675	0					
ANR	1088963	Argument	help [ i ]		1088675	1					
ANR	1088964	ArrayIndexing	help [ i ]		1088675	0					
ANR	1088965	Identifier	help		1088675	0					
ANR	1088966	Identifier	i		1088675	1					
ANR	1088967	Argument	pal_args_color		1088675	2					
ANR	1088968	Identifier	pal_args_color		1088675	0					
ANR	1088969	Argument	help [ i + 1 ]		1088675	3					
ANR	1088970	ArrayIndexing	help [ i + 1 ]		1088675	0					
ANR	1088971	Identifier	help		1088675	0					
ANR	1088972	AdditiveExpression	i + 1		1088675	1		+			
ANR	1088973	Identifier	i		1088675	0					
ANR	1088974	PrimaryExpression	1		1088675	1					
ANR	1088975	Argument	padding		1088675	4					
ANR	1088976	Identifier	padding		1088675	0					
ANR	1088977	Argument	""""""		1088675	5					
ANR	1088978	PrimaryExpression	""""""		1088675	0					
ANR	1088979	Argument	pal_help_color		1088675	6					
ANR	1088980	Identifier	pal_help_color		1088675	0					
ANR	1088981	Argument	help [ i + 2 ]		1088675	7					
ANR	1088982	ArrayIndexing	help [ i + 2 ]		1088675	0					
ANR	1088983	Identifier	help		1088675	0					
ANR	1088984	AdditiveExpression	i + 2		1088675	1		+			
ANR	1088985	Identifier	i		1088675	0					
ANR	1088986	PrimaryExpression	2		1088675	1					
ANR	1088987	Argument	pal_reset		1088675	8					
ANR	1088988	Identifier	pal_reset		1088675	0					
ANR	1088989	ReturnType	R_API void		1088675	1					
ANR	1088990	Identifier	r_cons_cmd_help		1088675	2					
ANR	1088991	ParameterList	"const char * help [ ] , bool use_color"		1088675	3					
ANR	1088992	Parameter	const char * help [ ]	1730:27:39928:39945	1088675	0	True				
ANR	1088993	ParameterType	const char * [ ]		1088675	0					
ANR	1088994	Identifier	help		1088675	1					
ANR	1088995	Parameter	bool use_color	1730:47:39948:39961	1088675	1	True				
ANR	1088996	ParameterType	bool		1088675	0					
ANR	1088997	Identifier	use_color		1088675	1					
ANR	1088998	CFGEntryNode	ENTRY		1088675		True				
ANR	1088999	CFGExitNode	EXIT		1088675		True				
ANR	1089000	Symbol	cons -> context		1088675						
ANR	1089001	Symbol	pal_help_color		1088675						
ANR	1089002	Symbol	* * cons		1088675						
ANR	1089003	Symbol	len0		1088675						
ANR	1089004	Symbol	len1		1088675						
ANR	1089005	Symbol	strlen		1088675						
ANR	1089006	Symbol	strncmp		1088675						
ANR	1089007	Symbol	r_cons_singleton		1088675						
ANR	1089008	Symbol	pal_reset		1088675						
ANR	1089009	Symbol	cons		1088675						
ANR	1089010	Symbol	max_length		1088675						
ANR	1089011	Symbol	padding		1088675						
ANR	1089012	Symbol	* * i		1088675						
ANR	1089013	Symbol	* help		1088675						
ANR	1089014	Symbol	i		1088675						
ANR	1089015	Symbol	cons -> context -> pal . args		1088675						
ANR	1089016	Symbol	use_color		1088675						
ANR	1089017	Symbol	str_length		1088675						
ANR	1089018	Symbol	help		1088675						
ANR	1089019	Symbol	pal_args_color		1088675						
ANR	1089020	Symbol	* i		1088675						
ANR	1089021	Symbol	* * help		1088675						
ANR	1089022	Symbol	cons -> context -> pal . help		1088675						
ANR	1089023	Symbol	R_MAX		1088675						
ANR	1089024	Symbol	cons -> context -> pal . reset		1088675						
ANR	1089025	Symbol	* cons		1088675						
ANR	1089026	Symbol	usage_str		1088675						
ANR	1089027	Symbol	cons -> context -> pal		1088675						
ANR	1089028	Symbol	* cons -> context		1088675						
ANR	1089029	Function	r_cons_clear_buffer	1767:0:41189:41283							
ANR	1089030	FunctionDef	r_cons_clear_buffer ()		1089029	0					
ANR	1089031	CompoundStatement		1767:37:41226:41283	1089029	0					
ANR	1089032	Statement	write	1769:1:41242:41246	1089029	0	True				
ANR	1089033	Statement	(	1769:7:41248:41248	1089029	1	True				
ANR	1089034	Statement	1	1769:8:41249:41249	1089029	2	True				
ANR	1089035	Statement	","	1769:9:41250:41250	1089029	3	True				
ANR	1089036	Statement	"""\\x1b"""	1769:11:41252:41257	1089029	4	True				
ANR	1089037	Statement	"""c\\x1b[3J"""	1769:18:41259:41268	1089029	5	True				
ANR	1089038	Statement	","	1769:28:41269:41269	1089029	6	True				
ANR	1089039	Statement	6	1769:31:41272:41272	1089029	7	True				
ANR	1089040	Statement	)	1769:32:41273:41273	1089029	8	True				
ANR	1089041	ExpressionStatement		1769:33:41274:41274	1089029	9	True				
ANR	1089042	ReturnType	R_API void		1089029	1					
ANR	1089043	Identifier	r_cons_clear_buffer		1089029	2					
ANR	1089044	ParameterList			1089029	3					
ANR	1089045	CFGEntryNode	ENTRY		1089029		True				
ANR	1089046	CFGExitNode	EXIT		1089029		True				
